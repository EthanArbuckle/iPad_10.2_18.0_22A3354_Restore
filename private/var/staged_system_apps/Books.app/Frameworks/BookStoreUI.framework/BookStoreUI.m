void sub_37D4(id a1)
{
  void *v1;
  id v2;
  void *v3;
  id v4;
  void *v5;
  _QWORD v6[4];

  v1 = (void *)objc_claimAutoreleasedReturnValue(+[TUIAttributeSet supportedAttributesSizeAndIntrinsic](TUIAttributeSet, "supportedAttributesSizeAndIntrinsic"));
  v2 = objc_msgSend(v1, "mutableCopy");

  v6[0] = TUIAttributeNameTitle;
  v6[1] = CFSTR("control-color");
  v6[2] = CFSTR("progress-color");
  v6[3] = TUIAttributeNameN;
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", v6, 4));
  objc_msgSend(v2, "addAttributesFromArray:", v3);

  v4 = objc_msgSend(v2, "copy");
  v5 = (void *)qword_32BF10;
  qword_32BF10 = (uint64_t)v4;

}

void sub_3900(id a1)
{
  uint64_t v1;
  void *v2;
  _QWORD v3[3];
  _QWORD v4[3];

  v3[0] = CFSTR("control-color");
  v3[1] = CFSTR("progress-color");
  v4[0] = &off_2FB858;
  v4[1] = &off_2FB858;
  v3[2] = CFSTR("night-mode");
  v4[2] = &off_2FB870;
  v1 = objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", v4, v3, 3));
  v2 = (void *)qword_32BF20;
  qword_32BF20 = v1;

}

void sub_4AC4(uint64_t a1)
{
  id v2;
  void *v3;
  uint64_t v4;
  void *v5;
  id v6;

  v2 = objc_msgSend(objc_alloc(*(Class *)(a1 + 48)), "initWithScreenshots:andSelectedIndex:", *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 56));
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[JSABridge sharedInstance](JSABridge, "sharedInstance"));
  v4 = *(_QWORD *)(a1 + 40);
  v6 = v2;
  v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v6, 1));
  objc_msgSend(v3, "enqueueValueCall:arguments:file:line:", v4, v5, CFSTR("BSUIScreenshotViewController.m"), 76);

}

uint64_t sub_4B94(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

void sub_50B4(uint64_t a1)
{
  void *v2;
  id v3;

  v3 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "collectionView"));
  v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSIndexPath indexPathForRow:inSection:](NSIndexPath, "indexPathForRow:inSection:", objc_msgSend(*(id *)(a1 + 32), "selectedIndex"), 0));
  objc_msgSend(v3, "scrollToItemAtIndexPath:atScrollPosition:animated:", v2, 16, 1);

}

void sub_67C4(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_67E8(uint64_t a1, void *a2)
{
  id v3;
  id WeakRetained;
  void *v5;
  id v6;
  id v7;
  id v8;
  uint64_t v9;
  void *v10;
  id v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  id v16;
  id v17;
  uint64_t v18;
  void *v19;
  id v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  _BYTE v29[128];
  _BYTE v30[128];

  v3 = a2;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  if (WeakRetained)
  {
    v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableArray arrayWithCapacity:](NSMutableArray, "arrayWithCapacity:", objc_msgSend(v3, "count")));
    v25 = 0u;
    v26 = 0u;
    v27 = 0u;
    v28 = 0u;
    v6 = v3;
    v7 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v25, v30, 16);
    if (v7)
    {
      v8 = v7;
      v9 = *(_QWORD *)v26;
      do
      {
        v10 = 0;
        do
        {
          if (*(_QWORD *)v26 != v9)
            objc_enumerationMutation(v6);
          v11 = BSUIFixRelativeURLInEntryDictionary(*(void **)(*((_QWORD *)&v25 + 1) + 8 * (_QWORD)v10));
          v12 = (void *)objc_claimAutoreleasedReturnValue(v11);
          objc_msgSend(v5, "addObject:", v12);

          v10 = (char *)v10 + 1;
        }
        while (v8 != v10);
        v8 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v25, v30, 16);
      }
      while (v8);
    }

    v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "currentStackName"));
    v14 = (void *)objc_claimAutoreleasedReturnValue(+[TUIFeedContent feedContentFromDictionaries:stackName:](TUIFeedContent, "feedContentFromDictionaries:stackName:", v5, v13));

    v23 = 0u;
    v24 = 0u;
    v21 = 0u;
    v22 = 0u;
    v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v14, "entries", 0));
    v16 = objc_msgSend(v15, "countByEnumeratingWithState:objects:count:", &v21, v29, 16);
    if (v16)
    {
      v17 = v16;
      v18 = *(_QWORD *)v22;
      do
      {
        v19 = 0;
        do
        {
          if (*(_QWORD *)v22 != v18)
            objc_enumerationMutation(v15);
          objc_msgSend(*(id *)(*((_QWORD *)&v21 + 1) + 8 * (_QWORD)v19), "setDelegate:", WeakRetained);
          v19 = (char *)v19 + 1;
        }
        while (v17 != v19);
        v17 = objc_msgSend(v15, "countByEnumeratingWithState:objects:count:", &v21, v29, 16);
      }
      while (v17);
    }

    v20 = objc_loadWeakRetained((id *)(a1 + 48));
    objc_msgSend(v20, "setFeedContentLoadingState:", 2);
    objc_msgSend(v20, "_renderContent:completion:", v14, *(_QWORD *)(a1 + 40));

  }
}

void sub_6B2C(uint64_t a1, void *a2)
{
  _BOOL8 v2;
  uint64_t v3;
  id v4;
  id v5;

  v2 = a2 != 0;
  v3 = *(_QWORD *)(a1 + 32);
  v4 = BSUIFixRelativeURLInEntryDictionary(a2);
  v5 = (id)objc_claimAutoreleasedReturnValue(v4);
  (*(void (**)(uint64_t, _BOOL8, id))(v3 + 16))(v3, v2, v5);

}

void sub_6D08(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  uint64_t v7;
  NSObject *v8;

  v5 = a2;
  v6 = a3;
  if (v6)
  {
    v7 = BSUIGoalsSharableImageRendererLog();
    v8 = objc_claimAutoreleasedReturnValue(v7);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
      sub_2381F4(v6, v8);

  }
  (*(void (**)(void))(*(_QWORD *)(a1 + 32) + 16))();

}

void sub_70D0(uint64_t a1)
{
  id v1;

  v1 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "dimmingView"));
  objc_msgSend(v1, "setAlpha:", 1.0);

}

void sub_71C0(uint64_t a1)
{
  id v1;

  v1 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "dimmingView"));
  objc_msgSend(v1, "setAlpha:", 0.0);

}

void sub_73B8(id a1)
{
  void *v1;
  id v2;
  void *v3;
  id v4;
  void *v5;
  _QWORD v6[2];

  v1 = (void *)objc_claimAutoreleasedReturnValue(+[TUIAttributeSet supportedAttributesSize](TUIAttributeSet, "supportedAttributesSize"));
  v2 = objc_msgSend(v1, "mutableCopy");

  v6[0] = TUIAttributeNameCornerRadius;
  v6[1] = TUIAttributeNameURL;
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", v6, 2));
  objc_msgSend(v2, "addAttributesFromArray:", v3);

  v4 = objc_msgSend(v2, "copy");
  v5 = (void *)qword_32BF38;
  qword_32BF38 = (uint64_t)v4;

}

void sub_7590(uint64_t a1)
{
  id v1;
  void *v2;

  v1 = objc_msgSend(objc_alloc(*(Class *)(a1 + 32)), "initWithMemoryCapacity:diskCapacity:", 512000, 5242881);
  v2 = (void *)qword_32BF50;
  qword_32BF50 = (uint64_t)v1;

}

void sub_7798(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  id v6;
  void *v7;
  id v8;
  void *v9;
  id v10;

  v10 = a2;
  v6 = a4;
  if (objc_msgSend(v10, "length"))
    v7 = (void *)objc_claimAutoreleasedReturnValue(+[UIImage imageWithData:](UIImage, "imageWithData:", v10));
  else
    v7 = 0;
  v8 = objc_retainBlock(*(id *)(a1 + 32));
  v9 = v8;
  if (v8)
    (*((void (**)(id, void *, id))v8 + 2))(v8, v7, v6);

}

void sub_7C0C(uint64_t a1)
{
  void *v2;
  id v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  id v8;
  id v9;
  uint64_t v10;
  void *i;
  uint64_t v12;
  void *v13;
  id v14;
  id v15;
  uint64_t v16;
  void *j;
  void *v18;
  void *v19;
  void *v20;
  id v21;
  id v22;
  id v23;
  uint64_t v24;
  void *k;
  uint64_t v26;
  void *v27;
  void *v28;
  id v29;
  id v30;
  id obj;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  _BYTE v44[128];
  _BYTE v45[128];
  _BYTE v46[128];
  uint64_t v47;

  os_unfair_lock_lock((os_unfair_lock_t)(*(_QWORD *)(a1 + 32) + 8));
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "strongObservers"));
  v3 = objc_msgSend(v2, "copy");

  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "weakObservers"));
  v29 = objc_msgSend(v4, "copy");

  os_unfair_lock_unlock((os_unfair_lock_t)(*(_QWORD *)(a1 + 32) + 8));
  objc_msgSend(*(id *)(a1 + 32), "updateWithValueIfChanged:", *(_QWORD *)(a1 + 40));
  if (*(_QWORD *)(a1 + 40))
  {
    v47 = *(_QWORD *)(a1 + 40);
    v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v47, 1));
  }
  else
  {
    v5 = 0;
  }
  v6 = (void *)objc_claimAutoreleasedReturnValue(+[JSABridge sharedInstance](JSABridge, "sharedInstance"));
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "onUpdate"));
  objc_msgSend(v6, "enqueueValueCall:arguments:file:line:", v7, v5, CFSTR("BSUIDynamicValue.m"), 77);

  v42 = 0u;
  v43 = 0u;
  v40 = 0u;
  v41 = 0u;
  obj = v3;
  v8 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v40, v46, 16);
  if (v8)
  {
    v9 = v8;
    v10 = *(_QWORD *)v41;
    do
    {
      for (i = 0; i != v9; i = (char *)i + 1)
      {
        if (*(_QWORD *)v41 != v10)
          objc_enumerationMutation(obj);
        v12 = *(_QWORD *)(*((_QWORD *)&v40 + 1) + 8 * (_QWORD)i);
        v13 = (void *)objc_claimAutoreleasedReturnValue(+[JSABridge sharedInstance](JSABridge, "sharedInstance"));
        objc_msgSend(v13, "enqueueValueCall:arguments:file:line:", v12, v5, CFSTR("BSUIDynamicValue.m"), 80);

      }
      v9 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v40, v46, 16);
    }
    while (v9);
  }

  v28 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableSet set](NSMutableSet, "set"));
  v36 = 0u;
  v37 = 0u;
  v38 = 0u;
  v39 = 0u;
  v30 = v29;
  v14 = objc_msgSend(v30, "countByEnumeratingWithState:objects:count:", &v36, v45, 16);
  if (v14)
  {
    v15 = v14;
    v16 = *(_QWORD *)v37;
    do
    {
      for (j = 0; j != v15; j = (char *)j + 1)
      {
        if (*(_QWORD *)v37 != v16)
          objc_enumerationMutation(v30);
        v18 = *(void **)(*((_QWORD *)&v36 + 1) + 8 * (_QWORD)j);
        v19 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v18, "value"));
        if (v19)
        {
          v20 = (void *)objc_claimAutoreleasedReturnValue(+[JSABridge sharedInstance](JSABridge, "sharedInstance"));
          objc_msgSend(v20, "enqueueValueCall:arguments:file:line:", v19, v5, CFSTR("BSUIDynamicValue.m"), 87);

        }
        else
        {
          objc_msgSend(v28, "addObject:", v18);
        }

      }
      v15 = objc_msgSend(v30, "countByEnumeratingWithState:objects:count:", &v36, v45, 16);
    }
    while (v15);
  }

  v34 = 0u;
  v35 = 0u;
  v32 = 0u;
  v33 = 0u;
  v21 = v28;
  v22 = objc_msgSend(v21, "countByEnumeratingWithState:objects:count:", &v32, v44, 16);
  if (v22)
  {
    v23 = v22;
    v24 = *(_QWORD *)v33;
    do
    {
      for (k = 0; k != v23; k = (char *)k + 1)
      {
        if (*(_QWORD *)v33 != v24)
          objc_enumerationMutation(v21);
        v26 = *(_QWORD *)(*((_QWORD *)&v32 + 1) + 8 * (_QWORD)k);
        os_unfair_lock_lock((os_unfair_lock_t)(*(_QWORD *)(a1 + 32) + 8));
        v27 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "weakObservers"));
        objc_msgSend(v27, "removeObject:", v26);

        os_unfair_lock_unlock((os_unfair_lock_t)(*(_QWORD *)(a1 + 32) + 8));
      }
      v23 = objc_msgSend(v21, "countByEnumeratingWithState:objects:count:", &v32, v44, 16);
    }
    while (v23);
  }

}

void sub_8098(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_80B0(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_80C0(uint64_t a1)
{

}

void sub_80C8(uint64_t a1, void *a2)
{
  objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40), a2);
}

void sub_90B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_90D8(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_90E8(uint64_t a1)
{

}

void sub_90F0(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  id v7;
  id v8;
  uint64_t v9;
  NSObject *v10;

  v7 = a2;
  v8 = a4;
  if (v8)
  {
    v9 = BSUIGoalsSharableImageRendererLog();
    v10 = objc_claimAutoreleasedReturnValue(v9);
    if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
      sub_2382C8((uint64_t)v8, v10);

  }
  else
  {
    objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), a2);
  }
  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));

}

void sub_9EA8(uint64_t a1)
{
  void (**v2)(void);
  void (**v3)(void);

  objc_msgSend(*(id *)(a1 + 32), "setTintColor:", *(_QWORD *)(a1 + 40));
  v2 = (void (**)(void))objc_retainBlock(*(id *)(a1 + 48));
  if (v2)
  {
    v3 = v2;
    v2[2]();
    v2 = v3;
  }

}

void sub_A92C(uint64_t a1)
{
  double v2;
  double v3;
  id WeakRetained;
  void *v5;
  id v6;

  v6 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "progress"));
  objc_msgSend(v6, "doubleValue");
  v3 = v2;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "hostingViewController"));
  objc_msgSend(v5, "setProgressSeconds:", v3);

}

void sub_AC00(id a1)
{
  BSUILibraryItemStateProvider *v1;
  void *v2;

  v1 = objc_alloc_init(BSUILibraryItemStateProvider);
  v2 = (void *)qword_32BF58;
  qword_32BF58 = (uint64_t)v1;

}

void sub_AFB0(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  unsigned __int8 v9;
  uint64_t v10;
  NSObject *v11;
  void *v12;
  _QWORD v13[4];
  id v14;
  id v15;
  unsigned __int8 v16;
  uint8_t buf[4];
  void *v18;

  v3 = a2;
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "userInfo"));
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "objectForKeyedSubscript:", BLDownloadQueuePropertyStoreItemIdentifier));
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "stringValue"));

  if (v6)
  {
    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "userInfo"));
    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "objectForKeyedSubscript:", BLDownloadQueuePropertyPurchaseParameters));
    v9 = +[BLUtilities isPreOrderFromBuyParameters:](BLUtilities, "isPreOrderFromBuyParameters:", v8);

    v10 = BKLibraryItemStateProviderLog();
    v11 = objc_claimAutoreleasedReturnValue(v10);
    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138412290;
      v18 = v6;
      _os_log_impl(&dword_0, v11, OS_LOG_TYPE_DEFAULT, "Purchased completed, updating media library jalisco with adamId %@", buf, 0xCu);
    }

    objc_initWeak((id *)buf, *(id *)(a1 + 32));
    v12 = (void *)objc_claimAutoreleasedReturnValue(+[MPCloudController sharedCloudController](MPCloudController, "sharedCloudController"));
    v13[0] = _NSConcreteStackBlock;
    v13[1] = 3221225472;
    v13[2] = sub_B1B8;
    v13[3] = &unk_2E41B8;
    objc_copyWeak(&v15, (id *)buf);
    v14 = v6;
    v16 = v9;
    objc_msgSend(v12, "updateJaliscoMediaLibraryWithReason:completionHandler:", 1, v13);

    objc_destroyWeak(&v15);
    objc_destroyWeak((id *)buf);
  }

}

void sub_B18C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  id *v17;

  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_B1B8(uint64_t a1, int a2)
{
  uint64_t v4;
  NSObject *v5;
  NSObject *v6;
  id WeakRetained;
  uint64_t v8;
  void *v9;
  uint8_t v10[16];

  v4 = BKLibraryItemStateProviderLog();
  v5 = objc_claimAutoreleasedReturnValue(v4);
  v6 = v5;
  if (a2)
  {
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_impl(&dword_0, v6, OS_LOG_TYPE_DEFAULT, "Successfully updated jalisco media library from purchase success", v10, 2u);
    }
  }
  else if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
  {
    sub_23833C(v6);
  }

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  v8 = *(_QWORD *)(a1 + 32);
  v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithBool:](NSNumber, "numberWithBool:", *(unsigned __int8 *)(a1 + 48)));
  objc_msgSend(WeakRetained, "_cacheNewPurchaseWithIdentifier:isPreorder:", v8, v9);

}

void sub_B28C(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  void *v6;
  uint64_t v7;
  NSObject *v8;
  void *v9;
  id v10;
  int v11;
  void *v12;

  v3 = a2;
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "userInfo"));
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "objectForKeyedSubscript:", BLDownloadQueuePropertyStoreItemIdentifier));
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "stringValue"));

  if (v6)
  {
    v7 = BKLibraryItemStateProviderLog();
    v8 = objc_claimAutoreleasedReturnValue(v7);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      v11 = 138412290;
      v12 = v6;
      _os_log_impl(&dword_0, v8, OS_LOG_TYPE_DEFAULT, "Purchase failed for storeID %@", (uint8_t *)&v11, 0xCu);
    }

    v9 = *(void **)(a1 + 32);
    v10 = objc_initWeak((id *)&v11, v9);
    objc_msgSend(v9, "updateStateToPurchaseFailedForIdentifier:", v6);

    objc_destroyWeak((id *)&v11);
  }

}

void sub_B3B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, id a9)
{
  objc_destroyWeak(&a9);
  _Unwind_Resume(a1);
}

id sub_B590(uint64_t a1)
{
  return objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 32), "setObject:forKeyedSubscript:", &off_2FB8A0, *(_QWORD *)(a1 + 40));
}

id sub_B648(uint64_t a1)
{
  return objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 32), "setObject:forKeyedSubscript:", 0, *(_QWORD *)(a1 + 40));
}

id sub_B6FC(uint64_t a1)
{
  return objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 32), "setObject:forKeyedSubscript:", 0, *(_QWORD *)(a1 + 40));
}

void sub_B798(uint64_t a1)
{
  id v2;

  v2 = (id)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithBool:](NSNumber, "numberWithBool:", *(unsigned __int8 *)(a1 + 48)));
  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 40), "setObject:forKeyedSubscript:", v2, *(_QWORD *)(a1 + 40));

}

void sub_B874(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;
  id v5;

  v2 = *(unsigned __int8 *)(a1 + 48);
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 48), "objectForKeyedSubscript:", *(_QWORD *)(a1 + 40)));
  objc_msgSend(v3, "setIsFinished:", v2);

  v4 = *(unsigned __int8 *)(a1 + 48);
  v5 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 48), "objectForKeyedSubscript:", *(_QWORD *)(a1 + 40)));
  objc_msgSend(v5, "setHasSpecifiedFinishedDate:", v4);

}

id sub_B9B8(_QWORD *a1)
{
  return objc_msgSend(*(id *)(a1[4] + 64), "setObject:forKeyedSubscript:", a1[6], a1[5]);
}

void sub_BA78(_QWORD *a1)
{
  void *v2;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1[4] + 64), "objectForKeyedSubscript:", a1[5]));
  *(_BYTE *)(*(_QWORD *)(a1[6] + 8) + 24) = v2 != 0;

}

void sub_BCA8(uint64_t a1)
{
  id v2;
  uint64_t v3;
  void *v4;

  v2 = objc_msgSend(*(id *)(a1 + 40), "copy");
  v3 = *(_QWORD *)(a1 + 32);
  v4 = *(void **)(v3 + 24);
  *(_QWORD *)(v3 + 24) = v2;

}

void sub_BE20(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_BE40(_QWORD *a1)
{
  if ((objc_msgSend(*(id *)(a1[4] + 56), "containsObject:", a1[5]) & 1) == 0)
    *(_BYTE *)(*(_QWORD *)(a1[6] + 8) + 24) = 1;
  objc_msgSend(*(id *)(a1[4] + 32), "setObject:forKeyedSubscript:", 0, a1[5]);
  return objc_msgSend(*(id *)(a1[4] + 56), "addObject:", a1[5]);
}

void sub_BFD8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_BFF8(_QWORD *a1)
{
  if (objc_msgSend(*(id *)(a1[4] + 56), "containsObject:", a1[5]))
    *(_BYTE *)(*(_QWORD *)(a1[6] + 8) + 24) = 1;
  objc_msgSend(*(id *)(a1[4] + 32), "setObject:forKeyedSubscript:", 0, a1[5]);
  return objc_msgSend(*(id *)(a1[4] + 56), "removeObject:", a1[5]);
}

id sub_C0FC(_QWORD *a1)
{
  id result;

  result = objc_msgSend(*(id *)(a1[4] + 56), "containsObject:", a1[5]);
  *(_BYTE *)(*(_QWORD *)(a1[6] + 8) + 24) = (_BYTE)result;
  return result;
}

void sub_C318(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 112), 8);
  _Unwind_Resume(a1);
}

uint64_t sub_C344(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_C354(uint64_t a1)
{

}

void sub_C35C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v2 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1[4] + 32), "objectForKeyedSubscript:", a1[5]));
  v3 = *(_QWORD *)(a1[6] + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

id sub_C398(_QWORD *a1)
{
  id result;

  result = objc_msgSend(*(id *)(a1[4] + 56), "containsObject:", a1[5]);
  *(_BYTE *)(*(_QWORD *)(a1[6] + 8) + 24) = (_BYTE)result;
  return result;
}

void sub_CB0C(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  id v4;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 64), "objectForKeyedSubscript:", *(_QWORD *)(a1 + 40)));
  if (v2)
  {
    v4 = v2;
    if (objc_msgSend(v2, "BOOLValue"))
      v3 = 3;
    else
      v3 = 4;
    objc_msgSend(*(id *)(a1 + 48), "setLibrary:", v3);
    objc_msgSend(*(id *)(a1 + 48), "setIsPurchased:", 1);
    objc_msgSend(*(id *)(a1 + 48), "setDownload:", 0);
    v2 = v4;
  }

}

void sub_CF28(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 144), 8);
  _Unwind_Resume(a1);
}

void sub_CF58(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v2 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1[4] + 40), "objectForKeyedSubscript:", a1[5]));
  v3 = *(_QWORD *)(a1[6] + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

void sub_CF94(uint64_t a1, char a2)
{
  uint64_t v4;
  void *v5;
  NSObject *v6;
  void *v7;
  _QWORD block[5];
  id v9;
  char v10;

  block[0] = _NSConcreteStackBlock;
  block[2] = sub_D040;
  block[3] = &unk_2E4208;
  v4 = *(_QWORD *)(a1 + 32);
  v5 = *(void **)(a1 + 40);
  v6 = *(NSObject **)(v4 + 8);
  block[1] = 3221225472;
  block[4] = v4;
  v9 = v5;
  v10 = a2;
  dispatch_sync(v6, block);
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_stateForItemIdentifier:", *(_QWORD *)(a1 + 40)));
  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 88), "insertOrUpdateItemWithIdentifier:state:", *(_QWORD *)(a1 + 40), v7);

}

void sub_D040(uint64_t a1)
{
  id v2;

  v2 = (id)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithBool:](NSNumber, "numberWithBool:", *(unsigned __int8 *)(a1 + 48)));
  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 40), "setObject:forKeyedSubscript:", v2, *(_QWORD *)(a1 + 40));

}

void sub_D090(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v2 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1[4] + 48), "objectForKeyedSubscript:", a1[5]));
  v3 = *(_QWORD *)(a1[6] + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

void sub_D0CC(uint64_t a1, void *a2)
{
  _BSUILibraryItemFinishedState *v3;
  void *v4;
  void *v5;
  void *v6;
  uint64_t v7;
  void *v8;
  NSObject *v9;
  _BSUILibraryItemFinishedState *v10;
  void *v11;
  id v12;
  _QWORD block[5];
  id v14;
  _BSUILibraryItemFinishedState *v15;

  v12 = a2;
  v3 = objc_alloc_init(_BSUILibraryItemFinishedState);
  if (v12)
  {
    -[_BSUILibraryItemFinishedState setIsFinished:](v3, "setIsFinished:", objc_msgSend(v12, "isFinished"));
    if (_os_feature_enabled_impl("Books", "iveReadThisFullFlow"))
    {
      v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "dateFinished"));
      if (v4)
      {
        v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "dateFinished"));
        v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate distantPast](NSDate, "distantPast"));
        -[_BSUILibraryItemFinishedState setHasSpecifiedFinishedDate:](v3, "setHasSpecifiedFinishedDate:", objc_msgSend(v5, "isEqualToDate:", v6) ^ 1);

      }
      else
      {
        -[_BSUILibraryItemFinishedState setHasSpecifiedFinishedDate:](v3, "setHasSpecifiedFinishedDate:", 0);
      }

    }
    else
    {
      -[_BSUILibraryItemFinishedState setHasSpecifiedFinishedDate:](v3, "setHasSpecifiedFinishedDate:", 1);
    }
  }
  v7 = *(_QWORD *)(a1 + 32);
  v8 = *(void **)(a1 + 40);
  v9 = *(NSObject **)(v7 + 8);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_D258;
  block[3] = &unk_2E4230;
  block[4] = v7;
  v14 = v8;
  v15 = v3;
  v10 = v3;
  dispatch_sync(v9, block);
  v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_stateForItemIdentifier:", *(_QWORD *)(a1 + 40)));
  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 88), "insertOrUpdateItemWithIdentifier:state:", *(_QWORD *)(a1 + 40), v11);

}

id sub_D258(_QWORD *a1)
{
  return objc_msgSend(*(id *)(a1[4] + 48), "setObject:forKeyedSubscript:", a1[6], a1[5]);
}

void sub_D268(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v2 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1[4] + 40), "objectForKeyedSubscript:", a1[5]));
  v3 = *(_QWORD *)(a1[6] + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

void sub_D2A4(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v2 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1[4] + 48), "objectForKeyedSubscript:", a1[5]));
  v3 = *(_QWORD *)(a1[6] + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

void sub_D394(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v2 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 24), "allObjects"));
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

void sub_D488(_QWORD *a1)
{
  void *v2;
  void *v3;
  uint64_t v4;
  id v5;
  id v6;

  objc_msgSend(*(id *)(a1[4] + 72), "setObject:forKeyedSubscript:", a1[6], a1[5]);
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1[4] + 80), "objectForKeyedSubscript:", a1[6]));
  if (!v2)
  {
    v3 = *(void **)(a1[4] + 80);
    v4 = a1[6];
    v5 = objc_alloc_init((Class)NSMutableSet);
    objc_msgSend(v3, "setObject:forKeyedSubscript:", v5, v4);
    v2 = v5;
  }
  v6 = v2;
  objc_msgSend(v2, "addObject:", a1[5]);

}

void sub_D5D4(_QWORD *a1)
{
  id v2;

  v2 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1[4] + 80), "objectForKeyedSubscript:", a1[5]));
  objc_msgSend(v2, "removeObject:", a1[6]);
  if (!objc_msgSend(v2, "count"))
    objc_msgSend(*(id *)(a1[4] + 80), "removeObjectForKey:", a1[5]);
  objc_msgSend(*(id *)(a1[4] + 72), "removeObjectForKey:", a1[6]);

}

void sub_D70C(_QWORD *a1)
{
  id v2;

  v2 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1[4] + 80), "objectForKeyedSubscript:", a1[5]));
  *(_BYTE *)(*(_QWORD *)(a1[6] + 8) + 24) = objc_msgSend(v2, "count") != 0;

}

id BSUIGetLibraryItemStateProvider()
{
  void *v0;
  uint64_t v1;
  void *v2;

  v0 = (void *)qword_32BF68;
  if (!qword_32BF68)
  {
    v1 = objc_claimAutoreleasedReturnValue(+[BSUILibraryItemStateProvider sharedInstance](BSUILibraryItemStateProvider, "sharedInstance"));
    v2 = (void *)qword_32BF68;
    qword_32BF68 = v1;

    v0 = (void *)qword_32BF68;
  }
  return v0;
}

void BSUISetLibraryItemStateProvider(id obj)
{
  objc_storeStrong((id *)&qword_32BF68, obj);
}

id BSUIGetLibraryItemStateUpdater()
{
  void *v0;
  uint64_t v1;
  void *v2;

  v0 = (void *)qword_32BF70;
  if (!qword_32BF70)
  {
    v1 = objc_claimAutoreleasedReturnValue(+[BSUILibraryItemStateProvider sharedInstance](BSUILibraryItemStateProvider, "sharedInstance"));
    v2 = (void *)qword_32BF70;
    qword_32BF70 = v1;

    v0 = (void *)qword_32BF70;
  }
  return v0;
}

void BSUISetLibraryItemStateUpdater(id obj)
{
  objc_storeStrong((id *)&qword_32BF70, obj);
}

id BSUIContentTasteControllerLog()
{
  if (qword_32BF80 != -1)
    dispatch_once(&qword_32BF80, &stru_2E4318);
  return (id)qword_32BF78;
}

void sub_DDFC(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.iBooks", "BSUIContentTasteController");
  v2 = (void *)qword_32BF78;
  qword_32BF78 = (uint64_t)v1;

}

void sub_DE78(id a1)
{
  BSUIContentTasteController *v1;
  void *v2;

  v1 = objc_alloc_init(BSUIContentTasteController);
  v2 = (void *)qword_32BF88;
  qword_32BF88 = (uint64_t)v1;

}

void sub_DF20(id a1, id a2)
{
  void *v2;
  void (**v3)(void);

  v3 = (void (**)(void))a2;
  v2 = (void *)objc_claimAutoreleasedReturnValue(+[JSATasteManager sharedInstance](JSATasteManager, "sharedInstance"));
  objc_msgSend(v2, "syncTastes");

  v3[2]();
}

void sub_DFF0(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;

  v3 = a2;
  v4 = (void *)objc_claimAutoreleasedReturnValue(+[JSABridge sharedInstance](JSABridge, "sharedInstance"));
  v5 = *(_QWORD *)(a1 + 32);
  v6 = v3;
  if (!v3)
    v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSNull null](NSNull, "null"));
  v8 = v6;
  v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v8, 1));
  objc_msgSend(v4, "enqueueValueCall:arguments:file:line:", v5, v7, CFSTR("BSUIContentTasteController.m"), 72);

  if (!v3)
}

void sub_E264(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_E280(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id v7;
  NSObject *v8;
  id WeakRetained;
  id v10;
  NSObject *v11;
  void (**v12)(void);
  void (**v13)(void);
  void (*v14)(void);
  void (**v15)(void);

  v5 = a2;
  v6 = a3;
  if (v6)
  {
    v7 = BSUIContentTasteControllerLog();
    v8 = objc_claimAutoreleasedReturnValue(v7);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
      sub_2383A8();

  }
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    if (v5)
    {
      objc_msgSend(WeakRetained, "_loveOrHateFromTasteInteger:", objc_msgSend(v5, "taste"));
      objc_msgSend(WeakRetained, "_explicitlyDeclinedFromTasteInteger:", objc_msgSend(v5, "taste"));
    }
    v15 = (void (**)(void))objc_retainBlock(*(id *)(a1 + 32));
    v13 = v15;
    if (v15)
    {
      v14 = v15[2];
      goto LABEL_14;
    }
  }
  else
  {
    v10 = BSUIContentTasteControllerLog();
    v11 = objc_claimAutoreleasedReturnValue(v10);
    if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
      sub_23837C();

    v12 = (void (**)(void))objc_retainBlock(*(id *)(a1 + 32));
    v13 = v12;
    if (v12)
    {
      v14 = v12[2];
LABEL_14:
      v14();
    }
  }

}

void sub_E510(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 56));
  _Unwind_Resume(a1);
}

void sub_E52C(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id v7;
  NSObject *v8;
  id WeakRetained;
  void *v10;
  id v11;
  NSObject *v12;
  id v13;
  void *v14;
  _QWORD v15[4];
  id v16;
  id v17;

  v5 = a2;
  v6 = a3;
  if (v6)
  {
    v7 = BSUIContentTasteControllerLog();
    v8 = objc_claimAutoreleasedReturnValue(v7);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
      sub_2383A8();

  }
  if (!v5)
    v5 = objc_msgSend(objc_alloc((Class)BCMutableAssetDetail), "initWithAssetID:", *(_QWORD *)(a1 + 32));
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  if (WeakRetained)
  {
    objc_msgSend(v5, "setTaste:", objc_msgSend(WeakRetained, "_tasteIntegerFromTasteType:explicitlyDeclined:", *(_QWORD *)(a1 + 64), objc_msgSend(WeakRetained, "_explicitlyDeclinedFromTasteInteger:", objc_msgSend(v5, "taste"))));
    objc_msgSend(v5, "setTasteSyncedToStore:", 1);
    v10 = *(void **)(a1 + 40);
    v15[0] = _NSConcreteStackBlock;
    v15[1] = 3221225472;
    v15[2] = sub_E6F8;
    v15[3] = &unk_2E4410;
    objc_copyWeak(&v17, (id *)(a1 + 56));
    v16 = *(id *)(a1 + 48);
    objc_msgSend(v10, "setAssetDetail:completion:", v5, v15);

    objc_destroyWeak(&v17);
  }
  else
  {
    v11 = BSUIContentTasteControllerLog();
    v12 = objc_claimAutoreleasedReturnValue(v11);
    if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR))
      sub_238408();

    v13 = objc_retainBlock(*(id *)(a1 + 48));
    v14 = v13;
    if (v13)
      (*((void (**)(id, _QWORD))v13 + 2))(v13, 0);

  }
}

void sub_E6E4(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_E6F8(uint64_t a1, int a2, uint64_t a3, void *a4)
{
  id v6;
  id WeakRetained;
  id v8;
  NSObject *v9;
  void *v10;
  void (**v11)(void);
  void (**v12)(void);
  void (*v13)(void);
  id v14;
  NSObject *v15;
  void (**v16)(void);

  v6 = a4;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (v6)
  {
    v8 = BSUIContentTasteControllerLog();
    v9 = objc_claimAutoreleasedReturnValue(v8);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
      sub_238434();

  }
  if (WeakRetained)
  {
    if (a2)
    {
      v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "syncTastesCallBlock"));
      objc_msgSend(v10, "signalWithCompletion:", &stru_2E43E8);

    }
    v11 = (void (**)(void))objc_retainBlock(*(id *)(a1 + 32));
    v12 = v11;
    if (v11)
    {
      v13 = v11[2];
LABEL_14:
      v13();
    }
  }
  else
  {
    v14 = BSUIContentTasteControllerLog();
    v15 = objc_claimAutoreleasedReturnValue(v14);
    if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
      sub_238408();

    v16 = (void (**)(void))objc_retainBlock(*(id *)(a1 + 32));
    v12 = v16;
    if (v16)
    {
      v13 = v16[2];
      goto LABEL_14;
    }
  }

}

void sub_E968(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 72));
  _Unwind_Resume(a1);
}

void sub_E984(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id v7;
  NSObject *v8;
  id WeakRetained;
  void *v10;
  id v11;
  NSObject *v12;
  id v13;
  void *v14;
  _QWORD v15[4];
  id v16;
  id v17;

  v5 = a2;
  v6 = a3;
  if (v6)
  {
    v7 = BSUIContentTasteControllerLog();
    v8 = objc_claimAutoreleasedReturnValue(v7);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
      sub_2383A8();

  }
  if (!v5)
    v5 = objc_msgSend(objc_alloc((Class)BCMutableAssetDetail), "initWithAssetID:", *(_QWORD *)(a1 + 32));
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 64));
  if (WeakRetained)
  {
    objc_msgSend(v5, "setTaste:", objc_msgSend(*(id *)(a1 + 40), "_tasteIntegerFromTasteType:explicitlyDeclined:", objc_msgSend(*(id *)(a1 + 40), "_loveOrHateFromTasteInteger:", objc_msgSend(v5, "taste")), *(unsigned __int8 *)(a1 + 72)));
    objc_msgSend(v5, "setTasteSyncedToStore:", 1);
    v10 = *(void **)(a1 + 48);
    v15[0] = _NSConcreteStackBlock;
    v15[1] = 3221225472;
    v15[2] = sub_EB54;
    v15[3] = &unk_2E4410;
    objc_copyWeak(&v17, (id *)(a1 + 64));
    v16 = *(id *)(a1 + 56);
    objc_msgSend(v10, "setAssetDetail:completion:", v5, v15);

    objc_destroyWeak(&v17);
  }
  else
  {
    v11 = BSUIContentTasteControllerLog();
    v12 = objc_claimAutoreleasedReturnValue(v11);
    if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR))
      sub_238494();

    v13 = objc_retainBlock(*(id *)(a1 + 56));
    v14 = v13;
    if (v13)
      (*((void (**)(id, _QWORD))v13 + 2))(v13, 0);

  }
}

void sub_EB40(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_EB54(uint64_t a1, int a2, uint64_t a3, void *a4)
{
  id v6;
  id v7;
  NSObject *v8;
  id WeakRetained;
  void *v10;
  void *v11;
  void (**v12)(void);
  void (**v13)(void);
  void (*v14)(void);
  id v15;
  NSObject *v16;
  void (**v17)(void);

  v6 = a4;
  if (v6)
  {
    v7 = BSUIContentTasteControllerLog();
    v8 = objc_claimAutoreleasedReturnValue(v7);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
      sub_238434();

  }
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  v10 = WeakRetained;
  if (WeakRetained)
  {
    if (a2)
    {
      v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "syncTastesCallBlock"));
      objc_msgSend(v11, "signalWithCompletion:", &stru_2E4458);

    }
    v12 = (void (**)(void))objc_retainBlock(*(id *)(a1 + 32));
    v13 = v12;
    if (v12)
    {
      v14 = v12[2];
LABEL_14:
      v14();
    }
  }
  else
  {
    v15 = BSUIContentTasteControllerLog();
    v16 = objc_claimAutoreleasedReturnValue(v15);
    if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR))
      sub_238494();

    v17 = (void (**)(void))objc_retainBlock(*(id *)(a1 + 32));
    v13 = v17;
    if (v17)
    {
      v14 = v17[2];
      goto LABEL_14;
    }
  }

}

void sub_ED40(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id v7;
  NSObject *v8;
  id v9;
  id v10;
  id v11;
  id v12;
  uint64_t v13;
  void *i;
  void *v15;
  void *v16;
  void *v17;
  void (**v18)(id, id);
  id v19;
  void *v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  _BYTE v25[128];

  v5 = a2;
  v6 = a3;
  if (v6)
  {
    v7 = BSUIContentTasteControllerLog();
    v8 = objc_claimAutoreleasedReturnValue(v7);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
      sub_2384C0();

  }
  v20 = v6;
  v9 = objc_alloc_init((Class)NSMutableDictionary);
  v21 = 0u;
  v22 = 0u;
  v23 = 0u;
  v24 = 0u;
  v10 = v5;
  v11 = objc_msgSend(v10, "countByEnumeratingWithState:objects:count:", &v21, v25, 16);
  if (v11)
  {
    v12 = v11;
    v13 = *(_QWORD *)v22;
    do
    {
      for (i = 0; i != v12; i = (char *)i + 1)
      {
        if (*(_QWORD *)v22 != v13)
          objc_enumerationMutation(v10);
        v15 = *(void **)(*((_QWORD *)&v21 + 1) + 8 * (_QWORD)i);
        if ((objc_msgSend(v15, "deletedFlag") & 1) == 0)
        {
          v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v15, "assetID"));
          if (v16)
          {
            v17 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedInteger:](NSNumber, "numberWithUnsignedInteger:", objc_msgSend(*(id *)(a1 + 32), "_loveOrHateFromTasteInteger:", objc_msgSend(v15, "taste"))));
            objc_msgSend(v9, "setObject:forKeyedSubscript:", v17, v16);

          }
        }
      }
      v12 = objc_msgSend(v10, "countByEnumeratingWithState:objects:count:", &v21, v25, 16);
    }
    while (v12);
  }

  v18 = (void (**)(id, id))objc_retainBlock(*(id *)(a1 + 40));
  if (v18)
  {
    v19 = objc_msgSend(v9, "copy");
    v18[2](v18, v19);

  }
}

void sub_F064(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7;
  id v8;
  id v9;
  NSObject *v10;
  id v11;
  id v12;
  id v13;
  uint64_t v14;
  void *i;
  void *v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  void *v22;
  unsigned __int16 v23;
  char v24;
  unsigned __int16 v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  id v30;
  _QWORD v31[4];
  id v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  _BYTE v37[128];

  v7 = a2;
  v30 = a3;
  v8 = a4;
  if (v8)
  {
    v9 = BSUIContentTasteControllerLog();
    v10 = objc_claimAutoreleasedReturnValue(v9);
    if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
      sub_238520();

  }
  v29 = v8;
  v35 = 0u;
  v36 = 0u;
  v33 = 0u;
  v34 = 0u;
  v11 = v7;
  v12 = objc_msgSend(v11, "countByEnumeratingWithState:objects:count:", &v33, v37, 16);
  if (v12)
  {
    v13 = v12;
    v14 = *(_QWORD *)v34;
    do
    {
      for (i = 0; i != v13; i = (char *)i + 1)
      {
        if (*(_QWORD *)v34 != v14)
          objc_enumerationMutation(v11);
        v16 = *(void **)(*((_QWORD *)&v33 + 1) + 8 * (_QWORD)i);
        v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v16, "assetID"));
        if (v18
          && (v19 = objc_opt_class(NSNumber, v17),
              v20 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "objectForKeyedSubscript:", v18)),
              v21 = BUDynamicCast(v19, v20),
              v22 = (void *)objc_claimAutoreleasedReturnValue(v21),
              v20,
              v22))
        {
          v23 = (unsigned __int16)objc_msgSend(*(id *)(a1 + 40), "_loveOrHateFromTasteInteger:", objc_msgSend(v22, "shortValue"));

          v24 = 0;
        }
        else
        {
          v23 = 0;
          v24 = 1;
        }
        v25 = (unsigned __int16)objc_msgSend(*(id *)(a1 + 40), "_loveOrHateFromTasteInteger:", objc_msgSend(v16, "taste"));
        if ((v24 & 1) == 0 && v25 == v23)
          objc_msgSend(v16, "setTasteSyncedToStore:", 2);

      }
      v13 = objc_msgSend(v11, "countByEnumeratingWithState:objects:count:", &v33, v37, 16);
    }
    while (v13);
  }

  v26 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "valueForKey:", CFSTR("assetID")));
  v27 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:](NSDictionary, "dictionaryWithObjects:forKeys:", v11, v26));

  v31[0] = _NSConcreteStackBlock;
  v31[1] = 3221225472;
  v31[2] = sub_F30C;
  v31[3] = &unk_2E44D0;
  v28 = *(void **)(a1 + 48);
  v32 = *(id *)(a1 + 56);
  objc_msgSend(v28, "setAssetDetails:completion:", v27, v31);

}

void sub_F30C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v6;
  id v7;
  NSObject *v8;
  id v9;
  void *v10;

  v6 = a4;
  if (v6)
  {
    v7 = BSUIContentTasteControllerLog();
    v8 = objc_claimAutoreleasedReturnValue(v7);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
      sub_238580();

  }
  v9 = objc_retainBlock(*(id *)(a1 + 32));
  v10 = v9;
  if (v9)
    (*((void (**)(id, uint64_t))v9 + 2))(v9, a2);

}

void sub_F3DC(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 0xCu);
}

void sub_F3EC(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 2u);
}

void sub_F9B8(uint64_t a1)
{
  id WeakRetained;
  id v3;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    v3 = WeakRetained;
    objc_msgSend(WeakRetained, "removeRenderOverride:", *(_QWORD *)(a1 + 32));
    WeakRetained = v3;
  }

}

void sub_FB20(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  id v5;
  void *v6;
  void (**v7)(_QWORD, _QWORD);
  id v8;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "imageChangeObserverBlock"));

  if (v2)
  {
    v8 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "imageContentWithOptions:", 1));
    v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "image"));

    if (v3)
    {
      v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "image"));
      v5 = objc_msgSend(v4, "newImage");
      objc_msgSend(v8, "insets");
      v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "imageWithAlignmentRectInsets:"));

      v7 = (void (**)(_QWORD, _QWORD))objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "imageChangeObserverBlock"));
      ((void (**)(_QWORD, void *))v7)[2](v7, v6);

    }
  }
}

void sub_1015C(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  id v6;
  id v7;
  NSMutableArray *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  uint64_t v15;
  NSObject *v16;
  void *v17;
  int v18;
  const char *v19;
  __int16 v20;
  id v21;
  __int16 v22;
  id v23;
  __int16 v24;
  NSMutableArray *v25;
  _QWORD v26[3];
  _QWORD v27[3];

  v6 = a3;
  v7 = a4;
  v8 = objc_opt_new(NSMutableArray);
  v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "responseMetrics"));

  if (v9)
  {
    v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "responseMetrics"));
    -[NSMutableArray addObject:](v8, "addObject:", v10);

    if (!v7)
      goto LABEL_4;
    goto LABEL_3;
  }
  -[NSMutableArray addObject:](v8, "addObject:", &__NSDictionary0__struct);
  if (v7)
  {
LABEL_3:
    v26[0] = CFSTR("code");
    v11 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInteger:](NSNumber, "numberWithInteger:", objc_msgSend(v7, "code")));
    v27[0] = v11;
    v26[1] = CFSTR("description");
    v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "localizedDescription"));
    v27[1] = v12;
    v26[2] = CFSTR("userInfo");
    v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "userInfo"));
    v27[2] = v13;
    v14 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", v27, v26, 3));
    -[NSMutableArray addObject:](v8, "addObject:", v14);

  }
LABEL_4:
  v15 = JSALog();
  v16 = objc_claimAutoreleasedReturnValue(v15);
  if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
  {
    v18 = 136446978;
    v19 = "+[BSUIPurchaseManager purchaseBook::::::::]_block_invoke";
    v20 = 2112;
    v21 = v6;
    v22 = 2112;
    v23 = v7;
    v24 = 2112;
    v25 = v8;
    _os_log_impl(&dword_0, v16, OS_LOG_TYPE_DEFAULT, "%{public}s Purchase done! response=%@ error=%@ result=%@", (uint8_t *)&v18, 0x2Au);
  }

  v17 = (void *)objc_claimAutoreleasedReturnValue(+[JSABridge sharedInstance](JSABridge, "sharedInstance"));
  objc_msgSend(v17, "enqueueValueCall:arguments:file:line:", *(_QWORD *)(a1 + 32), v8, CFSTR("BSUIPurchaseManager.m"), 67);

}

void sub_10A68(uint64_t a1)
{
  double v1;
  id v2;

  v1 = *(double *)(a1 + 40);
  v2 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "statusBarBackgroundController"));
  objc_msgSend(v2, "setOpacity:", v1);

}

void sub_10AA8(uint64_t a1, void *a2)
{
  unsigned int v3;
  uint64_t v4;
  double v5;
  id v6;

  v3 = objc_msgSend(a2, "isCancelled");
  v4 = 48;
  if (v3)
    v4 = 40;
  v5 = *(double *)(a1 + v4);
  v6 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "statusBarBackgroundController"));
  objc_msgSend(v6, "setOpacity:", v5);

}

void sub_11454(uint64_t a1, CGContextRef c)
{
  void *v4;

  CGContextScaleCTM(c, 1.0, -1.0);
  CGContextTranslateCTM(c, 0.0, -*(double *)(a1 + 48));
  CGContextSaveGState(c);
  objc_msgSend(*(id *)(a1 + 32), "setStroke");
  objc_msgSend(*(id *)(a1 + 32), "setFill");
  v4 = (void *)objc_claimAutoreleasedReturnValue(+[UIBezierPath bezierPath](UIBezierPath, "bezierPath"));
  objc_msgSend(v4, "addArcWithCenter:radius:startAngle:endAngle:clockwise:", 1, *(double *)(a1 + 56), *(double *)(a1 + 64), *(double *)(a1 + 72), 0.0, 6.28318531);
  objc_msgSend(v4, "stroke");
  objc_msgSend(v4, "fill");

  CGContextRestoreGState(c);
}

uint64_t sub_11500(uint64_t a1, void *a2)
{
  return (*(uint64_t (**)(_QWORD, id))(*(_QWORD *)(a1 + 32) + 16))(*(_QWORD *)(a1 + 32), objc_msgSend(a2, "CGContext"));
}

void sub_1206C(uint64_t a1)
{
  void *v2;
  id v3;

  v3 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 8), "value"));
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "valueForKey:", CFSTR("play")));
  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 24), "setPlaying:", objc_msgSend(v2, "isEqualToString:", CFSTR("playing")));

}

void sub_122F8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_123D4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_12A04(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_130A4(id a1)
{
  BSUIManager *v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  uint64_t v12;
  id v13;
  void *v14;
  BSUIMicaFileProvider *v15;
  void *v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  void *v40;
  void *v41;
  BSUISharedWithYouFactory *v42;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  v1 = objc_alloc_init(BSUIManager);
  v2 = (void *)qword_32BF98;
  qword_32BF98 = (uint64_t)v1;

  v3 = objc_alloc_init((Class)TUIViewRegistry);
  objc_msgSend((id)qword_32BF98, "setViewRegistry:", v3);

  v4 = objc_alloc_init((Class)TUIElementRegistry);
  objc_msgSend((id)qword_32BF98, "setElementRegistry:", v4);

  v5 = objc_alloc_init((Class)TUIDynamicRegistry);
  objc_msgSend((id)qword_32BF98, "setDynamicRegistry:", v5);

  v6 = objc_alloc((Class)TUIResourceLoader);
  v45 = objc_opt_class(BSUIAppleIDImageURLProtocol, v7);
  v46 = objc_opt_class(_BSUITemplateBundleURLProtocol, v8);
  v47 = objc_opt_class(_BSUITemplateJetPackURLProtocol, v9);
  v10 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v45, 3));
  v11 = objc_msgSend(v6, "initWithProtocolClasses:", v10, v45, v46);
  objc_msgSend((id)qword_32BF98, "setResourceLoader:", v11);

  +[NSURLProtocol registerClass:](NSURLProtocol, "registerClass:", objc_opt_class(_BSUITemplateJetPackURLProtocol, v12));
  v13 = objc_alloc_init((Class)TUIResourceRegistry);
  objc_msgSend((id)qword_32BF98, "setResourceRegistry:", v13);

  v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend((id)qword_32BF98, "resourceRegistry"));
  v15 = objc_alloc_init(BSUIMicaFileProvider);
  objc_msgSend(v14, "registerFileProvider:forKind:", v15, CFSTR("mica-provider"));

  v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend((id)qword_32BF98, "elementRegistry"));
  objc_msgSend(v16, "registerElementClass:withName:", objc_opt_class(BSUIElementProfileImage, v17), CFSTR("profile-image"));

  v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend((id)qword_32BF98, "elementRegistry"));
  objc_msgSend(v18, "registerElementClass:withName:", objc_opt_class(BSUIElementFamilyProfileImage, v19), CFSTR("family-profile-image"));

  v20 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend((id)qword_32BF98, "elementRegistry"));
  objc_msgSend(v20, "registerElementClass:withName:", objc_opt_class(BSUIElementSeriesStackImage, v21), CFSTR("series-stack"));

  v22 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend((id)qword_32BF98, "elementRegistry"));
  objc_msgSend(v22, "registerElementClass:withName:", objc_opt_class(BSUIElementAudiobookControl, v23), CFSTR("audiobook-control"));

  v24 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend((id)qword_32BF98, "viewRegistry"));
  objc_msgSend(v24, "registerClass:forSubviewWithReuseIdentifier:", objc_opt_class(BSUIAudiobookControlView, v25), CFSTR("BSUIReuseIdentifierAudiobookControlView"));

  v26 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend((id)qword_32BF98, "elementRegistry"));
  objc_msgSend(v26, "registerElementClass:withName:", objc_opt_class(BSUIElementDailyReading, v27), CFSTR("daily-reading"));

  v28 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend((id)qword_32BF98, "elementRegistry"));
  objc_msgSend(v28, "registerElementClass:withName:", objc_opt_class(BSUIElementWeeklyProgress, v29), CFSTR("weekly-progress"));

  v30 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend((id)qword_32BF98, "viewRegistry"));
  objc_msgSend(v30, "registerClass:forSubviewWithReuseIdentifier:", objc_opt_class(BSUIWeeklyProgressView, v31), CFSTR("BSUIReuseIdentifierWeeklyProgressView"));

  v32 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend((id)qword_32BF98, "elementRegistry"));
  objc_msgSend(v32, "registerElementClass:withName:", objc_opt_class(BSUIElementReadingGoalsGauge, v33), CFSTR("reading-goals-gauge"));

  v34 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend((id)qword_32BF98, "viewRegistry"));
  objc_msgSend(v34, "registerClass:forSubviewWithReuseIdentifier:", objc_opt_class(BSUIReadingGoalsGaugeView, v35), CFSTR("BSUIReuseIdentifierReadingGoalsGaugeView"));

  v36 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend((id)qword_32BF98, "elementRegistry"));
  objc_msgSend(v36, "registerElementClass:withName:", objc_opt_class(BSUIElementBooksUIComponent, v37), CFSTR("books-ui-component"));

  v38 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend((id)qword_32BF98, "viewRegistry"));
  objc_msgSend(v38, "registerClass:forSubviewWithReuseIdentifier:", objc_opt_class(BSUIBooksUIComponentView, v39), CFSTR("BSUIReuseIdentifierBooksUIComponentView"));

  v40 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend((id)qword_32BF98, "elementRegistry"));
  objc_msgSend(v40, "registerFeature:", CFSTR("books::ui::component"));

  v41 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend((id)qword_32BF98, "viewRegistry"));
  v42 = objc_alloc_init(BSUISharedWithYouFactory);
  objc_msgSend(v41, "registerHostedViewFactory:forType:", v42, CFSTR("social-highlight"));

  +[BCMetrics registerNamedColorsWithTemplateManger:](BCMetrics, "registerNamedColorsWithTemplateManger:", qword_32BF98);
  +[BSUIDailyReadingMetrics registerAttributes](BSUIDailyReadingMetrics, "registerAttributes");
  +[BSUIWeeklyProgressMetrics registerAttributes](BSUIWeeklyProgressMetrics, "registerAttributes");
  v43 = qword_32BF98;
  v44 = (void *)objc_claimAutoreleasedReturnValue(+[JSABridge sharedInstance](JSABridge, "sharedInstance"));
  objc_msgSend(v44, "setTemplateBundleRegistrar:", v43);

}

void sub_13608(uint64_t a1)
{
  id v2;
  void *v3;
  id v4;
  void *v5;
  id v6;

  v2 = objc_alloc((Class)TUITemplateFactory);
  v6 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "manager"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "elementRegistry"));
  v4 = objc_msgSend(v2, "initWithRegistry:", v3);
  v5 = (void *)qword_32BFA8;
  qword_32BFA8 = (uint64_t)v4;

}

void sub_13C30(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, ...)
{
  va_list va;

  va_start(va, a16);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_13C4C(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_13C5C(uint64_t a1)
{

}

void sub_13C64(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v2 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1[4] + 8), "objectForKey:", a1[5]));
  v3 = *(_QWORD *)(a1[6] + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

void sub_13CA0(uint64_t a1, void *a2, void *a3)
{
  id *v5;
  id v6;
  id v7;
  uint64_t v8;
  objc_class *v9;
  NSString *v10;
  void *v11;
  id v12;
  void *v13;
  id WeakRetained;

  if (a1)
  {
    v5 = (id *)(a1 + 32);
    v6 = a3;
    v7 = a2;
    WeakRetained = objc_loadWeakRetained(v5);
    v9 = (objc_class *)objc_opt_class(WeakRetained, v8);
    v10 = NSStringFromClass(v9);
    v11 = (void *)objc_claimAutoreleasedReturnValue(v10);
    v12 = objc_loadWeakRetained(v5);
    v13 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("<StateCenter: %p, %@: %p, Item: %@>"), a1, v11, v12, v6));

    objc_msgSend(v7, "setDebugName:", v13);
  }
}

void sub_13D68(uint64_t a1)
{
  void *v2;
  id v3;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 8), "objectForKey:", *(_QWORD *)(a1 + 40)));
  v3 = v2;
  if (v2)
  {
    objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40), v2);
  }
  else
  {
    objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 8), "setObject:forKey:", *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40), *(_QWORD *)(a1 + 40));
    objc_msgSend(*(id *)(a1 + 32), "aq_updateInterest");
  }

}

void sub_13F2C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_13F44(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;

  v2 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 8), "objectForKey:", *(_QWORD *)(a1 + 40)));
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

  if (!*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 40))
  {
    if (*(_BYTE *)(a1 + 64))
    {
      v5 = objc_claimAutoreleasedReturnValue(+[TUIMutableDynamicValue valueWithValue:](TUIMutableDynamicValue, "valueWithValue:", *(_QWORD *)(a1 + 48)));
      v6 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
      v7 = *(void **)(v6 + 40);
      *(_QWORD *)(v6 + 40) = v5;

      sub_13CA0(*(_QWORD *)(a1 + 32), *(void **)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 40), *(void **)(a1 + 40));
      objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 8), "setObject:forKey:", *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 40), *(_QWORD *)(a1 + 40));
      objc_msgSend(*(id *)(a1 + 32), "aq_updateInterest");
    }
  }
}

void sub_140EC(uint64_t a1)
{
  void *v2;
  void *v3;
  id v4;
  id v5;
  uint64_t v6;
  void *v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  _BYTE v12[128];

  v8 = 0u;
  v9 = 0u;
  v10 = 0u;
  v11 = 0u;
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "observers", 0));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "objectEnumerator"));

  v4 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
  if (v4)
  {
    v5 = v4;
    v6 = *(_QWORD *)v9;
    do
    {
      v7 = 0;
      do
      {
        if (*(_QWORD *)v9 != v6)
          objc_enumerationMutation(v3);
        objc_msgSend(*(id *)(a1 + 40), "unionSet:", *(_QWORD *)(*((_QWORD *)&v8 + 1) + 8 * (_QWORD)v7));
        v7 = (char *)v7 + 1;
      }
      while (v5 != v7);
      v5 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
    }
    while (v5);
  }

}

void sub_14308(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_14320(uint64_t a1)
{
  void *v2;
  id v3;
  id v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  void *v9;
  unsigned int v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  _BYTE v15[128];

  v11 = 0u;
  v12 = 0u;
  v13 = 0u;
  v14 = 0u;
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "observers", 0));
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v11, v15, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v12;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v12 != v5)
          objc_enumerationMutation(v2);
        v7 = *(_QWORD *)(*((_QWORD *)&v11 + 1) + 8 * (_QWORD)v6);
        v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "observers"));
        v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "objectForKey:", v7));
        v10 = objc_msgSend(v9, "containsObject:", *(_QWORD *)(a1 + 40));

        if (v10)
          objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40), "addObject:", v7);
        v6 = (char *)v6 + 1;
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v11, v15, 16);
    }
    while (v4);
  }

}

void sub_14560(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  id v5;
  void *v6;
  void *v7;
  id v8;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "observers"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "objectForKey:", *(_QWORD *)(a1 + 40)));
  v4 = v3;
  if (v3)
    v5 = v3;
  else
    v5 = (id)objc_claimAutoreleasedReturnValue(+[NSSet set](NSSet, "set"));
  v6 = v5;

  v8 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "setByAddingObject:", *(_QWORD *)(a1 + 48)));
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "observers"));
  objc_msgSend(v7, "setObject:forKey:", v8, *(_QWORD *)(a1 + 40));

}

id sub_14610(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "aq_updateInterest");
}

void sub_14714(uint64_t a1)
{
  void *v2;
  id v3;

  v3 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "observers"));
  v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSSet setWithObject:](NSSet, "setWithObject:", *(_QWORD *)(a1 + 40)));
  objc_msgSend(v3, "setObject:forKey:", v2, *(_QWORD *)(a1 + 48));

}

id sub_14778(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "aq_updateInterest");
}

void sub_14878(uint64_t a1)
{
  void *v2;
  void *v3;
  id v4;
  void *v5;
  id v6;
  id v7;
  void *v8;
  void *v9;
  id v10;
  id v11;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "observers"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "objectForKey:", *(_QWORD *)(a1 + 40)));
  v4 = objc_msgSend(v3, "mutableCopy");
  v5 = v4;
  if (v4)
    v6 = v4;
  else
    v6 = (id)objc_claimAutoreleasedReturnValue(+[NSMutableSet set](NSMutableSet, "set"));
  v11 = v6;

  objc_msgSend(v11, "removeObject:", *(_QWORD *)(a1 + 48));
  v7 = objc_msgSend(v11, "count");
  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "observers"));
  v9 = v8;
  if (v7)
  {
    v10 = objc_msgSend(v11, "copy");
    objc_msgSend(v9, "setObject:forKey:", v10, *(_QWORD *)(a1 + 40));

  }
  else
  {
    objc_msgSend(v8, "removeObjectForKey:", *(_QWORD *)(a1 + 40));
  }

}

id sub_1495C(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "aq_updateInterest");
}

void sub_14A30(uint64_t a1)
{
  id v2;

  v2 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "observers"));
  objc_msgSend(v2, "removeObjectForKey:", *(_QWORD *)(a1 + 40));

}

id sub_14A70(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "aq_updateInterest");
}

void sub_14D94(id a1)
{
  void *v1;
  id v2;
  void *v3;
  id v4;
  void *v5;
  _QWORD v6[17];

  v1 = (void *)objc_claimAutoreleasedReturnValue(+[TUIAttributeSet supportedAttributesSizeAndIntrinsic](TUIAttributeSet, "supportedAttributesSizeAndIntrinsic"));
  v2 = objc_msgSend(v1, "mutableCopy");

  v6[0] = CFSTR("daily-reading-data");
  v6[1] = CFSTR("icon-mode");
  v6[2] = CFSTR("goal-reading-time");
  v6[3] = CFSTR("current-reading-time");
  v6[4] = CFSTR("progress-today");
  v6[5] = TUIAttributeNameTitle;
  v6[6] = CFSTR("detail-text");
  v6[7] = CFSTR("time-displayed-text");
  v6[8] = CFSTR("control-color");
  v6[9] = CFSTR("progress-color");
  v6[10] = TUIAttributeNameBackgroundColor;
  v6[11] = CFSTR("text-color");
  v6[12] = TUIAttributeNameFont;
  v6[13] = TUIAttributeNameN;
  v6[14] = TUIAttributeNameObserveTrigger;
  v6[15] = TUIAttributeNameObserveTriggerDelay;
  v6[16] = TUIAttributeNameObserveTriggerValue;
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", v6, 17));
  objc_msgSend(v2, "addAttributesFromArray:", v3);

  v4 = objc_msgSend(v2, "copy");
  v5 = (void *)qword_32BFB8;
  qword_32BFB8 = (uint64_t)v4;

}

void sub_14F50(id a1)
{
  uint64_t v1;
  void *v2;
  _QWORD v3[11];
  _QWORD v4[11];

  v3[0] = CFSTR("daily-reading-data");
  v3[1] = CFSTR("icon-mode");
  v4[0] = &off_2FB8B8;
  v4[1] = &off_2FB8B8;
  v3[2] = CFSTR("current-reading-time");
  v3[3] = CFSTR("goal-reading-time");
  v4[2] = &off_2FB8D0;
  v4[3] = &off_2FB8D0;
  v3[4] = CFSTR("detail-text");
  v3[5] = CFSTR("time-displayed-text");
  v4[4] = &off_2FB8E8;
  v4[5] = &off_2FB8E8;
  v3[6] = CFSTR("control-color");
  v3[7] = CFSTR("progress-color");
  v4[6] = &off_2FB900;
  v4[7] = &off_2FB900;
  v3[8] = CFSTR("text-color");
  v3[9] = CFSTR("night-mode");
  v4[8] = &off_2FB900;
  v4[9] = &off_2FB8B8;
  v3[10] = CFSTR("right-to-left");
  v4[10] = &off_2FB8B8;
  v1 = objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", v4, v3, 11));
  v2 = (void *)qword_32BFC8;
  qword_32BFC8 = v1;

}

void sub_16778(id a1)
{
  id v1;
  uint64_t v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  id v7;

  v1 = objc_alloc((Class)AMSAcknowledgePrivacyTask);
  v2 = BUOnboardingBooksBundleID();
  v3 = (void *)objc_claimAutoreleasedReturnValue(v2);
  v4 = (void *)objc_claimAutoreleasedReturnValue(+[BUAccountsProvider sharedProvider](BUAccountsProvider, "sharedProvider"));
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "localStoreAccount"));
  v7 = objc_msgSend(v1, "initWithPrivacyIdentifier:account:", v3, v5);

  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "acknowledgePrivacy"));
  objc_msgSend(v6, "addFinishBlock:", &stru_2E4860);

}

void sub_16820(id a1, BOOL a2, NSError *a3)
{
  _BOOL4 v3;
  NSError *v4;
  uint64_t v5;
  NSObject *v6;
  _BOOL4 v7;
  const char *v8;
  NSObject *v9;
  uint32_t v10;
  int v11;
  NSError *v12;

  v3 = a2;
  v4 = a3;
  v5 = BSUIWelcomeScreenLog();
  v6 = objc_claimAutoreleasedReturnValue(v5);
  v7 = os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT);
  if (v3)
  {
    if (v7)
    {
      LOWORD(v11) = 0;
      v8 = "BSUIWelcomeGDPRItem: welcomeScreenShouldShow: Successfully acknowledged privacy for current local account just in case";
      v9 = v6;
      v10 = 2;
LABEL_6:
      _os_log_impl(&dword_0, v9, OS_LOG_TYPE_DEFAULT, v8, (uint8_t *)&v11, v10);
    }
  }
  else if (v7)
  {
    v11 = 138543362;
    v12 = v4;
    v8 = "BSUIWelcomeGDPRItem: welcomeScreenShouldShow: Failed to acknowledge privacy for current local account. error : %{public}@";
    v9 = v6;
    v10 = 12;
    goto LABEL_6;
  }

}

void sub_1699C(uint64_t a1)
{
  id v1;
  id v2;

  v1 = objc_retainBlock(*(id *)(a1 + 32));
  if (v1)
  {
    v2 = v1;
    (*((void (**)(id, _QWORD))v1 + 2))(v1, 0);
    v1 = v2;
  }

}

void sub_16A48(id a1, BOOL a2, NSError *a3)
{
  _BOOL4 v3;
  NSError *v4;
  uint64_t v5;
  NSObject *v6;
  _BOOL4 v7;
  void *v8;
  void *v9;
  int v10;
  NSError *v11;

  v3 = a2;
  v4 = a3;
  v5 = BSUIWelcomeScreenLog();
  v6 = objc_claimAutoreleasedReturnValue(v5);
  v7 = os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT);
  if (v3)
  {
    if (v7)
    {
      LOWORD(v10) = 0;
      _os_log_impl(&dword_0, v6, OS_LOG_TYPE_DEFAULT, "BSUIWelcomeGDPRItem: welcomeScreenViewControllerDidDismiss: Successfully acknowledged privacy for current account", (uint8_t *)&v10, 2u);
    }

    v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSNotificationCenter defaultCenter](NSNotificationCenter, "defaultCenter"));
    objc_msgSend(v8, "postNotificationName:object:", BAPrivacyAcknowledgementChanged, 0);

    v6 = objc_claimAutoreleasedReturnValue(+[NSNotificationCenter defaultCenter](NSNotificationCenter, "defaultCenter"));
    v9 = (void *)objc_claimAutoreleasedReturnValue(+[JSAMetricsController JSAPrivacyAcknowledgementDidChange](JSAMetricsController, "JSAPrivacyAcknowledgementDidChange"));
    -[NSObject postNotificationName:object:](v6, "postNotificationName:object:", v9, 0);

  }
  else if (v7)
  {
    v10 = 138543362;
    v11 = v4;
    _os_log_impl(&dword_0, v6, OS_LOG_TYPE_DEFAULT, "BSUIWelcomeGDPRItem: welcomeScreenViewControllerDidDismiss: Failed to acknowledge privacy for current account. error : %{public}@", (uint8_t *)&v10, 0xCu);
  }

}

void sub_16BE0(id a1)
{
  void *v1;
  id v2;
  void *v3;
  void *v4;
  id v5;
  void *v6;
  _QWORD v7[2];

  v1 = (void *)objc_claimAutoreleasedReturnValue(+[TUIAttributeSet supportedAttributesSizeAndIntrinsic](TUIAttributeSet, "supportedAttributesSizeAndIntrinsic"));
  v2 = objc_msgSend(v1, "mutableCopy");

  v3 = (void *)objc_claimAutoreleasedReturnValue(+[TUIAttributeSet supportedAttributesTextStyling](TUIAttributeSet, "supportedAttributesTextStyling"));
  objc_msgSend(v2, "unionSet:", v3);

  v7[0] = TUIAttributeNameInstance;
  v7[1] = TUIAttributeNameParameters;
  v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", v7, 2));
  objc_msgSend(v2, "addAttributesFromArray:", v4);

  v5 = objc_msgSend(v2, "copy");
  v6 = (void *)qword_32BFE0;
  qword_32BFE0 = (uint64_t)v5;

}

void sub_17274(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 56));
  _Unwind_Resume(a1);
}

void sub_17290(uint64_t a1)
{
  void *v1;
  id v2;
  id v3;
  void *v4;
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v1 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "layer"));

  if (v1)
  {
    v2 = objc_retainAutorelease((id)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "_generateImage")));
    v3 = objc_msgSend(v2, "CGImage");
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "layer"));
    objc_msgSend(v4, "setContents:", v3);

  }
}

uint64_t sub_17318(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

void sub_18B88(uint64_t a1)
{
  id WeakRetained;
  void *v3;
  id v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  id v9;
  id v10;
  uint64_t v11;
  void *i;
  uint64_t v13;
  void *v14;
  id v15;
  id v16;
  uint64_t v17;
  void *j;
  void *v19;
  void *v20;
  void *v21;
  id v22;
  id v23;
  id v24;
  uint64_t v25;
  void *k;
  uint64_t v27;
  void *v28;
  void *v29;
  void *v30;
  id v31;
  id v32;
  id obj;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  _BYTE v46[128];
  _BYTE v47[128];
  _BYTE v48[128];
  uint64_t v49;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  if (WeakRetained)
  {
    os_unfair_lock_lock((os_unfair_lock_t)(*(_QWORD *)(a1 + 32) + 8));
    v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "strongObservers"));
    v4 = objc_msgSend(v3, "copy");

    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "weakObservers"));
    v31 = objc_msgSend(v5, "copy");

    os_unfair_lock_unlock((os_unfair_lock_t)(*(_QWORD *)(a1 + 32) + 8));
    if (*(_QWORD *)(a1 + 40))
    {
      v49 = *(_QWORD *)(a1 + 40);
      v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v49, 1));
    }
    else
    {
      v6 = 0;
    }
    v7 = (void *)objc_claimAutoreleasedReturnValue(+[JSABridge sharedInstance](JSABridge, "sharedInstance"));
    v29 = WeakRetained;
    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "onUpdate"));
    objc_msgSend(v7, "enqueueValueCall:arguments:file:line:", v8, v6, CFSTR("BSUIDynamicArray.m"), 88);

    v44 = 0u;
    v45 = 0u;
    v42 = 0u;
    v43 = 0u;
    obj = v4;
    v9 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v42, v48, 16);
    if (v9)
    {
      v10 = v9;
      v11 = *(_QWORD *)v43;
      do
      {
        for (i = 0; i != v10; i = (char *)i + 1)
        {
          if (*(_QWORD *)v43 != v11)
            objc_enumerationMutation(obj);
          v13 = *(_QWORD *)(*((_QWORD *)&v42 + 1) + 8 * (_QWORD)i);
          v14 = (void *)objc_claimAutoreleasedReturnValue(+[JSABridge sharedInstance](JSABridge, "sharedInstance"));
          objc_msgSend(v14, "enqueueValueCall:arguments:file:line:", v13, v6, CFSTR("BSUIDynamicArray.m"), 92);

        }
        v10 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v42, v48, 16);
      }
      while (v10);
    }

    v30 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableSet set](NSMutableSet, "set"));
    v38 = 0u;
    v39 = 0u;
    v40 = 0u;
    v41 = 0u;
    v32 = v31;
    v15 = objc_msgSend(v32, "countByEnumeratingWithState:objects:count:", &v38, v47, 16);
    if (v15)
    {
      v16 = v15;
      v17 = *(_QWORD *)v39;
      do
      {
        for (j = 0; j != v16; j = (char *)j + 1)
        {
          if (*(_QWORD *)v39 != v17)
            objc_enumerationMutation(v32);
          v19 = *(void **)(*((_QWORD *)&v38 + 1) + 8 * (_QWORD)j);
          v20 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v19, "value"));
          if (v20)
          {
            v21 = (void *)objc_claimAutoreleasedReturnValue(+[JSABridge sharedInstance](JSABridge, "sharedInstance"));
            objc_msgSend(v21, "enqueueValueCall:arguments:file:line:", v20, v6, CFSTR("BSUIDynamicArray.m"), 99);

          }
          else
          {
            objc_msgSend(v30, "addObject:", v19);
          }

        }
        v16 = objc_msgSend(v32, "countByEnumeratingWithState:objects:count:", &v38, v47, 16);
      }
      while (v16);
    }

    v36 = 0u;
    v37 = 0u;
    v34 = 0u;
    v35 = 0u;
    v22 = v30;
    v23 = objc_msgSend(v22, "countByEnumeratingWithState:objects:count:", &v34, v46, 16);
    WeakRetained = v29;
    if (v23)
    {
      v24 = v23;
      v25 = *(_QWORD *)v35;
      do
      {
        for (k = 0; k != v24; k = (char *)k + 1)
        {
          if (*(_QWORD *)v35 != v25)
            objc_enumerationMutation(v22);
          v27 = *(_QWORD *)(*((_QWORD *)&v34 + 1) + 8 * (_QWORD)k);
          os_unfair_lock_lock((os_unfair_lock_t)(*(_QWORD *)(a1 + 32) + 8));
          v28 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v29, "weakObservers"));
          objc_msgSend(v28, "removeObject:", v27);

          os_unfair_lock_unlock((os_unfair_lock_t)(*(_QWORD *)(a1 + 32) + 8));
        }
        v24 = objc_msgSend(v22, "countByEnumeratingWithState:objects:count:", &v34, v46, 16);
      }
      while (v24);
    }

  }
}

void sub_19DE4(id a1)
{
  BSUIVideoStateProvider *v1;
  void *v2;

  v1 = objc_alloc_init(BSUIVideoStateProvider);
  v2 = (void *)qword_32BFF0;
  qword_32BFF0 = (uint64_t)v1;

}

void sub_1AE5C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1AE8C(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  id v6;
  id v7;
  id v8;
  void *v9;
  id v10;
  id v11;
  _QWORD block[4];
  id v13;
  id v14;
  id v15;
  id v16[2];

  v6 = a2;
  v7 = a4;
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1AF6C;
  block[3] = &unk_2E4948;
  objc_copyWeak(v16, (id *)(a1 + 40));
  v13 = v6;
  v14 = v7;
  v8 = *(id *)(a1 + 32);
  v9 = *(void **)(a1 + 48);
  v15 = v8;
  v16[1] = v9;
  v10 = v7;
  v11 = v6;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);

  objc_destroyWeak(v16);
}

void sub_1AF6C(uint64_t a1)
{
  id WeakRetained;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  const __CFString *v11;
  void *v12;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  v3 = WeakRetained;
  if (WeakRetained)
  {
    if (*(_QWORD *)(a1 + 32) && !*(_QWORD *)(a1 + 40))
    {
      v4 = (void *)objc_claimAutoreleasedReturnValue(+[UIImage imageWithData:](UIImage, "imageWithData:"));
      if (v4)
      {
        v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "screenshotsCache"));
        objc_msgSend(v5, "setObject:forKey:", v4, *(_QWORD *)(a1 + 48));

        v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "delegate"));
        objc_msgSend(v6, "screenshotLoader:loadedImage:forScreenshotAtIndex:", v3, v4, *(_QWORD *)(a1 + 64));
      }
      else
      {
        v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedInteger:](NSNumber, "numberWithUnsignedInteger:", objc_msgSend(*(id *)(a1 + 32), "length")));
        v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("The image data of length %@ from the server is not valid"), v7));

        v11 = CFSTR("description");
        v12 = v6;
        v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", &v12, &v11, 1));
        v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSError errorWithDomain:code:userInfo:](NSError, "errorWithDomain:code:userInfo:", CFSTR("kBSUIScreenshotLoaderErrorDomain"), 0, v8));

        v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "delegate"));
        objc_msgSend(v10, "screenshotLoader:failedToLoadImageforScreenshotAtIndex:withError:", v3, *(_QWORD *)(a1 + 64), v9);

      }
    }
    else
    {
      v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "delegate"));
      objc_msgSend(v4, "screenshotLoader:failedToLoadImageforScreenshotAtIndex:withError:", v3, *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 40));
    }

  }
}

id BSUIDownloadPurchaseMonitorLog()
{
  if (qword_32C008 != -1)
    dispatch_once(&qword_32C008, &stru_2E4990);
  return (id)qword_32C000;
}

void sub_1D328(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.iBooks", "BSUIDownloadPurchaseMonitorLog");
  v2 = (void *)qword_32C000;
  qword_32C000 = (uint64_t)v1;

}

void sub_1D6C0(uint64_t a1, void *a2)
{
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  id v9;
  uint64_t v10;
  id v11;
  _QWORD v12[5];
  id v13;
  id v14;
  id v15;
  uint64_t v16;

  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "firstObject"));
  v4 = v3;
  if (!v3 || (objc_msgSend(v3, "isTrackedAsRecent") & 1) == 0)
  {
    v5 = (void *)objc_claimAutoreleasedReturnValue(+[BCCollectionMember collectionMemberIDWithCollectionID:assetID:](BCCollectionMember, "collectionMemberIDWithCollectionID:assetID:", kBKCollectionDefaultIDWantToRead, *(_QWORD *)(a1 + 32)));
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "cloudCollectionsManager"));
    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "collectionMemberManager"));
    v12[0] = _NSConcreteStackBlock;
    v12[1] = 3221225472;
    v12[2] = sub_1D7E0;
    v12[3] = &unk_2E4A08;
    v8 = *(void **)(a1 + 48);
    v12[4] = *(_QWORD *)(a1 + 40);
    v13 = v5;
    v14 = v8;
    v9 = *(id *)(a1 + 32);
    v10 = *(_QWORD *)(a1 + 56);
    v15 = v9;
    v16 = v10;
    v11 = v5;
    objc_msgSend(v7, "collectionMemberForCollectionMemberID:completion:", v11, v12);

  }
}

void sub_1D7E0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v5;
  void *v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  _QWORD v12[4];
  id v13;
  uint64_t v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  if (!a2)
  {
    v18 = v2;
    v19 = v3;
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "cloudCollectionsManager"));
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "collectionMemberManager"));
    v7 = kBKCollectionDefaultIDWantToRead;
    v12[0] = _NSConcreteStackBlock;
    v12[1] = 3221225472;
    v12[2] = sub_1D8C4;
    v12[3] = &unk_2E49E0;
    v8 = *(id *)(a1 + 40);
    v9 = *(_QWORD *)(a1 + 32);
    v13 = v8;
    v14 = v9;
    v15 = *(id *)(a1 + 48);
    v10 = *(id *)(a1 + 56);
    v11 = *(_QWORD *)(a1 + 64);
    v16 = v10;
    v17 = v11;
    objc_msgSend(v6, "fetchMaxSortOrderInCollectionID:completion:", v7, v12);

  }
}

void sub_1D8C4(uint64_t a1, int a2, uint64_t a3)
{
  id v5;
  NSObject *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  void *v15;
  void *v16;
  id v17;
  uint64_t v18;
  _QWORD v19[4];
  id v20;
  id v21;
  uint64_t v22;

  if (a3)
  {
    v5 = BSUIDownloadPurchaseMonitorLog();
    v6 = objc_claimAutoreleasedReturnValue(v5);
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
      sub_2387C8(v6, v7, v8, v9, v10, v11, v12, v13);

  }
  v14 = objc_msgSend(objc_alloc((Class)BCMutableCollectionMember), "initWithCollectionMemberID:", *(_QWORD *)(a1 + 32));
  objc_msgSend(v14, "setDeletedFlag:", 0);
  objc_msgSend(v14, "setSortOrder:", (a2 + 10000));
  v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "cloudCollectionsManager"));
  v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v15, "collectionMemberManager"));
  v19[0] = _NSConcreteStackBlock;
  v19[1] = 3221225472;
  v19[2] = sub_1D9E0;
  v19[3] = &unk_2E49B8;
  v20 = *(id *)(a1 + 48);
  v17 = *(id *)(a1 + 56);
  v18 = *(_QWORD *)(a1 + 64);
  v21 = v17;
  v22 = v18;
  objc_msgSend(v16, "setCollectionMember:completion:", v14, v19);

}

void sub_1D9E0(_QWORD *a1, int a2, uint64_t a3, void *a4)
{
  id v6;
  void *v7;
  void *v8;
  id v9;
  NSObject *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v6 = a4;
  if (a2)
  {
    v7 = (void *)objc_claimAutoreleasedReturnValue(+[BAEventReporter sharedReporter](BAEventReporter, "sharedReporter"));
    objc_msgSend(v7, "emitAddToCollectionEventWithTracker:collectionID:contentID:contentAcquisitionType:contentType:supplementalContentCount:seriesType:productionType:", a1[4], kBKCollectionDefaultIDWantToRead, a1[5], 1, 0, 0, 0, a1[6]);

    v8 = (void *)objc_claimAutoreleasedReturnValue(+[BAEventReporter sharedReporter](BAEventReporter, "sharedReporter"));
    objc_msgSend(v8, "emitWantListAddEventWithTracker:contentID:contentAcquisitionType:contentType:supplementalContentCount:seriesType:productionType:", a1[4], a1[5], 1, 0, 0, 0, a1[6]);

  }
  if (v6)
  {
    v9 = BSUIDownloadPurchaseMonitorLog();
    v10 = objc_claimAutoreleasedReturnValue(v9);
    if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
      sub_2387F8(v10, v11, v12, v13, v14, v15, v16, v17);

  }
}

void sub_1DC78(uint64_t a1, uint64_t a2)
{
  void *v3;
  void *v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  _QWORD v8[4];
  id v9;
  id v10;
  uint64_t v11;

  if (a2)
  {
    v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "cloudCollectionsManager"));
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "collectionMemberManager"));
    v8[0] = _NSConcreteStackBlock;
    v8[1] = 3221225472;
    v8[2] = sub_1DD34;
    v8[3] = &unk_2E4A58;
    v5 = *(_QWORD *)(a1 + 40);
    v9 = *(id *)(a1 + 48);
    v6 = *(id *)(a1 + 56);
    v7 = *(_QWORD *)(a1 + 64);
    v10 = v6;
    v11 = v7;
    objc_msgSend(v4, "deleteCollectionMemberForCollectionMemberID:completion:", v5, v8);

  }
}

void sub_1DD34(_QWORD *a1, int a2, void *a3)
{
  id v5;
  void *v6;
  id v7;
  NSObject *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v5 = a3;
  if (a2)
  {
    v6 = (void *)objc_claimAutoreleasedReturnValue(+[BAEventReporter sharedReporter](BAEventReporter, "sharedReporter"));
    objc_msgSend(v6, "emitRemoveFromCollectionEventWithTracker:collectionID:contentID:contentAcquisitionType:contentType:supplementalContentCount:seriesType:productionType:", a1[4], kBKCollectionDefaultIDSamples, a1[5], 1, 0, 0, 0, a1[6]);

  }
  if (v5)
  {
    v7 = BSUIDownloadPurchaseMonitorLog();
    v8 = objc_claimAutoreleasedReturnValue(v7);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
      sub_238828(v8, v9, v10, v11, v12, v13, v14, v15);

  }
}

void sub_1E224(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_list va;

  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1E250(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_1E260(uint64_t a1)
{

}

void sub_1E268(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  BSUIDownloadPurchaseAttempt *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  int v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  uint64_t v21;
  void *v22;
  _BOOL8 v23;
  _BOOL8 v24;
  void *v25;
  BSUIDownloadPurchaseAttempt *v26;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "downloadPurchaseAttempts"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "objectForKey:", *(_QWORD *)(a1 + 40)));
  v4 = v3;
  if (v3)
    v5 = v3;
  else
    v5 = objc_alloc_init(BSUIDownloadPurchaseAttempt);
  v26 = v5;

  -[BSUIDownloadPurchaseAttempt setStoreID:](v26, "setStoreID:", *(_QWORD *)(a1 + 40));
  -[BSUIDownloadPurchaseAttempt setBuyParams:](v26, "setBuyParams:", *(_QWORD *)(a1 + 48));
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 56), "objectForKeyedSubscript:", CFSTR("BATracker")));
  -[BSUIDownloadPurchaseAttempt setTracker:](v26, "setTracker:", v6);

  -[BSUIDownloadPurchaseAttempt setIsAudiobook:](v26, "setIsAudiobook:", *(unsigned __int8 *)(a1 + 80));
  -[BSUIDownloadPurchaseAttempt setHasRacSupport:](v26, "setHasRacSupport:", objc_msgSend(*(id *)(a1 + 64), "BOOLValue"));
  -[BSUIDownloadPurchaseAttempt setIsSupplementalContent:](v26, "setIsSupplementalContent:", *(unsigned __int8 *)(a1 + 81));
  -[BSUIDownloadPurchaseAttempt setSessionAssertion:](v26, "setSessionAssertion:", *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 72) + 8) + 40));
  v8 = objc_opt_class(BAUpSellData, v7);
  v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 56), "objectForKeyedSubscript:", CFSTR("upSellData")));
  v10 = BUDynamicCast(v8, v9);
  v11 = (void *)objc_claimAutoreleasedReturnValue(v10);

  -[BSUIDownloadPurchaseAttempt setUpSellData:](v26, "setUpSellData:", v11);
  v12 = BAAppAnalyticsAdditionalDataKey;
  v13 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 56), "objectForKeyedSubscript:", BAAppAnalyticsAdditionalDataKey));
  if (v13)
  {
    v14 = (void *)v13;
    v15 = _os_feature_enabled_impl("Books", "unifiedProductPage");

    if (v15)
    {
      v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 56), "objectForKeyedSubscript:", v12));
      v17 = (void *)objc_claimAutoreleasedReturnValue(+[BAAppAnalyticsAdditionalData dataWithDictionary:](BAAppAnalyticsAdditionalData, "dataWithDictionary:", v16));
      -[BSUIDownloadPurchaseAttempt setAppAnalyticsAdditionalData:](v26, "setAppAnalyticsAdditionalData:", v17);

    }
  }
  v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "downloadPurchaseAttempts"));
  objc_msgSend(v18, "setObject:forKeyedSubscript:", v26, *(_QWORD *)(a1 + 40));

  if (!-[BSUIDownloadPurchaseAttempt isSupplementalContent](v26, "isSupplementalContent"))
  {
    v19 = *(void **)(a1 + 32);
    v20 = (void *)objc_claimAutoreleasedReturnValue(-[BSUIDownloadPurchaseAttempt tracker](v26, "tracker"));
    v21 = *(_QWORD *)(a1 + 40);
    v22 = (void *)objc_claimAutoreleasedReturnValue(-[BSUIDownloadPurchaseAttempt buyParams](v26, "buyParams"));
    v23 = -[BSUIDownloadPurchaseAttempt isAudiobook](v26, "isAudiobook");
    v24 = -[BSUIDownloadPurchaseAttempt hasRacSupport](v26, "hasRacSupport");
    v25 = (void *)objc_claimAutoreleasedReturnValue(-[BSUIDownloadPurchaseAttempt appAnalyticsAdditionalData](v26, "appAnalyticsAdditionalData"));
    objc_msgSend(v19, "_emitPurchaseAttemptEventWithTracker:forID:buyParams:isAudioBook:hasRacSupport:upSellData:appAnalyticsAdditionalData:", v20, v21, v22, v23, v24, v11, v25);

  }
}

void sub_1E5B4(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  void *v6;
  void *v7;
  unsigned __int8 v8;
  void *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  void *v13;
  void *v14;
  id v15;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "downloadPurchaseAttempts"));
  v15 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "objectForKeyedSubscript:", *(_QWORD *)(a1 + 40)));

  objc_msgSend(v15, "setPurchaseResponse:", *(_QWORD *)(a1 + 48));
  objc_msgSend(*(id *)(a1 + 32), "aq_processCompletedPurchaseAttempt:", v15);
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "downloadPurchaseAttempts"));
  objc_msgSend(v3, "removeObjectForKey:", *(_QWORD *)(a1 + 40));

  if (objc_msgSend(v15, "isAudiobook"))
  {
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v15, "purchaseResponse"));
    if (objc_msgSend(v4, "hasRacGUID"))
      v5 = 1;
    else
      v5 = 2;

  }
  else
  {
    v5 = 0;
  }
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 48), "purchaseResponseItems"));
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "firstObject"));
  v8 = objc_msgSend(v7, "isPurchaseRedownload");

  if ((v8 & 1) == 0)
  {
    v9 = *(void **)(a1 + 32);
    v10 = *(_QWORD *)(a1 + 40);
    v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v15, "tracker"));
    objc_msgSend(v9, "_addStoreIDToWantToReadCollection:tracker:productionType:", v10, v11, v5);

    v13 = *(void **)(a1 + 32);
    v12 = *(_QWORD *)(a1 + 40);
    v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v15, "tracker"));
    objc_msgSend(v13, "_removeStoreIDFromSamplesCollection:tracker:productionType:", v12, v14, v5);

  }
}

void sub_1E7CC(uint64_t a1)
{
  void *v2;
  void *v3;
  id v4;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "downloadPurchaseAttempts"));
  v4 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "objectForKeyedSubscript:", *(_QWORD *)(a1 + 40)));

  objc_msgSend(v4, "setFailureResponse:", *(_QWORD *)(a1 + 48));
  objc_msgSend(*(id *)(a1 + 32), "aq_processFailedPurchaseAttempt:", v4);
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "downloadPurchaseAttempts"));
  objc_msgSend(v3, "removeObjectForKey:", *(_QWORD *)(a1 + 40));

}

void sub_1E8A4(uint64_t a1)
{
  NSMutableArray *v2;
  uint64_t v3;
  void *v4;

  if (!*(_QWORD *)(*(_QWORD *)(a1 + 32) + 16))
  {
    v2 = objc_opt_new(NSMutableArray);
    v3 = *(_QWORD *)(a1 + 32);
    v4 = *(void **)(v3 + 16);
    *(_QWORD *)(v3 + 16) = v2;

  }
}

void sub_1E96C(uint64_t a1)
{
  void *v2;
  id v3;
  uint64_t v4;
  void *v5;
  id v6;
  NSObject *v7;
  void *v8;
  id v9;
  id v10;
  id v11;
  uint64_t v12;
  void *v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  uint8_t v18[128];
  uint8_t buf[4];
  void *v20;

  v2 = *(void **)(*(_QWORD *)(a1 + 32) + 16);
  if (v2)
  {
    v3 = objc_msgSend(v2, "copy");
    v4 = *(_QWORD *)(a1 + 32);
    v5 = *(void **)(v4 + 16);
    *(_QWORD *)(v4 + 16) = 0;

    v6 = BSUIDownloadPurchaseMonitorLog();
    v7 = objc_claimAutoreleasedReturnValue(v6);
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "componentsJoinedByString:", CFSTR(", ")));
      *(_DWORD *)buf = 138412290;
      v20 = v8;
      _os_log_impl(&dword_0, v7, OS_LOG_TYPE_DEFAULT, "BSUIDownloadPurchaseMonitor: Removing from My Samples: [%@]", buf, 0xCu);

    }
    v16 = 0u;
    v17 = 0u;
    v14 = 0u;
    v15 = 0u;
    v9 = v3;
    v10 = objc_msgSend(v9, "countByEnumeratingWithState:objects:count:", &v14, v18, 16);
    if (v10)
    {
      v11 = v10;
      v12 = *(_QWORD *)v15;
      do
      {
        v13 = 0;
        do
        {
          if (*(_QWORD *)v15 != v12)
            objc_enumerationMutation(v9);
          objc_msgSend(*(id *)(a1 + 32), "_removeStoreIDFromSamplesCollection:tracker:productionType:", *(_QWORD *)(*((_QWORD *)&v14 + 1) + 8 * (_QWORD)v13), *(_QWORD *)(a1 + 40), 0, (_QWORD)v14);
          v13 = (char *)v13 + 1;
        }
        while (v11 != v13);
        v11 = objc_msgSend(v9, "countByEnumeratingWithState:objects:count:", &v14, v18, 16);
      }
      while (v11);
    }

  }
}

id BSUIBundle()
{
  if (qword_32C018 != -1)
    dispatch_once(&qword_32C018, &stru_2E4AA8);
  return (id)qword_32C010;
}

void sub_1F188(id a1)
{
  NSBundle *v1;
  uint64_t v2;
  void *v3;

  v1 = +[NSBundle bundleForClass:](NSBundle, "bundleForClass:", objc_opt_class(BSUIBundleClass));
  v2 = objc_claimAutoreleasedReturnValue(v1);
  v3 = (void *)qword_32C010;
  qword_32C010 = v2;

}

void sub_1F548(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 56));
  _Unwind_Resume(a1);
}

void sub_1F564(uint64_t a1)
{
  void *v1;
  id v2;
  id v3;
  void *v4;
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v1 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "layer"));

  if (v1)
  {
    v2 = objc_retainAutorelease((id)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "_generateImage")));
    v3 = objc_msgSend(v2, "CGImage");
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "layer"));
    objc_msgSend(v4, "setContents:", v3);

  }
}

uint64_t sub_1F5EC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

void sub_1FF64(id *a1)
{
  void *v2;
  void *v3;
  _QWORD *v4;
  void *v5;
  void *v6;
  _QWORD v7[5];
  id v8;
  id v9;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[4], "currentGeneration"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "data"));

  objc_msgSend(a1[4], "_q_registerNewGenerationWithArray:", a1[5]);
  v4 = objc_msgSend(a1[6], "copy");
  if (!v4)
  {
    v7[0] = _NSConcreteStackBlock;
    v7[1] = 3221225472;
    v7[2] = sub_2006C;
    v7[3] = &unk_2E4AF8;
    v7[4] = a1[4];
    v8 = v3;
    v9 = a1[5];
    v4 = objc_retainBlock(v7);

  }
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[4], "dynamicArray"));
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[4], "currentGeneration"));
  objc_msgSend(v5, "performBatchUpdatesWithGeneration:block:", v6, v4);

}

void sub_2006C(uint64_t a1, void *a2)
{
  void *v3;
  void *v4;
  id v5;
  id v6;

  v6 = a2;
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "updateType"));
  if ((objc_msgSend(v3, "isEqualToString:", CFSTR("move")) & 1) == 0)
  {

    v5 = v6;
    goto LABEL_5;
  }
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "uniqueId"));

  v5 = v6;
  if (!v4)
  {
LABEL_5:
    objc_msgSend(*(id *)(a1 + 32), "_replaceUpdateForDynamicArray:newArray:updater:", *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), v5);
    goto LABEL_6;
  }
  objc_msgSend(*(id *)(a1 + 32), "_moveUpdateForDynamicArray:newArray:updater:", *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), v6);
LABEL_6:

}

void sub_20260(uint64_t a1, unint64_t a2)
{
  id v3;

  if (*(_QWORD *)(a1 + 48) > a2)
  {
    v3 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "objectAtIndexedSubscript:", a2));
    objc_msgSend(*(id *)(a1 + 40), "addObject:", v3);

  }
}

void sub_20CEC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_20D10(uint64_t a1)
{
  void *v2;
  void *v3;
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "delegate"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "absoluteString"));
  objc_msgSend(v2, "hostedMessageViewDidTriggerAction:", v3);

  objc_msgSend(WeakRetained, "_dismiss");
}

void sub_20E60(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_20E84(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(WeakRetained, "_dismiss");

}

void sub_212D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_212F0(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_21300(uint64_t a1)
{

}

void sub_21308(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8);
  v2 = *(void **)(v1 + 40);
  *(_QWORD *)(v1 + 40) = 0;

}

void sub_214D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_214F0(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8);
  v2 = *(void **)(v1 + 40);
  *(_QWORD *)(v1 + 40) = 0;

}

void sub_21720(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,id location)
{
  id *v25;

  objc_destroyWeak(v25);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_2173C(uint64_t a1)
{
  void (**v2)(void);
  void (**v3)(void);

  objc_msgSend(*(id *)(a1 + 32), "invalidate");
  v2 = (void (**)(void))objc_retainBlock(*(id *)(a1 + 40));
  if (v2)
  {
    v3 = v2;
    v2[2]();
    v2 = v3;
  }

}

void sub_21784(uint64_t a1)
{
  void *v2;
  BSUIFeedCardDataSource *v3;
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 64));
  if (WeakRetained)
  {
    v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "tui_effectiveSyncLayoutController"));
    v3 = -[BSUIFeedCardDataSource initWithFeedArray:syncLayoutController:options:]([BSUIFeedCardDataSource alloc], "initWithFeedArray:syncLayoutController:options:", *(_QWORD *)(a1 + 40), v2, *(_QWORD *)(a1 + 48));
    +[BCCardStackViewController pushCardsWithDataSource:focusedIndex:animated:fromViewController:completion:](BCCardStackViewController, "pushCardsWithDataSource:focusedIndex:animated:fromViewController:completion:", v3, *(_QWORD *)(a1 + 72), *(unsigned __int8 *)(a1 + 80), WeakRetained, *(_QWORD *)(a1 + 56));

  }
  else
  {
    (*(void (**)(void))(*(_QWORD *)(a1 + 56) + 16))();
  }

}

uint64_t sub_21828(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

void sub_21964(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_2197C(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8);
  v2 = *(void **)(v1 + 40);
  *(_QWORD *)(v1 + 40) = 0;

}

void sub_21B20(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 88));
  _Unwind_Resume(a1);
}

void sub_21B3C(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;
  void *v5;
  id v6;
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  if (WeakRetained)
  {
    v2 = objc_opt_class(NSString);
    v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "objectForKeyedSubscript:", BCCardStackIdentifierKey));
    v4 = BUDynamicCast(v2, v3);
    v5 = (void *)objc_claimAutoreleasedReturnValue(v4);

    +[BCCardStackViewController appendCardsWithData:fromViewController:identifier:completion:](BCCardStackViewController, "appendCardsWithData:fromViewController:identifier:completion:", *(_QWORD *)(a1 + 40), WeakRetained, v5, *(_QWORD *)(a1 + 48));
  }
  else
  {
    v6 = objc_retainBlock(*(id *)(a1 + 48));
    v5 = v6;
    if (v6)
      (*((void (**)(id))v6 + 2))(v6);
  }

}

uint64_t sub_21BFC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

void sub_22CAC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id *location, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,id a36)
{
  objc_destroyWeak(location);
  objc_destroyWeak(&a36);
  _Unwind_Resume(a1);
}

void sub_22CD4(uint64_t a1, void *a2)
{
  void *v3;
  void *v4;
  id v5;

  v3 = *(void **)(a1 + 32);
  v5 = a2;
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "placeholderText"));
  objc_msgSend(v5, "setPlaceholder:", v4);

  objc_msgSend(v5, "setDelegate:", *(_QWORD *)(a1 + 40));
}

id sub_22D34(uint64_t a1)
{
  id WeakRetained;
  NSMutableArray *v3;
  void *v4;
  id v5;
  id v6;
  uint64_t v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  void *v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  NSMutableArray *v26;
  _BYTE v27[128];

  if (objc_msgSend(*(id *)(a1 + 32), "isObject"))
  {
    WeakRetained = objc_loadWeakRetained((id *)(a1 + 88));
    v3 = objc_opt_new(NSMutableArray);
    v22 = 0u;
    v23 = 0u;
    v24 = 0u;
    v25 = 0u;
    v21 = WeakRetained;
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "textFields"));
    v5 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v22, v27, 16);
    if (v5)
    {
      v6 = v5;
      v7 = *(_QWORD *)v23;
      do
      {
        v8 = 0;
        do
        {
          if (*(_QWORD *)v23 != v7)
            objc_enumerationMutation(v4);
          v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*((_QWORD *)&v22 + 1) + 8 * (_QWORD)v8), "text"));
          -[NSMutableArray addObject:](v3, "addObject:", v9);

          v8 = (char *)v8 + 1;
        }
        while (v6 != v8);
        v6 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v22, v27, 16);
      }
      while (v6);
    }

    v10 = *(void **)(a1 + 32);
    v26 = v3;
    v11 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v26, 1));
    v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "callWithArguments:", v11));

    v13 = *(void **)(a1 + 40);
    v14 = *(_QWORD *)(a1 + 48);
    v15 = *(_QWORD *)(a1 + 56);
    v16 = *(_QWORD *)(a1 + 64);
    v17 = *(_QWORD *)(a1 + 96);
    v18 = *(_QWORD *)(a1 + 72);
    v19 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 80), "option"));
    objc_msgSend(v13, "_recordAlertMetrics:actionType:title:message:alertStyle:actionTargetId:returnValue:", v14, v15, v16, v18, v17, v19, v12);

  }
  return objc_msgSend(*(id *)(a1 + 40), "setAlertController:", 0);
}

void sub_230C0(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  id v8;

  if (*(_BYTE *)(a1 + 88))
    v2 = objc_claimAutoreleasedReturnValue(+[UIColor blackColor](UIColor, "blackColor"));
  else
    v2 = 0;
  v8 = (id)v2;
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "createAlertControllerWith:alertStyle:title:message:alignment:tintColor:metricsData:", *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_BYTE *)(a1 + 88) == 0, v2, *(_QWORD *)(a1 + 64)));
  objc_msgSend(*(id *)(a1 + 32), "setAlertController:", v3);

  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 72), "objectForKeyedSubscript:", CFSTR("sourceView")));
  if (v4)
  {
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "alertController"));
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "popoverPresentationController"));
    objc_msgSend(v6, "setSourceView:", v4);

  }
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "alertController"));
  +[UIViewController jsa_presentViewController:options:animated:completion:](UIViewController, "jsa_presentViewController:options:animated:completion:", v7, *(_QWORD *)(a1 + 72), 1, 0);

}

uint64_t sub_231D4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

void sub_23EB4(id a1)
{
  void *v1;
  id v2;
  void *v3;
  id v4;
  void *v5;
  _QWORD v6[14];

  v1 = (void *)objc_claimAutoreleasedReturnValue(+[TUIAttributeSet supportedAttributesSizeAndIntrinsic](TUIAttributeSet, "supportedAttributesSizeAndIntrinsic"));
  v2 = objc_msgSend(v1, "mutableCopy");

  v6[0] = CFSTR("calendar-data");
  v6[1] = CFSTR("progress-today");
  v6[2] = CFSTR("control-color");
  v6[3] = CFSTR("progress-color");
  v6[4] = TUIAttributeNameBackgroundColor;
  v6[5] = CFSTR("text-color");
  v6[6] = CFSTR("completed-text-color");
  v6[7] = CFSTR("future-day-text-color");
  v6[8] = CFSTR("previous-day-border-color");
  v6[9] = CFSTR("previous-day-text-color");
  v6[10] = TUIAttributeNameFont;
  v6[11] = TUIAttributeNameObserveTrigger;
  v6[12] = TUIAttributeNameObserveTriggerDelay;
  v6[13] = TUIAttributeNameObserveTriggerValue;
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", v6, 14));
  objc_msgSend(v2, "addAttributesFromArray:", v3);

  v4 = objc_msgSend(v2, "copy");
  v5 = (void *)qword_32C020;
  qword_32C020 = (uint64_t)v4;

}

void sub_24058(id a1)
{
  uint64_t v1;
  void *v2;
  _QWORD v3[8];
  _QWORD v4[8];

  v3[0] = CFSTR("calendar-data");
  v3[1] = CFSTR("completed-text-color");
  v4[0] = &off_2FB918;
  v4[1] = &off_2FB930;
  v3[2] = CFSTR("control-color");
  v3[3] = CFSTR("future-day-text-color");
  v4[2] = &off_2FB930;
  v4[3] = &off_2FB930;
  v3[4] = CFSTR("previous-day-border-color");
  v3[5] = CFSTR("previous-day-text-color");
  v4[4] = &off_2FB930;
  v4[5] = &off_2FB930;
  v3[6] = CFSTR("progress-color");
  v3[7] = CFSTR("text-color");
  v4[6] = &off_2FB930;
  v4[7] = &off_2FB930;
  v1 = objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", v4, v3, 8));
  v2 = (void *)qword_32C030;
  qword_32C030 = v1;

}

void sub_25458(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_25470(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_25480(uint64_t a1)
{

}

void sub_25488(uint64_t a1, void *a2, uint64_t a3, _BYTE *a4)
{
  id v7;

  v7 = a2;
  if (objc_msgSend(v7, "type") == (char *)&dword_0 + 1)
  {
    objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40), a2);
    *a4 = 1;
  }

}

void sub_26754(uint64_t a1, char a2)
{
  id v3;
  void *v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  void *v21;
  double v22;
  double v23;
  double v24;
  double v25;
  uint64_t v26;
  void *v27;
  double v28;
  double v29;
  double v30;
  double v31;
  void *v38;
  id v39;

  if ((a2 & 1) != 0)
    v3 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "topViewController"));
  else
    v3 = *(id *)(a1 + 40);
  v39 = v3;
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "navigationBar"));
  objc_msgSend(v4, "layoutMargins");
  v6 = v5;
  v8 = v7;
  v10 = v9;
  v12 = v11;

  if ((objc_msgSend(*(id *)(a1 + 40), "bsui_prefersExtraCompactNavBarMargin") & 1) != 0)
  {
    +[BSUINavigationBarInsets extraCompact](BSUINavigationBarInsets, "extraCompact");
    v14 = v13;
    v16 = v15;
    v18 = v17;
    v20 = v19;
  }
  else
  {
    v21 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "traitCollection"));
    if (objc_msgSend(v21, "horizontalSizeClass") == (char *)&dword_0 + 1)
      +[BSUINavigationBarInsets compact](BSUINavigationBarInsets, "compact");
    else
      +[BSUINavigationBarInsets regular](BSUINavigationBarInsets, "regular");
    v14 = v22;
    v16 = v23;
    v18 = v24;
    v20 = v25;

  }
  v26 = BUProtocolCast(&OBJC_PROTOCOL___BSUINavigationBarMetricsProviding, v39);
  v27 = (void *)objc_claimAutoreleasedReturnValue(v26);
  objc_msgSend(v27, "navigationBarMetricsLayoutMargins");
  if (v29 != UIEdgeInsetsZero.left
    || v28 != UIEdgeInsetsZero.top
    || v31 != UIEdgeInsetsZero.right
    || v30 != UIEdgeInsetsZero.bottom)
  {
    v20 = v31;
    v18 = v30;
    v16 = v29;
    v14 = v28;
  }
  if (v8 != v16 || v6 != v14 || v12 != v20 || v10 != v18)
  {
    v38 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "navigationBar"));
    objc_msgSend(v38, "setLayoutMargins:", v14, v16, v18, v20);

  }
}

uint64_t sub_268E8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

id sub_268F8(uint64_t a1, void *a2)
{
  id result;

  result = objc_msgSend(a2, "isCancelled");
  if ((_DWORD)result)
    return (id)(*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
  return result;
}

uint64_t sub_27DAC(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_27DBC(uint64_t a1)
{

}

void sub_27DC4(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  BSUIDownloadProgress *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  NSObject *v10;
  void *v11;
  void *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  __int16 v19;
  uint64_t v20;
  __int16 v21;
  uint64_t v22;

  v2 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1[4] + 8), "objectForKey:", a1[5]));
  v3 = *(_QWORD *)(a1[8] + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

  v5 = *(_QWORD *)(*(_QWORD *)(a1[8] + 8) + 40);
  if (!v5)
  {
    v6 = -[BSUIDownloadProgress initWithKind:instance:parameters:]([BSUIDownloadProgress alloc], "initWithKind:instance:parameters:", a1[6], a1[5], a1[7]);
    v7 = *(_QWORD *)(a1[8] + 8);
    v8 = *(void **)(v7 + 40);
    *(_QWORD *)(v7 + 40) = v6;

    v9 = BCBookDownloadLog();
    v10 = objc_claimAutoreleasedReturnValue(v9);
    if (os_log_type_enabled(v10, OS_LOG_TYPE_DEBUG))
    {
      v15 = a1[5];
      v14 = a1[6];
      v16 = a1[7];
      v17 = 138412802;
      v18 = v14;
      v19 = 2112;
      v20 = v15;
      v21 = 2112;
      v22 = v16;
      _os_log_debug_impl(&dword_0, v10, OS_LOG_TYPE_DEBUG, "Created the BSUIDownloadProgress for kind: %@, instance: %@, parameters: %@", (uint8_t *)&v17, 0x20u);
    }

    v5 = *(_QWORD *)(*(_QWORD *)(a1[8] + 8) + 40);
  }
  v11 = (void *)a1[5];
  v12 = *(void **)(a1[4] + 8);
  v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "stringValue"));
  objc_msgSend(v12, "setObject:forKey:", v5, v13);

}

void sub_280F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_28114(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  id v11;

  v2 = *(void **)(*(_QWORD *)(a1 + 32) + 8);
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "storeID"));
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "stringValue"));
  v5 = objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "objectForKey:", v4));
  v6 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
  v7 = *(void **)(v6 + 40);
  *(_QWORD *)(v6 + 40) = v5;

  if (!*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40))
  {
    v8 = *(void **)(a1 + 40);
    v9 = *(void **)(*(_QWORD *)(a1 + 32) + 8);
    v11 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "storeID"));
    v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "stringValue"));
    objc_msgSend(v9, "removeObjectForKey:", v10);

  }
}

void sub_283A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_283D0(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;

  v2 = *(void **)(*(_QWORD *)(a1 + 32) + 8);
  v6 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "assetIdentifier"));
  v3 = objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "objectForKey:", v6));
  v4 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
  v5 = *(void **)(v4 + 40);
  *(_QWORD *)(v4 + 40) = v3;

}

void sub_285F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_28618(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;

  v2 = *(void **)(*(_QWORD *)(a1 + 32) + 8);
  v6 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "assetIdentifier"));
  v3 = objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "objectForKey:", v6));
  v4 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
  v5 = *(void **)(v4 + 40);
  *(_QWORD *)(v4 + 40) = v3;

}

void sub_28930(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, ...)
{
  va_list va;

  va_start(va, a16);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_28958(uint64_t a1)
{
  id v2;
  uint64_t v3;
  void *v4;

  v2 = objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 8), "copy");
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

id sub_28A0C(uint64_t a1)
{
  return objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 8), "addObject:", *(_QWORD *)(a1 + 40));
}

id sub_28A94(uint64_t a1)
{
  return objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 8), "removeObject:", *(_QWORD *)(a1 + 40));
}

void sub_28B34(void *a1, int a2, os_log_t log, const char *a4, uint8_t *a5)
{
  _os_log_debug_impl(a1, log, OS_LOG_TYPE_DEBUG, a4, a5, 0xCu);
}

id BSUICloudAssetRatingsManagerLog()
{
  if (qword_32C048 != -1)
    dispatch_once(&qword_32C048, &stru_2E4E78);
  return (id)qword_32C040;
}

void sub_28B84(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.iBooks", "BSUICloudAssets.Ratings");
  v2 = (void *)qword_32C040;
  qword_32C040 = (uint64_t)v1;

}

void sub_28D9C(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  void (**v9)(id, uint64_t, id, void *, void *, void *);
  void *v10;
  void *v11;
  void *v12;
  _QWORD v13[4];
  id v14;
  id v15;
  id v16;

  v5 = a2;
  v6 = a3;
  if (v5 && !*(_BYTE *)(a1 + 64))
  {
    v9 = (void (**)(id, uint64_t, id, void *, void *, void *))objc_retainBlock(*(id *)(a1 + 56));
    if (v9)
    {
      objc_msgSend(v5, "normalizedStarRating");
      v10 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](NSNumber, "numberWithDouble:"));
      v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "reviewTitle"));
      v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "reviewBody"));
      v9[2](v9, 1, v6, v10, v11, v12);

    }
  }
  else
  {
    v7 = *(unsigned __int8 *)(a1 + 65);
    v13[0] = _NSConcreteStackBlock;
    v13[1] = 3221225472;
    v13[2] = sub_28F08;
    v13[3] = &unk_2E4EC8;
    v8 = *(_QWORD *)(a1 + 32);
    v14 = *(id *)(a1 + 40);
    v15 = *(id *)(a1 + 48);
    v16 = *(id *)(a1 + 56);
    +[BSUICloudAssetRatingsManager _fetchRatingsDataForItem:shouldSuppressMetrics:shouldSuppressResponseDialogs:completionHandler:](BSUICloudAssetRatingsManager, "_fetchRatingsDataForItem:shouldSuppressMetrics:shouldSuppressResponseDialogs:completionHandler:", v8, v7, 1, v13);

  }
}

void sub_28F08(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  id v9;
  float v10;
  void *v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  void *v17;
  _QWORD v18[4];
  id v19;
  id v20;
  id v21;
  id v22;

  v3 = a2;
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("error")));
  if (objc_msgSend(v4, "BOOLValue"))
  {

  }
  else
  {
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("rating")));

    if (v5)
    {
      v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("rating")));
      v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("title")));
      v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("body")));
      v9 = objc_msgSend(objc_alloc((Class)BCMutableAssetReview), "initWithAssetReviewID:", *(_QWORD *)(a1 + 32));
      objc_msgSend(v6, "floatValue");
      objc_msgSend(v9, "setNormalizedStarRating:", v10);
      objc_msgSend(v9, "setReviewTitle:", v7);
      objc_msgSend(v9, "setReviewBody:", v8);
      v18[0] = _NSConcreteStackBlock;
      v18[1] = 3221225472;
      v18[2] = sub_29118;
      v18[3] = &unk_2E4EA0;
      v11 = *(void **)(a1 + 40);
      v12 = *(id *)(a1 + 48);
      v19 = v6;
      v20 = v7;
      v21 = v8;
      v22 = v12;
      v13 = v8;
      v14 = v7;
      v15 = v6;
      objc_msgSend(v11, "setAssetReview:completion:", v9, v18);

      goto LABEL_8;
    }
  }
  v16 = objc_retainBlock(*(id *)(a1 + 48));
  if (v16)
  {
    v17 = (void *)objc_claimAutoreleasedReturnValue(+[NSError errorWithDomain:code:userInfo:](NSError, "errorWithDomain:code:userInfo:", CFSTR("BSUICloudAssetRatingsManager"), 500, v3));
    (*((void (**)(id, _QWORD, void *, _QWORD, _QWORD, _QWORD))v16 + 2))(v16, 0, v17, 0, 0, 0);

  }
LABEL_8:

}

void sub_29118(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v6;
  void *v7;
  id v8;

  v8 = a4;
  v6 = objc_retainBlock(*(id *)(a1 + 56));
  v7 = v6;
  if (v6)
    (*((void (**)(id, uint64_t, id, _QWORD, _QWORD, _QWORD))v6 + 2))(v6, a2, v8, *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48));

}

void sub_292C8(uint64_t a1, uint64_t a2, void *a3, void *a4, void *a5, void *a6)
{
  __CFString *v11;
  __CFString *v12;
  _UNKNOWN **v13;
  id v14;
  void *v15;
  uint64_t v16;
  void *v17;
  __CFString *v18;
  const __CFString *v19;
  const __CFString *v20;
  _UNKNOWN **v21;
  const __CFString *v22;
  void *v23;
  _QWORD v24[5];

  v11 = a6;
  v12 = a5;
  v13 = a4;
  v14 = a3;
  v15 = (void *)objc_claimAutoreleasedReturnValue(+[JSABridge sharedInstance](JSABridge, "sharedInstance"));
  v16 = *(_QWORD *)(a1 + 32);
  v17 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithBool:](NSNumber, "numberWithBool:", a2));
  v18 = (__CFString *)objc_claimAutoreleasedReturnValue(objc_msgSend(v14, "description", v17));

  v19 = &stru_2F6710;
  if (v18)
    v20 = v18;
  else
    v20 = &stru_2F6710;
  v21 = &off_2FB948;
  if (v13)
    v21 = v13;
  v24[1] = v20;
  v24[2] = v21;
  if (v12)
    v22 = v12;
  else
    v22 = &stru_2F6710;
  if (v11)
    v19 = v11;
  v24[3] = v22;
  v24[4] = v19;
  v23 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", v24, 5));
  objc_msgSend(v15, "enqueueValueCall:arguments:file:line:", v16, v23, CFSTR("BSUICloudAssetRatingsManager.m"), 137);

}

void sub_29730(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  unsigned __int8 v5;
  void (**v6)(id, _QWORD, void *);
  void *v7;
  id v8;
  uint64_t v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  id v16;
  id v17;
  _QWORD v18[4];
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  _QWORD v26[2];
  _QWORD v27[2];

  v3 = a2;
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("error")));
  v5 = objc_msgSend(v4, "BOOLValue");

  if ((v5 & 1) != 0)
  {
    v6 = (void (**)(id, _QWORD, void *))objc_retainBlock(*(id *)(a1 + 72));
    if (v6)
    {
      v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSError errorWithDomain:code:userInfo:](NSError, "errorWithDomain:code:userInfo:", CFSTR("BSUICloudAssetRatingsManager"), 500, v3));
      v6[2](v6, 0, v7);

    }
  }
  else
  {
    v8 = objc_alloc_init((Class)NSDictionary);
    v26[0] = CFSTR("BSUICloudAssetRateContentUserInfoKeyAssetID");
    v26[1] = CFSTR("BSUICloudAssetRateContentUserInfoKeyNewRating");
    v9 = *(_QWORD *)(a1 + 40);
    v27[0] = *(_QWORD *)(a1 + 32);
    v27[1] = v9;
    v6 = (void (**)(id, _QWORD, void *))objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", v27, v26, 2));

    v10 = (void *)objc_claimAutoreleasedReturnValue(+[NSNotificationCenter defaultCenter](NSNotificationCenter, "defaultCenter"));
    objc_msgSend(v10, "postNotificationName:object:userInfo:", CFSTR("BSUICloudAssetRateContentNotification"), *(_QWORD *)(a1 + 80), v6);

    v11 = (void *)objc_claimAutoreleasedReturnValue(+[BCCloudAssetManager sharedManager](BCCloudAssetManager, "sharedManager"));
    v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "assetReviewManager"));

    v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 48), "ams_DSID"));
    v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "stringValue"));
    v15 = (void *)objc_claimAutoreleasedReturnValue(+[BCAssetReview assetReviewIDWithUserID:assetID:](BCAssetReview, "assetReviewIDWithUserID:assetID:", v14, *(_QWORD *)(a1 + 32)));

    v18[0] = _NSConcreteStackBlock;
    v18[1] = 3221225472;
    v18[2] = sub_299C4;
    v18[3] = &unk_2E4F40;
    v19 = v15;
    v20 = *(id *)(a1 + 40);
    v21 = *(id *)(a1 + 56);
    v22 = *(id *)(a1 + 64);
    v23 = v12;
    v25 = *(id *)(a1 + 72);
    v24 = v3;
    v16 = v12;
    v17 = v15;
    objc_msgSend(v16, "assetReviewForAssetReviewID:completion:", v17, v18);

  }
}

void sub_299C4(uint64_t a1, void *a2, void *a3)
{
  id v5;
  unint64_t v6;
  unint64_t v7;
  id v8;
  float v9;
  double v10;
  double v11;
  _BOOL4 v12;
  void *v13;
  unsigned __int8 v14;
  void *v15;
  unsigned __int8 v16;
  id v17;
  void *v18;
  void (**v19)(id, _QWORD, void *);
  void *v20;
  void *v21;
  _QWORD v22[4];
  id v23;

  v5 = a2;
  v6 = a3;
  v7 = (unint64_t)v5;
  v8 = (id)v7;
  if (!(v7 | v6))
    v8 = objc_msgSend(objc_alloc((Class)BCMutableAssetReview), "initWithAssetReviewID:", *(_QWORD *)(a1 + 32));
  if (v8)
  {
    objc_msgSend(*(id *)(a1 + 40), "floatValue");
    v10 = v9;
    objc_msgSend(v8, "normalizedStarRating");
    v12 = v11 != v10;
    if (v11 != v10)
      objc_msgSend(v8, "setNormalizedStarRating:", v10);
    if (*(_QWORD *)(a1 + 48))
    {
      v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "reviewTitle"));
      v14 = objc_msgSend(v13, "isEqualToString:", *(_QWORD *)(a1 + 48));

      if ((v14 & 1) == 0)
      {
        objc_msgSend(v8, "setReviewTitle:", *(_QWORD *)(a1 + 48));
        v12 = 1;
      }
    }
    if (*(_QWORD *)(a1 + 56)
      && (v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "reviewBody")),
          v16 = objc_msgSend(v15, "isEqualToString:", *(_QWORD *)(a1 + 56)),
          v15,
          (v16 & 1) == 0))
    {
      objc_msgSend(v8, "setReviewBody:", *(_QWORD *)(a1 + 56));
    }
    else if (!v12)
    {
      v17 = objc_retainBlock(*(id *)(a1 + 80));
      v18 = v17;
      if (v17)
        (*((void (**)(id, uint64_t, _QWORD))v17 + 2))(v17, 1, 0);

      goto LABEL_22;
    }
    if (!(v7 | v6))
      objc_msgSend(v8, "setModificationDate:", 0);
    v21 = *(void **)(a1 + 64);
    v22[0] = _NSConcreteStackBlock;
    v22[1] = 3221225472;
    v22[2] = sub_29BE8;
    v22[3] = &unk_2E44D0;
    v23 = *(id *)(a1 + 80);
    objc_msgSend(v21, "setAssetReview:completion:", v8, v22);

  }
  else
  {
    v19 = (void (**)(id, _QWORD, void *))objc_retainBlock(*(id *)(a1 + 80));
    if (v19)
    {
      v20 = (void *)objc_claimAutoreleasedReturnValue(+[NSError errorWithDomain:code:userInfo:](NSError, "errorWithDomain:code:userInfo:", CFSTR("BSUICloudAssetRatingsManager"), 500, *(_QWORD *)(a1 + 72)));
      v19[2](v19, 0, v20);

    }
  }
LABEL_22:

}

void sub_29BE8(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v6;
  void *v7;
  id v8;

  v8 = a4;
  v6 = objc_retainBlock(*(id *)(a1 + 32));
  v7 = v6;
  if (v6)
    (*((void (**)(id, uint64_t, id))v6 + 2))(v6, a2, v8);

}

void sub_29EAC(uint64_t a1, uint64_t a2, void *a3)
{
  id v5;
  void *v6;
  uint64_t v7;
  void *v8;
  __CFString *v9;
  const __CFString *v10;
  void *v11;
  _QWORD v12[2];

  v5 = a3;
  v6 = (void *)objc_claimAutoreleasedReturnValue(+[JSABridge sharedInstance](JSABridge, "sharedInstance"));
  v7 = *(_QWORD *)(a1 + 32);
  v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithBool:](NSNumber, "numberWithBool:", a2));
  v12[0] = v8;
  v9 = (__CFString *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "description"));

  v10 = &stru_2F6710;
  if (v9)
    v10 = v9;
  v12[1] = v10;
  v11 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", v12, 2));
  objc_msgSend(v6, "enqueueValueCall:arguments:file:line:", v7, v11, CFSTR("BSUICloudAssetRatingsManager.m"), 283);

}

void sub_2A120(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  unsigned __int8 v5;
  void (**v6)(id, _QWORD, void *);
  void *v7;
  id v8;
  uint64_t v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  _QWORD v17[4];
  id v18;
  const __CFString *v19;
  uint64_t v20;

  v3 = a2;
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("error")));
  v5 = objc_msgSend(v4, "BOOLValue");

  if ((v5 & 1) != 0)
  {
    v6 = (void (**)(id, _QWORD, void *))objc_retainBlock(*(id *)(a1 + 48));
    if (v6)
    {
      v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSError errorWithDomain:code:userInfo:](NSError, "errorWithDomain:code:userInfo:", CFSTR("BSUICloudAssetRatingsManager"), 500, v3));
      v6[2](v6, 0, v7);

    }
  }
  else
  {
    v8 = objc_alloc_init((Class)NSDictionary);
    v9 = *(_QWORD *)(a1 + 32);
    v19 = CFSTR("BSUICloudAssetRateContentUserInfoKeyAssetID");
    v20 = v9;
    v10 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", &v20, &v19, 1));

    v11 = (void *)objc_claimAutoreleasedReturnValue(+[NSNotificationCenter defaultCenter](NSNotificationCenter, "defaultCenter"));
    objc_msgSend(v11, "postNotificationName:object:userInfo:", CFSTR("BSUICloudAssetRatingRemovalNotification"), *(_QWORD *)(a1 + 56), v10);

    v12 = (void *)objc_claimAutoreleasedReturnValue(+[BCCloudAssetManager sharedManager](BCCloudAssetManager, "sharedManager"));
    v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "assetReviewManager"));

    v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "ams_DSID"));
    v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v14, "stringValue"));
    v16 = (void *)objc_claimAutoreleasedReturnValue(+[BCAssetReview assetReviewIDWithUserID:assetID:](BCAssetReview, "assetReviewIDWithUserID:assetID:", v15, *(_QWORD *)(a1 + 32)));

    v17[0] = _NSConcreteStackBlock;
    v17[1] = 3221225472;
    v17[2] = sub_2A33C;
    v17[3] = &unk_2E4FB8;
    v18 = *(id *)(a1 + 48);
    objc_msgSend(v13, "deleteAssetReviewForAssetReviewID:completion:", v16, v17);

  }
}

void sub_2A33C(uint64_t a1, uint64_t a2, void *a3)
{
  id v5;
  void *v6;
  id v7;

  v7 = a3;
  v5 = objc_retainBlock(*(id *)(a1 + 32));
  v6 = v5;
  if (v5)
    (*((void (**)(id, uint64_t, id))v5 + 2))(v5, a2, v7);

}

void sub_2A480(uint64_t a1, uint64_t a2, void *a3)
{
  id v5;
  void *v6;
  uint64_t v7;
  void *v8;
  __CFString *v9;
  const __CFString *v10;
  void *v11;
  _QWORD v12[2];

  v5 = a3;
  v6 = (void *)objc_claimAutoreleasedReturnValue(+[JSABridge sharedInstance](JSABridge, "sharedInstance"));
  v7 = *(_QWORD *)(a1 + 32);
  v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithBool:](NSNumber, "numberWithBool:", a2));
  v12[0] = v8;
  v9 = (__CFString *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "description"));

  v10 = &stru_2F6710;
  if (v9)
    v10 = v9;
  v12[1] = v10;
  v11 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", v12, 2));
  objc_msgSend(v6, "enqueueValueCall:arguments:file:line:", v7, v11, CFSTR("BSUICloudAssetRatingsManager.m"), 328);

}

void sub_2AA0C(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  unsigned int v5;
  id v6;
  void *v7;
  uint64_t v8;
  id v9;
  void *v10;
  _QWORD v11[2];
  _QWORD v12[2];
  _QWORD v13[2];

  v3 = a2;
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("RatingsRequests")));
  v5 = objc_msgSend(v4, "isObject");

  if (v5)
  {
    v6 = (id)objc_claimAutoreleasedReturnValue(+[JSABridge sharedInstance](JSABridge, "sharedInstance"));
    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("RatingsRequests")));
    v8 = *(_QWORD *)(a1 + 32);
    v13[0] = *(_QWORD *)(a1 + 40);
    v9 = objc_retainBlock(*(id *)(a1 + 48));
    v13[1] = v9;
    v10 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", v13, 2));
    objc_msgSend(v6, "enqueueValueInvocation:method:arguments:file:line:", v7, v8, v10, CFSTR("BSUICloudAssetRatingsManager.m"), 368);

LABEL_5:
    goto LABEL_6;
  }
  v6 = objc_retainBlock(*(id *)(a1 + 48));
  if (v6)
  {
    v11[0] = CFSTR("error");
    v11[1] = CFSTR("errorType");
    v12[0] = &__kCFBooleanTrue;
    v12[1] = CFSTR("JSNotLoaded");
    v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", v12, v11, 2));
    (*((void (**)(id, void *))v6 + 2))(v6, v7);
    goto LABEL_5;
  }
LABEL_6:

}

void sub_2ABE0(id a1)
{
  void *v1;
  id v2;
  void *v3;
  id v4;
  void *v5;
  _QWORD v6[2];

  v1 = (void *)objc_claimAutoreleasedReturnValue(+[TUIAttributeSet supportedAttributesSize](TUIAttributeSet, "supportedAttributesSize"));
  v2 = objc_msgSend(v1, "mutableCopy");

  v6[0] = TUIAttributeNameCornerRadius;
  v6[1] = TUIAttributeNameMaskColor;
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", v6, 2));
  objc_msgSend(v2, "addAttributesFromArray:", v3);

  v4 = objc_msgSend(v2, "copy");
  v5 = (void *)qword_32C050;
  qword_32C050 = (uint64_t)v4;

}

void sub_2AEE0(uint64_t a1)
{
  void *v2;
  void *v3;
  _BOOL8 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  id v13;
  void *v14;
  void *v15;
  id v16;
  void *v17;
  void *v18;

  objc_msgSend(*(id *)(a1 + 32), "_removePurchaseByItemID:", *(_QWORD *)(a1 + 40));
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_addPurchaseForItemID:isAudioBook:", *(_QWORD *)(a1 + 40), *(unsigned __int8 *)(a1 + 80)));
  v3 = *(void **)(a1 + 48);
  if (v3)
    goto LABEL_5;
  v4 = os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR);
  if (v4)
    sub_238AA0(v4, v5, v6, v7, v8, v9, v10, v11);
  v3 = *(void **)(a1 + 48);
  if (v3)
  {
LABEL_5:
    v12 = v3;
  }
  else
  {
    v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "delegate"));
    v12 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v18, "analyticsTrackerForPurchaseMonitor:", *(_QWORD *)(a1 + 32)));

  }
  v13 = objc_msgSend(*(id *)(a1 + 32), "_newContentDataForID:isAudioBook:hasRacSupport:tracker:supplementalContentCount:appAnalyticsAdditionalData:", *(_QWORD *)(a1 + 40), *(unsigned __int8 *)(a1 + 80), *(unsigned __int8 *)(a1 + 81), v12, 0, *(_QWORD *)(a1 + 56));
  v14 = *(void **)(a1 + 32);
  v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "identifier"));
  v16 = objc_msgSend(v14, "_newPurchaseDataForPurchaseID:isPreorder:pricingParameters:", v15, *(unsigned __int8 *)(a1 + 82), *(_QWORD *)(a1 + 64));

  v17 = (void *)objc_claimAutoreleasedReturnValue(+[BAEventReporter sharedReporter](BAEventReporter, "sharedReporter"));
  objc_msgSend(v17, "emitPurchaseAttemptEventWithTracker:contentData:purchaseData:upSellData:", v12, v13, v16, *(_QWORD *)(a1 + 72));

}

void sub_2B218(uint64_t a1)
{
  _QWORD block[4];
  id v2;

  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_2B280;
  block[3] = &unk_2E4608;
  v2 = *(id *)(a1 + 32);
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);

}

id sub_2B280(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "invalidate");
}

void sub_2B288(uint64_t a1)
{
  void *v2;
  void *v3;
  _BOOL8 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  void *v13;
  uint64_t v14;
  id v15;
  id v16;
  void *v17;
  id v18;
  void *v19;
  void *v20;
  id v21;
  void *v22;
  void *v23;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_purchaseForItemID:", *(_QWORD *)(a1 + 40)));
  v3 = *(void **)(a1 + 48);
  if (v3)
    goto LABEL_5;
  v4 = os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR);
  if (v4)
    sub_238AA0(v4, v5, v6, v7, v8, v9, v10, v11);
  v3 = *(void **)(a1 + 48);
  if (v3)
  {
LABEL_5:
    v12 = v3;
  }
  else
  {
    v23 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "delegate"));
    v12 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v23, "analyticsTrackerForPurchaseMonitor:", *(_QWORD *)(a1 + 32)));

  }
  v13 = *(void **)(a1 + 32);
  v14 = *(_QWORD *)(a1 + 40);
  v15 = objc_msgSend(v2, "isAudioBook");
  v16 = objc_msgSend(*(id *)(a1 + 56), "hasRacGUID");
  v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 56), "supplementalContentCount"));
  v18 = objc_msgSend(v13, "_newContentDataForID:isAudioBook:hasRacSupport:tracker:supplementalContentCount:appAnalyticsAdditionalData:", v14, v15, v16, v12, v17, *(_QWORD *)(a1 + 64));

  v19 = *(void **)(a1 + 32);
  v20 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "identifier"));
  v21 = objc_msgSend(v19, "_newPurchaseDataForPurchaseID:isPreorder:pricingParameters:", v20, *(unsigned __int8 *)(a1 + 96), *(_QWORD *)(a1 + 72));

  v22 = (void *)objc_claimAutoreleasedReturnValue(+[BAEventReporter sharedReporter](BAEventReporter, "sharedReporter"));
  objc_msgSend(v22, "emitPurchaseSuccessEventWithTracker:contentData:purchaseData:upSellData:completion:", v12, v18, v21, *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88));

  objc_msgSend(*(id *)(a1 + 32), "_removePurchaseByItemID:", *(_QWORD *)(a1 + 40));
}

void sub_2B5F0(uint64_t a1)
{
  _QWORD block[4];
  id v2;

  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_2B658;
  block[3] = &unk_2E4608;
  v2 = *(id *)(a1 + 32);
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);

}

id sub_2B658(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "invalidate");
}

void sub_2B660(uint64_t a1)
{
  void *v2;
  void *v3;
  _BOOL8 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  id v13;
  void *v14;
  void *v15;
  id v16;
  void *v17;
  void *v18;
  void *v19;
  unsigned int v20;
  void *v21;
  char *v22;
  uint64_t v23;
  void *v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  void *v29;
  void *v30;
  void *v31;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_purchaseForItemID:", *(_QWORD *)(a1 + 40)));
  v3 = *(void **)(a1 + 48);
  if (v3)
    goto LABEL_5;
  v4 = os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR);
  if (v4)
    sub_238AA0(v4, v5, v6, v7, v8, v9, v10, v11);
  v3 = *(void **)(a1 + 48);
  if (v3)
  {
LABEL_5:
    v12 = v3;
  }
  else
  {
    v30 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "delegate"));
    v12 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v30, "analyticsTrackerForPurchaseMonitor:", *(_QWORD *)(a1 + 32)));

  }
  v13 = objc_msgSend(*(id *)(a1 + 32), "_newContentDataForID:isAudioBook:hasRacSupport:tracker:supplementalContentCount:appAnalyticsAdditionalData:", *(_QWORD *)(a1 + 40), objc_msgSend(v2, "isAudioBook"), *(unsigned __int8 *)(a1 + 96), v12, 0, *(_QWORD *)(a1 + 56));
  v14 = *(void **)(a1 + 32);
  v31 = v2;
  v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "identifier"));
  v16 = objc_msgSend(v14, "_newPurchaseDataForPurchaseID:isPreorder:pricingParameters:", v15, *(unsigned __int8 *)(a1 + 97), *(_QWORD *)(a1 + 64));

  v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 72), "errorCode"));
  v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 72), "errorDescription"));
  v19 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 72), "errorDomain"));
  v20 = objc_msgSend(*(id *)(a1 + 72), "isUserCancelError");
  v21 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 72), "errorDomain"));
  if (objc_msgSend(v21, "isEqualToString:", AMSErrorDomain))
  {
    v22 = (char *)objc_msgSend(v17, "longValue");

    if (v22 != (_BYTE *)&stru_108.size + 1)
      goto LABEL_12;
    v23 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 72), "firstUnderlyingErrorCode"));
    if (!v23)
      goto LABEL_12;
    v24 = (void *)v23;
    v25 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 72), "firstUnderlyingErrorLocalizedDescription"));

    if (!v25)
      goto LABEL_12;
    v26 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 72), "firstUnderlyingErrorCode"));

    v21 = v18;
    v17 = (void *)v26;
    v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 72), "firstUnderlyingErrorLocalizedDescription"));
  }

LABEL_12:
  if (v20)
    v27 = 2;
  else
    v27 = 1;
  v28 = objc_msgSend(*(id *)(a1 + 32), "_newPurchaseFailData:errorCode:errorDescription:errorDomain:", v27, v17, v18, v19);
  v29 = (void *)objc_claimAutoreleasedReturnValue(+[BAEventReporter sharedReporter](BAEventReporter, "sharedReporter"));
  objc_msgSend(v29, "emitPurchaseFailEventWithTracker:contentData:purchaseData:upSellData:failData:completion:", v12, v13, v16, *(_QWORD *)(a1 + 80), v28, *(_QWORD *)(a1 + 88));

  objc_msgSend(*(id *)(a1 + 32), "_removePurchaseByItemID:", *(_QWORD *)(a1 + 40));
}

void sub_2D26C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_2D284(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_2D294(uint64_t a1)
{

}

id sub_2D29C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40), "appendFormat:", CFSTR(" %@='%@'"), a2, a3);
}

void sub_2D32C(id a1)
{
  BSUIItemDescriptionCache *v1;
  void *v2;

  v1 = -[BSUIItemDescriptionCache initWithMaxItemCount:subfolder:]([BSUIItemDescriptionCache alloc], "initWithMaxItemCount:subfolder:", 300, 0);
  v2 = (void *)qword_32C068;
  qword_32C068 = (uint64_t)v1;

}

id sub_2D4E8(uint64_t a1, uint64_t a2)
{
  return _objc_msgSend(*(id *)(a1 + 32), "_fetchWithCompletion:", a2);
}

void sub_2D784(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  id v7;
  _QWORD v8[5];
  _QWORD v9[5];
  id v10;
  id v11;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "q_updateDatabaseWithNewProfiles:expirationDate:moc:", *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56)));
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472;
  v9[2] = sub_2D8DC;
  v9[3] = &unk_2E5278;
  v3 = *(void **)(a1 + 40);
  v9[4] = *(_QWORD *)(a1 + 32);
  v7 = v2;
  v10 = v7;
  v11 = *(id *)(a1 + 56);
  objc_msgSend(v3, "enumerateKeysAndObjectsUsingBlock:", v9);
  if (*(_QWORD *)(a1 + 64))
  {
    v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableSet setWithArray:](NSMutableSet, "setWithArray:"));
    if (v4)
    {
      v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "allKeys"));
      v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSSet setWithArray:](NSSet, "setWithArray:", v5));
      objc_msgSend(v4, "minusSet:", v6);

    }
  }
  else
  {
    v4 = 0;
  }
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472;
  v8[2] = sub_2D980;
  v8[3] = &unk_2E52A0;
  v8[4] = *(_QWORD *)(a1 + 32);
  objc_msgSend(v4, "enumerateObjectsUsingBlock:", v8);

}

void sub_2D8DC(uint64_t a1, void *a2)
{
  void *v3;
  void *v4;
  void *v5;
  id v6;

  v6 = a2;
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 48), "objectForKey:"));
  if (v3)
  {
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "objectForKeyedSubscript:", v6));
    if (v4)
    {
      v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "q_itemDescriptionFromCachedItemDescription:moc:", v4, *(_QWORD *)(a1 + 48)));
      if (v5)
        objc_msgSend(v3, "set:error:", v5, 0);

    }
  }

}

void sub_2D980(uint64_t a1, uint64_t a2)
{
  void *v2;
  id v3;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 48), "objectForKey:", a2));
  if (v2)
  {
    v3 = v2;
    objc_msgSend(v2, "set:error:", 0, 0);
    v2 = v3;
  }

}

void sub_2DAE4(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void (**v5)(id, void *);
  void *v6;
  uint64_t v7;

  v2 = *(void **)(a1 + 32);
  v7 = *(_QWORD *)(a1 + 40);
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v7, 1));
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "sq_fetchItemDescriptionsForIdentifiers:moc:", v3, *(_QWORD *)(a1 + 48)));

  v5 = (void (**)(id, void *))objc_retainBlock(*(id *)(a1 + 56));
  if (v5)
  {
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "objectForKeyedSubscript:", *(_QWORD *)(a1 + 40)));
    v5[2](v5, v6);

  }
}

void sub_2E0E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_2E100(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_2E110(uint64_t a1)
{

}

void sub_2E118(uint64_t a1, void *a2, void *a3)
{
  void *v5;
  id v6;
  id v7;
  void *v8;
  id v9;

  v5 = *(void **)(a1 + 32);
  v6 = a3;
  v7 = a2;
  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "moc"));
  v9 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "q_itemDescriptionFromCachedItemDescription:moc:", v6, v8));

  objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), "setObject:forKeyedSubscript:", v9, v7);
}

void sub_2E384(uint64_t a1)
{
  void *v2;
  id v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  uint64_t v16;
  void *i;
  uint64_t v18;
  void *v19;
  void *v20;
  void *v21;
  id v22;
  id v23;
  uint64_t v24;
  void *v25;
  BOOL v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  id v31;
  _QWORD v32[4];
  id v33;
  uint64_t v34;
  id v35;
  BOOL v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  _BYTE v41[128];

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "identifiersQueuedForCache"));
  v3 = objc_msgSend(v2, "count");

  if (v3)
  {
    v4 = *(void **)(a1 + 32);
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "identifiersQueuedForCache"));
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "sq_fetchItemDescriptionsForIdentifiers:moc:", v5, *(_QWORD *)(a1 + 40)));

    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "identifiersQueuedForCache"));
    v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableSet setWithArray:](NSMutableSet, "setWithArray:", v7));

    if (v8)
    {
      v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "allKeys"));
      v10 = (void *)objc_claimAutoreleasedReturnValue(+[NSSet setWithArray:](NSSet, "setWithArray:", v9));
      objc_msgSend(v8, "minusSet:", v10);

      v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "identifiersQueuedForNetwork"));
      v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "allObjects"));
      objc_msgSend(v11, "addObjectsFromArray:", v12);

    }
    v39 = 0u;
    v40 = 0u;
    v37 = 0u;
    v38 = 0u;
    v13 = v6;
    v14 = objc_msgSend(v13, "countByEnumeratingWithState:objects:count:", &v37, v41, 16);
    if (v14)
    {
      v15 = v14;
      v16 = *(_QWORD *)v38;
      do
      {
        for (i = 0; i != v15; i = (char *)i + 1)
        {
          if (*(_QWORD *)v38 != v16)
            objc_enumerationMutation(v13);
          v18 = *(_QWORD *)(*((_QWORD *)&v37 + 1) + 8 * (_QWORD)i);
          v19 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 48), "objectForKey:", v18));
          v20 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "objectForKeyedSubscript:", v18));
          objc_msgSend(v19, "set:error:", v20, 0);

        }
        v15 = objc_msgSend(v13, "countByEnumeratingWithState:objects:count:", &v37, v41, 16);
      }
      while (v15);
    }

  }
  v21 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "identifiersQueuedForNetwork"));
  v22 = objc_msgSend(v21, "count");

  if (v22)
  {
    v23 = objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 40), "count");
    if ((unint64_t)v23 >= 0x19)
      v24 = 25;
    else
      v24 = (uint64_t)v23;
    v25 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 40), "subarrayWithRange:", 0, v24));
    objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 40), "removeObjectsInRange:", 0, v24);
    v26 = objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 40), "count") != 0;
    v27 = (void *)objc_claimAutoreleasedReturnValue(+[AEUserPublishing sharedInstance](AEUserPublishing, "sharedInstance"));
    v28 = kAEUserPublishingLookProfileDescriptionLockUp;
    v32[0] = _NSConcreteStackBlock;
    v32[1] = 3221225472;
    v32[2] = sub_2E6F0;
    v32[3] = &unk_2E5380;
    v29 = *(_QWORD *)(a1 + 32);
    v33 = v25;
    v34 = v29;
    v35 = *(id *)(a1 + 48);
    v36 = v26;
    v30 = v25;
    objc_msgSend(v27, "profilesForStoreIDs:keyProfile:completion:", v30, v28, v32);

  }
  else
  {
    v31 = objc_retainBlock(*(id *)(a1 + 48));
    v30 = v31;
    if (v31)
      (*((void (**)(id))v31 + 2))(v31);
  }

}

void sub_2E6F0(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id v7;
  uint64_t v8;
  NSObject *v9;
  uint64_t v10;
  NSObject *v11;
  const char *v12;
  char *v13;
  id v14;
  void *v15;
  int v16;
  const char *v17;
  __int16 v18;
  const char *v19;
  __int16 v20;
  int v21;

  v5 = a2;
  v6 = a3;
  v7 = objc_msgSend(v5, "count");
  if (v7 < objc_msgSend(*(id *)(a1 + 32), "count"))
  {
    v8 = BCIMLog();
    v9 = objc_claimAutoreleasedReturnValue(v8);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
    {
      v16 = 136315650;
      v17 = "-[BSUIItemDescriptionCache _fetchWithCompletion:]_block_invoke_2";
      v18 = 2080;
      v19 = "/Library/Caches/com.apple.xbs/Sources/Alder/frameworks/BookStoreUI/BookStoreUI/Cache/BSUIItemDescriptionCache.m";
      v20 = 1024;
      v21 = 281;
      _os_log_impl(&dword_0, v9, OS_LOG_TYPE_INFO, "%s %s:%d", (uint8_t *)&v16, 0x1Cu);
    }

    v10 = BCIMLog();
    v11 = objc_claimAutoreleasedReturnValue(v10);
    if (os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
    {
      v12 = *(const char **)(a1 + 32);
      v13 = (char *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedInteger:](NSNumber, "numberWithUnsignedInteger:", objc_msgSend(v5, "count")));
      v16 = 138412546;
      v17 = v12;
      v18 = 2112;
      v19 = v13;
      _os_log_impl(&dword_0, v11, OS_LOG_TYPE_INFO, "@\"Requested product profiles for identifiers %@ and only received %@ profiles.\"", (uint8_t *)&v16, 0x16u);

    }
  }
  objc_msgSend(*(id *)(a1 + 40), "updateWithProfiles:expirationDate:requestedIdentifiers:", v5, v6, *(_QWORD *)(a1 + 32));
  v14 = objc_retainBlock(*(id *)(a1 + 48));
  v15 = v14;
  if (v14)
    (*((void (**)(id))v14 + 2))(v14);

  if (*(_BYTE *)(a1 + 56))
    objc_msgSend(*(id *)(*(_QWORD *)(a1 + 40) + 24), "signalWithCompletion:", &stru_2E5358);

}

void sub_2EA08(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

char *sub_2EA20(uint64_t a1)
{
  id v2;
  id v3;
  id v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  char *result;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  _BYTE v16[128];

  v12 = 0u;
  v13 = 0u;
  v14 = 0u;
  v15 = 0u;
  v2 = *(id *)(a1 + 32);
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v12, v16, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v13;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v13 != v5)
          objc_enumerationMutation(v2);
        v7 = *(_QWORD *)(*((_QWORD *)&v12 + 1) + 8 * (_QWORD)v6);
        v8 = objc_opt_class(NSString);
        if ((objc_opt_isKindOfClass(v7, v8) & 1) != 0)
        {
          v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "sq_queueCacheRequestForIdentifier:", v7, (_QWORD)v12));
          if (v9)
            objc_msgSend(*(id *)(a1 + 48), "setObject:forKey:", v9, v7);

        }
        v6 = (char *)v6 + 1;
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v12, v16, 16);
    }
    while (v4);
  }

  v10 = objc_msgSend(*(id *)(*(_QWORD *)(a1 + 40) + 32), "count");
  result = (char *)objc_msgSend(*(id *)(*(_QWORD *)(a1 + 40) + 40), "count");
  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 24) = &result[(_QWORD)v10] != 0;
  return result;
}

void sub_2ED0C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_2ED2C(uint64_t a1, void *a2, void *a3)
{
  id v5;
  void (**v6)(id, void *, id);
  void *v7;
  uint64_t v8;
  void *v9;
  id v10;

  v10 = a2;
  v5 = a3;
  v6 = (void (**)(id, void *, id))objc_retainBlock(*(id *)(a1 + 32));
  if (v6)
  {
    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "sampleDownloadURL"));
    v6[2](v6, v7, v5);

  }
  v8 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v9 = *(void **)(v8 + 40);
  *(_QWORD *)(v8 + 40) = 0;

}

void sub_3001C(uint64_t a1, uint64_t a2, void *a3)
{
  id v4;
  void *v5;
  id v6;
  uint64_t v7;
  id v8;
  _QWORD v9[4];
  id v10;
  id v11;
  id v12;
  uint64_t v13;

  v4 = a3;
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472;
  v9[2] = sub_300CC;
  v9[3] = &unk_2E5418;
  v5 = *(void **)(a1 + 32);
  v10 = *(id *)(a1 + 40);
  v6 = *(id *)(a1 + 32);
  v7 = *(_QWORD *)(a1 + 48);
  v12 = v4;
  v13 = v7;
  v11 = v6;
  v8 = v4;
  objc_msgSend(v5, "performBlock:", v9);

}

void sub_300CC(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  char *v7;
  uint64_t v8;
  NSObject *v9;
  uint64_t v10;
  NSObject *v11;
  NSString *v12;
  char *v13;
  void *v14;
  void *v15;
  id v16;
  void *v17;
  id v18;
  uint8_t buf[4];
  const char *v20;
  __int16 v21;
  const char *v22;
  __int16 v23;
  int v24;

  v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSFetchRequest fetchRequestWithEntityName:](NSFetchRequest, "fetchRequestWithEntityName:", CFSTR("BSUICachedItemDescription")));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "storeID"));
  v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSPredicate predicateWithFormat:](NSPredicate, "predicateWithFormat:", CFSTR("%K == %@"), CFSTR("storeID"), v3));
  objc_msgSend(v2, "setPredicate:", v4);

  v5 = *(void **)(a1 + 40);
  v18 = 0;
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "executeFetchRequest:error:", v2, &v18));
  v7 = (char *)v18;
  if (v7)
  {
    v8 = BCIMLog();
    v9 = objc_claimAutoreleasedReturnValue(v8);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)buf = 136315650;
      v20 = "-[BSUIItemDescriptionCache q_itemDescriptionFromCachedItemDescription:moc:]_block_invoke_2";
      v21 = 2080;
      v22 = "/Library/Caches/com.apple.xbs/Sources/Alder/frameworks/BookStoreUI/BookStoreUI/Cache/BSUIItemDescriptionCache.m";
      v23 = 1024;
      v24 = 569;
      _os_log_impl(&dword_0, v9, OS_LOG_TYPE_INFO, "%s %s:%d", buf, 0x1Cu);
    }

    v10 = BCIMLog();
    v11 = objc_claimAutoreleasedReturnValue(v10);
    if (os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
    {
      v12 = NSStringFromSelector(*(SEL *)(a1 + 56));
      v13 = (char *)objc_claimAutoreleasedReturnValue(v12);
      *(_DWORD *)buf = 138412546;
      v20 = v13;
      v21 = 2112;
      v22 = v7;
      _os_log_impl(&dword_0, v11, OS_LOG_TYPE_INFO, "@\"%@: %@\"", buf, 0x16u);

    }
  }
  v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "firstObject"));
  v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v14, "rawNotes"));
  v16 = objc_retainBlock(*(id *)(a1 + 48));
  v17 = v16;
  if (v16)
    (*((void (**)(id, void *))v16 + 2))(v16, v15);

}

id sub_31D74(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_animateProgressTodayIfNeeded");
}

id sub_31E64(uint64_t a1)
{
  id result;

  result = objc_msgSend(*(id *)(a1 + 32), "_isVisible");
  if ((_DWORD)result)
    return objc_msgSend(*(id *)(a1 + 32), "_animateProgressTodayIfNeeded");
  return result;
}

id BSUIGetFamilyMemberImage(void *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  BOOL v7;
  int v8;
  id v9;
  id v10;
  void *v11;
  id v12;
  void *v13;
  uint64_t v14;

  v1 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1, "bu_dictionaryForQueryItems"));
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v1, "objectForKey:", CFSTR("firstName")));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v1, "objectForKey:", CFSTR("lastName")));
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v1, "objectForKey:", CFSTR("email")));
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v1, "objectForKey:", CFSTR("dsid")));
  if (objc_msgSend(v5, "length"))
    v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithLongLong:](NSNumber, "numberWithLongLong:", objc_msgSend(v5, "longLongValue")));
  else
    v6 = 0;
  if (v2)
    v7 = v3 == 0;
  else
    v7 = 1;
  v8 = !v7;
  if (v7 && !v4 && !v6)
    goto LABEL_16;
  v9 = objc_alloc_init((Class)AAUIProfilePictureStore);
  objc_msgSend(v9, "setMonogramType:", 0);
  objc_msgSend(v9, "setPictureDiameter:", 60.0);
  if (!v9)
    goto LABEL_16;
  v10 = objc_alloc_init((Class)AAFamilyMember);
  objc_msgSend(v10, "setFirstName:", v2);
  objc_msgSend(v10, "setLastName:", v3);
  objc_msgSend(v10, "setPersonID:", v6);
  objc_msgSend(v10, "setAppleID:", v4);
  v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "profilePictureForFamilyMember:", v10));

  if (!v11)
  {
LABEL_16:
    v12 = objc_msgSend(objc_alloc((Class)CNMonogrammer), "initWithStyle:diameter:", 0, 60.0);
    v13 = v12;
    if (v8)
      v14 = objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "monogramForPersonWithFirstName:lastName:", v2, v3));
    else
      v14 = objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "silhouetteMonogram"));
    v11 = (void *)v14;

  }
  return v11;
}

id sub_326B4(uint64_t a1)
{
  return objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 16), "addObject:", *(_QWORD *)(a1 + 40));
}

void sub_32788(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_327A0(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_327B0(uint64_t a1)
{

}

void sub_327B8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v2 = objc_claimAutoreleasedReturnValue(+[NSArray arrayWithArray:](NSArray, "arrayWithArray:", *(_QWORD *)(*(_QWORD *)(a1 + 32) + 16)));
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

id BSUINoticeViewControllerLog()
{
  if (qword_32C080 != -1)
    dispatch_once(&qword_32C080, &stru_2E5470);
  return (id)qword_32C078;
}

void sub_32B08(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.iBooks", "BSUINoticeViewControllerLog");
  v2 = (void *)qword_32C078;
  qword_32C078 = (uint64_t)v1;

}

void sub_342AC(uint64_t a1)
{
  id WeakRetained;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  id v8;
  _QWORD v9[5];
  id v10;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v2 = WeakRetained;
  if (WeakRetained)
  {
    v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "imageURL"));
    v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSURL URLWithString:](NSURL, "URLWithString:", v3));

    if (objc_msgSend(v4, "isFileURL"))
    {
      v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSData dataWithContentsOfURL:](NSData, "dataWithContentsOfURL:", v4));
      v6 = (void *)objc_claimAutoreleasedReturnValue(+[UIImage imageWithData:](UIImage, "imageWithData:", v5));
      v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "imageWithRenderingMode:", 2));

      v9[0] = _NSConcreteStackBlock;
      v9[1] = 3221225472;
      v9[2] = sub_343D0;
      v9[3] = &unk_2E40C8;
      v9[4] = v2;
      v10 = v7;
      v8 = v7;
      dispatch_async((dispatch_queue_t)&_dispatch_main_q, v9);

    }
  }

}

void sub_343D0(uint64_t a1)
{
  id v2;

  v2 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "iconImageView"));
  objc_msgSend(v2, "setImage:", *(_QWORD *)(a1 + 40));

}

void sub_34450(id a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[NSMutableSet set](NSMutableSet, "set"));
  v2 = (void *)qword_32C090;
  qword_32C090 = v1;

}

void sub_34668(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  void *v7;
  id v8;

  v5 = a3;
  v6 = a2;
  objc_opt_self(a1);
  v8 = (id)objc_claimAutoreleasedReturnValue(+[UIViewController jsa_topMostViewControllerForWindow:](UIViewController, "jsa_topMostViewControllerForWindow:", v5));

  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "traitCollection"));
  objc_msgSend(v6, "setOverrideUserInterfaceStyle:", objc_msgSend(v7, "userInterfaceStyle"));

}

id sub_34740(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  void *v6;

  v3 = a2;
  objc_opt_self(a1);
  v4 = (void *)objc_claimAutoreleasedReturnValue(+[JSABridge sharedInstance](JSABridge, "sharedInstance"));
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "windowManager"));
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "windowFromOptions:", v3));

  return v6;
}

id sub_349C8(uint64_t a1)
{
  return _objc_msgSend(*(id *)(a1 + 32), "_show:options:", *(unsigned __int8 *)(a1 + 48), *(_QWORD *)(a1 + 40));
}

uint64_t sub_349D8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

void sub_34B78(uint64_t a1)
{
  void *v2;
  void *v3;
  CGAffineTransform v4;
  CGAffineTransform v5;

  CGAffineTransformMakeScale(&v5, 1.0, 1.0);
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "view"));
  v4 = v5;
  objc_msgSend(v2, "setTransform:", &v4);

  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "view"));
  objc_msgSend(v3, "setAlpha:", 1.0);

}

void sub_34BF4(uint64_t a1)
{
  UIAccessibilityNotifications v2;
  id v3;

  if (objc_msgSend(*(id *)(a1 + 32), "shouldDismissAutomatically"))
  {
    _objc_msgSend(*(id *)(a1 + 32), "_hide:withDelay:", 1, 1.5);
  }
  else
  {
    v2 = UIAccessibilityLayoutChangedNotification;
    v3 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "view"));
    UIAccessibilityPostNotification(v2, v3);

  }
}

id sub_34D38(uint64_t a1)
{
  return _objc_msgSend(*(id *)(a1 + 32), "_hide:withDelay:", *(unsigned __int8 *)(a1 + 40), 0.0);
}

uint64_t sub_34D4C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

void sub_34E5C(uint64_t a1)
{
  void *v2;
  void *v3;
  CGAffineTransform v4;
  CGAffineTransform v5;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "view"));
  objc_msgSend(v2, "setAlpha:", 0.0);

  CGAffineTransformMakeScale(&v5, 0.88, 0.88);
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "view"));
  v4 = v5;
  objc_msgSend(v3, "setTransform:", &v4);

}

id sub_34EDC(uint64_t a1)
{
  return +[BSUINoticeViewController dismissViewController:](BSUINoticeViewController, "dismissViewController:", *(_QWORD *)(a1 + 32));
}

void sub_34FDC(_QWORD *a1)
{
  void *v2;
  void *v3;
  BSUINoticeViewController *v4;
  id v5;

  v2 = (void *)objc_claimAutoreleasedReturnValue(+[UIImage systemImageNamed:](UIImage, "systemImageNamed:", a1[4]));
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[UIImageSymbolConfiguration configurationWithPointSize:](UIImageSymbolConfiguration, "configurationWithPointSize:", 31.0));
  v5 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "imageWithConfiguration:", v3));

  v4 = -[BSUINoticeViewController initWithTitle:message:image:]([BSUINoticeViewController alloc], "initWithTitle:message:image:", a1[5], a1[6], v5);
  -[BSUINoticeViewController show:options:](v4, "show:options:", 1, a1[7]);

}

void sub_35168(_QWORD *a1)
{
  BSUINoticeViewController *v2;

  v2 = -[BSUINoticeViewController initWithTitle:message:imageURLString:]([BSUINoticeViewController alloc], "initWithTitle:message:imageURLString:", a1[4], a1[5], a1[6]);
  -[BSUINoticeViewController show:options:](v2, "show:options:", 1, a1[7]);

}

void sub_35A78(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_35A98(uint64_t a1, uint64_t a2, uint64_t a3, _BYTE *a4)
{
  _BOOL4 v6;
  unsigned int v7;
  uint64_t v8;
  char v9;
  id v10;

  v10 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "itemStateWithIdentifier:", a2));
  v6 = objc_msgSend(v10, "library") != &dword_4
    && objc_msgSend(v10, "library") != (char *)&dword_0 + 2
    && objc_msgSend(v10, "library") != (char *)&dword_4 + 1;
  v7 = v6 & (objc_msgSend(v10, "isSample") ^ 1);
  v8 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  if (*(_BYTE *)(v8 + 24))
    v9 = 1;
  else
    v9 = v7;
  *(_BYTE *)(v8 + 24) = v9;
  *a4 = v7;

}

void sub_35CF0(uint64_t a1)
{
  void *v2;
  char *v3;
  int v4;
  id v5;
  void *v6;
  const __CFString *v7;
  void *v8;
  char *v9;
  int v10;
  id v11;
  void *v12;
  const __CFString *v13;
  int v14;
  id v15;
  int v16;
  id v17;
  int v18;
  id v19;
  int v20;
  id v21;
  int v22;
  id v23;
  void *v24;
  BSUINoticeViewController *v25;
  id v26;
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  void *v31;
  BSUINoticeViewController *v32;
  id v33;

  if (objc_msgSend(*(id *)(a1 + 32), "count") == (char *)&dword_0 + 1)
  {
    v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "lastObject"));
    v3 = (char *)objc_msgSend(v2, "integerValue");

    if (v3 == (_BYTE *)&dword_4 + 2)
    {
      v16 = *(unsigned __int8 *)(a1 + 56);
      v17 = BSUIBundle();
      v6 = (void *)objc_claimAutoreleasedReturnValue(v17);
      if (v16)
        v7 = CFSTR("The audiobook was removed from %@.");
      else
        v7 = CFSTR("This audiobook was removed from %@.");
    }
    else if (v3 == (_BYTE *)&dword_0 + 3)
    {
      v4 = *(unsigned __int8 *)(a1 + 56);
      v5 = BSUIBundle();
      v6 = (void *)objc_claimAutoreleasedReturnValue(v5);
      if (v4)
        v7 = CFSTR("The PDF was removed from %@.");
      else
        v7 = CFSTR("This PDF was removed from %@.");
    }
    else
    {
      v18 = *(unsigned __int8 *)(a1 + 56);
      v19 = BSUIBundle();
      v6 = (void *)objc_claimAutoreleasedReturnValue(v19);
      if (v18)
        v7 = CFSTR("The book was removed from %@.");
      else
        v7 = CFSTR("This book was removed from %@.");
    }
    v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "localizedStringForKey:value:table:", v7, &stru_2F6710, CFSTR("BookStoreUILocalizable")));
    v33 = (id)objc_claimAutoreleasedReturnValue(+[NSString localizedStringWithFormat:](NSString, "localizedStringWithFormat:", v12, *(_QWORD *)(a1 + 40)));
  }
  else
  {
    v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSSet setWithArray:](NSSet, "setWithArray:", *(_QWORD *)(a1 + 32)));
    if (objc_msgSend(v6, "count") == (char *)&dword_0 + 1)
    {
      v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "anyObject"));
      v9 = (char *)objc_msgSend(v8, "integerValue");

      if (v9 == (_BYTE *)&dword_4 + 2)
      {
        v20 = *(unsigned __int8 *)(a1 + 56);
        v21 = BSUIBundle();
        v12 = (void *)objc_claimAutoreleasedReturnValue(v21);
        if (v20)
          v13 = CFSTR("The audiobooks were removed from %@.");
        else
          v13 = CFSTR("These audiobooks were removed from %@.");
      }
      else if (v9 == (_BYTE *)&dword_0 + 3)
      {
        v10 = *(unsigned __int8 *)(a1 + 56);
        v11 = BSUIBundle();
        v12 = (void *)objc_claimAutoreleasedReturnValue(v11);
        if (v10)
          v13 = CFSTR("The PDFs were removed from %@.");
        else
          v13 = CFSTR("These PDFs were removed from %@.");
      }
      else
      {
        v22 = *(unsigned __int8 *)(a1 + 56);
        v23 = BSUIBundle();
        v12 = (void *)objc_claimAutoreleasedReturnValue(v23);
        if (v22)
          v13 = CFSTR("The books were removed from %@.");
        else
          v13 = CFSTR("These books were removed from %@.");
      }
    }
    else
    {
      v14 = *(unsigned __int8 *)(a1 + 56);
      v15 = BSUIBundle();
      v12 = (void *)objc_claimAutoreleasedReturnValue(v15);
      if (v14)
        v13 = CFSTR("The items were removed from %@.");
      else
        v13 = CFSTR("These items were removed from %@.");
    }
    v24 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "localizedStringForKey:value:table:", v13, &stru_2F6710, CFSTR("BookStoreUILocalizable")));
    v33 = (id)objc_claimAutoreleasedReturnValue(+[NSString localizedStringWithFormat:](NSString, "localizedStringWithFormat:", v24, *(_QWORD *)(a1 + 40)));

  }
  v25 = [BSUINoticeViewController alloc];
  v26 = BSUIBundle();
  v27 = (void *)objc_claimAutoreleasedReturnValue(v26);
  v28 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v27, "localizedStringForKey:value:table:", CFSTR("Removed"), &stru_2F6710, CFSTR("BookStoreUILocalizable")));
  v29 = (void *)objc_claimAutoreleasedReturnValue(+[UIImage systemImageNamed:](UIImage, "systemImageNamed:", CFSTR("text.badge.minus")));
  v30 = (void *)objc_claimAutoreleasedReturnValue(+[UIImageSymbolConfiguration configurationWithPointSize:](UIImageSymbolConfiguration, "configurationWithPointSize:", 192.0));
  v31 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v29, "imageWithConfiguration:", v30));
  v32 = -[BSUINoticeViewController initWithTitle:message:image:](v25, "initWithTitle:message:image:", v28, v33, v31);

  -[BSUINoticeViewController show:options:](v32, "show:options:", 1, *(_QWORD *)(a1 + 48));
}

void sub_361F8(uint64_t a1)
{
  const __CFString *v2;
  void *v3;
  void *v4;
  BSUINoticeViewController *v5;
  id v6;

  if (*(_BYTE *)(a1 + 56))
    v2 = CFSTR("hand.thumbsup");
  else
    v2 = CFSTR("hand.thumbsdown");
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[UIImage systemImageNamed:](UIImage, "systemImageNamed:", v2));
  v4 = (void *)objc_claimAutoreleasedReturnValue(+[UIImageSymbolConfiguration configurationWithPointSize:](UIImageSymbolConfiguration, "configurationWithPointSize:", 31.0));
  v6 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "imageWithConfiguration:", v4));

  v5 = -[BSUINoticeViewController initWithTitle:message:image:]([BSUINoticeViewController alloc], "initWithTitle:message:image:", *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), v6);
  -[BSUINoticeViewController show:options:](v5, "show:options:", 1, *(_QWORD *)(a1 + 48));

}

void sub_36350(uint64_t a1)
{
  id v2;
  void *v3;
  id v4;
  void *v5;
  void *v6;
  const __CFString *v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  BSUINoticeViewController *v15;
  id v16;

  v2 = BSUIBundle();
  v3 = (void *)objc_claimAutoreleasedReturnValue(v2);
  v16 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "localizedStringForKey:value:table:", CFSTR("Renamed Collection"), &stru_2F6710, CFSTR("BookStoreUILocalizable")));

  v4 = BSUIBundle();
  v5 = (void *)objc_claimAutoreleasedReturnValue(v4);
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "localizedStringForKey:value:table:", CFSTR("Your \\U201CBooks\\U201D collection was renamed \\U201C%@\\U201D and added to your library."), &stru_2F6710, CFSTR("BookStoreUILocalizable")));

  v7 = *(const __CFString **)(a1 + 32);
  if (!v7)
    v7 = &stru_2F6710;
  v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", v6, v7));
  v9 = BSUIBundle();
  v10 = (void *)objc_claimAutoreleasedReturnValue(v9);
  v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "localizedStringForKey:value:table:", CFSTR("GOT IT"), &stru_2F6710, CFSTR("BookStoreUILocalizable")));

  v12 = (void *)objc_claimAutoreleasedReturnValue(+[UIImage systemImageNamed:](UIImage, "systemImageNamed:", CFSTR("text.justifyleft")));
  v13 = (void *)objc_claimAutoreleasedReturnValue(+[UIImageSymbolConfiguration configurationWithPointSize:](UIImageSymbolConfiguration, "configurationWithPointSize:", 262.0));
  v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "imageWithConfiguration:", v13));

  v15 = -[BSUINoticeViewController initWithTitle:message:image:confirmString:]([BSUINoticeViewController alloc], "initWithTitle:message:image:confirmString:", v16, v8, v14, v11);
  -[BSUINoticeViewController setIconImageAlwaysTemplate:](v15, "setIconImageAlwaysTemplate:", 0);
  -[BSUINoticeViewController show:options:](v15, "show:options:", 1, *(_QWORD *)(a1 + 40));

}

void sub_36624(_QWORD *a1)
{
  id v2;
  void *v3;
  void *v4;
  BSUINoticeViewController *v5;
  id v6;

  v2 = BSUIBundle();
  v3 = (void *)objc_claimAutoreleasedReturnValue(v2);
  v4 = (void *)objc_claimAutoreleasedReturnValue(+[UIImageSymbolConfiguration configurationWithPointSize:](UIImageSymbolConfiguration, "configurationWithPointSize:", 262.0));
  v6 = (id)objc_claimAutoreleasedReturnValue(+[UIImage imageNamed:inBundle:withConfiguration:](UIImage, "imageNamed:inBundle:withConfiguration:", CFSTR("books.slash"), v3, v4));

  v5 = -[BSUINoticeViewController initWithTitle:message:image:]([BSUINoticeViewController alloc], "initWithTitle:message:image:", a1[4], a1[5], v6);
  -[BSUINoticeViewController show:options:](v5, "show:options:", 1, a1[6]);

}

void sub_36FE8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_37008(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_37018(uint64_t a1)
{

}

void sub_37020(uint64_t a1, void *a2)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;

  v3 = a2;
  v4 = objc_opt_class(TUIRenderModelTransform);
  v5 = TUIDynamicCast(v4, v3);
  v7 = (id)objc_claimAutoreleasedReturnValue(v5);

  v6 = v7;
  if (v7)
  {
    objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40), "addObject:", v7);
    v6 = v7;
  }

}

void sub_386FC(id a1)
{
  BSUIStoreServices *v1;
  void *v2;

  v1 = -[BSUIStoreServices initWithDelegate:]([BSUIStoreServices alloc], "initWithDelegate:", 0);
  v2 = (void *)qword_32C0A0;
  qword_32C0A0 = (uint64_t)v1;

}

void sub_38D3C(uint64_t a1)
{
  void *v2;
  id v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD v6[4];
  _QWORD *v7;
  _QWORD v8[5];
  id v9;
  id v10;
  id v11;
  uint64_t v12;

  if (*(_BYTE *)(a1 + 72))
  {
    v8[0] = _NSConcreteStackBlock;
    v8[1] = 3221225472;
    v8[2] = sub_38E78;
    v8[3] = &unk_2E55C8;
    v2 = *(void **)(a1 + 40);
    v8[4] = *(_QWORD *)(a1 + 32);
    v3 = v2;
    v4 = *(_QWORD *)(a1 + 64);
    v9 = v3;
    v12 = v4;
    v10 = *(id *)(a1 + 48);
    v11 = *(id *)(a1 + 56);
    v5 = objc_retainBlock(v8);
    if (v5)
    {
      if (+[NSThread isMainThread](NSThread, "isMainThread"))
      {
        ((void (*)(_QWORD *))v5[2])(v5);
      }
      else
      {
        v6[0] = _NSConcreteStackBlock;
        v6[1] = 3221225472;
        v6[2] = sub_38F54;
        v6[3] = &unk_2E3F88;
        v7 = v5;
        dispatch_async((dispatch_queue_t)&_dispatch_main_q, v6);

      }
    }

  }
  else
  {
    +[JSAApplication openProductPagesWithIds:contentTypes:focusedIndex:options:](JSAApplication, "openProductPagesWithIds:contentTypes:focusedIndex:options:", *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 56));
  }
}

void sub_38E78(uint64_t a1)
{
  void *v2;
  id v3;
  void *v4;
  id v5;
  id v6;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "delegate"));
  v6 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "analyticsTrackerForStoreServices:", *(_QWORD *)(a1 + 32)));

  v3 = objc_alloc((Class)BALinkData);
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "objectAtIndexedSubscript:", *(_QWORD *)(a1 + 64)));
  v5 = objc_msgSend(v3, "initWithPreviousSectionID:previousSectionName:previousContentID:linkActionType:previousSeriesID:previousGenreID:previousCollectionID:previousAuthorID:previousFlowcaseID:previousBrickID:", &stru_2F6710, &stru_2F6710, v4, 2, 0, 0, 0, 0, 0, 0);

  objc_msgSend(v6, "pushLinkData:file:line:", v5, CFSTR("/Library/Caches/com.apple.xbs/Sources/Alder/frameworks/BookStoreUI/BookStoreUI/Services/BSUIStoreServices.m"), 134);
  +[JSAApplication openProductPagesWithIds:contentTypes:focusedIndex:options:](JSAApplication, "openProductPagesWithIds:contentTypes:focusedIndex:options:", *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 56));

}

uint64_t sub_38F54(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

uint64_t sub_38F60(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

void sub_3909C(uint64_t a1, void *a2)
{
  void *v3;
  void ***v4;
  __CFString *v5;
  __CFString *v6;
  void *v7;
  void ***v8;
  void *v9;
  id v10;
  void *v11;
  void **v12;
  uint64_t v13;
  void (*v14)(uint64_t, void *);
  void *v15;
  id v16;
  _QWORD v17[2];

  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "objectForKeyedSubscript:", CFSTR("ManagePurchases")));
  if (objc_msgSend(v3, "isObject"))
  {
    v12 = _NSConcreteStackBlock;
    v13 = 3221225472;
    v14 = sub_39238;
    v15 = &unk_2E5618;
    v16 = *(id *)(a1 + 40);
    v4 = objc_retainBlock(&v12);
    if (*(_BYTE *)(a1 + 48))
      v5 = CFSTR("hidePurchased");
    else
      v5 = CFSTR("unhidePurchased");
    v6 = v5;
    v7 = (void *)objc_claimAutoreleasedReturnValue(+[JSABridge sharedInstance](JSABridge, "sharedInstance", v12, v13, v14, v15));
    v17[0] = *(_QWORD *)(a1 + 32);
    v8 = objc_retainBlock(v4);
    v17[1] = v8;
    v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", v17, 2));
    objc_msgSend(v7, "enqueueValueInvocation:method:arguments:file:line:", v3, v6, v9, CFSTR("BSUIStoreServices.m"), 164);

  }
  else
  {
    v10 = objc_retainBlock(*(id *)(a1 + 40));
    v11 = v10;
    if (v10)
      (*((void (**)(id, _QWORD))v10 + 2))(v10, 0);

  }
}

void sub_39238(uint64_t a1, void *a2)
{
  void (**v3)(id, id);
  id v4;

  v4 = a2;
  v3 = (void (**)(id, id))objc_retainBlock(*(id *)(a1 + 32));
  if (v3)
    v3[2](v3, objc_msgSend(v4, "toBool"));

}

void sub_39A18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  char a65;
  uint64_t v65;

  _Block_object_dispose(&a65, 8);
  _Block_object_dispose((const void *)(v65 - 160), 8);
  _Unwind_Resume(a1);
}

uint64_t sub_39A84(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_39A94(uint64_t a1)
{

}

void sub_39A9C(uint64_t a1, void *a2)
{
  id v4;
  uint64_t v5;
  NSObject *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  int v11;
  void *v12;
  __int16 v13;
  void *v14;

  v4 = a2;
  objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40), a2);
  v5 = BSUIStoreServicesLog();
  v6 = objc_claimAutoreleasedReturnValue(v5);
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
  {
    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "allObjects"));
    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "componentsJoinedByString:", CFSTR(", ")));
    v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40), "allObjects"));
    v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "componentsJoinedByString:", CFSTR(", ")));
    v11 = 138412546;
    v12 = v8;
    v13 = 2112;
    v14 = v10;
    _os_log_impl(&dword_0, v6, OS_LOG_TYPE_DEFAULT, "BSUIStoreServices Successfully hid jalisco on server expected:(%@) result:(%@)", (uint8_t *)&v11, 0x16u);

  }
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 40));

}

void sub_39BEC(uint64_t a1, void *a2)
{
  id v3;
  uint64_t v4;
  NSObject *v5;
  NSObject *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint8_t v11[16];

  v3 = a2;
  v4 = BSUIStoreServicesLog();
  v5 = objc_claimAutoreleasedReturnValue(v4);
  v6 = v5;
  if (v3)
  {
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
      sub_238AD4((uint64_t)v3, v6);
  }
  else
  {
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)v11 = 0;
      _os_log_impl(&dword_0, v6, OS_LOG_TYPE_DEFAULT, "BSUIStoreServices successfully hid audiobooks.", v11, 2u);
    }

    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "allKeys"));
    v8 = objc_claimAutoreleasedReturnValue(+[NSSet setWithArray:](NSSet, "setWithArray:", v7));
    v9 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
    v10 = *(void **)(v9 + 40);
    *(_QWORD *)(v9 + 40) = v8;

    v6 = objc_claimAutoreleasedReturnValue(+[MPCloudController sharedCloudController](MPCloudController, "sharedCloudController"));
    -[NSObject updateJaliscoMediaLibraryWithReason:completionHandler:](v6, "updateJaliscoMediaLibraryWithReason:completionHandler:", 1, &stru_2E56A8);
  }

  dispatch_group_leave(*(dispatch_group_t *)(a1 + 40));
}

void sub_39CF8(id a1, BOOL a2)
{
  _BOOL4 v2;
  uint64_t v3;
  NSObject *v4;
  NSObject *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint8_t v13[16];

  v2 = a2;
  v3 = BSUIStoreServicesLog(a1);
  v4 = objc_claimAutoreleasedReturnValue(v3);
  v5 = v4;
  if (v2)
  {
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)v13 = 0;
      _os_log_impl(&dword_0, v5, OS_LOG_TYPE_DEFAULT, "BSUIStoreServices updated jalisc media library after hiding audiobooks.", v13, 2u);
    }
  }
  else if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
  {
    sub_238B48(v5, v6, v7, v8, v9, v10, v11, v12);
  }

}

void sub_39D80(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  uint64_t v16;
  NSObject *v17;
  void *v18;
  void *v19;
  id v20;
  id v21;
  uint64_t v22;
  void *v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  _QWORD block[5];
  id v29;
  id v30;
  id v31;
  id v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t (*v37)(uint64_t, uint64_t);
  void (*v38)(uint64_t);
  id v39;
  uint8_t v40[128];
  uint8_t buf[4];
  void *v42;

  v2 = *(_QWORD *)(*(_QWORD *)(a1 + 72) + 8);
  v3 = *(void **)(v2 + 40);
  if (v3)
  {
    v4 = v3;
    v5 = *(void **)(v2 + 40);
    *(_QWORD *)(v2 + 40) = v4;
  }
  else
  {
    v6 = objc_claimAutoreleasedReturnValue(+[NSSet set](NSSet, "set"));
    v7 = *(_QWORD *)(*(_QWORD *)(a1 + 72) + 8);
    v5 = *(void **)(v7 + 40);
    *(_QWORD *)(v7 + 40) = v6;
  }

  v8 = *(_QWORD *)(*(_QWORD *)(a1 + 80) + 8);
  v9 = *(void **)(v8 + 40);
  if (v9)
  {
    v10 = v9;
    v11 = *(void **)(v8 + 40);
    *(_QWORD *)(v8 + 40) = v10;
  }
  else
  {
    v12 = objc_claimAutoreleasedReturnValue(+[NSSet set](NSSet, "set"));
    v13 = *(_QWORD *)(*(_QWORD *)(a1 + 80) + 8);
    v11 = *(void **)(v13 + 40);
    *(_QWORD *)(v13 + 40) = v12;
  }

  v34 = 0;
  v35 = &v34;
  v36 = 0x3032000000;
  v37 = sub_39A84;
  v38 = sub_39A94;
  v39 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 72) + 8) + 40), "setByAddingObjectsFromSet:", *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 80) + 8) + 40)));
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_3A0BC;
  block[3] = &unk_2E56F8;
  v14 = *(void **)(a1 + 40);
  block[4] = *(_QWORD *)(a1 + 32);
  v33 = &v34;
  v29 = v14;
  v30 = *(id *)(a1 + 48);
  v31 = *(id *)(a1 + 56);
  v32 = *(id *)(a1 + 64);
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
  v15 = (void *)objc_claimAutoreleasedReturnValue(+[AEAssetEngine libraryMgr](AEAssetEngine, "libraryMgr"));
  v16 = BSUIStoreServicesLog();
  v17 = objc_claimAutoreleasedReturnValue(v16);
  if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
  {
    v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend((id)v35[5], "allObjects"));
    v19 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v18, "componentsJoinedByString:", CFSTR(", ")));
    *(_DWORD *)buf = 138412290;
    v42 = v19;
    _os_log_impl(&dword_0, v17, OS_LOG_TYPE_DEFAULT, "BSUIStoreServices libraryManager didHidePurchasedAssetID:%@", buf, 0xCu);

  }
  v26 = 0u;
  v27 = 0u;
  v24 = 0u;
  v25 = 0u;
  v20 = (id)v35[5];
  v21 = objc_msgSend(v20, "countByEnumeratingWithState:objects:count:", &v24, v40, 16);
  if (v21)
  {
    v22 = *(_QWORD *)v25;
    do
    {
      v23 = 0;
      do
      {
        if (*(_QWORD *)v25 != v22)
          objc_enumerationMutation(v20);
        objc_msgSend(v15, "didHidePurchasedAssetID:", *(_QWORD *)(*((_QWORD *)&v24 + 1) + 8 * (_QWORD)v23), (_QWORD)v24);
        v23 = (char *)v23 + 1;
      }
      while (v21 != v23);
      v21 = objc_msgSend(v20, "countByEnumeratingWithState:objects:count:", &v24, v40, 16);
    }
    while (v21);
  }

  _Block_object_dispose(&v34, 8);
}

void sub_3A088(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
  _Block_object_dispose(&a27, 8);
  _Unwind_Resume(a1);
}

id sub_3A0BC(uint64_t a1)
{
  return _objc_msgSend(*(id *)(a1 + 32), "_analyticsSubmitHideBookEventWithStoreIDs:contentTypeDictionary:supplementalContentCountDictionary:hasRACSupportDictionary:tracker:", *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 72) + 8) + 40), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64));
}

void sub_3A1B8(uint64_t a1)
{
  uint64_t v2;
  NSObject *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  void *v12;
  void *v13;
  id v14;
  _QWORD v15[4];
  id v16;
  uint8_t buf[4];
  uint64_t v18;

  v2 = BSUIStoreServicesLog(a1);
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    v4 = *(_QWORD *)(a1 + 32);
    *(_DWORD *)buf = 138412290;
    v18 = v4;
    _os_log_impl(&dword_0, v3, OS_LOG_TYPE_DEFAULT, "Books/BSUIPurchaseHiddenChange purchasedHiddenDidChange params=%@.", buf, 0xCu);
  }

  v5 = objc_opt_class(NSNumber);
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "objectForKey:", CFSTR("hidden")));
  v7 = BUDynamicCast(v5, v6);
  v8 = (void *)objc_claimAutoreleasedReturnValue(v7);

  v9 = objc_opt_class(NSString);
  v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "objectForKey:", CFSTR("storeID")));
  v11 = BUDynamicCast(v9, v10);
  v12 = (void *)objc_claimAutoreleasedReturnValue(v11);

  v13 = *(void **)(a1 + 40);
  v14 = objc_msgSend(v8, "BOOLValue");
  v15[0] = _NSConcreteStackBlock;
  v15[1] = 3221225472;
  v15[2] = sub_3A358;
  v15[3] = &unk_2E54B8;
  v16 = *(id *)(a1 + 48);
  objc_msgSend(v13, "purchasedDidHide:withStoreID:withCompletion:", v14, v12, v15);

}

void sub_3A358(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;

  v4 = (void *)objc_claimAutoreleasedReturnValue(+[JSABridge sharedInstance](JSABridge, "sharedInstance"));
  v5 = *(_QWORD *)(a1 + 32);
  v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithBool:](NSNumber, "numberWithBool:", a2));
  v8 = v6;
  v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v8, 1));
  objc_msgSend(v4, "enqueueValueCall:arguments:file:line:", v5, v7, CFSTR("BSUIStoreServices.m"), 297);

}

void sub_3A5D4(id a1, BOOL a2)
{
  _BOOL4 v2;
  uint64_t v3;
  NSObject *v4;
  NSObject *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint8_t v13[16];

  v2 = a2;
  v3 = BSUIStoreServicesLog(a1);
  v4 = objc_claimAutoreleasedReturnValue(v3);
  v5 = v4;
  if (v2)
  {
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)v13 = 0;
      _os_log_impl(&dword_0, v5, OS_LOG_TYPE_DEFAULT, "BSUIStoreServices Successfully updated jalisco media library", v13, 2u);
    }
  }
  else if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
  {
    sub_238B7C(v5, v6, v7, v8, v9, v10, v11, v12);
  }

}

void sub_3A65C(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  NSObject *v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  id v10;
  void *v11;
  int v12;
  uint64_t v13;
  __int16 v14;
  int v15;

  if ((_DWORD)a2)
  {
    if (*(_BYTE *)(a1 + 48))
    {
      v4 = (void *)objc_claimAutoreleasedReturnValue(+[AEAssetEngine libraryMgr](AEAssetEngine, "libraryMgr"));
      objc_msgSend(v4, "didHidePurchasedAssetID:", *(_QWORD *)(a1 + 32));

    }
    v5 = BSUIStoreServicesLog(a1);
    v6 = objc_claimAutoreleasedReturnValue(v5);
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      v7 = *(_QWORD *)(a1 + 32);
      v8 = *(unsigned __int8 *)(a1 + 48);
      v12 = 138412546;
      v13 = v7;
      v14 = 1024;
      v15 = v8;
      _os_log_impl(&dword_0, v6, OS_LOG_TYPE_DEFAULT, "BSUIStoreServices Successfully updated jalisco daap client after updating item %@ to hidden:%{BOOL}d", (uint8_t *)&v12, 0x12u);
    }
  }
  else
  {
    v9 = BSUIStoreServicesLog(a1);
    v6 = objc_claimAutoreleasedReturnValue(v9);
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
      sub_238BB0(a1, v6);
  }

  v10 = objc_retainBlock(*(id *)(a1 + 40));
  v11 = v10;
  if (v10)
    (*((void (**)(id, uint64_t))v10 + 2))(v10, a2);

}

void sub_3A9F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_list va;

  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_3AA18(uint64_t a1)
{
  id v2;

  v2 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_optionsForTransaction:", *(_QWORD *)(a1 + 40)));
  +[JSAApplication openWriteReviewPageWithURL:options:](JSAApplication, "openWriteReviewPageWithURL:options:", *(_QWORD *)(a1 + 48), v2);

}

id sub_3AA68(uint64_t a1, uint64_t a2)
{
  id result;

  result = objc_retainBlock(*(id *)(a2 + 40));
  *(_QWORD *)(a1 + 40) = result;
  return result;
}

void sub_3AA90(uint64_t a1)
{

}

void sub_3AA98(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  void (**v4)(id, uint64_t);

  (*(void (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
  v4 = (void (**)(id, uint64_t))objc_retainBlock(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40));
  if (v4)
    v4[2](v4, 1);
  v2 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v3 = *(void **)(v2 + 40);
  *(_QWORD *)(v2 + 40) = 0;

}

void sub_3AE38(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,char a28)
{
  _Block_object_dispose(&a28, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_3AE50(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

uint64_t sub_3AE60(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

void sub_3AE70(uint64_t a1, int a2)
{
  if (a2)
    *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) |= 1uLL;
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));
}

void sub_3AE90(uint64_t a1, int a2)
{
  if (a2)
    *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) |= 2uLL;
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));
}

uint64_t sub_3AEB0(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(a1 + 32) + 16))(*(_QWORD *)(a1 + 32), *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24));
}

void sub_3B058(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_3B078(uint64_t a1, void *a2)
{
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;

  v3 = *(_QWORD *)(a1 + 32);
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "productURL"));
  (*(void (**)(uint64_t, void *))(v3 + 16))(v3, v4);

  v5 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v6 = *(void **)(v5 + 40);
  *(_QWORD *)(v5 + 40) = 0;

}

void sub_3C6F4(uint64_t a1, void *a2)
{
  id v3;
  id v4;

  v3 = objc_retainAutorelease(*(id *)(a1 + 32));
  v4 = a2;
  objc_msgSend(v4, "setForegroundColor:", objc_msgSend(v3, "CGColor"));

}

void sub_3C744(uint64_t a1, void *a2)
{
  id v3;
  id v4;

  v3 = objc_retainAutorelease(*(id *)(a1 + 32));
  v4 = a2;
  objc_msgSend(v4, "setForegroundColor:", objc_msgSend(v3, "CGColor"));

}

void sub_3D0C0(_Unwind_Exception *a1)
{
  _Block_object_dispose(&STACK[0x200], 8);
  _Block_object_dispose(&STACK[0x220], 8);
  _Unwind_Resume(a1);
}

void sub_3D134(uint64_t a1, void *a2, double a3)
{
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  id v11;
  void *v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  unsigned int v18;
  unsigned int v19;
  void *v20;
  double v21;
  id v22;
  id v23;

  v23 = a2;
  v5 = a3 * 0.1;
  v6 = *(double *)(*(_QWORD *)(*(_QWORD *)(a1 + 80) + 8) + 24);
  objc_msgSend(*(id *)(a1 + 32), "height");
  v8 = v7;
  objc_msgSend(*(id *)(a1 + 32), "height");
  v10 = v9;
  v11 = objc_msgSend(*(id *)(a1 + 40), "count");
  if (v11 >= objc_msgSend(*(id *)(a1 + 48), "count"))
    v12 = 0;
  else
    v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 48), "objectAtIndexedSubscript:", v11));
  v13 = a3 + v5 * 2.0;
  objc_msgSend(v12, "frame");
  v15 = v14;
  v17 = v16;
  v18 = objc_msgSend(v23, "isEqualToString:", *(_QWORD *)(a1 + 56));
  if (objc_msgSend(*(id *)(a1 + 48), "count") == *(id *)(a1 + 96))
  {
    v19 = *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 88) + 8) + 24) ? v18 : 1;
    if (v19 == 1)
    {
      v20 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "string"));
      if (objc_msgSend(v20, "isEqualToString:", v23) && vabdd_f64(v15, v13) < 0.00999999978)
      {

        if (vabdd_f64(v17, v10) < 0.00999999978)
        {
          objc_msgSend(*(id *)(a1 + 40), "addObject:", v12);
          goto LABEL_17;
        }
      }
      else
      {

      }
    }
  }
  v21 = -v8;
  if (v12)
    objc_msgSend(*(id *)(a1 + 64), "addObject:", v12);
  v22 = objc_msgSend(*(id *)(a1 + 32), "newTextLayerAtFrame:character:", v23, v6 - v5, v21, v13, v10);
  objc_msgSend(*(id *)(a1 + 72), "addObject:", v22);
  objc_msgSend(*(id *)(a1 + 40), "addObject:", v22);
  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 88) + 8) + 24) = 1;

LABEL_17:
  *(double *)(*(_QWORD *)(*(_QWORD *)(a1 + 80) + 8) + 24) = *(double *)(*(_QWORD *)(*(_QWORD *)(a1 + 80) + 8)
                                                                          + 24)
                                                              + a3;

}

void sub_3D320(uint64_t a1, void *a2, unint64_t a3)
{
  double v4;
  id v5;
  void *v6;
  double v7;
  void *v8;
  double v9;
  void *v10;
  void *v11;
  double v12;
  void *v13;
  void *v14;
  void *v15;
  double v16;
  _QWORD v17[2];

  v4 = *(double *)(a1 + 40) + *(double *)(a1 + 48) * (double)a3;
  v5 = a2;
  v6 = (void *)objc_claimAutoreleasedReturnValue(+[CABasicAnimation animationWithKeyPath:](CABasicAnimation, "animationWithKeyPath:", CFSTR("position.y")));
  objc_msgSend(*(id *)(a1 + 32), "height");
  v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](NSNumber, "numberWithDouble:", -v7));
  objc_msgSend(v6, "setFromValue:", v8);

  objc_msgSend(*(id *)(a1 + 32), "height");
  v10 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](NSNumber, "numberWithDouble:", -v9));
  objc_msgSend(v6, "setToValue:", v10);

  objc_msgSend(v6, "setDuration:", v4);
  v11 = (void *)objc_claimAutoreleasedReturnValue(+[CASpringAnimation animationWithKeyPath:](CASpringAnimation, "animationWithKeyPath:", CFSTR("position.y")));
  objc_msgSend(v11, "setMass:", 1.0);
  objc_msgSend(v11, "setStiffness:", 250.0);
  objc_msgSend(v11, "setDamping:", 24.0);
  objc_msgSend(v11, "setInitialVelocity:", 1.0);
  objc_msgSend(v11, "setDuration:", 0.8);
  objc_msgSend(*(id *)(a1 + 32), "height");
  v13 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](NSNumber, "numberWithDouble:", -v12));
  objc_msgSend(v11, "setFromValue:", v13);

  objc_msgSend(v11, "setToValue:", &off_2FBA68);
  objc_msgSend(v11, "setBeginTime:", v4);
  v14 = (void *)objc_claimAutoreleasedReturnValue(+[CAAnimationGroup animation](CAAnimationGroup, "animation"));
  v17[0] = v6;
  v17[1] = v11;
  v15 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", v17, 2));
  objc_msgSend(v14, "setAnimations:", v15);

  objc_msgSend(v11, "duration");
  objc_msgSend(v14, "setDuration:", v4 + v16);
  objc_msgSend(v5, "addAnimation:forKey:", v14, CFSTR("moveIn"));
  +[CATransaction setDisableActions:](CATransaction, "setDisableActions:", 1);
  objc_msgSend(v5, "frame");
  objc_msgSend(v5, "setFrame:");

  +[CATransaction setDisableActions:](CATransaction, "setDisableActions:", 0);
}

void sub_3D580(uint64_t a1, void *a2, unint64_t a3)
{
  double v4;
  id v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  _QWORD v19[2];

  v4 = *(double *)(a1 + 40) * (double)a3;
  v5 = a2;
  v6 = (void *)objc_claimAutoreleasedReturnValue(+[CABasicAnimation animationWithKeyPath:](CABasicAnimation, "animationWithKeyPath:", CFSTR("position.y")));
  objc_msgSend(v6, "setFromValue:", &off_2FBA68);
  objc_msgSend(v6, "setToValue:", &off_2FBA68);
  objc_msgSend(v6, "setDuration:", v4);
  v7 = (void *)objc_claimAutoreleasedReturnValue(+[CASpringAnimation animationWithKeyPath:](CASpringAnimation, "animationWithKeyPath:", CFSTR("position.y")));
  objc_msgSend(v7, "setMass:", 1.0);
  objc_msgSend(v7, "setStiffness:", 250.0);
  objc_msgSend(v7, "setDamping:", 24.0);
  objc_msgSend(v7, "setInitialVelocity:", 1.0);
  objc_msgSend(v7, "setDuration:", 0.8);
  objc_msgSend(v7, "setFromValue:", &off_2FBA68);
  objc_msgSend(*(id *)(a1 + 32), "height");
  v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](NSNumber, "numberWithDouble:"));
  objc_msgSend(v7, "setToValue:", v8);

  objc_msgSend(v7, "setBeginTime:", v4);
  v9 = (void *)objc_claimAutoreleasedReturnValue(+[CAAnimationGroup animation](CAAnimationGroup, "animation"));
  v19[0] = v6;
  v19[1] = v7;
  v10 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", v19, 2));
  objc_msgSend(v9, "setAnimations:", v10);

  objc_msgSend(v7, "duration");
  objc_msgSend(v9, "setDuration:", v4 + v11);
  objc_msgSend(v5, "addAnimation:forKey:", v9, CFSTR("moveOut"));
  +[CATransaction setDisableActions:](CATransaction, "setDisableActions:", 1);
  objc_msgSend(v5, "frame");
  v13 = v12;
  v15 = v14;
  v17 = v16;
  objc_msgSend(*(id *)(a1 + 32), "height");
  objc_msgSend(v5, "setFrame:", v13, v18, v15, v17);

  +[CATransaction setDisableActions:](CATransaction, "setDisableActions:", 0);
}

void sub_3DD30(id a1, CALayer *a2, unint64_t a3, BOOL *a4)
{
  -[CALayer removeFromSuperlayer](a2, "removeFromSuperlayer", a3, a4);
}

void sub_3DD38(id a1, CALayer *a2, unint64_t a3, BOOL *a4)
{
  -[CALayer removeFromSuperlayer](a2, "removeFromSuperlayer", a3, a4);
}

void sub_3DD40(uint64_t a1, void *a2)
{
  unsigned int v3;
  uint64_t v4;
  id v5;

  v5 = a2;
  v3 = objc_msgSend(v5, "isMemberOfClass:", objc_opt_class(CALayer));
  v4 = 40;
  if (v3)
    v4 = 32;
  objc_msgSend(*(id *)(a1 + v4), "addObject:", v5);

}

void sub_3DDA8(uint64_t a1, void *a2)
{
  void *v2;
  id v3;
  id v4;

  v2 = *(void **)(a1 + 32);
  v3 = a2;
  v4 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "backgroundLayer"));
  objc_msgSend(v4, "addSublayer:", v3);

}

void sub_3DDF4(uint64_t a1, void *a2)
{
  void *v2;
  id v3;
  id v4;

  v2 = *(void **)(a1 + 32);
  v3 = a2;
  v4 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "backgroundLayer"));
  objc_msgSend(v4, "addSublayer:", v3);

}

void sub_3FB18(uint64_t a1)
{
  void *v1;
  CFTimeInterval v2;
  double v3;
  void *v4;
  double v5;
  double v6;
  double v7;
  double v8;
  void *v9;
  void *v10;
  double v11;
  double v12;
  double v13;
  double v14;
  void *v15;
  id v16;
  void *v17;
  CATransform3D v18;
  CATransform3D v19;
  _QWORD v20[2];

  v1 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "dynamicTimeLayer"));
  v2 = CACurrentMediaTime();
  v3 = v2;
  LODWORD(v2) = 0;
  objc_msgSend(v1, "setOpacity:", v2);
  CATransform3DMakeScale(&v19, 0.5, 0.5, 1.0);
  v18 = v19;
  objc_msgSend(v1, "setTransform:", &v18);
  v4 = (void *)objc_claimAutoreleasedReturnValue(+[CABasicAnimation animationWithKeyPath:](CABasicAnimation, "animationWithKeyPath:", CFSTR("transform.scale")));
  objc_msgSend(v4, "setFromValue:", &off_2FBA78);
  objc_msgSend(v4, "setToValue:", &off_2FBA88);
  objc_msgSend(v4, "setDuration:", 0.45);
  objc_msgSend(v4, "setBeginTime:", v3);
  LODWORD(v5) = 1045220557;
  LODWORD(v6) = 0;
  LODWORD(v7) = 1.0;
  LODWORD(v8) = 1051260355;
  v9 = (void *)objc_claimAutoreleasedReturnValue(+[CAMediaTimingFunction functionWithControlPoints::::](CAMediaTimingFunction, "functionWithControlPoints::::", v8, v6, v5, v7));
  objc_msgSend(v4, "setTimingFunction:", v9);

  v10 = (void *)objc_claimAutoreleasedReturnValue(+[CASpringAnimation animationWithKeyPath:](CASpringAnimation, "animationWithKeyPath:", CFSTR("opacity")));
  objc_msgSend(v10, "setFromValue:", &off_2FBA78);
  objc_msgSend(v10, "setToValue:", &off_2FBA68);
  objc_msgSend(v10, "setDuration:", 0.23);
  objc_msgSend(v10, "setBeginTime:", v3 + 0.22);
  LODWORD(v11) = 1059816735;
  LODWORD(v12) = 0;
  LODWORD(v13) = 1.0;
  LODWORD(v14) = 1051260355;
  v15 = (void *)objc_claimAutoreleasedReturnValue(+[CAMediaTimingFunction functionWithControlPoints::::](CAMediaTimingFunction, "functionWithControlPoints::::", v14, v12, v11, v13));
  objc_msgSend(v10, "setTimingFunction:", v15);

  v16 = objc_alloc_init((Class)CAAnimationGroup);
  v20[0] = v4;
  v20[1] = v10;
  v17 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", v20, 2));
  objc_msgSend(v16, "setAnimations:", v17);

  objc_msgSend(v16, "setDuration:", 0.45);
  objc_msgSend(v1, "addAnimation:forKey:", v16, CFSTR("titleFade"));

}

void sub_3FE0C(uint64_t a1)
{
  id v1;

  v1 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "micaPlayer"));
  objc_msgSend(v1, "play");

}

id sub_3FFE0(uint64_t a1)
{
  void *v2;
  void *v3;
  unsigned int v4;
  void *v5;
  id result;
  void *v7;
  double v8;
  void *v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  _OWORD v14[8];

  v2 = *(void **)(a1 + 32);
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "progressArcLayer"));
  objc_msgSend(v2, "_animateArcLayer:", v3);

  v4 = objc_msgSend(*(id *)(a1 + 32), "_goalCompleted");
  v5 = *(void **)(a1 + 32);
  if (v4)
  {
    result = objc_msgSend(v5, "goalCompletedAnimationRequested");
    if ((result & 1) == 0)
    {
      objc_msgSend(*(id *)(a1 + 32), "setGoalCompletedAnimationRequested:", 1);
      objc_msgSend(*(id *)(a1 + 32), "_animateTimeTextFade");
      return _objc_msgSend(*(id *)(a1 + 32), "_startMicaPlayer");
    }
  }
  else
  {
    objc_msgSend(v5, "setGoalCompletedAnimationRequested:", 0);
    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "dynamicTimeLayer"));
    LODWORD(v8) = 1.0;
    objc_msgSend(v7, "setOpacity:", v8);

    v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "dynamicTimeLayer"));
    v10 = *(_OWORD *)&CATransform3DIdentity.m33;
    v14[4] = *(_OWORD *)&CATransform3DIdentity.m31;
    v14[5] = v10;
    v11 = *(_OWORD *)&CATransform3DIdentity.m43;
    v14[6] = *(_OWORD *)&CATransform3DIdentity.m41;
    v14[7] = v11;
    v12 = *(_OWORD *)&CATransform3DIdentity.m13;
    v14[0] = *(_OWORD *)&CATransform3DIdentity.m11;
    v14[1] = v12;
    v13 = *(_OWORD *)&CATransform3DIdentity.m23;
    v14[2] = *(_OWORD *)&CATransform3DIdentity.m21;
    v14[3] = v13;
    objc_msgSend(v9, "setTransform:", v14);

    return objc_msgSend(*(id *)(a1 + 32), "_updateTimeTextAnimate:", 1);
  }
  return result;
}

uint64_t sub_400EC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

uint64_t sub_400F8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

id BSUIFixRelativeURLInEntryDictionary(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  id v6;
  id v7;

  v1 = a1;
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v1, "objectForKeyedSubscript:", CFSTR("template")));
  if (v2)
  {
    v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSURL URLWithString:](NSURL, "URLWithString:", CFSTR("jetpack:///")));
    v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSURL URLWithString:relativeToURL:](NSURL, "URLWithString:relativeToURL:", v2, v3));
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "absoluteURL"));

    v6 = objc_msgSend(v1, "mutableCopy");
    objc_msgSend(v6, "setObject:forKeyedSubscript:", v5, CFSTR("template"));
    v7 = objc_msgSend(v6, "copy");

  }
  else
  {
    v7 = v1;
  }

  return v7;
}

void sub_40CC4(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;
  void *v5;
  unsigned int v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;
  BOOL v11;
  BSUINavigationContext *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  void *v22;
  id v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  void *v27;
  id v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  void *v32;
  void *v33;
  id v34;
  void *v35;
  uint64_t v36;
  _QWORD v37[4];
  id v38;
  id v39;

  v2 = objc_opt_class(NSNumber);
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "objectForKeyedSubscript:", CFSTR("useSwiftUI")));
  v4 = BUDynamicCast(v2, v3);
  v5 = (void *)objc_claimAutoreleasedReturnValue(v4);
  v6 = objc_msgSend(v5, "BOOLValue");

  v7 = objc_opt_class(_TtC13BookAnalytics9BATracker);
  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "objectForKeyedSubscript:", CFSTR("parentTracker")));
  v9 = BUDynamicCast(v7, v8);
  v10 = (void *)objc_claimAutoreleasedReturnValue(v9);

  if (v6)
    v11 = v10 == 0;
  else
    v11 = 1;
  if (v11)
  {
    v18 = objc_msgSend(objc_alloc(*(Class *)(a1 + 48)), "initWithOptions:", *(_QWORD *)(a1 + 32));
    v12 = (BSUINavigationContext *)objc_claimAutoreleasedReturnValue(+[JSABridge sharedInstance](JSABridge, "sharedInstance"));
    v13 = *(_QWORD *)(a1 + 40);
    v39 = v18;
    v14 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v39, 1));
    -[BSUINavigationContext enqueueValueCall:arguments:file:line:](v12, "enqueueValueCall:arguments:file:line:", v13, v14, CFSTR("BSUIFeedViewController.m"), 288);
  }
  else
  {
    v15 = objc_opt_class(NSString);
    v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "objectForKeyedSubscript:", CFSTR("navigationType")));
    v17 = BUDynamicCast(v15, v16);
    v18 = (id)objc_claimAutoreleasedReturnValue(v17);

    v19 = objc_opt_class(NSNumber);
    v20 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "objectForKeyedSubscript:", CFSTR("isInCard")));
    v21 = BUDynamicCast(v19, v20);
    v22 = (void *)objc_claimAutoreleasedReturnValue(v21);
    v23 = objc_msgSend(v22, "BOOLValue");

    v24 = objc_opt_class(NSNumber);
    v25 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "objectForKeyedSubscript:", CFSTR("shouldReportFigaro")));
    v26 = BUDynamicCast(v24, v25);
    v27 = (void *)objc_claimAutoreleasedReturnValue(v26);
    v28 = objc_msgSend(v27, "BOOLValue");

    v29 = objc_opt_class(NSNumber);
    v30 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "objectForKeyedSubscript:", CFSTR("isInModal")));
    v31 = BUDynamicCast(v29, v30);
    v32 = (void *)objc_claimAutoreleasedReturnValue(v31);
    v33 = v32;
    if (v32)
    {
      v34 = objc_msgSend(v32, "BOOLValue");
    }
    else
    {
      v35 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithBool:](NSNumber, "numberWithBool:", v23));
      v34 = objc_msgSend(v35, "BOOLValue");

    }
    v12 = -[BSUINavigationContext initWithIsInCard:isInModal:]([BSUINavigationContext alloc], "initWithIsInCard:isInModal:", v23, v34);
    v37[0] = _NSConcreteStackBlock;
    v37[1] = 3221225472;
    v37[2] = sub_4100C;
    v37[3] = &unk_2E5A00;
    v36 = *(_QWORD *)(a1 + 32);
    v38 = *(id *)(a1 + 40);
    +[BSUIFeedViewController createSeriesViewControllerFromOptions:withParentTracker:navigationTypeValue:navigationContext:shouldReportFigaro:completion:](BSUIFeedViewController, "createSeriesViewControllerFromOptions:withParentTracker:navigationTypeValue:navigationContext:shouldReportFigaro:completion:", v36, v10, v18, v12, v28, v37);
    v14 = v38;
  }

}

void sub_4100C(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  NSObject *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;

  if (a2)
  {
    v3 = a2;
    v4 = (void *)objc_claimAutoreleasedReturnValue(+[JSABridge sharedInstance](JSABridge, "sharedInstance"));
    v5 = *(_QWORD *)(a1 + 32);
    v16 = v3;
    v6 = (id)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v16, 1));
    objc_msgSend(v4, "enqueueValueCall:arguments:file:line:", v5, v6, CFSTR("BSUIFeedViewController.m"), 278);

  }
  else
  {
    v6 = 0;
    v7 = BSUIFeedViewControllerLog();
    v8 = objc_claimAutoreleasedReturnValue(v7);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
      sub_238C38(v8, v9, v10, v11, v12, v13, v14, v15);

    v4 = (void *)objc_claimAutoreleasedReturnValue(+[JSABridge sharedInstance](JSABridge, "sharedInstance"));
    objc_msgSend(v4, "enqueueValueCall:arguments:file:line:", *(_QWORD *)(a1 + 32), &__NSArray0__struct, CFSTR("BSUIFeedViewController.m"), 281);
  }

}

uint64_t sub_41138(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

void sub_41264(uint64_t a1)
{
  id v2;
  BSUIFeedNavigationController *v3;
  void *v4;
  void *v5;
  uint64_t v6;
  void *v7;
  BSUIFeedNavigationController *v8;
  id v9;

  v2 = objc_msgSend(objc_alloc(*(Class *)(a1 + 48)), "initWithOptions:", *(_QWORD *)(a1 + 32));
  v3 = -[BSUIFeedNavigationController initWithOptions:]([BSUIFeedNavigationController alloc], "initWithOptions:", *(_QWORD *)(a1 + 32));
  v9 = v2;
  v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v9, 1));
  -[BSUINavigationController setViewControllers:animated:](v3, "setViewControllers:animated:", v4, 0);

  v5 = (void *)objc_claimAutoreleasedReturnValue(+[JSABridge sharedInstance](JSABridge, "sharedInstance"));
  v6 = *(_QWORD *)(a1 + 40);
  v8 = v3;
  v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v8, 1));
  objc_msgSend(v5, "enqueueValueCall:arguments:file:line:", v6, v7, CFSTR("BSUIFeedViewController.m"), 300);

}

uint64_t sub_41384(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

void sub_417CC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_4184C(void *a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  id v6;

  if (a1)
  {
    v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1, "navigationController"));
    v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "navigationBar"));
    v6 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "standardAppearance"));

    objc_msgSend(v6, "configureWithTransparentBackground");
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1, "navigationController"));
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "navigationBar"));
    objc_msgSend(v5, "setStandardAppearance:", v6);

  }
}

void sub_418E4(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(WeakRetained, "setNeedsEnvironmentUpdate");

}

id sub_42168(uint64_t a1)
{
  void *v2;

  sub_421CC(*(_QWORD **)(a1 + 32), 2);
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "scrollView"));
  objc_msgSend(v2, "setContentInsetAdjustmentBehavior:", 2);

  *(_QWORD *)(*(_QWORD *)(a1 + 32) + 32) = 2;
  return objc_msgSend(*(id *)(a1 + 32), "_manuallyAdjustBottomContentInset");
}

void sub_421CC(_QWORD *a1, uint64_t a2)
{
  void *v4;
  void *v5;

  if (a1)
  {
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1, "contentUnavailableConfiguration"));

    if (!v4)
    {
      v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1, "navigationItem"));
      objc_msgSend(v5, "setLargeTitleDisplayMode:", a2);

    }
    a1[5] = a2;
  }
}

id sub_42450(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_updateViewWithBackgroundColor:", *(_QWORD *)(a1 + 40));
}

id sub_42F00(uint64_t a1)
{
  return _objc_msgSend(*(id *)(a1 + 32), "updateNavigationBarOpacity");
}

id sub_42F08(uint64_t a1)
{
  return _objc_msgSend(*(id *)(a1 + 32), "updateNavigationBarOpacity");
}

void sub_438B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;
  uint64_t v16;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Block_object_dispose((const void *)(v16 - 80), 8);
  _Unwind_Resume(a1);
}

uint64_t sub_438F4(uint64_t result)
{
  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(result + 40) + 8) + 24) = *(_QWORD *)(*(_QWORD *)(result + 32) + 112) == 0;
  *(_QWORD *)(*(_QWORD *)(result + 32) + 112) = 1;
  return result;
}

void sub_43924(uint64_t a1, void *a2)
{
  id *v3;
  id v4;
  id WeakRetained;

  v3 = (id *)(a1 + 32);
  v4 = a2;
  WeakRetained = objc_loadWeakRetained(v3);
  objc_msgSend(WeakRetained, "_feedContentDidLoad:signpost:", v4, *(_QWORD *)(a1 + 40));

}

void sub_43EC8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_list va;

  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_43EEC(uint64_t a1, uint64_t a2)
{
  id result;

  result = objc_retainBlock(*(id *)(a2 + 40));
  *(_QWORD *)(a1 + 40) = result;
  return result;
}

void sub_43F14(uint64_t a1)
{

}

void sub_43F1C(uint64_t a1)
{
  id v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;

  *(_QWORD *)(*(_QWORD *)(a1 + 32) + 112) = 2;
  v2 = objc_retainBlock(*(id *)(*(_QWORD *)(a1 + 32) + 120));
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

  v5 = *(_QWORD *)(a1 + 32);
  v6 = *(void **)(v5 + 120);
  *(_QWORD *)(v5 + 120) = 0;

}

void sub_43F80(_QWORD *a1)
{
  id v2;
  void *v3;
  uint64_t v4;
  NSObject *v5;
  NSObject *v6;
  os_signpost_id_t v7;
  uint8_t v8[16];

  v2 = objc_retainBlock(*(id *)(*(_QWORD *)(a1[5] + 8) + 40));
  v3 = v2;
  if (v2)
    (*((void (**)(id, _QWORD))v2 + 2))(v2, a1[4]);

  v4 = BCSignpostFeedViewController();
  v5 = objc_claimAutoreleasedReturnValue(v4);
  v6 = v5;
  v7 = a1[6];
  if (v7 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v5))
  {
    *(_WORD *)v8 = 0;
    _os_signpost_emit_with_name_impl(&dword_0, v6, OS_SIGNPOST_INTERVAL_END, v7, "Load Entries", "", v8, 2u);
  }

}

void sub_44170(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_44188(uint64_t result)
{
  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(result + 40) + 8) + 24) = *(_QWORD *)(*(_QWORD *)(result + 32) + 112) != 0;
  return result;
}

uint64_t sub_44224(uint64_t result)
{
  *(_QWORD *)(*(_QWORD *)(result + 32) + 112) = *(_QWORD *)(result + 40);
  return result;
}

void sub_44314(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_4432C(uint64_t a1)
{
  id v2;
  uint64_t v3;
  void *v4;

  v2 = objc_retainBlock(*(id *)(*(_QWORD *)(a1 + 32) + 120));
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

void sub_448B8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location, char a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23)
{
  _Block_object_dispose(&a19, 8);
  _Unwind_Resume(a1);
}

void sub_44908(uint64_t a1, void *a2)
{
  id *v3;
  id v4;
  id WeakRetained;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  NSObject *v10;
  os_signpost_id_t v11;
  uint64_t v12;
  NSObject *v13;
  os_signpost_id_t v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  NSObject *v18;
  void *v19;
  void *v20;
  void *v21;
  uint64_t v22;
  id v23;
  void *v24;
  id v25;
  uint64_t v26;
  NSObject *v27;
  uint64_t v28;
  uint64_t v29;
  NSObject *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  NSObject *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  NSObject *v38;
  NSObject *v39;
  _QWORD v40[5];
  id v41;
  id v42;
  id v43;
  uint64_t v44;
  BOOL v45;
  uint8_t buf[4];
  id v47;
  __int16 v48;
  _BYTE v49[14];

  v3 = (id *)(a1 + 64);
  v4 = a2;
  WeakRetained = objc_loadWeakRetained(v3);
  v6 = (void *)objc_claimAutoreleasedReturnValue(+[JSABridge sharedInstance](JSABridge, "sharedInstance"));
  objc_msgSend(v6, "debugAssertRunningOnJSAThread");

  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24))
  {
    v8 = BCSignpostFeedViewController(v7);
    v9 = objc_claimAutoreleasedReturnValue(v8);
    v10 = v9;
    v11 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24);
    if (v11 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v9))
    {
      *(_WORD *)buf = 0;
      _os_signpost_emit_with_name_impl(&dword_0, v10, OS_SIGNPOST_INTERVAL_END, v11, "Request Entry Data", "", buf, 2u);
    }

    *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24) = 0;
  }
  ++*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 24);
  v12 = BCSignpostFeedViewController(v7);
  v13 = objc_claimAutoreleasedReturnValue(v12);
  v14 = os_signpost_id_generate(v13);

  v16 = BCSignpostFeedViewController(v15);
  v17 = objc_claimAutoreleasedReturnValue(v16);
  v18 = v17;
  if (v14 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v17))
  {
    v19 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "uid"));
    v20 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "templateURL"));
    v21 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v20, "lastPathComponent"));
    v22 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 24);
    *(_DWORD *)buf = 138543874;
    v47 = v19;
    v48 = 2114;
    *(_QWORD *)v49 = v21;
    *(_WORD *)&v49[8] = 1024;
    *(_DWORD *)&v49[10] = v22;
    _os_signpost_emit_with_name_impl(&dword_0, v18, OS_SIGNPOST_INTERVAL_BEGIN, v14, "Entry RenderBlock", "Entry: %{public}@, Template: %{public}@, ReloadCount: %d", buf, 0x1Cu);

  }
  v23 = BSUIFixRelativeURLInEntryDictionary(v4);
  v24 = (void *)objc_claimAutoreleasedReturnValue(v23);

  v25 = objc_msgSend(WeakRetained, "deferUIUpdateUntilInitialContentReady");
  if ((_DWORD)v25 && *(uint64_t *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 24) >= 1)
  {
    v26 = BSUIFeedViewControllerLog(v25);
    v27 = objc_claimAutoreleasedReturnValue(v26);
    if (os_log_type_enabled(v27, OS_LOG_TYPE_DEFAULT))
    {
      v28 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 24);
      v29 = *(_QWORD *)(a1 + 32);
      *(_DWORD *)buf = 138412802;
      v47 = WeakRetained;
      v48 = 1024;
      *(_DWORD *)v49 = v28;
      *(_WORD *)&v49[4] = 2112;
      *(_QWORD *)&v49[6] = v29;
      _os_log_impl(&dword_0, v27, OS_LOG_TYPE_DEFAULT, "%@: deferReload: Deferring #%d update entry %@ for a main queue cycle", buf, 0x1Cu);
    }

    v30 = objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "deferredReloadsQueue"));
    v40[0] = _NSConcreteStackBlock;
    v40[1] = 3221225472;
    v40[2] = sub_44D60;
    v40[3] = &unk_2E5B18;
    v31 = *(_QWORD *)(a1 + 56);
    v40[4] = WeakRetained;
    v44 = v31;
    v41 = *(id *)(a1 + 32);
    v43 = *(id *)(a1 + 40);
    v45 = v24 != 0;
    v42 = v24;
    dispatch_async(v30, v40);

  }
  else
  {
    v33 = BSUIFeedViewControllerLog(v25);
    v34 = objc_claimAutoreleasedReturnValue(v33);
    if (os_log_type_enabled(v34, OS_LOG_TYPE_DEFAULT))
    {
      v35 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 24);
      v36 = *(_QWORD *)(a1 + 32);
      *(_DWORD *)buf = 138412802;
      v47 = WeakRetained;
      v48 = 1024;
      *(_DWORD *)v49 = v35;
      *(_WORD *)&v49[4] = 2112;
      *(_QWORD *)&v49[6] = v36;
      _os_log_impl(&dword_0, v34, OS_LOG_TYPE_DEFAULT, "%@: deferReload: Executing #%d update entry %@", buf, 0x1Cu);
    }

    v32 = (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
  }
  v37 = BCSignpostFeedViewController(v32);
  v38 = objc_claimAutoreleasedReturnValue(v37);
  v39 = v38;
  if (v14 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v38))
  {
    *(_WORD *)buf = 0;
    _os_signpost_emit_with_name_impl(&dword_0, v39, OS_SIGNPOST_INTERVAL_END, v14, "Entry RenderBlock", "", buf, 2u);
  }

}

uint64_t sub_44D60(_QWORD *a1)
{
  uint64_t v2;
  NSObject *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v8;
  uint64_t v9;
  __int16 v10;
  int v11;
  __int16 v12;
  uint64_t v13;

  v2 = BSUIFeedViewControllerLog();
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    v4 = *(_QWORD *)(*(_QWORD *)(a1[8] + 8) + 24);
    v5 = a1[4];
    v6 = a1[5];
    v8 = 138412802;
    v9 = v5;
    v10 = 1024;
    v11 = v4;
    v12 = 2112;
    v13 = v6;
    _os_log_impl(&dword_0, v3, OS_LOG_TYPE_DEFAULT, "%@: deferReload: Executing #%d deferred update entry %@", (uint8_t *)&v8, 0x1Cu);
  }

  return (*(uint64_t (**)(void))(a1[7] + 16))();
}

void sub_454C8(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 56));
  _Unwind_Resume(a1);
}

void sub_454E4(uint64_t a1)
{
  id WeakRetained;
  void *v3;
  uint64_t v4;
  NSObject *v5;
  id v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  uint64_t v12;
  int v13;
  id v14;
  __int16 v15;
  uint64_t v16;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "ba_analyticsTracker"));

  if (v3)
  {
    v4 = BCCardModelLog();
    v5 = objc_claimAutoreleasedReturnValue(v4);
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEBUG))
      sub_238CF8(v5);
LABEL_4:

    goto LABEL_5;
  }
  if (*(_QWORD *)(a1 + 32)
    && (objc_msgSend(*(id *)(*(_QWORD *)(a1 + 40) + 96), "isEqualToString:") & 1) == 0)
  {
    v6 = objc_msgSend(*(id *)(a1 + 32), "copy");
    v7 = *(_QWORD *)(a1 + 40);
    v8 = *(void **)(v7 + 96);
    *(_QWORD *)(v7 + 96) = v6;

    v10 = BSUIFeedViewControllerLog(v9);
    v11 = objc_claimAutoreleasedReturnValue(v10);
    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEBUG))
    {
      v12 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 96);
      v13 = 138543618;
      v14 = WeakRetained;
      v15 = 2114;
      v16 = v12;
      _os_log_debug_impl(&dword_0, v11, OS_LOG_TYPE_DEBUG, "Setting up %{public}@'s tracker to be %{public}@", (uint8_t *)&v13, 0x16u);
    }

    v5 = objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "ba_setupNewAnalyticsTrackerWithName:", *(_QWORD *)(*(_QWORD *)(a1 + 40) + 96)));
    objc_msgSend(WeakRetained, "_setEffectiveAnalyticsTracker:", v5);
    goto LABEL_4;
  }
LABEL_5:

}

uint64_t sub_45650(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

void sub_45788(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_457A0(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  BSUIGoalsSharableImageRenderer *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  _QWORD v13[4];
  id v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t (*v21)(uint64_t, uint64_t);
  void (*v22)(uint64_t);
  BSUIGoalsSharableImageRenderer *v23;

  v5 = a2;
  v6 = a3;
  v18 = 0;
  v19 = &v18;
  v20 = 0x3032000000;
  v21 = sub_458E0;
  v22 = sub_458F0;
  v7 = [BSUIGoalsSharableImageRenderer alloc];
  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "traitCollection"));
  v23 = -[BSUIGoalsSharableImageRenderer initWithOptions:completion:traitCollection:](v7, "initWithOptions:completion:traitCollection:", v5, v6, v8);

  v9 = (void *)v19[5];
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 3221225472;
  v13[2] = sub_458F8;
  v13[3] = &unk_2E5B68;
  v10 = *(_QWORD *)(a1 + 40);
  v16 = &v18;
  v17 = v10;
  v11 = v5;
  v12 = *(_QWORD *)(a1 + 32);
  v14 = v11;
  v15 = v12;
  objc_msgSend(v9, "renderSharableImage:", v13);

  _Block_object_dispose(&v18, 8);
}

void sub_458C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_458E0(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_458F0(uint64_t a1)
{

}

void sub_458F8(uint64_t a1, void *a2)
{
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  void *v37;
  void *v38;
  void *v39;
  uint64_t v40;
  id v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  id v45;
  _QWORD v46[5];
  id v47;

  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = 0;
  v45 = a2;

  v5 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
  v6 = *(void **)(v5 + 40);
  *(_QWORD *)(v5 + 40) = 0;

  v7 = objc_opt_class(NSNumber);
  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "objectForKeyedSubscript:", CFSTR("booksFinishedInYear")));
  v9 = BUDynamicCast(v7, v8);
  v10 = (void *)objc_claimAutoreleasedReturnValue(v9);
  v44 = (int)objc_msgSend(v10, "intValue");

  v11 = objc_opt_class(NSString);
  v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "objectForKeyedSubscript:", CFSTR("title")));
  v13 = BUDynamicCast(v11, v12);
  v43 = (void *)objc_claimAutoreleasedReturnValue(v13);

  v14 = objc_opt_class(NSDictionary);
  v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "objectForKeyedSubscript:", CFSTR("sharingUrls")));
  v16 = BUDynamicCast(v14, v15);
  v17 = (void *)objc_claimAutoreleasedReturnValue(v16);

  v18 = objc_opt_class(NSNumber);
  v19 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "objectForKeyedSubscript:", CFSTR("achievementSheetKind")));
  v20 = BUDynamicCast(v18, v19);
  v21 = (void *)objc_claimAutoreleasedReturnValue(v20);
  v42 = (int)objc_msgSend(v21, "intValue");

  v22 = objc_opt_class(UIView);
  v23 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "objectForKeyedSubscript:", CFSTR("sourceView")));
  v24 = BUDynamicCast(v22, v23);
  v25 = (void *)objc_claimAutoreleasedReturnValue(v24);

  v26 = objc_opt_class(UIBarButtonItem);
  v27 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "objectForKeyedSubscript:", CFSTR("sourceBarButtonItem")));
  v28 = BUDynamicCast(v26, v27);
  v29 = (void *)objc_claimAutoreleasedReturnValue(v28);

  v30 = objc_opt_class(NSString);
  v31 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "objectForKeyedSubscript:", CFSTR("refId")));
  v32 = BUDynamicCast(v30, v31);
  v33 = (void *)objc_claimAutoreleasedReturnValue(v32);

  v34 = objc_opt_class(NSString);
  v35 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "objectForKeyedSubscript:", CFSTR("refInstance")));
  v36 = BUDynamicCast(v34, v35);
  v37 = (void *)objc_claimAutoreleasedReturnValue(v36);

  v38 = (void *)objc_claimAutoreleasedReturnValue(+[TUIRenderReferenceQuery queryWithUUID:uid:refId:refInstance:](TUIRenderReferenceQuery, "queryWithUUID:uid:refId:refInstance:", 0, 0, v33, v37));
  v39 = (void *)objc_claimAutoreleasedReturnValue(+[TUIRenderReferenceOverride overrideWithQuery:forceVisibleOnHover:](TUIRenderReferenceOverride, "overrideWithQuery:forceVisibleOnHover:", v38, 1));
  objc_msgSend(*(id *)(a1 + 40), "addRenderOverride:", v39);
  v40 = *(_QWORD *)(a1 + 40);
  v46[0] = _NSConcreteStackBlock;
  v46[1] = 3221225472;
  v46[2] = sub_45C68;
  v46[3] = &unk_2E40C8;
  v46[4] = v40;
  v47 = v39;
  v41 = v39;
  +[BSUIGoalsShareSheet presentShareSheetFromViewController:sourceView:sourceBarButtonItem:image:kind:year:title:sharingUrls:completion:](BSUIGoalsShareSheet, "presentShareSheetFromViewController:sourceView:sourceBarButtonItem:image:kind:year:title:sharingUrls:completion:", v40, v25, v29, v45, v42, v44, v43, v17, v46);

}

id sub_45C68(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "removeRenderOverride:", *(_QWORD *)(a1 + 40));
}

void sub_46330(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_46348(uint64_t a1, void *a2, _BYTE *a3)
{
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  unsigned int v13;
  _BYTE *v14;
  id v15;

  v15 = a2;
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v15, "query"));
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "UUID"));
  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "uid"));
  if ((objc_msgSend(v6, "matchesUUID:uid:", v7, v8) & 1) != 0)
  {
    v14 = a3;
    v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v15, "query"));
    v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "refId"));
    v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "refInstance"));
    v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "identifier"));
    v13 = objc_msgSend(v9, "matchesRefId:refInstance:identifier:", v10, v11, v12);

    if (v13)
    {
      objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), a2);
      *v14 = 1;
    }
  }
  else
  {

  }
}

void sub_46D80(uint64_t a1)
{
  id v2;

  v2 = (id)objc_claimAutoreleasedReturnValue(+[JSABridge sharedInstance](JSABridge, "sharedInstance"));
  objc_msgSend(v2, "enqueueValueCall:arguments:file:line:", *(_QWORD *)(a1 + 32), &off_2FBB08, CFSTR("BSUIFeedViewController.m"), 1745);

}

void sub_46DD8(uint64_t a1)
{
  id v2;

  v2 = (id)objc_claimAutoreleasedReturnValue(+[JSABridge sharedInstance](JSABridge, "sharedInstance"));
  objc_msgSend(v2, "enqueueValueCall:arguments:file:line:", *(_QWORD *)(a1 + 32), &off_2FBB20, CFSTR("BSUIFeedViewController.m"), 1750);

}

void sub_4705C(uint64_t a1)
{
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));
}

void sub_47064(uint64_t a1)
{
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));
}

void sub_4706C(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  void *v4;
  void *v5;
  void *v6;

  v2 = (void *)objc_claimAutoreleasedReturnValue(+[JSABridge sharedInstance](JSABridge, "sharedInstance"));
  v3 = *(_QWORD *)(a1 + 32);
  v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithBool:](NSNumber, "numberWithBool:", *(unsigned __int8 *)(a1 + 40)));
  v6 = v4;
  v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v6, 1));
  objc_msgSend(v2, "enqueueValueCall:arguments:file:line:", v3, v5, CFSTR("BSUIFeedViewController.m"), 1792);

}

void sub_471C4(uint64_t a1)
{
  id v2;

  v2 = (id)objc_claimAutoreleasedReturnValue(+[JSABridge sharedInstance](JSABridge, "sharedInstance"));
  objc_msgSend(v2, "enqueueValueCall:arguments:file:line:", *(_QWORD *)(a1 + 32), 0, CFSTR("BSUIFeedViewController.m"), 1801);

}

id sub_47344(uint64_t a1, void *a2)
{
  return _objc_msgSend(a2, "setCardResource:", *(_QWORD *)(a1 + 32));
}

void sub_473F0(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  uint64_t v9;
  void *v10;
  BSUIImpression *v11;
  void (**v12)(id, id);
  id v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  _BYTE v18[128];

  v3 = a2;
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "impressions"));
  v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableArray arrayWithCapacity:](NSMutableArray, "arrayWithCapacity:", objc_msgSend(v4, "count")));

  v16 = 0u;
  v17 = 0u;
  v14 = 0u;
  v15 = 0u;
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "impressions", 0));
  v7 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v14, v18, 16);
  if (v7)
  {
    v8 = v7;
    v9 = *(_QWORD *)v15;
    do
    {
      v10 = 0;
      do
      {
        if (*(_QWORD *)v15 != v9)
          objc_enumerationMutation(v6);
        v11 = -[BSUIImpression initWithImpression:]([BSUIImpression alloc], "initWithImpression:", *(_QWORD *)(*((_QWORD *)&v14 + 1) + 8 * (_QWORD)v10));
        objc_msgSend(v5, "addObject:", v11);

        v10 = (char *)v10 + 1;
      }
      while (v8 != v10);
      v8 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v14, v18, 16);
    }
    while (v8);
  }

  v12 = (void (**)(id, id))objc_retainBlock(*(id *)(a1 + 32));
  if (v12)
  {
    v13 = objc_msgSend(v5, "copy");
    v12[2](v12, v13);

  }
}

void sub_47618(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  uint64_t v9;
  void *v10;
  BSUIImpression *v11;
  void (**v12)(id, id);
  id v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  _BYTE v18[128];

  v3 = a2;
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "impressions"));
  v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableArray arrayWithCapacity:](NSMutableArray, "arrayWithCapacity:", objc_msgSend(v4, "count")));

  v16 = 0u;
  v17 = 0u;
  v14 = 0u;
  v15 = 0u;
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "impressions", 0));
  v7 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v14, v18, 16);
  if (v7)
  {
    v8 = v7;
    v9 = *(_QWORD *)v15;
    do
    {
      v10 = 0;
      do
      {
        if (*(_QWORD *)v15 != v9)
          objc_enumerationMutation(v6);
        v11 = -[BSUIImpression initWithImpression:]([BSUIImpression alloc], "initWithImpression:", *(_QWORD *)(*((_QWORD *)&v14 + 1) + 8 * (_QWORD)v10));
        objc_msgSend(v5, "addObject:", v11);

        v10 = (char *)v10 + 1;
      }
      while (v8 != v10);
      v8 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v14, v18, 16);
    }
    while (v8);
  }

  v12 = (void (**)(id, id))objc_retainBlock(*(id *)(a1 + 32));
  if (v12)
  {
    v13 = objc_msgSend(v5, "copy");
    v12[2](v12, v13);

  }
}

void sub_47854(uint64_t a1, void *a2)
{
  id v2;
  void *v3;
  double v4;
  void *v5;
  double v6;
  void *v7;
  double v8;
  void *v9;
  double v10;
  double v11;
  void *v12;
  double v13;
  double v14;
  void *v15;
  double v16;
  double v17;
  void *v18;
  double v19;
  void *v20;
  double v21;
  void *v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  double v32;
  void *v33;
  void *v34;
  void *v35;
  void *v36;
  void *v37;
  void *v38;
  void *v39;
  void *v40;
  void *v41;
  void *v42;
  id v43;
  void *v44;
  void *v45;
  double v46;
  double v47;
  void *v48;
  void *v49;
  double v50;
  void *v51;
  double v52;
  void *v53;
  double v54;
  void *v55;
  _QWORD v57[15];
  _QWORD v58[15];

  v2 = a2;
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "viewWillAppearDate"));
  objc_msgSend(v3, "timeIntervalSince1970");
  v54 = v4;

  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "viewWillAppearDate"));
  objc_msgSend(v5, "timeIntervalSince1970");
  v52 = v6;

  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "initialContentReadyDate"));
  objc_msgSend(v7, "timeIntervalSince1970");
  v50 = v8;

  v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "initialResourcesRenderedDate"));
  objc_msgSend(v9, "timeIntervalSince1970");
  v11 = v10;

  v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "initialLayoutStartDate"));
  objc_msgSend(v12, "timeIntervalSince1970");
  v14 = v13;

  v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "allContentReadyDate"));
  objc_msgSend(v15, "timeIntervalSince1970");
  v17 = v16;

  v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "resourcesStartLoadingDate"));
  objc_msgSend(v18, "timeIntervalSince1970");
  v47 = v19;

  v20 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "initialResourcesRenderedDate"));
  objc_msgSend(v20, "timeIntervalSince1970");
  v46 = v21;

  v22 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "resourcesLoadedDate"));
  objc_msgSend(v22, "timeIntervalSince1970");
  v24 = v23;

  objc_msgSend(v2, "elapsedTimeForPhase:", 1);
  v26 = v25;
  objc_msgSend(v2, "elapsedTimeForPhase:", 2);
  v28 = v27;
  objc_msgSend(v2, "elapsedTimeForPhase:", 3);
  v30 = v29;
  objc_msgSend(v2, "elapsedTimeForPhase:", 4);
  v32 = v31;

  v57[0] = CFSTR("interstitialPageAppearTime");
  v55 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](NSNumber, "numberWithDouble:", v54));
  v58[0] = v55;
  v57[1] = CFSTR("pageAppearTime");
  v53 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](NSNumber, "numberWithDouble:", v52));
  v58[1] = v53;
  v57[2] = CFSTR("pageUserInteractiveTime");
  v51 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](NSNumber, "numberWithDouble:", v50));
  v58[2] = v51;
  v57[3] = CFSTR("pageEndTime");
  v49 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](NSNumber, "numberWithDouble:", v11));
  v58[3] = v49;
  v57[4] = CFSTR("modelConstructionStartTime");
  v48 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](NSNumber, "numberWithDouble:", v14));
  v58[4] = v48;
  v57[5] = CFSTR("modelConstructionEndTime");
  v45 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](NSNumber, "numberWithDouble:", v17));
  v58[5] = v45;
  v57[6] = CFSTR("modelRenderStartTime");
  v33 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](NSNumber, "numberWithDouble:", v14));
  v58[6] = v33;
  v57[7] = CFSTR("modelRenderEndTime");
  v34 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](NSNumber, "numberWithDouble:", v17));
  v58[7] = v34;
  v57[8] = CFSTR("resourceRequestStartTime");
  v35 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](NSNumber, "numberWithDouble:", v47));
  v58[8] = v35;
  v57[9] = CFSTR("onScreenResourcesAppearEndTime");
  v36 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](NSNumber, "numberWithDouble:", v46));
  v58[9] = v36;
  v57[10] = CFSTR("resourceRequestEndTime");
  v37 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](NSNumber, "numberWithDouble:", v24));
  v58[10] = v37;
  v57[11] = CFSTR("TemplateUI:parsingInterval");
  v38 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](NSNumber, "numberWithDouble:", v26));
  v58[11] = v38;
  v57[12] = CFSTR("TemplateUI:instantiateInterval");
  v39 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](NSNumber, "numberWithDouble:", v28));
  v58[12] = v39;
  v57[13] = CFSTR("TemplateUI:layoutInterval");
  v40 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](NSNumber, "numberWithDouble:", v30));
  v58[13] = v40;
  v57[14] = CFSTR("TemplateUI:renderInterval");
  v41 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](NSNumber, "numberWithDouble:", v32));
  v58[14] = v41;
  v42 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", v58, v57, 15));

  v43 = objc_retainBlock(*(id *)(a1 + 32));
  v44 = v43;
  if (v43)
    (*((void (**)(id, void *))v43 + 2))(v43, v42);

}

void sub_48540(id a1, NSError *a2)
{
  NSError *v2;
  NSError *v3;
  uint64_t v4;
  NSObject *v5;

  v2 = a2;
  v3 = v2;
  if (v2)
  {
    v4 = BSUIFeedViewControllerLog(v2);
    v5 = objc_claimAutoreleasedReturnValue(v4);
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
      sub_238DAC((uint64_t)v3, v5);

  }
}

void sub_4A29C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  id *v9;
  uint64_t v10;
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  objc_destroyWeak(v9);
  objc_destroyWeak((id *)(v10 - 120));
  _Unwind_Resume(a1);
}

void sub_4A2C4(uint64_t a1, void *a2)
{
  id WeakRetained;
  void *v4;
  void *v5;
  char *v6;
  void *v7;
  void *v8;
  void *v9;
  id v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  id v14;
  void *v15;
  unint64_t v16;
  uint64_t v17;
  void *v18;
  id v19;
  _QWORD v20[4];
  id v21;
  _QWORD v22[4];
  id v23;

  v19 = a2;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  objc_msgSend(WeakRetained, "setUpdateEnvironmentOnViewLoad:", 0);
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "presentingViewController"));
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "presentedViewController"));
  v6 = (char *)objc_msgSend(v5, "modalPresentationStyle");

  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "traitCollection"));
  if ((unint64_t)(v6 - 1) <= 1)
  {
    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "bc_ancestorFullScreenPresentingViewController"));
    v9 = v8;
    if (v8)
    {
      v22[0] = _NSConcreteStackBlock;
      v22[1] = 3221225472;
      v22[2] = sub_4A4EC;
      v22[3] = &unk_2E5C98;
      v23 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "traitCollection"));
      v10 = v23;
      v11 = objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "traitCollectionByModifyingTraits:", v22));

      v7 = (void *)v11;
    }

  }
  v12 = *(void **)(a1 + 40);
  if (v12)
  {
    v20[0] = _NSConcreteStackBlock;
    v20[1] = 3221225472;
    v20[2] = sub_4A548;
    v20[3] = &unk_2E5CC0;
    v21 = v12;
    v13 = objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "traitCollectionByModifyingTraits:", v20));

    v7 = (void *)v13;
  }
  v14 = objc_msgSend(objc_alloc((Class)TUIEnvironment), "initWithTraitCollection:viewController:viewSize:", v7, *(_QWORD *)(a1 + 32), *(double *)(a1 + 64), *(double *)(a1 + 72));
  objc_msgSend(WeakRetained, "_customizePresentationUsingViewController:environment:", *(_QWORD *)(a1 + 32), v14);
  v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v19, "entries"));
  v16 = *(_QWORD *)(a1 + 80);
  if (v16 >= (unint64_t)objc_msgSend(v15, "count"))
    v17 = objc_claimAutoreleasedReturnValue(objc_msgSend(v15, "lastObject"));
  else
    v17 = objc_claimAutoreleasedReturnValue(objc_msgSend(v15, "objectAtIndexedSubscript:", *(_QWORD *)(a1 + 80) - 1));
  v18 = (void *)v17;
  objc_msgSend(WeakRetained, "synchronouslyUpdateContent:environment:andWaitForEntry:timeout:completion:", v19, v14, v17, *(_QWORD *)(a1 + 48), 1.0);

}

void sub_4A4EC(uint64_t a1, void *a2)
{
  void *v3;
  id v4;

  v3 = *(void **)(a1 + 32);
  v4 = a2;
  objc_msgSend(v4, "setHorizontalSizeClass:", objc_msgSend(v3, "horizontalSizeClass"));
  objc_msgSend(v4, "setVerticalSizeClass:", objc_msgSend(*(id *)(a1 + 32), "verticalSizeClass"));

}

uint64_t sub_4A548(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

void sub_4A554(uint64_t a1)
{
  id v2;
  uint64_t v3;
  void *v4;

  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24) = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 112);
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24) <= 1uLL)
  {
    v2 = objc_retainBlock(*(id *)(a1 + 40));
    v3 = *(_QWORD *)(a1 + 32);
    v4 = *(void **)(v3 + 120);
    *(_QWORD *)(v3 + 120) = v2;

  }
}

void sub_4AC50(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,id location)
{
  id *v23;

  objc_destroyWeak(v23);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_4AC74(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v6;
  NSObject *v7;
  NSObject *v8;
  os_signpost_id_t v9;
  const __CFString *v10;
  const __CFString *v11;
  id v12;
  void *v13;
  int v14;
  const __CFString *v15;
  __int16 v16;
  const __CFString *v17;

  v6 = BCAugmentedExperienceSignpost();
  v7 = objc_claimAutoreleasedReturnValue(v6);
  v8 = v7;
  v9 = *(_QWORD *)(a1 + 40);
  if (v9 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v7))
  {
    v10 = CFSTR("NO");
    if ((_DWORD)a2)
      v11 = CFSTR("YES");
    else
      v11 = CFSTR("NO");
    if (a3)
      v10 = CFSTR("YES");
    v14 = 138412546;
    v15 = v11;
    v16 = 2112;
    v17 = v10;
    _os_signpost_emit_with_name_impl(&dword_0, v8, OS_SIGNPOST_INTERVAL_END, v9, "BSUIFeedVC.AugExp.preload", "Success: %@, Timeout: %@", (uint8_t *)&v14, 0x16u);
  }

  v12 = objc_retainBlock(*(id *)(a1 + 32));
  v13 = v12;
  if (v12)
    (*((void (**)(id, uint64_t))v12 + 2))(v12, a2);

}

void sub_4AD98(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  _QWORD v4[5];
  id v5;
  id v6[2];

  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_4AE34;
  v4[3] = &unk_2E5D88;
  objc_copyWeak(v6, (id *)(a1 + 48));
  v2 = *(_QWORD *)(a1 + 32);
  v3 = *(void **)(a1 + 40);
  v6[1] = *(id *)(a1 + 56);
  v4[4] = v2;
  v5 = v3;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v4);

  objc_destroyWeak(v6);
}

void sub_4AE34(uint64_t a1)
{
  id WeakRetained;
  uint64_t v3;
  NSObject *v4;
  uint64_t v5;
  NSObject *v6;
  NSObject *v7;
  os_signpost_id_t v8;
  void *v9;
  char *v10;
  uint64_t v11;
  NSObject *v12;
  uint64_t v13;
  NSObject *v14;
  os_signpost_id_t v15;
  uint64_t v16;
  NSObject *v17;
  NSObject *v18;
  id v19;
  void *v20;
  _QWORD v21[5];
  id v22;
  os_signpost_id_t v23;
  uint8_t buf[4];
  id v25;
  __int16 v26;
  id v27;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  v3 = BCAugmentedExperienceLog();
  v4 = objc_claimAutoreleasedReturnValue(v3);
  if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
  {
    *(_DWORD *)buf = 138412290;
    v25 = WeakRetained;
    _os_log_impl(&dword_0, v4, OS_LOG_TYPE_INFO, "%@: preloadAugmentedExperienceContent _prepareForOpen complete", buf, 0xCu);
  }

  if (!WeakRetained)
    goto LABEL_14;
  v5 = BCAugmentedExperienceSignpost();
  v6 = objc_claimAutoreleasedReturnValue(v5);
  v7 = v6;
  v8 = *(_QWORD *)(a1 + 56);
  if (v8 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v6))
  {
    *(_WORD *)buf = 0;
    _os_signpost_emit_with_name_impl(&dword_0, v7, OS_SIGNPOST_INTERVAL_END, v8, "BSUIFeedVC.AugExp.prepareForOpen", "", buf, 2u);
  }

  v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "jsFeedController"));
  v10 = (char *)objc_msgSend(v9, "viewState");

  v11 = BCAugmentedExperienceLog();
  v12 = objc_claimAutoreleasedReturnValue(v11);
  if (os_log_type_enabled(v12, OS_LOG_TYPE_INFO))
  {
    *(_DWORD *)buf = 138412546;
    v25 = WeakRetained;
    v26 = 2048;
    v27 = v10;
    _os_log_impl(&dword_0, v12, OS_LOG_TYPE_INFO, "%@: preloadAugmentedExperienceContent finalized syncLoadContent (viewState: %ld)", buf, 0x16u);
  }

  if (v10 == (_BYTE *)&dword_0 + 1)
  {
    v13 = BCAugmentedExperienceSignpost();
    v14 = objc_claimAutoreleasedReturnValue(v13);
    v15 = os_signpost_id_generate(v14);

    v16 = BCAugmentedExperienceSignpost();
    v17 = objc_claimAutoreleasedReturnValue(v16);
    v18 = v17;
    if (v15 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v17))
    {
      *(_WORD *)buf = 0;
      _os_signpost_emit_with_name_impl(&dword_0, v18, OS_SIGNPOST_INTERVAL_BEGIN, v15, "BSUIFeedVC.AugExp.loadImage", "", buf, 2u);
    }

    v21[0] = _NSConcreteStackBlock;
    v21[1] = 3221225472;
    v21[2] = sub_4B0C8;
    v21[3] = &unk_2E5D60;
    v23 = v15;
    v21[4] = WeakRetained;
    v22 = *(id *)(a1 + 40);
    objc_msgSend(WeakRetained, "notifyWhenVisibleImageResourcesAreLoadedWithTimeout:completion:", v21, 10.0);

  }
  else
  {
LABEL_14:
    v19 = objc_retainBlock(*(id *)(a1 + 40));
    v20 = v19;
    if (v19)
      (*((void (**)(id, _QWORD, _QWORD))v19 + 2))(v19, 0, 0);

  }
}

void sub_4B0C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  NSObject *v5;
  NSObject *v6;
  os_signpost_id_t v7;
  const __CFString *v8;
  uint64_t v9;
  NSObject *v10;
  const __CFString *v11;
  id v12;
  void *v13;
  int v14;
  const __CFString *v15;

  v4 = BCAugmentedExperienceSignpost();
  v5 = objc_claimAutoreleasedReturnValue(v4);
  v6 = v5;
  v7 = *(_QWORD *)(a1 + 48);
  if (v7 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v5))
  {
    v8 = CFSTR("NO");
    if ((_DWORD)a2)
      v8 = CFSTR("YES");
    v14 = 138412290;
    v15 = v8;
    _os_signpost_emit_with_name_impl(&dword_0, v6, OS_SIGNPOST_INTERVAL_END, v7, "BSUIFeedVC.AugExp.loadImage", "Timeout: %@", (uint8_t *)&v14, 0xCu);
  }

  v9 = BCAugmentedExperienceLog();
  v10 = objc_claimAutoreleasedReturnValue(v9);
  if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
  {
    v11 = *(const __CFString **)(a1 + 32);
    v14 = 138412290;
    v15 = v11;
    _os_log_impl(&dword_0, v10, OS_LOG_TYPE_INFO, "%@: preloadAugmentedExperienceContent load image complete", (uint8_t *)&v14, 0xCu);
  }

  v12 = objc_retainBlock(*(id *)(a1 + 40));
  v13 = v12;
  if (v12)
    (*((void (**)(id, _QWORD, uint64_t))v12 + 2))(v12, a2 ^ 1, a2);

}

void sub_4B34C(uint64_t a1, void *a2)
{
  id v3;
  void (**v4)(id, id);
  _QWORD v5[4];
  id v6;
  void (**v7)(id, id);

  v3 = a2;
  v4 = (void (**)(id, id))objc_retainBlock(*(id *)(a1 + 32));
  if (v4)
  {
    if (+[NSThread isMainThread](NSThread, "isMainThread"))
    {
      v4[2](v4, v3);
    }
    else
    {
      v5[0] = _NSConcreteStackBlock;
      v5[1] = 3221225472;
      v5[2] = sub_4B410;
      v5[3] = &unk_2E5DB0;
      v7 = v4;
      v6 = v3;
      dispatch_async((dispatch_queue_t)&_dispatch_main_q, v5);

    }
  }

}

uint64_t sub_4B410(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(a1 + 40) + 16))(*(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 32));
}

void sub_4B828(uint64_t a1)
{
  _BYTE *WeakRetained;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  _BYTE *v9;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    v9 = WeakRetained;
    if (*(_QWORD *)(a1 + 40) == 2)
    {
      v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "navigationBarTintColorWhenLayoutReady"));

      if (v3)
      {
        v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "navigationBarTintColorWhenLayoutReady"));
        v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "navigationController"));
        v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "navigationBar"));
        objc_msgSend(v6, "setTintColor:", v4);

        if ((objc_msgSend(v9, "runningInExtension") & 1) == 0)
          objc_msgSend(v9, "setNeedsStatusBarAppearanceUpdate");
      }
      v9[24] = 0;
      objc_msgSend(v9, "setNeedsUpdateContentUnavailableConfiguration");
      v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "jsFeedController"));
      v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "metadata"));
      objc_msgSend(v9, "_configureNavigationBarWithStyle:", objc_msgSend(v8, "navigationBarStyle"));

      kdebug_trace(725353852, 0, 0, 0, 0);
    }
    else
    {
      if ((objc_msgSend(WeakRetained, "isViewLoaded") & 1) == 0)
        BUHaltDebugger();
      v9[24] = 1;
      objc_msgSend(v9, "setNeedsUpdateContentUnavailableConfiguration");
    }
    WeakRetained = v9;
  }

}

void sub_4B96C(uint64_t a1)
{
  id WeakRetained;
  void *v2;
  void *v3;
  _QWORD v4[5];

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v2 = WeakRetained;
  if (WeakRetained)
  {
    v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "cardAuxiliaryNavigationBarManager"));
    v4[0] = _NSConcreteStackBlock;
    v4[1] = 3221225472;
    v4[2] = sub_4B9EC;
    v4[3] = &unk_2E5BE0;
    v4[4] = v2;
    objc_msgSend(v3, "viewControllerWhenAvailable:", v4);

  }
}

void sub_4B9EC(uint64_t a1, void *a2)
{
  void *v3;
  void *v4;
  id v5;

  v5 = a2;
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "layoutController"));
  if (objc_msgSend(v3, "layoutState") == (char *)&dword_0 + 2)
  {
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "feedController"));
    objc_msgSend(v5, "setIsContentReadyForRender:", objc_msgSend(v4, "viewState") == (char *)&dword_0 + 1);

  }
  else
  {
    objc_msgSend(v5, "setIsContentReadyForRender:", 0);
  }

}

void sub_4BBC0(uint64_t a1)
{
  uint64_t v2;
  NSObject *v3;
  uint64_t v4;
  NSObject *v5;
  int v6;
  uint64_t v7;

  v2 = BSUIFeedViewControllerLog(a1);
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    v4 = *(_QWORD *)(a1 + 32);
    v6 = 138412290;
    v7 = v4;
    _os_log_impl(&dword_0, v3, OS_LOG_TYPE_DEFAULT, "%@: deferReload: Unblocking deferredReloadsQueue", (uint8_t *)&v6, 0xCu);
  }

  v5 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "deferredReloadsQueue"));
  dispatch_activate(v5);

}

void sub_4BC7C(uint64_t a1)
{
  void *v2;
  id v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  __int16 v12;
  id v13;

  v2 = *(void **)(*(_QWORD *)(a1 + 32) + 288);
  if (v2)
  {
    v3 = objc_msgSend(v2, "copy");
    v4 = *(_QWORD *)(a1 + 32);
    v5 = *(void **)(v4 + 288);
    *(_QWORD *)(v4 + 288) = 0;

    v7 = BSUIFeedViewControllerLog(v6);
    v8 = objc_claimAutoreleasedReturnValue(v7);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      v9 = *(_QWORD *)(a1 + 32);
      v10 = 138412546;
      v11 = v9;
      v12 = 2112;
      v13 = v3;
      _os_log_impl(&dword_0, v8, OS_LOG_TYPE_DEFAULT, "%@: deferEngagementMessageUpdate: Starting to update deferred message identifiers: %@", (uint8_t *)&v10, 0x16u);
    }

    objc_msgSend(*(id *)(a1 + 32), "_updateEngagementMessagesToDisplay:", v3);
  }
}

void sub_4C940(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_4C96C(id *a1, void *a2)
{
  id v3;
  _QWORD v4[4];
  id v5;
  id v6;
  id v7;
  id v8;

  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_4CA38;
  v4[3] = &unk_2E5E28;
  v5 = a2;
  v3 = v5;
  objc_copyWeak(&v8, a1 + 6);
  v6 = a1[4];
  v7 = a1[5];
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v4);

  objc_destroyWeak(&v8);
}

void sub_4CA38(id *a1)
{
  uint64_t v2;
  NSObject *v3;
  id v4;
  id WeakRetained;
  void *v6;
  uint64_t v7;
  void *v8;
  char *v9;
  void *v10;
  uint64_t v11;
  void *v12;
  id v13;
  id v14;
  void *v15;
  id v16;
  void *v17;
  id v18;
  id v19;
  id v20;
  uint64_t v21;
  void *i;
  id v23;
  id v24;
  id v25;
  id v26;
  __int128 v27;
  id v28;
  uint64_t v29;
  void *j;
  void *v31;
  void *v32;
  void *v33;
  unsigned __int8 v34;
  id v35;
  void *v36;
  id v37;
  uint64_t v38;
  NSObject *v39;
  __int128 v40;
  uint64_t v41;
  id *v42;
  NSSet *v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  _BYTE v52[128];
  uint8_t v53[128];
  uint8_t buf[4];
  void *v55;

  v2 = BSUIFeedViewControllerLog(a1);
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
  {
    v4 = a1[4];
    *(_DWORD *)buf = 138412290;
    v55 = v4;
    _os_log_impl(&dword_0, v3, OS_LOG_TYPE_INFO, "_updateEngagementMessagesToDisplay: results: %@", buf, 0xCu);
  }

  WeakRetained = objc_loadWeakRetained(a1 + 7);
  if (!objc_msgSend(WeakRetained, "isInCard")
    || (v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "cardStackViewController")),
        v7 = objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "messagesAlreadyDisplayed")),
        v6,
        (v43 = (NSSet *)v7) == 0))
  {
    v43 = objc_opt_new(NSSet);
  }
  v8 = (void *)objc_claimAutoreleasedReturnValue(+[JSAProcessEnvironment currentEnvironment](JSAProcessEnvironment, "currentEnvironment"));
  v9 = (char *)objc_msgSend(v8, "variant");

  if (v9 == (_BYTE *)&dword_0 + 1)
  {
    v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[4], "allKeys"));
    v11 = objc_claimAutoreleasedReturnValue(+[NSSet setWithArray:](NSSet, "setWithArray:", v10));

    v43 = (NSSet *)v11;
  }
  v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[5], "contentIdentifiers"));
  v13 = objc_msgSend(v12, "copy");

  v42 = a1;
  if (objc_msgSend(a1[6], "count"))
  {
    v14 = objc_msgSend(v13, "mutableCopy");
    v15 = v14;
    if (v14)
      v16 = v14;
    else
      v16 = (id)objc_claimAutoreleasedReturnValue(+[NSMutableSet set](NSMutableSet, "set"));
    v17 = v16;

    v50 = 0u;
    v51 = 0u;
    v48 = 0u;
    v49 = 0u;
    v18 = a1[6];
    v19 = objc_msgSend(v18, "countByEnumeratingWithState:objects:count:", &v48, v53, 16);
    if (v19)
    {
      v20 = v19;
      v21 = *(_QWORD *)v49;
      do
      {
        for (i = 0; i != v20; i = (char *)i + 1)
        {
          if (*(_QWORD *)v49 != v21)
            objc_enumerationMutation(v18);
          v23 = objc_msgSend(objc_alloc((Class)TUIHostingIdentifier), "initWithType:identifier:", CFSTR("message"), *(_QWORD *)(*((_QWORD *)&v48 + 1) + 8 * (_QWORD)i));
          objc_msgSend(v17, "addObject:", v23);

        }
        v20 = objc_msgSend(v18, "countByEnumeratingWithState:objects:count:", &v48, v53, 16);
      }
      while (v20);
    }

    v24 = objc_msgSend(v17, "copy");
    v13 = v24;
  }
  v46 = 0u;
  v47 = 0u;
  v44 = 0u;
  v45 = 0u;
  v25 = v13;
  v26 = objc_msgSend(v25, "countByEnumeratingWithState:objects:count:", &v44, v52, 16);
  if (v26)
  {
    v28 = v26;
    v29 = *(_QWORD *)v45;
    *(_QWORD *)&v27 = 138412290;
    v40 = v27;
    v41 = *(_QWORD *)v45;
    do
    {
      for (j = 0; j != v28; j = (char *)j + 1)
      {
        if (*(_QWORD *)v45 != v29)
          objc_enumerationMutation(v25);
        v31 = *(void **)(*((_QWORD *)&v44 + 1) + 8 * (_QWORD)j);
        v32 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v31, "type", v40));
        if (objc_msgSend(v32, "isEqualToString:", CFSTR("message")))
        {
          v33 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v31, "identifier"));
          v34 = -[NSSet containsObject:](v43, "containsObject:", v33);

          if ((v34 & 1) != 0)
            goto LABEL_35;
          v35 = v42[4];
          v36 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v31, "identifier"));
          v32 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v35, "objectForKeyedSubscript:", v36));

          if (v32)
          {
            v37 = objc_msgSend(v42[5], "hasProviderForIdentifier:", v31);
            if ((v37 & 1) == 0)
            {
              v38 = BSUIFeedViewControllerLog(v37);
              v39 = objc_claimAutoreleasedReturnValue(v38);
              if (os_log_type_enabled(v39, OS_LOG_TYPE_INFO))
              {
                *(_DWORD *)buf = v40;
                v55 = v31;
                _os_log_impl(&dword_0, v39, OS_LOG_TYPE_INFO, "_updateEngagementMessagesToDisplay: adding provider for: %@", buf, 0xCu);
              }

              objc_msgSend(WeakRetained, "_handleEngagementMessageRequest:forIdentifier:", v32, v31);
            }
          }
          v29 = v41;
        }

LABEL_35:
        objc_msgSend(WeakRetained, "addEngagementObserver:", v31);
      }
      v28 = objc_msgSend(v25, "countByEnumeratingWithState:objects:count:", &v44, v52, 16);
    }
    while (v28);
  }

}

void sub_4D02C(uint64_t a1, void *a2)
{
  uint64_t v2;
  void *v3;
  id v4;
  id v5;

  v2 = *(_QWORD *)(a1 + 32);
  v3 = *(void **)(a1 + 40);
  v4 = a2;
  v5 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "identifier"));
  objc_msgSend(v4, "handleEngagementRequest:forIdentifier:", v2, v5);

}

void sub_4D378(uint64_t a1)
{
  __int128 v2;
  _QWORD v3[4];
  id v4;
  __int128 v5;
  __int128 v6;

  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_4D410;
  v3[3] = &unk_2E5EA0;
  v4 = *(id *)(a1 + 32);
  v2 = *(_OWORD *)(a1 + 56);
  v5 = *(_OWORD *)(a1 + 40);
  v6 = v2;
  +[UIView animateWithDuration:delay:options:animations:completion:](UIView, "animateWithDuration:delay:options:animations:completion:", 0, v3, 0, 0.3, 0.0);

}

id sub_4D410(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "setFrame:", *(double *)(a1 + 40), *(double *)(a1 + 48), *(double *)(a1 + 56), *(double *)(a1 + 64));
}

void sub_4D420(uint64_t a1)
{
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, *(dispatch_block_t *)(a1 + 32));
}

id sub_4D5E4(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "setFrame:", *(double *)(a1 + 40), *(double *)(a1 + 48), *(double *)(a1 + 56), *(double *)(a1 + 64));
}

id sub_4D5F4(id *a1)
{
  objc_msgSend(a1[4], "removeFromSuperview");
  objc_msgSend(a1[5], "removeFromParentViewController");
  return objc_msgSend(a1[6], "setMessageViewControllerProvider:", 0);
}

void sub_4D79C(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 88));
  _Unwind_Resume(a1);
}

void sub_4D7B8(uint64_t a1)
{
  id v2;
  void *v3;
  void *v4;
  unsigned int v5;
  void *v6;
  void *v7;
  void *v8;
  unsigned int v9;
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  if (!objc_msgSend(*(id *)(a1 + 32), "isEqualToString:", CFSTR("store_page_bottom_banner")))
  {
    v2 = objc_msgSend(objc_alloc((Class)TUIHostingIdentifier), "initWithType:identifier:", CFSTR("message"), *(_QWORD *)(a1 + 32));
    if (*(_QWORD *)(a1 + 40))
      goto LABEL_5;
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "hostingController"));
    v5 = objc_msgSend(v4, "hasProviderForIdentifier:", v2);

    if (v5)
    {
      v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "hostingController"));
      objc_msgSend(v6, "removeProviderForIdentifier:", v2);

    }
    else if (*(_QWORD *)(a1 + 40))
    {
LABEL_5:
      v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "hostingController"));
      if (objc_msgSend(v3, "hasProviderForIdentifier:", v2))
      {

      }
      else
      {
        v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "hostingController"));
        v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "contentIdentifiers"));
        v9 = objc_msgSend(v8, "containsObject:", v2);

        if (v9)
          objc_msgSend(WeakRetained, "_handleEngagementMessageRequest:forIdentifier:", *(_QWORD *)(a1 + 40), v2);
      }
    }

    goto LABEL_14;
  }
  if (*(_QWORD *)(a1 + 40))
    objc_msgSend(WeakRetained, "_displayBottomBannerForRequest:");
  else
    objc_msgSend(WeakRetained, "_dismissBanner:", 1);
LABEL_14:

}

uint64_t sub_4D91C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

void sub_4DABC(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 56));
  _Unwind_Resume(a1);
}

void sub_4DAD8(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(WeakRetained, "_dismissBanner:", 1);

}

uint64_t sub_4DB08(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

BSUIContextActionDataAssetModel *sub_4E3C0(uint64_t a1, void *a2)
{
  id v2;
  void *v3;
  uint64_t v4;
  char isKindOfClass;
  BSUIContextActionDataAssetModel *v6;
  void *v7;
  BSUIContextActionDataAssetModel *v8;
  void *v9;
  uint64_t v10;
  char v11;
  BSUIContextActionDataAssetModel *v12;
  void *v13;
  BSUIContextActionDataAssetModel *v14;
  void *v15;

  v2 = a2;
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "objectForKeyedSubscript:", CFSTR("storeAsset")));
  v4 = objc_opt_class(NSDictionary);
  isKindOfClass = objc_opt_isKindOfClass(v3, v4);

  if ((isKindOfClass & 1) == 0
    || (v6 = [BSUIContextActionDataAssetModel alloc],
        v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "objectForKeyedSubscript:", CFSTR("storeAsset"))),
        v8 = -[BSUIContextActionDataAssetModel initWithMResourceRawData:](v6, "initWithMResourceRawData:", v7),
        v7,
        !v8))
  {
    v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "objectForKeyedSubscript:", CFSTR("adamId")));
    v10 = objc_opt_class(NSString);
    v11 = objc_opt_isKindOfClass(v9, v10);

    if ((v11 & 1) == 0
      || (v12 = [BSUIContextActionDataAssetModel alloc],
          v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "objectForKeyedSubscript:", CFSTR("adamId"))),
          v8 = -[BSUIContextActionDataAssetModel initWithAdamID:](v12, "initWithAdamID:", v13),
          v13,
          !v8))
    {
      v8 = (BSUIContextActionDataAssetModel *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "objectForKeyedSubscript:", CFSTR("libraryAsset")));

      if (v8)
      {
        v14 = [BSUIContextActionDataAssetModel alloc];
        v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "objectForKeyedSubscript:", CFSTR("libraryAsset")));
        v8 = -[BSUIContextActionDataAssetModel initWithLibraryAsset:productProfile:](v14, "initWithLibraryAsset:productProfile:", v15, 0);

      }
    }
  }

  return v8;
}

id sub_4E5E0(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "setTracker:", *(_QWORD *)(a1 + 32));
}

void sub_4F328(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  v2 = v1;

  _Unwind_Resume(a1);
}

void sub_4FFE4(uint64_t a1, void *a2, void *a3)
{
  void *v5;
  unsigned __int8 v6;
  id v7;
  void (**v8)(_QWORD, _QWORD, _QWORD);
  void *v9;
  id v10;

  v10 = a2;
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a3, "objectForKeyedSubscript:", CFSTR("error")));
  v6 = objc_msgSend(v5, "BOOLValue");

  v7 = objc_retainBlock(*(id *)(a1 + 32));
  v8 = (void (**)(_QWORD, _QWORD, _QWORD))v7;
  if ((v6 & 1) != 0)
  {
    if (v7)
    {
      v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSError errorWithDomain:code:userInfo:](NSError, "errorWithDomain:code:userInfo:", CFSTR("BSUIReportIssueNetworkManager"), 500, v10));
      ((void (**)(_QWORD, _QWORD, void *))v8)[2](v8, 0, v9);

    }
  }
  else if (v7)
  {
    (*((void (**)(id, uint64_t, _QWORD))v7 + 2))(v7, 1, 0);
  }

}

void sub_5019C(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  unsigned int v5;
  id v6;
  void *v7;
  uint64_t v8;
  id v9;
  void *v10;
  _QWORD v11[2];
  _QWORD v12[2];
  _QWORD v13[2];

  v3 = a2;
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("ReportIssueNetworkManager")));
  v5 = objc_msgSend(v4, "isObject");

  if (v5)
  {
    v6 = (id)objc_claimAutoreleasedReturnValue(+[JSABridge sharedInstance](JSABridge, "sharedInstance"));
    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("ReportIssueNetworkManager")));
    v8 = *(_QWORD *)(a1 + 32);
    v13[0] = *(_QWORD *)(a1 + 40);
    v9 = objc_retainBlock(*(id *)(a1 + 48));
    v13[1] = v9;
    v10 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", v13, 2));
    objc_msgSend(v6, "enqueueValueInvocation:method:arguments:file:line:", v7, v8, v10, CFSTR("BSUIReportIssueNetworkManager.m"), 43);

LABEL_5:
    goto LABEL_6;
  }
  v6 = objc_retainBlock(*(id *)(a1 + 48));
  if (v6)
  {
    v11[0] = CFSTR("error");
    v11[1] = CFSTR("errorType");
    v12[0] = &__kCFBooleanTrue;
    v12[1] = CFSTR("JSNotLoaded");
    v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", v12, v11, 2));
    (*((void (**)(id, void *, void *))v6 + 2))(v6, &__NSDictionary0__struct, v7);
    goto LABEL_5;
  }
LABEL_6:

}

id sub_505AC(uint64_t a1)
{
  void *v2;
  void *v3;
  id v4;
  void *v5;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "standardNotes"));
  v3 = v2;
  if (v2)
    v4 = v2;
  else
    v4 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "standardDescription"));
  v5 = v4;

  return v5;
}

id sub_50804(uint64_t a1)
{
  void *v2;
  void *v3;
  id v4;
  void *v5;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "standardNotes"));
  v3 = v2;
  if (v2)
    v4 = v2;
  else
    v4 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "standardDescription"));
  v5 = v4;

  return v5;
}

void sub_5147C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_51494(uint64_t a1, void *a2)
{
  void *v3;
  unsigned int v4;
  id v5;

  v5 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "objectForKeyedSubscript:", CFSTR("App")));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "invokeMethod:withArguments:", CFSTR("bookPageOrderIsRTLByDefault"), 0));
  v4 = objc_msgSend(v3, "isBoolean");
  if (v4)
    LOBYTE(v4) = objc_msgSend(v3, "toBool");
  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = v4;

}

void sub_51FA8(uint64_t a1)
{
  id WeakRetained;
  id v3;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    v3 = WeakRetained;
    objc_msgSend(WeakRetained, "removeRenderOverride:", *(_QWORD *)(a1 + 32));
    WeakRetained = v3;
  }

}

void sub_52110(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  id v5;
  void *v6;
  void (**v7)(_QWORD, _QWORD);
  id v8;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "cardStackTransitioningCoverSourceImageChangeObserverBlock"));

  if (v2)
  {
    v8 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "imageContentWithOptions:", 1));
    v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "image"));

    if (v3)
    {
      v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "image"));
      v5 = objc_msgSend(v4, "newImage");
      objc_msgSend(v8, "insets");
      v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "imageWithAlignmentRectInsets:"));

      v7 = (void (**)(_QWORD, _QWORD))objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "cardStackTransitioningCoverSourceImageChangeObserverBlock"));
      ((void (**)(_QWORD, void *))v7)[2](v7, v6);

    }
  }
}

uint64_t sub_52320()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  sub_5DD20(v0, qword_31E528);
  sub_5240C(v0, (uint64_t)qword_31E528);
  return Logger.init(subsystem:category:)(0xD000000000000010, 0x800000000026DEA0, 0xD000000000000012, 0x800000000026DEC0);
}

uint64_t static Logger.socialLayer.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_31E520 != -1)
    swift_once(&qword_31E520, sub_52320);
  v2 = type metadata accessor for Logger(0);
  v3 = sub_5240C(v2, (uint64_t)qword_31E528);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t sub_5240C(uint64_t a1, uint64_t a2)
{
  if ((*(_BYTE *)(*(_QWORD *)(a1 - 8) + 82) & 2) != 0)
    return *(_QWORD *)a2;
  return a2;
}

uint64_t sub_52424@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;
  _BYTE v5[24];

  v3 = (_QWORD *)(*a1 + OBJC_IVAR____TtC11BookStoreUI27BSUISharedWithYouController_refreshPublisher);
  swift_beginAccess(v3, v5, 0, 0);
  *a2 = *v3;
  return swift_retain();
}

uint64_t sub_52478(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  _BYTE v6[24];

  v2 = *a1;
  v3 = (uint64_t *)(*a2 + OBJC_IVAR____TtC11BookStoreUI27BSUISharedWithYouController_refreshPublisher);
  swift_beginAccess(v3, v6, 1, 0);
  v4 = *v3;
  *v3 = v2;
  swift_retain(v2);
  return swift_release(v4);
}

uint64_t sub_524E0()
{
  uint64_t v0;
  _QWORD *v1;
  _BYTE v3[24];

  v1 = (_QWORD *)(v0 + OBJC_IVAR____TtC11BookStoreUI27BSUISharedWithYouController_refreshPublisher);
  swift_beginAccess(v0 + OBJC_IVAR____TtC11BookStoreUI27BSUISharedWithYouController_refreshPublisher, v3, 0, 0);
  return swift_retain(*v1);
}

uint64_t sub_52528(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  _BYTE v6[24];

  v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC11BookStoreUI27BSUISharedWithYouController_refreshPublisher);
  swift_beginAccess(v3, v6, 1, 0);
  v4 = *v3;
  *v3 = a1;
  return swift_release(v4);
}

void *sub_52578(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC11BookStoreUI27BSUISharedWithYouController_refreshPublisher, a1, 33, 0);
  return &j__swift_endAccess;
}

id sub_525C0(void *a1, void *a2)
{
  uint64_t v2;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  void **i;
  void *v9;
  BOOL v10;
  id v11;
  id v12;
  _BYTE v14[24];

  v5 = (uint64_t *)(v2 + OBJC_IVAR____TtC11BookStoreUI27BSUISharedWithYouController_highlights);
  swift_beginAccess(v5, v14, 0, 0);
  v6 = *v5;
  if (!*v5)
    return 0;
  v7 = *(_QWORD *)(v6 + 16);
  if (!v7)
    return 0;
  for (i = (void **)(v6 + 48); ; i += 3)
  {
    v9 = *i;
    v10 = *(i - 2) == a1 && *(i - 1) == a2;
    if (v10 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      break;
    if (!--v7)
      return 0;
  }
  v12 = v9;
  v11 = objc_msgSend(objc_allocWithZone((Class)SWAttributionView), "init");
  objc_msgSend(v11, "setHighlight:", v12);

  return v11;
}

uint64_t sub_526A8@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;
  _BYTE v5[24];

  v3 = (_QWORD *)(*a1 + OBJC_IVAR____TtC11BookStoreUI27BSUISharedWithYouController_highlights);
  swift_beginAccess(v3, v5, 0, 0);
  *a2 = *v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_526FC(_QWORD *a1)
{
  uint64_t v1;

  v1 = swift_bridgeObjectRetain(*a1);
  return sub_5276C(v1);
}

uint64_t sub_52724()
{
  uint64_t v0;
  _QWORD *v1;
  _BYTE v3[24];

  v1 = (_QWORD *)(v0 + OBJC_IVAR____TtC11BookStoreUI27BSUISharedWithYouController_highlights);
  swift_beginAccess(v0 + OBJC_IVAR____TtC11BookStoreUI27BSUISharedWithYouController_highlights, v3, 0, 0);
  return swift_bridgeObjectRetain(*v1);
}

uint64_t sub_5276C(uint64_t a1)
{
  char *v1;
  char *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *Strong;
  void *v15;
  _QWORD v16[5];
  char v17[24];
  char v18[24];

  v3 = &v1[OBJC_IVAR____TtC11BookStoreUI27BSUISharedWithYouController_highlights];
  swift_beginAccess(&v1[OBJC_IVAR____TtC11BookStoreUI27BSUISharedWithYouController_highlights], v18, 1, 0);
  v4 = *(_QWORD *)v3;
  *(_QWORD *)v3 = a1;
  swift_bridgeObjectRelease(v4);
  v5 = &v1[OBJC_IVAR____TtC11BookStoreUI27BSUISharedWithYouController_refreshPublisher];
  swift_beginAccess(&v1[OBJC_IVAR____TtC11BookStoreUI27BSUISharedWithYouController_refreshPublisher], v17, 0, 0);
  v6 = *(_QWORD *)v5;
  v16[3] = type metadata accessor for BSUISharedWithYouController();
  v16[4] = sub_5C9A0(&qword_31E7A0, v7, (uint64_t (*)(uint64_t))type metadata accessor for BSUISharedWithYouController, (uint64_t)&protocol conformance descriptor for BSUISharedWithYouController);
  v16[0] = v1;
  swift_retain(v6);
  v8 = v1;
  PassthroughSubject.send(_:)(v16);
  swift_release(v6);
  _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(v16);
  v9 = &v8[OBJC_IVAR____TtC11BookStoreUI27BSUISharedWithYouController_observers];
  result = swift_beginAccess(&v8[OBJC_IVAR____TtC11BookStoreUI27BSUISharedWithYouController_observers], v16, 0, 0);
  v11 = *(_QWORD *)v9;
  v12 = *(_QWORD *)(v11 + 16);
  if (v12)
  {
    v13 = v11 + 32;
    swift_bridgeObjectRetain(v11);
    do
    {
      Strong = (void *)swift_unknownObjectWeakLoadStrong(v13);
      if (Strong)
      {
        v15 = Strong;
        objc_msgSend(Strong, "update:", v8);
        swift_unknownObjectRelease(v15);
      }
      v13 += 8;
      --v12;
    }
    while (v12);
    return swift_bridgeObjectRelease(v11);
  }
  return result;
}

void (*sub_528C4(_QWORD *a1))(_QWORD *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = malloc(0x48uLL);
  *a1 = v3;
  v3[8] = v1;
  swift_beginAccess(v1 + OBJC_IVAR____TtC11BookStoreUI27BSUISharedWithYouController_highlights, v3, 33, 0);
  return sub_5291C;
}

void sub_5291C(_QWORD *a1, char a2)
{
  _QWORD *v3;
  char *v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *Strong;
  void *v14;

  v3 = (_QWORD *)*a1;
  swift_endAccess(*a1);
  if ((a2 & 1) == 0)
  {
    v4 = (char *)v3[8];
    v5 = &v4[OBJC_IVAR____TtC11BookStoreUI27BSUISharedWithYouController_refreshPublisher];
    swift_beginAccess(&v4[OBJC_IVAR____TtC11BookStoreUI27BSUISharedWithYouController_refreshPublisher], v3 + 5, 0, 0);
    v6 = *(_QWORD *)v5;
    v3[3] = type metadata accessor for BSUISharedWithYouController();
    v3[4] = sub_5C9A0(&qword_31E7A0, v7, (uint64_t (*)(uint64_t))type metadata accessor for BSUISharedWithYouController, (uint64_t)&protocol conformance descriptor for BSUISharedWithYouController);
    *v3 = v4;
    swift_retain(v6);
    v8 = v4;
    PassthroughSubject.send(_:)(v3);
    swift_release(v6);
    _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(v3);
    v9 = &v8[OBJC_IVAR____TtC11BookStoreUI27BSUISharedWithYouController_observers];
    swift_beginAccess(&v8[OBJC_IVAR____TtC11BookStoreUI27BSUISharedWithYouController_observers], v3, 0, 0);
    v10 = *(_QWORD *)v9;
    v11 = *(_QWORD *)(v10 + 16);
    if (v11)
    {
      v12 = v10 + 32;
      swift_bridgeObjectRetain(v10);
      do
      {
        Strong = (void *)swift_unknownObjectWeakLoadStrong(v12);
        if (Strong)
        {
          v14 = Strong;
          objc_msgSend(Strong, "update:", v3[8]);
          swift_unknownObjectRelease(v14);
        }
        v12 += 8;
        --v11;
      }
      while (v11);
      swift_bridgeObjectRelease(v10);
    }
  }
  free(v3);
}

unint64_t sub_52A54(uint64_t a1)
{
  return sub_52E1C(a1, &qword_31EEB8, &qword_31EFF8, (uint64_t (*)(uint64_t *, unint64_t))sub_5D000);
}

unint64_t sub_52A70(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t result;
  char v12;
  uint64_t *v13;
  _QWORD *v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_5C154(&qword_31ED70);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }
  swift_retain(v3);
  v6 = (uint64_t *)(a1 + 56);
  while (1)
  {
    v7 = *(v6 - 3);
    v8 = *(v6 - 2);
    v10 = *(v6 - 1);
    v9 = *v6;
    swift_bridgeObjectRetain(v8);
    swift_bridgeObjectRetain(v9);
    result = sub_582B4(v7, v8);
    if ((v12 & 1) != 0)
      break;
    *(_QWORD *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v13 = (uint64_t *)(v4[6] + 16 * result);
    *v13 = v7;
    v13[1] = v8;
    v14 = (_QWORD *)(v4[7] + 16 * result);
    *v14 = v10;
    v14[1] = v9;
    v15 = v4[2];
    v16 = __OFADD__(v15, 1);
    v17 = v15 + 1;
    if (v16)
      goto LABEL_11;
    v6 += 4;
    v4[2] = v17;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_52B90(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t result;
  char v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v1 = a1;
  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_5C154(&qword_31EE58);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(v1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(v1);
    return (unint64_t)v4;
  }
  v22 = v3 + 64;
  swift_retain(v3);
  v21 = v1;
  v6 = (uint64_t *)(v1 + 40);
  while (1)
  {
    v7 = *(v6 - 1);
    v8 = *v6;
    v10 = v6[1];
    v9 = v6[2];
    v11 = *((_BYTE *)v6 + 24);
    v13 = v6[4];
    v12 = v6[5];
    swift_bridgeObjectRetain(*v6);
    swift_bridgeObjectRetain(v9);
    swift_bridgeObjectRetain(v12);
    result = sub_582B4(v7, v8);
    if ((v15 & 1) != 0)
      break;
    *(_QWORD *)(v22 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v16 = (uint64_t *)(v4[6] + 16 * result);
    *v16 = v7;
    v16[1] = v8;
    v17 = v4[7] + 40 * result;
    *(_QWORD *)v17 = v10;
    *(_QWORD *)(v17 + 8) = v9;
    *(_BYTE *)(v17 + 16) = v11;
    *(_QWORD *)(v17 + 24) = v13;
    *(_QWORD *)(v17 + 32) = v12;
    v18 = v4[2];
    v19 = __OFADD__(v18, 1);
    v20 = v18 + 1;
    if (v19)
      goto LABEL_11;
    v4[2] = v20;
    v6 += 7;
    if (!--v5)
    {
      swift_release(v4);
      v1 = v21;
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_52CE0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t result;
  char v12;
  uint64_t *v13;
  _QWORD *v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_5C154(&qword_31EE50);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }
  swift_retain(v3);
  v6 = (_QWORD *)(a1 + 56);
  while (1)
  {
    v7 = *(v6 - 3);
    v8 = *(v6 - 2);
    v10 = *(v6 - 1);
    v9 = *v6;
    swift_bridgeObjectRetain(*v6);
    swift_bridgeObjectRetain(v8);
    result = sub_582B4(v7, v8);
    if ((v12 & 1) != 0)
      break;
    *(_QWORD *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v13 = (uint64_t *)(v4[6] + 16 * result);
    *v13 = v7;
    v13[1] = v8;
    v14 = (_QWORD *)(v4[7] + 16 * result);
    *v14 = v10;
    v14[1] = v9;
    v15 = v4[2];
    v16 = __OFADD__(v15, 1);
    v17 = v15 + 1;
    if (v16)
      goto LABEL_11;
    v6 += 4;
    v4[2] = v17;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_52E00(uint64_t a1)
{
  return sub_52E1C(a1, &qword_31ED78, &qword_31EEF0, (uint64_t (*)(uint64_t *, unint64_t))sub_5D000);
}

unint64_t sub_52E1C(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t (*a4)(uint64_t *, unint64_t))
{
  uint64_t v5;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t result;
  char v16;
  uint64_t *v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
    v9 = &_swiftEmptyDictionarySingleton;
LABEL_9:
    v21 = a1;
LABEL_10:
    swift_bridgeObjectRelease(v21);
    return (unint64_t)v9;
  }
  sub_5C154(a2);
  v8 = static _DictionaryStorage.allocate(capacity:)(v5);
  v9 = (_QWORD *)v8;
  v10 = *(_QWORD *)(a1 + 16);
  if (!v10)
    goto LABEL_9;
  v11 = v8 + 64;
  v12 = a1 + 32;
  swift_retain(v8);
  while (1)
  {
    sub_5E1A4(v12, (uint64_t)&v22, a3);
    v13 = v22;
    v14 = v23;
    result = sub_582B4(v22, v23);
    if ((v16 & 1) != 0)
      break;
    *(_QWORD *)(v11 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v17 = (uint64_t *)(v9[6] + 16 * result);
    *v17 = v13;
    v17[1] = v14;
    result = a4(&v24, v9[7] + 32 * result);
    v18 = v9[2];
    v19 = __OFADD__(v18, 1);
    v20 = v18 + 1;
    if (v19)
      goto LABEL_12;
    v9[2] = v20;
    v12 += 48;
    if (!--v10)
    {
      swift_release(v9);
      v21 = a1;
      goto LABEL_10;
    }
  }
  __break(1u);
LABEL_12:
  __break(1u);
  return result;
}

unint64_t sub_52F54(uint64_t a1)
{
  return sub_52F8C(a1, &qword_31F1B8, &qword_31F1B0, type metadata accessor for GenreHighlight);
}

unint64_t sub_52F70(uint64_t a1)
{
  return sub_52F8C(a1, &qword_31F1A8, &qword_31F1A0, type metadata accessor for TopAuthorHighlightData);
}

unint64_t sub_52F8C(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t result;
  char v22;
  unint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;

  v34 = a2;
  v7 = sub_5C154(a2);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (uint64_t *)((char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = *(_QWORD *)(a1 + 16);
  if (!v11)
  {
    v13 = &_swiftEmptyDictionarySingleton;
LABEL_9:
    v30 = a1;
LABEL_10:
    swift_bridgeObjectRelease(v30);
    return (unint64_t)v13;
  }
  sub_5C154(a3);
  v12 = static _DictionaryStorage.allocate(capacity:)(v11);
  v13 = (_QWORD *)v12;
  v14 = *(_QWORD *)(a1 + 16);
  if (!v14)
    goto LABEL_9;
  v15 = (uint64_t)v10 + *(int *)(v7 + 48);
  v32 = a1;
  v33 = v15;
  v16 = v12 + 64;
  v17 = a1 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
  v18 = *(_QWORD *)(v8 + 72);
  swift_retain(v12);
  while (1)
  {
    sub_5E1A4(v17, (uint64_t)v10, v34);
    v19 = *v10;
    v20 = v10[1];
    result = sub_582B4(*v10, v20);
    if ((v22 & 1) != 0)
      break;
    v23 = result;
    *(_QWORD *)(v16 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v24 = (uint64_t *)(v13[6] + 16 * result);
    *v24 = v19;
    v24[1] = v20;
    v25 = v13[7];
    v26 = a4(0);
    result = sub_5E160(v33, v25 + *(_QWORD *)(*(_QWORD *)(v26 - 8) + 72) * v23, a4);
    v27 = v13[2];
    v28 = __OFADD__(v27, 1);
    v29 = v27 + 1;
    if (v28)
      goto LABEL_12;
    v13[2] = v29;
    v17 += v18;
    if (!--v14)
    {
      swift_release(v13);
      v30 = v32;
      goto LABEL_10;
    }
  }
  __break(1u);
LABEL_12:
  __break(1u);
  return result;
}

unint64_t sub_53124(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  id v8;
  unint64_t result;
  char v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_5C154(&qword_31EF80);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }
  swift_retain(v3);
  v6 = (uint64_t *)(a1 + 40);
  while (1)
  {
    v7 = *v6;
    v8 = (id)*(v6 - 1);
    result = sub_5847C((uint64_t)v8);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v11 = 8 * result;
    *(_QWORD *)(v4[6] + v11) = v8;
    *(_QWORD *)(v4[7] + v11) = v7;
    v12 = v4[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v4[2] = v14;
    v6 += 2;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_5322C(uint64_t a1)
{
  return sub_537E4(a1, &qword_31EF70, &qword_31EF78);
}

unint64_t sub_53240(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  id v8;
  unint64_t result;
  char v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_5C154(&qword_31EEF8);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }
  swift_retain(v3);
  v6 = (uint64_t *)(a1 + 40);
  while (1)
  {
    v7 = *v6;
    v8 = (id)*(v6 - 1);
    swift_bridgeObjectRetain(v7);
    result = sub_5847C((uint64_t)v8);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v11 = 8 * result;
    *(_QWORD *)(v4[6] + v11) = v8;
    *(_QWORD *)(v4[7] + v11) = v7;
    v12 = v4[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v4[2] = v14;
    v6 += 2;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_53348(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t result;
  char v11;
  uint64_t *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_5C154(&qword_31EF28);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }
  swift_retain(v3);
  v6 = (uint64_t *)(a1 + 48);
  while (1)
  {
    v7 = *(v6 - 2);
    v8 = *(v6 - 1);
    v9 = *v6;
    swift_bridgeObjectRetain(v8);
    result = sub_582B4(v7, v8);
    if ((v11 & 1) != 0)
      break;
    *(_QWORD *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v12 = (uint64_t *)(v4[6] + 16 * result);
    *v12 = v7;
    v12[1] = v8;
    *(_QWORD *)(v4[7] + 8 * result) = v9;
    v13 = v4[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v6 += 3;
    v4[2] = v15;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_53458(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  _OWORD v16[2];
  uint64_t v17;
  __int128 v18;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_5C154(&qword_31EED0);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }
  v6 = v3 + 64;
  v7 = a1 + 32;
  swift_retain(v3);
  while (1)
  {
    sub_5E1A4(v7, (uint64_t)v16, &qword_31EED8);
    result = sub_58318((uint64_t)v16);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)(v6 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v10 = v4[6] + 40 * result;
    v11 = v16[0];
    v12 = v16[1];
    *(_QWORD *)(v10 + 32) = v17;
    *(_OWORD *)v10 = v11;
    *(_OWORD *)(v10 + 16) = v12;
    result = (unint64_t)sub_5D000(&v18, (_OWORD *)(v4[7] + 32 * result));
    v13 = v4[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v4[2] = v15;
    v7 += 72;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_53598(uint64_t a1)
{
  return sub_535A4(a1, &qword_31EEA0);
}

unint64_t sub_535A4(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  void **v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  unint64_t result;
  char v13;
  uint64_t *v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;

  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
    v5 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_5C154(a2);
  v4 = static _DictionaryStorage.allocate(capacity:)(v3);
  v5 = (_QWORD *)v4;
  v6 = *(_QWORD *)(a1 + 16);
  if (!v6)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v5;
  }
  swift_retain(v4);
  v7 = (void **)(a1 + 48);
  while (1)
  {
    v8 = (uint64_t)*(v7 - 2);
    v9 = (uint64_t)*(v7 - 1);
    v10 = *v7;
    swift_bridgeObjectRetain(v9);
    v11 = v10;
    result = sub_582B4(v8, v9);
    if ((v13 & 1) != 0)
      break;
    *(_QWORD *)((char *)v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v14 = (uint64_t *)(v5[6] + 16 * result);
    *v14 = v8;
    v14[1] = v9;
    *(_QWORD *)(v5[7] + 8 * result) = v11;
    v15 = v5[2];
    v16 = __OFADD__(v15, 1);
    v17 = v15 + 1;
    if (v16)
      goto LABEL_11;
    v5[2] = v17;
    v7 += 3;
    if (!--v6)
    {
      swift_release(v5);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_536B8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t result;
  char v11;
  uint64_t *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_5C154(&qword_31F150);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }
  swift_retain(v3);
  v6 = (uint64_t *)(a1 + 48);
  while (1)
  {
    v7 = *(v6 - 2);
    v8 = *(v6 - 1);
    v9 = *v6;
    swift_bridgeObjectRetain(v8);
    swift_bridgeObjectRetain(v9);
    result = sub_582B4(v7, v8);
    if ((v11 & 1) != 0)
      break;
    *(_QWORD *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v12 = (uint64_t *)(v4[6] + 16 * result);
    *v12 = v7;
    v12[1] = v8;
    *(_QWORD *)(v4[7] + 8 * result) = v9;
    v13 = v4[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v4[2] = v15;
    v6 += 3;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_537D0(uint64_t a1)
{
  return sub_537E4(a1, &qword_31EE90, &qword_31EE98);
}

unint64_t sub_537E4(uint64_t a1, uint64_t *a2, uint64_t *a3)
{
  uint64_t v4;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t result;
  char v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;

  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
    v7 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_5C154(a2);
  v6 = static _DictionaryStorage.allocate(capacity:)(v4);
  v7 = (_QWORD *)v6;
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v7;
  }
  v9 = v6 + 64;
  v10 = a1 + 32;
  swift_retain(v6);
  while (1)
  {
    sub_5E1A4(v10, (uint64_t)&v17, a3);
    v11 = v17;
    result = sub_5847C(v17);
    if ((v13 & 1) != 0)
      break;
    *(_QWORD *)(v9 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(_QWORD *)(v7[6] + 8 * result) = v11;
    result = (unint64_t)sub_5D000(&v18, (_OWORD *)(v7[7] + 32 * result));
    v14 = v7[2];
    v15 = __OFADD__(v14, 1);
    v16 = v14 + 1;
    if (v15)
      goto LABEL_11;
    v7[2] = v16;
    v10 += 40;
    if (!--v8)
    {
      swift_release(v7);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_53908(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = &_swiftEmptyDictionarySingleton;
LABEL_9:
    v18 = a1;
LABEL_10:
    swift_bridgeObjectRelease(v18);
    return (unint64_t)v4;
  }
  sub_5C154(&qword_31ED80);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
    goto LABEL_9;
  v6 = a1 + 32;
  swift_retain(v3);
  while (1)
  {
    sub_5E1A4(v6, (uint64_t)&v19, &qword_31ED88);
    v7 = v19;
    v8 = v20;
    result = sub_582B4(v19, v20);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v11 = (uint64_t *)(v4[6] + 16 * result);
    *v11 = v7;
    v11[1] = v8;
    v12 = v4[7] + 40 * result;
    v13 = v21;
    v14 = v22;
    *(_QWORD *)(v12 + 32) = v23;
    *(_OWORD *)v12 = v13;
    *(_OWORD *)(v12 + 16) = v14;
    v15 = v4[2];
    v16 = __OFADD__(v15, 1);
    v17 = v15 + 1;
    if (v16)
      goto LABEL_12;
    v4[2] = v17;
    v6 += 56;
    if (!--v5)
    {
      swift_release(v4);
      v18 = a1;
      goto LABEL_10;
    }
  }
  __break(1u);
LABEL_12:
  __break(1u);
  return result;
}

id sub_53A50()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for BSUISharedWithYouController()), "init");
  qword_31E548 = (uint64_t)result;
  return result;
}

id static BSUISharedWithYouController.shared.getter()
{
  if (qword_31E540 != -1)
    swift_once(&qword_31E540, sub_53A50);
  return (id)qword_31E548;
}

char *sub_53AFC()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  objc_super v8;

  v1 = OBJC_IVAR____TtC11BookStoreUI27BSUISharedWithYouController_refreshPublisher;
  v2 = sub_5C154(&qword_31EE60);
  swift_allocObject(v2, *(unsigned int *)(v2 + 48), *(unsigned __int16 *)(v2 + 52));
  v3 = v0;
  *(_QWORD *)&v0[v1] = PassthroughSubject.init()();
  v4 = OBJC_IVAR____TtC11BookStoreUI27BSUISharedWithYouController_highlightCenter;
  *(_QWORD *)&v3[v4] = objc_msgSend(objc_allocWithZone((Class)SWHighlightCenter), "init");
  *(_QWORD *)&v3[OBJC_IVAR____TtC11BookStoreUI27BSUISharedWithYouController_highlights] = 0;
  v5 = OBJC_IVAR____TtC11BookStoreUI27BSUISharedWithYouController_attributionViews;
  *(_QWORD *)&v3[v5] = sub_535A4((uint64_t)&_swiftEmptyArrayStorage, &qword_31F020);
  *(_QWORD *)&v3[OBJC_IVAR____TtC11BookStoreUI27BSUISharedWithYouController_observers] = &_swiftEmptyArrayStorage;

  v8.receiver = v3;
  v8.super_class = (Class)type metadata accessor for BSUISharedWithYouController();
  v6 = (char *)objc_msgSendSuper2(&v8, "init");
  objc_msgSend(*(id *)&v6[OBJC_IVAR____TtC11BookStoreUI27BSUISharedWithYouController_highlightCenter], "setDelegate:", v6);
  return v6;
}

void _s11BookStoreUI27BSUISharedWithYouControllerC34highlightCenterHighlightsDidChangeyySo011SWHighlightI0CF_0()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void **v6;
  void *v7;
  void *v8;
  unint64_t *v9;
  unint64_t v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  void *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *Strong;
  void *v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  id v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  id v39;
  uint64_t v40;
  void **v41;
  void *v42;
  void *v43;
  id v44;
  id v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void (*v50)(char *, uint64_t);
  char *v51;
  uint64_t v52;
  id v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  uint64_t v59;
  uint64_t v60;
  id v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t *v66;
  char *v67;
  char **v68;
  void (*v69)(uint64_t *, char);
  char *v70;
  char **v71;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v73;
  unint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  NSObject *v78;
  os_log_type_t v79;
  uint8_t *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  unint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  uint64_t v94;
  uint64_t v95;
  void **v96;
  unint64_t v97;
  unint64_t v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  id v111;
  id v112;
  uint64_t v113;
  id v114;
  char v115[24];
  uint64_t v116[5];
  char v117[8];
  char v118[8];
  char v119[8];

  v109 = type metadata accessor for URL(0);
  v108 = *(_QWORD *)(v109 - 8);
  __chkstk_darwin(v109);
  v107 = (char *)&v88 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  v106 = (char *)&v88 - v3;
  v4 = type metadata accessor for UUID(0);
  v101 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v100 = (char *)&v88 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (void **)&v0[OBJC_IVAR____TtC11BookStoreUI27BSUISharedWithYouController_highlights];
  swift_beginAccess(&v0[OBJC_IVAR____TtC11BookStoreUI27BSUISharedWithYouController_highlights], v119, 1, 0);
  v7 = *v6;
  if (*v6)
    v8 = *v6;
  else
    v8 = &_swiftEmptyArrayStorage;
  v102 = (uint64_t)v8;
  v9 = (unint64_t *)&v0[OBJC_IVAR____TtC11BookStoreUI27BSUISharedWithYouController_attributionViews];
  swift_beginAccess(&v0[OBJC_IVAR____TtC11BookStoreUI27BSUISharedWithYouController_attributionViews], v118, 1, 0);
  v10 = *v9;
  v11 = *(void **)&v0[OBJC_IVAR____TtC11BookStoreUI27BSUISharedWithYouController_highlightCenter];
  swift_bridgeObjectRetain(v7);
  v97 = v10;
  swift_bridgeObjectRetain(v10);
  v12 = objc_msgSend(v11, "highlights");
  v89 = sub_5C194(0, &qword_31E798, SWHighlight_ptr);
  v13 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v12, v89);

  v93 = (unint64_t)v13 >> 62;
  if ((unint64_t)v13 >> 62)
  {
    if (v13 < 0)
      v87 = v13;
    else
      v87 = v13 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v13);
    v14 = _CocoaArrayWrapper.endIndex.getter(v87);
    swift_bridgeObjectRelease(v13);
  }
  else
  {
    v14 = *(_QWORD *)((char *)&dword_10 + (v13 & 0xFFFFFFFFFFFFF8));
  }
  if (v14)
    v15 = &_swiftEmptyArrayStorage;
  else
    v15 = 0;
  v16 = *v6;
  *v6 = v15;
  swift_bridgeObjectRelease(v16);
  v17 = &v0[OBJC_IVAR____TtC11BookStoreUI27BSUISharedWithYouController_refreshPublisher];
  swift_beginAccess(&v0[OBJC_IVAR____TtC11BookStoreUI27BSUISharedWithYouController_refreshPublisher], v117, 0, 0);
  v18 = *(_QWORD *)v17;
  v116[3] = type metadata accessor for BSUISharedWithYouController();
  v116[4] = sub_5C9A0(&qword_31E7A0, v19, (uint64_t (*)(uint64_t))type metadata accessor for BSUISharedWithYouController, (uint64_t)&protocol conformance descriptor for BSUISharedWithYouController);
  v116[0] = (uint64_t)v0;
  swift_retain(v18);
  v20 = v0;
  PassthroughSubject.send(_:)(v116);
  swift_release(v18);
  _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(v116);
  v103 = v20;
  v21 = &v20[OBJC_IVAR____TtC11BookStoreUI27BSUISharedWithYouController_observers];
  swift_beginAccess(&v20[OBJC_IVAR____TtC11BookStoreUI27BSUISharedWithYouController_observers], v115, 0, 0);
  v22 = *(_QWORD *)v21;
  v23 = *(_QWORD *)(v22 + 16);
  if (v23)
  {
    v24 = v22 + 32;
    swift_bridgeObjectRetain(v22);
    do
    {
      Strong = (void *)swift_unknownObjectWeakLoadStrong(v24);
      if (Strong)
      {
        v26 = Strong;
        objc_msgSend(Strong, "update:", v103);
        swift_unknownObjectRelease(v26);
      }
      v24 += 8;
      --v23;
    }
    while (v23);
    swift_bridgeObjectRelease(v22);
  }
  v27 = sub_535A4((uint64_t)&_swiftEmptyArrayStorage, &qword_31F020);
  v28 = *v9;
  *v9 = v27;
  swift_bridgeObjectRelease(v28);
  if (v14)
  {
    v29 = v102;
    v30 = v97;
    if (v14 >= 1)
    {
      v98 = v13 & 0xC000000000000001;
      v92 = v13 + 32;
      v31 = v13 & 0xFFFFFFFFFFFFFF8;
      v91 = v13 & 0xFFFFFFFFFFFFFF8;
      if (v13 < 0)
        v31 = v13;
      v90 = v31;
      swift_bridgeObjectRetain(v13);
      v32 = 0;
      v105 = 0;
      v96 = (void **)(v29 + 48);
      v99 = v14;
      v95 = v13;
      v94 = v4;
      while (1)
      {
        v34 = v98 ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v32, v13) : *(id *)(v92 + 8 * v32);
        v111 = v34;
        v35 = v100;
        v36 = UUID.init()();
        v37 = UUID.uuidString.getter(v36);
        v39 = v38;
        (*(void (**)(char *, uint64_t))(v101 + 8))(v35, v4);
        v113 = v37;
        v114 = v39;
        v40 = *(_QWORD *)(v29 + 16);
        v104 = v32;
        if (v32)
          break;
        if (v93)
        {
          swift_bridgeObjectRetain(v13);
          v62 = _CocoaArrayWrapper.endIndex.getter(v90);
          swift_bridgeObjectRelease(v13);
          if (v40 != v62)
          {
LABEL_35:
            v40 = *(_QWORD *)(v29 + 16);
            if (!v40)
              goto LABEL_36;
LABEL_27:
            swift_bridgeObjectRetain(v29);
            v41 = v96;
            while (1)
            {
              v42 = *(v41 - 1);
              v110 = (uint64_t)*(v41 - 2);
              v43 = *v41;
              v112 = v42;
              swift_bridgeObjectRetain(v42);
              v44 = v43;
              v45 = objc_msgSend(v44, "URL");
              v46 = v106;
              static URL._unconditionallyBridgeFromObjectiveC(_:)();

              v47 = URL.absoluteString.getter();
              v49 = v48;
              v50 = *(void (**)(char *, uint64_t))(v108 + 8);
              v51 = v46;
              v52 = v109;
              v50(v51, v109);
              v53 = objc_msgSend(v111, "URL");
              v54 = v107;
              static URL._unconditionallyBridgeFromObjectiveC(_:)();

              v55 = URL.absoluteString.getter();
              v57 = v56;
              v50(v54, v52);
              if (v47 == v55 && v49 == v57)
                break;
              v58 = _stringCompareWithSmolCheck(_:_:expecting:)(v47, v49, v55, v57, 0);
              swift_bridgeObjectRelease(v49);
              swift_bridgeObjectRelease(v57);
              if ((v58 & 1) != 0)
                goto LABEL_41;
              swift_bridgeObjectRelease(v112);

              v41 += 3;
              if (!--v40)
              {
                swift_bridgeObjectRelease(v102);
                v37 = v113;
                v39 = v114;
                v59 = v95;
                v4 = v94;
                v30 = v97;
                goto LABEL_37;
              }
            }
            swift_bridgeObjectRelease_n(v49, 2);
LABEL_41:
            swift_bridgeObjectRelease(v102);

            v39 = v114;
            v59 = v95;
            v60 = v94;
            v30 = v97;
            v37 = v110;
            v61 = v112;
LABEL_42:
            swift_bridgeObjectRelease(v39);
            v63 = v37;
            v113 = v37;
            v114 = v61;
            v39 = v61;
            goto LABEL_43;
          }
        }
        else if (v40 != *(_QWORD *)(v91 + 16))
        {
          goto LABEL_35;
        }
        v59 = v13;
        v60 = v4;
        v63 = v37;
LABEL_43:
        v64 = swift_bridgeObjectRetain(v30);
        v65 = v105;
        v66 = sub_58F34(v64, &v113);
        swift_bridgeObjectRelease(v30);
        v67 = v103;
        sub_5BE24((uint64_t)v66, (uint64_t)v67);
        v105 = v65;

        swift_release(v66);
        v69 = sub_528C4(v116);
        v70 = *v68;
        if (*v68)
        {
          v71 = v68;
          swift_bridgeObjectRetain(v39);
          v112 = v111;
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v70);
          *v71 = v70;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            v70 = sub_56A28(0, *((_QWORD *)v70 + 2) + 1, 1, v70);
            *v71 = v70;
          }
          v74 = *((_QWORD *)v70 + 2);
          v73 = *((_QWORD *)v70 + 3);
          if (v74 >= v73 >> 1)
          {
            v70 = sub_56A28((char *)(v73 > 1), v74 + 1, 1, v70);
            *v71 = v70;
          }
          *((_QWORD *)v70 + 2) = v74 + 1;
          v33 = &v70[24 * v74];
          *((_QWORD *)v33 + 4) = v63;
          *((_QWORD *)v33 + 5) = v39;
          *((_QWORD *)v33 + 6) = v112;
        }
        v69(v116, 0);
        v32 = v104 + 1;
        swift_bridgeObjectRelease(v39);

        v4 = v60;
        v13 = v59;
        v29 = v102;
        if (v32 == v99)
        {
          swift_bridgeObjectRelease(v30);
          v75 = v13;
          goto LABEL_50;
        }
      }
      if (v40)
        goto LABEL_27;
LABEL_36:
      v59 = v13;
LABEL_37:
      v60 = v4;
      swift_bridgeObjectRetain(v39);
      v61 = v39;
      goto LABEL_42;
    }
    __break(1u);
  }
  else
  {
    v75 = v102;
    v29 = v97;
LABEL_50:
    swift_bridgeObjectRelease(v75);
    swift_bridgeObjectRelease(v29);
    if (qword_31E520 != -1)
      swift_once(&qword_31E520, sub_52320);
    v76 = type metadata accessor for Logger(0);
    sub_5240C(v76, (uint64_t)qword_31E528);
    v77 = swift_bridgeObjectRetain(v13);
    v78 = Logger.logObject.getter(v77);
    v79 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v78, v79))
    {
      v80 = (uint8_t *)swift_slowAlloc(12, -1);
      v81 = swift_slowAlloc(32, -1);
      v116[0] = v81;
      *(_DWORD *)v80 = 136315138;
      v82 = swift_bridgeObjectRetain(v13);
      v83 = v13;
      v84 = Array.description.getter(v82, v89);
      v86 = v85;
      swift_bridgeObjectRelease(v83);
      v113 = sub_57CD8(v84, v86, v116);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v113, &v114, v80 + 4, v80 + 12);
      swift_bridgeObjectRelease(v86);
      swift_bridgeObjectRelease_n(v83, 2);
      _os_log_impl(&dword_0, v78, v79, "BSUISharedWithYouController: refresh: %s", v80, 0xCu);
      swift_arrayDestroy(v81, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v81, -1, -1);
      swift_slowDealloc(v80, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n(v13, 2);
    }

  }
}

uint64_t sub_5459C(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  void **v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  id v20;
  void (*v21)(void (*)(uint64_t, uint64_t, uint64_t), uint64_t);
  uint64_t v22;
  void (*v23)(void (*)(uint64_t, uint64_t, uint64_t), uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD v28[3];
  char v29[24];

  v5 = sub_5C154(&qword_31E7B0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (void (*)(uint64_t, uint64_t, uint64_t))((char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v9);
  v11 = (void (*)(uint64_t, uint64_t, uint64_t))((char *)&v25 - v10);
  v12 = sub_5C154(&qword_31E7B8);
  Regex.init(_regexString:version:)(0x392D305B2864692FLL, 0xEC0000002F292B5DLL, 1, v12);
  Regex.init(_regexString:version:)(0x2B5D392D305B282FLL, 0xEA00000000002F29, 1, v12);
  v13 = (uint64_t *)(v2 + OBJC_IVAR____TtC11BookStoreUI27BSUISharedWithYouController_highlights);
  swift_beginAccess(v13, v29, 0, 0);
  v14 = *v13;
  if (v14 && (v15 = *(_QWORD *)(v14 + 16)) != 0)
  {
    v26 = v6;
    v27 = v5;
    swift_bridgeObjectRetain_n(v14, 2);
    v25 = v14;
    v16 = (void **)(v14 + 48);
    while (1)
    {
      v17 = (uint64_t)*(v16 - 1);
      v18 = *v16;
      v19 = (uint64_t)*(v16 - 2);
      v28[0] = v19;
      v28[1] = v17;
      v28[2] = v18;
      swift_bridgeObjectRetain(v17);
      v20 = v18;
      if ((sub_547B0((uint64_t)v28, (uint64_t)v11, v8, a1, a2) & 1) != 0)
        break;

      swift_bridgeObjectRelease(v17);
      v16 += 3;
      if (!--v15)
      {
        swift_bridgeObjectRelease_n(v25, 2);
        v6 = v26;
        v5 = v27;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease_n(v25, 2);
    v22 = v27;
    v23 = *(void (**)(void (*)(uint64_t, uint64_t, uint64_t), uint64_t))(v26 + 8);
    v23(v8, v27);
    v23(v11, v22);

  }
  else
  {
LABEL_7:
    v21 = *(void (**)(void (*)(uint64_t, uint64_t, uint64_t), uint64_t))(v6 + 8);
    v21(v8, v5);
    v21(v11, v5);
    return 0;
  }
  return v19;
}

uint64_t sub_547B0(uint64_t a1, uint64_t a2, void (*a3)(uint64_t, uint64_t, uint64_t), uint64_t a4, unint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t, uint64_t, uint64_t);
  void (*v26)(uint64_t, uint64_t, uint64_t);
  uint64_t result;
  uint64_t v28;
  uint64_t v29;
  int v30;
  int v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t KeyPath;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(uint64_t, uint64_t, uint64_t);
  uint64_t v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD v51[2];
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;

  v6 = v5;
  v40 = a5;
  v42 = a4;
  v45 = a3;
  v46 = a2;
  v8 = type metadata accessor for URL(0);
  v48 = *(_QWORD *)(v8 - 8);
  v49 = v8;
  __chkstk_darwin(v8);
  v10 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_5C154(&qword_31F028);
  __chkstk_darwin(v11);
  v13 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_5C154(&qword_31F030);
  v54 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v41 = (char *)&v39 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_5C154(&qword_31E7B0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (char *)&v39 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = *(id *)(a1 + 16);
  v20 = sub_5C154(&qword_31F038);
  v50 = *(_QWORD *)(v17 + 72);
  v21 = *(unsigned __int8 *)(v17 + 80);
  v22 = (v21 + 32) & ~v21;
  v23 = swift_allocObject(v20, v22 + 2 * v50, v21 | 7);
  *(_OWORD *)(v23 + 16) = xmmword_255F00;
  v24 = v23 + v22;
  v44 = v17;
  v25 = *(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 16);
  v25(v24, v46, v16);
  v26 = v45;
  v45 = v25;
  v46 = v24;
  result = ((uint64_t (*)(uint64_t, _QWORD, uint64_t))v25)(v24 + v50, v26, v16);
  v28 = HIBYTE(v40) & 0xF;
  if ((v40 & 0x2000000000000000) == 0)
    v28 = v42 & 0xFFFFFFFFFFFFLL;
  v39 = v28;
  v43 = v23;
  if (!*(_QWORD *)(v23 + 16))
  {
LABEL_18:
    __break(1u);
    return result;
  }
  v29 = 0;
  v30 = 0;
  while (1)
  {
    v45((uint64_t)v19, v46 + v29 * v50, v16);
    v32 = objc_msgSend(v47, "URL");
    static URL._unconditionallyBridgeFromObjectiveC(_:)();

    v33 = URL.absoluteString.getter();
    v35 = v34;
    (*(void (**)(char *, uint64_t))(v48 + 8))(v10, v49);
    Regex.firstMatch(in:)(v33, v35, v16);
    if (v6)
    {
      swift_errorRelease(v6);
      swift_bridgeObjectRelease(v35);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v54 + 56))(v13, 1, 1, v14);
      v6 = 0;
      goto LABEL_10;
    }
    swift_bridgeObjectRelease(v35);
    v36 = v54;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v54 + 48))(v13, 1, v14) != 1)
      break;
LABEL_10:
    (*(void (**)(char *, uint64_t))(v44 + 8))(v19, v16);
    result = sub_5E09C((uint64_t)v13, &qword_31F028);
    if ((v30 & 1) != 0)
    {
      LOBYTE(v31) = 0;
      goto LABEL_17;
    }
LABEL_6:
    v29 = 1;
    v30 = 1;
    if (*(_QWORD *)(v43 + 16) <= 1uLL)
      goto LABEL_18;
  }
  (*(void (**)(char *, char *, uint64_t))(v36 + 32))(v41, v13, v14);
  KeyPath = swift_getKeyPath(&unk_2571A8);
  Regex.Match.subscript.getter(v51, KeyPath, v14);
  swift_release(KeyPath);
  v38 = v53;
  if (v52 != v42 || v53 != v40 || v51[0] >> 16 || v51[1] >> 16 != v39)
  {
    v31 = _stringCompareInternal(_:_:_:_:expecting:)(v52);
    swift_bridgeObjectRelease(v38);
    (*(void (**)(char *, uint64_t))(v54 + 8))(v41, v14);
    result = (*(uint64_t (**)(char *, uint64_t))(v44 + 8))(v19, v16);
    if (((v31 | v30) & 1) != 0)
      goto LABEL_17;
    goto LABEL_6;
  }
  swift_bridgeObjectRelease(v40);
  (*(void (**)(char *, uint64_t))(v54 + 8))(v41, v14);
  (*(void (**)(char *, uint64_t))(v44 + 8))(v19, v16);
  LOBYTE(v31) = 1;
LABEL_17:
  swift_bridgeObjectRelease(v43);
  return v31 & 1;
}

void sub_54BE4(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v3;
  Swift::String v7;
  Swift::String v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  id v15;
  id v16;
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  void *v22;
  id v23;
  uint64_t v24;
  id v25;
  void *v26;
  id v27;
  id v28;
  void *v29;
  id v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  NSObject *v34;
  os_log_type_t v35;
  uint8_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  NSString v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;

  v44 = 0;
  v45 = 0xE000000000000000;
  v46 = a3;
  _print_unlocked<A, B>(_:_:)(&v46, &v44, &type metadata for UnsafeMutableRawPointer, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  v7._countAndFlagsBits = 43;
  v7._object = (void *)0xE100000000000000;
  String.append(_:)(v7);
  v8._countAndFlagsBits = a1;
  v8._object = a2;
  String.append(_:)(v8);
  v10 = v44;
  v9 = v45;
  v11 = (uint64_t *)(v3 + OBJC_IVAR____TtC11BookStoreUI27BSUISharedWithYouController_attributionViews);
  swift_beginAccess(v3 + OBJC_IVAR____TtC11BookStoreUI27BSUISharedWithYouController_attributionViews, &v44, 0, 0);
  v12 = *v11;
  if (!*(_QWORD *)(*v11 + 16))
    goto LABEL_18;
  swift_bridgeObjectRetain(v9);
  swift_bridgeObjectRetain(v12);
  v13 = sub_582B4(v10, v9);
  if ((v14 & 1) == 0)
  {
    swift_bridgeObjectRelease(v9);
    swift_bridgeObjectRelease(v12);
LABEL_18:
    v15 = 0;
    goto LABEL_19;
  }
  v15 = *(id *)(*(_QWORD *)(v12 + 56) + 8 * v13);
  swift_bridgeObjectRelease(v9);
  v16 = objc_msgSend(v15, "highlight", swift_bridgeObjectRelease(v12).n128_f64[0]);
  if (!v16)
  {
LABEL_19:
    if (qword_31E520 != -1)
      swift_once(&qword_31E520, sub_52320);
    v32 = type metadata accessor for Logger(0);
    sub_5240C(v32, (uint64_t)qword_31E528);
    swift_bridgeObjectRetain(v9);
    v34 = Logger.logObject.getter(v33);
    v35 = static os_log_type_t.error.getter();
    if (!os_log_type_enabled(v34, v35))
    {

      swift_bridgeObjectRelease_n(v9, 2);
      return;
    }
    v36 = (uint8_t *)swift_slowAlloc(12, -1);
    v37 = swift_slowAlloc(32, -1);
    v46 = v37;
    *(_DWORD *)v36 = 136315138;
    swift_bridgeObjectRetain(v9);
    v43 = sub_57CD8(v10, v9, &v46);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v43, &v44, v36 + 4, v36 + 12);
    swift_bridgeObjectRelease_n(v9, 3);
    _os_log_impl(&dword_0, v34, v35, "No attribution identifier for %s.", v36, 0xCu);
    swift_arrayDestroy(v37, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v37, -1, -1);
    swift_slowDealloc(v36, -1, -1);

    goto LABEL_43;
  }
  v17 = v16;
  v18 = objc_msgSend(v16, "attributions");

  v19 = sub_5C194(0, &qword_31E7C0, SLAttribution_ptr);
  v20 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v18, v19);

  if (!((unint64_t)v20 >> 62))
  {
    if (*(_QWORD *)((char *)&dword_10 + (v20 & 0xFFFFFFFFFFFFF8)))
      goto LABEL_6;
    goto LABEL_30;
  }
  if (v20 < 0)
    v38 = v20;
  else
    v38 = v20 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v20);
  v39 = _CocoaArrayWrapper.endIndex.getter(v38);
  swift_bridgeObjectRelease(v20);
  if (!v39)
  {
LABEL_30:
    swift_bridgeObjectRelease(v20);
    goto LABEL_19;
  }
LABEL_6:
  if ((v20 & 0xC000000000000001) != 0)
  {
    v21 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v20);
  }
  else
  {
    if (!*(_QWORD *)((char *)&dword_10 + (v20 & 0xFFFFFFFFFFFFF8)))
    {
      __break(1u);
      goto LABEL_33;
    }
    v21 = *(id *)(v20 + 32);
  }
  v22 = v21;
  swift_bridgeObjectRelease(v9);
  v23 = objc_msgSend(v22, "uniqueIdentifier", swift_bridgeObjectRelease(v20).n128_f64[0]);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v23);
  v20 = v24;

  v25 = objc_msgSend(v15, "highlight");
  v26 = v25;
  if (!v25)
    goto LABEL_39;
  v27 = objc_msgSend(v25, "attributions");

  v10 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v27, v19);
  if (!((unint64_t)v10 >> 62))
  {
    if (*(_QWORD *)((char *)&dword_10 + (v10 & 0xFFFFFFFFFFFFF8)))
      goto LABEL_12;
LABEL_37:
    swift_bridgeObjectRelease(v10);
    goto LABEL_38;
  }
LABEL_33:
  if (v10 < 0)
    v40 = v10;
  else
    v40 = v10 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v10);
  v41 = _CocoaArrayWrapper.endIndex.getter(v40);
  swift_bridgeObjectRelease(v10);
  if (!v41)
    goto LABEL_37;
LABEL_12:
  if ((v10 & 0xC000000000000001) != 0)
  {
    v28 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v10);
LABEL_15:
    v29 = v28;
    v30 = objc_msgSend(v28, "attachmentGUID", swift_bridgeObjectRelease(v10).n128_f64[0]);

    if (v30)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)(v30);
      v26 = v31;

LABEL_39:
      v42 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v20);
      if (v26)
      {
        v34 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease(v26);
      }
      else
      {
        v34 = 0;
      }
      objc_msgSend((id)objc_opt_self(SWAttributionView), "presentTranscriptForAttributionIdentifier:attachmentGUID:presentingViewController:", v42, v34, a3);

LABEL_43:
      return;
    }
LABEL_38:
    v26 = 0;
    goto LABEL_39;
  }
  if (*(_QWORD *)((char *)&dword_10 + (v10 & 0xFFFFFFFFFFFFF8)))
  {
    v28 = *(id *)(v10 + 32);
    goto LABEL_15;
  }
  __break(1u);
}

id sub_55124(uint64_t a1, void *a2, void *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  void **i;
  uint64_t v12;
  void *v13;
  void *v14;
  BOOL v15;
  id v16;
  id v17;
  id v18;
  Swift::String v19;
  Swift::String v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  id v24;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v26;
  uint64_t v28;
  unint64_t v29;
  void *v30;
  _BYTE v31[24];

  v4 = v3;
  v8 = (uint64_t *)(v4 + OBJC_IVAR____TtC11BookStoreUI27BSUISharedWithYouController_highlights);
  swift_beginAccess(v4 + OBJC_IVAR____TtC11BookStoreUI27BSUISharedWithYouController_highlights, v31, 0, 0);
  v9 = *v8;
  if (!*v8)
    return 0;
  v10 = *(_QWORD *)(v9 + 16);
  if (!v10)
    return 0;
  for (i = (void **)(v9 + 48); ; i += 3)
  {
    v12 = (uint64_t)*(i - 2);
    v13 = *(i - 1);
    v14 = *i;
    v15 = v12 == a1 && v13 == a2;
    if (v15 || (_stringCompareWithSmolCheck(_:_:expecting:)(v12, v13, a1, a2, 0) & 1) != 0)
      break;
    if (!--v10)
      return 0;
  }
  v17 = v14;
  v16 = objc_msgSend(objc_allocWithZone((Class)SWAttributionView), "init");
  objc_msgSend(v16, "setHighlight:", v17);
  if (a3)
  {
    v28 = 0;
    v29 = 0xE000000000000000;
    v30 = a3;
    v18 = a3;
    _print_unlocked<A, B>(_:_:)(&v30, &v28, &type metadata for UnsafeMutableRawPointer, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
    v19._countAndFlagsBits = 43;
    v19._object = (void *)0xE100000000000000;
    String.append(_:)(v19);
    v20._countAndFlagsBits = a1;
    v20._object = a2;
    String.append(_:)(v20);
    v21 = v28;
    v22 = v29;
    v23 = (_QWORD *)(v4 + OBJC_IVAR____TtC11BookStoreUI27BSUISharedWithYouController_attributionViews);
    swift_beginAccess(v23, &v28, 33, 0);
    v24 = v16;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v23);
    v30 = (void *)*v23;
    *v23 = 0x8000000000000000;
    sub_59B40((uint64_t)v24, v21, v22, isUniquelyReferenced_nonNull_native);
    v26 = *v23;
    *v23 = v30;
    swift_bridgeObjectRelease(v22);
    swift_bridgeObjectRelease(v26);
    swift_endAccess(&v28);

  }
  return v16;
}

uint64_t type metadata accessor for BSUISharedWithYouController()
{
  return objc_opt_self(_TtC11BookStoreUI27BSUISharedWithYouController);
}

void *sub_55394(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  void **i;
  uint64_t v12;
  void *v13;
  BOOL v14;
  Swift::String v15;
  Swift::String v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  void *v23;
  id v24;
  uint64_t v25;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  char v30[24];

  v4 = v3;
  v8 = (uint64_t *)(v4 + OBJC_IVAR____TtC11BookStoreUI27BSUISharedWithYouController_highlights);
  swift_beginAccess(v4 + OBJC_IVAR____TtC11BookStoreUI27BSUISharedWithYouController_highlights, v30, 0, 0);
  v9 = *v8;
  if (!*v8)
    return 0;
  v10 = *(_QWORD *)(v9 + 16);
  if (!v10)
    return 0;
  for (i = (void **)(v9 + 40); ; i += 3)
  {
    v12 = (uint64_t)*(i - 1);
    v13 = *i;
    v14 = v12 == a1 && v13 == a2;
    if (v14 || (_stringCompareWithSmolCheck(_:_:expecting:)(v12, v13, a1, a2, 0) & 1) != 0)
      break;
    if (!--v10)
      return 0;
  }
  v27 = 0;
  v28 = 0xE000000000000000;
  v29 = a3;
  _print_unlocked<A, B>(_:_:)(&v29, &v27, &type metadata for UnsafeMutableRawPointer, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  v15._countAndFlagsBits = 43;
  v15._object = (void *)0xE100000000000000;
  String.append(_:)(v15);
  v16._countAndFlagsBits = a1;
  v16._object = a2;
  String.append(_:)(v16);
  v18 = v27;
  v17 = v28;
  v19 = (uint64_t *)(v4 + OBJC_IVAR____TtC11BookStoreUI27BSUISharedWithYouController_attributionViews);
  swift_beginAccess(v19, &v27, 0, 0);
  v20 = *v19;
  if (!*(_QWORD *)(*v19 + 16))
  {
    v25 = v17;
LABEL_16:
    swift_bridgeObjectRelease(v25);
    return 0;
  }
  swift_bridgeObjectRetain(*v19);
  v21 = sub_582B4(v18, v17);
  if ((v22 & 1) == 0)
  {
    swift_bridgeObjectRelease(v17);
    v25 = v20;
    goto LABEL_16;
  }
  v23 = *(void **)(*(_QWORD *)(v20 + 56) + 8 * v21);
  v24 = v23;
  swift_bridgeObjectRelease(v17);
  swift_bridgeObjectRelease(v20);
  return v23;
}

id BSUISharedWithYouController.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BSUISharedWithYouController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_555AC()
{
  _QWORD *v0;
  _QWORD *v1;
  _BYTE v3[24];

  v1 = (_QWORD *)(*v0 + OBJC_IVAR____TtC11BookStoreUI27BSUISharedWithYouController_refreshPublisher);
  swift_beginAccess(v1, v3, 0, 0);
  return swift_retain(*v1);
}

uint64_t sub_555F8(uint64_t a1, unint64_t a2)
{
  return sub_5459C(a1, a2);
}

id sub_55618(void *a1, void *a2)
{
  return sub_525C0(a1, a2);
}

id BSUISharedWithYouController.attach(_:)(void *a1)
{
  uint64_t v1;
  char **v3;
  char *v4;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v6;
  unint64_t v7;
  _BYTE v9[24];
  _BYTE v10[8];

  swift_unknownObjectWeakInit(v9, 0);
  swift_unknownObjectWeakAssign(v9, a1);
  sub_5C1CC((uint64_t)v9, (uint64_t)v10);
  v3 = (char **)(v1 + OBJC_IVAR____TtC11BookStoreUI27BSUISharedWithYouController_observers);
  swift_beginAccess(v1 + OBJC_IVAR____TtC11BookStoreUI27BSUISharedWithYouController_observers, v9, 33, 0);
  v4 = *v3;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
  *v3 = v4;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v4 = sub_56B4C(0, *((_QWORD *)v4 + 2) + 1, 1, (unint64_t)v4);
    *v3 = v4;
  }
  v7 = *((_QWORD *)v4 + 2);
  v6 = *((_QWORD *)v4 + 3);
  if (v7 >= v6 >> 1)
  {
    v4 = sub_56B4C((char *)(v6 > 1), v7 + 1, 1, (unint64_t)v4);
    *v3 = v4;
  }
  *((_QWORD *)v4 + 2) = v7 + 1;
  sub_5C1CC((uint64_t)v10, (uint64_t)&v4[8 * v7 + 32]);
  swift_endAccess(v9);
  return objc_msgSend(a1, "update:", v1);
}

uint64_t BSUISharedWithYouController.detach(_:)(uint64_t a1)
{
  uint64_t v1;
  unint64_t **v3;
  unint64_t *v4;
  uint64_t v5;
  unint64_t *v6;
  unint64_t *v7;
  char v9[24];

  v3 = (unint64_t **)(v1 + OBJC_IVAR____TtC11BookStoreUI27BSUISharedWithYouController_observers);
  swift_beginAccess(v3, v9, 1, 0);
  v4 = *v3;
  swift_unknownObjectRetain(a1);
  v5 = swift_bridgeObjectRetain(v4);
  v6 = sub_5C428(v5, a1);
  swift_bridgeObjectRelease(v4);
  swift_unknownObjectRelease(a1);
  v7 = *v3;
  *v3 = v6;
  return swift_bridgeObjectRelease(v7);
}

Swift::UInt sub_55828()
{
  uint64_t v0;
  Swift::UInt result;
  Swift::UInt v2;

  result = swift_unknownObjectWeakLoadStrong(v0);
  if (result)
  {
    v2 = result;
    Hasher._combine(_:)(result);
    return swift_unknownObjectRelease(v2);
  }
  return result;
}

BOOL sub_5586C(uint64_t a1, uint64_t a2)
{
  uint64_t Strong;
  uint64_t v4;
  uint64_t v5;

  Strong = swift_unknownObjectWeakLoadStrong(a1);
  v4 = swift_unknownObjectWeakLoadStrong(a2);
  v5 = v4;
  if (Strong)
  {
    swift_unknownObjectRelease(Strong);
    if (v5)
    {
      swift_unknownObjectRelease(v5);
      return Strong == v5;
    }
    return 0;
  }
  if (v4)
  {
    swift_unknownObjectRelease(v4);
    return 0;
  }
  return 1;
}

Swift::Int sub_558D8()
{
  _QWORD v1[9];

  Hasher.init(_seed:)(v1, 0);
  sub_55828();
  return Hasher._finalize()();
}

Swift::Int sub_55924(uint64_t a1)
{
  _QWORD v2[9];

  Hasher.init(_seed:)(v2, a1);
  sub_55828();
  return Hasher._finalize()();
}

BOOL sub_55964(uint64_t a1, uint64_t a2)
{
  return sub_5586C(a1, a2);
}

uint64_t sub_5596C(uint64_t a1, id *a2)
{
  uint64_t result;
  NSString v5;
  NSString v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;

  v9 = 0;
  v10 = 0;
  result = static String._forceBridgeFromObjectiveC(_:result:)(a1, &v9);
  v5 = v10;
  if (v10)
  {
    v6 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v5);
    static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
    v8 = v7;
    v5 = String._bridgeToObjectiveC()();

    result = swift_bridgeObjectRelease(v8);
  }
  *a2 = v5;
  return result;
}

uint64_t sub_559F8(uint64_t a1, id *a2)
{
  char v4;
  NSString v5;
  NSString v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  void *v11;

  v10 = 0;
  v11 = 0;
  v4 = static String._conditionallyBridgeFromObjectiveC(_:result:)(a1, &v10);
  v5 = v11;
  if (v11)
  {
    v6 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v5);
    static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
    v8 = v7;
    v5 = String._bridgeToObjectiveC()();

    swift_bridgeObjectRelease(v8);
  }
  *a2 = v5;
  return v4 & 1;
}

uint64_t sub_55A94(uint64_t a1, uint64_t a2)
{
  return sub_5672C(a1, a2, (uint64_t (*)(uint64_t))&String._bridgeToObjectiveC());
}

NSNumber sub_55AB8()
{
  return CGFloat._bridgeToObjectiveC()();
}

uint64_t sub_55AC0(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  v6 = 0;
  v7 = 1;
  result = static CGFloat._forceBridgeFromObjectiveC(_:result:)(a1, &v6);
  v4 = v7;
  v5 = v6;
  if (v7)
    v5 = 0;
  *(_QWORD *)a2 = v5;
  *(_BYTE *)(a2 + 8) = v4;
  return result;
}

uint64_t sub_55B10(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;
  uint64_t v5;
  uint64_t v7;
  char v8;

  v7 = 0;
  v8 = 1;
  v3 = static CGFloat._conditionallyBridgeFromObjectiveC(_:result:)(a1, &v7);
  v4 = v8;
  v5 = v7;
  if (v8)
    v5 = 0;
  *(_QWORD *)a2 = v5;
  *(_BYTE *)(a2 + 8) = v4;
  return v3 & 1;
}

void sub_55B64(double *a1@<X8>)
{
  *a1 = static CGFloat._unconditionallyBridgeFromObjectiveC(_:)();
}

void sub_55B88(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
}

BOOL sub_55B94(_QWORD *a1, _QWORD *a2)
{
  return *a1 == *a2;
}

uint64_t sub_55BA8(uint64_t a1, uint64_t a2)
{
  return sub_5672C(a1, a2, (uint64_t (*)(uint64_t))&String.hashValue.getter);
}

uint64_t sub_55BB4(uint64_t a1, id *a2)
{
  uint64_t result;
  uint64_t v5;
  NSString v6;
  uint64_t v7;
  uint64_t v8;

  v7 = 0;
  v8 = 0;
  result = static String._forceBridgeFromObjectiveC(_:result:)(a1, &v7);
  v5 = v8;
  if (v8)
  {
    v6 = String._bridgeToObjectiveC()();
    result = swift_bridgeObjectRelease(v5);
  }
  else
  {
    v6 = 0;
  }
  *a2 = v6;
  return result;
}

uint64_t sub_55C28(uint64_t a1, id *a2)
{
  char v4;
  uint64_t v5;
  NSString v6;
  uint64_t v8;
  uint64_t v9;

  v8 = 0;
  v9 = 0;
  v4 = static String._conditionallyBridgeFromObjectiveC(_:result:)(a1, &v8);
  v5 = v9;
  if (v9)
  {
    v6 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v5);
  }
  else
  {
    v6 = 0;
  }
  *a2 = v6;
  return v4 & 1;
}

uint64_t sub_55CA4@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  NSString v5;
  uint64_t result;

  static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  v4 = v3;
  v5 = String._bridgeToObjectiveC()();
  result = swift_bridgeObjectRelease(v4);
  *a2 = v5;
  return result;
}

uint64_t sub_55CE8(uint64_t a1, uint64_t a2)
{
  return sub_56824(a1, a2, (uint64_t (*)(uint64_t))&String._bridgeToObjectiveC());
}

uint64_t sub_55CFC@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  NSString v5;
  uint64_t v6;
  uint64_t v7;
  NSString v8;
  uint64_t result;

  static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  v4 = v3;
  v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v4);
  static String._unconditionallyBridgeFromObjectiveC(_:)(v5);
  v7 = v6;
  v8 = String._bridgeToObjectiveC()();

  result = swift_bridgeObjectRelease(v7);
  *a2 = v8;
  return result;
}

uint64_t sub_55D5C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_5C9A0(&qword_31EE38, 255, (uint64_t (*)(uint64_t))type metadata accessor for ActivityType, (uint64_t)&unk_256340);
  v3 = sub_5C9A0(&qword_31EE40, 255, (uint64_t (*)(uint64_t))type metadata accessor for ActivityType, (uint64_t)&unk_2562E8);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_55DE8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_5C9A0(&qword_31F188, 255, (uint64_t (*)(uint64_t))type metadata accessor for MCatalogRequestRelationship, (uint64_t)&unk_2573F8);
  v3 = sub_5C9A0(&qword_31F190, 255, (uint64_t (*)(uint64_t))type metadata accessor for MCatalogRequestRelationship, (uint64_t)&unk_257398);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_55E74(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_5C9A0(&qword_31F178, 255, (uint64_t (*)(uint64_t))type metadata accessor for MCatalogRequestView, (uint64_t)&unk_257550);
  v3 = sub_5C9A0(&qword_31F180, 255, (uint64_t (*)(uint64_t))type metadata accessor for MCatalogRequestView, (uint64_t)&unk_2574F0);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_55F00(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_5C9A0(&qword_31EE28, 255, (uint64_t (*)(uint64_t))type metadata accessor for AssetActivityItemProviderProperty, (uint64_t)&unk_25649C);
  v3 = sub_5C9A0(&qword_31EE30, 255, (uint64_t (*)(uint64_t))type metadata accessor for AssetActivityItemProviderProperty, (uint64_t)&unk_25643C);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_55F8C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_5C9A0((unint64_t *)&qword_31ED90, 255, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_257088);
  v3 = sub_5C9A0(&qword_31ED98, 255, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_257028);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

_QWORD *sub_56018@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *result;
  *(_BYTE *)(a2 + 8) = 0;
  return result;
}

double sub_56028@<D0>(_QWORD *a1@<X8>)
{
  double *v1;
  double result;

  result = *v1;
  *a1 = *(_QWORD *)v1;
  return result;
}

uint64_t sub_56034(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;

  v2 = sub_5C9A0(&qword_31EDC0, 255, (uint64_t (*)(uint64_t))type metadata accessor for Weight, (uint64_t)&unk_256C74);
  v3 = sub_5C9A0(&qword_31EDC8, 255, (uint64_t (*)(uint64_t))type metadata accessor for Weight, (uint64_t)&unk_256C14);
  v4 = sub_5D010();
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, v4);
}

uint64_t sub_560DC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_5C9A0(&qword_31EDD8, 255, (uint64_t (*)(uint64_t))type metadata accessor for SystemDesign, (uint64_t)&unk_256B1C);
  v3 = sub_5C9A0(&qword_31EDE0, 255, (uint64_t (*)(uint64_t))type metadata accessor for SystemDesign, (uint64_t)&unk_256ABC);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_56168(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_5C9A0(&qword_31F158, 255, (uint64_t (*)(uint64_t))type metadata accessor for SeriesManagerSeriesType, (uint64_t)&unk_257870);
  v3 = sub_5C9A0(&qword_31F160, 255, (uint64_t (*)(uint64_t))type metadata accessor for SeriesManagerSeriesType, (uint64_t)&unk_2577C4);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_561F4@<X0>(uint64_t *a1@<X8>)
{
  _QWORD *v1;
  uint64_t result;
  uint64_t v4;

  result = static String._unconditionallyBridgeFromObjectiveC(_:)(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_5621C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_5C9A0(&qword_3261C0, 255, (uint64_t (*)(uint64_t))type metadata accessor for FigaroKey, (uint64_t)&unk_257118);
  v3 = sub_5C9A0(&qword_31EE00, 255, (uint64_t (*)(uint64_t))type metadata accessor for FigaroKey, (uint64_t)&unk_256814);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_562A8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_5C9A0(&qword_31F168, 255, (uint64_t (*)(uint64_t))type metadata accessor for BSUINavigationControllerOptionsKey, (uint64_t)&unk_2578B4);
  v3 = sub_5C9A0(&qword_31F170, 255, (uint64_t (*)(uint64_t))type metadata accessor for BSUINavigationControllerOptionsKey, (uint64_t)&unk_2576B0);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_56334(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_5C9A0(&qword_31EDB0, 255, (uint64_t (*)(uint64_t))type metadata accessor for TextStyle, (uint64_t)&unk_256DCC);
  v3 = sub_5C9A0(&qword_31EDB8, 255, (uint64_t (*)(uint64_t))type metadata accessor for TextStyle, (uint64_t)&unk_256D6C);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_563C0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_5C9A0(&qword_31EDA0, 255, (uint64_t (*)(uint64_t))type metadata accessor for UIContentSizeCategory, (uint64_t)&unk_256F24);
  v3 = sub_5C9A0(&qword_31EDA8, 255, (uint64_t (*)(uint64_t))type metadata accessor for UIContentSizeCategory, (uint64_t)&unk_256EC4);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_5644C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_5C9A0((unint64_t *)&qword_31EE18, 255, (uint64_t (*)(uint64_t))type metadata accessor for AttributeName, (uint64_t)&unk_25715C);
  v3 = sub_5C9A0(&qword_31EE20, 255, (uint64_t (*)(uint64_t))type metadata accessor for AttributeName, (uint64_t)&unk_2565A0);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_564D8@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  NSString v4;
  uint64_t result;

  v3 = *(_QWORD *)(a1 + 8);
  v4 = String._bridgeToObjectiveC()();
  result = swift_bridgeObjectRelease(v3);
  *a2 = v4;
  return result;
}

uint64_t sub_5651C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_5C9A0(&qword_31EE08, 255, (uint64_t (*)(uint64_t))type metadata accessor for TraitKey, (uint64_t)&unk_256714);
  v3 = sub_5C9A0(&qword_31EE10, 255, (uint64_t (*)(uint64_t))type metadata accessor for TraitKey, (uint64_t)&unk_2566B4);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_565A8@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  NSString v6;
  uint64_t result;

  v3 = (void *)*a1;
  static String._unconditionallyBridgeFromObjectiveC(_:)(*a1);
  v5 = v4;
  v6 = String._bridgeToObjectiveC()();

  result = swift_bridgeObjectRelease(v5);
  *a2 = v6;
  return result;
}

uint64_t sub_565F4@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  NSString v5;
  uint64_t result;

  static String._unconditionallyBridgeFromObjectiveC(_:)(*v1);
  v4 = v3;
  v5 = String._bridgeToObjectiveC()();
  result = swift_bridgeObjectRelease(v4);
  *a1 = v5;
  return result;
}

uint64_t sub_56638(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = sub_5C9A0(&qword_31EDE8, 255, (uint64_t (*)(uint64_t))type metadata accessor for FigaroEventType, (uint64_t)&unk_256988);
  v3 = sub_5C9A0((unint64_t *)&unk_31EDF0, 255, (uint64_t (*)(uint64_t))type metadata accessor for FigaroEventType, (uint64_t)&unk_256928);
  v4 = sub_5C9A0(&qword_3261C0, 255, (uint64_t (*)(uint64_t))type metadata accessor for FigaroKey, (uint64_t)&unk_257118);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, v4);
}

uint64_t sub_566E4()
{
  double *v0;

  return Double.hashValue.getter(*v0);
}

void sub_566EC()
{
  Swift::UInt64 *v0;
  Swift::UInt64 v1;

  if ((*v0 & 0x7FFFFFFFFFFFFFFFLL) != 0)
    v1 = *v0;
  else
    v1 = 0;
  Hasher._combine(_:)(v1);
}

uint64_t sub_5671C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;

  if ((*v1 & 0x7FFFFFFFFFFFFFFFLL) != 0)
    v2 = *v1;
  else
    v2 = 0;
  return static Hasher._hash(seed:_:)(a1, v2);
}

uint64_t sub_5672C(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(*v3);
  v7 = v6;
  v8 = a3(v5);
  swift_bridgeObjectRelease(v7);
  return v8;
}

uint64_t sub_56768(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(*v1);
  v5 = v4;
  String.hash(into:)(a1, v3, v4);
  return swift_bridgeObjectRelease(v5);
}

Swift::Int sub_567A8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  Swift::Int v6;
  _QWORD v8[9];

  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(*v1);
  v5 = v4;
  Hasher.init(_seed:)(v8, a1);
  String.hash(into:)(v8, v3, v5);
  v6 = Hasher._finalize()();
  swift_bridgeObjectRelease(v5);
  return v6;
}

uint64_t sub_56818(uint64_t a1, uint64_t a2)
{
  return sub_56824(a1, a2, (uint64_t (*)(uint64_t))&String.hashValue.getter);
}

uint64_t sub_56824(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  NSString v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  static String._unconditionallyBridgeFromObjectiveC(_:)(*v3);
  v6 = v5;
  v7 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v6);
  v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(v7);
  v10 = v9;
  v11 = a3(v8);

  swift_bridgeObjectRelease(v10);
  return v11;
}

uint64_t sub_56888(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  NSString v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  static String._unconditionallyBridgeFromObjectiveC(_:)(*v1);
  v4 = v3;
  v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v4);
  v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(v5);
  v8 = v7;
  String.hash(into:)(a1, v6, v7);

  return swift_bridgeObjectRelease(v8);
}

Swift::Int sub_568F0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  NSString v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  Swift::Int v9;
  _QWORD v11[9];

  static String._unconditionallyBridgeFromObjectiveC(_:)(*v1);
  v4 = v3;
  v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v4);
  v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(v5);
  v8 = v7;
  Hasher.init(_seed:)(v11, a1);
  String.hash(into:)(v11, v6, v8);
  v9 = Hasher._finalize()();

  swift_bridgeObjectRelease(v8);
  return v9;
}

BOOL sub_56980(double *a1, double *a2)
{
  return *a1 == *a2;
}

uint64_t sub_56994(_QWORD *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  char v10;

  v2 = *a2;
  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(*a1);
  v5 = v4;
  v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(v2);
  if (v3 == v6 && v5 == v7)
  {
    v10 = 1;
    v9 = v5;
  }
  else
  {
    v9 = v7;
    v10 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v5, v6, v7, 0);
  }
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v9);
  return v10 & 1;
}

uint64_t sub_56A1C(uint64_t *a1, uint64_t *a2)
{
  return sub_1963A8(*a1, *a2);
}

char *sub_56A28(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  size_t v12;
  char *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = *((_QWORD *)a4 + 3);
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = *((_QWORD *)a4 + 2);
    if (v7 <= v8)
      v9 = *((_QWORD *)a4 + 2);
    else
      v9 = v7;
    if (v9)
    {
      v10 = sub_5C154(&qword_31F048);
      v11 = (char *)swift_allocObject(v10, 24 * v9 + 32, 7);
      v12 = j__malloc_size(v11);
      *((_QWORD *)v11 + 2) = v8;
      *((_QWORD *)v11 + 3) = 2 * ((uint64_t)(v12 - 32) / 24);
      v13 = v11 + 32;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v11 != a4 || v13 >= &a4[24 * v8 + 32])
          memmove(v13, a4 + 32, 24 * v8);
        *((_QWORD *)a4 + 2) = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v11 = (char *)&_swiftEmptyArrayStorage;
      v13 = (char *)&_swiftEmptyArrayStorage + 32;
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_5C214(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease(a4);
    return v11;
  }
  __break(1u);
  return result;
}

char *sub_56B4C(char *result, int64_t a2, char a3, unint64_t a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = *(_QWORD *)(a4 + 24);
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = *(_QWORD *)(a4 + 16);
    if (v7 <= v8)
      v9 = *(_QWORD *)(a4 + 16);
    else
      v9 = v7;
    if (v9)
    {
      v10 = sub_5C154(&qword_31F018);
      v11 = (char *)swift_allocObject(v10, 8 * v9 + 32, 7);
      v12 = j__malloc_size(v11);
      v13 = v12 - 32;
      if (v12 < 32)
        v13 = v12 - 25;
      *((_QWORD *)v11 + 2) = v8;
      *((_QWORD *)v11 + 3) = 2 * (v13 >> 3);
      v14 = v11 + 32;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v11 = (char *)&_swiftEmptyArrayStorage;
      v14 = (char *)&_swiftEmptyArrayStorage + 32;
      if ((result & 1) != 0)
      {
LABEL_15:
        if ((unint64_t)v11 < a4 || (unint64_t)v14 >= a4 + 32 + 8 * v8)
        {
          sub_5C154(&qword_31E7C8);
          swift_arrayInitWithTakeFrontToBack(v14, a4 + 32);
        }
        else if (v11 != (char *)a4)
        {
          sub_5C154(&qword_31E7C8);
          swift_arrayInitWithTakeBackToFront(v14, a4 + 32);
        }
        *(_QWORD *)(a4 + 16) = 0;
        goto LABEL_26;
      }
    }
    sub_5C320(0, v8, (unint64_t)v14, a4);
LABEL_26:
    swift_bridgeObjectRelease(a4);
    return v11;
  }
  __break(1u);
  return result;
}

uint64_t sub_56CA0(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_56DEC(a1, a2, a3, a4, &qword_31F010, (uint64_t (*)(_QWORD))&type metadata accessor for Dependency);
}

char *sub_56CB4(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  size_t v12;
  char *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = *((_QWORD *)a4 + 3);
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = *((_QWORD *)a4 + 2);
    if (v7 <= v8)
      v9 = *((_QWORD *)a4 + 2);
    else
      v9 = v7;
    if (v9)
    {
      v10 = sub_5C154(&qword_31F000);
      v11 = (char *)swift_allocObject(v10, 48 * v9 + 32, 7);
      v12 = j__malloc_size(v11);
      *((_QWORD *)v11 + 2) = v8;
      *((_QWORD *)v11 + 3) = 2 * ((uint64_t)(v12 - 32) / 48);
      v13 = v11 + 32;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v11 != a4 || v13 >= &a4[48 * v8 + 32])
          memmove(v13, a4 + 32, 48 * v8);
        *((_QWORD *)a4 + 2) = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v11 = (char *)&_swiftEmptyArrayStorage;
      v13 = (char *)&_swiftEmptyArrayStorage + 32;
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_5D054(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease(a4);
    return v11;
  }
  __break(1u);
  return result;
}

uint64_t sub_56DD8(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_56DEC(a1, a2, a3, a4, &qword_31EEC0, (uint64_t (*)(_QWORD))&type metadata accessor for ToolbarActionMenuItem);
}

uint64_t sub_56DEC(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t (*a6)(_QWORD))
{
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  size_t v19;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = *(_QWORD *)(a4 + 24);
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
LABEL_29:
        result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Division by zero", 16, 2, "Swift/IntegerTypes.swift", 24, 2, 14377, 0);
LABEL_31:
        __break(1u);
        return result;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = *(_QWORD *)(a4 + 16);
  if (v10 <= v11)
    v12 = *(_QWORD *)(a4 + 16);
  else
    v12 = v10;
  if (!v12)
  {
    v18 = &_swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  v13 = sub_5C154(a5);
  v14 = *(_QWORD *)(a6(0) - 8);
  v15 = *(_QWORD *)(v14 + 72);
  v16 = *(unsigned __int8 *)(v14 + 80);
  v17 = (v16 + 32) & ~v16;
  v18 = (_QWORD *)swift_allocObject(v13, v17 + v15 * v12, v16 | 7);
  v19 = j__malloc_size(v18);
  if (!v15)
    goto LABEL_29;
  if (v19 - v17 == 0x8000000000000000 && v15 == -1)
  {
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Division results in an overflow", 31, 2, "Swift/IntegerTypes.swift", 24, 2, 14384, 0);
    goto LABEL_31;
  }
  v18[2] = v11;
  v18[3] = 2 * ((uint64_t)(v19 - v17) / v15);
LABEL_19:
  v21 = *(_QWORD *)(a6(0) - 8);
  v22 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  v23 = (unint64_t)v18 + v22;
  if ((a1 & 1) != 0)
  {
    v24 = a4 + v22;
    if ((unint64_t)v18 < a4 || v23 >= v24 + *(_QWORD *)(v21 + 72) * v11)
    {
      swift_arrayInitWithTakeFrontToBack((char *)v18 + v22, v24);
    }
    else if (v18 != (_QWORD *)a4)
    {
      swift_arrayInitWithTakeBackToFront((char *)v18 + v22, v24);
    }
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_5D860(0, v11, v23, a4, a6);
  }
  swift_bridgeObjectRelease(a4);
  return (uint64_t)v18;
}

uint64_t sub_56FF8(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_56DEC(a1, a2, a3, a4, &qword_31F1D8, type metadata accessor for ReadingInsightsDataProvider.MonthAverage);
}

char *sub_5700C(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_5717C(a1, a2, a3, a4, &qword_31F108, &qword_31F110);
}

uint64_t sub_57020(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_56DEC(a1, a2, a3, a4, &qword_31F0F0, (uint64_t (*)(_QWORD))&type metadata accessor for CoverViewModel);
}

uint64_t sub_57034(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_56DEC(a1, a2, a3, a4, &qword_31F1D0, (uint64_t (*)(_QWORD))&type metadata accessor for AudiobookInfo);
}

_QWORD *sub_57048(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      v10 = sub_5C154(&qword_31F1C8);
      v11 = (_QWORD *)swift_allocObject(v10, 8 * v9 + 32, 7);
      v12 = j__malloc_size(v11);
      v13 = v12 - 32;
      if (v12 < 32)
        v13 = v12 - 25;
      v11[2] = v8;
      v11[3] = 2 * (v13 >> 3);
      v14 = v11 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v11 = _swiftEmptyArrayStorage;
      v14 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[v8 + 4])
          memmove(v14, a4 + 4, 8 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_5D358(0, v8, (char *)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease(a4);
    return v11;
  }
  __break(1u);
  return result;
}

uint64_t sub_57154(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_56DEC(a1, a2, a3, a4, &qword_31F1C0, (uint64_t (*)(_QWORD))&type metadata accessor for BookInfo);
}

char *sub_57168(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_5717C(a1, a2, a3, a4, &qword_31EF58, &qword_31EF60);
}

char *sub_5717C(char *result, int64_t a2, char a3, char *a4, uint64_t *a5, uint64_t *a6)
{
  char v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  size_t v15;
  char *v16;

  v8 = (char)result;
  if ((a3 & 1) == 0)
  {
    v10 = a2;
    goto LABEL_8;
  }
  v9 = *((_QWORD *)a4 + 3);
  v10 = v9 >> 1;
  if ((uint64_t)(v9 >> 1) >= a2)
    goto LABEL_8;
  if (v10 + 0x4000000000000000 >= 0)
  {
    v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v10 = a2;
LABEL_8:
    v11 = *((_QWORD *)a4 + 2);
    if (v10 <= v11)
      v12 = *((_QWORD *)a4 + 2);
    else
      v12 = v10;
    if (v12)
    {
      v13 = sub_5C154(a5);
      v14 = (char *)swift_allocObject(v13, 40 * v12 + 32, 7);
      v15 = j__malloc_size(v14);
      *((_QWORD *)v14 + 2) = v11;
      *((_QWORD *)v14 + 3) = 2 * ((uint64_t)(v15 - 32) / 40);
      v16 = v14 + 32;
      if ((v8 & 1) != 0)
      {
LABEL_13:
        if (v14 != a4 || v16 >= &a4[40 * v11 + 32])
          memmove(v16, a4 + 32, 40 * v11);
        *((_QWORD *)a4 + 2) = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v14 = (char *)&_swiftEmptyArrayStorage;
      v16 = (char *)&_swiftEmptyArrayStorage + 32;
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_5D758(0, v11, (unint64_t)v16, (uint64_t)a4, a6);
LABEL_22:
    swift_bridgeObjectRelease(a4);
    return v14;
  }
  __break(1u);
  return result;
}

uint64_t sub_572A8(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_56DEC(a1, a2, a3, a4, &qword_31EF40, type metadata accessor for Shelf);
}

char *sub_572BC(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_5717C(a1, a2, a3, a4, &qword_31EF30, &qword_31EF38);
}

uint64_t sub_572D0(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_56DEC(a1, a2, a3, a4, &qword_31EF68, type metadata accessor for SeriesRoomListHeaderSegmentedItem);
}

_QWORD *sub_572E4(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      v10 = sub_5C154(&qword_31EF50);
      v11 = (_QWORD *)swift_allocObject(v10, 16 * v9 + 32, 7);
      v12 = j__malloc_size(v11);
      v13 = v12 - 32;
      if (v12 < 32)
        v13 = v12 - 17;
      v11[2] = v8;
      v11[3] = 2 * (v13 >> 4);
      v14 = v11 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v11 = _swiftEmptyArrayStorage;
      v14 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[2 * v8 + 4])
          memmove(v14, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_5D160(0, v8, (unint64_t)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease(a4);
    return v11;
  }
  __break(1u);
  return result;
}

_QWORD *sub_573F0(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  size_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      v10 = sub_5C154(&qword_31EEA8);
      v11 = (_QWORD *)swift_allocObject(v10, 48 * v9 + 32, 7);
      v12 = j__malloc_size(v11);
      v11[2] = v8;
      v11[3] = 2 * ((uint64_t)(v12 - 32) / 48);
      v13 = v11 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v11 != a4 || v13 >= &a4[6 * v8 + 4])
          memmove(v13, a4 + 4, 48 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v11 = _swiftEmptyArrayStorage;
      v13 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_5D440(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease(a4);
    return v11;
  }
  __break(1u);
  return result;
}

uint64_t sub_57514(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_56DEC(a1, a2, a3, a4, &qword_31EF48, (uint64_t (*)(_QWORD))&type metadata accessor for CardInfo);
}

_QWORD *sub_57528(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      v10 = sub_5C154(&qword_31EF20);
      v11 = (_QWORD *)swift_allocObject(v10, 32 * v9 + 32, 7);
      v12 = j__malloc_size(v11);
      v13 = v12 - 32;
      if (v12 < 32)
        v13 = v12 - 1;
      v11[2] = v8;
      v11[3] = 2 * (v13 >> 5);
      v14 = v11 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v11 = _swiftEmptyArrayStorage;
      v14 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[4 * v8 + 4])
          memmove(v14, a4 + 4, 32 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_5D54C(0, v8, (unint64_t)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease(a4);
    return v11;
  }
  __break(1u);
  return result;
}

char *sub_57634(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_5717C(a1, a2, a3, a4, &qword_31EF10, &qword_31EF18);
}

uint64_t sub_57648(char a1, int64_t a2, char a3, unint64_t a4)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  size_t v16;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
LABEL_29:
        result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Division by zero", 16, 2, "Swift/IntegerTypes.swift", 24, 2, 14377, 0);
LABEL_31:
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (!v9)
  {
    v15 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  v10 = sub_5C154(&qword_31EF00);
  v11 = *(_QWORD *)(sub_5C154(&qword_31EF08) - 8);
  v12 = *(_QWORD *)(v11 + 72);
  v13 = *(unsigned __int8 *)(v11 + 80);
  v14 = (v13 + 32) & ~v13;
  v15 = (_QWORD *)swift_allocObject(v10, v14 + v12 * v9, v13 | 7);
  v16 = j__malloc_size(v15);
  if (!v12)
    goto LABEL_29;
  if (v16 - v14 == 0x8000000000000000 && v12 == -1)
  {
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Division results in an overflow", 31, 2, "Swift/IntegerTypes.swift", 24, 2, 14384, 0);
    goto LABEL_31;
  }
  v15[2] = v8;
  v15[3] = 2 * ((uint64_t)(v16 - v14) / v12);
LABEL_19:
  v18 = *(_QWORD *)(sub_5C154(&qword_31EF08) - 8);
  v19 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  v20 = (unint64_t)v15 + v19;
  if ((a1 & 1) != 0)
  {
    v21 = a4 + v19;
    if ((unint64_t)v15 < a4 || v20 >= v21 + *(_QWORD *)(v18 + 72) * v8)
    {
      swift_arrayInitWithTakeFrontToBack((char *)v15 + v19, v21);
    }
    else if (v15 != (_QWORD *)a4)
    {
      swift_arrayInitWithTakeBackToFront((char *)v15 + v19, v21);
    }
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_5D63C(0, v8, v20, a4);
  }
  swift_bridgeObjectRelease(a4);
  return (uint64_t)v15;
}

uint64_t sub_57858(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_56DEC(a1, a2, a3, a4, &qword_31F118, type metadata accessor for ReadingInsightsDataProvider.DayEntry);
}

uint64_t sub_5786C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_56DEC(a1, a2, a3, a4, &qword_31F120, type metadata accessor for ReadingInsightsDataProvider.MonthEntry);
}

char *sub_57880(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_5717C(a1, a2, a3, a4, &qword_31F0F8, &qword_31F100);
}

uint64_t sub_57894(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_56DEC(a1, a2, a3, a4, &qword_31F198, (uint64_t (*)(_QWORD))&type metadata accessor for HighlightFrameViewModel);
}

uint64_t sub_578A8(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_56DEC(a1, a2, a3, a4, (uint64_t *)&unk_31F1E0, (uint64_t (*)(_QWORD))&type metadata accessor for Date);
}

_QWORD *sub_578BC(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      v10 = sub_5C154(&qword_31EFF0);
      v11 = (_QWORD *)swift_allocObject(v10, 32 * v9 + 32, 7);
      v12 = j__malloc_size(v11);
      v13 = v12 - 32;
      if (v12 < 32)
        v13 = v12 - 1;
      v11[2] = v8;
      v11[3] = 2 * (v13 >> 5);
      v14 = v11 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v11 = _swiftEmptyArrayStorage;
      v14 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[4 * v8 + 4])
          memmove(v14, a4 + 4, 32 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_5D978(0, v8, (unint64_t)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease(a4);
    return v11;
  }
  __break(1u);
  return result;
}

_QWORD *sub_579C8(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      v10 = sub_5C154(&qword_31EE80);
      v11 = (_QWORD *)swift_allocObject(v10, 16 * v9 + 32, 7);
      v12 = j__malloc_size(v11);
      v13 = v12 - 32;
      if (v12 < 32)
        v13 = v12 - 17;
      v11[2] = v8;
      v11[3] = 2 * (v13 >> 4);
      v14 = v11 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v11 = _swiftEmptyArrayStorage;
      v14 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[2 * v8 + 4])
          memmove(v14, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_5DA6C(0, v8, (unint64_t)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease(a4);
    return v11;
  }
  __break(1u);
  return result;
}

_QWORD *sub_57AD4(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      v10 = sub_5C154(&qword_31EE70);
      v11 = (_QWORD *)swift_allocObject(v10, 16 * v9 + 32, 7);
      v12 = j__malloc_size(v11);
      v13 = v12 - 32;
      if (v12 < 32)
        v13 = v12 - 17;
      v11[2] = v8;
      v11[3] = 2 * (v13 >> 4);
      v14 = v11 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v11 = _swiftEmptyArrayStorage;
      v14 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[2 * v8 + 4])
          memmove(v14, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_5D250(0, v8, (unint64_t)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease(a4);
    return v11;
  }
  __break(1u);
  return result;
}

_QWORD *sub_57BE0(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  _QWORD *v11;
  size_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      v10 = sub_5C154(&qword_31EE68);
      v11 = (_QWORD *)swift_allocObject(v10, v9 + 32, 7);
      v12 = j__malloc_size(v11);
      v11[2] = v8;
      v11[3] = 2 * v12 - 64;
      v13 = v11 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v11 != a4 || v13 >= (_QWORD *)((char *)a4 + v8 + 32))
          memmove(v13, a4 + 4, v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v11 = _swiftEmptyArrayStorage;
      v13 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_5DB74(0, v8, (char *)v13, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease(a4);
    return v11;
  }
  __break(1u);
  return result;
}

uint64_t sub_57CD8(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12[3];
  void *ObjectType;

  v6 = sub_57DA8(v12, 0, 0, 1, a1, a2);
  v7 = v12[0];
  if (v6)
  {
    v8 = v6;
    ObjectType = (void *)swift_getObjectType(v6);
    v12[0] = v8;
    v9 = *a3;
    if (*a3)
    {
      sub_5DC5C((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectType = &type metadata for _StringGuts;
    v12[0] = a1;
    v12[1] = a2;
    v10 = *a3;
    if (*a3)
    {
      sub_5DC5C((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain(a2);
  }
  _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(v12);
  return v7;
}

uint64_t sub_57DA8(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  uint64_t v8;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  int v14;
  _QWORD __src[2];

  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        v12 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v12)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (_QWORD *)&__dst[v12] || (char *)__src + v12 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            UnsafeMutableRawBufferPointer.subscript.setter(0, HIBYTE(a6) & 0xF, __dst, a3);
            result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    result = sub_57F60(a5, a6);
    *a1 = v13;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0)
    goto LABEL_13;
  if ((a5 & 0x1000000000000000) != 0)
  {
    v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  v8 = _StringObject.sharedUTF8.getter(a5, a6);
  if (!v8)
  {
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Unexpectedly found nil while unwrapping an Optional value", 57, 2, "Swift/StringTesting.swift", 25, 2, 151, 0);
    __break(1u);
LABEL_17:
    LOBYTE(v14) = 2;
    result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutableRawPointer.initializeMemory overlapping range", 58, 2, "Swift/UnsafeRawPointer.swift", 28, v14, 1173, 0);
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0)
    return 0;
  else
    return swift_unknownObjectRetain(a6 & 0xFFFFFFFFFFFFFFFLL);
}

uint64_t sub_57F60(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v2 = (uint64_t)sub_57FF4(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native(v2) & 1) == 0)
    v2 = sub_58168(0, *(_QWORD *)(v2 + 16) + 1, 1, (char *)v2);
  v4 = *(_QWORD *)(v2 + 16);
  v3 = *(_QWORD *)(v2 + 24);
  if (v4 >= v3 >> 1)
    v2 = sub_58168(v3 > 1, v4 + 1, 1, (char *)v2);
  *(_QWORD *)(v2 + 16) = v4 + 1;
  *(_BYTE *)(v2 + 32 + v4) = 0;
  return v2;
}

_QWORD *sub_57FF4(uint64_t a1, unint64_t a2)
{
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  char v8;
  _QWORD *result;
  int v10;

  if ((a2 & 0x1000000000000000) != 0)
    goto LABEL_10;
  if ((a2 & 0x2000000000000000) != 0)
    v4 = HIBYTE(a2) & 0xF;
  else
    v4 = a1 & 0xFFFFFFFFFFFFLL;
  if (v4)
  {
    while (1)
    {
      v5 = sub_237610(v4, 0);
      if (v4 < 0)
        break;
      v6 = v5;
      v7 = _StringGuts.copyUTF8(into:)(v5 + 4, v4, a1, a2);
      if ((v8 & 1) != 0)
        goto LABEL_14;
      if (v7 == v4)
        return v6;
      LOBYTE(v10) = 2;
      _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "invalid Collection: less than 'count' elements in collection", 60, 2, "Swift/ContiguousArrayBuffer.swift", 33, v10, 1122, 0);
      __break(1u);
LABEL_10:
      v4 = String.UTF8View._foreignCount()();
      if (!v4)
        return &_swiftEmptyArrayStorage;
    }
    LOBYTE(v10) = 2;
    _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutableBufferPointer with negative count", 46, 2, "Swift/UnsafeBufferPointer.swift", 31, v10, 71, 0);
    __break(1u);
LABEL_14:
    LOBYTE(v10) = 2;
    result = (_QWORD *)_assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Insufficient space allocated to copy string contents", 52, 2, "Swift/StringUTF8View.swift", 26, v10, 430, 0);
    __break(1u);
  }
  else
  {
    return &_swiftEmptyArrayStorage;
  }
  return result;
}

uint64_t sub_58168(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  char *v11;
  size_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_5C154(&qword_31F040);
    v11 = (char *)swift_allocObject(v10, v9 + 32, 7);
    v12 = j__malloc_size(v11);
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * v12 - 64;
  }
  else
  {
    v11 = (char *)&_swiftEmptyArrayStorage;
  }
  v13 = v11 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v13 >= &v14[v8])
      memmove(v13, v14, v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v14 >= &v13[v8] || v13 >= &v14[v8])
  {
    memcpy(v13, v14, v8);
LABEL_28:
    swift_bridgeObjectRelease(a4);
    return (uint64_t)v11;
  }
LABEL_30:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

unint64_t sub_582B4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  Swift::Int v5;
  _QWORD v7[9];

  Hasher.init(_seed:)(v7, *(_QWORD *)(v2 + 40));
  String.hash(into:)(v7, a1, a2);
  v5 = Hasher._finalize()();
  return sub_58704(a1, a2, v5);
}

unint64_t sub_58318(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  Swift::Int v4;

  v2 = v1;
  v4 = AnyHashable._rawHashValue(seed:)(*(_QWORD *)(v2 + 40));
  return sub_587E4(a1, v4);
}

unint64_t sub_58348(char a1)
{
  uint64_t v1;
  uint64_t v2;
  char v4;
  Swift::Int v5;
  _QWORD v7[9];

  v2 = v1;
  v4 = a1 & 1;
  Hasher.init(_seed:)(v7, *(_QWORD *)(v2 + 40));
  Hasher._combine(_:)(a1 & 1);
  v5 = Hasher._finalize()();
  return sub_588A8(v4, v5);
}

unint64_t sub_583A4(unsigned __int8 a1)
{
  uint64_t v1;
  Swift::Int v3;
  _QWORD v5[9];

  Hasher.init(_seed:)(v5, *(_QWORD *)(v1 + 40));
  Hasher._combine(_:)(a1);
  v3 = Hasher._finalize()();
  return sub_58964(a1, v3);
}

unint64_t sub_583FC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  Swift::Int v7;
  _QWORD v9[9];

  v3 = *(_QWORD *)(v1 + 40);
  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  v6 = v5;
  Hasher.init(_seed:)(v9, v3);
  String.hash(into:)(v9, v4, v6);
  v7 = Hasher._finalize()();
  swift_bridgeObjectRelease(v6);
  return sub_58A04(a1, v7);
}

unint64_t sub_5847C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  Swift::Int v7;
  _QWORD v9[9];

  v3 = *(_QWORD *)(v1 + 40);
  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  v6 = v5;
  Hasher.init(_seed:)(v9, v3);
  String.hash(into:)(v9, v4, v6);
  v7 = Hasher._finalize()();
  swift_bridgeObjectRelease(v6);
  return sub_58A04(a1, v7);
}

unint64_t sub_58508(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  Swift::Int v12;
  _QWORD v15[9];

  v2 = v1;
  v4 = type metadata accessor for Date(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v15[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_5C154(&qword_31F128);
  __chkstk_darwin(v8);
  v10 = (char *)&v15[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  Hasher.init(_seed:)(v15, *(_QWORD *)(v2 + 40));
  sub_5E1A4(a1, (uint64_t)v10, &qword_31F128);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v10, 1, v4) == 1)
  {
    Hasher._combine(_:)(0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v10, v4);
    Hasher._combine(_:)(1u);
    v11 = sub_5C9A0(&qword_31F130, 255, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
    dispatch thunk of Hashable.hash(into:)(v15, v4, v11);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  v12 = Hasher._finalize()();
  return sub_58B78(a1, v12);
}

unint64_t sub_58684(unsigned __int8 a1)
{
  uint64_t v1;
  uint64_t v2;
  int v4;
  Swift::Int v5;
  _QWORD v7[9];

  v2 = v1;
  v4 = a1;
  Hasher.init(_seed:)(v7, *(_QWORD *)(v2 + 40));
  if (v4 == 9)
  {
    Hasher._combine(_:)(0);
  }
  else
  {
    Hasher._combine(_:)(1u);
    Hasher._combine(_:)(a1);
  }
  v5 = Hasher._finalize()();
  return sub_58EA8(a1, v5);
}

unint64_t sub_58704(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  BOOL v16;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * v6);
    v11 = v10[1];
    v12 = *v10 == a1 && v11 == a2;
    if (!v12 && (_stringCompareWithSmolCheck(_:_:expecting:)(*v10, v11, a1, a2, 0) & 1) == 0)
    {
      v13 = ~v5;
      do
      {
        v6 = (v6 + 1) & v13;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          break;
        v14 = (_QWORD *)(v9 + 16 * v6);
        v15 = v14[1];
        v16 = *v14 == a1 && v15 == a2;
      }
      while (!v16 && (_stringCompareWithSmolCheck(_:_:expecting:)(*v14, v15, a1, a2, 0) & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_587E4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v6;
  char v7;
  _BYTE v9[40];

  v3 = -1 << *(_BYTE *)(v2 + 32);
  v4 = a2 & ~v3;
  if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
  {
    v6 = ~v3;
    do
    {
      sub_5DCB0(*(_QWORD *)(v2 + 48) + 40 * v4, (uint64_t)v9);
      v7 = static AnyHashable.== infix(_:_:)(v9, a1);
      sub_5DCEC((uint64_t)v9);
      if ((v7 & 1) != 0)
        break;
      v4 = (v4 + 1) & v6;
    }
    while (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

unint64_t sub_588A8(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = *(_QWORD *)(v2 + 48);
    if (((((a1 & 1) == 0) ^ *(unsigned __int8 *)(v7 + result)) & 1) == 0)
    {
      v8 = ~v5;
      for (result = (result + 1) & v8;
            ((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v8)
      {
        if (((((a1 & 1) == 0) ^ *(_BYTE *)(v7 + result)) & 1) != 0)
          break;
      }
    }
  }
  return result;
}

unint64_t sub_58964(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = *(_QWORD *)(v2 + 48);
    if (*(unsigned __int8 *)(v7 + result) != a1)
    {
      v8 = ~v5;
      for (result = (result + 1) & v8;
            ((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v8)
      {
        if (*(unsigned __int8 *)(v7 + result) == a1)
          break;
      }
    }
  }
  return result;
}

unint64_t sub_58A04(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  char v22;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  v5 = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
  {
    v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(*(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v5));
    v9 = v8;
    v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
    if (v7 == v10 && v9 == v11)
    {
LABEL_16:
      swift_bridgeObjectRelease_n(v9, 2);
      return v5;
    }
    v13 = v11;
    v14 = _stringCompareWithSmolCheck(_:_:expecting:)(v7, v9, v10, v11, 0);
    swift_bridgeObjectRelease(v9);
    swift_bridgeObjectRelease(v13);
    if ((v14 & 1) == 0)
    {
      v15 = ~v4;
      v5 = (v5 + 1) & v15;
      if (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
      {
        while (1)
        {
          v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(*(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v5));
          v9 = v17;
          v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
          if (v16 == v18 && v9 == v19)
            break;
          v21 = v19;
          v22 = _stringCompareWithSmolCheck(_:_:expecting:)(v16, v9, v18, v19, 0);
          swift_bridgeObjectRelease(v9);
          swift_bridgeObjectRelease(v21);
          if ((v22 & 1) == 0)
          {
            v5 = (v5 + 1) & v15;
            if (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
              continue;
          }
          return v5;
        }
        goto LABEL_16;
      }
    }
  }
  return v5;
}

unint64_t sub_58B78(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unsigned int (*v21)(char *, uint64_t, uint64_t);
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char v25;
  void (*v26)(char *, uint64_t);
  char *v27;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v3 = v2;
  v35 = a1;
  v5 = type metadata accessor for Date(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v30 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_5C154(&qword_31F138);
  __chkstk_darwin(v8);
  v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_5C154(&qword_31F128);
  __chkstk_darwin(v11);
  __chkstk_darwin(v12);
  v16 = (char *)&v29 - v15;
  v17 = v3 + 64;
  v36 = v3;
  v18 = -1 << *(_BYTE *)(v3 + 32);
  v19 = a2 & ~v18;
  if (((*(_QWORD *)(v3 + 64 + ((v19 >> 3) & 0xFFFFFFFFFFFFF8)) >> v19) & 1) != 0)
  {
    v32 = v14;
    v33 = ~v18;
    v34 = *(_QWORD *)(v13 + 72);
    v29 = v8;
    v31 = v3 + 64;
    while (1)
    {
      sub_5E1A4(*(_QWORD *)(v36 + 48) + v34 * v19, (uint64_t)v16, &qword_31F128);
      v20 = (uint64_t)&v10[*(int *)(v8 + 48)];
      sub_5E1A4((uint64_t)v16, (uint64_t)v10, &qword_31F128);
      sub_5E1A4(v35, v20, &qword_31F128);
      v21 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48);
      if (v21(v10, 1, v5) == 1)
        break;
      v22 = v32;
      sub_5E1A4((uint64_t)v10, v32, &qword_31F128);
      if (v21((char *)v20, 1, v5) == 1)
      {
        (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v22, v5);
        v17 = v31;
LABEL_4:
        sub_5E09C((uint64_t)v10, &qword_31F138);
        sub_5E09C((uint64_t)v16, &qword_31F128);
        goto LABEL_5;
      }
      v23 = v30;
      (*(void (**)(char *, uint64_t, uint64_t))(v6 + 32))(v30, v20, v5);
      v24 = sub_5C9A0(&qword_31F140, 255, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
      v25 = dispatch thunk of static Equatable.== infix(_:_:)(v22, v23, v5, v24);
      v26 = *(void (**)(char *, uint64_t))(v6 + 8);
      v27 = v23;
      v8 = v29;
      v26(v27, v5);
      v26((char *)v22, v5);
      sub_5E09C((uint64_t)v10, &qword_31F128);
      sub_5E09C((uint64_t)v16, &qword_31F128);
      v17 = v31;
      if ((v25 & 1) != 0)
        return v19;
LABEL_5:
      v19 = (v19 + 1) & v33;
      if (((*(_QWORD *)(v17 + ((v19 >> 3) & 0xFFFFFFFFFFFFF8)) >> v19) & 1) == 0)
        return v19;
    }
    if (v21((char *)v20, 1, v5) == 1)
    {
      sub_5E09C((uint64_t)v10, &qword_31F128);
      sub_5E09C((uint64_t)v16, &qword_31F128);
      return v19;
    }
    goto LABEL_4;
  }
  return v19;
}

unint64_t sub_58EA8(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  unint64_t result;
  uint64_t v6;
  int v7;

  v4 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v6 = ~v4;
    do
    {
      v7 = *(unsigned __int8 *)(*(_QWORD *)(v2 + 48) + result);
      if (v7 == 9)
      {
        if (a1 == 9)
          return result;
      }
      else if (a1 != 9 && v7 == a1)
      {
        return result;
      }
      result = (result + 1) & v6;
    }
    while (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0);
  }
  return result;
}

uint64_t *sub_58F34(uint64_t isStackAllocationSafe, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v4;
  char v5;
  unsigned int v6;
  unint64_t v7;
  uint64_t v8;
  size_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v13;

  v4 = isStackAllocationSafe;
  v5 = *(_BYTE *)(isStackAllocationSafe + 32);
  v6 = v5 & 0x3F;
  v7 = (1 << v5) + 63;
  v8 = v7 >> 6;
  v9 = 8 * (v7 >> 6);
  if (v6 <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(8 * (v7 >> 6), 8), (isStackAllocationSafe & 1) != 0))
  {
    __chkstk_darwin(isStackAllocationSafe);
    bzero((char *)&v13 - ((v9 + 15) & 0x3FFFFFFFFFFFFFF0), v9);
    v10 = sub_59098((uint64_t)&v13 - ((v9 + 15) & 0x3FFFFFFFFFFFFFF0), v8, v4, a2);
    if (v2)
      swift_willThrow(v10);
    else
      return (uint64_t *)v10;
  }
  else
  {
    v11 = (void *)swift_slowAlloc(v9, -1);
    bzero(v11, v9);
    a2 = (uint64_t *)sub_59098((uint64_t)v11, v8, v4, a2);
    swift_slowDealloc(v11, -1, -1);
  }
  return a2;
}

uint64_t sub_59098(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  uint64_t v14;
  id v15;
  Swift::String v16;
  Swift::Bool v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  int64_t v26;

  v23 = (unint64_t *)result;
  v24 = 0;
  v5 = 0;
  v25 = a3 + 64;
  v6 = 1 << *(_BYTE *)(a3 + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & *(_QWORD *)(a3 + 64);
  v26 = (unint64_t)(v6 + 63) >> 6;
  while (1)
  {
    if (v8)
    {
      v9 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v10 = v9 | (v5 << 6);
      goto LABEL_5;
    }
    v18 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v18 >= v26)
      return sub_592A8(v23, a2, v24, a3);
    v19 = *(_QWORD *)(v25 + 8 * v18);
    ++v5;
    if (!v19)
    {
      v5 = v18 + 1;
      if (v18 + 1 >= v26)
        return sub_592A8(v23, a2, v24, a3);
      v19 = *(_QWORD *)(v25 + 8 * v5);
      if (!v19)
      {
        v5 = v18 + 2;
        if (v18 + 2 >= v26)
          return sub_592A8(v23, a2, v24, a3);
        v19 = *(_QWORD *)(v25 + 8 * v5);
        if (!v19)
          break;
      }
    }
LABEL_20:
    v8 = (v19 - 1) & v19;
    v10 = __clz(__rbit64(v19)) + (v5 << 6);
LABEL_5:
    v11 = *(_QWORD *)(*(_QWORD *)(a3 + 48) + 16 * v10 + 8);
    v12 = *(void **)(*(_QWORD *)(a3 + 56) + 8 * v10);
    v14 = *a4;
    v13 = (void *)a4[1];
    swift_bridgeObjectRetain(v11);
    v15 = v12;
    swift_bridgeObjectRetain(v13);
    v16._countAndFlagsBits = v14;
    v16._object = v13;
    v17 = String.hasSuffix(_:)(v16);
    swift_bridgeObjectRelease(v11);

    result = swift_bridgeObjectRelease(v13);
    if (v17)
    {
      *(unint64_t *)((char *)v23 + ((v10 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v10;
      if (__OFADD__(v24++, 1))
      {
        __break(1u);
        return sub_592A8(v23, a2, v24, a3);
      }
    }
  }
  v20 = v18 + 3;
  if (v20 >= v26)
    return sub_592A8(v23, a2, v24, a3);
  v19 = *(_QWORD *)(v25 + 8 * v20);
  if (v19)
  {
    v5 = v20;
    goto LABEL_20;
  }
  while (1)
  {
    v5 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v5 >= v26)
      return sub_592A8(v23, a2, v24, a3);
    v19 = *(_QWORD *)(v25 + 8 * v5);
    ++v20;
    if (v19)
      goto LABEL_20;
  }
LABEL_26:
  __break(1u);
  return result;
}

Swift::Int sub_592A8(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  Swift::Int result;
  Swift::Int v9;
  unint64_t v10;
  uint64_t v11;
  Swift::Int v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  id v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  _QWORD *v31;
  unint64_t *v33;
  uint64_t v34;
  _QWORD v35[9];

  if (!a3)
    return (Swift::Int)&_swiftEmptyDictionarySingleton;
  v4 = a4;
  v5 = a3;
  if (*(_QWORD *)(a4 + 16) == a3)
  {
    swift_retain(a4);
    return v4;
  }
  sub_5C154(&qword_31F020);
  result = static _DictionaryStorage.allocate(capacity:)(v5);
  v9 = result;
  v33 = a1;
  v34 = a2;
  if (a2 < 1)
    v10 = 0;
  else
    v10 = *a1;
  v11 = 0;
  v12 = result + 64;
  while (1)
  {
    if (v10)
    {
      v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v14 = v13 | (v11 << 6);
    }
    else
    {
      v15 = v11 + 1;
      if (__OFADD__(v11, 1))
        goto LABEL_40;
      if (v15 >= v34)
        return v9;
      v16 = v33[v15];
      ++v11;
      if (!v16)
      {
        v11 = v15 + 1;
        if (v15 + 1 >= v34)
          return v9;
        v16 = v33[v11];
        if (!v16)
        {
          v11 = v15 + 2;
          if (v15 + 2 >= v34)
            return v9;
          v16 = v33[v11];
          if (!v16)
          {
            v17 = v15 + 3;
            if (v17 >= v34)
              return v9;
            v16 = v33[v17];
            if (!v16)
            {
              while (1)
              {
                v11 = v17 + 1;
                if (__OFADD__(v17, 1))
                  goto LABEL_41;
                if (v11 >= v34)
                  return v9;
                v16 = v33[v11];
                ++v17;
                if (v16)
                  goto LABEL_24;
              }
            }
            v11 = v17;
          }
        }
      }
LABEL_24:
      v10 = (v16 - 1) & v16;
      v14 = __clz(__rbit64(v16)) + (v11 << 6);
    }
    v18 = (uint64_t *)(*(_QWORD *)(v4 + 48) + 16 * v14);
    v20 = *v18;
    v19 = v18[1];
    v21 = *(void **)(*(_QWORD *)(v4 + 56) + 8 * v14);
    Hasher.init(_seed:)(v35, *(_QWORD *)(v9 + 40));
    swift_bridgeObjectRetain(v19);
    v22 = v21;
    String.hash(into:)(v35, v20, v19);
    result = Hasher._finalize()();
    v23 = -1 << *(_BYTE *)(v9 + 32);
    v24 = result & ~v23;
    v25 = v24 >> 6;
    if (((-1 << v24) & ~*(_QWORD *)(v12 + 8 * (v24 >> 6))) != 0)
    {
      v26 = __clz(__rbit64((-1 << v24) & ~*(_QWORD *)(v12 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v27 = 0;
      v28 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (++v25 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v29 = v25 == v28;
        if (v25 == v28)
          v25 = 0;
        v27 |= v29;
        v30 = *(_QWORD *)(v12 + 8 * v25);
      }
      while (v30 == -1);
      v26 = __clz(__rbit64(~v30)) + (v25 << 6);
    }
    *(_QWORD *)(v12 + ((v26 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v26;
    v31 = (_QWORD *)(*(_QWORD *)(v9 + 48) + 16 * v26);
    *v31 = v20;
    v31[1] = v19;
    *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v26) = v22;
    ++*(_QWORD *)(v9 + 16);
    if (__OFSUB__(v5--, 1))
      break;
    if (!v5)
      return v9;
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

Swift::Int sub_59540(unint64_t *a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  Swift::Int result;
  Swift::Int v12;
  unint64_t v13;
  uint64_t v14;
  Swift::Int v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  char v33;
  unint64_t v34;
  BOOL v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v39;
  unint64_t *v40;
  _QWORD *v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD v46[9];

  v40 = a1;
  v7 = type metadata accessor for TopAuthorHighlightData(0);
  v44 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  __chkstk_darwin(v8);
  v43 = (char *)&v39 - v10;
  if (!a3)
    return (Swift::Int)&_swiftEmptyDictionarySingleton;
  if (a4[2] == a3)
  {
    swift_retain(a4);
    return (Swift::Int)a4;
  }
  v42 = v9;
  sub_5C154(&qword_31F1A0);
  result = static _DictionaryStorage.allocate(capacity:)(a3);
  v12 = result;
  v39 = a2;
  if (a2 < 1)
    v13 = 0;
  else
    v13 = *v40;
  v14 = 0;
  v15 = result + 64;
  v16 = v42;
  v17 = (uint64_t)v43;
  v41 = a4;
  while (1)
  {
    if (v13)
    {
      v18 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v45 = v14;
      v19 = v18 | (v14 << 6);
    }
    else
    {
      v20 = v14 + 1;
      if (__OFADD__(v14, 1))
        goto LABEL_40;
      if (v20 >= v39)
        return v12;
      v21 = v40[v20];
      v22 = v14 + 1;
      if (!v21)
      {
        v22 = v14 + 2;
        if (v14 + 2 >= v39)
          return v12;
        v21 = v40[v22];
        if (!v21)
        {
          v22 = v14 + 3;
          if (v14 + 3 >= v39)
            return v12;
          v21 = v40[v22];
          if (!v21)
          {
            v23 = v14 + 4;
            if (v14 + 4 >= v39)
              return v12;
            v21 = v40[v23];
            if (!v21)
            {
              while (1)
              {
                v22 = v23 + 1;
                if (__OFADD__(v23, 1))
                  goto LABEL_41;
                if (v22 >= v39)
                  return v12;
                v21 = v40[v22];
                ++v23;
                if (v21)
                  goto LABEL_24;
              }
            }
            v22 = v14 + 4;
          }
        }
      }
LABEL_24:
      v13 = (v21 - 1) & v21;
      v45 = v22;
      v19 = __clz(__rbit64(v21)) + (v22 << 6);
    }
    v24 = a4[7];
    v25 = (uint64_t *)(a4[6] + 16 * v19);
    v26 = *v25;
    v27 = v25[1];
    v28 = *(_QWORD *)(v44 + 72);
    sub_5E11C(v24 + v28 * v19, v17, type metadata accessor for TopAuthorHighlightData);
    sub_5E160(v17, v16, type metadata accessor for TopAuthorHighlightData);
    Hasher.init(_seed:)(v46, *(_QWORD *)(v12 + 40));
    swift_bridgeObjectRetain(v27);
    String.hash(into:)(v46, v26, v27);
    result = Hasher._finalize()();
    v29 = -1 << *(_BYTE *)(v12 + 32);
    v30 = result & ~v29;
    v31 = v30 >> 6;
    if (((-1 << v30) & ~*(_QWORD *)(v15 + 8 * (v30 >> 6))) != 0)
    {
      v32 = __clz(__rbit64((-1 << v30) & ~*(_QWORD *)(v15 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
      v16 = v42;
    }
    else
    {
      v33 = 0;
      v34 = (unint64_t)(63 - v29) >> 6;
      v16 = v42;
      do
      {
        if (++v31 == v34 && (v33 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v35 = v31 == v34;
        if (v31 == v34)
          v31 = 0;
        v33 |= v35;
        v36 = *(_QWORD *)(v15 + 8 * v31);
      }
      while (v36 == -1);
      v32 = __clz(__rbit64(~v36)) + (v31 << 6);
    }
    *(_QWORD *)(v15 + ((v32 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v32;
    v37 = (_QWORD *)(*(_QWORD *)(v12 + 48) + 16 * v32);
    *v37 = v26;
    v37[1] = v27;
    result = sub_5E160(v16, *(_QWORD *)(v12 + 56) + v32 * v28, type metadata accessor for TopAuthorHighlightData);
    ++*(_QWORD *)(v12 + 16);
    if (__OFSUB__(a3--, 1))
      break;
    a4 = v41;
    v14 = v45;
    if (!a3)
      return v12;
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

Swift::Int sub_5989C(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  Swift::Int result;
  Swift::Int v8;
  unint64_t v9;
  uint64_t v10;
  Swift::Int v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v31;
  _QWORD v33[9];

  if (!a3)
    return (Swift::Int)&_swiftEmptyDictionarySingleton;
  v4 = a4;
  v5 = a3;
  if (*(_QWORD *)(a4 + 16) == a3)
  {
    swift_retain(a4);
    return v4;
  }
  sub_5C154(&qword_31EF28);
  result = static _DictionaryStorage.allocate(capacity:)(v5);
  v8 = result;
  v31 = a2;
  if (a2 < 1)
    v9 = 0;
  else
    v9 = *a1;
  v10 = 0;
  v11 = result + 64;
  while (1)
  {
    if (v9)
    {
      v12 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v13 = v12 | (v10 << 6);
    }
    else
    {
      v14 = v10 + 1;
      if (__OFADD__(v10, 1))
        goto LABEL_40;
      if (v14 >= v31)
        return v8;
      v15 = a1[v14];
      ++v10;
      if (!v15)
      {
        v10 = v14 + 1;
        if (v14 + 1 >= v31)
          return v8;
        v15 = a1[v10];
        if (!v15)
        {
          v10 = v14 + 2;
          if (v14 + 2 >= v31)
            return v8;
          v15 = a1[v10];
          if (!v15)
          {
            v16 = v14 + 3;
            if (v16 >= v31)
              return v8;
            v15 = a1[v16];
            if (!v15)
            {
              while (1)
              {
                v10 = v16 + 1;
                if (__OFADD__(v16, 1))
                  goto LABEL_41;
                if (v10 >= v31)
                  return v8;
                v15 = a1[v10];
                ++v16;
                if (v15)
                  goto LABEL_24;
              }
            }
            v10 = v16;
          }
        }
      }
LABEL_24:
      v9 = (v15 - 1) & v15;
      v13 = __clz(__rbit64(v15)) + (v10 << 6);
    }
    v17 = (uint64_t *)(*(_QWORD *)(v4 + 48) + 16 * v13);
    v19 = *v17;
    v18 = v17[1];
    v20 = *(_QWORD *)(*(_QWORD *)(v4 + 56) + 8 * v13);
    Hasher.init(_seed:)(v33, *(_QWORD *)(v8 + 40));
    swift_bridgeObjectRetain(v18);
    String.hash(into:)(v33, v19, v18);
    result = Hasher._finalize()();
    v21 = -1 << *(_BYTE *)(v8 + 32);
    v22 = result & ~v21;
    v23 = v22 >> 6;
    if (((-1 << v22) & ~*(_QWORD *)(v11 + 8 * (v22 >> 6))) != 0)
    {
      v24 = __clz(__rbit64((-1 << v22) & ~*(_QWORD *)(v11 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v21) >> 6;
      do
      {
        if (++v23 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v27 = v23 == v26;
        if (v23 == v26)
          v23 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v11 + 8 * v23);
      }
      while (v28 == -1);
      v24 = __clz(__rbit64(~v28)) + (v23 << 6);
    }
    *(_QWORD *)(v11 + ((v24 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v24;
    v29 = (_QWORD *)(*(_QWORD *)(v8 + 48) + 16 * v24);
    *v29 = v19;
    v29[1] = v18;
    *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v24) = v20;
    ++*(_QWORD *)(v8 + 16);
    if (__OFSUB__(v5--, 1))
      break;
    if (!v5)
      return v8;
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

void sub_59B40(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  uint64_t *v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;

  v5 = v4;
  v10 = *v4;
  v12 = sub_582B4(a2, a3);
  v13 = *(_QWORD *)(v10 + 16);
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v16 = v11;
  v17 = *(_QWORD *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0)
    goto LABEL_7;
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_5A788();
LABEL_7:
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
    {
LABEL_8:
      v19 = v18[7];

      *(_QWORD *)(v19 + 8 * v12) = a1;
      return;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    v22 = (uint64_t *)(v18[6] + 16 * v12);
    *v22 = a2;
    v22[1] = a3;
    *(_QWORD *)(v18[7] + 8 * v12) = a1;
    v23 = v18[2];
    v24 = __OFADD__(v23, 1);
    v25 = v23 + 1;
    if (!v24)
    {
      v18[2] = v25;
      swift_bridgeObjectRetain(a3);
      return;
    }
    goto LABEL_14;
  }
  sub_13A804(v15, a4 & 1);
  v20 = sub_582B4(a2, a3);
  if ((v16 & 1) == (v21 & 1))
  {
    v12 = v20;
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
  __break(1u);
}

uint64_t sub_59C9C(uint64_t a1, char a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  unint64_t v20;
  char v21;

  v4 = (_QWORD **)v3;
  v8 = (_QWORD *)*v3;
  v10 = sub_583A4(a2);
  v11 = v8[2];
  v12 = (v9 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
  }
  else
  {
    v14 = v9;
    v15 = v8[3];
    if (v15 >= v13 && (a3 & 1) != 0)
    {
LABEL_7:
      v16 = *v4;
      if ((v14 & 1) != 0)
      {
LABEL_8:
        v17 = v16[7];
        v18 = type metadata accessor for Date(0);
        return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v17 + *(_QWORD *)(*(_QWORD *)(v18 - 8) + 72) * v10, a1, v18);
      }
      return sub_5A510(v10, a2, a1, v16);
    }
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_5AB18();
      goto LABEL_7;
    }
    sub_13AE64(v13, a3 & 1);
    v20 = sub_583A4(a2);
    if ((v14 & 1) == (v21 & 1))
    {
      v10 = v20;
      v16 = *v4;
      if ((v14 & 1) != 0)
        goto LABEL_8;
      return sub_5A510(v10, a2, a1, v16);
    }
  }
  result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for Page.LifecycleEventKind);
  __break(1u);
  return result;
}

_OWORD *sub_59DC0(_OWORD *a1, void *a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v7;
  char v8;
  unint64_t v9;
  uint64_t v10;
  _BOOL8 v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  _OWORD *result;
  unint64_t v18;
  char v19;
  uint64_t v20;

  v4 = (_QWORD **)v3;
  v7 = (_QWORD *)*v3;
  v9 = sub_583FC((uint64_t)a2);
  v10 = v7[2];
  v11 = (v8 & 1) == 0;
  v12 = v10 + v11;
  if (__OFADD__(v10, v11))
  {
    __break(1u);
  }
  else
  {
    v13 = v8;
    v14 = v7[3];
    if (v14 >= v12 && (a3 & 1) != 0)
    {
LABEL_7:
      v15 = *v4;
      if ((v13 & 1) != 0)
      {
LABEL_8:
        v16 = (_QWORD *)(v15[7] + 32 * v9);
        _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(v16);
        return sub_5D000(a1, v16);
      }
      goto LABEL_11;
    }
    if (v14 >= v12 && (a3 & 1) == 0)
    {
      sub_5B138();
      goto LABEL_7;
    }
    sub_13BB48(v12, a3 & 1);
    v18 = sub_583FC((uint64_t)a2);
    if ((v13 & 1) == (v19 & 1))
    {
      v9 = v18;
      v15 = *v4;
      if ((v13 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_5A59C(v9, (uint64_t)a2, a1, v15);
      return a2;
    }
  }
  type metadata accessor for Key(0);
  result = (_OWORD *)KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v20);
  __break(1u);
  return result;
}

uint64_t sub_59EE0(__int128 *a1, char a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t result;
  unint64_t v19;
  char v20;

  v4 = (_QWORD **)v3;
  v8 = (_QWORD *)*v3;
  v10 = sub_583A4(a2);
  v11 = v8[2];
  v12 = (v9 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
  }
  else
  {
    v14 = v9;
    v15 = v8[3];
    if (v15 >= v13 && (a3 & 1) != 0)
    {
LABEL_7:
      v16 = *v4;
      if ((v14 & 1) != 0)
      {
LABEL_8:
        v17 = (_QWORD *)(v16[7] + 40 * v10);
        _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(v17);
        return sub_5DC98(a1, (uint64_t)v17);
      }
      return sub_5A600(v10, a2, a1, v16);
    }
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_5B2FC();
      goto LABEL_7;
    }
    sub_13BE80(v13, a3 & 1);
    v19 = sub_583A4(a2);
    if ((v14 & 1) == (v20 & 1))
    {
      v10 = v19;
      v16 = *v4;
      if ((v14 & 1) != 0)
        goto LABEL_8;
      return sub_5A600(v10, a2, a1, v16);
    }
  }
  result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for Page.LifecycleEventKind);
  __break(1u);
  return result;
}

void sub_59FFC(_OWORD *a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD **v5;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  unint64_t v20;
  char v21;

  v5 = (_QWORD **)v4;
  v10 = (_QWORD *)*v4;
  v12 = sub_582B4(a2, a3);
  v13 = v10[2];
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
  }
  else
  {
    v16 = v11;
    v17 = v10[3];
    if (v17 >= v15 && (a4 & 1) != 0)
    {
LABEL_7:
      v18 = *v5;
      if ((v16 & 1) != 0)
      {
LABEL_8:
        v19 = (_QWORD *)(v18[7] + 32 * v12);
        _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(v19);
        sub_5D000(a1, v19);
        return;
      }
      goto LABEL_11;
    }
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_5B708(&qword_31ED78, (void (*)(unint64_t, _BYTE *))sub_5E1EC, (void (*)(_BYTE *, uint64_t))sub_5D000);
      goto LABEL_7;
    }
    sub_13C170(v15, a4 & 1);
    v20 = sub_582B4(a2, a3);
    if ((v16 & 1) == (v21 & 1))
    {
      v12 = v20;
      v18 = *v5;
      if ((v16 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_5A668(v12, a2, a3, a1, v18);
      swift_bridgeObjectRetain(a3);
      return;
    }
  }
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
  __break(1u);
}

void sub_5A144(__int128 *a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD **v5;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  unint64_t v20;
  char v21;

  v5 = (_QWORD **)v4;
  v10 = (_QWORD *)*v4;
  v12 = sub_582B4(a2, a3);
  v13 = v10[2];
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
  }
  else
  {
    v16 = v11;
    v17 = v10[3];
    if (v17 >= v15 && (a4 & 1) != 0)
    {
LABEL_7:
      v18 = *v5;
      if ((v16 & 1) != 0)
      {
LABEL_8:
        v19 = (_QWORD *)(v18[7] + 40 * v12);
        _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(v19);
        sub_5DC98(a1, (uint64_t)v19);
        return;
      }
      goto LABEL_11;
    }
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_5B500(&qword_31F148, (void (*)(_BYTE *, uint64_t))sub_5DC98);
      goto LABEL_7;
    }
    sub_13C18C(v15, a4 & 1);
    v20 = sub_582B4(a2, a3);
    if ((v16 & 1) == (v21 & 1))
    {
      v12 = v20;
      v18 = *v5;
      if ((v16 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_5A6D0(v12, a2, a3, a1, v18);
      swift_bridgeObjectRetain(a3);
      return;
    }
  }
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
  __break(1u);
}

void sub_5A288(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  unint64_t v22;
  char v23;
  uint64_t *v24;
  _QWORD *v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;

  v6 = v5;
  v12 = *v5;
  v14 = sub_582B4(a3, a4);
  v15 = *(_QWORD *)(v12 + 16);
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v18 = v13;
  v19 = *(_QWORD *)(v12 + 24);
  if (v19 >= v17 && (a5 & 1) != 0)
    goto LABEL_7;
  if (v19 >= v17 && (a5 & 1) == 0)
  {
    sub_5B8F8();
LABEL_7:
    v20 = (_QWORD *)*v6;
    if ((v18 & 1) != 0)
    {
LABEL_8:
      v21 = (_QWORD *)(v20[7] + 16 * v14);
      swift_bridgeObjectRelease(v21[1]);
      *v21 = a1;
      v21[1] = a2;
      return;
    }
LABEL_11:
    v20[(v14 >> 6) + 8] |= 1 << v14;
    v24 = (uint64_t *)(v20[6] + 16 * v14);
    *v24 = a3;
    v24[1] = a4;
    v25 = (_QWORD *)(v20[7] + 16 * v14);
    *v25 = a1;
    v25[1] = a2;
    v26 = v20[2];
    v27 = __OFADD__(v26, 1);
    v28 = v26 + 1;
    if (!v27)
    {
      v20[2] = v28;
      swift_bridgeObjectRetain(a4);
      return;
    }
    goto LABEL_14;
  }
  sub_13CA58(v17, a5 & 1);
  v22 = sub_582B4(a3, a4);
  if ((v18 & 1) == (v23 & 1))
  {
    v14 = v22;
    v20 = (_QWORD *)*v6;
    if ((v18 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
  __break(1u);
}

uint64_t sub_5A3FC(char a1, char a2, double a3, double a4)
{
  _QWORD *v4;
  _QWORD **v5;
  char v9;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t result;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  double *v19;
  char v20;

  v5 = (_QWORD **)v4;
  v9 = a1 & 1;
  v10 = (_QWORD *)*v4;
  v12 = sub_58348(a1 & 1);
  v13 = v10[2];
  v14 = (v11 & 1) == 0;
  result = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
  }
  else
  {
    v16 = v11;
    v17 = v10[3];
    if (v17 >= result && (a2 & 1) != 0)
    {
LABEL_7:
      v18 = *v5;
      if ((v16 & 1) != 0)
      {
LABEL_8:
        v19 = (double *)(v18[7] + 16 * v12);
        *v19 = a3;
        v19[1] = a4;
        return result;
      }
      return sub_5A73C(v12, v9, v18, a3, a4);
    }
    if (v17 >= result && (a2 & 1) == 0)
    {
      result = (uint64_t)sub_5BAB0();
      goto LABEL_7;
    }
    sub_13CD7C(result, a2 & 1);
    result = sub_58348(v9);
    if ((v16 & 1) == (v20 & 1))
    {
      v12 = result;
      v18 = *v5;
      if ((v16 & 1) != 0)
        goto LABEL_8;
      return sub_5A73C(v12, v9, v18, a3, a4);
    }
  }
  result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for FinishedDateType);
  __break(1u);
  return result;
}

uint64_t sub_5A510(unint64_t a1, char a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(_BYTE *)(a4[6] + a1) = a2;
  v7 = a4[7];
  v8 = type metadata accessor for Date(0);
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v7 + *(_QWORD *)(*(_QWORD *)(v8 - 8) + 72) * a1, a3, v8);
  v10 = a4[2];
  v11 = __OFADD__(v10, 1);
  v12 = v10 + 1;
  if (v11)
    __break(1u);
  else
    a4[2] = v12;
  return result;
}

_OWORD *sub_5A59C(unint64_t a1, uint64_t a2, _OWORD *a3, _QWORD *a4)
{
  _OWORD *result;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(_QWORD *)(a4[6] + 8 * a1) = a2;
  result = sub_5D000(a3, (_OWORD *)(a4[7] + 32 * a1));
  v6 = a4[2];
  v7 = __OFADD__(v6, 1);
  v8 = v6 + 1;
  if (v7)
    __break(1u);
  else
    a4[2] = v8;
  return result;
}

uint64_t sub_5A600(unint64_t a1, char a2, __int128 *a3, _QWORD *a4)
{
  uint64_t result;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(_BYTE *)(a4[6] + a1) = a2;
  result = sub_5DC98(a3, a4[7] + 40 * a1);
  v6 = a4[2];
  v7 = __OFADD__(v6, 1);
  v8 = v6 + 1;
  if (v7)
    __break(1u);
  else
    a4[2] = v8;
  return result;
}

_OWORD *sub_5A668(unint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4, _QWORD *a5)
{
  _QWORD *v6;
  _OWORD *result;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  a5[(a1 >> 6) + 8] |= 1 << a1;
  v6 = (_QWORD *)(a5[6] + 16 * a1);
  *v6 = a2;
  v6[1] = a3;
  result = sub_5D000(a4, (_OWORD *)(a5[7] + 32 * a1));
  v8 = a5[2];
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (v9)
    __break(1u);
  else
    a5[2] = v10;
  return result;
}

uint64_t sub_5A6D0(unint64_t a1, uint64_t a2, uint64_t a3, __int128 *a4, _QWORD *a5)
{
  _QWORD *v6;
  uint64_t result;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  a5[(a1 >> 6) + 8] |= 1 << a1;
  v6 = (_QWORD *)(a5[6] + 16 * a1);
  *v6 = a2;
  v6[1] = a3;
  result = sub_5DC98(a4, a5[7] + 40 * a1);
  v8 = a5[2];
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (v9)
    __break(1u);
  else
    a5[2] = v10;
  return result;
}

unint64_t sub_5A73C(unint64_t result, char a2, _QWORD *a3, double a4, double a5)
{
  double *v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;

  a3[(result >> 6) + 8] |= 1 << result;
  *(_BYTE *)(a3[6] + result) = a2 & 1;
  v5 = (double *)(a3[7] + 16 * result);
  *v5 = a4;
  v5[1] = a5;
  v6 = a3[2];
  v7 = __OFADD__(v6, 1);
  v8 = v6 + 1;
  if (v7)
    __break(1u);
  else
    a3[2] = v8;
  return result;
}

id sub_5A788()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;

  v1 = v0;
  sub_5C154(&qword_31F020);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (id)swift_release(v2);
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v18 = v17[1];
    v19 = 8 * v15;
    v20 = *(void **)(*(_QWORD *)(v2 + 56) + v19);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = *v17;
    v21[1] = v18;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain(v18);
    result = v20;
  }
  v24 = v22 + 2;
  if (v24 >= v13)
    goto LABEL_26;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_5A938()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  int64_t v29;
  unint64_t v30;
  int64_t v31;

  v1 = v0;
  sub_5C154(&qword_31EE58);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release(v2);
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v29 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v29 >= v13)
      goto LABEL_26;
    v30 = *(_QWORD *)(v6 + 8 * v29);
    ++v9;
    if (!v30)
    {
      v9 = v29 + 1;
      if (v29 + 1 >= v13)
        goto LABEL_26;
      v30 = *(_QWORD *)(v6 + 8 * v9);
      if (!v30)
        break;
    }
LABEL_25:
    v12 = (v30 - 1) & v30;
    v15 = __clz(__rbit64(v30)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v19 = *v17;
    v18 = v17[1];
    v20 = 40 * v15;
    v21 = *(_QWORD *)(v2 + 56) + v20;
    v22 = *(_QWORD *)v21;
    v23 = *(_QWORD *)(v21 + 8);
    v24 = *(_BYTE *)(v21 + 16);
    v25 = *(_QWORD *)(v21 + 24);
    v26 = *(_QWORD *)(v21 + 32);
    v27 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v27 = v19;
    v27[1] = v18;
    v28 = *(_QWORD *)(v4 + 56) + v20;
    *(_QWORD *)v28 = v22;
    *(_QWORD *)(v28 + 8) = v23;
    *(_BYTE *)(v28 + 16) = v24;
    *(_QWORD *)(v28 + 24) = v25;
    *(_QWORD *)(v28 + 32) = v26;
    swift_bridgeObjectRetain(v18);
    swift_bridgeObjectRetain(v23);
    result = (void *)swift_bridgeObjectRetain(v26);
  }
  v31 = v29 + 2;
  if (v31 >= v13)
    goto LABEL_26;
  v30 = *(_QWORD *)(v6 + 8 * v31);
  if (v30)
  {
    v9 = v31;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v31 + 1;
    if (__OFADD__(v31, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v30 = *(_QWORD *)(v6 + 8 * v9);
    ++v31;
    if (v30)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_5AB18()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *result;
  unint64_t v9;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  char v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  int64_t v25;

  v1 = type metadata accessor for Date(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5C154(&qword_31EE48);
  v23 = v0;
  v5 = *v0;
  v6 = static _DictionaryStorage.copy(original:)(*v0);
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
LABEL_26:
    result = (void *)swift_release(v5);
    *v23 = v7;
    return result;
  }
  result = (void *)(v6 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9)
    result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  v11 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v12 = 1 << *(_BYTE *)(v5 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v5 + 64);
  v24 = v5 + 64;
  v25 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      v15 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v16 = v15 | (v11 << 6);
      goto LABEL_12;
    }
    v19 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v25)
      goto LABEL_26;
    v20 = *(_QWORD *)(v24 + 8 * v19);
    ++v11;
    if (!v20)
    {
      v11 = v19 + 1;
      if (v19 + 1 >= v25)
        goto LABEL_26;
      v20 = *(_QWORD *)(v24 + 8 * v11);
      if (!v20)
        break;
    }
LABEL_25:
    v14 = (v20 - 1) & v20;
    v16 = __clz(__rbit64(v20)) + (v11 << 6);
LABEL_12:
    v17 = *(_BYTE *)(*(_QWORD *)(v5 + 48) + v16);
    v18 = *(_QWORD *)(v2 + 72) * v16;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(_QWORD *)(v5 + 56) + v18, v1);
    *(_BYTE *)(*(_QWORD *)(v7 + 48) + v16) = v17;
    result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(_QWORD *)(v7 + 56) + v18, v4, v1);
  }
  v21 = v19 + 2;
  if (v21 >= v25)
    goto LABEL_26;
  v20 = *(_QWORD *)(v24 + 8 * v21);
  if (v20)
  {
    v11 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    v11 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v11 >= v25)
      goto LABEL_26;
    v20 = *(_QWORD *)(v24 + 8 * v11);
    ++v21;
    if (v20)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void sub_5AD34()
{
  sub_5AD5C(type metadata accessor for GenreHighlight, &qword_31F1B0);
}

void sub_5AD48()
{
  sub_5AD5C(type metadata accessor for TopAuthorHighlightData, &qword_31F1A0);
}

void sub_5AD5C(uint64_t (*a1)(_QWORD), uint64_t *a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  unint64_t v12;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  _QWORD *v25;
  int64_t v26;
  unint64_t v27;
  int64_t v28;
  uint64_t *v29;
  uint64_t v30;
  int64_t v31;
  uint64_t v32;

  v5 = a1(0);
  v32 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v7 = (char *)&v29 - v6;
  sub_5C154(a2);
  v29 = v2;
  v8 = *v2;
  v9 = static _DictionaryStorage.copy(original:)(*v2);
  v10 = v9;
  if (!*(_QWORD *)(v8 + 16))
  {
LABEL_26:
    swift_release(v8);
    *v29 = v10;
    return;
  }
  v11 = (void *)(v9 + 64);
  v12 = (unint64_t)((1 << *(_BYTE *)(v10 + 32)) + 63) >> 6;
  if (v10 != v8 || (unint64_t)v11 >= v8 + 64 + 8 * v12)
    memmove(v11, (const void *)(v8 + 64), 8 * v12);
  v30 = v8 + 64;
  v14 = 0;
  *(_QWORD *)(v10 + 16) = *(_QWORD *)(v8 + 16);
  v15 = 1 << *(_BYTE *)(v8 + 32);
  v16 = -1;
  if (v15 < 64)
    v16 = ~(-1 << v15);
  v17 = v16 & *(_QWORD *)(v8 + 64);
  v31 = (unint64_t)(v15 + 63) >> 6;
  while (1)
  {
    if (v17)
    {
      v18 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      v19 = v18 | (v14 << 6);
      goto LABEL_12;
    }
    v26 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v26 >= v31)
      goto LABEL_26;
    v27 = *(_QWORD *)(v30 + 8 * v26);
    ++v14;
    if (!v27)
    {
      v14 = v26 + 1;
      if (v26 + 1 >= v31)
        goto LABEL_26;
      v27 = *(_QWORD *)(v30 + 8 * v14);
      if (!v27)
        break;
    }
LABEL_25:
    v17 = (v27 - 1) & v27;
    v19 = __clz(__rbit64(v27)) + (v14 << 6);
LABEL_12:
    v20 = 16 * v19;
    v21 = (uint64_t *)(*(_QWORD *)(v8 + 48) + 16 * v19);
    v23 = *v21;
    v22 = v21[1];
    v24 = *(_QWORD *)(v32 + 72) * v19;
    sub_5E11C(*(_QWORD *)(v8 + 56) + v24, (uint64_t)v7, a1);
    v25 = (_QWORD *)(*(_QWORD *)(v10 + 48) + v20);
    *v25 = v23;
    v25[1] = v22;
    sub_5E160((uint64_t)v7, *(_QWORD *)(v10 + 56) + v24, a1);
    swift_bridgeObjectRetain(v22);
  }
  v28 = v26 + 2;
  if (v28 >= v31)
    goto LABEL_26;
  v27 = *(_QWORD *)(v30 + 8 * v28);
  if (v27)
  {
    v14 = v28;
    goto LABEL_25;
  }
  while (1)
  {
    v14 = v28 + 1;
    if (__OFADD__(v28, 1))
      break;
    if (v14 >= v31)
      goto LABEL_26;
    v27 = *(_QWORD *)(v30 + 8 * v14);
    ++v28;
    if (v27)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_5AF8C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;

  v1 = v0;
  sub_5C154(&qword_31EF28);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    swift_release(v2);
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v23 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v13)
      goto LABEL_26;
    v24 = *(_QWORD *)(v6 + 8 * v23);
    ++v9;
    if (!v24)
    {
      v9 = v23 + 1;
      if (v23 + 1 >= v13)
        goto LABEL_26;
      v24 = *(_QWORD *)(v6 + 8 * v9);
      if (!v24)
        break;
    }
LABEL_25:
    v12 = (v24 - 1) & v24;
    v15 = __clz(__rbit64(v24)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v19 = *v17;
    v18 = v17[1];
    v20 = 8 * v15;
    v21 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v20);
    v22 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v22 = v19;
    v22[1] = v18;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v20) = v21;
    swift_bridgeObjectRetain(v18);
  }
  v25 = v23 + 2;
  if (v25 >= v13)
    goto LABEL_26;
  v24 = *(_QWORD *)(v6 + 8 * v25);
  if (v24)
  {
    v9 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v24 = *(_QWORD *)(v6 + 8 * v9);
    ++v25;
    if (v24)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

id sub_5B138()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  _OWORD v22[2];

  v1 = v0;
  sub_5C154(&qword_31EF88);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (id)swift_release(v2);
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v19 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v13)
      goto LABEL_26;
    v20 = *(_QWORD *)(v6 + 8 * v19);
    ++v9;
    if (!v20)
    {
      v9 = v19 + 1;
      if (v19 + 1 >= v13)
        goto LABEL_26;
      v20 = *(_QWORD *)(v6 + 8 * v9);
      if (!v20)
        break;
    }
LABEL_25:
    v12 = (v20 - 1) & v20;
    v15 = __clz(__rbit64(v20)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(void **)(*(_QWORD *)(v2 + 48) + 8 * v15);
    v18 = 32 * v15;
    sub_5DC5C(*(_QWORD *)(v2 + 56) + 32 * v15, (uint64_t)v22);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    sub_5D000(v22, (_OWORD *)(*(_QWORD *)(v4 + 56) + v18));
    result = v17;
  }
  v21 = v19 + 2;
  if (v21 >= v13)
    goto LABEL_26;
  v20 = *(_QWORD *)(v6 + 8 * v21);
  if (v20)
  {
    v9 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v20 = *(_QWORD *)(v6 + 8 * v9);
    ++v21;
    if (v20)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_5B2FC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  char v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  __int128 v20[2];

  v1 = v0;
  sub_5C154(&qword_31EEC8);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release(v2);
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v13)
      goto LABEL_26;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      v9 = v17 + 1;
      if (v17 + 1 >= v13)
        goto LABEL_26;
      v18 = *(_QWORD *)(v6 + 8 * v9);
      if (!v18)
        break;
    }
LABEL_25:
    v12 = (v18 - 1) & v18;
    v15 = __clz(__rbit64(v18)) + (v9 << 6);
LABEL_12:
    v16 = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v15);
    sub_5E0D8(*(_QWORD *)(v2 + 56) + 40 * v15, (uint64_t)v20);
    *(_BYTE *)(*(_QWORD *)(v4 + 48) + v15) = v16;
    result = (void *)sub_5DC98(v20, *(_QWORD *)(v4 + 56) + 40 * v15);
  }
  v19 = v17 + 2;
  if (v19 >= v13)
    goto LABEL_26;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
    v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v18 = *(_QWORD *)(v6 + 8 * v9);
    ++v19;
    if (v18)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void sub_5B4BC()
{
  sub_5B500(&qword_31EEE8, (void (*)(_BYTE *, uint64_t))sub_5DC98);
}

void sub_5B4D0()
{
  sub_5B708(&qword_31ED78, (void (*)(unint64_t, _BYTE *))sub_5E1EC, (void (*)(_BYTE *, uint64_t))sub_5D000);
}

void sub_5B4EC()
{
  sub_5B500(&qword_31F148, (void (*)(_BYTE *, uint64_t))sub_5DC98);
}

void sub_5B500(uint64_t *a1, void (*a2)(_BYTE *, uint64_t))
{
  uint64_t *v2;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  unint64_t v9;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  uint64_t *v27;
  uint64_t v28;
  _BYTE v29[40];

  v4 = v2;
  sub_5C154(a1);
  v5 = *v2;
  v6 = static _DictionaryStorage.copy(original:)(*v2);
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
    swift_release(v5);
LABEL_28:
    *v4 = v7;
    return;
  }
  v27 = v4;
  v8 = (void *)(v6 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)v8 >= v5 + 64 + 8 * v9)
    memmove(v8, (const void *)(v5 + 64), 8 * v9);
  v28 = v5 + 64;
  v11 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v12 = 1 << *(_BYTE *)(v5 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v5 + 64);
  v15 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      v16 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v17 = v16 | (v11 << 6);
      goto LABEL_12;
    }
    v24 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v24 >= v15)
      goto LABEL_26;
    v25 = *(_QWORD *)(v28 + 8 * v24);
    ++v11;
    if (!v25)
    {
      v11 = v24 + 1;
      if (v24 + 1 >= v15)
        goto LABEL_26;
      v25 = *(_QWORD *)(v28 + 8 * v11);
      if (!v25)
        break;
    }
LABEL_25:
    v14 = (v25 - 1) & v25;
    v17 = __clz(__rbit64(v25)) + (v11 << 6);
LABEL_12:
    v18 = 16 * v17;
    v19 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v17);
    v20 = *v19;
    v21 = v19[1];
    v22 = 40 * v17;
    sub_5E0D8(*(_QWORD *)(v5 + 56) + 40 * v17, (uint64_t)v29);
    v23 = (_QWORD *)(*(_QWORD *)(v7 + 48) + v18);
    *v23 = v20;
    v23[1] = v21;
    a2(v29, *(_QWORD *)(v7 + 56) + v22);
    swift_bridgeObjectRetain(v21);
  }
  v26 = v24 + 2;
  if (v26 >= v15)
  {
LABEL_26:
    swift_release(v5);
    v4 = v27;
    goto LABEL_28;
  }
  v25 = *(_QWORD *)(v28 + 8 * v26);
  if (v25)
  {
    v11 = v26;
    goto LABEL_25;
  }
  while (1)
  {
    v11 = v26 + 1;
    if (__OFADD__(v26, 1))
      break;
    if (v11 >= v15)
      goto LABEL_26;
    v25 = *(_QWORD *)(v28 + 8 * v11);
    ++v26;
    if (v25)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
}

void sub_5B6EC()
{
  sub_5B708(&qword_31EEB8, (void (*)(unint64_t, _BYTE *))sub_5DC5C, (void (*)(_BYTE *, uint64_t))sub_5D000);
}

void sub_5B708(uint64_t *a1, void (*a2)(unint64_t, _BYTE *), void (*a3)(_BYTE *, uint64_t))
{
  uint64_t *v3;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  unint64_t v10;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;
  uint64_t *v28;
  uint64_t v29;
  _BYTE v31[32];

  v5 = v3;
  sub_5C154(a1);
  v6 = *v3;
  v7 = static _DictionaryStorage.copy(original:)(*v3);
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
  {
    swift_release(v6);
LABEL_28:
    *v5 = v8;
    return;
  }
  v28 = v5;
  v9 = (void *)(v7 + 64);
  v10 = (unint64_t)((1 << *(_BYTE *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)v9 >= v6 + 64 + 8 * v10)
    memmove(v9, (const void *)(v6 + 64), 8 * v10);
  v29 = v6 + 64;
  v12 = 0;
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v6 + 16);
  v13 = 1 << *(_BYTE *)(v6 + 32);
  v14 = -1;
  if (v13 < 64)
    v14 = ~(-1 << v13);
  v15 = v14 & *(_QWORD *)(v6 + 64);
  v16 = (unint64_t)(v13 + 63) >> 6;
  while (1)
  {
    if (v15)
    {
      v17 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v18 = v17 | (v12 << 6);
      goto LABEL_12;
    }
    v25 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v25 >= v16)
      goto LABEL_26;
    v26 = *(_QWORD *)(v29 + 8 * v25);
    ++v12;
    if (!v26)
    {
      v12 = v25 + 1;
      if (v25 + 1 >= v16)
        goto LABEL_26;
      v26 = *(_QWORD *)(v29 + 8 * v12);
      if (!v26)
        break;
    }
LABEL_25:
    v15 = (v26 - 1) & v26;
    v18 = __clz(__rbit64(v26)) + (v12 << 6);
LABEL_12:
    v19 = 16 * v18;
    v20 = (uint64_t *)(*(_QWORD *)(v6 + 48) + 16 * v18);
    v21 = *v20;
    v22 = v20[1];
    v23 = 32 * v18;
    a2(*(_QWORD *)(v6 + 56) + 32 * v18, v31);
    v24 = (_QWORD *)(*(_QWORD *)(v8 + 48) + v19);
    *v24 = v21;
    v24[1] = v22;
    a3(v31, *(_QWORD *)(v8 + 56) + v23);
    swift_bridgeObjectRetain(v22);
  }
  v27 = v25 + 2;
  if (v27 >= v16)
  {
LABEL_26:
    swift_release(v6);
    v5 = v28;
    goto LABEL_28;
  }
  v26 = *(_QWORD *)(v29 + 8 * v27);
  if (v26)
  {
    v12 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    v12 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v12 >= v16)
      goto LABEL_26;
    v26 = *(_QWORD *)(v29 + 8 * v12);
    ++v27;
    if (v26)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
}

void sub_5B8F8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;

  v1 = v0;
  sub_5C154(&qword_31ED70);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    swift_release(v2);
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v25 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v25 >= v13)
      goto LABEL_26;
    v26 = *(_QWORD *)(v6 + 8 * v25);
    ++v9;
    if (!v26)
    {
      v9 = v25 + 1;
      if (v25 + 1 >= v13)
        goto LABEL_26;
      v26 = *(_QWORD *)(v6 + 8 * v9);
      if (!v26)
        break;
    }
LABEL_25:
    v12 = (v26 - 1) & v26;
    v15 = __clz(__rbit64(v26)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + v16);
    v19 = *v17;
    v18 = v17[1];
    v20 = (uint64_t *)(*(_QWORD *)(v2 + 56) + v16);
    v21 = *v20;
    v22 = v20[1];
    v23 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v23 = v19;
    v23[1] = v18;
    v24 = (_QWORD *)(*(_QWORD *)(v4 + 56) + v16);
    *v24 = v21;
    v24[1] = v22;
    swift_bridgeObjectRetain(v18);
    swift_bridgeObjectRetain(v22);
  }
  v27 = v25 + 2;
  if (v27 >= v13)
    goto LABEL_26;
  v26 = *(_QWORD *)(v6 + 8 * v27);
  if (v26)
  {
    v9 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v26 = *(_QWORD *)(v6 + 8 * v9);
    ++v27;
    if (v26)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void *sub_5BAB0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  __int128 v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;

  v1 = v0;
  sub_5C154(&qword_31ED68);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release(v2);
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v13)
      goto LABEL_26;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      v9 = v17 + 1;
      if (v17 + 1 >= v13)
        goto LABEL_26;
      v18 = *(_QWORD *)(v6 + 8 * v9);
      if (!v18)
        break;
    }
LABEL_25:
    v20 = __clz(__rbit64(v18));
    v12 = (v18 - 1) & v18;
    v15 = v20 + (v9 << 6);
LABEL_12:
    v16 = *(_OWORD *)(*(_QWORD *)(v2 + 56) + 16 * v15);
    *(_BYTE *)(*(_QWORD *)(v4 + 48) + v15) = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v15);
    *(_OWORD *)(*(_QWORD *)(v4 + 56) + 16 * v15) = v16;
  }
  v19 = v17 + 2;
  if (v19 >= v13)
    goto LABEL_26;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
    v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v18 = *(_QWORD *)(v6 + 8 * v9);
    ++v19;
    if (v18)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

unint64_t sub_5BC3C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  _OWORD *i;
  char v5;
  unint64_t result;
  char v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;
  __int128 v11;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    sub_5C154(&qword_31ED68);
    v3 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v1);
    for (i = (_OWORD *)(a1 + 40); ; i = (_OWORD *)((char *)i + 24))
    {
      v5 = *((_BYTE *)i - 8);
      v11 = *i;
      result = sub_58348(v5);
      if ((v7 & 1) != 0)
        break;
      *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      *(_BYTE *)(v3[6] + result) = v5;
      *(_OWORD *)(v3[7] + 16 * result) = v11;
      v8 = v3[2];
      v9 = __OFADD__(v8, 1);
      v10 = v8 + 1;
      if (v9)
        goto LABEL_10;
      v3[2] = v10;
      if (!--v1)
        return (unint64_t)v3;
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return (unint64_t)&_swiftEmptyDictionarySingleton;
  }
  return result;
}

unint64_t sub_5BD18(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t i;
  unsigned __int8 v5;
  unint64_t result;
  char v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;
  unsigned __int8 v11[8];
  __int128 v12;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    sub_5C154(&qword_31EEC8);
    v3 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v1);
    for (i = a1 + 32; ; i += 48)
    {
      sub_5E1A4(i, (uint64_t)v11, &qword_31EEE0);
      v5 = v11[0];
      result = sub_583A4(v11[0]);
      if ((v7 & 1) != 0)
        break;
      *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      *(_BYTE *)(v3[6] + result) = v5;
      result = sub_5DC98(&v12, v3[7] + 40 * result);
      v8 = v3[2];
      v9 = __OFADD__(v8, 1);
      v10 = v8 + 1;
      if (v9)
        goto LABEL_10;
      v3[2] = v10;
      if (!--v1)
        return (unint64_t)v3;
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return (unint64_t)&_swiftEmptyDictionarySingleton;
  }
  return result;
}

uint64_t sub_5BE24(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  _QWORD *v5;
  int64_t i;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  id v19;
  uint64_t isUniquelyReferenced_nonNull_native;
  _QWORD *v21;
  char v22;
  unint64_t v23;
  uint64_t v24;
  _BOOL8 v25;
  uint64_t v26;
  char v27;
  unint64_t v28;
  char v29;
  _QWORD *v30;
  uint64_t *v31;
  uint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t result;
  uint64_t v36;
  int64_t v37;
  int64_t v39;
  _BYTE v40[24];
  _QWORD *v41;

  v2 = 1 << *(_BYTE *)(a1 + 32);
  v3 = -1;
  if (v2 < 64)
    v3 = ~(-1 << v2);
  v4 = v3 & *(_QWORD *)(a1 + 64);
  v5 = (_QWORD *)(a2 + OBJC_IVAR____TtC11BookStoreUI27BSUISharedWithYouController_attributionViews);
  v37 = (unint64_t)(v2 + 63) >> 6;
  swift_bridgeObjectRetain(a1);
  for (i = 0; ; i = v39)
  {
    if (v4)
    {
      v9 = __clz(__rbit64(v4));
      v4 &= v4 - 1;
      v39 = i;
      v10 = v9 | (i << 6);
    }
    else
    {
      v11 = i + 1;
      if (__OFADD__(i, 1))
        goto LABEL_38;
      if (v11 >= v37)
        return swift_release(a1);
      v12 = *(_QWORD *)(v36 + 8 * v11);
      v13 = i + 1;
      if (!v12)
      {
        v13 = i + 2;
        if (i + 2 >= v37)
          return swift_release(a1);
        v12 = *(_QWORD *)(v36 + 8 * v13);
        if (!v12)
        {
          v13 = i + 3;
          if (i + 3 >= v37)
            return swift_release(a1);
          v12 = *(_QWORD *)(v36 + 8 * v13);
          if (!v12)
          {
            v13 = i + 4;
            if (i + 4 >= v37)
              return swift_release(a1);
            v12 = *(_QWORD *)(v36 + 8 * v13);
            if (!v12)
            {
              v14 = i + 5;
              if (i + 5 >= v37)
                return swift_release(a1);
              v12 = *(_QWORD *)(v36 + 8 * v14);
              if (!v12)
              {
                while (1)
                {
                  v13 = v14 + 1;
                  if (__OFADD__(v14, 1))
                    goto LABEL_39;
                  if (v13 >= v37)
                    return swift_release(a1);
                  v12 = *(_QWORD *)(v36 + 8 * v13);
                  ++v14;
                  if (v12)
                    goto LABEL_23;
                }
              }
              v13 = i + 5;
            }
          }
        }
      }
LABEL_23:
      v4 = (v12 - 1) & v12;
      v39 = v13;
      v10 = __clz(__rbit64(v12)) + (v13 << 6);
    }
    v15 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v10);
    v17 = *v15;
    v16 = v15[1];
    v18 = *(void **)(*(_QWORD *)(a1 + 56) + 8 * v10);
    swift_beginAccess(v5, v40, 33, 0);
    swift_bridgeObjectRetain_n(v16, 2);
    v19 = v18;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v5);
    v41 = (_QWORD *)*v5;
    v21 = v41;
    *v5 = 0x8000000000000000;
    v23 = sub_582B4(v17, v16);
    v24 = v21[2];
    v25 = (v22 & 1) == 0;
    v26 = v24 + v25;
    if (__OFADD__(v24, v25))
      break;
    v27 = v22;
    if (v21[3] >= v26)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        v30 = v41;
        if ((v22 & 1) != 0)
          goto LABEL_4;
      }
      else
      {
        sub_5A788();
        v30 = v41;
        if ((v27 & 1) != 0)
          goto LABEL_4;
      }
    }
    else
    {
      sub_13A804(v26, isUniquelyReferenced_nonNull_native);
      v28 = sub_582B4(v17, v16);
      if ((v27 & 1) != (v29 & 1))
        goto LABEL_40;
      v23 = v28;
      v30 = v41;
      if ((v27 & 1) != 0)
      {
LABEL_4:
        v7 = v30[7];

        *(_QWORD *)(v7 + 8 * v23) = v19;
        goto LABEL_5;
      }
    }
    v30[(v23 >> 6) + 8] |= 1 << v23;
    v31 = (uint64_t *)(v30[6] + 16 * v23);
    *v31 = v17;
    v31[1] = v16;
    *(_QWORD *)(v30[7] + 8 * v23) = v19;
    v32 = v30[2];
    v33 = __OFADD__(v32, 1);
    v34 = v32 + 1;
    if (v33)
      goto LABEL_37;
    v30[2] = v34;
    swift_bridgeObjectRetain(v16);
LABEL_5:
    v8 = *v5;
    *v5 = v30;
    swift_bridgeObjectRelease(v16);
    swift_bridgeObjectRelease(v8);
    swift_endAccess(v40);

    swift_bridgeObjectRelease(v16);
  }
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
  __break(1u);
  return result;
}

uint64_t sub_5C154(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = swift_getTypeByMangledNameInContext2((char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

uint64_t sub_5C194(uint64_t a1, unint64_t *a2, _QWORD *a3)
{
  uint64_t result;
  uint64_t v5;

  result = *a2;
  if (!*a2)
  {
    v5 = objc_opt_self(*a3);
    result = swift_getObjCClassMetadata(v5);
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_5C1CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_5C154(&qword_31E7C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_5C214(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v6;
  unint64_t v7;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v4 < 0)
  {
LABEL_9:
    result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
    goto LABEL_11;
  }
  v6 = a4 + 24 * a1 + 32;
  v7 = a3 + 24 * v4;
  if (v6 >= v7 || v6 + 24 * v4 <= a3)
  {
    sub_5C154(&qword_31F050);
    swift_arrayInitWithCopy(a3);
    return v7;
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_5C320(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v6;
  unint64_t v7;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else
  {
    if (v4 < 0)
    {
      result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
      goto LABEL_9;
    }
    v6 = a4 + 8 * a1 + 32;
    v7 = a3 + 8 * v4;
    if (v6 >= v7 || v6 + 8 * v4 <= a3)
    {
      sub_5C154(&qword_31E7C8);
      swift_arrayInitWithCopy(a3);
      return v7;
    }
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_9:
  __break(1u);
  return result;
}

unint64_t *sub_5C428(uint64_t a1, uint64_t a2)
{
  unint64_t *result;
  uint64_t v4;
  uint64_t v6;
  unint64_t *v7;
  uint64_t Strong;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  char v13[8];
  char v14[8];
  unint64_t *v15;

  result = (unint64_t *)&_swiftEmptyArrayStorage;
  v15 = (unint64_t *)&_swiftEmptyArrayStorage;
  v4 = *(_QWORD *)(a1 + 16);
  if (v4)
  {
    v6 = a1 + 32;
    v7 = (unint64_t *)&_swiftEmptyArrayStorage;
    while (1)
    {
      sub_5E1A4(v6, (uint64_t)v14, &qword_31E7C8);
      Strong = swift_unknownObjectWeakLoadStrong(v14);
      if (Strong)
      {
        v9 = Strong;
        swift_unknownObjectRelease(Strong);
        sub_5E1A4((uint64_t)v14, (uint64_t)v13, &qword_31E7C8);
        if (v9 == a2)
          goto LABEL_3;
      }
      else
      {
        sub_5E1A4((uint64_t)v14, (uint64_t)v13, &qword_31E7C8);
      }
      v10 = swift_unknownObjectWeakLoadStrong(v13);
      if (v10)
      {
        swift_unknownObjectRelease(v10);
        sub_5E09C((uint64_t)v13, &qword_31E7C8);
        sub_5C1CC((uint64_t)v14, (uint64_t)v13);
        if ((swift_isUniquelyReferenced_nonNull_native(v7) & 1) == 0)
          sub_20C460(0, v7[2] + 1, 1);
        v7 = v15;
        v12 = v15[2];
        v11 = v15[3];
        if (v12 >= v11 >> 1)
        {
          sub_20C460(v11 > 1, v12 + 1, 1);
          v7 = v15;
        }
        v7[2] = v12 + 1;
        sub_5C1CC((uint64_t)v13, (uint64_t)&v7[v12 + 4]);
        goto LABEL_4;
      }
LABEL_3:
      sub_5E09C((uint64_t)v13, &qword_31E7C8);
      sub_5E09C((uint64_t)v14, &qword_31E7C8);
LABEL_4:
      v6 += 8;
      if (!--v4)
        return v15;
    }
  }
  return result;
}

uint64_t method lookup function for BSUISharedWithYouController(uint64_t a1, uint64_t a2)
{
  return swift_lookUpClassMethod(a1, a2, &nominal type descriptor for BSUISharedWithYouController);
}

uint64_t dispatch thunk of ContextMenuAssetPropertyProvider.isStoreAsset.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))&stru_68.segname[swift_isaMask & *v0])();
}

uint64_t dispatch thunk of BSUISharedWithYouController.refreshPublisher.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))&stru_68.segname[(swift_isaMask & *v0) + 8])();
}

uint64_t dispatch thunk of BSUISharedWithYouController.refreshPublisher.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))&stru_68.segname[(swift_isaMask & *v0) + 16])();
}

uint64_t dispatch thunk of BSUISharedWithYouController.createHighlightAttributionView(for:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((char *)&stru_68.size + (swift_isaMask & *v0)))();
}

uint64_t dispatch thunk of BSUISharedWithYouController.highlights.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((char *)&stru_68.offset + (swift_isaMask & *v0)))();
}

uint64_t dispatch thunk of BSUISharedWithYouController.refresh()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((char *)&stru_B8.size + (swift_isaMask & *v0)))();
}

uint64_t dispatch thunk of BSUISharedWithYouController.highlightIdentifier(for:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((char *)&stru_B8.offset + (swift_isaMask & *v0)))();
}

uint64_t dispatch thunk of BSUISharedWithYouController.presentiMessagesTranscript(for:viewController:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((char *)&stru_B8.reloff + (swift_isaMask & *v0)))();
}

uint64_t dispatch thunk of BSUISharedWithYouController.createHighlightAttributionView(for:viewController:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((char *)&stru_B8.flags + (swift_isaMask & *v0)))();
}

uint64_t dispatch thunk of BSUISharedWithYouController.highlightAttributionView(for:viewController:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))&stru_108.segname[(swift_isaMask & *v0) - 8])();
}

void type metadata accessor for Key(uint64_t a1)
{
  sub_5DE18(a1, &qword_31EAA0, (uint64_t)&unk_2E7288);
}

void type metadata accessor for UIContentSizeCategory(uint64_t a1)
{
  sub_5DE18(a1, &qword_31EAA8, (uint64_t)&unk_2E72B0);
}

void type metadata accessor for TextStyle(uint64_t a1)
{
  sub_5DE18(a1, &qword_31EAB0, (uint64_t)&unk_2E72D8);
}

void type metadata accessor for Weight(uint64_t a1)
{
  sub_5DE18(a1, &qword_31EAB8, (uint64_t)&unk_2E7300);
}

void type metadata accessor for SystemDesign(uint64_t a1)
{
  sub_5DE18(a1, &qword_31EAC0, (uint64_t)&unk_2E7328);
}

void type metadata accessor for UIUserInterfaceStyle(uint64_t a1)
{
  sub_5DE18(a1, &qword_31EAC8, (uint64_t)&unk_2E7350);
}

void type metadata accessor for BCAssetContentType(uint64_t a1)
{
  sub_5DE18(a1, &qword_31EAD0, (uint64_t)&unk_2E7370);
}

void type metadata accessor for FigaroEventType(uint64_t a1)
{
  sub_5DE18(a1, &qword_31EAD8, (uint64_t)&unk_2E7390);
}

void type metadata accessor for FigaroKey(uint64_t a1)
{
  sub_5DE18(a1, &qword_31EAE0, (uint64_t)&unk_2E73B8);
}

__n128 initializeWithTake for TVAppService.BooksTVItem(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for AlignmentSpec(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for AlignmentSpec(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 16) = v3;
  return result;
}

void type metadata accessor for CGSize(uint64_t a1)
{
  sub_5DE18(a1, &qword_31EAE8, (uint64_t)&unk_2E7438);
}

__n128 initializeWithTake for RootHostingControllerConfiguration(_OWORD *a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t sub_5C7FC(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 32))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_5C81C(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 32) = v3;
  return result;
}

void type metadata accessor for CGRect(uint64_t a1)
{
  sub_5DE18(a1, &qword_31EAF0, (uint64_t)&unk_2E74B8);
}

void type metadata accessor for os_unfair_lock_s(uint64_t a1)
{
  sub_5DE18(a1, &qword_31EAF8, (uint64_t)&unk_2E74E0);
}

void type metadata accessor for TraitKey(uint64_t a1)
{
  sub_5DE18(a1, &qword_31EB00, (uint64_t)&unk_2E7508);
}

void type metadata accessor for AttributeName(uint64_t a1)
{
  sub_5DE18(a1, &qword_31EB08, (uint64_t)&unk_2E7530);
}

void type metadata accessor for AssetActivityItemProviderProperty(uint64_t a1)
{
  sub_5DE18(a1, &qword_31EB10, (uint64_t)&unk_2E7558);
}

void type metadata accessor for ActivityType(uint64_t a1)
{
  sub_5DE18(a1, qword_31EB18, (uint64_t)&unk_2E7580);
}

uint64_t sub_5C8C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_allocateGenericValueMetadata(a1, a2, a3, 16);
}

uint64_t initializeBufferWithCopyOfBuffer for RootHostingControllerConfiguration(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a2;
  *a1 = *a2;
  v3 = v2 + 16;
  swift_retain(v2);
  return v3;
}

uint64_t sub_5C90C(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 8))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_5C92C(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 8) = v3;
  return result;
}

uint64_t type metadata accessor for Weak(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_5DD60(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Weak);
}

uint64_t sub_5C960(uint64_t a1)
{
  return swift_getWitnessTable(&unk_256220, a1);
}

uint64_t sub_5C970()
{
  return sub_5C9A0(&qword_31EC60, 255, (uint64_t (*)(uint64_t))type metadata accessor for ActivityType, (uint64_t)&unk_2562B0);
}

uint64_t sub_5C9A0(unint64_t *a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    v7 = a3(a2);
    result = swift_getWitnessTable(a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_5C9E0()
{
  return sub_5C9A0(&qword_31EC68, 255, (uint64_t (*)(uint64_t))type metadata accessor for ActivityType, (uint64_t)&unk_256288);
}

uint64_t sub_5CA10()
{
  return sub_5C9A0(&qword_31EC70, 255, (uint64_t (*)(uint64_t))type metadata accessor for ActivityType, (uint64_t)&unk_256318);
}

uint64_t sub_5CA40()
{
  return sub_5C9A0(&qword_31EC78, 255, (uint64_t (*)(uint64_t))type metadata accessor for AssetActivityItemProviderProperty, (uint64_t)&unk_256400);
}

uint64_t sub_5CA70()
{
  return sub_5C9A0(&qword_31EC80, 255, (uint64_t (*)(uint64_t))type metadata accessor for AssetActivityItemProviderProperty, (uint64_t)&unk_2563D4);
}

uint64_t sub_5CAA0()
{
  return sub_5C9A0(&qword_31EC88, 255, (uint64_t (*)(uint64_t))type metadata accessor for AssetActivityItemProviderProperty, (uint64_t)&unk_256470);
}

uint64_t sub_5CAD0()
{
  return sub_5C9A0(&qword_31EC90, 255, (uint64_t (*)(uint64_t))type metadata accessor for AttributeName, (uint64_t)&unk_256564);
}

uint64_t sub_5CB00()
{
  return sub_5C9A0(&qword_31EC98, 255, (uint64_t (*)(uint64_t))type metadata accessor for AttributeName, (uint64_t)&unk_256538);
}

uint64_t sub_5CB30()
{
  return sub_5C9A0(&qword_31ECA0, 255, (uint64_t (*)(uint64_t))type metadata accessor for TraitKey, (uint64_t)&unk_256678);
}

uint64_t sub_5CB60()
{
  return sub_5C9A0(&qword_31ECA8, 255, (uint64_t (*)(uint64_t))type metadata accessor for TraitKey, (uint64_t)&unk_25664C);
}

uint64_t sub_5CB90()
{
  return sub_5C9A0(&qword_31ECB0, 255, (uint64_t (*)(uint64_t))type metadata accessor for TraitKey, (uint64_t)&unk_2566E8);
}

uint64_t sub_5CBC0()
{
  return sub_5C9A0(&qword_31ECB8, 255, (uint64_t (*)(uint64_t))type metadata accessor for FigaroKey, (uint64_t)&unk_2567D8);
}

uint64_t sub_5CBF0()
{
  return sub_5C9A0(&qword_31ECC0, 255, (uint64_t (*)(uint64_t))type metadata accessor for FigaroKey, (uint64_t)&unk_2567AC);
}

uint64_t sub_5CC20()
{
  return sub_5C9A0(&qword_31ECC8, 255, (uint64_t (*)(uint64_t))type metadata accessor for FigaroEventType, (uint64_t)&unk_2568EC);
}

uint64_t sub_5CC50()
{
  return sub_5C9A0(&qword_31ECD0, 255, (uint64_t (*)(uint64_t))type metadata accessor for FigaroEventType, (uint64_t)&unk_2568C0);
}

uint64_t sub_5CC80()
{
  return sub_5C9A0(&qword_31ECD8, 255, (uint64_t (*)(uint64_t))type metadata accessor for FigaroEventType, (uint64_t)&unk_25695C);
}

uint64_t sub_5CCB0()
{
  return sub_5C9A0(&qword_31ECE0, 255, (uint64_t (*)(uint64_t))type metadata accessor for SystemDesign, (uint64_t)&unk_256A80);
}

uint64_t sub_5CCE0()
{
  return sub_5C9A0(&qword_31ECE8, 255, (uint64_t (*)(uint64_t))type metadata accessor for SystemDesign, (uint64_t)&unk_256A54);
}

uint64_t sub_5CD10()
{
  return sub_5C9A0(&qword_31ECF0, 255, (uint64_t (*)(uint64_t))type metadata accessor for SystemDesign, (uint64_t)&unk_256AF0);
}

uint64_t sub_5CD40()
{
  return sub_5C9A0(&qword_31ECF8, 255, (uint64_t (*)(uint64_t))type metadata accessor for Weight, (uint64_t)&unk_256BD8);
}

uint64_t sub_5CD70()
{
  return sub_5C9A0(&qword_31ED00, 255, (uint64_t (*)(uint64_t))type metadata accessor for Weight, (uint64_t)&unk_256BAC);
}

uint64_t sub_5CDA0()
{
  return sub_5C9A0(&qword_31ED08, 255, (uint64_t (*)(uint64_t))type metadata accessor for Weight, (uint64_t)&unk_256C48);
}

uint64_t sub_5CDD0()
{
  return sub_5C9A0(&qword_31ED10, 255, (uint64_t (*)(uint64_t))type metadata accessor for TextStyle, (uint64_t)&unk_256D30);
}

uint64_t sub_5CE00()
{
  return sub_5C9A0(&qword_31ED18, 255, (uint64_t (*)(uint64_t))type metadata accessor for TextStyle, (uint64_t)&unk_256D04);
}

uint64_t sub_5CE30()
{
  return sub_5C9A0(&qword_31ED20, 255, (uint64_t (*)(uint64_t))type metadata accessor for TextStyle, (uint64_t)&unk_256DA0);
}

uint64_t sub_5CE60()
{
  return sub_5C9A0(&qword_31ED28, 255, (uint64_t (*)(uint64_t))type metadata accessor for UIContentSizeCategory, (uint64_t)&unk_256E88);
}

uint64_t sub_5CE90()
{
  return sub_5C9A0(&qword_31ED30, 255, (uint64_t (*)(uint64_t))type metadata accessor for UIContentSizeCategory, (uint64_t)&unk_256E5C);
}

uint64_t sub_5CEC0()
{
  return sub_5C9A0(&qword_31ED38, 255, (uint64_t (*)(uint64_t))type metadata accessor for UIContentSizeCategory, (uint64_t)&unk_256EF8);
}

uint64_t sub_5CEF0()
{
  return sub_5C9A0(&qword_31ED40, 255, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_256FEC);
}

uint64_t sub_5CF20()
{
  return sub_5C9A0(&qword_31ED48, 255, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_256FC0);
}

uint64_t sub_5CF50()
{
  return sub_5C9A0(&qword_31ED50, 255, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_25705C);
}

uint64_t sub_5CF80()
{
  return sub_5C9A0(&qword_31ED58, 255, (uint64_t (*)(uint64_t))type metadata accessor for FigaroKey, (uint64_t)&unk_256848);
}

uint64_t sub_5CFB0()
{
  return sub_5C9A0(&qword_31ED60, 255, (uint64_t (*)(uint64_t))type metadata accessor for AttributeName, (uint64_t)&unk_2565D4);
}

uint64_t _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(_QWORD *a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(a1[3] - 8);
  if ((*(_BYTE *)(v1 + 82) & 2) != 0)
    return swift_release(*a1);
  else
    return (*(uint64_t (**)(void))(v1 + 8))();
}

_OWORD *sub_5D000(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;

  v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

unint64_t sub_5D010()
{
  unint64_t result;

  result = qword_31EDD0;
  if (!qword_31EDD0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for CGFloat, &type metadata for CGFloat);
    atomic_store(result, (unint64_t *)&qword_31EDD0);
  }
  return result;
}

uint64_t sub_5D054(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v6;
  unint64_t v7;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v4 < 0)
  {
LABEL_9:
    result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
    goto LABEL_11;
  }
  v6 = a4 + 48 * a1 + 32;
  v7 = a3 + 48 * v4;
  if (v6 >= v7 || v6 + 48 * v4 <= a3)
  {
    sub_5C154(&qword_31F008);
    swift_arrayInitWithCopy(a3);
    return v7;
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_5D160(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else
  {
    if (v4 < 0)
    {
      result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
      goto LABEL_9;
    }
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy(a3);
      return v6;
    }
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_5D250(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v6;
  unint64_t v7;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else
  {
    if (v4 < 0)
    {
      result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
      goto LABEL_9;
    }
    v6 = a4 + 16 * a1 + 32;
    v7 = a3 + 16 * v4;
    if (v6 >= v7 || v6 + 16 * v4 <= a3)
    {
      sub_5C154(&qword_31EE78);
      swift_arrayInitWithCopy(a3);
      return v7;
    }
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_9:
  __break(1u);
  return result;
}

char *sub_5D358(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v5;
  size_t v6;
  char *v7;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else
  {
    if (v4 < 0)
    {
      result = (char *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
      goto LABEL_9;
    }
    v5 = (char *)(a4 + 8 * a1 + 32);
    v6 = 8 * v4;
    v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  result = (char *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_5D440(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v6;
  unint64_t v7;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v4 < 0)
  {
LABEL_9:
    result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
    goto LABEL_11;
  }
  v6 = a4 + 48 * a1 + 32;
  v7 = a3 + 48 * v4;
  if (v6 >= v7 || v6 + 48 * v4 <= a3)
  {
    sub_5C154(&qword_31EEB0);
    swift_arrayInitWithCopy(a3);
    return v7;
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_5D54C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else
  {
    if (v4 < 0)
    {
      result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
      goto LABEL_9;
    }
    v5 = a4 + 32 * a1 + 32;
    v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy(a3);
      return v6;
    }
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_5D63C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v4 < 0)
  {
LABEL_9:
    result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
    goto LABEL_11;
  }
  v8 = *(_QWORD *)(sub_5C154(&qword_31EF08) - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = *(_QWORD *)(v8 + 72);
  v11 = a4 + ((v9 + 32) & ~v9) + v10 * a1;
  v12 = v10 * v4;
  v13 = a3 + v12;
  v14 = v11 + v12;
  if (v11 >= v13 || v14 <= a3)
  {
    swift_arrayInitWithCopy(a3);
    return v13;
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_5D758(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5;
  unint64_t v7;
  unint64_t v8;
  uint64_t result;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v5 < 0)
  {
LABEL_9:
    result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
    goto LABEL_11;
  }
  v7 = a4 + 40 * a1 + 32;
  v8 = a3 + 40 * v5;
  if (v7 >= v8 || v7 + 40 * v5 <= a3)
  {
    sub_5C154(a5);
    swift_arrayInitWithCopy(a3);
    return v8;
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_5D860(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t result;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v5 < 0)
  {
LABEL_9:
    result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
    goto LABEL_11;
  }
  v9 = *(_QWORD *)(a5(0) - 8);
  v10 = *(unsigned __int8 *)(v9 + 80);
  v11 = *(_QWORD *)(v9 + 72);
  v12 = a4 + ((v10 + 32) & ~v10) + v11 * a1;
  v13 = v11 * v5;
  v14 = a3 + v13;
  v15 = v12 + v13;
  if (v12 >= v14 || v15 <= a3)
  {
    swift_arrayInitWithCopy(a3);
    return v14;
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_5D978(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else
  {
    if (v4 < 0)
    {
      result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
      goto LABEL_9;
    }
    v5 = a4 + 32 * a1 + 32;
    v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy(a3);
      return v6;
    }
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_5DA6C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v6;
  unint64_t v7;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else
  {
    if (v4 < 0)
    {
      result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
      goto LABEL_9;
    }
    v6 = a4 + 16 * a1 + 32;
    v7 = a3 + 16 * v4;
    if (v6 >= v7 || v6 + 16 * v4 <= a3)
    {
      sub_5C154(&qword_31EE88);
      swift_arrayInitWithCopy(a3);
      return v7;
    }
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_9:
  __break(1u);
  return result;
}

char *sub_5DB74(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  size_t v4;
  char *v5;
  char *v6;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else
  {
    if ((v4 & 0x8000000000000000) != 0)
    {
      result = (char *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
      goto LABEL_9;
    }
    v5 = (char *)(a4 + a1 + 32);
    v6 = &__dst[v4];
    if (v5 >= &__dst[v4] || &v5[v4] <= __dst)
    {
      memcpy(__dst, v5, v4);
      return v6;
    }
  }
  result = (char *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_5DC5C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_5DC98(__int128 *a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[1];
  *(_QWORD *)(a2 + 32) = *((_QWORD *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t sub_5DCB0(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t, uint64_t))(*(&type metadata for AnyHashable - 1) + 16))(a2, a1);
  return a2;
}

uint64_t sub_5DCEC(uint64_t a1)
{
  (*(void (**)(void))(*(&type metadata for AnyHashable - 1) + 8))();
  return a1;
}

uint64_t *sub_5DD20(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a1 - 8);
  if ((*(_DWORD *)(v3 + 80) & 0x20000) != 0)
  {
    v4 = swift_slowAlloc(*(_QWORD *)(v3 + 64), *(_DWORD *)(v3 + 80));
    *a2 = v4;
    return (uint64_t *)v4;
  }
  return a2;
}

uint64_t sub_5DD60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD v6[3];

  v6[0] = a2;
  v6[1] = a3;
  v6[2] = a4;
  return swift_getGenericMetadata(a1, v6, a5);
}

void type metadata accessor for SeriesManagerSeriesType(uint64_t a1)
{
  sub_5DE18(a1, &qword_31F058, (uint64_t)&unk_2E7600);
}

void type metadata accessor for BSUINavigationControllerOptionsKey(uint64_t a1)
{
  sub_5DE18(a1, &qword_31F060, (uint64_t)&unk_2E7628);
}

void type metadata accessor for ContentTasteType(uint64_t a1)
{
  sub_5DE18(a1, &qword_31F068, (uint64_t)&unk_2E7650);
}

void type metadata accessor for BSUIAddToWTRDelegatePriceTrackingOptInType(uint64_t a1)
{
  sub_5DE18(a1, &qword_31F070, (uint64_t)&unk_2E7670);
}

void type metadata accessor for CGPoint(uint64_t a1)
{
  sub_5DE18(a1, &qword_31F078, (uint64_t)&unk_2E76E8);
}

void type metadata accessor for MCatalogRequestView(uint64_t a1)
{
  sub_5DE18(a1, &qword_31F080, (uint64_t)&unk_2E7710);
}

void type metadata accessor for MCatalogRequestRelationship(uint64_t a1)
{
  sub_5DE18(a1, &qword_31F088, (uint64_t)&unk_2E7738);
}

void sub_5DE18(uint64_t a1, unint64_t *a2, uint64_t a3)
{
  unint64_t ForeignTypeMetadata;
  uint64_t v5;

  if (!*a2)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata(0, a3);
    if (!v5)
      atomic_store(ForeignTypeMetadata, a2);
  }
}

uint64_t sub_5DE5C()
{
  return sub_5C9A0(&qword_31F090, 255, (uint64_t (*)(uint64_t))type metadata accessor for MCatalogRequestRelationship, (uint64_t)&unk_25735C);
}

uint64_t sub_5DE8C()
{
  return sub_5C9A0(&qword_31F098, 255, (uint64_t (*)(uint64_t))type metadata accessor for MCatalogRequestRelationship, (uint64_t)&unk_257330);
}

uint64_t sub_5DEBC()
{
  return sub_5C9A0(&qword_31F0A0, 255, (uint64_t (*)(uint64_t))type metadata accessor for MCatalogRequestRelationship, (uint64_t)&unk_2573CC);
}

uint64_t sub_5DEEC()
{
  return sub_5C9A0(&qword_31F0A8, 255, (uint64_t (*)(uint64_t))type metadata accessor for MCatalogRequestView, (uint64_t)&unk_2574B4);
}

uint64_t sub_5DF1C()
{
  return sub_5C9A0(&qword_31F0B0, 255, (uint64_t (*)(uint64_t))type metadata accessor for MCatalogRequestView, (uint64_t)&unk_257488);
}

uint64_t sub_5DF4C()
{
  return sub_5C9A0(&qword_31F0B8, 255, (uint64_t (*)(uint64_t))type metadata accessor for MCatalogRequestView, (uint64_t)&unk_257524);
}

uint64_t sub_5DF7C()
{
  return sub_5C9A0(&qword_31F0C0, 255, (uint64_t (*)(uint64_t))type metadata accessor for BSUINavigationControllerOptionsKey, (uint64_t)&unk_257674);
}

uint64_t sub_5DFAC()
{
  return sub_5C9A0(&qword_31F0C8, 255, (uint64_t (*)(uint64_t))type metadata accessor for BSUINavigationControllerOptionsKey, (uint64_t)&unk_257648);
}

uint64_t sub_5DFDC()
{
  return sub_5C9A0(&qword_31F0D0, 255, (uint64_t (*)(uint64_t))type metadata accessor for SeriesManagerSeriesType, (uint64_t)a1_0);
}

uint64_t sub_5E00C()
{
  return sub_5C9A0(&qword_31F0D8, 255, (uint64_t (*)(uint64_t))type metadata accessor for SeriesManagerSeriesType, (uint64_t)aM);
}

uint64_t sub_5E03C()
{
  return sub_5C9A0(&qword_31F0E0, 255, (uint64_t (*)(uint64_t))type metadata accessor for SeriesManagerSeriesType, (uint64_t)&unk_2577F8);
}

uint64_t sub_5E06C()
{
  return sub_5C9A0(&qword_31F0E8, 255, (uint64_t (*)(uint64_t))type metadata accessor for BSUINavigationControllerOptionsKey, (uint64_t)&unk_2576E4);
}

uint64_t sub_5E09C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = sub_5C154(a2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_5E0D8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_5E11C(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_5E160(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_5E1A4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = sub_5C154(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_5E20C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  int *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t updated;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t result;
  _QWORD *v21;
  uint64_t v22;
  __int128 v23;

  v4 = (int *)type metadata accessor for RatingSummaryView(0);
  v5 = (_QWORD *)(a2 + v4[5]);
  v22 = 0;
  v6 = sub_5C154(&qword_31F478);
  State.init(wrappedValue:)(&v23, &v22, v6);
  *(_OWORD *)v5 = v23;
  v7 = a2 + v4[6];
  *(_QWORD *)v7 = swift_getKeyPath(&unk_257B80);
  *(_BYTE *)(v7 + 40) = 0;
  v8 = (_QWORD *)(a2 + v4[7]);
  *v8 = swift_getKeyPath(&unk_257BB0);
  v9 = sub_5C154(&qword_326110);
  swift_storeEnumTagMultiPayload(v8, v9, 0);
  v10 = (_QWORD *)(a2 + v4[8]);
  *v10 = swift_getKeyPath(&unk_257BE0);
  v11 = sub_5C154((uint64_t *)&unk_32A010);
  swift_storeEnumTagMultiPayload(v10, v11, 0);
  v12 = a2 + v4[9];
  *(_QWORD *)v12 = swift_getKeyPath(&unk_257C10);
  *(_BYTE *)(v12 + 8) = 0;
  sub_5E11C(a1, a2, type metadata accessor for RatingSummaryComponentModel);
  v13 = (uint64_t *)(a1 + *(int *)(type metadata accessor for RatingSummaryComponentModel(0) + 52));
  v14 = v13[1];
  if (v14)
  {
    v15 = *v13;
    updated = type metadata accessor for RatingUpdateProvider(0);
    v17 = swift_allocObject(updated, *(unsigned int *)(updated + 48), *(unsigned __int16 *)(updated + 52));
    *(_QWORD *)(v17 + 16) = 0;
    *(_BYTE *)(v17 + 24) = 1;
    *(_QWORD *)(v17 + 48) = 0;
    *(_QWORD *)(v17 + 56) = 0;
    v18 = swift_bridgeObjectRetain(v14);
    ObservationRegistrar.init()(v18);
    *(_BYTE *)(v17 + 25) = 0;
    *(_QWORD *)(v17 + 32) = v15;
    *(_QWORD *)(v17 + 40) = v14;
  }
  else
  {
    v17 = 0;
  }
  v22 = v17;
  State.init(wrappedValue:)(&v23, &v22, v6);
  v19 = v23;
  sub_6685C(a1, type metadata accessor for RatingSummaryComponentModel);
  swift_release(*v5);
  result = swift_release(v5[1]);
  *(_OWORD *)v5 = v19;
  v21 = (_QWORD *)(a2 + v4[10]);
  *v21 = 0;
  v21[1] = 0;
  return result;
}

uint64_t sub_5E400@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t (*v7)(_QWORD);
  uint64_t v9;

  v4 = type metadata accessor for RatingSummaryComponentModel(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5E11C(a1, (uint64_t)v6, v7);
  return sub_5E20C((uint64_t)v6, a2);
}

uint64_t sub_5E48C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_64818();
  return _ComponentBody.init(_:)(v2, a1, v2);
}

uint64_t sub_5E4BC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD v29[3];

  v28 = a1;
  v27 = type metadata accessor for RatingSummaryView(0);
  v2 = *(_QWORD *)(v27 - 8);
  v3 = *(_QWORD *)(v2 + 64);
  __chkstk_darwin(v27);
  v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_5C154(&qword_31F560);
  __chkstk_darwin(v5);
  v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_5C154(&qword_31F568);
  v9 = __chkstk_darwin(v8);
  v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v7 = static HorizontalAlignment.center.getter(v9);
  *((_QWORD *)v7 + 1) = 0x403C000000000000;
  v7[16] = 0;
  v12 = sub_5C154(&qword_31F570);
  sub_5E734(v1, (uint64_t)&v7[*(int *)(v12 + 44)]);
  sub_5E11C(v1, (uint64_t)v4, type metadata accessor for RatingSummaryView);
  v13 = *(unsigned __int8 *)(v2 + 80);
  v14 = (v13 + 16) & ~v13;
  v15 = v14 + v3;
  v16 = v13 | 7;
  v17 = swift_allocObject(&unk_2E79A8, v15, v13 | 7);
  sub_5E160((uint64_t)v4, v17 + v14, type metadata accessor for RatingSummaryView);
  sub_5E1A4((uint64_t)v7, (uint64_t)v11, &qword_31F560);
  v18 = &v11[*(int *)(v8 + 36)];
  *(_QWORD *)v18 = sub_66470;
  *((_QWORD *)v18 + 1) = v17;
  *((_QWORD *)v18 + 2) = 0;
  *((_QWORD *)v18 + 3) = 0;
  sub_5E09C((uint64_t)v7, &qword_31F560);
  v19 = (uint64_t *)(v1 + *(int *)(v27 + 40));
  v20 = *v19;
  v21 = v19[1];
  v29[1] = v20;
  v29[2] = v21;
  v22 = sub_5C154(&qword_31F578);
  State.wrappedValue.getter(v29, v22);
  sub_5E11C(v1, (uint64_t)v4, type metadata accessor for RatingSummaryView);
  v23 = swift_allocObject(&unk_2E79D0, v15, v16);
  sub_5E160((uint64_t)v4, v23 + v14, type metadata accessor for RatingSummaryView);
  v24 = sub_6674C();
  View.onChange<A>(of:initial:_:)(v29, 0, sub_66700, v23, v8, &type metadata for Double, v24, &protocol witness table for Double);
  swift_release(v23);
  return sub_5E09C((uint64_t)v11, &qword_31F568);
}

uint64_t sub_5E734@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  double v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __n128 v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;

  v52 = a2;
  v53 = type metadata accessor for RatingSummaryView(0);
  __chkstk_darwin(v53);
  v4 = (char *)&v50 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_5C154(&qword_31F5B0);
  __chkstk_darwin(v5);
  v51 = (char *)&v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v50 - v8;
  v10 = sub_5C154(&qword_31F5B8);
  __chkstk_darwin(v10);
  v12 = (char *)&v50 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_5C154(&qword_31F5C0);
  __chkstk_darwin(v13);
  v15 = (char *)&v50 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_5C154(&qword_31F5C8);
  __chkstk_darwin(v16);
  v18 = (char *)&v50 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v21 = (char *)&v50 - v20;
  v23 = __chkstk_darwin(v22);
  v25 = (char *)&v50 - v24;
  *(_QWORD *)v12 = static VerticalAlignment.top.getter(v23);
  *((_QWORD *)v12 + 1) = 0x4030000000000000;
  v12[16] = 0;
  v26 = sub_5C154(&qword_31F5D0);
  v27 = sub_5EB98(a1, (uint64_t)&v12[*(int *)(v26 + 44)]);
  v28 = static Alignment.center.getter(v27);
  sub_74190(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v15, 0.0, 1, 0.0, 1, v28, v29);
  v30 = sub_5E09C((uint64_t)v12, &qword_31F5B8);
  LOBYTE(v12) = static Edge.Set.top.getter(v30);
  v31 = EdgeInsets.init(_all:)(40.0);
  v33 = v32;
  v35 = v34;
  v37 = v36;
  sub_5E1A4((uint64_t)v15, (uint64_t)v21, &qword_31F5C0);
  v38 = &v21[*(int *)(v16 + 36)];
  *v38 = (char)v12;
  *((double *)v38 + 1) = v31;
  *((_QWORD *)v38 + 2) = v33;
  *((_QWORD *)v38 + 3) = v35;
  *((_QWORD *)v38 + 4) = v37;
  v38[40] = 0;
  sub_5E09C((uint64_t)v15, &qword_31F5C0);
  sub_66F14((uint64_t)v21, (uint64_t)v25, &qword_31F5C8);
  v39 = a1 + *(int *)(v53 + 36);
  v40 = *(_QWORD *)v39;
  LOBYTE(v12) = *(_BYTE *)(v39 + 8);
  sub_64DD8(*(_QWORD *)v39, (char)v12);
  LOBYTE(v16) = sub_768E8(v40, (char)v12);
  sub_64FFC(v40, (char)v12);
  sub_5E11C(a1, (uint64_t)v4, type metadata accessor for RatingSummaryView);
  if ((v16 & 1) == 0)
  {
    sub_6685C((uint64_t)v4, type metadata accessor for RatingSummaryView);
    v43 = (uint64_t)v51;
    v44 = v52;
    goto LABEL_5;
  }
  v41 = *(_QWORD *)&v4[*(int *)(type metadata accessor for RatingSummaryComponentModel(0) + 52) + 8];
  sub_6685C((uint64_t)v4, type metadata accessor for RatingSummaryView);
  v43 = (uint64_t)v51;
  v44 = v52;
  if (!v41)
  {
LABEL_5:
    v47 = sub_5C154(&qword_31F5D8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 56))(v9, 1, 1, v47);
    goto LABEL_6;
  }
  *(_QWORD *)v9 = static HorizontalAlignment.center.getter(v42);
  *((_QWORD *)v9 + 1) = 0x4020000000000000;
  v9[16] = 0;
  v45 = sub_5C154(&qword_31F5E8);
  sub_624F0(a1, &v9[*(int *)(v45 + 44)]);
  v46 = sub_5C154(&qword_31F5D8);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 56))(v9, 0, 1, v46);
LABEL_6:
  sub_5E1A4((uint64_t)v25, (uint64_t)v18, &qword_31F5C8);
  sub_5E1A4((uint64_t)v9, v43, &qword_31F5B0);
  sub_5E1A4((uint64_t)v18, v44, &qword_31F5C8);
  v48 = sub_5C154(&qword_31F5E0);
  sub_5E1A4(v43, v44 + *(int *)(v48 + 48), &qword_31F5B0);
  sub_5E09C((uint64_t)v9, &qword_31F5B0);
  sub_5E09C((uint64_t)v25, &qword_31F5C8);
  sub_5E09C(v43, &qword_31F5B0);
  return sub_5E09C((uint64_t)v18, &qword_31F5C8);
}

uint64_t sub_5EB98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  __n128 v44;
  uint64_t v45;
  void (**v46)(char *, uint64_t);
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t OpaqueTypeConformance2;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t *v57;
  char *v58;
  char *v59;
  _QWORD *v60;
  void (*v61)(char *, _QWORD, uint64_t);
  uint64_t result;
  uint64_t v63;
  char *v64;
  char *v65;
  void (*v66)(char *, char *, uint64_t);
  char *v67;
  char *v68;
  void (*v69)(char *, char *, uint64_t);
  uint64_t v70;
  void (*v71)(char *, uint64_t);
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  __n128 v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  void (*v97)(char *, char *, uint64_t);
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  void (*v102)(char *, uint64_t);
  char *v103;
  char *v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  void (**v125)(char *, uint64_t);
  char *v126;
  char *v127;
  _QWORD *v128;
  uint64_t v129;
  char *v130;
  uint64_t *v131;
  _QWORD v132[3];

  v119 = a2;
  v114 = type metadata accessor for RatingSummaryView(0);
  __chkstk_darwin(v114);
  v115 = (uint64_t)&v103 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_5C154(&qword_31F5B0);
  __chkstk_darwin(v4);
  v118 = (uint64_t)&v103 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v117 = (char *)&v103 - v7;
  v108 = sub_5C154(&qword_31F5F8);
  __chkstk_darwin(v108);
  v110 = (char *)&v103 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v106 = (char *)&v103 - v10;
  v11 = type metadata accessor for DynamicTypeSize(0);
  v128 = *(_QWORD **)(v11 - 8);
  __chkstk_darwin(v11);
  v126 = (char *)&v103 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v127 = (char *)&v103 - v14;
  v109 = sub_5C154(&qword_31F600);
  __chkstk_darwin(v109);
  v104 = (char *)&v103 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v107 = (uint64_t)&v103 - v17;
  v105 = sub_5C154(&qword_31F650);
  __chkstk_darwin(v105);
  v131 = (uint64_t *)((char *)&v103 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  v112 = sub_5C154(&qword_31F658);
  v111 = *(_QWORD *)(v112 - 8);
  __chkstk_darwin(v112);
  v116 = (char *)&v103 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v103 = (char *)&v103 - v21;
  __chkstk_darwin(v22);
  v130 = (char *)&v103 - v23;
  v129 = type metadata accessor for AccessibilityTraits(0);
  v125 = *(void (***)(char *, uint64_t))(v129 - 8);
  __chkstk_darwin(v129);
  v124 = (char *)&v103 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = type metadata accessor for AccessibilityChildBehavior(0);
  v122 = *(_QWORD *)(v25 - 8);
  v123 = v25;
  __chkstk_darwin(v25);
  v27 = (char *)&v103 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = sub_5C154(&qword_31F660);
  __chkstk_darwin(v28);
  v30 = (char *)&v103 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = sub_5C154(&qword_31F668);
  __chkstk_darwin(v31);
  v33 = (char *)&v103 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = sub_5C154(&qword_31F670);
  v35 = *(_QWORD *)(v34 - 8);
  v120 = v34;
  v121 = v35;
  __chkstk_darwin(v34);
  v37 = (char *)&v103 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = sub_5C154(&qword_31F678);
  __chkstk_darwin(v38);
  v113 = (uint64_t)&v103 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v40);
  v42 = (char *)&v103 - v41;
  v44 = __chkstk_darwin(v43);
  v46 = (void (**)(char *, uint64_t))((char *)&v103 - v45);
  *(_QWORD *)v30 = static HorizontalAlignment.center.getter(v44);
  *((_QWORD *)v30 + 1) = 0;
  v30[16] = 0;
  v47 = sub_5C154(&qword_31F680);
  sub_5F5B8(a1, &v30[*(int *)(v47 + 44)]);
  sub_5E1A4((uint64_t)v30, (uint64_t)v33, &qword_31F660);
  *(_QWORD *)&v33[*(int *)(v31 + 36)] = 0x3FF0000000000000;
  v48 = sub_5E09C((uint64_t)v30, &qword_31F660);
  static AccessibilityChildBehavior.combine.getter(v48);
  v49 = sub_669D8();
  View.accessibilityElement(children:)(v27, v31, v49);
  (*(void (**)(char *, uint64_t))(v122 + 8))(v27, v123);
  v50 = sub_5E09C((uint64_t)v33, &qword_31F668);
  v51 = v124;
  static AccessibilityTraits.isHeader.getter(v50);
  v132[0] = v31;
  v132[1] = v49;
  v52 = v126;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v132, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
  v54 = v120;
  View.accessibilityAddTraits(_:)(v51, v120, OpaqueTypeConformance2);
  v125[1](v51, v129);
  (*(void (**)(char *, uint64_t))(v121 + 8))(v37, v54);
  v125 = v46;
  v55 = sub_66F14((uint64_t)v42, (uint64_t)v46, &qword_31F678);
  v56 = static HorizontalAlignment.trailing.getter(v55);
  v57 = v131;
  *v131 = v56;
  v57[1] = 0;
  *((_BYTE *)v57 + 16) = 0;
  v58 = (char *)v57 + *(int *)(sub_5C154(&qword_31F6A8) + 44);
  v59 = v127;
  v129 = a1;
  sub_60128(a1, v58);
  v60 = v128;
  v61 = (void (*)(char *, _QWORD, uint64_t))v128[13];
  v61(v59, enum case for DynamicTypeSize.xSmall(_:), v11);
  v61(v52, enum case for DynamicTypeSize.accessibility1(_:), v11);
  sub_648E0(&qword_31F610, (uint64_t (*)(uint64_t))&type metadata accessor for DynamicTypeSize, (uint64_t)&protocol conformance descriptor for DynamicTypeSize);
  result = dispatch thunk of static Comparable.<= infix(_:_:)(v59, v52, v11);
  if ((result & 1) != 0)
  {
    v63 = v108;
    v64 = v106;
    v65 = &v106[*(int *)(v108 + 48)];
    v66 = (void (*)(char *, char *, uint64_t))v60[4];
    v66(v106, v59, v11);
    v66(v65, v52, v11);
    v67 = v110;
    v68 = &v110[*(int *)(v63 + 48)];
    v69 = (void (*)(char *, char *, uint64_t))v60[2];
    v69(v110, v64, v11);
    v69(v68, v65, v11);
    v70 = (uint64_t)v104;
    v66(v104, v67, v11);
    v71 = (void (*)(char *, uint64_t))v60[1];
    v71(v68, v11);
    v72 = &v67[*(int *)(v63 + 48)];
    v66(v67, v64, v11);
    v66(v72, v65, v11);
    v73 = v109;
    v66((char *)(v70 + *(int *)(v109 + 36)), v72, v11);
    v71(v67, v11);
    v74 = v107;
    sub_66F14(v70, v107, &qword_31F600);
    v75 = sub_67060(&qword_31F6B0, &qword_31F650, (uint64_t)&protocol conformance descriptor for VStack<A>);
    sub_67060(&qword_31F620, &qword_31F600, (uint64_t)&protocol conformance descriptor for ClosedRange<A>);
    v76 = v103;
    v77 = v75;
    v78 = (uint64_t)v131;
    View.dynamicTypeSize<A>(_:)(v74, v105, v73, v77);
    sub_5E09C(v74, &qword_31F600);
    sub_5E09C(v78, &qword_31F650);
    v79 = v111;
    v80 = v130;
    v81 = v112;
    (*(void (**)(char *, char *, uint64_t))(v111 + 32))(v130, v76, v112);
    v82 = v129;
    v83 = v129 + *(int *)(v114 + 36);
    v84 = *(_QWORD *)v83;
    LOBYTE(v78) = *(_BYTE *)(v83 + 8);
    sub_64DD8(*(_QWORD *)v83, v78);
    LOBYTE(v66) = sub_768E8(v84, v78);
    sub_64FFC(v84, v78);
    v85 = v115;
    sub_5E11C(v82, v115, type metadata accessor for RatingSummaryView);
    v86 = v79;
    v87 = v80;
    if ((v66 & 1) != 0)
    {
      sub_6685C(v85, type metadata accessor for RatingSummaryView);
      v88 = (uint64_t)v117;
    }
    else
    {
      v89 = *(_QWORD *)(v85 + *(int *)(type metadata accessor for RatingSummaryComponentModel(0) + 52) + 8);
      sub_6685C(v85, type metadata accessor for RatingSummaryView);
      v88 = (uint64_t)v117;
      if (v89)
      {
        *(_QWORD *)v88 = static HorizontalAlignment.center.getter(v90);
        *(_QWORD *)(v88 + 8) = 0x4020000000000000;
        *(_BYTE *)(v88 + 16) = 0;
        v91 = sub_5C154(&qword_31F5E8);
        sub_624F0(v129, (char *)(v88 + *(int *)(v91 + 44)));
        v92 = sub_5C154(&qword_31F5D8);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v92 - 8) + 56))(v88, 0, 1, v92);
LABEL_7:
        v94 = (uint64_t)v125;
        v95 = v113;
        sub_5E1A4((uint64_t)v125, v113, &qword_31F678);
        v96 = v86;
        v97 = *(void (**)(char *, char *, uint64_t))(v86 + 16);
        v98 = v116;
        v97(v116, v87, v81);
        v99 = v118;
        sub_5E1A4(v88, v118, &qword_31F5B0);
        v100 = v119;
        sub_5E1A4(v95, v119, &qword_31F678);
        v101 = sub_5C154(&qword_31F6B8);
        v97((char *)(v100 + *(int *)(v101 + 48)), v98, v81);
        sub_5E1A4(v99, v100 + *(int *)(v101 + 64), &qword_31F5B0);
        sub_5E09C(v88, &qword_31F5B0);
        v102 = *(void (**)(char *, uint64_t))(v96 + 8);
        v102(v130, v81);
        sub_5E09C(v94, &qword_31F678);
        sub_5E09C(v99, &qword_31F5B0);
        v102(v98, v81);
        return sub_5E09C(v95, &qword_31F678);
      }
    }
    v93 = sub_5C154(&qword_31F5D8);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v93 - 8) + 56))(v88, 1, 1, v93);
    goto LABEL_7;
  }
  __break(1u);
  return result;
}

uint64_t sub_5F5B8@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  double v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  uint64_t v52;
  uint64_t v53;
  double v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  double v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unsigned int v65;
  void (*v66)(char *, char *, uint64_t);
  void (*v67)(char *, _QWORD, uint64_t);
  char *v68;
  uint64_t v69;
  char *v70;
  uint64_t result;
  uint64_t v72;
  char *v73;
  char *v74;
  void (*v75)(char *, char *, uint64_t);
  uint64_t v76;
  uint64_t v77;
  char *v78;
  char *v79;
  void (*v80)(char *, char *, uint64_t);
  char *v81;
  char *v82;
  char *v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  unint64_t v89;
  uint64_t v90;
  char *v91;
  _QWORD *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  double v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  char v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  uint64_t v128;
  void (*v129)(char *, _QWORD, uint64_t);
  char *v130;
  uint64_t v131;
  char *v132;
  char *v133;
  uint64_t v134;
  void (*v135)(char *, char *, uint64_t);
  char *v136;
  char *v137;
  void (*v138)(char *, char *, uint64_t);
  uint64_t v139;
  char *v140;
  char *v141;
  uint64_t v142;
  uint64_t v143;
  char *v144;
  uint64_t v145;
  char *v146;
  uint64_t v147;
  void (*v148)(char *, char *, uint64_t);
  char *v149;
  uint64_t v150;
  void (*v151)(char *, char *, uint64_t);
  char *v152;
  uint64_t v153;
  void (*v154)(char *, uint64_t);
  void (*v155)(char *, uint64_t);
  uint64_t v156;
  void (*v157)(char *, char *, uint64_t);
  char *v158;
  void (*v159)(char *, _QWORD, uint64_t);
  unsigned int v160;
  char *v161;
  uint64_t v162;
  char *v163;
  char *v164;
  uint64_t v165;
  void (*v166)(uint64_t, uint64_t);
  uint64_t v167;
  uint64_t v168;
  unint64_t v169;
  uint64_t v170;
  void (*v171)(char *, char *, uint64_t);
  char *v172;
  uint64_t v173;
  char *v174;
  uint64_t v175;
  uint64_t v176;
  char *v177;
  char *v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  char *v183;
  uint64_t v184;
  char *v185;
  char *v186;
  uint64_t v187;
  __int128 v188;
  __int128 v189;
  __int128 v190;
  __int128 v191;
  __int128 v192;
  __int128 v193;
  _OWORD v194[3];
  char v195;
  _BYTE v196[7];
  _BYTE v197[7];
  char v198;
  _BYTE v199[7];
  _BYTE v200[7];
  char v201;
  _OWORD v202[6];
  _OWORD v203[3];

  v182 = a1;
  v163 = a2;
  v165 = sub_5C154(&qword_31F6C0);
  v162 = *(_QWORD *)(v165 - 8);
  __chkstk_darwin(v165);
  v164 = (char *)&v156 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v161 = (char *)&v156 - v5;
  v176 = sub_5C154(&qword_31F5F8);
  __chkstk_darwin(v176);
  v178 = (char *)&v156 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v174 = (char *)&v156 - v8;
  v187 = type metadata accessor for DynamicTypeSize(0);
  v171 = *(void (**)(char *, char *, uint64_t))(v187 - 8);
  __chkstk_darwin(v187);
  v186 = (char *)&v156 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v185 = (char *)&v156 - v11;
  v175 = sub_5C154(&qword_31F600);
  __chkstk_darwin(v175);
  v172 = (char *)&v156 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v173 = (uint64_t)&v156 - v14;
  v181 = type metadata accessor for ColorConstants(0);
  v170 = *(_QWORD *)(v181 - 8);
  __chkstk_darwin(v181);
  v180 = (uint64_t)&v156 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_5C154(&qword_31F7E8);
  __chkstk_darwin(v16);
  v18 = (char *)&v156 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v179 = sub_5C154(&qword_31F7F0);
  v184 = *(_QWORD *)(v179 - 8);
  __chkstk_darwin(v179);
  v177 = (char *)&v156 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v183 = (char *)&v156 - v21;
  v168 = type metadata accessor for RatingSummaryComponentModel(0);
  v22 = (_QWORD *)(a1 + *(int *)(v168 + 28));
  v23 = v22[1];
  *(_QWORD *)&v202[0] = *v22;
  *((_QWORD *)&v202[0] + 1) = v23;
  v24 = sub_668F8();
  swift_bridgeObjectRetain(v23);
  v169 = v24;
  v25 = Text.init<A>(_:)(v202, &type metadata for String, v24);
  v27 = v26;
  v29 = v28;
  v31 = v30 & 1;
  v32 = static Font.Weight.semibold.getter();
  v33 = enum case for Font.Design.serif (_:);
  v34 = type metadata accessor for Font.Design(0);
  v35 = *(_QWORD *)(v34 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v35 + 104))(v18, v33, v34);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v18, 0, 1, v34);
  v36 = static Font.system(size:weight:design:)(*(_QWORD *)&v32, 0, v18, 60.0);
  sub_5E09C((uint64_t)v18, &qword_31F7E8);
  v37 = Text.font(_:)(v36, v25, v27, v31, v29);
  v39 = v38;
  LOBYTE(v35) = v40;
  v42 = v41;
  swift_release(v36);
  v43 = v35 & 1;
  sub_6693C(v25, v27, v31);
  swift_bridgeObjectRelease(v29);
  v44 = type metadata accessor for RatingSummaryView(0);
  v45 = v180;
  v167 = v182 + *(int *)(v44 + 32);
  v46 = sub_76AA0(v180);
  v47 = ColorConstants.booksKey.getter(v46);
  v166 = *(void (**)(uint64_t, uint64_t))(v170 + 8);
  v166(v45, v181);
  *(_QWORD *)&v202[0] = v47;
  v48 = Text.foregroundStyle<A>(_:)(v202, v37, v39, v43, v42, &type metadata for Color, &protocol witness table for Color);
  v50 = v49;
  LOBYTE(v31) = v51;
  v170 = v52;
  sub_6693C(v37, v39, v43);
  swift_release(v47);
  v53 = swift_bridgeObjectRelease(v42);
  LOBYTE(v47) = static Edge.Set.top.getter(v53);
  v54 = EdgeInsets.init(_all:)(-9.0);
  v56 = v55;
  v58 = v57;
  v60 = v59;
  LOBYTE(v37) = static Edge.Set.bottom.getter();
  v61 = EdgeInsets.init(_all:)(-6.0);
  v201 = v31 & 1;
  v198 = 0;
  v195 = 0;
  *(_QWORD *)&v188 = v48;
  *((_QWORD *)&v188 + 1) = v50;
  LOBYTE(v189) = v31 & 1;
  *(_DWORD *)((char *)&v189 + 1) = *(_DWORD *)v200;
  DWORD1(v189) = *(_DWORD *)&v200[3];
  *((_QWORD *)&v189 + 1) = v170;
  LOBYTE(v190) = v47;
  *(_DWORD *)((char *)&v190 + 1) = *(_DWORD *)v199;
  DWORD1(v190) = *(_DWORD *)&v199[3];
  *((double *)&v190 + 1) = v54;
  *(_QWORD *)&v191 = v56;
  *((_QWORD *)&v191 + 1) = v58;
  *(_QWORD *)&v192 = v60;
  BYTE8(v192) = 0;
  HIDWORD(v192) = *(_DWORD *)&v197[3];
  *(_DWORD *)((char *)&v192 + 9) = *(_DWORD *)v197;
  LOBYTE(v193) = v37;
  DWORD1(v193) = *(_DWORD *)&v196[3];
  *(_DWORD *)((char *)&v193 + 1) = *(_DWORD *)v196;
  *((double *)&v193 + 1) = v61;
  *(_QWORD *)&v194[0] = v62;
  *((_QWORD *)&v194[0] + 1) = v63;
  *(_QWORD *)&v194[1] = v64;
  BYTE8(v194[1]) = 0;
  v65 = enum case for DynamicTypeSize.xSmall(_:);
  v66 = v171;
  v67 = (void (*)(char *, _QWORD, uint64_t))*((_QWORD *)v171 + 13);
  v68 = v185;
  v69 = v187;
  v67(v185, enum case for DynamicTypeSize.xSmall(_:), v187);
  v70 = v186;
  v67(v186, enum case for DynamicTypeSize.medium(_:), v69);
  v170 = sub_648E0(&qword_31F610, (uint64_t (*)(uint64_t))&type metadata accessor for DynamicTypeSize, (uint64_t)&protocol conformance descriptor for DynamicTypeSize);
  result = dispatch thunk of static Comparable.<= infix(_:_:)(v68, v70, v69);
  if ((result & 1) != 0)
  {
    v160 = v65;
    v72 = v176;
    v73 = v174;
    v74 = &v174[*(int *)(v176 + 48)];
    v75 = (void (*)(char *, char *, uint64_t))*((_QWORD *)v66 + 4);
    v76 = v187;
    v75(v174, v185, v187);
    v158 = v74;
    v75(v74, v186, v76);
    v77 = *(int *)(v72 + 48);
    v78 = v178;
    v159 = v67;
    v79 = &v178[v77];
    v80 = (void (*)(char *, char *, uint64_t))*((_QWORD *)v66 + 2);
    v80(v178, v73, v76);
    v157 = v80;
    v80(v79, v74, v76);
    v81 = v172;
    v75(v172, v78, v76);
    v82 = (char *)*((_QWORD *)v66 + 1);
    ((void (*)(char *, uint64_t))v82)(v79, v76);
    v83 = &v78[*(int *)(v72 + 48)];
    v75(v78, v73, v76);
    v75(v83, v158, v76);
    v84 = v175;
    v85 = &v81[*(int *)(v175 + 36)];
    v171 = v75;
    v75(v85, v83, v76);
    v158 = v82;
    ((void (*)(char *, uint64_t))v82)(v78, v76);
    v86 = (uint64_t)v81;
    v87 = v173;
    sub_66F14(v86, v173, &qword_31F600);
    v88 = sub_5C154(&qword_31F7F8);
    v89 = sub_670F8();
    v90 = sub_67060(&qword_31F620, &qword_31F600, (uint64_t)&protocol conformance descriptor for ClosedRange<A>);
    v91 = v177;
    v156 = v90;
    View.dynamicTypeSize<A>(_:)(v87, v88, v84, v89);
    sub_5E09C(v87, &qword_31F600);
    v202[4] = v192;
    v202[5] = v193;
    v203[0] = v194[0];
    *(_OWORD *)((char *)v203 + 9) = *(_OWORD *)((char *)v194 + 9);
    v202[0] = v188;
    v202[1] = v189;
    v202[2] = v190;
    v202[3] = v191;
    sub_671C8((uint64_t)v202);
    (*(void (**)(char *, char *, uint64_t))(v184 + 32))(v183, v91, v179);
    v92 = (_QWORD *)(v182 + *(int *)(v168 + 32));
    v93 = v92[1];
    *(_QWORD *)&v188 = *v92;
    *((_QWORD *)&v188 + 1) = v93;
    swift_bridgeObjectRetain(v93);
    v94 = Text.init<A>(_:)(&v188, &type metadata for String, v169);
    v96 = v95;
    v98 = v97;
    v100 = v99 & 1;
    v101 = static Font.subheadline.getter();
    v102 = Text.font(_:)(v101, v94, v96, v100, v98);
    v104 = v103;
    LOBYTE(v75) = v105;
    v107 = v106;
    swift_release(v101);
    LOBYTE(v101) = v75 & 1;
    sub_6693C(v94, v96, v100);
    v108 = swift_bridgeObjectRelease(v98);
    v109 = static Font.Weight.regular.getter(v108);
    v110 = Text.fontWeight(_:)(*(_QWORD *)&v109, 0, v102, v104, v75 & 1, v107);
    v112 = v111;
    v114 = v113;
    v116 = v115 & 1;
    sub_6693C(v102, v104, v101);
    swift_bridgeObjectRelease(v107);
    v117 = v180;
    v118 = sub_76AA0(v180);
    v119 = ColorConstants.booksKey.getter(v118);
    v166(v117, v181);
    *(_QWORD *)&v188 = v119;
    v120 = v114;
    v121 = Text.foregroundStyle<A>(_:)(&v188, v110, v112, v116, v114, &type metadata for Color, &protocol witness table for Color);
    v123 = v122;
    LOBYTE(v102) = v124;
    v126 = v125;
    sub_6693C(v110, v112, v116);
    swift_release(v119);
    swift_bridgeObjectRelease(v120);
    *(_QWORD *)&v188 = v121;
    *((_QWORD *)&v188 + 1) = v123;
    LOBYTE(v189) = v102 & 1;
    *((_QWORD *)&v189 + 1) = v126;
    v127 = v185;
    v128 = v187;
    v129 = v159;
    v159(v185, v160, v187);
    v130 = v186;
    v129(v186, enum case for DynamicTypeSize.xxxLarge(_:), v128);
    result = dispatch thunk of static Comparable.<= infix(_:_:)(v127, v130, v128);
    if ((result & 1) != 0)
    {
      v131 = v176;
      v132 = v174;
      v133 = &v174[*(int *)(v176 + 48)];
      v134 = v187;
      v135 = v171;
      v171(v174, v185, v187);
      v135(v133, v186, v134);
      v136 = v178;
      v137 = &v178[*(int *)(v131 + 48)];
      v138 = v157;
      v157(v178, v132, v134);
      v138(v137, v133, v134);
      v139 = (uint64_t)v172;
      v135(v172, v136, v134);
      v140 = v158;
      ((void (*)(char *, uint64_t))v158)(v137, v134);
      v141 = &v136[*(int *)(v131 + 48)];
      v135(v136, v132, v134);
      v135(v141, v133, v134);
      v142 = v175;
      v135((char *)(v139 + *(int *)(v175 + 36)), v141, v134);
      ((void (*)(char *, uint64_t))v140)(v136, v134);
      v143 = v173;
      sub_66F14(v139, v173, &qword_31F600);
      v144 = v164;
      View.dynamicTypeSize<A>(_:)(v143, &type metadata for Text, v142, &protocol witness table for Text);
      sub_5E09C(v143, &qword_31F600);
      sub_6693C(v188, *((uint64_t *)&v188 + 1), v189);
      swift_bridgeObjectRelease(*((_QWORD *)&v189 + 1));
      v146 = v161;
      v145 = v162;
      v147 = v165;
      (*(void (**)(char *, char *, uint64_t))(v162 + 32))(v161, v144, v165);
      v148 = *(void (**)(char *, char *, uint64_t))(v184 + 16);
      v149 = v177;
      v150 = v179;
      v148(v177, v183, v179);
      v151 = *(void (**)(char *, char *, uint64_t))(v145 + 16);
      v151(v144, v146, v147);
      v152 = v163;
      v148(v163, v149, v150);
      v153 = sub_5C154(&qword_31F818);
      v151(&v152[*(int *)(v153 + 48)], v144, v147);
      v154 = *(void (**)(char *, uint64_t))(v145 + 8);
      v154(v146, v147);
      v155 = *(void (**)(char *, uint64_t))(v184 + 8);
      v155(v183, v150);
      v154(v144, v147);
      return ((uint64_t (*)(char *, uint64_t))v155)(v149, v150);
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_60128@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t KeyPath;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  double v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  _QWORD *v75;
  void (*v76)(char *, _QWORD, uint64_t);
  uint64_t result;
  uint64_t v78;
  char *v79;
  char *v80;
  void (*v81)(char *, char *, uint64_t);
  char *v82;
  char *v83;
  void (*v84)(char *, char *, uint64_t);
  uint64_t v85;
  void (*v86)(char *, uint64_t);
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t OpaqueTypeConformance2;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  void (*v98)(char *, char *, uint64_t);
  char *v99;
  char *v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  void (*v104)(char *, uint64_t);
  _QWORD *v105;
  unint64_t v106;
  char *v107;
  char *v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  char *v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  char *v128;
  char *v129;
  _QWORD *v130;
  _QWORD v131[2];
  __int128 v132;
  void *v133;
  uint64_t v134;

  v122 = a2;
  v111 = sub_5C154(&qword_31F5F8);
  __chkstk_darwin(v111);
  v115 = (char *)&v105 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v108 = (char *)&v105 - v5;
  v6 = type metadata accessor for DynamicTypeSize(0);
  v130 = *(_QWORD **)(v6 - 8);
  __chkstk_darwin(v6);
  v128 = (char *)&v105 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v129 = (char *)&v105 - v9;
  v120 = sub_5C154(&qword_31F600);
  __chkstk_darwin(v120);
  v107 = (char *)&v105 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v109 = (uint64_t)&v105 - v12;
  v13 = type metadata accessor for ColorConstants(0);
  v126 = *(_QWORD *)(v13 - 8);
  v127 = v13;
  __chkstk_darwin(v13);
  v125 = (uint64_t)&v105 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v117 = sub_5C154(&qword_31F6C0);
  v116 = *(_QWORD *)(v117 - 8);
  __chkstk_darwin(v117);
  v113 = (char *)&v105 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_5C154(&qword_31F6C8);
  __chkstk_darwin(v16);
  v121 = (char *)&v105 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v119 = (uint64_t)&v105 - v19;
  v124 = type metadata accessor for RatingSummaryView(0);
  v20 = *(_QWORD *)(v124 - 8);
  v21 = *(_QWORD *)(v20 + 64);
  __chkstk_darwin(v124);
  v22 = (char *)&v105 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v118 = sub_5C154(&qword_31F6D0);
  v112 = *(_QWORD *)(v118 - 8);
  __chkstk_darwin(v118);
  v114 = (char *)&v105 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  v26 = (char *)&v105 - v25;
  v132 = xmmword_257900;
  KeyPath = swift_getKeyPath(&unk_257D28);
  v123 = a1;
  sub_5E11C(a1, (uint64_t)v22, type metadata accessor for RatingSummaryView);
  v28 = *(unsigned __int8 *)(v20 + 80);
  v29 = (v28 + 16) & ~v28;
  v30 = swift_allocObject(&unk_2E79F8, v29 + v21, v28 | 7);
  sub_5E160((uint64_t)v22, v30 + v29, type metadata accessor for RatingSummaryView);
  v31 = sub_5C154(&qword_31F6D8);
  v32 = sub_5C154(&qword_31F6E0);
  v33 = sub_66AC4();
  v34 = sub_66B74();
  v110 = v26;
  ForEach<>.init(_:id:content:)(&v132, KeyPath, sub_66A78, v30, v31, v32, v33, &protocol witness table for Int, v34);
  v35 = (_QWORD *)(a1 + *(int *)(type metadata accessor for RatingSummaryComponentModel(0) + 36));
  v36 = *v35;
  v37 = v35[1];
  v105 = v35;
  *(_QWORD *)&v132 = v36;
  *((_QWORD *)&v132 + 1) = v37;
  v38 = sub_668F8();
  swift_bridgeObjectRetain(v37);
  v106 = v38;
  v39 = Text.init<A>(_:)(&v132, &type metadata for String, v38);
  v41 = v40;
  v43 = v42;
  v45 = v44 & 1;
  v46 = static Font.subheadline.getter();
  v47 = Text.font(_:)(v46, v39, v41, v45, v43);
  v49 = v48;
  LOBYTE(a1) = v50;
  v52 = v51;
  swift_release(v46);
  v53 = a1 & 1;
  sub_6693C(v39, v41, v45);
  v54 = swift_bridgeObjectRelease(v43);
  v55 = static Font.Weight.regular.getter(v54);
  v56 = Text.fontWeight(_:)(*(_QWORD *)&v55, 0, v47, v49, v53, v52);
  v58 = v57;
  v60 = v59;
  v62 = v61 & 1;
  sub_6693C(v47, v49, v53);
  swift_bridgeObjectRelease(v52);
  v63 = v125;
  v64 = sub_76AA0(v125);
  v65 = ColorConstants.booksKey.getter(v64);
  (*(void (**)(uint64_t, uint64_t))(v126 + 8))(v63, v127);
  *(_QWORD *)&v132 = v65;
  v66 = Text.foregroundStyle<A>(_:)(&v132, v56, v58, v62, v60, &type metadata for Color, &protocol witness table for Color);
  v68 = v67;
  LOBYTE(v53) = v69;
  v71 = v70;
  v72 = v56;
  v73 = v128;
  sub_6693C(v72, v58, v62);
  swift_release(v65);
  swift_bridgeObjectRelease(v60);
  *(_QWORD *)&v132 = v66;
  *((_QWORD *)&v132 + 1) = v68;
  LOBYTE(v133) = v53 & 1;
  v134 = v71;
  v74 = v129;
  v75 = v130;
  v76 = (void (*)(char *, _QWORD, uint64_t))v130[13];
  v76(v129, enum case for DynamicTypeSize.xSmall(_:), v6);
  v76(v73, enum case for DynamicTypeSize.xxxLarge(_:), v6);
  sub_648E0(&qword_31F610, (uint64_t (*)(uint64_t))&type metadata accessor for DynamicTypeSize, (uint64_t)&protocol conformance descriptor for DynamicTypeSize);
  result = dispatch thunk of static Comparable.<= infix(_:_:)(v74, v73, v6);
  if ((result & 1) != 0)
  {
    v78 = v111;
    v79 = v108;
    v80 = &v108[*(int *)(v111 + 48)];
    v81 = (void (*)(char *, char *, uint64_t))v75[4];
    v81(v108, v74, v6);
    v81(v80, v73, v6);
    v82 = v115;
    v83 = &v115[*(int *)(v78 + 48)];
    v84 = (void (*)(char *, char *, uint64_t))v75[2];
    v84(v115, v79, v6);
    v84(v83, v80, v6);
    v85 = (uint64_t)v107;
    v81(v107, v82, v6);
    v86 = (void (*)(char *, uint64_t))v75[1];
    v86(v83, v6);
    v87 = &v82[*(int *)(v78 + 48)];
    v81(v82, v79, v6);
    v81(v87, v80, v6);
    v88 = v120;
    v81((char *)(v85 + *(int *)(v120 + 36)), v87, v6);
    v86(v82, v6);
    v89 = v109;
    sub_66F14(v85, v109, &qword_31F600);
    v90 = sub_67060(&qword_31F620, &qword_31F600, (uint64_t)&protocol conformance descriptor for ClosedRange<A>);
    v91 = v113;
    View.dynamicTypeSize<A>(_:)(v89, &type metadata for Text, v88, &protocol witness table for Text);
    sub_5E09C(v89, &qword_31F600);
    sub_6693C(v132, *((uint64_t *)&v132 + 1), (char)v133);
    swift_bridgeObjectRelease(v134);
    v92 = v105[1];
    v131[0] = *v105;
    v131[1] = v92;
    *(_QWORD *)&v132 = &type metadata for Text;
    *((_QWORD *)&v132 + 1) = v88;
    v133 = &protocol witness table for Text;
    v134 = v90;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v132, &opaque type descriptor for <<opaque return type of View.dynamicTypeSize<A>(_:)>>, 1);
    v94 = (uint64_t)v121;
    v95 = v117;
    View.accessibilityLabel<A>(_:)(v131, v117, &type metadata for String, OpaqueTypeConformance2, v106);
    (*(void (**)(char *, uint64_t))(v116 + 8))(v91, v95);
    v96 = v119;
    sub_66F14(v94, v119, &qword_31F6C8);
    v97 = v112;
    v98 = *(void (**)(char *, char *, uint64_t))(v112 + 16);
    v99 = v114;
    v100 = v110;
    v101 = v118;
    v98(v114, v110, v118);
    sub_5E1A4(v96, v94, &qword_31F6C8);
    v102 = v122;
    v98(v122, v99, v101);
    v103 = sub_5C154(&qword_31F718);
    sub_5E1A4(v94, (uint64_t)&v102[*(int *)(v103 + 48)], &qword_31F6C8);
    sub_5E09C(v96, &qword_31F6C8);
    v104 = *(void (**)(char *, uint64_t))(v97 + 8);
    v104(v100, v101);
    sub_5E09C(v94, &qword_31F6C8);
    return ((uint64_t (*)(char *, uint64_t))v104)(v99, v101);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_609CC@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t OpaqueTypeConformance2;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD v37[2];
  unint64_t v38;
  uint64_t v39;
  unint64_t v40;

  v36 = a3;
  v5 = type metadata accessor for AccessibilityChildBehavior(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_5C154(&qword_31F700);
  __chkstk_darwin(v9);
  v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_5C154(&qword_31F720);
  v13 = *(_QWORD *)(v12 - 8);
  v34 = v12;
  v35 = v13;
  __chkstk_darwin(v12);
  v15 = (char *)&v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_5C154(&qword_31F6E0);
  v17 = __chkstk_darwin(v16);
  v33 = (char *)&v32 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = *a1;
  *(_QWORD *)v11 = static VerticalAlignment.center.getter(v17);
  *((_QWORD *)v11 + 1) = 0x4024000000000000;
  v11[16] = 0;
  v20 = sub_5C154(&qword_31F728);
  v21 = sub_60CA0(v19, a2, (uint64_t)&v11[*(int *)(v20 + 44)]);
  static AccessibilityChildBehavior.combine.getter(v21);
  v22 = sub_67060(&qword_31F708, &qword_31F700, (uint64_t)&protocol conformance descriptor for HStack<A>);
  View.accessibilityElement(children:)(v8, v9, v22);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  sub_5E09C((uint64_t)v11, &qword_31F700);
  result = type metadata accessor for RatingSummaryComponentModel(0);
  if (__OFSUB__(5, v19))
  {
    __break(1u);
    goto LABEL_8;
  }
  if (__OFSUB__(5 - v19, 1))
  {
LABEL_8:
    __break(1u);
    return result;
  }
  v37[0] = *(_QWORD *)(a2 + *(int *)(result + 60));
  v38 = 4 - v19;
  v24 = sub_5C154(&qword_31F730);
  v25 = sub_67060(&qword_31F738, &qword_31F730, (uint64_t)&protocol conformance descriptor for [A]);
  Collection.subscript.getter(&v39, &v38, v24, v25);
  v26 = v39;
  if (v40)
  {
    v27 = v40;
  }
  else
  {
    v26 = 0;
    v27 = 0xE000000000000000;
  }
  v39 = v26;
  v40 = v27;
  v37[0] = v9;
  v37[1] = v22;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v37, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
  v29 = sub_668F8();
  v31 = (uint64_t)v33;
  v30 = v34;
  View.accessibilityLabel<A>(_:)(&v39, v34, &type metadata for String, OpaqueTypeConformance2, v29);
  swift_bridgeObjectRelease(v27);
  (*(void (**)(char *, uint64_t))(v35 + 8))(v15, v30);
  return sub_66F14(v31, v36, &qword_31F6E0);
}

uint64_t sub_60CA0@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  _OWORD *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __n128 v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  __n128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  __int128 v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t KeyPath;
  uint64_t *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t (*v54)@<X0>(uint64_t@<X0>, uint64_t@<X8>);
  uint64_t (*v55)@<X0>(uint64_t@<X0>, uint64_t@<X8>);
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t (**v62)@<X0>(uint64_t@<X0>, uint64_t@<X8>);
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  _OWORD v81[3];

  v68 = a1;
  v80 = a3;
  v76 = type metadata accessor for RatingSummaryView(0);
  v5 = *(_QWORD *)(*(_QWORD *)(v76 - 8) + 64);
  v78 = *(_QWORD *)(v76 - 8);
  v79 = v5;
  __chkstk_darwin(v76);
  v77 = (uint64_t)&v68 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for ColorConstants(0);
  v74 = *(_QWORD *)(v7 - 8);
  v75 = v7;
  __chkstk_darwin(v7);
  v9 = (char *)&v68 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for RoundedRectangle(0);
  __chkstk_darwin(v10);
  v12 = (_OWORD *)((char *)&v68 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = sub_5C154(&qword_31F740);
  __chkstk_darwin(v13);
  v15 = (char *)&v68 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v69 = sub_5C154(&qword_31F748);
  __chkstk_darwin(v69);
  v17 = (char *)&v68 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v70 = sub_5C154(&qword_31F750);
  __chkstk_darwin(v70);
  v19 = (char *)&v68 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v73 = sub_5C154(&qword_31F758);
  __chkstk_darwin(v73);
  v21 = (char *)&v68 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v72 = (uint64_t)&v68 - v23;
  v24 = sub_5C154(&qword_31F760);
  __chkstk_darwin(v24);
  v71 = (uint64_t)&v68 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = __chkstk_darwin(v26);
  v29 = (char *)&v68 - v28;
  *(_QWORD *)v29 = static VerticalAlignment.center.getter(v27);
  *((_QWORD *)v29 + 1) = 0;
  v29[16] = 0;
  v30 = sub_5C154(&qword_31F768);
  sub_61208(a1, a2, &v29[*(int *)(v30 + 44)]);
  v31 = (char *)v12 + *(int *)(v10 + 20);
  v32 = enum case for RoundedCornerStyle.circular(_:);
  v34 = type metadata accessor for RoundedCornerStyle(0, v33);
  v35 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 104))(v31, v32, v34);
  __asm { FMOV            V0.2D, #10.0 }
  *v12 = _Q0;
  v41 = static Alignment.center.getter(v35);
  sub_741E8(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v15, 0.0, 1, 0.0, 1, v41, v42);
  v43 = sub_6685C((uint64_t)v12, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
  v44 = static Alignment.center.getter(v43);
  _FrameLayout.init(width:height:alignment:)(v81, 0, 1, 0x4000000000000000, 0, v44, v45);
  sub_5E1A4((uint64_t)v15, (uint64_t)v17, &qword_31F740);
  v46 = &v17[*(int *)(v69 + 36)];
  v47 = v81[1];
  *(_OWORD *)v46 = v81[0];
  *((_OWORD *)v46 + 1) = v47;
  *((_OWORD *)v46 + 2) = v81[2];
  sub_5E09C((uint64_t)v15, &qword_31F740);
  v48 = sub_76AA0((uint64_t)v9);
  v49 = ColorConstants.booksTertiaryLabel.getter(v48);
  (*(void (**)(char *, uint64_t))(v74 + 8))(v9, v75);
  KeyPath = swift_getKeyPath(&unk_257D40);
  sub_5E1A4((uint64_t)v17, (uint64_t)v19, &qword_31F748);
  v51 = (uint64_t *)&v19[*(int *)(v70 + 36)];
  *v51 = KeyPath;
  v51[1] = v49;
  v52 = sub_5E09C((uint64_t)v17, &qword_31F748);
  v53 = static Alignment.leading.getter(v52);
  v55 = v54;
  v56 = a2;
  v57 = v77;
  sub_5E11C(v56, v77, type metadata accessor for RatingSummaryView);
  v58 = *(unsigned __int8 *)(v78 + 80);
  v59 = (v58 + 16) & ~v58;
  v60 = (v79 + v59 + 7) & 0xFFFFFFFFFFFFFFF8;
  v61 = swift_allocObject(&unk_2E7A20, v60 + 8, v58 | 7);
  sub_5E160(v57, v61 + v59, type metadata accessor for RatingSummaryView);
  *(_QWORD *)(v61 + v60) = v68;
  sub_5E1A4((uint64_t)v19, (uint64_t)v21, &qword_31F750);
  v62 = (uint64_t (**)@<X0>(uint64_t@<X0>, uint64_t@<X8>))&v21[*(int *)(v73 + 36)];
  *v62 = sub_66EB4;
  v62[1] = (uint64_t (*)@<X0>(uint64_t@<X0>, uint64_t@<X8>))v61;
  v62[2] = (uint64_t (*)@<X0>(uint64_t@<X0>, uint64_t@<X8>))v53;
  v62[3] = v55;
  sub_5E09C((uint64_t)v19, &qword_31F750);
  v63 = v72;
  sub_66F14((uint64_t)v21, v72, &qword_31F758);
  v64 = v71;
  sub_5E1A4((uint64_t)v29, v71, &qword_31F760);
  sub_5E1A4(v63, (uint64_t)v21, &qword_31F758);
  v65 = v80;
  sub_5E1A4(v64, v80, &qword_31F760);
  v66 = sub_5C154(&qword_31F770);
  sub_5E1A4((uint64_t)v21, v65 + *(int *)(v66 + 48), &qword_31F758);
  sub_5E09C(v63, &qword_31F758);
  sub_5E09C((uint64_t)v29, &qword_31F760);
  sub_5E09C((uint64_t)v21, &qword_31F758);
  return sub_5E09C(v64, &qword_31F760);
}

void sub_61208(unint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t KeyPath;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, char *, uint64_t);
  char *v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t);
  uint64_t v35;
  char *v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  unint64_t v48;

  v46 = a3;
  v5 = type metadata accessor for RatingSummaryView(0);
  v45 = *(_QWORD *)(v5 - 8);
  v6 = *(_QWORD *)(v45 + 64);
  __chkstk_darwin(v5);
  v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_5C154(&qword_31F798);
  v44 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v10 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v35 - v12;
  __chkstk_darwin(v14);
  v43 = (char *)&v35 - v15;
  __chkstk_darwin(v16);
  v18 = (char *)&v35 - v17;
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    v38 = v6;
    v42 = a2;
    v47 = 0;
    v48 = a1;
    KeyPath = swift_getKeyPath(&unk_257D28);
    v20 = sub_5C154(&qword_31F6D8);
    v21 = sub_5C154(&qword_31F7A0);
    v22 = sub_66AC4();
    v37 = sub_66F58();
    v40 = v21;
    v41 = v20;
    v39 = v22;
    ForEach<>.init(_:id:content:)(&v47, KeyPath, sub_61508, 0, v20, v21, v22, &protocol witness table for Int, v37);
    if (a1 <= 5)
    {
      v47 = 0;
      v48 = 5 - a1;
      v23 = swift_getKeyPath(&unk_257D28);
      v36 = v18;
      v24 = (uint64_t)v7;
      sub_5E11C(v42, (uint64_t)v7, type metadata accessor for RatingSummaryView);
      v25 = v44;
      v26 = *(unsigned __int8 *)(v45 + 80);
      v27 = v43;
      v28 = v46;
      v29 = (v26 + 16) & ~v26;
      v30 = swift_allocObject(&unk_2E7A48, v29 + v38, v26 | 7);
      sub_5E160(v24, v30 + v29, type metadata accessor for RatingSummaryView);
      ForEach<>.init(_:id:content:)(&v47, v23, sub_670A4, v30, v41, v40, v39, &protocol witness table for Int, v37);
      v31 = *(void (**)(char *, char *, uint64_t))(v25 + 16);
      v32 = v36;
      v31(v13, v36, v8);
      v31(v10, v27, v8);
      v31(v28, v13, v8);
      v33 = sub_5C154(&qword_31F7E0);
      v31(&v28[*(int *)(v33 + 48)], v10, v8);
      v34 = *(void (**)(char *, uint64_t))(v25 + 8);
      v34(v27, v8);
      v34(v32, v8);
      v34(v10, v8);
      v34(v13, v8);
      return;
    }
  }
  __break(1u);
}

uint64_t sub_61508@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t KeyPath;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;

  v2 = sub_5C154(&qword_31F7E8);
  __chkstk_darwin(v2);
  v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = Image.init(systemName:)(0x6C69662E72617473, 0xE90000000000006CLL);
  v6 = static Color.clear.getter();
  KeyPath = swift_getKeyPath(&unk_257D40);
  v8 = type metadata accessor for Font.Design(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v4, 1, 1, v8);
  v9 = static Font.system(size:weight:design:)(0, 1, v4, 8.0);
  sub_5E09C((uint64_t)v4, &qword_31F7E8);
  result = swift_getKeyPath(&unk_257D70);
  *a1 = v5;
  a1[1] = KeyPath;
  a1[2] = v6;
  a1[3] = result;
  a1[4] = v9;
  return result;
}

uint64_t sub_61614@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t KeyPath;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;

  v2 = sub_5C154(&qword_31F7E8);
  __chkstk_darwin(v2);
  v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ColorConstants(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = Image.init(systemName:)(0x6C69662E72617473, 0xE90000000000006CLL);
  type metadata accessor for RatingSummaryView(0);
  v10 = sub_76AA0((uint64_t)v8);
  v11 = ColorConstants.booksSecondaryLabel.getter(v10);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  KeyPath = swift_getKeyPath(&unk_257D40);
  v13 = type metadata accessor for Font.Design(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v4, 1, 1, v13);
  v14 = static Font.system(size:weight:design:)(0, 1, v4, 8.0);
  sub_5E09C((uint64_t)v4, &qword_31F7E8);
  result = swift_getKeyPath(&unk_257D70);
  *a1 = v9;
  a1[1] = KeyPath;
  a1[2] = v11;
  a1[3] = result;
  a1[4] = v14;
  return result;
}

uint64_t sub_61788@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _OWORD *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  __n128 v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v26;
  uint64_t v27;
  uint64_t result;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  double v33;
  double v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  __int128 v38;
  _QWORD v39[2];
  uint64_t v40;
  uint64_t v41;
  _QWORD v42[2];
  _OWORD v43[3];

  v40 = a4;
  v41 = a3;
  v39[1] = a1;
  v5 = type metadata accessor for ColorConstants(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for RoundedRectangle(0);
  __chkstk_darwin(v9);
  v11 = (_OWORD *)((char *)v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = sub_5C154(&qword_31F778);
  __chkstk_darwin(v12);
  v14 = (char *)v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39[0] = sub_5C154(&qword_31F780);
  v15 = __chkstk_darwin(v39[0]);
  v17 = (char *)v39 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = (char *)v11 + *(int *)(v9 + 20);
  v19 = enum case for RoundedCornerStyle.circular(_:);
  v20 = type metadata accessor for RoundedCornerStyle(0, v15);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 104))(v18, v19, v20);
  __asm { FMOV            V0.2D, #10.0 }
  *v11 = _Q0;
  type metadata accessor for RatingSummaryView(0);
  v26 = sub_76AA0((uint64_t)v8);
  v27 = ColorConstants.booksSecondaryLabel.getter(v26);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  sub_5E11C((uint64_t)v11, (uint64_t)v14, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
  *(_QWORD *)&v14[*(int *)(v12 + 52)] = v27;
  *(_WORD *)&v14[*(int *)(v12 + 56)] = 256;
  sub_6685C((uint64_t)v11, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
  result = type metadata accessor for RatingSummaryComponentModel(0);
  if (__OFSUB__(5, v41))
  {
    __break(1u);
    goto LABEL_8;
  }
  if (__OFSUB__(5 - v41, 1))
  {
LABEL_8:
    __break(1u);
    return result;
  }
  v29 = *(_QWORD *)(a2 + *(int *)(result + 56));
  v42[0] = 4 - v41;
  v42[1] = v29;
  v30 = sub_5C154(&qword_31F788);
  v31 = sub_67060(&qword_31F790, &qword_31F788, (uint64_t)&protocol conformance descriptor for [A]);
  v32 = Collection.subscript.getter(v43, v42, v30, v31);
  if (BYTE8(v43[0]))
    v33 = 0.0;
  else
    v33 = *(double *)v43;
  v34 = v33 * GeometryProxy.size.getter(v32);
  v35 = static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)(v43, *(_QWORD *)&v34, 0, 0, 1, v35, v36);
  sub_5E1A4((uint64_t)v14, (uint64_t)v17, &qword_31F778);
  v37 = &v17[*(int *)(v39[0] + 36)];
  v38 = v43[1];
  *(_OWORD *)v37 = v43[0];
  *((_OWORD *)v37 + 1) = v38;
  *((_OWORD *)v37 + 2) = v43[2];
  sub_5E09C((uint64_t)v14, &qword_31F778);
  return sub_66F14((uint64_t)v17, v40, &qword_31F780);
}

_QWORD *sub_61A80()
{
  uint64_t v0;
  _QWORD *result;
  uint64_t v2;
  uint64_t v3;

  type metadata accessor for RatingSummaryView(0);
  v0 = sub_5C154(&qword_31F5A8);
  result = State.wrappedValue.getter(&v3, v0);
  v2 = v3;
  if (v3)
  {
    sub_633B4();
    return (_QWORD *)swift_release(v2);
  }
  return result;
}

uint64_t sub_61AE4(uint64_t a1, double *a2, uint64_t a3)
{
  __n128 v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  double v32;
  uint64_t result;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  double v41;
  uint64_t v42;
  uint64_t v43;
  __n128 v44;
  char *v45;
  uint64_t v46;
  uint64_t inited;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  void (*v51)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  double *v62;
  char *v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  uint64_t v70;
  _QWORD *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  __int128 v80;
  char *v81;
  char *v82;
  uint64_t v83;
  double *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  double v96[5];
  _QWORD v97[3];
  uint64_t v98;
  uint64_t v99;
  char v100[8];

  v78 = type metadata accessor for OpaqueMetricsFieldsContext(0);
  v77 = *(_QWORD *)(v78 - 8);
  v5 = __chkstk_darwin(v78);
  v76 = (uint64_t)&v74 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v85 = type metadata accessor for AppAnalyticsAction.Type(0, v5);
  v83 = *(_QWORD *)(v85 - 8);
  v7 = __chkstk_darwin(v85);
  v84 = (double *)((char *)&v74 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v91 = type metadata accessor for AppAnalyticsAction(0, v7);
  v90 = *(_QWORD *)(v91 - 8);
  __chkstk_darwin(v91);
  v89 = (char *)&v74 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_5C154(&qword_31F590);
  __chkstk_darwin(v10);
  v82 = (char *)&v74 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v86 = type metadata accessor for JSAction(0);
  __chkstk_darwin(v86);
  v81 = (char *)&v74 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __chkstk_darwin(v13);
  v88 = (uint64_t)&v74 - v15;
  *(_QWORD *)&v80 = type metadata accessor for Metrics.Location(0, v14);
  v16 = *(_QWORD *)(v80 - 8);
  v17 = __chkstk_darwin(v80);
  v19 = (char *)&v74 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for Metrics.ClickActionType(0, v17);
  v21 = *(_QWORD *)(v20 - 8);
  v22 = __chkstk_darwin(v20);
  v24 = (char *)&v74 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = type metadata accessor for Metrics.TargetType(0, v22);
  v26 = *(_QWORD *)(v25 - 8);
  __chkstk_darwin(v25);
  v28 = (char *)&v74 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v93 = type metadata accessor for ActionMetrics(0);
  v87 = *(_QWORD *)(v93 - 8);
  __chkstk_darwin(v93);
  v92 = (char *)&v74 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v30);
  v94 = (char *)&v74 - v31;
  v32 = *a2;
  result = type metadata accessor for RatingSummaryComponentModel(0);
  v34 = *(int *)(result + 52);
  v95 = a3;
  v35 = (uint64_t *)(a3 + v34);
  v36 = v35[1];
  if (v36)
  {
    v79 = *v35;
    v75 = type metadata accessor for RatingSummaryView(0);
    v37 = (uint64_t *)(v95 + *(int *)(v75 + 40));
    v38 = *v37;
    v39 = v37[1];
    v97[0] = v38;
    v97[1] = v39;
    swift_bridgeObjectRetain(v36);
    v40 = sub_5C154(&qword_31F578);
    State.wrappedValue.getter(v96, v40);
    if (v96[0] <= 0.0)
    {
      return swift_bridgeObjectRelease(v36);
    }
    else
    {
      v41 = ceil(v32) / 5.0;
      (*(void (**)(char *, _QWORD, uint64_t))(v26 + 104))(v28, enum case for Metrics.TargetType.button(_:), v25);
      v42 = (*(uint64_t (**)(char *, _QWORD, uint64_t))(v21 + 104))(v24, enum case for Metrics.ClickActionType.rate(_:), v20);
      v43 = static Metrics.actionDetails(with:)(v42, v41);
      static Metrics.Location.genericButton.getter();
      static Metrics.createClickMetrics(targetId:targetType:actionType:actionDetails:actionUrl:location:)(v79, v36, v28, v24, v43, 0, 0, v19);
      swift_bridgeObjectRelease(v43);
      (*(void (**)(char *, _QWORD))(v16 + 8))(v19, v80);
      (*(void (**)(char *, uint64_t))(v21 + 8))(v24, v20);
      v44.n128_f64[0] = (*(double (**)(char *, uint64_t))(v26 + 8))(v28, v25);
      v45 = v92;
      static ActionMetrics.notInstrumented.getter(v44);
      v46 = sub_5C154(&qword_31F598);
      inited = swift_initStackObject(v46, v100);
      v80 = xmmword_255F00;
      *(_OWORD *)(inited + 16) = xmmword_255F00;
      *(_QWORD *)(inited + 32) = 0x64496D616461;
      *(_QWORD *)(inited + 40) = 0xE600000000000000;
      v48 = v79;
      *(_QWORD *)(inited + 48) = v79;
      *(_QWORD *)(inited + 56) = v36;
      *(_QWORD *)(inited + 72) = &type metadata for String;
      *(_QWORD *)(inited + 80) = 0x676E69746172;
      *(_QWORD *)(inited + 88) = 0xE600000000000000;
      *(_QWORD *)(inited + 120) = &type metadata for Double;
      *(double *)(inited + 96) = v41;
      swift_bridgeObjectRetain(v36);
      v49 = sub_52A54(inited);
      v50 = type metadata accessor for ClickData(0);
      v51 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 56);
      v52 = (uint64_t)v82;
      v51(v82, 1, 1, v50);
      v53 = v86;
      v54 = v81;
      v55 = (uint64_t)&v81[*(int *)(v86 + 28)];
      v51((char *)v55, 1, 1, v50);
      v56 = v87;
      v57 = v45;
      v58 = v93;
      (*(void (**)(char *, char *, uint64_t))(v87 + 32))(v54, v57, v93);
      v59 = &v54[*(int *)(v53 + 20)];
      strcpy(v59, "SubmitReview");
      v59[13] = 0;
      *((_WORD *)v59 + 7) = -5120;
      *(_QWORD *)&v54[*(int *)(v53 + 24)] = v49;
      sub_66814(v52, v55);
      v60 = (uint64_t)v54;
      v61 = v88;
      sub_5E160(v60, v88, type metadata accessor for JSAction);
      v62 = v84;
      *(_QWORD *)v84 = v48;
      *((_QWORD *)v62 + 1) = v36;
      v62[2] = v41;
      (*(void (**)(double *, _QWORD, uint64_t))(v83 + 104))(v62, enum case for AppAnalyticsAction.Type.reportRatingEvent(_:), v85);
      v63 = v89;
      AppAnalyticsAction.init(type:)(v62);
      sub_76AD4((uint64_t)v97);
      v64 = v98;
      if (v98)
      {
        v85 = v99;
        v84 = (double *)sub_66898(v97, v98);
        v65 = v92;
        v66 = v94;
        (*(void (**)(char *, char *, uint64_t))(v56 + 16))(v92, v94, v58);
        v67 = sub_5C154(&qword_31EF10);
        v68 = swift_allocObject(v67, 112, 7);
        *(_OWORD *)(v68 + 16) = v80;
        *(_QWORD *)(v68 + 56) = v53;
        *(_QWORD *)(v68 + 64) = sub_648E0(&qword_3200B0, type metadata accessor for JSAction, (uint64_t)&protocol conformance descriptor for JSAction);
        v69 = sub_668BC((_QWORD *)(v68 + 32));
        sub_5E11C(v61, (uint64_t)v69, type metadata accessor for JSAction);
        v70 = v91;
        *(_QWORD *)(v68 + 96) = v91;
        *(_QWORD *)(v68 + 104) = sub_648E0(&qword_31F5A0, (uint64_t (*)(uint64_t))&type metadata accessor for AppAnalyticsAction, (uint64_t)&protocol conformance descriptor for AppAnalyticsAction);
        v71 = sub_668BC((_QWORD *)(v68 + 72));
        v72 = v90;
        (*(void (**)(_QWORD *, char *, uint64_t))(v90 + 16))(v71, v63, v70);
        *(_QWORD *)&v96[3] = type metadata accessor for CompoundAction(0);
        *(_QWORD *)&v96[4] = &protocol witness table for CompoundAction;
        sub_668BC(v96);
        CompoundAction.init(actionMetrics:subactions:)(v65, v68);
        v73 = v76;
        sub_76B00(v76);
        PerformAction.callAsFunction(_:withMetrics:)(v96, v73, v64, v85);
        (*(void (**)(uint64_t, uint64_t))(v77 + 8))(v73, v78);
        (*(void (**)(char *, uint64_t))(v72 + 8))(v63, v70);
        sub_6685C(v61, type metadata accessor for JSAction);
        (*(void (**)(char *, uint64_t))(v56 + 8))(v66, v93);
        _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(v96);
        return _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(v97);
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v90 + 8))(v63, v91);
        sub_6685C(v61, type metadata accessor for JSAction);
        (*(void (**)(char *, uint64_t))(v56 + 8))(v94, v58);
        return sub_5E09C((uint64_t)v97, &qword_326190);
      }
    }
  }
  return result;
}

uint64_t sub_62360()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t KeyPath;
  uint64_t v4;
  __int128 v6;
  uint64_t v7;

  v6 = *(_OWORD *)(v0 + *(int *)(type metadata accessor for RatingSummaryView(0) + 20));
  v1 = sub_5C154(&qword_31F5A8);
  State.wrappedValue.getter(&v7, v1);
  v2 = v7;
  if (v7)
  {
    KeyPath = swift_getKeyPath(&unk_257A88);
    *(_QWORD *)&v6 = v2;
    v4 = sub_648E0(&qword_31F448, type metadata accessor for RatingUpdateProvider, (uint64_t)aY_2);
    ObservationRegistrar.access<A, B>(_:keyPath:)(&v6, KeyPath, v4);
    swift_release(KeyPath);
    __asm { BR              X10 }
  }
  return 0;
}

uint64_t sub_624F0@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  double v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t KeyPath;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(char *);
  char *v43;
  char *v44;
  uint64_t result;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  void (*v50)(char *, char *, uint64_t);
  char *v51;
  uint64_t v52;
  char *v53;
  void (*v54)(char *, char *, uint64_t);
  uint64_t v55;
  void (*v56)(char *, uint64_t);
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char v87;
  uint64_t v88;
  uint64_t v89;
  char v90;
  char *v91;
  uint64_t v92;
  char *v93;
  void (*v94)(char *);
  uint64_t v95;
  char *v96;
  char *v97;
  void (*v98)(char *, char *, uint64_t);
  char *v99;
  uint64_t v100;
  void (*v101)(uint64_t, char *, uint64_t);
  uint64_t v102;
  void (*v103)(uint64_t, uint64_t);
  char *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  unint64_t v108;
  char *v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  void (*v113)(char *, char *, uint64_t);
  char *v114;
  uint64_t v115;
  char *v116;
  void (*v117)(char *, char *, uint64_t);
  char *v118;
  uint64_t v119;
  void (*v120)(char *, uint64_t);
  void (*v121)(char *, uint64_t);
  _QWORD v122[2];
  void (*v123)(uint64_t, char *, uint64_t);
  void (*v124)(uint64_t, uint64_t);
  void (*v125)(char *, char *, uint64_t);
  uint64_t v126;
  void (*v127)(char *);
  char *v128;
  char *v129;
  uint64_t v130;
  char *v131;
  uint64_t v132;
  char *v133;
  uint64_t v134;
  char *v135;
  unsigned int v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  char *v142;
  char *v143;
  uint64_t v144;
  uint64_t v145;
  char *v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  char *v150;
  char *v151;
  uint64_t v152;
  __int128 v153;
  double v154;
  uint64_t v155;
  uint64_t v156;
  char v157;
  _QWORD v158[2];

  v133 = a2;
  v141 = type metadata accessor for ColorConstants(0);
  v140 = *(_QWORD *)(v141 - 8);
  __chkstk_darwin(v141);
  v139 = (uint64_t)v122 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v132 = sub_5C154(&qword_31F5F0);
  v130 = *(_QWORD *)(v132 - 8);
  __chkstk_darwin(v132);
  v131 = (char *)v122 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v129 = (char *)v122 - v6;
  v149 = sub_5C154(&qword_31F5F8);
  __chkstk_darwin(v149);
  v8 = (char *)v122 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v143 = (char *)v122 - v10;
  v11 = type metadata accessor for DynamicTypeSize(0);
  v12 = *(_QWORD **)(v11 - 8);
  __chkstk_darwin(v11);
  v151 = (char *)v122 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v150 = (char *)v122 - v15;
  v145 = sub_5C154(&qword_31F600);
  __chkstk_darwin(v145);
  v142 = (char *)v122 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __chkstk_darwin(v17);
  v144 = (uint64_t)v122 - v19;
  v137 = type metadata accessor for InteractiveStarRatingView(0, v18);
  v20 = *(_QWORD *)(v137 - 8);
  __chkstk_darwin(v137);
  v22 = (char *)v122 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v147 = sub_5C154(&qword_31F608);
  v152 = *(_QWORD *)(v147 - 8);
  __chkstk_darwin(v147);
  v128 = (char *)v122 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  v135 = (char *)v122 - v25;
  __chkstk_darwin(v26);
  v146 = (char *)v122 - v27;
  v28 = type metadata accessor for RatingSummaryView(0);
  v29 = (uint64_t *)(a1 + *(int *)(v28 + 40));
  v30 = *v29;
  v31 = v29[1];
  v158[0] = v30;
  v158[1] = v31;
  v32 = sub_5C154(&qword_31F578);
  State.projectedValue.getter(&v153, v32);
  v33 = v153;
  v34 = v154;
  v138 = v28;
  v35 = *(int *)(v28 + 20);
  v148 = a1;
  v153 = *(_OWORD *)(a1 + v35);
  v36 = sub_5C154(&qword_31F5A8);
  State.wrappedValue.getter(v158, v36);
  v37 = v158[0];
  if (v158[0])
  {
    KeyPath = swift_getKeyPath(&unk_257A60);
    *(_QWORD *)&v153 = v37;
    v39 = sub_648E0(&qword_31F448, type metadata accessor for RatingUpdateProvider, (uint64_t)aY_2);
    ObservationRegistrar.access<A, B>(_:keyPath:)(&v153, KeyPath, v39);
    swift_release(KeyPath);
    v40 = *(_QWORD *)(v37 + 16);
    v41 = *(unsigned __int8 *)(v37 + 24);
    swift_release(v37);
  }
  else
  {
    v40 = 0;
    v41 = 1;
  }
  InteractiveStarRatingView.init(value:initialValue:)(v33, *((_QWORD *)&v33 + 1), v40, v41, v34);
  v42 = (void (*)(char *))v12[13];
  v43 = v150;
  v136 = enum case for DynamicTypeSize.xSmall(_:);
  v42(v150);
  v44 = v151;
  ((void (*)(char *, _QWORD, uint64_t))v42)(v151, enum case for DynamicTypeSize.xxxLarge(_:), v11);
  v134 = sub_648E0(&qword_31F610, (uint64_t (*)(uint64_t))&type metadata accessor for DynamicTypeSize, (uint64_t)&protocol conformance descriptor for DynamicTypeSize);
  result = dispatch thunk of static Comparable.<= infix(_:_:)(v43, v44, v11);
  v46 = v149;
  if ((result & 1) != 0)
  {
    v47 = *(int *)(v149 + 48);
    v126 = v20;
    v48 = v143;
    v49 = &v143[v47];
    v127 = v42;
    v50 = (void (*)(char *, char *, uint64_t))v12[4];
    v50(v143, v43, v11);
    v50(v49, v44, v11);
    v51 = v8;
    v52 = v46;
    v53 = &v51[*(int *)(v46 + 48)];
    v54 = (void (*)(char *, char *, uint64_t))v12[2];
    v54(v51, v48, v11);
    v123 = (void (*)(uint64_t, char *, uint64_t))v54;
    v54(v53, v49, v11);
    v55 = (uint64_t)v142;
    v50(v142, v51, v11);
    v56 = (void (*)(char *, uint64_t))v12[1];
    v56(v53, v11);
    v57 = &v51[*(int *)(v52 + 48)];
    v50(v51, v48, v11);
    v50(v57, v49, v11);
    v58 = v145;
    v59 = v55 + *(int *)(v145 + 36);
    v125 = v50;
    v50((char *)v59, v57, v11);
    v122[0] = v51;
    v124 = (void (*)(uint64_t, uint64_t))v56;
    v56(v51, v11);
    v60 = v144;
    sub_66F14(v55, v144, &qword_31F600);
    v61 = sub_648E0(&qword_31F618, (uint64_t (*)(uint64_t))&type metadata accessor for InteractiveStarRatingView, (uint64_t)&protocol conformance descriptor for InteractiveStarRatingView);
    v62 = sub_67060(&qword_31F620, &qword_31F600, (uint64_t)&protocol conformance descriptor for ClosedRange<A>);
    v63 = v135;
    v64 = v137;
    v122[1] = v62;
    View.dynamicTypeSize<A>(_:)(v60, v137, v58, v61);
    sub_5E09C(v60, &qword_31F600);
    (*(void (**)(char *, uint64_t))(v126 + 8))(v22, v64);
    (*(void (**)(char *, char *, uint64_t))(v152 + 32))(v146, v63, v147);
    *(_QWORD *)&v153 = sub_62360();
    *((_QWORD *)&v153 + 1) = v65;
    v66 = sub_668F8();
    v67 = Text.init<A>(_:)(&v153, &type metadata for String, v66);
    v69 = v68;
    v71 = v70;
    v73 = v72 & 1;
    v74 = static Font.subheadline.getter();
    v75 = Text.font(_:)(v74, v67, v69, v73, v71);
    v77 = v76;
    LOBYTE(v58) = v78;
    v80 = v79;
    swift_release(v74);
    LOBYTE(v74) = v58 & 1;
    sub_6693C(v67, v69, v73);
    swift_bridgeObjectRelease(v71);
    v81 = v139;
    v82 = sub_76AA0(v139);
    v83 = ColorConstants.booksSecondaryLabel.getter(v82);
    (*(void (**)(uint64_t, uint64_t))(v140 + 8))(v81, v141);
    *(_QWORD *)&v153 = v83;
    v84 = Text.foregroundStyle<A>(_:)(&v153, v75, v77, v58 & 1, v80, &type metadata for Color, &protocol witness table for Color);
    v86 = v85;
    LOBYTE(v73) = v87;
    v89 = v88;
    v90 = v74;
    v91 = v150;
    sub_6693C(v75, v77, v90);
    swift_release(v83);
    swift_bridgeObjectRelease(v80);
    v92 = swift_getKeyPath(&unk_257CF0);
    *(_QWORD *)&v153 = v84;
    *((_QWORD *)&v153 + 1) = v86;
    v93 = v151;
    LOBYTE(v154) = v73 & 1;
    v155 = v89;
    v156 = v92;
    v157 = 1;
    v94 = v127;
    ((void (*)(char *, _QWORD, uint64_t))v127)(v91, v136, v11);
    ((void (*)(char *, _QWORD, uint64_t))v94)(v93, enum case for DynamicTypeSize.accessibility3(_:), v11);
    result = dispatch thunk of static Comparable.<= infix(_:_:)(v91, v93, v11);
    if ((result & 1) != 0)
    {
      v95 = v149;
      v96 = v143;
      v97 = &v143[*(int *)(v149 + 48)];
      v98 = v125;
      v125(v143, v91, v11);
      v98(v97, v93, v11);
      v99 = (char *)v122[0];
      v100 = v122[0] + *(int *)(v95 + 48);
      v101 = v123;
      v123(v122[0], v96, v11);
      v101(v100, v97, v11);
      v102 = (uint64_t)v142;
      v98(v142, v99, v11);
      v103 = v124;
      v124(v100, v11);
      v104 = &v99[*(int *)(v95 + 48)];
      v98(v99, v96, v11);
      v98(v104, v97, v11);
      v105 = v145;
      v98((char *)(v102 + *(int *)(v145 + 36)), v104, v11);
      v103((uint64_t)v99, v11);
      v106 = v144;
      sub_66F14(v102, v144, &qword_31F600);
      v107 = sub_5C154(&qword_31F628);
      v108 = sub_66954();
      v109 = v131;
      View.dynamicTypeSize<A>(_:)(v106, v107, v105, v108);
      sub_5E09C(v106, &qword_31F600);
      sub_6693C(v153, *((uint64_t *)&v153 + 1), SLOBYTE(v154));
      swift_bridgeObjectRelease(v155);
      swift_release(v156);
      v110 = v130;
      v111 = v129;
      v112 = v132;
      (*(void (**)(char *, char *, uint64_t))(v130 + 32))(v129, v109, v132);
      v113 = *(void (**)(char *, char *, uint64_t))(v152 + 16);
      v114 = v128;
      v116 = v146;
      v115 = v147;
      v113(v128, v146, v147);
      v117 = *(void (**)(char *, char *, uint64_t))(v110 + 16);
      v117(v109, v111, v112);
      v118 = v133;
      v113(v133, v114, v115);
      v119 = sub_5C154(&qword_31F648);
      v117(&v118[*(int *)(v119 + 48)], v109, v112);
      v120 = *(void (**)(char *, uint64_t))(v110 + 8);
      v120(v111, v112);
      v121 = *(void (**)(char *, uint64_t))(v152 + 8);
      v121(v116, v115);
      v120(v109, v112);
      return ((uint64_t (*)(char *, uint64_t))v121)(v114, v115);
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_62F58()
{
  return static View._viewListCount(inputs:)();
}

uint64_t sub_62F74()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_257A60);
  v4 = v0;
  v2 = sub_648E0(&qword_31F448, type metadata accessor for RatingUpdateProvider, (uint64_t)aY_2);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v4, KeyPath, v2);
  swift_release(KeyPath);
  return *(_QWORD *)(v0 + 16);
}

uint64_t sub_62FFC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t result;
  char v7;
  uint64_t v8;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_257A60);
  v8 = v3;
  v5 = sub_648E0(&qword_31F448, type metadata accessor for RatingUpdateProvider, (uint64_t)aY_2);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v8, KeyPath, v5);
  result = swift_release(KeyPath);
  v7 = *(_BYTE *)(v3 + 24);
  *(_QWORD *)a2 = *(_QWORD *)(v3 + 16);
  *(_BYTE *)(a2 + 8) = v7;
  return result;
}

uint64_t sub_63090(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t KeyPath;
  uint64_t v6;
  _QWORD v8[4];
  char v9;
  uint64_t v10;

  v2 = *a1;
  v3 = *((_BYTE *)a1 + 8);
  v4 = *a2;
  KeyPath = swift_getKeyPath(&unk_257A60);
  v8[2] = v4;
  v8[3] = v2;
  v9 = v3;
  v10 = v4;
  v6 = sub_648E0(&qword_31F448, type metadata accessor for RatingUpdateProvider, (uint64_t)aY_2);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v10, KeyPath, sub_67278, v8, (char *)&type metadata for () + 8, v6);
  return swift_release(KeyPath);
}

uint64_t sub_6313C()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_257A88);
  v4 = v0;
  v2 = sub_648E0(&qword_31F448, type metadata accessor for RatingUpdateProvider, (uint64_t)aY_2);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v4, KeyPath, v2);
  swift_release(KeyPath);
  return *(unsigned __int8 *)(v0 + 25);
}

uint64_t sub_631C0@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_257A88);
  v7 = v3;
  v5 = sub_648E0(&qword_31F448, type metadata accessor for RatingUpdateProvider, (uint64_t)aY_2);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v7, KeyPath, v5);
  result = swift_release(KeyPath);
  *a2 = *(_BYTE *)(v3 + 25);
  return result;
}

uint64_t sub_6324C(char *a1, uint64_t *a2)
{
  char v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  _QWORD v7[3];
  char v8;
  uint64_t v9;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_257A88);
  v7[2] = v3;
  v8 = v2;
  v9 = v3;
  v5 = sub_648E0(&qword_31F448, type metadata accessor for RatingUpdateProvider, (uint64_t)aY_2);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v9, KeyPath, sub_6728C, v7, (char *)&type metadata for () + 8, v5);
  return swift_release(KeyPath);
}

BOOL static Page.LifecycleEventKind.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

Swift::Int Page.LifecycleEventKind.hashValue.getter()
{
  unsigned __int8 *v0;
  Swift::UInt v1;
  _QWORD v3[9];

  v1 = *v0;
  Hasher.init(_seed:)(v3, 0);
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

void Page.LifecycleEventKind.hash(into:)()
{
  unsigned __int8 *v0;

  Hasher._combine(_:)(*v0);
}

Swift::Int sub_63374(uint64_t a1)
{
  unsigned __int8 *v1;
  Swift::UInt v2;
  _QWORD v4[9];

  v2 = *v1;
  Hasher.init(_seed:)(v4, a1);
  Hasher._combine(_:)(v2);
  return Hasher._finalize()();
}

uint64_t sub_633B4()
{
  uint64_t v0;
  void *v1;
  NSString v2;
  uint64_t v3;
  void *v4;
  void *v5;
  id v6;
  void *v7;
  id v8;
  uint64_t v9;
  void *v10;
  id v11;
  uint64_t v12;
  id v13;
  id v14;
  uint64_t v15;
  void *v16;
  id v17;
  uint64_t v18;
  void **v20;
  uint64_t v21;
  void *v22;
  void *v23;
  void *v24;
  uint64_t v25;

  v1 = (void *)objc_opt_self(BSUICloudAssetRatingsManager);
  v2 = String._bridgeToObjectiveC()();
  v3 = swift_allocObject(&unk_2E78C0, 24, 7);
  swift_weakInit(v3 + 16, v0);
  v24 = sub_64634;
  v25 = v3;
  v20 = _NSConcreteStackBlock;
  v21 = 1107296256;
  v22 = sub_63AD8;
  v23 = &unk_2E78D8;
  v4 = _Block_copy(&v20);
  swift_release(v25);
  objc_msgSend(v1, "getRatingForItem:forceFetch:shouldSuppressMetrics:completion:", v2, 0, 0, v4);
  _Block_release(v4);

  v5 = (void *)objc_opt_self(NSNotificationCenter);
  v6 = objc_msgSend(v5, "defaultCenter");
  v7 = (void *)objc_opt_self(NSOperationQueue);
  v8 = objc_msgSend(v7, "mainQueue");
  v9 = swift_allocObject(&unk_2E78C0, 24, 7);
  swift_weakInit(v9 + 16, v0);
  v24 = sub_64654;
  v25 = v9;
  v20 = _NSConcreteStackBlock;
  v21 = 1107296256;
  v22 = sub_63F18;
  v23 = &unk_2E7900;
  v10 = _Block_copy(&v20);
  swift_release(v25);
  v11 = objc_msgSend(v6, "addObserverForName:object:queue:usingBlock:", CFSTR("BSUICloudAssetRateContentNotification"), 0, v8, v10);
  _Block_release(v10);

  v12 = *(_QWORD *)(v0 + 48);
  *(_QWORD *)(v0 + 48) = v11;
  swift_unknownObjectRelease(v12);
  v13 = objc_msgSend(v5, "defaultCenter");
  v14 = objc_msgSend(v7, "mainQueue");
  v15 = swift_allocObject(&unk_2E78C0, 24, 7);
  swift_weakInit(v15 + 16, v0);
  v24 = sub_6465C;
  v25 = v15;
  v20 = _NSConcreteStackBlock;
  v21 = 1107296256;
  v22 = sub_63F18;
  v23 = &unk_2E7928;
  v16 = _Block_copy(&v20);
  swift_release(v25);
  v17 = objc_msgSend(v13, "addObserverForName:object:queue:usingBlock:", CFSTR("BSUICloudAssetRatingRemovalNotification"), 0, v14, v16);
  _Block_release(v16);

  v18 = *(_QWORD *)(v0 + 56);
  *(_QWORD *)(v0 + 56) = v17;
  return swift_unknownObjectRelease(v18);
}

uint64_t sub_636A0(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t Strong;
  id v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  _BYTE v23[24];

  v10 = sub_5C154(&qword_329740);
  __chkstk_darwin(v10);
  v12 = &v23[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  a8 += 16;
  v13 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 1, 1, v13);
  v14 = swift_allocObject(&unk_2E78C0, 24, 7);
  swift_beginAccess(a8, v23, 0, 0);
  Strong = swift_weakLoadStrong(a8);
  swift_weakInit(v14 + 16, Strong);
  swift_release(Strong);
  type metadata accessor for MainActor(0);
  v16 = a3;
  v17 = swift_retain(v14);
  v18 = static MainActor.shared.getter(v17);
  v19 = (_QWORD *)swift_allocObject(&unk_2E7960, 48, 7);
  v19[2] = v18;
  v19[3] = &protocol witness table for MainActor;
  v19[4] = v14;
  v19[5] = a3;
  swift_release(v14);
  v20 = sub_1D979C((uint64_t)v12, (uint64_t)&unk_31F460, (uint64_t)v19);
  return swift_release(v20);
}

uint64_t sub_637F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5[6] = a4;
  v5[7] = a5;
  v6 = type metadata accessor for MainActor(0);
  v5[8] = static MainActor.shared.getter(v6);
  v7 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
  return swift_task_switch(sub_6385C, v7, v8);
}

uint64_t sub_6385C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  uint64_t v3;
  uint64_t *v4;
  void *v5;
  id v6;
  double v7;
  uint64_t KeyPath;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v1 = *(_QWORD *)(v0 + 48);
  swift_release(*(_QWORD *)(v0 + 64));
  v1 += 16;
  swift_beginAccess(v1, v0 + 16, 0, 0);
  Strong = swift_weakLoadStrong(v1);
  if (Strong)
  {
    v3 = Strong;
    v4 = (uint64_t *)(v0 + 40);
    v5 = *(void **)(v0 + 56);
    if (v5)
    {
      v6 = v5;
      v7 = Double.init(truncating:)(v6) * 5.0;
      KeyPath = swift_getKeyPath(&unk_257A60);
      v9 = swift_task_alloc(48);
      *(_QWORD *)(v9 + 16) = v3;
      *(double *)(v9 + 24) = v7;
      *(_BYTE *)(v9 + 32) = 0;
      *v4 = v3;
      v10 = sub_648E0(&qword_31F448, type metadata accessor for RatingUpdateProvider, (uint64_t)aY_2);
      ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(v0 + 40, KeyPath, sub_67278, v9, (char *)&type metadata for () + 8, v10);

    }
    else
    {
      KeyPath = swift_getKeyPath(&unk_257A60);
      v9 = swift_task_alloc(48);
      *(_QWORD *)(v9 + 16) = v3;
      *(_QWORD *)(v9 + 24) = 0;
      *(_BYTE *)(v9 + 32) = 0;
      *v4 = v3;
      v11 = sub_648E0(&qword_31F448, type metadata accessor for RatingUpdateProvider, (uint64_t)aY_2);
      ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(v0 + 40, KeyPath, sub_67278, v9, (char *)&type metadata for () + 8, v11);
    }
    swift_release(KeyPath);
    swift_task_dealloc(v9);
    v12 = swift_getKeyPath(&unk_257A88);
    *v4 = v3;
    v13 = sub_648E0(&qword_31F448, type metadata accessor for RatingUpdateProvider, (uint64_t)aY_2);
    ObservationRegistrar.access<A, B>(_:keyPath:)(v0 + 40, v12, v13);
    swift_release(v12);
    if (*(_BYTE *)(v3 + 25))
    {
      swift_release(v3);
    }
    else
    {
      v14 = swift_getKeyPath(&unk_257A88);
      v15 = swift_task_alloc(32);
      *(_QWORD *)(v15 + 16) = v3;
      *(_BYTE *)(v15 + 24) = 1;
      *v4 = v3;
      ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(v0 + 40, v14, sub_6728C, v15, (char *)&type metadata for () + 8, v13);
      swift_release(v3);
      swift_release(v14);
      swift_task_dealloc(v15);
    }
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_63AD8(uint64_t a1, uint64_t a2, void *a3, void *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  id v17;
  void (*v19)(uint64_t, void *, void *, uint64_t, uint64_t, uint64_t, uint64_t);

  v6 = a6;
  v10 = *(_QWORD *)(a1 + 40);
  v19 = *(void (**)(uint64_t, void *, void *, uint64_t, uint64_t, uint64_t, uint64_t))(a1 + 32);
  if (!a5)
  {
    v11 = 0;
    v13 = 0;
    if (a6)
      goto LABEL_3;
LABEL_5:
    v14 = 0;
    goto LABEL_6;
  }
  v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(a5);
  v13 = v12;
  if (!v6)
    goto LABEL_5;
LABEL_3:
  v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
  v6 = v15;
LABEL_6:
  swift_retain(v10);
  v16 = a3;
  v17 = a4;
  v19(a2, a3, a4, v11, v13, v14, v6);
  swift_release(v10);

  swift_bridgeObjectRelease(v6);
  return swift_bridgeObjectRelease(v13);
}

uint64_t sub_63BC4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  unint64_t v17;
  void *v18;
  double v19;
  uint64_t KeyPath;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD v24[2];
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD v29[5];
  __int128 v30;
  __int128 v31;
  char v32[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v32, 0, 0);
  result = swift_weakLoadStrong(v2);
  if (result)
  {
    v4 = result;
    v5 = Notification.userInfo.getter();
    if (v5)
    {
      v6 = v5;
      v27 = static String._unconditionallyBridgeFromObjectiveC(_:)(CFSTR("BSUICloudAssetRateContentUserInfoKeyAssetID"));
      v28 = v7;
      AnyHashable.init<A>(_:)(&v27, &type metadata for String, &protocol witness table for String);
      if (*(_QWORD *)(v6 + 16) && (v8 = sub_58318((uint64_t)v29), (v9 & 1) != 0))
      {
        sub_5E1EC(*(_QWORD *)(v6 + 56) + 32 * v8, (uint64_t)&v30);
      }
      else
      {
        v30 = 0u;
        v31 = 0u;
      }
      sub_5DCEC((uint64_t)v29);
      if (!*((_QWORD *)&v31 + 1))
      {
        swift_bridgeObjectRelease(v6);
        goto LABEL_13;
      }
      if ((swift_dynamicCast(&v27, &v30, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) != 0)
      {
        v10 = v28;
        v11 = *(_QWORD *)(v4 + 32);
        v12 = *(_QWORD *)(v4 + 40);
        if (v11 == v27 && v12 == v28)
        {
          swift_bridgeObjectRelease(v28);
LABEL_15:
          v27 = static String._unconditionallyBridgeFromObjectiveC(_:)(CFSTR("BSUICloudAssetRateContentUserInfoKeyNewRating"));
          v28 = v14;
          AnyHashable.init<A>(_:)(&v27, &type metadata for String, &protocol witness table for String);
          if (*(_QWORD *)(v6 + 16) && (v15 = sub_58318((uint64_t)v29), (v16 & 1) != 0))
          {
            sub_5E1EC(*(_QWORD *)(v6 + 56) + 32 * v15, (uint64_t)&v30);
          }
          else
          {
            v30 = 0u;
            v31 = 0u;
          }
          swift_bridgeObjectRelease(v6);
          sub_5DCEC((uint64_t)v29);
          if (*((_QWORD *)&v31 + 1))
          {
            v17 = sub_64698();
            if ((swift_dynamicCast(&v27, &v30, (char *)&type metadata for Any + 8, v17, 6) & 1) != 0)
            {
              v18 = (void *)v27;
              v19 = Double.init(truncating:)(v27) * 5.0;
              KeyPath = swift_getKeyPath(&unk_257A60);
              __chkstk_darwin(KeyPath);
              v24[0] = v4;
              *(double *)&v24[1] = v19;
              LOBYTE(v25) = 0;
              v29[0] = v4;
              v21 = sub_648E0(&qword_31F448, type metadata accessor for RatingUpdateProvider, (uint64_t)aY_2);
              ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(v29, KeyPath, sub_67278, &v23, (char *)&type metadata for () + 8, v21);
              swift_release(KeyPath);
              v22 = swift_getKeyPath(&unk_257A88);
              __chkstk_darwin(v22);
              v25 = v4;
              v26 = 2;
              v29[0] = v4;
              ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(v29, v22, sub_6728C, v24, (char *)&type metadata for () + 8, v21);
              swift_release(v22);

              return swift_release(v4);
            }
            return swift_release(v4);
          }
LABEL_13:
          swift_release(v4);
          return sub_5E09C((uint64_t)&v30, &qword_31F8B0);
        }
        v13 = _stringCompareWithSmolCheck(_:_:expecting:)(v11, v12, v27, v28, 0);
        swift_bridgeObjectRelease(v10);
        if ((v13 & 1) != 0)
          goto LABEL_15;
      }
      swift_bridgeObjectRelease(v6);
    }
    return swift_release(v4);
  }
  return result;
}

uint64_t sub_63F18(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  void (*v9)(char *);
  uint64_t v11;

  v4 = type metadata accessor for Notification(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin();
  v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(void (**)(char *))(a1 + 32);
  v8 = *(_QWORD *)(a1 + 40);
  static Notification._unconditionallyBridgeFromObjectiveC(_:)(a2);
  swift_retain(v8);
  v9(v7);
  swift_release(v8);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_63FBC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t KeyPath;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v18[2];
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD v23[5];
  __int128 v24;
  __int128 v25;
  char v26[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v26, 0, 0);
  result = swift_weakLoadStrong(v2);
  if (result)
  {
    v4 = result;
    v5 = Notification.userInfo.getter();
    if (v5)
    {
      v6 = v5;
      v21 = static String._unconditionallyBridgeFromObjectiveC(_:)(CFSTR("BSUICloudAssetRateContentUserInfoKeyAssetID"));
      v22 = v7;
      AnyHashable.init<A>(_:)(&v21, &type metadata for String, &protocol witness table for String);
      if (*(_QWORD *)(v6 + 16) && (v8 = sub_58318((uint64_t)v23), (v9 & 1) != 0))
      {
        sub_5E1EC(*(_QWORD *)(v6 + 56) + 32 * v8, (uint64_t)&v24);
      }
      else
      {
        v24 = 0u;
        v25 = 0u;
      }
      swift_bridgeObjectRelease(v6);
      sub_5DCEC((uint64_t)v23);
      if (!*((_QWORD *)&v25 + 1))
      {
        swift_release(v4);
        return sub_5E09C((uint64_t)&v24, &qword_31F8B0);
      }
      if ((swift_dynamicCast(&v21, &v24, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) != 0)
      {
        v10 = v22;
        v11 = *(_QWORD *)(v4 + 32);
        v12 = *(_QWORD *)(v4 + 40);
        if (v11 == v21 && v12 == v22)
        {
          swift_bridgeObjectRelease(v22);
LABEL_14:
          KeyPath = swift_getKeyPath(&unk_257A60);
          __chkstk_darwin(KeyPath);
          v18[0] = v4;
          v18[1] = 0;
          LOBYTE(v19) = 0;
          v23[0] = v4;
          v15 = sub_648E0(&qword_31F448, type metadata accessor for RatingUpdateProvider, (uint64_t)aY_2);
          ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(v23, KeyPath, sub_6466C, &v17, (char *)&type metadata for () + 8, v15);
          swift_release(KeyPath);
          v16 = swift_getKeyPath(&unk_257A88);
          __chkstk_darwin(v16);
          v19 = v4;
          v20 = 3;
          v23[0] = v4;
          ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(v23, v16, sub_64688, v18, (char *)&type metadata for () + 8, v15);
          swift_release(v16);
          return swift_release(v4);
        }
        v13 = _stringCompareWithSmolCheck(_:_:expecting:)(v11, v12, v21, v22, 0);
        swift_bridgeObjectRelease(v10);
        if ((v13 & 1) != 0)
          goto LABEL_14;
      }
    }
    return swift_release(v4);
  }
  return result;
}

_QWORD *sub_64248()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  void *v5;
  id v6;
  char *v7;
  uint64_t v8;

  v1 = v0[6];
  if (v1)
  {
    v2 = (void *)objc_opt_self(NSNotificationCenter);
    swift_unknownObjectRetain(v1);
    v3 = objc_msgSend(v2, "defaultCenter");
    objc_msgSend(v3, "removeObserver:name:object:", v1, CFSTR("BSUICloudAssetRateContentNotification"), 0);
    swift_unknownObjectRelease(v1);

  }
  v4 = v0[7];
  if (v4)
  {
    v5 = (void *)objc_opt_self(NSNotificationCenter);
    swift_unknownObjectRetain(v4);
    v6 = objc_msgSend(v5, "defaultCenter");
    objc_msgSend(v6, "removeObserver:name:object:", v4, CFSTR("BSUICloudAssetRatingRemovalNotification"), 0);
    swift_unknownObjectRelease(v4);

  }
  swift_bridgeObjectRelease(v0[5]);
  swift_unknownObjectRelease(v0[6]);
  swift_unknownObjectRelease(v0[7]);
  v7 = (char *)v0
     + OBJC_IVAR____TtC11BookStoreUIP33_478A1F1FC78ADA53CFC880D079DC87E220RatingUpdateProvider___observationRegistrar;
  v8 = type metadata accessor for ObservationRegistrar(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  return v0;
}

uint64_t sub_64378()
{
  _QWORD *v0;

  v0 = sub_64248();
  return swift_deallocClassInstance(v0, *(unsigned int *)(*v0 + 48), *(unsigned __int16 *)(*v0 + 52));
}

uint64_t sub_64398()
{
  return type metadata accessor for RatingUpdateProvider(0);
}

uint64_t type metadata accessor for RatingUpdateProvider(uint64_t a1)
{
  return sub_64960(a1, qword_31F2E0, (uint64_t)&nominal type descriptor for RatingUpdateProvider);
}

uint64_t sub_643B4(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[6];

  v4[0] = "\t";
  v4[1] = &unk_257980;
  v4[2] = &unk_257998;
  v4[3] = &unk_2579B0;
  v4[4] = &unk_2579B0;
  result = type metadata accessor for ObservationRegistrar(319);
  if (v3 <= 0x3F)
  {
    v4[5] = *(_QWORD *)(result - 8) + 64;
    result = swift_updateClassMetadata2(a1, 256, 6, v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

_BYTE *initializeBufferWithCopyOfBuffer for RatingUpdateProvider.Status(_BYTE *result, _BYTE *a2)
{
  *result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for RatingUpdateProvider.Status(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFD)
    goto LABEL_17;
  if (a2 + 3 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 3) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 3;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 3;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 3;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 4;
  v8 = v6 - 4;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for RatingUpdateProvider.Status(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_64534 + 4 * byte_257919[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_64568 + 4 * byte_257914[v4]))();
}

uint64_t sub_64568(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_64570(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x64578);
  return result;
}

uint64_t sub_64584(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x6458CLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_64590(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_64598(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_645A4(unsigned __int8 *a1)
{
  return *a1;
}

_BYTE *sub_645B0(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

ValueMetadata *type metadata accessor for RatingUpdateProvider.Status()
{
  return &type metadata for RatingUpdateProvider.Status;
}

unint64_t sub_645CC()
{
  unint64_t result;

  result = qword_31F440;
  if (!qword_31F440)
  {
    result = swift_getWitnessTable(aQ_3, &type metadata for RatingUpdateProvider.Status);
    atomic_store(result, (unint64_t *)&qword_31F440);
  }
  return result;
}

uint64_t sub_64610()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_64634(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;

  return sub_636A0(a1, a2, a3, a4, a5, a6, a7, v7);
}

uint64_t sub_6463C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_6464C(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_64654(uint64_t a1)
{
  uint64_t v1;

  return sub_63BC4(a1, v1);
}

uint64_t sub_6465C(uint64_t a1)
{
  uint64_t v1;

  return sub_63FBC(a1, v1);
}

void sub_6466C()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_BYTE *)(v0 + 32);
  *(_QWORD *)(v1 + 16) = *(_QWORD *)(v0 + 24);
  *(_BYTE *)(v1 + 24) = v2;
}

void sub_64688()
{
  uint64_t v0;

  *(_BYTE *)(*(_QWORD *)(v0 + 16) + 25) = *(_BYTE *)(v0 + 24);
}

unint64_t sub_64698()
{
  unint64_t result;
  uint64_t v1;

  result = qword_31F450;
  if (!qword_31F450)
  {
    v1 = objc_opt_self(NSNumber);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, &qword_31F450);
  }
  return result;
}

uint64_t sub_646D4()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));

  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_64708(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc(dword_31F45C);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_64780;
  return sub_637F0(a1, v4, v5, v7, v6);
}

uint64_t sub_64780()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  v4 = *v0;
  v1 = *(_QWORD *)(v4 + 16);
  v2 = *v0;
  v4 = v2;
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v2 + 8))();
}

ValueMetadata *type metadata accessor for RatingSummaryComponent()
{
  return &type metadata for RatingSummaryComponent;
}

uint64_t sub_647D8(uint64_t a1, uint64_t a2)
{
  _QWORD v3[2];

  v3[0] = a2;
  v3[1] = sub_64818();
  return swift_getOpaqueTypeConformance2(v3, &opaque type descriptor for <<opaque return type of Component.body>>, 1);
}

unint64_t sub_64818()
{
  unint64_t result;

  result = qword_32A0A0;
  if (!qword_32A0A0)
  {
    result = swift_getWitnessTable(&unk_257B18, &type metadata for RatingSummaryComponent);
    atomic_store(result, (unint64_t *)&qword_32A0A0);
  }
  return result;
}

unint64_t sub_64860()
{
  unint64_t result;

  result = qword_31F468;
  if (!qword_31F468)
  {
    result = swift_getWitnessTable(&unk_257AC8, &type metadata for RatingSummaryComponent);
    atomic_store(result, (unint64_t *)&qword_31F468);
  }
  return result;
}

uint64_t sub_648A4(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_2B5088, 1);
}

uint64_t sub_648B4()
{
  return sub_648E0(&qword_320060, type metadata accessor for RatingSummaryComponentModel, (uint64_t)&unk_25BC60);
}

uint64_t sub_648E0(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = a2(255);
    result = swift_getWitnessTable(a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_64920()
{
  return sub_648E0(&qword_31F470, (uint64_t (*)(uint64_t))&type metadata accessor for _ComponentBodyButtonStyle, (uint64_t)&protocol conformance descriptor for _ComponentBodyButtonStyle);
}

uint64_t type metadata accessor for RatingSummaryView(uint64_t a1)
{
  return sub_64960(a1, (uint64_t *)&unk_31F4F8, (uint64_t)&nominal type descriptor for RatingSummaryView);
}

uint64_t sub_64960(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
    return swift_getSingletonMetadata(a1, a3);
  return result;
}

uint64_t sub_649A4(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4;
  int v5;
  __int128 v7;
  _OWORD *v8;
  _OWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  int *v14;
  uint64_t v15;
  void *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t *v52;
  uint64_t *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  int *v60;
  __int128 v61;
  uint64_t v62;
  uint64_t *v63;
  uint64_t *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t *v72;
  uint64_t *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char v84;
  uint64_t v85;
  _QWORD *v86;
  _QWORD *v87;
  char v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  int *v94;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *(_QWORD *)v4 = *a2;
    v4 = v12 + ((v5 + 16) & ~(unint64_t)v5);
  }
  else
  {
    v7 = *(_OWORD *)(a2 + 3);
    *(_OWORD *)(a1 + 24) = v7;
    (**(void (***)(uint64_t, uint64_t *))(v7 - 8))(a1, a2);
    v8 = (_OWORD *)(v4 + 40);
    v9 = a2 + 5;
    v10 = a2[8];
    if (v10)
    {
      v11 = a2[9];
      *(_QWORD *)(v4 + 64) = v10;
      *(_QWORD *)(v4 + 72) = v11;
      (**(void (***)(_OWORD *, _OWORD *))(v10 - 8))(v8, v9);
    }
    else
    {
      v13 = *(_OWORD *)(a2 + 7);
      *v8 = *v9;
      *(_OWORD *)(v4 + 56) = v13;
      *(_QWORD *)(v4 + 72) = a2[9];
    }
    v14 = (int *)type metadata accessor for RatingSummaryComponentModel(0);
    v15 = v14[6];
    v16 = (void *)(v4 + v15);
    v17 = (char *)a2 + v15;
    v18 = type metadata accessor for ImpressionMetrics(0);
    v19 = *(_QWORD *)(v18 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
    {
      v20 = sub_5C154(&qword_31F480);
      memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v19 + 16))(v16, v17, v18);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
    }
    v21 = v14[7];
    v22 = (_QWORD *)(v4 + v21);
    v23 = (uint64_t *)((char *)a2 + v21);
    v24 = v23[1];
    *v22 = *v23;
    v22[1] = v24;
    v25 = v14[8];
    v26 = (_QWORD *)(v4 + v25);
    v27 = (uint64_t *)((char *)a2 + v25);
    v93 = v27[1];
    *v26 = *v27;
    v26[1] = v93;
    v28 = v14[9];
    v29 = (_QWORD *)(v4 + v28);
    v30 = (uint64_t *)((char *)a2 + v28);
    v92 = v30[1];
    *v29 = *v30;
    v29[1] = v92;
    v31 = v14[10];
    v32 = (_QWORD *)(v4 + v31);
    v33 = (uint64_t *)((char *)a2 + v31);
    v90 = v33[1];
    *v32 = *v33;
    v32[1] = v90;
    v34 = v14[11];
    v35 = (_QWORD *)(v4 + v34);
    v36 = (uint64_t *)((char *)a2 + v34);
    v37 = v36[1];
    *v35 = *v36;
    v35[1] = v37;
    v38 = v14[12];
    v39 = (_QWORD *)(v4 + v38);
    v40 = (uint64_t *)((char *)a2 + v38);
    v41 = v40[1];
    *v39 = *v40;
    v39[1] = v41;
    v42 = v14[13];
    v43 = (_QWORD *)(v4 + v42);
    v44 = (uint64_t *)((char *)a2 + v42);
    v45 = v44[1];
    *v43 = *v44;
    v43[1] = v45;
    v46 = v14[14];
    v47 = *(uint64_t *)((char *)a2 + v46);
    *(_QWORD *)(v4 + v46) = v47;
    v48 = v14[15];
    v49 = *(uint64_t *)((char *)a2 + v48);
    *(_QWORD *)(v4 + v48) = v49;
    v50 = a3[5];
    v51 = a3[6];
    v94 = a3;
    v52 = (uint64_t *)(v4 + v50);
    v53 = (uint64_t *)((char *)a2 + v50);
    v55 = *v53;
    v54 = v53[1];
    *v52 = *v53;
    v52[1] = v54;
    v91 = v4 + v51;
    v56 = (uint64_t *)((char *)a2 + v51);
    v89 = *((_BYTE *)a2 + v51 + 40);
    swift_bridgeObjectRetain(v24);
    swift_bridgeObjectRetain(v93);
    swift_bridgeObjectRetain(v92);
    swift_bridgeObjectRetain(v90);
    swift_bridgeObjectRetain(v37);
    swift_bridgeObjectRetain(v41);
    swift_bridgeObjectRetain(v45);
    swift_bridgeObjectRetain(v47);
    swift_bridgeObjectRetain(v49);
    swift_retain(v55);
    swift_retain(v54);
    if ((v89 & 1) != 0)
    {
      v57 = v56[3];
      if (v57)
      {
        v58 = v56[4];
        *(_QWORD *)(v91 + 24) = v57;
        *(_QWORD *)(v91 + 32) = v58;
        (**(void (***)(uint64_t, uint64_t *))(v57 - 8))(v91, v56);
      }
      else
      {
        v61 = *((_OWORD *)v56 + 1);
        *(_OWORD *)v91 = *(_OWORD *)v56;
        *(_OWORD *)(v91 + 16) = v61;
        *(_QWORD *)(v91 + 32) = v56[4];
      }
      v60 = v94;
      *(_BYTE *)(v91 + 40) = 1;
    }
    else
    {
      v59 = *v56;
      *(_QWORD *)v91 = *v56;
      *(_BYTE *)(v91 + 40) = 0;
      swift_retain(v59);
      v60 = v94;
    }
    v62 = v60[7];
    v63 = (uint64_t *)(v4 + v62);
    v64 = (uint64_t *)((char *)a2 + v62);
    v65 = sub_5C154(&qword_326110);
    if (swift_getEnumCaseMultiPayload(v64, v65) == 1)
    {
      v66 = type metadata accessor for OpaqueMetricsFieldsContext(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v66 - 8) + 16))(v63, v64, v66);
      v67 = v63;
      v68 = v65;
      v69 = 1;
    }
    else
    {
      v70 = *v64;
      *v63 = *v64;
      swift_retain(v70);
      v67 = v63;
      v68 = v65;
      v69 = 0;
    }
    swift_storeEnumTagMultiPayload(v67, v68, v69);
    v71 = v60[8];
    v72 = (uint64_t *)(v4 + v71);
    v73 = (uint64_t *)((char *)a2 + v71);
    v74 = sub_5C154((uint64_t *)&unk_32A010);
    if (swift_getEnumCaseMultiPayload(v73, v74) == 1)
    {
      v75 = type metadata accessor for ColorConstants(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v75 - 8) + 16))(v72, v73, v75);
      v76 = v72;
      v77 = v74;
      v78 = 1;
    }
    else
    {
      v79 = *v73;
      *v72 = *v73;
      swift_retain(v79);
      v76 = v72;
      v77 = v74;
      v78 = 0;
    }
    swift_storeEnumTagMultiPayload(v76, v77, v78);
    v80 = v60[9];
    v81 = v4 + v80;
    v82 = (uint64_t)a2 + v80;
    v83 = *(_QWORD *)v82;
    v84 = *(_BYTE *)(v82 + 8);
    sub_64DD8(*(_QWORD *)v82, v84);
    *(_QWORD *)v81 = v83;
    *(_BYTE *)(v81 + 8) = v84;
    v85 = v60[10];
    v86 = (_QWORD *)(v4 + v85);
    v87 = (uint64_t *)((char *)a2 + v85);
    v12 = v87[1];
    *v86 = *v87;
    v86[1] = v12;
  }
  swift_retain(v12);
  return v4;
}

uint64_t sub_64DD8(uint64_t result, char a2)
{
  if ((a2 & 1) == 0)
    return swift_retain(result);
  return result;
}

uint64_t sub_64DE4(_QWORD *a1, int *a2)
{
  int *v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;

  _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(a1);
  if (a1[8])
    _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(a1 + 5);
  v4 = (int *)type metadata accessor for RatingSummaryComponentModel(0);
  v5 = (char *)a1 + v4[6];
  v6 = type metadata accessor for ImpressionMetrics(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6))
    (*(void (**)(char *, uint64_t))(v7 + 8))(v5, v6);
  swift_bridgeObjectRelease(*(_QWORD *)((char *)a1 + v4[7] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)((char *)a1 + v4[8] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)((char *)a1 + v4[9] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)((char *)a1 + v4[10] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)((char *)a1 + v4[11] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)((char *)a1 + v4[12] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)((char *)a1 + v4[13] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)((char *)a1 + v4[14]));
  swift_bridgeObjectRelease(*(_QWORD *)((char *)a1 + v4[15]));
  v8 = (_QWORD *)((char *)a1 + a2[5]);
  swift_release(*v8);
  swift_release(v8[1]);
  v9 = (_QWORD *)((char *)a1 + a2[6]);
  if ((v9[5] & 1) != 0)
  {
    if (v9[3])
      _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(v9);
  }
  else
  {
    swift_release(*v9);
  }
  v10 = (_QWORD *)((char *)a1 + a2[7]);
  v11 = sub_5C154(&qword_326110);
  if (swift_getEnumCaseMultiPayload(v10, v11) == 1)
  {
    v12 = type metadata accessor for OpaqueMetricsFieldsContext(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v10, v12);
  }
  else
  {
    swift_release(*v10);
  }
  v13 = (_QWORD *)((char *)a1 + a2[8]);
  v14 = sub_5C154((uint64_t *)&unk_32A010);
  if (swift_getEnumCaseMultiPayload(v13, v14) == 1)
  {
    v15 = type metadata accessor for ColorConstants(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v13, v15);
  }
  else
  {
    swift_release(*v13);
  }
  sub_64FFC(*(_QWORD *)((char *)a1 + a2[9]), *((_BYTE *)a1 + a2[9] + 8));
  return swift_release(*(_QWORD *)((char *)a1 + a2[10] + 8));
}

uint64_t sub_64FFC(uint64_t result, char a2)
{
  if ((a2 & 1) == 0)
    return swift_release(result);
  return result;
}

uint64_t sub_65008(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  _OWORD *v7;
  _OWORD *v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  int *v12;
  uint64_t v13;
  void *v14;
  const void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  int *v58;
  __int128 v59;
  uint64_t v60;
  uint64_t *v61;
  uint64_t *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t *v70;
  uint64_t *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char v82;
  uint64_t v83;
  _QWORD *v84;
  _QWORD *v85;
  uint64_t v86;
  char v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  int *v93;

  v6 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v6;
  (**(void (***)(void))(v6 - 8))();
  v7 = (_OWORD *)(a1 + 40);
  v8 = (_OWORD *)(a2 + 40);
  v9 = *(_QWORD *)(a2 + 64);
  if (v9)
  {
    v10 = *(_QWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 64) = v9;
    *(_QWORD *)(a1 + 72) = v10;
    (**(void (***)(_OWORD *, _OWORD *))(v9 - 8))(v7, v8);
  }
  else
  {
    v11 = *(_OWORD *)(a2 + 56);
    *v7 = *v8;
    *(_OWORD *)(a1 + 56) = v11;
    *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  }
  v12 = (int *)type metadata accessor for RatingSummaryComponentModel(0);
  v13 = v12[6];
  v14 = (void *)(a1 + v13);
  v15 = (const void *)(a2 + v13);
  v16 = type metadata accessor for ImpressionMetrics(0);
  v17 = *(_QWORD *)(v16 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
  {
    v18 = sub_5C154(&qword_31F480);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v17 + 16))(v14, v15, v16);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
  }
  v19 = v12[7];
  v20 = (_QWORD *)(a1 + v19);
  v21 = (_QWORD *)(a2 + v19);
  v22 = v21[1];
  *v20 = *v21;
  v20[1] = v22;
  v23 = v12[8];
  v24 = (_QWORD *)(a1 + v23);
  v25 = (_QWORD *)(a2 + v23);
  v92 = v25[1];
  *v24 = *v25;
  v24[1] = v92;
  v26 = v12[9];
  v27 = (_QWORD *)(a1 + v26);
  v28 = (_QWORD *)(a2 + v26);
  v91 = v28[1];
  *v27 = *v28;
  v27[1] = v91;
  v29 = v12[10];
  v30 = (_QWORD *)(a1 + v29);
  v31 = (_QWORD *)(a2 + v29);
  v89 = v31[1];
  *v30 = *v31;
  v30[1] = v89;
  v32 = v12[11];
  v33 = (_QWORD *)(a1 + v32);
  v34 = (_QWORD *)(a2 + v32);
  v35 = v34[1];
  *v33 = *v34;
  v33[1] = v35;
  v36 = v12[12];
  v37 = (_QWORD *)(a1 + v36);
  v38 = (_QWORD *)(a2 + v36);
  v39 = v38[1];
  *v37 = *v38;
  v37[1] = v39;
  v40 = v12[13];
  v41 = (_QWORD *)(a1 + v40);
  v42 = (_QWORD *)(a2 + v40);
  v43 = v42[1];
  *v41 = *v42;
  v41[1] = v43;
  v44 = v12[14];
  v45 = *(_QWORD *)(a2 + v44);
  *(_QWORD *)(a1 + v44) = v45;
  v46 = v12[15];
  v47 = *(_QWORD *)(a2 + v46);
  *(_QWORD *)(a1 + v46) = v47;
  v48 = a3[5];
  v49 = a3[6];
  v93 = a3;
  v50 = (uint64_t *)(a1 + v48);
  v51 = (uint64_t *)(a2 + v48);
  v53 = *v51;
  v52 = v51[1];
  *v50 = *v51;
  v50[1] = v52;
  v90 = a1 + v49;
  v54 = (uint64_t *)(a2 + v49);
  v88 = *(_BYTE *)(a2 + v49 + 40);
  swift_bridgeObjectRetain(v22);
  swift_bridgeObjectRetain(v92);
  swift_bridgeObjectRetain(v91);
  swift_bridgeObjectRetain(v89);
  swift_bridgeObjectRetain(v35);
  swift_bridgeObjectRetain(v39);
  swift_bridgeObjectRetain(v43);
  swift_bridgeObjectRetain(v45);
  swift_bridgeObjectRetain(v47);
  swift_retain(v53);
  swift_retain(v52);
  if ((v88 & 1) != 0)
  {
    v55 = v54[3];
    if (v55)
    {
      v56 = v54[4];
      *(_QWORD *)(v90 + 24) = v55;
      *(_QWORD *)(v90 + 32) = v56;
      (**(void (***)(uint64_t, uint64_t *))(v55 - 8))(v90, v54);
    }
    else
    {
      v59 = *((_OWORD *)v54 + 1);
      *(_OWORD *)v90 = *(_OWORD *)v54;
      *(_OWORD *)(v90 + 16) = v59;
      *(_QWORD *)(v90 + 32) = v54[4];
    }
    v58 = v93;
    *(_BYTE *)(v90 + 40) = 1;
  }
  else
  {
    v57 = *v54;
    *(_QWORD *)v90 = *v54;
    *(_BYTE *)(v90 + 40) = 0;
    swift_retain(v57);
    v58 = v93;
  }
  v60 = v58[7];
  v61 = (uint64_t *)(a1 + v60);
  v62 = (uint64_t *)(a2 + v60);
  v63 = sub_5C154(&qword_326110);
  if (swift_getEnumCaseMultiPayload(v62, v63) == 1)
  {
    v64 = type metadata accessor for OpaqueMetricsFieldsContext(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v64 - 8) + 16))(v61, v62, v64);
    v65 = v61;
    v66 = v63;
    v67 = 1;
  }
  else
  {
    v68 = *v62;
    *v61 = *v62;
    swift_retain(v68);
    v65 = v61;
    v66 = v63;
    v67 = 0;
  }
  swift_storeEnumTagMultiPayload(v65, v66, v67);
  v69 = v58[8];
  v70 = (uint64_t *)(a1 + v69);
  v71 = (uint64_t *)(a2 + v69);
  v72 = sub_5C154((uint64_t *)&unk_32A010);
  if (swift_getEnumCaseMultiPayload(v71, v72) == 1)
  {
    v73 = type metadata accessor for ColorConstants(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v73 - 8) + 16))(v70, v71, v73);
    v74 = v70;
    v75 = v72;
    v76 = 1;
  }
  else
  {
    v77 = *v71;
    *v70 = *v71;
    swift_retain(v77);
    v74 = v70;
    v75 = v72;
    v76 = 0;
  }
  swift_storeEnumTagMultiPayload(v74, v75, v76);
  v78 = v58[9];
  v79 = a1 + v78;
  v80 = a2 + v78;
  v81 = *(_QWORD *)v80;
  v82 = *(_BYTE *)(v80 + 8);
  sub_64DD8(*(_QWORD *)v80, v82);
  *(_QWORD *)v79 = v81;
  *(_BYTE *)(v79 + 8) = v82;
  v83 = v58[10];
  v84 = (_QWORD *)(a1 + v83);
  v85 = (_QWORD *)(a2 + v83);
  v86 = v85[1];
  *v84 = *v85;
  v84[1] = v86;
  swift_retain(v86);
  return a1;
}

uint64_t sub_6540C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  int *v9;
  uint64_t v10;
  void *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(void *, uint64_t, uint64_t);
  int v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  __int128 *v69;
  uint64_t v70;
  uint64_t v71;
  __int128 v72;
  __int128 v73;
  uint64_t v74;
  uint64_t *v75;
  uint64_t *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t *v84;
  uint64_t *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char v96;
  uint64_t v97;
  char v98;
  uint64_t v99;
  _QWORD *v100;
  _QWORD *v101;
  uint64_t v102;
  uint64_t v103;

  sub_65938((_QWORD *)a1, (_QWORD *)a2);
  v6 = *(_QWORD *)(a2 + 64);
  if (*(_QWORD *)(a1 + 64))
  {
    if (v6)
    {
      sub_65938((_QWORD *)(a1 + 40), (_QWORD *)(a2 + 40));
      goto LABEL_8;
    }
    _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((_QWORD *)(a1 + 40));
  }
  else if (v6)
  {
    *(_QWORD *)(a1 + 64) = v6;
    *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
    (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1 + 40, a2 + 40);
    goto LABEL_8;
  }
  v7 = *(_OWORD *)(a2 + 40);
  v8 = *(_OWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 40) = v7;
  *(_OWORD *)(a1 + 56) = v8;
LABEL_8:
  v9 = (int *)type metadata accessor for RatingSummaryComponentModel(0);
  v10 = v9[6];
  v11 = (void *)(a1 + v10);
  v12 = (void *)(a2 + v10);
  v13 = type metadata accessor for ImpressionMetrics(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v14 + 48);
  v16 = v15(v11, 1, v13);
  v17 = v15(v12, 1, v13);
  if (v16)
  {
    if (!v17)
    {
      (*(void (**)(void *, void *, uint64_t))(v14 + 16))(v11, v12, v13);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
      goto LABEL_14;
    }
    goto LABEL_13;
  }
  if (v17)
  {
    (*(void (**)(void *, uint64_t))(v14 + 8))(v11, v13);
LABEL_13:
    v18 = sub_5C154(&qword_31F480);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    goto LABEL_14;
  }
  (*(void (**)(void *, void *, uint64_t))(v14 + 24))(v11, v12, v13);
LABEL_14:
  v19 = v9[7];
  v20 = (_QWORD *)(a1 + v19);
  v21 = (_QWORD *)(a2 + v19);
  *v20 = *v21;
  v22 = v21[1];
  v23 = v20[1];
  v20[1] = v22;
  swift_bridgeObjectRetain(v22);
  swift_bridgeObjectRelease(v23);
  v24 = v9[8];
  v25 = (_QWORD *)(a1 + v24);
  v26 = (_QWORD *)(a2 + v24);
  *v25 = *v26;
  v27 = v26[1];
  v28 = v25[1];
  v25[1] = v27;
  swift_bridgeObjectRetain(v27);
  swift_bridgeObjectRelease(v28);
  v29 = v9[9];
  v30 = (_QWORD *)(a1 + v29);
  v31 = (_QWORD *)(a2 + v29);
  *v30 = *v31;
  v32 = v31[1];
  v33 = v30[1];
  v30[1] = v32;
  swift_bridgeObjectRetain(v32);
  swift_bridgeObjectRelease(v33);
  v34 = v9[10];
  v35 = (_QWORD *)(a1 + v34);
  v36 = (_QWORD *)(a2 + v34);
  *v35 = *v36;
  v37 = v36[1];
  v38 = v35[1];
  v35[1] = v37;
  swift_bridgeObjectRetain(v37);
  swift_bridgeObjectRelease(v38);
  v39 = v9[11];
  v40 = (_QWORD *)(a1 + v39);
  v41 = (_QWORD *)(a2 + v39);
  *v40 = *v41;
  v42 = v41[1];
  v43 = v40[1];
  v40[1] = v42;
  swift_bridgeObjectRetain(v42);
  swift_bridgeObjectRelease(v43);
  v44 = v9[12];
  v45 = (_QWORD *)(a1 + v44);
  v46 = (_QWORD *)(a2 + v44);
  *v45 = *v46;
  v47 = v46[1];
  v48 = v45[1];
  v45[1] = v47;
  swift_bridgeObjectRetain(v47);
  swift_bridgeObjectRelease(v48);
  v49 = v9[13];
  v50 = (_QWORD *)(a1 + v49);
  v51 = (_QWORD *)(a2 + v49);
  *v50 = *v51;
  v52 = v51[1];
  v53 = v50[1];
  v50[1] = v52;
  swift_bridgeObjectRetain(v52);
  swift_bridgeObjectRelease(v53);
  v54 = v9[14];
  v55 = *(_QWORD *)(a2 + v54);
  v56 = *(_QWORD *)(a1 + v54);
  *(_QWORD *)(a1 + v54) = v55;
  swift_bridgeObjectRetain(v55);
  swift_bridgeObjectRelease(v56);
  v57 = v9[15];
  v58 = *(_QWORD *)(a2 + v57);
  v59 = *(_QWORD *)(a1 + v57);
  *(_QWORD *)(a1 + v57) = v58;
  swift_bridgeObjectRetain(v58);
  swift_bridgeObjectRelease(v59);
  v60 = a3[5];
  v61 = a1 + v60;
  v62 = a2 + v60;
  v63 = *(_QWORD *)(a1 + v60);
  v64 = *(_QWORD *)(a2 + v60);
  *(_QWORD *)(a1 + v60) = v64;
  swift_retain(v64);
  swift_release(v63);
  v65 = *(_QWORD *)(v61 + 8);
  v66 = *(_QWORD *)(v62 + 8);
  *(_QWORD *)(v61 + 8) = v66;
  swift_retain(v66);
  swift_release(v65);
  if (a1 != a2)
  {
    v67 = a3[6];
    v68 = a1 + v67;
    v69 = (__int128 *)(a2 + v67);
    sub_5E09C(a1 + v67, &qword_31F488);
    if ((*((_BYTE *)v69 + 40) & 1) != 0)
    {
      v70 = *((_QWORD *)v69 + 3);
      if (v70)
      {
        *(_QWORD *)(v68 + 24) = v70;
        *(_QWORD *)(v68 + 32) = *((_QWORD *)v69 + 4);
        (**(void (***)(uint64_t, __int128 *))(v70 - 8))(v68, v69);
      }
      else
      {
        v72 = *v69;
        v73 = v69[1];
        *(_QWORD *)(v68 + 32) = *((_QWORD *)v69 + 4);
        *(_OWORD *)v68 = v72;
        *(_OWORD *)(v68 + 16) = v73;
      }
      *(_BYTE *)(v68 + 40) = 1;
    }
    else
    {
      v71 = *(_QWORD *)v69;
      *(_QWORD *)v68 = *(_QWORD *)v69;
      *(_BYTE *)(v68 + 40) = 0;
      swift_retain(v71);
    }
    v74 = a3[7];
    v75 = (uint64_t *)(a1 + v74);
    v76 = (uint64_t *)(a2 + v74);
    sub_5E09C(a1 + v74, &qword_326110);
    v77 = sub_5C154(&qword_326110);
    if (swift_getEnumCaseMultiPayload(v76, v77) == 1)
    {
      v78 = type metadata accessor for OpaqueMetricsFieldsContext(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v78 - 8) + 16))(v75, v76, v78);
      v79 = v75;
      v80 = v77;
      v81 = 1;
    }
    else
    {
      v82 = *v76;
      *v75 = *v76;
      swift_retain(v82);
      v79 = v75;
      v80 = v77;
      v81 = 0;
    }
    swift_storeEnumTagMultiPayload(v79, v80, v81);
    v83 = a3[8];
    v84 = (uint64_t *)(a1 + v83);
    v85 = (uint64_t *)(a2 + v83);
    sub_5E09C(a1 + v83, (uint64_t *)&unk_32A010);
    v86 = sub_5C154((uint64_t *)&unk_32A010);
    if (swift_getEnumCaseMultiPayload(v85, v86) == 1)
    {
      v87 = type metadata accessor for ColorConstants(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v87 - 8) + 16))(v84, v85, v87);
      v88 = v84;
      v89 = v86;
      v90 = 1;
    }
    else
    {
      v91 = *v85;
      *v84 = *v85;
      swift_retain(v91);
      v88 = v84;
      v89 = v86;
      v90 = 0;
    }
    swift_storeEnumTagMultiPayload(v88, v89, v90);
  }
  v92 = a3[9];
  v93 = a1 + v92;
  v94 = a2 + v92;
  v95 = *(_QWORD *)v94;
  v96 = *(_BYTE *)(v94 + 8);
  sub_64DD8(*(_QWORD *)v94, v96);
  v97 = *(_QWORD *)v93;
  v98 = *(_BYTE *)(v93 + 8);
  *(_QWORD *)v93 = v95;
  *(_BYTE *)(v93 + 8) = v96;
  sub_64FFC(v97, v98);
  v99 = a3[10];
  v100 = (_QWORD *)(a1 + v99);
  v101 = (_QWORD *)(a2 + v99);
  *v100 = *v101;
  v102 = v100[1];
  v103 = v101[1];
  v100[1] = v103;
  swift_retain(v103);
  swift_release(v102);
  return a1;
}

_QWORD *sub_65938(_QWORD *result, _QWORD *a2)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE v15[24];

  if (result != a2)
  {
    v3 = result;
    v4 = result[3];
    v5 = a2[3];
    if (v4 == v5)
    {
      v9 = *(_QWORD *)(v4 - 8);
      if ((*(_BYTE *)(v9 + 82) & 2) != 0)
      {
        v11 = *result;
        v12 = *a2;
        swift_retain(*a2);
        result = (_QWORD *)swift_release(v11);
        *v3 = v12;
      }
      else
      {
        return (_QWORD *)(*(uint64_t (**)(_QWORD *, _QWORD *, _QWORD))(v9 + 24))(result, a2, result[3]);
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      v6 = *(_QWORD *)(v4 - 8);
      v7 = *(_QWORD *)(v5 - 8);
      v8 = *(_DWORD *)(v7 + 80);
      if ((*(_BYTE *)(v6 + 82) & 2) != 0)
      {
        v10 = *result;
        if ((v8 & 0x20000) != 0)
        {
          v14 = *a2;
          *v3 = *a2;
          swift_retain(v14);
        }
        else
        {
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (_QWORD *)swift_release(v10);
      }
      else
      {
        (*(void (**)(_BYTE *, _QWORD *, uint64_t))(v6 + 32))(v15, result, v4);
        if ((v8 & 0x20000) != 0)
        {
          v13 = *a2;
          *v3 = *a2;
          swift_retain(v13);
        }
        else
        {
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v7 + 16))(v3, a2, v5);
        }
        return (_QWORD *)(*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v15, v4);
      }
    }
  }
  return result;
}

uint64_t sub_65AA0(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  int *v7;
  uint64_t v8;
  void *v9;
  const void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _OWORD *v15;
  _OWORD *v16;
  __int128 v17;
  uint64_t v18;
  void *v19;
  const void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  const void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  v7 = (int *)type metadata accessor for RatingSummaryComponentModel(0);
  v8 = v7[6];
  v9 = (void *)(a1 + v8);
  v10 = (const void *)(a2 + v8);
  v11 = type metadata accessor for ImpressionMetrics(0);
  v12 = *(_QWORD *)(v11 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
  {
    v13 = sub_5C154(&qword_31F480);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v12 + 32))(v9, v10, v11);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  *(_OWORD *)(a1 + v7[7]) = *(_OWORD *)(a2 + v7[7]);
  *(_OWORD *)(a1 + v7[8]) = *(_OWORD *)(a2 + v7[8]);
  *(_OWORD *)(a1 + v7[9]) = *(_OWORD *)(a2 + v7[9]);
  *(_OWORD *)(a1 + v7[10]) = *(_OWORD *)(a2 + v7[10]);
  *(_OWORD *)(a1 + v7[11]) = *(_OWORD *)(a2 + v7[11]);
  *(_OWORD *)(a1 + v7[12]) = *(_OWORD *)(a2 + v7[12]);
  *(_OWORD *)(a1 + v7[13]) = *(_OWORD *)(a2 + v7[13]);
  *(_QWORD *)(a1 + v7[14]) = *(_QWORD *)(a2 + v7[14]);
  *(_QWORD *)(a1 + v7[15]) = *(_QWORD *)(a2 + v7[15]);
  v14 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  v15 = (_OWORD *)(a1 + v14);
  v16 = (_OWORD *)(a2 + v14);
  v17 = v16[1];
  *v15 = *v16;
  v15[1] = v17;
  *(_OWORD *)((char *)v15 + 25) = *(_OWORD *)((char *)v16 + 25);
  v18 = a3[7];
  v19 = (void *)(a1 + v18);
  v20 = (const void *)(a2 + v18);
  v21 = sub_5C154(&qword_326110);
  if (swift_getEnumCaseMultiPayload(v20, v21) == 1)
  {
    v22 = type metadata accessor for OpaqueMetricsFieldsContext(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v19, v20, v22);
    swift_storeEnumTagMultiPayload(v19, v21, 1);
  }
  else
  {
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
  }
  v23 = a3[8];
  v24 = (void *)(a1 + v23);
  v25 = (const void *)(a2 + v23);
  v26 = sub_5C154((uint64_t *)&unk_32A010);
  if (swift_getEnumCaseMultiPayload(v25, v26) == 1)
  {
    v27 = type metadata accessor for ColorConstants(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v27 - 8) + 32))(v24, v25, v27);
    swift_storeEnumTagMultiPayload(v24, v26, 1);
  }
  else
  {
    memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
  }
  v28 = a3[9];
  v29 = a3[10];
  v30 = a1 + v28;
  v31 = a2 + v28;
  *(_QWORD *)v30 = *(_QWORD *)v31;
  *(_BYTE *)(v30 + 8) = *(_BYTE *)(v31 + 8);
  *(_OWORD *)(a1 + v29) = *(_OWORD *)(a2 + v29);
  return a1;
}

uint64_t sub_65D3C(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  __int128 v7;
  int *v8;
  uint64_t v9;
  void *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(void *, uint64_t, uint64_t);
  int v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  _OWORD *v70;
  _OWORD *v71;
  __int128 v72;
  uint64_t v73;
  void *v74;
  const void *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void *v79;
  const void *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t *v85;
  uint64_t v86;
  uint64_t v87;
  char v88;
  uint64_t v89;
  _QWORD *v90;
  _QWORD *v91;
  uint64_t v92;

  _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((_QWORD *)a1);
  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  if (*(_QWORD *)(a1 + 64))
    _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((_QWORD *)(a1 + 40));
  v7 = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = v7;
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  v8 = (int *)type metadata accessor for RatingSummaryComponentModel(0);
  v9 = v8[6];
  v10 = (void *)(a1 + v9);
  v11 = (void *)(a2 + v9);
  v12 = type metadata accessor for ImpressionMetrics(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v13 + 48);
  v15 = v14(v10, 1, v12);
  v16 = v14(v11, 1, v12);
  if (v15)
  {
    if (!v16)
    {
      (*(void (**)(void *, void *, uint64_t))(v13 + 32))(v10, v11, v12);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      goto LABEL_9;
    }
    goto LABEL_8;
  }
  if (v16)
  {
    (*(void (**)(void *, uint64_t))(v13 + 8))(v10, v12);
LABEL_8:
    v17 = sub_5C154(&qword_31F480);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_9;
  }
  (*(void (**)(void *, void *, uint64_t))(v13 + 40))(v10, v11, v12);
LABEL_9:
  v18 = v8[7];
  v19 = (_QWORD *)(a1 + v18);
  v20 = (uint64_t *)(a2 + v18);
  v22 = *v20;
  v21 = v20[1];
  v23 = v19[1];
  *v19 = v22;
  v19[1] = v21;
  swift_bridgeObjectRelease(v23);
  v24 = v8[8];
  v25 = (_QWORD *)(a1 + v24);
  v26 = (uint64_t *)(a2 + v24);
  v28 = *v26;
  v27 = v26[1];
  v29 = v25[1];
  *v25 = v28;
  v25[1] = v27;
  swift_bridgeObjectRelease(v29);
  v30 = v8[9];
  v31 = (_QWORD *)(a1 + v30);
  v32 = (uint64_t *)(a2 + v30);
  v34 = *v32;
  v33 = v32[1];
  v35 = v31[1];
  *v31 = v34;
  v31[1] = v33;
  swift_bridgeObjectRelease(v35);
  v36 = v8[10];
  v37 = (_QWORD *)(a1 + v36);
  v38 = (uint64_t *)(a2 + v36);
  v40 = *v38;
  v39 = v38[1];
  v41 = v37[1];
  *v37 = v40;
  v37[1] = v39;
  swift_bridgeObjectRelease(v41);
  v42 = v8[11];
  v43 = (_QWORD *)(a1 + v42);
  v44 = (uint64_t *)(a2 + v42);
  v46 = *v44;
  v45 = v44[1];
  v47 = v43[1];
  *v43 = v46;
  v43[1] = v45;
  swift_bridgeObjectRelease(v47);
  v48 = v8[12];
  v49 = (_QWORD *)(a1 + v48);
  v50 = (uint64_t *)(a2 + v48);
  v52 = *v50;
  v51 = v50[1];
  v53 = v49[1];
  *v49 = v52;
  v49[1] = v51;
  swift_bridgeObjectRelease(v53);
  v54 = v8[13];
  v55 = (_QWORD *)(a1 + v54);
  v56 = (uint64_t *)(a2 + v54);
  v58 = *v56;
  v57 = v56[1];
  v59 = v55[1];
  *v55 = v58;
  v55[1] = v57;
  swift_bridgeObjectRelease(v59);
  v60 = v8[14];
  v61 = *(_QWORD *)(a1 + v60);
  *(_QWORD *)(a1 + v60) = *(_QWORD *)(a2 + v60);
  swift_bridgeObjectRelease(v61);
  v62 = v8[15];
  v63 = *(_QWORD *)(a1 + v62);
  *(_QWORD *)(a1 + v62) = *(_QWORD *)(a2 + v62);
  swift_bridgeObjectRelease(v63);
  v64 = a3[5];
  v65 = a1 + v64;
  v66 = a2 + v64;
  v67 = *(_QWORD *)(a1 + v64);
  *(_QWORD *)(a1 + v64) = *(_QWORD *)(a2 + v64);
  swift_release(v67);
  v68 = *(_QWORD *)(v65 + 8);
  *(_QWORD *)(v65 + 8) = *(_QWORD *)(v66 + 8);
  swift_release(v68);
  if (a1 != a2)
  {
    v69 = a3[6];
    v70 = (_OWORD *)(a2 + v69);
    v71 = (_OWORD *)(a1 + v69);
    sub_5E09C(a1 + v69, &qword_31F488);
    v72 = v70[1];
    *v71 = *v70;
    v71[1] = v72;
    *(_OWORD *)((char *)v71 + 25) = *(_OWORD *)((char *)v70 + 25);
    v73 = a3[7];
    v74 = (void *)(a1 + v73);
    v75 = (const void *)(a2 + v73);
    sub_5E09C(a1 + v73, &qword_326110);
    v76 = sub_5C154(&qword_326110);
    if (swift_getEnumCaseMultiPayload(v75, v76) == 1)
    {
      v77 = type metadata accessor for OpaqueMetricsFieldsContext(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v77 - 8) + 32))(v74, v75, v77);
      swift_storeEnumTagMultiPayload(v74, v76, 1);
    }
    else
    {
      memcpy(v74, v75, *(_QWORD *)(*(_QWORD *)(v76 - 8) + 64));
    }
    v78 = a3[8];
    v79 = (void *)(a1 + v78);
    v80 = (const void *)(a2 + v78);
    sub_5E09C(a1 + v78, (uint64_t *)&unk_32A010);
    v81 = sub_5C154((uint64_t *)&unk_32A010);
    if (swift_getEnumCaseMultiPayload(v80, v81) == 1)
    {
      v82 = type metadata accessor for ColorConstants(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v82 - 8) + 32))(v79, v80, v82);
      swift_storeEnumTagMultiPayload(v79, v81, 1);
    }
    else
    {
      memcpy(v79, v80, *(_QWORD *)(*(_QWORD *)(v81 - 8) + 64));
    }
  }
  v83 = a3[9];
  v84 = a1 + v83;
  v85 = (uint64_t *)(a2 + v83);
  v86 = *v85;
  LOBYTE(v85) = *((_BYTE *)v85 + 8);
  v87 = *(_QWORD *)v84;
  v88 = *(_BYTE *)(v84 + 8);
  *(_QWORD *)v84 = v86;
  *(_BYTE *)(v84 + 8) = (_BYTE)v85;
  sub_64FFC(v87, v88);
  v89 = a3[10];
  v90 = (_QWORD *)(a1 + v89);
  v91 = (_QWORD *)(a2 + v89);
  *v90 = *v91;
  v92 = v90[1];
  v90[1] = v91[1];
  swift_release(v92);
  return a1;
}

uint64_t sub_6613C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_66148);
}

uint64_t sub_66148(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v6 = type metadata accessor for RatingSummaryComponentModel(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  if ((_DWORD)a2 == 2147483646)
  {
    v9 = *(_QWORD *)(a1 + a3[5]);
    if (v9 >= 0xFFFFFFFF)
      LODWORD(v9) = -1;
    v10 = v9 - 1;
    if (v10 < 0)
      v10 = -1;
    return (v10 + 1);
  }
  else
  {
    v11 = sub_5C154(&qword_31F490);
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v13 = v11;
      v14 = a3[7];
    }
    else
    {
      v13 = sub_5C154(&qword_31F498);
      v12 = *(_QWORD *)(v13 - 8);
      v14 = a3[8];
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(a1 + v14, a2, v13);
  }
}

uint64_t sub_66228(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_66234);
}

uint64_t sub_66234(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  result = type metadata accessor for RatingSummaryComponentModel(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 2147483646)
    {
      *(_QWORD *)(a1 + a4[5]) = a2;
      return result;
    }
    v13 = sub_5C154(&qword_31F490);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[7];
    }
    else
    {
      v10 = sub_5C154(&qword_31F498);
      v14 = *(_QWORD *)(v10 - 8);
      v15 = a4[8];
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_66304(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD v8[7];

  v2 = type metadata accessor for RatingSummaryComponentModel(319);
  if (v3 <= 0x3F)
  {
    v8[0] = *(_QWORD *)(v2 - 8) + 64;
    v8[1] = &unk_257C58;
    v8[2] = &unk_257C70;
    sub_663E4(319, (unint64_t *)&qword_31F508, (uint64_t (*)(uint64_t))&type metadata accessor for OpaqueMetricsFieldsContext);
    if (v5 <= 0x3F)
    {
      v8[3] = *(_QWORD *)(v4 - 8) + 64;
      sub_663E4(319, (unint64_t *)&qword_31F510, (uint64_t (*)(uint64_t))&type metadata accessor for ColorConstants);
      if (v7 <= 0x3F)
      {
        v8[4] = *(_QWORD *)(v6 - 8) + 64;
        v8[5] = &unk_257C88;
        v8[6] = &unk_257C58;
        swift_initStructMetadata(a1, 256, 7, v8, a1 + 16);
      }
    }
  }
}

void sub_663E4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!*a2)
  {
    v5 = a3(255);
    v6 = type metadata accessor for Environment.Content(a1, v5);
    if (!v7)
      atomic_store(v6, a2);
  }
}

uint64_t sub_66430()
{
  return sub_648E0(&qword_31F558, type metadata accessor for RatingSummaryView, (uint64_t)&unk_257CA0);
}

uint64_t sub_6645C(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_2B50B0, 1);
}

_QWORD *sub_66470()
{
  type metadata accessor for RatingSummaryView(0);
  return sub_61A80();
}

uint64_t sub_664A0()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;

  v1 = (int *)type metadata accessor for RatingSummaryView(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = v0 + v4;
  _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((_QWORD *)(v0 + v4));
  if (*(_QWORD *)(v0 + v4 + 64))
    _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((_QWORD *)(v6 + 40));
  v7 = (int *)type metadata accessor for RatingSummaryComponentModel(0);
  v8 = v6 + v7[6];
  v9 = type metadata accessor for ImpressionMetrics(0);
  v10 = *(_QWORD *)(v9 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
  swift_bridgeObjectRelease(*(_QWORD *)(v6 + v7[7] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v6 + v7[8] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v6 + v7[9] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v6 + v7[10] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v6 + v7[11] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v6 + v7[12] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v6 + v7[13] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v6 + v7[14]));
  swift_bridgeObjectRelease(*(_QWORD *)(v6 + v7[15]));
  v11 = (_QWORD *)(v6 + v1[5]);
  swift_release(*v11);
  swift_release(v11[1]);
  v12 = (_QWORD *)(v6 + v1[6]);
  if ((v12[5] & 1) != 0)
  {
    if (v12[3])
      _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(v12);
  }
  else
  {
    swift_release(*v12);
  }
  v13 = (_QWORD *)(v6 + v1[7]);
  v14 = sub_5C154(&qword_326110);
  if (swift_getEnumCaseMultiPayload(v13, v14) == 1)
  {
    v15 = type metadata accessor for OpaqueMetricsFieldsContext(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v13, v15);
  }
  else
  {
    swift_release(*v13);
  }
  v16 = (_QWORD *)(v6 + v1[8]);
  v17 = sub_5C154((uint64_t *)&unk_32A010);
  if (swift_getEnumCaseMultiPayload(v16, v17) == 1)
  {
    v18 = type metadata accessor for ColorConstants(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v16, v18);
  }
  else
  {
    swift_release(*v16);
  }
  sub_64FFC(*(_QWORD *)(v6 + v1[9]), *(_BYTE *)(v6 + v1[9] + 8));
  swift_release(*(_QWORD *)(v6 + v1[10] + 8));
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

uint64_t sub_66700(uint64_t a1, double *a2)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for RatingSummaryView(0) - 8) + 80);
  return sub_61AE4(a1, a2, v2 + ((v5 + 16) & ~v5));
}

unint64_t sub_6674C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_31F580;
  if (!qword_31F580)
  {
    v1 = sub_667D0(&qword_31F568);
    sub_67060(&qword_31F588, &qword_31F560, (uint64_t)&protocol conformance descriptor for VStack<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_31F580);
  }
  return result;
}

uint64_t sub_667D0(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = swift_getTypeByMangledNameInContextInMetadataState2(255, (char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

uint64_t sub_66814(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_5C154(&qword_31F590);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_6685C(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v3;

  v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

_QWORD *sub_66898(_QWORD *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
    return (_QWORD *)(*result
                    + ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80)));
  return result;
}

_QWORD *sub_668BC(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v2;

  v1 = a1;
  if ((*(_BYTE *)(*(_QWORD *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (_QWORD *)v2;
  }
  return v1;
}

unint64_t sub_668F8()
{
  unint64_t result;

  result = qword_325F70;
  if (!qword_325F70)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for String, &type metadata for String);
    atomic_store(result, (unint64_t *)&qword_325F70);
  }
  return result;
}

uint64_t sub_6693C(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return swift_release(a1);
  else
    return swift_bridgeObjectRelease(a2);
}

unint64_t sub_66954()
{
  unint64_t result;
  uint64_t v1;

  result = qword_31F630;
  if (!qword_31F630)
  {
    v1 = sub_667D0(&qword_31F628);
    sub_67060(&qword_31F638, &qword_31F640, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_31F630);
  }
  return result;
}

unint64_t sub_669D8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_31F688;
  if (!qword_31F688)
  {
    v1 = sub_667D0(&qword_31F668);
    sub_67060(&qword_31F690, &qword_31F660, (uint64_t)&protocol conformance descriptor for VStack<A>);
    sub_67060(&qword_31F698, &qword_31F6A0, (uint64_t)&protocol conformance descriptor for _TraitWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_31F688);
  }
  return result;
}

uint64_t sub_66A78@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for RatingSummaryView(0) - 8) + 80);
  return sub_609CC(a1, v2 + ((v5 + 16) & ~v5), a2);
}

unint64_t sub_66AC4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_31F6E8;
  if (!qword_31F6E8)
  {
    v1 = sub_667D0(&qword_31F6D8);
    sub_66B30();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> Range<A>, v1);
    atomic_store(result, (unint64_t *)&qword_31F6E8);
  }
  return result;
}

unint64_t sub_66B30()
{
  unint64_t result;

  result = qword_31F6F0;
  if (!qword_31F6F0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Int, &type metadata for Int);
    atomic_store(result, (unint64_t *)&qword_31F6F0);
  }
  return result;
}

unint64_t sub_66B74()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_31F6F8;
  if (!qword_31F6F8)
  {
    v1 = sub_667D0(&qword_31F6E0);
    v2[0] = sub_667D0(&qword_31F700);
    v2[1] = sub_67060(&qword_31F708, &qword_31F700, (uint64_t)&protocol conformance descriptor for HStack<A>);
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
    sub_648E0(&qword_31F710, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_31F6F8);
  }
  return result;
}

uint64_t sub_66C48()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;

  v1 = (int *)type metadata accessor for RatingSummaryView(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = v0 + v4;
  _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((_QWORD *)(v0 + v4));
  if (*(_QWORD *)(v0 + v4 + 64))
    _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((_QWORD *)(v6 + 40));
  v7 = (int *)type metadata accessor for RatingSummaryComponentModel(0);
  v8 = v6 + v7[6];
  v9 = type metadata accessor for ImpressionMetrics(0);
  v10 = *(_QWORD *)(v9 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
  swift_bridgeObjectRelease(*(_QWORD *)(v6 + v7[7] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v6 + v7[8] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v6 + v7[9] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v6 + v7[10] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v6 + v7[11] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v6 + v7[12] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v6 + v7[13] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v6 + v7[14]));
  swift_bridgeObjectRelease(*(_QWORD *)(v6 + v7[15]));
  v11 = (_QWORD *)(v6 + v1[5]);
  swift_release(*v11);
  swift_release(v11[1]);
  v12 = (_QWORD *)(v6 + v1[6]);
  if ((v12[5] & 1) != 0)
  {
    if (v12[3])
      _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(v12);
  }
  else
  {
    swift_release(*v12);
  }
  v13 = (_QWORD *)(v6 + v1[7]);
  v14 = sub_5C154(&qword_326110);
  if (swift_getEnumCaseMultiPayload(v13, v14) == 1)
  {
    v15 = type metadata accessor for OpaqueMetricsFieldsContext(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v13, v15);
  }
  else
  {
    swift_release(*v13);
  }
  v16 = (_QWORD *)(v6 + v1[8]);
  v17 = sub_5C154((uint64_t *)&unk_32A010);
  if (swift_getEnumCaseMultiPayload(v16, v17) == 1)
  {
    v18 = type metadata accessor for ColorConstants(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v16, v18);
  }
  else
  {
    swift_release(*v16);
  }
  sub_64FFC(*(_QWORD *)(v6 + v1[9]), *(_BYTE *)(v6 + v1[9] + 8));
  swift_release(*(_QWORD *)(v6 + v1[10] + 8));
  return swift_deallocObject(v0, ((v5 + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8, v3 | 7);
}

uint64_t sub_66EB4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;

  v5 = *(_QWORD *)(type metadata accessor for RatingSummaryView(0) - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  return sub_61788(a1, v2 + v6, *(_QWORD *)(v2 + ((*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFF8)), a2);
}

uint64_t sub_66F14(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = sub_5C154(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unint64_t sub_66F58()
{
  unint64_t result;
  uint64_t v1;

  result = qword_31F7A8;
  if (!qword_31F7A8)
  {
    v1 = sub_667D0(&qword_31F7A0);
    sub_66FDC();
    sub_67060(&qword_31F7D0, &qword_31F7D8, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_31F7A8);
  }
  return result;
}

unint64_t sub_66FDC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_31F7B0;
  if (!qword_31F7B0)
  {
    v1 = sub_667D0(&qword_31F7B8);
    sub_67060(&qword_31F7C0, &qword_31F7C8, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_31F7B0);
  }
  return result;
}

uint64_t sub_67060(unint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = sub_667D0(a2);
    result = swift_getWitnessTable(a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_670A4@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for RatingSummaryView(0);
  return sub_61614(a1);
}

unint64_t sub_670F8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_31F800;
  if (!qword_31F800)
  {
    v1 = sub_667D0(&qword_31F7F8);
    sub_67164();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_31F800);
  }
  return result;
}

unint64_t sub_67164()
{
  unint64_t result;
  uint64_t v1;

  result = qword_31F808;
  if (!qword_31F808)
  {
    v1 = sub_667D0(&qword_31F810);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_31F808);
  }
  return result;
}

uint64_t sub_671C8(uint64_t a1)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 24);
  sub_6693C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  swift_bridgeObjectRelease(v2);
  return a1;
}

uint64_t sub_67204()
{
  _QWORD v1[4];

  v1[0] = sub_667D0(&qword_31F568);
  v1[1] = &type metadata for Double;
  v1[2] = sub_6674C();
  v1[3] = &protocol witness table for Double;
  return swift_getOpaqueTypeConformance2(v1, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 1);
}

void sub_67278()
{
  sub_6466C();
}

void sub_6728C()
{
  sub_64688();
}

uint64_t sub_672A0()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  v1 = v0 + qword_31F820;
  swift_beginAccess(v0 + qword_31F820, v3, 0, 0);
  return swift_unknownObjectWeakLoadStrong(v1);
}

uint64_t sub_672EC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  _BYTE v7[24];

  v5 = v2 + qword_31F820;
  swift_beginAccess(v5, v7, 1, 0);
  *(_QWORD *)(v5 + 8) = a2;
  swift_unknownObjectWeakAssign(v5, a1);
  return swift_unknownObjectRelease(a1);
}

void (*sub_67354(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t Strong;
  uint64_t v7;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v4 = qword_31F820;
  v3[5] = v1;
  v3[6] = v4;
  v5 = v1 + v4;
  swift_beginAccess(v1 + v4, v3, 33, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v5);
  v7 = *(_QWORD *)(v5 + 8);
  v3[3] = Strong;
  v3[4] = v7;
  return sub_673C8;
}

void sub_673C8(uint64_t a1, char a2)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD **)a1;
  v4 = *(_QWORD *)(*(_QWORD *)a1 + 24);
  v5 = *(_QWORD *)(*(_QWORD *)a1 + 32);
  v6 = *(_QWORD *)(*(_QWORD *)a1 + 40) + *(_QWORD *)(*(_QWORD *)a1 + 48);
  *(_QWORD *)(v6 + 8) = v5;
  swift_unknownObjectWeakAssign(v6, v4);
  if ((a2 & 1) != 0)
  {
    swift_unknownObjectRelease(v3[3]);
    swift_endAccess(v3);
  }
  else
  {
    swift_endAccess(v3);
    swift_unknownObjectRelease(v4);
  }
  free(v3);
}

uint64_t RootHostingController.hostProxy.getter()
{
  uint64_t v0;

  return swift_retain(*(_QWORD *)(v0 + qword_31F828));
}

id RootHostingController.configuration.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  id v7;

  v7 = *(id *)(v1 + qword_31F830);
  v2 = *(_BYTE *)(v1 + qword_31F830 + 8);
  v3 = *(_BYTE *)(v1 + qword_31F830 + 9);
  v5 = *(_QWORD *)(v1 + qword_31F830 + 16);
  v4 = *(_QWORD *)(v1 + qword_31F830 + 24);
  *(_QWORD *)a1 = v7;
  *(_BYTE *)(a1 + 8) = v2;
  *(_BYTE *)(a1 + 9) = v3;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v4;
  swift_bridgeObjectRetain(v4);
  return v7;
}

char *sub_6749C(uint64_t a1, void *a2, uint64_t a3, void *a4, unsigned int a5, void *a6, uint64_t a7, uint64_t (*a8)(id, _QWORD *), uint64_t a9, char *a10, void *a11)
{
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  char *v20;
  char *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t (*v35)(id, _QWORD *);
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  id v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  id v71;
  uint64_t v72;
  uint64_t v73;
  int v74;
  void *v75;
  uint64_t v76;
  uint64_t (*v77)(id, _QWORD *);
  uint64_t v78;
  id v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  void *v83;
  uint64_t v84;
  int v85;
  uint64_t v86;
  char v87[24];
  _QWORD v88[7];
  uint64_t v89;
  void *v90;
  id v91;
  uint64_t v92;
  ValueMetadata *v93;
  unint64_t v94;
  uint64_t v95;
  uint64_t v96;

  v77 = a8;
  v84 = a7;
  v75 = a6;
  v86 = a3;
  v79 = a2;
  v78 = a1;
  v83 = a11;
  v76 = a9;
  v82 = type metadata accessor for Spring(0);
  v81 = *(_QWORD *)(v82 - 8);
  __chkstk_darwin(v82);
  v80 = (char *)&v65 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v70 = sub_5C154(&qword_322410);
  __chkstk_darwin(v70);
  v67 = (uint64_t)&v65 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = &a10[qword_31F820];
  *((_QWORD *)v16 + 1) = 0;
  swift_unknownObjectWeakInit(v16);
  swift_unknownObjectWeakInit(&a10[qword_31F8D0]);
  v17 = qword_31F8D8;
  v18 = type metadata accessor for RootHostingControllerNavigationItem();
  v19 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v18));
  v20 = a10;
  *(_QWORD *)&a10[v17] = objc_msgSend(v19, "init");
  v21 = &v20[qword_31F8F0];
  *(_QWORD *)v21 = 0;
  v21[8] = 1;
  *(_QWORD *)&v20[qword_31F8F8] = &_swiftEmptySetSingleton;
  v72 = type metadata accessor for HostProxy(0);
  v22 = (_QWORD *)swift_allocObject(v72, *(unsigned int *)(v72 + 48), *(unsigned __int16 *)(v72 + 52));
  v23 = sub_5C154(&qword_31FA68);
  swift_allocObject(v23, *(unsigned int *)(v23 + 48), *(unsigned __int16 *)(v23 + 52));
  v22[2] = PassthroughSubject.init()();
  v24 = swift_unknownObjectWeakInit(v22 + 3);
  v22[4] = 0;
  v22[5] = 0;
  ObservationRegistrar.init()(v24);
  *(_QWORD *)&v20[qword_31F828] = v22;
  v25 = type metadata accessor for GeometryCache(0);
  swift_allocObject(v25, *(unsigned int *)(v25 + 48), *(unsigned __int16 *)(v25 + 52));
  v66 = GeometryCache.init()();
  *(_QWORD *)&v20[qword_31F8E0] = v66;
  v69 = type metadata accessor for NavigationProvider();
  v26 = swift_allocObject(v69, 24, 7);
  v68 = v26;
  swift_unknownObjectWeakInit(v26 + 16);
  *(_QWORD *)&v20[qword_31F8E8] = v26;
  v27 = type metadata accessor for HostingControllerVisibilityStateManager(0);
  swift_allocObject(v27, *(unsigned int *)(v27 + 48), *(unsigned __int16 *)(v27 + 52));
  v65 = HostingControllerVisibilityStateManager.init()();
  *(_QWORD *)&v20[qword_31F848] = v65;
  v28 = &v20[qword_31F830];
  *(_QWORD *)v28 = a4;
  v85 = a5 & 1;
  v28[8] = a5 & 1;
  v74 = (a5 >> 8) & 1;
  v28[9] = v74;
  v29 = v84;
  *((_QWORD *)v28 + 2) = a6;
  *((_QWORD *)v28 + 3) = v29;
  v30 = sub_5C154(&qword_31F010);
  v31 = type metadata accessor for Dependency(0);
  v73 = swift_allocObject(v30, ((*(unsigned __int8 *)(*(_QWORD *)(v31 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v31 - 8) + 80))+ 13 * *(_QWORD *)(*(_QWORD *)(v31 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v31 - 8) + 80) | 7);
  *(_OWORD *)(v73 + 16) = xmmword_257DB0;
  v32 = v67;
  sub_6C1C4(v86, v67);
  swift_bridgeObjectRetain(v29);
  v71 = a4;
  Dependency.init<A>(satisfying:with:)(v70, v32, v70);
  v33 = type metadata accessor for BATracker(0);
  v89 = (uint64_t)v79;
  v79 = v79;
  Dependency.init<A>(satisfying:with:)(v33, &v89, v33);
  v34 = type metadata accessor for ExposureCollector(0);
  swift_allocObject(v34, *(unsigned int *)(v34 + 48), *(unsigned __int16 *)(v34 + 52));
  v89 = ExposureCollector.init()();
  v35 = v77;
  Dependency.init<A>(satisfying:with:)(v34, &v89, v34);
  LOBYTE(v89) = v85;
  Dependency.init<A>(satisfying:with:)(&type metadata for FigaroPageConfiguration, &v89, &type metadata for FigaroPageConfiguration);
  v89 = v66;
  swift_retain(v66);
  Dependency.init<A>(satisfying:with:)(v25, &v89, v25);
  v89 = v65;
  swift_retain(v65);
  v36 = v20;
  Dependency.init<A>(satisfying:with:)(v27, &v89, v27);
  v89 = (uint64_t)v22;
  swift_retain(v22);
  v37 = v72;
  Dependency.init<A>(satisfying:with:)(v72, &v89, v72);
  v38 = sub_5C154(&qword_31FA88);
  type metadata accessor for BasicImpressionsTracker(0);
  v89 = BasicImpressionsTracker.__allocating_init(threshold:)(1.0);
  v90 = &protocol witness table for BasicImpressionsTracker;
  Dependency.init<A>(satisfying:with:)(v38, &v89, v38);
  v39 = sub_5C154(&qword_31FA90);
  v92 = v69;
  v93 = (ValueMetadata *)&protocol witness table for NavigationProvider;
  v89 = v68;
  swift_retain(v68);
  Dependency.init<A>(satisfying:with:)(v39, &v89, v39);
  v40 = v78;
  v41 = type metadata accessor for PageLifecycleHandler();
  v42 = swift_allocObject(v41, 24, 7);
  v43 = type metadata accessor for Page.LifecycleInfo();
  v44 = swift_allocObject(v43, 24, 7);
  *(_QWORD *)(v44 + 16) = &_swiftEmptyDictionarySingleton;
  *(_QWORD *)(v42 + 16) = v44;
  v89 = v42;
  Dependency.init<A>(satisfying:with:)(v41, &v89, v41);
  v45 = sub_5C154(&qword_31FA98);
  v92 = v37;
  v93 = (ValueMetadata *)sub_6C20C(&qword_31FAA0, (uint64_t)&protocol conformance descriptor for HostProxy);
  v89 = (uint64_t)v22;
  swift_retain(v22);
  Dependency.init<A>(satisfying:with:)(v45, &v89, v45);
  v46 = sub_5C154(&qword_31FAA8);
  v92 = v37;
  v93 = (ValueMetadata *)sub_6C20C((unint64_t *)&unk_31FAB0, (uint64_t)&protocol conformance descriptor for HostProxy);
  v89 = (uint64_t)v22;
  swift_retain(v22);
  Dependency.init<A>(satisfying:with:)(v46, &v89, v46);

  v89 = (uint64_t)v71;
  LOBYTE(v90) = v85;
  BYTE1(v90) = v74;
  v91 = v75;
  v92 = v84;
  Dependency.init<A>(satisfying:with:)(&type metadata for RootHostingControllerConfiguration, &v89, &type metadata for RootHostingControllerConfiguration);
  v47 = v73;
  v89 = v73;
  v48 = sub_5C154((uint64_t *)&unk_31FEC0);
  v49 = sub_67060((unint64_t *)&qword_31FAC0, (uint64_t *)&unk_31FEC0, (uint64_t)&protocol conformance descriptor for [A]);
  v50 = (id)dispatch thunk of BaseObjectGraph.adding<A>(allDependencies:)(&v89, v48, v49);
  swift_bridgeObjectRelease(v47);
  swift_retain_n(v50, 2);
  v51 = v76;
  sub_6C24C((uint64_t)v35, v76);
  v52 = v80;
  Spring.init(mass:stiffness:damping:allowOverDamping:)(0, 1.0, 300.0, 35.0);
  v53 = static Animation.spring(_:blendDuration:)(v52, 0.0);
  (*(void (**)(char *, uint64_t))(v81 + 8))(v52, v82);
  v54 = Transaction.init(animation:)(v53);
  v55 = v83;
  v88[0] = v83;
  v88[1] = v50;
  v88[2] = v54;
  v89 = (uint64_t)v50;
  v93 = &type metadata for YearInReviewRootView;
  v56 = sub_6C25C();
  v90 = v55;
  v91 = v50;
  v94 = v56;
  v92 = v54;
  if (v35)
  {
    swift_retain_n(v50, 2);
    sub_6C24C((uint64_t)v35, v51);
    swift_retain(v54);
    v57 = v35(v50, v88);
    v59 = v58;
    sub_6C2DC((uint64_t)v35, v51);
    sub_6C2DC((uint64_t)v35, v51);
    swift_release(v54);
    swift_release_n(v50, 2);
  }
  else
  {
    v57 = 0;
    v59 = 0;
  }
  v95 = v57;
  v96 = v59;
  sub_6C2A0(&v89, (uint64_t)v88);
  v60 = (char *)UIHostingController.init(rootView:)(v88);
  v61 = *(_QWORD *)&v60[qword_31F8E8] + 16;
  swift_beginAccess(v61, v88, 1, 0);
  swift_unknownObjectWeakAssign(v61, v60);
  v62 = *(_QWORD *)&v60[qword_31F828] + 24;
  swift_beginAccess(v62, v87, 1, 0);
  swift_unknownObjectWeakAssign(v62, v60);
  v63 = v60;
  sub_68620();
  sub_68B28();

  sub_6C2DC((uint64_t)v35, v51);
  swift_release(v50);
  swift_release(v40);

  sub_5E09C(v86, &qword_322410);
  sub_6C108(&v89);
  return v63;
}

char *sub_67DD4(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  char *v10;
  uint64_t v12;
  void *v13;
  unsigned __int8 v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  char *v19;
  char *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t (*v49)(uint64_t, char *);
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  id v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  int v65;
  id v66;
  uint64_t v67;
  uint64_t (*v68)(uint64_t, char *);
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  int v75;
  uint64_t v76;
  uint64_t v77;
  char v78[24];
  _BYTE v79[56];
  uint64_t v80;
  void *v81;
  uint64_t v82;
  uint64_t v83;
  _UNKNOWN **v84;

  v69 = a8;
  v68 = (uint64_t (*)(uint64_t, char *))a7;
  v73 = a6;
  v72 = a5;
  v77 = a3;
  v66 = a2;
  v67 = a1;
  v71 = a9;
  v70 = a10;
  v60 = sub_5C154(&qword_322410);
  __chkstk_darwin(v60);
  v58 = (uint64_t)&v56 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(void **)a4;
  v75 = *(unsigned __int8 *)(a4 + 8);
  v14 = *(_BYTE *)(a4 + 9);
  v65 = v14;
  v76 = *(_QWORD *)(a4 + 16);
  v74 = *(_QWORD *)(a4 + 24);
  v15 = &v10[qword_31F820];
  *((_QWORD *)v15 + 1) = 0;
  swift_unknownObjectWeakInit(v15);
  swift_unknownObjectWeakInit(&v10[qword_31F8D0]);
  v16 = qword_31F8D8;
  v17 = type metadata accessor for RootHostingControllerNavigationItem();
  v18 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v17));
  v19 = v10;
  *(_QWORD *)&v10[v16] = objc_msgSend(v18, "init");
  v20 = &v19[qword_31F8F0];
  *(_QWORD *)v20 = 0;
  v20[8] = 1;
  *(_QWORD *)&v19[qword_31F8F8] = &_swiftEmptySetSingleton;
  v62 = type metadata accessor for HostProxy(0);
  v21 = (_QWORD *)swift_allocObject(v62, *(unsigned int *)(v62 + 48), *(unsigned __int16 *)(v62 + 52));
  v22 = sub_5C154(&qword_31FA68);
  swift_allocObject(v22, *(unsigned int *)(v22 + 48), *(unsigned __int16 *)(v22 + 52));
  v21[2] = PassthroughSubject.init()();
  v23 = swift_unknownObjectWeakInit(v21 + 3);
  v21[4] = 0;
  v21[5] = 0;
  ObservationRegistrar.init()(v23);
  *(_QWORD *)&v19[qword_31F828] = v21;
  v24 = type metadata accessor for GeometryCache(0);
  swift_allocObject(v24, *(unsigned int *)(v24 + 48), *(unsigned __int16 *)(v24 + 52));
  v56 = GeometryCache.init()();
  *(_QWORD *)&v19[qword_31F8E0] = v56;
  v59 = type metadata accessor for NavigationProvider();
  v25 = swift_allocObject(v59, 24, 7);
  v57 = v25;
  swift_unknownObjectWeakInit(v25 + 16);
  *(_QWORD *)&v19[qword_31F8E8] = v25;
  v26 = type metadata accessor for HostingControllerVisibilityStateManager(0);
  swift_allocObject(v26, *(unsigned int *)(v26 + 48), *(unsigned __int16 *)(v26 + 52));
  v27 = HostingControllerVisibilityStateManager.init()();
  v64 = v19;
  *(_QWORD *)&v19[qword_31F848] = v27;
  v28 = &v19[qword_31F830];
  *(_QWORD *)v28 = v13;
  v28[8] = v75;
  v28[9] = v14;
  v29 = v74;
  *((_QWORD *)v28 + 2) = v76;
  *((_QWORD *)v28 + 3) = v29;
  v30 = sub_5C154(&qword_31F010);
  v31 = type metadata accessor for Dependency(0);
  v63 = swift_allocObject(v30, ((*(unsigned __int8 *)(*(_QWORD *)(v31 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v31 - 8) + 80))+ 13 * *(_QWORD *)(*(_QWORD *)(v31 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v31 - 8) + 80) | 7);
  *(_OWORD *)(v63 + 16) = xmmword_257DB0;
  v32 = v58;
  sub_6C1C4(v77, v58);
  swift_bridgeObjectRetain(v29);
  v61 = v13;
  Dependency.init<A>(satisfying:with:)(v60, v32, v60);
  v33 = type metadata accessor for BATracker(0);
  v80 = (uint64_t)v66;
  v66 = v66;
  Dependency.init<A>(satisfying:with:)(v33, &v80, v33);
  v34 = type metadata accessor for ExposureCollector(0);
  swift_allocObject(v34, *(unsigned int *)(v34 + 48), *(unsigned __int16 *)(v34 + 52));
  v80 = ExposureCollector.init()();
  Dependency.init<A>(satisfying:with:)(v34, &v80, v34);
  LOBYTE(v34) = v75;
  LOBYTE(v80) = v75;
  Dependency.init<A>(satisfying:with:)(&type metadata for FigaroPageConfiguration, &v80, &type metadata for FigaroPageConfiguration);
  v80 = v56;
  swift_retain(v56);
  Dependency.init<A>(satisfying:with:)(v24, &v80, v24);
  v80 = v27;
  swift_retain(v27);
  Dependency.init<A>(satisfying:with:)(v26, &v80, v26);
  v80 = (uint64_t)v21;
  swift_retain(v21);
  v35 = v62;
  Dependency.init<A>(satisfying:with:)(v62, &v80, v62);
  v36 = sub_5C154(&qword_31FA88);
  type metadata accessor for BasicImpressionsTracker(0);
  v80 = BasicImpressionsTracker.__allocating_init(threshold:)(1.0);
  v81 = &protocol witness table for BasicImpressionsTracker;
  Dependency.init<A>(satisfying:with:)(v36, &v80, v36);
  v37 = sub_5C154(&qword_31FA90);
  v83 = v59;
  v84 = &protocol witness table for NavigationProvider;
  v80 = v57;
  swift_retain(v57);
  Dependency.init<A>(satisfying:with:)(v37, &v80, v37);
  v38 = type metadata accessor for PageLifecycleHandler();
  v39 = swift_allocObject(v38, 24, 7);
  v40 = type metadata accessor for Page.LifecycleInfo();
  v41 = swift_allocObject(v40, 24, 7);
  *(_QWORD *)(v41 + 16) = &_swiftEmptyDictionarySingleton;
  *(_QWORD *)(v39 + 16) = v41;
  v80 = v39;
  Dependency.init<A>(satisfying:with:)(v38, &v80, v38);
  v42 = sub_5C154(&qword_31FA98);
  v83 = v35;
  v84 = (_UNKNOWN **)sub_6C20C(&qword_31FAA0, (uint64_t)&protocol conformance descriptor for HostProxy);
  v80 = (uint64_t)v21;
  swift_retain(v21);
  Dependency.init<A>(satisfying:with:)(v42, &v80, v42);
  v43 = sub_5C154(&qword_31FAA8);
  v83 = v35;
  v84 = (_UNKNOWN **)sub_6C20C((unint64_t *)&unk_31FAB0, (uint64_t)&protocol conformance descriptor for HostProxy);
  v80 = (uint64_t)v21;
  swift_retain(v21);
  Dependency.init<A>(satisfying:with:)(v43, &v80, v43);

  v80 = (uint64_t)v61;
  LOBYTE(v81) = v34;
  BYTE1(v81) = v65;
  v82 = v76;
  v83 = v74;
  Dependency.init<A>(satisfying:with:)(&type metadata for RootHostingControllerConfiguration, &v80, &type metadata for RootHostingControllerConfiguration);
  v44 = v63;
  v80 = v63;
  v45 = sub_5C154((uint64_t *)&unk_31FEC0);
  v46 = sub_67060((unint64_t *)&qword_31FAC0, (uint64_t *)&unk_31FEC0, (uint64_t)&protocol conformance descriptor for [A]);
  v47 = v67;
  v48 = dispatch thunk of BaseObjectGraph.adding<A>(allDependencies:)(&v80, v45, v46);
  swift_bridgeObjectRelease(v44);
  swift_retain(v48);
  v49 = v68;
  v50 = v69;
  sub_6C24C((uint64_t)v68, v69);
  sub_F135C(v48, v49, v50, v71, v70, &v80);
  sub_6C2A0(&v80, (uint64_t)v79);
  v51 = (char *)UIHostingController.init(rootView:)(v79);
  v52 = *(_QWORD *)&v51[qword_31F8E8] + 16;
  swift_beginAccess(v52, v79, 1, 0);
  swift_unknownObjectWeakAssign(v52, v51);
  v53 = *(_QWORD *)&v51[qword_31F828] + 24;
  swift_beginAccess(v53, v78, 1, 0);
  swift_unknownObjectWeakAssign(v53, v51);
  v54 = v51;
  sub_68620();
  sub_68B28();

  sub_6C2DC((uint64_t)v49, v50);
  swift_release(v48);
  swift_release(v47);

  sub_5E09C(v77, &qword_322410);
  sub_6C108(&v80);
  return v54;
}

void sub_685FC(uint64_t a1, uint64_t a2, void *a3)
{
  id v3;

  v3 = a3;
  sub_6B93C();
}

uint64_t sub_68620()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v10[3];

  v1 = v0;
  v2 = sub_5C154(&qword_31FA68);
  v3 = sub_67060(&qword_31FA70, &qword_31FA68, (uint64_t)&protocol conformance descriptor for PassthroughSubject<A, B>);
  v10[0] = Publisher.eraseToAnyPublisher()(v2, v3);
  v4 = swift_allocObject(&unk_2E7B98, 24, 7);
  swift_unknownObjectWeakInit(v4 + 16);
  v5 = sub_5C154(&qword_31FA78);
  v6 = sub_67060(&qword_31FA80, &qword_31FA78, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
  v7 = Publisher<>.sink(receiveValue:)(sub_6C13C, v4, v5, v6);
  swift_release(v4);
  swift_release(v10[0]);
  v8 = v1 + qword_31F8F8;
  swift_beginAccess(v8, v10, 33, 0);
  AnyCancellable.store(in:)(v8);
  swift_endAccess(v10);
  return swift_release(v7);
}

void sub_68758(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 *v6;
  uint64_t Strong;
  char *v8;
  int EnumCaseMultiPayload;
  uint64_t v10;
  id v11;
  uint64_t v12;
  id v13;
  void *v14;
  double v15;
  id v16;
  double v17;
  double v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t ObjectType;
  id v26;
  id v27;
  id v28;
  void *v29;
  id v30;
  id v31;
  unsigned int v32;
  id v33;
  void *v34;
  id v35;
  _BYTE v36[24];
  char v37[24];

  v4 = type metadata accessor for HostProxy.Event(0);
  __chkstk_darwin(v4);
  v6 = &v36[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  a2 += 16;
  swift_beginAccess(a2, v37, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a2);
  if (Strong)
  {
    v8 = (char *)Strong;
    sub_6C144(a1, (uint64_t)v6);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v6, v4);
    if (EnumCaseMultiPayload == 2)
    {
      v14 = *(void **)v6;
      objc_msgSend(v8, "ba_setAnalyticsTracker:", v14);

      return;
    }
    if (EnumCaseMultiPayload == 1)
    {
      v15 = *(double *)v6;
      v16 = objc_msgSend(v8, "navigationItem");
      objc_msgSend(v16, "_manualScrollEdgeAppearanceProgress");
      v18 = v17;

      if (v15 == v18)
      {

        return;
      }
      v28 = objc_msgSend(v8, "navigationController");
      if (v28)
      {
        v29 = v28;
        v30 = objc_msgSend(v28, "navigationBar");

        objc_msgSend(v30, "_setTitleOpacity:", v15);
      }
      v31 = objc_msgSend(v8, "navigationItem");
      v32 = objc_msgSend(v31, "_isManualScrollEdgeAppearanceEnabled");

      if (v32)
      {
        v33 = objc_msgSend(v8, "navigationItem");
        objc_msgSend(v33, "_setManualScrollEdgeAppearanceProgress:", v15);

      }
      v26 = objc_msgSend(v8, "preferredNavigationBarTintColor");
      v27 = objc_msgSend(v8, "navigationController");
      if (v27)
      {
LABEL_21:
        v34 = v27;
        v35 = objc_msgSend(v27, "navigationBar");

        objc_msgSend(v35, "setTintColor:", v26);
LABEL_23:

        return;
      }
    }
    else
    {
      if (EnumCaseMultiPayload)
      {

        sub_6C188((uint64_t)v6);
        return;
      }
      v10 = *v6;
      v11 = objc_msgSend(v8, "navigationItem");
      objc_msgSend(v11, "_setManualScrollEdgeAppearanceEnabled:", v10);

      if ((_DWORD)v10 == 1)
      {
        v12 = 1;
        v13 = objc_msgSend(v8, "contentScrollViewForEdge:", 1);
        objc_msgSend(v8, "setContentScrollView:forEdge:", 0, 1);
        objc_msgSend(v8, "setContentScrollView:forEdge:", v13, 1);

      }
      else
      {
        v12 = 0;
      }
      v19 = v10 ^ 1;
      v20 = &v8[qword_31F8F0];
      *(_QWORD *)v20 = v12;
      v20[8] = v19;
      v21 = &v8[qword_31F820];
      swift_beginAccess(&v8[qword_31F820], v36, 0, 0);
      v22 = swift_unknownObjectWeakLoadStrong(v21);
      if (v22)
      {
        v23 = v22;
        v24 = *((_QWORD *)v21 + 1);
        ObjectType = swift_getObjectType(v22);
        (*(void (**)(uint64_t, uint64_t, char *, uint64_t, uint64_t))(v24 + 16))(v12, v19, v8, ObjectType, v24);
        swift_unknownObjectRelease(v23);
      }
      v26 = objc_msgSend(v8, "preferredNavigationBarTintColor");
      v27 = objc_msgSend(v8, "navigationController");
      if (v27)
        goto LABEL_21;
    }

    goto LABEL_23;
  }
}

id sub_68B28()
{
  char *v0;
  char *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  NSString v6;
  id v7;
  _QWORD v9[6];
  uint64_t v10;

  v1 = &v0[qword_31F830];
  if (v0[qword_31F830 + 9] == 1)
  {
    v2 = objc_msgSend(v0, "navigationItem");
    objc_msgSend(v2, "setHidesBackButton:animated:", 1, 0);

  }
  v3 = *((_QWORD *)v1 + 3);
  if (v3)
  {
    v4 = *((_QWORD *)v1 + 3);
LABEL_7:
    v5 = objc_msgSend(v0, "navigationItem", swift_bridgeObjectRetain(v3).n128_f64[0]);
    v6 = String._bridgeToObjectiveC()();
    objc_msgSend(v5, "setTitle:", v6, swift_bridgeObjectRelease(v4).n128_f64[0]);

    goto LABEL_8;
  }
  dispatch thunk of UIHostingController.rootView.getter(v9);
  v4 = v10;
  swift_bridgeObjectRetain(v10);
  sub_6C108(v9);
  if (v4)
  {
    v3 = 0;
    goto LABEL_7;
  }
LABEL_8:
  v7 = objc_msgSend(v0, "navigationItem");
  objc_msgSend(v7, "setLargeTitleDisplayMode:", 2);

  return objc_msgSend(v0, "bc_setNavBarVisible:", 1);
}

void RootHostingController.init(rootView:)()
{
  _swift_stdlib_reportUnimplementedInitializer("BookStoreUI.RootHostingController", 33, "init(rootView:)", 15, 0);
  __break(1u);
}

void RootHostingController.init(coder:rootView:)()
{
  _swift_stdlib_reportUnimplementedInitializer("BookStoreUI.RootHostingController", 33, "init(coder:rootView:)", 21, 0);
  __break(1u);
}

uint64_t sub_68CC4()
{
  uint64_t v0;
  uint64_t v1;

  sub_6C0E4(v0 + qword_31F820);
  swift_release(*(_QWORD *)(v0 + qword_31F828));
  v1 = *(_QWORD *)(v0 + qword_31F830 + 24);

  swift_bridgeObjectRelease(v1);
  swift_release(*(_QWORD *)(v0 + qword_31F8E0));
  swift_release(*(_QWORD *)(v0 + qword_31F8E8));
  swift_release(*(_QWORD *)(v0 + qword_31F848));
  sub_6C0E4(v0 + qword_31F8D0);

  return swift_bridgeObjectRelease(*(_QWORD *)(v0 + qword_31F8F8));
}

id RootHostingController.__deallocating_deinit()
{
  return sub_6B548(type metadata accessor for RootHostingController);
}

uint64_t type metadata accessor for RootHostingController(uint64_t a1)
{
  uint64_t result;

  result = qword_31F900;
  if (!qword_31F900)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for RootHostingController);
  return result;
}

uint64_t sub_68DC0(uint64_t a1)
{
  uint64_t v2;

  sub_6C0E4(a1 + qword_31F820);
  swift_release(*(_QWORD *)(a1 + qword_31F828));
  v2 = *(_QWORD *)(a1 + qword_31F830 + 24);

  swift_bridgeObjectRelease(v2);
  swift_release(*(_QWORD *)(a1 + qword_31F8E0));
  swift_release(*(_QWORD *)(a1 + qword_31F8E8));
  swift_release(*(_QWORD *)(a1 + qword_31F848));
  sub_6C0E4(a1 + qword_31F8D0);

  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + qword_31F8F8));
}

Swift::Void __swiftcall RootHostingController.viewWillLayoutSubviews()()
{
  char *v0;
  char *v1;
  id v2;
  void *v3;
  double v4;
  double v5;
  double v6;
  double v7;
  uint64_t v8;
  uint64_t KeyPath;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  Class isa;
  unint64_t v16;
  uint64_t v17;
  id v18;
  id v19;
  id v20;
  void *v21;
  id v22;
  _BYTE v23[16];
  uint64_t v24;
  double v25;
  uint64_t v26;
  _QWORD v27[4];
  _QWORD v28[3];
  objc_super v29;

  v1 = v0;
  v29.receiver = v0;
  v29.super_class = (Class)type metadata accessor for RootHostingController(0);
  objc_msgSendSuper2(&v29, "viewWillLayoutSubviews");
  v2 = objc_msgSend(v0, "view");
  if (v2)
  {
    v3 = v2;
    objc_msgSend(v2, "safeAreaInsets");
    v5 = v4;
    v7 = v6;

    v8 = *(_QWORD *)&v1[qword_31F828];
    KeyPath = swift_getKeyPath(&unk_257DC0);
    v28[0] = v8;
    v10 = sub_6C20C(&qword_31F838, (uint64_t)&protocol conformance descriptor for HostProxy);
    ObservationRegistrar.access<A, B>(_:keyPath:)(v28, KeyPath, v10);
    swift_release(KeyPath);
    swift_beginAccess(v8 + 32, v28, 0, 0);
    if (*(double *)(v8 + 32) != v5)
    {
      v11 = swift_getKeyPath(&unk_257DC0);
      __chkstk_darwin(v11);
      v24 = v8;
      v25 = v5;
      v27[0] = v8;
      ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(v27, v11, sub_6B810, v23, (char *)&type metadata for () + 8, v10);
      swift_release(v11);
    }
    v12 = swift_getKeyPath(&unk_257DE8);
    v27[0] = v8;
    ObservationRegistrar.access<A, B>(_:keyPath:)(v27, v12, v10);
    swift_release(v12);
    swift_beginAccess(v8 + 40, v27, 0, 0);
    if (*(double *)(v8 + 40) != v7)
    {
      v13 = swift_getKeyPath(&unk_257DE8);
      __chkstk_darwin(v13);
      v24 = v8;
      v25 = v7;
      v26 = v8;
      ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v26, v13, sub_6B834, v23, (char *)&type metadata for () + 8, v10);
      swift_release(v13);
    }
    v14 = objc_msgSend(v1, "navigationItem");
    isa = (Class)objc_msgSend(v14, "trailingItemGroups");

    if (!isa)
    {
      v16 = sub_6B850();
      v17 = static Array._unconditionallyBridgeFromObjectiveC(_:)(0, v16);
      isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease(v17);
    }
    v18 = objc_msgSend(v1, "navigationItem");
    objc_msgSend(v18, "setTrailingItemGroups:", isa);

    v19 = objc_msgSend(v1, "preferredNavigationBarTintColor");
    v20 = objc_msgSend(v1, "navigationController");
    if (v20)
    {
      v21 = v20;
      v22 = objc_msgSend(v20, "navigationBar");

      objc_msgSend(v22, "setTintColor:", v19);
    }

  }
  else
  {
    __break(1u);
  }
}

void sub_691D0(void *a1)
{
  id v1;

  v1 = a1;
  RootHostingController.viewWillLayoutSubviews()();

}

Swift::Void __swiftcall RootHostingController.viewWillAppear(_:)(Swift::Bool a1)
{
  void *v1;
  id v3;
  id v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  void *v9;
  unsigned int v10;
  objc_super v11;

  v11.receiver = v1;
  v11.super_class = (Class)type metadata accessor for RootHostingController(0);
  objc_msgSendSuper2(&v11, "viewWillAppear:", a1);
  v3 = objc_msgSend(v1, "preferredNavigationBarTintColor");
  v4 = objc_msgSend(v1, "navigationController");
  if (v4)
  {
    v5 = v4;
    v6 = objc_msgSend(v4, "navigationBar");

    objc_msgSend(v6, "setTintColor:", v3);
  }

  v7 = objc_msgSend(v1, "presentedViewController");
  if (!v7)
  {
    v8 = objc_msgSend(v1, "navigationController");
    if (v8)
    {
      v9 = v8;
      v10 = objc_msgSend(v8, "isNavigationBarHidden");
      if (v10 == objc_msgSend(v1, "bc_navBarVisible"))
        objc_msgSend(v9, "setNavigationBarHidden:animated:", objc_msgSend(v9, "isNavigationBarHidden") ^ 1, a1);

    }
  }
}

void sub_6935C(void *a1, uint64_t a2, Swift::Bool a3)
{
  id v4;

  v4 = a1;
  RootHostingController.viewWillAppear(_:)(a3);

}

Swift::Void __swiftcall RootHostingController.viewWillDisappear(_:)(Swift::Bool a1)
{
  void *v1;
  id v3;
  void *v4;
  void *v5;
  uint64_t v6;
  void *v7;
  id v8;
  void *v9;
  void **v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t, uint64_t);
  void *v13;
  void *v14;
  uint64_t v15;
  objc_super v16;

  v16.receiver = v1;
  v16.super_class = (Class)type metadata accessor for RootHostingController(0);
  objc_msgSendSuper2(&v16, "viewWillDisappear:", a1);
  objc_msgSend(v1, "bc_analyticsVisibilitySubtreeWillDisappear");
  v3 = objc_msgSend(v1, "transitionCoordinator");
  if (v3)
  {
    v4 = v3;
    if (objc_msgSend(v3, "isInteractive"))
    {
      v14 = SwiftUICoverAnimationProvider.coverAnimationSourceInvalidateFrame();
      v15 = 0;
      v10 = _NSConcreteStackBlock;
      v11 = 1107296256;
      v12 = sub_69564;
      v13 = &unk_2E7B60;
      v5 = _Block_copy(&v10);
      v6 = swift_allocObject(&unk_2E7B98, 24, 7);
      swift_unknownObjectWeakInit(v6 + 16);
      v14 = sub_6B8C8;
      v15 = v6;
      v10 = _NSConcreteStackBlock;
      v11 = 1107296256;
      v12 = sub_69564;
      v13 = &unk_2E7BB0;
      v7 = _Block_copy(&v10);
      swift_release(v15);
      objc_msgSend(v4, "animateAlongsideTransition:completion:", v5, v7);
      _Block_release(v7);
      _Block_release(v5);
    }
    swift_unknownObjectRelease(v4);
  }
  v8 = objc_msgSend(v1, "navigationController");
  if (v8)
  {
    v9 = v8;
    if (objc_msgSend(v8, "isNavigationBarHidden"))
    {
      if (objc_msgSend(v1, "bc_navBarVisible"))
        objc_msgSend(v9, "setNavigationBarHidden:animated:", 0, 0);
    }

  }
}

uint64_t sub_69564(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  void (*v4)(uint64_t);
  uint64_t v5;

  v4 = *(void (**)(uint64_t))(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  swift_retain(v3);
  v5 = swift_unknownObjectRetain(a2);
  v4(v5);
  swift_release(v3);
  return swift_unknownObjectRelease(a2);
}

void sub_695AC(void *a1, uint64_t a2)
{
  uint64_t v3;
  void *Strong;
  void *v5;
  id v6;
  id v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  _BYTE v11[24];

  if (objc_msgSend(a1, "isCancelled"))
  {
    v3 = a2 + 16;
    swift_beginAccess(v3, v11, 0, 0);
    Strong = (void *)swift_unknownObjectWeakLoadStrong(v3);
    if (Strong)
    {
      v5 = Strong;
      v6 = objc_msgSend(Strong, "viewIfLoaded");

      if (v6)
      {
        v7 = objc_msgSend(v6, "window");

        if (v7)
        {

          swift_beginAccess(v3, &v10, 0, 0);
          v8 = swift_unknownObjectWeakLoadStrong(v3);
          if (v8)
          {
            v9 = (void *)v8;
            _s11BookStoreUI21RootHostingControllerC33didBecomeVisibleContentScrollViewyyF_0();

          }
        }
      }
    }
  }
}

void _s11BookStoreUI21RootHostingControllerC33didBecomeVisibleContentScrollViewyyF_0()
{
  char *v0;
  id v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;
  id v7;
  id v8;

  if (*(_BYTE *)(*(_QWORD *)&v0[qword_31F830] + OBJC_IVAR___BSUINavigationContext_isInCard) == 1)
  {
    v1 = objc_msgSend(v0, "presentingViewController");
    if (v1)
    {
      v2 = v1;
      v3 = objc_msgSend(v1, "tabBarController");

      if (v3)
      {
        objc_msgSend(v3, "bc_setPreferredTabBarScrollEdgeAppearance:", 0);

      }
    }
    v8 = objc_msgSend(v0, "contentScrollViewForEdge:", 1);
    v4 = objc_msgSend(v0, "presentingViewController");
    if (v4)
    {
      v5 = v4;
      v6 = objc_msgSend(v4, "tabBarController");

      if (v6)
      {
        v7 = objc_msgSend(v6, "selectedViewController");

        if (v7)
        {
          objc_msgSend(v7, "setContentScrollView:forEdge:", v8, 15);

        }
      }
    }

  }
}

void sub_697E4(void *a1, uint64_t a2, Swift::Bool a3)
{
  id v4;

  v4 = a1;
  RootHostingController.viewWillDisappear(_:)(a3);

}

Swift::Void __swiftcall RootHostingController.viewDidAppear(_:)(Swift::Bool a1)
{
  sub_69860(a1, (SEL *)&selRef_viewDidAppear_, (SEL *)&selRef_bc_analyticsVisibilityUpdateSubtree);
}

void sub_69838(void *a1, uint64_t a2, uint64_t a3)
{
  sub_698D0(a1, a2, a3, (const char **)&selRef_viewDidAppear_, (SEL *)&selRef_bc_analyticsVisibilityUpdateSubtree);
}

Swift::Void __swiftcall RootHostingController.viewDidDisappear(_:)(Swift::Bool a1)
{
  sub_69860(a1, (SEL *)&selRef_viewDidDisappear_, (SEL *)&selRef_bc_analyticsVisibilitySubtreeDidDisappear);
}

id sub_69860(char a1, SEL *a2, SEL *a3)
{
  void *v3;
  objc_super v8;

  v8.receiver = v3;
  v8.super_class = (Class)type metadata accessor for RootHostingController(0);
  objc_msgSendSuper2(&v8, *a2, a1 & 1);
  return objc_msgSend(v3, *a3);
}

void sub_698BC(void *a1, uint64_t a2, uint64_t a3)
{
  sub_698D0(a1, a2, a3, (const char **)&selRef_viewDidDisappear_, (SEL *)&selRef_bc_analyticsVisibilitySubtreeDidDisappear);
}

void sub_698D0(void *a1, uint64_t a2, uint64_t a3, const char **a4, SEL *a5)
{
  const char *v8;
  id v9;
  objc_super v10;

  v10.receiver = a1;
  v10.super_class = (Class)type metadata accessor for RootHostingController(0);
  v8 = *a4;
  v9 = v10.receiver;
  objc_msgSendSuper2(&v10, v8, a3);
  objc_msgSend(v9, *a5, v10.receiver, v10.super_class);

}

Swift::Void __swiftcall RootHostingController.bc_analyticsVisibilityDidAppear()()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  objc_class *v5;
  id v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  objc_super v11;

  v1 = type metadata accessor for HostingControllerVisibilityStateManager.HostingControllerLifeCycleEvent(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = (objc_class *)type metadata accessor for RootHostingController(0);
  v11.receiver = v0;
  v11.super_class = v5;
  objc_msgSendSuper2(&v11, "bc_analyticsVisibilityDidAppear");
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, enum case for HostingControllerVisibilityStateManager.HostingControllerLifeCycleEvent.hostViewDidAppear(_:), v1);
  HostingControllerVisibilityStateManager.signal(event:)(v4);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  v6 = objc_msgSend(v0, "view");
  if (v6)
  {
    v7 = v6;
    v8 = objc_msgSend(v6, "window");

    if (v8)
    {
      v9 = type metadata accessor for Window();
      v10 = swift_dynamicCastClass(v8, v9);
      if (v10)
        *(_BYTE *)(v10 + OBJC_IVAR___BSUIWindow_swiftUIContextMenuWorkaroundEnabled) = 1;

    }
  }
  else
  {
    __break(1u);
  }
}

void sub_69A7C(void *a1)
{
  id v1;

  v1 = a1;
  RootHostingController.bc_analyticsVisibilityDidAppear()();

}

Swift::Void __swiftcall RootHostingController.bc_analyticsVisibilityWillDisappear()()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  objc_class *v5;
  id v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  objc_super v11;

  v1 = type metadata accessor for HostingControllerVisibilityStateManager.HostingControllerLifeCycleEvent(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = (objc_class *)type metadata accessor for RootHostingController(0);
  v11.receiver = v0;
  v11.super_class = v5;
  objc_msgSendSuper2(&v11, "bc_analyticsVisibilityWillDisappear");
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, enum case for HostingControllerVisibilityStateManager.HostingControllerLifeCycleEvent.hostViewDidDisappear(_:), v1);
  HostingControllerVisibilityStateManager.signal(event:)(v4);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  v6 = objc_msgSend(v0, "view");
  if (v6)
  {
    v7 = v6;
    v8 = objc_msgSend(v6, "window");

    if (v8)
    {
      v9 = type metadata accessor for Window();
      v10 = swift_dynamicCastClass(v8, v9);
      if (v10)
        *(_BYTE *)(v10 + OBJC_IVAR___BSUIWindow_swiftUIContextMenuWorkaroundEnabled) = 0;

    }
  }
  else
  {
    __break(1u);
  }
}

void sub_69BE8(void *a1)
{
  id v1;

  v1 = a1;
  RootHostingController.bc_analyticsVisibilityWillDisappear()();

}

void RootHostingController.present(_:animated:completion:)(void *a1, char a2, void (*a3)(uint64_t a1, char a2, uint64_t a3, uint64_t a4), _QWORD *a4)
{
  void *v4;
  void *v5;
  void *v9;
  _QWORD *v10;
  objc_class *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  id v22;
  void *v23;
  void (*v24)(uint64_t, char, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  void *v28;
  _QWORD *v29;
  void **v30;
  uint64_t v31;
  void *v32;
  void *v33;
  void (*v34)(uint64_t, char, uint64_t, uint64_t);
  _QWORD *v35;
  objc_super v36;

  v5 = v4;
  if (a3)
  {
    v34 = a3;
    v35 = a4;
    v30 = _NSConcreteStackBlock;
    v31 = 1107296256;
    v32 = sub_69F04;
    v33 = &unk_2E7C50;
    v9 = _Block_copy(&v30);
    v10 = v35;
    swift_retain(a4);
    swift_release(v10);
  }
  else
  {
    v9 = 0;
  }
  v11 = (objc_class *)type metadata accessor for RootHostingController(0);
  v36.receiver = v5;
  v36.super_class = v11;
  objc_msgSendSuper2(&v36, "presentViewController:animated:completion:", a1, a2 & 1, v9);
  _Block_release(v9);
  v12 = objc_opt_self(UIActivityViewController);
  v13 = swift_dynamicCastObjCClass(a1, v12);
  if (v13)
  {
    v14 = (void *)v13;
    v15 = qword_31E620;
    v16 = a1;
    if (v15 != -1)
      swift_once(&qword_31E620, sub_126B64);
    v17 = type metadata accessor for Logger(0);
    v18 = sub_5240C(v17, (uint64_t)qword_3251F0);
    v19 = Logger.logObject.getter(v18);
    v20 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v19, v20))
    {
      v21 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v21 = 0;
      _os_log_impl(&dword_0, v19, v20, "Applying workaround for rdar://108212936. View is becoming non-interactive", v21, 2u);
      swift_slowDealloc(v21, -1, -1);
    }

    v22 = objc_msgSend(v5, "view");
    if (v22)
    {
      v23 = v22;
      objc_msgSend(v22, "setUserInteractionEnabled:", 0);

      v24 = (void (*)(uint64_t, char, uint64_t, uint64_t))objc_msgSend(v14, "completionWithItemsHandler");
      if (v24)
      {
        v25 = swift_allocObject(&unk_2E7C38, 24, 7);
        *(_QWORD *)(v25 + 16) = v24;
        v24 = sub_6B934;
      }
      else
      {
        v25 = 0;
      }
      v26 = swift_allocObject(&unk_2E7B98, 24, 7);
      swift_unknownObjectWeakInit(v26 + 16);
      v27 = (_QWORD *)swift_allocObject(&unk_2E7BE8, 40, 7);
      v27[2] = v26;
      v27[3] = v24;
      v27[4] = v25;
      v34 = sub_6B904;
      v35 = v27;
      v30 = _NSConcreteStackBlock;
      v31 = 1107296256;
      v32 = sub_6A154;
      v33 = &unk_2E7C00;
      v28 = _Block_copy(&v30);
      v29 = v35;
      sub_6C24C((uint64_t)v24, v25);
      swift_release(v29);
      objc_msgSend(v14, "setCompletionWithItemsHandler:", v28);
      _Block_release(v28);
      sub_6C2DC((uint64_t)v24, v25);

    }
    else
    {
      __break(1u);
    }
  }
}

uint64_t sub_69F04(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  v2 = *(_QWORD *)(a1 + 40);
  v3 = swift_retain(v2);
  v1(v3);
  return swift_release(v2);
}

void sub_69F30(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  NSArray v9;
  uint64_t v10;
  id v11;

  if (!a3)
  {
    v9.super.isa = 0;
    if (a4)
      goto LABEL_3;
LABEL_5:
    v10 = 0;
    goto LABEL_6;
  }
  v9.super.isa = Array._bridgeToObjectiveC()().super.isa;
  if (!a4)
    goto LABEL_5;
LABEL_3:
  v10 = _convertErrorToNSError(_:)(a4);
LABEL_6:
  v11 = (id)v10;
  (*(void (**)(uint64_t, uint64_t, _QWORD, Class))(a5 + 16))(a5, a1, a2 & 1, v9.super.isa);

}

void sub_69FD0(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(uint64_t, _QWORD, uint64_t, uint64_t))
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  void *Strong;
  void *v18;
  id v19;
  _BYTE v20[24];

  v11 = a5 + 16;
  if (qword_31E620 != -1)
    swift_once(&qword_31E620, sub_126B64);
  v12 = type metadata accessor for Logger(0);
  v13 = sub_5240C(v12, (uint64_t)qword_3251F0);
  v14 = Logger.logObject.getter(v13);
  v15 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v16 = 0;
    _os_log_impl(&dword_0, v14, v15, "Disabling workaround for rdar://108212936. View is becoming interactive", v16, 2u);
    swift_slowDealloc(v16, -1, -1);
  }

  swift_beginAccess(v11, v20, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v11);
  if (Strong)
  {
    v18 = Strong;
    v19 = objc_msgSend(Strong, "view");

    if (!v19)
    {
      __break(1u);
      return;
    }
    objc_msgSend(v19, "setUserInteractionEnabled:", 1);

  }
  if (a6)
    a6(a1, a2 & 1, a3, a4);
}

uint64_t sub_6A154(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v8;
  void (*v9)(void *, uint64_t, uint64_t, void *);
  uint64_t v10;
  id v11;
  id v12;

  v9 = *(void (**)(void *, uint64_t, uint64_t, void *))(a1 + 32);
  v8 = *(_QWORD *)(a1 + 40);
  if (a4)
    v10 = static Array._unconditionallyBridgeFromObjectiveC(_:)(a4, (char *)&type metadata for Any + 8);
  else
    v10 = 0;
  swift_retain(v8);
  v11 = a2;
  v12 = a5;
  v9(a2, a3, v10, a5);
  swift_release(v8);

  return swift_bridgeObjectRelease(v10);
}

void sub_6A1F8(void *a1, int a2, void *a3, char a4, void *aBlock)
{
  void (*v8)(uint64_t, char, uint64_t, uint64_t);
  _QWORD *v9;
  id v10;
  id v11;

  v8 = (void (*)(uint64_t, char, uint64_t, uint64_t))_Block_copy(aBlock);
  if (v8)
  {
    v9 = (_QWORD *)swift_allocObject(&unk_2E7D58, 24, 7);
    v9[2] = v8;
    v8 = (void (*)(uint64_t, char, uint64_t, uint64_t))sub_6C0DC;
  }
  else
  {
    v9 = 0;
  }
  v10 = a3;
  v11 = a1;
  RootHostingController.present(_:animated:completion:)(v10, a4, v8, v9);
  sub_6C2DC((uint64_t)v8, (uint64_t)v9);

}

uint64_t sub_6A2B0(void *a1)
{
  id v1;
  uint64_t v2;

  v1 = a1;
  v2 = RootHostingController.supportedInterfaceOrientations.getter();

  return v2;
}

uint64_t RootHostingController.supportedInterfaceOrientations.getter()
{
  void *v0;
  id v1;
  void *v2;
  id v3;
  id v4;
  char *v5;
  __objc2_prot *v7;

  v1 = objc_msgSend(v0, "presentedViewController");
  if (v1)
  {
    v2 = v1;
    v7 = &OBJC_PROTOCOL___BCOrientationControlling;
    if (swift_dynamicCastObjCProtocolConditional(v1, 1, &v7))
    {
      v3 = objc_msgSend(v2, "supportedInterfaceOrientations");

      return (uint64_t)v3;
    }

  }
  v4 = objc_msgSend((id)objc_opt_self(UIDevice), "currentDevice");
  v5 = (char *)objc_msgSend(v4, "userInterfaceIdiom");

  if (v5 == (_BYTE *)&dword_0 + 1)
    return 30;
  else
    return 2;
}

Swift::Void __swiftcall RootHostingController.setContentScrollView(_:for:)(UIScrollView_optional _, NSDirectionalRectEdge a2)
{
  char *v2;
  char *v3;
  uint64_t v4;
  Class isa;
  char *v6;
  uint64_t Strong;
  uint64_t v8;
  uint64_t v9;
  uint64_t ObjectType;
  id v11;
  id v12;
  char v13[24];
  objc_super v14;

  v3 = v2;
  v4 = *(_QWORD *)&_.is_nil;
  isa = _.value.super.super.super.isa;
  v14.receiver = v3;
  v14.super_class = (Class)type metadata accessor for RootHostingController(0);
  objc_msgSendSuper2(&v14, "setContentScrollView:forEdge:", isa, v4);
  _s11BookStoreUI21RootHostingControllerC33didBecomeVisibleContentScrollViewyyF_0();
  v6 = &v3[qword_31F820];
  swift_beginAccess(&v3[qword_31F820], v13, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v6);
  if (Strong)
  {
    v8 = Strong;
    v9 = *((_QWORD *)v6 + 1);
    ObjectType = swift_getObjectType(Strong);
    (*(void (**)(char *, uint64_t, uint64_t))(v9 + 8))(v3, ObjectType, v9);
    swift_unknownObjectRelease(v8);
  }
  v11 = objc_msgSend(v3, "cardContentDelegate");
  if (v11)
  {
    v12 = v11;
    objc_msgSend(v11, "scrollViewDidChange");
    swift_unknownObjectRelease(v12);
  }
}

void sub_6A490(void *a1, uint64_t a2, void *a3, Swift::Bool a4)
{
  id v7;
  id v8;
  UIScrollView_optional v9;

  v7 = a3;
  v8 = a1;
  v9.value.super.super.super.isa = (Class)a3;
  v9.is_nil = a4;
  RootHostingController.setContentScrollView(_:for:)(v9, (NSDirectionalRectEdge)v8);

}

void sub_6A4F4(void *a1)
{
  id v1;

  v1 = a1;
  _s11BookStoreUI21RootHostingControllerC33didBecomeVisibleContentScrollViewyyF_0();

}

id sub_6A52C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  void *v4;
  void *v5;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  Swift::String v21;
  Swift::String v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  int v26;
  id result;
  void *v28;
  double v29;
  double v30;
  double v31;
  double v32;
  id v33;
  unsigned int v34;
  uint64_t v35;
  uint64_t (*v36)(char *, uint64_t);
  uint64_t v37;
  id v38;
  char v39;
  double v40;
  double v41;
  double v42;
  double v43;
  CGFloat Width;
  double v45;
  CGFloat Height;
  uint64_t v47;
  double v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  char v57;
  objc_class *v58;
  _BYTE *v59;
  double *v60;
  _QWORD *v61;
  char *v62;
  uint64_t v63;
  objc_super v64;
  _QWORD v65[2];
  _BYTE v66[40];
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  CGRect v70;
  CGRect v71;

  v5 = v4;
  v10 = sub_5C154(&qword_31FAD0);
  v11 = __chkstk_darwin(v10);
  v13 = (char *)&v63 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for CoverGeometryReference(0, v11);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&v63 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v20 = (char *)&v63 - v19;
  if (!a2)
    return 0;
  if (a4)
  {
    v67 = a1;
    v68 = a2;
    swift_bridgeObjectRetain(a2);
    v21._countAndFlagsBits = 45;
    v21._object = (void *)0xE100000000000000;
    String.append(_:)(v21);
    v22._countAndFlagsBits = a3;
    v22._object = a4;
    String.append(_:)(v22);
    v23 = v67;
    a2 = v68;
  }
  else
  {
    swift_bridgeObjectRetain(a2);
    v23 = a1;
  }
  v24 = v5;
  v65[0] = v23;
  v65[1] = a2;
  swift_bridgeObjectRetain(a2);
  AnyHashable.init<A>(_:)(v65, &type metadata for String, &protocol witness table for String);
  dispatch thunk of GeometryCache.reference(forKey:)(&v67, v66);
  sub_5DCEC((uint64_t)v66);
  if (!v69)
  {
    sub_5E09C((uint64_t)&v67, &qword_31FAD8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56))(v13, 1, 1, v14);
    goto LABEL_11;
  }
  v25 = sub_5C154((uint64_t *)&unk_31FAE0);
  v26 = swift_dynamicCast(v13, &v67, v25, v14, 6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v13, v26 ^ 1u, 1, v14);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
LABEL_11:
    swift_bridgeObjectRelease(a2);
    sub_5E09C((uint64_t)v13, &qword_31FAD0);
    return 0;
  }
  v63 = v23;
  (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v20, v13, v14);
  result = objc_msgSend(v5, "view");
  if (!result)
  {
    __break(1u);
    goto LABEL_20;
  }
  v28 = result;
  objc_msgSend(result, "safeAreaInsets");
  v30 = v29;
  v32 = v31;

  v33 = objc_msgSend(v5, "navigationItem");
  v34 = objc_msgSend(v33, "_isManualScrollEdgeAppearanceEnabled");

  v35 = (*(uint64_t (**)(char *, char *, uint64_t))(v15 + 16))(v17, v20, v14);
  if (v34)
  {
    v36 = *(uint64_t (**)(char *, uint64_t))(v15 + 8);
    v37 = v36(v17, v14);
LABEL_15:
    v40 = CoverGeometryReference.frame.getter(v37);
    v42 = v41;
    Width = v43;
    Height = v45;
    goto LABEL_17;
  }
  v39 = CoverGeometryReference.isInList.getter(v35);
  v36 = *(uint64_t (**)(char *, uint64_t))(v15 + 8);
  v37 = v36(v17, v14);
  if ((v39 & 1) != 0)
    goto LABEL_15;
  v40 = v32 + CoverGeometryReference.frame.getter(v37);
  CoverGeometryReference.frame.getter(v47);
  v42 = v30 + v48;
  v70.origin.x = CoverGeometryReference.frame.getter(v49);
  Width = CGRectGetWidth(v70);
  v71.origin.x = CoverGeometryReference.frame.getter(v50);
  Height = CGRectGetHeight(v71);
LABEL_17:
  v51 = CoverGeometryReference.image.getter();
  result = objc_msgSend(v24, "view");
  if (result)
  {
    v52 = result;
    v53 = CoverGeometryReference.$isVisible.getter();
    v55 = v54;
    v57 = v56;
    v58 = (objc_class *)type metadata accessor for SwiftUICoverAnimationProvider();
    v59 = objc_allocWithZone(v58);
    *(_QWORD *)&v59[OBJC_IVAR____TtC11BookStoreUI29SwiftUICoverAnimationProvider_cardStackTransitioningCoverSourceExtraXOffset] = 0;
    v60 = (double *)&v59[OBJC_IVAR____TtC11BookStoreUI29SwiftUICoverAnimationProvider_sourceFrame];
    *v60 = v40;
    v60[1] = v42;
    v60[2] = Width;
    v60[3] = Height;
    v61 = &v59[OBJC_IVAR____TtC11BookStoreUI29SwiftUICoverAnimationProvider_imageViewIdentifier];
    *v61 = v63;
    v61[1] = a2;
    *(_QWORD *)&v59[OBJC_IVAR____TtC11BookStoreUI29SwiftUICoverAnimationProvider_sourceReferenceView] = v52;
    *(_QWORD *)&v59[OBJC_IVAR____TtC11BookStoreUI29SwiftUICoverAnimationProvider_coverSourceImage] = v51;
    v59[OBJC_IVAR____TtC11BookStoreUI29SwiftUICoverAnimationProvider_isInNonHorizontalLayout] = 0;
    v62 = &v59[OBJC_IVAR____TtC11BookStoreUI29SwiftUICoverAnimationProvider__isVisible];
    *(_QWORD *)v62 = v53;
    *((_QWORD *)v62 + 1) = v55;
    v62[16] = v57 & 1;
    v64.receiver = v59;
    v64.super_class = v58;
    v38 = objc_msgSendSuper2(&v64, "init");
    v36(v20, v14);
    return v38;
  }
LABEL_20:
  __break(1u);
  return result;
}

id RootHostingController.coverSource(forRepresentedObject:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char v6;
  id v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v13;
  uint64_t v14;
  void *v15;
  uint64_t v17;
  void *v18;
  _QWORD v19[5];
  __int128 v20;
  __int128 v21;

  v2 = objc_opt_self(NSDictionary);
  v3 = swift_dynamicCastObjCClass(a1, v2);
  if (!v3)
    return 0;
  v19[0] = 0;
  static Dictionary._conditionallyBridgeFromObjectiveC(_:result:)(v3, v19, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);
  v4 = v19[0];
  if (!v19[0])
    return 0;
  *(_QWORD *)&v20 = 25705;
  *((_QWORD *)&v20 + 1) = 0xE200000000000000;
  AnyHashable.init<A>(_:)(&v20, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(v4 + 16) && (v5 = sub_58318((uint64_t)v19), (v6 & 1) != 0))
  {
    sub_5E1EC(*(_QWORD *)(v4 + 56) + 32 * v5, (uint64_t)&v20);
  }
  else
  {
    v20 = 0u;
    v21 = 0u;
  }
  sub_5DCEC((uint64_t)v19);
  if (*((_QWORD *)&v21 + 1))
  {
    v8 = swift_dynamicCast(&v17, &v20, (char *)&type metadata for Any + 8, &type metadata for String, 6);
    if (v8)
      v9 = v17;
    else
      v9 = 0;
    if (v8)
      v10 = (uint64_t)v18;
    else
      v10 = 0;
  }
  else
  {
    sub_5E09C((uint64_t)&v20, &qword_31F8B0);
    v9 = 0;
    v10 = 0;
  }
  *(_QWORD *)&v20 = 0x65636E6174736E69;
  *((_QWORD *)&v20 + 1) = 0xEA00000000006449;
  AnyHashable.init<A>(_:)(&v20, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(v4 + 16) && (v11 = sub_58318((uint64_t)v19), (v12 & 1) != 0))
  {
    sub_5E1EC(*(_QWORD *)(v4 + 56) + 32 * v11, (uint64_t)&v20);
  }
  else
  {
    v20 = 0u;
    v21 = 0u;
  }
  swift_bridgeObjectRelease(v4);
  sub_5DCEC((uint64_t)v19);
  if (*((_QWORD *)&v21 + 1))
  {
    v13 = swift_dynamicCast(&v17, &v20, (char *)&type metadata for Any + 8, &type metadata for String, 6);
    if (v13)
      v14 = v17;
    else
      v14 = 0;
    if (v13)
      v15 = v18;
    else
      v15 = 0;
  }
  else
  {
    sub_5E09C((uint64_t)&v20, &qword_31F8B0);
    v14 = 0;
    v15 = 0;
  }
  v7 = sub_6A52C(v9, v10, v14, v15);
  swift_bridgeObjectRelease(v15);
  swift_bridgeObjectRelease(v10);
  return v7;
}

id sub_6AB94(void *a1, uint64_t a2, void *a3)
{
  id v4;
  id v5;
  id v6;

  v4 = a3;
  v5 = a1;
  v6 = RootHostingController.coverSource(forRepresentedObject:)((uint64_t)v4);

  return v6;
}

id sub_6ABE4(void *a1)
{
  id v1;
  id result;
  void *v3;

  v1 = a1;
  result = objc_msgSend(v1, "view");
  if (result)
  {
    v3 = result;

    return v3;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id RootHostingController.containerViewForHostingCoversDuringAnimation.getter()
{
  void *v0;
  id result;

  result = objc_msgSend(v0, "view");
  if (!result)
    __break(1u);
  return result;
}

id sub_6AC60(void *a1, uint64_t a2, void *a3)
{
  id v5;
  id v6;

  swift_unknownObjectRetain(a3);
  v5 = a1;
  v6 = _s11BookStoreUI21RootHostingControllerC10visibility2of13ignoringYAxisSo45BCCardStackTransitioningCoverSourceVisibilityVSo0klmnO0_p_SbtF_0(a3);
  swift_unknownObjectRelease(a3);

  return v6;
}

uint64_t sub_6ACE4()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  Swift::String v4;
  Swift::String v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;

  v1 = *(_QWORD *)(v0
                 + OBJC_IVAR____TtCC11BookStoreUI21RootHostingControllerP33_33EEA6210FEC2640A5148301F86EE4A328FallbackCoverAnimatingSource_adamID
                 + 8);
  if (!v1)
    return 0;
  v2 = *(void **)(v0
                + OBJC_IVAR____TtCC11BookStoreUI21RootHostingControllerP33_33EEA6210FEC2640A5148301F86EE4A328FallbackCoverAnimatingSource_instanceID
                + 8);
  if (!v2)
    return 0;
  v3 = *(_QWORD *)(v0
                 + OBJC_IVAR____TtCC11BookStoreUI21RootHostingControllerP33_33EEA6210FEC2640A5148301F86EE4A328FallbackCoverAnimatingSource_instanceID);
  v9 = *(_QWORD *)(v0
                 + OBJC_IVAR____TtCC11BookStoreUI21RootHostingControllerP33_33EEA6210FEC2640A5148301F86EE4A328FallbackCoverAnimatingSource_adamID);
  v10 = v1;
  swift_bridgeObjectRetain(v1);
  swift_bridgeObjectRetain(v2);
  v4._countAndFlagsBits = 45;
  v4._object = (void *)0xE100000000000000;
  String.append(_:)(v4);
  v5._countAndFlagsBits = v3;
  v5._object = v2;
  String.append(_:)(v5);
  swift_bridgeObjectRelease(v2);
  v6 = v10;
  v7 = UIView.findPresentationSourceView<A>(id:)(&v9, &type metadata for String, &protocol witness table for String);
  swift_bridgeObjectRelease(v6);
  return v7;
}

id sub_6AE30()
{
  return sub_6B548((uint64_t (*)(_QWORD))type metadata accessor for RootHostingController.FallbackCoverAnimatingSource);
}

id RootHostingController.coverAnimationHostSource(for:uid:refId:refInstance:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7)
{
  return sub_6BB58(a1, a4, a5, a6, a7);
}

id sub_6AEA0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  id v22;
  id v23;
  uint64_t v25;

  v11 = sub_5C154(&qword_31FA60);
  v12 = __chkstk_darwin(v11);
  v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a3)
  {
    static UUID._unconditionallyBridgeFromObjectiveC(_:)(a3, v12);
    v15 = type metadata accessor for UUID(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v14, 0, 1, v15);
  }
  else
  {
    v16 = type metadata accessor for UUID(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v14, 1, 1, v16);
  }
  if (a4)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(a4);
    a4 = v17;
  }
  if (!a5)
  {
    v18 = 0;
    if (a6)
      goto LABEL_8;
LABEL_10:
    v20 = 0;
    goto LABEL_11;
  }
  v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(a5);
  a5 = v19;
  if (!a6)
    goto LABEL_10;
LABEL_8:
  v20 = static String._unconditionallyBridgeFromObjectiveC(_:)(a6);
  a6 = v21;
LABEL_11:
  v22 = a1;
  v23 = sub_6BB58((uint64_t)v14, v18, a5, v20, a6);

  swift_bridgeObjectRelease(a4);
  swift_bridgeObjectRelease(a6);
  swift_bridgeObjectRelease(a5);
  sub_5E09C((uint64_t)v14, &qword_31FA60);
  return v23;
}

id RootHostingController.coverAnimationHostSource(forItem:)()
{
  void *v0;
  id result;
  void *v2;
  objc_class *v3;
  char *v4;
  char *v5;
  char *v6;
  uint64_t v7;
  char *v8;
  id v9;
  uint64_t v10;
  id v11;
  objc_super v12;

  result = objc_msgSend(v0, "view");
  if (result)
  {
    v2 = result;
    v3 = (objc_class *)type metadata accessor for RootHostingController.FallbackCoverAnimatingSource();
    v4 = (char *)objc_allocWithZone(v3);
    v5 = &v4[OBJC_IVAR____TtCC11BookStoreUI21RootHostingControllerP33_33EEA6210FEC2640A5148301F86EE4A328FallbackCoverAnimatingSource_adamID];
    *(_QWORD *)v5 = 0;
    *((_QWORD *)v5 + 1) = 0;
    v6 = &v4[OBJC_IVAR____TtCC11BookStoreUI21RootHostingControllerP33_33EEA6210FEC2640A5148301F86EE4A328FallbackCoverAnimatingSource_instanceID];
    *(_QWORD *)v6 = 0;
    *((_QWORD *)v6 + 1) = 0;
    *(_QWORD *)&v4[OBJC_IVAR____TtCC11BookStoreUI21RootHostingControllerP33_33EEA6210FEC2640A5148301F86EE4A328FallbackCoverAnimatingSource_referenceView] = v2;
    v7 = *((_QWORD *)v5 + 1);
    *(_QWORD *)v5 = 0;
    *((_QWORD *)v5 + 1) = 0;
    v8 = v4;
    v9 = v2;
    swift_bridgeObjectRelease(v7);
    v10 = *((_QWORD *)v6 + 1);
    *(_QWORD *)v6 = 0;
    *((_QWORD *)v6 + 1) = 0;

    swift_bridgeObjectRelease(v10);
    v12.receiver = v8;
    v12.super_class = v3;
    v11 = objc_msgSendSuper2(&v12, "init");

    return v11;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_6B0F4(void *a1, uint64_t a2, uint64_t a3)
{
  id v5;
  id v6;
  _QWORD v8[4];

  swift_unknownObjectRetain(a3);
  v5 = a1;
  _bridgeAnyObjectToAny(_:)(a3);
  swift_unknownObjectRelease(a3);
  v6 = RootHostingController.coverAnimationHostSource(forItem:)();

  _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(v8);
  return v6;
}

uint64_t static Shelf.ValidationError.== infix(_:_:)()
{
  return 1;
}

uint64_t sub_6B160()
{
  return 1;
}

uint64_t sub_6B16C()
{
  return 1;
}

id sub_6B174(void *a1)
{
  return objc_msgSend(a1, "contentScrollViewForEdge:", 1);
}

id RootHostingController.scrollView.getter()
{
  void *v0;

  return objc_msgSend(v0, "contentScrollViewForEdge:", 1);
}

id sub_6B1C4(uint64_t a1)
{
  return (id)swift_unknownObjectWeakLoadStrong(a1 + qword_31F8D0);
}

uint64_t RootHostingController.cardContentDelegate.getter()
{
  uint64_t v0;

  return swift_unknownObjectWeakLoadStrong(v0 + qword_31F8D0);
}

uint64_t sub_6B1F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_unknownObjectWeakAssign(a1 + qword_31F8D0, a3);
}

uint64_t RootHostingController.cardContentDelegate.setter(uint64_t a1)
{
  uint64_t v1;

  swift_unknownObjectWeakAssign(v1 + qword_31F8D0, a1);
  return swift_unknownObjectRelease(a1);
}

uint64_t sub_6B23C()
{
  return 1;
}

uint64_t BSUIFeedViewController.alwaysShowRightButtons.getter()
{
  return 0;
}

uint64_t sub_6B250()
{
  return 0;
}

Swift::Void __swiftcall RootHostingController.scrollToTop(animated:)(Swift::Bool animated)
{
  void *v1;
  id v3;
  double v4;
  id v5;

  v3 = objc_msgSend(v1, "contentScrollViewForEdge:", 1);
  if (v3)
  {
    v5 = v3;
    objc_msgSend(v3, "adjustedContentInset");
    objc_msgSend(v5, "setContentOffset:animated:", animated, 0.0, -v4);

  }
}

void sub_6B2DC(void *a1, uint64_t a2, uint64_t a3)
{
  id v4;
  void *v5;
  double v6;
  void *v7;
  id v8;

  v8 = a1;
  v4 = objc_msgSend(v8, "contentScrollViewForEdge:", 1);
  if (v4)
  {
    v5 = v4;
    objc_msgSend(v4, "adjustedContentInset");
    objc_msgSend(v5, "setContentOffset:animated:", a3, 0.0, -v6);

    v7 = v5;
  }
  else
  {
    v7 = v8;
  }

}

id sub_6B364(void *a1)
{
  id v1;
  id v2;

  v1 = a1;
  v2 = RootHostingController.preferredNavigationBarTintColor.getter();

  return v2;
}

id RootHostingController.preferredNavigationBarTintColor.getter()
{
  void *v0;
  id v1;
  unsigned int v2;
  id v3;
  double v4;
  double v5;
  char **v6;

  v1 = objc_msgSend(v0, "navigationItem");
  v2 = objc_msgSend(v1, "_isManualScrollEdgeAppearanceEnabled");

  if (v2
    && (v3 = objc_msgSend(v0, "navigationItem"),
        objc_msgSend(v3, "_manualScrollEdgeAppearanceProgress"),
        v5 = v4,
        v3,
        v5 < 1.0))
  {
    v6 = &selRef_bc_booksWhite;
  }
  else
  {
    v6 = &selRef_bc_booksKeyColor;
  }
  return objc_msgSend((id)objc_opt_self(UIColor), *v6);
}

id sub_6B454(uint64_t a1)
{
  return *(id *)(a1 + qword_31F8D8);
}

id RootHostingController.navigationItem.getter()
{
  uint64_t v0;

  return *(id *)(v0 + qword_31F8D8);
}

id sub_6B53C()
{
  return sub_6B548((uint64_t (*)(_QWORD))type metadata accessor for RootHostingControllerNavigationItem);
}

id sub_6B548(uint64_t (*a1)(_QWORD))
{
  void *v1;
  objc_super v3;

  v3.receiver = v1;
  v3.super_class = (Class)a1(0);
  return objc_msgSendSuper2(&v3, "dealloc");
}

uint64_t sub_6B580()
{
  return 1;
}

double sub_6B588@<D0>(uint64_t *a1@<X0>, double *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  double result;
  _QWORD v7[3];

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_257DC0);
  v7[0] = v3;
  v5 = sub_6C20C(&qword_31F838, (uint64_t)&protocol conformance descriptor for HostProxy);
  ObservationRegistrar.access<A, B>(_:keyPath:)(v7, KeyPath, v5);
  swift_release(KeyPath);
  swift_beginAccess(v3 + 32, v7, 0, 0);
  result = *(double *)(v3 + 32);
  *a2 = result;
  return result;
}

uint64_t sub_6B620(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  _QWORD v7[5];
  uint64_t v8;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_257DC0);
  v7[2] = v3;
  v7[3] = v2;
  v8 = v3;
  v5 = sub_6C20C(&qword_31F838, (uint64_t)&protocol conformance descriptor for HostProxy);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v8, KeyPath, sub_6C31C, v7, (char *)&type metadata for () + 8, v5);
  return swift_release(KeyPath);
}

double sub_6B6C8@<D0>(uint64_t *a1@<X0>, double *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  double result;
  _QWORD v7[3];

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_257DE8);
  v7[0] = v3;
  v5 = sub_6C20C(&qword_31F838, (uint64_t)&protocol conformance descriptor for HostProxy);
  ObservationRegistrar.access<A, B>(_:keyPath:)(v7, KeyPath, v5);
  swift_release(KeyPath);
  swift_beginAccess(v3 + 40, v7, 0, 0);
  result = *(double *)(v3 + 40);
  *a2 = result;
  return result;
}

uint64_t sub_6B760(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  _QWORD v7[5];
  uint64_t v8;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_257DE8);
  v7[2] = v3;
  v7[3] = v2;
  v8 = v3;
  v5 = sub_6C20C(&qword_31F838, (uint64_t)&protocol conformance descriptor for HostProxy);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v8, KeyPath, sub_6C308, v7, (char *)&type metadata for () + 8, v5);
  return swift_release(KeyPath);
}

uint64_t sub_6B810()
{
  uint64_t v0;

  return sub_A2404(*(_QWORD *)(v0 + 16), *(double *)(v0 + 24));
}

uint64_t sub_6B834()
{
  uint64_t v0;

  return sub_A2724(*(_QWORD *)(v0 + 16), *(double *)(v0 + 24));
}

unint64_t sub_6B850()
{
  unint64_t result;
  uint64_t v1;

  result = qword_31F840;
  if (!qword_31F840)
  {
    v1 = objc_opt_self(UIBarButtonItemGroup);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_31F840);
  }
  return result;
}

uint64_t sub_6B88C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_6B89C(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_6B8A4()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_6B8C8(void *a1)
{
  uint64_t v1;

  sub_695AC(a1, v1);
}

uint64_t sub_6B8D0()
{
  _QWORD *v0;

  swift_release(v0[2]);
  if (v0[3])
    swift_release(v0[4]);
  return swift_deallocObject(v0, 40, 7);
}

void sub_6B904(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  sub_69FD0(a1, a2, a3, a4, *(_QWORD *)(v4 + 16), *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v4 + 24));
}

uint64_t sub_6B910()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

void sub_6B934(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  sub_69F30(a1, a2, a3, a4, *(_QWORD *)(v4 + 16));
}

void sub_6B93C()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;

  v1 = &v0[qword_31F820];
  *((_QWORD *)v1 + 1) = 0;
  swift_unknownObjectWeakInit(v1, 0);
  swift_unknownObjectWeakInit(&v0[qword_31F8D0], 0);
  v2 = qword_31F8D8;
  v3 = type metadata accessor for RootHostingControllerNavigationItem();
  *(_QWORD *)&v0[v2] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v3)), "init");
  v4 = &v0[qword_31F8F0];
  *(_QWORD *)v4 = 0;
  v4[8] = 1;
  *(_QWORD *)&v0[qword_31F8F8] = &_swiftEmptySetSingleton;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x800000000026EFD0, "BookStoreUI/RootHostingController.swift", 39, 2, 201, 0);
  __break(1u);
}

id _s11BookStoreUI21RootHostingControllerC10visibility2of13ignoringYAxisSo45BCCardStackTransitioningCoverSourceVisibilityVSo0klmnO0_p_SbtF_0(void *a1)
{
  void *v1;
  double v2;
  CGFloat v3;
  double v4;
  CGFloat v5;
  double v6;
  CGFloat v7;
  double v8;
  CGFloat v9;
  id result;
  void *v11;
  double v12;
  CGFloat v13;
  double v14;
  CGFloat v15;
  double v16;
  CGFloat v17;
  double v18;
  CGFloat v19;
  _BOOL4 v20;
  void *v21;
  double v22;
  CGFloat v23;
  double v24;
  CGFloat v25;
  double v26;
  CGFloat v27;
  double v28;
  CGFloat v29;
  _BOOL4 v30;
  uint64_t v31;
  CGRect v32;
  CGRect v33;
  CGRect v34;
  CGRect v35;

  objc_msgSend(a1, "cardStackTransitioningCoverSourceFrame");
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v9 = v8;
  result = objc_msgSend(v1, "view");
  if (!result)
  {
    __break(1u);
    goto LABEL_9;
  }
  v11 = result;
  objc_msgSend(result, "bounds");
  v13 = v12;
  v15 = v14;
  v17 = v16;
  v19 = v18;

  v32.origin.x = v13;
  v32.origin.y = v15;
  v32.size.width = v17;
  v32.size.height = v19;
  v34.origin.x = v3;
  v34.origin.y = v5;
  v34.size.width = v7;
  v34.size.height = v9;
  v20 = CGRectContainsRect(v32, v34);
  result = objc_msgSend(v1, "view");
  if (!result)
  {
LABEL_9:
    __break(1u);
    return result;
  }
  v21 = result;
  objc_msgSend(result, "bounds");
  v23 = v22;
  v25 = v24;
  v27 = v26;
  v29 = v28;

  v33.origin.x = v23;
  v33.origin.y = v25;
  v33.size.width = v27;
  v33.size.height = v29;
  v35.origin.x = v3;
  v35.origin.y = v5;
  v35.size.width = v7;
  v35.size.height = v9;
  v30 = CGRectIntersectsRect(v33, v35);
  v31 = 1;
  if (!v30)
    v31 = 2;
  if (v20)
    return 0;
  else
    return (id)v31;
}

id sub_6BB58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  void *v5;
  id v10;
  id v11;
  id result;
  void *v13;
  objc_class *v14;
  char *v15;
  uint64_t *v16;
  uint64_t *v17;
  uint64_t v18;
  char *v19;
  id v20;
  uint64_t v21;
  objc_super v22;

  v10 = sub_6A52C(a2, a3, a4, a5);
  if (v10)
    return v10;
  result = objc_msgSend(v5, "view");
  if (result)
  {
    v13 = result;
    v14 = (objc_class *)type metadata accessor for RootHostingController.FallbackCoverAnimatingSource();
    v15 = (char *)objc_allocWithZone(v14);
    v16 = (uint64_t *)&v15[OBJC_IVAR____TtCC11BookStoreUI21RootHostingControllerP33_33EEA6210FEC2640A5148301F86EE4A328FallbackCoverAnimatingSource_adamID];
    *v16 = 0;
    v16[1] = 0;
    v17 = (uint64_t *)&v15[OBJC_IVAR____TtCC11BookStoreUI21RootHostingControllerP33_33EEA6210FEC2640A5148301F86EE4A328FallbackCoverAnimatingSource_instanceID];
    *v17 = 0;
    v17[1] = 0;
    *(_QWORD *)&v15[OBJC_IVAR____TtCC11BookStoreUI21RootHostingControllerP33_33EEA6210FEC2640A5148301F86EE4A328FallbackCoverAnimatingSource_referenceView] = v13;
    v18 = v16[1];
    *v16 = a2;
    v16[1] = a3;
    swift_bridgeObjectRetain(a3);
    swift_bridgeObjectRetain(a5);
    v19 = v15;
    v20 = v13;
    swift_bridgeObjectRelease(v18);
    v21 = v17[1];
    *v17 = a4;
    v17[1] = (uint64_t)a5;

    swift_bridgeObjectRelease(v21);
    v22.receiver = v19;
    v22.super_class = v14;
    v11 = objc_msgSendSuper2(&v22, "init");

    return v11;
  }
  __break(1u);
  return result;
}

uint64_t type metadata accessor for RootHostingController.FallbackCoverAnimatingSource()
{
  return objc_opt_self(_TtCC11BookStoreUI21RootHostingControllerP33_33EEA6210FEC2640A5148301F86EE4A328FallbackCoverAnimatingSource);
}

uint64_t sub_6BCB0@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  char v6[24];

  v3 = *a1 + qword_31F820;
  swift_beginAccess(v3, v6, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(v3);
  v5 = *(_QWORD *)(v3 + 8);
  *a2 = result;
  a2[1] = v5;
  return result;
}

uint64_t sub_6BD08(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE v6[24];

  v2 = *a1;
  v3 = a1[1];
  v4 = *a2 + qword_31F820;
  swift_beginAccess(v4, v6, 1, 0);
  *(_QWORD *)(v4 + 8) = v3;
  return swift_unknownObjectWeakAssign(v4, v2);
}

const char *sub_6BD68()
{
  return "cardContentDelegate";
}

id sub_6BD74@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, "cardContentDelegate");
  *a2 = result;
  return result;
}

id sub_6BDAC(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, "setCardContentDelegate:", *a1);
}

uint64_t dispatch thunk of ShelfPaginationIntentProviding.paginationIntent(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of RootHostingControllerDelegate.navigationBarStyleDidUpdate(_:for:)(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(uint64_t, _QWORD))(a5 + 16))(a1, a2 & 1);
}

uint64_t destroy for RootHostingControllerConfiguration(uint64_t a1)
{

  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + 24));
}

uint64_t initializeWithCopy for RootHostingControllerConfiguration(uint64_t a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  id v5;

  v3 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  v5 = v3;
  swift_bridgeObjectRetain(v4);
  return a1;
}

uint64_t assignWithCopy for RootHostingControllerConfiguration(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_BYTE *)(a1 + 9) = *(_BYTE *)(a2 + 9);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 24);
  v8 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v7;
  swift_bridgeObjectRetain(v7);
  swift_bridgeObjectRelease(v8);
  return a1;
}

uint64_t assignWithTake for RootHostingControllerConfiguration(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_BYTE *)(a1 + 9) = *(_BYTE *)(a2 + 9);
  v5 = *(_QWORD *)(a2 + 24);
  v6 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease(v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for RootHostingControllerConfiguration(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 32))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for RootHostingControllerConfiguration(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for RootHostingControllerConfiguration()
{
  return &type metadata for RootHostingControllerConfiguration;
}

uint64_t sub_6BF9C(uint64_t a1)
{
  _QWORD v2[10];

  v2[0] = &unk_257E88;
  v2[1] = (char *)&value witness table for Builtin.NativeObject + 64;
  v2[2] = &unk_257EA0;
  v2[3] = (char *)&value witness table for Builtin.NativeObject + 64;
  v2[4] = (char *)&value witness table for Builtin.NativeObject + 64;
  v2[5] = (char *)&value witness table for Builtin.NativeObject + 64;
  v2[6] = &unk_257EB8;
  v2[7] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v2[8] = &unk_257ED0;
  v2[9] = (char *)&value witness table for Builtin.BridgeObject + 64;
  return swift_initClassMetadata2(a1, 0, 10, v2, a1 + class metadata base offset for RootHostingController);
}

uint64_t method lookup function for RootHostingController(uint64_t a1, uint64_t a2)
{
  return swift_lookUpClassMethod(a1, a2, &nominal type descriptor for RootHostingController);
}

uint64_t dispatch thunk of RootHostingController.delegate.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(class metadata base offset for RootHostingController + (swift_isaMask & *v0) + 80))();
}

uint64_t dispatch thunk of RootHostingController.delegate.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(class metadata base offset for RootHostingController + (swift_isaMask & *v0) + 88))();
}

uint64_t dispatch thunk of RootHostingController.delegate.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(class metadata base offset for RootHostingController + (swift_isaMask & *v0) + 96))();
}

uint64_t sub_6C0B4()
{
  return type metadata accessor for RootHostingController(0);
}

uint64_t type metadata accessor for RootHostingControllerNavigationItem()
{
  return objc_opt_self(_TtC11BookStoreUIP33_33EEA6210FEC2640A5148301F86EE4A335RootHostingControllerNavigationItem);
}

uint64_t sub_6C0DC()
{
  uint64_t v0;

  return sub_6D338(*(_QWORD *)(v0 + 16));
}

uint64_t sub_6C0E4(uint64_t a1)
{
  swift_unknownObjectWeakDestroy(a1);
  return a1;
}

_QWORD *sub_6C108(_QWORD *a1)
{
  _s11descr2EC6B1V23DependencyInjectionViewVwxx(a1);
  return a1;
}

void sub_6C13C(uint64_t a1)
{
  uint64_t v1;

  sub_68758(a1, v1);
}

uint64_t sub_6C144(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for HostProxy.Event(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_6C188(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for HostProxy.Event(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_6C1C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_5C154(&qword_322410);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_6C20C(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for HostProxy(255);
    result = swift_getWitnessTable(a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_6C24C(uint64_t result, uint64_t a2)
{
  if (result)
    return swift_retain(a2);
  return result;
}

unint64_t sub_6C25C()
{
  unint64_t result;

  result = qword_31FAC8;
  if (!qword_31FAC8)
  {
    result = swift_getWitnessTable(&unk_25A018, &type metadata for YearInReviewRootView);
    atomic_store(result, (unint64_t *)&qword_31FAC8);
  }
  return result;
}

uint64_t sub_6C2A0(uint64_t *a1, uint64_t a2)
{
  _s11descr2EC6B1V23DependencyInjectionViewVwcp(a2, a1);
  return a2;
}

uint64_t sub_6C2DC(uint64_t result, uint64_t a2)
{
  if (result)
    return swift_release(a2);
  return result;
}

uint64_t sub_6C308()
{
  return sub_6B834();
}

uint64_t sub_6C31C()
{
  return sub_6B810();
}

double static NavigationBarInsets.extraCompact.getter()
{
  return 0.0;
}

double static NavigationBarInsets.compact.getter()
{
  return 0.0;
}

double static NavigationBarInsets.regular.getter()
{
  return 0.0;
}

double static NavigationBarInsets.sidebar.getter()
{
  return 0.0;
}

id ReadingGoalsGaugeHostingControllerFactory.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), "init");
}

id NavigationBarInsets.init()()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for NavigationBarInsets();
  return objc_msgSendSuper2(&v2, "init");
}

uint64_t type metadata accessor for NavigationBarInsets()
{
  return objc_opt_self(BSUINavigationBarInsets);
}

id NavigationBarInsets.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for NavigationBarInsets();
  return objc_msgSendSuper2(&v2, "dealloc");
}

_QWORD *sub_6C4C0(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v20 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v20);
  }
  else
  {
    v7 = type metadata accessor for SeriesListSortOrder(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = *(_OWORD *)((char *)a2 + v8 + 24);
    *(_OWORD *)((char *)a1 + v8 + 24) = v9;
    (**(void (***)(void))(v9 - 8))();
    v10 = a3[7];
    *((_BYTE *)a1 + a3[6]) = *((_BYTE *)a2 + a3[6]);
    v11 = (char *)a1 + v10;
    v12 = (char *)a2 + v10;
    v13 = type metadata accessor for ActionMetrics(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v11, v12, v13);
    v14 = a3[8];
    v15 = (char *)a1 + v14;
    v16 = (char *)a2 + v14;
    v17 = type metadata accessor for ClickData(0);
    v18 = *(_QWORD *)(v17 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
    {
      v19 = sub_5C154(&qword_31F590);
      memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v15, v16, v17);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
    }
  }
  return a1;
}

uint64_t sub_6C620(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;

  v4 = type metadata accessor for SeriesListSortOrder(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((_QWORD *)(a1 + a2[5]));
  v5 = a1 + a2[7];
  v6 = type metadata accessor for ActionMetrics(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + a2[8];
  v8 = type metadata accessor for ClickData(0);
  v9 = *(_QWORD *)(v8 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  return result;
}

uint64_t sub_6C6E0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  const void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v6 = type metadata accessor for SeriesListSortOrder(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = *(_OWORD *)(a2 + v7 + 24);
  *(_OWORD *)(a1 + v7 + 24) = v8;
  (**(void (***)(void))(v8 - 8))();
  v9 = a3[7];
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  v10 = a1 + v9;
  v11 = a2 + v9;
  v12 = type metadata accessor for ActionMetrics(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
  v13 = a3[8];
  v14 = (void *)(a1 + v13);
  v15 = (const void *)(a2 + v13);
  v16 = type metadata accessor for ClickData(0);
  v17 = *(_QWORD *)(v16 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
  {
    v18 = sub_5C154(&qword_31F590);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v17 + 16))(v14, v15, v16);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
  }
  return a1;
}

uint64_t sub_6C814(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(void *, uint64_t, uint64_t);
  int v17;
  uint64_t v18;

  v6 = type metadata accessor for SeriesListSortOrder(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  sub_65938((_QWORD *)(a1 + a3[5]), (_QWORD *)(a2 + a3[5]));
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  v7 = a3[7];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = type metadata accessor for ActionMetrics(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[8];
  v12 = (void *)(a1 + v11);
  v13 = (void *)(a2 + v11);
  v14 = type metadata accessor for ClickData(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v15 + 48);
  LODWORD(v9) = v16(v12, 1, v14);
  v17 = v16(v13, 1, v14);
  if (!(_DWORD)v9)
  {
    if (!v17)
    {
      (*(void (**)(void *, void *, uint64_t))(v15 + 24))(v12, v13, v14);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v15 + 8))(v12, v14);
    goto LABEL_6;
  }
  if (v17)
  {
LABEL_6:
    v18 = sub_5C154(&qword_31F590);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v15 + 16))(v12, v13, v14);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  return a1;
}

uint64_t sub_6C984(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 *v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  const void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v6 = type metadata accessor for SeriesListSortOrder(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = (__int128 *)(a2 + v7);
  v11 = *v10;
  v12 = v10[1];
  *(_QWORD *)(v9 + 32) = *((_QWORD *)v10 + 4);
  LOBYTE(v10) = *(_BYTE *)(a2 + v8);
  *(_OWORD *)v9 = v11;
  *(_OWORD *)(v9 + 16) = v12;
  *(_BYTE *)(a1 + v8) = (_BYTE)v10;
  v13 = a3[7];
  v14 = a1 + v13;
  v15 = a2 + v13;
  v16 = type metadata accessor for ActionMetrics(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v14, v15, v16);
  v17 = a3[8];
  v18 = (void *)(a1 + v17);
  v19 = (const void *)(a2 + v17);
  v20 = type metadata accessor for ClickData(0);
  v21 = *(_QWORD *)(v20 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
  {
    v22 = sub_5C154(&qword_31F590);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v21 + 32))(v18, v19, v20);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
  }
  return a1;
}

uint64_t sub_6CAB0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(void *, uint64_t, uint64_t);
  int v21;
  uint64_t v22;

  v6 = type metadata accessor for SeriesListSortOrder(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((_QWORD *)(a1 + v7));
  v10 = *(_OWORD *)(v9 + 16);
  *(_OWORD *)v8 = *(_OWORD *)v9;
  *(_OWORD *)(v8 + 16) = v10;
  *(_QWORD *)(v8 + 32) = *(_QWORD *)(v9 + 32);
  v11 = a3[7];
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = type metadata accessor for ActionMetrics(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  v15 = a3[8];
  v16 = (void *)(a1 + v15);
  v17 = (void *)(a2 + v15);
  v18 = type metadata accessor for ClickData(0);
  v19 = *(_QWORD *)(v18 - 8);
  v20 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v19 + 48);
  LODWORD(v13) = v20(v16, 1, v18);
  v21 = v20(v17, 1, v18);
  if (!(_DWORD)v13)
  {
    if (!v21)
    {
      (*(void (**)(void *, void *, uint64_t))(v19 + 40))(v16, v17, v18);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v19 + 8))(v16, v18);
    goto LABEL_6;
  }
  if (v21)
  {
LABEL_6:
    v22 = sub_5C154(&qword_31F590);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v19 + 32))(v16, v17, v18);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
  return a1;
}

uint64_t sub_6CC30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_6CC3C);
}

uint64_t sub_6CC3C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  unint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v6 = type metadata accessor for SeriesListSortOrder(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    v13 = type metadata accessor for ActionMetrics(0);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == (_DWORD)a2)
    {
      v8 = v13;
      v15 = a3[7];
    }
    else
    {
      v8 = sub_5C154(&qword_31F590);
      v14 = *(_QWORD *)(v8 - 8);
      v15 = a3[8];
    }
    v10 = a1 + v15;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
    return v9(v10, a2, v8);
  }
  v11 = *(_QWORD *)(a1 + a3[5] + 24);
  if (v11 >= 0xFFFFFFFF)
    LODWORD(v11) = -1;
  return (v11 + 1);
}

uint64_t sub_6CD10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_6CD1C);
}

uint64_t sub_6CD1C(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  result = type metadata accessor for SeriesListSortOrder(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(_QWORD *)(a1 + a4[5] + 24) = (a2 - 1);
      return result;
    }
    v13 = type metadata accessor for ActionMetrics(0);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[7];
    }
    else
    {
      v10 = sub_5C154(&qword_31F590);
      v14 = *(_QWORD *)(v10 - 8);
      v15 = a4[8];
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t type metadata accessor for SeriesListSortAction(uint64_t a1)
{
  uint64_t result;

  result = qword_31FBD0;
  if (!qword_31FBD0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for SeriesListSortAction);
  return result;
}

void sub_6CE28(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD v8[5];

  v2 = type metadata accessor for SeriesListSortOrder(319);
  if (v3 <= 0x3F)
  {
    v8[0] = *(_QWORD *)(v2 - 8) + 64;
    v8[1] = "(";
    v8[2] = &unk_257FA0;
    v4 = type metadata accessor for ActionMetrics(319);
    if (v5 <= 0x3F)
    {
      v8[3] = *(_QWORD *)(v4 - 8) + 64;
      sub_6CEDC(319);
      if (v7 <= 0x3F)
      {
        v8[4] = *(_QWORD *)(v6 - 8) + 64;
        swift_initStructMetadata(a1, 256, 5, v8, a1 + 16);
      }
    }
  }
}

void sub_6CEDC(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_31FBE0)
  {
    v2 = type metadata accessor for ClickData(255);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_31FBE0);
  }
}

uint64_t sub_6CF30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_6CFCC(v2 + *(int *)(a1 + 32), a2);
}

uint64_t sub_6CF40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 28);
  v5 = type metadata accessor for ActionMetrics(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

unint64_t sub_6CF84()
{
  unint64_t result;
  uint64_t v1;

  result = qword_31FC20;
  if (!qword_31FC20)
  {
    v1 = type metadata accessor for SeriesListSortAction(255);
    result = swift_getWitnessTable(&unk_257FB8, v1);
    atomic_store(result, (unint64_t *)&qword_31FC20);
  }
  return result;
}

uint64_t sub_6CFCC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_5C154(&qword_31F590);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

BookStoreUI::FlowActionCardSetPresentationImplementation __swiftcall FlowActionCardSetPresentationImplementation.init(cardSetData:)(BookStoreUI::FlowActionCardSetPresentationImplementation cardSetData)
{
  BookStoreUI::FlowActionCardSetPresentationImplementation *v1;

  v1->cardSetData._rawValue = cardSetData.cardSetData._rawValue;
  return cardSetData;
}

uint64_t PageControllerFactory.create<A>(intent:parentTracker:origin:navigationContext:shouldReportFigaro:hidesDefaultBackButton:navigationBarTitle:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, char a6, uint64_t a7, uint64_t a8)
{
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;

  *(_QWORD *)(v9 + 64) = v18;
  *(_QWORD *)(v9 + 72) = v19;
  *(_QWORD *)(v9 + 48) = a7;
  *(_QWORD *)(v9 + 56) = a8;
  *(_BYTE *)(v9 + 169) = a6;
  *(_BYTE *)(v9 + 168) = a5;
  *(_QWORD *)(v9 + 32) = a3;
  *(_QWORD *)(v9 + 40) = a4;
  *(_QWORD *)(v9 + 16) = a1;
  *(_QWORD *)(v9 + 24) = a2;
  v10 = sub_5C154(&qword_322410);
  *(_QWORD *)(v9 + 80) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v10 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(v18 - 8);
  *(_QWORD *)(v9 + 88) = v11;
  v12 = swift_task_alloc((*(_QWORD *)(v11 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *v8;
  *(_QWORD *)(v9 + 96) = v12;
  *(_QWORD *)(v9 + 104) = v13;
  v14 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v9 + 112) = static MainActor.shared.getter(v14);
  v15 = dispatch thunk of Actor.unownedExecutor.getter(v14, &protocol witness table for MainActor);
  *(_QWORD *)(v9 + 120) = v15;
  *(_QWORD *)(v9 + 128) = v16;
  return swift_task_switch(sub_6D0E8, v15, v16);
}

uint64_t sub_6D0E8()
{
  _QWORD *v0;
  _QWORD *v1;

  (*(void (**)(_QWORD, _QWORD, _QWORD))(v0[11] + 16))(v0[12], v0[2], v0[8]);
  v1 = (_QWORD *)swift_task_alloc(dword_31FE04);
  v0[17] = v1;
  *v1 = v0;
  v1[1] = sub_6D148;
  return BaseObjectGraph.withSyncDependenciesForSwiftUI.getter();
}

uint64_t sub_6D148(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)();

  v4 = *(_QWORD **)v2;
  v5 = *(_QWORD *)(*(_QWORD *)v2 + 136);
  *(_QWORD *)(*(_QWORD *)v2 + 144) = v1;
  swift_task_dealloc(v5);
  if (v1)
  {
    (*(void (**)(_QWORD, _QWORD))(v4[11] + 8))(v4[12], v4[8]);
    v6 = v4[15];
    v7 = v4[16];
    v8 = sub_6D2DC;
  }
  else
  {
    v4[19] = a1;
    v4[20] = type metadata accessor for PageHostingController(0);
    v6 = v4[15];
    v7 = v4[16];
    v8 = sub_6D1D8;
  }
  return swift_task_switch(v8, v6, v7);
}

uint64_t sub_6D1D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  void *v7;
  uint64_t v8;
  void *v9;
  char *v10;
  __int128 v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;

  v15 = *(_QWORD *)(v0 + 152);
  v1 = *(_QWORD *)(v0 + 96);
  v16 = *(_QWORD *)(v0 + 88);
  v3 = *(_QWORD *)(v0 + 72);
  v2 = *(_QWORD *)(v0 + 80);
  v5 = *(_QWORD *)(v0 + 56);
  v4 = *(_QWORD *)(v0 + 64);
  v14 = *(unsigned __int8 *)(v0 + 169);
  v6 = *(unsigned __int8 *)(v0 + 168);
  v7 = *(void **)(v0 + 40);
  v13 = *(_QWORD *)(v0 + 48);
  v9 = *(void **)(v0 + 24);
  v8 = *(_QWORD *)(v0 + 32);
  swift_release(*(_QWORD *)(v0 + 112));
  sub_6C1C4(v8, v2);
  swift_bridgeObjectRetain(v5);
  *((_QWORD *)&v12 + 1) = v4;
  *(_QWORD *)&v12 = v5;
  v10 = sub_A0AD4(v1, v15, v9, v2, v7, v6, v14, v13, v12, v3);
  (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v1, v4);
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  return (*(uint64_t (**)(char *))(v0 + 8))(v10);
}

uint64_t sub_6D2DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 96);
  v2 = *(_QWORD *)(v0 + 80);
  swift_release(*(_QWORD *)(v0 + 112));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

ValueMetadata *type metadata accessor for PageControllerFactory()
{
  return &type metadata for PageControllerFactory;
}

uint64_t sub_6D338(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 16))();
}

uint64_t type metadata accessor for BSUISearchFeedViewController()
{
  return objc_opt_self(_TtC11BookStoreUI28BSUISearchFeedViewController);
}

void sub_6D3F4(id a1, char a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  void *v8;
  uint64_t v9;
  objc_class *v10;
  id v11;
  id v12;
  id v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  id v18;
  id v19;
  id v20;
  _QWORD v21[5];
  uint64_t v22;
  objc_super v23;

  if (a3)
  {
    v21[4] = a3;
    v22 = a4;
    v21[0] = _NSConcreteStackBlock;
    v21[1] = 1107296256;
    v21[2] = sub_69F04;
    v21[3] = &unk_2E7DD8;
    v8 = _Block_copy(v21);
    v9 = v22;
    swift_retain(a4);
    swift_release(v9);
  }
  else
  {
    v8 = 0;
  }
  v10 = (objc_class *)type metadata accessor for BSUISearchFeedViewController();
  v23.receiver = v4;
  v23.super_class = v10;
  objc_msgSendSuper2(&v23, "presentViewController:animated:completion:", a1, a2 & 1, v8);
  _Block_release(v8);
  v11 = objc_msgSend(v4, "navigationItem");
  v12 = objc_msgSend(v11, "searchController");

  if (v12)
  {

    if (v12 == a1)
    {
      v13 = objc_msgSend(v4, "navigationController");
      if (v13)
      {
        v14 = v13;
        v15 = objc_opt_self(BSUINavigationController);
        v16 = swift_dynamicCastObjCClass(v14, v15);
        if (v16)
        {
          v17 = (void *)v16;
          v18 = objc_msgSend(v4, "transitionCoordinator");
          if (v18)
          {
            v19 = v18;
            v20 = objc_msgSend(v18, "isInteractive");
            swift_unknownObjectRelease(v19);
          }
          else
          {
            v20 = 0;
          }
          objc_msgSend(v17, "_updateLayoutMarginsForViewController:forInteractiveTransition:", v4, v20);
        }

      }
    }
  }
}

uint64_t sub_6D59C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_6D5AC(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

void sub_6D66C(char a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  void *v6;
  uint64_t v7;
  objc_class *v8;
  id v9;
  id v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  _QWORD v19[5];
  uint64_t v20;
  objc_super v21;

  if (a2)
  {
    v19[4] = a2;
    v20 = a3;
    v19[0] = _NSConcreteStackBlock;
    v19[1] = 1107296256;
    v19[2] = sub_69F04;
    v19[3] = &unk_2E7E00;
    v6 = _Block_copy(v19);
    v7 = v20;
    swift_retain(a3);
    swift_release(v7);
  }
  else
  {
    v6 = 0;
  }
  v8 = (objc_class *)type metadata accessor for BSUISearchFeedViewController();
  v21.receiver = v3;
  v21.super_class = v8;
  objc_msgSendSuper2(&v21, "dismissViewControllerAnimated:completion:", a1 & 1, v6);
  _Block_release(v6);
  v9 = objc_msgSend(v3, "presentedViewController");
  v10 = objc_msgSend(v3, "navigationItem");
  v11 = objc_msgSend(v10, "searchController");

  if (!v9)
  {
    if (v11)
    {
LABEL_15:

      return;
    }
LABEL_9:
    v12 = objc_msgSend(v3, "navigationController");
    if (!v12)
      return;
    v11 = v12;
    v13 = objc_opt_self(BSUINavigationController);
    v14 = swift_dynamicCastObjCClass(v11, v13);
    if (v14)
    {
      v15 = (void *)v14;
      v16 = objc_msgSend(v3, "transitionCoordinator");
      if (v16)
      {
        v17 = v16;
        v18 = objc_msgSend(v16, "isInteractive");
        swift_unknownObjectRelease(v17);
      }
      else
      {
        v18 = 0;
      }
      objc_msgSend(v15, "_updateLayoutMarginsForViewController:forInteractiveTransition:", v3, v18);
    }
    goto LABEL_15;
  }

  if (v11)
  {

    if (v9 == v11)
      goto LABEL_9;
  }
}

id sub_6D9C4()
{
  void *v0;
  id v1;
  id v2;
  id v3;
  id v4;
  objc_super v6;

  v1 = objc_msgSend(v0, "bc_childPresentedViewController");
  if (v1)
  {
    v2 = v1;
    v3 = objc_msgSend(v0, "navigationItem");
    v4 = objc_msgSend(v3, "searchController");

    if (v4)
    {

      if (v2 == v4)
        return 0;
    }
    else
    {

    }
  }
  v6.receiver = v0;
  v6.super_class = (Class)type metadata accessor for BSUISearchFeedViewController();
  return objc_msgSendSuper2(&v6, "bc_navBarVisible");
}

void sub_6DAF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  void *v6;
  uint64_t v7;
  objc_class *v8;
  id v9;
  id v10;
  id v11;
  _QWORD v12[5];
  uint64_t v13;
  objc_super v14;

  if (a2)
  {
    v12[4] = a2;
    v13 = a3;
    v12[0] = _NSConcreteStackBlock;
    v12[1] = 1107296256;
    v12[2] = sub_6DC24;
    v12[3] = &unk_2E7E28;
    v6 = _Block_copy(v12);
    v7 = v13;
    swift_retain(a3);
    swift_release(v7);
  }
  else
  {
    v6 = 0;
  }
  v8 = (objc_class *)type metadata accessor for BSUISearchFeedViewController();
  v14.receiver = v3;
  v14.super_class = v8;
  objc_msgSendSuper2(&v14, "feedController:dismissKeyboard:", a1, v6);
  _Block_release(v6);
  v9 = objc_msgSend(v3, "navigationItem");
  v10 = objc_msgSend(v9, "searchController");

  if (v10)
  {
    v11 = objc_msgSend(v10, "searchBar");

    objc_msgSend(v11, "endEditing:", 1);
  }
}

uint64_t sub_6DC24(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void (*v3)(uint64_t);
  uint64_t v4;

  v3 = *(void (**)(uint64_t))(a1 + 32);
  v2 = *(_QWORD *)(a1 + 40);
  if (a2)
    v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)(a2, (char *)&type metadata for Any + 8);
  else
    v4 = 0;
  swift_retain(v2);
  v3(v4);
  swift_release(v2);
  return swift_bridgeObjectRelease(v4);
}

void sub_6DD3C(uint64_t a1, uint64_t a2)
{
  NSArray v3;
  Class isa;

  if (a1)
    v3.super.isa = Array._bridgeToObjectiveC()().super.isa;
  else
    v3.super.isa = 0;
  isa = v3.super.isa;
  (*(void (**)(uint64_t))(a2 + 16))(a2);

}

void sub_6DD94(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, void *a6, uint64_t a7)
{
  void *v7;
  void *v8;
  id v14;
  id v15;
  id v16;
  NSArray v17;
  NSDictionary v18;
  uint64_t v19;
  objc_class *v20;
  _QWORD v21[5];
  uint64_t v22;
  objc_super v23;

  v8 = v7;
  v14 = objc_msgSend(v8, "navigationItem");
  v15 = objc_msgSend(v14, "searchController");

  if (v15)
  {
    v16 = objc_msgSend(v15, "searchBar");

    objc_msgSend(v16, "endEditing:", 1);
  }
  sub_5C154(&qword_31FC38);
  v17.super.isa = Array._bridgeToObjectiveC()().super.isa;
  v18.super.isa = Dictionary._bridgeToObjectiveC()().super.isa;
  if (a6)
  {
    v21[4] = a6;
    v22 = a7;
    v21[0] = _NSConcreteStackBlock;
    v21[1] = 1107296256;
    v21[2] = sub_69F04;
    v21[3] = &unk_2E7E50;
    a6 = _Block_copy(v21);
    v19 = v22;
    swift_retain(a7);
    swift_release(v19);
  }
  v20 = (objc_class *)type metadata accessor for BSUISearchFeedViewController();
  v23.receiver = v8;
  v23.super_class = v20;
  objc_msgSendSuper2(&v23, "feedController:wantsToPresentCardsWithCardArray:focusedIndex:animated:options:completion:", a1, v17.super.isa, a3, a4 & 1, v18.super.isa, a6);
  _Block_release(a6);

}

uint64_t sub_6E05C(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t result;
  uint64_t *v7;
  uint64_t v8;

  result = sub_6E0C4(a2, a3);
  if ((result & 1) == 0)
  {
    v7 = (uint64_t *)(v3 + OBJC_IVAR____TtC11BookStoreUI28BSUISearchFeedViewController_pendingSearchText);
    v8 = *(_QWORD *)(v3 + OBJC_IVAR____TtC11BookStoreUI28BSUISearchFeedViewController_pendingSearchText + 8);
    *v7 = a2;
    v7[1] = a3;
    swift_bridgeObjectRetain(a3);
    return swift_bridgeObjectRelease(v8);
  }
  return result;
}

uint64_t sub_6E0C4(uint64_t a1, unint64_t a2)
{
  void *v2;
  void *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  char v10;
  uint64_t result;
  id v12;
  id v13;
  id v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v20;
  id v21;
  NSString v22;
  uint64_t v23;
  id v24;
  uint64_t v25;

  v3 = v2;
  v6 = type metadata accessor for DispatchPredicate(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (uint64_t *)((char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_5C194(0, (unint64_t *)&qword_31FCD8, OS_dispatch_queue_ptr);
  *v9 = static OS_dispatch_queue.main.getter();
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v7 + 104))(v9, enum case for DispatchPredicate.onQueue(_:), v6);
  v10 = _dispatchPreconditionTest(_:)(v9);
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v7 + 8))(v9, v6);
  if ((v10 & 1) != 0)
  {
    v12 = objc_msgSend(v3, "navigationItem");
    v13 = objc_msgSend(v12, "searchController");

    if (!v13)
      return v13 != 0;
    v14 = objc_msgSend(v13, "searchBar");
    v15 = objc_msgSend(v14, "text");

    if (!v15)
      goto LABEL_9;
    v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
    v18 = v17;

    if (v16 == a1 && v18 == a2)
    {
      swift_bridgeObjectRelease(a2);
      goto LABEL_11;
    }
    v20 = _stringCompareWithSmolCheck(_:_:expecting:)(v16, v18, a1, a2, 0);
    swift_bridgeObjectRelease(v18);
    if ((v20 & 1) == 0)
    {
LABEL_9:
      v21 = objc_msgSend(v13, "searchBar");
      v22 = String._bridgeToObjectiveC()();
      objc_msgSend(v21, "setText:", v22);

    }
LABEL_11:
    v23 = HIBYTE(a2) & 0xF;
    if ((a2 & 0x2000000000000000) == 0)
      v23 = a1 & 0xFFFFFFFFFFFFLL;
    if (v23)
    {
      v24 = objc_msgSend(v3, "presentedViewController");

      if (!v24)
        objc_msgSend(v13, "setActive:", 1);
    }

    return v13 != 0;
  }
  __break(1u);
  return result;
}

double sub_6E398()
{
  void *v0;
  double v1;
  double v2;
  double v3;
  double v4;
  double top;
  double left;
  double bottom;
  double right;
  id v12;
  char *v13;
  double v14;
  double v15;
  double v16;
  id v17;
  id v18;
  unsigned int v19;
  BOOL v20;
  BOOL v21;
  objc_super v24;

  v24.receiver = v0;
  v24.super_class = (Class)type metadata accessor for BSUISearchFeedViewController();
  objc_msgSendSuper2(&v24, "navigationBarMetricsLayoutMargins");
  top = v4;
  left = UIEdgeInsetsZero.left;
  bottom = UIEdgeInsetsZero.bottom;
  right = UIEdgeInsetsZero.right;
  if (v4 == UIEdgeInsetsZero.top && v1 == left && v2 == bottom && v3 == right)
  {
    v12 = objc_msgSend(v0, "traitCollection");
    v13 = (char *)objc_msgSend(v12, "horizontalSizeClass");

    if (v13 == (_BYTE *)&dword_0 + 1)
    {
      v14 = 16.0;
      top = 0.0;
      v15 = 0.0;
      v16 = 16.0;
    }
    else
    {
      top = UIEdgeInsetsZero.top;
      v14 = left;
      v15 = bottom;
      v16 = right;
    }
    v17 = objc_msgSend(v0, "navigationItem");
    v18 = objc_msgSend(v17, "searchController");

    if (!v18)
      return UIEdgeInsetsZero.top;
    v19 = objc_msgSend(v18, "isActive");

    if (!v19)
      return UIEdgeInsetsZero.top;
    v20 = top == UIEdgeInsetsZero.top && v14 == left;
    v21 = v20 && v15 == bottom;
    if (v21 && v16 == right)
      return UIEdgeInsetsZero.top;
  }
  return top;
}

id sub_6E56C(uint64_t a1, uint64_t a2, uint64_t a3, Class isa)
{
  void *v4;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  NSString v15;
  objc_class *v16;
  id v17;
  objc_super v19;
  _QWORD v20[3];
  uint64_t v21;

  sub_6EF28(a1, (uint64_t)v20);
  v8 = v21;
  if (v21)
  {
    v9 = sub_66898(v20, v21);
    v10 = *(_QWORD *)(v8 - 8);
    v11 = __chkstk_darwin(v9);
    v13 = (char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, __n128))(v10 + 16))(v13, v11);
    v14 = _bridgeAnythingToObjectiveC<A>(_:)(v13, v8);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v8);
    _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(v20);
    if (a3)
      goto LABEL_3;
LABEL_12:
    v15 = 0;
    if (!isa)
      goto LABEL_5;
    goto LABEL_4;
  }
  v14 = 0;
  if (!a3)
    goto LABEL_12;
LABEL_3:
  v15 = String._bridgeToObjectiveC()();
  if (isa)
LABEL_4:
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
LABEL_5:
  v16 = (objc_class *)type metadata accessor for BSUISearchFeedViewController();
  v19.receiver = v4;
  v19.super_class = v16;
  v17 = objc_msgSendSuper2(&v19, "handleActionForObject:withName:arguments:", v14, v15, isa);
  swift_unknownObjectRelease(v14);

  if (a3
    && (a2 == 0x475F5443454C4553 && a3 == 0xEC00000050554F52
     || (_stringCompareWithSmolCheck(_:_:expecting:)(a2, a3, 0x475F5443454C4553, 0xEC00000050554F52, 0) & 1) != 0))
  {
    UIAccessibilityPostNotification(UIAccessibilityLayoutChangedNotification, 0);
  }
  return v17;
}

id sub_6E85C(uint64_t a1, char a2)
{
  char *v2;
  id result;
  uint64_t *v6;
  unint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  objc_super v11;

  v11.receiver = v2;
  v11.super_class = (Class)type metadata accessor for BSUISearchFeedViewController();
  result = objc_msgSendSuper2(&v11, "navigationBarItemsDidUpdate:hasItems:", a1, a2 & 1);
  v6 = (uint64_t *)&v2[OBJC_IVAR____TtC11BookStoreUI28BSUISearchFeedViewController_pendingSearchText];
  v7 = *(_QWORD *)&v2[OBJC_IVAR____TtC11BookStoreUI28BSUISearchFeedViewController_pendingSearchText + 8];
  if (v7)
  {
    v8 = *v6;
    swift_bridgeObjectRetain(*(_QWORD *)&v2[OBJC_IVAR____TtC11BookStoreUI28BSUISearchFeedViewController_pendingSearchText
                                          + 8]);
    v9 = sub_6E0C4(v8, v7);
    result = (id)swift_bridgeObjectRelease(v7);
    if ((v9 & 1) != 0)
    {
      v10 = v6[1];
      *v6 = 0;
      v6[1] = 0;
      return (id)swift_bridgeObjectRelease(v10);
    }
  }
  return result;
}

id BSUISearchFeedViewController.__allocating_init(feedContent:manager:factory:)(void *a1, void *a2, void *a3)
{
  objc_class *v3;
  id v7;

  v7 = objc_msgSend(objc_allocWithZone(v3), "initWithFeedContent:manager:factory:", a1, a2, a3);

  return v7;
}

id BSUISearchFeedViewController.init(feedContent:manager:factory:)(void *a1, void *a2, void *a3)
{
  char *v3;
  char *v7;
  objc_class *v8;
  id v9;
  objc_super v11;

  v7 = &v3[OBJC_IVAR____TtC11BookStoreUI28BSUISearchFeedViewController_pendingSearchText];
  v8 = (objc_class *)type metadata accessor for BSUISearchFeedViewController();
  *(_QWORD *)v7 = 0;
  *((_QWORD *)v7 + 1) = 0;
  v11.receiver = v3;
  v11.super_class = v8;
  v9 = objc_msgSendSuper2(&v11, "initWithFeedContent:manager:factory:", a1, a2, a3);

  return v9;
}

id BSUISearchFeedViewController.__allocating_init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  objc_class *v3;
  objc_class *v4;
  NSString v7;
  id v8;

  v4 = v3;
  if (a2)
  {
    v7 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a2);
  }
  else
  {
    v7 = 0;
  }
  v8 = objc_msgSend(objc_allocWithZone(v4), "initWithNibName:bundle:", v7, a3);

  return v8;
}

id BSUISearchFeedViewController.init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  char *v3;
  char *v5;
  NSString v7;
  id v8;
  objc_super v10;

  v5 = &v3[OBJC_IVAR____TtC11BookStoreUI28BSUISearchFeedViewController_pendingSearchText];
  *(_QWORD *)v5 = 0;
  *((_QWORD *)v5 + 1) = 0;
  if (a2)
  {
    v7 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a2);
  }
  else
  {
    v7 = 0;
  }
  v10.receiver = v3;
  v10.super_class = (Class)type metadata accessor for BSUISearchFeedViewController();
  v8 = objc_msgSendSuper2(&v10, "initWithNibName:bundle:", v7, a3);

  return v8;
}

id Window.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), "initWithCoder:", a1);

  return v3;
}

id BSUISearchFeedViewController.init(coder:)(void *a1)
{
  char *v1;
  char *v3;
  objc_class *v4;
  id v5;
  objc_super v7;

  v3 = &v1[OBJC_IVAR____TtC11BookStoreUI28BSUISearchFeedViewController_pendingSearchText];
  v4 = (objc_class *)type metadata accessor for BSUISearchFeedViewController();
  *(_QWORD *)v3 = 0;
  *((_QWORD *)v3 + 1) = 0;
  v7.receiver = v1;
  v7.super_class = v4;
  v5 = objc_msgSendSuper2(&v7, "initWithCoder:", a1);

  return v5;
}

id BSUISearchFeedViewController.__allocating_init(options:)(uint64_t a1)
{
  objc_class *v1;
  NSDictionary v3;
  id v4;

  if (a1)
  {
    v3.super.isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(a1);
  }
  else
  {
    v3.super.isa = 0;
  }
  v4 = objc_msgSend(objc_allocWithZone(v1), "initWithOptions:", v3.super.isa);

  return v4;
}

id BSUISearchFeedViewController.init(options:)(uint64_t a1)
{
  char *v1;
  char *v2;
  NSDictionary v4;
  id v5;
  objc_super v7;

  v2 = &v1[OBJC_IVAR____TtC11BookStoreUI28BSUISearchFeedViewController_pendingSearchText];
  *(_QWORD *)v2 = 0;
  *((_QWORD *)v2 + 1) = 0;
  if (a1)
  {
    v4.super.isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(a1);
  }
  else
  {
    v4.super.isa = 0;
  }
  v7.receiver = v1;
  v7.super_class = (Class)type metadata accessor for BSUISearchFeedViewController();
  v5 = objc_msgSendSuper2(&v7, "initWithOptions:", v4.super.isa);

  if (v5)
  return v5;
}

id BSUISearchFeedViewController.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BSUISearchFeedViewController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_6EF28(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_5C154(&qword_31F8B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t method lookup function for BSUISearchFeedViewController(uint64_t a1, uint64_t a2)
{
  return swift_lookUpClassMethod(a1, a2, &nominal type descriptor for BSUISearchFeedViewController);
}

uint64_t dispatch thunk of BSUISearchFeedViewController.feedController(_:wantsToUpdateSearchText:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))&stru_68.segname[(swift_isaMask & *v0) - 8])();
}

uint64_t sub_6EF98(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_5C154(&qword_31F8B0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_6EFD8()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_6EFFC()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v0 + 16) + 16))();
}

void sub_6F008(uint64_t a1)
{
  uint64_t v1;

  sub_6DD3C(a1, *(_QWORD *)(v1 + 16));
}

uint64_t BaseObjectGraph.withSyncDependenciesForSwiftUI.getter()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 104) = v0;
  return swift_task_switch(sub_6F050, 0, 0);
}

uint64_t sub_6F050()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t (*v3)(_QWORD *);

  v0[7] = sub_5C194(0, &qword_31FE08, off_2E2F80);
  v0[2] = v0 + 7;
  v0[8] = sub_5C154(&qword_31FE10);
  v0[3] = v0 + 8;
  v0[9] = sub_5C154(&qword_31FE18);
  v0[4] = v0 + 9;
  v0[10] = sub_5C154(&qword_31FE20);
  v0[5] = v0 + 10;
  v0[11] = sub_5C154(&qword_31FE28);
  v0[6] = v0 + 11;
  v3 = (uint64_t (*)(_QWORD *))((char *)&dword_31FE30 + dword_31FE30);
  v1 = (_QWORD *)swift_task_alloc(unk_31FE34);
  v0[14] = v1;
  *v1 = v0;
  v1[1] = sub_6F13C;
  return v3(v0 + 2);
}

uint64_t sub_6F13C(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(*v2 + 112);
  v5 = *v2;
  *(_QWORD *)(v5 + 120) = v1;
  swift_task_dealloc(v4);
  if (v1)
    return swift_task_switch(sub_6F1B0, 0, 0);
  else
    return (*(uint64_t (**)(uint64_t))(v5 + 8))(a1);
}

uint64_t sub_6F1B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  _BOOL4 v6;
  uint64_t v7;
  uint8_t *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if (qword_31E5A0 != -1)
    swift_once(&qword_31E5A0, sub_126780);
  v1 = *(_QWORD *)(v0 + 120);
  v2 = type metadata accessor for Logger(0);
  sub_5240C(v2, (uint64_t)qword_325088);
  swift_errorRetain(v1);
  v3 = swift_errorRetain(v1);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.fault.getter(v4);
  v6 = os_log_type_enabled(v4, v5);
  v7 = *(_QWORD *)(v0 + 120);
  if (v6)
  {
    v8 = (uint8_t *)swift_slowAlloc(12, -1);
    v9 = (uint64_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v8 = 138412290;
    swift_errorRetain(v7);
    v10 = _swift_stdlib_bridgeErrorToNSError(v7);
    *(_QWORD *)(v0 + 96) = v10;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 96, v0 + 104, v8 + 4, v8 + 12);
    *v9 = v10;
    swift_errorRelease(v7);
    swift_errorRelease(v7);
    _os_log_impl(&dword_0, v4, v5, "Failed to resolve dependencies for SwiftUI: %@", v8, 0xCu);
    v11 = sub_5C154(&qword_32A000);
    swift_arrayDestroy(v9, 1, v11);
    swift_slowDealloc(v9, -1, -1);
    swift_slowDealloc(v8, -1, -1);
  }
  else
  {
    swift_errorRelease(*(_QWORD *)(v0 + 120));
    swift_errorRelease(v7);
  }

  swift_willThrow(v12);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t static PartialObjectGraphProvider.buildPartialObjectGraph()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  __n128 v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  __n128 v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  void (*v83)(char *, uint64_t);
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  char *v99;
  char *v100;
  char *v101;
  char *v102;
  char *v103;
  char *v104;
  char *v105;
  uint64_t v106;
  char *v107;
  char *v108;
  char *v109;
  char *v110;
  char *v111;
  char *v112;
  char *v113;
  char *v114;
  char *v115;
  char *v116;
  char *v117;
  char *v118;
  char *v119;

  v0 = type metadata accessor for Dependency(0);
  v106 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v104 = (char *)&v85 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  v119 = (char *)&v85 - v3;
  __chkstk_darwin(v4);
  v118 = (char *)&v85 - v5;
  __chkstk_darwin(v6);
  v102 = (char *)&v85 - v7;
  __chkstk_darwin(v8);
  v116 = (char *)&v85 - v9;
  __chkstk_darwin(v10);
  v101 = (char *)&v85 - v11;
  __chkstk_darwin(v12);
  v100 = (char *)&v85 - v13;
  __chkstk_darwin(v14);
  v114 = (char *)&v85 - v15;
  __chkstk_darwin(v16);
  v99 = (char *)&v85 - v17;
  __chkstk_darwin(v18);
  v115 = (char *)&v85 - v19;
  __chkstk_darwin(v20);
  v98 = (char *)&v85 - v21;
  __chkstk_darwin(v22);
  v117 = (char *)&v85 - v23;
  __chkstk_darwin(v24);
  v103 = (char *)&v85 - v25;
  __chkstk_darwin(v26);
  v105 = (char *)&v85 - v27;
  __chkstk_darwin(v28);
  v107 = (char *)&v85 - v29;
  __chkstk_darwin(v30);
  v108 = (char *)&v85 - v31;
  __chkstk_darwin(v32);
  v109 = (char *)&v85 - v33;
  __chkstk_darwin(v34);
  v111 = (char *)&v85 - v35;
  __chkstk_darwin(v36);
  v110 = (char *)&v85 - v37;
  __chkstk_darwin(v38);
  v112 = (char *)&v85 - v39;
  __chkstk_darwin(v40);
  v113 = (char *)&v85 - v41;
  v42 = sub_5C154(&qword_31FE40);
  Dependency.init<A>(satisfying:with:)(v42, sub_6FD3C, 0, v42);
  v43 = sub_5C154(&qword_31FE48);
  Dependency.init<A>(satisfying:with:)(v43, sub_73318, 0, v43);
  v44 = sub_5C194(0, (unint64_t *)&qword_31FE50, BUBag_ptr);
  v45.n128_f64[0] = Dependency.init<A>(satisfying:with:)(v44, sub_706B4, 0, v44);
  v46 = type metadata accessor for Bag(0, v45);
  Dependency.init<A>(satisfying:with:)(v46, sub_706F4, 0, v46);
  v47 = sub_5C154(&qword_31FE58);
  Dependency.init<A>(satisfying:with:)(v47, sub_7331C, 0, v47);
  v48 = sub_5C154(&qword_31FE60);
  Dependency.init<A>(satisfying:with:)(v48, sub_70764, 0, v48);
  v49 = sub_5C154(&qword_31FE68);
  Dependency.init<A>(satisfying:with:)(v49, sub_707E4, 0, v49);
  v50 = sub_5C154(&qword_31FE70);
  Dependency.init<A>(satisfying:with:)(v50, sub_70870, 0, v50);
  v51 = sub_5C154(&qword_31FE78);
  Dependency.init<A>(satisfying:with:)(v51, sub_7092C, 0, v51);
  v52 = sub_5C154(&qword_31FE80);
  v53.n128_f64[0] = Dependency.init<A>(satisfying:with:)(v52, sub_73368, 0, v52);
  v54 = type metadata accessor for JSONContext(0, v53);
  v55 = v98;
  Dependency.init<A>(satisfying:with:)(v54, sub_70FA8, 0, v54);
  v56 = sub_5C154(&qword_31FE88);
  Dependency.init<A>(satisfying:with:)(v56, sub_717A4, 0, v56);
  v57 = sub_5C154(&qword_31FE90);
  v58 = v99;
  Dependency.init<A>(satisfying:with:)(v57, sub_718C0, 0, v57);
  v59 = sub_5C154(&qword_31FE28);
  Dependency.init<A>(satisfying:with:)(v59, &unk_31FE98, 0, v59);
  v60 = type metadata accessor for LocalizerManager();
  v61 = v100;
  Dependency.init<A>(satisfying:with:)(v60, &unk_31FEA0, 0, v60);
  v62 = type metadata accessor for MCatalogService(0);
  v63 = v101;
  Dependency.init<A>(satisfying:with:)(v62, sub_71DD0, 0, v62);
  v64 = sub_5C154((uint64_t *)&unk_31FEA8);
  Dependency.init<A>(satisfying:with:)(v64, sub_71E74, 0, v64);
  v65 = type metadata accessor for MetricsPipeline(0);
  v66 = v102;
  Dependency.init<A>(satisfying:with:)(v65, sub_71F0C, 0, v65);
  Dependency.init<A>(satisfying:with:)(&type metadata for PageControllerFactory, sub_72370, 0, &type metadata for PageControllerFactory);
  v67 = type metadata accessor for ProfileRestrictions(0);
  Dependency.init<A>(satisfying:with:)(v67, sub_723A0, 0, v67);
  v68 = type metadata accessor for SynchronousNativeIntentDispatcher(0);
  Dependency.init<A>(satisfying:with:)(v68, sub_723D8, 0, v68);
  type metadata accessor for BaseObjectGraph(0);
  v69 = sub_5C154(&qword_31F010);
  v70 = v106;
  v71 = *(unsigned __int8 *)(v106 + 80);
  v72 = (v71 + 32) & ~v71;
  v73 = swift_allocObject(v69, v72 + *(_QWORD *)(v106 + 72), v71 | 7);
  *(_OWORD *)(v73 + 16) = xmmword_258070;
  (*(void (**)(uint64_t, char *, uint64_t))(v70 + 16))(v73 + v72, v113, v0);
  v96 = BaseObjectGraph.__allocating_init(name:_:)(0, 0xE000000000000000, v73);
  v95 = dispatch thunk of BaseObjectGraph.adding(dependency:)(v112);
  v94 = dispatch thunk of BaseObjectGraph.adding(dependency:)(v110);
  v93 = dispatch thunk of BaseObjectGraph.adding(dependency:)(v111);
  v92 = dispatch thunk of BaseObjectGraph.adding(dependency:)(v109);
  v91 = dispatch thunk of BaseObjectGraph.adding(dependency:)(v108);
  v90 = dispatch thunk of BaseObjectGraph.adding(dependency:)(v107);
  v89 = dispatch thunk of BaseObjectGraph.adding(dependency:)(v105);
  v88 = dispatch thunk of BaseObjectGraph.adding(dependency:)(v103);
  v87 = dispatch thunk of BaseObjectGraph.adding(dependency:)(v117);
  v86 = dispatch thunk of BaseObjectGraph.adding(dependency:)(v55);
  v85 = dispatch thunk of BaseObjectGraph.adding(dependency:)(v115);
  v74 = dispatch thunk of BaseObjectGraph.adding(dependency:)(v58);
  v75 = dispatch thunk of BaseObjectGraph.adding(dependency:)(v114);
  v76 = dispatch thunk of BaseObjectGraph.adding(dependency:)(v61);
  v77 = dispatch thunk of BaseObjectGraph.adding(dependency:)(v63);
  v78 = dispatch thunk of BaseObjectGraph.adding(dependency:)(v116);
  v79 = dispatch thunk of BaseObjectGraph.adding(dependency:)(v66);
  v80 = dispatch thunk of BaseObjectGraph.adding(dependency:)(v118);
  v81 = dispatch thunk of BaseObjectGraph.adding(dependency:)(v119);
  v82 = v104;
  v97 = dispatch thunk of BaseObjectGraph.adding(dependency:)(v104);
  swift_release(v96);
  swift_release(v95);
  swift_release(v94);
  swift_release(v93);
  swift_release(v92);
  swift_release(v91);
  swift_release(v90);
  swift_release(v89);
  swift_release(v88);
  swift_release(v87);
  swift_release(v86);
  swift_release(v85);
  swift_release(v74);
  swift_release(v75);
  swift_release(v76);
  swift_release(v77);
  swift_release(v78);
  swift_release(v79);
  swift_release(v80);
  swift_release(v81);
  v83 = *(void (**)(char *, uint64_t))(v106 + 8);
  v83(v82, v0);
  v83(v119, v0);
  v83(v118, v0);
  v83(v102, v0);
  v83(v116, v0);
  v83(v101, v0);
  v83(v100, v0);
  v83(v114, v0);
  v83(v99, v0);
  v83(v115, v0);
  v83(v98, v0);
  v83(v117, v0);
  v83(v103, v0);
  v83(v105, v0);
  v83(v107, v0);
  v83(v108, v0);
  v83(v109, v0);
  v83(v111, v0);
  v83(v110, v0);
  v83(v112, v0);
  v83(v113, v0);
  return v97;
}

uint64_t sub_6FD3C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v6;

  v0 = sub_5C154(&qword_31FE40);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_6FDC0((uint64_t)v3);
  ActionDispatcher<>.withBuiltInActionImplementations.getter(v4);
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_6FDC0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  void (*v31)(void);
  unint64_t v32;
  void (*v33)(char *, uint64_t);
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  char *v37;
  unint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  unint64_t v49;
  char *v50;
  unint64_t v51;
  char *v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  char *v61;
  char *v62;
  char *v63;
  char *v64;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  char *v73;
  char *v74;
  char *v75;
  char *v76;
  char *v77;
  char *v78;
  char *v79;
  char *v80;
  char *v81;

  v72 = a1;
  v1 = sub_5C154(&qword_3200F0);
  v2 = *(char **)(v1 - 8);
  v69 = v1;
  v70 = v2;
  __chkstk_darwin(v1);
  v67 = (char *)&v66 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_5C154(&qword_31FE40);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v71 = (char *)&v66 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v81 = (char *)&v66 - v8;
  __chkstk_darwin(v9);
  v73 = (char *)&v66 - v10;
  __chkstk_darwin(v11);
  v79 = (char *)&v66 - v12;
  __chkstk_darwin(v13);
  v80 = (char *)&v66 - v14;
  __chkstk_darwin(v15);
  v17 = (char *)&v66 - v16;
  __chkstk_darwin(v18);
  v20 = (char *)&v66 - v19;
  __chkstk_darwin(v21);
  v23 = (char *)&v66 - v22;
  __chkstk_darwin(v24);
  v26 = (char *)&v66 - v25;
  __chkstk_darwin(v27);
  v29 = (char *)&v66 - v28;
  v78 = (char *)&v66 - v28;
  v30 = type metadata accessor for BaseObjectGraph(0);
  ((void (*)(void))ActionDispatcher.init())();
  v68 = (char *)v5;
  v31 = *(void (**)(void))(v5 + 16);
  ((void (*)(char *, char *, uint64_t))v31)(v29, v26, v4);
  v32 = sub_73F60();
  ActionDispatcher.add<A>(_:)(v32, v4, &type metadata for AlertActionImplementation, v32);
  v33 = *(void (**)(char *, uint64_t))(v5 + 8);
  v33(v26, v4);
  ActionDispatcher.init()(v30);
  v77 = v26;
  ((void (*)(char *, char *, uint64_t))v31)(v26, v23, v4);
  v34 = sub_73FA4();
  ActionDispatcher.add<A>(_:)(v34, v4, &type metadata for AppAnalyticsActionImplementation, v34);
  v33(v23, v4);
  ActionDispatcher.init()(v30);
  v76 = v23;
  ((void (*)(char *, char *, uint64_t))v31)(v23, v20, v4);
  v35 = sub_73FE8();
  ActionDispatcher.add<A>(_:)(v35, v4, &type metadata for FlowActionImplementation, v35);
  v33(v20, v4);
  ActionDispatcher.init()(v30);
  v75 = v20;
  ((void (*)(char *, char *, uint64_t))v31)(v20, v17, v4);
  v36 = sub_7402C();
  ActionDispatcher.add<A>(_:)(v36, v4, &type metadata for FlowBackActionImplementation, v36);
  v33(v17, v4);
  v37 = v80;
  ActionDispatcher.init()(v30);
  v74 = v17;
  ((void (*)(char *, char *, uint64_t))v31)(v17, v37, v4);
  v38 = sub_74070();
  ActionDispatcher.add<A>(_:)(v38, v4, &type metadata for JSActionImplementation, v38);
  v39 = v37;
  v33(v37, v4);
  v40 = type metadata accessor for Page(0);
  v41 = type metadata accessor for Shelf(0);
  v42 = sub_648E0((unint64_t *)&qword_320120, type metadata accessor for Page, (uint64_t)&protocol conformance descriptor for Page);
  v43 = sub_648E0(&qword_320128, type metadata accessor for Shelf, (uint64_t)&protocol conformance descriptor for Shelf);
  v44 = v67;
  PageUpdateActionImplementation.init()(v40, v41, v42, v43);
  v45 = v79;
  ActionDispatcher.init()(v30);
  ((void (*)(char *, char *, uint64_t))v31)(v39, v45, v4);
  v46 = sub_67060(&qword_320130, &qword_3200F0, (uint64_t)&protocol conformance descriptor for PageUpdateActionImplementation<A, B>);
  v47 = v69;
  ActionDispatcher.add<A>(_:)(v44, v4, v69, v46);
  v33(v45, v4);
  (*((void (**)(char *, uint64_t))v70 + 1))(v44, v47);
  v48 = v73;
  ActionDispatcher.init()(v30);
  ((void (*)(char *, char *, uint64_t))v31)(v45, v48, v4);
  v49 = sub_740B4();
  ActionDispatcher.add<A>(_:)(v49, v4, &type metadata for RefreshSeriesUberHeaderActionImplementation, v49);
  v33(v48, v4);
  v50 = v81;
  v66 = v30;
  ActionDispatcher.init()(v30);
  ((void (*)(char *, char *, uint64_t))v31)(v48, v50, v4);
  v51 = sub_740F8();
  ActionDispatcher.add<A>(_:)(v51, v4, &type metadata for SeriesListFilterActionImplementation, v51);
  v33(v50, v4);
  v52 = v71;
  ActionDispatcher.init()(v30);
  ((void (*)(char *, char *, uint64_t))v31)(v50, v52, v4);
  v53 = sub_7413C();
  ActionDispatcher.add<A>(_:)(v53, v4, &type metadata for SeriesListSortActionImplementation, v53);
  v33(v52, v4);
  v54 = sub_5C154(&qword_320150);
  v55 = *((_QWORD *)v68 + 9);
  v56 = v68[80];
  v57 = (v56 + 32) & ~v56;
  v58 = 8 * v55;
  v71 = (char *)swift_allocObject(v54, v57 + 9 * v55, v56 | 7);
  v59 = &v71[v57];
  ((void (*)(char *, char *, uint64_t))v31)(&v71[v57], v78, v4);
  v70 = &v59[v55];
  v31();
  v69 = (uint64_t)&v59[2 * v55];
  v31();
  v68 = &v59[3 * v55];
  v31();
  v60 = &v59[4 * v55];
  ((void (*)(char *, char *, uint64_t))v31)(v60, v74, v4);
  v61 = &v59[5 * v55];
  ((void (*)(char *, char *, uint64_t))v31)(v61, v80, v4);
  v62 = &v59[6 * v55];
  ((void (*)(char *, char *, uint64_t))v31)(v62, v79, v4);
  v63 = &v59[7 * v55];
  ((void (*)(char *, char *, uint64_t))v31)(v63, v48, v4);
  ((void (*)(char *, char *, uint64_t))v31)(&v59[v58], v81, v4);
  ActionDispatcher.init()(v66);
  ActionDispatcher.add(contentsOf:)(v59, v4);
  ActionDispatcher.add(contentsOf:)(v70, v4);
  ActionDispatcher.add(contentsOf:)(v69, v4);
  ActionDispatcher.add(contentsOf:)(v68, v4);
  ActionDispatcher.add(contentsOf:)(v60, v4);
  ActionDispatcher.add(contentsOf:)(v61, v4);
  ActionDispatcher.add(contentsOf:)(v62, v4);
  ActionDispatcher.add(contentsOf:)(v63, v4);
  ActionDispatcher.add(contentsOf:)(&v59[v58], v4);
  v64 = v71;
  swift_setDeallocating(v71);
  swift_arrayDestroy(v59, 9, v4);
  swift_deallocClassInstance(v64, 32, 7);
  v33(v81, v4);
  v33(v73, v4);
  v33(v79, v4);
  v33(v80, v4);
  v33(v74, v4);
  v33(v75, v4);
  v33(v76, v4);
  v33(v77, v4);
  return ((uint64_t (*)(char *, uint64_t))v33)(v78, v4);
}

uint64_t sub_70500@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;

  v2 = type metadata accessor for JSAction(0);
  v3 = sub_648E0(&qword_3200B0, type metadata accessor for JSAction, (uint64_t)&protocol conformance descriptor for JSAction);
  static ActionModel.registerActionKind(name:)(0x6E6F69746341736ALL, 0xE800000000000000, v2, v3);
  v4 = sub_5C154(&qword_3200B8);
  v5 = sub_67060((unint64_t *)&qword_3200C0, &qword_3200B8, (uint64_t)&protocol conformance descriptor for PageUpdateAction<A, B>);
  static ActionModel.registerActionKind(name:)(0xD000000000000010, 0x800000000026F2B0, v4, v5);
  v6 = type metadata accessor for BooksAlertAction(0);
  v7 = sub_648E0(&qword_3200C8, (uint64_t (*)(uint64_t))&type metadata accessor for BooksAlertAction, (uint64_t)&protocol conformance descriptor for BooksAlertAction);
  static ActionModel.registerActionKind(name:)(0xD000000000000010, 0x800000000026F2D0, v6, v7);
  v8 = sub_5C154(&qword_3200D0);
  v9 = sub_67060((unint64_t *)&qword_3200D8, &qword_3200D0, (uint64_t)&protocol conformance descriptor for FlowAction.PageDestination<A>);
  static FlowActionDestination.registerFlowActionDestination(name:)(1701273968, 0xE400000000000000, v8, v9);
  v10 = sub_73F1C();
  static FlowActionDestination.registerFlowActionDestination(name:)(0x65526E4972616579, 0xEC00000077656976, &type metadata for FlowAction.YearInReviewDestination, v10);
  v11 = type metadata accessor for ActionKinds(0);
  result = sub_648E0(&qword_3200E8, (uint64_t (*)(uint64_t))&type metadata accessor for ActionKinds, (uint64_t)&protocol conformance descriptor for ActionKinds);
  *a1 = v11;
  a1[1] = result;
  return result;
}

id sub_706B4@<X0>(_QWORD *a1@<X8>)
{
  id result;

  result = objc_msgSend((id)objc_opt_self(BUBag), "defaultBag");
  *a1 = result;
  return result;
}

uint64_t sub_706F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;

  type metadata accessor for BaseObjectGraph(0);
  v0 = static BaseObjectGraph.current.getter();
  v1 = sub_5C194(0, (unint64_t *)&qword_31FE50, BUBag_ptr);
  BaseObjectGraph.inject<A>(_:)(&v3, v1, v1);
  swift_release(v0);
  return Bag.init(from:)(v3);
}

id sub_70764@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  objc_class *v3;
  char *v4;
  id result;
  objc_super v6;

  type metadata accessor for BaseObjectGraph(0);
  v2 = static BaseObjectGraph.current.getter();
  v3 = (objc_class *)type metadata accessor for JetActionHandler();
  v4 = (char *)objc_allocWithZone(v3);
  *(_QWORD *)&v4[OBJC_IVAR____TtC11BookStoreUI16JetActionHandler_objectGraph] = v2;
  v6.receiver = v4;
  v6.super_class = v3;
  result = objc_msgSendSuper2(&v6, "init");
  *a1 = result;
  a1[1] = &protocol witness table for JetActionHandler;
  return result;
}

id sub_707E4@<X0>(_QWORD *a1@<X8>)
{
  id v3;

  if (qword_31E540 != -1)
    swift_once(&qword_31E540, sub_53A50);
  v3 = (id)qword_31E548;
  a1[3] = type metadata accessor for BSUISharedWithYouController();
  a1[4] = sub_648E0(&qword_31E7A0, (uint64_t (*)(uint64_t))type metadata accessor for BSUISharedWithYouController, (uint64_t)&protocol conformance descriptor for BSUISharedWithYouController);
  *a1 = v3;
  return v3;
}

unint64_t sub_70870@<X0>(_QWORD *a1@<X8>)
{
  void *v2;
  id v3;
  id v4;
  id v5;
  id v6;
  unint64_t result;

  v2 = (void *)objc_opt_self(BSUITemplate);
  v3 = objc_msgSend(v2, "manager");
  v4 = objc_msgSend(v3, "imageResourceCache");

  v5 = objc_msgSend(v2, "manager");
  v6 = objc_msgSend(v5, "resourceRegistry");

  a1[3] = &type metadata for ImageResourceProvider;
  result = sub_737B8();
  a1[4] = result;
  *a1 = v4;
  a1[1] = v6;
  return result;
}

uint64_t sub_7092C@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  void (*v10)(_BYTE *, uint64_t);
  id v11;
  _BYTE v14[40];
  _QWORD v15[6];

  v2 = type metadata accessor for NativeIntentDispatcher(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = &v14[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v6);
  v8 = &v14[-v7 - 8];
  v9 = sub_70A8C((uint64_t)&v14[-v7 - 8]);
  NativeIntentDispatcher.withBuiltInIntentImplementations.getter(v9);
  v10 = *(void (**)(_BYTE *, uint64_t))(v3 + 8);
  v10(v8, v2);
  v11 = objc_msgSend((id)objc_opt_self(JSABridge), "sharedInstance");
  v15[3] = sub_5C194(0, (unint64_t *)&qword_31FFD0, JSABridge_ptr);
  v15[4] = sub_7360C();
  v15[0] = v11;
  a1[3] = v2;
  a1[4] = &protocol witness table for NativeIntentDispatcher;
  sub_668BC(a1);
  (*(void (**)(void))(v3 + 16))();
  sub_5E1A4((uint64_t)v15, (uint64_t)v14, &qword_31FFE0);
  NativeIntentDispatcher.next.setter(v14);
  v10(v5, v2);
  return sub_5E09C((uint64_t)v15, &qword_31FFE0);
}

uint64_t sub_70A8C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  unint64_t v20;
  void (*v21)(char *, uint64_t);
  __n128 v22;
  unint64_t v23;
  __n128 v24;
  unint64_t v25;
  __n128 v26;
  unint64_t v27;
  __n128 v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(uint64_t, char *, uint64_t);
  __n128 v36;
  uint64_t v37;
  _QWORD v39[2];
  char *v40;
  char *v41;
  char *v42;
  char *v43;
  char *v44;
  uint64_t v45;

  v39[1] = a1;
  v1 = type metadata accessor for NativeIntentDispatcher(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)v39 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)v39 - v6;
  __chkstk_darwin(v8);
  v10 = (char *)v39 - v9;
  __chkstk_darwin(v11);
  v13 = (char *)v39 - v12;
  __chkstk_darwin(v14);
  v16 = (char *)v39 - v15;
  v18 = __chkstk_darwin(v17);
  v44 = (char *)v39 - v19;
  NativeIntentDispatcher.init()(v18);
  v20 = sub_73664();
  NativeIntentDispatcher.registering<A>(_:)(v20, &type metadata for SeriesRoomPageIntentImplementation, v20);
  v21 = *(void (**)(char *, uint64_t))(v2 + 8);
  v43 = v16;
  v21(v16, v1);
  NativeIntentDispatcher.init()(v22);
  v23 = sub_736A8();
  NativeIntentDispatcher.registering<A>(_:)(v23, &type metadata for SeriesSeeAllPageIntentImplementation, v23);
  v42 = v13;
  v21(v13, v1);
  v45 = 15;
  NativeIntentDispatcher.init()(v24);
  v25 = sub_736EC();
  NativeIntentDispatcher.registering<A>(_:)(&v45, &type metadata for SeriesSeeAllPaginationIntentImplementation, v25);
  v41 = v10;
  v21(v10, v1);
  NativeIntentDispatcher.init()(v26);
  v27 = sub_73730();
  NativeIntentDispatcher.registering<A>(_:)(v27, &type metadata for SeriesListShelfUpdateIntentImplementation, v27);
  v40 = v7;
  v21(v7, v1);
  NativeIntentDispatcher.init()(v28);
  v29 = sub_73774();
  NativeIntentDispatcher.registering<A>(_:)(v29, &type metadata for YearInReviewPageIntentImplementation, v29);
  v21(v4, v1);
  v30 = sub_5C154(&qword_320010);
  v31 = *(_QWORD *)(v2 + 72);
  v32 = *(unsigned __int8 *)(v2 + 80);
  v33 = (v32 + 32) & ~v32;
  v39[0] = swift_allocObject(v30, v33 + 5 * v31, v32 | 7);
  v34 = v39[0] + v33;
  v35 = *(void (**)(uint64_t, char *, uint64_t))(v2 + 16);
  v35(v39[0] + v33, v44, v1);
  v35(v34 + v31, v43, v1);
  v35(v34 + 2 * v31, v42, v1);
  v35(v34 + 3 * v31, v41, v1);
  v35(v34 + 4 * v31, v40, v1);
  NativeIntentDispatcher.init()(v36);
  NativeIntentDispatcher.register(contentsOf:)(v34);
  NativeIntentDispatcher.register(contentsOf:)(v34 + v31);
  NativeIntentDispatcher.register(contentsOf:)(v34 + 2 * v31);
  NativeIntentDispatcher.register(contentsOf:)(v34 + 3 * v31);
  NativeIntentDispatcher.register(contentsOf:)(v34 + 4 * v31);
  v37 = v39[0];
  swift_setDeallocating(v39[0]);
  swift_arrayDestroy(v34, 5, v1);
  swift_deallocClassInstance(v37, 32, 7);
  v21(v40, v1);
  v21(v41, v1);
  v21(v42, v1);
  v21(v43, v1);
  return ((uint64_t (*)(char *, uint64_t))v21)(v44, v1);
}

uint64_t sub_70DEC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t result;

  v2 = sub_5C154(&qword_31FF78);
  v3 = sub_67060(&qword_31FF80, &qword_31FF78, (uint64_t)&protocol conformance descriptor for StaticIntent<A>);
  static IntentModel<>.registerIntentKind()(v2, v3);
  v4 = sub_734FC();
  static IntentModel<>.registerIntentKind()(&type metadata for EditionsPageIntent, v4);
  v5 = type metadata accessor for JSShelfPaginationIntent(0);
  v6 = sub_648E0((unint64_t *)&qword_31FF90, type metadata accessor for JSShelfPaginationIntent, (uint64_t)&protocol conformance descriptor for JSShelfPaginationIntent);
  static IntentModel<>.registerIntentKind()(v5, v6);
  v7 = sub_73540();
  static IntentModel<>.registerIntentKind()(&_s22LintMetricsEventIntentVN, v7);
  v8 = type metadata accessor for SeriesRoomPageIntent(0);
  v9 = sub_648E0(&qword_31FFA0, type metadata accessor for SeriesRoomPageIntent, (uint64_t)&protocol conformance descriptor for SeriesRoomPageIntent);
  static IntentModel<>.registerIntentKind()(v8, v9);
  v10 = type metadata accessor for SeriesSeeAllPageIntent(0);
  v11 = sub_648E0((unint64_t *)&qword_31FFA8, type metadata accessor for SeriesSeeAllPageIntent, (uint64_t)&protocol conformance descriptor for SeriesSeeAllPageIntent);
  static IntentModel<>.registerIntentKind()(v10, v11);
  v12 = type metadata accessor for SeriesSeeAllPaginationIntent(0);
  v13 = sub_648E0(&qword_31FFB0, type metadata accessor for SeriesSeeAllPaginationIntent, (uint64_t)&protocol conformance descriptor for SeriesSeeAllPaginationIntent);
  static IntentModel<>.registerIntentKind()(v12, v13);
  v14 = sub_73584();
  static IntentModel<>.registerIntentKind()(&type metadata for RecommendationsPageIntent, v14);
  v15 = sub_735C8();
  static IntentModel<>.registerIntentKind()(&type metadata for YearInReviewPageIntent, v15);
  v16 = type metadata accessor for IntentKinds(0);
  result = sub_648E0(&qword_31FFC8, (uint64_t (*)(uint64_t))&type metadata accessor for IntentKinds, (uint64_t)&protocol conformance descriptor for IntentKinds);
  *a1 = v16;
  a1[1] = result;
  return result;
}

uint64_t sub_70FA8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  __n128 v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t (*v46)(char *, uint64_t);
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  char *v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  __int128 v72;
  char *v73;
  uint64_t v74;
  char *v75;
  char *v76;
  char *v77;
  char *v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  char *v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  __int128 v114;
  ValueMetadata *v115;
  unint64_t v116;

  v111 = a1;
  v112 = sub_5C154(&qword_31FF30);
  v110 = *(_QWORD *)(v112 - 8);
  __chkstk_darwin(v112);
  v109 = (char *)&v72 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = sub_5C154(&qword_31FF38);
  v107 = *(_QWORD *)(v2 - 8);
  v108 = v2;
  v3 = __chkstk_darwin(v2);
  v105 = (char *)&v72 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v104 = type metadata accessor for MCatalogServiceConfig(0, v3);
  v106 = *(_QWORD *)(v104 - 8);
  __chkstk_darwin(v104);
  v103 = (char *)&v72 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_5C154(&qword_31FF40);
  v101 = *(_QWORD *)(v6 - 8);
  v102 = v6;
  __chkstk_darwin(v6);
  v100 = (char *)&v72 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_5C154(&qword_31FF48);
  v98 = *(_QWORD *)(v8 - 8);
  v99 = v8;
  __chkstk_darwin(v8);
  v96 = (char *)&v72 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v94 = sub_5C154(&qword_31FF50);
  v93 = *(_QWORD *)(v94 - 8);
  __chkstk_darwin(v94);
  v92 = (char *)&v72 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v90 = sub_5C154(&qword_31FF58);
  v89 = *(_QWORD *)(v90 - 8);
  __chkstk_darwin(v90);
  v87 = (char *)&v72 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v85 = sub_5C154(&qword_31FF60);
  v84 = *(_QWORD *)(v85 - 8);
  v12 = __chkstk_darwin(v85);
  v79 = (char *)&v72 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v81 = type metadata accessor for JSONContext(0, v12);
  v80 = *(_QWORD *)(v81 - 8);
  __chkstk_darwin(v81);
  v75 = (char *)&v72 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v77 = (char *)&v72 - v16;
  __chkstk_darwin(v17);
  v78 = (char *)&v72 - v18;
  __chkstk_darwin(v19);
  v83 = (char *)&v72 - v20;
  __chkstk_darwin(v21);
  v86 = (char *)&v72 - v22;
  __chkstk_darwin(v23);
  v88 = (char *)&v72 - v24;
  v26 = __chkstk_darwin(v25);
  v91 = (char *)&v72 - v27;
  v82 = type metadata accessor for AnyActionTypes(0, v26);
  v97 = *(_QWORD *)(v82 - 8);
  v28 = __chkstk_darwin(v82);
  v73 = (char *)&v72 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v113 = type metadata accessor for AnyIntentTypes(0, v28);
  v95 = *(_QWORD *)(v113 - 8);
  __chkstk_darwin(v113);
  v31 = (char *)&v72 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for BaseObjectGraph(0);
  v32 = ((uint64_t (*)(void))static BaseObjectGraph.current.getter)();
  v33 = sub_5C154(&qword_31FE80);
  BaseObjectGraph.inject<A>(_:)(&v114, v33, v33);
  swift_release(v32);
  v34 = v114;
  v76 = v31;
  v35 = AnyIntentTypes.init(_:)(v114, *((_QWORD *)&v114 + 1));
  v36 = static BaseObjectGraph.current.getter(v35);
  v37 = sub_5C154(&qword_31FE48);
  BaseObjectGraph.inject<A>(_:)(&v114, v37, v37);
  swift_release(v36);
  v38 = v114;
  v39 = AnyActionTypes.init(_:)(v114, *((_QWORD *)&v114 + 1));
  v40 = static BaseObjectGraph.current.getter(v39);
  v74 = sub_5C154(&qword_31FE58);
  BaseObjectGraph.inject<A>(_:)(&v114, v74, v74);
  v41 = swift_release(v40);
  v72 = v114;
  v42 = v75;
  v43 = JSONContext.init()(v41);
  v114 = v34;
  v44 = v79;
  static JSONContext.Property<A>.booksIntentKindTable.getter(v43);
  v45 = v77;
  JSONContext.addingValue<A>(_:forProperty:)(&v114, v44, v33);
  (*(void (**)(char *, uint64_t))(v84 + 8))(v44, v85);
  v46 = *(uint64_t (**)(char *, uint64_t))(v80 + 8);
  v47 = v81;
  v48 = v46(v42, v81);
  v49 = v87;
  static JSONContext.Property<A>.intentTypes.getter(v48);
  v50 = v78;
  JSONContext.addingValue<A>(_:forProperty:)(v31, v49, v113);
  (*(void (**)(char *, uint64_t))(v89 + 8))(v49, v90);
  v51 = v47;
  v52 = v46(v45, v47);
  v114 = v38;
  v53 = v92;
  static JSONContext.Property<A>.actionKindTable.getter(v52);
  v54 = v83;
  JSONContext.addingValue<A>(_:forProperty:)(&v114, v53, v37);
  (*(void (**)(char *, uint64_t))(v93 + 8))(v53, v94);
  v55 = v46(v50, v47);
  v56 = v96;
  static JSONContext.Property<A>.actionTypes.getter(v55);
  v57 = v86;
  v58 = v73;
  v59 = v82;
  JSONContext.addingValue<A>(_:forProperty:)(v73, v56, v82);
  (*(void (**)(char *, uint64_t))(v98 + 8))(v56, v99);
  v60 = v46(v54, v51);
  v114 = v72;
  v61 = v100;
  static JSONContext.Property<A>.booksComponentKindTable.getter(v60);
  v62 = v88;
  JSONContext.addingValue<A>(_:forProperty:)(&v114, v61, v74);
  (*(void (**)(char *, uint64_t))(v101 + 8))(v61, v102);
  v63 = v46(v57, v51);
  v64 = v103;
  v65 = static MCatalogServiceConfig.appMainConfig.getter(v63);
  v66 = v105;
  static JSONContext.Property<A>.catalogServiceConfig.getter(v65);
  v67 = v91;
  v68 = v104;
  JSONContext.addingValue<A>(_:forProperty:)(v64, v66, v104);
  (*(void (**)(char *, uint64_t))(v107 + 8))(v66, v108);
  (*(void (**)(char *, uint64_t))(v106 + 8))(v64, v68);
  v46(v62, v51);
  v115 = &type metadata for PartialObjectGraphProvider.InitFailureObserver;
  v116 = sub_734B8();
  v69 = v109;
  static JSONContext.Property<A>.initFailureObserver.getter();
  v70 = sub_5C154(&qword_31FF70);
  JSONContext.addingValue<A>(_:forProperty:)(&v114, v69, v70);
  (*(void (**)(char *, uint64_t))(v110 + 8))(v69, v112);
  v46(v67, v51);
  (*(void (**)(char *, uint64_t))(v97 + 8))(v58, v59);
  (*(void (**)(char *, uint64_t))(v95 + 8))(v76, v113);
  return _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(&v114);
}

uint64_t sub_717A4@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;

  v2 = type metadata accessor for BaseObjectGraph(0);
  v3 = static BaseObjectGraph.current.getter(v2);
  v4 = type metadata accessor for LibraryAssetStateObserverProvider();
  v5 = (_QWORD *)swift_allocObject(v4, 40, 7);
  v5[4] = objc_msgSend((id)objc_opt_self(NSMapTable), "strongToWeakObjectsMapTable");
  v6 = sub_5C154(&qword_31FE10);
  inject<A, B>(_:from:)(&v9, v6, v3, v6, v2);
  v5[2] = v9;
  v7 = sub_5C194(0, &qword_31FE08, off_2E2F80);
  inject<A, B>(_:from:)(&v9, v7, v3, v7, v2);
  swift_release(v3);
  v5[3] = v9;
  a1[3] = v4;
  result = sub_648E0(&qword_31FF28, (uint64_t (*)(uint64_t))type metadata accessor for LibraryAssetStateObserverProvider, (uint64_t)&unk_25E5B8);
  a1[4] = result;
  *a1 = v5;
  return result;
}

id sub_718C0@<X0>(_QWORD *a1@<X8>)
{
  id result;
  id v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  __int128 v7;
  uint64_t v8;
  _UNKNOWN **v9;

  result = objc_msgSend((id)objc_opt_self(JSAStore), "sharedInstance");
  if (result)
  {
    v3 = result;
    v8 = sub_5C194(0, (unint64_t *)&qword_31FF20, JSAStore_ptr);
    v9 = &protocol witness table for JSAStore;
    *(_QWORD *)&v7 = v3;
    v4 = type metadata accessor for AccountController(0);
    v5 = static AccountController.shared.getter();
    a1[3] = &type metadata for MenuLikeStateController;
    a1[4] = &protocol witness table for MenuLikeStateController;
    v6 = (_QWORD *)swift_allocObject(&unk_2E7F48, 96, 7);
    *a1 = v6;
    v6[10] = v4;
    v6[11] = &protocol witness table for AccountController;
    v6[7] = v5;
    return (id)sub_5DC98(&v7, (uint64_t)(v6 + 2));
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_7199C(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 24) = a1;
  return swift_task_switch(sub_719B4, 0, 0);
}

uint64_t sub_719B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = type metadata accessor for BaseObjectGraph(0);
  *(_QWORD *)(v0 + 32) = static BaseObjectGraph.current.getter(v1);
  v2 = type metadata accessor for LocalizerManager();
  v3 = (_QWORD *)swift_task_alloc(async function pointer to BaseObjectGraph.inject<A>(_:)[1]);
  *(_QWORD *)(v0 + 40) = v3;
  *v3 = v0;
  v3[1] = sub_71A3C;
  return BaseObjectGraph.inject<A>(_:)(v0 + 16, v2, v2);
}

uint64_t sub_71A3C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t (*v4)();
  uint64_t v5;

  v2 = *(_QWORD **)v1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 40);
  *(_QWORD *)(*(_QWORD *)v1 + 48) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = sub_71C94;
    v5 = 0;
  }
  else
  {
    swift_release(v2[4]);
    v5 = v2[2];
    v2[7] = v5;
    v4 = sub_71AB0;
  }
  return swift_task_switch(v4, v5, 0);
}

uint64_t sub_71AB0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(v0[7] + 160);
  v0[8] = v1;
  v2 = async function pointer to Task.value.getter[1];
  swift_retain(v1);
  v3 = (_QWORD *)swift_task_alloc(v2);
  v0[9] = v3;
  v4 = sub_5C154(&qword_31FE28);
  v5 = sub_5C154((uint64_t *)&unk_321CD0);
  *v3 = v0;
  v3[1] = sub_71B50;
  return Task.value.getter(v0[3], v1, v4, v5, &protocol self-conformance witness table for Error);
}

uint64_t sub_71B50()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 72);
  *(_QWORD *)(*v1 + 80) = v0;
  swift_task_dealloc(v3);
  if (v0)
    v4 = sub_71C24;
  else
    v4 = sub_71BB4;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 56), 0);
}

uint64_t sub_71BB4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 64));
  return swift_task_switch(sub_71BF0, 0, 0);
}

uint64_t sub_71BF0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 56));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_71C24()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 64));
  return swift_task_switch(sub_71C60, 0, 0);
}

uint64_t sub_71C60()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 56));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_71C94()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 32));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_71CC8(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return swift_task_switch(sub_71CE0, 0, 0);
}

uint64_t sub_71CE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = type metadata accessor for BaseObjectGraph(0);
  v2 = static BaseObjectGraph.current.getter(v1);
  v3 = type metadata accessor for LocalizerManager();
  swift_allocObject(v3, 168, 15);
  v4 = (_QWORD *)swift_task_alloc(dword_3299AC);
  *(_QWORD *)(v0 + 24) = v4;
  *v4 = v0;
  v4[1] = sub_71D5C;
  return LocalizerManager.init(objectGraph:)(v2);
}

uint64_t sub_71D5C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 24);
  *(_QWORD *)(*(_QWORD *)v1 + 32) = a1;
  swift_task_dealloc(v2);
  return swift_task_switch(sub_71DB8, 0, 0);
}

uint64_t sub_71DB8()
{
  uint64_t v0;

  **(_QWORD **)(v0 + 16) = *(_QWORD *)(v0 + 32);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_71DD0(__n128 a1)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD v9[5];

  v1 = type metadata accessor for MCatalogServiceConfig(0, a1);
  __chkstk_darwin(v1);
  v3 = (char *)&v9[-1] - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  static MCatalogServiceConfig.appMainConfig.getter(v4);
  v5 = type metadata accessor for BaseObjectGraph(0);
  v6 = static BaseObjectGraph.current.getter(v5);
  v9[3] = &type metadata for MCatalogRequestIntentHandler;
  v9[4] = sub_73448();
  v9[0] = v6;
  return MCatalogService.init(config:requestHandler:)(v3, v9);
}

uint64_t sub_71E74@<X0>(uint64_t *a1@<X8>)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;

  type metadata accessor for MetricsController(0);
  v2 = (void *)static MetricsController.shared.getter();
  v3 = MetricsController.metrics.getter();

  v4 = static Metrics.defaultTopic.getter();
  v6 = v5;
  v7 = type metadata accessor for AMSMetricsEventRecorder(0);
  swift_allocObject(v7, *(unsigned int *)(v7 + 48), *(unsigned __int16 *)(v7 + 52));
  result = AMSMetricsEventRecorder.init(metrics:defaultTopic:)(v3, v4, v6);
  a1[3] = v7;
  a1[4] = (uint64_t)&protocol witness table for AMSMetricsEventRecorder;
  *a1 = result;
  return result;
}

uint64_t sub_71F0C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  __n128 v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  id v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _BYTE v50[40];
  _QWORD v51[3];
  ValueMetadata *v52;
  void *v53;
  _QWORD v54[6];

  v49 = a1;
  v1 = type metadata accessor for MetricsFieldExclusionRequest(0);
  v47 = *(_QWORD *)(v1 - 8);
  v48 = v1;
  v2 = __chkstk_darwin(v1);
  v4 = (char *)&v40 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for MetricsFieldInclusionRequest(0, v2);
  v41 = *(_QWORD *)(v5 - 8);
  v6 = __chkstk_darwin(v5);
  v8 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for MetricsFieldsAggregator(0, v6);
  v45 = *(_QWORD *)(v9 - 8);
  v46 = v9;
  __chkstk_darwin(v9);
  v44 = (char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __chkstk_darwin(v11);
  v14 = (char *)&v40 - v13;
  v15 = type metadata accessor for Bag(0, v12);
  v43 = *(_QWORD *)(v15 - 8);
  v16 = v43;
  __chkstk_darwin(v15);
  v18 = (char *)&v40 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v21 = (uint64_t *)((char *)&v40 - v20);
  v22 = type metadata accessor for BaseObjectGraph(0);
  v23 = static BaseObjectGraph.current.getter(v22);
  BaseObjectGraph.inject<A>(_:)(v21, v15, v15);
  v24 = swift_release(v23);
  v25 = static BaseObjectGraph.current.getter(v24);
  v26 = sub_5C154((uint64_t *)&unk_31FEA8);
  BaseObjectGraph.inject<A>(_:)(v54, v26, v26);
  v27 = swift_release(v25);
  v42 = static BaseObjectGraph.current.getter(v27);
  (*(void (**)(char *, _QWORD *, uint64_t))(v16 + 16))(v18, v21, v15);
  v28 = objc_msgSend((id)objc_opt_self(ACAccountStore), "ams_sharedAccountStore");
  v52 = (ValueMetadata *)sub_5C194(0, &qword_31FEE8, ACAccountStore_ptr);
  v53 = &protocol witness table for ACAccountStore;
  v51[0] = v28;
  v29 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  MetricsFieldsAggregator.init(bag:accountProvider:bundle:)(v18, v51, v29);
  v52 = (ValueMetadata *)type metadata accessor for ActionContextFieldProvider(0);
  v53 = (void *)sub_648E0(&qword_31FEF0, (uint64_t (*)(uint64_t))&type metadata accessor for ActionContextFieldProvider, (uint64_t)&protocol conformance descriptor for ActionContextFieldProvider);
  sub_668BC(v51);
  v30 = ActionContextFieldProvider.init()();
  static MetricsFieldInclusionRequest.actionContext.getter(v30);
  MetricsFieldsAggregator.addOptInProvider(_:forRequest:)(v51, v8);
  v31 = *(void (**)(char *, uint64_t))(v41 + 8);
  v31(v8, v5);
  _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(v51);
  v52 = (ValueMetadata *)type metadata accessor for LocationFieldProvider(0);
  v53 = (void *)sub_648E0(&qword_31FEF8, (uint64_t (*)(uint64_t))&type metadata accessor for LocationFieldProvider, (uint64_t)&protocol conformance descriptor for LocationFieldProvider);
  sub_668BC(v51);
  v32 = LocationFieldProvider.init()();
  static MetricsFieldInclusionRequest.location.getter(v32);
  MetricsFieldsAggregator.addOptInProvider(_:forRequest:)(v51, v8);
  v31(v8, v5);
  _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(v51);
  v33 = type metadata accessor for JSPageHistoryFieldProvider();
  v34 = swift_allocObject(v33, 16, 7);
  v52 = (ValueMetadata *)v33;
  v53 = (void *)sub_648E0(&qword_31FF00, (uint64_t (*)(uint64_t))type metadata accessor for JSPageHistoryFieldProvider, (uint64_t)&unk_2588EC);
  v51[0] = v34;
  static MetricsFieldExclusionRequest.pageHistory.getter();
  MetricsFieldsAggregator.addOptOutProvider(_:forRequest:)(v51, v4);
  (*(void (**)(char *, uint64_t))(v47 + 8))(v4, v48);
  _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(v51);
  v35 = type metadata accessor for StandardMetricsFieldsBuilder(0);
  v37 = v44;
  v36 = v45;
  v38 = v46;
  (*(void (**)(char *, char *, uint64_t))(v45 + 16))(v44, v14, v46);
  v52 = &_s20JSMetricsEventLinterVN;
  v53 = (void *)sub_73404();
  v51[0] = v42;
  sub_5E0D8((uint64_t)v54, (uint64_t)v50);
  MetricsPipeline.init(builderType:aggregator:linter:recorder:)(v35, &protocol witness table for StandardMetricsFieldsBuilder, v37, v51, v50);
  (*(void (**)(char *, uint64_t))(v36 + 8))(v14, v38);
  _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(v54);
  return (*(uint64_t (**)(_QWORD *, uint64_t))(v43 + 8))(v21, v15);
}

uint64_t sub_72370@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  type metadata accessor for BaseObjectGraph(0);
  result = static BaseObjectGraph.current.getter();
  *a1 = result;
  return result;
}

id sub_723A0@<X0>(_QWORD *a1@<X8>)
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for ProfileRestrictions(0)), "init");
  *a1 = result;
  return result;
}

uint64_t sub_723D8@<X0>(uint64_t a1@<X8>)
{
  return sub_72400(a1);
}

uint64_t sub_72400@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  void (*v13)(char *, uint64_t);
  __n128 v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(uint64_t, char *, uint64_t);
  __n128 v23;
  _QWORD v25[2];

  v25[1] = a1;
  v1 = type metadata accessor for SynchronousNativeIntentDispatcher(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)v25 - v6;
  v9 = __chkstk_darwin(v8);
  v11 = (char *)v25 - v10;
  SynchronousNativeIntentDispatcher.init()(v9);
  v12 = sub_7337C();
  SynchronousNativeIntentDispatcher.registering<A>(_:)(v12, &type metadata for SeriesRoomPageIntentImplementation, v12);
  v13 = *(void (**)(char *, uint64_t))(v2 + 8);
  v13(v7, v1);
  SynchronousNativeIntentDispatcher.init()(v14);
  v15 = sub_733C0();
  SynchronousNativeIntentDispatcher.registering<A>(_:)(v15, &type metadata for SeriesSeeAllPageIntentImplementation, v15);
  v13(v4, v1);
  v16 = sub_5C154(&qword_31FEE0);
  v17 = *(_QWORD *)(v2 + 72);
  v18 = *(unsigned __int8 *)(v2 + 80);
  v19 = (v18 + 32) & ~v18;
  v20 = swift_allocObject(v16, v19 + 2 * v17, v18 | 7);
  v21 = v20 + v19;
  v22 = *(void (**)(uint64_t, char *, uint64_t))(v2 + 16);
  v22(v21, v11, v1);
  v22(v21 + v17, v7, v1);
  SynchronousNativeIntentDispatcher.init()(v23);
  SynchronousNativeIntentDispatcher.register(contentsOf:)(v21);
  SynchronousNativeIntentDispatcher.register(contentsOf:)(v21 + v17);
  swift_setDeallocating(v20);
  swift_arrayDestroy(v21, 2, v1);
  swift_deallocClassInstance(v20, 32, 7);
  v13(v7, v1);
  return ((uint64_t (*)(char *, uint64_t))v13)(v11, v1);
}

uint64_t sub_725D8()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v1[29] = v0;
  v2 = type metadata accessor for Dependency(0);
  v1[30] = v2;
  v3 = *(_QWORD *)(v2 - 8);
  v1[31] = v3;
  v1[32] = swift_task_alloc((*(_QWORD *)(v3 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_5C194(0, &qword_31FE08, off_2E2F80);
  v5 = (uint64_t)v1 + *(int *)(sub_5C154(&qword_320158) + 32) + 16;
  v6 = (_QWORD *)swift_task_alloc(async function pointer to BaseObjectGraph.inject<A>(_:)[1]);
  v1[33] = v6;
  *v6 = v1;
  v6[1] = sub_72698;
  return BaseObjectGraph.inject<A>(_:)(v5, v4, v4);
}

uint64_t sub_72698()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 264);
  *(_QWORD *)(*(_QWORD *)v1 + 272) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_726FC;
  else
    v3 = sub_72730;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_726FC()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(v0 + 256));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_72730()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v0[35] = 1;
  v1 = sub_5C154(&qword_31FE10);
  v2 = sub_5C154(&qword_320158);
  v0[36] = v2;
  v3 = (uint64_t)v0 + *(int *)(v2 + 48) + 16;
  v4 = (_QWORD *)swift_task_alloc(async function pointer to BaseObjectGraph.inject<A>(_:)[1]);
  v0[37] = v4;
  *v4 = v0;
  v4[1] = sub_727C8;
  return BaseObjectGraph.inject<A>(_:)(v3, v1, v1);
}

uint64_t sub_727C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 296);
  *(_QWORD *)(*(_QWORD *)v1 + 304) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_72B50;
  else
    v3 = sub_7282C;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_7282C()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t result;
  uint64_t v25;

  v1 = *(_QWORD *)(v0 + 280);
  if (v1 == 4)
  {
    v2 = *(_QWORD *)(v0 + 248);
    v25 = v0 + 120;
    sub_5E1A4(v0 + 16, v0 + 120, &qword_320158);
    v3 = 0;
    v4 = &_swiftEmptyArrayStorage;
    v5 = 32;
    while (2)
    {
      switch(v3)
      {
        case 0:
          v6 = sub_5C194(0, &qword_31FE08, off_2E2F80);
          goto LABEL_10;
        case 1:
          v7 = &qword_31FE10;
          goto LABEL_9;
        case 2:
          v7 = (uint64_t *)&unk_31FE18;
          goto LABEL_9;
        case 3:
          v7 = (uint64_t *)&unk_31FE20;
          goto LABEL_9;
        case 4:
          v7 = &qword_31FE28;
LABEL_9:
          v6 = sub_5C154(v7);
LABEL_10:
          v8 = v6;
          v9 = v25 + *(int *)(*(_QWORD *)(v0 + 288) + v5);
          v10 = *(_QWORD *)(v6 - 8);
          v11 = swift_task_alloc((*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(v11, v9, v8);
          Dependency.init<A>(satisfying:with:)(v8, v11, v8);
          swift_task_dealloc(v11);
          if ((swift_isUniquelyReferenced_nonNull_native(v4) & 1) == 0)
            v4 = (_QWORD *)sub_56CA0(0, v4[2] + 1, 1, (unint64_t)v4);
          v13 = v4[2];
          v12 = v4[3];
          if (v13 >= v12 >> 1)
            v4 = (_QWORD *)sub_56CA0(v12 > 1, v13 + 1, 1, (unint64_t)v4);
          v14 = *(_QWORD *)(v0 + 256);
          v15 = *(_QWORD *)(v0 + 240);
          v4[2] = v13 + 1;
          (*(void (**)(unint64_t, uint64_t, uint64_t))(v2 + 32))((unint64_t)v4+ ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80))+ *(_QWORD *)(v2 + 72) * v13, v14, v15);
          ++v3;
          v5 += 16;
          if (v5 != 112)
            continue;
          v20 = *(_QWORD *)(v0 + 256);
          *(_QWORD *)(v0 + 224) = v4;
          v21 = sub_5C154((uint64_t *)&unk_31FEC0);
          v22 = sub_67060((unint64_t *)&qword_31FAC0, (uint64_t *)&unk_31FEC0, (uint64_t)&protocol conformance descriptor for [A]);
          v23 = dispatch thunk of BaseObjectGraph.adding<A>(allDependencies:)(v0 + 224, v21, v22);
          swift_bridgeObjectRelease(v4);
          sub_5E09C(v25, &qword_320158);
          sub_5E09C(v0 + 16, &qword_320158);
          swift_task_dealloc(v20);
          result = (*(uint64_t (**)(uint64_t))(v0 + 8))(v23);
          break;
        default:
          __break(1u);
          goto LABEL_19;
      }
      break;
    }
  }
  else
  {
    *(_QWORD *)(v0 + 280) = v1 + 1;
    if (v1 >= 4)
    {
LABEL_19:
      __break(1u);
      JUMPOUT(0x72B3CLL);
    }
    v16 = sub_5C154((&off_2E7F80)[v1]);
    v17 = sub_5C154(&qword_320158);
    *(_QWORD *)(v0 + 288) = v17;
    v18 = v0 + 16 + *(int *)(v17 + 16 * v1 + 48);
    v19 = (_QWORD *)swift_task_alloc(async function pointer to BaseObjectGraph.inject<A>(_:)[1]);
    *(_QWORD *)(v0 + 296) = v19;
    *v19 = v0;
    v19[1] = sub_727C8;
    return BaseObjectGraph.inject<A>(_:)(v18, v16, v16);
  }
  return result;
}

void sub_72B50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (*(_QWORD *)(v0 + 272))
  {
LABEL_2:
    swift_task_dealloc(*(_QWORD *)(v0 + 256));
    (*(void (**)(void))(v0 + 8))();
    return;
  }
  v1 = *(_QWORD *)(v0 + 280);
  v2 = 16 * v1 + 16;
  while (1)
  {
    v4 = v1--;
    if (v1)
      break;
    v3 = sub_5C194(0, &qword_31FE08, off_2E2F80);
LABEL_5:
    (*(void (**)(uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v0 + 16 + *(int *)(*(_QWORD *)(v0 + 288) + v2));
    v2 -= 16;
    if (!v1)
      goto LABEL_2;
  }
  switch(v4)
  {
    case 2:
      v3 = sub_5C154(&qword_31FE10);
      goto LABEL_5;
    case 3:
      v3 = sub_5C154(&qword_31FE18);
      goto LABEL_5;
    case 4:
      v3 = sub_5C154(&qword_31FE20);
      goto LABEL_5;
  }
  __break(1u);
}

uint64_t BaseObjectGraph.withAsyncDependenciesResolved<each A>(_:)(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  __n128 *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t TupleTypeMetadata;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  unint64_t v13;
  __n128 *v14;
  __n128 *v15;
  unint64_t v16;
  __n128 v17;
  unint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  unint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;

  v4[4] = a3;
  v4[5] = v3;
  v4[3] = a2;
  v6 = (__n128 *)(a3 & 0xFFFFFFFFFFFFFFFELL);
  v7 = type metadata accessor for Dependency(0);
  v4[6] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v4[7] = v8;
  v4[8] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2 == 1)
  {
    TupleTypeMetadata = v6->n128_u64[0];
  }
  else
  {
    v10 = swift_task_alloc((8 * a2 + 15) & 0xFFFFFFFFFFFFFFF0);
    v12 = v10;
    if (a2)
    {
      v13 = 0;
      if (a2 < 4)
        goto LABEL_9;
      if ((unint64_t)(v10 - (_QWORD)v6) < 0x20)
        goto LABEL_9;
      v13 = a2 & 0xFFFFFFFFFFFFFFFCLL;
      v14 = v6 + 1;
      v15 = (__n128 *)(v10 + 16);
      v16 = a2 & 0xFFFFFFFFFFFFFFFCLL;
      do
      {
        v11 = v14[-1];
        v17 = *v14;
        v15[-1] = v11;
        *v15 = v17;
        v14 += 2;
        v15 += 2;
        v16 -= 4;
      }
      while (v16);
      if (v13 != a2)
      {
LABEL_9:
        v18 = a2 - v13;
        v19 = v13;
        v20 = (_QWORD *)(v10 + 8 * v13);
        v21 = &v6->n128_u64[v19];
        do
        {
          v22 = *v21++;
          *v20++ = v22;
          --v18;
        }
        while (v18);
      }
    }
    TupleTypeMetadata = swift_getTupleTypeMetadata(0, a2, v11);
    swift_task_dealloc(v12);
  }
  v4[9] = TupleTypeMetadata;
  v23 = *(_QWORD *)(TupleTypeMetadata - 8);
  v4[10] = v23;
  v24 = (*(_QWORD *)(v23 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4[11] = swift_task_alloc(v24);
  v4[12] = swift_task_alloc(v24);
  return swift_task_switch(sub_72DB8, 0, 0);
}

uint64_t sub_72DB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t);
  uint64_t v16;

  v1 = *(_QWORD *)(v0 + 24);
  if (v1)
  {
    v2 = 0;
    v3 = (uint64_t *)(*(_QWORD *)(v0 + 32) & 0xFFFFFFFFFFFFFELL);
    *(_QWORD *)(v0 + 104) = 0;
    v4 = *v3;
    if (v1 != 1)
      v2 = *(int *)(*(_QWORD *)(v0 + 72) + 32);
    v5 = *(_QWORD *)(v0 + 96) + v2;
    v6 = (_QWORD *)swift_task_alloc(async function pointer to BaseObjectGraph.inject<A>(_:)[1]);
    *(_QWORD *)(v0 + 112) = v6;
    *v6 = v0;
    v6[1] = sub_72F44;
    return BaseObjectGraph.inject<A>(_:)(v5, v4, v4);
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 80) + 16))(*(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 72));
    v9 = *(_QWORD *)(v0 + 88);
    v8 = *(_QWORD *)(v0 + 96);
    v10 = *(_QWORD *)(v0 + 72);
    v11 = *(_QWORD *)(v0 + 80);
    v16 = *(_QWORD *)(v0 + 64);
    *(_QWORD *)(v0 + 16) = &_swiftEmptyArrayStorage;
    v12 = sub_5C154((uint64_t *)&unk_31FEC0);
    v13 = sub_67060((unint64_t *)&qword_31FAC0, (uint64_t *)&unk_31FEC0, (uint64_t)&protocol conformance descriptor for [A]);
    v14 = dispatch thunk of BaseObjectGraph.adding<A>(allDependencies:)(v0 + 16, v12, v13);
    swift_bridgeObjectRelease(&_swiftEmptyArrayStorage);
    v15 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
    v15(v9, v10);
    v15(v8, v10);
    swift_task_dealloc(v8);
    swift_task_dealloc(v9);
    swift_task_dealloc(v16);
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(v14);
  }
}

uint64_t sub_72F44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 112);
  *(_QWORD *)(*(_QWORD *)v1 + 120) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_7326C;
  else
    v3 = sub_72FA8;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_72FA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(uint64_t, uint64_t);
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;

  v1 = *(_QWORD *)(v0 + 24);
  v2 = *(_QWORD *)(v0 + 104) + 1;
  if (v2 == v1)
  {
    v3 = *(_QWORD *)(v0 + 56);
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 80) + 16))(*(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 72));
    v4 = 0;
    v5 = &_swiftEmptyArrayStorage;
    v6 = 32;
    do
    {
      if (*(_QWORD *)(v0 + 24) == 1)
        v7 = 0;
      else
        v7 = *(_DWORD *)(*(_QWORD *)(v0 + 72) + v6);
      v8 = *(_QWORD *)((*(_QWORD *)(v0 + 32) & 0xFFFFFFFFFFFFFELL) + 8 * v4);
      v9 = *(_QWORD *)(v0 + 88) + v7;
      v10 = *(_QWORD *)(v8 - 8);
      v11 = swift_task_alloc((*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(v11, v9, v8);
      Dependency.init<A>(satisfying:with:)(v8, v11, v8);
      swift_task_dealloc(v11);
      if ((swift_isUniquelyReferenced_nonNull_native(v5) & 1) == 0)
        v5 = (_QWORD *)sub_56CA0(0, v5[2] + 1, 1, (unint64_t)v5);
      v13 = v5[2];
      v12 = v5[3];
      if (v13 >= v12 >> 1)
        v5 = (_QWORD *)sub_56CA0(v12 > 1, v13 + 1, 1, (unint64_t)v5);
      v14 = *(_QWORD *)(v0 + 64);
      v15 = *(_QWORD *)(v0 + 48);
      v16 = *(_QWORD *)(v0 + 24);
      v5[2] = v13 + 1;
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v3 + 32))((unint64_t)v5+ ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))+ *(_QWORD *)(v3 + 72) * v13, v14, v15);
      ++v4;
      v6 += 16;
    }
    while (v4 != v16);
    v20 = *(_QWORD *)(v0 + 88);
    v19 = *(_QWORD *)(v0 + 96);
    v21 = *(_QWORD *)(v0 + 72);
    v22 = *(_QWORD *)(v0 + 80);
    v30 = *(_QWORD *)(v0 + 64);
    *(_QWORD *)(v0 + 16) = v5;
    v23 = sub_5C154((uint64_t *)&unk_31FEC0);
    v24 = sub_67060((unint64_t *)&qword_31FAC0, (uint64_t *)&unk_31FEC0, (uint64_t)&protocol conformance descriptor for [A]);
    v25 = dispatch thunk of BaseObjectGraph.adding<A>(allDependencies:)(v0 + 16, v23, v24);
    swift_bridgeObjectRelease(v5);
    v26 = *(void (**)(uint64_t, uint64_t))(v22 + 8);
    v26(v20, v21);
    v26(v19, v21);
    swift_task_dealloc(v19);
    swift_task_dealloc(v20);
    swift_task_dealloc(v30);
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(v25);
  }
  else
  {
    *(_QWORD *)(v0 + 104) = v2;
    v17 = *(_QWORD *)((*(_QWORD *)(v0 + 32) & 0xFFFFFFFFFFFFFELL) + 8 * v2);
    if (v1 == 1)
      v18 = 0;
    else
      v18 = *(int *)(*(_QWORD *)(v0 + 72) + 16 * v2 + 32);
    v28 = *(_QWORD *)(v0 + 96) + v18;
    v29 = (_QWORD *)swift_task_alloc(async function pointer to BaseObjectGraph.inject<A>(_:)[1]);
    *(_QWORD *)(v0 + 112) = v29;
    *v29 = v0;
    v29[1] = sub_72F44;
    return BaseObjectGraph.inject<A>(_:)(v28, v17, v17);
  }
}

uint64_t sub_7326C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 104);
  if (v1)
  {
    v2 = v1 - 1;
    v3 = 16 * v1 + 16;
    do
    {
      if (*(_QWORD *)(v0 + 24) == 1)
        v4 = 0;
      else
        v4 = *(_DWORD *)(*(_QWORD *)(v0 + 72) + v3);
      (*(void (**)(_QWORD))(*(_QWORD *)(*(_QWORD *)((*(_QWORD *)(v0 + 32) & 0xFFFFFFFFFFFFFELL) + 8 * v2--)
                                                 - 8)
                                     + 8))(*(_QWORD *)(v0 + 96) + v4);
      v3 -= 16;
    }
    while (v2 != -1);
  }
  v5 = *(_QWORD *)(v0 + 88);
  v6 = *(_QWORD *)(v0 + 64);
  swift_task_dealloc(*(_QWORD *)(v0 + 96));
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_7331C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  sub_73A3C();
  v2 = type metadata accessor for ComponentKinds(0);
  result = sub_648E0(&qword_320028, (uint64_t (*)(uint64_t))&type metadata accessor for ComponentKinds, (uint64_t)&protocol conformance descriptor for ComponentKinds);
  *a1 = v2;
  a1[1] = result;
  return result;
}

ValueMetadata *type metadata accessor for PartialObjectGraphProvider()
{
  return &type metadata for PartialObjectGraphProvider;
}

unint64_t sub_7337C()
{
  unint64_t result;

  result = qword_31FED0;
  if (!qword_31FED0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for SeriesRoomPageIntentImplementation, &type metadata for SeriesRoomPageIntentImplementation);
    atomic_store(result, (unint64_t *)&qword_31FED0);
  }
  return result;
}

unint64_t sub_733C0()
{
  unint64_t result;

  result = qword_31FED8;
  if (!qword_31FED8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for SeriesSeeAllPageIntentImplementation, &type metadata for SeriesSeeAllPageIntentImplementation);
    atomic_store(result, (unint64_t *)&qword_31FED8);
  }
  return result;
}

unint64_t sub_73404()
{
  unint64_t result;

  result = qword_31FF08;
  if (!qword_31FF08)
  {
    result = swift_getWitnessTable(&unk_266160, &_s20JSMetricsEventLinterVN);
    atomic_store(result, (unint64_t *)&qword_31FF08);
  }
  return result;
}

unint64_t sub_73448()
{
  unint64_t result;

  result = qword_31FF10;
  if (!qword_31FF10)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for MCatalogRequestIntentHandler, &type metadata for MCatalogRequestIntentHandler);
    atomic_store(result, (unint64_t *)&qword_31FF10);
  }
  return result;
}

uint64_t sub_7348C()
{
  uint64_t v0;

  _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((_QWORD *)(v0 + 16));
  _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((_QWORD *)(v0 + 56));
  return swift_deallocObject(v0, 96, 7);
}

unint64_t sub_734B8()
{
  unint64_t result;

  result = qword_31FF68;
  if (!qword_31FF68)
  {
    result = swift_getWitnessTable(&unk_2580D4, &type metadata for PartialObjectGraphProvider.InitFailureObserver);
    atomic_store(result, (unint64_t *)&qword_31FF68);
  }
  return result;
}

unint64_t sub_734FC()
{
  unint64_t result;

  result = qword_31FF88;
  if (!qword_31FF88)
  {
    result = swift_getWitnessTable(&unk_258704, &type metadata for EditionsPageIntent);
    atomic_store(result, (unint64_t *)&qword_31FF88);
  }
  return result;
}

unint64_t sub_73540()
{
  unint64_t result;

  result = qword_31FF98;
  if (!qword_31FF98)
  {
    result = swift_getWitnessTable(&unk_266110, &_s22LintMetricsEventIntentVN);
    atomic_store(result, (unint64_t *)&qword_31FF98);
  }
  return result;
}

unint64_t sub_73584()
{
  unint64_t result;

  result = qword_31FFB8;
  if (!qword_31FFB8)
  {
    result = swift_getWitnessTable(&unk_268B48, &type metadata for RecommendationsPageIntent);
    atomic_store(result, (unint64_t *)&qword_31FFB8);
  }
  return result;
}

unint64_t sub_735C8()
{
  unint64_t result;

  result = qword_31FFC0;
  if (!qword_31FFC0)
  {
    result = swift_getWitnessTable(&unk_25F358, &type metadata for YearInReviewPageIntent);
    atomic_store(result, (unint64_t *)&qword_31FFC0);
  }
  return result;
}

unint64_t sub_7360C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_31FFD8;
  if (!qword_31FFD8)
  {
    v1 = sub_5C194(255, (unint64_t *)&qword_31FFD0, JSABridge_ptr);
    result = swift_getWitnessTable(&protocol conformance descriptor for JSABridge, v1);
    atomic_store(result, (unint64_t *)&qword_31FFD8);
  }
  return result;
}

unint64_t sub_73664()
{
  unint64_t result;

  result = qword_31FFE8;
  if (!qword_31FFE8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for SeriesRoomPageIntentImplementation, &type metadata for SeriesRoomPageIntentImplementation);
    atomic_store(result, (unint64_t *)&qword_31FFE8);
  }
  return result;
}

unint64_t sub_736A8()
{
  unint64_t result;

  result = qword_31FFF0;
  if (!qword_31FFF0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for SeriesSeeAllPageIntentImplementation, &type metadata for SeriesSeeAllPageIntentImplementation);
    atomic_store(result, (unint64_t *)&qword_31FFF0);
  }
  return result;
}

unint64_t sub_736EC()
{
  unint64_t result;

  result = qword_31FFF8;
  if (!qword_31FFF8)
  {
    result = swift_getWitnessTable(&unk_263FAC, &type metadata for SeriesSeeAllPaginationIntentImplementation);
    atomic_store(result, (unint64_t *)&qword_31FFF8);
  }
  return result;
}

unint64_t sub_73730()
{
  unint64_t result;

  result = qword_320000;
  if (!qword_320000)
  {
    result = swift_getWitnessTable(&unk_25FC8C, &type metadata for SeriesListShelfUpdateIntentImplementation);
    atomic_store(result, (unint64_t *)&qword_320000);
  }
  return result;
}

unint64_t sub_73774()
{
  unint64_t result;

  result = qword_320008;
  if (!qword_320008)
  {
    result = swift_getWitnessTable(&unk_2601C8, &type metadata for YearInReviewPageIntentImplementation);
    atomic_store(result, (unint64_t *)&qword_320008);
  }
  return result;
}

unint64_t sub_737B8()
{
  unint64_t result;

  result = qword_320018;
  if (!qword_320018)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for ImageResourceProvider, &type metadata for ImageResourceProvider);
    atomic_store(result, (unint64_t *)&qword_320018);
  }
  return result;
}

void sub_737FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  os_log_type_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *oslog;
  uint64_t v16;
  uint64_t v17;

  if (qword_31E5C8 != -1)
    swift_once(&qword_31E5C8, sub_1268C0);
  v4 = type metadata accessor for Logger(0);
  sub_5240C(v4, (uint64_t)qword_325100);
  swift_errorRetain(a2);
  v5 = swift_errorRetain(a2);
  oslog = Logger.logObject.getter(v5);
  v6 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(oslog, v6))
  {
    v7 = swift_slowAlloc(22, -1);
    v8 = (uint64_t *)swift_slowAlloc(8, -1);
    v9 = swift_slowAlloc(32, -1);
    v17 = v9;
    *(_DWORD *)v7 = 136315394;
    v10 = _typeName(_:qualified:)(a1, 0);
    v12 = v11;
    v16 = sub_57CD8(v10, v11, &v17);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v16, &v17, v7 + 4, v7 + 12);
    swift_bridgeObjectRelease(v12);
    *(_WORD *)(v7 + 12) = 2112;
    swift_errorRetain(a2);
    v13 = _swift_stdlib_bridgeErrorToNSError(a2);
    v16 = v13;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v16, &v17, v7 + 14, v7 + 22);
    *v8 = v13;
    swift_errorRelease(a2);
    swift_errorRelease(a2);
    _os_log_impl(&dword_0, oslog, v6, "Failed to initialize %s with error: %@", (uint8_t *)v7, 0x16u);
    v14 = sub_5C154(&qword_32A000);
    swift_arrayDestroy(v8, 1, v14);
    swift_slowDealloc(v8, -1, -1);
    swift_arrayDestroy(v9, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v9, -1, -1);
    swift_slowDealloc(v7, -1, -1);

  }
  else
  {
    swift_errorRelease(a2);
    swift_errorRelease(a2);

  }
}

uint64_t sub_73A3C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v0 = type metadata accessor for ContentUnavailableComponentModel(0);
  v1 = sub_648E0(&qword_320030, type metadata accessor for ContentUnavailableComponentModel, (uint64_t)&protocol conformance descriptor for ContentUnavailableComponentModel);
  static ComponentModel.registerComponentKind(name:)(0xD000000000000012, 0x800000000026F210, v0, v1);
  v2 = type metadata accessor for DescriptionHeaderComponentModel(0);
  v3 = sub_648E0(&qword_320038, type metadata accessor for DescriptionHeaderComponentModel, (uint64_t)&unk_25C170);
  static ComponentModel.registerComponentKind(name:)(0xD000000000000011, 0x800000000026F230, v2, v3);
  v4 = type metadata accessor for DividerComponentModel(0);
  v5 = sub_648E0(&qword_320040, type metadata accessor for DividerComponentModel, (uint64_t)&unk_260020);
  static ComponentModel.registerComponentKind(name:)(0x72656469766964, 0xE700000000000000, v4, v5);
  v6 = type metadata accessor for EmptyComponentModel(0);
  v7 = sub_648E0(&qword_320048, type metadata accessor for EmptyComponentModel, (uint64_t)&unk_25B850);
  static ComponentModel.registerComponentKind(name:)(0x7974706D65, 0xE500000000000000, v6, v7);
  v8 = type metadata accessor for InfoItemComponentModel(0);
  v9 = sub_648E0(&qword_320050, type metadata accessor for InfoItemComponentModel, (uint64_t)&unk_258FD0);
  static ComponentModel.registerComponentKind(name:)(0x6D6574496F666E69, 0xE800000000000000, v8, v9);
  v10 = type metadata accessor for ListItemComponentModel(0);
  v11 = sub_648E0(&qword_320058, type metadata accessor for ListItemComponentModel, (uint64_t)&protocol conformance descriptor for ListItemComponentModel);
  static ComponentModel.registerComponentKind(name:)(0x6D6574497473696CLL, 0xE800000000000000, v10, v11);
  v12 = type metadata accessor for RatingSummaryComponentModel(0);
  v13 = sub_648E0(&qword_320060, type metadata accessor for RatingSummaryComponentModel, (uint64_t)&unk_25BC60);
  static ComponentModel.registerComponentKind(name:)(0x7553676E69746172, 0xED00007972616D6DLL, v12, v13);
  v14 = type metadata accessor for RecommendationItemComponentModel(0);
  v15 = sub_648E0(&qword_320068, type metadata accessor for RecommendationItemComponentModel, (uint64_t)&unk_25CC18);
  static ComponentModel.registerComponentKind(name:)(0xD000000000000012, 0x800000000026F250, v14, v15);
  v16 = type metadata accessor for ReviewBrickComponentModel(0);
  v17 = sub_648E0(&qword_320070, type metadata accessor for ReviewBrickComponentModel, (uint64_t)&protocol conformance descriptor for ReviewBrickComponentModel);
  static ComponentModel.registerComponentKind(name:)(0x7242776569766572, 0xEB000000006B6369, v16, v17);
  v18 = type metadata accessor for ReviewsHeaderComponentModel(0);
  v19 = sub_648E0(&qword_320078, type metadata accessor for ReviewsHeaderComponentModel, (uint64_t)&unk_269628);
  static ComponentModel.registerComponentKind(name:)(0x4873776569766572, 0xED00007265646165, v18, v19);
  v20 = type metadata accessor for SeeAllFooterComponentModel(0);
  v21 = sub_648E0(&qword_320080, type metadata accessor for SeeAllFooterComponentModel, (uint64_t)&unk_25EEC0);
  static ComponentModel.registerComponentKind(name:)(0x6F466C6C41656573, 0xEC0000007265746FLL, v20, v21);
  v22 = type metadata accessor for SeriesEntityCardComponentModel(0);
  v23 = sub_648E0(&qword_320088, type metadata accessor for SeriesEntityCardComponentModel, (uint64_t)&unk_2673F0);
  static ComponentModel.registerComponentKind(name:)(0xD000000000000010, 0x800000000026F270, v22, v23);
  v24 = type metadata accessor for SeriesRoomHeaderComponentModel(0);
  v25 = sub_648E0((unint64_t *)&qword_320090, type metadata accessor for SeriesRoomHeaderComponentModel, (uint64_t)&protocol conformance descriptor for SeriesRoomHeaderComponentModel);
  static ComponentModel.registerComponentKind(name:)(0xD000000000000010, 0x800000000026F290, v24, v25);
  v26 = type metadata accessor for SheetHeaderComponentModel(0);
  v27 = sub_648E0(&qword_320098, type metadata accessor for SheetHeaderComponentModel, (uint64_t)&unk_266798);
  static ComponentModel.registerComponentKind(name:)(0x6165487465656873, 0xEB00000000726564, v26, v27);
  v28 = type metadata accessor for ShelfHeaderComponentModel(0);
  v29 = sub_648E0(&qword_3200A0, type metadata accessor for ShelfHeaderComponentModel, (uint64_t)&unk_268368);
  static ComponentModel.registerComponentKind(name:)(0x616548666C656873, 0xEB00000000726564, v28, v29);
  v30 = type metadata accessor for TextComponentModel(0);
  v31 = sub_648E0(&qword_3200A8, type metadata accessor for TextComponentModel, (uint64_t)&unk_25A438);
  return static ComponentModel.registerComponentKind(name:)(1954047348, 0xE400000000000000, v30, v31);
}

unint64_t sub_73F1C()
{
  unint64_t result;

  result = qword_3200E0;
  if (!qword_3200E0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for FlowAction.YearInReviewDestination, &type metadata for FlowAction.YearInReviewDestination);
    atomic_store(result, (unint64_t *)&qword_3200E0);
  }
  return result;
}

unint64_t sub_73F60()
{
  unint64_t result;

  result = qword_3200F8;
  if (!qword_3200F8)
  {
    result = swift_getWitnessTable(&unk_25B9CC, &type metadata for AlertActionImplementation);
    atomic_store(result, (unint64_t *)&qword_3200F8);
  }
  return result;
}

unint64_t sub_73FA4()
{
  unint64_t result;

  result = qword_320100;
  if (!qword_320100)
  {
    result = swift_getWitnessTable(&unk_25F7C4, &type metadata for AppAnalyticsActionImplementation);
    atomic_store(result, (unint64_t *)&qword_320100);
  }
  return result;
}

unint64_t sub_73FE8()
{
  unint64_t result;

  result = qword_320108;
  if (!qword_320108)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for FlowActionImplementation, &type metadata for FlowActionImplementation);
    atomic_store(result, (unint64_t *)&qword_320108);
  }
  return result;
}

unint64_t sub_7402C()
{
  unint64_t result;

  result = qword_320110;
  if (!qword_320110)
  {
    result = swift_getWitnessTable(&unk_25BDE0, &type metadata for FlowBackActionImplementation);
    atomic_store(result, (unint64_t *)&qword_320110);
  }
  return result;
}

unint64_t sub_74070()
{
  unint64_t result;

  result = qword_320118;
  if (!qword_320118)
  {
    result = swift_getWitnessTable(&unk_25F4D8, &type metadata for JSActionImplementation);
    atomic_store(result, (unint64_t *)&qword_320118);
  }
  return result;
}

unint64_t sub_740B4()
{
  unint64_t result;

  result = qword_320138;
  if (!qword_320138)
  {
    result = swift_getWitnessTable(&unk_258B5C, &type metadata for RefreshSeriesUberHeaderActionImplementation);
    atomic_store(result, (unint64_t *)&qword_320138);
  }
  return result;
}

unint64_t sub_740F8()
{
  unint64_t result;

  result = qword_320140;
  if (!qword_320140)
  {
    result = swift_getWitnessTable(&unk_25E648, &type metadata for SeriesListFilterActionImplementation);
    atomic_store(result, (unint64_t *)&qword_320140);
  }
  return result;
}

unint64_t sub_7413C()
{
  unint64_t result;

  result = qword_320148;
  if (!qword_320148)
  {
    result = swift_getWitnessTable(&unk_25AEC4, &type metadata for SeriesListSortActionImplementation);
    atomic_store(result, (unint64_t *)&qword_320148);
  }
  return result;
}

ValueMetadata *type metadata accessor for PartialObjectGraphProvider.InitFailureObserver()
{
  return &type metadata for PartialObjectGraphProvider.InitFailureObserver;
}

double sub_74190@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_7439C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_31F5B8, &qword_31F5C0).n128_u64[0];
  return result;
}

__n128 sub_741E8@<Q0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  double v19;
  double v20;
  uint64_t v21;
  double v22;
  uint64_t v23;
  double v24;
  uint64_t v25;
  uint64_t v26;
  double v27;
  double v29;
  double v30;
  double v31;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  __int128 v36;
  __int128 v37;
  __n128 result;
  unsigned int v39;
  double v40;
  double v41;
  double v42;
  double v43;
  _OWORD v44[7];

  v16 = v15;
  v18 = a15;
  v19 = a12;
  v20 = a10;
  v21 = a2 & 1;
  v22 = a1;
  if ((_DWORD)v21)
    v22 = -INFINITY;
  v23 = a4 & 1;
  v24 = a3;
  if ((a4 & 1) != 0)
    v24 = v22;
  v25 = a6 & 1;
  v26 = a8 & 1;
  v27 = a5;
  if ((a6 & 1) != 0)
    v27 = v24;
  if (v22 > v24 || v24 > v27)
    goto LABEL_22;
  v29 = a7;
  if ((a8 & 1) != 0)
    v29 = -INFINITY;
  v30 = a10;
  if ((a11 & 1) != 0)
    v30 = v29;
  v31 = a12;
  if ((a13 & 1) != 0)
    v31 = v30;
  if (v29 > v30 || v30 > v31)
  {
LABEL_22:
    v42 = a5;
    v43 = a7;
    v41 = a3;
    v40 = a1;
    v39 = v21;
    v33 = static os_log_type_t.fault.getter();
    v34 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)(v33, &dword_0, v34, "Contradictory frame constraints specified.", 42, 2, &_swiftEmptyArrayStorage);

    v18 = a15;
    v21 = v39;
    a1 = v40;
    v20 = a10;
    a3 = v41;
    v19 = a12;
    a5 = v42;
    a7 = v43;
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(v44, *(_QWORD *)&a1, v21, *(_QWORD *)&a3, v23, *(_QWORD *)&a5, v25, *(_QWORD *)&a7, v26, *(_QWORD *)&v20, a11 & 1, *(_QWORD *)&v19, a13 & 1, a14, v18);
  sub_79668(v16, a9);
  v35 = a9 + *(int *)(sub_5C154(&qword_31F740) + 36);
  v36 = v44[5];
  *(_OWORD *)(v35 + 64) = v44[4];
  *(_OWORD *)(v35 + 80) = v36;
  *(_OWORD *)(v35 + 96) = v44[6];
  v37 = v44[1];
  *(_OWORD *)v35 = v44[0];
  *(_OWORD *)(v35 + 16) = v37;
  result = (__n128)v44[3];
  *(_OWORD *)(v35 + 32) = v44[2];
  *(__n128 *)(v35 + 48) = result;
  return result;
}

__n128 sub_7439C@<Q0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15, uint64_t *a16, uint64_t *a17)
{
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  double v23;
  double v24;
  uint64_t v25;
  double v26;
  uint64_t v27;
  double v28;
  uint64_t v29;
  uint64_t v30;
  double v31;
  double v33;
  double v34;
  double v35;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  __int128 v42;
  __int128 v43;
  __n128 result;
  unsigned int v45;
  unsigned int v46;
  double v47;
  double v48;
  double v49;
  double v50;
  _OWORD v51[7];

  v18 = v17;
  v19 = a9;
  v20 = a17;
  v22 = a14;
  v21 = a15;
  v23 = a12;
  v24 = a10;
  v25 = a2 & 1;
  v26 = a1;
  if ((_DWORD)v25)
    v26 = -INFINITY;
  v27 = a4 & 1;
  v28 = a3;
  if ((_DWORD)v27)
    v28 = v26;
  v29 = a6 & 1;
  v30 = a8 & 1;
  v31 = a5;
  if ((a6 & 1) != 0)
    v31 = v28;
  if (v26 > v28 || v28 > v31)
    goto LABEL_22;
  v33 = a7;
  if ((a8 & 1) != 0)
    v33 = -INFINITY;
  v34 = a10;
  if ((a11 & 1) != 0)
    v34 = v33;
  v35 = a12;
  if ((a13 & 1) != 0)
    v35 = v34;
  if (v33 > v34 || v34 > v35)
  {
LABEL_22:
    v49 = a5;
    v50 = a7;
    v47 = a3;
    v48 = a1;
    v46 = v25;
    v45 = v27;
    v38 = static os_log_type_t.fault.getter(*(_QWORD *)&a1);
    v39 = (void *)static Log.runtimeIssuesLog.getter();
    v40 = v38;
    v19 = a9;
    os_log(_:dso:log:_:_:)(v40, &dword_0, v39, "Contradictory frame constraints specified.", 42, 2, &_swiftEmptyArrayStorage);

    v27 = v45;
    v22 = a14;
    v21 = a15;
    v25 = v46;
    v24 = a10;
    v23 = a12;
    a3 = v47;
    a1 = v48;
    a5 = v49;
    a7 = v50;
    v20 = a17;
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(v51, *(_QWORD *)&a1, v25, *(_QWORD *)&a3, v27, *(_QWORD *)&a5, v29, *(_QWORD *)&a7, v30, *(_QWORD *)&v24, a11 & 1, *(_QWORD *)&v23, a13 & 1, v22, v21);
  sub_5E1A4(v18, v19, a16);
  v41 = v19 + *(int *)(sub_5C154(v20) + 36);
  v42 = v51[5];
  *(_OWORD *)(v41 + 64) = v51[4];
  *(_OWORD *)(v41 + 80) = v42;
  *(_OWORD *)(v41 + 96) = v51[6];
  v43 = v51[1];
  *(_OWORD *)v41 = v51[0];
  *(_OWORD *)(v41 + 16) = v43;
  result = (__n128)v51[3];
  *(_OWORD *)(v41 + 32) = v51[2];
  *(__n128 *)(v41 + 48) = result;
  return result;
}

double sub_74568@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_7439C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_320320, &qword_320328).n128_u64[0];
  return result;
}

double sub_745C0@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_7439C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_320468, &qword_320470).n128_u64[0];
  return result;
}

double sub_74618@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_7439C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_320310, &qword_320318).n128_u64[0];
  return result;
}

double sub_74670@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_7439C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_320280, &qword_320288).n128_u64[0];
  return result;
}

double sub_746C8@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_7439C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_3203D8, &qword_3203E0).n128_u64[0];
  return result;
}

double sub_74720@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_7439C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_3203C8, &qword_3203D0).n128_u64[0];
  return result;
}

double sub_74778@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_7439C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_320488, &qword_320490).n128_u64[0];
  return result;
}

double sub_747D0@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_7439C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_320438, &qword_320440).n128_u64[0];
  return result;
}

double sub_74828@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_7439C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_320400, &qword_320408).n128_u64[0];
  return result;
}

double sub_74880@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_74C58(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_320420, &qword_320428).n128_u64[0];
  return result;
}

double sub_748D8@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_7439C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_320410, &qword_320418).n128_u64[0];
  return result;
}

double sub_74930@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_7439C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_3203F0, &qword_3203F8).n128_u64[0];
  return result;
}

double sub_74988@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_7439C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_31F778, &qword_3203E8).n128_u64[0];
  return result;
}

double sub_749E0@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_7439C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_320448, &qword_320450).n128_u64[0];
  return result;
}

__n128 sub_74A38@<Q0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  double v19;
  double v20;
  uint64_t v21;
  double v22;
  uint64_t v23;
  double v24;
  uint64_t v25;
  uint64_t v26;
  double v27;
  double v29;
  double v30;
  double v31;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  __int128 v38;
  __n128 result;
  unsigned int v40;
  double v41;
  double v42;
  double v43;
  double v44;
  _OWORD v45[7];

  v16 = v15;
  v18 = a15;
  v19 = a12;
  v20 = a10;
  v21 = a2 & 1;
  v22 = a1;
  if ((_DWORD)v21)
    v22 = -INFINITY;
  v23 = a4 & 1;
  v24 = a3;
  if ((a4 & 1) != 0)
    v24 = v22;
  v25 = a6 & 1;
  v26 = a8 & 1;
  v27 = a5;
  if ((a6 & 1) != 0)
    v27 = v24;
  if (v22 > v24 || v24 > v27)
    goto LABEL_22;
  v29 = a7;
  if ((a8 & 1) != 0)
    v29 = -INFINITY;
  v30 = a10;
  if ((a11 & 1) != 0)
    v30 = v29;
  v31 = a12;
  if ((a13 & 1) != 0)
    v31 = v30;
  if (v29 > v30 || v30 > v31)
  {
LABEL_22:
    v43 = a5;
    v44 = a7;
    v42 = a3;
    v41 = a1;
    v40 = v21;
    v33 = static os_log_type_t.fault.getter(*(_QWORD *)&a1);
    v34 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)(v33, &dword_0, v34, "Contradictory frame constraints specified.", 42, 2, _swiftEmptyArrayStorage);

    v18 = a15;
    v21 = v40;
    a1 = v41;
    v20 = a10;
    a3 = v42;
    v19 = a12;
    a5 = v43;
    a7 = v44;
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(v45, *(_QWORD *)&a1, v21, *(_QWORD *)&a3, v23, *(_QWORD *)&a5, v25, *(_QWORD *)&a7, v26, *(_QWORD *)&v20, a11 & 1, *(_QWORD *)&v19, a13 & 1, a14, v18);
  v35 = type metadata accessor for ListItemView(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(a9, v16, v35);
  v36 = a9 + *(int *)(sub_5C154(&qword_320430) + 36);
  v37 = v45[5];
  *(_OWORD *)(v36 + 64) = v45[4];
  *(_OWORD *)(v36 + 80) = v37;
  *(_OWORD *)(v36 + 96) = v45[6];
  v38 = v45[1];
  *(_OWORD *)v36 = v45[0];
  *(_OWORD *)(v36 + 16) = v38;
  result = (__n128)v45[3];
  *(_OWORD *)(v36 + 32) = v45[2];
  *(__n128 *)(v36 + 48) = result;
  return result;
}

double sub_74C00@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_74C58(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_3202D8, &qword_3202E0).n128_u64[0];
  return result;
}

__n128 sub_74C58@<Q0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15, uint64_t *a16, uint64_t *a17)
{
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  double v22;
  double v23;
  uint64_t v24;
  double v25;
  uint64_t v26;
  double v27;
  uint64_t v28;
  uint64_t v29;
  double v30;
  double v32;
  double v33;
  double v34;
  uint64_t v36;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __int128 v43;
  __int128 v44;
  __n128 result;
  unsigned int v46;
  double v47;
  double v48;
  double v49;
  double v50;
  _OWORD v51[7];

  v18 = a9;
  v19 = a16;
  v21 = a14;
  v20 = a15;
  v22 = a12;
  v23 = a10;
  v24 = a2 & 1;
  v25 = a1;
  if ((_DWORD)v24)
    v25 = -INFINITY;
  v26 = a4 & 1;
  v27 = a3;
  if ((_DWORD)v26)
    v27 = v25;
  v28 = a6 & 1;
  v29 = a8 & 1;
  v30 = a5;
  if ((a6 & 1) != 0)
    v30 = v27;
  if (v25 > v27 || v27 > v30)
    goto LABEL_22;
  v32 = a7;
  if ((a8 & 1) != 0)
    v32 = -INFINITY;
  v33 = a10;
  if ((a11 & 1) != 0)
    v33 = v32;
  v34 = a12;
  if ((a13 & 1) != 0)
    v34 = v33;
  if (v32 > v33 || v33 > v34)
  {
LABEL_22:
    v49 = a7;
    v50 = a5;
    v47 = a1;
    v48 = a3;
    v46 = v24;
    v36 = v26;
    v38 = static os_log_type_t.fault.getter(*(_QWORD *)&a1);
    v39 = (void *)static Log.runtimeIssuesLog.getter();
    v40 = v38;
    v18 = a9;
    os_log(_:dso:log:_:_:)(v40, &dword_0, v39, "Contradictory frame constraints specified.", 42, 2, _swiftEmptyArrayStorage);

    v26 = v36;
    v21 = a14;
    v20 = a15;
    v24 = v46;
    v23 = a10;
    v22 = a12;
    a1 = v47;
    a3 = v48;
    a7 = v49;
    a5 = v50;
    v19 = a16;
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(v51, *(_QWORD *)&a1, v24, *(_QWORD *)&a3, v26, *(_QWORD *)&a5, v28, *(_QWORD *)&a7, v29, *(_QWORD *)&v23, a11 & 1, *(_QWORD *)&v22, a13 & 1, v21, v20);
  v41 = sub_5C154(v19);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 16))(v18, v17, v41);
  v42 = v18 + *(int *)(sub_5C154(a17) + 36);
  v43 = v51[5];
  *(_OWORD *)(v42 + 64) = v51[4];
  *(_OWORD *)(v42 + 80) = v43;
  *(_OWORD *)(v42 + 96) = v51[6];
  v44 = v51[1];
  *(_OWORD *)v42 = v51[0];
  *(_OWORD *)(v42 + 16) = v44;
  result = (__n128)v51[3];
  *(_OWORD *)(v42 + 32) = v51[2];
  *(__n128 *)(v42 + 48) = result;
  return result;
}

double sub_74E34@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_7439C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_320458, &qword_320460).n128_u64[0];
  return result;
}

double sub_74E8C@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_7439C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_320478, &qword_320480).n128_u64[0];
  return result;
}

uint64_t EditFinishedDateSheetRootView.init(assetInfo:objectGraph:)@<X0>(__int128 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t result;

  v6 = (_QWORD *)(a3 + *(int *)(type metadata accessor for EditFinishedDateSheetRootView(0) + 24));
  *v6 = swift_getKeyPath(&unk_258110);
  v7 = sub_5C154(&qword_320160);
  swift_storeEnumTagMultiPayload(v6, v7, 0);
  result = sub_5DC98(a1, a3);
  *(_QWORD *)(a3 + 40) = a2;
  return result;
}

uint64_t type metadata accessor for EditFinishedDateSheetRootView(uint64_t a1)
{
  uint64_t result;

  result = qword_320210;
  if (!qword_320210)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for EditFinishedDateSheetRootView);
  return result;
}

uint64_t EditFinishedDateSheetRootView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unsigned int v22;
  unsigned int v23;
  unsigned int v24;
  uint64_t v25;
  int v26;
  int v27;
  int v28;
  uint64_t v29;
  uint64_t (*v30)(char *, uint64_t);
  uint64_t v31;
  double v32;
  double v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  double v45;
  unint64_t v46;
  char *v47;
  double v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t OpaqueTypeConformance2;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  double v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD v66[2];
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char v85[16];
  uint64_t v86;
  double v87;
  unint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char v91;

  v2 = v1;
  v83 = a1;
  v3 = type metadata accessor for SizeConstants.Gutter(0);
  v81 = *(_QWORD *)(v3 - 8);
  v82 = v3;
  v4 = __chkstk_darwin(v3);
  v80 = (char *)v66 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v70 = type metadata accessor for SizeConstants.Spacing(0, v4);
  v69 = *(_QWORD *)(v70 - 8);
  __chkstk_darwin(v70);
  v7 = (char *)v66 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v84 = type metadata accessor for SizeConstants(0);
  v68 = *(_QWORD *)(v84 - 8);
  __chkstk_darwin(v84);
  v9 = (char *)v66 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_5C154(&qword_320168);
  __chkstk_darwin(v10);
  v12 = (char *)v66 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v67 = sub_5C154(&qword_320170);
  __chkstk_darwin(v67);
  v14 = (char *)v66 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v71 = sub_5C154(&qword_320178);
  __chkstk_darwin(v71);
  v16 = (char *)v66 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v74 = sub_5C154(&qword_320180);
  v73 = *(_QWORD *)(v74 - 8);
  __chkstk_darwin(v74);
  v72 = (char *)v66 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_5C154(&qword_320188);
  v78 = *(_QWORD *)(v18 - 8);
  v79 = v18;
  __chkstk_darwin(v18);
  v77 = (char *)v66 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v75 = sub_5C154(&qword_320190);
  __chkstk_darwin(v75);
  v76 = (char *)v66 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5E0D8(v1, (uint64_t)&v87);
  v86 = v1;
  v21 = sub_75C90(&v87, 0, (void (*)(uint64_t))sub_768E0, (uint64_t)v85, &qword_320168, (uint64_t)v12);
  v22 = static Edge.Set.top.getter(v21);
  v23 = static Edge.Set.leading.getter();
  v24 = static Edge.Set.trailing.getter();
  v25 = Edge.Set.init(rawValue:)(0);
  v26 = Edge.Set.init(rawValue:)(v25);
  if (Edge.Set.init(rawValue:)(v26 & v22) != v22)
    v25 = Edge.Set.init(rawValue:)(v25 | v22);
  v27 = Edge.Set.init(rawValue:)(v25);
  if (Edge.Set.init(rawValue:)(v27 & v23) != v23)
    v25 = Edge.Set.init(rawValue:)(v25 | v23);
  v28 = Edge.Set.init(rawValue:)(v25);
  if (Edge.Set.init(rawValue:)(v28 & v24) != v24)
    LOBYTE(v25) = Edge.Set.init(rawValue:)(v25 | v24);
  v66[1] = v2 + *(int *)(type metadata accessor for EditFinishedDateSheetRootView(0) + 24);
  v29 = sub_76B2C(&qword_320160, (uint64_t (*)(_QWORD))&type metadata accessor for SizeConstants, 0x736E6F43657A6953, 0xED000073746E6174, (uint64_t)v9);
  SizeConstants.spacing.getter(v29);
  v30 = *(uint64_t (**)(char *, uint64_t))(v68 + 8);
  v31 = v30(v9, v84);
  v32 = SizeConstants.Spacing.xxxl.getter(v31);
  (*(void (**)(char *, uint64_t))(v69 + 8))(v7, v70);
  v33 = EdgeInsets.init(_all:)(v32);
  v35 = v34;
  v37 = v36;
  v39 = v38;
  sub_5E1A4((uint64_t)v12, (uint64_t)v14, &qword_320168);
  v40 = &v14[*(int *)(v67 + 36)];
  *v40 = v25;
  *((double *)v40 + 1) = v33;
  *((_QWORD *)v40 + 2) = v35;
  *((_QWORD *)v40 + 3) = v37;
  *((_QWORD *)v40 + 4) = v39;
  v40[40] = 0;
  v41 = sub_5E09C((uint64_t)v12, &qword_320168);
  v42 = static Alignment.center.getter(v41);
  sub_7439C(0.0, 1, 450.0, 0, 0.0, 1, 0.0, 1, (uint64_t)v16, 0.0, 1, 0.0, 1, v42, v43, &qword_320170, &qword_320178);
  sub_5E09C((uint64_t)v14, &qword_320170);
  v44 = type metadata accessor for BATracker(0);
  BaseObjectGraph.inject<A>(_:)(&v87, v44, v44);
  v45 = v87;
  v46 = sub_76D98();
  v47 = v72;
  v48 = *(double *)&v71;
  View.tracker(_:)(*(_QWORD *)&v45, v71, v46);

  sub_5E09C((uint64_t)v16, &qword_320178);
  v49 = *(_QWORD *)(v2 + 40);
  BaseObjectGraph.inject<A>(_:)(&v87, &type metadata for FigaroPageConfiguration, &type metadata for FigaroPageConfiguration);
  if (LOBYTE(v87) == 1)
  {
    swift_retain(v49);
  }
  else
  {
    v50 = type metadata accessor for MetricsPipeline(0);
    v49 = dispatch thunk of BaseObjectGraph.subtracting(dependencyFor:)(v50);
  }
  v51 = type metadata accessor for BaseObjectGraph(0);
  v87 = v48;
  v88 = v46;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v87, &opaque type descriptor for <<opaque return type of View.tracker(_:)>>, 1);
  v53 = v77;
  v54 = v74;
  View.actionDispatcher<A>(with:implementations:)(v49, sub_766A8, 0, v74, v51, OpaqueTypeConformance2);
  swift_release(v49);
  v55 = (*(uint64_t (**)(char *, uint64_t))(v73 + 8))(v47, v54);
  v56 = static Edge.Set.bottom.getter(v55);
  v57 = sub_76B2C(&qword_320160, (uint64_t (*)(_QWORD))&type metadata accessor for SizeConstants, 0x736E6F43657A6953, 0xED000073746E6174, (uint64_t)v9);
  v58 = v80;
  SizeConstants.gutter.getter(v57);
  v59 = v30(v9, v84);
  v60 = SizeConstants.Gutter.s.getter(v59);
  (*(void (**)(char *, uint64_t))(v81 + 8))(v58, v82);
  v87 = EdgeInsets.init(_all:)(v60);
  v88 = v61;
  v89 = v62;
  v90 = v63;
  v91 = 0;
  v64 = (uint64_t)v76;
  SafeAreaPaddingModifier.init(edges:insets:)(v56, &v87);
  (*(void (**)(uint64_t, char *, uint64_t))(v78 + 32))(v64, v53, v79);
  return sub_66F14(v64, v83, &qword_320190);
}

uint64_t sub_75674@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t KeyPath;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  double v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  _QWORD *v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  double v75[2];
  char v76;
  void *v77;
  uint64_t v78;
  char v79;
  uint64_t v80;
  uint64_t v81;

  v74 = a2;
  v3 = sub_5C154(&qword_320388);
  v72 = *(_QWORD *)(v3 - 8);
  v73 = v3;
  __chkstk_darwin(v3);
  v71 = (char *)&v56 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_5C154(&qword_320390);
  v69 = *(_QWORD *)(v5 - 8);
  v70 = v5;
  __chkstk_darwin(v5);
  v68 = (char *)&v56 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = type metadata accessor for SizeConstants(0);
  v58 = *(_QWORD *)(v62 - 8);
  __chkstk_darwin(v62);
  v57 = (uint64_t)&v56 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_5C154(&qword_31F7E8);
  v9 = __chkstk_darwin(v8);
  v11 = (char *)&v56 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for Font.TextStyle(0, v9);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v56 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v67 = sub_5C154(&qword_320398);
  v65 = *(_QWORD *)(v67 - 8);
  __chkstk_darwin(v67);
  v64 = (char *)&v56 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = sub_5C154(&qword_3203A0);
  __chkstk_darwin(v59);
  v63 = (char *)&v56 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = sub_5C154(&qword_3203A8);
  __chkstk_darwin(v61);
  v60 = (uint64_t)&v56 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = a1[3];
  v20 = a1[4];
  v66 = a1;
  sub_66898(a1, v19);
  AssetInfo.hasSpecifiedFinishedDate.getter(v19, v20);
  v21 = sub_17EB50();
  v23 = v22;
  KeyPath = swift_getKeyPath(&unk_2581F8);
  (*(void (**)(char *, _QWORD, uint64_t))(v13 + 104))(v15, enum case for Font.TextStyle.title2(_:), v12);
  v25 = enum case for Font.Design.serif (_:);
  v26 = type metadata accessor for Font.Design(0);
  v27 = *(_QWORD *)(v26 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v27 + 104))(v11, v25, v26);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v11, 0, 1, v26);
  v28 = static Font.system(_:design:weight:)(v15, v11, 0, 1);
  sub_5E09C((uint64_t)v11, &qword_31F7E8);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  v29 = swift_getKeyPath(&unk_258228);
  *(_QWORD *)&v75[0] = v21;
  *(_QWORD *)&v75[1] = v23;
  v76 = 0;
  v77 = &_swiftEmptyArrayStorage;
  v78 = KeyPath;
  v79 = 1;
  v80 = v29;
  v81 = v28;
  v30 = sub_5C154(&qword_3203B0);
  v31 = sub_79594();
  v32 = v64;
  View.bold(_:)(1, v30, v31);
  sub_6693C(v21, v23, 0);
  swift_release(v28);
  swift_release(v29);
  swift_release(KeyPath);
  v33 = swift_bridgeObjectRelease(&_swiftEmptyArrayStorage);
  LOBYTE(v29) = static Edge.Set.bottom.getter(v33);
  type metadata accessor for EditFinishedDateSheetRootView(0);
  v34 = v57;
  sub_76B2C(&qword_320160, (uint64_t (*)(_QWORD))&type metadata accessor for SizeConstants, 0x736E6F43657A6953, 0xED000073746E6174, v57);
  v35 = v68;
  v36 = v62;
  ScalableSizeConstants.scaled.getter(v62, &protocol witness table for SizeConstants);
  (*(void (**)(uint64_t, uint64_t))(v58 + 8))(v34, v36);
  v37 = swift_getKeyPath(&unk_258258);
  v38 = v70;
  v39 = v71;
  SizeConstants.Scaled.subscript.getter(v37, v70, &protocol witness table for SizeConstants.Spacing);
  swift_release(v37);
  (*(void (**)(char *, uint64_t))(v69 + 8))(v35, v38);
  v40 = swift_getKeyPath(&unk_258288);
  v41 = sub_79620();
  v42 = v73;
  SizeConstants.Scaled.subscript.getter(v75, v40, v73, v41);
  swift_release(v40);
  (*(void (**)(char *, uint64_t))(v72 + 8))(v39, v42);
  v43 = EdgeInsets.init(_all:)(v75[0]);
  v45 = v44;
  v47 = v46;
  v49 = v48;
  v50 = v65;
  v51 = (uint64_t)v63;
  v52 = v67;
  (*(void (**)(char *, char *, uint64_t))(v65 + 16))(v63, v32, v67);
  v53 = v51 + *(int *)(v59 + 36);
  *(_BYTE *)v53 = v29;
  *(double *)(v53 + 8) = v43;
  *(_QWORD *)(v53 + 16) = v45;
  *(_QWORD *)(v53 + 24) = v47;
  *(_QWORD *)(v53 + 32) = v49;
  *(_BYTE *)(v53 + 40) = 0;
  (*(void (**)(char *, uint64_t))(v50 + 8))(v32, v52);
  v54 = v60;
  sub_5E1A4(v51, v60, &qword_3203A0);
  *(_WORD *)(v54 + *(int *)(v61 + 36)) = 256;
  sub_5E09C(v51, &qword_3203A0);
  return sub_66F14(v54, v74, &qword_3203A8);
}

uint64_t sub_75C84@<X0>(_QWORD *a1@<X0>, int a2@<W1>, void (*a3)(uint64_t)@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  return sub_75C90(a1, a2, a3, a4, &qword_320348, a5);
}

uint64_t sub_75C90@<X0>(_QWORD *a1@<X0>, int a2@<W1>, void (*a3)(uint64_t)@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  uint64_t v64;
  uint64_t v65;
  char v66;
  void (*v67)(char *, uint64_t, uint64_t);
  _QWORD *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t (*v82)(uint64_t, uint64_t, uint64_t);
  int v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t result;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  void (*v95)(char *, uint64_t);
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  void (*v102)(uint64_t, uint64_t);
  uint64_t v103;
  char *v104;
  char *v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  void (*v120)(uint64_t);
  _QWORD *v121;
  char *v122;
  char *v123;
  uint64_t v124;
  uint64_t *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  _QWORD v130[2];

  v119 = a4;
  v120 = a3;
  LODWORD(v118) = a2;
  v124 = a6;
  v8 = sub_5C154(&qword_320330);
  v9 = __chkstk_darwin(v8);
  v106 = (char *)&v103 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v108 = type metadata accessor for TimeZone(0, v9);
  v107 = *(_QWORD *)(v108 - 8);
  __chkstk_darwin(v108);
  v105 = (char *)&v103 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __chkstk_darwin(v12);
  v110 = (char *)&v103 - v14;
  v113 = type metadata accessor for FinishedDateKind(0, v13);
  v116 = *(_QWORD *)(v113 - 8);
  __chkstk_darwin(v113);
  v104 = (char *)&v103 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v111 = sub_5C154(&qword_320338);
  __chkstk_darwin(v111);
  v112 = (uint64_t)&v103 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_5C154(&qword_320340);
  __chkstk_darwin(v17);
  v109 = (uint64_t)&v103 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v115 = (uint64_t)&v103 - v20;
  v22 = __chkstk_darwin(v21);
  v114 = (uint64_t)&v103 - v23;
  v24 = type metadata accessor for BooksFeatureFlag(0, v22);
  v121 = *(_QWORD **)(v24 - 8);
  __chkstk_darwin(v24);
  v26 = (char *)&v103 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27);
  v117 = (char *)&v103 - v28;
  v29 = sub_5C154(&qword_31F128);
  __chkstk_darwin(v29);
  v31 = (char *)&v103 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = type metadata accessor for Date(0);
  v33 = *(_QWORD *)(v32 - 8);
  __chkstk_darwin(v32);
  v122 = (char *)&v103 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v35);
  v123 = (char *)&v103 - v36;
  v125 = a5;
  v37 = (int *)sub_5C154(a5);
  __chkstk_darwin(v37);
  v39 = (char *)&v103 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = &v39[*(int *)(v40 + 52)];
  LOBYTE(v130[0]) = 0;
  State.init(wrappedValue:)(&v126, v130, &type metadata for Bool);
  v42 = v127;
  *v41 = v126;
  *((_QWORD *)v41 + 1) = v42;
  v43 = &v39[v37[14]];
  v130[0] = 0;
  State.init(wrappedValue:)(&v126, v130, &type metadata for CGFloat);
  v44 = v127;
  *(_QWORD *)v43 = v126;
  *((_QWORD *)v43 + 1) = v44;
  v45 = &v39[v37[15]];
  v130[0] = 0;
  State.init(wrappedValue:)(&v126, v130, &type metadata for CGFloat);
  v46 = v127;
  *(_QWORD *)v45 = v126;
  *((_QWORD *)v45 + 1) = v46;
  v47 = &v39[v37[16]];
  v130[0] = sub_5BC3C((uint64_t)&_swiftEmptyArrayStorage);
  v48 = sub_5C154(&qword_320350);
  State.init(wrappedValue:)(&v126, v130, v48);
  v49 = v127;
  *(_QWORD *)v47 = v126;
  *((_QWORD *)v47 + 1) = v49;
  v50 = &v39[v37[17]];
  *(_QWORD *)v50 = swift_getKeyPath(&unk_2581C8);
  v51 = sub_5C154(&qword_320268);
  swift_storeEnumTagMultiPayload(v50, v51, 0);
  v52 = &v39[v37[18]];
  *(_QWORD *)v52 = swift_getKeyPath(&unk_258110);
  v53 = sub_5C154(&qword_320160);
  swift_storeEnumTagMultiPayload(v52, v53, 0);
  v54 = sub_5E0D8((uint64_t)a1, (uint64_t)v39);
  v39[v37[10]] = v118;
  v120(v54);
  v55 = a1[3];
  v56 = a1[4];
  sub_66898(a1, v55);
  v57 = v56;
  v58 = v32;
  AssetInfo.dateFinished.getter(v55, v57);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v31, 1, v32) == 1)
  {
    v59 = sub_5E09C((uint64_t)v31, &qword_31F128);
LABEL_5:
    v62 = (uint64_t)v123;
    static Date.now.getter(v59);
    v63 = v121;
    ((void (*)(char *, _QWORD, uint64_t))v121[13])(v26, enum case for BooksFeatureFlag.fuzzyFinishedDate(_:), v24);
    v64 = sub_648E0(&qword_320358, (uint64_t (*)(uint64_t))&type metadata accessor for BooksFeatureFlag, (uint64_t)&protocol conformance descriptor for BooksFeatureFlag);
    v65 = sub_67060((unint64_t *)&qword_320360, &qword_320368, (uint64_t)&protocol conformance descriptor for StaticFeatureFlagsKey<A>);
    LOBYTE(v64) = RawRepresentable<>.isEnabled.getter(v24, v64, v65);
    ((void (*)(char *, uint64_t))v63[1])(v26, v24);
    v66 = v64 ^ 1;
    v67 = *(void (**)(char *, uint64_t, uint64_t))(v33 + 32);
LABEL_16:
    v88 = &v39[v37[11]];
    *(_QWORD *)&v88[*(int *)(sub_5C154(&qword_320370) + 28)] = 0;
    v67(v88, v62, v58);
    v89 = &v39[v37[12]];
    *v89 = v66 & 1;
    *((_QWORD *)v89 + 1) = 0;
    sub_66F14((uint64_t)v39, v124, v125);
    return _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(a1);
  }
  v120 = *(void (**)(uint64_t))(v33 + 32);
  ((void (*)(char *, char *, uint64_t))v120)(v122, v31, v32);
  v60 = a1[3];
  v61 = a1[4];
  sub_66898(a1, v60);
  if ((AssetInfo.hasSpecifiedFinishedDate.getter(v60, v61) & 1) == 0)
  {
    v59 = (*(uint64_t (**)(char *, uint64_t))(v33 + 8))(v122, v32);
    v58 = v32;
    goto LABEL_5;
  }
  v119 = v33;
  v68 = v121;
  v69 = v117;
  ((void (*)(char *, _QWORD, uint64_t))v121[13])(v117, enum case for BooksFeatureFlag.fuzzyFinishedDate(_:), v24);
  v70 = sub_648E0(&qword_320358, (uint64_t (*)(uint64_t))&type metadata accessor for BooksFeatureFlag, (uint64_t)&protocol conformance descriptor for BooksFeatureFlag);
  v71 = sub_67060((unint64_t *)&qword_320360, &qword_320368, (uint64_t)&protocol conformance descriptor for StaticFeatureFlagsKey<A>);
  LOBYTE(v70) = RawRepresentable<>.isEnabled.getter(v24, v70, v71);
  ((void (*)(char *, uint64_t))v68[1])(v69, v24);
  v121 = a1;
  sub_5E0D8((uint64_t)a1, (uint64_t)&v126);
  v58 = v32;
  v62 = (uint64_t)v123;
  if ((v70 & 1) == 0)
    goto LABEL_13;
  v72 = v128;
  v73 = v129;
  sub_66898(&v126, v128);
  v74 = v114;
  AssetInfo.finishedDateKind.getter(v72, v73);
  v75 = v115;
  v76 = v116;
  v77 = v113;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v116 + 104))(v115, enum case for FinishedDateKind.yearOnly(_:), v113);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v76 + 56))(v75, 0, 1, v77);
  v78 = v112;
  v79 = v112 + *(int *)(v111 + 48);
  sub_5E1A4(v74, v112, &qword_320340);
  v118 = v79;
  v80 = v79;
  v81 = v77;
  sub_5E1A4(v75, v80, &qword_320340);
  v82 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v76 + 48);
  if (v82(v78, 1, v77) == 1)
  {
    sub_5E09C(v75, &qword_320340);
    sub_5E09C(v74, &qword_320340);
    v83 = v82(v118, 1, v77);
    v84 = v110;
    v85 = v78;
    if (v83 == 1)
    {
      sub_5E09C(v78, &qword_320340);
      v86 = _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(&v126);
      goto LABEL_18;
    }
    goto LABEL_12;
  }
  v87 = v109;
  sub_5E1A4(v78, v109, &qword_320340);
  v85 = v78;
  if (v82(v118, 1, v81) == 1)
  {
    sub_5E09C(v115, &qword_320340);
    sub_5E09C(v74, &qword_320340);
    (*(void (**)(uint64_t, uint64_t))(v116 + 8))(v87, v81);
LABEL_12:
    sub_5E09C(v85, &qword_320338);
LABEL_13:
    _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(&v126);
LABEL_14:
    v67 = (void (*)(char *, uint64_t, uint64_t))v120;
    ((void (*)(uint64_t, char *, uint64_t))v120)(v62, v122, v58);
    v66 = 1;
LABEL_15:
    a1 = v121;
    goto LABEL_16;
  }
  v91 = v116;
  v92 = v104;
  (*(void (**)(char *, uint64_t, uint64_t))(v116 + 32))(v104, v118, v81);
  v93 = sub_648E0(&qword_320378, (uint64_t (*)(uint64_t))&type metadata accessor for FinishedDateKind, (uint64_t)&protocol conformance descriptor for FinishedDateKind);
  v94 = v109;
  LODWORD(v118) = dispatch thunk of static Equatable.== infix(_:_:)(v109, v92, v81, v93);
  v95 = *(void (**)(char *, uint64_t))(v91 + 8);
  v95(v92, v81);
  sub_5E09C(v115, &qword_320340);
  sub_5E09C(v114, &qword_320340);
  v95((char *)v94, v81);
  v84 = v110;
  sub_5E09C(v85, &qword_320340);
  v86 = _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(&v126);
  if ((v118 & 1) == 0)
    goto LABEL_14;
LABEL_18:
  static TimeZone.current.getter(v86);
  v96 = v106;
  TimeZone.init(secondsFromGMT:)(0);
  v97 = (uint64_t)v84;
  v98 = v107;
  v99 = v108;
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v107 + 48))(v96, 1, v108);
  if ((_DWORD)result != 1)
  {
    v100 = (uint64_t)v105;
    (*(void (**)(char *, char *, uint64_t))(v98 + 32))(v105, v96, v99);
    v101 = v122;
    sub_21D778(v97, v100, v62);
    v102 = *(void (**)(uint64_t, uint64_t))(v98 + 8);
    v102(v100, v99);
    v102(v97, v99);
    (*(void (**)(char *, uint64_t))(v119 + 8))(v101, v58);
    v66 = 0;
    v67 = (void (*)(char *, uint64_t, uint64_t))v120;
    goto LABEL_15;
  }
  __break(1u);
  return result;
}

uint64_t sub_766A8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;
  void (*v15)(char *, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v21[2];

  v21[1] = a1;
  v1 = type metadata accessor for AssetActionImplementation(0);
  __chkstk_darwin(v1);
  v3 = (char *)v21 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_5C154(&qword_31FE40);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __chkstk_darwin(v8);
  v11 = (char *)v21 - v10;
  PageData.init(pageID:pageType:)(0, 0, 0, 0xE000000000000000, v9);
  v12 = type metadata accessor for BaseObjectGraph(0);
  ActionDispatcher.init()(v12);
  v13 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
  v13(v11, v7, v4);
  v14 = sub_648E0(&qword_320380, type metadata accessor for AssetActionImplementation, (uint64_t)&protocol conformance descriptor for AssetActionImplementation);
  ActionDispatcher.add<A>(_:)(v3, v4, v1, v14);
  v15 = *(void (**)(char *, uint64_t))(v5 + 8);
  v15(v7, v4);
  sub_79548((uint64_t)v3);
  v16 = sub_5C154(&qword_320150);
  v17 = *(unsigned __int8 *)(v5 + 80);
  v18 = (v17 + 32) & ~v17;
  v19 = swift_allocObject(v16, v18 + *(_QWORD *)(v5 + 72), v17 | 7);
  v13((char *)(v19 + v18), v11, v4);
  ActionDispatcher.init()(v12);
  ActionDispatcher.add(contentsOf:)(v19 + v18, v4);
  swift_setDeallocating(v19);
  swift_arrayDestroy(v19 + v18, 1, v4);
  swift_deallocClassInstance(v19, 32, 7);
  return ((uint64_t (*)(char *, uint64_t))v15)(v11, v4);
}

uint64_t sub_768A0()
{
  return EnvironmentValues.sizes.getter();
}

uint64_t sub_768C0()
{
  return EnvironmentValues.sizes.getter();
}

uint64_t sub_768E0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_75674(*(_QWORD **)(v1 + 16), a1);
}

uint64_t sub_768E8(uint64_t a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  os_log_type_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;

  v4 = type metadata accessor for EnvironmentValues(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) != 0)
    return a1 & 1;
  v8 = swift_retain(a1);
  v9 = static os_log_type_t.fault.getter(v8);
  v10 = static Log.runtimeIssuesLog.getter();
  v11 = v9;
  if (os_log_type_enabled(v10, v9))
  {
    v12 = (uint8_t *)swift_slowAlloc(12, -1);
    v13 = swift_slowAlloc(32, -1);
    v16 = v13;
    *(_DWORD *)v12 = 136315138;
    v15 = sub_57CD8(1819242306, 0xE400000000000000, &v16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v15, &v16, v12 + 4, v12 + 12);
    _os_log_impl(&dword_0, v10, v11, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v12, 0xCu);
    swift_arrayDestroy(v13, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v13, -1, -1);
    swift_slowDealloc(v12, -1, -1);
  }

  EnvironmentValues.init()();
  swift_getAtKeyPath(v7, a1);
  sub_64FFC(a1, 0);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v16;
}

uint64_t sub_76AA0@<X0>(uint64_t a1@<X8>)
{
  return sub_76B2C((uint64_t *)&unk_32A010, (uint64_t (*)(_QWORD))&type metadata accessor for ColorConstants, 0x6E6F43726F6C6F43, 0xEE0073746E617473, a1);
}

uint64_t sub_76AD4@<X0>(uint64_t a1@<X8>)
{
  return sub_77678(&qword_31F488, &qword_326190, 0xD000000000000017, 0x800000000026F500, a1);
}

uint64_t sub_76B00@<X0>(uint64_t a1@<X8>)
{
  return sub_76B2C(&qword_326110, (uint64_t (*)(_QWORD))&type metadata accessor for OpaqueMetricsFieldsContext, 0xD00000000000001ALL, 0x800000000026F4E0, a1);
}

uint64_t sub_76B2C@<X0>(uint64_t *a1@<X0>, uint64_t (*a2)(_QWORD)@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v20;
  os_log_type_t v21;
  NSObject *v22;
  uint64_t v23;
  uint8_t *v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v29 = a3;
  v9 = v5;
  v11 = type metadata accessor for EnvironmentValues(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_5C154(a1);
  __chkstk_darwin(v15);
  v17 = (uint64_t *)((char *)&v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_5E1A4(v9, (uint64_t)v17, a1);
  if (swift_getEnumCaseMultiPayload(v17, v15) == 1)
  {
    v18 = a2(0);
    return (*(uint64_t (**)(uint64_t, uint64_t *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(a5, v17, v18);
  }
  else
  {
    v20 = *v17;
    v21 = static os_log_type_t.fault.getter();
    v22 = static Log.runtimeIssuesLog.getter();
    if (os_log_type_enabled(v22, v21))
    {
      v27 = a4;
      v23 = swift_slowAlloc(12, -1);
      v28 = a5;
      v24 = (uint8_t *)v23;
      v25 = swift_slowAlloc(32, -1);
      v31 = v25;
      *(_DWORD *)v24 = 136315138;
      v30 = sub_57CD8(v29, v27, &v31);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v30, &v31, v24 + 4, v24 + 12);
      _os_log_impl(&dword_0, v22, v21, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v24, 0xCu);
      swift_arrayDestroy(v25, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v25, -1, -1);
      swift_slowDealloc(v24, -1, -1);
    }

    EnvironmentValues.init()();
    swift_getAtKeyPath(v14, v20);
    swift_release(v20);
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
}

uint64_t sub_76D64@<X0>(uint64_t a1@<X8>)
{
  return sub_76B2C(&qword_320160, (uint64_t (*)(_QWORD))&type metadata accessor for SizeConstants, 0x736E6F43657A6953, 0xED000073746E6174, a1);
}

unint64_t sub_76D98()
{
  unint64_t result;
  uint64_t v1;

  result = qword_320198;
  if (!qword_320198)
  {
    v1 = sub_667D0(&qword_320178);
    sub_76E04();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_320198);
  }
  return result;
}

unint64_t sub_76E04()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3201A0;
  if (!qword_3201A0)
  {
    v1 = sub_667D0(&qword_320170);
    sub_67060(&qword_3201A8, &qword_320168, (uint64_t)&unk_269228);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_3201A0);
  }
  return result;
}

uint64_t sub_76E88(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &opaque type descriptor for <<opaque return type of EditFinishedDateSheetRootView.body>>, 1);
}

_QWORD *initializeBufferWithCopyOfBuffer for EditFinishedDateSheetRootView(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v4;
  int v5;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v17 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v17);
  }
  else
  {
    v7 = *(_OWORD *)(a2 + 3);
    *(_OWORD *)(a1 + 24) = v7;
    (**(void (***)(uint64_t, uint64_t *))(v7 - 8))(a1, a2);
    v8 = a2[5];
    v4[5] = v8;
    v9 = *(int *)(a3 + 24);
    v10 = (_QWORD *)((char *)v4 + v9);
    v11 = (uint64_t *)((char *)a2 + v9);
    swift_retain(v8);
    v12 = sub_5C154(&qword_320160);
    if (swift_getEnumCaseMultiPayload(v11, v12) == 1)
    {
      v13 = type metadata accessor for SizeConstants(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v10, v11, v13);
      v14 = v10;
      v15 = v12;
      v16 = 1;
    }
    else
    {
      v18 = *v11;
      *v10 = *v11;
      swift_retain(v18);
      v14 = v10;
      v15 = v12;
      v16 = 0;
    }
    swift_storeEnumTagMultiPayload(v14, v15, v16);
  }
  return v4;
}

uint64_t destroy for EditFinishedDateSheetRootView(_QWORD *a1, uint64_t a2)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(a1);
  swift_release(a1[5]);
  v4 = (_QWORD *)((char *)a1 + *(int *)(a2 + 24));
  v5 = sub_5C154(&qword_320160);
  if (swift_getEnumCaseMultiPayload(v4, v5) != 1)
    return swift_release(*v4);
  v6 = type metadata accessor for SizeConstants(0);
  return (*(uint64_t (**)(_QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v4, v6);
}

uint64_t initializeWithCopy for EditFinishedDateSheetRootView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v6 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v6;
  (**(void (***)(void))(v6 - 8))();
  v7 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 40) = v7;
  v8 = *(int *)(a3 + 24);
  v9 = (uint64_t *)(a1 + v8);
  v10 = (uint64_t *)(a2 + v8);
  swift_retain(v7);
  v11 = sub_5C154(&qword_320160);
  if (swift_getEnumCaseMultiPayload(v10, v11) == 1)
  {
    v12 = type metadata accessor for SizeConstants(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v9, v10, v12);
    v13 = 1;
  }
  else
  {
    v14 = *v10;
    *v9 = *v10;
    swift_retain(v14);
    v13 = 0;
  }
  swift_storeEnumTagMultiPayload(v9, v11, v13);
  return a1;
}

_QWORD *assignWithCopy for EditFinishedDateSheetRootView(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_65938(a1, a2);
  v6 = a2[5];
  v7 = a1[5];
  a1[5] = v6;
  swift_retain(v6);
  swift_release(v7);
  if (a1 != a2)
  {
    v8 = *(int *)(a3 + 24);
    v9 = (_QWORD *)((char *)a1 + v8);
    v10 = (_QWORD *)((char *)a2 + v8);
    sub_5E09C((uint64_t)a1 + v8, &qword_320160);
    v11 = sub_5C154(&qword_320160);
    if (swift_getEnumCaseMultiPayload(v10, v11) == 1)
    {
      v12 = type metadata accessor for SizeConstants(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v9, v10, v12);
      v13 = 1;
    }
    else
    {
      v14 = *v10;
      *v9 = *v10;
      swift_retain(v14);
      v13 = 0;
    }
    swift_storeEnumTagMultiPayload(v9, v11, v13);
  }
  return a1;
}

uint64_t initializeWithTake for EditFinishedDateSheetRootView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  v6 = *(int *)(a3 + 24);
  v7 = (void *)(a1 + v6);
  v8 = (const void *)(a2 + v6);
  v9 = sub_5C154(&qword_320160);
  if (swift_getEnumCaseMultiPayload(v8, v9) == 1)
  {
    v10 = type metadata accessor for SizeConstants(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v7, v8, v10);
    swift_storeEnumTagMultiPayload(v7, v9, 1);
  }
  else
  {
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  return a1;
}

uint64_t assignWithTake for EditFinishedDateSheetRootView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  const void *v11;
  uint64_t v12;
  uint64_t v13;

  _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((_QWORD *)a1);
  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  v7 = *(_QWORD *)(a2 + 40);
  v8 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v7;
  swift_release(v8);
  if (a1 != a2)
  {
    v9 = *(int *)(a3 + 24);
    v10 = (void *)(a1 + v9);
    v11 = (const void *)(a2 + v9);
    sub_5E09C(a1 + v9, &qword_320160);
    v12 = sub_5C154(&qword_320160);
    if (swift_getEnumCaseMultiPayload(v11, v12) == 1)
    {
      v13 = type metadata accessor for SizeConstants(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v10, v11, v13);
      swift_storeEnumTagMultiPayload(v10, v12, 1);
    }
    else
    {
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for EditFinishedDateSheetRootView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_77350);
}

uint64_t sub_77350(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_5C154(&qword_3201B0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for EditFinishedDateSheetRootView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_773DC);
}

uint64_t sub_773DC(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 24) = (a2 - 1);
  }
  else
  {
    v7 = sub_5C154(&qword_3201B0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

void sub_77454(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[3];

  v4[0] = "(";
  v4[1] = (char *)&value witness table for Builtin.NativeObject + 64;
  sub_774D4(319);
  if (v3 <= 0x3F)
  {
    v4[2] = *(_QWORD *)(v2 - 8) + 64;
    swift_initStructMetadata(a1, 256, 3, v4, a1 + 16);
  }
}

void sub_774D4(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_320220)
  {
    v2 = type metadata accessor for SizeConstants(255);
    v3 = type metadata accessor for Environment.Content(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_320220);
  }
}

unint64_t sub_7752C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t OpaqueTypeConformance2;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  result = qword_320258;
  if (!qword_320258)
  {
    v1 = sub_667D0(&qword_320190);
    v2 = sub_667D0(&qword_320180);
    v3 = type metadata accessor for BaseObjectGraph(255);
    v5 = sub_667D0(&qword_320178);
    v6 = sub_76D98();
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v5, &opaque type descriptor for <<opaque return type of View.tracker(_:)>>, 1);
    v5 = v2;
    v6 = v3;
    v7 = OpaqueTypeConformance2;
    swift_getOpaqueTypeConformance2(&v5, &opaque type descriptor for <<opaque return type of View.actionDispatcher<A>(with:implementations:)>>, 1);
    sub_648E0(&qword_320260, (uint64_t (*)(uint64_t))&type metadata accessor for SafeAreaPaddingModifier, (uint64_t)&protocol conformance descriptor for SafeAreaPaddingModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_320258);
  }
  return result;
}

uint64_t sub_77618@<X0>(uint64_t a1@<X8>)
{
  return sub_76B2C(&qword_320290, (uint64_t (*)(_QWORD))&type metadata accessor for FontConstants, 0x736E6F43746E6F46, 0xED000073746E6174, a1);
}

uint64_t sub_7764C@<X0>(uint64_t a1@<X8>)
{
  return sub_77678(&qword_320298, &qword_3202A0, 0xD000000000000024, 0x800000000026F3B0, a1);
}

uint64_t sub_77678@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v18;
  os_log_type_t v19;
  NSObject *v20;
  uint64_t v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint8_t *v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD v31[5];
  char v32;

  v10 = v5;
  v12 = type metadata accessor for EnvironmentValues(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_5E1A4(v10, (uint64_t)v31, a1);
  if (v32 == 1)
    return sub_66F14((uint64_t)v31, a5, a2);
  v18 = v31[0];
  v19 = static os_log_type_t.fault.getter(v16);
  v20 = static Log.runtimeIssuesLog.getter();
  if (os_log_type_enabled(v20, v19))
  {
    v27 = a4;
    v21 = swift_slowAlloc(12, -1);
    v28 = v18;
    v22 = (uint8_t *)v21;
    v23 = swift_slowAlloc(32, -1);
    v24 = a3;
    v25 = v23;
    v30 = v23;
    *(_DWORD *)v22 = 136315138;
    v29 = sub_57CD8(v24, v27, &v30);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v29, &v30, v22 + 4, v22 + 12);
    _os_log_impl(&dword_0, v20, v19, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v22, 0xCu);
    swift_arrayDestroy(v25, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v25, -1, -1);
    v26 = v22;
    v18 = v28;
    swift_slowDealloc(v26, -1, -1);
  }

  EnvironmentValues.init()();
  swift_getAtKeyPath(v15, v18);
  swift_release(v18);
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
}

uint64_t sub_77864@<X0>(uint64_t a1@<X8>)
{
  return sub_78A08(&qword_3202C8, (uint64_t (*)(_QWORD *, uint64_t))sub_5DC98, 0xD00000000000001BLL, 0x800000000026F400, a1);
}

uint64_t sub_77890(void *a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  os_log_type_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  id v18;
  uint64_t v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v23;

  v4 = type metadata accessor for EnvironmentValues(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) != 0)
  {
    v18 = a1;
  }
  else
  {
    v8 = swift_retain(a1);
    v9 = static os_log_type_t.fault.getter(v8);
    v10 = static Log.runtimeIssuesLog.getter();
    v11 = v9;
    if (os_log_type_enabled(v10, v9))
    {
      v12 = (uint8_t *)swift_slowAlloc(12, -1);
      v13 = swift_slowAlloc(32, -1);
      v23 = v13;
      *(_DWORD *)v12 = 136315138;
      v21 = v12 + 4;
      v14 = sub_5C154(&qword_3202C0);
      v15 = _typeName(_:qualified:)(v14, 0);
      v17 = v16;
      v22 = sub_57CD8(v15, v16, &v23);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v22, &v23, v21, v12 + 12);
      swift_bridgeObjectRelease(v17);
      _os_log_impl(&dword_0, v10, v11, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v12, 0xCu);
      swift_arrayDestroy(v13, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v13, -1, -1);
      swift_slowDealloc(v12, -1, -1);
    }

    EnvironmentValues.init()();
    swift_getAtKeyPath(v7, a1);
    sub_794D8(a1, 0);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return v23;
  }
  return (uint64_t)a1;
}

uint64_t sub_77A64@<X0>(uint64_t a1@<X8>)
{
  return sub_78E4C(&qword_320268, &qword_31FA60, 0x6C616E6F6974704FLL, 0xEE003E444955553CLL, a1);
}

void sub_77A98(uint64_t a1@<X0>, char a2@<W1>, _BYTE *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  os_log_type_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v17[2];
  uint64_t v18;
  uint64_t v19;

  v6 = type metadata accessor for EnvironmentValues(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) != 0)
  {
    *a3 = a1 & 1;
  }
  else
  {
    v10 = sub_64DD8(a1, 0);
    v11 = static os_log_type_t.fault.getter(v10);
    v12 = static Log.runtimeIssuesLog.getter();
    v13 = v11;
    if (os_log_type_enabled(v12, v11))
    {
      v14 = (uint8_t *)swift_slowAlloc(12, -1);
      v15 = swift_slowAlloc(32, -1);
      v17[1] = a3;
      v16 = v15;
      v19 = v15;
      *(_DWORD *)v14 = 136315138;
      v18 = sub_57CD8(0xD000000000000017, 0x800000000026F440, &v19);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v18, &v19, v14 + 4, v14 + 12);
      _os_log_impl(&dword_0, v12, v13, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v14, 0xCu);
      swift_arrayDestroy(v16, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v16, -1, -1);
      swift_slowDealloc(v14, -1, -1);
    }

    EnvironmentValues.init()();
    swift_getAtKeyPath(v9, a1);
    sub_64FFC(a1, 0);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
}

uint64_t sub_77C6C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t EnumCaseMultiPayload;
  uint64_t v13;
  os_log_type_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v20[2];
  uint64_t v21;
  uint64_t v22;

  v2 = v1;
  v4 = type metadata accessor for EnvironmentValues(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_5C154(&qword_3202D0);
  __chkstk_darwin(v8);
  v10 = (_QWORD *)((char *)v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_5E1A4(v2, (uint64_t)v10, &qword_3202D0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v10, v8);
  if ((_DWORD)EnumCaseMultiPayload == 1)
    return sub_794E4((uint64_t)v10, a1);
  v13 = *v10;
  v14 = static os_log_type_t.fault.getter(EnumCaseMultiPayload);
  v15 = static Log.runtimeIssuesLog.getter();
  v16 = v14;
  if (os_log_type_enabled(v15, v14))
  {
    v17 = (uint8_t *)swift_slowAlloc(12, -1);
    v18 = swift_slowAlloc(32, -1);
    v20[1] = a1;
    v19 = v18;
    v22 = v18;
    *(_DWORD *)v17 = 136315138;
    v21 = sub_57CD8(0xD000000000000019, 0x800000000026F420, &v22);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v21, &v22, v17 + 4, v17 + 12);
    _os_log_impl(&dword_0, v15, v16, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v17, 0xCu);
    swift_arrayDestroy(v19, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v19, -1, -1);
    swift_slowDealloc(v17, -1, -1);
  }

  EnvironmentValues.init()();
  swift_getAtKeyPath(v7, v13);
  swift_release(v13);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_77E94(uint64_t a1, char a2)
{
  return sub_78280(a1, a2, 0xD000000000000027, 0x800000000026F380);
}

uint64_t sub_77EB0(void *a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  os_log_type_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  id v14;
  uint64_t v16;
  uint64_t v17;

  v4 = type metadata accessor for EnvironmentValues(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) != 0)
  {
    v14 = a1;
  }
  else
  {
    v8 = swift_retain(a1);
    v9 = static os_log_type_t.fault.getter(v8);
    v10 = static Log.runtimeIssuesLog.getter();
    v11 = v9;
    if (os_log_type_enabled(v10, v9))
    {
      v12 = (uint8_t *)swift_slowAlloc(12, -1);
      v13 = swift_slowAlloc(32, -1);
      v17 = v13;
      *(_DWORD *)v12 = 136315138;
      v16 = sub_57CD8(0xD000000000000013, 0x800000000026F2F0, &v17);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v16, &v17, v12 + 4, v12 + 12);
      _os_log_impl(&dword_0, v10, v11, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v12, 0xCu);
      swift_arrayDestroy(v13, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v13, -1, -1);
      swift_slowDealloc(v12, -1, -1);
    }

    EnvironmentValues.init()();
    swift_getAtKeyPath(v7, a1);
    sub_794D8(a1, 0);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return v17;
  }
  return (uint64_t)a1;
}

uint64_t sub_78078(uint64_t a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  os_log_type_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;

  v4 = type metadata accessor for EnvironmentValues(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = swift_retain(a1);
  if ((a2 & 1) == 0)
  {
    v9 = static os_log_type_t.fault.getter(v8);
    v10 = static Log.runtimeIssuesLog.getter();
    v11 = v9;
    if (os_log_type_enabled(v10, v9))
    {
      v12 = (uint8_t *)swift_slowAlloc(12, -1);
      v13 = swift_slowAlloc(32, -1);
      v16 = v13;
      *(_DWORD *)v12 = 136315138;
      v15 = sub_57CD8(0xD00000000000001BLL, 0x800000000026F580, &v16);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v15, &v16, v12 + 4, v12 + 12);
      _os_log_impl(&dword_0, v10, v11, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v12, 0xCu);
      swift_arrayDestroy(v13, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v13, -1, -1);
      swift_slowDealloc(v12, -1, -1);
    }

    EnvironmentValues.init()();
    swift_getAtKeyPath(v7, a1);
    j__swift_release(a1);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return v16;
  }
  return a1;
}

uint64_t sub_78238@<X0>(uint64_t a1@<X8>)
{
  return sub_76B2C(&qword_320498, (uint64_t (*)(_QWORD))&type metadata accessor for ScenePhase, 0x616850656E656353, 0xEA00000000006573, a1);
}

uint64_t sub_78264(uint64_t a1, char a2)
{
  return sub_78280(a1, a2, 0x786F725074736F48, 0xE900000000000079);
}

uint64_t sub_78280(uint64_t a1, char a2, uint64_t a3, unint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  os_log_type_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v8 = type metadata accessor for EnvironmentValues(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = swift_retain(a1);
  if ((a2 & 1) == 0)
  {
    v13 = static os_log_type_t.fault.getter(v12);
    v14 = static Log.runtimeIssuesLog.getter();
    v15 = v13;
    if (os_log_type_enabled(v14, v13))
    {
      v22 = a4;
      v16 = (uint8_t *)swift_slowAlloc(12, -1);
      v17 = swift_slowAlloc(32, -1);
      v18 = a3;
      v19 = v17;
      v24 = v17;
      *(_DWORD *)v16 = 136315138;
      v23 = sub_57CD8(v18, v22, &v24);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v23, &v24, v16 + 4, v16 + 12);
      _os_log_impl(&dword_0, v14, v15, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v16, 0xCu);
      swift_arrayDestroy(v19, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v19, -1, -1);
      swift_slowDealloc(v16, -1, -1);
    }

    EnvironmentValues.init()();
    swift_getAtKeyPath(v11, a1);
    swift_release(a1);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    return v24;
  }
  return a1;
}

uint64_t sub_7843C(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  os_log_type_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;

  v6 = type metadata accessor for EnvironmentValues(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a3 & 1) != 0)
  {
    swift_bridgeObjectRetain(a2);
  }
  else
  {
    v10 = swift_retain(a1);
    v11 = static os_log_type_t.fault.getter(v10);
    v12 = static Log.runtimeIssuesLog.getter();
    v13 = v11;
    if (os_log_type_enabled(v12, v11))
    {
      v14 = (uint8_t *)swift_slowAlloc(12, -1);
      v15 = swift_slowAlloc(32, -1);
      v19 = v15;
      *(_DWORD *)v14 = 136315138;
      v17 = v14 + 4;
      v18 = sub_57CD8(0xD000000000000010, 0x800000000026F520, &v19);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v18, &v19, v17, v14 + 12);
      _os_log_impl(&dword_0, v12, v13, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v14, 0xCu);
      swift_arrayDestroy(v15, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v15, -1, -1);
      swift_slowDealloc(v14, -1, -1);
    }

    EnvironmentValues.init()();
    swift_getAtKeyPath(v9, a1);
    sub_79534(a1, a2, 0);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    return v19;
  }
  return a1;
}

uint64_t sub_78618@<X0>(uint64_t a1@<X8>)
{
  return sub_76B2C(&qword_320308, (uint64_t (*)(_QWORD))&type metadata accessor for DynamicTypeSize, 0x5463696D616E7944, 0xEF657A6953657079, a1);
}

void sub_7864C(uint64_t a1@<X0>, char a2@<W1>, _BYTE *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  os_log_type_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v17[2];
  uint64_t v18;
  uint64_t v19;

  v6 = type metadata accessor for EnvironmentValues(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) != 0)
  {
    *a3 = a1;
  }
  else
  {
    v10 = sub_64DD8(a1, 0);
    v11 = static os_log_type_t.fault.getter(v10);
    v12 = static Log.runtimeIssuesLog.getter();
    v13 = v11;
    if (os_log_type_enabled(v12, v11))
    {
      v14 = (uint8_t *)swift_slowAlloc(12, -1);
      v15 = swift_slowAlloc(32, -1);
      v17[1] = a3;
      v16 = v15;
      v19 = v15;
      *(_DWORD *)v14 = 136315138;
      v18 = sub_57CD8(0xD000000000000021, 0x800000000026F460, &v19);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v18, &v19, v14 + 4, v14 + 12);
      _os_log_impl(&dword_0, v12, v13, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v14, 0xCu);
      swift_arrayDestroy(v16, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v16, -1, -1);
      swift_slowDealloc(v14, -1, -1);
    }

    EnvironmentValues.init()();
    swift_getAtKeyPath(v9, a1);
    sub_64FFC(a1, 0);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
}

double sub_7881C(uint64_t a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  os_log_type_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v15;
  double v16;

  v4 = type metadata accessor for EnvironmentValues(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) != 0)
    return *(double *)&a1;
  v8 = swift_retain(a1);
  v9 = static os_log_type_t.fault.getter(v8);
  v10 = static Log.runtimeIssuesLog.getter();
  v11 = v9;
  if (os_log_type_enabled(v10, v9))
  {
    v12 = (uint8_t *)swift_slowAlloc(12, -1);
    v13 = swift_slowAlloc(32, -1);
    v16 = *(double *)&v13;
    *(_DWORD *)v12 = 136315138;
    v15 = sub_57CD8(0x74616F6C464743, 0xE700000000000000, (uint64_t *)&v16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v15, &v16, v12 + 4, v12 + 12);
    _os_log_impl(&dword_0, v10, v11, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v12, 0xCu);
    swift_arrayDestroy(v13, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v13, -1, -1);
    swift_slowDealloc(v12, -1, -1);
  }

  EnvironmentValues.init()();
  swift_getAtKeyPath(v7, a1);
  sub_64FFC(a1, 0);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v16;
}

uint64_t sub_789DC@<X0>(uint64_t a1@<X8>)
{
  return sub_78A08(&qword_3202F0, (uint64_t (*)(_QWORD *, uint64_t))sub_5DC98, 0xD000000000000022, 0x800000000026F490, a1);
}

uint64_t sub_78A08@<X0>(uint64_t *a1@<X0>, uint64_t (*a2)(_QWORD *, uint64_t)@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v18;
  os_log_type_t v19;
  NSObject *v20;
  uint64_t v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint8_t *v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD v31[5];
  char v32;

  v10 = v5;
  v12 = type metadata accessor for EnvironmentValues(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_5E1A4(v10, (uint64_t)v31, a1);
  if (v32 == 1)
    return a2(v31, a5);
  v18 = v31[0];
  v19 = static os_log_type_t.fault.getter(v16);
  v20 = static Log.runtimeIssuesLog.getter();
  if (os_log_type_enabled(v20, v19))
  {
    v27 = a4;
    v21 = swift_slowAlloc(12, -1);
    v28 = v18;
    v22 = (uint8_t *)v21;
    v23 = swift_slowAlloc(32, -1);
    v24 = a3;
    v25 = v23;
    v30 = v23;
    *(_DWORD *)v22 = 136315138;
    v29 = sub_57CD8(v24, v27, &v30);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v29, &v30, v22 + 4, v22 + 12);
    _os_log_impl(&dword_0, v20, v19, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v22, 0xCu);
    swift_arrayDestroy(v25, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v25, -1, -1);
    v26 = v22;
    v18 = v28;
    swift_slowDealloc(v26, -1, -1);
  }

  EnvironmentValues.init()();
  swift_getAtKeyPath(v15, v18);
  swift_release(v18);
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
}

uint64_t sub_78BF0@<X0>(uint64_t a1@<X8>)
{
  return sub_76B2C(&qword_3202B8, (uint64_t (*)(_QWORD))&type metadata accessor for DataStack, 0x6361745361746144, 0xE90000000000006BLL, a1);
}

uint64_t sub_78C1C@<X0>(uint64_t a1@<X8>)
{
  return sub_77678(&qword_3202F8, &qword_320300, 0xD000000000000017, 0x800000000026F4C0, a1);
}

uint64_t sub_78C48(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  os_log_type_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;

  v4 = type metadata accessor for EnvironmentValues(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 0x100) == 0)
  {
    v8 = swift_retain(a1);
    v9 = static os_log_type_t.fault.getter(v8);
    v10 = static Log.runtimeIssuesLog.getter();
    v11 = v9;
    if (os_log_type_enabled(v10, v9))
    {
      v12 = (uint8_t *)swift_slowAlloc(12, -1);
      v13 = swift_slowAlloc(32, -1);
      v17 = v13;
      *(_DWORD *)v12 = 136315138;
      v15 = v12 + 4;
      v16 = sub_57CD8(0x6C616E6F6974704FLL, 0xEC0000003E44493CLL, &v17);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v16, &v17, v15, v12 + 12);
      _os_log_impl(&dword_0, v10, v11, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v12, 0xCu);
      swift_arrayDestroy(v13, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v13, -1, -1);
      swift_slowDealloc(v12, -1, -1);
    }

    EnvironmentValues.init()();
    swift_getAtKeyPath(v7, a1);
    sub_79528(a1, a2, 0);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return v17;
  }
  return a1;
}

uint64_t sub_78E20@<X0>(uint64_t a1@<X8>)
{
  return sub_78E4C(&qword_3202A8, &qword_3202B0, 0xD000000000000015, 0x800000000026F3E0, a1);
}

uint64_t sub_78E4C@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t EnumCaseMultiPayload;
  uint64_t v20;
  os_log_type_t v21;
  NSObject *v22;
  uint64_t v23;
  uint8_t *v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v29 = a3;
  v9 = v5;
  v11 = type metadata accessor for EnvironmentValues(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_5C154(a1);
  __chkstk_darwin(v15);
  v17 = (uint64_t *)((char *)&v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_5E1A4(v9, (uint64_t)v17, a1);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v17, v15);
  if ((_DWORD)EnumCaseMultiPayload == 1)
    return sub_66F14((uint64_t)v17, a5, a2);
  v20 = *v17;
  v21 = static os_log_type_t.fault.getter(EnumCaseMultiPayload);
  v22 = static Log.runtimeIssuesLog.getter();
  if (os_log_type_enabled(v22, v21))
  {
    v27 = a4;
    v23 = swift_slowAlloc(12, -1);
    v28 = a5;
    v24 = (uint8_t *)v23;
    v25 = swift_slowAlloc(32, -1);
    v31 = v25;
    *(_DWORD *)v24 = 136315138;
    v30 = sub_57CD8(v29, v27, &v31);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v30, &v31, v24 + 4, v24 + 12);
    _os_log_impl(&dword_0, v22, v21, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v24, 0xCu);
    swift_arrayDestroy(v25, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v25, -1, -1);
    swift_slowDealloc(v24, -1, -1);
  }

  EnvironmentValues.init()();
  swift_getAtKeyPath(v14, v20);
  swift_release(v20);
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
}

uint64_t sub_79074@<X0>(uint64_t a1@<X8>)
{
  return sub_76B2C(&qword_3202E8, (uint64_t (*)(_QWORD))&type metadata accessor for ColorScheme, 0x686353726F6C6F43, 0xEB00000000656D65, a1);
}

uint64_t sub_790A4@<X0>(uint64_t a1@<X8>)
{
  return sub_76B2C(&qword_3204A8, (uint64_t (*)(_QWORD))&type metadata accessor for TimeZone, 0x656E6F5A656D6954, 0xE800000000000000, a1);
}

uint64_t sub_790CC@<X0>(uint64_t a1@<X8>)
{
  return sub_76B2C(&qword_3204B0, (uint64_t (*)(_QWORD))&type metadata accessor for Locale, 0x656C61636F4CLL, 0xE600000000000000, a1);
}

uint64_t sub_790F0@<X0>(uint64_t a1@<X8>)
{
  return sub_76B2C(&qword_3204A0, (uint64_t (*)(_QWORD))&type metadata accessor for Calendar, 0x7261646E656C6143, 0xE800000000000000, a1);
}

double sub_79118(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  os_log_type_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  double v21;

  v6 = type metadata accessor for EnvironmentValues(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a3 & 1) != 0)
    return *(double *)&a1;
  v10 = swift_retain(a1);
  v11 = static os_log_type_t.fault.getter(v10);
  v12 = static Log.runtimeIssuesLog.getter();
  v13 = v11;
  if (os_log_type_enabled(v12, v11))
  {
    v14 = (uint8_t *)swift_slowAlloc(12, -1);
    v15 = swift_slowAlloc(32, -1);
    v19 = a2;
    v16 = v15;
    v21 = *(double *)&v15;
    *(_DWORD *)v14 = 136315138;
    v20 = sub_57CD8(0x657A69534743, 0xE600000000000000, (uint64_t *)&v21);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v20, &v21, v14 + 4, v14 + 12);
    _os_log_impl(&dword_0, v12, v13, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v14, 0xCu);
    swift_arrayDestroy(v16, 1, (char *)&type metadata for Any + 8);
    v17 = v16;
    a2 = v19;
    swift_slowDealloc(v17, -1, -1);
    swift_slowDealloc(v14, -1, -1);
  }

  EnvironmentValues.init()();
  swift_getAtKeyPath(v9, a1);
  sub_79528(a1, a2, 0);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return v21;
}

uint64_t sub_792E8@<X0>(uint64_t a1@<X8>)
{
  return sub_78E4C(&qword_320270, &qword_320278, 0xD00000000000001DLL, 0x800000000026F310, a1);
}

uint64_t sub_79314(uint64_t a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  os_log_type_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;

  v4 = type metadata accessor for EnvironmentValues(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) != 0)
    return a1 & 1;
  v8 = swift_retain(a1);
  v9 = static os_log_type_t.fault.getter(v8);
  v10 = static Log.runtimeIssuesLog.getter();
  v11 = v9;
  if (os_log_type_enabled(v10, v9))
  {
    v12 = (uint8_t *)swift_slowAlloc(12, -1);
    v13 = swift_slowAlloc(32, -1);
    v16 = v13;
    *(_DWORD *)v12 = 136315138;
    v15 = sub_57CD8(0xD000000000000012, 0x800000000026F330, &v16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v15, &v16, v12 + 4, v12 + 12);
    _os_log_impl(&dword_0, v10, v11, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v12, 0xCu);
    swift_arrayDestroy(v13, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v13, -1, -1);
    swift_slowDealloc(v12, -1, -1);
  }

  EnvironmentValues.init()();
  swift_getAtKeyPath(v7, a1);
  sub_64FFC(a1, 0);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v16;
}

void sub_794D8(id a1, char a2)
{
  if ((a2 & 1) != 0)

  else
    swift_release(a1);
}

uint64_t sub_794E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ContextAssetInfoAnalytics(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_79528(uint64_t result, uint64_t a2, char a3)
{
  if ((a3 & 1) == 0)
    return swift_release(result);
  return result;
}

uint64_t sub_79534(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return swift_bridgeObjectRelease(a2);
  else
    return swift_release(a1);
}

uint64_t sub_79548(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for AssetActionImplementation(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_79594()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3203B8;
  if (!qword_3203B8)
  {
    v1 = sub_667D0(&qword_3203B0);
    sub_66954();
    sub_67060(&qword_31F7D0, &qword_31F7D8, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_3203B8);
  }
  return result;
}

unint64_t sub_79620()
{
  unint64_t result;

  result = qword_3203C0;
  if (!qword_3203C0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for CGFloat, &type metadata for CGFloat);
    atomic_store(result, (unint64_t *)&qword_3203C0);
  }
  return result;
}

uint64_t sub_79668(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for RoundedRectangle(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

_QWORD *sub_796AC(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v3;
  int v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v3 = (_QWORD *)a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v15 = *a2;
    *v3 = *a2;
    v3 = (_QWORD *)(v15 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain(v15);
  }
  else
  {
    *(_BYTE *)a1 = *(_BYTE *)a2;
    *(_QWORD *)(a1 + 8) = a2[1];
    v5 = a2[4];
    v6 = *((_OWORD *)a2 + 1);
    *(_OWORD *)(a1 + 16) = v6;
    *(_QWORD *)(a1 + 32) = v5;
    v7 = *(int *)(a3 + 28);
    v8 = (uint64_t *)(a1 + v7);
    v9 = (uint64_t *)((char *)a2 + v7);
    swift_retain(v6);
    swift_retain(v5);
    v10 = sub_5C154(&qword_320160);
    if (swift_getEnumCaseMultiPayload(v9, v10) == 1)
    {
      v11 = type metadata accessor for SizeConstants(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v8, v9, v11);
      v12 = v8;
      v13 = v10;
      v14 = 1;
    }
    else
    {
      v16 = *v9;
      *v8 = *v9;
      swift_retain(v16);
      v12 = v8;
      v13 = v10;
      v14 = 0;
    }
    swift_storeEnumTagMultiPayload(v12, v13, v14);
  }
  return v3;
}

uint64_t sub_797AC(uint64_t a1, uint64_t a2)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  swift_release(*(_QWORD *)(a1 + 16));
  swift_release(*(_QWORD *)(a1 + 32));
  v4 = (_QWORD *)(a1 + *(int *)(a2 + 28));
  v5 = sub_5C154(&qword_320160);
  if (swift_getEnumCaseMultiPayload(v4, v5) != 1)
    return swift_release(*v4);
  v6 = type metadata accessor for SizeConstants(0);
  return (*(uint64_t (**)(_QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v4, v6);
}

uint64_t sub_7982C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  __int128 v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 32);
  v5 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 32) = v4;
  v6 = *(int *)(a3 + 28);
  v7 = (uint64_t *)(a1 + v6);
  v8 = (uint64_t *)(a2 + v6);
  swift_retain(v5);
  swift_retain(v4);
  v9 = sub_5C154(&qword_320160);
  if (swift_getEnumCaseMultiPayload(v8, v9) == 1)
  {
    v10 = type metadata accessor for SizeConstants(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v7, v8, v10);
    v11 = 1;
  }
  else
  {
    v12 = *v8;
    *v7 = *v8;
    swift_retain(v12);
    v11 = 0;
  }
  swift_storeEnumTagMultiPayload(v7, v9, v11);
  return a1;
}

uint64_t sub_798F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v6;
  swift_retain(v6);
  swift_release(v7);
  v8 = *(_QWORD *)(a2 + 32);
  v9 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v8;
  swift_retain(v8);
  swift_release(v9);
  if (a1 != a2)
  {
    v10 = *(int *)(a3 + 28);
    v11 = (uint64_t *)(a1 + v10);
    v12 = (uint64_t *)(a2 + v10);
    sub_5E09C(a1 + v10, &qword_320160);
    v13 = sub_5C154(&qword_320160);
    if (swift_getEnumCaseMultiPayload(v12, v13) == 1)
    {
      v14 = type metadata accessor for SizeConstants(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v11, v12, v14);
      v15 = 1;
    }
    else
    {
      v16 = *v12;
      *v11 = *v12;
      swift_retain(v16);
      v15 = 0;
    }
    swift_storeEnumTagMultiPayload(v11, v13, v15);
  }
  return a1;
}

uint64_t sub_799EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  void *v5;
  const void *v6;
  uint64_t v7;
  uint64_t v8;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  v4 = *(int *)(a3 + 28);
  v5 = (void *)(a1 + v4);
  v6 = (const void *)(a2 + v4);
  v7 = sub_5C154(&qword_320160);
  if (swift_getEnumCaseMultiPayload(v6, v7) == 1)
  {
    v8 = type metadata accessor for SizeConstants(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v5, v6, v8);
    swift_storeEnumTagMultiPayload(v5, v7, 1);
  }
  else
  {
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  return a1;
}

uint64_t sub_79AA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  const void *v10;
  uint64_t v11;
  uint64_t v12;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v6 = *(_QWORD *)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release(v6);
  v7 = *(_QWORD *)(a1 + 32);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release(v7);
  if (a1 != a2)
  {
    v8 = *(int *)(a3 + 28);
    v9 = (void *)(a1 + v8);
    v10 = (const void *)(a2 + v8);
    sub_5E09C(a1 + v8, &qword_320160);
    v11 = sub_5C154(&qword_320160);
    if (swift_getEnumCaseMultiPayload(v10, v11) == 1)
    {
      v12 = type metadata accessor for SizeConstants(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v9, v10, v12);
      swift_storeEnumTagMultiPayload(v9, v11, 1);
    }
    else
    {
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_79B8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_79B98);
}

uint64_t sub_79B98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_5C154(&qword_3201B0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 28), a2, v8);
  }
}

uint64_t sub_79C18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_79C24);
}

uint64_t sub_79C24(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_5C154(&qword_3201B0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 28), a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for PriceTrackingOptInView(uint64_t a1)
{
  uint64_t result;

  result = qword_320510;
  if (!qword_320510)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for PriceTrackingOptInView);
  return result;
}

void sub_79CD8(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[4];

  v4[0] = &unk_2582E8;
  v4[1] = (char *)&value witness table for () + 64;
  v4[2] = (char *)&value witness table for () + 64;
  sub_774D4(319);
  if (v3 <= 0x3F)
  {
    v4[3] = *(_QWORD *)(v2 - 8) + 64;
    swift_initStructMetadata(a1, 256, 4, v4, a1 + 16);
  }
}

uint64_t sub_79D5C(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_2B548C, 1);
}

BOOL static Page.UpdateError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_79D84@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  __n128 v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  __n128 v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(char *, char *, uint64_t);
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  unint64_t v50;
  char *v51;
  void (*v52)(char *, uint64_t);
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  char *v65;

  v2 = v1;
  v64 = a1;
  v3 = type metadata accessor for LocalizerRequest(0);
  __chkstk_darwin(v3);
  v63 = (char *)&v54 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v65 = (char *)&v54 - v6;
  v7 = sub_5C154(&qword_320550);
  v61 = *(_QWORD *)(v7 - 8);
  v62 = v7;
  __chkstk_darwin(v7);
  v60 = (char *)&v54 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for PriceTrackingOptInView(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  __chkstk_darwin(v9);
  v12 = (char *)&v54 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for ActionMetrics(0);
  v14 = __chkstk_darwin(v13);
  v16 = (char *)&v54 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = type metadata accessor for ClosureAction(0, v14);
  v58 = *(_QWORD *)(v55 - 8);
  __chkstk_darwin(v55);
  v57 = (char *)&v54 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v56 = (char *)&v54 - v19;
  __chkstk_darwin(v20);
  v22 = (char *)&v54 - v21;
  v24 = __chkstk_darwin(v23);
  v26 = (char *)&v54 - v25;
  static ActionMetrics.notInstrumented.getter(v24);
  sub_7B6B8(v2, (uint64_t)v12);
  v27 = *(unsigned __int8 *)(v10 + 80);
  v28 = (v27 + 16) & ~v27;
  v29 = v28 + v11;
  v30 = v27 | 7;
  v31 = swift_allocObject(&unk_2E8030, v29, v27 | 7);
  sub_7B700((uint64_t)v12, v31 + v28);
  v32 = v26;
  v33.n128_f64[0] = ClosureAction.init(actionMetrics:body:)(v16, sub_7B744, v31);
  static ActionMetrics.notInstrumented.getter(v33);
  sub_7B6B8(v2, (uint64_t)v12);
  v34 = swift_allocObject(&unk_2E8058, v29, v30);
  sub_7B700((uint64_t)v12, v34 + v28);
  v35 = v22;
  ClosureAction.init(actionMetrics:body:)(v16, sub_7B764, v34);
  v59 = v2;
  v36 = sub_17EC4C();
  v38 = v37;
  static LocalizerRequest.verbatim(_:)(v36);
  swift_bridgeObjectRelease(v38);
  v39 = sub_17EC4C();
  v41 = v40;
  v42 = v63;
  static LocalizerRequest.verbatim(_:)(v39);
  swift_bridgeObjectRelease(v41);
  sub_7B6B8(v59, (uint64_t)v12);
  v43 = swift_allocObject(&unk_2E8080, v29, v30);
  sub_7B700((uint64_t)v12, v43 + v28);
  v44 = v58;
  v45 = *(void (**)(char *, char *, uint64_t))(v58 + 16);
  v46 = v55;
  v47 = v56;
  v45(v56, v32, v55);
  v48 = v57;
  v45(v57, v35, v46);
  v49 = sub_5C154(&qword_320558);
  v50 = sub_7B958();
  v51 = v60;
  ModalActionSheet.init<A, B>(firstButtonTitle:firstButtonActionModel:secondButtonTitle:secondButtonActionModel:content:)(v65, v47, v42, v48, sub_7B91C, v43, v49, v46, v46, v50, &protocol witness table for ClosureAction, &protocol witness table for ClosureAction);
  (*(void (**)(uint64_t, char *, uint64_t))(v61 + 32))(v64, v51, v62);
  v52 = *(void (**)(char *, uint64_t))(v44 + 8);
  v52(v35, v46);
  return ((uint64_t (*)(char *, uint64_t))v52)(v32, v46);
}

uint64_t sub_7A1E4@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X0>, uint64_t a2@<X8>, __n128 a3@<Q0>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  double v22;
  double v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;

  v5 = type metadata accessor for SizeConstants.Spacing(0, a3);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for SizeConstants(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_5C154(&qword_320570);
  v14 = __chkstk_darwin(v13);
  v16 = (char *)&v32 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v16 = static HorizontalAlignment.center.getter(v14);
  *((_QWORD *)v16 + 1) = 0;
  v16[16] = 0;
  v17 = sub_5C154(&qword_320578);
  v18 = sub_7A3C0(a1, (uint64_t)&v16[*(int *)(v17 + 44)]);
  v19 = static Edge.Set.bottom.getter(v18);
  type metadata accessor for PriceTrackingOptInView(0);
  v20 = sub_76D64((uint64_t)v12);
  SizeConstants.spacing.getter(v20);
  v21 = (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  v22 = SizeConstants.Spacing.xxxl.getter(v21);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v23 = EdgeInsets.init(_all:)(v22);
  v25 = v24;
  v27 = v26;
  v29 = v28;
  sub_5E1A4((uint64_t)v16, a2, &qword_320570);
  v30 = a2 + *(int *)(sub_5C154(&qword_320558) + 36);
  *(_BYTE *)v30 = v19;
  *(double *)(v30 + 8) = v23;
  *(_QWORD *)(v30 + 16) = v25;
  *(_QWORD *)(v30 + 24) = v27;
  *(_QWORD *)(v30 + 32) = v29;
  *(_BYTE *)(v30 + 40) = 0;
  return sub_5E09C((uint64_t)v16, &qword_320570);
}

uint64_t sub_7A3C0@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t KeyPath;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  __int128 v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  double v61;
  double v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  char *v83;
  void *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t OpaqueTypeConformance2;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  unint64_t v100;
  uint64_t v101;
  double v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v126;
  uint64_t v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  char *v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t (*v141)(uint64_t, uint64_t);
  char *v142;
  char *v143;
  char *v144;
  char *v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  char *v151;
  uint64_t v152;
  uint64_t v153;
  char *v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  void *v166;
  uint64_t v167;
  char v168;
  uint64_t v169;
  uint64_t v170;
  _OWORD v171[3];

  v141 = a1;
  v158 = a2;
  v156 = sub_5C154(&qword_320388);
  v157 = *(_QWORD *)(v156 - 8);
  __chkstk_darwin(v156);
  v154 = (char *)&v126 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v153 = sub_5C154(&qword_320390);
  v155 = *(_QWORD *)(v153 - 8);
  __chkstk_darwin(v153);
  v151 = (char *)&v126 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_5C154(&qword_31F7E8);
  __chkstk_darwin(v4);
  v142 = (char *)&v126 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v149 = sub_5C154(&qword_320580);
  v150 = *(_QWORD *)(v149 - 8);
  __chkstk_darwin(v149);
  v143 = (char *)&v126 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v148 = sub_5C154(&qword_320588);
  v147 = *(_QWORD *)(v148 - 8);
  __chkstk_darwin(v148);
  v145 = (char *)&v126 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v146 = sub_5C154(&qword_320590);
  __chkstk_darwin(v146);
  v144 = (char *)&v126 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v152 = sub_5C154(&qword_320598);
  __chkstk_darwin(v152);
  v160 = (uint64_t)&v126 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __chkstk_darwin(v10);
  v161 = (uint64_t)&v126 - v12;
  v140 = type metadata accessor for SizeConstants.Spacing(0, v11);
  v139 = *(_QWORD *)(v140 - 8);
  __chkstk_darwin(v140);
  v137 = (char *)&v126 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v138 = type metadata accessor for SizeConstants(0);
  v136 = *(_QWORD *)(v138 - 8);
  __chkstk_darwin(v138);
  v135 = (uint64_t)&v126 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v132 = type metadata accessor for Image.Scale(0);
  v130 = *(_QWORD *)(v132 - 8);
  __chkstk_darwin(v132);
  v128 = (char *)&v126 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for DynamicTypeSize(0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (char *)&v126 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v131 = sub_5C154(&qword_3205A0);
  v129 = *(_QWORD *)(v131 - 8);
  __chkstk_darwin(v131);
  v21 = (char *)&v126 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v126 = sub_5C154(&qword_3205A8);
  __chkstk_darwin(v126);
  v23 = (char *)&v126 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v127 = sub_5C154(&qword_3205B0);
  __chkstk_darwin(v127);
  v25 = (char *)&v126 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = sub_5C154(&qword_3205B8);
  __chkstk_darwin(v26);
  v28 = (char *)&v126 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v133 = sub_5C154(&qword_3205C0);
  __chkstk_darwin(v133);
  v30 = (char *)&v126 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v134 = sub_5C154(&qword_3205C8);
  __chkstk_darwin(v134);
  v162 = (uint64_t)&v126 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v32);
  v159 = (uint64_t)&v126 - v33;
  v34 = Image.init(systemName:)(0x73616C732E676174, 0xEE006C6C69662E68);
  v35 = static Font.largeTitle.getter();
  KeyPath = swift_getKeyPath(&unk_258350);
  v163 = v34;
  v164 = KeyPath;
  v165 = v35;
  (*(void (**)(char *, _QWORD, uint64_t))(v17 + 104))(v19, enum case for DynamicTypeSize.medium(_:), v16);
  v37 = sub_5C154(&qword_3205D0);
  v38 = sub_7B9E4();
  View.dynamicTypeSize(_:)(v19, v37, v38);
  (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  swift_release(v163);
  swift_release(v164);
  swift_release(v165);
  v39 = v130;
  v40 = v128;
  v41 = v132;
  (*(void (**)(char *, _QWORD, uint64_t))(v130 + 104))(v128, enum case for Image.Scale.large(_:), v132);
  v42 = swift_getKeyPath(&off_258380);
  v43 = (uint64_t *)&v23[*(int *)(v126 + 36)];
  v44 = sub_5C154(&qword_3205E0);
  (*(void (**)(char *, char *, uint64_t))(v39 + 16))((char *)v43 + *(int *)(v44 + 28), v40, v41);
  *v43 = v42;
  v45 = v129;
  v46 = v131;
  (*(void (**)(char *, char *, uint64_t))(v129 + 16))(v23, v21, v131);
  (*(void (**)(char *, uint64_t))(v39 + 8))(v40, v41);
  v47 = (*(uint64_t (**)(char *, uint64_t))(v45 + 8))(v21, v46);
  LODWORD(v21) = static HierarchicalShapeStyle.tertiary.getter(v47);
  sub_5E1A4((uint64_t)v23, (uint64_t)v25, &qword_3205A8);
  v48 = v127;
  *(_DWORD *)&v25[*(int *)(v127 + 36)] = (_DWORD)v21;
  sub_5E09C((uint64_t)v23, &qword_3205A8);
  v49 = sub_7BA8C();
  View.accessibilityHidden(_:)(1, v48, v49);
  v50 = sub_5E09C((uint64_t)v25, &qword_3205B0);
  v51 = static Alignment.center.getter(v50);
  _FrameLayout.init(width:height:alignment:)(v171, 0x404D000000000000, 0, 0x404D000000000000, 0, v51, v52);
  sub_5E1A4((uint64_t)v28, (uint64_t)v30, &qword_3205B8);
  v53 = &v30[*(int *)(v133 + 36)];
  v54 = v171[1];
  *(_OWORD *)v53 = v171[0];
  *((_OWORD *)v53 + 1) = v54;
  *((_OWORD *)v53 + 2) = v171[2];
  v55 = sub_5E09C((uint64_t)v28, &qword_3205B8);
  LOBYTE(v21) = static Edge.Set.bottom.getter(v55);
  v133 = (uint64_t)v141 + *(int *)(type metadata accessor for PriceTrackingOptInView(0) + 28);
  v56 = v135;
  v57 = sub_76D64(v135);
  v58 = v137;
  SizeConstants.spacing.getter(v57);
  v141 = *(uint64_t (**)(uint64_t, uint64_t))(v136 + 8);
  v59 = v138;
  v60 = v141(v56, v138);
  v61 = SizeConstants.Spacing.l.getter(v60);
  (*(void (**)(char *, uint64_t))(v139 + 8))(v58, v140);
  v62 = EdgeInsets.init(_all:)(v61);
  v64 = v63;
  v66 = v65;
  v68 = v67;
  v69 = v162;
  sub_5E1A4((uint64_t)v30, v162, &qword_3205C0);
  v70 = v69 + *(int *)(v134 + 36);
  *(_BYTE *)v70 = (_BYTE)v21;
  *(double *)(v70 + 8) = v62;
  *(_QWORD *)(v70 + 16) = v64;
  *(_QWORD *)(v70 + 24) = v66;
  *(_QWORD *)(v70 + 32) = v68;
  *(_BYTE *)(v70 + 40) = 0;
  sub_5E09C((uint64_t)v30, &qword_3205C0);
  sub_66F14(v69, v159, &qword_3205C8);
  v71 = sub_17EC4C();
  v73 = v72;
  v74 = swift_getKeyPath(&unk_2583B0);
  v75 = static Font.title.getter();
  v76 = swift_getKeyPath(&unk_258350);
  v163 = v71;
  v164 = v73;
  LOBYTE(v165) = 0;
  v166 = &_swiftEmptyArrayStorage;
  v167 = v74;
  v168 = 1;
  v169 = v76;
  v170 = v75;
  v77 = enum case for Font.Design.serif (_:);
  v78 = type metadata accessor for Font.Design(0);
  v79 = *(_QWORD *)(v78 - 8);
  v80 = (uint64_t)v142;
  (*(void (**)(char *, uint64_t, uint64_t))(v79 + 104))(v142, v77, v78);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v79 + 56))(v80, 0, 1, v78);
  v81 = sub_5C154(&qword_3203B0);
  v82 = sub_79594();
  v83 = v143;
  View.fontDesign(_:)(v80, v81, v82);
  sub_5E09C(v80, &qword_31F7E8);
  v84 = v166;
  v85 = v167;
  v86 = v169;
  v87 = v170;
  sub_6693C(v163, v164, v165);
  swift_release(v86);
  swift_release(v85);
  swift_bridgeObjectRelease(v84);
  swift_release(v87);
  v163 = v81;
  v164 = v82;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v163, &opaque type descriptor for <<opaque return type of View.fontDesign(_:)>>, 1);
  v89 = v145;
  v90 = v149;
  View.bold(_:)(1, v149, OpaqueTypeConformance2);
  (*(void (**)(char *, uint64_t))(v150 + 8))(v83, v90);
  v91 = v147;
  v92 = (uint64_t)v144;
  v93 = v148;
  (*(void (**)(char *, char *, uint64_t))(v147 + 16))(v144, v89, v148);
  *(_WORD *)(v92 + *(int *)(v146 + 36)) = 256;
  v94 = (*(uint64_t (**)(char *, uint64_t))(v91 + 8))(v89, v93);
  LOBYTE(v93) = static Edge.Set.bottom.getter(v94);
  sub_76D64(v56);
  v95 = v151;
  ScalableSizeConstants.scaled.getter(v59, &protocol witness table for SizeConstants);
  v141(v56, v59);
  v96 = swift_getKeyPath(&unk_2583E0);
  v97 = v154;
  v98 = v153;
  SizeConstants.Scaled.subscript.getter(v96, v153, &protocol witness table for SizeConstants.Spacing);
  swift_release(v96);
  (*(void (**)(char *, uint64_t))(v155 + 8))(v95, v98);
  v99 = swift_getKeyPath(&unk_258410);
  v100 = sub_79620();
  v101 = v156;
  SizeConstants.Scaled.subscript.getter(&v163, v99, v156, v100);
  swift_release(v99);
  (*(void (**)(char *, uint64_t))(v157 + 8))(v97, v101);
  v102 = EdgeInsets.init(_all:)(*(double *)&v163);
  v104 = v103;
  v106 = v105;
  v108 = v107;
  v109 = v160;
  sub_5E1A4(v92, v160, &qword_320590);
  v110 = v109 + *(int *)(v152 + 36);
  *(_BYTE *)v110 = v93;
  *(double *)(v110 + 8) = v102;
  *(_QWORD *)(v110 + 16) = v104;
  *(_QWORD *)(v110 + 24) = v106;
  *(_QWORD *)(v110 + 32) = v108;
  *(_BYTE *)(v110 + 40) = 0;
  sub_5E09C(v92, &qword_320590);
  v111 = v161;
  sub_66F14(v109, v161, &qword_320598);
  v112 = sub_17EC4C();
  v114 = v113;
  v115 = swift_getKeyPath(&unk_2583B0);
  v116 = static Font.body.getter();
  v117 = swift_getKeyPath(&unk_258350);
  LODWORD(v157) = static HierarchicalShapeStyle.secondary.getter();
  v118 = v159;
  v119 = v162;
  sub_5E1A4(v159, v162, &qword_3205C8);
  v120 = v160;
  sub_5E1A4(v111, v160, &qword_320598);
  v121 = v119;
  v122 = v158;
  sub_5E1A4(v121, v158, &qword_3205C8);
  v123 = sub_5C154(&qword_320610);
  sub_5E1A4(v120, v122 + *(int *)(v123 + 48), &qword_320598);
  v124 = v122 + *(int *)(v123 + 64);
  *(_QWORD *)v124 = v112;
  *(_QWORD *)(v124 + 8) = v114;
  *(_BYTE *)(v124 + 16) = 0;
  *(_QWORD *)(v124 + 24) = &_swiftEmptyArrayStorage;
  *(_QWORD *)(v124 + 32) = v115;
  *(_BYTE *)(v124 + 40) = 1;
  *(_QWORD *)(v124 + 48) = v117;
  *(_QWORD *)(v124 + 56) = v116;
  *(_DWORD *)(v124 + 64) = v157;
  *(_WORD *)(v124 + 68) = 256;
  sub_7BBCC(v112, v114, 0);
  swift_bridgeObjectRetain(&_swiftEmptyArrayStorage);
  swift_retain(v115);
  swift_retain(v117);
  swift_retain(v116);
  sub_5E09C(v161, &qword_320598);
  sub_5E09C(v118, &qword_3205C8);
  sub_6693C(v112, v114, 0);
  swift_release(v116);
  swift_release(v117);
  swift_release(v115);
  swift_bridgeObjectRelease(&_swiftEmptyArrayStorage);
  sub_5E09C(v120, &qword_320598);
  return sub_5E09C(v162, &qword_3205C8);
}

uint64_t sub_7B1A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_BYTE *)(v5 + 64) = a5;
  *(_QWORD *)(v5 + 16) = a4;
  v6 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v5 + 24) = static MainActor.shared.getter(v6);
  v7 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
  *(_QWORD *)(v5 + 32) = v7;
  *(_QWORD *)(v5 + 40) = v8;
  return swift_task_switch(sub_7B210, v7, v8);
}

uint64_t sub_7B210()
{
  uint64_t v0;
  int *v1;
  _QWORD *v2;
  uint64_t (*v4)(void);

  v1 = *(int **)(*(_QWORD *)(v0 + 16) + 8);
  v4 = (uint64_t (*)(void))((char *)v1 + *v1);
  v2 = (_QWORD *)swift_task_alloc(v1[1]);
  *(_QWORD *)(v0 + 48) = v2;
  *v2 = v0;
  v2[1] = sub_7B268;
  return v4();
}

uint64_t sub_7B268()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 48));
  return swift_task_switch(sub_7B2B4, *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40));
}

uint64_t sub_7B2B4()
{
  uint64_t v0;
  int *v1;
  _QWORD *v2;
  uint64_t (*v4)(void);

  if (*(_BYTE *)(v0 + 64) == 1)
  {
    v1 = *(int **)(*(_QWORD *)(v0 + 16) + 24);
    v4 = (uint64_t (*)(void))((char *)v1 + *v1);
    v2 = (_QWORD *)swift_task_alloc(v1[1]);
    *(_QWORD *)(v0 + 56) = v2;
    *v2 = v0;
    v2[1] = sub_7B334;
    return v4();
  }
  else
  {
    swift_release(*(_QWORD *)(v0 + 24));
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_7B334()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 56));
  return swift_task_switch(sub_7B380, *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40));
}

uint64_t sub_7B380()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_7B3B0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v21[2];

  v2 = sub_5C154(&qword_329740);
  __chkstk_darwin(v2);
  v4 = (char *)v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for PriceTrackingOptInView(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  __chkstk_darwin(v5);
  v8 = (char *)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)v21 - v10;
  sub_7B6B8(a1, (uint64_t)v21 - v10);
  v12 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v4, 1, 1, v12);
  sub_7B6B8((uint64_t)v11, (uint64_t)v8);
  v13 = type metadata accessor for MainActor(0);
  v14 = static MainActor.shared.getter(v13);
  v15 = *(unsigned __int8 *)(v6 + 80);
  v16 = (v15 + 32) & ~v15;
  v17 = v16 + v7;
  v18 = swift_allocObject(&unk_2E80D0, v16 + v7 + 1, v15 | 7);
  *(_QWORD *)(v18 + 16) = v14;
  *(_QWORD *)(v18 + 24) = &protocol witness table for MainActor;
  sub_7B700((uint64_t)v8, v18 + v16);
  *(_BYTE *)(v18 + v17) = 1;
  v19 = sub_1D979C((uint64_t)v4, (uint64_t)&unk_320628, v18);
  swift_release(v19);
  return sub_7BC7C((uint64_t)v11);
}

uint64_t sub_7B538(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;

  v2 = sub_5C154(&qword_329740);
  __chkstk_darwin(v2);
  v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for PriceTrackingOptInView(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  __chkstk_darwin(v5);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v21 - v10;
  sub_7B6B8(a1, (uint64_t)&v21 - v10);
  v12 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v4, 1, 1, v12);
  sub_7B6B8((uint64_t)v11, (uint64_t)v8);
  v13 = type metadata accessor for MainActor(0);
  v14 = static MainActor.shared.getter(v13);
  v15 = *(unsigned __int8 *)(v6 + 80);
  v16 = (v15 + 32) & ~v15;
  v17 = v16 + v7;
  v18 = swift_allocObject(&unk_2E80A8, v16 + v7 + 1, v15 | 7);
  *(_QWORD *)(v18 + 16) = v14;
  *(_QWORD *)(v18 + 24) = &protocol witness table for MainActor;
  sub_7B700((uint64_t)v8, v18 + v16);
  *(_BYTE *)(v18 + v17) = 0;
  v19 = sub_1D979C((uint64_t)v4, (uint64_t)&unk_320620, v18);
  swift_release(v19);
  return sub_7BC7C((uint64_t)v11);
}

uint64_t sub_7B6B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PriceTrackingOptInView(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_7B700(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PriceTrackingOptInView(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_7B744()
{
  return sub_7B780(sub_7B3B0);
}

uint64_t sub_7B764()
{
  return sub_7B780(sub_7B538);
}

uint64_t sub_7B780(uint64_t (*a1)(uint64_t))
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for PriceTrackingOptInView(0) - 8) + 80);
  return a1(v1 + ((v3 + 16) & ~v3));
}

uint64_t sub_7B7C4()
{
  return EnvironmentValues.imageScale.getter();
}

uint64_t sub_7B7E4(uint64_t a1)
{
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v6;

  type metadata accessor for Image.Scale(0);
  __chkstk_darwin();
  v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v4 + 16))(v3, a1);
  return EnvironmentValues.imageScale.setter(v3);
}

uint64_t sub_7B864()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;

  v1 = type metadata accessor for PriceTrackingOptInView(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  swift_release(*(_QWORD *)(v0 + v4 + 16));
  swift_release(*(_QWORD *)(v0 + v4 + 32));
  v6 = (_QWORD *)(v0 + v4 + *(int *)(v1 + 28));
  v7 = sub_5C154(&qword_320160);
  if (swift_getEnumCaseMultiPayload(v6, v7) == 1)
  {
    v8 = type metadata accessor for SizeConstants(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v6, v8);
  }
  else
  {
    swift_release(*v6);
  }
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

uint64_t sub_7B91C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  __n128 v4;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for PriceTrackingOptInView(0) - 8) + 80);
  return sub_7A1E4((uint64_t (*)(uint64_t, uint64_t))(v1 + ((v3 + 16) & ~v3)), a1, v4);
}

unint64_t sub_7B958()
{
  unint64_t result;
  uint64_t v1;

  result = qword_320560;
  if (!qword_320560)
  {
    v1 = sub_667D0(&qword_320558);
    sub_67060(&qword_320568, &qword_320570, (uint64_t)&protocol conformance descriptor for VStack<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_320560);
  }
  return result;
}

unint64_t sub_7B9E4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3205D8;
  if (!qword_3205D8)
  {
    v1 = sub_667D0(&qword_3205D0);
    sub_67060(&qword_31F7D0, &qword_31F7D8, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_3205D8);
  }
  return result;
}

uint64_t sub_7BA68()
{
  return EnvironmentValues.imageScale.getter();
}

unint64_t sub_7BA8C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3205E8;
  if (!qword_3205E8)
  {
    v1 = sub_667D0(&qword_3205B0);
    sub_7BB10();
    sub_67060(&qword_320600, &qword_320608, (uint64_t)&protocol conformance descriptor for _ForegroundStyleModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_3205E8);
  }
  return result;
}

unint64_t sub_7BB10()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_3205F0;
  if (!qword_3205F0)
  {
    v1 = sub_667D0(&qword_3205A8);
    v2[0] = sub_667D0(&qword_3205D0);
    v2[1] = sub_7B9E4();
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.dynamicTypeSize(_:)>>, 1);
    sub_67060(&qword_3205F8, &qword_3205E0, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_3205F0);
  }
  return result;
}

uint64_t sub_7BBCC(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return swift_retain(a1);
  else
    return swift_bridgeObjectRetain(a2);
}

uint64_t sub_7BBE0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  _QWORD *v10;

  v4 = *(_QWORD *)(type metadata accessor for PriceTrackingOptInView(0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v1 + 16);
  v7 = *(_QWORD *)(v1 + 24);
  v8 = v1 + v5;
  v9 = *(_BYTE *)(v1 + v5 + *(_QWORD *)(v4 + 64));
  v10 = (_QWORD *)swift_task_alloc(dword_32061C);
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_7BFF8;
  return sub_7B1A0(a1, v6, v7, v8, v9);
}

uint64_t sub_7BC7C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for PriceTrackingOptInView(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_7BCBC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;

  v1 = type metadata accessor for PriceTrackingOptInView(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + v4 + 16));
  swift_release(*(_QWORD *)(v0 + v4 + 32));
  v6 = (_QWORD *)(v0 + v4 + *(int *)(v1 + 28));
  v7 = sub_5C154(&qword_320160);
  if (swift_getEnumCaseMultiPayload(v6, v7) == 1)
  {
    v8 = type metadata accessor for SizeConstants(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v6, v8);
  }
  else
  {
    swift_release(*v6);
  }
  return swift_deallocObject(v0, v5 + v4 + 1, v3 | 7);
}

uint64_t sub_7BD80(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  _QWORD *v10;

  v4 = *(_QWORD *)(type metadata accessor for PriceTrackingOptInView(0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v1 + 16);
  v7 = *(_QWORD *)(v1 + 24);
  v8 = v1 + v5;
  v9 = *(_BYTE *)(v1 + v5 + *(_QWORD *)(v4 + 64));
  v10 = (_QWORD *)swift_task_alloc(dword_32061C);
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_64780;
  return sub_7B1A0(a1, v6, v7, v8, v9);
}

uint64_t getEnumTagSinglePayload for SeriesRoomType(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 1 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 1;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 1;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 1;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v8 = v6 - 2;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for PriceTrackingOptInView.OptInType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_7BEF8 + 4 * byte_2582C5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_7BF2C + 4 * byte_2582C0[v4]))();
}

uint64_t sub_7BF2C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_7BF34(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x7BF3CLL);
  return result;
}

uint64_t sub_7BF48(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x7BF50);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_7BF54(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_7BF5C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

_BYTE *sub_7BF68(_BYTE *result, char a2)
{
  *result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for PriceTrackingOptInView.OptInType()
{
  return &type metadata for PriceTrackingOptInView.OptInType;
}

uint64_t sub_7BF84()
{
  return sub_67060(&qword_320630, &qword_320550, (uint64_t)&protocol conformance descriptor for ModalActionSheet<A>);
}

unint64_t sub_7BFB4()
{
  unint64_t result;

  result = qword_320638;
  if (!qword_320638)
  {
    result = swift_getWitnessTable(&unk_258488, &type metadata for PriceTrackingOptInView.OptInType);
    atomic_store(result, (unint64_t *)&qword_320638);
  }
  return result;
}

id JetActionHandler.__allocating_init(objectGraph:)(uint64_t a1)
{
  objc_class *v1;
  char *v3;
  objc_super v5;

  v3 = (char *)objc_allocWithZone(v1);
  *(_QWORD *)&v3[OBJC_IVAR____TtC11BookStoreUI16JetActionHandler_objectGraph] = a1;
  v5.receiver = v3;
  v5.super_class = v1;
  return objc_msgSendSuper2(&v5, "init");
}

uint64_t UIViewController.jetActionHandlerInContext.getter()
{
  void *v0;
  id v1;
  id v2;
  uint64_t v3;
  id v5;
  id v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _OWORD v19[2];
  uint64_t v20[4];

  v1 = objc_msgSend(v0, "im_ancestorFlowControllerConformingToProtocol:", &OBJC_PROTOCOL___BSUIJetActionHandling);
  if (v1)
  {
    v2 = v1;
    _bridgeAnyObjectToAny(_:)(v1);
    swift_unknownObjectRelease(v2);
  }
  else
  {
    memset(v19, 0, sizeof(v19));
  }
  sub_7C528((uint64_t)v19, (uint64_t)v20);
  if (v20[3])
  {
    v3 = sub_5C154(&qword_31FE60);
    if ((swift_dynamicCast(&v18, v20, (char *)&type metadata for Any + 8, v3, 6) & 1) != 0)
      return v18;
  }
  else
  {
    sub_6EF98((uint64_t)v20);
  }
  v5 = v0;
  v6 = objc_msgSend(v5, "description");
  v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
  v9 = v8;

  if (qword_31E5B8 != -1)
    swift_once(&qword_31E5B8, sub_126840);
  v10 = type metadata accessor for Logger(0);
  sub_5240C(v10, (uint64_t)qword_3250D0);
  v11 = swift_bridgeObjectRetain(v9);
  v12 = Logger.logObject.getter(v11);
  v13 = static os_log_type_t.fault.getter(v12);
  if (os_log_type_enabled(v12, v13))
  {
    v14 = (uint8_t *)swift_slowAlloc(12, -1);
    v15 = swift_slowAlloc(32, -1);
    v20[0] = v15;
    *(_DWORD *)v14 = 136315138;
    swift_bridgeObjectRetain(v9);
    *(_QWORD *)&v19[0] = sub_57CD8(v7, v9, v20);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v19, (char *)v19 + 8, v14 + 4, v14 + 12);
    swift_bridgeObjectRelease_n(v9, 3);
    _os_log_impl(&dword_0, v12, v13, "jetActionHandler not found on %s", v14, 0xCu);
    swift_arrayDestroy(v15, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v15, -1, -1);
    swift_slowDealloc(v14, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(v9, 2);
  }
  v16 = sub_7D400();
  v17 = swift_allocError(&type metadata for JetActionHandlerError, v16, 0, 0);
  return swift_willThrow(v17);
}

uint64_t UIViewController._jetActionHandlerInContextObjC.getter()
{
  return UIViewController.jetActionHandlerInContext.getter();
}

uint64_t UIViewController.objectGraphInContext.getter()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjectType;
  uint64_t v6;

  result = UIViewController.jetActionHandlerInContext.getter();
  if (!v0)
  {
    v3 = result;
    v4 = v2;
    ObjectType = swift_getObjectType(result);
    v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(ObjectType, v4);
    swift_unknownObjectRelease(v3);
    return v6;
  }
  return result;
}

uint64_t sub_7C3C0()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjectType;
  uint64_t v6;

  result = UIViewController.jetActionHandlerInContext.getter();
  if (!v0)
  {
    v3 = result;
    v4 = v2;
    ObjectType = swift_getObjectType(result);
    v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(ObjectType, v4);
    swift_unknownObjectRelease(v3);
    return v6;
  }
  return result;
}

Swift::Int Shelf.ValidationError.hashValue.getter()
{
  _QWORD v1[9];

  Hasher.init(_seed:)(v1, 0);
  Hasher._combine(_:)(0);
  return Hasher._finalize()();
}

void Shelf.ValidationError.hash(into:)()
{
  Hasher._combine(_:)(0);
}

Swift::Int sub_7C480(uint64_t a1)
{
  _QWORD v2[9];

  Hasher.init(_seed:)(v2, a1);
  Hasher._combine(_:)(0);
  return Hasher._finalize()();
}

uint64_t JetActionHandler.objectGraph.getter()
{
  uint64_t v0;

  return swift_retain(*(_QWORD *)(v0 + OBJC_IVAR____TtC11BookStoreUI16JetActionHandler_objectGraph));
}

id JetActionHandler.init(objectGraph:)(uint64_t a1)
{
  char *v1;
  objc_class *ObjectType;
  objc_super v5;

  ObjectType = (objc_class *)swift_getObjectType(v1);
  *(_QWORD *)&v1[OBJC_IVAR____TtC11BookStoreUI16JetActionHandler_objectGraph] = a1;
  v5.receiver = v1;
  v5.super_class = ObjectType;
  return objc_msgSendSuper2(&v5, "init");
}

uint64_t sub_7C528(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_5C154(&qword_31F8B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t JetActionHandler.perform(rawActionModel:parentTracker:shouldReportFigaro:sourceViewController:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  *(_QWORD *)(v5 + 152) = a4;
  *(_QWORD *)(v5 + 160) = v4;
  *(_BYTE *)(v5 + 417) = a3;
  *(_QWORD *)(v5 + 136) = a1;
  *(_QWORD *)(v5 + 144) = a2;
  v6 = sub_5C154(&qword_320658);
  *(_QWORD *)(v5 + 168) = v6;
  v7 = *(_QWORD *)(v6 - 8);
  *(_QWORD *)(v5 + 176) = v7;
  *(_QWORD *)(v5 + 184) = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ActionOutcome(0);
  *(_QWORD *)(v5 + 192) = v8;
  v9 = *(_QWORD *)(v8 - 8);
  *(_QWORD *)(v5 + 200) = v9;
  *(_QWORD *)(v5 + 208) = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_5C154(&qword_31FE40);
  *(_QWORD *)(v5 + 216) = v10;
  v11 = *(_QWORD *)(v10 - 8);
  *(_QWORD *)(v5 + 224) = v11;
  *(_QWORD *)(v5 + 232) = swift_task_alloc((*(_QWORD *)(v11 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for JSONContext(0, v12);
  *(_QWORD *)(v5 + 240) = v13;
  v14 = *(_QWORD *)(v13 - 8);
  *(_QWORD *)(v5 + 248) = v14;
  v15 = (*(_QWORD *)(v14 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v5 + 256) = swift_task_alloc(v15);
  *(_QWORD *)(v5 + 264) = swift_task_alloc(v15);
  v16 = type metadata accessor for CodeAnyActionModel(0);
  *(_QWORD *)(v5 + 272) = v16;
  v17 = *(_QWORD *)(v16 - 8);
  *(_QWORD *)(v5 + 280) = v17;
  *(_QWORD *)(v5 + 288) = swift_task_alloc((*(_QWORD *)(v17 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for JSONObject(0);
  *(_QWORD *)(v5 + 296) = v18;
  v19 = *(_QWORD *)(v18 - 8);
  *(_QWORD *)(v5 + 304) = v19;
  *(_QWORD *)(v5 + 312) = swift_task_alloc((*(_QWORD *)(v19 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v5 + 320) = static MainActor.shared.getter(v20);
  v21 = dispatch thunk of Actor.unownedExecutor.getter(v20, &protocol witness table for MainActor);
  *(_QWORD *)(v5 + 328) = v21;
  *(_QWORD *)(v5 + 336) = v22;
  return swift_task_switch(sub_7C6EC, v21, v22);
}

uint64_t sub_7C6EC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD v5[4];

  v1 = v0[20];
  v2 = v0[17];
  v5[3] = sub_5C154(&qword_320660);
  v5[0] = v2;
  swift_bridgeObjectRetain(v2);
  JSONObject.init(wrapping:)(v5);
  v0[43] = *(_QWORD *)(v1 + OBJC_IVAR____TtC11BookStoreUI16JetActionHandler_objectGraph);
  v3 = (_QWORD *)swift_task_alloc(async function pointer to BaseObjectGraph.inject<A>(_:)[1]);
  v0[44] = v3;
  *v3 = v0;
  v3[1] = sub_7C790;
  return BaseObjectGraph.inject<A>(_:)(v0[33], v0[30], v0[30]);
}

uint64_t sub_7C790()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 352);
  *(_QWORD *)(*v1 + 360) = v0;
  swift_task_dealloc(v3);
  if (v0)
    v4 = sub_7CDBC;
  else
    v4 = sub_7C7F0;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 328), *(_QWORD *)(v2 + 336));
}

uint64_t sub_7C7F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  _QWORD *v39;
  void *v40;
  char v41;

  v1 = *(_QWORD *)(v0 + 360);
  v2 = *(_QWORD *)(v0 + 272);
  v3 = *(_QWORD *)(v0 + 256);
  (*(void (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v0 + 248) + 16))(v3, *(_QWORD *)(v0 + 264), *(_QWORD *)(v0 + 240));
  v4 = Dictionary<>.init(jsonContext:)(v3);
  v5 = sub_7D444();
  JSONObject.decode<A>(_:withUserInfo:)(v2, v4, v2, v5);
  if (v1)
  {
    v6 = *(_QWORD *)(v0 + 312);
    v7 = *(_QWORD *)(v0 + 320);
    v8 = *(_QWORD *)(v0 + 296);
    v9 = *(_QWORD *)(v0 + 304);
    v10 = *(_QWORD *)(v0 + 264);
    v11 = *(_QWORD *)(v0 + 240);
    v12 = *(_QWORD *)(v0 + 248);
    swift_bridgeObjectRelease(v4);
    swift_release(v7);
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v10, v11);
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v6, v8);
    v13 = *(_QWORD *)(v0 + 288);
    v15 = *(_QWORD *)(v0 + 256);
    v14 = *(_QWORD *)(v0 + 264);
    v16 = *(_QWORD *)(v0 + 232);
    v17 = *(_QWORD *)(v0 + 208);
    v18 = *(_QWORD *)(v0 + 184);
    swift_task_dealloc(*(_QWORD *)(v0 + 312));
    swift_task_dealloc(v13);
    swift_task_dealloc(v14);
    swift_task_dealloc(v15);
    swift_task_dealloc(v16);
    swift_task_dealloc(v17);
    swift_task_dealloc(v18);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v20 = *(_QWORD *)(v0 + 280);
    v21 = *(_QWORD *)(v0 + 288);
    v23 = *(_QWORD *)(v0 + 264);
    v22 = *(_QWORD *)(v0 + 272);
    v25 = *(_QWORD *)(v0 + 240);
    v24 = *(_QWORD *)(v0 + 248);
    v41 = *(_BYTE *)(v0 + 417);
    v26 = *(_QWORD *)(v0 + 152);
    v40 = *(void **)(v0 + 144);
    swift_bridgeObjectRelease(v4);
    v27 = (*(uint64_t (**)(uint64_t, uint64_t))(v24 + 8))(v23, v25);
    CodeAnyActionModel.wrappedValue.getter(v27);
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v21, v22);
    v28 = type metadata accessor for NavigationProvider();
    v29 = swift_allocObject(v28, 24, 7);
    *(_QWORD *)(v0 + 368) = v29;
    v30 = swift_unknownObjectWeakInit(v29 + 16);
    swift_beginAccess(v30, v0 + 96, 1, 0);
    swift_unknownObjectWeakAssign(v29 + 16, v26);
    v31 = sub_5C154(&qword_31F010);
    v32 = type metadata accessor for Dependency(0);
    v33 = swift_allocObject(v31, ((*(unsigned __int8 *)(*(_QWORD *)(v32 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v32 - 8) + 80))+ 3 * *(_QWORD *)(*(_QWORD *)(v32 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v32 - 8) + 80) | 7);
    *(_OWORD *)(v33 + 16) = xmmword_2584B0;
    v34 = type metadata accessor for BATracker(0);
    *(_QWORD *)(v0 + 120) = v40;
    v35 = v40;
    Dependency.init<A>(satisfying:with:)(v34, v0 + 120, v34);
    v36 = sub_5C154(&qword_31FA90);
    *(_QWORD *)(v0 + 80) = v28;
    *(_QWORD *)(v0 + 88) = &protocol witness table for NavigationProvider;
    *(_QWORD *)(v0 + 56) = v29;
    swift_retain(v29);
    Dependency.init<A>(satisfying:with:)(v36, v0 + 56, v36);
    *(_BYTE *)(v0 + 416) = v41;
    Dependency.init<A>(satisfying:with:)(&type metadata for FigaroPageConfiguration, v0 + 416, &type metadata for FigaroPageConfiguration);
    *(_QWORD *)(v0 + 128) = v33;
    v37 = sub_5C154((uint64_t *)&unk_31FEC0);
    v38 = sub_7D48C();
    *(_QWORD *)(v0 + 376) = dispatch thunk of BaseObjectGraph.adding<A>(allDependencies:)(v0 + 128, v37, v38);
    swift_bridgeObjectRelease(v33);
    v39 = (_QWORD *)swift_task_alloc(async function pointer to BaseObjectGraph.inject<A>(_:)[1]);
    *(_QWORD *)(v0 + 384) = v39;
    *v39 = v0;
    v39[1] = sub_7CB48;
    return BaseObjectGraph.inject<A>(_:)(*(_QWORD *)(v0 + 232), *(_QWORD *)(v0 + 216), *(_QWORD *)(v0 + 216));
  }
}

uint64_t sub_7CB48()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 384);
  *(_QWORD *)(*v1 + 392) = v0;
  swift_task_dealloc(v3);
  if (v0)
    v4 = sub_7CE68;
  else
    v4 = sub_7CBA8;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 328), *(_QWORD *)(v2 + 336));
}

uint64_t sub_7CBA8()
{
  _QWORD *v0;
  _QWORD *v1;

  (*(void (**)(_QWORD, _QWORD, _QWORD))(v0[22] + 104))(v0[23], enum case for ActionDispatcher.MetricsBehavior.notProcessed<A>(_:), v0[21]);
  v1 = (_QWORD *)swift_task_alloc(*((unsigned int *)&async function pointer to ActionDispatcher.perform(_:withMetrics:asPartOf:)
                                  + 1));
  v0[50] = v1;
  *v1 = v0;
  v1[1] = sub_7CC28;
  return ActionDispatcher.perform(_:withMetrics:asPartOf:)(v0[26], v0 + 2, v0[23], v0[47], v0[27]);
}

uint64_t sub_7CC28()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2 = *(_QWORD **)v1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 400);
  *(_QWORD *)(*(_QWORD *)v1 + 408) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    (*(void (**)(_QWORD, _QWORD))(v2[22] + 8))(v2[23], v2[21]);
    v4 = v2[41];
    v5 = v2[42];
    v6 = sub_7CF34;
  }
  else
  {
    v8 = v2[25];
    v7 = v2[26];
    v9 = v2[24];
    (*(void (**)(_QWORD, _QWORD))(v2[22] + 8))(v2[23], v2[21]);
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
    v4 = v2[41];
    v5 = v2[42];
    v6 = sub_7CCC8;
  }
  return swift_task_switch(v6, v4, v5);
}

uint64_t sub_7CCC8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v1 = *(_QWORD *)(v0 + 368);
  v3 = *(_QWORD *)(v0 + 312);
  v2 = *(_QWORD *)(v0 + 320);
  v4 = *(_QWORD *)(v0 + 296);
  v5 = *(_QWORD *)(v0 + 304);
  v10 = *(_QWORD *)(v0 + 288);
  v11 = *(_QWORD *)(v0 + 264);
  v6 = *(_QWORD *)(v0 + 224);
  v7 = *(_QWORD *)(v0 + 232);
  v8 = *(_QWORD *)(v0 + 216);
  v12 = *(_QWORD *)(v0 + 256);
  v13 = *(_QWORD *)(v0 + 208);
  v14 = *(_QWORD *)(v0 + 184);
  swift_release(*(_QWORD *)(v0 + 376));
  swift_release(v2);
  swift_release(v1);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v7, v8);
  _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
  swift_task_dealloc(v3);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v7);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_7CDBC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = *(_QWORD *)(v0 + 312);
  v2 = *(_QWORD *)(v0 + 296);
  v3 = *(_QWORD *)(v0 + 304);
  swift_release(*(_QWORD *)(v0 + 320));
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  v4 = *(_QWORD *)(v0 + 288);
  v6 = *(_QWORD *)(v0 + 256);
  v5 = *(_QWORD *)(v0 + 264);
  v7 = *(_QWORD *)(v0 + 232);
  v8 = *(_QWORD *)(v0 + 208);
  v9 = *(_QWORD *)(v0 + 184);
  swift_task_dealloc(*(_QWORD *)(v0 + 312));
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_7CE68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = *(_QWORD *)(v0 + 368);
  v3 = *(_QWORD *)(v0 + 312);
  v2 = *(_QWORD *)(v0 + 320);
  v4 = *(_QWORD *)(v0 + 296);
  v5 = *(_QWORD *)(v0 + 304);
  swift_release(*(_QWORD *)(v0 + 376));
  swift_release(v2);
  swift_release(v1);
  _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
  v6 = *(_QWORD *)(v0 + 288);
  v8 = *(_QWORD *)(v0 + 256);
  v7 = *(_QWORD *)(v0 + 264);
  v9 = *(_QWORD *)(v0 + 232);
  v10 = *(_QWORD *)(v0 + 208);
  v11 = *(_QWORD *)(v0 + 184);
  swift_task_dealloc(*(_QWORD *)(v0 + 312));
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_7CF34()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v1 = *(_QWORD *)(v0 + 368);
  v3 = *(_QWORD *)(v0 + 312);
  v2 = *(_QWORD *)(v0 + 320);
  v4 = *(_QWORD *)(v0 + 296);
  v5 = *(_QWORD *)(v0 + 304);
  v7 = *(_QWORD *)(v0 + 224);
  v6 = *(_QWORD *)(v0 + 232);
  v8 = *(_QWORD *)(v0 + 216);
  swift_release(*(_QWORD *)(v0 + 376));
  swift_release(v2);
  swift_release(v1);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
  _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
  v9 = *(_QWORD *)(v0 + 288);
  v11 = *(_QWORD *)(v0 + 256);
  v10 = *(_QWORD *)(v0 + 264);
  v12 = *(_QWORD *)(v0 + 232);
  v13 = *(_QWORD *)(v0 + 208);
  v14 = *(_QWORD *)(v0 + 184);
  swift_task_dealloc(*(_QWORD *)(v0 + 312));
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_7D174(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)(v6 + 40) = a5;
  *(_QWORD *)(v6 + 48) = a6;
  *(_QWORD *)(v6 + 24) = a2;
  *(_QWORD *)(v6 + 32) = a4;
  *(_BYTE *)(v6 + 88) = a3;
  *(_QWORD *)(v6 + 16) = a1;
  v7 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v6 + 56) = static MainActor.shared.getter(v7);
  v8 = dispatch thunk of Actor.unownedExecutor.getter(v7, &protocol witness table for MainActor);
  return swift_task_switch(sub_7D1EC, v8, v9);
}

uint64_t sub_7D1EC()
{
  uint64_t v0;
  void *v1;
  const void *v2;
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  id v9;
  id v10;
  _QWORD *v11;

  v1 = *(void **)(v0 + 48);
  v3 = *(void **)(v0 + 32);
  v2 = *(const void **)(v0 + 40);
  v4 = *(_QWORD *)(v0 + 16);
  v5 = *(void **)(v0 + 24);
  swift_release(*(_QWORD *)(v0 + 56));
  *(_QWORD *)(v0 + 64) = _Block_copy(v2);
  v6 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v4, &type metadata for String, (char *)&type metadata for Any + 8, &protocol witness table for String);
  *(_QWORD *)(v0 + 72) = v6;
  v7 = dword_320654;
  v8 = v5;
  v9 = v3;
  v10 = v1;
  v11 = (_QWORD *)swift_task_alloc(v7);
  *(_QWORD *)(v0 + 80) = v11;
  *v11 = v0;
  v11[1] = sub_7D2A8;
  return JetActionHandler.perform(rawActionModel:parentTracker:shouldReportFigaro:sourceViewController:)(v6, *(_QWORD *)(v0 + 24), *(_BYTE *)(v0 + 88), *(_QWORD *)(v0 + 32));
}

uint64_t sub_7D2A8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;

  v3 = *(_QWORD *)(*v1 + 72);
  v2 = *(_QWORD *)(*v1 + 80);
  v4 = *(void **)(*v1 + 48);
  v6 = *(void **)(*v1 + 24);
  v5 = *(void **)(*v1 + 32);
  v7 = *v1;
  swift_task_dealloc(v2);

  swift_bridgeObjectRelease(v3);
  v8 = *(_QWORD *)(v7 + 64);
  if (v0)
  {
    v9 = (void *)_convertErrorToNSError(_:)(v0);
    swift_errorRelease(v0);
    (*(void (**)(uint64_t, void *))(v8 + 16))(v8, v9);

  }
  else
  {
    (*(void (**)(_QWORD, _QWORD))(v8 + 16))(*(_QWORD *)(v7 + 64), 0);
  }
  _Block_release(*(const void **)(v7 + 64));
  return (*(uint64_t (**)(void))(v7 + 8))();
}

void JetActionHandler.init()()
{
  _swift_stdlib_reportUnimplementedInitializer("BookStoreUI.JetActionHandler", 28, "init()", 6, 0);
  __break(1u);
}

id BooksUIComponentHostingController.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType(v0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

unint64_t sub_7D400()
{
  unint64_t result;

  result = qword_320648;
  if (!qword_320648)
  {
    result = swift_getWitnessTable(&unk_258610, &type metadata for JetActionHandlerError);
    atomic_store(result, (unint64_t *)&qword_320648);
  }
  return result;
}

unint64_t sub_7D444()
{
  unint64_t result;
  uint64_t v1;

  result = qword_320668;
  if (!qword_320668)
  {
    v1 = type metadata accessor for CodeAnyActionModel(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for CodeAnyActionModel, v1);
    atomic_store(result, (unint64_t *)&qword_320668);
  }
  return result;
}

unint64_t sub_7D48C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_31FAC0;
  if (!qword_31FAC0)
  {
    v1 = sub_667D0((uint64_t *)&unk_31FEC0);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_31FAC0);
  }
  return result;
}

uint64_t dispatch thunk of FallbackSceneSessionProviding.fallbackSceneSession.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of JetObjectGraphProviding.objectGraphInContext.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t type metadata accessor for JetActionHandler()
{
  return objc_opt_self(_TtC11BookStoreUI16JetActionHandler);
}

uint64_t method lookup function for JetActionHandler(uint64_t a1, uint64_t a2)
{
  return swift_lookUpClassMethod(a1, a2, &nominal type descriptor for JetActionHandler);
}

uint64_t dispatch thunk of ContextMenuAssetPropertyProvider.__allocating_init(assetInfo:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t getEnumTagSinglePayload for JetActionHandlerError(unsigned int *a1, int a2)
{
  int v2;
  int v3;

  if (!a2)
    return 0;
  if ((a2 + 1) >= 0x10000)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) < 0x100)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
    return *a1;
  if (v3 == 2)
    return *(unsigned __int16 *)a1;
  return *(unsigned __int8 *)a1;
}

uint64_t storeEnumTagSinglePayload for JetActionHandlerError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_7D5C0 + 4 * byte_2584C0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_7D5E0 + 4 * byte_2584C5[v4]))();
}

_BYTE *sub_7D5C0(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_7D5E0(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_7D5E8(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_7D5F0(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_7D5F8(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_7D600(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for JetActionHandlerError()
{
  return &type metadata for JetActionHandlerError;
}

unint64_t sub_7D620()
{
  unint64_t result;

  result = qword_320698;
  if (!qword_320698)
  {
    result = swift_getWitnessTable(&unk_2585E8, &type metadata for JetActionHandlerError);
    atomic_store(result, (unint64_t *)&qword_320698);
  }
  return result;
}

uint64_t sub_7D664()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 48));
  return swift_deallocObject(v0, 64, 7);
}

uint64_t sub_7D6A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  v4 = *(_BYTE *)(v0 + 32);
  v5 = *(_QWORD *)(v0 + 40);
  v6 = *(_QWORD *)(v0 + 48);
  v7 = *(_QWORD *)(v0 + 56);
  v8 = (_QWORD *)swift_task_alloc(dword_3206A4);
  *(_QWORD *)(v1 + 16) = v8;
  *v8 = v1;
  v8[1] = sub_64780;
  return ((uint64_t (*)(uint64_t, uint64_t, char, uint64_t, uint64_t, uint64_t))((char *)&dword_3206A0
                                                                                    + dword_3206A0))(v2, v3, v4, v5, v6, v7);
}

uint64_t sub_7D73C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int *v4;
  _QWORD *v5;

  v2 = v0[2];
  v3 = v0[3];
  v4 = (int *)v0[4];
  v5 = (_QWORD *)swift_task_alloc(dword_32B734);
  *(_QWORD *)(v1 + 16) = v5;
  *v5 = v1;
  v5[1] = sub_7BFF8;
  return ((uint64_t (*)(uint64_t, uint64_t, int *))((char *)&dword_32B730 + dword_32B730))(v2, v3, v4);
}

uint64_t sub_7D7B8()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_7D7E4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = (int *)v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_32B73C);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_7BFF8;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, int *))((char *)&dword_32B738 + dword_32B738))(a1, v4, v5, v6);
}

uint64_t sub_7D868()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0x7079547465737361;
  if (*v0 != 1)
    v1 = 0xD000000000000012;
  if (*v0)
    return v1;
  else
    return 0x64497465737361;
}

uint64_t sub_7D8CC@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_7DEE4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t SeriesRoomPageIntent.CodingKeys.intValue.getter()
{
  return 0;
}

void sub_7D8FC(_BYTE *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_7D908(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_7E274();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_7D930(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_7E274();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_7D958(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  char v20;
  char v21;
  char v22;

  v3 = v1;
  v5 = sub_5C154(&qword_3206E8);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  sub_66898(a1, v9);
  v11 = sub_7E274();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for EditionsPageIntent.CodingKeys, &type metadata for EditionsPageIntent.CodingKeys, v11, v9, v10);
  v12 = *v3;
  v13 = v3[1];
  v22 = 0;
  KeyedEncodingContainer.encode(_:forKey:)(v12, v13, &v22, v5);
  if (!v2)
  {
    v14 = v3[2];
    v15 = v3[3];
    v21 = 1;
    KeyedEncodingContainer.encode(_:forKey:)(v14, v15, &v21, v5);
    v16 = v3[4];
    v17 = v3[5];
    v20 = 2;
    KeyedEncodingContainer.encode(_:forKey:)(v16, v17, &v20, v5);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

void sub_7DA94(_QWORD *a1@<X8>)
{
  *a1 = 0xD000000000000012;
  a1[1] = 0x8000000000258680;
}

double sub_7DAC0@<D0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  _OWORD v6[2];
  __int128 v7;

  sub_7E040(a1, (uint64_t *)v6);
  if (!v2)
  {
    v5 = v6[1];
    *a2 = v6[0];
    a2[1] = v5;
    result = *(double *)&v7;
    a2[2] = v7;
  }
  return result;
}

uint64_t sub_7DB00(_QWORD *a1)
{
  return sub_7D958(a1);
}

unint64_t sub_7DB14@<X0>(unint64_t *a1@<X8>)
{
  __int128 *v1;
  uint64_t v3;
  uint64_t inited;
  __int128 v5;
  __int128 v6;
  unint64_t v7;
  unint64_t result;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;

  v3 = sub_5C154(&qword_3206C0);
  inited = swift_initStackObject(v3, &v9);
  *(_OWORD *)(inited + 16) = xmmword_2584B0;
  v5 = *v1;
  v11 = v1[1];
  v6 = v11;
  v12 = v5;
  *(_OWORD *)(inited + 48) = v5;
  *(_QWORD *)(inited + 32) = 0x64497465737361;
  *(_QWORD *)(inited + 40) = 0xE700000000000000;
  *(_QWORD *)(inited + 64) = 0x7079547465737361;
  *(_QWORD *)(inited + 72) = 0xE900000000000065;
  *(_OWORD *)(inited + 80) = v6;
  *(_QWORD *)(inited + 96) = 0xD000000000000012;
  *(_QWORD *)(inited + 104) = 0x800000000026F840;
  v10 = v1[2];
  *(_OWORD *)(inited + 112) = v10;
  sub_7DC44((uint64_t)&v12);
  sub_7DC44((uint64_t)&v11);
  sub_7DC44((uint64_t)&v10);
  v7 = sub_52A70(inited);
  a1[3] = sub_5C154(&qword_3206C8);
  result = sub_7DC6C();
  a1[4] = result;
  *a1 = v7;
  return result;
}

unint64_t sub_7DC18@<X0>(unint64_t *a1@<X8>)
{
  return sub_7DB14(a1);
}

JSValue sub_7DC2C(JSContext a1)
{
  return CustomJSValueConvertible._jsValue(in:)(a1);
}

uint64_t sub_7DC44(uint64_t a1)
{
  swift_bridgeObjectRetain(*(_QWORD *)(a1 + 8));
  return a1;
}

unint64_t sub_7DC6C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3206D0;
  if (!qword_3206D0)
  {
    v1 = sub_667D0(&qword_3206C8);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> [A : B], v1);
    atomic_store(result, (unint64_t *)&qword_3206D0);
  }
  return result;
}

uint64_t destroy for EditionsPageIntent(_QWORD *a1)
{
  swift_bridgeObjectRelease(a1[1]);
  swift_bridgeObjectRelease(a1[3]);
  return swift_bridgeObjectRelease(a1[5]);
}

_QWORD *initializeWithCopy for EditionsPageIntent(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRetain(v5);
  return a1;
}

_QWORD *assignWithCopy for EditionsPageIntent(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *a1 = *a2;
  v4 = a2[1];
  v5 = a1[1];
  a1[1] = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  a1[2] = a2[2];
  v6 = a2[3];
  v7 = a1[3];
  a1[3] = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  a1[4] = a2[4];
  v8 = a2[5];
  v9 = a1[5];
  a1[5] = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease(v9);
  return a1;
}

__n128 initializeWithTake for EditionsPageIntent(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

_QWORD *assignWithTake for EditionsPageIntent(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = a2[1];
  v5 = a1[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease(v5);
  v6 = a2[3];
  v7 = a1[3];
  a1[2] = a2[2];
  a1[3] = v6;
  swift_bridgeObjectRelease(v7);
  v8 = a2[5];
  v9 = a1[5];
  a1[4] = a2[4];
  a1[5] = v8;
  swift_bridgeObjectRelease(v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for EditionsPageIntent(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 48))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for EditionsPageIntent(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for EditionsPageIntent()
{
  return &type metadata for EditionsPageIntent;
}

uint64_t sub_7DEE4(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  unint64_t v7;
  char v8;

  if (a1 == 0x64497465737361 && a2 == 0xE700000000000000)
  {
    v5 = 0xE700000000000000;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x64497465737361, 0xE700000000000000, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 0x7079547465737361 && a2 == 0xE900000000000065)
  {
    v7 = 0xE900000000000065;
LABEL_14:
    swift_bridgeObjectRelease(v7);
    return 1;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x7079547465737361, 0xE900000000000065, a1, a2, 0) & 1) != 0)
  {
    v7 = a2;
    goto LABEL_14;
  }
  if (a1 == 0xD000000000000012 && a2 == 0x800000000026F840)
  {
    swift_bridgeObjectRelease(0x800000000026F840);
    return 2;
  }
  else
  {
    v8 = _stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000012, 0x800000000026F840, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v8 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_7E040@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  char v30;

  v5 = sub_5C154(&qword_3206D8);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  sub_66898(a1, v9);
  v11 = sub_7E274();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for EditionsPageIntent.CodingKeys, &type metadata for EditionsPageIntent.CodingKeys, v11, v9, v10);
  if (v2)
    return _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(a1);
  v30 = 0;
  v12 = KeyedDecodingContainer.decode(_:forKey:)(&v30, v5);
  v14 = v13;
  v27 = v12;
  v29 = 1;
  swift_bridgeObjectRetain(v13);
  v15 = KeyedDecodingContainer.decode(_:forKey:)(&v29, v5);
  v17 = v16;
  v25 = v15;
  v28 = 2;
  swift_bridgeObjectRetain(v16);
  v26 = v17;
  v18 = KeyedDecodingContainer.decode(_:forKey:)(&v28, v5);
  v20 = v19;
  v21 = v18;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  swift_bridgeObjectRetain(v20);
  _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(a1);
  swift_bridgeObjectRelease(v20);
  v22 = v26;
  swift_bridgeObjectRelease(v26);
  result = swift_bridgeObjectRelease(v14);
  *a2 = v27;
  a2[1] = v14;
  a2[2] = v25;
  a2[3] = v22;
  a2[4] = v21;
  a2[5] = v20;
  return result;
}

unint64_t sub_7E274()
{
  unint64_t result;

  result = qword_3206E0;
  if (!qword_3206E0)
  {
    result = swift_getWitnessTable(&unk_258818, &type metadata for EditionsPageIntent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_3206E0);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for EditionsPageIntent.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_17;
  if (a2 + 2 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 2) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 2;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 2;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 2;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 3;
  v8 = v6 - 3;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for EditionsPageIntent.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_7E394 + 4 * byte_258655[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_7E3C8 + 4 * byte_258650[v4]))();
}

uint64_t sub_7E3C8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_7E3D0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x7E3D8);
  return result;
}

uint64_t sub_7E3E4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x7E3ECLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_7E3F0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_7E3F8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for EditionsPageIntent.CodingKeys()
{
  return &type metadata for EditionsPageIntent.CodingKeys;
}

unint64_t sub_7E418()
{
  unint64_t result;

  result = qword_3206F0;
  if (!qword_3206F0)
  {
    result = swift_getWitnessTable(&unk_2587F0, &type metadata for EditionsPageIntent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_3206F0);
  }
  return result;
}

unint64_t sub_7E460()
{
  unint64_t result;

  result = qword_3206F8;
  if (!qword_3206F8)
  {
    result = swift_getWitnessTable(&unk_258760, &type metadata for EditionsPageIntent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_3206F8);
  }
  return result;
}

unint64_t sub_7E4A8()
{
  unint64_t result;

  result = qword_320700;
  if (!qword_320700)
  {
    result = swift_getWitnessTable(&unk_258788, &type metadata for EditionsPageIntent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_320700);
  }
  return result;
}

BookStoreUI::ContextActionPublisherInfo __swiftcall ContextActionPublisherInfo.init(name:year:)(Swift::String_optional name, Swift::String_optional year)
{
  Swift::String_optional *v2;
  BookStoreUI::ContextActionPublisherInfo result;

  *v2 = name;
  v2[1] = year;
  result.year = year;
  result.name = name;
  return result;
}

uint64_t dispatch thunk of YearlyReadingHistoryStateProviding.state(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  int *v9;
  _QWORD *v10;
  uint64_t (*v12)(uint64_t, uint64_t, uint64_t, uint64_t);

  v9 = *(int **)(a4 + 8);
  v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)v9 + *v9);
  v10 = (_QWORD *)swift_task_alloc(v9[1]);
  *(_QWORD *)(v4 + 16) = v10;
  *v10 = v4;
  v10[1] = sub_64780;
  return v12(a1, a2, a3, a4);
}

uint64_t destroy for YearlyReadingHistoryState(_QWORD *a1)
{
  swift_bridgeObjectRelease(a1[1]);
  swift_bridgeObjectRelease(a1[2]);
  return swift_bridgeObjectRelease(a1[3]);
}

_QWORD *initializeWithCopy for YearlyReadingHistoryState(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[2];
  v5 = a2[3];
  a1[2] = v4;
  a1[3] = v5;
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRetain(v5);
  return a1;
}

_QWORD *assignWithCopy for YearlyReadingHistoryState(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *a1 = *a2;
  v4 = a2[1];
  v5 = a1[1];
  a1[1] = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  v6 = a2[2];
  v7 = a1[2];
  a1[2] = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  v8 = a2[3];
  v9 = a1[3];
  a1[3] = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease(v9);
  return a1;
}

_QWORD *assignWithTake for YearlyReadingHistoryState(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  *a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease(a1[1]);
  v4 = a1[2];
  *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease(v4);
  v5 = a1[3];
  a1[3] = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRelease(v5);
  return a1;
}

uint64_t getEnumTagSinglePayload for YearlyReadingHistoryState(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 32))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for YearlyReadingHistoryState(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for YearlyReadingHistoryState()
{
  return &type metadata for YearlyReadingHistoryState;
}

uint64_t sub_7E764(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 32);
  **(_QWORD **)(*(_QWORD *)(v2 + 64) + 40) = static Array._unconditionallyBridgeFromObjectiveC(_:)(a2, &type metadata for String);
  return swift_continuation_resume(v2);
}

uint64_t sub_7E7A4()
{
  uint64_t v0;

  return swift_deallocClassInstance(v0, 16, 7);
}

uint64_t type metadata accessor for JSPageHistoryFieldProvider()
{
  return objc_opt_self(_TtC11BookStoreUI26JSPageHistoryFieldProvider);
}

uint64_t sub_7E7D4()
{
  return MetricsFieldsProvider.addTimeSensitiveMetricsFields(into:using:)();
}

uint64_t sub_7E7E8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t);

  v7 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_3207B0 + dword_3207B0);
  v5 = (_QWORD *)swift_task_alloc(unk_3207B4);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_64780;
  return v7(a1, a2);
}

uint64_t sub_7E854@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = enum case for MetricsFieldsProviderCategory.expensive(_:);
  v3 = type metadata accessor for MetricsFieldsProviderCategory(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
}

uint64_t sub_7E898()
{
  return MetricsFieldsProvider.addMetricsFields(into:using:)();
}

uint64_t sub_7E8AC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;

  v1[20] = a1;
  v2 = type metadata accessor for MetricsEventType(0);
  v1[21] = v2;
  v3 = *(_QWORD *)(v2 - 8);
  v1[22] = v3;
  v1[23] = swift_task_alloc((*(_QWORD *)(v3 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_5C154(&qword_3207B8);
  v1[24] = v4;
  v1[25] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = (*(_QWORD *)(*(_QWORD *)(sub_5C154(&qword_3207C0) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v1[26] = swift_task_alloc(v5);
  v1[27] = swift_task_alloc(v5);
  v1[28] = swift_task_alloc(v5);
  return swift_task_switch(sub_7E974, 0, 0);
}

uint64_t sub_7E974()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  void (*v29)(uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  NSString v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;

  v1 = *(_QWORD *)(v0 + 216);
  v2 = *(_QWORD *)(v0 + 224);
  v3 = *(_QWORD *)(v0 + 192);
  v4 = *(_QWORD *)(v0 + 200);
  v5 = *(_QWORD *)(v0 + 168);
  v6 = *(_QWORD *)(v0 + 176);
  v7 = *(_QWORD **)(v0 + 160);
  v8 = v7[3];
  v9 = v7[4];
  v44 = v7;
  sub_66898(v7, v8);
  v10 = sub_7EF04(&qword_3207C8, (uint64_t)&protocol conformance descriptor for MetricsEventType);
  v11 = MetricsFieldsBuilder.subscript.getter(0x707954746E657665, 0xE900000000000065, v5, v8, v5, v9, v10);
  static MetricsEventType.page.getter(v11);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v6 + 56))(v1, 0, 1, v5);
  v12 = v4 + *(int *)(v3 + 48);
  sub_7EE94(v2, v4);
  sub_7EE94(v1, v12);
  v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  if (v13(v4, 1, v5) != 1)
  {
    v16 = *(_QWORD *)(v0 + 168);
    sub_7EE94(*(_QWORD *)(v0 + 200), *(_QWORD *)(v0 + 208));
    v17 = v13(v12, 1, v16);
    v19 = *(_QWORD *)(v0 + 216);
    v18 = *(_QWORD *)(v0 + 224);
    v20 = *(_QWORD *)(v0 + 208);
    if (v17 != 1)
    {
      v23 = *(_QWORD *)(v0 + 200);
      v24 = *(_QWORD *)(v0 + 176);
      v25 = *(_QWORD *)(v0 + 184);
      v26 = *(_QWORD *)(v0 + 168);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 32))(v25, v12, v26);
      v27 = sub_7EF04(&qword_3207D0, (uint64_t)&protocol conformance descriptor for MetricsEventType);
      v28 = dispatch thunk of static Equatable.== infix(_:_:)(v20, v25, v26, v27);
      v29 = *(void (**)(uint64_t, uint64_t))(v24 + 8);
      v29(v25, v26);
      sub_5E09C(v19, &qword_3207C0);
      sub_5E09C(v18, &qword_3207C0);
      v29(v20, v26);
      sub_5E09C(v23, &qword_3207C0);
      if ((v28 & 1) == 0)
        goto LABEL_10;
      goto LABEL_8;
    }
    v21 = *(_QWORD *)(v0 + 168);
    v22 = *(_QWORD *)(v0 + 176);
    sub_5E09C(*(_QWORD *)(v0 + 216), &qword_3207C0);
    sub_5E09C(v18, &qword_3207C0);
    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v20, v21);
LABEL_6:
    sub_5E09C(*(_QWORD *)(v0 + 200), &qword_3207B8);
    goto LABEL_10;
  }
  v14 = *(_QWORD *)(v0 + 224);
  v15 = *(_QWORD *)(v0 + 168);
  sub_5E09C(*(_QWORD *)(v0 + 216), &qword_3207C0);
  sub_5E09C(v14, &qword_3207C0);
  if (v13(v12, 1, v15) != 1)
    goto LABEL_6;
  sub_5E09C(*(_QWORD *)(v0 + 200), &qword_3207C0);
LABEL_8:
  v31 = v44[3];
  v30 = v44[4];
  sub_66898(*(_QWORD **)(v0 + 160), v31);
  MetricsFieldsBuilder.subscript.getter(1701273968, 0xE400000000000000, v31, v30);
  if (v32)
  {
    v33 = v32;
    v34 = v0 + 16;
    v35 = (void *)objc_opt_self(JSAApplication);
    v36 = String._bridgeToObjectiveC()();
    *(_QWORD *)(v0 + 232) = v36;
    swift_bridgeObjectRelease(v33);
    *(_QWORD *)(v0 + 56) = v0 + 152;
    *(_QWORD *)(v0 + 16) = v0;
    *(_QWORD *)(v0 + 24) = sub_7ED18;
    v37 = swift_continuation_init(v0 + 16, 0);
    *(_QWORD *)(v0 + 80) = _NSConcreteStackBlock;
    v38 = (_QWORD *)(v0 + 80);
    v38[1] = 0x40000000;
    v38[2] = sub_7E764;
    v38[3] = &unk_2E8648;
    v38[4] = v37;
    objc_msgSend(v35, "appendPageHistory:completion:", v36, v38);
    return swift_continuation_await(v34);
  }
LABEL_10:
  v40 = *(_QWORD *)(v0 + 216);
  v42 = *(_QWORD *)(v0 + 200);
  v41 = *(_QWORD *)(v0 + 208);
  v43 = *(_QWORD *)(v0 + 184);
  swift_task_dealloc(*(_QWORD *)(v0 + 224));
  swift_task_dealloc(v40);
  swift_task_dealloc(v41);
  swift_task_dealloc(v42);
  swift_task_dealloc(v43);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_7ED18()
{
  return swift_task_switch(sub_7ED64, 0, 0);
}

uint64_t sub_7ED64()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2 = *(_QWORD *)(v0 + 152);
  v1 = *(_QWORD *)(v0 + 160);

  v3 = sub_5C154(&qword_31F730);
  *(_QWORD *)(v0 + 120) = v2;
  *(_QWORD *)(v0 + 144) = v3;
  v4 = *(_QWORD *)(v1 + 24);
  v5 = *(_QWORD *)(v1 + 32);
  sub_7EEDC(v1, v4);
  dispatch thunk of MetricsFieldsBuilder.addValue(_:forField:)(v0 + 120, 0x7473694865676170, 0xEB0000000079726FLL, v4, v5);
  _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((_QWORD *)(v0 + 120));
  v6 = *(_QWORD *)(v0 + 216);
  v8 = *(_QWORD *)(v0 + 200);
  v7 = *(_QWORD *)(v0 + 208);
  v9 = *(_QWORD *)(v0 + 184);
  swift_task_dealloc(*(_QWORD *)(v0 + 224));
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_7EE94(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_5C154(&qword_3207C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_7EEDC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

uint64_t sub_7EF04(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for MetricsEventType(255);
    result = swift_getWitnessTable(a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

BookStoreUI::PageMarginConfiguration __swiftcall PageMarginConfiguration.init(useSmallMarginsInCompactMode:)(BookStoreUI::PageMarginConfiguration useSmallMarginsInCompactMode)
{
  BookStoreUI::PageMarginConfiguration *v1;

  v1->useSmallMarginsInCompactMode = useSmallMarginsInCompactMode.useSmallMarginsInCompactMode;
  return useSmallMarginsInCompactMode;
}

uint64_t static PageMarginConfiguration.default.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;
  _BYTE v3[24];

  result = swift_beginAccess(&byte_3207D8, v3, 0, 0);
  *a1 = byte_3207D8;
  return result;
}

uint64_t static PageMarginConfiguration.default.setter(char *a1)
{
  char v1;
  uint64_t result;
  _BYTE v3[24];

  v1 = *a1;
  result = swift_beginAccess(&byte_3207D8, v3, 1, 0);
  byte_3207D8 = v1;
  return result;
}

uint64_t (*static PageMarginConfiguration.default.modify(uint64_t a1))(_QWORD)
{
  swift_beginAccess(&byte_3207D8, a1, 33, 0);
  return j__swift_endAccess;
}

uint64_t getEnumTagSinglePayload for PageMarginConfiguration(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 1 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 1;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 1;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 1;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v8 = (v6 + 2147483646) & 0x7FFFFFFF;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for PageMarginConfiguration(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_7F104 + 4 * byte_258935[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_7F138 + 4 * byte_258930[v4]))();
}

uint64_t sub_7F138(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_7F140(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x7F148);
  return result;
}

uint64_t sub_7F154(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x7F15CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_7F160(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_7F168(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PageMarginConfiguration()
{
  return &type metadata for PageMarginConfiguration;
}

void sub_7F184(_BYTE *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_7F194()
{
  unint64_t v0;

  v0 = sub_7F1C8();
  return EnvironmentValues.subscript.getter(&type metadata for PageMarginConfigurationKey, &type metadata for PageMarginConfigurationKey, v0);
}

unint64_t sub_7F1C8()
{
  unint64_t result;

  result = qword_3207E0;
  if (!qword_3207E0)
  {
    result = swift_getWitnessTable(&unk_25897C, &type metadata for PageMarginConfigurationKey);
    atomic_store(result, (unint64_t *)&qword_3207E0);
  }
  return result;
}

ValueMetadata *type metadata accessor for PageMarginConfigurationKey()
{
  return &type metadata for PageMarginConfigurationKey;
}

uint64_t IveReadThisRootView.init(assetInfo:objectGraph:)@<X0>(__int128 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  int *ThisRootView;
  _QWORD *v8;
  uint64_t v9;
  uint64_t result;
  char v11;
  _QWORD v12[2];

  v11 = 0;
  State.init(wrappedValue:)(v12, &v11, &type metadata for IveReadThisFlowState);
  v6 = v12[1];
  *(_BYTE *)a3 = v12[0];
  *(_QWORD *)(a3 + 8) = v6;
  ThisRootView = (int *)type metadata accessor for IveReadThisRootView(0);
  v8 = (_QWORD *)(a3 + ThisRootView[5]);
  *v8 = swift_getKeyPath(&unk_2589D0);
  v9 = sub_5C154(&qword_320160);
  swift_storeEnumTagMultiPayload(v8, v9, 0);
  result = sub_5DC98(a1, a3 + ThisRootView[6]);
  *(_QWORD *)(a3 + ThisRootView[7]) = a2;
  return result;
}

uint64_t type metadata accessor for IveReadThisRootView(uint64_t a1)
{
  uint64_t result;

  result = qword_320888;
  if (!qword_320888)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for IveReadThisRootView);
  return result;
}

uint64_t IveReadThisRootView.body.getter@<X0>(uint64_t a1@<X8>, __n128 a2@<Q0>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t ThisRootView;
  uint64_t v23;
  uint64_t v24;
  double v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  double v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t OpaqueTypeConformance2;
  char *v50;
  uint64_t v51;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD v65[2];

  v64 = a1;
  v3 = type metadata accessor for SizeConstants.Spacing(0, a2);
  v57 = *(_QWORD *)(v3 - 8);
  v58 = v3;
  __chkstk_darwin(v3);
  v5 = (char *)&v53 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = type metadata accessor for SizeConstants(0);
  v6 = *(_QWORD *)(v56 - 8);
  __chkstk_darwin(v56);
  v8 = (char *)&v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_5C154(&qword_3207E8);
  __chkstk_darwin(v9);
  v11 = (char *)&v53 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = sub_5C154(&qword_320320);
  __chkstk_darwin(v55);
  v13 = (char *)&v53 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_5C154(&qword_320328);
  __chkstk_darwin(v14);
  v16 = (char *)&v53 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_5C154(&qword_3207F0);
  v62 = *(_QWORD *)(v17 - 8);
  v63 = v17;
  __chkstk_darwin(v17);
  v19 = (char *)&v53 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_5C154(&qword_3207F8);
  v60 = *(_QWORD *)(v20 - 8);
  v61 = v20;
  __chkstk_darwin(v20);
  v59 = (char *)&v53 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = v2;
  sub_7F770((uint64_t)v11);
  ThisRootView = type metadata accessor for IveReadThisRootView(0);
  v23 = sub_76D64((uint64_t)v8);
  SizeConstants.spacing.getter(v23);
  v24 = (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v56);
  v25 = SizeConstants.Spacing.xxxl.getter(v24);
  v26 = v5;
  v27 = v14;
  v28 = (*(uint64_t (**)(char *, uint64_t))(v57 + 8))(v26, v58);
  v29 = static Edge.Set.all.getter(v28);
  v30 = EdgeInsets.init(_all:)(v25);
  v32 = v31;
  v34 = v33;
  v36 = v35;
  sub_5E1A4((uint64_t)v11, (uint64_t)v13, &qword_3207E8);
  v37 = &v13[*(int *)(v55 + 36)];
  *v37 = v29;
  *((double *)v37 + 1) = v30;
  *((_QWORD *)v37 + 2) = v32;
  *((_QWORD *)v37 + 3) = v34;
  *((_QWORD *)v37 + 4) = v36;
  v37[40] = 0;
  v38 = sub_5E09C((uint64_t)v11, &qword_3207E8);
  v39 = static Alignment.center.getter(v38);
  sub_74568(0.0, 1, 450.0, 0, 0.0, 1, 0.0, 1, (uint64_t)v16, 0.0, 1, 0.0, 1, v39, v40);
  sub_5E09C((uint64_t)v13, &qword_320320);
  v41 = *(int *)(ThisRootView + 28);
  v42 = v54;
  v43 = type metadata accessor for BATracker(0);
  BaseObjectGraph.inject<A>(_:)(v65, v43, v43);
  v44 = (void *)v65[0];
  v45 = sub_80008(&qword_320800, &qword_320328, (void (*)(void))sub_7FFE4);
  View.tracker(_:)(v44, v27, v45);

  sub_5E09C((uint64_t)v16, &qword_320328);
  v46 = *(_QWORD *)(v42 + v41);
  BaseObjectGraph.inject<A>(_:)(v65, &type metadata for FigaroPageConfiguration, &type metadata for FigaroPageConfiguration);
  if (LOBYTE(v65[0]) == 1)
  {
    swift_retain(v46);
  }
  else
  {
    v47 = type metadata accessor for MetricsPipeline(0);
    v46 = dispatch thunk of BaseObjectGraph.subtracting(dependencyFor:)(v47);
  }
  v48 = type metadata accessor for BaseObjectGraph(0);
  v65[0] = v27;
  v65[1] = v45;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v65, &opaque type descriptor for <<opaque return type of View.tracker(_:)>>, 1);
  v50 = v59;
  v51 = v63;
  View.actionDispatcher<A>(with:implementations:)(v46, sub_7FD18, 0, v63, v48, OpaqueTypeConformance2);
  swift_release(v46);
  (*(void (**)(char *, uint64_t))(v62 + 8))(v19, v51);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v60 + 32))(v64, v50, v61);
}

uint64_t sub_7F770@<X0>(uint64_t a1@<X8>)
{
  char *v1;
  char *v2;
  uint64_t v3;
  char *v4;
  __n128 v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v28;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  __int128 v62;
  char v63;
  __int128 v64;
  char v65;
  uint64_t v66;
  uint64_t v67;
  char v68;
  _QWORD v69[5];
  uint64_t v70;

  v2 = v1;
  v60 = a1;
  v61 = sub_5C154(&qword_320348);
  __chkstk_darwin(v61);
  v4 = (char *)&v50 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = sub_5C154(&qword_3208C8);
  v5 = __chkstk_darwin(v58);
  v59 = (uint64_t)&v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = type metadata accessor for BooksFeatureFlag(0, v5);
  v55 = *(_QWORD *)(v56 - 8);
  v7 = __chkstk_darwin(v56);
  v54 = (char *)&v50 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for ThumbOpinionButtonState(0, v7);
  v53 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v52 = (char *)&v50 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v50 - v12;
  v51 = type metadata accessor for MarkAsFinishedViewModel(0);
  __chkstk_darwin(v51);
  v15 = (char *)&v50 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = type metadata accessor for MarkAsFinishedView(0);
  __chkstk_darwin(v57);
  v17 = (char *)&v50 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = *v1;
  v19 = *((_QWORD *)v1 + 1);
  LOBYTE(v69[0]) = *v1;
  v69[1] = v19;
  v20 = sub_5C154(&qword_3208D0);
  State.wrappedValue.getter(&v70, v20);
  v21 = v70;
  v22 = (uint64_t)&v2[*(int *)(type metadata accessor for IveReadThisRootView(0) + 24)];
  if ((v21 & 1) != 0)
  {
    v23 = sub_5E0D8(v22, (uint64_t)v69);
    __chkstk_darwin(v23);
    *(&v50 - 2) = (uint64_t)v2;
    sub_75C84(v69, 1, (void (*)(uint64_t))sub_80A34, (uint64_t)(&v50 - 4), (uint64_t)v4);
    v24 = v59;
    sub_5E1A4((uint64_t)v4, v59, &qword_320348);
    swift_storeEnumTagMultiPayload(v24, v58, 1);
    v25 = sub_648E0(&qword_320818, type metadata accessor for MarkAsFinishedView, (uint64_t)&unk_263118);
    v26 = sub_67060(&qword_320820, &qword_320348, (uint64_t)&unk_269228);
    _ConditionalContent<>.init(storage:)(v24, v57, v61, v25, v26);
    return sub_5E09C((uint64_t)v4, &qword_320348);
  }
  else
  {
    sub_5E0D8(v22, (uint64_t)v69);
    LOBYTE(v66) = v18;
    v67 = v19;
    v28 = State.projectedValue.getter(&v62, v20);
    v29 = v62;
    v64 = v62;
    v65 = v63;
    v30 = static Animation.default.getter(v28);
    v31 = sub_5C154(&qword_3208D8);
    Binding.animation(_:)(&v66, v30, v31);
    swift_release(*((_QWORD *)&v29 + 1));
    swift_release(v30);
    swift_release(v29);
    v32 = v66;
    v33 = v67;
    v34 = v68;
    v35 = v57;
    v36 = &v17[*(int *)(v57 + 28)];
    *(_QWORD *)v36 = swift_getKeyPath(&unk_2589D0);
    v37 = sub_5C154(&qword_320160);
    swift_storeEnumTagMultiPayload(v36, v37, 0);
    v38 = &v17[*(int *)(v35 + 24)];
    *(_QWORD *)v38 = v32;
    *((_QWORD *)v38 + 1) = v33;
    v38[16] = v34;
    sub_5E0D8((uint64_t)v69, (uint64_t)&v62);
    v39 = &v15[*(int *)(v51 + 20)];
    v40 = v53;
    (*(void (**)(char *, _QWORD, uint64_t))(v53 + 104))(v13, enum case for ThumbOpinionButtonState.neutral(_:), v9);
    v41 = v52;
    (*(void (**)(char *, char *, uint64_t))(v40 + 16))(v52, v13, v9);
    State.init(wrappedValue:)(v39, v41, v9);
    (*(void (**)(char *, uint64_t))(v40 + 8))(v13, v9);
    sub_5DC98(&v62, (uint64_t)v15);
    sub_5E11C((uint64_t)v15, (uint64_t)v17, type metadata accessor for MarkAsFinishedViewModel);
    v42 = v55;
    v43 = v54;
    v44 = v56;
    (*(void (**)(char *, _QWORD, uint64_t))(v55 + 104))(v54, enum case for BooksFeatureFlag.iveReadThisFullFlow(_:), v56);
    v45 = sub_648E0(&qword_320358, (uint64_t (*)(uint64_t))&type metadata accessor for BooksFeatureFlag, (uint64_t)&protocol conformance descriptor for BooksFeatureFlag);
    v46 = sub_67060((unint64_t *)&qword_320360, &qword_320368, (uint64_t)&protocol conformance descriptor for StaticFeatureFlagsKey<A>);
    LOBYTE(v45) = RawRepresentable<>.isEnabled.getter(v44, v45, v46);
    _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(v69);
    (*(void (**)(char *, uint64_t))(v42 + 8))(v43, v44);
    sub_6685C((uint64_t)v15, type metadata accessor for MarkAsFinishedViewModel);
    v17[*(int *)(v35 + 20)] = v45 & 1;
    v47 = v59;
    sub_5E11C((uint64_t)v17, v59, type metadata accessor for MarkAsFinishedView);
    swift_storeEnumTagMultiPayload(v47, v58, 0);
    v48 = sub_648E0(&qword_320818, type metadata accessor for MarkAsFinishedView, (uint64_t)&unk_263118);
    v49 = sub_67060(&qword_320820, &qword_320348, (uint64_t)&unk_269228);
    _ConditionalContent<>.init(storage:)(v47, v35, v61, v48, v49);
    return sub_6685C((uint64_t)v17, type metadata accessor for MarkAsFinishedView);
  }
}

uint64_t sub_7FD18@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;
  void (*v15)(char *, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v21[2];

  v21[1] = a1;
  v1 = type metadata accessor for AssetActionImplementation(0);
  __chkstk_darwin(v1);
  v3 = (char *)v21 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_5C154(&qword_31FE40);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __chkstk_darwin(v8);
  v11 = (char *)v21 - v10;
  PageData.init(pageID:pageType:)(0, 0, 0x5464616552657649, 0xEB00000000736968, v9);
  v12 = type metadata accessor for BaseObjectGraph(0);
  ActionDispatcher.init()(v12);
  v13 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
  v13(v11, v7, v4);
  v14 = sub_648E0(&qword_320380, type metadata accessor for AssetActionImplementation, (uint64_t)&protocol conformance descriptor for AssetActionImplementation);
  ActionDispatcher.add<A>(_:)(v3, v4, v1, v14);
  v15 = *(void (**)(char *, uint64_t))(v5 + 8);
  v15(v7, v4);
  sub_6685C((uint64_t)v3, type metadata accessor for AssetActionImplementation);
  v16 = sub_5C154(&qword_320150);
  v17 = *(unsigned __int8 *)(v5 + 80);
  v18 = (v17 + 32) & ~v17;
  v19 = swift_allocObject(v16, v18 + *(_QWORD *)(v5 + 72), v17 | 7);
  v13((char *)(v19 + v18), v11, v4);
  ActionDispatcher.init()(v12);
  ActionDispatcher.add(contentsOf:)(v19 + v18, v4);
  swift_setDeallocating(v19);
  swift_arrayDestroy(v19 + v18, 1, v4);
  swift_deallocClassInstance(v19, 32, 7);
  return ((uint64_t (*)(char *, uint64_t))v15)(v11, v4);
}

uint64_t sub_7FF24@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t ThisRootView;
  _QWORD *v8;
  uint64_t v9;
  __int128 v11[2];

  v4 = sub_17EB50();
  v6 = v5;
  ThisRootView = type metadata accessor for IveReadThisRootView(0);
  sub_5E0D8(a1 + *(int *)(ThisRootView + 24), (uint64_t)v11);
  v8 = (uint64_t *)((char *)a2 + *(int *)(type metadata accessor for IveReadThisHeaderView(0) + 24));
  *v8 = swift_getKeyPath(&unk_2589D0);
  v9 = sub_5C154(&qword_320160);
  swift_storeEnumTagMultiPayload(v8, v9, 0);
  *a2 = v4;
  a2[1] = v6;
  return sub_5DC98(v11, (uint64_t)(a2 + 2));
}

uint64_t sub_7FFE4()
{
  return sub_80008(&qword_320808, &qword_320320, (void (*)(void))sub_80070);
}

uint64_t sub_80008(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = sub_667D0(a2);
    a3();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v6);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_80070()
{
  unint64_t result;
  uint64_t v1;

  result = qword_320810;
  if (!qword_320810)
  {
    v1 = sub_667D0(&qword_3207E8);
    sub_648E0(&qword_320818, type metadata accessor for MarkAsFinishedView, (uint64_t)&unk_263118);
    sub_67060(&qword_320820, &qword_320348, (uint64_t)&unk_269228);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_320810);
  }
  return result;
}

unint64_t sub_80110()
{
  unint64_t result;

  result = qword_320828;
  if (!qword_320828)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for IveReadThisFlowState, &type metadata for IveReadThisFlowState);
    atomic_store(result, (unint64_t *)&qword_320828);
  }
  return result;
}

uint64_t sub_80154(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &opaque type descriptor for <<opaque return type of IveReadThisRootView.body>>, 1);
}

uint64_t storeEnumTagSinglePayload for IveReadThisFlowState(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_801B0 + 4 * byte_2589C5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_801E4 + 4 * byte_2589C0[v4]))();
}

uint64_t sub_801E4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_801EC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x801F4);
  return result;
}

uint64_t sub_80200(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x80208);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_8020C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_80214(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for IveReadThisFlowState()
{
  return &type metadata for IveReadThisFlowState;
}

uint64_t *initializeBufferWithCopyOfBuffer for IveReadThisRootView(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    *(_BYTE *)a1 = *(_BYTE *)a2;
    v7 = a2[1];
    v4[1] = v7;
    v8 = a3[5];
    v9 = (uint64_t *)((char *)v4 + v8);
    v10 = (uint64_t *)((char *)a2 + v8);
    swift_retain(v7);
    v11 = sub_5C154(&qword_320160);
    if (swift_getEnumCaseMultiPayload(v10, v11) == 1)
    {
      v12 = type metadata accessor for SizeConstants(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v9, v10, v12);
      v13 = 1;
    }
    else
    {
      v15 = *v10;
      *v9 = *v10;
      swift_retain(v15);
      v13 = 0;
    }
    swift_storeEnumTagMultiPayload(v9, v11, v13);
    v16 = a3[6];
    v17 = *(_OWORD *)((char *)a2 + v16 + 24);
    *(_OWORD *)((char *)v4 + v16 + 24) = v17;
    (**(void (***)(void))(v17 - 8))();
    v18 = a3[7];
    v14 = *(uint64_t *)((char *)a2 + v18);
    *(uint64_t *)((char *)v4 + v18) = v14;
  }
  swift_retain(v14);
  return v4;
}

uint64_t destroy for IveReadThisRootView(uint64_t a1, int *a2)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  swift_release(*(_QWORD *)(a1 + 8));
  v4 = (_QWORD *)(a1 + a2[5]);
  v5 = sub_5C154(&qword_320160);
  if (swift_getEnumCaseMultiPayload(v4, v5) == 1)
  {
    v6 = type metadata accessor for SizeConstants(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v4, v6);
  }
  else
  {
    swift_release(*v4);
  }
  _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((_QWORD *)(a1 + a2[6]));
  return swift_release(*(_QWORD *)(a1 + a2[7]));
}

uint64_t initializeWithCopy for IveReadThisRootView(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 8) = v6;
  v7 = a3[5];
  v8 = (uint64_t *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  swift_retain(v6);
  v10 = sub_5C154(&qword_320160);
  if (swift_getEnumCaseMultiPayload(v9, v10) == 1)
  {
    v11 = type metadata accessor for SizeConstants(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v8, v9, v11);
    v12 = 1;
  }
  else
  {
    v13 = *v9;
    *v8 = *v9;
    swift_retain(v13);
    v12 = 0;
  }
  swift_storeEnumTagMultiPayload(v8, v10, v12);
  v14 = a3[6];
  v15 = *(_OWORD *)(a2 + v14 + 24);
  *(_OWORD *)(a1 + v14 + 24) = v15;
  (**(void (***)(void))(v15 - 8))();
  v16 = a3[7];
  v17 = *(_QWORD *)(a2 + v16);
  *(_QWORD *)(a1 + v16) = v17;
  swift_retain(v17);
  return a1;
}

uint64_t assignWithCopy for IveReadThisRootView(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v6 = *(_QWORD *)(a1 + 8);
  v7 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 8) = v7;
  swift_retain(v7);
  swift_release(v6);
  if (a1 != a2)
  {
    v8 = a3[5];
    v9 = (uint64_t *)(a1 + v8);
    v10 = (uint64_t *)(a2 + v8);
    sub_5E09C(a1 + v8, &qword_320160);
    v11 = sub_5C154(&qword_320160);
    if (swift_getEnumCaseMultiPayload(v10, v11) == 1)
    {
      v12 = type metadata accessor for SizeConstants(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v9, v10, v12);
      v13 = 1;
    }
    else
    {
      v14 = *v10;
      *v9 = *v10;
      swift_retain(v14);
      v13 = 0;
    }
    swift_storeEnumTagMultiPayload(v9, v11, v13);
  }
  sub_65938((_QWORD *)(a1 + a3[6]), (_QWORD *)(a2 + a3[6]));
  v15 = a3[7];
  v16 = *(_QWORD *)(a2 + v15);
  v17 = *(_QWORD *)(a1 + v15);
  *(_QWORD *)(a1 + v15) = v16;
  swift_retain(v16);
  swift_release(v17);
  return a1;
}

_OWORD *initializeWithTake for IveReadThisRootView(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  __int128 v15;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_5C154(&qword_320160);
  if (swift_getEnumCaseMultiPayload(v8, v9) == 1)
  {
    v10 = type metadata accessor for SizeConstants(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v7, v8, v10);
    swift_storeEnumTagMultiPayload(v7, v9, 1);
  }
  else
  {
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  v11 = a3[6];
  v12 = a3[7];
  v13 = (char *)a1 + v11;
  v14 = (char *)a2 + v11;
  v15 = *((_OWORD *)v14 + 1);
  *(_OWORD *)v13 = *(_OWORD *)v14;
  *((_OWORD *)v13 + 1) = v15;
  *((_QWORD *)v13 + 4) = *((_QWORD *)v14 + 4);
  *(_QWORD *)((char *)a1 + v12) = *(_QWORD *)((char *)a2 + v12);
  return a1;
}

uint64_t assignWithTake for IveReadThisRootView(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v6 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_release(v6);
  if (a1 != a2)
  {
    v7 = a3[5];
    v8 = (void *)(a1 + v7);
    v9 = (const void *)(a2 + v7);
    sub_5E09C(a1 + v7, &qword_320160);
    v10 = sub_5C154(&qword_320160);
    if (swift_getEnumCaseMultiPayload(v9, v10) == 1)
    {
      v11 = type metadata accessor for SizeConstants(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v8, v9, v11);
      swift_storeEnumTagMultiPayload(v8, v10, 1);
    }
    else
    {
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    }
  }
  v12 = a3[6];
  v13 = a1 + v12;
  v14 = a2 + v12;
  _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((_QWORD *)(a1 + v12));
  v15 = *(_OWORD *)(v14 + 16);
  *(_OWORD *)v13 = *(_OWORD *)v14;
  *(_OWORD *)(v13 + 16) = v15;
  *(_QWORD *)(v13 + 32) = *(_QWORD *)(v14 + 32);
  v16 = a3[7];
  v17 = *(_QWORD *)(a1 + v16);
  *(_QWORD *)(a1 + v16) = *(_QWORD *)(a2 + v16);
  swift_release(v17);
  return a1;
}

uint64_t getEnumTagSinglePayload for IveReadThisRootView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_807E4);
}

uint64_t sub_807E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_5C154(&qword_3201B0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + *(int *)(a3 + 20), a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 24) + 24);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for IveReadThisRootView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_80878);
}

uint64_t sub_80878(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_5C154(&qword_3201B0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + *(int *)(a4 + 20), a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 24) + 24) = (a2 - 1);
  return result;
}

void sub_808FC(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[4];

  v4[0] = &unk_258AF8;
  sub_774D4(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(v2 - 8) + 64;
    v4[2] = &unk_258B10;
    v4[3] = (char *)&value witness table for Builtin.NativeObject + 64;
    swift_initStructMetadata(a1, 256, 4, v4, a1 + 16);
  }
}

uint64_t sub_80988()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t OpaqueTypeConformance2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v0 = sub_667D0(&qword_3207F0);
  v1 = type metadata accessor for BaseObjectGraph(255);
  v4 = sub_667D0(&qword_320328);
  v5 = sub_80008(&qword_320800, &qword_320328, (void (*)(void))sub_7FFE4);
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v4, &opaque type descriptor for <<opaque return type of View.tracker(_:)>>, 1);
  v4 = v0;
  v5 = v1;
  v6 = OpaqueTypeConformance2;
  return swift_getOpaqueTypeConformance2(&v4, &opaque type descriptor for <<opaque return type of View.actionDispatcher<A>(with:implementations:)>>, 1);
}

uint64_t sub_80A34@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_7FF24(*(_QWORD *)(v1 + 16), a1);
}

ValueMetadata *type metadata accessor for RefreshSeriesUberHeaderActionImplementation()
{
  return &type metadata for RefreshSeriesUberHeaderActionImplementation;
}

uint64_t sub_80A4C()
{
  return sub_648E0(&qword_3208E0, (uint64_t (*)(uint64_t))&type metadata accessor for RefreshSeriesUberHeaderAction, (uint64_t)&protocol conformance descriptor for RefreshSeriesUberHeaderAction);
}

uint64_t sub_80A78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;

  v3[50] = a2;
  v3[51] = a3;
  v3[49] = a1;
  v4 = sub_5C154(&qword_320658);
  v3[52] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[53] = v5;
  v3[54] = swift_task_alloc((*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_5C154(&qword_31FE40);
  v3[55] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v3[56] = v7;
  v3[57] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ActionOutcome(0);
  v3[58] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v3[59] = v9;
  v3[60] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_5C154(&qword_31F590);
  v3[61] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v10 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for ActionMetrics(0);
  v3[62] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v11 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_5C154(&qword_3200B8);
  v3[63] = v12;
  v13 = *(_QWORD *)(v12 - 8);
  v3[64] = v13;
  v3[65] = swift_task_alloc((*(_QWORD *)(v13 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_5C154(&qword_31EF08);
  v3[66] = v14;
  v15 = *(_QWORD *)(v14 - 8);
  v3[67] = v15;
  v16 = (*(_QWORD *)(v15 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[68] = swift_task_alloc(v16);
  v3[69] = swift_task_alloc(v16);
  v17 = type metadata accessor for Shelf(0);
  v3[70] = v17;
  v18 = *(_QWORD *)(v17 - 8);
  v3[71] = v18;
  v3[72] = swift_task_alloc((*(_QWORD *)(v18 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_5C154(&qword_320908);
  v20 = (_QWORD *)swift_task_alloc(async function pointer to BaseObjectGraph.inject<A>(_:)[1]);
  v3[73] = v20;
  *v20 = v3;
  v20[1] = sub_80C4C;
  return BaseObjectGraph.inject<A>(_:)(v3 + 8, v19, v19);
}

uint64_t sub_80C4C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 584);
  *(_QWORD *)(*(_QWORD *)v1 + 592) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_81680;
  else
    v3 = sub_80CB0;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_80CB0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  _QWORD *v10;
  int *v12;

  v1 = v0[11];
  v2 = v0[12];
  v3 = sub_66898(v0 + 8, v1);
  RefreshSeriesUberHeaderAction.seriesInfo.getter(v3);
  v4 = v0[16];
  v5 = v0[17];
  sub_66898(v0 + 13, v4);
  v6 = ContentInfo.id.getter(v4, *(_QWORD *)(v5 + 8));
  v8 = v7;
  v0[75] = v7;
  v0[48] = 4;
  v9 = *(int **)(v2 + 8);
  v12 = (int *)((char *)v9 + *v9);
  v10 = (_QWORD *)swift_task_alloc(v9[1]);
  v0[76] = v10;
  *v10 = v0;
  v10[1] = sub_80DA8;
  return ((uint64_t (*)(_QWORD *, uint64_t, uint64_t, _QWORD *, uint64_t, uint64_t))v12)(v0 + 43, v6, v8, v0 + 48, v1, v2);
}

uint64_t sub_80DA8()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1 = (_QWORD *)(*(_QWORD *)v0 + 104);
  v2 = *(_QWORD *)(*(_QWORD *)v0 + 600);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 608));
  swift_bridgeObjectRelease(v2);
  _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(v1);
  return swift_task_switch(sub_80E14, 0, 0);
}

uint64_t sub_80E14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v1 = _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((_QWORD *)(v0 + 64));
  RefreshSeriesUberHeaderAction.seriesInfo.getter(v1);
  v2 = *(_QWORD *)(v0 + 288);
  v3 = *(_QWORD *)(v0 + 296);
  sub_66898((_QWORD *)(v0 + 264), v2);
  v4 = (void *)ContentInfo.storeData.getter(v2, *(_QWORD *)(v3 + 8));
  RefreshSeriesUberHeaderAction.seriesInfo.getter(v4);
  v5 = *(_QWORD *)(v0 + 328);
  v6 = *(_QWORD *)(v0 + 336);
  sub_66898((_QWORD *)(v0 + 304), v5);
  v7 = dispatch thunk of SeriesInfo.additionalStoreAssetsForEnrichment.getter(v5, v6);
  static ContentInfoUtilities.seriesInfo(librarySeries:storeSeries:additionalStoreAssetsForEnrichment:)(v0 + 344, v4, v7);

  swift_bridgeObjectRelease(v7);
  _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((_QWORD *)(v0 + 304));
  _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((_QWORD *)(v0 + 264));
  if (*(_QWORD *)(v0 + 248))
  {
    sub_5DC98((__int128 *)(v0 + 224), v0 + 184);
    v8 = (_QWORD *)swift_task_alloc(dword_320924);
    *(_QWORD *)(v0 + 616) = v8;
    *v8 = v0;
    v8[1] = sub_81028;
    v9 = *(_QWORD *)(v0 + 400);
    v8[53] = v0 + 184;
    v8[54] = v9;
    v8[52] = v0 + 16;
    return swift_task_switch(sub_81A4C, 0, 0);
  }
  else
  {
    v11 = *(_QWORD *)(v0 + 464);
    v12 = *(_QWORD *)(v0 + 472);
    v13 = *(_QWORD *)(v0 + 392);
    sub_5E09C(v0 + 344, &qword_320910);
    sub_5E09C(v0 + 224, &qword_320918);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v12 + 104))(v13, enum case for ActionOutcome.unsupported(_:), v11);
    v14 = *(_QWORD *)(v0 + 552);
    v15 = *(_QWORD *)(v0 + 544);
    v16 = *(_QWORD *)(v0 + 520);
    v18 = *(_QWORD *)(v0 + 488);
    v17 = *(_QWORD *)(v0 + 496);
    v19 = *(_QWORD *)(v0 + 480);
    v20 = *(_QWORD *)(v0 + 456);
    v21 = *(_QWORD *)(v0 + 432);
    swift_task_dealloc(*(_QWORD *)(v0 + 576));
    swift_task_dealloc(v14);
    swift_task_dealloc(v15);
    swift_task_dealloc(v16);
    swift_task_dealloc(v17);
    swift_task_dealloc(v18);
    swift_task_dealloc(v19);
    swift_task_dealloc(v20);
    swift_task_dealloc(v21);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_81028()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 616);
  *(_QWORD *)(*(_QWORD *)v1 + 624) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_81730;
  else
    v3 = sub_8108C;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_8108C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;

  v1 = *(_QWORD *)(v0 + 624);
  static Shelf.seriesHeader(from:seriesPromotionState:with:)((_QWORD *)(v0 + 184), v0 + 16, *(_QWORD *)(v0 + 400), *(_QWORD *)(v0 + 576));
  if (v1)
  {
    sub_8307C((_QWORD *)(v0 + 16));
    _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((_QWORD *)(v0 + 184));
    sub_5E09C(v0 + 344, &qword_320910);
    v2 = *(_QWORD *)(v0 + 552);
    v3 = *(_QWORD *)(v0 + 544);
    v4 = *(_QWORD *)(v0 + 520);
    v6 = *(_QWORD *)(v0 + 488);
    v5 = *(_QWORD *)(v0 + 496);
    v7 = *(_QWORD *)(v0 + 480);
    v8 = *(_QWORD *)(v0 + 456);
    v9 = *(_QWORD *)(v0 + 432);
    swift_task_dealloc(*(_QWORD *)(v0 + 576));
    swift_task_dealloc(v2);
    swift_task_dealloc(v3);
    swift_task_dealloc(v4);
    swift_task_dealloc(v5);
    swift_task_dealloc(v6);
    swift_task_dealloc(v7);
    swift_task_dealloc(v8);
    swift_task_dealloc(v9);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v11 = *(_QWORD *)(v0 + 576);
    v12 = *(_QWORD *)(v0 + 568);
    v13 = *(uint64_t **)(v0 + 552);
    v14 = *(_QWORD *)(v0 + 544);
    v15 = *(_QWORD *)(v0 + 536);
    v16 = *(_QWORD *)(v0 + 528);
    v29 = *(_QWORD *)(v0 + 560);
    v17 = *(_QWORD *)(v0 + 488);
    v18 = *(_QWORD *)(v0 + 496);
    v19 = sub_5C154(&qword_31EF40);
    v20 = *(unsigned __int8 *)(v12 + 80);
    v21 = (v20 + 32) & ~v20;
    v22 = swift_allocObject(v19, v21 + *(_QWORD *)(v12 + 72), v20 | 7);
    *(_OWORD *)(v22 + 16) = xmmword_258070;
    sub_830B0(v11, v22 + v21);
    *v13 = v22;
    v23.n128_f64[0] = (*(double (**)(uint64_t *, _QWORD, uint64_t))(v15 + 104))(v13, enum case for PageUpdateInstruction.replaceShelves<A, B>(_:), v16);
    static ActionMetrics.notInstrumented.getter(v23);
    (*(void (**)(uint64_t, uint64_t *, uint64_t))(v15 + 16))(v14, v13, v16);
    v24 = type metadata accessor for ClickData(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v17, 1, 1, v24);
    v25 = type metadata accessor for Page(0);
    v26 = sub_648E0((unint64_t *)&qword_320120, type metadata accessor for Page, (uint64_t)&protocol conformance descriptor for Page);
    v27 = sub_648E0(&qword_320128, type metadata accessor for Shelf, (uint64_t)&protocol conformance descriptor for Shelf);
    PageUpdateAction.init(actionMetrics:instruction:animated:clickData:)(v18, v14, 1, v17, v25, v29, v26, v27);
    v28 = (_QWORD *)swift_task_alloc(async function pointer to BaseObjectGraph.inject<A>(_:)[1]);
    *(_QWORD *)(v0 + 632) = v28;
    *v28 = v0;
    v28[1] = sub_81314;
    return BaseObjectGraph.inject<A>(_:)(*(_QWORD *)(v0 + 456), *(_QWORD *)(v0 + 440), *(_QWORD *)(v0 + 440));
  }
}

uint64_t sub_81314()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 632);
  *(_QWORD *)(*(_QWORD *)v1 + 640) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_817FC;
  else
    v3 = sub_81378;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_81378()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;

  v1 = v0[65];
  v3 = v0[63];
  v2 = v0[64];
  v5 = v0[53];
  v4 = v0[54];
  v6 = v0[52];
  v0[21] = v3;
  v0[22] = sub_67060((unint64_t *)&qword_3200C0, &qword_3200B8, (uint64_t)&protocol conformance descriptor for PageUpdateAction<A, B>);
  v7 = sub_668BC(v0 + 18);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(v2 + 16))(v7, v1, v3);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v5 + 104))(v4, enum case for ActionDispatcher.MetricsBehavior.notProcessed<A>(_:), v6);
  v8 = (_QWORD *)swift_task_alloc(async function pointer to ActionDispatcher.perform(_:withMetrics:asPartOf:)[1]);
  v0[81] = v8;
  *v8 = v0;
  v8[1] = sub_8145C;
  return ActionDispatcher.perform(_:withMetrics:asPartOf:)(v0[60], v0 + 18, v0[54], v0[50], v0[55]);
}

uint64_t sub_8145C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v2 = *(_QWORD **)v1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 648);
  *(_QWORD *)(*(_QWORD *)v1 + 656) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v5 = v2[56];
    v4 = v2[57];
    v6 = v2[55];
    (*(void (**)(_QWORD, _QWORD))(v2[53] + 8))(v2[54], v2[52]);
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
    v7 = sub_81910;
  }
  else
  {
    v9 = v2[59];
    v8 = v2[60];
    v11 = v2[57];
    v10 = v2[58];
    v12 = v2[55];
    v13 = v2[56];
    (*(void (**)(_QWORD, _QWORD))(v2[53] + 8))(v2[54], v2[52]);
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v11, v12);
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
    _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(v2 + 18);
    v7 = sub_81544;
  }
  return swift_task_switch(v7, 0, 0);
}

uint64_t sub_81544()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v1 = *(_QWORD *)(v0 + 576);
  v2 = *(_QWORD *)(v0 + 552);
  v3 = *(_QWORD *)(v0 + 536);
  v4 = *(_QWORD *)(v0 + 528);
  v5 = *(_QWORD *)(v0 + 472);
  v16 = *(_QWORD *)(v0 + 464);
  v6 = *(_QWORD *)(v0 + 392);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 512) + 8))(*(_QWORD *)(v0 + 520), *(_QWORD *)(v0 + 504));
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  sub_830F4(v1);
  sub_8307C((_QWORD *)(v0 + 16));
  _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((_QWORD *)(v0 + 184));
  sub_5E09C(v0 + 344, &qword_320910);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v5 + 104))(v6, enum case for ActionOutcome.performed(_:), v16);
  v7 = *(_QWORD *)(v0 + 552);
  v8 = *(_QWORD *)(v0 + 544);
  v9 = *(_QWORD *)(v0 + 520);
  v11 = *(_QWORD *)(v0 + 488);
  v10 = *(_QWORD *)(v0 + 496);
  v12 = *(_QWORD *)(v0 + 480);
  v13 = *(_QWORD *)(v0 + 456);
  v14 = *(_QWORD *)(v0 + 432);
  swift_task_dealloc(*(_QWORD *)(v0 + 576));
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_81680()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 552);
  v2 = *(_QWORD *)(v0 + 544);
  v3 = *(_QWORD *)(v0 + 520);
  v5 = *(_QWORD *)(v0 + 488);
  v4 = *(_QWORD *)(v0 + 496);
  v6 = *(_QWORD *)(v0 + 480);
  v7 = *(_QWORD *)(v0 + 456);
  v8 = *(_QWORD *)(v0 + 432);
  swift_task_dealloc(*(_QWORD *)(v0 + 576));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_81730()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((_QWORD *)(v0 + 184));
  sub_5E09C(v0 + 344, &qword_320910);
  v1 = *(_QWORD *)(v0 + 552);
  v2 = *(_QWORD *)(v0 + 544);
  v3 = *(_QWORD *)(v0 + 520);
  v5 = *(_QWORD *)(v0 + 488);
  v4 = *(_QWORD *)(v0 + 496);
  v6 = *(_QWORD *)(v0 + 480);
  v7 = *(_QWORD *)(v0 + 456);
  v8 = *(_QWORD *)(v0 + 432);
  swift_task_dealloc(*(_QWORD *)(v0 + 576));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_817FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v1 = *(_QWORD *)(v0 + 576);
  v2 = *(_QWORD *)(v0 + 552);
  v3 = *(_QWORD *)(v0 + 536);
  v4 = *(_QWORD *)(v0 + 528);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 512) + 8))(*(_QWORD *)(v0 + 520), *(_QWORD *)(v0 + 504));
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  sub_830F4(v1);
  sub_8307C((_QWORD *)(v0 + 16));
  _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((_QWORD *)(v0 + 184));
  sub_5E09C(v0 + 344, &qword_320910);
  v5 = *(_QWORD *)(v0 + 552);
  v6 = *(_QWORD *)(v0 + 544);
  v7 = *(_QWORD *)(v0 + 520);
  v9 = *(_QWORD *)(v0 + 488);
  v8 = *(_QWORD *)(v0 + 496);
  v10 = *(_QWORD *)(v0 + 480);
  v11 = *(_QWORD *)(v0 + 456);
  v12 = *(_QWORD *)(v0 + 432);
  swift_task_dealloc(*(_QWORD *)(v0 + 576));
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_81910()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v1 = *(_QWORD *)(v0 + 576);
  v2 = *(_QWORD *)(v0 + 552);
  v3 = *(_QWORD *)(v0 + 536);
  v4 = *(_QWORD *)(v0 + 528);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 512) + 8))(*(_QWORD *)(v0 + 520), *(_QWORD *)(v0 + 504));
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  sub_830F4(v1);
  sub_8307C((_QWORD *)(v0 + 16));
  _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((_QWORD *)(v0 + 184));
  sub_5E09C(v0 + 344, &qword_320910);
  _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((_QWORD *)(v0 + 144));
  v5 = *(_QWORD *)(v0 + 552);
  v6 = *(_QWORD *)(v0 + 544);
  v7 = *(_QWORD *)(v0 + 520);
  v9 = *(_QWORD *)(v0 + 488);
  v8 = *(_QWORD *)(v0 + 496);
  v10 = *(_QWORD *)(v0 + 480);
  v11 = *(_QWORD *)(v0 + 456);
  v12 = *(_QWORD *)(v0 + 432);
  swift_task_dealloc(*(_QWORD *)(v0 + 576));
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_81A30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[53] = a2;
  v3[54] = a3;
  v3[52] = a1;
  return swift_task_switch(sub_81A4C, 0, 0);
}

uint64_t sub_81A4C()
{
  uint64_t v0;
  _QWORD *v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v8;
  _QWORD *v9;

  v1 = *(_QWORD **)(v0 + 424);
  v2 = (char *)v1[3];
  v3 = v1[4];
  sub_66898(v1, (uint64_t)v2);
  SeriesInfo.getPromotionState()(v2, v3, v0 + 16);
  sub_83130(v0 + 16, v0 + 64);
  if (*(_BYTE *)(v0 + 104) != 4)
  {
    sub_8307C((_QWORD *)(v0 + 64));
    goto LABEL_5;
  }
  sub_5DC98((__int128 *)(v0 + 64), v0 + 112);
  v4 = *(_QWORD *)(v0 + 136);
  v5 = *(_QWORD *)(v0 + 144);
  sub_66898((_QWORD *)(v0 + 112), v4);
  v6 = (void *)ContentInfo.storeData.getter(v4, *(_QWORD *)(v5 + 8));
  if (v6)
  {

    _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((_QWORD *)(v0 + 112));
LABEL_5:
    sub_8316C(v0 + 16, *(_QWORD *)(v0 + 416));
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v8 = sub_5C154(&qword_31FE78);
  v9 = (_QWORD *)swift_task_alloc(async function pointer to BaseObjectGraph.inject<A>(_:)[1]);
  *(_QWORD *)(v0 + 440) = v9;
  *v9 = v0;
  v9[1] = sub_81BA4;
  return BaseObjectGraph.inject<A>(_:)(v0 + 152, v8, v8);
}

uint64_t sub_81BA4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 440);
  *(_QWORD *)(*(_QWORD *)v1 + 448) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_828D8;
  else
    v3 = sub_81C08;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_81C08()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)();
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  Swift::String v23;
  uint64_t v24;
  uint64_t v25;

  v1 = *(_QWORD *)(v0 + 136);
  v2 = *(_QWORD *)(v0 + 144);
  sub_66898((_QWORD *)(v0 + 112), v1);
  v3 = dispatch thunk of AssetInfo.assetType.getter(v1, v2);
  if (!v3)
  {
    v5 = v0 + 408;
    v4 = v0 + 400;
    v17 = sub_5C154(&qword_31EF50);
    v18 = swift_allocObject(v17, 48, 7);
    *(_QWORD *)(v0 + 456) = v18;
    *(_OWORD *)(v18 + 16) = xmmword_258070;
    v19 = *(_QWORD *)(v0 + 136);
    v20 = *(_QWORD *)(v0 + 144);
    sub_66898((_QWORD *)(v0 + 112), v19);
    *(_QWORD *)(v18 + 32) = ContentInfo.id.getter(v19, *(_QWORD *)(v20 + 8));
    *(_QWORD *)(v18 + 40) = v21;
    v11 = *(_QWORD *)(v0 + 176);
    v12 = *(_QWORD *)(v0 + 184);
    sub_66898((_QWORD *)(v0 + 152), v11);
    *(_QWORD *)(v0 + 408) = v18;
    v13 = (_QWORD *)swift_task_alloc(async function pointer to dispatch thunk of IntentDispatcher.dispatch<A>(_:objectGraph:)[1]);
    *(_QWORD *)(v0 + 464) = v13;
    v14 = sub_5C154(&qword_320948);
    v15 = sub_67060(&qword_320950, &qword_320948, (uint64_t)&protocol conformance descriptor for StoreCatalogIntent<A>);
    v16 = sub_81F10;
    goto LABEL_5;
  }
  if (v3 == 1)
  {
    v4 = v0 + 384;
    v5 = v0 + 376;
    v6 = sub_5C154(&qword_31EF50);
    v7 = swift_allocObject(v6, 48, 7);
    *(_QWORD *)(v0 + 480) = v7;
    *(_OWORD *)(v7 + 16) = xmmword_258070;
    v8 = *(_QWORD *)(v0 + 136);
    v9 = *(_QWORD *)(v0 + 144);
    sub_66898((_QWORD *)(v0 + 112), v8);
    *(_QWORD *)(v7 + 32) = ContentInfo.id.getter(v8, *(_QWORD *)(v9 + 8));
    *(_QWORD *)(v7 + 40) = v10;
    v11 = *(_QWORD *)(v0 + 176);
    v12 = *(_QWORD *)(v0 + 184);
    sub_66898((_QWORD *)(v0 + 152), v11);
    *(_QWORD *)(v0 + 376) = v7;
    v13 = (_QWORD *)swift_task_alloc(async function pointer to dispatch thunk of IntentDispatcher.dispatch<A>(_:objectGraph:)[1]);
    *(_QWORD *)(v0 + 488) = v13;
    v14 = sub_5C154(&qword_320928);
    v15 = sub_67060(&qword_320930, &qword_320928, (uint64_t)&protocol conformance descriptor for StoreCatalogIntent<A>);
    v16 = sub_823F4;
LABEL_5:
    *v13 = v0;
    v13[1] = v16;
    return dispatch thunk of IntentDispatcher.dispatch<A>(_:objectGraph:)(v4, v5, *(_QWORD *)(v0 + 432), v14, v15, v11, v12);
  }
  _StringGuts.grow(_:)(21);
  *(_QWORD *)(v0 + 352) = 0;
  *(_QWORD *)(v0 + 360) = 0xE000000000000000;
  v23._object = (void *)0x800000000026F8D0;
  v23._countAndFlagsBits = 0xD000000000000013;
  String.append(_:)(v23);
  v24 = *(_QWORD *)(v0 + 136);
  v25 = *(_QWORD *)(v0 + 144);
  sub_66898((_QWORD *)(v0 + 112), v24);
  *(_BYTE *)(v0 + 57) = dispatch thunk of AssetInfo.assetType.getter(v24, v25);
  _print_unlocked<A, B>(_:_:)(v0 + 57, v0 + 352, &type metadata for AssetType, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  return _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, *(_QWORD *)(v0 + 352), *(_QWORD *)(v0 + 360), "BookStoreUI/RefreshSeriesUberHeaderActionImplementation.swift", 61, 2, 55, 0);
}

uint64_t sub_81F10()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 464);
  *(_QWORD *)(*v1 + 472) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = sub_82918;
  }
  else
  {
    swift_bridgeObjectRelease(*(_QWORD *)(v2 + 456));
    v4 = sub_81F7C;
  }
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_81F7C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t AssociatedTypeWitness;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint8_t *v35;
  void *v37;
  __int128 *v38;
  _QWORD *v39;
  _QWORD *v40;
  uint64_t v41;

  v2 = *(_QWORD *)(v0 + 400);
  if ((unint64_t)v2 >> 62)
  {
    if (v2 < 0)
      v19 = *(_QWORD *)(v0 + 400);
    else
      v19 = v2 & 0xFFFFFFFFFFFFFF8;
    v20 = type metadata accessor for MAsset(0);
    swift_bridgeObjectRetain(v2);
    v4 = _bridgeCocoaArray<A>(_:)(v19, v20);
    swift_bridgeObjectRelease(v2);
  }
  else
  {
    v3 = swift_bridgeObjectRetain(*(_QWORD *)(v0 + 400));
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v3);
    type metadata accessor for MAsset(0);
    v4 = v2;
  }
  v5 = v0 + 16;
  v6 = (_QWORD *)(v0 + 112);
  swift_bridgeObjectRelease(v2);
  if ((unint64_t)v4 >> 62)
  {
    if (v4 < 0)
      v21 = v4;
    else
      v21 = v4 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v4);
    v22 = _CocoaArrayWrapper.endIndex.getter(v21);
    swift_bridgeObjectRelease(v4);
    v39 = (_QWORD *)(v0 + 16);
    v40 = (_QWORD *)(v0 + 112);
    if (v22)
      goto LABEL_5;
LABEL_22:
    swift_bridgeObjectRelease(v4);
    goto LABEL_23;
  }
  v39 = (_QWORD *)(v0 + 16);
  v40 = (_QWORD *)(v0 + 112);
  if (!*(_QWORD *)((char *)&dword_10 + (v4 & 0xFFFFFFFFFFFFF8)))
    goto LABEL_22;
LABEL_5:
  if ((v4 & 0xC000000000000001) != 0)
  {
    v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v4);
  }
  else
  {
    if (!*(_QWORD *)((char *)&dword_10 + (v4 & 0xFFFFFFFFFFFFF8)))
    {
      __break(1u);
      goto LABEL_31;
    }
    v7 = *(id *)(v4 + 32);
  }
  v37 = v7;
  v38 = (__int128 *)(v0 + 272);
  swift_bridgeObjectRelease(v4);
  v8 = *(_QWORD *)(v0 + 136);
  v9 = *(_QWORD *)(v0 + 144);
  sub_66898((_QWORD *)(v0 + 112), v8);
  v10 = *(_QWORD *)(v9 + 8);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(255, v10);
  v12 = type metadata accessor for Optional(0, AssociatedTypeWitness);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = swift_task_alloc((*(_QWORD *)(v13 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  ContentInfo.libraryData.getter(v8, v10);
  v15 = *(_QWORD *)(AssociatedTypeWitness - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v14, 1, AssociatedTypeWitness) == 1)
  {
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v14, v12);
    swift_task_dealloc(v14);
    *(_QWORD *)(v0 + 264) = 0;
    *(_OWORD *)(v0 + 232) = 0u;
    *(_OWORD *)(v0 + 248) = 0u;
  }
  else
  {
    *(_QWORD *)(v0 + 256) = AssociatedTypeWitness;
    *(_QWORD *)(v0 + 264) = swift_getAssociatedConformanceWitness(v9, v8, AssociatedTypeWitness, &protocol requirements base descriptor for AssetInfo, &associated conformance descriptor for AssetInfo.ContentInfo.LibraryType: LibraryAssetInfo);
    v16 = sub_668BC((_QWORD *)(v0 + 232));
    (*(void (**)(_QWORD *, uint64_t, uint64_t))(v15 + 32))(v16, v14, AssociatedTypeWitness);
    swift_task_dealloc(v14);
  }
  v5 = (uint64_t)v39;
  v17 = v37;
  static ContentInfoUtilities.assetInfo(libraryAssetInfo:storeAsset:)(v0 + 232, v37);

  sub_5E09C(v0 + 232, &qword_320938);
  v6 = v40;
  if (*(_QWORD *)(v0 + 296))
  {
    v18 = *(_QWORD *)(v0 + 416);
    sub_8307C(v39);
    sub_5DC98(v38, v18);
    *(_BYTE *)(v18 + 40) = 4;
    goto LABEL_28;
  }
  sub_5E09C((uint64_t)v38, &qword_320940);
LABEL_23:
  v1 = (_QWORD *)(v0 + 192);
  if (qword_31E618 != -1)
LABEL_31:
    swift_once(&qword_31E618, sub_126B24);
  v23 = type metadata accessor for Logger(0);
  sub_5240C(v23, (uint64_t)qword_3251D8);
  v24 = sub_5E0D8((uint64_t)v6, (uint64_t)v1);
  v25 = Logger.logObject.getter(v24);
  v26 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v25, v26))
  {
    v27 = (uint8_t *)swift_slowAlloc(12, -1);
    v28 = swift_slowAlloc(32, -1);
    v41 = v28;
    *(_DWORD *)v27 = 136315138;
    v29 = *(_QWORD *)(v0 + 216);
    v30 = *(_QWORD *)(v0 + 224);
    sub_66898(v1, v29);
    v31 = ContentInfo.id.getter(v29, *(_QWORD *)(v30 + 8));
    v33 = v32;
    *(_QWORD *)(v0 + 392) = sub_57CD8(v31, v32, &v41);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 392, v0 + 400, v27 + 4, v27 + 12);
    swift_bridgeObjectRelease(v33);
    _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(v1);
    _os_log_impl(&dword_0, v25, v26, "Attempted to fetch store data for assetID: %s, but received empty response.", v27, 0xCu);
    swift_arrayDestroy(v28, 1, (char *)&type metadata for Any + 8);
    v34 = v28;
    v5 = (uint64_t)v39;
    swift_slowDealloc(v34, -1, -1);
    v35 = v27;
    v6 = v40;
    swift_slowDealloc(v35, -1, -1);
  }
  else
  {
    _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(v1);
  }

  sub_8316C(v5, *(_QWORD *)(v0 + 416));
LABEL_28:
  _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((_QWORD *)(v0 + 152));
  _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(v6);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_823F4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 488);
  *(_QWORD *)(*v1 + 496) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = sub_82B20;
  }
  else
  {
    swift_bridgeObjectRelease(*(_QWORD *)(v2 + 480));
    v4 = sub_82460;
  }
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_82460()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t AssociatedTypeWitness;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint8_t *v35;
  void *v37;
  __int128 *v38;
  _QWORD *v39;
  _QWORD *v40;
  uint64_t v41;

  v2 = *(_QWORD *)(v0 + 384);
  if ((unint64_t)v2 >> 62)
  {
    if (v2 < 0)
      v19 = *(_QWORD *)(v0 + 384);
    else
      v19 = v2 & 0xFFFFFFFFFFFFFF8;
    v20 = type metadata accessor for MAsset(0);
    swift_bridgeObjectRetain(v2);
    v4 = _bridgeCocoaArray<A>(_:)(v19, v20);
    swift_bridgeObjectRelease(v2);
  }
  else
  {
    v3 = swift_bridgeObjectRetain(*(_QWORD *)(v0 + 384));
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v3);
    type metadata accessor for MAsset(0);
    v4 = v2;
  }
  v5 = v0 + 16;
  v6 = (_QWORD *)(v0 + 112);
  swift_bridgeObjectRelease(v2);
  if ((unint64_t)v4 >> 62)
  {
    if (v4 < 0)
      v21 = v4;
    else
      v21 = v4 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v4);
    v22 = _CocoaArrayWrapper.endIndex.getter(v21);
    swift_bridgeObjectRelease(v4);
    v39 = (_QWORD *)(v0 + 16);
    v40 = (_QWORD *)(v0 + 112);
    if (v22)
      goto LABEL_5;
LABEL_22:
    swift_bridgeObjectRelease(v4);
    goto LABEL_23;
  }
  v39 = (_QWORD *)(v0 + 16);
  v40 = (_QWORD *)(v0 + 112);
  if (!*(_QWORD *)((char *)&dword_10 + (v4 & 0xFFFFFFFFFFFFF8)))
    goto LABEL_22;
LABEL_5:
  if ((v4 & 0xC000000000000001) != 0)
  {
    v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v4);
  }
  else
  {
    if (!*(_QWORD *)((char *)&dword_10 + (v4 & 0xFFFFFFFFFFFFF8)))
    {
      __break(1u);
      goto LABEL_31;
    }
    v7 = *(id *)(v4 + 32);
  }
  v37 = v7;
  v38 = (__int128 *)(v0 + 272);
  swift_bridgeObjectRelease(v4);
  v8 = *(_QWORD *)(v0 + 136);
  v9 = *(_QWORD *)(v0 + 144);
  sub_66898((_QWORD *)(v0 + 112), v8);
  v10 = *(_QWORD *)(v9 + 8);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(255, v10);
  v12 = type metadata accessor for Optional(0, AssociatedTypeWitness);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = swift_task_alloc((*(_QWORD *)(v13 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  ContentInfo.libraryData.getter(v8, v10);
  v15 = *(_QWORD *)(AssociatedTypeWitness - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v14, 1, AssociatedTypeWitness) == 1)
  {
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v14, v12);
    swift_task_dealloc(v14);
    *(_QWORD *)(v0 + 264) = 0;
    *(_OWORD *)(v0 + 232) = 0u;
    *(_OWORD *)(v0 + 248) = 0u;
  }
  else
  {
    *(_QWORD *)(v0 + 256) = AssociatedTypeWitness;
    *(_QWORD *)(v0 + 264) = swift_getAssociatedConformanceWitness(v9, v8, AssociatedTypeWitness, &protocol requirements base descriptor for AssetInfo, &associated conformance descriptor for AssetInfo.ContentInfo.LibraryType: LibraryAssetInfo);
    v16 = sub_668BC((_QWORD *)(v0 + 232));
    (*(void (**)(_QWORD *, uint64_t, uint64_t))(v15 + 32))(v16, v14, AssociatedTypeWitness);
    swift_task_dealloc(v14);
  }
  v5 = (uint64_t)v39;
  v17 = v37;
  static ContentInfoUtilities.assetInfo(libraryAssetInfo:storeAsset:)(v0 + 232, v37);

  sub_5E09C(v0 + 232, &qword_320938);
  v6 = v40;
  if (*(_QWORD *)(v0 + 296))
  {
    v18 = *(_QWORD *)(v0 + 416);
    sub_8307C(v39);
    sub_5DC98(v38, v18);
    *(_BYTE *)(v18 + 40) = 4;
    goto LABEL_28;
  }
  sub_5E09C((uint64_t)v38, &qword_320940);
LABEL_23:
  v1 = (_QWORD *)(v0 + 192);
  if (qword_31E618 != -1)
LABEL_31:
    swift_once(&qword_31E618, sub_126B24);
  v23 = type metadata accessor for Logger(0);
  sub_5240C(v23, (uint64_t)qword_3251D8);
  v24 = sub_5E0D8((uint64_t)v6, (uint64_t)v1);
  v25 = Logger.logObject.getter(v24);
  v26 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v25, v26))
  {
    v27 = (uint8_t *)swift_slowAlloc(12, -1);
    v28 = swift_slowAlloc(32, -1);
    v41 = v28;
    *(_DWORD *)v27 = 136315138;
    v30 = *(_QWORD *)(v0 + 216);
    v29 = *(_QWORD *)(v0 + 224);
    sub_66898(v1, v30);
    v31 = ContentInfo.id.getter(v30, *(_QWORD *)(v29 + 8));
    v33 = v32;
    *(_QWORD *)(v0 + 392) = sub_57CD8(v31, v32, &v41);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 392, v0 + 400, v27 + 4, v27 + 12);
    swift_bridgeObjectRelease(v33);
    _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(v1);
    _os_log_impl(&dword_0, v25, v26, "Attempted to fetch store data for assetID: %s, but received empty response.", v27, 0xCu);
    swift_arrayDestroy(v28, 1, (char *)&type metadata for Any + 8);
    v34 = v28;
    v5 = (uint64_t)v39;
    swift_slowDealloc(v34, -1, -1);
    v35 = v27;
    v6 = v40;
    swift_slowDealloc(v35, -1, -1);
  }
  else
  {
    _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(v1);
  }

  sub_8316C(v5, *(_QWORD *)(v0 + 416));
LABEL_28:
  _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((_QWORD *)(v0 + 152));
  _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(v6);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_828D8()
{
  uint64_t v0;

  sub_8307C((_QWORD *)(v0 + 16));
  _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((_QWORD *)(v0 + 112));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_82918()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 456));
  v1 = *(_QWORD *)(v0 + 472);
  if (qword_31E618 != -1)
    swift_once(&qword_31E618, sub_126B24);
  v2 = type metadata accessor for Logger(0);
  sub_5240C(v2, (uint64_t)qword_3251D8);
  v3 = sub_5E0D8(v0 + 112, v0 + 312);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v4, v5))
  {
    v15 = v1;
    v6 = (uint8_t *)swift_slowAlloc(12, -1);
    v7 = swift_slowAlloc(32, -1);
    v16 = v7;
    *(_DWORD *)v6 = 136315138;
    v9 = *(_QWORD *)(v0 + 336);
    v8 = *(_QWORD *)(v0 + 344);
    sub_66898((_QWORD *)(v0 + 312), v9);
    v10 = ContentInfo.id.getter(v9, *(_QWORD *)(v8 + 8));
    v12 = v11;
    *(_QWORD *)(v0 + 368) = sub_57CD8(v10, v11, &v16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 368, v0 + 376, v6 + 4, v6 + 12);
    swift_bridgeObjectRelease(v12);
    _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((_QWORD *)(v0 + 312));
    _os_log_impl(&dword_0, v4, v5, "Failed to fetch store data for assetID: %s.", v6, 0xCu);
    swift_arrayDestroy(v7, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v7, -1, -1);
    swift_slowDealloc(v6, -1, -1);
    v13 = v15;
  }
  else
  {
    _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((_QWORD *)(v0 + 312));
    v13 = v1;
  }
  swift_errorRelease(v13);

  sub_8316C(v0 + 16, *(_QWORD *)(v0 + 416));
  _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((_QWORD *)(v0 + 152));
  _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((_QWORD *)(v0 + 112));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_82B20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 480));
  v1 = *(_QWORD *)(v0 + 496);
  if (qword_31E618 != -1)
    swift_once(&qword_31E618, sub_126B24);
  v2 = type metadata accessor for Logger(0);
  sub_5240C(v2, (uint64_t)qword_3251D8);
  v3 = sub_5E0D8(v0 + 112, v0 + 312);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v4, v5))
  {
    v15 = v1;
    v6 = (uint8_t *)swift_slowAlloc(12, -1);
    v7 = swift_slowAlloc(32, -1);
    v16 = v7;
    *(_DWORD *)v6 = 136315138;
    v9 = *(_QWORD *)(v0 + 336);
    v8 = *(_QWORD *)(v0 + 344);
    sub_66898((_QWORD *)(v0 + 312), v9);
    v10 = ContentInfo.id.getter(v9, *(_QWORD *)(v8 + 8));
    v12 = v11;
    *(_QWORD *)(v0 + 368) = sub_57CD8(v10, v11, &v16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 368, v0 + 376, v6 + 4, v6 + 12);
    swift_bridgeObjectRelease(v12);
    _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((_QWORD *)(v0 + 312));
    _os_log_impl(&dword_0, v4, v5, "Failed to fetch store data for assetID: %s.", v6, 0xCu);
    swift_arrayDestroy(v7, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v7, -1, -1);
    swift_slowDealloc(v6, -1, -1);
    v13 = v15;
  }
  else
  {
    _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((_QWORD *)(v0 + 312));
    v13 = v1;
  }
  swift_errorRelease(v13);

  sub_8316C(v0 + 16, *(_QWORD *)(v0 + 416));
  _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((_QWORD *)(v0 + 152));
  _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((_QWORD *)(v0 + 112));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_82D2C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t refreshed;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v20;

  v4 = sub_5C154(&qword_329740);
  __chkstk_darwin(v4);
  v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  refreshed = type metadata accessor for RefreshSeriesUberHeaderAction(0);
  v8 = *(_QWORD *)(refreshed - 8);
  v9 = *(_QWORD *)(v8 + 64);
  v10 = __chkstk_darwin(refreshed);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v8 + 16))((char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), a1, refreshed, v10);
  v11 = *(unsigned __int8 *)(v8 + 80);
  v12 = (v11 + 24) & ~v11;
  v13 = swift_allocObject(&unk_2E8880, v12 + v9, v11 | 7);
  *(_QWORD *)(v13 + 16) = a2;
  (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(v13 + v12, (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), refreshed);
  sub_5C154(&qword_3208F8);
  v14 = swift_retain(a2);
  v15 = Promise.__allocating_init()(v14);
  v16 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v6, 1, 1, v16);
  v17 = (_QWORD *)swift_allocObject(&unk_2E88A8, 56, 7);
  v17[2] = 0;
  v17[3] = 0;
  v17[4] = &unk_3208F0;
  v17[5] = v13;
  v17[6] = v15;
  swift_retain(v15);
  v18 = sub_174AF8((uint64_t)v6, (uint64_t)&unk_320900, (uint64_t)v17);
  swift_release(v18);
  return v15;
}

uint64_t sub_82EC0()
{
  uint64_t v0;
  uint64_t refreshed;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  refreshed = type metadata accessor for RefreshSeriesUberHeaderAction(0);
  v2 = *(_QWORD *)(refreshed - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_release(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, refreshed);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_82F34(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for RefreshSeriesUberHeaderAction(0) - 8) + 80);
  v5 = *(_QWORD *)(v1 + 16);
  v6 = v1 + ((v4 + 24) & ~v4);
  v7 = (_QWORD *)swift_task_alloc(dword_3208EC);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_64780;
  return sub_80A78(a1, v5, v6);
}

uint64_t sub_82FB4()
{
  _QWORD *v0;

  swift_unknownObjectRelease(v0[2]);
  swift_release(v0[5]);
  swift_release(v0[6]);
  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_82FE8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = v1[2];
  v5 = v1[3];
  v6 = (int *)v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = (_QWORD *)swift_task_alloc(dword_326EF4);
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_64780;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, int *, uint64_t, uint64_t))((char *)&dword_326EF0
                                                                                     + dword_326EF0))(a1, v4, v5, v6, v7, v8);
}

_QWORD *sub_8307C(_QWORD *a1)
{
  destroy for SeriesPromotionState(a1);
  return a1;
}

uint64_t sub_830B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Shelf(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_830F4(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for Shelf(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_83130(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for SeriesPromotionState(a2, a1);
  return a2;
}

uint64_t sub_8316C(uint64_t a1, uint64_t a2)
{
  initializeWithTake for ContextSelectionMode(a2, a1);
  return a2;
}

uint64_t ActionOrigin.init(jsActionOptions:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  unint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unsigned int *v13;
  char v14;
  uint64_t v15;
  unint64_t v17;
  char v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  int v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  int v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  char v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  unint64_t v44;
  __int128 v45;
  __int128 v46;

  v4 = type metadata accessor for ActionOrigin.Kind(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_QWORD *)(a1 + 16) || (v8 = sub_582B4(0xD000000000000013, 0x800000000026F8F0), (v9 & 1) == 0))
  {
    v45 = 0u;
    v46 = 0u;
    swift_bridgeObjectRelease(a1);
    goto LABEL_12;
  }
  sub_5E1EC(*(_QWORD *)(a1 + 56) + 32 * v8, (uint64_t)&v45);
  swift_bridgeObjectRelease(a1);
  if (!*((_QWORD *)&v46 + 1))
  {
LABEL_12:
    sub_6EF98((uint64_t)&v45);
    goto LABEL_13;
  }
  v10 = sub_5C154(&qword_320660);
  if ((swift_dynamicCast(&v43, &v45, (char *)&type metadata for Any + 8, v10, 6) & 1) == 0)
  {
LABEL_13:
    v15 = type metadata accessor for ActionOrigin(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(a2, 1, 1, v15);
  }
  v11 = v43;
  if (*(_QWORD *)(v43 + 16))
  {
    v12 = sub_582B4(0xD000000000000011, 0x800000000026F910);
    v13 = (unsigned int *)&enum case for ActionOrigin.Kind.other(_:);
    if ((v14 & 1) != 0)
    {
      sub_5E1EC(*(_QWORD *)(v11 + 56) + 32 * v12, (uint64_t)&v45);
      if (swift_dynamicCast(&v43, &v45, (char *)&type metadata for Any + 8, &type metadata for Bool, 6))
      {
        if ((_BYTE)v43)
          v13 = (unsigned int *)&enum case for ActionOrigin.Kind.header(_:);
      }
    }
  }
  else
  {
    v13 = (unsigned int *)&enum case for ActionOrigin.Kind.other(_:);
  }
  if (*(_QWORD *)(v11 + 16)
    && (v17 = sub_582B4(0x6449746E65726170, 0xE800000000000000), (v18 & 1) != 0)
    && (sub_5E1EC(*(_QWORD *)(v11 + 56) + 32 * v17, (uint64_t)&v45),
        swift_dynamicCast(&v43, &v45, (char *)&type metadata for Any + 8, &type metadata for String, 6)))
  {
    v19 = v43;
    v20 = v44;
  }
  else
  {
    v19 = 0;
    v20 = 0xE000000000000000;
  }
  if (*(_QWORD *)(v11 + 16) && (v21 = sub_582B4(0xD000000000000012, 0x800000000026F930), (v22 & 1) != 0))
  {
    sub_5E1EC(*(_QWORD *)(v11 + 56) + 32 * v21, (uint64_t)&v45);
    v23 = swift_dynamicCast(&v43, &v45, (char *)&type metadata for Any + 8, &type metadata for String, 6);
    v24 = v43;
    if (!v23)
      v24 = 0;
    v40 = v24;
    if (v23)
      v25 = v44;
    else
      v25 = 0;
  }
  else
  {
    v40 = 0;
    v25 = 0;
  }
  v26 = *(_QWORD *)(v11 + 16);
  v41 = v19;
  v42 = v20;
  if (v26 && (v27 = sub_582B4(0x49746E65746E6F63, 0xE900000000000064), (v28 & 1) != 0))
  {
    sub_5E1EC(*(_QWORD *)(v11 + 56) + 32 * v27, (uint64_t)&v45);
    v29 = swift_dynamicCast(&v43, &v45, (char *)&type metadata for Any + 8, &type metadata for String, 6);
    if (v29)
      v30 = v43;
    else
      v30 = 0;
    if (v29)
      v31 = v44;
    else
      v31 = 0;
  }
  else
  {
    v30 = 0;
    v31 = 0;
  }
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, *v13, v4);
  if (*(_QWORD *)(v11 + 16) && (v32 = sub_582B4(0x6449736569726573, 0xE800000000000000), (v33 & 1) != 0))
  {
    sub_5E1EC(*(_QWORD *)(v11 + 56) + 32 * v32, (uint64_t)&v45);
  }
  else
  {
    v45 = 0u;
    v46 = 0u;
  }
  v34 = v40;
  swift_bridgeObjectRelease(v11);
  if (*((_QWORD *)&v46 + 1))
  {
    v35 = swift_dynamicCast(&v43, &v45, (char *)&type metadata for Any + 8, &type metadata for String, 6);
    if (v35)
      v36 = v43;
    else
      v36 = 0;
    if (v35)
      v37 = v44;
    else
      v37 = 0;
  }
  else
  {
    sub_6EF98((uint64_t)&v45);
    v36 = 0;
    v37 = 0;
  }
  ActionOrigin.init(sectionID:sectionName:contentID:kind:seriesID:genreID:collectionID:authorID:flowcaseID:brickID:)(v41, v42, v34, v25, v30, v31, v7, v36, v37, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
  v38 = type metadata accessor for ActionOrigin(0);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56))(a2, 0, 1, v38);
}

unint64_t ActionOrigin.appAnalyticsMetricsFeedOptions.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t inited;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char v23;
  __n128 v24;
  void (*v25)(char *, uint64_t, __n128);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v1 = v0;
  v2 = type metadata accessor for ActionOrigin.Kind(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v30 - v7;
  v9 = sub_5C154(&qword_31F598);
  inited = swift_initStackObject(v9, &v35);
  *(_OWORD *)(inited + 16) = xmmword_258BA0;
  *(_QWORD *)(inited + 32) = 0x6449746E65726170;
  *(_QWORD *)(inited + 40) = 0xE800000000000000;
  v11 = ActionOrigin.sectionID.getter();
  v13 = v12;
  v14 = sub_5C154(&qword_320958);
  *(_QWORD *)(inited + 48) = v11;
  *(_QWORD *)(inited + 56) = v13;
  *(_QWORD *)(inited + 72) = v14;
  *(_QWORD *)(inited + 80) = 0xD000000000000012;
  *(_QWORD *)(inited + 88) = 0x800000000026F930;
  *(_QWORD *)(inited + 96) = ActionOrigin.sectionName.getter();
  *(_QWORD *)(inited + 104) = v15;
  *(_QWORD *)(inited + 120) = v14;
  *(_QWORD *)(inited + 128) = 0x49746E65746E6F63;
  *(_QWORD *)(inited + 136) = 0xE900000000000064;
  v16 = ActionOrigin.contentID.getter();
  *(_QWORD *)(inited + 144) = v16;
  *(_QWORD *)(inited + 152) = v17;
  *(_QWORD *)(inited + 168) = v14;
  *(_QWORD *)(inited + 176) = 0xD000000000000011;
  *(_QWORD *)(inited + 184) = 0x800000000026F910;
  ActionOrigin.kind.getter(v16);
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, enum case for ActionOrigin.Kind.header(_:), v2);
  v18 = sub_83844();
  dispatch thunk of RawRepresentable.rawValue.getter(&v33, v2, v18);
  dispatch thunk of RawRepresentable.rawValue.getter(&v31, v2, v18);
  v19 = v34;
  v20 = v32;
  v30 = v1;
  if (v33 == v31 && v34 == v32)
  {
    v21 = v5;
    v22 = v3;
    v23 = 1;
    v20 = v34;
  }
  else
  {
    v21 = v5;
    v22 = v3;
    v23 = _stringCompareWithSmolCheck(_:_:expecting:)(v33, v34, v31, v32, 0);
  }
  swift_bridgeObjectRelease(v19);
  v24 = swift_bridgeObjectRelease(v20);
  v25 = *(void (**)(char *, uint64_t, __n128))(v22 + 8);
  v25(v21, v2, v24);
  v26 = ((uint64_t (*)(char *, uint64_t))v25)(v8, v2);
  *(_BYTE *)(inited + 192) = v23 & 1;
  *(_QWORD *)(inited + 216) = &type metadata for Bool;
  strcpy((char *)(inited + 224), "parentSeriesID");
  *(_BYTE *)(inited + 239) = -18;
  v27 = ActionOrigin.seriesID.getter(v26);
  *(_QWORD *)(inited + 264) = v14;
  *(_QWORD *)(inited + 240) = v27;
  *(_QWORD *)(inited + 248) = v28;
  return sub_52A54(inited);
}

unint64_t sub_83844()
{
  unint64_t result;
  uint64_t v1;

  result = qword_320960;
  if (!qword_320960)
  {
    v1 = type metadata accessor for ActionOrigin.Kind(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for ActionOrigin.Kind, v1);
    atomic_store(result, (unint64_t *)&qword_320960);
  }
  return result;
}

id sub_8388C()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for TVAppService()), "init");
  qword_320968 = (uint64_t)result;
  return result;
}

id static TVAppService.shared.getter()
{
  if (qword_31E550 != -1)
    swift_once(&qword_31E550, sub_8388C);
  return (id)qword_320968;
}

uint64_t sub_83938()
{
  return 25705;
}

uint64_t sub_83944@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v6;
  uint64_t result;
  char v8;

  if (a1 == 25705 && a2 == 0xE200000000000000)
  {
    result = swift_bridgeObjectRelease(0xE200000000000000);
    v8 = 0;
  }
  else
  {
    v6 = _stringCompareWithSmolCheck(_:_:expecting:)(25705, 0xE200000000000000, a1, a2, 0);
    result = swift_bridgeObjectRelease(a2);
    v8 = v6 ^ 1;
  }
  *a3 = v8 & 1;
  return result;
}

void sub_839C0(_BYTE *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_839CC(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_86B70();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_839F4(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_86B70();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t Shelf.id.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain(v0[1]);
  return v1;
}

uint64_t sub_83A48@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;

  v5 = sub_5C154(&qword_320A08);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  sub_66898(a1, v9);
  v11 = sub_86B70();
  v12 = dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for TVAppService.BooksTVItem.CodingKeys, &type metadata for TVAppService.BooksTVItem.CodingKeys, v11, v9, v10);
  if (v2)
    return _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(a1);
  v13 = KeyedDecodingContainer.decode(_:forKey:)(v12, v5);
  v15 = v14;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  result = _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(a1);
  *a2 = v13;
  a2[1] = v15;
  return result;
}

uint64_t sub_83B6C(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v3 = sub_5C154(&qword_320A18);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *v1;
  v8 = v1[1];
  v9 = a1[3];
  v10 = a1[4];
  sub_66898(a1, v9);
  v11 = sub_86B70();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for TVAppService.BooksTVItem.CodingKeys, &type metadata for TVAppService.BooksTVItem.CodingKeys, v11, v9, v10);
  KeyedEncodingContainer.encode(_:forKey:)(v7, v8, v12, v3);
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_83C58(char *a1, char *a2)
{
  return sub_196FBC(*a1, *a2);
}

Swift::Int sub_83C64()
{
  unsigned __int8 *v0;
  int v1;
  uint64_t v2;
  unint64_t v3;
  _QWORD v5[9];

  v1 = *v0;
  Hasher.init(_seed:)(v5, 0);
  if (v1)
    v2 = 0x776F68537674;
  else
    v2 = 0x6569766F6DLL;
  if (v1)
    v3 = 0xE600000000000000;
  else
    v3 = 0xE500000000000000;
  String.hash(into:)(v5, v2, v3);
  swift_bridgeObjectRelease(v3);
  return Hasher._finalize()();
}

uint64_t sub_83CDC(uint64_t a1)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  if (*v1)
    v2 = 0x776F68537674;
  else
    v2 = 0x6569766F6DLL;
  if (*v1)
    v3 = 0xE600000000000000;
  else
    v3 = 0xE500000000000000;
  String.hash(into:)(a1, v2, v3);
  return swift_bridgeObjectRelease(v3);
}

Swift::Int sub_83D30(uint64_t a1)
{
  unsigned __int8 *v1;
  int v2;
  uint64_t v3;
  unint64_t v4;
  _QWORD v6[9];

  v2 = *v1;
  Hasher.init(_seed:)(v6, a1);
  if (v2)
    v3 = 0x776F68537674;
  else
    v3 = 0x6569766F6DLL;
  if (v2)
    v4 = 0xE600000000000000;
  else
    v4 = 0xE500000000000000;
  String.hash(into:)(v6, v3, v4);
  swift_bridgeObjectRelease(v4);
  return Hasher._finalize()();
}

uint64_t sub_83DA4@<X0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  Swift::String v3;
  void *v4;
  Swift::Int v5;
  uint64_t result;
  char v7;

  v3._countAndFlagsBits = *a1;
  v4 = (void *)a1[1];
  v3._object = v4;
  v5 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_2E5FB0, v3);
  result = swift_bridgeObjectRelease(v4);
  if (v5 == 1)
    v7 = 1;
  else
    v7 = 2;
  if (!v5)
    v7 = 0;
  *a2 = v7;
  return result;
}

void sub_83E00(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 0x6569766F6DLL;
  if (*v1)
    v2 = 0x776F68537674;
  v3 = 0xE500000000000000;
  if (*v1)
    v3 = 0xE600000000000000;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_83E38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = OBJC_IVAR___BKTVAppService____lazy_storage___tvMapping;
  v2 = *(_QWORD *)(v0 + OBJC_IVAR___BKTVAppService____lazy_storage___tvMapping);
  if (v2)
  {
    v3 = *(_QWORD *)(v0 + OBJC_IVAR___BKTVAppService____lazy_storage___tvMapping);
  }
  else
  {
    v3 = sub_83E98();
    v4 = *(_QWORD *)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v3;
    swift_bridgeObjectRetain(v3);
    swift_bridgeObjectRelease(v4);
    v2 = 0;
  }
  swift_bridgeObjectRetain(v2);
  return v3;
}

uint64_t sub_83E98()
{
  void *v0;
  uint64_t v1;
  unint64_t v2;
  char v3;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  int64_t v28;
  uint64_t *v29;
  uint64_t v30;
  void *v31;
  Swift::String v32;
  Swift::Int v33;
  unint64_t v34;
  char v35;
  uint64_t *v36;
  uint64_t isUniquelyReferenced_nonNull_native;
  unint64_t v38;
  char v39;
  uint64_t v40;
  _BOOL8 v41;
  BOOL v42;
  uint64_t v43;
  char v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t result;
  uint64_t v54;
  unint64_t v55;
  char v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  __int128 v61;
  __int128 v62;

  type metadata accessor for RCDataContainer(0);
  v0 = (void *)static RCDataContainer.default.getter();
  v1 = RCDataContainer.configs.getter();

  if (!*(_QWORD *)(v1 + 16) || (v2 = sub_582B4(0xD00000000000001CLL, 0x800000000026FA30), (v3 & 1) == 0))
  {
    v61 = 0u;
    v62 = 0u;
    swift_bridgeObjectRelease(v1);
    goto LABEL_52;
  }
  sub_5E1EC(*(_QWORD *)(v1 + 56) + 32 * v2, (uint64_t)&v61);
  swift_bridgeObjectRelease(v1);
  if (!*((_QWORD *)&v62 + 1))
  {
LABEL_52:
    sub_6EF98((uint64_t)&v61);
    return sub_52B90((uint64_t)&_swiftEmptyArrayStorage);
  }
  v4 = sub_5C154(&qword_3209E8);
  if ((swift_dynamicCast(&v60, &v61, (char *)&type metadata for Any + 8, v4, 6) & 1) == 0)
    return sub_52B90((uint64_t)&_swiftEmptyArrayStorage);
  v5 = 0;
  v6 = v60;
  v7 = v60 + 64;
  v8 = 1 << *(_BYTE *)(v60 + 32);
  v9 = -1;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  v10 = v9 & *(_QWORD *)(v60 + 64);
  v11 = (unint64_t)(v8 + 63) >> 6;
  v57 = &_swiftEmptyDictionarySingleton;
  v59 = v60 + 64;
  while (v10)
  {
    v12 = __clz(__rbit64(v10));
    v10 &= v10 - 1;
    v13 = v12 | (v5 << 6);
LABEL_26:
    v17 = *(_QWORD *)(*(_QWORD *)(v6 + 56) + 8 * v13);
    if (*(_QWORD *)(v17 + 16))
    {
      v18 = (uint64_t *)(*(_QWORD *)(v6 + 48) + 16 * v13);
      v20 = *v18;
      v19 = v18[1];
      swift_bridgeObjectRetain(v19);
      swift_bridgeObjectRetain(v17);
      v21 = sub_582B4(1682536052, 0xE400000000000000);
      if ((v22 & 1) == 0 || !*(_QWORD *)(v17 + 16))
      {
        swift_bridgeObjectRelease(v17);
        goto LABEL_9;
      }
      v23 = (uint64_t *)(*(_QWORD *)(v17 + 56) + 16 * v21);
      v25 = *v23;
      v24 = v23[1];
      swift_bridgeObjectRetain(v24);
      v26 = sub_582B4(0x54746E65746E6F63, 0xEB00000000657079);
      if ((v27 & 1) != 0)
      {
        v58 = v25;
        v28 = v11;
        v29 = (uint64_t *)(*(_QWORD *)(v17 + 56) + 16 * v26);
        v30 = *v29;
        v31 = (void *)v29[1];
        swift_bridgeObjectRetain(v31);
        v32._countAndFlagsBits = v30;
        v32._object = v31;
        v33 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_2E6D08, v32);
        swift_bridgeObjectRelease(v31);
        if (v33)
        {
          if (v33 != 1)
          {
            swift_bridgeObjectRelease(v24);
            swift_bridgeObjectRelease(v17);
            v11 = v28;
            v7 = v59;
            goto LABEL_9;
          }
          v56 = 1;
        }
        else
        {
          v56 = 0;
        }
        if (*(_QWORD *)(v17 + 16) && (v34 = sub_582B4(1701667182, 0xE400000000000000), (v35 & 1) != 0))
        {
          v36 = (uint64_t *)(*(_QWORD *)(v17 + 56) + 16 * v34);
          v54 = *v36;
          v55 = v36[1];
          swift_bridgeObjectRetain(v55);
        }
        else
        {
          v54 = 0x6E776F6E6B6E55;
          v55 = 0xE700000000000000;
        }
        swift_bridgeObjectRelease(v17);
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v57);
        *(_QWORD *)&v61 = v57;
        v38 = sub_582B4(v20, v19);
        v40 = v57[2];
        v41 = (v39 & 1) == 0;
        v42 = __OFADD__(v40, v41);
        v43 = v40 + v41;
        if (v42)
          goto LABEL_57;
        v44 = v39;
        if (v57[3] >= v43)
        {
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            v52 = v38;
            sub_5A938();
            v38 = v52;
          }
        }
        else
        {
          sub_13AB10(v43, isUniquelyReferenced_nonNull_native);
          v38 = sub_582B4(v20, v19);
          if ((v44 & 1) != (v45 & 1))
            goto LABEL_59;
        }
        v11 = v28;
        v7 = v59;
        v57 = (_QWORD *)v61;
        if ((v44 & 1) != 0)
        {
          v46 = *(_QWORD *)(v61 + 56) + 40 * v38;
          v47 = *(_QWORD *)(v46 + 8);
          swift_bridgeObjectRelease(*(_QWORD *)(v46 + 32));
          swift_bridgeObjectRelease(v47);
          *(_QWORD *)v46 = v58;
          *(_QWORD *)(v46 + 8) = v24;
          *(_BYTE *)(v46 + 16) = v56;
          *(_QWORD *)(v46 + 24) = v54;
          *(_QWORD *)(v46 + 32) = v55;
        }
        else
        {
          *(_QWORD *)(v61 + 8 * (v38 >> 6) + 64) |= 1 << v38;
          v48 = (uint64_t *)(v57[6] + 16 * v38);
          *v48 = v20;
          v48[1] = v19;
          v49 = v57[7] + 40 * v38;
          *(_QWORD *)v49 = v58;
          *(_QWORD *)(v49 + 8) = v24;
          *(_BYTE *)(v49 + 16) = v56;
          *(_QWORD *)(v49 + 24) = v54;
          *(_QWORD *)(v49 + 32) = v55;
          v50 = v57[2];
          v42 = __OFADD__(v50, 1);
          v51 = v50 + 1;
          if (v42)
            goto LABEL_58;
          v57[2] = v51;
          swift_bridgeObjectRetain(v19);
        }
        swift_bridgeObjectRelease(v19);
        swift_bridgeObjectRelease(0x8000000000000000);
      }
      else
      {
        swift_bridgeObjectRelease(v17);
        swift_bridgeObjectRelease(v19);
        v19 = v24;
LABEL_9:
        swift_bridgeObjectRelease(v19);
      }
    }
  }
  v14 = v5 + 1;
  if (__OFADD__(v5, 1))
  {
    __break(1u);
    goto LABEL_56;
  }
  if (v14 >= v11)
    goto LABEL_54;
  v15 = *(_QWORD *)(v7 + 8 * v14);
  ++v5;
  if (v15)
    goto LABEL_25;
  v5 = v14 + 1;
  if (v14 + 1 >= v11)
    goto LABEL_54;
  v15 = *(_QWORD *)(v7 + 8 * v5);
  if (v15)
    goto LABEL_25;
  v5 = v14 + 2;
  if (v14 + 2 >= v11)
    goto LABEL_54;
  v15 = *(_QWORD *)(v7 + 8 * v5);
  if (v15)
  {
LABEL_25:
    v10 = (v15 - 1) & v15;
    v13 = __clz(__rbit64(v15)) + (v5 << 6);
    goto LABEL_26;
  }
  v16 = v14 + 3;
  if (v16 >= v11)
  {
LABEL_54:
    swift_release(v6);
    return (uint64_t)v57;
  }
  v15 = *(_QWORD *)(v7 + 8 * v16);
  if (v15)
  {
    v5 = v16;
    goto LABEL_25;
  }
  while (1)
  {
    v5 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v5 >= v11)
      goto LABEL_54;
    v15 = *(_QWORD *)(v7 + 8 * v5);
    ++v16;
    if (v15)
      goto LABEL_25;
  }
LABEL_56:
  __break(1u);
LABEL_57:
  __break(1u);
LABEL_58:
  __break(1u);
LABEL_59:
  result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
  __break(1u);
  return result;
}

void sub_84394(void *a1)
{
  void *v1;
  id v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  id v7;
  id v8;
  id v9;
  _QWORD v10[5];
  uint64_t v11;

  v3 = objc_msgSend(a1, "context");
  v4 = swift_allocObject(&unk_2E8980, 32, 7);
  *(_QWORD *)(v4 + 16) = v1;
  *(_QWORD *)(v4 + 24) = a1;
  v10[4] = sub_86730;
  v11 = v4;
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 1107296256;
  v10[2] = sub_156574;
  v10[3] = &unk_2E8998;
  v5 = _Block_copy(v10);
  v6 = v11;
  v7 = v1;
  v8 = a1;
  swift_release(v6);
  v9 = objc_msgSend((id)objc_opt_self(JSValue), "valueWithNewPromiseInContext:fromExecutor:", v3, v5);

  _Block_release(v5);
  if (!v9)
    __break(1u);
}

void sub_84494(void *a1, uint64_t a2, void *a3, void *a4)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  _QWORD *v11;
  id v12;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t v16;

  v7 = sub_5C154(&qword_329740);
  __chkstk_darwin(v7);
  v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    v10 = type metadata accessor for TaskPriority(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v9, 1, 1, v10);
    v11 = (_QWORD *)swift_allocObject(&unk_2E89D0, 56, 7);
    v11[2] = 0;
    v11[3] = 0;
    v11[4] = a3;
    v11[5] = a4;
    v11[6] = a1;
    v12 = a1;
    v13 = a3;
    v14 = a4;
    v15 = sub_1D979C((uint64_t)v9, (uint64_t)&unk_3209A8, (uint64_t)v11);
    swift_release(v15);
  }
}

uint64_t sub_84574(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;

  v6[21] = a5;
  v6[22] = a6;
  v6[20] = a4;
  v7 = sub_5C154(&qword_3209B0);
  v6[23] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v6[24] = v8;
  v6[25] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for TVShowItem(0);
  v6[26] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v6[27] = v10;
  v11 = (*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v6[28] = swift_task_alloc(v11);
  v6[29] = swift_task_alloc(v11);
  v12 = type metadata accessor for String.Encoding(0);
  v6[30] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v12 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Rating(0);
  v6[31] = v13;
  v14 = *(_QWORD *)(v13 - 8);
  v6[32] = v14;
  v15 = (*(_QWORD *)(v14 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v6[33] = swift_task_alloc(v15);
  v6[34] = swift_task_alloc(v15);
  v16 = sub_5C154(&qword_3209B8);
  v6[35] = v16;
  v17 = *(_QWORD *)(v16 - 8);
  v6[36] = v17;
  v6[37] = swift_task_alloc((*(_QWORD *)(v17 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for MovieItem(0);
  v6[38] = v18;
  v19 = *(_QWORD *)(v18 - 8);
  v6[39] = v19;
  v20 = (*(_QWORD *)(v19 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v6[40] = swift_task_alloc(v20);
  v6[41] = swift_task_alloc(v20);
  return swift_task_switch(sub_846D0, 0, 0);
}

id sub_846D0()
{
  uint64_t v0;
  id result;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  char v14;
  _QWORD *v15;
  JSValue v16;
  id v17;
  Swift::String v18;
  Swift::Int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  ValueMetadata *v31;
  unint64_t v32;
  Swift::OpaquePointer_optional v33;

  result = objc_msgSend(*(id *)(v0 + 168), "toString");
  if (result)
  {
    v2 = result;
    v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(result);
    v5 = v4;

    v6 = sub_83E38();
    if (*(_QWORD *)(v6 + 16) && (v7 = sub_582B4(v3, v5), (v8 & 1) != 0))
    {
      v9 = *(_QWORD *)(v6 + 56) + 40 * v7;
      v10 = *(_QWORD *)v9;
      *(_QWORD *)(v0 + 336) = *(_QWORD *)v9;
      v11 = *(_QWORD *)(v9 + 8);
      *(_QWORD *)(v0 + 344) = v11;
      v12 = *(_BYTE *)(v9 + 16);
      *(_BYTE *)(v0 + 392) = v12;
      v13 = *(_QWORD *)(v9 + 32);
      *(_QWORD *)(v0 + 352) = v13;
      swift_bridgeObjectRetain(v11);
      swift_bridgeObjectRetain(v13);
      swift_bridgeObjectRelease(v5);
      swift_bridgeObjectRelease(v6);
      if ((v12 & 1) != 0)
      {
        v14 = _stringCompareWithSmolCheck(_:_:expecting:)(0x776F68537674, 0xE600000000000000, 0x6569766F6DLL, 0xE500000000000000, 0);
        swift_bridgeObjectRelease(0xE600000000000000);
        if ((v14 & 1) == 0)
        {
          v31 = &type metadata for TVAppService.BooksTVItem;
          v32 = sub_8680C();
          v29 = v10;
          v30 = v11;
          swift_bridgeObjectRetain(v11);
          VideoResourceRequest.init<>(item:)(&v29);
          v15 = (_QWORD *)swift_task_alloc(async function pointer to VideoResourceRequest.response()[1]);
          *(_QWORD *)(v0 + 376) = v15;
          *v15 = v0;
          v15[1] = sub_85190;
          return (id)VideoResourceRequest.response()(*(_QWORD *)(v0 + 224), *(_QWORD *)(v0 + 184));
        }
      }
      else
      {
        swift_bridgeObjectRelease(0xE500000000000000);
      }
      v31 = &type metadata for TVAppService.BooksTVItem;
      v32 = sub_8680C();
      v29 = v10;
      v30 = v11;
      swift_bridgeObjectRetain(v11);
      VideoResourceRequest.init<>(item:)(&v29);
      v28 = (_QWORD *)swift_task_alloc(async function pointer to VideoResourceRequest.response()[1]);
      *(_QWORD *)(v0 + 360) = v28;
      *v28 = v0;
      v28[1] = sub_849B4;
      return (id)VideoResourceRequest.response()(*(_QWORD *)(v0 + 320), *(_QWORD *)(v0 + 280));
    }
    else
    {
      v16.super.isa = *(Class *)(v0 + 176);
      swift_bridgeObjectRelease(v5);
      swift_bridgeObjectRelease(v6);
      v17 = objc_msgSend((id)objc_opt_self(JSABridge), "sharedInstance");
      v18._countAndFlagsBits = 0x800000000026F9C0;
      v33.value._rawValue = &_swiftEmptyArrayStorage;
      v33.is_nil = 106;
      v18._object = &stru_20 + 70;
      JSABridge.enqueueValueCall(_:arguments:f:l:)(v16, v33, v18, v19);

      v20 = *(_QWORD *)(v0 + 320);
      v21 = *(_QWORD *)(v0 + 296);
      v23 = *(_QWORD *)(v0 + 264);
      v22 = *(_QWORD *)(v0 + 272);
      v25 = *(_QWORD *)(v0 + 232);
      v24 = *(_QWORD *)(v0 + 240);
      v26 = *(_QWORD *)(v0 + 224);
      v27 = *(_QWORD *)(v0 + 200);
      swift_task_dealloc(*(_QWORD *)(v0 + 328));
      swift_task_dealloc(v20);
      swift_task_dealloc(v21);
      swift_task_dealloc(v22);
      swift_task_dealloc(v23);
      swift_task_dealloc(v24);
      swift_task_dealloc(v25);
      swift_task_dealloc(v26);
      swift_task_dealloc(v27);
      return (id)(*(uint64_t (**)(void))(v0 + 8))();
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_849B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 360);
  *(_QWORD *)(*(_QWORD *)v1 + 368) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_85964;
  else
    v3 = sub_84A18;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_84A18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  id v24;
  id v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  _BOOL4 v29;
  unint64_t v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  id v34;
  id v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void (*v50)(uint64_t, uint64_t);
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  JSValue v60;
  id v61;
  Swift::String v62;
  Swift::Int v63;
  int v64;
  uint64_t v65;
  uint64_t v66;
  JSValue v67;
  id v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t inited;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  unint64_t v76;
  Swift::String v77;
  Swift::Int v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v88;
  uint64_t *v89;
  NSObject *log;
  os_log_type_t type;
  os_log_type_t typea[8];
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char v96;
  Swift::OpaquePointer_optional v97;
  Swift::OpaquePointer_optional v98;

  v1 = *(_QWORD *)(v0 + 272);
  v2 = *(_QWORD *)(v0 + 248);
  v3 = *(_QWORD *)(v0 + 256);
  v4 = (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 312) + 32))(*(_QWORD *)(v0 + 328), *(_QWORD *)(v0 + 320), *(_QWORD *)(v0 + 304));
  v5 = MovieItem.rating.getter(v4);
  Rating.value.getter(v5);
  v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  v7 = (id)WLKRestrictionsMaximumEffectiveMovieRanking(v6);
  if (v7)
  {
    v95 = 0;
    v96 = 1;
    v8 = v7;
    static Int._conditionallyBridgeFromObjectiveC(_:result:)();

  }
  v9 = v0 + 16;
  v10 = *(_QWORD *)(v0 + 368);
  v11 = *(_QWORD *)(v0 + 328);
  v12 = *(_QWORD *)(v0 + 304);
  v13 = type metadata accessor for JSONEncoder(0);
  swift_allocObject(v13, *(unsigned int *)(v13 + 48), *(unsigned __int16 *)(v13 + 52));
  v14 = JSONEncoder.init()();
  v15 = sub_648E0(&qword_3209E0, (uint64_t (*)(uint64_t))&type metadata accessor for MovieItem, (uint64_t)&protocol conformance descriptor for MovieItem);
  v16 = dispatch thunk of JSONEncoder.encode<A>(_:)(v11, v12, v15);
  v18 = v17;
  v19 = swift_release(v14);
  if (!v10)
  {
    v42 = *(_QWORD *)(v0 + 304);
    *(_QWORD *)typea = *(_QWORD *)(v0 + 312);
    v94 = *(_QWORD *)(v0 + 328);
    v43 = *(_QWORD *)(v0 + 288);
    v44 = *(_QWORD *)(v0 + 296);
    v45 = *(_QWORD *)(v0 + 280);
    v46 = *(_QWORD *)(v0 + 240);
    static String.Encoding.utf8.getter(v19);
    v47 = String.init(data:encoding:)(v16, v18, v46);
    v49 = v48;
    sub_86850(v16, v18);
    v50 = *(void (**)(uint64_t, uint64_t))(v43 + 8);
    v51 = v49;
    v52 = v45;
    v9 = v0 + 16;
    v50(v44, v52);
    v54 = *(_QWORD *)typea;
    v53 = v94;
LABEL_12:
    (*(void (**)(uint64_t, uint64_t))(v54 + 8))(v53, v42);
    goto LABEL_13;
  }
  if (qword_31E690 != -1)
    swift_once(&qword_31E690, sub_126EE4);
  v20 = *(_QWORD *)(v0 + 344);
  v21 = *(_QWORD *)(v0 + 352);
  v22 = *(void **)(v0 + 168);
  v23 = type metadata accessor for Logger(0);
  sub_5240C(v23, (uint64_t)qword_325340);
  swift_bridgeObjectRetain(v20);
  swift_bridgeObjectRetain(v21);
  v24 = v22;
  swift_errorRetain(v10);
  swift_bridgeObjectRetain(v20);
  swift_bridgeObjectRetain(v21);
  v25 = v24;
  v26 = swift_errorRetain(v10);
  v27 = Logger.logObject.getter(v26);
  v28 = static os_log_type_t.error.getter();
  v29 = os_log_type_enabled(v27, v28);
  v30 = *(_QWORD *)(v0 + 344);
  v31 = *(_QWORD *)(v0 + 352);
  if (v29)
  {
    v88 = *(_QWORD *)(v0 + 336);
    type = v28;
    v32 = *(void **)(v0 + 168);
    log = v27;
    v33 = swift_slowAlloc(32, -1);
    v89 = (uint64_t *)swift_slowAlloc(8, -1);
    v93 = swift_slowAlloc(64, -1);
    v95 = v93;
    *(_DWORD *)v33 = 136315650;
    v34 = v32;
    v35 = objc_msgSend(v34, "description");
    v36 = static String._unconditionallyBridgeFromObjectiveC(_:)(v35);
    v38 = v37;

    v39 = v36;
    v9 = v0 + 16;
    *(_QWORD *)(v0 + 136) = sub_57CD8(v39, v38, &v95);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 136, v0 + 144, v33 + 4, v33 + 12);
    swift_bridgeObjectRelease(v38);

    *(_WORD *)(v33 + 12) = 2080;
    swift_bridgeObjectRetain(v30);
    *(_QWORD *)(v0 + 144) = sub_57CD8(v88, v30, &v95);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 144, v0 + 152, v33 + 14, v33 + 22);
    swift_bridgeObjectRelease_n(v30, 3);
    swift_bridgeObjectRelease_n(v31, 2);
    *(_WORD *)(v33 + 22) = 2112;
    swift_errorRetain(v10);
    v40 = _swift_stdlib_bridgeErrorToNSError(v10);
    *(_QWORD *)(v0 + 152) = v40;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 152, v0 + 160, v33 + 24, v33 + 32);
    *v89 = v40;
    swift_errorRelease(v10);
    swift_errorRelease(v10);
    _os_log_impl(&dword_0, log, type, "Failed to retrieve TV <Movie> information for adamID %s -> %s with error: %@", (uint8_t *)v33, 0x20u);
    v41 = sub_5C154(&qword_32A000);
    swift_arrayDestroy(v89, 1, v41);
    swift_slowDealloc(v89, -1, -1);
    swift_arrayDestroy(v93, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v93, -1, -1);
    swift_slowDealloc(v33, -1, -1);

  }
  else
  {
    v55 = *(void **)(v0 + 168);

    swift_bridgeObjectRelease_n(v30, 2);
    swift_bridgeObjectRelease_n(v31, 2);
    swift_errorRelease(v10);
    swift_errorRelease(v10);

  }
  v56 = *(_QWORD *)(v0 + 368);
  v58 = *(_QWORD *)(v0 + 288);
  v57 = *(_QWORD *)(v0 + 296);
  v59 = *(_QWORD *)(v0 + 280);
  v60.super.isa = *(Class *)(v0 + 176);
  v61 = objc_msgSend((id)objc_opt_self(JSABridge), "sharedInstance");
  v62._countAndFlagsBits = 0x800000000026F9C0;
  v97.value._rawValue = &_swiftEmptyArrayStorage;
  v97.is_nil = 106;
  v62._object = &stru_20 + 46;
  JSABridge.enqueueValueCall(_:arguments:f:l:)(v60, v97, v62, v63);

  swift_errorRelease(v10);
  (*(void (**)(uint64_t, uint64_t))(v58 + 8))(v57, v59);
  v47 = 0;
  v51 = 0;
  if (!v56)
  {
    v53 = *(_QWORD *)(v0 + 328);
    v42 = *(_QWORD *)(v0 + 304);
    v54 = *(_QWORD *)(v0 + 312);
    goto LABEL_12;
  }
LABEL_13:
  v64 = *(unsigned __int8 *)(v0 + 392);
  v66 = *(_QWORD *)(v0 + 344);
  v65 = *(_QWORD *)(v0 + 352);
  v67.super.isa = *(Class *)(v0 + 176);
  v68 = objc_msgSend((id)objc_opt_self(JSABridge), "sharedInstance");
  v69 = sub_5C154(&qword_31EFF0);
  v70 = swift_allocObject(v69, 64, 7);
  *(_OWORD *)(v70 + 16) = xmmword_258070;
  v71 = sub_5C154(&qword_3209C8);
  inited = swift_initStackObject(v71, v9);
  v73 = inited;
  *(_OWORD *)(inited + 16) = xmmword_255F00;
  v74 = 0x6569766F6DLL;
  *(_QWORD *)(inited + 32) = 1701869940;
  *(_QWORD *)(inited + 40) = 0xE400000000000000;
  if (v64)
    v74 = 0x776F68537674;
  v75 = 0xE500000000000000;
  if (v64)
    v75 = 0xE600000000000000;
  *(_QWORD *)(inited + 48) = v74;
  *(_QWORD *)(inited + 56) = v75;
  *(_QWORD *)(inited + 64) = 1635017060;
  *(_QWORD *)(inited + 72) = 0xE400000000000000;
  *(_QWORD *)(inited + 80) = v47;
  *(_QWORD *)(inited + 88) = v51;
  swift_bridgeObjectRelease(v66);
  swift_bridgeObjectRelease(v65);
  v76 = sub_52CE0(v73);
  *(_QWORD *)(v70 + 56) = sub_5C154(&qword_3209D0);
  *(_QWORD *)(v70 + 32) = v76;
  v77._countAndFlagsBits = 0x800000000026F9C0;
  v98.value._rawValue = (void *)v70;
  v98.is_nil = 106;
  v77._object = &stru_20 + 64;
  JSABridge.enqueueValueCall(_:arguments:f:l:)(v67, v98, v77, v78);
  swift_bridgeObjectRelease(v70);

  v79 = *(_QWORD *)(v0 + 320);
  v80 = *(_QWORD *)(v0 + 296);
  v82 = *(_QWORD *)(v0 + 264);
  v81 = *(_QWORD *)(v0 + 272);
  v84 = *(_QWORD *)(v0 + 232);
  v83 = *(_QWORD *)(v0 + 240);
  v85 = *(_QWORD *)(v0 + 224);
  v86 = *(_QWORD *)(v0 + 200);
  swift_task_dealloc(*(_QWORD *)(v0 + 328));
  swift_task_dealloc(v79);
  swift_task_dealloc(v80);
  swift_task_dealloc(v81);
  swift_task_dealloc(v82);
  swift_task_dealloc(v83);
  swift_task_dealloc(v84);
  swift_task_dealloc(v85);
  swift_task_dealloc(v86);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_85190()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 376);
  *(_QWORD *)(*(_QWORD *)v1 + 384) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_85EC4;
  else
    v3 = sub_851F4;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_851F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  id v24;
  id v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  _BOOL4 v29;
  unint64_t v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  id v34;
  id v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void (*v50)(_QWORD, uint64_t);
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  JSValue v58;
  uint64_t v59;
  id v60;
  Swift::String v61;
  Swift::Int v62;
  int v63;
  uint64_t v64;
  uint64_t v65;
  JSValue v66;
  id v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t inited;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  unint64_t v75;
  Swift::String v76;
  Swift::Int v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v87;
  uint64_t *v88;
  NSObject *log;
  os_log_type_t type;
  os_log_type_t typea[8];
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char v95;
  Swift::OpaquePointer_optional v96;
  Swift::OpaquePointer_optional v97;

  v2 = *(_QWORD *)(v0 + 256);
  v1 = *(_QWORD *)(v0 + 264);
  v3 = *(_QWORD *)(v0 + 248);
  v4 = (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 216) + 32))(*(_QWORD *)(v0 + 232), *(_QWORD *)(v0 + 224), *(_QWORD *)(v0 + 208));
  v5 = TVShowItem.rating.getter(v4);
  Rating.value.getter(v5);
  v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v7 = (id)WLKRestrictionsMaximumEffectiveTVShowRanking(v6);
  if (v7)
  {
    v94 = 0;
    v95 = 1;
    v8 = v7;
    static Int._conditionallyBridgeFromObjectiveC(_:result:)();

  }
  v9 = v0 + 16;
  v10 = *(_QWORD *)(v0 + 384);
  v11 = *(_QWORD *)(v0 + 232);
  v12 = *(_QWORD *)(v0 + 208);
  v13 = type metadata accessor for JSONEncoder(0);
  swift_allocObject(v13, *(unsigned int *)(v13 + 48), *(unsigned __int16 *)(v13 + 52));
  v14 = JSONEncoder.init()();
  v15 = sub_648E0(&qword_3209D8, (uint64_t (*)(uint64_t))&type metadata accessor for TVShowItem, (uint64_t)&protocol conformance descriptor for TVShowItem);
  v16 = dispatch thunk of JSONEncoder.encode<A>(_:)(v11, v12, v15);
  v18 = v17;
  v19 = swift_release(v14);
  if (!v10)
  {
    v42 = *(_QWORD *)(v0 + 208);
    v43 = *(_QWORD *)(v0 + 192);
    *(_QWORD *)typea = *(_QWORD *)(v0 + 200);
    v93 = *(_QWORD *)(v0 + 216);
    v44 = *(_QWORD *)(v0 + 184);
    v46 = *(_QWORD *)(v0 + 232);
    v45 = *(_QWORD *)(v0 + 240);
    static String.Encoding.utf8.getter(v19);
    v47 = String.init(data:encoding:)(v16, v18, v45);
    v49 = v48;
    sub_86850(v16, v18);
    v50 = *(void (**)(_QWORD, uint64_t))(v43 + 8);
    v51 = v49;
    v52 = v44;
    v9 = v0 + 16;
    v50(*(_QWORD *)typea, v52);
    v53 = v93;
LABEL_12:
    (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v46, v42);
    goto LABEL_13;
  }
  if (qword_31E690 != -1)
    swift_once(&qword_31E690, sub_126EE4);
  v20 = *(_QWORD *)(v0 + 344);
  v21 = *(_QWORD *)(v0 + 352);
  v22 = *(void **)(v0 + 168);
  v23 = type metadata accessor for Logger(0);
  sub_5240C(v23, (uint64_t)qword_325340);
  swift_bridgeObjectRetain(v20);
  swift_bridgeObjectRetain(v21);
  v24 = v22;
  swift_errorRetain(v10);
  swift_bridgeObjectRetain(v20);
  swift_bridgeObjectRetain(v21);
  v25 = v24;
  v26 = swift_errorRetain(v10);
  v27 = Logger.logObject.getter(v26);
  v28 = static os_log_type_t.error.getter();
  v29 = os_log_type_enabled(v27, v28);
  v30 = *(_QWORD *)(v0 + 344);
  v31 = *(_QWORD *)(v0 + 352);
  if (v29)
  {
    v87 = *(_QWORD *)(v0 + 336);
    type = v28;
    v32 = *(void **)(v0 + 168);
    log = v27;
    v33 = swift_slowAlloc(32, -1);
    v88 = (uint64_t *)swift_slowAlloc(8, -1);
    v92 = swift_slowAlloc(64, -1);
    v94 = v92;
    *(_DWORD *)v33 = 136315650;
    v34 = v32;
    v35 = objc_msgSend(v34, "description");
    v36 = static String._unconditionallyBridgeFromObjectiveC(_:)(v35);
    v38 = v37;

    v39 = v36;
    v9 = v0 + 16;
    *(_QWORD *)(v0 + 112) = sub_57CD8(v39, v38, &v94);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 112, v0 + 120, v33 + 4, v33 + 12);
    swift_bridgeObjectRelease(v38);

    *(_WORD *)(v33 + 12) = 2080;
    swift_bridgeObjectRetain(v30);
    *(_QWORD *)(v0 + 120) = sub_57CD8(v87, v30, &v94);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 120, v0 + 128, v33 + 14, v33 + 22);
    swift_bridgeObjectRelease_n(v30, 3);
    swift_bridgeObjectRelease_n(v31, 2);
    *(_WORD *)(v33 + 22) = 2112;
    swift_errorRetain(v10);
    v40 = _swift_stdlib_bridgeErrorToNSError(v10);
    *(_QWORD *)(v0 + 128) = v40;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 128, v0 + 136, v33 + 24, v33 + 32);
    *v88 = v40;
    swift_errorRelease(v10);
    swift_errorRelease(v10);
    _os_log_impl(&dword_0, log, type, "Failed to retrieve TV <TV Show> information for adamID %s -> %s with error: %@", (uint8_t *)v33, 0x20u);
    v41 = sub_5C154(&qword_32A000);
    swift_arrayDestroy(v88, 1, v41);
    swift_slowDealloc(v88, -1, -1);
    swift_arrayDestroy(v92, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v92, -1, -1);
    swift_slowDealloc(v33, -1, -1);

  }
  else
  {
    v54 = *(void **)(v0 + 168);

    swift_bridgeObjectRelease_n(v30, 2);
    swift_bridgeObjectRelease_n(v31, 2);
    swift_errorRelease(v10);
    swift_errorRelease(v10);

  }
  v55 = *(_QWORD *)(v0 + 384);
  v57 = *(_QWORD *)(v0 + 192);
  v56 = *(_QWORD *)(v0 + 200);
  v58.super.isa = *(Class *)(v0 + 176);
  v59 = *(_QWORD *)(v0 + 184);
  v60 = objc_msgSend((id)objc_opt_self(JSABridge), "sharedInstance");
  v61._countAndFlagsBits = 0x800000000026F9C0;
  v96.value._rawValue = &_swiftEmptyArrayStorage;
  v96.is_nil = 106;
  v61._object = &stru_20 + 61;
  JSABridge.enqueueValueCall(_:arguments:f:l:)(v58, v96, v61, v62);

  swift_errorRelease(v10);
  (*(void (**)(uint64_t, uint64_t))(v57 + 8))(v56, v59);
  v47 = 0;
  v51 = 0;
  if (!v55)
  {
    v46 = *(_QWORD *)(v0 + 232);
    v42 = *(_QWORD *)(v0 + 208);
    v53 = *(_QWORD *)(v0 + 216);
    goto LABEL_12;
  }
LABEL_13:
  v63 = *(unsigned __int8 *)(v0 + 392);
  v65 = *(_QWORD *)(v0 + 344);
  v64 = *(_QWORD *)(v0 + 352);
  v66.super.isa = *(Class *)(v0 + 176);
  v67 = objc_msgSend((id)objc_opt_self(JSABridge), "sharedInstance");
  v68 = sub_5C154(&qword_31EFF0);
  v69 = swift_allocObject(v68, 64, 7);
  *(_OWORD *)(v69 + 16) = xmmword_258070;
  v70 = sub_5C154(&qword_3209C8);
  inited = swift_initStackObject(v70, v9);
  v72 = inited;
  *(_OWORD *)(inited + 16) = xmmword_255F00;
  v73 = 0x6569766F6DLL;
  *(_QWORD *)(inited + 32) = 1701869940;
  *(_QWORD *)(inited + 40) = 0xE400000000000000;
  if (v63)
    v73 = 0x776F68537674;
  v74 = 0xE500000000000000;
  if (v63)
    v74 = 0xE600000000000000;
  *(_QWORD *)(inited + 48) = v73;
  *(_QWORD *)(inited + 56) = v74;
  *(_QWORD *)(inited + 64) = 1635017060;
  *(_QWORD *)(inited + 72) = 0xE400000000000000;
  *(_QWORD *)(inited + 80) = v47;
  *(_QWORD *)(inited + 88) = v51;
  swift_bridgeObjectRelease(v65);
  swift_bridgeObjectRelease(v64);
  v75 = sub_52CE0(v72);
  *(_QWORD *)(v69 + 56) = sub_5C154(&qword_3209D0);
  *(_QWORD *)(v69 + 32) = v75;
  v76._countAndFlagsBits = 0x800000000026F9C0;
  v97.value._rawValue = (void *)v69;
  v97.is_nil = 106;
  v76._object = &stru_20 + 64;
  JSABridge.enqueueValueCall(_:arguments:f:l:)(v66, v97, v76, v77);
  swift_bridgeObjectRelease(v69);

  v78 = *(_QWORD *)(v0 + 320);
  v79 = *(_QWORD *)(v0 + 296);
  v81 = *(_QWORD *)(v0 + 264);
  v80 = *(_QWORD *)(v0 + 272);
  v83 = *(_QWORD *)(v0 + 232);
  v82 = *(_QWORD *)(v0 + 240);
  v84 = *(_QWORD *)(v0 + 224);
  v85 = *(_QWORD *)(v0 + 200);
  swift_task_dealloc(*(_QWORD *)(v0 + 328));
  swift_task_dealloc(v78);
  swift_task_dealloc(v79);
  swift_task_dealloc(v80);
  swift_task_dealloc(v81);
  swift_task_dealloc(v82);
  swift_task_dealloc(v83);
  swift_task_dealloc(v84);
  swift_task_dealloc(v85);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_85964()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  id v6;
  id v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  _BOOL4 v11;
  uint64_t v12;
  unint64_t v13;
  void *v14;
  uint64_t v15;
  id v16;
  id v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  JSValue v28;
  id v29;
  Swift::String v30;
  Swift::Int v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  JSValue v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t inited;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  Swift::String v45;
  Swift::Int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v56;
  uint64_t v57;
  uint64_t *v58;
  NSObject *log;
  uint64_t v60;
  uint64_t v61;
  Swift::OpaquePointer_optional v62;
  Swift::OpaquePointer_optional v63;

  v1 = *(_QWORD *)(v0 + 368);
  if (qword_31E690 != -1)
    swift_once(&qword_31E690, sub_126EE4);
  v3 = *(_QWORD *)(v0 + 344);
  v2 = *(_QWORD *)(v0 + 352);
  v4 = *(void **)(v0 + 168);
  v5 = type metadata accessor for Logger(0);
  sub_5240C(v5, (uint64_t)qword_325340);
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v2);
  v6 = v4;
  swift_errorRetain(v1);
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v2);
  v7 = v6;
  v8 = swift_errorRetain(v1);
  v9 = Logger.logObject.getter(v8);
  v10 = static os_log_type_t.error.getter();
  v11 = os_log_type_enabled(v9, v10);
  v13 = *(_QWORD *)(v0 + 344);
  v12 = *(_QWORD *)(v0 + 352);
  if (v11)
  {
    v57 = *(_QWORD *)(v0 + 336);
    v14 = *(void **)(v0 + 168);
    log = v9;
    v15 = swift_slowAlloc(32, -1);
    v58 = (uint64_t *)swift_slowAlloc(8, -1);
    v60 = swift_slowAlloc(64, -1);
    v61 = v60;
    *(_DWORD *)v15 = 136315650;
    v56 = v12;
    v16 = v14;
    v17 = objc_msgSend(v16, "description");
    v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(v17);
    v20 = v19;

    *(_QWORD *)(v0 + 136) = sub_57CD8(v18, v20, &v61);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 136, v0 + 144, v15 + 4, v15 + 12);
    swift_bridgeObjectRelease(v20);

    *(_WORD *)(v15 + 12) = 2080;
    swift_bridgeObjectRetain(v13);
    *(_QWORD *)(v0 + 144) = sub_57CD8(v57, v13, &v61);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 144, v0 + 152, v15 + 14, v15 + 22);
    swift_bridgeObjectRelease_n(v13, 3);
    swift_bridgeObjectRelease_n(v56, 2);
    *(_WORD *)(v15 + 22) = 2112;
    swift_errorRetain(v1);
    v21 = _swift_stdlib_bridgeErrorToNSError(v1);
    *(_QWORD *)(v0 + 152) = v21;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 152, v0 + 160, v15 + 24, v15 + 32);
    *v58 = v21;
    swift_errorRelease(v1);
    swift_errorRelease(v1);
    _os_log_impl(&dword_0, log, v10, "Failed to retrieve TV <Movie> information for adamID %s -> %s with error: %@", (uint8_t *)v15, 0x20u);
    v22 = sub_5C154(&qword_32A000);
    swift_arrayDestroy(v58, 1, v22);
    swift_slowDealloc(v58, -1, -1);
    swift_arrayDestroy(v60, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v60, -1, -1);
    swift_slowDealloc(v15, -1, -1);

  }
  else
  {
    v23 = *(void **)(v0 + 168);

    swift_bridgeObjectRelease_n(v13, 2);
    swift_bridgeObjectRelease_n(v12, 2);
    swift_errorRelease(v1);
    swift_errorRelease(v1);

  }
  v24 = *(_QWORD *)(v0 + 368);
  v26 = *(_QWORD *)(v0 + 288);
  v25 = *(_QWORD *)(v0 + 296);
  v27 = *(_QWORD *)(v0 + 280);
  v28.super.isa = *(Class *)(v0 + 176);
  v29 = objc_msgSend((id)objc_opt_self(JSABridge), "sharedInstance");
  v62.value._rawValue = &_swiftEmptyArrayStorage;
  v62.is_nil = 106;
  v30._countAndFlagsBits = 0x800000000026F9C0;
  v30._object = &stru_20 + 46;
  JSABridge.enqueueValueCall(_:arguments:f:l:)(v28, v62, v30, v31);

  swift_errorRelease(v1);
  (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v25, v27);
  if (!v24)
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 312) + 8))(*(_QWORD *)(v0 + 328), *(_QWORD *)(v0 + 304));
  v32 = *(unsigned __int8 *)(v0 + 392);
  v34 = *(_QWORD *)(v0 + 344);
  v33 = *(_QWORD *)(v0 + 352);
  v35.super.isa = *(Class *)(v0 + 176);
  v36 = objc_msgSend((id)objc_opt_self(JSABridge), "sharedInstance");
  v37 = sub_5C154(&qword_31EFF0);
  v38 = swift_allocObject(v37, 64, 7);
  *(_OWORD *)(v38 + 16) = xmmword_258070;
  v39 = sub_5C154(&qword_3209C8);
  inited = swift_initStackObject(v39, v0 + 16);
  v41 = inited;
  *(_OWORD *)(inited + 16) = xmmword_255F00;
  v42 = 0x6569766F6DLL;
  *(_QWORD *)(inited + 32) = 1701869940;
  *(_QWORD *)(inited + 40) = 0xE400000000000000;
  if (v32)
    v42 = 0x776F68537674;
  v43 = 0xE500000000000000;
  if (v32)
    v43 = 0xE600000000000000;
  *(_QWORD *)(inited + 48) = v42;
  *(_QWORD *)(inited + 56) = v43;
  *(_QWORD *)(inited + 64) = 1635017060;
  *(_QWORD *)(inited + 72) = 0xE400000000000000;
  *(_QWORD *)(inited + 80) = 0;
  *(_QWORD *)(inited + 88) = 0;
  swift_bridgeObjectRelease(v34);
  swift_bridgeObjectRelease(v33);
  v44 = sub_52CE0(v41);
  *(_QWORD *)(v38 + 56) = sub_5C154(&qword_3209D0);
  *(_QWORD *)(v38 + 32) = v44;
  v63.value._rawValue = (void *)v38;
  v63.is_nil = 106;
  v45._countAndFlagsBits = 0x800000000026F9C0;
  v45._object = &stru_20 + 64;
  JSABridge.enqueueValueCall(_:arguments:f:l:)(v35, v63, v45, v46);
  swift_bridgeObjectRelease(v38);

  v47 = *(_QWORD *)(v0 + 320);
  v48 = *(_QWORD *)(v0 + 296);
  v50 = *(_QWORD *)(v0 + 264);
  v49 = *(_QWORD *)(v0 + 272);
  v52 = *(_QWORD *)(v0 + 232);
  v51 = *(_QWORD *)(v0 + 240);
  v53 = *(_QWORD *)(v0 + 224);
  v54 = *(_QWORD *)(v0 + 200);
  swift_task_dealloc(*(_QWORD *)(v0 + 328));
  swift_task_dealloc(v47);
  swift_task_dealloc(v48);
  swift_task_dealloc(v49);
  swift_task_dealloc(v50);
  swift_task_dealloc(v51);
  swift_task_dealloc(v52);
  swift_task_dealloc(v53);
  swift_task_dealloc(v54);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_85EC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  id v6;
  id v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  _BOOL4 v11;
  uint64_t v12;
  unint64_t v13;
  void *v14;
  uint64_t v15;
  id v16;
  id v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  JSValue v27;
  uint64_t v28;
  id v29;
  Swift::String v30;
  Swift::Int v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  JSValue v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t inited;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  Swift::String v45;
  Swift::Int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v56;
  uint64_t v57;
  uint64_t *v58;
  NSObject *log;
  uint64_t v60;
  uint64_t v61;
  Swift::OpaquePointer_optional v62;
  Swift::OpaquePointer_optional v63;

  v1 = *(_QWORD *)(v0 + 384);
  if (qword_31E690 != -1)
    swift_once(&qword_31E690, sub_126EE4);
  v3 = *(_QWORD *)(v0 + 344);
  v2 = *(_QWORD *)(v0 + 352);
  v4 = *(void **)(v0 + 168);
  v5 = type metadata accessor for Logger(0);
  sub_5240C(v5, (uint64_t)qword_325340);
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v2);
  v6 = v4;
  swift_errorRetain(v1);
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v2);
  v7 = v6;
  v8 = swift_errorRetain(v1);
  v9 = Logger.logObject.getter(v8);
  v10 = static os_log_type_t.error.getter();
  v11 = os_log_type_enabled(v9, v10);
  v13 = *(_QWORD *)(v0 + 344);
  v12 = *(_QWORD *)(v0 + 352);
  if (v11)
  {
    v57 = *(_QWORD *)(v0 + 336);
    v14 = *(void **)(v0 + 168);
    log = v9;
    v15 = swift_slowAlloc(32, -1);
    v58 = (uint64_t *)swift_slowAlloc(8, -1);
    v60 = swift_slowAlloc(64, -1);
    v61 = v60;
    *(_DWORD *)v15 = 136315650;
    v56 = v12;
    v16 = v14;
    v17 = objc_msgSend(v16, "description");
    v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(v17);
    v20 = v19;

    *(_QWORD *)(v0 + 112) = sub_57CD8(v18, v20, &v61);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 112, v0 + 120, v15 + 4, v15 + 12);
    swift_bridgeObjectRelease(v20);

    *(_WORD *)(v15 + 12) = 2080;
    swift_bridgeObjectRetain(v13);
    *(_QWORD *)(v0 + 120) = sub_57CD8(v57, v13, &v61);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 120, v0 + 128, v15 + 14, v15 + 22);
    swift_bridgeObjectRelease_n(v13, 3);
    swift_bridgeObjectRelease_n(v56, 2);
    *(_WORD *)(v15 + 22) = 2112;
    swift_errorRetain(v1);
    v21 = _swift_stdlib_bridgeErrorToNSError(v1);
    *(_QWORD *)(v0 + 128) = v21;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 128, v0 + 136, v15 + 24, v15 + 32);
    *v58 = v21;
    swift_errorRelease(v1);
    swift_errorRelease(v1);
    _os_log_impl(&dword_0, log, v10, "Failed to retrieve TV <TV Show> information for adamID %s -> %s with error: %@", (uint8_t *)v15, 0x20u);
    v22 = sub_5C154(&qword_32A000);
    swift_arrayDestroy(v58, 1, v22);
    swift_slowDealloc(v58, -1, -1);
    swift_arrayDestroy(v60, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v60, -1, -1);
    swift_slowDealloc(v15, -1, -1);

  }
  else
  {
    v23 = *(void **)(v0 + 168);

    swift_bridgeObjectRelease_n(v13, 2);
    swift_bridgeObjectRelease_n(v12, 2);
    swift_errorRelease(v1);
    swift_errorRelease(v1);

  }
  v24 = *(_QWORD *)(v0 + 384);
  v26 = *(_QWORD *)(v0 + 192);
  v25 = *(_QWORD *)(v0 + 200);
  v27.super.isa = *(Class *)(v0 + 176);
  v28 = *(_QWORD *)(v0 + 184);
  v29 = objc_msgSend((id)objc_opt_self(JSABridge), "sharedInstance");
  v62.value._rawValue = &_swiftEmptyArrayStorage;
  v62.is_nil = 106;
  v30._countAndFlagsBits = 0x800000000026F9C0;
  v30._object = &stru_20 + 61;
  JSABridge.enqueueValueCall(_:arguments:f:l:)(v27, v62, v30, v31);

  swift_errorRelease(v1);
  (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v25, v28);
  if (!v24)
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 216) + 8))(*(_QWORD *)(v0 + 232), *(_QWORD *)(v0 + 208));
  v32 = *(unsigned __int8 *)(v0 + 392);
  v34 = *(_QWORD *)(v0 + 344);
  v33 = *(_QWORD *)(v0 + 352);
  v35.super.isa = *(Class *)(v0 + 176);
  v36 = objc_msgSend((id)objc_opt_self(JSABridge), "sharedInstance");
  v37 = sub_5C154(&qword_31EFF0);
  v38 = swift_allocObject(v37, 64, 7);
  *(_OWORD *)(v38 + 16) = xmmword_258070;
  v39 = sub_5C154(&qword_3209C8);
  inited = swift_initStackObject(v39, v0 + 16);
  v41 = inited;
  *(_OWORD *)(inited + 16) = xmmword_255F00;
  v42 = 0x6569766F6DLL;
  *(_QWORD *)(inited + 32) = 1701869940;
  *(_QWORD *)(inited + 40) = 0xE400000000000000;
  if (v32)
    v42 = 0x776F68537674;
  v43 = 0xE500000000000000;
  if (v32)
    v43 = 0xE600000000000000;
  *(_QWORD *)(inited + 48) = v42;
  *(_QWORD *)(inited + 56) = v43;
  *(_QWORD *)(inited + 64) = 1635017060;
  *(_QWORD *)(inited + 72) = 0xE400000000000000;
  *(_QWORD *)(inited + 80) = 0;
  *(_QWORD *)(inited + 88) = 0;
  swift_bridgeObjectRelease(v34);
  swift_bridgeObjectRelease(v33);
  v44 = sub_52CE0(v41);
  *(_QWORD *)(v38 + 56) = sub_5C154(&qword_3209D0);
  *(_QWORD *)(v38 + 32) = v44;
  v63.value._rawValue = (void *)v38;
  v63.is_nil = 106;
  v45._countAndFlagsBits = 0x800000000026F9C0;
  v45._object = &stru_20 + 64;
  JSABridge.enqueueValueCall(_:arguments:f:l:)(v35, v63, v45, v46);
  swift_bridgeObjectRelease(v38);

  v47 = *(_QWORD *)(v0 + 320);
  v48 = *(_QWORD *)(v0 + 296);
  v50 = *(_QWORD *)(v0 + 264);
  v49 = *(_QWORD *)(v0 + 272);
  v52 = *(_QWORD *)(v0 + 232);
  v51 = *(_QWORD *)(v0 + 240);
  v53 = *(_QWORD *)(v0 + 224);
  v54 = *(_QWORD *)(v0 + 200);
  swift_task_dealloc(*(_QWORD *)(v0 + 328));
  swift_task_dealloc(v47);
  swift_task_dealloc(v48);
  swift_task_dealloc(v49);
  swift_task_dealloc(v50);
  swift_task_dealloc(v51);
  swift_task_dealloc(v52);
  swift_task_dealloc(v53);
  swift_task_dealloc(v54);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

id TVAppService.init()()
{
  char *v0;
  objc_class *ObjectType;
  objc_super v3;

  ObjectType = (objc_class *)swift_getObjectType(v0);
  *(_QWORD *)&v0[OBJC_IVAR___BKTVAppService____lazy_storage___tvMapping] = 0;
  v3.receiver = v0;
  v3.super_class = ObjectType;
  return objc_msgSendSuper2(&v3, "init");
}

uint64_t type metadata accessor for TVAppService()
{
  return objc_opt_self(BKTVAppService);
}

uint64_t destroy for TintColorInfo(uint64_t a1)
{
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + 32));
}

uint64_t initializeWithCopy for TVAppService.TVMappingModel(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  return a1;
}

uint64_t assignWithCopy for TVAppService.TVMappingModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  v6 = *(_QWORD *)(a2 + 32);
  v7 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 32) = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  return a1;
}

__n128 initializeWithTake for Shelf.HeaderComponentModel(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for TVAppService.TVMappingModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease(v5);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 32);
  v7 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v6;
  swift_bridgeObjectRelease(v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for TintColorInfo(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 40))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TintColorInfo(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for TVAppService.TVMappingModel()
{
  return &type metadata for TVAppService.TVMappingModel;
}

uint64_t sub_86704()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_86730(void *a1, uint64_t a2)
{
  uint64_t v2;

  sub_84494(a1, a2, *(void **)(v2 + 16), *(void **)(v2 + 24));
}

uint64_t sub_86738(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_86748(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_86750()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_8678C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = (_QWORD *)swift_task_alloc(dword_3209A4);
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_64780;
  return sub_84574(a1, v4, v5, v6, v7, v8);
}

unint64_t sub_8680C()
{
  unint64_t result;

  result = qword_3209C0;
  if (!qword_3209C0)
  {
    result = swift_getWitnessTable(&unk_258D08, &type metadata for TVAppService.BooksTVItem);
    atomic_store(result, (unint64_t *)&qword_3209C0);
  }
  return result;
}

uint64_t sub_86850(uint64_t result, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_release(result);
  }
  return swift_release(a2 & 0x3FFFFFFFFFFFFFFFLL);
}

_QWORD *initializeBufferWithCopyOfBuffer for TVAppService.BooksTVItem(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain(v3);
  return a1;
}

uint64_t destroy for TVAppService.BooksTVItem(uint64_t a1)
{
  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
}

_QWORD *assignWithCopy for TVAppService.BooksTVItem(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  *a1 = *a2;
  v3 = a2[1];
  v4 = a1[1];
  a1[1] = v3;
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRelease(v4);
  return a1;
}

_QWORD *assignWithTake for TVAppService.BooksTVItem(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  v4 = a1[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease(v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for TVAppService.BooksTVItem(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TVAppService.BooksTVItem(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for TVAppService.BooksTVItem()
{
  return &type metadata for TVAppService.BooksTVItem;
}

uint64_t storeEnumTagSinglePayload for TVAppService.ContentType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_86A18 + 4 * byte_258BBD[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_86A4C + 4 * byte_258BB8[v4]))();
}

uint64_t sub_86A4C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_86A54(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x86A5CLL);
  return result;
}

uint64_t sub_86A68(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x86A70);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_86A74(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_86A7C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TVAppService.ContentType()
{
  return &type metadata for TVAppService.ContentType;
}

unint64_t sub_86A9C()
{
  unint64_t result;

  result = qword_3209F0;
  if (!qword_3209F0)
  {
    result = swift_getWitnessTable(&unk_258C90, &type metadata for TVAppService.ContentType);
    atomic_store(result, (unint64_t *)&qword_3209F0);
  }
  return result;
}

unint64_t sub_86AE4()
{
  unint64_t result;

  result = qword_3209F8;
  if (!qword_3209F8)
  {
    result = swift_getWitnessTable(&unk_258CE0, &type metadata for TVAppService.BooksTVItem);
    atomic_store(result, (unint64_t *)&qword_3209F8);
  }
  return result;
}

unint64_t sub_86B2C()
{
  unint64_t result;

  result = qword_320A00;
  if (!qword_320A00)
  {
    result = swift_getWitnessTable(&unk_258CB8, &type metadata for TVAppService.BooksTVItem);
    atomic_store(result, (unint64_t *)&qword_320A00);
  }
  return result;
}

unint64_t sub_86B70()
{
  unint64_t result;

  result = qword_320A10;
  if (!qword_320A10)
  {
    result = swift_getWitnessTable(&unk_258E04, &type metadata for TVAppService.BooksTVItem.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_320A10);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for TVAppService.BooksTVItem.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_86BF4 + 4 * byte_258BC2[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_86C14 + 4 * byte_258BC7[v4]))();
}

_BYTE *sub_86BF4(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_86C14(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_86C1C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_86C24(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_86C2C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_86C34(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for TVAppService.BooksTVItem.CodingKeys()
{
  return &type metadata for TVAppService.BooksTVItem.CodingKeys;
}

unint64_t sub_86C54()
{
  unint64_t result;

  result = qword_320A20;
  if (!qword_320A20)
  {
    result = swift_getWitnessTable(&unk_258DDC, &type metadata for TVAppService.BooksTVItem.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_320A20);
  }
  return result;
}

unint64_t sub_86C9C()
{
  unint64_t result;

  result = qword_320A28;
  if (!qword_320A28)
  {
    result = swift_getWitnessTable(&unk_258D4C, &type metadata for TVAppService.BooksTVItem.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_320A28);
  }
  return result;
}

unint64_t sub_86CE4()
{
  unint64_t result;

  result = qword_320A30;
  if (!qword_320A30)
  {
    result = swift_getWitnessTable(&unk_258D74, &type metadata for TVAppService.BooksTVItem.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_320A30);
  }
  return result;
}

uint64_t sub_86D2C(uint64_t a1, _BYTE *a2, uint64_t a3, _BYTE *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;

  *(_QWORD *)(v6 + 152) = a5;
  *(_QWORD *)(v6 + 160) = a6;
  *(_QWORD *)(v6 + 136) = a1;
  *(_QWORD *)(v6 + 144) = a3;
  v9 = type metadata accessor for ActionOrigin.Kind(0);
  *(_QWORD *)(v6 + 168) = v9;
  v10 = *(_QWORD *)(v9 - 8);
  *(_QWORD *)(v6 + 176) = v10;
  *(_QWORD *)(v6 + 184) = swift_task_alloc((*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for ContentKind(0);
  *(_QWORD *)(v6 + 192) = v11;
  v12 = *(_QWORD *)(v11 - 8);
  *(_QWORD *)(v6 + 200) = v12;
  v13 = (*(_QWORD *)(v12 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v6 + 208) = swift_task_alloc(v13);
  *(_QWORD *)(v6 + 216) = swift_task_alloc(v13);
  *(_QWORD *)(v6 + 224) = swift_task_alloc(v13);
  *(_QWORD *)(v6 + 232) = swift_task_alloc(v13);
  *(_QWORD *)(v6 + 240) = swift_task_alloc(v13);
  v14 = type metadata accessor for ActionOrigin(0);
  *(_QWORD *)(v6 + 248) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v14 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for DialogType(0);
  *(_QWORD *)(v6 + 256) = v15;
  v16 = *(_QWORD *)(v15 - 8);
  *(_QWORD *)(v6 + 264) = v16;
  *(_QWORD *)(v6 + 272) = swift_task_alloc((*(_QWORD *)(v16 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for DialogActionType(0);
  *(_QWORD *)(v6 + 280) = v17;
  v18 = *(_QWORD *)(v17 - 8);
  *(_QWORD *)(v6 + 288) = v18;
  *(_QWORD *)(v6 + 296) = swift_task_alloc((*(_QWORD *)(v18 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for Metrics.DialogType(0);
  *(_QWORD *)(v6 + 304) = v19;
  v20 = *(_QWORD *)(v19 - 8);
  *(_QWORD *)(v6 + 312) = v20;
  *(_QWORD *)(v6 + 320) = swift_task_alloc((*(_QWORD *)(v20 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for Metrics.DialogActionType(0);
  *(_QWORD *)(v6 + 328) = v21;
  v22 = *(_QWORD *)(v21 - 8);
  *(_QWORD *)(v6 + 336) = v22;
  *(_QWORD *)(v6 + 344) = swift_task_alloc((*(_QWORD *)(v22 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = (*(_QWORD *)(*(_QWORD *)(type metadata accessor for ActionMetrics(0) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v6 + 352) = swift_task_alloc(v23);
  *(_QWORD *)(v6 + 360) = swift_task_alloc(v23);
  v24 = type metadata accessor for BooksAlertAction(0);
  *(_QWORD *)(v6 + 368) = v24;
  v25 = *(_QWORD *)(v24 - 8);
  *(_QWORD *)(v6 + 376) = v25;
  *(_QWORD *)(v6 + 384) = swift_task_alloc((*(_QWORD *)(v25 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = type metadata accessor for LocalizerDefaultValue(0, v26);
  *(_QWORD *)(v6 + 392) = v27;
  v28 = *(_QWORD *)(v27 - 8);
  *(_QWORD *)(v6 + 400) = v28;
  *(_QWORD *)(v6 + 408) = swift_task_alloc((*(_QWORD *)(v28 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = type metadata accessor for SeriesType(0);
  *(_QWORD *)(v6 + 416) = v29;
  v30 = *(_QWORD *)(v29 - 8);
  *(_QWORD *)(v6 + 424) = v30;
  *(_QWORD *)(v6 + 432) = swift_task_alloc((*(_QWORD *)(v30 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = type metadata accessor for SeriesData(0);
  *(_QWORD *)(v6 + 440) = v31;
  v32 = *(_QWORD *)(v31 - 8);
  *(_QWORD *)(v6 + 448) = v32;
  *(_QWORD *)(v6 + 456) = swift_task_alloc((*(_QWORD *)(v32 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = sub_5C154(&qword_320A40);
  *(_QWORD *)(v6 + 464) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v33 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_BYTE *)(v6 + 544) = *a2;
  *(_BYTE *)(v6 + 545) = *a4;
  v34 = sub_5C154(&qword_320A48);
  v35 = (_QWORD *)swift_task_alloc(async function pointer to BaseObjectGraph.inject<A>(_:)[1]);
  *(_QWORD *)(v6 + 472) = v35;
  *v35 = v6;
  v35[1] = sub_87004;
  return BaseObjectGraph.inject<A>(_:)(v6 + 16, v34, v34);
}

uint64_t sub_87004()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 472);
  *(_QWORD *)(*(_QWORD *)v1 + 480) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_8800C;
  else
    v3 = sub_87068;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_87068()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int *v19;
  _QWORD *v20;
  int *v22;

  v1 = v0[58];
  v2 = (_QWORD *)v0[18];
  v3 = v0[5];
  v4 = v0[6];
  sub_66898(v0 + 2, v3);
  v5 = type metadata accessor for SeriesListSortOrder(0);
  v0[61] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v0[62] = v6;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(v1, 1, 1, v5);
  v7 = v2[3];
  v8 = v2[4];
  sub_66898(v2, v7);
  v9 = ContentInfo.id.getter(v7, *(_QWORD *)(v8 + 8));
  v11 = v10;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 8))(v1, v9, v10, v3, v4);
  swift_bridgeObjectRelease(v11);
  sub_5E09C(v1, &qword_320A40);
  v12 = v0[5];
  v13 = v0[6];
  sub_66898(v0 + 2, v12);
  v14 = v2[3];
  v15 = v2[4];
  sub_66898(v2, v14);
  v16 = ContentInfo.id.getter(v14, *(_QWORD *)(v15 + 8));
  v18 = v17;
  v0[63] = v17;
  v19 = *(int **)(v13 + 80);
  v22 = (int *)((char *)v19 + *v19);
  v20 = (_QWORD *)swift_task_alloc(v19[1]);
  v0[64] = v20;
  *v20 = v0;
  v20[1] = sub_871E8;
  return ((uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t))v22)(v0[17], v16, v18, v12, v13);
}

uint64_t sub_871E8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 504);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 512));
  swift_bridgeObjectRelease(v1);
  return swift_task_switch(sub_87244, 0, 0);
}

uint64_t sub_87244()
{
  uint64_t v0;
  uint64_t v1;
  unsigned __int8 v2;
  uint64_t v3;
  _QWORD *v4;
  unint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  unsigned __int8 v37[9];

  v1 = *(_QWORD *)(v0 + 480);
  v2 = *(_BYTE *)(v0 + 544);
  v3 = *(_QWORD *)(v0 + 456);
  v5 = *(_QWORD *)(v0 + 136);
  v4 = *(_QWORD **)(v0 + 144);
  v36 = *(_BYTE *)(v0 + 545);
  v6 = (char *)v4[3];
  v7 = v4[4];
  sub_66898(v4, (uint64_t)v6);
  sub_2344B0(v6, v7, v3);
  v37[0] = v2;
  *(_QWORD *)(v0 + 520) = sub_1A738C(v4, (void (*)(char *))&v36, v3, v37, v5);
  if (v1)
  {
    v8 = *(_QWORD *)(v0 + 488);
    v9 = *(_QWORD *)(v0 + 496);
    v11 = *(_QWORD *)(v0 + 448);
    v10 = *(_QWORD *)(v0 + 456);
    v12 = *(_QWORD *)(v0 + 440);
    v13 = *(_QWORD *)(v0 + 152);
    v14 = *(_QWORD *)(v0 + 136);
    swift_release(*(_QWORD *)(v0 + 160));
    sub_5E09C(v13, &qword_320A50);
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v14, v8);
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
    _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((_QWORD *)(v0 + 16));
    v16 = *(_QWORD *)(v0 + 456);
    v15 = *(_QWORD *)(v0 + 464);
    v17 = *(_QWORD *)(v0 + 432);
    v18 = *(_QWORD *)(v0 + 408);
    v19 = *(_QWORD *)(v0 + 384);
    v21 = *(_QWORD *)(v0 + 352);
    v20 = *(_QWORD *)(v0 + 360);
    v22 = *(_QWORD *)(v0 + 344);
    v23 = *(_QWORD *)(v0 + 320);
    v27 = *(_QWORD *)(v0 + 296);
    v28 = *(_QWORD *)(v0 + 272);
    v29 = *(_QWORD *)(v0 + 248);
    v30 = *(_QWORD *)(v0 + 240);
    v31 = *(_QWORD *)(v0 + 232);
    v32 = *(_QWORD *)(v0 + 224);
    v33 = *(_QWORD *)(v0 + 216);
    v34 = *(_QWORD *)(v0 + 208);
    v35 = *(_QWORD *)(v0 + 184);
    _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(*(_QWORD **)(v0 + 144));
    swift_task_dealloc(v15);
    swift_task_dealloc(v16);
    swift_task_dealloc(v17);
    swift_task_dealloc(v18);
    swift_task_dealloc(v19);
    swift_task_dealloc(v20);
    swift_task_dealloc(v21);
    swift_task_dealloc(v22);
    swift_task_dealloc(v23);
    swift_task_dealloc(v27);
    swift_task_dealloc(v28);
    swift_task_dealloc(v29);
    swift_task_dealloc(v30);
    swift_task_dealloc(v31);
    swift_task_dealloc(v32);
    swift_task_dealloc(v33);
    swift_task_dealloc(v34);
    swift_task_dealloc(v35);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 448) + 8))(*(_QWORD *)(v0 + 456), *(_QWORD *)(v0 + 440));
    v25 = sub_5C154(&qword_31FE28);
    v26 = (_QWORD *)swift_task_alloc(async function pointer to BaseObjectGraph.inject<A>(_:)[1]);
    *(_QWORD *)(v0 + 528) = v26;
    *v26 = v0;
    v26[1] = sub_874B4;
    return BaseObjectGraph.inject<A>(_:)(v0 + 56, v25, v25);
  }
}

uint64_t sub_874B4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 528);
  *(_QWORD *)(*v1 + 536) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    swift_bridgeObjectRelease(*(_QWORD *)(v2 + 520));
    v4 = sub_88184;
  }
  else
  {
    v4 = sub_87520;
  }
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_87520()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  unint64_t v13;
  const char *v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  double (*v20)(uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __n128 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(void (*)(void), uint64_t, uint64_t);
  uint64_t (*v42)(void (*)(void), uint64_t);
  int v43;
  int v44;
  const char *v45;
  uint64_t v47;
  void (*v48)(void);
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  int v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  void (*v75)(char *, _QWORD, uint64_t);
  char *v76;
  uint64_t v77;
  void (*v78)(void);
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  _QWORD v86[2];
  unint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  _QWORD *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  _QWORD *v103;
  uint64_t v104;
  uint64_t v105;
  _QWORD *v106;
  uint64_t v107;
  void (*v108)(uint64_t, uint64_t, uint64_t);
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  _QWORD *v114;
  void (*v115)(void);
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;

  v2 = *(_QWORD *)(v0 + 424);
  v1 = *(_QWORD *)(v0 + 432);
  v3 = *(_QWORD *)(v0 + 416);
  v4 = *(_QWORD **)(v0 + 144);
  v5 = v4[3];
  v6 = v4[4];
  sub_66898(v4, v5);
  dispatch thunk of SeriesInfo.seriesType.getter(v5, v6, v7);
  v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 88))(v1, v3);
  if (v8 == enum case for SeriesType.audiobook(_:))
  {
    v9 = *(_QWORD *)(v0 + 408);
    v10 = *(_QWORD *)(v0 + 80);
    v11 = *(_QWORD *)(v0 + 88);
    sub_66898((_QWORD *)(v0 + 56), v10);
    LocalizerDefaultValue.init(stringLiteral:)("Couldn't Sort Audiobooks", 24, 2, v12);
    v13 = 0xD00000000000002DLL;
    v14 = "Books.Series.SortError.Alert.Title.Audiobooks";
  }
  else
  {
    if (v8 != enum case for SeriesType.book(_:))
    {
      swift_bridgeObjectRelease(*(_QWORD *)(v0 + 520));
      return _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000013, 0x800000000026FAD0, "BookStoreUI/SeriesSortOrderError.swift", 38, 2, 43, 0);
    }
    v9 = *(_QWORD *)(v0 + 408);
    v10 = *(_QWORD *)(v0 + 80);
    v11 = *(_QWORD *)(v0 + 88);
    sub_66898((_QWORD *)(v0 + 56), v10);
    LocalizerDefaultValue.init(stringLiteral:)("Couldn't Sort Books", 19, 2, v15);
    v13 = 0xD000000000000028;
    v14 = "Books.Series.SortError.Alert.Title.Books";
  }
  v16 = Localizer.string(forKey:defaultValue:)(v13, (unint64_t)(v14 - 32) | 0x8000000000000000, v9, v10, v11);
  v118 = v17;
  v119 = v16;
  v103 = (_QWORD *)(v0 + 96);
  v18 = *(_QWORD *)(v0 + 408);
  v19 = *(_QWORD *)(v0 + 392);
  v94 = *(_QWORD *)(v0 + 336);
  v95 = *(_QWORD *)(v0 + 328);
  v96 = *(_QWORD *)(v0 + 344);
  v99 = *(_QWORD **)(v0 + 320);
  v100 = *(_QWORD *)(v0 + 352);
  v97 = *(_QWORD *)(v0 + 312);
  v98 = *(_QWORD *)(v0 + 304);
  v101 = *(_QWORD *)(v0 + 288);
  v102 = *(_QWORD *)(v0 + 296);
  v104 = *(_QWORD *)(v0 + 280);
  v105 = *(_QWORD *)(v0 + 264);
  v107 = *(_QWORD *)(v0 + 256);
  v108 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 272);
  v115 = *(void (**)(void))(v0 + 232);
  v109 = *(_QWORD *)(v0 + 240);
  v110 = *(_QWORD *)(v0 + 200);
  v111 = *(_QWORD *)(v0 + 192);
  v106 = *(_QWORD **)(v0 + 144);
  v20 = *(double (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 400) + 8);
  v20(*(_QWORD *)(v0 + 408), *(_QWORD *)(v0 + 392));
  v21 = *(_QWORD *)(v0 + 80);
  v22 = *(_QWORD *)(v0 + 88);
  sub_66898((_QWORD *)(v0 + 56), v21);
  LocalizerDefaultValue.init(stringLiteral:)("There may be a problem with the server or network. Try sorting later.", 69, 2, v23);
  v116 = 0xD000000000000010;
  v117 = Localizer.string(forKey:defaultValue:)(0xD000000000000024, 0x800000000026FB40, v18, v21, v22);
  v25 = v24;
  v26.n128_f64[0] = v20(v18, v19);
  static ActionMetrics.notInstrumented.getter(v26);
  v27 = sub_5C154(&qword_320A58);
  v28 = *(_QWORD *)(type metadata accessor for BooksAlertAction.Button(0) - 8);
  v29 = *(_QWORD *)(v28 + 72);
  v30 = *(unsigned __int8 *)(v28 + 80);
  v31 = (v30 + 32) & ~v30;
  v32 = swift_allocObject(v27, v31 + v29, v30 | 7);
  *(_OWORD *)(v32 + 16) = xmmword_258070;
  v112 = v32;
  v93 = v32 + v31;
  v33 = *(_QWORD *)(v0 + 80);
  v34 = *(_QWORD *)(v0 + 88);
  v114 = (_QWORD *)(v0 + 56);
  sub_66898((_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 80));
  swift_bridgeObjectRetain(v118);
  swift_bridgeObjectRetain(v25);
  LocalizerDefaultValue.init(stringLiteral:)("OK", 2, 2, v35);
  v36 = Localizer.string(forKey:defaultValue:)(0x63412E736B6F6F42, 0xEF4B4F2E6E6F6974, v18, v33, v34);
  v91 = v37;
  v92 = v36;
  v20(v18, v19);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v94 + 104))(v96, enum case for Metrics.DialogActionType.ok(_:), v95);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v97 + 104))(v99, enum case for Metrics.DialogType.alert(_:), v98);
  v38 = v100;
  static Metrics.createDialogMetrics(actionType:dialogType:message:options:result:targetID:title:)(v96, v99, v117, v25, &off_2E6D58, 1, 27503, 0xE200000000000000, v119, v118);
  swift_bridgeObjectRelease(v118);
  v113 = v25;
  swift_bridgeObjectRelease(v25);
  (*(void (**)(_QWORD *, uint64_t))(v97 + 8))(v99, v98);
  (*(void (**)(uint64_t, uint64_t))(v94 + 8))(v96, v95);
  *(_QWORD *)(v0 + 120) = type metadata accessor for EmptyAction(0);
  *(_QWORD *)(v0 + 128) = &protocol witness table for EmptyAction;
  sub_668BC(v103);
  EmptyAction.init(actionMetrics:)(v38);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v101 + 104))(v102, enum case for DialogActionType.ok(_:), v104);
  BooksAlertAction.Button.init(title:role:action:dialogActionType:)(v92, v91, 0, 0, v103, v102);
  (*(void (**)(_QWORD, _QWORD, uint64_t))(v105 + 104))(v108, enum case for DialogType.seriesSortError(_:), v107);
  v39 = v106[3];
  v40 = v106[4];
  sub_66898(v106, v39);
  dispatch thunk of SeriesInfo.contentKind.getter(v39, v40);
  v41 = *(void (**)(void (*)(void), uint64_t, uint64_t))(v110 + 16);
  v41(v115, v109, v111);
  v42 = *(uint64_t (**)(void (*)(void), uint64_t))(v110 + 88);
  v43 = v42(v115, v111);
  v44 = enum case for ContentKind.pdf(_:);
  v108 = (void (*)(uint64_t, uint64_t, uint64_t))v41;
  if (v43 == enum case for ContentKind.pdf(_:))
  {
    v45 = "pdfSeriesSection";
LABEL_16:
    v87 = (unint64_t)(v45 - 32) | 0x8000000000000000;
    goto LABEL_17;
  }
  if (v43 == enum case for ContentKind.audiobook(_:))
  {
    v116 = 0xD000000000000016;
    v45 = "audiobookSeriesSection";
    goto LABEL_16;
  }
  if (v43 == enum case for ContentKind.regularBook(_:))
  {
    v116 = 0xD000000000000011;
    v45 = "bookSeriesSection";
    goto LABEL_16;
  }
  if (v43 == enum case for ContentKind.manga(_:))
  {
    v116 = 0xD000000000000012;
    v45 = "mangaSeriesSection";
    goto LABEL_16;
  }
  if (v43 == enum case for ContentKind.unknownBook(_:))
  {
    v116 = 0xD000000000000018;
    v45 = "unknownBookSeriesSection";
    goto LABEL_16;
  }
  v77 = *(_QWORD *)(v0 + 232);
  v78 = *(void (**)(void))(v0 + 224);
  v79 = *(_QWORD *)(v0 + 192);
  v80 = *(_QWORD *)(v0 + 200);
  v41(v78, *(_QWORD *)(v0 + 240), v79);
  v116 = String.init<A>(reflecting:)(v78, v79);
  v87 = v81;
  (*(void (**)(uint64_t, uint64_t))(v80 + 8))(v77, v79);
LABEL_17:
  v48 = *(void (**)(void))(v0 + 208);
  v47 = *(_QWORD *)(v0 + 216);
  v49 = *(_QWORD *)(v0 + 192);
  v50 = *(_QWORD **)(v0 + 144);
  v115 = *(void (**)(void))(*(_QWORD *)(v0 + 200) + 8);
  ((void (*)(_QWORD, _QWORD))v115)(*(_QWORD *)(v0 + 240), *(_QWORD *)(v0 + 192));
  v51 = v50[3];
  v52 = v50[4];
  sub_66898(v50, v51);
  dispatch thunk of SeriesInfo.contentKind.getter(v51, v52);
  v108((uint64_t)v48, v47, v49);
  v53 = v42(v48, v49);
  if (v53 == v44)
  {
    v86[1] = 0xE300000000000000;
    v54 = 4605008;
  }
  else if (v53 == enum case for ContentKind.audiobook(_:))
  {
    v86[1] = 0xEA0000000000736BLL;
    v54 = 0x6F6F626F69647541;
  }
  else if (v53 == enum case for ContentKind.regularBook(_:))
  {
    v86[1] = 0xE500000000000000;
    v54 = 0x736B6F6F42;
  }
  else
  {
    if (v53 != enum case for ContentKind.manga(_:))
    {
      v55 = v116;
      if (v53 == enum case for ContentKind.unknownBook(_:))
      {
        BYTE5(v86[1]) = 0;
        HIWORD(v86[1]) = -5120;
        strcpy((char *)v86, "Unknown book");
      }
      else
      {
        v82 = *(_QWORD *)(v0 + 224);
        v83 = *(_QWORD *)(v0 + 208);
        v84 = *(_QWORD *)(v0 + 192);
        v108(v82, *(_QWORD *)(v0 + 216), v84);
        v86[0] = String.init<A>(reflecting:)(v82, v84);
        v86[1] = v85;
        ((void (*)(uint64_t, uint64_t))v115)(v83, v84);
      }
      goto LABEL_26;
    }
    v86[1] = 0xE500000000000000;
    v54 = 0x61676E614DLL;
  }
  v86[0] = v54;
  v55 = v116;
LABEL_26:
  v89 = *(_QWORD *)(v0 + 520);
  v96 = *(_QWORD *)(v0 + 496);
  v97 = *(_QWORD *)(v0 + 488);
  v99 = (_QWORD *)(v0 + 16);
  v100 = *(_QWORD *)(v0 + 464);
  v101 = *(_QWORD *)(v0 + 456);
  v102 = *(_QWORD *)(v0 + 432);
  v103 = *(_QWORD **)(v0 + 408);
  v56 = *(_QWORD *)(v0 + 384);
  v91 = *(_QWORD *)(v0 + 376);
  v57 = *(_QWORD *)(v0 + 360);
  v93 = *(_QWORD *)(v0 + 368);
  v88 = *(_QWORD *)(v0 + 360);
  v104 = *(_QWORD *)(v0 + 352);
  v105 = *(_QWORD *)(v0 + 344);
  v106 = *(_QWORD **)(v0 + 320);
  v107 = *(_QWORD *)(v0 + 296);
  v95 = *(_QWORD *)(v0 + 272);
  v58 = *(_QWORD *)(v0 + 248);
  v109 = *(_QWORD *)(v0 + 240);
  v110 = *(_QWORD *)(v0 + 232);
  v111 = *(_QWORD *)(v0 + 224);
  v108 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 216);
  v116 = *(_QWORD *)(v0 + 208);
  v59 = *(_QWORD *)(v0 + 184);
  v60 = *(_QWORD *)(v0 + 168);
  v61 = *(_QWORD *)(v0 + 176);
  v90 = *(_QWORD *)(v0 + 160);
  v62 = *(_QWORD **)(v0 + 144);
  v92 = *(_QWORD *)(v0 + 152);
  v94 = *(_QWORD *)(v0 + 136);
  v115();
  v98 = v59;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v61 + 104))(v59, enum case for ActionOrigin.Kind.other(_:), v60);
  v63 = v62[3];
  v64 = v62[4];
  sub_66898(v62, v63);
  v65 = ContentInfo.id.getter(v63, *(_QWORD *)(v64 + 8));
  ActionOrigin.init(sectionID:sectionName:contentID:kind:seriesID:genreID:collectionID:authorID:flowcaseID:brickID:)(v55, v87, v86[0], v86[1], 0, 0, v59, v65, v66, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
  BooksAlertAction.init(actionMetrics:title:message:buttons:dialogType:actionOrigin:)(v57, v119, v118, v117, v113, v112, v95, v58);
  v67 = sub_5C154(&qword_31EF00);
  v68 = sub_5C154(&qword_31EF08);
  v69 = *(_QWORD *)(v68 - 8);
  v70 = *(_QWORD *)(v69 + 72);
  v71 = *(unsigned __int8 *)(v69 + 80);
  v72 = (v71 + 32) & ~v71;
  v73 = swift_allocObject(v67, v72 + 2 * v70, v71 | 7);
  *(_OWORD *)(v73 + 16) = xmmword_255F00;
  v74 = (char *)(v73 + v72);
  *(_QWORD *)v74 = v89;
  v75 = *(void (**)(char *, _QWORD, uint64_t))(v69 + 104);
  v75(v74, enum case for PageUpdateInstruction.replaceTrailingToolbarItems<A, B>(_:), v68);
  v76 = &v74[v70];
  (*(void (**)(char *, uint64_t, uint64_t))(v91 + 16))(v76, v56, v93);
  v75(v76, enum case for PageUpdateInstruction.presentAlert<A, B>(_:), v68);
  swift_release(v90);
  sub_5E09C(v92, &qword_320A50);
  (*(void (**)(uint64_t, uint64_t))(v96 + 8))(v94, v97);
  (*(void (**)(uint64_t, uint64_t))(v91 + 8))(v56, v93);
  _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(v114);
  _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(v99);
  _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(v62);
  swift_task_dealloc(v100);
  swift_task_dealloc(v101);
  swift_task_dealloc(v102);
  swift_task_dealloc(v103);
  swift_task_dealloc(v56);
  swift_task_dealloc(v88);
  swift_task_dealloc(v104);
  swift_task_dealloc(v105);
  swift_task_dealloc(v106);
  swift_task_dealloc(v107);
  swift_task_dealloc(v95);
  swift_task_dealloc(v58);
  swift_task_dealloc(v109);
  swift_task_dealloc(v110);
  swift_task_dealloc(v111);
  swift_task_dealloc(v108);
  swift_task_dealloc(v116);
  swift_task_dealloc(v98);
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v73);
}

uint64_t sub_8800C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v1 = *(_QWORD *)(v0 + 152);
  v2 = *(_QWORD *)(v0 + 136);
  swift_release(*(_QWORD *)(v0 + 160));
  sub_5E09C(v1, &qword_320A50);
  v3 = type metadata accessor for SeriesListSortOrder(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
  v5 = *(_QWORD *)(v0 + 456);
  v4 = *(_QWORD *)(v0 + 464);
  v6 = *(_QWORD *)(v0 + 432);
  v7 = *(_QWORD *)(v0 + 408);
  v8 = *(_QWORD *)(v0 + 384);
  v10 = *(_QWORD *)(v0 + 352);
  v9 = *(_QWORD *)(v0 + 360);
  v11 = *(_QWORD *)(v0 + 344);
  v12 = *(_QWORD *)(v0 + 320);
  v14 = *(_QWORD *)(v0 + 296);
  v15 = *(_QWORD *)(v0 + 272);
  v16 = *(_QWORD *)(v0 + 248);
  v17 = *(_QWORD *)(v0 + 240);
  v18 = *(_QWORD *)(v0 + 232);
  v19 = *(_QWORD *)(v0 + 224);
  v20 = *(_QWORD *)(v0 + 216);
  v21 = *(_QWORD *)(v0 + 208);
  v22 = *(_QWORD *)(v0 + 184);
  _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(*(_QWORD **)(v0 + 144));
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_88184()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v1 = *(_QWORD *)(v0 + 488);
  v2 = *(_QWORD *)(v0 + 496);
  v3 = *(_QWORD *)(v0 + 152);
  v4 = *(_QWORD *)(v0 + 136);
  swift_release(*(_QWORD *)(v0 + 160));
  sub_5E09C(v3, &qword_320A50);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v4, v1);
  _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((_QWORD *)(v0 + 16));
  v6 = *(_QWORD *)(v0 + 456);
  v5 = *(_QWORD *)(v0 + 464);
  v7 = *(_QWORD *)(v0 + 432);
  v8 = *(_QWORD *)(v0 + 408);
  v9 = *(_QWORD *)(v0 + 384);
  v11 = *(_QWORD *)(v0 + 352);
  v10 = *(_QWORD *)(v0 + 360);
  v12 = *(_QWORD *)(v0 + 344);
  v13 = *(_QWORD *)(v0 + 320);
  v15 = *(_QWORD *)(v0 + 296);
  v16 = *(_QWORD *)(v0 + 272);
  v17 = *(_QWORD *)(v0 + 248);
  v18 = *(_QWORD *)(v0 + 240);
  v19 = *(_QWORD *)(v0 + 232);
  v20 = *(_QWORD *)(v0 + 224);
  v21 = *(_QWORD *)(v0 + 216);
  v22 = *(_QWORD *)(v0 + 208);
  v23 = *(_QWORD *)(v0 + 184);
  _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(*(_QWORD **)(v0 + 144));
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

ValueMetadata *type metadata accessor for SeriesSortOrderError()
{
  return &type metadata for SeriesSortOrderError;
}

uint64_t sub_88310(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4;
  int v5;
  __int128 v7;
  _OWORD *v8;
  _OWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  void *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *(_QWORD *)v4 = *a2;
    v4 = v12 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain(v12);
  }
  else
  {
    v7 = *(_OWORD *)(a2 + 3);
    *(_OWORD *)(a1 + 24) = v7;
    (**(void (***)(uint64_t, uint64_t *))(v7 - 8))(a1, a2);
    v8 = (_OWORD *)(v4 + 40);
    v9 = a2 + 5;
    v10 = a2[8];
    if (v10)
    {
      v11 = a2[9];
      *(_QWORD *)(v4 + 64) = v10;
      *(_QWORD *)(v4 + 72) = v11;
      (**(void (***)(_OWORD *, _OWORD *))(v10 - 8))(v8, v9);
    }
    else
    {
      v13 = *(_OWORD *)(a2 + 7);
      *v8 = *v9;
      *(_OWORD *)(v4 + 56) = v13;
      *(_QWORD *)(v4 + 72) = a2[9];
    }
    v14 = a3[6];
    v15 = (void *)(v4 + v14);
    v16 = (char *)a2 + v14;
    v17 = type metadata accessor for ImpressionMetrics(0);
    v18 = *(_QWORD *)(v17 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
    {
      v19 = sub_5C154(&qword_31F480);
      memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v18 + 16))(v15, v16, v17);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
    }
    v20 = a3[7];
    v21 = v4 + v20;
    v22 = (uint64_t)a2 + v20;
    v23 = *(_QWORD *)v22;
    v24 = *(_QWORD *)(v22 + 8);
    v25 = *(_BYTE *)(v22 + 16);
    sub_884D0(*(_QWORD *)v22, v24);
    *(_QWORD *)v21 = v23;
    *(_QWORD *)(v21 + 8) = v24;
    *(_BYTE *)(v21 + 16) = v25;
    v26 = a3[8];
    v27 = a3[9];
    v28 = (_QWORD *)(v4 + v26);
    v29 = (uint64_t *)((char *)a2 + v26);
    v30 = v29[1];
    *v28 = *v29;
    v28[1] = v30;
    v31 = v4 + v27;
    v32 = *(uint64_t *)((char *)a2 + v27);
    v33 = *(uint64_t *)((char *)a2 + v27 + 8);
    v34 = *((_BYTE *)a2 + v27 + 16);
    swift_bridgeObjectRetain(v30);
    sub_884D8(v32, v33, v34);
    *(_QWORD *)v31 = v32;
    *(_QWORD *)(v31 + 8) = v33;
    *(_BYTE *)(v31 + 16) = v34;
    *(_OWORD *)(v4 + a3[10]) = *(_OWORD *)((char *)a2 + a3[10]);
  }
  return v4;
}

uint64_t sub_884D0(uint64_t a1, uint64_t a2)
{
  return swift_bridgeObjectRetain(a2);
}

uint64_t sub_884D8(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if ((a3 & 1) != 0)
    return swift_bridgeObjectRetain(a2);
  return result;
}

uint64_t sub_884E8(_QWORD *a1, int *a2)
{
  char *v4;
  uint64_t v5;
  uint64_t v6;

  _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(a1);
  if (a1[8])
    _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(a1 + 5);
  v4 = (char *)a1 + a2[6];
  v5 = type metadata accessor for ImpressionMetrics(0);
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
    (*(void (**)(char *, uint64_t))(v6 + 8))(v4, v5);
  sub_885A0(*(_QWORD *)((char *)a1 + a2[7]), *(_QWORD *)((char *)a1 + a2[7] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)((char *)a1 + a2[8] + 8));
  return sub_885A8(*(_QWORD *)((char *)a1 + a2[9]), *(_QWORD *)((char *)a1 + a2[9] + 8), *((_BYTE *)a1 + a2[9] + 16));
}

uint64_t sub_885A0(uint64_t a1, uint64_t a2)
{
  return swift_bridgeObjectRelease(a2);
}

uint64_t sub_885A8(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if ((a3 & 1) != 0)
    return swift_bridgeObjectRelease(a2);
  return result;
}

uint64_t sub_885B8(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  _OWORD *v7;
  _OWORD *v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  void *v13;
  const void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;

  v6 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v6;
  (**(void (***)(void))(v6 - 8))();
  v7 = (_OWORD *)(a1 + 40);
  v8 = (_OWORD *)(a2 + 40);
  v9 = *(_QWORD *)(a2 + 64);
  if (v9)
  {
    v10 = *(_QWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 64) = v9;
    *(_QWORD *)(a1 + 72) = v10;
    (**(void (***)(_OWORD *, _OWORD *))(v9 - 8))(v7, v8);
  }
  else
  {
    v11 = *(_OWORD *)(a2 + 56);
    *v7 = *v8;
    *(_OWORD *)(a1 + 56) = v11;
    *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  }
  v12 = a3[6];
  v13 = (void *)(a1 + v12);
  v14 = (const void *)(a2 + v12);
  v15 = type metadata accessor for ImpressionMetrics(0);
  v16 = *(_QWORD *)(v15 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
  {
    v17 = sub_5C154(&qword_31F480);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v16 + 16))(v13, v14, v15);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  v18 = a3[7];
  v19 = a1 + v18;
  v20 = a2 + v18;
  v21 = *(_QWORD *)v20;
  v22 = *(_QWORD *)(v20 + 8);
  v23 = *(_BYTE *)(v20 + 16);
  sub_884D0(*(_QWORD *)v20, v22);
  *(_QWORD *)v19 = v21;
  *(_QWORD *)(v19 + 8) = v22;
  *(_BYTE *)(v19 + 16) = v23;
  v24 = a3[8];
  v25 = a3[9];
  v26 = (_QWORD *)(a1 + v24);
  v27 = (_QWORD *)(a2 + v24);
  v28 = v27[1];
  *v26 = *v27;
  v26[1] = v28;
  v29 = a1 + v25;
  v30 = *(_QWORD *)(a2 + v25);
  v31 = *(_QWORD *)(a2 + v25 + 8);
  v32 = *(_BYTE *)(a2 + v25 + 16);
  swift_bridgeObjectRetain(v28);
  sub_884D8(v30, v31, v32);
  *(_QWORD *)v29 = v30;
  *(_QWORD *)(v29 + 8) = v31;
  *(_BYTE *)(v29 + 16) = v32;
  *(_OWORD *)(a1 + a3[10]) = *(_OWORD *)(a2 + a3[10]);
  return a1;
}

uint64_t sub_88744(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  void *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(void *, uint64_t, uint64_t);
  int v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  _QWORD *v41;
  _QWORD *v42;

  sub_65938((_QWORD *)a1, (_QWORD *)a2);
  v6 = *(_QWORD *)(a2 + 64);
  if (*(_QWORD *)(a1 + 64))
  {
    if (v6)
    {
      sub_65938((_QWORD *)(a1 + 40), (_QWORD *)(a2 + 40));
      goto LABEL_8;
    }
    _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((_QWORD *)(a1 + 40));
  }
  else if (v6)
  {
    *(_QWORD *)(a1 + 64) = v6;
    *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
    (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1 + 40, a2 + 40);
    goto LABEL_8;
  }
  v7 = *(_OWORD *)(a2 + 40);
  v8 = *(_OWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 40) = v7;
  *(_OWORD *)(a1 + 56) = v8;
LABEL_8:
  v9 = a3[6];
  v10 = (void *)(a1 + v9);
  v11 = (void *)(a2 + v9);
  v12 = type metadata accessor for ImpressionMetrics(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v13 + 48);
  v15 = v14(v10, 1, v12);
  v16 = v14(v11, 1, v12);
  if (!v15)
  {
    if (!v16)
    {
      (*(void (**)(void *, void *, uint64_t))(v13 + 24))(v10, v11, v12);
      goto LABEL_14;
    }
    (*(void (**)(void *, uint64_t))(v13 + 8))(v10, v12);
    goto LABEL_13;
  }
  if (v16)
  {
LABEL_13:
    v17 = sub_5C154(&qword_31F480);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_14;
  }
  (*(void (**)(void *, void *, uint64_t))(v13 + 16))(v10, v11, v12);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
LABEL_14:
  v18 = a3[7];
  v19 = a1 + v18;
  v20 = a2 + v18;
  v21 = *(_QWORD *)v20;
  v22 = *(_QWORD *)(v20 + 8);
  v23 = *(_BYTE *)(v20 + 16);
  sub_884D0(*(_QWORD *)v20, v22);
  v24 = *(_QWORD *)v19;
  v25 = *(_QWORD *)(v19 + 8);
  *(_QWORD *)v19 = v21;
  *(_QWORD *)(v19 + 8) = v22;
  *(_BYTE *)(v19 + 16) = v23;
  sub_885A0(v24, v25);
  v26 = a3[8];
  v27 = (_QWORD *)(a1 + v26);
  v28 = (_QWORD *)(a2 + v26);
  *v27 = *v28;
  v29 = v28[1];
  v30 = v27[1];
  v27[1] = v29;
  swift_bridgeObjectRetain(v29);
  swift_bridgeObjectRelease(v30);
  v31 = a3[9];
  v32 = a1 + v31;
  v33 = a2 + v31;
  v34 = *(_QWORD *)v33;
  v35 = *(_QWORD *)(v33 + 8);
  v36 = *(_BYTE *)(v33 + 16);
  sub_884D8(*(_QWORD *)v33, v35, v36);
  v37 = *(_QWORD *)v32;
  v38 = *(_QWORD *)(v32 + 8);
  v39 = *(_BYTE *)(v32 + 16);
  *(_QWORD *)v32 = v34;
  *(_QWORD *)(v32 + 8) = v35;
  *(_BYTE *)(v32 + 16) = v36;
  sub_885A8(v37, v38, v39);
  v40 = a3[10];
  v41 = (_QWORD *)(a1 + v40);
  v42 = (_QWORD *)(a2 + v40);
  *v41 = *v42;
  v41[1] = v42[1];
  return a1;
}

uint64_t sub_88978(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  void *v9;
  const void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  v7 = *(_OWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  v8 = a3[6];
  v9 = (void *)(a1 + v8);
  v10 = (const void *)(a2 + v8);
  *(_OWORD *)(a1 + 56) = v7;
  v11 = type metadata accessor for ImpressionMetrics(0);
  v12 = *(_QWORD *)(v11 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
  {
    v13 = sub_5C154(&qword_31F480);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v12 + 32))(v9, v10, v11);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  v14 = a3[7];
  v15 = a3[8];
  v16 = a1 + v14;
  v17 = a2 + v14;
  *(_OWORD *)v16 = *(_OWORD *)v17;
  *(_BYTE *)(v16 + 16) = *(_BYTE *)(v17 + 16);
  *(_OWORD *)(a1 + v15) = *(_OWORD *)(a2 + v15);
  v18 = a3[9];
  v19 = a3[10];
  v20 = a1 + v18;
  v21 = a2 + v18;
  *(_BYTE *)(v20 + 16) = *(_BYTE *)(v21 + 16);
  *(_OWORD *)v20 = *(_OWORD *)v21;
  *(_OWORD *)(a1 + v19) = *(_OWORD *)(a2 + v19);
  return a1;
}

uint64_t sub_88AAC(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  void *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(void *, uint64_t, uint64_t);
  int v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  char v35;

  _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((_QWORD *)a1);
  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  if (*(_QWORD *)(a1 + 64))
    _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((_QWORD *)(a1 + 40));
  v7 = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = v7;
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  v8 = a3[6];
  v9 = (void *)(a1 + v8);
  v10 = (void *)(a2 + v8);
  v11 = type metadata accessor for ImpressionMetrics(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v12 + 48);
  v14 = v13(v9, 1, v11);
  v15 = v13(v10, 1, v11);
  if (!v14)
  {
    if (!v15)
    {
      (*(void (**)(void *, void *, uint64_t))(v12 + 40))(v9, v10, v11);
      goto LABEL_9;
    }
    (*(void (**)(void *, uint64_t))(v12 + 8))(v9, v11);
    goto LABEL_8;
  }
  if (v15)
  {
LABEL_8:
    v16 = sub_5C154(&qword_31F480);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    goto LABEL_9;
  }
  (*(void (**)(void *, void *, uint64_t))(v12 + 32))(v9, v10, v11);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
LABEL_9:
  v17 = a3[7];
  v18 = a1 + v17;
  v19 = a2 + v17;
  v20 = *(_BYTE *)(v19 + 16);
  v21 = *(_QWORD *)v18;
  v22 = *(_QWORD *)(v18 + 8);
  *(_OWORD *)v18 = *(_OWORD *)v19;
  *(_BYTE *)(v18 + 16) = v20;
  sub_885A0(v21, v22);
  v23 = a3[8];
  v24 = (_QWORD *)(a1 + v23);
  v25 = (uint64_t *)(a2 + v23);
  v27 = *v25;
  v26 = v25[1];
  v28 = v24[1];
  *v24 = v27;
  v24[1] = v26;
  swift_bridgeObjectRelease(v28);
  v29 = a3[9];
  v30 = a1 + v29;
  v31 = a2 + v29;
  v32 = *(_BYTE *)(v31 + 16);
  v33 = *(_QWORD *)v30;
  v34 = *(_QWORD *)(v30 + 8);
  v35 = *(_BYTE *)(v30 + 16);
  *(_OWORD *)v30 = *(_OWORD *)v31;
  *(_BYTE *)(v30 + 16) = v32;
  sub_885A8(v33, v34, v35);
  *(_OWORD *)(a1 + a3[10]) = *(_OWORD *)(a2 + a3[10]);
  return a1;
}

uint64_t sub_88C70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_88C7C);
}

uint64_t sub_88C7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_5C154(&qword_31F480);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v8);
  }
}

uint64_t sub_88CFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_88D08);
}

uint64_t sub_88D08(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 24) = (a2 - 1);
  }
  else
  {
    v7 = sub_5C154(&qword_31F480);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for InfoItemComponentModel(uint64_t a1)
{
  return sub_64960(a1, (uint64_t *)&unk_320AB8, (uint64_t)&nominal type descriptor for InfoItemComponentModel);
}

void sub_88D94(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[7];

  v4[0] = "(";
  v4[1] = &unk_258F20;
  sub_8C25C(319, (unint64_t *)&qword_320AC8, (uint64_t (*)(uint64_t))&type metadata accessor for ImpressionMetrics, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
  if (v3 <= 0x3F)
  {
    v4[2] = *(_QWORD *)(v2 - 8) + 64;
    v4[3] = &unk_258F38;
    v4[4] = &unk_258F50;
    v4[5] = &unk_258F38;
    v4[6] = &unk_258F68;
    swift_initStructMetadata(a1, 256, 7, v4, a1 + 16);
  }
}

uint64_t sub_88E48(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_88E70 + 4 * byte_258EC0[a1]))(25705, 0xE200000000000000);
}

uint64_t sub_88E70()
{
  return 0x6575676573;
}

unint64_t sub_88E84()
{
  return 0xD000000000000011;
}

uint64_t sub_88EA0()
{
  return 0x6C6F626D7973;
}

uint64_t sub_88EB4()
{
  return 0x776F7262657965;
}

uint64_t sub_88ECC()
{
  return 0x656C746974;
}

uint64_t sub_88EE0()
{
  return 0x696C41656D617266;
}

uint64_t sub_88F04@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int *v30;
  unint64_t v31;
  char v32;
  char *v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  unint64_t v37;
  char v38;
  char *v39;
  unint64_t v40;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  char *v45;
  int *v46;
  uint64_t v47;
  __int128 v48;
  __int128 v49;
  uint64_t v50;
  __int128 v51;
  __int128 v52;
  uint64_t v53;
  uint64_t v54;

  v42 = a2;
  v3 = sub_5C154(&qword_31F480);
  __chkstk_darwin(v3);
  v5 = (char *)&v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = sub_5C154(&qword_320B80);
  v6 = *(_QWORD *)(v43 - 8);
  __chkstk_darwin(v43);
  v8 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for InfoItemComponentModel(0);
  __chkstk_darwin(v9);
  v11 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = v11 + 40;
  v53 = 0;
  v51 = 0u;
  v52 = 0u;
  v50 = 0;
  v48 = 0u;
  v49 = 0u;
  sub_8B354((uint64_t)&v51, (uint64_t)&v48);
  v12 = v49;
  *(_OWORD *)(v11 + 40) = v48;
  *(_OWORD *)(v11 + 56) = v12;
  *((_QWORD *)v11 + 9) = v50;
  sub_5E09C((uint64_t)&v51, (uint64_t *)&unk_326210);
  v46 = (int *)v9;
  v13 = (uint64_t)&v11[*(int *)(v9 + 24)];
  v14 = type metadata accessor for ImpressionMetrics(0);
  v15 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56);
  v54 = v13;
  v15(v13, 1, 1, v14);
  v17 = a1[3];
  v16 = a1[4];
  v44 = a1;
  sub_66898(a1, v17);
  v18 = sub_8B39C();
  v19 = v47;
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for InfoItemComponentModel.CodingKeys, &type metadata for InfoItemComponentModel.CodingKeys, v18, v17, v16);
  if (v19)
  {
    v23 = (uint64_t)v45;
    _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(v44);
    sub_5E09C(v23, &qword_320B70);
    return sub_5E09C(v54, &qword_31F480);
  }
  else
  {
    v47 = v6;
    v20 = sub_5C154(&qword_320B78);
    LOBYTE(v48) = 0;
    v21 = sub_67060((unint64_t *)&qword_320B90, &qword_320B78, (uint64_t)&protocol conformance descriptor for CodeAnyHashable<A>);
    v22 = v43;
    KeyedDecodingContainer.decode<A>(_:forKey:)(&v51, v20, &v48, v43, v20, v21);
    v24 = v52;
    *(_OWORD *)v11 = v51;
    *((_OWORD *)v11 + 1) = v24;
    *((_QWORD *)v11 + 4) = v53;
    v25 = sub_5C154(&qword_320B70);
    LOBYTE(v48) = 1;
    v26 = sub_67060(&qword_320B98, &qword_320B70, (uint64_t)&protocol conformance descriptor for _CodeByKind_OrNil<A>);
    KeyedDecodingContainer.decode<A>(_:forKey:)(&v51, v25, &v48, v22, v25, v26);
    sub_8B3E0((uint64_t)&v51, (uint64_t)v45, &qword_320B70);
    LOBYTE(v51) = 2;
    v27 = sub_648E0(&qword_320BA0, (uint64_t (*)(uint64_t))&type metadata accessor for ImpressionMetrics, (uint64_t)&protocol conformance descriptor for ImpressionMetrics);
    v28 = (uint64_t)v5;
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)(v14, &v51, v43, v14, v27);
    v30 = v46;
    v29 = v47;
    sub_8B3E0(v28, v54, &qword_31F480);
    LOBYTE(v48) = 3;
    v31 = sub_8B424();
    KeyedDecodingContainer.decode<A>(_:forKey:)(&v51, &type metadata for CodeInfoItemSymbol, &v48, v43, &type metadata for CodeInfoItemSymbol, v31);
    v32 = v52;
    v33 = &v11[v30[7]];
    *(_OWORD *)v33 = v51;
    v33[16] = v32;
    LOBYTE(v51) = 4;
    v34 = KeyedDecodingContainer.decode(_:forKey:)(&v51, v43);
    v35 = (uint64_t *)&v11[v30[8]];
    *v35 = v34;
    v35[1] = v36;
    LOBYTE(v48) = 5;
    v37 = sub_8B468();
    KeyedDecodingContainer.decode<A>(_:forKey:)(&v51, &type metadata for CodeInfoItemTitle, &v48, v43, &type metadata for CodeInfoItemTitle, v37);
    v38 = v52;
    v39 = &v11[v30[9]];
    *(_OWORD *)v39 = v51;
    v39[16] = v38;
    LOBYTE(v48) = 6;
    v40 = sub_8B4AC();
    KeyedDecodingContainer.decode<A>(_:forKey:)(&v51, &type metadata for AlignmentSpec, &v48, v43, &type metadata for AlignmentSpec, v40);
    (*(void (**)(char *, uint64_t))(v29 + 8))(v8, v43);
    *(_OWORD *)&v11[v30[10]] = v51;
    sub_8B4F0((uint64_t)v11, v42);
    _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(v44);
    return sub_8B534((uint64_t)v11);
  }
}

uint64_t sub_894D4()
{
  unsigned __int8 *v0;

  return sub_88E48(*v0);
}

uint64_t sub_894DC@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_8C4DC(a1, a2);
  *a3 = result;
  return result;
}

void sub_89500(_BYTE *a1@<X8>)
{
  *a1 = 7;
}

uint64_t sub_8950C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_8B39C();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_89534(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_8B39C();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t ReviewBrickComponentModel.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_5E1A4(v1, a1, &qword_320B78);
}

uint64_t ReviewBrickComponentModel.segue.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  _BYTE v4[40];

  sub_5E1A4(v1 + 40, (uint64_t)v4, &qword_320B70);
  return sub_66F14((uint64_t)v4, a1, (uint64_t *)&unk_326210);
}

uint64_t sub_895D0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_88F04(a1, a2);
}

uint64_t sub_895E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_5E1A4(v2 + *(int *)(a1 + 24), a2, &qword_31F480);
}

uint64_t sub_8960C()
{
  return sub_648E0(&qword_320B10, type metadata accessor for InfoItemComponentModel, (uint64_t)&unk_258F80);
}

double sub_89638@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char v7;
  double v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t KeyPath;
  char v25;
  char v26;
  char v27;
  char v28;
  double result;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  double v37[2];
  int v38;
  __int128 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _BYTE v44[7];
  char v45;
  _BYTE v46[7];
  char v47;
  _BYTE v48[7];
  char v49;
  _BYTE v50[7];
  _BYTE v51[7];
  char v52;

  v3 = type metadata accessor for ColorConstants(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_89880(v1, &v39);
  *(_OWORD *)v37 = v39;
  v35 = v41;
  v36 = v40;
  v7 = v42;
  v38 = static Edge.Set.leading.getter();
  v8 = EdgeInsets.init(_all:)(-6.0);
  v10 = v9;
  v12 = v11;
  v14 = v13;
  type metadata accessor for InfoItemSymbolView(0);
  v15 = sub_5C154(&qword_320BC0);
  v16 = ScaledMetric.wrappedValue.getter(&v39, v15);
  v17 = v39;
  v18 = static Alignment.center.getter(v16);
  _FrameLayout.init(width:height:alignment:)(&v39, v17, 0, 0, 1, v18, v19);
  v20 = v39;
  v21 = v40;
  v34 = v42;
  v33 = v43;
  v52 = v7;
  v49 = 0;
  v47 = BYTE8(v39);
  v45 = v41;
  v22 = sub_76AA0((uint64_t)v6);
  v23 = ColorConstants.booksLabel.getter(v22);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  KeyPath = swift_getKeyPath(&off_259230);
  v25 = v52;
  v26 = v49;
  v27 = v47;
  v28 = v45;
  result = v37[0];
  *(_OWORD *)a1 = *(_OWORD *)v37;
  v30 = v35;
  *(_QWORD *)(a1 + 16) = v36;
  *(_QWORD *)(a1 + 24) = v30;
  *(_BYTE *)(a1 + 32) = v25;
  *(_DWORD *)(a1 + 33) = *(_DWORD *)v51;
  *(_DWORD *)(a1 + 36) = *(_DWORD *)&v51[3];
  *(_BYTE *)(a1 + 40) = v38;
  *(_DWORD *)(a1 + 41) = *(_DWORD *)v50;
  *(_DWORD *)(a1 + 44) = *(_DWORD *)&v50[3];
  *(double *)(a1 + 48) = v8;
  *(_QWORD *)(a1 + 56) = v10;
  *(_QWORD *)(a1 + 64) = v12;
  *(_QWORD *)(a1 + 72) = v14;
  *(_BYTE *)(a1 + 80) = v26;
  *(_DWORD *)(a1 + 84) = *(_DWORD *)&v48[3];
  *(_DWORD *)(a1 + 81) = *(_DWORD *)v48;
  *(_QWORD *)(a1 + 88) = v20;
  *(_BYTE *)(a1 + 96) = v27;
  *(_DWORD *)(a1 + 97) = *(_DWORD *)v46;
  *(_DWORD *)(a1 + 100) = *(_DWORD *)&v46[3];
  *(_QWORD *)(a1 + 104) = v21;
  *(_BYTE *)(a1 + 112) = v28;
  v31 = *(_DWORD *)v44;
  *(_DWORD *)(a1 + 116) = *(_DWORD *)&v44[3];
  *(_DWORD *)(a1 + 113) = v31;
  v32 = v33;
  *(_QWORD *)(a1 + 120) = v34;
  *(_QWORD *)(a1 + 128) = v32;
  *(_QWORD *)(a1 + 136) = KeyPath;
  *(_QWORD *)(a1 + 144) = v23;
  return result;
}

double sub_89880@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  double v22;
  uint64_t v23;
  uint64_t KeyPath;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  double v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  double result;
  __int128 v57;
  char v58;
  _OWORD *v59;
  _BYTE v60[4];
  unsigned int v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _OWORD *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char v70;
  _OWORD v71[2];
  char v72;

  v65 = a2;
  v3 = sub_5C154(&qword_31F7E8);
  v4 = __chkstk_darwin(v3);
  v6 = &v60[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = type metadata accessor for Font.TextStyle(0, v4);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = &v60[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = type metadata accessor for FontConstants(0, v9);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = &v60[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v16 = (uint64_t *)(a1 + *(int *)(type metadata accessor for InfoItemSymbolView(0) + 28));
  v18 = *v16;
  v17 = v16[1];
  if ((v16[2] & 1) != 0)
  {
    swift_bridgeObjectRetain(v17);
    v19 = Image.init(systemName:)(v18, v17);
    sub_77618((uint64_t)v15);
    (*(void (**)(_BYTE *, _QWORD, uint64_t))(v8 + 104))(v11, enum case for Font.TextStyle.body(_:), v7);
    v20 = type metadata accessor for Font.Design(0);
    v21 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v6, 1, 1, v20);
    v22 = static Font.Weight.medium.getter(v21);
    v23 = static Font.system(_:design:weight:)(v11, v6, *(_QWORD *)&v22, 0);
    sub_5E09C((uint64_t)v6, &qword_31F7E8);
    (*(void (**)(_BYTE *, uint64_t))(v8 + 8))(v11, v7);
    (*(void (**)(_BYTE *, uint64_t))(v13 + 8))(v15, v12);
    KeyPath = swift_getKeyPath(&unk_259260);
    v66 = v19;
    v67 = KeyPath;
    v68 = v23;
    v69 = 0;
    v70 = 1;
  }
  else
  {
    *(_QWORD *)&v71[0] = *v16;
    *((_QWORD *)&v71[0] + 1) = v17;
    v25 = sub_668F8();
    swift_bridgeObjectRetain(v17);
    v26 = Text.init<A>(_:)(v71, &type metadata for String, v25);
    v62 = v27;
    v63 = v26;
    v64 = v28;
    v61 = v29 & 1;
    sub_77618((uint64_t)v15);
    (*(void (**)(_BYTE *, _QWORD, uint64_t))(v8 + 104))(v11, enum case for Font.TextStyle.body(_:), v7);
    v30 = enum case for Font.Design.rounded(_:);
    v31 = type metadata accessor for Font.Design(0);
    v32 = *(_QWORD *)(v31 - 8);
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v32 + 104))(v6, v30, v31);
    v33 = (*(uint64_t (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v32 + 56))(v6, 0, 1, v31);
    v34 = static Font.Weight.medium.getter(v33);
    v35 = static Font.system(_:design:weight:)(v11, v6, *(_QWORD *)&v34, 0);
    sub_5E09C((uint64_t)v6, &qword_31F7E8);
    (*(void (**)(_BYTE *, uint64_t))(v8 + 8))(v11, v7);
    (*(void (**)(_BYTE *, uint64_t))(v13 + 8))(v15, v12);
    v37 = v62;
    v36 = v63;
    v38 = v61;
    v39 = v64;
    v40 = Text.font(_:)(v35, v63, v62, v61, v64);
    v42 = v41;
    v44 = v43;
    v46 = v45 & 1;
    sub_6693C(v36, v37, v38);
    swift_release(v35);
    swift_bridgeObjectRelease(v39);
    v47 = Text.tracking(_:)(v40, v42, v46, v44, -0.75);
    v49 = v48;
    v51 = v50;
    v53 = v52 & 1;
    sub_6693C(v40, v42, v46);
    swift_bridgeObjectRelease(v44);
    v66 = v47;
    v67 = v49;
    v68 = v53;
    v69 = v51;
    v70 = 0;
  }
  v54 = sub_5C154(&qword_3205D0);
  v55 = sub_7B9E4();
  _ConditionalContent<>.init(storage:)(&v66, &type metadata for Text, v54, &protocol witness table for Text, v55);
  result = *(double *)v71;
  v57 = v71[1];
  v58 = v72;
  v59 = v65;
  *v65 = v71[0];
  v59[1] = v57;
  *((_BYTE *)v59 + 32) = v58;
  return result;
}

uint64_t sub_89C40()
{
  _BYTE *v0;

  if (*v0)
    return 0x63496D6574737973;
  else
    return 1954047348;
}

uint64_t sub_89C78@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_8C7AC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_89C9C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_8E03C();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_89CC4(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_8E03C();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_89CF4()
{
  return 12383;
}

uint64_t sub_89D04(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_8E080();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_89D2C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_8E080();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_89D54(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_8E0C4();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_89D7C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_8E0C4();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_89DA4@<X0>(uint64_t a1@<X8>)
{
  return sub_8AA98((uint64_t (*)(void))sub_8C898, a1);
}

uint64_t sub_89DC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD v30[2];
  _QWORD v31[2];

  v8 = sub_5C154(&qword_320B18);
  __chkstk_darwin(v8);
  v10 = (char *)v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_5C154(&qword_320B20);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a3 & 1) != 0)
  {
    v31[0] = a1;
    v31[1] = a2;
    v25 = sub_668F8();
    swift_bridgeObjectRetain(a2);
    *(_QWORD *)v10 = Text.init<A>(_:)(v31, &type metadata for String, v25);
    *((_QWORD *)v10 + 1) = v26;
    v10[16] = v27 & 1;
    *((_QWORD *)v10 + 3) = v28;
    swift_storeEnumTagMultiPayload(v10, v8, 1);
    v29 = sub_67060(&qword_320B28, &qword_320B20, (uint64_t)&protocol conformance descriptor for JetLocalize<A, B, C>);
    return _ConditionalContent<>.init(storage:)(v10, v11, &type metadata for Text, v29, &protocol witness table for Text);
  }
  else
  {
    v15 = swift_allocObject(&unk_2E8CD8, 41, 7);
    *(_QWORD *)(v15 + 16) = a1;
    *(_QWORD *)(v15 + 24) = a1;
    *(_QWORD *)(v15 + 32) = a2;
    *(_BYTE *)(v15 + 40) = 0;
    v16 = sub_5C154(&qword_320B30);
    v17 = type metadata accessor for _JetLocalizeDefaultWorking(0);
    v30[1] = a4;
    v18 = type metadata accessor for _JetLocalizeDefaultFailed(0);
    v30[0] = v8;
    v19 = v18;
    v20 = sub_8B1E0();
    v21 = sub_648E0(&qword_320B58, (uint64_t (*)(uint64_t))&type metadata accessor for _JetLocalizeDefaultWorking, (uint64_t)&protocol conformance descriptor for _JetLocalizeDefaultWorking);
    v22 = sub_648E0(&qword_320B60, (uint64_t (*)(uint64_t))&type metadata accessor for _JetLocalizeDefaultFailed, (uint64_t)&protocol conformance descriptor for _JetLocalizeDefaultFailed);
    JetLocalize.init(working:failed:content:)(&j___s18_JetEngine_SwiftUI01_A22LocalizeDefaultWorkingVACycfC, 0, sub_1AEDCC, 0, sub_8A620, v15, v16, v17, v19, v20, v21, v22);
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v10, v14, v11);
    swift_storeEnumTagMultiPayload(v10, v30[0], 0);
    v23 = sub_67060(&qword_320B28, &qword_320B20, (uint64_t)&protocol conformance descriptor for JetLocalize<A, B, C>);
    _ConditionalContent<>.init(storage:)(v10, v11, &type metadata for Text, v23, &protocol witness table for Text);
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
}

uint64_t sub_8A06C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t a5@<X8>, double a6@<D0>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  __n128 v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, _QWORD, uint64_t);
  uint64_t result;
  uint64_t v35;
  char *v36;
  void (*v37)(char *, char *, uint64_t);
  char *v38;
  void (*v39)(char *, char *, uint64_t);
  uint64_t v40;
  void (*v41)(char *, uint64_t);
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  double v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  int v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  _BYTE v87[48];

  v73 = a4;
  v84 = a2;
  v85 = a3;
  v86 = a1;
  v76 = a5;
  v7 = type metadata accessor for LocalizerRequest(0);
  __chkstk_darwin(v7);
  v83 = (char *)&v70 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_5C154(&qword_31F5F8);
  __chkstk_darwin(v9);
  v11 = (char *)&v70 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v70 - v13;
  v15 = type metadata accessor for DynamicTypeSize(0);
  v16 = *(_QWORD **)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)&v70 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v21 = (char *)&v70 - v20;
  v78 = sub_5C154(&qword_31F600);
  __chkstk_darwin(v78);
  v72 = (char *)&v70 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = __chkstk_darwin(v23);
  v26 = (char *)&v70 - v25;
  v27 = type metadata accessor for StarRatingView(0, v24);
  v75 = *(_QWORD *)(v27 - 8);
  __chkstk_darwin(v27);
  v29 = (char *)&v70 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = sub_5C154(&qword_320B68);
  v79 = *(_QWORD *)(v30 - 8);
  v80 = v30;
  __chkstk_darwin(v30);
  v77 = (char *)&v70 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v81 = sub_5C154(&qword_320B48);
  __chkstk_darwin(v81);
  v82 = (char *)&v70 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v74 = v29;
  StarRatingView.init(rating:)(a6);
  v33 = (void (*)(char *, _QWORD, uint64_t))v16[13];
  v33(v21, enum case for DynamicTypeSize.xSmall(_:), v15);
  v33(v18, enum case for DynamicTypeSize.accessibility3(_:), v15);
  sub_648E0(&qword_31F610, (uint64_t (*)(uint64_t))&type metadata accessor for DynamicTypeSize, (uint64_t)&protocol conformance descriptor for DynamicTypeSize);
  result = dispatch thunk of static Comparable.<= infix(_:_:)(v21, v18, v15);
  if ((result & 1) != 0)
  {
    v73 &= 1u;
    v71 = v27;
    v35 = v9;
    v36 = &v14[*(int *)(v9 + 48)];
    v37 = (void (*)(char *, char *, uint64_t))v16[4];
    v37(v14, v21, v15);
    v37(v36, v18, v15);
    v38 = &v11[*(int *)(v35 + 48)];
    v39 = (void (*)(char *, char *, uint64_t))v16[2];
    v39(v11, v14, v15);
    v39(v38, v36, v15);
    v40 = (uint64_t)v72;
    v37(v72, v11, v15);
    v41 = (void (*)(char *, uint64_t))v16[1];
    v41(v38, v15);
    v42 = &v11[*(int *)(v35 + 48)];
    v37(v11, v14, v15);
    v37(v42, v36, v15);
    v43 = v78;
    v37((char *)(v40 + *(int *)(v78 + 36)), v42, v15);
    v41(v11, v15);
    sub_66F14(v40, (uint64_t)v26, &qword_31F600);
    v44 = sub_648E0(&qword_320B50, (uint64_t (*)(uint64_t))&type metadata accessor for StarRatingView, (uint64_t)&protocol conformance descriptor for StarRatingView);
    sub_67060(&qword_31F620, &qword_31F600, (uint64_t)&protocol conformance descriptor for ClosedRange<A>);
    v45 = v77;
    v46 = v71;
    v47 = v74;
    View.dynamicTypeSize<A>(_:)(v26, v71, v43, v44);
    sub_5E09C((uint64_t)v26, &qword_31F600);
    v48 = (*(uint64_t (**)(char *, uint64_t))(v75 + 8))(v47, v46);
    LOBYTE(v44) = static Edge.Set.top.getter(v48);
    v49 = EdgeInsets.init(_all:)(2.0);
    v51 = v50;
    v53 = v52;
    v55 = v54;
    v57 = v79;
    v56 = v80;
    v58 = (uint64_t)v82;
    (*(void (**)(char *, char *, uint64_t))(v79 + 16))(v82, v45, v80);
    v59 = v81;
    v60 = v58 + *(int *)(v81 + 36);
    *(_BYTE *)v60 = v44;
    *(double *)(v60 + 8) = v49;
    *(_QWORD *)(v60 + 16) = v51;
    *(_QWORD *)(v60 + 24) = v53;
    *(_QWORD *)(v60 + 32) = v55;
    *(_BYTE *)(v60 + 40) = 0;
    (*(void (**)(char *, uint64_t))(v57 + 8))(v45, v56);
    v61 = v83;
    sub_8A630(a6);
    sub_5E0D8(v86, (uint64_t)v87);
    v62 = Text.init(_:localizer:)(v61, v87);
    v64 = v63;
    v66 = v65;
    v68 = v67 & 1;
    v69 = sub_8B264();
    View.accessibilityLabel(_:)(v62, v64, v68, v66, v59, v69);
    sub_6693C(v62, v64, v68);
    swift_bridgeObjectRelease(v66);
    return sub_5E09C(v58, &qword_320B48);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_8A5F8()
{
  uint64_t v0;

  sub_885A8(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_BYTE *)(v0 + 40));
  return swift_deallocObject(v0, 41, 7);
}

uint64_t sub_8A620@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_8A06C(a1, *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(unsigned __int8 *)(v2 + 40), a2, *(double *)(v2 + 16));
}

void sub_8A630(double a1)
{
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t inited;
  unint64_t v18;
  __n128 v19;
  __n128 v20;
  uint64_t v21;
  id v22;
  _BYTE v23[64];

  v2 = type metadata accessor for LocalizerLookupStrategy(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for LocalizerDefaultValue(0, v4);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = objc_msgSend(objc_allocWithZone((Class)NSNumberFormatter), "init");
  objc_msgSend(v22, "setNumberStyle:", 1);
  objc_msgSend(v22, "setMaximumFractionDigits:", 1);
  objc_msgSend(v22, "setMinimumFractionDigits:", 1);
  v11 = objc_msgSend(objc_allocWithZone((Class)NSNumber), "initWithDouble:", a1);
  v12 = objc_msgSend(v22, "stringFromNumber:", v11);

  if (v12)
  {
    v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(v12);
    v21 = v8;
    v15 = v14;

    v16 = sub_5C154(&qword_3206C0);
    inited = swift_initStackObject(v16, v23);
    *(_OWORD *)(inited + 16) = xmmword_258070;
    *(_QWORD *)(inited + 32) = 0xD000000000000012;
    *(_QWORD *)(inited + 40) = 0x800000000026FCD0;
    *(_QWORD *)(inited + 48) = v13;
    *(_QWORD *)(inited + 56) = v15;
    v18 = sub_52A70(inited);
    LocalizerDefaultValue.init(stringLiteral:)("@@averageRatingValue@@ out of 5 star rating", 43, 2, v19);
    (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v6, enum case for LocalizerLookupStrategy.default(_:), v2);
    static LocalizerRequest.string(forKey:with:defaultValue:using:)(0xD00000000000001CLL, 0x800000000026FCB0, v18, v10, v6);

    v20 = swift_bridgeObjectRelease(v18);
    (*(void (**)(char *, uint64_t, __n128))(v3 + 8))(v6, v2, v20);
    (*(void (**)(char *, uint64_t))(v21 + 8))(v10, v7);
  }
  else
  {
    static LocalizerRequest.verbatim(_:)(0);

  }
}

uint64_t sub_8A8B4()
{
  _BYTE *v0;

  if (*v0)
    return 1954047348;
  else
    return 0x6974615272617473;
}

uint64_t sub_8A8EC@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_8CC5C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_8A910(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_8DF70();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_8A938(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_8DF70();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_8A960(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_8DFF8();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_8A988(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_8DFF8();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_8A9B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v6;
  uint64_t result;
  char v8;

  if (a1 == 12383 && a2 == 0xE200000000000000)
  {
    result = swift_bridgeObjectRelease(0xE200000000000000);
    v8 = 0;
  }
  else
  {
    v6 = _stringCompareWithSmolCheck(_:_:expecting:)(12383, 0xE200000000000000, a1, a2, 0);
    result = swift_bridgeObjectRelease(a2);
    v8 = v6 ^ 1;
  }
  *a3 = v8 & 1;
  return result;
}

uint64_t sub_8AA2C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_8DFB4();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_8AA54(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_8DFB4();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_8AA7C@<X0>(uint64_t a1@<X8>)
{
  return sub_8AA98((uint64_t (*)(void))sub_8CD48, a1);
}

uint64_t sub_8AA98@<X0>(uint64_t (*a1)(void)@<X3>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;
  char v6;

  result = a1();
  if (!v2)
  {
    *(_QWORD *)a2 = result;
    *(_QWORD *)(a2 + 8) = v5;
    *(_BYTE *)(a2 + 16) = v6 & 1;
  }
  return result;
}

uint64_t sub_8AACC(uint64_t a1)
{
  return String.hash(into:)(a1, 1635017060, 0xE400000000000000);
}

uint64_t sub_8AAE0@<X0>(uint64_t *a1@<X0>, BOOL *a2@<X8>)
{
  Swift::OpaquePointer v2;

  v2._rawValue = &off_2E63E0;
  return sub_8AE08(v2, a1, a2);
}

uint64_t sub_8AAEC()
{
  return 1635017060;
}

uint64_t sub_8AAFC@<X0>(Swift::String a1@<X1:X0>, BOOL *a2@<X8>)
{
  Swift::OpaquePointer v2;

  v2._rawValue = &off_2E6D88;
  return sub_8AE74(a1, v2, a2);
}

uint64_t sub_8AB08(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_8D448();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_8AB30(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_8D448();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_8AB58(char *a1, char *a2)
{
  return sub_196DE8(*a1, *a2);
}

Swift::Int sub_8AB64()
{
  unsigned __int8 *v0;
  int v1;
  uint64_t v2;
  unint64_t v3;
  _QWORD v5[9];

  v1 = *v0;
  Hasher.init(_seed:)(v5, 0);
  if (v1)
    v2 = 0x63496D6574737973;
  else
    v2 = 1954047348;
  if (v1)
    v3 = 0xEA00000000006E6FLL;
  else
    v3 = 0xE400000000000000;
  String.hash(into:)(v5, v2, v3);
  swift_bridgeObjectRelease(v3);
  return Hasher._finalize()();
}

uint64_t sub_8ABE0(uint64_t a1)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  if (*v1)
    v2 = 0x63496D6574737973;
  else
    v2 = 1954047348;
  if (*v1)
    v3 = 0xEA00000000006E6FLL;
  else
    v3 = 0xE400000000000000;
  String.hash(into:)(a1, v2, v3);
  return swift_bridgeObjectRelease(v3);
}

Swift::Int sub_8AC38(uint64_t a1)
{
  unsigned __int8 *v1;
  int v2;
  uint64_t v3;
  unint64_t v4;
  _QWORD v6[9];

  v2 = *v1;
  Hasher.init(_seed:)(v6, a1);
  if (v2)
    v3 = 0x63496D6574737973;
  else
    v3 = 1954047348;
  if (v2)
    v4 = 0xEA00000000006E6FLL;
  else
    v4 = 0xE400000000000000;
  String.hash(into:)(v6, v3, v4);
  swift_bridgeObjectRelease(v4);
  return Hasher._finalize()();
}

uint64_t sub_8ACB0@<X0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  Swift::OpaquePointer v2;

  v2._rawValue = &off_2E6390;
  return sub_8B078(v2, a1, a2);
}

void sub_8ACBC(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 1954047348;
  if (*v1)
    v2 = 0x63496D6574737973;
  v3 = 0xE400000000000000;
  if (*v1)
    v3 = 0xEA00000000006E6FLL;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_8ACF8@<X0>(Swift::String a1@<X1:X0>, char *a2@<X8>)
{
  Swift::OpaquePointer v2;

  v2._rawValue = &off_2E6390;
  return sub_8B118(a1, v2, a2);
}

uint64_t sub_8AD04(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_8D48C();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_8AD2C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_8D48C();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_8AD54@<X0>(uint64_t a1@<X8>)
{
  return sub_8AA98((uint64_t (*)(void))sub_8D148, a1);
}

Swift::Int sub_8AD70()
{
  _QWORD v1[9];

  Hasher.init(_seed:)(v1, 0);
  String.hash(into:)(v1, 1635017060, 0xE400000000000000);
  return Hasher._finalize()();
}

Swift::Int sub_8ADB8(uint64_t a1)
{
  _QWORD v2[9];

  Hasher.init(_seed:)(v2, a1);
  String.hash(into:)(v2, 1635017060, 0xE400000000000000);
  return Hasher._finalize()();
}

uint64_t sub_8ADFC@<X0>(uint64_t *a1@<X0>, BOOL *a2@<X8>)
{
  Swift::OpaquePointer v2;

  v2._rawValue = &off_2E6050;
  return sub_8AE08(v2, a1, a2);
}

uint64_t sub_8AE08@<X0>(Swift::OpaquePointer cases@<0:X3>, uint64_t *a2@<X0>, BOOL *a3@<X8>)
{
  Swift::String v4;
  void *v5;
  Swift::Int v6;
  uint64_t result;

  v4._countAndFlagsBits = *a2;
  v5 = (void *)a2[1];
  v4._object = v5;
  v6 = _findStringSwitchCase(cases:string:)(cases, v4);
  result = swift_bridgeObjectRelease(v5);
  *a3 = v6 != 0;
  return result;
}

void sub_8AE54(_QWORD *a1@<X8>)
{
  *a1 = 1635017060;
  a1[1] = 0xE400000000000000;
}

uint64_t sub_8AE68@<X0>(Swift::String a1@<X1:X0>, BOOL *a2@<X8>)
{
  Swift::OpaquePointer v2;

  v2._rawValue = &off_2E6DC0;
  return sub_8AE74(a1, v2, a2);
}

uint64_t sub_8AE74@<X0>(Swift::String string@<0:X0, 8:X1>, Swift::OpaquePointer cases@<0:X4>, BOOL *a3@<X8>)
{
  void *object;
  Swift::String v4;
  Swift::Int v6;
  uint64_t result;

  object = string._object;
  v4._countAndFlagsBits = string._countAndFlagsBits;
  v4._object = object;
  v6 = _findStringSwitchCase(cases:string:)(cases, v4);
  result = swift_bridgeObjectRelease(object);
  *a3 = v6 != 0;
  return result;
}

uint64_t sub_8AEC4(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_8D7D0();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_8AEEC(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_8D7D0();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_8AF14(char *a1, char *a2)
{
  return sub_196F1C(*a1, *a2);
}

Swift::Int sub_8AF20()
{
  unsigned __int8 *v0;
  int v1;
  uint64_t v2;
  unint64_t v3;
  _QWORD v5[9];

  v1 = *v0;
  Hasher.init(_seed:)(v5, 0);
  if (v1)
    v2 = 1954047348;
  else
    v2 = 0x6974615272617473;
  if (v1)
    v3 = 0xE400000000000000;
  else
    v3 = 0xEA0000000000676ELL;
  String.hash(into:)(v5, v2, v3);
  swift_bridgeObjectRelease(v3);
  return Hasher._finalize()();
}

uint64_t sub_8AF9C(uint64_t a1)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  if (*v1)
    v2 = 1954047348;
  else
    v2 = 0x6974615272617473;
  if (*v1)
    v3 = 0xE400000000000000;
  else
    v3 = 0xEA0000000000676ELL;
  String.hash(into:)(a1, v2, v3);
  return swift_bridgeObjectRelease(v3);
}

Swift::Int sub_8AFF4(uint64_t a1)
{
  unsigned __int8 *v1;
  int v2;
  uint64_t v3;
  unint64_t v4;
  _QWORD v6[9];

  v2 = *v1;
  Hasher.init(_seed:)(v6, a1);
  if (v2)
    v3 = 1954047348;
  else
    v3 = 0x6974615272617473;
  if (v2)
    v4 = 0xE400000000000000;
  else
    v4 = 0xEA0000000000676ELL;
  String.hash(into:)(v6, v3, v4);
  swift_bridgeObjectRelease(v4);
  return Hasher._finalize()();
}

uint64_t sub_8B06C@<X0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  Swift::OpaquePointer v2;

  v2._rawValue = &off_2E6000;
  return sub_8B078(v2, a1, a2);
}

uint64_t sub_8B078@<X0>(Swift::OpaquePointer cases@<0:X3>, uint64_t *a2@<X0>, char *a3@<X8>)
{
  Swift::String v4;
  void *v5;
  Swift::Int v6;
  uint64_t result;
  char v8;

  v4._countAndFlagsBits = *a2;
  v5 = (void *)a2[1];
  v4._object = v5;
  v6 = _findStringSwitchCase(cases:string:)(cases, v4);
  result = swift_bridgeObjectRelease(v5);
  if (v6 == 1)
    v8 = 1;
  else
    v8 = 2;
  if (!v6)
    v8 = 0;
  *a3 = v8;
  return result;
}

void sub_8B0D0(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 1954047348;
  if (!*v1)
    v2 = 0x6974615272617473;
  v3 = 0xEA0000000000676ELL;
  if (*v1)
    v3 = 0xE400000000000000;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_8B10C@<X0>(Swift::String a1@<X1:X0>, char *a2@<X8>)
{
  Swift::OpaquePointer v2;

  v2._rawValue = &off_2E6000;
  return sub_8B118(a1, v2, a2);
}

uint64_t sub_8B118@<X0>(Swift::String string@<0:X0, 8:X1>, Swift::OpaquePointer cases@<0:X4>, char *a3@<X8>)
{
  void *object;
  Swift::String v4;
  Swift::Int v6;
  uint64_t result;
  char v8;

  object = string._object;
  v4._countAndFlagsBits = string._countAndFlagsBits;
  v4._object = object;
  v6 = _findStringSwitchCase(cases:string:)(cases, v4);
  result = swift_bridgeObjectRelease(object);
  if (v6 == 1)
    v8 = 1;
  else
    v8 = 2;
  if (!v6)
    v8 = 0;
  *a3 = v8;
  return result;
}

uint64_t sub_8B174(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_8D814();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_8B19C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_8D814();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_8B1C4@<X0>(uint64_t a1@<X8>)
{
  return sub_8AA98((uint64_t (*)(void))sub_8D4D0, a1);
}

unint64_t sub_8B1E0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_320B38;
  if (!qword_320B38)
  {
    v1 = sub_667D0(&qword_320B30);
    sub_8B264();
    sub_648E0(&qword_31F710, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_320B38);
  }
  return result;
}

unint64_t sub_8B264()
{
  unint64_t result;
  uint64_t v1;
  __n128 v2;
  _QWORD v3[4];

  result = qword_320B40;
  if (!qword_320B40)
  {
    v1 = sub_667D0(&qword_320B48);
    v3[0] = type metadata accessor for StarRatingView(255, v2);
    v3[1] = sub_667D0(&qword_31F600);
    v3[2] = sub_648E0(&qword_320B50, (uint64_t (*)(uint64_t))&type metadata accessor for StarRatingView, (uint64_t)&protocol conformance descriptor for StarRatingView);
    v3[3] = sub_67060(&qword_31F620, &qword_31F600, (uint64_t)&protocol conformance descriptor for ClosedRange<A>);
    swift_getOpaqueTypeConformance2(v3, &opaque type descriptor for <<opaque return type of View.dynamicTypeSize<A>(_:)>>, 1);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_320B40);
  }
  return result;
}

uint64_t sub_8B354(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_5C154((uint64_t *)&unk_326210);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

unint64_t sub_8B39C()
{
  unint64_t result;

  result = qword_320B88;
  if (!qword_320B88)
  {
    result = swift_getWitnessTable(&unk_25918C, &type metadata for InfoItemComponentModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_320B88);
  }
  return result;
}

uint64_t sub_8B3E0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = sub_5C154(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

unint64_t sub_8B424()
{
  unint64_t result;

  result = qword_320BA8;
  if (!qword_320BA8)
  {
    result = swift_getWitnessTable(&unk_259164, &type metadata for CodeInfoItemSymbol);
    atomic_store(result, (unint64_t *)&qword_320BA8);
  }
  return result;
}

unint64_t sub_8B468()
{
  unint64_t result;

  result = qword_320BB0;
  if (!qword_320BB0)
  {
    result = swift_getWitnessTable(&unk_25913C, &type metadata for CodeInfoItemTitle);
    atomic_store(result, (unint64_t *)&qword_320BB0);
  }
  return result;
}

unint64_t sub_8B4AC()
{
  unint64_t result;

  result = qword_320BB8;
  if (!qword_320BB8)
  {
    result = swift_getWitnessTable(&unk_25A688, &type metadata for AlignmentSpec);
    atomic_store(result, (unint64_t *)&qword_320BB8);
  }
  return result;
}

uint64_t sub_8B4F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for InfoItemComponentModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_8B534(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for InfoItemComponentModel(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t getEnumTagSinglePayload for InfoItemComponentModel.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFA)
    goto LABEL_17;
  if (a2 + 6 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 6) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 6;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 6;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 6;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 7;
  v8 = v6 - 7;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for InfoItemComponentModel.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_8B64C + 4 * byte_258ECC[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_8B680 + 4 * byte_258EC7[v4]))();
}

uint64_t sub_8B680(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_8B688(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x8B690);
  return result;
}

uint64_t sub_8B69C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x8B6A4);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_8B6A8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_8B6B0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for InfoItemComponentModel.CodingKeys()
{
  return &type metadata for InfoItemComponentModel.CodingKeys;
}

uint64_t *sub_8B6CC(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v13);
  }
  else
  {
    v7 = sub_5C154(&qword_320290);
    if (swift_getEnumCaseMultiPayload(a2, v7) == 1)
    {
      v9 = type metadata accessor for FontConstants(0, v8);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
      v10 = a1;
      v11 = v7;
      v12 = 1;
    }
    else
    {
      v14 = *a2;
      *a1 = *a2;
      swift_retain(v14);
      v10 = a1;
      v11 = v7;
      v12 = 0;
    }
    swift_storeEnumTagMultiPayload(v10, v11, v12);
    v15 = a3[5];
    v16 = (uint64_t *)((char *)a1 + v15);
    v17 = (uint64_t *)((char *)a2 + v15);
    v18 = sub_5C154((uint64_t *)&unk_32A010);
    if (swift_getEnumCaseMultiPayload(v17, v18) == 1)
    {
      v19 = type metadata accessor for ColorConstants(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v16, v17, v19);
      v20 = v16;
      v21 = v18;
      v22 = 1;
    }
    else
    {
      v23 = *v17;
      *v16 = *v17;
      swift_retain(v23);
      v20 = v16;
      v21 = v18;
      v22 = 0;
    }
    swift_storeEnumTagMultiPayload(v20, v21, v22);
    v24 = a3[6];
    v25 = (char *)a1 + v24;
    v26 = (char *)a2 + v24;
    v27 = sub_5C154(&qword_320BC0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
    v28 = a3[7];
    v29 = (char *)a1 + v28;
    v30 = (char *)a2 + v28;
    v31 = *(_QWORD *)v30;
    v32 = *((_QWORD *)v30 + 1);
    LOBYTE(v25) = v30[16];
    sub_884D0(*(_QWORD *)v30, v32);
    *(_QWORD *)v29 = v31;
    *((_QWORD *)v29 + 1) = v32;
    v29[16] = (char)v25;
  }
  return a1;
}

uint64_t sub_8B878(_QWORD *a1, int *a2)
{
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;

  v4 = sub_5C154(&qword_320290);
  if (swift_getEnumCaseMultiPayload(a1, v4) == 1)
  {
    v6 = type metadata accessor for FontConstants(0, v5);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(a1, v6);
  }
  else
  {
    swift_release(*a1);
  }
  v7 = (_QWORD *)((char *)a1 + a2[5]);
  v8 = sub_5C154((uint64_t *)&unk_32A010);
  if (swift_getEnumCaseMultiPayload(v7, v8) == 1)
  {
    v9 = type metadata accessor for ColorConstants(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v7, v9);
  }
  else
  {
    swift_release(*v7);
  }
  v10 = (char *)a1 + a2[6];
  v11 = sub_5C154(&qword_320BC0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
  return sub_885A0(*(_QWORD *)((char *)a1 + a2[7]), *(_QWORD *)((char *)a1 + a2[7] + 8));
}

uint64_t *sub_8B970(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;

  v6 = sub_5C154(&qword_320290);
  if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
  {
    v8 = type metadata accessor for FontConstants(0, v7);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
    v9 = a1;
    v10 = v6;
    v11 = 1;
  }
  else
  {
    v12 = *a2;
    *a1 = *a2;
    swift_retain(v12);
    v9 = a1;
    v10 = v6;
    v11 = 0;
  }
  swift_storeEnumTagMultiPayload(v9, v10, v11);
  v13 = a3[5];
  v14 = (uint64_t *)((char *)a1 + v13);
  v15 = (uint64_t *)((char *)a2 + v13);
  v16 = sub_5C154((uint64_t *)&unk_32A010);
  if (swift_getEnumCaseMultiPayload(v15, v16) == 1)
  {
    v17 = type metadata accessor for ColorConstants(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v14, v15, v17);
    v18 = v14;
    v19 = v16;
    v20 = 1;
  }
  else
  {
    v21 = *v15;
    *v14 = *v15;
    swift_retain(v21);
    v18 = v14;
    v19 = v16;
    v20 = 0;
  }
  swift_storeEnumTagMultiPayload(v18, v19, v20);
  v22 = a3[6];
  v23 = (char *)a1 + v22;
  v24 = (char *)a2 + v22;
  v25 = sub_5C154(&qword_320BC0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v23, v24, v25);
  v26 = a3[7];
  v27 = (char *)a1 + v26;
  v28 = (char *)a2 + v26;
  v29 = *(_QWORD *)v28;
  v30 = *((_QWORD *)v28 + 1);
  LOBYTE(v23) = v28[16];
  sub_884D0(*(_QWORD *)v28, v30);
  *(_QWORD *)v27 = v29;
  *((_QWORD *)v27 + 1) = v30;
  v27[16] = (char)v23;
  return a1;
}

uint64_t *sub_8BAF0(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  if (a1 != a2)
  {
    sub_5E09C((uint64_t)a1, &qword_320290);
    v6 = sub_5C154(&qword_320290);
    if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
    {
      v8 = type metadata accessor for FontConstants(0, v7);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
      v9 = a1;
      v10 = v6;
      v11 = 1;
    }
    else
    {
      v12 = *a2;
      *a1 = *a2;
      swift_retain(v12);
      v9 = a1;
      v10 = v6;
      v11 = 0;
    }
    swift_storeEnumTagMultiPayload(v9, v10, v11);
    v13 = a3[5];
    v14 = (uint64_t *)((char *)a1 + v13);
    v15 = (uint64_t *)((char *)a2 + v13);
    sub_5E09C((uint64_t)a1 + v13, (uint64_t *)&unk_32A010);
    v16 = sub_5C154((uint64_t *)&unk_32A010);
    if (swift_getEnumCaseMultiPayload(v15, v16) == 1)
    {
      v17 = type metadata accessor for ColorConstants(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v14, v15, v17);
      v18 = v14;
      v19 = v16;
      v20 = 1;
    }
    else
    {
      v21 = *v15;
      *v14 = *v15;
      swift_retain(v21);
      v18 = v14;
      v19 = v16;
      v20 = 0;
    }
    swift_storeEnumTagMultiPayload(v18, v19, v20);
  }
  v22 = a3[6];
  v23 = (char *)a1 + v22;
  v24 = (char *)a2 + v22;
  v25 = sub_5C154(&qword_320BC0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 24))(v23, v24, v25);
  v26 = a3[7];
  v27 = (char *)a1 + v26;
  v28 = (char *)a2 + v26;
  v29 = *(_QWORD *)v28;
  v30 = *((_QWORD *)v28 + 1);
  LOBYTE(v23) = v28[16];
  sub_884D0(*(_QWORD *)v28, v30);
  v31 = *(_QWORD *)v27;
  v32 = *((_QWORD *)v27 + 1);
  *(_QWORD *)v27 = v29;
  *((_QWORD *)v27 + 1) = v30;
  v27[16] = (char)v23;
  sub_885A0(v31, v32);
  return a1;
}

char *sub_8BCA4(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;

  v6 = sub_5C154(&qword_320290);
  if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
  {
    v8 = type metadata accessor for FontConstants(0, v7);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
    swift_storeEnumTagMultiPayload(a1, v6, 1);
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  v9 = a3[5];
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = sub_5C154((uint64_t *)&unk_32A010);
  if (swift_getEnumCaseMultiPayload(v11, v12) == 1)
  {
    v13 = type metadata accessor for ColorConstants(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v10, v11, v13);
    swift_storeEnumTagMultiPayload(v10, v12, 1);
  }
  else
  {
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  v14 = a3[6];
  v15 = &a1[v14];
  v16 = &a2[v14];
  v17 = sub_5C154(&qword_320BC0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v15, v16, v17);
  v18 = a3[7];
  v19 = &a1[v18];
  v20 = &a2[v18];
  *(_OWORD *)v19 = *(_OWORD *)v20;
  v19[16] = v20[16];
  return a1;
}

char *sub_8BE0C(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  char v21;
  uint64_t v22;
  uint64_t v23;

  if (a1 != a2)
  {
    sub_5E09C((uint64_t)a1, &qword_320290);
    v6 = sub_5C154(&qword_320290);
    if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
    {
      v8 = type metadata accessor for FontConstants(0, v7);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
      swift_storeEnumTagMultiPayload(a1, v6, 1);
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
    v9 = a3[5];
    v10 = &a1[v9];
    v11 = &a2[v9];
    sub_5E09C((uint64_t)&a1[v9], (uint64_t *)&unk_32A010);
    v12 = sub_5C154((uint64_t *)&unk_32A010);
    if (swift_getEnumCaseMultiPayload(v11, v12) == 1)
    {
      v13 = type metadata accessor for ColorConstants(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v10, v11, v13);
      swift_storeEnumTagMultiPayload(v10, v12, 1);
    }
    else
    {
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
  }
  v14 = a3[6];
  v15 = &a1[v14];
  v16 = &a2[v14];
  v17 = sub_5C154(&qword_320BC0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 40))(v15, v16, v17);
  v18 = a3[7];
  v19 = &a1[v18];
  v20 = &a2[v18];
  v21 = v20[16];
  v22 = *(_QWORD *)v19;
  v23 = *((_QWORD *)v19 + 1);
  *(_OWORD *)v19 = *(_OWORD *)v20;
  v19[16] = v21;
  sub_885A0(v22, v23);
  return a1;
}

uint64_t sub_8BFA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_8BFB4);
}

uint64_t sub_8BFB4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int v16;

  v6 = sub_5C154(&qword_320BC8);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = sub_5C154(&qword_31F498);
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v13 = a3[5];
LABEL_7:
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = sub_5C154(&qword_320BC0);
  v12 = *(_QWORD *)(v14 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v14;
    v13 = a3[6];
    goto LABEL_7;
  }
  v16 = *(unsigned __int8 *)(a1 + a3[7] + 16);
  if (v16 > 1)
    return (v16 ^ 0xFF) + 1;
  else
    return 0;
}

uint64_t sub_8C08C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_8C098);
}

uint64_t sub_8C098(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;

  v8 = sub_5C154(&qword_320BC8);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  v13 = sub_5C154(&qword_31F498);
  v14 = *(_QWORD *)(v13 - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = v13;
    v15 = a4[5];
LABEL_7:
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  result = sub_5C154(&qword_320BC0);
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v15 = a4[6];
    goto LABEL_7;
  }
  *(_BYTE *)(a1 + a4[7] + 16) = -(char)a2;
  return result;
}

uint64_t type metadata accessor for InfoItemSymbolView(uint64_t a1)
{
  return sub_64960(a1, (uint64_t *)&unk_320C28, (uint64_t)&nominal type descriptor for InfoItemSymbolView);
}

void sub_8C184(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD v8[4];

  sub_8C25C(319, &qword_320C38, (uint64_t (*)(uint64_t))&type metadata accessor for FontConstants, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
  if (v3 <= 0x3F)
  {
    v8[0] = *(_QWORD *)(v2 - 8) + 64;
    sub_8C25C(319, (unint64_t *)&qword_31F510, (uint64_t (*)(uint64_t))&type metadata accessor for ColorConstants, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
    if (v5 <= 0x3F)
    {
      v8[1] = *(_QWORD *)(v4 - 8) + 64;
      sub_8C2B4(319);
      if (v7 <= 0x3F)
      {
        v8[2] = *(_QWORD *)(v6 - 8) + 64;
        v8[3] = &unk_258F38;
        swift_initStructMetadata(a1, 256, 4, v8, a1 + 16);
      }
    }
  }
}

void sub_8C25C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;

  if (!*a2)
  {
    v7 = a3(255);
    v8 = a4(a1, v7);
    if (!v9)
      atomic_store(v8, a2);
  }
}

void sub_8C2B4(uint64_t a1)
{
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_320C40)
  {
    v2 = sub_8C30C();
    v3 = type metadata accessor for ScaledMetric(a1, &type metadata for Double, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_320C40);
  }
}

unint64_t sub_8C30C()
{
  unint64_t result;

  result = qword_320C48;
  if (!qword_320C48)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Double, &type metadata for Double);
    atomic_store(result, (unint64_t *)&qword_320C48);
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for InfoItemTitle(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  return sub_8D8EC(a1, a2, a3, (void (*)(_QWORD, uint64_t, uint64_t))sub_884D8);
}

uint64_t *assignWithCopy for InfoItemTitle(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  return sub_8D934(a1, a2, a3, (void (*)(_QWORD, uint64_t, uint64_t))sub_884D8, (void (*)(uint64_t, uint64_t, uint64_t))sub_885A8);
}

__n128 initializeBufferWithCopyOfBuffer for ContentUnavailableComponentModel.Layout(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t *assignWithTake for InfoItemTitle(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_8D994(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t))sub_885A8);
}

ValueMetadata *type metadata accessor for CodeInfoItemTitle()
{
  return &type metadata for CodeInfoItemTitle;
}

uint64_t initializeBufferWithCopyOfBuffer for InfoItemSymbol(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  return sub_8D8EC(a1, a2, a3, (void (*)(_QWORD, uint64_t, uint64_t))sub_884D0);
}

uint64_t *assignWithCopy for InfoItemSymbol(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  return sub_8D934(a1, a2, a3, (void (*)(_QWORD, uint64_t, uint64_t))sub_884D0, (void (*)(uint64_t, uint64_t, uint64_t))sub_885A0);
}

uint64_t *assignWithTake for InfoItemSymbol(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_8D994(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t))sub_885A0);
}

ValueMetadata *type metadata accessor for CodeInfoItemSymbol()
{
  return &type metadata for CodeInfoItemSymbol;
}

unint64_t sub_8C3E8()
{
  unint64_t result;

  result = qword_320C80;
  if (!qword_320C80)
  {
    result = swift_getWitnessTable(&unk_259114, &type metadata for InfoItemComponentModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_320C80);
  }
  return result;
}

unint64_t sub_8C430()
{
  unint64_t result;

  result = qword_320C88;
  if (!qword_320C88)
  {
    result = swift_getWitnessTable(&unk_259084, &type metadata for InfoItemComponentModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_320C88);
  }
  return result;
}

unint64_t sub_8C478()
{
  unint64_t result;

  result = qword_320C90;
  if (!qword_320C90)
  {
    result = swift_getWitnessTable(&unk_2590AC, &type metadata for InfoItemComponentModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_320C90);
  }
  return result;
}

uint64_t sub_8C4BC(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_2B592C, 1);
}

uint64_t sub_8C4DC(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  char v12;

  if (a1 == 25705 && a2 == 0xE200000000000000)
  {
    v5 = 0xE200000000000000;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(25705, 0xE200000000000000, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 0x6575676573 && a2 == 0xE500000000000000)
  {
    v7 = 0xE500000000000000;
LABEL_14:
    swift_bridgeObjectRelease(v7);
    return 1;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6575676573, 0xE500000000000000, a1, a2, 0) & 1) != 0)
  {
    v7 = a2;
    goto LABEL_14;
  }
  if (a1 == 0xD000000000000011)
  {
    v8 = 0x800000000026D790;
    if (a2 == 0x800000000026D790)
      goto LABEL_19;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000011, 0x800000000026D790, a1, a2, 0) & 1) != 0)
  {
    v8 = a2;
LABEL_19:
    swift_bridgeObjectRelease(v8);
    return 2;
  }
  if (a1 == 0x6C6F626D7973 && a2 == 0xE600000000000000)
  {
    v9 = 0xE600000000000000;
LABEL_25:
    swift_bridgeObjectRelease(v9);
    return 3;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6C6F626D7973, 0xE600000000000000, a1, a2, 0) & 1) != 0)
  {
    v9 = a2;
    goto LABEL_25;
  }
  if (a1 == 0x776F7262657965 && a2 == 0xE700000000000000)
  {
    v10 = 0xE700000000000000;
LABEL_31:
    swift_bridgeObjectRelease(v10);
    return 4;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x776F7262657965, 0xE700000000000000, a1, a2, 0) & 1) != 0)
  {
    v10 = a2;
    goto LABEL_31;
  }
  if (a1 == 0x656C746974 && a2 == 0xE500000000000000)
  {
    v11 = 0xE500000000000000;
LABEL_37:
    swift_bridgeObjectRelease(v11);
    return 5;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x656C746974, 0xE500000000000000, a1, a2, 0) & 1) != 0)
  {
    v11 = a2;
    goto LABEL_37;
  }
  if (a1 == 0x696C41656D617266 && a2 == 0xEE00746E656D6E67)
  {
    swift_bridgeObjectRelease(0xEE00746E656D6E67);
    return 6;
  }
  else
  {
    v12 = _stringCompareWithSmolCheck(_:_:expecting:)(0x696C41656D617266, 0xEE00746E656D6E67, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v12 & 1) != 0)
      return 6;
    else
      return 7;
  }
}

uint64_t sub_8C7AC(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  char v7;

  if (a1 == 1954047348 && a2 == 0xE400000000000000)
  {
    v5 = 0xE400000000000000;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(1954047348, 0xE400000000000000, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 0x63496D6574737973 && a2 == 0xEA00000000006E6FLL)
  {
    swift_bridgeObjectRelease(0xEA00000000006E6FLL);
    return 1;
  }
  else
  {
    v7 = _stringCompareWithSmolCheck(_:_:expecting:)(0x63496D6574737973, 0xEA00000000006E6FLL, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_8C898(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  char v48;
  char v49;

  v45 = sub_5C154(&qword_320DC0);
  v43 = *(_QWORD *)(v45 - 8);
  __chkstk_darwin(v45);
  v44 = (char *)&v40 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_5C154(&qword_320DC8);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_5C154(&qword_320DD0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = a1[3];
  v12 = a1[4];
  v46 = a1;
  sub_66898(a1, v11);
  v13 = sub_8E03C();
  v14 = v47;
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for InfoItemSymbol.CodingKeys, &type metadata for InfoItemSymbol.CodingKeys, v13, v11, v12);
  if (!v14)
  {
    v40 = v4;
    v41 = v3;
    v15 = v44;
    v16 = v45;
    v47 = v8;
    v42 = v10;
    v17 = KeyedDecodingContainer.allKeys.getter(v7);
    v18 = v17;
    v19 = v7;
    if (*(_QWORD *)(v17 + 16) == 1)
    {
      if ((*(_BYTE *)(v17 + 32) & 1) != 0)
      {
        v49 = 1;
        v20 = sub_8E080();
        v21 = v15;
        v22 = v42;
        v36 = v16;
        v23 = KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)(&type metadata for InfoItemSymbol.SystemIconCodingKeys, &v49, v19, &type metadata for InfoItemSymbol.SystemIconCodingKeys, v20);
        v4 = KeyedDecodingContainer.decode(_:forKey:)(v23, v16);
        (*(void (**)(char *, uint64_t))(v43 + 8))(v21, v36);
        swift_bridgeObjectRelease(v18);
        (*(void (**)(char *, uint64_t))(v47 + 8))(v22, v19);
      }
      else
      {
        v48 = 0;
        v32 = sub_8E0C4();
        v33 = v6;
        v34 = v42;
        v35 = KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)(&type metadata for InfoItemSymbol.TextCodingKeys, &v48, v7, &type metadata for InfoItemSymbol.TextCodingKeys, v32);
        v37 = v41;
        v38 = KeyedDecodingContainer.decode(_:forKey:)(v35, v41);
        v39 = v33;
        v4 = v38;
        (*(void (**)(char *, uint64_t))(v40 + 8))(v39, v37);
        swift_bridgeObjectRelease(v18);
        (*(void (**)(char *, uint64_t))(v47 + 8))(v34, v7);
      }
    }
    else
    {
      v24 = v17;
      v25 = type metadata accessor for DecodingError(0);
      swift_allocError(v25, &protocol witness table for DecodingError, 0, 0);
      v27 = v26;
      v4 = (uint64_t)v26 + *(int *)(sub_5C154(&qword_320DA8) + 48);
      *v27 = &type metadata for InfoItemSymbol;
      v28 = v42;
      v29 = KeyedDecodingContainer.codingPath.getter(v7);
      DecodingError.Context.init(codingPath:debugDescription:underlyingError:)(v29, 0xD00000000000002BLL, 0x800000000026FD60, 0);
      v30 = (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v25 - 8) + 104))(v27, enum case for DecodingError.typeMismatch(_:), v25);
      swift_willThrow(v30);
      swift_bridgeObjectRelease(v24);
      (*(void (**)(char *, uint64_t))(v47 + 8))(v28, v7);
    }
  }
  _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(v46);
  return v4;
}

uint64_t sub_8CC5C(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  char v7;

  if (a1 == 0x6974615272617473 && a2 == 0xEA0000000000676ELL)
  {
    v5 = 0xEA0000000000676ELL;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6974615272617473, 0xEA0000000000676ELL, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 1954047348 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease(0xE400000000000000);
    return 1;
  }
  else
  {
    v7 = _stringCompareWithSmolCheck(_:_:expecting:)(1954047348, 0xE400000000000000, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_8CD48(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  double v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  double v37;
  _QWORD *v38;
  uint64_t v39;
  double v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  _QWORD *v44;
  uint64_t v45;
  char v46;
  char v47;

  v2 = sub_5C154(&qword_320D88);
  v3 = *(_QWORD *)(v2 - 8);
  v41 = v2;
  v42 = v3;
  __chkstk_darwin(v2);
  v43 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_5C154(&qword_320D90);
  v6 = *(double *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_5C154(&qword_320D98);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  *(_QWORD *)&v12 = (char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = a1[3];
  v14 = a1[4];
  v44 = a1;
  sub_66898(a1, v13);
  v15 = sub_8DF70();
  v16 = v45;
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for InfoItemTitle.CodingKeys, &type metadata for InfoItemTitle.CodingKeys, v15, v13, v14);
  if (v16)
    goto LABEL_6;
  v40 = v6;
  v17 = v5;
  v18 = v43;
  v45 = v10;
  v19 = KeyedDecodingContainer.allKeys.getter(v9);
  v20 = v19;
  if (*(_QWORD *)(v19 + 16) != 1)
  {
    v23 = v19;
    v24 = type metadata accessor for DecodingError(0);
    swift_allocError(v24, &protocol witness table for DecodingError, 0, 0);
    v25 = v12;
    v12 = *(double *)&v26;
    sub_5C154(&qword_320DA8);
    **(_QWORD **)&v12 = &type metadata for InfoItemTitle;
    v27 = KeyedDecodingContainer.codingPath.getter(v9);
    DecodingError.Context.init(codingPath:debugDescription:underlyingError:)(v27, 0xD00000000000002BLL, 0x800000000026FD60, 0);
    v28 = (*(uint64_t (**)(double, _QWORD, uint64_t))(*(_QWORD *)(v24 - 8) + 104))(COERCE_DOUBLE(*(_QWORD *)&v12), enum case for DecodingError.typeMismatch(_:), v24);
    swift_willThrow(v28);
    swift_bridgeObjectRelease(v23);
    (*(void (**)(double, uint64_t))(v45 + 8))(COERCE_DOUBLE(*(_QWORD *)&v25), v9);
LABEL_6:
    v38 = v44;
    goto LABEL_7;
  }
  v39 = v9;
  if ((*(_BYTE *)(v19 + 32) & 1) != 0)
  {
    v47 = 1;
    v21 = sub_8DFB4();
    v22 = KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)(&type metadata for InfoItemTitle.TextCodingKeys, &v47, v39, &type metadata for InfoItemTitle.TextCodingKeys, v21);
    v40 = v12;
    v33 = v18;
    v34 = v41;
    *(double *)&v35 = COERCE_DOUBLE(KeyedDecodingContainer.decode(_:forKey:)(v22, v41));
    v36 = v45;
    v12 = *(double *)&v35;
    (*(void (**)(char *, uint64_t))(v42 + 8))(v33, v34);
    swift_bridgeObjectRelease(v20);
    (*(void (**)(double, uint64_t))(v36 + 8))(COERCE_DOUBLE(*(_QWORD *)&v40), v39);
    v38 = v44;
  }
  else
  {
    v46 = 0;
    v30 = sub_8DFF8();
    v31 = v39;
    v32 = KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)(&type metadata for InfoItemTitle.StarRatingCodingKeys, &v46, v39, &type metadata for InfoItemTitle.StarRatingCodingKeys, v30);
    v37 = KeyedDecodingContainer.decode(_:forKey:)(v32, v17);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)&v40 + 8))(v8, v17);
    swift_bridgeObjectRelease(v20);
    (*(void (**)(double, uint64_t))(v45 + 8))(COERCE_DOUBLE(*(_QWORD *)&v12), v31);
    v38 = v44;
    v12 = v37;
  }
LABEL_7:
  _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(v38);
  return *(_QWORD *)&v12;
}

_QWORD *sub_8D148(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  char v41;
  char v42;

  v2 = sub_5C154(&qword_320C98);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v39 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_5C154(&qword_320CA0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  v11 = sub_66898(a1, v9);
  v12 = sub_8D448();
  v13 = v40;
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for CodeInfoItemSymbol.RootKeys, &type metadata for CodeInfoItemSymbol.RootKeys, v12, v9, v10);
  if (!v13)
  {
    v38 = v3;
    v14 = v6;
    v40 = v2;
    v15 = sub_8D48C();
    v16 = v39;
    KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)(&type metadata for CodeInfoItemSymbol.CodingKeys, v17, v5, &type metadata for CodeInfoItemSymbol.CodingKeys, v15);
    v18 = v5;
    v42 = 0;
    v19 = v40;
    v20 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)(&v42, v40);
    if (v21)
    {
      v11 = (_QWORD *)v20;
      v23 = v16;
      v24 = v18;
      v25 = v14;
      v26 = v38;
LABEL_7:
      (*(void (**)(char *, uint64_t))(v26 + 8))(v23, v40);
      (*(void (**)(char *, uint64_t))(v25 + 8))(v8, v24);
      _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(a1);
      return v11;
    }
    v37 = 0;
    v41 = 1;
    v27 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)(&v41, v19);
    v23 = v16;
    if (v28)
    {
      v11 = (_QWORD *)v27;
      v24 = v18;
      v25 = v14;
      v26 = v38;
      goto LABEL_7;
    }
    v37 = type metadata accessor for DecodingError(0);
    swift_allocError(v37, &protocol witness table for DecodingError, 0, 0);
    v36 = v29;
    v31 = a1[3];
    v30 = a1[4];
    v11 = sub_66898(a1, v31);
    v32 = dispatch thunk of Decoder.codingPath.getter(v31, v30);
    v33 = v36;
    DecodingError.Context.init(codingPath:debugDescription:underlyingError:)(v32, 0xD000000000000016, 0x800000000026FD20, 0);
    v34 = (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(v37 - 8) + 104))(v33, enum case for DecodingError.dataCorrupted(_:));
    swift_willThrow(v34);
    (*(void (**)(char *, uint64_t))(v38 + 8))(v23, v40);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v8, v18);
  }
  _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(a1);
  return v11;
}

unint64_t sub_8D448()
{
  unint64_t result;

  result = qword_320CA8;
  if (!qword_320CA8)
  {
    result = swift_getWitnessTable(&unk_2597A8, &type metadata for CodeInfoItemSymbol.RootKeys);
    atomic_store(result, (unint64_t *)&qword_320CA8);
  }
  return result;
}

unint64_t sub_8D48C()
{
  unint64_t result;

  result = qword_320CB0;
  if (!qword_320CB0)
  {
    result = swift_getWitnessTable(&unk_259758, &type metadata for CodeInfoItemSymbol.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_320CB0);
  }
  return result;
}

_QWORD *sub_8D4D0(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  char v41;
  char v42;

  v2 = sub_5C154(&qword_320CB8);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v39 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_5C154(&qword_320CC0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  v11 = sub_66898(a1, v9);
  v12 = sub_8D7D0();
  v13 = v40;
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for CodeInfoItemTitle.RootKeys, &type metadata for CodeInfoItemTitle.RootKeys, v12, v9, v10);
  if (!v13)
  {
    v38 = v3;
    v14 = v6;
    v40 = v2;
    v15 = sub_8D814();
    v16 = v39;
    KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)(&type metadata for CodeInfoItemTitle.CodingKeys, v17, v5, &type metadata for CodeInfoItemTitle.CodingKeys, v15);
    v18 = v5;
    v42 = 0;
    v19 = v40;
    v20 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)(&v42, v40);
    if ((v21 & 1) == 0)
    {
      v11 = (_QWORD *)v20;
      v23 = v16;
      v24 = v18;
      v25 = v14;
      v26 = v38;
LABEL_7:
      (*(void (**)(char *, uint64_t))(v26 + 8))(v23, v40);
      (*(void (**)(char *, uint64_t))(v25 + 8))(v8, v24);
      _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(a1);
      return v11;
    }
    LODWORD(v37) = v21;
    v41 = 1;
    v27 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)(&v41, v19);
    v23 = v16;
    if (v28)
    {
      v11 = (_QWORD *)v27;
      v24 = v18;
      v25 = v14;
      v26 = v38;
      goto LABEL_7;
    }
    v37 = type metadata accessor for DecodingError(0);
    swift_allocError(v37, &protocol witness table for DecodingError, 0, 0);
    v36 = v29;
    v31 = a1[3];
    v30 = a1[4];
    v11 = sub_66898(a1, v31);
    v32 = dispatch thunk of Decoder.codingPath.getter(v31, v30);
    v33 = v36;
    DecodingError.Context.init(codingPath:debugDescription:underlyingError:)(v32, 0xD000000000000015, 0x800000000026FD40, 0);
    v34 = (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(v37 - 8) + 104))(v33, enum case for DecodingError.dataCorrupted(_:));
    swift_willThrow(v34);
    (*(void (**)(char *, uint64_t))(v38 + 8))(v23, v40);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v8, v18);
  }
  _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(a1);
  return v11;
}

unint64_t sub_8D7D0()
{
  unint64_t result;

  result = qword_320CC8;
  if (!qword_320CC8)
  {
    result = swift_getWitnessTable(&unk_259708, &type metadata for CodeInfoItemTitle.RootKeys);
    atomic_store(result, (unint64_t *)&qword_320CC8);
  }
  return result;
}

unint64_t sub_8D814()
{
  unint64_t result;

  result = qword_320CD0;
  if (!qword_320CD0)
  {
    result = swift_getWitnessTable(&unk_2596B8, &type metadata for CodeInfoItemTitle.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_320CD0);
  }
  return result;
}

ValueMetadata *type metadata accessor for CodeInfoItemTitle.RootKeys()
{
  return &type metadata for CodeInfoItemTitle.RootKeys;
}

ValueMetadata *type metadata accessor for CodeInfoItemTitle.CodingKeys()
{
  return &type metadata for CodeInfoItemTitle.CodingKeys;
}

ValueMetadata *type metadata accessor for CodeInfoItemSymbol.RootKeys()
{
  return &type metadata for CodeInfoItemSymbol.RootKeys;
}

ValueMetadata *type metadata accessor for CodeInfoItemSymbol.CodingKeys()
{
  return &type metadata for CodeInfoItemSymbol.CodingKeys;
}

uint64_t destroy for InfoItemTitle(uint64_t a1)
{
  return sub_885A8(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t sub_8D8B8(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16);
}

uint64_t sub_8D8C0(uint64_t result, char a2)
{
  *(_BYTE *)(result + 16) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for InfoItemTitle()
{
  return &type metadata for InfoItemTitle;
}

uint64_t destroy for InfoItemSymbol(uint64_t *a1)
{
  return sub_885A0(*a1, a1[1]);
}

uint64_t sub_8D8EC(uint64_t a1, uint64_t *a2, uint64_t a3, void (*a4)(_QWORD, uint64_t, uint64_t))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v5 = *a2;
  v6 = a2[1];
  v7 = *((unsigned __int8 *)a2 + 16);
  a4(*a2, v6, v7);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v6;
  *(_BYTE *)(a1 + 16) = v7;
  return a1;
}

uint64_t *sub_8D934(uint64_t *a1, uint64_t *a2, uint64_t a3, void (*a4)(_QWORD, uint64_t, uint64_t), void (*a5)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v7 = *a2;
  v8 = a2[1];
  v9 = *((unsigned __int8 *)a2 + 16);
  a4(*a2, v8, v9);
  v10 = *a1;
  v11 = a1[1];
  v12 = *((unsigned __int8 *)a1 + 16);
  *a1 = v7;
  a1[1] = v8;
  *((_BYTE *)a1 + 16) = v9;
  a5(v10, v11, v12);
  return a1;
}

uint64_t *sub_8D994(uint64_t *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, uint64_t))
{
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_BYTE *)(a2 + 16);
  v6 = *a1;
  v7 = a1[1];
  v8 = *((unsigned __int8 *)a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *((_BYTE *)a1 + 16) = v5;
  a4(v6, v7, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for ContextActionDataModel.InitType(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 1)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ContextActionDataModel.InitType(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 255;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for InfoItemSymbol()
{
  return &type metadata for InfoItemSymbol;
}

unint64_t sub_8DA78()
{
  unint64_t result;
  uint64_t v1;

  result = qword_320CD8;
  if (!qword_320CD8)
  {
    v1 = sub_667D0(&qword_320CE0);
    sub_80008(&qword_320CE8, &qword_320CF0, (void (*)(void))sub_8DB1C);
    sub_67060(&qword_31F7C0, &qword_31F7C8, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_320CD8);
  }
  return result;
}

uint64_t sub_8DB1C()
{
  return sub_80008(&qword_320CF8, &qword_320D00, (void (*)(void))sub_8DB40);
}

unint64_t sub_8DB40()
{
  unint64_t result;
  uint64_t v1;

  result = qword_320D08;
  if (!qword_320D08)
  {
    v1 = sub_667D0(&qword_320D10);
    sub_8DBA4();
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> Group<A>, v1);
    atomic_store(result, (unint64_t *)&qword_320D08);
  }
  return result;
}

unint64_t sub_8DBA4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_320D18;
  if (!qword_320D18)
  {
    v1 = sub_667D0(&qword_320D20);
    sub_7B9E4();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_320D18);
  }
  return result;
}

unint64_t sub_8DC14()
{
  unint64_t result;

  result = qword_320D28;
  if (!qword_320D28)
  {
    result = swift_getWitnessTable(&unk_2593C0, &type metadata for CodeInfoItemSymbol.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_320D28);
  }
  return result;
}

unint64_t sub_8DC5C()
{
  unint64_t result;

  result = qword_320D30;
  if (!qword_320D30)
  {
    result = swift_getWitnessTable(&unk_2594B0, &type metadata for CodeInfoItemSymbol.RootKeys);
    atomic_store(result, (unint64_t *)&qword_320D30);
  }
  return result;
}

unint64_t sub_8DCA4()
{
  unint64_t result;

  result = qword_320D38;
  if (!qword_320D38)
  {
    result = swift_getWitnessTable(a1_1, &type metadata for CodeInfoItemTitle.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_320D38);
  }
  return result;
}

unint64_t sub_8DCEC()
{
  unint64_t result;

  result = qword_320D40;
  if (!qword_320D40)
  {
    result = swift_getWitnessTable(&unk_259690, &type metadata for CodeInfoItemTitle.RootKeys);
    atomic_store(result, (unint64_t *)&qword_320D40);
  }
  return result;
}

unint64_t sub_8DD34()
{
  unint64_t result;

  result = qword_320D48;
  if (!qword_320D48)
  {
    result = swift_getWitnessTable(&unk_2594D8, &type metadata for CodeInfoItemTitle.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_320D48);
  }
  return result;
}

unint64_t sub_8DD7C()
{
  unint64_t result;

  result = qword_320D50;
  if (!qword_320D50)
  {
    result = swift_getWitnessTable(&unk_259500, &type metadata for CodeInfoItemTitle.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_320D50);
  }
  return result;
}

unint64_t sub_8DDC4()
{
  unint64_t result;

  result = qword_320D58;
  if (!qword_320D58)
  {
    result = swift_getWitnessTable(&unk_2595C8, &type metadata for CodeInfoItemTitle.RootKeys);
    atomic_store(result, (unint64_t *)&qword_320D58);
  }
  return result;
}

unint64_t sub_8DE0C()
{
  unint64_t result;

  result = qword_320D60;
  if (!qword_320D60)
  {
    result = swift_getWitnessTable(&unk_2595F0, &type metadata for CodeInfoItemTitle.RootKeys);
    atomic_store(result, (unint64_t *)&qword_320D60);
  }
  return result;
}

unint64_t sub_8DE54()
{
  unint64_t result;

  result = qword_320D68;
  if (!qword_320D68)
  {
    result = swift_getWitnessTable(&unk_2592F8, &type metadata for CodeInfoItemSymbol.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_320D68);
  }
  return result;
}

unint64_t sub_8DE9C()
{
  unint64_t result;

  result = qword_320D70;
  if (!qword_320D70)
  {
    result = swift_getWitnessTable(&unk_259320, &type metadata for CodeInfoItemSymbol.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_320D70);
  }
  return result;
}

unint64_t sub_8DEE4()
{
  unint64_t result;

  result = qword_320D78;
  if (!qword_320D78)
  {
    result = swift_getWitnessTable(&unk_2593E8, &type metadata for CodeInfoItemSymbol.RootKeys);
    atomic_store(result, (unint64_t *)&qword_320D78);
  }
  return result;
}

unint64_t sub_8DF2C()
{
  unint64_t result;

  result = qword_320D80;
  if (!qword_320D80)
  {
    result = swift_getWitnessTable(&unk_259410, &type metadata for CodeInfoItemSymbol.RootKeys);
    atomic_store(result, (unint64_t *)&qword_320D80);
  }
  return result;
}

unint64_t sub_8DF70()
{
  unint64_t result;

  result = qword_320DA0;
  if (!qword_320DA0)
  {
    result = swift_getWitnessTable(&unk_259E28, &type metadata for InfoItemTitle.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_320DA0);
  }
  return result;
}

unint64_t sub_8DFB4()
{
  unint64_t result;

  result = qword_320DB0;
  if (!qword_320DB0)
  {
    result = swift_getWitnessTable(&unk_259DD8, &type metadata for InfoItemTitle.TextCodingKeys);
    atomic_store(result, (unint64_t *)&qword_320DB0);
  }
  return result;
}

unint64_t sub_8DFF8()
{
  unint64_t result;

  result = qword_320DB8;
  if (!qword_320DB8)
  {
    result = swift_getWitnessTable(&unk_259D88, &type metadata for InfoItemTitle.StarRatingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_320DB8);
  }
  return result;
}

unint64_t sub_8E03C()
{
  unint64_t result;

  result = qword_320DD8;
  if (!qword_320DD8)
  {
    result = swift_getWitnessTable(&unk_259D38, &type metadata for InfoItemSymbol.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_320DD8);
  }
  return result;
}

unint64_t sub_8E080()
{
  unint64_t result;

  result = qword_320DE0;
  if (!qword_320DE0)
  {
    result = swift_getWitnessTable(&unk_259CE8, &type metadata for InfoItemSymbol.SystemIconCodingKeys);
    atomic_store(result, (unint64_t *)&qword_320DE0);
  }
  return result;
}

unint64_t sub_8E0C4()
{
  unint64_t result;

  result = qword_320DE8;
  if (!qword_320DE8)
  {
    result = swift_getWitnessTable(&unk_259C98, &type metadata for InfoItemSymbol.TextCodingKeys);
    atomic_store(result, (unint64_t *)&qword_320DE8);
  }
  return result;
}

ValueMetadata *type metadata accessor for InfoItemSymbol.CodingKeys()
{
  return &type metadata for InfoItemSymbol.CodingKeys;
}

ValueMetadata *type metadata accessor for InfoItemSymbol.TextCodingKeys()
{
  return &type metadata for InfoItemSymbol.TextCodingKeys;
}

ValueMetadata *type metadata accessor for InfoItemSymbol.SystemIconCodingKeys()
{
  return &type metadata for InfoItemSymbol.SystemIconCodingKeys;
}

uint64_t _s11BookStoreUI17CodeInfoItemTitleV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_8E184 + 4 * byte_258ED6[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_8E1B8 + 4 * byte_258ED1[v4]))();
}

uint64_t sub_8E1B8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_8E1C0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x8E1C8);
  return result;
}

uint64_t sub_8E1D4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x8E1DCLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_8E1E0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_8E1E8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for InfoItemTitle.CodingKeys()
{
  return &type metadata for InfoItemTitle.CodingKeys;
}

ValueMetadata *type metadata accessor for InfoItemTitle.StarRatingCodingKeys()
{
  return &type metadata for InfoItemTitle.StarRatingCodingKeys;
}

uint64_t _s11BookStoreUI17CodeInfoItemTitleV8RootKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_8E254 + 4 * byte_258EDB[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_8E274 + 4 * byte_258EE0[v4]))();
}

_BYTE *sub_8E254(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_8E274(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_8E27C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_8E284(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_8E28C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_8E294(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for InfoItemTitle.TextCodingKeys()
{
  return &type metadata for InfoItemTitle.TextCodingKeys;
}

unint64_t sub_8E2B4()
{
  unint64_t result;

  result = qword_320DF0;
  if (!qword_320DF0)
  {
    result = swift_getWitnessTable(&unk_2598D8, &type metadata for InfoItemTitle.TextCodingKeys);
    atomic_store(result, (unint64_t *)&qword_320DF0);
  }
  return result;
}

unint64_t sub_8E2FC()
{
  unint64_t result;

  result = qword_320DF8;
  if (!qword_320DF8)
  {
    result = swift_getWitnessTable(&unk_259990, &type metadata for InfoItemTitle.StarRatingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_320DF8);
  }
  return result;
}

unint64_t sub_8E344()
{
  unint64_t result;

  result = qword_320E00;
  if (!qword_320E00)
  {
    result = swift_getWitnessTable(&unk_259A48, &type metadata for InfoItemTitle.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_320E00);
  }
  return result;
}

unint64_t sub_8E38C()
{
  unint64_t result;

  result = qword_320E08;
  if (!qword_320E08)
  {
    result = swift_getWitnessTable(&unk_259B00, &type metadata for InfoItemSymbol.SystemIconCodingKeys);
    atomic_store(result, (unint64_t *)&qword_320E08);
  }
  return result;
}

unint64_t sub_8E3D4()
{
  unint64_t result;

  result = qword_320E10;
  if (!qword_320E10)
  {
    result = swift_getWitnessTable(&unk_259BB8, &type metadata for InfoItemSymbol.TextCodingKeys);
    atomic_store(result, (unint64_t *)&qword_320E10);
  }
  return result;
}

unint64_t sub_8E41C()
{
  unint64_t result;

  result = qword_320E18;
  if (!qword_320E18)
  {
    result = swift_getWitnessTable(&unk_259C70, &type metadata for InfoItemSymbol.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_320E18);
  }
  return result;
}

unint64_t sub_8E464()
{
  unint64_t result;

  result = qword_320E20;
  if (!qword_320E20)
  {
    result = swift_getWitnessTable(&unk_259B28, &type metadata for InfoItemSymbol.TextCodingKeys);
    atomic_store(result, (unint64_t *)&qword_320E20);
  }
  return result;
}

unint64_t sub_8E4AC()
{
  unint64_t result;

  result = qword_320E28;
  if (!qword_320E28)
  {
    result = swift_getWitnessTable(&unk_259B50, &type metadata for InfoItemSymbol.TextCodingKeys);
    atomic_store(result, (unint64_t *)&qword_320E28);
  }
  return result;
}

unint64_t sub_8E4F4()
{
  unint64_t result;

  result = qword_320E30;
  if (!qword_320E30)
  {
    result = swift_getWitnessTable(&unk_259A70, &type metadata for InfoItemSymbol.SystemIconCodingKeys);
    atomic_store(result, (unint64_t *)&qword_320E30);
  }
  return result;
}

unint64_t sub_8E53C()
{
  unint64_t result;

  result = qword_320E38;
  if (!qword_320E38)
  {
    result = swift_getWitnessTable(&unk_259A98, &type metadata for InfoItemSymbol.SystemIconCodingKeys);
    atomic_store(result, (unint64_t *)&qword_320E38);
  }
  return result;
}

unint64_t sub_8E584()
{
  unint64_t result;

  result = qword_320E40;
  if (!qword_320E40)
  {
    result = swift_getWitnessTable(&unk_259BE0, &type metadata for InfoItemSymbol.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_320E40);
  }
  return result;
}

unint64_t sub_8E5CC()
{
  unint64_t result;

  result = qword_320E48;
  if (!qword_320E48)
  {
    result = swift_getWitnessTable(&unk_259C08, &type metadata for InfoItemSymbol.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_320E48);
  }
  return result;
}

unint64_t sub_8E614()
{
  unint64_t result;

  result = qword_320E50;
  if (!qword_320E50)
  {
    result = swift_getWitnessTable(&unk_259900, &type metadata for InfoItemTitle.StarRatingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_320E50);
  }
  return result;
}

unint64_t sub_8E65C()
{
  unint64_t result;

  result = qword_320E58;
  if (!qword_320E58)
  {
    result = swift_getWitnessTable(&unk_259928, &type metadata for InfoItemTitle.StarRatingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_320E58);
  }
  return result;
}

unint64_t sub_8E6A4()
{
  unint64_t result;

  result = qword_320E60;
  if (!qword_320E60)
  {
    result = swift_getWitnessTable(&unk_259848, &type metadata for InfoItemTitle.TextCodingKeys);
    atomic_store(result, (unint64_t *)&qword_320E60);
  }
  return result;
}

unint64_t sub_8E6EC()
{
  unint64_t result;

  result = qword_320E68;
  if (!qword_320E68)
  {
    result = swift_getWitnessTable(&unk_259870, &type metadata for InfoItemTitle.TextCodingKeys);
    atomic_store(result, (unint64_t *)&qword_320E68);
  }
  return result;
}

unint64_t sub_8E734()
{
  unint64_t result;

  result = qword_320E70;
  if (!qword_320E70)
  {
    result = swift_getWitnessTable(&unk_2599B8, &type metadata for InfoItemTitle.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_320E70);
  }
  return result;
}

unint64_t sub_8E77C()
{
  unint64_t result;

  result = qword_320E78;
  if (!qword_320E78)
  {
    result = swift_getWitnessTable(&unk_2599E0, &type metadata for InfoItemTitle.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_320E78);
  }
  return result;
}

uint64_t dispatch thunk of SeriesListModeManaging.setPreviousSortOrder(_:for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t dispatch thunk of SeriesListModeManaging.previousSortOrder(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t dispatch thunk of SeriesListModeManaging.filterOptionSync(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

uint64_t dispatch thunk of SeriesListModeManaging.sortOrderSync(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 32))();
}

uint64_t dispatch thunk of SeriesListModeManaging.filterPublisher(for:handle:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 40))();
}

uint64_t dispatch thunk of SeriesListModeManaging.sortPublisher(for:handle:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 48))();
}

uint64_t dispatch thunk of SeriesListModeManaging.filterOption(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  int *v11;
  _QWORD *v12;
  uint64_t (*v14)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v11 = *(int **)(a5 + 56);
  v14 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)v11 + *v11);
  v12 = (_QWORD *)swift_task_alloc(v11[1]);
  *(_QWORD *)(v5 + 16) = v12;
  *v12 = v5;
  v12[1] = sub_64780;
  return v14(a1, a2, a3, a4, a5);
}

uint64_t dispatch thunk of SeriesListModeManaging.sortOrder(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  int *v11;
  _QWORD *v12;
  uint64_t (*v14)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v11 = *(int **)(a5 + 64);
  v14 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)v11 + *v11);
  v12 = (_QWORD *)swift_task_alloc(v11[1]);
  *(_QWORD *)(v5 + 16) = v12;
  *v12 = v5;
  v12[1] = sub_7BFF8;
  return v14(a1, a2, a3, a4, a5);
}

uint64_t dispatch thunk of SeriesListModeManaging.setFilterOption(_:for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  int *v11;
  _QWORD *v12;
  uint64_t (*v14)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v11 = *(int **)(a5 + 72);
  v14 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)v11 + *v11);
  v12 = (_QWORD *)swift_task_alloc(v11[1]);
  *(_QWORD *)(v5 + 16) = v12;
  *v12 = v5;
  v12[1] = sub_7BFF8;
  return v14(a1, a2, a3, a4, a5);
}

uint64_t dispatch thunk of SeriesListModeManaging.setSortOrder(_:for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  int *v11;
  _QWORD *v12;
  uint64_t (*v14)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v11 = *(int **)(a5 + 80);
  v14 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)v11 + *v11);
  v12 = (_QWORD *)swift_task_alloc(v11[1]);
  *(_QWORD *)(v5 + 16) = v12;
  *v12 = v5;
  v12[1] = sub_7BFF8;
  return v14(a1, a2, a3, a4, a5);
}

uint64_t initializeWithCopy for ReadingInsightFramesFactory(uint64_t a1, uint64_t a2)
{
  __int128 v4;

  v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  return a1;
}

uint64_t assignWithCopy for ReadingInsightFramesFactory(uint64_t a1, uint64_t a2)
{
  sub_65938((_QWORD *)a1, (_QWORD *)a2);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  return a1;
}

__n128 initializeWithTake for ReadingInsightFramesFactory(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __n128 result;
  __int128 v4;
  __int128 v5;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  result = *(__n128 *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(__n128 *)(a1 + 32) = result;
  *(_OWORD *)(a1 + 48) = v4;
  return result;
}

uint64_t assignWithTake for ReadingInsightFramesFactory(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;

  _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((_QWORD *)a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v5 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  return a1;
}

uint64_t getEnumTagSinglePayload for ReadingInsightFramesFactory(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 96))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ReadingInsightFramesFactory(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 96) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 96) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ReadingInsightFramesFactory()
{
  return &type metadata for ReadingInsightFramesFactory;
}

uint64_t sub_8EC3C@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  _BOOL4 v32;
  uint8_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  NSObject *v44;
  os_log_type_t v45;
  uint8_t *v46;
  uint64_t v47;
  uint64_t v48;
  NSObject *v49;
  os_log_type_t v50;
  uint8_t *v51;
  uint64_t v52;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char v64;
  uint64_t v65;
  double (*v66)(char *, _QWORD, uint64_t);
  char *v67;
  uint64_t v68;
  __n128 v69;
  char *v70;
  char v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  char *v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  char *v102;
  _QWORD *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;

  v2 = v1;
  v4 = type metadata accessor for ReadingSummaryFrameViewModel(0);
  v98 = *(_QWORD *)(v4 - 8);
  v99 = v4;
  __chkstk_darwin(v4);
  v97 = (char *)&v83 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __chkstk_darwin(v6);
  v96 = (char *)&v83 - v8;
  v89 = type metadata accessor for Calendar(0, v7);
  v88 = *(_QWORD *)(v89 - 8);
  v9 = __chkstk_darwin(v89);
  v87 = (char *)&v83 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v86 = type metadata accessor for Calendar.Component(0, v9);
  v85 = *(_QWORD *)(v86 - 8);
  __chkstk_darwin(v86);
  v84 = (char *)&v83 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_5C154(&qword_320EE8);
  __chkstk_darwin(v12);
  v102 = (char *)&v83 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_5C154(&qword_320EF0);
  v15 = __chkstk_darwin(v14);
  v101 = (char *)&v83 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v95 = type metadata accessor for YIRSourceData(0, v15);
  v94 = *(_QWORD *)(v95 - 8);
  __chkstk_darwin(v95);
  v92 = (char *)&v83 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v93 = (char *)&v83 - v19;
  v20 = sub_5C154(&qword_320EF8);
  __chkstk_darwin(v20);
  v91 = (uint64_t)&v83 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v24 = (char *)&v83 - v23;
  __chkstk_darwin(v25);
  v27 = (char *)&v83 - v26;
  if (qword_31E630 != -1)
    swift_once(&qword_31E630, sub_126BE4);
  v90 = v24;
  v28 = type metadata accessor for Logger(0);
  sub_5240C(v28, (uint64_t)qword_325220);
  v29 = sub_90440((uint64_t)v1, (uint64_t)&v106);
  v30 = Logger.logObject.getter(v29);
  v31 = static os_log_type_t.debug.getter();
  v32 = os_log_type_enabled(v30, v31);
  v103 = v1;
  if (v32)
  {
    v100 = a1;
    v33 = (uint8_t *)swift_slowAlloc(12, -1);
    v34 = swift_slowAlloc(32, -1);
    v105 = v34;
    *(_DWORD *)v33 = 136315138;
    sub_66898(&v106, v108);
    sub_17B66C((uint64_t)v27);
    v35 = type metadata accessor for DateInterval(0);
    v36 = *(_QWORD *)(v35 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))(v27, 1, v35) == 1)
    {
      sub_5E09C((uint64_t)v27, &qword_320EF8);
      v37 = 0;
      v38 = 0;
    }
    else
    {
      v37 = DateInterval.debugDescription.getter();
      v38 = v39;
      (*(void (**)(char *, uint64_t))(v36 + 8))(v27, v35);
    }
    v40 = Optional<A>.description.getter(v37, v38);
    v42 = v41;
    swift_bridgeObjectRelease(v38);
    v104 = sub_57CD8(v40, v42, &v105);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v104, &v105, v33 + 4, v33 + 12);
    swift_bridgeObjectRelease(v42);
    sub_904A4(&v106);
    _os_log_impl(&dword_0, v30, v31, "longestStreak: %s", v33, 0xCu);
    swift_arrayDestroy(v34, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v34, -1, -1);
    swift_slowDealloc(v33, -1, -1);

    a1 = v100;
    v2 = v103;
  }
  else
  {
    sub_904A4(&v106);

  }
  v43 = sub_90440((uint64_t)v2, (uint64_t)&v106);
  v44 = Logger.logObject.getter(v43);
  v45 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v44, v45))
  {
    v46 = (uint8_t *)swift_slowAlloc(12, -1);
    *(_DWORD *)v46 = 134217984;
    sub_66898(&v106, v108);
    v47 = sub_17BD88();
    sub_904A4(&v106);
    v106 = v47;
    v2 = v103;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v106, &v107, v46 + 4, v46 + 12);
    _os_log_impl(&dword_0, v44, v45, "totalCompletedGoalDays: %ld", v46, 0xCu);
    swift_slowDealloc(v46, -1, -1);
  }
  else
  {
    sub_904A4(&v106);
  }

  sub_66898(v2, v2[3]);
  v48 = sub_17BD88();
  if (v48 >= v2[8])
  {
    v54 = v48;
    v55 = enum case for FrameName.readingInsightDaily(_:);
    v56 = type metadata accessor for FrameName(0);
    v57 = *(_QWORD *)(v56 - 8);
    v58 = v101;
    (*(void (**)(char *, uint64_t, uint64_t))(v57 + 104))(v101, v55, v56);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v57 + 56))(v58, 0, 1, v56);
    v59 = type metadata accessor for ReaderType(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v59 - 8) + 56))(v102, 1, 1, v59);
    sub_66898(v2, v2[3]);
    v60 = (uint64_t)v90;
    sub_17B66C((uint64_t)v90);
    v61 = type metadata accessor for DateInterval(0);
    v62 = *(_QWORD *)(v61 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v62 + 48))(v60, 1, v61) == 1)
    {
      sub_5E09C(v60, &qword_320EF8);
      v63 = 0;
      v64 = 1;
    }
    else
    {
      v65 = v85;
      v66 = *(double (**)(char *, _QWORD, uint64_t))(v85 + 104);
      v100 = a1;
      v67 = v84;
      v68 = v86;
      v69.n128_f64[0] = v66(v84, enum case for Calendar.Component.day(_:), v86);
      v70 = v87;
      static Calendar.current.getter(v69);
      v63 = DateInterval.distance(_:calendar:)(v67, v70);
      v64 = v71 & 1;
      (*(void (**)(char *, uint64_t))(v88 + 8))(v70, v89);
      v72 = v67;
      a1 = v100;
      (*(void (**)(char *, uint64_t))(v65 + 8))(v72, v68);
      (*(void (**)(uint64_t, uint64_t))(v62 + 8))(v60, v61);
    }
    v73 = v93;
    YIRSourceData.init(frameName:readerType:totalReadTime:longestPageCount:longestAudiobook:finishedSeries:mostContentGenre:mostContentAuthor:totalRatedContent:finishedBooks:longestStreak:readingGoalsReachedDays:avgReadingTime:)(v101, v102, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, v63,
      v64,
      v54,
      0,
      0,
      1);
    sub_66898(v103, v103[3]);
    v74 = v91;
    sub_17B66C(v91);
    v75 = v94;
    v76 = v92;
    v77 = v95;
    (*(void (**)(char *, char *, uint64_t))(v94 + 16))(v92, v73, v95);
    v78 = v96;
    ReadingSummaryFrameViewModel.init(longestStreak:totalCompletedGoalDays:exposureData:)(v74, v54, v76);
    v80 = v97;
    v79 = v98;
    v81 = v99;
    (*(void (**)(char *, char *, uint64_t))(v98 + 16))(v97, v78, v99);
    ReadingSummaryFrame.init(model:)(v80);
    (*(void (**)(char *, uint64_t))(v79 + 8))(v78, v81);
    (*(void (**)(char *, uint64_t))(v75 + 8))(v73, v77);
    v82 = type metadata accessor for ReadingSummaryFrame(0);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v82 - 8) + 56))(a1, 0, 1, v82);
  }
  else
  {
    v49 = Logger.logObject.getter(v48);
    v50 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v49, v50))
    {
      v51 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v51 = 0;
      _os_log_impl(&dword_0, v49, v50, "Eligibility criteria not met for ReadingSummaryFrame", v51, 2u);
      swift_slowDealloc(v51, -1, -1);
    }

    v52 = type metadata accessor for ReadingSummaryFrame(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v52 - 8) + 56))(a1, 1, 1, v52);
  }
}

uint64_t sub_8F528@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  _BOOL4 v27;
  uint8_t *v28;
  uint64_t v29;
  uint8_t *v30;
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  uint8_t *v34;
  __n128 v35;
  _QWORD *v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint8_t *v40;
  uint64_t v41;
  __n128 v42;
  _QWORD *v43;
  __int128 v44;
  char v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  double v55;
  double v56;
  __n128 v57;
  _QWORD *v58;
  _QWORD *v59;
  int64_t v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  _QWORD *v65;
  unint64_t v66;
  unint64_t v67;
  NSObject *v68;
  os_log_type_t v69;
  uint8_t *v70;
  uint64_t v71;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint8_t *v84;
  uint8_t *v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  char *v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  _QWORD *v106;
  char v107[8];
  _QWORD *v108;
  __int128 v109;
  __int128 v110;
  __int128 v111;

  v2 = v1;
  v99 = a1;
  v3 = type metadata accessor for Date(0);
  v102 = *(_QWORD *)(v3 - 8);
  v103 = v3;
  __chkstk_darwin(v3);
  v101 = (char *)&v83 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v104 = type metadata accessor for ReadingInsightsDataProvider.MonthAverage(0);
  v87 = *(_QWORD *)(v104 - 8);
  v5 = __chkstk_darwin(v104);
  v7 = (char *)&v83 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v100 = type metadata accessor for AverageMonthlyReadingFrameViewModel.MonthAverage(0, v5);
  v8 = *(_QWORD *)(v100 - 8);
  v9 = __chkstk_darwin(v100);
  v11 = (char *)&v83 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v96 = type metadata accessor for AverageMonthlyReadingFrameViewModel(0, v9);
  v95 = *(_QWORD *)(v96 - 8);
  __chkstk_darwin(v96);
  v94 = (char *)&v83 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v93 = (char *)&v83 - v14;
  v15 = sub_5C154(&qword_320EE8);
  __chkstk_darwin(v15);
  v89 = (char *)&v83 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_5C154(&qword_320EF0);
  v18 = __chkstk_darwin(v17);
  v88 = (char *)&v83 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v92 = type metadata accessor for YIRSourceData(0, v18);
  v91 = *(_QWORD *)(v92 - 8);
  __chkstk_darwin(v92);
  v90 = (char *)&v83 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v98 = (char *)&v83 - v22;
  if (qword_31E630 != -1)
    swift_once(&qword_31E630, sub_126BE4);
  v23 = type metadata accessor for Logger(0);
  sub_5240C(v23, (uint64_t)qword_325220);
  v24 = sub_90440(v1, (uint64_t)&v108);
  v25 = Logger.logObject.getter(v24);
  v26 = static os_log_type_t.debug.getter();
  v27 = os_log_type_enabled(v25, v26);
  v97 = v1;
  if (v27)
  {
    v28 = (uint8_t *)swift_slowAlloc(12, -1);
    *(_DWORD *)v28 = 134217984;
    sub_66898(&v108, v110);
    sub_17BF68();
    v106 = (_QWORD *)v29;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v106, v107, v28 + 4, v28 + 12);
    sub_904A4(&v108);
    _os_log_impl(&dword_0, v25, v26, "dailyAverageReadingTime: %f", v28, 0xCu);
    v30 = v28;
    v2 = v97;
    swift_slowDealloc(v30, -1, -1);
  }
  else
  {
    sub_904A4(&v108);
  }

  v31 = sub_90440(v2, (uint64_t)&v108);
  v32 = Logger.logObject.getter(v31);
  v33 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v32, v33))
  {
    v34 = (uint8_t *)swift_slowAlloc(12, -1);
    v86 = swift_slowAlloc(32, -1);
    v106 = (_QWORD *)v86;
    v85 = v34;
    *(_DWORD *)v34 = 136315138;
    v84 = v34 + 4;
    sub_66898(&v108, v110);
    v36 = sub_17C068(v35);
    v37 = Array.description.getter(v36, v104);
    v39 = v38;
    swift_bridgeObjectRelease(v36);
    v105 = sub_57CD8(v37, v39, (uint64_t *)&v106);
    v2 = v97;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v105, &v106, v84, v34 + 12);
    swift_bridgeObjectRelease(v39);
    sub_904A4(&v108);
    v40 = v85;
    _os_log_impl(&dword_0, v32, v33, "monthlyAverages: %s", v85, 0xCu);
    v41 = v86;
    swift_arrayDestroy(v86, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v41, -1, -1);
    swift_slowDealloc(v40, -1, -1);
  }
  else
  {
    sub_904A4(&v108);
  }

  sub_66898((_QWORD *)v2, *(_QWORD *)(v2 + 24));
  v43 = sub_17C068(v42);
  LOBYTE(v108) = *(_BYTE *)(v2 + 40);
  v44 = *(_OWORD *)(v2 + 64);
  v109 = *(_OWORD *)(v2 + 48);
  v110 = v44;
  v111 = *(_OWORD *)(v2 + 80);
  v106 = v43;
  v107[0] = 0;
  YearInReviewEligibilityCriteria.isEligible(for:)((uint64_t)&v106);
  v46 = v45;
  v47 = swift_bridgeObjectRelease(v43);
  if ((v46 & 1) != 0)
  {
    v48 = enum case for FrameName.readingInsightMonthly(_:);
    v49 = type metadata accessor for FrameName(0);
    v50 = *(_QWORD *)(v49 - 8);
    v51 = v88;
    (*(void (**)(char *, uint64_t, uint64_t))(v50 + 104))(v88, v48, v49);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v51, 0, 1, v49);
    v52 = type metadata accessor for ReaderType(0);
    v53 = v89;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v52 - 8) + 56))(v89, 1, 1, v52);
    sub_66898((_QWORD *)v2, *(_QWORD *)(v2 + 24));
    sub_17BF68();
    YIRSourceData.init(frameName:readerType:totalReadTime:longestPageCount:longestAudiobook:finishedSeries:mostContentGenre:mostContentAuthor:totalRatedContent:finishedBooks:longestStreak:readingGoalsReachedDays:avgReadingTime:)(v51, v53, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0,
      1,
      0,
      1,
      v54,
      0);
    sub_66898((_QWORD *)v2, *(_QWORD *)(v2 + 24));
    sub_17BF68();
    v56 = v55;
    sub_66898((_QWORD *)v2, *(_QWORD *)(v2 + 24));
    v58 = sub_17C068(v57);
    v59 = v58;
    v60 = v58[2];
    if (v60)
    {
      v108 = &_swiftEmptyArrayStorage;
      sub_20C7E4(0, v60, 0);
      v61 = (*(unsigned __int8 *)(v87 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v87 + 80);
      v97 = (uint64_t)v59;
      v62 = (uint64_t)v59 + v61;
      v63 = *(_QWORD *)(v87 + 72);
      do
      {
        sub_904C8(v62, (uint64_t)v7);
        v64 = v101;
        (*(void (**)(char *, char *, uint64_t))(v102 + 16))(v101, v7, v103);
        AverageMonthlyReadingFrameViewModel.MonthAverage.init(date:value:)(v64, ceil(*(double *)&v7[*(int *)(v104 + 20)] / 60.0) * 60.0);
        sub_9050C((uint64_t)v7);
        v65 = v108;
        if ((swift_isUniquelyReferenced_nonNull_native(v108) & 1) == 0)
        {
          sub_20C7E4(0, v65[2] + 1, 1);
          v65 = v108;
        }
        v67 = v65[2];
        v66 = v65[3];
        if (v67 >= v66 >> 1)
        {
          sub_20C7E4(v66 > 1, v67 + 1, 1);
          v65 = v108;
        }
        v65[2] = v67 + 1;
        (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))((unint64_t)v65+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(_QWORD *)(v8 + 72) * v67, v11, v100);
        v108 = v65;
        v62 += v63;
        --v60;
      }
      while (v60);
      swift_bridgeObjectRelease(v97);
    }
    else
    {
      swift_bridgeObjectRelease(v58);
      v65 = &_swiftEmptyArrayStorage;
    }
    v73 = v91;
    v74 = v90;
    v75 = v98;
    v76 = v92;
    (*(void (**)(char *, char *, uint64_t))(v91 + 16))(v90, v98, v92);
    v77 = v93;
    AverageMonthlyReadingFrameViewModel.init(dailyAverageReadingTime:monthlyAverages:exposureData:)(v65, v74, v56);
    v78 = v95;
    v79 = v94;
    v80 = v96;
    (*(void (**)(char *, char *, uint64_t))(v95 + 16))(v94, v77, v96);
    v81 = v99;
    AverageMonthlyReadingFrame.init(model:)(v79);
    (*(void (**)(char *, uint64_t))(v78 + 8))(v77, v80);
    (*(void (**)(char *, uint64_t))(v73 + 8))(v75, v76);
    v82 = type metadata accessor for AverageMonthlyReadingFrame(0);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v82 - 8) + 56))(v81, 0, 1, v82);
  }
  else
  {
    v68 = Logger.logObject.getter(v47);
    v69 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v68, v69))
    {
      v70 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v70 = 0;
      _os_log_impl(&dword_0, v68, v69, "Eligibility criteria not met for AverageMonthlyReadingFrame", v70, 2u);
      swift_slowDealloc(v70, -1, -1);
    }

    v71 = type metadata accessor for AverageMonthlyReadingFrame(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v71 - 8) + 56))(v99, 1, 1, v71);
  }
}

char *sub_8FE88()
{
  uint64_t v0;
  __n128 v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t inited;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  char *v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  uint64_t v33;
  __int128 v34[2];
  __int128 v35;
  uint64_t v36;
  uint64_t v37;
  _BYTE v38[120];

  v31 = type metadata accessor for TransitionFrameViewModel.Section(0);
  v0 = *(_QWORD *)(v31 - 8);
  v1 = __chkstk_darwin(v31);
  v3 = (char *)&v30 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for TransitionFrameViewModel(0, v1);
  __chkstk_darwin(v4);
  v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_5C154(&qword_320EA0);
  __chkstk_darwin(v7);
  v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_5C154(&qword_320EA8);
  __chkstk_darwin(v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_5C154(&qword_320EB0);
  inited = swift_initStackObject(v13, v38);
  *(_OWORD *)(inited + 16) = xmmword_255F00;
  v15 = (_QWORD *)(inited + 32);
  sub_8EC3C((uint64_t)v12);
  v16 = type metadata accessor for ReadingSummaryFrame(0);
  v17 = *(_QWORD *)(v16 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v12, 1, v16) == 1)
  {
    sub_5E09C((uint64_t)v12, &qword_320EA8);
    *(_OWORD *)v15 = 0u;
    *(_OWORD *)(inited + 48) = 0u;
    *(_QWORD *)(inited + 64) = 0;
  }
  else
  {
    *(_QWORD *)(inited + 56) = v16;
    *(_QWORD *)(inited + 64) = sub_648E0(&qword_320EE0, (uint64_t (*)(uint64_t))&type metadata accessor for ReadingSummaryFrame, (uint64_t)&protocol conformance descriptor for ReadingSummaryFrame);
    v18 = sub_668BC(v15);
    (*(void (**)(_QWORD *, char *, uint64_t))(v17 + 32))(v18, v12, v16);
  }
  sub_8F528((uint64_t)v9);
  v19 = type metadata accessor for AverageMonthlyReadingFrame(0);
  v20 = *(_QWORD *)(v19 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v9, 1, v19) == 1)
  {
    sub_5E09C((uint64_t)v9, &qword_320EA0);
    *(_OWORD *)(inited + 72) = 0u;
    *(_OWORD *)(inited + 88) = 0u;
    *(_QWORD *)(inited + 104) = 0;
  }
  else
  {
    *(_QWORD *)(inited + 96) = v19;
    *(_QWORD *)(inited + 104) = sub_648E0(&qword_320ED8, (uint64_t (*)(uint64_t))&type metadata accessor for AverageMonthlyReadingFrame, (uint64_t)&protocol conformance descriptor for AverageMonthlyReadingFrame);
    v21 = sub_668BC((_QWORD *)(inited + 72));
    (*(void (**)(_QWORD *, char *, uint64_t))(v20 + 32))(v21, v9, v19);
  }
  sub_90364((uint64_t)v15, (uint64_t)&v35);
  sub_903AC((uint64_t)&v35, (uint64_t)&v32);
  if (v33)
  {
    sub_5DC98(&v32, (uint64_t)v34);
    sub_5DC98(v34, (uint64_t)&v32);
    v22 = (char *)&_swiftEmptyArrayStorage;
    if ((swift_isUniquelyReferenced_nonNull_native(&_swiftEmptyArrayStorage) & 1) == 0)
      v22 = sub_5700C(0, *((_QWORD *)&_swiftEmptyArrayStorage + 2) + 1, 1, (char *)&_swiftEmptyArrayStorage);
    v24 = *((_QWORD *)v22 + 2);
    v23 = *((_QWORD *)v22 + 3);
    if (v24 >= v23 >> 1)
      v22 = sub_5700C((char *)(v23 > 1), v24 + 1, 1, v22);
    *((_QWORD *)v22 + 2) = v24 + 1;
    sub_5DC98(&v32, (uint64_t)&v22[40 * v24 + 32]);
  }
  else
  {
    sub_5E09C((uint64_t)&v32, &qword_320EB8);
    v22 = (char *)&_swiftEmptyArrayStorage;
  }
  sub_90364(inited + 72, (uint64_t)&v35);
  sub_903AC((uint64_t)&v35, (uint64_t)&v32);
  if (v33)
  {
    sub_5DC98(&v32, (uint64_t)v34);
    sub_5DC98(v34, (uint64_t)&v32);
    if ((swift_isUniquelyReferenced_nonNull_native(v22) & 1) == 0)
      v22 = sub_5700C(0, *((_QWORD *)v22 + 2) + 1, 1, v22);
    v26 = *((_QWORD *)v22 + 2);
    v25 = *((_QWORD *)v22 + 3);
    if (v26 >= v25 >> 1)
      v22 = sub_5700C((char *)(v25 > 1), v26 + 1, 1, v22);
    *((_QWORD *)v22 + 2) = v26 + 1;
    sub_5DC98(&v32, (uint64_t)&v22[40 * v26 + 32]);
  }
  else
  {
    sub_5E09C((uint64_t)&v32, &qword_320EB8);
  }
  swift_bridgeObjectRelease(inited);
  *(_QWORD *)&v32 = v22;
  *(_QWORD *)&v35 = v22;
  v27 = sub_5C154(&qword_320EC0);
  v28 = sub_903F4();
  if ((Collection.isNotEmpty.getter(v27, v28) & 1) != 0)
  {
    (*(void (**)(char *, _QWORD, uint64_t))(v0 + 104))(v3, enum case for TransitionFrameViewModel.Section.readingInsights(_:), v31);
    TransitionFrameViewModel.init(section:)(v3);
    v36 = type metadata accessor for TransitionFrame(0);
    v37 = sub_648E0(&qword_320ED0, (uint64_t (*)(uint64_t))&type metadata accessor for TransitionFrame, (uint64_t)&protocol conformance descriptor for TransitionFrame);
    sub_668BC(&v35);
    TransitionFrame.init(model:)(v6);
    sub_5DC98(&v35, (uint64_t)v34);
    sub_13D518(0, 0, (uint64_t)v34);
    return (char *)v32;
  }
  return v22;
}

uint64_t sub_90364(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_5C154(&qword_320EB8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_903AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_5C154(&qword_320EB8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_903F4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_320EC8;
  if (!qword_320EC8)
  {
    v1 = sub_667D0(&qword_320EC0);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_320EC8);
  }
  return result;
}

uint64_t sub_90440(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;

  v4 = *(_OWORD *)(a1 + 24);
  *(_OWORD *)(a2 + 24) = v4;
  (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a2, a1);
  v5 = *(_OWORD *)(a1 + 56);
  v6 = *(_OWORD *)(a1 + 72);
  v7 = *(_QWORD *)(a1 + 88);
  *(_OWORD *)(a2 + 40) = *(_OWORD *)(a1 + 40);
  *(_QWORD *)(a2 + 88) = v7;
  *(_OWORD *)(a2 + 72) = v6;
  *(_OWORD *)(a2 + 56) = v5;
  return a2;
}

_QWORD *sub_904A4(_QWORD *a1)
{
  _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(a1);
  return a1;
}

uint64_t sub_904C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ReadingInsightsDataProvider.MonthAverage(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_9050C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ReadingInsightsDataProvider.MonthAverage(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

_QWORD *sub_90548(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  char *v19;
  char *v20;
  int *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, _QWORD, uint64_t, int *);
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v12);
  }
  else
  {
    v7 = sub_5C154((uint64_t *)&unk_32A010);
    if (swift_getEnumCaseMultiPayload(a2, v7) == 1)
    {
      v8 = type metadata accessor for ColorConstants(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
      v9 = a1;
      v10 = v7;
      v11 = 1;
    }
    else
    {
      v13 = *a2;
      *a1 = *a2;
      swift_retain(v13);
      v9 = a1;
      v10 = v7;
      v11 = 0;
    }
    swift_storeEnumTagMultiPayload(v9, v10, v11);
    v14 = a3[5];
    v15 = a3[6];
    v16 = (_QWORD *)((char *)a1 + v14);
    v17 = (_QWORD *)((char *)a2 + v14);
    v18 = v17[1];
    *v16 = *v17;
    v16[1] = v18;
    v19 = (char *)a1 + v15;
    v20 = (char *)a2 + v15;
    swift_bridgeObjectRetain(v18);
    v21 = (int *)sub_5C154(&qword_320F00);
    v22 = *((_QWORD *)v21 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v22 + 48))(v20, 1, v21))
    {
      v23 = sub_5C154(&qword_320F08);
      memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    }
    else
    {
      v24 = type metadata accessor for YearInReviewSharableImage(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v19, v20, v24);
      *(_OWORD *)&v19[v21[9]] = *(_OWORD *)&v20[v21[9]];
      *(_OWORD *)&v19[v21[10]] = *(_OWORD *)&v20[v21[10]];
      v25 = v21[11];
      v26 = *(_QWORD *)&v20[v25];
      *(_QWORD *)&v19[v25] = v26;
      v27 = *(void (**)(char *, _QWORD, uint64_t, int *))(v22 + 56);
      swift_retain(v26);
      v27(v19, 0, 1, v21);
    }
    v28 = a3[7];
    v29 = (char *)a1 + v28;
    v30 = (char *)a2 + v28;
    v31 = type metadata accessor for ColorScheme(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v29, v30, v31);
    *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  }
  return a1;
}

uint64_t sub_9072C(_QWORD *a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;

  v4 = sub_5C154((uint64_t *)&unk_32A010);
  if (swift_getEnumCaseMultiPayload(a1, v4) == 1)
  {
    v5 = type metadata accessor for ColorConstants(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
  }
  else
  {
    swift_release(*a1);
  }
  swift_bridgeObjectRelease(*(_QWORD *)((char *)a1 + a2[5] + 8));
  v6 = (char *)a1 + a2[6];
  v7 = sub_5C154(&qword_320F00);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v6, 1, v7))
  {
    v8 = type metadata accessor for YearInReviewSharableImage(0);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v6, v8);
    swift_release(*(_QWORD *)&v6[*(int *)(v7 + 44)]);
  }
  v9 = (char *)a1 + a2[7];
  v10 = type metadata accessor for ColorScheme(0);
  return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
}

_QWORD *sub_90828(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  int *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, _QWORD, uint64_t, int *);
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;

  v6 = sub_5C154((uint64_t *)&unk_32A010);
  if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
  {
    v7 = type metadata accessor for ColorConstants(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a1;
    v9 = v6;
    v10 = 1;
  }
  else
  {
    v11 = *a2;
    *a1 = *a2;
    swift_retain(v11);
    v8 = a1;
    v9 = v6;
    v10 = 0;
  }
  swift_storeEnumTagMultiPayload(v8, v9, v10);
  v12 = a3[5];
  v13 = a3[6];
  v14 = (_QWORD *)((char *)a1 + v12);
  v15 = (_QWORD *)((char *)a2 + v12);
  v16 = v15[1];
  *v14 = *v15;
  v14[1] = v16;
  v17 = (char *)a1 + v13;
  v18 = (char *)a2 + v13;
  swift_bridgeObjectRetain(v16);
  v19 = (int *)sub_5C154(&qword_320F00);
  v20 = *((_QWORD *)v19 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v20 + 48))(v18, 1, v19))
  {
    v21 = sub_5C154(&qword_320F08);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
  }
  else
  {
    v22 = type metadata accessor for YearInReviewSharableImage(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v17, v18, v22);
    *(_OWORD *)&v17[v19[9]] = *(_OWORD *)&v18[v19[9]];
    *(_OWORD *)&v17[v19[10]] = *(_OWORD *)&v18[v19[10]];
    v23 = v19[11];
    v24 = *(_QWORD *)&v18[v23];
    *(_QWORD *)&v17[v23] = v24;
    v25 = *(void (**)(char *, _QWORD, uint64_t, int *))(v20 + 56);
    swift_retain(v24);
    v25(v17, 0, 1, v19);
  }
  v26 = a3[7];
  v27 = (char *)a1 + v26;
  v28 = (char *)a2 + v26;
  v29 = type metadata accessor for ColorScheme(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 16))(v27, v28, v29);
  *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  return a1;
}

_QWORD *sub_909E0(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  int *v20;
  uint64_t v21;
  uint64_t (*v22)(char *, uint64_t, int *);
  int v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, _QWORD, uint64_t, int *);
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  if (a1 != a2)
  {
    sub_5E09C((uint64_t)a1, (uint64_t *)&unk_32A010);
    v6 = sub_5C154((uint64_t *)&unk_32A010);
    if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
    {
      v7 = type metadata accessor for ColorConstants(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      v8 = a1;
      v9 = v6;
      v10 = 1;
    }
    else
    {
      v11 = *a2;
      *a1 = *a2;
      swift_retain(v11);
      v8 = a1;
      v9 = v6;
      v10 = 0;
    }
    swift_storeEnumTagMultiPayload(v8, v9, v10);
  }
  v12 = a3[5];
  v13 = (_QWORD *)((char *)a1 + v12);
  v14 = (_QWORD *)((char *)a2 + v12);
  *v13 = *v14;
  v15 = v14[1];
  v16 = v13[1];
  v13[1] = v15;
  swift_bridgeObjectRetain(v15);
  swift_bridgeObjectRelease(v16);
  v17 = a3[6];
  v18 = (char *)a1 + v17;
  v19 = (char *)a2 + v17;
  v20 = (int *)sub_5C154(&qword_320F00);
  v21 = *((_QWORD *)v20 - 1);
  v22 = *(uint64_t (**)(char *, uint64_t, int *))(v21 + 48);
  v23 = v22(v18, 1, v20);
  v24 = v22(v19, 1, v20);
  if (!v23)
  {
    if (!v24)
    {
      v35 = type metadata accessor for YearInReviewSharableImage(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 24))(v18, v19, v35);
      v36 = v20[9];
      v37 = &v18[v36];
      v38 = &v19[v36];
      *(_QWORD *)v37 = *(_QWORD *)v38;
      *((_QWORD *)v37 + 1) = *((_QWORD *)v38 + 1);
      v39 = v20[10];
      v40 = &v18[v39];
      v41 = &v19[v39];
      *(_QWORD *)v40 = *(_QWORD *)v41;
      *((_QWORD *)v40 + 1) = *((_QWORD *)v41 + 1);
      v42 = v20[11];
      v43 = *(_QWORD *)&v19[v42];
      v44 = *(_QWORD *)&v18[v42];
      *(_QWORD *)&v18[v42] = v43;
      swift_retain(v43);
      swift_release(v44);
      goto LABEL_12;
    }
    sub_5E09C((uint64_t)v18, &qword_320F00);
    goto LABEL_11;
  }
  if (v24)
  {
LABEL_11:
    v29 = sub_5C154(&qword_320F08);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    goto LABEL_12;
  }
  v25 = type metadata accessor for YearInReviewSharableImage(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v18, v19, v25);
  *(_OWORD *)&v18[v20[9]] = *(_OWORD *)&v19[v20[9]];
  *(_OWORD *)&v18[v20[10]] = *(_OWORD *)&v19[v20[10]];
  v26 = v20[11];
  v27 = *(_QWORD *)&v19[v26];
  *(_QWORD *)&v18[v26] = v27;
  v28 = *(void (**)(char *, _QWORD, uint64_t, int *))(v21 + 56);
  swift_retain(v27);
  v28(v18, 0, 1, v20);
LABEL_12:
  v30 = a3[7];
  v31 = (char *)a1 + v30;
  v32 = (char *)a2 + v30;
  v33 = type metadata accessor for ColorScheme(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 24))(v31, v32, v33);
  *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  return a1;
}

char *sub_90C74(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  int *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;

  v6 = sub_5C154((uint64_t *)&unk_32A010);
  if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
  {
    v7 = type metadata accessor for ColorConstants(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload(a1, v6, 1);
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  v8 = a3[6];
  *(_OWORD *)&a1[a3[5]] = *(_OWORD *)&a2[a3[5]];
  v9 = &a1[v8];
  v10 = &a2[v8];
  v11 = (int *)sub_5C154(&qword_320F00);
  v12 = *((_QWORD *)v11 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v12 + 48))(v10, 1, v11))
  {
    v13 = sub_5C154(&qword_320F08);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    v14 = type metadata accessor for YearInReviewSharableImage(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v9, v10, v14);
    *(_OWORD *)&v9[v11[9]] = *(_OWORD *)&v10[v11[9]];
    *(_OWORD *)&v9[v11[10]] = *(_OWORD *)&v10[v11[10]];
    *(_QWORD *)&v9[v11[11]] = *(_QWORD *)&v10[v11[11]];
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v12 + 56))(v9, 0, 1, v11);
  }
  v15 = a3[7];
  v16 = &a1[v15];
  v17 = &a2[v15];
  v18 = type metadata accessor for ColorScheme(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  a1[a3[8]] = a2[a3[8]];
  return a1;
}

char *sub_90E18(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  int *v17;
  uint64_t v18;
  uint64_t (*v19)(char *, uint64_t, int *);
  int v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  if (a1 != a2)
  {
    sub_5E09C((uint64_t)a1, (uint64_t *)&unk_32A010);
    v6 = sub_5C154((uint64_t *)&unk_32A010);
    if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
    {
      v7 = type metadata accessor for ColorConstants(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload(a1, v6, 1);
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
  }
  v8 = a3[5];
  v9 = &a1[v8];
  v10 = &a2[v8];
  v12 = *(_QWORD *)v10;
  v11 = *((_QWORD *)v10 + 1);
  v13 = *((_QWORD *)v9 + 1);
  *(_QWORD *)v9 = v12;
  *((_QWORD *)v9 + 1) = v11;
  swift_bridgeObjectRelease(v13);
  v14 = a3[6];
  v15 = &a1[v14];
  v16 = &a2[v14];
  v17 = (int *)sub_5C154(&qword_320F00);
  v18 = *((_QWORD *)v17 - 1);
  v19 = *(uint64_t (**)(char *, uint64_t, int *))(v18 + 48);
  v20 = v19(v15, 1, v17);
  v21 = v19(v16, 1, v17);
  if (!v20)
  {
    if (!v21)
    {
      v29 = type metadata accessor for YearInReviewSharableImage(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 40))(v15, v16, v29);
      *(_OWORD *)&v15[v17[9]] = *(_OWORD *)&v16[v17[9]];
      *(_OWORD *)&v15[v17[10]] = *(_OWORD *)&v16[v17[10]];
      v30 = v17[11];
      v31 = *(_QWORD *)&v15[v30];
      *(_QWORD *)&v15[v30] = *(_QWORD *)&v16[v30];
      swift_release(v31);
      goto LABEL_11;
    }
    sub_5E09C((uint64_t)v15, &qword_320F00);
    goto LABEL_10;
  }
  if (v21)
  {
LABEL_10:
    v23 = sub_5C154(&qword_320F08);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    goto LABEL_11;
  }
  v22 = type metadata accessor for YearInReviewSharableImage(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v15, v16, v22);
  *(_OWORD *)&v15[v17[9]] = *(_OWORD *)&v16[v17[9]];
  *(_OWORD *)&v15[v17[10]] = *(_OWORD *)&v16[v17[10]];
  *(_QWORD *)&v15[v17[11]] = *(_QWORD *)&v16[v17[11]];
  (*(void (**)(char *, _QWORD, uint64_t, int *))(v18 + 56))(v15, 0, 1, v17);
LABEL_11:
  v24 = a3[7];
  v25 = &a1[v24];
  v26 = &a2[v24];
  v27 = type metadata accessor for ColorScheme(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 40))(v25, v26, v27);
  a1[a3[8]] = a2[a3[8]];
  return a1;
}

uint64_t sub_9106C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_91078);
}

uint64_t sub_91078(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v6 = sub_5C154(&qword_31F498);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  if ((_DWORD)a2 == 2147483646)
  {
    v9 = *(_QWORD *)(a1 + a3[5] + 8);
    if (v9 >= 0xFFFFFFFF)
      LODWORD(v9) = -1;
    v10 = v9 - 1;
    if (v10 < 0)
      v10 = -1;
    return (v10 + 1);
  }
  else
  {
    v11 = sub_5C154(&qword_320F08);
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v13 = v11;
      v14 = a3[6];
    }
    else
    {
      v13 = type metadata accessor for ColorScheme(0);
      v12 = *(_QWORD *)(v13 - 8);
      v14 = a3[7];
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(a1 + v14, a2, v13);
  }
}

uint64_t sub_9115C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_91168);
}

uint64_t sub_91168(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  result = sub_5C154(&qword_31F498);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 2147483646)
    {
      *(_QWORD *)(a1 + a4[5] + 8) = a2;
      return result;
    }
    v13 = sub_5C154(&qword_320F08);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[6];
    }
    else
    {
      v10 = type metadata accessor for ColorScheme(0);
      v14 = *(_QWORD *)(v10 - 8);
      v15 = a4[7];
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t type metadata accessor for YearInReviewToolbarContent(uint64_t a1)
{
  uint64_t result;

  result = qword_320F68;
  if (!qword_320F68)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for YearInReviewToolbarContent);
  return result;
}

void sub_91278(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD v8[5];

  sub_91328(319);
  if (v3 <= 0x3F)
  {
    v8[0] = *(_QWORD *)(v2 - 8) + 64;
    v8[1] = &unk_259F00;
    sub_9137C(319);
    if (v5 <= 0x3F)
    {
      v8[2] = *(_QWORD *)(v4 - 8) + 64;
      v6 = type metadata accessor for ColorScheme(319);
      if (v7 <= 0x3F)
      {
        v8[3] = *(_QWORD *)(v6 - 8) + 64;
        v8[4] = &unk_259F18;
        swift_initStructMetadata(a1, 256, 5, v8, a1 + 16);
      }
    }
  }
}

void sub_91328(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_31F510)
  {
    v2 = type metadata accessor for ColorConstants(255);
    v3 = type metadata accessor for Environment.Content(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_31F510);
  }
}

void sub_9137C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_320F78)
  {
    v2 = sub_667D0(&qword_320F00);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_320F78);
  }
}

uint64_t sub_913D4(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_2B5AD8, 1);
}

uint64_t sub_913E4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = (uint64_t *)(v0 + *(int *)(type metadata accessor for YearInReviewToolbarContent(0) + 20));
  v2 = v1[1];
  if (!v2)
    return sub_17EB50();
  v3 = *v1;
  swift_bridgeObjectRetain(v1[1]);
  v4 = sub_17EB50();
  v6 = v5;
  v7 = sub_5C154(&qword_3210B0);
  v8 = swift_allocObject(v7, 72, 7);
  *(_OWORD *)(v8 + 16) = xmmword_258070;
  *(_QWORD *)(v8 + 56) = &type metadata for String;
  *(_QWORD *)(v8 + 64) = sub_939DC();
  *(_QWORD *)(v8 + 32) = v3;
  *(_QWORD *)(v8 + 40) = v2;
  v9 = static String.localizedStringWithFormat(_:_:)(v4, v6, v8);
  swift_bridgeObjectRelease(v6);
  swift_bridgeObjectRelease(v8);
  return v9;
}

uint64_t sub_914F8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  __n128 v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  unint64_t v32;
  void (*v33)(char *, char *, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t OpaqueTypeConformance2;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  _QWORD v75[2];
  uint64_t v76;
  char *v77;
  uint64_t v78;
  char *v79;
  char *v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char v92[16];
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  unint64_t v96;
  uint64_t v97;

  v2 = v1;
  v90 = a1;
  v89 = sub_5C154(&qword_320FB8);
  __chkstk_darwin(v89);
  v88 = (char *)v75 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_5C154(&qword_320FC0);
  v86 = *(_QWORD *)(v4 - 8);
  v87 = v4;
  __chkstk_darwin(v4);
  v85 = (char *)v75 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v81 = sub_5C154(&qword_320FC8);
  v78 = *(_QWORD *)(v81 - 8);
  __chkstk_darwin(v81);
  v77 = (char *)v75 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_5C154(&qword_320F08);
  __chkstk_darwin(v7);
  v9 = (char *)v75 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_5C154(&qword_320F00);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v76 = (uint64_t)v75 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_5C154(&qword_320FD0);
  __chkstk_darwin(v13);
  v80 = (char *)v75 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __chkstk_darwin(v15);
  v91 = (uint64_t)v75 - v17;
  v18 = type metadata accessor for ToolbarItemPlacement(0, v16);
  __chkstk_darwin(v18);
  v79 = (char *)v75 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v22 = (char *)v75 - v21;
  v23 = sub_5C154(&qword_320FD8);
  v24 = *(_QWORD *)(v23 - 8);
  __chkstk_darwin(v23);
  v26 = (char *)v75 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = __chkstk_darwin(v27);
  v30 = (char *)v75 - v29;
  static ToolbarItemPlacement.topBarLeading.getter(v28);
  v93 = v2;
  v31 = sub_5C154(&qword_320FE0);
  v32 = sub_93420();
  ToolbarItem<>.init(placement:content:)(v22, sub_93418, v92, v31, v32);
  v82 = v30;
  v83 = v24;
  v33 = *(void (**)(char *, char *, uint64_t))(v24 + 32);
  v84 = v23;
  v33(v30, v26, v23);
  v34 = type metadata accessor for YearInReviewToolbarContent(0);
  sub_5E1A4(v2 + *(int *)(v34 + 24), (uint64_t)v9, &qword_320F08);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    sub_5E09C((uint64_t)v9, &qword_320F08);
    v35 = sub_5C154(&qword_321030);
    v36 = (uint64_t)v80;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v80, 1, 1, v35);
    v37 = sub_67060(&qword_321038, &qword_320FC8, (uint64_t)&protocol conformance descriptor for ToolbarItem<A, B>);
    v94 = v81;
    v95 = v37;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v94, &opaque type descriptor for <<opaque return type of static ToolbarContentBuilder.buildBlock<A>(_:)>>, 1);
    static ToolbarContentBuilder.buildIf<A>(_:)(v36, v35, OpaqueTypeConformance2);
    v39 = sub_5E09C(v36, &qword_320FD0);
    v40 = v79;
  }
  else
  {
    v41 = v76;
    v42 = sub_66F14((uint64_t)v9, v76, &qword_320F00);
    v40 = v79;
    v43 = static ToolbarItemPlacement.primaryAction.getter(v42);
    v75[1] = v75;
    __chkstk_darwin(v43);
    v75[-2] = v41;
    v75[-1] = v2;
    v44 = sub_5C154(&qword_321078);
    v45 = sub_667D0(&qword_321080);
    v46 = sub_667D0(&qword_321050);
    v47 = sub_93774();
    v48 = sub_67060((unint64_t *)&unk_326150, &qword_321050, (uint64_t)&protocol conformance descriptor for Label<A, B>);
    v94 = v45;
    v95 = v46;
    v96 = v47;
    v97 = v48;
    v49 = swift_getOpaqueTypeConformance2(&v94, &opaque type descriptor for <<opaque return type of View.accessibilityShowsLargeContentViewer<A>(_:)>>, 1);
    v50 = v77;
    ToolbarItem<>.init(placement:content:)(v40, sub_9376C, &v75[-4], v44, v49);
    v51 = sub_67060(&qword_321038, &qword_320FC8, (uint64_t)&protocol conformance descriptor for ToolbarItem<A, B>);
    v53 = (uint64_t)v80;
    v52 = v81;
    static ToolbarContentBuilder.buildBlock<A>(_:)(v50, v81, v51);
    v54 = sub_5C154(&qword_321030);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 56))(v53, 0, 1, v54);
    v94 = v52;
    v95 = v51;
    v55 = swift_getOpaqueTypeConformance2(&v94, &opaque type descriptor for <<opaque return type of static ToolbarContentBuilder.buildBlock<A>(_:)>>, 1);
    static ToolbarContentBuilder.buildIf<A>(_:)(v53, v54, v55);
    sub_5E09C(v53, &qword_320FD0);
    (*(void (**)(char *, uint64_t))(v78 + 8))(v50, v52);
    v39 = sub_5E09C(v41, &qword_320F00);
  }
  v56 = static ToolbarItemPlacement.primaryAction.getter(v39);
  __chkstk_darwin(v56);
  v75[-2] = v2;
  v57 = sub_5C154(&qword_321040);
  v58 = sub_667D0(&qword_321048);
  v59 = sub_667D0(&qword_321050);
  v60 = sub_93664();
  v61 = sub_67060((unint64_t *)&unk_326150, &qword_321050, (uint64_t)&protocol conformance descriptor for Label<A, B>);
  v94 = v58;
  v95 = v59;
  v96 = v60;
  v97 = v61;
  v62 = swift_getOpaqueTypeConformance2(&v94, &opaque type descriptor for <<opaque return type of View.accessibilityShowsLargeContentViewer<A>(_:)>>, 1);
  v63 = v85;
  ToolbarItem<>.init(placement:content:)(v40, sub_9365C, &v75[-4], v57, v62);
  v65 = v88;
  v64 = v89;
  v66 = (uint64_t)&v88[*(int *)(v89 + 48)];
  v67 = &v88[*(int *)(v89 + 64)];
  v68 = v82;
  v69 = v83;
  v70 = v84;
  (*(void (**)(char *, char *, uint64_t))(v83 + 16))(v88, v82, v84);
  v71 = v91;
  sub_5E1A4(v91, v66, &qword_320FD0);
  v73 = v86;
  v72 = v87;
  (*(void (**)(char *, char *, uint64_t))(v86 + 16))(v67, v63, v87);
  TupleToolbarContent.init(_:)(v65, v64);
  (*(void (**)(char *, uint64_t))(v73 + 8))(v63, v72);
  sub_5E09C(v71, &qword_320FD0);
  return (*(uint64_t (**)(char *, uint64_t))(v69 + 8))(v68, v70);
}

uint64_t sub_91BE8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  int v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char v62;
  char v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  void (*v69)(_QWORD);
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  double v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  char v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  _QWORD *v121;
  void (*v122)(char *, _QWORD, uint64_t);
  char *v123;
  char *v124;
  uint64_t result;
  uint64_t v126;
  char *v127;
  char *v128;
  void (*v129)(char *, char *, uint64_t);
  char *v130;
  char *v131;
  void (*v132)(char *, char *, uint64_t);
  uint64_t v133;
  void (*v134)(char *, uint64_t);
  char *v135;
  uint64_t v136;
  uint64_t v137;
  char *v138;
  char *v139;
  uint64_t v140;
  uint64_t v141;
  unsigned int *v142;
  uint64_t v143;
  char *v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  char *v149;
  double v150;
  uint64_t v151;
  uint64_t v152;
  char v153;
  unint64_t v154;
  uint64_t v155;
  uint64_t KeyPath;
  uint64_t v157;
  uint64_t *v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t (*v164)(char *, uint64_t);
  unsigned int v165;
  void (*v166)(char *, _QWORD, uint64_t);
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  char *v170;
  uint64_t v171;
  char *v172;
  uint64_t v173;
  char *v174;
  char *v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  char *v182;
  char *v183;
  char *v184;
  char *v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  unint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  char *v195;
  uint64_t v196;
  uint64_t v197;
  char *v198;
  char *v199;
  _QWORD *v200;
  uint64_t v201;
  char *v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  char v207;
  uint64_t v208;

  v189 = a2;
  v187 = type metadata accessor for BlendMode(0);
  v186 = *(_QWORD *)(v187 - 8);
  __chkstk_darwin(v187);
  v185 = (char *)&v160 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v177 = sub_5C154(&qword_31F5F8);
  __chkstk_darwin(v177);
  v184 = (char *)&v160 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v172 = (char *)&v160 - v6;
  v7 = type metadata accessor for DynamicTypeSize(0);
  v200 = *(_QWORD **)(v7 - 8);
  v201 = v7;
  __chkstk_darwin(v7);
  v199 = (char *)&v160 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v198 = (char *)&v160 - v10;
  v181 = sub_5C154(&qword_31F600);
  __chkstk_darwin(v181);
  v170 = (char *)&v160 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __chkstk_darwin(v12);
  v173 = (uint64_t)&v160 - v14;
  v197 = type metadata accessor for Font.Leading(0, v13);
  v196 = *(_QWORD *)(v197 - 8);
  __chkstk_darwin(v197);
  v195 = (char *)&v160 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v163 = type metadata accessor for ColorConstants(0);
  v162 = *(_QWORD *)(v163 - 8);
  __chkstk_darwin(v163);
  v161 = (uint64_t)&v160 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for ColorScheme(0);
  v203 = *(_QWORD *)(v17 - 8);
  v204 = v17;
  __chkstk_darwin(v17);
  v202 = (char *)&v160 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v180 = sub_5C154(&qword_31F6C0);
  v176 = *(_QWORD *)(v180 - 8);
  __chkstk_darwin(v180);
  v174 = (char *)&v160 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v169 = sub_5C154(&qword_321018);
  __chkstk_darwin(v169);
  v175 = (char *)&v160 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v179 = sub_5C154(&qword_321008);
  __chkstk_darwin(v179);
  v178 = (uint64_t)&v160 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_5C154(&qword_320FF8);
  __chkstk_darwin(v22);
  v183 = (char *)&v160 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v171 = sub_5C154(&qword_320FE0);
  __chkstk_darwin(v171);
  v182 = (char *)&v160 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v205 = sub_17EB50();
  v206 = v25;
  v190 = sub_668F8();
  v26 = Text.init<A>(_:)(&v205, &type metadata for String, v190);
  v28 = v27;
  v30 = v29;
  v32 = v31 & 1;
  LODWORD(v205) = static HierarchicalShapeStyle.primary.getter();
  v33 = Text.foregroundStyle<A>(_:)(&v205, v26, v28, v32, v30, &type metadata for HierarchicalShapeStyle, &protocol witness table for HierarchicalShapeStyle);
  v35 = v34;
  v37 = v36;
  v39 = v38 & 1;
  sub_6693C(v26, v28, v32);
  swift_bridgeObjectRelease(v30);
  v40 = Text.tracking(_:)(v33, v35, v39, v37, -0.68);
  v42 = v41;
  v44 = v43;
  v46 = v45 & 1;
  sub_6693C(v33, v35, v39);
  swift_bridgeObjectRelease(v37);
  v47 = LocalizedStringKey.init(stringLiteral:)(32, 0xE100000000000000);
  v48 = Text.init(_:tableName:bundle:comment:)(v47);
  v50 = v49;
  v52 = v51;
  v54 = v53 & 1;
  v193 = static Text.+ infix(_:_:)(v40, v42, v46, v44, v48, v49, v54, v51);
  v192 = v55;
  LODWORD(v191) = v56;
  v194 = v57;
  sub_6693C(v48, v50, v54);
  swift_bridgeObjectRelease(v52);
  sub_6693C(v40, v42, v46);
  swift_bridgeObjectRelease(v44);
  v205 = sub_913E4();
  v206 = v58;
  v59 = Text.init<A>(_:)(&v205, &type metadata for String, v190);
  v61 = v60;
  v63 = v62;
  v65 = v64;
  v167 = type metadata accessor for YearInReviewToolbarContent(0);
  v66 = a1 + *(int *)(v167 + 28);
  v68 = v202;
  v67 = v203;
  v69 = *(void (**)(_QWORD))(v203 + 104);
  v165 = enum case for ColorScheme.dark(_:);
  v70 = v204;
  v166 = (void (*)(char *, _QWORD, uint64_t))v69;
  v69(v202);
  v168 = v66;
  LOBYTE(v66) = static ColorScheme.== infix(_:_:)(v66, v68);
  v164 = *(uint64_t (**)(char *, uint64_t))(v67 + 8);
  v71 = v164(v68, v70);
  v188 = a1;
  if ((v66 & 1) != 0)
  {
    v72 = v161;
    v73 = sub_76AA0(v161);
    v74 = ColorConstants.vibrantSecondary.getter(v73);
    (*(void (**)(uint64_t, uint64_t))(v162 + 8))(v72, v163);
  }
  else
  {
    v74 = static Color.secondary.getter(v71);
  }
  v205 = v74;
  v75 = v63 & 1;
  v76 = Text.foregroundStyle<A>(_:)(&v205, v59, v61, v63 & 1, v65, &type metadata for Color, &protocol witness table for Color);
  v78 = v77;
  v80 = v79;
  v82 = v81 & 1;
  sub_6693C(v59, v61, v75);
  swift_release(v74);
  swift_bridgeObjectRelease(v65);
  v83 = Text.tracking(_:)(v76, v78, v82, v80, -0.3);
  v85 = v84;
  v87 = v86;
  v89 = v88 & 1;
  sub_6693C(v76, v78, v82);
  swift_bridgeObjectRelease(v80);
  LOBYTE(v82) = v191 & 1;
  v90 = v193;
  v91 = v192;
  v92 = v194;
  v190 = static Text.+ infix(_:_:)(v193, v192, v191 & 1, v194, v83, v85, v89, v87);
  v94 = v93;
  v191 = v95;
  v97 = v96 & 1;
  sub_6693C(v83, v85, v89);
  swift_bridgeObjectRelease(v87);
  sub_6693C(v90, v91, v82);
  v98 = swift_bridgeObjectRelease(v92);
  v99 = static Font.body.getter(v98);
  v100 = v196;
  v101 = v195;
  v102 = v197;
  (*(void (**)(char *, _QWORD, uint64_t))(v196 + 104))(v195, enum case for Font.Leading.tight(_:), v197);
  v103 = Font.leading(_:)(v101, v99);
  swift_release(v99);
  (*(void (**)(char *, uint64_t))(v100 + 8))(v101, v102);
  v104 = v190;
  v105 = v191;
  v106 = Text.font(_:)(v103, v190, v94, v97, v191);
  v108 = v107;
  LOBYTE(v100) = v109;
  v111 = v110;
  swift_release(v103);
  sub_6693C(v104, v94, v97);
  v112 = swift_bridgeObjectRelease(v105);
  v113 = static Font.Weight.medium.getter(v112);
  v114 = Text.fontWeight(_:)(*(_QWORD *)&v113, 0, v106, v108, v100 & 1, v111);
  v116 = v115;
  LOBYTE(v94) = v117;
  v119 = v118;
  sub_6693C(v106, v108, v100 & 1);
  swift_bridgeObjectRelease(v111);
  v205 = v114;
  v206 = v116;
  v207 = v94 & 1;
  v208 = v119;
  v121 = v200;
  v120 = v201;
  v122 = (void (*)(char *, _QWORD, uint64_t))v200[13];
  v123 = v198;
  v122(v198, enum case for DynamicTypeSize.small(_:), v201);
  v124 = v199;
  v122(v199, enum case for DynamicTypeSize.accessibility1(_:), v120);
  sub_648E0(&qword_31F610, (uint64_t (*)(uint64_t))&type metadata accessor for DynamicTypeSize, (uint64_t)&protocol conformance descriptor for DynamicTypeSize);
  result = dispatch thunk of static Comparable.<= infix(_:_:)(v123, v124, v120);
  if ((result & 1) != 0)
  {
    v126 = v177;
    v127 = v172;
    v128 = &v172[*(int *)(v177 + 48)];
    v129 = (void (*)(char *, char *, uint64_t))v121[4];
    v129(v172, v123, v120);
    v129(v128, v124, v120);
    v130 = v184;
    v131 = &v184[*(int *)(v126 + 48)];
    v132 = (void (*)(char *, char *, uint64_t))v121[2];
    v132(v184, v127, v120);
    v132(v131, v128, v120);
    v133 = (uint64_t)v170;
    v129(v170, v130, v120);
    v134 = (void (*)(char *, uint64_t))v121[1];
    v134(v131, v120);
    v135 = &v130[*(int *)(v126 + 48)];
    v129(v130, v127, v120);
    v129(v135, v128, v120);
    v136 = v181;
    v129((char *)(v133 + *(int *)(v181 + 36)), v135, v120);
    v134(v130, v120);
    v137 = v173;
    sub_66F14(v133, v173, &qword_31F600);
    sub_67060(&qword_31F620, &qword_31F600, (uint64_t)&protocol conformance descriptor for ClosedRange<A>);
    v138 = v174;
    View.dynamicTypeSize<A>(_:)(v137, &type metadata for Text, v136, &protocol witness table for Text);
    sub_5E09C(v137, &qword_31F600);
    sub_6693C(v205, v206, v207);
    swift_bridgeObjectRelease(v208);
    v139 = v202;
    v140 = v204;
    v166(v202, v165, v204);
    v141 = v168;
    LOBYTE(v128) = static ColorScheme.== infix(_:_:)(v168, v139);
    v164(v139, v140);
    v142 = (unsigned int *)&enum case for BlendMode.plusLighter(_:);
    v143 = v186;
    if ((v128 & 1) == 0)
      v142 = (unsigned int *)&enum case for BlendMode.normal(_:);
    v144 = v185;
    v145 = v187;
    (*(void (**)(char *, _QWORD, uint64_t))(v186 + 104))(v185, *v142, v187);
    v146 = (uint64_t)v175;
    (*(void (**)(char *, char *, uint64_t))(v143 + 16))(&v175[*(int *)(v169 + 36)], v144, v145);
    v147 = v176;
    v148 = v180;
    (*(void (**)(uint64_t, char *, uint64_t))(v176 + 16))(v146, v138, v180);
    (*(void (**)(char *, uint64_t))(v143 + 8))(v144, v145);
    (*(void (**)(char *, uint64_t))(v147 + 8))(v138, v148);
    v149 = (char *)(v188 + *(int *)(v167 + 32));
    if (*v149)
      v150 = 1.0;
    else
      v150 = 0.0;
    v151 = v178;
    sub_5E1A4(v146, v178, &qword_321018);
    v152 = v179;
    *(double *)(v151 + *(int *)(v179 + 36)) = v150;
    sub_5E09C(v146, &qword_321018);
    v153 = *v149;
    v154 = sub_93528();
    v155 = (uint64_t)v183;
    View.accessibilityHidden(_:)((v153 & 1) == 0, v152, v154);
    sub_5E09C(v151, &qword_321008);
    KeyPath = swift_getKeyPath(&unk_259F78);
    v157 = (uint64_t)v182;
    v158 = (uint64_t *)&v182[*(int *)(v171 + 36)];
    v159 = sub_5C154(&qword_321028);
    (*(void (**)(char *, uint64_t, uint64_t))(v203 + 16))((char *)v158 + *(int *)(v159 + 28), v141, v140);
    *v158 = KeyPath;
    sub_66F14(v155, v157, &qword_320FF8);
    return sub_66F14(v157, v189, &qword_320FE0);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_92918@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t KeyPath;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49[16];
  uint64_t v50;
  _QWORD v51[4];

  v41 = a2;
  v48 = a3;
  v4 = type metadata accessor for ToolbarButtonStyle(0);
  v5 = *(_QWORD *)(v4 - 8);
  v46 = v4;
  v47 = v5;
  __chkstk_darwin(v4);
  v7 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_5C154((uint64_t *)&unk_326120);
  __chkstk_darwin(v8);
  v10 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_5C154(&qword_320F00);
  __chkstk_darwin(v11);
  v13 = (char *)&v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_5C154(&qword_321090);
  v43 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v16 = (char *)&v41 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_5C154(&qword_3210A0);
  v44 = *(_QWORD *)(v17 - 8);
  v45 = v17;
  __chkstk_darwin(v17);
  v19 = (char *)&v41 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = sub_5C154(&qword_321080);
  __chkstk_darwin(v42);
  v21 = (char *)&v41 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5E1A4(a1, (uint64_t)v13, &qword_320F00);
  v22 = a1;
  v23 = v41;
  v24 = sub_92D14(v22);
  v51[3] = sub_9387C();
  v51[0] = v24;
  SharePreview<>.init(metadata:)(v51);
  v50 = v23;
  v25 = v23;
  v26 = sub_67060(&qword_3210A8, &qword_320F00, (uint64_t)&protocol conformance descriptor for SnapshotImageItem<A>);
  v27 = ShareLink.init<A>(item:subject:message:preview:label:)(v13, 0, 0, 0, 0, 0, 0, 0, 0, v10, sub_938B8, v49, &type metadata for Never, &type metadata for Never, &type metadata for Image, v11, &protocol witness table for Never, &protocol witness table for Never, &protocol witness table for Image,
          v26);
  ToolbarButtonStyle.init()(v27);
  v28 = sub_67060(&qword_321098, &qword_321090, (uint64_t)&protocol conformance descriptor for ShareLink<A, B, C, D>);
  v29 = sub_648E0(&qword_321070, (uint64_t (*)(uint64_t))&type metadata accessor for ToolbarButtonStyle, (uint64_t)&protocol conformance descriptor for ToolbarButtonStyle);
  v30 = v46;
  View.buttonStyle<A>(_:)(v7, v14, v46, v28, v29);
  (*(void (**)(char *, uint64_t))(v47 + 8))(v7, v30);
  (*(void (**)(char *, uint64_t))(v43 + 8))(v16, v14);
  KeyPath = swift_getKeyPath(&unk_259F78);
  v32 = v25 + *(int *)(type metadata accessor for YearInReviewToolbarContent(0) + 28);
  v33 = v42;
  v34 = (uint64_t *)&v21[*(int *)(v42 + 36)];
  v35 = (char *)v34 + *(int *)(sub_5C154(&qword_321028) + 28);
  v36 = type metadata accessor for ColorScheme(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 16))(v35, v32, v36);
  *v34 = KeyPath;
  (*(void (**)(char *, char *, uint64_t))(v44 + 32))(v21, v19, v45);
  v37 = sub_5C154(&qword_321050);
  v38 = sub_93774();
  v39 = sub_67060((unint64_t *)&unk_326150, &qword_321050, (uint64_t)&protocol conformance descriptor for Label<A, B>);
  View.accessibilityShowsLargeContentViewer<A>(_:)(sub_92F34, 0, v33, v37, v38, v39);
  return sub_5E09C((uint64_t)v21, &qword_321080);
}

id sub_92D14(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  NSString v9;
  uint64_t v10;
  uint64_t v11;
  NSString v12;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v21;

  v2 = sub_5C154(&qword_320F00);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  __chkstk_darwin(v2);
  v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = objc_msgSend(objc_allocWithZone((Class)LPLinkMetadata), "init");
  sub_913E4();
  v8 = v7;
  v9 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v8);
  objc_msgSend(v6, "setTitle:", v9);

  sub_17EB50();
  v11 = v10;
  v12 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v11);
  objc_msgSend(v6, "setSummary:", v12);

  v13 = objc_msgSend(objc_allocWithZone((Class)LPImageProperties), "init");
  objc_msgSend(v13, "setType:", 1);
  v14 = objc_msgSend(objc_allocWithZone((Class)NSItemProvider), "init");
  sub_5E1A4(a1, (uint64_t)v5, &qword_320F00);
  v15 = *(unsigned __int8 *)(v3 + 80);
  v16 = (v15 + 16) & ~v15;
  v17 = swift_allocObject(&unk_2E9728, v16 + v4, v15 | 7);
  sub_66F14((uint64_t)v5, v17 + v16, &qword_320F00);
  v18 = sub_67060(&qword_3210A8, &qword_320F00, (uint64_t)&protocol conformance descriptor for SnapshotImageItem<A>);
  NSItemProvider.register<A>(_:)(sub_93988, v17, v2, v18);
  swift_release(v17);
  v19 = objc_msgSend(objc_allocWithZone((Class)LPImage), "initWithItemProvider:properties:placeholderImage:", v14, v13, 0);
  objc_msgSend(v6, "setImage:", v19);

  return v6;
}

uint64_t sub_92F34()
{
  return sub_933A8(0x6572616853, 0xD000000000000013, 0x800000000026FD90);
}

uint64_t sub_92F5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t KeyPath;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD v57[5];

  v50 = a1;
  v56 = a2;
  v2 = type metadata accessor for ToolbarButtonStyle(0);
  v3 = *(_QWORD *)(v2 - 8);
  v53 = v2;
  v54 = v3;
  __chkstk_darwin(v2);
  v5 = (char *)&v46 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = type metadata accessor for YearInReviewToolbarContent(0);
  v47 = *(_QWORD *)(v55 - 8);
  v6 = *(_QWORD *)(v47 + 64);
  __chkstk_darwin(v55);
  v7 = type metadata accessor for ActionMetrics(0);
  __chkstk_darwin(v7);
  v9 = (char *)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_5C154(&qword_3261F0);
  __chkstk_darwin(v10);
  v12 = (char *)&v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_5C154(&qword_321060);
  v49 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v15 = (char *)&v46 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_5C154(&qword_3210B8);
  v51 = *(_QWORD *)(v16 - 8);
  v52 = v16;
  __chkstk_darwin(v16);
  v46 = (char *)&v46 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = sub_5C154(&qword_321048);
  v18 = __chkstk_darwin(v48);
  v20 = (char *)&v46 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for ButtonRole(0, v18);
  v22.n128_f64[0] = (*(double (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v12, 1, 1, v21);
  v23 = static ActionMetrics.notInstrumented.getter(v22);
  v24 = static Models.FlowBackAction.Dismissal.sheetDismiss.getter(v23);
  v26 = v25;
  v57[3] = type metadata accessor for Models.FlowBackAction(0);
  v57[4] = &protocol witness table for Models.FlowBackAction;
  sub_668BC(v57);
  Models.FlowBackAction.init(actionMetrics:dismissal:)(v9, v24, v26);
  v27 = v50;
  sub_93A20(v50, (uint64_t)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v28 = *(unsigned __int8 *)(v47 + 80);
  v29 = (v28 + 16) & ~v28;
  v30 = swift_allocObject(&unk_2E9750, v29 + v6, v28 | 7);
  sub_93BA4((uint64_t)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v30 + v29);
  v31 = ActionButton.init(role:action:label:)(v12, v57, sub_93BE8, v30, &type metadata for Image, &protocol witness table for Image);
  ToolbarButtonStyle.init()(v31);
  v32 = sub_67060(&qword_321068, &qword_321060, (uint64_t)&protocol conformance descriptor for ActionButton<A>);
  v33 = sub_648E0(&qword_321070, (uint64_t (*)(uint64_t))&type metadata accessor for ToolbarButtonStyle, (uint64_t)&protocol conformance descriptor for ToolbarButtonStyle);
  v34 = v46;
  v35 = v53;
  View.buttonStyle<A>(_:)(v5, v13, v53, v32, v33);
  (*(void (**)(char *, uint64_t))(v54 + 8))(v5, v35);
  (*(void (**)(char *, uint64_t))(v49 + 8))(v15, v13);
  KeyPath = swift_getKeyPath(&unk_259F78);
  v37 = v27 + *(int *)(v55 + 28);
  v38 = v48;
  v39 = (uint64_t *)&v20[*(int *)(v48 + 36)];
  v40 = (char *)v39 + *(int *)(sub_5C154(&qword_321028) + 28);
  v41 = type metadata accessor for ColorScheme(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 16))(v40, v37, v41);
  *v39 = KeyPath;
  (*(void (**)(char *, char *, uint64_t))(v51 + 32))(v20, v34, v52);
  v42 = sub_5C154(&qword_321050);
  v43 = sub_93664();
  v44 = sub_67060((unint64_t *)&unk_326150, &qword_321050, (uint64_t)&protocol conformance descriptor for Label<A, B>);
  View.accessibilityShowsLargeContentViewer<A>(_:)(sub_93388, 0, v38, v42, v43, v44);
  return sub_5E09C((uint64_t)v20, &qword_321048);
}

uint64_t sub_93388()
{
  return sub_933A8(0x65736F6C43, 0x6B72616D78, 0xE500000000000000);
}

uint64_t sub_933A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  unint64_t v6;
  _QWORD v8[2];

  v8[0] = sub_17EB50();
  v8[1] = v5;
  v6 = sub_668F8();
  return Label<>.init<A>(_:systemImage:)(v8, a2, a3, &type metadata for String, v6);
}

uint64_t sub_93418@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_91BE8(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_93420()
{
  unint64_t result;
  uint64_t v1;

  result = qword_320FE8;
  if (!qword_320FE8)
  {
    v1 = sub_667D0(&qword_320FE0);
    sub_934A4();
    sub_67060(&qword_321020, &qword_321028, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_320FE8);
  }
  return result;
}

unint64_t sub_934A4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_320FF0;
  if (!qword_320FF0)
  {
    v1 = sub_667D0(&qword_320FF8);
    sub_93528();
    sub_648E0(&qword_31F710, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_320FF0);
  }
  return result;
}

unint64_t sub_93528()
{
  unint64_t result;
  uint64_t v1;

  result = qword_321000;
  if (!qword_321000)
  {
    v1 = sub_667D0(&qword_321008);
    sub_93594();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_321000);
  }
  return result;
}

unint64_t sub_93594()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[4];

  result = qword_321010;
  if (!qword_321010)
  {
    v1 = sub_667D0(&qword_321018);
    v2[0] = &type metadata for Text;
    v2[1] = sub_667D0(&qword_31F600);
    v2[2] = &protocol witness table for Text;
    v2[3] = sub_67060(&qword_31F620, &qword_31F600, (uint64_t)&protocol conformance descriptor for ClosedRange<A>);
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.dynamicTypeSize<A>(_:)>>, 1);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_321010);
  }
  return result;
}

uint64_t sub_9365C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_92F5C(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_93664()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[4];

  result = qword_321058;
  if (!qword_321058)
  {
    v1 = sub_667D0(&qword_321048);
    v2[0] = sub_667D0(&qword_321060);
    v2[1] = type metadata accessor for ToolbarButtonStyle(255);
    v2[2] = sub_67060(&qword_321068, &qword_321060, (uint64_t)&protocol conformance descriptor for ActionButton<A>);
    v2[3] = sub_648E0(&qword_321070, (uint64_t (*)(uint64_t))&type metadata accessor for ToolbarButtonStyle, (uint64_t)&protocol conformance descriptor for ToolbarButtonStyle);
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>, 1);
    sub_67060(&qword_321020, &qword_321028, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_321058);
  }
  return result;
}

uint64_t sub_9376C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_92918(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

unint64_t sub_93774()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[4];

  result = qword_321088;
  if (!qword_321088)
  {
    v1 = sub_667D0(&qword_321080);
    v2[0] = sub_667D0(&qword_321090);
    v2[1] = type metadata accessor for ToolbarButtonStyle(255);
    v2[2] = sub_67060(&qword_321098, &qword_321090, (uint64_t)&protocol conformance descriptor for ShareLink<A, B, C, D>);
    v2[3] = sub_648E0(&qword_321070, (uint64_t (*)(uint64_t))&type metadata accessor for ToolbarButtonStyle, (uint64_t)&protocol conformance descriptor for ToolbarButtonStyle);
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>, 1);
    sub_67060(&qword_321020, &qword_321028, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_321088);
  }
  return result;
}

unint64_t sub_9387C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_326140;
  if (!qword_326140)
  {
    v1 = objc_opt_self(LPLinkMetadata);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_326140);
  }
  return result;
}

uint64_t sub_938B8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = Image.init(systemName:)(0xD00000000000001FLL, 0x800000000026FDB0);
  *a1 = result;
  return result;
}

uint64_t sub_938FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = sub_5C154(&qword_320F00);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  v7 = v0 + v4;
  v8 = type metadata accessor for YearInReviewSharableImage(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  swift_release(*(_QWORD *)(v7 + *(int *)(v1 + 44)));
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_93988@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(sub_5C154(&qword_320F00) - 8) + 80);
  return sub_5E1A4(v1 + ((v3 + 16) & ~v3), a1, &qword_320F00);
}

unint64_t sub_939DC()
{
  unint64_t result;

  result = qword_3262B0;
  if (!qword_3262B0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for String, &type metadata for String);
    atomic_store(result, (unint64_t *)&qword_3262B0);
  }
  return result;
}

uint64_t sub_93A20(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for YearInReviewToolbarContent(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_93A64()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;

  v1 = (int *)type metadata accessor for YearInReviewToolbarContent(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = (_QWORD *)(v0 + v4);
  v7 = sub_5C154((uint64_t *)&unk_32A010);
  if (swift_getEnumCaseMultiPayload(v0 + v4, v7) == 1)
  {
    v8 = type metadata accessor for ColorConstants(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v0 + v4, v8);
  }
  else
  {
    swift_release(*v6);
  }
  swift_bridgeObjectRelease(*(_QWORD *)((char *)v6 + v1[5] + 8));
  v9 = (char *)v6 + v1[6];
  v10 = sub_5C154(&qword_320F00);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v9, 1, v10))
  {
    v11 = type metadata accessor for YearInReviewSharableImage(0);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v9, v11);
    swift_release(*(_QWORD *)&v9[*(int *)(v10 + 44)]);
  }
  v12 = (char *)v6 + v1[7];
  v13 = type metadata accessor for ColorScheme(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

uint64_t sub_93BA4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for YearInReviewToolbarContent(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_93BE8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  type metadata accessor for YearInReviewToolbarContent(0);
  result = Image.init(systemName:)(0xD000000000000011, 0x800000000026FDF0);
  *a1 = result;
  return result;
}

uint64_t sub_93C2C()
{
  return sub_67060(&qword_3210C0, &qword_3210C8, (uint64_t)&protocol conformance descriptor for TupleToolbarContent<A>);
}

uint64_t MenuStoreService.checkAudiobookAvailability(storeId:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return swift_task_switch(sub_93C70, 0, 0);
}

uint64_t sub_93C70()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = v0[2];
  v1 = v0[3];
  v3 = swift_task_alloc(32);
  v0[4] = v3;
  *(_QWORD *)(v3 + 16) = v2;
  *(_QWORD *)(v3 + 24) = v1;
  v4 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedContinuation<A>(isolation:function:_:)[1]);
  v0[5] = v4;
  *v4 = v0;
  v4[1] = sub_93D18;
  return withCheckedContinuation<A>(isolation:function:_:)(v0 + 6, 0, 0, 0xD000000000000024, 0x800000000026FE10, sub_93EDC, v3, &type metadata for Bool);
}

uint64_t sub_93D18()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 32);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 40));
  swift_task_dealloc(v1);
  return swift_task_switch(sub_93D74, 0, 0);
}

uint64_t sub_93D74()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(unsigned __int8 *)(v0 + 48));
}

void sub_93D80(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  NSString v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  _QWORD aBlock[5];
  uint64_t v12;

  v2 = sub_5C154(&qword_321100);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  __chkstk_darwin(v2);
  v5 = (void *)objc_opt_self(BSUIStoreServices);
  v6 = String._bridgeToObjectiveC()();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))((char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2);
  v7 = *(unsigned __int8 *)(v3 + 80);
  v8 = (v7 + 16) & ~v7;
  v9 = swift_allocObject(&unk_2E9808, v8 + v4, v7 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v3 + 32))(v9 + v8, (char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v2);
  aBlock[4] = sub_94478;
  v12 = v9;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_93EE4;
  aBlock[3] = &unk_2E9820;
  v10 = _Block_copy(aBlock);
  swift_release(v12);
  objc_msgSend(v5, "checkAudiobookAvailabilityForStoreID:completion:", v6, v10);
  _Block_release(v10);

}

void sub_93EDC(uint64_t a1)
{
  sub_93D80(a1);
}

uint64_t sub_93EE4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  void (*v4)(uint64_t);

  v4 = *(void (**)(uint64_t))(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  swift_retain(v3);
  v4(a2);
  return swift_release(v3);
}

void MenuStoreService.openProductPage(for:resourceType:transaction:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v5;
  void *v6;
  id v7;

  v5 = objc_msgSend((id)objc_opt_self(BSUIStoreServices), "sharedInstance");
  if (v5)
  {
    v6 = v5;
    v7 = String._bridgeToObjectiveC()();
    objc_msgSend(v6, "showProductPageForStoreID:resourceType:transaction:needsAnalyticsLinkData:", v7, MResourceType.bfmType.getter(), a4, 0);

  }
  else
  {
    __break(1u);
  }
}

uint64_t MenuStoreService.showWriteAndReview(storeId:transaction:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[16] = a2;
  v3[17] = a3;
  v3[15] = a1;
  return swift_task_switch(sub_93FE4, 0, 0);
}

id sub_93FE4()
{
  _QWORD *v0;
  id result;
  void *v2;
  _QWORD *v3;
  uint64_t v4;
  NSString v5;
  uint64_t v6;
  _QWORD *v7;

  result = objc_msgSend((id)objc_opt_self(BSUIStoreServices), "sharedInstance");
  v0[18] = result;
  if (result)
  {
    v2 = result;
    v3 = v0 + 2;
    v4 = v0[17];
    v5 = String._bridgeToObjectiveC()();
    v0[19] = v5;
    v0[7] = v0 + 20;
    v0[2] = v0;
    v0[3] = sub_940D0;
    v6 = swift_continuation_init(v0 + 2, 0);
    v0[10] = _NSConcreteStackBlock;
    v7 = v0 + 10;
    v7[1] = 0x40000000;
    v7[2] = sub_94150;
    v7[3] = &unk_2E97A0;
    v7[4] = v6;
    objc_msgSend(v2, "showWriteAReviewForStoreId:transaction:completion:", v5, v4, v7);
    return (id)swift_continuation_await(v3);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_940D0()
{
  return swift_task_switch(sub_9411C, 0, 0);
}

uint64_t sub_9411C()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 152);

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_94150(uint64_t a1, char a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 32);
  **(_BYTE **)(*(_QWORD *)(v2 + 64) + 40) = a2;
  return swift_continuation_resume(v2);
}

uint64_t sub_94164(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return swift_task_switch(sub_9417C, 0, 0);
}

uint64_t sub_9417C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = v0[2];
  v1 = v0[3];
  v3 = swift_task_alloc(32);
  v0[4] = v3;
  *(_QWORD *)(v3 + 16) = v2;
  *(_QWORD *)(v3 + 24) = v1;
  v4 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedContinuation<A>(isolation:function:_:)[1]);
  v0[5] = v4;
  *v4 = v0;
  v4[1] = sub_93D18;
  return withCheckedContinuation<A>(isolation:function:_:)(v0 + 6, 0, 0, 0xD000000000000024, 0x800000000026FE10, sub_944F8, v3, &type metadata for Bool);
}

uint64_t sub_94224(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;

  v7 = (_QWORD *)swift_task_alloc(dword_3210DC);
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_64780;
  v7[16] = a2;
  v7[17] = a3;
  v7[15] = a1;
  return swift_task_switch(sub_93FE4, 0, 0);
}

uint64_t dispatch thunk of StoreServicing.checkAudiobookAvailability(storeId:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  int *v9;
  _QWORD *v10;
  uint64_t (*v12)(uint64_t, uint64_t, uint64_t, uint64_t);

  v9 = *(int **)(a4 + 8);
  v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)v9 + *v9);
  v10 = (_QWORD *)swift_task_alloc(v9[1]);
  *(_QWORD *)(v4 + 16) = v10;
  *v10 = v4;
  v10[1] = sub_9431C;
  return v12(a1, a2, a3, a4);
}

uint64_t sub_9431C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v4;

  v4 = *v1;
  swift_task_dealloc(*(_QWORD *)(*v1 + 16));
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(a1);
}

uint64_t dispatch thunk of StoreServicing.openProductPage(for:resourceType:transaction:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 16))();
}

uint64_t dispatch thunk of StoreServicing.showWriteAndReview(storeId:transaction:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  int *v11;
  _QWORD *v12;
  uint64_t (*v14)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v11 = *(int **)(a5 + 24);
  v14 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)v11 + *v11);
  v12 = (_QWORD *)swift_task_alloc(v11[1]);
  *(_QWORD *)(v5 + 16) = v12;
  *v12 = v5;
  v12[1] = sub_7BFF8;
  return v14(a1, a2, a3, a4, a5);
}

ValueMetadata *type metadata accessor for MenuStoreService()
{
  return &type metadata for MenuStoreService;
}

uint64_t sub_94414()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = sub_5C154(&qword_321100);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_94478(char a1)
{
  uint64_t v2;
  char v4;

  sub_5C154(&qword_321100);
  v4 = a1;
  v2 = sub_5C154(&qword_321100);
  return CheckedContinuation.resume(returning:)(&v4, v2);
}

uint64_t sub_944E0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_944F0(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t destroy for YearInReviewRootView(uint64_t a1)
{
  swift_release(*(_QWORD *)(a1 + 8));
  return swift_release(*(_QWORD *)(a1 + 16));
}

_QWORD *_s11BookStoreUI20YearInReviewRootViewVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[2];
  a1[2] = v4;
  swift_retain(v3);
  swift_retain(v4);
  return a1;
}

_QWORD *assignWithCopy for YearInReviewRootView(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = a2[1];
  v5 = a1[1];
  a1[1] = v4;
  swift_retain(v4);
  swift_release(v5);
  v6 = a1[2];
  v7 = a2[2];
  a1[2] = v7;
  swift_retain(v7);
  swift_release(v6);
  return a1;
}

__n128 initializeWithTake for YearInReviewRootView(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

_QWORD *assignWithTake for YearInReviewRootView(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;

  *a1 = *(_QWORD *)a2;
  swift_release(a1[1]);
  v4 = a1[2];
  *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 8);
  swift_release(v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for YearInReviewRootView(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 24))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for YearInReviewRootView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for YearInReviewRootView()
{
  return &type metadata for YearInReviewRootView;
}

uint64_t sub_946B8(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_2B5B68, 1);
}

uint64_t sub_946CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v7 = type metadata accessor for Locale(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = swift_retain(a3);
  static Locale.autoupdatingCurrent.getter(v11);
  v12 = sub_94FEC(a4, (uint64_t)v10);
  v14 = v13;
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return YearInReviewErrorView.init(retry:localizedYear:)(a2, a3, v12, v14);
}

uint64_t sub_94794@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  int *v32;
  char *v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD v45[2];

  v39 = a1;
  v43 = a3;
  v42 = type metadata accessor for YearInReviewPage(0);
  __chkstk_darwin(v42);
  v6 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for YearInReviewPageView(0);
  __chkstk_darwin(v7);
  v9 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v39 - v11;
  v41 = sub_5C154(&qword_321130);
  __chkstk_darwin(v41);
  v14 = (char *)&v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = sub_5C154(&qword_321118);
  __chkstk_darwin(v40);
  v16 = (char *)&v39 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5E11C(a1, (uint64_t)v6, type metadata accessor for YearInReviewPage);
  sub_5E11C((uint64_t)v6, (uint64_t)v9, type metadata accessor for YearInReviewPage);
  *(_QWORD *)&v9[*(int *)(v7 + 20)] = a2;
  v17 = *(_QWORD *)(*(_QWORD *)v6 + 16);
  v18 = type metadata accessor for PagedScrollViewModel(0);
  swift_allocObject(v18, *(unsigned int *)(v18 + 48), *(unsigned __int16 *)(v18 + 52));
  swift_retain(a2);
  v44 = PagedScrollViewModel.init(totalPages:)(v17);
  State.init(wrappedValue:)(v45, &v44, v18);
  sub_6685C((uint64_t)v6, type metadata accessor for YearInReviewPage);
  v19 = v45[1];
  v20 = &v9[*(int *)(v7 + 24)];
  *(_QWORD *)v20 = v45[0];
  *((_QWORD *)v20 + 1) = v19;
  v21 = sub_94F44((uint64_t)v9, (uint64_t)v12);
  v22 = v42;
  v23 = v39;
  v24 = PageData.pageType.getter(v21);
  v26 = v25;
  v27 = (uint64_t)v14;
  sub_5E11C((uint64_t)v12, (uint64_t)v14, type metadata accessor for YearInReviewPageView);
  v28 = (uint64_t *)&v14[*(int *)(v41 + 36)];
  *v28 = v24;
  v28[1] = v26;
  v28[2] = a2;
  swift_retain(a2);
  sub_6685C((uint64_t)v12, type metadata accessor for YearInReviewPageView);
  v29 = *(_QWORD *)(v23 + *(int *)(v22 + 28));
  v30 = v40;
  v31 = &v16[*(int *)(v40 + 36)];
  *(_QWORD *)v31 = swift_getKeyPath(&unk_25A068);
  v31[8] = 0;
  *((_QWORD *)v31 + 2) = swift_getKeyPath(&unk_25A098);
  v31[24] = 0;
  v32 = (int *)type metadata accessor for PageLifeCycleViewModifier(0);
  v33 = &v31[v32[6]];
  *(_QWORD *)v33 = swift_getKeyPath(&unk_25A0C8);
  v34 = sub_5C154(&qword_320498);
  swift_storeEnumTagMultiPayload(v33, v34, 0);
  v35 = &v31[v32[7]];
  *(_QWORD *)v35 = swift_getKeyPath(&unk_25A0F8);
  v35[8] = 0;
  *(_QWORD *)&v31[v32[8]] = a2;
  *(_QWORD *)&v31[v32[10]] = v29;
  v36 = type metadata accessor for PageLifecycleHandler();
  swift_retain_n(a2, 2);
  swift_bridgeObjectRetain(v29);
  BaseObjectGraph.inject<A>(_:)(v45, v36, v36);
  swift_release(a2);
  *(_QWORD *)&v31[v32[9]] = v45[0];
  sub_94FA4(v27, (uint64_t)v16);
  v37 = sub_94DAC();
  View.observeAnalyticsVisibility()(v30, v37);
  return sub_5E09C((uint64_t)v16, &qword_321118);
}

uint64_t sub_94B10@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t OpaqueTypeConformance2;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD v31[2];
  uint64_t v32;

  v30 = a1;
  v2 = type metadata accessor for IntentViewConfiguration(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_5C154(&qword_321108);
  v6 = *(_QWORD *)(v5 - 8);
  v28 = v5;
  v29 = v6;
  __chkstk_darwin(v5);
  v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = v1[1];
  v11 = v1[2];
  v32 = *v1;
  v9 = v32;
  v12 = (_QWORD *)swift_allocObject(&unk_2E98E0, 40, 7);
  v12[2] = v9;
  v12[3] = v10;
  v12[4] = v11;
  v13 = (_QWORD *)swift_allocObject(&unk_2E9908, 40, 7);
  v13[2] = v9;
  v13[3] = v10;
  v13[4] = v11;
  swift_retain_n(v11, 3);
  v14 = swift_retain_n(v10, 2);
  IntentViewConfiguration.init()(v14);
  v27 = sub_5C154(&qword_321110);
  v15 = type metadata accessor for YearInReviewLoadingView(0);
  v16 = type metadata accessor for YearInReviewErrorView(0);
  v17 = sub_735C8();
  v18 = sub_667D0(&qword_321118);
  v19 = sub_94DAC();
  v31[0] = v18;
  v31[1] = v19;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v31, &opaque type descriptor for <<opaque return type of View.observeAnalyticsVisibility()>>, 1);
  v21 = sub_648E0(&qword_321150, (uint64_t (*)(uint64_t))&type metadata accessor for YearInReviewLoadingView, (uint64_t)&protocol conformance descriptor for YearInReviewLoadingView);
  v22 = sub_648E0(&qword_321158, (uint64_t (*)(uint64_t))&type metadata accessor for YearInReviewErrorView, (uint64_t)&protocol conformance descriptor for YearInReviewErrorView);
  IntentView.init(what:transaction:configuration:working:failed:content:)(&v32, v11, v4, &j___s7BooksUI23YearInReviewLoadingViewVACycfC, 0, sub_94D64, v12, sub_94DA0, v13, &type metadata for YearInReviewPageIntent, v27, v15, v16, v17, OpaqueTypeConformance2, v21, v22);
  v23 = sub_94EF8();
  v24 = v28;
  View.geometryCacheNamespace()(v28, v23);
  return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v8, v24);
}

uint64_t sub_94D64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_946CC(a1, a2, a3, *(_QWORD *)(v3 + 16));
}

uint64_t sub_94D74()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_94DA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_94794(a1, *(_QWORD *)(v2 + 24), a2);
}

unint64_t sub_94DAC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_321120;
  if (!qword_321120)
  {
    v1 = sub_667D0(&qword_321118);
    sub_94E30();
    sub_648E0(&qword_321148, type metadata accessor for PageLifeCycleViewModifier, (uint64_t)&unk_25BB18);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_321120);
  }
  return result;
}

unint64_t sub_94E30()
{
  unint64_t result;
  uint64_t v1;

  result = qword_321128;
  if (!qword_321128)
  {
    v1 = sub_667D0(&qword_321130);
    sub_648E0(&qword_321138, type metadata accessor for YearInReviewPageView, (uint64_t)&unk_25FEB0);
    sub_94EB4();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_321128);
  }
  return result;
}

unint64_t sub_94EB4()
{
  unint64_t result;

  result = qword_321140;
  if (!qword_321140)
  {
    result = swift_getWitnessTable(&unk_25D5B0, &type metadata for AppAnalyticsTrackerViewModifier);
    atomic_store(result, (unint64_t *)&qword_321140);
  }
  return result;
}

unint64_t sub_94EF8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_321160;
  if (!qword_321160)
  {
    v1 = sub_667D0(&qword_321108);
    result = swift_getWitnessTable(&protocol conformance descriptor for IntentView<A, B, C, D>, v1);
    atomic_store(result, (unint64_t *)&qword_321160);
  }
  return result;
}

uint64_t sub_94F44(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for YearInReviewPageView(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_94FA4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_5C154(&qword_321130);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_94FEC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(char *, uint64_t);
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v43 = a2;
  v3 = type metadata accessor for Date.FormatStyle.Symbol.Year(0);
  v40 = *(_QWORD *)(v3 - 8);
  v41 = v3;
  v4 = __chkstk_darwin(v3);
  v6 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Date.FormatStyle(0, v4);
  v39 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v9 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v38 - v11;
  v14 = __chkstk_darwin(v13);
  v42 = (char *)&v38 - v15;
  v16 = type metadata accessor for Calendar(0, v14);
  __chkstk_darwin(v16);
  v18 = (char *)&v38 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_5C154(&qword_31F128);
  __chkstk_darwin(v19);
  v21 = (char *)&v38 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = type metadata accessor for Date(0);
  v23 = *(_QWORD *)(v22 - 8);
  __chkstk_darwin(v22);
  v25 = (char *)&v38 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Calendar.gregorian.getter(v26);
  v38 = a1;
  Date.init(year:month:day:hour:minute:calendar:)(a1, 12, 31, 0, 0, v18);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22) == 1)
  {
    sub_5E09C((uint64_t)v21, &qword_31F128);
    if (qword_31E6A0 != -1)
      swift_once(&qword_31E6A0, sub_126F64);
    v27 = type metadata accessor for Logger(0);
    v28 = sub_5240C(v27, (uint64_t)qword_325370);
    v29 = Logger.logObject.getter(v28);
    v30 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v29, v30))
    {
      v31 = (uint8_t *)swift_slowAlloc(12, -1);
      *(_DWORD *)v31 = 134217984;
      v44 = v38;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v44, &v45, v31 + 4, v31 + 12);
      _os_log_impl(&dword_0, v29, v30, "Failed to create date for last day of '%ld'.", v31, 0xCu);
      swift_slowDealloc(v31, -1, -1);
    }

    return 0;
  }
  else
  {
    v33 = (*(uint64_t (**)(char *, char *, uint64_t))(v23 + 32))(v25, v21, v22);
    v34 = static FormatStyle<>.dateTime.getter(v33);
    static Date.FormatStyle.Symbol.Year.defaultDigits.getter(v34);
    Date.FormatStyle.year(_:)(v6);
    (*(void (**)(char *, uint64_t))(v40 + 8))(v6, v41);
    v35 = *(void (**)(char *, uint64_t))(v39 + 8);
    v35(v9, v7);
    v36 = v42;
    Date.FormatStyle.locale(_:)(v43);
    v35(v12, v7);
    v37 = sub_648E0(&qword_321168, (uint64_t (*)(uint64_t))&type metadata accessor for Date.FormatStyle, (uint64_t)&protocol conformance descriptor for Date.FormatStyle);
    Date.formatted<A>(_:)(&v44, v36, v7, v37);
    v35(v36, v7);
    (*(void (**)(char *, uint64_t))(v23 + 8))(v25, v22);
    return v44;
  }
}

uint64_t sub_95388()
{
  _QWORD v1[2];

  v1[0] = sub_667D0(&qword_321108);
  v1[1] = sub_94EF8();
  return swift_getOpaqueTypeConformance2(v1, &opaque type descriptor for <<opaque return type of View.geometryCacheNamespace()>>, 1);
}

uint64_t sub_953D4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28[2];
  _QWORD v29[3];
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v32 = a2;
  v4 = type metadata accessor for AccessibilityTraits(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for CodeAXTraits(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = a1[3];
  v12 = a1[4];
  sub_66898(a1, v11);
  dispatch thunk of Decoder.singleValueContainer()(v29, v11, v12);
  if (!v2)
  {
    v25 = v10;
    v26 = v5;
    v27 = v4;
    v13 = v30;
    v14 = v31;
    sub_66898(v29, v30);
    v15 = sub_5C154(&qword_31F730);
    v16 = sub_96168();
    v17 = dispatch thunk of SingleValueDecodingContainer.decode<A>(_:)(v28, v15, v15, v16, v13, v14);
    v18 = v28[0];
    AccessibilityTraits.init()(v17);
    v19 = *(_QWORD *)(v18 + 16);
    if (v19)
    {
      swift_bridgeObjectRetain(v18);
      v20 = (uint64_t *)(v18 + 40);
      v22 = (uint64_t)v25;
      v21 = v26;
      do
      {
        v23 = *v20;
        v28[0] = *(v20 - 1);
        v28[1] = v23;
        swift_bridgeObjectRetain(v23);
        sub_955F8(v28, (uint64_t)v7, (uint64_t)v29);
        v20 += 2;
        swift_bridgeObjectRelease(v23);
        --v19;
      }
      while (v19);
      swift_bridgeObjectRelease(v18);
    }
    else
    {
      v22 = (uint64_t)v25;
      v21 = v26;
    }
    swift_bridgeObjectRelease(v18);
    (*(void (**)(uint64_t, char *, uint64_t))(v21 + 32))(v22, v7, v27);
    _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(v29);
    sub_961C4(v22, v32);
  }
  return _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(a1);
}

uint64_t sub_955F8(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  void *v10;
  BOOL v11;
  uint64_t v12;
  Swift::String v14;
  Swift::String v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  _QWORD v23[5];

  v5 = type metadata accessor for AccessibilityTraits(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *a1;
  v10 = (void *)a1[1];
  v11 = v9 == 0x6E6F747475427369 && v10 == (void *)0xE800000000000000;
  if (v11
    || (v12 = _stringCompareWithSmolCheck(_:_:expecting:)(0x6E6F747475427369, 0xE800000000000000, v9, v10, 0),
        (v12 & 1) != 0))
  {
    static AccessibilityTraits.isButton.getter();
LABEL_7:
    AccessibilityTraits.formUnion(_:)(v8);
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  if (v9 == 0x7265646165487369 && v10 == (void *)0xE800000000000000
    || (v12 = _stringCompareWithSmolCheck(_:_:expecting:)(0x7265646165487369, 0xE800000000000000, v9, v10, 0),
        (v12 & 1) != 0))
  {
    static AccessibilityTraits.isHeader.getter(v12);
    goto LABEL_7;
  }
  if (v9 == 0x7463656C65537369 && v10 == (void *)0xEA00000000006465
    || (_stringCompareWithSmolCheck(_:_:expecting:)(0x7463656C65537369, 0xEA00000000006465, v9, v10, 0) & 1) != 0)
  {
    static AccessibilityTraits.isSelected.getter();
    goto LABEL_7;
  }
  if (v9 == 0x6B6E694C7369 && v10 == (void *)0xE600000000000000
    || (_stringCompareWithSmolCheck(_:_:expecting:)(0x6B6E694C7369, 0xE600000000000000, v9, v10, 0) & 1) != 0)
  {
    static AccessibilityTraits.isLink.getter();
    goto LABEL_7;
  }
  if (v9 == 0x6863726165537369 && v10 == (void *)0xED0000646C656946
    || (_stringCompareWithSmolCheck(_:_:expecting:)(0x6863726165537369, 0xED0000646C656946, v9, v10, 0) & 1) != 0)
  {
    static AccessibilityTraits.isSearchField.getter();
    goto LABEL_7;
  }
  if (v9 == 0x6567616D497369 && v10 == (void *)0xE700000000000000
    || (_stringCompareWithSmolCheck(_:_:expecting:)(0x6567616D497369, 0xE700000000000000, v9, v10, 0) & 1) != 0)
  {
    static AccessibilityTraits.isImage.getter();
    goto LABEL_7;
  }
  if (v9 == 0x756F537379616C70 && v10 == (void *)0xEA0000000000646ELL
    || (_stringCompareWithSmolCheck(_:_:expecting:)(0x756F537379616C70, 0xEA0000000000646ELL, v9, v10, 0) & 1) != 0)
  {
    static AccessibilityTraits.playsSound.getter();
    goto LABEL_7;
  }
  if (v9 == 0x616F6279654B7369 && v10 == (void *)0xED000079654B6472
    || (_stringCompareWithSmolCheck(_:_:expecting:)(0x616F6279654B7369, 0xED000079654B6472, v9, v10, 0) & 1) != 0)
  {
    static AccessibilityTraits.isKeyboardKey.getter();
    goto LABEL_7;
  }
  if (v9 == 0x6369746174537369 && v10 == (void *)0xEC00000074786554
    || (_stringCompareWithSmolCheck(_:_:expecting:)(0x6369746174537369, 0xEC00000074786554, v9, v10, 0) & 1) != 0)
  {
    static AccessibilityTraits.isStaticText.getter();
    goto LABEL_7;
  }
  if (v9 == 0xD000000000000010 && v10 == (void *)0x800000000026FE40
    || (_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000010, 0x800000000026FE40, v9, v10, 0) & 1) != 0)
  {
    static AccessibilityTraits.isSummaryElement.getter();
    goto LABEL_7;
  }
  if (v9 == 0xD000000000000011 && v10 == (void *)0x800000000026FE60
    || (_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000011, 0x800000000026FE60, v9, v10, 0) & 1) != 0)
  {
    static AccessibilityTraits.updatesFrequently.getter();
    goto LABEL_7;
  }
  if (v9 == 0xD000000000000012 && v10 == (void *)0x800000000026FE80
    || (_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000012, 0x800000000026FE80, v9, v10, 0) & 1) != 0)
  {
    static AccessibilityTraits.startsMediaSession.getter();
    goto LABEL_7;
  }
  if (v9 == 0xD000000000000017 && v10 == (void *)0x800000000026FEA0
    || (_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000017, 0x800000000026FEA0, v9, v10, 0) & 1) != 0)
  {
    static AccessibilityTraits.allowsDirectInteraction.getter();
    goto LABEL_7;
  }
  if (v9 == 0x6150736573756163 && v10 == (void *)0xEE006E7275546567
    || (_stringCompareWithSmolCheck(_:_:expecting:)(0x6150736573756163, 0xEE006E7275546567, v9, v10, 0) & 1) != 0)
  {
    static AccessibilityTraits.causesPageTurn.getter();
    goto LABEL_7;
  }
  if (v9 == 0x6C61646F4D7369 && v10 == (void *)0xE700000000000000
    || (_stringCompareWithSmolCheck(_:_:expecting:)(0x6C61646F4D7369, 0xE700000000000000, v9, v10, 0) & 1) != 0)
  {
    static AccessibilityTraits.isModal.getter();
    goto LABEL_7;
  }
  if (v9 == 0x656C67676F547369 && v10 == (void *)0xE800000000000000
    || (_stringCompareWithSmolCheck(_:_:expecting:)(0x656C67676F547369, 0xE800000000000000, v9, v10, 0) & 1) != 0)
  {
    static AccessibilityTraits.isToggle.getter();
    goto LABEL_7;
  }
  if (v9 == 0x7261426261547369 && v10 == (void *)0xE800000000000000
    || (_stringCompareWithSmolCheck(_:_:expecting:)(0x7261426261547369, 0xE800000000000000, v9, v10, 0) & 1) != 0)
  {
    static AccessibilityTraits.isTabBar.getter();
    goto LABEL_7;
  }
  sub_5E0D8(a3, (uint64_t)v23);
  v21 = 0;
  v22 = 0xE000000000000000;
  _StringGuts.grow(_:)(21);
  swift_bridgeObjectRelease(v22);
  v21 = 0xD000000000000012;
  v22 = 0x800000000026FEC0;
  v14._countAndFlagsBits = v9;
  v14._object = v10;
  String.append(_:)(v14);
  v15._countAndFlagsBits = 39;
  v15._object = (void *)0xE100000000000000;
  String.append(_:)(v15);
  v16 = v21;
  v17 = v22;
  v18 = type metadata accessor for DecodingError(0);
  swift_allocError(v18, &protocol witness table for DecodingError, 0, 0);
  static DecodingError.dataCorruptedError(in:debugDescription:)(v23, v16, v17);
  swift_bridgeObjectRelease(v17);
  v19 = _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(v23);
  return swift_willThrow(v19);
}

uint64_t sub_95D48@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_953D4(a1, a2);
}

uint64_t sub_95D5C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  _QWORD v11[5];

  v4 = type metadata accessor for AccessibilityTraits(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  __chkstk_darwin(v6);
  v8 = (char *)&v11[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5E0D8((uint64_t)a1, (uint64_t)v11);
  sub_953D4(v11, (uint64_t)v8);
  _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(a1);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v5 + 32))(a2, v8, v4);
}

uint64_t sub_95E60@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  unint64_t v17;
  int v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE v23[40];
  _BYTE *v24;

  v5 = sub_5C154(&qword_321178);
  __chkstk_darwin(v5);
  v24 = &v23[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v7 = sub_5C154(&qword_321180);
  __chkstk_darwin(v7);
  v9 = &v23[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v10);
  v12 = &v23[-v11 - 8];
  v13 = type metadata accessor for AccessibilityTraits(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  v15(a2, 1, 1, v13);
  sub_5E0D8((uint64_t)a1, (uint64_t)v23);
  v16 = type metadata accessor for CodeAXTraits(0);
  v17 = sub_96250();
  Optional<A>.init(from:)(v23, v16, v17);
  _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(a1);
  if (v2)
    return sub_6685C(a2, type metadata accessor for _CodeAXTraits_OrNil);
  sub_962AC((uint64_t)v12, (uint64_t)v9);
  v19 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 48))(v9, 1, v16);
  v20 = (uint64_t)v24;
  if (v19 == 1)
  {
    sub_5E09C((uint64_t)v9, &qword_321180);
    v21 = 1;
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v14 + 16))(v24, v9, v13);
    sub_6685C((uint64_t)v9, type metadata accessor for CodeAXTraits);
    v21 = 0;
  }
  v15(v20, v21, 1, v13);
  return sub_96208(v20, a2);
}

uint64_t sub_9604C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_95E60(a1, a2);
}

uint64_t sub_96060@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  char *v5;
  uint64_t v6;
  _QWORD v9[5];

  __chkstk_darwin(a1);
  v5 = (char *)&v9[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for AccessibilityTraits(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(a2, 1, 1, v6);
  sub_5E0D8((uint64_t)a1, (uint64_t)v9);
  sub_95E60(v9, (uint64_t)v5);
  _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(a1);
  return sub_96208((uint64_t)v5, a2);
}

uint64_t type metadata accessor for CodeAXTraits(uint64_t a1)
{
  return sub_64960(a1, qword_3211E8, (uint64_t)&nominal type descriptor for CodeAXTraits);
}

unint64_t sub_96168()
{
  unint64_t result;
  uint64_t v1;

  result = qword_321170;
  if (!qword_321170)
  {
    v1 = sub_667D0(&qword_31F730);
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> [A], v1);
    atomic_store(result, (unint64_t *)&qword_321170);
  }
  return result;
}

uint64_t sub_961C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CodeAXTraits(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_96208(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_5C154(&qword_321178);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

unint64_t sub_96250()
{
  unint64_t result;
  uint64_t v1;

  result = qword_321188;
  if (!qword_321188)
  {
    v1 = type metadata accessor for CodeAXTraits(255);
    result = swift_getWitnessTable(&unk_25A1DC, v1);
    atomic_store(result, (unint64_t *)&qword_321188);
  }
  return result;
}

uint64_t type metadata accessor for _CodeAXTraits_OrNil(uint64_t a1)
{
  return sub_64960(a1, (uint64_t *)&unk_321278, (uint64_t)&nominal type descriptor for _CodeAXTraits_OrNil);
}

uint64_t sub_962AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_5C154(&qword_321180);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_962F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for AccessibilityTraits(0);
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

uint64_t sub_96330(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for AccessibilityTraits(0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t sub_96364(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for AccessibilityTraits(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t sub_963A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for AccessibilityTraits(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t sub_963EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for AccessibilityTraits(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t sub_96430(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for AccessibilityTraits(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t sub_96474(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_96480);
}

uint64_t sub_96480(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for AccessibilityTraits(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_964BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_964C8);
}

uint64_t sub_964C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for AccessibilityTraits(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t sub_96508(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_96A20(a1, a2, a3, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityTraits);
}

uint64_t *sub_96514(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(_QWORD *)(sub_5C154(&qword_321178) - 8);
  v5 = *(_DWORD *)(v4 + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v8);
  }
  else
  {
    v6 = type metadata accessor for AccessibilityTraits(0);
    v7 = *(_QWORD *)(v6 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
    {
      memcpy(a1, a2, *(_QWORD *)(v4 + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
    }
  }
  return a1;
}

uint64_t sub_965E8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = type metadata accessor for AccessibilityTraits(0);
  v3 = *(_QWORD *)(v2 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(a1, 1, v2);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  return result;
}

void *sub_96650(void *a1, const void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = type metadata accessor for AccessibilityTraits(0);
  v5 = *(_QWORD *)(v4 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v5 + 48))(a2, 1, v4))
  {
    v6 = sub_5C154(&qword_321178);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v5 + 16))(a1, a2, v4);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
  }
  return a1;
}

void *sub_966F4(void *a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(void *, uint64_t, uint64_t);
  int v7;
  int v8;
  uint64_t v9;

  v4 = type metadata accessor for AccessibilityTraits(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v5 + 48);
  v7 = v6(a1, 1, v4);
  v8 = v6(a2, 1, v4);
  if (!v7)
  {
    if (!v8)
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 24))(a1, a2, v4);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v5 + 8))(a1, v4);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    v9 = sub_5C154(&qword_321178);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v5 + 16))(a1, a2, v4);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
  return a1;
}

void *sub_967E4(void *a1, const void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = type metadata accessor for AccessibilityTraits(0);
  v5 = *(_QWORD *)(v4 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v5 + 48))(a2, 1, v4))
  {
    v6 = sub_5C154(&qword_321178);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v5 + 32))(a1, a2, v4);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
  }
  return a1;
}

void *sub_96888(void *a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(void *, uint64_t, uint64_t);
  int v7;
  int v8;
  uint64_t v9;

  v4 = type metadata accessor for AccessibilityTraits(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v5 + 48);
  v7 = v6(a1, 1, v4);
  v8 = v6(a2, 1, v4);
  if (!v7)
  {
    if (!v8)
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 40))(a1, a2, v4);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v5 + 8))(a1, v4);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    v9 = sub_5C154(&qword_321178);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v5 + 32))(a1, a2, v4);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
  return a1;
}

uint64_t sub_96978(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_96984);
}

uint64_t sub_96984(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_5C154(&qword_321178);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_969C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_969D0);
}

uint64_t sub_969D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_5C154(&qword_321178);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t sub_96A14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_96A20(a1, a2, a3, (uint64_t (*)(uint64_t))sub_96A88);
}

uint64_t sub_96A20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  uint64_t result;
  unint64_t v6;
  uint64_t v7;

  result = a4(319);
  if (v6 <= 0x3F)
  {
    v7 = *(_QWORD *)(result - 8) + 64;
    swift_initStructMetadata(a1, 256, 1, &v7, a1 + 16);
    return 0;
  }
  return result;
}

void sub_96A88(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_321288)
  {
    v2 = type metadata accessor for AccessibilityTraits(255);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_321288);
  }
}

uint64_t sub_96ADC(void (*a1)(char *, char *), uint64_t a2, uint64_t a3, char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t AssociatedTypeWitness;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  Swift::Int v22;
  char *v23;
  uint64_t result;
  char *v25;
  char *v26;
  void (*v27)(_BYTE *, _QWORD);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  void (*v38)(char *, char *);
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  _BYTE v43[32];
  uint64_t v44;

  v32 = a5;
  v33 = a8;
  v38 = a1;
  v39 = a2;
  v31 = *(_QWORD *)(a5 - 8);
  ((void (*)(void))__chkstk_darwin)();
  v40 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(0, *(_QWORD *)(v12 + 8));
  v14 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v15 = ((uint64_t (*)(void))__chkstk_darwin)();
  v36 = (char *)&v29 - v16;
  v41 = a4;
  __chkstk_darwin(v15);
  v35 = (char *)&v29 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = swift_getAssociatedTypeWitness(0, a6);
  v34 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin(v18);
  v20 = (char *)&v29 - v19;
  v21 = dispatch thunk of Collection.count.getter(a3, a6);
  if (!v21)
    return static Array._allocateUninitialized(_:)(0, v41);
  v22 = v21;
  v30 = v18;
  v23 = v41;
  v44 = ContiguousArray.init()(v41);
  v37 = type metadata accessor for ContiguousArray(0, v23);
  ContiguousArray.reserveCapacity(_:)(v22);
  v41 = v20;
  result = dispatch thunk of Collection.startIndex.getter(a3);
  if (v22 < 0)
  {
    __break(1u);
  }
  else
  {
    v26 = v35;
    v25 = v36;
    while (1)
    {
      v27 = (void (*)(_BYTE *, _QWORD))dispatch thunk of Collection.subscript.read(v43, v41, a3, a6);
      (*(void (**)(char *))(v14 + 16))(v25);
      v27(v43, 0);
      v28 = v42;
      v38(v25, v40);
      if (v28)
        break;
      v42 = 0;
      (*(void (**)(char *, uint64_t))(v14 + 8))(v25, AssociatedTypeWitness);
      ContiguousArray.append(_:)(v26, v37);
      dispatch thunk of Collection.formIndex(after:)(v41, a3, a6);
      if (!--v22)
      {
        (*(void (**)(char *, uint64_t))(v34 + 8))(v41, v30);
        return v44;
      }
    }
    (*(void (**)(char *, uint64_t))(v14 + 8))(v25, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t))(v34 + 8))(v41, v30);
    swift_release(v44);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v31 + 32))(v33, v40, v32);
  }
  return result;
}

uint64_t MCatalogRequestIntentHandler.fetch<A>(resources:relationships:views:additionalParameters:metadata:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t *v6;
  _QWORD *v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;

  v7[14] = a5;
  v7[15] = a6;
  v7[12] = a3;
  v7[13] = a4;
  v7[10] = a1;
  v7[11] = a2;
  v9 = type metadata accessor for MRequestMetadata(0);
  v7[16] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v7[17] = v10;
  v7[18] = swift_task_alloc((*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for MCatalogRequestIntent(0, a6, v11, v12);
  v7[19] = v13;
  v14 = *(_QWORD *)(v13 - 8);
  v7[20] = v14;
  v15 = swift_task_alloc((*(_QWORD *)(v14 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *v6;
  v7[21] = v15;
  v7[22] = v16;
  v17 = sub_5C154(&qword_31FE78);
  v18 = (_QWORD *)swift_task_alloc(async function pointer to BaseObjectGraph.inject<A>(_:)[1]);
  v7[23] = v18;
  *v18 = v7;
  v18[1] = sub_96E94;
  return BaseObjectGraph.inject<A>(_:)(v7 + 2, v17, v17);
}

uint64_t sub_96E94()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 184);
  *(_QWORD *)(*(_QWORD *)v1 + 192) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_97224;
  else
    v3 = sub_96EF8;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_96EF8()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t WitnessTable;

  v1 = (_QWORD *)v0[21];
  v3 = v0[18];
  v2 = v0[19];
  v4 = v0[15];
  v6 = v0[12];
  v5 = v0[13];
  v7 = v0[10];
  v8 = v0[11];
  (*(void (**)(uint64_t, _QWORD, _QWORD))(v0[17] + 16))(v3, v0[14], v0[16]);
  sub_124384(0xD000000000000015, 0x800000000026FEE0, v7, v8, v6, v5, v3, v4, v1);
  v9 = v0[5];
  v10 = v0[6];
  sub_66898(v0 + 2, v9);
  v11 = async function pointer to dispatch thunk of IntentDispatcher.dispatch<A>(_:objectGraph:)[1];
  swift_bridgeObjectRetain(v7);
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRetain(v5);
  v12 = (_QWORD *)swift_task_alloc(v11);
  v0[25] = v12;
  WitnessTable = swift_getWitnessTable(&unk_25F930, v2);
  *v12 = v0;
  v12[1] = sub_97030;
  return dispatch thunk of IntentDispatcher.dispatch<A>(_:objectGraph:)(v0 + 7, v0[21], v0[22], v0[19], WitnessTable, v9, v10);
}

uint64_t sub_97030()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 200);
  *(_QWORD *)(*(_QWORD *)v1 + 208) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_97264;
  else
    v3 = sub_97094;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_97094()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  char *TupleTypeMetadata2;
  uint64_t WitnessTable;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;

  v2 = *(_QWORD *)(v0 + 160);
  v1 = *(_QWORD *)(v0 + 168);
  v17 = *(_QWORD *)(v0 + 152);
  v18 = *(_QWORD *)(v0 + 144);
  v3 = *(_QWORD *)(v0 + 120);
  *(_QWORD *)(v0 + 64) = *(_QWORD *)(v0 + 56);
  v4 = swift_task_alloc(32);
  *(_QWORD *)(v4 + 16) = v3;
  v5 = type metadata accessor for MResourceDecoder(255);
  v7 = type metadata accessor for Array(0, v5, v6);
  TupleTypeMetadata2 = (char *)swift_getTupleTypeMetadata2(0, &type metadata for String, v3, 0, 0);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for [A], v7);
  v11 = sub_96ADC((void (*)(char *, char *))sub_9733C, v4, v7, TupleTypeMetadata2, (uint64_t)&type metadata for Never, WitnessTable, (uint64_t)&protocol witness table for Never, v10);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 64));
  swift_task_dealloc(v4);
  *(_QWORD *)(v0 + 72) = v11;
  v13 = type metadata accessor for Array(0, TupleTypeMetadata2, v12);
  v14 = swift_getWitnessTable(&protocol conformance descriptor for [A], v13);
  v15 = Dictionary.init<A>(uniqueKeysWithValues:)(v0 + 72, &type metadata for String, v3, v13, &protocol witness table for String, v14);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v17);
  _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((_QWORD *)(v0 + 16));
  swift_task_dealloc(v1);
  swift_task_dealloc(v18);
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v15);
}

uint64_t sub_97224()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 144);
  swift_task_dealloc(*(_QWORD *)(v0 + 168));
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_97264()
{
  uint64_t v0;
  uint64_t v1;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 160) + 8))(*(_QWORD *)(v0 + 168), *(_QWORD *)(v0 + 152));
  _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((_QWORD *)(v0 + 16));
  v1 = *(_QWORD *)(v0 + 144);
  swift_task_dealloc(*(_QWORD *)(v0 + 168));
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_972C0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  v2 = type metadata accessor for MResourceDecoder(0);
  v3 = (void *)((uint64_t (*)(void))MResourceDecoder.wrappedValue.getter)();
  v4 = MResource.id.getter();
  v6 = v5;

  *a1 = v4;
  a1[1] = v6;
  result = MResourceDecoder.wrappedValue.getter(v2);
  a1[2] = result;
  return result;
}

uint64_t sub_9733C@<X0>(uint64_t *a1@<X8>)
{
  return sub_972C0(a1);
}

uint64_t sub_97358(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v13;

  v13 = (_QWORD *)swift_task_alloc(dword_3212BC);
  *(_QWORD *)(v6 + 16) = v13;
  *v13 = v6;
  v13[1] = sub_973E4;
  return MCatalogRequestIntentHandler.fetch<A>(resources:relationships:views:additionalParameters:metadata:)(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_973E4(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *(_QWORD *)(*v2 + 16);
  v5 = *v2;
  v6 = swift_task_dealloc(v4);
  if (!v1)
    v6 = a1;
  return (*(uint64_t (**)(uint64_t))(v5 + 8))(v6);
}

ValueMetadata *type metadata accessor for MCatalogRequestIntentHandler()
{
  return &type metadata for MCatalogRequestIntentHandler;
}

uint64_t sub_97448(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4;
  int v5;
  __int128 v7;
  _OWORD *v8;
  _OWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  void *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  unsigned int (*v50)(const void *, uint64_t, uint64_t);
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  _QWORD *v63;
  uint64_t v64;
  uint64_t v65;
  void *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  unsigned int (*v70)(const void *, uint64_t, uint64_t);
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  __int128 v77;
  unsigned int (*v79)(const void *, uint64_t, uint64_t);
  void *__dst;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *(_QWORD *)v4 = *a2;
    v4 = v12 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain(v12);
  }
  else
  {
    v7 = *(_OWORD *)(a2 + 3);
    *(_OWORD *)(a1 + 24) = v7;
    (**(void (***)(uint64_t, uint64_t *))(v7 - 8))(a1, a2);
    v8 = (_OWORD *)(v4 + 40);
    v9 = a2 + 5;
    v10 = a2[8];
    if (v10)
    {
      v11 = a2[9];
      *(_QWORD *)(v4 + 64) = v10;
      *(_QWORD *)(v4 + 72) = v11;
      (**(void (***)(_OWORD *, _OWORD *))(v10 - 8))(v8, v9);
    }
    else
    {
      v13 = *(_OWORD *)(a2 + 7);
      *v8 = *v9;
      *(_OWORD *)(v4 + 56) = v13;
      *(_QWORD *)(v4 + 72) = a2[9];
    }
    v14 = a3[6];
    v15 = (void *)(v4 + v14);
    v16 = (char *)a2 + v14;
    v17 = type metadata accessor for ImpressionMetrics(0);
    v18 = *(_QWORD *)(v17 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
    {
      v19 = sub_5C154(&qword_31F480);
      memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v18 + 16))(v15, v16, v17);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
    }
    v20 = a3[7];
    v21 = a3[8];
    v22 = (_QWORD *)(v4 + v20);
    v23 = (uint64_t *)((char *)a2 + v20);
    v24 = v23[1];
    *v22 = *v23;
    v22[1] = v24;
    v25 = (_QWORD *)(v4 + v21);
    v26 = (uint64_t *)((char *)a2 + v21);
    v27 = v26[1];
    *v25 = *v26;
    v25[1] = v27;
    v28 = a3[10];
    *(_BYTE *)(v4 + a3[9]) = *((_BYTE *)a2 + a3[9]);
    v29 = v4 + v28;
    v30 = (uint64_t)a2 + v28;
    v31 = *(_QWORD *)(v30 + 8);
    *(_QWORD *)v29 = *(_QWORD *)v30;
    *(_QWORD *)(v29 + 8) = v31;
    *(_BYTE *)(v29 + 16) = *(_BYTE *)(v30 + 16);
    v32 = a3[11];
    v33 = a3[12];
    v34 = v4 + v32;
    v35 = (uint64_t)a2 + v32;
    *(_BYTE *)(v34 + 16) = *(_BYTE *)(v35 + 16);
    v36 = *(_QWORD *)(v35 + 8);
    *(_QWORD *)v34 = *(_QWORD *)v35;
    *(_QWORD *)(v34 + 8) = v36;
    __dst = (void *)(v4 + v33);
    v37 = (char *)a2 + v33;
    v38 = type metadata accessor for Image.Scale(0);
    v39 = *(_QWORD *)(v38 - 8);
    v79 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v39 + 48);
    swift_bridgeObjectRetain(v24);
    swift_bridgeObjectRetain(v27);
    swift_bridgeObjectRetain(v31);
    swift_bridgeObjectRetain(v36);
    if (v79(v37, 1, v38))
    {
      v40 = sub_5C154(&qword_3212C8);
      memcpy(__dst, v37, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v39 + 16))(__dst, v37, v38);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v39 + 56))(__dst, 0, 1, v38);
    }
    v41 = a3[14];
    *(_OWORD *)(v4 + a3[13]) = *(_OWORD *)((char *)a2 + a3[13]);
    v42 = (_QWORD *)(v4 + v41);
    v43 = (uint64_t *)((char *)a2 + v41);
    v44 = v43[1];
    *v42 = *v43;
    v42[1] = v44;
    v45 = a3[15];
    v46 = (void *)(v4 + v45);
    v47 = (char *)a2 + v45;
    v48 = type metadata accessor for FontSpec(0);
    v49 = *(_QWORD *)(v48 - 8);
    v50 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v49 + 48);
    swift_bridgeObjectRetain(v44);
    if (v50(v47, 1, v48))
    {
      v51 = sub_5C154(&qword_3212D0);
      memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v49 + 16))(v46, v47, v48);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v49 + 56))(v46, 0, 1, v48);
    }
    v52 = a3[16];
    v53 = a3[17];
    v54 = v4 + v52;
    v55 = (uint64_t)a2 + v52;
    *(_QWORD *)v54 = *(_QWORD *)v55;
    *(_BYTE *)(v54 + 8) = *(_BYTE *)(v55 + 8);
    v56 = v4 + v53;
    v57 = (uint64_t)a2 + v53;
    *(_QWORD *)v56 = *(_QWORD *)v57;
    *(_BYTE *)(v56 + 8) = *(_BYTE *)(v57 + 8);
    v58 = a3[18];
    v59 = a3[19];
    v60 = v4 + v58;
    v61 = (uint64_t)a2 + v58;
    *(_QWORD *)v60 = *(_QWORD *)v61;
    *(_BYTE *)(v60 + 8) = *(_BYTE *)(v61 + 8);
    v62 = (_QWORD *)(v4 + v59);
    v63 = (uint64_t *)((char *)a2 + v59);
    v64 = v63[1];
    *v62 = *v63;
    v62[1] = v64;
    v65 = a3[20];
    v66 = (void *)(v4 + v65);
    v67 = (char *)a2 + v65;
    v68 = type metadata accessor for AccessibilityTraits(0);
    v69 = *(_QWORD *)(v68 - 8);
    v70 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v69 + 48);
    swift_bridgeObjectRetain(v64);
    if (v70(v67, 1, v68))
    {
      v71 = sub_5C154(&qword_321178);
      memcpy(v66, v67, *(_QWORD *)(*(_QWORD *)(v71 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v69 + 16))(v66, v67, v68);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v69 + 56))(v66, 0, 1, v68);
    }
    v72 = a3[21];
    v73 = v4 + v72;
    v74 = (uint64_t)a2 + v72;
    v75 = *(_QWORD *)(v74 + 8);
    if (v75)
    {
      *(_QWORD *)v73 = *(_QWORD *)v74;
      *(_QWORD *)(v73 + 8) = v75;
      *(_OWORD *)(v73 + 16) = *(_OWORD *)(v74 + 16);
      v76 = *(_QWORD *)(v74 + 32);
      *(_QWORD *)(v73 + 32) = v76;
      swift_bridgeObjectRetain(v75);
      swift_bridgeObjectRetain(v76);
    }
    else
    {
      v77 = *(_OWORD *)(v74 + 16);
      *(_OWORD *)v73 = *(_OWORD *)v74;
      *(_OWORD *)(v73 + 16) = v77;
      *(_QWORD *)(v73 + 32) = *(_QWORD *)(v74 + 32);
    }
  }
  return v4;
}

uint64_t sub_97894(_QWORD *a1, int *a2)
{
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t result;

  _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(a1);
  if (a1[8])
    _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(a1 + 5);
  v4 = (char *)a1 + a2[6];
  v5 = type metadata accessor for ImpressionMetrics(0);
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
    (*(void (**)(char *, uint64_t))(v6 + 8))(v4, v5);
  swift_bridgeObjectRelease(*(_QWORD *)((char *)a1 + a2[7] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)((char *)a1 + a2[8] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)((char *)a1 + a2[10] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)((char *)a1 + a2[11] + 8));
  v7 = (char *)a1 + a2[12];
  v8 = type metadata accessor for Image.Scale(0);
  v9 = *(_QWORD *)(v8 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
    (*(void (**)(char *, uint64_t))(v9 + 8))(v7, v8);
  swift_bridgeObjectRelease(*(_QWORD *)((char *)a1 + a2[14] + 8));
  v10 = (char *)a1 + a2[15];
  v11 = type metadata accessor for FontSpec(0);
  v12 = *(_QWORD *)(v11 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
    (*(void (**)(char *, uint64_t))(v12 + 8))(v10, v11);
  swift_bridgeObjectRelease(*(_QWORD *)((char *)a1 + a2[19] + 8));
  v13 = (char *)a1 + a2[20];
  v14 = type metadata accessor for AccessibilityTraits(0);
  v15 = *(_QWORD *)(v14 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
    (*(void (**)(char *, uint64_t))(v15 + 8))(v13, v14);
  v16 = (char *)a1 + a2[21];
  result = *((_QWORD *)v16 + 1);
  if (result)
  {
    swift_bridgeObjectRelease(result);
    return swift_bridgeObjectRelease(*((_QWORD *)v16 + 4));
  }
  return result;
}

uint64_t sub_97A64(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  _OWORD *v7;
  _OWORD *v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  void *v13;
  const void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  const void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  const void *v45;
  uint64_t v46;
  uint64_t v47;
  unsigned int (*v48)(const void *, uint64_t, uint64_t);
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  _QWORD *v61;
  uint64_t v62;
  uint64_t v63;
  void *v64;
  const void *v65;
  uint64_t v66;
  uint64_t v67;
  unsigned int (*v68)(const void *, uint64_t, uint64_t);
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  __int128 v75;
  unsigned int (*v77)(const void *, uint64_t, uint64_t);
  void *__dst;

  v6 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v6;
  (**(void (***)(void))(v6 - 8))();
  v7 = (_OWORD *)(a1 + 40);
  v8 = (_OWORD *)(a2 + 40);
  v9 = *(_QWORD *)(a2 + 64);
  if (v9)
  {
    v10 = *(_QWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 64) = v9;
    *(_QWORD *)(a1 + 72) = v10;
    (**(void (***)(_OWORD *, _OWORD *))(v9 - 8))(v7, v8);
  }
  else
  {
    v11 = *(_OWORD *)(a2 + 56);
    *v7 = *v8;
    *(_OWORD *)(a1 + 56) = v11;
    *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  }
  v12 = a3[6];
  v13 = (void *)(a1 + v12);
  v14 = (const void *)(a2 + v12);
  v15 = type metadata accessor for ImpressionMetrics(0);
  v16 = *(_QWORD *)(v15 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
  {
    v17 = sub_5C154(&qword_31F480);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v16 + 16))(v13, v14, v15);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  v18 = a3[7];
  v19 = a3[8];
  v20 = (_QWORD *)(a1 + v18);
  v21 = (_QWORD *)(a2 + v18);
  v22 = v21[1];
  *v20 = *v21;
  v20[1] = v22;
  v23 = (_QWORD *)(a1 + v19);
  v24 = (_QWORD *)(a2 + v19);
  v25 = v24[1];
  *v23 = *v24;
  v23[1] = v25;
  v26 = a3[10];
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  v27 = a1 + v26;
  v28 = a2 + v26;
  v29 = *(_QWORD *)(v28 + 8);
  *(_QWORD *)v27 = *(_QWORD *)v28;
  *(_QWORD *)(v27 + 8) = v29;
  *(_BYTE *)(v27 + 16) = *(_BYTE *)(v28 + 16);
  v30 = a3[11];
  v31 = a3[12];
  v32 = a1 + v30;
  v33 = a2 + v30;
  *(_BYTE *)(v32 + 16) = *(_BYTE *)(v33 + 16);
  v34 = *(_QWORD *)(v33 + 8);
  *(_QWORD *)v32 = *(_QWORD *)v33;
  *(_QWORD *)(v32 + 8) = v34;
  __dst = (void *)(a1 + v31);
  v35 = (const void *)(a2 + v31);
  v36 = type metadata accessor for Image.Scale(0);
  v37 = *(_QWORD *)(v36 - 8);
  v77 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v37 + 48);
  swift_bridgeObjectRetain(v22);
  swift_bridgeObjectRetain(v25);
  swift_bridgeObjectRetain(v29);
  swift_bridgeObjectRetain(v34);
  if (v77(v35, 1, v36))
  {
    v38 = sub_5C154(&qword_3212C8);
    memcpy(__dst, v35, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v37 + 16))(__dst, v35, v36);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v37 + 56))(__dst, 0, 1, v36);
  }
  v39 = a3[14];
  *(_OWORD *)(a1 + a3[13]) = *(_OWORD *)(a2 + a3[13]);
  v40 = (_QWORD *)(a1 + v39);
  v41 = (_QWORD *)(a2 + v39);
  v42 = v41[1];
  *v40 = *v41;
  v40[1] = v42;
  v43 = a3[15];
  v44 = (void *)(a1 + v43);
  v45 = (const void *)(a2 + v43);
  v46 = type metadata accessor for FontSpec(0);
  v47 = *(_QWORD *)(v46 - 8);
  v48 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v47 + 48);
  swift_bridgeObjectRetain(v42);
  if (v48(v45, 1, v46))
  {
    v49 = sub_5C154(&qword_3212D0);
    memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v47 + 16))(v44, v45, v46);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v47 + 56))(v44, 0, 1, v46);
  }
  v50 = a3[16];
  v51 = a3[17];
  v52 = a1 + v50;
  v53 = a2 + v50;
  *(_QWORD *)v52 = *(_QWORD *)v53;
  *(_BYTE *)(v52 + 8) = *(_BYTE *)(v53 + 8);
  v54 = a1 + v51;
  v55 = a2 + v51;
  *(_QWORD *)v54 = *(_QWORD *)v55;
  *(_BYTE *)(v54 + 8) = *(_BYTE *)(v55 + 8);
  v56 = a3[18];
  v57 = a3[19];
  v58 = a1 + v56;
  v59 = a2 + v56;
  *(_QWORD *)v58 = *(_QWORD *)v59;
  *(_BYTE *)(v58 + 8) = *(_BYTE *)(v59 + 8);
  v60 = (_QWORD *)(a1 + v57);
  v61 = (_QWORD *)(a2 + v57);
  v62 = v61[1];
  *v60 = *v61;
  v60[1] = v62;
  v63 = a3[20];
  v64 = (void *)(a1 + v63);
  v65 = (const void *)(a2 + v63);
  v66 = type metadata accessor for AccessibilityTraits(0);
  v67 = *(_QWORD *)(v66 - 8);
  v68 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v67 + 48);
  swift_bridgeObjectRetain(v62);
  if (v68(v65, 1, v66))
  {
    v69 = sub_5C154(&qword_321178);
    memcpy(v64, v65, *(_QWORD *)(*(_QWORD *)(v69 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v67 + 16))(v64, v65, v66);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v67 + 56))(v64, 0, 1, v66);
  }
  v70 = a3[21];
  v71 = a1 + v70;
  v72 = a2 + v70;
  v73 = *(_QWORD *)(v72 + 8);
  if (v73)
  {
    *(_QWORD *)v71 = *(_QWORD *)v72;
    *(_QWORD *)(v71 + 8) = v73;
    *(_OWORD *)(v71 + 16) = *(_OWORD *)(v72 + 16);
    v74 = *(_QWORD *)(v72 + 32);
    *(_QWORD *)(v71 + 32) = v74;
    swift_bridgeObjectRetain(v73);
    swift_bridgeObjectRetain(v74);
  }
  else
  {
    v75 = *(_OWORD *)(v72 + 16);
    *(_OWORD *)v71 = *(_OWORD *)v72;
    *(_OWORD *)(v71 + 16) = v75;
    *(_QWORD *)(v71 + 32) = *(_QWORD *)(v72 + 32);
  }
  return a1;
}

uint64_t sub_97E7C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  void *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(void *, uint64_t, uint64_t);
  int v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t (*v43)(void *, uint64_t, uint64_t);
  int v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  _QWORD *v49;
  uint64_t v50;
  _QWORD *v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  void *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t (*v60)(void *, uint64_t, uint64_t);
  int v61;
  int v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t *v74;
  uint64_t v75;
  uint64_t v76;
  _QWORD *v77;
  _QWORD *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  void *v82;
  void *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t (*v86)(void *, uint64_t, uint64_t);
  int v87;
  int v88;
  uint64_t v89;
  uint64_t v90;
  _QWORD *v91;
  _QWORD *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  __int128 v101;
  __int128 v102;
  __int128 v103;

  sub_65938((_QWORD *)a1, (_QWORD *)a2);
  v6 = *(_QWORD *)(a2 + 64);
  if (*(_QWORD *)(a1 + 64))
  {
    if (v6)
    {
      sub_65938((_QWORD *)(a1 + 40), (_QWORD *)(a2 + 40));
      goto LABEL_8;
    }
    _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((_QWORD *)(a1 + 40));
  }
  else if (v6)
  {
    *(_QWORD *)(a1 + 64) = v6;
    *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
    (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1 + 40, a2 + 40);
    goto LABEL_8;
  }
  v7 = *(_OWORD *)(a2 + 40);
  v8 = *(_OWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 40) = v7;
  *(_OWORD *)(a1 + 56) = v8;
LABEL_8:
  v9 = a3[6];
  v10 = (void *)(a1 + v9);
  v11 = (void *)(a2 + v9);
  v12 = type metadata accessor for ImpressionMetrics(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v13 + 48);
  v15 = v14(v10, 1, v12);
  v16 = v14(v11, 1, v12);
  if (v15)
  {
    if (!v16)
    {
      (*(void (**)(void *, void *, uint64_t))(v13 + 16))(v10, v11, v12);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      goto LABEL_14;
    }
    goto LABEL_13;
  }
  if (v16)
  {
    (*(void (**)(void *, uint64_t))(v13 + 8))(v10, v12);
LABEL_13:
    v17 = sub_5C154(&qword_31F480);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_14;
  }
  (*(void (**)(void *, void *, uint64_t))(v13 + 24))(v10, v11, v12);
LABEL_14:
  v18 = a3[7];
  v19 = (_QWORD *)(a1 + v18);
  v20 = (_QWORD *)(a2 + v18);
  *v19 = *v20;
  v21 = v20[1];
  v22 = v19[1];
  v19[1] = v21;
  swift_bridgeObjectRetain(v21);
  swift_bridgeObjectRelease(v22);
  v23 = a3[8];
  v24 = (_QWORD *)(a1 + v23);
  v25 = (_QWORD *)(a2 + v23);
  *v24 = *v25;
  v26 = v25[1];
  v27 = v24[1];
  v24[1] = v26;
  swift_bridgeObjectRetain(v26);
  swift_bridgeObjectRelease(v27);
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  v28 = a3[10];
  v29 = a1 + v28;
  v30 = a2 + v28;
  *(_QWORD *)v29 = *(_QWORD *)(a2 + v28);
  v31 = *(_QWORD *)(a2 + v28 + 8);
  v32 = *(_QWORD *)(a1 + v28 + 8);
  *(_QWORD *)(v29 + 8) = v31;
  swift_bridgeObjectRetain(v31);
  swift_bridgeObjectRelease(v32);
  *(_BYTE *)(v29 + 16) = *(_BYTE *)(v30 + 16);
  v33 = a3[11];
  v34 = a1 + v33;
  v35 = a2 + v33;
  *(_QWORD *)v34 = *(_QWORD *)(a2 + v33);
  v36 = *(_QWORD *)(a2 + v33 + 8);
  v37 = *(_QWORD *)(a1 + v33 + 8);
  *(_QWORD *)(v34 + 8) = v36;
  swift_bridgeObjectRetain(v36);
  swift_bridgeObjectRelease(v37);
  *(_BYTE *)(v34 + 16) = *(_BYTE *)(v35 + 16);
  v38 = a3[12];
  v39 = (void *)(a1 + v38);
  v40 = (void *)(a2 + v38);
  v41 = type metadata accessor for Image.Scale(0);
  v42 = *(_QWORD *)(v41 - 8);
  v43 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v42 + 48);
  v44 = v43(v39, 1, v41);
  v45 = v43(v40, 1, v41);
  if (v44)
  {
    if (!v45)
    {
      (*(void (**)(void *, void *, uint64_t))(v42 + 16))(v39, v40, v41);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v42 + 56))(v39, 0, 1, v41);
      goto LABEL_20;
    }
    goto LABEL_19;
  }
  if (v45)
  {
    (*(void (**)(void *, uint64_t))(v42 + 8))(v39, v41);
LABEL_19:
    v46 = sub_5C154(&qword_3212C8);
    memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
    goto LABEL_20;
  }
  (*(void (**)(void *, void *, uint64_t))(v42 + 24))(v39, v40, v41);
LABEL_20:
  v47 = a3[13];
  v48 = (_QWORD *)(a1 + v47);
  v49 = (_QWORD *)(a2 + v47);
  *v48 = *v49;
  v48[1] = v49[1];
  v50 = a3[14];
  v51 = (_QWORD *)(a1 + v50);
  v52 = (_QWORD *)(a2 + v50);
  *v51 = *v52;
  v53 = v52[1];
  v54 = v51[1];
  v51[1] = v53;
  swift_bridgeObjectRetain(v53);
  swift_bridgeObjectRelease(v54);
  v55 = a3[15];
  v56 = (void *)(a1 + v55);
  v57 = (void *)(a2 + v55);
  v58 = type metadata accessor for FontSpec(0);
  v59 = *(_QWORD *)(v58 - 8);
  v60 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v59 + 48);
  v61 = v60(v56, 1, v58);
  v62 = v60(v57, 1, v58);
  if (v61)
  {
    if (!v62)
    {
      (*(void (**)(void *, void *, uint64_t))(v59 + 16))(v56, v57, v58);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v59 + 56))(v56, 0, 1, v58);
      goto LABEL_26;
    }
    goto LABEL_25;
  }
  if (v62)
  {
    (*(void (**)(void *, uint64_t))(v59 + 8))(v56, v58);
LABEL_25:
    v63 = sub_5C154(&qword_3212D0);
    memcpy(v56, v57, *(_QWORD *)(*(_QWORD *)(v63 - 8) + 64));
    goto LABEL_26;
  }
  (*(void (**)(void *, void *, uint64_t))(v59 + 24))(v56, v57, v58);
LABEL_26:
  v64 = a3[16];
  v65 = a1 + v64;
  v66 = (uint64_t *)(a2 + v64);
  v67 = *v66;
  *(_BYTE *)(v65 + 8) = *((_BYTE *)v66 + 8);
  *(_QWORD *)v65 = v67;
  v68 = a3[17];
  v69 = a1 + v68;
  v70 = (uint64_t *)(a2 + v68);
  v71 = *v70;
  *(_BYTE *)(v69 + 8) = *((_BYTE *)v70 + 8);
  *(_QWORD *)v69 = v71;
  v72 = a3[18];
  v73 = a1 + v72;
  v74 = (uint64_t *)(a2 + v72);
  v75 = *v74;
  *(_BYTE *)(v73 + 8) = *((_BYTE *)v74 + 8);
  *(_QWORD *)v73 = v75;
  v76 = a3[19];
  v77 = (_QWORD *)(a1 + v76);
  v78 = (_QWORD *)(a2 + v76);
  *v77 = *v78;
  v79 = v78[1];
  v80 = v77[1];
  v77[1] = v79;
  swift_bridgeObjectRetain(v79);
  swift_bridgeObjectRelease(v80);
  v81 = a3[20];
  v82 = (void *)(a1 + v81);
  v83 = (void *)(a2 + v81);
  v84 = type metadata accessor for AccessibilityTraits(0);
  v85 = *(_QWORD *)(v84 - 8);
  v86 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v85 + 48);
  v87 = v86(v82, 1, v84);
  v88 = v86(v83, 1, v84);
  if (v87)
  {
    if (!v88)
    {
      (*(void (**)(void *, void *, uint64_t))(v85 + 16))(v82, v83, v84);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v85 + 56))(v82, 0, 1, v84);
      goto LABEL_32;
    }
    goto LABEL_31;
  }
  if (v88)
  {
    (*(void (**)(void *, uint64_t))(v85 + 8))(v82, v84);
LABEL_31:
    v89 = sub_5C154(&qword_321178);
    memcpy(v82, v83, *(_QWORD *)(*(_QWORD *)(v89 - 8) + 64));
    goto LABEL_32;
  }
  (*(void (**)(void *, void *, uint64_t))(v85 + 24))(v82, v83, v84);
LABEL_32:
  v90 = a3[21];
  v91 = (_QWORD *)(a1 + v90);
  v92 = (_QWORD *)(a2 + v90);
  v93 = *(_QWORD *)(a1 + v90 + 8);
  v94 = v92[1];
  if (v93)
  {
    if (v94)
    {
      *v91 = *v92;
      v95 = v92[1];
      v91[1] = v95;
      swift_bridgeObjectRetain(v95);
      swift_bridgeObjectRelease(v93);
      v91[2] = v92[2];
      v91[3] = v92[3];
      v96 = v92[4];
      v97 = v91[4];
      v91[4] = v96;
      swift_bridgeObjectRetain(v96);
      swift_bridgeObjectRelease(v97);
    }
    else
    {
      sub_984B0((uint64_t)v91);
      v100 = v92[4];
      v101 = *((_OWORD *)v92 + 1);
      *(_OWORD *)v91 = *(_OWORD *)v92;
      *((_OWORD *)v91 + 1) = v101;
      v91[4] = v100;
    }
  }
  else if (v94)
  {
    *v91 = *v92;
    v98 = v92[1];
    v91[1] = v98;
    v91[2] = v92[2];
    v91[3] = v92[3];
    v99 = v92[4];
    v91[4] = v99;
    swift_bridgeObjectRetain(v98);
    swift_bridgeObjectRetain(v99);
  }
  else
  {
    v102 = *(_OWORD *)v92;
    v103 = *((_OWORD *)v92 + 1);
    v91[4] = v92[4];
    *(_OWORD *)v91 = v102;
    *((_OWORD *)v91 + 1) = v103;
  }
  return a1;
}

uint64_t sub_984B0(uint64_t a1)
{
  destroy for TintColorInfo(a1);
  return a1;
}

uint64_t sub_984E4(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  void *v9;
  const void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  const void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  const void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  __int128 v44;
  uint64_t v45;
  void *v46;
  const void *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  __int128 v54;

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  v7 = *(_OWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  v8 = a3[6];
  v9 = (void *)(a1 + v8);
  v10 = (const void *)(a2 + v8);
  *(_OWORD *)(a1 + 56) = v7;
  v11 = type metadata accessor for ImpressionMetrics(0);
  v12 = *(_QWORD *)(v11 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
  {
    v13 = sub_5C154(&qword_31F480);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v12 + 32))(v9, v10, v11);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  v14 = a3[8];
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  *(_OWORD *)(a1 + v14) = *(_OWORD *)(a2 + v14);
  v15 = a3[10];
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  v16 = a1 + v15;
  v17 = a2 + v15;
  *(_OWORD *)v16 = *(_OWORD *)v17;
  *(_BYTE *)(v16 + 16) = *(_BYTE *)(v17 + 16);
  v18 = a3[11];
  v19 = a3[12];
  v20 = a1 + v18;
  v21 = a2 + v18;
  *(_BYTE *)(v20 + 16) = *(_BYTE *)(v21 + 16);
  *(_OWORD *)v20 = *(_OWORD *)v21;
  v22 = (void *)(a1 + v19);
  v23 = (const void *)(a2 + v19);
  v24 = type metadata accessor for Image.Scale(0);
  v25 = *(_QWORD *)(v24 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24))
  {
    v26 = sub_5C154(&qword_3212C8);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v25 + 32))(v22, v23, v24);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
  }
  v27 = a3[14];
  *(_OWORD *)(a1 + a3[13]) = *(_OWORD *)(a2 + a3[13]);
  *(_OWORD *)(a1 + v27) = *(_OWORD *)(a2 + v27);
  v28 = a3[15];
  v29 = (void *)(a1 + v28);
  v30 = (const void *)(a2 + v28);
  v31 = type metadata accessor for FontSpec(0);
  v32 = *(_QWORD *)(v31 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v32 + 48))(v30, 1, v31))
  {
    v33 = sub_5C154(&qword_3212D0);
    memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v32 + 32))(v29, v30, v31);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v32 + 56))(v29, 0, 1, v31);
  }
  v34 = a3[16];
  v35 = a3[17];
  v36 = a1 + v34;
  v37 = a2 + v34;
  *(_QWORD *)v36 = *(_QWORD *)v37;
  *(_BYTE *)(v36 + 8) = *(_BYTE *)(v37 + 8);
  v38 = a1 + v35;
  v39 = a2 + v35;
  *(_QWORD *)v38 = *(_QWORD *)v39;
  *(_BYTE *)(v38 + 8) = *(_BYTE *)(v39 + 8);
  v40 = a3[18];
  v41 = a3[19];
  v42 = a1 + v40;
  v43 = a2 + v40;
  *(_QWORD *)v42 = *(_QWORD *)v43;
  v44 = *(_OWORD *)(a2 + v41);
  *(_BYTE *)(v42 + 8) = *(_BYTE *)(v43 + 8);
  *(_OWORD *)(a1 + v41) = v44;
  v45 = a3[20];
  v46 = (void *)(a1 + v45);
  v47 = (const void *)(a2 + v45);
  v48 = type metadata accessor for AccessibilityTraits(0);
  v49 = *(_QWORD *)(v48 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v49 + 48))(v47, 1, v48))
  {
    v50 = sub_5C154(&qword_321178);
    memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v49 + 32))(v46, v47, v48);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v49 + 56))(v46, 0, 1, v48);
  }
  v51 = a3[21];
  v52 = a1 + v51;
  v53 = a2 + v51;
  v54 = *(_OWORD *)(v53 + 16);
  *(_OWORD *)v52 = *(_OWORD *)v53;
  *(_OWORD *)(v52 + 16) = v54;
  *(_QWORD *)(v52 + 32) = *(_QWORD *)(v53 + 32);
  return a1;
}

uint64_t sub_98834(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  void *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(void *, uint64_t, uint64_t);
  int v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t (*v45)(void *, uint64_t, uint64_t);
  int v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  void *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t (*v60)(void *, uint64_t, uint64_t);
  int v61;
  int v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  _QWORD *v74;
  uint64_t *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  void *v80;
  void *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t (*v84)(void *, uint64_t, uint64_t);
  int v85;
  int v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  __int128 v95;

  _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((_QWORD *)a1);
  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  if (*(_QWORD *)(a1 + 64))
    _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((_QWORD *)(a1 + 40));
  v7 = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = v7;
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  v8 = a3[6];
  v9 = (void *)(a1 + v8);
  v10 = (void *)(a2 + v8);
  v11 = type metadata accessor for ImpressionMetrics(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v12 + 48);
  v14 = v13(v9, 1, v11);
  v15 = v13(v10, 1, v11);
  if (v14)
  {
    if (!v15)
    {
      (*(void (**)(void *, void *, uint64_t))(v12 + 32))(v9, v10, v11);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
      goto LABEL_9;
    }
    goto LABEL_8;
  }
  if (v15)
  {
    (*(void (**)(void *, uint64_t))(v12 + 8))(v9, v11);
LABEL_8:
    v16 = sub_5C154(&qword_31F480);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    goto LABEL_9;
  }
  (*(void (**)(void *, void *, uint64_t))(v12 + 40))(v9, v10, v11);
LABEL_9:
  v17 = a3[7];
  v18 = (_QWORD *)(a1 + v17);
  v19 = (uint64_t *)(a2 + v17);
  v21 = *v19;
  v20 = v19[1];
  v22 = v18[1];
  *v18 = v21;
  v18[1] = v20;
  swift_bridgeObjectRelease(v22);
  v23 = a3[8];
  v24 = (_QWORD *)(a1 + v23);
  v25 = (uint64_t *)(a2 + v23);
  v27 = *v25;
  v26 = v25[1];
  v28 = v24[1];
  *v24 = v27;
  v24[1] = v26;
  swift_bridgeObjectRelease(v28);
  v29 = a3[10];
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  v30 = a1 + v29;
  v31 = a2 + v29;
  v32 = *(_QWORD *)(a2 + v29);
  v33 = *(_QWORD *)(a2 + v29 + 8);
  v34 = *(_QWORD *)(v30 + 8);
  *(_QWORD *)v30 = v32;
  *(_QWORD *)(v30 + 8) = v33;
  swift_bridgeObjectRelease(v34);
  *(_BYTE *)(v30 + 16) = *(_BYTE *)(v31 + 16);
  v35 = a3[11];
  v36 = a1 + v35;
  v37 = a2 + v35;
  v38 = *(_QWORD *)(a2 + v35 + 8);
  v39 = *(_QWORD *)(a1 + v35 + 8);
  *(_QWORD *)v36 = *(_QWORD *)(a2 + v35);
  *(_QWORD *)(v36 + 8) = v38;
  swift_bridgeObjectRelease(v39);
  *(_BYTE *)(v36 + 16) = *(_BYTE *)(v37 + 16);
  v40 = a3[12];
  v41 = (void *)(a1 + v40);
  v42 = (void *)(a2 + v40);
  v43 = type metadata accessor for Image.Scale(0);
  v44 = *(_QWORD *)(v43 - 8);
  v45 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v44 + 48);
  v46 = v45(v41, 1, v43);
  v47 = v45(v42, 1, v43);
  if (v46)
  {
    if (!v47)
    {
      (*(void (**)(void *, void *, uint64_t))(v44 + 32))(v41, v42, v43);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v44 + 56))(v41, 0, 1, v43);
      goto LABEL_15;
    }
    goto LABEL_14;
  }
  if (v47)
  {
    (*(void (**)(void *, uint64_t))(v44 + 8))(v41, v43);
LABEL_14:
    v48 = sub_5C154(&qword_3212C8);
    memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
    goto LABEL_15;
  }
  (*(void (**)(void *, void *, uint64_t))(v44 + 40))(v41, v42, v43);
LABEL_15:
  v49 = a3[14];
  *(_OWORD *)(a1 + a3[13]) = *(_OWORD *)(a2 + a3[13]);
  v50 = (_QWORD *)(a1 + v49);
  v51 = (uint64_t *)(a2 + v49);
  v53 = *v51;
  v52 = v51[1];
  v54 = v50[1];
  *v50 = v53;
  v50[1] = v52;
  swift_bridgeObjectRelease(v54);
  v55 = a3[15];
  v56 = (void *)(a1 + v55);
  v57 = (void *)(a2 + v55);
  v58 = type metadata accessor for FontSpec(0);
  v59 = *(_QWORD *)(v58 - 8);
  v60 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v59 + 48);
  v61 = v60(v56, 1, v58);
  v62 = v60(v57, 1, v58);
  if (v61)
  {
    if (!v62)
    {
      (*(void (**)(void *, void *, uint64_t))(v59 + 32))(v56, v57, v58);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v59 + 56))(v56, 0, 1, v58);
      goto LABEL_21;
    }
    goto LABEL_20;
  }
  if (v62)
  {
    (*(void (**)(void *, uint64_t))(v59 + 8))(v56, v58);
LABEL_20:
    v63 = sub_5C154(&qword_3212D0);
    memcpy(v56, v57, *(_QWORD *)(*(_QWORD *)(v63 - 8) + 64));
    goto LABEL_21;
  }
  (*(void (**)(void *, void *, uint64_t))(v59 + 40))(v56, v57, v58);
LABEL_21:
  v64 = a3[16];
  v65 = a3[17];
  v66 = a1 + v64;
  v67 = a2 + v64;
  *(_QWORD *)v66 = *(_QWORD *)v67;
  *(_BYTE *)(v66 + 8) = *(_BYTE *)(v67 + 8);
  v68 = a1 + v65;
  v69 = a2 + v65;
  *(_QWORD *)v68 = *(_QWORD *)v69;
  *(_BYTE *)(v68 + 8) = *(_BYTE *)(v69 + 8);
  v70 = a3[18];
  v71 = a3[19];
  v72 = a1 + v70;
  v73 = a2 + v70;
  *(_QWORD *)v72 = *(_QWORD *)v73;
  *(_BYTE *)(v72 + 8) = *(_BYTE *)(v73 + 8);
  v74 = (_QWORD *)(a1 + v71);
  v75 = (uint64_t *)(a2 + v71);
  v77 = *v75;
  v76 = v75[1];
  v78 = v74[1];
  *v74 = v77;
  v74[1] = v76;
  swift_bridgeObjectRelease(v78);
  v79 = a3[20];
  v80 = (void *)(a1 + v79);
  v81 = (void *)(a2 + v79);
  v82 = type metadata accessor for AccessibilityTraits(0);
  v83 = *(_QWORD *)(v82 - 8);
  v84 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v83 + 48);
  v85 = v84(v80, 1, v82);
  v86 = v84(v81, 1, v82);
  if (v85)
  {
    if (!v86)
    {
      (*(void (**)(void *, void *, uint64_t))(v83 + 32))(v80, v81, v82);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v83 + 56))(v80, 0, 1, v82);
      goto LABEL_27;
    }
    goto LABEL_26;
  }
  if (v86)
  {
    (*(void (**)(void *, uint64_t))(v83 + 8))(v80, v82);
LABEL_26:
    v87 = sub_5C154(&qword_321178);
    memcpy(v80, v81, *(_QWORD *)(*(_QWORD *)(v87 - 8) + 64));
    goto LABEL_27;
  }
  (*(void (**)(void *, void *, uint64_t))(v83 + 40))(v80, v81, v82);
LABEL_27:
  v88 = a3[21];
  v89 = a1 + v88;
  v90 = a2 + v88;
  v91 = *(_QWORD *)(a1 + v88 + 8);
  if (!v91)
  {
LABEL_31:
    v95 = *(_OWORD *)(v90 + 16);
    *(_OWORD *)v89 = *(_OWORD *)v90;
    *(_OWORD *)(v89 + 16) = v95;
    *(_QWORD *)(v89 + 32) = *(_QWORD *)(v90 + 32);
    return a1;
  }
  v92 = *(_QWORD *)(v90 + 8);
  if (!v92)
  {
    sub_984B0(v89);
    goto LABEL_31;
  }
  *(_QWORD *)v89 = *(_QWORD *)v90;
  *(_QWORD *)(v89 + 8) = v92;
  swift_bridgeObjectRelease(v91);
  *(_QWORD *)(v89 + 16) = *(_QWORD *)(v90 + 16);
  v93 = *(_QWORD *)(v90 + 32);
  v94 = *(_QWORD *)(v89 + 32);
  *(_QWORD *)(v89 + 24) = *(_QWORD *)(v90 + 24);
  *(_QWORD *)(v89 + 32) = v93;
  swift_bridgeObjectRelease(v94);
  return a1;
}

uint64_t sub_98D48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_98D54);
}

uint64_t sub_98D54(uint64_t a1, uint64_t a2, int *a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_5C154(&qword_31F480);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = a3[6];
    }
    else
    {
      v12 = type metadata accessor for _CodeImageScale_OrNil(0);
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
      {
        v10 = v12;
        v11 = a3[12];
      }
      else
      {
        v13 = sub_5C154(&qword_3212D0);
        v9 = *(_QWORD *)(v13 - 8);
        if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
        {
          v10 = v13;
          v11 = a3[15];
        }
        else
        {
          v10 = sub_5C154(&qword_3212D8);
          v9 = *(_QWORD *)(v10 - 8);
          v11 = a3[20];
        }
      }
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t type metadata accessor for _CodeImageScale_OrNil(uint64_t a1)
{
  return sub_64960(a1, qword_321418, (uint64_t)&nominal type descriptor for _CodeImageScale_OrNil);
}

uint64_t sub_98E5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_98E68);
}

uint64_t sub_98E68(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 24) = (a2 - 1);
  }
  else
  {
    v8 = sub_5C154(&qword_31F480);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = a4[6];
    }
    else
    {
      v12 = type metadata accessor for _CodeImageScale_OrNil(0);
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == a3)
      {
        v10 = v12;
        v11 = a4[12];
      }
      else
      {
        v13 = sub_5C154(&qword_3212D0);
        v9 = *(_QWORD *)(v13 - 8);
        if (*(_DWORD *)(v9 + 84) == a3)
        {
          v10 = v13;
          v11 = a4[15];
        }
        else
        {
          v10 = sub_5C154(&qword_3212D8);
          v9 = *(_QWORD *)(v10 - 8);
          v11 = a4[20];
        }
      }
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

uint64_t type metadata accessor for TextComponentModel(uint64_t a1)
{
  return sub_64960(a1, (uint64_t *)&unk_321338, (uint64_t)&nominal type descriptor for TextComponentModel);
}

void sub_98F6C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  _QWORD v10[18];

  v10[0] = "(";
  v10[1] = &unk_25A2C0;
  sub_8C25C(319, (unint64_t *)&qword_320AC8, (uint64_t (*)(uint64_t))&type metadata accessor for ImpressionMetrics, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
  if (v3 <= 0x3F)
  {
    v10[2] = *(_QWORD *)(v2 - 8) + 64;
    v10[3] = &unk_25A2D8;
    v10[4] = &unk_25A2F0;
    v10[5] = &unk_25A308;
    v10[6] = &unk_25A320;
    v10[7] = &unk_25A320;
    sub_8C25C(319, &qword_321348, (uint64_t (*)(uint64_t))&type metadata accessor for Image.Scale, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
    if (v5 <= 0x3F)
    {
      v10[8] = *(_QWORD *)(v4 - 8) + 64;
      v10[9] = &unk_25A338;
      v10[10] = &unk_25A2F0;
      sub_8C25C(319, (unint64_t *)&unk_321350, (uint64_t (*)(uint64_t))&type metadata accessor for FontSpec, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
      if (v7 <= 0x3F)
      {
        v10[11] = *(_QWORD *)(v6 - 8) + 64;
        v10[12] = &unk_25A350;
        v10[13] = &unk_25A350;
        v10[14] = &unk_25A350;
        v10[15] = &unk_25A2F0;
        sub_8C25C(319, (unint64_t *)&qword_321288, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityTraits, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
        if (v9 <= 0x3F)
        {
          v10[16] = *(_QWORD *)(v8 - 8) + 64;
          v10[17] = &unk_25A2C0;
          swift_initStructMetadata(a1, 256, 18, v10, a1 + 16);
        }
      }
    }
  }
}

uint64_t *sub_990E8(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(_QWORD *)(sub_5C154(&qword_3212C8) - 8);
  v5 = *(_DWORD *)(v4 + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v8);
  }
  else
  {
    v6 = type metadata accessor for Image.Scale(0);
    v7 = *(_QWORD *)(v6 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
    {
      memcpy(a1, a2, *(_QWORD *)(v4 + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
    }
  }
  return a1;
}

uint64_t sub_991BC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = type metadata accessor for Image.Scale(0);
  v3 = *(_QWORD *)(v2 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(a1, 1, v2);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  return result;
}

void *sub_99224(void *a1, const void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = type metadata accessor for Image.Scale(0);
  v5 = *(_QWORD *)(v4 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v5 + 48))(a2, 1, v4))
  {
    v6 = sub_5C154(&qword_3212C8);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v5 + 16))(a1, a2, v4);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
  }
  return a1;
}

void *sub_992C8(void *a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(void *, uint64_t, uint64_t);
  int v7;
  int v8;
  uint64_t v9;

  v4 = type metadata accessor for Image.Scale(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v5 + 48);
  v7 = v6(a1, 1, v4);
  v8 = v6(a2, 1, v4);
  if (!v7)
  {
    if (!v8)
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 24))(a1, a2, v4);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v5 + 8))(a1, v4);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    v9 = sub_5C154(&qword_3212C8);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v5 + 16))(a1, a2, v4);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
  return a1;
}

void *sub_993B8(void *a1, const void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = type metadata accessor for Image.Scale(0);
  v5 = *(_QWORD *)(v4 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v5 + 48))(a2, 1, v4))
  {
    v6 = sub_5C154(&qword_3212C8);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v5 + 32))(a1, a2, v4);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
  }
  return a1;
}

void *sub_9945C(void *a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(void *, uint64_t, uint64_t);
  int v7;
  int v8;
  uint64_t v9;

  v4 = type metadata accessor for Image.Scale(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v5 + 48);
  v7 = v6(a1, 1, v4);
  v8 = v6(a2, 1, v4);
  if (!v7)
  {
    if (!v8)
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 40))(a1, a2, v4);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v5 + 8))(a1, v4);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    v9 = sub_5C154(&qword_3212C8);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v5 + 32))(a1, a2, v4);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
  return a1;
}

uint64_t sub_9954C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_99558);
}

uint64_t sub_99558(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_5C154(&qword_3212C8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_99598(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_995A4);
}

uint64_t sub_995A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_5C154(&qword_3212C8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

void sub_995E8(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  sub_8C25C(319, &qword_321348, (uint64_t (*)(uint64_t))&type metadata accessor for Image.Scale, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
  if (v3 <= 0x3F)
  {
    v4 = *(_QWORD *)(v2 - 8) + 64;
    swift_initStructMetadata(a1, 256, 1, &v4, a1 + 16);
  }
}

uint64_t sub_99668@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  _QWORD *v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v30 = a1;
  v31 = sub_5C154(&qword_321458);
  __chkstk_darwin(v31);
  v3 = (char *)&v28 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = sub_5C154(&qword_321460);
  __chkstk_darwin(v29);
  v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_5C154(&qword_321468);
  v28 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_5C154(&qword_321470);
  __chkstk_darwin(v9);
  v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for URL(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v18 = (char *)&v28 - v17;
  v19 = (_QWORD *)(v1 + *(int *)(type metadata accessor for TextComponentModel(0) + 76));
  if (!v19[1])
    goto LABEL_4;
  URL.init(string:)(*v19);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
    sub_5E09C((uint64_t)v11, &qword_321470);
LABEL_4:
    sub_999B8((uint64_t)v3);
    sub_5E1A4((uint64_t)v3, (uint64_t)v5, &qword_321458);
    swift_storeEnumTagMultiPayload(v5, v29, 1);
    v20 = sub_67060(&qword_321478, &qword_321468, (uint64_t)&protocol conformance descriptor for Link<A>);
    v21 = sub_9B90C();
    _ConditionalContent<>.init(storage:)(v5, v6, v31, v20, v21);
    return sub_5E09C((uint64_t)v3, &qword_321458);
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v18, v11, v12);
  v23 = (*(uint64_t (**)(char *, char *, uint64_t))(v13 + 16))(v15, v18, v12);
  __chkstk_darwin(v23);
  *(&v28 - 2) = v1;
  v24 = sub_9B90C();
  v25 = v31;
  Link.init(destination:label:)(v15, sub_9B9D8, &v28 - 4, v31, v24);
  v26 = v28;
  (*(void (**)(char *, char *, uint64_t))(v28 + 16))(v5, v8, v6);
  swift_storeEnumTagMultiPayload(v5, v29, 0);
  v27 = sub_67060(&qword_321478, &qword_321468, (uint64_t)&protocol conformance descriptor for Link<A>);
  _ConditionalContent<>.init(storage:)(v5, v6, v25, v27, v24);
  (*(void (**)(char *, uint64_t))(v26 + 8))(v8, v6);
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v18, v12);
}

uint64_t sub_999B8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t OpaqueTypeConformance2;
  uint64_t v40;
  uint64_t v41;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  _QWORD v53[2];

  v2 = v1;
  v52 = a1;
  v3 = type metadata accessor for _CodeAXTraits_OrNil(0);
  __chkstk_darwin(v3);
  v47 = (uint64_t)&v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_5C154(&qword_3212D8);
  __chkstk_darwin(v5);
  v45 = (uint64_t)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_5C154(&qword_321178);
  __chkstk_darwin(v7);
  v9 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = type metadata accessor for AccessibilityTraits(0);
  v10 = *(_QWORD *)(v44 - 8);
  __chkstk_darwin(v44);
  v51 = (char *)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for AccessibilityChildBehavior(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v43 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_5C154(&qword_321488);
  __chkstk_darwin(v16);
  v18 = (char *)&v43 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_5C154(&qword_321498);
  v49 = *(_QWORD *)(v19 - 8);
  v50 = v19;
  __chkstk_darwin(v19);
  v21 = (char *)&v43 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_5C154(&qword_321458);
  v23 = __chkstk_darwin(v22);
  v46 = (char *)&v43 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v18 = static VerticalAlignment.center.getter(v23);
  *((_QWORD *)v18 + 1) = 0;
  v18[16] = 1;
  v25 = sub_5C154(&qword_3214A0);
  v26 = sub_99EC8(v2, (uint64_t *)&v18[*(int *)(v25 + 44)]);
  static AccessibilityChildBehavior.combine.getter(v26);
  v27 = sub_67060(&qword_321490, &qword_321488, (uint64_t)&protocol conformance descriptor for HStack<A>);
  v48 = v16;
  v28 = v16;
  v29 = (uint64_t)v9;
  View.accessibilityElement(children:)(v15, v28, v27);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  sub_5E09C((uint64_t)v18, &qword_321488);
  v30 = v2 + *(int *)(type metadata accessor for TextComponentModel(0) + 80);
  v32 = v44;
  v31 = v45;
  sub_5E1A4(v30, v45, &qword_3212D8);
  v33 = v31;
  v34 = v47;
  sub_5E160(v33, v47, type metadata accessor for _CodeAXTraits_OrNil);
  sub_66F14(v34, v29, &qword_321178);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v29, 1, v32) == 1)
  {
    v53[0] = _swiftEmptyArrayStorage;
    v35 = sub_648E0(&qword_3214A8, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityTraits, (uint64_t)&protocol conformance descriptor for AccessibilityTraits);
    v36 = sub_5C154(&qword_3214B0);
    v37 = sub_67060(&qword_3214B8, &qword_3214B0, (uint64_t)&protocol conformance descriptor for [A]);
    v38 = v51;
    dispatch thunk of SetAlgebra.init<A>(_:)(v53, v36, v37, v32, v35);
    sub_5E09C(v29, &qword_321178);
  }
  else
  {
    v38 = v51;
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 32))(v51, v29, v32);
  }
  v53[0] = v48;
  v53[1] = v27;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v53, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
  v40 = (uint64_t)v46;
  v41 = v50;
  View.accessibilityAddTraits(_:)(v38, v50, OpaqueTypeConformance2);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v38, v32);
  (*(void (**)(char *, uint64_t))(v49 + 8))(v21, v41);
  return sub_66F14(v40, v52, &qword_321458);
}

uint64_t sub_99DF0()
{
  _BYTE *v0;

  if (*v0)
    return 0x6D65747379537369;
  else
    return 1701667182;
}

uint64_t sub_99E24@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_9CDD8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_99E48(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_9DC54();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_99E70(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_9DC54();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_99E98@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;
  char v6;

  result = sub_9CEB8(a1);
  if (!v2)
  {
    *(_QWORD *)a2 = result;
    *(_QWORD *)(a2 + 8) = v5;
    *(_BYTE *)(a2 + 16) = v6 & 1;
  }
  return result;
}

uint64_t sub_99EC8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  int *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  char v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  char v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  uint64_t v67;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  _QWORD v79[2];

  v4 = sub_5C154(&qword_3214C0);
  __chkstk_darwin(v4);
  v6 = (char *)&v69 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v71 = type metadata accessor for HTMLText(0);
  __chkstk_darwin(v71);
  v8 = (uint64_t *)((char *)&v69 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v9);
  v70 = (uint64_t)&v69 - v10;
  v11 = sub_5C154(&qword_3214C8);
  __chkstk_darwin(v11);
  v73 = (char *)&v69 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v69 - v14;
  v16 = (int *)type metadata accessor for TextComponentModel(0);
  v17 = (uint64_t *)(a1 + v16[10]);
  v18 = v17[1];
  if (v18)
  {
    v19 = v4;
    v20 = v15;
    v21 = *v17;
    v22 = *((_BYTE *)v17 + 16);
    swift_bridgeObjectRetain(v17[1]);
    if ((v22 & 1) != 0)
    {
      v24 = Image.init(systemName:)(v21, v18);
    }
    else
    {
      v23 = BSUIBundle();
      v24 = Image.init(_:bundle:)(v21, v18, v23);
    }
    v25 = Text.init(_:)(v24);
    v27 = v29 & 1;
    v15 = v20;
    v4 = v19;
  }
  else
  {
    v25 = 0;
    v26 = 0;
    v27 = 0;
    v28 = 0;
  }
  v30 = *(_BYTE *)(a1 + v16[9]);
  v31 = (uint64_t *)(a1 + v16[7]);
  v32 = *v31;
  v33 = v31[1];
  v77 = v26;
  v78 = v25;
  v75 = v27;
  v76 = v28;
  v74 = a2;
  if ((v30 & 1) != 0)
  {
    v39 = v71;
    sub_5E1A4(a1 + v16[15], (uint64_t)v8 + *(int *)(v71 + 20), &qword_3212D0);
    *v8 = v32;
    v8[1] = v33;
    v40 = (_QWORD *)((char *)v8 + *(int *)(v39 + 24));
    *v40 = swift_getKeyPath(&unk_25A478);
    v41 = sub_5C154(&qword_320308);
    swift_storeEnumTagMultiPayload(v40, v41, 0);
    v42 = (char *)v8 + *(int *)(v39 + 28);
    *(_QWORD *)v42 = swift_getKeyPath(&unk_25A4A8);
    v42[8] = 0;
    v43 = v70;
    sub_5E160((uint64_t)v8, v70, type metadata accessor for HTMLText);
    sub_5E11C(v43, (uint64_t)v6, type metadata accessor for HTMLText);
    swift_storeEnumTagMultiPayload(v6, v4, 0);
    v44 = sub_648E0(&qword_3214D0, type metadata accessor for HTMLText, (uint64_t)&unk_25A6B0);
    swift_bridgeObjectRetain(v33);
    _ConditionalContent<>.init(storage:)(v6, v39, &type metadata for Text, v44, &protocol witness table for Text);
    sub_6685C(v43, type metadata accessor for HTMLText);
  }
  else
  {
    v79[0] = v32;
    v79[1] = v33;
    v34 = sub_668F8();
    swift_bridgeObjectRetain(v33);
    *(_QWORD *)v6 = Text.init<A>(_:)(v79, &type metadata for String, v34);
    *((_QWORD *)v6 + 1) = v35;
    v6[16] = v36 & 1;
    *((_QWORD *)v6 + 3) = v37;
    swift_storeEnumTagMultiPayload(v6, v4, 1);
    v38 = sub_648E0(&qword_3214D0, type metadata accessor for HTMLText, (uint64_t)&unk_25A6B0);
    _ConditionalContent<>.init(storage:)(v6, v71, &type metadata for Text, v38, &protocol witness table for Text);
  }
  v45 = (uint64_t)v73;
  v46 = (uint64_t *)(a1 + v16[11]);
  v47 = v46[1];
  if (v47)
  {
    v48 = v15;
    v49 = *v46;
    v50 = *((_BYTE *)v46 + 16);
    swift_bridgeObjectRetain(v46[1]);
    if ((v50 & 1) != 0)
    {
      v52 = Image.init(systemName:)(v49, v47);
    }
    else
    {
      v51 = BSUIBundle();
      v52 = Image.init(_:bundle:)(v49, v47, v51);
    }
    v15 = v48;
    v73 = (char *)Text.init(_:)(v52);
    v53 = v56;
    v55 = v57;
    v54 = v58 & 1;
  }
  else
  {
    v73 = 0;
    v53 = 0;
    v54 = 0;
    v55 = 0;
  }
  v72 = v15;
  sub_5E1A4((uint64_t)v15, v45, &qword_3214C8);
  v59 = v77;
  v60 = v78;
  v61 = v74;
  v62 = v75;
  *v74 = v78;
  v61[1] = v59;
  v63 = v76;
  v61[2] = v62;
  v61[3] = v63;
  v64 = v45;
  v65 = sub_5C154(&qword_3214D8);
  sub_5E1A4(v64, (uint64_t)v61 + *(int *)(v65 + 48), &qword_3214C8);
  v66 = (uint64_t *)((char *)v61 + *(int *)(v65 + 64));
  v67 = (uint64_t)v73;
  *v66 = v73;
  v66[1] = v53;
  v66[2] = v54;
  v66[3] = v55;
  sub_9BA0C(v60, v59, v62, v63);
  sub_9BA0C(v67, v53, v54, v55);
  sub_5E09C((uint64_t)v72, &qword_3214C8);
  sub_9BA3C(v67, v53, v54, v55);
  sub_5E09C(v64, &qword_3214C8);
  return sub_9BA3C(v60, v59, v62, v63);
}

uint64_t sub_9A398(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_9A3C0 + 4 * aO[a1]))(25705, 0xE200000000000000);
}

uint64_t sub_9A3C0()
{
  return 0x6575676573;
}

unint64_t sub_9A3D4()
{
  return 0xD000000000000011;
}

uint64_t sub_9A3F4()
{
  return 1954047348;
}

uint64_t sub_9A404()
{
  return 0x6666755374786574;
}

uint64_t sub_9A420()
{
  return 0x4C4D54487369;
}

uint64_t sub_9A434()
{
  return 0x53676E696461656CLL;
}

uint64_t sub_9A458()
{
  return 0x676E696C69617274;
}

unint64_t sub_9A47C()
{
  return 0xD000000000000010;
}

uint64_t sub_9A498()
{
  return 0x6E656D6E67696C61;
}

uint64_t sub_9A540()
{
  return 7107189;
}

uint64_t sub_9A550()
{
  return 0x7374696172547861;
}

uint64_t sub_9A568()
{
  return 0x6F666E49746E6974;
}

uint64_t sub_9A580@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unsigned int v27;
  uint64_t v28;
  int *v29;
  int v30;
  int v31;
  int v32;
  int v33;
  int v34;
  uint64_t result;
  int v36;
  int v37;
  __int128 v38;
  _OWORD *v39;
  uint64_t v40;
  uint64_t v41;
  int *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  unint64_t v51;
  char v52;
  char *v53;
  char v54;
  char *v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  char v67;
  char *v68;
  uint64_t v69;
  char v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  char v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t *v79;
  unint64_t v80;
  uint64_t v81;
  unint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  __int128 v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  _QWORD *v92;
  _QWORD *v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  _OWORD *v98;
  int *v99;
  __int128 v100;
  __int128 v101;
  uint64_t v102;
  __int128 v103;
  __int128 v104;
  uint64_t v105;
  char *v106;

  v94 = a2;
  v91 = sub_5C154(&qword_3212D8);
  __chkstk_darwin(v91);
  v92 = (uint64_t *)((char *)&v88 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v4 = sub_5C154(&qword_3212D0);
  __chkstk_darwin(v4);
  v6 = (char *)&v88 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for _CodeImageScale_OrNil(0);
  __chkstk_darwin(v7);
  v9 = (char *)&v88 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_5C154(&qword_31F480);
  __chkstk_darwin(v10);
  v12 = (char *)&v88 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v96 = sub_5C154(&qword_3214E0);
  v13 = *(_QWORD *)(v96 - 8);
  __chkstk_darwin(v96);
  v15 = (char *)&v88 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v99 = (int *)type metadata accessor for TextComponentModel(0);
  __chkstk_darwin(v99);
  v17 = (char *)&v88 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v106 = v17 + 40;
  v105 = 0;
  v103 = 0u;
  v104 = 0u;
  v102 = 0;
  v100 = 0u;
  v101 = 0u;
  sub_8B354((uint64_t)&v103, (uint64_t)&v100);
  v18 = v101;
  *(_OWORD *)(v17 + 40) = v100;
  *(_OWORD *)(v17 + 56) = v18;
  v98 = v17;
  *((_QWORD *)v17 + 9) = v102;
  sub_5E09C((uint64_t)&v103, (uint64_t *)&unk_326210);
  v20 = a1[3];
  v19 = a1[4];
  v93 = a1;
  sub_66898(a1, v20);
  v21 = sub_9BA78();
  v95 = v15;
  v22 = v97;
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for TextComponentModel.CodingKeys, &type metadata for TextComponentModel.CodingKeys, v21, v20, v19);
  if (v22)
  {
    v97 = v22;
    LODWORD(v96) = 0;
    v27 = 2;
  }
  else
  {
    v97 = v7;
    v23 = v9;
    v89 = v6;
    v90 = v13;
    v24 = sub_5C154(&qword_320B78);
    LOBYTE(v100) = 0;
    v25 = sub_67060((unint64_t *)&qword_320B90, &qword_320B78, (uint64_t)&protocol conformance descriptor for CodeAnyHashable<A>);
    v26 = v96;
    KeyedDecodingContainer.decode<A>(_:forKey:)(&v103, v24, &v100, v96, v24, v25);
    v38 = v104;
    v39 = v98;
    *v98 = v103;
    v39[1] = v38;
    *((_QWORD *)v39 + 4) = v105;
    v40 = sub_5C154(&qword_320B70);
    LOBYTE(v100) = 1;
    v41 = sub_67060(&qword_320B98, &qword_320B70, (uint64_t)&protocol conformance descriptor for _CodeByKind_OrNil<A>);
    KeyedDecodingContainer.decode<A>(_:forKey:)(&v103, v40, &v100, v26, v40, v41);
    v42 = v99;
    sub_8B3E0((uint64_t)&v103, (uint64_t)v106, &qword_320B70);
    v43 = type metadata accessor for ImpressionMetrics(0);
    LOBYTE(v103) = 2;
    v44 = sub_648E0(&qword_320BA0, (uint64_t (*)(uint64_t))&type metadata accessor for ImpressionMetrics, (uint64_t)&protocol conformance descriptor for ImpressionMetrics);
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)(v43, &v103, v26, v43, v44);
    sub_66F14((uint64_t)v12, (uint64_t)v39 + v42[6], &qword_31F480);
    LOBYTE(v103) = 3;
    v45 = KeyedDecodingContainer.decode(_:forKey:)(&v103, v26);
    v46 = (uint64_t *)((char *)v39 + v42[7]);
    *v46 = v45;
    v46[1] = v47;
    LOBYTE(v103) = 4;
    v48 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)(&v103, v26);
    v49 = (uint64_t *)((char *)v39 + v42[8]);
    *v49 = v48;
    v49[1] = v50;
    LOBYTE(v103) = 5;
    *((_BYTE *)v39 + v42[9]) = KeyedDecodingContainer.decodeIfPresent(_:forKey:)(&v103, v26);
    LOBYTE(v100) = 6;
    v51 = sub_9BABC();
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)(&type metadata for TextComponentModel.SymbolImageSpec, &v100, v26, &type metadata for TextComponentModel.SymbolImageSpec, v51);
    v52 = v104;
    v53 = (char *)v39 + v42[10];
    *(_OWORD *)v53 = v103;
    v53[16] = v52;
    LOBYTE(v100) = 7;
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)(&type metadata for TextComponentModel.SymbolImageSpec, &v100, v26, &type metadata for TextComponentModel.SymbolImageSpec, v51);
    v54 = v104;
    v55 = (char *)v39 + v42[11];
    *(_OWORD *)v55 = v103;
    v55[16] = v54;
    LOBYTE(v103) = 8;
    v56 = sub_648E0(&qword_3214F8, type metadata accessor for _CodeImageScale_OrNil, (uint64_t)&unk_25A388);
    KeyedDecodingContainer.decode<A>(_:forKey:)(v23, v97, &v103, v26, v97, v56);
    sub_5E160((uint64_t)v23, (uint64_t)v39 + v42[12], type metadata accessor for _CodeImageScale_OrNil);
    LOBYTE(v100) = 9;
    v57 = sub_8B4AC();
    KeyedDecodingContainer.decode<A>(_:forKey:)(&v103, &type metadata for AlignmentSpec, &v100, v26, &type metadata for AlignmentSpec, v57);
    v97 = 0;
    *(_OWORD *)((char *)v98 + v99[13]) = v103;
    LOBYTE(v103) = 10;
    v58 = v97;
    v59 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)(&v103, v96);
    v97 = v58;
    if (v58)
    {
      (*(void (**)(char *, uint64_t))(v90 + 8))(v95, v96);
      LODWORD(v96) = 0;
      v27 = 479;
    }
    else
    {
      v61 = (uint64_t *)((char *)v98 + v99[14]);
      *v61 = v59;
      v61[1] = v60;
      v62 = type metadata accessor for FontSpec(0);
      LOBYTE(v103) = 11;
      v63 = sub_648E0(&qword_321500, (uint64_t (*)(uint64_t))&type metadata accessor for FontSpec, (uint64_t)&protocol conformance descriptor for FontSpec);
      v64 = v97;
      KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)(v62, &v103, v96, v62, v63);
      v97 = v64;
      if (!v64)
      {
        sub_66F14((uint64_t)v89, (uint64_t)v98 + v99[15], &qword_3212D0);
        LOBYTE(v100) = 12;
        v65 = sub_9BB00();
        v66 = v97;
        KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)(&type metadata for CGFloat, &v100, v96, &type metadata for CGFloat, v65);
        v97 = v66;
        if (v66)
          goto LABEL_37;
        v67 = BYTE8(v103);
        v68 = (char *)v98 + v99[16];
        *(_QWORD *)v68 = v103;
        v68[8] = v67;
        LOBYTE(v100) = 13;
        v69 = v97;
        KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)(&type metadata for CGFloat, &v100, v96, &type metadata for CGFloat, v65);
        v97 = v69;
        if (v69)
          goto LABEL_37;
        v70 = BYTE8(v103);
        v71 = (char *)v98 + v99[17];
        *(_QWORD *)v71 = v103;
        v71[8] = v70;
        LOBYTE(v103) = 14;
        v72 = v97;
        v73 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)(&v103, v96);
        v97 = v72;
        if (v72
          || (v75 = (char *)v98 + v99[18],
              *(_QWORD *)v75 = v73,
              v75[8] = v74 & 1,
              LOBYTE(v103) = 15,
              v76 = v97,
              v77 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)(&v103, v96),
              (v97 = v76) != 0))
        {
LABEL_37:
          (*(void (**)(char *, uint64_t))(v90 + 8))(v95, v96);
          LODWORD(v94) = 0;
          LODWORD(v95) = 0;
        }
        else
        {
          v79 = (uint64_t *)((char *)v98 + v99[19]);
          *v79 = v77;
          v79[1] = v78;
          LOBYTE(v103) = 16;
          v80 = sub_9BB44();
          v81 = v97;
          KeyedDecodingContainer.decode<A>(_:forKey:)(v92, v91, &v103, v96, v91, v80);
          v97 = v81;
          if (v81)
          {
            (*(void (**)(char *, uint64_t))(v90 + 8))(v95, v96);
            LODWORD(v95) = 0;
            LODWORD(v94) = 1;
          }
          else
          {
            sub_66F14((uint64_t)v92, (uint64_t)v98 + v99[20], &qword_3212D8);
            LOBYTE(v100) = 17;
            v82 = sub_9BBC0();
            v83 = v97;
            KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)(&type metadata for TintColorInfo, &v100, v96, &type metadata for TintColorInfo, v82);
            v97 = v83;
            if (!v83)
            {
              (*(void (**)(char *, uint64_t))(v90 + 8))(v95, v96);
              v84 = v105;
              v85 = (uint64_t)v98;
              v86 = (char *)v98 + v99[21];
              v87 = v104;
              *(_OWORD *)v86 = v103;
              *((_OWORD *)v86 + 1) = v87;
              *((_QWORD *)v86 + 4) = v84;
              sub_5E11C(v85, v94, type metadata accessor for TextComponentModel);
              _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(v93);
              return sub_6685C(v85, type metadata accessor for TextComponentModel);
            }
            (*(void (**)(char *, uint64_t))(v90 + 8))(v95, v96);
            LODWORD(v94) = 1;
            LODWORD(v95) = 1;
          }
        }
        _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(v93);
        LOBYTE(v37) = 1;
        v30 = 1;
        v31 = 1;
        v32 = 1;
        v33 = 1;
        v34 = 1;
        LODWORD(v96) = 1;
        v36 = 1;
        v28 = (uint64_t)v98;
        v29 = v99;
        goto LABEL_17;
      }
      (*(void (**)(char *, uint64_t))(v90 + 8))(v95, v96);
      v27 = 1503;
      LODWORD(v96) = 1;
    }
  }
  v28 = (uint64_t)v98;
  v29 = v99;
  _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(v93);
  v30 = (v27 >> 3) & 1;
  v31 = (v27 >> 4) & 1;
  v32 = (v27 >> 6) & 1;
  v33 = (v27 >> 7) & 1;
  v34 = (v27 >> 8) & 1;
  if ((v27 & 1) == 0)
  {
    result = sub_5E09C((uint64_t)v106, &qword_320B70);
    LODWORD(v95) = 0;
    LODWORD(v94) = 0;
    v36 = 0;
    if ((v27 & 4) == 0)
      goto LABEL_6;
    goto LABEL_18;
  }
  v36 = 0;
  LODWORD(v94) = 0;
  LODWORD(v95) = 0;
  v37 = (v27 >> 2) & 1;
LABEL_17:
  sub_5E09C(v28, &qword_320B78);
  result = sub_5E09C((uint64_t)v106, &qword_320B70);
  if ((v37 & 1) == 0)
  {
LABEL_6:
    if (v30)
      goto LABEL_7;
    goto LABEL_19;
  }
LABEL_18:
  result = sub_5E09C(v28 + v29[6], &qword_31F480);
  if ((v30 & 1) != 0)
  {
LABEL_7:
    result = swift_bridgeObjectRelease(*(_QWORD *)(v28 + v29[7] + 8));
    if ((v31 & 1) == 0)
      goto LABEL_8;
    goto LABEL_20;
  }
LABEL_19:
  if (!v31)
  {
LABEL_8:
    if (v32)
      goto LABEL_9;
    goto LABEL_21;
  }
LABEL_20:
  result = swift_bridgeObjectRelease(*(_QWORD *)(v28 + v29[8] + 8));
  if ((v32 & 1) != 0)
  {
LABEL_9:
    result = swift_bridgeObjectRelease(*(_QWORD *)(v28 + v29[10] + 8));
    if ((v33 & 1) == 0)
      goto LABEL_10;
    goto LABEL_22;
  }
LABEL_21:
  if (!v33)
  {
LABEL_10:
    if (v34)
      goto LABEL_11;
    goto LABEL_23;
  }
LABEL_22:
  result = swift_bridgeObjectRelease(*(_QWORD *)(v28 + v29[11] + 8));
  if ((v34 & 1) != 0)
  {
LABEL_11:
    result = sub_6685C(v28 + v29[12], type metadata accessor for _CodeImageScale_OrNil);
    if ((v96 & 1) == 0)
      goto LABEL_12;
    goto LABEL_24;
  }
LABEL_23:
  if (!(_DWORD)v96)
  {
LABEL_12:
    if (v36)
      goto LABEL_13;
    goto LABEL_25;
  }
LABEL_24:
  result = swift_bridgeObjectRelease(*(_QWORD *)(v28 + v29[14] + 8));
  if ((v36 & 1) != 0)
  {
LABEL_13:
    result = sub_5E09C(v28 + v29[15], &qword_3212D0);
    if ((v94 & 1) == 0)
      goto LABEL_14;
LABEL_26:
    result = swift_bridgeObjectRelease(*(_QWORD *)(v28 + v29[19] + 8));
    if ((v95 & 1) == 0)
      return result;
    return sub_5E09C(v28 + v29[20], &qword_3212D8);
  }
LABEL_25:
  if ((_DWORD)v94)
    goto LABEL_26;
LABEL_14:
  if (!(_DWORD)v95)
    return result;
  return sub_5E09C(v28 + v29[20], &qword_3212D8);
}

uint64_t sub_9B0E8()
{
  unsigned __int8 *v0;

  return sub_9A398(*v0);
}

uint64_t sub_9B0F0@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_9D048(a1, a2);
  *a3 = result;
  return result;
}

void sub_9B114(_BYTE *a1@<X8>)
{
  *a1 = 18;
}

uint64_t sub_9B120(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_9BA78();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_9B148(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_9BA78();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t ReviewBrickComponentModel.segue.setter(uint64_t a1)
{
  uint64_t v1;

  return sub_8B3E0(a1, v1 + 40, (uint64_t *)&unk_326210);
}

Swift::Void (__swiftcall *ReviewBrickComponentModel.segue.modify())()
{
  return SwiftUICoverAnimationProvider.coverAnimationSourceInvalidateFrame();
}

uint64_t sub_9B1A0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_9A580(a1, a2);
}

uint64_t sub_9B1B4@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;

  v3 = sub_5C154(&qword_3212D0);
  v4 = __chkstk_darwin(v3);
  v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for AttributedString(0, v4);
  __chkstk_darwin(v7);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v1;
  v11 = v1[1];
  v12 = type metadata accessor for HTMLText(0);
  sub_5E1A4((uint64_t)v1 + *(int *)(v12 + 20), (uint64_t)v6, &qword_3212D0);
  v13 = type metadata accessor for FontSpec(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48))(v6, 1, v13);
  v16 = swift_bridgeObjectRetain(v11);
  if (v15 == 1)
  {
    v17 = sub_5E09C((uint64_t)v6, &qword_3212D0);
    v18 = static Font.body.getter(v17);
  }
  else
  {
    v18 = FontSpec.font.getter(v16);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v6, v13);
  }
  AttributedString.init(html:font:)(v10, v11, v18);
  result = Text.init(_:)(v9);
  *(_QWORD *)a1 = result;
  *(_QWORD *)(a1 + 8) = v20;
  *(_BYTE *)(a1 + 16) = v21 & 1;
  *(_QWORD *)(a1 + 24) = v22;
  return result;
}

uint64_t sub_9B324@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  uint64_t v20;
  unint64_t v21;
  unint64_t v23;
  unsigned int *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  _QWORD *v29;
  unint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  _QWORD *v43;
  _QWORD v44[3];
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  v47 = a2;
  v4 = type metadata accessor for Image.Scale(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for CodeImageScale(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = a1[3];
  v12 = a1[4];
  sub_66898(a1, v11);
  dispatch thunk of Decoder.singleValueContainer()(v44, v11, v12);
  if (!v2)
  {
    v42 = v5;
    v43 = a1;
    v40 = v10;
    v41 = v7;
    v13 = v47;
    v14 = v45;
    v15 = v46;
    sub_66898(v44, v45);
    v16 = dispatch thunk of SingleValueDecodingContainer.decode(_:)(v14, v15);
    v20 = v16;
    v21 = v17;
    if (v16 == 0x6C6C616D73 && v17 == 0xE500000000000000)
    {
      v23 = 0xE500000000000000;
      goto LABEL_13;
    }
    if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6C6C616D73, 0xE500000000000000, v16, v17, 0) & 1) != 0)
    {
      v23 = v21;
LABEL_13:
      swift_bridgeObjectRelease(v23);
      v24 = (unsigned int *)&enum case for Image.Scale.small(_:);
LABEL_14:
      v25 = v13;
      v27 = v41;
      v26 = v42;
      v28 = (uint64_t)v40;
      v29 = v43;
      (*(void (**)(char *, _QWORD, uint64_t))(v42 + 104))(v41, *v24, v4);
      (*(void (**)(uint64_t, char *, uint64_t))(v26 + 32))(v28, v27, v4);
      _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(v44);
      sub_5E160(v28, v25, type metadata accessor for CodeImageScale);
      v18 = v29;
      return _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(v18);
    }
    if (v20 == 0x6D756964656DLL && v21 == 0xE600000000000000)
    {
      v30 = 0xE600000000000000;
LABEL_20:
      swift_bridgeObjectRelease(v30);
      v24 = (unsigned int *)&enum case for Image.Scale.medium(_:);
      goto LABEL_14;
    }
    if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6D756964656DLL, 0xE600000000000000, v20, v21, 0) & 1) != 0)
    {
      v30 = v21;
      goto LABEL_20;
    }
    if (v20 == 0x656772616CLL && v21 == 0xE500000000000000)
    {
      swift_bridgeObjectRelease(0xE500000000000000);
LABEL_25:
      v24 = (unsigned int *)&enum case for Image.Scale.large(_:);
      goto LABEL_14;
    }
    v31 = _stringCompareWithSmolCheck(_:_:expecting:)(0x656772616CLL, 0xE500000000000000, v20, v21, 0);
    swift_bridgeObjectRelease(v21);
    if ((v31 & 1) != 0)
      goto LABEL_25;
    v32 = type metadata accessor for DecodingError(0);
    swift_allocError(v32, &protocol witness table for DecodingError, 0, 0);
    v34 = v33;
    v35 = v45;
    v36 = v46;
    sub_66898(v44, v45);
    v37 = dispatch thunk of SingleValueDecodingContainer.codingPath.getter(v35, v36);
    DecodingError.Context.init(codingPath:debugDescription:underlyingError:)(v37, 0xD000000000000013, 0x800000000026FF20, 0);
    v38 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v32 - 8) + 104))(v34, enum case for DecodingError.dataCorrupted(_:), v32);
    swift_willThrow(v38);
    _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(v44);
    a1 = v43;
  }
  v18 = a1;
  return _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(v18);
}

uint64_t sub_9B678@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_9B324(a1, a2);
}

uint64_t sub_9B68C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  int v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE v23[40];
  _BYTE *v24;

  v5 = sub_5C154(&qword_3212C8);
  __chkstk_darwin(v5);
  v24 = &v23[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v7 = sub_5C154(&qword_321528);
  __chkstk_darwin(v7);
  v9 = &v23[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v10);
  v12 = &v23[-v11 - 8];
  v13 = type metadata accessor for Image.Scale(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  v15(a2, 1, 1, v13);
  sub_5E0D8((uint64_t)a1, (uint64_t)v23);
  v16 = type metadata accessor for CodeImageScale(0);
  v17 = sub_648E0(&qword_321530, type metadata accessor for CodeImageScale, (uint64_t)&unk_25A5E8);
  Optional<A>.init(from:)(v23, v16, v17);
  _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(a1);
  if (v2)
    return sub_6685C(a2, type metadata accessor for _CodeImageScale_OrNil);
  sub_66F14((uint64_t)v12, (uint64_t)v9, &qword_321528);
  v19 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 48))(v9, 1, v16);
  v20 = (uint64_t)v24;
  if (v19 == 1)
  {
    sub_5E09C((uint64_t)v9, &qword_321528);
    v21 = 1;
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v14 + 16))(v24, v9, v13);
    sub_6685C((uint64_t)v9, type metadata accessor for CodeImageScale);
    v21 = 0;
  }
  v15(v20, v21, 1, v13);
  return sub_8B3E0(v20, a2, &qword_3212C8);
}

uint64_t sub_9B8A0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_9B68C(a1, a2);
}

uint64_t sub_9B8B4()
{
  return sub_648E0(&qword_3200A8, type metadata accessor for TextComponentModel, (uint64_t)&unk_25A438);
}

uint64_t sub_9B8E0()
{
  return sub_648E0(&qword_321450, type metadata accessor for TextComponentModel, (uint64_t)&unk_25A3B0);
}

unint64_t sub_9B90C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_321480;
  if (!qword_321480)
  {
    v1 = sub_667D0(&qword_321458);
    v2[0] = sub_667D0(&qword_321488);
    v2[1] = sub_67060(&qword_321490, &qword_321488, (uint64_t)&protocol conformance descriptor for HStack<A>);
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
    sub_648E0(&qword_31F710, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_321480);
  }
  return result;
}

uint64_t sub_9B9D8@<X0>(uint64_t a1@<X8>)
{
  return sub_999B8(a1);
}

uint64_t type metadata accessor for HTMLText(uint64_t a1)
{
  return sub_64960(a1, (uint64_t *)&unk_321628, (uint64_t)&nominal type descriptor for HTMLText);
}

double sub_9BA0C(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  double result;

  if (a4)
  {
    sub_7BBCC(a1, a2, a3 & 1);
    *(_QWORD *)&result = swift_bridgeObjectRetain(a4).n128_u64[0];
  }
  return result;
}

uint64_t sub_9BA3C(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    sub_6693C(result, a2, a3 & 1);
    return swift_bridgeObjectRelease(a4);
  }
  return result;
}

unint64_t sub_9BA78()
{
  unint64_t result;

  result = qword_3214E8;
  if (!qword_3214E8)
  {
    result = swift_getWitnessTable(&unk_25A638, &type metadata for TextComponentModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_3214E8);
  }
  return result;
}

unint64_t sub_9BABC()
{
  unint64_t result;

  result = qword_3214F0;
  if (!qword_3214F0)
  {
    result = swift_getWitnessTable(&unk_25A610, &type metadata for TextComponentModel.SymbolImageSpec);
    atomic_store(result, (unint64_t *)&qword_3214F0);
  }
  return result;
}

unint64_t sub_9BB00()
{
  unint64_t result;

  result = qword_321508;
  if (!qword_321508)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for CGFloat, &type metadata for CGFloat);
    atomic_store(result, (unint64_t *)&qword_321508);
  }
  return result;
}

unint64_t sub_9BB44()
{
  unint64_t result;
  uint64_t v1;

  result = qword_321510;
  if (!qword_321510)
  {
    v1 = sub_667D0(&qword_3212D8);
    sub_648E0(&qword_321518, type metadata accessor for _CodeAXTraits_OrNil, (uint64_t)&unk_25A130);
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> DiscardOnError<A>, v1);
    atomic_store(result, (unint64_t *)&qword_321510);
  }
  return result;
}

unint64_t sub_9BBC0()
{
  unint64_t result;

  result = qword_321520;
  if (!qword_321520)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for TintColorInfo, &type metadata for TintColorInfo);
    atomic_store(result, (unint64_t *)&qword_321520);
  }
  return result;
}

uint64_t type metadata accessor for CodeImageScale(uint64_t a1)
{
  return sub_64960(a1, qword_321590, (uint64_t)&nominal type descriptor for CodeImageScale);
}

uint64_t sub_9BC18(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Image.Scale(0);
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

uint64_t sub_9BC54(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for Image.Scale(0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t sub_9BC88(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Image.Scale(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t sub_9BCCC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Image.Scale(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t sub_9BD10(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Image.Scale(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t sub_9BD54(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Image.Scale(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t sub_9BD98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_9BDA4);
}

uint64_t sub_9BDA4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Image.Scale(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_9BDE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_9BDEC);
}

uint64_t sub_9BDEC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Image.Scale(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t sub_9BE2C(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  uint64_t v4;

  result = type metadata accessor for Image.Scale(319);
  if (v3 <= 0x3F)
  {
    v4 = *(_QWORD *)(result - 8) + 64;
    swift_initStructMetadata(a1, 256, 1, &v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for TextComponentModel.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xEF)
    goto LABEL_17;
  if (a2 + 17 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 17) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 17;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 17;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 17;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x12;
  v8 = v6 - 18;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for TextComponentModel.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 17 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 17) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xEF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xEE)
    return ((uint64_t (*)(void))((char *)&loc_9BF70 + 4 * byte_25A277[v4]))();
  *a1 = a2 + 17;
  return ((uint64_t (*)(void))((char *)sub_9BFA4 + 4 * byte_25A272[v4]))();
}

uint64_t sub_9BFA4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_9BFAC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x9BFB4);
  return result;
}

uint64_t sub_9BFC0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x9BFC8);
  *(_BYTE *)result = a2 + 17;
  return result;
}

uint64_t sub_9BFCC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_9BFD4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TextComponentModel.CodingKeys()
{
  return &type metadata for TextComponentModel.CodingKeys;
}

uint64_t *sub_9BFF0(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  char v27;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v15);
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = type metadata accessor for FontSpec(0);
    v12 = *(_QWORD *)(v11 - 8);
    v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain(v7);
    if (v13(v10, 1, v11))
    {
      v14 = sub_5C154(&qword_3212D0);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    v16 = a3[6];
    v17 = (uint64_t *)((char *)v4 + v16);
    v18 = (uint64_t *)((char *)a2 + v16);
    v19 = sub_5C154(&qword_320308);
    if (swift_getEnumCaseMultiPayload(v18, v19) == 1)
    {
      v20 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v17, v18, v20);
      v21 = 1;
    }
    else
    {
      v22 = *v18;
      *v17 = *v18;
      swift_retain(v22);
      v21 = 0;
    }
    swift_storeEnumTagMultiPayload(v17, v19, v21);
    v23 = a3[7];
    v24 = (char *)v4 + v23;
    v25 = (char *)a2 + v23;
    v26 = *(_QWORD *)v25;
    v27 = v25[8];
    sub_64DD8(*(_QWORD *)v25, v27);
    *(_QWORD *)v24 = v26;
    v24[8] = v27;
  }
  return v4;
}

uint64_t sub_9C194(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  v4 = a1 + a2[5];
  v5 = type metadata accessor for FontSpec(0);
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  v7 = (_QWORD *)(a1 + a2[6]);
  v8 = sub_5C154(&qword_320308);
  if (swift_getEnumCaseMultiPayload(v7, v8) == 1)
  {
    v9 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v7, v9);
  }
  else
  {
    swift_release(*v7);
  }
  return sub_64FFC(*(_QWORD *)(a1 + a2[7]), *(_BYTE *)(a1 + a2[7] + 8));
}

_QWORD *sub_9C26C(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(char *, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  char v25;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for FontSpec(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain(v6);
  if (v12(v9, 1, v10))
  {
    v13 = sub_5C154(&qword_3212D0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  v14 = a3[6];
  v15 = (_QWORD *)((char *)a1 + v14);
  v16 = (_QWORD *)((char *)a2 + v14);
  v17 = sub_5C154(&qword_320308);
  if (swift_getEnumCaseMultiPayload(v16, v17) == 1)
  {
    v18 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v15, v16, v18);
    v19 = 1;
  }
  else
  {
    v20 = *v16;
    *v15 = *v16;
    swift_retain(v20);
    v19 = 0;
  }
  swift_storeEnumTagMultiPayload(v15, v17, v19);
  v21 = a3[7];
  v22 = (char *)a1 + v21;
  v23 = (char *)a2 + v21;
  v24 = *(_QWORD *)v23;
  v25 = v23[8];
  sub_64DD8(*(_QWORD *)v23, v25);
  *(_QWORD *)v22 = v24;
  v22[8] = v25;
  return a1;
}

_QWORD *sub_9C3E4(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(char *, uint64_t, uint64_t);
  int v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  char v30;

  *a1 = *a2;
  v6 = a2[1];
  v7 = a1[1];
  a1[1] = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  v8 = a3[5];
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = type metadata accessor for FontSpec(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48);
  v14 = v13(v9, 1, v11);
  v15 = v13(v10, 1, v11);
  if (v14)
  {
    if (!v15)
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
      if (a1 == a2)
        goto LABEL_12;
      goto LABEL_8;
    }
LABEL_7:
    v16 = sub_5C154(&qword_3212D0);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    if (a1 == a2)
      goto LABEL_12;
    goto LABEL_8;
  }
  if (v15)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v9, v11);
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 24))(v9, v10, v11);
  if (a1 == a2)
    goto LABEL_12;
LABEL_8:
  v17 = a3[6];
  v18 = (_QWORD *)((char *)a1 + v17);
  v19 = (_QWORD *)((char *)a2 + v17);
  sub_5E09C((uint64_t)a1 + v17, &qword_320308);
  v20 = sub_5C154(&qword_320308);
  if (swift_getEnumCaseMultiPayload(v19, v20) == 1)
  {
    v21 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v18, v19, v21);
    v22 = 1;
  }
  else
  {
    v23 = *v19;
    *v18 = *v19;
    swift_retain(v23);
    v22 = 0;
  }
  swift_storeEnumTagMultiPayload(v18, v20, v22);
LABEL_12:
  v24 = a3[7];
  v25 = (char *)a1 + v24;
  v26 = (char *)a2 + v24;
  v27 = *(_QWORD *)v26;
  v28 = v26[8];
  sub_64DD8(*(_QWORD *)v26, v28);
  v29 = *(_QWORD *)v25;
  v30 = v25[8];
  *(_QWORD *)v25 = v27;
  v25[8] = v28;
  sub_64FFC(v29, v30);
  return a1;
}

_OWORD *sub_9C5E4(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for FontSpec(0);
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    v11 = sub_5C154(&qword_3212D0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v12 = a3[6];
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = sub_5C154(&qword_320308);
  if (swift_getEnumCaseMultiPayload(v14, v15) == 1)
  {
    v16 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v13, v14, v16);
    swift_storeEnumTagMultiPayload(v13, v15, 1);
  }
  else
  {
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  v17 = a3[7];
  v18 = (char *)a1 + v17;
  v19 = (char *)a2 + v17;
  *(_QWORD *)v18 = *(_QWORD *)v19;
  v18[8] = v19[8];
  return a1;
}

_QWORD *sub_9C744(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(char *, uint64_t, uint64_t);
  int v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char v27;

  v6 = a2[1];
  v7 = a1[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease(v7);
  v8 = a3[5];
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = type metadata accessor for FontSpec(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48);
  v14 = v13(v9, 1, v11);
  v15 = v13(v10, 1, v11);
  if (v14)
  {
    if (!v15)
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
      if (a1 == a2)
        goto LABEL_11;
      goto LABEL_8;
    }
LABEL_7:
    v16 = sub_5C154(&qword_3212D0);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    if (a1 == a2)
      goto LABEL_11;
    goto LABEL_8;
  }
  if (v15)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v9, v11);
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 40))(v9, v10, v11);
  if (a1 == a2)
    goto LABEL_11;
LABEL_8:
  v17 = a3[6];
  v18 = (char *)a1 + v17;
  v19 = (char *)a2 + v17;
  sub_5E09C((uint64_t)a1 + v17, &qword_320308);
  v20 = sub_5C154(&qword_320308);
  if (swift_getEnumCaseMultiPayload(v19, v20) == 1)
  {
    v21 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v18, v19, v21);
    swift_storeEnumTagMultiPayload(v18, v20, 1);
  }
  else
  {
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
  }
LABEL_11:
  v22 = a3[7];
  v23 = (char *)a1 + v22;
  v24 = (char *)a2 + v22;
  v25 = *(_QWORD *)v24;
  LOBYTE(v24) = v24[8];
  v26 = *(_QWORD *)v23;
  v27 = v23[8];
  *(_QWORD *)v23 = v25;
  v23[8] = (char)v24;
  sub_64FFC(v26, v27);
  return a1;
}

uint64_t sub_9C92C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_9C938);
}

uint64_t sub_9C938(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_5C154(&qword_3212D0);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 20);
    }
    else
    {
      v10 = sub_5C154(&qword_3215C8);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 24);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t sub_9C9E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_9C9EC);
}

uint64_t sub_9C9EC(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v8 = sub_5C154(&qword_3212D0);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 20);
    }
    else
    {
      v10 = sub_5C154(&qword_3215C8);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 24);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

void sub_9CA90(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[4];

  v6[0] = &unk_25A2D8;
  sub_8C25C(319, (unint64_t *)&unk_321350, (uint64_t (*)(uint64_t))&type metadata accessor for FontSpec, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
  if (v3 <= 0x3F)
  {
    v6[1] = *(_QWORD *)(v2 - 8) + 64;
    sub_8C25C(319, (unint64_t *)&unk_321638, (uint64_t (*)(uint64_t))&type metadata accessor for DynamicTypeSize, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
    if (v5 <= 0x3F)
    {
      v6[2] = *(_QWORD *)(v4 - 8) + 64;
      v6[3] = "\t";
      swift_initStructMetadata(a1, 256, 4, v6, a1 + 16);
    }
  }
}

ValueMetadata *type metadata accessor for AlignmentSpec()
{
  return &type metadata for AlignmentSpec;
}

uint64_t sub_9CB6C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  swift_bridgeObjectRetain(v3);
  return a1;
}

uint64_t assignWithCopy for TextComponentModel.SymbolImageSpec(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  return a1;
}

uint64_t assignWithTake for TextComponentModel.SymbolImageSpec(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease(v5);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for TextComponentModel.SymbolImageSpec(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 17))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TextComponentModel.SymbolImageSpec(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 17) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for TextComponentModel.SymbolImageSpec()
{
  return &type metadata for TextComponentModel.SymbolImageSpec;
}

unint64_t sub_9CCCC()
{
  unint64_t result;

  result = qword_321670;
  if (!qword_321670)
  {
    result = swift_getWitnessTable(&unk_25A5C0, &type metadata for TextComponentModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_321670);
  }
  return result;
}

unint64_t sub_9CD14()
{
  unint64_t result;

  result = qword_321678;
  if (!qword_321678)
  {
    result = swift_getWitnessTable(&unk_25A530, &type metadata for TextComponentModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_321678);
  }
  return result;
}

unint64_t sub_9CD5C()
{
  unint64_t result;

  result = qword_321680;
  if (!qword_321680)
  {
    result = swift_getWitnessTable(&unk_25A558, &type metadata for TextComponentModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_321680);
  }
  return result;
}

_QWORD *sub_9CDA0@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  _QWORD *result;
  uint64_t v5;

  result = sub_9D7B0(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
  }
  return result;
}

uint64_t sub_9CDC8(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_2B5D1C, 1);
}

uint64_t sub_9CDD8(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  char v7;

  if (a1 == 1701667182 && a2 == 0xE400000000000000)
  {
    v5 = 0xE400000000000000;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(1701667182, 0xE400000000000000, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 0x6D65747379537369 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease(0xE800000000000000);
    return 1;
  }
  else
  {
    v7 = _stringCompareWithSmolCheck(_:_:expecting:)(0x6D65747379537369, 0xE800000000000000, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_9CEB8(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;

  v3 = sub_5C154(&qword_321688);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = a1[3];
  v8 = a1[4];
  sub_66898(a1, v7);
  v9 = sub_9DC54();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for TextComponentModel.SymbolImageSpec.CodingKeys, &type metadata for TextComponentModel.SymbolImageSpec.CodingKeys, v9, v7, v8);
  if (v1)
  {
    _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(a1);
  }
  else
  {
    v15 = 0;
    v8 = KeyedDecodingContainer.decode(_:forKey:)(&v15, v3);
    v12 = v11;
    v14 = 1;
    swift_bridgeObjectRetain(v11);
    KeyedDecodingContainer.decode(_:forKey:)(&v14, v3);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(a1);
    swift_bridgeObjectRelease(v12);
  }
  return v8;
}

uint64_t sub_9D048(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;

  if (a1 == 25705 && a2 == 0xE200000000000000)
  {
    v5 = 0xE200000000000000;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(25705, 0xE200000000000000, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 0x6575676573 && a2 == 0xE500000000000000)
  {
    v7 = 0xE500000000000000;
LABEL_14:
    swift_bridgeObjectRelease(v7);
    return 1;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6575676573, 0xE500000000000000, a1, a2, 0) & 1) != 0)
  {
    v7 = a2;
    goto LABEL_14;
  }
  if (a1 == 0xD000000000000011)
  {
    v8 = 0x800000000026D790;
    if (a2 == 0x800000000026D790)
      goto LABEL_19;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000011, 0x800000000026D790, a1, a2, 0) & 1) != 0)
  {
    v8 = a2;
LABEL_19:
    swift_bridgeObjectRelease(v8);
    return 2;
  }
  if (a1 == 1954047348 && a2 == 0xE400000000000000)
  {
    v9 = 0xE400000000000000;
LABEL_25:
    swift_bridgeObjectRelease(v9);
    return 3;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(1954047348, 0xE400000000000000, a1, a2, 0) & 1) != 0)
  {
    v9 = a2;
    goto LABEL_25;
  }
  if (a1 == 0x6666755374786574 && a2 == 0xEA00000000007869)
  {
    v10 = 0xEA00000000007869;
LABEL_31:
    swift_bridgeObjectRelease(v10);
    return 4;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6666755374786574, 0xEA00000000007869, a1, a2, 0) & 1) != 0)
  {
    v10 = a2;
    goto LABEL_31;
  }
  if (a1 == 0x4C4D54487369 && a2 == 0xE600000000000000)
  {
    v11 = 0xE600000000000000;
LABEL_37:
    swift_bridgeObjectRelease(v11);
    return 5;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x4C4D54487369, 0xE600000000000000, a1, a2, 0) & 1) != 0)
  {
    v11 = a2;
    goto LABEL_37;
  }
  if (a1 == 0x53676E696461656CLL && a2 == 0xED00006C6F626D79)
  {
    v12 = 0xED00006C6F626D79;
LABEL_43:
    swift_bridgeObjectRelease(v12);
    return 6;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x53676E696461656CLL, 0xED00006C6F626D79, a1, a2, 0) & 1) != 0)
  {
    v12 = a2;
    goto LABEL_43;
  }
  if (a1 == 0x676E696C69617274 && a2 == 0xEE006C6F626D7953)
  {
    v13 = 0xEE006C6F626D7953;
LABEL_49:
    swift_bridgeObjectRelease(v13);
    return 7;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x676E696C69617274, 0xEE006C6F626D7953, a1, a2, 0) & 1) != 0)
  {
    v13 = a2;
    goto LABEL_49;
  }
  if (a1 == 0xD000000000000010)
  {
    v14 = 0x800000000026FF00;
    if (a2 == 0x800000000026FF00)
      goto LABEL_54;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000010, 0x800000000026FF00, a1, a2, 0) & 1) != 0)
  {
    v14 = a2;
LABEL_54:
    swift_bridgeObjectRelease(v14);
    return 8;
  }
  if (a1 == 0x6E656D6E67696C61 && a2 == 0xE900000000000074)
  {
    v15 = 0xE900000000000074;
LABEL_60:
    swift_bridgeObjectRelease(v15);
    return 9;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6E656D6E67696C61, 0xE900000000000074, a1, a2, 0) & 1) != 0)
  {
    v15 = a2;
    goto LABEL_60;
  }
  if (a1 == 0x6F6C6F4374786574 && a2 == 0xE900000000000072)
  {
    v16 = 0xE900000000000072;
LABEL_66:
    swift_bridgeObjectRelease(v16);
    return 10;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6F6C6F4374786574, 0xE900000000000072, a1, a2, 0) & 1) != 0)
  {
    v16 = a2;
    goto LABEL_66;
  }
  if (a1 == 0x63657053746E6F66 && a2 == 0xE800000000000000)
  {
    v17 = 0xE800000000000000;
LABEL_72:
    swift_bridgeObjectRelease(v17);
    return 11;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x63657053746E6F66, 0xE800000000000000, a1, a2, 0) & 1) != 0)
  {
    v17 = a2;
    goto LABEL_72;
  }
  if (a1 == 0x6964646150706F74 && a2 == 0xEA0000000000676ELL)
  {
    v18 = 0xEA0000000000676ELL;
LABEL_78:
    swift_bridgeObjectRelease(v18);
    return 12;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6964646150706F74, 0xEA0000000000676ELL, a1, a2, 0) & 1) != 0)
  {
    v18 = a2;
    goto LABEL_78;
  }
  if (a1 == 0x61506D6F74746F62 && a2 == 0xED0000676E696464)
  {
    v19 = 0xED0000676E696464;
LABEL_84:
    swift_bridgeObjectRelease(v19);
    return 13;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x61506D6F74746F62, 0xED0000676E696464, a1, a2, 0) & 1) != 0)
  {
    v19 = a2;
    goto LABEL_84;
  }
  if (a1 == 0x696D694C656E696CLL && a2 == 0xE900000000000074)
  {
    v20 = 0xE900000000000074;
LABEL_90:
    swift_bridgeObjectRelease(v20);
    return 14;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x696D694C656E696CLL, 0xE900000000000074, a1, a2, 0) & 1) != 0)
  {
    v20 = a2;
    goto LABEL_90;
  }
  if (a1 == 7107189 && a2 == 0xE300000000000000)
  {
    v21 = 0xE300000000000000;
LABEL_96:
    swift_bridgeObjectRelease(v21);
    return 15;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(7107189, 0xE300000000000000, a1, a2, 0) & 1) != 0)
  {
    v21 = a2;
    goto LABEL_96;
  }
  if (a1 == 0x7374696172547861 && a2 == 0xE800000000000000)
  {
    v22 = 0xE800000000000000;
LABEL_102:
    swift_bridgeObjectRelease(v22);
    return 16;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x7374696172547861, 0xE800000000000000, a1, a2, 0) & 1) != 0)
  {
    v22 = a2;
    goto LABEL_102;
  }
  if (a1 == 0x6F666E49746E6974 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease(0xE800000000000000);
    return 17;
  }
  else
  {
    v23 = _stringCompareWithSmolCheck(_:_:expecting:)(0x6F666E49746E6974, 0xE800000000000000, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v23 & 1) != 0)
      return 17;
    else
      return 18;
  }
}

_QWORD *sub_9D7B0(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  unint64_t v12;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  _QWORD v33[3];
  uint64_t v34;
  uint64_t v35;

  v3 = a1[3];
  v4 = a1[4];
  v5 = sub_66898(a1, v3);
  dispatch thunk of Decoder.singleValueContainer()(v33, v3, v4);
  if (!v1)
  {
    v6 = v34;
    v7 = v35;
    sub_66898(v33, v34);
    v8 = dispatch thunk of SingleValueDecodingContainer.decode(_:)(v6, v7);
    v11 = v8;
    v12 = v9;
    if (v8 == 0x676E696C69617274 && v9 == 0xE800000000000000)
    {
      v14 = 0xE800000000000000;
      goto LABEL_12;
    }
    if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x676E696C69617274, 0xE800000000000000, v8, v9, 0) & 1) != 0)
    {
      v14 = v12;
LABEL_12:
      v15 = swift_bridgeObjectRelease(v14);
      v16 = static Alignment.trailing.getter(v15);
LABEL_20:
      v5 = (_QWORD *)v16;
      _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(v33);
      _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(a1);
      return v5;
    }
    if (v11 == 0x676E696461656CLL && v12 == 0xE700000000000000)
    {
      v17 = 0xE700000000000000;
    }
    else
    {
      if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x676E696461656CLL, 0xE700000000000000, v11, v12, 0) & 1) == 0)
      {
        if (v11 == 0x7265746E6563 && v12 == 0xE600000000000000)
        {
          v19 = 0xE600000000000000;
        }
        else
        {
          if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x7265746E6563, 0xE600000000000000, v11, v12, 0) & 1) == 0)
          {
            if (v11 == 7368564 && v12 == 0xE300000000000000)
            {
              v21 = 0xE300000000000000;
            }
            else
            {
              if ((_stringCompareWithSmolCheck(_:_:expecting:)(7368564, 0xE300000000000000, v11, v12, 0) & 1) == 0)
              {
                if (v11 == 0x6D6F74746F62 && v12 == 0xE600000000000000)
                {
                  v23 = 0xE600000000000000;
                }
                else
                {
                  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6D6F74746F62, 0xE600000000000000, v11, v12, 0) & 1) == 0)
                  {
                    if (v11 == 0x696461654C706F74 && v12 == 0xEA0000000000676ELL)
                    {
                      v25 = 0xEA0000000000676ELL;
                    }
                    else
                    {
                      if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x696461654C706F74, 0xEA0000000000676ELL, v11, v12, 0) & 1) == 0)
                      {
                        if (v11 == 0x6C69617254706F74 && v12 == 0xEB00000000676E69)
                        {
                          v27 = 0xEB00000000676E69;
                        }
                        else
                        {
                          if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6C69617254706F74, 0xEB00000000676E69, v11, v12, 0) & 1) == 0)
                          {
                            if (v11 == 0x654C6D6F74746F62 && v12 == 0xED0000676E696461)
                            {
                              v29 = 0xED0000676E696461;
                            }
                            else
                            {
                              if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x654C6D6F74746F62, 0xED0000676E696461, v11, v12, 0) & 1) == 0)
                              {
                                if (v11 == 0x72546D6F74746F62 && v12 == 0xEE00676E696C6961)
                                {
                                  v31 = swift_bridgeObjectRelease(0xEE00676E696C6961);
                                  v16 = static Alignment.bottomTrailing.getter(v31);
                                  goto LABEL_20;
                                }
                                v32 = _stringCompareWithSmolCheck(_:_:expecting:)(0x72546D6F74746F62, 0xEE00676E696C6961, v11, v12, 0);
                                v18 = swift_bridgeObjectRelease(v12);
                                if ((v32 & 1) != 0)
                                {
                                  v16 = static Alignment.bottomTrailing.getter(v18);
                                  goto LABEL_20;
                                }
                                goto LABEL_19;
                              }
                              v29 = v12;
                            }
                            v30 = swift_bridgeObjectRelease(v29);
                            v16 = static Alignment.bottomLeading.getter(v30);
                            goto LABEL_20;
                          }
                          v27 = v12;
                        }
                        v28 = swift_bridgeObjectRelease(v27);
                        v16 = static Alignment.topTrailing.getter(v28);
                        goto LABEL_20;
                      }
                      v25 = v12;
                    }
                    v26 = swift_bridgeObjectRelease(v25);
                    v16 = static Alignment.topLeading.getter(v26);
                    goto LABEL_20;
                  }
                  v23 = v12;
                }
                v24 = swift_bridgeObjectRelease(v23);
                v16 = static Alignment.bottom.getter(v24);
                goto LABEL_20;
              }
              v21 = v12;
            }
            v22 = swift_bridgeObjectRelease(v21);
            v16 = static Alignment.top.getter(v22);
            goto LABEL_20;
          }
          v19 = v12;
        }
        v20 = swift_bridgeObjectRelease(v19);
        v16 = static Alignment.center.getter(v20);
        goto LABEL_20;
      }
      v17 = v12;
    }
    v18 = swift_bridgeObjectRelease(v17);
LABEL_19:
    v16 = static Alignment.leading.getter(v18);
    goto LABEL_20;
  }
  _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(a1);
  return v5;
}

unint64_t sub_9DC54()
{
  unint64_t result;

  result = qword_321690;
  if (!qword_321690)
  {
    result = swift_getWitnessTable(&unk_25A7B8, &type metadata for TextComponentModel.SymbolImageSpec.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_321690);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for TextComponentModel.SymbolImageSpec.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_9DCE4 + 4 * byte_25A281[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_9DD18 + 4 * byte_25A27C[v4]))();
}

uint64_t sub_9DD18(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_9DD20(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x9DD28);
  return result;
}

uint64_t sub_9DD34(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x9DD3CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_9DD40(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_9DD48(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TextComponentModel.SymbolImageSpec.CodingKeys()
{
  return &type metadata for TextComponentModel.SymbolImageSpec.CodingKeys;
}

void *sub_9DD64()
{
  return &protocol witness table for Text;
}

unint64_t sub_9DD74()
{
  unint64_t result;

  result = qword_321698;
  if (!qword_321698)
  {
    result = swift_getWitnessTable(&unk_25A790, &type metadata for TextComponentModel.SymbolImageSpec.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_321698);
  }
  return result;
}

unint64_t sub_9DDBC()
{
  unint64_t result;

  result = qword_3216A0;
  if (!qword_3216A0)
  {
    result = swift_getWitnessTable(&unk_25A700, &type metadata for TextComponentModel.SymbolImageSpec.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_3216A0);
  }
  return result;
}

unint64_t sub_9DE04()
{
  unint64_t result;

  result = qword_3216A8;
  if (!qword_3216A8)
  {
    result = swift_getWitnessTable(&unk_25A728, &type metadata for TextComponentModel.SymbolImageSpec.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_3216A8);
  }
  return result;
}

uint64_t sub_9DE48@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;

  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    v4 = 0;
    v5 = (uint64_t *)(a1 + 32);
    do
    {
      v7 = *v5++;
      v6 = v7;
      if ((v7 & ~v4) == 0)
        v6 = 0;
      v4 |= v6;
      --v3;
    }
    while (v3);
  }
  else
  {
    v4 = 0;
  }
  result = swift_bridgeObjectRelease(a1);
  *a2 = v4;
  return result;
}

uint64_t ContentInfoBuildOptions.rawValue.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

void static ContentInfoBuildOptions.collectionMemberships.getter(_QWORD *a1@<X8>)
{
  *a1 = 1;
}

void static ContentInfoBuildOptions.seriesInfo.getter(_QWORD *a1@<X8>)
{
  *a1 = 2;
}

void static ContentInfoBuildOptions.seriesAssets.getter(_QWORD *a1@<X8>)
{
  *a1 = 4;
}

void static ContentInfoBuildOptions.supplementalContents.getter(_QWORD *a1@<X8>)
{
  *a1 = 8;
}

unint64_t sub_9DED8()
{
  unint64_t result;

  result = qword_3216B0;
  if (!qword_3216B0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for ContentInfoBuildOptions, &type metadata for ContentInfoBuildOptions);
    atomic_store(result, (unint64_t *)&qword_3216B0);
  }
  return result;
}

unint64_t sub_9DF20()
{
  unint64_t result;

  result = qword_3216B8;
  if (!qword_3216B8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for ContentInfoBuildOptions, &type metadata for ContentInfoBuildOptions);
    atomic_store(result, (unint64_t *)&qword_3216B8);
  }
  return result;
}

_QWORD *sub_9DF64@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

unint64_t sub_9DF74()
{
  unint64_t result;

  result = qword_3216C0;
  if (!qword_3216C0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for ContentInfoBuildOptions, &type metadata for ContentInfoBuildOptions);
    atomic_store(result, (unint64_t *)&qword_3216C0);
  }
  return result;
}

unint64_t sub_9DFBC()
{
  unint64_t result;

  result = qword_3216C8;
  if (!qword_3216C8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for ContentInfoBuildOptions, &type metadata for ContentInfoBuildOptions);
    atomic_store(result, (unint64_t *)&qword_3216C8);
  }
  return result;
}

void sub_9E000(_QWORD *a1@<X8>)
{
  *a1 = 0;
}

_QWORD *sub_9E008@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 | *result;
  return result;
}

_QWORD *sub_9E01C@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 & *result;
  return result;
}

_QWORD *sub_9E030@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 ^ *result;
  return result;
}

BOOL sub_9E044(_QWORD *a1, uint64_t *a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *a2;
  v4 = *v2 & *a2;
  if (v4 != *a2)
    *v2 |= v3;
  *a1 = v3;
  return v4 != v3;
}

_QWORD *sub_9E074@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  uint64_t v3;

  v3 = *v2 & *result;
  if (v3)
    *v2 &= ~*result;
  *(_QWORD *)a2 = v3;
  *(_BYTE *)(a2 + 8) = v3 == 0;
  return result;
}

uint64_t *sub_9E0A0@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *result;
  v4 = *v2;
  *v2 |= *result;
  v5 = v4 & v3;
  *(_QWORD *)a2 = v5;
  *(_BYTE *)(a2 + 8) = v5 == 0;
  return result;
}

_QWORD *sub_9E0C4(_QWORD *result)
{
  _QWORD *v1;

  *v1 |= *result;
  return result;
}

_QWORD *sub_9E0D8(_QWORD *result)
{
  _QWORD *v1;

  *v1 &= *result;
  return result;
}

_QWORD *sub_9E0EC(_QWORD *result)
{
  _QWORD *v1;

  *v1 ^= *result;
  return result;
}

_QWORD *sub_9E100@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 & ~*result;
  return result;
}

BOOL sub_9E114(_QWORD *a1)
{
  _QWORD *v1;

  return (*v1 & ~*a1) == 0;
}

BOOL sub_9E128(_QWORD *a1)
{
  _QWORD *v1;

  return (*v1 & *a1) == 0;
}

BOOL sub_9E13C(_QWORD *a1)
{
  _QWORD *v1;

  return (*a1 & ~*v1) == 0;
}

BOOL sub_9E150()
{
  _QWORD *v0;

  return *v0 == 0;
}

uint64_t sub_9E160(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return SetAlgebra.init<A>(_:)(a1, a4, a2, a5, a3);
}

_QWORD *sub_9E178(_QWORD *result)
{
  _QWORD *v1;

  *v1 &= ~*result;
  return result;
}

uint64_t dispatch thunk of LibraryDataProviding.series(from:options:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  int *v13;
  _QWORD *v14;
  uint64_t (*v16)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v13 = *(int **)(a6 + 8);
  v16 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)v13 + *v13);
  v14 = (_QWORD *)swift_task_alloc(v13[1]);
  *(_QWORD *)(v6 + 16) = v14;
  *v14 = v6;
  v14[1] = sub_7BFF8;
  return v16(a1, a2, a3, a4, a5, a6);
}

uint64_t dispatch thunk of LibraryDataProviding.seriesSync(from:options:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 16))();
}

uint64_t dispatch thunk of LibraryDataProviding.asset(from:options:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  int *v13;
  _QWORD *v14;
  uint64_t (*v16)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v13 = *(int **)(a6 + 24);
  v16 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)v13 + *v13);
  v14 = (_QWORD *)swift_task_alloc(v13[1]);
  *(_QWORD *)(v6 + 16) = v14;
  *v14 = v6;
  v14[1] = sub_64780;
  return v16(a1, a2, a3, a4, a5, a6);
}

uint64_t dispatch thunk of LibraryDataProviding.assets(from:options:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  int *v9;
  _QWORD *v10;
  uint64_t (*v12)(uint64_t, uint64_t, uint64_t, uint64_t);

  v9 = *(int **)(a4 + 32);
  v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)v9 + *v9);
  v10 = (_QWORD *)swift_task_alloc(v9[1]);
  *(_QWORD *)(v4 + 16) = v10;
  *v10 = v4;
  v10[1] = sub_9431C;
  return v12(a1, a2, a3, a4);
}

ValueMetadata *type metadata accessor for ContentInfoBuildOptions()
{
  return &type metadata for ContentInfoBuildOptions;
}

uint64_t destroy for SummaryFrameFactory(_QWORD *a1)
{
  swift_bridgeObjectRelease(a1[1]);
  swift_bridgeObjectRelease(a1[2]);
  swift_bridgeObjectRelease(a1[3]);
  return swift_release(a1[11]);
}

uint64_t initializeWithCopy for SummaryFrameFactory(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  v6 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v6;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  v7 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v7;
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRetain(v5);
  swift_retain(v7);
  return a1;
}

uint64_t assignWithCopy for SummaryFrameFactory(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  v8 = *(_QWORD *)(a2 + 24);
  v9 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease(v9);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  v10 = *(_QWORD *)(a2 + 88);
  v11 = *(_QWORD *)(a1 + 88);
  *(_QWORD *)(a1 + 88) = v10;
  swift_retain(v10);
  swift_release(v11);
  return a1;
}

uint64_t assignWithTake for SummaryFrameFactory(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  v4 = *(_QWORD *)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease(v4);
  v5 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRelease(v5);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  v6 = *(_QWORD *)(a1 + 88);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  swift_release(v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for SummaryFrameFactory(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 96))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SummaryFrameFactory(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 96) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 96) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for SummaryFrameFactory()
{
  return &type metadata for SummaryFrameFactory;
}

uint64_t sub_9E614()
{
  double *v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __n128 v28;
  uint64_t v29;
  uint64_t v30;
  __n128 v31;
  uint64_t v32;
  _BYTE *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _BYTE *v37;
  uint64_t v38;
  uint64_t v39;
  int v40;
  double v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t (*v45)(_BYTE *, unint64_t, uint64_t);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t result;
  BOOL v51;
  double v52;
  double v53;
  uint64_t v54;
  uint64_t v55;
  double v56;
  double v57;
  double v58;
  double v59;
  _BYTE *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _BYTE *v65;
  uint64_t v66;
  _BYTE *v67;
  uint64_t v68;
  _QWORD *v69;
  _BYTE *v70;
  id v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  _BYTE *v75;
  uint64_t v76;
  _BYTE *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  double *v81;
  uint64_t *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  _BYTE *v88;
  uint64_t v89;
  _BYTE *v90;
  _BYTE *v91;
  uint64_t v92;
  uint64_t v93;
  _BYTE *v94;
  uint64_t v95;
  _BYTE *v96;
  _BYTE *v97;
  _BYTE *v98;
  uint64_t v99;
  _BYTE *v100;
  uint64_t v101;
  uint64_t v102;
  _BYTE v103[4];
  int v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  double v109;
  uint64_t v110;
  _BYTE *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  _BYTE *v115;
  _BYTE *v116;
  _BYTE *v117;
  _BYTE *v118;
  _BYTE *v119;
  _BYTE *v120;
  _BYTE *v121;
  _BYTE *v122;
  uint64_t v123;
  _BYTE *v124;
  _BYTE *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  _BYTE *v130;
  uint64_t v131;
  _BYTE *v132;
  uint64_t v133;
  uint64_t v134;
  void (*v135)(_BYTE *, _BYTE *, uint64_t);
  _QWORD v136[5];

  v1 = type metadata accessor for SummaryFrameViewModel(0);
  __chkstk_darwin(v1);
  v3 = &v103[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = sub_5C154(&qword_320EE8);
  __chkstk_darwin(v4);
  v117 = &v103[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = sub_5C154(&qword_320EF0);
  v7 = __chkstk_darwin(v6);
  v116 = &v103[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v131 = type metadata accessor for YIRSourceData(0, v7);
  v123 = *(_QWORD *)(v131 - 8);
  __chkstk_darwin(v131);
  v119 = &v103[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v10);
  v130 = &v103[-v11];
  v129 = sub_5C154(&qword_320F00);
  __chkstk_darwin(v129);
  v121 = &v103[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v14 = __chkstk_darwin(v13);
  v122 = &v103[-v15];
  v16 = type metadata accessor for PageBackground(0, v14);
  v114 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v115 = &v103[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v18 = type metadata accessor for YearInReviewSharableImage(0);
  v127 = *(_QWORD *)(v18 - 8);
  v128 = v18;
  __chkstk_darwin(v18);
  v118 = &v103[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v21 = __chkstk_darwin(v20);
  v120 = &v103[-v22];
  v133 = type metadata accessor for SharableAssetViewModel(0, v21);
  v126 = *(_QWORD *)(v133 - 8);
  __chkstk_darwin(v133);
  v125 = &v103[-((v23 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v24);
  v132 = &v103[-v25];
  v26 = type metadata accessor for Locale(0);
  v27 = *(_QWORD *)(v26 - 8);
  v28 = __chkstk_darwin(v26);
  v111 = &v103[-((v29 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v30 = type metadata accessor for ReadingHistory.Day(0, v28);
  v134 = *(_QWORD *)(v30 - 8);
  v135 = (void (*)(_BYTE *, _BYTE *, uint64_t))v30;
  v31 = __chkstk_darwin(v30);
  v33 = &v103[-((v32 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v34 = type metadata accessor for ReadingHistory.DayEntry(0, v31);
  v35 = *(_QWORD *)(v34 - 8);
  __chkstk_darwin(v34);
  v37 = &v103[-((v36 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v109 = *v0;
  v38 = *((_QWORD *)v0 + 1);
  v39 = *((_QWORD *)v0 + 3);
  v40 = *((unsigned __int8 *)v0 + 32);
  v41 = v0[10];
  v112 = *((_QWORD *)v0 + 11);
  v110 = v38;
  v113 = *(_QWORD *)(v38 + 16);
  v42 = *(_QWORD *)(v39 + 16);
  v124 = v3;
  if (v42)
  {
    v104 = v40;
    v106 = v27;
    v107 = v26;
    v108 = v16;
    v43 = v39 + ((*(unsigned __int8 *)(v35 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80));
    v44 = *(_QWORD *)(v35 + 72);
    v45 = *(uint64_t (**)(_BYTE *, unint64_t, uint64_t))(v35 + 16);
    v105 = v39;
    swift_bridgeObjectRetain(v39);
    v46 = 0;
    do
    {
      v47 = v45(v37, v43, v34);
      v48 = ReadingHistory.DayEntry.day.getter(v47);
      v49 = ReadingHistory.Day.readingTime.getter(v48);
      result = (*(uint64_t (**)(_BYTE *, void (*)(_BYTE *, _BYTE *, uint64_t)))(v134 + 8))(v33, v135);
      v51 = __OFADD__(v46, v49);
      v46 += v49;
      if (v51)
      {
        __break(1u);
        return result;
      }
      (*(void (**)(_BYTE *, uint64_t))(v35 + 8))(v37, v34);
      v43 += v44;
      --v42;
    }
    while (v42);
    v39 = swift_bridgeObjectRelease(v105);
    v52 = (double)v46;
    if (v41 > (double)v46)
    {
      v53 = 0.0;
      v54 = 1;
      v16 = v108;
      v26 = v107;
      v27 = v106;
      goto LABEL_14;
    }
    v16 = v108;
    v26 = v107;
    v27 = v106;
    v40 = v104;
    goto LABEL_10;
  }
  v52 = 0.0;
  if (v41 <= 0.0)
  {
LABEL_10:
    if (v40)
      v53 = v52;
    else
      v53 = 0.0;
    v54 = v40 ^ 1u;
    goto LABEL_14;
  }
  v53 = 0.0;
  v54 = 1;
LABEL_14:
  v55 = static YearInReviewSharableImage.size.getter(v39);
  v57 = v56;
  v59 = v58;
  v60 = v111;
  static Locale.autoupdatingCurrent.getter(v55);
  v61 = sub_1861F0(*(_QWORD *)&v109, v60);
  v63 = v62;
  (*(void (**)(_BYTE *, uint64_t))(v27 + 8))(v60, v26);
  v64 = v110;
  swift_bridgeObjectRetain(v110);
  swift_bridgeObjectRetain(v63);
  v65 = v132;
  v66 = v113;
  SharableAssetViewModel.init(assets:timeRead:booksFinished:localizedYear:size:)(v64, *(_QWORD *)&v53, v54, v113, v61, v63, v57, v59);
  v67 = v125;
  v135 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v126 + 16);
  v135(v125, v65, v133);
  v136[3] = type metadata accessor for ShareableAsset(0);
  v136[4] = sub_648E0(&qword_3216E8, (uint64_t (*)(uint64_t))&type metadata accessor for ShareableAsset, (uint64_t)&protocol conformance descriptor for ShareableAsset);
  sub_668BC(v136);
  ShareableAsset.init(model:)(v67);
  v68 = sub_5C154(&qword_3216F0);
  v69 = v115;
  v70 = &v115[*(int *)(v68 + 48)];
  v71 = objc_msgSend((id)objc_opt_self(UIColor), "secondarySystemBackgroundColor");
  *v69 = Color.init(_:)(v71);
  v72 = enum case for ColorScheme.dark(_:);
  v73 = type metadata accessor for ColorScheme(0);
  v74 = *(_QWORD *)(v73 - 8);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v74 + 104))(v70, v72, v73);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v74 + 56))(v70, 0, 1, v73);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v114 + 104))(v69, enum case for PageBackground.singleColor(_:), v16);
  v75 = v120;
  YearInReviewSharableImage.init(content:background:localizedYear:)(v136, v69, v61, v63);
  v134 = *(_QWORD *)(v127 + 16);
  v76 = (uint64_t)v122;
  v77 = v75;
  v78 = ((uint64_t (*)(_BYTE *, _BYTE *, uint64_t))v134)(v122, v75, v128);
  v79 = static YearInReviewSharableImage.timeout.getter(v78);
  v80 = v129;
  v81 = (double *)(v76 + *(int *)(v129 + 36));
  *v81 = v57;
  v81[1] = v59;
  v82 = (uint64_t *)(v76 + *(int *)(v80 + 40));
  *v82 = v79;
  v82[1] = v83;
  v84 = v112;
  *(_QWORD *)(v76 + *(int *)(v80 + 44)) = v112;
  v85 = enum case for FrameName.yearSummary(_:);
  v86 = type metadata accessor for FrameName(0);
  v87 = *(_QWORD *)(v86 - 8);
  v88 = v116;
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v87 + 104))(v116, v85, v86);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v87 + 56))(v88, 0, 1, v86);
  v89 = type metadata accessor for ReaderType(0);
  v90 = v117;
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v89 - 8) + 56))(v117, 1, 1, v89);
  swift_retain(v84);
  v91 = v130;
  YIRSourceData.init(frameName:readerType:totalReadTime:longestPageCount:longestAudiobook:finishedSeries:mostContentGenre:mostContentAuthor:totalRatedContent:finishedBooks:longestStreak:readingGoalsReachedDays:avgReadingTime:)(v88, v90, *(_QWORD *)&v52, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, v66, 0, 0,
    1,
    0,
    1,
    0,
    1);
  v92 = sub_5C154(&qword_31F108);
  v93 = swift_allocObject(v92, 72, 7);
  *(_OWORD *)(v93 + 16) = xmmword_258070;
  v94 = v125;
  v135(v125, v132, v133);
  v95 = v123;
  v96 = v119;
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v123 + 16))(v119, v91, v131);
  v97 = v124;
  SummaryFrameViewModel.init(sharableAssetViewModel:exposureData:)(v94, v96);
  v98 = v118;
  v99 = v128;
  ((void (*)(_BYTE *, _BYTE *, uint64_t))v134)(v118, v77, v128);
  v100 = v121;
  sub_9EFA4(v76, (uint64_t)v121);
  *(_QWORD *)(v93 + 56) = sub_5C154(&qword_3216F8);
  *(_QWORD *)(v93 + 64) = sub_67060(&qword_321700, &qword_3216F8, (uint64_t)&protocol conformance descriptor for SummaryFrame<A, B>);
  sub_668BC((_QWORD *)(v93 + 32));
  v101 = sub_648E0(&qword_321708, (uint64_t (*)(uint64_t))&type metadata accessor for YearInReviewSharableImage, (uint64_t)&protocol conformance descriptor for YearInReviewSharableImage);
  v102 = sub_67060(&qword_3210A8, &qword_320F00, (uint64_t)&protocol conformance descriptor for SnapshotImageItem<A>);
  SummaryFrame.init(model:shareableImage:sharableItem:)(v97, v98, v100, v99, v129, v101, v102);
  (*(void (**)(_BYTE *, uint64_t))(v95 + 8))(v130, v131);
  sub_9EFEC(v76);
  (*(void (**)(_BYTE *, uint64_t))(v127 + 8))(v77, v99);
  (*(void (**)(_BYTE *, uint64_t))(v126 + 8))(v132, v133);
  return v93;
}

uint64_t sub_9EFA4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_5C154(&qword_320F00);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_9EFEC(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_5C154(&qword_320F00);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t destroy for ContextActionMenuItemView(_QWORD *a1)
{
  if ((a1[5] & 1) != 0)
  {
    if (a1[3])
      _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(a1);
  }
  else
  {
    swift_release(*a1);
  }
  _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(a1 + 6);
  return swift_release(a1[12]);
}

uint64_t initializeWithCopy for ContextActionMenuItemView(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;

  if ((a2[5] & 1) != 0)
  {
    v4 = a2[3];
    if (v4)
    {
      v5 = a2[4];
      *(_QWORD *)(a1 + 24) = v4;
      *(_QWORD *)(a1 + 32) = v5;
      (**(void (***)(uint64_t, uint64_t *))(v4 - 8))(a1, a2);
    }
    else
    {
      v7 = *((_OWORD *)a2 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v7;
      *(_QWORD *)(a1 + 32) = a2[4];
    }
    *(_BYTE *)(a1 + 40) = 1;
  }
  else
  {
    v6 = *a2;
    *(_QWORD *)a1 = *a2;
    *(_BYTE *)(a1 + 40) = 0;
    swift_retain(v6);
  }
  v8 = *(_OWORD *)(a2 + 9);
  *(_OWORD *)(a1 + 72) = v8;
  (**(void (***)(uint64_t, uint64_t))(v8 - 8))(a1 + 48, (uint64_t)(a2 + 6));
  v9 = a2[12];
  *(_QWORD *)(a1 + 88) = a2[11];
  *(_QWORD *)(a1 + 96) = v9;
  swift_retain(v9);
  return a1;
}

uint64_t assignWithCopy for ContextActionMenuItemView(uint64_t a1, __int128 *a2)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  if ((__int128 *)a1 != a2)
  {
    sub_5E09C(a1, &qword_320298);
    if ((*((_BYTE *)a2 + 40) & 1) != 0)
    {
      v4 = *((_QWORD *)a2 + 3);
      if (v4)
      {
        *(_QWORD *)(a1 + 24) = v4;
        *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
        (**(void (***)(uint64_t, __int128 *))(v4 - 8))(a1, a2);
      }
      else
      {
        v6 = *a2;
        v7 = a2[1];
        *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
        *(_OWORD *)a1 = v6;
        *(_OWORD *)(a1 + 16) = v7;
      }
      *(_BYTE *)(a1 + 40) = 1;
    }
    else
    {
      v5 = *(_QWORD *)a2;
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_BYTE *)(a1 + 40) = 0;
      swift_retain(v5);
    }
  }
  sub_65938((_QWORD *)(a1 + 48), (_QWORD *)a2 + 6);
  v9 = *((_QWORD *)a2 + 11);
  v8 = *((_QWORD *)a2 + 12);
  v10 = *(_QWORD *)(a1 + 96);
  *(_QWORD *)(a1 + 88) = v9;
  *(_QWORD *)(a1 + 96) = v8;
  swift_retain(v8);
  swift_release(v10);
  return a1;
}

__n128 initializeWithTake for ContextActionMenuItemView(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __n128 result;
  __int128 v5;
  __int128 v6;

  v2 = *a2;
  v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  result = (__n128)a2[3];
  v5 = a2[4];
  v6 = a2[5];
  *(_QWORD *)(a1 + 96) = *((_QWORD *)a2 + 12);
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  *(__n128 *)(a1 + 48) = result;
  return result;
}

uint64_t assignWithTake for ContextActionMenuItemView(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;
  uint64_t v6;

  if (a1 != a2)
  {
    sub_5E09C(a1, &qword_320298);
    v4 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v4;
    *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  }
  _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((_QWORD *)(a1 + 48));
  v5 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v5;
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  v6 = *(_QWORD *)(a1 + 96);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  swift_release(v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for ContextActionMenuItemView(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 104))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 72);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ContextActionMenuItemView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 104) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 72) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 104) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ContextActionMenuItemView()
{
  return &type metadata for ContextActionMenuItemView;
}

uint64_t sub_9F334(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_2B5DD0, 1);
}

uint64_t sub_9F344@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t KeyPath;
  uint64_t v11;
  uint64_t v12;
  int *v13;
  uint64_t result;
  uint64_t v15;
  uint64_t (**v16)@<X0>(uint64_t@<X0>, uint64_t@<X1>, uint64_t@<X2>, uint64_t@<X3>, uint64_t@<X8>);
  _BYTE v17[8];
  _OWORD v18[6];
  uint64_t v19;

  v3 = sub_5C154(&qword_31F490);
  __chkstk_darwin(v3);
  v5 = &v17[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_9FF50(v1, (uint64_t)v18);
  v6 = swift_allocObject(&unk_2E9FA8, 120, 7);
  v7 = v18[5];
  *(_OWORD *)(v6 + 80) = v18[4];
  *(_OWORD *)(v6 + 96) = v7;
  *(_QWORD *)(v6 + 112) = v19;
  v8 = v18[1];
  *(_OWORD *)(v6 + 16) = v18[0];
  *(_OWORD *)(v6 + 32) = v8;
  v9 = v18[3];
  *(_OWORD *)(v6 + 48) = v18[2];
  *(_OWORD *)(v6 + 64) = v9;
  KeyPath = swift_getKeyPath(&unk_25AA90);
  v17[0] = 0;
  *v5 = swift_getKeyPath(&unk_25AAC0);
  v11 = sub_5C154(&qword_326110);
  swift_storeEnumTagMultiPayload(v5, v11, 0);
  v12 = swift_getKeyPath(&unk_25AAF0);
  *(_QWORD *)a1 = KeyPath;
  *(_BYTE *)(a1 + 40) = v17[0];
  v13 = (int *)sub_5C154(&qword_321710);
  result = sub_66F14((uint64_t)v5, a1 + v13[9], &qword_31F490);
  v15 = a1 + v13[10];
  *(_QWORD *)v15 = v12;
  *(_QWORD *)(v15 + 8) = 0;
  *(_BYTE *)(v15 + 16) = 0;
  v16 = (uint64_t (**)@<X0>(uint64_t@<X0>, uint64_t@<X1>, uint64_t@<X2>, uint64_t@<X3>, uint64_t@<X8>))(a1 + v13[11]);
  *v16 = sub_9FFD4;
  v16[1] = (uint64_t (*)@<X0>(uint64_t@<X0>, uint64_t@<X1>, uint64_t@<X2>, uint64_t@<X3>, uint64_t@<X8>))v6;
  return result;
}

uint64_t sub_9F4AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t KeyPath;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _BYTE v56[40];
  _OWORD v57[6];
  uint64_t v58;

  v51 = a4;
  v50 = a3;
  v47 = a2;
  v46 = a1;
  v55 = a6;
  v7 = type metadata accessor for OpaqueMetricsFieldsContext(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  __chkstk_darwin(v7);
  v10 = (char *)&v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_5C154(&qword_3261F0);
  __chkstk_darwin(v11);
  v13 = (char *)&v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_5C154(&qword_321718);
  v53 = *(_QWORD *)(v14 - 8);
  v54 = v14;
  __chkstk_darwin(v14);
  v49 = (char *)&v45 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = sub_5C154(&qword_321720);
  __chkstk_darwin(v52);
  v17 = (char *)&v45 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = a5[9];
  v19 = a5[10];
  v48 = a5 + 6;
  sub_66898(a5 + 6, v18);
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v19 + 40))(v18, v19) & 2) != 0)
  {
    v22.n128_f64[0] = static ButtonRole.destructive.getter();
    v23 = type metadata accessor for ButtonRole(0, v22);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v13, 0, 1, v23);
  }
  else
  {
    v21 = type metadata accessor for ButtonRole(0, v20);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v13, 1, 1, v21);
  }
  sub_9FF50(a5, (uint64_t)v57);
  sub_5E1A4(v46, (uint64_t)v56, &qword_326190);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)&v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v47, v7);
  v24 = *(unsigned __int8 *)(v8 + 80);
  v25 = (v24 + 160) & ~v24;
  v26 = (v9 + v25 + 7) & 0xFFFFFFFFFFFFFFF8;
  v27 = swift_allocObject(&unk_2E9FD0, v26 + 16, v24 | 7);
  v28 = v57[5];
  *(_OWORD *)(v27 + 80) = v57[4];
  *(_OWORD *)(v27 + 96) = v28;
  *(_QWORD *)(v27 + 112) = v58;
  v29 = v57[1];
  *(_OWORD *)(v27 + 16) = v57[0];
  *(_OWORD *)(v27 + 32) = v29;
  v30 = v57[3];
  *(_OWORD *)(v27 + 48) = v57[2];
  *(_OWORD *)(v27 + 64) = v30;
  sub_66F14((uint64_t)v56, v27 + 120, &qword_326190);
  (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(v27 + v25, v10, v7);
  v31 = (_QWORD *)(v27 + v26);
  v32 = v51;
  *v31 = v50;
  v31[1] = v32;
  __chkstk_darwin(v32);
  *(&v45 - 2) = (uint64_t)a5;
  swift_bridgeObjectRetain(v33);
  v34 = sub_5C154(&qword_321728);
  v35 = sub_A0114();
  v36 = v49;
  Button.init(role:action:label:)(v13, sub_A00B4, v27, sub_A010C, &v45 - 4, v34, v35);
  v37 = a5[9];
  v38 = a5[10];
  sub_66898(v48, v37);
  LOBYTE(v37) = (*(uint64_t (**)(uint64_t, uint64_t))(v38 + 40))(v37, v38);
  KeyPath = swift_getKeyPath(&unk_25AB18);
  v40 = swift_allocObject(&unk_2E9FF8, 17, 7);
  *(_BYTE *)(v40 + 16) = v37 & 1;
  v42 = v53;
  v41 = v54;
  (*(void (**)(char *, char *, uint64_t))(v53 + 16))(v17, v36, v54);
  v43 = (uint64_t *)&v17[*(int *)(v52 + 36)];
  *v43 = KeyPath;
  v43[1] = (uint64_t)sub_A0274;
  v43[2] = v40;
  (*(void (**)(char *, uint64_t))(v42 + 8))(v36, v41);
  return sub_66F14((uint64_t)v17, v55, &qword_321720);
}

uint64_t sub_9F87C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v50;
  void (*v51)(char *, char *, uint64_t);
  char *v52;
  uint64_t v53;
  uint64_t *v54;
  void (*v55)(char *, uint64_t);
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  __int128 v68;
  uint64_t v69;
  _QWORD v70[5];

  v67 = a2;
  v66 = sub_5C154(&qword_321740);
  __chkstk_darwin(v66);
  v65 = (char *)&v60 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_5C154(&qword_321748);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v64 = (char *)&v60 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v60 - v8;
  __chkstk_darwin(v10);
  v12 = (char *)&v60 - v11;
  v13 = sub_5C154(&qword_321750);
  __chkstk_darwin(v13);
  v15 = (char *)&v60 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_5C154(&qword_321050);
  v63 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v18 = (char *)&v60 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_7764C((uint64_t)&v68);
  if (v69)
  {
    v62 = v15;
    v63 = v13;
    v19 = sub_5DC98(&v68, (uint64_t)v70);
    __chkstk_darwin(v19);
    *(&v60 - 2) = (uint64_t)a1;
    v21 = __chkstk_darwin(v20);
    *(&v60 - 2) = (uint64_t)v70;
    *(&v60 - 1) = (uint64_t)a1;
    Label.init(title:icon:)(sub_A028C, v21);
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v12, v9, v4);
    v22 = a1 + 6;
    v24 = a1[9];
    v23 = a1[10];
    sub_66898(v22, v24);
    v25 = (*(uint64_t (**)(uint64_t, uint64_t))(v23 + 32))(v24, v23);
    v27 = v12;
    v61 = v16;
    if (v26)
    {
      *(_QWORD *)&v68 = v25;
      *((_QWORD *)&v68 + 1) = v26;
      v28 = sub_668F8();
      v29 = Text.init<A>(_:)(&v68, &type metadata for String, v28);
      v31 = v30;
      v33 = v32;
      v35 = v34 & 1;
    }
    else
    {
      v29 = 0;
      v31 = 0;
      v35 = 0;
      v33 = 0;
    }
    v50 = v5;
    v51 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
    v52 = v64;
    v51(v64, v12, v4);
    v53 = (uint64_t)v65;
    v51(v65, v52, v4);
    v54 = (uint64_t *)(v53 + *(int *)(sub_5C154(&qword_321758) + 48));
    *v54 = v29;
    v54[1] = v31;
    v54[2] = v35;
    v54[3] = v33;
    sub_9BA0C(v29, v31, v35, v33);
    sub_9BA0C(v29, v31, v35, v33);
    sub_9BA3C(v29, v31, v35, v33);
    v55 = *(void (**)(char *, uint64_t))(v50 + 8);
    v55(v52, v4);
    v64 = (char *)v4;
    v56 = v27;
    v57 = (uint64_t)v62;
    sub_5E1A4(v53, (uint64_t)v62, &qword_321740);
    swift_storeEnumTagMultiPayload(v57, v63, 0);
    v58 = sub_67060(&qword_321738, &qword_321740, (uint64_t)&protocol conformance descriptor for TupleView<A>);
    v59 = sub_67060((unint64_t *)&unk_326150, &qword_321050, (uint64_t)&protocol conformance descriptor for Label<A, B>);
    _ConditionalContent<>.init(storage:)(v57, v66, v61, v58, v59);
    sub_9BA3C(v29, v31, v35, v33);
    sub_5E09C(v53, &qword_321740);
    v55(v56, (uint64_t)v64);
    return _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(v70);
  }
  else
  {
    sub_5E09C((uint64_t)&v68, &qword_3202A0);
    v36 = a1 + 6;
    v37 = a1[9];
    v38 = a1[10];
    sub_66898(a1 + 6, v37);
    v70[0] = (*(uint64_t (**)(uint64_t, uint64_t))(v38 + 24))(v37, v38);
    v70[1] = v39;
    v41 = a1[9];
    v40 = a1[10];
    sub_66898(v36, v41);
    (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v40 + 16))(&v68, v41, v40);
    v42 = sub_22F3CC();
    v44 = v43;
    v45 = sub_668F8();
    Label<>.init<A>(_:systemImage:)(v70, v42, v44, &type metadata for String, v45);
    v46 = v63;
    (*(void (**)(char *, char *, uint64_t))(v63 + 16))(v15, v18, v16);
    swift_storeEnumTagMultiPayload(v15, v13, 1);
    v47 = sub_67060(&qword_321738, &qword_321740, (uint64_t)&protocol conformance descriptor for TupleView<A>);
    v48 = sub_67060((unint64_t *)&unk_326150, &qword_321050, (uint64_t)&protocol conformance descriptor for Label<A, B>);
    _ConditionalContent<>.init(storage:)(v15, v66, v16, v47, v48);
    return (*(uint64_t (**)(char *, uint64_t))(v46 + 8))(v18, v16);
  }
}

uint64_t sub_9FD9C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t result;
  uint64_t v8;
  char v9;
  uint64_t v10;
  _QWORD v11[2];

  v3 = a1[9];
  v4 = a1[10];
  sub_66898(a1 + 6, v3);
  v11[0] = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 24))(v3, v4);
  v11[1] = v5;
  v6 = sub_668F8();
  result = Text.init<A>(_:)(v11, &type metadata for String, v6);
  *(_QWORD *)a2 = result;
  *(_QWORD *)(a2 + 8) = v8;
  *(_BYTE *)(a2 + 16) = v9 & 1;
  *(_QWORD *)(a2 + 24) = v10;
  return result;
}

uint64_t sub_9FE1C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  _QWORD *v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  _QWORD v19[5];

  v5 = a1[3];
  v6 = a1[4];
  sub_66898(a1, v5);
  v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 24);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(0, v6);
  v19[3] = AssociatedTypeWitness;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness(v6, v5, AssociatedTypeWitness, &protocol requirements base descriptor for ContextActionIconProviding, &associated conformance descriptor for ContextActionIconProviding.ContextActionIconProviding.Content: View);
  v19[4] = AssociatedConformanceWitness;
  v10 = sub_668BC(v19);
  v11 = v7(a2 + 48, v5, v6);
  v12 = __chkstk_darwin(v11);
  v14 = (char *)&v19[-1] - v13;
  (*(void (**)(char *, _QWORD *, uint64_t, __n128))(v15 + 16))((char *)&v19[-1] - v13, v10, AssociatedTypeWitness, v12);
  v16 = AnyView.init<A>(_:)(v14, AssociatedTypeWitness, AssociatedConformanceWitness);
  result = _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(v19);
  *a3 = v16;
  return result;
}

uint64_t sub_9FF50(uint64_t *a1, uint64_t a2)
{
  initializeWithCopy for ContextActionMenuItemView(a2, a1);
  return a2;
}

uint64_t sub_9FF84()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)(v0 + 16);
  if ((*(_BYTE *)(v0 + 56) & 1) != 0)
  {
    if (*(_QWORD *)(v0 + 40))
      _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(v1);
  }
  else
  {
    swift_release(*v1);
  }
  _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((_QWORD *)(v0 + 64));
  swift_release(*(_QWORD *)(v0 + 112));
  return swift_deallocObject(v0, 120, 7);
}

uint64_t sub_9FFD4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;

  return sub_9F4AC(a1, a2, a3, a4, (uint64_t *)(v5 + 16), a5);
}

uint64_t sub_9FFEC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  unint64_t v7;

  v1 = type metadata accessor for OpaqueMetricsFieldsContext(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = (_QWORD *)(v0 + 16);
  if ((*(_BYTE *)(v0 + 56) & 1) != 0)
  {
    if (*(_QWORD *)(v0 + 40))
      _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(v5);
  }
  else
  {
    swift_release(*v5);
  }
  _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((_QWORD *)(v0 + 64));
  swift_release(*(_QWORD *)(v0 + 112));
  if (*(_QWORD *)(v0 + 144))
    _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((_QWORD *)(v0 + 120));
  v6 = (v3 + 160) & ~v3;
  v7 = (v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v6, v1);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v7 + 8));
  return swift_deallocObject(v0, v7 + 16, v3 | 7);
}

uint64_t sub_A00B4()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  _QWORD *v3;

  v1 = *(_QWORD *)(type metadata accessor for OpaqueMetricsFieldsContext(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 160) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (_QWORD *)(v0 + ((*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8));
  return (*(uint64_t (**)(uint64_t, unint64_t, _QWORD, _QWORD))(v0 + 104))(v0 + 120, v0 + v2, *v3, v3[1]);
}

uint64_t sub_A010C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_9F87C(*(_QWORD **)(v1 + 16), a1);
}

unint64_t sub_A0114()
{
  unint64_t result;
  uint64_t v1;

  result = qword_321730;
  if (!qword_321730)
  {
    v1 = sub_667D0(&qword_321728);
    sub_67060(&qword_321738, &qword_321740, (uint64_t)&protocol conformance descriptor for TupleView<A>);
    sub_67060((unint64_t *)&unk_326150, &qword_321050, (uint64_t)&protocol conformance descriptor for Label<A, B>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_321730);
  }
  return result;
}

uint64_t sub_A01B0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = EnvironmentValues.isEnabled.getter();
  *a1 = result & 1;
  return result;
}

uint64_t sub_A01DC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = EnvironmentValues.isEnabled.getter();
  *a1 = result & 1;
  return result;
}

uint64_t sub_A0208(unsigned __int8 *a1)
{
  return EnvironmentValues.isEnabled.setter(*a1);
}

uint64_t sub_A022C(unsigned __int8 *a1)
{
  return EnvironmentValues.isEnabled.setter(*a1);
}

_BYTE *sub_A0250(_BYTE *result, char a2)
{
  *result &= a2 ^ 1;
  return result;
}

uint64_t sub_A0264()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

_BYTE *sub_A0274(_BYTE *result)
{
  uint64_t v1;

  *result &= ~*(_BYTE *)(v1 + 16) & 1;
  return result;
}

uint64_t sub_A028C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_9FD9C(*(_QWORD **)(v1 + 16), a1);
}

uint64_t sub_A0294@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_9FE1C(*(_QWORD **)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

uint64_t sub_A029C()
{
  return sub_67060(&qword_321760, &qword_321710, (uint64_t)&protocol conformance descriptor for PerformActionView<A>);
}

uint64_t sub_A02C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  _QWORD *v9;
  _QWORD v11[5];

  v11[3] = a3;
  v11[4] = a4;
  v9 = sub_668BC(v11);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 16))(v9, a2, a3);
  swift_retain(a1);
  return sub_C5C94(v11, a1, a5);
}

uint64_t sub_A0338(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  _QWORD v27[5];

  v24 = a1;
  v1 = sub_5C154(&qword_3217B8);
  __chkstk_darwin(v1);
  v3 = (char *)&v24 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = type metadata accessor for LocalizerRequest(0);
  v4 = *(_QWORD *)(v26 - 8);
  __chkstk_darwin(v26);
  v25 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for PageContent.PageInfo(0);
  __chkstk_darwin(v6);
  v8 = (uint64_t *)((char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = sub_5C154(&qword_3217C0);
  __chkstk_darwin(v9);
  v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for Page(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_5C154(&qword_3217C8);
  State.wrappedValue.getter(v8, v16);
  sub_5E1A4((uint64_t)v8 + *(int *)(v6 + 20), (uint64_t)v11, &qword_3217C0);
  sub_6685C((uint64_t)v8, type metadata accessor for PageContent.PageInfo);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
    v17 = &qword_3217C0;
    v18 = (uint64_t)v11;
LABEL_5:
    sub_5E09C(v18, v17);
    return 0;
  }
  sub_A0868((uint64_t)v11, (uint64_t)v15);
  sub_5E1A4((uint64_t)&v15[*(int *)(v12 + 20)], (uint64_t)v3, &qword_3217B8);
  v19 = v26;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v3, 1, v26) == 1)
  {
    sub_6685C((uint64_t)v15, type metadata accessor for Page);
    v17 = &qword_3217B8;
    v18 = (uint64_t)v3;
    goto LABEL_5;
  }
  v22 = v25;
  (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v25, v3, v19);
  if (v15[*(int *)(v12 + 32)] == 1)
  {
    (*(void (**)(char *, uint64_t))(v4 + 8))(v22, v19);
    sub_6685C((uint64_t)v15, type metadata accessor for Page);
    return 10519010;
  }
  else
  {
    v23 = sub_5C154(&qword_31FE28);
    BaseObjectGraph.inject<A>(_:)(v27, v23, v23);
    v20 = LocalizerRequest.perform(using:)(v27);
    _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(v27);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v22, v19);
    sub_6685C((uint64_t)v15, type metadata accessor for Page);
  }
  return v20;
}

void sub_A062C()
{
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x800000000026EFD0, "BookStoreUI/PageHostingController.swift", 39, 2, 74, 0);
  __break(1u);
}

Swift::Void __swiftcall PageHostingController.goToSeeAll(shelfIndex:)(Swift::Int shelfIndex)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  Swift::Int *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = type metadata accessor for HostProxy.Event(0);
  __chkstk_darwin(v3);
  v5 = (uint64_t *)((char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = *(_QWORD *)(*(_QWORD *)(v1 + qword_31F828) + 16);
  *v5 = shelfIndex;
  swift_storeEnumTagMultiPayload(v5, v7, 5);
  swift_retain(v6);
  PassthroughSubject.send(_:)(v5);
  swift_release(v6);
  sub_6685C((uint64_t)v5, type metadata accessor for HostProxy.Event);
}

Swift::Void __swiftcall PageHostingController.loadNextPage()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for HostProxy.Event(0);
  __chkstk_darwin(v1);
  v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *(_QWORD *)(*(_QWORD *)(v0 + qword_31F828) + 16);
  swift_storeEnumTagMultiPayload(v3, v5, 6);
  swift_retain(v4);
  PassthroughSubject.send(_:)(v3);
  swift_release(v4);
  sub_6685C((uint64_t)v3, type metadata accessor for HostProxy.Event);
}

uint64_t type metadata accessor for PageHostingController(uint64_t a1)
{
  uint64_t result;

  result = qword_321768;
  if (!qword_321768)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for PageHostingController);
  return result;
}

uint64_t sub_A0818(uint64_t a1)
{
  _BYTE v2[8];

  return swift_initClassMetadata2(a1, 0, 0, v2, a1 + class metadata base offset for PageHostingController);
}

uint64_t method lookup function for PageHostingController(uint64_t a1, uint64_t a2)
{
  return swift_lookUpClassMethod(a1, a2, &nominal type descriptor for PageHostingController);
}

uint64_t sub_A0860()
{
  return type metadata accessor for PageHostingController(0);
}

uint64_t sub_A0868(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Page(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

char *sub_A08AC(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, void *a5, int a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  int v25;
  unsigned int v26;
  id v27;
  char *v28;
  uint64_t v30;
  int v31;
  int v32;
  id v33;
  void *v34;
  uint64_t v35;
  _BYTE v36[16];
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v35 = a8;
  v31 = a7;
  v32 = a6;
  v33 = a5;
  v34 = a3;
  v14 = sub_5C154(&qword_322410);
  __chkstk_darwin(v14);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_5C154(&qword_31F010);
  v18 = type metadata accessor for Dependency(0);
  v19 = swift_allocObject(v17, ((*(unsigned __int8 *)(*(_QWORD *)(v18 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v18 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v18 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v18 - 8) + 80) | 7);
  *(_OWORD *)(v19 + 16) = xmmword_258070;
  v20 = type metadata accessor for PaginationController();
  v21 = swift_allocObject(v20, 72, 7);
  *(_WORD *)(v21 + 16) = 0;
  *(_BYTE *)(v21 + 18) = 0;
  *(_OWORD *)(v21 + 24) = 0u;
  *(_OWORD *)(v21 + 40) = 0u;
  *(_OWORD *)(v21 + 56) = 0u;
  v40 = v21;
  Dependency.init<A>(satisfying:with:)(v20, &v40, v20);
  v40 = v19;
  v22 = sub_5C154((uint64_t *)&unk_31FEC0);
  v23 = sub_7D48C();
  v24 = dispatch thunk of BaseObjectGraph.adding<A>(allDependencies:)(&v40, v22, v23);
  swift_bridgeObjectRelease(v19);
  sub_5E1A4(a4, (uint64_t)v16, &qword_322410);
  v37 = a10;
  v38 = a11;
  v39 = a1;
  if ((v31 & 1) != 0)
    v25 = 256;
  else
    v25 = 0;
  v26 = v25 & 0xFFFFFFFE | v32 & 1;
  v27 = v33;
  swift_bridgeObjectRetain(a9);
  v28 = sub_221038(v24, v34, (uint64_t)v16, v27, v26, v35, a9, (void (*)(uint64_t))sub_A0B7C, (uint64_t)v36, (uint64_t (*)(uint64_t, uint64_t))sub_A0338, 0);
  swift_bridgeObjectRelease(a9);
  swift_release(a2);

  sub_5E09C(a4, &qword_322410);
  return v28;
}

char *sub_A0AD4(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, void *a5, int a6, int a7, uint64_t a8, __int128 a9, uint64_t a10)
{
  objc_class *v10;
  id v19;

  v19 = objc_allocWithZone(v10);
  return sub_A08AC(a1, a2, a3, a4, a5, a6, a7, a8, a9, *((uint64_t *)&a9 + 1), a10);
}

uint64_t sub_A0B7C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;

  return sub_A02C8(a1, v2[4], v2[2], v2[3], a2);
}

BOOL static ContextActionAssetType.== infix(_:_:)(char a1, char a2)
{
  return a1 == a2;
}

void ContextActionAssetType.hash(into:)(uint64_t a1, unsigned __int8 a2)
{
  Hasher._combine(_:)(a2);
}

Swift::Int ContextActionAssetType.hashValue.getter(unsigned __int8 a1)
{
  _QWORD v3[9];

  Hasher.init(_seed:)(v3, 0);
  Hasher._combine(_:)(a1);
  return Hasher._finalize()();
}

unint64_t ContextActionSource.key.getter()
{
  uint64_t v0;
  unint64_t result;
  uint64_t v2;
  uint64_t v3;
  _QWORD v4[4];

  sub_A0D90(v0, (uint64_t)&v2);
  result = 0x65756E69746E6F63;
  switch(v3)
  {
    case 0:
      return result;
    case 1:
      result = 0xD000000000000016;
      break;
    case 2:
      result = 0xD000000000000015;
      break;
    case 3:
      result = 0x616C702D696E696DLL;
      break;
    case 4:
      result = 0x2D746375646F7270;
      break;
    case 5:
      result = 0x796C746E65636572;
      break;
    case 6:
    case 8:
      result = 0xD000000000000014;
      break;
    case 7:
      result = 0x736B636950706F74;
      break;
    case 9:
      result = 0;
      break;
    case 10:
      result = 0x2D6F742D746E6177;
      break;
    default:
      swift_bridgeObjectRelease(v3);
      _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(v4);
      result = 0x7972617262696CLL;
      break;
  }
  return result;
}

uint64_t sub_A0D90(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for ContextActionSource(a2, a1);
  return a2;
}

uint64_t ContextActionPublisherInfo.name.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease(v2[1]);
  *v2 = a1;
  v2[1] = a2;
  return result;
}

Swift::Void (__swiftcall *ContextActionPublisherInfo.name.modify())()
{
  return SwiftUICoverAnimationProvider.coverAnimationSourceInvalidateFrame();
}

uint64_t ContextActionPublisherInfo.year.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain(*(_QWORD *)(v0 + 24));
  return v1;
}

uint64_t ContextActionPublisherInfo.year.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease(*(_QWORD *)(v2 + 24));
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return result;
}

Swift::Void (__swiftcall *ContextActionPublisherInfo.year.modify())()
{
  return SwiftUICoverAnimationProvider.coverAnimationSourceInvalidateFrame();
}

uint64_t sub_A0E7C@<X0>(uint64_t a1@<X8>)
{
  return ContextActionDataProtocol.analyticsAttributes.getter(a1);
}

uint64_t ContextActionDataProtocol.analyticsAttributes.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;

  v2 = type metadata accessor for OdpSuggestionType(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(a1, 1, 1, v2);
}

uint64_t ContextActionDataProtocol.selectionMode.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t (*v6)(void);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  __int128 v15[2];

  v6 = *(uint64_t (**)(void))(a2 + 8);
  v7 = v6();
  v8 = *(_QWORD *)(v7 + 16);
  swift_bridgeObjectRelease(v7);
  if (v8 == 1)
  {
    v9 = ((uint64_t (*)(uint64_t, uint64_t))v6)(a1, a2);
    v10 = v9;
    if (*(_QWORD *)(v9 + 16))
    {
      sub_5E0D8(v9 + 32, (uint64_t)&v12);
      swift_bridgeObjectRelease(v10);
      if (*((_QWORD *)&v13 + 1))
      {
        sub_5DC98(&v12, (uint64_t)v15);
        result = sub_5DC98(v15, a3);
        *(_BYTE *)(a3 + 40) = 0;
        return result;
      }
    }
    else
    {
      v14 = 0;
      v12 = 0u;
      v13 = 0u;
      swift_bridgeObjectRelease(v9);
    }
    sub_5E09C((uint64_t)&v12, (uint64_t *)&unk_326130);
  }
  result = ((uint64_t (*)(uint64_t, uint64_t))v6)(a1, a2);
  *(_QWORD *)a3 = result;
  *(_BYTE *)(a3 + 40) = 1;
  return result;
}

uint64_t _s11BookStoreUI19ContextActionSourceO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[4];
  _BYTE v16[8];
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  _QWORD v20[4];

  sub_A0D90(a1, (uint64_t)v16);
  sub_A0D90(a2, (uint64_t)&v18);
  if (v17 < 0xB)
    goto LABEL_4;
  sub_A0D90((uint64_t)v16, (uint64_t)&v13);
  v3 = v14;
  v4 = v19;
  if (v19 < 0xB)
  {
    _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(v15);
    swift_bridgeObjectRelease(v3);
LABEL_4:
    v5 = ContextActionSource.key.getter();
    v7 = v6;
    v9 = ContextActionSource.key.getter();
    v10 = v8;
    if (v5 == v9 && v7 == v8)
    {
      v11 = 1;
      v10 = v7;
    }
    else
    {
      v11 = _stringCompareWithSmolCheck(_:_:expecting:)(v5, v7, v9, v8, 0);
    }
    swift_bridgeObjectRelease(v7);
    swift_bridgeObjectRelease(v10);
    sub_5E09C((uint64_t)v16, &qword_3217E8);
    return v11 & 1;
  }
  if (v13 == v18 && v14 == v19)
  {
    swift_bridgeObjectRelease(v14);
    v11 = 1;
  }
  else
  {
    v11 = _stringCompareWithSmolCheck(_:_:expecting:)(v13, v14, v18, v19, 0);
    swift_bridgeObjectRelease(v4);
  }
  swift_bridgeObjectRelease(v3);
  _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(v20);
  _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(v15);
  sub_A1EA0((uint64_t)v16);
  return v11 & 1;
}

unint64_t sub_A112C()
{
  unint64_t result;

  result = qword_3217D0;
  if (!qword_3217D0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for ContextActionAssetType, &type metadata for ContextActionAssetType);
    atomic_store(result, (unint64_t *)&qword_3217D0);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for ContextActionAssetType(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF9)
    goto LABEL_17;
  if (a2 + 7 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 7) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 7;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 7;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 7;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 8;
  v8 = v6 - 8;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for ContextActionAssetType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_A124C + 4 * byte_25AB80[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_A1280 + 4 * byte_25AB7B[v4]))();
}

uint64_t sub_A1280(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_A1288(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0xA1290);
  return result;
}

uint64_t sub_A129C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0xA12A4);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_A12A8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_A12B0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ContextActionAssetType()
{
  return &type metadata for ContextActionAssetType;
}

unint64_t destroy for ContextActionSource(uint64_t a1)
{
  unint64_t result;

  result = *(_QWORD *)(a1 + 8);
  if (result >= 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease(result);
    return _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((_QWORD *)(a1 + 16));
  }
  return result;
}

uint64_t initializeWithCopy for ContextActionSource(uint64_t a1, uint64_t a2)
{
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t, uint64_t);
  __int128 v7;

  v3 = *(_QWORD *)(a2 + 8);
  if (v3 < 0xFFFFFFFF)
  {
    v7 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v7;
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  }
  else
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v3;
    v4 = a2 + 16;
    v5 = *(_QWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 40) = v5;
    v6 = **(void (***)(uint64_t, uint64_t, uint64_t))(v5 - 8);
    swift_bridgeObjectRetain(v3);
    v6(a1 + 16, v4, v5);
  }
  return a1;
}

uint64_t assignWithCopy for ContextActionSource(uint64_t a1, __int128 *a2)
{
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 *v8;
  uint64_t v9;
  void (*v10)(uint64_t, __int128 *, uint64_t, __n128);
  __n128 v11;
  __int128 v12;
  __int128 v13;

  v4 = *(_QWORD *)(a1 + 8);
  v5 = *((_QWORD *)a2 + 1);
  if (v4 < 0xFFFFFFFF)
  {
    if (v5 >= 0xFFFFFFFF)
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      v7 = *((_QWORD *)a2 + 1);
      *(_QWORD *)(a1 + 8) = v7;
      v8 = a2 + 1;
      v9 = *((_QWORD *)a2 + 5);
      *(_QWORD *)(a1 + 40) = v9;
      v10 = **(void (***)(uint64_t, __int128 *, uint64_t, __n128))(v9 - 8);
      v11 = swift_bridgeObjectRetain(v7);
      v10(a1 + 16, v8, v9, v11);
      return a1;
    }
LABEL_7:
    v12 = *a2;
    v13 = a2[2];
    *(_OWORD *)(a1 + 16) = a2[1];
    *(_OWORD *)(a1 + 32) = v13;
    *(_OWORD *)a1 = v12;
    return a1;
  }
  if (v5 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
    _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((_QWORD *)(a1 + 16));
    goto LABEL_7;
  }
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = *((_QWORD *)a2 + 1);
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v4);
  sub_A1478((_QWORD *)(a1 + 16), (_QWORD *)a2 + 2);
  return a1;
}

_QWORD *sub_A1478(_QWORD *result, _QWORD *a2)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE v15[24];

  if (result != a2)
  {
    v3 = result;
    v4 = result[3];
    v5 = a2[3];
    if (v4 == v5)
    {
      v9 = *(_QWORD *)(v4 - 8);
      if ((*(_BYTE *)(v9 + 82) & 2) != 0)
      {
        v11 = *result;
        v12 = *a2;
        swift_retain(*a2);
        result = (_QWORD *)swift_release(v11);
        *v3 = v12;
      }
      else
      {
        return (_QWORD *)(*(uint64_t (**)(_QWORD *, _QWORD *, _QWORD))(v9 + 24))(result, a2, result[3]);
      }
    }
    else
    {
      result[3] = v5;
      v6 = *(_QWORD *)(v4 - 8);
      v7 = *(_QWORD *)(v5 - 8);
      v8 = *(_DWORD *)(v7 + 80);
      if ((*(_BYTE *)(v6 + 82) & 2) != 0)
      {
        v10 = *result;
        if ((v8 & 0x20000) != 0)
        {
          v14 = *a2;
          *v3 = *a2;
          swift_retain(v14);
        }
        else
        {
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (_QWORD *)swift_release(v10);
      }
      else
      {
        (*(void (**)(_BYTE *, _QWORD *, uint64_t))(v6 + 32))(v15, result, v4);
        if ((v8 & 0x20000) != 0)
        {
          v13 = *a2;
          *v3 = *a2;
          swift_retain(v13);
        }
        else
        {
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v7 + 16))(v3, a2, v5);
        }
        return (_QWORD *)(*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v15, v4);
      }
    }
  }
  return result;
}

uint64_t assignWithTake for ContextActionSource(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  unint64_t v5;
  __int128 v6;
  __int128 v7;

  v4 = *(_QWORD *)(a1 + 8);
  if (v4 < 0xFFFFFFFF)
    goto LABEL_5;
  v5 = *(_QWORD *)(a2 + 8);
  if (v5 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease(v4);
    _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((_QWORD *)(a1 + 16));
LABEL_5:
    v7 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v7;
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    return a1;
  }
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v5;
  swift_bridgeObjectRelease(v4);
  _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((_QWORD *)(a1 + 16));
  v6 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v6;
  return a1;
}

uint64_t getEnumTagSinglePayload for ContextActionSource(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  unsigned int v4;
  unsigned int v5;

  if (!a2)
    return 0;
  if (a2 > 0x7FFFFFF4 && *(_BYTE *)(a1 + 48))
    return (*(_DWORD *)a1 + 2147483637);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 + 1;
  v5 = v3 - 10;
  if (v4 >= 0xC)
    return v5;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for ContextActionSource(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFF5)
  {
    *(_OWORD *)(result + 16) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)result = 0u;
    *(_DWORD *)result = a2 - 2147483637;
    if (a3 >= 0x7FFFFFF5)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFF5)
      *(_BYTE *)(result + 48) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2 + 10;
  }
  return result;
}

uint64_t sub_A1708(uint64_t a1)
{
  unint64_t v1;

  v1 = *(_QWORD *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

double sub_A1720(uint64_t a1, int a2)
{
  double result;

  if (a2 < 0)
  {
    *(_QWORD *)(a1 + 40) = 0;
    result = 0.0;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
    *(_QWORD *)a1 = a2 ^ 0x80000000;
  }
  else if (a2)
  {
    *(_QWORD *)(a1 + 8) = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for ContextActionSource()
{
  return &type metadata for ContextActionSource;
}

uint64_t destroy for ContextActionPublisherInfo(uint64_t a1)
{
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + 24));
}

_QWORD *initializeWithCopy for ContextActionPublisherInfo(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  return a1;
}

_QWORD *assignWithCopy for ContextActionPublisherInfo(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = a2[1];
  v5 = a1[1];
  a1[1] = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  a1[2] = a2[2];
  v6 = a2[3];
  v7 = a1[3];
  a1[3] = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  return a1;
}

_QWORD *assignWithTake for ContextActionPublisherInfo(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = a2[1];
  v5 = a1[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease(v5);
  v6 = a2[3];
  v7 = a1[3];
  a1[2] = a2[2];
  a1[3] = v6;
  swift_bridgeObjectRelease(v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for ContextActionPublisherInfo(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 32))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ContextActionPublisherInfo(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 32) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for ContextActionPublisherInfo()
{
  return &type metadata for ContextActionPublisherInfo;
}

uint64_t dispatch thunk of ContextActionDataProtocol.isOnline.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of ContextActionDataProtocol.isStoreAllowed.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of ContextActionDataProtocol.isStoreManagedAppleID.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of ContextAssetInfoProtocol.coverImage.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int *v5;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t, uint64_t);

  v5 = *(int **)(a2 + 40);
  v8 = (uint64_t (*)(uint64_t, uint64_t))((char *)v5 + *v5);
  v6 = (_QWORD *)swift_task_alloc(v5[1]);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_9431C;
  return v8(a1, a2);
}

uint64_t dispatch thunk of ContextActionDataProtocol.isAnODPRecommendation.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of ContextActionDataProtocol.supportsSuggestionContextMenu.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of ContextActionDataProtocol.source.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t dispatch thunk of ContextAssetInfoProtocol.featuredEditions.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t dispatch thunk of ContextAssetInfoProtocol.genreName.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 80))();
}

uint64_t dispatch thunk of ContextActionDataProtocol.sourceView.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 88))();
}

uint64_t dispatch thunk of ContextActionDataProtocol.transaction.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 96))();
}

uint64_t dispatch thunk of ContextActionDataProtocol.analyticsAttributes.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 104))();
}

uint64_t dispatch thunk of ContextAssetInfoProtocol.isExplicit.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 112))();
}

uint64_t dispatch thunk of ContextAssetInfoProtocol.isInWantToRead.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 120))();
}

uint64_t dispatch thunk of ContextAssetInfoProtocol.isLocal.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 128))();
}

uint64_t dispatch thunk of ContextAssetInfoProtocol.isManagedBook.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 136))();
}

uint64_t dispatch thunk of ContextAssetInfoProtocol.isMarkedFinished.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 144))();
}

uint64_t dispatch thunk of ContextAssetInfoProtocol.isOwned.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 152))();
}

uint64_t dispatch thunk of ContextAssetInfoProtocol.isPurchased.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 160))();
}

uint64_t dispatch thunk of ContextAssetInfoProtocol.isSeries.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 168))();
}

uint64_t dispatch thunk of ContextAssetInfoProtocol.isSideloaded.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 176))();
}

uint64_t dispatch thunk of ContextAssetInfoProtocol.language.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 184))();
}

uint64_t dispatch thunk of ContextAssetInfoProtocol.offer.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 192))();
}

uint64_t dispatch thunk of ContextAssetInfoProtocol.offerType.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 200))();
}

uint64_t dispatch thunk of ContextAssetInfoProtocol.path.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 208))();
}

uint64_t dispatch thunk of ContextAssetInfoProtocol.publisherInfo.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 216))();
}

uint64_t dispatch thunk of ContextAssetInfoProtocol.sampleDownloadURL.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 224))();
}

uint64_t dispatch thunk of ContextAssetInfoProtocol.seriesTitle.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 232))();
}

uint64_t dispatch thunk of ContextAssetInfoProtocol.shareableURLString.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 240))();
}

uint64_t dispatch thunk of ContextAssetInfoProtocol.shareableURLString.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 248))();
}

uint64_t dispatch thunk of ContextAssetInfoProtocol.shareableURLString.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 256))();
}

uint64_t dispatch thunk of ContextAssetInfoProtocol.shareableURLStringWithFallback.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 264))();
}

uint64_t dispatch thunk of ContextAssetInfoProtocol.socialHighlightID.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 272))();
}

uint64_t dispatch thunk of ContextAssetInfoProtocol.standardDescription.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 280))();
}

uint64_t dispatch thunk of ContextAssetInfoProtocol.storeId.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 288))();
}

uint64_t dispatch thunk of ContextAssetInfoProtocol.supportsUnifiedProductPage.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 296))();
}

uint64_t dispatch thunk of ContextAssetInfoProtocol.supplementalContentCount.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 304))();
}

uint64_t dispatch thunk of ContextAssetInfoProtocol.title.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 312))();
}

uint64_t dispatch thunk of ContextAssetInfoProtocol.version.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 320))();
}

uint64_t dispatch thunk of ContextAssetInfoProtocol.rawCoverImage(size:)(uint64_t a1, uint64_t a2, double a3, double a4)
{
  uint64_t v4;
  int *v9;
  _QWORD *v10;
  uint64_t (*v12)(uint64_t, uint64_t, double, double);

  v9 = *(int **)(a2 + 328);
  v12 = (uint64_t (*)(uint64_t, uint64_t, double, double))((char *)v9 + *v9);
  v10 = (_QWORD *)swift_task_alloc(v9[1]);
  *(_QWORD *)(v4 + 16) = v10;
  *v10 = v4;
  v10[1] = sub_A1EE4;
  return v12(a1, a2, a3, a4);
}

uint64_t dispatch thunk of ContextAssetInfoProtocol.toItemDescription()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 336))();
}

uint64_t dispatch thunk of ContextAssetInfoProtocol.toFoundationAssetInfo()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 344))();
}

uint64_t dispatch thunk of ContextActionDataProtocol.shouldReportFigaro.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of ContextActionDataProtocol.sourcePoint.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 80))();
}

uint64_t destroy for ContextSelectionMode(_QWORD *a1)
{
  unsigned int v1;

  v1 = *((unsigned __int8 *)a1 + 40);
  if (v1 >= 2)
    v1 = *(_DWORD *)a1 + 2;
  if (v1 == 1)
    return swift_bridgeObjectRelease(*a1);
  else
    return _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(a1);
}

uint64_t initializeWithCopy for ContextSelectionMode(uint64_t a1, uint64_t *a2)
{
  unsigned int v3;
  uint64_t v4;
  char v5;
  __int128 v6;

  v3 = *((unsigned __int8 *)a2 + 40);
  if (v3 >= 2)
    v3 = *(_DWORD *)a2 + 2;
  if (v3 == 1)
  {
    v4 = *a2;
    *(_QWORD *)a1 = *a2;
    swift_bridgeObjectRetain(v4);
    v5 = 1;
  }
  else
  {
    v6 = *(_OWORD *)(a2 + 3);
    *(_OWORD *)(a1 + 24) = v6;
    (**(void (***)(uint64_t))(v6 - 8))(a1);
    v5 = 0;
  }
  *(_BYTE *)(a1 + 40) = v5;
  return a1;
}

uint64_t assignWithCopy for ContextSelectionMode(uint64_t a1, uint64_t *a2)
{
  unsigned int v4;
  unsigned int v5;
  uint64_t v6;
  uint64_t v7;

  if ((uint64_t *)a1 != a2)
  {
    v4 = *(unsigned __int8 *)(a1 + 40);
    if (v4 >= 2)
      v4 = *(_DWORD *)a1 + 2;
    if (v4 == 1)
      swift_bridgeObjectRelease(*(_QWORD *)a1);
    else
      _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((_QWORD *)a1);
    v5 = *((unsigned __int8 *)a2 + 40);
    if (v5 >= 2)
      v5 = *(_DWORD *)a2 + 2;
    if (v5 == 1)
    {
      v6 = *a2;
      *(_QWORD *)a1 = *a2;
      *(_BYTE *)(a1 + 40) = 1;
      swift_bridgeObjectRetain(v6);
    }
    else
    {
      v7 = a2[3];
      *(_QWORD *)(a1 + 24) = v7;
      *(_QWORD *)(a1 + 32) = a2[4];
      (**(void (***)(uint64_t, uint64_t *))(v7 - 8))(a1, a2);
      *(_BYTE *)(a1 + 40) = 0;
    }
  }
  return a1;
}

__n128 initializeWithTake for ContextSelectionMode(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for ContextSelectionMode(uint64_t a1, uint64_t a2)
{
  unsigned int v4;
  unsigned int v5;
  char v6;
  __int128 v7;

  if (a1 != a2)
  {
    v4 = *(unsigned __int8 *)(a1 + 40);
    if (v4 >= 2)
      v4 = *(_DWORD *)a1 + 2;
    if (v4 == 1)
      swift_bridgeObjectRelease(*(_QWORD *)a1);
    else
      _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((_QWORD *)a1);
    v5 = *(unsigned __int8 *)(a2 + 40);
    if (v5 >= 2)
      v5 = *(_DWORD *)a2 + 2;
    if (v5 == 1)
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      v6 = 1;
    }
    else
    {
      v6 = 0;
      v7 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v7;
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    }
    *(_BYTE *)(a1 + 40) = v6;
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for ContextSelectionMode(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 41))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 40);
  if (v3 >= 2)
    return (v3 ^ 0xFF) + 1;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for ContextSelectionMode(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 25) = 0u;
    *(_OWORD *)result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 41) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 41) = 0;
    if (a2)
      *(_BYTE *)(result + 40) = -(char)a2;
  }
  return result;
}

uint64_t sub_A1E4C(uint64_t a1)
{
  uint64_t result;

  result = *(unsigned __int8 *)(a1 + 40);
  if (result >= 2)
    return (*(_DWORD *)a1 + 2);
  return result;
}

uint64_t sub_A1E68(uint64_t result, unsigned int a2)
{
  if (a2 > 1)
  {
    *(_QWORD *)(result + 32) = 0;
    *(_OWORD *)result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)result = a2 - 2;
    LOBYTE(a2) = 2;
  }
  *(_BYTE *)(result + 40) = a2;
  return result;
}

ValueMetadata *type metadata accessor for ContextSelectionMode()
{
  return &type metadata for ContextSelectionMode;
}

uint64_t sub_A1EA0(uint64_t a1)
{
  unint64_t v2;

  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease(v2);
    _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((_QWORD *)(a1 + 16));
  }
  return a1;
}

uint64_t HostProxy.eventSubject.getter()
{
  uint64_t v0;

  return swift_retain(*(_QWORD *)(v0 + 16));
}

uint64_t sub_A1EF0()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_5C154(&qword_31FA68);
  v1 = sub_67060(&qword_31FA70, &qword_31FA68, (uint64_t)&protocol conformance descriptor for PassthroughSubject<A, B>);
  return Publisher.eraseToAnyPublisher()(v0, v1);
}

uint64_t sub_A1F5C()
{
  uint64_t v0;
  _BYTE v2[24];

  swift_beginAccess(v0 + 24, v2, 0, 0);
  return swift_unknownObjectWeakLoadStrong(v0 + 24);
}

void sub_A1F9C(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v4[24];

  v3 = v1 + 24;
  swift_beginAccess(v3, v4, 1, 0);
  swift_unknownObjectWeakAssign(v3, a1);

}

void (*sub_A1FE8(_QWORD *a1))(id **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  swift_beginAccess(v1 + 24, v3, 33, 0);
  v3[3] = swift_unknownObjectWeakLoadStrong(v1 + 24);
  return sub_A2050;
}

void sub_A2050(id **a1, char a2)
{
  id *v3;
  id v4;

  v3 = *a1;
  v4 = (*a1)[3];
  swift_unknownObjectWeakAssign((char *)(*a1)[4] + 24, v4);
  if ((a2 & 1) != 0)
  {

    swift_endAccess(v3);
  }
  else
  {
    swift_endAccess(v3);

  }
  free(v3);
}

void sub_A20B8()
{
  uint64_t v0;
  uint64_t v1;
  void *Strong;
  void *v3;
  id v4;
  id v5;
  id v6;
  id v7;
  void *v8;
  void *v9;
  id v10;
  id v11;
  id v12;
  id v13;
  _BYTE v14[24];

  v1 = v0 + 24;
  swift_beginAccess(v0 + 24, v14, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v0 + 24);
  if (Strong)
  {
    v3 = Strong;
    v4 = objc_msgSend(Strong, "view");

    if (!v4)
    {
      __break(1u);
      goto LABEL_14;
    }
    v5 = objc_msgSend(v4, "window");

    if (v5)
    {
      v6 = objc_msgSend(v5, "windowScene");

      if (v6)
      {
        v7 = objc_msgSend(v6, "session");

        if (v7)
          return;
      }
    }
  }
  v8 = (void *)swift_unknownObjectWeakLoadStrong(v1);
  if (!v8)
    return;
  v9 = v8;
  v10 = objc_msgSend(v8, "presentingViewController");

  if (!v10)
    return;
  v11 = objc_msgSend(v10, "view");

  if (!v11)
  {
LABEL_14:
    __break(1u);
    return;
  }
  v12 = objc_msgSend(v11, "window");

  if (v12)
  {
    v13 = objc_msgSend(v12, "windowScene");

    if (v13)
    {
      objc_msgSend(v13, "session");

    }
  }
}

uint64_t (*sub_A2264(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + 32, a1, 33, 0);
  return j__swift_endAccess;
}

double sub_A22A0()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  _QWORD v4[3];

  KeyPath = swift_getKeyPath(&unk_25AD18);
  v4[0] = v0;
  v2 = sub_648E0(&qword_31F838, type metadata accessor for HostProxy, (uint64_t)&protocol conformance descriptor for HostProxy);
  ObservationRegistrar.access<A, B>(_:keyPath:)(v4, KeyPath, v2);
  swift_release(KeyPath);
  swift_beginAccess(v0 + 32, v4, 0, 0);
  return *(double *)(v0 + 32);
}

uint64_t type metadata accessor for HostProxy(uint64_t a1)
{
  return sub_64960(a1, qword_321830, (uint64_t)&nominal type descriptor for HostProxy);
}

uint64_t sub_A2354(double a1)
{
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  double v8;
  uint64_t v9;

  KeyPath = swift_getKeyPath(&unk_25AD18);
  v7 = v1;
  v8 = a1;
  v9 = v1;
  v4 = sub_648E0(&qword_31F838, type metadata accessor for HostProxy, (uint64_t)&protocol conformance descriptor for HostProxy);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v9, KeyPath, sub_A2454, &v6, (char *)&type metadata for () + 8, v4);
  return swift_release(KeyPath);
}

uint64_t sub_A2404(uint64_t a1, double a2)
{
  uint64_t result;
  _BYTE v5[24];

  result = swift_beginAccess(a1 + 32, v5, 1, 0);
  *(double *)(a1 + 32) = a2;
  return result;
}

uint64_t sub_A2454()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  _BYTE v4[24];

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 24);
  result = swift_beginAccess(v1 + 32, v4, 1, 0);
  *(_QWORD *)(v1 + 32) = v2;
  return result;
}

void (*sub_A24A4(_QWORD *a1))(_QWORD *a1, uint64_t a2)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t KeyPath;
  uint64_t v6;
  uint64_t v7;

  v2 = v1;
  v4 = malloc(0x40uLL);
  *a1 = v4;
  v4[4] = v2;
  KeyPath = swift_getKeyPath(&unk_25AD18);
  v4[5] = OBJC_IVAR____TtC11BookStoreUI9HostProxy___observationRegistrar;
  *v4 = v2;
  v6 = sub_648E0(&qword_31F838, type metadata accessor for HostProxy, (uint64_t)&protocol conformance descriptor for HostProxy);
  v4[6] = v6;
  ObservationRegistrar.access<A, B>(_:keyPath:)(v4, KeyPath, v6);
  swift_release(KeyPath);
  *v4 = v2;
  v7 = swift_getKeyPath(&unk_25AD18);
  ObservationRegistrar.willSet<A, B>(_:keyPath:)(v4, v7, v6);
  swift_release(v7);
  v4[7] = sub_A2264((uint64_t)v4);
  return sub_A258C;
}

void sub_A258C(_QWORD *a1, uint64_t a2)
{
  sub_A28B8(a1, a2, (uint64_t)&unk_25AD18);
}

uint64_t (*sub_A2598(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + 40, a1, 33, 0);
  return j_j__swift_endAccess;
}

double sub_A25D4()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  _QWORD v4[3];

  KeyPath = swift_getKeyPath(&unk_25AD40);
  v4[0] = v0;
  v2 = sub_648E0(&qword_31F838, type metadata accessor for HostProxy, (uint64_t)&protocol conformance descriptor for HostProxy);
  ObservationRegistrar.access<A, B>(_:keyPath:)(v4, KeyPath, v2);
  swift_release(KeyPath);
  swift_beginAccess(v0 + 40, v4, 0, 0);
  return *(double *)(v0 + 40);
}

uint64_t sub_A2674(double a1)
{
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  double v8;
  uint64_t v9;

  KeyPath = swift_getKeyPath(&unk_25AD40);
  v7 = v1;
  v8 = a1;
  v9 = v1;
  v4 = sub_648E0(&qword_31F838, type metadata accessor for HostProxy, (uint64_t)&protocol conformance descriptor for HostProxy);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v9, KeyPath, sub_A2774, &v6, (char *)&type metadata for () + 8, v4);
  return swift_release(KeyPath);
}

uint64_t sub_A2724(uint64_t a1, double a2)
{
  uint64_t result;
  _BYTE v5[24];

  result = swift_beginAccess(a1 + 40, v5, 1, 0);
  *(double *)(a1 + 40) = a2;
  return result;
}

uint64_t sub_A2774()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  _BYTE v4[24];

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 24);
  result = swift_beginAccess(v1 + 40, v4, 1, 0);
  *(_QWORD *)(v1 + 40) = v2;
  return result;
}

void (*sub_A27C4(_QWORD *a1))(_QWORD *a1, uint64_t a2)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t KeyPath;
  uint64_t v6;
  uint64_t v7;

  v2 = v1;
  v4 = malloc(0x40uLL);
  *a1 = v4;
  v4[4] = v2;
  KeyPath = swift_getKeyPath(&unk_25AD40);
  v4[5] = OBJC_IVAR____TtC11BookStoreUI9HostProxy___observationRegistrar;
  *v4 = v2;
  v6 = sub_648E0(&qword_31F838, type metadata accessor for HostProxy, (uint64_t)&protocol conformance descriptor for HostProxy);
  v4[6] = v6;
  ObservationRegistrar.access<A, B>(_:keyPath:)(v4, KeyPath, v6);
  swift_release(KeyPath);
  *v4 = v2;
  v7 = swift_getKeyPath(&unk_25AD40);
  ObservationRegistrar.willSet<A, B>(_:keyPath:)(v4, v7, v6);
  swift_release(v7);
  v4[7] = sub_A2598((uint64_t)v4);
  return sub_A28AC;
}

void sub_A28AC(_QWORD *a1, uint64_t a2)
{
  sub_A28B8(a1, a2, (uint64_t)&unk_25AD40);
}

void sub_A28B8(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t KeyPath;

  v4 = (_QWORD *)*a1;
  (*(void (**)(_QWORD, _QWORD))(*a1 + 56))(*a1, 0);
  v5 = v4[6];
  *v4 = v4[4];
  KeyPath = swift_getKeyPath(a3);
  ObservationRegistrar.didSet<A, B>(_:keyPath:)(v4, KeyPath, v5);
  swift_release(KeyPath);
  free(v4);
}

uint64_t HostProxy.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_unknownObjectWeakDestroy(v0 + 24);
  v1 = v0 + OBJC_IVAR____TtC11BookStoreUI9HostProxy___observationRegistrar;
  v2 = type metadata accessor for ObservationRegistrar(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t HostProxy.__deallocating_deinit()
{
  _QWORD *v0;
  char *v1;
  uint64_t v2;

  swift_release(v0[2]);
  swift_unknownObjectWeakDestroy(v0 + 3);
  v1 = (char *)v0 + OBJC_IVAR____TtC11BookStoreUI9HostProxy___observationRegistrar;
  v2 = type metadata accessor for ObservationRegistrar(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*v0 + 48), *(unsigned __int16 *)(*v0 + 52));
}

uint64_t HostProxy.issue(instruction:animated:)(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t, uint64_t);
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  LODWORD(v2) = a2;
  v33 = type metadata accessor for HostProxy.Event(0);
  __chkstk_darwin(v33);
  v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_5C154(&qword_31EF08);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Logger(0);
  v29 = *(_QWORD *)(v10 - 8);
  v30 = v10;
  __chkstk_darwin(v10);
  v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Logger.pageUpdate.getter(v13);
  v14 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  v32 = a1;
  v31 = v14;
  v15 = ((uint64_t (*)(char *, uint64_t, uint64_t))v14)(v9, a1, v6);
  v16 = Logger.logObject.getter(v15);
  v17 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v16, v17))
  {
    v18 = swift_slowAlloc(18, -1);
    v19 = swift_slowAlloc(32, -1);
    v28 = v2;
    v2 = v19;
    v35 = v19;
    *(_DWORD *)v18 = 136315394;
    v27 = v18 + 4;
    v20 = sub_67060(&qword_321800, &qword_31EF08, (uint64_t)&protocol conformance descriptor for PageUpdateInstruction<A, B>);
    v21 = dispatch thunk of CustomStringConvertible.description.getter(v6, v20);
    v23 = v22;
    v34 = sub_57CD8(v21, v22, &v35);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v34, &v35, v27, v18 + 12);
    swift_bridgeObjectRelease(v23);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *(_WORD *)(v18 + 12) = 1024;
    LODWORD(v34) = v28 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v34, (char *)&v34 + 4, v18 + 14, v18 + 18);
    _os_log_impl(&dword_0, v16, v17, "Issuing page update instruction: %s, animated: %{BOOL}d", (uint8_t *)v18, 0x12u);
    swift_arrayDestroy(v2, 1, (char *)&type metadata for Any + 8);
    v24 = v2;
    LOBYTE(v2) = v28;
    swift_slowDealloc(v24, -1, -1);
    swift_slowDealloc(v18, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }

  (*(void (**)(char *, uint64_t))(v29 + 8))(v12, v30);
  v25 = *(int *)(sub_5C154(&qword_3217F8) + 48);
  v31(v5, v32, v6);
  v5[v25] = v2 & 1;
  swift_storeEnumTagMultiPayload(v5, v33, 3);
  PassthroughSubject.send(_:)(v5);
  sub_6C188((uint64_t)v5);
  return 1;
}

uint64_t sub_A2CD0(uint64_t a1, int a2)
{
  HostProxy.issue(instruction:animated:)(a1, a2);
  return 1;
}

uint64_t HostProxy.scrollTo(location:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v7;

  v2 = type metadata accessor for HostProxy.Event(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for PageScrollAction.Location(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(v4, a1, v5);
  swift_storeEnumTagMultiPayload(v4, v2, 4);
  PassthroughSubject.send(_:)(v4);
  sub_6C188((uint64_t)v4);
  return 1;
}

uint64_t sub_A2D9C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v7;

  v2 = type metadata accessor for HostProxy.Event(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for PageScrollAction.Location(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(v4, a1, v5);
  swift_storeEnumTagMultiPayload(v4, v2, 4);
  PassthroughSubject.send(_:)(v4);
  sub_6C188((uint64_t)v4);
  return 1;
}

uint64_t type metadata accessor for HostProxy.Event(uint64_t a1)
{
  return sub_64960(a1, (uint64_t *)&unk_3219E0, (uint64_t)&nominal type descriptor for HostProxy.Event);
}

uint64_t sub_A2E5C()
{
  return sub_648E0((unint64_t *)&qword_320120, type metadata accessor for Page, (uint64_t)&protocol conformance descriptor for Page);
}

uint64_t sub_A2E88()
{
  return sub_648E0(&qword_320128, type metadata accessor for Shelf, (uint64_t)&protocol conformance descriptor for Shelf);
}

uint64_t sub_A2EB4@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;
  _BYTE v5[24];

  v3 = *a1 + 24;
  swift_beginAccess(v3, v5, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(v3);
  *a2 = result;
  return result;
}

uint64_t sub_A2F00(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE v5[24];

  v2 = *a1;
  v3 = *a2 + 24;
  swift_beginAccess(v3, v5, 1, 0);
  return swift_unknownObjectWeakAssign(v3, v2);
}

uint64_t sub_A2F5C()
{
  return type metadata accessor for HostProxy(0);
}

uint64_t sub_A2F64(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[5];

  v4[0] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[1] = &unk_25AE40;
  v4[2] = (char *)&value witness table for Builtin.Int64 + 64;
  v4[3] = (char *)&value witness table for Builtin.Int64 + 64;
  result = type metadata accessor for ObservationRegistrar(319);
  if (v3 <= 0x3F)
  {
    v4[4] = *(_QWORD *)(result - 8) + 64;
    result = swift_updateClassMetadata2(a1, 256, 5, v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for HostProxy(uint64_t a1, uint64_t a2)
{
  return swift_lookUpClassMethod(a1, a2, &nominal type descriptor for HostProxy);
}

uint64_t dispatch thunk of HostProxy.eventPublisher.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t dispatch thunk of HostProxy.hostingViewController.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t dispatch thunk of HostProxy.hostingViewController.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t dispatch thunk of HostProxy.hostingViewController.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 144))();
}

uint64_t dispatch thunk of HostProxy.sceneSession.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

uint64_t dispatch thunk of HostProxy.topSafeAreaInset.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 184))();
}

uint64_t dispatch thunk of HostProxy.topSafeAreaInset.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 192))();
}

uint64_t dispatch thunk of HostProxy.topSafeAreaInset.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 200))();
}

uint64_t dispatch thunk of HostProxy.bottomSafeAreaInset.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 232))();
}

uint64_t dispatch thunk of HostProxy.bottomSafeAreaInset.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 240))();
}

uint64_t dispatch thunk of HostProxy.bottomSafeAreaInset.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 248))();
}

_QWORD *initializeBufferWithCopyOfBuffer for HostProxy.Event(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  int EnumCaseMultiPayload;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v11 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v11 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain(v11);
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    switch(EnumCaseMultiPayload)
    {
      case 4:
        v12 = type metadata accessor for PageScrollAction.Location(0);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(a1, a2, v12);
        swift_storeEnumTagMultiPayload(a1, a3, 4);
        break;
      case 3:
        v13 = sub_5C154(&qword_31EF08);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(a1, a2, v13);
        v14 = sub_5C154(&qword_3217F8);
        *((_BYTE *)a1 + *(int *)(v14 + 48)) = *((_BYTE *)a2 + *(int *)(v14 + 48));
        swift_storeEnumTagMultiPayload(a1, a3, 3);
        break;
      case 2:
        v9 = (void *)*a2;
        *a1 = *a2;
        v10 = v9;
        swift_storeEnumTagMultiPayload(a1, a3, 2);
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(v5 + 64));
        break;
    }
  }
  return a1;
}

void destroy for HostProxy.Event(id *a1, uint64_t a2)
{
  int EnumCaseMultiPayload;
  uint64_t v4;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a1, a2);
  switch(EnumCaseMultiPayload)
  {
    case 4:
      v4 = type metadata accessor for PageScrollAction.Location(0);
LABEL_7:
      (*(void (**)(id *, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
      return;
    case 3:
      v4 = sub_5C154(&qword_31EF08);
      goto LABEL_7;
    case 2:

      break;
  }
}

void **initializeWithCopy for HostProxy.Event(void **a1, void **a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
  switch(EnumCaseMultiPayload)
  {
    case 4:
      v9 = type metadata accessor for PageScrollAction.Location(0);
      (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
      swift_storeEnumTagMultiPayload(a1, a3, 4);
      break;
    case 3:
      v10 = sub_5C154(&qword_31EF08);
      (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(a1, a2, v10);
      v11 = sub_5C154(&qword_3217F8);
      *((_BYTE *)a1 + *(int *)(v11 + 48)) = *((_BYTE *)a2 + *(int *)(v11 + 48));
      swift_storeEnumTagMultiPayload(a1, a3, 3);
      break;
    case 2:
      v7 = *a2;
      *a1 = *a2;
      v8 = v7;
      swift_storeEnumTagMultiPayload(a1, a3, 2);
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

void **assignWithCopy for HostProxy.Event(void **a1, void **a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if (a1 != a2)
  {
    sub_6C188((uint64_t)a1);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    switch(EnumCaseMultiPayload)
    {
      case 4:
        v9 = type metadata accessor for PageScrollAction.Location(0);
        (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
        swift_storeEnumTagMultiPayload(a1, a3, 4);
        break;
      case 3:
        v10 = sub_5C154(&qword_31EF08);
        (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(a1, a2, v10);
        v11 = sub_5C154(&qword_3217F8);
        *((_BYTE *)a1 + *(int *)(v11 + 48)) = *((_BYTE *)a2 + *(int *)(v11 + 48));
        swift_storeEnumTagMultiPayload(a1, a3, 3);
        break;
      case 2:
        v7 = *a2;
        *a1 = *a2;
        v8 = v7;
        swift_storeEnumTagMultiPayload(a1, a3, 2);
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

_BYTE *initializeWithTake for HostProxy.Event(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
  if (EnumCaseMultiPayload == 4)
  {
    v9 = type metadata accessor for PageScrollAction.Location(0);
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(a1, a2, v9);
    swift_storeEnumTagMultiPayload(a1, a3, 4);
  }
  else if (EnumCaseMultiPayload == 3)
  {
    v7 = sub_5C154(&qword_31EF08);
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    v8 = sub_5C154(&qword_3217F8);
    a1[*(int *)(v8 + 48)] = a2[*(int *)(v8 + 48)];
    swift_storeEnumTagMultiPayload(a1, a3, 3);
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

_BYTE *assignWithTake for HostProxy.Event(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  if (a1 != a2)
  {
    sub_6C188((uint64_t)a1);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    if (EnumCaseMultiPayload == 4)
    {
      v9 = type metadata accessor for PageScrollAction.Location(0);
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(a1, a2, v9);
      swift_storeEnumTagMultiPayload(a1, a3, 4);
    }
    else if (EnumCaseMultiPayload == 3)
    {
      v7 = sub_5C154(&qword_31EF08);
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      v8 = sub_5C154(&qword_3217F8);
      a1[*(int *)(v8 + 48)] = a2[*(int *)(v8 + 48)];
      swift_storeEnumTagMultiPayload(a1, a3, 3);
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for HostProxy.Event(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a3 - 8) + 48))();
}

uint64_t storeEnumTagSinglePayload for HostProxy.Event(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a4 - 8) + 56))();
}

uint64_t sub_A3654(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_storeEnumTagMultiPayload(a1, a3, a2);
}

void sub_A3664(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _BYTE v6[32];
  _QWORD v7[6];

  v7[0] = &unk_25AE60;
  v7[1] = (char *)&value witness table for Builtin.Int64 + 64;
  v7[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
  sub_A372C(319);
  if (v3 <= 0x3F)
  {
    swift_getTupleTypeLayout2(v6, *(_QWORD *)(v2 - 8) + 64, &unk_25AE60);
    v7[3] = v6;
    v4 = type metadata accessor for PageScrollAction.Location(319);
    if (v5 <= 0x3F)
    {
      v7[4] = *(_QWORD *)(v4 - 8) + 64;
      v7[5] = (char *)&value witness table for Builtin.Int64 + 64;
      swift_initEnumMetadataMultiPayload(a1, 256, 6, v7);
    }
  }
}

void sub_A372C(uint64_t a1)
{
  unint64_t updated;
  uint64_t v3;
  _QWORD v4[4];

  if (!qword_3219F0)
  {
    v4[0] = type metadata accessor for Page(255);
    v4[1] = type metadata accessor for Shelf(255);
    v4[2] = sub_648E0((unint64_t *)&qword_320120, type metadata accessor for Page, (uint64_t)&protocol conformance descriptor for Page);
    v4[3] = sub_648E0(&qword_320128, type metadata accessor for Shelf, (uint64_t)&protocol conformance descriptor for Shelf);
    updated = type metadata accessor for PageUpdateInstruction(a1, v4);
    if (!v3)
      atomic_store(updated, (unint64_t *)&qword_3219F0);
  }
}

ValueMetadata *type metadata accessor for SeriesListSortActionImplementation()
{
  return &type metadata for SeriesListSortActionImplementation;
}

uint64_t sub_A3808(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v3[7] = a1;
  v3[8] = a3;
  v4 = type metadata accessor for SeriesListSortAction(0);
  v3[9] = v4;
  v3[10] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = (*(_QWORD *)(*(_QWORD *)(sub_5C154(&qword_320A40) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[11] = swift_task_alloc(v5);
  v3[12] = swift_task_alloc(v5);
  v6 = type metadata accessor for SeriesListSortOrder(0);
  v3[13] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v3[14] = v7;
  v3[15] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_5C154(&qword_320A48);
  v9 = (_QWORD *)swift_task_alloc(async function pointer to BaseObjectGraph.inject<A>(_:)[1]);
  v3[16] = v9;
  *v9 = v3;
  v9[1] = sub_A3904;
  return BaseObjectGraph.inject<A>(_:)(v3 + 2, v8, v8);
}

uint64_t sub_A3904()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 128);
  *(_QWORD *)(*(_QWORD *)v1 + 136) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_A3D4C;
  else
    v3 = sub_A3968;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_A3968()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  _QWORD *v10;
  int *v12;

  v1 = (_QWORD *)(v0[8] + *(int *)(v0[9] + 20));
  v2 = v1[3];
  v3 = v1[4];
  sub_66898(v1, v2);
  v4 = ContentInfo.id.getter(v2, *(_QWORD *)(v3 + 8));
  v6 = v5;
  v0[18] = v4;
  v0[19] = v5;
  v7 = v0[5];
  v8 = v0[6];
  sub_66898(v0 + 2, v7);
  v9 = *(int **)(v8 + 64);
  v12 = (int *)((char *)v9 + *v9);
  v10 = (_QWORD *)swift_task_alloc(v9[1]);
  v0[20] = v10;
  *v10 = v0;
  v10[1] = sub_A3A38;
  return ((uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t))v12)(v0[12], v4, v6, v7, v8);
}

uint64_t sub_A3A38()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 160));
  return swift_task_switch(sub_A3A8C, 0, 0);
}

uint64_t sub_A3A8C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int *v17;
  _QWORD *v18;
  uint64_t v20;
  int *v21;

  v1 = v0[13];
  v2 = v0[14];
  v3 = v0[12];
  sub_A3F20(v0[8], v0[10]);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    v4 = v0[12];
    v5 = (_QWORD *)(v0[10] + *(int *)(v0[9] + 20));
    v6 = v5[3];
    v7 = v5[4];
    sub_66898(v5, v6);
    SeriesInfo.currentSortOrder.getter(v6, v7);
    sub_A4150(v4);
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD, _QWORD))(v0[14] + 32))(v0[15], v0[12], v0[13]);
  }
  v8 = v0[18];
  v20 = v0[19];
  v9 = v0[14];
  v10 = v0[15];
  v11 = v0[13];
  v12 = v0[11];
  sub_A4190(v0[10]);
  v13 = v0[5];
  v14 = v0[6];
  sub_66898(v0 + 2, v13);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v12, v10, v11);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v9 + 56))(v12, 0, 1, v11);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 8))(v12, v8, v20, v13, v14);
  sub_A4150(v12);
  v15 = v0[5];
  v16 = v0[6];
  sub_66898(v0 + 2, v15);
  v17 = *(int **)(v16 + 80);
  v21 = (int *)((char *)v17 + *v17);
  v18 = (_QWORD *)swift_task_alloc(v17[1]);
  v0[21] = v18;
  *v18 = v0;
  v18[1] = sub_A3C34;
  return ((uint64_t (*)(_QWORD, _QWORD, _QWORD, uint64_t, uint64_t))v21)(v0[8], v0[18], v0[19], v15, v16);
}

uint64_t sub_A3C34()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 152);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 168));
  swift_bridgeObjectRelease(v1);
  return swift_task_switch(sub_A3C94, 0, 0);
}

uint64_t sub_A3C94()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 96);
  v4 = *(_QWORD *)(v0 + 80);
  v3 = *(_QWORD *)(v0 + 88);
  v5 = *(_QWORD *)(v0 + 56);
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 112) + 8))(v1, *(_QWORD *)(v0 + 104));
  v6 = enum case for ActionOutcome.performed(_:);
  v7 = type metadata accessor for ActionOutcome(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v5, v6, v7);
  _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((_QWORD *)(v0 + 16));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_A3D4C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 88);
  v2 = *(_QWORD *)(v0 + 96);
  v3 = *(_QWORD *)(v0 + 80);
  swift_task_dealloc(*(_QWORD *)(v0 + 120));
  swift_task_dealloc(v2);
  swift_task_dealloc(v1);
  swift_task_dealloc(v3);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_A3DA8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v19;

  v4 = sub_5C154(&qword_329740);
  __chkstk_darwin(v4);
  v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for SeriesListSortAction(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  __chkstk_darwin(v7);
  sub_A3F20(a1, (uint64_t)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = *(unsigned __int8 *)(v8 + 80);
  v11 = (v10 + 24) & ~v10;
  v12 = swift_allocObject(&unk_2EA398, v11 + v9, v10 | 7);
  *(_QWORD *)(v12 + 16) = a2;
  sub_A4058((uint64_t)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v12 + v11);
  sub_5C154(&qword_3208F8);
  v13 = swift_retain(a2);
  v14 = Promise.__allocating_init()(v13);
  v15 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v6, 1, 1, v15);
  v16 = (_QWORD *)swift_allocObject(&unk_2EA3C0, 56, 7);
  v16[2] = 0;
  v16[3] = 0;
  v16[4] = &unk_321A28;
  v16[5] = v12;
  v16[6] = v14;
  swift_retain(v14);
  v17 = sub_174AF8((uint64_t)v6, (uint64_t)&unk_320900, (uint64_t)v16);
  swift_release(v17);
  return v14;
}

uint64_t sub_A3F20(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SeriesListSortAction(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_A3F64()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = (int *)type metadata accessor for SeriesListSortAction(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  swift_release(*(_QWORD *)(v0 + 16));
  v6 = type metadata accessor for SeriesListSortOrder(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v0 + v4, v6);
  _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((_QWORD *)(v0 + v4 + v1[5]));
  v7 = v0 + v4 + v1[7];
  v8 = type metadata accessor for ActionMetrics(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = v0 + v4 + v1[8];
  v10 = type metadata accessor for ClickData(0);
  v11 = *(_QWORD *)(v10 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

uint64_t sub_A4058(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SeriesListSortAction(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_A409C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for SeriesListSortAction(0) - 8) + 80);
  v5 = *(_QWORD *)(v1 + 16);
  v6 = v1 + ((v4 + 24) & ~v4);
  v7 = (_QWORD *)swift_task_alloc(dword_321A24);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_64780;
  return sub_A3808(a1, v5, v6);
}

uint64_t sub_A411C()
{
  _QWORD *v0;

  swift_unknownObjectRelease(v0[2]);
  swift_release(v0[5]);
  swift_release(v0[6]);
  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_A4150(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_5C154(&qword_320A40);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_A4190(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for SeriesListSortAction(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t ShareActionItem.context.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_5E0D8(v1 + 16, a1);
}

uint64_t ShareActionItem.data.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_5E0D8(v1 + 56, a1);
}

void *ShareActionItem.tracker.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 96);
  v2 = v1;
  return v1;
}

uint64_t ShareActionItem.figaroProvider.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_5E0D8(v1 + 104, a1);
}

void ShareActionItem.type.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 144);
}

uint64_t ShareActionItem.__allocating_init(data:context:tracker:figaroProvider:)(__int128 *a1, __int128 *a2, uint64_t a3, __int128 *a4)
{
  uint64_t v4;
  uint64_t v9;

  v9 = swift_allocObject(v4, 145, 7);
  *(_BYTE *)(v9 + 144) = 0;
  sub_5DC98(a1, v9 + 56);
  sub_5DC98(a2, v9 + 16);
  *(_QWORD *)(v9 + 96) = a3;
  sub_5DC98(a4, v9 + 104);
  return v9;
}

uint64_t ShareActionItem.init(data:context:tracker:figaroProvider:)(__int128 *a1, __int128 *a2, uint64_t a3, __int128 *a4)
{
  uint64_t v4;

  *(_BYTE *)(v4 + 144) = 0;
  sub_5DC98(a1, v4 + 56);
  sub_5DC98(a2, v4 + 16);
  *(_QWORD *)(v4 + 96) = a3;
  sub_5DC98(a4, v4 + 104);
  return v4;
}

uint64_t sub_A4324()
{
  _QWORD *v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  _OWORD v13[3];
  _QWORD v14[5];
  char v15;

  v1 = v0;
  v2 = v0 + 7;
  v3 = v0[10];
  v4 = v1[11];
  sub_66898(v2, v3);
  ContextActionDataProtocol.selectionMode.getter(v3, v4, (uint64_t)v14);
  LOBYTE(v3) = v15;
  sub_A4430(v14);
  if ((v3 & 1) != 0)
  {
    v5 = 0;
  }
  else
  {
    v6 = v1[10];
    v7 = v1[11];
    sub_66898(v2, v6);
    (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v7 + 64))(v14, v6, v7);
    v13[0] = xmmword_25AF10;
    memset(&v13[1], 0, 32);
    v8 = _s11BookStoreUI19ContextActionSourceO2eeoiySbAC_ACtFZ_0((uint64_t)v14, (uint64_t)v13);
    sub_A1EA0((uint64_t)v13);
    sub_A1EA0((uint64_t)v14);
    if ((v8 & 1) != 0)
    {
      v9 = v1 + 2;
      v11 = v1[5];
      v10 = v1[6];
      sub_66898(v9, v11);
      v5 = ContextMenuPresentationContextProtocol.isCompact.getter(v11, v10);
    }
    else
    {
      v5 = 1;
    }
  }
  return v5 & 1;
}

_QWORD *sub_A4430(_QWORD *a1)
{
  destroy for ContextSelectionMode(a1);
  return a1;
}

uint64_t sub_A4464()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v1 + 16) = v0;
  v2 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v1 + 24) = static MainActor.shared.getter(v2);
  v3 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor);
  return swift_task_switch(sub_A44D0, v3, v4);
}

uint64_t sub_A44D0()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD **)(v0 + 16);
  swift_release(*(_QWORD *)(v0 + 24));
  v2 = v1[5];
  v3 = v1[6];
  sub_66898(v1 + 2, v2);
  v4 = swift_allocObject(&unk_2EA410, 32, 7);
  *(_QWORD *)(v4 + 16) = &unk_321A40;
  *(_QWORD *)(v4 + 24) = v1;
  swift_retain(v1);
  ContextMenuPresentationContextProtocol.showShareSheet(with:using:)(v1 + 7, (uint64_t)&unk_321A50, v4, v2, v3);
  swift_release(v4);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_A457C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;

  v9 = (_QWORD *)swift_task_alloc(dword_321AB4);
  *(_QWORD *)(v5 + 16) = v9;
  *v9 = v5;
  v9[1] = sub_7BFF8;
  return sub_A4718(a1, v10, v11, a4, a5);
}

uint64_t sub_A45E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int *a6)
{
  uint64_t v6;
  _QWORD *v11;
  uint64_t (*v13)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  *(_QWORD *)(v6 + 48) = a1;
  v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)a6 + *a6);
  v11 = (_QWORD *)swift_task_alloc(a6[1]);
  *(_QWORD *)(v6 + 56) = v11;
  *v11 = v6;
  v11[1] = sub_A467C;
  return v13(v6 + 16, a2, a3, a4, a5);
}

uint64_t sub_A467C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;

  v1 = *(_QWORD *)(*v0 + 56);
  v2 = *v0;
  swift_task_dealloc(v1);
  v4 = *(_QWORD *)(v2 + 40);
  v3 = *(_QWORD *)(v2 + 48);
  if (v4)
  {
    v5 = sub_66898((_QWORD *)(v2 + 16), v4);
    *(_QWORD *)(v3 + 24) = v4;
    v6 = sub_668BC((_QWORD *)v3);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(v6, v5, v4);
    _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((_QWORD *)(v2 + 16));
  }
  else
  {
    *(_OWORD *)v3 = 0u;
    *(_OWORD *)(v3 + 16) = 0u;
  }
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_A4718(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5[14] = a4;
  v5[15] = a5;
  v5[13] = a1;
  v6 = sub_5C154(&qword_321470);
  v5[16] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for URL(0);
  v5[17] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v5[18] = v8;
  v5[19] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_A47A0, 0, 0);
}

uint64_t sub_A47A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  void (*v51)(uint64_t, uint64_t, uint64_t);
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char v65;
  _QWORD *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char v75;
  _QWORD *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char v85;
  _QWORD *v86;
  _QWORD *v87;
  uint64_t v88;
  uint64_t v89;
  int v90;
  uint64_t v91;
  uint64_t v92;
  int v93;
  uint64_t v94;
  uint64_t v95;
  int *v96;
  _QWORD *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char v104;
  _QWORD *v105;
  uint64_t v106;
  uint64_t v107;
  int v108;
  uint64_t v109;
  uint64_t v110;
  int v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  char v123;
  _QWORD *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  char v133;
  _QWORD *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  char v143;
  _QWORD *v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  char v153;
  _QWORD *v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  char v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  char v170;
  _QWORD *v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  char v184;
  _QWORD *v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t *v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  char v197;
  _QWORD *v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  char v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  char v213;
  _QWORD *v214;
  uint64_t v215;
  uint64_t v216;
  char v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  char v224;
  _QWORD *v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  char v234;
  _QWORD *v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  char v244;
  _QWORD *v245;
  uint64_t v246;
  uint64_t v247;
  void *v248;
  uint64_t v249;
  NSObject *v250;
  os_log_type_t v251;
  _BOOL4 v252;
  void *v253;
  uint8_t *v254;
  uint64_t v255;
  uint64_t v256;
  unint64_t v257;
  unint64_t v258;
  uint64_t (*v259)(uint64_t, uint64_t);
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;

  v1 = *(_QWORD *)(v0 + 112);
  v2 = static String._unconditionallyBridgeFromObjectiveC(_:)(AEAssetActivityItemProviderPropertyAssetId);
  v4 = v3;
  v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(v1);
  if (v2 == v5 && v4 == v6)
  {
    swift_bridgeObjectRelease_n(v4, 2);
    goto LABEL_15;
  }
  v8 = v6;
  v9 = _stringCompareWithSmolCheck(_:_:expecting:)(v2, v4, v5, v6, 0);
  swift_bridgeObjectRelease(v8);
  swift_bridgeObjectRelease(v4);
  if ((v9 & 1) != 0)
  {
LABEL_15:
    v24 = *(_QWORD **)(v0 + 120);
    v25 = *(uint64_t **)(v0 + 104);
    v26 = v24[3];
    v27 = v24[4];
    sub_66898(v24, v26);
    v28 = (*(uint64_t (**)(uint64_t, uint64_t))(v27 + 8))(v26, v27);
    v25[3] = (uint64_t)&type metadata for String;
    *v25 = v28;
    v25[1] = v29;
    goto LABEL_16;
  }
  v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(AEAssetActivityItemProviderPropertyStoreId);
  v12 = v11;
  v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(v1);
  if (v10 == v13 && v12 == v14)
  {
    swift_bridgeObjectRelease_n(v12, 2);
    goto LABEL_18;
  }
  v16 = v14;
  v17 = _stringCompareWithSmolCheck(_:_:expecting:)(v10, v12, v13, v14, 0);
  swift_bridgeObjectRelease(v16);
  swift_bridgeObjectRelease(v12);
  if ((v17 & 1) != 0)
  {
LABEL_18:
    v32 = *(_QWORD **)(v0 + 120);
    v33 = v32[3];
    v34 = v32[4];
    sub_66898(v32, v33);
    v35 = (*(uint64_t (**)(uint64_t, uint64_t))(v34 + 288))(v33, v34);
LABEL_19:
    v37 = *(_QWORD *)(v0 + 104);
    if (!v36)
    {
LABEL_26:
      *(_OWORD *)v37 = 0u;
      *(_OWORD *)(v37 + 16) = 0u;
      goto LABEL_16;
    }
    *(_QWORD *)(v37 + 24) = &type metadata for String;
    *(_QWORD *)v37 = v35;
    *(_QWORD *)(v37 + 8) = v36;
LABEL_16:
    v30 = *(_QWORD *)(v0 + 128);
    swift_task_dealloc(*(_QWORD *)(v0 + 152));
    swift_task_dealloc(v30);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(AEAssetActivityItemProviderPropertyStoreUrl);
  v20 = v19;
  v22 = static String._unconditionallyBridgeFromObjectiveC(_:)(v1);
  v23 = v21;
  if (v18 == v22 && v20 == v21)
    goto LABEL_13;
  v38 = _stringCompareWithSmolCheck(_:_:expecting:)(v18, v20, v22, v21, 0);
  swift_bridgeObjectRelease(v23);
  swift_bridgeObjectRelease(v20);
  if ((v38 & 1) != 0)
    goto LABEL_22;
  v53 = static String._unconditionallyBridgeFromObjectiveC(_:)(AEAssetActivityItemProviderPropertyStoreShortUrl);
  v20 = v54;
  v56 = static String._unconditionallyBridgeFromObjectiveC(_:)(v1);
  v57 = v55;
  if (v53 == v56 && v20 == v55)
  {
LABEL_13:
    swift_bridgeObjectRelease_n(v20, 2);
    goto LABEL_22;
  }
  v58 = _stringCompareWithSmolCheck(_:_:expecting:)(v53, v20, v56, v55, 0);
  swift_bridgeObjectRelease(v57);
  swift_bridgeObjectRelease(v20);
  if ((v58 & 1) != 0)
  {
LABEL_22:
    v39 = *(_QWORD **)(v0 + 120);
    v40 = v39[3];
    v41 = v39[4];
    sub_66898(v39, v40);
    v42 = (*(uint64_t (**)(uint64_t, uint64_t))(v41 + 264))(v40, v41);
    if (v43)
    {
      v44 = v43;
      v45 = *(_QWORD *)(v0 + 136);
      v46 = *(_QWORD *)(v0 + 144);
      v47 = *(_QWORD *)(v0 + 128);
      URL.init(string:)(v42);
      swift_bridgeObjectRelease(v44);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v46 + 48))(v47, 1, v45) != 1)
      {
        v48 = *(_QWORD *)(v0 + 152);
        v49 = *(_QWORD *)(v0 + 136);
        v50 = *(_QWORD **)(v0 + 104);
        v51 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 144) + 32);
        v51(v48, *(_QWORD *)(v0 + 128), v49);
        v50[3] = v49;
        v52 = sub_668BC(v50);
        v51((uint64_t)v52, v48, v49);
        goto LABEL_16;
      }
      sub_5E09C(*(_QWORD *)(v0 + 128), &qword_321470);
    }
    goto LABEL_25;
  }
  v59 = static String._unconditionallyBridgeFromObjectiveC(_:)(AEAssetActivityItemProviderPropertyBookPath);
  v61 = v60;
  v63 = static String._unconditionallyBridgeFromObjectiveC(_:)(v1);
  v64 = v62;
  if (v59 == v63 && v61 == v62)
  {
    swift_bridgeObjectRelease_n(v61, 2);
LABEL_35:
    v66 = *(_QWORD **)(v0 + 120);
    v67 = v66[3];
    v68 = v66[4];
    sub_66898(v66, v67);
    v35 = (*(uint64_t (**)(uint64_t, uint64_t))(v68 + 208))(v67, v68);
    goto LABEL_19;
  }
  v65 = _stringCompareWithSmolCheck(_:_:expecting:)(v59, v61, v63, v62, 0);
  swift_bridgeObjectRelease(v64);
  swift_bridgeObjectRelease(v61);
  if ((v65 & 1) != 0)
    goto LABEL_35;
  v69 = static String._unconditionallyBridgeFromObjectiveC(_:)(AEAssetActivityItemProviderPropertyEpubId);
  v71 = v70;
  v73 = static String._unconditionallyBridgeFromObjectiveC(_:)(v1);
  v74 = v72;
  if (v69 == v73 && v71 == v72)
  {
    swift_bridgeObjectRelease_n(v71, 2);
LABEL_40:
    v76 = *(_QWORD **)(v0 + 120);
    v77 = v76[3];
    v78 = v76[4];
    sub_66898(v76, v77);
    v35 = (*(uint64_t (**)(uint64_t, uint64_t))(v78 + 64))(v77, v78);
    goto LABEL_19;
  }
  v75 = _stringCompareWithSmolCheck(_:_:expecting:)(v69, v71, v73, v72, 0);
  swift_bridgeObjectRelease(v74);
  swift_bridgeObjectRelease(v71);
  if ((v75 & 1) != 0)
    goto LABEL_40;
  v79 = static String._unconditionallyBridgeFromObjectiveC(_:)(AEAssetActivityItemProviderPropertyAssetCover);
  v81 = v80;
  v83 = static String._unconditionallyBridgeFromObjectiveC(_:)(v1);
  v84 = v82;
  if (v79 == v83 && v81 == v82)
  {
    swift_bridgeObjectRelease_n(v81, 2);
    goto LABEL_45;
  }
  v85 = _stringCompareWithSmolCheck(_:_:expecting:)(v79, v81, v83, v82, 0);
  swift_bridgeObjectRelease(v84);
  swift_bridgeObjectRelease(v81);
  if ((v85 & 1) == 0)
  {
    v98 = static String._unconditionallyBridgeFromObjectiveC(_:)(AEAssetActivityItemProviderPropertyPreviewAssetCoverFuture);
    v100 = v99;
    v260 = v1;
    v102 = static String._unconditionallyBridgeFromObjectiveC(_:)(v1);
    v103 = v101;
    if (v98 == v102 && v100 == v101)
    {
      swift_bridgeObjectRelease_n(v100, 2);
      goto LABEL_53;
    }
    v104 = _stringCompareWithSmolCheck(_:_:expecting:)(v98, v100, v102, v101, 0);
    swift_bridgeObjectRelease(v103);
    swift_bridgeObjectRelease(v100);
    if ((v104 & 1) != 0)
    {
LABEL_53:
      v86 = (_QWORD *)(v0 + 16);
      v105 = *(_QWORD **)(v0 + 120);
      v106 = v105[3];
      v107 = v105[4];
      sub_66898(v105, v106);
      v108 = (*(unsigned __int8 (**)(uint64_t, uint64_t))(v107 + 16))(v106, v107);
      sub_5E0D8((uint64_t)v105, v0 + 16);
      if (v108 != 4)
      {
        v109 = *(_QWORD *)(v0 + 40);
        v110 = *(_QWORD *)(v0 + 48);
        sub_66898((_QWORD *)(v0 + 16), v109);
        v111 = (*(unsigned __int8 (**)(uint64_t, uint64_t))(v110 + 16))(v109, v110);
        _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((_QWORD *)(v0 + 16));
        if (v111 != 5)
        {
          v113 = v105[3];
          v112 = v105[4];
          sub_66898(*(_QWORD **)(v0 + 120), v113);
          v114 = (*(uint64_t (**)(uint64_t, uint64_t))(v112 + 48))(v113, v112);
          if (v114)
          {
            v115 = v114;
            v116 = *(uint64_t **)(v0 + 104);
            v116[3] = sub_5C154(&qword_321B80);
            *v116 = v115;
            goto LABEL_16;
          }
        }
        goto LABEL_25;
      }
      goto LABEL_46;
    }
    v117 = static String._unconditionallyBridgeFromObjectiveC(_:)(AEAssetActivityItemProviderPropertyTitle);
    v119 = v118;
    v121 = static String._unconditionallyBridgeFromObjectiveC(_:)(v260);
    v122 = v120;
    if (v117 == v121 && v119 == v120)
    {
      swift_bridgeObjectRelease_n(v119, 2);
LABEL_61:
      v124 = *(_QWORD **)(v0 + 120);
      v125 = v124[3];
      v126 = v124[4];
      sub_66898(v124, v125);
      v35 = (*(uint64_t (**)(uint64_t, uint64_t))(v126 + 312))(v125, v126);
      goto LABEL_19;
    }
    v123 = _stringCompareWithSmolCheck(_:_:expecting:)(v117, v119, v121, v120, 0);
    swift_bridgeObjectRelease(v122);
    swift_bridgeObjectRelease(v119);
    if ((v123 & 1) != 0)
      goto LABEL_61;
    v127 = static String._unconditionallyBridgeFromObjectiveC(_:)(AEAssetActivityItemProviderPropertyLanguage);
    v129 = v128;
    v131 = static String._unconditionallyBridgeFromObjectiveC(_:)(v260);
    v132 = v130;
    if (v127 == v131 && v129 == v130)
    {
      swift_bridgeObjectRelease_n(v129, 2);
LABEL_66:
      v134 = *(_QWORD **)(v0 + 120);
      v135 = v134[3];
      v136 = v134[4];
      sub_66898(v134, v135);
      v35 = (*(uint64_t (**)(uint64_t, uint64_t))(v136 + 184))(v135, v136);
      goto LABEL_19;
    }
    v133 = _stringCompareWithSmolCheck(_:_:expecting:)(v127, v129, v131, v130, 0);
    swift_bridgeObjectRelease(v132);
    swift_bridgeObjectRelease(v129);
    if ((v133 & 1) != 0)
      goto LABEL_66;
    v137 = static String._unconditionallyBridgeFromObjectiveC(_:)(AEAssetActivityItemProviderPropertyAuthor);
    v139 = v138;
    v141 = static String._unconditionallyBridgeFromObjectiveC(_:)(v260);
    v142 = v140;
    if (v137 == v141 && v139 == v140)
    {
      swift_bridgeObjectRelease_n(v139, 2);
LABEL_71:
      v144 = *(_QWORD **)(v0 + 120);
      v145 = v144[3];
      v146 = v144[4];
      sub_66898(v144, v145);
      v35 = (*(uint64_t (**)(uint64_t, uint64_t))(v146 + 32))(v145, v146);
      goto LABEL_19;
    }
    v143 = _stringCompareWithSmolCheck(_:_:expecting:)(v137, v139, v141, v140, 0);
    swift_bridgeObjectRelease(v142);
    swift_bridgeObjectRelease(v139);
    if ((v143 & 1) != 0)
      goto LABEL_71;
    v147 = static String._unconditionallyBridgeFromObjectiveC(_:)(AEAssetActivityItemProviderPropertyVersion);
    v149 = v148;
    v151 = static String._unconditionallyBridgeFromObjectiveC(_:)(v260);
    v152 = v150;
    if (v147 == v151 && v149 == v150)
    {
      swift_bridgeObjectRelease_n(v149, 2);
LABEL_76:
      v154 = *(_QWORD **)(v0 + 120);
      v155 = v154[3];
      v156 = v154[4];
      sub_66898(v154, v155);
      v35 = (*(uint64_t (**)(uint64_t, uint64_t))(v156 + 320))(v155, v156);
      goto LABEL_19;
    }
    v153 = _stringCompareWithSmolCheck(_:_:expecting:)(v147, v149, v151, v150, 0);
    swift_bridgeObjectRelease(v152);
    swift_bridgeObjectRelease(v149);
    if ((v153 & 1) != 0)
      goto LABEL_76;
    v157 = static String._unconditionallyBridgeFromObjectiveC(_:)(AEAssetActivityItemProviderPropertyPublisherLocation);
    v159 = v158;
    v161 = static String._unconditionallyBridgeFromObjectiveC(_:)(v260);
    v162 = v160;
    if (v157 == v161 && v159 == v160)
    {
LABEL_79:
      swift_bridgeObjectRelease_n(v159, 2);
      goto LABEL_25;
    }
    v163 = _stringCompareWithSmolCheck(_:_:expecting:)(v157, v159, v161, v160, 0);
    swift_bridgeObjectRelease(v162);
    swift_bridgeObjectRelease(v159);
    if ((v163 & 1) != 0)
      goto LABEL_25;
    v164 = static String._unconditionallyBridgeFromObjectiveC(_:)(AEAssetActivityItemProviderPropertyPublisherName);
    v166 = v165;
    v168 = static String._unconditionallyBridgeFromObjectiveC(_:)(v260);
    v169 = v167;
    if (v164 == v168 && v166 == v167)
    {
      swift_bridgeObjectRelease_n(v166, 2);
    }
    else
    {
      v170 = _stringCompareWithSmolCheck(_:_:expecting:)(v164, v166, v168, v167, 0);
      swift_bridgeObjectRelease(v169);
      swift_bridgeObjectRelease(v166);
      if ((v170 & 1) == 0)
      {
        v178 = static String._unconditionallyBridgeFromObjectiveC(_:)(AEAssetActivityItemProviderPropertyPublisherYear);
        v180 = v179;
        v182 = static String._unconditionallyBridgeFromObjectiveC(_:)(v260);
        v183 = v181;
        if (v178 == v182 && v180 == v181)
        {
          swift_bridgeObjectRelease_n(v180, 2);
        }
        else
        {
          v184 = _stringCompareWithSmolCheck(_:_:expecting:)(v178, v180, v182, v181, 0);
          swift_bridgeObjectRelease(v183);
          swift_bridgeObjectRelease(v180);
          if ((v184 & 1) == 0)
          {
            v191 = static String._unconditionallyBridgeFromObjectiveC(_:)(AEAssetActivityItemProviderPropertyGenre);
            v193 = v192;
            v195 = static String._unconditionallyBridgeFromObjectiveC(_:)(v260);
            v196 = v194;
            if (v191 == v195 && v193 == v194)
            {
              swift_bridgeObjectRelease_n(v193, 2);
            }
            else
            {
              v197 = _stringCompareWithSmolCheck(_:_:expecting:)(v191, v193, v195, v194, 0);
              swift_bridgeObjectRelease(v196);
              swift_bridgeObjectRelease(v193);
              if ((v197 & 1) == 0)
              {
                v201 = static String._unconditionallyBridgeFromObjectiveC(_:)(AEAssetActivityItemProviderPropertyIsContentProtected);
                v159 = v202;
                v204 = static String._unconditionallyBridgeFromObjectiveC(_:)(v260);
                v205 = v203;
                if (v201 != v204 || v159 != v203)
                {
                  v206 = _stringCompareWithSmolCheck(_:_:expecting:)(v201, v159, v204, v203, 0);
                  swift_bridgeObjectRelease(v205);
                  swift_bridgeObjectRelease(v159);
                  if ((v206 & 1) == 0)
                  {
                    v207 = static String._unconditionallyBridgeFromObjectiveC(_:)(AEAssetActivityItemProviderPropertyIsOwned);
                    v209 = v208;
                    v211 = static String._unconditionallyBridgeFromObjectiveC(_:)(v260);
                    v212 = v210;
                    if (v207 == v211 && v209 == v210)
                    {
                      swift_bridgeObjectRelease_n(v209, 2);
                    }
                    else
                    {
                      v213 = _stringCompareWithSmolCheck(_:_:expecting:)(v207, v209, v211, v210, 0);
                      swift_bridgeObjectRelease(v212);
                      swift_bridgeObjectRelease(v209);
                      if ((v213 & 1) == 0)
                      {
                        v218 = static String._unconditionallyBridgeFromObjectiveC(_:)(AEAssetActivityItemProviderPropertyAssetType);
                        v220 = v219;
                        v222 = static String._unconditionallyBridgeFromObjectiveC(_:)(v260);
                        v223 = v221;
                        if (v218 == v222 && v220 == v221)
                        {
                          swift_bridgeObjectRelease_n(v220, 2);
                        }
                        else
                        {
                          v224 = _stringCompareWithSmolCheck(_:_:expecting:)(v218, v220, v222, v221, 0);
                          swift_bridgeObjectRelease(v223);
                          swift_bridgeObjectRelease(v220);
                          if ((v224 & 1) == 0)
                          {
                            v228 = static String._unconditionallyBridgeFromObjectiveC(_:)(AEAssetActivityItemProviderPropertyBookDescription);
                            v230 = v229;
                            v232 = static String._unconditionallyBridgeFromObjectiveC(_:)(v260);
                            v233 = v231;
                            if (v228 == v232 && v230 == v231)
                            {
                              swift_bridgeObjectRelease_n(v230, 2);
                            }
                            else
                            {
                              v234 = _stringCompareWithSmolCheck(_:_:expecting:)(v228, v230, v232, v231, 0);
                              swift_bridgeObjectRelease(v233);
                              swift_bridgeObjectRelease(v230);
                              if ((v234 & 1) == 0)
                              {
                                v238 = static String._unconditionallyBridgeFromObjectiveC(_:)(AEAssetActivityItemProviderPropertySeriesTitle);
                                v240 = v239;
                                v242 = static String._unconditionallyBridgeFromObjectiveC(_:)(v260);
                                v243 = v241;
                                if (v238 == v242 && v240 == v241)
                                {
                                  swift_bridgeObjectRelease_n(v240, 2);
                                }
                                else
                                {
                                  v244 = _stringCompareWithSmolCheck(_:_:expecting:)(v238, v240, v242, v241, 0);
                                  swift_bridgeObjectRelease(v243);
                                  swift_bridgeObjectRelease(v240);
                                  if ((v244 & 1) == 0)
                                  {
                                    if (qword_31E660 != -1)
                                      swift_once(&qword_31E660, sub_126D64);
                                    v248 = *(void **)(v0 + 112);
                                    v249 = type metadata accessor for Logger(0);
                                    sub_5240C(v249, (uint64_t)qword_3252B0);
                                    v250 = Logger.logObject.getter(v248);
                                    v251 = static os_log_type_t.fault.getter(v250);
                                    v252 = os_log_type_enabled(v250, v251);
                                    v253 = *(void **)(v0 + 112);
                                    if (v252)
                                    {
                                      v254 = (uint8_t *)swift_slowAlloc(12, -1);
                                      v255 = swift_slowAlloc(32, -1);
                                      v261 = v255;
                                      *(_DWORD *)v254 = 136315138;
                                      v256 = static String._unconditionallyBridgeFromObjectiveC(_:)(v260);
                                      v258 = v257;
                                      *(_QWORD *)(v0 + 96) = sub_57CD8(v256, v257, &v261);
                                      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 96, v0 + 104, v254 + 4, v254 + 12);
                                      swift_bridgeObjectRelease(v258);

                                      _os_log_impl(&dword_0, v250, v251, "Detected an unhandled property %s", v254, 0xCu);
                                      swift_arrayDestroy(v255, 1, (char *)&type metadata for Any + 8);
                                      swift_slowDealloc(v255, -1, -1);
                                      swift_slowDealloc(v254, -1, -1);
                                    }
                                    else
                                    {

                                    }
                                    goto LABEL_25;
                                  }
                                }
                                v245 = *(_QWORD **)(v0 + 120);
                                v246 = v245[3];
                                v247 = v245[4];
                                sub_66898(v245, v246);
                                v35 = (*(uint64_t (**)(uint64_t, uint64_t))(v247 + 232))(v246, v247);
                                goto LABEL_19;
                              }
                            }
                            v235 = *(_QWORD **)(v0 + 120);
                            v236 = v235[3];
                            v237 = v235[4];
                            sub_66898(v235, v236);
                            v35 = (*(uint64_t (**)(uint64_t, uint64_t))(v237 + 280))(v236, v237);
                            goto LABEL_19;
                          }
                        }
                        v225 = *(_QWORD **)(v0 + 120);
                        v226 = v225[3];
                        v227 = v225[4];
                        sub_66898(v225, v226);
                        v35 = (*(uint64_t (**)(uint64_t, uint64_t))(v227 + 24))(v226, v227);
                        goto LABEL_19;
                      }
                    }
                    v214 = *(_QWORD **)(v0 + 120);
                    v215 = v214[3];
                    v216 = v214[4];
                    sub_66898(v214, v215);
                    v217 = (*(uint64_t (**)(uint64_t, uint64_t))(v216 + 152))(v215, v216);
                    v37 = *(_QWORD *)(v0 + 104);
                    if (v217 != 2)
                    {
                      *(_QWORD *)(v37 + 24) = &type metadata for Bool;
                      *(_BYTE *)v37 = v217 & 1;
                      goto LABEL_16;
                    }
                    goto LABEL_26;
                  }
LABEL_25:
                  v37 = *(_QWORD *)(v0 + 104);
                  goto LABEL_26;
                }
                goto LABEL_79;
              }
            }
            v198 = *(_QWORD **)(v0 + 120);
            v199 = v198[3];
            v200 = v198[4];
            sub_66898(v198, v199);
            v35 = (*(uint64_t (**)(uint64_t, uint64_t))(v200 + 80))(v199, v200);
            goto LABEL_19;
          }
        }
        v185 = *(_QWORD **)(v0 + 120);
        v186 = v185[3];
        v187 = v185[4];
        sub_66898(v185, v186);
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v187 + 216))(&v261, v186, v187);
        v188 = v262;
        if (v262 == 1)
          goto LABEL_25;
        v177 = v263;
        v174 = v264;
        v189 = v261;
        swift_bridgeObjectRetain(v264);
        sub_A641C(v189, v188, v177, v174);
        if (!v174)
          goto LABEL_25;
LABEL_94:
        v190 = *(uint64_t **)(v0 + 104);
        v190[3] = (uint64_t)&type metadata for String;
        *v190 = v177;
        v190[1] = v174;
        goto LABEL_16;
      }
    }
    v171 = *(_QWORD **)(v0 + 120);
    v172 = v171[3];
    v173 = v171[4];
    sub_66898(v171, v172);
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v173 + 216))(&v261, v172, v173);
    v174 = v262;
    if (v262 == 1)
      goto LABEL_25;
    v176 = v263;
    v175 = v264;
    v177 = v261;
    swift_bridgeObjectRetain(v262);
    sub_A641C(v177, v174, v176, v175);
    if (!v174)
      goto LABEL_25;
    goto LABEL_94;
  }
LABEL_45:
  v86 = (_QWORD *)(v0 + 56);
  v87 = *(_QWORD **)(v0 + 120);
  v88 = v87[3];
  v89 = v87[4];
  sub_66898(v87, v88);
  v90 = (*(unsigned __int8 (**)(uint64_t, uint64_t))(v89 + 16))(v88, v89);
  sub_5E0D8((uint64_t)v87, v0 + 56);
  if (v90 == 4)
  {
LABEL_46:
    _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(v86);
    goto LABEL_25;
  }
  v91 = *(_QWORD *)(v0 + 80);
  v92 = *(_QWORD *)(v0 + 88);
  sub_66898((_QWORD *)(v0 + 56), v91);
  v93 = (*(unsigned __int8 (**)(uint64_t, uint64_t))(v92 + 16))(v91, v92);
  _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((_QWORD *)(v0 + 56));
  if (v93 == 5)
    goto LABEL_25;
  v95 = v87[3];
  v94 = v87[4];
  sub_66898(*(_QWORD **)(v0 + 120), v95);
  v96 = *(int **)(v94 + 40);
  v259 = (uint64_t (*)(uint64_t, uint64_t))((char *)v96 + *v96);
  v97 = (_QWORD *)swift_task_alloc(v96[1]);
  *(_QWORD *)(v0 + 160) = v97;
  *v97 = v0;
  v97[1] = sub_A57AC;
  return v259(v95, v94);
}

uint64_t sub_A57AC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 160);
  *(_QWORD *)(*(_QWORD *)v1 + 168) = a1;
  swift_task_dealloc(v2);
  return swift_task_switch(sub_A5808, 0, 0);
}

uint64_t sub_A5808()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 168);
  v2 = *(_QWORD *)(v0 + 104);
  if (v1)
  {
    *(_QWORD *)(v2 + 24) = sub_5C194(0, &qword_321B88, UIImage_ptr);
    *(_QWORD *)v2 = v1;
  }
  else
  {
    *(_OWORD *)v2 = 0u;
    *(_OWORD *)(v2 + 16) = 0u;
  }
  v3 = *(_QWORD *)(v0 + 128);
  swift_task_dealloc(*(_QWORD *)(v0 + 152));
  swift_task_dealloc(v3);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_A587C()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v5[5];
  char v6;

  v1 = v0 + 7;
  v2 = v0[10];
  v3 = v0[11];
  sub_66898(v1, v2);
  ContextActionDataProtocol.selectionMode.getter(v2, v3, (uint64_t)v5);
  LOBYTE(v2) = v6;
  sub_A4430(v5);
  if ((v2 & 1) != 0)
    return 0;
  else
    return sub_17EB50();
}

uint64_t sub_A58F4@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v2;

  a1[3] = sub_5C154(&qword_321A58);
  a1[4] = sub_A6308();
  v2 = sub_668BC(a1);
  return sub_A5938((uint64_t)v2);
}

uint64_t sub_A5938@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  uint64_t v31;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  __int128 v50;
  __int128 v51;
  uint64_t v52;
  _QWORD v53[3];
  uint64_t v54;
  uint64_t v55;

  v2 = v1;
  v49 = a1;
  v3 = sub_5C154((uint64_t *)&unk_326120);
  __chkstk_darwin(v3);
  v5 = (char *)&v46 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_5C154(&qword_321470);
  __chkstk_darwin(v6);
  v8 = (char *)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for URL(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v46 - v14;
  v16 = v1[10];
  v17 = v1[11];
  sub_66898(v1 + 7, v16);
  v18 = (*(uint64_t (**)(uint64_t, uint64_t))(v17 + 8))(v16, v17);
  v19 = v18;
  if (!*(_QWORD *)(v18 + 16))
  {
    v52 = 0;
    v50 = 0u;
    v51 = 0u;
    swift_bridgeObjectRelease(v18);
    goto LABEL_8;
  }
  sub_5E0D8(v18 + 32, (uint64_t)&v50);
  swift_bridgeObjectRelease(v19);
  if (!*((_QWORD *)&v51 + 1))
  {
LABEL_8:
    sub_5E09C((uint64_t)&v50, (uint64_t *)&unk_326130);
    goto LABEL_9;
  }
  sub_5DC98(&v50, (uint64_t)v53);
  v20 = v54;
  v21 = v55;
  sub_66898(v53, v54);
  v22 = (*(uint64_t (**)(uint64_t, uint64_t))(v21 + 264))(v20, v21);
  if (v23)
  {
    v24 = v23;
    URL.init(string:)(v22);
    swift_bridgeObjectRelease(v24);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) != 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v15, v8, v9);
      v33 = sub_A6450(v53, (uint64_t)v15);
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v12, v15, v9);
      v34 = _s11BookStoreUI17ContextActionItemPAAE7subject3for05SwiftC04TextVSgAA0D17AssetInfoProtocol_p_tF_0(v53);
      v47 = v35;
      v48 = v34;
      v46 = v36;
      v38 = v37;
      *((_QWORD *)&v51 + 1) = sub_5C194(0, (unint64_t *)&qword_326140, LPLinkMetadata_ptr);
      *(_QWORD *)&v50 = v33;
      v39 = v33;
      SharePreview<>.init(metadata:)(&v50);
      v40 = sub_5C154(&qword_321050);
      v41 = sub_67060((unint64_t *)&unk_326150, &qword_321050, (uint64_t)&protocol conformance descriptor for Label<A, B>);
      v42 = sub_A6FF4();
      v45 = v2;
      v43 = v49;
      ShareLink.init<A>(item:subject:message:preview:label:)(v12, v48, v47, v46, v38, 0, 0, 0, 0, v5, sub_A6FEC, v45, &type metadata for Never, &type metadata for Never, v40, v9, &protocol witness table for Never, &protocol witness table for Never, v41,
        v42);

      (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v9);
      v44 = sub_5C154(&qword_321A70);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 56))(v43, 0, 1, v44);
      return _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(v53);
    }
    sub_5E09C((uint64_t)v8, &qword_321470);
  }
  _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(v53);
LABEL_9:
  v25 = v49;
  if (qword_31E580 != -1)
    swift_once(&qword_31E580, sub_126680);
  v26 = type metadata accessor for Logger(0);
  v27 = sub_5240C(v26, (uint64_t)qword_325028);
  v28 = Logger.logObject.getter(v27);
  v29 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v28, v29))
  {
    v30 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v30 = 0;
    _os_log_impl(&dword_0, v28, v29, "Can't create ShareLink without asset info", v30, 2u);
    swift_slowDealloc(v30, -1, -1);
  }

  v31 = sub_5C154(&qword_321A70);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v25, 1, 1, v31);
}

uint64_t sub_A5D64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _BYTE v17[16];
  _QWORD v18[5];
  char v19;

  v4 = sub_5C154(&qword_321050);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = &v17[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = *(_QWORD *)(a1 + 80);
  v9 = *(_QWORD *)(a1 + 88);
  sub_66898((_QWORD *)(a1 + 56), v8);
  ContextActionDataProtocol.selectionMode.getter(v8, v9, (uint64_t)v18);
  LOBYTE(v8) = v19;
  sub_A4430(v18);
  if ((v8 & 1) != 0)
  {
    v10 = 0;
    v11 = 0xE000000000000000;
  }
  else
  {
    v10 = sub_17EB50();
  }
  v18[0] = v10;
  v18[1] = v11;
  v17[15] = *(_BYTE *)(a1 + 144);
  v12 = sub_22F3CC();
  v14 = v13;
  v15 = sub_668F8();
  Label<>.init<A>(_:systemImage:)(v18, v12, v14, &type metadata for String, v15);
  return (*(uint64_t (**)(uint64_t, _BYTE *, uint64_t))(v5 + 32))(a2, v7, v4);
}

uint64_t ShareActionItem.deinit()
{
  uint64_t v0;

  _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((_QWORD *)(v0 + 16));
  _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((_QWORD *)(v0 + 56));

  _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((_QWORD *)(v0 + 104));
  return v0;
}

uint64_t ShareActionItem.__deallocating_deinit()
{
  uint64_t v0;

  _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((_QWORD *)(v0 + 16));
  _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((_QWORD *)(v0 + 56));

  _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((_QWORD *)(v0 + 104));
  return swift_deallocClassInstance(v0, 145, 7);
}

void sub_A5EFC(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(*(_QWORD *)v1 + 144);
}

uint64_t sub_A5F0C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v5[5];
  char v6;

  v1 = (_QWORD *)(*(_QWORD *)v0 + 56);
  v2 = *(_QWORD *)(*(_QWORD *)v0 + 80);
  v3 = *(_QWORD *)(*(_QWORD *)v0 + 88);
  sub_66898(v1, v2);
  ContextActionDataProtocol.selectionMode.getter(v2, v3, (uint64_t)v5);
  LOBYTE(v2) = v6;
  sub_A4430(v5);
  if ((v2 & 1) != 0)
    return 0;
  else
    return sub_17EB50();
}

uint64_t sub_A5F88()
{
  return sub_A4324() & 1;
}

uint64_t sub_A5FAC@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v2;

  a1[3] = sub_5C154(&qword_321A58);
  a1[4] = sub_A6308();
  v2 = sub_668BC(a1);
  return sub_A5938((uint64_t)v2);
}

uint64_t sub_A5FF4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v1 + 16) = *v0;
  v2 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v1 + 24) = static MainActor.shared.getter(v2);
  v3 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor);
  return swift_task_switch(sub_A6064, v3, v4);
}

uint64_t sub_A6064()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD **)(v0 + 16);
  swift_release(*(_QWORD *)(v0 + 24));
  v2 = v1[5];
  v3 = v1[6];
  sub_66898(v1 + 2, v2);
  v4 = swift_allocObject(&unk_2EA4C0, 32, 7);
  *(_QWORD *)(v4 + 16) = &unk_321B90;
  *(_QWORD *)(v4 + 24) = v1;
  swift_retain(v1);
  ContextMenuPresentationContextProtocol.showShareSheet(with:using:)(v1 + 7, (uint64_t)&unk_321B98, v4, v2, v3);
  swift_release(v4);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_A6110@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;

  return sub_5E0D8(*v1 + 16, a1);
}

uint64_t sub_A6130@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;

  return sub_5E0D8(*v1 + 56, a1);
}

void *sub_A6150()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(*(_QWORD *)v0 + 96);
  v2 = v1;
  return v1;
}

uint64_t sub_A6178@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;

  return sub_5E0D8(*v1 + 104, a1);
}

uint64_t sub_A6198@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = (*(uint64_t (**)(void))(v1 + 120))();
  *a1 = result;
  return result;
}

uint64_t sub_A61C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;

  v9 = (_QWORD *)swift_task_alloc(dword_321A3C);
  *(_QWORD *)(v5 + 16) = v9;
  *v9 = v5;
  v9[1] = sub_7BFF8;
  v10 = (_QWORD *)swift_task_alloc(dword_321AB4);
  v9[2] = v10;
  *v10 = v9;
  v10[1] = sub_7BFF8;
  return sub_A4718(a1, v11, v12, a4, a5);
}

uint64_t sub_A6244()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_A6268(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  int *v12;
  _QWORD *v13;

  v12 = *(int **)(v5 + 16);
  v13 = (_QWORD *)swift_task_alloc(dword_321A4C);
  *(_QWORD *)(v6 + 16) = v13;
  *v13 = v6;
  v13[1] = sub_7BFF8;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, int *))((char *)&dword_321A48
                                                                                     + dword_321A48))(a1, a2, a3, a4, a5, v12);
}

unint64_t sub_A6308()
{
  unint64_t result;
  uint64_t v1;

  result = qword_321A60;
  if (!qword_321A60)
  {
    v1 = sub_667D0(&qword_321A58);
    sub_67060(&qword_321A68, &qword_321A70, (uint64_t)&protocol conformance descriptor for ShareLink<A, B, C, D>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v1);
    atomic_store(result, (unint64_t *)&qword_321A60);
  }
  return result;
}

uint64_t type metadata accessor for ShareActionItem()
{
  return objc_opt_self(_TtC11BookStoreUI15ShareActionItem);
}

uint64_t method lookup function for ShareActionItem(uint64_t a1, uint64_t a2)
{
  return swift_lookUpClassMethod(a1, a2, &nominal type descriptor for ShareActionItem);
}

uint64_t dispatch thunk of ShareActionItem.__allocating_init(data:context:tracker:figaroProvider:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t dispatch thunk of ShareActionItem.handle()()
{
  uint64_t v0;
  uint64_t v1;
  int *v2;
  _QWORD *v3;
  uint64_t (*v5)(void);

  v2 = *(int **)(*(_QWORD *)v0 + 136);
  v5 = (uint64_t (*)(void))((char *)v2 + *v2);
  v3 = (_QWORD *)swift_task_alloc(v2[1]);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_64780;
  return v5();
}

uint64_t dispatch thunk of ShareActionItem.menuItemView.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

uint64_t sub_A641C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;

  if (a2 != 1)
  {
    swift_bridgeObjectRelease(a2);
    return swift_bridgeObjectRelease(a4);
  }
  return result;
}

id sub_A6450(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  int v22;
  BOOL v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  void *v35;
  uint64_t (*v36)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  id v41;
  NSURL *v42;
  void *v43;
  void *v44;
  NSString v45;
  id v46;
  _BYTE *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void (*v51)(_BYTE *, uint64_t);
  NSString v52;
  uint64_t v53;
  void *v54;
  id v55;
  id v56;
  uint64_t v57;
  uint64_t v58;
  id v59;
  NSString v60;
  objc_class *v61;
  id v62;
  NSString v63;
  uint64_t v64;
  void *v65;
  NSString v66;
  id v67;
  uint64_t v68;
  NSObject *v69;
  os_log_type_t v70;
  uint8_t *v71;
  uint64_t v72;
  uint64_t v73;
  _BYTE *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  NSString v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  id v84;
  NSString v85;
  id v86;
  id v87;
  _BYTE v89[12];
  int v90;
  os_log_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  _BYTE *v99;
  uint64_t v100;
  uint64_t v101;
  _QWORD aBlock[3];
  void *v103;
  uint64_t (*v104)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v105;
  __int128 v106[2];

  v100 = type metadata accessor for UTType(0);
  v97 = *(_QWORD *)(v100 - 8);
  __chkstk_darwin(v100);
  v99 = &v89[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = type metadata accessor for URL(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = &v89[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = a1[3];
  v10 = a1[4];
  sub_66898(a1, v9);
  v98 = (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 312))(v9, v10);
  v12 = v11;
  v13 = a1[3];
  v14 = a1[4];
  sub_66898(a1, v13);
  v94 = (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 32))(v13, v14);
  v16 = v15;
  if (qword_31E580 != -1)
    swift_once(&qword_31E580, sub_126680);
  v17 = type metadata accessor for Logger(0);
  v18 = sub_5240C(v17, (uint64_t)qword_325028);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v6 + 16))(v8, a2, v5);
  sub_5E0D8((uint64_t)a1, (uint64_t)aBlock);
  swift_bridgeObjectRetain_n(v16, 2);
  swift_bridgeObjectRetain_n(v12, 2);
  v93 = v18;
  v20 = Logger.logObject.getter(v19);
  v21 = static os_log_type_t.debug.getter();
  v22 = v21;
  v23 = os_log_type_enabled(v20, v21);
  v95 = a2;
  v96 = v16;
  if (v23)
  {
    v24 = swift_slowAlloc(42, -1);
    v25 = swift_slowAlloc(128, -1);
    v92 = v25;
    *(_QWORD *)&v106[0] = v25;
    *(_DWORD *)v24 = 136315906;
    v91 = v20;
    v90 = v22;
    v26 = URL.absoluteString.getter(v25);
    v28 = v27;
    v101 = sub_57CD8(v26, v27, (uint64_t *)v106);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v101, aBlock, v24 + 4, v24 + 12);
    swift_bridgeObjectRelease(v28);
    (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
    *(_WORD *)(v24 + 12) = 2080;
    swift_bridgeObjectRetain(v12);
    v29 = Optional<A>.description.getter(v98, v12);
    v31 = v30;
    swift_bridgeObjectRelease(v12);
    v101 = sub_57CD8(v29, v31, (uint64_t *)v106);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v101, aBlock, v24 + 14, v24 + 22);
    swift_bridgeObjectRelease_n(v12, 2);
    swift_bridgeObjectRelease(v31);
    *(_WORD *)(v24 + 22) = 2080;
    swift_bridgeObjectRetain(v16);
    v32 = Optional<A>.description.getter(v94, v16);
    v34 = v33;
    swift_bridgeObjectRelease(v16);
    v101 = sub_57CD8(v32, v34, (uint64_t *)v106);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v101, aBlock, v24 + 24, v24 + 32);
    swift_bridgeObjectRelease_n(v16, 2);
    swift_bridgeObjectRelease(v34);
    *(_WORD *)(v24 + 32) = 2080;
    v35 = v103;
    v36 = v104;
    sub_66898(aBlock, (uint64_t)v103);
    v37 = (*((uint64_t (**)(void *, uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t)))v36 + 1))(v35, v36);
    v39 = v38;
    v101 = sub_57CD8(v37, v38, (uint64_t *)v106);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v101, aBlock, v24 + 34, v24 + 42);
    swift_bridgeObjectRelease(v39);
    _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(aBlock);
    v20 = v91;
    _os_log_impl(&dword_0, v91, (os_log_type_t)v90, "Instantiating shareLinkMetadata with %s, %s, %s for %s", (uint8_t *)v24, 0x2Au);
    v40 = v92;
    swift_arrayDestroy(v92, 4, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v40, -1, -1);
    swift_slowDealloc(v24, -1, -1);
  }
  else
  {
    (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
    swift_bridgeObjectRelease_n(v16, 2);
    swift_bridgeObjectRelease_n(v12, 2);
    _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(aBlock);
  }

  v41 = objc_msgSend(objc_allocWithZone((Class)LPLinkMetadata), "init");
  URL._bridgeToObjectiveC()(v42);
  v44 = v43;
  objc_msgSend(v41, "setURL:", v43);

  if (v12)
  {
    swift_bridgeObjectRetain(v12);
    v45 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v12);
  }
  else
  {
    v45 = 0;
  }
  objc_msgSend(v41, "setTitle:", v45);

  v46 = objc_msgSend(objc_allocWithZone((Class)NSItemProvider), "init");
  v47 = v99;
  v48 = static UTType.png.getter();
  UTType.identifier.getter(v48);
  v50 = v49;
  v51 = *(void (**)(_BYTE *, uint64_t))(v97 + 8);
  v51(v47, v100);
  v52 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v50);
  sub_5E0D8((uint64_t)a1, (uint64_t)v106);
  v53 = swift_allocObject(&unk_2EA4E8, 56, 7);
  sub_5DC98(v106, v53 + 16);
  v104 = sub_A7060;
  v105 = v53;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1565E8;
  v103 = &unk_2EA500;
  v54 = _Block_copy(aBlock);
  swift_release(v105);
  objc_msgSend(v46, "registerItemForTypeIdentifier:loadHandler:", v52, v54);
  _Block_release(v54);

  v55 = objc_allocWithZone((Class)LPImage);
  v98 = (uint64_t)v46;
  v56 = objc_msgSend(v55, "initWithItemProvider:properties:placeholderImage:", v46, 0, 0);
  v57 = a1[3];
  v58 = a1[4];
  sub_66898(a1, v57);
  switch((*(unsigned __int8 (**)(uint64_t, uint64_t))(v58 + 16))(v57, v58))
  {
    case 1u:
    case 6u:
      swift_bridgeObjectRelease(v96);
      v59 = objc_msgSend(objc_allocWithZone((Class)LPFileMetadata), "init");
      if (v12)
      {
        v60 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease(v12);
      }
      else
      {
        v60 = 0;
      }
      objc_msgSend(v59, "setName:", v60);

      objc_msgSend(v59, "setThumbnail:", v56);
      v72 = a1[3];
      v73 = a1[4];
      sub_66898(a1, v72);
      if ((*(unsigned __int8 (**)(uint64_t, uint64_t))(v73 + 16))(v72, v73) == 1)
      {
        v74 = v99;
        v75 = static UTType.pdf.getter();
      }
      else
      {
        v76 = a1[3];
        v77 = a1[4];
        sub_66898(a1, v76);
        if ((*(unsigned __int8 (**)(uint64_t, uint64_t))(v77 + 16))(v76, v77) != 6)
          goto LABEL_29;
        v74 = v99;
        v75 = static UTType.text.getter();
      }
      UTType.identifier.getter(v75);
      v79 = v78;
      v51(v74, v100);
      v80 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v79);
      objc_msgSend(v59, "setType:", v80);

LABEL_29:
      v81 = URL.isFileURL.getter();
      if ((v81 & 1) != 0)
      {
        URL.absoluteString.getter(v81);
        v83 = v82;
        v84 = objc_allocWithZone((Class)NSURL);
        v85 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease(v83);
        v86 = objc_msgSend(v84, "initFileURLWithPath:", v85);

        aBlock[0] = 0;
        v87 = objc_msgSend(v86, "bu_fileAllocatedSizeWithError:", aBlock);
        if (!aBlock[0])
          objc_msgSend(v59, "setSize:", v87);

      }
      v67 = v59;
      objc_msgSend(v41, "setSpecialization:", v67);

      v65 = (void *)v98;
LABEL_34:

      return v41;
    case 2u:
    case 7u:
      v61 = (objc_class *)LPiTunesMediaBookMetadata;
      goto LABEL_14;
    case 3u:
      v61 = (objc_class *)LPiTunesMediaAudioBookMetadata;
LABEL_14:
      v62 = objc_msgSend(objc_allocWithZone(v61), "init");
      if (v12)
      {
        v63 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease(v12);
      }
      else
      {
        v63 = 0;
      }
      v64 = v96;
      v65 = (void *)v98;
      objc_msgSend(v62, "setName:", v63);

      objc_msgSend(v62, "setArtwork:", v56);
      if (v64)
      {
        v66 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease(v64);
      }
      else
      {
        v66 = 0;
      }
      objc_msgSend(v62, "setAuthor:", v66);

      v67 = v62;
      objc_msgSend(v41, "setSpecialization:", v67);

      goto LABEL_34;
    default:
      swift_bridgeObjectRelease(v96);
      v68 = swift_bridgeObjectRelease(v12);
      v69 = Logger.logObject.getter(v68);
      v70 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v69, v70))
      {
        v71 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v71 = 0;
        _os_log_impl(&dword_0, v69, v70, "SharePreview metadata contains no specialization data", v71, 2u);
        swift_slowDealloc(v71, -1, -1);
        v67 = (id)v98;
        v65 = v69;
      }
      else
      {
        v67 = v69;
        v65 = (void *)v98;
      }
      goto LABEL_34;
  }
}

uint64_t _s11BookStoreUI17ContextActionItemPAAE7subject3for05SwiftC04TextVSgAA0D17AssetInfoProtocol_p_tF_0(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v2 = a1[3];
  v3 = a1[4];
  sub_66898(a1, v2);
  v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 312))(v2, v3);
  v6 = v5;
  if (v5)
  {
    v7 = v4;
    v8 = a1[3];
    v9 = a1[4];
    sub_66898(a1, v8);
    v10 = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 32))(v8, v9);
    if (v11)
    {
      v12 = v10;
      v13 = v11;
      v14 = sub_17EB50();
      v16 = v15;
      v17 = sub_5C154(&qword_3210B0);
      v18 = swift_allocObject(v17, 112, 7);
      *(_OWORD *)(v18 + 16) = xmmword_255F00;
      *(_QWORD *)(v18 + 56) = &type metadata for String;
      v19 = sub_939DC();
      *(_QWORD *)(v18 + 32) = v7;
      *(_QWORD *)(v18 + 40) = v6;
      *(_QWORD *)(v18 + 96) = &type metadata for String;
      *(_QWORD *)(v18 + 104) = v19;
      *(_QWORD *)(v18 + 64) = v19;
      *(_QWORD *)(v18 + 72) = v12;
      *(_QWORD *)(v18 + 80) = v13;
      v20 = v14;
    }
    else
    {
      v21 = sub_17EB50();
      v16 = v22;
      v23 = sub_5C154(&qword_3210B0);
      v18 = swift_allocObject(v23, 72, 7);
      *(_OWORD *)(v18 + 16) = xmmword_258070;
      *(_QWORD *)(v18 + 56) = &type metadata for String;
      *(_QWORD *)(v18 + 64) = sub_939DC();
      *(_QWORD *)(v18 + 32) = v7;
      *(_QWORD *)(v18 + 40) = v6;
      v20 = v21;
    }
    v6 = static String.localizedStringWithFormat(_:_:)(v20, v16, v18);
    swift_bridgeObjectRelease(v18);
    swift_bridgeObjectRelease(v16);
  }
  return v6;
}

uint64_t sub_A6FEC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_A5D64(v1, a1);
}

unint64_t sub_A6FF4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_321BA0;
  if (!qword_321BA0)
  {
    v1 = type metadata accessor for URL(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for URL, v1);
    atomic_store(result, (unint64_t *)&qword_321BA0);
  }
  return result;
}

uint64_t sub_A703C()
{
  uint64_t v0;

  _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_A7060(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_156188(a1, a2, a3, a4, (_QWORD *)(v4 + 16));
}

uint64_t sub_A7068(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_A7078(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

unint64_t static SeriesRoomPageIntent.kind.getter()
{
  return 0xD000000000000014;
}

uint64_t SeriesRoomPageIntent.init(seriesID:seriesType:originatingSeriesID:originatingSeriesType:resource:navigationType:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _QWORD *a9@<X8>)
{
  int *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;

  v15 = (int *)type metadata accessor for SeriesRoomPageIntent(0);
  v16 = v15[8];
  v17 = type metadata accessor for MSeries(0);
  *(_QWORD *)((char *)a9 + v16) = _MResourceDecoder_OrNil.init(wrappedValue:)(0, v17);
  *a9 = a1;
  a9[1] = a2;
  v18 = (char *)a9 + v15[5];
  v19 = type metadata accessor for SeriesType(0);
  v20 = *(_QWORD *)(v19 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v20 + 16))(v18, a3, v19);
  v21 = (_QWORD *)((char *)a9 + v15[6]);
  *v21 = a4;
  v21[1] = a5;
  sub_A7210(a6, (uint64_t)a9 + v15[7]);
  v22 = _MResourceDecoder_OrNil.init(wrappedValue:)(a7, v17);
  sub_A7258(a6);
  (*(void (**)(uint64_t, uint64_t))(v20 + 8))(a3, v19);

  *(_QWORD *)((char *)a9 + v16) = v22;
  v23 = (char *)a9 + v15[9];
  v24 = type metadata accessor for Metrics.NavigationType(0);
  return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(v23, a8, v24);
}

uint64_t type metadata accessor for SeriesRoomPageIntent(uint64_t a1)
{
  uint64_t result;

  result = qword_321C50;
  if (!qword_321C50)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for SeriesRoomPageIntent);
  return result;
}

uint64_t sub_A7210(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_5C154(&qword_321BA8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_A7258(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_5C154(&qword_321BA8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_A7298(_QWORD *a1@<X8>)
{
  *a1 = 0xD000000000000014;
  a1[1] = 0x800000000025AFA0;
}

BookStoreUI::SeriesRoomPageIntent::CodingKeys_optional __swiftcall SeriesRoomPageIntent.CodingKeys.init(stringValue:)(Swift::String stringValue)
{
  char *v1;
  char *v2;
  void *object;
  uint64_t countAndFlagsBits;
  unint64_t v6;
  BookStoreUI::SeriesRoomPageIntent::CodingKeys_optional result;
  char v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  char v13;

  v2 = v1;
  if (stringValue._countAndFlagsBits == 0x4449736569726573 && stringValue._object == (void *)0xE800000000000000)
  {
    v6 = 0xE800000000000000;
    goto LABEL_8;
  }
  object = stringValue._object;
  countAndFlagsBits = stringValue._countAndFlagsBits;
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x4449736569726573, 0xE800000000000000, stringValue._countAndFlagsBits, stringValue._object, 0) & 1) != 0)
  {
    v6 = (unint64_t)object;
LABEL_8:
    result.value = swift_bridgeObjectRelease(v6);
    v8 = 0;
    goto LABEL_9;
  }
  if (countAndFlagsBits == 0x7954736569726573 && object == (void *)0xEA00000000006570)
  {
    v9 = 0xEA00000000006570;
LABEL_15:
    result.value = swift_bridgeObjectRelease(v9);
    v8 = 1;
    goto LABEL_9;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x7954736569726573, 0xEA00000000006570, countAndFlagsBits, object, 0) & 1) != 0)
  {
    v9 = (unint64_t)object;
    goto LABEL_15;
  }
  if (countAndFlagsBits == 0xD000000000000013)
  {
    v10 = 0x8000000000270160;
    if (object == (void *)0x8000000000270160)
    {
LABEL_20:
      result.value = swift_bridgeObjectRelease(v10);
      v8 = 2;
      goto LABEL_9;
    }
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000013, 0x8000000000270160, countAndFlagsBits, object, 0) & 1) != 0)
  {
    v10 = (unint64_t)object;
    goto LABEL_20;
  }
  if (countAndFlagsBits == 0xD000000000000015 && object == (void *)0x8000000000270180)
  {
    v11 = 0x8000000000270180;
LABEL_26:
    result.value = swift_bridgeObjectRelease(v11);
    v8 = 3;
    goto LABEL_9;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000015, 0x8000000000270180, countAndFlagsBits, object, 0) & 1) != 0)
  {
    v11 = (unint64_t)object;
    goto LABEL_26;
  }
  if (countAndFlagsBits == 0x656372756F736572 && object == (void *)0xE800000000000000)
  {
    v12 = 0xE800000000000000;
LABEL_32:
    result.value = swift_bridgeObjectRelease(v12);
    v8 = 4;
    goto LABEL_9;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x656372756F736572, 0xE800000000000000, countAndFlagsBits, object, 0) & 1) != 0)
  {
    v12 = (unint64_t)object;
    goto LABEL_32;
  }
  if (countAndFlagsBits == 0x697461676976616ELL && object == (void *)0xEE00657079546E6FLL)
  {
    result.value = swift_bridgeObjectRelease(0xEE00657079546E6FLL);
    v8 = 5;
  }
  else
  {
    v13 = _stringCompareWithSmolCheck(_:_:expecting:)(0x697461676976616ELL, 0xEE00657079546E6FLL, countAndFlagsBits, object, 0);
    result.value = swift_bridgeObjectRelease(object);
    if ((v13 & 1) != 0)
      v8 = 5;
    else
      v8 = 6;
  }
LABEL_9:
  *v2 = v8;
  return result;
}

BookStoreUI::SeriesRoomPageIntent::CodingKeys_optional __swiftcall SeriesRoomPageIntent.CodingKeys.init(intValue:)(Swift::Int intValue)
{
  _BYTE *v1;

  *v1 = 6;
  return (BookStoreUI::SeriesRoomPageIntent::CodingKeys_optional)intValue;
}

uint64_t SeriesRoomPageIntent.CodingKeys.stringValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_A75A0 + 4 * byte_25AFB0[*v0]))(0x4449736569726573, 0xE800000000000000);
}

uint64_t sub_A75A0()
{
  return 0x7954736569726573;
}

unint64_t sub_A75BC()
{
  return 0xD000000000000013;
}

unint64_t sub_A75D8()
{
  return 0xD000000000000015;
}

uint64_t sub_A75F8()
{
  return 0x656372756F736572;
}

uint64_t sub_A760C()
{
  return 0x697461676976616ELL;
}

uint64_t sub_A7638(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_A7C74();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_A7660(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_A7C74();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t SeriesRoomPageIntent.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void (*v54)(char *, uint64_t);
  char *v55;
  uint64_t v56;
  void (*v57)(char *, uint64_t);
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  void (*v62)(char *, char *, uint64_t);
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  char *v82;
  _QWORD *v83;
  uint64_t v84;
  uint64_t v85;
  char v86;
  char v87;
  char v88;
  char v89;
  char v90;
  char v91;

  v74 = a2;
  v72 = type metadata accessor for SeriesRoomPageIntent(0);
  __chkstk_darwin(v72);
  v73 = (char *)&v61 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for Metrics.NavigationType(0);
  v77 = *(_QWORD *)(v4 - 8);
  v78 = v4;
  __chkstk_darwin(v4);
  v76 = (char *)&v61 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v81 = (char *)&v61 - v7;
  v8 = sub_5C154(&qword_321BA8);
  __chkstk_darwin(v8);
  v75 = (uint64_t)&v61 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v79 = (uint64_t)&v61 - v11;
  v12 = type metadata accessor for SeriesType(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v61 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v18 = (char *)&v61 - v17;
  v80 = sub_5C154(&qword_321BB0);
  v19 = *(_QWORD *)(v80 - 8);
  __chkstk_darwin(v80);
  v21 = (char *)&v61 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = a1[3];
  v22 = a1[4];
  v83 = a1;
  sub_66898(a1, v23);
  v24 = sub_A7C74();
  v82 = v21;
  v25 = v84;
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for SeriesRoomPageIntent.CodingKeys, &type metadata for SeriesRoomPageIntent.CodingKeys, v24, v23, v22);
  if (!v25)
  {
    v71 = v15;
    v84 = v13;
    v26 = v80;
    v27 = v81;
    v28 = v18;
    v29 = v19;
    v91 = 0;
    v30 = KeyedDecodingContainer.decode(_:forKey:)(&v91, v80);
    v32 = v31;
    v70 = v30;
    v90 = 1;
    v33 = sub_648E0(&qword_321BC0, (uint64_t (*)(uint64_t))&type metadata accessor for SeriesType, (uint64_t)&protocol conformance descriptor for SeriesType);
    KeyedDecodingContainer.decode<A>(_:forKey:)(v28, v12, &v90, v26, v12, v33);
    v89 = 2;
    v67 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)(&v89, v26);
    v68 = v34;
    v69 = v32;
    v88 = 3;
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)(v12, &v88, v26, v12, v33);
    v66 = v29;
    v36 = sub_5C154(&qword_321BC8);
    v87 = 4;
    v37 = sub_A7CB8();
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)(v36, &v87, v26, v36, v37);
    v65 = v85;
    v86 = 5;
    v38 = sub_648E0(&qword_321BD8, (uint64_t (*)(uint64_t))&type metadata accessor for Metrics.NavigationType, (uint64_t)&protocol conformance descriptor for Metrics.NavigationType);
    v39 = v78;
    KeyedDecodingContainer.decode<A>(_:forKey:)(v27, v78, &v86, v26, v78, v38);
    v40 = v65;
    if (v65 == 1)
      v40 = 0;
    v65 = v40;
    v62 = *(void (**)(char *, _QWORD *, uint64_t))(v84 + 16);
    v62(v71, v28, v12);
    sub_A7210(v79, v75);
    (*(void (**)(char *, char *, uint64_t))(v77 + 16))(v76, v27, v39);
    v41 = (int *)v72;
    v42 = *(int *)(v72 + 32);
    v63 = v42;
    v43 = v12;
    v44 = type metadata accessor for MSeries(0);
    v45 = _MResourceDecoder_OrNil.init(wrappedValue:)(0, v44);
    v64 = v28;
    v46 = (uint64_t *)v73;
    *(_QWORD *)&v73[v42] = v45;
    v47 = v71;
    v48 = v69;
    *v46 = v70;
    v46[1] = v48;
    v49 = v43;
    v62((char *)v46 + v41[5], v47, v43);
    v50 = (uint64_t *)((char *)v46 + v41[6]);
    v51 = v68;
    *v50 = v67;
    v50[1] = v51;
    v52 = v75;
    sub_A7210(v75, (uint64_t)v46 + v41[7]);
    v53 = _MResourceDecoder_OrNil.init(wrappedValue:)(v65, v44);
    sub_A7258(v52);
    v54 = *(void (**)(char *, uint64_t))(v84 + 8);
    v55 = v47;
    v56 = v49;
    v54(v55, v49);
    v57 = v54;
    v58 = v63;

    *(uint64_t *)((char *)v46 + v58) = v53;
    v59 = (char *)v46 + v41[9];
    v60 = v77;
    (*(void (**)(char *, char *, uint64_t))(v77 + 32))(v59, v76, v39);
    sub_A7D14((uint64_t)v46, v74);
    (*(void (**)(char *, uint64_t))(v60 + 8))(v81, v39);
    sub_A7258(v79);
    v57(v64, v56);
    (*(void (**)(char *, uint64_t))(v66 + 8))(v82, v26);
  }
  return _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(v83);
}

unint64_t sub_A7C74()
{
  unint64_t result;

  result = qword_321BB8;
  if (!qword_321BB8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for SeriesRoomPageIntent.CodingKeys, &type metadata for SeriesRoomPageIntent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_321BB8);
  }
  return result;
}

unint64_t sub_A7CB8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_321BD0;
  if (!qword_321BD0)
  {
    v1 = sub_667D0(&qword_321BC8);
    result = swift_getWitnessTable(&protocol conformance descriptor for _MResourceDecoder_OrNil<A>, v1);
    atomic_store(result, (unint64_t *)&qword_321BD0);
  }
  return result;
}

void sub_A7D04(id a1)
{
  if (a1 != (char *)&dword_0 + 1)

}

uint64_t sub_A7D14(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SeriesRoomPageIntent(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_A7D58()
{
  return sub_648E0(&qword_31FFA0, type metadata accessor for SeriesRoomPageIntent, (uint64_t)&protocol conformance descriptor for SeriesRoomPageIntent);
}

unint64_t sub_A7D88()
{
  unint64_t result;

  result = qword_321BE0;
  if (!qword_321BE0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for SeriesRoomPageIntent.CodingKeys, &type metadata for SeriesRoomPageIntent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_321BE0);
  }
  return result;
}

unint64_t sub_A7DD0()
{
  unint64_t result;

  result = qword_321BE8;
  if (!qword_321BE8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for SeriesRoomPageIntent.CodingKeys, &type metadata for SeriesRoomPageIntent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_321BE8);
  }
  return result;
}

unint64_t sub_A7E18()
{
  unint64_t result;

  result = qword_321BF0;
  if (!qword_321BF0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for SeriesRoomPageIntent.CodingKeys, &type metadata for SeriesRoomPageIntent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_321BF0);
  }
  return result;
}

uint64_t sub_A7E5C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return SeriesRoomPageIntent.init(from:)(a1, a2);
}

uint64_t *initializeBufferWithCopyOfBuffer for SeriesRoomPageIntent(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t, __n128);
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  unsigned int (*v22)(char *, uint64_t, uint64_t, __n128);
  __n128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  char *v29;
  char *v30;
  uint64_t v31;
  void (*v32)(char *, char *, uint64_t);
  id v33;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v25 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v25 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v25);
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = type metadata accessor for SeriesType(0);
    v12 = *(_QWORD *)(v11 - 8);
    v13 = *(void (**)(char *, char *, uint64_t, __n128))(v12 + 16);
    v14 = swift_bridgeObjectRetain(v7);
    v13(v9, v10, v11, v14);
    v15 = a3[6];
    v16 = a3[7];
    v17 = (uint64_t *)((char *)v4 + v15);
    v18 = (uint64_t *)((char *)a2 + v15);
    v19 = v18[1];
    *v17 = *v18;
    v17[1] = v19;
    v20 = (char *)v4 + v16;
    v21 = (char *)a2 + v16;
    v22 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v12 + 48);
    v23 = swift_bridgeObjectRetain(v19);
    if (v22(v21, 1, v11, v23))
    {
      v24 = sub_5C154(&qword_321BA8);
      memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    }
    else
    {
      ((void (*)(char *, char *, uint64_t))v13)(v20, v21, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v20, 0, 1, v11);
    }
    v26 = a3[8];
    v27 = a3[9];
    v28 = *(void **)((char *)a2 + v26);
    *(uint64_t *)((char *)v4 + v26) = (uint64_t)v28;
    v29 = (char *)v4 + v27;
    v30 = (char *)a2 + v27;
    v31 = type metadata accessor for Metrics.NavigationType(0);
    v32 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16);
    v33 = v28;
    v32(v29, v30, v31);
  }
  return v4;
}

uint64_t destroy for SeriesRoomPageIntent(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  v4 = a1 + a2[5];
  v5 = type metadata accessor for SeriesType(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  v7(v4, v5);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[6] + 8));
  v8 = a1 + a2[7];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v8, 1, v5))
    v7(v8, v5);

  v9 = a1 + a2[9];
  v10 = type metadata accessor for Metrics.NavigationType(0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
}

_QWORD *initializeWithCopy for SeriesRoomPageIntent(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t, __n128);
  __n128 v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  char *v19;
  char *v20;
  unsigned int (*v21)(char *, uint64_t, uint64_t, __n128);
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  char *v27;
  char *v28;
  uint64_t v29;
  void (*v30)(char *, char *, uint64_t);
  id v31;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for SeriesType(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(void (**)(char *, char *, uint64_t, __n128))(v11 + 16);
  v13 = swift_bridgeObjectRetain(v6);
  v12(v8, v9, v10, v13);
  v14 = a3[6];
  v15 = a3[7];
  v16 = (_QWORD *)((char *)a1 + v14);
  v17 = (_QWORD *)((char *)a2 + v14);
  v18 = v17[1];
  *v16 = *v17;
  v16[1] = v18;
  v19 = (char *)a1 + v15;
  v20 = (char *)a2 + v15;
  v21 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v11 + 48);
  v22 = swift_bridgeObjectRetain(v18);
  if (v21(v20, 1, v10, v22))
  {
    v23 = sub_5C154(&qword_321BA8);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
  }
  else
  {
    ((void (*)(char *, char *, uint64_t))v12)(v19, v20, v10);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v19, 0, 1, v10);
  }
  v24 = a3[8];
  v25 = a3[9];
  v26 = *(void **)((char *)a2 + v24);
  *(_QWORD *)((char *)a1 + v24) = v26;
  v27 = (char *)a1 + v25;
  v28 = (char *)a2 + v25;
  v29 = type metadata accessor for Metrics.NavigationType(0);
  v30 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 16);
  v31 = v26;
  v30(v27, v28, v29);
  return a1;
}

char *assignWithCopy for SeriesRoomPageIntent(char *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;
  char *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t (*v22)(char *, uint64_t, uint64_t);
  int v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  void *v28;
  id v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;

  *(_QWORD *)a1 = *a2;
  v6 = a2[1];
  v7 = *((_QWORD *)a1 + 1);
  *((_QWORD *)a1 + 1) = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  v8 = a3[5];
  v9 = &a1[v8];
  v10 = (char *)a2 + v8;
  v11 = type metadata accessor for SeriesType(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(void (**)(char *, char *, uint64_t))(v12 + 24);
  v13(v9, v10, v11);
  v14 = a3[6];
  v15 = &a1[v14];
  v16 = (_QWORD *)((char *)a2 + v14);
  *(_QWORD *)v15 = *v16;
  v17 = v16[1];
  v18 = *((_QWORD *)v15 + 1);
  *((_QWORD *)v15 + 1) = v17;
  swift_bridgeObjectRetain(v17);
  swift_bridgeObjectRelease(v18);
  v19 = a3[7];
  v20 = &a1[v19];
  v21 = (char *)a2 + v19;
  v22 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48);
  v23 = v22(&a1[v19], 1, v11);
  v24 = v22(v21, 1, v11);
  if (!v23)
  {
    if (!v24)
    {
      v13(v20, v21, v11);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v20, v11);
    goto LABEL_6;
  }
  if (v24)
  {
LABEL_6:
    v25 = sub_5C154(&qword_321BA8);
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v20, v21, v11);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v20, 0, 1, v11);
LABEL_7:
  v26 = a3[8];
  v27 = *(void **)&a1[v26];
  v28 = *(void **)((char *)a2 + v26);
  *(_QWORD *)&a1[v26] = v28;
  v29 = v28;

  v30 = a3[9];
  v31 = &a1[v30];
  v32 = (char *)a2 + v30;
  v33 = type metadata accessor for Metrics.NavigationType(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 24))(v31, v32, v33);
  return a1;
}

_OWORD *initializeWithTake for SeriesRoomPageIntent(_OWORD *a1, char *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;

  *a1 = *(_OWORD *)a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = &a2[v6];
  v9 = type metadata accessor for SeriesType(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
  v11(v7, v8, v9);
  v12 = a3[7];
  *(_OWORD *)((char *)a1 + a3[6]) = *(_OWORD *)&a2[a3[6]];
  v13 = (char *)a1 + v12;
  v14 = &a2[v12];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(&a2[v12], 1, v9))
  {
    v15 = sub_5C154(&qword_321BA8);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    v11(v13, v14, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v13, 0, 1, v9);
  }
  v16 = a3[9];
  *(_QWORD *)((char *)a1 + a3[8]) = *(_QWORD *)&a2[a3[8]];
  v17 = (char *)a1 + v16;
  v18 = &a2[v16];
  v19 = type metadata accessor for Metrics.NavigationType(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v17, v18, v19);
  return a1;
}

char *assignWithTake for SeriesRoomPageIntent(char *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;
  char *v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t (*v23)(char *, uint64_t, uint64_t);
  int v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;

  v6 = a2[1];
  v7 = *((_QWORD *)a1 + 1);
  *(_QWORD *)a1 = *a2;
  *((_QWORD *)a1 + 1) = v6;
  swift_bridgeObjectRelease(v7);
  v8 = a3[5];
  v9 = &a1[v8];
  v10 = (char *)a2 + v8;
  v11 = type metadata accessor for SeriesType(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(void (**)(char *, char *, uint64_t))(v12 + 40);
  v13(v9, v10, v11);
  v14 = a3[6];
  v15 = &a1[v14];
  v16 = (_QWORD *)((char *)a2 + v14);
  v18 = *v16;
  v17 = v16[1];
  v19 = *((_QWORD *)v15 + 1);
  *(_QWORD *)v15 = v18;
  *((_QWORD *)v15 + 1) = v17;
  swift_bridgeObjectRelease(v19);
  v20 = a3[7];
  v21 = &a1[v20];
  v22 = (char *)a2 + v20;
  v23 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48);
  v24 = v23(&a1[v20], 1, v11);
  v25 = v23(v22, 1, v11);
  if (!v24)
  {
    if (!v25)
    {
      v13(v21, v22, v11);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v21, v11);
    goto LABEL_6;
  }
  if (v25)
  {
LABEL_6:
    v26 = sub_5C154(&qword_321BA8);
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v21, v22, v11);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v21, 0, 1, v11);
LABEL_7:
  v27 = a3[8];
  v28 = *(void **)&a1[v27];
  *(_QWORD *)&a1[v27] = *(_QWORD *)((char *)a2 + v27);

  v29 = a3[9];
  v30 = &a1[v29];
  v31 = (char *)a2 + v29;
  v32 = type metadata accessor for Metrics.NavigationType(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 40))(v30, v31, v32);
  return a1;
}

uint64_t getEnumTagSinglePayload for SeriesRoomPageIntent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_A8678);
}

uint64_t sub_A8678(uint64_t a1, uint64_t a2, int *a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for SeriesType(0);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = a3[5];
    }
    else
    {
      v12 = sub_5C154(&qword_321BA8);
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
      {
        v10 = v12;
        v11 = a3[7];
      }
      else
      {
        v10 = type metadata accessor for Metrics.NavigationType(0);
        v9 = *(_QWORD *)(v10 - 8);
        v11 = a3[9];
      }
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for SeriesRoomPageIntent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_A874C);
}

uint64_t sub_A874C(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v8 = type metadata accessor for SeriesType(0);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = a4[5];
    }
    else
    {
      v12 = sub_5C154(&qword_321BA8);
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == a3)
      {
        v10 = v12;
        v11 = a4[7];
      }
      else
      {
        v10 = type metadata accessor for Metrics.NavigationType(0);
        v9 = *(_QWORD *)(v10 - 8);
        v11 = a4[9];
      }
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

void sub_A8810(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD v8[6];

  v8[0] = &unk_25B190;
  v2 = type metadata accessor for SeriesType(319);
  if (v3 <= 0x3F)
  {
    v8[1] = *(_QWORD *)(v2 - 8) + 64;
    v8[2] = &unk_25B1A8;
    sub_A88CC(319);
    if (v5 <= 0x3F)
    {
      v8[3] = *(_QWORD *)(v4 - 8) + 64;
      v8[4] = &unk_25B1C0;
      v6 = type metadata accessor for Metrics.NavigationType(319);
      if (v7 <= 0x3F)
      {
        v8[5] = *(_QWORD *)(v6 - 8) + 64;
        swift_initStructMetadata(a1, 256, 6, v8, a1 + 16);
      }
    }
  }
}

void sub_A88CC(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_321C60)
  {
    v2 = type metadata accessor for SeriesType(255);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_321C60);
  }
}

uint64_t getEnumTagSinglePayload for SeriesRoomPageIntent.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFB)
    goto LABEL_17;
  if (a2 + 5 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 5) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 5;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 5;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 5;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 6;
  v8 = v6 - 6;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for SeriesRoomPageIntent.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_A89FC + 4 * byte_25AFBB[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_A8A30 + 4 * byte_25AFB6[v4]))();
}

uint64_t sub_A8A30(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_A8A38(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0xA8A40);
  return result;
}

uint64_t sub_A8A4C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0xA8A54);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_A8A58(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_A8A60(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SeriesRoomPageIntent.CodingKeys()
{
  return &type metadata for SeriesRoomPageIntent.CodingKeys;
}

uint64_t MenuCoverImageProvider.image(for:from:size:includeSpine:)(uint64_t a1, _BYTE *a2, char a3, double a4, double a5)
{
  uint64_t v5;

  *(_BYTE *)(v5 + 416) = a3;
  *(double *)(v5 + 304) = a4;
  *(double *)(v5 + 312) = a5;
  *(_QWORD *)(v5 + 296) = a1;
  *(_BYTE *)(v5 + 417) = *a2;
  return swift_task_switch(sub_A8AA4, 0, 0);
}

id sub_A8AA4(uint64_t a1)
{
  uint64_t v1;
  _OWORD *v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  uint64_t v10;
  double v11;
  double v12;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  Class isa;
  uint64_t v18;
  double v19;
  double v20;
  double v21;
  id v22;
  NSString v23;
  id v24;
  id v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  id result;
  void *v30;
  NSString v31;
  uint64_t v32;
  double v33;
  double v34;
  double v35;
  __n128 v36;

  v2 = (_OWORD *)(v1 + 248);
  v3 = *(_BYTE *)(v1 + 417);
  v4 = MResource.id.getter(a1);
  v6 = v5;
  *(_QWORD *)(v1 + 320) = v4;
  *(_QWORD *)(v1 + 328) = v5;
  if ((v3 & 1) == 0)
  {
    v10 = v4;
    v12 = *(double *)(v1 + 304);
    v11 = *(double *)(v1 + 312);
    v13 = (void *)objc_opt_self(BCCacheManager);
    v14 = objc_msgSend(v13, "defaultCacheManager");
    v15 = sub_5C154(&qword_31EF50);
    v16 = swift_allocObject(v15, 48, 7);
    *(_OWORD *)(v16 + 16) = xmmword_258070;
    *(_QWORD *)(v16 + 32) = v10;
    *(_QWORD *)(v16 + 40) = v6;
    swift_bridgeObjectRetain(v6);
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v16);
    objc_msgSend(v14, "addProductProfileIDs:priority:", isa, 6);

    v18 = CGSizeScale(v12, v11, 2.0);
    v19 = CGSizeScaleToScreen(v18);
    v21 = v20;
    v22 = objc_allocWithZone((Class)BICDescribedImage);
    v23 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v6);
    v24 = objc_msgSend(v22, "initWithIdentifier:", v23);
    *(_QWORD *)(v1 + 336) = v24;

    objc_msgSend(v24, "setImageSize:", v19, v21);
    objc_msgSend(v24, "setProcessingOptions:", 0);
    objc_msgSend(v24, "setRequestOptions:", 2);
    objc_msgSend(v24, "setPriority:", 6);
    v25 = objc_msgSend(v13, "defaultCacheManager");
    *(_QWORD *)(v1 + 344) = v25;
    *(_QWORD *)(v1 + 56) = v2;
    *(_QWORD *)(v1 + 16) = v1;
    *(_QWORD *)(v1 + 24) = sub_A8ED4;
    *(_QWORD *)(v1 + 240) = swift_continuation_init(v1 + 16, 0);
    *(_QWORD *)(v1 + 208) = _NSConcreteStackBlock;
    *(_QWORD *)(v1 + 216) = 0x40000000;
    *(_QWORD *)(v1 + 224) = sub_A9584;
    *(_QWORD *)(v1 + 232) = &unk_2EA6D8;
    v26 = v24;
    objc_msgSend(v25, "fetchCGImageFor:forRequest:completion:", v26, v26, v1 + 208);
    v27 = v1 + 16;
    return (id)swift_continuation_await(v27);
  }
  v7 = MAsset.artwork.getter();
  *(_QWORD *)(v1 + 280) = 7107189;
  *(_QWORD *)(v1 + 288) = 0xE300000000000000;
  AnyHashable.init<A>(_:)(v1 + 280, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(v7 + 16) && (v8 = sub_58318(v1 + 208), (v9 & 1) != 0))
  {
    sub_5E1EC(*(_QWORD *)(v7 + 56) + 32 * v8, v1 + 248);
  }
  else
  {
    *v2 = 0u;
    *(_OWORD *)(v1 + 264) = 0u;
  }
  swift_bridgeObjectRelease(v7);
  sub_5DCEC(v1 + 208);
  if (!*(_QWORD *)(v1 + 272))
  {
    swift_bridgeObjectRelease(v6);
    sub_6EF98(v1 + 248);
    return (id)(*(uint64_t (**)(_QWORD, __n128))(v1 + 8))(0, v36);
  }
  if ((swift_dynamicCast(v1 + 280, v1 + 248, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) == 0)
  {
    v36 = swift_bridgeObjectRelease(v6);
    return (id)(*(uint64_t (**)(_QWORD, __n128))(v1 + 8))(0, v36);
  }
  v28 = *(_QWORD *)(v1 + 288);
  result = objc_msgSend((id)objc_opt_self(BSUIStorefrontCache), "sharedInstance");
  *(_QWORD *)(v1 + 352) = result;
  if (result)
  {
    v30 = result;
    v31 = String._bridgeToObjectiveC()();
    *(_QWORD *)(v1 + 360) = v31;
    swift_bridgeObjectRelease(v28);
    v33 = CGSizeScaleToScreen(v32);
    v35 = v34;
    *(_QWORD *)(v1 + 184) = v2;
    *(_QWORD *)(v1 + 144) = v1;
    *(_QWORD *)(v1 + 152) = sub_A9018;
    *(_QWORD *)(v1 + 240) = swift_continuation_init(v1 + 144, 1);
    *(_QWORD *)(v1 + 208) = _NSConcreteStackBlock;
    *(_QWORD *)(v1 + 216) = 0x40000000;
    *(_QWORD *)(v1 + 224) = sub_A95D8;
    *(_QWORD *)(v1 + 232) = &unk_2EA6A8;
    objc_msgSend(v30, "imageWithURLString:size:completion:", v31, v1 + 208, v33, v35);
    v27 = v1 + 144;
    return (id)swift_continuation_await(v27);
  }
  __break(1u);
  return result;
}

uint64_t sub_A8ED4()
{
  return swift_task_switch(sub_A8F20, 0, 0);
}

uint64_t sub_A8F20()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  void *v6;
  void *v7;

  v1 = *(void **)(v0 + 336);
  v2 = *(void **)(v0 + 248);

  if (!v2)
  {

LABEL_8:
    v4 = 0;
    return (*(uint64_t (**)(id))(v0 + 8))(v4);
  }
  v3 = objc_msgSend(v2, "image");
  v4 = v3;
  if (!v3)
  {
    v7 = *(void **)(v0 + 336);
    swift_unknownObjectRelease(v2);

    return (*(uint64_t (**)(id))(v0 + 8))(v4);
  }
  v5 = objc_msgSend(v3, "CGImage");

  v6 = *(void **)(v0 + 336);
  if (!v5)
  {
    swift_unknownObjectRelease(v2);

    goto LABEL_8;
  }
  v4 = objc_msgSend(objc_allocWithZone((Class)UIImage), "initWithCGImage:", v5);

  swift_unknownObjectRelease(v2);
  return (*(uint64_t (**)(id))(v0 + 8))(v4);
}

uint64_t sub_A9018()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 176);
  *(_QWORD *)(*v0 + 368) = v2;
  if (v2)
  {
    swift_bridgeObjectRelease(*(_QWORD *)(v1 + 328));
    v3 = sub_A9528;
  }
  else
  {
    v3 = sub_A9080;
  }
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_A9080()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  id v4;
  id v5;
  uint64_t v6;
  id v7;
  id v8;
  NSString v9;
  id v10;
  id v11;
  id v12;
  NSString v13;
  id v14;
  uint64_t v15;
  unsigned __int8 v16;
  id v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  id v24;
  id v25;

  v1 = *(void **)(v0 + 248);
  v3 = *(void **)(v0 + 352);
  v2 = *(void **)(v0 + 360);
  *(_QWORD *)(v0 + 376) = v1;
  v4 = v1;

  if (!v1)
  {
    v6 = *(_QWORD *)(v0 + 328);
LABEL_11:
    swift_bridgeObjectRelease(v6);
    return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
  }
  v5 = objc_msgSend(v4, "CGImage");
  *(_QWORD *)(v0 + 384) = v5;
  v6 = *(_QWORD *)(v0 + 328);
  if (!v5)
  {

    goto LABEL_11;
  }
  v7 = v5;
  v24 = *(id *)(v0 + 296);
  v25 = objc_msgSend(objc_allocWithZone((Class)BCCacheImageTransformer), "init");
  *(_QWORD *)(v0 + 392) = v25;
  v8 = objc_allocWithZone((Class)BICDescribedImage);
  swift_bridgeObjectRetain(v6);
  v9 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v6);
  v10 = objc_msgSend(v8, "initWithIdentifier:", v9);
  *(_QWORD *)(v0 + 400) = v10;

  objc_msgSend(v4, "size");
  objc_msgSend(v10, "setImageSize:");
  objc_msgSend(v10, "setProcessingOptions:", 0);
  v11 = objc_msgSend((id)objc_opt_self(BICImage), "imageWithCGImage:", v7);
  objc_msgSend(v10, "setImage:", v11);

  v12 = objc_allocWithZone((Class)BICDescribedImage);
  v13 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v6);
  v14 = objc_msgSend(v12, "initWithIdentifier:", v13);
  *(_QWORD *)(v0 + 408) = v14;

  objc_msgSend(v4, "size");
  objc_msgSend(v14, "setImageSize:");
  v15 = (uint64_t)objc_msgSend(v24, "isExplicit");
  v16 = *(_BYTE *)(v0 + 416);
  if ((v15 & 1) != 0)
  {
    v17 = objc_msgSend((id)objc_opt_self(BURestrictionsProvider), "sharedInstance");
    v18 = objc_msgSend(v17, "isExplicitContentAllowed");
    v15 = swift_unknownObjectRelease(v17);
    if (v18)
      v19 = 0;
    else
      v19 = 1024;
    if ((v18 & v16 & 1) == 0)
      goto LABEL_17;
    goto LABEL_13;
  }
  if (*(_BYTE *)(v0 + 416))
  {
LABEL_13:
    if ((dispatch thunk of MAsset.isAudiobook.getter(v15) & 1) != 0)
      v19 = 8;
    else
      v19 = 2;
    goto LABEL_17;
  }
  v19 = 0;
LABEL_17:
  v21 = v0 + 80;
  objc_msgSend(v14, "setProcessingOptions:", v19);
  *(_QWORD *)(v0 + 120) = v0 + 248;
  *(_QWORD *)(v0 + 80) = v0;
  *(_QWORD *)(v0 + 88) = sub_A93B8;
  v22 = swift_continuation_init(v0 + 80, 0);
  *(_QWORD *)(v0 + 208) = _NSConcreteStackBlock;
  v23 = (_QWORD *)(v0 + 208);
  v23[1] = 0x40000000;
  v23[2] = sub_A9584;
  v23[3] = &unk_2EA6C0;
  v23[4] = v22;
  objc_msgSend(v25, "transformSource:to:completion:", v10, v14, v23);
  return swift_continuation_await(v21);
}

uint64_t sub_A93B8()
{
  return swift_task_switch(sub_A9404, 0, 0);
}

uint64_t sub_A9404()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;
  void *v4;
  id v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  id v11;
  void *v12;
  void *v13;

  v1 = *(void **)(v0 + 400);
  v2 = *(void **)(v0 + 248);

  if (!v2)
  {
    v7 = *(void **)(v0 + 400);
    v6 = *(void **)(v0 + 408);
LABEL_8:

    v12 = *(void **)(v0 + 392);
    v13 = *(void **)(v0 + 376);

    v11 = 0;
    return (*(uint64_t (**)(id))(v0 + 8))(v11);
  }
  v3 = objc_msgSend(v2, "image");
  if (!v3)
  {
    v7 = *(void **)(v0 + 400);
    v6 = *(void **)(v0 + 408);
    goto LABEL_7;
  }
  v4 = v3;
  v5 = objc_msgSend(v3, "CGImage");

  v7 = *(void **)(v0 + 400);
  v6 = *(void **)(v0 + 408);
  if (!v5)
  {
LABEL_7:
    swift_unknownObjectRelease(v2);
    goto LABEL_8;
  }
  v9 = *(void **)(v0 + 384);
  v8 = *(void **)(v0 + 392);
  v10 = *(void **)(v0 + 376);
  v11 = objc_msgSend(objc_allocWithZone((Class)UIImage), "initWithCGImage:", v5);

  swift_unknownObjectRelease(v2);
  return (*(uint64_t (**)(id))(v0 + 8))(v11);
}

uint64_t sub_A9528()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;

  v1 = *(void **)(v0 + 360);
  v2 = *(_QWORD *)(v0 + 368);
  v3 = *(void **)(v0 + 352);
  swift_willThrow();

  swift_errorRelease(v2);
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_A9584(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  v2 = *(_QWORD *)(a1 + 32);
  v5 = a2;
  v3 = *(_QWORD *)(*(_QWORD *)(v2 + 64) + 40);
  swift_unknownObjectRetain(a2);
  sub_66F14((uint64_t)&v5, v3, &qword_321CC0);
  return swift_continuation_resume(v2);
}

uint64_t sub_A95D8(uint64_t a1, void *a2, void *a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  id v8;
  uint64_t v10;
  id v11;
  void *v12;

  v3 = *(_QWORD *)(a1 + 32);
  if (a3)
  {
    v5 = sub_5C154((uint64_t *)&unk_321CD0);
    v6 = swift_allocError(v5, &protocol self-conformance witness table for Error, 0, 0);
    *v7 = a3;
    v8 = a3;
    return swift_continuation_throwingResumeWithError(v3, v6);
  }
  else
  {
    v12 = a2;
    v10 = *(_QWORD *)(*(_QWORD *)(v3 + 64) + 40);
    v11 = a2;
    sub_66F14((uint64_t)&v12, v10, &qword_321CC8);
    return swift_continuation_throwingResume(v3);
  }
}

uint64_t sub_A9680(uint64_t a1, _BYTE *a2, char a3, double a4, double a5)
{
  uint64_t v5;
  uint64_t v11;

  v11 = swift_task_alloc(dword_321CA4);
  *(_QWORD *)(v5 + 16) = v11;
  *(_QWORD *)v11 = v5;
  *(_QWORD *)(v11 + 8) = sub_9431C;
  *(_BYTE *)(v11 + 416) = a3;
  *(double *)(v11 + 304) = a4;
  *(double *)(v11 + 312) = a5;
  *(_QWORD *)(v11 + 296) = a1;
  *(_BYTE *)(v11 + 417) = *a2;
  return swift_task_switch(sub_A8AA4, 0, 0);
}

unint64_t sub_A9714()
{
  unint64_t result;

  result = qword_321CA8;
  if (!qword_321CA8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for MenuCoverImageSource, &type metadata for MenuCoverImageSource);
    atomic_store(result, (unint64_t *)&qword_321CA8);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for MenuCoverImageSource(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_A97A4 + 4 * byte_25B205[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_A97D8 + 4 * byte_25B200[v4]))();
}

uint64_t sub_A97D8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_A97E0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0xA97E8);
  return result;
}

uint64_t sub_A97F4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0xA97FCLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_A9800(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_A9808(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MenuCoverImageSource()
{
  return &type metadata for MenuCoverImageSource;
}

uint64_t dispatch thunk of MenuCoverImageProviding.image(for:from:size:includeSpine:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, double a6, double a7)
{
  uint64_t v7;
  int *v15;
  _QWORD *v16;
  uint64_t (*v18)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, double, double);

  v15 = *(int **)(a5 + 8);
  v18 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, double, double))((char *)v15 + *v15);
  v16 = (_QWORD *)swift_task_alloc(v15[1]);
  *(_QWORD *)(v7 + 16) = v16;
  *v16 = v7;
  v16[1] = sub_A1EE4;
  return v18(a1, a2, a3, a4, a5, a6, a7);
}

ValueMetadata *type metadata accessor for MenuCoverImageProvider()
{
  return &type metadata for MenuCoverImageProvider;
}

uint64_t ContextActionMenuView.init(assetInfo:originatingLocation:)@<X0>(__int128 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  int *v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;

  v6 = type metadata accessor for ProfileRestrictions(0);
  v7 = sub_A9A74();
  *(_QWORD *)a3 = EnvironmentObject.init()(v6, v7);
  *(_QWORD *)(a3 + 8) = v8;
  *(_QWORD *)(a3 + 16) = swift_getKeyPath(&unk_25B2F0);
  *(_BYTE *)(a3 + 56) = 0;
  *(_QWORD *)(a3 + 64) = swift_getKeyPath(&unk_25B318);
  *(_BYTE *)(a3 + 72) = 0;
  v9 = (int *)type metadata accessor for ContextActionMenuView(0);
  v10 = (_QWORD *)(a3 + v9[7]);
  *v10 = swift_getKeyPath(&unk_25B340);
  v11 = sub_5C154(&qword_321CE8);
  swift_storeEnumTagMultiPayload(v10, v11, 0);
  v12 = (_QWORD *)(a3 + v9[8]);
  *v12 = swift_getKeyPath(&unk_25B370);
  v13 = sub_5C154(&qword_320268);
  swift_storeEnumTagMultiPayload(v12, v13, 0);
  v14 = a3 + v9[9];
  *(_QWORD *)v14 = swift_getKeyPath(&unk_25B3A0);
  *(_BYTE *)(v14 + 8) = 0;
  v15 = a3 + v9[10];
  *(_QWORD *)v15 = swift_getKeyPath(&unk_25B3C8);
  *(_BYTE *)(v15 + 8) = 0;
  v16 = a3 + v9[11];
  *(_QWORD *)v16 = swift_getKeyPath(&unk_25B3F8);
  *(_BYTE *)(v16 + 8) = 0;
  v17 = (_QWORD *)(a3 + v9[12]);
  *v17 = swift_getKeyPath(&unk_25B428);
  v18 = sub_5C154(&qword_3202D0);
  swift_storeEnumTagMultiPayload(v17, v18, 0);
  sub_5DC98(a1, a3 + v9[13]);
  return sub_AAA1C(a2, a3 + v9[14]);
}

unint64_t sub_A9A74()
{
  unint64_t result;
  uint64_t v1;

  result = qword_321CE0;
  if (!qword_321CE0)
  {
    v1 = type metadata accessor for ProfileRestrictions(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for ProfileRestrictions, v1);
    atomic_store(result, (unint64_t *)&qword_321CE0);
  }
  return result;
}

uint64_t ContextActionMenuView.body.getter()
{
  uint64_t KeyPath;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  _QWORD *v6;

  v6 = sub_A9B78();
  KeyPath = swift_getKeyPath(&off_25B458);
  v1 = sub_5C154(&qword_321CF0);
  v2 = sub_5C154(&qword_321CF8);
  v3 = sub_AC6B8(&qword_321D00, &qword_321CF0);
  v4 = sub_AAA64();
  return ForEach<>.init(_:id:content:)(&v6, KeyPath, sub_AA324, 0, v1, v2, v3, &protocol witness table for Int, v4);
}

_QWORD *sub_A9B78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  int *v8;
  _QWORD *v9;
  objc_class *v10;
  char *v11;
  char *v12;
  id v13;
  id v14;
  id v15;
  char *v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  char *v45;
  uint64_t v46;
  void *v47;
  uint64_t v48;
  void *v49;
  char v50;
  id v51;
  uint64_t v52;
  _QWORD *v53;
  char v56[24];
  char v57[24];
  char v58[24];
  char v59[24];
  _BYTE v60[24];
  objc_super v61;
  _QWORD v62[3];
  void *v63;
  uint64_t v64;

  v1 = v0;
  v2 = type metadata accessor for ContextAssetInfoAnalytics(0);
  __chkstk_darwin(v2);
  v4 = &v56[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v5 = sub_5C154(&qword_31FA60);
  __chkstk_darwin(v5);
  v7 = &v56[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v8 = (int *)type metadata accessor for ContextActionMenuView(0);
  v9 = (_QWORD *)(v0 + v8[13]);
  sub_5E0D8((uint64_t)v9, (uint64_t)v62);
  v10 = (objc_class *)type metadata accessor for ContextActionDataModel.Asset();
  v11 = (char *)objc_allocWithZone(v10);
  v12 = &v11[OBJC_IVAR___BSUIContextActionDataAssetModel_initType];
  sub_5E0D8((uint64_t)v62, (uint64_t)&v11[OBJC_IVAR___BSUIContextActionDataAssetModel_initType]);
  v12[40] = 3;
  v61.receiver = v11;
  v61.super_class = v10;
  v13 = objc_msgSendSuper2(&v61, "init");
  _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(v62);
  v14 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for SwiftUISourceView()), "init");
  v15 = objc_allocWithZone((Class)type metadata accessor for ContextActionDataModel(0));
  v16 = (char *)ContextActionDataModel.init(asset:sourceView:)((uint64_t)v13, (uint64_t)v14);
  v17 = ContextActionSource.key.getter();
  v63 = &type metadata for String;
  v62[0] = v17;
  v62[1] = v18;
  v19 = (uint64_t)&v16[OBJC_IVAR___BSUIContextActionDataModel_originatingLocation];
  swift_beginAccess(&v16[OBJC_IVAR___BSUIContextActionDataModel_originatingLocation], v60, 33, 0);
  sub_AC6F8((uint64_t)v62, v19);
  swift_endAccess(v60);
  v20 = v9[3];
  v21 = v9[4];
  sub_66898(v9, v20);
  v22 = ContentInfo.id.getter(v20, *(_QWORD *)(v21 + 8));
  v24 = v23;
  v25 = (uint64_t *)&v16[OBJC_IVAR___BSUIContextActionDataModel_presentationRefID];
  swift_beginAccess(&v16[OBJC_IVAR___BSUIContextActionDataModel_presentationRefID], v60, 1, 0);
  v26 = v25[1];
  *v25 = v22;
  v25[1] = v24;
  swift_bridgeObjectRelease(v26);
  sub_77A64((uint64_t)v7);
  v27 = type metadata accessor for UUID(0);
  v28 = *(_QWORD *)(v27 - 8);
  v29 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v28 + 48))(v7, 1, v27);
  if ((_DWORD)v29 == 1)
  {
    sub_5E09C((uint64_t)v7, &qword_31FA60);
    v30 = 0;
    v31 = 0;
  }
  else
  {
    v30 = UUID.uuidString.getter(v29);
    v31 = v32;
    (*(void (**)(char *, uint64_t))(v28 + 8))(v7, v27);
  }
  v33 = (uint64_t *)&v16[OBJC_IVAR___BSUIContextActionDataModel_presentationRefInstance];
  swift_beginAccess(&v16[OBJC_IVAR___BSUIContextActionDataModel_presentationRefInstance], v59, 1, 0);
  v34 = v33[1];
  *v33 = v30;
  v33[1] = v31;
  swift_bridgeObjectRelease(v34);
  v35 = v1 + v8[9];
  v36 = *(_QWORD *)v35;
  LOBYTE(v33) = *(_BYTE *)(v35 + 8);
  sub_64DD8(*(_QWORD *)v35, (char)v33);
  sub_77A98(v36, (char)v33, v62);
  sub_64FFC(v36, (char)v33);
  LOBYTE(v33) = v62[0];
  v37 = &v16[OBJC_IVAR___BSUIContextActionDataModel_shouldReportFigaro];
  swift_beginAccess(&v16[OBJC_IVAR___BSUIContextActionDataModel_shouldReportFigaro], v58, 1, 0);
  *v37 = (char)v33;
  v38 = v1 + v8[10];
  v39 = *(_QWORD *)v38;
  LOBYTE(v33) = *(_BYTE *)(v38 + 8);
  sub_64DD8(*(_QWORD *)v38, (char)v33);
  v40 = sub_768E8(v39, (char)v33);
  sub_64FFC(v39, (char)v33);
  v41 = &v16[OBJC_IVAR___BSUIContextActionDataModel_isAnODPRecommendation];
  swift_beginAccess(&v16[OBJC_IVAR___BSUIContextActionDataModel_isAnODPRecommendation], v57, 1, 0);
  *v41 = v40 & 1;
  v42 = v1 + v8[11];
  v43 = *(_QWORD *)v42;
  LOBYTE(v33) = *(_BYTE *)(v42 + 8);
  sub_64DD8(*(_QWORD *)v42, (char)v33);
  v44 = sub_768E8(v43, (char)v33);
  sub_64FFC(v43, (char)v33);
  v45 = &v16[OBJC_IVAR___BSUIContextActionDataModel_supportsSuggestionContextMenu];
  swift_beginAccess(&v16[OBJC_IVAR___BSUIContextActionDataModel_supportsSuggestionContextMenu], v56, 1, 0);
  *v45 = v44 & 1;
  sub_77C6C((uint64_t)v4);
  v46 = (uint64_t)&v16[OBJC_IVAR___BSUIContextActionDataModel_analyticsAttributes];
  swift_beginAccess(&v16[OBJC_IVAR___BSUIContextActionDataModel_analyticsAttributes], v62, 33, 0);
  sub_AC740((uint64_t)v4, v46);
  swift_endAccess(v62);
  sub_77864((uint64_t)v62);
  v47 = v63;
  v48 = v64;
  sub_66898(v62, (uint64_t)v63);
  v49 = *(void **)(v1 + 64);
  v50 = *(_BYTE *)(v1 + 72);
  sub_AAFF4(v49, v50);
  v51 = (id)sub_77890(v49, v50);
  sub_794D8(v49, v50);
  if (!v51)
    v51 = objc_msgSend(objc_allocWithZone((Class)UIViewController), "init");
  v52 = (*(uint64_t (**)(char *, id, void *, uint64_t))(v48 + 8))(v16, v51, v47, v48);

  v53 = sub_133DE8(v52);
  swift_bridgeObjectRelease(v52);

  _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(v62);
  return v53;
}

uint64_t sub_AA054(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v2;
  int v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v17[4];
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v2 = 0xD000000000000013;
  v3 = *a1;
  v17[2] = a2;
  v4 = 0x80000000002702A0;
  v5 = 0;
  v6 = 0;
  v7 = 0;
  v8 = 0;
  if (((1 << v3) & 0x15F) == 0)
  {
    if (v3 == 5)
      v2 = sub_17EB50();
    v18 = v2;
    v19 = v4;
    v9 = sub_668F8();
    v5 = Text.init<A>(_:)(&v18, &type metadata for String, v9);
    v6 = v10;
    v7 = v11 & 1;
  }
  v18 = v5;
  v19 = v6;
  v20 = v7;
  v21 = v8;
  v12 = sub_5C154(&qword_321D18);
  v13 = sub_5C154(&qword_321D28);
  v14 = sub_AAB1C((unint64_t *)&qword_321D10, &qword_321D18, (uint64_t)&protocol witness table for Text, (uint64_t)&protocol conformance descriptor for <A> A?);
  v15 = sub_AAB1C(&qword_321D20, &qword_321D28, (uint64_t)&protocol witness table for AnyView, (uint64_t)&protocol conformance descriptor for <> ForEach<A, B, C>);
  return Section<>.init(header:content:)(&v18, sub_AC6A8, v17, v12, v13, v14, v15);
}

uint64_t sub_AA1B8(uint64_t a1)
{
  uint64_t KeyPath;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  v6 = a1;
  KeyPath = swift_getKeyPath(&unk_25B598);
  swift_bridgeObjectRetain(a1);
  v3 = sub_5C154(&qword_3260D0);
  v4 = sub_AC6B8(&qword_321E58, &qword_3260D0);
  return ForEach<>.init(_:id:content:)(&v6, KeyPath, sub_AA268, 0, v3, &type metadata for AnyView, v4, &protocol witness table for String, &protocol witness table for AnyView);
}

uint64_t sub_AA268@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  __n128 v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  _QWORD v14[3];
  uint64_t v15;
  uint64_t v16;

  v3 = a1[3];
  v4 = a1[4];
  sub_66898(a1, v3);
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v4 + 64))(v14, v3, v4);
  v5 = v15;
  v6 = v16;
  v7 = sub_66898(v14, v15);
  v8 = __chkstk_darwin(v7);
  v10 = (char *)&v14[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, __n128))(v11 + 16))(v10, v8);
  *a2 = AnyView.init<A>(_:)(v10, v5, v6);
  return _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(v14);
}

uint64_t sub_AA324(uint64_t a1)
{
  return sub_AA054((unsigned __int8 *)a1, *(_QWORD *)(a1 + 8));
}

id SwiftUISourceView.init()()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SwiftUISourceView();
  return objc_msgSendSuper2(&v2, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
}

id Window.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  objc_class *v4;

  return objc_msgSend(objc_allocWithZone(v4), "initWithFrame:", a1, a2, a3, a4);
}

void SwiftUISourceView.init(frame:)()
{
  _swift_stdlib_reportUnimplementedInitializer("BookStoreUI.SwiftUISourceView", 29, "init(frame:)", 12, 0);
  __break(1u);
}

id SwiftUISourceView.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SwiftUISourceView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_AA4E8()
{
  unint64_t v0;

  v0 = sub_AC850();
  return EnvironmentValues.subscript.getter(&type metadata for ContextMenuProviderKey, &type metadata for ContextMenuProviderKey, v0);
}

uint64_t sub_AA524()
{
  unint64_t v0;

  v0 = sub_AC850();
  return EnvironmentValues.subscript.getter(&type metadata for ContextMenuProviderKey, &type metadata for ContextMenuProviderKey, v0);
}

uint64_t sub_AA560(uint64_t a1)
{
  unint64_t v1;
  _BYTE v3[40];
  _QWORD v4[5];

  sub_5E0D8(a1, (uint64_t)v4);
  sub_5E0D8((uint64_t)v4, (uint64_t)v3);
  v1 = sub_AC850();
  EnvironmentValues.subscript.setter(v3, &type metadata for ContextMenuProviderKey, &type metadata for ContextMenuProviderKey, v1);
  return _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(v4);
}

uint64_t sub_AA5C0()
{
  return EnvironmentValues.libraryAssetState.getter();
}

uint64_t sub_AA5E0@<X0>(_QWORD *a1@<X8>)
{
  unint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD v7[2];

  v2 = sub_AC80C();
  result = EnvironmentValues.subscript.getter(&type metadata for ContextMenuSourceViewControllerProviderKey, &type metadata for ContextMenuSourceViewControllerProviderKey, v2);
  v4 = v7[0];
  if (v7[0])
  {
    v5 = v7[1];
    ((void (*)(_QWORD *__return_ptr, uint64_t))v7[0])(v7, result);
    result = sub_6C2DC(v4, v5);
    v6 = v7[0];
  }
  else
  {
    v6 = 0;
  }
  *a1 = v6;
  return result;
}

uint64_t type metadata accessor for ContextActionMenuView(uint64_t a1)
{
  uint64_t result;

  result = qword_321DA8;
  if (!qword_321DA8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ContextActionMenuView);
  return result;
}

uint64_t sub_AA69C()
{
  return EnvironmentValues.libraryAssetState.getter();
}

uint64_t sub_AA6BC()
{
  return EnvironmentValues.referenceId.getter();
}

uint64_t sub_AA6DC()
{
  return EnvironmentValues.referenceId.getter();
}

uint64_t sub_AA6FC@<X0>(_BYTE *a1@<X8>)
{
  unint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_AC7C8();
  result = EnvironmentValues.subscript.getter(&type metadata for FigaroPageConfigurationKey, &type metadata for FigaroPageConfigurationKey, v2);
  *a1 = v4;
  return result;
}

uint64_t sub_AA748@<X0>(_BYTE *a1@<X8>)
{
  unint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_AC7C8();
  result = EnvironmentValues.subscript.getter(&type metadata for FigaroPageConfigurationKey, &type metadata for FigaroPageConfigurationKey, v2);
  *a1 = v4;
  return result;
}

uint64_t sub_AA794(char *a1)
{
  unint64_t v1;
  char v3;

  v3 = *a1;
  v1 = sub_AC7C8();
  return EnvironmentValues.subscript.setter(&v3, &type metadata for FigaroPageConfigurationKey, &type metadata for FigaroPageConfigurationKey, v1);
}

uint64_t sub_AA7DC(char *a1)
{
  unint64_t v1;
  char v3;

  v3 = *a1;
  v1 = sub_AC7C8();
  return EnvironmentValues.subscript.setter(&v3, &type metadata for FigaroPageConfigurationKey, &type metadata for FigaroPageConfigurationKey, v1);
}

uint64_t sub_AA824@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = EnvironmentValues.isAnODPRecommendation.getter();
  *a1 = result & 1;
  return result;
}

uint64_t sub_AA850@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = EnvironmentValues.isAnODPRecommendation.getter();
  *a1 = result & 1;
  return result;
}

uint64_t sub_AA87C(unsigned __int8 *a1)
{
  return EnvironmentValues.isAnODPRecommendation.setter(*a1);
}

uint64_t sub_AA8A0(unsigned __int8 *a1)
{
  return EnvironmentValues.isAnODPRecommendation.setter(*a1);
}

uint64_t sub_AA8C4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = EnvironmentValues.supportsSuggestionContextMenu.getter();
  *a1 = result & 1;
  return result;
}

uint64_t sub_AA8F0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = EnvironmentValues.supportsSuggestionContextMenu.getter();
  *a1 = result & 1;
  return result;
}

uint64_t sub_AA91C(unsigned __int8 *a1)
{
  return EnvironmentValues.supportsSuggestionContextMenu.setter(*a1);
}

uint64_t sub_AA940(unsigned __int8 *a1)
{
  return EnvironmentValues.supportsSuggestionContextMenu.setter(*a1);
}

uint64_t sub_AA964()
{
  return EnvironmentValues.analyticsAttributes.getter();
}

uint64_t sub_AA984()
{
  return EnvironmentValues.analyticsAttributes.getter();
}

uint64_t sub_AA9A4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v6;

  v2 = type metadata accessor for ContextAssetInfoAnalytics(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_AC784(a1, (uint64_t)v4);
  return EnvironmentValues.analyticsAttributes.setter(v4);
}

uint64_t sub_AAA1C(uint64_t a1, uint64_t a2)
{
  initializeWithTake for EditionsPageIntent(a2, a1);
  return a2;
}

unsigned __int8 *sub_AAA58@<X0>(unsigned __int8 *result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

unint64_t sub_AAA64()
{
  unint64_t result;
  uint64_t v1;

  result = qword_321D08;
  if (!qword_321D08)
  {
    v1 = sub_667D0(&qword_321CF8);
    sub_AAB1C((unint64_t *)&qword_321D10, &qword_321D18, (uint64_t)&protocol witness table for Text, (uint64_t)&protocol conformance descriptor for <A> A?);
    sub_AAB1C(&qword_321D20, &qword_321D28, (uint64_t)&protocol witness table for AnyView, (uint64_t)&protocol conformance descriptor for <> ForEach<A, B, C>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> Section<A, B, C>, v1);
    atomic_store(result, (unint64_t *)&qword_321D08);
  }
  return result;
}

uint64_t sub_AAB1C(unint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    v7 = sub_667D0(a2);
    result = swift_getWitnessTable(a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for SwiftUISourceView()
{
  return objc_opt_self(_TtC11BookStoreUI17SwiftUISourceView);
}

uint64_t sub_AAB98(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &opaque type descriptor for <<opaque return type of ContextActionMenuView.body>>, 1);
}

char *initializeBufferWithCopyOfBuffer for ContextActionMenuView(char *a1, char **a2, int *a3)
{
  int v4;
  char *v5;
  uint64_t *v8;
  char v9;
  char *v10;
  __int128 v11;
  uint64_t v12;
  char *v13;
  char v14;
  uint64_t v15;
  char *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  char *v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  __int128 v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  unint64_t v62;
  __int128 v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  void (*v67)(char *, uint64_t, uint64_t, __n128);
  __n128 v68;

  v4 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v5 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = &v5[(v4 + 16) & ~(unint64_t)v4];
    swift_retain(v5);
  }
  else
  {
    *((_QWORD *)a1 + 1) = a2[1];
    v8 = (uint64_t *)(a2 + 2);
    v9 = *((_BYTE *)a2 + 56);
    v10 = v5;
    if ((v9 & 1) != 0)
    {
      v11 = *(_OWORD *)(a2 + 5);
      *(_OWORD *)(a1 + 40) = v11;
      (**(void (***)(uint64_t, uint64_t *))(v11 - 8))((uint64_t)(a1 + 16), v8);
    }
    else
    {
      v12 = *v8;
      *((_QWORD *)a1 + 2) = *v8;
      swift_retain(v12);
    }
    a1[56] = v9;
    v13 = a2[8];
    v14 = *((_BYTE *)a2 + 72);
    sub_AAFF4(v13, v14);
    *((_QWORD *)a1 + 8) = v13;
    a1[72] = v14;
    v15 = a3[7];
    v16 = &a1[v15];
    v17 = (uint64_t *)((char *)a2 + v15);
    v18 = sub_5C154(&qword_321CE8);
    if (swift_getEnumCaseMultiPayload(v17, v18) == 1)
    {
      v19 = type metadata accessor for LibraryAssetState(0);
      v20 = *(_QWORD *)(v19 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v20 + 48))(v17, 1, v19))
      {
        v21 = sub_5C154(&qword_321D30);
        memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
        v22 = 1;
      }
      else
      {
        (*(void (**)(char *, uint64_t *, uint64_t))(v20 + 16))(v16, v17, v19);
        v22 = 1;
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v16, 0, 1, v19);
      }
    }
    else
    {
      v23 = *v17;
      *(_QWORD *)v16 = *v17;
      swift_retain(v23);
      v22 = 0;
    }
    swift_storeEnumTagMultiPayload(v16, v18, v22);
    v24 = a3[8];
    v25 = &a1[v24];
    v26 = (uint64_t *)((char *)a2 + v24);
    v27 = sub_5C154(&qword_320268);
    if (swift_getEnumCaseMultiPayload(v26, v27) == 1)
    {
      v28 = type metadata accessor for UUID(0);
      v29 = *(_QWORD *)(v28 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v29 + 48))(v26, 1, v28))
      {
        v30 = sub_5C154(&qword_31FA60);
        memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
        v31 = 1;
      }
      else
      {
        (*(void (**)(char *, uint64_t *, uint64_t))(v29 + 16))(v25, v26, v28);
        v31 = 1;
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v25, 0, 1, v28);
      }
    }
    else
    {
      v32 = *v26;
      *(_QWORD *)v25 = *v26;
      swift_retain(v32);
      v31 = 0;
    }
    swift_storeEnumTagMultiPayload(v25, v27, v31);
    v33 = a3[9];
    v34 = &a1[v33];
    v35 = (uint64_t)a2 + v33;
    v36 = *(_QWORD *)v35;
    v37 = *(_BYTE *)(v35 + 8);
    sub_64DD8(*(_QWORD *)v35, v37);
    *(_QWORD *)v34 = v36;
    v34[8] = v37;
    v38 = a3[10];
    v39 = &a1[v38];
    v40 = (uint64_t)a2 + v38;
    v41 = *(_QWORD *)v40;
    v42 = *(_BYTE *)(v40 + 8);
    sub_64DD8(*(_QWORD *)v40, v42);
    *(_QWORD *)v39 = v41;
    v39[8] = v42;
    v43 = a3[11];
    v44 = &a1[v43];
    v45 = (uint64_t)a2 + v43;
    v46 = *(_QWORD *)v45;
    v47 = *(_BYTE *)(v45 + 8);
    sub_64DD8(*(_QWORD *)v45, v47);
    *(_QWORD *)v44 = v46;
    v44[8] = v47;
    v48 = a3[12];
    v49 = &a1[v48];
    v50 = (uint64_t *)((char *)a2 + v48);
    v51 = sub_5C154(&qword_3202D0);
    if (swift_getEnumCaseMultiPayload(v50, v51) == 1)
    {
      v52 = type metadata accessor for OdpSuggestionType(0);
      v53 = *(_QWORD *)(v52 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v53 + 48))(v50, 1, v52))
      {
        v54 = type metadata accessor for ContextAssetInfoAnalytics(0);
        memcpy(v49, v50, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
        v55 = 1;
      }
      else
      {
        (*(void (**)(char *, uint64_t *, uint64_t))(v53 + 16))(v49, v50, v52);
        v55 = 1;
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v53 + 56))(v49, 0, 1, v52);
      }
    }
    else
    {
      v56 = *v50;
      *(_QWORD *)v49 = *v50;
      swift_retain(v56);
      v55 = 0;
    }
    swift_storeEnumTagMultiPayload(v49, v51, v55);
    v57 = a3[13];
    v58 = *(_OWORD *)((char *)a2 + v57 + 24);
    *(_OWORD *)&a1[v57 + 24] = v58;
    (**(void (***)(void))(v58 - 8))();
    v59 = a3[14];
    v60 = &a1[v59];
    v61 = (uint64_t)a2 + v59;
    v62 = *(_QWORD *)(v61 + 8);
    if (v62 >= 0xB)
    {
      *(_QWORD *)v60 = *(_QWORD *)v61;
      *((_QWORD *)v60 + 1) = v62;
      v64 = v60 + 16;
      v65 = v61 + 16;
      v66 = *(_QWORD *)(v61 + 40);
      *((_QWORD *)v60 + 5) = v66;
      v67 = **(void (***)(char *, uint64_t, uint64_t, __n128))(v66 - 8);
      v68 = swift_bridgeObjectRetain(v62);
      v67(v64, v65, v66, v68);
    }
    else
    {
      v63 = *(_OWORD *)(v61 + 16);
      *(_OWORD *)v60 = *(_OWORD *)v61;
      *((_OWORD *)v60 + 1) = v63;
      *((_OWORD *)v60 + 2) = *(_OWORD *)(v61 + 32);
    }
  }
  return a1;
}

id sub_AAFF4(id a1, char a2)
{
  if ((a2 & 1) != 0)
    return a1;
  else
    return (id)swift_retain(a1);
}

unint64_t destroy for ContextActionMenuView(uint64_t a1, int *a2)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t result;

  v4 = (_QWORD *)(a1 + 16);
  if ((*(_BYTE *)(a1 + 56) & 1) != 0)
    _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(v4);
  else
    swift_release(*v4);
  sub_794D8(*(id *)(a1 + 64), *(_BYTE *)(a1 + 72));
  v5 = (_QWORD *)(a1 + a2[7]);
  v6 = sub_5C154(&qword_321CE8);
  if (swift_getEnumCaseMultiPayload(v5, v6) == 1)
  {
    v7 = type metadata accessor for LibraryAssetState(0);
    v8 = *(_QWORD *)(v7 - 8);
    if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v8 + 48))(v5, 1, v7))
      (*(void (**)(_QWORD *, uint64_t))(v8 + 8))(v5, v7);
  }
  else
  {
    swift_release(*v5);
  }
  v9 = (_QWORD *)(a1 + a2[8]);
  v10 = sub_5C154(&qword_320268);
  if (swift_getEnumCaseMultiPayload(v9, v10) == 1)
  {
    v11 = type metadata accessor for UUID(0);
    v12 = *(_QWORD *)(v11 - 8);
    if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v12 + 48))(v9, 1, v11))
      (*(void (**)(_QWORD *, uint64_t))(v12 + 8))(v9, v11);
  }
  else
  {
    swift_release(*v9);
  }
  sub_64FFC(*(_QWORD *)(a1 + a2[9]), *(_BYTE *)(a1 + a2[9] + 8));
  sub_64FFC(*(_QWORD *)(a1 + a2[10]), *(_BYTE *)(a1 + a2[10] + 8));
  sub_64FFC(*(_QWORD *)(a1 + a2[11]), *(_BYTE *)(a1 + a2[11] + 8));
  v13 = (_QWORD *)(a1 + a2[12]);
  v14 = sub_5C154(&qword_3202D0);
  if (swift_getEnumCaseMultiPayload(v13, v14) == 1)
  {
    v15 = type metadata accessor for OdpSuggestionType(0);
    v16 = *(_QWORD *)(v15 - 8);
    if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v16 + 48))(v13, 1, v15))
      (*(void (**)(_QWORD *, uint64_t))(v16 + 8))(v13, v15);
  }
  else
  {
    swift_release(*v13);
  }
  _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((_QWORD *)(a1 + a2[13]));
  v17 = a1 + a2[14];
  result = *(_QWORD *)(v17 + 8);
  if (result >= 0xB)
  {
    swift_bridgeObjectRelease(result);
    return _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((_QWORD *)(v17 + 16));
  }
  return result;
}

uint64_t initializeWithCopy for ContextActionMenuView(uint64_t a1, uint64_t a2, int *a3)
{
  void *v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t *v9;
  char v10;
  id v11;
  __int128 v12;
  uint64_t v13;
  void *v14;
  char v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  __int128 v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  __int128 v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  void (*v68)(uint64_t, uint64_t, uint64_t, __n128);
  __n128 v69;

  v6 = *(void **)a2;
  v7 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v7;
  v8 = (uint64_t *)(a1 + 16);
  v9 = (uint64_t *)(a2 + 16);
  v10 = *(_BYTE *)(a2 + 56);
  v11 = v6;
  if ((v10 & 1) != 0)
  {
    v12 = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 40) = v12;
    (**(void (***)(uint64_t *, uint64_t *))(v12 - 8))(v8, v9);
  }
  else
  {
    v13 = *v9;
    *v8 = *v9;
    swift_retain(v13);
  }
  *(_BYTE *)(a1 + 56) = v10;
  v14 = *(void **)(a2 + 64);
  v15 = *(_BYTE *)(a2 + 72);
  sub_AAFF4(v14, v15);
  *(_QWORD *)(a1 + 64) = v14;
  *(_BYTE *)(a1 + 72) = v15;
  v16 = a3[7];
  v17 = (uint64_t *)(a1 + v16);
  v18 = (uint64_t *)(a2 + v16);
  v19 = sub_5C154(&qword_321CE8);
  if (swift_getEnumCaseMultiPayload(v18, v19) == 1)
  {
    v20 = type metadata accessor for LibraryAssetState(0);
    v21 = *(_QWORD *)(v20 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v21 + 48))(v18, 1, v20))
    {
      v22 = sub_5C154(&qword_321D30);
      memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
      v23 = 1;
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v21 + 16))(v17, v18, v20);
      v23 = 1;
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v17, 0, 1, v20);
    }
  }
  else
  {
    v24 = *v18;
    *v17 = *v18;
    swift_retain(v24);
    v23 = 0;
  }
  swift_storeEnumTagMultiPayload(v17, v19, v23);
  v25 = a3[8];
  v26 = (uint64_t *)(a1 + v25);
  v27 = (uint64_t *)(a2 + v25);
  v28 = sub_5C154(&qword_320268);
  if (swift_getEnumCaseMultiPayload(v27, v28) == 1)
  {
    v29 = type metadata accessor for UUID(0);
    v30 = *(_QWORD *)(v29 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v30 + 48))(v27, 1, v29))
    {
      v31 = sub_5C154(&qword_31FA60);
      memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
      v32 = 1;
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v30 + 16))(v26, v27, v29);
      v32 = 1;
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v26, 0, 1, v29);
    }
  }
  else
  {
    v33 = *v27;
    *v26 = *v27;
    swift_retain(v33);
    v32 = 0;
  }
  swift_storeEnumTagMultiPayload(v26, v28, v32);
  v34 = a3[9];
  v35 = a1 + v34;
  v36 = a2 + v34;
  v37 = *(_QWORD *)v36;
  v38 = *(_BYTE *)(v36 + 8);
  sub_64DD8(*(_QWORD *)v36, v38);
  *(_QWORD *)v35 = v37;
  *(_BYTE *)(v35 + 8) = v38;
  v39 = a3[10];
  v40 = a1 + v39;
  v41 = a2 + v39;
  v42 = *(_QWORD *)v41;
  v43 = *(_BYTE *)(v41 + 8);
  sub_64DD8(*(_QWORD *)v41, v43);
  *(_QWORD *)v40 = v42;
  *(_BYTE *)(v40 + 8) = v43;
  v44 = a3[11];
  v45 = a1 + v44;
  v46 = a2 + v44;
  v47 = *(_QWORD *)v46;
  v48 = *(_BYTE *)(v46 + 8);
  sub_64DD8(*(_QWORD *)v46, v48);
  *(_QWORD *)v45 = v47;
  *(_BYTE *)(v45 + 8) = v48;
  v49 = a3[12];
  v50 = (uint64_t *)(a1 + v49);
  v51 = (uint64_t *)(a2 + v49);
  v52 = sub_5C154(&qword_3202D0);
  if (swift_getEnumCaseMultiPayload(v51, v52) == 1)
  {
    v53 = type metadata accessor for OdpSuggestionType(0);
    v54 = *(_QWORD *)(v53 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v54 + 48))(v51, 1, v53))
    {
      v55 = type metadata accessor for ContextAssetInfoAnalytics(0);
      memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
      v56 = 1;
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v54 + 16))(v50, v51, v53);
      v56 = 1;
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v54 + 56))(v50, 0, 1, v53);
    }
  }
  else
  {
    v57 = *v51;
    *v50 = *v51;
    swift_retain(v57);
    v56 = 0;
  }
  swift_storeEnumTagMultiPayload(v50, v52, v56);
  v58 = a3[13];
  v59 = *(_OWORD *)(a2 + v58 + 24);
  *(_OWORD *)(a1 + v58 + 24) = v59;
  (**(void (***)(void))(v59 - 8))();
  v60 = a3[14];
  v61 = a1 + v60;
  v62 = a2 + v60;
  v63 = *(_QWORD *)(v62 + 8);
  if (v63 >= 0xB)
  {
    *(_QWORD *)v61 = *(_QWORD *)v62;
    *(_QWORD *)(v61 + 8) = v63;
    v65 = v61 + 16;
    v66 = v62 + 16;
    v67 = *(_QWORD *)(v62 + 40);
    *(_QWORD *)(v61 + 40) = v67;
    v68 = **(void (***)(uint64_t, uint64_t, uint64_t, __n128))(v67 - 8);
    v69 = swift_bridgeObjectRetain(v63);
    v68(v65, v66, v67, v69);
  }
  else
  {
    v64 = *(_OWORD *)(v62 + 16);
    *(_OWORD *)v61 = *(_OWORD *)v62;
    *(_OWORD *)(v61 + 16) = v64;
    *(_OWORD *)(v61 + 32) = *(_OWORD *)(v62 + 32);
  }
  return a1;
}

uint64_t assignWithCopy for ContextActionMenuView(uint64_t a1, uint64_t a2, int *a3)
{
  void *v6;
  void *v7;
  id v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  char v13;
  void *v14;
  char v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  char v54;
  uint64_t v55;
  uint64_t *v56;
  uint64_t *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  __int128 *v66;
  unint64_t v67;
  unint64_t v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  uint64_t v73;
  uint64_t v74;
  __int128 *v75;
  uint64_t v76;
  void (*v77)(uint64_t, __int128 *, uint64_t, __n128);
  __n128 v78;
  uint64_t v79;

  v6 = *(void **)a1;
  v7 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v8 = v7;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  if (a1 != a2)
  {
    v9 = (uint64_t *)(a2 + 16);
    sub_5E09C(a1 + 16, &qword_3202C8);
    if ((*(_BYTE *)(a2 + 56) & 1) != 0)
    {
      v10 = *(_QWORD *)(a2 + 40);
      *(_QWORD *)(a1 + 40) = v10;
      *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
      (**(void (***)(uint64_t, uint64_t))(v10 - 8))(a1 + 16, a2 + 16);
      *(_BYTE *)(a1 + 56) = 1;
    }
    else
    {
      v11 = *v9;
      *(_QWORD *)(a1 + 16) = *v9;
      *(_BYTE *)(a1 + 56) = 0;
      swift_retain(v11);
    }
  }
  v12 = *(void **)(a2 + 64);
  v13 = *(_BYTE *)(a2 + 72);
  sub_AAFF4(v12, v13);
  v14 = *(void **)(a1 + 64);
  v15 = *(_BYTE *)(a1 + 72);
  *(_QWORD *)(a1 + 64) = v12;
  *(_BYTE *)(a1 + 72) = v13;
  sub_794D8(v14, v15);
  if (a1 != a2)
  {
    v16 = a3[7];
    v17 = (uint64_t *)(a1 + v16);
    v18 = (uint64_t *)(a2 + v16);
    sub_5E09C(a1 + v16, &qword_321CE8);
    v19 = sub_5C154(&qword_321CE8);
    if (swift_getEnumCaseMultiPayload(v18, v19) == 1)
    {
      v20 = type metadata accessor for LibraryAssetState(0);
      v21 = *(_QWORD *)(v20 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v21 + 48))(v18, 1, v20))
      {
        v22 = sub_5C154(&qword_321D30);
        memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
        v23 = 1;
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v21 + 16))(v17, v18, v20);
        v23 = 1;
        (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v17, 0, 1, v20);
      }
    }
    else
    {
      v24 = *v18;
      *v17 = *v18;
      swift_retain(v24);
      v23 = 0;
    }
    swift_storeEnumTagMultiPayload(v17, v19, v23);
    v25 = a3[8];
    v26 = (uint64_t *)(a1 + v25);
    v27 = (uint64_t *)(a2 + v25);
    sub_5E09C(a1 + v25, &qword_320268);
    v28 = sub_5C154(&qword_320268);
    if (swift_getEnumCaseMultiPayload(v27, v28) == 1)
    {
      v29 = type metadata accessor for UUID(0);
      v30 = *(_QWORD *)(v29 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v30 + 48))(v27, 1, v29))
      {
        v31 = sub_5C154(&qword_31FA60);
        memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
        v32 = 1;
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v30 + 16))(v26, v27, v29);
        v32 = 1;
        (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v26, 0, 1, v29);
      }
    }
    else
    {
      v33 = *v27;
      *v26 = *v27;
      swift_retain(v33);
      v32 = 0;
    }
    swift_storeEnumTagMultiPayload(v26, v28, v32);
  }
  v34 = a3[9];
  v35 = a1 + v34;
  v36 = a2 + v34;
  v37 = *(_QWORD *)v36;
  v38 = *(_BYTE *)(v36 + 8);
  sub_64DD8(*(_QWORD *)v36, v38);
  v39 = *(_QWORD *)v35;
  v40 = *(_BYTE *)(v35 + 8);
  *(_QWORD *)v35 = v37;
  *(_BYTE *)(v35 + 8) = v38;
  sub_64FFC(v39, v40);
  v41 = a3[10];
  v42 = a1 + v41;
  v43 = a2 + v41;
  v44 = *(_QWORD *)v43;
  v45 = *(_BYTE *)(v43 + 8);
  sub_64DD8(*(_QWORD *)v43, v45);
  v46 = *(_QWORD *)v42;
  v47 = *(_BYTE *)(v42 + 8);
  *(_QWORD *)v42 = v44;
  *(_BYTE *)(v42 + 8) = v45;
  sub_64FFC(v46, v47);
  v48 = a3[11];
  v49 = a1 + v48;
  v50 = a2 + v48;
  v51 = *(_QWORD *)v50;
  v52 = *(_BYTE *)(v50 + 8);
  sub_64DD8(*(_QWORD *)v50, v52);
  v53 = *(_QWORD *)v49;
  v54 = *(_BYTE *)(v49 + 8);
  *(_QWORD *)v49 = v51;
  *(_BYTE *)(v49 + 8) = v52;
  sub_64FFC(v53, v54);
  if (a1 != a2)
  {
    v55 = a3[12];
    v56 = (uint64_t *)(a1 + v55);
    v57 = (uint64_t *)(a2 + v55);
    sub_5E09C(a1 + v55, &qword_3202D0);
    v58 = sub_5C154(&qword_3202D0);
    if (swift_getEnumCaseMultiPayload(v57, v58) == 1)
    {
      v59 = type metadata accessor for OdpSuggestionType(0);
      v60 = *(_QWORD *)(v59 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v60 + 48))(v57, 1, v59))
      {
        v61 = type metadata accessor for ContextAssetInfoAnalytics(0);
        memcpy(v56, v57, *(_QWORD *)(*(_QWORD *)(v61 - 8) + 64));
        v62 = 1;
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v60 + 16))(v56, v57, v59);
        v62 = 1;
        (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v60 + 56))(v56, 0, 1, v59);
      }
    }
    else
    {
      v63 = *v57;
      *v56 = *v57;
      swift_retain(v63);
      v62 = 0;
    }
    swift_storeEnumTagMultiPayload(v56, v58, v62);
  }
  sub_65938((_QWORD *)(a1 + a3[13]), (_QWORD *)(a2 + a3[13]));
  v64 = a3[14];
  v65 = a1 + v64;
  v66 = (__int128 *)(a2 + v64);
  v67 = *(_QWORD *)(a1 + v64 + 8);
  v68 = *((_QWORD *)v66 + 1);
  if (v67 >= 0xB)
  {
    if (v68 >= 0xB)
    {
      *(_QWORD *)v65 = *(_QWORD *)v66;
      v79 = *((_QWORD *)v66 + 1);
      *(_QWORD *)(v65 + 8) = v79;
      swift_bridgeObjectRetain(v79);
      swift_bridgeObjectRelease(v67);
      sub_A1478((_QWORD *)(v65 + 16), (_QWORD *)v66 + 2);
    }
    else
    {
      sub_5E09C(v65, &qword_31EEF0);
      v72 = v66[1];
      v71 = v66[2];
      *(_OWORD *)v65 = *v66;
      *(_OWORD *)(v65 + 16) = v72;
      *(_OWORD *)(v65 + 32) = v71;
    }
  }
  else if (v68 >= 0xB)
  {
    *(_QWORD *)v65 = *(_QWORD *)v66;
    v73 = *((_QWORD *)v66 + 1);
    *(_QWORD *)(v65 + 8) = v73;
    v74 = v65 + 16;
    v75 = v66 + 1;
    v76 = *((_QWORD *)v66 + 5);
    *(_QWORD *)(v65 + 40) = v76;
    v77 = **(void (***)(uint64_t, __int128 *, uint64_t, __n128))(v76 - 8);
    v78 = swift_bridgeObjectRetain(v73);
    v77(v74, v75, v76, v78);
  }
  else
  {
    v69 = *v66;
    v70 = v66[2];
    *(_OWORD *)(v65 + 16) = v66[1];
    *(_OWORD *)(v65 + 32) = v70;
    *(_OWORD *)v65 = v69;
  }
  return a1;
}

uint64_t initializeWithTake for ContextActionMenuView(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  void *v9;
  const void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  const void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  const void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __int128 v42;
  _OWORD *v43;
  __int128 *v44;
  __int128 v45;
  __int128 v46;

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  v7 = *(_OWORD *)(a2 + 41);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  v8 = a3[7];
  v9 = (void *)(a1 + v8);
  v10 = (const void *)(a2 + v8);
  *(_OWORD *)(a1 + 41) = v7;
  v11 = sub_5C154(&qword_321CE8);
  if (swift_getEnumCaseMultiPayload(v10, v11) == 1)
  {
    v12 = type metadata accessor for LibraryAssetState(0);
    v13 = *(_QWORD *)(v12 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v13 + 48))(v10, 1, v12))
    {
      v14 = sub_5C154(&qword_321D30);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v13 + 32))(v9, v10, v12);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v9, 0, 1, v12);
    }
    swift_storeEnumTagMultiPayload(v9, v11, 1);
  }
  else
  {
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  v15 = a3[8];
  v16 = (void *)(a1 + v15);
  v17 = (const void *)(a2 + v15);
  v18 = sub_5C154(&qword_320268);
  if (swift_getEnumCaseMultiPayload(v17, v18) == 1)
  {
    v19 = type metadata accessor for UUID(0);
    v20 = *(_QWORD *)(v19 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v20 + 48))(v17, 1, v19))
    {
      v21 = sub_5C154(&qword_31FA60);
      memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v20 + 32))(v16, v17, v19);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v16, 0, 1, v19);
    }
    swift_storeEnumTagMultiPayload(v16, v18, 1);
  }
  else
  {
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  v22 = a3[9];
  v23 = a3[10];
  v24 = a1 + v22;
  v25 = a2 + v22;
  *(_QWORD *)v24 = *(_QWORD *)v25;
  *(_BYTE *)(v24 + 8) = *(_BYTE *)(v25 + 8);
  v26 = a1 + v23;
  v27 = a2 + v23;
  *(_QWORD *)v26 = *(_QWORD *)v27;
  *(_BYTE *)(v26 + 8) = *(_BYTE *)(v27 + 8);
  v28 = a3[11];
  v29 = a3[12];
  v30 = a1 + v28;
  v31 = a2 + v28;
  *(_QWORD *)v30 = *(_QWORD *)v31;
  *(_BYTE *)(v30 + 8) = *(_BYTE *)(v31 + 8);
  v32 = (void *)(a1 + v29);
  v33 = (const void *)(a2 + v29);
  v34 = sub_5C154(&qword_3202D0);
  if (swift_getEnumCaseMultiPayload(v33, v34) == 1)
  {
    v35 = type metadata accessor for OdpSuggestionType(0);
    v36 = *(_QWORD *)(v35 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v36 + 48))(v33, 1, v35))
    {
      v37 = type metadata accessor for ContextAssetInfoAnalytics(0);
      memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v36 + 32))(v32, v33, v35);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v36 + 56))(v32, 0, 1, v35);
    }
    swift_storeEnumTagMultiPayload(v32, v34, 1);
  }
  else
  {
    memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
  }
  v38 = a3[13];
  v39 = a3[14];
  v40 = a1 + v38;
  v41 = a2 + v38;
  v42 = *(_OWORD *)(v41 + 16);
  *(_OWORD *)v40 = *(_OWORD *)v41;
  *(_OWORD *)(v40 + 16) = v42;
  *(_QWORD *)(v40 + 32) = *(_QWORD *)(v41 + 32);
  v43 = (_OWORD *)(a1 + v39);
  v44 = (__int128 *)(a2 + v39);
  v45 = v44[2];
  v46 = *v44;
  v43[1] = v44[1];
  v43[2] = v45;
  *v43 = v46;
  return a1;
}

uint64_t assignWithTake for ContextActionMenuView(uint64_t a1, uint64_t a2, int *a3)
{
  void *v6;
  __int128 v7;
  char v8;
  void *v9;
  char v10;
  uint64_t v11;
  void *v12;
  const void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  const void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  void *v44;
  const void *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  __int128 v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  unint64_t v58;
  __int128 v59;
  __int128 v60;

  v6 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  if (a1 != a2)
  {
    sub_5E09C(a1 + 16, &qword_3202C8);
    v7 = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
    *(_OWORD *)(a1 + 32) = v7;
    *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
  }
  v8 = *(_BYTE *)(a2 + 72);
  v9 = *(void **)(a1 + 64);
  v10 = *(_BYTE *)(a1 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 72) = v8;
  sub_794D8(v9, v10);
  if (a1 != a2)
  {
    v11 = a3[7];
    v12 = (void *)(a1 + v11);
    v13 = (const void *)(a2 + v11);
    sub_5E09C(a1 + v11, &qword_321CE8);
    v14 = sub_5C154(&qword_321CE8);
    if (swift_getEnumCaseMultiPayload(v13, v14) == 1)
    {
      v15 = type metadata accessor for LibraryAssetState(0);
      v16 = *(_QWORD *)(v15 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v16 + 48))(v13, 1, v15))
      {
        v17 = sub_5C154(&qword_321D30);
        memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v16 + 32))(v12, v13, v15);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v12, 0, 1, v15);
      }
      swift_storeEnumTagMultiPayload(v12, v14, 1);
    }
    else
    {
      memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    v18 = a3[8];
    v19 = (void *)(a1 + v18);
    v20 = (const void *)(a2 + v18);
    sub_5E09C(a1 + v18, &qword_320268);
    v21 = sub_5C154(&qword_320268);
    if (swift_getEnumCaseMultiPayload(v20, v21) == 1)
    {
      v22 = type metadata accessor for UUID(0);
      v23 = *(_QWORD *)(v22 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v23 + 48))(v20, 1, v22))
      {
        v24 = sub_5C154(&qword_31FA60);
        memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v23 + 32))(v19, v20, v22);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v19, 0, 1, v22);
      }
      swift_storeEnumTagMultiPayload(v19, v21, 1);
    }
    else
    {
      memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    }
  }
  v25 = a3[9];
  v26 = a1 + v25;
  v27 = (uint64_t *)(a2 + v25);
  v28 = *v27;
  LOBYTE(v27) = *((_BYTE *)v27 + 8);
  v29 = *(_QWORD *)v26;
  v30 = *(_BYTE *)(v26 + 8);
  *(_QWORD *)v26 = v28;
  *(_BYTE *)(v26 + 8) = (_BYTE)v27;
  sub_64FFC(v29, v30);
  v31 = a3[10];
  v32 = a1 + v31;
  v33 = (uint64_t *)(a2 + v31);
  v34 = *v33;
  LOBYTE(v33) = *((_BYTE *)v33 + 8);
  v35 = *(_QWORD *)v32;
  v36 = *(_BYTE *)(v32 + 8);
  *(_QWORD *)v32 = v34;
  *(_BYTE *)(v32 + 8) = (_BYTE)v33;
  sub_64FFC(v35, v36);
  v37 = a3[11];
  v38 = a1 + v37;
  v39 = (uint64_t *)(a2 + v37);
  v40 = *v39;
  LOBYTE(v39) = *((_BYTE *)v39 + 8);
  v41 = *(_QWORD *)v38;
  v42 = *(_BYTE *)(v38 + 8);
  *(_QWORD *)v38 = v40;
  *(_BYTE *)(v38 + 8) = (_BYTE)v39;
  sub_64FFC(v41, v42);
  if (a1 != a2)
  {
    v43 = a3[12];
    v44 = (void *)(a1 + v43);
    v45 = (const void *)(a2 + v43);
    sub_5E09C(a1 + v43, &qword_3202D0);
    v46 = sub_5C154(&qword_3202D0);
    if (swift_getEnumCaseMultiPayload(v45, v46) == 1)
    {
      v47 = type metadata accessor for OdpSuggestionType(0);
      v48 = *(_QWORD *)(v47 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v48 + 48))(v45, 1, v47))
      {
        v49 = type metadata accessor for ContextAssetInfoAnalytics(0);
        memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v48 + 32))(v44, v45, v47);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v44, 0, 1, v47);
      }
      swift_storeEnumTagMultiPayload(v44, v46, 1);
    }
    else
    {
      memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
    }
  }
  v50 = a3[13];
  v51 = a1 + v50;
  v52 = a2 + v50;
  _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((_QWORD *)(a1 + v50));
  *(_QWORD *)(v51 + 32) = *(_QWORD *)(v52 + 32);
  v53 = *(_OWORD *)(v52 + 16);
  *(_OWORD *)v51 = *(_OWORD *)v52;
  *(_OWORD *)(v51 + 16) = v53;
  v54 = a3[14];
  v55 = a1 + v54;
  v56 = a2 + v54;
  v57 = *(_QWORD *)(a1 + v54 + 8);
  if (v57 >= 0xB)
  {
    v58 = *(_QWORD *)(v56 + 8);
    if (v58 >= 0xB)
    {
      *(_QWORD *)v55 = *(_QWORD *)v56;
      *(_QWORD *)(v55 + 8) = v58;
      swift_bridgeObjectRelease(v57);
      _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((_QWORD *)(v55 + 16));
      v60 = *(_OWORD *)(v56 + 32);
      *(_OWORD *)(v55 + 16) = *(_OWORD *)(v56 + 16);
      *(_OWORD *)(v55 + 32) = v60;
      return a1;
    }
    sub_5E09C(v55, &qword_31EEF0);
  }
  v59 = *(_OWORD *)(v56 + 16);
  *(_OWORD *)v55 = *(_OWORD *)v56;
  *(_OWORD *)(v55 + 16) = v59;
  *(_OWORD *)(v55 + 32) = *(_OWORD *)(v56 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for ContextActionMenuView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_AC2F0);
}

uint64_t sub_AC2F0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v13;

  v6 = sub_5C154(&qword_321D38);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = a3[7];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + v9, a2, v8);
  }
  v10 = sub_5C154(&qword_321D40);
  v7 = *(_QWORD *)(v10 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v10;
    v9 = a3[8];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + v9, a2, v8);
  }
  v11 = sub_5C154(&qword_321D48);
  v7 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v9 = a3[12];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + v9, a2, v8);
  }
  v13 = *(_QWORD *)(a1 + a3[13] + 24);
  if (v13 >= 0xFFFFFFFF)
    LODWORD(v13) = -1;
  return (v13 + 1);
}

uint64_t storeEnumTagSinglePayload for ContextActionMenuView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_AC3D4);
}

uint64_t sub_AC3D4(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;

  v8 = sub_5C154(&qword_321D38);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = a4[7];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + v11, a2, a2, v10);
  }
  v12 = sub_5C154(&qword_321D40);
  v9 = *(_QWORD *)(v12 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v12;
    v11 = a4[8];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + v11, a2, a2, v10);
  }
  result = sub_5C154(&qword_321D48);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = a4[12];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + v11, a2, a2, v10);
  }
  *(_QWORD *)(a1 + a4[13] + 24) = (a2 - 1);
  return result;
}

void sub_AC4A8(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD v8[11];

  v8[0] = &unk_25B4F8;
  v8[1] = &unk_25B510;
  v8[2] = &unk_25B528;
  sub_AC5A0(319, &qword_321DB8, &qword_321D30);
  if (v3 <= 0x3F)
  {
    v8[3] = *(_QWORD *)(v2 - 8) + 64;
    sub_AC5A0(319, (unint64_t *)&qword_321DC0, &qword_31FA60);
    if (v5 <= 0x3F)
    {
      v8[4] = *(_QWORD *)(v4 - 8) + 64;
      v8[5] = &unk_25B528;
      v8[6] = &unk_25B528;
      v8[7] = &unk_25B528;
      sub_AC5EC(319);
      if (v7 <= 0x3F)
      {
        v8[8] = *(_QWORD *)(v6 - 8) + 64;
        v8[9] = &unk_25B540;
        v8[10] = &unk_25B558;
        swift_initStructMetadata(a1, 256, 11, v8, a1 + 16);
      }
    }
  }
}

void sub_AC5A0(uint64_t a1, unint64_t *a2, uint64_t *a3)
{
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!*a2)
  {
    v5 = sub_667D0(a3);
    v6 = type metadata accessor for Environment.Content(a1, v5);
    if (!v7)
      atomic_store(v6, a2);
  }
}

void sub_AC5EC(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_321DC8)
  {
    v2 = type metadata accessor for ContextAssetInfoAnalytics(255);
    v3 = type metadata accessor for Environment.Content(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_321DC8);
  }
}

unint64_t sub_AC644()
{
  unint64_t result;
  uint64_t v1;

  result = qword_321E48;
  if (!qword_321E48)
  {
    v1 = sub_667D0(&qword_321E50);
    sub_AAA64();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ForEach<A, B, C>, v1);
    atomic_store(result, (unint64_t *)&qword_321E48);
  }
  return result;
}

uint64_t sub_AC6A8()
{
  uint64_t v0;

  return sub_AA1B8(*(_QWORD *)(v0 + 16));
}

uint64_t sub_AC6B8(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = sub_667D0(a2);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v4);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_AC6F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_5C154(&qword_31F8B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_AC740(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ContextAssetInfoAnalytics(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_AC784(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ContextAssetInfoAnalytics(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_AC7C8()
{
  unint64_t result;

  result = qword_321E60;
  if (!qword_321E60)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for FigaroPageConfigurationKey, &type metadata for FigaroPageConfigurationKey);
    atomic_store(result, (unint64_t *)&qword_321E60);
  }
  return result;
}

unint64_t sub_AC80C()
{
  unint64_t result;

  result = qword_321E68;
  if (!qword_321E68)
  {
    result = swift_getWitnessTable(&unk_25C74C, &type metadata for ContextMenuSourceViewControllerProviderKey);
    atomic_store(result, (unint64_t *)&qword_321E68);
  }
  return result;
}

unint64_t sub_AC850()
{
  unint64_t result;

  result = qword_321E70;
  if (!qword_321E70)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for ContextMenuProviderKey, &type metadata for ContextMenuProviderKey);
    atomic_store(result, (unint64_t *)&qword_321E70);
  }
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for SeriesEntityCardComponent(_QWORD *a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  id v5;

  v3 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  v5 = v3;
  return a1;
}

void destroy for SeriesEntityCardComponent(id *a1)
{

}

uint64_t assignWithCopy for SeriesEntityCardComponent(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;

  v4 = *(void **)a1;
  v5 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v5;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  return a1;
}

uint64_t assignWithTake for SeriesEntityCardComponent(uint64_t a1, _QWORD *a2)
{
  void *v4;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *a2;

  *(_QWORD *)(a1 + 8) = a2[1];
  return a1;
}

uint64_t getEnumTagSinglePayload for SeriesEntityCardComponent(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 16))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for SeriesEntityCardComponent(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for SeriesEntityCardComponent()
{
  return &type metadata for SeriesEntityCardComponent;
}

uint64_t sub_ACA08(uint64_t a1, uint64_t a2)
{
  _QWORD v3[2];

  v3[0] = a2;
  v3[1] = sub_ACA48();
  return swift_getOpaqueTypeConformance2(v3, &opaque type descriptor for <<opaque return type of Component.body>>, 1);
}

unint64_t sub_ACA48()
{
  unint64_t result;

  result = qword_321E78;
  if (!qword_321E78)
  {
    result = swift_getWitnessTable(&unk_25B63C, &type metadata for SeriesEntityCardComponent);
    atomic_store(result, (unint64_t *)&qword_321E78);
  }
  return result;
}

uint64_t sub_ACA8C@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  __n128 v44;
  uint64_t v45;
  char *v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  unsigned __int8 *v53;
  uint64_t v54;
  unsigned __int8 *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  void (*v60)(char *, uint64_t);
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  uint64_t v70;
  void *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t OpaqueTypeConformance2;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  unint64_t v81;
  char *v82;
  uint64_t v83;
  __n128 v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  unsigned __int8 *v122;
  char v123[8];
  unsigned __int8 *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  unint64_t v128;
  uint64_t v129;
  unint64_t v130;

  v104 = a3;
  v103 = a2;
  v122 = a1;
  v120 = a4;
  v5 = sub_5C154(&qword_321EA8);
  __chkstk_darwin(v5);
  v118 = (uint64_t)&v91 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_5C154(&qword_31F480);
  __chkstk_darwin(v7);
  v119 = (uint64_t)&v91 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v117 = sub_5C154(&qword_321EB0);
  v9 = __chkstk_darwin(v117);
  v115 = (char *)&v91 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v116 = type metadata accessor for DataStackID(0, v9);
  v114 = *(_QWORD *)(v116 - 8);
  __chkstk_darwin(v116);
  v113 = (char *)&v91 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_5C154(&qword_321EB8);
  __chkstk_darwin(v12);
  v102 = (uint64_t)&v91 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_5C154(&qword_321EC0);
  __chkstk_darwin(v14);
  v101 = (char *)&v91 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_5C154(&qword_3217B8);
  __chkstk_darwin(v16);
  v98 = (uint64_t)&v91 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v96 = (uint64_t)&v91 - v19;
  v20 = type metadata accessor for LocalizerLookupStrategy(0);
  v21 = *(_QWORD *)(v20 - 8);
  v22 = v20;
  v23 = __chkstk_darwin(v20);
  v25 = (char *)&v91 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v100 = type metadata accessor for LocalizerDefaultValue(0, v23);
  v99 = *(_QWORD *)(v100 - 8);
  __chkstk_darwin(v100);
  v27 = (char *)&v91 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = type metadata accessor for LocalizerRequest(0);
  __chkstk_darwin(v28);
  v95 = (char *)&v91 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v30);
  v94 = (char *)&v91 - v31;
  v32 = type metadata accessor for SeriesEntityCardView(0);
  v97 = *(_QWORD *)(v32 - 8);
  __chkstk_darwin(v32);
  v34 = (char *)&v91 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v106 = sub_5C154(&qword_321EC8);
  v105 = *(_QWORD *)(v106 - 8);
  __chkstk_darwin(v106);
  v121 = (char *)&v91 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = sub_5C154(&qword_321ED0);
  v111 = *(_QWORD *)(v36 - 8);
  v112 = v36;
  __chkstk_darwin(v36);
  v110 = (char *)&v91 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  v109 = sub_5C154(&qword_321ED8);
  v108 = *(_QWORD *)(v109 - 8);
  __chkstk_darwin(v109);
  v107 = (char *)&v91 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = type metadata accessor for SeriesEntityCardComponentModel(0);
  v40 = (uint64_t)&a1[*(int *)(v39 + 20)];
  v41 = sub_5C154(&qword_321EE0);
  v42 = (void *)MResourceDecoder.wrappedValue.getter(v41);
  v93 = MResource.id.getter(v42);
  v92 = v43;

  LocalizerDefaultValue.init(stringLiteral:)("SERIES", 6, 2, v44);
  v45 = v22;
  (*(void (**)(char *, _QWORD, uint64_t))(v21 + 104))(v25, enum case for LocalizerLookupStrategy.default(_:), v22);
  v46 = v94;
  static LocalizerRequest.string(forKey:with:defaultValue:using:)(0xD000000000000021, 0x80000000002702E0, 0, v27, v25);
  (*(void (**)(char *, uint64_t))(v21 + 8))(v25, v45);
  (*(void (**)(char *, uint64_t))(v99 + 8))(v27, v100);
  v99 = v41;
  v100 = v40;
  v47 = (void *)MResourceDecoder.wrappedValue.getter(v41);
  v48 = MSeries.name.getter();
  v50 = v49;

  v51 = v95;
  static LocalizerRequest.verbatim(_:)(v48);
  swift_bridgeObjectRelease(v50);
  v52 = v96;
  v53 = v122;
  sub_1F693C(v96);
  v54 = v98;
  sub_1F6A68(v98);
  sub_1F6C44();
  v55 = v53;
  SeriesEntityCardView.init(seriesIDForLogging:preheader:title:subtitle:footnote:coverViewModels:allowDoubleWide:)(v93, v92, v46, v51, v52, v54, v56, *v53);
  v124 = v53;
  v125 = v103;
  v126 = v104;
  v57 = sub_5C154(&qword_321EE8);
  v58 = sub_648E0(&qword_321EF0, (uint64_t (*)(uint64_t))&type metadata accessor for SeriesEntityCardView, (uint64_t)&protocol conformance descriptor for SeriesEntityCardView);
  v59 = sub_ADBB4();
  View.contextMenu<A>(menuItems:)(sub_ADBA8, v123, v32, v57, v58, v59);
  v60 = *(void (**)(char *, uint64_t))(v97 + 8);
  v104 = v32;
  v60(v34, v32);
  v61 = sub_5C154(&qword_321F20);
  v62 = swift_allocObject(v61, 80, 7);
  *(_OWORD *)(v62 + 16) = xmmword_258070;
  v63 = (_QWORD *)(v62 + 32);
  v103 = v39;
  v64 = (uint64_t)&v55[*(int *)(v39 + 36)];
  v65 = (uint64_t)v101;
  v66 = v102;
  sub_5E1A4(v64, v102, &qword_321EB8);
  sub_66F14(v66, v65, &qword_321EC0);
  v67 = type metadata accessor for ExposureData(0);
  v68 = *(_QWORD *)(v67 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v68 + 48))(v65, 1, v67) == 1)
  {
    sub_5E09C(v65, &qword_321EC0);
    *(_OWORD *)v63 = 0u;
    *(_OWORD *)(v62 + 48) = 0u;
    *(_OWORD *)(v62 + 64) = 0u;
  }
  else
  {
    *(_QWORD *)(v62 + 56) = v67;
    *(_QWORD *)(v62 + 64) = sub_648E0(&qword_321F38, (uint64_t (*)(uint64_t))&type metadata accessor for ExposureData, (uint64_t)&protocol conformance descriptor for ExposureData);
    *(_QWORD *)(v62 + 72) = sub_648E0(&qword_321F40, (uint64_t (*)(uint64_t))&type metadata accessor for ExposureData, (uint64_t)&protocol conformance descriptor for ExposureData);
    v69 = sub_668BC(v63);
    (*(void (**)(_QWORD *, uint64_t, uint64_t))(v68 + 32))(v69, v65, v67);
  }
  v70 = type metadata accessor for SeriesExposureEvent(0);
  v71 = (void *)MResourceDecoder.wrappedValue.getter(v99);
  v72 = MResource.id.getter(v71);
  v74 = v73;

  v75 = v113;
  DataStackID.init(stringLiteral:)(v72, v74);
  v127 = v104;
  v128 = v57;
  v129 = v58;
  v130 = v59;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v127, &opaque type descriptor for <<opaque return type of View.contextMenu<A>(menuItems:)>>, 1);
  v77 = sub_648E0(&qword_321F28, (uint64_t (*)(uint64_t))&type metadata accessor for SeriesExposureEvent, (uint64_t)&protocol conformance descriptor for SeriesExposureEvent);
  v78 = (uint64_t)v115;
  v79 = v106;
  v80 = v121;
  View.emitAppAnalyticsExposureEvent<A>(_:)(v70, v106, v70, OpaqueTypeConformance2, v77);
  v81 = sub_ADC50();
  v82 = v110;
  v83 = v117;
  View.appAnalyticsData(_:for:)(v62, v75, v117, v81);
  sub_5E09C(v78, &qword_321EB0);
  v84 = swift_bridgeObjectRelease(v62);
  (*(void (**)(char *, uint64_t, __n128))(v114 + 8))(v75, v116, v84);
  (*(void (**)(char *, uint64_t))(v105 + 8))(v80, v79);
  v85 = v118;
  sub_5E1A4((uint64_t)&v122[*(int *)(v103 + 32)], v118, &qword_321EA8);
  v86 = v119;
  sub_66F14(v85, v119, &qword_31F480);
  v127 = v83;
  v128 = v81;
  v87 = swift_getOpaqueTypeConformance2(&v127, &opaque type descriptor for <<opaque return type of View.appAnalyticsData(_:for:)>>, 1);
  v88 = v107;
  v89 = v112;
  View.impressionable(_:)(v86, v112, v87);
  sub_5E09C(v86, &qword_31F480);
  (*(void (**)(char *, uint64_t))(v111 + 8))(v82, v89);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v108 + 32))(v120, v88, v109);
}

uint64_t sub_AD3F0@<X0>(void *a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  id v19;
  char v20;
  char v21;
  uint64_t KeyPath;
  uint64_t v23;
  uint64_t *v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v29 = a2;
  v30 = a1;
  v32 = a3;
  v3 = sub_5C154(&qword_321F08);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = sub_5C154(&qword_321EE8);
  __chkstk_darwin(v31);
  v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_5C154(&qword_321F48);
  v10 = *(_QWORD *)(type metadata accessor for URL(0) - 8);
  v11 = swift_allocObject(v9, ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))+ *(_QWORD *)(v10 + 72), *(unsigned __int8 *)(v10 + 80) | 7);
  *(_OWORD *)(v11 + 16) = xmmword_258070;
  type metadata accessor for SeriesEntityCardComponentModel(0);
  v12 = sub_5C154(&qword_321EE0);
  v13 = (void *)MResourceDecoder.wrappedValue.getter(v12);
  MSeries.url.getter();

  v33 = v11;
  v14 = sub_5C154(&qword_321F50);
  v15 = sub_5C154(&qword_321F58);
  v16 = sub_67060(&qword_321F60, &qword_321F50, (uint64_t)&protocol conformance descriptor for [A]);
  v17 = sub_67060(&qword_321F68, &qword_321F58, (uint64_t)&protocol conformance descriptor for Label<A, B>);
  ShareLink<>.init(items:subject:message:label:)(&v33, 0, 0, 0, 0, 0, 0, 0, 0, sub_AD6F8, 0, v14, v15, v16, v17);
  v18 = (void *)MResourceDecoder.wrappedValue.getter(v12);
  LODWORD(v14) = objc_msgSend(v18, "isExplicit");

  if (!(_DWORD)v14)
  {
    v21 = 0;
    goto LABEL_5;
  }
  if (v30)
  {
    v19 = v30;
    v20 = dispatch thunk of ProfileRestrictions.isExplicitContentAllowed.getter();

    v21 = v20 ^ 1;
LABEL_5:
    KeyPath = swift_getKeyPath(&unk_25B6E0);
    v23 = swift_allocObject(&unk_2EA8D8, 17, 7);
    *(_BYTE *)(v23 + 16) = v21 & 1;
    (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v8, v6, v3);
    v24 = (uint64_t *)&v8[*(int *)(v31 + 36)];
    *v24 = KeyPath;
    v24[1] = (uint64_t)sub_ADEE8;
    v24[2] = v23;
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    return sub_66F14((uint64_t)v8, v32, &qword_321EE8);
  }
  v26 = type metadata accessor for ProfileRestrictions(0);
  v27 = sub_648E0((unint64_t *)&qword_321CE0, (uint64_t (*)(uint64_t))&type metadata accessor for ProfileRestrictions, (uint64_t)&protocol conformance descriptor for ProfileRestrictions);
  result = EnvironmentObject.error()(0, v29, v26, v27);
  __break(1u);
  return result;
}

uint64_t sub_AD6F8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  char *v14;
  __n128 v15;
  _QWORD v17[10];

  v17[1] = a1;
  v1 = type metadata accessor for LocalizerLookupStrategy(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = __chkstk_darwin(v1);
  v5 = (char *)v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for LocalizerDefaultValue(0, v3);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for LocalizerRequest(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = __chkstk_darwin(v10);
  v14 = (char *)v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  LocalizerDefaultValue.init(stringLiteral:)("Share", 5, 2, v12);
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v5, enum case for LocalizerLookupStrategy.default(_:), v1);
  static LocalizerRequest.string(forKey:with:defaultValue:using:)(0xD000000000000012, 0x8000000000270310, 0, v9, v5);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v17[8] = v14;
  v17[4] = 0xD000000000000013;
  v17[5] = 0x800000000026FD90;
  type metadata accessor for LocalizedText(0);
  sub_648E0(&qword_321F70, (uint64_t (*)(uint64_t))&type metadata accessor for LocalizedText, (uint64_t)&protocol conformance descriptor for LocalizedText);
  Label.init(title:icon:)(sub_ADEF0, v15);
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v14, v10);
}

uint64_t sub_AD8F8@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;

  return sub_ACA8C(a1, *v2, v2[1], a2);
}

uint64_t sub_AD900(uint64_t a1)
{
  __int128 *v1;
  unint64_t v3;
  id v4;
  __int128 v6;

  v6 = *v1;
  v3 = sub_ACA48();
  v4 = (id)v6;
  return _ComponentBody.init(_:)(&v6, a1, v3);
}

unint64_t sub_AD960()
{
  unint64_t result;

  result = qword_321E80;
  if (!qword_321E80)
  {
    result = swift_getWitnessTable(&unk_25B5EC, &type metadata for SeriesEntityCardComponent);
    atomic_store(result, (unint64_t *)&qword_321E80);
  }
  return result;
}

uint64_t sub_AD9A4(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_2B63EC, 1);
}

uint64_t sub_AD9B4()
{
  return sub_648E0(&qword_320088, type metadata accessor for SeriesEntityCardComponentModel, (uint64_t)&unk_2673F0);
}

unint64_t sub_AD9E4()
{
  unint64_t result;

  result = qword_321E88;
  if (!qword_321E88)
  {
    result = swift_getWitnessTable(&unk_25B6A4, &type metadata for SeriesEntityCardComponent._ButtonStyle);
    atomic_store(result, (unint64_t *)&qword_321E88);
  }
  return result;
}

uint64_t sub_ADA28(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_2B63C4, 1);
}

uint64_t sub_ADA38(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v14;

  v2 = type metadata accessor for PrimitiveButtonStyleConfiguration(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_5C154(&qword_321E90);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v3 + 16))(v5, a1, v2, v8);
  Button<>.init(_:)(v5);
  v11 = sub_67060(&qword_321E98, &qword_321E90, (uint64_t)&protocol conformance descriptor for Button<A>);
  v12 = sub_ADB64();
  View.buttonStyle<A>(_:)(v12, v6, &type metadata for SeriesEntityCardComponent.SeriesEntityCardButtonStyle, v11, v12);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
}

unint64_t sub_ADB64()
{
  unint64_t result;

  result = qword_321EA0;
  if (!qword_321EA0)
  {
    result = swift_getWitnessTable(&unk_25B73C, &type metadata for SeriesEntityCardComponent.SeriesEntityCardButtonStyle);
    atomic_store(result, (unint64_t *)&qword_321EA0);
  }
  return result;
}

uint64_t sub_ADBA8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_AD3F0(*(void **)(v1 + 24), *(_QWORD *)(v1 + 32), a1);
}

unint64_t sub_ADBB4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_321EF8;
  if (!qword_321EF8)
  {
    v1 = sub_667D0(&qword_321EE8);
    sub_67060(&qword_321F00, &qword_321F08, (uint64_t)&protocol conformance descriptor for ShareLink<A, B, C, D>);
    sub_67060(&qword_321F10, &qword_321F18, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyTransformModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_321EF8);
  }
  return result;
}

unint64_t sub_ADC50()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t OpaqueTypeConformance2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;

  result = qword_321F30;
  if (!qword_321F30)
  {
    v1 = sub_667D0(&qword_321EB0);
    v2 = sub_667D0(&qword_321EC8);
    v3 = type metadata accessor for SeriesExposureEvent(255);
    v6 = type metadata accessor for SeriesEntityCardView(255);
    v7 = sub_667D0(&qword_321EE8);
    v8 = sub_648E0(&qword_321EF0, (uint64_t (*)(uint64_t))&type metadata accessor for SeriesEntityCardView, (uint64_t)&protocol conformance descriptor for SeriesEntityCardView);
    v9 = sub_ADBB4();
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v6, &opaque type descriptor for <<opaque return type of View.contextMenu<A>(menuItems:)>>, 1);
    v5 = sub_648E0(&qword_321F28, (uint64_t (*)(uint64_t))&type metadata accessor for SeriesExposureEvent, (uint64_t)&protocol conformance descriptor for SeriesExposureEvent);
    v6 = v2;
    v7 = v3;
    v8 = OpaqueTypeConformance2;
    v9 = v5;
    swift_getOpaqueTypeConformance2(&v6, &opaque type descriptor for <<opaque return type of View.emitAppAnalyticsExposureEvent<A>(_:)>>, 1);
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> Group<A>, v1);
    atomic_store(result, (unint64_t *)&qword_321F30);
  }
  return result;
}

uint64_t sub_ADD84()
{
  uint64_t v0;
  uint64_t v1;
  __n128 v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v0 = type metadata accessor for AutomaticHoverEffect(0);
  v1 = *(_QWORD *)(v0 - 8);
  v2 = __chkstk_darwin(v0);
  v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ButtonStyleConfiguration.Label(0, v2);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = __chkstk_darwin(v5);
  v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = ButtonStyleConfiguration.label.getter(v7);
  static CustomHoverEffect<>.automatic.getter(v10);
  v11 = sub_648E0(&qword_321F78, (uint64_t (*)(uint64_t))&type metadata accessor for ButtonStyleConfiguration.Label, (uint64_t)&protocol conformance descriptor for ButtonStyleConfiguration.Label);
  v12 = sub_648E0(&qword_321F80, (uint64_t (*)(uint64_t))&type metadata accessor for AutomaticHoverEffect, (uint64_t)&protocol conformance descriptor for AutomaticHoverEffect);
  View.hoverEffect<A>(_:isEnabled:)(v4, 1, v5, v0, v11, v12);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
}

uint64_t sub_ADED8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

_BYTE *sub_ADEE8(_BYTE *a1)
{
  uint64_t v1;

  return sub_A0250(a1, *(_BYTE *)(v1 + 16));
}

uint64_t sub_ADEF0()
{
  uint64_t v0;

  return sub_1AB6C0(*(_QWORD *)(v0 + 16));
}

uint64_t sub_ADEF8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_1AB740(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

ValueMetadata *type metadata accessor for SeriesEntityCardComponent.SeriesEntityCardButtonStyle()
{
  return &type metadata for SeriesEntityCardComponent.SeriesEntityCardButtonStyle;
}

ValueMetadata *type metadata accessor for SeriesEntityCardComponent._ButtonStyle()
{
  return &type metadata for SeriesEntityCardComponent._ButtonStyle;
}

uint64_t sub_ADF20()
{
  _QWORD v1[4];

  v1[0] = sub_667D0(&qword_321E90);
  v1[1] = &type metadata for SeriesEntityCardComponent.SeriesEntityCardButtonStyle;
  v1[2] = sub_67060(&qword_321E98, &qword_321E90, (uint64_t)&protocol conformance descriptor for Button<A>);
  v1[3] = sub_ADB64();
  return swift_getOpaqueTypeConformance2(v1, &opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>, 1);
}

uint64_t sub_ADF98()
{
  uint64_t v0;
  uint64_t OpaqueTypeConformance2;
  uint64_t v3;
  unint64_t v4;

  v0 = sub_667D0(&qword_321ED0);
  v3 = sub_667D0(&qword_321EB0);
  v4 = sub_ADC50();
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v3, &opaque type descriptor for <<opaque return type of View.appAnalyticsData(_:for:)>>, 1);
  v3 = v0;
  v4 = OpaqueTypeConformance2;
  return swift_getOpaqueTypeConformance2(&v3, &opaque type descriptor for <<opaque return type of View.impressionable(_:)>>, 1);
}

uint64_t sub_AE00C(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_2B6414, 1);
}

uint64_t sub_AE01C(__n128 a1)
{
  _QWORD v2[4];

  v2[0] = type metadata accessor for ButtonStyleConfiguration.Label(255, a1);
  v2[1] = type metadata accessor for AutomaticHoverEffect(255);
  v2[2] = sub_648E0(&qword_321F78, (uint64_t (*)(uint64_t))&type metadata accessor for ButtonStyleConfiguration.Label, (uint64_t)&protocol conformance descriptor for ButtonStyleConfiguration.Label);
  v2[3] = sub_648E0(&qword_321F80, (uint64_t (*)(uint64_t))&type metadata accessor for AutomaticHoverEffect, (uint64_t)&protocol conformance descriptor for AutomaticHoverEffect);
  return swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.hoverEffect<A>(_:isEnabled:)>>, 1);
}

uint64_t sub_AE0C0(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4;
  int v5;
  __int128 v7;
  _OWORD *v8;
  _OWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  void *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *(_QWORD *)v4 = *a2;
    v4 = v12 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain(v12);
  }
  else
  {
    v7 = *(_OWORD *)(a2 + 3);
    *(_OWORD *)(a1 + 24) = v7;
    (**(void (***)(uint64_t, uint64_t *))(v7 - 8))(a1, a2);
    v8 = (_OWORD *)(v4 + 40);
    v9 = a2 + 5;
    v10 = a2[8];
    if (v10)
    {
      v11 = a2[9];
      *(_QWORD *)(v4 + 64) = v10;
      *(_QWORD *)(v4 + 72) = v11;
      (**(void (***)(_OWORD *, _OWORD *))(v10 - 8))(v8, v9);
    }
    else
    {
      v13 = *(_OWORD *)(a2 + 7);
      *v8 = *v9;
      *(_OWORD *)(v4 + 56) = v13;
      *(_QWORD *)(v4 + 72) = a2[9];
    }
    v14 = *(int *)(a3 + 24);
    v15 = (void *)(v4 + v14);
    v16 = (char *)a2 + v14;
    v17 = type metadata accessor for ImpressionMetrics(0);
    v18 = *(_QWORD *)(v17 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
    {
      v19 = sub_5C154(&qword_31F480);
      memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v18 + 16))(v15, v16, v17);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
    }
  }
  return v4;
}

uint64_t sub_AE200(_QWORD *a1, uint64_t a2)
{
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(a1);
  if (a1[8])
    _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(a1 + 5);
  v4 = (char *)a1 + *(int *)(a2 + 24);
  v5 = type metadata accessor for ImpressionMetrics(0);
  v6 = *(_QWORD *)(v5 - 8);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v4, v5);
  return result;
}

uint64_t sub_AE288(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  _OWORD *v7;
  _OWORD *v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  void *v13;
  const void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v6 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v6;
  (**(void (***)(void))(v6 - 8))();
  v7 = (_OWORD *)(a1 + 40);
  v8 = (_OWORD *)(a2 + 40);
  v9 = *(_QWORD *)(a2 + 64);
  if (v9)
  {
    v10 = *(_QWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 64) = v9;
    *(_QWORD *)(a1 + 72) = v10;
    (**(void (***)(_OWORD *, _OWORD *))(v9 - 8))(v7, v8);
  }
  else
  {
    v11 = *(_OWORD *)(a2 + 56);
    *v7 = *v8;
    *(_OWORD *)(a1 + 56) = v11;
    *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  }
  v12 = *(int *)(a3 + 24);
  v13 = (void *)(a1 + v12);
  v14 = (const void *)(a2 + v12);
  v15 = type metadata accessor for ImpressionMetrics(0);
  v16 = *(_QWORD *)(v15 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
  {
    v17 = sub_5C154(&qword_31F480);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v16 + 16))(v13, v14, v15);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  return a1;
}

uint64_t sub_AE394(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  void *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(void *, uint64_t, uint64_t);
  int v15;
  int v16;
  uint64_t v17;

  sub_65938((_QWORD *)a1, (_QWORD *)a2);
  v6 = *(_QWORD *)(a2 + 64);
  if (*(_QWORD *)(a1 + 64))
  {
    if (v6)
    {
      sub_65938((_QWORD *)(a1 + 40), (_QWORD *)(a2 + 40));
      goto LABEL_8;
    }
    _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((_QWORD *)(a1 + 40));
  }
  else if (v6)
  {
    *(_QWORD *)(a1 + 64) = v6;
    *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
    (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1 + 40, a2 + 40);
    goto LABEL_8;
  }
  v7 = *(_OWORD *)(a2 + 40);
  v8 = *(_OWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 40) = v7;
  *(_OWORD *)(a1 + 56) = v8;
LABEL_8:
  v9 = *(int *)(a3 + 24);
  v10 = (void *)(a1 + v9);
  v11 = (void *)(a2 + v9);
  v12 = type metadata accessor for ImpressionMetrics(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v13 + 48);
  v15 = v14(v10, 1, v12);
  v16 = v14(v11, 1, v12);
  if (!v15)
  {
    if (!v16)
    {
      (*(void (**)(void *, void *, uint64_t))(v13 + 24))(v10, v11, v12);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v13 + 8))(v10, v12);
    goto LABEL_13;
  }
  if (v16)
  {
LABEL_13:
    v17 = sub_5C154(&qword_31F480);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v13 + 16))(v10, v11, v12);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  return a1;
}

uint64_t sub_AE508(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v5;
  const void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  v5 = *(int *)(a3 + 24);
  v6 = (const void *)(a2 + v5);
  v7 = (void *)(a1 + v5);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  v8 = type metadata accessor for ImpressionMetrics(0);
  v9 = *(_QWORD *)(v8 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v8))
  {
    v10 = sub_5C154(&qword_31F480);
    memcpy(v7, v6, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v9 + 32))(v7, v6, v8);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v7, 0, 1, v8);
  }
  return a1;
}

uint64_t sub_AE5E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  void *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(void *, uint64_t, uint64_t);
  int v14;
  int v15;
  uint64_t v16;

  _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((_QWORD *)a1);
  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  if (*(_QWORD *)(a1 + 64))
    _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((_QWORD *)(a1 + 40));
  v7 = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = v7;
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  v8 = *(int *)(a3 + 24);
  v9 = (void *)(a1 + v8);
  v10 = (void *)(a2 + v8);
  v11 = type metadata accessor for ImpressionMetrics(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v12 + 48);
  v14 = v13(v9, 1, v11);
  v15 = v13(v10, 1, v11);
  if (!v14)
  {
    if (!v15)
    {
      (*(void (**)(void *, void *, uint64_t))(v12 + 40))(v9, v10, v11);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v12 + 8))(v9, v11);
    goto LABEL_8;
  }
  if (v15)
  {
LABEL_8:
    v16 = sub_5C154(&qword_31F480);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v12 + 32))(v9, v10, v11);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  return a1;
}

uint64_t sub_AE728(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_AE734);
}

uint64_t sub_AE734(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_5C154(&qword_321EA8);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v8);
  }
}

uint64_t sub_AE7B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_AE7C0);
}

uint64_t sub_AE7C0(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 24) = (a2 - 1);
  }
  else
  {
    v7 = sub_5C154(&qword_321EA8);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for EmptyComponentModel(uint64_t a1)
{
  uint64_t result;

  result = qword_321FE0;
  if (!qword_321FE0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for EmptyComponentModel);
  return result;
}

void sub_AE874(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[3];

  v4[0] = "(";
  v4[1] = &unk_25B7C0;
  sub_AE8F0(319);
  if (v3 <= 0x3F)
  {
    v4[2] = *(_QWORD *)(v2 - 8) + 64;
    swift_initStructMetadata(a1, 256, 3, v4, a1 + 16);
  }
}

void sub_AE8F0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_320AC8)
  {
    v2 = type metadata accessor for ImpressionMetrics(255);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_320AC8);
  }
}

uint64_t sub_AE944(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v20;
  char v21;
  char v22;
  char v23;

  v3 = v1;
  v5 = sub_5C154(&qword_322048);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  sub_66898(a1, v9);
  v11 = sub_AF074();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for EmptyComponentModel.CodingKeys, &type metadata for EmptyComponentModel.CodingKeys, v11, v9, v10);
  v23 = 0;
  v12 = sub_5C154(&qword_320B78);
  v13 = sub_67060(&qword_322050, &qword_320B78, (uint64_t)&protocol conformance descriptor for CodeAnyHashable<A>);
  KeyedEncodingContainer.encode<A>(_:forKey:)(v3, &v23, v5, v12, v13);
  if (!v2)
  {
    v22 = 1;
    v14 = sub_5C154(&qword_320B70);
    v15 = sub_67060(&qword_322058, &qword_320B70, (uint64_t)&protocol conformance descriptor for _CodeByKind_OrNil<A>);
    KeyedEncodingContainer.encode<A>(_:forKey:)(v3 + 40, &v22, v5, v14, v15);
    v16 = v3 + *(int *)(type metadata accessor for EmptyComponentModel(0) + 24);
    v21 = 2;
    v17 = sub_5C154(&qword_321EA8);
    v18 = sub_AF240();
    KeyedEncodingContainer.encode<A>(_:forKey:)(v16, &v21, v5, v17, v18);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_AEB18@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  char *v35;
  __int128 v36;
  __int128 v37;
  uint64_t v38;
  __int128 v39;
  __int128 v40;
  uint64_t v41;
  uint64_t v42;

  v31 = a2;
  v3 = sub_5C154(&qword_321EA8);
  __chkstk_darwin(v3);
  v5 = (uint64_t *)((char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v32 = sub_5C154(&qword_322028);
  v6 = *(_QWORD *)(v32 - 8);
  __chkstk_darwin(v32);
  v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for EmptyComponentModel(0);
  __chkstk_darwin(v9);
  v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = v11 + 40;
  v41 = 0;
  v39 = 0u;
  v40 = 0u;
  v38 = 0;
  v36 = 0u;
  v37 = 0u;
  sub_8B354((uint64_t)&v39, (uint64_t)&v36);
  v12 = v37;
  *(_OWORD *)(v11 + 40) = v36;
  *(_OWORD *)(v11 + 56) = v12;
  *((_QWORD *)v11 + 9) = v38;
  sub_5E09C((uint64_t)&v39, (uint64_t *)&unk_326210);
  v13 = (uint64_t)&v11[*(int *)(v9 + 24)];
  v14 = type metadata accessor for ImpressionMetrics(0);
  v15 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56);
  v34 = v13;
  v15(v13, 1, 1, v14);
  v16 = a1[3];
  v17 = a1[4];
  v33 = a1;
  sub_66898(a1, v16);
  v18 = sub_AF074();
  v19 = v42;
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for EmptyComponentModel.CodingKeys, &type metadata for EmptyComponentModel.CodingKeys, v18, v16, v17);
  if (v19)
  {
    v23 = v34;
    v24 = (uint64_t)v35;
    _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(v33);
    sub_5E09C(v24, &qword_320B70);
    return sub_5E09C(v23, &qword_321EA8);
  }
  else
  {
    v42 = v6;
    v20 = sub_5C154(&qword_320B78);
    LOBYTE(v36) = 0;
    v21 = sub_67060((unint64_t *)&qword_320B90, &qword_320B78, (uint64_t)&protocol conformance descriptor for CodeAnyHashable<A>);
    v22 = v32;
    KeyedDecodingContainer.decode<A>(_:forKey:)(&v39, v20, &v36, v32, v20, v21);
    v25 = v40;
    *(_OWORD *)v11 = v39;
    *((_OWORD *)v11 + 1) = v25;
    *((_QWORD *)v11 + 4) = v41;
    v26 = sub_5C154(&qword_320B70);
    LOBYTE(v36) = 1;
    v27 = sub_67060(&qword_320B98, &qword_320B70, (uint64_t)&protocol conformance descriptor for _CodeByKind_OrNil<A>);
    KeyedDecodingContainer.decode<A>(_:forKey:)(&v39, v26, &v36, v22, v26, v27);
    sub_8B3E0((uint64_t)&v39, (uint64_t)v35, &qword_320B70);
    LOBYTE(v39) = 2;
    v28 = sub_AF0B8();
    KeyedDecodingContainer.decode<A>(_:forKey:)(v5, v3, &v39, v22, v3, v28);
    (*(void (**)(char *, uint64_t))(v42 + 8))(v8, v22);
    sub_8B3E0((uint64_t)v5, v34, &qword_321EA8);
    sub_AF1C0((uint64_t)v11, v31);
    _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(v33);
    return sub_AF204((uint64_t)v11);
  }
}

uint64_t sub_AEEC4()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0x6575676573;
  if (*v0 != 1)
    v1 = 0xD000000000000011;
  if (*v0)
    return v1;
  else
    return 25705;
}

uint64_t sub_AEF14@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_AF468(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_AEF38(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_AF074();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_AEF60(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_AF074();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_AEF88@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_AEB18(a1, a2);
}

uint64_t sub_AEF9C(_QWORD *a1)
{
  return sub_AE944(a1);
}

uint64_t sub_AEFB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;

  v5 = sub_5C154(&qword_321EA8);
  __chkstk_darwin(v5);
  v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5E1A4(v2 + *(int *)(a1 + 24), (uint64_t)v7, &qword_321EA8);
  return sub_66F14((uint64_t)v7, a2, &qword_31F480);
}

uint64_t sub_AF048()
{
  return sub_648E0(&qword_322020, type metadata accessor for EmptyComponentModel, (uint64_t)&unk_25B7D8);
}

unint64_t sub_AF074()
{
  unint64_t result;

  result = qword_322030;
  if (!qword_322030)
  {
    result = swift_getWitnessTable(&unk_25B954, &type metadata for EmptyComponentModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_322030);
  }
  return result;
}

unint64_t sub_AF0B8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_322038;
  if (!qword_322038)
  {
    v1 = sub_667D0(&qword_321EA8);
    sub_AF13C((unint64_t *)&qword_322040, &qword_320BA0, (uint64_t)&protocol conformance descriptor for ImpressionMetrics, (uint64_t)&protocol conformance descriptor for <A> A?);
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> DiscardOnError<A>, v1);
    atomic_store(result, (unint64_t *)&qword_322038);
  }
  return result;
}

uint64_t sub_AF13C(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = *a1;
  if (!result)
  {
    v9 = sub_667D0(&qword_31F480);
    sub_648E0(a2, (uint64_t (*)(uint64_t))&type metadata accessor for ImpressionMetrics, a3);
    result = swift_getWitnessTable(a4, v9);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_AF1C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for EmptyComponentModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_AF204(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for EmptyComponentModel(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_AF240()
{
  unint64_t result;
  uint64_t v1;

  result = qword_322060;
  if (!qword_322060)
  {
    v1 = sub_667D0(&qword_321EA8);
    sub_AF13C(&qword_322068, &qword_322070, (uint64_t)&protocol conformance descriptor for ImpressionMetrics, (uint64_t)&protocol conformance descriptor for <A> A?);
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> DiscardOnError<A>, v1);
    atomic_store(result, (unint64_t *)&qword_322060);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for EmptyComponentModel.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_AF310 + 4 * byte_25B785[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_AF344 + 4 * byte_25B780[v4]))();
}

uint64_t sub_AF344(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_AF34C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0xAF354);
  return result;
}

uint64_t sub_AF360(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0xAF368);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_AF36C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_AF374(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for EmptyComponentModel.CodingKeys()
{
  return &type metadata for EmptyComponentModel.CodingKeys;
}

unint64_t sub_AF394()
{
  unint64_t result;

  result = qword_322078;
  if (!qword_322078)
  {
    result = swift_getWitnessTable(&unk_25B92C, &type metadata for EmptyComponentModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_322078);
  }
  return result;
}

unint64_t sub_AF3DC()
{
  unint64_t result;

  result = qword_322080;
  if (!qword_322080)
  {
    result = swift_getWitnessTable(&unk_25B89C, &type metadata for EmptyComponentModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_322080);
  }
  return result;
}

unint64_t sub_AF424()
{
  unint64_t result;

  result = qword_322088;
  if (!qword_322088)
  {
    result = swift_getWitnessTable(&unk_25B8C4, &type metadata for EmptyComponentModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_322088);
  }
  return result;
}

uint64_t sub_AF468(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  unint64_t v7;
  char v8;

  if (a1 == 25705 && a2 == 0xE200000000000000)
  {
    v5 = 0xE200000000000000;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(25705, 0xE200000000000000, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 0x6575676573 && a2 == 0xE500000000000000)
  {
    v7 = 0xE500000000000000;
LABEL_14:
    swift_bridgeObjectRelease(v7);
    return 1;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6575676573, 0xE500000000000000, a1, a2, 0) & 1) != 0)
  {
    v7 = a2;
    goto LABEL_14;
  }
  if (a1 == 0xD000000000000011 && a2 == 0x800000000026D790)
  {
    swift_bridgeObjectRelease(0x800000000026D790);
    return 2;
  }
  else
  {
    v8 = _stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000011, 0x800000000026D790, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v8 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_AF598()
{
  uint64_t v0;
  void *v1;
  char v3;
  char v4;

  v0 = type metadata accessor for Defaults(0);
  sub_5DD20(v0, qword_345F88);
  sub_5240C(v0, (uint64_t)qword_345F88);
  v1 = (void *)objc_opt_self(NSUserDefaults);
  v4 = 0;
  UserDefault.init(_:defaults:defaultValue:)(0xD00000000000001FLL, 0x8000000000270330, objc_msgSend(v1, "standardUserDefaults"), &v4, &type metadata for Bool);
  v3 = 0;
  return UserDefault.init(_:defaults:defaultValue:)(0xD000000000000017, 0x8000000000270350, objc_msgSend(v1, "standardUserDefaults"), &v3, &type metadata for Bool);
}

uint64_t type metadata accessor for Defaults(uint64_t a1)
{
  uint64_t result;

  result = qword_3220F0;
  if (!qword_3220F0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for Defaults);
  return result;
}

uint64_t *sub_AF6DC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v9;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v9);
  }
  else
  {
    v7 = sub_5C154(&qword_322090);
    v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v8((uint64_t *)((char *)a1 + *(int *)(a3 + 20)), (uint64_t *)((char *)a2 + *(int *)(a3 + 20)), v7);
  }
  return a1;
}

uint64_t sub_AF77C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void (*v6)(uint64_t, uint64_t);

  v4 = sub_5C154(&qword_322090);
  v6 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v6(a1, v4);
  return ((uint64_t (*)(uint64_t, uint64_t))v6)(a1 + *(int *)(a2 + 20), v4);
}

uint64_t sub_AF7E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);

  v6 = sub_5C154(&qword_322090);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  return a1;
}

uint64_t sub_AF85C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);

  v6 = sub_5C154(&qword_322090);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  return a1;
}

uint64_t sub_AF8D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);

  v6 = sub_5C154(&qword_322090);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  return a1;
}

uint64_t sub_AF944(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);

  v6 = sub_5C154(&qword_322090);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  return a1;
}

uint64_t sub_AF9B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_AF9C4);
}

uint64_t sub_AF9C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_5C154(&qword_322090);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_AFA04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_AFA10);
}

uint64_t sub_AFA10(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_5C154(&qword_322090);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

void sub_AFA54(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[2];

  sub_AFABC();
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(v2 - 8) + 64;
    v4[1] = v4[0];
    swift_initStructMetadata(a1, 256, 2, v4, a1 + 16);
  }
}

void sub_AFABC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_322100)
  {
    v0 = type metadata accessor for UserDefault(0, &type metadata for Bool);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_322100);
  }
}

ValueMetadata *type metadata accessor for AlertActionImplementation()
{
  return &type metadata for AlertActionImplementation;
}

uint64_t sub_AFB20()
{
  return sub_648E0(&qword_3200C8, (uint64_t (*)(uint64_t))&type metadata accessor for BooksAlertAction, (uint64_t)&protocol conformance descriptor for BooksAlertAction);
}

uint64_t sub_AFB4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4[9] = a3;
  v4[10] = a4;
  v4[7] = a1;
  v4[8] = a2;
  v5 = sub_5C154(&qword_320658);
  v4[11] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v4[12] = v6;
  v4[13] = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_5C154(&qword_31F590);
  v4[14] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_5C154(&qword_31EF08);
  v4[15] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v4[16] = v9;
  v4[17] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for ActionMetrics(0);
  v4[18] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v10 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_AFC24, 0, 0);
}

uint64_t sub_AFC24(__n128 a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v2 = *(_QWORD *)(v1 + 136);
  v4 = *(_QWORD *)(v1 + 120);
  v3 = *(_QWORD *)(v1 + 128);
  v5 = *(_QWORD *)(v1 + 104);
  v6 = *(_QWORD *)(v1 + 112);
  v19 = *(_QWORD *)(v1 + 144);
  v20 = *(_QWORD *)(v1 + 96);
  v7 = *(_QWORD *)(v1 + 72);
  v21 = *(_QWORD *)(v1 + 88);
  v22 = *(_QWORD *)(v1 + 80);
  v23 = *(_QWORD *)(v1 + 56);
  static ActionMetrics.notInstrumented.getter(a1);
  v8 = type metadata accessor for BooksAlertAction(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v2, v7, v8);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v3 + 104))(v2, enum case for PageUpdateInstruction.presentAlert<A, B>(_:), v4);
  v9 = type metadata accessor for ClickData(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v6, 1, 1, v9);
  *(_QWORD *)(v1 + 40) = sub_5C154(&qword_3200B8);
  *(_QWORD *)(v1 + 48) = sub_B02A0();
  sub_668BC((_QWORD *)(v1 + 16));
  v10 = type metadata accessor for Page(0);
  v11 = type metadata accessor for Shelf(0);
  v12 = sub_648E0((unint64_t *)&qword_320120, type metadata accessor for Page, (uint64_t)&protocol conformance descriptor for Page);
  v13 = sub_648E0(&qword_320128, type metadata accessor for Shelf, (uint64_t)&protocol conformance descriptor for Shelf);
  PageUpdateAction.init(actionMetrics:instruction:animated:clickData:)(v19, v2, 1, v6, v10, v11, v12, v13);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v20 + 104))(v5, enum case for ActionDispatcher.MetricsBehavior.notProcessed<A>(_:), v21);
  v14 = sub_5C154(&qword_31FE40);
  v15 = ActionDispatcher.perform(_:withMetrics:asPartOf:)(v1 + 16, v5, v22, v14);
  swift_release(v15);
  (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v5, v21);
  _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((_QWORD *)(v1 + 16));
  v16 = enum case for ActionOutcome.performed(_:);
  v17 = type metadata accessor for ActionOutcome(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 104))(v23, v16, v17);
  swift_task_dealloc(v19);
  swift_task_dealloc(v2);
  swift_task_dealloc(v6);
  swift_task_dealloc(v5);
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_AFE64(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;

  v38 = a2;
  v3 = sub_5C154(&qword_329740);
  __chkstk_darwin(v3);
  v37 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = type metadata accessor for BooksAlertAction(0);
  v5 = *(_QWORD *)(v34 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  __chkstk_darwin(v34);
  v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_5C154(&qword_31FE40);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  __chkstk_darwin(v8);
  v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v33 - v13;
  v36 = (char *)&v33 - v13;
  BaseObjectGraph.inject<A>(_:)((uint64_t *)((char *)&v33 - v13), v15, v15);
  v16 = v9;
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v11, v14, v8);
  v17 = v34;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v34);
  v18 = *(unsigned __int8 *)(v16 + 80);
  v19 = v16;
  v35 = v16;
  v20 = (v18 + 16) & ~v18;
  v21 = *(unsigned __int8 *)(v5 + 80);
  v22 = (v10 + v21 + v20) & ~v21;
  v23 = (v6 + v22 + 7) & 0xFFFFFFFFFFFFFFF8;
  v24 = swift_allocObject(&unk_2EABA8, v23 + 8, v18 | v21 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v19 + 32))(v24 + v20, v11, v8);
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v24 + v22, v7, v17);
  v25 = v38;
  *(_QWORD *)(v24 + v23) = v38;
  sub_5C154(&qword_3208F8);
  v26 = swift_retain(v25);
  v27 = Promise.__allocating_init()(v26);
  v28 = type metadata accessor for TaskPriority(0);
  v29 = (uint64_t)v37;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v37, 1, 1, v28);
  v30 = (_QWORD *)swift_allocObject(&unk_2EABD0, 56, 7);
  v30[2] = 0;
  v30[3] = 0;
  v30[4] = &unk_322138;
  v30[5] = v24;
  v30[6] = v27;
  swift_retain(v27);
  v31 = sub_174AF8(v29, (uint64_t)&unk_320900, (uint64_t)v30);
  swift_release(v31);
  (*(void (**)(char *, uint64_t))(v35 + 8))(v36, v8);
  return v27;
}

uint64_t sub_B00E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;

  v1 = sub_5C154(&qword_31FE40);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = type metadata accessor for BooksAlertAction(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = (v4 + v5 + v8) & ~v8;
  v10 = v3 | v8 | 7;
  v11 = (*(_QWORD *)(v7 + 64) + v9 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v9, v6);
  swift_release(*(_QWORD *)(v0 + v11));
  return swift_deallocObject(v0, v11 + 8, v10);
}

uint64_t sub_B01B0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;

  v4 = *(_QWORD *)(sub_5C154(&qword_31FE40) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v4 + 64);
  v7 = *(_QWORD *)(type metadata accessor for BooksAlertAction(0) - 8);
  v8 = (v5 + v6 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v9 = v1 + v5;
  v10 = v1 + v8;
  v11 = *(_QWORD *)(v1 + ((*(_QWORD *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFF8));
  v12 = (_QWORD *)swift_task_alloc(dword_322134);
  *(_QWORD *)(v2 + 16) = v12;
  *v12 = v2;
  v12[1] = sub_64780;
  return sub_AFB4C(a1, v9, v10, v11);
}

uint64_t sub_B026C()
{
  _QWORD *v0;

  swift_unknownObjectRelease(v0[2]);
  swift_release(v0[5]);
  swift_release(v0[6]);
  return swift_deallocObject(v0, 56, 7);
}

unint64_t sub_B02A0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3200C0;
  if (!qword_3200C0)
  {
    v1 = sub_667D0(&qword_3200B8);
    result = swift_getWitnessTable(&protocol conformance descriptor for PageUpdateAction<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_3200C0);
  }
  return result;
}

BOOL sub_B02EC(float64x2_t *a1, float64x2_t *a2)
{
  return (vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_f64(*a1, *a2), (int32x4_t)vceqq_f64(a1[1], a2[1]))), 0xFuLL))) & 1) != 0&& a1[2].f64[0] == a2[2].f64[0];
}

double sub_B0334@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t KeyPath;
  unint64_t v4;
  double result;
  __int128 v6;
  uint64_t v7;

  KeyPath = swift_getKeyPath(&unk_25BAB8);
  v7 = v1;
  v4 = sub_B0690();
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v7, KeyPath, v4);
  swift_release(KeyPath);
  result = *(double *)(v1 + 48);
  v6 = *(_OWORD *)(v1 + 32);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)(a1 + 16) = v6;
  *(double *)(a1 + 32) = result;
  return result;
}

__n128 sub_B03B0(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 32) = v3;
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 32);
  return result;
}

_QWORD *sub_B03C4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t KeyPath;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v14;

  v1 = *v0;
  KeyPath = swift_getKeyPath(&unk_25BAB8);
  v14 = v0;
  v3 = sub_B0690();
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v14, KeyPath, v3);
  swift_release(KeyPath);
  v4 = v0[2];
  v5 = swift_getKeyPath(&unk_25BAB8);
  v14 = v0;
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v14, v5, v3);
  swift_release(v5);
  v6 = v0[3];
  v7 = v0[4];
  v8 = swift_getKeyPath(&unk_25BAB8);
  v14 = v0;
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v14, v8, v3);
  swift_release(v8);
  v9 = v0[5];
  v10 = swift_getKeyPath(&unk_25BAB8);
  v14 = v0;
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v14, v10, v3);
  swift_release(v10);
  v11 = v0[6];
  v12 = (_QWORD *)swift_allocObject(v1, *(unsigned int *)(v1 + 48), *(unsigned __int16 *)(v1 + 52));
  ObservationRegistrar.init()(v12);
  v12[2] = v4;
  v12[3] = v6;
  v12[4] = v7;
  v12[5] = v9;
  v12[6] = v11;
  return v12;
}

uint64_t sub_B0518()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC11BookStoreUI45CardAuxiliaryNavigationBarBackgroundViewModel___observationRegistrar;
  v2 = type metadata accessor for ObservationRegistrar(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_B0568()
{
  return type metadata accessor for CardAuxiliaryNavigationBarBackgroundViewModel(0);
}

uint64_t type metadata accessor for CardAuxiliaryNavigationBarBackgroundViewModel(uint64_t a1)
{
  uint64_t result;

  result = qword_322170;
  if (!qword_322170)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CardAuxiliaryNavigationBarBackgroundViewModel);
  return result;
}

uint64_t sub_B05AC(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  v4[0] = "(";
  result = type metadata accessor for ObservationRegistrar(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(result - 8) + 64;
    result = swift_updateClassMetadata2(a1, 256, 2, v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for CardAuxiliaryNavigationBarBackgroundViewModel.Properties(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 40))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for CardAuxiliaryNavigationBarBackgroundViewModel.Properties(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 40) = v3;
  return result;
}

ValueMetadata *type metadata accessor for CardAuxiliaryNavigationBarBackgroundViewModel.Properties()
{
  return &type metadata for CardAuxiliaryNavigationBarBackgroundViewModel.Properties;
}

unint64_t sub_B0690()
{
  unint64_t result;
  uint64_t v1;

  result = qword_322200;
  if (!qword_322200)
  {
    v1 = type metadata accessor for CardAuxiliaryNavigationBarBackgroundViewModel(255);
    result = swift_getWitnessTable(&unk_25BA9C, v1);
    atomic_store(result, (unint64_t *)&qword_322200);
  }
  return result;
}

uint64_t sub_B06D8(uint64_t a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  char v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v17 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = v17 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain(v17);
  }
  else
  {
    v7 = *a2;
    v8 = *((_BYTE *)a2 + 8);
    *(_QWORD *)a1 = *a2;
    *(_BYTE *)(a1 + 8) = v8;
    v9 = a2[2];
    v10 = *((_BYTE *)a2 + 24);
    swift_retain(v7);
    j__swift_retain(v9);
    *(_QWORD *)(a1 + 16) = v9;
    *(_BYTE *)(a1 + 24) = v10;
    v11 = a3[6];
    v12 = (uint64_t *)(a1 + v11);
    v13 = (uint64_t *)((char *)a2 + v11);
    v14 = sub_5C154(&qword_320498);
    if (swift_getEnumCaseMultiPayload(v13, v14) == 1)
    {
      v15 = type metadata accessor for ScenePhase(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v12, v13, v15);
      v16 = 1;
    }
    else
    {
      v18 = *v13;
      *v12 = *v13;
      swift_retain(v18);
      v16 = 0;
    }
    swift_storeEnumTagMultiPayload(v12, v14, v16);
    v19 = a3[7];
    v20 = a1 + v19;
    v21 = (uint64_t)a2 + v19;
    v22 = *(id *)v21;
    v23 = *(_BYTE *)(v21 + 8);
    sub_AAFF4(*(id *)v21, v23);
    *(_QWORD *)v20 = v22;
    *(_BYTE *)(v20 + 8) = v23;
    v24 = a3[8];
    v25 = a3[9];
    v26 = *(uint64_t *)((char *)a2 + v24);
    *(_QWORD *)(a1 + v24) = v26;
    v27 = *(uint64_t *)((char *)a2 + v25);
    *(_QWORD *)(a1 + v25) = v27;
    v28 = a3[10];
    v29 = *(uint64_t *)((char *)a2 + v28);
    *(_QWORD *)(a1 + v28) = v29;
    swift_retain(v26);
    swift_retain(v27);
    swift_bridgeObjectRetain(v29);
  }
  return a1;
}

double sub_B0840(_QWORD *a1, int *a2)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  double result;

  swift_release(*a1);
  j__swift_release(a1[2]);
  v4 = (_QWORD *)((char *)a1 + a2[6]);
  v5 = sub_5C154(&qword_320498);
  if (swift_getEnumCaseMultiPayload(v4, v5) == 1)
  {
    v6 = type metadata accessor for ScenePhase(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v4, v6);
  }
  else
  {
    swift_release(*v4);
  }
  sub_794D8(*(id *)((char *)a1 + a2[7]), *((_BYTE *)a1 + a2[7] + 8));
  swift_release(*(_QWORD *)((char *)a1 + a2[8]));
  swift_release(*(_QWORD *)((char *)a1 + a2[9]));
  *(_QWORD *)&result = swift_bridgeObjectRelease(*(_QWORD *)((char *)a1 + a2[10])).n128_u64[0];
  return result;
}

uint64_t sub_B0900(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v6;
  char v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v6 = *a2;
  v7 = *((_BYTE *)a2 + 8);
  *(_QWORD *)a1 = *a2;
  *(_BYTE *)(a1 + 8) = v7;
  v8 = a2[2];
  v9 = *((_BYTE *)a2 + 24);
  swift_retain(v6);
  j__swift_retain(v8);
  *(_QWORD *)(a1 + 16) = v8;
  *(_BYTE *)(a1 + 24) = v9;
  v10 = a3[6];
  v11 = (uint64_t *)(a1 + v10);
  v12 = (uint64_t *)((char *)a2 + v10);
  v13 = sub_5C154(&qword_320498);
  if (swift_getEnumCaseMultiPayload(v12, v13) == 1)
  {
    v14 = type metadata accessor for ScenePhase(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v11, v12, v14);
    v15 = 1;
  }
  else
  {
    v16 = *v12;
    *v11 = *v12;
    swift_retain(v16);
    v15 = 0;
  }
  swift_storeEnumTagMultiPayload(v11, v13, v15);
  v17 = a3[7];
  v18 = a1 + v17;
  v19 = (uint64_t)a2 + v17;
  v20 = *(id *)v19;
  v21 = *(_BYTE *)(v19 + 8);
  sub_AAFF4(*(id *)v19, v21);
  *(_QWORD *)v18 = v20;
  *(_BYTE *)(v18 + 8) = v21;
  v22 = a3[8];
  v23 = a3[9];
  v24 = *(uint64_t *)((char *)a2 + v22);
  *(_QWORD *)(a1 + v22) = v24;
  v25 = *(uint64_t *)((char *)a2 + v23);
  *(_QWORD *)(a1 + v23) = v25;
  v26 = a3[10];
  v27 = *(uint64_t *)((char *)a2 + v26);
  *(_QWORD *)(a1 + v26) = v27;
  swift_retain(v24);
  swift_retain(v25);
  swift_bridgeObjectRetain(v27);
  return a1;
}

uint64_t *sub_B0A38(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  char v23;
  void *v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v6 = *a2;
  v7 = *((_BYTE *)a2 + 8);
  v8 = *a1;
  *a1 = *a2;
  *((_BYTE *)a1 + 8) = v7;
  swift_retain(v6);
  swift_release(v8);
  v9 = a2[2];
  v10 = *((_BYTE *)a2 + 24);
  j__swift_retain(v9);
  v11 = a1[2];
  a1[2] = v9;
  *((_BYTE *)a1 + 24) = v10;
  j__swift_release(v11);
  if (a1 != a2)
  {
    v12 = a3[6];
    v13 = (uint64_t *)((char *)a1 + v12);
    v14 = (uint64_t *)((char *)a2 + v12);
    sub_5E09C((uint64_t)a1 + v12, &qword_320498);
    v15 = sub_5C154(&qword_320498);
    if (swift_getEnumCaseMultiPayload(v14, v15) == 1)
    {
      v16 = type metadata accessor for ScenePhase(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v13, v14, v16);
      v17 = 1;
    }
    else
    {
      v18 = *v14;
      *v13 = *v14;
      swift_retain(v18);
      v17 = 0;
    }
    swift_storeEnumTagMultiPayload(v13, v15, v17);
  }
  v19 = a3[7];
  v20 = (uint64_t)a1 + v19;
  v21 = (uint64_t)a2 + v19;
  v22 = *(id *)v21;
  v23 = *(_BYTE *)(v21 + 8);
  sub_AAFF4(*(id *)v21, v23);
  v24 = *(void **)v20;
  v25 = *(_BYTE *)(v20 + 8);
  *(_QWORD *)v20 = v22;
  *(_BYTE *)(v20 + 8) = v23;
  sub_794D8(v24, v25);
  v26 = a3[8];
  v27 = *(uint64_t *)((char *)a2 + v26);
  v28 = *(uint64_t *)((char *)a1 + v26);
  *(uint64_t *)((char *)a1 + v26) = v27;
  swift_retain(v27);
  swift_release(v28);
  v29 = a3[9];
  v30 = *(uint64_t *)((char *)a2 + v29);
  v31 = *(uint64_t *)((char *)a1 + v29);
  *(uint64_t *)((char *)a1 + v29) = v30;
  swift_retain(v30);
  swift_release(v31);
  v32 = a3[10];
  v33 = *(uint64_t *)((char *)a2 + v32);
  v34 = *(uint64_t *)((char *)a1 + v32);
  *(uint64_t *)((char *)a1 + v32) = v33;
  swift_bridgeObjectRetain(v33);
  swift_bridgeObjectRelease(v34);
  return a1;
}

uint64_t sub_B0BCC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v6 = a3[6];
  v7 = (void *)(a1 + v6);
  v8 = (const void *)(a2 + v6);
  v9 = sub_5C154(&qword_320498);
  if (swift_getEnumCaseMultiPayload(v8, v9) == 1)
  {
    v10 = type metadata accessor for ScenePhase(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v7, v8, v10);
    swift_storeEnumTagMultiPayload(v7, v9, 1);
  }
  else
  {
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  v11 = a3[7];
  v12 = a3[8];
  v13 = a1 + v11;
  v14 = a2 + v11;
  *(_QWORD *)v13 = *(_QWORD *)v14;
  *(_BYTE *)(v13 + 8) = *(_BYTE *)(v14 + 8);
  *(_QWORD *)(a1 + v12) = *(_QWORD *)(a2 + v12);
  v15 = a3[10];
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  *(_QWORD *)(a1 + v15) = *(_QWORD *)(a2 + v15);
  return a1;
}

uint64_t *sub_B0CD4(uint64_t *a1, uint64_t *a2, int *a3)
{
  char v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  void *v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v6 = *((_BYTE *)a2 + 8);
  v7 = *a1;
  *a1 = *a2;
  *((_BYTE *)a1 + 8) = v6;
  swift_release(v7);
  v8 = *((_BYTE *)a2 + 24);
  v9 = a1[2];
  a1[2] = a2[2];
  *((_BYTE *)a1 + 24) = v8;
  j__swift_release(v9);
  if (a1 != a2)
  {
    v10 = a3[6];
    v11 = (char *)a1 + v10;
    v12 = (char *)a2 + v10;
    sub_5E09C((uint64_t)a1 + v10, &qword_320498);
    v13 = sub_5C154(&qword_320498);
    if (swift_getEnumCaseMultiPayload(v12, v13) == 1)
    {
      v14 = type metadata accessor for ScenePhase(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v11, v12, v14);
      swift_storeEnumTagMultiPayload(v11, v13, 1);
    }
    else
    {
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
  }
  v15 = a3[7];
  v16 = (uint64_t)a1 + v15;
  v17 = (uint64_t *)((char *)a2 + v15);
  v18 = *v17;
  LOBYTE(v17) = *((_BYTE *)v17 + 8);
  v19 = *(void **)v16;
  v20 = *(_BYTE *)(v16 + 8);
  *(_QWORD *)v16 = v18;
  *(_BYTE *)(v16 + 8) = (_BYTE)v17;
  sub_794D8(v19, v20);
  v21 = a3[8];
  v22 = *(uint64_t *)((char *)a1 + v21);
  *(uint64_t *)((char *)a1 + v21) = *(uint64_t *)((char *)a2 + v21);
  swift_release(v22);
  v23 = a3[9];
  v24 = *(uint64_t *)((char *)a1 + v23);
  *(uint64_t *)((char *)a1 + v23) = *(uint64_t *)((char *)a2 + v23);
  swift_release(v24);
  v25 = a3[10];
  v26 = *(uint64_t *)((char *)a1 + v25);
  *(uint64_t *)((char *)a1 + v25) = *(uint64_t *)((char *)a2 + v25);
  swift_bridgeObjectRelease(v26);
  return a1;
}

uint64_t sub_B0E34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_B0E40);
}

uint64_t sub_B0E40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_5C154(&qword_322208);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + *(int *)(a3 + 24), a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 32));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_B0EC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_B0ED0);
}

uint64_t sub_B0ED0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_5C154(&qword_322208);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + *(int *)(a4 + 24), a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 32)) = (a2 - 1);
  return result;
}

uint64_t type metadata accessor for PageLifeCycleViewModifier(uint64_t a1)
{
  uint64_t result;

  result = qword_322268;
  if (!qword_322268)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for PageLifeCycleViewModifier);
  return result;
}

void sub_B0F8C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[7];

  v4[0] = "\t";
  v4[1] = "\t";
  sub_B1020(319);
  if (v3 <= 0x3F)
  {
    v4[2] = *(_QWORD *)(v2 - 8) + 64;
    v4[3] = "\t";
    v4[4] = (char *)&value witness table for Builtin.NativeObject + 64;
    v4[5] = (char *)&value witness table for Builtin.NativeObject + 64;
    v4[6] = (char *)&value witness table for Builtin.BridgeObject + 64;
    swift_initStructMetadata(a1, 256, 7, v4, a1 + 16);
  }
}

void sub_B1020(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_322278)
  {
    v2 = type metadata accessor for ScenePhase(255);
    v3 = type metadata accessor for Environment.Content(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_322278);
  }
}

uint64_t sub_B1074(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_2B6560, 1);
}

uint64_t sub_B1084@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t (**v24)(uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t (**v32)(uint64_t);
  uint64_t v34;
  uint64_t v35;

  v3 = (uint64_t)v2;
  v35 = a1;
  v5 = type metadata accessor for PageLifeCycleViewModifier(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  __chkstk_darwin(v5);
  v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_5C154(&qword_3222C0);
  __chkstk_darwin(v9);
  v11 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *v2;
  v13 = *(_BYTE *)(v3 + 8);
  v14 = swift_retain(v12);
  v15 = sub_77E94(v14, v13);
  v16 = swift_release(v12);
  v17 = HostingControllerVisibilityStateManager.swiftUIEventPublisher.getter(v16);
  swift_release(v15);
  sub_B1678(v3, (uint64_t)v8);
  v18 = *(unsigned __int8 *)(v6 + 80);
  v19 = (v18 + 16) & ~v18;
  v20 = v19 + v7;
  v21 = v18 | 7;
  v22 = swift_allocObject(&unk_2EACC0, v20, v18 | 7);
  sub_B16C0((uint64_t)v8, v22 + v19);
  v23 = sub_5C154(&qword_3222C8);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v11, v35, v23);
  *(_QWORD *)&v11[*(int *)(v9 + 52)] = v17;
  v24 = (uint64_t (**)(uint64_t))&v11[*(int *)(v9 + 56)];
  *v24 = sub_B1704;
  v24[1] = (uint64_t (*)(uint64_t))v22;
  v25 = *(_QWORD *)v3;
  LOBYTE(v22) = *(_BYTE *)(v3 + 8);
  v26 = swift_retain(*(_QWORD *)v3);
  v27 = sub_77E94(v26, v22);
  v28 = swift_release(v25);
  v29 = HostingControllerVisibilityStateManager.statePublisher.getter(v28);
  swift_release(v27);
  sub_B1678(v3, (uint64_t)v8);
  v30 = swift_allocObject(&unk_2EACE8, v20, v21);
  sub_B16C0((uint64_t)v8, v30 + v19);
  sub_B1870((uint64_t)v11, a2);
  v31 = sub_5C154(&qword_3222D0);
  *(_QWORD *)(a2 + *(int *)(v31 + 52)) = v29;
  v32 = (uint64_t (**)(uint64_t))(a2 + *(int *)(v31 + 56));
  *v32 = sub_B1818;
  v32[1] = (uint64_t (*)(uint64_t))v30;
  return sub_5E09C((uint64_t)v11, &qword_3222C0);
}

uint64_t sub_B12A8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  char *v6;
  int v7;
  uint64_t v9;
  char v10;
  char v11;

  v2 = type metadata accessor for HostingControllerVisibilityStateManager.SwiftUILifeCycleEvent(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v3 + 16))(v6, a1, v2, v4);
  v7 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v6, v2);
  if (v7 == enum case for HostingControllerVisibilityStateManager.SwiftUILifeCycleEvent.onAppear(_:))
  {
    v10 = 0;
    return sub_B1398(&v10);
  }
  else if (v7 == enum case for HostingControllerVisibilityStateManager.SwiftUILifeCycleEvent.onDisappear(_:))
  {
    v11 = 1;
    return sub_B1398(&v11);
  }
  else
  {
    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  }
}

uint64_t sub_B1398(_BYTE *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  _QWORD v24[2];
  void *v25;
  char v26;

  v2 = v1;
  v4 = type metadata accessor for ScenePhase(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for PageLifeCycleViewModifier(0);
  __chkstk_darwin(v8);
  v10 = (char *)v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  LOBYTE(v9) = *a1;
  v12 = v11[10];
  v24[1] = *(_QWORD *)(v2 + v11[9]);
  v26 = v9;
  v13 = *(_QWORD *)(v2 + v12);
  v14 = v2 + v11[7];
  v15 = *(id *)v14;
  v16 = *(_BYTE *)(v14 + 8);
  sub_AAFF4(*(id *)v14, v16);
  v17 = sub_77EB0(v15, v16);
  sub_794D8(v15, v16);
  sub_B1678(v2, (uint64_t)v10);
  if (v17)
  {
    v25 = (void *)v17;
  }
  else
  {
    v18 = type metadata accessor for BATracker(0);
    BaseObjectGraph.inject<A>(_:)(&v25, v18, v18);
  }
  sub_B18B8((uint64_t)v10);
  v19 = v25;
  v20 = *(_QWORD *)(v2 + 16);
  v21 = *(_BYTE *)(v2 + 24);
  j__swift_retain(v20);
  v22 = sub_78078(v20, v21);
  j__swift_release(v20);
  sub_78238((uint64_t)v7);
  sub_2068D0(&v26, v13, v19, v22, (uint64_t)v7, *(_QWORD *)(v2 + *(int *)(v8 + 32)));

  swift_release(v22);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_B1560(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  char *v6;
  int v7;
  uint64_t v9;
  char v10;
  char v11;

  v2 = type metadata accessor for HostingControllerVisibilityStateManager.State(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v3 + 16))(v6, a1, v2, v4);
  v7 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v6, v2);
  if (v7 == enum case for HostingControllerVisibilityStateManager.State.visible(_:))
  {
    v10 = 2;
    return sub_B1398(&v10);
  }
  else if (v7 == enum case for HostingControllerVisibilityStateManager.State.hidden(_:))
  {
    v11 = 3;
    return sub_B1398(&v11);
  }
  else
  {
    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  }
}

uint64_t sub_B165C()
{
  return static ViewModifier._viewListCount(inputs:body:)();
}

uint64_t sub_B1678(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PageLifeCycleViewModifier(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_B16C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PageLifeCycleViewModifier(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_B1704(uint64_t a1)
{
  return sub_B1824(a1, (uint64_t (*)(uint64_t, uint64_t))sub_B12A8);
}

uint64_t sub_B1714()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;

  v1 = (int *)type metadata accessor for PageLifeCycleViewModifier(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = v0 + v4;
  swift_release(*(_QWORD *)(v0 + v4));
  j__swift_release(*(_QWORD *)(v0 + v4 + 16));
  v7 = (_QWORD *)(v0 + v4 + v1[6]);
  v8 = sub_5C154(&qword_320498);
  if (swift_getEnumCaseMultiPayload(v7, v8) == 1)
  {
    v9 = type metadata accessor for ScenePhase(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v7, v9);
  }
  else
  {
    swift_release(*v7);
  }
  sub_794D8(*(id *)(v6 + v1[7]), *(_BYTE *)(v6 + v1[7] + 8));
  swift_release(*(_QWORD *)(v6 + v1[8]));
  swift_release(*(_QWORD *)(v6 + v1[9]));
  swift_bridgeObjectRelease(*(_QWORD *)(v6 + v1[10]));
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

uint64_t sub_B1818(uint64_t a1)
{
  return sub_B1824(a1, (uint64_t (*)(uint64_t, uint64_t))sub_B1560);
}

uint64_t sub_B1824(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t))
{
  uint64_t v2;
  uint64_t v4;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for PageLifeCycleViewModifier(0) - 8) + 80);
  return a2(a1, v2 + ((v4 + 16) & ~v4));
}

uint64_t sub_B1870(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_5C154(&qword_3222C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_B18B8(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for PageLifeCycleViewModifier(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_B18F8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3222D8;
  if (!qword_3222D8)
  {
    v1 = sub_667D0(&qword_3222D0);
    result = swift_getWitnessTable(&protocol conformance descriptor for SubscriptionView<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_3222D8);
  }
  return result;
}

uint64_t sub_B1944(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4;
  int v5;
  __int128 v7;
  _OWORD *v8;
  _OWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  void *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  _QWORD *v39;
  uint64_t v40;
  _QWORD *v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *(_QWORD *)v4 = *a2;
    v4 = v12 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain(v12);
  }
  else
  {
    v7 = *(_OWORD *)(a2 + 3);
    *(_OWORD *)(a1 + 24) = v7;
    (**(void (***)(uint64_t, uint64_t *))(v7 - 8))(a1, a2);
    v8 = (_OWORD *)(v4 + 40);
    v9 = a2 + 5;
    v10 = a2[8];
    if (v10)
    {
      v11 = a2[9];
      *(_QWORD *)(v4 + 64) = v10;
      *(_QWORD *)(v4 + 72) = v11;
      (**(void (***)(_OWORD *, _OWORD *))(v10 - 8))(v8, v9);
    }
    else
    {
      v13 = *(_OWORD *)(a2 + 7);
      *v8 = *v9;
      *(_OWORD *)(v4 + 56) = v13;
      *(_QWORD *)(v4 + 72) = a2[9];
    }
    v14 = a3[6];
    v15 = (void *)(v4 + v14);
    v16 = (char *)a2 + v14;
    v17 = type metadata accessor for ImpressionMetrics(0);
    v18 = *(_QWORD *)(v17 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
    {
      v19 = sub_5C154(&qword_31F480);
      memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v18 + 16))(v15, v16, v17);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
    }
    v20 = a3[7];
    v21 = a3[8];
    v22 = (_QWORD *)(v4 + v20);
    v23 = (uint64_t *)((char *)a2 + v20);
    v24 = v23[1];
    *v22 = *v23;
    v22[1] = v24;
    v25 = (_QWORD *)(v4 + v21);
    v26 = (uint64_t *)((char *)a2 + v21);
    v27 = v26[1];
    *v25 = *v26;
    v25[1] = v27;
    v28 = a3[9];
    v29 = a3[10];
    v30 = (_QWORD *)(v4 + v28);
    v31 = (uint64_t *)((char *)a2 + v28);
    v32 = v31[1];
    *v30 = *v31;
    v30[1] = v32;
    v33 = (_QWORD *)(v4 + v29);
    v34 = (uint64_t *)((char *)a2 + v29);
    v35 = v34[1];
    *v33 = *v34;
    v33[1] = v35;
    v36 = a3[11];
    v37 = a3[12];
    v38 = (_QWORD *)(v4 + v36);
    v39 = (uint64_t *)((char *)a2 + v36);
    v40 = v39[1];
    *v38 = *v39;
    v38[1] = v40;
    v41 = (_QWORD *)(v4 + v37);
    v42 = (uint64_t *)((char *)a2 + v37);
    v43 = v42[1];
    *v41 = *v42;
    v41[1] = v43;
    v44 = a3[13];
    v45 = a3[14];
    v46 = (_QWORD *)(v4 + v44);
    v47 = (uint64_t *)((char *)a2 + v44);
    v48 = v47[1];
    *v46 = *v47;
    v46[1] = v48;
    v49 = *(uint64_t *)((char *)a2 + v45);
    *(_QWORD *)(v4 + v45) = v49;
    v50 = a3[15];
    v51 = *(uint64_t *)((char *)a2 + v50);
    *(_QWORD *)(v4 + v50) = v51;
    swift_bridgeObjectRetain(v24);
    swift_bridgeObjectRetain(v27);
    swift_bridgeObjectRetain(v32);
    swift_bridgeObjectRetain(v35);
    swift_bridgeObjectRetain(v40);
    swift_bridgeObjectRetain(v43);
    swift_bridgeObjectRetain(v48);
    swift_bridgeObjectRetain(v49);
    swift_bridgeObjectRetain(v51);
  }
  return v4;
}

double sub_B1B6C(_QWORD *a1, int *a2)
{
  char *v4;
  uint64_t v5;
  uint64_t v6;
  double result;

  _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(a1);
  if (a1[8])
    _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(a1 + 5);
  v4 = (char *)a1 + a2[6];
  v5 = type metadata accessor for ImpressionMetrics(0);
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
    (*(void (**)(char *, uint64_t))(v6 + 8))(v4, v5);
  swift_bridgeObjectRelease(*(_QWORD *)((char *)a1 + a2[7] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)((char *)a1 + a2[8] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)((char *)a1 + a2[9] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)((char *)a1 + a2[10] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)((char *)a1 + a2[11] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)((char *)a1 + a2[12] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)((char *)a1 + a2[13] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)((char *)a1 + a2[14]));
  *(_QWORD *)&result = swift_bridgeObjectRelease(*(_QWORD *)((char *)a1 + a2[15])).n128_u64[0];
  return result;
}

uint64_t sub_B1C74(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  _OWORD *v7;
  _OWORD *v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  void *v13;
  const void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  _QWORD *v37;
  uint64_t v38;
  _QWORD *v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  v6 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v6;
  (**(void (***)(void))(v6 - 8))();
  v7 = (_OWORD *)(a1 + 40);
  v8 = (_OWORD *)(a2 + 40);
  v9 = *(_QWORD *)(a2 + 64);
  if (v9)
  {
    v10 = *(_QWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 64) = v9;
    *(_QWORD *)(a1 + 72) = v10;
    (**(void (***)(_OWORD *, _OWORD *))(v9 - 8))(v7, v8);
  }
  else
  {
    v11 = *(_OWORD *)(a2 + 56);
    *v7 = *v8;
    *(_OWORD *)(a1 + 56) = v11;
    *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  }
  v12 = a3[6];
  v13 = (void *)(a1 + v12);
  v14 = (const void *)(a2 + v12);
  v15 = type metadata accessor for ImpressionMetrics(0);
  v16 = *(_QWORD *)(v15 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
  {
    v17 = sub_5C154(&qword_31F480);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v16 + 16))(v13, v14, v15);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  v18 = a3[7];
  v19 = a3[8];
  v20 = (_QWORD *)(a1 + v18);
  v21 = (_QWORD *)(a2 + v18);
  v22 = v21[1];
  *v20 = *v21;
  v20[1] = v22;
  v23 = (_QWORD *)(a1 + v19);
  v24 = (_QWORD *)(a2 + v19);
  v25 = v24[1];
  *v23 = *v24;
  v23[1] = v25;
  v26 = a3[9];
  v27 = a3[10];
  v28 = (_QWORD *)(a1 + v26);
  v29 = (_QWORD *)(a2 + v26);
  v30 = v29[1];
  *v28 = *v29;
  v28[1] = v30;
  v31 = (_QWORD *)(a1 + v27);
  v32 = (_QWORD *)(a2 + v27);
  v33 = v32[1];
  *v31 = *v32;
  v31[1] = v33;
  v34 = a3[11];
  v35 = a3[12];
  v36 = (_QWORD *)(a1 + v34);
  v37 = (_QWORD *)(a2 + v34);
  v38 = v37[1];
  *v36 = *v37;
  v36[1] = v38;
  v39 = (_QWORD *)(a1 + v35);
  v40 = (_QWORD *)(a2 + v35);
  v41 = v40[1];
  *v39 = *v40;
  v39[1] = v41;
  v42 = a3[13];
  v43 = a3[14];
  v44 = (_QWORD *)(a1 + v42);
  v45 = (_QWORD *)(a2 + v42);
  v46 = v45[1];
  *v44 = *v45;
  v44[1] = v46;
  v47 = *(_QWORD *)(a2 + v43);
  *(_QWORD *)(a1 + v43) = v47;
  v48 = a3[15];
  v49 = *(_QWORD *)(a2 + v48);
  *(_QWORD *)(a1 + v48) = v49;
  swift_bridgeObjectRetain(v22);
  swift_bridgeObjectRetain(v25);
  swift_bridgeObjectRetain(v30);
  swift_bridgeObjectRetain(v33);
  swift_bridgeObjectRetain(v38);
  swift_bridgeObjectRetain(v41);
  swift_bridgeObjectRetain(v46);
  swift_bridgeObjectRetain(v47);
  swift_bridgeObjectRetain(v49);
  return a1;
}

uint64_t sub_B1E68(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  void *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(void *, uint64_t, uint64_t);
  int v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  sub_65938((_QWORD *)a1, (_QWORD *)a2);
  v6 = *(_QWORD *)(a2 + 64);
  if (*(_QWORD *)(a1 + 64))
  {
    if (v6)
    {
      sub_65938((_QWORD *)(a1 + 40), (_QWORD *)(a2 + 40));
      goto LABEL_8;
    }
    _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((_QWORD *)(a1 + 40));
  }
  else if (v6)
  {
    *(_QWORD *)(a1 + 64) = v6;
    *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
    (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1 + 40, a2 + 40);
    goto LABEL_8;
  }
  v7 = *(_OWORD *)(a2 + 40);
  v8 = *(_OWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 40) = v7;
  *(_OWORD *)(a1 + 56) = v8;
LABEL_8:
  v9 = a3[6];
  v10 = (void *)(a1 + v9);
  v11 = (void *)(a2 + v9);
  v12 = type metadata accessor for ImpressionMetrics(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v13 + 48);
  v15 = v14(v10, 1, v12);
  v16 = v14(v11, 1, v12);
  if (!v15)
  {
    if (!v16)
    {
      (*(void (**)(void *, void *, uint64_t))(v13 + 24))(v10, v11, v12);
      goto LABEL_14;
    }
    (*(void (**)(void *, uint64_t))(v13 + 8))(v10, v12);
    goto LABEL_13;
  }
  if (v16)
  {
LABEL_13:
    v17 = sub_5C154(&qword_31F480);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_14;
  }
  (*(void (**)(void *, void *, uint64_t))(v13 + 16))(v10, v11, v12);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
LABEL_14:
  v18 = a3[7];
  v19 = (_QWORD *)(a1 + v18);
  v20 = (_QWORD *)(a2 + v18);
  *v19 = *v20;
  v21 = v20[1];
  v22 = v19[1];
  v19[1] = v21;
  swift_bridgeObjectRetain(v21);
  swift_bridgeObjectRelease(v22);
  v23 = a3[8];
  v24 = (_QWORD *)(a1 + v23);
  v25 = (_QWORD *)(a2 + v23);
  *v24 = *v25;
  v26 = v25[1];
  v27 = v24[1];
  v24[1] = v26;
  swift_bridgeObjectRetain(v26);
  swift_bridgeObjectRelease(v27);
  v28 = a3[9];
  v29 = (_QWORD *)(a1 + v28);
  v30 = (_QWORD *)(a2 + v28);
  *v29 = *v30;
  v31 = v30[1];
  v32 = v29[1];
  v29[1] = v31;
  swift_bridgeObjectRetain(v31);
  swift_bridgeObjectRelease(v32);
  v33 = a3[10];
  v34 = (_QWORD *)(a1 + v33);
  v35 = (_QWORD *)(a2 + v33);
  *v34 = *v35;
  v36 = v35[1];
  v37 = v34[1];
  v34[1] = v36;
  swift_bridgeObjectRetain(v36);
  swift_bridgeObjectRelease(v37);
  v38 = a3[11];
  v39 = (_QWORD *)(a1 + v38);
  v40 = (_QWORD *)(a2 + v38);
  *v39 = *v40;
  v41 = v40[1];
  v42 = v39[1];
  v39[1] = v41;
  swift_bridgeObjectRetain(v41);
  swift_bridgeObjectRelease(v42);
  v43 = a3[12];
  v44 = (_QWORD *)(a1 + v43);
  v45 = (_QWORD *)(a2 + v43);
  *v44 = *v45;
  v46 = v45[1];
  v47 = v44[1];
  v44[1] = v46;
  swift_bridgeObjectRetain(v46);
  swift_bridgeObjectRelease(v47);
  v48 = a3[13];
  v49 = (_QWORD *)(a1 + v48);
  v50 = (_QWORD *)(a2 + v48);
  *v49 = *v50;
  v51 = v50[1];
  v52 = v49[1];
  v49[1] = v51;
  swift_bridgeObjectRetain(v51);
  swift_bridgeObjectRelease(v52);
  v53 = a3[14];
  v54 = *(_QWORD *)(a2 + v53);
  v55 = *(_QWORD *)(a1 + v53);
  *(_QWORD *)(a1 + v53) = v54;
  swift_bridgeObjectRetain(v54);
  swift_bridgeObjectRelease(v55);
  v56 = a3[15];
  v57 = *(_QWORD *)(a2 + v56);
  v58 = *(_QWORD *)(a1 + v56);
  *(_QWORD *)(a1 + v56) = v57;
  swift_bridgeObjectRetain(v57);
  swift_bridgeObjectRelease(v58);
  return a1;
}

uint64_t sub_B2150(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  void *v9;
  const void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  v7 = *(_OWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  v8 = a3[6];
  v9 = (void *)(a1 + v8);
  v10 = (const void *)(a2 + v8);
  *(_OWORD *)(a1 + 56) = v7;
  v11 = type metadata accessor for ImpressionMetrics(0);
  v12 = *(_QWORD *)(v11 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
  {
    v13 = sub_5C154(&qword_31F480);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v12 + 32))(v9, v10, v11);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  v14 = a3[8];
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  *(_OWORD *)(a1 + v14) = *(_OWORD *)(a2 + v14);
  v15 = a3[10];
  *(_OWORD *)(a1 + a3[9]) = *(_OWORD *)(a2 + a3[9]);
  *(_OWORD *)(a1 + v15) = *(_OWORD *)(a2 + v15);
  v16 = a3[12];
  *(_OWORD *)(a1 + a3[11]) = *(_OWORD *)(a2 + a3[11]);
  *(_OWORD *)(a1 + v16) = *(_OWORD *)(a2 + v16);
  v17 = a3[14];
  *(_OWORD *)(a1 + a3[13]) = *(_OWORD *)(a2 + a3[13]);
  *(_QWORD *)(a1 + v17) = *(_QWORD *)(a2 + v17);
  *(_QWORD *)(a1 + a3[15]) = *(_QWORD *)(a2 + a3[15]);
  return a1;
}

uint64_t sub_B2298(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  void *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(void *, uint64_t, uint64_t);
  int v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;

  _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((_QWORD *)a1);
  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  if (*(_QWORD *)(a1 + 64))
    _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((_QWORD *)(a1 + 40));
  v7 = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = v7;
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  v8 = a3[6];
  v9 = (void *)(a1 + v8);
  v10 = (void *)(a2 + v8);
  v11 = type metadata accessor for ImpressionMetrics(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v12 + 48);
  v14 = v13(v9, 1, v11);
  v15 = v13(v10, 1, v11);
  if (!v14)
  {
    if (!v15)
    {
      (*(void (**)(void *, void *, uint64_t))(v12 + 40))(v9, v10, v11);
      goto LABEL_9;
    }
    (*(void (**)(void *, uint64_t))(v12 + 8))(v9, v11);
    goto LABEL_8;
  }
  if (v15)
  {
LABEL_8:
    v16 = sub_5C154(&qword_31F480);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    goto LABEL_9;
  }
  (*(void (**)(void *, void *, uint64_t))(v12 + 32))(v9, v10, v11);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
LABEL_9:
  v17 = a3[7];
  v18 = (_QWORD *)(a1 + v17);
  v19 = (uint64_t *)(a2 + v17);
  v21 = *v19;
  v20 = v19[1];
  v22 = v18[1];
  *v18 = v21;
  v18[1] = v20;
  swift_bridgeObjectRelease(v22);
  v23 = a3[8];
  v24 = (_QWORD *)(a1 + v23);
  v25 = (uint64_t *)(a2 + v23);
  v27 = *v25;
  v26 = v25[1];
  v28 = v24[1];
  *v24 = v27;
  v24[1] = v26;
  swift_bridgeObjectRelease(v28);
  v29 = a3[9];
  v30 = (_QWORD *)(a1 + v29);
  v31 = (uint64_t *)(a2 + v29);
  v33 = *v31;
  v32 = v31[1];
  v34 = v30[1];
  *v30 = v33;
  v30[1] = v32;
  swift_bridgeObjectRelease(v34);
  v35 = a3[10];
  v36 = (_QWORD *)(a1 + v35);
  v37 = (uint64_t *)(a2 + v35);
  v39 = *v37;
  v38 = v37[1];
  v40 = v36[1];
  *v36 = v39;
  v36[1] = v38;
  swift_bridgeObjectRelease(v40);
  v41 = a3[11];
  v42 = (_QWORD *)(a1 + v41);
  v43 = (uint64_t *)(a2 + v41);
  v45 = *v43;
  v44 = v43[1];
  v46 = v42[1];
  *v42 = v45;
  v42[1] = v44;
  swift_bridgeObjectRelease(v46);
  v47 = a3[12];
  v48 = (_QWORD *)(a1 + v47);
  v49 = (uint64_t *)(a2 + v47);
  v51 = *v49;
  v50 = v49[1];
  v52 = v48[1];
  *v48 = v51;
  v48[1] = v50;
  swift_bridgeObjectRelease(v52);
  v53 = a3[13];
  v54 = (_QWORD *)(a1 + v53);
  v55 = (uint64_t *)(a2 + v53);
  v57 = *v55;
  v56 = v55[1];
  v58 = v54[1];
  *v54 = v57;
  v54[1] = v56;
  swift_bridgeObjectRelease(v58);
  v59 = a3[14];
  v60 = *(_QWORD *)(a1 + v59);
  *(_QWORD *)(a1 + v59) = *(_QWORD *)(a2 + v59);
  swift_bridgeObjectRelease(v60);
  v61 = a3[15];
  v62 = *(_QWORD *)(a1 + v61);
  *(_QWORD *)(a1 + v61) = *(_QWORD *)(a2 + v61);
  swift_bridgeObjectRelease(v62);
  return a1;
}

uint64_t sub_B24D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_B24DC);
}

uint64_t sub_B24DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_5C154(&qword_31F480);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v8);
  }
}

uint64_t sub_B255C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_B2568);
}

uint64_t sub_B2568(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 24) = (a2 - 1);
  }
  else
  {
    v7 = sub_5C154(&qword_31F480);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for RatingSummaryComponentModel(uint64_t a1)
{
  uint64_t result;

  result = qword_322338;
  if (!qword_322338)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for RatingSummaryComponentModel);
  return result;
}

void sub_B261C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[12];

  v4[0] = "(";
  v4[1] = &unk_25BBC8;
  sub_AE8F0(319);
  if (v3 <= 0x3F)
  {
    v4[2] = *(_QWORD *)(v2 - 8) + 64;
    v4[3] = &unk_25BBE0;
    v4[4] = &unk_25BBE0;
    v4[5] = &unk_25BBE0;
    v4[6] = &unk_25BBE0;
    v4[7] = &unk_25BBE0;
    v4[8] = &unk_25BBE0;
    v4[9] = &unk_25BBF8;
    v4[10] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4[11] = (char *)&value witness table for Builtin.BridgeObject + 64;
    swift_initStructMetadata(a1, 256, 12, v4, a1 + 16);
  }
}

uint64_t sub_B26C4(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_B26EC + 4 * byte_25BB70[a1]))(25705, 0xE200000000000000);
}

uint64_t sub_B26EC()
{
  return 0x6575676573;
}

unint64_t sub_B2700()
{
  return 0xD000000000000011;
}

void sub_B2808(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  int v25;
  int v26;
  int v27;
  int v28;
  int v29;
  int v30;
  uint64_t v31;
  int *v32;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int *v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t *v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  int v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  _QWORD *v70;
  uint64_t v71;
  int *v72;
  uint64_t v73;
  char *v74;
  __int128 v75;
  __int128 v76;
  uint64_t v77;
  __int128 v78;
  __int128 v79;
  uint64_t v80;
  char *v81;

  v67 = a2;
  v3 = sub_5C154(&qword_31F480);
  __chkstk_darwin(v3);
  v5 = (char *)&v67 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v69 = sub_5C154(&qword_3223A0);
  v6 = *(_QWORD *)(v69 - 8);
  __chkstk_darwin(v69);
  v8 = (char *)&v67 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for RatingSummaryComponentModel(0);
  __chkstk_darwin(v9);
  v11 = (char *)&v67 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v74 = v11 + 40;
  v80 = 0;
  v78 = 0u;
  v79 = 0u;
  v77 = 0;
  v75 = 0u;
  v76 = 0u;
  sub_8B354((uint64_t)&v78, (uint64_t)&v75);
  v12 = v76;
  *(_OWORD *)(v11 + 40) = v75;
  *(_OWORD *)(v11 + 56) = v12;
  *((_QWORD *)v11 + 9) = v77;
  sub_5E09C((uint64_t)&v78, (uint64_t *)&unk_326210);
  v72 = (int *)v9;
  v13 = (uint64_t)&v11[*(int *)(v9 + 24)];
  v14 = type metadata accessor for ImpressionMetrics(0);
  v15 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56);
  v73 = v13;
  v15(v13, 1, 1, v14);
  v17 = a1[3];
  v16 = a1[4];
  v70 = a1;
  sub_66898(a1, v17);
  v18 = sub_B313C();
  v68 = v8;
  v19 = v71;
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for RatingSummaryComponentModel.CodingKeys, &type metadata for RatingSummaryComponentModel.CodingKeys, v18, v17, v16);
  v81 = v11;
  if (v19)
  {
    v71 = v19;
    LODWORD(v69) = 0;
    _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(v70);
    v24 = 0;
    v25 = 0;
    v26 = 0;
    v27 = 0;
    v28 = 0;
    v29 = 0;
    v30 = 0;
  }
  else
  {
    v20 = (uint64_t)v5;
    v21 = sub_5C154(&qword_320B78);
    LOBYTE(v75) = 0;
    v22 = sub_67060((unint64_t *)&qword_320B90, &qword_320B78, (uint64_t)&protocol conformance descriptor for CodeAnyHashable<A>);
    v23 = v69;
    KeyedDecodingContainer.decode<A>(_:forKey:)(&v78, v21, &v75, v69, v21, v22);
    v33 = v79;
    *(_OWORD *)v11 = v78;
    *((_OWORD *)v11 + 1) = v33;
    *((_QWORD *)v11 + 4) = v80;
    v34 = sub_5C154(&qword_320B70);
    LOBYTE(v75) = 1;
    v35 = sub_67060(&qword_320B98, &qword_320B70, (uint64_t)&protocol conformance descriptor for _CodeByKind_OrNil<A>);
    KeyedDecodingContainer.decode<A>(_:forKey:)(&v78, v34, &v75, v23, v34, v35);
    sub_8B3E0((uint64_t)&v78, (uint64_t)v74, &qword_320B70);
    LOBYTE(v78) = 2;
    v36 = sub_648E0(&qword_320BA0, (uint64_t (*)(uint64_t))&type metadata accessor for ImpressionMetrics, (uint64_t)&protocol conformance descriptor for ImpressionMetrics);
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)(v14, &v78, v23, v14, v36);
    sub_8B3E0(v20, v73, &qword_31F480);
    LOBYTE(v78) = 3;
    v37 = KeyedDecodingContainer.decode(_:forKey:)(&v78, v23);
    v38 = v72;
    v39 = (uint64_t *)&v11[v72[7]];
    *v39 = v37;
    v39[1] = v40;
    LOBYTE(v78) = 4;
    v41 = KeyedDecodingContainer.decode(_:forKey:)(&v78, v23);
    v42 = (uint64_t *)&v11[v38[8]];
    *v42 = v41;
    v42[1] = v43;
    LOBYTE(v78) = 5;
    v44 = KeyedDecodingContainer.decode(_:forKey:)(&v78, v23);
    v45 = (uint64_t *)&v11[v38[9]];
    *v45 = v44;
    v45[1] = v46;
    LOBYTE(v78) = 6;
    v47 = KeyedDecodingContainer.decode(_:forKey:)(&v78, v23);
    v48 = (uint64_t *)&v11[v38[10]];
    *v48 = v47;
    v48[1] = v49;
    LOBYTE(v78) = 7;
    v50 = KeyedDecodingContainer.decode(_:forKey:)(&v78, v23);
    v51 = (uint64_t *)&v11[v72[11]];
    *v51 = v50;
    v51[1] = v52;
    LOBYTE(v78) = 8;
    v53 = KeyedDecodingContainer.decode(_:forKey:)(&v78, v23);
    v54 = (uint64_t *)&v11[v72[12]];
    *v54 = v53;
    v54[1] = v55;
    LOBYTE(v78) = 9;
    v56 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)(&v78, v23);
    v71 = 0;
    v58 = (uint64_t *)&v81[v72[13]];
    *v58 = v56;
    v58[1] = v57;
    v59 = sub_5C154(&qword_3223B0);
    LOBYTE(v75) = 10;
    v60 = sub_B3180();
    v61 = v71;
    KeyedDecodingContainer.decode<A>(_:forKey:)(&v78, v59, &v75, v69, v59, v60);
    v71 = v61;
    if (v61)
    {
      (*(void (**)(char *, uint64_t))(v6 + 8))(v68, v69);
      v62 = 0;
    }
    else
    {
      *(_QWORD *)&v81[v72[14]] = v78;
      v63 = sub_5C154(&qword_3223C8);
      LOBYTE(v75) = 11;
      v64 = sub_B31FC();
      v65 = v71;
      KeyedDecodingContainer.decode<A>(_:forKey:)(&v78, v63, &v75, v69, v63, v64);
      v71 = v65;
      if (!v65)
      {
        (*(void (**)(char *, uint64_t))(v6 + 8))(v68, v69);
        v66 = (uint64_t)v81;
        *(_QWORD *)&v81[v72[15]] = v78;
        sub_B32CC(v66, v67);
        _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(v70);
        sub_B3310(v66);
        return;
      }
      (*(void (**)(char *, uint64_t))(v6 + 8))(v68, v69);
      v62 = 1;
    }
    _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(v70);
    v30 = 1;
    LODWORD(v69) = 1;
    v25 = 1;
    v26 = 1;
    v29 = v62;
    v28 = 1;
    v27 = 1;
    sub_5E09C((uint64_t)v81, &qword_320B78);
    v24 = 1;
  }
  sub_5E09C((uint64_t)v74, &qword_320B70);
  sub_5E09C(v73, &qword_31F480);
  v31 = (uint64_t)v81;
  v32 = v72;
  if (v30)
  {
    swift_bridgeObjectRelease(*(_QWORD *)&v81[v72[7] + 8]);
    if (!(_DWORD)v69)
    {
LABEL_6:
      if (!v24)
        goto LABEL_7;
      goto LABEL_15;
    }
  }
  else if (!(_DWORD)v69)
  {
    goto LABEL_6;
  }
  swift_bridgeObjectRelease(*(_QWORD *)(v31 + v32[8] + 8));
  if (!v24)
  {
LABEL_7:
    if (!v25)
      goto LABEL_8;
    goto LABEL_16;
  }
LABEL_15:
  swift_bridgeObjectRelease(*(_QWORD *)(v31 + v32[9] + 8));
  if (!v25)
  {
LABEL_8:
    if (!v26)
      goto LABEL_9;
    goto LABEL_17;
  }
LABEL_16:
  swift_bridgeObjectRelease(*(_QWORD *)(v31 + v32[10] + 8));
  if (!v26)
  {
LABEL_9:
    if (!v27)
      goto LABEL_10;
    goto LABEL_18;
  }
LABEL_17:
  swift_bridgeObjectRelease(*(_QWORD *)(v31 + v32[11] + 8));
  if (!v27)
  {
LABEL_10:
    if (!v28)
      goto LABEL_11;
LABEL_19:
    swift_bridgeObjectRelease(*(_QWORD *)(v31 + v32[13] + 8));
    if (!v29)
      return;
    goto LABEL_20;
  }
LABEL_18:
  swift_bridgeObjectRelease(*(_QWORD *)(v31 + v32[12] + 8));
  if (v28)
    goto LABEL_19;
LABEL_11:
  if (!v29)
    return;
LABEL_20:
  swift_bridgeObjectRelease(*(_QWORD *)(v31 + v32[14]));
}

uint64_t sub_B2FE8()
{
  unsigned __int8 *v0;

  return sub_B26C4(*v0);
}

uint64_t sub_B2FF0@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_B3580(a1, a2);
  *a3 = result;
  return result;
}

void sub_B3014(_BYTE *a1@<X8>)
{
  *a1 = 12;
}

uint64_t sub_B3020(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_B313C();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_B3048(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_B313C();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_B3070@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  _BYTE v4[40];

  sub_5E1A4(v1 + 40, (uint64_t)v4, &qword_320B70);
  return sub_B30F4((uint64_t)v4, a1);
}

void sub_B30B4(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  sub_B2808(a1, a2);
}

uint64_t sub_B30C8()
{
  return sub_648E0(&qword_322398, type metadata accessor for RatingSummaryComponentModel, (uint64_t)&unk_25BC10);
}

uint64_t sub_B30F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_5C154((uint64_t *)&unk_326210);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_B313C()
{
  unint64_t result;

  result = qword_3223A8;
  if (!qword_3223A8)
  {
    result = swift_getWitnessTable(&unk_25BD64, &type metadata for RatingSummaryComponentModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_3223A8);
  }
  return result;
}

unint64_t sub_B3180()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3223B8;
  if (!qword_3223B8)
  {
    v1 = sub_667D0(&qword_3223B0);
    sub_B3278(&qword_3223C0, &qword_31F788);
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> DiscardOnError<A>, v1);
    atomic_store(result, (unint64_t *)&qword_3223B8);
  }
  return result;
}

unint64_t sub_B31FC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3223D0;
  if (!qword_3223D0)
  {
    v1 = sub_667D0(&qword_3223C8);
    sub_B3278(&qword_3223D8, &qword_31F730);
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> DiscardOnError<A>, v1);
    atomic_store(result, (unint64_t *)&qword_3223D0);
  }
  return result;
}

uint64_t sub_B3278(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = sub_667D0(a2);
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> [A], v4);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_B32CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for RatingSummaryComponentModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_B3310(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for RatingSummaryComponentModel(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t getEnumTagSinglePayload for RatingSummaryComponentModel.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF5)
    goto LABEL_17;
  if (a2 + 11 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 11) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 11;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 11;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 11;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xC;
  v8 = v6 - 12;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for RatingSummaryComponentModel.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 11 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 11) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF5)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF4)
    return ((uint64_t (*)(void))((char *)&loc_B3428 + 4 * byte_25BB81[v4]))();
  *a1 = a2 + 11;
  return ((uint64_t (*)(void))((char *)sub_B345C + 4 * byte_25BB7C[v4]))();
}

uint64_t sub_B345C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_B3464(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0xB346CLL);
  return result;
}

uint64_t sub_B3478(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0xB3480);
  *(_BYTE *)result = a2 + 11;
  return result;
}

uint64_t sub_B3484(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_B348C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for RatingSummaryComponentModel.CodingKeys()
{
  return &type metadata for RatingSummaryComponentModel.CodingKeys;
}

unint64_t sub_B34AC()
{
  unint64_t result;

  result = qword_3223E0;
  if (!qword_3223E0)
  {
    result = swift_getWitnessTable(&unk_25BD3C, &type metadata for RatingSummaryComponentModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_3223E0);
  }
  return result;
}

unint64_t sub_B34F4()
{
  unint64_t result;

  result = qword_3223E8;
  if (!qword_3223E8)
  {
    result = swift_getWitnessTable(&unk_25BCAC, &type metadata for RatingSummaryComponentModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_3223E8);
  }
  return result;
}

unint64_t sub_B353C()
{
  unint64_t result;

  result = qword_3223F0;
  if (!qword_3223F0)
  {
    result = swift_getWitnessTable(&unk_25BCD4, &type metadata for RatingSummaryComponentModel.CodingKeys);
    atomic_store(result, &qword_3223F0);
  }
  return result;
}

uint64_t sub_B3580(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  char v17;

  if (a1 == 25705 && a2 == 0xE200000000000000)
  {
    v5 = 0xE200000000000000;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(25705, 0xE200000000000000, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 0x6575676573 && a2 == 0xE500000000000000)
  {
    v7 = 0xE500000000000000;
LABEL_14:
    swift_bridgeObjectRelease(v7);
    return 1;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6575676573, 0xE500000000000000, a1, a2, 0) & 1) != 0)
  {
    v7 = a2;
    goto LABEL_14;
  }
  if (a1 == 0xD000000000000011)
  {
    v8 = 0x800000000026D790;
    if (a2 == 0x800000000026D790)
      goto LABEL_19;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000011, 0x800000000026D790, a1, a2, 0) & 1) != 0)
  {
    v8 = a2;
LABEL_19:
    swift_bridgeObjectRelease(v8);
    return 2;
  }
  if (a1 == 0xD000000000000012 && a2 == 0x80000000002703C0)
  {
    v9 = 0x80000000002703C0;
LABEL_25:
    swift_bridgeObjectRelease(v9);
    return 3;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000012, 0x80000000002703C0, a1, a2, 0) & 1) != 0)
  {
    v9 = a2;
    goto LABEL_25;
  }
  if (a1 == 0x62614C664F74756FLL && a2 == 0xEA00000000006C65)
  {
    v10 = 0xEA00000000006C65;
LABEL_31:
    swift_bridgeObjectRelease(v10);
    return 4;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x62614C664F74756FLL, 0xEA00000000006C65, a1, a2, 0) & 1) != 0)
  {
    v10 = a2;
    goto LABEL_31;
  }
  if (a1 == 0xD000000000000010)
  {
    v11 = 0x80000000002703E0;
    if (a2 == 0x80000000002703E0)
      goto LABEL_36;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000010, 0x80000000002703E0, a1, a2, 0) & 1) != 0)
  {
    v11 = a2;
LABEL_36:
    swift_bridgeObjectRelease(v11);
    return 5;
  }
  if (a1 == 0x7461526F54706174 && a2 == 0xEE006C6562614C65)
  {
    v12 = 0xEE006C6562614C65;
LABEL_42:
    swift_bridgeObjectRelease(v12);
    return 6;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x7461526F54706174, 0xEE006C6562614C65, a1, a2, 0) & 1) != 0)
  {
    v12 = a2;
    goto LABEL_42;
  }
  if (a1 == 0xD000000000000016 && a2 == 0x8000000000270400)
  {
    v13 = 0x8000000000270400;
LABEL_48:
    swift_bridgeObjectRelease(v13);
    return 7;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000016, 0x8000000000270400, a1, a2, 0) & 1) != 0)
  {
    v13 = a2;
    goto LABEL_48;
  }
  if (a1 == 0xD000000000000014 && a2 == 0x8000000000270420)
  {
    v14 = 0x8000000000270420;
LABEL_54:
    swift_bridgeObjectRelease(v14);
    return 8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000014, 0x8000000000270420, a1, a2, 0) & 1) != 0)
  {
    v14 = a2;
    goto LABEL_54;
  }
  if (a1 == 0x73734164656E776FLL && a2 == 0xEC00000044497465)
  {
    v15 = 0xEC00000044497465;
LABEL_60:
    swift_bridgeObjectRelease(v15);
    return 9;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x73734164656E776FLL, 0xEC00000044497465, a1, a2, 0) & 1) != 0)
  {
    v15 = a2;
    goto LABEL_60;
  }
  if (a1 == 0xD000000000000010)
  {
    v16 = 0x8000000000270440;
    if (a2 == 0x8000000000270440)
      goto LABEL_65;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000010, 0x8000000000270440, a1, a2, 0) & 1) != 0)
  {
    v16 = a2;
LABEL_65:
    swift_bridgeObjectRelease(v16);
    return 10;
  }
  if (a1 == 0xD000000000000026 && a2 == 0x8000000000270460)
  {
    swift_bridgeObjectRelease(0x8000000000270460);
    return 11;
  }
  else
  {
    v17 = _stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000026, 0x8000000000270460, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v17 & 1) != 0)
      return 11;
    else
      return 12;
  }
}

ValueMetadata *type metadata accessor for FlowBackActionImplementation()
{
  return &type metadata for FlowBackActionImplementation;
}

void *sub_B3A40()
{
  return &protocol witness table for Models.FlowBackAction;
}

uint64_t sub_B3A4C(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v5;
  _QWORD *v6;

  v5 = type metadata accessor for MainActor(0);
  v2[2] = v5;
  v2[3] = static MainActor.shared.getter(v5);
  v6 = (_QWORD *)swift_task_alloc(dword_32240C);
  v2[4] = v6;
  *v6 = v2;
  v6[1] = sub_B3ACC;
  return sub_B3BBC(a1, a2);
}

uint64_t sub_B3ACC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 32);
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  *(_QWORD *)(*(_QWORD *)v1 + 40) = v0;
  swift_task_dealloc(v2);
  v5 = dispatch thunk of Actor.unownedExecutor.getter(v3, &protocol witness table for MainActor);
  if (v0)
    v6 = sub_B3B88;
  else
    v6 = sub_B3B54;
  return swift_task_switch(v6, v5, v4);
}

uint64_t sub_B3B54()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_B3B88()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_B3BBC(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v2[7] = a1;
  v2[8] = a2;
  v3 = type metadata accessor for MainActor(0);
  v2[9] = v3;
  v2[10] = static MainActor.shared.getter(v3);
  v4 = sub_5C154(&qword_31FA90);
  v5 = (_QWORD *)swift_task_alloc(async function pointer to BaseObjectGraph.inject<A>(_:)[1]);
  v2[11] = v5;
  *v5 = v2;
  v5[1] = sub_B3C54;
  return BaseObjectGraph.inject<A>(_:)(v2 + 2, v4, v4);
}

uint64_t sub_B3C54()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 88);
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 72);
  *(_QWORD *)(*(_QWORD *)v1 + 96) = v0;
  swift_task_dealloc(v2);
  v5 = dispatch thunk of Actor.unownedExecutor.getter(v3, &protocol witness table for MainActor);
  if (v0)
    v6 = sub_B4020;
  else
    v6 = sub_B3CDC;
  return swift_task_switch(v6, v5, v4);
}

uint64_t sub_B3CDC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  char v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  __n128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  __n128 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  __n128 v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  uint64_t v51;

  v1 = swift_release(*(_QWORD *)(v0 + 80));
  v2 = Models.FlowBackAction.dismissal.getter(v1);
  v4 = v3;
  v5 = static Models.FlowBackAction.Dismissal.stackPop.getter();
  if (v5 == v2 && v6 == v4)
  {
    swift_bridgeObjectRelease(v4);
    goto LABEL_10;
  }
  v8 = v6;
  v9 = _stringCompareWithSmolCheck(_:_:expecting:)(v5, v6, v2, v4, 0);
  v10 = swift_bridgeObjectRelease(v8);
  if ((v9 & 1) != 0)
  {
LABEL_10:
    swift_bridgeObjectRelease(v4);
    v14 = *(_QWORD *)(v0 + 40);
    v15 = *(_QWORD *)(v0 + 48);
    sub_66898((_QWORD *)(v0 + 16), v14);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(1, v14, v15);
    goto LABEL_11;
  }
  v11 = static Models.FlowBackAction.Dismissal.stackPopToRoot.getter(v10);
  v13 = v12;
  if (v11 == v2 && v12 == v4)
  {
    swift_bridgeObjectRelease(v4);
LABEL_14:
    swift_bridgeObjectRelease(v4);
    v23 = *(_QWORD *)(v0 + 40);
    v24 = *(_QWORD *)(v0 + 48);
    sub_66898((_QWORD *)(v0 + 16), v23);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 64))(1, v23, v24);
    goto LABEL_11;
  }
  v21 = _stringCompareWithSmolCheck(_:_:expecting:)(v11, v12, v2, v4, 0);
  swift_bridgeObjectRelease(v13);
  if ((v21 & 1) != 0)
    goto LABEL_14;
  v25 = static Models.FlowBackAction.Dismissal.sheetDismiss.getter(v22);
  v27 = v26;
  if (v25 == v2 && v26 == v4)
  {
    swift_bridgeObjectRelease(v4);
LABEL_19:
    swift_bridgeObjectRelease(v4);
    v30 = *(_QWORD *)(v0 + 40);
    v31 = *(_QWORD *)(v0 + 48);
    sub_66898((_QWORD *)(v0 + 16), v30);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v31 + 80))(1, v30, v31);
    goto LABEL_11;
  }
  v28 = _stringCompareWithSmolCheck(_:_:expecting:)(v25, v26, v2, v4, 0);
  v29 = swift_bridgeObjectRelease(v27);
  if ((v28 & 1) != 0)
    goto LABEL_19;
  v32 = static Models.FlowBackAction.Dismissal.cardSetCloseTappedDismiss.getter(v29);
  v34 = v33;
  if (v32 == v2 && v33 == v4)
  {
    swift_bridgeObjectRelease(v4);
LABEL_24:
    swift_bridgeObjectRelease(v4);
    v37 = *(_QWORD *)(v0 + 40);
    v38 = *(_QWORD *)(v0 + 48);
    sub_66898((_QWORD *)(v0 + 16), v37);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v38 + 96))(1, 1, v37, v38);
    goto LABEL_11;
  }
  v35 = _stringCompareWithSmolCheck(_:_:expecting:)(v32, v33, v2, v4, 0);
  v36 = swift_bridgeObjectRelease(v34);
  if ((v35 & 1) != 0)
    goto LABEL_24;
  v39 = static Models.FlowBackAction.Dismissal.cardSetDismiss.getter(v36);
  v41 = v40;
  if (v39 == v2 && v40 == v4)
  {
    swift_bridgeObjectRelease(v4);
LABEL_30:
    swift_bridgeObjectRelease(v4);
    v44 = *(_QWORD *)(v0 + 40);
    v45 = *(_QWORD *)(v0 + 48);
    sub_66898((_QWORD *)(v0 + 16), v44);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v45 + 96))(1, 0, v44, v45);
    goto LABEL_11;
  }
  v42 = _stringCompareWithSmolCheck(_:_:expecting:)(v39, v40, v2, v4, 0);
  v43 = swift_bridgeObjectRelease(v41);
  if ((v42 & 1) != 0)
    goto LABEL_30;
  v46 = static Models.FlowBackAction.Dismissal.cardStackDismiss.getter(v43);
  v48 = v47;
  if (v46 == v2 && v47 == v4)
  {
    swift_bridgeObjectRelease_n(v4, 2);
  }
  else
  {
    v49 = _stringCompareWithSmolCheck(_:_:expecting:)(v46, v47, v2, v4, 0);
    swift_bridgeObjectRelease(v48);
    swift_bridgeObjectRelease(v4);
    if ((v49 & 1) == 0)
    {
      v16 = (unsigned int *)&enum case for ActionOutcome.unsupported(_:);
      goto LABEL_12;
    }
  }
  v50 = *(_QWORD *)(v0 + 40);
  v51 = *(_QWORD *)(v0 + 48);
  sub_66898((_QWORD *)(v0 + 16), v50);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v51 + 104))(1, v50, v51);
LABEL_11:
  v16 = (unsigned int *)&enum case for ActionOutcome.performed(_:);
LABEL_12:
  v17 = *(_QWORD *)(v0 + 56);
  v18 = *v16;
  v19 = type metadata accessor for ActionOutcome(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v17, v18, v19);
  _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((_QWORD *)(v0 + 16));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_B4020()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 80));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_B4054(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v22;

  v4 = sub_5C154(&qword_329740);
  __chkstk_darwin(v4);
  v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Models.FlowBackAction(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  v10 = __chkstk_darwin(v7);
  v11 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v8 + 16))(v11, a1, v7, v10);
  v12 = *(unsigned __int8 *)(v8 + 80);
  v13 = (v12 + 16) & ~v12;
  v14 = (v9 + v13 + 7) & 0xFFFFFFFFFFFFFFF8;
  v15 = swift_allocObject(&unk_2EAED8, v14 + 8, v12 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(v15 + v13, v11, v7);
  *(_QWORD *)(v15 + v14) = a2;
  sub_5C154(&qword_3208F8);
  v16 = swift_retain(a2);
  v17 = Promise.__allocating_init()(v16);
  v18 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v6, 1, 1, v18);
  v19 = (_QWORD *)swift_allocObject(&unk_2EAF00, 56, 7);
  v19[2] = 0;
  v19[3] = 0;
  v19[4] = &unk_322400;
  v19[5] = v15;
  v19[6] = v17;
  swift_retain(v17);
  v20 = sub_174AF8((uint64_t)v6, (uint64_t)&unk_320900, (uint64_t)v19);
  swift_release(v20);
  return v17;
}

uint64_t sub_B41F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = type metadata accessor for Models.FlowBackAction(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release(*(_QWORD *)(v0 + v6));
  return swift_deallocObject(v0, v6 + 8, v5);
}

uint64_t sub_B4268(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(_QWORD *)(type metadata accessor for Models.FlowBackAction(0) - 8);
  v5 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  v6 = (_QWORD *)swift_task_alloc(dword_3223FC);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_64780;
  return sub_B3A4C(a1, v5);
}

uint64_t sub_B42F8()
{
  _QWORD *v0;

  swift_unknownObjectRelease(v0[2]);
  swift_release(v0[5]);
  swift_release(v0[6]);
  return swift_deallocObject(v0, 56, 7);
}

char *AutoSizingSheetHostingController.__allocating_init<A>(idealWidth:shouldShowCloseButton:objectGraph:parentTracker:trackerName:pageData:origin:shouldReportFigaro:rootView:)(uint64_t a1, char a2, char a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, __int128 a11, uint64_t a12, uint64_t a13)
{
  objc_class *v13;
  int v18;
  id v19;

  v18 = a2 & 1;
  v19 = objc_allocWithZone(v13);
  return AutoSizingSheetHostingController.init<A>(idealWidth:shouldShowCloseButton:objectGraph:parentTracker:trackerName:pageData:origin:shouldReportFigaro:rootView:)(a1, v18, a3, a4, a5, a6, a7, a8, a9, a10, a11, *((uint64_t *)&a11 + 1), a12, a13);
}

char *AutoSizingSheetHostingController.init<A>(idealWidth:shouldShowCloseButton:objectGraph:parentTracker:trackerName:pageData:origin:shouldReportFigaro:rootView:)(uint64_t a1, int a2, char a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unsigned __int8 a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  char *v14;
  char *v15;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  char *v28;
  id v29;
  char *v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  void (*v36)(char *, uint64_t);
  objc_class *v37;
  _BYTE *v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  Class v46;
  id v47;
  uint64_t v48;
  char *v49;
  char *v50;
  id v51;
  void *v52;
  double v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  Class isa;
  uint64_t v62;
  uint64_t v63;
  _QWORD v64[2];
  int v65;
  uint64_t v66;
  uint64_t v67;
  int v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t WitnessTable;
  uint64_t v77;
  uint64_t v78;
  void *v79;
  uint64_t v80;
  char v81;
  char v82;
  uint64_t v83;
  uint64_t v84;
  objc_super v85;

  v15 = v14;
  v73 = a4;
  v74 = a6;
  v69 = a14;
  v66 = a11;
  v65 = a10;
  v75 = a9;
  v22 = type metadata accessor for UIHostingControllerSizingOptions(0);
  __chkstk_darwin(v22);
  v24 = (char *)v64 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = sub_5C154(&qword_322410);
  __chkstk_darwin(v25);
  v70 = v24;
  v68 = a2;
  v67 = (uint64_t)v64 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a3 & 1) != 0)
  {
    v27 = (void *)objc_opt_self(UIButton);
    v28 = v15;
    v29 = objc_msgSend(v27, "buttonWithType:", 7);
  }
  else
  {
    v30 = v15;
    v29 = 0;
  }
  v31 = a5;
  v32 = v74;
  *(_QWORD *)&v15[qword_322418] = v29;
  v33 = BATracker.chain(with:)(v32, a7);
  swift_bridgeObjectRelease(a7);
  *(_QWORD *)&v15[qword_322420] = v33;
  v34 = &v15[qword_322428];
  v35 = type metadata accessor for PageData(0);
  v71 = *(_QWORD *)(v35 - 8);
  v72 = v35;
  v36 = *(void (**)(char *, uint64_t))(v71 + 16);
  v74 = a8;
  v36(v34, a8);

  v37 = (objc_class *)type metadata accessor for NavigationContext();
  v38 = objc_allocWithZone(v37);
  v38[OBJC_IVAR___BSUINavigationContext_isInCard] = 0;
  v38[OBJC_IVAR___BSUINavigationContext_isInModal] = 1;
  v85.receiver = v38;
  v85.super_class = v37;
  v39 = objc_msgSendSuper2(&v85, "init");
  v40 = v67;
  v41 = sub_6C1C4(v75, v67);
  v64[1] = v64;
  v80 = (uint64_t)v39;
  v81 = v65 & 1;
  v82 = 1;
  v83 = 0;
  v84 = 0;
  __chkstk_darwin(v41);
  v42 = v69;
  v64[-6] = a13;
  v64[-5] = v42;
  v64[-4] = a1;
  LOBYTE(v64[-3]) = v68 & 1;
  v62 = v66;
  v63 = a12;
  v43 = type metadata accessor for ModifiedContent(255, a13, &type metadata for _FlexFrameLayout);
  v44 = type metadata accessor for _ConditionalContent(0, v43, a13);
  v78 = v42;
  v79 = &protocol witness table for _FlexFrameLayout;
  v45 = v73;
  swift_retain(v73);
  v46 = v31;
  v47 = v39;
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v43);
  v77 = v42;
  v48 = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v44);
  v49 = sub_67DD4(v45, v46, v40, (uint64_t)&v80, (uint64_t)sub_B5AD0, (uint64_t)&v64[-8], 0, 0, v44, v48);
  v50 = v70;
  static UIHostingControllerSizingOptions.preferredContentSize.getter();
  dispatch thunk of UIHostingController.sizingOptions.setter(v50);
  v51 = objc_msgSend(v49, "sheetPresentationController");
  if (v51)
  {
    v52 = v51;
    v53 = static SizeConstants.CornerRadius.sheet.getter(objc_msgSend(v51, "setDelegate:", v49));
    UISheetPresentationController.preferredCornerRadius.setter(*(_QWORD *)&v53, 0);
    objc_msgSend(v52, "setPrefersPageSizing:", 0);
    v54 = sub_5C154(&qword_322430);
    v55 = swift_allocObject(v54, 40, 7);
    *(_OWORD *)(v55 + 16) = xmmword_25BE20;
    sub_5C194(0, &qword_322438, UISheetPresentationControllerDetent_ptr);
    v56 = swift_allocObject(&unk_2EAF50, 24, 7);
    swift_unknownObjectWeakInit(v56 + 16);
    swift_retain(v56);
    v57 = static UISheetPresentationControllerDetent.custom(identifier:resolver:)(0, sub_B5B48, v56);
    v58 = swift_release_n(v56, 2);
    *(_QWORD *)(v55 + 32) = v57;
    v80 = v55;
    specialized Array._endMutation()(v58);
    v59 = v80;
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v52, "setDetents:", isa, swift_bridgeObjectRelease(v59).n128_f64[0]);
    swift_release(v45);

    v46 = isa;
  }
  else
  {
    swift_release(v45);
  }

  swift_bridgeObjectRelease(0);
  sub_B5AE4(v75);
  (*(void (**)(uint64_t, uint64_t))(v71 + 8))(v74, v72);
  return v49;
}

uint64_t sub_B48A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, void (*a4)(uint64_t, __n128)@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  __n128 v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *, uint64_t);
  char *v33;
  uint64_t v34;
  uint64_t WitnessTable;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(uint64_t, __n128);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  uint64_t v51;
  void *v52;

  v41 = a5;
  v42 = a4;
  v37 = a2;
  v40 = a1;
  v44 = a8;
  v11 = type metadata accessor for ModifiedContent(0, a6, &type metadata for _FlexFrameLayout);
  v38 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v13 = (char *)&v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v39 = (uint64_t)&v37 - v15;
  v16 = *(_QWORD *)(a6 - 8);
  __chkstk_darwin(v17);
  v19 = (char *)&v37 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v22 = (char *)&v37 - v21;
  v23 = type metadata accessor for _ConditionalContent(0, v11, a6);
  v43 = *(_QWORD *)(v23 - 8);
  v24 = __chkstk_darwin(v23);
  v26 = (char *)&v37 - v25;
  if ((a3 & 1) != 0)
  {
    v42(v40, v24);
    sub_12D864((uint64_t)v19, a6, (uint64_t)v22);
    v32 = *(void (**)(char *, uint64_t))(v16 + 8);
    v32(v19, a6);
    sub_12AA38((uint64_t)v22, a6, (uint64_t)v19);
    v51 = a7;
    v52 = &protocol witness table for _FlexFrameLayout;
    WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v11);
    sub_12ABE0((uint64_t)v19, v11, a6, WitnessTable, a7);
    v32(v19, a6);
    v33 = v22;
    v34 = a6;
  }
  else
  {
    v27 = ((uint64_t (*)(uint64_t, __n128))v42)(v40, v24);
    v28 = static Alignment.center.getter(v27);
    View.frame(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(0, 1, v37, 0, 0, 1, 0, 1, 0, 1, 0, 1, v28, v29, a6, a7);
    (*(void (**)(char *, uint64_t))(v16 + 8))(v22, a6);
    v45 = a7;
    v46 = &protocol witness table for _FlexFrameLayout;
    v30 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v11);
    v31 = v39;
    sub_12D864((uint64_t)v13, v11, v39);
    v32 = *(void (**)(char *, uint64_t))(v38 + 8);
    v32(v13, v11);
    sub_12AA38(v31, v11, (uint64_t)v13);
    sub_12AB1C((uint64_t)v13, v11, a6, v30, a7);
    v32(v13, v11);
    v33 = (char *)v31;
    v34 = v11;
  }
  v32(v33, v34);
  v49 = a7;
  v50 = &protocol witness table for _FlexFrameLayout;
  v47 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v11);
  v48 = a7;
  swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v23);
  sub_12AA38((uint64_t)v26, v23, v44);
  return (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v26, v23);
}

double sub_B4C00(void *a1, uint64_t a2)
{
  uint64_t v3;
  void *Strong;
  void *v5;
  double v6;
  double v7;
  double result;
  objc_super v9;
  _BYTE v10[24];

  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v10, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = Strong;
    v9.receiver = Strong;
    v9.super_class = (Class)type metadata accessor for AutoSizingSheetHostingController(0);
    objc_msgSendSuper2(&v9, "preferredContentSize");
    v7 = v6;

  }
  else
  {
    v7 = INFINITY;
  }
  objc_msgSend(a1, "maximumDetentValue");
  if (result >= v7)
    return v7;
  return result;
}

id AutoSizingSheetHostingController.preferredContentSize.getter()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType(v0);
  return objc_msgSendSuper2(&v2, "preferredContentSize");
}

Swift::Void __swiftcall AutoSizingSheetHostingController.viewDidLoad()()
{
  char *v0;
  void *v1;
  id v2;
  objc_super v3;

  v3.receiver = v0;
  v3.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v3, "viewDidLoad");
  v1 = *(void **)&v0[qword_322418];
  if (v1)
  {
    v2 = v1;
    sub_B4D34(v2);

  }
}

void sub_B4D34(void *a1)
{
  void *v1;
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  id v8;
  void *v9;
  id v10;
  id v11;
  id v12;
  id v13;
  void *v14;
  void *v15;
  id v16;
  id v17;
  uint64_t v18;
  Class isa;

  v3 = objc_msgSend(v1, "view");
  if (!v3)
  {
    __break(1u);
    goto LABEL_6;
  }
  v4 = v3;
  objc_msgSend(v3, "addSubview:", a1);

  objc_msgSend(a1, "addTarget:action:forControlEvents:", v1, "closeButtonPressedWithSender:", 64);
  objc_msgSend(a1, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v5 = sub_5C154(&qword_322430);
  v6 = swift_allocObject(v5, 48, 7);
  *(_OWORD *)(v6 + 16) = xmmword_25BE30;
  v7 = objc_msgSend(a1, "topAnchor");
  v8 = objc_msgSend(v1, "view");
  if (!v8)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  v9 = v8;
  v10 = objc_msgSend(v8, "topAnchor");

  v11 = objc_msgSend(v7, "constraintEqualToAnchor:constant:", v10, 20.0);
  *(_QWORD *)(v6 + 32) = v11;
  v12 = objc_msgSend(a1, "trailingAnchor");
  v13 = objc_msgSend(v1, "view");
  if (v13)
  {
    v14 = v13;
    v15 = (void *)objc_opt_self(NSLayoutConstraint);
    v16 = objc_msgSend(v14, "trailingAnchor");

    v17 = objc_msgSend(v12, "constraintEqualToAnchor:constant:", v16, -20.0);
    *(_QWORD *)(v6 + 40) = v17;
    specialized Array._endMutation()(v18);
    sub_5C194(0, (unint64_t *)&unk_322530, NSLayoutConstraint_ptr);
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v15, "activateConstraints:", isa, swift_bridgeObjectRelease(v6).n128_f64[0]);

    return;
  }
LABEL_7:
  __break(1u);
}

void sub_B4F74(void *a1)
{
  char *v1;
  void *v2;
  char *v3;
  objc_super v4;

  v4.receiver = a1;
  v4.super_class = (Class)swift_getObjectType();
  v1 = (char *)v4.receiver;
  objc_msgSendSuper2(&v4, "viewDidLoad");
  v2 = *(void **)&v1[qword_322418];
  if (v2)
  {
    v3 = v2;
    sub_B4D34(v3);

    v1 = v3;
  }

}

uint64_t sub_B4FEC(__n128 a1)
{
  __n128 v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  __n128 v20;
  uint64_t v21;
  _BYTE *v22;
  _BYTE *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(uint64_t, _QWORD, uint64_t);
  uint64_t v36;
  _BYTE *v37;
  uint64_t v38;
  __n128 v39;
  uint64_t v40;
  uint64_t v41;
  _BYTE v43[12];
  unsigned int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  _BYTE *v50;
  _BYTE *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  __int128 v55;
  uint64_t v56;
  uint64_t v57;

  *(_QWORD *)&v55 = type metadata accessor for LinkActionType(0, a1);
  v49 = *(_QWORD *)(v55 - 8);
  v1 = __chkstk_darwin(v55);
  v3 = &v43[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = type metadata accessor for ClickData.TargetType(0, v1);
  v47 = *(_QWORD *)(v4 - 8);
  v48 = v4;
  __chkstk_darwin(v4);
  v6 = &v43[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = type metadata accessor for ClickData(0);
  v8 = *(_QWORD *)(v7 - 8);
  v53 = v7;
  v54 = v8;
  v9 = __chkstk_darwin(v7);
  v51 = &v43[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = type metadata accessor for SectionData.ComponentContained(0, v9);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = __chkstk_darwin(v11);
  v15 = &v43[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v16 = type metadata accessor for SectionType(0, v13);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = &v43[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v57 = type metadata accessor for SectionData(0);
  v52 = *(_QWORD *)(v57 - 8);
  v20 = __chkstk_darwin(v57);
  v22 = &v43[-((v21 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(_BYTE *, _QWORD, uint64_t, __n128))(v17 + 104))(v19, enum case for SectionType.unknown(_:), v16, v20);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v12 + 104))(v15, enum case for SectionData.ComponentContained.sheet(_:), v11);
  v23 = v22;
  v50 = v22;
  SectionData.init(sectionID:name:sectionType:componentContained:exposureIndex:)(0, 0xE000000000000000, 0, 0xE000000000000000, v19, v15, 0);
  (*(void (**)(_BYTE *, _QWORD, unint64_t))(v47 + 104))(v6, enum case for ClickData.TargetType.dismiss(_:), v48);
  (*(void (**)(_BYTE *, _QWORD, _QWORD))(v49 + 104))(v3, enum case for LinkActionType.click(_:), v55);
  ClickData.init(with:linkActionType:index:url:)(v6, v3, 0, 0, 0);
  v49 = *(_QWORD *)(v56 + qword_322420);
  v24 = sub_5C154((uint64_t *)&unk_3224F0);
  v25 = type metadata accessor for DataEventTrait(0);
  v26 = *(_QWORD *)(v25 - 8);
  v27 = *(unsigned __int8 *)(v26 + 80);
  v28 = (v27 + 32) & ~v27;
  v29 = v28 + *(_QWORD *)(v26 + 72);
  v30 = v27 | 7;
  v45 = v29;
  v46 = v24;
  v31 = swift_allocObject(v24, v29, v27 | 7);
  v55 = xmmword_258070;
  *(_OWORD *)(v31 + 16) = xmmword_258070;
  v32 = enum case for DataEventTrait.onlyOnce(_:);
  v47 = *(_QWORD *)(v26 + 104);
  v44 = enum case for DataEventTrait.onlyOnce(_:);
  ((void (*)(uint64_t, _QWORD, uint64_t))v47)(v31 + v28, enum case for DataEventTrait.onlyOnce(_:), v25);
  sub_648E0((unint64_t *)&unk_326220, (uint64_t (*)(uint64_t))&type metadata accessor for SectionData, (uint64_t)&protocol conformance descriptor for SectionData);
  sub_648E0((unint64_t *)&unk_322500, (uint64_t (*)(uint64_t))&type metadata accessor for SectionData, (uint64_t)&protocol conformance descriptor for SectionData);
  v48 = 0x80000000002705C0;
  BATracker.push<A>(data:traits:file:line:)(v23, v31, 0xD00000000000007ELL);
  swift_bridgeObjectRelease(v31);
  v33 = v56 + qword_322428;
  v34 = swift_allocObject(v24, v29, v30);
  *(_OWORD *)(v34 + 16) = v55;
  v35 = (void (*)(uint64_t, _QWORD, uint64_t))v47;
  ((void (*)(uint64_t, uint64_t, uint64_t))v47)(v34 + v28, v32, v25);
  type metadata accessor for PageData(0);
  sub_648E0((unint64_t *)&unk_326230, (uint64_t (*)(uint64_t))&type metadata accessor for PageData, (uint64_t)&protocol conformance descriptor for PageData);
  sub_648E0((unint64_t *)&unk_322510, (uint64_t (*)(uint64_t))&type metadata accessor for PageData, (uint64_t)&protocol conformance descriptor for PageData);
  BATracker.push<A>(data:traits:file:line:)(v33, v34, 0xD00000000000007ELL);
  swift_bridgeObjectRelease(v34);
  v36 = swift_allocObject(v46, v45, v30);
  *(_OWORD *)(v36 + 16) = v55;
  v35(v36 + v28, v44, v25);
  sub_648E0((unint64_t *)&unk_326240, (uint64_t (*)(uint64_t))&type metadata accessor for ClickData, (uint64_t)&protocol conformance descriptor for ClickData);
  sub_648E0((unint64_t *)&unk_322520, (uint64_t (*)(uint64_t))&type metadata accessor for ClickData, (uint64_t)&protocol conformance descriptor for ClickData);
  v37 = v51;
  v38 = v53;
  BATracker.push<A>(data:traits:file:line:)(v51, v36, 0xD00000000000007ELL);
  v39 = swift_bridgeObjectRelease(v36);
  v40 = type metadata accessor for ClickEvent(0, v39);
  v41 = sub_648E0(&qword_326260, (uint64_t (*)(uint64_t))&type metadata accessor for ClickEvent, (uint64_t)&protocol conformance descriptor for ClickEvent);
  BATracker.submit<A>(_:completion:)(v40, 0, 0, v40, v41);
  (*(void (**)(_BYTE *, uint64_t))(v54 + 8))(v37, v38);
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v52 + 8))(v50, v57);
}

void sub_B5524(void *a1, uint64_t a2, void *a3)
{
  id v4;
  __n128 v5;
  id v6;
  id v7;
  id v8;

  v4 = a3;
  v8 = a1;
  sub_B4FEC(v5);
  v6 = objc_msgSend(v8, "presentingViewController");
  if (v6)
  {
    v7 = v6;
    objc_msgSend(v6, "dismissViewControllerAnimated:completion:", 1, 0);

    v4 = v8;
    v8 = v7;
  }

}

void sub_B55A8()
{
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x800000000026EFD0, "BookStoreUI/AutoSizingSheetHostingController.swift", 50, 2, 115, 0);
  __break(1u);
}

id sub_B5600(void *a1)
{
  objc_super v2;

  v2.receiver = a1;
  v2.super_class = (Class)swift_getObjectType(a1);
  return objc_msgSendSuper2(&v2, "preferredContentSize");
}

void sub_B563C(void *a1, double a2, double a3)
{
  id v5;
  objc_super v6;

  v6.receiver = a1;
  v6.super_class = (Class)swift_getObjectType();
  v5 = v6.receiver;
  objc_msgSendSuper2(&v6, "setPreferredContentSize:", a2, a3);
  sub_B56F8();

}

id AutoSizingSheetHostingController.preferredContentSize.setter(double a1, double a2)
{
  void *v2;
  objc_super v6;

  v6.receiver = v2;
  v6.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v6, "setPreferredContentSize:", a1, a2);
  return sub_B56F8();
}

id sub_B56F8()
{
  void *v0;
  id result;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  id v7;
  _QWORD v8[5];
  uint64_t v9;

  result = objc_msgSend(v0, "sheetPresentationController");
  if (result)
  {
    v2 = result;
    v3 = swift_allocObject(&unk_2EAF90, 24, 7);
    *(_QWORD *)(v3 + 16) = v2;
    v4 = swift_allocObject(&unk_2EAFB8, 32, 7);
    *(_QWORD *)(v4 + 16) = sub_B5C90;
    *(_QWORD *)(v4 + 24) = v3;
    v8[4] = sub_B5CB0;
    v9 = v4;
    v8[0] = _NSConcreteStackBlock;
    v8[1] = 1107296256;
    v8[2] = sub_B5844;
    v8[3] = &unk_2EAFD0;
    v5 = _Block_copy(v8);
    v6 = v9;
    v7 = v2;
    swift_retain(v4);
    swift_release(v6);
    objc_msgSend(v7, "animateChanges:", v5);

    _Block_release(v5);
    LOBYTE(v7) = swift_isEscapingClosureAtFileLocation(v4, "", 126, 121, 32, 1);
    swift_release(v3);
    result = (id)swift_release(v4);
    if ((v7 & 1) != 0)
      __break(1u);
  }
  return result;
}

uint64_t sub_B5844(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 32))();
}

void (*AutoSizingSheetHostingController.preferredContentSize.modify(objc_super **a1))(double **a1, char a2)
{
  void *v1;
  objc_super *v3;
  uint64_t ObjectType;
  void *v5;
  objc_class *v6;

  v3 = (objc_super *)malloc(0x50uLL);
  *a1 = v3;
  v3[4].receiver = v1;
  ObjectType = swift_getObjectType();
  v3[4].super_class = (Class)ObjectType;
  v3[1].receiver = v1;
  v3[1].super_class = (Class)ObjectType;
  objc_msgSendSuper2(v3 + 1, "preferredContentSize");
  v3->receiver = v5;
  v3->super_class = v6;
  return sub_B58D4;
}

void sub_B58D4(double **a1, char a2)
{
  double *v2;
  double v3;
  double v4;
  objc_class *v5;
  void *v6;
  objc_super *v7;

  v2 = *a1;
  v3 = **a1;
  v4 = (*a1)[1];
  v6 = (void *)*((_QWORD *)*a1 + 8);
  v5 = (objc_class *)*((_QWORD *)*a1 + 9);
  v7 = (objc_super *)*a1;
  if ((a2 & 1) != 0)
  {
    v7[2].receiver = v6;
    v7[2].super_class = v5;
    objc_msgSendSuper2(v7 + 2, "setPreferredContentSize:", v3, v4);
  }
  else
  {
    v7[3].receiver = v6;
    v7[3].super_class = v5;
    objc_msgSendSuper2(v7 + 3, "setPreferredContentSize:", v3, v4);
    sub_B56F8();
  }
  free(v2);
}

uint64_t sub_B592C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + qword_322428;
  v2 = type metadata accessor for PageData(0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
}

uint64_t sub_B5988(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1 + qword_322428;
  v3 = type metadata accessor for PageData(0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
}

id AutoSizingSheetHostingController.presentationController(_:willPresentWithAdaptiveStyle:transitionCoordinator:)()
{
  void *v0;
  objc_class *ObjectType;
  objc_super v3;

  ObjectType = (objc_class *)swift_getObjectType();
  dispatch thunk of UIHostingController.sizeThatFits(in:)(INFINITY, INFINITY);
  v3.receiver = v0;
  v3.super_class = ObjectType;
  objc_msgSendSuper2(&v3, "setPreferredContentSize:");
  return sub_B56F8();
}

void sub_B5A3C(void *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  objc_class *ObjectType;
  id v9;
  id v10;
  objc_super v11;

  ObjectType = (objc_class *)swift_getObjectType();
  v9 = a3;
  swift_unknownObjectRetain(a5);
  v10 = a1;
  dispatch thunk of UIHostingController.sizeThatFits(in:)(INFINITY, INFINITY);
  v11.receiver = v10;
  v11.super_class = ObjectType;
  objc_msgSendSuper2(&v11, "setPreferredContentSize:");
  sub_B56F8();

  swift_unknownObjectRelease(a5);
}

uint64_t sub_B5AD0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_B48A8(a1, *(_QWORD *)(v2 + 32), *(_BYTE *)(v2 + 40), *(void (**)(uint64_t, __n128))(v2 + 48), *(_QWORD *)(v2 + 56), *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), a2);
}

uint64_t sub_B5AE4(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_5C154(&qword_322410);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_B5B24()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

double sub_B5B48(void *a1)
{
  uint64_t v1;

  return sub_B4C00(a1, v1);
}

uint64_t type metadata accessor for AutoSizingSheetHostingController(uint64_t a1)
{
  uint64_t result;

  result = qword_322440;
  if (!qword_322440)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for AutoSizingSheetHostingController);
  return result;
}

uint64_t sub_B5B8C(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  unint64_t v4;
  _QWORD v5[3];

  v2 = class metadata base offset for AutoSizingSheetHostingController;
  v5[0] = "\b";
  v5[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
  result = type metadata accessor for PageData(319);
  if (v4 <= 0x3F)
  {
    v5[2] = *(_QWORD *)(result - 8) + 64;
    result = swift_initClassMetadata2(a1, 0, 3, v5, a1 + v2);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for AutoSizingSheetHostingController(uint64_t a1, uint64_t a2)
{
  return swift_lookUpClassMethod(a1, a2, &nominal type descriptor for AutoSizingSheetHostingController);
}

uint64_t dispatch thunk of AutoSizingSheetHostingController.__allocating_init<A>(idealWidth:shouldShowCloseButton:objectGraph:parentTracker:trackerName:pageData:origin:shouldReportFigaro:rootView:)(uint64_t a1, char a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, _QWORD))(class metadata base offset for AutoSizingSheetHostingController
                                                    + v2
                                                    + 24))(a1, a2 & 1);
}

uint64_t sub_B5C64()
{
  return type metadata accessor for AutoSizingSheetHostingController(0);
}

uint64_t sub_B5C6C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

id sub_B5C90()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), "invalidateDetents");
}

uint64_t sub_B5CA0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_B5CB0()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_B5CD0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_B5CE0(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_B5CE8(Swift::String string)
{
  void *object;
  Swift::String v2;
  Swift::Int v3;
  unsigned int v4;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_2E6C90, v2);
  swift_bridgeObjectRelease(object);
  if (v3 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (v3)
    return v4;
  else
    return 0;
}

uint64_t sub_B5D38(char a1)
{
  if ((a1 & 1) != 0)
    return 0x666572487478656ELL;
  else
    return 0x656372756F736572;
}

uint64_t sub_B5D74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable;

  WitnessTable = swift_getWitnessTable(&unk_25BF38, a3);
  return == infix<A>(_:_:)(a1, a2, a3, WitnessTable, &protocol witness table for String);
}

uint64_t sub_B5DC8(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable;

  WitnessTable = swift_getWitnessTable(&unk_25BF38, a1);
  return RawRepresentable<>.hashValue.getter(a1, a2, WitnessTable, &protocol witness table for String);
}

uint64_t sub_B5E14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable;

  WitnessTable = swift_getWitnessTable(&unk_25BF38, a2);
  return RawRepresentable<>.hash(into:)(a1, a2, a3, WitnessTable, &protocol witness table for String);
}

uint64_t sub_B5E64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable;

  WitnessTable = swift_getWitnessTable(&unk_25BF38, a2);
  return RawRepresentable<>._rawHashValue(seed:)(a1, a2, a3, WitnessTable, &protocol witness table for String);
}

uint64_t sub_B5EB4@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  void *v3;
  uint64_t result;
  Swift::String v5;

  v3 = (void *)a1[1];
  v5._countAndFlagsBits = *a1;
  v5._object = v3;
  result = sub_B5CE8(v5);
  *a2 = result;
  return result;
}

uint64_t sub_B5EE8@<X0>(uint64_t *a1@<X8>)
{
  char *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_B5D38(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_B5F18()
{
  char *v0;

  return sub_B5D38(*v0);
}

uint64_t sub_B5F28@<X0>(Swift::String a1@<X1:X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = sub_B5CE8(a1);
  *a2 = result;
  return result;
}

uint64_t sub_B5F50@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = SwiftUICoverAnimationProvider.coverAnimationSourceAlignment()();
  *a1 = result;
  return result;
}

uint64_t sub_B5F78(uint64_t a1)
{
  uint64_t WitnessTable;

  WitnessTable = swift_getWitnessTable(&unk_25BFD8, a1);
  return CodingKey.description.getter(a1, WitnessTable);
}

uint64_t sub_B5FAC(uint64_t a1)
{
  uint64_t WitnessTable;

  WitnessTable = swift_getWitnessTable(&unk_25BFD8, a1);
  return CodingKey.debugDescription.getter(a1, WitnessTable);
}

uint64_t PaginatedResourceSet.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t WitnessTable;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  _QWORD v23[2];
  uint64_t v24;
  char v25;
  char v26;
  uint64_t v27;

  v23[1] = a5;
  v8 = _s10CodingKeysOMa(255, a2, a3, a4);
  WitnessTable = swift_getWitnessTable(&unk_25BFD8, v8);
  v24 = type metadata accessor for KeyedDecodingContainer(0, v8, WitnessTable);
  v10 = *(_QWORD *)(v24 - 8);
  __chkstk_darwin(v24);
  v12 = (char *)v23 - v11;
  v14 = a1[3];
  v13 = a1[4];
  sub_66898(a1, v14);
  dispatch thunk of Decoder.container<A>(keyedBy:)(v8, v8, WitnessTable, v14, v13);
  if (!v5)
  {
    v15 = v10;
    v16 = type metadata accessor for _MResourceDecoder_Many(0, a2);
    v26 = 0;
    v17 = swift_getWitnessTable(&protocol conformance descriptor for _MResourceDecoder_Many<A>, v16);
    v18 = v24;
    KeyedDecodingContainer.decode<A>(_:forKey:)(&v27, v16, &v26, v24, v16, v17);
    v19 = v27;
    v25 = 1;
    v20 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)(&v25, v18);
    PaginatedResourceSet.init(resources:nextHref:)(v19, v20, v22, a2);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v12, v18);
  }
  return _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(a1);
}

uint64_t _s10CodingKeysOMa(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_5DD60(a1, a2, a3, a4, (uint64_t)&_s10CodingKeysOMn);
}

uint64_t sub_B61B8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  return PaginatedResourceSet.init(from:)(a1, *(_QWORD *)(a2 + 16), a3, a4, a5);
}

uint64_t sub_B61D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_allocateGenericValueMetadata(a1, a2, a3, 8);
}

uint64_t sub_B61D8(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_B6224 + 4 * byte_25BE95[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_B6258 + 4 * byte_25BE90[v4]))();
}

uint64_t sub_B6258(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_B6260(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0xB6268);
  return result;
}

uint64_t sub_B6274(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0xB627CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_B6280(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_B6288(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_B6294(uint64_t a1)
{
  return swift_getWitnessTable(&unk_25BFB0, a1);
}

uint64_t sub_B62A4(uint64_t a1)
{
  return swift_getWitnessTable(&unk_25BEE8, a1);
}

uint64_t sub_B62B4(uint64_t a1)
{
  return swift_getWitnessTable(&unk_25BF10, a1);
}

uint64_t SwiftUICoverAnimationProvider.coverAnimationSourceAlignment()()
{
  return 2;
}

uint64_t sub_B62CC(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4;
  int v5;
  __int128 v7;
  _OWORD *v8;
  _OWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  void *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __int128 v36;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *(_QWORD *)v4 = *a2;
    v4 = v12 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain(v12);
  }
  else
  {
    v7 = *(_OWORD *)(a2 + 3);
    *(_OWORD *)(a1 + 24) = v7;
    (**(void (***)(uint64_t, uint64_t *))(v7 - 8))(a1, a2);
    v8 = (_OWORD *)(v4 + 40);
    v9 = a2 + 5;
    v10 = a2[8];
    if (v10)
    {
      v11 = a2[9];
      *(_QWORD *)(v4 + 64) = v10;
      *(_QWORD *)(v4 + 72) = v11;
      (**(void (***)(_OWORD *, _OWORD *))(v10 - 8))(v8, v9);
    }
    else
    {
      v13 = *(_OWORD *)(a2 + 7);
      *v8 = *v9;
      *(_OWORD *)(v4 + 56) = v13;
      *(_QWORD *)(v4 + 72) = a2[9];
    }
    v14 = a3[6];
    v15 = (void *)(v4 + v14);
    v16 = (char *)a2 + v14;
    v17 = type metadata accessor for ImpressionMetrics(0);
    v18 = *(_QWORD *)(v17 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
    {
      v19 = sub_5C154(&qword_31F480);
      memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v18 + 16))(v15, v16, v17);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
    }
    v20 = a3[7];
    v21 = a3[8];
    v22 = (_QWORD *)(v4 + v20);
    v23 = (uint64_t *)((char *)a2 + v20);
    v24 = v23[1];
    *v22 = *v23;
    v22[1] = v24;
    v25 = (_QWORD *)(v4 + v21);
    v26 = (uint64_t *)((char *)a2 + v21);
    v27 = *v26;
    v28 = v26[1];
    v29 = a3[9];
    v30 = a3[10];
    v31 = *((_BYTE *)a2 + v29);
    *v25 = v27;
    v25[1] = v28;
    *(_BYTE *)(v4 + v29) = v31;
    v32 = v4 + v30;
    v33 = (uint64_t)a2 + v30;
    v34 = *(uint64_t *)((char *)a2 + v30 + 8);
    swift_bridgeObjectRetain(v24);
    swift_bridgeObjectRetain(v28);
    if (v34)
    {
      *(_QWORD *)v32 = *(_QWORD *)v33;
      *(_QWORD *)(v32 + 8) = v34;
      *(_OWORD *)(v32 + 16) = *(_OWORD *)(v33 + 16);
      v35 = *(_QWORD *)(v33 + 32);
      *(_QWORD *)(v32 + 32) = v35;
      swift_bridgeObjectRetain(v34);
      swift_bridgeObjectRetain(v35);
    }
    else
    {
      v36 = *(_OWORD *)(v33 + 16);
      *(_OWORD *)v32 = *(_OWORD *)v33;
      *(_OWORD *)(v32 + 16) = v36;
      *(_QWORD *)(v32 + 32) = *(_QWORD *)(v33 + 32);
    }
  }
  return v4;
}

double sub_B649C(_QWORD *a1, int *a2)
{
  char *v4;
  uint64_t v5;
  uint64_t v6;
  double result;
  char *v8;
  uint64_t v9;

  _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(a1);
  if (a1[8])
    _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(a1 + 5);
  v4 = (char *)a1 + a2[6];
  v5 = type metadata accessor for ImpressionMetrics(0);
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
    (*(void (**)(char *, uint64_t))(v6 + 8))(v4, v5);
  swift_bridgeObjectRelease(*(_QWORD *)((char *)a1 + a2[7] + 8));
  *(_QWORD *)&result = swift_bridgeObjectRelease(*(_QWORD *)((char *)a1 + a2[8] + 8)).n128_u64[0];
  v8 = (char *)a1 + a2[10];
  v9 = *((_QWORD *)v8 + 1);
  if (v9)
  {
    swift_bridgeObjectRelease(v9);
    *(_QWORD *)&result = swift_bridgeObjectRelease(*((_QWORD *)v8 + 4)).n128_u64[0];
  }
  return result;
}

uint64_t sub_B656C(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  _OWORD *v7;
  _OWORD *v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  void *v13;
  const void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;

  v6 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v6;
  (**(void (***)(void))(v6 - 8))();
  v7 = (_OWORD *)(a1 + 40);
  v8 = (_OWORD *)(a2 + 40);
  v9 = *(_QWORD *)(a2 + 64);
  if (v9)
  {
    v10 = *(_QWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 64) = v9;
    *(_QWORD *)(a1 + 72) = v10;
    (**(void (***)(_OWORD *, _OWORD *))(v9 - 8))(v7, v8);
  }
  else
  {
    v11 = *(_OWORD *)(a2 + 56);
    *v7 = *v8;
    *(_OWORD *)(a1 + 56) = v11;
    *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  }
  v12 = a3[6];
  v13 = (void *)(a1 + v12);
  v14 = (const void *)(a2 + v12);
  v15 = type metadata accessor for ImpressionMetrics(0);
  v16 = *(_QWORD *)(v15 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
  {
    v17 = sub_5C154(&qword_31F480);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v16 + 16))(v13, v14, v15);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  v18 = a3[7];
  v19 = a3[8];
  v20 = (_QWORD *)(a1 + v18);
  v21 = (_QWORD *)(a2 + v18);
  v22 = v21[1];
  *v20 = *v21;
  v20[1] = v22;
  v23 = (_QWORD *)(a1 + v19);
  v24 = (uint64_t *)(a2 + v19);
  v25 = *v24;
  v26 = v24[1];
  v27 = a3[9];
  v28 = a3[10];
  v29 = *(_BYTE *)(a2 + v27);
  *v23 = v25;
  v23[1] = v26;
  *(_BYTE *)(a1 + v27) = v29;
  v30 = a1 + v28;
  v31 = a2 + v28;
  v32 = *(_QWORD *)(a2 + v28 + 8);
  swift_bridgeObjectRetain(v22);
  swift_bridgeObjectRetain(v26);
  if (v32)
  {
    *(_QWORD *)v30 = *(_QWORD *)v31;
    *(_QWORD *)(v30 + 8) = v32;
    *(_OWORD *)(v30 + 16) = *(_OWORD *)(v31 + 16);
    v33 = *(_QWORD *)(v31 + 32);
    *(_QWORD *)(v30 + 32) = v33;
    swift_bridgeObjectRetain(v32);
    swift_bridgeObjectRetain(v33);
  }
  else
  {
    v34 = *(_OWORD *)(v31 + 16);
    *(_OWORD *)v30 = *(_OWORD *)v31;
    *(_OWORD *)(v30 + 16) = v34;
    *(_QWORD *)(v30 + 32) = *(_QWORD *)(v31 + 32);
  }
  return a1;
}

uint64_t sub_B6708(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  void *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(void *, uint64_t, uint64_t);
  int v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;

  sub_65938((_QWORD *)a1, (_QWORD *)a2);
  v6 = *(_QWORD *)(a2 + 64);
  if (*(_QWORD *)(a1 + 64))
  {
    if (v6)
    {
      sub_65938((_QWORD *)(a1 + 40), (_QWORD *)(a2 + 40));
      goto LABEL_8;
    }
    _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((_QWORD *)(a1 + 40));
  }
  else if (v6)
  {
    *(_QWORD *)(a1 + 64) = v6;
    *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
    (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1 + 40, a2 + 40);
    goto LABEL_8;
  }
  v7 = *(_OWORD *)(a2 + 40);
  v8 = *(_OWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 40) = v7;
  *(_OWORD *)(a1 + 56) = v8;
LABEL_8:
  v9 = a3[6];
  v10 = (void *)(a1 + v9);
  v11 = (void *)(a2 + v9);
  v12 = type metadata accessor for ImpressionMetrics(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v13 + 48);
  v15 = v14(v10, 1, v12);
  v16 = v14(v11, 1, v12);
  if (v15)
  {
    if (!v16)
    {
      (*(void (**)(void *, void *, uint64_t))(v13 + 16))(v10, v11, v12);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      goto LABEL_14;
    }
    goto LABEL_13;
  }
  if (v16)
  {
    (*(void (**)(void *, uint64_t))(v13 + 8))(v10, v12);
LABEL_13:
    v17 = sub_5C154(&qword_31F480);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_14;
  }
  (*(void (**)(void *, void *, uint64_t))(v13 + 24))(v10, v11, v12);
LABEL_14:
  v18 = a3[7];
  v19 = (_QWORD *)(a1 + v18);
  v20 = (_QWORD *)(a2 + v18);
  *v19 = *v20;
  v21 = v20[1];
  v22 = v19[1];
  v19[1] = v21;
  swift_bridgeObjectRetain(v21);
  swift_bridgeObjectRelease(v22);
  v23 = a3[8];
  v24 = (_QWORD *)(a1 + v23);
  v25 = (_QWORD *)(a2 + v23);
  *v24 = *v25;
  v26 = v25[1];
  v27 = v24[1];
  v24[1] = v26;
  swift_bridgeObjectRetain(v26);
  swift_bridgeObjectRelease(v27);
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  v28 = a3[10];
  v29 = (_QWORD *)(a1 + v28);
  v30 = (_QWORD *)(a2 + v28);
  v31 = *(_QWORD *)(a1 + v28 + 8);
  v32 = v30[1];
  if (v31)
  {
    if (v32)
    {
      *v29 = *v30;
      v33 = v30[1];
      v29[1] = v33;
      swift_bridgeObjectRetain(v33);
      swift_bridgeObjectRelease(v31);
      v29[2] = v30[2];
      v29[3] = v30[3];
      v34 = v30[4];
      v35 = v29[4];
      v29[4] = v34;
      swift_bridgeObjectRetain(v34);
      swift_bridgeObjectRelease(v35);
    }
    else
    {
      sub_984B0((uint64_t)v29);
      v38 = v30[4];
      v39 = *((_OWORD *)v30 + 1);
      *(_OWORD *)v29 = *(_OWORD *)v30;
      *((_OWORD *)v29 + 1) = v39;
      v29[4] = v38;
    }
  }
  else if (v32)
  {
    *v29 = *v30;
    v36 = v30[1];
    v29[1] = v36;
    v29[2] = v30[2];
    v29[3] = v30[3];
    v37 = v30[4];
    v29[4] = v37;
    swift_bridgeObjectRetain(v36);
    swift_bridgeObjectRetain(v37);
  }
  else
  {
    v40 = *(_OWORD *)v30;
    v41 = *((_OWORD *)v30 + 1);
    v29[4] = v30[4];
    *(_OWORD *)v29 = v40;
    *((_OWORD *)v29 + 1) = v41;
  }
  return a1;
}

uint64_t sub_B69B4(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  void *v9;
  const void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  v7 = *(_OWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  v8 = a3[6];
  v9 = (void *)(a1 + v8);
  v10 = (const void *)(a2 + v8);
  *(_OWORD *)(a1 + 56) = v7;
  v11 = type metadata accessor for ImpressionMetrics(0);
  v12 = *(_QWORD *)(v11 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
  {
    v13 = sub_5C154(&qword_31F480);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v12 + 32))(v9, v10, v11);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  v14 = a3[8];
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  *(_OWORD *)(a1 + v14) = *(_OWORD *)(a2 + v14);
  v15 = a3[10];
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  v16 = a1 + v15;
  v17 = a2 + v15;
  v18 = *(_OWORD *)(v17 + 16);
  *(_OWORD *)v16 = *(_OWORD *)v17;
  *(_OWORD *)(v16 + 16) = v18;
  *(_QWORD *)(v16 + 32) = *(_QWORD *)(v17 + 32);
  return a1;
}

uint64_t sub_B6AD8(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  void *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(void *, uint64_t, uint64_t);
  int v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __int128 v36;

  _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((_QWORD *)a1);
  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  if (*(_QWORD *)(a1 + 64))
    _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0((_QWORD *)(a1 + 40));
  v7 = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = v7;
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  v8 = a3[6];
  v9 = (void *)(a1 + v8);
  v10 = (void *)(a2 + v8);
  v11 = type metadata accessor for ImpressionMetrics(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v12 + 48);
  v14 = v13(v9, 1, v11);
  v15 = v13(v10, 1, v11);
  if (v14)
  {
    if (!v15)
    {
      (*(void (**)(void *, void *, uint64_t))(v12 + 32))(v9, v10, v11);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
      goto LABEL_9;
    }
    goto LABEL_8;
  }
  if (v15)
  {
    (*(void (**)(void *, uint64_t))(v12 + 8))(v9, v11);
LABEL_8:
    v16 = sub_5C154(&qword_31F480);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    goto LABEL_9;
  }
  (*(void (**)(void *, void *, uint64_t))(v12 + 40))(v9, v10, v11);
LABEL_9:
  v17 = a3[7];
  v18 = (_QWORD *)(a1 + v17);
  v19 = (uint64_t *)(a2 + v17);
  v21 = *v19;
  v20 = v19[1];
  v22 = v18[1];
  *v18 = v21;
  v18[1] = v20;
  swift_bridgeObjectRelease(v22);
  v23 = a3[8];
  v24 = (_QWORD *)(a1 + v23);
  v25 = (uint64_t *)(a2 + v23);
  v27 = *v25;
  v26 = v25[1];
  v28 = v24[1];
  *v24 = v27;
  v24[1] = v26;
  swift_bridgeObjectRelease(v28);
  v29 = a3[10];
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  v30 = a1 + v29;
  v31 = a2 + v29;
  v32 = *(_QWORD *)(a1 + v29 + 8);
  if (!v32)
  {
LABEL_13:
    v36 = *(_OWORD *)(v31 + 16);
    *(_OWORD *)v30 = *(_OWORD *)v31;
    *(_OWORD *)(v30 + 16) = v36;
    *(_QWORD *)(v30 + 32) = *(_QWORD *)(v31 + 32);
    return a1;
  }
  v33 = *(_QWORD *)(v31 + 8);
  if (!v33)
  {
    sub_984B0(a1 + v29);
    goto LABEL_13;
  }
  *(_QWORD *)v30 = *(_QWORD *)v31;
  *(_QWORD *)(v30 + 8) = v33;
  swift_bridgeObjectRelease(v32);
  *(_QWORD *)(v30 + 16) = *(_QWORD *)(v31 + 16);
  v34 = *(_QWORD *)(v31 + 32);
  v35 = *(_QWORD *)(v30 + 32);
  *(_QWORD *)(v30 + 24) = *(_QWORD *)(v31 + 24);
  *(_QWORD *)(v30 + 32) = v34;
  swift_bridgeObjectRelease(v35);
  return a1;
}

uint64_t sub_B6CC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_B6CCC);
}

uint64_t sub_B6CCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_5C154(&qword_31F480);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v8);
  }
}

uint64_t sub_B6D4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_B6D58);
}

uint64_t sub_B6D58(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 24) = (a2 - 1);
  }
  else
  {
    v7 = sub_5C154(&qword_31F480);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for DescriptionHeaderComponentModel(uint64_t a1)
{
  uint64_t result;

  result = qword_322678;
  if (!qword_322678)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for DescriptionHeaderComponentModel);
  return result;
}

void sub_B6E0C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[7];

  v4[0] = "(";
  v4[1] = &unk_25C088;
  sub_AE8F0(319);
  if (v3 <= 0x3F)
  {
    v4[2] = *(_QWORD *)(v2 - 8) + 64;
    v4[3] = &unk_25C0A0;
    v4[4] = &unk_25C0B8;
    v4[5] = &unk_25C0D0;
    v4[6] = &unk_25C088;
    swift_initStructMetadata(a1, 256, 7, v4, a1 + 16);
  }
}

unint64_t sub_B6EA8(char a1)
{
  unint64_t result;

  result = 0xD000000000000010;
  if (a1)
  {
    if (a1 == 1)
      return 0xD000000000000016;
    else
      return 0xD000000000000014;
  }
  return result;
}

uint64_t sub_B6F08(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_196984(*a1, *a2);
}

Swift::Int sub_B6F14()
{
  char *v0;

  return sub_203720(*v0);
}

uint64_t sub_B6F1C(uint64_t a1)
{
  char *v1;

  return sub_203868(a1, *v1);
}

Swift::Int sub_B6F24(uint64_t a1)
{
  char *v1;

  return sub_203984(a1, *v1);
}

unint64_t sub_B6F2C@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_B7ACC(*a1);
  *a2 = result;
  return result;
}

unint64_t sub_B6F58@<X0>(unint64_t *a1@<X8>)
{
  char *v1;
  unint64_t result;
  unint64_t v4;

  result = sub_B6EA8(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_B6F80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_B7DF8();
  return RawRepresentable<>.init(from:)(a1, a2, a3, v6);
}

uint64_t sub_B6FDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_B7DF8();
  return RawRepresentable<>.encode(to:)(a1, a2, a3, v6);
}

uint64_t sub_B7028(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_B7050 + 4 * byte_25C030[a1]))(25705, 0xE200000000000000);
}

uint64_t sub_B7050()
{
  return 0x6575676573;
}

unint64_t sub_B7064()
{
  return 0xD000000000000011;
}

uint64_t sub_B7080()
{
  return 0x656C746974;
}

uint64_t sub_B7094()
{
  return 0x656C746974627573;
}

uint64_t sub_B70AC()
{
  return 0x7954726564616568;
}

uint64_t sub_B70C8()
{
  return 0x6E69546567616D69;
}

void sub_B70EC(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  uint64_t v11;
  char *v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  char *v35;
  __int128 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  __int128 v41;
  __int128 v42;
  uint64_t v43;
  __int128 v44;
  __int128 v45;
  uint64_t v46;
  char *v47;

  v38 = a2;
  v4 = sub_5C154(&qword_31F480);
  __chkstk_darwin(v4);
  v6 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = sub_5C154(&qword_3226D0);
  v7 = *(_QWORD *)(v39 - 8);
  __chkstk_darwin(v39);
  v9 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (int *)type metadata accessor for DescriptionHeaderComponentModel(0);
  __chkstk_darwin(v10);
  v12 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = v12 + 40;
  v46 = 0;
  v44 = 0u;
  v45 = 0u;
  v43 = 0;
  v41 = 0u;
  v42 = 0u;
  sub_8B354((uint64_t)&v44, (uint64_t)&v41);
  v13 = v42;
  *(_OWORD *)(v12 + 40) = v41;
  *(_OWORD *)(v12 + 56) = v13;
  *((_QWORD *)v12 + 9) = v43;
  sub_5E09C((uint64_t)&v44, (uint64_t *)&unk_326210);
  v15 = a1[3];
  v14 = a1[4];
  v40 = a1;
  sub_66898(a1, v15);
  v16 = sub_B770C();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for DescriptionHeaderComponentModel.CodingKeys, &type metadata for DescriptionHeaderComponentModel.CodingKeys, v16, v15, v14);
  if (v2)
  {
    _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(v40);
    sub_5E09C((uint64_t)v47, &qword_320B70);
  }
  else
  {
    v17 = (uint64_t)v6;
    v18 = sub_5C154(&qword_320B78);
    LOBYTE(v41) = 0;
    v19 = sub_67060((unint64_t *)&qword_320B90, &qword_320B78, (uint64_t)&protocol conformance descriptor for CodeAnyHashable<A>);
    v20 = v39;
    KeyedDecodingContainer.decode<A>(_:forKey:)(&v44, v18, &v41, v39, v18, v19);
    v21 = v45;
    *(_OWORD *)v12 = v44;
    *((_OWORD *)v12 + 1) = v21;
    *((_QWORD *)v12 + 4) = v46;
    v22 = sub_5C154(&qword_320B70);
    LOBYTE(v41) = 1;
    v23 = sub_67060(&qword_320B98, &qword_320B70, (uint64_t)&protocol conformance descriptor for _CodeByKind_OrNil<A>);
    KeyedDecodingContainer.decode<A>(_:forKey:)(&v44, v22, &v41, v20, v22, v23);
    sub_8B3E0((uint64_t)&v44, (uint64_t)v47, &qword_320B70);
    v24 = type metadata accessor for ImpressionMetrics(0);
    LOBYTE(v44) = 2;
    v25 = sub_648E0(&qword_320BA0, (uint64_t (*)(uint64_t))&type metadata accessor for ImpressionMetrics, (uint64_t)&protocol conformance descriptor for ImpressionMetrics);
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)(v24, &v44, v20, v24, v25);
    sub_66F14(v17, (uint64_t)&v12[v10[6]], &qword_31F480);
    LOBYTE(v44) = 3;
    v26 = KeyedDecodingContainer.decode(_:forKey:)(&v44, v20);
    v27 = (uint64_t *)&v12[v10[7]];
    *v27 = v26;
    v27[1] = v28;
    LOBYTE(v44) = 4;
    v29 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)(&v44, v20);
    v30 = (uint64_t *)&v12[v10[8]];
    *v30 = v29;
    v30[1] = v31;
    LOBYTE(v41) = 5;
    v32 = sub_B7750();
    KeyedDecodingContainer.decode<A>(_:forKey:)(&v44, &type metadata for DescriptionHeaderComponentModel.DescriptionHeaderType, &v41, v20, &type metadata for DescriptionHeaderComponentModel.DescriptionHeaderType, v32);
    v12[v10[9]] = v44;
    LOBYTE(v41) = 6;
    v33 = sub_9BBC0();
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)(&type metadata for TintColorInfo, &v41, v20, &type metadata for TintColorInfo, v33);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v20);
    v34 = v46;
    v35 = &v12[v10[10]];
    v36 = v45;
    *(_OWORD *)v35 = v44;
    *((_OWORD *)v35 + 1) = v36;
    *((_QWORD *)v35 + 4) = v34;
    sub_B7794((uint64_t)v12, v38);
    _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(v40);
    sub_B77D8((uint64_t)v12);
  }
}

uint64_t sub_B7624()
{
  unsigned __int8 *v0;

  return sub_B7028(*v0);
}

uint64_t sub_B762C@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_B7B14(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_B7650(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_B770C();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_B7678(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_B770C();
  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_B76A0(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  sub_B70EC(a1, a2);
}

uint64_t sub_B76B4()
{
  return sub_648E0(&qword_320038, type metadata accessor for DescriptionHeaderComponentModel, (uint64_t)&unk_25C170);
}

uint64_t sub_B76E0()
{
  return sub_648E0(&qword_3226C8, type metadata accessor for DescriptionHeaderComponentModel, (uint64_t)&unk_25C0E8);
}

unint64_t sub_B770C()
{
  unint64_t result;

  result = qword_3226D8;
  if (!qword_3226D8)
  {
    result = swift_getWitnessTable(&unk_25C380, &type metadata for DescriptionHeaderComponentModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_3226D8);
  }
  return result;
}

unint64_t sub_B7750()
{
  unint64_t result;

  result = qword_3226E0;
  if (!qword_3226E0)
  {
    result = swift_getWitnessTable(&unk_25C358, &type metadata for DescriptionHeaderComponentModel.DescriptionHeaderType);
    atomic_store(result, (unint64_t *)&qword_3226E0);
  }
  return result;
}

uint64_t sub_B7794(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for DescriptionHeaderComponentModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_B77D8(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for DescriptionHeaderComponentModel(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t storeEnumTagSinglePayload for DescriptionHeaderComponentModel.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_B7860 + 4 * byte_25C03C[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_B7894 + 4 * byte_25C037[v4]))();
}

uint64_t sub_B7894(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_B789C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0xB78A4);
  return result;
}

uint64_t sub_B78B0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0xB78B8);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_B78BC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_B78C4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DescriptionHeaderComponentModel.CodingKeys()
{
  return &type metadata for DescriptionHeaderComponentModel.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for DescriptionHeaderComponentModel.DescriptionHeaderType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_B792C + 4 * byte_25C046[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_B7960 + 4 * byte_25C041[v4]))();
}

uint64_t sub_B7960(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_B7968(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0xB7970);
  return result;
}

uint64_t sub_B797C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0xB7984);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_B7988(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_B7990(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DescriptionHeaderComponentModel.DescriptionHeaderType()
{
  return &type metadata for DescriptionHeaderComponentModel.DescriptionHeaderType;
}

unint64_t sub_B79B0()
{
  unint64_t result;

  result = qword_3226E8;
  if (!qword_3226E8)
  {
    result = swift_getWitnessTable(&unk_25C278, &type metadata for DescriptionHeaderComponentModel.DescriptionHeaderType);
    atomic_store(result, (unint64_t *)&qword_3226E8);
  }
  return result;
}

unint64_t sub_B79F8()
{
  unint64_t result;

  result = qword_3226F0;
  if (!qword_3226F0)
  {
    result = swift_getWitnessTable(&unk_25C330, &type metadata for DescriptionHeaderComponentModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_3226F0);
  }
  return result;
}

unint64_t sub_B7A40()
{
  unint64_t result;

  result = qword_3226F8;
  if (!qword_3226F8)
  {
    result = swift_getWitnessTable(&unk_25C2A0, &type metadata for DescriptionHeaderComponentModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_3226F8);
  }
  return result;
}

unint64_t sub_B7A88()
{
  unint64_t result;

  result = qword_322700;
  if (!qword_322700)
  {
    result = swift_getWitnessTable(&unk_25C2C8, &type metadata for DescriptionHeaderComponentModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_322700);
  }
  return result;
}

unint64_t sub_B7ACC(Swift::String string)
{
  void *object;
  Swift::String v2;
  unint64_t v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_2E65A0, v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 3)
    return 3;
  else
    return v3;
}

uint64_t sub_B7B14(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  char v12;

  if (a1 == 25705 && a2 == 0xE200000000000000)
  {
    v5 = 0xE200000000000000;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(25705, 0xE200000000000000, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 0x6575676573 && a2 == 0xE500000000000000)
  {
    v7 = 0xE500000000000000;
LABEL_14:
    swift_bridgeObjectRelease(v7);
    return 1;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6575676573, 0xE500000000000000, a1, a2, 0) & 1) != 0)
  {
    v7 = a2;
    goto LABEL_14;
  }
  if (a1 == 0xD000000000000011)
  {
    v8 = 0x800000000026D790;
    if (a2 == 0x800000000026D790)
      goto LABEL_19;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000011, 0x800000000026D790, a1, a2, 0) & 1) != 0)
  {
    v8 = a2;
LABEL_19:
    swift_bridgeObjectRelease(v8);
    return 2;
  }
  if (a1 == 0x656C746974 && a2 == 0xE500000000000000)
  {
    v9 = 0xE500000000000000;
LABEL_25:
    swift_bridgeObjectRelease(v9);
    return 3;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x656C746974, 0xE500000000000000, a1, a2, 0) & 1) != 0)
  {
    v9 = a2;
    goto LABEL_25;
  }
  if (a1 == 0x656C746974627573 && a2 == 0xE800000000000000)
  {
    v10 = 0xE800000000000000;
LABEL_31:
    swift_bridgeObjectRelease(v10);
    return 4;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x656C746974627573, 0xE800000000000000, a1, a2, 0) & 1) != 0)
  {
    v10 = a2;
    goto LABEL_31;
  }
  if (a1 == 0x7954726564616568 && a2 == 0xEA00000000006570)
  {
    v11 = 0xEA00000000006570;
LABEL_37:
    swift_bridgeObjectRelease(v11);
    return 5;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x7954726564616568, 0xEA00000000006570, a1, a2, 0) & 1) != 0)
  {
    v11 = a2;
    goto LABEL_37;
  }
  if (a1 == 0x6E69546567616D69 && a2 == 0xED00006F666E4974)
  {
    swift_bridgeObjectRelease(0xED00006F666E4974);
    return 6;
  }
  else
  {
    v12 = _stringCompareWithSmolCheck(_:_:expecting:)(0x6E69546567616D69, 0xED00006F666E4974, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v12 & 1) != 0)
      return 6;
    else
      return 7;
  }
}

unint64_t sub_B7DF8()
{
  unint64_t result;

  result = qword_322708[0];
  if (!qword_322708[0])
  {
    result = swift_getWitnessTable(&unk_25C200, &type metadata for DescriptionHeaderComponentModel.DescriptionHeaderType);
    atomic_store(result, qword_322708);
  }
  return result;
}

uint64_t sub_B7E40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_allocateGenericValueMetadata(a1, a2, a3, 24);
}

uint64_t sub_B7E48(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  result = swift_checkMetadataState(319, *(_QWORD *)(a1 + 16));
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = (char *)&value witness table for Builtin.BridgeObject + 64;
    swift_initStructMetadata(a1, 0, 2, v4, a1 + 32);
    return 0;
  }
  return result;
}

uint64_t *sub_B7EC0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;

  v4 = a1;
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 8 > 0x18)
  {
    v9 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain(v9);
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    v10 = (uint64_t *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFF8);
    v11 = *v10;
    *(_QWORD *)(((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFF8) = *v10;
    swift_bridgeObjectRetain(v11);
  }
  return v4;
}

uint64_t sub_B7F74(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  (*(void (**)(void))(v3 + 8))();
  return swift_bridgeObjectRelease(*(_QWORD *)((a1 + *(_QWORD *)(v3 + 64) + 7) & 0xFFFFFFFFFFFFF8));
}

uint64_t sub_B7FB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t *v8;
  uint64_t v9;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 16))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFF8);
  v8 = (uint64_t *)((v6 + a2) & 0xFFFFFFFFFFFFF8);
  v9 = *v8;
  *v7 = *v8;
  swift_bridgeObjectRetain(v9);
  return a1;
}

uint64_t sub_B8014(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 24))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (uint64_t *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (uint64_t *)((v6 + a2) & 0xFFFFFFFFFFFFF8);
  v9 = *v8;
  v10 = *v7;
  *v7 = *v8;
  swift_bridgeObjectRetain(v9);
  swift_bridgeObjectRelease(v10);
  return a1;
}

uint64_t sub_B8080(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 32))();
  *(_QWORD *)((*(_QWORD *)(v5 + 64) + 7 + a1) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((*(_QWORD *)(v5 + 64) + 7 + a2) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_B80DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 40))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (uint64_t *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = *v7;
  *v7 = *(_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFF8);
  swift_bridgeObjectRelease(v8);
  return a1;
}

uint64_t sub_B8140(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  uint64_t v10;
  unint64_t v12;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0x7FFFFFFF)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(_QWORD *)(v4 + 64);
  if (v6 >= a2)
  {
    if (v5 < 0x7FFFFFFF)
    {
      v12 = *(_QWORD *)((a1 + v7 + 7) & 0xFFFFFFFFFFFFF8);
      if (v12 >= 0xFFFFFFFF)
        LODWORD(v12) = -1;
      return (v12 + 1);
    }
    else
    {
      return (*(uint64_t (**)(void))(v4 + 48))();
    }
  }
  else
  {
    if (((((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & 0xFFFFFFF8) != 0)
      v8 = 2;
    else
      v8 = a2 - v6 + 1;
    if (v8 >= 0x10000)
      v9 = 4;
    else
      v9 = 2;
    if (v8 < 0x100)
      v9 = 1;
    if (v8 >= 2)
      v10 = v9;
    else
      v10 = 0;
    return ((uint64_t (*)(void))((char *)&loc_B81BC + 4 * byte_25C3D0[v10]))();
  }
}

void sub_B8240(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  unsigned int v7;
  int v8;
  int v9;
  unsigned int v10;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFFu)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v5 + 84);
  if (v6 >= a3)
  {
    v9 = 0;
    if (a2 <= v6)
      goto LABEL_17;
  }
  else
  {
    if (((*(_DWORD *)(v5 + 64) + 7) & 0xFFFFFFF8) == 0xFFFFFFF8)
      v7 = a3 - v6 + 1;
    else
      v7 = 2;
    if (v7 >= 0x10000)
      v8 = 4;
    else
      v8 = 2;
    if (v7 < 0x100)
      v8 = 1;
    if (v7 >= 2)
      v9 = v8;
    else
      v9 = 0;
    if (a2 <= v6)
LABEL_17:
      __asm { BR              X12 }
  }
  if (((*(_DWORD *)(v5 + 64) + 7) & 0xFFFFFFF8) != 0xFFFFFFF8)
  {
    v10 = ~v6 + a2;
    bzero(a1, ((*(_QWORD *)(v5 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8);
    *a1 = v10;
  }
  __asm { BR              X10 }
}

void sub_B8334()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
  JUMPOUT(0xB83A8);
}

void sub_B833C(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a2)
    JUMPOUT(0xB8344);
  JUMPOUT(0xB83A8);
}

void sub_B8384()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
  JUMPOUT(0xB83A8);
}

void sub_B838C()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
  JUMPOUT(0xB83A8);
}

uint64_t sub_B8394(uint64_t a1, int a2, unsigned int a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_WORD *)(v5 + v6) = 0;
  if (!a2)
    JUMPOUT(0xB83A8);
  if (a3 < 0x7FFFFFFF)
  {
    if ((a2 & 0x80000000) == 0)
      JUMPOUT(0xB83A4);
    JUMPOUT(0xB83A0);
  }
  return (*(uint64_t (**)(uint64_t))(v4 + 56))(v5);
}

uint64_t type metadata accessor for IntentResultWithMetrics(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_5DD60(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for IntentResultWithMetrics);
}

BOOL sub_B83CC(Swift::String string)
{
  void *object;
  Swift::String v2;
  Swift::Int v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_2E6568, v2);
  swift_bridgeObjectRelease(object);
  return v3 != 0;
}

uint64_t sub_B8410(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable;

  WitnessTable = swift_getWitnessTable(&unk_25C4B0, a3);
  return == infix<A>(_:_:)(a1, a2, a3, WitnessTable, &protocol witness table for String);
}

uint64_t sub_B8464(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable;

  WitnessTable = swift_getWitnessTable(&unk_25C4B0, a1);
  return RawRepresentable<>.hashValue.getter(a1, a2, WitnessTable, &protocol witness table for String);
}

uint64_t sub_B84B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable;

  WitnessTable = swift_getWitnessTable(&unk_25C4B0, a2);
  return RawRepresentable<>.hash(into:)(a1, a2, a3, WitnessTable, &protocol witness table for String);
}

uint64_t sub_B8500(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable;

  WitnessTable = swift_getWitnessTable(&unk_25C4B0, a2);
  return RawRepresentable<>._rawHashValue(seed:)(a1, a2, a3, WitnessTable, &protocol witness table for String);
}

BOOL sub_B8550@<W0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  void *v3;
  _BOOL8 result;
  Swift::String v5;

  v3 = (void *)a1[1];
  v5._countAndFlagsBits = *a1;
  v5._object = v3;
  result = sub_B83CC(v5);
  *a2 = result;
  return result;
}

void sub_B8588(_QWORD *a1@<X8>)
{
  *a1 = 0xD000000000000013;
  a1[1] = 0x800000000026D800;
}

unint64_t sub_B85A8()
{
  return 0xD000000000000013;
}

BOOL sub_B85C4@<W0>(Swift::String a1@<X1:X0>, _BYTE *a2@<X8>)
{
  _BOOL8 result;

  result = sub_B83CC(a1);
  *a2 = result;
  return result;
}

uint64_t sub_B85F4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = static Shelf.ValidationError.== infix(_:_:)();
  *a1 = result & 1;
  return result;
}

uint64_t sub_B8620(uint64_t a1)
{
  uint64_t WitnessTable;

  WitnessTable = swift_getWitnessTable(&unk_25C550, a1);
  return CodingKey.description.getter(a1, WitnessTable);
}

uint64_t sub_B8654(uint64_t a1)
{
  uint64_t WitnessTable;

  WitnessTable = swift_getWitnessTable(&unk_25C550, a1);
  return CodingKey.debugDescription.getter(a1, WitnessTable);
}

uint64_t sub_B8688@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t WitnessTable;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  _QWORD v39[5];

  v36 = a5;
  v8 = type metadata accessor for IntentResultWithMetrics.CodingKeys(255, a2, a3, a4);
  WitnessTable = swift_getWitnessTable(&unk_25C550, v8);
  v9 = type metadata accessor for KeyedDecodingContainer(0, v8, WitnessTable);
  v32 = *(_QWORD *)(v9 - 8);
  v33 = v9;
  __chkstk_darwin(v9);
  v37 = (char *)&v30 - v10;
  v34 = *(_QWORD *)(a2 - 8);
  __chkstk_darwin(v11);
  v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for IntentResultWithMetrics(0, a2, a3, v14);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)&v30 - v17;
  sub_5E0D8((uint64_t)a1, (uint64_t)v39);
  v19 = v38;
  dispatch thunk of Decodable.init(from:)(v39, a2, a3);
  if (!v19)
  {
    v31 = v16;
    v38 = v15;
    (*(void (**)(char *, char *, uint64_t))(v34 + 32))(v18, v13, a2);
    v20 = a1[3];
    v21 = a1[4];
    sub_66898(a1, v20);
    dispatch thunk of Decoder.container<A>(keyedBy:)(v8, v8, WitnessTable, v20, v21);
    v22 = sub_5C154(&qword_322790);
    v23 = sub_B8B18();
    v24 = v33;
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)(v22, v25, v33, v22, v23);
    if (v39[0])
      v29 = (void *)v39[0];
    else
      v29 = &_swiftEmptyArrayStorage;
    (*(void (**)(char *, uint64_t))(v32 + 8))(v37, v24);
    v26 = v36;
    v27 = v31;
    *(_QWORD *)&v18[*(int *)(v38 + 36)] = v29;
    (*(void (**)(uint64_t, char *))(v27 + 32))(v26, v18);
  }
  return _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(a1);
}

uint64_t sub_B8AF0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  return sub_B8688(a1, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), a3, a4);
}

uint64_t type metadata accessor for IntentResultWithMetrics.CodingKeys(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_5DD60(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for IntentResultWithMetrics.CodingKeys);
}

unint64_t sub_B8B18()
{
  unint64_t result;
  uint64_t v1;

  result = qword_322798[0];
  if (!qword_322798[0])
  {
    v1 = sub_667D0(&qword_322790);
    result = swift_getWitnessTable(&protocol conformance descriptor for CodeByExpressibleByJSON<A>, v1);
    atomic_store(result, qword_322798);
  }
  return result;
}

uint64_t sub_B8B64(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_B8BA4 + 4 * byte_25C3DF[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_B8BC4 + 4 * byte_25C3E4[v4]))();
}

_BYTE *sub_B8BA4(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_B8BC4(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_B8BCC(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_B8BD4(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_B8BDC(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_B8BE4(_DWORD *result)
{
  *result = 0;
  return result;
}

uint64_t sub_B8BF0(uint64_t a1)
{
  return swift_getWitnessTable(&unk_25C528, a1);
}

uint64_t sub_B8C00(uint64_t a1)
{
  return swift_getWitnessTable(&unk_25C460, a1);
}

uint64_t sub_B8C10(uint64_t a1)
{
  return swift_getWitnessTable(&unk_25C488, a1);
}

uint64_t SeriesRoomListHeaderComponentModel.id.getter()
{
  _QWORD v1[2];

  v1[0] = 0xD000000000000019;
  v1[1] = 0x8000000000270640;
  return AnyHashable.init<A>(_:)(v1, &type metadata for String, &protocol witness table for String);
}

uint64_t SeriesRoomListHeaderComponentModel.segmentedControlViewModel.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_5C154(&qword_322820);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

double SeriesRoomListHeaderComponentModel.segue.getter@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_QWORD *)(a1 + 32) = 0;
  result = 0.0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return result;
}

uint64_t SeriesRoomListHeaderComponentModel.impressionMetrics.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;

  v2 = type metadata accessor for ImpressionMetrics(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(a1, 1, 1, v2);
}

uint64_t sub_B8CF4()
{
  return sub_648E0(&qword_322828, type metadata accessor for SeriesRoomListHeaderComponentModel, (uint64_t)&protocol conformance descriptor for SeriesRoomListHeaderComponentModel);
}

uint64_t type metadata accessor for SeriesRoomListHeaderComponentModel(uint64_t a1)
{
  uint64_t result;

  result = qword_322888;
  if (!qword_322888)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for SeriesRoomListHeaderComponentModel);
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for SeriesRoomListHeaderComponentModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_5C154(&qword_322820);
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

uint64_t destroy for SeriesRoomListHeaderComponentModel(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_5C154(&qword_322820);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t initializeWithCopy for SeriesRoomListHeaderComponentModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_5C154(&qword_322820);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t assignWithCopy for SeriesRoomListHeaderComponentModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_5C154(&qword_322820);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t initializeWithTake for SeriesRoomListHeaderComponentModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_5C154(&qword_322820);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t assignWithTake for SeriesRoomListHeaderComponentModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_5C154(&qword_322820);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for SeriesRoomListHeaderComponentModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_B8F00);
}

uint64_t sub_B8F00(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_5C154(&qword_322820);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for SeriesRoomListHeaderComponentModel(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_B8F4C);
}

uint64_t sub_B8F4C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_5C154(&qword_322820);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

void sub_B8F90(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  sub_B8FF8(319);
  if (v3 <= 0x3F)
  {
    v4 = *(_QWORD *)(v2 - 8) + 64;
    swift_initStructMetadata(a1, 256, 1, &v4, a1 + 16);
  }
}

void sub_B8FF8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;

  if (!qword_322898)
  {
    v2 = type metadata accessor for SeriesRoomListHeaderSegmentedItem(255);
    v3 = sub_648E0((unint64_t *)&unk_3228A0, type metadata accessor for SeriesRoomListHeaderSegmentedItem, (uint64_t)&protocol conformance descriptor for SeriesRoomListHeaderSegmentedItem);
    v4 = type metadata accessor for SegmentedControlViewModel(a1, v2, v3);
    if (!v5)
      atomic_store(v4, (unint64_t *)&qword_322898);
  }
}

void sub_B9070()
{
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000066, 0x8000000000270690, "BookStoreUI/ContextMenuViewModifier.swift", 41, 2, 26, 0);
  __break(1u);
}

void sub_B90C8()
{
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000066, 0x8000000000270690, "BookStoreUI/ContextMenuViewModifier.swift", 41, 2, 21, 0);
  __break(1u);
}

void static ContextMenuProviderKey.defaultValue.getter(uint64_t a1@<X8>)
{
  *(_QWORD *)(a1 + 24) = &type metadata for ContextMenuProviderKey.DefaultContextMenuProvider;
  *(_QWORD *)(a1 + 32) = &off_2EB5D8;
}

void sub_B9138(_QWORD *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0;
}

uint64_t View.contextMenuProvider(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t KeyPath;

  KeyPath = swift_getKeyPath(&unk_25C650);
  View.environment<A>(_:_:)(KeyPath, a1, a2, a3);
  return swift_release(KeyPath);
}

uint64_t EnvironmentValues.contextMenuProvider.getter()
{
  unint64_t v0;

  v0 = sub_AC850();
  return EnvironmentValues.subscript.getter(&type metadata for ContextMenuProviderKey, &type metadata for ContextMenuProviderKey, v0);
}

uint64_t EnvironmentValues.contextMenuProvider.setter(_QWORD *a1)
{
  unint64_t v2;
  _BYTE v4[40];

  sub_5E0D8((uint64_t)a1, (uint64_t)v4);
  v2 = sub_AC850();
  EnvironmentValues.subscript.setter(v4, &type metadata for ContextMenuProviderKey, &type metadata for ContextMenuProviderKey, v2);
  return _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(a1);
}

uint64_t View.contextMenuProvider(from:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t KeyPath;
  uint64_t v7;
  uint64_t v8;
  _QWORD v10[5];

  KeyPath = swift_getKeyPath(&unk_25C650);
  v7 = sub_5C154(&qword_3228D0);
  v8 = type metadata accessor for BaseObjectGraph(0);
  inject<A, B>(_:from:)(v10, v7, a1, v7, v8);
  View.environment<A>(_:_:)(KeyPath, v10, a2, a3);
  swift_release(KeyPath);
  return _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(v10);
}

void View.contextMenuSourceViewController(from:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *Strong;
  uint64_t KeyPath;
  uint64_t v11;
  _QWORD v12[2];
  _QWORD v13[5];

  v5 = sub_5C154(&qword_31FA90);
  BaseObjectGraph.inject<A>(_:)(v13, v5, v5);
  v6 = type metadata accessor for NavigationProvider();
  if ((swift_dynamicCast(v12, v13, v5, v6, 6) & 1) != 0)
  {
    v7 = v12[0];
    v8 = v12[0] + 16;
    swift_beginAccess(v12[0] + 16, v13, 0, 0);
    Strong = (void *)swift_unknownObjectWeakLoadStrong(v8);
  }
  else
  {
    Strong = 0;
    v7 = 0;
  }
  KeyPath = swift_getKeyPath(&unk_25C678);
  v11 = swift_allocObject(&unk_2EB550, 24, 7);
  swift_unknownObjectWeakInit(v11 + 16);
  v12[0] = sub_B9658;
  v12[1] = v11;
  swift_retain(v11);
  View.environment<A>(_:_:)(KeyPath, v12, a2, a3);
  swift_release_n(v11, 2);
  swift_release(v7);
  swift_release(KeyPath);

}

uint64_t (*sub_B9428())()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v0 = sub_AC80C();
  EnvironmentValues.subscript.getter(&type metadata for ContextMenuSourceViewControllerProviderKey, &type metadata for ContextMenuSourceViewControllerProviderKey, v0);
  if (!v3)
    return 0;
  v1 = swift_allocObject(&unk_2EB650, 32, 7);
  *(_QWORD *)(v1 + 16) = v3;
  *(_QWORD *)(v1 + 24) = v4;
  return sub_B99B0;
}

double sub_B94A0@<D0>(_OWORD *a1@<X8>)
{
  unint64_t v2;
  double result;
  __int128 v4;

  v2 = sub_AC80C();
  EnvironmentValues.subscript.getter(&type metadata for ContextMenuSourceViewControllerProviderKey, &type metadata for ContextMenuSourceViewControllerProviderKey, v2);
  result = *(double *)&v4;
  *a1 = v4;
  return result;
}

double sub_B94EC@<D0>(_OWORD *a1@<X8>)
{
  unint64_t v2;
  double result;
  __int128 v4;

  v2 = sub_AC80C();
  EnvironmentValues.subscript.getter(&type metadata for ContextMenuSourceViewControllerProviderKey, &type metadata for ContextMenuSourceViewControllerProviderKey, v2);
  result = *(double *)&v4;
  *a1 = v4;
  return result;
}

uint64_t sub_B9538(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)@<X0>(uint64_t *@<X8>);
  unint64_t v6;
  _QWORD v8[2];

  v1 = *a1;
  v2 = a1[1];
  if (*a1)
  {
    v3 = swift_allocObject(&unk_2EB628, 32, 7);
    *(_QWORD *)(v3 + 16) = v1;
    *(_QWORD *)(v3 + 24) = v2;
    v4 = swift_allocObject(&unk_2EB600, 32, 7);
    *(_QWORD *)(v4 + 16) = sub_B9978;
    *(_QWORD *)(v4 + 24) = v3;
    v5 = sub_B9950;
  }
  else
  {
    v5 = 0;
    v4 = 0;
  }
  v8[0] = v5;
  v8[1] = v4;
  sub_6C24C(v1, v2);
  v6 = sub_AC80C();
  return EnvironmentValues.subscript.setter(v8, &type metadata for ContextMenuSourceViewControllerProviderKey, &type metadata for ContextMenuSourceViewControllerProviderKey, v6);
}

uint64_t sub_B95EC()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_B9610@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;
  _BYTE v5[24];

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v5, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(v3);
  *a2 = result;
  return result;
}

uint64_t sub_B9658@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  _BYTE v5[24];

  v3 = v1 + 16;
  swift_beginAccess(v3, v5, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(v3);
  *a1 = result;
  return result;
}

void (*EnvironmentValues.contextMenuProvider.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  unint64_t v4;

  v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[15] = v1;
  v4 = sub_AC850();
  v3[16] = v4;
  EnvironmentValues.subscript.getter(&type metadata for ContextMenuProviderKey, &type metadata for ContextMenuProviderKey, v4);
  return sub_B9704;
}

void sub_B9704(uint64_t *a1, char a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;

  v2 = (_QWORD *)*a1;
  v3 = (_QWORD *)(*a1 + 40);
  v4 = *(_QWORD *)(*a1 + 128);
  if ((a2 & 1) != 0)
  {
    sub_5E0D8(*a1, (uint64_t)v3);
    sub_5E0D8((uint64_t)v3, (uint64_t)(v2 + 10));
    EnvironmentValues.subscript.setter(v2 + 10, &type metadata for ContextMenuProviderKey, &type metadata for ContextMenuProviderKey, v4);
    _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(v3);
  }
  else
  {
    sub_5E0D8(*a1, (uint64_t)v3);
    EnvironmentValues.subscript.setter(v3, &type metadata for ContextMenuProviderKey, &type metadata for ContextMenuProviderKey, v4);
  }
  _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(v2);
  free(v2);
}

uint64_t EnvironmentValues.contextMenuSourceViewController.getter()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v5[2];

  v0 = sub_AC80C();
  v1 = EnvironmentValues.subscript.getter(&type metadata for ContextMenuSourceViewControllerProviderKey, &type metadata for ContextMenuSourceViewControllerProviderKey, v0);
  v2 = v5[0];
  if (!v5[0])
    return 0;
  v3 = v5[1];
  ((void (*)(_QWORD *__return_ptr, uint64_t))v5[0])(v5, v1);
  sub_6C2DC(v2, v3);
  return v5[0];
}

ValueMetadata *type metadata accessor for ContextMenuProviderKey()
{
  return &type metadata for ContextMenuProviderKey;
}

uint64_t sub_B9830(uint64_t *a1)
{
  return sub_B9858(a1, &qword_3228D8, &qword_3228E0);
}

uint64_t sub_B9844(uint64_t *a1)
{
  return sub_B9858(a1, &qword_3228E8, &qword_3228F0);
}

uint64_t sub_B9858(uint64_t *a1, uint64_t *a2, unint64_t *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v5 = *a1;
  v6 = sub_667D0(a2);
  v7 = type metadata accessor for ModifiedContent(255, v5, v6);
  sub_B98CC(a3, a2);
  return swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v7);
}

uint64_t sub_B98CC(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = sub_667D0(a2);
    result = swift_getWitnessTable(&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>, v4);
    atomic_store(result, a1);
  }
  return result;
}

ValueMetadata *type metadata accessor for ContextMenuSourceViewControllerProviderKey()
{
  return &type metadata for ContextMenuSourceViewControllerProviderKey;
}

ValueMetadata *type metadata accessor for ContextMenuProviderKey.DefaultContextMenuProvider()
{
  return &type metadata for ContextMenuProviderKey.DefaultContextMenuProvider;
}

uint64_t sub_B992C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_B9950@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = (*(uint64_t (**)(void))(v1 + 16))();
  *a1 = result;
  return result;
}

uint64_t sub_B9978()
{
  uint64_t v0;
  uint64_t v2;

  (*(void (**)(uint64_t *__return_ptr))(v0 + 16))(&v2);
  return v2;
}

_QWORD *initializeWithCopy for HighlightsDataProvider(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[2];
  v5 = a2[3];
  a1[2] = v4;
  a1[3] = v5;
  a1[4] = a2[4];
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRetain(v5);
  return a1;
}

_QWORD *assignWithCopy for HighlightsDataProvider(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *a1 = *a2;
  v4 = a2[1];
  v5 = a1[1];
  a1[1] = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  v6 = a2[2];
  v7 = a1[2];
  a1[2] = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  v8 = a2[3];
  v9 = a1[3];
  a1[3] = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease(v9);
  a1[4] = a2[4];
  return a1;
}

_QWORD *assignWithTake for HighlightsDataProvider(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  *a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease(a1[1]);
  v4 = a1[2];
  *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease(v4);
  v5 = a1[3];
  a1[3] = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRelease(v5);
  a1[4] = *(_QWORD *)(a2 + 32);
  return a1;
}

ValueMetadata *type metadata accessor for HighlightsDataProvider()
{
  return &type metadata for HighlightsDataProvider;
}

uint64_t sub_B9AF8(uint64_t (*a1)(_QWORD), uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD), void (*a5)(BOOL, uint64_t, uint64_t))
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  char *v14;
  void *v15;
  unint64_t v16;
  unint64_t v17;
  char v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  void (*v22)(BOOL, uint64_t, uint64_t);
  uint64_t (*v23)(_QWORD);
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, char *, uint64_t);
  uint64_t v27;
  char *v28;
  uint64_t v29;
  _QWORD *v30;

  v22 = a5;
  v29 = a4(0);
  v9 = *(_QWORD *)(v29 - 8);
  v10 = __chkstk_darwin(v29);
  v28 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = __chkstk_darwin(v10);
  v14 = (char *)&v22 - v13;
  v15 = &_swiftEmptyArrayStorage;
  v30 = &_swiftEmptyArrayStorage;
  v27 = *(_QWORD *)(a3 + 16);
  if (v27)
  {
    v16 = 0;
    v24 = a2;
    v25 = a3;
    v23 = a1;
    while (v16 < *(_QWORD *)(a3 + 16))
    {
      v17 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
      v15 = *(void **)(v9 + 72);
      (*(void (**)(char *, unint64_t, uint64_t))(v9 + 16))(v14, a3 + v17 + (_QWORD)v15 * v16, v29);
      v18 = a1(v14);
      if (v5)
      {
        (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v29);
        swift_bridgeObjectRelease(a3);
        swift_release(v30);
        return (uint64_t)v15;
      }
      if ((v18 & 1) != 0)
      {
        v26 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
        v26(v28, v14, v29);
        v19 = v30;
        if ((swift_isUniquelyReferenced_nonNull_native(v30) & 1) == 0)
        {
          v22(0, v19[2] + 1, 1);
          v19 = v30;
        }
        v21 = v19[2];
        v20 = v19[3];
        if (v21 >= v20 >> 1)
        {
          v22(v20 > 1, v21 + 1, 1);
          v19 = v30;
        }
        v19[2] = v21 + 1;
        result = ((uint64_t (*)(char *, char *, uint64_t))v26)((char *)v19 + v17 + v21 * (_QWORD)v15, v28, v29);
        v30 = v19;
        a3 = v25;
        a1 = v23;
      }
      else
      {
        result = (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v14, v29);
      }
      if (v27 == ++v16)
      {
        v15 = v30;
        goto LABEL_15;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_15:
    swift_bridgeObjectRelease(a3);
    return (uint64_t)v15;
  }
  return result;
}

void sub_B9D14(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *AssociatedTypeWitness;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t AssociatedConformanceWitness;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  int v51;
  uint64_t v52;
  void (*v53)(uint64_t, uint64_t, uint64_t, char *);
  uint64_t v54;
  char *v55;
  char *v56;
  char v57;
  void (*v58)(uint64_t, uint64_t, uint64_t, uint64_t);
  char *v59;
  char *v60;
  __n128 v61;
  uint64_t v62;
  char *v63;
  __n128 v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char v68;
  char v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  char v73;
  uint64_t v74;
  BOOL v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char v95;
  char v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  void (*v119)(char *, uint64_t, uint64_t);
  _QWORD *v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  __int128 v126;
  char *v127;
  uint64_t v128;
  __int128 v129;
  __int128 v130;
  char *v131;
  __int128 v132;
  uint64_t v133;
  uint64_t v134;
  __int128 v135;
  uint64_t v136;
  uint64_t v137;
  void *v138;

  v105 = a1;
  v108 = sub_5C154(&qword_322918);
  __chkstk_darwin(v108);
  v107 = (char *)&v104 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_5C154(&qword_322920);
  v4 = __chkstk_darwin(v3);
  v118 = (char *)&v104 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v117 = type metadata accessor for LibraryAudiobookSeriesInfo(0, v4);
  v116 = *(_QWORD *)(v117 - 8);
  __chkstk_darwin(v117);
  v106 = (char *)&v104 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v112 = sub_5C154(&qword_322928);
  __chkstk_darwin(v112);
  v111 = (char *)&v104 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_5C154(&qword_322930);
  v9 = __chkstk_darwin(v8);
  v115 = (char *)&v104 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v114 = type metadata accessor for LibraryBookSeriesInfo(0, v9);
  v113 = *(_QWORD *)(v114 - 8);
  __chkstk_darwin(v114);
  v110 = (char *)&v104 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for Date(0);
  v123 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v125 = (char *)&v104 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_5C154(&qword_31F128);
  __chkstk_darwin(v14);
  v121 = (char *)&v104 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  AssociatedTypeWitness = (char *)&v104 - v17;
  v19 = *(_QWORD *)(v1 + 16);
  v138 = &_swiftEmptySetSingleton;
  v20 = _swiftEmptyArrayStorage;
  *(_QWORD *)&v129 = _swiftEmptyArrayStorage;
  v21 = *(_QWORD *)(v19 + 16);
  swift_bridgeObjectRetain(v19);
  v122 = v12;
  if (v21)
  {
    v22 = 0;
    v23 = v19 + 32;
    v24 = _swiftEmptyArrayStorage;
    while (1)
    {
      if (v22 >= *(_QWORD *)(v19 + 16))
      {
        __break(1u);
LABEL_59:
        __break(1u);
        return;
      }
      sub_5E0D8(v23, (uint64_t)&v135);
      v25 = v136;
      v26 = v137;
      sub_66898(&v135, v136);
      LOBYTE(v25) = AssetInfo.isPartOfSeries.getter(v25, v26);
      sub_5E0D8((uint64_t)&v135, (uint64_t)&v132);
      if ((v25 & 1) != 0)
      {
        v27 = v133;
        v28 = v134;
        sub_66898(&v132, v133);
        AssetInfo.dateFinished.getter(v27, v28);
        LODWORD(v27) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v123 + 48))(AssociatedTypeWitness, 1, v12);
        sub_5E09C((uint64_t)AssociatedTypeWitness, &qword_31F128);
        _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(&v132);
        if ((_DWORD)v27 != 1)
        {
          sub_5DC98(&v135, (uint64_t)&v132);
          if ((swift_isUniquelyReferenced_nonNull_native(v24) & 1) == 0)
            sub_20C858(0, v24[2] + 1, 1);
          v24 = (_QWORD *)v129;
          v30 = *(_QWORD *)(v129 + 16);
          v29 = *(_QWORD *)(v129 + 24);
          if (v30 >= v29 >> 1)
          {
            sub_20C858(v29 > 1, v30 + 1, 1);
            v24 = (_QWORD *)v129;
          }
          v24[2] = v30 + 1;
          sub_5DC98(&v132, (uint64_t)&v24[5 * v30 + 4]);
          v12 = v122;
          goto LABEL_5;
        }
      }
      else
      {
        _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(&v132);
      }
      _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(&v135);
LABEL_5:
      ++v22;
      v23 += 40;
      if (v21 == v22)
      {
        v20 = (_QWORD *)v129;
        break;
      }
    }
  }
  swift_bridgeObjectRelease(v19);
  v31 = v20[2];
  v32 = (uint64_t)v121;
  if (!v31)
  {
LABEL_55:
    swift_release(v20);
    swift_bridgeObjectRelease(v138);
    v103 = type metadata accessor for FinishedSeriesHighlight(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v103 - 8) + 56))(v105, 1, 1, v103);
    return;
  }
  v109 = 0;
  v33 = v20 + 4;
  v34 = v123;
  v120 = v20 + 4;
  while (v31 <= v20[2])
  {
    --v31;
    sub_5E0D8((uint64_t)&v33[5 * v31], (uint64_t)&v135);
    v35 = v136;
    v36 = v137;
    sub_66898(&v135, v136);
    AssetInfo.dateFinished.getter(v35, v36);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v34 + 48))(v32, 1, v12) == 1)
    {
      sub_5E09C(v32, &qword_31F128);
    }
    else
    {
      v124 = v31;
      v37 = v20;
      v119 = *(void (**)(char *, uint64_t, uint64_t))(v34 + 32);
      v119(v125, v32, v12);
      v39 = v136;
      v38 = v137;
      sub_66898(&v135, v136);
      v40 = *(_QWORD *)(v38 + 8);
      AssociatedTypeWitness = (char *)swift_getAssociatedTypeWitness(255, v40);
      v41 = type metadata accessor for Optional(0, AssociatedTypeWitness);
      v42 = *(_QWORD *)(v41 - 8);
      __chkstk_darwin(v41);
      v44 = (char *)&v104 - v43;
      ContentInfo.libraryData.getter(v39, v40);
      v45 = *((_QWORD *)AssociatedTypeWitness - 1);
      if ((*(unsigned int (**)(char *, uint64_t, char *))(v45 + 48))(v44, 1, AssociatedTypeWitness) == 1)
      {
        (*(void (**)(char *, uint64_t))(v42 + 8))(v44, v41);
        v129 = 0u;
        v130 = 0u;
        v131 = 0;
      }
      else
      {
        v127 = AssociatedTypeWitness;
        AssociatedConformanceWitness = swift_getAssociatedConformanceWitness(v38, v39, AssociatedTypeWitness, &protocol requirements base descriptor for AssetInfo, &associated conformance descriptor for AssetInfo.ContentInfo.LibraryType: LibraryAssetInfo);
        v128 = AssociatedConformanceWitness;
        sub_668BC(&v126);
        (*(void (**)(void))(v45 + 32))();
        dispatch thunk of LibraryAssetInfo.seriesInfo.getter(&v129, AssociatedTypeWitness, AssociatedConformanceWitness);
        _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(&v126);
        v47 = (uint64_t)v118;
        v48 = v117;
        if (*((_QWORD *)&v130 + 1))
        {
          sub_5DC98(&v129, (uint64_t)&v132);
          sub_5E0D8((uint64_t)&v132, (uint64_t)&v126);
          v49 = sub_5C154(&qword_322938);
          v50 = (uint64_t)v115;
          AssociatedTypeWitness = (char *)v114;
          v51 = swift_dynamicCast(v115, &v126, v49, v114, 6);
          v52 = v113;
          v53 = *(void (**)(uint64_t, uint64_t, uint64_t, char *))(v113 + 56);
          v12 = v122;
          v54 = v116;
          if (v51)
          {
            v53(v50, 0, 1, AssociatedTypeWitness);
            v55 = v110;
            (*(void (**)(char *, uint64_t, char *))(v52 + 32))(v110, v50, AssociatedTypeWitness);
            v56 = v111;
            (*(void (**)(char *, char *, char *))(v52 + 16))(v111, v55, AssociatedTypeWitness);
            swift_storeEnumTagMultiPayload(v56, v112, 1);
            v127 = (char *)type metadata accessor for BookSeriesInfo(0);
            v128 = sub_648E0(&qword_322948, (uint64_t (*)(uint64_t))&type metadata accessor for BookSeriesInfo, (uint64_t)&protocol conformance descriptor for BookSeriesInfo);
            sub_668BC(&v126);
            BookSeriesInfo.init(dataSource:)(v56);
            (*(void (**)(char *, char *))(v52 + 8))(v55, AssociatedTypeWitness);
            sub_5DC98(&v126, (uint64_t)&v129);
            v33 = v120;
            goto LABEL_29;
          }
          v53(v50, 1, 1, AssociatedTypeWitness);
          sub_5E09C(v50, &qword_322930);
          sub_5E0D8((uint64_t)&v132, (uint64_t)&v126);
          v57 = swift_dynamicCast(v47, &v126, v49, v48, 6);
          v58 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v54 + 56);
          v33 = v120;
          if ((v57 & 1) != 0)
          {
            v58(v47, 0, 1, v48);
            v59 = v106;
            (*(void (**)(char *, uint64_t, uint64_t))(v54 + 32))(v106, v47, v48);
            v60 = v107;
            (*(void (**)(char *, char *, uint64_t))(v54 + 16))(v107, v59, v48);
            swift_storeEnumTagMultiPayload(v60, v108, 1);
            v127 = (char *)type metadata accessor for AudiobookSeriesInfo(0, v61);
            v128 = sub_648E0(&qword_322940, (uint64_t (*)(uint64_t))&type metadata accessor for AudiobookSeriesInfo, (uint64_t)&protocol conformance descriptor for AudiobookSeriesInfo);
            sub_668BC(&v126);
            AudiobookSeriesInfo.init(dataSource:)(v60);
            (*(void (**)(char *, uint64_t))(v54 + 8))(v59, v48);
            sub_5DC98(&v126, (uint64_t)&v129);
LABEL_29:
            v62 = *((_QWORD *)&v130 + 1);
            v63 = v131;
            sub_66898(&v129, *((uint64_t *)&v130 + 1));
            v20 = v37;
            if ((SeriesInfo.isOrdered.getter(v62, v63, v64) & 1) != 0)
            {
              v65 = v136;
              v66 = v137;
              sub_66898(&v135, v136);
              v67 = AssetInfo.seriesSortKey.getter(v65, v66);
              v69 = v68;
              v70 = *((_QWORD *)&v130 + 1);
              v71 = v131;
              sub_66898(&v129, *((uint64_t *)&v130 + 1));
              v72 = SeriesInfo.assetCount.getter(v70, v71);
              LOBYTE(v71) = v73;
              _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(&v132);
              if ((v71 & 1) != 0)
                v74 = 0;
              else
                v74 = v72;
              v75 = __OFSUB__(v74, 1);
              v76 = v74 - 1;
              v31 = v124;
              if (v75)
                goto LABEL_59;
              if ((v69 & 1) == 0 && v67 == v76)
                goto LABEL_54;
LABEL_52:
              v34 = v123;
              (*(void (**)(char *, uint64_t))(v123 + 8))(v125, v12);
              _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(&v129);
              v32 = (uint64_t)v121;
              goto LABEL_18;
            }
            v77 = (uint64_t)v138;
            v78 = *((_QWORD *)&v130 + 1);
            v79 = v131;
            sub_66898(&v129, *((uint64_t *)&v130 + 1));
            v80 = *((_QWORD *)v79 + 1);
            swift_bridgeObjectRetain(v77);
            v81 = ContentInfo.id.getter(v78, v80);
            v83 = v82;
            v84 = sub_22F94C(v81, v82, v77);
            swift_bridgeObjectRelease(v83);
            swift_bridgeObjectRelease(v77);
            if ((v84 & 1) != 0)
            {
              _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(&v132);
              v34 = v123;
              (*(void (**)(char *, uint64_t))(v123 + 8))(v125, v12);
              _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(&v129);
            }
            else
            {
              v85 = *((_QWORD *)&v130 + 1);
              AssociatedTypeWitness = v131;
              sub_66898(&v129, *((uint64_t *)&v130 + 1));
              v86 = v109;
              v87 = SeriesInfo.assets.getter(v85, AssociatedTypeWitness);
              if (!v86)
              {
                v88 = v87;
                v109 = 0;
                v89 = swift_getAssociatedTypeWitness(0, AssociatedTypeWitness);
                v90 = sub_5C154(&qword_31EF60);
                AssociatedTypeWitness = (char *)_arrayForceCast<A, B>(_:)(v88, v89, v90);
                swift_bridgeObjectRelease(v88);
                v91 = *((_QWORD *)AssociatedTypeWitness + 2);
                v31 = v124;
                if (!v91)
                  goto LABEL_57;
                v92 = (uint64_t)(AssociatedTypeWitness + 32);
                swift_bridgeObjectRetain(AssociatedTypeWitness);
                while (1)
                {
                  sub_5E0D8(v92, (uint64_t)&v126);
                  v93 = (uint64_t)v127;
                  v94 = v128;
                  sub_66898(&v126, (uint64_t)v127);
                  v95 = AssetInfo.isFinished.getter(v93, v94);
                  if (v95 == 2)
                    break;
                  v96 = v95;
                  _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(&v126);
                  if ((v96 & 1) == 0)
                    goto LABEL_51;
                  v92 += 40;
                  if (!--v91)
                  {
                    swift_bridgeObjectRelease_n(AssociatedTypeWitness, 2);
                    goto LABEL_53;
                  }
                }
                _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(&v126);
LABEL_51:
                swift_bridgeObjectRelease_n(AssociatedTypeWitness, 2);
                v97 = *((_QWORD *)&v130 + 1);
                v98 = v131;
                sub_66898(&v129, *((uint64_t *)&v130 + 1));
                v99 = ContentInfo.id.getter(v97, *((_QWORD *)v98 + 1));
                sub_230C9C((uint64_t *)&v126, v99, v100);
                swift_bridgeObjectRelease(*((_QWORD *)&v126 + 1));
                _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(&v132);
                goto LABEL_52;
              }
              _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(&v132);
              v34 = v123;
              (*(void (**)(char *, uint64_t))(v123 + 8))(v125, v12);
              swift_errorRelease(v86);
              _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(&v129);
              v109 = 0;
            }
            v32 = (uint64_t)v121;
          }
          else
          {
            v58(v47, 1, 1, v48);
            _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(&v132);
            v34 = v123;
            (*(void (**)(char *, uint64_t))(v123 + 8))(v125, v12);
            sub_5E09C(v47, &qword_322920);
            v32 = (uint64_t)v121;
            v20 = v37;
          }
          v31 = v124;
          goto LABEL_18;
        }
      }
      v34 = v123;
      v12 = v122;
      (*(void (**)(char *, uint64_t))(v123 + 8))(v125, v122);
      sub_5E09C((uint64_t)&v129, &qword_320910);
      v32 = (uint64_t)v121;
      v20 = v37;
      v31 = v124;
      v33 = v120;
    }
LABEL_18:
    _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(&v135);
    if (!v31)
      goto LABEL_55;
  }
  __break(1u);
LABEL_57:
  swift_bridgeObjectRelease(AssociatedTypeWitness);
LABEL_53:
  _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(&v132);
LABEL_54:
  swift_release(v20);
  swift_bridgeObjectRelease(v138);
  v101 = v105;
  sub_5E0D8((uint64_t)&v129, v105);
  v102 = type metadata accessor for FinishedSeriesHighlight(0);
  v119((char *)(v101 + *(int *)(v102 + 20)), (uint64_t)v125, v12);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v102 - 8) + 56))(v101, 0, 1, v102);
  _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(&v129);
  _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(&v135);
}

uint64_t sub_BAA7C@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  void (*v19)(char *, char *, uint64_t);
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v3 = sub_5C154(&qword_322970);
  v4 = __chkstk_darwin(v3);
  v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for AudiobookInfo(0, v4);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = *v1;
  v11 = v1[1];
  v13 = v1[2];
  v12 = v1[3];
  v14 = v1[4];
  v25 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = v10;
  v27 = v11;
  v28 = v13;
  v29 = v12;
  v30 = v14;
  sub_BAC38();
  if ((v16 & 1) != 0)
    goto LABEL_4;
  v24 = v15;
  v26 = v10;
  v27 = v11;
  v28 = v13;
  v29 = v12;
  v30 = v14;
  sub_BB128((uint64_t)v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_5E09C((uint64_t)v6, &qword_322970);
LABEL_4:
    v17 = type metadata accessor for LongestAudiobookHighlight(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(a1, 1, 1, v17);
  }
  v19 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
  v20 = v25;
  v19(v25, v6, v7);
  v21 = type metadata accessor for LongestAudiobookHighlight(0);
  v22 = (char *)(a1 + *(int *)(v21 + 20));
  v19(v22, v20, v7);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v22, 0, 1, v7);
  *(_QWORD *)a1 = v24;
  *(_BYTE *)(a1 + 8) = 0;
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(a1, 0, 1, v21);
}

void sub_BAC38()
{
  uint64_t v0;
  uint64_t v1;
  __n128 v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t *v24;
  uint64_t v25;
  int v26;
  uint64_t *v27;
  void (*v28)(char *, char *, uint64_t);
  char *v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  char *v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  void (*v39)(char *, char *, uint64_t);
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t (*v50)(char *, uint64_t, uint64_t);
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  BOOL v56;
  uint64_t v57;
  char *v58;
  char *v59;
  char *v60;
  char *v61;
  char *v62;
  _BYTE v63[40];
  _QWORD v64[5];

  v1 = sub_5C154(&qword_322970);
  v2 = __chkstk_darwin(v1);
  v4 = (char *)&v57 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for AudiobookInfo(0, v2);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v60 = (char *)&v57 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v57 - v9;
  __chkstk_darwin(v11);
  v13 = (char *)&v57 - v12;
  __chkstk_darwin(v14);
  v16 = (char *)&v57 - v15;
  v18 = __chkstk_darwin(v17);
  v59 = (char *)&v57 - v19;
  v20 = *(_QWORD *)(v0 + 16);
  v21 = *(_QWORD *)(v20 + 16);
  v61 = v13;
  v62 = v10;
  if (v21)
  {
    v22 = v20 + 32;
    v57 = v20;
    swift_bridgeObjectRetain(v20);
    v23 = (char *)_swiftEmptyArrayStorage;
    v24 = &qword_31EF60;
    v58 = v16;
    do
    {
      sub_5E0D8(v22, (uint64_t)v64);
      sub_5E0D8((uint64_t)v64, (uint64_t)v63);
      v25 = sub_5C154(v24);
      v26 = swift_dynamicCast(v4, v63, v25, v5, 6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v4, v26 ^ 1u, 1, v5);
      _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(v64);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
      {
        sub_5E09C((uint64_t)v4, &qword_322970);
      }
      else
      {
        v27 = v24;
        v28 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
        v29 = v59;
        v28(v59, v4, v5);
        v28(v16, v29, v5);
        if ((swift_isUniquelyReferenced_nonNull_native(v23) & 1) == 0)
          v23 = (char *)sub_57034(0, *((_QWORD *)v23 + 2) + 1, 1, (unint64_t)v23);
        v31 = *((_QWORD *)v23 + 2);
        v30 = *((_QWORD *)v23 + 3);
        if (v31 >= v30 >> 1)
          v23 = (char *)sub_57034(v30 > 1, v31 + 1, 1, (unint64_t)v23);
        *((_QWORD *)v23 + 2) = v31 + 1;
        v32 = (unint64_t)&v23[((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))
                                   + *(_QWORD *)(v6 + 72) * v31];
        v16 = v58;
        v28((char *)v32, v58, v5);
        v24 = v27;
        v13 = v61;
        v10 = v62;
      }
      v22 += 40;
      --v21;
    }
    while (v21);
    v18 = swift_bridgeObjectRelease(v57);
  }
  else
  {
    v23 = (char *)_swiftEmptyArrayStorage;
  }
  v64[0] = _swiftEmptyArrayStorage;
  v33 = (char *)*((_QWORD *)v23 + 2);
  if (v33)
  {
    v34 = 0;
    v59 = (char *)*((_QWORD *)v23 + 2);
    while (v34 < *((_QWORD *)v23 + 2))
    {
      v35 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
      v36 = *(_QWORD *)(v6 + 72);
      v37 = (*(uint64_t (**)(char *, char *, uint64_t, __n128))(v6 + 16))(v13, &v23[v35 + v36 * v34], v5, v18);
      AudiobookInfo.duration.getter(v37);
      if ((v38 & 1) != 0)
      {
        (*(void (**)(char *, uint64_t))(v6 + 8))(v13, v5);
      }
      else
      {
        v39 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
        v39(v10, v13, v5);
        v40 = v64[0];
        if ((swift_isUniquelyReferenced_nonNull_native(v64[0]) & 1) == 0)
        {
          sub_20C884(0, *(_QWORD *)(v40 + 16) + 1, 1);
          v40 = v64[0];
        }
        v42 = *(_QWORD *)(v40 + 16);
        v41 = *(_QWORD *)(v40 + 24);
        if (v42 >= v41 >> 1)
        {
          sub_20C884(v41 > 1, v42 + 1, 1);
          v40 = v64[0];
        }
        *(_QWORD *)(v40 + 16) = v42 + 1;
        v43 = v40 + v35 + v42 * v36;
        v10 = v62;
        v39((char *)v43, v62, v5);
        v64[0] = v40;
        v13 = v61;
        v33 = v59;
      }
      if (v33 == (char *)++v34)
        goto LABEL_24;
    }
    __break(1u);
LABEL_33:
    __break(1u);
  }
  else
  {
LABEL_24:
    swift_bridgeObjectRelease(v23);
    v44 = v64[0];
    v45 = sub_5C154(&qword_322980);
    v46 = sub_C1040(&qword_322988, &qword_322980);
    if ((Collection.isNotEmpty.getter(v45, v46) & 1) == 0 || (v47 = *(_QWORD *)(v44 + 16)) == 0)
    {
LABEL_31:
      swift_release(v44);
      return;
    }
    v48 = v44 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
    v49 = *(_QWORD *)(v6 + 72);
    v50 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 16);
    swift_retain(v44);
    v51 = 0;
    v52 = v60;
    while (1)
    {
      v53 = v50(v52, v48, v5);
      v54 = AudiobookInfo.duration.getter(v53);
      if ((v55 & 1) != 0)
        break;
      v56 = __OFADD__(v51, v54);
      v51 += v54;
      if (v56)
        goto LABEL_33;
      v52 = v60;
      (*(void (**)(char *, uint64_t))(v6 + 8))(v60, v5);
      v48 += v49;
      if (!--v47)
      {
        swift_release(v44);
        goto LABEL_31;
      }
    }
  }
  __break(1u);
}

void sub_BB128(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __n128 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  int v44;
  void (*v45)(char *, char *, uint64_t);
  unint64_t v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  __n128 v52;
  __n128 v53;
  void (*v54)(char *, char *, uint64_t, __n128);
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  __n128 v65;
  unint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  char v71;
  uint64_t v72;
  uint64_t v73;
  char v74;
  unint64_t v75;
  uint64_t v76;
  void (*v77)(char *, char *, uint64_t);
  char *v78;
  uint64_t v79;
  uint64_t v80;
  unsigned int (*v81)(uint64_t, uint64_t, uint64_t);
  void (*v82)(char *, char *, uint64_t);
  char *v83;
  uint64_t v84;
  char *v85;
  unsigned int v86;
  uint64_t v87;
  void (*v88)(char *, uint64_t);
  BOOL v89;
  char *v90;
  char v91;
  void (*v92)(char *, uint64_t);
  char *v93;
  uint64_t v94;
  unint64_t v95;
  uint64_t v96;
  char *v97;
  char *v98;
  char *v99;
  char *v100;
  void (*v101)(uint64_t, char *, uint64_t);
  char *v102;
  uint64_t v103;
  char *v104;
  char *v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  char *v110;
  char *v111;
  char *v112;
  char *v113;
  _BYTE v114[40];
  _QWORD v115[6];

  v96 = a1;
  v2 = sub_5C154(&qword_31F128);
  __chkstk_darwin(v2);
  v105 = (char *)&v94 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v100 = (char *)&v94 - v5;
  __chkstk_darwin(v6);
  v109 = (char *)&v94 - v7;
  v8 = type metadata accessor for Date(0);
  v9 = *(_QWORD *)(v8 - 8);
  v107 = v8;
  v108 = v9;
  __chkstk_darwin(v8);
  v98 = (char *)&v94 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v99 = (char *)&v94 - v12;
  v13 = sub_5C154(&qword_322970);
  v14 = __chkstk_darwin(v13);
  v16 = (char *)&v94 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for AudiobookInfo(0, v14);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v104 = (char *)&v94 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v102 = (char *)&v94 - v21;
  __chkstk_darwin(v22);
  v110 = (char *)&v94 - v23;
  __chkstk_darwin(v24);
  v113 = (char *)&v94 - v25;
  __chkstk_darwin(v26);
  v28 = (char *)&v94 - v27;
  __chkstk_darwin(v29);
  v31 = (char *)&v94 - v30;
  __chkstk_darwin(v32);
  v111 = (char *)&v94 - v33;
  __chkstk_darwin(v34);
  v106 = (char *)&v94 - v35;
  v37 = __chkstk_darwin(v36);
  v97 = (char *)&v94 - v38;
  v39 = *(_QWORD *)(v1 + 16);
  v40 = *(_QWORD *)(v39 + 16);
  if (v40)
  {
    v41 = v39 + 32;
    v101 = *(void (**)(uint64_t, char *, uint64_t))(v1 + 16);
    swift_bridgeObjectRetain(v39);
    v42 = _swiftEmptyArrayStorage;
    v112 = v28;
    do
    {
      sub_5E0D8(v41, (uint64_t)v115);
      sub_5E0D8((uint64_t)v115, (uint64_t)v114);
      v43 = sub_5C154(&qword_31EF60);
      v44 = swift_dynamicCast(v16, v114, v43, v17, 6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v16, v44 ^ 1u, 1, v17);
      _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(v115);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17) == 1)
      {
        sub_5E09C((uint64_t)v16, &qword_322970);
      }
      else
      {
        v45 = *(void (**)(char *, char *, uint64_t))(v18 + 32);
        v45(v31, v16, v17);
        v45(v28, v31, v17);
        if ((swift_isUniquelyReferenced_nonNull_native(v42) & 1) == 0)
          v42 = (_QWORD *)sub_57034(0, v42[2] + 1, 1, (unint64_t)v42);
        v47 = v42[2];
        v46 = v42[3];
        if (v47 >= v46 >> 1)
          v42 = (_QWORD *)sub_57034(v46 > 1, v47 + 1, 1, (unint64_t)v42);
        v42[2] = v47 + 1;
        v48 = (unint64_t)v42
            + ((*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80))
            + *(_QWORD *)(v18 + 72) * v47;
        v28 = v112;
        v45((char *)v48, v112, v17);
      }
      v41 += 40;
      --v40;
    }
    while (v40);
    v37 = swift_bridgeObjectRelease(v101);
  }
  else
  {
    v42 = _swiftEmptyArrayStorage;
  }
  v49 = v42[2];
  v50 = v104;
  if (!v49)
  {
    v65 = swift_bridgeObjectRelease(v42);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v18 + 56))(v96, 1, 1, v17, v65);
    return;
  }
  v95 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  v51 = (char *)v42 + v95;
  v112 = *(char **)(v18 + 16);
  ((void (*)(char *, char *, uint64_t, __n128))v112)(v111, (char *)v42 + v95, v17, v37);
  v52 = swift_bridgeObjectRetain(v42);
  if (v49 == 1)
  {
LABEL_15:
    v53 = swift_bridgeObjectRelease(v42);
    v54 = *(void (**)(char *, char *, uint64_t, __n128))(v18 + 32);
    v55 = v106;
    v54(v106, v111, v17, v53);
    v56 = v97;
    v101 = (void (*)(uint64_t, char *, uint64_t))v54;
    v57 = ((uint64_t (*)(char *, char *, uint64_t))v54)(v97, v55, v17);
    __chkstk_darwin(v57);
    *(&v94 - 2) = (uint64_t)v56;
    v58 = sub_B9AF8((uint64_t (*)(_QWORD))sub_C101C, (uint64_t)(&v94 - 4), (uint64_t)v42, (uint64_t (*)(_QWORD))&type metadata accessor for AudiobookInfo, (void (*)(BOOL, uint64_t, uint64_t))sub_20C884);
    v59 = (char *)v58;
    v60 = *(char **)(v58 + 16);
    if (!v60)
    {
      v64 = 1;
      v63 = v96;
      goto LABEL_32;
    }
    v113 = (char *)(v58 + v95);
    ((void (*)(char *))v112)(v110);
    v61 = v108;
    v62 = v102;
    if (v60 == (_BYTE *)&dword_0 + 1)
    {
LABEL_17:
      v63 = v96;
      v101(v96, v110, v17);
      v64 = 0;
LABEL_32:
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v18 + 56))(v63, v64, 1, v17);
      (*(void (**)(char *, uint64_t))(v18 + 8))(v97, v17);
      swift_bridgeObjectRelease(v59);
      return;
    }
    v75 = 1;
    v111 = v59;
    v106 = v60;
    v103 = v18;
    v76 = v107;
    while (1)
    {
      if (v75 >= *((_QWORD *)v59 + 2))
        goto LABEL_45;
      v77 = (void (*)(char *, char *, uint64_t))v112;
      ((void (*)(char *, char *, uint64_t))v112)(v62, &v113[*(_QWORD *)(v18 + 72) * v75], v17);
      v77(v50, v110, v17);
      v78 = v62;
      v79 = sub_648E0(&qword_322978, (uint64_t (*)(uint64_t))&type metadata accessor for AudiobookInfo, (uint64_t)&protocol conformance descriptor for AudiobookInfo);
      v80 = (uint64_t)v109;
      AssetInfo.dateFinished.getter(v17, v79);
      v81 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v61 + 48);
      if (v81(v80, 1, v76) == 1)
        goto LABEL_40;
      v82 = *(void (**)(char *, char *, uint64_t))(v61 + 32);
      v83 = v99;
      v82(v99, v109, v76);
      v80 = (uint64_t)v100;
      AssetInfo.dateFinished.getter(v17, v79);
      v84 = v80;
      if (v81(v80, 1, v76) == 1)
        break;
      v90 = v98;
      v82(v98, (char *)v84, v76);
      v91 = static Date.> infix(_:_:)(v83, v90);
      v61 = v108;
      v92 = *(void (**)(char *, uint64_t))(v108 + 8);
      v92(v90, v76);
      v92(v83, v76);
      v88 = *(void (**)(char *, uint64_t))(v18 + 8);
      v50 = v104;
      v88(v104, v17);
      v62 = v102;
      if ((v91 & 1) != 0)
      {
LABEL_43:
        v93 = v110;
        v88(v110, v17);
        v101((uint64_t)v93, v62, v17);
        goto LABEL_35;
      }
LABEL_34:
      v88(v62, v17);
LABEL_35:
      v59 = v111;
      if (v106 == (char *)++v75)
        goto LABEL_17;
    }
    (*(void (**)(char *, uint64_t))(v108 + 8))(v83, v76);
    v50 = v104;
    v78 = v102;
LABEL_40:
    sub_5E09C(v80, &qword_31F128);
    v85 = v105;
    AssetInfo.dateFinished.getter(v17, v79);
    v86 = v81((uint64_t)v85, 1, v76);
    v87 = (uint64_t)v85;
    v61 = v108;
    v18 = v103;
    sub_5E09C(v87, &qword_31F128);
    v88 = *(void (**)(char *, uint64_t))(v18 + 8);
    v88(v50, v17);
    v89 = v86 == 1;
    v62 = v78;
    if (!v89)
      goto LABEL_43;
    goto LABEL_34;
  }
  v66 = 1;
  v67 = v113;
  while (v66 < v42[2])
  {
    v69 = ((uint64_t (*)(char *, char *, uint64_t, __n128))v112)(v67, &v51[*(_QWORD *)(v18 + 72) * v66], v17, v52);
    v70 = AudiobookInfo.duration.getter(v69);
    if ((v71 & 1) != 0)
      v72 = 0;
    else
      v72 = v70;
    v73 = AudiobookInfo.duration.getter(v70);
    if ((v74 & 1) != 0)
    {
      if ((v72 & 0x8000000000000000) == 0)
      {
LABEL_30:
        (*(void (**)(char *, uint64_t))(v18 + 8))(v113, v17);
        goto LABEL_21;
      }
    }
    else if (v72 >= v73)
    {
      goto LABEL_30;
    }
    v68 = v111;
    (*(void (**)(char *, uint64_t))(v18 + 8))(v111, v17);
    (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v68, v113, v17);
LABEL_21:
    if (v49 == ++v66)
      goto LABEL_15;
  }
  __break(1u);
LABEL_45:
  __break(1u);
}

uint64_t sub_BB9FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(uint64_t);
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  unsigned int v31;
  uint64_t v32;
  unint64_t v33;
  int64_t v34;
  unint64_t v35;
  int64_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  _QWORD *v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  int64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD *v71;
  char *v72;
  _QWORD *v73;
  _QWORD *v74;
  _QWORD *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;

  v76 = sub_5C154(&qword_322908);
  __chkstk_darwin(v76);
  v74 = (uint64_t *)((char *)&v62 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v6);
  v73 = (uint64_t *)((char *)&v62 - v7);
  __chkstk_darwin(v8);
  v72 = (char *)&v62 - v9;
  __chkstk_darwin(v10);
  v12 = (uint64_t *)((char *)&v62 - v11);
  __chkstk_darwin(v13);
  v15 = (uint64_t (*)(uint64_t))((char *)&v62 - v14);
  v18 = __chkstk_darwin(v16);
  v75 = (uint64_t *)((char *)&v62 - v19);
  v20 = *(_QWORD *)(a1 + 64);
  v66 = a1 + 64;
  v21 = *(_BYTE *)(a1 + 32);
  v22 = 1 << v21;
  v23 = -1;
  if (1 << v21 < 64)
    v23 = ~(-1 << (1 << v21));
  v24 = v23 & v20;
  if (v24)
  {
    v63 = v17;
    v64 = a2;
    v65 = v2;
    a2 = 0;
    v25 = __clz(__rbit64(v24));
    v26 = (v24 - 1) & v24;
    v67 = (unint64_t)(v22 + 63) >> 6;
  }
  else
  {
    v31 = v21 & 0x3F;
    if (v31 <= 6)
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v17 + 56))(a2, 1, 1, v76, v18);
    v67 = (unint64_t)(v22 + 63) >> 6;
    v58 = *(_QWORD *)(a1 + 72);
    if (v58)
    {
      v63 = v17;
      v64 = a2;
      v65 = v2;
      a2 = 1;
    }
    else
    {
      if (v31 < 8)
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v17 + 56))(a2, 1, 1, v76, v18);
      v58 = *(_QWORD *)(a1 + 80);
      v64 = a2;
      v65 = v2;
      v63 = v17;
      if (v58)
      {
        a2 = 2;
      }
      else
      {
        v58 = *(_QWORD *)(a1 + 88);
        if (v58)
        {
          a2 = 3;
        }
        else
        {
LABEL_39:
          if (v31 < 9)
            return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v17 + 56))(a2, 1, 1, v76, v18);
          v58 = *(_QWORD *)(a1 + 96);
          if (v58)
          {
            a2 = 4;
          }
          else
          {
            v58 = *(_QWORD *)(a1 + 104);
            if (!v58)
              goto LABEL_45;
            a2 = 5;
          }
        }
      }
    }
LABEL_32:
    v26 = (v58 - 1) & v58;
    v25 = __clz(__rbit64(v58)) + (a2 << 6);
  }
  v27 = *(_QWORD *)(a1 + 56);
  v28 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v25);
  v30 = *v28;
  v29 = v28[1];
  v70 = type metadata accessor for TopAuthorHighlightData(0);
  v68 = *(_QWORD *)(*(_QWORD *)(v70 - 8) + 72);
  sub_5E11C(v27 + v68 * v25, (uint64_t)v15 + *(int *)(v76 + 48), type metadata accessor for TopAuthorHighlightData);
  *(_QWORD *)v15 = v30;
  *((_QWORD *)v15 + 1) = v29;
  sub_BF754((uint64_t)v15, (uint64_t)v75);
  swift_bridgeObjectRetain(a1);
  v18 = swift_bridgeObjectRetain(v29);
  v71 = v12;
  v69 = a1;
  v12 = v75;
  v32 = v76;
  v15 = type metadata accessor for TopAuthorHighlightData;
  while (1)
  {
    if (v26)
    {
      v77 = (v26 - 1) & v26;
      v78 = a2;
      v33 = __clz(__rbit64(v26)) | (a2 << 6);
      goto LABEL_26;
    }
    v34 = a2 + 1;
    if (__OFADD__(a2, 1))
    {
      __break(1u);
      goto LABEL_39;
    }
    if (v34 >= v67)
      goto LABEL_28;
    v35 = *(_QWORD *)(v66 + 8 * v34);
    v36 = a2 + 1;
    if (!v35)
    {
      v36 = a2 + 2;
      if (a2 + 2 >= v67)
        goto LABEL_28;
      v35 = *(_QWORD *)(v66 + 8 * v36);
      if (!v35)
      {
        v36 = a2 + 3;
        if (a2 + 3 >= v67)
          goto LABEL_28;
        v35 = *(_QWORD *)(v66 + 8 * v36);
        if (!v35)
        {
          v36 = a2 + 4;
          if (a2 + 4 >= v67)
            goto LABEL_28;
          v35 = *(_QWORD *)(v66 + 8 * v36);
          if (!v35)
            break;
        }
      }
    }
LABEL_25:
    v77 = (v35 - 1) & v35;
    v78 = v36;
    v33 = __clz(__rbit64(v35)) + (v36 << 6);
LABEL_26:
    v38 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v33);
    v39 = *v38;
    v40 = v38[1];
    v41 = v72;
    sub_5E11C(*(_QWORD *)(a1 + 56) + v33 * v68, (uint64_t)&v72[*(int *)(v32 + 48)], type metadata accessor for TopAuthorHighlightData);
    *v41 = v39;
    v41[1] = v40;
    v42 = v71;
    sub_BF754((uint64_t)v41, (uint64_t)v71);
    v43 = *(int *)(v32 + 48);
    v44 = v73;
    v45 = (uint64_t)v73 + v43;
    v46 = v12[1];
    *v73 = *v12;
    v44[1] = v46;
    sub_5E11C((uint64_t)v12 + v43, v45, type metadata accessor for TopAuthorHighlightData);
    v47 = v70;
    v48 = *(_QWORD *)(v45 + *(int *)(v70 + 20));
    swift_bridgeObjectRetain(v40);
    swift_bridgeObjectRetain(v48);
    sub_6685C(v45, type metadata accessor for TopAuthorHighlightData);
    v49 = *(_QWORD *)(v48 + 16);
    swift_bridgeObjectRelease(v48);
    v50 = *(int *)(v32 + 48);
    v51 = v74;
    v52 = (uint64_t)v74 + v50;
    v53 = v42[1];
    *v74 = *v42;
    v51[1] = v53;
    sub_5E11C((uint64_t)v42 + v50, v52, type metadata accessor for TopAuthorHighlightData);
    v54 = *(_QWORD *)(v52 + *(int *)(v47 + 20));
    swift_bridgeObjectRetain(v54);
    sub_6685C(v52, type metadata accessor for TopAuthorHighlightData);
    v55 = *(_QWORD *)(v54 + 16);
    swift_bridgeObjectRelease(v54);
    if (v49 >= v55)
    {
      sub_5E09C((uint64_t)v42, &qword_322908);
    }
    else
    {
      sub_5E09C((uint64_t)v12, &qword_322908);
      sub_BF754((uint64_t)v42, (uint64_t)v12);
    }
    a1 = v69;
    a2 = v78;
    v26 = v77;
  }
  v37 = a2 + 5;
  if (a2 + 5 >= v67)
  {
LABEL_28:
    swift_release(a1);
    v56 = v64;
    sub_BF754((uint64_t)v75, v64);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v63 + 56))(v56, 0, 1, v76);
  }
  v35 = *(_QWORD *)(v66 + 8 * v37);
  if (v35)
  {
    v36 = a2 + 5;
    goto LABEL_25;
  }
  while (1)
  {
    v36 = v37 + 1;
    if (__OFADD__(v37, 1))
      break;
    if (v36 >= v67)
      goto LABEL_28;
    v35 = *(_QWORD *)(v66 + 8 * v36);
    ++v37;
    if (v35)
      goto LABEL_25;
  }
  __break(1u);
LABEL_45:
  v59 = 0;
  v60 = 6;
  if (v67 > 6)
    v60 = v67;
  v61 = v60 - 6;
  while (v61 != v59)
  {
    v58 = *(_QWORD *)(a1 + 112 + 8 * v59++);
    if (v58)
    {
      a2 = v59 + 5;
      goto LABEL_32;
    }
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v17 + 56))(a2, 1, 1, v76, v18);
}

uint64_t sub_BBF48@<X0>(uint64_t a1@<X0>, unint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t (*v19)(uint64_t);
  uint64_t v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  unsigned int v37;
  char *v38;
  unint64_t v39;
  int64_t v40;
  unint64_t v41;
  int64_t v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void (*v56)(char *, uint64_t, uint64_t);
  uint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void (*v62)(unint64_t, uint64_t);
  uint64_t v63;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  int64_t v74;
  _QWORD *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  _QWORD *v80;
  _QWORD *v81;
  char *v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  _QWORD *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;

  v5 = type metadata accessor for Date(0);
  v84 = *(_QWORD *)(v5 - 8);
  v85 = v5;
  __chkstk_darwin(v5);
  v83 = (char *)&v69 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v82 = (char *)&v69 - v8;
  v87 = sub_5C154(&qword_322908);
  __chkstk_darwin(v87);
  v81 = (uint64_t *)((char *)&v69 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v10);
  v80 = (uint64_t *)((char *)&v69 - v11);
  __chkstk_darwin(v12);
  v79 = (char *)&v69 - v13;
  __chkstk_darwin(v14);
  v16 = (uint64_t *)((char *)&v69 - v15);
  __chkstk_darwin(v17);
  v19 = (uint64_t (*)(uint64_t))((char *)&v69 - v18);
  v22 = __chkstk_darwin(v20);
  v86 = (uint64_t *)((char *)&v69 - v23);
  v24 = *(_QWORD *)(a1 + 64);
  v73 = a1 + 64;
  v25 = *(_BYTE *)(a1 + 32);
  v26 = 1 << v25;
  v27 = -1;
  if (1 << v25 < 64)
    v27 = ~(-1 << (1 << v25));
  v28 = v27 & v24;
  if (v28)
  {
    v70 = v21;
    v71 = a2;
    v72 = v2;
    v29 = 0;
    a2 = __clz(__rbit64(v28));
    v30 = (v28 - 1) & v28;
    v74 = (unint64_t)(v26 + 63) >> 6;
  }
  else
  {
    v37 = v25 & 0x3F;
    if (v37 <= 6)
      return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t, uint64_t, __n128))(v21 + 56))(a2, 1, 1, v87, v22);
    v74 = (unint64_t)(v26 + 63) >> 6;
    v65 = *(_QWORD *)(a1 + 72);
    if (v65)
    {
      v70 = v21;
      v71 = a2;
      v72 = v2;
      v29 = 1;
    }
    else
    {
      if (v37 < 8)
        return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t, uint64_t, __n128))(v21 + 56))(a2, 1, 1, v87, v22);
      v65 = *(_QWORD *)(a1 + 80);
      v71 = a2;
      v72 = v2;
      v70 = v21;
      if (v65)
      {
        v29 = 2;
      }
      else
      {
        v65 = *(_QWORD *)(a1 + 88);
        if (v65)
        {
          v29 = 3;
        }
        else
        {
LABEL_39:
          if (v37 < 9)
            return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t, uint64_t, __n128))(v21 + 56))(a2, 1, 1, v87, v22);
          v65 = *(_QWORD *)(a1 + 96);
          if (v65)
          {
            v29 = 4;
          }
          else
          {
            v65 = *(_QWORD *)(a1 + 104);
            if (!v65)
              goto LABEL_45;
            v29 = 5;
          }
        }
      }
    }
LABEL_32:
    v30 = (v65 - 1) & v65;
    a2 = __clz(__rbit64(v65)) + (v29 << 6);
  }
  v31 = *(_QWORD *)(a1 + 56);
  v32 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * a2);
  v33 = *v32;
  v34 = v32[1];
  v35 = type metadata accessor for TopAuthorHighlightData(0);
  v76 = *(_QWORD *)(*(_QWORD *)(v35 - 8) + 72);
  v77 = v35;
  sub_5E11C(v31 + v76 * a2, (uint64_t)v19 + *(int *)(v87 + 48), type metadata accessor for TopAuthorHighlightData);
  *(_QWORD *)v19 = v33;
  *((_QWORD *)v19 + 1) = v34;
  v36 = v86;
  sub_BF754((uint64_t)v19, (uint64_t)v86);
  swift_bridgeObjectRetain(a1);
  v22 = swift_bridgeObjectRetain(v34);
  v78 = a1;
  v75 = v16;
  v19 = type metadata accessor for TopAuthorHighlightData;
  v38 = v82;
  while (1)
  {
    if (v30)
    {
      v88 = (v30 - 1) & v30;
      v89 = v29;
      v39 = __clz(__rbit64(v30)) | (v29 << 6);
      goto LABEL_26;
    }
    v40 = v29 + 1;
    if (__OFADD__(v29, 1))
    {
      __break(1u);
      goto LABEL_39;
    }
    if (v40 >= v74)
      goto LABEL_28;
    v41 = *(_QWORD *)(v73 + 8 * v40);
    v42 = v29 + 1;
    if (!v41)
    {
      v42 = v29 + 2;
      if (v29 + 2 >= v74)
        goto LABEL_28;
      v41 = *(_QWORD *)(v73 + 8 * v42);
      if (!v41)
      {
        v42 = v29 + 3;
        if (v29 + 3 >= v74)
          goto LABEL_28;
        v41 = *(_QWORD *)(v73 + 8 * v42);
        if (!v41)
        {
          v42 = v29 + 4;
          if (v29 + 4 >= v74)
            goto LABEL_28;
          v41 = *(_QWORD *)(v73 + 8 * v42);
          if (!v41)
            break;
        }
      }
    }
LABEL_25:
    v88 = (v41 - 1) & v41;
    v89 = v42;
    v39 = __clz(__rbit64(v41)) + (v42 << 6);
LABEL_26:
    v44 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v39);
    v46 = *v44;
    v45 = v44[1];
    v47 = v87;
    v48 = v79;
    sub_5E11C(*(_QWORD *)(a1 + 56) + v39 * v76, (uint64_t)&v79[*(int *)(v87 + 48)], type metadata accessor for TopAuthorHighlightData);
    *v48 = v46;
    v48[1] = v45;
    sub_BF754((uint64_t)v48, (uint64_t)v16);
    v49 = *(int *)(v47 + 48);
    v50 = v80;
    v51 = (uint64_t)v80 + v49;
    v52 = v16[1];
    *v80 = *v16;
    v50[1] = v52;
    sub_5E11C((uint64_t)v16 + v49, v51, type metadata accessor for TopAuthorHighlightData);
    v53 = v77;
    v54 = v84;
    v55 = v85;
    v56 = *(void (**)(char *, uint64_t, uint64_t))(v84 + 16);
    v56(v38, v51 + *(int *)(v77 + 24), v85);
    swift_bridgeObjectRetain(v45);
    sub_6685C(v51, type metadata accessor for TopAuthorHighlightData);
    v57 = *(int *)(v47 + 48);
    v58 = v81;
    v59 = (uint64_t)v81 + v57;
    v36 = v86;
    v60 = (uint64_t)v86 + v57;
    v61 = v86[1];
    *v81 = *v86;
    v58[1] = v61;
    sub_5E11C(v60, v59, type metadata accessor for TopAuthorHighlightData);
    a2 = (unint64_t)v83;
    v56(v83, v59 + *(int *)(v53 + 24), v55);
    sub_6685C(v59, type metadata accessor for TopAuthorHighlightData);
    LOBYTE(v59) = static Date.> infix(_:_:)(v38, a2);
    v62 = *(void (**)(unint64_t, uint64_t))(v54 + 8);
    v62(a2, v55);
    v62((unint64_t)v38, v55);
    if ((v59 & 1) != 0)
    {
      sub_5E09C((uint64_t)v36, &qword_322908);
      v16 = v75;
      sub_BF754((uint64_t)v75, (uint64_t)v36);
    }
    else
    {
      v16 = v75;
      sub_5E09C((uint64_t)v75, &qword_322908);
    }
    a1 = v78;
    v29 = v89;
    v30 = v88;
  }
  v43 = v29 + 5;
  if (v29 + 5 >= v74)
  {
LABEL_28:
    swift_release(a1);
    v63 = v71;
    sub_BF754((uint64_t)v36, v71);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v70 + 56))(v63, 0, 1, v87);
  }
  v41 = *(_QWORD *)(v73 + 8 * v43);
  if (v41)
  {
    v42 = v29 + 5;
    goto LABEL_25;
  }
  while (1)
  {
    v42 = v43 + 1;
    if (__OFADD__(v43, 1))
      break;
    if (v42 >= v74)
      goto LABEL_28;
    v41 = *(_QWORD *)(v73 + 8 * v42);
    ++v43;
    if (v41)
      goto LABEL_25;
  }
  __break(1u);
LABEL_45:
  v66 = 0;
  v67 = 6;
  if (v74 > 6)
    v67 = v74;
  v68 = v67 - 6;
  while (v68 != v66)
  {
    v65 = *(_QWORD *)(a1 + 112 + 8 * v66++);
    if (v65)
    {
      v29 = v66 + 5;
      goto LABEL_32;
    }
  }
  return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t, uint64_t, __n128))(v21 + 56))(a2, 1, 1, v87, v22);
}

uint64_t sub_BC520()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  int v18;
  void (*v19)(char *, char *, uint64_t);
  char *v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  __n128 v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  char v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t result;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  BOOL v46;
  double v47;
  char *v48;
  uint64_t v49;
  char *v50;
  char *v51;
  _BYTE v52[40];
  _QWORD v53[5];

  v1 = sub_5C154(&qword_322950);
  __chkstk_darwin(v1);
  v3 = (char *)&v48 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for BookInfo(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v48 - v9;
  __chkstk_darwin(v11);
  v51 = (char *)&v48 - v12;
  v13 = *(_QWORD *)(v0 + 16);
  v14 = *(_QWORD *)(v13 + 16);
  if (v14)
  {
    v48 = v7;
    v49 = v13;
    v15 = v13 + 32;
    swift_bridgeObjectRetain(v13);
    v16 = (char *)_swiftEmptyArrayStorage;
    v50 = v10;
    do
    {
      sub_5E0D8(v15, (uint64_t)v53);
      sub_5E0D8((uint64_t)v53, (uint64_t)v52);
      v17 = sub_5C154(&qword_31EF60);
      v18 = swift_dynamicCast(v3, v52, v17, v4, 6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v5 + 56))(v3, v18 ^ 1u, 1, v4);
      _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(v53);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
      {
        sub_5E09C((uint64_t)v3, &qword_322950);
      }
      else
      {
        v19 = *(void (**)(char *, char *, uint64_t))(v5 + 32);
        v20 = v51;
        v19(v51, v3, v4);
        v19(v10, v20, v4);
        if ((swift_isUniquelyReferenced_nonNull_native(v16) & 1) != 0)
          v21 = (unint64_t)v16;
        else
          v21 = sub_57154(0, *((_QWORD *)v16 + 2) + 1, 1, (unint64_t)v16);
        v23 = *(_QWORD *)(v21 + 16);
        v22 = *(_QWORD *)(v21 + 24);
        if (v23 >= v22 >> 1)
          v21 = sub_57154(v22 > 1, v23 + 1, 1, v21);
        *(_QWORD *)(v21 + 16) = v23 + 1;
        v16 = (char *)v21;
        v24 = v21
            + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))
            + *(_QWORD *)(v5 + 72) * v23;
        v10 = v50;
        v19((char *)v24, v50, v4);
      }
      v15 += 40;
      --v14;
    }
    while (v14);
    swift_bridgeObjectRelease(v49);
    v25 = v16;
    v7 = v48;
    v26 = *((_QWORD *)v25 + 2);
    if (v26)
      goto LABEL_13;
LABEL_23:
    swift_bridgeObjectRelease(v25);
    v31 = _swiftEmptyArrayStorage;
    goto LABEL_24;
  }
  v25 = (char *)_swiftEmptyArrayStorage;
  v26 = _swiftEmptyArrayStorage[2];
  if (!v26)
    goto LABEL_23;
LABEL_13:
  v27 = &v25[(*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80)];
  v28 = *(_QWORD *)(v5 + 72);
  v29 = *(char **)(v5 + 16);
  v50 = v25;
  v51 = v29;
  v30 = swift_bridgeObjectRetain(v25);
  v31 = _swiftEmptyArrayStorage;
  v32 = v28;
  do
  {
    v33 = ((uint64_t (*)(char *, char *, uint64_t, __n128))v51)(v7, v27, v4, v30);
    v34 = BookInfo.pageCount.getter(v33);
    v36 = v35;
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    if ((v36 & 1) == 0)
    {
      if ((swift_isUniquelyReferenced_nonNull_native(v31) & 1) == 0)
        v31 = sub_57048(0, v31[2] + 1, 1, v31);
      v38 = v31[2];
      v37 = v31[3];
      if (v38 >= v37 >> 1)
        v31 = sub_57048((_QWORD *)(v37 > 1), v38 + 1, 1, v31);
      v31[2] = v38 + 1;
      v31[v38 + 4] = v34;
      v28 = v32;
    }
    v27 += v28;
    --v26;
  }
  while (v26);
  swift_bridgeObjectRelease_n(v50, 2);
LABEL_24:
  v53[0] = v31;
  v39 = sub_5C154(&qword_322960);
  v40 = sub_C1040(&qword_322968, &qword_322960);
  *(double *)&result = COERCE_DOUBLE(Collection.isNotEmpty.getter(v39, v40));
  if ((result & 1) != 0)
  {
    v42 = v31[2];
    if (v42)
    {
      v43 = 0;
      v44 = 0;
      while (1)
      {
        v45 = v31[v43 + 4];
        v46 = __OFADD__(v44, v45);
        v44 += v45;
        if (v46)
          break;
        if (v42 == ++v43)
        {
          swift_bridgeObjectRelease(v31);
          v47 = (double)v44;
          goto LABEL_32;
        }
      }
      __break(1u);
    }
    else
    {
      swift_bridgeObjectRelease(v31);
      v47 = 0.0;
LABEL_32:
      *(double *)&result = v47 / (double)v42;
    }
  }
  else
  {
    swift_bridgeObjectRelease(v31);
    *(double *)&result = 0.0;
  }
  return result;
}

void sub_BC958(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __n128 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  int v43;
  void (*v44)(char *, char *, uint64_t);
  unint64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  __n128 v51;
  __n128 v52;
  void (*v53)(char *, char *, uint64_t, __n128);
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  __n128 v64;
  unint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  char v70;
  uint64_t v71;
  uint64_t v72;
  char v73;
  unint64_t v74;
  uint64_t v75;
  void (*v76)(char *, char *, uint64_t);
  char *v77;
  uint64_t v78;
  uint64_t v79;
  unsigned int (*v80)(uint64_t, uint64_t, uint64_t);
  void (*v81)(char *, char *, uint64_t);
  char *v82;
  uint64_t v83;
  char *v84;
  unsigned int v85;
  uint64_t v86;
  void (*v87)(char *, uint64_t);
  BOOL v88;
  char *v89;
  char v90;
  void (*v91)(char *, uint64_t);
  char *v92;
  uint64_t v93;
  unint64_t v94;
  uint64_t v95;
  char *v96;
  char *v97;
  char *v98;
  char *v99;
  void (*v100)(uint64_t, char *, uint64_t);
  char *v101;
  uint64_t v102;
  char *v103;
  char *v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  char *v109;
  char *v110;
  char *v111;
  char *v112;
  _BYTE v113[40];
  _QWORD v114[6];

  v95 = a1;
  v2 = sub_5C154(&qword_31F128);
  __chkstk_darwin(v2);
  v104 = (char *)&v93 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v99 = (char *)&v93 - v5;
  __chkstk_darwin(v6);
  v108 = (char *)&v93 - v7;
  v8 = type metadata accessor for Date(0);
  v9 = *(_QWORD *)(v8 - 8);
  v106 = v8;
  v107 = v9;
  __chkstk_darwin(v8);
  v97 = (char *)&v93 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v98 = (char *)&v93 - v12;
  v13 = sub_5C154(&qword_322950);
  __chkstk_darwin(v13);
  v15 = (char *)&v93 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for BookInfo(0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v103 = (char *)&v93 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v101 = (char *)&v93 - v20;
  __chkstk_darwin(v21);
  v109 = (char *)&v93 - v22;
  __chkstk_darwin(v23);
  v112 = (char *)&v93 - v24;
  __chkstk_darwin(v25);
  v27 = (char *)&v93 - v26;
  __chkstk_darwin(v28);
  v30 = (char *)&v93 - v29;
  __chkstk_darwin(v31);
  v110 = (char *)&v93 - v32;
  __chkstk_darwin(v33);
  v105 = (char *)&v93 - v34;
  v36 = __chkstk_darwin(v35);
  v96 = (char *)&v93 - v37;
  v38 = *(_QWORD *)(v1 + 16);
  v39 = *(_QWORD *)(v38 + 16);
  if (v39)
  {
    v40 = v38 + 32;
    v100 = *(void (**)(uint64_t, char *, uint64_t))(v1 + 16);
    swift_bridgeObjectRetain(v38);
    v41 = _swiftEmptyArrayStorage;
    v111 = v27;
    do
    {
      sub_5E0D8(v40, (uint64_t)v114);
      sub_5E0D8((uint64_t)v114, (uint64_t)v113);
      v42 = sub_5C154(&qword_31EF60);
      v43 = swift_dynamicCast(v15, v113, v42, v16, 6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v15, v43 ^ 1u, 1, v16);
      _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(v114);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
      {
        sub_5E09C((uint64_t)v15, &qword_322950);
      }
      else
      {
        v44 = *(void (**)(char *, char *, uint64_t))(v17 + 32);
        v44(v30, v15, v16);
        v44(v27, v30, v16);
        if ((swift_isUniquelyReferenced_nonNull_native(v41) & 1) == 0)
          v41 = (_QWORD *)sub_57154(0, v41[2] + 1, 1, (unint64_t)v41);
        v46 = v41[2];
        v45 = v41[3];
        if (v46 >= v45 >> 1)
          v41 = (_QWORD *)sub_57154(v45 > 1, v46 + 1, 1, (unint64_t)v41);
        v41[2] = v46 + 1;
        v47 = (unint64_t)v41
            + ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80))
            + *(_QWORD *)(v17 + 72) * v46;
        v27 = v111;
        v44((char *)v47, v111, v16);
      }
      v40 += 40;
      --v39;
    }
    while (v39);
    v36 = swift_bridgeObjectRelease(v100);
  }
  else
  {
    v41 = _swiftEmptyArrayStorage;
  }
  v48 = v41[2];
  v49 = v103;
  if (!v48)
  {
    v64 = swift_bridgeObjectRelease(v41);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v17 + 56))(v95, 1, 1, v16, v64);
    return;
  }
  v94 = (*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  v50 = (char *)v41 + v94;
  v111 = *(char **)(v17 + 16);
  ((void (*)(char *, char *, uint64_t, __n128))v111)(v110, (char *)v41 + v94, v16, v36);
  v51 = swift_bridgeObjectRetain(v41);
  if (v48 == 1)
  {
LABEL_15:
    v52 = swift_bridgeObjectRelease(v41);
    v53 = *(void (**)(char *, char *, uint64_t, __n128))(v17 + 32);
    v54 = v105;
    v53(v105, v110, v16, v52);
    v55 = v96;
    v100 = (void (*)(uint64_t, char *, uint64_t))v53;
    v56 = ((uint64_t (*)(char *, char *, uint64_t))v53)(v96, v54, v16);
    __chkstk_darwin(v56);
    *(&v93 - 2) = (uint64_t)v55;
    v57 = sub_B9AF8((uint64_t (*)(_QWORD))sub_C0FE4, (uint64_t)(&v93 - 4), (uint64_t)v41, (uint64_t (*)(_QWORD))&type metadata accessor for BookInfo, (void (*)(BOOL, uint64_t, uint64_t))sub_20C8B0);
    v58 = (char *)v57;
    v59 = *(char **)(v57 + 16);
    if (!v59)
    {
      v63 = 1;
      v62 = v95;
      goto LABEL_32;
    }
    v112 = (char *)(v57 + v94);
    ((void (*)(char *))v111)(v109);
    v60 = v107;
    v61 = v101;
    if (v59 == (_BYTE *)&dword_0 + 1)
    {
LABEL_17:
      v62 = v95;
      v100(v95, v109, v16);
      v63 = 0;
LABEL_32:
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v17 + 56))(v62, v63, 1, v16);
      (*(void (**)(char *, uint64_t))(v17 + 8))(v96, v16);
      swift_bridgeObjectRelease(v58);
      return;
    }
    v74 = 1;
    v110 = v58;
    v105 = v59;
    v102 = v17;
    v75 = v106;
    while (1)
    {
      if (v74 >= *((_QWORD *)v58 + 2))
        goto LABEL_45;
      v76 = (void (*)(char *, char *, uint64_t))v111;
      ((void (*)(char *, char *, uint64_t))v111)(v61, &v112[*(_QWORD *)(v17 + 72) * v74], v16);
      v76(v49, v109, v16);
      v77 = v61;
      v78 = sub_648E0(&qword_322958, (uint64_t (*)(uint64_t))&type metadata accessor for BookInfo, (uint64_t)&protocol conformance descriptor for BookInfo);
      v79 = (uint64_t)v108;
      AssetInfo.dateFinished.getter(v16, v78);
      v80 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v60 + 48);
      if (v80(v79, 1, v75) == 1)
        goto LABEL_40;
      v81 = *(void (**)(char *, char *, uint64_t))(v60 + 32);
      v82 = v98;
      v81(v98, v108, v75);
      v79 = (uint64_t)v99;
      AssetInfo.dateFinished.getter(v16, v78);
      v83 = v79;
      if (v80(v79, 1, v75) == 1)
        break;
      v89 = v97;
      v81(v97, (char *)v83, v75);
      v90 = static Date.> infix(_:_:)(v82, v89);
      v60 = v107;
      v91 = *(void (**)(char *, uint64_t))(v107 + 8);
      v91(v89, v75);
      v91(v82, v75);
      v87 = *(void (**)(char *, uint64_t))(v17 + 8);
      v49 = v103;
      v87(v103, v16);
      v61 = v101;
      if ((v90 & 1) != 0)
      {
LABEL_43:
        v92 = v109;
        v87(v109, v16);
        v100((uint64_t)v92, v61, v16);
        goto LABEL_35;
      }
LABEL_34:
      v87(v61, v16);
LABEL_35:
      v58 = v110;
      if (v105 == (char *)++v74)
        goto LABEL_17;
    }
    (*(void (**)(char *, uint64_t))(v107 + 8))(v82, v75);
    v49 = v103;
    v77 = v101;
LABEL_40:
    sub_5E09C(v79, &qword_31F128);
    v84 = v104;
    AssetInfo.dateFinished.getter(v16, v78);
    v85 = v80((uint64_t)v84, 1, v75);
    v86 = (uint64_t)v84;
    v60 = v107;
    v17 = v102;
    sub_5E09C(v86, &qword_31F128);
    v87 = *(void (**)(char *, uint64_t))(v17 + 8);
    v87(v49, v16);
    v88 = v85 == 1;
    v61 = v77;
    if (!v88)
      goto LABEL_43;
    goto LABEL_34;
  }
  v65 = 1;
  v66 = v112;
  while (v65 < v41[2])
  {
    v68 = ((uint64_t (*)(char *, char *, uint64_t, __n128))v111)(v66, &v50[*(_QWORD *)(v17 + 72) * v65], v16, v51);
    v69 = BookInfo.pageCount.getter(v68);
    if ((v70 & 1) != 0)
      v71 = 0;
    else
      v71 = v69;
    v72 = BookInfo.pageCount.getter(v69);
    if ((v73 & 1) != 0)
    {
      if ((v71 & 0x8000000000000000) == 0)
      {
LABEL_30:
        (*(void (**)(char *, uint64_t))(v17 + 8))(v112, v16);
        goto LABEL_21;
      }
    }
    else if (v71 >= v72)
    {
      goto LABEL_30;
    }
    v67 = v110;
    (*(void (**)(char *, uint64_t))(v17 + 8))(v110, v16);
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v67, v112, v16);
LABEL_21:
    if (v48 == ++v65)
      goto LABEL_15;
  }
  __break(1u);
LABEL_45:
  __break(1u);
}

BOOL sub_BD22C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v4;
  char v5;
  char v6;
  uint64_t v7;
  char v8;
  _BOOL4 v10;

  v4 = a3();
  v6 = v5;
  v7 = a3();
  v10 = (v8 & 1) == 0 && v4 == v7;
  if ((v6 & 1) != 0)
    return v8 & 1;
  else
    return v10;
}

uint64_t sub_BD294()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  _QWORD *v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t i;
  uint64_t v37;
  uint64_t v38;
  __n128 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  void (*v52)(char *, uint64_t, uint64_t, uint64_t);
  char *v53;
  uint64_t v54;
  __n128 v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t *v60;
  uint64_t isUniquelyReferenced_nonNull_native;
  char v62;
  unint64_t v63;
  uint64_t v64;
  _BOOL8 v65;
  uint64_t v66;
  char v67;
  unint64_t v68;
  char v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  _QWORD *v73;
  uint64_t v74;
  BOOL v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  _QWORD *v79;
  char *v80;
  char *v81;
  char v82;
  void (*v83)(char *, char *, uint64_t);
  char *v84;
  _QWORD *v85;
  uint64_t v86;
  uint64_t inited;
  uint64_t v88;
  char *v89;
  _QWORD *v90;
  uint64_t v91;
  char v92;
  unint64_t v93;
  uint64_t v94;
  _BOOL8 v95;
  uint64_t v96;
  char v97;
  unint64_t v98;
  char v99;
  uint64_t v100;
  unint64_t v101;
  uint64_t v102;
  _QWORD *v103;
  uint64_t v104;
  uint64_t v105;
  void (*v106)(char *, uint64_t);
  uint64_t v107;
  _QWORD *v108;
  _QWORD *v109;
  uint64_t result;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  unint64_t v118;
  _QWORD *v119;
  char *v120;
  uint64_t v121;
  char *v122;
  char *v123;
  char *v124;
  __int128 v125;
  uint64_t *v126;
  void (*v127)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t (*v137)(char *, unint64_t, uint64_t);
  _QWORD *v138;
  char v139[24];
  _QWORD *v140;
  uint64_t v141;
  uint64_t v142;

  v1 = v0;
  v2 = sub_5C154(&qword_322910);
  __chkstk_darwin(v2);
  v4 = (char *)&v111 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v114 = (char *)&v111 - v6;
  __chkstk_darwin(v7);
  v9 = (char *)&v111 - v8;
  v10 = type metadata accessor for GenreHighlight(0);
  v129 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v126 = (uint64_t *)((char *)&v111 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v12);
  v121 = (uint64_t)&v111 - v13;
  __chkstk_darwin(v14);
  v120 = (char *)&v111 - v15;
  __chkstk_darwin(v16);
  v119 = (uint64_t *)((char *)&v111 - v17);
  v18 = sub_5C154(&qword_31F128);
  __chkstk_darwin(v18);
  v20 = (char *)&v111 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v133 = type metadata accessor for Date(0);
  v21 = *(_QWORD *)(v133 - 8);
  __chkstk_darwin(v133);
  v123 = (char *)&v111 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  v131 = (char *)&v111 - v24;
  v25 = type metadata accessor for GenreInfo(0);
  v135 = *(_QWORD *)(v25 - 8);
  __chkstk_darwin(v25);
  v27 = (char *)&v111 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = *(_QWORD *)(v1 + 16);
  swift_bridgeObjectRetain(v28);
  v29 = (_QWORD *)sub_52F54((uint64_t)_swiftEmptyArrayStorage);
  v116 = *(_QWORD *)(v28 + 16);
  if (!v116)
  {
LABEL_50:
    swift_bridgeObjectRelease(v28);
    swift_bridgeObjectRetain_n(v29, 2);
    v108 = sub_1A58B8((uint64_t)v29);
    swift_bridgeObjectRelease(v29);
    v140 = v108;
    sub_BEE68(&v140);
    swift_bridgeObjectRelease(v29);
    v109 = v140;
    swift_bridgeObjectRelease(v29);
    return (uint64_t)v109;
  }
  v30 = 0;
  v115 = v28 + 32;
  v125 = xmmword_258070;
  v122 = v4;
  v124 = v9;
  v130 = v10;
  v132 = v20;
  v128 = v21;
  v112 = v28;
  v113 = v25;
  while (1)
  {
    if (v30 >= *(_QWORD *)(v28 + 16))
      goto LABEL_52;
    sub_5E0D8(v115 + 40 * v30, (uint64_t)&v140);
    v31 = v141;
    v32 = v142;
    sub_66898(&v140, v141);
    v33 = ContentInfo.genres.getter(v31, *(_QWORD *)(v32 + 8));
    if (v33)
      break;
LABEL_4:
    ++v30;
    _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(&v140);
    if (v30 == v116)
      goto LABEL_50;
  }
  v118 = v30;
  v34 = *(_QWORD *)(v33 + 16);
  v117 = v33;
  if (!v34)
  {
LABEL_3:
    swift_bridgeObjectRelease(v117);
    v28 = v112;
    v30 = v118;
    goto LABEL_4;
  }
  v35 = v33 + ((*(unsigned __int8 *)(v135 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v135 + 80));
  v134 = *(_QWORD *)(v135 + 72);
  v137 = *(uint64_t (**)(char *, unint64_t, uint64_t))(v135 + 16);
  for (i = v137(v27, v35, v25); ; i = v137(v27, v35, v25))
  {
    GenreInfo.parentId.getter(i);
    v38 = v37;
    v39 = swift_bridgeObjectRelease(v37);
    if (!v38 || (v136 = GenreInfo.id.getter(v39), !v40))
    {
      (*(void (**)(char *, uint64_t))(v135 + 8))(v27, v25);
      goto LABEL_10;
    }
    v41 = v40;
    v42 = v141;
    v43 = v142;
    sub_66898(&v140, v141);
    v44 = v43;
    v45 = (uint64_t)v132;
    AssetInfo.dateFinished.getter(v42, v44);
    v46 = v133;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v21 + 48))(v45, 1, v133) == 1)
    {
      (*(void (**)(char *, uint64_t))(v135 + 8))(v27, v25);
      swift_bridgeObjectRelease(v41);
      sub_5E09C(v45, &qword_31F128);
      goto LABEL_10;
    }
    (*(void (**)(char *, uint64_t, uint64_t))(v21 + 32))(v131, v45, v46);
    if (!v29[2])
    {
      v49 = v130;
      v127 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v129 + 56);
      v127(v9, 1, 1, v130);
      goto LABEL_22;
    }
    v47 = v46;
    swift_bridgeObjectRetain(v41);
    v48 = sub_582B4(v136, v41);
    v49 = v130;
    v51 = v129;
    if ((v50 & 1) != 0)
    {
      sub_5E11C(v29[7] + *(_QWORD *)(v129 + 72) * v48, (uint64_t)v9, type metadata accessor for GenreHighlight);
      v52 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v51 + 56);
      v53 = v9;
      v54 = 0;
    }
    else
    {
      v52 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v129 + 56);
      v53 = v9;
      v54 = 1;
    }
    v127 = v52;
    v52(v53, v54, 1, v49);
    v55 = swift_bridgeObjectRelease(v41);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v51 + 48))(v9, 1, v49, v55) != 1)
      break;
LABEL_22:
    sub_5E09C((uint64_t)v9, &qword_322910);
    v56 = sub_5C154(&qword_31EF58);
    v57 = swift_allocObject(v56, 72, 7);
    *(_OWORD *)(v57 + 16) = v125;
    sub_5E0D8((uint64_t)&v140, v57 + 32);
    v58 = *(int *)(v49 + 20);
    v59 = v49;
    v60 = v126;
    v137((char *)v126 + v58, (unint64_t)v27, v25);
    (*(void (**)(char *, char *, uint64_t))(v128 + 16))((char *)v60 + *(int *)(v59 + 24), v131, v133);
    *v60 = v57;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v29);
    v138 = v29;
    v63 = sub_582B4(v136, v41);
    v64 = v29[2];
    v65 = (v62 & 1) == 0;
    v66 = v64 + v65;
    if (__OFADD__(v64, v65))
    {
      __break(1u);
LABEL_52:
      __break(1u);
LABEL_53:
      __break(1u);
LABEL_54:
      __break(1u);
LABEL_55:
      __break(1u);
    }
    v67 = v62;
    if (v29[3] >= v66)
    {
      v70 = v129;
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
        goto LABEL_28;
      sub_5AD34();
    }
    else
    {
      sub_13B1A0(v66, isUniquelyReferenced_nonNull_native);
      v68 = sub_582B4(v136, v41);
      if ((v67 & 1) != (v69 & 1))
        goto LABEL_56;
      v63 = v68;
    }
    v70 = v129;
LABEL_28:
    v21 = v128;
    v29 = v138;
    if ((v67 & 1) != 0)
    {
      v71 = *(_QWORD *)(v70 + 72) * v63;
      v72 = (uint64_t)v122;
      sub_5E160(v138[7] + v71, (uint64_t)v122, type metadata accessor for GenreHighlight);
      sub_5E160((uint64_t)v126, v29[7] + v71, type metadata accessor for GenreHighlight);
      v127((char *)v72, 0, 1, v130);
    }
    else
    {
      v138[(v63 >> 6) + 8] |= 1 << v63;
      v73 = (_QWORD *)(v29[6] + 16 * v63);
      *v73 = v136;
      v73[1] = v41;
      sub_5E160((uint64_t)v126, v29[7] + *(_QWORD *)(v70 + 72) * v63, type metadata accessor for GenreHighlight);
      v74 = v29[2];
      v75 = __OFADD__(v74, 1);
      v76 = v74 + 1;
      if (v75)
        goto LABEL_53;
      v29[2] = v76;
      v72 = (uint64_t)v122;
      v127(v122, 1, 1, v130);
      swift_bridgeObjectRetain(v41);
    }
    swift_bridgeObjectRelease(0x8000000000000000);
    sub_5E09C(v72, &qword_322910);
    (*(void (**)(char *, uint64_t))(v21 + 8))(v131, v133);
LABEL_47:
    (*(void (**)(char *, uint64_t))(v135 + 8))(v27, v25);
    swift_bridgeObjectRelease(v41);
    v9 = v124;
LABEL_10:
    v35 += v134;
    if (!--v34)
      goto LABEL_3;
  }
  v77 = v47;
  v78 = v49;
  v79 = v119;
  sub_5E160((uint64_t)v9, (uint64_t)v119, type metadata accessor for GenreHighlight);
  v80 = (char *)v79 + *(int *)(v78 + 24);
  v81 = v131;
  v82 = static Date.> infix(_:_:)(v80, v131);
  v83 = *(void (**)(char *, char *, uint64_t))(v128 + 16);
  if ((v82 & 1) != 0)
    v84 = v80;
  else
    v84 = v81;
  v83(v123, v84, v77);
  v85 = (_QWORD *)*v79;
  v86 = sub_5C154(&qword_31EF58);
  inited = swift_initStackObject(v86, v139);
  *(_OWORD *)(inited + 16) = v125;
  sub_5E0D8((uint64_t)&v140, inited + 32);
  v138 = v85;
  swift_bridgeObjectRetain(v85);
  sub_E00A0(inited);
  v88 = v130;
  v89 = v120;
  v25 = v113;
  v90 = v138;
  ((void (*)(char *, char *))v137)(&v120[*(int *)(v130 + 20)], v27);
  v83(&v89[*(int *)(v88 + 24)], v123, v133);
  *(_QWORD *)v89 = v90;
  sub_5E11C((uint64_t)v89, v121, type metadata accessor for GenreHighlight);
  v91 = swift_isUniquelyReferenced_nonNull_native(v29);
  v138 = v29;
  v93 = sub_582B4(v136, v41);
  v94 = v29[2];
  v95 = (v92 & 1) == 0;
  v96 = v94 + v95;
  if (__OFADD__(v94, v95))
    goto LABEL_54;
  v97 = v92;
  if (v29[3] >= v96)
  {
    v100 = v129;
    if ((v91 & 1) == 0)
    {
      sub_5AD34();
LABEL_40:
      v100 = v129;
    }
    v21 = v128;
    v29 = v138;
    if ((v97 & 1) != 0)
    {
      v101 = *(_QWORD *)(v100 + 72) * v93;
      v102 = (uint64_t)v114;
      sub_5E160(v138[7] + v101, (uint64_t)v114, type metadata accessor for GenreHighlight);
      sub_5E160(v121, v29[7] + v101, type metadata accessor for GenreHighlight);
      v127((char *)v102, 0, 1, v130);
    }
    else
    {
      v138[(v93 >> 6) + 8] |= 1 << v93;
      v103 = (_QWORD *)(v29[6] + 16 * v93);
      *v103 = v136;
      v103[1] = v41;
      sub_5E160(v121, v29[7] + *(_QWORD *)(v100 + 72) * v93, type metadata accessor for GenreHighlight);
      v104 = v29[2];
      v75 = __OFADD__(v104, 1);
      v105 = v104 + 1;
      if (v75)
        goto LABEL_55;
      v29[2] = v105;
      v102 = (uint64_t)v114;
      v127(v114, 1, 1, v130);
      swift_bridgeObjectRetain(v41);
    }
    swift_bridgeObjectRelease(0x8000000000000000);
    sub_5E09C(v102, &qword_322910);
    sub_6685C((uint64_t)v120, type metadata accessor for GenreHighlight);
    v106 = *(void (**)(char *, uint64_t))(v21 + 8);
    v107 = v133;
    v106(v123, v133);
    sub_6685C((uint64_t)v119, type metadata accessor for GenreHighlight);
    v106(v131, v107);
    goto LABEL_47;
  }
  sub_13B1A0(v96, v91);
  v98 = sub_582B4(v136, v41);
  if ((v97 & 1) == (v99 & 1))
  {
    v93 = v98;
    goto LABEL_40;
  }
LABEL_56:
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
  __break(1u);
  result = swift_release(v140);
  __break(1u);
  return result;
}

void sub_BDE74(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  char v52;
  uint64_t v53;
  void (*v54)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v55;
  uint64_t v56;
  __n128 v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t isUniquelyReferenced_nonNull_native;
  char v66;
  unint64_t v67;
  uint64_t v68;
  _BOOL8 v69;
  uint64_t v70;
  char v71;
  unint64_t v72;
  char v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  char v78;
  uint64_t v79;
  void (*v80)(uint64_t, char *, uint64_t);
  char *v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  _QWORD *v85;
  uint64_t v86;
  uint64_t inited;
  _QWORD *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char v94;
  unint64_t v95;
  uint64_t v96;
  _BOOL8 v97;
  uint64_t v98;
  char v99;
  unint64_t v100;
  char v101;
  unint64_t v102;
  uint64_t v103;
  unint64_t v104;
  uint64_t v105;
  uint64_t *v106;
  uint64_t v107;
  BOOL v108;
  uint64_t v109;
  uint64_t *v110;
  uint64_t v111;
  uint64_t v112;
  void (*v113)(char *, uint64_t);
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t (*v119)(uint64_t, uint64_t, uint64_t);
  int v120;
  unint64_t v121;
  uint64_t (*v122)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  uint64_t v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  unint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  void (*v140)(uint64_t, char *, uint64_t);
  char *v141;
  __int128 v142;
  char *v143;
  uint64_t v144;
  char *v145;
  uint64_t v146;
  char *v147;
  uint64_t v148;
  uint64_t v149;
  void (*v150)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v151;
  uint64_t v152;
  char *v153;
  uint64_t v154;
  uint64_t v155;
  char *v156;
  void (*v157)(char *, unint64_t, uint64_t);
  uint64_t v158;
  uint64_t v159;
  _QWORD *v160;
  char v161[8];
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;

  v130 = a1;
  v2 = sub_5C154(&qword_3228F8);
  __chkstk_darwin(v2);
  v129 = (char *)&v128 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v128 = (uint64_t)&v128 - v5;
  v6 = sub_5C154(&qword_322900);
  __chkstk_darwin(v6);
  v8 = (char *)&v128 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v139 = (uint64_t)&v128 - v10;
  __chkstk_darwin(v11);
  v138 = (uint64_t)&v128 - v12;
  __chkstk_darwin(v13);
  v148 = (uint64_t)&v128 - v14;
  v15 = type metadata accessor for TopAuthorHighlightData(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v147 = (char *)&v128 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v146 = (uint64_t)&v128 - v19;
  __chkstk_darwin(v20);
  v145 = (char *)&v128 - v21;
  __chkstk_darwin(v22);
  v144 = (uint64_t)&v128 - v23;
  v24 = sub_5C154(&qword_31F128);
  __chkstk_darwin(v24);
  v26 = (char *)&v128 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v159 = type metadata accessor for Date(0);
  v27 = *(_QWORD *)(v159 - 8);
  __chkstk_darwin(v159);
  v143 = (char *)&v128 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v29);
  v156 = (char *)&v128 - v30;
  v31 = type metadata accessor for AssetArtistInfo(0);
  v154 = *(_QWORD *)(v31 - 8);
  __chkstk_darwin(v31);
  v153 = (char *)&v128 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = *(_QWORD *)(v1 + 16);
  swift_bridgeObjectRetain(v33);
  v34 = (_QWORD *)sub_52F70((uint64_t)_swiftEmptyArrayStorage);
  v35 = *(_QWORD *)(v33 + 16);
  v149 = v15;
  v134 = v35;
  if (v35)
  {
    v36 = 0;
    v133 = v33 + 32;
    v142 = xmmword_258070;
    v131 = v8;
    v151 = v16;
    v141 = v26;
    v137 = v27;
    v155 = v31;
    v132 = v33;
    do
    {
      if (v36 >= *(_QWORD *)(v33 + 16))
        goto LABEL_58;
      sub_5E0D8(v133 + 40 * v36, (uint64_t)&v162);
      v37 = v163;
      v38 = v164;
      sub_66898(&v162, v163);
      v39 = AssetInfo.authors.getter(v37, v38);
      if (v39)
      {
        v136 = v36;
        v40 = *(_QWORD *)(v39 + 16);
        v41 = v155;
        v135 = v39;
        if (v40)
        {
          v42 = v39 + ((*(unsigned __int8 *)(v154 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v154 + 80));
          v152 = *(_QWORD *)(v154 + 72);
          v157 = *(void (**)(char *, unint64_t, uint64_t))(v154 + 16);
          v43 = v153;
          while (1)
          {
            v158 = v40;
            v157(v43, v42, v41);
            v44 = v163;
            v45 = v164;
            sub_66898(&v162, v163);
            AssetInfo.dateFinished.getter(v44, v45);
            v46 = v159;
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v26, 1, v159) != 1)
              break;
            (*(void (**)(char *, uint64_t))(v154 + 8))(v43, v41);
            sub_5E09C((uint64_t)v26, &qword_31F128);
LABEL_10:
            v42 += v152;
            v40 = v158 - 1;
            if (v158 == 1)
              goto LABEL_3;
          }
          v47 = (*(uint64_t (**)(char *, char *, uint64_t))(v27 + 32))(v156, v26, v46);
          v48 = AssetArtistInfo.id.getter(v47);
          v50 = v49;
          if (v34[2])
          {
            v51 = sub_582B4(v48, v49);
            if ((v52 & 1) != 0)
            {
              v53 = v148;
              sub_5E11C(v34[7] + *(_QWORD *)(v16 + 72) * v51, v148, type metadata accessor for TopAuthorHighlightData);
              v54 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 56);
              v55 = v53;
              v56 = 0;
            }
            else
            {
              v54 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 56);
              v53 = v148;
              v55 = v148;
              v56 = 1;
            }
            v150 = v54;
            v54(v55, v56, 1, v15);
          }
          else
          {
            v53 = v148;
            v150 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 56);
            v150(v148, 1, 1, v15);
          }
          v57 = swift_bridgeObjectRelease(v50);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v16 + 48))(v53, 1, v15, v57) == 1)
          {
            sub_5E09C(v53, &qword_322900);
            v58 = (uint64_t)v147;
            v157(v147, (unint64_t)v153, v155);
            v59 = sub_5C154(&qword_31EF58);
            v60 = swift_allocObject(v59, 72, 7);
            *(_OWORD *)(v60 + 16) = v142;
            sub_5E0D8((uint64_t)&v162, v60 + 32);
            v61 = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v27 + 16))(v58 + *(int *)(v15 + 24), v156, v159);
            *(_QWORD *)(v58 + *(int *)(v15 + 20)) = v60;
            v62 = AssetArtistInfo.id.getter(v61);
            v64 = v63;
            isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v34);
            v160 = v34;
            v67 = sub_582B4(v62, v64);
            v68 = v34[2];
            v69 = (v66 & 1) == 0;
            v70 = v68 + v69;
            if (__OFADD__(v68, v69))
            {
              __break(1u);
LABEL_55:
              __break(1u);
LABEL_56:
              __break(1u);
LABEL_57:
              __break(1u);
LABEL_58:
              __break(1u);
            }
            v71 = v66;
            if (v34[3] >= v70)
            {
              v74 = v159;
              if ((isUniquelyReferenced_nonNull_native & 1) == 0)
              {
                sub_5AD48();
                goto LABEL_23;
              }
            }
            else
            {
              sub_13B1B4(v70, isUniquelyReferenced_nonNull_native);
              v72 = sub_582B4(v62, v64);
              if ((v71 & 1) != (v73 & 1))
                goto LABEL_59;
              v67 = v72;
LABEL_23:
              v74 = v159;
            }
            v34 = v160;
            if ((v71 & 1) != 0)
            {
              v102 = *(_QWORD *)(v151 + 72) * v67;
              v103 = v139;
              sub_5E160(v160[7] + v102, v139, type metadata accessor for TopAuthorHighlightData);
              sub_5E160((uint64_t)v147, v34[7] + v102, type metadata accessor for TopAuthorHighlightData);
              v15 = v149;
              v150(v103, 0, 1, v149);
            }
            else
            {
              v160[(v67 >> 6) + 8] |= 1 << v67;
              v106 = (uint64_t *)(v34[6] + 16 * v67);
              *v106 = v62;
              v106[1] = v64;
              sub_5E160((uint64_t)v147, v34[7] + *(_QWORD *)(v151 + 72) * v67, type metadata accessor for TopAuthorHighlightData);
              v107 = v34[2];
              v108 = __OFADD__(v107, 1);
              v109 = v107 + 1;
              if (v108)
                goto LABEL_56;
              v34[2] = v109;
              v103 = v139;
              v15 = v149;
              v150(v139, 1, 1, v149);
              swift_bridgeObjectRetain(v64);
            }
            swift_bridgeObjectRelease(v64);
            swift_bridgeObjectRelease(0x8000000000000000);
            sub_5E09C(v103, &qword_322900);
            (*(void (**)(char *, uint64_t))(v27 + 8))(v156, v74);
LABEL_46:
            v43 = v153;
            v41 = v155;
            (*(void (**)(char *, uint64_t))(v154 + 8))(v153, v155);
            v16 = v151;
            v26 = v141;
            goto LABEL_10;
          }
          v75 = v144;
          sub_5E160(v53, v144, type metadata accessor for TopAuthorHighlightData);
          v76 = v75 + *(int *)(v15 + 24);
          v77 = v156;
          v78 = static Date.> infix(_:_:)(v76, v156);
          v79 = v15;
          v80 = *(void (**)(uint64_t, char *, uint64_t))(v27 + 16);
          v140 = v80;
          if ((v78 & 1) != 0)
            v81 = (char *)v76;
          else
            v81 = v77;
          v82 = v143;
          v83 = v159;
          v80((uint64_t)v143, v81, v159);
          v84 = (uint64_t)v145;
          v157(v145, (unint64_t)v153, v155);
          v85 = *(_QWORD **)(v75 + *(int *)(v15 + 20));
          v86 = sub_5C154(&qword_31EF58);
          inited = swift_initStackObject(v86, v161);
          *(_OWORD *)(inited + 16) = v142;
          sub_5E0D8((uint64_t)&v162, inited + 32);
          v160 = v85;
          swift_bridgeObjectRetain(v85);
          sub_E00A0(inited);
          v88 = v160;
          v140(v84 + *(int *)(v79 + 24), v82, v83);
          *(_QWORD *)(v84 + *(int *)(v79 + 20)) = v88;
          v89 = sub_5E11C(v84, v146, type metadata accessor for TopAuthorHighlightData);
          v90 = AssetArtistInfo.id.getter(v89);
          v92 = v91;
          v93 = swift_isUniquelyReferenced_nonNull_native(v34);
          v160 = v34;
          v95 = sub_582B4(v90, v92);
          v96 = v34[2];
          v97 = (v94 & 1) == 0;
          v98 = v96 + v97;
          if (__OFADD__(v96, v97))
            goto LABEL_55;
          v99 = v94;
          if (v34[3] >= v98)
          {
            v27 = v137;
            if ((v93 & 1) != 0)
            {
              v34 = v160;
              if ((v94 & 1) == 0)
                goto LABEL_43;
            }
            else
            {
              sub_5AD48();
              v34 = v160;
              if ((v99 & 1) == 0)
                goto LABEL_43;
            }
          }
          else
          {
            sub_13B1B4(v98, v93);
            v100 = sub_582B4(v90, v92);
            v27 = v137;
            if ((v99 & 1) != (v101 & 1))
            {
LABEL_59:
              KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
              __break(1u);
              return;
            }
            v95 = v100;
            v34 = v160;
            if ((v99 & 1) == 0)
            {
LABEL_43:
              v34[(v95 >> 6) + 8] |= 1 << v95;
              v110 = (uint64_t *)(v34[6] + 16 * v95);
              *v110 = v90;
              v110[1] = v92;
              sub_5E160(v146, v34[7] + *(_QWORD *)(v151 + 72) * v95, type metadata accessor for TopAuthorHighlightData);
              v111 = v34[2];
              v108 = __OFADD__(v111, 1);
              v112 = v111 + 1;
              if (v108)
                goto LABEL_57;
              v34[2] = v112;
              v105 = v138;
              v15 = v149;
              v150(v138, 1, 1, v149);
              swift_bridgeObjectRetain(v92);
              goto LABEL_45;
            }
          }
          v104 = *(_QWORD *)(v151 + 72) * v95;
          v105 = v138;
          sub_5E160(v34[7] + v104, v138, type metadata accessor for TopAuthorHighlightData);
          sub_5E160(v146, v34[7] + v104, type metadata accessor for TopAuthorHighlightData);
          v15 = v149;
          v150(v105, 0, 1, v149);
LABEL_45:
          swift_bridgeObjectRelease(v92);
          swift_bridgeObjectRelease(0x8000000000000000);
          sub_5E09C(v105, &qword_322900);
          sub_6685C((uint64_t)v145, type metadata accessor for TopAuthorHighlightData);
          v113 = *(void (**)(char *, uint64_t))(v27 + 8);
          v114 = v159;
          v113(v143, v159);
          sub_6685C(v144, type metadata accessor for TopAuthorHighlightData);
          v113(v156, v114);
          goto LABEL_46;
        }
LABEL_3:
        swift_bridgeObjectRelease(v135);
        v8 = v131;
        v36 = v136;
      }
      ++v36;
      _s11BookStoreUI5ShelfV20HeaderComponentModelVwxx_0(&v162);
      v33 = v132;
    }
    while (v36 != v134);
  }
  swift_bridgeObjectRelease(v33);
  swift_bridgeObjectRetain(v34);
  v116 = sub_BEEE8(v115);
  swift_bridgeObjectRelease(v34);
  v117 = v128;
  sub_BB9FC(v116, v128);
  swift_release(v116);
  v118 = sub_5C154(&qword_322908);
  v119 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v118 - 8) + 48);
  v120 = v119(v117, 1, v118);
  v121 = (unint64_t)v129;
  if (v120 == 1)
  {
    sub_5E09C(v117, &qword_3228F8);
    v122 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56);
    v123 = v122(v8, 1, 1, v149);
  }
  else
  {
    swift_bridgeObjectRelease(*(_QWORD *)(v117 + 8));
    sub_5E160(v117 + *(int *)(v118 + 48), (uint64_t)v8, type metadata accessor for TopAuthorHighlightData);
    v122 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56);
    v123 = v122(v8, 0, 1, v149);
  }
  __chkstk_darwin(v123);
  *(&v128 - 2) = (uint64_t)v8;
  swift_bridgeObjectRetain(v34);
  v124 = sub_BF038((uint64_t)sub_BF1A8, (uint64_t)(&v128 - 4), (uint64_t)v34);
  swift_bridgeObjectRelease(v34);
  sub_BBF48(v124, v121);
  sub_5E09C((uint64_t)v8, &qword_322900);
  swift_release(v124);
  if (v119(v121, 1, v118) == 1)
  {
    sub_5E09C(v121, &qword_3228F8);
    v125 = 1;
    v126 = v130;
  }
  else
  {
    swift_bridgeObjectRelease(*(_QWORD *)(v121 + 8));
    v127 = v121 + *(int *)(v118 + 48);
    v126 = v130;
    sub_5E160(v127, v130, type metadata accessor for TopAuthorHighlightData);
    v125 = 0;
  }
  v122((char *)v126, v125, 1, v149);
  swift_bridgeObjectRelease(v34);
}

uint64_t type metadata accessor for TopAuthorHighlightData(uint64_t a1)
{
  return sub_64960(a1, qword_322C40, (uint64_t)&nominal type descriptor for TopAuthorHighlightData);
}

BOOL sub_BEC6C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v26 = a3;
  v5 = sub_5C154(&qword_322900);
  __chkstk_darwin(v5);
  v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_5C154(&qword_322908);
  __chkstk_darwin(v8);
  v10 = (uint64_t *)((char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v11);
  v13 = (uint64_t *)((char *)&v25 - v12);
  v14 = *a1;
  v15 = a1[1];
  v17 = (char *)&v25 + *(int *)(v16 + 48) - v12;
  *v13 = v14;
  v13[1] = v15;
  sub_5E11C(a2, (uint64_t)v17, type metadata accessor for TopAuthorHighlightData);
  v18 = (uint64_t)v10 + *(int *)(v8 + 48);
  *v10 = v14;
  v10[1] = v15;
  sub_5E11C((uint64_t)v17, v18, type metadata accessor for TopAuthorHighlightData);
  v19 = type metadata accessor for TopAuthorHighlightData(0);
  v20 = *(_QWORD *)(v18 + *(int *)(v19 + 20));
  swift_bridgeObjectRetain(v15);
  swift_bridgeObjectRetain(v20);
  sub_6685C(v18, type metadata accessor for TopAuthorHighlightData);
  v21 = *(_QWORD *)(v20 + 16);
  swift_bridgeObjectRelease(v20);
  sub_BF79C(v26, (uint64_t)v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 48))(v7, 1, v19) == 1)
  {
    sub_5E09C((uint64_t)v13, &qword_322908);
    sub_5E09C((uint64_t)v7, &qword_322900);
    return 0;
  }
  else
  {
    v23 = *(_QWORD *)&v7[*(int *)(v19 + 20)];
    swift_bridgeObjectRetain(v23);
    sub_6685C((uint64_t)v7, type metadata accessor for TopAuthorHighlightData);
    v24 = *(_QWORD *)(v23 + 16);
    swift_bridgeObjectRelease(v23);
    sub_5E09C((uint64_t)v13, &qword_322908);
    return v21 == v24;
  }
}

void sub_BEE68(_QWORD *a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  _QWORD v5[2];

  v2 = *(_QWORD *)(type metadata accessor for GenreHighlight(0) - 8);
  v3 = (_QWORD *)*a1;
  if ((swift_isUniquelyReferenced_nonNull_native(*a1) & 1) == 0)
    v3 = (_QWORD *)sub_10F05C(v3);
  v4 = v3[2];
  v5[0] = (char *)v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v5[1] = v4;
  sub_BF7F8(v5);
  *a1 = v3;
}

uint64_t sub_BEEE8(uint64_t isStackAllocationSafe)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  unsigned int v4;
  unint64_t v5;
  uint64_t v6;
  size_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v12;

  v2 = isStackAllocationSafe;
  v3 = *(_BYTE *)(isStackAllocationSafe + 32);
  v4 = v3 & 0x3F;
  v5 = (1 << v3) + 63;
  v6 = v5 >> 6;
  v7 = 8 * (v5 >> 6);
  if (v4 <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(8 * (v5 >> 6), 8), (isStackAllocationSafe & 1) != 0))
  {
    __chkstk_darwin(isStackAllocationSafe);
    bzero((char *)&v12 - ((v7 + 15) & 0x3FFFFFFFFFFFFFF0), v7);
    sub_BF1C4((unint64_t *)((char *)&v12 - ((v7 + 15) & 0x3FFFFFFFFFFFFFF0)), v6, v2);
    if (v1)
      swift_willThrow(v8);
    else
      return v8;
  }
  else
  {
    v9 = (void *)swift_slowAlloc(v7, -1);
    bzero(v9, v7);
    sub_BF1C4((unint64_t *)v9, v6, v2);
    v2 = v10;
    swift_slowDealloc(v9, -1, -1);
  }
  return v2;
}

uint64_t sub_BF038(uint64_t isStackAllocationSafe, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t (*v6)(uint64_t *, char *, __n128);
  char v7;
  unsigned int v8;
  unint64_t v9;
  uint64_t v10;
  size_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v16;

  v6 = (uint64_t (*)(uint64_t *, char *, __n128))isStackAllocationSafe;
  v7 = *(_BYTE *)(a3 + 32);
  v8 = v7 & 0x3F;
  v9 = (1 << v7) + 63;
  v10 = v9 >> 6;
  v11 = 8 * (v9 >> 6);
  if (v8 <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(8 * (v9 >> 6), 8), (isStackAllocationSafe & 1) != 0))
  {
    __chkstk_darwin(isStackAllocationSafe);
    bzero((char *)&v16 - ((v11 + 15) & 0x3FFFFFFFFFFFFFF0), v11);
    sub_BF4F4((unint64_t *)((char *)&v16 - ((v11 + 15) & 0x3FFFFFFFFFFFFFF0)), v10, a3, v6);
    if (v3)
      swift_willThrow(v12);
    else
      return v12;
  }
  else
  {
    v13 = (void *)swift_slowAlloc(v11, -1);
    bzero(v13, v11);
    sub_BF4F4((unint64_t *)v13, v10, a3, v6);
    a2 = v14;
    swift_slowDealloc(v13, -1, -1);
  }
  return a2;
}

BOOL sub_BF1A8(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;

  return sub_BEC6C(a1, a2, *(_QWORD *)(v2 + 16));
}

void sub_BF1C4(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  int64_t v28;
  unint64_t v29;
  int64_t v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  unint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  int64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  _QWORD *v45;
  int64_t v46;

  v34 = a2;
  v35 = a1;
  v44 = sub_5C154(&qword_322908);
  __chkstk_darwin(v44);
  v43 = (uint64_t *)((char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v5);
  v39 = (char *)&v33 - v6;
  v7 = type metadata accessor for TopAuthorHighlightData(0);
  v41 = *(_QWORD *)(v7 - 8);
  v42 = v7;
  __chkstk_darwin(v7);
  v40 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = 0;
  v45 = (_QWORD *)a3;
  v10 = *(_QWORD *)(a3 + 64);
  v36 = 0;
  v37 = a3 + 64;
  v11 = 1 << *(_BYTE *)(a3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & v10;
  v38 = (unint64_t)(v11 + 63) >> 6;
  v15 = v39;
  v14 = (uint64_t)v40;
  while (1)
  {
    if (v13)
    {
      v16 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v46 = v9;
      v17 = v16 | (v9 << 6);
      goto LABEL_5;
    }
    v28 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v28 >= v38)
      goto LABEL_24;
    v29 = *(_QWORD *)(v37 + 8 * v28);
    v30 = v9 + 1;
    if (!v29)
    {
      v30 = v9 + 2;
      if (v9 + 2 >= v38)
        goto LABEL_24;
      v29 = *(_QWORD *)(v37 + 8 * v30);
      if (!v29)
      {
        v30 = v9 + 3;
        if (v9 + 3 >= v38)
          goto LABEL_24;
        v29 = *(_QWORD *)(v37 + 8 * v30);
        if (!v29)
          break;
      }
    }
LABEL_20:
    v13 = (v29 - 1) & v29;
    v46 = v30;
    v17 = __clz(__rbit64(v29)) + (v30 << 6);
LABEL_5:
    v18 = (uint64_t *)(v45[6] + 16 * v17);
    v19 = *v18;
    v20 = v18[1];
    sub_5E11C(v45[7] + *(_QWORD *)(v41 + 72) * v17, v14, type metadata accessor for TopAuthorHighlightData);
    v21 = v44;
    v22 = (uint64_t)v15 + *(int *)(v44 + 48);
    *v15 = v19;
    v15[1] = v20;
    sub_5E11C(v14, v22, type metadata accessor for TopAuthorHighlightData);
    v23 = *(int *)(v21 + 48);
    v24 = v43;
    v25 = (uint64_t)v43 + v23;
    *v43 = v19;
    v24[1] = v20;
    sub_5E11C(v22, (uint64_t)v24 + v23, type metadata accessor for TopAuthorHighlightData);
    v26 = *(_QWORD *)(v25 + *(int *)(v42 + 20));
    swift_bridgeObjectRetain_n(v20, 2);
    swift_bridgeObjectRetain(v26);
    sub_6685C(v25, type metadata accessor for TopAuthorHighlightData);
    v27 = *(_QWORD *)(v26 + 16);
    swift_bridgeObjectRelease(v26);
    sub_5E09C((uint64_t)v15, &qword_322908);
    sub_6685C(v14, type metadata accessor for TopAuthorHighlightData);
    swift_bridgeObjectRelease(v20);
    v9 = v46;
    if (v27 >= 2)
    {
      *(unint64_t *)((char *)v35 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      if (__OFADD__(v36++, 1))
      {
        __break(1u);
LABEL_24:
        sub_59540(v35, v34, v36, v45);
        return;
      }
    }
  }
  v31 = v9 + 4;
  if (v9 + 4 >= v38)
    goto LABEL_24;
  v29 = *(_QWORD *)(v37 + 8 * v31);
  if (v29)
  {
    v30 = v9 + 4;
    goto LABEL_20;
  }
  while (1)
  {
    v30 = v31 + 1;
    if (__OFADD__(v31, 1))
      break;
    if (v30 >= v38)
      goto LABEL_24;
    v29 = *(_QWORD *)(v37 + 8 * v30);
    ++v31;
    if (v29)
      goto LABEL_20;
  }
LABEL_26:
  __break(1u);
}

void sub_BF4F4(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t *, char *, __n128))
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  BOOL v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  __n128 v22;
  char v23;
  uint64_t v24;
  unint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  int64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t (*v32)(uint64_t *, char *, __n128);

  v32 = a4;
  v24 = a2;
  v25 = a1;
  v6 = type metadata accessor for TopAuthorHighlightData(0);
  v29 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = 0;
  v10 = *(_QWORD *)(a3 + 64);
  v26 = 0;
  v27 = a3 + 64;
  v11 = 1 << *(_BYTE *)(a3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & v10;
  v28 = (unint64_t)(v11 + 63) >> 6;
  while (v13)
  {
    v14 = __clz(__rbit64(v13));
    v13 &= v13 - 1;
    v15 = v14 | (v9 << 6);
LABEL_17:
    v19 = *(_QWORD *)(a3 + 56);
    v20 = (uint64_t *)(*(_QWORD *)(a3 + 48) + 16 * v15);
    v21 = v20[1];
    v30 = *v20;
    v31 = v21;
    sub_5E11C(v19 + *(_QWORD *)(v29 + 72) * v15, (uint64_t)v8, type metadata accessor for TopAuthorHighlightData);
    v22 = swift_bridgeObjectRetain(v21);
    v23 = v32(&v30, v8, v22);
    sub_6685C((uint64_t)v8, type metadata accessor for TopAuthorHighlightData);
    swift_bridgeObjectRelease(v31);
    if (v4)
      return;
    if ((v23 & 1) != 0)
    {
      *(unint64_t *)((char *)v25 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      v16 = __OFADD__(v26++, 1);
      if (v16)
        goto LABEL_30;
    }
  }
  v16 = __OFADD__(v9++, 1);
  if (v16)
  {
    __break(1u);
    goto LABEL_29;
  }
  if (v9 >= v28)
    goto LABEL_27;
  v17 = *(_QWORD *)(v27 + 8 * v9);
  if (v17)
  {
LABEL_16:
    v13 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v9 << 6);
    goto LABEL_17;
  }
  v18 = v9 + 1;
  if (v9 + 1 >= v28)
    goto LABEL_27;
  v17 = *(_QWORD *)(v27 + 8 * v18);
  if (v17)
    goto LABEL_15;
  v18 = v9 + 2;
  if (v9 + 2 >= v28)
    goto LABEL_27;
  v17 = *(_QWORD *)(v27 + 8 * v18);
  if (v17)
    goto LABEL_15;
  v18 = v9 + 3;
  if (v9 + 3 >= v28)
  {
LABEL_27:
    sub_59540(v25, v24, v26, (_QWORD *)a3);
    return;
  }
  v17 = *(_QWORD *)(v27 + 8 * v18);
  if (v17)
  {
LABEL_15:
    v9 = v18;
    goto LABEL_16;
  }
  while (1)
  {
    v9 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v9 >= v28)
      goto LABEL_27;
    v17 = *(_QWORD *)(v27 + 8 * v9);
    ++v18;
    if (v17)
      goto LABEL_16;
  }
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
}

uint64_t sub_BF754(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_5C154(&qword_322908);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_BF79C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_5C154(&qword_322900);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for GenreHighlight(uint64_t a1)
{
  return sub_64960(a1, qword_322BA8, (uint64_t)&nominal type descriptor for GenreHighlight);
}

void sub_BF7F8(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  Swift::Int v23;
  Swift::Int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  Swift::Int v29;
  Swift::Int v30;
  char *v31;
  unint64_t v32;
  Swift::Int v33;
  Swift::Int v34;
  Swift::Int v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  __n128 v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  __n128 v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  BOOL v55;
  uint64_t v56;
  uint64_t v57;
  Swift::Int v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  __n128 v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  __n128 v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  int v78;
  uint64_t v79;
  uint64_t v80;
  Swift::Int v81;
  uint64_t v82;
  Swift::Int v83;
  uint64_t v84;
  Swift::Int v85;
  unint64_t v86;
  char *v87;
  Swift::Int v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  Swift::Int v92;
  Swift::Int v93;
  unint64_t v94;
  unint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  __n128 v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  __n128 v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  BOOL v110;
  char v111;
  Swift::Int v112;
  uint64_t v113;
  uint64_t v114;
  unint64_t v115;
  unint64_t v116;
  char *v117;
  char *v118;
  unint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  char v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  BOOL v130;
  unint64_t v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  char *v137;
  uint64_t v138;
  uint64_t v139;
  BOOL v140;
  uint64_t v141;
  char v142;
  char *v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  BOOL v147;
  uint64_t v148;
  uint64_t v149;
  char *v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  char *v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  unint64_t v158;
  Swift::Int v159;
  char *v160;
  char *v161;
  char *v162;
  uint64_t v163;
  char *v164;
  uint64_t v165;
  uint64_t v166;
  unint64_t v167;
  Swift::Int v168;
  uint64_t v169;
  unint64_t v170;
  uint64_t v171;
  uint64_t v172;
  char *v173;
  unint64_t v174;
  _QWORD *v175;
  char *v176;
  _QWORD *v177;
  Swift::Int v178;
  char *v179;
  char *v180;
  char *v181;
  Swift::Int v182;
  uint64_t v183;
  Swift::Int v184;
  uint64_t v185;
  unint64_t v186;
  uint64_t v187;
  uint64_t v188;
  char *v189;
  _QWORD *v190;
  char *v191;
  Swift::Int v192;
  uint64_t v193;
  uint64_t v194;
  Swift::Int v195;
  char *v196;
  uint64_t v197;
  char *v198;
  char *v199;

  v193 = type metadata accessor for GenreHighlight(0);
  v187 = *(_QWORD *)(v193 - 8);
  __chkstk_darwin(v193);
  v183 = (uint64_t)&v176 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v5 = (char *)&v176 - v4;
  __chkstk_darwin(v6);
  v8 = (char *)&v176 - v7;
  __chkstk_darwin(v9);
  v11 = (char *)&v176 - v10;
  __chkstk_darwin(v12);
  v185 = (uint64_t)&v176 - v13;
  __chkstk_darwin(v14);
  v16 = (char *)&v176 - v15;
  __chkstk_darwin(v17);
  v19 = (char *)&v176 - v18;
  __chkstk_darwin(v20);
  v22 = (char *)&v176 - v21;
  v23 = a1[1];
  v24 = _minimumMergeRunLength(_:)(v23);
  if (v24 >= v23)
  {
    if (v23 < 0)
      goto LABEL_172;
    if (v23)
      sub_C0574(0, v23, 1, a1);
  }
  else
  {
    if (v23 >= 0)
      v25 = v23;
    else
      v25 = v23 + 1;
    if (v23 < -1)
    {
LABEL_180:
      _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Can't construct Array with count < 0", 36, 2, "Swift/Array.swift", 17, 2, 936, 0);
      __break(1u);
      return;
    }
    v196 = v8;
    v189 = v11;
    v180 = v19;
    v181 = v16;
    v178 = v24;
    v179 = v22;
    if (v23 >= 2)
    {
      v26 = v25 >> 1;
      v27 = static Array._allocateBufferUninitialized(minimumCapacity:)(v25 >> 1, v193);
      *(_QWORD *)(v27 + 16) = v26;
      v28 = *(unsigned __int8 *)(v187 + 80);
      v177 = (_QWORD *)v27;
      v186 = v27 + ((v28 + 32) & ~v28);
      goto LABEL_12;
    }
    v186 = (unint64_t)_swiftEmptyArrayStorage
         + ((*(unsigned __int8 *)(v187 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v187 + 80));
    v177 = _swiftEmptyArrayStorage;
    if (v23 == 1)
    {
LABEL_12:
      v29 = v23;
      v30 = 0;
      v31 = (char *)_swiftEmptyArrayStorage;
      v190 = a1;
      v191 = v5;
      while (1)
      {
        v33 = v30;
        v34 = v30 + 1;
        v198 = (char *)v29;
        if (v30 + 1 >= v29)
        {
          ++v30;
          v56 = (uint64_t)v196;
        }
        else
        {
          v35 = *a1;
          v36 = *(char **)(v187 + 72);
          v37 = (uint64_t)v179;
          sub_5E11C(*a1 + (_QWORD)v36 * v34, (uint64_t)v179, type metadata accessor for GenreHighlight);
          v184 = v33;
          v182 = v35;
          v199 = v36;
          v38 = v35 + (_QWORD)v36 * v33;
          v39 = (uint64_t)v180;
          sub_5E11C(v38, (uint64_t)v180, type metadata accessor for GenreHighlight);
          v40 = *(_QWORD *)(*(_QWORD *)v37 + 16);
          v41 = *(_QWORD *)(*(_QWORD *)v39 + 16);
          if (v40 == v41)
          {
            v42 = *(int *)(v193 + 24);
            v197 = v37 + v42;
            v43 = v39 + v42;
            v44 = type metadata accessor for Date(0);
            v45 = sub_648E0(&qword_31F140, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
            LODWORD(v197) = dispatch thunk of static Equatable.== infix(_:_:)(v197, v43, v44, v45);
            v47 = GenreInfo.name.getter(v46);
            v49 = v48;
            v52 = GenreInfo.name.getter(v50);
            v53 = v51;
            v55 = v47 == v52 && v49 == v51;
            v56 = (uint64_t)v196;
            if (v55)
            {
              swift_bridgeObjectRelease_n(v49, 2);
              LODWORD(v197) = 0;
            }
            else
            {
              LODWORD(v197) = _stringCompareWithSmolCheck(_:_:expecting:)(v47, v49, v52, v51, 1);
              swift_bridgeObjectRelease(v49);
              swift_bridgeObjectRelease(v53);
            }
          }
          else
          {
            LODWORD(v197) = v41 < v40;
            v56 = (uint64_t)v196;
          }
          sub_6685C((uint64_t)v180, type metadata accessor for GenreHighlight);
          sub_6685C((uint64_t)v179, type metadata accessor for GenreHighlight);
          v30 = v184 + 2;
          v29 = (Swift::Int)v198;
          if (v184 + 2 < (uint64_t)v198)
          {
            v194 = (_QWORD)v199 * v34;
            v57 = (uint64_t)v181;
            v58 = v182;
            v192 = (_QWORD)v199 * v30;
            while (1)
            {
              sub_5E11C(v58 + v192, v57, type metadata accessor for GenreHighlight);
              v59 = v185;
              sub_5E11C(v58 + v194, v185, type metadata accessor for GenreHighlight);
              v60 = v59;
              v61 = *(_QWORD *)(*(_QWORD *)v57 + 16);
              v62 = *(_QWORD *)(*(_QWORD *)v59 + 16);
              if (v61 == v62)
              {
                v195 = v30;
                v63 = *(int *)(v193 + 24);
                v64 = v57 + v63;
                v65 = v60 + v63;
                v66 = type metadata accessor for Date(0);
                v67 = sub_648E0(&qword_31F140, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
                dispatch thunk of static Equatable.== infix(_:_:)(v64, v65, v66, v67);
                v69 = GenreInfo.name.getter(v68);
                v71 = v70;
                v74 = GenreInfo.name.getter(v72);
                v75 = v73;
                if (v69 == v74 && v71 == v73)
                {
                  swift_bridgeObjectRelease_n(v71, 2);
                  v78 = 0;
                }
                else
                {
                  v78 = _stringCompareWithSmolCheck(_:_:expecting:)(v69, v71, v74, v73, 1);
                  swift_bridgeObjectRelease(v71);
                  swift_bridgeObjectRelease(v75);
                }
                a1 = v190;
                v30 = v195;
                v56 = (uint64_t)v196;
                v60 = v185;
                v57 = (uint64_t)v181;
              }
              else
              {
                v78 = v62 < v61;
              }
              sub_6685C(v60, type metadata accessor for GenreHighlight);
              sub_6685C(v57, type metadata accessor for GenreHighlight);
              if (((v197 ^ v78) & 1) != 0)
                break;
              ++v30;
              v58 += (Swift::Int)v199;
              v29 = (Swift::Int)v198;
              if (v198 == (char *)v30)
              {
                v30 = (Swift::Int)v198;
                v5 = v191;
                goto LABEL_46;
              }
            }
            v5 = v191;
            v29 = (Swift::Int)v198;
          }
LABEL_46:
          v33 = v184;
          if ((v197 & 1) != 0)
          {
            if (v30 < v184)
              goto LABEL_173;
            if (v184 < v30)
            {
              v176 = v31;
              v79 = 0;
              v80 = (_QWORD)v199 * (v30 - 1);
              v81 = v30 * (_QWORD)v199;
              v82 = v184 * (_QWORD)v199;
              do
              {
                if (v33 != v30 + v79 - 1)
                {
                  v85 = v182;
                  if (!v182)
                    goto LABEL_178;
                  v86 = v182 + v82;
                  v197 = v182 + v80;
                  sub_5E160(v182 + v82, v183, type metadata accessor for GenreHighlight);
                  if (v82 < v80 || v86 >= v85 + v81)
                  {
                    v83 = v85 + v82;
                    v84 = v197;
                    swift_arrayInitWithTakeFrontToBack(v83, v197);
                  }
                  else
                  {
                    v84 = v197;
                    if (v82 != v80)
                      swift_arrayInitWithTakeBackToFront(v86, v197);
                  }
                  sub_5E160(v183, v84, type metadata accessor for GenreHighlight);
                  v56 = (uint64_t)v196;
                }
                ++v33;
                --v79;
                v80 -= (uint64_t)v199;
                v81 -= (uint64_t)v199;
                v82 += (uint64_t)v199;
              }
              while (v33 < v30 + v79);
              v31 = v176;
              v5 = v191;
              v33 = v184;
              v29 = (Swift::Int)v198;
            }
          }
        }
        if (v30 >= v29)
          goto LABEL_88;
        if (__OFSUB__(v30, v33))
          goto LABEL_171;
        if (v30 - v33 >= v178)
          goto LABEL_88;
        if (__OFADD__(v33, v178))
          goto LABEL_174;
        v87 = v198;
        if (v33 + v178 < (uint64_t)v198)
          v87 = (char *)(v33 + v178);
        if ((uint64_t)v87 < v33)
          break;
        if ((char *)v30 == v87)
          goto LABEL_88;
        v184 = v33;
        v176 = v31;
        v88 = *(_QWORD *)(v187 + 72);
        v89 = v88 * (v30 - 1);
        v192 = v88;
        v199 = (char *)(v30 * v88);
        v90 = (uint64_t)v189;
        v182 = (Swift::Int)v87;
        while (2)
        {
          v194 = v89;
          v195 = v30;
          v91 = 0;
          v92 = v184;
          while (1)
          {
            v93 = *a1;
            v198 = &v199[v91];
            sub_5E11C((uint64_t)&v199[v91 + v93], v90, type metadata accessor for GenreHighlight);
            v197 = v89 + v91;
            sub_5E11C(v89 + v91 + v93, v56, type metadata accessor for GenreHighlight);
            v94 = *(_QWORD *)(*(_QWORD *)v90 + 16);
            v95 = *(_QWORD *)(*(_QWORD *)v56 + 16);
            if (v94 == v95)
              break;
            v111 = v95 < v94;
LABEL_84:
            sub_6685C(v56, type metadata accessor for GenreHighlight);
            sub_6685C(v90, type metadata accessor for GenreHighlight);
            if ((v111 & 1) == 0)
              goto LABEL_70;
            v112 = *a1;
            if (!*a1)
              goto LABEL_176;
            v113 = (uint64_t)&v199[v112 + v91];
            v89 = v194;
            v114 = v112 + v194 + v91;
            sub_5E160(v113, (uint64_t)v5, type metadata accessor for GenreHighlight);
            swift_arrayInitWithTakeFrontToBack(v113, v114);
            sub_5E160((uint64_t)v5, v114, type metadata accessor for GenreHighlight);
            v91 -= v192;
            ++v92;
            v56 = (uint64_t)v196;
            if (v195 == v92)
              goto LABEL_71;
          }
          v96 = *(int *)(v193 + 24);
          v97 = v90 + v96;
          v98 = v56 + v96;
          v99 = type metadata accessor for Date(0);
          v100 = sub_648E0(&qword_31F140, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
          dispatch thunk of static Equatable.== infix(_:_:)(v97, v98, v99, v100);
          v102 = GenreInfo.name.getter(v101);
          v104 = v103;
          v107 = GenreInfo.name.getter(v105);
          v108 = v106;
          v110 = v102 == v107 && v104 == v106;
          v5 = v191;
          if (!v110)
          {
            v111 = _stringCompareWithSmolCheck(_:_:expecting:)(v102, v104, v107, v106, 1);
            swift_bridgeObjectRelease(v104);
            swift_bridgeObjectRelease(v108);
            v90 = (uint64_t)v189;
            a1 = v190;
            v56 = (uint64_t)v196;
            goto LABEL_84;
          }
          swift_bridgeObjectRelease_n(v104, 2);
          v56 = (uint64_t)v196;
          sub_6685C((uint64_t)v196, type metadata accessor for GenreHighlight);
          v90 = (uint64_t)v189;
          sub_6685C((uint64_t)v189, type metadata accessor for GenreHighlight);
          a1 = v190;
LABEL_70:
          v89 = v194;
LABEL_71:
          v30 = v195 + 1;
          v89 += v192;
          v199 += v192;
          if (v195 + 1 != v182)
            continue;
          break;
        }
        v30 = v182;
        v31 = v176;
        v33 = v184;
LABEL_88:
        if (v30 < v33)
          goto LABEL_166;
        if ((swift_isUniquelyReferenced_nonNull_native(v31) & 1) == 0)
          v31 = sub_10ED88(0, *((_QWORD *)v31 + 2) + 1, 1, v31);
        v116 = *((_QWORD *)v31 + 2);
        v115 = *((_QWORD *)v31 + 3);
        v32 = v116 + 1;
        if (v116 >= v115 >> 1)
          v31 = sub_10ED88((char *)(v115 > 1), v116 + 1, 1, v31);
        *((_QWORD *)v31 + 2) = v32;
        v199 = v31 + 32;
        v117 = &v31[16 * v116 + 32];
        *(_QWORD *)v117 = v33;
        *((_QWORD *)v117 + 1) = v30;
        if (v116)
        {
          v118 = v199;
          while (1)
          {
            v119 = v32 - 1;
            if (v32 >= 4)
            {
              v124 = &v118[16 * v32];
              v125 = *((_QWORD *)v124 - 8);
              v126 = *((_QWORD *)v124 - 7);
              v130 = __OFSUB__(v126, v125);
              v127 = v126 - v125;
              if (v130)
                goto LABEL_155;
              v129 = *((_QWORD *)v124 - 6);
              v128 = *((_QWORD *)v124 - 5);
              v130 = __OFSUB__(v128, v129);
              v122 = v128 - v129;
              v123 = v130;
              if (v130)
                goto LABEL_156;
              v131 = v32 - 2;
              v132 = &v118[16 * v32 - 32];
              v134 = *(_QWORD *)v132;
              v133 = *((_QWORD *)v132 + 1);
              v130 = __OFSUB__(v133, v134);
              v135 = v133 - v134;
              if (v130)
                goto LABEL_158;
              v130 = __OFADD__(v122, v135);
              v136 = v122 + v135;
              if (v130)
                goto LABEL_161;
              if (v136 >= v127)
              {
                v154 = &v118[16 * v119];
                v156 = *(_QWORD *)v154;
                v155 = *((_QWORD *)v154 + 1);
                v130 = __OFSUB__(v155, v156);
                v157 = v155 - v156;
                if (v130)
                  goto LABEL_165;
                v147 = v122 < v157;
                goto LABEL_126;
              }
            }
            else
            {
              if (v32 != 3)
              {
                v148 = *((_QWORD *)v31 + 4);
                v149 = *((_QWORD *)v31 + 5);
                v130 = __OFSUB__(v149, v148);
                v141 = v149 - v148;
                v142 = v130;
                goto LABEL_120;
              }
              v121 = *((_QWORD *)v31 + 4);
              v120 = *((_QWORD *)v31 + 5);
              v130 = __OFSUB__(v120, v121);
              v122 = v120 - v121;
              v123 = v130;
            }
            if ((v123 & 1) != 0)
              goto LABEL_157;
            v131 = v32 - 2;
            v137 = &v118[16 * v32 - 32];
            v139 = *(_QWORD *)v137;
            v138 = *((_QWORD *)v137 + 1);
            v140 = __OFSUB__(v138, v139);
            v141 = v138 - v139;
            v142 = v140;
            if (v140)
              goto LABEL_160;
            v143 = &v118[16 * v119];
            v145 = *(_QWORD *)v143;
            v144 = *((_QWORD *)v143 + 1);
            v130 = __OFSUB__(v144, v145);
            v146 = v144 - v145;
            if (v130)
              goto LABEL_163;
            if (__OFADD__(v141, v146))
              goto LABEL_164;
            if (v141 + v146 >= v122)
            {
              v147 = v122 < v146;
LABEL_126:
              if (v147)
                v119 = v131;
              goto LABEL_128;
            }
LABEL_120:
            if ((v142 & 1) != 0)
              goto LABEL_159;
            v150 = &v118[16 * v119];
            v152 = *(_QWORD *)v150;
            v151 = *((_QWORD *)v150 + 1);
            v130 = __OFSUB__(v151, v152);
            v153 = v151 - v152;
            if (v130)
              goto LABEL_162;
            if (v153 < v141)
              goto LABEL_14;
LABEL_128:
            v158 = v119 - 1;
            if (v119 - 1 >= v32)
            {
              __break(1u);
LABEL_152:
              __break(1u);
LABEL_153:
              __break(1u);
LABEL_154:
              __break(1u);
LABEL_155:
              __break(1u);
LABEL_156:
              __break(1u);
LABEL_157:
              __break(1u);
LABEL_158:
              __break(1u);
LABEL_159:
              __break(1u);
LABEL_160:
              __break(1u);
LABEL_161:
              __break(1u);
LABEL_162:
              __break(1u);
LABEL_163:
              __break(1u);
LABEL_164:
              __break(1u);
LABEL_165:
              __break(1u);
LABEL_166:
              __break(1u);
LABEL_167:
              __break(1u);
LABEL_168:
              __break(1u);
LABEL_169:
              __break(1u);
LABEL_170:
              __break(1u);
LABEL_171:
              __break(1u);
LABEL_172:
              __break(1u);
LABEL_173:
              __break(1u);
LABEL_174:
              __break(1u);
              goto LABEL_175;
            }
            if (!*a1)
              goto LABEL_177;
            v159 = v30;
            v160 = v31;
            v161 = &v118[16 * v158];
            v162 = v118;
            v163 = *(_QWORD *)v161;
            v164 = &v162[16 * v119];
            v165 = *((_QWORD *)v164 + 1);
            v166 = v188;
            sub_C08C0(*a1 + *(_QWORD *)(v187 + 72) * *(_QWORD *)v161, *a1 + *(_QWORD *)(v187 + 72) * *(_QWORD *)v164, *a1 + *(_QWORD *)(v187 + 72) * v165, v186);
            v188 = v166;
            if (v166)
            {
              v31 = v160;
              goto LABEL_150;
            }
            if (v165 < v163)
              goto LABEL_152;
            if (v119 > *((_QWORD *)v160 + 2))
              goto LABEL_153;
            *(_QWORD *)v161 = v163;
            v118 = v199;
            *(_QWORD *)&v199[16 * v158 + 8] = v165;
            v167 = *((_QWORD *)v160 + 2);
            if (v119 >= v167)
              goto LABEL_154;
            v31 = v160;
            v32 = v167 - 1;
            memmove(v164, v164 + 16, 16 * (v167 - 1 - v119));
            *((_QWORD *)v160 + 2) = v167 - 1;
            v147 = v167 > 2;
            v5 = v191;
            v30 = v159;
            if (!v147)
              goto LABEL_14;
          }
        }
        v32 = 1;
LABEL_14:
        v29 = a1[1];
        if (v30 >= v29)
          goto LABEL_139;
      }
LABEL_175:
      __break(1u);
LABEL_176:
      __break(1u);
LABEL_177:
      __break(1u);
LABEL_178:
      __break(1u);
LABEL_179:
      __break(1u);
      goto LABEL_180;
    }
    v31 = (char *)_swiftEmptyArrayStorage;
    v32 = _swiftEmptyArrayStorage[2];
LABEL_139:
    if (v32 >= 2)
    {
      v168 = *a1;
      v169 = v188;
      do
      {
        v170 = v32 - 2;
        if (v32 < 2)
          goto LABEL_167;
        if (!v168)
          goto LABEL_179;
        v171 = *(_QWORD *)&v31[16 * v170 + 32];
        v172 = *(_QWORD *)&v31[16 * v32 + 24];
        sub_C08C0(v168 + *(_QWORD *)(v187 + 72) * v171, v168 + *(_QWORD *)(v187 + 72) * *(_QWORD *)&v31[16 * v32 + 16], v168 + *(_QWORD *)(v187 + 72) * v172, v186);
        if (v169)
          break;
        if (v172 < v171)
          goto LABEL_168;
        if ((swift_isUniquelyReferenced_nonNull_native(v31) & 1) == 0)
          v31 = sub_10F048((uint64_t)v31);
        if (v170 >= *((_QWORD *)v31 + 2))
          goto LABEL_169;
        v173 = &v31[16 * v170 + 32];
        *(_QWORD *)v173 = v171;
        *((_QWORD *)v173 + 1) = v172;
        v174 = *((_QWORD *)v31 + 2);
        if (v32 > v174)
          goto LABEL_170;
        memmove(&v31[16 * v32 + 16], &v31[16 * v32 + 32], 16 * (v174 - v32));
        *((_QWORD *)v31 + 2) = v174 - 1;
        v32 = v174 - 1;
      }
      while (v174 > 2);
    }
LABEL_150:
    swift_bridgeObjectRelease(v31);
    v175 = v177;
    v177[2] = 0;
    swift_bridgeObjectRelease(v175);
  }
}

void sub_C0574(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __n128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __n128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  BOOL v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;

  v45 = a1;
  v51 = type metadata accessor for GenreHighlight(0);
  __chkstk_darwin(v51);
  v8 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v52 = (uint64_t)&v43 - v10;
  __chkstk_darwin(v11);
  v14 = (char *)&v43 - v13;
  v44 = a2;
  if (a3 != a2)
  {
    v15 = *(_QWORD *)(v12 + 72);
    v56 = v15 * (a3 - 1);
    v55 = v15 * a3;
    v48 = (char *)&v43 - v13;
    v49 = a4;
    v46 = v15;
    v47 = v8;
LABEL_6:
    v16 = 0;
    v17 = v45;
    v50 = a3;
    while (1)
    {
      v18 = *a4;
      v54 = v55 + v16;
      sub_5E11C(v55 + v16 + v18, (uint64_t)v14, type metadata accessor for GenreHighlight);
      v53 = v56 + v16;
      v19 = v56 + v16 + v18;
      v20 = v52;
      sub_5E11C(v19, v52, type metadata accessor for GenreHighlight);
      v21 = *(_QWORD *)(*(_QWORD *)v14 + 16);
      v22 = *(_QWORD *)(*(_QWORD *)v20 + 16);
      if (v21 == v22)
      {
        v23 = *(int *)(v51 + 24);
        v24 = v20;
        v25 = &v14[v23];
        v26 = v24 + v23;
        v27 = type metadata accessor for Date(0);
        v28 = sub_648E0(&qword_31F140, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
        dispatch thunk of static Equatable.== infix(_:_:)(v25, v26, v27, v28);
        v30 = GenreInfo.name.getter(v29);
        v32 = v31;
        v35 = GenreInfo.name.getter(v33);
        v36 = v34;
        v38 = v30 == v35 && v32 == v34;
        v15 = v46;
        v8 = v47;
        if (v38)
        {
          swift_bridgeObjectRelease_n(v32, 2);
          sub_6685C(v52, type metadata accessor for GenreHighlight);
          v14 = v48;
          sub_6685C((uint64_t)v48, type metadata accessor for GenreHighlight);
          a4 = v49;
          a3 = v50;
LABEL_5:
          ++a3;
          v56 += v15;
          v55 += v15;
          if (a3 == v44)
            return;
          goto LABEL_6;
        }
        v39 = _stringCompareWithSmolCheck(_:_:expecting:)(v30, v32, v35, v34, 1);
        swift_bridgeObjectRelease(v32);
        swift_bridgeObjectRelease(v36);
        a4 = v49;
        a3 = v50;
        v20 = v52;
        v14 = v48;
      }
      else
      {
        v39 = v22 < v21;
      }
      sub_6685C(v20, type metadata accessor for GenreHighlight);
      sub_6685C((uint64_t)v14, type metadata accessor for GenreHighlight);
      if ((v39 & 1) == 0)
        goto LABEL_5;
      v40 = *a4;
      if (!*a4)
        break;
      v41 = v40 + v55 + v16;
      v42 = v40 + v56 + v16;
      sub_5E160(v41, (uint64_t)v8, type metadata accessor for GenreHighlight);
      swift_arrayInitWithTakeFrontToBack(v41, v42);
      sub_5E160((uint64_t)v8, v42, type metadata accessor for GenreHighlight);
      v16 -= v15;
      if (a3 == ++v17)
        goto LABEL_5;
    }
    __break(1u);
  }
}

uint64_t sub_C08C0(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  __n128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __n128 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v44;
  unint64_t v45;
  unint64_t v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  __n128 v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  __n128 v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char v70;
  unint64_t v71;
  unint64_t v72;
  unint64_t v73;
  unint64_t v74;
  unint64_t v75;
  uint64_t result;
  uint64_t v77;
  unint64_t v78;
  char *v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  unint64_t v87;
  unint64_t v88;

  v85 = type metadata accessor for GenreHighlight(0);
  __chkstk_darwin(v85);
  v79 = (char *)&v77 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v82 = (uint64_t)&v77 - v10;
  __chkstk_darwin(v11);
  v13 = (char *)&v77 - v12;
  __chkstk_darwin(v14);
  v16 = (char *)&v77 - v15;
  v18 = *(_QWORD *)(v17 + 72);
  if (!v18)
  {
    __break(1u);
LABEL_84:
    __break(1u);
LABEL_85:
    __break(1u);
    goto LABEL_86;
  }
  if (a2 - a1 == 0x8000000000000000 && v18 == -1)
    goto LABEL_84;
  v19 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v18 == -1)
    goto LABEL_85;
  v20 = (uint64_t)(a2 - a1) / v18;
  v88 = a1;
  v87 = a4;
  v21 = v19 / v18;
  if (v20 >= v19 / v18)
  {
    if ((v21 & 0x8000000000000000) == 0)
    {
      v23 = v21 * v18;
      v24 = (uint64_t)v79;
      if (a4 < a2 || a2 + v23 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack(a4, a2);
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront(a4, a2);
      }
      v48 = a4 + v23;
      v86 = a4 + v23;
      v88 = a2;
      if (v23 >= 1 && a1 < a2)
      {
        v50 = -v18;
        v78 = a1;
        v80 = a4;
        v81 = -v18;
        do
        {
          v51 = v82;
          sub_5E11C(v48 + v50, v82, type metadata accessor for GenreHighlight);
          v52 = a2 + v50;
          sub_5E11C(a2 + v50, v24, type metadata accessor for GenreHighlight);
          v53 = *(_QWORD *)(*(_QWORD *)v51 + 16);
          v54 = *(_QWORD *)(*(_QWORD *)v24 + 16);
          v83 = a2;
          v84 = a3;
          if (v53 == v54)
          {
            v55 = *(int *)(v85 + 24);
            v56 = v51 + v55;
            v57 = v24 + v55;
            v58 = type metadata accessor for Date(0);
            v59 = sub_648E0(&qword_31F140, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
            dispatch thunk of static Equatable.== infix(_:_:)(v56, v57, v58, v59);
            v61 = GenreInfo.name.getter(v60);
            v63 = v62;
            v66 = GenreInfo.name.getter(v64);
            v67 = v65;
            if (v61 == v66 && v63 == v65)
            {
              swift_bridgeObjectRelease_n(v63, 2);
              v70 = 0;
            }
            else
            {
              v70 = _stringCompareWithSmolCheck(_:_:expecting:)(v61, v63, v66, v65, 1);
              swift_bridgeObjectRelease(v63);
              swift_bridgeObjectRelease(v67);
            }
            v71 = v78;
            v24 = (uint64_t)v79;
            v51 = v82;
          }
          else
          {
            v71 = a1;
            v70 = v54 < v53;
          }
          v50 = v81;
          v72 = v84;
          v73 = v84 + v81;
          sub_6685C(v24, type metadata accessor for GenreHighlight);
          sub_6685C(v51, type metadata accessor for GenreHighlight);
          if ((v70 & 1) != 0)
          {
            if (v72 < v83 || v73 >= v83)
            {
              swift_arrayInitWithTakeFrontToBack(v72 + v50, v52);
              v50 = v81;
              a1 = v71;
            }
            else
            {
              v50 = v81;
              a1 = v71;
              if (v84 != v83)
                swift_arrayInitWithTakeBackToFront(v73, v52);
            }
            v88 += v50;
          }
          else
          {
            v74 = v86;
            v75 = v86 + v50;
            v86 += v50;
            if (v72 < v74 || v73 >= v74)
            {
              swift_arrayInitWithTakeFrontToBack(v72 + v50, v75);
              v52 = v83;
              a1 = v71;
            }
            else
            {
              v52 = v83;
              a1 = v71;
              if (v84 != v74)
                swift_arrayInitWithTakeBackToFront(v72 + v50, v75);
            }
          }
          v48 = v86;
          if (v86 <= v80)
            break;
          a2 = v52;
          a3 = v73;
        }
        while (v52 > a1);
      }
LABEL_82:
      sub_10EE80(&v88, &v87, (uint64_t *)&v86);
      return 1;
    }
  }
  else if ((v20 & 0x8000000000000000) == 0)
  {
    v22 = v20 * v18;
    if (a4 < a1 || a1 + v22 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack(a4, a1);
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront(a4, a1);
    }
    v25 = a4 + v22;
    v86 = a4 + v22;
    if (v22 >= 1 && a2 < a3)
    {
      v83 = a4 + v22;
      v84 = v18;
      while (1)
      {
        sub_5E11C(a2, (uint64_t)v16, type metadata accessor for GenreHighlight);
        sub_5E11C(a4, (uint64_t)v13, type metadata accessor for GenreHighlight);
        v27 = *(_QWORD *)(*(_QWORD *)v16 + 16);
        v28 = *(_QWORD *)(*(_QWORD *)v13 + 16);
        if (v27 == v28)
        {
          v29 = *(int *)(v85 + 24);
          v30 = &v16[v29];
          v31 = &v13[v29];
          v32 = type metadata accessor for Date(0);
          v33 = sub_648E0(&qword_31F140, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
          dispatch thunk of static Equatable.== infix(_:_:)(v30, v31, v32, v33);
          v35 = GenreInfo.name.getter(v34);
          v37 = v36;
          v40 = GenreInfo.name.getter(v38);
          v41 = v39;
          if (v35 == v40 && v37 == v39)
          {
            swift_bridgeObjectRelease_n(v37, 2);
            sub_6685C((uint64_t)v13, type metadata accessor for GenreHighlight);
            sub_6685C((uint64_t)v16, type metadata accessor for GenreHighlight);
            v25 = v83;
            v18 = v84;
LABEL_39:
            v45 = v88;
            v47 = v87 + v18;
            if (v88 < v87 || v88 >= v47)
            {
              swift_arrayInitWithTakeFrontToBack(v88, v87);
            }
            else if (v88 != v87)
            {
              swift_arrayInitWithTakeBackToFront(v88, v87);
            }
            v87 = v47;
            v46 = a2;
            goto LABEL_47;
          }
          v44 = _stringCompareWithSmolCheck(_:_:expecting:)(v35, v37, v40, v39, 1);
          swift_bridgeObjectRelease(v37);
          swift_bridgeObjectRelease(v41);
          v25 = v83;
          v18 = v84;
        }
        else
        {
          v44 = v28 < v27;
        }
        sub_6685C((uint64_t)v13, type metadata accessor for GenreHighlight);
        sub_6685C((uint64_t)v16, type metadata accessor for GenreHighlight);
        if ((v44 & 1) == 0)
          goto LABEL_39;
        v45 = v88;
        v46 = a2 + v18;
        if (v88 < a2 || v88 >= v46)
        {
          swift_arrayInitWithTakeFrontToBack(v88, a2);
        }
        else if (v88 == a2)
        {
          v45 = a2;
        }
        else
        {
          swift_arrayInitWithTakeBackToFront(v88, a2);
        }
LABEL_47:
        v88 = v45 + v18;
        a4 = v87;
        if (v87 < v25)
        {
          a2 = v46;
          if (v46 < a3)
            continue;
        }
        goto LABEL_82;
      }
    }
    goto LABEL_82;
  }
LABEL_86:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
  __break(1u);
  return result;
}

