TUI::ElementInstantiating::BuilderCache *TUI::ElementInstantiating::BuilderCache::BuilderCache(TUI::ElementInstantiating::BuilderCache *this)
{
  char *v2;
  __objc2_prot *v4;
  __objc2_prot *v5;
  __objc2_prot **v6;

  *(_OWORD *)((char *)this + 8) = 0u;
  v2 = (char *)this + 8;
  *(_OWORD *)((char *)this + 24) = 0u;
  *((_DWORD *)this + 10) = 1065353216;
  *((_OWORD *)this + 3) = 0u;
  *((_OWORD *)this + 4) = 0u;
  *((_DWORD *)this + 20) = 1065353216;
  v5 = &OBJC_PROTOCOL___TUIBoxBuilding;
  v6 = &v5;
  sub_67AC((uint64_t)v2, (unint64_t *)&v5, (uint64_t)&std::piecewise_construct, (uint64_t **)&v6)[3] = 0;

  v4 = &OBJC_PROTOCOL___TUIAnimationBuilding;
  v6 = &v4;
  sub_67AC((uint64_t)v2, (unint64_t *)&v4, (uint64_t)&std::piecewise_construct, (uint64_t **)&v6)[3] = 1;

  *(_DWORD *)this = 0;
  return this;
}

void sub_5258(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  uint64_t v9;
  uint64_t v10;

  sub_6738(v10);
  sub_6738(v9);
  _Unwind_Resume(a1);
}

void TUI::ElementInstantiating::BuilderCache::~BuilderCache(TUI::ElementInstantiating::BuilderCache *this)
{
  sub_6738((uint64_t)this + 48);
  sub_6738((uint64_t)this + 8);
}

{
  sub_6738((uint64_t)this + 48);
  sub_6738((uint64_t)this + 8);
}

uint64_t TUI::ElementInstantiating::BuilderCache::computeProtocolsFromClass(os_unfair_lock_s *this, objc_class *a2)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t *v5;
  id v7;
  id *v8;

  v7 = a2;
  os_unfair_lock_lock(this);
  v3 = sub_6C98(&this[12]._os_unfair_lock_opaque, (unint64_t *)&v7);
  if (v3)
  {
    v4 = v3[3];
  }
  else
  {
    v5 = *(uint64_t **)&this[6]._os_unfair_lock_opaque;
    if (v5)
    {
      v4 = 0;
      do
      {
        if (objc_msgSend(v7, "conformsToProtocol:", v5[2]))
          v4 |= 1 << *((_DWORD *)v5 + 6);
        v5 = (uint64_t *)*v5;
      }
      while (v5);
    }
    else
    {
      v4 = 0;
    }
    v8 = &v7;
    sub_6D50((uint64_t)&this[12], (unint64_t *)&v7, (uint64_t)&std::piecewise_construct, &v8)[3] = v4;
  }
  os_unfair_lock_unlock(this);
  return v4;
}

uint64_t TUI::ElementInstantiating::BuilderCache::computeProtocolsFromArray(uint64_t a1, void *a2)
{
  id v3;
  id v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  void *v8;
  _QWORD *v9;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  unint64_t v15;
  _BYTE v16[128];

  v3 = a2;
  os_unfair_lock_lock((os_unfair_lock_t)a1);
  v11 = 0u;
  v12 = 0u;
  v13 = 0u;
  v14 = 0u;
  v4 = v3;
  v5 = 0;
  v6 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v11, v16, 16);
  if (v6)
  {
    v7 = *(_QWORD *)v12;
    do
    {
      v8 = 0;
      do
      {
        if (*(_QWORD *)v12 != v7)
          objc_enumerationMutation(v4);
        v15 = *(_QWORD *)(*((_QWORD *)&v11 + 1) + 8 * (_QWORD)v8);
        v9 = sub_6C98((_QWORD *)(a1 + 8), &v15);
        if (v9)
          v5 |= 1 << *((_DWORD *)v9 + 6);
        v8 = (char *)v8 + 1;
      }
      while (v6 != v8);
      v6 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v11, v16, 16);
    }
    while (v6);
  }

  os_unfair_lock_unlock((os_unfair_lock_t)a1);
  return v5;
}

void sub_5500(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void TUI::ElementInstantiating::BuilderCache::registerBuilderProtocol(os_unfair_lock_s *this, Protocol *a2)
{
  uint64_t v3;
  uint64_t **v4;
  uint64_t v5;
  Protocol *v6;
  id *v7;

  v6 = a2;
  os_unfair_lock_lock(this);
  if (!sub_6C98(&this[2]._os_unfair_lock_opaque, (unint64_t *)&v6))
  {
    v3 = *(_QWORD *)&this[8]._os_unfair_lock_opaque;
    v7 = (id *)&v6;
    sub_6D50((uint64_t)&this[2], (unint64_t *)&v6, (uint64_t)&std::piecewise_construct, &v7)[3] = v3;
    v4 = *(uint64_t ***)&this[16]._os_unfair_lock_opaque;
    if (v4)
    {
      v5 = 1 << v3;
      do
      {
        if (objc_msgSend(v4[2], "conformsToProtocol:", v6))
          v4[3] = (uint64_t *)((unint64_t)v4[3] | v5);
        v4 = (uint64_t **)*v4;
      }
      while (v4);
    }
  }
  os_unfair_lock_unlock(this);

}

void sub_55EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{

  _Unwind_Resume(a1);
}

void TUI::ElementInstantiating::BuilderCache::updateProtocolsWithBuilderProtocol(uint64_t a1, _QWORD *a2, void *a3)
{
  _QWORD *v5;
  id v6;

  v6 = a3;
  os_unfair_lock_lock((os_unfair_lock_t)a1);
  v5 = sub_6C98((_QWORD *)(a1 + 8), (unint64_t *)&v6);
  if (v5)
    *a2 |= 1 << *((_DWORD *)v5 + 6);
  os_unfair_lock_unlock((os_unfair_lock_t)a1);

}

void sub_567C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{

  _Unwind_Resume(a1);
}

id TUI::ElementInstantiating::BuilderCache::description(uint64_t a1, unint64_t a2)
{
  NSMutableString *v4;
  uint64_t *v5;
  char v6;
  NSString *v7;
  void *v8;
  id v9;

  v4 = objc_opt_new(NSMutableString);
  -[NSMutableString appendString:](v4, "appendString:", CFSTR("["));
  v5 = *(uint64_t **)(a1 + 24);
  if (v5)
  {
    v6 = 1;
    do
    {
      if (((1 << *((_DWORD *)v5 + 6)) & a2) != 0)
      {
        if ((v6 & 1) == 0)
          -[NSMutableString appendString:](v4, "appendString:", CFSTR(","));
        v7 = NSStringFromProtocol((Protocol *)v5[2]);
        v8 = (void *)objc_claimAutoreleasedReturnValue(v7);
        -[NSMutableString appendString:](v4, "appendString:", v8);

        v6 = 0;
      }
      v5 = (uint64_t *)*v5;
    }
    while (v5);
  }
  -[NSMutableString appendString:](v4, "appendString:", CFSTR("]"));
  v9 = -[NSMutableString copy](v4, "copy");

  return v9;
}

void sub_5768(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

TUI::ElementInstantiating::ConformanceCache::Conformance *TUI::ElementInstantiating::ConformanceCache::Conformance::Conformance(TUI::ElementInstantiating::ConformanceCache::Conformance *this)
{
  *((_QWORD *)this + 3) = 0;
  *((_QWORD *)this + 4) = 0;
  bzero(this, 0x30uLL);
  return this;
}

{
  *((_QWORD *)this + 3) = 0;
  *((_QWORD *)this + 4) = 0;
  bzero(this, 0x30uLL);
  return this;
}

TUI::ElementInstantiating::ConformanceCache *TUI::ElementInstantiating::ConformanceCache::ConformanceCache(TUI::ElementInstantiating::ConformanceCache *this, TUIElementRegistry *a2, const StringsSection *a3, os_unfair_lock_s *a4)
{
  uint64_t v7;
  unint64_t v8;
  void *v9;
  objc_class *v10;
  Protocol *v11;
  void *v12;
  id v13;
  id v14;
  uint64_t v15;
  void *i;
  objc_class *v17;
  uint64_t v18;
  objc_class *v19;
  void *v20;
  uint64_t v21;
  void *v22;
  objc_class *v23;
  id v24;
  objc_class *v25;
  void *v26;
  uint64_t v27;
  unsigned int v28;
  int v29;
  unint64_t v30;
  void *v31;
  int v32;
  unint64_t v33;
  unsigned int v34;
  char v35;
  int v36;
  unint64_t v37;
  unsigned int v38;
  uint64_t v39;
  unint64_t v40;
  unsigned int v41;
  uint64_t v42;
  unint64_t v43;
  unsigned int v44;
  int v45;
  char v46;
  int v47;
  unint64_t v48;
  char v49;
  int v50;
  unint64_t v51;
  char v52;
  int v53;
  unint64_t v54;
  char v55;
  uint64_t v56;
  unint64_t v57;
  char v58;
  int v59;
  unint64_t v60;
  char v61;
  int v62;
  uint64_t v63;
  unint64_t v64;
  char v65;
  char v66;
  int v67;
  unint64_t v68;
  unsigned int v69;
  unint64_t v70;
  int v71;
  char v72;
  int v73;
  unint64_t v74;
  char v75;
  int v76;
  unint64_t v77;
  char v78;
  int v79;
  uint64_t v80;
  unint64_t v81;
  char v82;
  char v83;
  int v84;
  unint64_t v85;
  unsigned int v86;
  unint64_t v87;
  int v88;
  unsigned int v89;
  unint64_t v90;
  int v91;
  unsigned int v92;
  unint64_t v93;
  int v94;
  unsigned int v95;
  unint64_t v96;
  int v97;
  int v98;
  BOOL v99;
  int v100;
  unsigned __int8 v101;
  unint64_t v102;
  char v103;
  uint64_t v104;
  unint64_t v105;
  unsigned int v106;
  int v107;
  unsigned int v108;
  uint64_t v109;
  unint64_t v110;
  unsigned int v111;
  int v112;
  _OWORD *v113;
  unint64_t v114;
  __int128 v115;
  __int128 v116;
  _OWORD *v117;
  unint64_t v118;
  unint64_t v119;
  unint64_t v120;
  unint64_t v121;
  char *v122;
  char *v123;
  __int128 v124;
  __int128 v125;
  char *v126;
  char *v127;
  _OWORD *v128;
  __int128 v129;
  __int128 v130;
  char **v132;
  TUIElementRegistry *v133;
  objc_class *v134[2];
  __int128 v135;
  __int128 v136;
  __int128 v137;
  __int128 v138;
  __int128 v139;
  __int128 v140;
  __objc2_prot *v141;
  _BYTE v142[128];

  v133 = a2;
  *((_QWORD *)this + 6) = 0;
  *((_QWORD *)this + 7) = 0;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  *(_QWORD *)this = 0;
  bzero((char *)this + 24, 0x30uLL);
  *((_QWORD *)this + 9) = 0;
  *((_QWORD *)this + 10) = 0;
  v132 = (char **)((char *)this + 72);
  *((_QWORD *)this + 11) = 0;
  TUI::ElementInstantiating::BuilderCache::registerBuilderProtocol(a4, (Protocol *)&OBJC_PROTOCOL___TUIModelBuilding);
  if (a3->count)
  {
    v8 = 0;
    do
    {
      if (a3->base)
      {
        v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", &a3->base[a3->offsets[v8]]));
        v10 = -[TUIElementRegistry elementClassForName:](v133, "elementClassForName:", v9);

        if (v10)
        {
          if ((objc_opt_respondsToSelector(v10, "requiredBuilderProtocol") & 1) != 0)
          {
            v11 = (Protocol *)objc_claimAutoreleasedReturnValue(-[objc_class requiredBuilderProtocol](v10, "requiredBuilderProtocol"));
            if (v11)
              TUI::ElementInstantiating::BuilderCache::registerBuilderProtocol(a4, v11);
          }
          else
          {
            v11 = 0;
          }
          if ((objc_opt_respondsToSelector(v10, "requiredBuilderProtocols") & 1) != 0)
            v12 = (void *)objc_claimAutoreleasedReturnValue(-[objc_class requiredBuilderProtocols](v10, "requiredBuilderProtocols"));
          else
            v12 = 0;
          v139 = 0u;
          v140 = 0u;
          v137 = 0u;
          v138 = 0u;
          v13 = v12;
          v14 = objc_msgSend(v13, "countByEnumeratingWithState:objects:count:", &v137, v142, 16);
          if (v14)
          {
            v15 = *(_QWORD *)v138;
            do
            {
              for (i = 0; i != v14; i = (char *)i + 1)
              {
                if (*(_QWORD *)v138 != v15)
                  objc_enumerationMutation(v13);
                TUI::ElementInstantiating::BuilderCache::registerBuilderProtocol(a4, *(Protocol **)(*((_QWORD *)&v137 + 1) + 8 * (_QWORD)i));
              }
              v14 = objc_msgSend(v13, "countByEnumeratingWithState:objects:count:", &v137, v142, 16);
            }
            while (v14);
          }

        }
      }
      ++v8;
    }
    while (v8 < a3->count);
  }
  v17 = (objc_class *)objc_opt_class(TUIBoxBuilder, v7);
  *(_QWORD *)this = TUI::ElementInstantiating::BuilderCache::computeProtocolsFromClass(a4, v17);
  v19 = (objc_class *)objc_opt_class(TUIAnimationBuilder, v18);
  *((_QWORD *)this + 1) = TUI::ElementInstantiating::BuilderCache::computeProtocolsFromClass(a4, v19);
  v141 = &OBJC_PROTOCOL___TUITextModelBuilding;
  v20 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v141, 1));
  *((_QWORD *)this + 2) = TUI::ElementInstantiating::BuilderCache::computeProtocolsFromArray((uint64_t)a4, v20);

  if (a3->count)
  {
    v21 = 0;
    while (1)
    {
      *((_QWORD *)&v135 + 1) = 0;
      *(_QWORD *)&v136 = 0;
      bzero(v134, 0x30uLL);
      if (a3->base)
      {
        v22 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", &a3->base[a3->offsets[v21]]));
        v23 = -[TUIElementRegistry elementClassForName:](v133, "elementClassForName:", v22);

        if (v23)
        {
          if ((objc_opt_respondsToSelector(v23, "definesScopes") & 1) != 0)
            break;
        }
      }
LABEL_154:
      v113 = (_OWORD *)*((_QWORD *)this + 10);
      v114 = *((_QWORD *)this + 11);
      if ((unint64_t)v113 >= v114)
      {
        v118 = 0xAAAAAAAAAAAAAAABLL * (((char *)v113 - *v132) >> 4);
        v119 = v118 + 1;
        if (v118 + 1 > 0x555555555555555)
          sub_6F9C();
        v120 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v114 - (_QWORD)*v132) >> 4);
        if (2 * v120 > v119)
          v119 = 2 * v120;
        if (v120 >= 0x2AAAAAAAAAAAAAALL)
          v121 = 0x555555555555555;
        else
          v121 = v119;
        if (v121)
          v122 = (char *)sub_7024((uint64_t)this + 88, v121);
        else
          v122 = 0;
        v123 = &v122[48 * v118];
        v124 = *(_OWORD *)v134;
        v125 = v136;
        *((_OWORD *)v123 + 1) = v135;
        *((_OWORD *)v123 + 2) = v125;
        *(_OWORD *)v123 = v124;
        v127 = (char *)*((_QWORD *)this + 9);
        v126 = (char *)*((_QWORD *)this + 10);
        v128 = v123;
        if (v126 != v127)
        {
          do
          {
            v129 = *((_OWORD *)v126 - 3);
            v130 = *((_OWORD *)v126 - 2);
            *(_OWORD *)((char *)v128 - 19) = *(_OWORD *)(v126 - 19);
            *(v128 - 3) = v129;
            *(v128 - 2) = v130;
            v128 -= 3;
            v126 -= 48;
          }
          while (v126 != v127);
          v126 = *v132;
        }
        v117 = v123 + 48;
        *((_QWORD *)this + 9) = v128;
        *((_QWORD *)this + 10) = v123 + 48;
        *((_QWORD *)this + 11) = &v122[48 * v121];
        if (v126)
          operator delete(v126);
      }
      else
      {
        v115 = *(_OWORD *)v134;
        v116 = v136;
        v113[1] = v135;
        v113[2] = v116;
        *v113 = v115;
        v117 = v113 + 3;
      }
      *((_QWORD *)this + 10) = v117;
      if (++v21 >= a3->count)
        goto LABEL_171;
    }
    v134[0] = v23;
    if ((objc_opt_respondsToSelector(v23, "objectClass") & 1) != 0)
      v24 = -[objc_class objectClass](v23, "objectClass");
    else
      v24 = 0;
    *(_QWORD *)&v135 = v24;
    if ((objc_opt_respondsToSelector(v23, "builderClass") & 1) != 0)
      v25 = (objc_class *)-[objc_class builderClass](v23, "builderClass");
    else
      v25 = 0;
    v134[1] = v25;
    if ((objc_opt_respondsToSelector(v23, "requiredBuilderProtocol") & 1) != 0)
    {
      v26 = (void *)objc_claimAutoreleasedReturnValue(-[objc_class requiredBuilderProtocol](v23, "requiredBuilderProtocol"));
      if (v26)
      {
        TUI::ElementInstantiating::BuilderCache::updateProtocolsWithBuilderProtocol((uint64_t)a4, &v136, v26);
LABEL_39:

LABEL_40:
        v28 = objc_msgSend((id)v135, "isSubclassOfClass:", objc_opt_class(TUIBox, v27));
        v29 = 0x8000000;
        if (!v28)
          v29 = 0;
        v30 = DWORD2(v136) & 0xF7FFFFFF | ((unint64_t)BYTE12(v136) << 32);
        DWORD2(v136) = DWORD2(v136) & 0xF7FFFFFF | v29;
        BYTE12(v136) = BYTE4(v30);
        if (v134[1])
        {
          *((_QWORD *)&v135 + 1) = TUI::ElementInstantiating::BuilderCache::computeProtocolsFromClass(a4, v134[1]);
        }
        else if ((objc_opt_respondsToSelector(v23, "builderProtocols") & 1) != 0)
        {
          v31 = (void *)objc_claimAutoreleasedReturnValue(-[objc_class builderProtocols](v23, "builderProtocols"));
          if (objc_msgSend(v31, "count"))
            *((_QWORD *)&v135 + 1) = TUI::ElementInstantiating::BuilderCache::computeProtocolsFromArray((uint64_t)a4, v31);
          else
            DWORD2(v136) |= 2u;

        }
        if (!v134[1] && !*((_QWORD *)&v135 + 1))
        {
          v32 = 0x4000000;
          if (!v28)
            v32 = 0;
          v33 = DWORD2(v136) & 0xFBFFFFFF | ((unint64_t)BYTE12(v136) << 32);
          DWORD2(v136) = DWORD2(v136) & 0xFBFFFFFF | v32;
          BYTE12(v136) = BYTE4(v33);
        }
        if ((_QWORD)v136)
          v34 = 0;
        else
          v34 = v28;
        if (v34 == 1)
          *(_QWORD *)&v136 = *(_QWORD *)this;
        v35 = objc_opt_respondsToSelector(v23, "builderWithNode:object:attributes:context:");
        v36 = 4;
        if ((v35 & 1) == 0)
          v36 = 0;
        v37 = DWORD2(v136) & 0xFFFFFFFB | ((unint64_t)BYTE12(v136) << 32);
        DWORD2(v136) = DWORD2(v136) & 0xFFFFFFFB | v36;
        BYTE12(v136) = BYTE4(v37);
        if ((objc_opt_respondsToSelector(v23, "evaluateAttributes") & 1) != 0)
        {
          v38 = -[objc_class evaluateAttributes](v23, "evaluateAttributes");
          v39 = 8;
          if (!v38)
            v39 = 0;
          v40 = DWORD2(v136) & 0xFFFFFFF7 | ((unint64_t)BYTE12(v136) << 32) | v39;
          DWORD2(v136) = DWORD2(v136) & 0xFFFFFFF7 | v39;
          if ((v38 & 1) == 0)
            goto LABEL_71;
        }
        else
        {
          DWORD2(v136) |= 8u;
        }
        if ((objc_opt_respondsToSelector(v23, "resolveAttributes") & 1) != 0)
        {
          v41 = -[objc_class resolveAttributes](v23, "resolveAttributes");
          v40 = DWORD2(v136) | ((unint64_t)BYTE12(v136) << 32);
          if (!v41)
          {
            v42 = 0;
            goto LABEL_72;
          }
        }
        else
        {
          v40 = DWORD2(v136) | ((unint64_t)BYTE12(v136) << 32);
        }
LABEL_71:
        v42 = 16;
LABEL_72:
        v43 = v40 & 0xFFFFFFFFFFFFFFEFLL | v42;
        BYTE12(v136) = BYTE4(v40);
        DWORD2(v136) = v43;
        if ((v40 & 8) != 0)
        {
          if ((objc_opt_respondsToSelector(v23, "resolveAttributesForInvocation") & 1) != 0)
          {
            v44 = -[objc_class resolveAttributesForInvocation](v23, "resolveAttributesForInvocation");
            v43 = DWORD2(v136) | ((unint64_t)BYTE12(v136) << 32);
            if (!v44)
            {
              v45 = 0;
              goto LABEL_78;
            }
          }
          else
          {
            v43 = DWORD2(v136) | ((unint64_t)BYTE12(v136) << 32);
          }
        }
        v45 = 32;
LABEL_78:
        BYTE12(v136) = BYTE4(v43);
        DWORD2(v136) = v43 & 0xFFFFFFDF | v45;
        v46 = objc_opt_respondsToSelector(v23, "attributesToEvaluate");
        v47 = 64;
        if ((v46 & 1) == 0)
          v47 = 0;
        v48 = DWORD2(v136) & 0xFFFFFFBF | ((unint64_t)BYTE12(v136) << 32);
        DWORD2(v136) = DWORD2(v136) & 0xFFFFFFBF | v47;
        BYTE12(v136) = BYTE4(v48);
        v49 = objc_opt_respondsToSelector(v23, "attributesToEvaluateForInvocation");
        v50 = 128;
        if ((v49 & 1) == 0)
          v50 = 0;
        v51 = DWORD2(v136) & 0xFFFFFF7F | ((unint64_t)BYTE12(v136) << 32);
        DWORD2(v136) = DWORD2(v136) & 0xFFFFFF7F | v50;
        BYTE12(v136) = BYTE4(v51);
        v52 = objc_opt_respondsToSelector(v23, "attributesToIgnoreWhenResolving");
        v53 = 256;
        if ((v52 & 1) == 0)
          v53 = 0;
        v54 = DWORD2(v136) & 0xFFFFFEFF | ((unint64_t)BYTE12(v136) << 32);
        DWORD2(v136) = DWORD2(v136) & 0xFFFFFEFF | v53;
        BYTE12(v136) = BYTE4(v54);
        v55 = objc_opt_respondsToSelector(v23, "attributesToIgnoreWhenResolvingInvocation");
        v56 = 512;
        if ((v55 & 1) == 0)
          v56 = 0;
        v57 = DWORD2(v136) & 0xFFFFFDFF | ((unint64_t)BYTE12(v136) << 32) | v56;
        DWORD2(v136) = DWORD2(v136) & 0xFFFFFDFF | v56;
        if (v28)
        {
          v58 = objc_opt_respondsToSelector(v23, "preconfigureBox:context:");
          v59 = 1024;
          if ((v58 & 1) == 0)
            v59 = 0;
          v60 = DWORD2(v136) & 0xFFFFFBFF | ((unint64_t)BYTE12(v136) << 32);
          DWORD2(v136) = DWORD2(v136) & 0xFFFFFBFF | v59;
          BYTE12(v136) = BYTE4(v60);
          v61 = objc_opt_respondsToSelector(v23, "configureBox:withNode:attributes:context:");
          v62 = 0;
          v63 = 2048;
          if ((v61 & 1) == 0)
            v63 = 0;
          v64 = DWORD2(v136) & 0xFFFFF7FF | ((unint64_t)BYTE12(v136) << 32) | v63;
        }
        else
        {
          BYTE12(v136) = BYTE4(v57);
          DWORD2(v136) = v57 & 0xFFFFF3FF;
          v65 = objc_opt_respondsToSelector(v23, "configureObject:withNode:attributes:context:");
          v64 = DWORD2(v136) | ((unint64_t)BYTE12(v136) << 32);
          v62 = 4096;
          if ((v65 & 1) == 0)
            v62 = 0;
        }
        BYTE12(v136) = BYTE4(v64);
        DWORD2(v136) = v64 & 0xFFFFEFFF | v62;
        v66 = objc_opt_respondsToSelector(v23, "configureContainingBuilder:withNode:attributes:context:");
        v67 = 0x2000;
        if ((v66 & 1) == 0)
          v67 = 0;
        v68 = DWORD2(v136) & 0xFFFFDFFF | ((unint64_t)BYTE12(v136) << 32);
        DWORD2(v136) = DWORD2(v136) & 0xFFFFDFFF | v67;
        BYTE12(v136) = BYTE4(v68);
        if ((objc_opt_respondsToSelector(v23, "instantiateChildren") & 1) != 0)
        {
          v69 = -[objc_class instantiateChildren](v23, "instantiateChildren");
          v70 = DWORD2(v136) | ((unint64_t)BYTE12(v136) << 32);
          if (!v69)
          {
            v71 = 0;
            goto LABEL_101;
          }
        }
        else
        {
          v70 = DWORD2(v136) | ((unint64_t)BYTE12(v136) << 32);
        }
        v71 = 0x8000;
LABEL_101:
        BYTE12(v136) = BYTE4(v70);
        DWORD2(v136) = v70 & 0xFFFF7FFF | v71;
        v72 = objc_opt_respondsToSelector(v23, "instantiateChildrenOfNode:object:containingBuilder:context:block:");
        v73 = 0x10000;
        if ((v72 & 1) == 0)
          v73 = 0;
        v74 = DWORD2(v136) & 0xFFFEFFFF | ((unint64_t)BYTE12(v136) << 32);
        DWORD2(v136) = DWORD2(v136) & 0xFFFEFFFF | v73;
        BYTE12(v136) = BYTE4(v74);
        v75 = objc_opt_respondsToSelector(v23, "instantiateChildrenOfNode:object:builder:context:block:");
        v76 = 0x20000;
        if ((v75 & 1) == 0)
          v76 = 0;
        v77 = DWORD2(v136) & 0xFFFDFFFF | ((unint64_t)BYTE12(v136) << 32);
        DWORD2(v136) = DWORD2(v136) & 0xFFFDFFFF | v76;
        BYTE12(v136) = BYTE4(v77);
        v78 = objc_opt_respondsToSelector(v23, "instantiateNode:withObject:context:");
        v79 = 0;
        v80 = 0x40000;
        if ((v78 & 1) == 0)
          v80 = 0;
        v81 = DWORD2(v136) & 0xFFFBFFFF | ((unint64_t)BYTE12(v136) << 32) | v80;
        DWORD2(v136) = DWORD2(v136) & 0xFFFBFFFF | v80;
        if ((_QWORD)v135)
        {
          if (*((_QWORD *)&v135 + 1))
          {
            v82 = objc_opt_respondsToSelector(v23, "configureObject:withBuilder:context:");
            v81 = DWORD2(v136) | ((unint64_t)BYTE12(v136) << 32);
            v79 = 0x80000;
            if ((v82 & 1) == 0)
              v79 = 0;
          }
        }
        BYTE12(v136) = BYTE4(v81);
        DWORD2(v136) = v81 & 0xFFF7FFFF | v79;
        v83 = objc_opt_respondsToSelector(v23, "addObject:toContainingBuilder:context:");
        v84 = 0x100000;
        if ((v83 & 1) == 0)
          v84 = 0;
        v85 = DWORD2(v136) & 0xFFEFFFFF | ((unint64_t)BYTE12(v136) << 32);
        DWORD2(v136) = DWORD2(v136) & 0xFFEFFFFF | v84;
        BYTE12(v136) = BYTE4(v85);
        if ((objc_opt_respondsToSelector(v23, "supportOnlyImmediateChildrenForContainedBuilding") & 1) != 0)
        {
          v86 = -[objc_class supportOnlyImmediateChildrenForContainedBuilding](v23, "supportOnlyImmediateChildrenForContainedBuilding");
          v87 = DWORD2(v136) | ((unint64_t)BYTE12(v136) << 32);
          v88 = 0x200000;
          if (!v86)
            v88 = 0;
        }
        else
        {
          v88 = 0;
          v87 = DWORD2(v136) | ((unint64_t)BYTE12(v136) << 32);
        }
        BYTE12(v136) = BYTE4(v87);
        DWORD2(v136) = v87 & 0xFFDFFFFF | v88;
        if ((objc_opt_respondsToSelector(v23, "shouldAutoEnumerateNode") & 1) != 0)
        {
          v89 = -[objc_class shouldAutoEnumerateNode](v23, "shouldAutoEnumerateNode");
          v90 = DWORD2(v136) | ((unint64_t)BYTE12(v136) << 32);
          v91 = 0x400000;
          if (!v89)
            v91 = 0;
        }
        else
        {
          v91 = 0;
          v90 = DWORD2(v136) | ((unint64_t)BYTE12(v136) << 32);
        }
        BYTE12(v136) = BYTE4(v90);
        DWORD2(v136) = v90 & 0xFFBFFFFF | v91;
        if ((objc_opt_respondsToSelector(v23, "allowEmptyEnumerator") & 1) != 0)
        {
          v92 = -[objc_class allowEmptyEnumerator](v23, "allowEmptyEnumerator");
          v93 = DWORD2(v136) | ((unint64_t)BYTE12(v136) << 32);
          v94 = 0x800000;
          if (!v92)
            v94 = 0;
        }
        else
        {
          v94 = 0;
          v93 = DWORD2(v136) | ((unint64_t)BYTE12(v136) << 32);
        }
        BYTE12(v136) = BYTE4(v93);
        DWORD2(v136) = v93 & 0xFF7FFFFF | v94;
        if ((objc_opt_respondsToSelector(v23, "allowedAsChildInContainedBuilding") & 1) != 0)
        {
          v95 = -[objc_class allowedAsChildInContainedBuilding](v23, "allowedAsChildInContainedBuilding");
          v96 = DWORD2(v136) | ((unint64_t)BYTE12(v136) << 32);
          if (!v95)
          {
            v97 = 0;
LABEL_133:
            v98 = v96 & 0xEEFFFFFF | v97;
            v99 = v134[1] != (objc_class *)v135 || (_QWORD)v135 == 0;
            v100 = 0x10000000;
            if (v99)
              v100 = 0;
            BYTE12(v136) = BYTE4(v96);
            DWORD2(v136) = v100 | v98;
            v101 = -[objc_class definesScopes](v23, "definesScopes");
            v102 = (DWORD2(v136) | ((unint64_t)BYTE12(v136) << 32)) & 0xFFFFFFE07FFFFFFFLL | ((unint64_t)(v101 & 0x3F) << 31);
            DWORD2(v136) = DWORD2(v136) & 0x7FFFFFFF | (v101 << 31);
            BYTE12(v136) = BYTE4(v102);
            v103 = objc_opt_respondsToSelector(v23, "configureChildBox:withChildNode:attributes:builder:context:");
            v104 = 0x4000;
            if ((v103 & 1) == 0)
              v104 = 0;
            v105 = DWORD2(v136) & 0xFFFFBFFF | ((unint64_t)BYTE12(v136) << 32) | v104;
            DWORD2(v136) = DWORD2(v136) & 0xFFFFBFFF | v104;
            if (v134[1])
            {
              v106 = -[objc_class instancesRespondToSelector:](v134[1], "instancesRespondToSelector:", "configureWithChildNode:attributes:");
              v105 = DWORD2(v136) | ((unint64_t)BYTE12(v136) << 32);
              v107 = 0x2000000;
              if (!v106)
                v107 = 0;
            }
            else
            {
              v107 = 0;
            }
            BYTE12(v136) = BYTE4(v105);
            DWORD2(v136) = v105 & 0xFDFFFFFF | v107;
            v108 = objc_msgSend((id)v135, "instancesRespondToSelector:", "layoutClass");
            v109 = 0x20000000;
            if (!v108)
              v109 = 0;
            v110 = DWORD2(v136) & 0xDFFFFFFF | ((unint64_t)BYTE12(v136) << 32) | v109;
            DWORD2(v136) = DWORD2(v136) & 0xDFFFFFFF | v109;
            if (v108)
            {
              v111 = objc_msgSend((id)v135, "instancesRespondToSelector:", "allowDynamicWindowInstantiation");
              v110 = DWORD2(v136) | ((unint64_t)BYTE12(v136) << 32);
              v112 = 0x40000000;
              if (!v111)
                v112 = 0;
            }
            else
            {
              v112 = 0;
            }
            BYTE12(v136) = BYTE4(v110);
            DWORD2(v136) = v110 & 0xBFFFFFFF | v112;
            goto LABEL_154;
          }
        }
        else
        {
          v96 = DWORD2(v136) | ((unint64_t)BYTE12(v136) << 32);
        }
        v97 = 0x1000000;
        goto LABEL_133;
      }
    }
    else
    {
      if ((objc_opt_respondsToSelector(v23, "requiredBuilderProtocols") & 1) == 0)
        goto LABEL_40;
      v26 = (void *)objc_claimAutoreleasedReturnValue(-[objc_class requiredBuilderProtocols](v23, "requiredBuilderProtocols"));
      if (objc_msgSend(v26, "count"))
      {
        *(_QWORD *)&v136 = TUI::ElementInstantiating::BuilderCache::computeProtocolsFromArray((uint64_t)a4, v26);
        goto LABEL_39;
      }
    }
    DWORD2(v136) |= 1u;
    goto LABEL_39;
  }
LABEL_171:

  return this;
}

void sub_665C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,void **a43,void *a44)
{
  uint64_t v44;
  void *v45;
  void *v47;

  v47 = *a43;
  if (*a43)
  {
    *(_QWORD *)(v44 + 80) = v47;
    operator delete(v47);
  }

  _Unwind_Resume(a1);
}

uint64_t sub_6738(uint64_t a1)
{
  void *v2;

  sub_6770(a1, *(id **)(a1 + 16));
  v2 = *(void **)a1;
  *(_QWORD *)a1 = 0;
  if (v2)
    operator delete(v2);
  return a1;
}

void sub_6770(uint64_t a1, id *a2)
{
  id *v2;
  id *v3;

  if (a2)
  {
    v2 = a2;
    do
    {
      v3 = (id *)*v2;

      operator delete(v2);
      v2 = v3;
    }
    while (v3);
  }
}

_QWORD *sub_67AC(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t **a4)
{
  unint64_t v4;
  unint64_t v7;
  unint64_t v8;
  uint8x8_t v9;
  _QWORD **v10;
  _QWORD *i;
  unint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  float v15;
  float v16;
  _BOOL8 v17;
  unint64_t v18;
  unint64_t v19;
  size_t v20;
  uint64_t v21;
  _QWORD *v22;
  unint64_t v23;

  v7 = *a2;
  v8 = *(_QWORD *)(a1 + 8);
  if (v8)
  {
    v9 = (uint8x8_t)vcnt_s8((int8x8_t)v8);
    v9.i16[0] = vaddlv_u8(v9);
    if (v9.u32[0] > 1uLL)
    {
      v4 = *a2;
      if (v8 <= v7)
        v4 = v7 % v8;
    }
    else
    {
      v4 = (v8 - 1) & v7;
    }
    v10 = *(_QWORD ***)(*(_QWORD *)a1 + 8 * v4);
    if (v10)
    {
      for (i = *v10; i; i = (_QWORD *)*i)
      {
        v12 = i[1];
        if (v12 == v7)
        {
          if (i[2] == v7)
            return i;
        }
        else
        {
          if (v9.u32[0] > 1uLL)
          {
            if (v12 >= v8)
              v12 %= v8;
          }
          else
          {
            v12 &= v8 - 1;
          }
          if (v12 != v4)
            break;
        }
      }
    }
  }
  v13 = (_QWORD *)(a1 + 16);
  i = operator new(0x20uLL);
  *i = 0;
  i[1] = v7;
  v14 = **a4;
  **a4 = 0;
  i[2] = v14;
  i[3] = 0;
  v15 = (float)(unint64_t)(*(_QWORD *)(a1 + 24) + 1);
  v16 = *(float *)(a1 + 32);
  if (!v8 || (float)(v16 * (float)v8) < v15)
  {
    v17 = 1;
    if (v8 >= 3)
      v17 = (v8 & (v8 - 1)) != 0;
    v18 = v17 | (2 * v8);
    v19 = vcvtps_u32_f32(v15 / v16);
    if (v18 <= v19)
      v20 = v19;
    else
      v20 = v18;
    sub_6A20(a1, v20);
    v8 = *(_QWORD *)(a1 + 8);
    if ((v8 & (v8 - 1)) != 0)
    {
      if (v8 <= v7)
        v4 = v7 % v8;
      else
        v4 = v7;
    }
    else
    {
      v4 = (v8 - 1) & v7;
    }
  }
  v21 = *(_QWORD *)a1;
  v22 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v4);
  if (v22)
  {
    *i = *v22;
LABEL_38:
    *v22 = i;
    goto LABEL_39;
  }
  *i = *v13;
  *v13 = i;
  *(_QWORD *)(v21 + 8 * v4) = v13;
  if (*i)
  {
    v23 = *(_QWORD *)(*i + 8);
    if ((v8 & (v8 - 1)) != 0)
    {
      if (v23 >= v8)
        v23 %= v8;
    }
    else
    {
      v23 &= v8 - 1;
    }
    v22 = (_QWORD *)(*(_QWORD *)a1 + 8 * v23);
    goto LABEL_38;
  }
LABEL_39:
  ++*(_QWORD *)(a1 + 24);
  return i;
}

void sub_69DC(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  sub_6C54(v2, v1);
  _Unwind_Resume(a1);
}

void sub_69F8()
{
  std::bad_array_new_length *exception;
  std::bad_array_new_length *v1;

  exception = (std::bad_array_new_length *)__cxa_allocate_exception(8uLL);
  v1 = std::bad_array_new_length::bad_array_new_length(exception);
}

void sub_6A20(uint64_t a1, size_t __n)
{
  size_t prime;
  int8x8_t v4;
  unint64_t v5;
  uint8x8_t v6;
  uint64_t v7;

  if (__n == 1)
  {
    prime = 2;
  }
  else
  {
    prime = __n;
    if ((__n & (__n - 1)) != 0)
      prime = std::__next_prime(__n);
  }
  v4 = *(int8x8_t *)(a1 + 8);
  if (prime > *(_QWORD *)&v4)
    goto LABEL_16;
  if (prime < *(_QWORD *)&v4)
  {
    v5 = vcvtps_u32_f32((float)*(unint64_t *)(a1 + 24) / *(float *)(a1 + 32));
    if (*(_QWORD *)&v4 < 3uLL || (v6 = (uint8x8_t)vcnt_s8(v4), v6.i16[0] = vaddlv_u8(v6), v6.u32[0] > 1uLL))
    {
      v5 = std::__next_prime(v5);
    }
    else
    {
      v7 = 1 << -(char)__clz(v5 - 1);
      if (v5 >= 2)
        v5 = v7;
    }
    if (prime <= v5)
      prime = v5;
    if (prime < *(_QWORD *)&v4)
LABEL_16:
      sub_6AFC(a1, prime);
  }
}

void sub_6AFC(uint64_t a1, unint64_t a2)
{
  void *v4;
  void *v5;
  uint64_t v6;
  _QWORD *v7;
  unint64_t v8;
  uint8x8_t v9;
  void *v10;
  _QWORD *v11;
  unint64_t v12;

  if (a2)
  {
    if (a2 >> 61)
      sub_69F8();
    v4 = operator new(8 * a2);
    v5 = *(void **)a1;
    *(_QWORD *)a1 = v4;
    if (v5)
      operator delete(v5);
    v6 = 0;
    *(_QWORD *)(a1 + 8) = a2;
    do
      *(_QWORD *)(*(_QWORD *)a1 + 8 * v6++) = 0;
    while (a2 != v6);
    v7 = *(_QWORD **)(a1 + 16);
    if (v7)
    {
      v8 = v7[1];
      v9 = (uint8x8_t)vcnt_s8((int8x8_t)a2);
      v9.i16[0] = vaddlv_u8(v9);
      if (v9.u32[0] > 1uLL)
      {
        if (v8 >= a2)
          v8 %= a2;
      }
      else
      {
        v8 &= a2 - 1;
      }
      *(_QWORD *)(*(_QWORD *)a1 + 8 * v8) = a1 + 16;
      v11 = (_QWORD *)*v7;
      if (*v7)
      {
        do
        {
          v12 = v11[1];
          if (v9.u32[0] > 1uLL)
          {
            if (v12 >= a2)
              v12 %= a2;
          }
          else
          {
            v12 &= a2 - 1;
          }
          if (v12 != v8)
          {
            if (!*(_QWORD *)(*(_QWORD *)a1 + 8 * v12))
            {
              *(_QWORD *)(*(_QWORD *)a1 + 8 * v12) = v7;
              goto LABEL_24;
            }
            *v7 = *v11;
            *v11 = **(_QWORD **)(*(_QWORD *)a1 + 8 * v12);
            **(_QWORD **)(*(_QWORD *)a1 + 8 * v12) = v11;
            v11 = v7;
          }
          v12 = v8;
LABEL_24:
          v7 = v11;
          v11 = (_QWORD *)*v11;
          v8 = v12;
        }
        while (v11);
      }
    }
  }
  else
  {
    v10 = *(void **)a1;
    *(_QWORD *)a1 = 0;
    if (v10)
      operator delete(v10);
    *(_QWORD *)(a1 + 8) = 0;
  }
}

void sub_6C54(uint64_t a1, id *a2)
{
  if (*(_BYTE *)(a1 + 8))
  {

  }
  else if (!a2)
  {
    return;
  }
  operator delete(a2);
}

_QWORD *sub_6C98(_QWORD *a1, unint64_t *a2)
{
  int8x8_t v2;
  unint64_t v3;
  uint8x8_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *result;
  unint64_t v8;

  v2 = (int8x8_t)a1[1];
  if (!*(_QWORD *)&v2)
    return 0;
  v3 = *a2;
  v4 = (uint8x8_t)vcnt_s8(v2);
  v4.i16[0] = vaddlv_u8(v4);
  if (v4.u32[0] > 1uLL)
    v5 = *(_QWORD *)&v2 <= v3 ? v3 % *(_QWORD *)&v2 : *a2;
  else
    v5 = (*(_QWORD *)&v2 - 1) & v3;
  v6 = *(_QWORD **)(*a1 + 8 * v5);
  if (!v6)
    return 0;
  result = (_QWORD *)*v6;
  if (*v6)
  {
    do
    {
      v8 = result[1];
      if (v8 == v3)
      {
        if (result[2] == v3)
          return result;
      }
      else
      {
        if (v4.u32[0] > 1uLL)
        {
          if (v8 >= *(_QWORD *)&v2)
            v8 %= *(_QWORD *)&v2;
        }
        else
        {
          v8 &= *(_QWORD *)&v2 - 1;
        }
        if (v8 != v5)
          return 0;
      }
      result = (_QWORD *)*result;
    }
    while (result);
  }
  return result;
}

_QWORD *sub_6D50(uint64_t a1, unint64_t *a2, uint64_t a3, id **a4)
{
  unint64_t v4;
  unint64_t v7;
  unint64_t v8;
  uint8x8_t v9;
  _QWORD **v10;
  _QWORD *i;
  unint64_t v12;
  _QWORD *v13;
  float v14;
  float v15;
  _BOOL8 v16;
  unint64_t v17;
  unint64_t v18;
  size_t v19;
  uint64_t v20;
  _QWORD *v21;
  unint64_t v22;

  v7 = *a2;
  v8 = *(_QWORD *)(a1 + 8);
  if (v8)
  {
    v9 = (uint8x8_t)vcnt_s8((int8x8_t)v8);
    v9.i16[0] = vaddlv_u8(v9);
    if (v9.u32[0] > 1uLL)
    {
      v4 = *a2;
      if (v8 <= v7)
        v4 = v7 % v8;
    }
    else
    {
      v4 = (v8 - 1) & v7;
    }
    v10 = *(_QWORD ***)(*(_QWORD *)a1 + 8 * v4);
    if (v10)
    {
      for (i = *v10; i; i = (_QWORD *)*i)
      {
        v12 = i[1];
        if (v12 == v7)
        {
          if (i[2] == v7)
            return i;
        }
        else
        {
          if (v9.u32[0] > 1uLL)
          {
            if (v12 >= v8)
              v12 %= v8;
          }
          else
          {
            v12 &= v8 - 1;
          }
          if (v12 != v4)
            break;
        }
      }
    }
  }
  v13 = (_QWORD *)(a1 + 16);
  i = operator new(0x20uLL);
  *i = 0;
  i[1] = v7;
  i[2] = **a4;
  i[3] = 0;
  v14 = (float)(unint64_t)(*(_QWORD *)(a1 + 24) + 1);
  v15 = *(float *)(a1 + 32);
  if (!v8 || (float)(v15 * (float)v8) < v14)
  {
    v16 = 1;
    if (v8 >= 3)
      v16 = (v8 & (v8 - 1)) != 0;
    v17 = v16 | (2 * v8);
    v18 = vcvtps_u32_f32(v14 / v15);
    if (v17 <= v18)
      v19 = v18;
    else
      v19 = v17;
    sub_6A20(a1, v19);
    v8 = *(_QWORD *)(a1 + 8);
    if ((v8 & (v8 - 1)) != 0)
    {
      if (v8 <= v7)
        v4 = v7 % v8;
      else
        v4 = v7;
    }
    else
    {
      v4 = (v8 - 1) & v7;
    }
  }
  v20 = *(_QWORD *)a1;
  v21 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v4);
  if (v21)
  {
    *i = *v21;
LABEL_38:
    *v21 = i;
    goto LABEL_39;
  }
  *i = *v13;
  *v13 = i;
  *(_QWORD *)(v20 + 8 * v4) = v13;
  if (*i)
  {
    v22 = *(_QWORD *)(*i + 8);
    if ((v8 & (v8 - 1)) != 0)
    {
      if (v22 >= v8)
        v22 %= v8;
    }
    else
    {
      v22 &= v8 - 1;
    }
    v21 = (_QWORD *)(*(_QWORD *)a1 + 8 * v22);
    goto LABEL_38;
  }
LABEL_39:
  ++*(_QWORD *)(a1 + 24);
  return i;
}

void sub_6F80(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  sub_6C54(v2, v1);
  _Unwind_Resume(a1);
}

void sub_6F9C()
{
  sub_6FB0("vector");
}

void sub_6FB0(const char *a1)
{
  std::logic_error *exception;

  exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
  sub_7000(exception, a1);
}

void sub_6FEC(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

std::logic_error *sub_7000(std::logic_error *a1, const char *a2)
{
  std::logic_error *result;

  result = std::logic_error::logic_error(a1, a2);
  return result;
}

void *sub_7024(uint64_t a1, unint64_t a2)
{
  if (a2 >= 0x555555555555556)
    sub_69F8();
  return operator new(48 * a2);
}

void sub_7D8C(uint64_t a1, unsigned int a2)
{
  uint64_t v3;
  void *v4;
  unint64_t v5;
  void *v6;
  unint64_t v7;
  BOOL v8;
  TUIAdornmentModel *v9;
  void *v10;
  TUISingleContentBoxBuilder *v11;

  v3 = a2;
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "evaluateStringForAttribute:node:", 176, a2));
  v5 = +[TUIAdornmentModel adornmentRoleFromString:](TUIAdornmentModel, "adornmentRoleFromString:", v4);

  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "evaluateStringForAttribute:node:", 116, v3));
  v7 = +[TUIAdornmentModel adornmentKindFromString:](TUIAdornmentModel, "adornmentKindFromString:", v6);

  if (objc_msgSend(*(id *)(a1 + 40), "supportAdornmentWithRole:kind:", v5, v7))
    v8 = v7 == 0;
  else
    v8 = 0;
  if (v8)
  {
    v11 = objc_alloc_init(TUISingleContentBoxBuilder);
    objc_msgSend(*(id *)(a1 + 32), "instantiateNode:withBuilder:", v3, v11);
    v9 = objc_alloc_init(TUIAdornmentModel);
    -[TUIAdornmentModel setRole:](v9, "setRole:", v5);
    -[TUIBoxBuilder finalizeModelsWithParent:context:](v11, "finalizeModelsWithParent:context:", v9, *(_QWORD *)(a1 + 32));
    v10 = (void *)objc_claimAutoreleasedReturnValue(-[TUIAdornmentModel submodel](v9, "submodel"));

    if (v10)
      objc_msgSend(*(id *)(a1 + 40), "addAdornment:", v9);

  }
}

void sub_7F5C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_8154(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_8254(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_8354()
{
  operator delete();
}

void sub_88B4(_Unwind_Exception *a1, uint64_t a2, void *a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  void *v14;
  va_list va;

  va_start(va, a14);
  sub_92D4((uint64_t)va);

  _Unwind_Resume(a1);
}

void sub_8A60(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, objc_super a9)
{
  a9.super_class = (Class)TUIBinaryPackage;
  -[_Unwind_Exception dealloc](&a9, "dealloc");
  _Unwind_Resume(a1);
}

void sub_8A8C(void *a1)
{
  __cxa_begin_catch(a1);
  std::terminate();
}

void sub_8D58(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,void *__p,uint64_t a28)
{
  void *v28;

  if (__p)
    operator delete(__p);

  _Unwind_Resume(a1);
}

void sub_8EC8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  void *v15;

  if (a15 < 0)
    operator delete(__p);

  _Unwind_Resume(a1);
}

void sub_901C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_9218(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

uint64_t sub_92D4(uint64_t a1)
{
  void *v2;

  sub_930C(a1, *(_QWORD **)(a1 + 16));
  v2 = *(void **)a1;
  *(_QWORD *)a1 = 0;
  if (v2)
    operator delete(v2);
  return a1;
}

void sub_930C(int a1, _QWORD *__p)
{
  _QWORD *v2;
  _QWORD *v3;
  void *v4;

  if (__p)
  {
    v2 = __p;
    do
    {
      v3 = (_QWORD *)*v2;
      v4 = (void *)v2[3];
      if (v4)
      {
        v2[4] = v4;
        operator delete(v4);
      }
      operator delete(v2);
      v2 = v3;
    }
    while (v3);
  }
}

_QWORD *sub_9350(_QWORD *a1, char *__s)
{
  size_t v4;
  size_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;

  v4 = strlen(__s);
  if (v4 >= 0x7FFFFFFFFFFFFFF8)
    sub_9400();
  v5 = v4;
  if (v4 >= 0x17)
  {
    v7 = (v4 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v4 | 7) != 0x17)
      v7 = v4 | 7;
    v8 = v7 + 1;
    v6 = operator new(v7 + 1);
    a1[1] = v5;
    a1[2] = v8 | 0x8000000000000000;
    *a1 = v6;
  }
  else
  {
    *((_BYTE *)a1 + 23) = v4;
    v6 = a1;
    if (!v4)
      goto LABEL_9;
  }
  memmove(v6, __s, v5);
LABEL_9:
  *((_BYTE *)v6 + v5) = 0;
  return a1;
}

void sub_9400()
{
  sub_6FB0("basic_string");
}

void *sub_9414(uint64_t a1, uint64_t a2)
{
  if (a2 < 0)
    sub_69F8();
  return operator new(2 * a2);
}

void sub_9744(uint64_t a1)
{
  void *v2;
  void *v3;
  id *v4;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  double v10;
  double v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  NSMutableSet *v20;
  double v21;
  int v22;
  int v23;
  double v24;
  int v25;
  int v26;
  double v27;
  int v28;
  int v29;
  id v30;
  id v31;
  id v32;
  uint64_t v33;
  void *i;
  uint64_t v35;
  TUIPrioritizedResource *v36;
  double v37;
  TUIPrioritizedResource *v38;
  id v39;
  id v40;
  id v41;
  uint64_t v42;
  void *j;
  uint64_t v44;
  TUIPrioritizedResource *v45;
  double v46;
  TUIPrioritizedResource *v47;
  id v48;
  id v49;
  id v50;
  uint64_t v51;
  void *k;
  uint64_t v53;
  TUIPrioritizedResource *v54;
  double v55;
  TUIPrioritizedResource *v56;
  uint64_t v57;
  NSObject *v58;
  __int128 v59;
  id v60;
  NSMutableSet *v61;
  uint64_t v62;
  id WeakRetained;
  char v64;
  id v65;
  void *v66;
  uint64_t v67;
  __int128 v68;
  void *v69;
  __int128 v70;
  void *v71;
  __int128 v72;
  void *v73;
  _QWORD block[5];
  id v75;
  id v76;
  NSMutableSet *v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  _BYTE v95[128];
  _BYTE v96[128];
  _BYTE v97[128];
  CGRect v98;

  v2 = (void *)objc_claimAutoreleasedReturnValue(+[TUIResourceCollector createResourceCollectorForEverything](TUIResourceCollector, "createResourceCollectorForEverything"));
  v3 = *(void **)(a1 + 32);
  v72 = *(_OWORD *)&CGAffineTransformIdentity.c;
  v92 = *(_OWORD *)&CGAffineTransformIdentity.a;
  v70 = v92;
  v93 = v72;
  v94 = *(_OWORD *)&CGAffineTransformIdentity.tx;
  v68 = v94;
  objc_msgSend(v3, "appendResourcesToCollector:transform:", v2, &v92);
  v4 = (id *)(a1 + 56);
  v5 = (void *)objc_claimAutoreleasedReturnValue(+[TUIResourceCollector createResourceCollectorForVisibleBounds:viewState:](TUIResourceCollector, "createResourceCollectorForVisibleBounds:viewState:", *(_QWORD *)(a1 + 40), *(double *)(a1 + 56), *(double *)(a1 + 64), *(double *)(a1 + 72), *(double *)(a1 + 80)));
  v6 = *(void **)(a1 + 32);
  v92 = v70;
  v93 = v72;
  v94 = v68;
  objc_msgSend(v6, "appendResourcesToCollector:transform:", v5, &v92);
  v9 = *(double *)(a1 + 72);
  v10 = *(double *)(a1 + 80);
  if (v10 >= v9)
    v11 = *(double *)(a1 + 80);
  else
    v11 = *(double *)(a1 + 72);
  v7 = *(_QWORD *)(a1 + 56);
  v8 = *(_QWORD *)(a1 + 64);
  v98 = CGRectInset(*(CGRect *)(&v9 - 2), -v11, -v11);
  v12 = (void *)objc_claimAutoreleasedReturnValue(+[TUIResourceCollector createResourceCollectorForVisibleBounds:viewState:](TUIResourceCollector, "createResourceCollectorForVisibleBounds:viewState:", *(_QWORD *)(a1 + 40), v98.origin.x, v98.origin.y, v98.size.width, v98.size.height));
  v67 = a1;
  v13 = *(void **)(a1 + 32);
  v92 = v70;
  v93 = v72;
  v94 = v68;
  objc_msgSend(v13, "appendResourcesToCollector:transform:", v12, &v92);
  v71 = v5;
  v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "resources"));
  v15 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableSet setWithSet:](NSMutableSet, "setWithSet:", v14));

  v69 = v12;
  v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "resources"));
  v17 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableSet setWithSet:](NSMutableSet, "setWithSet:", v16));

  v73 = v2;
  v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "resources"));
  v19 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableSet setWithSet:](NSMutableSet, "setWithSet:", v18));

  objc_msgSend(v19, "minusSet:", v17);
  objc_msgSend(v17, "minusSet:", v15);
  v20 = objc_opt_new(NSMutableSet);
  HIDWORD(v21) = 1072168960;
  *(float *)&v21 = 0.75;
  objc_msgSend(*(v4 - 1), "_adjustedPriority:", v21);
  v23 = v22;
  HIDWORD(v24) = 1071644672;
  *(float *)&v24 = 0.5;
  objc_msgSend(*(v4 - 1), "_adjustedPriority:", v24);
  v26 = v25;
  HIDWORD(v27) = 1070596096;
  *(float *)&v27 = 0.25;
  objc_msgSend(*(v4 - 1), "_adjustedPriority:", v27);
  v29 = v28;
  v88 = 0u;
  v89 = 0u;
  v90 = 0u;
  v91 = 0u;
  v30 = v15;
  v31 = objc_msgSend(v30, "countByEnumeratingWithState:objects:count:", &v88, v97, 16);
  if (v31)
  {
    v32 = v31;
    v33 = *(_QWORD *)v89;
    do
    {
      for (i = 0; i != v32; i = (char *)i + 1)
      {
        if (*(_QWORD *)v89 != v33)
          objc_enumerationMutation(v30);
        v35 = *(_QWORD *)(*((_QWORD *)&v88 + 1) + 8 * (_QWORD)i);
        v36 = [TUIPrioritizedResource alloc];
        LODWORD(v37) = v23;
        v38 = -[TUIPrioritizedResource initWithResource:priority:](v36, "initWithResource:priority:", v35, v37);
        -[NSMutableSet addObject:](v20, "addObject:", v38);

      }
      v32 = objc_msgSend(v30, "countByEnumeratingWithState:objects:count:", &v88, v97, 16);
    }
    while (v32);
  }

  v86 = 0u;
  v87 = 0u;
  v84 = 0u;
  v85 = 0u;
  v39 = v17;
  v40 = objc_msgSend(v39, "countByEnumeratingWithState:objects:count:", &v84, v96, 16);
  if (v40)
  {
    v41 = v40;
    v42 = *(_QWORD *)v85;
    do
    {
      for (j = 0; j != v41; j = (char *)j + 1)
      {
        if (*(_QWORD *)v85 != v42)
          objc_enumerationMutation(v39);
        v44 = *(_QWORD *)(*((_QWORD *)&v84 + 1) + 8 * (_QWORD)j);
        v45 = [TUIPrioritizedResource alloc];
        LODWORD(v46) = v26;
        v47 = -[TUIPrioritizedResource initWithResource:priority:](v45, "initWithResource:priority:", v44, v46);
        -[NSMutableSet addObject:](v20, "addObject:", v47);

      }
      v41 = objc_msgSend(v39, "countByEnumeratingWithState:objects:count:", &v84, v96, 16);
    }
    while (v41);
  }

  v82 = 0u;
  v83 = 0u;
  v80 = 0u;
  v81 = 0u;
  v48 = v19;
  v49 = objc_msgSend(v48, "countByEnumeratingWithState:objects:count:", &v80, v95, 16);
  if (v49)
  {
    v50 = v49;
    v51 = *(_QWORD *)v81;
    do
    {
      for (k = 0; k != v50; k = (char *)k + 1)
      {
        if (*(_QWORD *)v81 != v51)
          objc_enumerationMutation(v48);
        v53 = *(_QWORD *)(*((_QWORD *)&v80 + 1) + 8 * (_QWORD)k);
        v54 = [TUIPrioritizedResource alloc];
        LODWORD(v55) = v29;
        v56 = -[TUIPrioritizedResource initWithResource:priority:](v54, "initWithResource:priority:", v53, v55);
        -[NSMutableSet addObject:](v20, "addObject:", v56);

      }
      v50 = objc_msgSend(v48, "countByEnumeratingWithState:objects:count:", &v80, v95, 16);
    }
    while (v50);
  }

  v57 = *(_QWORD *)(v67 + 48);
  v58 = *(NSObject **)(v57 + 16);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_9CF4;
  block[3] = &unk_23D758;
  block[4] = v57;
  v75 = *(id *)(v67 + 32);
  v59 = *((_OWORD *)v4 + 1);
  v78 = *(_OWORD *)v4;
  v79 = v59;
  v60 = v30;
  v76 = v60;
  v61 = v20;
  v77 = v61;
  dispatch_sync(v58, block);
  v62 = *(_QWORD *)(v67 + 48);
  if (!*(_BYTE *)(v62 + 72))
  {
    WeakRetained = objc_loadWeakRetained((id *)(v62 + 80));
    v64 = objc_opt_respondsToSelector(WeakRetained, "imagePrefetchControllerDidStartLoadingInitialResources:");

    if ((v64 & 1) != 0)
    {
      v65 = objc_loadWeakRetained((id *)(*(_QWORD *)(v67 + 48) + 80));
      objc_msgSend(v65, "imagePrefetchControllerDidStartLoadingInitialResources:", *(_QWORD *)(v67 + 48));

    }
    *(_BYTE *)(*(_QWORD *)(v67 + 48) + 72) = 1;
  }
  v66 = (void *)objc_claimAutoreleasedReturnValue(+[TUIImagePrefetchControllerManager sharedManager](TUIImagePrefetchControllerManager, "sharedManager"));
  objc_msgSend(v66, "prefetchResources:controllerID:loader:", v61, *(_QWORD *)(*(_QWORD *)(v67 + 48) + 88), *(_QWORD *)(*(_QWORD *)(v67 + 48) + 64));

}

void sub_9CF4(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  uint64_t v5;
  id v6;
  void *v7;
  double v8;
  double v9;
  double v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  uint64_t v17;
  void *v18;
  id v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  void *v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;

  if (!*(_BYTE *)(*(_QWORD *)(a1 + 32) + 73))
  {
    v5 = objc_opt_class(2859008, a2);
    v6 = TUIDynamicCast(v5, *(void **)(a1 + 40));
    v7 = (void *)objc_claimAutoreleasedReturnValue(v6);
    objc_msgSend(v7, "size");
    v9 = v8;
    v10 = *(double *)(a1 + 88);
    if (v8 >= v10
      || (v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "info")),
          v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "objectForKeyedSubscript:", CFSTR("TUIRenderInfoKeyIsFinal"))),
          (objc_msgSend(v3, "BOOLValue") & 1) != 0))
    {
      v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "sections"));
      v12 = objc_msgSend(v11, "count");

      if (v9 < v10)
      {

      }
      if (v12)
      {
        if (!*(_QWORD *)(*(_QWORD *)(a1 + 32) + 40))
        {
          v13 = objc_claimAutoreleasedReturnValue(+[NSMutableSet set](NSMutableSet, "set"));
          v14 = *(_QWORD *)(a1 + 32);
          v15 = *(void **)(v14 + 40);
          *(_QWORD *)(v14 + 40) = v13;

        }
        v16 = objc_msgSend(*(id *)(a1 + 48), "mutableCopy");
        v17 = *(_QWORD *)(a1 + 32);
        v18 = *(void **)(v17 + 24);
        *(_QWORD *)(v17 + 24) = v16;

        v19 = objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 24), "mutableCopy");
        v20 = *(_QWORD *)(a1 + 32);
        v21 = *(void **)(v20 + 32);
        *(_QWORD *)(v20 + 32) = v19;

        v22 = *(_QWORD *)(a1 + 32);
        v23 = *(void **)(v22 + 32);
        v24 = objc_msgSend(*(id *)(v22 + 40), "copy");
        objc_msgSend(v23, "minusSet:", v24);

        objc_msgSend(*(id *)(a1 + 32), "_checkInitialResourcesAndInvokeDelegateIfNeeded");
      }
    }
    else
    {

    }
  }
  v25 = objc_claimAutoreleasedReturnValue(+[NSMutableSet setWithSet:](NSMutableSet, "setWithSet:", *(_QWORD *)(a1 + 56)));
  v26 = *(_QWORD *)(a1 + 32);
  v27 = *(void **)(v26 + 48);
  *(_QWORD *)(v26 + 48) = v25;

}

void sub_9EFC(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  NSObject *v4;
  id WeakRetained;
  char v6;
  id v7;
  _QWORD block[5];
  id v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  char v14;

  v11 = 0;
  v12 = &v11;
  v13 = 0x2020000000;
  v14 = 0;
  block[0] = _NSConcreteStackBlock;
  block[2] = sub_A008;
  block[3] = &unk_23D7A8;
  v2 = *(_QWORD *)(a1 + 32);
  v3 = *(void **)(a1 + 40);
  v4 = *(NSObject **)(v2 + 16);
  block[1] = 3221225472;
  block[4] = v2;
  v9 = v3;
  v10 = &v11;
  dispatch_sync(v4, block);
  if (*((_BYTE *)v12 + 24))
  {
    WeakRetained = objc_loadWeakRetained((id *)(*(_QWORD *)(a1 + 32) + 80));
    v6 = objc_opt_respondsToSelector(WeakRetained, "imagePrefetchControllerDidLoadAllResources:");

    if ((v6 & 1) != 0)
    {
      v7 = objc_loadWeakRetained((id *)(*(_QWORD *)(a1 + 32) + 80));
      objc_msgSend(v7, "imagePrefetchControllerDidLoadAllResources:", *(_QWORD *)(a1 + 32));

    }
  }

  _Block_object_dispose(&v11, 8);
}

void sub_9FF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_A008(uint64_t a1)
{
  id v2;
  id v3;
  id v4;
  uint64_t v5;
  void *i;
  void *v7;
  void *v8;
  unsigned __int8 v9;
  id v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  _BYTE v16[128];

  v12 = 0u;
  v13 = 0u;
  v14 = 0u;
  v15 = 0u;
  v2 = *(id *)(*(_QWORD *)(a1 + 32) + 48);
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v12, v16, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v13;
    while (2)
    {
      for (i = 0; i != v4; i = (char *)i + 1)
      {
        if (*(_QWORD *)v13 != v5)
          objc_enumerationMutation(v2);
        v7 = *(void **)(*((_QWORD *)&v12 + 1) + 8 * (_QWORD)i);
        v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "resource", (_QWORD)v12));
        v9 = objc_msgSend(v8, "isEqual:", *(_QWORD *)(a1 + 40));

        if ((v9 & 1) != 0)
        {
          v10 = v7;

          if (v10)
          {
            v11 = *(_QWORD *)(a1 + 32);
            if (!*(_BYTE *)(v11 + 73))
            {
              objc_msgSend(*(id *)(v11 + 40), "addObject:", v10);
              objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 32), "removeObject:", v10);
              objc_msgSend(*(id *)(a1 + 32), "_checkInitialResourcesAndInvokeDelegateIfNeeded");
              v11 = *(_QWORD *)(a1 + 32);
            }
            objc_msgSend(*(id *)(v11 + 48), "removeObject:", v10);
          }
          goto LABEL_14;
        }
      }
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v12, v16, 16);
      if (v4)
        continue;
      break;
    }
  }

  v10 = 0;
LABEL_14:
  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24) = objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 48), "count", (_QWORD)v12) == 0;

}

void sub_A348(id a1)
{
  void *v1;
  id v2;
  void *v3;
  id v4;
  void *v5;
  _QWORD v6[9];

  v1 = (void *)objc_claimAutoreleasedReturnValue(+[TUIAttributeSet supportedAttributesSize](TUIAttributeSet, "supportedAttributesSize"));
  v2 = objc_msgSend(v1, "mutableCopy");

  v6[0] = CFSTR("start-color");
  v6[1] = CFSTR("end-color");
  v6[2] = CFSTR("start-position");
  v6[3] = CFSTR("end-position");
  v6[4] = CFSTR("direction");
  v6[5] = CFSTR("role");
  v6[6] = CFSTR("blend-mode");
  v6[7] = CFSTR("continuous-corners");
  v6[8] = CFSTR("opacity");
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", v6, 9));
  objc_msgSend(v2, "addAttributesFromArray:", v3);

  v4 = objc_msgSend(v2, "copy");
  v5 = (void *)qword_2CB190;
  qword_2CB190 = (uint64_t)v4;

}

TUI::Instruction::Evaluation *TUI::Instruction::Evaluation::Evaluation(TUI::Instruction::Evaluation *this, const TUI::Package::Buffer *a2, TUI::Evaluation::Context *a3)
{
  *(_QWORD *)this = a2;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = a3;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *((_QWORD *)this + 9) = 0;
  *((_DWORD *)this + 20) = 1065353216;
  *(_OWORD *)((char *)this + 88) = 0u;
  *(_OWORD *)((char *)this + 104) = 0u;
  *((_DWORD *)this + 30) = 1065353216;
  *((_OWORD *)this + 8) = 0u;
  *((_OWORD *)this + 9) = 0u;
  *((_DWORD *)this + 40) = 1065353216;
  *(_OWORD *)((char *)this + 168) = 0u;
  *(_OWORD *)((char *)this + 184) = 0u;
  *((_DWORD *)this + 50) = 1065353216;
  *((_OWORD *)this + 13) = 0u;
  *((_OWORD *)this + 14) = 0u;
  *(_OWORD *)((char *)this + 248) = 0u;
  *((_DWORD *)this + 60) = 1065353216;
  *(_OWORD *)((char *)this + 264) = 0u;
  *((_DWORD *)this + 70) = 1065353216;
  *((_OWORD *)this + 18) = 0u;
  *((_OWORD *)this + 19) = 0u;
  *((_DWORD *)this + 80) = 1065353216;
  *(_OWORD *)((char *)this + 328) = 0u;
  *(_OWORD *)((char *)this + 344) = 0u;
  *((_DWORD *)this + 90) = 1065353216;
  *((_OWORD *)this + 23) = 0u;
  *((_OWORD *)this + 24) = 0u;
  *((_DWORD *)this + 100) = 1065353216;
  sub_A854((uint64_t *)this + 3, 0x20uLL);
  return this;
}

void sub_A7F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, _Unwind_Exception *exception_object, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  sub_14B0C(v18);
  sub_14B0C(v17);
  sub_14B0C(v16);
  sub_14B0C(v15);
  sub_14B0C(v14);
  sub_14B0C(v13);
  sub_14A98(v11);
  sub_14A98(v10);
  sub_14A98(v12 + 48);
  sub_14A24((void ***)&a10);
  _Unwind_Resume(a1);
}

uint64_t sub_A854(uint64_t *a1, unint64_t a2)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD v7[5];

  v4 = a1[2];
  result = (uint64_t)(a1 + 2);
  if (0xAAAAAAAAAAAAAAABLL * ((v4 - *a1) >> 3) < a2)
  {
    if (a2 >= 0xAAAAAAAAAAAAAABLL)
      sub_6F9C();
    v5 = a1[1] - *a1;
    v7[4] = result;
    v7[0] = sub_14C10(result, a2);
    v7[1] = v7[0] + v5;
    v7[2] = v7[0] + v5;
    v7[3] = v7[0] + 24 * v6;
    sub_14B54(a1, v7);
    return sub_14C54((uint64_t)v7);
  }
  return result;
}

void sub_A8F0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_14C54((uint64_t)va);
  _Unwind_Resume(a1);
}

void TUI::Instruction::Evaluation::~Evaluation(TUI::Instruction::Evaluation *this)
{
  void **v2;

  sub_14B0C((uint64_t)this + 368);
  sub_14B0C((uint64_t)this + 328);
  sub_14B0C((uint64_t)this + 288);
  sub_14B0C((uint64_t)this + 248);
  sub_14B0C((uint64_t)this + 208);
  sub_14B0C((uint64_t)this + 168);
  sub_14A98((uint64_t)this + 128);
  sub_14A98((uint64_t)this + 88);
  sub_14A98((uint64_t)this + 48);
  v2 = (void **)((char *)this + 24);
  sub_14A24(&v2);
}

void TUI::Instruction::Evaluation::evaluate(double *__return_ptr a1@<X8>, TUI::Instruction::Evaluation *this@<X0>, TUI::Instruction::Decoder *a3@<X1>)
{
  TUI::Instruction::Decoder *v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  unint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  int v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  TUI::Evaluation::Context *v27;
  unsigned int v28;
  id v29;
  uint64_t v30;
  id v31;
  id *v32;
  unsigned int v33;
  id v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  int v42;
  id v43;
  uint64_t v44;

  *(_DWORD *)a1 = 0;
  a1[1] = 0.0;
  *((_DWORD *)this + 2) = TUI::Instruction::Decoder::offsetKind((uint64_t)a3);
  v6 = (TUI::Instruction::Decoder *)TUI::Instruction::Decoder::offsetIndex(a3);
  *((_DWORD *)this + 3) = (_DWORD)v6;
  v7 = 1029;
  switch(*((_DWORD *)this + 2))
  {
    case 0:
    case 0x15:
      goto LABEL_3;
    case 1:
      v15 = *((_QWORD *)this + 3);
      v16 = *((_QWORD *)this + 4);
      TUI::Instruction::Evaluation::run(this);
      v17 = 0xAAAAAAAAAAAAAAABLL * ((v16 - v15) >> 3);
      v18 = *((_QWORD *)this + 4);
      if (v18 == *((_QWORD *)this + 3))
      {
        v19 = 0;
        v20 = 0;
      }
      else
      {
        v19 = *(_DWORD *)(v18 - 24);
        v20 = *(id *)(v18 - 16);
        v18 = *(_QWORD *)(v18 - 8);
        v21 = *((_QWORD *)this + 4);
        v22 = v21 - 24;

        *((_QWORD *)this + 4) = v22;
      }
      *(_DWORD *)a1 = v19;
      *((_QWORD *)a1 + 1) = v20;
      *((_QWORD *)a1 + 2) = v18;
      v40 = *((_QWORD *)this + 3);
      v39 = *((_QWORD *)this + 4);
      v41 = 0xAAAAAAAAAAAAAAABLL * ((v39 - v40) >> 3);
      if (v41 <= v17)
      {
        if (v41 < v17)
          TUI::Evaluation::Context::reportError(*((_QWORD *)this + 2), 1024, 0);
      }
      else
      {
        sub_11C78((uint64_t)this + 24, v40 + 24 * v17, v39);
      }
      return;
    case 2:
      v23 = *(_QWORD *)this;
      if (*(_QWORD *)(*(_QWORD *)this + 64) <= (unint64_t)v6)
        goto LABEL_22;
      v24 = *(_QWORD *)(v23 + 56);
      if (!v24)
        goto LABEL_22;
      v25 = objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", v24 + *(unsigned int *)(*(_QWORD *)(v23 + 72) + 4 * v6)));
      goto LABEL_23;
    case 3:
      v8 = 0.0;
      if (*(_QWORD *)(*(_QWORD *)this + 32) > (unint64_t)v6)
        v8 = *(float *)(*(_QWORD *)(*(_QWORD *)this + 24) + 4 * v6);
      *(_DWORD *)a1 = 1;
      a1[1] = 0.0;
      a1[2] = v8;
      return;
    case 4:
      if (*(_QWORD *)(*(_QWORD *)this + 48) <= (unint64_t)v6)
        v26 = 0;
      else
        v26 = *(int *)(*(_QWORD *)(*(_QWORD *)this + 40) + 4 * v6);
      v38 = 2;
      goto LABEL_29;
    case 5:
      v27 = (TUI::Evaluation::Context *)*((_QWORD *)this + 2);
      v28 = TUI::Instruction::Decoder::symbolNameFromU24(v6);
      TUI::Evaluation::Context::lookupConstant(v27, v28, (uint64_t)&v42);
      *(_DWORD *)a1 = v42;
      v29 = v43;
      v31 = v43;
      v30 = v44;
      *((_QWORD *)a1 + 1) = v29;
      *((_QWORD *)a1 + 2) = v30;

      return;
    case 6:
      v32 = (id *)*((_QWORD *)this + 2);
      v33 = TUI::Instruction::Decoder::symbolNameFromU24(v6);
      v34 = TUI::Evaluation::Context::objectForBinding(v32, v33);
      v25 = objc_claimAutoreleasedReturnValue(v34);
      v35 = 16;
      goto LABEL_24;
    case 7:
      v36 = *(_QWORD *)this;
      if (*(_QWORD *)(*(_QWORD *)this + 88) > (unint64_t)v6
        && (v37 = *(_QWORD *)(v36 + 80)) != 0)
      {
        v25 = objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", v37 + *(unsigned int *)(*(_QWORD *)(v36 + 96) + 4 * v6)));
      }
      else
      {
LABEL_22:
        v25 = 0;
      }
LABEL_23:
      v35 = 9;
LABEL_24:
      *(_DWORD *)a1 = v35;
      *((_QWORD *)a1 + 1) = v25;
      break;
    case 8:
      v9 = *((_QWORD *)this + 2);
      v10 = *(_QWORD *)(v9 + 560);
      v11 = *(id *)(v9 + 584);
      v12 = (unint64_t)objc_msgSend(v11, "contentSizeCategorySymbol");
      v13 = *(_QWORD *)(v10 + 40);
      if (v12 >= (*(_QWORD *)(v10 + 48) - v13) >> 1)
        v14 = 0xFFFF;
      else
        v14 = *(unsigned __int16 *)(v13 + 2 * v12);

      v26 = v14 == *((unsigned __int16 *)this + 6);
      v38 = 12;
LABEL_29:
      *(_DWORD *)a1 = v38;
      a1[1] = 0.0;
      *((_QWORD *)a1 + 2) = v26;
      break;
    case 9:
    case 0xA:
    case 0xB:
    case 0xC:
    case 0xD:
    case 0xE:
    case 0xF:
    case 0x10:
    case 0x11:
    case 0x12:
    case 0x13:
    case 0x14:
      v7 = 1005;
LABEL_3:
      TUI::Evaluation::Context::reportError(*((_QWORD *)this + 2), v7, 0);
      break;
    default:
      return;
  }
}

void sub_AC80(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void TUI::Instruction::Evaluation::run(TUI::Instruction::Evaluation *this)
{
  uint64_t *v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t *v5;
  __int16 v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  double v13;
  double v14;
  char v15;
  unsigned __int8 v16;
  unsigned __int8 v17;
  int v18;
  int v19;
  BOOL v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unsigned __int16 v28;
  double v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  void *v33;
  void *v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  _value *v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  _value *v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  id v51;
  _value *v52;
  int v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unsigned __int16 v59;
  uint64_t *v60;
  uint64_t v61;
  uint64_t v62;
  id v63;
  void *v64;
  void *v65;
  id v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  id v71;
  uint64_t v72;
  uint64_t v73;
  id v74;
  void *v75;
  void *v76;
  id v77;
  uint64_t v78;
  int v79;
  _value *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  unsigned __int16 v95;
  NSString *v96;
  uint64_t v97;
  uint64_t v98;
  id v99;
  void *v100;
  void *v101;
  id v102;
  int v103;
  unint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  int v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  int v133;
  unint64_t v134;
  uint64_t v135;
  uint64_t v136;
  unsigned int v137;
  uint64_t v138;
  int v139;
  _value *v140;
  int v141;
  unint64_t v142;
  unsigned __int16 v143;
  uint64_t v144;
  uint64_t v145;
  unsigned __int8 v146;
  int v147;
  unint64_t v148;
  uint64_t v149;
  unint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  double v154;
  uint64_t v155;
  uint64_t v156;
  double v157;
  uint64_t v158;
  uint64_t v159;
  id v160;
  uint64_t v161;
  uint64_t v162;
  id v163;
  void *v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  id v168;
  unint64_t v169;
  uint64_t v170;
  uint64_t v171;
  id v172;
  _value *v173;
  _value *v174;
  _value *v175;
  int v176;
  uint64_t v177;
  uint64_t v178;
  double v179;
  void *v180;
  unint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  double v185;
  uint64_t v186;
  uint64_t v187;
  id v188;
  void *v189;
  void *v190;
  id v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  unint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  unsigned __int16 v220;
  NSString *v221;
  uint64_t v222;
  uint64_t v223;
  id v224;
  void *v225;
  void *v226;
  id v227;
  uint64_t v228;
  uint64_t v229;
  const TUI::Evaluation::Context *v230;
  int v231;
  uint64_t v232;
  int v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  double v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  id v252;
  uint64_t v253;
  id v254;
  __int128 v255;
  _value *v256;
  unint64_t v257;
  uint64_t v258;
  uint64_t v259;
  id v260;
  _value *v261;
  _value *v262;
  unint64_t v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  double v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  int v287;
  unsigned int v288;
  unsigned __int16 *v289;
  unint64_t v290;
  int v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  uint64_t v308;
  uint64_t v309;
  uint64_t v310;
  uint64_t v311;
  unsigned int v312;
  uint64_t v313;
  uint64_t v314;
  uint64_t v315;
  uint64_t v316;
  uint64_t v317;
  uint64_t v318;
  uint64_t v319;
  uint64_t v320;
  uint64_t v321;
  uint64_t v322;
  uint64_t v323;
  uint64_t v324;
  uint64_t v325;
  uint64_t v326;
  uint64_t v327;
  uint64_t v328;
  uint64_t v329;
  uint64_t v330;
  uint64_t v331;
  int v332;
  unsigned int v333;
  unsigned __int16 *v334;
  unint64_t v335;
  int v336;
  uint64_t v337;
  uint64_t v338;
  uint64_t v339;
  uint64_t v340;
  uint64_t v341;
  uint64_t v342;
  uint64_t v343;
  uint64_t v344;
  uint64_t v345;
  uint64_t v346;
  NSMutableDictionary *v347;
  uint64_t v348;
  void *v349;
  uint64_t v350;
  uint64_t v351;
  unsigned __int16 v352;
  NSString *v353;
  uint64_t v354;
  uint64_t v355;
  id v356;
  void *v357;
  void *v358;
  id v359;
  uint64_t v360;
  uint64_t v361;
  id v362;
  int v363;
  unint64_t v364;
  uint64_t v365;
  uint64_t v366;
  uint64_t v367;
  double v368;
  uint64_t v369;
  uint64_t v370;
  id v371;
  void *v372;
  void *v373;
  id v374;
  uint64_t v375;
  uint64_t v376;
  uint64_t v377;
  uint64_t v378;
  uint64_t v379;
  __int128 v380;
  uint64_t v381;
  uint64_t v382;
  uint64_t v383;
  objc_class *v384;
  NSString *v385;
  uint64_t v386;
  objc_class *v387;
  NSString *v388;
  void *v389;
  _value *v390;
  _value *v391;
  unint64_t v392;
  uint64_t v393;
  int v394;
  uint64_t v395;
  uint64_t v396;
  id v397;
  void *v398;
  uint64_t v399;
  _QWORD *v400;
  unsigned int v401;
  id v402;
  int v403;
  unint64_t v404;
  uint64_t v405;
  uint64_t v406;
  id v407;
  void *v408;
  int v409;
  int v410;
  id v411;
  unint64_t v412;
  uint64_t v413;
  uint64_t v414;
  int v415;
  int v416;
  uint64_t v417;
  uint64_t v418;
  TUI::Evaluation::Context *v419;
  id v420;
  objc_object *v421;
  Entry v422;
  unint64_t v423;
  uint64_t v424;
  void *v425;
  id v426;
  int v427;
  uint64_t v428;
  uint64_t v429;
  uint64_t v430;
  _TUIElementWithClosure *v431;
  int v432;
  uint64_t v433;
  int v434;
  int v435;
  BOOL isDefined;
  uint64_t v437;
  uint64_t v438;
  int v439;
  int v440;
  uint64_t v441;
  unsigned int v442;
  _TUIElementWithClosure *v443;
  unint64_t *v444;
  unint64_t v445;
  _TUIElementWithClosure *v446;
  _TUIElementWithClosure *v447;
  unint64_t v448;
  uint64_t v449;
  unint64_t v450;
  double v451;
  int64_t v452;
  int v453;
  uint64_t v454;
  uint64_t v455;
  void *v456;
  int v457;
  unint64_t v458;
  uint64_t v459;
  int64_t v460;
  uint64_t v461;
  id v462;
  void *v463;
  unsigned int v464;
  unint64_t v465;
  int v466;
  unint64_t v467;
  uint64_t v468;
  uint64_t v469;
  id v470;
  void *v471;
  _value *v472;
  id v473;
  unint64_t v474;
  int v475;
  unsigned int v476;
  id v477;
  unint64_t v478;
  uint64_t v479;
  int v480;
  uint64_t v481;
  uint64_t v482;
  unint64_t v483;
  uint64_t v484;
  unint64_t v485;
  uint64_t v486;
  void *v487;
  unsigned int v488;
  uint64_t v489;
  uint64_t v490;
  id v491;
  NSMutableArray *v492;
  uint64_t v493;
  void *v494;
  uint64_t v495;
  void *v496;
  uint64_t v497;
  void *v498;
  int v499;
  uint64_t v500;
  void *v501;
  NSMutableArray *v502;
  void *v503;
  void *v504;
  void *v505;
  void *v506;
  _value *v507;
  _value *v508;
  _value *v509;
  int v510;
  _value *v511;
  uint64_t v512;
  objc_class *v513;
  NSString *v514;
  void *v515;
  _value *v516;
  _value *v517;
  unint64_t v518;
  uint64_t v519;
  std::__shared_weak_count *v520;
  unint64_t *v521;
  unint64_t v522;
  std::__shared_weak_count *v523;
  unint64_t *v524;
  unint64_t v525;
  id v526;
  void *v527;
  void *v528;
  id v529;
  double v530;
  double v531;
  int64_t v532;
  double v533;
  id v534;
  unint64_t v535;
  uint64_t v536;
  unsigned int v537;
  int v538;
  unint64_t v539;
  double v540;
  double v541;
  unint64_t v542;
  uint64_t v543;
  double v544;
  double v545;
  unint64_t v546;
  double v547;
  double v548;
  unint64_t v549;
  id v550;
  void *v551;
  double v552;
  id v553;
  void *v554;
  id v555;
  void *v556;
  unint64_t v557;
  uint64_t v558;
  double v559;
  double v560;
  unint64_t v561;
  uint64_t v562;
  double v563;
  _value *v564;
  unint64_t v565;
  double v566;
  uint64_t v567;
  double v568;
  double v569;
  unint64_t v570;
  uint64_t v571;
  double v572;
  double v573;
  unint64_t v574;
  double v575;
  uint64_t v576;
  uint64_t v577;
  id v578;
  void *v579;
  void *v580;
  id v581;
  id v582;
  void *v583;
  void *v584;
  int v585;
  id v586;
  void *v587;
  unsigned __int16 v588;
  id v589;
  void *v590;
  id v591;
  id v592;
  double v593;
  double v594;
  double v595;
  _value *v596;
  unint64_t v597;
  uint64_t v598;
  id v599;
  __CFString *v600;
  id v601;
  void *v602;
  const TUI::Evaluation::Context *v603;
  NSNumber *v604;
  unsigned __int8 v605;
  double v606;
  uint64_t v607;
  double v608;
  int v609;
  double v610;
  double v611;
  void *v612;
  unint64_t v613;
  uint64_t v614;
  double v615;
  double v616;
  double v617;
  UIColor *v618;
  id v619;
  void *v620;
  unint64_t v621;
  uint64_t v622;
  id v623;
  uint64_t v624;
  void *v625;
  __CFString *v626;
  id v627;
  uint64_t v628;
  void *v629;
  __CFString *v630;
  __CFString *v631;
  id v632;
  void *v633;
  unint64_t v634;
  uint64_t v635;
  double v636;
  int v637;
  int v638;
  float v639;
  double v640;
  double v641;
  _value *v642;
  unint64_t v643;
  double v644;
  double v645;
  uint64_t v646;
  id v647;
  void *v648;
  void *v649;
  id v650;
  void *v651;
  int v652;
  id v653;
  uint64_t v654;
  uint64_t v655;
  id v656;
  BOOL v657;
  uint64_t v658;
  id v659;
  void *v660;
  unint64_t v661;
  uint64_t v662;
  _value *v663;
  uint64_t v664;
  id v665;
  unint64_t v666;
  uint64_t v667;
  uint64_t v668;
  id v669;
  _BOOL4 v670;
  void *v671;
  const TUI::Evaluation::Context *v672;
  int v673;
  uint64_t v674;
  int v675;
  void *v676;
  void *v677;
  unint64_t v678;
  void *v679;
  void *v680;
  void *v681;
  void *v682;
  void *v683;
  void *v684;
  void *v685;
  void *v686;
  void *v687;
  void *v688;
  uint64_t v689;
  void *v690;
  void *v691;
  void *v692;
  void *v693;
  uint64_t v694;
  void *v695;
  void *v696;
  unint64_t v697;
  uint64_t v698;
  unint64_t v699;
  uint64_t v700;
  uint64_t v701;
  unint64_t v702;
  uint64_t v703;
  BOOL v704;
  double v705;
  void *v706;
  uint64_t v707;
  id v708;
  int v709;
  uint64_t v710;
  int v711;
  int v712;
  int v713;
  uint64_t v714;
  uint64_t v715;
  objc_class *v716;
  NSString *v717;
  unint64_t v718;
  uint64_t v719;
  unint64_t v720;
  uint64_t v721;
  unsigned int v722;
  std::__shared_weak_count *v723;
  unint64_t *p_shared_owners;
  unint64_t v725;
  void *v726;
  _value *object;
  id v728;
  unsigned __int16 v729;
  NSString *v730;
  void *v731;
  uint64_t v732;
  id v733;
  void *v734;
  __CFString *v735;
  unint64_t v736;
  uint64_t v737;
  int v738;
  int v739;
  int v740;
  int v741;
  id v742;
  id v743;
  id v744;
  id v745;
  id v746;
  id v747;
  unsigned __int16 v748;
  id v749;
  id v750;
  id v751;
  void *v752;
  id v753;
  void *v754;
  id v755;
  id v756;
  unsigned __int16 v757;
  id v758;
  id v759;
  id v760;
  id v761;
  id v762;
  id v763;
  id v764;
  id v765;
  void *v766;
  double v767;
  TUISnap *v768;
  id v769;
  id v770;
  void *v771;
  id v772;
  id v773;
  id v774;
  id v775;
  id v776;
  id v777;
  unsigned __int16 v778;
  id v779;
  id v780;
  id v781;
  id v782;
  id v783;
  id v784;
  id v785;
  id v786;
  id v787;
  id v788;
  id v789;
  id v790;
  id v791;
  uint64_t v792;
  id v793;
  void *v794;
  void *v795;
  unsigned int v796;
  _value *v797;
  int v798;
  int v799;
  TUISnap *v800;
  id v801;
  uint64_t v802;
  id v803;
  void *v804;
  void *v805;
  double v806;
  float v807;
  int v808;
  double v809;
  float v810;
  int v811;
  double v812;
  int v813;
  id v814;
  unint64_t v815;
  uint64_t v816;
  void *v817;
  unint64_t v818;
  unint64_t v819;
  unint64_t v820;
  _TUIElementWithClosure *v821;
  unint64_t v822;
  unint64_t v823;
  unint64_t v824;
  unint64_t v825;
  unint64_t v826;
  unint64_t v827;
  unint64_t v828;
  unint64_t v829;
  unint64_t v830;
  unint64_t v831;
  unint64_t v832;
  unint64_t v833;
  unint64_t v834;
  unint64_t v835;
  unint64_t v836;
  unint64_t v837;
  unint64_t v838;
  unint64_t v839;
  unint64_t v840;
  uint64_t v841;
  uint64_t *v842;
  _QWORD v843[4];
  NSMutableArray *v844;
  _QWORD v845[2];
  std::__shared_weak_count *v846;
  int kind;
  _value *v848;
  int64_t integer;
  _QWORD v850[3];
  __int128 v851;
  CGAffineTransform v852;
  CGAffineTransform v853;
  CGAffineTransform v854;
  unint64_t v855;
  id v856;
  uint64_t v857;
  __int128 v858;
  uint64_t v859;
  CGAffineTransform v860;
  CGAffineTransform v861;
  CGAffineTransform v862;
  CGAffineTransform v863;
  CGAffineTransform v864;
  CGAffineTransform v865;
  CGAffineTransform t2;
  CGAffineTransform t1;
  CGAffineTransform v868;
  id v869;
  _value *v870;
  uint64_t v871;
  uint64_t v872;
  id v873;
  double v874;
  id v875;
  _value *v876;
  double v877;
  uint64_t v878;
  uint64_t v879;
  unint64_t v880;
  unint64_t v881;
  ResolvedValue v882[2];

  TUI::Instruction::Decoder::Decoder(&v878, *(_QWORD *)this, *((_DWORD *)this + 3));
  v2 = (uint64_t *)((char *)this + 16);
  v3 = v880;
  v4 = v881;
  if (v880 >= v881)
    goto LABEL_1008;
  v842 = (uint64_t *)((char *)this + 24);
  v5 = (uint64_t *)((char *)this + 32);
  v841 = *(_QWORD *)(*((_QWORD *)this + 2) + 560);
  while (2)
  {
    if (*(unsigned __int16 *)(v879 + 2 * v3) >= 0x64u)
      v6 = 0;
    else
      v6 = *(_WORD *)(v879 + 2 * v3);
    v7 = v3 + 1;
    v880 = v3 + 1;
    switch(v6)
    {
      case 0:
      case 11:
        TUI::Evaluation::Context::reportError(*v2, 1029, 0);
        goto LABEL_1007;
      case 1:
LABEL_1007:
        v3 = v880;
        v4 = v881;
        goto LABEL_1008;
      case 2:
        v882[0]._kind = 0;
        v882[0]._object = 0;
        v142 = *((_QWORD *)this + 4);
        if (v142 >= *((_QWORD *)this + 5))
          goto LABEL_787;
        goto LABEL_739;
      case 3:
        if (v7 >= v4)
          v150 = 0xFFFFLL;
        else
          v150 = *(unsigned __int16 *)(v879 + 2 * v7);
        v880 = v3 + 2;
        v451 = 0.0;
        if (*(_QWORD *)(*(_QWORD *)this + 32) > v150)
          v451 = *(float *)(*(_QWORD *)(*(_QWORD *)this + 24) + 4 * v150);
        v141 = 1;
        v882[0]._kind = 1;
        v882[0]._object = 0;
        v882[0].var0._float = v451;
        v142 = *((_QWORD *)this + 4);
        if (v142 >= *((_QWORD *)this + 5))
          goto LABEL_787;
        goto LABEL_790;
      case 4:
        v141 = 1;
        v882[0]._kind = 1;
        v882[0]._object = 0;
        v882[0].var0._integer = 0;
        v142 = *((_QWORD *)this + 4);
        if (v142 >= *((_QWORD *)this + 5))
          goto LABEL_787;
        goto LABEL_790;
      case 5:
        v133 = 1;
        v882[0]._kind = 1;
        v882[0]._object = 0;
        v882[0].var0._integer = 0x3FF0000000000000;
        v134 = *((_QWORD *)this + 4);
        if (v134 >= *((_QWORD *)this + 5))
          goto LABEL_787;
        goto LABEL_143;
      case 6:
        v133 = 1;
        v882[0]._kind = 1;
        v882[0]._object = 0;
        v882[0].var0._integer = 0x7FF8000000000000;
        v134 = *((_QWORD *)this + 4);
        if (v134 >= *((_QWORD *)this + 5))
          goto LABEL_787;
        goto LABEL_143;
      case 7:
        if (v7 >= v4)
          v169 = 0xFFFFLL;
        else
          v169 = *(unsigned __int16 *)(v879 + 2 * v7);
        v880 = v3 + 2;
        if (*(_QWORD *)(*(_QWORD *)this + 48) <= v169)
          v452 = 0;
        else
          v452 = *(int *)(*(_QWORD *)(*(_QWORD *)this + 40) + 4 * v169);
        v141 = 2;
        v882[0]._kind = 2;
        v882[0]._object = 0;
        v882[0].var0._integer = v452;
        v142 = *((_QWORD *)this + 4);
        if (v142 >= *((_QWORD *)this + 5))
          goto LABEL_787;
        goto LABEL_790;
      case 8:
        v133 = 2;
        v882[0]._kind = 2;
        v882[0]._object = 0;
        v882[0].var0._integer = 0x7FFFFFFFFFFFFFFFLL;
        v134 = *((_QWORD *)this + 4);
        if (v134 >= *((_QWORD *)this + 5))
          goto LABEL_787;
        goto LABEL_143;
      case 9:
        if (v7 >= v4)
          v143 = -1;
        else
          v143 = *(_WORD *)(v879 + 2 * v7);
        v880 = v3 + 2;
        v882[0]._kind = 6;
        v882[0]._object = 0;
        v882[0].var0._symbol = v143;
        v142 = *((_QWORD *)this + 4);
        if (v142 >= *((_QWORD *)this + 5))
          goto LABEL_787;
        *(_DWORD *)v142 = 6;
        goto LABEL_791;
      case 10:
        if (v7 >= v4)
          v201 = 0xFFFFLL;
        else
          v201 = *(unsigned __int16 *)(v879 + 2 * v7);
        v880 = v3 + 2;
        v454 = *(_QWORD *)this;
        if (*(_QWORD *)(*(_QWORD *)this + 64) > v201 && (v455 = *(_QWORD *)(v454 + 56)) != 0)
          v456 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", v455 + *(unsigned int *)(*(_QWORD *)(v454 + 72) + 4 * v201)));
        else
          v456 = 0;
        v39 = v456;
        v103 = 9;
        v882[0]._kind = 9;
        v882[0]._object = v39;
        v104 = *((_QWORD *)this + 4);
        if (v104 >= *((_QWORD *)this + 5))
          goto LABEL_759;
        goto LABEL_815;
      case 12:
        v133 = 12;
        v882[0]._kind = 12;
        v882[0]._object = 0;
        v882[0].var0._BOOL = 1;
        v134 = *((_QWORD *)this + 4);
        if (v134 >= *((_QWORD *)this + 5))
          goto LABEL_787;
        goto LABEL_143;
      case 13:
        v133 = 12;
        v882[0]._kind = 12;
        v882[0]._object = 0;
        v882[0].var0._BOOL = 0;
        v134 = *((_QWORD *)this + 4);
        if (v134 < *((_QWORD *)this + 5))
          goto LABEL_143;
        goto LABEL_787;
      case 14:
        if (v7 >= v4)
          v202 = 0xFFFFLL;
        else
          v202 = *(unsigned __int16 *)(v879 + 2 * v7);
        if (v3 + 2 >= v4)
          v457 = -65536;
        else
          v457 = *(unsigned __int16 *)(v879 + 2 * (v3 + 2)) << 16;
        v880 = v3 + 3;
        v464 = v202 | v457 & 0xFFFF0000;
        v830 = v202 | v830 & 0xFFFFFFFF00000000 | v457 & 0xFFFF0000;
        TUI::Evaluation::Context::lookupConstant((TUI::Evaluation::Context *)*v2, v464, (uint64_t)v882);
        v465 = *((_QWORD *)this + 4);
        if (v465 >= *((_QWORD *)this + 5))
          goto LABEL_787;
        *(_DWORD *)v465 = v882[0]._kind;
        *(_QWORD *)(v465 + 8) = v882[0]._object;
        *(_QWORD *)(v465 + 16) = v882[0].var0._integer;
        v151 = v465 + 24;
        goto LABEL_792;
      case 15:
      case 16:
      case 17:
      case 18:
      case 19:
      case 20:
        v882[0]._kind = 0;
        v882[0]._object = 0;
        v8 = *v5;
        if (*v5 == *v842)
        {
          LODWORD(v875) = 0;
          v876 = 0;
        }
        else
        {
          v882[0]._kind = *(_DWORD *)(v8 - 24);
          v882[0]._object = (_value *)*(id *)(v8 - 16);
          v882[0].var0._integer = *(_QWORD *)(v8 - 8);
          v9 = *v5;
          v10 = *v5 - 24;

          *v5 = v10;
          v11 = *v842;
          LODWORD(v875) = 0;
          v876 = 0;
          if (v10 != v11)
          {
            LODWORD(v875) = *(_DWORD *)(v9 - 48);
            v876 = (_value *)*(id *)(v9 - 40);
            v877 = *(double *)(v9 - 32);
            v12 = *v5 - 24;

            *v5 = v12;
          }
        }
        if (TUI::Evaluation::ResolvedValue::isConvertibleToKind((TUI::Evaluation::ResolvedValue *)&v875, 1, (TUI::Evaluation::Context *)*v2)&& TUI::Evaluation::ResolvedValue::isConvertibleToKind((TUI::Evaluation::ResolvedValue *)v882, 1, (TUI::Evaluation::Context *)*v2))
        {
          v13 = TUI::Evaluation::ResolvedValue::floatValue(&v875, (const TUI::Evaluation::Context *)*v2);
          v14 = TUI::Evaluation::ResolvedValue::floatValue((id *)v882, (const TUI::Evaluation::Context *)*v2);
          switch(v6)
          {
            case 15:
              v15 = v13 < v14;
              break;
            case 16:
              v15 = v13 <= v14;
              break;
            case 17:
              v15 = v13 > v14;
              break;
            case 18:
              v15 = v13 >= v14;
              break;
            case 19:
              v704 = v13 == v14;
              goto LABEL_820;
            case 20:
              v20 = v13 == v14;
              goto LABEL_833;
            default:
              goto LABEL_823;
          }
          goto LABEL_825;
        }
        if (TUI::Evaluation::ResolvedValue::isConvertibleToKind((TUI::Evaluation::ResolvedValue *)&v875, 12, (TUI::Evaluation::Context *)*v2)&& TUI::Evaluation::ResolvedValue::isConvertibleToKind((TUI::Evaluation::ResolvedValue *)v882, 12, (TUI::Evaluation::Context *)*v2))
        {
          v16 = TUI::Evaluation::ResolvedValue::BOOLValue((TUI::Evaluation::ResolvedValue *)&v875, (const TUI::Evaluation::Context *)*v2);
          v17 = TUI::Evaluation::ResolvedValue::BOOLValue((TUI::Evaluation::ResolvedValue *)v882, (const TUI::Evaluation::Context *)*v2);
          if (v6 == 19)
          {
            v15 = v16 ^ v17 ^ 1;
            goto LABEL_825;
          }
          if (v6 == 20)
          {
            v15 = v16 ^ v17;
            goto LABEL_825;
          }
          goto LABEL_823;
        }
        if (!TUI::Evaluation::ResolvedValue::isConvertibleToKind((TUI::Evaluation::ResolvedValue *)&v875, 6, (TUI::Evaluation::Context *)*v2)|| !TUI::Evaluation::ResolvedValue::isConvertibleToKind((TUI::Evaluation::ResolvedValue *)v882, 6, (TUI::Evaluation::Context *)*v2))
        {
          goto LABEL_824;
        }
        v18 = TUI::Evaluation::ResolvedValue::symbolValue((TUI::Evaluation::ResolvedValue *)&v875, (const TUI::Evaluation::Context *)*v2);
        v19 = TUI::Evaluation::ResolvedValue::symbolValue((TUI::Evaluation::ResolvedValue *)v882, (const TUI::Evaluation::Context *)*v2);
        if (v6 == 19)
        {
          v704 = v18 == v19;
LABEL_820:
          v15 = v704;
        }
        else
        {
          if (v6 != 20)
          {
LABEL_823:
            TUI::Evaluation::Context::reportError(*v2, 1020, 0);
LABEL_824:
            v15 = 0;
            goto LABEL_825;
          }
          v20 = v18 == v19;
LABEL_833:
          v15 = !v20;
        }
LABEL_825:
        v538 = 12;
        LODWORD(v872) = 12;
        v873 = 0;
        LOBYTE(v874) = v15;
        v539 = *((_QWORD *)this + 4);
        if (v539 >= *((_QWORD *)this + 5))
        {
LABEL_827:
          v614 = sub_14D14(v842, (uint64_t)&v872);
        }
        else
        {
LABEL_826:
          *(_DWORD *)v539 = v538;
          *(_QWORD *)(v539 + 8) = 0;
          *(double *)(v539 + 16) = v874;
          v614 = v539 + 24;
        }
LABEL_828:
        *v5 = v614;
        goto LABEL_1000;
      case 21:
        if (v7 >= v4)
          v120 = 0xFFFFLL;
        else
          v120 = *(unsigned __int16 *)(v879 + 2 * v7);
        if (v3 + 2 >= v4)
          v434 = -65536;
        else
          v434 = *(unsigned __int16 *)(v879 + 2 * (v3 + 2)) << 16;
        v880 = v3 + 3;
        isDefined = TUI::Evaluation::Context::isDefined((id *)*v2, v434 & 0xFFFF0000 | (unint64_t)v120);
        v141 = 12;
        v882[0]._kind = 12;
        v882[0]._object = 0;
        v882[0].var0._BOOL = isDefined;
        v142 = *((_QWORD *)this + 4);
        if (v142 >= *((_QWORD *)this + 5))
          goto LABEL_787;
        goto LABEL_790;
      case 22:
        v882[0]._kind = 0;
        v882[0]._object = 0;
        v239 = *v5;
        if (*v5 != *v842)
        {
          v882[0]._kind = *(_DWORD *)(v239 - 24);
          v882[0]._object = (_value *)*(id *)(v239 - 16);
          v882[0].var0._integer = *(_QWORD *)(v239 - 8);
          v240 = *v5 - 24;

          *v5 = v240;
        }
        v241 = TUI::Evaluation::ResolvedValue::floatValue((id *)v882, (const TUI::Evaluation::Context *)*v2);
        v147 = 1;
        LODWORD(v875) = 1;
        v876 = 0;
        v877 = ceil(v241);
        v148 = *((_QWORD *)this + 4);
        if (v148 >= *((_QWORD *)this + 5))
          goto LABEL_957;
        goto LABEL_234;
      case 23:
        v882[0]._kind = 0;
        v882[0]._object = 0;
        v152 = *v5;
        if (*v5 != *v842)
        {
          v882[0]._kind = *(_DWORD *)(v152 - 24);
          v882[0]._object = (_value *)*(id *)(v152 - 16);
          v882[0].var0._integer = *(_QWORD *)(v152 - 8);
          v153 = *v5 - 24;

          *v5 = v153;
        }
        v154 = TUI::Evaluation::ResolvedValue::floatValue((id *)v882, (const TUI::Evaluation::Context *)*v2);
        v147 = 1;
        LODWORD(v875) = 1;
        v876 = 0;
        v877 = floor(v154);
        v148 = *((_QWORD *)this + 4);
        if (v148 >= *((_QWORD *)this + 5))
          goto LABEL_957;
        goto LABEL_234;
      case 24:
        v882[0]._kind = 0;
        v882[0]._object = 0;
        v155 = *v5;
        if (*v5 != *v842)
        {
          v882[0]._kind = *(_DWORD *)(v155 - 24);
          v882[0]._object = (_value *)*(id *)(v155 - 16);
          v882[0].var0._integer = *(_QWORD *)(v155 - 8);
          v156 = *v5 - 24;

          *v5 = v156;
        }
        v157 = TUI::Evaluation::ResolvedValue::floatValue((id *)v882, (const TUI::Evaluation::Context *)*v2);
        v147 = 1;
        LODWORD(v875) = 1;
        v876 = 0;
        v877 = round(v157);
        v148 = *((_QWORD *)this + 4);
        if (v148 >= *((_QWORD *)this + 5))
          goto LABEL_957;
        goto LABEL_234;
      case 25:
        v882[0]._kind = 0;
        v882[0]._object = 0;
        v121 = *v5;
        if (*v5 == *v842)
        {
          LODWORD(v875) = 0;
          v876 = 0;
        }
        else
        {
          v882[0]._kind = *(_DWORD *)(v121 - 24);
          v882[0]._object = (_value *)*(id *)(v121 - 16);
          v882[0].var0._integer = *(_QWORD *)(v121 - 8);
          v122 = *v5;
          v123 = *v5 - 24;

          *v5 = v123;
          v124 = *v842;
          LODWORD(v875) = 0;
          v876 = 0;
          if (v123 != v124)
          {
            LODWORD(v875) = *(_DWORD *)(v122 - 48);
            v876 = (_value *)*(id *)(v122 - 40);
            v877 = *(double *)(v122 - 32);
            v125 = *v5 - 24;

            *v5 = v125;
          }
        }
        v544 = TUI::Evaluation::ResolvedValue::floatValue(&v875, (const TUI::Evaluation::Context *)*v2);
        v545 = TUI::Evaluation::ResolvedValue::floatValue((id *)v882, (const TUI::Evaluation::Context *)*v2);
        LODWORD(v872) = 1;
        v873 = 0;
        v874 = v544 + v545;
        v546 = *((_QWORD *)this + 4);
        if (v546 >= *((_QWORD *)this + 5))
          goto LABEL_623;
        *(_DWORD *)v546 = 1;
        *(_QWORD *)(v546 + 8) = 0;
        *(double *)(v546 + 16) = v874;
        v543 = v546 + 24;
        goto LABEL_624;
      case 26:
        v882[0]._kind = 0;
        v882[0]._object = 0;
        v126 = *v5;
        if (*v5 == *v842)
        {
          LODWORD(v875) = 0;
          v876 = 0;
        }
        else
        {
          v882[0]._kind = *(_DWORD *)(v126 - 24);
          v882[0]._object = (_value *)*(id *)(v126 - 16);
          v882[0].var0._integer = *(_QWORD *)(v126 - 8);
          v127 = *v5;
          v128 = *v5 - 24;

          *v5 = v128;
          v129 = *v842;
          LODWORD(v875) = 0;
          v876 = 0;
          if (v128 != v129)
          {
            LODWORD(v875) = *(_DWORD *)(v127 - 48);
            v876 = (_value *)*(id *)(v127 - 40);
            v877 = *(double *)(v127 - 32);
            v130 = *v5 - 24;

            *v5 = v130;
          }
        }
        v547 = TUI::Evaluation::ResolvedValue::floatValue(&v875, (const TUI::Evaluation::Context *)*v2);
        v548 = TUI::Evaluation::ResolvedValue::floatValue((id *)v882, (const TUI::Evaluation::Context *)*v2);
        LODWORD(v872) = 1;
        v873 = 0;
        v874 = v547 - v548;
        v549 = *((_QWORD *)this + 4);
        if (v549 >= *((_QWORD *)this + 5))
          goto LABEL_623;
        *(_DWORD *)v549 = 1;
        *(_QWORD *)(v549 + 8) = 0;
        *(double *)(v549 + 16) = v874;
        v543 = v549 + 24;
        goto LABEL_624;
      case 27:
        LODWORD(v875) = 0;
        v876 = 0;
        v203 = *v5;
        if (*v5 == *v842)
        {
          LODWORD(v872) = 0;
          v873 = 0;
        }
        else
        {
          LODWORD(v875) = *(_DWORD *)(v203 - 24);
          v876 = (_value *)*(id *)(v203 - 16);
          v877 = *(double *)(v203 - 8);
          v204 = *v5;
          v205 = *v5 - 24;

          *v5 = v205;
          v206 = *v842;
          LODWORD(v872) = 0;
          v873 = 0;
          if (v205 != v206)
          {
            LODWORD(v872) = *(_DWORD *)(v204 - 48);
            v873 = *(id *)(v204 - 40);
            v874 = *(double *)(v204 - 32);
            v207 = *v5 - 24;

            *v5 = v207;
          }
        }
        if (TUI::Evaluation::ResolvedValue::isConvertibleToKind((TUI::Evaluation::ResolvedValue *)&v872, 1, (TUI::Evaluation::Context *)*v2)&& TUI::Evaluation::ResolvedValue::isConvertibleToKind((TUI::Evaluation::ResolvedValue *)&v875, 1, (TUI::Evaluation::Context *)*v2))
        {
          v559 = TUI::Evaluation::ResolvedValue::floatValue((id *)&v872, (const TUI::Evaluation::Context *)*v2);
          v560 = TUI::Evaluation::ResolvedValue::floatValue(&v875, (const TUI::Evaluation::Context *)*v2);
          v882[0]._kind = 1;
          v882[0]._object = 0;
          v882[0].var0._float = v559 * v560;
          v561 = *((_QWORD *)this + 4);
          if (v561 >= *((_QWORD *)this + 5))
          {
            v562 = sub_14D14(v842, (uint64_t)v882);
          }
          else
          {
            *(_DWORD *)v561 = 1;
            *(_QWORD *)(v561 + 8) = 0;
            *(_QWORD *)(v561 + 16) = v882[0].var0._integer;
            v562 = v561 + 24;
          }
          *v5 = v562;
          object = v882[0]._object;
          goto LABEL_906;
        }
        if (TUI::Evaluation::ResolvedValue::isConvertibleToKind((TUI::Evaluation::ResolvedValue *)&v872, 1, (TUI::Evaluation::Context *)*v2)&& TUI::Evaluation::ResolvedValue::isConvertibleToKind((TUI::Evaluation::ResolvedValue *)&v875, 13, (TUI::Evaluation::Context *)*v2))
        {
          v563 = TUI::Evaluation::ResolvedValue::floatValue((id *)&v872, (const TUI::Evaluation::Context *)*v2);
          CGAffineTransformMakeScale(&t1, v563, v563);
          TUI::Evaluation::ResolvedValue::transformValue((TUI::Evaluation::ResolvedValue *)&v875, (const TUI::Evaluation::Context *)*v2, &t2);
          CGAffineTransformConcat(&v868, &t1, &t2);
          LODWORD(v869) = 13;
          v870 = 0;
          *(CGAffineTransform *)&v882[0]._kind = v868;
          v564 = (_value *)objc_claimAutoreleasedReturnValue(+[NSValue valueWithCGAffineTransform:](NSValue, "valueWithCGAffineTransform:", v882));
          v870 = v564;
          v565 = *((_QWORD *)this + 4);
          if (v565 >= *((_QWORD *)this + 5))
            goto LABEL_903;
          goto LABEL_612;
        }
        if (TUI::Evaluation::ResolvedValue::isConvertibleToKind((TUI::Evaluation::ResolvedValue *)&v872, 13, (TUI::Evaluation::Context *)*v2)&& TUI::Evaluation::ResolvedValue::isConvertibleToKind((TUI::Evaluation::ResolvedValue *)&v875, 1, (TUI::Evaluation::Context *)*v2))
        {
          v566 = TUI::Evaluation::ResolvedValue::floatValue(&v875, (const TUI::Evaluation::Context *)*v2);
          TUI::Evaluation::ResolvedValue::transformValue((TUI::Evaluation::ResolvedValue *)&v872, (const TUI::Evaluation::Context *)*v2, &v864);
          CGAffineTransformMakeScale(&v863, v566, v566);
          CGAffineTransformConcat(&v865, &v864, &v863);
          LODWORD(v869) = 13;
          v870 = 0;
          *(CGAffineTransform *)&v882[0]._kind = v865;
          v564 = (_value *)objc_claimAutoreleasedReturnValue(+[NSValue valueWithCGAffineTransform:](NSValue, "valueWithCGAffineTransform:", v882));
          v870 = v564;
          v565 = *((_QWORD *)this + 4);
          if (v565 >= *((_QWORD *)this + 5))
          {
LABEL_903:
            v567 = sub_14D14(v842, (uint64_t)&v869);
            goto LABEL_904;
          }
LABEL_612:
          *(_DWORD *)v565 = (_DWORD)v869;
          *(_QWORD *)(v565 + 8) = v564;
          *(_QWORD *)(v565 + 16) = v871;
          v567 = v565 + 24;
LABEL_904:
          *v5 = v567;
          goto LABEL_905;
        }
        if (TUI::Evaluation::ResolvedValue::isConvertibleToKind((TUI::Evaluation::ResolvedValue *)&v872, 13, (TUI::Evaluation::Context *)*v2)&& TUI::Evaluation::ResolvedValue::isConvertibleToKind((TUI::Evaluation::ResolvedValue *)&v875, 13, (TUI::Evaluation::Context *)*v2))
        {
          TUI::Evaluation::ResolvedValue::transformValue((TUI::Evaluation::ResolvedValue *)&v872, (const TUI::Evaluation::Context *)*v2, &v861);
          TUI::Evaluation::ResolvedValue::transformValue((TUI::Evaluation::ResolvedValue *)&v875, (const TUI::Evaluation::Context *)*v2, &v860);
          CGAffineTransformConcat(&v862, &v861, &v860);
          LODWORD(v869) = 13;
          v870 = 0;
          *(CGAffineTransform *)&v882[0]._kind = v862;
          v870 = (_value *)objc_claimAutoreleasedReturnValue(+[NSValue valueWithCGAffineTransform:](NSValue, "valueWithCGAffineTransform:", v882));
          sub_11E0C(v842, (uint64_t)&v869);
LABEL_905:
          object = v870;
LABEL_906:

          goto LABEL_907;
        }
        v882[0]._kind = 0;
        v882[0]._object = 0;
        v699 = *((_QWORD *)this + 4);
        if (v699 >= *((_QWORD *)this + 5))
        {
          v700 = sub_14D14(v842, (uint64_t)v882);
        }
        else
        {
          *(_DWORD *)v699 = 0;
          *(_QWORD *)(v699 + 8) = 0;
          *(_QWORD *)(v699 + 16) = v882[0].var0._integer;
          v700 = v699 + 24;
        }
        *v5 = v700;

        TUI::Evaluation::Context::reportError(*v2, 1000, 0);
LABEL_907:
        TUI::Instruction::Evaluation::fixFloatIfNeeded(this);
        goto LABEL_908;
      case 28:
        v882[0]._kind = 0;
        v882[0]._object = 0;
        v208 = *v5;
        if (*v5 == *v842)
        {
          LODWORD(v875) = 0;
          v876 = 0;
        }
        else
        {
          v882[0]._kind = *(_DWORD *)(v208 - 24);
          v882[0]._object = (_value *)*(id *)(v208 - 16);
          v882[0].var0._integer = *(_QWORD *)(v208 - 8);
          v209 = *v5;
          v210 = *v5 - 24;

          *v5 = v210;
          v211 = *v842;
          LODWORD(v875) = 0;
          v876 = 0;
          if (v210 != v211)
          {
            LODWORD(v875) = *(_DWORD *)(v209 - 48);
            v876 = (_value *)*(id *)(v209 - 40);
            v877 = *(double *)(v209 - 32);
            v212 = *v5 - 24;

            *v5 = v212;
          }
        }
        v568 = TUI::Evaluation::ResolvedValue::floatValue((id *)v882, (const TUI::Evaluation::Context *)*v2);
        if (v568 == 0.0)
        {
          LODWORD(v872) = 1;
          v873 = 0;
          v874 = INFINITY;
          v666 = *((_QWORD *)this + 4);
          if (v666 >= *((_QWORD *)this + 5))
          {
            v667 = sub_14D14(v842, (uint64_t)&v872);
          }
          else
          {
            *(_DWORD *)v666 = 1;
            *(_QWORD *)(v666 + 8) = 0;
            *(double *)(v666 + 16) = v874;
            v667 = v666 + 24;
          }
          *v5 = v667;

          TUI::Evaluation::Context::reportError(*v2, 1026, 0);
        }
        else
        {
          v569 = TUI::Evaluation::ResolvedValue::floatValue(&v875, (const TUI::Evaluation::Context *)*v2);
          LODWORD(v872) = 1;
          v873 = 0;
          v874 = v569 / v568;
          v570 = *((_QWORD *)this + 4);
          if (v570 >= *((_QWORD *)this + 5))
          {
            v571 = sub_14D14(v842, (uint64_t)&v872);
          }
          else
          {
            *(_DWORD *)v570 = 1;
            *(_QWORD *)(v570 + 8) = 0;
            *(double *)(v570 + 16) = v874;
            v571 = v570 + 24;
          }
          *v5 = v571;

        }
        TUI::Instruction::Evaluation::fixFloatIfNeeded(this);
        goto LABEL_1001;
      case 29:
        v882[0]._kind = 0;
        v882[0]._object = 0;
        v280 = *v5;
        if (*v5 == *v842)
        {
          LODWORD(v875) = 0;
          v876 = 0;
        }
        else
        {
          v882[0]._kind = *(_DWORD *)(v280 - 24);
          v882[0]._object = (_value *)*(id *)(v280 - 16);
          v882[0].var0._integer = *(_QWORD *)(v280 - 8);
          v281 = *v5;
          v282 = *v5 - 24;

          *v5 = v282;
          v283 = *v842;
          LODWORD(v875) = 0;
          v876 = 0;
          if (v282 != v283)
          {
            LODWORD(v875) = *(_DWORD *)(v281 - 48);
            v876 = (_value *)*(id *)(v281 - 40);
            v877 = *(double *)(v281 - 32);
            v284 = *v5 - 24;

            *v5 = v284;
          }
        }
        v606 = TUI::Evaluation::ResolvedValue::floatValue(&v875, (const TUI::Evaluation::Context *)*v2);
        v607 = (uint64_t)TUI::Evaluation::ResolvedValue::floatValue((id *)v882, (const TUI::Evaluation::Context *)*v2);
        if (v607)
          v607 = (uint64_t)v606 % v607;
        v538 = 1;
        LODWORD(v872) = 1;
        v873 = 0;
        v874 = (double)v607;
        v539 = *((_QWORD *)this + 4);
        if (v539 >= *((_QWORD *)this + 5))
          goto LABEL_827;
        goto LABEL_826;
      case 30:
        v882[0]._kind = 0;
        v882[0]._object = 0;
        v110 = *v5;
        if (*v5 == *v842)
        {
          LODWORD(v875) = 0;
          v876 = 0;
        }
        else
        {
          v882[0]._kind = *(_DWORD *)(v110 - 24);
          v882[0]._object = (_value *)*(id *)(v110 - 16);
          v882[0].var0._integer = *(_QWORD *)(v110 - 8);
          v111 = *v5;
          v112 = *v5 - 24;

          *v5 = v112;
          v113 = *v842;
          LODWORD(v875) = 0;
          v876 = 0;
          if (v112 != v113)
          {
            LODWORD(v875) = *(_DWORD *)(v111 - 48);
            v876 = (_value *)*(id *)(v111 - 40);
            v877 = *(double *)(v111 - 32);
            v114 = *v5 - 24;

            *v5 = v114;
          }
        }
        v540 = TUI::Evaluation::ResolvedValue::floatValue(&v875, (const TUI::Evaluation::Context *)*v2);
        v541 = TUI::Evaluation::ResolvedValue::floatValue((id *)v882, (const TUI::Evaluation::Context *)*v2);
        LODWORD(v872) = 1;
        v873 = 0;
        v874 = fmin(v540, v541);
        v542 = *((_QWORD *)this + 4);
        if (v542 >= *((_QWORD *)this + 5))
          goto LABEL_623;
        *(_DWORD *)v542 = 1;
        *(_QWORD *)(v542 + 8) = 0;
        *(double *)(v542 + 16) = v874;
        v543 = v542 + 24;
        goto LABEL_624;
      case 31:
        v882[0]._kind = 0;
        v882[0]._object = 0;
        v213 = *v5;
        if (*v5 == *v842)
        {
          LODWORD(v875) = 0;
          v876 = 0;
        }
        else
        {
          v882[0]._kind = *(_DWORD *)(v213 - 24);
          v882[0]._object = (_value *)*(id *)(v213 - 16);
          v882[0].var0._integer = *(_QWORD *)(v213 - 8);
          v214 = *v5;
          v215 = *v5 - 24;

          *v5 = v215;
          v216 = *v842;
          LODWORD(v875) = 0;
          v876 = 0;
          if (v215 != v216)
          {
            LODWORD(v875) = *(_DWORD *)(v214 - 48);
            v876 = (_value *)*(id *)(v214 - 40);
            v877 = *(double *)(v214 - 32);
            v217 = *v5 - 24;

            *v5 = v217;
          }
        }
        v572 = TUI::Evaluation::ResolvedValue::floatValue(&v875, (const TUI::Evaluation::Context *)*v2);
        v573 = TUI::Evaluation::ResolvedValue::floatValue((id *)v882, (const TUI::Evaluation::Context *)*v2);
        LODWORD(v872) = 1;
        v873 = 0;
        v874 = fmax(v572, v573);
        v574 = *((_QWORD *)this + 4);
        if (v574 >= *((_QWORD *)this + 5))
        {
LABEL_623:
          v543 = sub_14D14(v842, (uint64_t)&v872);
        }
        else
        {
          *(_DWORD *)v574 = 1;
          *(_QWORD *)(v574 + 8) = 0;
          *(double *)(v574 + 16) = v874;
          v543 = v574 + 24;
        }
LABEL_624:
        *((_QWORD *)this + 4) = v543;

        TUI::Instruction::Evaluation::fixFloatIfNeeded(this);
        goto LABEL_1001;
      case 32:
        v882[0]._kind = 0;
        v882[0]._object = 0;
        v265 = *v5;
        if (*v5 != *v842)
        {
          v882[0]._kind = *(_DWORD *)(v265 - 24);
          v882[0]._object = (_value *)*(id *)(v265 - 16);
          v882[0].var0._integer = *(_QWORD *)(v265 - 8);
          v266 = *v5 - 24;

          *v5 = v266;
        }
        v267 = TUI::Evaluation::ResolvedValue::floatValue((id *)v882, (const TUI::Evaluation::Context *)*v2);
        v147 = 1;
        LODWORD(v875) = 1;
        v876 = 0;
        v877 = -v267;
        v148 = *((_QWORD *)this + 4);
        if (v148 < *((_QWORD *)this + 5))
          goto LABEL_234;
        goto LABEL_957;
      case 33:
        v882[0]._kind = 0;
        v882[0]._object = 0;
        v144 = *v5;
        if (*v5 != *v842)
        {
          v882[0]._kind = *(_DWORD *)(v144 - 24);
          v882[0]._object = (_value *)*(id *)(v144 - 16);
          v882[0].var0._integer = *(_QWORD *)(v144 - 8);
          v145 = *v5 - 24;

          *v5 = v145;
        }
        v146 = TUI::Evaluation::ResolvedValue::BOOLValue((TUI::Evaluation::ResolvedValue *)v882, (const TUI::Evaluation::Context *)*v2);
        v147 = 12;
        LODWORD(v875) = 12;
        v876 = 0;
        LOBYTE(v877) = v146 ^ 1;
        v148 = *((_QWORD *)this + 4);
        if (v148 >= *((_QWORD *)this + 5))
          goto LABEL_957;
LABEL_234:
        *(_DWORD *)v148 = v147;
        *(_QWORD *)(v148 + 8) = 0;
        *(double *)(v148 + 16) = v877;
        v268 = v148 + 24;
        goto LABEL_958;
      case 34:
        v882[0]._kind = 0;
        v882[0]._object = 0;
        v105 = *v5;
        if (*v5 == *v842)
        {
          LODWORD(v875) = 0;
          v876 = 0;
        }
        else
        {
          v882[0]._kind = *(_DWORD *)(v105 - 24);
          v882[0]._object = (_value *)*(id *)(v105 - 16);
          v882[0].var0._integer = *(_QWORD *)(v105 - 8);
          v106 = *v5;
          v107 = *v5 - 24;

          *v5 = v107;
          v108 = *v842;
          LODWORD(v875) = 0;
          v876 = 0;
          if (v107 != v108)
          {
            LODWORD(v875) = *(_DWORD *)(v106 - 48);
            v876 = (_value *)*(id *)(v106 - 40);
            v877 = *(double *)(v106 - 32);
            v109 = *v5 - 24;

            *v5 = v109;
          }
        }
        v537 = TUI::Evaluation::ResolvedValue::BOOLValue((TUI::Evaluation::ResolvedValue *)&v875, (const TUI::Evaluation::Context *)*v2);
        if (v537)
          LOBYTE(v537) = TUI::Evaluation::ResolvedValue::BOOLValue((TUI::Evaluation::ResolvedValue *)v882, (const TUI::Evaluation::Context *)*v2);
        v538 = 12;
        LODWORD(v872) = 12;
        v873 = 0;
        LOBYTE(v874) = v537;
        v539 = *((_QWORD *)this + 4);
        if (v539 >= *((_QWORD *)this + 5))
          goto LABEL_827;
        goto LABEL_826;
      case 35:
        v882[0]._kind = 0;
        v882[0]._object = 0;
        v274 = *v5;
        if (*v5 == *v842)
        {
          LODWORD(v875) = 0;
          v876 = 0;
        }
        else
        {
          v882[0]._kind = *(_DWORD *)(v274 - 24);
          v882[0]._object = (_value *)*(id *)(v274 - 16);
          v882[0].var0._integer = *(_QWORD *)(v274 - 8);
          v275 = *v5;
          v276 = *v5 - 24;

          *v5 = v276;
          v277 = *v842;
          LODWORD(v875) = 0;
          v876 = 0;
          if (v276 != v277)
          {
            LODWORD(v875) = *(_DWORD *)(v275 - 48);
            v876 = (_value *)*(id *)(v275 - 40);
            v877 = *(double *)(v275 - 32);
            v278 = *v5 - 24;

            *v5 = v278;
          }
        }
        if ((TUI::Evaluation::ResolvedValue::BOOLValue((TUI::Evaluation::ResolvedValue *)&v875, (const TUI::Evaluation::Context *)*v2) & 1) != 0)v605 = 1;
        else
          v605 = TUI::Evaluation::ResolvedValue::BOOLValue((TUI::Evaluation::ResolvedValue *)v882, (const TUI::Evaluation::Context *)*v2);
        v538 = 12;
        LODWORD(v872) = 12;
        v873 = 0;
        LOBYTE(v874) = v605;
        v539 = *((_QWORD *)this + 4);
        if (v539 >= *((_QWORD *)this + 5))
          goto LABEL_827;
        goto LABEL_826;
      case 36:
        v882[0]._kind = 0;
        v882[0]._object = 0;
        v135 = *v5;
        if (*v5 != *v842)
        {
          v882[0]._kind = *(_DWORD *)(v135 - 24);
          v882[0]._object = (_value *)*(id *)(v135 - 16);
          v882[0].var0._integer = *(_QWORD *)(v135 - 8);
          v136 = *v5 - 24;

          *v5 = v136;
          v7 = v880;
          v4 = v881;
        }
        if (v7 >= v4)
          v137 = 0xFFFF;
        else
          v137 = *(unsigned __int16 *)(v879 + 2 * v7);
        v880 = v7 + 1;
        TUI::Evaluation::ResolvedValue::resolveProperty((id *)v882, (const TUI::Evaluation::Context *)*v2, v137, (uint64_t)&v875);
        v450 = *((_QWORD *)this + 4);
        if (v450 >= *((_QWORD *)this + 5))
          goto LABEL_957;
        goto LABEL_462;
      case 37:
        v882[0]._kind = 0;
        v882[0]._object = 0;
        v310 = *v5;
        if (*v5 != *v842)
        {
          v882[0]._kind = *(_DWORD *)(v310 - 24);
          v882[0]._object = (_value *)*(id *)(v310 - 16);
          v882[0].var0._integer = *(_QWORD *)(v310 - 8);
          v311 = *v5 - 24;

          *v5 = v311;
          v7 = v880;
          v4 = v881;
        }
        if (v7 >= v4)
          v312 = 0xFFFF;
        else
          v312 = *(unsigned __int16 *)(v879 + 2 * v7);
        v880 = v7 + 1;
        TUI::Evaluation::ResolvedValue::testProperty((TUI::Evaluation::ResolvedValue *)v882, (const TUI::Evaluation::Context *)*v2, v312, (uint64_t)&v875);
        v450 = *((_QWORD *)this + 4);
        if (v450 >= *((_QWORD *)this + 5))
          goto LABEL_957;
LABEL_462:
        *(_DWORD *)v450 = (_DWORD)v875;
        v472 = v876;
        goto LABEL_956;
      case 38:
        v882[0]._kind = 0;
        v882[0]._object = 0;
        v115 = *v5;
        if (*v5 != *v842)
        {
          v882[0]._kind = *(_DWORD *)(v115 - 24);
          v882[0]._object = (_value *)*(id *)(v115 - 16);
          v882[0].var0._integer = *(_QWORD *)(v115 - 8);
          v116 = *v5 - 24;

          *v5 = v116;
          v7 = v880;
          v4 = v881;
        }
        if (v7 >= v4)
          v117 = -65536;
        else
          v117 = *(unsigned __int16 *)(v879 + 2 * v7) << 16;
        if (v7 + 1 >= v4)
          v433 = 0xFFFFLL;
        else
          v433 = *(unsigned __int16 *)(v879 + 2 * (v7 + 1));
        goto LABEL_556;
      case 39:
        v78 = *v5;
        if (*v5 == *v842)
        {
          v79 = 0;
          v80 = 0;
        }
        else
        {
          v79 = *(_DWORD *)(v78 - 24);
          v80 = (_value *)*(id *)(v78 - 16);
          v882[0].var0._integer = *(_QWORD *)(v78 - 8);
          v7 = v880;
          v4 = v881;
        }
        v882[0]._kind = v79;
        v882[0]._object = v80;
        if (v7 >= v4)
          v117 = -65536;
        else
          v117 = *(unsigned __int16 *)(v879 + 2 * v7) << 16;
        if (v7 + 1 >= v4)
          v433 = 0xFFFFLL;
        else
          v433 = *(unsigned __int16 *)(v879 + 2 * (v7 + 1));
LABEL_556:
        v880 = v7 + 2;
        if (!TUI::Evaluation::ResolvedValue::BOOLValue((TUI::Evaluation::ResolvedValue *)v882, (const TUI::Evaluation::Context *)*v2))goto LABEL_1002;
        goto LABEL_590;
      case 40:
        v882[0]._kind = 0;
        v882[0]._object = 0;
        v118 = *v5;
        if (*v5 != *v842)
        {
          v882[0]._kind = *(_DWORD *)(v118 - 24);
          v882[0]._object = (_value *)*(id *)(v118 - 16);
          v882[0].var0._integer = *(_QWORD *)(v118 - 8);
          v119 = *v5 - 24;

          *v5 = v119;
          v7 = v880;
          v4 = v881;
        }
        if (v7 >= v4)
          v117 = -65536;
        else
          v117 = *(unsigned __int16 *)(v879 + 2 * v7) << 16;
        if (v7 + 1 >= v4)
          v433 = 0xFFFFLL;
        else
          v433 = *(unsigned __int16 *)(v879 + 2 * (v7 + 1));
        goto LABEL_589;
      case 41:
        v138 = *v5;
        if (*v5 == *v842)
        {
          v139 = 0;
          v140 = 0;
        }
        else
        {
          v139 = *(_DWORD *)(v138 - 24);
          v140 = (_value *)*(id *)(v138 - 16);
          v882[0].var0._integer = *(_QWORD *)(v138 - 8);
          v7 = v880;
          v4 = v881;
        }
        v882[0]._kind = v139;
        v882[0]._object = v140;
        if (v7 >= v4)
          v117 = -65536;
        else
          v117 = *(unsigned __int16 *)(v879 + 2 * v7) << 16;
        if (v7 + 1 >= v4)
          v433 = 0xFFFFLL;
        else
          v433 = *(unsigned __int16 *)(v879 + 2 * (v7 + 1));
LABEL_589:
        v880 = v7 + 2;
        if ((TUI::Evaluation::ResolvedValue::BOOLValue((TUI::Evaluation::ResolvedValue *)v882, (const TUI::Evaluation::Context *)*v2) & 1) == 0)LABEL_590:v880 = v433 | v117 & 0xFFFF0000;
        goto LABEL_1002;
      case 42:
        v882[0]._kind = 0;
        v882[0]._object = 0;
        v292 = *v5;
        if (*v5 == *v842)
        {
          LODWORD(v875) = 0;
          v876 = 0;
        }
        else
        {
          v882[0]._kind = *(_DWORD *)(v292 - 24);
          v882[0]._object = (_value *)*(id *)(v292 - 16);
          v882[0].var0._integer = *(_QWORD *)(v292 - 8);
          v293 = *v5;
          v294 = *v5 - 24;

          *v5 = v294;
          v295 = *v842;
          LODWORD(v875) = 0;
          v876 = 0;
          if (v294 != v295)
          {
            LODWORD(v875) = *(_DWORD *)(v293 - 48);
            v876 = (_value *)*(id *)(v293 - 40);
            v877 = *(double *)(v293 - 32);
            v296 = *v5 - 24;

            *v5 = v296;
          }
        }
        v610 = TUI::Evaluation::ResolvedValue::floatValue(&v875, (const TUI::Evaluation::Context *)*v2);
        v611 = TUI::Evaluation::ResolvedValue::floatValue((id *)v882, (const TUI::Evaluation::Context *)*v2);
        LODWORD(v872) = 3;
        v873 = 0;
        v612 = (void *)objc_claimAutoreleasedReturnValue(+[NSValue valueWithCGSize:](NSValue, "valueWithCGSize:", v610, v611));
        v873 = v612;
        v613 = *((_QWORD *)this + 4);
        if (v613 >= *((_QWORD *)this + 5))
          goto LABEL_827;
        *(_DWORD *)v613 = v872;
        *(_QWORD *)(v613 + 8) = v612;
        *(double *)(v613 + 16) = v874;
        v614 = v613 + 24;
        goto LABEL_828;
      case 43:
        LODWORD(v875) = 0;
        v876 = 0;
        v81 = *v5;
        if (*v5 == *v842)
        {
          LODWORD(v872) = 0;
          v873 = 0;
        }
        else
        {
          LODWORD(v875) = *(_DWORD *)(v81 - 24);
          v876 = (_value *)*(id *)(v81 - 16);
          v877 = *(double *)(v81 - 8);
          v82 = *v5;
          v83 = *v5 - 24;

          *v5 = v83;
          v84 = *v842;
          LODWORD(v872) = 0;
          v873 = 0;
          if (v83 != v84)
          {
            LODWORD(v872) = *(_DWORD *)(v82 - 48);
            v873 = *(id *)(v82 - 40);
            v874 = *(double *)(v82 - 32);
            v85 = *v5;
            v86 = *v5 - 24;

            *v5 = v86;
            v87 = *v842;
            LODWORD(v869) = 0;
            v870 = 0;
            if (v86 != v87)
            {
              LODWORD(v869) = *(_DWORD *)(v85 - 48);
              v870 = (_value *)*(id *)(v85 - 40);
              v871 = *(_QWORD *)(v85 - 32);
              v88 = *v5;
              v89 = *v5 - 24;

              *v5 = v89;
              v90 = *v842;
              LODWORD(v858) = 0;
              *((_QWORD *)&v858 + 1) = 0;
              if (v89 != v90)
              {
                LODWORD(v858) = *(_DWORD *)(v88 - 48);
                *((_QWORD *)&v858 + 1) = *(id *)(v88 - 40);
                v859 = *(_QWORD *)(v88 - 32);
                v91 = *v5 - 24;

                *v5 = v91;
              }
LABEL_561:
              v530 = TUI::Evaluation::ResolvedValue::floatOrDefaultValue((TUI::Evaluation::ResolvedValue *)&v858, (const TUI::Evaluation::Context *)*v2);
              v531 = TUI::Evaluation::ResolvedValue::floatOrDefaultValue((TUI::Evaluation::ResolvedValue *)&v869, (const TUI::Evaluation::Context *)*v2);
              v532 = TUI::Evaluation::ResolvedValue::floatOrDefaultValue((TUI::Evaluation::ResolvedValue *)&v872, (const TUI::Evaluation::Context *)*v2);
              v533 = TUI::Evaluation::ResolvedValue::floatOrDefaultValue((TUI::Evaluation::ResolvedValue *)&v875, (const TUI::Evaluation::Context *)*v2);
              *(double *)&v882[0]._kind = v530;
              *(double *)&v882[0]._object = v531;
              v882[0].var0._integer = v532;
              *(double *)&v882[1]._kind = v533;
              LODWORD(v855) = 4;
              v856 = 0;
              v534 = objc_msgSend(objc_alloc((Class)NSData), "initWithBytes:length:", v882, 32);
              v856 = v534;
              v535 = *((_QWORD *)this + 4);
              if (v535 >= *((_QWORD *)this + 5))
              {
                v536 = sub_14D14(v842, (uint64_t)&v855);
              }
              else
              {
                *(_DWORD *)v535 = v855;
                *(_QWORD *)(v535 + 8) = v534;
                *(_QWORD *)(v535 + 16) = v857;
                v536 = v535 + 24;
              }
              *v5 = v536;

LABEL_706:
LABEL_908:

LABEL_909:
              v663 = v876;
              goto LABEL_1003;
            }
LABEL_560:
            LODWORD(v858) = 0;
            *((_QWORD *)&v858 + 1) = 0;
            goto LABEL_561;
          }
        }
        LODWORD(v869) = 0;
        v870 = 0;
        goto LABEL_560;
      case 44:
        v882[0]._kind = 0;
        v882[0]._object = 0;
        v297 = *v5;
        if (*v5 == *v842)
        {
          LODWORD(v875) = 0;
          v876 = 0;
        }
        else
        {
          v882[0]._kind = *(_DWORD *)(v297 - 24);
          v882[0]._object = (_value *)*(id *)(v297 - 16);
          v882[0].var0._integer = *(_QWORD *)(v297 - 8);
          v298 = *v5;
          v299 = *v5 - 24;

          *v5 = v299;
          v300 = *v842;
          LODWORD(v875) = 0;
          v876 = 0;
          if (v299 != v300)
          {
            LODWORD(v875) = *(_DWORD *)(v298 - 48);
            v876 = (_value *)*(id *)(v298 - 40);
            v877 = *(double *)(v298 - 32);
            v301 = *v5;
            v302 = *v5 - 24;

            *v5 = v302;
            v303 = *v842;
            LODWORD(v872) = 0;
            v873 = 0;
            if (v302 != v303)
            {
              LODWORD(v872) = *(_DWORD *)(v301 - 48);
              v873 = *(id *)(v301 - 40);
              v874 = *(double *)(v301 - 32);
              v304 = *v5;
              v305 = *v5 - 24;

              *v5 = v305;
              v306 = *v842;
              LODWORD(v869) = 0;
              v870 = 0;
              if (v305 != v306)
              {
                LODWORD(v869) = *(_DWORD *)(v304 - 48);
                v870 = (_value *)*(id *)(v304 - 40);
                v871 = *(_QWORD *)(v304 - 32);
                v307 = *v5 - 24;

                *v5 = v307;
              }
LABEL_670:
              v615 = TUI::Evaluation::ResolvedValue::floatValue(&v869, (const TUI::Evaluation::Context *)*v2);
              v616 = TUI::Evaluation::ResolvedValue::floatValue((id *)&v872, (const TUI::Evaluation::Context *)*v2);
              v617 = TUI::Evaluation::ResolvedValue::floatValue(&v875, (const TUI::Evaluation::Context *)*v2);
              v618 = +[UIColor colorWithRed:green:blue:alpha:](UIColor, "colorWithRed:green:blue:alpha:", v615, v616, v617, TUI::Evaluation::ResolvedValue::floatValue((id *)v882, (const TUI::Evaluation::Context *)*v2));
              v619 = (id)objc_claimAutoreleasedReturnValue(v618);
              v620 = v619;
              LODWORD(v858) = 11;
              *((_QWORD *)&v858 + 1) = v619;
              v621 = *((_QWORD *)this + 4);
              if (v621 >= *((_QWORD *)this + 5))
              {
                v622 = sub_14D14(v842, (uint64_t)&v858);
              }
              else
              {
                *(_DWORD *)v621 = 11;
                *(_QWORD *)(v621 + 8) = v619;
                *(_QWORD *)(v621 + 16) = v859;
                v622 = v621 + 24;
              }
              *v5 = v622;

              goto LABEL_999;
            }
LABEL_669:
            LODWORD(v869) = 0;
            v870 = 0;
            goto LABEL_670;
          }
        }
        LODWORD(v872) = 0;
        v873 = 0;
        goto LABEL_669;
      case 45:
        v882[0]._kind = 0;
        v882[0]._object = 0;
        v170 = *v5;
        if (*v5 != *v842)
        {
          v882[0]._kind = *(_DWORD *)(v170 - 24);
          v882[0]._object = (_value *)*(id *)(v170 - 16);
          v882[0].var0._integer = *(_QWORD *)(v170 - 8);
          v171 = *v5 - 24;

          *v5 = v171;
        }
        v172 = TUI::Evaluation::ResolvedValue::colorValue((id *)v882, (const TUI::Evaluation::Context *)*v2);
        v173 = (_value *)objc_claimAutoreleasedReturnValue(v172);
        v174 = v173;
        if (v173)
        {
          v175 = v173;
          v176 = 11;
        }
        else
        {
          v176 = 0;
        }
        LODWORD(v875) = v176;
        v876 = v174;
        v474 = *((_QWORD *)this + 4);
        if (v474 >= *((_QWORD *)this + 5))
          goto LABEL_809;
        goto LABEL_887;
      case 46:
        v882[0]._kind = 0;
        v882[0]._object = 0;
        v321 = *v5;
        if (*v5 == *v842)
        {
          LODWORD(v875) = 0;
          v876 = 0;
        }
        else
        {
          v882[0]._kind = *(_DWORD *)(v321 - 24);
          v882[0]._object = (_value *)*(id *)(v321 - 16);
          v882[0].var0._integer = *(_QWORD *)(v321 - 8);
          v322 = *v5;
          v323 = *v5 - 24;

          *v5 = v323;
          v324 = *v842;
          LODWORD(v875) = 0;
          v876 = 0;
          if (v323 != v324)
          {
            LODWORD(v875) = *(_DWORD *)(v322 - 48);
            v876 = (_value *)*(id *)(v322 - 40);
            v877 = *(double *)(v322 - 32);
            v325 = *v5;
            v326 = *v5 - 24;

            *v5 = v326;
            v327 = *v842;
            LODWORD(v872) = 0;
            v873 = 0;
            if (v326 != v327)
            {
              LODWORD(v872) = *(_DWORD *)(v325 - 48);
              v873 = *(id *)(v325 - 40);
              v874 = *(double *)(v325 - 32);
              v328 = *v5;
              v329 = *v5 - 24;

              *v5 = v329;
              v330 = *v842;
              LODWORD(v869) = 0;
              v870 = 0;
              if (v329 != v330)
              {
                LODWORD(v869) = *(_DWORD *)(v328 - 48);
                v870 = (_value *)*(id *)(v328 - 40);
                v871 = *(_QWORD *)(v328 - 32);
                v331 = *v5 - 24;

                *v5 = v331;
                v332 = HIWORD(TUILengthNull);
                if ((_DWORD)v869 == 6)
                {
                  v333 = TUI::Evaluation::ResolvedValue::symbolValue((TUI::Evaluation::ResolvedValue *)&v869, (const TUI::Evaluation::Context *)*v2);
                  v334 = *(unsigned __int16 **)(v841 + 40);
                  v335 = *(_QWORD *)(v841 + 48) - (_QWORD)v334;
                  if (v335 < 0x43)
                    v336 = 0xFFFF;
                  else
                    v336 = v334[33];
                  v740 = HIWORD(TUILengthNull) & 0xFFF8;
                  if (v333 == v336)
                  {
                    v637 = v740 | 4;
                  }
                  else
                  {
                    if (v335 < 0x45)
                      v741 = 0xFFFF;
                    else
                      v741 = v334[34];
                    if (v333 == v741)
                    {
                      v637 = v740 | 5;
                    }
                    else
                    {
                      if (v335 < 0xDF)
                        v798 = 0xFFFF;
                      else
                        v798 = v334[111];
                      if (v333 == v798)
                      {
                        v637 = v740 | 6;
                      }
                      else
                      {
                        if (v335 < 0x41)
                          v799 = 0xFFFF;
                        else
                          v799 = v334[32];
                        if (v333 == v799)
                        {
                          v637 = v740 | 3;
                        }
                        else
                        {
                          v802 = *v2;
                          v803 = TUI::Symbol::Tab::string(*(TUI::Symbol::Tab **)(*v2 + 560), v333);
                          v804 = (void *)objc_claimAutoreleasedReturnValue(v803);
                          v805 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("invalid symbol for length: %@"), v804));
                          TUI::Evaluation::Context::reportError(v802, 1016, v805);
                          v637 = v740 | 2;

                        }
                      }
                    }
                  }
                  v636 = NAN;
                  goto LABEL_977;
                }
LABEL_689:
                v636 = TUI::Evaluation::ResolvedValue::floatValue(&v869, (const TUI::Evaluation::Context *)*v2);
                v637 = v332 | 7;
                if (v636 <= -3.40282347e38)
                {
                  *(float *)&v638 = -3.4028e38;
                }
                else
                {
                  if (v636 < 3.40282347e38)
                  {
LABEL_977:
                    v639 = v636;
LABEL_978:
                    v806 = TUI::Evaluation::ResolvedValue::floatValue((id *)&v872, (const TUI::Evaluation::Context *)*v2);
                    if (v806 <= -3.40282347e38)
                    {
                      *(float *)&v808 = -3.4028e38;
                    }
                    else
                    {
                      if (v806 < 3.40282347e38)
                      {
                        v807 = v806;
                        goto LABEL_984;
                      }
                      *(float *)&v808 = 3.4028e38;
                    }
                    v807 = *(float *)&v808;
LABEL_984:
                    v809 = TUI::Evaluation::ResolvedValue::floatValue(&v875, (const TUI::Evaluation::Context *)*v2);
                    if (v809 <= -3.40282347e38)
                    {
                      *(float *)&v811 = -3.4028e38;
                    }
                    else
                    {
                      if (v809 < 3.40282347e38)
                      {
                        v810 = v809;
LABEL_990:
                        v812 = TUI::Evaluation::ResolvedValue::floatValue((id *)v882, (const TUI::Evaluation::Context *)*v2);
                        if (v812 <= -32768.0)
                        {
                          LOWORD(v813) = 0x8000;
                        }
                        else if (v812 >= 32767.0)
                        {
                          LOWORD(v813) = 0x7FFF;
                        }
                        else
                        {
                          v813 = (int)v812;
                        }
                        v855 = LODWORD(v639) | ((unint64_t)LODWORD(v807) << 32);
                        v856 = (id)(((unint64_t)(unsigned __int16)v813 << 32) | ((unint64_t)(v637 & 0xFFFFFFE7 | 8) << 48) | LODWORD(v810));
                        LODWORD(v858) = 5;
                        *((_QWORD *)&v858 + 1) = 0;
                        v814 = objc_msgSend(objc_alloc((Class)NSData), "initWithBytes:length:", &v855, 16);
                        *((_QWORD *)&v858 + 1) = v814;
                        v815 = *((_QWORD *)this + 4);
                        if (v815 >= *((_QWORD *)this + 5))
                        {
                          v816 = sub_14D14(v842, (uint64_t)&v858);
                        }
                        else
                        {
                          *(_DWORD *)v815 = v858;
                          *(_QWORD *)(v815 + 8) = v814;
                          *(_QWORD *)(v815 + 16) = v859;
                          v816 = v815 + 24;
                        }
                        *v5 = v816;

LABEL_999:
LABEL_1000:

LABEL_1001:
                        goto LABEL_1002;
                      }
                      *(float *)&v811 = 3.4028e38;
                    }
                    v810 = *(float *)&v811;
                    goto LABEL_990;
                  }
                  *(float *)&v638 = 3.4028e38;
                }
                v639 = *(float *)&v638;
                goto LABEL_978;
              }
LABEL_688:
              v332 = HIWORD(TUILengthNull);
              goto LABEL_689;
            }
LABEL_687:
            LODWORD(v869) = 0;
            v870 = 0;
            goto LABEL_688;
          }
        }
        LODWORD(v872) = 0;
        v873 = 0;
        goto LABEL_687;
      case 47:
        v882[0]._kind = 0;
        v882[0]._object = 0;
        v285 = *v5;
        if (*v5 == *v842)
        {
          v287 = HIWORD(TUILengthNull);
        }
        else
        {
          v882[0]._kind = *(_DWORD *)(v285 - 24);
          v882[0]._object = (_value *)*(id *)(v285 - 16);
          v882[0].var0._integer = *(_QWORD *)(v285 - 8);
          v286 = *v5 - 24;

          *v5 = v286;
          v287 = HIWORD(TUILengthNull);
          if (v882[0]._kind == 6)
          {
            v288 = TUI::Evaluation::ResolvedValue::symbolValue((TUI::Evaluation::ResolvedValue *)v882, (const TUI::Evaluation::Context *)*v2);
            v289 = *(unsigned __int16 **)(v841 + 40);
            v290 = *(_QWORD *)(v841 + 48) - (_QWORD)v289;
            if (v290 < 0x43)
              v291 = 0xFFFF;
            else
              v291 = v289[33];
            v712 = HIWORD(TUILengthNull) & 0xFFF8;
            if (v288 == v291)
            {
              v609 = v712 | 4;
            }
            else
            {
              if (v290 < 0x45)
                v713 = 0xFFFF;
              else
                v713 = v289[34];
              if (v288 == v713)
              {
                v609 = v712 | 5;
              }
              else
              {
                if (v290 < 0xDF)
                  v738 = 0xFFFF;
                else
                  v738 = v289[111];
                if (v288 == v738)
                {
                  v609 = v712 | 6;
                }
                else
                {
                  if (v290 < 0x41)
                    v739 = 0xFFFF;
                  else
                    v739 = v289[32];
                  if (v288 == v739)
                  {
                    v609 = v712 | 3;
                  }
                  else
                  {
                    v792 = *v2;
                    v793 = TUI::Symbol::Tab::string(*(TUI::Symbol::Tab **)(*v2 + 560), v288);
                    v794 = (void *)objc_claimAutoreleasedReturnValue(v793);
                    v795 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("invalid symbol for length: %@"), v794));
                    TUI::Evaluation::Context::reportError(v792, 1016, v795);
                    v609 = v712 | 2;

                  }
                }
              }
            }
            v608 = NAN;
LABEL_954:
            *(float *)&v796 = v608;
            v872 = v796 | 0x7FC0000000000000;
            v873 = (id)(((unint64_t)(v609 & 0xFFFFFFE7 | (16 * ((~v609 & 7) == 0))) << 48) | 0x7FC00000);
            LODWORD(v875) = 5;
            v876 = 0;
            v797 = (_value *)objc_msgSend(objc_alloc((Class)NSData), "initWithBytes:length:", &v872, 16);
            v876 = v797;
            v450 = *((_QWORD *)this + 4);
            if (v450 >= *((_QWORD *)this + 5))
            {
LABEL_957:
              v268 = sub_14D14(v842, (uint64_t)&v875);
            }
            else
            {
              *(_DWORD *)v450 = (_DWORD)v875;
              v472 = v797;
LABEL_956:
              *(_QWORD *)(v450 + 8) = v472;
              *(double *)(v450 + 16) = v877;
              v268 = v450 + 24;
            }
LABEL_958:
            *v5 = v268;
            goto LABEL_1001;
          }
        }
        v608 = TUI::Evaluation::ResolvedValue::floatValue((id *)v882, (const TUI::Evaluation::Context *)*v2);
        v609 = v287 | 7;
        goto LABEL_954;
      case 48:
        v880 = v3 + 2;
        v255 = *(_OWORD *)&CGAffineTransformIdentity.c;
        *(_OWORD *)&v882[0]._kind = *(_OWORD *)&CGAffineTransformIdentity.a;
        *(_OWORD *)&v882[0].var0._BOOL = v255;
        *(_OWORD *)&v882[1]._object = *(_OWORD *)&CGAffineTransformIdentity.tx;
        LODWORD(v875) = 13;
        v876 = 0;
        v256 = (_value *)objc_claimAutoreleasedReturnValue(+[NSValue valueWithCGAffineTransform:](NSValue, "valueWithCGAffineTransform:", v882));
        v876 = v256;
        v257 = *((_QWORD *)this + 4);
        if (v257 >= *((_QWORD *)this + 5))
          goto LABEL_522;
        goto LABEL_313;
      case 49:
        LODWORD(v875) = 0;
        v876 = 0;
        v342 = *v5;
        if (*v5 == *v842)
        {
          LODWORD(v872) = 0;
          v873 = 0;
        }
        else
        {
          LODWORD(v875) = *(_DWORD *)(v342 - 24);
          v876 = (_value *)*(id *)(v342 - 16);
          v877 = *(double *)(v342 - 8);
          v343 = *v5;
          v344 = *v5 - 24;

          *v5 = v344;
          v345 = *v842;
          LODWORD(v872) = 0;
          v873 = 0;
          if (v344 != v345)
          {
            LODWORD(v872) = *(_DWORD *)(v343 - 48);
            v873 = *(id *)(v343 - 40);
            v874 = *(double *)(v343 - 32);
            v346 = *v5 - 24;

            *v5 = v346;
          }
        }
        v644 = TUI::Evaluation::ResolvedValue::floatValue((id *)&v872, (const TUI::Evaluation::Context *)*v2);
        v645 = TUI::Evaluation::ResolvedValue::floatValue(&v875, (const TUI::Evaluation::Context *)*v2);
        if (v644 == 0.0)
        {
          v644 = 1.0;
          TUI::Evaluation::Context::reportError(*v2, 1027, 0);
        }
        if (v645 == 0.0)
        {
          v645 = 1.0;
          TUI::Evaluation::Context::reportError(*v2, 1027, 0);
        }
        CGAffineTransformMakeScale(&v854, v644, v645);
        LODWORD(v869) = 13;
        v870 = 0;
        *(CGAffineTransform *)&v882[0]._kind = v854;
        v642 = (_value *)objc_claimAutoreleasedReturnValue(+[NSValue valueWithCGAffineTransform:](NSValue, "valueWithCGAffineTransform:", v882));
        v870 = v642;
        v643 = *((_QWORD *)this + 4);
        if (v643 < *((_QWORD *)this + 5))
          goto LABEL_703;
        goto LABEL_704;
      case 50:
        LODWORD(v875) = 0;
        v876 = 0;
        v177 = *v5;
        if (*v5 != *v842)
        {
          LODWORD(v875) = *(_DWORD *)(v177 - 24);
          v876 = (_value *)*(id *)(v177 - 16);
          v877 = *(double *)(v177 - 8);
          v178 = *v5 - 24;

          *v5 = v178;
        }
        v179 = TUI::Evaluation::ResolvedValue::floatValue(&v875, (const TUI::Evaluation::Context *)*v2);
        CGAffineTransformMakeRotation(&v853, v179 * 3.14159265 / 180.0);
        LODWORD(v872) = 13;
        v873 = 0;
        *(CGAffineTransform *)&v882[0]._kind = v853;
        v180 = (void *)objc_claimAutoreleasedReturnValue(+[NSValue valueWithCGAffineTransform:](NSValue, "valueWithCGAffineTransform:", v882));
        v873 = v180;
        v181 = *((_QWORD *)this + 4);
        if (v181 >= *((_QWORD *)this + 5))
        {
          v182 = sub_14D14(v842, (uint64_t)&v872);
        }
        else
        {
          *(_DWORD *)v181 = v872;
          *(_QWORD *)(v181 + 8) = v180;
          *(double *)(v181 + 16) = v874;
          v182 = v181 + 24;
        }
        *v5 = v182;
        goto LABEL_908;
      case 51:
        LODWORD(v875) = 0;
        v876 = 0;
        v337 = *v5;
        if (*v5 == *v842)
        {
          LODWORD(v872) = 0;
          v873 = 0;
        }
        else
        {
          LODWORD(v875) = *(_DWORD *)(v337 - 24);
          v876 = (_value *)*(id *)(v337 - 16);
          v877 = *(double *)(v337 - 8);
          v338 = *v5;
          v339 = *v5 - 24;

          *v5 = v339;
          v340 = *v842;
          LODWORD(v872) = 0;
          v873 = 0;
          if (v339 != v340)
          {
            LODWORD(v872) = *(_DWORD *)(v338 - 48);
            v873 = *(id *)(v338 - 40);
            v874 = *(double *)(v338 - 32);
            v341 = *v5 - 24;

            *v5 = v341;
          }
        }
        v640 = TUI::Evaluation::ResolvedValue::floatValue((id *)&v872, (const TUI::Evaluation::Context *)*v2);
        v641 = TUI::Evaluation::ResolvedValue::floatValue(&v875, (const TUI::Evaluation::Context *)*v2);
        CGAffineTransformMakeTranslation(&v852, v640, v641);
        LODWORD(v869) = 13;
        v870 = 0;
        *(CGAffineTransform *)&v882[0]._kind = v852;
        v642 = (_value *)objc_claimAutoreleasedReturnValue(+[NSValue valueWithCGAffineTransform:](NSValue, "valueWithCGAffineTransform:", v882));
        v870 = v642;
        v643 = *((_QWORD *)this + 4);
        if (v643 < *((_QWORD *)this + 5))
        {
LABEL_703:
          *(_DWORD *)v643 = (_DWORD)v869;
          *(_QWORD *)(v643 + 8) = v642;
          *(_QWORD *)(v643 + 16) = v871;
          v646 = v643 + 24;
        }
        else
        {
LABEL_704:
          v646 = sub_14D14(v842, (uint64_t)&v869);
        }
        *v5 = v646;
        goto LABEL_706;
      case 52:
        v882[0]._kind = 0;
        v882[0]._object = 0;
        v242 = *v5;
        if (*v5 == *v842)
        {
          LODWORD(v875) = 0;
          v876 = 0;
        }
        else
        {
          v882[0]._kind = *(_DWORD *)(v242 - 24);
          v882[0]._object = (_value *)*(id *)(v242 - 16);
          v882[0].var0._integer = *(_QWORD *)(v242 - 8);
          v243 = *v5;
          v244 = *v5 - 24;

          *v5 = v244;
          v245 = *v842;
          LODWORD(v875) = 0;
          v876 = 0;
          if (v244 != v245)
          {
            LODWORD(v875) = *(_DWORD *)(v243 - 48);
            v876 = (_value *)*(id *)(v243 - 40);
            v877 = *(double *)(v243 - 32);
            v246 = *v5;
            v247 = *v5 - 24;

            *v5 = v247;
            v248 = *v842;
            LODWORD(v872) = 0;
            v873 = 0;
            if (v247 != v248)
            {
              LODWORD(v872) = *(_DWORD *)(v246 - 48);
              v873 = *(id *)(v246 - 40);
              v874 = *(double *)(v246 - 32);
              v249 = *v5 - 24;

              *v5 = v249;
            }
LABEL_639:
            v858 = unk_22F520;
            v593 = TUI::Evaluation::ResolvedValue::floatValue((id *)&v872, (const TUI::Evaluation::Context *)*v2);
            v594 = TUI::Evaluation::ResolvedValue::floatValue(&v875, (const TUI::Evaluation::Context *)*v2);
            v595 = TUI::Evaluation::ResolvedValue::floatValue((id *)v882, (const TUI::Evaluation::Context *)*v2);
            *(double *)v850 = v593;
            *(double *)&v850[1] = v594;
            *(double *)&v850[2] = v595;
            v851 = v858;
            LODWORD(v869) = 14;
            v870 = 0;
            v596 = (_value *)objc_msgSend(objc_alloc((Class)NSData), "initWithBytes:length:", v850, 40);
            v870 = v596;
            v597 = *((_QWORD *)this + 4);
            if (v597 >= *((_QWORD *)this + 5))
            {
              v598 = sub_14D14(v842, (uint64_t)&v869);
            }
            else
            {
              *(_DWORD *)v597 = (_DWORD)v869;
              *(_QWORD *)(v597 + 8) = v596;
              *(_QWORD *)(v597 + 16) = v871;
              v598 = v597 + 24;
            }
            *v5 = v598;
            goto LABEL_999;
          }
        }
        LODWORD(v872) = 0;
        v873 = 0;
        goto LABEL_639;
      case 53:
        v882[0]._kind = 0;
        v882[0]._object = 0;
        v313 = *v5;
        if (*v5 != *v842)
        {
          v882[0]._kind = *(_DWORD *)(v313 - 24);
          v882[0]._object = (_value *)*(id *)(v313 - 16);
          v882[0].var0._integer = *(_QWORD *)(v313 - 8);
          v314 = *v5 - 24;

          *v5 = v314;
          v7 = v880;
          v4 = v881;
        }
        if (v7 >= v4)
          v315 = 0xFFFFLL;
        else
          v315 = *(unsigned __int16 *)(v879 + 2 * v7);
        v880 = v7 + 1;
        v473 = +[TUIGuideSpec columnWithIndex:edge:](TUIGuideSpec, "columnWithIndex:edge:", TUI::Evaluation::ResolvedValue::integerValue((TUI::Evaluation::ResolvedValue *)v882, (const TUI::Evaluation::Context *)*v2), v315);
        v174 = (_value *)(id)objc_claimAutoreleasedReturnValue(v473);
        v176 = 10;
        LODWORD(v875) = 10;
        v876 = v174;
        v474 = *((_QWORD *)this + 4);
        if (v474 >= *((_QWORD *)this + 5))
          goto LABEL_809;
        goto LABEL_887;
      case 54:
        if (v7 >= v4)
          v308 = 0xFFFFLL;
        else
          v308 = *(unsigned __int16 *)(v879 + 2 * v7);
        v880 = v3 + 2;
        v39 = (_value *)(id)objc_claimAutoreleasedReturnValue(+[TUIGuideSpec gridWithEdge:](TUIGuideSpec, "gridWithEdge:", v308));
        v103 = 10;
        v882[0]._kind = 10;
        v882[0]._object = v39;
        v104 = *((_QWORD *)this + 4);
        if (v104 >= *((_QWORD *)this + 5))
          goto LABEL_759;
        goto LABEL_815;
      case 55:
        if (v7 >= v4)
          v279 = 0xFFFFLL;
        else
          v279 = *(unsigned __int16 *)(v879 + 2 * v7);
        v880 = v3 + 2;
        v39 = (_value *)(id)objc_claimAutoreleasedReturnValue(+[TUIGuideSpec contentWithEdge:](TUIGuideSpec, "contentWithEdge:", v279));
        v103 = 10;
        v882[0]._kind = 10;
        v882[0]._object = v39;
        v104 = *((_QWORD *)this + 4);
        if (v104 >= *((_QWORD *)this + 5))
          goto LABEL_759;
        goto LABEL_815;
      case 56:
        if (v7 >= v4)
          v149 = 0xFFFFLL;
        else
          v149 = *(unsigned __int16 *)(v879 + 2 * v7);
        v880 = v3 + 2;
        v39 = (_value *)(id)objc_claimAutoreleasedReturnValue(+[TUIGuideSpec named:](TUIGuideSpec, "named:", v149));
        v103 = 10;
        v882[0]._kind = 10;
        v882[0]._object = v39;
        v104 = *((_QWORD *)this + 4);
        if (v104 >= *((_QWORD *)this + 5))
          goto LABEL_759;
        goto LABEL_815;
      case 57:
        v39 = (_value *)(id)objc_claimAutoreleasedReturnValue(+[TUIGuideSpec unbound](TUIGuideSpec, "unbound"));
        v103 = 10;
        v882[0]._kind = 10;
        v882[0]._object = v39;
        v104 = *((_QWORD *)this + 4);
        if (v104 >= *((_QWORD *)this + 5))
          goto LABEL_759;
        goto LABEL_815;
      case 58:
        v141 = 16;
        v882[0]._kind = 16;
        v882[0]._object = 0;
        v142 = *((_QWORD *)this + 4);
        if (v142 >= *((_QWORD *)this + 5))
          goto LABEL_787;
        goto LABEL_790;
      case 59:
        v882[0]._kind = 0;
        v882[0]._object = 0;
        v360 = *v5;
        if (*v5 != *v842)
        {
          v882[0]._kind = *(_DWORD *)(v360 - 24);
          v882[0]._object = (_value *)*(id *)(v360 - 16);
          v882[0].var0._integer = *(_QWORD *)(v360 - 8);
          v361 = *v5 - 24;

          *v5 = v361;
        }
        v362 = TUI::Evaluation::ResolvedValue::objectValue((TUI::Evaluation::ResolvedValue *)v882, (const TUI::Evaluation::Context *)*v2);
        v174 = (_value *)objc_claimAutoreleasedReturnValue(v362);
        v363 = 12;
        LODWORD(v875) = 12;
        v876 = 0;
        LOBYTE(v877) = v174 != 0;
        v364 = *((_QWORD *)this + 4);
        if (v364 >= *((_QWORD *)this + 5))
          goto LABEL_809;
        goto LABEL_798;
      case 60:
        v882[0]._kind = 0;
        v882[0]._object = 0;
        v250 = *v5;
        if (*v5 != *v842)
        {
          v882[0]._kind = *(_DWORD *)(v250 - 24);
          v882[0]._object = (_value *)*(id *)(v250 - 16);
          v882[0].var0._integer = *(_QWORD *)(v250 - 8);
          v251 = *v5 - 24;

          *v5 = v251;
        }
        v252 = TUI::Evaluation::ResolvedValue::objectValue((TUI::Evaluation::ResolvedValue *)v882, (const TUI::Evaluation::Context *)*v2);
        v253 = objc_claimAutoreleasedReturnValue(v252);
        v174 = (_value *)v253;
        if (v253)
        {
          if ((objc_opt_respondsToSelector(v253, "count") & 1) != 0)
          {
            v254 = -[_value count](v174, "count");
          }
          else
          {
            TUI::Evaluation::Context::reportError(*v2, 1000, 0);
            v254 = 0;
          }
        }
        else
        {
          v254 = 0;
        }
        v363 = 1;
        LODWORD(v875) = 1;
        v876 = 0;
        v877 = (double)(unint64_t)v254;
        v364 = *((_QWORD *)this + 4);
        if (v364 >= *((_QWORD *)this + 5))
          goto LABEL_809;
LABEL_798:
        *(_DWORD *)v364 = v363;
        *(_QWORD *)(v364 + 8) = 0;
        *(double *)(v364 + 16) = v877;
        v701 = v364 + 24;
        goto LABEL_888;
      case 61:
        v882[0]._kind = 0;
        v882[0]._object = 0;
        v269 = *v5;
        if (*v5 == *v842)
        {
          LODWORD(v875) = 0;
          v876 = 0;
        }
        else
        {
          v882[0]._kind = *(_DWORD *)(v269 - 24);
          v882[0]._object = (_value *)*(id *)(v269 - 16);
          v882[0].var0._integer = *(_QWORD *)(v269 - 8);
          v270 = *v5;
          v271 = *v5 - 24;

          *v5 = v271;
          v272 = *v842;
          LODWORD(v875) = 0;
          v876 = 0;
          if (v271 != v272)
          {
            LODWORD(v875) = *(_DWORD *)(v270 - 48);
            v876 = (_value *)*(id *)(v270 - 40);
            v877 = *(double *)(v270 - 32);
            v273 = *v5 - 24;

            *v5 = v273;
          }
        }
        v599 = TUI::Evaluation::ResolvedValue::objectValue((TUI::Evaluation::ResolvedValue *)&v875, (const TUI::Evaluation::Context *)*v2);
        v600 = (__CFString *)objc_claimAutoreleasedReturnValue(v599);
        if (-[__CFString conformsToProtocol:](v600, "conformsToProtocol:", &OBJC_PROTOCOL___TUIIndexedSubscripting))
        {
          if (TUI::Evaluation::ResolvedValue::isConvertibleToKind((TUI::Evaluation::ResolvedValue *)v882, 1, (TUI::Evaluation::Context *)*v2))
          {
            v601 = -[__CFString tui_objectAtIndex:](v600, "tui_objectAtIndex:", (uint64_t)TUI::Evaluation::ResolvedValue::floatValue((id *)v882, (const TUI::Evaluation::Context *)*v2));
            v602 = (void *)objc_claimAutoreleasedReturnValue(v601);
          }
          else
          {
            TUI::Evaluation::Context::reportError(*v2, 1000, 0);
            v602 = 0;
          }
        }
        else if (-[__CFString conformsToProtocol:](v600, "conformsToProtocol:", &OBJC_PROTOCOL___TUIKeyedSubscripting))
        {
          v603 = (const TUI::Evaluation::Context *)*v2;
          if (v882[0]._kind == 1)
            v604 = +[NSNumber numberWithInteger:](NSNumber, "numberWithInteger:", (uint64_t)TUI::Evaluation::ResolvedValue::floatValue((id *)v882, v603));
          else
            v604 = (NSNumber *)TUI::Evaluation::ResolvedValue::objectValue((TUI::Evaluation::ResolvedValue *)v882, v603);
          v726 = (void *)objc_claimAutoreleasedReturnValue(v604);
          if (v726)
            v602 = (void *)objc_claimAutoreleasedReturnValue(-[__CFString tui_objectForKey:](v600, "tui_objectForKey:", v726));
          else
            v602 = 0;

        }
        else
        {
          v602 = 0;
        }
        v735 = v602;
        v631 = v735;
        LODWORD(v872) = 16;
        v873 = v735;
        v736 = *((_QWORD *)this + 4);
        if (v736 >= *((_QWORD *)this + 5))
        {
          v737 = sub_14D14(v842, (uint64_t)&v872);
        }
        else
        {
          *(_DWORD *)v736 = 16;
          *(_QWORD *)(v736 + 8) = v735;
          *(double *)(v736 + 16) = v874;
          v737 = v736 + 24;
        }
        *v5 = v737;

        goto LABEL_897;
      case 62:
        v882[0]._kind = 0;
        v882[0]._object = 0;
        v192 = *v5;
        if (*v5 == *v842)
        {
          LODWORD(v875) = 0;
          v876 = 0;
        }
        else
        {
          v882[0]._kind = *(_DWORD *)(v192 - 24);
          v882[0]._object = (_value *)*(id *)(v192 - 16);
          v882[0].var0._integer = *(_QWORD *)(v192 - 8);
          v193 = *v5;
          v194 = *v5 - 24;

          *v5 = v194;
          v195 = *v842;
          LODWORD(v875) = 0;
          v876 = 0;
          if (v194 != v195)
          {
            LODWORD(v875) = *(_DWORD *)(v193 - 48);
            v876 = (_value *)*(id *)(v193 - 40);
            v877 = *(double *)(v193 - 32);
            v196 = *v5;
            v197 = *v5 - 24;

            *v5 = v197;
            v198 = *v842;
            LODWORD(v872) = 0;
            v873 = 0;
            if (v197 != v198)
            {
              LODWORD(v872) = *(_DWORD *)(v196 - 48);
              v873 = *(id *)(v196 - 40);
              v874 = *(double *)(v196 - 32);
              v199 = *v5 - 24;

              *v5 = v199;
            }
LABEL_593:
            v550 = TUI::Evaluation::ResolvedValue::objectValue((TUI::Evaluation::ResolvedValue *)&v872, (const TUI::Evaluation::Context *)*v2);
            v551 = (void *)objc_claimAutoreleasedReturnValue(v550);
            if (objc_msgSend(v551, "conformsToProtocol:", &OBJC_PROTOCOL___TUIIndexedSubscripting))
            {
              v552 = TUI::Evaluation::ResolvedValue::floatValue(&v875, (const TUI::Evaluation::Context *)*v2);
              v553 = objc_msgSend(v551, "tui_subarrayWithStart:end:", (uint64_t)v552, (uint64_t)TUI::Evaluation::ResolvedValue::floatValue((id *)v882, (const TUI::Evaluation::Context *)*v2));
              v554 = (void *)objc_claimAutoreleasedReturnValue(v553);
            }
            else
            {
              v554 = 0;
            }
            v555 = v554;
            v556 = v555;
            LODWORD(v869) = 16;
            v870 = (_value *)v555;
            v557 = *((_QWORD *)this + 4);
            if (v557 >= *((_QWORD *)this + 5))
            {
              v558 = sub_14D14(v842, (uint64_t)&v869);
            }
            else
            {
              *(_DWORD *)v557 = 16;
              *(_QWORD *)(v557 + 8) = v555;
              *(_QWORD *)(v557 + 16) = v871;
              v558 = v557 + 24;
            }
            *v5 = v558;

            goto LABEL_1000;
          }
        }
        LODWORD(v872) = 0;
        v873 = 0;
        goto LABEL_593;
      case 63:
        if (v7 >= v4)
          v55 = 0xFFFFLL;
        else
          v55 = *(unsigned __int16 *)(v879 + 2 * v7);
        if (v3 + 2 >= v4)
          v409 = -65536;
        else
          v409 = *(unsigned __int16 *)(v879 + 2 * (v3 + 2)) << 16;
        v880 = v3 + 3;
        v833 = v55 | v833 & 0xFFFFFFFF00000000 | v409 & 0xFFFF0000;
        v411 = TUI::Evaluation::Context::objectForBinding((id *)*v2, v55 | v409 & 0xFFFF0000);
        v39 = (_value *)(id)objc_claimAutoreleasedReturnValue(v411);
        v103 = 16;
        v882[0]._kind = 16;
        v882[0]._object = v39;
        v104 = *((_QWORD *)this + 4);
        if (v104 >= *((_QWORD *)this + 5))
          goto LABEL_759;
        goto LABEL_815;
      case 64:
        if (v7 >= v4)
          v54 = 0xFFFFLL;
        else
          v54 = *(unsigned __int16 *)(v879 + 2 * v7);
        if (v3 + 2 >= v4)
          v403 = -65536;
        else
          v403 = *(unsigned __int16 *)(v879 + 2 * (v3 + 2)) << 16;
        v880 = v3 + 3;
        v404 = v403 & 0xFFFF0000 | (unint64_t)v54;
        v834 = v404 | v834 & 0xFFFFFFFF00000000;
        v405 = TUI::Evaluation::Context::enumeratorStateForBinding((TUI::Evaluation::Context *)*v2, v403 & 0xFFFF0000 | v54);
        if (!v405)
        {
          v655 = *v2;
          v825 = v404 | v825 & 0xFFFFFFFF00000000;
          v656 = TUI::Symbol::Tab::string(*(TUI::Symbol::Tab **)(*v2 + 560), v825);
          v408 = (void *)objc_claimAutoreleasedReturnValue(v656);
          TUI::Evaluation::Context::reportError(v655, 1010, v408);
          goto LABEL_716;
        }
        if (*(_QWORD *)(v405 + 16) == 0x7FFFFFFFFFFFFFFFLL)
        {
          v406 = *v2;
          v822 = v404 | v822 & 0xFFFFFFFF00000000;
          v407 = TUI::Symbol::Tab::string(*(TUI::Symbol::Tab **)(*v2 + 560), v822);
          v408 = (void *)objc_claimAutoreleasedReturnValue(v407);
          TUI::Evaluation::Context::reportError(v406, 1035, v408);
LABEL_716:

          v657 = 0;
          goto LABEL_783;
        }
        *(_BYTE *)(v405 + 40) |= 1u;
        v657 = *(_BYTE *)(v405 + 8) & 1;
LABEL_783:
        v141 = 12;
        v882[0]._kind = 12;
        v882[0]._object = 0;
        v882[0].var0._BOOL = v657;
        v142 = *((_QWORD *)this + 4);
        if (v142 >= *((_QWORD *)this + 5))
          goto LABEL_787;
        goto LABEL_790;
      case 65:
        if (v7 >= v4)
          v309 = 0xFFFFLL;
        else
          v309 = *(unsigned __int16 *)(v879 + 2 * v7);
        if (v3 + 2 >= v4)
          v466 = -65536;
        else
          v466 = *(unsigned __int16 *)(v879 + 2 * (v3 + 2)) << 16;
        v880 = v3 + 3;
        v467 = v466 & 0xFFFF0000 | (unint64_t)v309;
        v835 = v467 | v835 & 0xFFFFFFFF00000000;
        v468 = TUI::Evaluation::Context::enumeratorStateForBinding((TUI::Evaluation::Context *)*v2, v466 & 0xFFFF0000 | v309);
        if (!v468)
        {
          v668 = *v2;
          v826 = v467 | v826 & 0xFFFFFFFF00000000;
          v669 = TUI::Symbol::Tab::string(*(TUI::Symbol::Tab **)(*v2 + 560), v826);
          v471 = (void *)objc_claimAutoreleasedReturnValue(v669);
          TUI::Evaluation::Context::reportError(v668, 1010, v471);
          goto LABEL_733;
        }
        if (*(_QWORD *)(v468 + 16) == 0x7FFFFFFFFFFFFFFFLL)
        {
          v469 = *v2;
          v823 = v467 | v823 & 0xFFFFFFFF00000000;
          v470 = TUI::Symbol::Tab::string(*(TUI::Symbol::Tab **)(*v2 + 560), v823);
          v471 = (void *)objc_claimAutoreleasedReturnValue(v470);
          TUI::Evaluation::Context::reportError(v469, 1035, v471);
LABEL_733:

          LOBYTE(v670) = 0;
          goto LABEL_789;
        }
        *(_BYTE *)(v468 + 40) |= 2u;
        v670 = (*(unsigned __int8 *)(v468 + 8) >> 1) & 1;
LABEL_789:
        v141 = 12;
        v882[0]._kind = 12;
        v882[0]._object = 0;
        v882[0].var0._BOOL = v670;
        v142 = *((_QWORD *)this + 4);
        if (v142 < *((_QWORD *)this + 5))
          goto LABEL_790;
        goto LABEL_787;
      case 66:
        if (v7 >= v4)
          v200 = 0xFFFFLL;
        else
          v200 = *(unsigned __int16 *)(v879 + 2 * v7);
        if (v3 + 2 >= v4)
          v453 = -65536;
        else
          v453 = *(unsigned __int16 *)(v879 + 2 * (v3 + 2)) << 16;
        v880 = v3 + 3;
        v458 = v453 & 0xFFFF0000 | (unint64_t)v200;
        v836 = v458 | v836 & 0xFFFFFFFF00000000;
        v459 = TUI::Evaluation::Context::enumeratorStateForBinding((TUI::Evaluation::Context *)*v2, v453 & 0xFFFF0000 | v200);
        if (!v459)
        {
          v664 = *v2;
          v827 = v458 | v827 & 0xFFFFFFFF00000000;
          v665 = TUI::Symbol::Tab::string(*(TUI::Symbol::Tab **)(*v2 + 560), v827);
          v463 = (void *)objc_claimAutoreleasedReturnValue(v665);
          TUI::Evaluation::Context::reportError(v664, 1010, v463);
          goto LABEL_728;
        }
        v460 = *(_QWORD *)(v459 + 16);
        if (v460 == 0x7FFFFFFFFFFFFFFFLL)
        {
          v461 = *v2;
          v824 = v458 | v824 & 0xFFFFFFFF00000000;
          v462 = TUI::Symbol::Tab::string(*(TUI::Symbol::Tab **)(*v2 + 560), v824);
          v463 = (void *)objc_claimAutoreleasedReturnValue(v462);
          TUI::Evaluation::Context::reportError(v461, 1035, v463);
LABEL_728:

          v460 = 0x7FFFFFFFFFFFFFFFLL;
          goto LABEL_786;
        }
        *(_BYTE *)(v459 + 40) |= 4u;
LABEL_786:
        v141 = 2;
        v882[0]._kind = 2;
        v882[0]._object = 0;
        v882[0].var0._integer = v460;
        v142 = *((_QWORD *)this + 4);
        if (v142 >= *((_QWORD *)this + 5))
        {
LABEL_787:
          v151 = sub_14D14(v842, (uint64_t)v882);
LABEL_792:
          *v5 = v151;
LABEL_1002:
          v663 = v882[0]._object;
LABEL_1003:

          goto LABEL_1004;
        }
LABEL_790:
        *(_DWORD *)v142 = v141;
        goto LABEL_791;
      case 67:
        if (v7 >= v4)
          v68 = 0xFFFFLL;
        else
          v68 = *(unsigned __int16 *)(v879 + 2 * v7);
        if (v3 + 2 >= v4)
          v416 = -65536;
        else
          v416 = *(unsigned __int16 *)(v879 + 2 * (v3 + 2)) << 16;
        v880 = v3 + 3;
        v423 = v416 & 0xFFFF0000 | (unint64_t)v68;
        v837 = v423 | v837 & 0xFFFFFFFF00000000;
        v424 = TUI::Evaluation::Context::enumeratorStateForBinding((TUI::Evaluation::Context *)*v2, v416 & 0xFFFF0000 | v68);
        if (v424)
        {
          v425 = *(void **)(v424 + 24);
          if (v425)
          {
            v426 = v425;
            goto LABEL_814;
          }
          v707 = *v2;
          v819 = v423 | v819 & 0xFFFFFFFF00000000;
          v708 = TUI::Symbol::Tab::string(*(TUI::Symbol::Tab **)(*v2 + 560), v819);
          v660 = (void *)objc_claimAutoreleasedReturnValue(v708);
          TUI::Evaluation::Context::reportError(v707, 1036, v660);
        }
        else
        {
          v658 = *v2;
          v828 = v423 | v828 & 0xFFFFFFFF00000000;
          v659 = TUI::Symbol::Tab::string(*(TUI::Symbol::Tab **)(*v2 + 560), v828);
          v660 = (void *)objc_claimAutoreleasedReturnValue(v659);
          TUI::Evaluation::Context::reportError(v658, 1010, v660);
        }

        v426 = 0;
LABEL_814:
        v39 = (_value *)v426;
        v103 = 16;
        v882[0]._kind = 16;
        v882[0]._object = v39;
        v104 = *((_QWORD *)this + 4);
        if (v104 >= *((_QWORD *)this + 5))
        {
LABEL_759:
          v689 = sub_14D14(v842, (uint64_t)v882);
        }
        else
        {
LABEL_815:
          *(_DWORD *)v104 = v103;
          *(_QWORD *)(v104 + 8) = v39;
          *(_QWORD *)(v104 + 16) = v882[0].var0._integer;
          v689 = v104 + 24;
        }
        *v5 = v689;
        v511 = v882[0]._object;
LABEL_817:

LABEL_857:
        goto LABEL_1004;
      case 68:
        if (v7 >= v4)
          v92 = 0xFFFFLL;
        else
          v92 = *(unsigned __int16 *)(v879 + 2 * v7);
        if (v3 + 2 >= v4)
          v427 = -65536;
        else
          v427 = *(unsigned __int16 *)(v879 + 2 * (v3 + 2)) << 16;
        v880 = v3 + 3;
        v838 = v92 | v838 & 0xFFFFFFFF00000000 | v427 & 0xFFFF0000;
        v428 = TUI::Evaluation::Context::lookupNamedElement((id *)*v2, v92 | v427 & 0xFFFF0000);
        v430 = v429;
        if (v429 == -1)
        {
          v431 = 0;
          v432 = 0;
        }
        else
        {
          v431 = -[_TUIElementWithClosure initWithRef:context:]([_TUIElementWithClosure alloc], "initWithRef:context:", v428, v429, *v2);
          v432 = 15;
          v821 = v431;
        }
        v882[0]._kind = v432;
        v882[0]._object = (_value *)v431;
        v661 = *((_QWORD *)this + 4);
        if (v661 >= *((_QWORD *)this + 5))
        {
          v662 = sub_14D14(v842, (uint64_t)v882);
        }
        else
        {
          *(_DWORD *)v661 = v432;
          *(_QWORD *)(v661 + 8) = v431;
          *(_QWORD *)(v661 + 16) = v882[0].var0._integer;
          v662 = v661 + 24;
        }
        *v5 = v662;

        if (v430 == -1)
          goto LABEL_1004;
        v663 = (_value *)v821;
        goto LABEL_1003;
      case 69:
        if (v7 >= v4)
          v131 = 0xFFFFLL;
        else
          v131 = *(unsigned __int16 *)(v879 + 2 * v7);
        if (v3 + 2 >= v4)
          v435 = -65536;
        else
          v435 = *(unsigned __int16 *)(v879 + 2 * (v3 + 2)) << 16;
        v880 = v3 + 3;
        v839 = v131 | v839 & 0xFFFFFFFF00000000 | v435 & 0xFFFF0000;
        TUI::Evaluation::Context::lookupNamedElement((id *)*v2, v131 | v435 & 0xFFFF0000);
        v141 = 12;
        v882[0]._kind = 12;
        v882[0]._object = 0;
        v882[0].var0._BOOL = v437 != -1;
        v142 = *((_QWORD *)this + 4);
        if (v142 >= *((_QWORD *)this + 5))
          goto LABEL_787;
        goto LABEL_790;
      case 70:
        v880 = v3 + 3;
        goto LABEL_1004;
      case 71:
        v880 = v3 + 2;
        TUI::Evaluation::Context::beginScope((TUI::Evaluation::Context *)*v2);
        goto LABEL_1004;
      case 72:
        TUI::Evaluation::Context::endScope((TUI::Evaluation::Context *)*v2);
        goto LABEL_1004;
      case 73:
        if (v7 >= v4)
          v382 = 0xFFFFLL;
        else
          v382 = *(unsigned __int16 *)(v879 + 2 * v7);
        if (v3 + 2 >= v4)
          v480 = -65536;
        else
          v480 = *(unsigned __int16 *)(v879 + 2 * (v3 + 2)) << 16;
        v880 = v3 + 3;
        v832 = v382 | v832 & 0xFFFFFFFF00000000 | v480 & 0xFFFF0000;
        v481 = TUI::Evaluation::Context::lookupFunction((TUI::Evaluation::Context *)*v2, v382 | v480 & 0xFFFF0000);
        if (v482 == -1)
        {
          TUI::Evaluation::Context::reportError(*v2, 1008, 0);
          v882[0]._kind = 0;
          v882[0]._object = 0;
          v142 = *((_QWORD *)this + 4);
          if (v142 >= *((_QWORD *)this + 5))
            goto LABEL_787;
LABEL_739:
          *(_DWORD *)v142 = 0;
LABEL_791:
          *(_QWORD *)(v142 + 8) = 0;
          *(_QWORD *)(v142 + 16) = v882[0].var0._integer;
          v151 = v142 + 24;
          goto LABEL_792;
        }
        v483 = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v481 + 40))(v481, v482);
        TUI::Evaluation::Context::pushClosure((_QWORD *)*v2);
        if (!TUIDefinitionNotNil(v483))
          goto LABEL_861;
        v484 = *(_QWORD *)(*v2 + 576);
        if (*(_QWORD *)(v484 + 184) <= (unint64_t)v483)
        {
          v485 = 0;
        }
        else
        {
          v485 = *(_QWORD *)(v484 + 176) + 12 * v483;
          if (v485)
          {
            v486 = *(unsigned int *)(v485 + 8);
            v485 = (unint64_t)*(unsigned __int16 *)(v485 + 6) << 32;
LABEL_860:
            TUI::Evaluation::Context::evaluateParams((TUI::Evaluation::Context *)*v2, v486 | v485);
LABEL_861:
            if (TUIValueNotNil(SHIDWORD(v483)))
            {
              TUI::Instruction::Evaluation::evaluate((uint64_t *)&v882[0]._kind, this, (TUI::Instruction::Decoder *)HIDWORD(v483));
              v718 = *((_QWORD *)this + 4);
              if (v718 >= *((_QWORD *)this + 5))
              {
                v719 = sub_14D14(v842, (uint64_t)v882);
              }
              else
              {
                *(_DWORD *)v718 = v882[0]._kind;
                *(_QWORD *)(v718 + 8) = v882[0]._object;
                *(_QWORD *)(v718 + 16) = v882[0].var0._integer;
                v719 = v718 + 24;
              }
              *v5 = v719;

            }
            else
            {
              v882[0]._kind = 0;
              v882[0]._object = 0;
              v720 = *((_QWORD *)this + 4);
              if (v720 >= *((_QWORD *)this + 5))
              {
                v721 = sub_14D14(v842, (uint64_t)v882);
              }
              else
              {
                *(_DWORD *)v720 = 0;
                *(_QWORD *)(v720 + 8) = 0;
                *(_QWORD *)(v720 + 16) = v882[0].var0._integer;
                v721 = v720 + 24;
              }
              *v5 = v721;

              TUI::Evaluation::Context::reportError(*v2, 1005, 0);
            }
            TUI::Evaluation::Context::popClosure((TUI::Evaluation::Context *)*v2);
            goto LABEL_1004;
          }
        }
        v486 = 0xFFFFFFFFLL;
        goto LABEL_860;
      case 74:
        if (v7 >= v4)
          v56 = 0xFFFFLL;
        else
          v56 = *(unsigned __int16 *)(v879 + 2 * v7);
        if (v3 + 2 >= v4)
          v410 = -65536;
        else
          v410 = *(unsigned __int16 *)(v879 + 2 * (v3 + 2)) << 16;
        v412 = v840;
        v880 = v3 + 3;
        v882[0]._kind = 0;
        v882[0]._object = 0;
        v413 = *v5;
        if (*v5 != *v842)
        {
          v882[0]._kind = *(_DWORD *)(v413 - 24);
          v882[0]._object = (_value *)*(id *)(v413 - 16);
          v882[0].var0._integer = *(_QWORD *)(v413 - 8);
          v414 = *v5 - 24;

          v412 = v840;
          *v5 = v414;
        }
        v840 = v56 | v412 & 0xFFFFFFFF00000000 | v410 & 0xFFFF0000;
        TUI::Evaluation::Context::pushConstant((TUI::Evaluation::Context *)*v2, v56 | v410 & 0xFFFF0000, v882);
        goto LABEL_1002;
      case 75:
        if (v7 >= v4)
          v67 = 0xFFFFLL;
        else
          v67 = *(unsigned __int16 *)(v879 + 2 * v7);
        if (v3 + 2 >= v4)
          v415 = -65536;
        else
          v415 = *(unsigned __int16 *)(v879 + 2 * (v3 + 2)) << 16;
        v880 = v3 + 3;
        v882[0]._kind = 0;
        v882[0]._object = 0;
        v417 = *v5;
        if (*v5 != *v842)
        {
          v882[0]._kind = *(_DWORD *)(v417 - 24);
          v882[0]._object = (_value *)*(id *)(v417 - 16);
          v882[0].var0._integer = *(_QWORD *)(v417 - 8);
          v418 = *v5 - 24;

          *v5 = v418;
        }
        v419 = (TUI::Evaluation::Context *)*v2;
        v420 = TUI::Evaluation::ResolvedValue::objectValue((TUI::Evaluation::ResolvedValue *)v882, (const TUI::Evaluation::Context *)*v2);
        v421 = (objc_object *)objc_claimAutoreleasedReturnValue(v420);
        v422 = (Entry)(v67 | v415 & 0xFFFF0000);
        v829 = v67 | v829 & 0xFFFFFFFF00000000 | v415 & 0xFFFF0000;
        TUI::Evaluation::Context::pushBinding(v419, v422, v421);

        goto LABEL_1002;
      case 76:
        if (v7 >= v4)
          v53 = 0xFFFF;
        else
          v53 = *(unsigned __int16 *)(v879 + 2 * v7);
        if (v3 + 2 >= v4)
          v394 = -65536;
        else
          v394 = *(unsigned __int16 *)(v879 + 2 * (v3 + 2)) << 16;
        v880 = v3 + 3;
        v882[0]._kind = 0;
        v882[0]._object = 0;
        v395 = *v5;
        if (*v5 != *v842)
        {
          v882[0]._kind = *(_DWORD *)(v395 - 24);
          v882[0]._object = (_value *)*(id *)(v395 - 16);
          v882[0].var0._integer = *(_QWORD *)(v395 - 8);
          v396 = *v5 - 24;

          *v5 = v396;
        }
        v397 = TUI::Evaluation::ResolvedValue::elementValue((id *)v882, (const TUI::Evaluation::Context *)*v2);
        v174 = (_value *)objc_claimAutoreleasedReturnValue(v397);
        v398 = (void *)objc_claimAutoreleasedReturnValue(-[_value parsedElement](v174, "parsedElement"));
        v399 = v394 | v53;

        v400 = (_QWORD *)*v2;
        if (v398)
        {
          v401 = TUIClosureNil;
          v402 = (id)objc_claimAutoreleasedReturnValue(-[_value parsedElement](v174, "parsedElement"));
          v875 = v402;
          LODWORD(v876) = TUIElementNodeNil;
          v820 = v820 & 0xFFFFFFFF00000000 | v399;
          TUI::Evaluation::Context::pushNamedElement(v400, v399, v401, (uint64_t)&v875);

        }
        else
        {
          if (v174)
          {
            -[_value closureAndCapture](v174, "closureAndCapture");
          }
          else
          {
            v845[0] = 0;
            v845[1] = 0;
            v846 = 0;
          }
          v722 = -[_value node](v174, "node");
          v875 = 0;
          LODWORD(v876) = v722;
          v818 = v818 & 0xFFFFFFFF00000000 | v399;
          TUI::Evaluation::Context::pushNamedElement(v400, v399, (int *)v845, (uint64_t)&v875);

          v723 = v846;
          if (v846)
          {
            p_shared_owners = (unint64_t *)&v846->__shared_owners_;
            do
              v725 = __ldaxr(p_shared_owners);
            while (__stlxr(v725 - 1, p_shared_owners));
            if (!v725)
            {
              ((void (*)(std::__shared_weak_count *))v723->__on_zero_shared)(v723);
              std::__shared_weak_count::__release_weak(v723);
            }
          }
        }
        goto LABEL_889;
      case 77:
        v133 = 1;
        v882[0]._kind = 1;
        v882[0]._object = 0;
        v882[0].var0._integer = 0x7FEFFFFFFFFFFFFFLL;
        v134 = *((_QWORD *)this + 4);
        if (v134 >= *((_QWORD *)this + 5))
          goto LABEL_787;
LABEL_143:
        *(_DWORD *)v134 = v133;
        *(_QWORD *)(v134 + 8) = 0;
        *(_QWORD *)(v134 + 16) = v882[0].var0._integer;
        v151 = v134 + 24;
        goto LABEL_792;
      case 78:
        v380 = *(_OWORD *)&CGAffineTransformIdentity.c;
        *(_OWORD *)&v882[0]._kind = *(_OWORD *)&CGAffineTransformIdentity.a;
        *(_OWORD *)&v882[0].var0._BOOL = v380;
        *(_OWORD *)&v882[1]._object = *(_OWORD *)&CGAffineTransformIdentity.tx;
        LODWORD(v875) = 13;
        v876 = 0;
        v256 = (_value *)objc_claimAutoreleasedReturnValue(+[NSValue valueWithCGAffineTransform:](NSValue, "valueWithCGAffineTransform:", v882));
        v876 = v256;
        v257 = *((_QWORD *)this + 4);
        if (v257 >= *((_QWORD *)this + 5))
        {
LABEL_522:
          v381 = sub_14D14(v842, (uint64_t)&v875);
        }
        else
        {
LABEL_313:
          *(_DWORD *)v257 = (_DWORD)v875;
          *(_QWORD *)(v257 + 8) = v256;
          *(double *)(v257 + 16) = v877;
          v381 = v257 + 24;
        }
        *v5 = v381;
        goto LABEL_909;
      case 79:
        if (v7 >= v4)
          v365 = 0xFFFFLL;
        else
          v365 = *(unsigned __int16 *)(v879 + 2 * v7);
        if (v3 + 2 >= v4)
          v475 = -65536;
        else
          v475 = *(unsigned __int16 *)(v879 + 2 * (v3 + 2)) << 16;
        if (v3 + 3 >= v4)
          v476 = 0xFFFF;
        else
          v476 = *(unsigned __int16 *)(v879 + 2 * (v3 + 3));
        v880 = v3 + 4;
        v831 = v365 | v831 & 0xFFFFFFFF00000000 | v475 & 0xFFFF0000;
        v477 = TUI::Evaluation::Context::objectForBinding((id *)*v2, v365 | v475 & 0xFFFF0000);
        v39 = (_value *)(id)objc_claimAutoreleasedReturnValue(v477);
        LODWORD(v875) = 16;
        v876 = v39;
        TUI::Evaluation::ResolvedValue::resolveProperty(&v875, (const TUI::Evaluation::Context *)*v2, v476, (uint64_t)v882);
        v478 = *((_QWORD *)this + 4);
        if (v478 >= *((_QWORD *)this + 5))
        {
          v479 = sub_14D14(v842, (uint64_t)v882);
        }
        else
        {
          *(_DWORD *)v478 = v882[0]._kind;
          *(_QWORD *)(v478 + 8) = v882[0]._object;
          *(_QWORD *)(v478 + 16) = v882[0].var0._integer;
          v479 = v478 + 24;
        }
        *v5 = v479;

        v511 = v876;
        goto LABEL_817;
      case 80:
        v347 = objc_opt_new(NSMutableDictionary);
        if (v880 >= v881)
        {
          ++v880;
          v348 = 0xFFFFLL;
        }
        else
        {
          v348 = *(unsigned __int16 *)(v879 + 2 * v880++);
          if (!v348)
          {
            v349 = 0;
            goto LABEL_515;
          }
        }
        v487 = 0;
        do
        {
          if (v880 >= v881)
            v488 = 0xFFFF;
          else
            v488 = *(unsigned __int16 *)(v879 + 2 * v880);
          ++v880;
          v882[0]._kind = 0;
          v882[0]._object = 0;
          v489 = *v5;
          if (*v5 != *v842)
          {
            v882[0]._kind = *(_DWORD *)(v489 - 24);
            v882[0]._object = (_value *)*(id *)(v489 - 16);
            v882[0].var0._integer = *(_QWORD *)(v489 - 8);
            v490 = *v5 - 24;

            *v5 = v490;
          }
          v491 = TUI::Evaluation::ResolvedValue::colorValue((id *)v882, (const TUI::Evaluation::Context *)*v2);
          v349 = (void *)objc_claimAutoreleasedReturnValue(v491);

          if (v349)
          {
            v492 = objc_opt_new(NSMutableArray);
            if ((v488 & 7) != 0)
            {
              if ((v488 & 7) != 1)
                goto LABEL_500;
              v493 = 1;
            }
            else
            {
              v493 = v488 & 7;
            }
            v494 = (void *)objc_claimAutoreleasedReturnValue(+[UITraitCollection traitCollectionWithUserInterfaceLevel:](UITraitCollection, "traitCollectionWithUserInterfaceLevel:", v493));
            -[NSMutableArray addObject:](v492, "addObject:", v494);

LABEL_500:
            v495 = (v488 >> 3) & 3;
            if ((_DWORD)v495)
            {
              if ((_DWORD)v495 != 1)
                goto LABEL_504;
              v495 = 1;
            }
            v496 = (void *)objc_claimAutoreleasedReturnValue(+[UITraitCollection traitCollectionWithDisplayGamut:](UITraitCollection, "traitCollectionWithDisplayGamut:", v495));
            -[NSMutableArray addObject:](v492, "addObject:", v496);

LABEL_504:
            v497 = (v488 >> 5) & 3;
            if ((_DWORD)v497)
            {
              if ((_DWORD)v497 != 1)
                goto LABEL_508;
              v497 = 1;
            }
            v498 = (void *)objc_claimAutoreleasedReturnValue(+[UITraitCollection traitCollectionWithAccessibilityContrast:](UITraitCollection, "traitCollectionWithAccessibilityContrast:", v497));
            -[NSMutableArray addObject:](v492, "addObject:", v498);

LABEL_508:
            v499 = (v488 >> 7) & 7;
            if (v499)
            {
              if (v499 != 1)
              {
LABEL_513:
                v843[0] = _NSConcreteStackBlock;
                v843[1] = 3221225472;
                v843[2] = sub_11E74;
                v843[3] = &unk_23D838;
                v502 = v492;
                v844 = v502;
                v503 = (void *)objc_claimAutoreleasedReturnValue(+[UITraitCollection traitCollectionWithTraits:](UITraitCollection, "traitCollectionWithTraits:", v843));
                -[NSMutableDictionary setObject:forKeyedSubscript:](v347, "setObject:forKeyedSubscript:", v349, v503);

                goto LABEL_514;
              }
              v500 = 2;
            }
            else
            {
              v500 = 1;
            }
            v501 = (void *)objc_claimAutoreleasedReturnValue(+[UITraitCollection traitCollectionWithUserInterfaceStyle:](UITraitCollection, "traitCollectionWithUserInterfaceStyle:", v500));
            -[NSMutableArray addObject:](v492, "addObject:", v501);

            goto LABEL_513;
          }
LABEL_514:
          v487 = v349;
          --v348;
        }
        while (v348);
LABEL_515:
        v504 = (void *)objc_claimAutoreleasedReturnValue(+[UITraitCollection traitCollectionWithUserInterfaceStyle:](UITraitCollection, "traitCollectionWithUserInterfaceStyle:", 0));
        v505 = (void *)objc_claimAutoreleasedReturnValue(-[NSMutableDictionary objectForKeyedSubscript:](v347, "objectForKeyedSubscript:", v504));

        if (!v505)
        {
          v506 = v349;
          if (!v349)
          {
            v817 = (void *)objc_claimAutoreleasedReturnValue(+[UIColor redColor](UIColor, "redColor"));
            v506 = v817;
          }
          -[NSMutableDictionary setObject:forKeyedSubscript:](v347, "setObject:forKeyedSubscript:", v506, v504);
          if (!v349)

        }
        v507 = (_value *)objc_claimAutoreleasedReturnValue(+[UIColor _dynamicColorWithColorsByTraitCollection:](UIColor, "_dynamicColorWithColorsByTraitCollection:", v347));
        v508 = v507;
        if (v507)
        {
          v509 = v507;
          v510 = 11;
        }
        else
        {
          v510 = 0;
        }
        v882[0]._kind = v510;
        v882[0]._object = v508;
        v697 = *((_QWORD *)this + 4);
        if (v697 >= *((_QWORD *)this + 5))
        {
          v698 = sub_14D14(v842, (uint64_t)v882);
        }
        else
        {
          *(_DWORD *)v697 = v510;
          *(_QWORD *)(v697 + 8) = v508;
          *(_QWORD *)(v697 + 16) = v882[0].var0._integer;
          v698 = v697 + 24;
        }
        *v5 = v698;

LABEL_1004:
        v3 = v880;
        v4 = v881;
        if (v880 < v881)
          continue;
LABEL_1008:
        if (v3 > v4)
          TUI::Evaluation::Context::reportError(*v2, 1029, 0);
        TUI::Instruction::Decoder::~Decoder((TUI::Instruction::Decoder *)&v878);
        return;
      case 81:
        v882[0]._kind = 0;
        v882[0]._object = 0;
        v69 = *v5;
        if (*v5 != *v842)
        {
          v882[0]._kind = *(_DWORD *)(v69 - 24);
          v882[0]._object = (_value *)*(id *)(v69 - 16);
          v882[0].var0._integer = *(_QWORD *)(v69 - 8);
          v70 = *v5 - 24;

          *v5 = v70;
        }
        v71 = TUI::Evaluation::ResolvedValue::stringValue((TUI::Evaluation::ResolvedValue *)v882, (const TUI::Evaluation::Context *)*v2);
        v39 = (_value *)objc_claimAutoreleasedReturnValue(v71);

        v882[0]._kind = 0;
        v882[0]._object = 0;
        v72 = *v5;
        if (*v5 != *v842)
        {
          v882[0]._kind = *(_DWORD *)(v72 - 24);
          v882[0]._object = (_value *)*(id *)(v72 - 16);
          v882[0].var0._integer = *(_QWORD *)(v72 - 8);
          v73 = *v5 - 24;

          *v5 = v73;
        }
        v74 = TUI::Evaluation::ResolvedValue::fontSpecValue((id *)v882, (const TUI::Evaluation::Context *)*v2);
        v75 = (void *)objc_claimAutoreleasedReturnValue(v74);
        v76 = v75;
        if (v75)
          v77 = v75;
        else
          v77 = (id)objc_claimAutoreleasedReturnValue(+[TUIFontSpec defaultFontSpec](TUIFontSpec, "defaultFontSpec"));
        v676 = v77;

        v677 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v676, "fontSpecWithFamily:", v39));
        v43 = v677;
        v882[0]._kind = 17;
        v882[0]._object = v43;
        v678 = *((_QWORD *)this + 4);
        if (v678 >= *((_QWORD *)this + 5))
          goto LABEL_765;
        goto LABEL_768;
      case 82:
        v882[0]._kind = 0;
        v882[0]._object = 0;
        v93 = *v5;
        if (*v5 != *v842)
        {
          v882[0]._kind = *(_DWORD *)(v93 - 24);
          v882[0]._object = (_value *)*(id *)(v93 - 16);
          v882[0].var0._integer = *(_QWORD *)(v93 - 8);
          v94 = *v5 - 24;

          *v5 = v94;
        }
        v95 = TUI::Evaluation::ResolvedValue::symbolValue((TUI::Evaluation::ResolvedValue *)v882, (const TUI::Evaluation::Context *)*v2);
        v96 = TUI::Instruction::Evaluation::systemDesignFromSymbol(this, v95);
        v39 = (_value *)objc_claimAutoreleasedReturnValue(v96);

        v882[0]._kind = 0;
        v882[0]._object = 0;
        v97 = *v5;
        if (*v5 != *v842)
        {
          v882[0]._kind = *(_DWORD *)(v97 - 24);
          v882[0]._object = (_value *)*(id *)(v97 - 16);
          v882[0].var0._integer = *(_QWORD *)(v97 - 8);
          v98 = *v5 - 24;

          *v5 = v98;
        }
        v99 = TUI::Evaluation::ResolvedValue::fontSpecValue((id *)v882, (const TUI::Evaluation::Context *)*v2);
        v100 = (void *)objc_claimAutoreleasedReturnValue(v99);
        v101 = v100;
        if (v100)
          v102 = v100;
        else
          v102 = (id)objc_claimAutoreleasedReturnValue(+[TUIFontSpec defaultFontSpec](TUIFontSpec, "defaultFontSpec"));
        v690 = v102;

        v691 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v690, "fontSpecWithDesign:", v39));
        v43 = v691;
        v882[0]._kind = 17;
        v882[0]._object = v43;
        v678 = *((_QWORD *)this + 4);
        if (v678 >= *((_QWORD *)this + 5))
          goto LABEL_765;
        goto LABEL_768;
      case 83:
        v882[0]._kind = 0;
        v882[0]._object = 0;
        v366 = *v5;
        if (*v5 != *v842)
        {
          v882[0]._kind = *(_DWORD *)(v366 - 24);
          v882[0]._object = (_value *)*(id *)(v366 - 16);
          v882[0].var0._integer = *(_QWORD *)(v366 - 8);
          v367 = *v5 - 24;

          *v5 = v367;
        }
        v368 = TUI::Evaluation::ResolvedValue::floatValue((id *)v882, (const TUI::Evaluation::Context *)*v2);

        v882[0]._kind = 0;
        v882[0]._object = 0;
        v369 = *v5;
        if (*v5 != *v842)
        {
          v882[0]._kind = *(_DWORD *)(v369 - 24);
          v882[0]._object = (_value *)*(id *)(v369 - 16);
          v882[0].var0._integer = *(_QWORD *)(v369 - 8);
          v370 = *v5 - 24;

          *v5 = v370;
        }
        v371 = TUI::Evaluation::ResolvedValue::fontSpecValue((id *)v882, (const TUI::Evaluation::Context *)*v2);
        v372 = (void *)objc_claimAutoreleasedReturnValue(v371);
        v373 = v372;
        if (v372)
          v374 = v372;
        else
          v374 = (id)objc_claimAutoreleasedReturnValue(+[TUIFontSpec defaultFontSpec](TUIFontSpec, "defaultFontSpec"));
        v681 = v374;

        v682 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v681, "fontSpecWithPointSize:", v368));
        v39 = v682;
        v103 = 17;
        v882[0]._kind = 17;
        v882[0]._object = v39;
        v104 = *((_QWORD *)this + 4);
        if (v104 >= *((_QWORD *)this + 5))
          goto LABEL_759;
        goto LABEL_815;
      case 84:
        v882[0]._kind = 0;
        v882[0]._object = 0;
        v218 = *v5;
        if (*v5 != *v842)
        {
          v882[0]._kind = *(_DWORD *)(v218 - 24);
          v882[0]._object = (_value *)*(id *)(v218 - 16);
          v882[0].var0._integer = *(_QWORD *)(v218 - 8);
          v219 = *v5 - 24;

          *v5 = v219;
        }
        v220 = TUI::Evaluation::ResolvedValue::symbolValue((TUI::Evaluation::ResolvedValue *)v882, (const TUI::Evaluation::Context *)*v2);
        v221 = TUI::Instruction::Evaluation::textStyleFromSymbol(this, v220);
        v39 = (_value *)objc_claimAutoreleasedReturnValue(v221);

        v882[0]._kind = 0;
        v882[0]._object = 0;
        v222 = *v5;
        if (*v5 != *v842)
        {
          v882[0]._kind = *(_DWORD *)(v222 - 24);
          v882[0]._object = (_value *)*(id *)(v222 - 16);
          v882[0].var0._integer = *(_QWORD *)(v222 - 8);
          v223 = *v5 - 24;

          *v5 = v223;
        }
        v224 = TUI::Evaluation::ResolvedValue::fontSpecValue((id *)v882, (const TUI::Evaluation::Context *)*v2);
        v225 = (void *)objc_claimAutoreleasedReturnValue(v224);
        v226 = v225;
        if (v225)
          v227 = v225;
        else
          v227 = (id)objc_claimAutoreleasedReturnValue(+[TUIFontSpec defaultFontSpec](TUIFontSpec, "defaultFontSpec"));
        v692 = v227;

        v693 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v692, "fontSpecWithTextStyle:", v39));
        v43 = v693;
        v882[0]._kind = 17;
        v882[0]._object = v43;
        v678 = *((_QWORD *)this + 4);
        if (v678 >= *((_QWORD *)this + 5))
          goto LABEL_765;
        goto LABEL_768;
      case 85:
        v882[0]._kind = 0;
        v882[0]._object = 0;
        v183 = *v5;
        if (*v5 != *v842)
        {
          v882[0]._kind = *(_DWORD *)(v183 - 24);
          v882[0]._object = (_value *)*(id *)(v183 - 16);
          v882[0].var0._integer = *(_QWORD *)(v183 - 8);
          v184 = *v5 - 24;

          *v5 = v184;
        }
        v185 = TUI::Evaluation::ResolvedValue::floatValue((id *)v882, (const TUI::Evaluation::Context *)*v2);

        v882[0]._kind = 0;
        v882[0]._object = 0;
        v186 = *v5;
        if (*v5 != *v842)
        {
          v882[0]._kind = *(_DWORD *)(v186 - 24);
          v882[0]._object = (_value *)*(id *)(v186 - 16);
          v882[0].var0._integer = *(_QWORD *)(v186 - 8);
          v187 = *v5 - 24;

          *v5 = v187;
        }
        v188 = TUI::Evaluation::ResolvedValue::fontSpecValue((id *)v882, (const TUI::Evaluation::Context *)*v2);
        v189 = (void *)objc_claimAutoreleasedReturnValue(v188);
        v190 = v189;
        if (v189)
          v191 = v189;
        else
          v191 = (id)objc_claimAutoreleasedReturnValue(+[TUIFontSpec defaultFontSpec](TUIFontSpec, "defaultFontSpec"));
        v679 = v191;

        v680 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v679, "fontSpecWithMaxPointSize:", v185));
        v39 = v680;
        v103 = 17;
        v882[0]._kind = 17;
        v882[0]._object = v39;
        v104 = *((_QWORD *)this + 4);
        if (v104 >= *((_QWORD *)this + 5))
          goto LABEL_759;
        goto LABEL_815;
      case 86:
        v882[0]._kind = 0;
        v882[0]._object = 0;
        v350 = *v5;
        if (*v5 != *v842)
        {
          v882[0]._kind = *(_DWORD *)(v350 - 24);
          v882[0]._object = (_value *)*(id *)(v350 - 16);
          v882[0].var0._integer = *(_QWORD *)(v350 - 8);
          v351 = *v5 - 24;

          *v5 = v351;
        }
        v352 = TUI::Evaluation::ResolvedValue::symbolValue((TUI::Evaluation::ResolvedValue *)v882, (const TUI::Evaluation::Context *)*v2);
        v353 = TUI::Instruction::Evaluation::contentSizeFromSymbol(this, v352);
        v39 = (_value *)objc_claimAutoreleasedReturnValue(v353);

        v882[0]._kind = 0;
        v882[0]._object = 0;
        v354 = *v5;
        if (*v5 != *v842)
        {
          v882[0]._kind = *(_DWORD *)(v354 - 24);
          v882[0]._object = (_value *)*(id *)(v354 - 16);
          v882[0].var0._integer = *(_QWORD *)(v354 - 8);
          v355 = *v5 - 24;

          *v5 = v355;
        }
        v356 = TUI::Evaluation::ResolvedValue::fontSpecValue((id *)v882, (const TUI::Evaluation::Context *)*v2);
        v357 = (void *)objc_claimAutoreleasedReturnValue(v356);
        v358 = v357;
        if (v357)
          v359 = v357;
        else
          v359 = (id)objc_claimAutoreleasedReturnValue(+[TUIFontSpec defaultFontSpec](TUIFontSpec, "defaultFontSpec"));
        v695 = v359;

        v696 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v695, "fontSpecWithMaxContentSize:", v39));
        v43 = v696;
        v882[0]._kind = 17;
        v882[0]._object = v43;
        v678 = *((_QWORD *)this + 4);
        if (v678 >= *((_QWORD *)this + 5))
        {
LABEL_765:
          v694 = sub_14D14(v842, (uint64_t)v882);
        }
        else
        {
LABEL_768:
          *(_DWORD *)v678 = 17;
          *(_QWORD *)(v678 + 8) = v43;
          *(_QWORD *)(v678 + 16) = v882[0].var0._integer;
          v694 = v678 + 24;
        }
        *v5 = v694;

        goto LABEL_856;
      case 87:
        v882[0]._kind = 0;
        v882[0]._object = 0;
        v228 = *v5;
        if (*v5 == *v842)
        {
          v230 = (const TUI::Evaluation::Context *)*v2;
        }
        else
        {
          v882[0]._kind = *(_DWORD *)(v228 - 24);
          v882[0]._object = (_value *)*(id *)(v228 - 16);
          v882[0].var0._integer = *(_QWORD *)(v228 - 8);
          v229 = *v5 - 24;

          *v5 = v229;
          v230 = (const TUI::Evaluation::Context *)*v2;
          if (v882[0]._kind == 6)
          {
            v231 = TUI::Evaluation::ResolvedValue::symbolValue((TUI::Evaluation::ResolvedValue *)v882, v230);
            v230 = (const TUI::Evaluation::Context *)*v2;
            v232 = *(_QWORD *)(*(_QWORD *)(*v2 + 560) + 40);
            if ((unint64_t)(*(_QWORD *)(*(_QWORD *)(*v2 + 560) + 48) - v232) < 0x9F)
              v233 = 0xFFFF;
            else
              v233 = *(unsigned __int16 *)(v232 + 158);
            if (v231 == v233)
            {
              v575 = NAN;
LABEL_627:
              LODWORD(v875) = 0;
              v876 = 0;
              v576 = *v5;
              if (*v5 != *v842)
              {
                LODWORD(v875) = *(_DWORD *)(v576 - 24);
                v876 = (_value *)*(id *)(v576 - 16);
                v877 = *(double *)(v576 - 8);
                v577 = *v5 - 24;

                *v5 = v577;
              }
              v578 = TUI::Evaluation::ResolvedValue::fontSpecValue(&v875, (const TUI::Evaluation::Context *)*v2);
              v579 = (void *)objc_claimAutoreleasedReturnValue(v578);
              v580 = v579;
              if (v579)
                v581 = v579;
              else
                v581 = (id)objc_claimAutoreleasedReturnValue(+[TUIFontSpec defaultFontSpec](TUIFontSpec, "defaultFontSpec"));
              v683 = v581;

              v684 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v683, "fontSpecWithLeading:", v575));
              v174 = v684;
              v176 = 17;
              LODWORD(v875) = 17;
              v876 = v174;
              v474 = *((_QWORD *)this + 4);
              if (v474 < *((_QWORD *)this + 5))
              {
LABEL_887:
                *(_DWORD *)v474 = v176;
                *(_QWORD *)(v474 + 8) = v174;
                *(double *)(v474 + 16) = v877;
                v701 = v474 + 24;
              }
              else
              {
LABEL_809:
                v701 = sub_14D14(v842, (uint64_t)&v875);
              }
LABEL_888:
              *v5 = v701;

LABEL_889:
              goto LABEL_1002;
            }
            if (v882[0]._kind == 6)
            {
              v709 = TUI::Evaluation::ResolvedValue::symbolValue((TUI::Evaluation::ResolvedValue *)v882, v230);
              v230 = (const TUI::Evaluation::Context *)*v2;
              v710 = *(_QWORD *)(*(_QWORD *)(*v2 + 560) + 40);
              v711 = (unint64_t)(*(_QWORD *)(*(_QWORD *)(*v2 + 560) + 48) - v710) < 0xCF
                   ? 0xFFFF
                   : *(unsigned __int16 *)(v710 + 206);
              v575 = 0.0;
              if (v709 == v711)
                goto LABEL_627;
            }
          }
        }
        v575 = TUI::Evaluation::ResolvedValue::floatValue((id *)v882, v230);
        goto LABEL_627;
      case 88:
        v882[0]._kind = 0;
        v882[0]._object = 0;
        v26 = *v5;
        if (*v5 != *v842)
        {
          v882[0]._kind = *(_DWORD *)(v26 - 24);
          v882[0]._object = (_value *)*(id *)(v26 - 16);
          v882[0].var0._integer = *(_QWORD *)(v26 - 8);
          v27 = *v5 - 24;

          *v5 = v27;
        }
        v28 = TUI::Evaluation::ResolvedValue::symbolValue((TUI::Evaluation::ResolvedValue *)v882, (const TUI::Evaluation::Context *)*v2);
        v29 = TUI::Instruction::Evaluation::fontWeightFromSymbol(this, v28);

        v882[0]._kind = 0;
        v882[0]._object = 0;
        v30 = *v5;
        if (*v5 != *v842)
        {
          v882[0]._kind = *(_DWORD *)(v30 - 24);
          v882[0]._object = (_value *)*(id *)(v30 - 16);
          v882[0].var0._integer = *(_QWORD *)(v30 - 8);
          v31 = *v5 - 24;

          *v5 = v31;
        }
        v32 = TUI::Evaluation::ResolvedValue::fontSpecValue((id *)v882, (const TUI::Evaluation::Context *)*v2);
        v33 = (void *)objc_claimAutoreleasedReturnValue(v32);
        v34 = v33;
        if (v33)
          v35 = v33;
        else
          v35 = (id)objc_claimAutoreleasedReturnValue(+[TUIFontSpec defaultFontSpec](TUIFontSpec, "defaultFontSpec"));
        v685 = v35;

        v686 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v685, "fontSpecWithWeight:", v29));
        v39 = v686;
        v103 = 17;
        v882[0]._kind = 17;
        v882[0]._object = v39;
        v104 = *((_QWORD *)this + 4);
        if (v104 >= *((_QWORD *)this + 5))
          goto LABEL_759;
        goto LABEL_815;
      case 89:
        v882[0]._kind = 0;
        v882[0]._object = 0;
        v57 = *v5;
        if (*v5 != *v842)
        {
          v882[0]._kind = *(_DWORD *)(v57 - 24);
          v882[0]._object = (_value *)*(id *)(v57 - 16);
          v882[0].var0._integer = *(_QWORD *)(v57 - 8);
          v58 = *v5 - 24;

          *v5 = v58;
        }
        v59 = TUI::Evaluation::ResolvedValue::symbolValue((TUI::Evaluation::ResolvedValue *)v882, (const TUI::Evaluation::Context *)*v2);
        v60 = TUI::Instruction::Evaluation::fontCapsFromSymbol(this, v59);

        v882[0]._kind = 0;
        v882[0]._object = 0;
        v61 = *v5;
        if (*v5 != *v842)
        {
          v882[0]._kind = *(_DWORD *)(v61 - 24);
          v882[0]._object = (_value *)*(id *)(v61 - 16);
          v882[0].var0._integer = *(_QWORD *)(v61 - 8);
          v62 = *v5 - 24;

          *v5 = v62;
        }
        v63 = TUI::Evaluation::ResolvedValue::fontSpecValue((id *)v882, (const TUI::Evaluation::Context *)*v2);
        v64 = (void *)objc_claimAutoreleasedReturnValue(v63);
        v65 = v64;
        if (v64)
          v66 = v64;
        else
          v66 = (id)objc_claimAutoreleasedReturnValue(+[TUIFontSpec defaultFontSpec](TUIFontSpec, "defaultFontSpec"));
        v687 = v66;

        v688 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v687, "fontSpecWithCaps:", v60));
        v39 = v688;
        v103 = 17;
        v882[0]._kind = 17;
        v882[0]._object = v39;
        v104 = *((_QWORD *)this + 4);
        if (v104 >= *((_QWORD *)this + 5))
          goto LABEL_759;
        goto LABEL_815;
      case 90:
        v882[0]._kind = 0;
        v882[0]._object = 0;
        v375 = *v5;
        if (*v5 == *v842)
        {
          LODWORD(v875) = 0;
          v876 = 0;
        }
        else
        {
          v882[0]._kind = *(_DWORD *)(v375 - 24);
          v882[0]._object = (_value *)*(id *)(v375 - 16);
          v882[0].var0._integer = *(_QWORD *)(v375 - 8);
          v376 = *v5;
          v377 = *v5 - 24;

          *v5 = v377;
          v378 = *v842;
          LODWORD(v875) = 0;
          v876 = 0;
          if (v377 != v378)
          {
            LODWORD(v875) = *(_DWORD *)(v376 - 48);
            v876 = (_value *)*(id *)(v376 - 40);
            v877 = *(double *)(v376 - 32);
            v379 = *v5 - 24;

            *v5 = v379;
          }
        }
        v647 = TUI::Evaluation::ResolvedValue::fontSpecValue(&v875, (const TUI::Evaluation::Context *)*v2);
        v648 = (void *)objc_claimAutoreleasedReturnValue(v647);
        v649 = v648;
        if (v648)
          v650 = v648;
        else
          v650 = (id)objc_claimAutoreleasedReturnValue(+[TUIFontSpec defaultFontSpec](TUIFontSpec, "defaultFontSpec"));
        v671 = v650;

        v672 = (const TUI::Evaluation::Context *)*v2;
        if (v882[0]._kind == 6
          && ((v673 = TUI::Evaluation::ResolvedValue::symbolValue((TUI::Evaluation::ResolvedValue *)v882, v672),
               v672 = (const TUI::Evaluation::Context *)*v2,
               v674 = *(_QWORD *)(*(_QWORD *)(*v2 + 560) + 40),
               (unint64_t)(*(_QWORD *)(*(_QWORD *)(*v2 + 560) + 48) - v674) < 0x9F)
            ? (v675 = 0xFFFF)
            : (v675 = *(unsigned __int16 *)(v674 + 158)),
              v673 == v675))
        {
          v705 = NAN;
        }
        else
        {
          v705 = TUI::Evaluation::ResolvedValue::floatValue((id *)v882, v672);
        }
        v706 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v671, "fontSpecWithTracking:", v705));

        v174 = v706;
        v176 = 17;
        LODWORD(v875) = 17;
        v876 = v174;
        v474 = *((_QWORD *)this + 4);
        if (v474 >= *((_QWORD *)this + 5))
          goto LABEL_809;
        goto LABEL_887;
      case 91:
        v882[0]._kind = 0;
        v882[0]._object = 0;
        v21 = *v5;
        if (*v5 == *v842)
        {
          LODWORD(v875) = 0;
          v876 = 0;
        }
        else
        {
          v882[0]._kind = *(_DWORD *)(v21 - 24);
          v882[0]._object = (_value *)*(id *)(v21 - 16);
          v882[0].var0._integer = *(_QWORD *)(v21 - 8);
          v22 = *v5;
          v23 = *v5 - 24;

          *v5 = v23;
          v24 = *v842;
          LODWORD(v875) = 0;
          v876 = 0;
          if (v23 != v24)
          {
            LODWORD(v875) = *(_DWORD *)(v22 - 48);
            v876 = (_value *)*(id *)(v22 - 40);
            v877 = *(double *)(v22 - 32);
            v25 = *v5 - 24;

            *v5 = v25;
          }
        }
        v526 = TUI::Evaluation::ResolvedValue::fontSpecValue(&v875, (const TUI::Evaluation::Context *)*v2);
        v527 = (void *)objc_claimAutoreleasedReturnValue(v526);
        v528 = v527;
        if (v527)
          v529 = v527;
        else
          v529 = (id)objc_claimAutoreleasedReturnValue(+[TUIFontSpec defaultFontSpec](TUIFontSpec, "defaultFontSpec"));
        v651 = v529;

        if (v880 >= v881)
        {
          ++v880;
        }
        else
        {
          v652 = *(unsigned __int16 *)(v879 + 2 * v880++);
          switch(v652)
          {
            case 0:
              v653 = objc_msgSend(v651, "fontSpecWithAdditionalLeading:", TUI::Evaluation::ResolvedValue::floatValue((id *)v882, (const TUI::Evaluation::Context *)*v2));
              v654 = objc_claimAutoreleasedReturnValue(v653);
              goto LABEL_885;
            case 1:
              v728 = objc_msgSend(v651, "fontSpecWithMinPointSize:", TUI::Evaluation::ResolvedValue::floatValue((id *)v882, (const TUI::Evaluation::Context *)*v2));
              v654 = objc_claimAutoreleasedReturnValue(v728);
              goto LABEL_885;
            case 2:
              v729 = TUI::Evaluation::ResolvedValue::symbolValue((TUI::Evaluation::ResolvedValue *)v882, (const TUI::Evaluation::Context *)*v2);
              v730 = TUI::Instruction::Evaluation::contentSizeFromSymbol(this, v729);
              v731 = (void *)objc_claimAutoreleasedReturnValue(v730);
              v732 = objc_claimAutoreleasedReturnValue(objc_msgSend(v651, "fontSpecWithMinContentSize:", v731));

              v651 = (void *)v732;
              break;
            case 3:
              v733 = objc_msgSend(v651, "fontSpecWithMonospacedDigits:", TUI::Evaluation::ResolvedValue::BOOLValue((TUI::Evaluation::ResolvedValue *)v882, (const TUI::Evaluation::Context *)*v2));
              v654 = objc_claimAutoreleasedReturnValue(v733);
LABEL_885:
              v734 = (void *)v654;

              v651 = v734;
              break;
            default:
              break;
          }
        }
        v174 = v651;
        v176 = 17;
        LODWORD(v875) = 17;
        v876 = v174;
        v474 = *((_QWORD *)this + 4);
        if (v474 < *((_QWORD *)this + 5))
          goto LABEL_887;
        goto LABEL_809;
      case 92:
        v882[0]._kind = 0;
        v882[0]._object = 0;
        v234 = *v5;
        if (*v5 == *v842)
        {
          LODWORD(v875) = 0;
          v876 = 0;
        }
        else
        {
          v882[0]._kind = *(_DWORD *)(v234 - 24);
          v882[0]._object = (_value *)*(id *)(v234 - 16);
          v882[0].var0._integer = *(_QWORD *)(v234 - 8);
          v235 = *v5;
          v236 = *v5 - 24;

          *v5 = v236;
          v237 = *v842;
          LODWORD(v875) = 0;
          v876 = 0;
          if (v236 != v237)
          {
            LODWORD(v875) = *(_DWORD *)(v235 - 48);
            v876 = (_value *)*(id *)(v235 - 40);
            v877 = *(double *)(v235 - 32);
            v238 = *v5 - 24;

            *v5 = v238;
          }
        }
        v582 = TUI::Evaluation::ResolvedValue::objectValue((TUI::Evaluation::ResolvedValue *)&v875, (const TUI::Evaluation::Context *)*v2);
        v583 = (void *)objc_claimAutoreleasedReturnValue(v582);
        v584 = v583;
        if (v880 >= v881)
        {
          ++v880;
LABEL_636:
          v592 = v583;
          LODWORD(v872) = 16;
          v873 = v592;
          sub_11E0C(v842, (uint64_t)&v872);

        }
        else
        {
          v585 = *(unsigned __int16 *)(v879 + 2 * v880++);
          switch(v585)
          {
            case 0:
              v586 = sub_13808(v583, *v2);
              v587 = (void *)objc_claimAutoreleasedReturnValue(v586);
              v588 = TUI::Evaluation::ResolvedValue::symbolValue((TUI::Evaluation::ResolvedValue *)v882, (const TUI::Evaluation::Context *)*v2);
              v589 = objc_msgSend(v587, "pointerStyleWithEffect:", TUI::Instruction::Evaluation::pointerEffectFromSymbol(this, v588));
              v590 = (void *)objc_claimAutoreleasedReturnValue(v589);

              v591 = v590;
              LODWORD(v872) = 16;
              v873 = v591;
              sub_11E0C(v842, (uint64_t)&v872);

              break;
            case 1:
              v742 = sub_13808(v583, *v2);
              v591 = (id)objc_claimAutoreleasedReturnValue(v742);
              v743 = objc_msgSend(v591, "pointerStyleWithPrefersShadow:", TUI::Evaluation::ResolvedValue::BOOLValue((TUI::Evaluation::ResolvedValue *)v882, (const TUI::Evaluation::Context *)*v2));
              v744 = (id)objc_claimAutoreleasedReturnValue(v743);
              LODWORD(v872) = 16;
              v873 = v744;
              sub_11E0C(v842, (uint64_t)&v872);
              goto LABEL_946;
            case 2:
              v745 = sub_13808(v583, *v2);
              v591 = (id)objc_claimAutoreleasedReturnValue(v745);
              v746 = objc_msgSend(v591, "pointerStyleWithPrefersScale:", TUI::Evaluation::ResolvedValue::BOOLValue((TUI::Evaluation::ResolvedValue *)v882, (const TUI::Evaluation::Context *)*v2));
              v744 = (id)objc_claimAutoreleasedReturnValue(v746);
              LODWORD(v872) = 16;
              v873 = v744;
              sub_11E0C(v842, (uint64_t)&v872);
              goto LABEL_946;
            case 3:
              v747 = sub_13808(v583, *v2);
              v591 = (id)objc_claimAutoreleasedReturnValue(v747);
              v748 = TUI::Evaluation::ResolvedValue::symbolValue((TUI::Evaluation::ResolvedValue *)v882, (const TUI::Evaluation::Context *)*v2);
              v749 = objc_msgSend(v591, "pointerStyleWithPreferredTintMode:", TUI::Instruction::Evaluation::hoverEffectTintModeFromSymbol(this, v748));
              v744 = (id)objc_claimAutoreleasedReturnValue(v749);
              LODWORD(v872) = 16;
              v873 = v744;
              sub_11E0C(v842, (uint64_t)&v872);
              goto LABEL_946;
            case 4:
              v750 = sub_13808(v583, *v2);
              v591 = (id)objc_claimAutoreleasedReturnValue(v750);
              v751 = TUI::Evaluation::ResolvedValue::objectValue((TUI::Evaluation::ResolvedValue *)v882, (const TUI::Evaluation::Context *)*v2);
              v752 = (void *)objc_claimAutoreleasedReturnValue(v751);
              v753 = sub_13F10(v752, *v2);
              v754 = (void *)objc_claimAutoreleasedReturnValue(v753);

              v755 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v591, "pointerStyleWithCursor:", v754));
              LODWORD(v872) = 16;
              v873 = v755;
              sub_11E0C(v842, (uint64_t)&v872);
              goto LABEL_942;
            case 5:
              v756 = sub_13F10(v583, *v2);
              v591 = (id)objc_claimAutoreleasedReturnValue(v756);
              v757 = TUI::Evaluation::ResolvedValue::symbolValue((TUI::Evaluation::ResolvedValue *)v882, (const TUI::Evaluation::Context *)*v2);
              v758 = objc_msgSend(v591, "pointerCursorWithShape:", TUI::Instruction::Evaluation::pointerShapeFromSymbol(this, v757));
              v744 = (id)objc_claimAutoreleasedReturnValue(v758);
              LODWORD(v872) = 16;
              v873 = v744;
              sub_11E0C(v842, (uint64_t)&v872);
              goto LABEL_946;
            case 6:
              v759 = sub_13F10(v583, *v2);
              v591 = (id)objc_claimAutoreleasedReturnValue(v759);
              v760 = objc_msgSend(v591, "pointerCursorWithInsets:", TUI::Evaluation::ResolvedValue::insetsValue((id *)v882, (const TUI::Evaluation::Context *)*v2));
              v744 = (id)objc_claimAutoreleasedReturnValue(v760);
              LODWORD(v872) = 16;
              v873 = v744;
              sub_11E0C(v842, (uint64_t)&v872);
              goto LABEL_946;
            case 7:
              v761 = sub_13F10(v583, *v2);
              v591 = (id)objc_claimAutoreleasedReturnValue(v761);
              v762 = objc_msgSend(v591, "pointerCursorWithCornerRadius:", TUI::Evaluation::ResolvedValue::floatValue((id *)v882, (const TUI::Evaluation::Context *)*v2));
              v744 = (id)objc_claimAutoreleasedReturnValue(v762);
              LODWORD(v872) = 16;
              v873 = v744;
              sub_11E0C(v842, (uint64_t)&v872);
              goto LABEL_946;
            case 8:
              v763 = sub_13F10(v583, *v2);
              v591 = (id)objc_claimAutoreleasedReturnValue(v763);
              v764 = objc_msgSend(v591, "pointerCursorWithScale:", TUI::Evaluation::ResolvedValue::floatValue((id *)v882, (const TUI::Evaluation::Context *)*v2));
              v744 = (id)objc_claimAutoreleasedReturnValue(v764);
              LODWORD(v872) = 16;
              v873 = v744;
              sub_11E0C(v842, (uint64_t)&v872);
              goto LABEL_946;
            case 9:
              v765 = sub_1434C(v583, *v2);
              v766 = (void *)objc_claimAutoreleasedReturnValue(v765);
              v767 = TUI::Evaluation::ResolvedValue::floatValue((id *)v882, (const TUI::Evaluation::Context *)*v2);
              if (v766)
              {
                v768 = (TUISnap *)objc_claimAutoreleasedReturnValue(objc_msgSend(v766, "snapByAddingValue:", v767));

              }
              else
              {
                v768 = -[TUISnap initWithValue:]([TUISnap alloc], "initWithValue:", v767);
              }
              v800 = v768;
              LODWORD(v872) = 16;
              v873 = v800;
              sub_11E0C(v842, (uint64_t)&v872);

              goto LABEL_948;
            case 10:
              v769 = sub_1434C(v583, *v2);
              v591 = (id)objc_claimAutoreleasedReturnValue(v769);
              v770 = TUI::Evaluation::ResolvedValue::objectValue((TUI::Evaluation::ResolvedValue *)v882, (const TUI::Evaluation::Context *)*v2);
              v771 = (void *)objc_claimAutoreleasedReturnValue(v770);
              v772 = TUIProtocolCast(&OBJC_PROTOCOL___NSCopying, v771);
              v754 = (void *)objc_claimAutoreleasedReturnValue(v772);

              if (v754)
              {
                v755 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v591, "snapWithIdentifier:", v754));
                LODWORD(v872) = 16;
                v873 = v755;
                sub_11E0C(v842, (uint64_t)&v872);
LABEL_942:

              }
              else
              {
                v801 = v591;
                LODWORD(v872) = 16;
                v873 = v801;
                sub_11E0C(v842, (uint64_t)&v872);

              }
              break;
            case 11:
              v773 = sub_1434C(v583, *v2);
              v591 = (id)objc_claimAutoreleasedReturnValue(v773);
              v774 = objc_msgSend(v591, "snapWithStep:", TUI::Evaluation::ResolvedValue::floatValue((id *)v882, (const TUI::Evaluation::Context *)*v2));
              v744 = (id)objc_claimAutoreleasedReturnValue(v774);
              LODWORD(v872) = 16;
              v873 = v744;
              sub_11E0C(v842, (uint64_t)&v872);
              goto LABEL_946;
            case 12:
              v775 = sub_1434C(v583, *v2);
              v591 = (id)objc_claimAutoreleasedReturnValue(v775);
              v776 = objc_msgSend(v591, "snapWithMax:", TUI::Evaluation::ResolvedValue::floatValue((id *)v882, (const TUI::Evaluation::Context *)*v2));
              v744 = (id)objc_claimAutoreleasedReturnValue(v776);
              LODWORD(v872) = 16;
              v873 = v744;
              sub_11E0C(v842, (uint64_t)&v872);
              goto LABEL_946;
            case 13:
              v777 = sub_14450(v583, *v2);
              v591 = (id)objc_claimAutoreleasedReturnValue(v777);
              v778 = TUI::Evaluation::ResolvedValue::symbolValue((TUI::Evaluation::ResolvedValue *)v882, (const TUI::Evaluation::Context *)*v2);
              v779 = objc_msgSend(v591, "focusStyleWithEffect:", TUI::Instruction::Evaluation::focusEffectFromSymbol(this, v778));
              v744 = (id)objc_claimAutoreleasedReturnValue(v779);
              LODWORD(v872) = 16;
              v873 = v744;
              sub_11E0C(v842, (uint64_t)&v872);
              goto LABEL_946;
            case 14:
              v780 = sub_14450(v583, *v2);
              v591 = (id)objc_claimAutoreleasedReturnValue(v780);
              v781 = objc_msgSend(v591, "focusStyleWithInsets:", TUI::Evaluation::ResolvedValue::insetsValue((id *)v882, (const TUI::Evaluation::Context *)*v2));
              v744 = (id)objc_claimAutoreleasedReturnValue(v781);
              LODWORD(v872) = 16;
              v873 = v744;
              sub_11E0C(v842, (uint64_t)&v872);
              goto LABEL_946;
            case 15:
              v782 = sub_14450(v583, *v2);
              v591 = (id)objc_claimAutoreleasedReturnValue(v782);
              v783 = TUI::Evaluation::ResolvedValue::colorValue((id *)v882, (const TUI::Evaluation::Context *)*v2);
              v754 = (void *)objc_claimAutoreleasedReturnValue(v783);
              v755 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v591, "focusStyleWithColor:", v754));
              LODWORD(v872) = 16;
              v873 = v755;
              sub_11E0C(v842, (uint64_t)&v872);
              goto LABEL_942;
            case 16:
              v784 = sub_14450(v583, *v2);
              v591 = (id)objc_claimAutoreleasedReturnValue(v784);
              v785 = objc_msgSend(v591, "focusStyleWithCornerRadius:", TUI::Evaluation::ResolvedValue::floatValue((id *)v882, (const TUI::Evaluation::Context *)*v2));
              v744 = (id)objc_claimAutoreleasedReturnValue(v785);
              LODWORD(v872) = 16;
              v873 = v744;
              sub_11E0C(v842, (uint64_t)&v872);
              goto LABEL_946;
            case 17:
              v786 = sub_14450(v583, *v2);
              v591 = (id)objc_claimAutoreleasedReturnValue(v786);
              v787 = TUI::Evaluation::ResolvedValue::stringValue((TUI::Evaluation::ResolvedValue *)v882, (const TUI::Evaluation::Context *)*v2);
              v754 = (void *)objc_claimAutoreleasedReturnValue(v787);
              v755 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v591, "focusStyleWithGroupIdentifier:", v754));
              LODWORD(v872) = 16;
              v873 = v755;
              sub_11E0C(v842, (uint64_t)&v872);
              goto LABEL_942;
            case 18:
              v788 = sub_14450(v583, *v2);
              v591 = (id)objc_claimAutoreleasedReturnValue(v788);
              v789 = objc_msgSend(v591, "focusStyleWithContinuousCurve:", TUI::Evaluation::ResolvedValue::BOOLValue((TUI::Evaluation::ResolvedValue *)v882, (const TUI::Evaluation::Context *)*v2));
              v744 = (id)objc_claimAutoreleasedReturnValue(v789);
              LODWORD(v872) = 16;
              v873 = v744;
              sub_11E0C(v842, (uint64_t)&v872);
              goto LABEL_946;
            case 19:
              v790 = TUI::Evaluation::ResolvedValue::colorValue(&v875, (const TUI::Evaluation::Context *)*v2);
              v591 = (id)objc_claimAutoreleasedReturnValue(v790);
              v791 = objc_msgSend(v591, "colorWithAlphaComponent:", TUI::Evaluation::ResolvedValue::floatValue((id *)v882, (const TUI::Evaluation::Context *)*v2));
              v744 = (id)objc_claimAutoreleasedReturnValue(v791);
              LODWORD(v872) = 11;
              v873 = v744;
              sub_11E0C(v842, (uint64_t)&v872);
LABEL_946:

              break;
            default:
              goto LABEL_636;
          }

        }
LABEL_948:

        goto LABEL_1001;
      case 93:
        if (v7 >= v4)
          v132 = 0xFFFFLL;
        else
          v132 = *(unsigned __int16 *)(v879 + 2 * v7);
        if (v3 + 2 >= v4)
          v438 = 0xFFFFLL;
        else
          v438 = *(unsigned __int16 *)(v879 + 2 * (v3 + 2));
        if (v3 + 3 >= v4)
          v439 = -65536;
        else
          v439 = *(unsigned __int16 *)(v879 + 2 * (v3 + 3)) << 16;
        if (v3 + 4 >= v4)
          v440 = 0xFFFF;
        else
          v440 = *(unsigned __int16 *)(v879 + 2 * (v3 + 4));
        v880 = v3 + 5;
        v441 = v440 | v439;
        v442 = TUIClosureNil;
        if (TUI::Instruction::Decoder::offsetKind(v441) == 18)
          v442 = TUI::Instruction::Decoder::offsetIndex((TUI::Instruction::Decoder *)v441);
        v39 = -[_TUIStyleReferenceElement initWithStyleReference:]([_TUIStyleReferenceElement alloc], "initWithStyleReference:", v132 | (v438 << 32));
        TUI::Evaluation::Context::captureClosure((_QWORD *)*v2, v442);
        v443 = [_TUIElementWithClosure alloc];
        kind = v882[0]._kind;
        v848 = v882[0]._object;
        integer = v882[0].var0._integer;
        if (v882[0].var0._integer)
        {
          v444 = (unint64_t *)(v882[0].var0._integer + 8);
          do
            v445 = __ldxr(v444);
          while (__stxr(v445 + 1, v444));
        }
        v446 = -[_TUIElementWithClosure initWithParsedElement:closureAndCapture:](v443, "initWithParsedElement:closureAndCapture:", v39, &kind);
        v447 = v446;
        LODWORD(v875) = 15;
        v876 = (_value *)v446;
        v448 = *((_QWORD *)this + 4);
        if (v448 >= *((_QWORD *)this + 5))
        {
          v449 = sub_14D14(v842, (uint64_t)&v875);
        }
        else
        {
          *(_DWORD *)v448 = 15;
          *(_QWORD *)(v448 + 8) = v446;
          *(double *)(v448 + 16) = v877;
          v449 = v448 + 24;
        }
        *v5 = v449;

        v520 = (std::__shared_weak_count *)integer;
        if (integer)
        {
          v521 = (unint64_t *)(integer + 8);
          do
            v522 = __ldaxr(v521);
          while (__stlxr(v522 - 1, v521));
          if (!v522)
          {
            ((void (*)(std::__shared_weak_count *))v520->__on_zero_shared)(v520);
            std::__shared_weak_count::__release_weak(v520);
          }
        }
        v523 = (std::__shared_weak_count *)v882[0].var0._integer;
        if (v882[0].var0._integer)
        {
          v524 = (unint64_t *)(v882[0].var0._integer + 8);
          do
            v525 = __ldaxr(v524);
          while (__stlxr(v525 - 1, v524));
          if (!v525)
          {
            ((void (*)(std::__shared_weak_count *))v523->__on_zero_shared)(v523);
            std::__shared_weak_count::__release_weak(v523);
          }
        }
        goto LABEL_857;
      case 94:
        v39 = objc_opt_new(NSMutableDictionary);
        v103 = 16;
        v882[0]._kind = 16;
        v882[0]._object = v39;
        v104 = *((_QWORD *)this + 4);
        if (v104 >= *((_QWORD *)this + 5))
          goto LABEL_759;
        goto LABEL_815;
      case 95:
        v882[0]._kind = 0;
        v882[0]._object = 0;
        v36 = *v5;
        if (*v5 != *v842)
        {
          v882[0]._kind = *(_DWORD *)(v36 - 24);
          v882[0]._object = (_value *)*(id *)(v36 - 16);
          v882[0].var0._integer = *(_QWORD *)(v36 - 8);
          v37 = *v5 - 24;

          *v5 = v37;
        }
        v38 = TUI::Evaluation::ResolvedValue::objectValue((TUI::Evaluation::ResolvedValue *)v882, (const TUI::Evaluation::Context *)*v2);
        v39 = (_value *)objc_claimAutoreleasedReturnValue(v38);

        v882[0]._kind = 0;
        v882[0]._object = 0;
        v40 = *v5;
        if (*v5 != *v842)
        {
          v882[0]._kind = *(_DWORD *)(v40 - 24);
          v882[0]._object = (_value *)*(id *)(v40 - 16);
          v882[0].var0._integer = *(_QWORD *)(v40 - 8);
          v41 = *v5 - 24;

          *v5 = v41;
        }
        v42 = TUI::Evaluation::ResolvedValue::stringValue((TUI::Evaluation::ResolvedValue *)v882, (const TUI::Evaluation::Context *)*v2);
        v43 = (_value *)objc_claimAutoreleasedReturnValue(v42);

        v882[0]._kind = 0;
        v882[0]._object = 0;
        v44 = *v5;
        if (*v5 != *v842)
        {
          v882[0]._kind = *(_DWORD *)(v44 - 24);
          v882[0]._object = (_value *)*(id *)(v44 - 16);
          v882[0].var0._integer = *(_QWORD *)(v44 - 8);
          v45 = *v5 - 24;

          *v5 = v45;
        }
        v46 = TUI::Evaluation::ResolvedValue::objectValue((TUI::Evaluation::ResolvedValue *)v882, (const TUI::Evaluation::Context *)*v2);
        v47 = (void *)objc_claimAutoreleasedReturnValue(v46);

        v49 = objc_opt_class(NSMutableDictionary, v48);
        if ((objc_opt_isKindOfClass(v47, v49) & 1) != 0
          && (objc_opt_respondsToSelector(v43, "copyWithZone:") & (v39 != 0)) == 1)
        {
          v51 = v47;
          v52 = v43;
          objc_msgSend(v51, "setObject:forKeyedSubscript:", v39, v52);
        }
        else
        {
          v383 = *v2;
          v384 = (objc_class *)objc_opt_class(v47, v50);
          v385 = NSStringFromClass(v384);
          v51 = (id)objc_claimAutoreleasedReturnValue(v385);
          v387 = (objc_class *)objc_opt_class(v43, v386);
          v388 = NSStringFromClass(v387);
          v52 = (_value *)objc_claimAutoreleasedReturnValue(v388);
          v389 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("dict.class: %@, key.class: %@"), v51, v52));
          TUI::Evaluation::Context::reportError(v383, 1000, v389);

        }
        v390 = v47;
        v391 = v390;
        v882[0]._kind = 16;
        v882[0]._object = v390;
        v392 = *((_QWORD *)this + 4);
        if (v392 >= *((_QWORD *)this + 5))
        {
          v393 = sub_14D14(v842, (uint64_t)v882);
        }
        else
        {
          *(_DWORD *)v392 = 16;
          *(_QWORD *)(v392 + 8) = v390;
          *(_QWORD *)(v392 + 16) = v882[0].var0._integer;
          v393 = v392 + 24;
        }
        *v5 = v393;

        goto LABEL_856;
      case 96:
        v882[0]._kind = 0;
        v882[0]._object = 0;
        v258 = *v5;
        if (*v5 != *v842)
        {
          v882[0]._kind = *(_DWORD *)(v258 - 24);
          v882[0]._object = (_value *)*(id *)(v258 - 16);
          v882[0].var0._integer = *(_QWORD *)(v258 - 8);
          v259 = *v5 - 24;

          *v5 = v259;
        }
        v260 = TUI::Evaluation::ResolvedValue::objectValue((TUI::Evaluation::ResolvedValue *)v882, (const TUI::Evaluation::Context *)*v2);
        v39 = (_value *)objc_claimAutoreleasedReturnValue(v260);

        if (v39 && (objc_opt_respondsToSelector(v39, "copyWithZone:") & 1) == 0)
        {
          v882[0]._kind = 16;
          v882[0]._object = 0;
          v702 = *((_QWORD *)this + 4);
          if (v702 >= *((_QWORD *)this + 5))
          {
            v703 = sub_14D14(v842, (uint64_t)v882);
          }
          else
          {
            *(_DWORD *)v702 = 16;
            *(_QWORD *)(v702 + 8) = 0;
            *(_QWORD *)(v702 + 16) = v882[0].var0._integer;
            v703 = v702 + 24;
          }
          *v5 = v703;

          v714 = *v2;
          v716 = (objc_class *)objc_opt_class(v39, v715);
          v717 = NSStringFromClass(v716);
          v43 = (_value *)objc_claimAutoreleasedReturnValue(v717);
          v262 = (_value *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("class: %@ not copyable"), v43));
          TUI::Evaluation::Context::reportError(v714, 1000, v262);
        }
        else
        {
          v43 = v39;
          v261 = (_value *)-[_value copyWithZone:](v43, "copyWithZone:", 0);
          v262 = v261;
          v882[0]._kind = 16;
          v882[0]._object = v261;
          v263 = *((_QWORD *)this + 4);
          if (v263 >= *((_QWORD *)this + 5))
          {
            v264 = sub_14D14(v842, (uint64_t)v882);
          }
          else
          {
            *(_DWORD *)v263 = 16;
            *(_QWORD *)(v263 + 8) = v261;
            *(_QWORD *)(v263 + 16) = v882[0].var0._integer;
            v264 = v263 + 24;
          }
          *v5 = v264;

        }
LABEL_856:

        goto LABEL_857;
      case 97:
        v39 = objc_opt_new(NSMutableArray);
        v103 = 16;
        v882[0]._kind = 16;
        v882[0]._object = v39;
        v104 = *((_QWORD *)this + 4);
        if (v104 >= *((_QWORD *)this + 5))
          goto LABEL_759;
        goto LABEL_815;
      case 98:
        v882[0]._kind = 0;
        v882[0]._object = 0;
        v158 = *v5;
        if (*v5 != *v842)
        {
          v882[0]._kind = *(_DWORD *)(v158 - 24);
          v882[0]._object = (_value *)*(id *)(v158 - 16);
          v882[0].var0._integer = *(_QWORD *)(v158 - 8);
          v159 = *v5 - 24;

          *v5 = v159;
        }
        v160 = TUI::Evaluation::ResolvedValue::objectValue((TUI::Evaluation::ResolvedValue *)v882, (const TUI::Evaluation::Context *)*v2);
        v39 = (_value *)objc_claimAutoreleasedReturnValue(v160);

        v882[0]._kind = 0;
        v882[0]._object = 0;
        v161 = *v5;
        if (*v5 != *v842)
        {
          v882[0]._kind = *(_DWORD *)(v161 - 24);
          v882[0]._object = (_value *)*(id *)(v161 - 16);
          v882[0].var0._integer = *(_QWORD *)(v161 - 8);
          v162 = *v5 - 24;

          *v5 = v162;
        }
        v163 = TUI::Evaluation::ResolvedValue::objectValue((TUI::Evaluation::ResolvedValue *)v882, (const TUI::Evaluation::Context *)*v2);
        v164 = (void *)objc_claimAutoreleasedReturnValue(v163);

        v166 = objc_opt_class(NSMutableArray, v165);
        if ((objc_opt_isKindOfClass(v164, v166) & (v39 != 0)) == 1)
        {
          v168 = v164;
          objc_msgSend(v168, "addObject:", v39);
        }
        else
        {
          v512 = *v2;
          v513 = (objc_class *)objc_opt_class(v164, v167);
          v514 = NSStringFromClass(v513);
          v168 = (id)objc_claimAutoreleasedReturnValue(v514);
          v515 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("array.class: %@"), v168));
          TUI::Evaluation::Context::reportError(v512, 1000, v515);

        }
        v516 = v164;
        v517 = v516;
        v882[0]._kind = 16;
        v882[0]._object = v516;
        v518 = *((_QWORD *)this + 4);
        if (v518 >= *((_QWORD *)this + 5))
        {
          v519 = sub_14D14(v842, (uint64_t)v882);
        }
        else
        {
          *(_DWORD *)v518 = 16;
          *(_QWORD *)(v518 + 8) = v516;
          *(_QWORD *)(v518 + 16) = v882[0].var0._integer;
          v519 = v518 + 24;
        }
        *v5 = v519;

        goto LABEL_857;
      case 99:
        v882[0]._kind = 0;
        v882[0]._object = 0;
        v316 = *v5;
        if (*v5 == *v842)
        {
          LODWORD(v875) = 0;
          v876 = 0;
        }
        else
        {
          v882[0]._kind = *(_DWORD *)(v316 - 24);
          v882[0]._object = (_value *)*(id *)(v316 - 16);
          v882[0].var0._integer = *(_QWORD *)(v316 - 8);
          v317 = *v5;
          v318 = *v5 - 24;

          *v5 = v318;
          v319 = *v842;
          LODWORD(v875) = 0;
          v876 = 0;
          if (v318 != v319)
          {
            LODWORD(v875) = *(_DWORD *)(v317 - 48);
            v876 = (_value *)*(id *)(v317 - 40);
            v877 = *(double *)(v317 - 32);
            v320 = *v5 - 24;

            *v5 = v320;
          }
        }
        v623 = TUI::Evaluation::ResolvedValue::stringValue((TUI::Evaluation::ResolvedValue *)&v875, (const TUI::Evaluation::Context *)*v2);
        v624 = objc_claimAutoreleasedReturnValue(v623);
        v625 = (void *)v624;
        if (v624)
          v626 = (__CFString *)v624;
        else
          v626 = &stru_243BF0;
        v600 = v626;

        v627 = TUI::Evaluation::ResolvedValue::stringValue((TUI::Evaluation::ResolvedValue *)v882, (const TUI::Evaluation::Context *)*v2);
        v628 = objc_claimAutoreleasedReturnValue(v627);
        v629 = (void *)v628;
        if (v628)
          v630 = (__CFString *)v628;
        else
          v630 = &stru_243BF0;
        v631 = v630;

        v632 = (id)objc_claimAutoreleasedReturnValue(-[__CFString stringByAppendingString:](v600, "stringByAppendingString:", v631));
        v633 = v632;
        LODWORD(v872) = 9;
        v873 = v632;
        v634 = *((_QWORD *)this + 4);
        if (v634 >= *((_QWORD *)this + 5))
        {
          v635 = sub_14D14(v842, (uint64_t)&v872);
        }
        else
        {
          *(_DWORD *)v634 = 9;
          *(_QWORD *)(v634 + 8) = v632;
          *(double *)(v634 + 16) = v874;
          v635 = v634 + 24;
        }
        *v5 = v635;

LABEL_897:
        goto LABEL_1001;
      default:
        goto LABEL_1004;
    }
  }
}

void sub_113A0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  uint64_t v3;

  TUI::Instruction::Decoder::~Decoder((TUI::Instruction::Decoder *)(v3 - 208));
  _Unwind_Resume(a1);
}

void sub_11C64()
{
  uint64_t v0;

  JUMPOUT(0x11C2CLL);
}

uint64_t sub_11C78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v10;

  if (a2 != a3)
  {
    sub_14CA4((uint64_t)&v10, a3, *(_QWORD *)(a1 + 8), a2);
    v6 = v5;
    v7 = *(_QWORD *)(a1 + 8);
    if (v7 != v5)
    {
      do
      {
        v8 = v7 - 24;

        v7 = v8;
      }
      while (v8 != v6);
    }
    *(_QWORD *)(a1 + 8) = v6;
  }
  return a2;
}

void TUI::Instruction::Evaluation::fixFloatIfNeeded(TUI::Instruction::Evaluation *this)
{
  uint64_t v1;
  const TUI::Evaluation::Context *v3;
  NSNumber *v4;
  void *v5;
  void *v6;

  v1 = *((_QWORD *)this + 4);
  if (v1 != *((_QWORD *)this + 3) && *(_DWORD *)(v1 - 24) == 1)
  {
    TUI::Evaluation::ResolvedValue::floatValue((id *)(v1 - 24), *((const TUI::Evaluation::Context **)this + 2));
    if (fabs(TUI::Evaluation::ResolvedValue::floatValue((id *)(v1 - 24), *((const TUI::Evaluation::Context **)this + 2))) == INFINITY)
    {
      v3 = (const TUI::Evaluation::Context *)*((_QWORD *)this + 2);
      v4 = +[NSNumber numberWithDouble:](NSNumber, "numberWithDouble:", TUI::Evaluation::ResolvedValue::floatValue((id *)(v1 - 24), v3));
      v5 = (void *)objc_claimAutoreleasedReturnValue(v4);
      TUI::Evaluation::Context::reportError((uint64_t)v3, 1028, v5);

      *(_DWORD *)(v1 - 24) = 1;
      v6 = *(void **)(v1 - 16);
      *(_QWORD *)(v1 - 16) = 0;

      *(_QWORD *)(v1 - 8) = 0;
    }
  }
}

void sub_11DF8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

uint64_t sub_11E0C(uint64_t *a1, uint64_t a2)
{
  unint64_t v4;
  uint64_t result;

  v4 = a1[1];
  if (v4 >= a1[2])
  {
    result = sub_14D14(a1, a2);
  }
  else
  {
    *(_DWORD *)v4 = *(_DWORD *)a2;
    *(_QWORD *)(v4 + 8) = *(id *)(a2 + 8);
    *(_QWORD *)(v4 + 16) = *(_QWORD *)(a2 + 16);
    result = v4 + 24;
  }
  a1[1] = result;
  return result;
}

void sub_11E74(uint64_t a1, void *a2)
{
  id v3;
  id v4;
  id v5;
  uint64_t v6;
  void *i;
  void *v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  _BYTE v13[128];

  v3 = a2;
  v9 = 0u;
  v10 = 0u;
  v11 = 0u;
  v12 = 0u;
  v4 = *(id *)(a1 + 32);
  v5 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v9, v13, 16);
  if (v5)
  {
    v6 = *(_QWORD *)v10;
    do
    {
      for (i = 0; i != v5; i = (char *)i + 1)
      {
        if (*(_QWORD *)v10 != v6)
          objc_enumerationMutation(v4);
        v8 = *(void **)(*((_QWORD *)&v9 + 1) + 8 * (_QWORD)i);
        if (objc_msgSend(v8, "userInterfaceLevel", (_QWORD)v9) != (id)-1)
          objc_msgSend(v3, "setUserInterfaceLevel:", objc_msgSend(v8, "userInterfaceLevel"));
        if (objc_msgSend(v8, "displayGamut") != (id)-1)
          objc_msgSend(v3, "setDisplayGamut:", objc_msgSend(v8, "displayGamut"));
        if (objc_msgSend(v8, "accessibilityContrast") != (id)-1)
          objc_msgSend(v3, "setAccessibilityContrast:", objc_msgSend(v8, "accessibilityContrast"));
        if (objc_msgSend(v8, "userInterfaceStyle"))
          objc_msgSend(v3, "setUserInterfaceStyle:", objc_msgSend(v8, "userInterfaceStyle"));
      }
      v5 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v9, v13, 16);
    }
    while (v5);
  }

}

void sub_11FFC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

NSString *TUI::Instruction::Evaluation::systemDesignFromSymbol(TUI::Instruction::Evaluation *this, unsigned __int16 a2)
{
  NSString *v3;
  uint64_t v4;
  __int128 *v5;
  __int128 *v6;
  uint64_t v7;
  int v8;
  NSString *v9;
  id *v10;
  uint64_t **v11;
  NSString *v12;
  uint64_t v13;
  id v14;
  unsigned __int16 v16;
  __int128 *v17;
  __int128 *v18;
  _QWORD *v19;
  unsigned __int16 v20;
  unsigned __int16 *v21;
  char v22;
  void *__p[2];
  char v24;
  NSString *v25;
  _QWORD v26[4];
  _QWORD v27[4];
  _QWORD v28[4];
  _QWORD v29[4];
  _QWORD v30[3];
  id v31;
  __int128 v32;

  v20 = a2;
  v3 = UIFontDescriptorSystemDesignDefault;
  if (!*((_QWORD *)this + 19))
  {
    sub_9350(__p, "default");
    v25 = v3;
    sub_9350(v26, "serif");
    v26[3] = UIFontDescriptorSystemDesignSerif;
    sub_9350(v27, "rounded");
    v27[3] = UIFontDescriptorSystemDesignRounded;
    sub_9350(v28, "monospaced");
    v28[3] = UIFontDescriptorSystemDesignMonospaced;
    sub_9350(v29, "compact");
    v29[3] = UIFontSystemFontDesignCompact;
    sub_9350(v30, "condensed");
    v31 = UIFontSystemFontDesignCondensed;
    v18 = 0;
    v19 = 0;
    v17 = 0;
    v21 = (unsigned __int16 *)&v17;
    v22 = 0;
    v17 = (__int128 *)operator new(0xC0uLL);
    v18 = v17;
    v19 = v17 + 12;
    v4 = 0;
    v18 = (__int128 *)sub_14E24((uint64_t)&v19, (__int128 *)__p, &v32, v17);
    do
    {

      if (SHIBYTE(v30[v4 + 2]) < 0)
        operator delete((void *)v30[v4]);
      v4 -= 4;
    }
    while (v4 != -24);
    v5 = v17;
    v6 = v18;
    if (v17 != v18)
    {
      v7 = *(_QWORD *)(*((_QWORD *)this + 2) + 560);
      do
      {
        sub_14940(__p, v5);
        v16 = 0;
        v8 = TUI::Symbol::Tab::lookup(v7, (unsigned __int8 *)__p);
        v16 = v8;
        if (v8 != 0xFFFF)
        {
          v9 = v25;
          v21 = &v16;
          v10 = (id *)sub_15008((uint64_t)this + 128, &v16, (uint64_t)&std::piecewise_construct, &v21);
          objc_storeStrong(v10 + 3, v9);
        }

        if (v24 < 0)
          operator delete(__p[0]);
        v5 += 2;
      }
      while (v5 != v6);
    }
    __p[0] = &v17;
    sub_14F84((void ***)__p);
  }
  v11 = sub_1529C((_QWORD *)this + 16, &v20);
  if (v11)
  {
    v12 = v3;
    v3 = v11[3];
  }
  else
  {
    v13 = *((_QWORD *)this + 2);
    v14 = TUI::Symbol::Tab::string(*(TUI::Symbol::Tab **)(v13 + 560), v20);
    v12 = (NSString *)objc_claimAutoreleasedReturnValue(v14);
    TUI::Evaluation::Context::reportError(v13, 1000, v12);
  }

  return v3;
}

void sub_12318(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

NSString *TUI::Instruction::Evaluation::textStyleFromSymbol(TUI::Instruction::Evaluation *this, unsigned __int16 a2)
{
  NSString *v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  unint64_t v10;
  __int128 *v11;
  __int128 *v12;
  uint64_t v13;
  int v14;
  NSString *v15;
  id *v16;
  uint64_t **v17;
  NSString *v18;
  uint64_t v19;
  TUI::Symbol::Tab *v20;
  uint64_t v21;
  int v22;
  id v23;
  unsigned __int16 v25;
  __int128 *v26;
  __int128 *v27;
  _WORD v28[7];
  unsigned __int16 v29;
  unsigned __int16 *v30;
  char v31;
  _BYTE v32[8];
  void *__p[2];
  char v34;
  NSString *v35;
  _QWORD v36[4];
  _QWORD v37[4];
  _QWORD v38[4];
  _QWORD v39[4];
  _QWORD v40[4];
  _QWORD v41[4];
  _QWORD v42[4];
  _QWORD v43[4];
  _QWORD v44[4];
  _QWORD v45[4];
  _QWORD v46[4];
  _QWORD v47[4];
  _QWORD v48[4];
  _QWORD v49[4];
  _QWORD v50[4];
  _QWORD v51[4];
  _QWORD v52[4];
  _QWORD v53[4];
  _QWORD v54[4];
  _QWORD v55[4];
  _QWORD v56[4];
  _QWORD v57[4];
  _QWORD v58[4];
  _QWORD v59[4];
  _QWORD v60[4];
  _QWORD v61[4];
  _QWORD v62[4];
  _QWORD v63[4];
  __int128 v64;

  v29 = a2;
  v3 = UIFontTextStyleBody;
  if (!*((_QWORD *)this + 9))
  {
    sub_9350(__p, "headline");
    v35 = UIFontTextStyleHeadline;
    sub_9350(v36, "body");
    v36[3] = v3;
    sub_9350(v37, "title0");
    v37[3] = UIFontTextStyleTitle0;
    sub_9350(v38, "title1");
    v38[3] = UIFontTextStyleTitle1;
    sub_9350(v39, "title2");
    v39[3] = UIFontTextStyleTitle2;
    sub_9350(v40, "title3");
    v40[3] = UIFontTextStyleTitle3;
    sub_9350(v41, "title4");
    v41[3] = UIFontTextStyleTitle4;
    sub_9350(v42, "title5");
    v42[3] = UIFontTextStyleTitle5;
    sub_9350(v43, "callout");
    v43[3] = UIFontTextStyleCallout;
    sub_9350(v44, "caption1");
    v44[3] = UIFontTextStyleCaption1;
    sub_9350(v45, "caption2");
    v45[3] = UIFontTextStyleCaption2;
    sub_9350(v46, "footnote");
    v46[3] = UIFontTextStyleFootnote;
    sub_9350(v47, "footnote1");
    v47[3] = UIFontTextStyleFootnote1;
    sub_9350(v48, "footnote2");
    v48[3] = UIFontTextStyleFootnote2;
    sub_9350(v49, "largetitle");
    v49[3] = UIFontTextStyleLargeTitle;
    sub_9350(v50, "subheadline");
    v50[3] = UIFontTextStyleSubheadline;
    sub_9350(v51, "subtitle");
    v51[3] = UIFontTextStyleSubtitle;
    sub_9350(v52, "subtitle1");
    v52[3] = UIFontTextStyleSubtitle1;
    sub_9350(v53, "subtitle2");
    v53[3] = UIFontTextStyleSubtitle2;
    sub_9350(v54, "subtitle3");
    v54[3] = UIFontTextStyleSubtitle3;
    sub_9350(v55, "section1");
    v55[3] = UIFontTextStyleSection1;
    sub_9350(v56, "section2");
    v56[3] = UIFontTextStyleSection2;
    sub_9350(v57, "section3");
    v57[3] = UIFontTextStyleSection3;
    v4 = kCTUIFontTextStyleShortHeadline;
    sub_9350(v58, "headline-short");
    v58[3] = v4;
    v5 = kCTUIFontTextStyleShortBody;
    sub_9350(v59, "body-short");
    v59[3] = v5;
    v6 = kCTUIFontTextStyleShortSubhead;
    sub_9350(v60, "subhead-short");
    v60[3] = v6;
    v7 = kCTUIFontTextStyleShortFootnote;
    sub_9350(v61, "footnote-short");
    v61[3] = v7;
    v8 = kCTUIFontTextStyleShortCaption1;
    sub_9350(v62, "caption1-short");
    v62[3] = v8;
    v9 = kCTUIFontTextStyleTallBody;
    sub_9350(v63, "body-tall");
    v63[3] = v9;
    v27 = 0;
    *(_QWORD *)v28 = 0;
    v26 = 0;
    v30 = (unsigned __int16 *)&v26;
    v31 = 0;
    v26 = (__int128 *)operator new(0x3A0uLL);
    v27 = v26;
    *(_QWORD *)v28 = v26 + 58;
    v27 = (__int128 *)sub_14E24((uint64_t)v28, (__int128 *)__p, &v64, v26);
    v10 = 928;
    do
    {

      if ((char)v32[v10] < 0)
        operator delete(*(void **)&v28[v10 / 2 + 4]);
      v10 -= 32;
    }
    while (v10);
    v11 = v26;
    v12 = v27;
    if (v26 != v27)
    {
      v13 = *(_QWORD *)(*((_QWORD *)this + 2) + 560);
      do
      {
        sub_14940(__p, v11);
        v25 = 0;
        v14 = TUI::Symbol::Tab::lookup(v13, (unsigned __int8 *)__p);
        v25 = v14;
        if (v14 != 0xFFFF)
        {
          v15 = v35;
          v30 = &v25;
          v16 = (id *)sub_15008((uint64_t)this + 48, &v25, (uint64_t)&std::piecewise_construct, &v30);
          objc_storeStrong(v16 + 3, v15);
        }

        if (v34 < 0)
          operator delete(__p[0]);
        v11 += 2;
      }
      while (v11 != v12);
    }
    __p[0] = &v26;
    sub_14F84((void ***)__p);
  }
  v17 = sub_1529C((_QWORD *)this + 6, &v29);
  if (v17)
  {
    v18 = v3;
    v3 = v17[3];
  }
  else
  {
    v19 = *((_QWORD *)this + 2);
    v20 = *(TUI::Symbol::Tab **)(v19 + 560);
    v21 = *((_QWORD *)v20 + 5);
    if ((unint64_t)(*((_QWORD *)v20 + 6) - v21) < 0xCF)
      v22 = 0xFFFF;
    else
      v22 = *(unsigned __int16 *)(v21 + 206);
    if (v29 == v22)
    {
      v18 = v3;
      v3 = 0;
    }
    else
    {
      v23 = TUI::Symbol::Tab::string(v20, v29);
      v18 = (NSString *)objc_claimAutoreleasedReturnValue(v23);
      TUI::Evaluation::Context::reportError(v19, 1000, v18);
    }
  }

  return v3;
}

void sub_12AC4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

NSString *TUI::Instruction::Evaluation::contentSizeFromSymbol(TUI::Instruction::Evaluation *this, unsigned __int16 a2)
{
  NSString *v3;
  unint64_t v4;
  __int128 *v5;
  __int128 *v6;
  uint64_t v7;
  int v8;
  NSString *v9;
  id *v10;
  uint64_t **v11;
  NSString *v12;
  uint64_t v13;
  TUI::Symbol::Tab *v14;
  uint64_t v15;
  int v16;
  id v17;
  unsigned __int16 v19;
  __int128 *v20;
  __int128 *v21;
  _WORD v22[7];
  unsigned __int16 v23;
  unsigned __int16 *v24;
  char v25;
  _BYTE v26[8];
  void *__p[2];
  char v28;
  NSString *v29;
  _QWORD v30[4];
  _QWORD v31[4];
  _QWORD v32[4];
  _QWORD v33[4];
  _QWORD v34[4];
  _QWORD v35[4];
  _QWORD v36[4];
  _QWORD v37[4];
  _QWORD v38[4];
  _QWORD v39[4];
  _QWORD v40[4];
  __int128 v41;

  v23 = a2;
  v3 = UIContentSizeCategoryUnspecified;
  if (!*((_QWORD *)this + 14))
  {
    sub_9350(__p, "x-small");
    v29 = UIContentSizeCategoryExtraSmall;
    sub_9350(v30, "small");
    v30[3] = UIContentSizeCategorySmall;
    sub_9350(v31, "medium");
    v31[3] = UIContentSizeCategoryMedium;
    sub_9350(v32, "large");
    v32[3] = UIContentSizeCategoryLarge;
    sub_9350(v33, "x-large");
    v33[3] = UIContentSizeCategoryExtraLarge;
    sub_9350(v34, "xx-large");
    v34[3] = UIContentSizeCategoryExtraExtraLarge;
    sub_9350(v35, "xxx-large");
    v35[3] = UIContentSizeCategoryExtraExtraExtraLarge;
    sub_9350(v36, "ax-medium");
    v36[3] = UIContentSizeCategoryAccessibilityMedium;
    sub_9350(v37, "ax-large");
    v37[3] = UIContentSizeCategoryAccessibilityLarge;
    sub_9350(v38, "ax-x-large");
    v38[3] = UIContentSizeCategoryAccessibilityExtraLarge;
    sub_9350(v39, "ax-xx-large");
    v39[3] = UIContentSizeCategoryAccessibilityExtraExtraLarge;
    sub_9350(v40, "ax-xxx-large");
    v40[3] = UIContentSizeCategoryAccessibilityExtraExtraExtraLarge;
    v21 = 0;
    *(_QWORD *)v22 = 0;
    v20 = 0;
    v24 = (unsigned __int16 *)&v20;
    v25 = 0;
    v20 = (__int128 *)operator new(0x180uLL);
    v21 = v20;
    *(_QWORD *)v22 = v20 + 24;
    v21 = (__int128 *)sub_14E24((uint64_t)v22, (__int128 *)__p, &v41, v20);
    v4 = 384;
    do
    {

      if ((char)v26[v4] < 0)
        operator delete(*(void **)&v22[v4 / 2 + 4]);
      v4 -= 32;
    }
    while (v4);
    v5 = v20;
    v6 = v21;
    if (v20 != v21)
    {
      v7 = *(_QWORD *)(*((_QWORD *)this + 2) + 560);
      do
      {
        sub_14940(__p, v5);
        v19 = 0;
        v8 = TUI::Symbol::Tab::lookup(v7, (unsigned __int8 *)__p);
        v19 = v8;
        if (v8 != 0xFFFF)
        {
          v9 = v29;
          v24 = &v19;
          v10 = (id *)sub_15008((uint64_t)this + 88, &v19, (uint64_t)&std::piecewise_construct, &v24);
          objc_storeStrong(v10 + 3, v9);
        }

        if (v28 < 0)
          operator delete(__p[0]);
        v5 += 2;
      }
      while (v5 != v6);
    }
    __p[0] = &v20;
    sub_14F84((void ***)__p);
  }
  v11 = sub_1529C((_QWORD *)this + 11, &v23);
  if (v11)
  {
    v12 = v3;
    v3 = v11[3];
  }
  else
  {
    v13 = *((_QWORD *)this + 2);
    v14 = *(TUI::Symbol::Tab **)(v13 + 560);
    v15 = *((_QWORD *)v14 + 5);
    if ((unint64_t)(*((_QWORD *)v14 + 6) - v15) < 0xCF)
      v16 = 0xFFFF;
    else
      v16 = *(unsigned __int16 *)(v15 + 206);
    if (v23 == v16)
    {
      v12 = v3;
      v3 = 0;
    }
    else
    {
      v17 = TUI::Symbol::Tab::string(v14, v23);
      v12 = (NSString *)objc_claimAutoreleasedReturnValue(v17);
      TUI::Evaluation::Context::reportError(v13, 1000, v12);
    }
  }

  return v3;
}

void sub_12FF0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

double TUI::Instruction::Evaluation::fontWeightFromSymbol(TUI::Instruction::Evaluation *this, unsigned __int16 a2)
{
  double v3;
  _QWORD *v4;
  uint64_t v5;
  double *v6;
  double *v7;
  uint64_t v8;
  __int128 v9;
  int v10;
  UIFontWeight v11;
  uint64_t **v12;
  uint64_t v13;
  id v14;
  void *v15;
  unsigned __int16 v17;
  double *v18;
  double *v19;
  _WORD v20[7];
  unsigned __int16 v21;
  unsigned __int16 *v22;
  char v23;
  _BYTE v24[8];
  void *__p[2];
  uint64_t v26;
  UIFontWeight v27;
  _QWORD v28[4];
  _QWORD v29[4];
  _QWORD v30[4];
  _QWORD v31[4];
  _QWORD v32[4];
  _QWORD v33[4];
  _QWORD v34[4];
  _QWORD v35[4];
  __int128 v36;

  v21 = a2;
  v3 = UIFontWeightRegular;
  v4 = (_QWORD *)((char *)this + 168);
  if (!*((_QWORD *)this + 24))
  {
    sub_9350(__p, "ultralight");
    v27 = UIFontWeightUltraLight;
    sub_9350(v28, "thin");
    *(UIFontWeight *)&v28[3] = UIFontWeightThin;
    sub_9350(v29, "light");
    *(UIFontWeight *)&v29[3] = UIFontWeightLight;
    sub_9350(v30, "regular");
    *(UIFontWeight *)&v30[3] = UIFontWeightRegular;
    sub_9350(v31, "medium");
    *(UIFontWeight *)&v31[3] = UIFontWeightMedium;
    sub_9350(v32, "semibold");
    *(UIFontWeight *)&v32[3] = UIFontWeightSemibold;
    sub_9350(v33, "bold");
    *(UIFontWeight *)&v33[3] = UIFontWeightBold;
    sub_9350(v34, "heavy");
    *(UIFontWeight *)&v34[3] = UIFontWeightHeavy;
    sub_9350(v35, "black");
    *(UIFontWeight *)&v35[3] = UIFontWeightBlack;
    v19 = 0;
    *(_QWORD *)v20 = 0;
    v18 = 0;
    v22 = (unsigned __int16 *)&v18;
    v23 = 0;
    v18 = (double *)operator new(0x120uLL);
    v19 = v18;
    *(_QWORD *)v20 = v18 + 36;
    v19 = (double *)sub_15350((uint64_t)v20, (__int128 *)__p, &v36, v18);
    v5 = 144;
    do
    {
      if ((char)v24[v5 * 2] < 0)
        operator delete(*(void **)&v20[v5 + 4]);
      v5 -= 16;
    }
    while (v5 * 2);
    v6 = v18;
    v7 = v19;
    if (v18 != v19)
    {
      v8 = *(_QWORD *)(*((_QWORD *)this + 2) + 560);
      do
      {
        if (*((char *)v6 + 23) < 0)
        {
          sub_14998(__p, *(void **)v6, *((_QWORD *)v6 + 1));
        }
        else
        {
          v9 = *(_OWORD *)v6;
          v26 = *((_QWORD *)v6 + 2);
          *(_OWORD *)__p = v9;
        }
        v27 = v6[3];
        v17 = 0;
        v10 = TUI::Symbol::Tab::lookup(v8, (unsigned __int8 *)__p);
        v17 = v10;
        if (v10 != 0xFFFF)
        {
          v11 = v27;
          v22 = &v17;
          *((UIFontWeight *)sub_1551C((uint64_t)v4, &v17, (uint64_t)&std::piecewise_construct, &v22) + 3) = v11;
        }
        if (SHIBYTE(v26) < 0)
          operator delete(__p[0]);
        v6 += 4;
      }
      while (v6 != v7);
    }
    __p[0] = &v18;
    sub_15490((void ***)__p);
  }
  v12 = sub_1529C(v4, &v21);
  if (v12)
    return *((double *)v12 + 3);
  v13 = *((_QWORD *)this + 2);
  v14 = TUI::Symbol::Tab::string(*(TUI::Symbol::Tab **)(v13 + 560), v21);
  v15 = (void *)objc_claimAutoreleasedReturnValue(v14);
  TUI::Evaluation::Context::reportError(v13, 1000, v15);

  return v3;
}

void sub_133E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, char a14, uint64_t a15, uint64_t a16, void *__p, uint64_t a18, int a19, __int16 a20,char a21,char a22)
{
  void *v22;

  _Unwind_Resume(a1);
}

uint64_t *TUI::Instruction::Evaluation::fontCapsFromSymbol(TUI::Instruction::Evaluation *this, unsigned __int16 a2)
{
  _QWORD *v3;
  uint64_t v4;
  void **v5;
  void **v6;
  uint64_t v7;
  __int128 v8;
  int v9;
  void *v10;
  uint64_t **v11;
  uint64_t v13;
  id v14;
  void *v15;
  unsigned __int16 v16;
  void **v17;
  void **v18;
  _QWORD *v19;
  unsigned __int16 v20;
  unsigned __int16 *v21;
  char v22;
  void *__p[2];
  void *v24;
  void *v25;
  _QWORD v26[4];
  _QWORD v27[4];
  _QWORD v28[4];
  _QWORD v29[4];
  _QWORD v30[4];
  __int128 v31;

  v20 = a2;
  v3 = (_QWORD *)((char *)this + 208);
  if (!*((_QWORD *)this + 29))
  {
    sub_9350(__p, "default");
    v25 = 0;
    sub_9350(v26, "all");
    v26[3] = 2;
    sub_9350(v27, "titled");
    v27[3] = 4;
    sub_9350(v28, "capitalized");
    v28[3] = 4;
    sub_9350(v29, "lowercased");
    v29[3] = 5;
    sub_9350(v30, "smallcaps");
    v30[3] = 3;
    v18 = 0;
    v19 = 0;
    v17 = 0;
    v21 = (unsigned __int16 *)&v17;
    v22 = 0;
    v17 = (void **)operator new(0xC0uLL);
    v18 = v17;
    v19 = v17 + 24;
    v4 = 0;
    v18 = (void **)sub_15740((uint64_t)&v19, (__int128 *)__p, &v31, v17);
    do
    {
      if (SHIBYTE(v30[v4 + 2]) < 0)
        operator delete((void *)v30[v4]);
      v4 -= 4;
    }
    while (v4 != -24);
    v5 = v17;
    v6 = v18;
    if (v17 != v18)
    {
      v7 = *(_QWORD *)(*((_QWORD *)this + 2) + 560);
      do
      {
        if (*((char *)v5 + 23) < 0)
        {
          sub_14998(__p, *v5, (unint64_t)v5[1]);
        }
        else
        {
          v8 = *(_OWORD *)v5;
          v24 = v5[2];
          *(_OWORD *)__p = v8;
        }
        v25 = v5[3];
        v16 = 0;
        v9 = TUI::Symbol::Tab::lookup(v7, (unsigned __int8 *)__p);
        v16 = v9;
        if (v9 != 0xFFFF)
        {
          v10 = v25;
          v21 = &v16;
          sub_1551C((uint64_t)v3, &v16, (uint64_t)&std::piecewise_construct, &v21)[3] = v10;
        }
        if (SHIBYTE(v24) < 0)
          operator delete(__p[0]);
        v5 += 4;
      }
      while (v5 != v6);
    }
    __p[0] = &v17;
    sub_15490((void ***)__p);
  }
  v11 = sub_1529C(v3, &v20);
  if (v11)
    return v11[3];
  v13 = *((_QWORD *)this + 2);
  v14 = TUI::Symbol::Tab::string(*(TUI::Symbol::Tab **)(v13 + 560), v20);
  v15 = (void *)objc_claimAutoreleasedReturnValue(v14);
  TUI::Evaluation::Context::reportError(v13, 1000, v15);

  return 0;
}

void sub_13740(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, char a14, uint64_t a15, uint64_t a16, void *__p, uint64_t a18, int a19, __int16 a20,char a21,char a22)
{
  void *v22;

  _Unwind_Resume(a1);
}

id sub_13808(void *a1, uint64_t a2)
{
  id v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  objc_class *v8;
  NSString *v9;
  void *v10;
  uint64_t v11;
  objc_class *v12;
  NSString *v13;
  void *v14;
  void *v15;

  v3 = a1;
  if (!v3)
    goto LABEL_4;
  v5 = v3;
  v6 = objc_opt_class(TUIPointerStyle, v4);
  if ((objc_opt_isKindOfClass(v5, v6) & 1) == 0)
  {
    v8 = (objc_class *)objc_opt_class(TUIPointerStyle, v7);
    v9 = NSStringFromClass(v8);
    v10 = (void *)objc_claimAutoreleasedReturnValue(v9);
    v12 = (objc_class *)objc_opt_class(v5, v11);
    v13 = NSStringFromClass(v12);
    v14 = (void *)objc_claimAutoreleasedReturnValue(v13);
    v15 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("expected %@, got %@"), v10, v14));
    TUI::Evaluation::Context::reportError(a2, 1000, v15);

LABEL_4:
    v5 = (void *)objc_claimAutoreleasedReturnValue(+[TUIPointerStyle defaultPointerStyle](TUIPointerStyle, "defaultPointerStyle"));
  }
  return v5;
}

void sub_138E8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

uint64_t *TUI::Instruction::Evaluation::pointerEffectFromSymbol(TUI::Instruction::Evaluation *this, unsigned __int16 a2)
{
  _QWORD *v3;
  uint64_t v4;
  void **v5;
  void **v6;
  uint64_t v7;
  __int128 v8;
  int v9;
  void *v10;
  uint64_t **v11;
  uint64_t v13;
  id v14;
  void *v15;
  unsigned __int16 v16;
  void **v17;
  void **v18;
  _QWORD *v19;
  unsigned __int16 v20;
  unsigned __int16 *v21;
  char v22;
  void *__p[2];
  void *v24;
  void *v25;
  _QWORD v26[4];
  _QWORD v27[4];
  _QWORD v28[4];
  __int128 v29;

  v20 = a2;
  v3 = (_QWORD *)((char *)this + 248);
  if (!*((_QWORD *)this + 34))
  {
    sub_9350(__p, "automatic");
    v25 = 0;
    sub_9350(v26, "lift");
    v26[3] = 2;
    sub_9350(v27, "highlight");
    v27[3] = 1;
    sub_9350(v28, "hover");
    v28[3] = 3;
    v18 = 0;
    v19 = 0;
    v17 = 0;
    v21 = (unsigned __int16 *)&v17;
    v22 = 0;
    v17 = (void **)operator new(0x80uLL);
    v18 = v17;
    v19 = v17 + 16;
    v4 = 0;
    v18 = (void **)sub_1583C((uint64_t)&v19, (__int128 *)__p, &v29, v17);
    do
    {
      if (SHIBYTE(v28[v4 + 2]) < 0)
        operator delete((void *)v28[v4]);
      v4 -= 4;
    }
    while (v4 != -16);
    v5 = v17;
    v6 = v18;
    if (v17 != v18)
    {
      v7 = *(_QWORD *)(*((_QWORD *)this + 2) + 560);
      do
      {
        if (*((char *)v5 + 23) < 0)
        {
          sub_14998(__p, *v5, (unint64_t)v5[1]);
        }
        else
        {
          v8 = *(_OWORD *)v5;
          v24 = v5[2];
          *(_OWORD *)__p = v8;
        }
        v25 = v5[3];
        v16 = 0;
        v9 = TUI::Symbol::Tab::lookup(v7, (unsigned __int8 *)__p);
        v16 = v9;
        if (v9 != 0xFFFF)
        {
          v10 = v25;
          v21 = &v16;
          sub_1551C((uint64_t)v3, &v16, (uint64_t)&std::piecewise_construct, &v21)[3] = v10;
        }
        if (SHIBYTE(v24) < 0)
          operator delete(__p[0]);
        v5 += 4;
      }
      while (v5 != v6);
    }
    __p[0] = &v17;
    sub_15490((void ***)__p);
  }
  v11 = sub_1529C(v3, &v20);
  if (v11)
    return v11[3];
  v13 = *((_QWORD *)this + 2);
  v14 = TUI::Symbol::Tab::string(*(TUI::Symbol::Tab **)(v13 + 560), v20);
  v15 = (void *)objc_claimAutoreleasedReturnValue(v14);
  TUI::Evaluation::Context::reportError(v13, 1000, v15);

  return 0;
}

void sub_13B84(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, char a14, uint64_t a15, uint64_t a16, void *__p, uint64_t a18, int a19, __int16 a20,char a21,char a22)
{
  void *v22;

  _Unwind_Resume(a1);
}

uint64_t *TUI::Instruction::Evaluation::hoverEffectTintModeFromSymbol(TUI::Instruction::Evaluation *this, unsigned __int16 a2)
{
  _QWORD *v3;
  uint64_t v4;
  void **v5;
  void **v6;
  uint64_t v7;
  __int128 v8;
  int v9;
  uint64_t v10;
  uint64_t **v11;
  uint64_t v13;
  id v14;
  void *v15;
  unsigned __int16 v16;
  void **v17;
  void **v18;
  _QWORD *v19;
  unsigned __int16 v20;
  unsigned __int16 *v21;
  char v22;
  void *__p[2];
  void *v24;
  uint64_t v25;
  _QWORD v26[4];
  __int128 v27;

  v20 = a2;
  v3 = (_QWORD *)((char *)this + 328);
  if (!*((_QWORD *)this + 44))
  {
    sub_9350(__p, "overlay");
    v25 = 1;
    sub_9350(v26, "none");
    v26[3] = 0;
    v18 = 0;
    v19 = 0;
    v17 = 0;
    v21 = (unsigned __int16 *)&v17;
    v22 = 0;
    v17 = (void **)operator new(0x40uLL);
    v18 = v17;
    v19 = v17 + 8;
    v4 = 0;
    v18 = (void **)sub_15A34((uint64_t)&v19, (__int128 *)__p, &v27, v17);
    do
    {
      if (SHIBYTE(v26[v4 + 2]) < 0)
        operator delete((void *)v26[v4]);
      v4 -= 4;
    }
    while (v4 != -8);
    v5 = v17;
    v6 = v18;
    if (v17 != v18)
    {
      v7 = *(_QWORD *)(*((_QWORD *)this + 2) + 560);
      do
      {
        if (*((char *)v5 + 23) < 0)
        {
          sub_14998(__p, *v5, (unint64_t)v5[1]);
        }
        else
        {
          v8 = *(_OWORD *)v5;
          v24 = v5[2];
          *(_OWORD *)__p = v8;
        }
        v25 = (uint64_t)v5[3];
        v16 = 0;
        v9 = TUI::Symbol::Tab::lookup(v7, (unsigned __int8 *)__p);
        v16 = v9;
        if (v9 != 0xFFFF)
        {
          v10 = v25;
          v21 = &v16;
          sub_1551C((uint64_t)v3, &v16, (uint64_t)&std::piecewise_construct, &v21)[3] = v10;
        }
        if (SHIBYTE(v24) < 0)
          operator delete(__p[0]);
        v5 += 4;
      }
      while (v5 != v6);
    }
    __p[0] = &v17;
    sub_15490((void ***)__p);
  }
  v11 = sub_1529C(v3, &v20);
  if (v11)
    return v11[3];
  v13 = *((_QWORD *)this + 2);
  v14 = TUI::Symbol::Tab::string(*(TUI::Symbol::Tab **)(v13 + 560), v20);
  v15 = (void *)objc_claimAutoreleasedReturnValue(v14);
  TUI::Evaluation::Context::reportError(v13, 1000, v15);

  return (_QWORD *)(&dword_0 + 1);
}

void sub_13E68(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, char a14, uint64_t a15, uint64_t a16, void *__p, uint64_t a18, int a19, __int16 a20,char a21,char a22)
{
  void *v22;

  _Unwind_Resume(a1);
}

id sub_13F10(void *a1, uint64_t a2)
{
  id v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  objc_class *v8;
  NSString *v9;
  void *v10;
  uint64_t v11;
  objc_class *v12;
  NSString *v13;
  void *v14;
  void *v15;

  v3 = a1;
  if (!v3)
    goto LABEL_4;
  v5 = v3;
  v6 = objc_opt_class(TUIPointerCursor, v4);
  if ((objc_opt_isKindOfClass(v5, v6) & 1) == 0)
  {
    v8 = (objc_class *)objc_opt_class(TUIPointerCursor, v7);
    v9 = NSStringFromClass(v8);
    v10 = (void *)objc_claimAutoreleasedReturnValue(v9);
    v12 = (objc_class *)objc_opt_class(v5, v11);
    v13 = NSStringFromClass(v12);
    v14 = (void *)objc_claimAutoreleasedReturnValue(v13);
    v15 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("expected %@, got %@"), v10, v14));
    TUI::Evaluation::Context::reportError(a2, 1000, v15);

LABEL_4:
    v5 = (void *)objc_claimAutoreleasedReturnValue(+[TUIPointerCursor defaultPointerCursor](TUIPointerCursor, "defaultPointerCursor"));
  }
  return v5;
}

void sub_13FF0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

uint64_t *TUI::Instruction::Evaluation::pointerShapeFromSymbol(TUI::Instruction::Evaluation *this, unsigned __int16 a2)
{
  _QWORD *v3;
  uint64_t v4;
  void **v5;
  void **v6;
  uint64_t v7;
  __int128 v8;
  int v9;
  void *v10;
  uint64_t **v11;
  uint64_t v13;
  id v14;
  void *v15;
  unsigned __int16 v16;
  void **v17;
  void **v18;
  _QWORD *v19;
  unsigned __int16 v20;
  unsigned __int16 *v21;
  char v22;
  void *__p[2];
  void *v24;
  void *v25;
  _QWORD v26[4];
  _QWORD v27[4];
  _QWORD v28[4];
  __int128 v29;

  v20 = a2;
  v3 = (_QWORD *)((char *)this + 288);
  if (!*((_QWORD *)this + 39))
  {
    sub_9350(__p, "default");
    v25 = 0;
    sub_9350(v26, "rounded");
    v26[3] = 1;
    sub_9350(v27, "circle");
    v27[3] = 2;
    sub_9350(v28, "link");
    v28[3] = 3;
    v18 = 0;
    v19 = 0;
    v17 = 0;
    v21 = (unsigned __int16 *)&v17;
    v22 = 0;
    v17 = (void **)operator new(0x80uLL);
    v18 = v17;
    v19 = v17 + 16;
    v4 = 0;
    v18 = (void **)sub_15938((uint64_t)&v19, (__int128 *)__p, &v29, v17);
    do
    {
      if (SHIBYTE(v28[v4 + 2]) < 0)
        operator delete((void *)v28[v4]);
      v4 -= 4;
    }
    while (v4 != -16);
    v5 = v17;
    v6 = v18;
    if (v17 != v18)
    {
      v7 = *(_QWORD *)(*((_QWORD *)this + 2) + 560);
      do
      {
        if (*((char *)v5 + 23) < 0)
        {
          sub_14998(__p, *v5, (unint64_t)v5[1]);
        }
        else
        {
          v8 = *(_OWORD *)v5;
          v24 = v5[2];
          *(_OWORD *)__p = v8;
        }
        v25 = v5[3];
        v16 = 0;
        v9 = TUI::Symbol::Tab::lookup(v7, (unsigned __int8 *)__p);
        v16 = v9;
        if (v9 != 0xFFFF)
        {
          v10 = v25;
          v21 = &v16;
          sub_1551C((uint64_t)v3, &v16, (uint64_t)&std::piecewise_construct, &v21)[3] = v10;
        }
        if (SHIBYTE(v24) < 0)
          operator delete(__p[0]);
        v5 += 4;
      }
      while (v5 != v6);
    }
    __p[0] = &v17;
    sub_15490((void ***)__p);
  }
  v11 = sub_1529C(v3, &v20);
  if (v11)
    return v11[3];
  v13 = *((_QWORD *)this + 2);
  v14 = TUI::Symbol::Tab::string(*(TUI::Symbol::Tab **)(v13 + 560), v20);
  v15 = (void *)objc_claimAutoreleasedReturnValue(v14);
  TUI::Evaluation::Context::reportError(v13, 1000, v15);

  return 0;
}

void sub_1428C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, char a14, uint64_t a15, uint64_t a16, void *__p, uint64_t a18, int a19, __int16 a20,char a21,char a22)
{
  void *v22;

  _Unwind_Resume(a1);
}

id sub_1434C(void *a1, uint64_t a2)
{
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  objc_class *v7;
  NSString *v8;
  void *v9;
  uint64_t v10;
  objc_class *v11;
  NSString *v12;
  void *v13;
  void *v14;

  v4 = a1;
  if (v4)
  {
    v5 = objc_opt_class(TUISnap, v3);
    if ((objc_opt_isKindOfClass(v4, v5) & 1) == 0)
    {
      v7 = (objc_class *)objc_opt_class(TUISnap, v6);
      v8 = NSStringFromClass(v7);
      v9 = (void *)objc_claimAutoreleasedReturnValue(v8);
      v11 = (objc_class *)objc_opt_class(v4, v10);
      v12 = NSStringFromClass(v11);
      v13 = (void *)objc_claimAutoreleasedReturnValue(v12);
      v14 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("expected %@, got %@"), v9, v13));
      TUI::Evaluation::Context::reportError(a2, 1000, v14);

      v4 = 0;
    }
  }
  return v4;
}

void sub_1441C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

id sub_14450(void *a1, uint64_t a2)
{
  id v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  objc_class *v8;
  NSString *v9;
  void *v10;
  uint64_t v11;
  objc_class *v12;
  NSString *v13;
  void *v14;
  void *v15;

  v3 = a1;
  if (!v3)
    goto LABEL_4;
  v5 = v3;
  v6 = objc_opt_class(TUIFocusStyle, v4);
  if ((objc_opt_isKindOfClass(v5, v6) & 1) == 0)
  {
    v8 = (objc_class *)objc_opt_class(TUIFocusStyle, v7);
    v9 = NSStringFromClass(v8);
    v10 = (void *)objc_claimAutoreleasedReturnValue(v9);
    v12 = (objc_class *)objc_opt_class(v5, v11);
    v13 = NSStringFromClass(v12);
    v14 = (void *)objc_claimAutoreleasedReturnValue(v13);
    v15 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("expected %@, got %@"), v10, v14));
    TUI::Evaluation::Context::reportError(a2, 1000, v15);

LABEL_4:
    v5 = (void *)objc_claimAutoreleasedReturnValue(+[TUIFocusStyle defaultFocusStyle](TUIFocusStyle, "defaultFocusStyle"));
  }
  return v5;
}

void sub_14530(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

uint64_t *TUI::Instruction::Evaluation::focusEffectFromSymbol(TUI::Instruction::Evaluation *this, unsigned __int16 a2)
{
  _QWORD *v3;
  uint64_t v4;
  void **v5;
  void **v6;
  uint64_t v7;
  __int128 v8;
  int v9;
  void *v10;
  uint64_t **v11;
  uint64_t v13;
  id v14;
  void *v15;
  unsigned __int16 v16;
  void **v17;
  void **v18;
  _QWORD *v19;
  unsigned __int16 v20;
  unsigned __int16 *v21;
  char v22;
  void *__p[2];
  void *v24;
  void *v25;
  _QWORD v26[4];
  _QWORD v27[4];
  _QWORD v28[4];
  _QWORD v29[4];
  __int128 v30;

  v20 = a2;
  v3 = (_QWORD *)((char *)this + 368);
  if (!*((_QWORD *)this + 49))
  {
    sub_9350(__p, "none");
    v25 = 0;
    sub_9350(v26, "default");
    v26[3] = 1;
    sub_9350(v27, "inside");
    v27[3] = 2;
    sub_9350(v28, "outside");
    v28[3] = 3;
    sub_9350(v29, "background");
    v29[3] = 4;
    v18 = 0;
    v19 = 0;
    v17 = 0;
    v21 = (unsigned __int16 *)&v17;
    v22 = 0;
    v17 = (void **)operator new(0xA0uLL);
    v18 = v17;
    v19 = v17 + 20;
    v4 = 0;
    v18 = (void **)sub_15B30((uint64_t)&v19, (__int128 *)__p, &v30, v17);
    do
    {
      if (SHIBYTE(v29[v4 + 2]) < 0)
        operator delete((void *)v29[v4]);
      v4 -= 4;
    }
    while (v4 != -20);
    v5 = v17;
    v6 = v18;
    if (v17 != v18)
    {
      v7 = *(_QWORD *)(*((_QWORD *)this + 2) + 560);
      do
      {
        if (*((char *)v5 + 23) < 0)
        {
          sub_14998(__p, *v5, (unint64_t)v5[1]);
        }
        else
        {
          v8 = *(_OWORD *)v5;
          v24 = v5[2];
          *(_OWORD *)__p = v8;
        }
        v25 = v5[3];
        v16 = 0;
        v9 = TUI::Symbol::Tab::lookup(v7, (unsigned __int8 *)__p);
        v16 = v9;
        if (v9 != 0xFFFF)
        {
          v10 = v25;
          v21 = &v16;
          sub_1551C((uint64_t)v3, &v16, (uint64_t)&std::piecewise_construct, &v21)[3] = v10;
        }
        if (SHIBYTE(v24) < 0)
          operator delete(__p[0]);
        v5 += 4;
      }
      while (v5 != v6);
    }
    __p[0] = &v17;
    sub_15490((void ***)__p);
  }
  v11 = sub_1529C(v3, &v20);
  if (v11)
    return v11[3];
  v13 = *((_QWORD *)this + 2);
  v14 = TUI::Symbol::Tab::string(*(TUI::Symbol::Tab **)(v13 + 560), v20);
  v15 = (void *)objc_claimAutoreleasedReturnValue(v14);
  TUI::Evaluation::Context::reportError(v13, 1000, v15);

  return (_QWORD *)(&dword_0 + 1);
}

void sub_147EC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, char a14, uint64_t a15, uint64_t a16, void *__p, uint64_t a18, int a19, __int16 a20,char a21,char a22)
{
  void *v22;

  _Unwind_Resume(a1);
}

uint64_t sub_148B0(uint64_t a1)
{

  if (*(char *)(a1 + 23) < 0)
    operator delete(*(void **)a1);
  return a1;
}

uint64_t sub_148E8(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v2 = *(std::__shared_weak_count **)(a1 + 8);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return a1;
}

_QWORD *sub_14940(_QWORD *__dst, __int128 *a2)
{
  __int128 v4;

  if (*((char *)a2 + 23) < 0)
  {
    sub_14998(__dst, *(void **)a2, *((_QWORD *)a2 + 1));
  }
  else
  {
    v4 = *a2;
    __dst[2] = *((_QWORD *)a2 + 2);
    *(_OWORD *)__dst = v4;
  }
  __dst[3] = *((id *)a2 + 3);
  return __dst;
}

void *sub_14998(_BYTE *__dst, void *__src, unint64_t a3)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v5 = __dst;
  if (a3 > 0x16)
  {
    if (a3 >= 0x7FFFFFFFFFFFFFF8)
      sub_9400();
    v6 = (a3 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((a3 | 7) != 0x17)
      v6 = a3 | 7;
    v7 = v6 + 1;
    v8 = operator new(v6 + 1);
    v5[1] = a3;
    v5[2] = v7 | 0x8000000000000000;
    *v5 = v8;
    v5 = v8;
  }
  else
  {
    __dst[23] = a3;
  }
  return memmove(v5, __src, a3 + 1);
}

void sub_14A24(void ***a1)
{
  void **v1;
  id *v2;
  id *v4;
  void *v5;
  id *v6;

  v1 = *a1;
  v2 = (id *)**a1;
  if (v2)
  {
    v4 = (id *)v1[1];
    v5 = **a1;
    if (v4 != v2)
    {
      do
      {
        v6 = v4 - 3;

        v4 = v6;
      }
      while (v6 != v2);
      v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

uint64_t sub_14A98(uint64_t a1)
{
  void *v2;

  sub_14AD0(a1, *(id **)(a1 + 16));
  v2 = *(void **)a1;
  *(_QWORD *)a1 = 0;
  if (v2)
    operator delete(v2);
  return a1;
}

void sub_14AD0(uint64_t a1, id *a2)
{
  id *v2;
  id *v3;

  if (a2)
  {
    v2 = a2;
    do
    {
      v3 = (id *)*v2;

      operator delete(v2);
      v2 = v3;
    }
    while (v3);
  }
}

uint64_t sub_14B0C(uint64_t a1)
{
  _QWORD *v2;
  _QWORD *v3;
  void *v4;

  v2 = *(_QWORD **)(a1 + 16);
  if (v2)
  {
    do
    {
      v3 = (_QWORD *)*v2;
      operator delete(v2);
      v2 = v3;
    }
    while (v3);
  }
  v4 = *(void **)a1;
  *(_QWORD *)a1 = 0;
  if (v4)
    operator delete(v4);
  return a1;
}

uint64_t *sub_14B54(uint64_t *result, _QWORD *a2)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v3 = result;
  v5 = *result;
  v4 = result[1];
  v6 = a2[1];
  if (v4 != *result)
  {
    v7 = 0;
    do
    {
      v8 = v6 + v7;
      *(_DWORD *)(v6 + v7 - 24) = *(_DWORD *)(v4 + v7 - 24);
      result = (uint64_t *)*(id *)(v4 + v7 - 16);
      *(_QWORD *)(v8 - 16) = result;
      *(_QWORD *)(v8 - 8) = *(_QWORD *)(v4 + v7 - 8);
      v7 -= 24;
    }
    while (v4 + v7 != v5);
    v6 += v7;
  }
  a2[1] = v6;
  v9 = *v3;
  *v3 = v6;
  a2[1] = v9;
  v10 = v3[1];
  v3[1] = a2[2];
  a2[2] = v10;
  v11 = v3[2];
  v3[2] = a2[3];
  a2[3] = v11;
  *a2 = a2[1];
  return result;
}

void *sub_14C10(uint64_t a1, unint64_t a2)
{
  if (a2 >= 0xAAAAAAAAAAAAAABLL)
    sub_69F8();
  return operator new(24 * a2);
}

uint64_t sub_14C54(uint64_t a1)
{
  uint64_t i;
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 8);
  for (i = *(_QWORD *)(a1 + 16); i != v3; i = *(_QWORD *)(a1 + 16))
  {
    *(_QWORD *)(a1 + 16) = i - 24;

  }
  if (*(_QWORD *)a1)
    operator delete(*(void **)a1);
  return a1;
}

uint64_t sub_14CA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;

  v5 = a2;
  if (a2 == a3)
    return a2;
  v6 = a3;
  do
  {
    *(_DWORD *)a4 = *(_DWORD *)v5;
    objc_storeStrong((id *)(a4 + 8), *(id *)(v5 + 8));
    *(_QWORD *)(a4 + 16) = *(_QWORD *)(v5 + 16);
    a4 += 24;
    v5 += 24;
  }
  while (v5 != v6);
  return v6;
}

uint64_t sub_14D14(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[5];

  v3 = *a1;
  v4 = 0xAAAAAAAAAAAAAAABLL * ((a1[1] - *a1) >> 3);
  v5 = v4 + 1;
  if (v4 + 1 > 0xAAAAAAAAAAAAAAALL)
    sub_6F9C();
  v7 = (uint64_t)(a1 + 2);
  v8 = 0xAAAAAAAAAAAAAAABLL * ((a1[2] - v3) >> 3);
  if (2 * v8 > v5)
    v5 = 2 * v8;
  if (v8 >= 0x555555555555555)
    v9 = 0xAAAAAAAAAAAAAAALL;
  else
    v9 = v5;
  v14[4] = a1 + 2;
  if (v9)
    v10 = (char *)sub_14C10(v7, v9);
  else
    v10 = 0;
  v11 = &v10[24 * v4];
  v14[0] = v10;
  v14[1] = v11;
  v14[3] = &v10[24 * v9];
  *(_DWORD *)v11 = *(_DWORD *)a2;
  *((_QWORD *)v11 + 1) = *(id *)(a2 + 8);
  *((_QWORD *)v11 + 2) = *(_QWORD *)(a2 + 16);
  v14[2] = v11 + 24;
  sub_14B54(a1, v14);
  v12 = a1[1];
  sub_14C54((uint64_t)v14);
  return v12;
}

void sub_14E10(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_14C54((uint64_t)va);
  _Unwind_Resume(a1);
}

_QWORD *sub_14E24(uint64_t a1, __int128 *a2, __int128 *a3, _QWORD *__dst)
{
  _QWORD *v4;
  __int128 *v6;
  _QWORD v8[3];
  char v9;
  void *v10;
  char *v11;

  v4 = __dst;
  v10 = __dst;
  v11 = (char *)__dst;
  v8[0] = a1;
  v8[1] = &v10;
  v8[2] = &v11;
  v9 = 0;
  if (a2 != a3)
  {
    v6 = a2;
    do
    {
      sub_14940(v4, v6);
      v6 += 2;
      v4 = v11 + 32;
      v11 += 32;
    }
    while (v6 != a3);
  }
  v9 = 1;
  sub_14EC4((uint64_t)v8);
  return v4;
}

void sub_14EB0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_14EC4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_14EC4(uint64_t a1)
{
  if (!*(_BYTE *)(a1 + 24))
    sub_14EF8((uint64_t *)a1);
  return a1;
}

void sub_14EF8(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = (uint64_t *)a1[1];
  v1 = (uint64_t *)a1[2];
  v3 = *v1;
  v4 = *v2;
  if (*v1 != *v2)
  {
    v5 = *a1;
    do
    {
      v3 -= 32;
      sub_14F48(v5, v3);
    }
    while (v3 != v4);
  }
}

void sub_14F48(uint64_t a1, uint64_t a2)
{

  if (*(char *)(a2 + 23) < 0)
    operator delete(*(void **)a2);
}

void sub_14F84(void ***a1)
{
  void **v1;
  void *v2;
  uint64_t v4;
  void *v5;

  v1 = *a1;
  v2 = **a1;
  if (v2)
  {
    v4 = (uint64_t)v1[1];
    v5 = **a1;
    if ((void *)v4 != v2)
    {
      do
      {
        v4 -= 32;
        sub_14F48((uint64_t)(v1 + 2), v4);
      }
      while ((void *)v4 != v2);
      v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

_QWORD *sub_15008(uint64_t a1, unsigned __int16 *a2, uint64_t a3, _WORD **a4)
{
  unint64_t v4;
  unint64_t v7;
  unint64_t v8;
  uint8x8_t v9;
  void **v10;
  _QWORD *v11;
  unint64_t v12;
  _QWORD *v13;
  float v14;
  float v15;
  _BOOL8 v16;
  unint64_t v17;
  unint64_t v18;
  size_t v19;
  uint64_t v20;
  _QWORD *v21;
  unint64_t v22;

  v7 = *a2;
  v8 = *(_QWORD *)(a1 + 8);
  if (v8)
  {
    v9 = (uint8x8_t)vcnt_s8((int8x8_t)v8);
    v9.i16[0] = vaddlv_u8(v9);
    if (v9.u32[0] > 1uLL)
    {
      v4 = *a2;
      if (v8 <= v7)
        v4 = v7 % v8;
    }
    else
    {
      v4 = ((_DWORD)v8 - 1) & v7;
    }
    v10 = *(void ***)(*(_QWORD *)a1 + 8 * v4);
    if (v10)
    {
      v11 = *v10;
      if (*v10)
      {
        do
        {
          v12 = v11[1];
          if (v12 == v7)
          {
            if (*((unsigned __int16 *)v11 + 8) == (_DWORD)v7)
              return v11;
          }
          else
          {
            if (v9.u32[0] > 1uLL)
            {
              if (v12 >= v8)
                v12 %= v8;
            }
            else
            {
              v12 &= v8 - 1;
            }
            if (v12 != v4)
              break;
          }
          v11 = (_QWORD *)*v11;
        }
        while (v11);
      }
    }
  }
  v13 = (_QWORD *)(a1 + 16);
  v11 = operator new(0x20uLL);
  *v11 = 0;
  v11[1] = v7;
  *((_WORD *)v11 + 8) = **a4;
  v11[3] = 0;
  v14 = (float)(unint64_t)(*(_QWORD *)(a1 + 24) + 1);
  v15 = *(float *)(a1 + 32);
  if (!v8 || (float)(v15 * (float)v8) < v14)
  {
    v16 = 1;
    if (v8 >= 3)
      v16 = (v8 & (v8 - 1)) != 0;
    v17 = v16 | (2 * v8);
    v18 = vcvtps_u32_f32(v14 / v15);
    if (v17 <= v18)
      v19 = v18;
    else
      v19 = v17;
    sub_6A20(a1, v19);
    v8 = *(_QWORD *)(a1 + 8);
    if ((v8 & (v8 - 1)) != 0)
    {
      if (v8 <= v7)
        v4 = v7 % v8;
      else
        v4 = v7;
    }
    else
    {
      v4 = ((_DWORD)v8 - 1) & v7;
    }
  }
  v20 = *(_QWORD *)a1;
  v21 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v4);
  if (v21)
  {
    *v11 = *v21;
LABEL_38:
    *v21 = v11;
    goto LABEL_39;
  }
  *v11 = *v13;
  *v13 = v11;
  *(_QWORD *)(v20 + 8 * v4) = v13;
  if (*v11)
  {
    v22 = *(_QWORD *)(*v11 + 8);
    if ((v8 & (v8 - 1)) != 0)
    {
      if (v22 >= v8)
        v22 %= v8;
    }
    else
    {
      v22 &= v8 - 1;
    }
    v21 = (_QWORD *)(*(_QWORD *)a1 + 8 * v22);
    goto LABEL_38;
  }
LABEL_39:
  ++*(_QWORD *)(a1 + 24);
  return v11;
}

void sub_1523C(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  sub_15258(v2, v1);
  _Unwind_Resume(a1);
}

void sub_15258(uint64_t a1, id *a2)
{
  if (*(_BYTE *)(a1 + 8))
  {

  }
  else if (!a2)
  {
    return;
  }
  operator delete(a2);
}

uint64_t **sub_1529C(_QWORD *a1, unsigned __int16 *a2)
{
  int8x8_t v2;
  unint64_t v3;
  uint8x8_t v4;
  unint64_t v5;
  uint64_t ***v6;
  uint64_t **result;
  unint64_t v8;

  v2 = (int8x8_t)a1[1];
  if (!*(_QWORD *)&v2)
    return 0;
  v3 = *a2;
  v4 = (uint8x8_t)vcnt_s8(v2);
  v4.i16[0] = vaddlv_u8(v4);
  if (v4.u32[0] > 1uLL)
  {
    v5 = *a2;
    if (*(_QWORD *)&v2 <= v3)
      v5 = v3 % *(_QWORD *)&v2;
  }
  else
  {
    v5 = (v2.i32[0] - 1) & v3;
  }
  v6 = *(uint64_t ****)(*a1 + 8 * v5);
  if (!v6)
    return 0;
  for (result = *v6; result; result = (uint64_t **)*result)
  {
    v8 = (unint64_t)result[1];
    if (v8 == v3)
    {
      if (*((unsigned __int16 *)result + 8) == (_DWORD)v3)
        return result;
    }
    else
    {
      if (v4.u32[0] > 1uLL)
      {
        if (v8 >= *(_QWORD *)&v2)
          v8 %= *(_QWORD *)&v2;
      }
      else
      {
        v8 &= *(_QWORD *)&v2 - 1;
      }
      if (v8 != v5)
        return 0;
    }
  }
  return result;
}

_QWORD *sub_15350(uint64_t a1, __int128 *a2, __int128 *a3, _QWORD *__dst)
{
  _QWORD *v4;
  __int128 *v6;
  __int128 v7;
  _QWORD *v8;
  _QWORD v10[3];
  char v11;
  void *v12;
  _QWORD *v13;

  v4 = __dst;
  v12 = __dst;
  v13 = __dst;
  v10[0] = a1;
  v10[1] = &v12;
  v10[2] = &v13;
  v11 = 0;
  if (a2 != a3)
  {
    v6 = a2;
    do
    {
      if (*((char *)v6 + 23) < 0)
      {
        sub_14998(v4, *(void **)v6, *((_QWORD *)v6 + 1));
        v8 = v13;
      }
      else
      {
        v7 = *v6;
        v4[2] = *((_QWORD *)v6 + 2);
        *(_OWORD *)v4 = v7;
        v8 = v4;
      }
      v4[3] = *((_QWORD *)v6 + 3);
      v6 += 2;
      v4 = v8 + 4;
      v13 = v8 + 4;
    }
    while (v6 != a3);
  }
  v11 = 1;
  sub_15418((uint64_t)v10);
  return v4;
}

void sub_15404(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_15418((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_15418(uint64_t a1)
{
  if (!*(_BYTE *)(a1 + 24))
    sub_1544C(a1);
  return a1;
}

void sub_1544C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = **(_QWORD **)(a1 + 16);
  v2 = **(_QWORD **)(a1 + 8);
  while (v1 != v2)
  {
    if (*(char *)(v1 - 9) < 0)
      operator delete(*(void **)(v1 - 32));
    v1 -= 32;
  }
}

void sub_15490(void ***a1)
{
  void **v2;

  v2 = *a1;
  if (*v2)
  {
    sub_154D0((uint64_t *)v2);
    operator delete(**a1);
  }
}

void sub_154D0(uint64_t *a1)
{
  uint64_t v2;
  uint64_t i;

  v2 = *a1;
  for (i = a1[1]; i != v2; i -= 32)
  {
    if (*(char *)(i - 9) < 0)
      operator delete(*(void **)(i - 32));
  }
  a1[1] = v2;
}

_QWORD *sub_1551C(uint64_t a1, unsigned __int16 *a2, uint64_t a3, _WORD **a4)
{
  unint64_t v4;
  unint64_t v7;
  unint64_t v8;
  uint8x8_t v9;
  void **v10;
  _QWORD *v11;
  unint64_t v12;
  float v13;
  float v14;
  _BOOL8 v15;
  unint64_t v16;
  unint64_t v17;
  size_t v18;
  uint64_t v19;
  _QWORD *v20;
  unint64_t v21;

  v7 = *a2;
  v8 = *(_QWORD *)(a1 + 8);
  if (v8)
  {
    v9 = (uint8x8_t)vcnt_s8((int8x8_t)v8);
    v9.i16[0] = vaddlv_u8(v9);
    if (v9.u32[0] > 1uLL)
    {
      v4 = *a2;
      if (v8 <= v7)
        v4 = v7 % v8;
    }
    else
    {
      v4 = ((_DWORD)v8 - 1) & v7;
    }
    v10 = *(void ***)(*(_QWORD *)a1 + 8 * v4);
    if (v10)
    {
      v11 = *v10;
      if (*v10)
      {
        do
        {
          v12 = v11[1];
          if (v12 == v7)
          {
            if (*((unsigned __int16 *)v11 + 8) == (_DWORD)v7)
              return v11;
          }
          else
          {
            if (v9.u32[0] > 1uLL)
            {
              if (v12 >= v8)
                v12 %= v8;
            }
            else
            {
              v12 &= v8 - 1;
            }
            if (v12 != v4)
              break;
          }
          v11 = (_QWORD *)*v11;
        }
        while (v11);
      }
    }
  }
  v11 = operator new(0x20uLL);
  *v11 = 0;
  v11[1] = v7;
  *((_WORD *)v11 + 8) = **a4;
  v11[3] = 0;
  v13 = (float)(unint64_t)(*(_QWORD *)(a1 + 24) + 1);
  v14 = *(float *)(a1 + 32);
  if (!v8 || (float)(v14 * (float)v8) < v13)
  {
    v15 = 1;
    if (v8 >= 3)
      v15 = (v8 & (v8 - 1)) != 0;
    v16 = v15 | (2 * v8);
    v17 = vcvtps_u32_f32(v13 / v14);
    if (v16 <= v17)
      v18 = v17;
    else
      v18 = v16;
    sub_6A20(a1, v18);
    v8 = *(_QWORD *)(a1 + 8);
    if ((v8 & (v8 - 1)) != 0)
    {
      if (v8 <= v7)
        v4 = v7 % v8;
      else
        v4 = v7;
    }
    else
    {
      v4 = ((_DWORD)v8 - 1) & v7;
    }
  }
  v19 = *(_QWORD *)a1;
  v20 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v4);
  if (v20)
  {
    *v11 = *v20;
LABEL_38:
    *v20 = v11;
    goto LABEL_39;
  }
  *v11 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v11;
  *(_QWORD *)(v19 + 8 * v4) = a1 + 16;
  if (*v11)
  {
    v21 = *(_QWORD *)(*v11 + 8);
    if ((v8 & (v8 - 1)) != 0)
    {
      if (v21 >= v8)
        v21 %= v8;
    }
    else
    {
      v21 &= v8 - 1;
    }
    v20 = (_QWORD *)(*(_QWORD *)a1 + 8 * v21);
    goto LABEL_38;
  }
LABEL_39:
  ++*(_QWORD *)(a1 + 24);
  return v11;
}

void sub_1572C(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_15740(uint64_t a1, __int128 *a2, __int128 *a3, _QWORD *__dst)
{
  _QWORD *v4;
  __int128 *v6;
  __int128 v7;
  _QWORD *v8;
  _QWORD v10[3];
  char v11;
  void *v12;
  _QWORD *v13;

  v4 = __dst;
  v12 = __dst;
  v13 = __dst;
  v10[0] = a1;
  v10[1] = &v12;
  v10[2] = &v13;
  v11 = 0;
  if (a2 != a3)
  {
    v6 = a2;
    do
    {
      if (*((char *)v6 + 23) < 0)
      {
        sub_14998(v4, *(void **)v6, *((_QWORD *)v6 + 1));
        v8 = v13;
      }
      else
      {
        v7 = *v6;
        v4[2] = *((_QWORD *)v6 + 2);
        *(_OWORD *)v4 = v7;
        v8 = v4;
      }
      v4[3] = *((_QWORD *)v6 + 3);
      v6 += 2;
      v4 = v8 + 4;
      v13 = v8 + 4;
    }
    while (v6 != a3);
  }
  v11 = 1;
  sub_15808((uint64_t)v10);
  return v4;
}

void sub_157F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_15808((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_15808(uint64_t a1)
{
  if (!*(_BYTE *)(a1 + 24))
    sub_1544C(a1);
  return a1;
}

_QWORD *sub_1583C(uint64_t a1, __int128 *a2, __int128 *a3, _QWORD *__dst)
{
  _QWORD *v4;
  __int128 *v6;
  __int128 v7;
  _QWORD *v8;
  _QWORD v10[3];
  char v11;
  void *v12;
  _QWORD *v13;

  v4 = __dst;
  v12 = __dst;
  v13 = __dst;
  v10[0] = a1;
  v10[1] = &v12;
  v10[2] = &v13;
  v11 = 0;
  if (a2 != a3)
  {
    v6 = a2;
    do
    {
      if (*((char *)v6 + 23) < 0)
      {
        sub_14998(v4, *(void **)v6, *((_QWORD *)v6 + 1));
        v8 = v13;
      }
      else
      {
        v7 = *v6;
        v4[2] = *((_QWORD *)v6 + 2);
        *(_OWORD *)v4 = v7;
        v8 = v4;
      }
      v4[3] = *((_QWORD *)v6 + 3);
      v6 += 2;
      v4 = v8 + 4;
      v13 = v8 + 4;
    }
    while (v6 != a3);
  }
  v11 = 1;
  sub_15904((uint64_t)v10);
  return v4;
}

void sub_158F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_15904((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_15904(uint64_t a1)
{
  if (!*(_BYTE *)(a1 + 24))
    sub_1544C(a1);
  return a1;
}

_QWORD *sub_15938(uint64_t a1, __int128 *a2, __int128 *a3, _QWORD *__dst)
{
  _QWORD *v4;
  __int128 *v6;
  __int128 v7;
  _QWORD *v8;
  _QWORD v10[3];
  char v11;
  void *v12;
  _QWORD *v13;

  v4 = __dst;
  v12 = __dst;
  v13 = __dst;
  v10[0] = a1;
  v10[1] = &v12;
  v10[2] = &v13;
  v11 = 0;
  if (a2 != a3)
  {
    v6 = a2;
    do
    {
      if (*((char *)v6 + 23) < 0)
      {
        sub_14998(v4, *(void **)v6, *((_QWORD *)v6 + 1));
        v8 = v13;
      }
      else
      {
        v7 = *v6;
        v4[2] = *((_QWORD *)v6 + 2);
        *(_OWORD *)v4 = v7;
        v8 = v4;
      }
      v4[3] = *((_QWORD *)v6 + 3);
      v6 += 2;
      v4 = v8 + 4;
      v13 = v8 + 4;
    }
    while (v6 != a3);
  }
  v11 = 1;
  sub_15A00((uint64_t)v10);
  return v4;
}

void sub_159EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_15A00((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_15A00(uint64_t a1)
{
  if (!*(_BYTE *)(a1 + 24))
    sub_1544C(a1);
  return a1;
}

_QWORD *sub_15A34(uint64_t a1, __int128 *a2, __int128 *a3, _QWORD *__dst)
{
  _QWORD *v4;
  __int128 *v6;
  __int128 v7;
  _QWORD *v8;
  _QWORD v10[3];
  char v11;
  void *v12;
  _QWORD *v13;

  v4 = __dst;
  v12 = __dst;
  v13 = __dst;
  v10[0] = a1;
  v10[1] = &v12;
  v10[2] = &v13;
  v11 = 0;
  if (a2 != a3)
  {
    v6 = a2;
    do
    {
      if (*((char *)v6 + 23) < 0)
      {
        sub_14998(v4, *(void **)v6, *((_QWORD *)v6 + 1));
        v8 = v13;
      }
      else
      {
        v7 = *v6;
        v4[2] = *((_QWORD *)v6 + 2);
        *(_OWORD *)v4 = v7;
        v8 = v4;
      }
      v4[3] = *((_QWORD *)v6 + 3);
      v6 += 2;
      v4 = v8 + 4;
      v13 = v8 + 4;
    }
    while (v6 != a3);
  }
  v11 = 1;
  sub_15AFC((uint64_t)v10);
  return v4;
}

void sub_15AE8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_15AFC((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_15AFC(uint64_t a1)
{
  if (!*(_BYTE *)(a1 + 24))
    sub_1544C(a1);
  return a1;
}

_QWORD *sub_15B30(uint64_t a1, __int128 *a2, __int128 *a3, _QWORD *__dst)
{
  _QWORD *v4;
  __int128 *v6;
  __int128 v7;
  _QWORD *v8;
  _QWORD v10[3];
  char v11;
  void *v12;
  _QWORD *v13;

  v4 = __dst;
  v12 = __dst;
  v13 = __dst;
  v10[0] = a1;
  v10[1] = &v12;
  v10[2] = &v13;
  v11 = 0;
  if (a2 != a3)
  {
    v6 = a2;
    do
    {
      if (*((char *)v6 + 23) < 0)
      {
        sub_14998(v4, *(void **)v6, *((_QWORD *)v6 + 1));
        v8 = v13;
      }
      else
      {
        v7 = *v6;
        v4[2] = *((_QWORD *)v6 + 2);
        *(_OWORD *)v4 = v7;
        v8 = v4;
      }
      v4[3] = *((_QWORD *)v6 + 3);
      v6 += 2;
      v4 = v8 + 4;
      v13 = v8 + 4;
    }
    while (v6 != a3);
  }
  v11 = 1;
  sub_15BF8((uint64_t)v10);
  return v4;
}

void sub_15BE4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_15BF8((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_15BF8(uint64_t a1)
{
  if (!*(_BYTE *)(a1 + 24))
    sub_1544C(a1);
  return a1;
}

void sub_15E00(id a1, TUIIdentifier *a2, TUIImageResource *a3, BOOL *a4)
{
  -[TUIImageResource addInterest](a3, "addInterest");
}

void sub_15E08(uint64_t a1, uint64_t a2, void *a3)
{
  id v4;

  v4 = a3;
  objc_msgSend(v4, "removeInterest");
  objc_msgSend(v4, "removeObserver:", *(_QWORD *)(a1 + 32));

}

id sub_15E48(uint64_t a1, uint64_t a2, void *a3)
{
  return objc_msgSend(a3, "addObserver:", *(_QWORD *)(a1 + 32));
}

void sub_15EDC(uint64_t a1, uint64_t a2, void *a3)
{
  id v4;

  v4 = a3;
  objc_msgSend(v4, "removeInterest");
  objc_msgSend(v4, "removeObserver:", *(_QWORD *)(a1 + 32));

}

void sub_15F98(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  uint64_t v6;
  void *v7;
  void *v8;
  id v9;
  _QWORD v10[4];
  id v11;

  v10[0] = _NSConcreteStackBlock;
  v10[2] = sub_160C8;
  v10[3] = &unk_23D8C8;
  v2 = *(void **)(a1 + 40);
  v3 = *(void **)(*(_QWORD *)(a1 + 32) + 72);
  v10[1] = 3221225472;
  v11 = v2;
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "keysOfEntriesPassingTest:", v10));
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "allObjects"));

  if (objc_msgSend(v5, "count"))
  {
    v6 = *(_QWORD *)(a1 + 32);
    if (*(_QWORD *)(v6 + 56))
    {
      v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(v6 + 72), "objectsForKeys:notFoundMarker:", v5, *(_QWORD *)(a1 + 40)));
      v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:](NSDictionary, "dictionaryWithObjects:forKeys:", v7, v5));
      objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 56), "loadImagesFromResourceMap:", v8);
      v9 = objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 56), "newUIMenuElement");
      objc_msgSend(*(id *)(a1 + 32), "setMenu:", v9);

    }
  }

}

BOOL sub_160C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return *(_QWORD *)(a1 + 32) == a3;
}

void sub_16FB8(id a1, _TUITransaction *a2, unint64_t a3, BOOL *a4)
{
  _TUITransaction *v5;
  id v6;
  NSObject *v7;
  id v8;
  NSObject *v9;

  v5 = a2;
  v6 = TUITransactionLog();
  v7 = objc_claimAutoreleasedReturnValue(v6);
  if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
    sub_17D1F8((uint64_t)v5, a3, v7);

  v8 = TUITransactionLog();
  v9 = objc_claimAutoreleasedReturnValue(v8);
  if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
    sub_17D154(v5, a3, v9);

}

void sub_17170(uint64_t a1)
{
  dispatch_group_leave(*(dispatch_group_t *)(*(_QWORD *)(a1 + 32) + 72));
}

void sub_1717C(uint64_t a1)
{
  dispatch_group_leave(*(dispatch_group_t *)(*(_QWORD *)(a1 + 32) + 80));
}

uint64_t sub_1721C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

void sub_17440(uint64_t a1)
{
  dispatch_group_leave(*(dispatch_group_t *)(*(_QWORD *)(a1 + 32) + 80));
}

void sub_17D2C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_17D44(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_17D54(uint64_t a1)
{

}

void sub_17D5C(uint64_t a1)
{
  dispatch_semaphore_t v2;
  uint64_t v3;
  void *v4;

  *(_BYTE *)(*(_QWORD *)(a1 + 32) + 8) = 1;
  if ((*(_BYTE *)(*(_QWORD *)(a1 + 32) + 48) & 1) != 0)
  {
    v2 = dispatch_semaphore_create(0);
    v3 = *(_QWORD *)(a1 + 32);
    v4 = *(void **)(v3 + 16);
    *(_QWORD *)(v3 + 16) = v2;

    objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), *(id *)(*(_QWORD *)(a1 + 32) + 16));
  }
}

void sub_17E54(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;

  if (!*(_BYTE *)(*(_QWORD *)(a1 + 32) + 8))
  {
    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = 1;
    *(_QWORD *)(*(_QWORD *)(a1 + 32) + 48) &= ~1uLL;
    v2 = objc_claimAutoreleasedReturnValue(+[TUITransactionOptions defaultImplicitOptions](TUITransactionOptions, "defaultImplicitOptions"));
    v3 = *(_QWORD *)(a1 + 32);
    v4 = *(void **)(v3 + 40);
    *(_QWORD *)(v3 + 40) = v2;

    dispatch_suspend(*(dispatch_object_t *)(*(_QWORD *)(a1 + 32) + 112));
  }
}

void sub_17F84(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(a1 + 32);
  if ((*(_BYTE *)(v1 + 48) & 1) != 0)
    objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), *(id *)(v1 + 16));
}

void sub_18590(uint64_t a1)
{
  id v2;
  id v3;
  id v4;
  id v5;
  uint64_t v6;
  void *v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  _BYTE v12[128];

  v2 = objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 80), "copy");
  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 80), "removeAllObjects");
  v10 = 0u;
  v11 = 0u;
  v8 = 0u;
  v9 = 0u;
  v3 = v2;
  v4 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
  if (v4)
  {
    v5 = v4;
    v6 = *(_QWORD *)v9;
    do
    {
      v7 = 0;
      do
      {
        if (*(_QWORD *)v9 != v6)
          objc_enumerationMutation(v3);
        (*(void (**)(_QWORD))(*(_QWORD *)(*((_QWORD *)&v8 + 1) + 8 * (_QWORD)v7) + 16))(*(_QWORD *)(*((_QWORD *)&v8 + 1) + 8 * (_QWORD)v7));
        v7 = (char *)v7 + 1;
      }
      while (v5 != v7);
      v5 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
    }
    while (v5);
  }

}

id sub_186A0(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "invalidate");
}

id sub_186A8(uint64_t a1)
{
  id v2;
  NSObject *v3;
  NSObject *v4;
  os_signpost_id_t v5;
  id v6;
  NSObject *v7;
  uint8_t v9[16];

  v2 = TUITransactionLog();
  v3 = objc_claimAutoreleasedReturnValue(v2);
  v4 = v3;
  v5 = *(_QWORD *)(a1 + 40);
  if (v5 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v3))
  {
    *(_WORD *)v9 = 0;
    _os_signpost_emit_with_name_impl(&dword_0, v4, OS_SIGNPOST_EVENT, v5, "TUITransaction.applyUpdates completion on main", (const char *)&unk_23007A, v9, 2u);
  }

  v6 = TUITransactionLog();
  v7 = objc_claimAutoreleasedReturnValue(v6);
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEBUG))
    sub_17D344();

  return objc_msgSend(*(id *)(a1 + 32), "_invokeCompletions");
}

id sub_18918(uint64_t a1)
{
  id v2;
  NSObject *v3;

  v2 = TUITransactionLog();
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEBUG))
    sub_17D410();

  return objc_msgSend(*(id *)(a1 + 32), "_invokeCompletions");
}

void sub_1916C(id a1)
{
  id v1;

  if ((_TUIDeviceHasInternalInstall() & 1) != 0)
  {
    v1 = (id)objc_claimAutoreleasedReturnValue(+[NSUserDefaults standardUserDefaults](NSUserDefaults, "standardUserDefaults"));
    byte_2CB1B0 = objc_msgSend(v1, "BOOLForKey:", CFSTR("TUIUserDefaultCaptureTransactionCallstack"));

  }
  else
  {
    byte_2CB1B0 = 0;
  }
}

void sub_191D0(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_debug_impl(a1, a2, OS_LOG_TYPE_DEBUG, a4, &a9, 0x16u);
}

void sub_19200(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint8_t *a5)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, a5, 0x16u);
}

void sub_19850(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1986C(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  objc_msgSend(WeakRetained, "_removeObserver:", *(_QWORD *)(a1 + 32));

}

void sub_19A30(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_19A4C(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  objc_msgSend(WeakRetained, "_removeObserver:", *(_QWORD *)(a1 + 32));

}

id sub_1A124(uint64_t a1)
{
  *(_BYTE *)(*(_QWORD *)(a1 + 32) + 64) = 0;
  return _objc_msgSend(*(id *)(a1 + 32), "_timeCheck");
}

void sub_1A6C4(id a1, TUIModel *a2, unint64_t a3, BOOL *a4)
{
  -[TUIModel setParentModel:](a2, "setParentModel:", 0, a4);
}

id sub_1A6D0(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "setParentModel:", *(_QWORD *)(a1 + 32));
}

id sub_1A768(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "appendLayoutModelsToArray:", *(_QWORD *)(a1 + 32));
}

id sub_1A7F0(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "appendLayoutModelsToArray:", *(_QWORD *)(a1 + 32));
}

void sub_1A8A0(uint64_t a1, void *a2)
{
  id v3;

  v3 = a2;
  if ((objc_opt_respondsToSelector(v3, "appendObjectsWithProtocol:toArray:") & 1) != 0)
    objc_msgSend(v3, "appendObjectsWithProtocol:toArray:", *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40));

}

void sub_1AA9C(id a1)
{
  void *v1;
  id v2;
  void *v3;
  id v4;
  void *v5;
  _QWORD v6[2];

  v1 = (void *)objc_claimAutoreleasedReturnValue(+[TUIAttributeSet supportedAttributesSize](TUIAttributeSet, "supportedAttributesSize"));
  v2 = objc_msgSend(v1, "mutableCopy");

  v6[0] = CFSTR("accepts-drop");
  v6[1] = CFSTR("deceleration-rate");
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", v6, 2));
  objc_msgSend(v2, "addAttributesFromArray:", v3);

  v4 = objc_msgSend(v2, "copy");
  v5 = (void *)qword_2CB1C0;
  qword_2CB1C0 = (uint64_t)v4;

}

void sub_1ADCC(id a1)
{
  void *v1;
  id v2;
  void *v3;
  id v4;
  void *v5;
  _QWORD v6[7];

  v1 = (void *)objc_claimAutoreleasedReturnValue(+[TUIAttributeSet supportedAttributesSizeAndIntrinsic](TUIAttributeSet, "supportedAttributesSizeAndIntrinsic"));
  v2 = objc_msgSend(v1, "mutableCopy");

  v6[0] = CFSTR("background-color");
  v6[1] = CFSTR("layer-contents-gravity");
  v6[2] = CFSTR("start-at-end");
  v6[3] = CFSTR("observe-trigger");
  v6[4] = CFSTR("observe-trigger-delay");
  v6[5] = CFSTR("observe-trigger-value");
  v6[6] = CFSTR("url");
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", v6, 7));
  objc_msgSend(v2, "addAttributesFromArray:", v3);

  v4 = objc_msgSend(v2, "copy");
  v5 = (void *)qword_2CB1D0;
  qword_2CB1D0 = (uint64_t)v4;

}

void sub_1B44C(uint64_t a1, uint64_t a2, void *a3)
{
  _QWORD v5[4];
  id v6;
  id v7;

  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_1B4D0;
  v5[3] = &unk_23DB18;
  v6 = *(id *)(a1 + 32);
  v7 = *(id *)(a1 + 40);
  objc_msgSend(a3, "sortUsingComparator:", v5);

}

uint64_t sub_1B4D0(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  uint64_t v10;
  id v11;
  id v12;
  id v13;

  v5 = a2;
  v6 = a3;
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "objectForKeyedSubscript:", v5));
  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "objectForKeyedSubscript:", v6));
  v9 = objc_msgSend(v7, "groupPriority");
  if (v9 >= objc_msgSend(v8, "groupPriority"))
  {
    v11 = objc_msgSend(v7, "groupPriority");
    if (v11 <= objc_msgSend(v8, "groupPriority"))
    {
      v12 = objc_msgSend(*(id *)(*(_QWORD *)(a1 + 40) + 8), "indexOfObject:", v5);
      v13 = objc_msgSend(*(id *)(*(_QWORD *)(a1 + 40) + 8), "indexOfObject:", v6);
      if (v12 < v13)
        v10 = -1;
      else
        v10 = v12 > v13;
    }
    else
    {
      v10 = 1;
    }
  }
  else
  {
    v10 = -1;
  }

  return v10;
}

void sub_1BF18(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;

  v5 = a2;
  v6 = objc_msgSend(a3, "newAdded");
  objc_msgSend(*(id *)(a1 + 32), "setObject:forKeyedSubscript:", v6, v5);

}

void sub_1C044(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;

  v5 = a2;
  v6 = objc_msgSend(a3, "newRemoved");
  objc_msgSend(*(id *)(a1 + 32), "setObject:forKeyedSubscript:", v6, v5);

}

void sub_1C298(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

double sub_1C2AC()
{
  void *v0;
  double v1;
  double v2;

  v0 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate date](NSDate, "date"));
  objc_msgSend(v0, "timeIntervalSinceReferenceDate");
  v2 = v1;

  return v2;
}

void sub_1C2F0(uint64_t a1)
{
  id WeakRetained;
  uint64_t v3;
  double v4;
  TUIVisibilityChangeRecord *v5;
  id v6;
  TUIVisibilityChangeRecord *v7;
  void *v8;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    v8 = WeakRetained;
    objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 16), "addObject:", WeakRetained);
    WeakRetained = v8;
    v3 = *(_QWORD *)(a1 + 32);
    if (*(_QWORD *)(v3 + 32))
    {
      if (*(double *)(a1 + 48) >= *(double *)(v3 + 40))
        v4 = *(double *)(a1 + 48);
      else
        v4 = *(double *)(v3 + 40);
      v5 = [TUIVisibilityChangeRecord alloc];
      v6 = objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 32), "newAdded");
      v7 = -[TUIVisibilityChangeRecord initWithLastTimestamp:timestamp:rootNode:](v5, "initWithLastTimestamp:timestamp:rootNode:", v6, v4, v4);

      objc_msgSend(v8, "visibleContentsChanged:", v7);
      WeakRetained = v8;
    }
  }

}

void sub_1C46C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1C480(uint64_t a1)
{
  id WeakRetained;
  uint64_t v3;
  double v4;
  TUIVisibilityChangeRecord *v5;
  id v6;
  TUIVisibilityChangeRecord *v7;
  void *v8;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    v8 = WeakRetained;
    objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 16), "removeObject:", WeakRetained);
    WeakRetained = v8;
    v3 = *(_QWORD *)(a1 + 32);
    if (*(_QWORD *)(v3 + 32))
    {
      if (*(double *)(a1 + 48) >= *(double *)(v3 + 40))
        v4 = *(double *)(a1 + 48);
      else
        v4 = *(double *)(v3 + 40);
      v5 = [TUIVisibilityChangeRecord alloc];
      v6 = objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 32), "newRemoved");
      v7 = -[TUIVisibilityChangeRecord initWithLastTimestamp:timestamp:rootNode:](v5, "initWithLastTimestamp:timestamp:rootNode:", v6, v4, v4);

      objc_msgSend(v8, "visibleContentsChanged:", v7);
      WeakRetained = v8;
    }
  }

}

void sub_1C8FC(uint64_t a1)
{
  objc_storeStrong((id *)(*(_QWORD *)(a1 + 32) + 40), *(id *)(a1 + 40));
}

uint64_t sub_1CACC(uint64_t result)
{
  *(_BYTE *)(*(_QWORD *)(result + 32) + 88) &= ~4u;
  *(_BYTE *)(*(_QWORD *)(result + 32) + 88) |= 8u;
  return result;
}

void sub_1CD58(uint64_t a1)
{
  objc_storeStrong((id *)(*(_QWORD *)(a1 + 32) + 32), *(id *)(a1 + 40));
}

void sub_1CE28(uint64_t a1)
{
  objc_storeStrong((id *)(*(_QWORD *)(a1 + 32) + 32), *(id *)(a1 + 40));
}

void sub_1D5E0(uint64_t a1, void *a2, void *a3, CGFloat a4)
{
  id v7;
  double width;
  double height;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  id v16;
  CGRect v17;
  CGRect v18;
  CGRect v19;

  v16 = a2;
  v7 = a3;
  objc_msgSend(v16, "frame");
  width = v17.size.width;
  height = v17.size.height;
  v11 = *(double *)(a1 + 56) + v10;
  v13 = v12 + *(double *)(a1 + 64);
  v17.origin.x = v11;
  v17.origin.y = v13;
  if (CGRectIntersectsRect(v17, *(CGRect *)(*(_QWORD *)(a1 + 32) + 56)))
  {
    v14 = fmin(width, *(double *)(a1 + 72));
    v15 = fmin(height, *(double *)(a1 + 80));
    v18.origin.x = v11;
    v18.origin.y = v13;
    v18.size.width = width;
    v18.size.height = height;
    v19 = CGRectIntersection(v18, *(CGRect *)(*(_QWORD *)(a1 + 32) + 56));
    if (v19.size.width * v19.size.height / (v14 * v15) >= a4)
    {
      objc_msgSend(*(id *)(a1 + 40), "addObject:", v7);
      objc_msgSend(*(id *)(a1 + 48), "setObject:forKeyedSubscript:", v16, v7);
    }
  }

}

void sub_1D88C(id a1)
{
  dispatch_queue_attr_t v1;
  NSObject *v2;
  dispatch_queue_attr_t v3;
  dispatch_queue_t v4;
  void *v5;
  NSObject *attr;

  v1 = dispatch_queue_attr_make_with_autorelease_frequency(0, DISPATCH_AUTORELEASE_FREQUENCY_WORK_ITEM);
  v2 = objc_claimAutoreleasedReturnValue(v1);
  v3 = dispatch_queue_attr_make_with_qos_class(v2, QOS_CLASS_UTILITY, 0);
  attr = objc_claimAutoreleasedReturnValue(v3);

  v4 = dispatch_queue_create("TUIVisibilityController.sharedQueue", attr);
  v5 = (void *)qword_2CB1E0;
  qword_2CB1E0 = (uint64_t)v4;

}

id sub_1DAC0(uint64_t a1)
{
  return objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 32), "addObject:", *(_QWORD *)(a1 + 40));
}

id sub_1DBE8(uint64_t a1)
{
  return _objc_msgSend(*(id *)(a1 + 32), "q_processUpdates");
}

id sub_1DCC0(uint64_t a1)
{
  return _objc_msgSend(*(id *)(a1 + 32), "q_processUpdates");
}

id sub_1E0F8(uint64_t a1)
{
  return objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 32), "removeObject:", *(_QWORD *)(a1 + 40));
}

id sub_1E304(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 32), "q_updateVisibleBounds:", *(double *)(a1 + 56), *(double *)(a1 + 64), *(double *)(a1 + 72), *(double *)(a1 + 80));
  (*(void (**)(void))(*(_QWORD *)(a1 + 48) + 16))();
  return _objc_msgSend(*(id *)(a1 + 40), "q_setNeedsUpdateForCollector:", *(_QWORD *)(a1 + 32));
}

id sub_1E4C4(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 32), "q_updateVisibleBounds:", *(double *)(a1 + 48), *(double *)(a1 + 56), *(double *)(a1 + 64), *(double *)(a1 + 72));
  objc_msgSend(*(id *)(a1 + 32), "q_updateVisible:", *(unsigned __int8 *)(a1 + 80));
  return _objc_msgSend(*(id *)(a1 + 40), "q_setNeedsUpdateForCollector:", *(_QWORD *)(a1 + 32));
}

id sub_1EAA8(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 32), "q_updateVisibleBounds:", *(double *)(a1 + 48), *(double *)(a1 + 56), *(double *)(a1 + 64), *(double *)(a1 + 72));
  return _objc_msgSend(*(id *)(a1 + 40), "q_setNeedsUpdateForCollector:", *(_QWORD *)(a1 + 32));
}

id sub_1ECDC(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 32), "q_updateVisibleBounds:", *(double *)(a1 + 48), *(double *)(a1 + 56), *(double *)(a1 + 64), *(double *)(a1 + 72));
  objc_msgSend(*(id *)(a1 + 32), "q_updateVisible:", *(unsigned __int8 *)(a1 + 80));
  return _objc_msgSend(*(id *)(a1 + 40), "q_setNeedsUpdateForCollector:", *(_QWORD *)(a1 + 32));
}

void sub_1FEF0(id a1)
{
  void *v1;
  id v2;
  void *v3;
  id v4;
  void *v5;
  _QWORD v6[8];

  v1 = (void *)objc_claimAutoreleasedReturnValue(+[TUIAttributeSet supportedAttributesSizeAndIntrinsic](TUIAttributeSet, "supportedAttributesSizeAndIntrinsic"));
  v2 = objc_msgSend(v1, "mutableCopy");

  v6[0] = CFSTR("progress-id");
  v6[1] = CFSTR("mode");
  v6[2] = CFSTR("progress");
  v6[3] = CFSTR("paused");
  v6[4] = CFSTR("color");
  v6[5] = CFSTR("kind");
  v6[6] = CFSTR("instance");
  v6[7] = CFSTR("parameters");
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", v6, 8));
  objc_msgSend(v2, "addAttributesFromArray:", v3);

  v4 = objc_msgSend(v2, "copy");
  v5 = (void *)qword_2CB1F8;
  qword_2CB1F8 = (uint64_t)v4;

}

void TUICastStatsDump()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  NSLog(CFSTR("Cast per file"));
  sub_20284(v0, (void *)qword_2CB208);
  NSLog(CFSTR("\nCast per callsite"));
  sub_20284(v1, (void *)qword_2CB218);
  NSLog(CFSTR("\nCast per type"));
  sub_20284(v2, (void *)qword_2CB210);
  NSLog(CFSTR("\nTotal casts: %lu"), qword_2CB220);
}

void sub_20284(uint64_t a1, void *a2)
{
  id v2;
  void *v3;
  id v4;
  void *v5;
  id v6;
  _QWORD v7[4];
  id v8;
  _QWORD v9[4];
  id v10;

  v2 = a2;
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "allKeys"));
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472;
  v9[2] = sub_20364;
  v9[3] = &unk_23DC98;
  v4 = v2;
  v10 = v4;
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "sortedArrayUsingComparator:", v9));

  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  v7[2] = sub_203EC;
  v7[3] = &unk_23DCC0;
  v8 = v4;
  v6 = v4;
  objc_msgSend(v5, "enumerateObjectsUsingBlock:", v7);

}

uint64_t sub_20364(uint64_t a1, uint64_t a2, void *a3)
{
  void *v5;
  id v6;
  void *v7;
  id v8;
  void *v9;
  id v10;

  v5 = *(void **)(a1 + 32);
  v6 = a3;
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "objectForKeyedSubscript:", a2));
  v8 = objc_msgSend(v7, "unsignedIntegerValue");

  v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "objectForKeyedSubscript:", v6));
  v10 = objc_msgSend(v9, "unsignedIntegerValue");

  if (v8 < v10)
    return -1;
  else
    return v8 > v10;
}

void sub_203EC(uint64_t a1, void *a2)
{
  void *v2;
  id v3;
  id v4;

  v2 = *(void **)(a1 + 32);
  v3 = a2;
  v4 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "objectForKeyedSubscript:", v3));
  NSLog(CFSTR("%8lu : %@"), objc_msgSend(v4, "unsignedIntegerValue"), v3);

}

void TUICastRecord(uint64_t a1, int a2, uint64_t a3)
{
  _QWORD block[6];
  int v7;

  if (qword_2CB230 != -1)
    dispatch_once(&qword_2CB230, &stru_23DCE0);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_20514;
  block[3] = &unk_23DD00;
  block[4] = a1;
  block[5] = a3;
  v7 = a2;
  dispatch_sync((dispatch_queue_t)qword_2CB228, block);
}

void sub_204E8(id a1)
{
  dispatch_queue_t v1;
  void *v2;

  v1 = dispatch_queue_create("TemplateUI.castStats", 0);
  v2 = (void *)qword_2CB228;
  qword_2CB228 = (uint64_t)v1;

}

void sub_20514(uint64_t a1)
{
  NSMutableDictionary *v2;
  void *v3;
  NSMutableDictionary *v4;
  void *v5;
  NSMutableDictionary *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  id v16;

  ++qword_2CB220;
  if (!qword_2CB208)
  {
    v2 = objc_opt_new(NSMutableDictionary);
    v3 = (void *)qword_2CB208;
    qword_2CB208 = (uint64_t)v2;

  }
  if (!qword_2CB210)
  {
    v4 = objc_opt_new(NSMutableDictionary);
    v5 = (void *)qword_2CB210;
    qword_2CB210 = (uint64_t)v4;

  }
  if (!qword_2CB218)
  {
    v6 = objc_opt_new(NSMutableDictionary);
    v7 = (void *)qword_2CB218;
    qword_2CB218 = (uint64_t)v6;

  }
  v16 = (id)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", *(_QWORD *)(a1 + 32)));
  v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", *(_QWORD *)(a1 + 40)));
  v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("%s:%lu"), *(_QWORD *)(a1 + 32), *(int *)(a1 + 48)));
  v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend((id)qword_2CB208, "objectForKeyedSubscript:", v16));
  v11 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedInteger:](NSNumber, "numberWithUnsignedInteger:", (char *)objc_msgSend(v10, "unsignedIntegerValue") + 1));
  objc_msgSend((id)qword_2CB208, "setObject:forKeyedSubscript:", v11, v16);

  v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend((id)qword_2CB210, "objectForKeyedSubscript:", v8));
  v13 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedInteger:](NSNumber, "numberWithUnsignedInteger:", (char *)objc_msgSend(v12, "unsignedIntegerValue") + 1));
  objc_msgSend((id)qword_2CB210, "setObject:forKeyedSubscript:", v13, v8);

  v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend((id)qword_2CB218, "objectForKeyedSubscript:", v9));
  v15 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedInteger:](NSNumber, "numberWithUnsignedInteger:", (char *)objc_msgSend(v14, "unsignedIntegerValue") + 1));
  objc_msgSend((id)qword_2CB218, "setObject:forKeyedSubscript:", v15, v9);

}

id TUIDynamicCast(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  id v5;

  v3 = a2;
  v4 = v3;
  if (v3 && (objc_opt_isKindOfClass(v3, a1) & 1) != 0)
    v5 = v4;
  else
    v5 = 0;

  return v5;
}

id TUIStaticCast(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  id v5;

  v3 = a2;
  v4 = v3;
  if (v3 && (objc_opt_isKindOfClass(v3, a1) & 1) != 0)
    v5 = v4;
  else
    v5 = 0;

  return v5;
}

id TUIProtocolCast(void *a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  id v6;

  v3 = a1;
  v4 = a2;
  v5 = v4;
  if (v4 && objc_msgSend(v4, "conformsToProtocol:", v3))
    v6 = v5;
  else
    v6 = 0;

  return v6;
}

id TUIStaticProtocolCast(void *a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  id v6;

  v3 = a1;
  v4 = a2;
  v5 = v4;
  if (v4 && objc_msgSend(v4, "conformsToProtocol:", v3))
    v6 = v5;
  else
    v6 = 0;

  return v6;
}

id TUIClassAndProtocolCast(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  id v11;
  void *v12;
  uint64_t *v13;
  id v14;
  uint64_t *v16;

  v11 = a1;
  v12 = v11;
  if (!v11 || (objc_opt_isKindOfClass(v11, a2) & 1) == 0)
  {
LABEL_7:
    v14 = 0;
    goto LABEL_8;
  }
  v16 = &a9;
  if (a3)
  {
    do
    {
      v13 = v16++;
      if ((objc_msgSend(v12, "conformsToProtocol:", *v13) & 1) == 0)
        goto LABEL_7;
    }
    while (--a3);
  }
  v14 = v12;
LABEL_8:

  return v14;
}

id TUIStaticClassAndProtocolCast(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  id v11;
  void *v12;
  id *v13;
  id v14;
  id v15;
  id *v17;

  v11 = a1;
  v12 = v11;
  if (!v11 || (objc_opt_isKindOfClass(v11, a2) & 1) == 0)
  {
LABEL_8:
    v15 = 0;
    goto LABEL_9;
  }
  v17 = (id *)&a9;
  if (a3)
  {
    while (1)
    {
      v13 = v17++;
      v14 = *v13;
      if ((objc_msgSend(v12, "conformsToProtocol:", v14) & 1) == 0)
        break;

      if (!--a3)
        goto LABEL_6;
    }

    goto LABEL_8;
  }
LABEL_6:
  v15 = v12;
LABEL_9:

  return v15;
}

CFTypeRef TUICFTypeCast(uint64_t a1, CFTypeRef cf)
{
  if (!cf)
    return 0;
  if (CFGetTypeID(cf) == a1)
    return cf;
  return 0;
}

void sub_20EB0(id a1)
{
  void *v1;
  id v2;
  void *v3;
  id v4;
  void *v5;
  _QWORD v6[2];

  v1 = (void *)objc_claimAutoreleasedReturnValue(+[TUIAttributeSet supportedAttributesSize](TUIAttributeSet, "supportedAttributesSize"));
  v2 = objc_msgSend(v1, "mutableCopy");

  v6[0] = CFSTR("accepts-drop");
  v6[1] = CFSTR("deceleration-rate");
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", v6, 2));
  objc_msgSend(v2, "addAttributesFromArray:", v3);

  v4 = objc_msgSend(v2, "copy");
  v5 = (void *)qword_2CB238;
  qword_2CB238 = (uint64_t)v4;

}

void sub_220F0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_22160(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, objc_super a9)
{
  void *v9;
  void *v10;

  v10 = v9;

  a9.super_class = (Class)TUIVStack;
  -[_Unwind_Exception dealloc](&a9, "dealloc");
  _Unwind_Resume(a1);
}

void sub_2222C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_222F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_22AB0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, void *a12)
{

  _Unwind_Resume(a1);
}

void sub_22E88(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *__p, uint64_t a19)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void *sub_22FD4(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60)
    sub_69F8();
  return operator new(16 * a2);
}

void sub_237AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_237C0(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(WeakRetained, "q_updateSnapshot");

}

void sub_23974(uint64_t a1, void *a2, void *a3)
{
  id v5;
  void *v6;
  id v7;
  void *v8;
  void *v9;
  void *v10;
  id v11;

  v11 = a2;
  v5 = a3;
  v6 = v5;
  if (*(_BYTE *)(a1 + 56))
  {
    v7 = v5;
  }
  else
  {
    if (!objc_msgSend(v5, "timingCountWithTime:threshold:", *(double *)(a1 + 40), *(double *)(a1 + 48)))
    {
      v8 = 0;
      goto LABEL_9;
    }
    v7 = objc_msgSend(v6, "copy");
  }
  v8 = v7;
  if (v7)
  {
    objc_msgSend(v7, "becameHiddenAtTime:threshold:", *(double *)(a1 + 40), *(double *)(a1 + 48));
    if (objc_msgSend(v8, "timingCount"))
    {
      v9 = *(void **)(a1 + 32);
      v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "identifier"));
      objc_msgSend(v9, "setObject:forKeyedSubscript:", v8, v10);

    }
  }
LABEL_9:

}

void sub_23AD4(void *a1, void *a2, double a3, double a4)
{
  id v7;
  id v8;
  void *v9;
  id v10;
  id v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  id v20;
  id v21;
  uint64_t v22;
  void *v23;
  void *v24;
  void *v25;
  id v26;
  _QWORD v27[4];
  id v28;
  double v29;
  double v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  _BYTE v39[128];
  _BYTE v40[128];

  v7 = a1;
  v8 = a2;
  v35 = 0u;
  v36 = 0u;
  v37 = 0u;
  v38 = 0u;
  v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "added"));
  v10 = objc_msgSend(v9, "countByEnumeratingWithState:objects:count:", &v35, v40, 16);
  if (v10)
  {
    v11 = v10;
    v12 = *(_QWORD *)v36;
    do
    {
      v13 = 0;
      do
      {
        if (*(_QWORD *)v36 != v12)
          objc_enumerationMutation(v9);
        v14 = *(_QWORD *)(*((_QWORD *)&v35 + 1) + 8 * (_QWORD)v13);
        v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "attributesMap"));
        v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v15, "objectForKeyedSubscript:", v14));

        v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v16, "data"));
        objc_msgSend(v16, "size");
        v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "impressionForData:size:create:", v17, 1));

        objc_msgSend(v18, "becameVisibleAtTime:", a3);
        v13 = (char *)v13 + 1;
      }
      while (v11 != v13);
      v11 = objc_msgSend(v9, "countByEnumeratingWithState:objects:count:", &v35, v40, 16);
    }
    while (v11);
  }

  v33 = 0u;
  v34 = 0u;
  v31 = 0u;
  v32 = 0u;
  v19 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "removed"));
  v20 = objc_msgSend(v19, "countByEnumeratingWithState:objects:count:", &v31, v39, 16);
  if (v20)
  {
    v21 = v20;
    v22 = *(_QWORD *)v32;
    do
    {
      v23 = 0;
      do
      {
        if (*(_QWORD *)v32 != v22)
          objc_enumerationMutation(v19);
        v24 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "impressionForIdentifier:", *(_QWORD *)(*((_QWORD *)&v31 + 1) + 8 * (_QWORD)v23)));
        objc_msgSend(v24, "becameHiddenAtTime:threshold:", a3, a4);

        v23 = (char *)v23 + 1;
      }
      while (v21 != v23);
      v21 = objc_msgSend(v19, "countByEnumeratingWithState:objects:count:", &v31, v39, 16);
    }
    while (v21);
  }

  v25 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "identifierNodeMap"));
  v27[0] = _NSConcreteStackBlock;
  v27[1] = 3221225472;
  v27[2] = sub_24460;
  v27[3] = &unk_23DE08;
  v29 = a3;
  v30 = a4;
  v28 = v8;
  v26 = v8;
  objc_msgSend(v25, "enumerateKeysAndObjectsUsingBlock:", v27);

}

id sub_23DE4(uint64_t a1)
{
  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 24), "clearImpressions");
  sub_23E28(*(void **)(*(_QWORD *)(a1 + 32) + 48), *(void **)(*(_QWORD *)(a1 + 32) + 24), *(double *)(a1 + 40));
  return _objc_msgSend(*(id *)(a1 + 32), "q_updateSnapshotIfNeededWithTime:", *(double *)(a1 + 40));
}

void sub_23E28(void *a1, void *a2, double a3)
{
  id v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  id v18;
  _QWORD v19[4];
  id v20;
  double v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  _BYTE v26[128];

  v5 = a1;
  v6 = a2;
  v22 = 0u;
  v23 = 0u;
  v24 = 0u;
  v25 = 0u;
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "identifiers"));
  v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v22, v26, 16);
  if (v8)
  {
    v9 = v8;
    v10 = *(_QWORD *)v23;
    do
    {
      v11 = 0;
      do
      {
        if (*(_QWORD *)v23 != v10)
          objc_enumerationMutation(v7);
        v12 = *(_QWORD *)(*((_QWORD *)&v22 + 1) + 8 * (_QWORD)v11);
        v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "attributesMap"));
        v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "objectForKeyedSubscript:", v12));

        v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v14, "data"));
        objc_msgSend(v14, "size");
        v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "impressionForData:size:create:", v15, 1));

        objc_msgSend(v16, "becameVisibleAtTime:", a3);
        v11 = (char *)v11 + 1;
      }
      while (v9 != v11);
      v9 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v22, v26, 16);
    }
    while (v9);
  }

  v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "identifierNodeMap"));
  v19[0] = _NSConcreteStackBlock;
  v19[1] = 3221225472;
  v19[2] = sub_24470;
  v19[3] = &unk_23DE30;
  v21 = a3;
  v20 = v6;
  v18 = v6;
  objc_msgSend(v17, "enumerateKeysAndObjectsUsingBlock:", v19);

}

void sub_240FC(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  TUIImpressionSnapshot *v4;
  NSMutableDictionary *v5;

  v5 = objc_opt_new(NSMutableDictionary);
  objc_msgSend(*(id *)(a1 + 32), "q_collectImpressions:time:flush:stats:", *(double *)(a1 + 48));
  if (*(_BYTE *)(a1 + 56))
  {
    sub_23E28(*(void **)(*(_QWORD *)(a1 + 32) + 48), *(void **)(*(_QWORD *)(a1 + 32) + 24), *(double *)(a1 + 48));
    v2 = *(_QWORD *)(a1 + 32);
    v3 = *(void **)(v2 + 32);
    *(_QWORD *)(v2 + 32) = 0;

  }
  if (*(_QWORD *)(a1 + 40))
  {
    v4 = -[TUIImpressionSnapshot initWithMap:]([TUIImpressionSnapshot alloc], "initWithMap:", v5);
    (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();

  }
}

void sub_24240(uint64_t a1)
{
  NSMutableDictionary *v2;
  TUIImpressionSnapshot *v3;
  _TUIImpressionStats *v4;

  v4 = objc_alloc_init(_TUIImpressionStats);
  sub_23E28(*(void **)(*(_QWORD *)(a1 + 32) + 48), v4, *(double *)(a1 + 48));
  v2 = objc_opt_new(NSMutableDictionary);
  objc_msgSend(*(id *)(a1 + 32), "q_collectImpressions:time:threshold:flush:stats:", v2, 0, v4, *(double *)(a1 + 48), 0.0);
  v3 = -[TUIImpressionSnapshot initWithMap:]([TUIImpressionSnapshot alloc], "initWithMap:", v2);
  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();

}

void sub_24330(id a1)
{
  id v1;

  v1 = (id)objc_claimAutoreleasedReturnValue(+[NSUserDefaults standardUserDefaults](NSUserDefaults, "standardUserDefaults"));
  byte_2CB250 = objc_msgSend(v1, "BOOLForKey:", CFSTR("TUIOverlayImpressions"));

}

uint64_t sub_24460(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23AD4(a3, *(_QWORD *)(a1 + 32), *(double *)(a1 + 40), *(double *)(a1 + 48));
}

uint64_t sub_24470(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23E28(a3, *(_QWORD *)(a1 + 32), *(double *)(a1 + 40));
}

void sub_25028(id a1)
{
  void *v1;
  id v2;
  void *v3;
  id v4;
  void *v5;
  _QWORD v6[3];

  v1 = (void *)objc_claimAutoreleasedReturnValue(+[TUIAttributeSet supportedAttributesSizeAndIntrinsic](TUIAttributeSet, "supportedAttributesSizeAndIntrinsic"));
  v2 = objc_msgSend(v1, "mutableCopy");

  v6[0] = CFSTR("play-state");
  v6[1] = CFSTR("color");
  v6[2] = CFSTR("parameters");
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", v6, 3));
  objc_msgSend(v2, "addAttributesFromArray:", v3);

  v4 = objc_msgSend(v2, "copy");
  v5 = (void *)qword_2CB258;
  qword_2CB258 = (uint64_t)v4;

}

uint64_t TUI::Evaluation::Variables::Modern::Modern(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  id v7;
  id v8;

  v7 = a3;
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = 0;
  *(_QWORD *)a1 = off_23DE80;
  *(_QWORD *)(a1 + 8) = off_23DFB0;
  *(_QWORD *)(a1 + 32) = 0;
  *(_QWORD *)(a1 + 40) = 0;
  *(_QWORD *)(a1 + 48) = a2;
  v8 = v7;
  *(_QWORD *)(a1 + 56) = v8;
  *(_QWORD *)(a1 + 64) = a4;
  TUI::Evaluation::Variables::Scope::Scope((TUI::Evaluation::Variables::Scope *)(a1 + 72));
  TUI::Evaluation::Variables::Scope::Scope((TUI::Evaluation::Variables::Scope *)(a1 + 920));
  *(_OWORD *)(a1 + 1848) = 0u;
  *(_OWORD *)(a1 + 1864) = 0u;
  *(_OWORD *)(a1 + 1816) = 0u;
  *(_OWORD *)(a1 + 1832) = 0u;
  *(_OWORD *)(a1 + 1784) = 0u;
  *(_OWORD *)(a1 + 1800) = 0u;
  *(_OWORD *)(a1 + 1768) = 0u;
  *(_DWORD *)(a1 + 1880) = 1065353216;

  return a1;
}

void sub_25264(_Unwind_Exception *a1)
{
  uint64_t v1;
  void *v2;
  TUI::Evaluation::Variables::Scope *v3;
  TUI::Evaluation::Variables::Scope *v4;
  void *v6;

  v4 = v3;
  TUI::Evaluation::Variables::Scope::~Scope(v4);

  v6 = *(void **)(v1 + 24);
  if (v6)
  {
    *(_QWORD *)(v1 + 32) = v6;
    operator delete(v6);
  }

  _Unwind_Resume(a1);
}

void TUI::Evaluation::Variables::Modern::~Modern(TUI::Evaluation::Variables::Modern *this)
{
  void *v2;
  void *v3;
  void **v4;

  *(_QWORD *)this = off_23DE80;
  *((_QWORD *)this + 1) = off_23DFB0;
  sub_2A150((uint64_t)this + 1848);
  v4 = (void **)((char *)this + 1824);
  sub_2A0E0(&v4);
  sub_148E8((uint64_t)this + 1808);
  sub_148E8((uint64_t)this + 1792);
  v2 = (void *)*((_QWORD *)this + 221);
  if (v2)
  {
    *((_QWORD *)this + 222) = v2;
    operator delete(v2);
  }
  TUI::Evaluation::Variables::Scope::~Scope((TUI::Evaluation::Variables::Modern *)((char *)this + 920));
  TUI::Evaluation::Variables::Scope::~Scope((TUI::Evaluation::Variables::Modern *)((char *)this + 72));

  v3 = (void *)*((_QWORD *)this + 3);
  if (v3)
  {
    *((_QWORD *)this + 4) = v3;
    operator delete(v3);
  }
}

{
  TUI::Evaluation::Variables::Modern::~Modern(this);
  operator delete();
}

void TUI::Evaluation::Variables::Modern::beginScope(TUI::Evaluation::Variables::Modern *this, char a2)
{
  TUI::Evaluation::Variables::Scope::pushScope((TUI::Evaluation::Variables::Modern *)((char *)this + 920), a2);
}

void TUI::Evaluation::Variables::Modern::endScope(TUI::Evaluation::Variables::Modern *this)
{
  TUI::Evaluation::Variables::Scope::popScope((TUI::Evaluation::Variables::Modern *)((char *)this + 920));
}

id TUI::Evaluation::Variables::Modern::setupGlobalBindings(uint64_t a1, void *a2)
{
  _QWORD v3[5];

  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_253C8;
  v3[3] = &unk_23DFF0;
  v3[4] = a1;
  return objc_msgSend(a2, "enumerateKeysAndObjectsUsingBlock:", v3);
}

void sub_253C8(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  unsigned int v10;
  Entry v12;
  Entry v13;
  void *__p[2];
  char v15;
  id v16;

  v5 = a2;
  v6 = a3;
  v7 = *(_QWORD *)(a1 + 32);
  v8 = *(_QWORD *)(v7 + 64);
  v9 = objc_retainAutorelease(v5);
  sub_9350(__p, (char *)objc_msgSend(v9, "UTF8String"));
  v10 = TUI::Symbol::Tab::lookupEntry(v8, (char *)__p);
  if (v15 < 0)
    operator delete(__p[0]);
  if (v10 <= 0xFFFEFFFF && (unsigned __int16)v10 != 0xFFFF)
  {
    v12 = (Entry)-65536;
    v13 = (Entry)v10;
    TUI::Evaluation::Enumerator::State::State((uint64_t)__p, v12, v13);
    objc_storeStrong(&v16, a3);
    TUI::Evaluation::Variables::Scope::define(v7 + 72, v10, (const TUI::Evaluation::Enumerator::State *)__p);
    TUI::Evaluation::Enumerator::State::~State(__p);
  }

}

void sub_254B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  void *v14;
  void *v15;

  TUI::Evaluation::Enumerator::State::~State(&__p);

  _Unwind_Resume(a1);
}

void TUI::Evaluation::Variables::Modern::_popCapture(TUI::Evaluation::Variables::Modern *this)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;
  double v5;
  id WeakRetained;
  std::__shared_weak_count *v7;
  unint64_t *v8;
  unint64_t v9;
  __int128 v10;

  v2 = *((_QWORD *)this + 222);
  v4 = *(_QWORD *)(v2 - 16);
  v3 = *(void **)(v2 - 8);
  *((_QWORD *)this + 222) = v2 - 16;
  v5 = TUI::Evaluation::Variables::Scope::popClosure((TUI::Evaluation::Variables::Modern *)((char *)this + 920));
  if (v4)
  {
    WeakRetained = objc_loadWeakRetained((id *)(v4 + 32));

    if (WeakRetained)
      TUI::Evaluation::Variables::Modern::popComponent(this, 0);
  }
  if (v3)
  {
    *((_QWORD *)this + 2) = v3;
    objc_msgSend(v3, "model", v5);
    sub_255FC((uint64_t)this + 1808, &v10);
    v7 = (std::__shared_weak_count *)*((_QWORD *)&v10 + 1);
    if (*((_QWORD *)&v10 + 1))
    {
      v8 = (unint64_t *)(*((_QWORD *)&v10 + 1) + 8);
      do
        v9 = __ldaxr(v8);
      while (__stlxr(v9 - 1, v8));
      if (!v9)
      {
        ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
        std::__shared_weak_count::__release_weak(v7);
      }
    }
  }
}

void TUI::Evaluation::Variables::Modern::popComponent(TUI::Evaluation::Variables::Modern *this, int a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v4 = *((_QWORD *)this + 3);
  v3 = *((_QWORD *)this + 4);
  *((_QWORD *)this + 4) = v3 - 120;
  if (v4 == v3 - 120)
    v5 = 0;
  else
    v5 = *(_QWORD *)(v3 - 240);
  *((_QWORD *)this + 2) = v5;
  if (a2)
    TUI::Evaluation::Variables::Modern::_popCapture(this);
  TUI::Evaluation::Variables::Scope::popScope((TUI::Evaluation::Variables::Modern *)((char *)this + 920));
}

uint64_t sub_255FC(uint64_t a1, __int128 *a2)
{
  __int128 v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;

  v3 = *a2;
  *(_QWORD *)a2 = 0;
  *((_QWORD *)a2 + 1) = 0;
  v4 = *(std::__shared_weak_count **)(a1 + 8);
  *(_OWORD *)a1 = v3;
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v6 = __ldaxr(p_shared_owners);
    while (__stlxr(v6 - 1, p_shared_owners));
    if (!v6)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  return a1;
}

void TUI::Evaluation::Variables::Modern::_pushCapture(_QWORD *a1, TUI::Evaluation::Variables::Capture **a2)
{
  TUIComponent *WeakRetained;
  TUI::Evaluation::Variables::Capture *v5;
  TUI::Evaluation::Variables::Capture *v6;
  TUI::Evaluation::Variables::Capture **v7;
  unint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char *v15;
  TUI::Evaluation::Variables::Capture **v16;
  char *v17;
  char *v18;
  char *v19;
  TUI::Evaluation::Variables::Capture *v20;
  int v21;
  int v22;
  TUI::Evaluation::Variables::Capture *v23;
  std::__shared_weak_count *v24;
  unint64_t *v25;
  unint64_t v26;
  __int128 v27;

  if (*a2)
    WeakRetained = (TUIComponent *)objc_loadWeakRetained((id *)*a2 + 4);
  else
    WeakRetained = 0;
  v5 = *a2;
  v6 = (TUI::Evaluation::Variables::Capture *)a1[2];
  v7 = (TUI::Evaluation::Variables::Capture **)a1[222];
  v8 = a1[223];
  if ((unint64_t)v7 >= v8)
  {
    v10 = a1[221];
    v11 = ((uint64_t)v7 - v10) >> 4;
    v12 = v11 + 1;
    if ((unint64_t)(v11 + 1) >> 60)
      sub_6F9C();
    v13 = v8 - v10;
    if (v13 >> 3 > v12)
      v12 = v13 >> 3;
    if ((unint64_t)v13 >= 0x7FFFFFFFFFFFFFF0)
      v14 = 0xFFFFFFFFFFFFFFFLL;
    else
      v14 = v12;
    if (v14)
      v15 = (char *)sub_22FD4((uint64_t)(a1 + 223), v14);
    else
      v15 = 0;
    v16 = (TUI::Evaluation::Variables::Capture **)&v15[16 * v11];
    v17 = &v15[16 * v14];
    *v16 = v5;
    v16[1] = v6;
    v9 = v16 + 2;
    v18 = (char *)a1[222];
    v19 = (char *)a1[221];
    if (v18 != v19)
    {
      do
      {
        *((_OWORD *)v16 - 1) = *((_OWORD *)v18 - 1);
        v16 -= 2;
        v18 -= 16;
      }
      while (v18 != v19);
      v18 = (char *)a1[221];
    }
    a1[221] = v16;
    a1[222] = v9;
    a1[223] = v17;
    if (v18)
      operator delete(v18);
  }
  else
  {
    *v7 = v5;
    v7[1] = v6;
    v9 = v7 + 2;
  }
  a1[222] = v9;
  v20 = *a2;
  if (*a2)
  {
    if (*((_QWORD *)v20 + 5))
      v21 = TUI::Evaluation::Variables::Capture::_bitCheck(v20, 0);
    else
      v21 = 1;
    v22 = v21 ^ 1;
  }
  else
  {
    v22 = 1;
  }
  TUI::Evaluation::Variables::Scope::pushClosure((TUI::Evaluation::Variables::Scope *)(a1 + 115), v22);
  if (WeakRetained)
  {
    TUI::Evaluation::Variables::Modern::pushComponent((TUI::Evaluation::Variables::Modern *)a1, WeakRetained, 1, 0);
  }
  else
  {
    v23 = *a2;
    if (*a2
      && (!*((_QWORD *)v23 + 5)
       || TUI::Evaluation::Variables::Capture::_bitCheck(v23, 0)
       && (!*((_QWORD *)*a2 + 5) || (TUI::Evaluation::Variables::Capture::_bitCheck(*a2, 1uLL) & 1) == 0)))
    {
      a1[2] = 0;
      v27 = 0uLL;
      sub_255FC((uint64_t)(a1 + 226), &v27);
      v24 = (std::__shared_weak_count *)*((_QWORD *)&v27 + 1);
      if (*((_QWORD *)&v27 + 1))
      {
        v25 = (unint64_t *)(*((_QWORD *)&v27 + 1) + 8);
        do
          v26 = __ldaxr(v25);
        while (__stlxr(v26 - 1, v25));
        if (!v26)
        {
          ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
          std::__shared_weak_count::__release_weak(v24);
        }
      }
    }
  }

}

void sub_25868(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void TUI::Evaluation::Variables::Modern::pushComponent(TUI::Evaluation::Variables::Modern *this, TUIComponent *a2, int a3, char a4)
{
  TUIComponent *v7;
  TUIComponent *v8;
  char *v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  uint64_t v13;
  TUIComponent *v14;
  int v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  std::__shared_weak_count *v21;
  unint64_t *p_shared_owners;
  unint64_t v23;
  id v24;
  std::__shared_weak_count *v25;
  uint64_t v26;
  unint64_t *v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  std::__shared_weak_count *v31;
  unint64_t *v32;
  unint64_t v33;
  unint64_t *v34;
  unint64_t v35;
  uint64_t v36;
  std::__shared_weak_count *v37;
  unint64_t *v38;
  unint64_t v39;
  std::__shared_weak_count *v40;
  unint64_t *v41;
  unint64_t v42;
  unint64_t v43;
  unint64_t v44;
  char *v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  unint64_t v49;
  unint64_t v50;
  char *v51;
  char *v52;
  char *v53;
  char *v54;
  char *v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  uint64_t v62;
  std::__shared_weak_count *v63;
  _QWORD v64[5];
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  TUI::Evaluation::Variables::Capture *v72;
  std::__shared_weak_count *v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;

  v7 = a2;
  v8 = v7;
  *((_QWORD *)this + 2) = v7;
  if (v7)
    -[TUIComponent model](v7, "model");
  else
    v74 = 0uLL;
  v9 = (char *)this + 1808;
  sub_255FC((uint64_t)this + 1808, &v74);
  v10 = (std::__shared_weak_count *)*((_QWORD *)&v74 + 1);
  if (*((_QWORD *)&v74 + 1))
  {
    v11 = (unint64_t *)(*((_QWORD *)&v74 + 1) + 8);
    do
      v12 = __ldaxr(v11);
    while (__stlxr(v12 - 1, v11));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
  v79 = 0u;
  v80 = 0u;
  v77 = 0u;
  v78 = 0u;
  v75 = 0u;
  v76 = 0u;
  v74 = 0u;
  if (a3)
  {
    v13 = *((_QWORD *)this + 4);
    while (v13 != *((_QWORD *)this + 3))
    {
      v14 = *(TUIComponent **)(v13 - 120);
      v13 -= 120;
      if (v14 == v8)
      {
        v15 = 0;
        v16 = *(_OWORD *)(v13 + 8);
        v17 = *(_OWORD *)(v13 + 40);
        v75 = *(_OWORD *)(v13 + 24);
        v76 = v17;
        v74 = v16;
        v18 = *(_OWORD *)(v13 + 56);
        v19 = *(_OWORD *)(v13 + 72);
        v20 = *(_OWORD *)(v13 + 104);
        v79 = *(_OWORD *)(v13 + 88);
        v80 = v20;
        v77 = v18;
        v78 = v19;
        goto LABEL_16;
      }
    }
    v15 = 1;
  }
  else
  {
    v15 = 0;
  }
LABEL_16:
  TUI::Evaluation::Variables::Scope::pushScope((TUI::Evaluation::Variables::Modern *)((char *)this + 920), 63);
  TUI::Evaluation::Variables::Capture::emptyClosedComponentPassthrough(&v72);
  TUI::Evaluation::Variables::Modern::_pushCapture(this, &v72);
  v21 = v73;
  if (!v73)
    goto LABEL_20;
  p_shared_owners = (unint64_t *)&v73->__shared_owners_;
  do
    v23 = __ldaxr(p_shared_owners);
  while (__stlxr(v23 - 1, p_shared_owners));
  if (!v23)
  {
    ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
    std::__shared_weak_count::__release_weak(v21);
    if (!v15)
      goto LABEL_50;
  }
  else
  {
LABEL_20:
    if (!v15)
      goto LABEL_50;
  }
  TUI::Evaluation::Variables::Scope::beginMark((TUI::Evaluation::Variables::Modern *)((char *)this + 920), (uint64_t)&v65);
  v78 = v69;
  v79 = v70;
  v80 = v71;
  v74 = v65;
  v75 = v66;
  v76 = v67;
  v77 = v68;
  if (a3)
  {
    v24 = *(id *)(*(_QWORD *)v9 + 72);
    if (objc_msgSend(v24, "count"))
    {
      v26 = *(_QWORD *)(*(_QWORD *)v9 + 24);
      v25 = *(std::__shared_weak_count **)(*(_QWORD *)v9 + 32);
      if (v25)
      {
        v27 = (unint64_t *)&v25->__shared_owners_;
        do
          v28 = __ldxr(v27);
        while (__stxr(v28 + 1, v27));
        do
          v29 = __ldaxr(v27);
        while (__stlxr(v29 - 1, v27));
        if (!v29)
        {
          ((void (*)(std::__shared_weak_count *))v25->__on_zero_shared)(v25);
          std::__shared_weak_count::__release_weak(v25);
        }
      }

      if (v26)
      {
        v30 = *(_QWORD *)(*(_QWORD *)v9 + 24);
        v31 = *(std::__shared_weak_count **)(*(_QWORD *)v9 + 32);
        *(_QWORD *)&v65 = v30;
        *((_QWORD *)&v65 + 1) = v31;
        if (v31)
        {
          v32 = (unint64_t *)&v31->__shared_owners_;
          do
            v33 = __ldxr(v32);
          while (__stxr(v33 + 1, v32));
        }
        v64[0] = _NSConcreteStackBlock;
        v64[1] = 3221225472;
        v64[2] = sub_28408;
        v64[3] = &unk_23E010;
        v64[4] = this;
        TUI::Evaluation::Variables::Capture::enumerate(v30, v64);
        if (v31)
        {
          v34 = (unint64_t *)&v31->__shared_owners_;
          do
            v35 = __ldaxr(v34);
          while (__stlxr(v35 - 1, v34));
          if (!v35)
          {
            ((void (*)(std::__shared_weak_count *))v31->__on_zero_shared)(v31);
            std::__shared_weak_count::__release_weak(v31);
          }
        }
      }
    }
    else
    {

    }
    v36 = *((_QWORD *)this + 6);
    v37 = (std::__shared_weak_count *)*((_QWORD *)this + 227);
    v62 = *((_QWORD *)this + 226);
    v63 = v37;
    if (v37)
    {
      v38 = (unint64_t *)&v37->__shared_owners_;
      do
        v39 = __ldxr(v38);
      while (__stxr(v39 + 1, v38));
    }
    TUI::Evaluation::Context::evaluateComponentLocals(v36, (uint64_t)&v62);
    v40 = v63;
    if (v63)
    {
      v41 = (unint64_t *)&v63->__shared_owners_;
      do
        v42 = __ldaxr(v41);
      while (__stlxr(v42 - 1, v41));
      if (!v42)
      {
        ((void (*)(std::__shared_weak_count *))v40->__on_zero_shared)(v40);
        std::__shared_weak_count::__release_weak(v40);
      }
    }
  }
  TUI::Evaluation::Variables::Scope::endMark((_QWORD *)this + 115, &v74);
LABEL_50:
  if ((a4 & 1) == 0)
    TUI::Evaluation::Variables::Modern::_popCapture(this);
  v70 = v79;
  v71 = v80;
  v65 = v74;
  v66 = v75;
  v68 = v77;
  v69 = v78;
  v67 = v76;
  v43 = *((_QWORD *)this + 5);
  v44 = *((_QWORD *)this + 4);
  if (v44 >= v43)
  {
    v46 = *((_QWORD *)this + 3);
    v47 = 0xEEEEEEEEEEEEEEEFLL * ((uint64_t)(v44 - v46) >> 3);
    v48 = v47 + 1;
    if (v47 + 1 > 0x222222222222222)
      sub_6F9C();
    v49 = 0xEEEEEEEEEEEEEEEFLL * ((uint64_t)(v43 - v46) >> 3);
    if (2 * v49 > v48)
      v48 = 2 * v49;
    if (v49 >= 0x111111111111111)
      v50 = 0x222222222222222;
    else
      v50 = v48;
    if (v50)
      v51 = (char *)sub_2A908((uint64_t)this + 40, v50);
    else
      v51 = 0;
    v52 = &v51[120 * v47];
    v53 = &v51[120 * v50];
    *(_QWORD *)v52 = v8;
    *(_OWORD *)(v52 + 8) = v65;
    *(_OWORD *)(v52 + 24) = v66;
    *(_OWORD *)(v52 + 40) = v67;
    *(_OWORD *)(v52 + 104) = v71;
    *(_OWORD *)(v52 + 88) = v70;
    *(_OWORD *)(v52 + 72) = v69;
    *(_OWORD *)(v52 + 56) = v68;
    v45 = v52 + 120;
    v55 = (char *)*((_QWORD *)this + 3);
    v54 = (char *)*((_QWORD *)this + 4);
    if (v54 != v55)
    {
      do
      {
        v56 = *(_OWORD *)(v54 - 120);
        v57 = *(_OWORD *)(v54 - 104);
        v58 = *(_OWORD *)(v54 - 88);
        *(_OWORD *)(v52 - 72) = *(_OWORD *)(v54 - 72);
        *(_OWORD *)(v52 - 88) = v58;
        *(_OWORD *)(v52 - 104) = v57;
        *(_OWORD *)(v52 - 120) = v56;
        v59 = *(_OWORD *)(v54 - 56);
        v60 = *(_OWORD *)(v54 - 40);
        v61 = *(_OWORD *)(v54 - 24);
        *((_QWORD *)v52 - 1) = *((_QWORD *)v54 - 1);
        *(_OWORD *)(v52 - 24) = v61;
        *(_OWORD *)(v52 - 40) = v60;
        *(_OWORD *)(v52 - 56) = v59;
        v52 -= 120;
        v54 -= 120;
      }
      while (v54 != v55);
      v54 = (char *)*((_QWORD *)this + 3);
    }
    *((_QWORD *)this + 3) = v52;
    *((_QWORD *)this + 4) = v45;
    *((_QWORD *)this + 5) = v53;
    if (v54)
      operator delete(v54);
  }
  else
  {
    *(_QWORD *)v44 = v8;
    *(_OWORD *)(v44 + 56) = v68;
    *(_OWORD *)(v44 + 72) = v69;
    *(_OWORD *)(v44 + 88) = v70;
    *(_OWORD *)(v44 + 104) = v71;
    *(_OWORD *)(v44 + 8) = v65;
    *(_OWORD *)(v44 + 24) = v66;
    *(_OWORD *)(v44 + 40) = v67;
    v45 = (char *)(v44 + 120);
  }
  *((_QWORD *)this + 4) = v45;

}

void sub_25D78(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  void *v9;
  va_list va;

  va_start(va, a9);
  sub_148E8((uint64_t)va);

  _Unwind_Resume(a1);
}

void TUI::Evaluation::Variables::Modern::newSnapshot(uint64_t a1, unsigned int a2)
{
  _QWORD *v4;
  uint64_t v5;

  v4 = objc_msgSend(*(id *)(a1 + 56), "packageBuffer");
  if (TUIClosureNotNil(a2) && v4[47] > (unint64_t)a2)
  {
    if (v4[46] + 28 * a2)
      TUI::Evaluation::Variables::Capture::create(*(void **)(a1 + 16), *(void **)(a1 + 56), &v5);
  }
  TUI::Evaluation::Variables::Capture::create(*(TUI::Evaluation::Variables::Capture **)(a1 + 16), &v5);
  operator new();
}

void sub_25F38(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13)
{
  sub_148E8((uint64_t)&a9);
  sub_148E8((uint64_t)&a13);
  _Unwind_Resume(a1);
}

void TUI::Evaluation::Variables::Modern::evaluateWithSnapshot(uint64_t a1, _QWORD *a2, void *a3)
{
  void (**v5)(_QWORD);
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t v9;
  unint64_t *v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  unint64_t *v20;
  unint64_t v21;
  TUIComponent *WeakRetained;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  std::__shared_weak_count *v26;
  unint64_t *v27;
  unint64_t v28;
  void *v29;
  __int128 v30;
  uint64_t v31;
  std::__shared_weak_count *v32;
  unint64_t *v33;
  unint64_t v34;
  std::__shared_weak_count *v35;
  unint64_t *v36;
  unint64_t v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  uint64_t v42;
  _BYTE v43[848];
  uint64_t v44;
  std::__shared_weak_count *v45;

  v5 = a3;
  v6 = *(std::__shared_weak_count **)(a1 + 1800);
  v44 = *(_QWORD *)(a1 + 1792);
  v45 = v6;
  if (v6)
  {
    p_shared_owners = (unint64_t *)&v6->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
  }
  TUI::Evaluation::Variables::Scope::Scope((TUI::Evaluation::Variables::Scope *)v43);
  v41 = 0uLL;
  v42 = 0;
  v9 = a2[1];
  *(_QWORD *)&v40 = *a2;
  *((_QWORD *)&v40 + 1) = v9;
  if (v9)
  {
    v10 = (unint64_t *)(v9 + 8);
    do
      v11 = __ldxr(v10);
    while (__stxr(v11 + 1, v10));
  }
  sub_255FC(a1 + 1792, &v40);
  v12 = (std::__shared_weak_count *)*((_QWORD *)&v40 + 1);
  if (*((_QWORD *)&v40 + 1))
  {
    v13 = (unint64_t *)(*((_QWORD *)&v40 + 1) + 8);
    do
      v14 = __ldaxr(v13);
    while (__stlxr(v14 - 1, v13));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  TUI::Evaluation::Variables::Scope::swap((TUI::Evaluation::Variables::Scope *)(a1 + 920), (TUI::Evaluation::Variables::Scope *)v43);
  v38 = *(_OWORD *)(a1 + 1768);
  *(_OWORD *)(a1 + 1768) = 0u;
  v15 = *(_QWORD *)(a1 + 1784);
  *(_QWORD *)(a1 + 1784) = 0;
  v16 = *(_OWORD *)(a1 + 1824);
  *(_OWORD *)(a1 + 1824) = v41;
  v41 = v16;
  v17 = *(_QWORD *)(a1 + 1840);
  *(_QWORD *)(a1 + 1840) = v42;
  v42 = v17;
  v18 = *(id *)(a1 + 16);
  v19 = *(_QWORD *)(a1 + 1816);
  *(_QWORD *)&v40 = *(_QWORD *)(a1 + 1808);
  *((_QWORD *)&v40 + 1) = v19;
  if (v19)
  {
    v20 = (unint64_t *)(v19 + 8);
    do
      v21 = __ldxr(v20);
    while (__stxr(v21 + 1, v20));
  }
  WeakRetained = (TUIComponent *)objc_loadWeakRetained((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 1792) + 8) + 32));
  if (WeakRetained)
  {
    TUI::Evaluation::Variables::Modern::pushComponent((TUI::Evaluation::Variables::Modern *)a1, WeakRetained, 1, 0);
  }
  else
  {
    *(_QWORD *)(a1 + 16) = 0;
    v39 = 0uLL;
    sub_255FC(a1 + 1808, &v39);
    v26 = (std::__shared_weak_count *)*((_QWORD *)&v39 + 1);
    if (*((_QWORD *)&v39 + 1))
    {
      v27 = (unint64_t *)(*((_QWORD *)&v39 + 1) + 8);
      do
        v28 = __ldaxr(v27);
      while (__stlxr(v28 - 1, v27));
      if (!v28)
      {
        ((void (*)(std::__shared_weak_count *))v26->__on_zero_shared)(v26);
        std::__shared_weak_count::__release_weak(v26);
      }
    }
  }
  v5[2](v5);
  if (WeakRetained)
  {
    v24 = *(_QWORD *)(a1 + 24);
    v23 = *(_QWORD *)(a1 + 32);
    *(_QWORD *)(a1 + 32) = v23 - 120;
    if (v24 == v23 - 120)
      v25 = 0;
    else
      v25 = *(_QWORD *)(v23 - 240);
    *(_QWORD *)(a1 + 16) = v25;
    TUI::Evaluation::Variables::Scope::popScope((TUI::Evaluation::Variables::Scope *)(a1 + 920));
  }
  *(_QWORD *)(a1 + 16) = v18;
  sub_26314((_QWORD *)(a1 + 1808), (uint64_t *)&v40);
  sub_26314((_QWORD *)(a1 + 1792), &v44);
  TUI::Evaluation::Variables::Scope::swap((TUI::Evaluation::Variables::Scope *)(a1 + 920), (TUI::Evaluation::Variables::Scope *)v43);
  v29 = *(void **)(a1 + 1768);
  *(_OWORD *)(a1 + 1768) = v38;
  *(_QWORD *)(a1 + 1784) = v15;
  v30 = *(_OWORD *)(a1 + 1824);
  *(_OWORD *)(a1 + 1824) = v41;
  v41 = v30;
  v31 = *(_QWORD *)(a1 + 1840);
  *(_QWORD *)(a1 + 1840) = v42;
  v42 = v31;

  v32 = (std::__shared_weak_count *)*((_QWORD *)&v40 + 1);
  if (*((_QWORD *)&v40 + 1))
  {
    v33 = (unint64_t *)(*((_QWORD *)&v40 + 1) + 8);
    do
      v34 = __ldaxr(v33);
    while (__stlxr(v34 - 1, v33));
    if (!v34)
    {
      ((void (*)(std::__shared_weak_count *))v32->__on_zero_shared)(v32);
      std::__shared_weak_count::__release_weak(v32);
    }
  }

  *(_QWORD *)&v40 = &v41;
  sub_2A0E0((void ***)&v40);
  if (v29)
    operator delete(v29);
  TUI::Evaluation::Variables::Scope::~Scope((TUI::Evaluation::Variables::Scope *)v43);
  v35 = v45;
  if (v45)
  {
    v36 = (unint64_t *)&v45->__shared_owners_;
    do
      v37 = __ldaxr(v36);
    while (__stlxr(v37 - 1, v36));
    if (!v37)
    {
      ((void (*)(std::__shared_weak_count *))v35->__on_zero_shared)(v35);
      std::__shared_weak_count::__release_weak(v35);
    }
  }

}

void sub_262A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  void *v5;
  uint64_t v6;
  void **v8;
  va_list va;
  uint64_t v10;
  uint64_t v11;
  va_list va1;
  uint64_t v13;
  uint64_t v14;
  va_list va2;

  va_start(va2, a5);
  va_start(va1, a5);
  va_start(va, a5);
  va_arg(va1, _QWORD);
  v10 = va_arg(va1, _QWORD);
  va_copy(va2, va1);
  v11 = va_arg(va2, _QWORD);
  v13 = va_arg(va2, _QWORD);
  v14 = va_arg(va2, _QWORD);
  va_copy((va_list)v8, va1);
  sub_2A0E0((void ***)va);
  TUI::Evaluation::Variables::Scope::~Scope((TUI::Evaluation::Variables::Scope *)va2);
  sub_148E8(v6 - 104);

  _Unwind_Resume(a1);
}

_QWORD *sub_26314(_QWORD *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;

  v4 = *a2;
  v3 = a2[1];
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  v7 = (std::__shared_weak_count *)a1[1];
  *a1 = v4;
  a1[1] = v3;
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  return a1;
}

void TUI::Evaluation::Variables::Modern::closureCapture(uint64_t a1@<X0>, unsigned int a2@<W1>, uint64_t a3@<X8>)
{
  sub_26398(a1, a2, 1, a3);
}

void sub_26398(uint64_t a1@<X0>, unsigned int a2@<W1>, int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v5;
  _QWORD *v7;
  _BOOL4 v8;
  _BOOL4 v9;
  TUI::Evaluation::Variables::Capture *v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t *v14;
  __int128 v15;

  *(_DWORD *)a4 = a2;
  *(_QWORD *)(a4 + 16) = 0;
  *(_QWORD *)(a4 + 8) = 0;
  v5 = a4 + 8;
  if (a3)
  {
    v7 = objc_msgSend(*(id *)(a1 + 56), "packageBuffer");
    v8 = TUIClosureNotNil(a2);
    v9 = v7[47] > (unint64_t)a2 && v8;
    if (v9 && v7[46] + 28 * a2)
      TUI::Evaluation::Variables::Capture::create(*(void **)(a1 + 16), *(void **)(a1 + 56), &v15);
    if (TUIClosureIsNil(a2))
    {
      v10 = *(TUI::Evaluation::Variables::Capture **)(a1 + 16);
      if (v10)
      {
        TUI::Evaluation::Variables::Capture::create(v10, &v15);
        sub_255FC(v5, &v15);
        v11 = (std::__shared_weak_count *)*((_QWORD *)&v15 + 1);
        if (!*((_QWORD *)&v15 + 1))
          return;
        v12 = (unint64_t *)(*((_QWORD *)&v15 + 1) + 8);
        do
          v13 = __ldaxr(v12);
        while (__stlxr(v13 - 1, v12));
      }
      else
      {
        TUI::Evaluation::Variables::Capture::emptyClosed(&v15);
        sub_255FC(v5, &v15);
        v11 = (std::__shared_weak_count *)*((_QWORD *)&v15 + 1);
        if (!*((_QWORD *)&v15 + 1))
          return;
        v14 = (unint64_t *)(*((_QWORD *)&v15 + 1) + 8);
        do
          v13 = __ldaxr(v14);
        while (__stlxr(v13 - 1, v14));
      }
      if (!v13)
      {
        ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
        std::__shared_weak_count::__release_weak(v11);
      }
    }
  }
}

void sub_264F4(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_148E8(v1);
  _Unwind_Resume(a1);
}

void TUI::Evaluation::Variables::Modern::pushClosure(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *v8;
  unint64_t v9;
  uint64_t v10;
  TUI::Evaluation::Variables::Capture *v11;
  TUI::Evaluation::Variables::Capture *v12;
  TUI::Evaluation::Variables::Capture *v13[2];

  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)a2 + 80))(&v10, a2, a3);
  v4 = (std::__shared_weak_count *)v12;
  v13[0] = v11;
  v13[1] = v12;
  v11 = 0;
  v12 = 0;
  TUI::Evaluation::Variables::Modern::_pushCapture(a1, v13);
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v6 = __ldaxr(p_shared_owners);
    while (__stlxr(v6 - 1, p_shared_owners));
    if (!v6)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  v7 = (std::__shared_weak_count *)v12;
  if (v12)
  {
    v8 = (unint64_t *)((char *)v12 + 8);
    do
      v9 = __ldaxr(v8);
    while (__stlxr(v9 - 1, v8));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
}

{
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *v8;
  unint64_t v9;
  uint64_t v10;
  TUI::Evaluation::Variables::Capture *v11;
  TUI::Evaluation::Variables::Capture *v12;
  TUI::Evaluation::Variables::Capture *v13[2];

  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)a2 + 104))(&v10, a2, a3);
  v4 = (std::__shared_weak_count *)v12;
  v13[0] = v11;
  v13[1] = v12;
  v11 = 0;
  v12 = 0;
  TUI::Evaluation::Variables::Modern::_pushCapture(a1, v13);
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v6 = __ldaxr(p_shared_owners);
    while (__stlxr(v6 - 1, p_shared_owners));
    if (!v6)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  v7 = (std::__shared_weak_count *)v12;
  if (v12)
  {
    v8 = (unint64_t *)((char *)v12 + 8);
    do
      v9 = __ldaxr(v8);
    while (__stlxr(v9 - 1, v8));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
}

{
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *v8;
  unint64_t v9;
  uint64_t v10;
  TUI::Evaluation::Variables::Capture *v11;
  TUI::Evaluation::Variables::Capture *v12;
  TUI::Evaluation::Variables::Capture *v13[2];

  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)a2 + 112))(&v10, a2, a3);
  v4 = (std::__shared_weak_count *)v12;
  v13[0] = v11;
  v13[1] = v12;
  v11 = 0;
  v12 = 0;
  TUI::Evaluation::Variables::Modern::_pushCapture(a1, v13);
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v6 = __ldaxr(p_shared_owners);
    while (__stlxr(v6 - 1, p_shared_owners));
    if (!v6)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  v7 = (std::__shared_weak_count *)v12;
  if (v12)
  {
    v8 = (unint64_t *)((char *)v12 + 8);
    do
      v9 = __ldaxr(v8);
    while (__stlxr(v9 - 1, v8));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
}

{
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *v8;
  unint64_t v9;
  uint64_t v10;
  TUI::Evaluation::Variables::Capture *v11;
  TUI::Evaluation::Variables::Capture *v12;
  TUI::Evaluation::Variables::Capture *v13[2];

  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)a2 + 88))(&v10, a2, a3);
  v4 = (std::__shared_weak_count *)v12;
  v13[0] = v11;
  v13[1] = v12;
  v11 = 0;
  v12 = 0;
  TUI::Evaluation::Variables::Modern::_pushCapture(a1, v13);
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v6 = __ldaxr(p_shared_owners);
    while (__stlxr(v6 - 1, p_shared_owners));
    if (!v6)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  v7 = (std::__shared_weak_count *)v12;
  if (v12)
  {
    v8 = (unint64_t *)((char *)v12 + 8);
    do
      v9 = __ldaxr(v8);
    while (__stlxr(v9 - 1, v8));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
}

{
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *v8;
  unint64_t v9;
  uint64_t v10;
  TUI::Evaluation::Variables::Capture *v11;
  TUI::Evaluation::Variables::Capture *v12;
  TUI::Evaluation::Variables::Capture *v13[2];

  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)a2 + 96))(&v10, a2, a3);
  v4 = (std::__shared_weak_count *)v12;
  v13[0] = v11;
  v13[1] = v12;
  v11 = 0;
  v12 = 0;
  TUI::Evaluation::Variables::Modern::_pushCapture(a1, v13);
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v6 = __ldaxr(p_shared_owners);
    while (__stlxr(v6 - 1, p_shared_owners));
    if (!v6)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  v7 = (std::__shared_weak_count *)v12;
  if (v12)
  {
    v8 = (unint64_t *)((char *)v12 + 8);
    do
      v9 = __ldaxr(v8);
    while (__stlxr(v9 - 1, v8));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
}

void sub_265E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  uint64_t v5;
  va_list va;

  va_start(va, a5);
  sub_148E8((uint64_t)va);
  sub_148E8(v5);
  _Unwind_Resume(a1);
}

void sub_266D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  uint64_t v5;
  va_list va;

  va_start(va, a5);
  sub_148E8((uint64_t)va);
  sub_148E8(v5);
  _Unwind_Resume(a1);
}

void sub_267BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  uint64_t v5;
  va_list va;

  va_start(va, a5);
  sub_148E8((uint64_t)va);
  sub_148E8(v5);
  _Unwind_Resume(a1);
}

void sub_268A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  uint64_t v5;
  va_list va;

  va_start(va, a5);
  sub_148E8((uint64_t)va);
  sub_148E8(v5);
  _Unwind_Resume(a1);
}

void sub_26994(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  uint64_t v5;
  va_list va;

  va_start(va, a5);
  sub_148E8((uint64_t)va);
  sub_148E8(v5);
  _Unwind_Resume(a1);
}

void TUI::Evaluation::Variables::Modern::pushClosure(_QWORD *a1, TUI::Evaluation::Variables::Capture **a2)
{
  TUI::Evaluation::Variables::Capture *v2;
  unint64_t *v3;
  unint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  TUI::Evaluation::Variables::Capture *v7[2];

  v2 = a2[1];
  v7[0] = *a2;
  v7[1] = v2;
  if (v2)
  {
    v3 = (unint64_t *)((char *)v2 + 8);
    do
      v4 = __ldxr(v3);
    while (__stxr(v4 + 1, v3));
  }
  TUI::Evaluation::Variables::Modern::_pushCapture(a1, v7);
  if (v2)
  {
    v5 = (unint64_t *)((char *)v2 + 8);
    do
      v6 = __ldaxr(v5);
    while (__stlxr(v6 - 1, v5));
    if (!v6)
    {
      (*(void (**)(TUI::Evaluation::Variables::Capture *))(*(_QWORD *)v2 + 16))(v2);
      std::__shared_weak_count::__release_weak((std::__shared_weak_count *)v2);
    }
  }
}

void sub_26A38(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_148E8((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t TUI::Evaluation::Variables::Modern::define(uint64_t a1, unsigned int a2, const TUI::Evaluation::Enumerator::State *a3)
{
  return TUI::Evaluation::Variables::Scope::define(a1 + 920, a2, a3);
}

uint64_t `non-virtual thunk to'TUI::Evaluation::Variables::Modern::define(uint64_t a1, unsigned int a2, const TUI::Evaluation::Enumerator::State *a3)
{
  return TUI::Evaluation::Variables::Scope::define(a1 + 912, a2, a3);
}

uint64_t *TUI::Evaluation::Variables::Modern::define(uint64_t a1, unsigned int a2, id *a3)
{
  return TUI::Evaluation::Variables::Scope::define(a1 + 920, a2, a3);
}

uint64_t *`non-virtual thunk to'TUI::Evaluation::Variables::Modern::define(uint64_t a1, unsigned int a2, id *a3)
{
  return TUI::Evaluation::Variables::Scope::define(a1 + 912, a2, a3);
}

void TUI::Evaluation::Variables::Modern::define(uint64_t a1, unsigned int a2, uint64_t a3, unsigned int a4)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  int v10[4];
  std::__shared_weak_count *v11;

  v6 = a1 + 920;
  (*(void (**)(int *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)a1 + 112))(v10, a1, a4);
  TUI::Evaluation::Variables::Scope::define(v6, a2, a3, v10);
  v7 = v11;
  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
}

{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  int v10[4];
  std::__shared_weak_count *v11;

  v6 = a1 + 920;
  (*(void (**)(int *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)a1 + 112))(v10, a1, a4);
  TUI::Evaluation::Variables::Scope::define(v6, a2, a3, v10);
  v7 = v11;
  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
}

{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  int v10[4];
  std::__shared_weak_count *v11;

  v6 = a1 + 920;
  (*(void (**)(int *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)a1 + 112))(v10, a1, a4);
  TUI::Evaluation::Variables::Scope::define(v6, a2, a3, v10);
  v7 = v11;
  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
}

void sub_26B18(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_148E8(v1 + 8);
  _Unwind_Resume(a1);
}

void `non-virtual thunk to'TUI::Evaluation::Variables::Modern::define(uint64_t a1, unsigned int a2, uint64_t a3, unsigned int a4)
{
  TUI::Evaluation::Variables::Modern::define(a1 - 8, a2, a3, a4);
}

{
  TUI::Evaluation::Variables::Modern::define(a1 - 8, a2, a3, a4);
}

{
  TUI::Evaluation::Variables::Modern::define(a1 - 8, a2, a3, a4);
}

void TUI::Evaluation::Variables::Modern::define(uint64_t a1, unsigned int a2, uint64_t a3, unsigned int a4, int a5)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  int v10[4];
  std::__shared_weak_count *v11;
  __int128 v12;
  uint64_t v13;

  v6 = a1 + 920;
  v12 = *(_OWORD *)a3;
  v13 = *(_QWORD *)(a3 + 16);
  sub_26398(a1, a4, a5, (uint64_t)v10);
  TUI::Evaluation::Variables::Scope::define(v6, a2, &v12, v10);
  v7 = v11;
  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
}

{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  int v11[4];
  std::__shared_weak_count *v12;

  v7 = a1 + 920;
  sub_26398(a1, a4, a5, (uint64_t)v11);
  TUI::Evaluation::Variables::Scope::define(v7, a2, a3, v11);
  v8 = v12;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v10 = __ldaxr(p_shared_owners);
    while (__stlxr(v10 - 1, p_shared_owners));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
}

void sub_26BDC(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_148E8(v1 + 8);
  _Unwind_Resume(a1);
}

void `non-virtual thunk to'TUI::Evaluation::Variables::Modern::define(uint64_t a1, unsigned int a2, uint64_t a3, unsigned int a4, int a5)
{
  TUI::Evaluation::Variables::Modern::define(a1 - 8, a2, a3, a4, a5);
}

{
  TUI::Evaluation::Variables::Modern::define(a1 - 8, a2, a3, a4, a5);
}

void sub_26C98(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_148E8(v1 + 8);
  _Unwind_Resume(a1);
}

void sub_26D50(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_148E8(v1 + 8);
  _Unwind_Resume(a1);
}

void sub_26E0C(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_148E8(v1 + 8);
  _Unwind_Resume(a1);
}

uint64_t *TUI::Evaluation::Variables::Modern::define(uint64_t a1, unsigned int a2, uint64_t a3, int *a4)
{
  return TUI::Evaluation::Variables::Scope::define(a1 + 920, a2, a3, a4);
}

uint64_t *`non-virtual thunk to'TUI::Evaluation::Variables::Modern::define(uint64_t a1, unsigned int a2, uint64_t a3, int *a4)
{
  return TUI::Evaluation::Variables::Scope::define(a1 + 912, a2, a3, a4);
}

uint64_t TUI::Evaluation::Variables::Modern::evaluateGlobalsDependencies(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v4;
  unint64_t v5;
  _QWORD *v10;
  unsigned int v11;
  _QWORD *v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unsigned __int16 *v16;
  id v17;
  void *v18;
  std::__shared_weak_count *v19;
  unint64_t *v20;
  unint64_t v21;
  __int128 v23;

  v10 = objc_msgSend(*(id *)(a1 + 56), "packageBuffer");
  v11 = *(unsigned __int16 *)(a2 + 10);
  if (!*(_WORD *)(a2 + 10))
    return 0;
  v12 = v10;
  v13 = 0;
  v14 = 0;
  do
  {
    v15 = v14 + *(unsigned int *)(a2 + 4);
    if (v12[43] > v15)
    {
      v16 = (unsigned __int16 *)(v12[42] + 4 * v15);
      if (v16)
      {
        v5 = v5 & 0xFFFFFFFF00000000 | *v16 | ((unint64_t)v16[1] << 16);
        TUI::Evaluation::Variables::Modern::globalsWithName(&v23, a1, v5, a3, a4);
        if ((_QWORD)v23)
        {
          sub_27580((char **)(a1 + 1824), &v23);
          v13 |= *(_QWORD *)(v23 + 72) | *(_QWORD *)(v23 + 80);
        }
        else
        {
          v4 = v4 & 0xFFFFFFFF00000000 | *v16 | ((unint64_t)v16[1] << 16);
          v17 = TUI::Symbol::Tab::string(*(TUI::Symbol::Tab **)(a1 + 64), v4);
          v18 = (void *)objc_claimAutoreleasedReturnValue(v17);
          TUI::Evaluation::Context::reportError(a4, 1012, v18);

        }
        v19 = (std::__shared_weak_count *)*((_QWORD *)&v23 + 1);
        if (*((_QWORD *)&v23 + 1))
        {
          v20 = (unint64_t *)(*((_QWORD *)&v23 + 1) + 8);
          do
            v21 = __ldaxr(v20);
          while (__stlxr(v21 - 1, v20));
          if (!v21)
          {
            ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
            std::__shared_weak_count::__release_weak(v19);
          }
        }
        v11 = *(unsigned __int16 *)(a2 + 10);
      }
    }
    ++v14;
  }
  while (v14 < v11);
  return v13;
}

void sub_26FC0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  void *v3;
  va_list va;

  va_start(va, a3);

  sub_148E8((uint64_t)va);
  _Unwind_Resume(a1);
}

void TUI::Evaluation::Variables::Modern::globalsWithName(uint64_t a1@<X0>, int a2@<W1>, _QWORD *a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t **v10;
  unsigned int *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  unsigned int v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  unint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;
  id v35;
  id v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __int128 v42;
  __int128 v43;
  uint64_t v44;
  _BYTE v45[852];
  unsigned int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unsigned __int16 v51[10];

  *a5 = 0;
  a5[1] = 0;
  v46 = a2;
  v10 = sub_28810(a3, (unsigned __int16 *)&v46);
  if (v10)
  {
    sub_26314(a5, (uint64_t *)v10 + 3);
  }
  else
  {
    v11 = (unsigned int *)TUI::Package::Buffer::globalsWithName((uint64_t)objc_msgSend(*(id *)(a1 + 56), "packageBuffer"), a2);
    if (v11)
    {
      v12 = *(_QWORD *)(a1 + 16);
      *(_QWORD *)(a1 + 16) = 0;
      TUI::Evaluation::Variables::Scope::Scope((TUI::Evaluation::Variables::Scope *)v45);
      TUI::Evaluation::Variables::Scope::swap((TUI::Evaluation::Variables::Scope *)(a1 + 920), (TUI::Evaluation::Variables::Scope *)v45);
      v42 = *(_OWORD *)(a1 + 1768);
      v13 = *(_QWORD *)(a1 + 1784);
      v14 = *(_QWORD *)(a1 + 1792);
      *(_OWORD *)(a1 + 1768) = 0u;
      *(_OWORD *)(a1 + 1784) = 0u;
      v15 = *(_QWORD *)(a1 + 1800);
      *(_QWORD *)(a1 + 1800) = 0;
      v40 = v14;
      v41 = v12;
      v38 = v15;
      v39 = v13;
      v16 = *(_OWORD *)(a1 + 1824);
      *(_OWORD *)(a1 + 1824) = 0uLL;
      v43 = v16;
      v17 = *(_QWORD *)(a1 + 1840);
      *(_QWORD *)(a1 + 1840) = 0;
      v44 = v17;
      TUI::Evaluation::Variables::Modern::evaluateGlobalsDependencies(a1, (uint64_t)v11, (uint64_t)a3, a4);
      v18 = *(_QWORD *)(a4 + 768);
      if (v18)
      {
        v19 = v46;
        *(_DWORD *)v51 = v46;
        v20 = sub_28810((_QWORD *)(v18 + 48), v51);
        if (!v20)
        {
          v48 = 0;
          v49 = 0;
          v50 = 0;
          LODWORD(v47) = *(_DWORD *)v51;
          v20 = sub_288DC(v18 + 48, (unsigned __int16 *)&v47, (uint64_t)&v47);
        }
        ++v20[3];
        *(_DWORD *)(v18 + 16 * *(_QWORD *)(v18 + 3224) + 3208) = v19;
        v21 = mach_absolute_time();
        v22 = *(_QWORD *)(v18 + 3224);
        *(_QWORD *)(v18 + 16 * v22 + 3216) = v21;
        *(_QWORD *)(v18 + 3224) = v22 + 1;
        v23 = *(_QWORD *)(a4 + 768);
        *(_DWORD *)v51 = v46;
        v24 = v23 + 48;
        v25 = sub_28810((_QWORD *)(v23 + 48), v51);
        if (!v25)
        {
          v48 = 0;
          v49 = 0;
          v50 = 0;
          LODWORD(v47) = *(_DWORD *)v51;
          v25 = sub_288DC(v24, (unsigned __int16 *)&v47, (uint64_t)&v47);
        }
        ++v25[4];
      }
      TUI::Evaluation::Context::evaluateGlobals(a4, *v11 | ((unint64_t)*((unsigned __int16 *)v11 + 4) << 32));
      v26 = *(_QWORD *)(a4 + 768);
      if (v26)
      {
        v27 = *(_QWORD *)(v26 + 3224) - 1;
        *(_QWORD *)(v26 + 3224) = v27;
        v28 = v26 + 16 * v27;
        v29 = *(_DWORD *)(v28 + 3208);
        v30 = *(_QWORD *)(v28 + 3216);
        v31 = mach_absolute_time();
        *(_DWORD *)v51 = v29;
        v32 = (_QWORD *)(v26 + 48);
        v33 = sub_28810(v32, v51);
        if (!v33)
        {
          v48 = 0;
          v49 = 0;
          v50 = 0;
          LODWORD(v47) = *(_DWORD *)v51;
          v33 = sub_288DC((uint64_t)v32, (unsigned __int16 *)&v47, (uint64_t)&v47);
        }
        v34 = v31 - v30;
        if (v30 >= v31)
          v34 = v30 - v31;
        v33[5] += v34;
      }
      TUI::Evaluation::Variables::Scope::swap((TUI::Evaluation::Variables::Scope *)(a1 + 920), (TUI::Evaluation::Variables::Scope *)v45);
      *(_OWORD *)(a1 + 1768) = v42;
      *(_QWORD *)(a1 + 1784) = v39;
      *(_QWORD *)(a1 + 1792) = v40;
      *(_QWORD *)(a1 + 1800) = v38;
      *(_OWORD *)(a1 + 1824) = v43;
      *(_QWORD *)(a1 + 1840) = v44;
      *(_QWORD *)(a1 + 16) = v41;
      v35 = TUI::Symbol::Tab::string(*(TUI::Symbol::Tab **)(a1 + 64), v46);
      objc_claimAutoreleasedReturnValue(v35);
      operator new();
    }
    v36 = TUI::Symbol::Tab::string(*(TUI::Symbol::Tab **)(a1 + 64), v46);
    v37 = (void *)objc_claimAutoreleasedReturnValue(v36);
    TUI::Evaluation::Context::reportError(a4, 1012, v37);

  }
}

void sub_2749C(_Unwind_Exception *a1)
{
  uint64_t v1;
  void *v2;

  sub_148E8(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_27580(char **a1, __int128 *a2)
{
  uint64_t result;
  unint64_t v5;
  unint64_t v6;
  char *v7;
  uint64_t v8;
  unint64_t *v9;
  unint64_t v10;
  char *v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  __int128 v19;
  unint64_t *v20;
  unint64_t v21;
  char *v22;
  char *v23;
  char *v24;
  __int128 v25;
  int64x2_t v26;
  char *v27;
  uint64_t v28;
  int64x2_t v29;
  char *v30;
  uint64_t v31;

  v6 = (unint64_t)a1[2];
  result = (uint64_t)(a1 + 2);
  v5 = v6;
  v7 = *(char **)(result - 8);
  if ((unint64_t)v7 >= v6)
  {
    v12 = (v7 - *a1) >> 4;
    v13 = v12 + 1;
    if ((unint64_t)(v12 + 1) >> 60)
      sub_6F9C();
    v14 = v5 - (_QWORD)*a1;
    if (v14 >> 3 > v13)
      v13 = v14 >> 3;
    if ((unint64_t)v14 >= 0x7FFFFFFFFFFFFFF0)
      v15 = 0xFFFFFFFFFFFFFFFLL;
    else
      v15 = v13;
    v31 = result;
    v16 = (char *)sub_22FD4(result, v15);
    v18 = &v16[16 * v12];
    v19 = *a2;
    *(_OWORD *)v18 = *a2;
    if (*((_QWORD *)&v19 + 1))
    {
      v20 = (unint64_t *)(*((_QWORD *)&v19 + 1) + 8);
      do
        v21 = __ldxr(v20);
      while (__stxr(v21 + 1, v20));
    }
    v23 = *a1;
    v22 = a1[1];
    if (v22 == *a1)
    {
      v26 = vdupq_n_s64((unint64_t)v22);
      v24 = &v16[16 * v12];
    }
    else
    {
      v24 = &v16[16 * v12];
      do
      {
        v25 = *((_OWORD *)v22 - 1);
        v22 -= 16;
        *((_OWORD *)v24 - 1) = v25;
        v24 -= 16;
        *(_QWORD *)v22 = 0;
        *((_QWORD *)v22 + 1) = 0;
      }
      while (v22 != v23);
      v26 = *(int64x2_t *)a1;
    }
    v11 = v18 + 16;
    *a1 = v24;
    a1[1] = v18 + 16;
    v29 = v26;
    v27 = a1[2];
    a1[2] = &v16[16 * v17];
    v30 = v27;
    v28 = v26.i64[0];
    result = sub_2A308((uint64_t)&v28);
  }
  else
  {
    *(_QWORD *)v7 = *(_QWORD *)a2;
    v8 = *((_QWORD *)a2 + 1);
    *((_QWORD *)v7 + 1) = v8;
    if (v8)
    {
      v9 = (unint64_t *)(v8 + 8);
      do
        v10 = __ldxr(v9);
      while (__stxr(v10 + 1, v9));
    }
    v11 = v7 + 16;
  }
  a1[1] = v11;
  return result;
}

void TUI::Evaluation::Variables::Modern::globalsWithName(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  TUI::Evaluation::Variables::Modern::globalsWithName(a1, a2, (_QWORD *)(a1 + 1848), a3, a4);
}

void TUI::Evaluation::Variables::Modern::useGlobalsWithName(uint64_t a1, unsigned int a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  __int128 v12;

  (*(void (**)(__int128 *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)a1 + 192))(&v12, a1, a2);
  if ((_QWORD)v12)
  {
    v3 = *(_QWORD *)(a1 + 1824);
    v4 = *(_QWORD *)(a1 + 1832);
    if (v3 != v4)
    {
      v5 = 0;
      while (*(_QWORD *)(v3 + v5) != (_QWORD)v12)
      {
        v5 += 16;
        if (v3 + v5 == v4)
          goto LABEL_13;
      }
      v6 = v3 + v5;
      if (v3 + v5 + 16 != v4)
      {
        do
        {
          v7 = v6 + 16;
          sub_255FC(v6, (__int128 *)(v6 + 16));
          v8 = v6 + 32;
          v6 += 16;
        }
        while (v8 != v4);
        v4 = *(_QWORD *)(a1 + 1832);
        v6 = v7;
      }
      while (v4 != v6)
      {
        v4 -= 16;
        sub_148E8(v4);
      }
      *(_QWORD *)(a1 + 1832) = v6;
    }
LABEL_13:
    sub_27580((char **)(a1 + 1824), &v12);
  }
  v9 = (std::__shared_weak_count *)*((_QWORD *)&v12 + 1);
  if (*((_QWORD *)&v12 + 1))
  {
    v10 = (unint64_t *)(*((_QWORD *)&v12 + 1) + 8);
    do
      v11 = __ldaxr(v10);
    while (__stlxr(v11 - 1, v10));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
}

void sub_277F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_148E8((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t TUI::Evaluation::Variables::Modern::resetGlobals(TUI::Evaluation::Variables::Modern *this)
{
  return sub_27818((uint64_t)this + 1824, *((_QWORD *)this + 228), *((_QWORD *)this + 229));
}

uint64_t sub_27818(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if (a2 != a3)
  {
    v5 = a3;
    v6 = *(_QWORD *)(a1 + 8);
    if (a3 == v6)
    {
      v8 = a2;
    }
    else
    {
      v7 = 16 * ((a3 - a2) >> 4);
      v8 = a2;
      do
      {
        sub_255FC(v8, (__int128 *)(v8 + v7));
        v8 += 16;
      }
      while (v8 + v7 != v6);
      v5 = *(_QWORD *)(a1 + 8);
    }
    while (v5 != v8)
      v5 = sub_148E8(v5 - 16);
    *(_QWORD *)(a1 + 8) = v8;
  }
  return a2;
}

uint64_t TUI::Evaluation::Variables::Modern::globalsEnvironmentUseMask(TUI::Evaluation::Variables::Modern *this)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;

  v1 = (uint64_t *)*((_QWORD *)this + 228);
  v2 = (uint64_t *)*((_QWORD *)this + 229);
  if (v1 == v2)
    return 0;
  v3 = 0;
  do
  {
    v4 = *v1;
    v5 = (std::__shared_weak_count *)v1[1];
    if (v5)
    {
      p_shared_owners = (unint64_t *)&v5->__shared_owners_;
      do
        v7 = __ldxr(p_shared_owners);
      while (__stxr(v7 + 1, p_shared_owners));
      v8 = *(_QWORD *)(v4 + 80) | *(_QWORD *)(v4 + 72);
      do
        v9 = __ldaxr(p_shared_owners);
      while (__stlxr(v9 - 1, p_shared_owners));
      if (!v9)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }
    else
    {
      v8 = *(_QWORD *)(v4 + 80) | *(_QWORD *)(v4 + 72);
    }
    v3 |= v8;
    v1 += 2;
  }
  while (v1 != v2);
  return v3;
}

void TUI::Evaluation::Variables::Modern::updateGlobalsWithEnvironment(TUI::Evaluation::Variables::Modern *this, TUIEnvironment *a2, TUI::Evaluation::Context *a3)
{
  uint64_t v5;
  id v6;
  NSObject *v7;
  os_signpost_id_t v8;
  id v9;
  NSObject *v10;
  NSObject *v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  unsigned __int16 *v16;
  int v17;
  int v18;
  uint64_t **v19;
  uint64_t *v20;
  uint64_t *v21;
  unint64_t *v22;
  unint64_t v23;
  uint64_t v24;
  id v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  int v29;
  uint64_t v30;
  BOOL v31;
  id v32;
  NSObject *v33;
  id v34;
  __int128 v35;
  uint64_t v36;
  unsigned int *v37;
  __int128 v38;
  uint64_t v39;
  BOOL v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  std::__shared_weak_count *v44;
  __int128 v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  int v54;
  unint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  _QWORD *v58;
  uint64_t v59;
  void *v60;
  uint64_t v61;
  std::__shared_weak_count *v62;
  __int128 v63;
  uint64_t v64;
  unsigned int v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD *v68;
  unint64_t *p_shared_owners;
  unint64_t v70;
  uint64_t **v71;
  uint64_t *v72;
  std::__shared_weak_count *v73;
  unint64_t *v74;
  unint64_t v75;
  std::__shared_weak_count *v76;
  unint64_t *v77;
  unint64_t v78;
  id v79;
  NSObject *v80;
  NSObject *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  std::__shared_weak_count *v88;
  uint64_t v89;
  __int128 v90;
  unint64_t v91;
  __int128 *v92;
  TUI::Evaluation::Variables::Scope *v93;
  os_signpost_id_t spid;
  TUIEnvironment *v95;
  TUI::Evaluation::Context *v96;
  uint64_t v97;
  __int128 v98;
  uint64_t v99;
  uint64_t v100;
  std::__shared_weak_count *v101;
  __int128 v102;
  TUI::Evaluation::Variables::Globals *v103;
  std::__shared_weak_count *v104;
  _OWORD v105[2];
  int v106;
  void **v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  unsigned __int16 v111[6];
  _BYTE buf[840];

  v95 = a2;
  v96 = a3;
  v5 = *((_QWORD *)a3 + 96);
  if (v5)
    *(_QWORD *)(v5 + 27880) = mach_absolute_time();
  v6 = TUIInstantiationLog();
  v7 = objc_claimAutoreleasedReturnValue(v6);
  v8 = os_signpost_id_generate(v7);

  v9 = TUIInstantiationLog();
  v10 = objc_claimAutoreleasedReturnValue(v9);
  v11 = v10;
  spid = v8;
  v91 = v8 - 1;
  if (v8 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v10))
  {
    *(_WORD *)buf = 0;
    _os_signpost_emit_with_name_impl(&dword_0, v11, OS_SIGNPOST_INTERVAL_BEGIN, v8, "Variables::Modern::updateGlobalsWithEnvironment", (const char *)&unk_23007A, buf, 2u);
  }

  memset(v105, 0, sizeof(v105));
  v106 = 1065353216;
  v12 = objc_msgSend(*((id *)this + 7), "packageBuffer");
  v13 = v12;
  v14 = v12[51];
  if (v14)
  {
    v15 = 0;
    v97 = v12[50];
    v92 = (__int128 *)((char *)this + 1768);
    v93 = (TUI::Evaluation::Variables::Modern *)((char *)this + 920);
    while (1)
    {
      if (v13[43] <= (unint64_t)(v15 + v97) || (v16 = (unsigned __int16 *)(v13[42] + 4 * (v15 + v97))) == 0)
      {
        v32 = TUIInstantiationLog();
        v33 = objc_claimAutoreleasedReturnValue(v32);
        if (os_log_type_enabled(v33, OS_LOG_TYPE_ERROR))
        {
          v34 = TUI::Evaluation::Context::feedId(*((id **)this + 6));
          *(_DWORD *)buf = 134218240;
          *(_QWORD *)&buf[4] = v34;
          *(_WORD *)&buf[12] = 2048;
          *(_QWORD *)&buf[14] = v15 + v97;
          _os_log_error_impl(&dword_0, v33, OS_LOG_TYPE_ERROR, "[fid:%lu] couldn't find component name with index: %lu", buf, 0x16u);
        }

        goto LABEL_25;
      }
      v17 = *v16;
      v18 = v16[1];
      *(_WORD *)buf = *v16;
      *(_WORD *)&buf[2] = v18;
      v19 = sub_28810((_QWORD *)this + 231, (unsigned __int16 *)buf);
      if (v19)
        break;
LABEL_25:
      if (++v15 == v14)
        goto LABEL_70;
    }
    v20 = v19[3];
    v21 = v19[4];
    v103 = (TUI::Evaluation::Variables::Globals *)v20;
    v104 = (std::__shared_weak_count *)v21;
    if (v21)
    {
      v22 = (unint64_t *)(v21 + 1);
      do
        v23 = __ldxr(v22);
      while (__stxr(v23 + 1, v22));
    }
    v24 = v20[10] | v20[9];
    if (*(_OWORD *)(v20 + 9) == 0
      || (v25 = (id)v20[8],
          v26 = -[TUIEnvironment differenceMaskWithEnvironment:](v95, "differenceMaskWithEnvironment:", v25),
          v25,
          (v26 & v24) == 0))
    {
      v102 = 0uLL;
    }
    else
    {
      v27 = *((_QWORD *)v103 + 10) & v26;
      v28 = *((_QWORD *)v103 + 9) & v26;
      v29 = v28 != 0;
      v102 = 0uLL;
      v30 = *((_QWORD *)v103 + 2);
      if (v27)
        v31 = 1;
      else
        v31 = v28 == 0;
      if (v31)
      {
        v37 = (unsigned int *)*((_QWORD *)v103 + 2);
      }
      else
      {
        v35 = *((_OWORD *)this + 114);
        *((_OWORD *)this + 114) = 0u;
        *(_OWORD *)buf = v35;
        v36 = *((_QWORD *)this + 230);
        *((_QWORD *)this + 230) = 0;
        *(_QWORD *)&buf[16] = v36;
        v37 = (unsigned int *)v30;
        TUI::Evaluation::Variables::Modern::evaluateGlobalsDependencies((uint64_t)this, v30, (uint64_t)v105, (uint64_t)v96);
        v38 = *((_OWORD *)this + 114);
        *((_OWORD *)this + 114) = *(_OWORD *)buf;
        *(_OWORD *)buf = v38;
        v39 = *((_QWORD *)this + 230);
        *((_QWORD *)this + 230) = *(_QWORD *)&buf[16];
        *(_QWORD *)&buf[16] = v39;
        v29 = (v28 != 0) & ~TUI::Evaluation::Variables::Globals::equivalentTo((uint64_t)v103, (uint64_t *)buf);
        v107 = (void **)buf;
        sub_2A0E0(&v107);
      }
      if (v27)
        v40 = 0;
      else
        v40 = v29 == 0;
      if (!v40)
      {
        v41 = *((_QWORD *)this + 2);
        *((_QWORD *)this + 2) = 0;
        TUI::Evaluation::Variables::Scope::Scope((TUI::Evaluation::Variables::Scope *)buf);
        v100 = 0;
        v101 = 0;
        v98 = 0uLL;
        v99 = 0;
        TUI::Evaluation::Variables::Scope::swap(v93, (TUI::Evaluation::Variables::Scope *)buf);
        v90 = *v92;
        *v92 = 0u;
        v42 = *((_QWORD *)this + 223);
        v43 = *((_QWORD *)this + 224);
        *(_OWORD *)((char *)this + 1784) = 0u;
        v44 = (std::__shared_weak_count *)*((_QWORD *)this + 225);
        *((_QWORD *)this + 225) = 0;
        v89 = v43;
        v100 = v43;
        v101 = v44;
        v87 = v42;
        v88 = v44;
        v45 = *((_OWORD *)this + 114);
        *((_OWORD *)this + 114) = v98;
        v98 = v45;
        v46 = *((_QWORD *)this + 230);
        *((_QWORD *)this + 230) = v99;
        v99 = v46;
        v47 = *((_QWORD *)v96 + 96);
        if (v47)
        {
          *(_DWORD *)v111 = v17 | (v18 << 16);
          v48 = sub_28810((_QWORD *)(v47 + 48), v111);
          if (!v48)
          {
            v108 = 0;
            v109 = 0;
            v110 = 0;
            LODWORD(v107) = *(_DWORD *)v111;
            v48 = sub_288DC(v47 + 48, (unsigned __int16 *)&v107, (uint64_t)&v107);
          }
          ++v48[3];
          *(_DWORD *)(v47 + 16 * *(_QWORD *)(v47 + 3224) + 3208) = v17 | (v18 << 16);
          v49 = mach_absolute_time();
          v50 = *(_QWORD *)(v47 + 3224);
          *(_QWORD *)(v47 + 16 * v50 + 3216) = v49;
          *(_QWORD *)(v47 + 3224) = v50 + 1;
        }
        v86 = v41;
        TUI::Evaluation::Variables::Modern::evaluateGlobalsDependencies((uint64_t)this, (uint64_t)v37, (uint64_t)v105, (uint64_t)v96);
        TUI::Evaluation::Context::evaluateGlobals((uint64_t)v96, *v37 | ((unint64_t)*((unsigned __int16 *)v37 + 4) << 32));
        v51 = *((_QWORD *)v96 + 96);
        if (v51)
        {
          v52 = *(_QWORD *)(v51 + 3224) - 1;
          *(_QWORD *)(v51 + 3224) = v52;
          v53 = v51 + 16 * v52;
          v54 = *(_DWORD *)(v53 + 3208);
          v55 = *(_QWORD *)(v53 + 3216);
          v56 = mach_absolute_time();
          *(_DWORD *)v111 = v54;
          v57 = (_QWORD *)(v51 + 48);
          v58 = sub_28810(v57, v111);
          if (!v58)
          {
            v108 = 0;
            v109 = 0;
            v110 = 0;
            LODWORD(v107) = *(_DWORD *)v111;
            v58 = sub_288DC((uint64_t)v57, (unsigned __int16 *)&v107, (uint64_t)&v107);
          }
          v59 = v56 - v55;
          if (v55 >= v56)
            v59 = v55 - v56;
          v58[5] += v59;
        }
        TUI::Evaluation::Variables::Scope::swap(v93, (TUI::Evaluation::Variables::Scope *)buf);
        v60 = (void *)*((_QWORD *)this + 221);
        *v92 = v90;
        *((_QWORD *)this + 223) = v87;
        v61 = *((_QWORD *)this + 224);
        *((_QWORD *)this + 224) = v89;
        v62 = (std::__shared_weak_count *)*((_QWORD *)this + 225);
        *((_QWORD *)this + 225) = v88;
        v100 = v61;
        v101 = v62;
        v63 = *((_OWORD *)this + 114);
        *((_OWORD *)this + 114) = v98;
        v98 = v63;
        v64 = *((_QWORD *)this + 230);
        *((_QWORD *)this + 230) = v99;
        v99 = v64;
        *((_QWORD *)this + 2) = v86;
        v65 = TUI::Evaluation::Variables::Globals::equivalentTo(v103, (unsigned __int16 **)buf);
        if ((v65 & 1) == 0)
        {
          v66 = *((_QWORD *)v96 + 96);
          if (v66)
          {
            *(_DWORD *)v111 = v17 | (v18 << 16);
            v67 = v66 + 48;
            v68 = sub_28810((_QWORD *)(v66 + 48), v111);
            if (!v68)
            {
              v108 = 0;
              v109 = 0;
              v110 = 0;
              LODWORD(v107) = *(_DWORD *)v111;
              v68 = sub_288DC(v67, (unsigned __int16 *)&v107, (uint64_t)&v107);
            }
            ++v68[4];
          }
          *((id *)v103 + 1);
          operator new();
        }
        v107 = (void **)&v98;
        sub_2A0E0(&v107);
        if (v62)
        {
          p_shared_owners = (unint64_t *)&v62->__shared_owners_;
          do
            v70 = __ldaxr(p_shared_owners);
          while (__stlxr(v70 - 1, p_shared_owners));
          if (!v70)
          {
            ((void (*)(std::__shared_weak_count *))v62->__on_zero_shared)(v62);
            std::__shared_weak_count::__release_weak(v62);
          }
        }
        if (v60)
          operator delete(v60);
        TUI::Evaluation::Variables::Scope::~Scope((TUI::Evaluation::Variables::Scope *)buf);
        if (!v65)
        {
          if (!(_QWORD)v102)
          {
LABEL_58:
            v73 = (std::__shared_weak_count *)*((_QWORD *)&v102 + 1);
            if (*((_QWORD *)&v102 + 1))
            {
              v74 = (unint64_t *)(*((_QWORD *)&v102 + 1) + 8);
              do
                v75 = __ldaxr(v74);
              while (__stlxr(v75 - 1, v74));
              if (!v75)
              {
                ((void (*)(std::__shared_weak_count *))v73->__on_zero_shared)(v73);
                std::__shared_weak_count::__release_weak(v73);
              }
            }
            v76 = v104;
            if (v104)
            {
              v77 = (unint64_t *)&v104->__shared_owners_;
              do
                v78 = __ldaxr(v77);
              while (__stlxr(v78 - 1, v77));
              if (!v78)
              {
                ((void (*)(std::__shared_weak_count *))v76->__on_zero_shared)(v76);
                std::__shared_weak_count::__release_weak(v76);
              }
            }
            goto LABEL_25;
          }
          LOWORD(v107) = v17;
          WORD1(v107) = v18;
          *(_QWORD *)buf = &v107;
          v71 = sub_2A544((uint64_t)v105, (unsigned __int16 *)&v107, (uint64_t)&std::piecewise_construct, (_DWORD **)buf)
              + 3;
          v72 = (uint64_t *)&v102;
LABEL_57:
          sub_26314(v71, v72);
          goto LABEL_58;
        }
      }
    }
    LOWORD(v107) = v17;
    WORD1(v107) = v18;
    *(_QWORD *)buf = &v107;
    v71 = sub_2A544((uint64_t)v105, (unsigned __int16 *)&v107, (uint64_t)&std::piecewise_construct, (_DWORD **)buf) + 3;
    v72 = (uint64_t *)&v103;
    goto LABEL_57;
  }
LABEL_70:
  sub_2A7FC((uint64_t)this + 1848, (uint64_t)v105);
  v79 = TUIInstantiationLog();
  v80 = objc_claimAutoreleasedReturnValue(v79);
  v81 = v80;
  if (v91 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v80))
  {
    *(_WORD *)buf = 0;
    _os_signpost_emit_with_name_impl(&dword_0, v81, OS_SIGNPOST_INTERVAL_END, spid, "Variables::Modern::updateGlobalsWithEnvironment", (const char *)&unk_23007A, buf, 2u);
  }

  v82 = *((_QWORD *)v96 + 96);
  if (v82)
  {
    v83 = *(_QWORD *)(v82 + 27880);
    v84 = mach_absolute_time();
    v85 = -(uint64_t)v83;
    if (v83 >= v84)
      v85 = ~v83;
    *(_QWORD *)(v82 + 27840) += v85 + v84;
  }
  sub_2A150((uint64_t)v105);

}

void sub_28298(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,void *a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,char a35,uint64_t a36,uint64_t a37,uint64_t a38,char a39,uint64_t a40,char a41,uint64_t a42,char a43,uint64_t a44,char a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,void **a56,char a57)
{
  void *v57;

  a56 = (void **)&a35;
  sub_2A0E0(&a56);
  sub_148E8((uint64_t)&a39);
  if (v57)
    operator delete(v57);
  TUI::Evaluation::Variables::Scope::~Scope((TUI::Evaluation::Variables::Scope *)&a57);
  sub_148E8((uint64_t)&a41);
  sub_148E8((uint64_t)&a43);
  sub_2A150((uint64_t)&a45);

  _Unwind_Resume(a1);
}

void sub_28408(uint64_t a1, unsigned int a2, id *a3)
{
  uint64_t v5;
  id v6;
  id v7;
  void *v8;
  id v9[4];
  id v10;
  uint64_t v11;

  v5 = *(_QWORD *)(a1 + 32);
  v6 = a3[4];
  if ((objc_opt_respondsToSelector(v6, "tui_unwrapDynamicWithError:") & 1) != 0)
  {
    v7 = v6;
    v11 = 0;
    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "tui_unwrapDynamicWithError:", &v11));
    if (v11)
      TUI::Evaluation::Context::reportError(*(_QWORD *)(v5 + 48), v11, v7);
    TUI::Evaluation::Enumerator::State::State((TUI::Evaluation::Enumerator::State *)v9, (const TUI::Evaluation::Enumerator::State *)a3);
    objc_storeStrong(&v10, v8);
    TUI::Evaluation::Variables::Scope::define(v5 + 920, a2, (const TUI::Evaluation::Enumerator::State *)v9);
    TUI::Evaluation::Enumerator::State::~State(v9);

  }
}

void sub_284D8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void TUI::Evaluation::Variables::Modern::evaluateWithComponent(uint64_t a1, void *a2, uint64_t a3, int a4, void *a5)
{
  TUIComponent *v8;
  void (**v9)(_QWORD);
  void (**v10)(_QWORD);
  id v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *v16;
  unint64_t v17;
  uint64_t v18;
  std::__shared_weak_count *v19;

  v8 = a2;
  v9 = a5;
  v10 = v9;
  if (v8 && v9)
  {
    v11 = *(id *)(a1 + 16);
    v12 = *(std::__shared_weak_count **)(a1 + 1816);
    v18 = *(_QWORD *)(a1 + 1808);
    v19 = v12;
    if (v12)
    {
      p_shared_owners = (unint64_t *)&v12->__shared_owners_;
      do
        v14 = __ldxr(p_shared_owners);
      while (__stxr(v14 + 1, p_shared_owners));
    }
    TUI::Evaluation::Variables::Modern::pushComponent((TUI::Evaluation::Variables::Modern *)a1, v8, a4, 1);
    TUI::Evaluation::Variables::Scope::pushScope((TUI::Evaluation::Variables::Scope *)(a1 + 920), 63);
    v10[2](v10);
    TUI::Evaluation::Variables::Scope::popScope((TUI::Evaluation::Variables::Scope *)(a1 + 920));
    TUI::Evaluation::Variables::Modern::popComponent((TUI::Evaluation::Variables::Modern *)a1, 1);
    sub_26314((_QWORD *)(a1 + 1808), &v18);
    *(_QWORD *)(a1 + 16) = v11;
    v15 = v19;
    if (v19)
    {
      v16 = (unint64_t *)&v19->__shared_owners_;
      do
        v17 = __ldaxr(v16);
      while (__stlxr(v17 - 1, v16));
      if (!v17)
      {
        ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
        std::__shared_weak_count::__release_weak(v15);
      }
    }

  }
}

void sub_28630(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  void *v9;
  void *v10;
  void *v11;

  sub_148E8((uint64_t)&a9);

  _Unwind_Resume(a1);
}

uint64_t TUI::Evaluation::Variables::Modern::Snapshot::Snapshot(uint64_t a1, _QWORD *a2, _QWORD **a3)
{
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;

  *(_QWORD *)a1 = off_23E040;
  v4 = a2[1];
  *(_QWORD *)(a1 + 8) = *a2;
  *(_QWORD *)(a1 + 16) = v4;
  if (v4)
  {
    v5 = (unint64_t *)(v4 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  *(_QWORD *)(a1 + 24) = 0;
  *(_QWORD *)(a1 + 32) = 0;
  *(_QWORD *)(a1 + 40) = 0;
  sub_2A000((char *)(a1 + 24), *a3, a3[1], ((char *)a3[1] - (char *)*a3) >> 4);
  return a1;
}

void sub_286C0(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_148E8(v1);
  _Unwind_Resume(a1);
}

void TUI::Evaluation::Variables::Modern::Snapshot::~Snapshot(TUI::Evaluation::Variables::Modern::Snapshot *this)
{
  char *v1;
  void **v2;

  *(_QWORD *)this = off_23E040;
  v1 = (char *)this + 8;
  v2 = (void **)((char *)this + 24);
  sub_2A0E0(&v2);
  sub_148E8((uint64_t)v1);
}

{
  char *v1;
  void **v2;

  *(_QWORD *)this = off_23E040;
  v1 = (char *)this + 8;
  v2 = (void **)((char *)this + 24);
  sub_2A0E0(&v2);
  sub_148E8((uint64_t)v1);
}

{
  char *v1;
  void **v2;

  *(_QWORD *)this = off_23E040;
  v1 = (char *)this + 8;
  v2 = (void **)((char *)this + 24);
  sub_2A0E0(&v2);
  sub_148E8((uint64_t)v1);
  operator delete();
}

uint64_t sub_287D8(uint64_t a1, unsigned int a2)
{
  return sub_29048(a1, a2);
}

uint64_t sub_287E0(uint64_t a1, unsigned int a2)
{
  return sub_292C0(a1, a2);
}

uint64_t sub_287E8(uint64_t a1, unsigned int a2)
{
  return sub_29540(a1, a2);
}

uint64_t sub_287F0(uint64_t a1, unsigned int a2)
{
  return sub_2972C(a1, a2);
}

uint64_t sub_287F8(uint64_t a1, unsigned int a2)
{
  return sub_299A8(a1, a2);
}

uint64_t sub_28800(uint64_t a1, unsigned int a2)
{
  return sub_29B94(a1, a2);
}

uint64_t sub_28808(uint64_t a1, unsigned int a2)
{
  return sub_29D80(a1, a2);
}

uint64_t **sub_28810(_QWORD *a1, unsigned __int16 *a2)
{
  int8x8_t v2;
  int v3;
  unint64_t v4;
  unint64_t v5;
  uint8x8_t v6;
  unint64_t v7;
  uint64_t ***v8;
  uint64_t **result;
  unint64_t v10;

  v2 = (int8x8_t)a1[1];
  if (!*(_QWORD *)&v2)
    return 0;
  v3 = *a2;
  v4 = a2[1];
  v5 = (v3 << 16) | v4;
  v6 = (uint8x8_t)vcnt_s8(v2);
  v6.i16[0] = vaddlv_u8(v6);
  if (v6.u32[0] > 1uLL)
  {
    v7 = (v3 << 16) | v4;
    if (*(_QWORD *)&v2 <= v5)
      v7 = v5 % *(_QWORD *)&v2;
  }
  else
  {
    v7 = (*(_QWORD *)&v2 - 1) & v5;
  }
  v8 = *(uint64_t ****)(*a1 + 8 * v7);
  if (!v8)
    return 0;
  for (result = *v8; result; result = (uint64_t **)*result)
  {
    v10 = (unint64_t)result[1];
    if (v10 == v5)
    {
      if (*((unsigned __int16 *)result + 9) == (_DWORD)v4 && *((unsigned __int16 *)result + 8) == v3)
        return result;
    }
    else
    {
      if (v6.u32[0] > 1uLL)
      {
        if (v10 >= *(_QWORD *)&v2)
          v10 %= *(_QWORD *)&v2;
      }
      else
      {
        v10 &= *(_QWORD *)&v2 - 1;
      }
      if (v10 != v7)
        return 0;
    }
  }
  return result;
}

unsigned __int16 *sub_288DC(uint64_t a1, unsigned __int16 *a2, uint64_t a3)
{
  unint64_t v3;
  int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint8x8_t v10;
  void **v11;
  unsigned __int16 *v12;
  unint64_t v13;
  float v15;
  float v16;
  _BOOL8 v17;
  unint64_t v18;
  unint64_t v19;
  size_t v20;
  uint64_t v21;
  _QWORD *v22;
  unint64_t v23;

  v6 = *a2;
  v7 = a2[1];
  v8 = (v6 << 16) | v7;
  v9 = *(_QWORD *)(a1 + 8);
  if (v9)
  {
    v10 = (uint8x8_t)vcnt_s8((int8x8_t)v9);
    v10.i16[0] = vaddlv_u8(v10);
    if (v10.u32[0] > 1uLL)
    {
      v3 = (v6 << 16) | v7;
      if (v9 <= v8)
        v3 = v8 % v9;
    }
    else
    {
      v3 = (v9 - 1) & v8;
    }
    v11 = *(void ***)(*(_QWORD *)a1 + 8 * v3);
    if (v11)
    {
      v12 = (unsigned __int16 *)*v11;
      if (*v11)
      {
        do
        {
          v13 = *((_QWORD *)v12 + 1);
          if (v13 == v8)
          {
            if (v12[9] == (_DWORD)v7 && v12[8] == v6)
              return v12;
          }
          else
          {
            if (v10.u32[0] > 1uLL)
            {
              if (v13 >= v9)
                v13 %= v9;
            }
            else
            {
              v13 &= v9 - 1;
            }
            if (v13 != v3)
              break;
          }
          v12 = *(unsigned __int16 **)v12;
        }
        while (v12);
      }
    }
  }
  v12 = (unsigned __int16 *)operator new(0x30uLL);
  *(_QWORD *)v12 = 0;
  *((_QWORD *)v12 + 1) = v8;
  *((_DWORD *)v12 + 4) = *(_DWORD *)a3;
  *(_OWORD *)(v12 + 12) = *(_OWORD *)(a3 + 8);
  *((_QWORD *)v12 + 5) = *(_QWORD *)(a3 + 24);
  v15 = (float)(unint64_t)(*(_QWORD *)(a1 + 24) + 1);
  v16 = *(float *)(a1 + 32);
  if (!v9 || (float)(v16 * (float)v9) < v15)
  {
    v17 = 1;
    if (v9 >= 3)
      v17 = (v9 & (v9 - 1)) != 0;
    v18 = v17 | (2 * v9);
    v19 = vcvtps_u32_f32(v15 / v16);
    if (v18 <= v19)
      v20 = v19;
    else
      v20 = v18;
    sub_6A20(a1, v20);
    v9 = *(_QWORD *)(a1 + 8);
    if ((v9 & (v9 - 1)) != 0)
    {
      if (v9 <= v8)
        v3 = v8 % v9;
      else
        v3 = v8;
    }
    else
    {
      v3 = (v9 - 1) & v8;
    }
  }
  v21 = *(_QWORD *)a1;
  v22 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v3);
  if (v22)
  {
    *(_QWORD *)v12 = *v22;
LABEL_42:
    *v22 = v12;
    goto LABEL_43;
  }
  *(_QWORD *)v12 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v12;
  *(_QWORD *)(v21 + 8 * v3) = a1 + 16;
  if (*(_QWORD *)v12)
  {
    v23 = *(_QWORD *)(*(_QWORD *)v12 + 8);
    if ((v9 & (v9 - 1)) != 0)
    {
      if (v23 >= v9)
        v23 %= v9;
    }
    else
    {
      v23 &= v9 - 1;
    }
    v22 = (_QWORD *)(*(_QWORD *)a1 + 8 * v23);
    goto LABEL_42;
  }
LABEL_43:
  ++*(_QWORD *)(a1 + 24);
  return v12;
}

void sub_28B08(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_28B1C(uint64_t a1, void *a2, uint64_t a3, _QWORD *a4, _QWORD **a5, void *a6, uint64_t a7, uint64_t a8, int a9)
{
  id v16;
  id v17;
  id v18;
  uint64_t v19;
  unint64_t *v20;
  unint64_t v21;
  id v22;
  int8x16_t v23;
  uint64_t *v24;
  uint64_t *i;
  uint64_t v26;
  std::__shared_weak_count *v27;
  unint64_t *p_shared_owners;
  unint64_t v29;
  uint64_t j;
  uint64_t v31;
  uint64_t v32;
  unint64_t *v33;
  unint64_t v34;

  v16 = a2;
  v17 = a6;
  *(_QWORD *)a1 = off_23E0F8;
  v18 = v16;
  v19 = a4[1];
  *(_QWORD *)(a1 + 24) = *a4;
  *(_QWORD *)(a1 + 8) = v18;
  *(_QWORD *)(a1 + 16) = a3;
  *(_QWORD *)(a1 + 32) = v19;
  if (v19)
  {
    v20 = (unint64_t *)(v19 + 8);
    do
      v21 = __ldxr(v20);
    while (__stxr(v21 + 1, v20));
  }
  *(_QWORD *)(a1 + 40) = 0;
  *(_QWORD *)(a1 + 48) = 0;
  *(_QWORD *)(a1 + 56) = 0;
  sub_2A000((char *)(a1 + 40), *a5, a5[1], ((char *)a5[1] - (char *)*a5) >> 4);
  v22 = v17;
  *(_QWORD *)(a1 + 64) = v22;
  *(_QWORD *)(a1 + 72) = a8;
  *(_QWORD *)(a1 + 80) = a7;
  *(_DWORD *)(a1 + 88) = a9;
  v23 = TUI::Evaluation::Variables::Scope::symbolUsage((TUI::Evaluation::Variables::Scope *)*(_QWORD *)(a1 + 24), a1 + 96);
  v24 = *(uint64_t **)(a1 + 40);
  for (i = *(uint64_t **)(a1 + 48); v24 != i; v24 += 2)
  {
    v26 = *v24;
    v27 = (std::__shared_weak_count *)v24[1];
    if (v27)
    {
      p_shared_owners = (unint64_t *)&v27->__shared_owners_;
      do
        v29 = __ldxr(p_shared_owners);
      while (__stxr(v29 + 1, p_shared_owners));
    }
    for (j = 0; j != 32; j += 8)
      *(_QWORD *)(a1 + 96 + j) |= *(_QWORD *)(v26 + 96 + j);
    v31 = 0;
    v32 = v26 + 128;
    do
    {
      *(_QWORD *)(a1 + 128 + v31) |= *(_QWORD *)(v32 + v31);
      v31 += 8;
    }
    while (v31 != 256);
    if (v27)
    {
      v33 = (unint64_t *)&v27->__shared_owners_;
      do
        v34 = __ldaxr(v33);
      while (__stlxr(v34 - 1, v33));
      if (!v34)
      {
        ((void (*)(std::__shared_weak_count *, int8x16_t))v27->__on_zero_shared)(v27, v23);
        std::__shared_weak_count::__release_weak(v27);
      }
    }
  }

  return a1;
}

void sub_28CD4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  void *v3;
  void *v4;
  uint64_t v5;
  va_list va;

  va_start(va, a2);

  sub_2A0E0((void ***)va);
  sub_148E8(v5);

  _Unwind_Resume(a1);
}

uint64_t sub_28D14()
{
  return 0;
}

uint64_t sub_28D20(uint64_t a1, unint64_t a2)
{
  if ((*(_QWORD *)(a1 + 8 * (a2 >> 6) + 96) & (1 << a2)) != 0
    && (*(_QWORD *)(a1 + 8 * ((a2 >> 22) & 0x1F) + 128) & (1 << SBYTE2(a2))) != 0)
  {
    return (*(uint64_t (**)(_QWORD, _QWORD))(**(_QWORD **)(a1 + 24) + 8))(*(_QWORD *)(a1 + 24), a2);
  }
  else
  {
    return 0;
  }
}

uint64_t sub_28D90(uint64_t a1, unint64_t a2)
{
  if ((*(_QWORD *)(a1 + 8 * (a2 >> 6) + 96) & (1 << a2)) != 0
    && (*(_QWORD *)(a1 + 8 * ((a2 >> 22) & 0x1F) + 128) & (1 << SBYTE2(a2))) != 0)
  {
    return (*(uint64_t (**)(_QWORD, _QWORD))(**(_QWORD **)(a1 + 24) + 16))(*(_QWORD *)(a1 + 24), a2);
  }
  else
  {
    return 0;
  }
}

uint64_t sub_28E00(uint64_t a1, unint64_t a2)
{
  if ((*(_QWORD *)(a1 + 8 * (a2 >> 6) + 96) & (1 << a2)) != 0
    && (*(_QWORD *)(a1 + 8 * ((a2 >> 22) & 0x1F) + 128) & (1 << SBYTE2(a2))) != 0)
  {
    return (*(uint64_t (**)(_QWORD, _QWORD))(**(_QWORD **)(a1 + 24) + 24))(*(_QWORD *)(a1 + 24), a2);
  }
  else
  {
    return 0;
  }
}

uint64_t sub_28E70(uint64_t a1, unint64_t a2)
{
  if ((*(_QWORD *)(a1 + 8 * (a2 >> 6) + 96) & (1 << a2)) != 0
    && (*(_QWORD *)(a1 + 8 * ((a2 >> 22) & 0x1F) + 128) & (1 << SBYTE2(a2))) != 0)
  {
    return (*(uint64_t (**)(_QWORD, _QWORD))(**(_QWORD **)(a1 + 24) + 32))(*(_QWORD *)(a1 + 24), a2);
  }
  else
  {
    return 0;
  }
}

uint64_t sub_28EE0(uint64_t a1, unint64_t a2)
{
  if ((*(_QWORD *)(a1 + 8 * (a2 >> 6) + 96) & (1 << a2)) != 0
    && (*(_QWORD *)(a1 + 8 * ((a2 >> 22) & 0x1F) + 128) & (1 << SBYTE2(a2))) != 0)
  {
    return (*(uint64_t (**)(_QWORD, _QWORD))(**(_QWORD **)(a1 + 24) + 40))(*(_QWORD *)(a1 + 24), a2);
  }
  else
  {
    return 0;
  }
}

uint64_t sub_28F50(uint64_t a1, unint64_t a2)
{
  if ((*(_QWORD *)(a1 + 8 * (a2 >> 6) + 96) & (1 << a2)) != 0
    && (*(_QWORD *)(a1 + 8 * ((a2 >> 22) & 0x1F) + 128) & (1 << SBYTE2(a2))) != 0)
  {
    return (*(uint64_t (**)(_QWORD, _QWORD))(**(_QWORD **)(a1 + 24) + 48))(*(_QWORD *)(a1 + 24), a2);
  }
  else
  {
    return 0;
  }
}

void sub_28FC4(uint64_t a1)
{
  sub_28FE8(a1);
  operator delete();
}

uint64_t sub_28FE8(uint64_t a1)
{
  void **v3;

  *(_QWORD *)a1 = off_23E0F8;

  v3 = (void **)(a1 + 40);
  sub_2A0E0(&v3);
  sub_148E8(a1 + 24);

  return a1;
}

uint64_t sub_29048(uint64_t a1, unsigned int a2)
{
  unint64_t v2;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  TUI::Evaluation::Variables::Capture *v9;
  TUI::Evaluation::Variables::Capture *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (***v16)(_QWORD, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v4 = a2;
  result = TUI::Evaluation::Variables::Scope::lookup(a1 + 920, a2);
  if (v6 != -1)
    return result;
  v7 = *(_QWORD *)(a1 + 1776);
  v8 = *(_QWORD *)(a1 + 1768);
  while (v7 != v8)
  {
    v10 = *(TUI::Evaluation::Variables::Capture **)(v7 - 16);
    v7 -= 16;
    v9 = v10;
    if (v10)
    {
      v2 = v2 & 0xFFFFFFFF00000000 | v4;
      result = (**(uint64_t (***)(TUI::Evaluation::Variables::Capture *, unint64_t))v9)(v9, v2);
      if (v11 != -1)
        return result;
      if (!*((_QWORD *)v9 + 5) || (TUI::Evaluation::Variables::Capture::_bitCheck(v9, 0) & 1) != 0)
        break;
      v8 = *(_QWORD *)(a1 + 1768);
    }
  }
  v12 = *(_QWORD *)(a1 + 16);
  if (!v12)
  {
    v15 = *(_QWORD *)(a1 + 1832);
    if (*(_QWORD *)(a1 + 1824) != v15)
    {
      while (v15 != *(_QWORD *)(a1 + 1824))
      {
        v16 = *(uint64_t (****)(_QWORD, uint64_t))(v15 - 16);
        v15 -= 16;
        result = (**v16)(v16, v4);
        if (v17 != -1)
          return result;
      }
    }
LABEL_19:
    v18 = *(_QWORD *)(a1 + 1792);
    if (!v18)
      return TUI::Evaluation::Variables::Scope::lookup(a1 + 72, v4);
    result = sub_291B0(v18, v4);
    if (v19 == -1)
      return TUI::Evaluation::Variables::Scope::lookup(a1 + 72, v4);
    return result;
  }
  v13 = *(_QWORD *)(a1 + 32);
  if (*(_QWORD *)(a1 + 24) != v13 && *(_QWORD *)(v13 - 120) == v12)
  {
    sub_2922C((_QWORD *)(a1 + 936), v4, *(_QWORD *)(v13 - 112), *(_QWORD *)(v13 - 104));
    if (v20 != -1)
      return a1 + 928;
  }
  result = (***(uint64_t (****)(_QWORD, uint64_t))(a1 + 1808))(*(_QWORD *)(a1 + 1808), v4);
  if (v14 == -1)
    goto LABEL_19;
  return result;
}

uint64_t sub_291B0(uint64_t a1, unsigned int a2)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t (***v7)(_QWORD, uint64_t);
  uint64_t v8;

  v3 = a2;
  result = (***(uint64_t (****)(_QWORD, _QWORD))(a1 + 8))(*(_QWORD *)(a1 + 8), a2);
  if (v5 == -1)
  {
    v6 = *(_QWORD *)(a1 + 32);
    if (*(_QWORD *)(a1 + 24) != v6)
    {
      do
      {
        v7 = *(uint64_t (****)(_QWORD, uint64_t))(v6 - 16);
        v6 -= 16;
        result = (**v7)(v7, v3);
      }
      while (v8 == -1 && v6 != *(_QWORD *)(a1 + 24));
    }
  }
  return result;
}

_QWORD *sub_2922C(_QWORD *a1, int a2, unint64_t a3, unint64_t a4)
{
  _QWORD *v6;
  uint64_t **v7;
  uint64_t *i;
  int v13;

  v13 = a2;
  if (a3 >= a4)
    return 0;
  v6 = a1;
  v7 = sub_28810(a1 + 3, (unsigned __int16 *)&v13);
  if (!v7)
    return 0;
  for (i = v7[3]; i != (uint64_t *)-1 && (unint64_t)i >= a4; i = *(uint64_t **)(*v6 + 72 * (_QWORD)i + 8))
    ;
  if ((unint64_t)i < a3 || (unint64_t)i >= a4)
    return 0;
  return v6;
}

uint64_t sub_292C0(uint64_t a1, unsigned int a2)
{
  unint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  TUI::Evaluation::Variables::Capture *v10;
  TUI::Evaluation::Variables::Capture *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v4 = a2;
  v5 = TUI::Evaluation::Variables::Scope::lookup(a1 + 920, a2);
  if (v6 != -1)
    return v5;
  v8 = *(_QWORD *)(a1 + 1776);
  v9 = *(_QWORD *)(a1 + 1768);
  while (v8 != v9)
  {
    v11 = *(TUI::Evaluation::Variables::Capture **)(v8 - 16);
    v8 -= 16;
    v10 = v11;
    if (v11)
    {
      v2 = v2 & 0xFFFFFFFF00000000 | v4;
      v5 = (*(uint64_t (**)(TUI::Evaluation::Variables::Capture *, unint64_t))(*(_QWORD *)v10 + 8))(v10, v2);
      if (v12 != -1)
        return v5;
      if (!*((_QWORD *)v10 + 5) || (TUI::Evaluation::Variables::Capture::_bitCheck(v10, 0) & 1) != 0)
        break;
      v9 = *(_QWORD *)(a1 + 1768);
    }
  }
  v13 = *(_QWORD *)(a1 + 16);
  if (v13)
  {
    v14 = *(_QWORD *)(a1 + 32);
    if (*(_QWORD *)(a1 + 24) != v14 && *(_QWORD *)(v14 - 120) == v13)
    {
      sub_294AC((_QWORD *)(a1 + 1048), v4, *(_QWORD *)(v14 - 96), *(_QWORD *)(v14 - 88));
      if (v20 != -1)
        return a1 + 928;
    }
    v5 = (*(uint64_t (**)(_QWORD, uint64_t))(**(_QWORD **)(a1 + 1808) + 8))(*(_QWORD *)(a1 + 1808), v4);
    if (v15 == -1)
      goto LABEL_18;
  }
  else
  {
    v16 = *(_QWORD *)(a1 + 1832);
    if (*(_QWORD *)(a1 + 1824) == v16)
    {
LABEL_18:
      v19 = *(_QWORD *)(a1 + 1792);
      if (v19)
        return sub_29430(v19, v4);
      return v5;
    }
    while (1)
    {
      v17 = *(_QWORD *)(v16 - 16);
      v16 -= 16;
      v5 = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v17 + 8))(v17, v4);
      if (v18 != -1)
        break;
      if (v16 == *(_QWORD *)(a1 + 1824))
        goto LABEL_18;
    }
  }
  return v5;
}

uint64_t sub_29430(uint64_t a1, unsigned int a2)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = a2;
  result = (*(uint64_t (**)(_QWORD, _QWORD))(**(_QWORD **)(a1 + 8) + 8))(*(_QWORD *)(a1 + 8), a2);
  if (v5 == -1)
  {
    v6 = *(_QWORD *)(a1 + 32);
    if (*(_QWORD *)(a1 + 24) != v6)
    {
      do
      {
        v7 = *(_QWORD *)(v6 - 16);
        v6 -= 16;
        result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v7 + 8))(v7, v3);
      }
      while (v8 == -1 && v6 != *(_QWORD *)(a1 + 24));
    }
  }
  return result;
}

_QWORD *sub_294AC(_QWORD *a1, int a2, unint64_t a3, unint64_t a4)
{
  _QWORD *v6;
  uint64_t **v7;
  uint64_t *i;
  int v13;

  v13 = a2;
  if (a3 >= a4)
    return 0;
  v6 = a1;
  v7 = sub_28810(a1 + 3, (unsigned __int16 *)&v13);
  if (!v7)
    return 0;
  for (i = v7[3]; i != (uint64_t *)-1 && (unint64_t)i >= a4; i = *(uint64_t **)(*v6 + 48 * (_QWORD)i + 8))
    ;
  if ((unint64_t)i < a3 || (unint64_t)i >= a4)
    return 0;
  return v6;
}

uint64_t sub_29540(uint64_t a1, unsigned int a2)
{
  unint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  TUI::Evaluation::Variables::Capture *v10;
  TUI::Evaluation::Variables::Capture *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v4 = a2;
  v5 = TUI::Evaluation::Variables::Scope::lookup(a1 + 920, a2);
  if (v6 != -1)
    return v5;
  v8 = *(_QWORD *)(a1 + 1776);
  v9 = *(_QWORD *)(a1 + 1768);
  while (v8 != v9)
  {
    v11 = *(TUI::Evaluation::Variables::Capture **)(v8 - 16);
    v8 -= 16;
    v10 = v11;
    if (v11)
    {
      v2 = v2 & 0xFFFFFFFF00000000 | v4;
      v5 = (*(uint64_t (**)(TUI::Evaluation::Variables::Capture *, unint64_t))(*(_QWORD *)v10 + 16))(v10, v2);
      if (v12 != -1)
        return v5;
      if (!*((_QWORD *)v10 + 5) || (TUI::Evaluation::Variables::Capture::_bitCheck(v10, 0) & 1) != 0)
        break;
      v9 = *(_QWORD *)(a1 + 1768);
    }
  }
  v13 = *(_QWORD *)(a1 + 16);
  if (v13)
  {
    v14 = *(_QWORD *)(a1 + 32);
    if (*(_QWORD *)(a1 + 24) != v14 && *(_QWORD *)(v14 - 120) == v13)
    {
      sub_294AC((_QWORD *)(a1 + 1160), v4, *(_QWORD *)(v14 - 80), *(_QWORD *)(v14 - 72));
      if (v20 != -1)
        return a1 + 928;
    }
    v5 = (*(uint64_t (**)(_QWORD, uint64_t))(**(_QWORD **)(a1 + 1808) + 16))(*(_QWORD *)(a1 + 1808), v4);
    if (v15 == -1)
      goto LABEL_18;
  }
  else
  {
    v16 = *(_QWORD *)(a1 + 1832);
    if (*(_QWORD *)(a1 + 1824) == v16)
    {
LABEL_18:
      v19 = *(_QWORD *)(a1 + 1792);
      if (v19)
        return sub_296B0(v19, v4);
      return v5;
    }
    while (1)
    {
      v17 = *(_QWORD *)(v16 - 16);
      v16 -= 16;
      v5 = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v17 + 16))(v17, v4);
      if (v18 != -1)
        break;
      if (v16 == *(_QWORD *)(a1 + 1824))
        goto LABEL_18;
    }
  }
  return v5;
}

uint64_t sub_296B0(uint64_t a1, unsigned int a2)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = a2;
  result = (*(uint64_t (**)(_QWORD, _QWORD))(**(_QWORD **)(a1 + 8) + 16))(*(_QWORD *)(a1 + 8), a2);
  if (v5 == -1)
  {
    v6 = *(_QWORD *)(a1 + 32);
    if (*(_QWORD *)(a1 + 24) != v6)
    {
      do
      {
        v7 = *(_QWORD *)(v6 - 16);
        v6 -= 16;
        result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v7 + 16))(v7, v3);
      }
      while (v8 == -1 && v6 != *(_QWORD *)(a1 + 24));
    }
  }
  return result;
}

uint64_t sub_2972C(uint64_t a1, unsigned int a2)
{
  unint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  TUI::Evaluation::Variables::Capture *v10;
  TUI::Evaluation::Variables::Capture *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v4 = a2;
  v5 = TUI::Evaluation::Variables::Scope::lookup(a1 + 920, a2);
  if (v6 != -1)
    return v5;
  v8 = *(_QWORD *)(a1 + 1776);
  v9 = *(_QWORD *)(a1 + 1768);
  while (v8 != v9)
  {
    v11 = *(TUI::Evaluation::Variables::Capture **)(v8 - 16);
    v8 -= 16;
    v10 = v11;
    if (v11)
    {
      v2 = v2 & 0xFFFFFFFF00000000 | v4;
      v5 = (*(uint64_t (**)(TUI::Evaluation::Variables::Capture *, unint64_t))(*(_QWORD *)v10 + 24))(v10, v2);
      if (v12 != -1)
        return v5;
      if (!*((_QWORD *)v10 + 5) || (TUI::Evaluation::Variables::Capture::_bitCheck(v10, 0) & 1) != 0)
        break;
      v9 = *(_QWORD *)(a1 + 1768);
    }
  }
  v13 = *(_QWORD *)(a1 + 16);
  if (v13)
  {
    v14 = *(_QWORD *)(a1 + 32);
    if (*(_QWORD *)(a1 + 24) != v14 && *(_QWORD *)(v14 - 120) == v13)
    {
      sub_29918((_QWORD *)(a1 + 1272), v4, *(_QWORD *)(v14 - 64), *(_QWORD *)(v14 - 56));
      if (v20 != -1)
        return a1 + 928;
    }
    v5 = (*(uint64_t (**)(_QWORD, uint64_t))(**(_QWORD **)(a1 + 1808) + 24))(*(_QWORD *)(a1 + 1808), v4);
    if (v15 == -1)
      goto LABEL_18;
  }
  else
  {
    v16 = *(_QWORD *)(a1 + 1832);
    if (*(_QWORD *)(a1 + 1824) == v16)
    {
LABEL_18:
      v19 = *(_QWORD *)(a1 + 1792);
      if (v19)
        return sub_2989C(v19, v4);
      return v5;
    }
    while (1)
    {
      v17 = *(_QWORD *)(v16 - 16);
      v16 -= 16;
      v5 = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v17 + 24))(v17, v4);
      if (v18 != -1)
        break;
      if (v16 == *(_QWORD *)(a1 + 1824))
        goto LABEL_18;
    }
  }
  return v5;
}

uint64_t sub_2989C(uint64_t a1, unsigned int a2)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = a2;
  result = (*(uint64_t (**)(_QWORD, _QWORD))(**(_QWORD **)(a1 + 8) + 24))(*(_QWORD *)(a1 + 8), a2);
  if (v5 == -1)
  {
    v6 = *(_QWORD *)(a1 + 32);
    if (*(_QWORD *)(a1 + 24) != v6)
    {
      do
      {
        v7 = *(_QWORD *)(v6 - 16);
        v6 -= 16;
        result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v7 + 24))(v7, v3);
      }
      while (v8 == -1 && v6 != *(_QWORD *)(a1 + 24));
    }
  }
  return result;
}

_QWORD *sub_29918(_QWORD *a1, int a2, unint64_t a3, unint64_t a4)
{
  _QWORD *v6;
  uint64_t **v7;
  uint64_t *i;
  int v13;

  v13 = a2;
  if (a3 >= a4)
    return 0;
  v6 = a1;
  v7 = sub_28810(a1 + 3, (unsigned __int16 *)&v13);
  if (!v7)
    return 0;
  for (i = v7[3]; i != (uint64_t *)-1 && (unint64_t)i >= a4; i = *(uint64_t **)(*v6 + ((_QWORD)i << 6) + 8))
    ;
  if ((unint64_t)i < a3 || (unint64_t)i >= a4)
    return 0;
  return v6;
}

uint64_t sub_299A8(uint64_t a1, unsigned int a2)
{
  unint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  TUI::Evaluation::Variables::Capture *v10;
  TUI::Evaluation::Variables::Capture *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v4 = a2;
  v5 = TUI::Evaluation::Variables::Scope::lookup(a1 + 920, a2);
  if (v6 != -1)
    return v5;
  v8 = *(_QWORD *)(a1 + 1776);
  v9 = *(_QWORD *)(a1 + 1768);
  while (v8 != v9)
  {
    v11 = *(TUI::Evaluation::Variables::Capture **)(v8 - 16);
    v8 -= 16;
    v10 = v11;
    if (v11)
    {
      v2 = v2 & 0xFFFFFFFF00000000 | v4;
      v5 = (*(uint64_t (**)(TUI::Evaluation::Variables::Capture *, unint64_t))(*(_QWORD *)v10 + 32))(v10, v2);
      if (v12 != -1)
        return v5;
      if (!*((_QWORD *)v10 + 5) || (TUI::Evaluation::Variables::Capture::_bitCheck(v10, 0) & 1) != 0)
        break;
      v9 = *(_QWORD *)(a1 + 1768);
    }
  }
  v13 = *(_QWORD *)(a1 + 16);
  if (v13)
  {
    v14 = *(_QWORD *)(a1 + 32);
    if (*(_QWORD *)(a1 + 24) != v14 && *(_QWORD *)(v14 - 120) == v13)
    {
      sub_294AC((_QWORD *)(a1 + 1384), v4, *(_QWORD *)(v14 - 48), *(_QWORD *)(v14 - 40));
      if (v20 != -1)
        return a1 + 928;
    }
    v5 = (*(uint64_t (**)(_QWORD, uint64_t))(**(_QWORD **)(a1 + 1808) + 32))(*(_QWORD *)(a1 + 1808), v4);
    if (v15 == -1)
      goto LABEL_18;
  }
  else
  {
    v16 = *(_QWORD *)(a1 + 1832);
    if (*(_QWORD *)(a1 + 1824) == v16)
    {
LABEL_18:
      v19 = *(_QWORD *)(a1 + 1792);
      if (v19)
        return sub_29B18(v19, v4);
      return v5;
    }
    while (1)
    {
      v17 = *(_QWORD *)(v16 - 16);
      v16 -= 16;
      v5 = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v17 + 32))(v17, v4);
      if (v18 != -1)
        break;
      if (v16 == *(_QWORD *)(a1 + 1824))
        goto LABEL_18;
    }
  }
  return v5;
}

uint64_t sub_29B18(uint64_t a1, unsigned int a2)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = a2;
  result = (*(uint64_t (**)(_QWORD, _QWORD))(**(_QWORD **)(a1 + 8) + 32))(*(_QWORD *)(a1 + 8), a2);
  if (v5 == -1)
  {
    v6 = *(_QWORD *)(a1 + 32);
    if (*(_QWORD *)(a1 + 24) != v6)
    {
      do
      {
        v7 = *(_QWORD *)(v6 - 16);
        v6 -= 16;
        result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v7 + 32))(v7, v3);
      }
      while (v8 == -1 && v6 != *(_QWORD *)(a1 + 24));
    }
  }
  return result;
}

uint64_t sub_29B94(uint64_t a1, unsigned int a2)
{
  unint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  TUI::Evaluation::Variables::Capture *v10;
  TUI::Evaluation::Variables::Capture *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v4 = a2;
  v5 = TUI::Evaluation::Variables::Scope::lookup(a1 + 920, a2);
  if (v6 != -1)
    return v5;
  v8 = *(_QWORD *)(a1 + 1776);
  v9 = *(_QWORD *)(a1 + 1768);
  while (v8 != v9)
  {
    v11 = *(TUI::Evaluation::Variables::Capture **)(v8 - 16);
    v8 -= 16;
    v10 = v11;
    if (v11)
    {
      v2 = v2 & 0xFFFFFFFF00000000 | v4;
      v5 = (*(uint64_t (**)(TUI::Evaluation::Variables::Capture *, unint64_t))(*(_QWORD *)v10 + 40))(v10, v2);
      if (v12 != -1)
        return v5;
      if (!*((_QWORD *)v10 + 5) || (TUI::Evaluation::Variables::Capture::_bitCheck(v10, 0) & 1) != 0)
        break;
      v9 = *(_QWORD *)(a1 + 1768);
    }
  }
  v13 = *(_QWORD *)(a1 + 16);
  if (v13)
  {
    v14 = *(_QWORD *)(a1 + 32);
    if (*(_QWORD *)(a1 + 24) != v14 && *(_QWORD *)(v14 - 120) == v13)
    {
      sub_294AC((_QWORD *)(a1 + 1496), v4, *(_QWORD *)(v14 - 32), *(_QWORD *)(v14 - 24));
      if (v20 != -1)
        return a1 + 928;
    }
    v5 = (*(uint64_t (**)(_QWORD, uint64_t))(**(_QWORD **)(a1 + 1808) + 40))(*(_QWORD *)(a1 + 1808), v4);
    if (v15 == -1)
      goto LABEL_18;
  }
  else
  {
    v16 = *(_QWORD *)(a1 + 1832);
    if (*(_QWORD *)(a1 + 1824) == v16)
    {
LABEL_18:
      v19 = *(_QWORD *)(a1 + 1792);
      if (v19)
        return sub_29D04(v19, v4);
      return v5;
    }
    while (1)
    {
      v17 = *(_QWORD *)(v16 - 16);
      v16 -= 16;
      v5 = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v17 + 40))(v17, v4);
      if (v18 != -1)
        break;
      if (v16 == *(_QWORD *)(a1 + 1824))
        goto LABEL_18;
    }
  }
  return v5;
}

uint64_t sub_29D04(uint64_t a1, unsigned int a2)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = a2;
  result = (*(uint64_t (**)(_QWORD, _QWORD))(**(_QWORD **)(a1 + 8) + 40))(*(_QWORD *)(a1 + 8), a2);
  if (v5 == -1)
  {
    v6 = *(_QWORD *)(a1 + 32);
    if (*(_QWORD *)(a1 + 24) != v6)
    {
      do
      {
        v7 = *(_QWORD *)(v6 - 16);
        v6 -= 16;
        result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v7 + 40))(v7, v3);
      }
      while (v8 == -1 && v6 != *(_QWORD *)(a1 + 24));
    }
  }
  return result;
}

uint64_t sub_29D80(uint64_t a1, unsigned int a2)
{
  unint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  TUI::Evaluation::Variables::Capture *v10;
  TUI::Evaluation::Variables::Capture *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v4 = a2;
  v5 = TUI::Evaluation::Variables::Scope::lookup(a1 + 920, a2);
  if (v6 != -1)
    return v5;
  v8 = *(_QWORD *)(a1 + 1776);
  v9 = *(_QWORD *)(a1 + 1768);
  while (v8 != v9)
  {
    v11 = *(TUI::Evaluation::Variables::Capture **)(v8 - 16);
    v8 -= 16;
    v10 = v11;
    if (v11)
    {
      v2 = v2 & 0xFFFFFFFF00000000 | v4;
      v5 = (*(uint64_t (**)(TUI::Evaluation::Variables::Capture *, unint64_t))(*(_QWORD *)v10 + 48))(v10, v2);
      if (v12 != -1)
        return v5;
      if (!*((_QWORD *)v10 + 5) || (TUI::Evaluation::Variables::Capture::_bitCheck(v10, 0) & 1) != 0)
        break;
      v9 = *(_QWORD *)(a1 + 1768);
    }
  }
  v13 = *(_QWORD *)(a1 + 16);
  if (v13)
  {
    v14 = *(_QWORD *)(a1 + 32);
    if (*(_QWORD *)(a1 + 24) != v14 && *(_QWORD *)(v14 - 120) == v13)
    {
      sub_29F6C((_QWORD *)(a1 + 1608), v4, *(_QWORD *)(v14 - 16), *(_QWORD *)(v14 - 8));
      if (v20 != -1)
        return a1 + 928;
    }
    v5 = (*(uint64_t (**)(_QWORD, uint64_t))(**(_QWORD **)(a1 + 1808) + 48))(*(_QWORD *)(a1 + 1808), v4);
    if (v15 == -1)
      goto LABEL_18;
  }
  else
  {
    v16 = *(_QWORD *)(a1 + 1832);
    if (*(_QWORD *)(a1 + 1824) == v16)
    {
LABEL_18:
      v19 = *(_QWORD *)(a1 + 1792);
      if (v19)
        return sub_29EF0(v19, v4);
      return v5;
    }
    while (1)
    {
      v17 = *(_QWORD *)(v16 - 16);
      v16 -= 16;
      v5 = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v17 + 48))(v17, v4);
      if (v18 != -1)
        break;
      if (v16 == *(_QWORD *)(a1 + 1824))
        goto LABEL_18;
    }
  }
  return v5;
}

uint64_t sub_29EF0(uint64_t a1, unsigned int a2)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = a2;
  result = (*(uint64_t (**)(_QWORD, _QWORD))(**(_QWORD **)(a1 + 8) + 48))(*(_QWORD *)(a1 + 8), a2);
  if (v5 == -1)
  {
    v6 = *(_QWORD *)(a1 + 32);
    if (*(_QWORD *)(a1 + 24) != v6)
    {
      do
      {
        v7 = *(_QWORD *)(v6 - 16);
        v6 -= 16;
        result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v7 + 48))(v7, v3);
      }
      while (v8 == -1 && v6 != *(_QWORD *)(a1 + 24));
    }
  }
  return result;
}

_QWORD *sub_29F6C(_QWORD *a1, int a2, unint64_t a3, unint64_t a4)
{
  _QWORD *v6;
  uint64_t **v7;
  uint64_t *i;
  int v13;

  v13 = a2;
  if (a3 >= a4)
    return 0;
  v6 = a1;
  v7 = sub_28810(a1 + 3, (unsigned __int16 *)&v13);
  if (!v7)
    return 0;
  for (i = v7[3]; i != (uint64_t *)-1 && (unint64_t)i >= a4; i = *(uint64_t **)(*v6 + 56 * (_QWORD)i + 8))
    ;
  if ((unint64_t)i < a3 || (unint64_t)i >= a4)
    return 0;
  return v6;
}

char *sub_2A000(char *result, _QWORD *a2, _QWORD *a3, unint64_t a4)
{
  char *v6;
  _QWORD *v7;
  uint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  if (a4)
  {
    v6 = result;
    result = sub_2A0A0(result, a4);
    v7 = (_QWORD *)*((_QWORD *)v6 + 1);
    while (a2 != a3)
    {
      *v7 = *a2;
      v8 = a2[1];
      v7[1] = v8;
      if (v8)
      {
        v9 = (unint64_t *)(v8 + 8);
        do
          v10 = __ldxr(v9);
        while (__stxr(v10 + 1, v9));
      }
      a2 += 2;
      v7 += 2;
    }
    *((_QWORD *)v6 + 1) = v7;
  }
  return result;
}

void sub_2A08C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
  sub_2A0E0(&a9);
  _Unwind_Resume(a1);
}

char *sub_2A0A0(_QWORD *a1, unint64_t a2)
{
  char *result;
  uint64_t v4;

  if (a2 >> 60)
    sub_6F9C();
  result = (char *)sub_22FD4((uint64_t)(a1 + 2), a2);
  *a1 = result;
  a1[1] = result;
  a1[2] = &result[16 * v4];
  return result;
}

void sub_2A0E0(void ***a1)
{
  void **v1;
  void *v2;
  uint64_t v4;
  void *v5;

  v1 = *a1;
  v2 = **a1;
  if (v2)
  {
    v4 = (uint64_t)v1[1];
    v5 = v2;
    if ((void *)v4 != v2)
    {
      do
        v4 = sub_148E8(v4 - 16);
      while ((void *)v4 != v2);
      v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

uint64_t sub_2A150(uint64_t a1)
{
  void *v2;

  sub_2A188(a1, *(_QWORD **)(a1 + 16));
  v2 = *(void **)a1;
  *(_QWORD *)a1 = 0;
  if (v2)
    operator delete(v2);
  return a1;
}

void sub_2A188(uint64_t a1, _QWORD *a2)
{
  _QWORD *v2;
  _QWORD *v3;

  if (a2)
  {
    v2 = a2;
    do
    {
      v3 = (_QWORD *)*v2;
      sub_148E8((uint64_t)(v2 + 3));
      operator delete(v2);
      v2 = v3;
    }
    while (v3);
  }
}

void sub_2A1C4(_QWORD *a1, uint64_t a2)
{
  *a1 = a2;
  operator new();
}

void sub_2A21C(_Unwind_Exception *exception_object)
{
  uint64_t v1;

  if (v1)
    (*(void (**)(uint64_t))(*(_QWORD *)v1 + 8))(v1);
  _Unwind_Resume(exception_object);
}

void sub_2A240(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete();
}

uint64_t sub_2A264(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 24);
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

uint64_t sub_2A27C(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 24;
  }
  else
  {
    return 0;
  }
}

BOOL sub_2A2BC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(_QWORD *)(a2 + 8);
  if (v2 == v3)
    return 1;
  if ((v3 & v2) < 0 != __OFSUB__(v2, v3))
    return strcmp((const char *)(v2 & 0x7FFFFFFFFFFFFFFFLL), (const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL)) == 0;
  return 0;
}

uint64_t sub_2A308(uint64_t a1)
{
  uint64_t i;
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 8);
  for (i = *(_QWORD *)(a1 + 16); i != v3; i = *(_QWORD *)(a1 + 16))
  {
    *(_QWORD *)(a1 + 16) = i - 16;
    sub_148E8(i - 16);
  }
  if (*(_QWORD *)a1)
    operator delete(*(void **)a1);
  return a1;
}

void sub_2A354(_QWORD *a1, uint64_t a2)
{
  *a1 = a2;
  operator new();
}

void sub_2A3AC(_Unwind_Exception *exception_object)
{
  uint64_t v1;

  if (v1)
    (*(void (**)(uint64_t))(*(_QWORD *)v1 + 64))(v1);
  _Unwind_Resume(exception_object);
}

void sub_2A3D0(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete();
}

uint64_t sub_2A3F4(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 24);
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 64))(result);
  return result;
}

uint64_t sub_2A40C(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 24;
  }
  else
  {
    return 0;
  }
}

void sub_2A44C(_QWORD *a1, uint64_t a2)
{
  *a1 = a2;
  operator new();
}

void sub_2A4A4(_Unwind_Exception *exception_object)
{
  uint64_t v1;

  if (v1)
    (*(void (**)(uint64_t))(*(_QWORD *)v1 + 64))(v1);
  _Unwind_Resume(exception_object);
}

void sub_2A4C8(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete();
}

uint64_t sub_2A4EC(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 24);
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 64))(result);
  return result;
}

uint64_t sub_2A504(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 24;
  }
  else
  {
    return 0;
  }
}

uint64_t **sub_2A544(uint64_t a1, unsigned __int16 *a2, uint64_t a3, _DWORD **a4)
{
  unint64_t v4;
  int v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint8x8_t v11;
  uint64_t ***v12;
  uint64_t **i;
  unint64_t v14;
  uint64_t v16;
  _QWORD *v17;
  float v18;
  float v19;
  _BOOL8 v20;
  unint64_t v21;
  unint64_t v22;
  size_t v23;
  _QWORD *v24;
  unint64_t v25;
  _QWORD v27[2];
  char v28;

  v7 = *a2;
  v8 = a2[1];
  v9 = (v7 << 16) | v8;
  v10 = *(_QWORD *)(a1 + 8);
  if (v10)
  {
    v11 = (uint8x8_t)vcnt_s8((int8x8_t)v10);
    v11.i16[0] = vaddlv_u8(v11);
    if (v11.u32[0] > 1uLL)
    {
      v4 = (v7 << 16) | v8;
      if (v10 <= v9)
        v4 = v9 % v10;
    }
    else
    {
      v4 = (v10 - 1) & v9;
    }
    v12 = *(uint64_t ****)(*(_QWORD *)a1 + 8 * v4);
    if (v12)
    {
      for (i = *v12; i; i = (uint64_t **)*i)
      {
        v14 = (unint64_t)i[1];
        if (v14 == v9)
        {
          if (*((unsigned __int16 *)i + 9) == (_DWORD)v8 && *((unsigned __int16 *)i + 8) == v7)
            return i;
        }
        else
        {
          if (v11.u32[0] > 1uLL)
          {
            if (v14 >= v10)
              v14 %= v10;
          }
          else
          {
            v14 &= v10 - 1;
          }
          if (v14 != v4)
            break;
        }
      }
    }
  }
  v16 = a1 + 16;
  v17 = operator new(0x28uLL);
  v27[0] = v17;
  v27[1] = a1 + 16;
  *v17 = 0;
  v17[1] = v9;
  *((_DWORD *)v17 + 4) = **a4;
  v17[3] = 0;
  v17[4] = 0;
  v28 = 1;
  v18 = (float)(unint64_t)(*(_QWORD *)(a1 + 24) + 1);
  v19 = *(float *)(a1 + 32);
  if (!v10 || (float)(v19 * (float)v10) < v18)
  {
    v20 = 1;
    if (v10 >= 3)
      v20 = (v10 & (v10 - 1)) != 0;
    v21 = v20 | (2 * v10);
    v22 = vcvtps_u32_f32(v18 / v19);
    if (v21 <= v22)
      v23 = v22;
    else
      v23 = v21;
    sub_6A20(a1, v23);
    v10 = *(_QWORD *)(a1 + 8);
    if ((v10 & (v10 - 1)) != 0)
    {
      if (v10 <= v9)
        v4 = v9 % v10;
      else
        v4 = v9;
    }
    else
    {
      v4 = (v10 - 1) & v9;
    }
  }
  v24 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v4);
  if (v24)
  {
    *(_QWORD *)v27[0] = *v24;
    *v24 = v27[0];
  }
  else
  {
    *(_QWORD *)v27[0] = *(_QWORD *)(a1 + 16);
    *(_QWORD *)(a1 + 16) = v27[0];
    *(_QWORD *)(*(_QWORD *)a1 + 8 * v4) = v16;
    if (*(_QWORD *)v27[0])
    {
      v25 = *(_QWORD *)(*(_QWORD *)v27[0] + 8);
      if ((v10 & (v10 - 1)) != 0)
      {
        if (v25 >= v10)
          v25 %= v10;
      }
      else
      {
        v25 &= v10 - 1;
      }
      *(_QWORD *)(*(_QWORD *)a1 + 8 * v25) = v27[0];
    }
  }
  i = (uint64_t **)v27[0];
  v27[0] = 0;
  ++*(_QWORD *)(a1 + 24);
  sub_2A7B8((uint64_t)v27, 0);
  return i;
}

void sub_2A7A0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_2A7B8((uint64_t)va, 0);
  _Unwind_Resume(a1);
}

void sub_2A7B8(uint64_t a1, uint64_t a2)
{
  void *v2;

  v2 = *(void **)a1;
  *(_QWORD *)a1 = a2;
  if (v2)
  {
    if (*(_BYTE *)(a1 + 16))
      sub_148E8((uint64_t)v2 + 24);
    operator delete(v2);
  }
}

void sub_2A7FC(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = 0;
  v5 = *(void **)a2;
  *(_QWORD *)a2 = 0;
  v6 = *(void **)a1;
  *(_QWORD *)a1 = v5;
  if (v6)
    operator delete(v6);
  v7 = *(void **)a2;
  *(_QWORD *)a2 = v4;
  if (v7)
    operator delete(v7);
  v8 = *(_QWORD *)(a1 + 16);
  v9 = *(_QWORD *)(a1 + 8);
  v10 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a2 + 8) = v9;
  v11 = *(_QWORD *)(a1 + 24);
  v12 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v10;
  *(_QWORD *)(a1 + 24) = v12;
  *(_QWORD *)(a2 + 16) = v8;
  *(_QWORD *)(a2 + 24) = v11;
  v13 = *(_DWORD *)(a1 + 32);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(_DWORD *)(a2 + 32) = v13;
  if (*(_QWORD *)(a1 + 24))
  {
    v14 = *(_QWORD *)(a1 + 8);
    v15 = *(_QWORD *)(*(_QWORD *)(a1 + 16) + 8);
    if ((v14 & (v14 - 1)) != 0)
    {
      if (v15 >= v14)
        v15 %= v14;
    }
    else
    {
      v15 &= v14 - 1;
    }
    *(_QWORD *)(*(_QWORD *)a1 + 8 * v15) = a1 + 16;
  }
  if (v11)
  {
    v16 = *(_QWORD *)(a2 + 8);
    v17 = *(_QWORD *)(*(_QWORD *)(a2 + 16) + 8);
    if ((v16 & (v16 - 1)) != 0)
    {
      if (v17 >= v16)
        v17 %= v16;
    }
    else
    {
      v17 &= v16 - 1;
    }
    *(_QWORD *)(*(_QWORD *)a2 + 8 * v17) = a2 + 16;
  }
}

void *sub_2A908(uint64_t a1, unint64_t a2)
{
  if (a2 >= 0x222222222222223)
    sub_69F8();
  return operator new(120 * a2);
}

void sub_2ACC4(id *a1)
{
  NSMutableArray *v2;
  double v3;
  double v4;
  id v5;
  id v6;
  void *v7;
  TUIRenderModelSubviews *v8;
  CGAffineTransform v9;
  CGAffineTransform v10;

  v2 = objc_opt_new(NSMutableArray);
  objc_msgSend(a1[4], "computedNaturalSize");
  memset(&v10, 0, sizeof(v10));
  CGAffineTransformMakeTranslation(&v10, v3 * 0.5, v4 * 0.5);
  v5 = a1[4];
  v6 = a1[5];
  v9 = v10;
  objc_msgSend(v5, "appendChildRenderModelCompatibleWithKind:context:transform:toModels:", 4, v6, &v9, v2);
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[5], "renderModelConvertModels:toKind:", v2, 4));
  v8 = -[TUIRenderModelSubviews initWithSubmodels:]([TUIRenderModelSubviews alloc], "initWithSubmodels:", v7);
  objc_msgSend(a1[6], "setObject:forKeyedSubscript:", v8, CFSTR("default"));

}

id sub_2ADA0(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "updateWithValueIfChanged:", &off_252410);
}

void sub_2BAC0(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  NSObject *v4;
  uint8_t *v5;

  _os_log_error_impl(a1, v4, OS_LOG_TYPE_ERROR, a4, v5, 0xCu);
}

uint64_t sub_2BAD4(uint64_t a1, uint64_t a2)
{
  return a2;
}

id sub_2BAF4(void *a1, const char *a2)
{
  return objc_msgSend(a1, "feedId");
}

uint64_t sub_2BAFC(uint64_t result, float a2)
{
  _QWORD *v2;
  float *v3;

  *v3 = a2;
  *v2 = result;
  return result;
}

void sub_2CC80(id a1)
{
  void *v1;
  uint64_t v2;
  void *v3;
  const __CFString *v4;

  v4 = CFSTR("param");
  v1 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v4, 1));
  v2 = objc_claimAutoreleasedReturnValue(+[TUIAttributeSet setWithArray:](TUIAttributeSet, "setWithArray:", v1));
  v3 = (void *)qword_2CB268;
  qword_2CB268 = v2;

}

int64_t sub_2D844(id a1, TUIRenderModelTransform *a2, TUIRenderModelTransform *a3)
{
  TUIRenderModelTransform *v4;
  int64_t v5;
  int64_t v6;

  v4 = a3;
  v5 = -[TUIRenderModelTransform zIndex](a2, "zIndex");
  v6 = -[TUIRenderModelTransform zIndex](v4, "zIndex");

  if (v5 < v6)
    return -1;
  else
    return v5 > v6;
}

void sub_2D898(uint64_t a1, void *a2)
{
  void *v2;
  id v3;
  id v4;

  v2 = *(void **)(a1 + 32);
  v3 = a2;
  v4 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "identifier"));
  objc_msgSend(v2, "setObject:forKeyedSubscript:", v3, v4);

}

void sub_2E538(uint64_t a1)
{
  TUIReusableSubviewApplyLayoutAttributes(*(void **)(a1 + 32), *(void **)(a1 + 40));
}

void sub_2E544(uint64_t a1)
{
  void *v2;
  void *v3;
  id v4;
  void *v5;
  void *v6;
  id v7;
  uint64_t v8;
  id v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  id v16;
  void *v17;
  id v18;
  id v19;
  void *v20;
  void *v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  _BYTE v26[128];

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "subviews"));
  if (objc_msgSend(v2, "count"))
  {
    v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "lastObject"));
    v4 = TUIProtocolCast(&OBJC_PROTOCOL___TUIReusableRenderView, v3);
    v5 = (void *)objc_claimAutoreleasedReturnValue(v4);

    if (v5
      && (v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "layoutAttributes")),
          v7 = objc_msgSend(v6, "zIndex"),
          v8 = *(_QWORD *)(a1 + 64),
          v6,
          (uint64_t)v7 <= v8))
    {
      objc_msgSend(*(id *)(a1 + 32), "addSubview:", *(_QWORD *)(a1 + 40));
    }
    else
    {
      v24 = 0u;
      v25 = 0u;
      v22 = 0u;
      v23 = 0u;
      v21 = v2;
      v9 = v2;
      v10 = objc_msgSend(v9, "countByEnumeratingWithState:objects:count:", &v22, v26, 16);
      if (v10)
      {
        v11 = v10;
        v12 = *(_QWORD *)v23;
LABEL_6:
        v13 = 0;
        while (1)
        {
          v14 = v5;
          if (*(_QWORD *)v23 != v12)
            objc_enumerationMutation(v9);
          v15 = *(void **)(*((_QWORD *)&v22 + 1) + 8 * v13);
          v16 = TUIProtocolCast(&OBJC_PROTOCOL___TUIReusableRenderView, v15);
          v5 = (void *)objc_claimAutoreleasedReturnValue(v16);

          if (v5 && v5 != *(void **)(a1 + 40))
          {
            v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "layoutAttributes"));
            v18 = objc_msgSend(v17, "zIndex");

            v19 = *(id *)(a1 + 64);
            if ((uint64_t)v19 < (uint64_t)v18)
            {
              objc_msgSend(*(id *)(a1 + 32), "insertSubview:belowSubview:", *(_QWORD *)(a1 + 40), v15);
LABEL_20:

              goto LABEL_21;
            }
            if (v19 == v18)
            {
              objc_msgSend(*(id *)(a1 + 32), "insertSubview:aboveSubview:", *(_QWORD *)(a1 + 40), v5);
              goto LABEL_20;
            }
          }
          if (v11 == (id)++v13)
          {
            v11 = objc_msgSend(v9, "countByEnumeratingWithState:objects:count:", &v22, v26, 16);
            if (v11)
              goto LABEL_6;
            break;
          }
        }
      }

      objc_msgSend(*(id *)(a1 + 32), "addSubview:", *(_QWORD *)(a1 + 40));
LABEL_21:
      v2 = v21;
    }

  }
  else
  {
    objc_msgSend(*(id *)(a1 + 32), "addSubview:", *(_QWORD *)(a1 + 40));
  }
  v20 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 48), "tui_hostingView"));
  objc_msgSend(v20, "addSubview:", *(_QWORD *)(a1 + 40));

  objc_msgSend(*(id *)(a1 + 40), "viewWillDisplay");
  (*(void (**)(void))(*(_QWORD *)(a1 + 56) + 16))();

}

int64_t sub_2E788(id a1, UIView *a2, UIView *a3)
{
  UIView *v4;
  id v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  BOOL v9;
  BOOL v10;
  void *v11;
  id v12;
  void *v13;
  id v14;
  uint64_t v15;
  int64_t v16;

  v4 = a3;
  v5 = TUIProtocolCast(&OBJC_PROTOCOL___TUIReusableRenderView, a2);
  v6 = objc_claimAutoreleasedReturnValue(v5);
  v7 = TUIProtocolCast(&OBJC_PROTOCOL___TUIReusableRenderView, v4);
  v8 = objc_claimAutoreleasedReturnValue(v7);

  if (v6 | v8)
  {
    if (v6)
      v9 = 1;
    else
      v9 = v8 == 0;
    if (v9)
    {
      if (v6)
        v10 = v8 == 0;
      else
        v10 = 0;
      if (v10)
      {
        v16 = 1;
      }
      else
      {
        v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend((id)v6, "layoutAttributes"));
        v12 = objc_msgSend(v11, "zIndex");

        v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend((id)v8, "layoutAttributes"));
        v14 = objc_msgSend(v13, "zIndex");

        v15 = -1;
        if ((uint64_t)v12 >= (uint64_t)v14)
          v15 = 1;
        if (v12 == v14)
          v16 = 0;
        else
          v16 = v15;
      }
    }
    else
    {
      v16 = -1;
    }
  }
  else
  {
    v16 = 0;
  }

  return v16;
}

void sub_2E87C(uint64_t a1)
{
  void *v1;
  id v2;
  id v3;
  uint64_t v4;
  void *v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _BYTE v10[128];

  v6 = 0u;
  v7 = 0u;
  v8 = 0u;
  v9 = 0u;
  v1 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "allValues", 0));
  v2 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v6, v10, 16);
  if (v2)
  {
    v3 = v2;
    v4 = *(_QWORD *)v7;
    do
    {
      v5 = 0;
      do
      {
        if (*(_QWORD *)v7 != v4)
          objc_enumerationMutation(v1);
        objc_msgSend(*(id *)(*((_QWORD *)&v6 + 1) + 8 * (_QWORD)v5), "viewDidEndDisplay");
        v5 = (char *)v5 + 1;
      }
      while (v3 != v5);
      v3 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v6, v10, 16);
    }
    while (v3);
  }

}

void sub_2F8A8(id a1)
{
  void *v1;
  uint64_t v2;
  void *v3;
  const __CFString *v4;

  v4 = CFSTR("binding");
  v1 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v4, 1));
  v2 = objc_claimAutoreleasedReturnValue(+[TUIAttributeSet setWithArray:](TUIAttributeSet, "setWithArray:", v1));
  v3 = (void *)qword_2CB278;
  qword_2CB278 = v2;

}

void sub_2FFF8(_Unwind_Exception *a1)
{
  id *v1;
  id *v2;
  uint64_t v3;

  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v3 - 96));
  objc_destroyWeak((id *)(v3 - 88));
  _Unwind_Resume(a1);
}

id sub_3003C(uint64_t a1, uint64_t a2, void *a3, void *a4, void *a5)
{
  id *v8;
  id WeakRetained;
  void *v10;
  void *v11;
  id v12;
  id v13;
  uint64_t v14;
  id v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  void *v26;
  uint64_t v27;
  id v28;
  void *v29;
  id v30;
  void *v31;
  id v32;
  void *v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  unsigned __int8 v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  void *v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  id v57;
  void *v58;

  v8 = (id *)(a1 + 80);
  v57 = a5;
  v55 = a4;
  v54 = a3;
  WeakRetained = objc_loadWeakRetained(v8);
  v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "menuContainer"));
  v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "menuModel"));
  v12 = objc_loadWeakRetained(v8);
  v13 = objc_msgSend(v12, "menuIsPrimary");
  v14 = *(_QWORD *)(a1 + 32);
  v15 = objc_loadWeakRetained((id *)(a1 + 88));
  v58 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "menuWithIsPrimary:actionObject:actionDelegate:", v13, v14, v15));

  v56 = objc_loadWeakRetained(v8);
  v38 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v56, "stateButtonAttributesMap"));
  v48 = *(_QWORD *)(a1 + 48);
  v49 = *(_QWORD *)(a1 + 40);
  v53 = objc_loadWeakRetained(v8);
  v46 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v53, "linkEntities"));
  v52 = objc_loadWeakRetained(v8);
  v43 = objc_msgSend(v52, "buttonType");
  v51 = objc_loadWeakRetained(v8);
  v41 = objc_msgSend(v51, "buttonRole");
  v50 = objc_loadWeakRetained(v8);
  v40 = objc_msgSend(v50, "userInterfaceStyle");
  v47 = objc_loadWeakRetained(v8);
  v39 = objc_msgSend(v47, "enabled");
  v45 = objc_loadWeakRetained(v8);
  objc_msgSend(v45, "pressedScale");
  v17 = v16;
  v44 = objc_loadWeakRetained(v8);
  objc_msgSend(v44, "touchInsets");
  v19 = v18;
  v21 = v20;
  v23 = v22;
  v25 = v24;
  v42 = objc_loadWeakRetained(v8);
  v26 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v42, "identifier"));
  v27 = *(_QWORD *)(a1 + 56);
  v28 = objc_loadWeakRetained(v8);
  v29 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v28, "pointer"));
  v30 = objc_loadWeakRetained(v8);
  v31 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v30, "focusStyle"));
  v32 = objc_loadWeakRetained(v8);
  LOWORD(v37) = 0;
  LOBYTE(v36) = objc_msgSend(v32, "menuIsPrimary");
  LOBYTE(v35) = v39;
  v33 = (void *)objc_claimAutoreleasedReturnValue(+[TUIControlView renderModelWithStateToButtonAttributes:stateToRenderModel:imageModelIDToResource:actionHandler:viewState:linkEntities:type:role:userInterfaceStyle:enabled:pressScale:touchInsets:identifier:style:pointer:focusStyle:menu:contextMenuIsPrimaryAction:name:axAttributes:enableBackgroundForHighlightPreview:enableShadowForHighlightPreview:](TUIControlView, "renderModelWithStateToButtonAttributes:stateToRenderModel:imageModelIDToResource:actionHandler:viewState:linkEntities:type:role:userInterfaceStyle:enabled:pressScale:touchInsets:identifier:style:pointer:focusStyle:menu:contextMenuIsPrimaryAction:name:axAttributes:enableBackgroundForHighlightPreview:enableShadowForHighlightPreview:", v38, v54, v55, v49, v48, v46, v17, v19, v21, v23, v25, v43, v41,
                    v40,
                    v35,
                    v26,
                    v27,
                    v29,
                    v31,
                    v58,
                    v36,
                    *(_QWORD *)(a1 + 64),
                    *(_QWORD *)(a1 + 72),
                    v37));

  objc_msgSend(v33, "setAnimationGroups:", v57);
  return v33;
}

id TUISignpostDefault()
{
  if (qword_2CB290 != -1)
    dispatch_once(&qword_2CB290, &stru_23E450);
  return (id)qword_2CB288;
}

void sub_303B0(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.iBooks", "TemplateUI");
  v2 = (void *)qword_2CB288;
  qword_2CB288 = (uint64_t)v1;

}

id TUISignpostFeedViewController()
{
  if (qword_2CB2A0 != -1)
    dispatch_once(&qword_2CB2A0, &stru_23E470);
  return (id)qword_2CB298;
}

void sub_30420(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.iBooks", "TemplateUI.FeedViewController");
  v2 = (void *)qword_2CB298;
  qword_2CB298 = (uint64_t)v1;

}

void sub_304E8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_306D4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;

  _Unwind_Resume(a1);
}

void sub_308C4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;
  void *v12;

  _Unwind_Resume(a1);
}

void sub_309E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;
  void *v12;
  void *v13;

  _Unwind_Resume(a1);
}

void sub_30AE0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void sub_30BA0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_30D08(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, id a12)
{
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;

  _Unwind_Resume(a1);
}

void sub_30D90(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_30DE8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_3123C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;
  void *v12;

  _Unwind_Resume(a1);
}

void sub_31470(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;

  _Unwind_Resume(a1);
}

void sub_3166C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;

  _Unwind_Resume(a1);
}

void sub_3183C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_31A78(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;

  _Unwind_Resume(a1);
}

void sub_31D24(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_31DF8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_31E88(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_31F34(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

_QWORD *TUI::Evaluation::Enumerator::Base::Base(_QWORD *this)
{
  *this = off_23E4A0;
  return this;
}

void TUI::Evaluation::Enumerator::Each::~Each(TUI::Evaluation::Enumerator::Each *this)
{
  operator delete();
}

uint64_t TUI::Evaluation::Enumerator::Each::Each(uint64_t result, int a2, int a3, int a4)
{
  *(_QWORD *)result = off_23E4D8;
  *(_DWORD *)(result + 8) = a2;
  *(_DWORD *)(result + 12) = a3;
  *(_DWORD *)(result + 16) = a4;
  return result;
}

{
  *(_QWORD *)result = off_23E4D8;
  *(_DWORD *)(result + 8) = a2;
  *(_DWORD *)(result + 12) = a3;
  *(_DWORD *)(result + 16) = a4;
  return result;
}

id TUI::Evaluation::Enumerator::Each::object(TUI::Evaluation::Enumerator::Each *this, const TUI::Evaluation::Context *a2)
{
  id v3;
  void *v4;
  double v6[3];

  TUI::Evaluation::Context::resolve((uint64_t)a2, (TUI::Instruction::Decoder *)*((unsigned int *)this + 4), v6);
  v3 = TUI::Evaluation::ResolvedValue::objectValue((TUI::Evaluation::ResolvedValue *)v6, a2);
  v4 = (void *)objc_claimAutoreleasedReturnValue(v3);

  return v4;
}

void sub_32938(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11)
{

  _Unwind_Resume(a1);
}

void TUI::Evaluation::Enumerator::Each::evaluate(Entry *a1, TUI::Evaluation::Context *a2, void *a3)
{
  void (**v5)(id, _QWORD *);
  Entry v6;
  Entry v7;
  uint64_t v8;
  id v9[6];
  _QWORD v10[2];

  v5 = a3;
  if (v5)
  {
    TUI::Evaluation::Context::beginScope(a2);
    v6 = a1[2];
    v7 = a1[3];
    TUI::Evaluation::Enumerator::State::State((uint64_t)v9, v6, v7);
    v10[0] = TUI::Evaluation::Context::pushBinding((uint64_t)a2, (uint64_t)v9);
    v10[1] = v8;
    TUI::Evaluation::Enumerator::State::~State(v9);
    v5[2](v5, v10);
    TUI::Evaluation::Context::endScope(a2);
  }

}

void sub_329D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, id a9)
{
  void *v9;

  TUI::Evaluation::Enumerator::State::~State(&a9);

  _Unwind_Resume(a1);
}

void TUI::Evaluation::Enumerator::Each::enumerate(uint64_t a1, TUI::Evaluation::Context *a2, void *a3)
{
  Entry v5;
  Entry v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  void *v12;
  void *v13;
  id v14;
  uint64_t v15;
  void *k;
  void *v17;
  void *v18;
  uint64_t v19;
  id v20;
  id v21;
  void *v22;
  id v23;
  void *v24;
  uint64_t v25;
  id v26;
  id v27;
  id v28;
  void *v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  void *i;
  void *v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  void *j;
  void *v40;
  uint64_t v41;
  id v42;
  void *v43;
  _BOOL4 v44;
  uint64_t v45;
  id obj;
  TUI::Evaluation::Context *v47;
  uint64_t v48;
  void (**v49)(void);
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  double v62[3];
  id v63[6];
  _BYTE v64[128];
  _BYTE v65[128];
  _BYTE v66[128];

  v49 = a3;
  if (v49 && TUIValueNotNil(*(_DWORD *)(a1 + 16)))
  {
    TUI::Evaluation::Context::beginScope(a2);
    v5 = *(Entry *)(a1 + 8);
    v6 = *(Entry *)(a1 + 12);
    TUI::Evaluation::Enumerator::State::State((uint64_t)v63, v5, v6);
    v7 = TUI::Evaluation::Context::pushBinding((uint64_t)a2, (uint64_t)v63);
    v48 = v8;
    v9 = v7;
    TUI::Evaluation::Enumerator::State::~State(v63);
    TUI::Evaluation::Context::resolve((uint64_t)a2, (TUI::Instruction::Decoder *)*(unsigned int *)(a1 + 16), v62);
    v47 = a2;
    v10 = TUI::Evaluation::ResolvedValue::objectValue((TUI::Evaluation::ResolvedValue *)v62, a2);
    obj = (id)objc_claimAutoreleasedReturnValue(v10);

    if (*(__int16 *)(a1 + 10) == -1
      || *(__int16 *)(a1 + 8) == -1
      || (objc_opt_respondsToSelector(obj, "keyEnumerator") & 1) == 0
      || (objc_opt_respondsToSelector(obj, "objectForKey:") & 1) == 0)
    {
      if (*(__int16 *)(a1 + 14) == -1 || *(__int16 *)(a1 + 12) == -1)
        goto LABEL_27;
      v25 = objc_opt_class(NSArray, v11);
      if ((objc_opt_isKindOfClass(obj, v25) & 1) != 0)
      {
        v26 = obj;
        v27 = objc_msgSend(v26, "count", v26);
        v56 = 0u;
        v57 = 0u;
        v54 = 0u;
        v55 = 0u;
        v28 = v26;
        v29 = v28;
        v30 = objc_msgSend(v28, "countByEnumeratingWithState:objects:count:", &v54, v65, 16);
        if (v30)
        {
          v31 = 0;
          v32 = *(_QWORD *)v55;
          do
          {
            for (i = 0; i != v30; i = (char *)i + 1)
            {
              if (*(_QWORD *)v55 != v32)
                objc_enumerationMutation(v29);
              v34 = *(void **)(*((_QWORD *)&v54 + 1) + 8 * (_QWORD)i);
              v35 = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v9 + 24))(v9, v48);
              *(_QWORD *)(v35 + 16) = (char *)i + v31;
              objc_storeStrong((id *)(v35 + 32), v34);
              *(_BYTE *)(v35 + 8) = ((char *)i + v31 == 0) | (2 * ((char *)i + 1 - (_QWORD)v27 + v31 == 0)) | *(_BYTE *)(v35 + 8) & 0xFC;
              TUI::Evaluation::Context::evaluateWithIdentifier((uint64_t)v47, (uint64_t)i + v31, v49);
            }
            v28 = v29;
            v30 = objc_msgSend(v29, "countByEnumeratingWithState:objects:count:", &v54, v65, 16);
            v31 += (uint64_t)i;
          }
          while (v30);
        }

        v12 = v29;
      }
      else
      {
        if (*(__int16 *)(a1 + 14) == -1 || *(__int16 *)(a1 + 12) == -1)
          goto LABEL_27;
        if ((objc_opt_respondsToSelector(obj, "objectEnumerator") & 1) == 0)
        {
          if (*(__int16 *)(a1 + 14) != -1 && *(__int16 *)(a1 + 12) != -1)
          {
            if (obj)
            {
              v42 = TUIProtocolCast(&OBJC_PROTOCOL___TUIDynamicProviding, obj);
              v43 = (void *)objc_claimAutoreleasedReturnValue(v42);
              v44 = v43 == 0;

              if (v44)
              {
                v45 = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v9 + 24))(v9, v48);
                objc_storeStrong((id *)(v45 + 32), obj);
                v49[2]();
              }
            }
          }
          goto LABEL_27;
        }
        v52 = 0u;
        v53 = 0u;
        v50 = 0u;
        v51 = 0u;
        v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(obj, "objectEnumerator"));
        v36 = objc_msgSend(v12, "countByEnumeratingWithState:objects:count:", &v50, v64, 16);
        if (v36)
        {
          v37 = 0;
          v38 = *(_QWORD *)v51;
          do
          {
            for (j = 0; j != v36; j = (char *)j + 1)
            {
              if (*(_QWORD *)v51 != v38)
                objc_enumerationMutation(v12);
              v40 = *(void **)(*((_QWORD *)&v50 + 1) + 8 * (_QWORD)j);
              v41 = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v9 + 24))(v9, v48);
              objc_storeStrong((id *)(v41 + 32), v40);
              TUI::Evaluation::Context::evaluateWithIdentifier((uint64_t)v47, (uint64_t)j + v37, v49);
            }
            v36 = objc_msgSend(v12, "countByEnumeratingWithState:objects:count:", &v50, v64, 16);
            v37 += (uint64_t)j;
          }
          while (v36);
        }
      }
    }
    else
    {
      v60 = 0u;
      v61 = 0u;
      v58 = 0u;
      v59 = 0u;
      v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(obj, "keyEnumerator"));
      v13 = v12;
      v14 = objc_msgSend(v12, "countByEnumeratingWithState:objects:count:", &v58, v66, 16);
      if (v14)
      {
        v15 = *(_QWORD *)v59;
        do
        {
          for (k = 0; k != v14; k = (char *)k + 1)
          {
            if (*(_QWORD *)v59 != v15)
              objc_enumerationMutation(v12);
            v17 = *(void **)(*((_QWORD *)&v58 + 1) + 8 * (_QWORD)k);
            v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(obj, "objectForKey:", v17));
            v19 = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v9 + 24))(v9, v48);
            v20 = v17;
            v21 = v18;
            v22 = *(void **)(v19 + 24);
            *(_QWORD *)(v19 + 24) = v20;
            v23 = v20;

            v24 = *(void **)(v19 + 32);
            *(_QWORD *)(v19 + 32) = v21;

            v49[2]();
            v12 = v13;
          }
          v14 = objc_msgSend(v13, "countByEnumeratingWithState:objects:count:", &v58, v66, 16);
        }
        while (v14);
      }
    }

LABEL_27:
    TUI::Evaluation::Context::endScope(v47);

  }
}

void sub_32F0C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void TUI::Evaluation::Enumerator::Assign::~Assign(TUI::Evaluation::Enumerator::Assign *this)
{
  operator delete();
}

uint64_t TUI::Evaluation::Enumerator::Assign::Assign(uint64_t result, int a2, int a3)
{
  *(_QWORD *)result = off_23E510;
  *(_DWORD *)(result + 8) = a2;
  *(_DWORD *)(result + 12) = a3;
  return result;
}

{
  *(_QWORD *)result = off_23E510;
  *(_DWORD *)(result + 8) = a2;
  *(_DWORD *)(result + 12) = a3;
  return result;
}

id TUI::Evaluation::Enumerator::Assign::object(TUI::Evaluation::Enumerator::Assign *this, const TUI::Evaluation::Context *a2)
{
  id v3;
  void *v4;
  double v6[3];

  TUI::Evaluation::Context::resolve((uint64_t)a2, (TUI::Instruction::Decoder *)*((unsigned int *)this + 3), v6);
  v3 = TUI::Evaluation::ResolvedValue::objectValue((TUI::Evaluation::ResolvedValue *)v6, a2);
  v4 = (void *)objc_claimAutoreleasedReturnValue(v3);

  return v4;
}

void sub_33060(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11)
{

  _Unwind_Resume(a1);
}

void TUI::Evaluation::Enumerator::Assign::evaluate(Entry *a1, TUI::Evaluation::Context *a2, void *a3)
{
  void (**v5)(id, _QWORD *);
  Entry v6;
  Entry v7;
  uint64_t v8;
  id v9[6];
  _QWORD v10[2];

  v5 = a3;
  if (v5)
  {
    TUI::Evaluation::Context::beginScope(a2);
    v6 = a1[2];
    v7 = (Entry)-65536;
    TUI::Evaluation::Enumerator::State::State((uint64_t)v9, v7, v6);
    v10[0] = TUI::Evaluation::Context::pushBinding((uint64_t)a2, (uint64_t)v9);
    v10[1] = v8;
    TUI::Evaluation::Enumerator::State::~State(v9);
    v5[2](v5, v10);
    TUI::Evaluation::Context::endScope(a2);
  }

}

void sub_33100(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, id a9)
{
  void *v9;

  TUI::Evaluation::Enumerator::State::~State(&a9);

  _Unwind_Resume(a1);
}

void TUI::Evaluation::Enumerator::Assign::enumerate(uint64_t a1, const TUI::Evaluation::Context *a2, void *a3)
{
  void (**v5)(_QWORD);
  id v6;
  void *v7;
  Entry v8;
  Entry v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14[6];
  double v15[3];

  v5 = a3;
  if (v5 && TUIValueNotNil(*(_DWORD *)(a1 + 12)))
  {
    TUI::Evaluation::Context::resolve((uint64_t)a2, (TUI::Instruction::Decoder *)*(unsigned int *)(a1 + 12), v15);
    v6 = TUI::Evaluation::ResolvedValue::objectValue((TUI::Evaluation::ResolvedValue *)v15, a2);
    v7 = (void *)objc_claimAutoreleasedReturnValue(v6);

    if (v7 && *(__int16 *)(a1 + 10) != -1 && *(__int16 *)(a1 + 8) != -1)
    {
      TUI::Evaluation::Context::beginScope(a2);
      v8 = *(Entry *)(a1 + 8);
      v9 = (Entry)-65536;
      TUI::Evaluation::Enumerator::State::State((uint64_t)v14, v9, v8);
      v10 = TUI::Evaluation::Context::pushBinding((uint64_t)a2, (uint64_t)v14);
      v12 = v11;
      TUI::Evaluation::Enumerator::State::~State(v14);
      v13 = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v10 + 24))(v10, v12);
      objc_storeStrong((id *)(v13 + 32), v7);
      v5[2](v5);
      TUI::Evaluation::Context::endScope(a2);
    }

  }
}

void sub_33230(_Unwind_Exception *a1, uint64_t a2, ...)
{
  void *v2;
  void *v3;
  va_list va;

  va_start(va, a2);
  TUI::Evaluation::Enumerator::State::~State((id *)va);

  _Unwind_Resume(a1);
}

void sub_33398(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v2 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "queryGenerationToken"));
  v3 = *(_QWORD *)(a1 + 32);
  v4 = *(void **)(v3 + 16);
  *(_QWORD *)(v3 + 16) = v2;

}

uint64_t sub_33564(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;

  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 40), "setQueryGenerationFromToken:error:", *(_QWORD *)(*(_QWORD *)(a1 + 32) + 16), 0);
  v2 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 40), "executeFetchRequest:error:", *(_QWORD *)(*(_QWORD *)(a1 + 32) + 48), 0));
  v3 = *(_QWORD *)(a1 + 32);
  v4 = *(void **)(v3 + 56);
  *(_QWORD *)(v3 + 56) = v2;

  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
}

uint64_t sub_335C4(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(a1 + 40) + 16))(*(_QWORD *)(a1 + 40), *(_QWORD *)(*(_QWORD *)(a1 + 32) + 56));
}

void sub_3386C(uint64_t a1, void *a2)
{
  unint64_t v3;
  uint64_t v4;
  void *v5;
  NSString *v6;
  void *v7;
  void *v8;
  void *v9;
  id v10;
  id v11;

  v11 = a2;
  if (!*(_QWORD *)(a1 + 32)
    || (v3 = *(_QWORD *)(a1 + 48) + *(_QWORD *)(a1 + 40), v3 > (unint64_t)objc_msgSend(v11, "count")))
  {
    v6 = NSStringFromRange(*(NSRange *)(a1 + 40));
    v7 = (void *)objc_claimAutoreleasedReturnValue(v6);
    v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedInteger:](NSNumber, "numberWithUnsignedInteger:", objc_msgSend(v11, "count")));
    v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("%@ is out-of-range with %@ fetched objects"), v7, v8));
    v10 = (id)objc_claimAutoreleasedReturnValue(+[NSException exceptionWithName:reason:userInfo:](NSException, "exceptionWithName:reason:userInfo:", CFSTR("OutOfRange"), v9, 0));

    objc_exception_throw(v10);
  }
  v4 = *(_QWORD *)(a1 + 32);
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "subarrayWithRange:", *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48)));
  (*(void (**)(uint64_t, void *))(v4 + 16))(v4, v5);

}

void sub_33A2C(uint64_t a1, void *a2)
{
  id v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  void *v7;
  void *v8;
  id v9;
  id v10;

  v10 = a2;
  v3 = objc_msgSend(v10, "count");
  if (!*(_QWORD *)(a1 + 40) || objc_msgSend(*(id *)(a1 + 32), "lastIndex") >= v3)
  {
    v6 = *(_QWORD *)(a1 + 32);
    v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedInteger:](NSNumber, "numberWithUnsignedInteger:", objc_msgSend(v10, "count")));
    v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("%@ is out-of-range with %@ fetched objects"), v6, v7));
    v9 = (id)objc_claimAutoreleasedReturnValue(+[NSException exceptionWithName:reason:userInfo:](NSException, "exceptionWithName:reason:userInfo:", CFSTR("OutOfRange"), v8, 0));

    objc_exception_throw(v9);
  }
  v4 = *(_QWORD *)(a1 + 40);
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "objectsAtIndexes:", *(_QWORD *)(a1 + 32)));
  (*(void (**)(uint64_t, void *))(v4 + 16))(v4, v5);

}

void sub_33C08(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_33C20(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_33C30(uint64_t a1)
{

}

void sub_33C38(_QWORD *a1)
{
  _TUICoreDataGeneration *v2;
  uint64_t v3;
  void *v4;
  void *v5;
  TUIMutableDynamicArray *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  _TUICoreDataGeneration *v13;

  objc_msgSend(*(id *)(a1[4] + 32), "performFetch:", 0);
  v2 = [_TUICoreDataGeneration alloc];
  v3 = a1[5];
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1[4] + 32), "fetchRequest"));
  v13 = -[_TUICoreDataGeneration initWithContext:fetchRequest:](v2, "initWithContext:fetchRequest:", v3, v4);

  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1[4] + 32), "fetchedObjects"));
  -[_TUICoreDataGeneration updateCount:](v13, "updateCount:", objc_msgSend(v5, "count"));

  v6 = -[TUIDynamicArray initWithDataProvider:generation:count:]([TUIMutableDynamicArray alloc], "initWithDataProvider:generation:count:", a1[4], v13, 0);
  v7 = *(_QWORD *)(a1[6] + 8);
  v8 = *(void **)(v7 + 40);
  *(_QWORD *)(v7 + 40) = v6;

  -[_TUICoreDataGeneration captureTokenFromContext:](v13, "captureTokenFromContext:", a1[5]);
  objc_storeWeak((id *)(a1[4] + 8), *(id *)(*(_QWORD *)(a1[6] + 8) + 40));
  objc_msgSend(*(id *)(*(_QWORD *)(a1[6] + 8) + 40), "_updateProvider:count:generation:", a1[4], -[_TUICoreDataGeneration count](v13, "count"), v13);
  v9 = *(_QWORD *)(a1[4] + 24);
  if (v9)
  {
    v10 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(a1[6] + 8) + 40), "tui_subarrayWithStart:end:", 0, v9 - 1));
    v11 = *(_QWORD *)(a1[6] + 8);
    v12 = *(void **)(v11 + 40);
    *(_QWORD *)(v11 + 40) = v10;

    objc_storeWeak((id *)(a1[4] + 16), *(id *)(*(_QWORD *)(a1[6] + 8) + 40));
  }

}

void sub_33ED0(_QWORD *a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  uint64_t v6;
  void *v7;
  void *v8;
  _TUICoreDataGeneration *v9;
  void *v10;
  void *v11;
  _TUICoreDataGeneration *v12;
  void *v13;
  _TUIDynamicArrayUpdateGroup *v14;
  id v15;
  id v16;
  id v17;
  uint64_t v18;
  void *i;
  void *v20;
  char *v21;
  uint64_t v22;
  id WeakRetained;
  void *v24;
  id v25;
  id v26;
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  _BYTE v35[128];

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1[4] + 32), "managedObjectContext"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "executeFetchRequest:error:", a1[5], 0));

  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1[4] + 32), "managedObjectContext"));
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "executeFetchRequest:error:", a1[6], 0));

  v6 = a1[7];
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1[4] + 32), "fetchRequest"));
  objc_msgSend(v7, "setPredicate:", v6);

  objc_msgSend(*(id *)(a1[4] + 32), "performFetch:", 0);
  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "differenceFromArray:withOptions:", v3, 7));
  v9 = [_TUICoreDataGeneration alloc];
  v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1[4] + 32), "managedObjectContext"));
  v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1[4] + 32), "fetchRequest"));
  v12 = -[_TUICoreDataGeneration initWithContext:fetchRequest:](v9, "initWithContext:fetchRequest:", v10, v11);

  v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1[4] + 32), "managedObjectContext"));
  -[_TUICoreDataGeneration captureTokenFromContext:](v12, "captureTokenFromContext:", v13);

  v29 = v5;
  -[_TUICoreDataGeneration updateCount:](v12, "updateCount:", objc_msgSend(v5, "count"));
  v28 = (void *)objc_claimAutoreleasedReturnValue(+[TUITransaction currentOrImplicitTransaction](TUITransaction, "currentOrImplicitTransaction"));
  v30 = v3;
  v27 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v28, "tx"));
  v14 = -[_TUIDynamicArrayUpdateGroup initWithGeneration:count:transaction:]([_TUIDynamicArrayUpdateGroup alloc], "initWithGeneration:count:transaction:", v12, objc_msgSend(v3, "count"), v27);
  v31 = 0u;
  v32 = 0u;
  v33 = 0u;
  v34 = 0u;
  v15 = v8;
  v16 = objc_msgSend(v15, "countByEnumeratingWithState:objects:count:", &v31, v35, 16);
  if (v16)
  {
    v17 = v16;
    v18 = *(_QWORD *)v32;
    do
    {
      for (i = 0; i != v17; i = (char *)i + 1)
      {
        if (*(_QWORD *)v32 != v18)
          objc_enumerationMutation(v15);
        v20 = *(void **)(*((_QWORD *)&v31 + 1) + 8 * (_QWORD)i);
        v21 = (char *)objc_msgSend(v20, "changeType");
        if (v21 == (_BYTE *)&dword_0 + 1)
        {
          if (objc_msgSend(v20, "associatedIndex") == (id)0x7FFFFFFFFFFFFFFFLL)
            -[_TUIDynamicArrayUpdateGroup deleteItemAtIndex:](v14, "deleteItemAtIndex:", objc_msgSend(v20, "index"));
        }
        else if (!v21)
        {
          if (objc_msgSend(v20, "associatedIndex") == (id)0x7FFFFFFFFFFFFFFFLL)
            -[_TUIDynamicArrayUpdateGroup insertItemAtIndex:](v14, "insertItemAtIndex:", objc_msgSend(v20, "index"));
          else
            -[_TUIDynamicArrayUpdateGroup moveItemFromIndex:toIndex:](v14, "moveItemFromIndex:toIndex:", objc_msgSend(v20, "associatedIndex"), objc_msgSend(v20, "index"));
        }
      }
      v17 = objc_msgSend(v15, "countByEnumeratingWithState:objects:count:", &v31, v35, 16);
    }
    while (v17);
  }

  -[_TUIDynamicArrayUpdateGroup finalizeUpdates](v14, "finalizeUpdates");
  v22 = a1[4];
  if (*(_QWORD *)(v22 + 24))
  {
    WeakRetained = objc_loadWeakRetained((id *)(v22 + 16));
    objc_msgSend(WeakRetained, "_enqueueUpdate:", v14);

    v24 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1[4] + 32), "managedObjectContext"));
    v25 = objc_msgSend(v24, "countForFetchRequest:error:", a1[6], 0);

    v26 = objc_loadWeakRetained((id *)(a1[4] + 8));
    objc_msgSend(v26, "_updateCount:generation:", v25, v12);
  }
  else
  {
    v26 = objc_loadWeakRetained((id *)(v22 + 8));
    objc_msgSend(v26, "_enqueueUpdate:", v14);
  }

}

void sub_3487C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_34960(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_34AC4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_34C20(_QWORD *a1, uint64_t *a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t i;
  uint64_t *v8;
  unint64_t v9;
  uint64_t *v10;
  _QWORD *v11;
  uint64_t *v12;

  v6 = a1[1];
  if (!v6)
    goto LABEL_9;
  for (i = 0; i != v6; *(_QWORD *)(*a1 + 8 * i++) = 0)
    ;
  v8 = (uint64_t *)a1[2];
  a1[2] = 0;
  a1[3] = 0;
  if (v8)
  {
    while (a2 != a3)
    {
      v9 = *((unsigned __int16 *)a2 + 8);
      *((_WORD *)v8 + 8) = v9;
      *((_DWORD *)v8 + 5) = *((_DWORD *)a2 + 5);
      v10 = (uint64_t *)*v8;
      v8[1] = v9;
      v11 = (_QWORD *)sub_34D30((uint64_t)a1, v9, (unsigned __int16 *)v8 + 8);
      sub_34E84(a1, v8, v11);
      a2 = (uint64_t *)*a2;
      v8 = v10;
      if (!v10)
        goto LABEL_9;
    }
    do
    {
      v12 = (uint64_t *)*v8;
      operator delete(v8);
      v8 = v12;
    }
    while (v12);
  }
  else
  {
LABEL_9:
    while (a2 != a3)
    {
      sub_351B8(a1, a2 + 2);
      a2 = (uint64_t *)*a2;
    }
  }
}

void sub_34CFC(void *a1)
{
  _QWORD *v1;
  _QWORD *v2;

  __cxa_begin_catch(a1);
  do
  {
    v2 = (_QWORD *)*v1;
    operator delete(v1);
    v1 = v2;
  }
  while (v2);
  __cxa_rethrow();
}

void sub_34D1C(_Unwind_Exception *a1)
{
  __cxa_end_catch();
  _Unwind_Resume(a1);
}

uint64_t sub_34D30(uint64_t a1, unint64_t a2, unsigned __int16 *a3)
{
  unint64_t v6;
  float v7;
  float v8;
  uint64_t v9;
  _BOOL8 v10;
  size_t v11;
  unint64_t v12;
  size_t v13;
  uint8x8_t v14;
  unint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t result;
  unint64_t v19;
  unint64_t v20;
  _BOOL4 v21;
  int v22;

  v6 = *(_QWORD *)(a1 + 8);
  v7 = (float)(unint64_t)(*(_QWORD *)(a1 + 24) + 1);
  v8 = *(float *)(a1 + 32);
  if (!v6 || (float)(v8 * (float)v6) < v7)
  {
    v9 = 2 * v6;
    v10 = v6 < 3 || (v6 & (v6 - 1)) != 0;
    v11 = v10 | v9;
    v12 = vcvtps_u32_f32(v7 / v8);
    if (v11 <= v12)
      v13 = v12;
    else
      v13 = v11;
    sub_34F6C(a1, v13);
    v6 = *(_QWORD *)(a1 + 8);
  }
  v14 = (uint8x8_t)vcnt_s8((int8x8_t)v6);
  v14.i16[0] = vaddlv_u8(v14);
  if (v14.u32[0] > 1uLL)
  {
    v15 = a2;
    if (v6 <= a2)
      v15 = a2 % v6;
  }
  else
  {
    v15 = (v6 - 1) & a2;
  }
  v16 = *(_QWORD *)(*(_QWORD *)a1 + 8 * v15);
  if (!v16)
    return 0;
  v17 = 0;
  do
  {
    result = v16;
    v16 = *(_QWORD *)v16;
    if (!v16)
      break;
    v19 = *(_QWORD *)(v16 + 8);
    if (v14.u32[0] > 1uLL)
    {
      v20 = *(_QWORD *)(v16 + 8);
      if (v19 >= v6)
        v20 = v19 % v6;
    }
    else
    {
      v20 = v19 & (v6 - 1);
    }
    if (v20 != v15)
      break;
    v21 = v19 == a2 && *(unsigned __int16 *)(v16 + 16) == *a3;
    v22 = v17 & !v21;
    v17 |= v21;
  }
  while (v22 != 1);
  return result;
}

_QWORD *sub_34E84(_QWORD *result, _QWORD *a2, _QWORD *a3)
{
  int8x8_t v3;
  unint64_t v4;
  uint8x8_t v5;
  unint64_t v6;

  v3 = (int8x8_t)result[1];
  v4 = a2[1];
  v5 = (uint8x8_t)vcnt_s8(v3);
  v5.i16[0] = vaddlv_u8(v5);
  if (v5.u32[0] > 1uLL)
  {
    if (v4 >= *(_QWORD *)&v3)
      v4 %= *(_QWORD *)&v3;
  }
  else
  {
    v4 &= *(_QWORD *)&v3 - 1;
  }
  if (!a3)
  {
    *a2 = result[2];
    result[2] = a2;
    *(_QWORD *)(*result + 8 * v4) = result + 2;
    if (!*a2)
      goto LABEL_19;
    v6 = *(_QWORD *)(*a2 + 8);
    if (v5.u32[0] > 1uLL)
    {
      if (v6 >= *(_QWORD *)&v3)
        v6 %= *(_QWORD *)&v3;
    }
    else
    {
      v6 &= *(_QWORD *)&v3 - 1;
    }
LABEL_18:
    *(_QWORD *)(*result + 8 * v6) = a2;
    goto LABEL_19;
  }
  *a2 = *a3;
  *a3 = a2;
  if (*a2)
  {
    v6 = *(_QWORD *)(*a2 + 8);
    if (v5.u32[0] > 1uLL)
    {
      if (v6 >= *(_QWORD *)&v3)
        v6 %= *(_QWORD *)&v3;
    }
    else
    {
      v6 &= *(_QWORD *)&v3 - 1;
    }
    if (v6 != v4)
      goto LABEL_18;
  }
LABEL_19:
  ++result[3];
  return result;
}

void sub_34F6C(uint64_t a1, size_t __n)
{
  size_t prime;
  int8x8_t v4;
  unint64_t v5;
  uint8x8_t v6;
  uint64_t v7;

  if (__n == 1)
  {
    prime = 2;
  }
  else
  {
    prime = __n;
    if ((__n & (__n - 1)) != 0)
      prime = std::__next_prime(__n);
  }
  v4 = *(int8x8_t *)(a1 + 8);
  if (prime > *(_QWORD *)&v4)
    goto LABEL_16;
  if (prime < *(_QWORD *)&v4)
  {
    v5 = vcvtps_u32_f32((float)*(unint64_t *)(a1 + 24) / *(float *)(a1 + 32));
    if (*(_QWORD *)&v4 < 3uLL || (v6 = (uint8x8_t)vcnt_s8(v4), v6.i16[0] = vaddlv_u8(v6), v6.u32[0] > 1uLL))
    {
      v5 = std::__next_prime(v5);
    }
    else
    {
      v7 = 1 << -(char)__clz(v5 - 1);
      if (v5 >= 2)
        v5 = v7;
    }
    if (prime <= v5)
      prime = v5;
    if (prime < *(_QWORD *)&v4)
LABEL_16:
      sub_35048(a1, prime);
  }
}

void sub_35048(uint64_t a1, unint64_t a2)
{
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t **v7;
  unint64_t v8;
  uint8x8_t v9;
  void *v10;
  uint64_t *i;
  unint64_t v12;
  uint64_t *v13;
  _QWORD *v14;

  if (a2)
  {
    if (a2 >> 61)
      sub_69F8();
    v4 = operator new(8 * a2);
    v5 = *(void **)a1;
    *(_QWORD *)a1 = v4;
    if (v5)
      operator delete(v5);
    v6 = 0;
    *(_QWORD *)(a1 + 8) = a2;
    do
      *(_QWORD *)(*(_QWORD *)a1 + 8 * v6++) = 0;
    while (a2 != v6);
    v7 = *(uint64_t ***)(a1 + 16);
    if (v7)
    {
      v8 = (unint64_t)v7[1];
      v9 = (uint8x8_t)vcnt_s8((int8x8_t)a2);
      v9.i16[0] = vaddlv_u8(v9);
      if (v9.u32[0] > 1uLL)
      {
        if (v8 >= a2)
          v8 %= a2;
      }
      else
      {
        v8 &= a2 - 1;
      }
      *(_QWORD *)(*(_QWORD *)a1 + 8 * v8) = a1 + 16;
      for (i = *v7; *v7; i = *v7)
      {
        v12 = i[1];
        if (v9.u32[0] > 1uLL)
        {
          if (v12 >= a2)
            v12 %= a2;
        }
        else
        {
          v12 &= a2 - 1;
        }
        if (v12 == v8)
        {
          v7 = (uint64_t **)i;
        }
        else
        {
          v13 = i;
          if (*(_QWORD *)(*(_QWORD *)a1 + 8 * v12))
          {
            do
            {
              v14 = v13;
              v13 = (uint64_t *)*v13;
            }
            while (v13 && *((unsigned __int16 *)i + 8) == *((unsigned __int16 *)v13 + 8));
            *v7 = v13;
            *v14 = **(_QWORD **)(*(_QWORD *)a1 + 8 * v12);
            **(_QWORD **)(*(_QWORD *)a1 + 8 * v12) = i;
          }
          else
          {
            *(_QWORD *)(*(_QWORD *)a1 + 8 * v12) = v7;
            v7 = (uint64_t **)i;
            v8 = v12;
          }
        }
      }
    }
  }
  else
  {
    v10 = *(void **)a1;
    *(_QWORD *)a1 = 0;
    if (v10)
      operator delete(v10);
    *(_QWORD *)(a1 + 8) = 0;
  }
}

unsigned __int16 *sub_351B8(_QWORD *a1, uint64_t *a2)
{
  unsigned __int16 *v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = (unsigned __int16 *)operator new(0x18uLL);
  v5 = *a2;
  *((_QWORD *)v4 + 2) = *a2;
  *(_QWORD *)v4 = 0;
  *((_QWORD *)v4 + 1) = (unsigned __int16)v5;
  v6 = (_QWORD *)sub_34D30((uint64_t)a1, (unsigned __int16)v5, v4 + 8);
  sub_34E84(a1, v4, v6);
  return v4;
}

void sub_3521C(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t *sub_35230(_QWORD *a1, unsigned __int16 *a2)
{
  uint64_t *result;

  result = (uint64_t *)sub_1529C(a1, a2);
  if (result)
  {
    sub_35264(a1, result);
    return (_QWORD *)(&dword_0 + 1);
  }
  return result;
}

uint64_t sub_35264(_QWORD *a1, uint64_t *a2)
{
  uint64_t v2;
  void *v3;
  void *__p;

  v2 = *a2;
  sub_352A4(a1, a2, (uint64_t)&__p);
  v3 = __p;
  __p = 0;
  if (v3)
    operator delete(v3);
  return v2;
}

_QWORD *sub_352A4@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  int8x8_t v3;
  unint64_t v4;
  uint8x8_t v5;
  _QWORD *v6;
  _QWORD *v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;

  v3 = (int8x8_t)result[1];
  v4 = a2[1];
  v5 = (uint8x8_t)vcnt_s8(v3);
  v5.i16[0] = vaddlv_u8(v5);
  if (v5.u32[0] > 1uLL)
  {
    if (v4 >= *(_QWORD *)&v3)
      v4 %= *(_QWORD *)&v3;
  }
  else
  {
    v4 &= *(_QWORD *)&v3 - 1;
  }
  v6 = *(_QWORD **)(*result + 8 * v4);
  do
  {
    v7 = v6;
    v6 = (_QWORD *)*v6;
  }
  while (v6 != a2);
  if (v7 == result + 2)
    goto LABEL_18;
  v8 = v7[1];
  if (v5.u32[0] > 1uLL)
  {
    if (v8 >= *(_QWORD *)&v3)
      v8 %= *(_QWORD *)&v3;
  }
  else
  {
    v8 &= *(_QWORD *)&v3 - 1;
  }
  if (v8 != v4)
  {
LABEL_18:
    if (!*a2)
      goto LABEL_19;
    v9 = *(_QWORD *)(*a2 + 8);
    if (v5.u32[0] > 1uLL)
    {
      if (v9 >= *(_QWORD *)&v3)
        v9 %= *(_QWORD *)&v3;
    }
    else
    {
      v9 &= *(_QWORD *)&v3 - 1;
    }
    if (v9 != v4)
LABEL_19:
      *(_QWORD *)(*result + 8 * v4) = 0;
  }
  v10 = *a2;
  if (*a2)
  {
    v11 = *(_QWORD *)(v10 + 8);
    if (v5.u32[0] > 1uLL)
    {
      if (v11 >= *(_QWORD *)&v3)
        v11 %= *(_QWORD *)&v3;
    }
    else
    {
      v11 &= *(_QWORD *)&v3 - 1;
    }
    if (v11 != v4)
    {
      *(_QWORD *)(*result + 8 * v11) = v7;
      v10 = *a2;
    }
  }
  *v7 = v10;
  *a2 = 0;
  --result[3];
  *(_QWORD *)a3 = a2;
  *(_QWORD *)(a3 + 8) = result + 2;
  *(_BYTE *)(a3 + 16) = 1;
  return result;
}

_QWORD *sub_353D8(uint64_t a1, unsigned __int16 *a2, uint64_t a3, _WORD **a4)
{
  unint64_t v4;
  unint64_t v7;
  unint64_t v8;
  uint8x8_t v9;
  void **v10;
  _QWORD *v11;
  unint64_t v12;
  float v13;
  float v14;
  _BOOL8 v15;
  unint64_t v16;
  unint64_t v17;
  size_t v18;
  uint64_t v19;
  _QWORD *v20;
  unint64_t v21;

  v7 = *a2;
  v8 = *(_QWORD *)(a1 + 8);
  if (v8)
  {
    v9 = (uint8x8_t)vcnt_s8((int8x8_t)v8);
    v9.i16[0] = vaddlv_u8(v9);
    if (v9.u32[0] > 1uLL)
    {
      v4 = *a2;
      if (v8 <= v7)
        v4 = v7 % v8;
    }
    else
    {
      v4 = ((_DWORD)v8 - 1) & v7;
    }
    v10 = *(void ***)(*(_QWORD *)a1 + 8 * v4);
    if (v10)
    {
      v11 = *v10;
      if (*v10)
      {
        do
        {
          v12 = v11[1];
          if (v12 == v7)
          {
            if (*((unsigned __int16 *)v11 + 8) == (_DWORD)v7)
              return v11;
          }
          else
          {
            if (v9.u32[0] > 1uLL)
            {
              if (v12 >= v8)
                v12 %= v8;
            }
            else
            {
              v12 &= v8 - 1;
            }
            if (v12 != v4)
              break;
          }
          v11 = (_QWORD *)*v11;
        }
        while (v11);
      }
    }
  }
  v11 = operator new(0x18uLL);
  *v11 = 0;
  v11[1] = v7;
  *((_WORD *)v11 + 8) = **a4;
  *((_DWORD *)v11 + 5) = 0;
  v13 = (float)(unint64_t)(*(_QWORD *)(a1 + 24) + 1);
  v14 = *(float *)(a1 + 32);
  if (!v8 || (float)(v14 * (float)v8) < v13)
  {
    v15 = 1;
    if (v8 >= 3)
      v15 = (v8 & (v8 - 1)) != 0;
    v16 = v15 | (2 * v8);
    v17 = vcvtps_u32_f32(v13 / v14);
    if (v16 <= v17)
      v18 = v17;
    else
      v18 = v16;
    sub_6A20(a1, v18);
    v8 = *(_QWORD *)(a1 + 8);
    if ((v8 & (v8 - 1)) != 0)
    {
      if (v8 <= v7)
        v4 = v7 % v8;
      else
        v4 = v7;
    }
    else
    {
      v4 = ((_DWORD)v8 - 1) & v7;
    }
  }
  v19 = *(_QWORD *)a1;
  v20 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v4);
  if (v20)
  {
    *v11 = *v20;
LABEL_38:
    *v20 = v11;
    goto LABEL_39;
  }
  *v11 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v11;
  *(_QWORD *)(v19 + 8 * v4) = a1 + 16;
  if (*v11)
  {
    v21 = *(_QWORD *)(*v11 + 8);
    if ((v8 & (v8 - 1)) != 0)
    {
      if (v21 >= v8)
        v21 %= v8;
    }
    else
    {
      v21 &= v8 - 1;
    }
    v20 = (_QWORD *)(*(_QWORD *)a1 + 8 * v21);
    goto LABEL_38;
  }
LABEL_39:
  ++*(_QWORD *)(a1 + 24);
  return v11;
}

void sub_355E8(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

void sub_355FC(_QWORD *a1, _QWORD *a2, _QWORD *a3)
{
  _QWORD *v4;
  uint64_t v6;
  uint64_t i;
  id *v8;
  BOOL v9;
  id *v10;
  unint64_t v11;
  _QWORD *v12;
  BOOL v13;
  _QWORD v14[2];

  v4 = a2;
  v6 = a1[1];
  if (v6)
  {
    for (i = 0; i != v6; ++i)
      *(_QWORD *)(*a1 + 8 * i) = 0;
    v8 = (id *)a1[2];
    a1[2] = 0;
    a1[3] = 0;
    if (v8)
      v9 = a2 == a3;
    else
      v9 = 1;
    if (v9)
    {
      v10 = v8;
    }
    else
    {
      do
      {
        v14[0] = v8 + 2;
        v14[1] = v8 + 3;
        sub_35758((uint64_t)v14, (uint64_t)(v4 + 2));
        v10 = (id *)*v8;
        v11 = *((unsigned __int16 *)v8 + 8);
        v8[1] = (id)v11;
        v12 = (_QWORD *)sub_34D30((uint64_t)a1, v11, (unsigned __int16 *)v8 + 8);
        sub_34E84(a1, v8, v12);
        v4 = (_QWORD *)*v4;
        if (v10)
          v13 = v4 == a3;
        else
          v13 = 1;
        v8 = v10;
      }
      while (!v13);
    }
    sub_3571C((uint64_t)a1, v10);
  }
  while (v4 != a3)
  {
    sub_357AC(a1, (uint64_t)(v4 + 2));
    v4 = (_QWORD *)*v4;
  }
}

void sub_356F0(void *a1)
{
  uint64_t v1;
  id *v2;

  __cxa_begin_catch(a1);
  sub_3571C(v1, v2);
  __cxa_rethrow();
}

void sub_35708(_Unwind_Exception *a1)
{
  __cxa_end_catch();
  _Unwind_Resume(a1);
}

void sub_3571C(uint64_t a1, id *a2)
{
  id *v2;
  id *v3;

  if (a2)
  {
    v2 = a2;
    do
    {
      v3 = (id *)*v2;

      operator delete(v2);
      v2 = v3;
    }
    while (v3);
  }
}

uint64_t sub_35758(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a1 + 8);
  **(_WORD **)a1 = *(_WORD *)a2;
  *(_DWORD *)v4 = *(_DWORD *)(a2 + 8);
  objc_storeStrong((id *)(v4 + 8), *(id *)(a2 + 16));
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(a2 + 24);
  return a1;
}

_QWORD *sub_357AC(_QWORD *a1, uint64_t a2)
{
  _QWORD *v3;
  unint64_t v4;
  unsigned __int16 *v5;
  _QWORD *v6;
  _QWORD v8[3];

  sub_35828((uint64_t)a1, a2, (uint64_t)v8);
  v3 = (_QWORD *)v8[0];
  v5 = (unsigned __int16 *)(v8[0] + 16);
  v4 = *(unsigned __int16 *)(v8[0] + 16);
  *(_QWORD *)(v8[0] + 8) = v4;
  v6 = (_QWORD *)sub_34D30((uint64_t)a1, v4, v5);
  sub_34E84(a1, v3, v6);
  return v3;
}

void sub_35804(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id *a10, uint64_t a11)
{
  if (a10)
    sub_35898((uint64_t)&a11, a10);
  _Unwind_Resume(exception_object);
}

id sub_35828@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  _QWORD *v6;
  id result;
  uint64_t v8;

  v5 = a1 + 16;
  v6 = operator new(0x30uLL);
  *(_QWORD *)a3 = v6;
  *(_QWORD *)(a3 + 8) = v5;
  *v6 = 0;
  v6[1] = 0;
  *((_WORD *)v6 + 8) = *(_WORD *)a2;
  *((_DWORD *)v6 + 6) = *(_DWORD *)(a2 + 8);
  result = *(id *)(a2 + 16);
  v8 = *(_QWORD *)(a2 + 24);
  v6[4] = result;
  v6[5] = v8;
  *(_BYTE *)(a3 + 16) = 1;
  v6[1] = *((unsigned __int16 *)v6 + 8);
  return result;
}

void sub_35898(uint64_t a1, id *a2)
{
  if (*(_BYTE *)(a1 + 8))
  {

  }
  else if (!a2)
  {
    return;
  }
  operator delete(a2);
}

uint64_t sub_358DC(uint64_t a1)
{
  void *v2;

  sub_3571C(a1, *(id **)(a1 + 16));
  v2 = *(void **)a1;
  *(_QWORD *)a1 = 0;
  if (v2)
    operator delete(v2);
  return a1;
}

_QWORD *sub_35914(uint64_t a1, unsigned __int16 *a2, uint64_t a3, _WORD **a4)
{
  unint64_t v4;
  unint64_t v7;
  unint64_t v8;
  uint8x8_t v9;
  void **v10;
  _QWORD *v11;
  unint64_t v12;
  _QWORD *v13;
  float v14;
  float v15;
  _BOOL8 v16;
  unint64_t v17;
  unint64_t v18;
  size_t v19;
  uint64_t v20;
  _QWORD *v21;
  unint64_t v22;

  v7 = *a2;
  v8 = *(_QWORD *)(a1 + 8);
  if (v8)
  {
    v9 = (uint8x8_t)vcnt_s8((int8x8_t)v8);
    v9.i16[0] = vaddlv_u8(v9);
    if (v9.u32[0] > 1uLL)
    {
      v4 = *a2;
      if (v8 <= v7)
        v4 = v7 % v8;
    }
    else
    {
      v4 = ((_DWORD)v8 - 1) & v7;
    }
    v10 = *(void ***)(*(_QWORD *)a1 + 8 * v4);
    if (v10)
    {
      v11 = *v10;
      if (*v10)
      {
        do
        {
          v12 = v11[1];
          if (v12 == v7)
          {
            if (*((unsigned __int16 *)v11 + 8) == (_DWORD)v7)
              return v11;
          }
          else
          {
            if (v9.u32[0] > 1uLL)
            {
              if (v12 >= v8)
                v12 %= v8;
            }
            else
            {
              v12 &= v8 - 1;
            }
            if (v12 != v4)
              break;
          }
          v11 = (_QWORD *)*v11;
        }
        while (v11);
      }
    }
  }
  v13 = (_QWORD *)(a1 + 16);
  v11 = operator new(0x30uLL);
  *v11 = 0;
  v11[1] = v7;
  *((_WORD *)v11 + 8) = **a4;
  *((_DWORD *)v11 + 6) = 0;
  v11[4] = 0;
  v14 = (float)(unint64_t)(*(_QWORD *)(a1 + 24) + 1);
  v15 = *(float *)(a1 + 32);
  if (!v8 || (float)(v15 * (float)v8) < v14)
  {
    v16 = 1;
    if (v8 >= 3)
      v16 = (v8 & (v8 - 1)) != 0;
    v17 = v16 | (2 * v8);
    v18 = vcvtps_u32_f32(v14 / v15);
    if (v17 <= v18)
      v19 = v18;
    else
      v19 = v17;
    sub_6A20(a1, v19);
    v8 = *(_QWORD *)(a1 + 8);
    if ((v8 & (v8 - 1)) != 0)
    {
      if (v8 <= v7)
        v4 = v7 % v8;
      else
        v4 = v7;
    }
    else
    {
      v4 = ((_DWORD)v8 - 1) & v7;
    }
  }
  v20 = *(_QWORD *)a1;
  v21 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v4);
  if (v21)
  {
    *v11 = *v21;
LABEL_38:
    *v21 = v11;
    goto LABEL_39;
  }
  *v11 = *v13;
  *v13 = v11;
  *(_QWORD *)(v20 + 8 * v4) = v13;
  if (*v11)
  {
    v22 = *(_QWORD *)(*v11 + 8);
    if ((v8 & (v8 - 1)) != 0)
    {
      if (v22 >= v8)
        v22 %= v8;
    }
    else
    {
      v22 &= v8 - 1;
    }
    v21 = (_QWORD *)(*(_QWORD *)a1 + 8 * v22);
    goto LABEL_38;
  }
LABEL_39:
  ++*(_QWORD *)(a1 + 24);
  return v11;
}

void sub_35B4C(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  sub_35898(v2, v1);
  _Unwind_Resume(a1);
}

uint64_t _TUIDeviceHasInternalInstall()
{
  if (qword_2CB2B0 != -1)
    dispatch_once(&qword_2CB2B0, &stru_23E640);
  return byte_2CB2A8;
}

void sub_35BA8(id a1)
{
  byte_2CB2A8 = MGGetBoolAnswer(CFSTR("apple-internal-install"));
}

uint64_t _TUIDeviceHasOLEDDisplay()
{
  return MGGetBoolAnswer(CFSTR("noqTy5fUbyK03UHxWigBBQ"));
}

void sub_363D8(id a1, TUIModel *a2, unint64_t a3, BOOL *a4)
{
  -[TUIModel setParentModel:](a2, "setParentModel:", 0, a4);
}

id sub_363E4(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "setParentModel:", *(_QWORD *)(a1 + 32));
}

id sub_3647C(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "appendLayoutModelsToArray:", *(_QWORD *)(a1 + 32));
}

id sub_36504(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "appendLayoutModelsToArray:", *(_QWORD *)(a1 + 32));
}

void sub_365B4(uint64_t a1, void *a2)
{
  id v3;

  v3 = a2;
  if ((objc_opt_respondsToSelector(v3, "appendObjectsWithProtocol:toArray:") & 1) != 0)
    objc_msgSend(v3, "appendObjectsWithProtocol:toArray:", *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40));

}

id sub_366BC(uint64_t a1)
{
  id WeakRetained;
  id v3;

  WeakRetained = objc_loadWeakRetained((id *)(*(_QWORD *)(a1 + 32) + 56));
  v3 = objc_msgSend(WeakRetained, "invalidateInstantiation:", *(_QWORD *)(a1 + 32));

  return v3;
}

void sub_36778(uint64_t a1, void *a2)
{
  _BOOL4 v3;
  uint64_t v4;
  id v5;
  id v6;

  v6 = a2;
  v3 = TUIEnumeratorNotNil(*(_DWORD *)(*(_QWORD *)(a1 + 32) + 8));
  v4 = *(_QWORD *)(a1 + 32);
  if (v3)
  {
    v5 = objc_alloc_init(*(Class *)(v4 + 72));
    objc_msgSend(*(id *)(a1 + 40), "evaluateEnumerator:withObject:nodes:containingObject:builder:", *(unsigned int *)(*(_QWORD *)(a1 + 32) + 8), v6, *(_QWORD *)(*(_QWORD *)(a1 + 32) + 12), *(_QWORD *)(a1 + 32), v5);
LABEL_5:
    objc_msgSend(v5, "finalizeModelsWithParent:context:", *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40));

    goto LABEL_6;
  }
  if (TUINameIsValid(*(_DWORD *)(v4 + 20)))
  {
    v5 = objc_alloc_init(*(Class *)(*(_QWORD *)(a1 + 32) + 72));
    objc_msgSend(*(id *)(a1 + 40), "evaluateBinding:withObject:nodes:containingObject:builder:", *(unsigned int *)(*(_QWORD *)(a1 + 32) + 20), v6, *(_QWORD *)(*(_QWORD *)(a1 + 32) + 12), *(_QWORD *)(a1 + 32), v5);
    goto LABEL_5;
  }
LABEL_6:

}

void sub_368EC(uint64_t a1)
{
  char v2;
  char v3;
  unsigned __int8 v4;
  void *v5;
  uint64_t v6;
  void *v7;
  _QWORD v8[5];
  id v9;

  v2 = 0;
  do
  {
    v3 = v2;
    v4 = objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 32), "applyUpdatesForTransactionGroup:", *(_QWORD *)(a1 + 40));
    v2 = 1;
  }
  while ((v4 & 1) != 0);
  if ((v3 & 1) != 0)
  {
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 48), "statsCollector"));
    objc_msgSend(v5, "recordEvent:", 19);

    v6 = *(_QWORD *)(a1 + 32);
    v7 = *(void **)(v6 + 32);
    v8[0] = _NSConcreteStackBlock;
    v8[1] = 3221225472;
    v8[2] = sub_369A4;
    v8[3] = &unk_23E6B0;
    v8[4] = v6;
    v9 = *(id *)(a1 + 48);
    objc_msgSend(v7, "valueWithBlock:", v8);

  }
}

void sub_369A4(uint64_t a1, void *a2)
{
  _BOOL4 v3;
  uint64_t v4;
  id v5;
  id v6;

  v6 = a2;
  v3 = TUIEnumeratorNotNil(*(_DWORD *)(*(_QWORD *)(a1 + 32) + 8));
  v4 = *(_QWORD *)(a1 + 32);
  if (v3)
  {
    v5 = objc_alloc_init(*(Class *)(v4 + 72));
    objc_msgSend(*(id *)(a1 + 40), "evaluateEnumerator:withObject:nodes:containingObject:builder:", *(unsigned int *)(*(_QWORD *)(a1 + 32) + 8), v6, *(_QWORD *)(*(_QWORD *)(a1 + 32) + 12), *(_QWORD *)(a1 + 32), v5);
LABEL_5:
    objc_msgSend(v5, "finalizeModelsWithParent:context:", *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40));

    goto LABEL_6;
  }
  if (TUINameIsValid(*(_DWORD *)(v4 + 20)))
  {
    v5 = objc_alloc_init(*(Class *)(*(_QWORD *)(a1 + 32) + 72));
    objc_msgSend(*(id *)(a1 + 40), "evaluateBinding:withObject:nodes:containingObject:builder:", *(unsigned int *)(*(_QWORD *)(a1 + 32) + 20), v6, *(_QWORD *)(*(_QWORD *)(a1 + 32) + 12), *(_QWORD *)(a1 + 32), v5);
    goto LABEL_5;
  }
LABEL_6:

}

void sub_36B94(id a1)
{
  void *v1;
  uint64_t v2;
  void *v3;
  _QWORD v4[3];

  v4[0] = CFSTR("kind");
  v4[1] = CFSTR("instance");
  v4[2] = CFSTR("parameters");
  v1 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", v4, 3));
  v2 = objc_claimAutoreleasedReturnValue(+[TUIAttributeSet setWithArray:](TUIAttributeSet, "setWithArray:", v1));
  v3 = (void *)qword_2CB2B8;
  qword_2CB2B8 = v2;

}

void sub_36D1C(id a1)
{
  void *v1;
  uint64_t v2;
  void *v3;
  const __CFString *v4;

  v4 = CFSTR("binding");
  v1 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v4, 1));
  v2 = objc_claimAutoreleasedReturnValue(+[TUIAttributeSet setWithArray:](TUIAttributeSet, "setWithArray:", v1));
  v3 = (void *)qword_2CB2C8;
  qword_2CB2C8 = v2;

}

uint64_t TUIShouldStopInDebugger()
{
  size_t v2;
  int v3[2];
  int v4;
  pid_t v5;
  _OWORD v6[2];
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;

  if (!TUIGrantDebuggerPermissionToStopExecution)
    return 0;
  if (qword_2CB2E0 != -1)
    dispatch_once(&qword_2CB2E0, &stru_23E710);
  if (byte_2CB2D8 && TUIForceUnitTestsToHaltDebugger == 0)
    return 0;
  v35 = 0u;
  v36 = 0u;
  v33 = 0u;
  v34 = 0u;
  v31 = 0u;
  v32 = 0u;
  v29 = 0u;
  v30 = 0u;
  v27 = 0u;
  v28 = 0u;
  v25 = 0u;
  v26 = 0u;
  v23 = 0u;
  v24 = 0u;
  v21 = 0u;
  v22 = 0u;
  v19 = 0u;
  v20 = 0u;
  v17 = 0u;
  v18 = 0u;
  v15 = 0u;
  v16 = 0u;
  v13 = 0u;
  v14 = 0u;
  v12 = 0u;
  v10 = 0u;
  v11 = 0u;
  v8 = 0u;
  v9 = 0u;
  v7 = 0u;
  memset(v6, 0, sizeof(v6));
  *(_QWORD *)v3 = 0xE00000001;
  v4 = 1;
  v5 = getpid();
  v2 = 648;
  sysctl(v3, 4u, v6, &v2, 0, 0);
  return (v7 >> 11) & 1;
}

uint64_t TUIIsRunningTests()
{
  if (qword_2CB2E0 != -1)
    dispatch_once(&qword_2CB2E0, &stru_23E710);
  return byte_2CB2D8;
}

uint64_t TUIHaltDebugger()
{
  uint64_t result;

  result = TUIShouldStopInDebugger();
  if ((_DWORD)result)
    __break(0);
  return result;
}

void sub_3712C(id a1)
{
  void *v1;
  void *v2;
  id v3;

  v1 = (void *)objc_claimAutoreleasedReturnValue(+[NSProcessInfo processInfo](NSProcessInfo, "processInfo"));
  v3 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v1, "environment"));

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("XCTestConfigurationFilePath")));
  byte_2CB2D8 = v2 != 0;

}

void TUIReportAssertionFailureWithMessage(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  id v13;
  __CFString *v14;
  void *v15;
  __CFString *v16;
  void *v17;
  uint8_t buf[4];
  uint64_t v19;
  __int16 v20;
  uint64_t v21;
  __int16 v22;
  __CFString *v23;
  __int16 v24;
  void *v25;
  __int16 v26;
  __CFString *v27;

  v13 = a5;
  if (objc_msgSend(v13, "length"))
  {
    v14 = (__CFString *)objc_msgSend(objc_alloc((Class)NSString), "initWithFormat:arguments:", v13, &a9);
    if (!a1)
      goto LABEL_6;
LABEL_5:
    v15 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", a1, 1));
    v16 = (__CFString *)objc_claimAutoreleasedReturnValue(objc_msgSend(v15, "lastPathComponent"));

    if (v16)
      goto LABEL_7;
    goto LABEL_6;
  }
  v14 = &stru_243BF0;
  if (a1)
    goto LABEL_5;
LABEL_6:
  v16 = &stru_243BF0;
LABEL_7:
  if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
  {
    v17 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInt:](NSNumber, "numberWithInt:", a2));
    *(_DWORD *)buf = 136316162;
    v19 = a4;
    v20 = 2080;
    v21 = a3;
    v22 = 2112;
    v23 = v16;
    v24 = 2112;
    v25 = v17;
    v26 = 2112;
    v27 = v14;
    _os_log_error_impl(&dword_0, (os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR, "*** Assertion failure: %s in %s - %@:%@ %@", buf, 0x34u);

  }
}

void TUICrashFinalThrow(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  id v9;
  const __CFString *v10;
  id v11;

  v9 = a1;
  if (objc_msgSend(v9, "length"))
    v10 = (const __CFString *)objc_msgSend(objc_alloc((Class)NSString), "initWithFormat:arguments:", v9, &a9);
  else
    v10 = &stru_243BF0;
  v11 = (id)objc_claimAutoreleasedReturnValue(+[NSException exceptionWithName:reason:userInfo:](NSException, "exceptionWithName:reason:userInfo:", CFSTR("TUICrash"), v10, 0));
  objc_exception_throw(v11);
}

uint64_t sub_377F8(uint64_t a1, void *a2)
{
  id v3;
  uint64_t v4;
  _QWORD v6[5];

  v3 = a2;
  if (objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 24), "optimizeUpdatesForTransactionGroup:", v3)
    && objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 24), "applyUpdatesForTransactionGroup:", v3))
  {
    v6[0] = _NSConcreteStackBlock;
    v6[1] = 3221225472;
    v6[2] = sub_378A0;
    v6[3] = &unk_23E738;
    v6[4] = *(_QWORD *)(a1 + 32);
    objc_msgSend(v3, "appendUpdateBlock:", v6);
    v4 = 1;
  }
  else
  {
    v4 = 0;
  }

  return v4;
}

void sub_378A0(uint64_t a1)
{
  void *v2;
  void *v3;
  id v4;
  uint64_t v5;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 16), "value"));
  if (objc_msgSend(v2, "isObject"))
  {
    v5 = *(_QWORD *)(a1 + 32);
    v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v5, 1));
    v4 = objc_msgSend(v2, "callWithArguments:", v3);

  }
}

void sub_37A48(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_37A60(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_37A70(uint64_t a1)
{

}

void sub_37A78(uint64_t a1, void *a2)
{
  objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40), a2);
}

void sub_37B98(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_37BB0(uint64_t a1, void *a2)
{
  objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40), a2);
}

void sub_37E20(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  id v5;
  _QWORD v6[4];
  id v7;
  __int128 v8;
  uint64_t v9;

  v3 = a2;
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 40), "hoverRegions"));
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  v6[2] = sub_37ED4;
  v6[3] = &unk_23E788;
  v8 = *(_OWORD *)(a1 + 40);
  v9 = *(_QWORD *)(a1 + 56);
  v7 = v3;
  v5 = v3;
  objc_msgSend(v4, "enumerateKeysAndObjectsUsingBlock:", v6);

}

void sub_37ED4(uint64_t a1, void *a2, void *a3)
{
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  id v12;

  v12 = a2;
  objc_msgSend(a3, "bounds");
  v9 = v6;
  v10 = v7;
  v11 = v8;
  if (*(_BYTE *)(a1 + 40))
    v5 = *(double *)(a1 + 48) - CGRectGetMidX(*(CGRect *)&v5) + v7 * -0.5;
  objc_msgSend(*(id *)(a1 + 32), "addRegionWithKey:rect:", v12, v5, v9, v10, v11);

}

void sub_38154(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 80), 8);
  _Unwind_Resume(a1);
}

void sub_3816C(uint64_t a1, void *a2, uint64_t a3, _BYTE *a4)
{
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  id v11;

  v11 = a2;
  objc_msgSend(*(id *)(a1 + 32), "convertPoint:toView:", v11, *(double *)(a1 + 56), *(double *)(a1 + 64));
  v7 = v6;
  v9 = v8;
  if ((objc_msgSend(v11, "isHidden") & 1) == 0)
  {
    objc_msgSend(v11, "alpha");
    if (v10 > 0.0
      && objc_msgSend(v11, "isUserInteractionEnabled")
      && objc_msgSend(v11, "pointInside:withEvent:", *(_QWORD *)(a1 + 40), v7, v9))
    {
      *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24) = 1;
      *a4 = 1;
    }
  }

}

id sub_38DAC(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "appendLayoutModelsToArray:", *(_QWORD *)(a1 + 32));
}

void sub_393D0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_393E0(uint64_t a1, void *a2)
{
  void *v4;
  char *v5;
  int *v6;
  id v7;

  v7 = a2;
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "box"));
  v5 = (char *)objc_msgSend(v4, "role");

  if (v5 == (_BYTE *)&dword_0 + 3)
  {
    objc_msgSend(v7, "setHidden:", 0);
    v6 = &OBJC_IVAR___TUIHFadeLayout__decorator;
  }
  else
  {
    if (v5)
    {
      objc_msgSend(v7, "setHidden:", 1);
      goto LABEL_7;
    }
    objc_msgSend(v7, "setHidden:", 0);
    v6 = &OBJC_IVAR___TUIHFadeLayout__content;
  }
  objc_storeStrong((id *)(*(_QWORD *)(a1 + 32) + *v6), a2);
LABEL_7:

}

void sub_39490(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_395E0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_3982C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

double sub_39850(uint64_t a1)
{
  id *v2;
  char v3;
  double v4;
  double v5;
  double v6;
  id *v7;
  void *v8;
  id v9;
  id v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  void *v18;
  id v19;
  uint64_t v20;
  id v21;
  double v22;

  v2 = *(id **)a1;
  if (*(_QWORD *)(a1 + 8) == *(_QWORD *)a1)
  {
    v3 = 0;
    v6 = 0.0;
    v7 = *(id **)a1;
    v5 = 0.0;
    v4 = 0.0;
  }
  else
  {
    v3 = 0;
    v4 = 0.0;
    v5 = 0.0;
    v6 = 0.0;
    v7 = *(id **)a1;
    do
    {
      v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*v7, "box"));
      v9 = objc_msgSend(v8, "valign");

      v10 = *v7;
      if ((unint64_t)v9 > 1)
      {
        objc_msgSend(v10, "computedNaturalSize");
        if (v6 < v16)
          v6 = v16;
      }
      else
      {
        objc_msgSend(v10, "computedHeightAbovePivot");
        if (v4 < v11)
          v4 = v11;
        objc_msgSend(*v7, "computedNaturalSize");
        v13 = v12;
        objc_msgSend(*v7, "computedHeightAbovePivot");
        v15 = v13 - v14;
        if (v5 < v15)
          v5 = v15;
        v3 = 1;
      }
      ++v7;
    }
    while (v7 != *(id **)(a1 + 8));
    v2 = *(id **)a1;
  }
  if (v6 >= v5 + v4)
    v17 = v6;
  else
    v17 = v5 + v4;
  if (v7 != v2)
  {
    do
    {
      v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*v2, "box"));
      v19 = objc_msgSend(v18, "valign");

      if ((unint64_t)v19 <= 1)
        v20 = 1;
      else
        v20 = (uint64_t)v19;
      if (v20 == 3)
        goto LABEL_27;
      if (v20 == 2)
        goto LABEL_28;
      if (v20 != 1)
LABEL_27:
        objc_msgSend(*v2, "computedNaturalSize");
      else
        objc_msgSend(*v2, "computedHeightAbovePivot");
LABEL_28:
      objc_msgSend(*v2, "computedOrigin");
      v21 = *v2++;
      objc_msgSend(v21, "setComputedOrigin:");
    }
    while (v2 != *(id **)(a1 + 8));
  }
  if ((v3 & 1) != 0)
    v22 = v4 + (v17 - (v5 + v4)) * 0.5;
  else
    v22 = v17;
  *(double *)(a1 + 16) = v22;
  return v17;
}

void sub_39A04(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_39BF0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void *sub_39CC4(uint64_t a1, unint64_t a2)
{
  if (a2 >> 61)
    sub_69F8();
  return operator new(8 * a2);
}

void sub_3A0D0(id a1)
{
  TUIImagePrefetchControllerManager *v1;
  void *v2;

  v1 = objc_alloc_init(TUIImagePrefetchControllerManager);
  v2 = (void *)qword_2CB2E8;
  qword_2CB2E8 = (uint64_t)v1;

}

id sub_3A240(uint64_t a1)
{
  return objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 24), "addObject:", *(_QWORD *)(a1 + 40));
}

id sub_3A338(uint64_t a1)
{
  return objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 24), "removeObject:", *(_QWORD *)(a1 + 40));
}

void sub_3A344(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  NSObject *v3;
  _QWORD v4[5];
  id v5;

  v1 = *(_QWORD *)(a1 + 32);
  v2 = *(void **)(a1 + 40);
  v3 = *(NSObject **)(v1 + 32);
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_3A3B8;
  v4[3] = &unk_23D7D0;
  v4[4] = v1;
  v5 = v2;
  dispatch_sync(v3, v4);

}

void sub_3A3B8(uint64_t a1)
{
  void *v2;
  id v3;
  id v4;
  uint64_t v5;
  void *i;
  uint64_t v7;
  void *v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  _BYTE v13[128];

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 16), "allKeys"));
  v9 = 0u;
  v10 = 0u;
  v11 = 0u;
  v12 = 0u;
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v9, v13, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v10;
    do
    {
      for (i = 0; i != v4; i = (char *)i + 1)
      {
        if (*(_QWORD *)v10 != v5)
          objc_enumerationMutation(v2);
        v7 = *(_QWORD *)(*((_QWORD *)&v9 + 1) + 8 * (_QWORD)i);
        v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 16), "objectForKeyedSubscript:", v7));
        if (objc_msgSend(v8, "stopTrackingController:", *(_QWORD *)(a1 + 40)))
          objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 16), "removeObjectForKey:", v7);

      }
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v9, v13, 16);
    }
    while (v4);
  }

}

uint64_t sub_3A5BC(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_3A5CC(uint64_t a1)
{

}

void sub_3A5D4(_QWORD *a1)
{
  id v2;
  id v3;
  id v4;
  uint64_t v5;
  void *i;
  void *v7;
  void *v8;
  void *v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  _BYTE v14[128];

  v12 = 0u;
  v13 = 0u;
  v10 = 0u;
  v11 = 0u;
  v2 = *(id *)(a1[4] + 24);
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v10, v14, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v11;
    while (2)
    {
      for (i = 0; i != v4; i = (char *)i + 1)
      {
        if (*(_QWORD *)v11 != v5)
          objc_enumerationMutation(v2);
        v7 = *(void **)(*((_QWORD *)&v10 + 1) + 8 * (_QWORD)i);
        v8 = (void *)a1[5];
        v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "controllerID", (_QWORD)v10));
        LODWORD(v8) = objc_msgSend(v8, "isEqual:", v9);

        if ((_DWORD)v8)
        {
          objc_storeStrong((id *)(*(_QWORD *)(a1[6] + 8) + 40), v7);
          goto LABEL_11;
        }
      }
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v10, v14, 16);
      if (v4)
        continue;
      break;
    }
  }
LABEL_11:

}

void sub_3A7DC(uint64_t a1)
{
  void *v2;
  id v3;
  uint64_t v4;
  void *i;
  void *v6;
  void *v7;
  uint64_t v8;
  NSObject *v9;
  id v10;
  void *v11;
  void *v12;
  float v13;
  void *v14;
  void *v15;
  TUIResourceLoaderTaskTracker *v16;
  uint64_t v17;
  NSObject *v18;
  TUIResourceLoaderTaskTracker *v19;
  void *v20;
  void *v21;
  id obj;
  _QWORD v23[5];
  TUIResourceLoaderTaskTracker *v24;
  id v25;
  _QWORD v26[5];
  _QWORD block[5];
  id v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t (*v33)(uint64_t, uint64_t);
  void (*v34)(uint64_t);
  id v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  _BYTE v40[128];

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_controllerWithID:", *(_QWORD *)(a1 + 40)));
  v38 = 0u;
  v39 = 0u;
  v36 = 0u;
  v37 = 0u;
  obj = *(id *)(a1 + 48);
  v3 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v36, v40, 16);
  if (v3)
  {
    v4 = *(_QWORD *)v37;
    v21 = v2;
    do
    {
      for (i = 0; i != v3; i = (char *)i + 1)
      {
        if (*(_QWORD *)v37 != v4)
          objc_enumerationMutation(obj);
        v6 = *(void **)(*((_QWORD *)&v36 + 1) + 8 * (_QWORD)i);
        v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "resource"));
        if (objc_msgSend(v7, "isFileURL"))
        {
          objc_msgSend(v2, "urlLoaded:", v7);
        }
        else
        {
          v30 = 0;
          v31 = &v30;
          v32 = 0x3032000000;
          v33 = sub_3A5BC;
          v34 = sub_3A5CC;
          v35 = 0;
          v8 = *(_QWORD *)(a1 + 32);
          v9 = *(NSObject **)(v8 + 32);
          block[0] = _NSConcreteStackBlock;
          block[1] = 3221225472;
          block[2] = sub_3AB38;
          block[3] = &unk_23E848;
          v29 = &v30;
          block[4] = v8;
          v10 = v7;
          v28 = v10;
          dispatch_sync(v9, block);
          v11 = (void *)v31[5];
          if (v11)
          {
            objc_msgSend(v6, "priority");
            objc_msgSend(v11, "updatePriorty:forController:", *(_QWORD *)(a1 + 40));
          }
          else
          {
            v12 = *(void **)(a1 + 56);
            objc_msgSend(v6, "priority");
            v26[0] = _NSConcreteStackBlock;
            v26[1] = 3221225472;
            v26[2] = sub_3AB74;
            v26[3] = &unk_23E870;
            v26[4] = *(_QWORD *)(a1 + 32);
            v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "resourceLoaderTaskWithURL:priority:completion:", v10, v26, v13));
            v15 = v14;
            if (v14 && (objc_msgSend(v14, "isLoaded") & 1) == 0)
            {
              v16 = objc_opt_new(TUIResourceLoaderTaskTracker);
              v17 = *(_QWORD *)(a1 + 32);
              v18 = *(NSObject **)(v17 + 32);
              v23[0] = _NSConcreteStackBlock;
              v23[1] = 3221225472;
              v23[2] = sub_3AE90;
              v23[3] = &unk_23E2C8;
              v23[4] = v17;
              v19 = v16;
              v24 = v19;
              v25 = v10;
              dispatch_sync(v18, v23);
              -[TUIResourceLoaderTaskTracker setResourceLoaderTask:](v19, "setResourceLoaderTask:", v15);
              objc_msgSend(v6, "priority");
              -[TUIResourceLoaderTaskTracker updatePriorty:forController:](v19, "updatePriorty:forController:", *(_QWORD *)(a1 + 40));
              v20 = (void *)objc_claimAutoreleasedReturnValue(-[TUIResourceLoaderTaskTracker resourceLoaderTask](v19, "resourceLoaderTask"));
              objc_msgSend(v20, "resume");

              v2 = v21;
            }
            else
            {
              objc_msgSend(v2, "urlLoaded:", v10);
            }

          }
          _Block_object_dispose(&v30, 8);

        }
      }
      v3 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v36, v40, 16);
    }
    while (v3);
  }

}

void sub_3AB10(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31)
{
  _Block_object_dispose(&a31, 8);
  _Unwind_Resume(a1);
}

void sub_3AB38(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v2 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1[4] + 16), "objectForKeyedSubscript:", a1[5]));
  v3 = *(_QWORD *)(a1[6] + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

void sub_3AB74(uint64_t a1, void *a2)
{
  id v3;
  uint64_t v4;
  NSObject *v5;
  id v6;
  _QWORD v7[4];
  id v8;
  uint64_t v9;

  v3 = a2;
  v4 = *(_QWORD *)(a1 + 32);
  v5 = *(NSObject **)(v4 + 8);
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  v7[2] = sub_3ABF4;
  v7[3] = &unk_23D7D0;
  v8 = v3;
  v9 = v4;
  v6 = v3;
  dispatch_async(v5, v7);

}

void sub_3ABF4(uint64_t a1)
{
  void *v1;
  uint64_t v3;
  NSObject *v4;
  id v5;
  id v6;
  uint64_t v7;
  void *v8;
  void *v9;
  void *v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  _QWORD block[5];
  id v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t (*v21)(uint64_t, uint64_t);
  void (*v22)(uint64_t);
  id v23;
  _BYTE v24[128];

  v1 = *(void **)(a1 + 32);
  if (v1)
  {
    v18 = 0;
    v19 = &v18;
    v20 = 0x3032000000;
    v21 = sub_3A5BC;
    v22 = sub_3A5CC;
    v23 = 0;
    v3 = *(_QWORD *)(a1 + 40);
    v4 = *(NSObject **)(v3 + 32);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_3ADE4;
    block[3] = &unk_23D7A8;
    block[4] = v3;
    v16 = v1;
    v17 = &v18;
    dispatch_sync(v4, block);
    v13 = 0u;
    v14 = 0u;
    v11 = 0u;
    v12 = 0u;
    v5 = (id)v19[5];
    v6 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v11, v24, 16);
    if (v6)
    {
      v7 = *(_QWORD *)v12;
      do
      {
        v8 = 0;
        do
        {
          if (*(_QWORD *)v12 != v7)
            objc_enumerationMutation(v5);
          v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "_controllerWithID:", *(_QWORD *)(*((_QWORD *)&v11 + 1) + 8 * (_QWORD)v8), (_QWORD)v11));
          v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "URL"));
          objc_msgSend(v9, "urlLoaded:", v10);

          v8 = (char *)v8 + 1;
        }
        while (v6 != v8);
        v6 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v11, v24, 16);
      }
      while (v6);
    }

    _Block_object_dispose(&v18, 8);
  }
}

void sub_3ADB8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, ...)
{
  va_list va;

  va_start(va, a16);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_3ADE4(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  id v5;
  uint64_t v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  id v11;

  v2 = *(void **)(*(_QWORD *)(a1 + 32) + 16);
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "URL"));
  v11 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "objectForKey:", v3));

  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "controllers"));
  v5 = objc_msgSend(v4, "copy");
  v6 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
  v7 = *(void **)(v6 + 40);
  *(_QWORD *)(v6 + 40) = v5;

  v8 = *(void **)(a1 + 40);
  v9 = *(void **)(*(_QWORD *)(a1 + 32) + 16);
  v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "URL"));
  objc_msgSend(v9, "removeObjectForKey:", v10);

}

id sub_3AE90(_QWORD *a1)
{
  return objc_msgSend(*(id *)(a1[4] + 16), "setObject:forKey:", a1[5], a1[6]);
}

void sub_3B1D0(uint64_t a1, void *a2, void *a3)
{
  void *v5;
  id v6;
  id v7;
  id v8;

  v5 = *(void **)(a1 + 32);
  v6 = a3;
  v7 = a2;
  v8 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "actionHandlerDelegate"));
  objc_msgSend(v8, "performDropWithSession:actionObject:behavior:", *(_QWORD *)(a1 + 40), v6, v7);

}

void sub_3B30C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_3B324(_QWORD *a1, void *a2, void *a3)
{
  void *v5;
  id v6;
  id v7;
  id v8;

  v5 = (void *)a1[4];
  v6 = a3;
  v7 = a2;
  v8 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "actionHandlerDelegate"));
  LOBYTE(v5) = objc_msgSend(v8, "canHandleDropSession:actionObject:behavior:", a1[5], v6, v7);

  *(_BYTE *)(*(_QWORD *)(a1[6] + 8) + 24) = (_BYTE)v5;
}

void sub_3BA44(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_3C08C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_3C17C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_3C200(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_3C2BC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_3C4B0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  v5 = v4;

  _Unwind_Resume(a1);
}

void sub_3C668(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_3C964(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_3C9CC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_3CAD4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_3CB5C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_3CBCC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_3CD5C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_3CF00(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_3CFB4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_3D05C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_3D168(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_3D2A0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  _Unwind_Resume(a1);
}

void sub_3D3B0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_3D818(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *a18)
{
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;

  _Unwind_Resume(a1);
}

void sub_3DB38(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;

  v9 = v3;

  _Unwind_Resume(a1);
}

void sub_3DD38(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_3DEAC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_3DF30(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_3DFF4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_3E060(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_3E0A8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_3E0F0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_3E138(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_3E17C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_3E218(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_3E2C8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

uint64_t TUI::Evaluation::ResolvedValue::isConvertibleToKind(TUI::Evaluation::ResolvedValue *this, int a2, TUI::Evaluation::Context *a3)
{
  int v3;
  _BOOL8 v4;
  id v8;
  void *v9;
  void *v10;
  id v11;
  void *v12;
  id v13;
  uint64_t v14;
  id v15;
  void *v16;
  void *v17;
  id v18;

  v3 = *(_DWORD *)this;
  if (*(_DWORD *)this == a2)
    return 1;
  v4 = 0;
  switch(a2)
  {
    case 1:
      if (v3 == 2)
        return 1;
      goto LABEL_13;
    case 2:
    case 5:
      if ((v3 - 1) < 2)
        return 1;
LABEL_13:
      if (v3 != 16)
        return 0;
      return _NSIsNSNumber(*((_QWORD *)this + 1));
    case 6:
      if (v3 == 7)
        return 1;
      goto LABEL_19;
    case 9:
      if ((v3 - 6) < 2)
        return 1;
      if (v3 != 16)
        return 0;
LABEL_19:
      v11 = TUI::Evaluation::ResolvedValue::_stringValue(this, a3);
      v12 = (void *)objc_claimAutoreleasedReturnValue(v11);
      v4 = v12 != 0;

      return v4;
    case 11:
      if (v3 == 6)
      {
        v15 = TUI::Symbol::Tab::string(*((TUI::Symbol::Tab **)a3 + 70), *((unsigned __int16 *)this + 8));
        v9 = (void *)objc_claimAutoreleasedReturnValue(v15);
        if (v9)
        {
          v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*((id *)a3 + 19), "colorRegistry"));
          v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v16, "colorWithName:", v9));
          v4 = v17 != 0;

        }
        else
        {
LABEL_26:
          v4 = 0;
        }
      }
      else
      {
        if (v3 == 9)
        {
          v18 = TUI::Evaluation::ResolvedValue::_stringValue(this, a3);
          v9 = (void *)objc_claimAutoreleasedReturnValue(v18);
          v10 = (void *)objc_claimAutoreleasedReturnValue(+[UIColor tui_colorWithHexString:](UIColor, "tui_colorWithHexString:", v9));
        }
        else
        {
          if (v3 != 16)
            return 0;
          if (sub_3FA58((uint64_t)a3 + 64, *((void **)this + 1)))
            return 1;
          v8 = TUI::Evaluation::ResolvedValue::_stringValue(this, a3);
          v9 = (void *)objc_claimAutoreleasedReturnValue(v8);
          v10 = (void *)objc_claimAutoreleasedReturnValue(+[UIColor tui_colorWithHexString:](UIColor, "tui_colorWithHexString:", v9));
        }
        v4 = v10 != 0;

      }
LABEL_29:

      break;
    case 12:
      if (v3 != 16)
        return 0;
      v13 = *((id *)this + 1);
      v9 = v13;
      if (!v13)
        goto LABEL_26;
      v4 = *((_QWORD *)a3 + 8) == objc_opt_class(v13, v14);
      goto LABEL_29;
    default:
      return v4;
  }
  return v4;
}

void sub_3FA30(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

BOOL sub_3FA58(uint64_t a1, void *a2)
{
  id v3;
  uint64_t v4;
  void *v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  _BOOL8 v9;
  uint64_t v10;
  id v11;
  void *v12;
  _QWORD *v13;
  unint64_t v15;
  uint64_t *v16;

  v3 = a2;
  v5 = v3;
  if (v3)
  {
    v15 = objc_opt_class(v3, v4);
    v6 = (_QWORD *)(a1 + 48);
    v7 = sub_6C98(v6, &v15);
    if (v7)
    {
      v9 = *((_BYTE *)v7 + 24) != 0;
    }
    else
    {
      v10 = objc_opt_class(UIColor, v8);
      v11 = TUIDynamicCast(v10, v5);
      v12 = (void *)objc_claimAutoreleasedReturnValue(v11);

      v16 = (uint64_t *)&v15;
      v13 = sub_41DF8((uint64_t)v6, &v15, (uint64_t)&std::piecewise_construct, &v16);
      v9 = v12 != 0;
      *((_BYTE *)v13 + 24) = v9;
    }
  }
  else
  {
    v9 = 0;
  }

  return v9;
}

void sub_3FB20(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

id TUI::Evaluation::ResolvedValue::_stringValue(TUI::Evaluation::ResolvedValue *this, const TUI::Evaluation::Context *a2)
{
  id v2;
  void *v4;
  uint64_t v5;
  TUI::Symbol::Tab *v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  id v10;
  id v11;

  v2 = 0;
  switch(*(_DWORD *)this)
  {
    case 1:
      v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](NSNumber, "numberWithDouble:", *((double *)this + 2)));
      v5 = objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "stringValue"));
      goto LABEL_5;
    case 2:
      v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInteger:](NSNumber, "numberWithInteger:", *((_QWORD *)this + 2)));
      v5 = objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "stringValue"));
      goto LABEL_5;
    case 6:
      v6 = (TUI::Symbol::Tab *)*((_QWORD *)a2 + 70);
      v7 = *((unsigned __int16 *)this + 8);
      goto LABEL_15;
    case 7:
      v6 = (TUI::Symbol::Tab *)*((_QWORD *)a2 + 70);
      v8 = *((_QWORD *)this + 2);
      v9 = *((_QWORD *)v6 + 5);
      if (v8 >= (*((_QWORD *)v6 + 6) - v9) >> 1)
        v7 = 0xFFFF;
      else
        v7 = *(unsigned __int16 *)(v9 + 2 * v8);
LABEL_15:
      v11 = TUI::Symbol::Tab::string(v6, v7);
      v10 = (id)objc_claimAutoreleasedReturnValue(v11);
      goto LABEL_16;
    case 9:
      v10 = *((id *)this + 1);
      goto LABEL_16;
    case 0xC:
      v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithBool:](NSNumber, "numberWithBool:", *((unsigned __int8 *)this + 16)));
      v5 = objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "stringValue"));
LABEL_5:
      v2 = (id)v5;

      return v2;
    case 0x10:
      if (_NSIsNSString(*((_QWORD *)this + 1), a2))
      {
        v2 = *((id *)this + 1);
        if (v2)
          return v2;
      }
      if ((objc_opt_respondsToSelector(*((_QWORD *)this + 1), "stringValue") & 1) != 0)
      {
        v10 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*((id *)this + 1), "stringValue"));
LABEL_16:
        v2 = v10;
      }
      else
      {
        v2 = 0;
      }
      return v2;
    default:
      return v2;
  }
}

void sub_3FC84(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

uint64_t TUI::Evaluation::ResolvedValue::integerValue(TUI::Evaluation::ResolvedValue *this, const TUI::Evaluation::Context *a2)
{
  if (*(_DWORD *)this == 2)
    return *((_QWORD *)this + 2);
  else
    return (uint64_t)TUI::Evaluation::ResolvedValue::floatValue((id *)this, a2);
}

double TUI::Evaluation::ResolvedValue::floatValue(id *this, const TUI::Evaluation::Context *a2)
{
  int v4;
  double result;

  v4 = *(_DWORD *)this;
  if (*(_DWORD *)this == 16)
  {
    if (_NSIsNSNumber(this[1]))
    {
      objc_msgSend(this[1], "doubleValue");
      return result;
    }
  }
  else
  {
    if (v4 == 2)
      return (double)(uint64_t)this[2];
    if (v4 == 1)
      return *((double *)this + 2);
  }
  TUI::Evaluation::Context::reportError((uint64_t)a2, 1000, 0);
  return 0.0;
}

double TUI::Evaluation::ResolvedValue::floatOrDefaultValue(TUI::Evaluation::ResolvedValue *this, const TUI::Evaluation::Context *a2)
{
  double result;
  uint64_t v5;
  int v6;

  switch(*(_DWORD *)this)
  {
    case 1:
      return *((double *)this + 2);
    case 2:
      return (double)*((uint64_t *)this + 2);
    case 3:
    case 4:
    case 5:
      goto LABEL_10;
    case 6:
      v5 = *(_QWORD *)(*((_QWORD *)a2 + 70) + 40);
      if ((unint64_t)(*(_QWORD *)(*((_QWORD *)a2 + 70) + 48) - v5) < 0x9F)
        v6 = 0xFFFF;
      else
        v6 = *(unsigned __int16 *)(v5 + 158);
      if (*((unsigned __int16 *)this + 8) == v6)
        goto LABEL_13;
      goto LABEL_10;
    case 7:
      if (*((_QWORD *)this + 2) != 79)
        goto LABEL_10;
LABEL_13:
      result = NAN;
      break;
    default:
      if (*(_DWORD *)this == 16 && _NSIsNSNumber(*((_QWORD *)this + 1)))
      {
        objc_msgSend(*((id *)this + 1), "doubleValue");
      }
      else
      {
LABEL_10:
        TUI::Evaluation::Context::reportError((uint64_t)a2, 1000, 0);
        result = 0.0;
      }
      break;
  }
  return result;
}

uint64_t TUI::Evaluation::ResolvedValue::symbolValue(TUI::Evaluation::ResolvedValue *this, const TUI::Evaluation::Context *a2)
{
  int v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  id v8;
  id v9;
  void *__p[2];
  char v12;

  v2 = *(_DWORD *)this;
  if (*(int *)this <= 8)
  {
    if (v2 == 6)
      return *((unsigned __int16 *)this + 8);
    if (v2 == 7)
    {
      v3 = *((_QWORD *)this + 2);
      v4 = *(_QWORD *)(*((_QWORD *)a2 + 70) + 40);
      if (v3 < (*(_QWORD *)(*((_QWORD *)a2 + 70) + 48) - v4) >> 1)
        return *(unsigned __int16 *)(v4 + 2 * v3);
      return 0xFFFFLL;
    }
LABEL_15:
    TUI::Evaluation::Context::reportError((uint64_t)a2, 1000, 0);
    return 0xFFFFLL;
  }
  if (v2 != 9 && v2 != 16)
    goto LABEL_15;
  v7 = *((_QWORD *)a2 + 70);
  v8 = TUI::Evaluation::ResolvedValue::_stringValue(this, a2);
  v9 = objc_retainAutorelease((id)objc_claimAutoreleasedReturnValue(v8));
  sub_9350(__p, (char *)objc_msgSend(v9, "UTF8String"));
  v5 = TUI::Symbol::Tab::lookup(v7, (unsigned __int8 *)__p);
  if (v12 < 0)
    operator delete(__p[0]);

  return v5;
}

void sub_3FEF4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  void *v15;

  if (a15 < 0)
    operator delete(__p);

  _Unwind_Resume(a1);
}

uint64_t TUI::Evaluation::ResolvedValue::nameValue(TUI::Evaluation::ResolvedValue *this, const TUI::Evaluation::Context *a2)
{
  uint64_t v2;

  if (*(_DWORD *)this == 8)
    return *((unsigned int *)this + 4);
  v2 = TUI::Symbol::Entry::invalid;
  TUI::Evaluation::Context::reportError((uint64_t)a2, 1000, 0);
  return v2;
}

double TUI::Evaluation::ResolvedValue::transformValue@<D0>(TUI::Evaluation::ResolvedValue *this@<X0>, const TUI::Evaluation::Context *a2@<X1>, _OWORD *a3@<X8>)
{
  __int128 v4;
  void *v5;
  double result;
  __int128 v7;
  __int128 v8;
  __int128 v9;

  v4 = *(_OWORD *)&CGAffineTransformIdentity.c;
  *a3 = *(_OWORD *)&CGAffineTransformIdentity.a;
  a3[1] = v4;
  a3[2] = *(_OWORD *)&CGAffineTransformIdentity.tx;
  if (*(_DWORD *)this == 13)
  {
    v5 = (void *)*((_QWORD *)this + 1);
    if (v5)
    {
      objc_msgSend(v5, "CGAffineTransformValue");
    }
    else
    {
      v8 = 0u;
      v9 = 0u;
      v7 = 0u;
    }
    *a3 = v7;
    a3[1] = v8;
    result = *(double *)&v9;
    a3[2] = v9;
  }
  else
  {
    TUI::Evaluation::Context::reportError((uint64_t)a2, 1000, 0);
  }
  return result;
}

id TUI::Evaluation::ResolvedValue::colorValue(id *this, const TUI::Evaluation::Context *a2)
{
  int v4;
  uint64_t v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  void *v11;
  id v12;

  v4 = *(_DWORD *)this;
  v5 = 1000;
  if (*(int *)this <= 10)
  {
    if (v4 == 6)
    {
      v10 = TUI::Symbol::Tab::string(*((TUI::Symbol::Tab **)a2 + 70), *((unsigned __int16 *)this + 8));
      v7 = (void *)objc_claimAutoreleasedReturnValue(v10);
      if (!v7)
      {
        v8 = 0;
        goto LABEL_19;
      }
      goto LABEL_13;
    }
    if (v4 == 9)
    {
      v6 = TUI::Evaluation::ResolvedValue::_stringValue((TUI::Evaluation::ResolvedValue *)this, a2);
      v7 = (void *)objc_claimAutoreleasedReturnValue(v6);
      v8 = (id)objc_claimAutoreleasedReturnValue(+[UIColor tui_colorWithHexString:](UIColor, "tui_colorWithHexString:", v7));
      if (v8 || !v7)
        goto LABEL_19;
LABEL_13:
      v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*((id *)a2 + 19), "colorRegistry"));
      v8 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "colorWithName:", v7));

      goto LABEL_19;
    }
LABEL_17:
    TUI::Evaluation::Context::reportError((uint64_t)a2, v5, 0);
    return 0;
  }
  if (v4 == 11)
  {
    v12 = this[1];
    v8 = v12;
    if (!this[1] || v12)
      return v8;
    v5 = 1005;
    goto LABEL_17;
  }
  if (v4 != 16)
    goto LABEL_17;
  if (sub_3FA58((uint64_t)a2 + 64, this[1]))
  {
    v8 = this[1];
    if (v8)
      return v8;
  }
  v9 = TUI::Evaluation::ResolvedValue::_stringValue((TUI::Evaluation::ResolvedValue *)this, a2);
  v7 = (void *)objc_claimAutoreleasedReturnValue(v9);
  v8 = (id)objc_claimAutoreleasedReturnValue(+[UIColor tui_colorWithHexString:](UIColor, "tui_colorWithHexString:", v7));
LABEL_19:

  return v8;
}

void sub_40178(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

id TUI::Evaluation::ResolvedValue::guideValue(id *this, const TUI::Evaluation::Context *a2)
{
  if (*(_DWORD *)this == 10)
    return this[1];
  TUI::Evaluation::Context::reportError((uint64_t)a2, 1000, 0);
  return 0;
}

double TUI::Evaluation::ResolvedValue::sizeValue(id *this, const TUI::Evaluation::Context *a2)
{
  double v2;
  double width;

  if (*(_DWORD *)this == 3)
  {
    objc_msgSend(this[1], "CGSizeValue");
    return v2;
  }
  else
  {
    width = CGSizeZero.width;
    TUI::Evaluation::Context::reportError((uint64_t)a2, 1000, 0);
  }
  return width;
}

double TUI::Evaluation::ResolvedValue::insetsValue(id *this, const TUI::Evaluation::Context *a2)
{
  __int128 v4;
  int v5;
  double result;
  __int128 v7;
  __int128 v8;

  v4 = *(_OWORD *)&UIEdgeInsetsZero.bottom;
  v7 = *(_OWORD *)&UIEdgeInsetsZero.top;
  v8 = v4;
  v5 = *(_DWORD *)this;
  if ((*(_DWORD *)this - 1) < 2)
    goto LABEL_6;
  if (v5 != 16)
  {
    if (v5 == 4)
    {
      objc_msgSend(this[1], "getBytes:length:", &v7, 32);
      return *(double *)&v7;
    }
    goto LABEL_7;
  }
  if (_NSIsNSNumber(this[1]))
  {
LABEL_6:
    result = TUI::Evaluation::ResolvedValue::floatValue(this, a2);
    *((double *)&v7 + 1) = result;
    *(double *)&v8 = result;
    *((double *)&v8 + 1) = result;
    return result;
  }
LABEL_7:
  TUI::Evaluation::Context::reportError((uint64_t)a2, 1000, 0);
  return *(double *)&v7;
}

uint64_t TUI::Evaluation::ResolvedValue::lengthValue(TUI::Evaluation::ResolvedValue *this, const TUI::Evaluation::Context *a2)
{
  int v4;
  double v5;
  unsigned int v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v10;

  v10 = TUILengthNull;
  v4 = *(_DWORD *)this;
  if ((*(_DWORD *)this - 1) < 2)
    goto LABEL_6;
  if (v4 == 16)
  {
    if (!_NSIsNSNumber(*((_QWORD *)this + 1)))
      goto LABEL_9;
LABEL_6:
    v5 = TUI::Evaluation::ResolvedValue::floatValue((id *)this, a2);
    if (v5 <= -3.40282347e38)
    {
      v8 = 4286578687;
    }
    else
    {
      if (v5 < 3.40282347e38)
      {
        *(float *)&v6 = v5;
        v7 = v6 | 0x7FC0000000000000;
LABEL_13:
        *(_QWORD *)&v10 = v7;
        *((_QWORD *)&v10 + 1) = 0x1700007FC00000;
        return v10;
      }
      v8 = 2139095039;
    }
    v7 = v8 & 0xFFFFFFFFFFFFLL | 0x7FC0000000000000;
    goto LABEL_13;
  }
  if (v4 != 5)
  {
LABEL_9:
    TUI::Evaluation::Context::reportError((uint64_t)a2, 1000, 0);
    return v10;
  }
  objc_msgSend(*((id *)this + 1), "getBytes:length:", &v10, 16);
  return v10;
}

id TUI::Evaluation::ResolvedValue::objectValue(TUI::Evaluation::ResolvedValue *this, const TUI::Evaluation::Context *a2)
{
  void *v5;
  id v6;
  double v7[4];

  switch(*(_DWORD *)this)
  {
    case 1:
      v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](NSNumber, "numberWithDouble:", *((double *)this + 2)));
      return v5;
    case 2:
      v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInteger:](NSNumber, "numberWithInteger:", *((_QWORD *)this + 2)));
      return v5;
    case 3:
    case 9:
    case 0xB:
    case 0x10:
      return *((id *)this + 1);
    case 4:
      objc_msgSend(*((id *)this + 1), "getBytes:length:", v7, 32);
      v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSValue valueWithUIEdgeInsets:](NSValue, "valueWithUIEdgeInsets:", v7[0], v7[1], v7[2], v7[3]));
      return v5;
    case 0xC:
      v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithBool:](NSNumber, "numberWithBool:", *((unsigned __int8 *)this + 16)));
      return v5;
    default:
      if (TUI::Evaluation::ResolvedValue::isConvertibleToKind(this, 9, a2))
      {
        v6 = TUI::Evaluation::ResolvedValue::stringValue(this, a2);
        v5 = (void *)objc_claimAutoreleasedReturnValue(v6);
      }
      else
      {
        TUI::Evaluation::Context::reportError((uint64_t)a2, 1000, 0);
        v5 = 0;
      }
      return v5;
  }
}

id TUI::Evaluation::ResolvedValue::stringValue(TUI::Evaluation::ResolvedValue *this, const TUI::Evaluation::Context *a2)
{
  int v3;
  id v5;
  void *v6;
  TUI::Symbol::Tab *v7;
  unint64_t v8;
  uint64_t v9;
  unsigned int v10;
  id v11;

  v3 = *(_DWORD *)this;
  if (*(_DWORD *)this > 0x10u)
    goto LABEL_10;
  if (((1 << v3) & 0x11206) == 0)
  {
    if (v3 == 6)
    {
      v7 = (TUI::Symbol::Tab *)*((_QWORD *)a2 + 70);
      v10 = *((unsigned __int16 *)this + 8);
LABEL_14:
      v11 = TUI::Symbol::Tab::string(v7, v10);
      v6 = (void *)objc_claimAutoreleasedReturnValue(v11);
      return v6;
    }
    if (v3 == 7)
    {
      v7 = (TUI::Symbol::Tab *)*((_QWORD *)a2 + 70);
      v8 = *((_QWORD *)this + 2);
      v9 = *((_QWORD *)v7 + 5);
      if (v8 >= (*((_QWORD *)v7 + 6) - v9) >> 1)
        v10 = 0xFFFF;
      else
        v10 = *(unsigned __int16 *)(v9 + 2 * v8);
      goto LABEL_14;
    }
LABEL_10:
    TUI::Evaluation::Context::reportError((uint64_t)a2, 1000, 0);
LABEL_11:
    v6 = 0;
    return v6;
  }
  v5 = TUI::Evaluation::ResolvedValue::_stringValue(this, a2);
  v6 = (void *)objc_claimAutoreleasedReturnValue(v5);
  if (!v6)
  {
    if (!*((_QWORD *)this + 1))
      goto LABEL_11;
    goto LABEL_10;
  }
  return v6;
}

id TUI::Evaluation::ResolvedValue::_objectValue(TUI::Evaluation::ResolvedValue *this)
{
  int v1;

  v1 = *(_DWORD *)this;
  if (*(_DWORD *)this == 1)
    return (id)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](NSNumber, "numberWithDouble:", *((double *)this + 2)));
  if (v1 == 16 || v1 == 9)
    return *((id *)this + 1);
  else
    return 0;
}

id TUI::Evaluation::ResolvedValue::arrayValue(id *this, const TUI::Evaluation::Context *a2)
{
  id v4;

  if (*(_DWORD *)this == 16 && _NSIsNSArray(this[1]))
  {
    v4 = this[1];
  }
  else
  {
    TUI::Evaluation::Context::reportError((uint64_t)a2, 1000, 0);
    v4 = 0;
  }
  return v4;
}

id TUI::Evaluation::ResolvedValue::colorArrayValue(id *this, const TUI::Evaluation::Context *a2)
{
  id v3;
  void *v4;
  id v5;
  id v6;
  uint64_t v7;
  void *v8;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  _BYTE v14[128];

  v3 = TUI::Evaluation::ResolvedValue::arrayValue(this, a2);
  v4 = (void *)objc_claimAutoreleasedReturnValue(v3);
  if (v4)
  {
    v12 = 0u;
    v13 = 0u;
    v10 = 0u;
    v11 = 0u;
    v5 = v4;
    v6 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v10, v14, 16);
    if (v6)
    {
      v7 = *(_QWORD *)v11;
      while (2)
      {
        v8 = 0;
        do
        {
          if (*(_QWORD *)v11 != v7)
            objc_enumerationMutation(v5);
          if (!sub_3FA58((uint64_t)a2 + 64, *(void **)(*((_QWORD *)&v10 + 1) + 8 * (_QWORD)v8)))
          {

            TUI::Evaluation::Context::reportError((uint64_t)a2, 1000, 0);
            goto LABEL_12;
          }
          v8 = (char *)v8 + 1;
        }
        while (v6 != v8);
        v6 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v10, v14, 16);
        if (v6)
          continue;
        break;
      }
    }

  }
  else
  {
LABEL_12:
    v5 = 0;
  }
  return v5;
}

void sub_407EC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

id TUI::Evaluation::ResolvedValue::stringArrayValue(id *this, const TUI::Evaluation::Context *a2)
{
  id v3;
  void *v4;
  id v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  void *v9;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  _BYTE v15[128];

  v3 = TUI::Evaluation::ResolvedValue::arrayValue(this, a2);
  v4 = (void *)objc_claimAutoreleasedReturnValue(v3);
  if (v4)
  {
    v13 = 0u;
    v14 = 0u;
    v11 = 0u;
    v12 = 0u;
    v5 = v4;
    v7 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v11, v15, 16);
    if (v7)
    {
      v8 = *(_QWORD *)v12;
      while (2)
      {
        v9 = 0;
        do
        {
          if (*(_QWORD *)v12 != v8)
            objc_enumerationMutation(v5);
          if ((_NSIsNSString(*(_QWORD *)(*((_QWORD *)&v11 + 1) + 8 * (_QWORD)v9), v6) & 1) == 0)
          {

            TUI::Evaluation::Context::reportError((uint64_t)a2, 1000, 0);
            goto LABEL_12;
          }
          v9 = (char *)v9 + 1;
        }
        while (v7 != v9);
        v7 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v11, v15, 16);
        if (v7)
          continue;
        break;
      }
    }

  }
  else
  {
LABEL_12:
    v5 = 0;
  }
  return v5;
}

void sub_4092C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void TUI::Evaluation::ResolvedValue::springTimingParameters(id *this@<X0>, const TUI::Evaluation::Context *a2@<X1>, uint64_t a3@<X8>)
{
  *(_OWORD *)a3 = TUISpringTimingParametersZero;
  *(_OWORD *)(a3 + 16) = unk_22F518;
  *(_QWORD *)(a3 + 32) = 0;
  if (*(_DWORD *)this == 14)
    objc_msgSend(this[1], "getBytes:length:", a3, 40);
  else
    TUI::Evaluation::Context::reportError((uint64_t)a2, 1000, 0);
}

id TUI::Evaluation::ResolvedValue::BOOLValue(TUI::Evaluation::ResolvedValue *this, const TUI::Evaluation::Context *a2)
{
  id result;
  int v5;

  if (*(_DWORD *)this != 16)
  {
    if (*(_DWORD *)this == 12)
      return (id)(*((_BYTE *)this + 16) != 0);
LABEL_7:
    TUI::Evaluation::Context::reportError((uint64_t)a2, 1000, 0);
    return 0;
  }
  v5 = _NSIsNSNumber(*((_QWORD *)this + 1));
  result = (id)*((_QWORD *)this + 1);
  if (v5)
    return objc_msgSend(result, "BOOLValue");
  if (result)
    goto LABEL_7;
  return result;
}

id TUI::Evaluation::ResolvedValue::elementValue(id *this, const TUI::Evaluation::Context *a2)
{
  if (*(_DWORD *)this == 15)
    return this[1];
  TUI::Evaluation::Context::reportError((uint64_t)a2, 1000, 0);
  return 0;
}

id TUI::Evaluation::ResolvedValue::fontSpecValue(id *this, const TUI::Evaluation::Context *a2)
{
  if (*(_DWORD *)this != 16)
  {
    if (*(_DWORD *)this == 17)
      return this[1];
    goto LABEL_5;
  }
  if (this[1])
LABEL_5:
    TUI::Evaluation::Context::reportError((uint64_t)a2, 1000, 0);
  return 0;
}

id TUI::Evaluation::ResolvedValue::structValue(id *this, const TUI::Evaluation::Context *a2)
{
  if (*(_DWORD *)this == 18)
    return this[1];
  TUI::Evaluation::Context::reportError((uint64_t)a2, 1000, 0);
  return 0;
}

void TUI::Evaluation::ResolvedValue::resolveProperty(id *this@<X0>, const TUI::Evaluation::Context *a2@<X1>, unsigned int a3@<W2>, uint64_t a4@<X8>)
{
  id *v8;
  uint64_t v9;
  int v10;
  unsigned __int16 *v11;
  unint64_t v12;
  int v13;
  id v14;
  id v15;
  unsigned int v16;
  void *v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unsigned __int16 *v23;
  unint64_t v24;
  int v25;
  unsigned __int16 *v26;
  unint64_t v27;
  int v28;
  int v29;
  id v30;
  int v31;
  void *v32;
  unsigned __int16 *v33;
  unint64_t v34;
  int v35;
  id v36;
  void *v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  void *v43;
  int v44;
  int v45;
  id v46;
  id v47;
  void *v48;
  uint64_t v49;
  int v50;
  void *v51;
  id v52;
  uint64_t v53;
  void *v54;
  void *v55;
  int v56;
  void *v57;
  id v58;
  id v59;
  int v60;
  id v61;
  void *v62;
  id v63;
  id v64;
  uint64_t v65;
  void *v66;
  uint64_t v67;
  id v68;
  void *v69;
  void *v70;
  unsigned __int16 *v71;
  unint64_t v72;
  int v73;
  objc_class *v74;
  NSString *v75;
  id v76;
  void *v77;
  void *v78;
  id v79;
  void *v80;
  int v81;
  int v82;
  int v83;
  int v84;
  int v85;
  id v86;
  void *v87;
  id v88;
  void *v89;
  int v90;
  id v91;
  id v92;
  id v93;
  void *v94;
  uint64_t v95;
  id v96;
  uint64_t v97;
  id v98;
  uint64_t v99;
  void *v100;
  id v101;
  void *v102;
  uint64_t v103;

  v96 = 0;
  *(_DWORD *)a4 = 0;
  *(_QWORD *)(a4 + 8) = 0;
  v8 = (id *)(a4 + 8);
  v9 = *((_QWORD *)a2 + 70);
  v10 = *(_DWORD *)this;
  if (*(int *)this <= 13)
  {
    if (v10 != 3)
    {
      if (v10 == 4)
      {
        objc_msgSend(this[1], "getBytes:length:", &v100, 32);
        v11 = *(unsigned __int16 **)(v9 + 40);
        v12 = *(_QWORD *)(v9 + 48) - (_QWORD)v11;
        if (v12 < 5)
          v13 = 0xFFFF;
        else
          v13 = v11[2];
        if (v13 != a3)
        {
          if (v12 < 7)
            v29 = 0xFFFF;
          else
            v29 = v11[3];
          if (v29 != a3)
          {
            if (v12 < 9)
              v44 = 0xFFFF;
            else
              v44 = v11[4];
            if (v44 != a3)
            {
              if (v12 < 0xB)
                v56 = 0xFFFF;
              else
                v56 = v11[5];
              if (v56 == a3)
              {
                LODWORD(v97) = 1;
                v98 = 0;
                v99 = v103;
                sub_414CC(a4, (uint64_t)&v97);

                return;
              }
              goto LABEL_80;
            }
LABEL_69:
            v30 = v102;
            goto LABEL_70;
          }
LABEL_48:
          v30 = v101;
          goto LABEL_70;
        }
        goto LABEL_27;
      }
      goto LABEL_33;
    }
    objc_msgSend(this[1], "CGSizeValue");
    v20 = v19;
    v22 = v21;
    v23 = *(unsigned __int16 **)(v9 + 40);
    v24 = *(_QWORD *)(v9 + 48) - (_QWORD)v23;
    if (v24)
    {
      if (*v23 != a3)
      {
        if (v24 < 3)
          v25 = 0xFFFF;
        else
          v25 = v23[1];
        goto LABEL_57;
      }
    }
    else
    {
      v25 = 0xFFFF;
      if (a3 != 0xFFFF)
      {
LABEL_57:
        if (v25 == a3)
        {
          *(_DWORD *)a4 = 1;
          v51 = *(void **)(a4 + 8);
          *(_QWORD *)(a4 + 8) = 0;

          *(_QWORD *)(a4 + 16) = v22;
          return;
        }
        v52 = TUI::Symbol::Tab::string(*((TUI::Symbol::Tab **)a2 + 70), a3);
        v96 = (id)objc_claimAutoreleasedReturnValue(v52);
        TUI::Evaluation::Context::reportError((uint64_t)a2, 1004, v96);
        goto LABEL_92;
      }
    }
    *(_DWORD *)a4 = 1;
    v32 = *(void **)(a4 + 8);
    *(_QWORD *)(a4 + 8) = 0;

    *(_QWORD *)(a4 + 16) = v20;
    return;
  }
  if (v10 == 14)
  {
    objc_msgSend(this[1], "getBytes:length:", &v100, 40);
    v26 = *(unsigned __int16 **)(v9 + 40);
    v27 = *(_QWORD *)(v9 + 48) - (_QWORD)v26;
    if (v27 < 0x91)
      v28 = 0xFFFF;
    else
      v28 = v26[72];
    if (v28 != a3)
    {
      if (v27 < 0x93)
        v31 = 0xFFFF;
      else
        v31 = v26[73];
      if (v31 != a3)
      {
        if (v27 < 0x95)
          v45 = 0xFFFF;
        else
          v45 = v26[74];
        if (v45 != a3)
        {
LABEL_80:
          v61 = TUI::Symbol::Tab::string(*((TUI::Symbol::Tab **)a2 + 70), a3);
          v62 = (void *)objc_claimAutoreleasedReturnValue(v61);
          TUI::Evaluation::Context::reportError((uint64_t)a2, 1004, v62);

          return;
        }
        goto LABEL_69;
      }
      goto LABEL_48;
    }
LABEL_27:
    v30 = v100;
LABEL_70:
    *(_DWORD *)a4 = 1;
    v57 = *(void **)(a4 + 8);
    *(_QWORD *)(a4 + 8) = 0;

    *(_QWORD *)(a4 + 16) = v30;
    return;
  }
  if (v10 != 16)
    goto LABEL_33;
  if (sub_41508((uint64_t)a2 + 64, this[1]))
  {
    v14 = this[1];
    v15 = TUI::Symbol::Tab::string(*((TUI::Symbol::Tab **)a2 + 70), a3);
    v95 = objc_claimAutoreleasedReturnValue(v15);
    v16 = objc_msgSend(v14, "tui_hasProperty:", v95);
    v17 = (void *)v95;
    if (v16)
    {
      v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(this[1], "tui_valueForProperty:", v95));
      *(_DWORD *)a4 = 16;
      objc_storeStrong(v8, v18);

      goto LABEL_62;
    }
  }
  else
  {
    v17 = 0;
  }
  v10 = *(_DWORD *)this;
  if (*(_DWORD *)this == 16)
  {
    if (this[1])
    {
      v96 = v17;
      goto LABEL_85;
    }
    *(_DWORD *)a4 = 16;
    v54 = *(void **)(a4 + 8);
    *(_QWORD *)(a4 + 8) = 0;
    v95 = (uint64_t)v17;

LABEL_62:
    v55 = (void *)v95;
LABEL_93:

    return;
  }
  v96 = v17;
LABEL_33:
  if (v10 == 18)
  {
    v36 = this[1];
    if (v36)
    {
      v37 = v36;
      while (1)
      {
        v38 = objc_msgSend(v37, "value");
        v39 = (*(uint64_t (**)(_QWORD, unint64_t))(*(_QWORD *)*v38 + 8))(*v38, (unint64_t)a3 << 16);
        if (v40 != -1)
          break;
        v41 = objc_claimAutoreleasedReturnValue(objc_msgSend(v37, "basedOn"));

        v37 = (void *)v41;
        if (!v41)
          goto LABEL_41;
      }
      v53 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v39 + 32))(v39);
      *(_DWORD *)a4 = *(_DWORD *)v53;
      objc_storeStrong(v8, *(id *)(v53 + 8));
      *(_QWORD *)(a4 + 16) = *(_QWORD *)(v53 + 16);
    }
    else
    {
LABEL_41:
      v42 = TUI::Symbol::Tab::string(*((TUI::Symbol::Tab **)a2 + 70), a3);
      v43 = (void *)objc_claimAutoreleasedReturnValue(v42);
      TUI::Evaluation::Context::reportError((uint64_t)a2, 1004, v43);
      v37 = v43;
    }
LABEL_90:

    goto LABEL_92;
  }
  if (v10 == 17)
  {
    v33 = *(unsigned __int16 **)(v9 + 40);
    v34 = *(_QWORD *)(v9 + 48) - (_QWORD)v33;
    if (v34 < 0x7D)
      v35 = 0xFFFF;
    else
      v35 = v33[62];
    if (v35 == a3)
    {
      v46 = this[1];
      v47 = *((id *)a2 + 73);
      v48 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v46, "mappedSpecIfNeededWithEnvironment:", v47));

      objc_msgSend(v48, "scale");
LABEL_84:
      v65 = v49;
      *(_DWORD *)a4 = 1;
      v66 = *(void **)(a4 + 8);
      *(_QWORD *)(a4 + 8) = 0;

      *(_QWORD *)(a4 + 16) = v65;
LABEL_92:
      v55 = v96;
      goto LABEL_93;
    }
    if (v34 < 0x81)
      v50 = 0xFFFF;
    else
      v50 = v33[64];
    if (v50 == a3)
    {
      v58 = this[1];
      v59 = *((id *)a2 + 73);
      v48 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v58, "mappedSpecIfNeededWithEnvironment:", v59));

      objc_msgSend(v48, "leading");
      goto LABEL_84;
    }
    if (v34 < 0xD1)
      v60 = 0xFFFF;
    else
      v60 = v33[104];
    if (v60 == a3)
    {
      v63 = this[1];
      v64 = *((id *)a2 + 73);
      v48 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v63, "mappedSpecIfNeededWithEnvironment:", v64));

      objc_msgSend(v48, "pointSize");
      goto LABEL_84;
    }
  }
LABEL_85:
  if (!TUI::Evaluation::ResolvedValue::isConvertibleToKind((TUI::Evaluation::ResolvedValue *)this, 11, a2))
  {
    if (*(_DWORD *)this != 16)
    {
      v79 = TUI::Symbol::Tab::string(*((TUI::Symbol::Tab **)a2 + 70), a3);
      v80 = (void *)objc_claimAutoreleasedReturnValue(v79);
      TUI::Evaluation::Context::reportError((uint64_t)a2, 1004, v80);

      goto LABEL_92;
    }
    v74 = (objc_class *)objc_opt_class(this[1], v67);
    v75 = NSStringFromClass(v74);
    v37 = (void *)objc_claimAutoreleasedReturnValue(v75);
    v76 = TUI::Symbol::Tab::string(*((TUI::Symbol::Tab **)a2 + 70), a3);
    v77 = (void *)objc_claimAutoreleasedReturnValue(v76);
    v78 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("%@.%@"), v37, v77));
    TUI::Evaluation::Context::reportError((uint64_t)a2, 1024, v78);

    goto LABEL_90;
  }
  v68 = TUI::Evaluation::ResolvedValue::colorValue(this, a2);
  v69 = (void *)objc_claimAutoreleasedReturnValue(v68);
  v70 = v69;
  v71 = *(unsigned __int16 **)(v9 + 40);
  v72 = *(_QWORD *)(v9 + 48) - (_QWORD)v71;
  if (v72 < 0x4D)
    v73 = 0xFFFF;
  else
    v73 = v71[38];
  if (v73 == a3)
  {
    v97 = 0;
    objc_msgSend(v69, "getRed:green:blue:alpha:", &v97, 0, 0, 0);
LABEL_117:
    LODWORD(v100) = 1;
    v101 = 0;
    v102 = (void *)v97;
    sub_414CC(a4, (uint64_t)&v100);

    goto LABEL_118;
  }
  if (v72 < 0x4F)
    v81 = 0xFFFF;
  else
    v81 = v71[39];
  if (v81 == a3)
  {
    v97 = 0;
    objc_msgSend(v69, "getRed:green:blue:alpha:", 0, &v97, 0, 0);
    goto LABEL_117;
  }
  if (v72 < 0x51)
    v82 = 0xFFFF;
  else
    v82 = v71[40];
  if (v82 == a3)
  {
    v97 = 0;
    objc_msgSend(v69, "getRed:green:blue:alpha:", 0, 0, &v97, 0);
    goto LABEL_117;
  }
  if (v72 < 0x53)
    v83 = 0xFFFF;
  else
    v83 = v71[41];
  if (v83 == a3)
  {
    v97 = 0x3FF0000000000000;
    objc_msgSend(v69, "getRed:green:blue:alpha:", 0, 0, 0, &v97);
    goto LABEL_117;
  }
  if (v72 < 0x79)
    v84 = 0xFFFF;
  else
    v84 = v71[60];
  if (v84 == a3)
  {
    v97 = 0;
    objc_msgSend(v69, "getHue:saturation:brightness:alpha:", 0, 0, &v97, 0);
    goto LABEL_117;
  }
  if (v72 < 0xD3)
    v85 = 0xFFFF;
  else
    v85 = v71[105];
  if (v85 == a3)
  {
    v86 = *((id *)a2 + 73);
    v87 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v86, "traitCollection"));
    v88 = sub_41600(v70, v87, 1);
    v89 = (void *)objc_claimAutoreleasedReturnValue(v88);
  }
  else
  {
    if (v72 < 0xD5)
      v90 = 0xFFFF;
    else
      v90 = v71[106];
    if (v90 != a3)
    {
      v93 = TUI::Symbol::Tab::string(*((TUI::Symbol::Tab **)a2 + 70), a3);
      v94 = (void *)objc_claimAutoreleasedReturnValue(v93);
      TUI::Evaluation::Context::reportError((uint64_t)a2, 1004, v94);

      goto LABEL_118;
    }
    v86 = *((id *)a2 + 73);
    v87 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v86, "traitCollection"));
    v91 = sub_41600(v70, v87, 2);
    v89 = (void *)objc_claimAutoreleasedReturnValue(v91);
  }
  LODWORD(v100) = 11;
  v101 = v89;
  v92 = v89;
  sub_414CC(a4, (uint64_t)&v100);

LABEL_118:
}

void sub_413C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, id a12)
{
  id *v12;
  void *v13;
  void *v14;

  _Unwind_Resume(a1);
}

uint64_t sub_414CC(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  objc_storeStrong((id *)(a1 + 8), *(id *)(a2 + 8));
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  return a1;
}

BOOL sub_41508(uint64_t a1, void *a2)
{
  id v3;
  uint64_t v4;
  _BOOL8 v5;
  _QWORD *v7;
  _QWORD *v8;
  id v9;
  void *v10;
  _QWORD *v11;
  unint64_t v12;
  uint64_t *v13;

  v3 = a2;
  if ((_NSIsNSDictionary() & 1) != 0 || (_NSIsNSArray(v3) & 1) != 0)
  {
    v5 = 1;
  }
  else if (v3)
  {
    v12 = objc_opt_class(v3, v4);
    v7 = (_QWORD *)(a1 + 8);
    v8 = sub_6C98(v7, &v12);
    if (v8)
    {
      v5 = *((_BYTE *)v8 + 24) != 0;
    }
    else
    {
      v9 = TUIProtocolCast(&OBJC_PROTOCOL___TUIPropertyAccessing, v3);
      v10 = (void *)objc_claimAutoreleasedReturnValue(v9);

      v13 = (uint64_t *)&v12;
      v11 = sub_41DF8((uint64_t)v7, &v12, (uint64_t)&std::piecewise_construct, &v13);
      v5 = v10 != 0;
      *((_BYTE *)v11 + 24) = v5;
    }
  }
  else
  {
    v5 = 0;
  }

  return v5;
}

void sub_415E8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

id sub_41600(void *a1, void *a2, uint64_t a3)
{
  id v5;
  id v6;
  id v7;
  void *v8;
  id v9;
  _QWORD v11[4];
  id v12;
  uint64_t *v13;
  _QWORD v14[5];
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t (*v18)(uint64_t, uint64_t);
  void (*v19)(uint64_t);
  id v20;

  v5 = a1;
  v6 = a2;
  v15 = 0;
  v16 = &v15;
  v17 = 0x3032000000;
  v18 = sub_42018;
  v19 = sub_42028;
  v7 = v5;
  v20 = v7;
  if (v6)
  {
    v14[0] = _NSConcreteStackBlock;
    v14[1] = 3221225472;
    v14[2] = sub_42030;
    v14[3] = &unk_23E8F8;
    v14[4] = a3;
    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "traitCollectionByModifyingTraits:", v14));
    if (v8)
    {
      v11[0] = _NSConcreteStackBlock;
      v11[1] = 3221225472;
      v11[2] = sub_4203C;
      v11[3] = &unk_23E920;
      v13 = &v15;
      v12 = v7;
      objc_msgSend(v8, "performAsCurrentTraitCollection:", v11);

    }
  }
  v9 = (id)v16[5];
  _Block_object_dispose(&v15, 8);

  return v9;
}

void sub_4173C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,id a26)
{
  void *v26;
  void *v27;
  void *v28;

  _Block_object_dispose(&a21, 8);
  _Unwind_Resume(a1);
}

void TUI::Evaluation::ResolvedValue::testProperty(TUI::Evaluation::ResolvedValue *this@<X0>, const TUI::Evaluation::Context *a2@<X1>, unsigned int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  int v9;
  id v10;
  unint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  unsigned __int16 *v16;
  unint64_t v17;
  int v18;
  unsigned __int16 *v19;
  unint64_t v20;
  int v21;
  void *v22;
  id v23;
  uint64_t v24;
  void *v25;
  unsigned __int16 *v26;
  unint64_t v27;
  int v28;
  int v29;
  int v30;
  int v31;
  unsigned __int16 *v32;
  unint64_t v33;
  int v34;
  int v35;
  int v36;
  int v37;
  int v38;
  id v39;
  id v40;

  v39 = 0;
  v8 = *((_QWORD *)a2 + 70);
  v9 = *(_DWORD *)this;
  if (*(int *)this <= 13)
  {
    if (v9 == 3)
    {
      v26 = *(unsigned __int16 **)(v8 + 40);
      v27 = *(_QWORD *)(v8 + 48) - (_QWORD)v26;
      if (v27)
      {
        if (*v26 == a3)
          goto LABEL_59;
        if (v27 < 3)
          goto LABEL_62;
        v28 = v26[1];
      }
      else
      {
        v28 = 0xFFFF;
        if (a3 == 0xFFFF)
          goto LABEL_59;
      }
LABEL_63:
      v10 = 0;
      v14 = v28 == a3;
      goto LABEL_77;
    }
    if (v9 != 4)
      goto LABEL_46;
    v16 = *(unsigned __int16 **)(v8 + 40);
    v17 = *(_QWORD *)(v8 + 48) - (_QWORD)v16;
    if (v17 < 5)
      v18 = 0xFFFF;
    else
      v18 = v16[2];
    if (v18 != a3)
    {
      v29 = v17 < 7 ? 0xFFFF : v16[3];
      if (v29 != a3)
      {
        v31 = v17 < 9 ? 0xFFFF : v16[4];
        if (v31 != a3)
        {
          if (v17 >= 0xB)
          {
            v28 = v16[5];
            goto LABEL_63;
          }
          goto LABEL_62;
        }
      }
    }
LABEL_59:
    v10 = 0;
    v14 = 1;
    goto LABEL_77;
  }
  if (v9 == 14)
  {
    v19 = *(unsigned __int16 **)(v8 + 40);
    v20 = *(_QWORD *)(v8 + 48) - (_QWORD)v19;
    if (v20 < 0x91)
      v21 = 0xFFFF;
    else
      v21 = v19[72];
    if (v21 != a3)
    {
      v30 = v20 < 0x93 ? 0xFFFF : v19[73];
      if (v30 != a3)
      {
        if (v20 >= 0x95)
        {
          v28 = v19[74];
          goto LABEL_63;
        }
LABEL_62:
        v28 = 0xFFFF;
        goto LABEL_63;
      }
    }
    goto LABEL_59;
  }
  if (v9 == 16)
  {
    if (sub_41508((uint64_t)a2 + 64, *((void **)this + 1)))
    {
      v22 = (void *)*((_QWORD *)this + 1);
      v23 = TUI::Symbol::Tab::string(*((TUI::Symbol::Tab **)a2 + 70), a3);
      v24 = objc_claimAutoreleasedReturnValue(v23);
      if (objc_msgSend(v22, "tui_hasProperty:", v24))
      {
        v25 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*((id *)this + 1), "tui_valueForProperty:", v24));
        v14 = v25 != 0;

        v10 = (id)v24;
        goto LABEL_77;
      }
      v39 = (id)v24;
    }
    else
    {
      v39 = 0;
    }
    goto LABEL_46;
  }
  if (v9 != 18)
  {
LABEL_46:
    v14 = 0;
    if (TUI::Evaluation::ResolvedValue::isConvertibleToKind(this, 11, a2))
    {
      v32 = *(unsigned __int16 **)(v8 + 40);
      v33 = *(_QWORD *)(v8 + 48) - (_QWORD)v32;
      v34 = v33 < 0x4D ? 0xFFFF : v32[38];
      if (v34 == a3
        || (v33 < 0x4F ? (v35 = 0xFFFF) : (v35 = v32[39]),
            v35 == a3
         || (v33 < 0x51 ? (v36 = 0xFFFF) : (v36 = v32[40]),
             v36 == a3
          || (v33 < 0x53 ? (v37 = 0xFFFF) : (v37 = v32[41]),
              v37 == a3 || (v33 < 0x79 ? (v38 = 0xFFFF) : (v38 = v32[60]), v38 == a3)))))
      {
        v14 = 1;
      }
    }
    v10 = v39;
    goto LABEL_77;
  }
  v10 = *((id *)this + 1);
  if (v10)
  {
    v11 = (unint64_t)a3 << 16;
    while (1)
    {
      v40 = v10;
      v12 = objc_msgSend(v10, "value");
      (*(void (**)(_QWORD, unint64_t))(*(_QWORD *)*v12 + 8))(*v12, v11);
      v14 = v13 != -1;
      if (v13 != -1)
        break;
      v15 = objc_claimAutoreleasedReturnValue(objc_msgSend(v40, "basedOn"));

      v10 = (id)v15;
      if (!v15)
        goto LABEL_36;
    }
    v10 = v40;
LABEL_36:

    v10 = 0;
  }
  else
  {
    v14 = 0;
  }
LABEL_77:
  *(_DWORD *)a4 = 12;
  *(_QWORD *)(a4 + 8) = 0;
  *(_BYTE *)(a4 + 16) = v14;

}

void sub_41AC8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

uint64_t TUI::Evaluation::ResolvedValue::operator==(uint64_t a1, uint64_t a2)
{
  void *v2;
  uint64_t result;
  BOOL v4;
  int v5;
  int v6;

  if (*(_DWORD *)a1 != *(_DWORD *)a2)
    return 0;
  switch(*(_DWORD *)a1)
  {
    case 1:
      v4 = *(double *)(a1 + 16) == *(double *)(a2 + 16);
      goto LABEL_13;
    case 2:
    case 7:
      v4 = *(_QWORD *)(a1 + 16) == *(_QWORD *)(a2 + 16);
      goto LABEL_13;
    case 3:
    case 4:
    case 5:
    case 9:
    case 0xA:
    case 0xB:
    case 0xD:
    case 0xE:
    case 0xF:
    case 0x10:
    case 0x11:
    case 0x12:
      v2 = *(void **)(a1 + 8);
      if (v2 == *(void **)(a2 + 8))
        goto LABEL_5;
      result = (uint64_t)objc_msgSend(v2, "isEqual:");
      break;
    case 6:
      v5 = *(unsigned __int16 *)(a1 + 16);
      v6 = *(unsigned __int16 *)(a2 + 16);
      goto LABEL_12;
    case 8:
      if (*(unsigned __int16 *)(a1 + 16) != *(unsigned __int16 *)(a2 + 16))
        return 0;
      v5 = *(unsigned __int16 *)(a1 + 18);
      v6 = *(unsigned __int16 *)(a2 + 18);
      goto LABEL_12;
    case 0xC:
      v5 = *(unsigned __int8 *)(a1 + 16);
      v6 = *(unsigned __int8 *)(a2 + 16);
LABEL_12:
      v4 = v5 == v6;
LABEL_13:
      result = v4;
      break;
    default:
LABEL_5:
      result = 1;
      break;
  }
  return result;
}

void sub_41C94(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_41D50(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

_QWORD *sub_41DF8(uint64_t a1, unint64_t *a2, uint64_t a3, _QWORD **a4)
{
  unint64_t v4;
  unint64_t v7;
  unint64_t v8;
  uint8x8_t v9;
  void **v10;
  _QWORD *v11;
  unint64_t v12;
  float v13;
  float v14;
  _BOOL8 v15;
  unint64_t v16;
  unint64_t v17;
  size_t v18;
  uint64_t v19;
  _QWORD *v20;
  unint64_t v21;

  v7 = *a2;
  v8 = *(_QWORD *)(a1 + 8);
  if (v8)
  {
    v9 = (uint8x8_t)vcnt_s8((int8x8_t)v8);
    v9.i16[0] = vaddlv_u8(v9);
    if (v9.u32[0] > 1uLL)
    {
      v4 = *a2;
      if (v8 <= v7)
        v4 = v7 % v8;
    }
    else
    {
      v4 = (v8 - 1) & v7;
    }
    v10 = *(void ***)(*(_QWORD *)a1 + 8 * v4);
    if (v10)
    {
      v11 = *v10;
      if (*v10)
      {
        do
        {
          v12 = v11[1];
          if (v12 == v7)
          {
            if (v11[2] == v7)
              return v11;
          }
          else
          {
            if (v9.u32[0] > 1uLL)
            {
              if (v12 >= v8)
                v12 %= v8;
            }
            else
            {
              v12 &= v8 - 1;
            }
            if (v12 != v4)
              break;
          }
          v11 = (_QWORD *)*v11;
        }
        while (v11);
      }
    }
  }
  v11 = operator new(0x20uLL);
  *v11 = 0;
  v11[1] = v7;
  v11[2] = **a4;
  *((_BYTE *)v11 + 24) = 0;
  v13 = (float)(unint64_t)(*(_QWORD *)(a1 + 24) + 1);
  v14 = *(float *)(a1 + 32);
  if (!v8 || (float)(v14 * (float)v8) < v13)
  {
    v15 = 1;
    if (v8 >= 3)
      v15 = (v8 & (v8 - 1)) != 0;
    v16 = v15 | (2 * v8);
    v17 = vcvtps_u32_f32(v13 / v14);
    if (v16 <= v17)
      v18 = v17;
    else
      v18 = v16;
    sub_6A20(a1, v18);
    v8 = *(_QWORD *)(a1 + 8);
    if ((v8 & (v8 - 1)) != 0)
    {
      if (v8 <= v7)
        v4 = v7 % v8;
      else
        v4 = v7;
    }
    else
    {
      v4 = (v8 - 1) & v7;
    }
  }
  v19 = *(_QWORD *)a1;
  v20 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v4);
  if (v20)
  {
    *v11 = *v20;
LABEL_38:
    *v20 = v11;
    goto LABEL_39;
  }
  *v11 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v11;
  *(_QWORD *)(v19 + 8 * v4) = a1 + 16;
  if (*v11)
  {
    v21 = *(_QWORD *)(*v11 + 8);
    if ((v8 & (v8 - 1)) != 0)
    {
      if (v21 >= v8)
        v21 %= v8;
    }
    else
    {
      v21 &= v8 - 1;
    }
    v20 = (_QWORD *)(*(_QWORD *)a1 + 8 * v21);
    goto LABEL_38;
  }
LABEL_39:
  ++*(_QWORD *)(a1 + 24);
  return v11;
}

void sub_42004(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_42018(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_42028(uint64_t a1)
{

}

id sub_42030(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "setUserInterfaceStyle:", *(_QWORD *)(a1 + 32));
}

void sub_4203C(uint64_t a1)
{
  id v2;
  uint64_t v3;
  void *v4;

  v2 = objc_msgSend(objc_alloc((Class)UIColor), "initWithCGColor:", objc_msgSend(objc_retainAutorelease(*(id *)(a1 + 32)), "CGColor"));
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

BOOL TUICGFloatIsEqualFloatOrBothNaN(double a1, double a2)
{
  return a1 == a2;
}

BOOL TUICGFloatIsEqualFloatWithTolerance(double a1, double a2, double a3)
{
  return vabdd_f64(a1, a2) < a3;
}

BOOL TUICGFloatIsLessThanOrEqualFloatWithTolerance(double a1, double a2, double a3)
{
  return vabdd_f64(a1, a2) < a3 || a1 < a2;
}

BOOL TUICGFloatIsGreaterThanOrEqualFloatWithTolerance(double a1, double a2, double a3)
{
  return vabdd_f64(a1, a2) < a3 || a1 > a2;
}

BOOL TUICGFloatIsAlmostEqualFloat(double a1, double a2)
{
  return vabdd_f64(a1, a2) < 0.0001;
}

BOOL TUICGFloatIsLessThanOrAlmostEqualFloat(double a1, double a2)
{
  return vabdd_f64(a1, a2) < 0.0001 || a1 < a2;
}

BOOL TUICGFloatIsGreaterThanOrAlmostEqualFloat(double a1, double a2)
{
  return vabdd_f64(a1, a2) < 0.0001 || a1 > a2;
}

void sub_42608(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 88));
  _Unwind_Resume(a1);
}

void sub_4262C(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  objc_msgSend(WeakRetained, "_addTransactionAndProcess:", *(_QWORD *)(a1 + 32));

}

id sub_42668(uint64_t a1)
{
  id result;
  id v3;
  uint64_t v4;
  void *v5;
  id v6;
  const __CFString *v7;
  uint64_t v8;

  result = objc_msgSend(*(id *)(a1 + 32), "isCommitted");
  if ((result & 1) == 0)
  {
    v3 = objc_alloc((Class)NSException);
    v4 = *(_QWORD *)(a1 + 40);
    v7 = CFSTR("callstack");
    v8 = v4;
    v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", &v8, &v7, 1));
    v6 = objc_msgSend(v3, "initWithName:reason:userInfo:", CFSTR("UncommittedTransaction"), CFSTR("Transaction was scheduled but not committed in timely fashion (after 0.2s)"), v5);

    objc_exception_throw(v6);
  }
  return result;
}

void sub_42834(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 80), 8);
  _Unwind_Resume(a1);
}

id sub_4284C(_QWORD *a1)
{
  uint64_t v2;
  BOOL v3;

  v2 = a1[4];
  if (*(_QWORD *)(v2 + 56))
    v3 = 1;
  else
    v3 = objc_msgSend(*(id *)(v2 + 24), "count") == 0;
  *(_BYTE *)(*(_QWORD *)(a1[6] + 8) + 24) = v3;
  return objc_msgSend(*(id *)(a1[4] + 24), "addObject:", a1[5]);
}

id sub_428A0(uint64_t a1)
{
  return _objc_msgSend(*(id *)(a1 + 32), "_lq_processPendingTransactions");
}

uint64_t sub_4297C(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_4298C(uint64_t a1)
{

}

void sub_42994(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v2 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_aq_instanceForTransaction:", *(_QWORD *)(a1 + 40)));
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

id sub_42A4C(uint64_t a1)
{
  return objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 16), "removeObjectForKey:", *(_QWORD *)(a1 + 40));
}

id sub_42C2C(id *a1)
{
  id v2;
  id v3;
  void *v4;
  id v5;
  NSObject *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  unsigned __int8 v11;
  id v12;
  id v13;
  id v14;
  uint64_t v15;
  void *v16;
  id v17;
  id v18;
  void *v19;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  uint8_t v25[128];
  uint8_t buf[4];
  uint64_t v27;
  __int16 v28;
  uint64_t v29;

  v2 = objc_msgSend(a1[4], "_aq_instanceForTransaction:", a1[5]);
  v3 = a1[5];
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*((id *)a1[4] + 5), "dependencyToken"));
  objc_msgSend(v3, "dependentOn:", v4);

  objc_storeStrong((id *)a1[4] + 5, a1[5]);
  ++*((_QWORD *)a1[4] + 7);
  v5 = TUITransactionLog();
  v6 = objc_claimAutoreleasedReturnValue(v5);
  if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
  {
    v7 = a1[4];
    v8 = v7[12];
    v9 = v7[5];
    *(_DWORD *)buf = 134218242;
    v27 = v8;
    v28 = 2114;
    v29 = v9;
    _os_log_impl(&dword_0, v6, OS_LOG_TYPE_INFO, "[fid:%lu] scheduling sync transaction: %{public}@", buf, 0x16u);
  }

  v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[6], "options"));
  v11 = objc_msgSend(v10, "flags");

  if ((v11 & 8) != 0)
  {
    v23 = 0u;
    v24 = 0u;
    v21 = 0u;
    v22 = 0u;
    v12 = *((id *)a1[4] + 3);
    v13 = objc_msgSend(v12, "countByEnumeratingWithState:objects:count:", &v21, v25, 16);
    if (v13)
    {
      v14 = v13;
      v15 = *(_QWORD *)v22;
      do
      {
        v16 = 0;
        do
        {
          if (*(_QWORD *)v22 != v15)
            objc_enumerationMutation(v12);
          v17 = *(id *)(*((_QWORD *)&v21 + 1) + 8 * (_QWORD)v16);
          if (a1[6] != v17)
          {
            v18 = a1[5];
            v19 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v17, "dependencyToken", (_QWORD)v21));
            objc_msgSend(v18, "dependentOn:", v19);

          }
          v16 = (char *)v16 + 1;
        }
        while (v14 != v16);
        v14 = objc_msgSend(v12, "countByEnumeratingWithState:objects:count:", &v21, v25, 16);
      }
      while (v14);
    }

  }
  return objc_msgSend(*((id *)a1[4] + 3), "addObject:", a1[5], (_QWORD)v21);
}

id sub_42E38(uint64_t a1)
{
  return _objc_msgSend(*(id *)(a1 + 32), "_lq_processPendingTransactions");
}

uint64_t sub_42F44(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 32);
  if (result)
    return (*(uint64_t (**)(void))(result + 16))();
  return result;
}

void sub_433A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,char a33)
{
  _Block_object_dispose(&a33, 8);
  _Unwind_Resume(a1);
}

void sub_433E4(_QWORD *a1)
{
  id v2;
  NSObject *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  int v9;
  uint64_t v10;
  __int16 v11;
  uint64_t v12;

  if (objc_msgSend(*(id *)(a1[4] + 48), "containsTransaction:", a1[5]))
  {
    objc_storeStrong((id *)(*(_QWORD *)(a1[6] + 8) + 40), *(id *)(a1[4] + 48));
    if (a1[5] == *(_QWORD *)(a1[4] + 40))
    {
      v2 = TUITransactionLog();
      v3 = objc_claimAutoreleasedReturnValue(v2);
      if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
      {
        v4 = a1[4];
        v5 = *(_QWORD *)(v4 + 96);
        v6 = *(_QWORD *)(v4 + 40);
        v9 = 134218242;
        v10 = v5;
        v11 = 2114;
        v12 = v6;
        _os_log_impl(&dword_0, v3, OS_LOG_TYPE_INFO, "[fid:%lu] clearing sync transaction: %{public}@", (uint8_t *)&v9, 0x16u);
      }

      v7 = a1[4];
      v8 = *(void **)(v7 + 40);
      *(_QWORD *)(v7 + 40) = 0;

    }
  }
}

id sub_434E4(_QWORD *a1)
{
  id v2;
  uint64_t v3;
  void *v4;

  v2 = objc_msgSend(*(id *)(a1[4] + 32), "indexOfObjectIdenticalTo:", *(_QWORD *)(*(_QWORD *)(a1[6] + 8) + 40));
  v3 = a1[5];
  v4 = *(void **)(a1[4] + 32);
  if (v2 == (id)0x7FFFFFFFFFFFFFFFLL)
    return objc_msgSend(v4, "addObject:", v3);
  else
    return objc_msgSend(v4, "insertObject:atIndex:", v3);
}

_QWORD *sub_4353C(_QWORD *result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = result[4];
  v2 = *(_QWORD *)(v1 + 56);
  if (v2)
  {
    *(_QWORD *)(v1 + 56) = v2 - 1;
    v3 = result[4];
    if (!*(_QWORD *)(v3 + 56))
      return objc_msgSend(*(id *)(v3 + 8), "setSynchronousTransactionInProgress:", 0);
  }
  return result;
}

id sub_4356C(uint64_t a1)
{
  return _objc_msgSend(*(id *)(a1 + 32), "_lq_processPendingTransactions");
}

void sub_4375C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_list va;

  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_43780(uint64_t a1)
{
  void *v2;
  void *v3;
  unsigned __int8 v4;
  id v5;
  id v6;
  id v7;
  uint64_t v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  _BYTE v17[128];

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_aq_instanceForTransaction:", *(_QWORD *)(a1 + 40)));
  objc_msgSend(v2, "_aq_appendLayoutBlock:", *(_QWORD *)(a1 + 56));

  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 24) = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 56) != 0;
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 48), "options"));
  v4 = objc_msgSend(v3, "flags");

  if ((v4 & 8) != 0)
  {
    v15 = 0u;
    v16 = 0u;
    v13 = 0u;
    v14 = 0u;
    v5 = *(id *)(*(_QWORD *)(a1 + 32) + 24);
    v6 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v13, v17, 16);
    if (v6)
    {
      v7 = v6;
      v8 = *(_QWORD *)v14;
      do
      {
        v9 = 0;
        do
        {
          if (*(_QWORD *)v14 != v8)
            objc_enumerationMutation(v5);
          v10 = *(void **)(*((_QWORD *)&v13 + 1) + 8 * (_QWORD)v9);
          v11 = *(void **)(a1 + 40);
          if (v11 != v10)
          {
            v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "dependencyToken", (_QWORD)v13));
            objc_msgSend(v11, "dependentOn:", v12);

          }
          v9 = (char *)v9 + 1;
        }
        while (v7 != v9);
        v7 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v13, v17, 16);
      }
      while (v7);
    }

  }
}

id sub_438F8(uint64_t a1)
{
  return _objc_msgSend(*(id *)(a1 + 32), "_lq_processPendingTransactions");
}

void sub_44504(_Unwind_Exception *a1)
{
  _Block_object_dispose(&STACK[0x280], 8);
  _Block_object_dispose(&STACK[0x2A0], 8);
  _Block_object_dispose(&STACK[0x2D0], 8);
  _Unwind_Resume(a1);
}

void sub_445E4(_QWORD *a1)
{
  id v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  id v7;
  NSObject *v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  __int16 v13;
  uint64_t v14;

  v2 = objc_msgSend(*(id *)(a1[4] + 24), "copy");
  v3 = *(_QWORD *)(a1[5] + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

  objc_storeStrong((id *)(*(_QWORD *)(a1[6] + 8) + 40), *(id *)(a1[4] + 40));
  v5 = a1[4];
  v6 = *(void **)(v5 + 40);
  *(_QWORD *)(v5 + 40) = 0;

  *(_BYTE *)(*(_QWORD *)(a1[7] + 8) + 24) = *(_QWORD *)(a1[4] + 56) != 0;
  if (*(_QWORD *)(*(_QWORD *)(a1[6] + 8) + 40))
  {
    v7 = TUITransactionLog();
    v8 = objc_claimAutoreleasedReturnValue(v7);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
    {
      v9 = *(_QWORD *)(a1[4] + 96);
      v10 = *(_QWORD *)(*(_QWORD *)(a1[6] + 8) + 40);
      v11 = 134218242;
      v12 = v9;
      v13 = 2114;
      v14 = v10;
      _os_log_impl(&dword_0, v8, OS_LOG_TYPE_INFO, "[fid:%lu] picked up sync transaction for processing: %{public}@", (uint8_t *)&v11, 0x16u);
    }

  }
}

intptr_t sub_44718(uint64_t a1)
{
  return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

BOOL sub_44720(id a1, _TUITransaction *a2, unint64_t a3, BOOL *a4)
{
  return (~-[_TUITransaction flags](a2, "flags", a3, a4) & 3) == 0;
}

void sub_44744(uint64_t a1)
{
  id v2;
  id v3;
  id v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  _BYTE v16[128];

  v12 = 0u;
  v13 = 0u;
  v14 = 0u;
  v15 = 0u;
  v2 = *(id *)(a1 + 32);
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v12, v16, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v13;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v13 != v5)
          objc_enumerationMutation(v2);
        objc_msgSend(*(id *)(*(_QWORD *)(a1 + 40) + 24), "removeObject:", *(_QWORD *)(*((_QWORD *)&v12 + 1) + 8 * (_QWORD)v6), (_QWORD)v12);
        v6 = (char *)v6 + 1;
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v12, v16, 16);
    }
    while (v4);
  }

  if ((*(_BYTE *)(a1 + 56) & 1) != 0)
  {
    v10 = a1 + 40;
    v9 = *(_QWORD *)(a1 + 40);
    v11 = *(id *)(v10 + 8);
    v8 = *(void **)(v9 + 48);
    *(_QWORD *)(v9 + 48) = v11;
  }
  else
  {
    v7 = *(_QWORD *)(a1 + 40);
    v8 = *(void **)(v7 + 48);
    *(_QWORD *)(v7 + 48) = 0;
  }

}

void sub_44E5C(uint64_t a1)
{
  id v1;
  id v2;
  id v3;
  uint64_t v4;
  void *v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _BYTE v10[128];

  v6 = 0u;
  v7 = 0u;
  v8 = 0u;
  v9 = 0u;
  v1 = *(id *)(a1 + 32);
  v2 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v6, v10, 16);
  if (v2)
  {
    v3 = v2;
    v4 = *(_QWORD *)v7;
    do
    {
      v5 = 0;
      do
      {
        if (*(_QWORD *)v7 != v4)
          objc_enumerationMutation(v1);
        objc_msgSend(*(id *)(*((_QWORD *)&v6 + 1) + 8 * (_QWORD)v5), "removeCompletionDeferral", (_QWORD)v6);
        v5 = (char *)v5 + 1;
      }
      while (v3 != v5);
      v3 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v6, v10, 16);
    }
    while (v3);
  }

}

void sub_44F44(uint64_t a1)
{
  void *v1;
  uint64_t v2;

  v1 = *(void **)(a1 + 32);
  v2 = *(_QWORD *)(a1 + 40);
  if (v1 == *(void **)(v2 + 48))
  {
    *(_QWORD *)(v2 + 48) = 0;

  }
}

id sub_44F64(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 32), "_invokeHandlersForUpdatesApplied");
  return objc_msgSend(*(id *)(a1 + 32), "_invokeCompletions");
}

void sub_45190(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 128), 8);
  _Unwind_Resume(a1);
}

id sub_451B4(_QWORD *a1)
{
  uint64_t v2;
  void *v3;

  if (!objc_msgSend(*(id *)(a1[4] + 32), "count"))
    *(_BYTE *)(*(_QWORD *)(a1[6] + 8) + 24) = 1;
  v2 = a1[4];
  v3 = (void *)a1[5];
  if (v3 == *(void **)(v2 + 48))
  {
    *(_QWORD *)(v2 + 48) = 0;

    v2 = a1[4];
  }
  if (*(_BYTE *)(v2 + 81))
  {
    *(_BYTE *)(*(_QWORD *)(a1[6] + 8) + 24) = 0;
    v2 = a1[4];
  }
  return objc_msgSend(*(id *)(v2 + 32), "addObject:", a1[5]);
}

id sub_4522C(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_applyQueuedTransactionGroupsCheckForSync:", *(unsigned __int8 *)(a1 + 40));
}

void sub_45508(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 128), 8);
  _Unwind_Resume(a1);
}

id sub_4553C(uint64_t a1)
{
  id result;
  __int128 v3;
  uint64_t v4;
  void *v5;
  id v6;
  NSObject *v7;
  uint64_t v8;
  void *v9;
  __int128 v10;
  _QWORD v11[5];
  uint8_t buf[4];
  uint64_t v13;
  __int16 v14;
  void *v15;

  result = objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 32), "count");
  if (result)
  {
    *(_QWORD *)&v3 = 134218242;
    v10 = v3;
    do
    {
      v4 = *(_QWORD *)(a1 + 32);
      if (*(_QWORD *)(v4 + 64))
      {
        if (!*(_BYTE *)(a1 + 48))
          return result;
        result = objc_msgSend(*(id *)(v4 + 32), "indexOfObjectPassingTest:", &stru_23EAA8);
        if (result == (id)0x7FFFFFFFFFFFFFFFLL)
          return result;
        v4 = *(_QWORD *)(a1 + 32);
      }
      v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(v4 + 32), "firstObject", v10));
      objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 32), "removeObjectAtIndex:", 0);
      v6 = TUITransactionLog();
      v7 = objc_claimAutoreleasedReturnValue(v6);
      if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
      {
        v8 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 96);
        *(_DWORD *)buf = v10;
        v13 = v8;
        v14 = 2114;
        v15 = v5;
        _os_log_impl(&dword_0, v7, OS_LOG_TYPE_INFO, "[fid:%lu] dequeue group %{public}@", buf, 0x16u);
      }

      objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), "addObject:", v5);
      v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "options"));
      if ((objc_msgSend(v9, "flags") & 4) != 0)
      {
        if (objc_msgSend(v9, "animate"))
        {
          ++*(_QWORD *)(*(_QWORD *)(a1 + 32) + 64);
          v11[0] = _NSConcreteStackBlock;
          v11[1] = 3221225472;
          v11[2] = sub_4575C;
          v11[3] = &unk_23D938;
          v11[4] = *(_QWORD *)(a1 + 32);
          objc_msgSend(v5, "addCompletion:", v11);
        }
      }

      result = objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 32), "count");
    }
    while (result);
  }
  return result;
}

BOOL sub_45730(id a1, TUITransactionGroup *a2, unint64_t a3, BOOL *a4)
{
  BOOL result;

  result = -[TUITransactionGroup flags](a2, "flags", a3) & 1;
  *a4 = result;
  return result;
}

id sub_4575C(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "resumeUpdates");
}

void sub_459B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, ...)
{
  va_list va;

  va_start(va, a17);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_459DC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v2 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_aq_layoutBlocksToApply"));
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

void sub_45B2C(uint64_t a1)
{
  objc_storeStrong((id *)(*(_QWORD *)(a1 + 32) + 72), *(id *)(a1 + 40));
}

void sub_45BF0(void *a1, uint64_t a2, os_log_t log, const char *a4, ...)
{
  va_list va;

  va_start(va, a4);
  _os_log_debug_impl(a1, log, OS_LOG_TYPE_DEBUG, a4, (uint8_t *)va, 0x16u);
}

void sub_45DCC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;

  v6 = v5;

  _Unwind_Resume(a1);
}

void sub_45E6C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_45EE0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_45F7C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_46020(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_4649C(_Unwind_Exception *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  void *v11;
  void *v12;
  va_list va;

  va_start(va, a11);

  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_46574(uint64_t a1, void *a2, uint64_t a3)
{
  id v5;
  double v6;
  double v7;
  double v8;
  id v9;

  v5 = a2;
  if (a3)
    *(double *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = *(double *)(a1 + 40)
                                                                + *(double *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8)
                                                                            + 24);
  v6 = *(double *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  v7 = *(double *)(a1 + 48);
  v9 = v5;
  objc_msgSend(v5, "setComputedWidth:", *(double *)(a1 + 56));
  objc_msgSend(v9, "computeLayoutWithOrigin:", v7, v6);
  objc_msgSend(v9, "layoutSize");
  *(double *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = v8
                                                              + *(double *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8)
                                                                          + 24);

}

void sub_4660C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{

  _Unwind_Resume(a1);
}

void sub_46684(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_4678C(id a1)
{
  void *v1;
  uint64_t v2;
  void *v3;
  _QWORD v4[2];

  v4[0] = CFSTR("n");
  v4[1] = CFSTR("inherit-from");
  v1 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", v4, 2));
  v2 = objc_claimAutoreleasedReturnValue(+[TUIAttributeSet setWithArray:](TUIAttributeSet, "setWithArray:", v1));
  v3 = (void *)qword_2CB2F8;
  qword_2CB2F8 = v2;

}

id sub_47A6C(uint64_t a1, uint64_t a2, void *a3)
{
  return objc_msgSend(a3, "appendRenderOverrideObservers:", *(_QWORD *)(a1 + 32));
}

void sub_48714(id a1)
{
  void *v1;
  uint64_t v2;
  void *v3;
  _QWORD v4[6];

  v4[0] = CFSTR("halign");
  v4[1] = CFSTR("vpivot");
  v4[2] = CFSTR("halign");
  v4[3] = CFSTR("vcompressed");
  v4[4] = CFSTR("estimated-width");
  v4[5] = CFSTR("estimated-height");
  v1 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", v4, 6));
  v2 = objc_claimAutoreleasedReturnValue(+[TUIAttributeSet setWithArray:](TUIAttributeSet, "setWithArray:", v1));
  v3 = (void *)qword_2CB308;
  qword_2CB308 = v2;

}

void sub_48A4C(id a1)
{
  void *v1;
  id v2;
  void *v3;
  id v4;
  void *v5;
  _QWORD v6[2];

  v1 = (void *)objc_claimAutoreleasedReturnValue(+[TUIAttributeSet supportedAttributesSize](TUIAttributeSet, "supportedAttributesSize"));
  v2 = objc_msgSend(v1, "mutableCopy");

  v6[0] = CFSTR("halign");
  v6[1] = CFSTR("layout-mode");
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", v6, 2));
  objc_msgSend(v2, "addAttributesFromArray:", v3);

  v4 = objc_msgSend(v2, "copy");
  v5 = (void *)qword_2CB318;
  qword_2CB318 = (uint64_t)v4;

}

void sub_48B5C(id a1)
{
  void *v1;
  uint64_t v2;
  void *v3;
  _QWORD v4[5];

  v4[0] = CFSTR("valign");
  v4[1] = CFSTR("hcompressed");
  v4[2] = CFSTR("estimated-width");
  v4[3] = CFSTR("estimated-height");
  v4[4] = CFSTR("estimated-height-above-pivot");
  v1 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", v4, 5));
  v2 = objc_claimAutoreleasedReturnValue(+[TUIAttributeSet setWithArray:](TUIAttributeSet, "setWithArray:", v1));
  v3 = (void *)qword_2CB328;
  qword_2CB328 = v2;

}

void sub_4904C(uint64_t a1)
{
  void *v1;
  id v2;
  void *v3;
  void *v4;
  void *v5;
  _QWORD v6[6];

  v1 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "superclass"), "supportedAttributes"));
  v2 = objc_msgSend(v1, "mutableCopy");

  v3 = (void *)objc_claimAutoreleasedReturnValue(+[TUIAttributeSet supportedAttributesTextStyling](TUIAttributeSet, "supportedAttributesTextStyling"));
  objc_msgSend(v2, "unionSet:", v3);

  v6[0] = CFSTR("insets");
  v6[1] = CFSTR("text");
  v6[2] = CFSTR("return-key-type");
  v6[3] = CFSTR("cancel-text");
  v6[4] = CFSTR("tint");
  v6[5] = CFSTR("show-cancel-button");
  v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", v6, 6));
  objc_msgSend(v2, "addAttributesFromArray:", v4);

  v5 = (void *)qword_2CB338;
  qword_2CB338 = (uint64_t)v2;

}

void sub_491C4(id a1)
{
  void *v1;
  uint64_t v2;
  void *v3;
  const __CFString *v4;

  v4 = CFSTR("binding");
  v1 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v4, 1));
  v2 = objc_claimAutoreleasedReturnValue(+[TUIAttributeSet setWithArray:](TUIAttributeSet, "setWithArray:", v1));
  v3 = (void *)qword_2CB348;
  qword_2CB348 = v2;

}

void sub_49900(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 128));
  _Unwind_Resume(a1);
}

id sub_49924(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4;
  uint64_t v5;
  id *v6;
  id v7;
  id WeakRetained;
  id v9;
  uint64_t v10;
  id v11;
  void *v12;
  void *v13;
  uint64_t v15;

  v4 = *(_QWORD *)(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  v6 = (id *)(a1 + 96);
  v7 = a3;
  WeakRetained = objc_loadWeakRetained(v6);
  v9 = objc_msgSend(WeakRetained, "enabled");
  v10 = *(_QWORD *)(a1 + 48);
  v11 = objc_loadWeakRetained(v6);
  v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "identifier"));
  LOBYTE(v15) = *(_BYTE *)(a1 + 144);
  v13 = (void *)objc_claimAutoreleasedReturnValue(+[TUISearchBarView renderModelWithStates:actionHandler:viewState:enabled:name:identifier:editingInsets:placeholderText:style:text:returnKeyType:keyboardAppearance:cancelText:showCancel:](TUISearchBarView, "renderModelWithStates:actionHandler:viewState:enabled:name:identifier:editingInsets:placeholderText:style:text:returnKeyType:keyboardAppearance:cancelText:showCancel:", v7, v4, v5, v9, v10, v12, *(double *)(a1 + 104), *(double *)(a1 + 112), *(double *)(a1 + 120), *(double *)(a1 + 128), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 136),
                    *(_QWORD *)(a1 + 88),
                    v15));

  return v13;
}

void sub_4ABAC(id a1)
{
  void *v1;
  id v2;
  void *v3;
  id v4;

  v1 = (void *)objc_claimAutoreleasedReturnValue(+[TUIAttributeSet supportedAttributesSize](TUIAttributeSet, "supportedAttributesSize"));
  v4 = objc_msgSend(v1, "mutableCopy");

  objc_msgSend(v4, "addAttributesFromArray:", &__NSArray0__struct);
  v2 = objc_msgSend(v4, "copy");
  v3 = (void *)qword_2CB358;
  qword_2CB358 = (uint64_t)v2;

}

void sub_4AC78(id a1)
{
  void *v1;
  uint64_t v2;
  void *v3;
  const __CFString *v4;

  v4 = CFSTR("binding");
  v1 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v4, 1));
  v2 = objc_claimAutoreleasedReturnValue(+[TUIAttributeSet setWithArray:](TUIAttributeSet, "setWithArray:", v1));
  v3 = (void *)qword_2CB368;
  qword_2CB368 = v2;

}

void sub_4D128(id a1)
{
  void *v1;
  id v2;
  void *v3;
  id v4;
  void *v5;
  _QWORD v6[11];

  v1 = (void *)objc_claimAutoreleasedReturnValue(+[TUIAttributeSet supportedAttributesSizeAndIntrinsic](TUIAttributeSet, "supportedAttributesSizeAndIntrinsic"));
  v2 = objc_msgSend(v1, "mutableCopy");

  v6[0] = CFSTR("background-color");
  v6[1] = CFSTR("chart-type");
  v6[2] = CFSTR("color");
  v6[3] = CFSTR("columns");
  v6[4] = CFSTR("corner-radius");
  v6[5] = CFSTR("font");
  v6[6] = CFSTR("progress");
  v6[7] = CFSTR("shadow-color");
  v6[8] = CFSTR("spacing");
  v6[9] = CFSTR("text");
  v6[10] = CFSTR("title");
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", v6, 11));
  objc_msgSend(v2, "addAttributesFromArray:", v3);

  v4 = objc_msgSend(v2, "copy");
  v5 = (void *)qword_2CB378;
  qword_2CB378 = (uint64_t)v4;

}

void sub_4D534(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_4D590(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_4DBD0(uint64_t a1, void *a2, void *a3)
{
  id v5;

  v5 = a2;
  if ((objc_msgSend(a3, "hostedViewFlags") & 4) != 0)
    objc_msgSend(*(id *)(a1 + 32), "addObject:", v5);

}

void sub_4DDD0(id a1)
{
  uint64_t v1;
  uint64_t v2;
  id v3;

  v3 = objc_msgSend(objc_alloc((Class)UISwitch), "initWithFrame:", CGRectZero.origin.x, CGRectZero.origin.y, CGRectZero.size.width, CGRectZero.size.height);
  objc_msgSend(v3, "bounds");
  qword_2CB388 = v1;
  qword_2CB390 = v2;

}

void sub_4E990(id a1, _TUIGuideInstance *a2, double a3)
{
  -[_TUIGuideInstance setOffset:](a2, "setOffset:", a3);
}

id sub_4FB20(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 32), "_computeCurrentValue:", *(_QWORD *)(a1 + 40));
  return objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 48), "setValue:");
}

id sub_51730(void *a1, void *a2, int a3, void *a4)
{
  id v7;
  id v8;
  id v9;
  id v10;
  void *v11;
  void *v12;
  unsigned int v13;
  void *v14;
  id v15;
  id v16;
  uint64_t v17;
  void *i;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  _BYTE v29[128];

  v7 = a1;
  v8 = a2;
  v9 = a4;
  v10 = 0;
  if (v7 && v8 != v7)
  {
    v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "box"));
    v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "refId"));
    v13 = objc_msgSend(v12, "isEqualToString:", v9);

    if (v13)
    {
      v10 = v7;
    }
    else
    {
      v27 = 0u;
      v28 = 0u;
      v25 = 0u;
      v26 = 0u;
      v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "children", 0));
      v15 = objc_msgSend(v14, "countByEnumeratingWithState:objects:count:", &v25, v29, 16);
      if (v15)
      {
        v16 = v15;
        v17 = *(_QWORD *)v26;
        while (2)
        {
          for (i = 0; i != v16; i = (char *)i + 1)
          {
            if (*(_QWORD *)v26 != v17)
              objc_enumerationMutation(v14);
            v19 = *(void **)(*((_QWORD *)&v25 + 1) + 8 * (_QWORD)i);
            if ((objc_msgSend(v19, "hidden") & 1) == 0)
            {
              v20 = sub_51730(v19, v8, 0, v9);
              v21 = objc_claimAutoreleasedReturnValue(v20);
              if (v21)
              {
                v10 = (id)v21;

                goto LABEL_18;
              }
            }
          }
          v16 = objc_msgSend(v14, "countByEnumeratingWithState:objects:count:", &v25, v29, 16);
          if (v16)
            continue;
          break;
        }
      }

      if (a3)
      {
        v22 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "layoutAncestor"));
        v23 = sub_51730(v22, v7, 1, v9);
        v10 = (id)objc_claimAutoreleasedReturnValue(v23);

      }
      else
      {
        v10 = 0;
      }
    }
  }
LABEL_18:

  return v10;
}

void sub_51A34(id a1)
{
  void *v1;

  v1 = (void *)qword_2CB3A0;
  qword_2CB3A0 = (uint64_t)&off_2545A0;

}

void sub_51AD4(id a1)
{
  void *v1;

  v1 = (void *)qword_2CB3B0;
  qword_2CB3B0 = (uint64_t)&off_2545C8;

}

uint64_t TUI::Evaluation::Variables::Capture::_bitCheck(TUI::Evaluation::Variables::Capture *this, unint64_t a2)
{
  return (*(_QWORD *)(*((_QWORD *)this + 5) + ((a2 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> a2) & 1;
}

void TUI::Evaluation::Variables::Capture::create(void *a1@<X1>, void *a2@<X5>, _QWORD *a3@<X8>)
{
  id v5;
  id v6;

  v5 = a1;
  v6 = a2;
  *a3 = 0;
  a3[1] = 0;
  operator new();
}

void sub_51ED8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;

  (*(void (**)(uint64_t))(*(_QWORD *)v4 + 64))(v4);
  sub_148E8(v3);

  _Unwind_Resume(a1);
}

void TUI::Evaluation::Variables::Capture::create(TUI::Evaluation::Variables::Capture *this@<X0>, _QWORD *a2@<X8>)
{
  if (this)
    operator new();
  TUI::Evaluation::Variables::Capture::emptyClosed(a2);

}

void sub_51FAC(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  operator delete();
}

void TUI::Evaluation::Variables::Capture::emptyClosed(_QWORD *a1@<X8>)
{
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;

  if (qword_2CB3D0 != -1)
    dispatch_once(&qword_2CB3D0, &stru_23ED90);
  v3 = *(_QWORD *)algn_2CB3C8;
  *a1 = qword_2CB3C0;
  a1[1] = v3;
  if (v3)
  {
    v4 = (unint64_t *)(v3 + 8);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
}

void sub_52050(id a1)
{
  operator new();
}

void TUI::Evaluation::Variables::Capture::emptyClosedComponentPassthrough(_QWORD *a1@<X8>)
{
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;

  if (qword_2CB3E8 != -1)
    dispatch_once(&qword_2CB3E8, &stru_23EDB0);
  v3 = unk_2CB3E0;
  *a1 = qword_2CB3D8;
  a1[1] = v3;
  if (v3)
  {
    v4 = (unint64_t *)(v3 + 8);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
}

void sub_52158(id a1)
{
  operator new();
}

void sub_521FC()
{
  operator delete();
}

uint64_t TUI::Evaluation::Variables::Capture::Capture(uint64_t a1, void *a2)
{
  id v3;

  v3 = a2;
  *(_QWORD *)a1 = off_23EDE0;
  *(_QWORD *)(a1 + 8) = off_23EEA0;
  *(_QWORD *)(a1 + 16) = v3;
  *(_QWORD *)(a1 + 24) = 0;
  *(_QWORD *)(a1 + 32) = 0;
  *(_QWORD *)(a1 + 40) = 0;
  objc_storeWeak((id *)(a1 + 32), 0);
  return a1;
}

uint64_t TUI::Evaluation::Variables::Capture::Capture(uint64_t a1, void *a2, void *a3, int a4, int a5)
{
  id v9;
  id v10;
  id v11;
  _QWORD *v12;

  v9 = a2;
  v10 = a3;
  *(_QWORD *)a1 = off_23EDE0;
  *(_QWORD *)(a1 + 8) = off_23EEA0;
  v11 = v9;
  *(_QWORD *)(a1 + 32) = 0;
  *(_QWORD *)(a1 + 16) = v11;
  *(_QWORD *)(a1 + 24) = 0;
  *(_QWORD *)(a1 + 40) = malloc_type_malloc(8uLL, 0x100004000313F17uLL);
  objc_storeWeak((id *)(a1 + 32), v10);
  v12 = *(_QWORD **)(a1 + 40);
  bzero(v12, 8uLL);
  if (a4)
    *v12 |= 1uLL;
  if (a5)
    *v12 |= 2uLL;

  return a1;
}

void sub_5233C(_Unwind_Exception *a1)
{
  uint64_t v1;
  void *v2;
  void *v3;
  id *v4;

  objc_destroyWeak(v4);

  _Unwind_Resume(a1);
}

uint64_t TUI::Evaluation::Variables::Capture::Capture(uint64_t a1, unsigned int *a2, void *a3, int a4, uint64_t a5, uint64_t a6, void *a7, uint64_t a8)
{
  id v13;
  id v14;
  id v15;
  int v16;
  int v17;
  size_t v18;
  _QWORD *v19;
  unsigned int *v20;
  unint64_t v21;
  unint64_t v22;
  unsigned int v23;
  unsigned int v24;
  unsigned int v25;
  unsigned int v26;
  unint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  _QWORD *v30;
  __int16 v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  unsigned int *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int *v42;
  int v43;
  unint64_t v44;
  int v45;
  int v46;
  int v47;
  unint64_t v48;
  int v49;
  _QWORD *v50;
  unint64_t v51;
  _QWORD *v52;
  unint64_t v53;
  uint64_t v54;
  unint64_t v55;
  TUI::Evaluation::Enumerator::State *v56;
  uint64_t v57;
  unsigned int *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  const TUI::Evaluation::Enumerator::State *v62;
  unsigned int v63;
  int v64;
  int *v65;
  int v66;
  unint64_t v67;
  int v68;
  int v69;
  int v70;
  unint64_t v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  unint64_t v75;
  _OWORD *v76;
  uint64_t v77;
  unsigned int *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  int v85;
  unint64_t v86;
  int *v87;
  int v88;
  int v89;
  int v90;
  int v91;
  unint64_t v92;
  unint64_t v93;
  uint64_t v94;
  int v95;
  uint64_t v96;
  unint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  __int128 v105;
  std::__shared_weak_count *v106;
  unint64_t *p_shared_owners;
  unint64_t v108;
  int v109;
  unsigned int v110;
  unint64_t v111;
  unint64_t v112;
  int *v113;
  int v114;
  int v115;
  unint64_t v116;
  uint64_t v117;
  uint64_t v118;
  int v119;
  int v120;
  uint64_t v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  std::__shared_weak_count *v130;
  unint64_t *v131;
  unint64_t v132;
  int v133;
  unsigned int v134;
  unint64_t v135;
  unsigned int v136;
  int *v137;
  unint64_t v138;
  unint64_t v139;
  unsigned int v140;
  uint64_t v141;
  uint64_t v142;
  int v143;
  int v144;
  uint64_t v145;
  char *v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  char *v153;
  std::__shared_weak_count *v154;
  unint64_t *v155;
  unint64_t v156;
  int v157;
  unsigned int v158;
  unsigned int v159;
  unsigned int v160;
  unsigned int v161;
  unint64_t v162;
  int *v163;
  unint64_t v164;
  unint64_t v165;
  uint64_t v166;
  int v167;
  int v168;
  uint64_t v169;
  char *v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  char *v177;
  std::__shared_weak_count *v178;
  unint64_t *v179;
  unint64_t v180;
  uint64_t v182;
  int v183;
  int v184;
  int v185;
  int v186;
  int v187;
  int v188;
  int v189;
  int v190;
  int v191;
  int v192;
  int v193;
  int v194;
  int v195;
  int v196;
  int v197;
  int v198;
  int v199;
  int v200;
  void *v201;
  uint64_t v202;
  unsigned int *v203;
  int v204;
  unint64_t v205;
  unint64_t v206;
  unint64_t v207;
  unint64_t v208;
  int v209;
  id v210;
  id v211;
  id v212;
  id v213;
  id v214;
  unsigned int v215;
  int v216;
  unint64_t v217;
  uint64_t v218;
  int v219;
  unint64_t v220;
  int v221;
  unint64_t v222;
  int v223;
  unint64_t v224;
  id v225;
  id v226;
  _QWORD *v227;
  _QWORD *v228;
  _QWORD *v229;
  _QWORD *v230;
  _QWORD *v231;
  _QWORD *v233;
  unsigned int v235[4];
  std::__shared_weak_count *v236;
  uint64_t v237;
  __int128 v238;
  _BYTE v239[24];

  v13 = a3;
  v14 = a7;
  *(_QWORD *)a1 = off_23EDE0;
  *(_QWORD *)(a1 + 8) = off_23EEA0;
  v15 = v14;
  *(_QWORD *)(a1 + 32) = 0;
  *(_QWORD *)(a1 + 16) = v15;
  v16 = (a2[1] & 0xFFF) + (a2[3] & 0xFFF);
  v17 = (a2[4] & 0xFFF) + (a2[5] & 0xFFF) + (a2[2] & 0xFFF);
  v18 = 40 * (a2[6] & 0xFFF)
      + 48 * v16
      + 32 * v17
      + ((24 * (*a2 & 0xFFF) + (((a2[6] & 0xFFF) + v16 + v17 + (*a2 & 0xFFF) + 65) >> 3)) & 0x3FFFFFF8);
  *(_QWORD *)(a1 + 24) = a2;
  objc_storeWeak((id *)(a1 + 32), v13);
  v19 = malloc_type_malloc(v18, 0xA9E8B90CuLL);
  v182 = a1 + 32;
  v201 = v13;
  *(_QWORD *)(a1 + 40) = v19;
  v203 = a2;
  bzero(v19, (((a2[6] & 0xFFF)+ (unint64_t)((*a2 & 0xFFF)+ (a2[1] & 0xFFF)+ (a2[2] & 0xFFF)+ (a2[3] & 0xFFF)+ (a2[4] & 0xFFF)+ (a2[5] & 0xFFF)+ 2)+ 63) >> 3) & 0x3FFFFFF8);
  if (a4)
    *v19 |= 1uLL;
  v233 = v19;
  v202 = a1;
  v20 = *(unsigned int **)(a1 + 24);
  v21 = *v20;
  v22 = v20[1];
  v23 = v20[2];
  v24 = v20[3];
  v25 = v20[5];
  v215 = v20[4];
  v26 = v20[6];
  v27 = *v203;
  v225 = v15;
  v28 = objc_msgSend(v225, "packageBuffer", v182, v15);
  v29 = v27 & 0xFFF;
  if ((v27 & 0xFFF) != 0)
  {
    v30 = v28;
    v31 = v26;
    v32 = 0;
    v33 = (((v31 & 0xFFF)
          + (v21 & 0xFFF)
          + (v22 & 0xFFF)
          + (v23 & 0xFFF)
          + (v24 & 0xFFF)
          + (v215 & 0xFFF)
          + (v25 & 0xFFF)
          + 2
          + 63) >> 3) & 0x3FFFFFF8;
    v34 = v27 >> 12;
    v35 = (_QWORD *)((char *)v233 + v33 + 16);
    v36 = 4 * (v27 >> 12);
    do
    {
      if (v30[43] <= v34 + v32)
        v37 = 0;
      else
        v37 = (unsigned int *)(v36 + v30[42]);
      v38 = *v37;
      v21 = v38 | v21 & 0xFFFFFFFF00000000;
      v39 = (*(uint64_t (**)(uint64_t, unint64_t))(*(_QWORD *)a6 + 8))(a6, v21);
      if (a5)
      {
        if (v40 != -1)
          goto LABEL_12;
        v22 = v38 | v22 & 0xFFFFFFFF00000000;
        v39 = (*(uint64_t (**)(uint64_t, unint64_t))(*(_QWORD *)a5 + 8))(a5, v22);
      }
      if (v40 != -1)
      {
LABEL_12:
        *(_QWORD *)((char *)v233 + (((unint64_t)(v32 + 2) >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << (v32 + 2);
        v41 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v39 + 32))(v39);
        *((_DWORD *)v35 - 4) = *(_DWORD *)v41;
        *(v35 - 1) = *(id *)(v41 + 8);
        *v35 = *(_QWORD *)(v41 + 16);
      }
      ++v32;
      v35 += 3;
      v36 += 4;
    }
    while (v29 != v32);
  }

  v42 = *(int **)(v202 + 24);
  v43 = *v42;
  v44 = v42[1];
  v45 = v42[2];
  v46 = v42[3];
  v47 = v42[5];
  v209 = v42[4];
  v216 = v42[6];
  v49 = *v203;
  v48 = v203[1];
  v226 = v225;
  v50 = objc_msgSend(v226, "packageBuffer");
  v51 = v48 & 0xFFF;
  if ((v48 & 0xFFF) != 0)
  {
    v52 = v50;
    v53 = (v49 & 0xFFF) + 2;
    v54 = ((((v216 & 0xFFF)
                         + (v43 & 0xFFF)
                         + (v44 & 0xFFF)
                         + (v45 & 0xFFF)
                         + (v46 & 0xFFFu)
                         + (v209 & 0xFFF)
                         + (v47 & 0xFFFu)
                         + 2
                         + 63) >> 3)
         + 24 * (v43 & 0xFFF)) & 0x7FFFFFF8;
    v55 = v48 >> 12;
    v56 = (TUI::Evaluation::Enumerator::State *)((char *)v233 + v54);
    v57 = 4 * (v48 >> 12);
    do
    {
      if (v52[43] <= v55)
        v58 = 0;
      else
        v58 = (unsigned int *)(v57 + v52[42]);
      v59 = *v58;
      v48 = v59 | v48 & 0xFFFFFFFF00000000;
      v60 = (**(uint64_t (***)(uint64_t, unint64_t))a6)(a6, v48);
      if (a5)
      {
        if (v61 != -1)
          goto LABEL_23;
        v44 = v59 | v44 & 0xFFFFFFFF00000000;
        v60 = (**(uint64_t (***)(uint64_t, unint64_t))a5)(a5, v44);
      }
      if (v61 != -1)
      {
LABEL_23:
        *(_QWORD *)((char *)v233 + ((v53 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v53;
        v62 = (const TUI::Evaluation::Enumerator::State *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)v60 + 16))(v60);
        TUI::Evaluation::Enumerator::State::State(v56, v62);
      }
      v56 = (TUI::Evaluation::Enumerator::State *)((char *)v56 + 48);
      ++v53;
      v57 += 4;
      ++v55;
      --v51;
    }
    while (v51);
  }

  v64 = *v203;
  v63 = v203[1];
  v65 = *(int **)(v202 + 24);
  v66 = v65[1];
  v204 = *v65;
  v67 = v65[2];
  v68 = v65[3];
  v69 = v65[4];
  v70 = v65[5];
  v217 = v65[6];
  v71 = v203[2];
  v210 = v226;
  v227 = objc_msgSend(v210, "packageBuffer");
  v72 = v71 & 0xFFF;
  if ((v71 & 0xFFF) != 0)
  {
    v73 = (v64 & 0xFFF) + (v63 & 0xFFF) + 2;
    v74 = ((((v217 & 0xFFF)
                         + (v66 & 0xFFF)
                         + (v204 & 0xFFF)
                         + (v67 & 0xFFF)
                         + (v68 & 0xFFF)
                         + (v69 & 0xFFF)
                         + (v70 & 0xFFFu)
                         + 2
                         + 63) >> 3)
         + 24 * (v204 & 0xFFF)) & 0x7FFFFFF8;
    v75 = v71 >> 12;
    v76 = (_OWORD *)((char *)&v233[6 * (v66 & 0xFFF) + 2] + v74);
    v77 = 4 * (v71 >> 12);
    do
    {
      if (v227[43] <= v75)
        v78 = 0;
      else
        v78 = (unsigned int *)(v77 + v227[42]);
      v79 = *v78;
      v67 = v79 | v67 & 0xFFFFFFFF00000000;
      v81 = (*(uint64_t (**)(uint64_t, unint64_t))(*(_QWORD *)a6 + 16))(a6, v67);
      v82 = v80;
      if (a5)
      {
        if (v80 != -1)
          goto LABEL_34;
        v217 = v79 | v217 & 0xFFFFFFFF00000000;
        v81 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a5 + 16))(a5);
        v82 = v83;
      }
      if (v82 != -1)
      {
LABEL_34:
        *(_QWORD *)((char *)v233 + ((v73 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v73;
        v84 = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v81 + 40))(v81, v82);
        (*(void (**)(_BYTE *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v81 + 80))(v239, v81, v82);
        *((_QWORD *)v76 - 2) = v84;
        *((_DWORD *)v76 - 2) = *(_DWORD *)v239;
        *v76 = *(_OWORD *)&v239[8];
      }
      v76 += 2;
      ++v73;
      v77 += 4;
      ++v75;
      --v72;
    }
    while (v72);
  }

  v85 = *v203;
  v86 = v203[1];
  v87 = *(int **)(v202 + 24);
  v88 = v87[2];
  v189 = *v87;
  v193 = v87[1];
  v89 = v87[3];
  v90 = v87[4];
  v91 = v87[5];
  v197 = v87[6];
  v93 = v203[2];
  v92 = v203[3];
  v211 = v210;
  v228 = objc_msgSend(v211, "packageBuffer");
  v218 = v92 & 0xFFF;
  if ((v92 & 0xFFF) != 0)
  {
    v94 = 0;
    v205 = (v85 & 0xFFF) + (v86 & 0xFFF) + (v93 & 0xFFF) + 2;
    v95 = v193 & 0xFFF;
    v96 = ((((v197 & 0xFFF)
                         + (unint64_t)((v88 & 0xFFF)
                                            + v95
                                            + (v189 & 0xFFF)
                                            + (v89 & 0xFFF)
                                            + (v90 & 0xFFF)
                                            + (v91 & 0xFFFu)
                                            + 2)
                         + 63) >> 3)
         + 24 * (v189 & 0xFFF)) & 0x7FFFFFF8;
    v97 = v92 >> 12;
    v98 = (char *)&v233[6 * v95 + 4 * (v88 & 0xFFFu)] + v96;
    do
    {
      v99 = *(unsigned int *)(v228[42] + 4 * (v94 + v97));
      v93 = v99 | v93 & 0xFFFFFFFF00000000;
      v101 = (*(uint64_t (**)(uint64_t, unint64_t))(*(_QWORD *)a6 + 24))(a6, v93);
      v102 = v100;
      if (a5)
      {
        if (v100 != -1)
          goto LABEL_42;
        v86 = v99 | v86 & 0xFFFFFFFF00000000;
        v101 = (*(uint64_t (**)(uint64_t, unint64_t))(*(_QWORD *)a5 + 24))(a5, v86);
        v102 = v103;
      }
      if (v102 != -1)
      {
LABEL_42:
        *(_QWORD *)((char *)v233 + (((v94 + v205) >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << (v94
                                                                                          + v205);
        (*(void (**)(_BYTE *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v101 + 48))(v239, v101, v102);
        (*(void (**)(unsigned int *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v101 + 88))(v235, v101, v102);
        sub_55444(v235, a6, v211, a8, (unsigned int *)&v237);
        v104 = &v98[48 * v94];
        v105 = *(_OWORD *)v239;
        *((_QWORD *)v104 + 2) = *(_QWORD *)&v239[16];
        *(_OWORD *)v104 = v105;
        *((_DWORD *)v104 + 6) = v237;
        *((_OWORD *)v104 + 2) = v238;
        v238 = 0uLL;
        v106 = v236;
        if (v236)
        {
          p_shared_owners = (unint64_t *)&v236->__shared_owners_;
          do
            v108 = __ldaxr(p_shared_owners);
          while (__stlxr(v108 - 1, p_shared_owners));
          if (!v108)
          {
            ((void (*)(std::__shared_weak_count *))v106->__on_zero_shared)(v106);
            std::__shared_weak_count::__release_weak(v106);
          }
        }
      }
      ++v94;
    }
    while (v94 != v218);
  }

  v109 = *v203;
  v110 = v203[1];
  v111 = v203[2];
  v112 = v203[3];
  v113 = *(int **)(v202 + 24);
  v114 = v113[4];
  v194 = v113[2];
  v198 = v113[3];
  v186 = *v113;
  v190 = v113[1];
  v115 = v113[5];
  v219 = v113[6];
  v116 = v203[4];
  v212 = v211;
  v229 = objc_msgSend(v212, "packageBuffer");
  if ((v116 & 0xFFF) != 0)
  {
    v117 = v116 & 0xFFF;
    v118 = 0;
    v206 = (v109 & 0xFFF) + (v110 & 0xFFF) + (v111 & 0xFFF) + (v112 & 0xFFF) + 2;
    v119 = v194 & 0xFFF;
    v120 = (v190 & 0xFFF) + (v198 & 0xFFF);
    v121 = ((((v219 & 0xFFF)
                          + (unint64_t)(v120 + v119 + (v186 & 0xFFF) + (v114 & 0xFFF) + (v115 & 0xFFFu) + 2)
                          + 63) >> 3)
          + 24 * (v186 & 0xFFF)) & 0x7FFFFFF8;
    v220 = v116 >> 12;
    v122 = (char *)v233 + (48 * v120 + 32 * v119) + v121;
    do
    {
      v123 = *(unsigned int *)(v229[42] + 4 * (v118 + v220));
      v112 = v123 | v112 & 0xFFFFFFFF00000000;
      v125 = (*(uint64_t (**)(uint64_t, unint64_t))(*(_QWORD *)a6 + 32))(a6, v112);
      v126 = v124;
      if (a5)
      {
        if (v124 != -1)
          goto LABEL_54;
        v111 = v123 | v111 & 0xFFFFFFFF00000000;
        v125 = (*(uint64_t (**)(uint64_t, unint64_t))(*(_QWORD *)a5 + 32))(a5, v111);
        v126 = v127;
      }
      if (v126 != -1)
      {
LABEL_54:
        *(_QWORD *)((char *)v233 + (((v118 + v206) >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << (v118
                                                                                           + v206);
        v128 = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v125 + 56))(v125, v126);
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v125 + 96))(&v237, v125, v126);
        sub_55444((unsigned int *)&v237, a6, v212, a8, (unsigned int *)v239);
        *(_QWORD *)&v122[32 * v118] = v128;
        v129 = &v122[32 * v118];
        *((_DWORD *)v129 + 2) = *(_DWORD *)v239;
        *((_OWORD *)v129 + 1) = *(_OWORD *)&v239[8];
        *(_QWORD *)&v239[8] = 0;
        *(_QWORD *)&v239[16] = 0;
        v130 = (std::__shared_weak_count *)*((_QWORD *)&v238 + 1);
        if (*((_QWORD *)&v238 + 1))
        {
          v131 = (unint64_t *)(*((_QWORD *)&v238 + 1) + 8);
          do
            v132 = __ldaxr(v131);
          while (__stlxr(v132 - 1, v131));
          if (!v132)
          {
            ((void (*)(std::__shared_weak_count *))v130->__on_zero_shared)(v130);
            std::__shared_weak_count::__release_weak(v130);
          }
        }
      }
      ++v118;
    }
    while (v118 != v117);
  }

  v133 = *v203;
  v134 = v203[1];
  v136 = v203[2];
  v135 = v203[3];
  v137 = *(int **)(v202 + 24);
  v138 = v137[4];
  v195 = v137[2];
  v199 = v137[3];
  v187 = *v137;
  v191 = v137[1];
  v184 = v137[5];
  v221 = v137[6];
  v140 = v203[4];
  v139 = v203[5];
  v213 = v212;
  v230 = objc_msgSend(v213, "packageBuffer");
  if ((v139 & 0xFFF) != 0)
  {
    v141 = v139 & 0xFFF;
    v142 = 0;
    v207 = (v133 & 0xFFF) + (v134 & 0xFFF) + (v136 & 0xFFF) + (v135 & 0xFFF) + (v140 & 0xFFF) + 2;
    v143 = (v191 & 0xFFF) + (v199 & 0xFFF);
    v144 = (v195 & 0xFFF) + (v138 & 0xFFF);
    v145 = (24 * (v187 & 0xFFF) + ((v144 + v143 + (v187 & 0xFFF) + (v184 & 0xFFF) + (v221 & 0xFFFu) + 65) >> 3)) & 0x3FFFFFF8;
    v222 = v139 >> 12;
    v146 = (char *)v233 + (48 * v143 + 32 * v144) + v145;
    do
    {
      v147 = *(unsigned int *)(v230[42] + 4 * (v142 + v222));
      v138 = v147 | v138 & 0xFFFFFFFF00000000;
      v149 = (*(uint64_t (**)(uint64_t, unint64_t))(*(_QWORD *)a6 + 40))(a6, v138);
      v150 = v148;
      if (a5)
      {
        if (v148 != -1)
          goto LABEL_66;
        v135 = v147 | v135 & 0xFFFFFFFF00000000;
        v149 = (*(uint64_t (**)(uint64_t, unint64_t))(*(_QWORD *)a5 + 40))(a5, v135);
        v150 = v151;
      }
      if (v150 != -1)
      {
LABEL_66:
        *(_QWORD *)((char *)v233 + (((v142 + v207) >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << (v142
                                                                                           + v207);
        v152 = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v149 + 64))(v149, v150);
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v149 + 104))(&v237, v149, v150);
        sub_55444((unsigned int *)&v237, a6, v213, a8, (unsigned int *)v239);
        *(_QWORD *)&v146[32 * v142] = v152;
        v153 = &v146[32 * v142];
        *((_DWORD *)v153 + 2) = *(_DWORD *)v239;
        *((_OWORD *)v153 + 1) = *(_OWORD *)&v239[8];
        *(_QWORD *)&v239[8] = 0;
        *(_QWORD *)&v239[16] = 0;
        v154 = (std::__shared_weak_count *)*((_QWORD *)&v238 + 1);
        if (*((_QWORD *)&v238 + 1))
        {
          v155 = (unint64_t *)(*((_QWORD *)&v238 + 1) + 8);
          do
            v156 = __ldaxr(v155);
          while (__stlxr(v156 - 1, v155));
          if (!v156)
          {
            ((void (*)(std::__shared_weak_count *))v154->__on_zero_shared)(v154);
            std::__shared_weak_count::__release_weak(v154);
          }
        }
      }
      ++v142;
    }
    while (v142 != v141);
  }

  v157 = *v203;
  v158 = v203[1];
  v159 = v203[2];
  v160 = v203[3];
  v161 = v203[4];
  v162 = v203[5];
  v163 = *(int **)(v202 + 24);
  v196 = v163[4];
  v200 = v163[5];
  v188 = v163[2];
  v192 = v163[3];
  v183 = *v163;
  v185 = v163[1];
  v223 = v163[6];
  v164 = v203[6];
  v214 = v213;
  v231 = objc_msgSend(v214, "packageBuffer");
  if ((v164 & 0xFFF) != 0)
  {
    v165 = v164 & 0xFFF;
    v166 = 0;
    v208 = (v157 & 0xFFF) + (v158 & 0xFFF) + (v159 & 0xFFF) + (v160 & 0xFFF) + (v161 & 0xFFF) + (v162 & 0xFFF) + 2;
    v167 = (v185 & 0xFFF) + (v192 & 0xFFF);
    v168 = (v188 & 0xFFF) + (v196 & 0xFFF) + (v200 & 0xFFF);
    v169 = 48 * v167
         + 32 * v168
         + ((24 * (v183 & 0xFFF) + ((v168 + v167 + (v183 & 0xFFF) + (v223 & 0xFFFu) + 65) >> 3)) & 0x3FFFFFF8);
    v224 = v164 >> 12;
    v170 = (char *)v233 + v169;
    do
    {
      v171 = *(unsigned int *)(v231[42] + 4 * (v166 + v224));
      v162 = v171 | v162 & 0xFFFFFFFF00000000;
      v173 = (*(uint64_t (**)(uint64_t, unint64_t))(*(_QWORD *)a6 + 48))(a6, v162);
      v174 = v172;
      if (a5)
      {
        if (v172 != -1)
          goto LABEL_78;
        v164 = v171 | v164 & 0xFFFFFFFF00000000;
        v173 = (*(uint64_t (**)(uint64_t, unint64_t))(*(_QWORD *)a5 + 48))(a5, v164);
        v174 = v175;
      }
      if (v174 != -1)
      {
LABEL_78:
        *(_QWORD *)((char *)v233 + (((v166 + v208) >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << (v166
                                                                                           + v208);
        v176 = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v173 + 72))(v173, v174);
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v173 + 112))(&v237, v173, v174);
        sub_55444((unsigned int *)&v237, a6, v214, a8, (unsigned int *)v239);
        v177 = &v170[40 * v166];
        *(_QWORD *)v177 = *(id *)v176;
        *((_DWORD *)v177 + 2) = *(_DWORD *)(v176 + 8);
        *((_DWORD *)v177 + 4) = *(_DWORD *)v239;
        *(_OWORD *)(v177 + 24) = *(_OWORD *)&v239[8];
        *(_QWORD *)&v239[8] = 0;
        *(_QWORD *)&v239[16] = 0;
        v178 = (std::__shared_weak_count *)*((_QWORD *)&v238 + 1);
        if (*((_QWORD *)&v238 + 1))
        {
          v179 = (unint64_t *)(*((_QWORD *)&v238 + 1) + 8);
          do
            v180 = __ldaxr(v179);
          while (__stlxr(v180 - 1, v179));
          if (!v180)
          {
            ((void (*)(std::__shared_weak_count *))v178->__on_zero_shared)(v178);
            std::__shared_weak_count::__release_weak(v178);
          }
        }
      }
      ++v166;
    }
    while (v166 != v165);
  }

  return v202;
}

void sub_532F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, id *a9, void *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15, uint64_t a16, uint64_t a17, uint64_t a18, void *a19)
{

  objc_destroyWeak(a9);
  _Unwind_Resume(a1);
}

uint64_t sub_533E0(_DWORD *a1, uint64_t a2)
{
  return 48 * ((a1[1] & 0xFFF) + (a1[3] & 0xFFF))
       + 32 * (a1[2] & 0xFFFu)
       + 32 * a2
       + (((((a1[6] & 0xFFF)
                         + (unint64_t)((a1[3] & 0xFFF)
                                            + (a1[2] & 0xFFF)
                                            + (a1[1] & 0xFFF)
                                            + (*a1 & 0xFFF)
                                            + (a1[4] & 0xFFF)
                                            + (a1[5] & 0xFFFu)
                                            + 2)
                         + 63) >> 3)
         + 24 * (*a1 & 0xFFF)) & 0x7FFFFFF8);
}

uint64_t sub_53458(_DWORD *a1)
{
  return (*a1 & 0xFFF) + (a1[1] & 0xFFF) + (a1[2] & 0xFFF) + (a1[3] & 0xFFF) + (a1[4] & 0xFFFu) + 2;
}

uint64_t sub_53490(_DWORD *a1, uint64_t a2)
{
  int v2;

  v2 = (a1[1] & 0xFFF) + (a1[3] & 0xFFF);
  return 48 * v2
       + 32 * ((a1[2] & 0xFFF) + (a1[4] & 0xFFFu))
       + 32 * a2
       + (((((a1[6] & 0xFFF)
                         + (unint64_t)(v2
                                            + (a1[4] & 0xFFF)
                                            + (a1[2] & 0xFFF)
                                            + (*a1 & 0xFFF)
                                            + (a1[5] & 0xFFFu)
                                            + 2)
                         + 63) >> 3)
         + 24 * (*a1 & 0xFFF)) & 0x7FFFFFF8);
}

uint64_t sub_53508(_DWORD *a1)
{
  return (*a1 & 0xFFF) + (a1[1] & 0xFFF) + (a1[2] & 0xFFF) + (a1[3] & 0xFFF) + (a1[4] & 0xFFF) + (a1[5] & 0xFFFu) + 2;
}

uint64_t sub_53548(_DWORD *a1, uint64_t a2)
{
  int v2;
  int v3;

  v2 = (a1[1] & 0xFFF) + (a1[3] & 0xFFF);
  v3 = (a1[2] & 0xFFF) + (a1[4] & 0xFFF);
  return 48 * v2
       + 32 * (v3 + (a1[5] & 0xFFFu))
       + 40 * a2
       + ((24 * (*a1 & 0xFFF) + (((a1[6] & 0xFFF) + (a1[5] & 0xFFF) + (*a1 & 0xFFFu) + v3 + v2 + 65) >> 3)) & 0x3FFF8);
}

void TUI::Evaluation::Variables::Capture::~Capture(TUI::Evaluation::Variables::Capture *this)
{
  uint64_t v2;
  int *v3;
  int v4;
  _DWORD *v5;
  int v6;
  _DWORD *v7;
  int v8;
  int v9;
  _DWORD *v10;
  _DWORD *v11;
  int v12;
  int v13;
  _DWORD *v14;
  int *v15;
  __int16 v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  id *v20;
  int *v21;
  int v22;
  int v23;
  unsigned int v24;
  uint64_t v25;
  unint64_t v26;
  id *v27;
  int *v28;
  int v29;
  int v30;
  uint64_t v31;
  unsigned int v32;
  unint64_t v33;
  uint64_t v34;
  int *v35;
  int v36;
  uint64_t v37;
  int v38;
  int v39;
  unint64_t v40;
  uint64_t v41;
  int *v42;
  int v43;
  uint64_t v44;
  int v45;
  int v46;
  unint64_t v47;
  uint64_t v48;
  int *v49;
  int v50;
  uint64_t v51;
  int v52;
  int v53;
  int v54;
  int v55;
  unint64_t v56;
  uint64_t v57;
  int *v58;
  int v59;
  int v60;
  uint64_t v61;
  int v62;
  int v63;
  int v64;
  int v65;
  int v66;
  unint64_t v67;
  uint64_t v68;

  *(_QWORD *)this = off_23EDE0;
  *((_QWORD *)this + 1) = off_23EEA0;
  v2 = *((_QWORD *)this + 5);
  if (v2)
  {
    v3 = (int *)*((_QWORD *)this + 3);
    if (v3)
    {
      v4 = *v3;
      v5 = v3 + 1;
      v6 = v3[1];
      v7 = v3 + 2;
      v8 = v3[2];
      v10 = v3 + 3;
      v9 = v3[3];
      v11 = v3 + 4;
      v12 = v3[4];
      v14 = v3 + 5;
      v13 = v3[5];
      v17 = v3[6];
      v15 = v3 + 6;
      v16 = v17;
      v18 = v4 & 0xFFF;
      if ((v4 & 0xFFF) != 0)
      {
        v19 = 0;
        v20 = (id *)(((((v16 & 0xFFF)
                      + (unint64_t)((_DWORD)v18
                                         + (v6 & 0xFFF)
                                         + (v8 & 0xFFF)
                                         + (v9 & 0xFFF)
                                         + (v12 & 0xFFF)
                                         + (v13 & 0xFFFu)
                                         + 2)
                      + 63) >> 3) & 0x3FFFFFF8)
                   + v2
                   + 8);
        do
        {
          if (((*(_QWORD *)(v2 + (((unint64_t)(v19 + 2) >> 3) & 0x1FFFFFFFFFFFFFF8)) >> (v19
                                                                                                 + 2)) & 1) != 0)

          ++v19;
          v20 += 3;
        }
        while (v18 != v19);
        v21 = (int *)*((_QWORD *)this + 3);
        v5 = v21 + 1;
        v7 = v21 + 2;
        v10 = v21 + 3;
        v11 = v21 + 4;
        v14 = v21 + 5;
        v22 = *v21;
        v15 = v21 + 6;
        v23 = v22 & 0xFFF;
        v24 = v23 + 2;
      }
      else
      {
        v23 = 0;
        v24 = 2;
      }
      v25 = *v5 & 0xFFFLL;
      if ((*v5 & 0xFFF) != 0)
      {
        v26 = v24;
        v27 = (id *)((((((*v15 & 0xFFF)
                                     + (unint64_t)(v24
                                                        + v25
                                                        + (*v7 & 0xFFF)
                                                        + (*v10 & 0xFFF)
                                                        + (*v11 & 0xFFF)
                                                        + (*v14 & 0xFFF))
                                     + 63) >> 3)
                     + 24 * v23) & 0x7FFFFFF8)
                   + v2);
        do
        {
          if (((*(_QWORD *)(v2 + ((v26 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v26) & 1) != 0)
            TUI::Evaluation::Enumerator::State::~State(v27);
          v27 += 6;
          ++v26;
          --v25;
        }
        while (v25);
        v28 = (int *)*((_QWORD *)this + 3);
        v5 = v28 + 1;
        v7 = v28 + 2;
        v10 = v28 + 3;
        v11 = v28 + 4;
        v14 = v28 + 5;
        v29 = *v28;
        v15 = v28 + 6;
        v23 = v29 & 0xFFF;
        v24 = v23 + 2;
        v30 = 24 * v23;
      }
      else
      {
        v30 = 24 * v23;
      }
      v31 = *v7 & 0xFFFLL;
      if ((*v7 & 0xFFF) != 0)
      {
        v32 = *v5 & 0xFFF;
        v33 = v24 + v32;
        v34 = v2
            + 48 * v32
            + (((((*v15 & 0xFFF)
                              + (unint64_t)((_DWORD)v33
                                                 + (_DWORD)v31
                                                 + (*v10 & 0xFFF)
                                                 + (*v11 & 0xFFF)
                                                 + (*v14 & 0xFFFu))
                              + 63) >> 3)
              + v30) & 0x7FFFFFF8)
            + 16;
        do
        {
          if (((*(_QWORD *)(v2 + ((v33 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v33) & 1) != 0)
            v34 = sub_148E8(v34);
          v34 += 32;
          ++v33;
          --v31;
        }
        while (v31);
        v35 = (int *)*((_QWORD *)this + 3);
        v5 = v35 + 1;
        v7 = v35 + 2;
        v10 = v35 + 3;
        v11 = v35 + 4;
        v36 = *v35;
        v15 = v35 + 6;
        v14 = v35 + 5;
        v23 = v36 & 0xFFF;
        v24 = v23 + 2;
        v30 = 24 * v23;
      }
      v37 = *v10 & 0xFFFLL;
      if ((*v10 & 0xFFF) != 0)
      {
        v38 = *v5 & 0xFFF;
        v39 = *v7 & 0xFFF;
        v40 = v24 + v38 + v39;
        v41 = (48 * v38 + 32 * v39)
            + v2
            + (((((*v15 & 0xFFF)
                              + (unint64_t)(v40 + (_DWORD)v37 + (*v11 & 0xFFF) + (*v14 & 0xFFF))
                              + 63) >> 3)
              + v30) & 0x7FFFFFF8)
            + 32;
        do
        {
          if (((*(_QWORD *)(v2 + ((v40 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v40) & 1) != 0)
            v41 = sub_148E8(v41);
          v41 += 48;
          ++v40;
          --v37;
        }
        while (v37);
        v42 = (int *)*((_QWORD *)this + 3);
        v5 = v42 + 1;
        v7 = v42 + 2;
        v10 = v42 + 3;
        v11 = v42 + 4;
        v14 = v42 + 5;
        v43 = *v42;
        v15 = v42 + 6;
        v23 = v43 & 0xFFF;
        v30 = 24 * v23;
      }
      v44 = *v11 & 0xFFFLL;
      if ((*v11 & 0xFFF) != 0)
      {
        v45 = *v7 & 0xFFF;
        v46 = (*v10 & 0xFFF) + (*v5 & 0xFFF);
        v47 = (v46 + v23 + v45 + 2);
        v48 = (48 * v46 + 32 * v45)
            + v2
            + (((((*v15 & 0xFFF)
                              + (unint64_t)(v47 + (_DWORD)v44 + (*v14 & 0xFFF))
                              + 63) >> 3)
              + v30) & 0x7FFFFFF8)
            + 16;
        do
        {
          if (((*(_QWORD *)(v2 + ((v47 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v47) & 1) != 0)
            v48 = sub_148E8(v48);
          v48 += 32;
          ++v47;
          --v44;
        }
        while (v44);
        v49 = (int *)*((_QWORD *)this + 3);
        v5 = v49 + 1;
        v7 = v49 + 2;
        v10 = v49 + 3;
        v11 = v49 + 4;
        v14 = v49 + 5;
        v50 = *v49;
        v15 = v49 + 6;
        v23 = v50 & 0xFFF;
        v30 = 24 * v23;
      }
      v51 = *v14 & 0xFFFLL;
      if ((*v14 & 0xFFF) != 0)
      {
        v52 = *v5 & 0xFFF;
        v53 = *v10 & 0xFFF;
        v54 = (*v11 & 0xFFF) + (*v7 & 0xFFF);
        v55 = v54 + v23 + 2;
        v56 = (v55 + v52 + v53);
        v57 = (48 * (v53 + v52) + 32 * v54)
            + v2
            + ((v30 + (((*v15 & 0xFFFu) + v53 + v52 + (_DWORD)v51 + v55 + 63) >> 3)) & 0x3FFFFFF8)
            + 16;
        do
        {
          if (((*(_QWORD *)(v2 + ((v56 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v56) & 1) != 0)
            v57 = sub_148E8(v57);
          v57 += 32;
          ++v56;
          --v51;
        }
        while (v51);
        v58 = (int *)*((_QWORD *)this + 3);
        v5 = v58 + 1;
        v7 = v58 + 2;
        v10 = v58 + 3;
        v11 = v58 + 4;
        v14 = v58 + 5;
        v59 = *v58;
        v15 = v58 + 6;
        v23 = v59 & 0xFFF;
        v30 = 24 * v23;
      }
      v60 = *v15;
      v61 = v60 & 0xFFF;
      if ((v60 & 0xFFF) != 0)
      {
        v62 = *v5 & 0xFFF;
        v63 = *v7 & 0xFFF;
        v64 = *v10 & 0xFFF;
        v65 = *v11 & 0xFFF;
        v66 = *v14 & 0xFFF;
        v67 = (v23 + v62 + v63 + v64 + v65 + v66 + 2);
        v68 = 48 * (v64 + v62)
            + 32 * (v65 + v63 + v66)
            + ((v30 + ((v66 + v23 + v64 + v62 + v65 + v63 + v61 + 65) >> 3)) & 0x3FFFFFF8)
            + v2
            + 24;
        do
        {
          if (((*(_QWORD *)(v2 + ((v67 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v67) & 1) != 0)
          {
            sub_148E8(v68);

          }
          v68 += 40;
          ++v67;
          --v61;
        }
        while (v61);
      }
    }
    free(*((void **)this + 5));
  }
  objc_destroyWeak((id *)this + 4);

}

{
  TUI::Evaluation::Variables::Capture::~Capture(this);
  operator delete();
}

void `non-virtual thunk to'TUI::Evaluation::Variables::Capture::~Capture(TUI::Evaluation::Variables::Capture *this)
{
  TUI::Evaluation::Variables::Capture::~Capture((TUI::Evaluation::Variables::Capture *)((char *)this - 8));
}

{
  TUI::Evaluation::Variables::Capture::~Capture((TUI::Evaluation::Variables::Capture *)((char *)this - 8));
  operator delete();
}

uint64_t TUI::Evaluation::Variables::Capture::reference(uint64_t a1, uint64_t a2)
{
  _DWORD *v2;

  v2 = *(_DWORD **)(a1 + 24);
  return *(_QWORD *)(a1 + 40)
       + 48 * a2
       + (((((v2[6] & 0xFFF)
                         + (unint64_t)((*v2 & 0xFFF)
                                            + (v2[1] & 0xFFF)
                                            + (v2[2] & 0xFFF)
                                            + (v2[3] & 0xFFF)
                                            + (v2[4] & 0xFFF)
                                            + (v2[5] & 0xFFFu)
                                            + 2)
                         + 63) >> 3)
         + 24 * (*v2 & 0xFFF)) & 0x7FFFFFF8);
}

{
  _DWORD *v2;
  int v3;
  int v4;

  v2 = *(_DWORD **)(a1 + 24);
  v3 = (v2[1] & 0xFFF) + (v2[3] & 0xFFF);
  v4 = (v2[2] & 0xFFF) + (v2[4] & 0xFFF) + (v2[5] & 0xFFF);
  return *(_QWORD *)(a1 + 40)
       + 40 * a2
       + (48 * v3 + 32 * v4)
       + ((24 * (*v2 & 0xFFF) + ((v4 + v3 + (*v2 & 0xFFF) + (v2[6] & 0xFFFu) + 65) >> 3)) & 0x3FFFFFF8);
}

uint64_t `non-virtual thunk to'TUI::Evaluation::Variables::Capture::reference(uint64_t a1, uint64_t a2)
{
  return TUI::Evaluation::Variables::Capture::reference(a1 - 8, a2);
}

{
  return TUI::Evaluation::Variables::Capture::reference(a1 - 8, a2);
}

void *TUI::Evaluation::Variables::Capture::mutate()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_2CB420);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_2CB420))
  {
    TUI::Evaluation::Enumerator::State::State((TUI::Evaluation::Enumerator::State *)&unk_2CB3F0);
    __cxa_guard_release(&qword_2CB420);
  }
  return &unk_2CB3F0;
}

void sub_53CD4(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_2CB420);
  _Unwind_Resume(a1);
}

void *`non-virtual thunk to'TUI::Evaluation::Variables::Capture::mutate()
{
  TUI::Evaluation::Variables::Capture::mutate();
  return &unk_2CB3F0;
}

unint64_t TUI::Evaluation::Variables::Capture::reference(uint64_t a1, uint64_t a2)
{
  _DWORD *v2;

  v2 = *(_DWORD **)(a1 + 24);
  return *(_QWORD *)(a1 + 40)
       + 24 * a2
       + ((((v2[6] & 0xFFF)
          + (unint64_t)((*v2 & 0xFFF)
                             + (v2[1] & 0xFFF)
                             + (v2[2] & 0xFFF)
                             + (v2[3] & 0xFFF)
                             + (v2[4] & 0xFFF)
                             + (v2[5] & 0xFFFu)
                             + 2)
          + 63) >> 3) & 0x3FFFFFF8);
}

unint64_t `non-virtual thunk to'TUI::Evaluation::Variables::Capture::reference(uint64_t a1, uint64_t a2)
{
  return TUI::Evaluation::Variables::Capture::reference(a1 - 8, a2);
}

uint64_t TUI::Evaluation::Variables::Capture::copy(uint64_t a1, uint64_t a2)
{
  _DWORD *v2;

  v2 = *(_DWORD **)(a1 + 24);
  return *(_QWORD *)(*(_QWORD *)(a1 + 40)
                   + 32 * a2
                   + 48 * (v2[1] & 0xFFF)
                   + (((((v2[6] & 0xFFF)
                                     + (unint64_t)((v2[1] & 0xFFF)
                                                        + (*v2 & 0xFFF)
                                                        + (v2[2] & 0xFFF)
                                                        + (v2[3] & 0xFFF)
                                                        + (v2[4] & 0xFFF)
                                                        + (v2[5] & 0xFFFu)
                                                        + 2)
                                     + 63) >> 3)
                     + 24 * (*v2 & 0xFFF)) & 0x7FFFFFF8));
}

{
  _DWORD *v2;
  int v3;

  v2 = *(_DWORD **)(a1 + 24);
  v3 = (v2[1] & 0xFFF) + (v2[3] & 0xFFF);
  return *(_QWORD *)(*(_QWORD *)(a1 + 40)
                   + 32 * a2
                   + 48 * v3
                   + 32 * (v2[2] & 0xFFFu)
                   + (((((v2[6] & 0xFFF)
                                     + (unint64_t)(v3
                                                        + (v2[2] & 0xFFF)
                                                        + (*v2 & 0xFFF)
                                                        + (v2[4] & 0xFFF)
                                                        + (v2[5] & 0xFFFu)
                                                        + 2)
                                     + 63) >> 3)
                     + 24 * (*v2 & 0xFFF)) & 0x7FFFFFF8));
}

{
  _DWORD *v2;
  int v3;
  int v4;

  v2 = *(_DWORD **)(a1 + 24);
  v3 = (v2[1] & 0xFFF) + (v2[3] & 0xFFF);
  v4 = (v2[2] & 0xFFF) + (v2[4] & 0xFFF);
  return *(_QWORD *)(*(_QWORD *)(a1 + 40)
                   + 32 * a2
                   + (48 * v3 + 32 * v4)
                   + ((24 * (*v2 & 0xFFF) + (((v2[6] & 0xFFF) + (*v2 & 0xFFF) + (v2[5] & 0xFFFu) + v4 + v3 + 65) >> 3)) & 0x3FFFFFF8));
}

uint64_t `non-virtual thunk to'TUI::Evaluation::Variables::Capture::copy(uint64_t a1, uint64_t a2)
{
  return TUI::Evaluation::Variables::Capture::copy(a1 - 8, a2);
}

{
  return TUI::Evaluation::Variables::Capture::copy(a1 - 8, a2);
}

{
  return TUI::Evaluation::Variables::Capture::copy(a1 - 8, a2);
}

__n128 TUI::Evaluation::Variables::Capture::copy@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, __n128 *a3@<X8>)
{
  _DWORD *v3;
  __n128 *v4;
  __n128 result;

  v3 = *(_DWORD **)(a1 + 24);
  v4 = (__n128 *)(*(_QWORD *)(a1 + 40)
                + 48 * a2
                + 48 * (v3[1] & 0xFFF)
                + 32 * (v3[2] & 0xFFFu)
                + (((((v3[6] & 0xFFF)
                                  + (unint64_t)((v3[2] & 0xFFF)
                                                     + (v3[1] & 0xFFF)
                                                     + (*v3 & 0xFFF)
                                                     + (v3[3] & 0xFFF)
                                                     + (v3[4] & 0xFFF)
                                                     + (v3[5] & 0xFFFu)
                                                     + 2)
                                  + 63) >> 3)
                  + 24 * (*v3 & 0xFFF)) & 0x7FFFFFF8));
  result = *v4;
  *a3 = *v4;
  a3[1].n128_u64[0] = v4[1].n128_u64[0];
  return result;
}

double `non-virtual thunk to'TUI::Evaluation::Variables::Capture::copy@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, __n128 *a3@<X8>)
{
  double result;

  *(_QWORD *)&result = TUI::Evaluation::Variables::Capture::copy(a1 - 8, a2, a3).n128_u64[0];
  return result;
}

uint64_t TUI::Evaluation::Variables::Capture::closureAndCapture@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  _DWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;

  v3 = *(_DWORD **)(result + 24);
  v4 = *(_QWORD *)(result + 40)
     + 32 * a2
     + 48 * (v3[1] & 0xFFF)
     + (((((v3[6] & 0xFFF)
                       + (unint64_t)((v3[1] & 0xFFF)
                                          + (*v3 & 0xFFF)
                                          + (v3[2] & 0xFFF)
                                          + (v3[3] & 0xFFF)
                                          + (v3[4] & 0xFFF)
                                          + (v3[5] & 0xFFFu)
                                          + 2)
                       + 63) >> 3)
       + 24 * (*v3 & 0xFFF)) & 0x7FFFFFF8);
  *(_DWORD *)a3 = *(_DWORD *)(v4 + 8);
  v6 = *(_QWORD *)(v4 + 16);
  v5 = *(_QWORD *)(v4 + 24);
  *(_QWORD *)(a3 + 8) = v6;
  *(_QWORD *)(a3 + 16) = v5;
  if (v5)
  {
    v7 = (unint64_t *)(v5 + 8);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  return result;
}

{
  _DWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;

  v3 = *(_DWORD **)(result + 24);
  v4 = *(_QWORD *)(result + 40)
     + 48 * a2
     + 48 * (v3[1] & 0xFFF)
     + 32 * (v3[2] & 0xFFFu)
     + (((((v3[6] & 0xFFF)
                       + (unint64_t)((v3[2] & 0xFFF)
                                          + (v3[1] & 0xFFF)
                                          + (*v3 & 0xFFF)
                                          + (v3[3] & 0xFFF)
                                          + (v3[4] & 0xFFF)
                                          + (v3[5] & 0xFFFu)
                                          + 2)
                       + 63) >> 3)
       + 24 * (*v3 & 0xFFF)) & 0x7FFFFFF8);
  *(_DWORD *)a3 = *(_DWORD *)(v4 + 24);
  v6 = *(_QWORD *)(v4 + 32);
  v5 = *(_QWORD *)(v4 + 40);
  *(_QWORD *)(a3 + 8) = v6;
  *(_QWORD *)(a3 + 16) = v5;
  if (v5)
  {
    v7 = (unint64_t *)(v5 + 8);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  return result;
}

{
  _DWORD *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t *v8;
  unint64_t v9;

  v3 = *(_DWORD **)(result + 24);
  v4 = (v3[1] & 0xFFF) + (v3[3] & 0xFFF);
  v5 = *(_QWORD *)(result + 40)
     + 32 * a2
     + 48 * v4
     + 32 * (v3[2] & 0xFFFu)
     + (((((v3[6] & 0xFFF)
                       + (unint64_t)(v4 + (v3[2] & 0xFFF) + (*v3 & 0xFFF) + (v3[4] & 0xFFF) + (v3[5] & 0xFFFu) + 2)
                       + 63) >> 3)
       + 24 * (*v3 & 0xFFF)) & 0x7FFFFFF8);
  *(_DWORD *)a3 = *(_DWORD *)(v5 + 8);
  v7 = *(_QWORD *)(v5 + 16);
  v6 = *(_QWORD *)(v5 + 24);
  *(_QWORD *)(a3 + 8) = v7;
  *(_QWORD *)(a3 + 16) = v6;
  if (v6)
  {
    v8 = (unint64_t *)(v6 + 8);
    do
      v9 = __ldxr(v8);
    while (__stxr(v9 + 1, v8));
  }
  return result;
}

{
  _DWORD *v3;
  int v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v3 = *(_DWORD **)(result + 24);
  v4 = (v3[1] & 0xFFF) + (v3[3] & 0xFFF);
  v5 = (v3[2] & 0xFFF) + (v3[4] & 0xFFF);
  v6 = *(_QWORD *)(result + 40)
     + 32 * a2
     + (48 * v4 + 32 * v5)
     + ((24 * (*v3 & 0xFFF) + (((v3[6] & 0xFFF) + (*v3 & 0xFFF) + (v3[5] & 0xFFFu) + v5 + v4 + 65) >> 3)) & 0x3FFF8);
  *(_DWORD *)a3 = *(_DWORD *)(v6 + 8);
  v8 = *(_QWORD *)(v6 + 16);
  v7 = *(_QWORD *)(v6 + 24);
  *(_QWORD *)(a3 + 8) = v8;
  *(_QWORD *)(a3 + 16) = v7;
  if (v7)
  {
    v9 = (unint64_t *)(v7 + 8);
    do
      v10 = __ldxr(v9);
    while (__stxr(v10 + 1, v9));
  }
  return result;
}

{
  _DWORD *v3;
  int v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v3 = *(_DWORD **)(result + 24);
  v4 = (v3[1] & 0xFFF) + (v3[3] & 0xFFF);
  v5 = (v3[2] & 0xFFF) + (v3[4] & 0xFFF) + (v3[5] & 0xFFF);
  v6 = *(_QWORD *)(result + 40)
     + 40 * a2
     + (48 * v4 + 32 * v5)
     + ((24 * (*v3 & 0xFFF) + ((v5 + v4 + (*v3 & 0xFFF) + (v3[6] & 0xFFFu) + 65) >> 3)) & 0x3FFFFFF8);
  *(_DWORD *)a3 = *(_DWORD *)(v6 + 16);
  v8 = *(_QWORD *)(v6 + 24);
  v7 = *(_QWORD *)(v6 + 32);
  *(_QWORD *)(a3 + 8) = v8;
  *(_QWORD *)(a3 + 16) = v7;
  if (v7)
  {
    v9 = (unint64_t *)(v7 + 8);
    do
      v10 = __ldxr(v9);
    while (__stxr(v10 + 1, v9));
  }
  return result;
}

uint64_t `non-virtual thunk to'TUI::Evaluation::Variables::Capture::closureAndCapture@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return TUI::Evaluation::Variables::Capture::closureAndCapture(a1 - 8, a2, a3);
}

{
  return TUI::Evaluation::Variables::Capture::closureAndCapture(a1 - 8, a2, a3);
}

{
  return TUI::Evaluation::Variables::Capture::closureAndCapture(a1 - 8, a2, a3);
}

{
  return TUI::Evaluation::Variables::Capture::closureAndCapture(a1 - 8, a2, a3);
}

{
  return TUI::Evaluation::Variables::Capture::closureAndCapture(a1 - 8, a2, a3);
}

uint64_t TUI::Evaluation::Variables::Capture::lookup(uint64_t a1, int a2)
{
  id v4;
  int v5;
  unint64_t v6;
  uint64_t Name;
  unint64_t v8;
  unint64_t v10[2];

  if (!*(_QWORD *)(a1 + 40) || !*(_QWORD *)(a1 + 24))
    return 0;
  v4 = objc_msgSend(*(id *)(a1 + 16), "packageBuffer");
  if ((~a2 & 0xFFFF0000) != 0)
    v5 = (_WORD)a2 == 0xFFFF ? TUINameNil : a2;
  else
    v5 = TUINameNil;
  v6 = *(unsigned int *)(*(_QWORD *)(a1 + 24) + 4);
  v10[0] = v6 >> 12;
  v10[1] = v6 & 0xFFF;
  Name = TUI::Package::Buffer::findName((uint64_t)v4, v5, v10);
  if (Name == -1)
    return 0;
  v8 = (**(_DWORD **)(a1 + 24) & 0xFFF) + Name + 2;
  if (((1 << v8) & *(_QWORD *)(*(_QWORD *)(a1 + 40) + ((v8 >> 3) & 0x1FFFFFFFFFFFFFF8))) != 0)
    return a1 + 8;
  else
    return 0;
}

{
  id v4;
  int v5;
  unint64_t v6;
  uint64_t Name;
  unint64_t v9[2];

  if (!*(_QWORD *)(a1 + 40) || !*(_QWORD *)(a1 + 24))
    return 0;
  v4 = objc_msgSend(*(id *)(a1 + 16), "packageBuffer");
  if ((~a2 & 0xFFFF0000) != 0)
    v5 = (_WORD)a2 == 0xFFFF ? TUINameNil : a2;
  else
    v5 = TUINameNil;
  v6 = **(unsigned int **)(a1 + 24);
  v9[0] = v6 >> 12;
  v9[1] = v6 & 0xFFF;
  Name = TUI::Package::Buffer::findName((uint64_t)v4, v5, v9);
  if (Name == -1)
    return 0;
  if ((*(_QWORD *)(*(_QWORD *)(a1 + 40) + (((unint64_t)(Name + 2) >> 3) & 0x1FFFFFFFFFFFFFF8)) & (1 << (Name + 2))) != 0)
    return a1 + 8;
  return 0;
}

{
  id v4;
  int v5;
  unint64_t v6;
  uint64_t Name;
  unint64_t v9[2];

  if (!*(_QWORD *)(a1 + 40) || !*(_QWORD *)(a1 + 24))
    return 0;
  v4 = objc_msgSend(*(id *)(a1 + 16), "packageBuffer");
  if ((~a2 & 0xFFFF0000) != 0)
    v5 = (_WORD)a2 == 0xFFFF ? TUINameNil : a2;
  else
    v5 = TUINameNil;
  v6 = *(unsigned int *)(*(_QWORD *)(a1 + 24) + 8);
  v9[0] = v6 >> 12;
  v9[1] = v6 & 0xFFF;
  Name = TUI::Package::Buffer::findName((uint64_t)v4, v5, v9);
  if (Name == -1)
    return 0;
  if (((1 << (Name + **(_BYTE **)(a1 + 24) + *(_BYTE *)(*(_QWORD *)(a1 + 24) + 4) + 2)) & *(_QWORD *)(*(_QWORD *)(a1 + 40) + (((Name + (unint64_t)((**(_DWORD **)(a1 + 24) & 0xFFF) + (*(_DWORD *)(*(_QWORD *)(a1 + 24) + 4) & 0xFFFu) + 2)) >> 3) & 0x1FFFFFFFFFFFFFF8))) != 0)
    return a1 + 8;
  return 0;
}

{
  id v4;
  int v5;
  unint64_t v6;
  uint64_t Name;
  unint64_t v9[2];

  if (!*(_QWORD *)(a1 + 40) || !*(_QWORD *)(a1 + 24))
    return 0;
  v4 = objc_msgSend(*(id *)(a1 + 16), "packageBuffer");
  if ((~a2 & 0xFFFF0000) != 0)
    v5 = (_WORD)a2 == 0xFFFF ? TUINameNil : a2;
  else
    v5 = TUINameNil;
  v6 = *(unsigned int *)(*(_QWORD *)(a1 + 24) + 12);
  v9[0] = v6 >> 12;
  v9[1] = v6 & 0xFFF;
  Name = TUI::Package::Buffer::findName((uint64_t)v4, v5, v9);
  if (Name == -1)
    return 0;
  if (((1 << (Name
               + **(_BYTE **)(a1 + 24)
               + *(_BYTE *)(*(_QWORD *)(a1 + 24) + 4)
               + *(_BYTE *)(*(_QWORD *)(a1 + 24) + 8)
               + 2)) & *(_QWORD *)(*(_QWORD *)(a1 + 40)
                                 + (((Name
                                    + (unint64_t)((**(_DWORD **)(a1 + 24) & 0xFFF)
                                                       + (*(_DWORD *)(*(_QWORD *)(a1 + 24) + 4) & 0xFFF)
                                                       + (*(_DWORD *)(*(_QWORD *)(a1 + 24) + 8) & 0xFFFu)
                                                       + 2)) >> 3) & 0x1FFFFFFFFFFFFFF8))) != 0)
    return a1 + 8;
  return 0;
}

{
  id v4;
  int v5;
  unint64_t v6;
  uint64_t Name;
  unint64_t v9[2];

  if (!*(_QWORD *)(a1 + 40) || !*(_QWORD *)(a1 + 24))
    return 0;
  v4 = objc_msgSend(*(id *)(a1 + 16), "packageBuffer");
  if ((~a2 & 0xFFFF0000) != 0)
    v5 = (_WORD)a2 == 0xFFFF ? TUINameNil : a2;
  else
    v5 = TUINameNil;
  v6 = *(unsigned int *)(*(_QWORD *)(a1 + 24) + 16);
  v9[0] = v6 >> 12;
  v9[1] = v6 & 0xFFF;
  Name = TUI::Package::Buffer::findName((uint64_t)v4, v5, v9);
  if (Name == -1)
    return 0;
  if (((1 << (Name
               + **(_BYTE **)(a1 + 24)
               + *(_BYTE *)(*(_QWORD *)(a1 + 24) + 4)
               + *(_BYTE *)(*(_QWORD *)(a1 + 24) + 8)
               + *(_BYTE *)(*(_QWORD *)(a1 + 24) + 12)
               + 2)) & *(_QWORD *)(*(_QWORD *)(a1 + 40)
                                 + (((Name
                                    + (unint64_t)((**(_DWORD **)(a1 + 24) & 0xFFF)
                                                       + (*(_DWORD *)(*(_QWORD *)(a1 + 24) + 4) & 0xFFF)
                                                       + (*(_DWORD *)(*(_QWORD *)(a1 + 24) + 8) & 0xFFF)
                                                       + (*(_DWORD *)(*(_QWORD *)(a1 + 24) + 12) & 0xFFFu)
                                                       + 2)) >> 3) & 0x1FFFFFFFFFFFFFF8))) != 0)
    return a1 + 8;
  return 0;
}

{
  id v4;
  int v5;
  unint64_t v6;
  uint64_t Name;
  _DWORD *v8;
  unint64_t v9;
  unint64_t v11[2];

  if (!*(_QWORD *)(a1 + 40) || !*(_QWORD *)(a1 + 24))
    return 0;
  v4 = objc_msgSend(*(id *)(a1 + 16), "packageBuffer");
  if ((~a2 & 0xFFFF0000) != 0)
    v5 = (_WORD)a2 == 0xFFFF ? TUINameNil : a2;
  else
    v5 = TUINameNil;
  v6 = *(unsigned int *)(*(_QWORD *)(a1 + 24) + 20);
  v11[0] = v6 >> 12;
  v11[1] = v6 & 0xFFF;
  Name = TUI::Package::Buffer::findName((uint64_t)v4, v5, v11);
  if (Name == -1)
    return 0;
  v8 = *(_DWORD **)(a1 + 24);
  v9 = Name + (*v8 & 0xFFF) + (v8[1] & 0xFFF) + (v8[2] & 0xFFF) + (v8[3] & 0xFFF) + (v8[4] & 0xFFFu) + 2;
  if (((1 << v9) & *(_QWORD *)(*(_QWORD *)(a1 + 40) + ((v9 >> 3) & 0x1FFFFFFFFFFFFFF8))) != 0)
    return a1 + 8;
  else
    return 0;
}

{
  id v4;
  int v5;
  unint64_t v6;
  uint64_t Name;
  _DWORD *v8;
  unint64_t v9;
  unint64_t v11[2];

  if (!*(_QWORD *)(a1 + 40) || !*(_QWORD *)(a1 + 24))
    return 0;
  v4 = objc_msgSend(*(id *)(a1 + 16), "packageBuffer");
  if ((~a2 & 0xFFFF0000) != 0)
    v5 = (_WORD)a2 == 0xFFFF ? TUINameNil : a2;
  else
    v5 = TUINameNil;
  v6 = *(unsigned int *)(*(_QWORD *)(a1 + 24) + 24);
  v11[0] = v6 >> 12;
  v11[1] = v6 & 0xFFF;
  Name = TUI::Package::Buffer::findName((uint64_t)v4, v5, v11);
  if (Name == -1)
    return 0;
  v8 = *(_DWORD **)(a1 + 24);
  v9 = Name
     + (*v8 & 0xFFF)
     + (v8[1] & 0xFFF)
     + (v8[2] & 0xFFF)
     + (v8[3] & 0xFFF)
     + (v8[4] & 0xFFF)
     + (v8[5] & 0xFFFu)
     + 2;
  if (((1 << v9) & *(_QWORD *)(*(_QWORD *)(a1 + 40) + ((v9 >> 3) & 0x1FFFFFFFFFFFFFF8))) != 0)
    return a1 + 8;
  else
    return 0;
}

BOOL TUI::Evaluation::Variables::Capture::operator==(uint64_t a1, uint64_t a2)
{
  _BOOL8 v2;
  id WeakRetained;
  id v7;
  _DWORD *v8;
  const void *v9;
  unint64_t v10;
  _DWORD *v11;
  _DWORD *v12;
  _DWORD *v13;
  _DWORD *v14;
  _DWORD *v15;
  _DWORD *v16;
  size_t v17;
  _DWORD *v18;
  BOOL v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _DWORD *v23;
  int v24;
  unsigned int v25;
  int v26;
  int v27;
  unint64_t v28;
  uint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  void *v38;
  unsigned int v39;
  void *v40;
  unsigned int v41;
  int v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  BOOL v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  char *v54;
  uint64_t v57;
  BOOL v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  unint64_t v62;
  char *v63;
  uint64_t v64;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  _DWORD *v69;
  uint64_t v70;
  uint64_t v71;
  _DWORD *v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  unint64_t v76;
  uint64_t v77;
  char *v78;

  if (*(_QWORD *)(a1 + 24) != *(_QWORD *)(a2 + 24))
    return 0;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v7 = objc_loadWeakRetained((id *)(a2 + 32));
  v2 = WeakRetained == v7;

  v8 = *(_DWORD **)(a1 + 24);
  if (!v8 || !*(_QWORD *)(a2 + 24))
    return v2;
  if (WeakRetained != v7)
    return 0;
  v9 = *(const void **)(a2 + 40);
  v10 = *v8 & 0xFFF;
  v11 = v8 + 1;
  v12 = v8 + 2;
  v13 = v8 + 3;
  v14 = v8 + 4;
  v15 = v8 + 5;
  v16 = v8 + 6;
  v17 = (((v8[6] & 0xFFF)
        + (unint64_t)((*v8 & 0xFFF)
                           + (v8[1] & 0xFFF)
                           + (v8[2] & 0xFFF)
                           + (v8[3] & 0xFFF)
                           + (v8[4] & 0xFFF)
                           + (v8[5] & 0xFFFu)
                           + 2)
        + 63) >> 3) & 0x3FFFFFF8;
  v77 = (uint64_t)v9;
  v78 = *(char **)(a1 + 40);
  v18 = *(_DWORD **)(a1 + 24);
  if (memcmp(v78, v9, v17))
    return 0;
  if ((_DWORD)v10)
  {
    v19 = 0;
    v20 = 0;
    v21 = (uint64_t)&v78[v17];
    v22 = v17 + v77;
    do
    {
      if (((*(_QWORD *)&v78[((unint64_t)(v20 + 2) >> 3) & 0x1FFFFFFFFFFFFFF8] >> (v20 + 2)) & 1) != 0
        && !TUI::Evaluation::ResolvedValue::operator==(v21, v22))
      {
        break;
      }
      v19 = ++v20 >= v10;
      v22 += 24;
      v21 += 24;
    }
    while (v10 != v20);
    if (!v19)
      return 0;
    v23 = *(_DWORD **)(a1 + 24);
    v16 = v23 + 6;
    v24 = *v23 & 0xFFF;
    v25 = v24 + 2;
    v11 = v23 + 1;
    v12 = v23 + 2;
    v13 = v23 + 3;
    v14 = v23 + 4;
    v15 = v23 + 5;
    v26 = 24 * v24;
  }
  else
  {
    v26 = 0;
    v25 = 2;
    v23 = v18;
  }
  v27 = v23[1];
  v28 = v27 & 0xFFF;
  if ((v27 & 0xFFF) == 0)
    goto LABEL_32;
  v29 = 0;
  v30 = 0;
  v31 = v25;
  v32 = ((((v23[6] & 0xFFF)
                       + (unint64_t)(v25
                                          + (v23[3] & 0xFFF)
                                          + (_DWORD)v28
                                          + (v23[2] & 0xFFF)
                                          + (v23[4] & 0xFFF)
                                          + (v23[5] & 0xFFF))
                       + 63) >> 3)
       + v26) & 0x7FFFFFF8;
  v33 = v78;
  v34 = &v78[v32];
  v35 = v32 + v77;
  v36 = 48 * v28;
  v37 = 1;
  v76 = v27 & 0xFFF;
  do
  {
    if (((*(_QWORD *)&v33[((v31 + v37 - 1) >> 3) & 0x1FFFFFFFFFFFFFF8] >> (v31
                                                                            + v37
                                                                            - 1)) & 1) != 0)
    {
      if (*(unsigned __int16 *)&v34[v29 + 2] != *(unsigned __int16 *)(v35 + v29 + 2))
        break;
      if (*(unsigned __int16 *)&v34[v29] != *(unsigned __int16 *)(v35 + v29))
        break;
      if (*(unsigned __int16 *)&v34[v29 + 6] != *(unsigned __int16 *)(v35 + v29 + 6))
        break;
      if (*(unsigned __int16 *)&v34[v29 + 4] != *(unsigned __int16 *)(v35 + v29 + 4))
        break;
      if (((*(_BYTE *)(v35 + v29 + 8) ^ v34[v29 + 8]) & 3) != 0)
        break;
      if (*(_QWORD *)&v34[v29 + 16] != *(_QWORD *)(v35 + v29 + 16))
        break;
      v38 = *(void **)&v34[v29 + 24];
      if (v38 != *(void **)(v35 + v29 + 24))
      {
        v39 = objc_msgSend(v38, "isEqual:");
        v28 = v76;
        if (!v39)
          break;
      }
      v40 = *(void **)&v34[v29 + 32];
      v33 = v78;
      if (v40 != *(void **)(v35 + v29 + 32))
      {
        v41 = objc_msgSend(v40, "isEqual:");
        v28 = v76;
        if (!v41)
          break;
      }
    }
    v30 = v37 >= v28;
    v29 += 48;
    ++v37;
  }
  while (v36 != v29);
  if (!v30)
    return 0;
  v23 = *(_DWORD **)(a1 + 24);
  v16 = v23 + 6;
  v42 = *v23 & 0xFFF;
  v25 = v42 + 2;
  v11 = v23 + 1;
  v12 = v23 + 2;
  v13 = v23 + 3;
  v14 = v23 + 4;
  v15 = v23 + 5;
  v26 = 24 * v42;
LABEL_32:
  v43 = v25 + (*v11 & 0xFFF);
  v44 = *v13 & 0xFFF;
  v45 = *v12 & 0xFFF;
  v46 = v43 + (*v12 & 0xFFF);
  v47 = v46 + (*v13 & 0xFFF);
  v48 = ((((*v16 & 0xFFF) + (unint64_t)(v47 + (*v14 & 0xFFF) + (*v15 & 0xFFF)) + 63) >> 3)
       + v26) & 0x7FFFFFF8;
  if ((*v12 & 0xFFF) != 0)
  {
    v49 = 0;
    v50 = 0;
    v51 = v48 + 48 * (*v11 & 0xFFF);
    v52 = &v78[v51];
    v53 = v51 + v77 + 8;
    v54 = v52 + 8;
    do
    {
      if (((*(_QWORD *)&v78[((unint64_t)(v43 + v50) >> 3) & 0x1FFFFFFFFFFFFFF8] >> (v43
                                                                                            + v50)) & 1) != 0)
      {
        if (*((_DWORD *)v54 - 2) != *(_DWORD *)(v53 - 8) || *((_DWORD *)v54 - 1) != *(_DWORD *)(v53 - 4))
          break;
        if (*(_DWORD *)v54 != *(_DWORD *)v53 || *((_QWORD *)v54 + 1) != *(_QWORD *)(v53 + 8))
          break;
      }
      v49 = ++v50 >= v45;
      v53 += 32;
      v54 += 32;
    }
    while (v45 != v50);
    if (!v49)
      return 0;
  }
  if ((*v13 & 0xFFF) != 0)
  {
    v57 = 0;
    v58 = 0;
    v59 = v48 + 48 * (*v11 & 0xFFF) + 32 * (*v12 & 0xFFFu);
    v60 = &v78[v59];
    v61 = v59 + v77;
    v62 = 1;
    do
    {
      if (((*(_QWORD *)&v78[((v46 + v62 - 1) >> 3) & 0x1FFFFFFFFFFFFFF8] >> (v46
                                                                              + v62
                                                                              - 1)) & 1) != 0)
      {
        if (*(_DWORD *)&v60[v57] != *(_DWORD *)(v61 + v57))
          break;
        v63 = &v60[v57];
        v64 = v61 + v57;
        if (*(_DWORD *)&v60[v57 + 4] != *(_DWORD *)(v61 + v57 + 4)
          || *(unsigned __int16 *)&v60[v57 + 8] != *(unsigned __int16 *)(v61 + v57 + 8))
        {
          break;
        }
        if (*((_DWORD *)v63 + 3) != *(_DWORD *)(v64 + 12))
          break;
        if (*((_DWORD *)v63 + 4) != *(_DWORD *)(v64 + 16))
          break;
        v66 = &v60[v57];
        v67 = v61 + v57;
        if (*(_DWORD *)&v60[v57 + 20] != *(_DWORD *)(v61 + v57 + 20)
          || *((_DWORD *)v66 + 6) != *(_DWORD *)(v67 + 24)
          || *((_QWORD *)v66 + 4) != *(_QWORD *)(v67 + 32))
        {
          break;
        }
      }
      v58 = v62 >= v44;
      v57 += 48;
      ++v62;
    }
    while (48 * v44 != v57);
    if (!v58)
      return 0;
  }
  v68 = sub_533E0(v23, 0);
  v69 = *(_DWORD **)(a1 + 24);
  if (!sub_5506C((uint64_t)v78, v47, (uint64_t)v78, v77, v68, (unint64_t)v69[4] >> 12, v69[4] & 0xFFFLL))return 0;
  v70 = sub_53458(v69);
  v71 = sub_53490(*(_DWORD **)(a1 + 24), 0);
  v72 = *(_DWORD **)(a1 + 24);
  if (!sub_5506C((uint64_t)v78, v70, (uint64_t)v78, v77, v71, (unint64_t)v72[5] >> 12, v72[5] & 0xFFFLL))return 0;
  v73 = sub_53508(v72);
  v74 = sub_53548(*(_DWORD **)(a1 + 24), 0);
  v75 = *(unsigned int *)(*(_QWORD *)(a1 + 24) + 24);
  return sub_550FC((uint64_t)v78, v73, (uint64_t)v78, v77, v74, v75 >> 12, v75 & 0xFFF);
}

BOOL sub_5506C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7)
{
  BOOL v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  if (a7)
  {
    v7 = 0;
    v8 = 0;
    v9 = a5 + a4 + 8;
    v10 = a5 + a3 + 8;
    do
    {
      if (((*(_QWORD *)(a1 + (((unint64_t)(a2 + v8) >> 3) & 0x1FFFFFFFFFFFFFF8)) >> (a2
                                                                                             + v8)) & 1) != 0)
      {
        if (*(_DWORD *)(v10 - 8) != *(_DWORD *)(v9 - 8) || *(_DWORD *)(v10 - 4) != *(_DWORD *)(v9 - 4))
          break;
        if (*(_DWORD *)v10 != *(_DWORD *)v9 || *(_QWORD *)(v10 + 8) != *(_QWORD *)(v9 + 8))
          break;
      }
      v7 = ++v8 >= a7;
      v9 += 32;
      v10 += 32;
    }
    while (a7 != v8);
  }
  else
  {
    return 1;
  }
  return v7;
}

BOOL sub_550FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7)
{
  BOOL v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;

  if (a7)
  {
    v10 = 0;
    v11 = 0;
    v12 = a5 + a4 + 16;
    v13 = a5 + a3 + 16;
    do
    {
      if (((*(_QWORD *)(a1 + (((unint64_t)(a2 + v11) >> 3) & 0x1FFFFFFFFFFFFFF8)) >> (a2
                                                                                              + v11)) & 1) != 0)
      {
        if (*(_DWORD *)(v13 - 8) != *(_DWORD *)(v12 - 8))
          break;
        v14 = *(void **)(v13 - 16);
        if (v14 != *(void **)(v12 - 16) && !objc_msgSend(v14, "isEqual:"))
          break;
        if (*(_DWORD *)v13 != *(_DWORD *)v12 || *(_QWORD *)(v13 + 8) != *(_QWORD *)(v12 + 8))
          break;
      }
      v10 = ++v11 >= a7;
      v12 += 40;
      v13 += 40;
    }
    while (a7 != v11);
  }
  else
  {
    return 1;
  }
  return v10;
}

void TUI::Evaluation::Variables::Capture::enumerate(uint64_t a1, void *a2)
{
  unint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  int *v6;
  unint64_t v7;
  int v8;
  uint64_t v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unsigned __int16 *v20;
  int v21;
  void (**v22)(id, unint64_t, _QWORD);

  v3 = a2;
  v4 = *(_QWORD *)(a1 + 40);
  v5 = objc_msgSend(*(id *)(a1 + 16), "packageBuffer");
  v6 = *(int **)(a1 + 24);
  v8 = *v6;
  v7 = v6[1];
  v9 = v7 & 0xFFF;
  v10 = v6[2];
  v11 = v6[3];
  v13 = v6[4];
  v12 = v6[5];
  v21 = v6[6];
  v22 = (void (**)(id, unint64_t, _QWORD))(id)v3;
  if ((v7 & 0xFFF) != 0)
  {
    v14 = v8 & 0xFFF;
    v15 = (v8 & 0xFFF) + 2;
    v16 = ((((v21 & 0xFFF)
                         + (unint64_t)((_DWORD)v15
                                            + (_DWORD)v9
                                            + (v10 & 0xFFF)
                                            + (v11 & 0xFFF)
                                            + (v13 & 0xFFF)
                                            + (v12 & 0xFFFu))
                         + 63) >> 3)
         + 24 * v14) & 0x7FFFFFF8;
    v17 = v7 >> 12;
    v18 = v16 + v4;
    v19 = 4 * v17;
    do
    {
      if (((*(_QWORD *)(v4 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v15) & 1) != 0)
      {
        if (v5[43] <= v17)
          v20 = 0;
        else
          v20 = (unsigned __int16 *)(v19 + v5[42]);
        v3 = v3 & 0xFFFFFFFF00000000 | *v20 | ((unint64_t)v20[1] << 16);
        v22[2](v22, v3, v18);
      }
      v18 += 48;
      v19 += 4;
      ++v17;
      ++v15;
      --v9;
    }
    while (v9);
  }

}

void sub_55328(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, id a12)
{

  _Unwind_Resume(a1);
}

void sub_5534C(_QWORD *a1, uint64_t a2)
{
  *a1 = a2;
  operator new();
}

void sub_553A4(_Unwind_Exception *exception_object)
{
  uint64_t v1;

  if (v1)
    (*(void (**)(uint64_t))(*(_QWORD *)v1 + 64))(v1);
  _Unwind_Resume(exception_object);
}

void sub_553C8(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete();
}

uint64_t sub_553EC(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 24);
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 64))(result);
  return result;
}

uint64_t sub_55404(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 24;
  }
  else
  {
    return 0;
  }
}

void sub_55444(unsigned int *a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, unsigned int *a5@<X8>)
{
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  unint64_t *v14;
  unint64_t v15;
  _BYTE *v16;
  _QWORD *v17;
  unint64_t v18;
  _BOOL4 v19;
  uint64_t v21;
  std::__shared_weak_count *v22;
  unint64_t *v23;
  unint64_t v24;
  __int128 v25;

  v9 = a3;
  v10 = v9;
  *a5 = *a1;
  v11 = *((_QWORD *)a1 + 1);
  v12 = *((_QWORD *)a1 + 2);
  *((_QWORD *)a5 + 1) = v11;
  v13 = a5 + 2;
  *((_QWORD *)a5 + 2) = v12;
  if (v12)
  {
    v14 = (unint64_t *)(v12 + 8);
    do
      v15 = __ldxr(v14);
    while (__stxr(v15 + 1, v14));
  }
  if (!v11 || (v16 = *(_BYTE **)(v11 + 40)) != 0 && (*v16 & 1) == 0)
  {
    v17 = objc_msgSend(v9, "packageBuffer");
    v18 = *a5;
    v19 = TUIClosureNotNil(v18);
    if (v17[47] > v18 && v19)
    {
      v21 = v17[46] + 28 * v18;
      if (v21)
      {
        TUI::Evaluation::Variables::Capture::create(&v25, v21, 0, 0, *v13, a2, v10, a4);
        sub_255FC((uint64_t)v13, &v25);
        v22 = (std::__shared_weak_count *)*((_QWORD *)&v25 + 1);
        if (*((_QWORD *)&v25 + 1))
        {
          v23 = (unint64_t *)(*((_QWORD *)&v25 + 1) + 8);
          do
            v24 = __ldaxr(v23);
          while (__stlxr(v24 - 1, v23));
          if (!v24)
          {
            ((void (*)(std::__shared_weak_count *))v22->__on_zero_shared)(v22);
            std::__shared_weak_count::__release_weak(v22);
          }
        }
      }
    }
  }

}

void sub_55574(_Unwind_Exception *a1)
{
  void *v1;
  uint64_t v2;

  sub_148E8(v2);

  _Unwind_Resume(a1);
}

void sub_55608(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_558F4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

char *sub_55920(uint64_t a1, char *__src, char *a3)
{
  char *v3;
  char *v4;
  char *v6;
  unint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  _OWORD *v11;
  __int128 v12;
  char *v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  char *v19;
  char *v20;
  unint64_t v21;
  unint64_t v22;
  char *v23;
  uint64_t v24;
  void *__p;
  char *v27;
  char *v28;
  char *v29;
  uint64_t v30;

  v3 = a3;
  v4 = __src;
  v6 = *(char **)(a1 + 8);
  v8 = a1 + 16;
  v7 = *(_QWORD *)(a1 + 16);
  if ((unint64_t)v6 >= v7)
  {
    v13 = *(char **)a1;
    v14 = ((uint64_t)&v6[-*(_QWORD *)a1] >> 4) + 1;
    if (v14 >> 60)
      sub_6F9C();
    v15 = __src - v13;
    v16 = (__src - v13) >> 4;
    v17 = v7 - (_QWORD)v13;
    if (v17 >> 3 > v14)
      v14 = v17 >> 3;
    if ((unint64_t)v17 >= 0x7FFFFFFFFFFFFFF0)
      v18 = 0xFFFFFFFFFFFFFFFLL;
    else
      v18 = v14;
    v30 = a1 + 16;
    if (v18)
      v19 = (char *)sub_22FD4(a1 + 16, v18);
    else
      v19 = 0;
    v20 = &v19[16 * v16];
    __p = v19;
    v27 = v20;
    v28 = v20;
    v29 = &v19[16 * v18];
    if (v16 == v18)
    {
      if (v15 < 1)
      {
        if (v13 == v4)
          v22 = 1;
        else
          v22 = v15 >> 3;
        v23 = (char *)sub_22FD4(v8, v22);
        v20 = &v23[16 * (v22 >> 2)];
        __p = v23;
        v27 = v20;
        v29 = &v23[16 * v24];
        if (v19)
          operator delete(v19);
      }
      else
      {
        v21 = v16 + 2;
        if (v16 >= -1)
          v21 = v16 + 1;
        v20 -= 16 * (v21 >> 1);
        v27 = v20;
      }
    }
    *(_OWORD *)v20 = *(_OWORD *)v3;
    v28 = v20 + 16;
    v4 = (char *)sub_57CC4((void **)a1, (uint64_t)&__p, v4);
    if (v28 != v27)
      v28 += (v27 - v28 + 15) & 0xFFFFFFFFFFFFFFF0;
    if (__p)
      operator delete(__p);
  }
  else if (__src == v6)
  {
    *(_OWORD *)__src = *(_OWORD *)a3;
    *(_QWORD *)(a1 + 8) = __src + 16;
  }
  else
  {
    v9 = __src + 16;
    v10 = v6 - 16;
    v11 = *(_OWORD **)(a1 + 8);
    while (v10 < v6)
    {
      v12 = *(_OWORD *)v10;
      v10 += 16;
      *v11++ = v12;
    }
    *(_QWORD *)(a1 + 8) = v11;
    if (v6 != v9)
      memmove(&v6[-16 * ((v6 - v9) >> 4)], __src, v6 - v9);
    if (v4 <= v3)
      v3 += 16 * (*(_QWORD *)(a1 + 8) > (unint64_t)v3);
    *(_OWORD *)v4 = *(_OWORD *)v3;
  }
  return v4;
}

void sub_55B2C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, uint64_t a12)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_55BE0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_55D54(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_55F94(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_55FD4(uint64_t a1, void *a2)
{
  double v3;
  double v4;
  id v5;

  v5 = a2;
  objc_msgSend(v5, "computedTransformedSize");
  *(double *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = fmax(*(double *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8)+ 24), v3);
  *(double *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = v4
                                                              + *(double *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8)
                                                                          + 24);

}

void sub_56030(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_561D8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_5647C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *__p, uint64_t a19)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_566C8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *__p, uint64_t a19)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_56918(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *__p, uint64_t a19)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_56D98(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, void *a12)
{
  void *v12;
  void *v13;
  void *v14;

  _Unwind_Resume(a1);
}

void sub_56F60(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_572F8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_57484(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_5759C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_57640(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_5781C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_57A60(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void sub_57B20(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_57B70(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void *sub_57CC4(void **a1, uint64_t a2, char *__src)
{
  void *v5;
  char *v6;
  void *v7;
  char *v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  int64_t v12;
  char *v13;
  void *v14;
  void *v15;

  v5 = *(void **)(a2 + 8);
  v6 = (char *)*a1;
  v7 = v5;
  if (*a1 != __src)
  {
    v8 = __src;
    v9 = *(_QWORD *)(a2 + 8);
    do
    {
      v7 = (void *)(v9 - 16);
      *(_OWORD *)(v9 - 16) = *((_OWORD *)v8 - 1);
      v8 -= 16;
      v9 -= 16;
    }
    while (v8 != v6);
  }
  *(_QWORD *)(a2 + 8) = v7;
  v10 = a1[1];
  v11 = *(_QWORD *)(a2 + 16);
  v12 = v10 - __src;
  if (v10 != __src)
  {
    memmove(*(void **)(a2 + 16), __src, v10 - __src);
    v7 = *(void **)(a2 + 8);
  }
  *(_QWORD *)(a2 + 16) = v11 + v12;
  v13 = (char *)*a1;
  *a1 = v7;
  *(_QWORD *)(a2 + 8) = v13;
  v14 = a1[1];
  a1[1] = *(void **)(a2 + 16);
  *(_QWORD *)(a2 + 16) = v14;
  v15 = a1[2];
  a1[2] = *(void **)(a2 + 24);
  *(_QWORD *)(a2 + 24) = v15;
  *(_QWORD *)a2 = *(_QWORD *)(a2 + 8);
  return v5;
}

void sub_58504(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_58528(uint64_t a1, uint64_t a2, void *a3)
{
  id WeakRetained;
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;
  id v11;

  v11 = a3;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  v6 = WeakRetained;
  if (WeakRetained)
  {
    if (v11 && (_DWORD)a2)
    {
      objc_msgSend(WeakRetained, "setDictionary:");
      v7 = *(_QWORD *)(a1 + 32);
      v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "data"));
      (*(void (**)(uint64_t, uint64_t, void *))(v7 + 16))(v7, 1, v8);

    }
    else
    {
      v9 = *(_QWORD *)(a1 + 32);
      v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "data"));
      (*(void (**)(uint64_t, uint64_t, void *))(v9 + 16))(v9, a2, v10);

    }
  }
  else
  {
    (*(void (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
  }

}

id TUIStatsPhaseToString(uint64_t a1)
{
  if (qword_2CB430 != -1)
    dispatch_once(&qword_2CB430, &stru_23F028);
  return objc_msgSend((id)qword_2CB428, "objectAtIndexedSubscript:", a1);
}

void sub_58D78(id a1)
{
  void *v1;

  v1 = (void *)qword_2CB428;
  qword_2CB428 = (uint64_t)&off_2522C0;

}

id TUIStatsEventToString(uint64_t a1)
{
  if (qword_2CB440 != -1)
    dispatch_once(&qword_2CB440, &stru_23F048);
  return objc_msgSend((id)qword_2CB438, "objectAtIndexedSubscript:", a1);
}

void sub_58DE0(id a1)
{
  void *v1;

  v1 = (void *)qword_2CB438;
  qword_2CB438 = (uint64_t)&off_2522D8;

}

__CFString *TUIStatsReasonToString(char a1)
{
  NSMutableArray *v2;
  NSMutableArray *v3;
  __CFString *v4;

  v2 = objc_opt_new(NSMutableArray);
  v3 = v2;
  if ((a1 & 8) != 0)
  {
    -[NSMutableArray addObject:](v2, "addObject:", CFSTR("load-entry"));
    if ((a1 & 4) == 0)
    {
LABEL_3:
      if ((a1 & 2) == 0)
        goto LABEL_4;
      goto LABEL_10;
    }
  }
  else if ((a1 & 4) == 0)
  {
    goto LABEL_3;
  }
  -[NSMutableArray addObject:](v3, "addObject:", CFSTR("update-entry"));
  if ((a1 & 2) == 0)
  {
LABEL_4:
    if ((a1 & 1) == 0)
      goto LABEL_6;
    goto LABEL_5;
  }
LABEL_10:
  -[NSMutableArray addObject:](v3, "addObject:", CFSTR("environment"));
  if ((a1 & 1) != 0)
LABEL_5:
    -[NSMutableArray addObject:](v3, "addObject:", CFSTR("dynamic"));
LABEL_6:
  if (-[NSMutableArray count](v3, "count"))
    v4 = (__CFString *)objc_claimAutoreleasedReturnValue(-[NSMutableArray componentsJoinedByString:](v3, "componentsJoinedByString:", CFSTR(",")));
  else
    v4 = CFSTR("none");

  return v4;
}

void sub_58EC0(void *a1, void *a2, __CFString *a3)
{
  id v5;
  __CFString *v6;
  __CFString *v7;
  uint64_t i;
  double v9;
  id v10;
  id v11;
  __CFString *v12;
  id v13;
  void *v14;
  double v15;
  double v16;
  id v17;

  v17 = a1;
  v5 = a2;
  v6 = CFSTR("\n");
  if (a3)
    v6 = a3;
  v7 = v6;
  for (i = 0; i != 5; ++i)
  {
    objc_msgSend(v5, "elapsedTimeForPhase:", i);
    if (v9 > 0.0)
    {
      v10 = v17;
      v11 = v5;
      v12 = v7;
      v13 = TUIStatsPhaseToString(i);
      v14 = (void *)objc_claimAutoreleasedReturnValue(v13);
      objc_msgSend(v11, "elapsedTimeForPhase:", i);
      v16 = v15;

      objc_msgSend(v10, "appendFormat:", CFSTR("%@: %fms%@"), v14, v16 * 1000.0, v12);
    }
  }

}

void sub_58FDC(void *a1, void *a2, __CFString *a3)
{
  id v5;
  __CFString *v6;
  __CFString *v7;
  uint64_t i;
  id v9;
  void *v10;
  id v11;

  v11 = a1;
  v5 = a2;
  v6 = CFSTR("\n");
  if (a3)
    v6 = a3;
  v7 = v6;
  for (i = 0; i != 29; ++i)
  {
    if (objc_msgSend(v5, "countForEvent:", i))
    {
      v9 = TUIStatsEventToString(i);
      v10 = (void *)objc_claimAutoreleasedReturnValue(v9);
      objc_msgSend(v11, "appendFormat:", CFSTR("%@: %lu %@"), v10, objc_msgSend(v5, "countForEvent:", i), v7);

    }
  }

}

void sub_59918(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  TUIStatsFeedEntry *v7;

  v5 = a3;
  v6 = a2;
  v7 = -[TUIStatsFeedEntry initWithCollector:]([TUIStatsFeedEntry alloc], "initWithCollector:", v5);

  objc_msgSend(*(id *)(a1 + 32), "setObject:forKeyedSubscript:", v7, v6);
}

id sub_59C2C(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  id result;

  v3 = 0;
  v4 = *(_QWORD *)(a1 + 32) + 48;
  do
  {
    result = objc_msgSend(a2, "countForEvent:", v3);
    *(_QWORD *)(v4 + 8 * v3++) += result;
  }
  while (v3 != 29);
  return result;
}

unint64_t sub_59C80(uint64_t a1, void *a2)
{
  unint64_t result;

  result = (unint64_t)objc_msgSend(a2, "reason");
  *(_QWORD *)(*(_QWORD *)(a1 + 32) + 280) |= result;
  return result;
}

void sub_5A988(uint64_t a1, void *a2, uint64_t a3)
{
  id v5;
  void *v6;
  void *v7;
  id v8;
  void *v9;
  void *v10;
  id v11;
  void *v12;
  void *v13;
  CGFloat v14;
  CGFloat v15;
  __int128 v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  CGAffineTransform v20;
  CGAffineTransform t2;
  CGAffineTransform v22;

  v5 = a2;
  v6 = v5;
  v7 = *(void **)(*(_QWORD *)(a1 + 32) + 80);
  if (v7)
    v8 = v7;
  else
    v8 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "UUID"));
  v9 = v8;
  v10 = *(void **)(*(_QWORD *)(a1 + 32) + 88);
  if (v10)
    v11 = v10;
  else
    v11 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "objectAtIndexedSubscript:", a3));
  v12 = v11;
  v13 = *(void **)(a1 + 48);
  if (!v13 || objc_msgSend(v13, "matchesUUID:uid:", v9, v12))
  {
    objc_msgSend(v6, "offset");
    memset(&v22, 0, sizeof(v22));
    CGAffineTransformMakeTranslation(&t2, v14, v15);
    v16 = *(_OWORD *)(a1 + 88);
    *(_OWORD *)&v20.a = *(_OWORD *)(a1 + 72);
    *(_OWORD *)&v20.c = v16;
    *(_OWORD *)&v20.tx = *(_OWORD *)(a1 + 104);
    CGAffineTransformConcat(&v22, &v20, &t2);
    v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 48), "queryMatchedWithUUID:uid:", v9, v12));
    objc_msgSend(*(id *)(a1 + 56), "setSectionUUID:", v9);
    v18 = *(_QWORD *)(a1 + 56);
    v19 = *(_QWORD *)(a1 + 64);
    v20 = v22;
    objc_msgSend(v6, "appendReferencesToCollector:transform:query:liveTransformResolver:", v18, &v20, v17, v19);

  }
}

void sub_5BA50(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_5BA6C(uint64_t a1, uint64_t a2, void *a3)
{
  _QWORD v4[5];

  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_5BAC8;
  v4[3] = &unk_23F0F0;
  v4[4] = *(_QWORD *)(a1 + 32);
  return objc_msgSend(a3, "enumerateObjectsUsingBlock:", v4);
}

void sub_5BAC8(uint64_t a1, void *a2)
{
  CGRect *v3;
  CGFloat v4;
  CGFloat v5;
  CGFloat v6;
  CGFloat v7;
  CGRect v8;

  v3 = *(CGRect **)(*(_QWORD *)(a1 + 32) + 8);
  objc_msgSend(a2, "frame");
  v8.origin.x = v4;
  v8.origin.y = v5;
  v8.size.width = v6;
  v8.size.height = v7;
  *(CGRect *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 32) = CGRectUnion(v3[1], v8);
}

void sub_5BF2C(_QWORD *a1)
{
  id v2;
  id v3;
  id v4;
  uint64_t v5;
  void *v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _BYTE v11[128];

  v9 = 0u;
  v10 = 0u;
  v7 = 0u;
  v8 = 0u;
  v2 = *(id *)(a1[4] + 24);
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v8;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v8 != v5)
          objc_enumerationMutation(v2);
        objc_msgSend(*(id *)(*((_QWORD *)&v7 + 1) + 8 * (_QWORD)v6), "appendToBuilder:context:", a1[5], a1[6], (_QWORD)v7);
        v6 = (char *)v6 + 1;
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
    }
    while (v4);
  }

}

void sub_5C194(_QWORD *a1)
{
  id v2;
  id v3;
  id v4;
  uint64_t v5;
  void *v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _BYTE v11[128];

  v9 = 0u;
  v10 = 0u;
  v7 = 0u;
  v8 = 0u;
  v2 = *(id *)(a1[4] + 16);
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v8;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v8 != v5)
          objc_enumerationMutation(v2);
        objc_msgSend(*(id *)(*((_QWORD *)&v7 + 1) + 8 * (_QWORD)v6), "appendToBuilder:context:", a1[5], a1[6], (_QWORD)v7);
        v6 = (char *)v6 + 1;
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
    }
    while (v4);
  }

}

void sub_5C308(id a1)
{
  void *v1;
  id v2;
  void *v3;
  id v4;
  void *v5;
  _QWORD v6[13];

  v1 = (void *)objc_claimAutoreleasedReturnValue(+[TUIAttributeSet supportedAttributesSize](TUIAttributeSet, "supportedAttributesSize"));
  v2 = objc_msgSend(v1, "mutableCopy");

  v6[0] = CFSTR("color");
  v6[1] = CFSTR("text-alignment");
  v6[2] = CFSTR("max-lines");
  v6[3] = CFSTR("min-lines");
  v6[4] = CFSTR("hide-ellipses");
  v6[5] = CFSTR("font");
  v6[6] = CFSTR("html-tags");
  v6[7] = CFSTR("role");
  v6[8] = CFSTR("line-balancing");
  v6[9] = CFSTR("should-hyphenate");
  v6[10] = CFSTR("allow-hanging-punctuation");
  v6[11] = CFSTR("allow-shrink-to-fit");
  v6[12] = CFSTR("blend-mode");
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", v6, 13));
  objc_msgSend(v2, "addAttributesFromArray:", v3);

  v4 = objc_msgSend(v2, "copy");
  v5 = (void *)qword_2CB448;
  qword_2CB448 = (uint64_t)v4;

}

unint64_t sub_5C748(void *a1, unint64_t a2)
{
  id v3;
  void *v4;
  unint64_t v5;

  v3 = a1;
  if (objc_msgSend(v3, "length"))
  {
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "componentsSeparatedByString:", CFSTR(",")));
    v5 = a2 & 0xFFFFFFFFFFFFFFFCLL | objc_msgSend(v4, "containsObject:", CFSTR("parse"));
    if (objc_msgSend(v4, "containsObject:", CFSTR("interpret")))
      a2 |= 3uLL;
    else
      a2 = v5;

  }
  return a2;
}

uint64_t sub_5D5FC(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(a1 + 40) + 16))(*(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 32), 0);
}

id sub_5D8B4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  objc_super v6;

  v1 = *(_QWORD *)(a1 + 56);
  v2 = *(_QWORD *)(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  v4 = *(_QWORD *)(a1 + 48);
  v6.receiver = *(id *)(a1 + 64);
  v6.super_class = (Class)&OBJC_METACLASS___TUIElementTextAInstantiator;
  return objc_msgSendSuper2(&v6, "instantiateChildrenOfNode:object:containingBuilder:context:block:", *(unsigned int *)(a1 + 72), v2, v3, v4, v1);
}

id sub_5DD80(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  objc_super v6;

  v1 = *(_QWORD *)(a1 + 56);
  v2 = *(_QWORD *)(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  v4 = *(_QWORD *)(a1 + 48);
  v6.receiver = *(id *)(a1 + 64);
  v6.super_class = (Class)&OBJC_METACLASS___TUIElementTextDropCapInstantiator;
  return objc_msgSendSuper2(&v6, "instantiateChildrenOfNode:object:containingBuilder:context:block:", *(unsigned int *)(a1 + 72), v2, v3, v4, v1);
}

id sub_5E2B8(const xmlNode *a1, unint64_t a2, uint64_t a3)
{
  TUIStringTextFragment *v6;
  id v7;
  NSMutableArray *v8;
  NSMutableArray **v9;
  id v10;
  void *v11;
  _xmlNode *children;
  unint64_t v13;
  uint64_t v14;
  void *v15;
  TUIStyledTextFragment *v17;
  TUIStyledTextFragment *v18;
  TUIStyledTextFragment **v19;
  TUIStyledTextFragment *v20;
  TUIStyledTextFragment *v21;
  id v22;
  TUIStyledTextFragment *v23;
  xmlChar *Prop;
  TUIStyledTextFragment *v25;
  void *v26;
  TUIHyperlinkTextFragment *v27;
  TUIHyperlinkTextFragment *v28;
  TUIStyledTextFragment *v29;
  TUIStyledTextFragment *v30;
  TUIStyledTextFragment *v31;
  TUIStyledTextFragment *v32;
  NSMutableArray *v33;
  NSMutableArray *v34;

  if (!xmlNodeIsText(a1))
  {
    if (xmlStrcasecmp(a1->name, (const xmlChar *)"br"))
    {
      if (xmlStrcasecmp(a1->name, (const xmlChar *)"str") && xmlStrcasecmp(a1->name, (const xmlChar *)"attr"))
      {
        if (a2 > 0x32)
          return &__NSArray0__struct;
        v8 = objc_opt_new(NSMutableArray);
        children = a1->children;
        if (children)
        {
          v13 = a2 + 1;
          do
          {
            v14 = sub_5E2B8(children, v13, a3);
            v15 = (void *)objc_claimAutoreleasedReturnValue(v14);
            -[NSMutableArray addObjectsFromArray:](v8, "addObjectsFromArray:", v15);

            children = children->next;
          }
          while (children);
        }
        if ((a3 & 1) == 0)
          goto LABEL_21;
        if (xmlStrcasecmp(a1->name, (const xmlChar *)"span"))
        {
          if (xmlStrcasecmp(a1->name, (const xmlChar *)"em") && xmlStrcasecmp(a1->name, (const xmlChar *)"i"))
          {
            if (xmlStrcasecmp(a1->name, (const xmlChar *)"b") && xmlStrcasecmp(a1->name, (const xmlChar *)"strong"))
            {
              if (xmlStrcasecmp(a1->name, (const xmlChar *)"s"))
              {
                if (xmlStrcasecmp(a1->name, (const xmlChar *)"a"))
                {
LABEL_21:
                  v10 = -[NSMutableArray copy](v8, "copy");
                  goto LABEL_4;
                }
                Prop = xmlGetProp(a1, (const xmlChar *)"href");
                if (Prop
                  && (v25 = (TUIStyledTextFragment *)objc_msgSend(objc_alloc((Class)NSString), "initWithBytes:length:encoding:", Prop, xmlStrlen(Prop), 4)) != 0)
                {
                  v18 = v25;
                  v26 = (void *)objc_claimAutoreleasedReturnValue(+[NSURL URLWithString:](NSURL, "URLWithString:", v25));
                  xmlFree(Prop);
                  if (v26)
                  {
                    v27 = -[TUIHyperlinkTextFragment initWithURL:fragments:]([TUIHyperlinkTextFragment alloc], "initWithURL:fragments:", v26, v8);
                    v28 = v27;
                    v11 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v28, 1));

                    goto LABEL_33;
                  }
                }
                else
                {
                  xmlFree(Prop);
                  v18 = 0;
                }
                v22 = -[NSMutableArray copy](v8, "copy");
LABEL_32:
                v11 = v22;
LABEL_33:

                goto LABEL_5;
              }
              v23 = [TUIStyledTextFragment alloc];
              v18 = -[TUIStyledTextFragment initWithStyle:attributes:fragments:](v23, "initWithStyle:attributes:fragments:", 8, TUIAttributesNil, v8);
              v29 = v18;
              v19 = &v29;
            }
            else
            {
              v21 = [TUIStyledTextFragment alloc];
              v18 = -[TUIStyledTextFragment initWithStyle:attributes:fragments:](v21, "initWithStyle:attributes:fragments:", 1, TUIAttributesNil, v8);
              v30 = v18;
              v19 = &v30;
            }
          }
          else
          {
            v17 = [TUIStyledTextFragment alloc];
            v18 = -[TUIStyledTextFragment initWithStyle:attributes:fragments:](v17, "initWithStyle:attributes:fragments:", 2, TUIAttributesNil, v8);
            v31 = v18;
            v19 = &v31;
          }
        }
        else
        {
          v20 = [TUIStyledTextFragment alloc];
          v18 = -[TUIStyledTextFragment initWithStyle:attributes:fragments:](v20, "initWithStyle:attributes:fragments:", 0, TUIAttributesNil, v8);
          v32 = v18;
          v19 = &v32;
        }
        v22 = (id)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", v19, 1));
        goto LABEL_32;
      }
    }
    else if ((_DWORD)a3)
    {
      v8 = -[TUIStringTextFragment initWithString:]([TUIStringTextFragment alloc], "initWithString:", CFSTR("\n"));
      v33 = v8;
      v9 = &v33;
      goto LABEL_3;
    }
    v11 = 0;
    return v11;
  }
  v6 = [TUIStringTextFragment alloc];
  v7 = objc_msgSend(objc_alloc((Class)NSString), "initWithBytes:length:encoding:", a1->content, xmlStrlen(a1->content), 4);
  v8 = -[TUIStringTextFragment initWithString:](v6, "initWithString:", v7);

  v34 = v8;
  v9 = &v34;
LABEL_3:
  v10 = (id)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", v9, 1));
LABEL_4:
  v11 = v10;
LABEL_5:

  return v11;
}

void sub_5E708(id a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[NSCharacterSet characterSetWithCharactersInString:](NSCharacterSet, "characterSetWithCharactersInString:", CFSTR("<>&")));
  v2 = (void *)qword_2CB458;
  qword_2CB458 = v1;

}

void sub_5EBE0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_5EC48(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_5ECA8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_5F694(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,void *__p,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,char a52)
{
  void *v52;

  sub_60EE0((uint64_t)&a52);
  _Unwind_Resume(a1);
}

uint64_t sub_5F770(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;

  if ((uint64_t *)a2 != a3)
  {
    sub_65864(a3, *(uint64_t **)(a1 + 8), a2);
    v6 = v5;
    v7 = *(_QWORD *)(a1 + 8);
    if (v7 != v5)
    {
      do
      {
        v8 = *(void **)(v7 - 40);
        v7 -= 40;

      }
      while (v7 != v6);
    }
    *(_QWORD *)(a1 + 8) = v6;
  }
  return a2;
}

uint64_t sub_5F7DC(uint64_t a1, id a2)
{
  uint64_t i;
  id v5;
  id v6;

  for (i = *(_QWORD *)(a1 + 24); i != *(_QWORD *)(a1 + 32); i += 96)
  {
    v5 = *(id *)(i + 32);
    v6 = objc_msgSend(v5, "role");

    if (v6 == a2)
      break;
  }
  return i;
}

void sub_5F84C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

double sub_5F85C(uint64_t a1, unint64_t a2, unint64_t a3)
{
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  unint64_t v14;
  double v15;
  double v16;
  double v17;
  unint64_t v18;
  unint64_t v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;

  if (a3 <= 1)
    v3 = 1;
  else
    v3 = a3;
  v4 = a2 + v3 - 1;
  v5 = *(_QWORD *)(a1 + 112);
  if (v5)
  {
    v6 = v4 / v5 * v5;
    v4 %= v5;
    v7 = *(double *)(a1 + 72);
    v8 = *(double *)(a1 + 80);
    v9 = v8 + v7;
    if (v8 == 0.0)
    {
      v12 = v9 * (double)v6;
      v11 = *(double *)(a1 + 104);
      if (v11 > 0.0)
        v12 = floor(v12 * v11) / v11;
    }
    else
    {
      v10 = -(v8 - v9 * (double)(v6 + 1));
      v11 = *(double *)(a1 + 104);
      if (v11 > 0.0)
        v10 = floor(v10 * v11) / v11;
      v12 = v10 - v7;
    }
  }
  else
  {
    v7 = *(double *)(a1 + 72);
    v8 = *(double *)(a1 + 80);
    v11 = *(double *)(a1 + 104);
    v9 = v8 + v7;
    v12 = 0.0;
  }
  if (v8 == 0.0)
  {
    v17 = -(v8 - v9 * (double)(v4 + 1));
    if (v11 > 0.0)
      v17 = floor(v11 * v17) / v11;
    if (v5)
    {
      v18 = a2 / v5 * v5;
      v19 = a2 % v5;
      v20 = v9 * (double)v18;
      if (v11 <= 0.0)
      {
        v21 = v9 * (double)v19;
        goto LABEL_31;
      }
      v20 = floor(v11 * v20) / v11;
      v21 = v9 * (double)v19;
    }
    else
    {
      v21 = v9 * (double)a2;
      v20 = 0.0;
      if (v11 <= 0.0)
      {
LABEL_31:
        v24 = v12 + v17;
        v25 = v20 + v21;
        return v24 - v25;
      }
    }
    v21 = floor(v11 * v21) / v11;
    goto LABEL_31;
  }
  v13 = v8 * -2.0 + v9 * (double)(v4 + 2);
  if (v11 > 0.0)
    v13 = floor(v11 * v13) / v11;
  if (v5)
  {
    v14 = a2 / v5 * v5;
    a2 -= v14;
    v15 = -(v8 - v9 * (double)(v14 + 1));
    if (v11 > 0.0)
      v15 = floor(v11 * v15) / v11;
    v16 = v15 - v7;
  }
  else
  {
    v16 = 0.0;
  }
  v22 = v12 + v13;
  v23 = -(v8 - v9 * (double)(a2 + 1));
  if (v11 > 0.0)
    v23 = floor(v11 * v23) / v11;
  v24 = v22 - v7;
  v25 = v16 + v23 - v7;
  return v24 - v25;
}

void sub_5FA24(uint64_t a1, uint64_t a2)
{
  id v3;
  id v4;
  uint64_t v5;
  void *v6;
  id v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  _BYTE v12[128];

  *(_BYTE *)(a1 + 64) = a2;
  v8 = 0u;
  v9 = 0u;
  v10 = 0u;
  v11 = 0u;
  v3 = *(id *)(a1 + 88);
  v4 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
  if (v4)
  {
    v5 = *(_QWORD *)v9;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v9 != v5)
          objc_enumerationMutation(v3);
        v7 = *(id *)(*((_QWORD *)&v8 + 1) + 8 * (_QWORD)v6);
        objc_msgSend(v7, "setHidden:", a2, (_QWORD)v8);

        v6 = (char *)v6 + 1;
      }
      while (v4 != v6);
      v4 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
    }
    while (v4);
  }

}

void sub_5FB2C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_5FB58(_QWORD *a1, _QWORD *a2, void *a3)
{
  id v5;
  id v6;
  id v7;
  NSMutableIndexSet *v8;
  id v9;
  _QWORD v10[4];
  id v11;
  _QWORD *v12;
  _QWORD v13[4];
  id v14;
  _QWORD *v15;
  NSMutableIndexSet *v16;
  id v17;

  v5 = a3;
  v16 = 0;
  v17 = 0;
  sub_65B70(a2, a1, &v16);
  v6 = v17;
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 3221225472;
  v13[2] = sub_65BDC;
  v13[3] = &unk_23F1A8;
  v15 = a1;
  v7 = v5;
  v14 = v7;
  objc_msgSend(v6, "enumerateIndexesUsingBlock:", v13);

  v8 = v16;
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472;
  v10[2] = sub_65BF4;
  v10[3] = &unk_23F1A8;
  v12 = a1;
  v9 = v7;
  v11 = v9;
  -[NSMutableIndexSet enumerateIndexesUsingBlock:](v8, "enumerateIndexesUsingBlock:", v10);

}

void sub_5FC70(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *a19)
{
  void *v19;
  void *v20;
  uint64_t v21;

  _Unwind_Resume(a1);
}

uint64_t sub_5FCC0(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  objc_storeStrong((id *)(a1 + 16), *(id *)(a2 + 16));
  sub_61860((void **)(a1 + 24));
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 24) = 0;
  *(_QWORD *)(a2 + 32) = 0;
  *(_QWORD *)(a2 + 40) = 0;
  return a1;
}

double sub_5FD14(uint64_t a1)
{
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  unint64_t v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;

  v1 = *(_QWORD *)(a1 + 112);
  if (v1)
  {
    v2 = *(_QWORD *)(a1 + 8) - 1;
    v3 = v2 / v1 * v1;
    v4 = v2 % v1;
    v6 = *(double *)(a1 + 72);
    v5 = *(double *)(a1 + 80);
    v7 = v5 + v6;
    if (v5 == 0.0)
    {
      v20 = v7 * (double)v3;
      v21 = *(double *)(a1 + 104);
      if (v21 > 0.0)
        v20 = floor(v20 * v21) / v21;
      v22 = -(v5 - v7 * (double)(v4 + 1));
      if (v21 > 0.0)
        v22 = floor(v21 * v22) / v21;
      return v20 + v22;
    }
    else
    {
      v8 = -(v5 - v7 * (double)(v3 + 1));
      v9 = *(double *)(a1 + 104);
      if (v9 > 0.0)
        v8 = floor(v8 * v9) / v9;
      v10 = v8 - v6;
      v11 = v5 * -2.0 + v7 * (double)(v4 + 2);
      if (v9 > 0.0)
        v11 = floor(v9 * v11) / v9;
      return v10 + v11 - v6;
    }
  }
  else
  {
    v13 = *(_QWORD *)(a1 + 8);
    v14 = *(double *)(a1 + 72);
    v15 = *(double *)(a1 + 80);
    v16 = v15 + v14;
    v17 = *(double *)(a1 + 104);
    if (v15 == 0.0)
    {
      v23 = -(v15 - v16 * (double)v13);
      if (v17 > 0.0)
        v23 = floor(v17 * v23) / v17;
      v19 = v23 + 0.0;
    }
    else
    {
      v18 = v15 * -2.0 + v16 * (double)(v13 + 1);
      if (v17 > 0.0)
        v18 = floor(v17 * v18) / v17;
      v19 = v18 + 0.0 - v14;
    }
    return *(double *)(a1 + 32) + v19 + *(double *)(a1 + 48);
  }
}

double sub_5FE6C(uint64_t a1, uint64_t a2, _QWORD *a3, unint64_t a4)
{
  unint64_t v4;
  uint64_t v6;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t *v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t *v16;
  double v17;
  double v18;
  double *v19;
  double *v20;
  double *v21;
  uint64_t v22;
  double v23;
  double *v24;
  double v25;
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  void *v29;
  __int128 v30;
  double v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  double v40;
  double v41;
  double v42;
  double v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  double v47;
  unint64_t v48;
  double v49;
  double v50;
  double v51;
  char *v52;
  double v53;
  double v54;
  double v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  const CGPoint *v60;
  CGFloat *p_y;
  BOOL v62;
  const CGPoint *v63;
  double v65;
  __int128 v67;
  uint64_t v68;
  _OWORD v69[2];
  __int128 v70[2];
  void *__p[3];
  char v72;
  __int128 v73;
  __int128 v74;
  void *v75;
  double *v76;
  uint64_t v77;

  v4 = a4;
  v6 = a2;
  v75 = 0;
  v76 = 0;
  v77 = 0;
  if (!a4)
  {
    v8 = *(_OWORD *)(a1 + 16);
    v73 = *(_OWORD *)a1;
    v74 = v8;
    v4 = 1;
    while (*((_QWORD *)&v73 + 1) != *(_QWORD *)(a1 + 40) || *((_QWORD *)&v74 + 1) != *(_QWORD *)(a1 + 56))
    {
      if (v4 <= (uint64_t)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v73 + 88 * *((_QWORD *)&v73 + 1) + 24)
                                     + 96 * *((_QWORD *)&v74 + 1)
                                     + 48)
                         - *(_QWORD *)(*(_QWORD *)(*(_QWORD *)v73 + 88 * *((_QWORD *)&v73 + 1) + 24)
                                     + 96 * *((_QWORD *)&v74 + 1)
                                     + 40)) >> 6)
        v4 = (uint64_t)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v73 + 88 * *((_QWORD *)&v73 + 1) + 24)
                                 + 96 * *((_QWORD *)&v74 + 1)
                                 + 48)
                     - *(_QWORD *)(*(_QWORD *)(*(_QWORD *)v73 + 88 * *((_QWORD *)&v73 + 1) + 24)
                                 + 96 * *((_QWORD *)&v74 + 1)
                                 + 40)) >> 6;
      ++*((_QWORD *)&v74 + 1);
      sub_65C04((uint64_t)&v73);
    }
    v6 = a2;
  }
  *(_QWORD *)&v73 = 0;
  sub_65CE0((uint64_t)&v75, v4, &v73);
  v9 = *(_OWORD *)(a1 + 16);
  v73 = *(_OWORD *)a1;
  v74 = v9;
  while (1)
  {
    v10 = *((_QWORD *)&v74 + 1);
    if (*((_QWORD *)&v73 + 1) == *(_QWORD *)(a1 + 40) && *((_QWORD *)&v74 + 1) == *(_QWORD *)(a1 + 56))
      break;
    v11 = *(_QWORD *)(*(_QWORD *)v73 + 88 * *((_QWORD *)&v73 + 1) + 24);
    v12 = (unint64_t *)(v11 + 96 * *((_QWORD *)&v74 + 1));
    v13 = v12[5];
    v14 = v12[6];
    if (v13 != v14)
    {
      v15 = 0;
      v16 = (unint64_t *)(v11 + 96 * *((_QWORD *)&v74 + 1) + 16);
      do
      {
        v17 = sub_5F85C(v6, *v12, *v16);
        sub_65980(v13, 0, (uint64_t)&v72, v17);
        if (v15 < v4)
          *((double *)v75 + v15) = fmax(*((double *)v75 + v15), v18);
        ++v15;
        v13 += 64;
      }
      while (v13 != v14);
      v10 = *((_QWORD *)&v74 + 1);
    }
    *((_QWORD *)&v74 + 1) = v10 + 1;
    sub_65C04((uint64_t)&v73);
  }
  memset(__p, 0, sizeof(__p));
  *(_QWORD *)&v73 = 0;
  sub_65CE0((uint64_t)__p, v4 + 1, &v73);
  v19 = (double *)v75;
  v20 = v76;
  v21 = (double *)__p[0];
  if (v75 == v76)
  {
    v26 = 0;
    v23 = 0.0;
  }
  else
  {
    v22 = 0;
    v23 = 0.0;
    v24 = (double *)__p[0];
    do
    {
      v25 = *v19++;
      *v24++ = v23;
      v23 = v23 + v25;
      --v22;
    }
    while (v19 != v20);
    v26 = -v22;
  }
  v21[v26] = v23;
  v27 = *(_OWORD *)(a1 + 16);
  v70[0] = *(_OWORD *)a1;
  v70[1] = v27;
  v28 = *(_OWORD *)(a1 + 48);
  v69[0] = *(_OWORD *)(a1 + 32);
  v69[1] = v28;
  *(_QWORD *)&v67 = v6;
  *((_QWORD *)&v67 + 1) = __p;
  v68 = a1;
  sub_65D10(a3, v70, (uint64_t)v69, &v67);
  v29 = *(void **)(a1 + 120);
  v30 = *(_OWORD *)&__p[1];
  v31 = *((double *)__p[1] - 1);
  v32 = *(_OWORD *)(a1 + 104);
  *(void **)(a1 + 104) = __p[0];
  *(_OWORD *)__p = v32;
  *(_OWORD *)(a1 + 112) = v30;
  __p[2] = v29;
  v65 = sub_5FD14(v6);
  v33 = *(_OWORD *)(a1 + 16);
  v73 = *(_OWORD *)a1;
  v74 = v33;
  while (1)
  {
    v34 = *((_QWORD *)&v74 + 1);
    if (*((_QWORD *)&v73 + 1) == *(_QWORD *)(a1 + 40) && *((_QWORD *)&v74 + 1) == *(_QWORD *)(a1 + 56))
      break;
    v35 = *(_QWORD *)(*(_QWORD *)v73 + 88 * *((_QWORD *)&v73 + 1) + 24);
    v36 = *(_DWORD *)(a1 + 80);
    if (v36)
    {
      v37 = v35 + 96 * *((_QWORD *)&v74 + 1);
      v38 = *(_QWORD *)(v37 + 40);
      v39 = *(_QWORD *)(v37 + 48);
      v40 = 0.0;
      while (v38 != v39)
      {
        v40 = v40 + *(double *)(v38 + 56);
        v38 += 64;
      }
      v41 = 0.0;
      if (v36 == 5)
        v41 = 1.0;
      if (v36 == 3)
        v41 = 1.0;
      if (v36 == 2)
        v42 = 0.5;
      else
        v42 = v41;
    }
    else
    {
      v42 = 0.0;
      v40 = 0.0;
    }
    sub_66124(v6, *(_QWORD *)(v35 + 96 * *((_QWORD *)&v74 + 1)), *(_QWORD *)(v35 + 96 * *((_QWORD *)&v74 + 1) + 16), 1);
    v44 = v35 + 96 * v34;
    v46 = *(_QWORD *)(v44 + 40);
    v45 = *(_QWORD *)(v44 + 48);
    if (v46 != v45)
    {
      v47 = v43;
      v48 = 0;
      v49 = v42 * (v31 - v40);
      do
      {
        v50 = 0.0;
        v51 = 0.0;
        if (v48 < v4)
          v51 = *((double *)v75 + v48);
        if (*(_DWORD *)(a1 + 80))
        {
          v51 = *(double *)(v46 + 56);
        }
        else
        {
          v52 = (char *)objc_msgSend(*(id *)v46, "valign", 0.0);
          v53 = 0.0;
          if ((unint64_t)(v52 - 1) <= 3)
            v53 = dbl_22F350[(_QWORD)(v52 - 1)];
          v50 = v53 * (v51 - *(double *)(v46 + 56));
        }
        v54 = v47 + *(double *)(a1 + 64);
        v55 = v50 + v49 + *(double *)(a1 + 72);
        *(double *)(v46 + 32) = v54;
        *(double *)(v46 + 40) = v55;
        v57 = *(_QWORD *)(v46 + 8);
        v56 = *(_QWORD *)(v46 + 16);
        while (v57 != v56)
        {
          v58 = *(_QWORD *)(v57 + 56);
          v59 = a3[14] + 152 * v58;
          v60 = (const CGPoint *)(v59 + 136);
          p_y = (CGFloat *)(v59 + 144);
          v62 = v58 == -1;
          if (v58 == -1)
            v63 = &CGPointZero;
          else
            v63 = v60;
          if (v62)
            p_y = &CGPointZero.y;
          sub_66990((double *)(v57 + 8), v54 - v63->x + *(double *)(v57 + 72), v55 - *p_y + *(double *)(v57 + 64));
          v57 += 96;
        }
        v49 = v49 + v51;
        ++v48;
        v46 += 64;
        v6 = a2;
      }
      while (v46 != v45);
    }
    ++*((_QWORD *)&v74 + 1);
    sub_65C04((uint64_t)&v73);
  }
  *(double *)(a1 + 88) = v65;
  *(double *)(a1 + 96) = v31;
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v75)
  {
    v76 = (double *)v75;
    operator delete(v75);
  }
  return v65;
}

void sub_6032C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void *__p,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,void *a32,uint64_t a33)
{
  if (__p)
    operator delete(__p);
  if (a32)
    operator delete(a32);
  _Unwind_Resume(exception_object);
}

void sub_60388(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5, double a6)
{
  BOOL v6;
  uint64_t v10;
  double v13;
  double v14;
  double v15;
  double v16;
  id v17;
  void *v18;

  if (*(_QWORD *)(a1 + 16))
    v6 = a3 == a4;
  else
    v6 = 1;
  if (!v6)
  {
    v10 = a3;
    do
    {
      if (*(_QWORD *)(v10 + 16) == 1)
      {
        sub_66124(a2, *(_QWORD *)v10, 1uLL, 1);
        v14 = v13;
        v15 = *(double *)(a2 + 88);
        v16 = *(double *)(a1 + 8);
        v17 = *(id *)(v10 + 32);
        v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v17, "identifier"));
        sub_66A0C((_QWORD *)a1, v18, a5 + v14, a6 - (v16 * -0.5 + v15 * 0.5));

      }
      v10 += 96;
    }
    while (v10 != a4);
  }
}

void sub_60474(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

double sub_60490(uint64_t a1, uint64_t a2, _QWORD *a3, unint64_t a4)
{
  unint64_t v4;
  unint64_t *v8;
  unint64_t *v9;
  unint64_t *v10;
  unint64_t *v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  double v15;
  double v16;
  double *v17;
  double *v18;
  double *v19;
  uint64_t v20;
  double v21;
  double *v22;
  double v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t *v26;
  void *v27;
  __int128 v28;
  double v29;
  __int128 v30;
  unint64_t *v31;
  int v32;
  double v33;
  double v34;
  unint64_t i;
  double v36;
  double v37;
  unint64_t v38;
  unint64_t v39;
  double v40;
  unint64_t v41;
  double v42;
  double v43;
  double v44;
  char *v45;
  double v46;
  double v47;
  double v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  const CGPoint *v53;
  CGFloat *p_y;
  BOOL v55;
  const CGPoint *v56;
  double v58;
  uint64_t v59;
  unint64_t *v60;
  __int128 v61;
  uint64_t v62;
  uint64_t v63;
  void *__p[3];
  char v65;
  void *v66;
  double *v67;
  uint64_t v68;

  v4 = a4;
  v66 = 0;
  v67 = 0;
  v68 = 0;
  if (!a4)
  {
    v8 = *(unint64_t **)a1;
    v9 = *(unint64_t **)(a1 + 8);
    v4 = 1;
    if (v9 != *(unint64_t **)a1)
    {
      do
      {
        if (v4 <= (uint64_t)(v8[7] - v8[6]) >> 6)
          v4 = (uint64_t)(v8[7] - v8[6]) >> 6;
        v8 += 12;
      }
      while (v8 != v9);
    }
  }
  __p[0] = 0;
  sub_65CE0((uint64_t)&v66, v4, __p);
  v11 = *(unint64_t **)a1;
  v10 = *(unint64_t **)(a1 + 8);
  if (v10 != *(unint64_t **)a1)
  {
    do
    {
      v12 = v11[6];
      v13 = v11[7];
      if (v12 != v13)
      {
        v14 = 0;
        do
        {
          v15 = sub_5F85C(a2, *v11, v11[2]);
          sub_65980(v12, 0, (uint64_t)&v65, v15);
          if (v14 < v4)
            *((double *)v66 + v14) = fmax(*((double *)v66 + v14), v16);
          ++v14;
          v12 += 64;
        }
        while (v12 != v13);
        v10 = *(unint64_t **)(a1 + 8);
      }
      v11 += 12;
    }
    while (v11 != v10);
  }
  memset(__p, 0, sizeof(__p));
  v63 = 0;
  sub_65CE0((uint64_t)__p, v4 + 1, &v63);
  v17 = (double *)v66;
  v18 = v67;
  v19 = (double *)__p[0];
  if (v66 == v67)
  {
    v24 = 0;
    v21 = 0.0;
  }
  else
  {
    v20 = 0;
    v21 = 0.0;
    v22 = (double *)__p[0];
    do
    {
      v23 = *v17++;
      *v22++ = v21;
      v21 = v21 + v23;
      --v20;
    }
    while (v17 != v18);
    v24 = -v20;
  }
  v19[v24] = v21;
  v25 = *(uint64_t **)a1;
  v26 = *(uint64_t **)(a1 + 8);
  *(_QWORD *)&v61 = a2;
  *((_QWORD *)&v61 + 1) = __p;
  v62 = a1;
  sub_66BD4(a3, v25, v26, &v61);
  v27 = *(void **)(a1 + 72);
  v28 = *(_OWORD *)&__p[1];
  v29 = *((double *)__p[1] - 1);
  v30 = *(_OWORD *)(a1 + 56);
  *(void **)(a1 + 56) = __p[0];
  *(_OWORD *)__p = v30;
  *(_OWORD *)(a1 + 64) = v28;
  __p[2] = v27;
  v58 = sub_5FD14(a2);
  v31 = *(unint64_t **)a1;
  if (*(_QWORD *)(a1 + 8) != *(_QWORD *)a1)
  {
    v59 = a2;
    do
    {
      v32 = *(_DWORD *)(a1 + 32);
      v33 = 0.0;
      v34 = 0.0;
      if (v32)
      {
        for (i = v31[6]; i != v31[7]; i += 64)
          v34 = v34 + *(double *)(i + 56);
        v36 = 0.0;
        if (v32 == 5)
          v36 = 1.0;
        if (v32 == 3)
          v36 = 1.0;
        if (v32 == 2)
          v33 = 0.5;
        else
          v33 = v36;
      }
      sub_66124(a2, *v31, v31[2], 1);
      v38 = v31[6];
      v39 = v31[7];
      v60 = v31;
      if (v38 != v39)
      {
        v40 = v37;
        v41 = 0;
        v42 = v33 * (v29 - v34);
        do
        {
          v43 = 0.0;
          v44 = 0.0;
          if (v41 < v4)
            v44 = *((double *)v66 + v41);
          if (*(_DWORD *)(a1 + 32))
          {
            v44 = *(double *)(v38 + 56);
          }
          else
          {
            v45 = (char *)objc_msgSend(*(id *)v38, "valign", 0.0);
            v46 = 0.0;
            if ((unint64_t)(v45 - 1) <= 3)
              v46 = dbl_22F350[(_QWORD)(v45 - 1)];
            v43 = v46 * (v44 - *(double *)(v38 + 56));
          }
          v47 = v40 + *(double *)(a1 + 16);
          v48 = v43 + v42 + *(double *)(a1 + 24);
          *(double *)(v38 + 32) = v47;
          *(double *)(v38 + 40) = v48;
          v49 = *(_QWORD *)(v38 + 8);
          v50 = *(_QWORD *)(v38 + 16);
          while (v49 != v50)
          {
            v51 = *(_QWORD *)(v49 + 56);
            v52 = a3[14] + 152 * v51;
            v53 = (const CGPoint *)(v52 + 136);
            p_y = (CGFloat *)(v52 + 144);
            v55 = v51 == -1;
            if (v51 == -1)
              v56 = &CGPointZero;
            else
              v56 = v53;
            if (v55)
              p_y = &CGPointZero.y;
            sub_66990((double *)(v49 + 8), v47 - v56->x + *(double *)(v49 + 72), v48 - *p_y + *(double *)(v49 + 64));
            v49 += 96;
          }
          v42 = v42 + v44;
          ++v41;
          v38 += 64;
        }
        while (v38 != v39);
      }
      a2 = v59;
      v31 = v60 + 12;
    }
    while (v60 + 12 != *(unint64_t **)(a1 + 8));
  }
  *(double *)(a1 + 40) = v58;
  *(double *)(a1 + 48) = v29;
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v66)
  {
    v67 = (double *)v66;
    operator delete(v66);
  }
  return v58;
}

void sub_60840(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *__p, uint64_t a18, uint64_t a19, uint64_t a20,void *a21,uint64_t a22)
{
  if (__p)
    operator delete(__p);
  if (a21)
    operator delete(a21);
  _Unwind_Resume(exception_object);
}

double sub_60890(uint64_t a1, uint64_t a2, _QWORD *a3, unint64_t a4)
{
  unint64_t v4;
  uint64_t v6;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t *v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t *v16;
  double v17;
  double v18;
  double *v19;
  double *v20;
  double *v21;
  uint64_t v22;
  double v23;
  double *v24;
  double v25;
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  void *v29;
  __int128 v30;
  double v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  double v40;
  double v41;
  double v42;
  double v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  double v47;
  unint64_t v48;
  double v49;
  double v50;
  double v51;
  char *v52;
  double v53;
  double v54;
  double v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  const CGPoint *v60;
  CGFloat *p_y;
  BOOL v62;
  const CGPoint *v63;
  double v65;
  __int128 v67;
  uint64_t v68;
  _OWORD v69[2];
  __int128 v70[2];
  void *__p[3];
  char v72;
  __int128 v73;
  __int128 v74;
  void *v75;
  double *v76;
  uint64_t v77;

  v4 = a4;
  v6 = a2;
  v75 = 0;
  v76 = 0;
  v77 = 0;
  if (!a4)
  {
    v8 = *(_OWORD *)(a1 + 16);
    v73 = *(_OWORD *)a1;
    v74 = v8;
    v4 = 1;
    while (*((_QWORD *)&v73 + 1) != *(_QWORD *)(a1 + 40) || *((_QWORD *)&v74 + 1) != *(_QWORD *)(a1 + 56))
    {
      if (v4 <= (uint64_t)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v73 + 88 * *((_QWORD *)&v73 + 1) + 24)
                                     + 96 * *((_QWORD *)&v74 + 1)
                                     + 48)
                         - *(_QWORD *)(*(_QWORD *)(*(_QWORD *)v73 + 88 * *((_QWORD *)&v73 + 1) + 24)
                                     + 96 * *((_QWORD *)&v74 + 1)
                                     + 40)) >> 6)
        v4 = (uint64_t)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v73 + 88 * *((_QWORD *)&v73 + 1) + 24)
                                 + 96 * *((_QWORD *)&v74 + 1)
                                 + 48)
                     - *(_QWORD *)(*(_QWORD *)(*(_QWORD *)v73 + 88 * *((_QWORD *)&v73 + 1) + 24)
                                 + 96 * *((_QWORD *)&v74 + 1)
                                 + 40)) >> 6;
      ++*((_QWORD *)&v74 + 1);
      sub_67338((uint64_t)&v73);
    }
    v6 = a2;
  }
  *(_QWORD *)&v73 = 0;
  sub_65CE0((uint64_t)&v75, v4, &v73);
  v9 = *(_OWORD *)(a1 + 16);
  v73 = *(_OWORD *)a1;
  v74 = v9;
  while (1)
  {
    v10 = *((_QWORD *)&v74 + 1);
    if (*((_QWORD *)&v73 + 1) == *(_QWORD *)(a1 + 40) && *((_QWORD *)&v74 + 1) == *(_QWORD *)(a1 + 56))
      break;
    v11 = *(_QWORD *)(*(_QWORD *)v73 + 88 * *((_QWORD *)&v73 + 1) + 24);
    v12 = (unint64_t *)(v11 + 96 * *((_QWORD *)&v74 + 1));
    v13 = v12[5];
    v14 = v12[6];
    if (v13 != v14)
    {
      v15 = 0;
      v16 = (unint64_t *)(v11 + 96 * *((_QWORD *)&v74 + 1) + 16);
      do
      {
        v17 = sub_5F85C(v6, *v12, *v16);
        sub_65980(v13, 0, (uint64_t)&v72, v17);
        if (v15 < v4)
          *((double *)v75 + v15) = fmax(*((double *)v75 + v15), v18);
        ++v15;
        v13 += 64;
      }
      while (v13 != v14);
      v10 = *((_QWORD *)&v74 + 1);
    }
    *((_QWORD *)&v74 + 1) = v10 + 1;
    sub_67338((uint64_t)&v73);
  }
  memset(__p, 0, sizeof(__p));
  *(_QWORD *)&v73 = 0;
  sub_65CE0((uint64_t)__p, v4 + 1, &v73);
  v19 = (double *)v75;
  v20 = v76;
  v21 = (double *)__p[0];
  if (v75 == v76)
  {
    v26 = 0;
    v23 = 0.0;
  }
  else
  {
    v22 = 0;
    v23 = 0.0;
    v24 = (double *)__p[0];
    do
    {
      v25 = *v19++;
      *v24++ = v23;
      v23 = v23 + v25;
      --v22;
    }
    while (v19 != v20);
    v26 = -v22;
  }
  v21[v26] = v23;
  v27 = *(_OWORD *)(a1 + 16);
  v70[0] = *(_OWORD *)a1;
  v70[1] = v27;
  v28 = *(_OWORD *)(a1 + 48);
  v69[0] = *(_OWORD *)(a1 + 32);
  v69[1] = v28;
  *(_QWORD *)&v67 = v6;
  *((_QWORD *)&v67 + 1) = __p;
  v68 = a1;
  sub_67414(a3, v70, (uint64_t)v69, &v67);
  v29 = *(void **)(a1 + 120);
  v30 = *(_OWORD *)&__p[1];
  v31 = *((double *)__p[1] - 1);
  v32 = *(_OWORD *)(a1 + 104);
  *(void **)(a1 + 104) = __p[0];
  *(_OWORD *)__p = v32;
  *(_OWORD *)(a1 + 112) = v30;
  __p[2] = v29;
  v65 = sub_5FD14(v6);
  v33 = *(_OWORD *)(a1 + 16);
  v73 = *(_OWORD *)a1;
  v74 = v33;
  while (1)
  {
    v34 = *((_QWORD *)&v74 + 1);
    if (*((_QWORD *)&v73 + 1) == *(_QWORD *)(a1 + 40) && *((_QWORD *)&v74 + 1) == *(_QWORD *)(a1 + 56))
      break;
    v35 = *(_QWORD *)(*(_QWORD *)v73 + 88 * *((_QWORD *)&v73 + 1) + 24);
    v36 = *(_DWORD *)(a1 + 80);
    if (v36)
    {
      v37 = v35 + 96 * *((_QWORD *)&v74 + 1);
      v38 = *(_QWORD *)(v37 + 40);
      v39 = *(_QWORD *)(v37 + 48);
      v40 = 0.0;
      while (v38 != v39)
      {
        v40 = v40 + *(double *)(v38 + 56);
        v38 += 64;
      }
      v41 = 0.0;
      if (v36 == 5)
        v41 = 1.0;
      if (v36 == 3)
        v41 = 1.0;
      if (v36 == 2)
        v42 = 0.5;
      else
        v42 = v41;
    }
    else
    {
      v42 = 0.0;
      v40 = 0.0;
    }
    sub_66124(v6, *(_QWORD *)(v35 + 96 * *((_QWORD *)&v74 + 1)), *(_QWORD *)(v35 + 96 * *((_QWORD *)&v74 + 1) + 16), 1);
    v44 = v35 + 96 * v34;
    v46 = *(_QWORD *)(v44 + 40);
    v45 = *(_QWORD *)(v44 + 48);
    if (v46 != v45)
    {
      v47 = v43;
      v48 = 0;
      v49 = v42 * (v31 - v40);
      do
      {
        v50 = 0.0;
        v51 = 0.0;
        if (v48 < v4)
          v51 = *((double *)v75 + v48);
        if (*(_DWORD *)(a1 + 80))
        {
          v51 = *(double *)(v46 + 56);
        }
        else
        {
          v52 = (char *)objc_msgSend(*(id *)v46, "valign", 0.0);
          v53 = 0.0;
          if ((unint64_t)(v52 - 1) <= 3)
            v53 = dbl_22F350[(_QWORD)(v52 - 1)];
          v50 = v53 * (v51 - *(double *)(v46 + 56));
        }
        v54 = v47 + *(double *)(a1 + 64);
        v55 = v50 + v49 + *(double *)(a1 + 72);
        *(double *)(v46 + 32) = v54;
        *(double *)(v46 + 40) = v55;
        v57 = *(_QWORD *)(v46 + 8);
        v56 = *(_QWORD *)(v46 + 16);
        while (v57 != v56)
        {
          v58 = *(_QWORD *)(v57 + 56);
          v59 = a3[14] + 152 * v58;
          v60 = (const CGPoint *)(v59 + 136);
          p_y = (CGFloat *)(v59 + 144);
          v62 = v58 == -1;
          if (v58 == -1)
            v63 = &CGPointZero;
          else
            v63 = v60;
          if (v62)
            p_y = &CGPointZero.y;
          sub_66990((double *)(v57 + 8), v54 - v63->x + *(double *)(v57 + 72), v55 - *p_y + *(double *)(v57 + 64));
          v57 += 96;
        }
        v49 = v49 + v51;
        ++v48;
        v46 += 64;
        v6 = a2;
      }
      while (v46 != v45);
    }
    ++*((_QWORD *)&v74 + 1);
    sub_67338((uint64_t)&v73);
  }
  *(double *)(a1 + 88) = v65;
  *(double *)(a1 + 96) = v31;
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v75)
  {
    v76 = (double *)v75;
    operator delete(v75);
  }
  return v65;
}

void sub_60D50(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void *__p,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,void *a32,uint64_t a33)
{
  if (__p)
    operator delete(__p);
  if (a32)
    operator delete(a32);
  _Unwind_Resume(exception_object);
}

void sub_60DAC(uint64_t a1, uint64_t a2)
{
  id v3;
  id v4;
  uint64_t v5;
  void *v6;
  id v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  _BYTE v12[128];

  *(_BYTE *)(a1 + 40) = a2;
  v8 = 0u;
  v9 = 0u;
  v10 = 0u;
  v11 = 0u;
  v3 = *(id *)(a1 + 88);
  v4 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
  if (v4)
  {
    v5 = *(_QWORD *)v9;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v9 != v5)
          objc_enumerationMutation(v3);
        v7 = *(id *)(*((_QWORD *)&v8 + 1) + 8 * (_QWORD)v6);
        objc_msgSend(v7, "setHidden:", a2, (_QWORD)v8);

        v6 = (char *)v6 + 1;
      }
      while (v4 != v6);
      v4 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
    }
    while (v4);
  }

}

void sub_60EB4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

uint64_t sub_60EE0(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void **v6;

  v2 = *(void **)(a1 + 112);
  if (v2)
  {
    *(_QWORD *)(a1 + 120) = v2;
    operator delete(v2);
  }
  v3 = *(void **)(a1 + 88);
  if (v3)
  {
    *(_QWORD *)(a1 + 96) = v3;
    operator delete(v3);
  }
  v4 = *(void **)(a1 + 64);
  if (v4)
  {
    *(_QWORD *)(a1 + 72) = v4;
    operator delete(v4);
  }
  v6 = (void **)(a1 + 24);
  sub_6192C(&v6);
  v6 = (void **)a1;
  sub_61B28(&v6);
  return a1;
}

void sub_61044(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_6117C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_611B0(uint64_t a1, unint64_t a2, double *a3, void *a4, void *a5)
{
  id v9;
  NSMutableArray *v10;
  id v11;
  id v12;
  uint64_t v13;
  void *i;
  void *v15;
  double *v16;
  TUIRenderModelSubviews *v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  id v21;
  TUIRenderModelLayer *v22;
  TUIContainerLayerConfig *v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  double v32;
  double v33;
  double v34;
  double v35;
  double v36;
  double v37;
  TUIRenderModelTransform *v38;
  __int128 v39;
  double *v40;
  uint64_t v41;
  id v42;
  double v43;
  double v44;
  _OWORD v45[3];
  CGAffineTransform v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  CGAffineTransform v51;
  _BYTE v52[128];

  v9 = a4;
  v42 = a5;
  if (objc_msgSend(*(id *)(a1 + 16), "count"))
  {
    v10 = objc_opt_new(NSMutableArray);
    memset(&v51, 0, sizeof(v51));
    CGAffineTransformMakeTranslation(&v51, *(double *)a1 * 0.5, *(double *)(a1 + 8) * 0.5);
    v49 = 0u;
    v50 = 0u;
    v47 = 0u;
    v48 = 0u;
    v40 = (double *)a1;
    v11 = *(id *)(a1 + 16);
    v12 = objc_msgSend(v11, "countByEnumeratingWithState:objects:count:", &v47, v52, 16);
    if (v12)
    {
      v13 = *(_QWORD *)v48;
      do
      {
        for (i = 0; i != v12; i = (char *)i + 1)
        {
          if (*(_QWORD *)v48 != v13)
            objc_enumerationMutation(v11);
          v15 = *(void **)(*((_QWORD *)&v47 + 1) + 8 * (_QWORD)i);
          v46 = v51;
          objc_msgSend(v15, "appendRenderModelIgnoreHiddenCompatibleWithKind:context:transform:toModels:", a2, v9, &v46, v10);
        }
        v12 = objc_msgSend(v11, "countByEnumeratingWithState:objects:count:", &v47, v52, 16);
      }
      while (v12);
    }

    v16 = v40;
    if (a2 < 4)
    {
      v17 = 0;
      if (a2 != 3)
      {
LABEL_18:

        goto LABEL_19;
      }
    }
    else
    {
      v17 = -[TUIRenderModelSubviews initWithSubmodels:]([TUIRenderModelSubviews alloc], "initWithSubmodels:", v10);
      -[TUIRenderModelSubviews setSize:](v17, "setSize:", *v40, v40[1]);
    }
    v19 = *((_QWORD *)v40 + 3);
    v18 = *((_QWORD *)v40 + 4);
    v41 = v18;
    while (v19 != v18)
    {
      v20 = *(id *)v19;
      v43 = *(double *)(v19 + 16);
      v44 = *(double *)(v19 + 8);
      v21 = v20;
      if (a2 < 4)
      {
        v23 = -[TUIContainerLayerConfig initWithSize:]([TUIContainerLayerConfig alloc], "initWithSize:", *v16, v16[1]);
        v22 = -[TUIRenderModelLayer initWithSubmodels:config:erasableInsets:]([TUIRenderModelLayer alloc], "initWithSubmodels:config:erasableInsets:", v10, v23, UIEdgeInsetsZero.top, UIEdgeInsetsZero.left, UIEdgeInsetsZero.bottom, UIEdgeInsetsZero.right);
        -[TUIRenderModelLayer setIdentifier:](v22, "setIdentifier:", v21);

        v16 = v40;
      }
      else
      {
        v22 = (TUIRenderModelLayer *)objc_claimAutoreleasedReturnValue(+[TUIContainerView renderModelWithSubviewsModel:style:identifier:](TUIContainerView, "renderModelWithSubviewsModel:style:identifier:", v17, 0));
      }
      v25 = *v16;
      v24 = v16[1];
      v26 = *a3;
      v27 = a3[1];
      v29 = a3[2];
      v28 = a3[3];
      v31 = a3[4];
      v30 = a3[5];
      objc_msgSend(v9, "contentsScale");
      v32 = v31 + v43 * v29 + v26 * v44;
      v33 = v30 + v43 * v28 + v27 * v44;
      v35 = TUIPointRoundedForScale(v32, v33, v34);
      v37 = v36;
      v38 = -[TUIRenderModelTransform initWithSubmodel:]([TUIRenderModelTransform alloc], "initWithSubmodel:", v22);
      -[TUIRenderModelTransform setSize:](v38, "setSize:", *v16, v16[1]);
      -[TUIRenderModelTransform setCenter:](v38, "setCenter:", v44 + v25 * 0.5 + v35 - v32, v43 + v24 * 0.5 + v37 - v33);
      v39 = *((_OWORD *)a3 + 1);
      v45[0] = *(_OWORD *)a3;
      v45[1] = v39;
      v45[2] = *((_OWORD *)a3 + 2);
      -[TUIRenderModelTransform setTransform:](v38, "setTransform:", v45);
      objc_msgSend(v42, "addObject:", v38);

      v19 += 24;
      v18 = v41;
    }
    goto LABEL_18;
  }
LABEL_19:

}

void sub_61530(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12)
{
  void *v12;
  void *v13;
  void *v14;

  _Unwind_Resume(a1);
}

void sub_6170C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_61860(void **a1)
{
  char *v1;
  char *v3;
  void *v4;
  void *v5;

  v1 = (char *)*a1;
  if (*a1)
  {
    v3 = (char *)a1[1];
    v4 = *a1;
    if (v3 != v1)
    {
      do
      {
        v5 = (void *)*((_QWORD *)v3 - 3);
        v3 -= 24;

      }
      while (v3 != v1);
      v4 = *a1;
    }
    a1[1] = v1;
    operator delete(v4);
    *a1 = 0;
    a1[1] = 0;
    a1[2] = 0;
  }
}

void sub_618C0(void ***a1)
{
  void **v1;
  char *v2;
  char *v4;
  void *v5;
  void *v6;

  v1 = *a1;
  v2 = (char *)**a1;
  if (v2)
  {
    v4 = (char *)v1[1];
    v5 = **a1;
    if (v4 != v2)
    {
      do
      {
        v6 = (void *)*((_QWORD *)v4 - 3);
        v4 -= 24;

      }
      while (v4 != v2);
      v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

void sub_6192C(void ***a1)
{
  void **v1;
  id *v2;
  id *v4;
  void *v5;

  v1 = *a1;
  v2 = (id *)**a1;
  if (v2)
  {
    v4 = (id *)v1[1];
    v5 = **a1;
    if (v4 != v2)
    {
      do
      {
        v4 -= 12;
        sub_619B0((uint64_t)(v1 + 2), v4);
      }
      while (v4 != v2);
      v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

void sub_619B0(uint64_t a1, id *a2)
{
  void **v3;

  v3 = a2 + 5;
  sub_61A3C(&v3);

}

id *sub_619F4(id *a1)
{
  void **v3;

  v3 = a1 + 5;
  sub_61A3C(&v3);

  return a1;
}

void sub_61A3C(void ***a1)
{
  void **v1;
  void *v2;
  uint64_t v4;
  void *v5;

  v1 = *a1;
  v2 = **a1;
  if (v2)
  {
    v4 = (uint64_t)v1[1];
    v5 = **a1;
    if ((void *)v4 != v2)
    {
      do
      {
        v4 -= 64;
        sub_61AC0((uint64_t)(v1 + 2), v4);
      }
      while ((void *)v4 != v2);
      v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

void sub_61AC0(uint64_t a1, uint64_t a2)
{
  void *v3;

  v3 = *(void **)(a2 + 8);
  if (v3)
  {
    *(_QWORD *)(a2 + 16) = v3;
    operator delete(v3);
  }

}

uint64_t sub_61AF0(uint64_t a1)
{
  void *v2;

  v2 = *(void **)(a1 + 8);
  if (v2)
  {
    *(_QWORD *)(a1 + 16) = v2;
    operator delete(v2);
  }

  return a1;
}

void sub_61B28(void ***a1)
{
  void **v1;
  void **v2;
  void **v4;
  void *v5;

  v1 = *a1;
  v2 = (void **)**a1;
  if (v2)
  {
    v4 = (void **)v1[1];
    v5 = **a1;
    if (v4 != v2)
    {
      do
      {
        v4 -= 11;
        sub_61BAC((uint64_t)(v1 + 2), v4);
      }
      while (v4 != v2);
      v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

void sub_61BAC(uint64_t a1, void **a2)
{
  void **v3;

  v3 = a2 + 3;
  sub_6192C(&v3);
  v3 = a2;
  sub_61C40(&v3);
}

void **sub_61BF4(void **a1)
{
  void **v3;

  v3 = a1 + 3;
  sub_6192C(&v3);
  v3 = a1;
  sub_61C40(&v3);
  return a1;
}

void sub_61C40(void ***a1)
{
  void **v1;
  id *v2;
  id *v4;
  void *v5;

  v1 = *a1;
  v2 = (id *)**a1;
  if (v2)
  {
    v4 = (id *)v1[1];
    v5 = **a1;
    if (v4 != v2)
    {
      do
      {
        v4 -= 12;
        sub_61CC4((uint64_t)(v1 + 2), v4);
      }
      while (v4 != v2);
      v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

void sub_61CC4(uint64_t a1, id *a2)
{
  void **v3;

  v3 = a2 + 6;
  sub_61A3C(&v3);

}

id *sub_61D08(id *a1)
{
  void **v3;

  v3 = a1 + 6;
  sub_61A3C(&v3);

  return a1;
}

uint64_t sub_61D50(uint64_t a1, void *a2, void *a3, int a4)
{
  id v7;
  id v8;

  v7 = a2;
  v8 = a3;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_QWORD *)(a1 + 128) = 0;
  sub_61E50((_QWORD *)a1, v7, -1, a4, v8);
  sub_6233C(a1);
  sub_62470(a1, v8);
  sub_6319C((uint64_t *)a1);

  return a1;
}

void sub_61E00(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void **a10)
{
  void *v10;
  uint64_t v11;
  void *v12;
  void **v13;
  void **v14;
  void *v16;

  v16 = *(void **)(v11 + 112);
  if (v16)
  {
    *(_QWORD *)(v11 + 120) = v16;
    operator delete(v16);
  }
  sub_17D6FC(v14, v13, v11);
  a10 = (void **)(v11 + 24);
  sub_6192C(&a10);
  a10 = (void **)v11;
  sub_61B28(&a10);

  _Unwind_Resume(a1);
}

void sub_61E50(_QWORD *a1, void *a2, uint64_t a3, int a4, void *a5)
{
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  void *v12;
  id v13;
  void *v14;
  id v15;
  void *v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  BOOL v21;
  id v22;
  BOOL v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  char *v39;
  char *v40;
  char *v41;
  char *v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t *v45;
  _QWORD *v46;
  uint64_t *v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  unint64_t v51;
  char *v52;
  uint64_t *v53;
  uint64_t v54;
  id v55;
  void **v56;
  id obj;
  char **v58;
  uint64_t v59;
  id v62;
  uint64_t v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  _BYTE v68[128];

  v55 = a2;
  v7 = a5;
  v63 = objc_opt_class(TUICellModel, v8);
  v10 = objc_opt_class(TUIAdornmentModel, v9);
  v66 = 0u;
  v67 = 0u;
  v64 = 0u;
  v65 = 0u;
  obj = v55;
  v11 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v64, v68, 16);
  if (v11)
  {
    v58 = (char **)(a1 + 8);
    v56 = (void **)(a1 + 11);
    v59 = *(_QWORD *)v65;
    do
    {
      v12 = 0;
      v62 = v11;
      do
      {
        if (*(_QWORD *)v65 != v59)
          objc_enumerationMutation(obj);
        v13 = *(id *)(*((_QWORD *)&v64 + 1) + 8 * (_QWORD)v12);
        if ((objc_opt_respondsToSelector(v13, "groupedContainingIsGrouped") & 1) != 0)
          v14 = v13;
        else
          v14 = 0;
        v15 = v14;
        v16 = v15;
        if (v15)
          v17 = a4 ^ 1;
        else
          v17 = 0;
        if (v17 == 1 && objc_msgSend(v15, "groupedContainingIsGrouped"))
        {
          v18 = objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "model"));
          v20 = (void *)v18;
          if (v18)
            v21 = v18 == (_QWORD)v7;
          else
            v21 = 1;
          if (!v21)
          {
            while (objc_opt_class(v20, v19) != v63 && objc_opt_class(v20, v19) != v10)
            {
              v22 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v20, "parentModel"));

              if (v22)
              {
                v20 = v22;
                if (v22 != v7)
                  continue;
              }
              goto LABEL_20;
            }
          }
          v22 = v20;
LABEL_20:
          v24 = objc_opt_class(v22, v19) == v10 && v22 != 0;

        }
        else
        {
          v24 = 0;
        }
        if ((a4 & 1) != 0)
        {
          if (!v16)
            goto LABEL_42;
        }
        else
        {
          if (v16)
            v25 = v24;
          else
            v25 = 0;
          if (!v25)
            goto LABEL_42;
        }
        if (objc_msgSend(v16, "groupedContainingIsGrouped"))
        {
          v26 = sub_63310(a1, v16, a3);
          v28 = a1[8];
          v27 = a1[9];
          v29 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v16, "groupedContainingLayouts"));
          sub_61E50(a1, v29, v26, 1, v7);

          v30 = (uint64_t)(a1[9] - a1[8]) >> 3;
          v31 = a1[14] + 152 * v26;
          *(_QWORD *)(v31 + 56) = (v27 - v28) >> 3;
          *(_QWORD *)(v31 + 64) = v30;
          goto LABEL_75;
        }
LABEL_42:
        v33 = (_QWORD *)a1[9];
        v32 = a1[10];
        if ((unint64_t)v33 >= v32)
        {
          v35 = ((char *)v33 - *v58) >> 3;
          if ((unint64_t)(v35 + 1) >> 61)
            sub_6F9C();
          v36 = v32 - (_QWORD)*v58;
          v37 = v36 >> 2;
          if (v36 >> 2 <= (unint64_t)(v35 + 1))
            v37 = v35 + 1;
          if ((unint64_t)v36 >= 0x7FFFFFFFFFFFFFF8)
            v38 = 0x1FFFFFFFFFFFFFFFLL;
          else
            v38 = v37;
          if (v38)
            v39 = (char *)sub_39CC4((uint64_t)(a1 + 10), v38);
          else
            v39 = 0;
          v40 = &v39[8 * v35];
          *(_QWORD *)v40 = v13;
          v34 = v40 + 8;
          v42 = (char *)a1[8];
          v41 = (char *)a1[9];
          if (v41 != v42)
          {
            do
            {
              v43 = *((_QWORD *)v41 - 1);
              v41 -= 8;
              *((_QWORD *)v40 - 1) = v43;
              v40 -= 8;
            }
            while (v41 != v42);
            v41 = *v58;
          }
          a1[8] = v40;
          a1[9] = v34;
          a1[10] = &v39[8 * v38];
          if (v41)
            operator delete(v41);
        }
        else
        {
          *v33 = v13;
          v34 = v33 + 1;
        }
        a1[9] = v34;
        v45 = (uint64_t *)a1[12];
        v44 = a1[13];
        if ((unint64_t)v45 >= v44)
        {
          v47 = (uint64_t *)*v56;
          v48 = ((char *)v45 - (_BYTE *)*v56) >> 3;
          v49 = v48 + 1;
          if ((unint64_t)(v48 + 1) >> 61)
            sub_6F9C();
          v50 = v44 - (_QWORD)v47;
          if (v50 >> 2 > v49)
            v49 = v50 >> 2;
          if ((unint64_t)v50 >= 0x7FFFFFFFFFFFFFF8)
            v51 = 0x1FFFFFFFFFFFFFFFLL;
          else
            v51 = v49;
          if (v51)
          {
            v52 = (char *)sub_39CC4((uint64_t)(a1 + 13), v51);
            v47 = (uint64_t *)a1[11];
            v45 = (uint64_t *)a1[12];
          }
          else
          {
            v52 = 0;
          }
          v53 = (uint64_t *)&v52[8 * v48];
          *v53 = a3;
          v46 = v53 + 1;
          while (v45 != v47)
          {
            v54 = *--v45;
            *--v53 = v54;
          }
          a1[11] = v53;
          a1[12] = v46;
          a1[13] = &v52[8 * v51];
          if (v47)
            operator delete(v47);
        }
        else
        {
          *v45 = a3;
          v46 = v45 + 1;
        }
        a1[12] = v46;
LABEL_75:

        v12 = (char *)v12 + 1;
      }
      while (v12 != v62);
      v11 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v64, v68, 16);
    }
    while (v11);
  }

}

void sub_622AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_6233C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v1 = *(_QWORD *)(a1 + 112);
  v2 = *(_QWORD *)(a1 + 120);
  if (v1 != v2)
  {
    v4 = v1 + 64;
    do
    {
      objc_msgSend(*(id *)(v4 + 56), "groupedContainingInsets");
      *(_QWORD *)(v4 + 8) = v5;
      *(_QWORD *)(v4 + 16) = v6;
      *(_QWORD *)(v4 + 24) = v7;
      *(_QWORD *)(v4 + 32) = v8;
      *(_QWORD *)(v4 + 40) = objc_msgSend(*(id *)(v4 + 56), "groupedContainingInsetsMode");
      v9 = (unint64_t)objc_msgSend(*(id *)(v4 + 56), "groupedContainingContentMode");
      v10 = v9;
      v11 = *(_QWORD *)(v4 + 64);
      if (v11 == -1)
      {
        if ((v9 & 0xFFFFFFFFFFFFFFFDLL) != 0)
          v21 = 0;
        else
          v21 = 3;
      }
      else
      {
        v12 = sub_6358C(*(_QWORD *)(a1 + 112) + 152 * v11, *(_QWORD *)(v4 - 8), *(_QWORD *)v4);
        v13 = *(double *)(v4 + 16);
        *(double *)(v4 + 8) = *(double *)(v4 + 8) + v12;
        *(double *)(v4 + 16) = v14 + v13;
        v17 = v16 + *(double *)(v4 + 32);
        *(double *)(v4 + 24) = v15 + *(double *)(v4 + 24);
        *(double *)(v4 + 32) = v17;
        if (v10 == 2)
        {
          v21 = 3;
        }
        else if (v10)
        {
          v21 = 0;
        }
        else
        {
          v18 = *(_QWORD *)(v4 + 64);
          v19 = *(_QWORD *)(a1 + 112);
          v20 = v19 + 152 * v18;
          if (*(_QWORD *)(v20 + 56) == *(_QWORD *)(v4 - 8))
            v21 = *(_QWORD *)(v19 + 152 * v18 + 112) & 1;
          else
            v21 = 0;
          if (*(_QWORD *)(v20 + 64) == *(_QWORD *)v4)
            v21 |= *(_QWORD *)(v19 + 152 * v18 + 112) & 2;
        }
      }
      *(_QWORD *)(v4 + 48) = v21;
      v22 = v4 + 88;
      v4 += 152;
    }
    while (v22 != v2);
  }
}

void sub_62470(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id *v12;
  void *v13;
  uint64_t v14;
  id v15;
  BOOL v16;
  id v17;
  void *v18;
  uint64_t v19;
  id v20;
  id v21;
  void *v22;
  uint64_t v23;
  id v24;
  void *v25;
  id v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  id v30;
  id v31;
  id v32;
  void *v33;
  id v34;
  BOOL v36;
  char v37;
  void *v38;
  void *v39;
  void *v40;
  id *v41;
  uint64_t v42;
  double v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  id *v50;
  char *v51;
  char *v52;
  unint64_t v53;
  unint64_t v54;
  unint64_t v55;
  unint64_t v56;
  char *v57;
  char *v58;
  unint64_t v59;
  unint64_t v60;
  unint64_t v61;
  char *v62;
  void *v63;
  char *v64;
  char *v65;
  char *v66;
  char *v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  unint64_t v72;
  unint64_t v73;
  unint64_t v74;
  char *v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  char *v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  id v85;
  id v86;
  id v87;
  id v88;
  uint64_t v89;
  double v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  id *v97;
  char *v98;
  char *v99;
  unint64_t v100;
  unint64_t v101;
  unint64_t v102;
  unint64_t v103;
  char *v104;
  void *v105;
  void *v106;
  char *v107;
  unint64_t v108;
  unint64_t v109;
  unint64_t v110;
  unint64_t v111;
  char *v112;
  char *v113;
  void *v114;
  char *v115;
  char *v116;
  char *v117;
  char *v118;
  __int128 v119;
  __int128 v120;
  __int128 v121;
  __int128 v122;
  unint64_t v123;
  unint64_t v124;
  unint64_t v125;
  unint64_t v126;
  char *v127;
  char *v128;
  __int128 v129;
  __int128 v130;
  __int128 v131;
  __int128 v132;
  char *v133;
  __int128 v134;
  __int128 v135;
  __int128 v136;
  __int128 v137;
  CGSize *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t *v142;
  id v143;
  id v144;
  __int128 v145;
  id v146;
  id v147;
  id v148;
  uint64_t v149;
  id v150;
  CGSize v151;
  CGPoint v152;
  __int128 v153;
  CGPoint v154;
  __int128 v155;

  v150 = a2;
  v4 = objc_opt_class(TUICellModel, v3);
  v6 = objc_opt_class(TUIGroupModel, v5);
  v8 = objc_opt_class(TUISectionModel, v7);
  v10 = objc_opt_class(TUIAdornmentModel, v9);
  v149 = objc_opt_class(TUIStateModel, v11);
  v12 = *(id **)(a1 + 64);
  if (v12 == *(id **)(a1 + 72))
  {
    v105 = 0;
    v106 = 0;
    v13 = 0;
    goto LABEL_179;
  }
  v143 = 0;
  v144 = 0;
  v145 = 0uLL;
  v13 = 0;
  v138 = (CGSize *)&v155;
  v139 = v8;
  v141 = *(_QWORD *)(a1 + 64);
  v142 = (uint64_t *)a1;
  v140 = v6;
  do
  {
    v15 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*v12, "model", v138));
    if (v15)
      v16 = v15 == v150;
    else
      v16 = 1;
    if (!v16)
    {
      while (objc_opt_class(v15, v14) != v6 && objc_opt_class(v15, v14) != v4 && objc_opt_class(v15, v14) != v10)
      {
        v17 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v15, "parentModel"));

        if (v17)
        {
          v15 = v17;
          if (v17 != v150)
            continue;
        }
        goto LABEL_9;
      }
    }
    v17 = v15;
LABEL_9:
    if (objc_opt_class(v17, v14) == v6)
      v18 = v17;
    else
      v18 = 0;
    v20 = v18;
    if (v17 && v17 != v150)
    {
      while (objc_opt_class(v17, v19) != v4 && objc_opt_class(v17, v19) != v10 && objc_opt_class(v17, v19) != v149)
      {
        v21 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v17, "parentModel"));

        if (v21)
        {
          v17 = v21;
          if (v21 != v150)
            continue;
        }
        goto LABEL_27;
      }
    }
    v21 = v17;
LABEL_27:
    if (objc_opt_class(v21, v19) == v149)
      v22 = v21;
    else
      v22 = 0;
    v146 = v22;
    if (v21 && v21 != v150)
    {
      while (objc_opt_class(v21, v23) != v4 && objc_opt_class(v21, v23) != v10)
      {
        v24 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v21, "parentModel"));

        if (v24)
        {
          v21 = v24;
          if (v24 != v150)
            continue;
        }
        goto LABEL_38;
      }
    }
    v24 = v21;
LABEL_38:
    if (objc_opt_class(v24, v23) == v4)
      v25 = v24;
    else
      v25 = 0;
    v26 = v25;
    v147 = v20;
    v148 = v13;
    if (objc_opt_class(v24, v27) == v10)
      v28 = v24;
    else
      v28 = 0;
    v30 = v28;
    if (!v24 || v24 == v150)
    {
      v32 = v24;
      v31 = v30;
    }
    else
    {
      v31 = v30;
      while (objc_opt_class(v24, v29) != v8)
      {
        v32 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v24, "parentModel"));

        if (v32)
        {
          v24 = v32;
          if (v32 != v150)
            continue;
        }
        goto LABEL_53;
      }
      v32 = v24;
    }
LABEL_53:
    if (objc_opt_class(v32, v29) == v8)
      v33 = v32;
    else
      v33 = 0;
    v34 = v33;
    v36 = *((id *)&v145 + 1) == v26 && (_QWORD)v145 == (_QWORD)v31 && v143 == v146;
    v37 = v36;
    if (v36 && v144 == v147 && v148 == v34)
    {
      v30 = v31;
      v39 = v146;
      v38 = v147;
      goto LABEL_126;
    }
    if ((id *)v141 == v12)
    {
      v41 = v12;
      v40 = v34;
      goto LABEL_125;
    }
    v40 = v34;
    if (v144)
      v37 = 1;
    if (v144 != v147 || (v37 & 1) == 0)
    {
      v154 = CGPointZero;
      *v138 = CGSizeZero;
      v42 = sub_63610(v142, v141, (uint64_t)v12);
      v153 = v155;
      v43 = sub_63BA8((uint64_t)v142, v42, v141, (uint64_t)v12);
      v45 = v44;
      v47 = v46;
      v49 = v48;
      if (*((_QWORD *)&v145 + 1))
      {
        v50 = sub_63664(v142, v148, *((void **)&v145 + 1), v144);
        v51 = (char *)v50[2];
        v52 = (char *)v50[1];
        if (v52 >= v51)
        {
          v53 = 0xAAAAAAAAAAAAAAABLL * ((v52 - (_BYTE *)*v50) >> 5);
          v54 = v53 + 1;
          if (v53 + 1 > 0x2AAAAAAAAAAAAAALL)
            sub_6F9C();
          v55 = 0xAAAAAAAAAAAAAAABLL * ((v51 - (_BYTE *)*v50) >> 5);
          if (2 * v55 > v54)
            v54 = 2 * v55;
          if (v55 >= 0x155555555555555)
            v56 = 0x2AAAAAAAAAAAAAALL;
          else
            v56 = v54;
          if (v56)
            v57 = (char *)sub_64298((uint64_t)(v50 + 2), v56);
          else
            v57 = 0;
          v64 = &v57[96 * v53];
          *(_OWORD *)(v64 + 40) = v153;
          *(_QWORD *)v64 = v143;
          *((_QWORD *)v64 + 1) = v141;
          *((_QWORD *)v64 + 2) = v12;
          *(CGPoint *)(v64 + 24) = v154;
          *((_QWORD *)v64 + 7) = v42;
          *((double *)v64 + 8) = v43;
          *((_QWORD *)v64 + 9) = v45;
          *((_QWORD *)v64 + 10) = v47;
          *((_QWORD *)v64 + 11) = v49;
          v66 = (char *)*v50;
          v65 = (char *)v50[1];
          v67 = v64;
          if (v65 == *v50)
            goto LABEL_121;
          do
          {
            v68 = *((_OWORD *)v65 - 5);
            *((_OWORD *)v67 - 6) = *((_OWORD *)v65 - 6);
            *((_OWORD *)v67 - 5) = v68;
            v69 = *((_OWORD *)v65 - 4);
            v70 = *((_OWORD *)v65 - 3);
            v71 = *((_OWORD *)v65 - 1);
            *((_OWORD *)v67 - 2) = *((_OWORD *)v65 - 2);
            *((_OWORD *)v67 - 1) = v71;
            *((_OWORD *)v67 - 4) = v69;
            *((_OWORD *)v67 - 3) = v70;
            v67 -= 96;
            v65 -= 96;
          }
          while (v65 != v66);
LABEL_120:
          v65 = (char *)*v50;
LABEL_121:
          v63 = v64 + 96;
          *v50 = v67;
          v50[1] = v64 + 96;
          v50[2] = &v57[96 * v56];
          if (v65)
            operator delete(v65);
          goto LABEL_123;
        }
      }
      else if (v148 && (_QWORD)v145)
      {
        v50 = sub_63850(v142, v148, (void *)v145, v144);
        v58 = (char *)v50[2];
        v52 = (char *)v50[1];
        if (v52 >= v58)
        {
          v59 = 0xAAAAAAAAAAAAAAABLL * ((v52 - (_BYTE *)*v50) >> 5);
          v60 = v59 + 1;
          if (v59 + 1 > 0x2AAAAAAAAAAAAAALL)
            sub_6F9C();
          v61 = 0xAAAAAAAAAAAAAAABLL * ((v58 - (_BYTE *)*v50) >> 5);
          if (2 * v61 > v60)
            v60 = 2 * v61;
          if (v61 >= 0x155555555555555)
            v56 = 0x2AAAAAAAAAAAAAALL;
          else
            v56 = v60;
          if (v56)
            v57 = (char *)sub_64298((uint64_t)(v50 + 2), v56);
          else
            v57 = 0;
          v64 = &v57[96 * v59];
          *(_OWORD *)(v64 + 40) = v153;
          *(_QWORD *)v64 = v143;
          *((_QWORD *)v64 + 1) = v141;
          *((_QWORD *)v64 + 2) = v12;
          *(CGPoint *)(v64 + 24) = v154;
          *((_QWORD *)v64 + 7) = v42;
          *((double *)v64 + 8) = v43;
          *((_QWORD *)v64 + 9) = v45;
          *((_QWORD *)v64 + 10) = v47;
          *((_QWORD *)v64 + 11) = v49;
          v75 = (char *)*v50;
          v65 = (char *)v50[1];
          v67 = v64;
          if (v65 == *v50)
            goto LABEL_121;
          do
          {
            v76 = *((_OWORD *)v65 - 5);
            *((_OWORD *)v67 - 6) = *((_OWORD *)v65 - 6);
            *((_OWORD *)v67 - 5) = v76;
            v77 = *((_OWORD *)v65 - 4);
            v78 = *((_OWORD *)v65 - 3);
            v79 = *((_OWORD *)v65 - 1);
            *((_OWORD *)v67 - 2) = *((_OWORD *)v65 - 2);
            *((_OWORD *)v67 - 1) = v79;
            *((_OWORD *)v67 - 4) = v77;
            *((_OWORD *)v67 - 3) = v78;
            v67 -= 96;
            v65 -= 96;
          }
          while (v65 != v75);
          goto LABEL_120;
        }
      }
      else
      {
        if (!(_QWORD)v145)
        {
LABEL_124:
          v41 = v12;
          v141 = (uint64_t)v12;
          goto LABEL_125;
        }
        v50 = sub_63A48(v142, (void *)v145, v144);
        v62 = (char *)v50[2];
        v52 = (char *)v50[1];
        if (v52 >= v62)
        {
          v72 = 0xAAAAAAAAAAAAAAABLL * ((v52 - (_BYTE *)*v50) >> 5);
          v73 = v72 + 1;
          if (v72 + 1 > 0x2AAAAAAAAAAAAAALL)
            sub_6F9C();
          v74 = 0xAAAAAAAAAAAAAAABLL * ((v62 - (_BYTE *)*v50) >> 5);
          if (2 * v74 > v73)
            v73 = 2 * v74;
          if (v74 >= 0x155555555555555)
            v56 = 0x2AAAAAAAAAAAAAALL;
          else
            v56 = v73;
          if (v56)
            v57 = (char *)sub_64298((uint64_t)(v50 + 2), v56);
          else
            v57 = 0;
          v64 = &v57[96 * v72];
          *(_OWORD *)(v64 + 40) = v153;
          *(_QWORD *)v64 = v143;
          *((_QWORD *)v64 + 1) = v141;
          *((_QWORD *)v64 + 2) = v12;
          *(CGPoint *)(v64 + 24) = v154;
          *((_QWORD *)v64 + 7) = v42;
          *((double *)v64 + 8) = v43;
          *((_QWORD *)v64 + 9) = v45;
          *((_QWORD *)v64 + 10) = v47;
          *((_QWORD *)v64 + 11) = v49;
          v80 = (char *)*v50;
          v65 = (char *)v50[1];
          v67 = v64;
          if (v65 == *v50)
            goto LABEL_121;
          do
          {
            v81 = *((_OWORD *)v65 - 5);
            *((_OWORD *)v67 - 6) = *((_OWORD *)v65 - 6);
            *((_OWORD *)v67 - 5) = v81;
            v82 = *((_OWORD *)v65 - 4);
            v83 = *((_OWORD *)v65 - 3);
            v84 = *((_OWORD *)v65 - 1);
            *((_OWORD *)v67 - 2) = *((_OWORD *)v65 - 2);
            *((_OWORD *)v67 - 1) = v84;
            *((_OWORD *)v67 - 4) = v82;
            *((_OWORD *)v67 - 3) = v83;
            v67 -= 96;
            v65 -= 96;
          }
          while (v65 != v80);
          goto LABEL_120;
        }
      }
      *(_QWORD *)v52 = v143;
      *((_QWORD *)v52 + 1) = v141;
      *((_QWORD *)v52 + 2) = v12;
      *(CGPoint *)(v52 + 24) = v154;
      *(_OWORD *)(v52 + 40) = v153;
      *((_QWORD *)v52 + 7) = v42;
      *((double *)v52 + 8) = v43;
      *((_QWORD *)v52 + 9) = v45;
      v63 = v52 + 96;
      *((_QWORD *)v52 + 10) = v47;
      *((_QWORD *)v52 + 11) = v49;
LABEL_123:
      v50[1] = v63;
      goto LABEL_124;
    }
    v41 = v12;
LABEL_125:
    v85 = v26;

    v86 = v30;
    v87 = v26;
    v88 = v40;

    v34 = v40;
    v148 = v88;
    v26 = v87;
    *(_QWORD *)&v145 = v86;
    *((_QWORD *)&v145 + 1) = v85;
    v39 = v146;
    v38 = v147;
    v143 = v146;
    v144 = v147;
    v12 = v41;
    v8 = v139;
    v6 = v140;
LABEL_126:

    ++v12;
    v13 = v148;
  }
  while (v12 != (id *)v142[9]);
  if ((id *)v141 == v12)
    goto LABEL_178;
  if (v145 == 0)
  {
    v105 = 0;
    v106 = 0;
    goto LABEL_179;
  }
  v152 = CGPointZero;
  v151 = CGSizeZero;
  v89 = sub_63610(v142, v141, (uint64_t)v12);
  v90 = sub_63BA8((uint64_t)v142, v89, v141, (uint64_t)v12);
  v92 = v91;
  v94 = v93;
  v96 = v95;
  if (!*((_QWORD *)&v145 + 1))
  {
    if (v148 && (_QWORD)v145)
    {
      v97 = sub_63850(v142, v148, (void *)v145, v144);
      v107 = (char *)v97[2];
      v99 = (char *)v97[1];
      if (v99 < v107)
        goto LABEL_154;
      v108 = 0xAAAAAAAAAAAAAAABLL * ((v99 - (_BYTE *)*v97) >> 5);
      v109 = v108 + 1;
      if (v108 + 1 > 0x2AAAAAAAAAAAAAALL)
        sub_6F9C();
      v110 = 0xAAAAAAAAAAAAAAABLL * ((v107 - (_BYTE *)*v97) >> 5);
      if (2 * v110 > v109)
        v109 = 2 * v110;
      if (v110 >= 0x155555555555555)
        v111 = 0x2AAAAAAAAAAAAAALL;
      else
        v111 = v109;
      if (v111)
        v112 = (char *)sub_64298((uint64_t)(v97 + 2), v111);
      else
        v112 = 0;
      v115 = &v112[96 * v108];
      v116 = &v112[96 * v111];
      *(_QWORD *)v115 = v143;
      *((_QWORD *)v115 + 1) = v141;
      *((_QWORD *)v115 + 2) = v12;
      *(CGPoint *)(v115 + 24) = v152;
      *(CGSize *)(v115 + 40) = v151;
      *((_QWORD *)v115 + 7) = v89;
      *((double *)v115 + 8) = v90;
      *((_QWORD *)v115 + 9) = v92;
      *((_QWORD *)v115 + 10) = v94;
      *((_QWORD *)v115 + 11) = v96;
      v114 = v115 + 96;
      v128 = (char *)*v97;
      v117 = (char *)v97[1];
      if (v117 == *v97)
        goto LABEL_175;
      do
      {
        v129 = *((_OWORD *)v117 - 5);
        *((_OWORD *)v115 - 6) = *((_OWORD *)v117 - 6);
        *((_OWORD *)v115 - 5) = v129;
        v130 = *((_OWORD *)v117 - 4);
        v131 = *((_OWORD *)v117 - 3);
        v132 = *((_OWORD *)v117 - 1);
        *((_OWORD *)v115 - 2) = *((_OWORD *)v117 - 2);
        *((_OWORD *)v115 - 1) = v132;
        *((_OWORD *)v115 - 4) = v130;
        *((_OWORD *)v115 - 3) = v131;
        v115 -= 96;
        v117 -= 96;
      }
      while (v117 != v128);
    }
    else
    {
      if (!(_QWORD)v145)
        goto LABEL_178;
      v97 = sub_63A48(v142, (void *)v145, v144);
      v113 = (char *)v97[2];
      v99 = (char *)v97[1];
      if (v99 < v113)
      {
LABEL_154:
        *(_QWORD *)v99 = v143;
        *((_QWORD *)v99 + 1) = v141;
        *((_QWORD *)v99 + 2) = v12;
        *(CGPoint *)(v99 + 24) = v152;
        *(CGSize *)(v99 + 40) = v151;
        *((_QWORD *)v99 + 7) = v89;
        *((double *)v99 + 8) = v90;
        *((_QWORD *)v99 + 9) = v92;
        v114 = v99 + 96;
        *((_QWORD *)v99 + 10) = v94;
        *((_QWORD *)v99 + 11) = v96;
        goto LABEL_177;
      }
      v123 = 0xAAAAAAAAAAAAAAABLL * ((v99 - (_BYTE *)*v97) >> 5);
      v124 = v123 + 1;
      if (v123 + 1 > 0x2AAAAAAAAAAAAAALL)
        sub_6F9C();
      v125 = 0xAAAAAAAAAAAAAAABLL * ((v113 - (_BYTE *)*v97) >> 5);
      if (2 * v125 > v124)
        v124 = 2 * v125;
      if (v125 >= 0x155555555555555)
        v126 = 0x2AAAAAAAAAAAAAALL;
      else
        v126 = v124;
      if (v126)
        v127 = (char *)sub_64298((uint64_t)(v97 + 2), v126);
      else
        v127 = 0;
      v115 = &v127[96 * v123];
      v116 = &v127[96 * v126];
      *(_QWORD *)v115 = v143;
      *((_QWORD *)v115 + 1) = v141;
      *((_QWORD *)v115 + 2) = v12;
      *(CGPoint *)(v115 + 24) = v152;
      *(CGSize *)(v115 + 40) = v151;
      *((_QWORD *)v115 + 7) = v89;
      *((double *)v115 + 8) = v90;
      *((_QWORD *)v115 + 9) = v92;
      *((_QWORD *)v115 + 10) = v94;
      *((_QWORD *)v115 + 11) = v96;
      v114 = v115 + 96;
      v133 = (char *)*v97;
      v117 = (char *)v97[1];
      if (v117 == *v97)
        goto LABEL_175;
      do
      {
        v134 = *((_OWORD *)v117 - 5);
        *((_OWORD *)v115 - 6) = *((_OWORD *)v117 - 6);
        *((_OWORD *)v115 - 5) = v134;
        v135 = *((_OWORD *)v117 - 4);
        v136 = *((_OWORD *)v117 - 3);
        v137 = *((_OWORD *)v117 - 1);
        *((_OWORD *)v115 - 2) = *((_OWORD *)v117 - 2);
        *((_OWORD *)v115 - 1) = v137;
        *((_OWORD *)v115 - 4) = v135;
        *((_OWORD *)v115 - 3) = v136;
        v115 -= 96;
        v117 -= 96;
      }
      while (v117 != v133);
    }
LABEL_174:
    v117 = (char *)*v97;
    goto LABEL_175;
  }
  v97 = sub_63664(v142, v148, *((void **)&v145 + 1), v144);
  v98 = (char *)v97[2];
  v99 = (char *)v97[1];
  if (v99 < v98)
    goto LABEL_154;
  v100 = 0xAAAAAAAAAAAAAAABLL * ((v99 - (_BYTE *)*v97) >> 5);
  v101 = v100 + 1;
  if (v100 + 1 > 0x2AAAAAAAAAAAAAALL)
    sub_6F9C();
  v102 = 0xAAAAAAAAAAAAAAABLL * ((v98 - (_BYTE *)*v97) >> 5);
  if (2 * v102 > v101)
    v101 = 2 * v102;
  if (v102 >= 0x155555555555555)
    v103 = 0x2AAAAAAAAAAAAAALL;
  else
    v103 = v101;
  if (v103)
    v104 = (char *)sub_64298((uint64_t)(v97 + 2), v103);
  else
    v104 = 0;
  v115 = &v104[96 * v100];
  v116 = &v104[96 * v103];
  *(_QWORD *)v115 = v143;
  *((_QWORD *)v115 + 1) = v141;
  *((_QWORD *)v115 + 2) = v12;
  *(CGPoint *)(v115 + 24) = v152;
  *(CGSize *)(v115 + 40) = v151;
  *((_QWORD *)v115 + 7) = v89;
  *((double *)v115 + 8) = v90;
  *((_QWORD *)v115 + 9) = v92;
  *((_QWORD *)v115 + 10) = v94;
  *((_QWORD *)v115 + 11) = v96;
  v114 = v115 + 96;
  v118 = (char *)*v97;
  v117 = (char *)v97[1];
  if (v117 != *v97)
  {
    do
    {
      v119 = *((_OWORD *)v117 - 5);
      *((_OWORD *)v115 - 6) = *((_OWORD *)v117 - 6);
      *((_OWORD *)v115 - 5) = v119;
      v120 = *((_OWORD *)v117 - 4);
      v121 = *((_OWORD *)v117 - 3);
      v122 = *((_OWORD *)v117 - 1);
      *((_OWORD *)v115 - 2) = *((_OWORD *)v117 - 2);
      *((_OWORD *)v115 - 1) = v122;
      *((_OWORD *)v115 - 4) = v120;
      *((_OWORD *)v115 - 3) = v121;
      v115 -= 96;
      v117 -= 96;
    }
    while (v117 != v118);
    goto LABEL_174;
  }
LABEL_175:
  *v97 = v115;
  v97[1] = v114;
  v97[2] = v116;
  if (v117)
    operator delete(v117);
LABEL_177:
  v97[1] = v114;
LABEL_178:
  v105 = (void *)*((_QWORD *)&v145 + 1);
  v106 = (void *)v145;
LABEL_179:

}

void sub_63094(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,id a22)
{
  void *v22;

  _Unwind_Resume(a1);
}

void sub_6319C(uint64_t *a1)
{
  _QWORD *v2;
  _QWORD *i;
  NSMutableArray *v4;
  NSMutableArray *v5;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  NSMutableArray *v12;
  NSMutableArray *v13;
  id v14;
  void *v15;
  _QWORD *v16;
  _QWORD *v17;
  NSMutableArray *v18;
  NSMutableArray *v19;
  id v20;
  void *v21;

  v2 = (_QWORD *)a1[3];
  for (i = (_QWORD *)a1[4]; v2 != i; v2 += 12)
  {
    v4 = objc_opt_new(NSMutableArray);
    sub_5FB58(a1, v2, v4);
    v5 = v4;
    v6 = -[NSMutableArray copy](v5, "copy");
    v7 = (void *)v2[11];
    v2[11] = v6;

  }
  v8 = *a1;
  v9 = a1[1];
  if (*a1 != v9)
  {
    do
    {
      v10 = *(_QWORD **)v8;
      v11 = *(_QWORD **)(v8 + 8);
      while (v10 != v11)
      {
        v12 = objc_opt_new(NSMutableArray);
        sub_65544(a1, v10, v12);
        v13 = v12;
        v14 = -[NSMutableArray copy](v13, "copy");
        v15 = (void *)v10[11];
        v10[11] = v14;

        v10 += 12;
      }
      v16 = *(_QWORD **)(v8 + 24);
      v17 = *(_QWORD **)(v8 + 32);
      while (v16 != v17)
      {
        v18 = objc_opt_new(NSMutableArray);
        sub_5FB58(a1, v16, v18);
        v19 = v18;
        v20 = -[NSMutableArray copy](v19, "copy");
        v21 = (void *)v16[11];
        v16[11] = v20;

        v16 += 12;
      }
      v8 += 88;
    }
    while (v8 != v9);
  }
}

void sub_632E4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

uint64_t sub_63310(_QWORD *a1, void *a2, uint64_t a3)
{
  id v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  char *v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char *v14;
  char *v15;
  char *v16;
  char *v17;
  char *v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  CGPoint v27;
  __int128 v28;
  __int128 v29;

  v5 = a2;
  v6 = a1[14];
  v7 = a1[15];
  v8 = (uint64_t)(v7 - v6) / 152;
  v28 = *(_OWORD *)&UIEdgeInsetsZero.top;
  v29 = *(_OWORD *)&UIEdgeInsetsZero.bottom;
  v27 = CGPointZero;
  v9 = a1[16];
  if (v7 >= v9)
  {
    if ((unint64_t)(v8 + 1) > 0x1AF286BCA1AF286)
      sub_6F9C();
    v11 = 0x86BCA1AF286BCA1BLL * ((uint64_t)(v9 - v6) >> 3);
    v12 = 2 * v11;
    if (2 * v11 <= v8 + 1)
      v12 = v8 + 1;
    if (v11 >= 0xD79435E50D7943)
      v13 = 0x1AF286BCA1AF286;
    else
      v13 = v12;
    if (v13)
      v14 = (char *)sub_63544((uint64_t)(a1 + 16), v13);
    else
      v14 = 0;
    v15 = &v14[152 * v8];
    *(_OWORD *)(v15 + 8) = 0u;
    *(_OWORD *)(v15 + 24) = 0u;
    *(_OWORD *)(v15 + 40) = 0u;
    *(_OWORD *)(v15 + 72) = v28;
    v16 = &v14[152 * v13];
    *(_QWORD *)v15 = -1;
    *((_QWORD *)v15 + 7) = -1;
    *((_QWORD *)v15 + 8) = -1;
    *(_OWORD *)(v15 + 88) = v29;
    *((_QWORD *)v15 + 15) = v5;
    *((_QWORD *)v15 + 16) = a3;
    *(CGPoint *)(v15 + 136) = v27;
    v10 = v15 + 152;
    v18 = (char *)a1[14];
    v17 = (char *)a1[15];
    if (v17 != v18)
    {
      do
      {
        v19 = *(_OWORD *)(v17 - 152);
        *(_OWORD *)(v15 - 136) = *(_OWORD *)(v17 - 136);
        *(_OWORD *)(v15 - 152) = v19;
        v20 = *(_OWORD *)(v17 - 120);
        v21 = *(_OWORD *)(v17 - 104);
        v22 = *(_OWORD *)(v17 - 88);
        *(_OWORD *)(v15 - 72) = *(_OWORD *)(v17 - 72);
        *(_OWORD *)(v15 - 88) = v22;
        *(_OWORD *)(v15 - 104) = v21;
        *(_OWORD *)(v15 - 120) = v20;
        v23 = *(_OWORD *)(v17 - 56);
        v24 = *(_OWORD *)(v17 - 40);
        v25 = *(_OWORD *)(v17 - 24);
        *((_QWORD *)v15 - 1) = *((_QWORD *)v17 - 1);
        *(_OWORD *)(v15 - 24) = v25;
        *(_OWORD *)(v15 - 40) = v24;
        *(_OWORD *)(v15 - 56) = v23;
        v15 -= 152;
        v17 -= 152;
      }
      while (v17 != v18);
      v17 = (char *)a1[14];
    }
    a1[14] = v15;
    a1[15] = v10;
    a1[16] = v16;
    if (v17)
      operator delete(v17);
  }
  else
  {
    *(_OWORD *)(v7 + 8) = 0u;
    *(_OWORD *)(v7 + 24) = 0u;
    *(_OWORD *)(v7 + 40) = 0u;
    *(_OWORD *)(v7 + 72) = v28;
    *(_QWORD *)v7 = -1;
    *(_QWORD *)(v7 + 56) = -1;
    *(_QWORD *)(v7 + 64) = -1;
    *(_OWORD *)(v7 + 88) = v29;
    *(_QWORD *)(v7 + 120) = v5;
    *(_QWORD *)(v7 + 128) = a3;
    v10 = (char *)(v7 + 152);
    *(CGPoint *)(v7 + 136) = v27;
  }
  a1[15] = v10;

  return v8;
}

void sub_63534(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void *sub_63544(uint64_t a1, unint64_t a2)
{
  if (a2 >= 0x1AF286BCA1AF287)
    sub_69F8();
  return operator new(152 * a2);
}

double sub_6358C(uint64_t a1, unint64_t a2, unint64_t a3)
{
  uint64_t v3;
  double result;

  v3 = *(_QWORD *)(a1 + 104);
  if (v3 != 1)
  {
    if (!v3)
    {
      if (*(_QWORD *)(a1 + 56) == a2)
        return *(double *)(a1 + 72);
      else
        return 0.0;
    }
    return 0.0;
  }
  if (*(_QWORD *)(a1 + 56) > a2)
    return 0.0;
  result = 0.0;
  if (a3 <= *(_QWORD *)(a1 + 64))
    return *(double *)(a1 + 72);
  return result;
}

uint64_t sub_63610(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  BOOL v9;
  BOOL v10;

  v3 = a1[8];
  v4 = (a2 - v3) >> 3;
  v5 = a3 - v3;
  if (v4 >= (a3 - v3) >> 3)
    return -1;
  v6 = *(_QWORD *)(a1[11] + 8 * v4);
  if (v6 == -1)
    return -1;
  v7 = a1[14] + 152 * v6;
  v8 = *(_QWORD *)(v7 + 56);
  if ((unint64_t)(v5 >> 3) <= *(_QWORD *)(v7 + 64))
  {
    v9 = v8 >= v4;
    v10 = v8 == v4;
  }
  else
  {
    v9 = 1;
    v10 = 0;
  }
  if (!v10 && v9)
    return -1;
  else
    return *(_QWORD *)(a1[11] + 8 * v4);
}

id *sub_63664(uint64_t *a1, void *a2, void *a3, void *a4)
{
  id v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  __int128 v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  id *v18;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  int64x2_t v25;
  id v26;
  void **v27;

  v7 = a2;
  v8 = a3;
  v9 = a4;
  v10 = a1[1];
  if (*a1 == v10 || *(id *)(v10 - 40) != v7)
  {
    v20 = 0u;
    v21 = 0u;
    v22 = 0u;
    v24 = 0;
    v23 = (unint64_t)v7;
    v25 = vdupq_n_s64(1uLL);
    sub_63BFC(a1, (uint64_t)&v20);

    v27 = (void **)&v21 + 1;
    sub_6192C(&v27);
    v27 = (void **)&v20;
    sub_61C40(&v27);
  }
  v11 = a1[1];
  v12 = *(_QWORD *)(v11 - 80);
  if (*(_QWORD *)(v11 - 88) == v12 || *(id *)(v12 - 64) != v8)
  {
    sub_64E40((uint64_t)&v20, v8);
    v13 = *(_QWORD *)(v11 - 80);
    if (v13 >= *(_QWORD *)(v11 - 72))
    {
      v17 = sub_64AC4((uint64_t *)(v11 - 88), (uint64_t)&v20);
    }
    else
    {
      v14 = v21;
      *(_OWORD *)v13 = v20;
      *(_OWORD *)(v13 + 16) = v14;
      v15 = v22;
      *(_QWORD *)&v22 = 0;
      *(_QWORD *)(v13 + 32) = v15;
      *(_BYTE *)(v13 + 40) = BYTE8(v22);
      *(_QWORD *)(v13 + 56) = 0;
      *(_QWORD *)(v13 + 64) = 0;
      *(_QWORD *)(v13 + 48) = 0;
      *(_OWORD *)(v13 + 48) = v23;
      *(_QWORD *)(v13 + 64) = v24;
      v23 = 0uLL;
      *(int64x2_t *)(v13 + 72) = v25;
      v16 = v26;
      v24 = 0;
      v26 = 0;
      *(_QWORD *)(v13 + 88) = v16;
      v17 = v13 + 96;
    }
    *(_QWORD *)(v11 - 80) = v17;

    v27 = (void **)&v23;
    sub_61A3C(&v27);

  }
  v18 = sub_63D34((uint64_t *)(*(_QWORD *)(v11 - 80) - 48), v9) + 1;

  return v18;
}

void sub_63814(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, id a9)
{
  void *v9;
  void *v10;
  void *v11;

  sub_61D08(&a9);

  _Unwind_Resume(a1);
}

id *sub_63850(uint64_t *a1, void *a2, void *a3, void *a4)
{
  id v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  unint64_t v14;
  void *v15;
  int64x2_t v16;
  __int128 v17;
  uint64_t v18;
  id *v19;
  __int128 v21;
  int64x2_t v22;
  __int128 v23;
  id v24;
  uint64_t v25;
  _BYTE v26[24];
  void *v27;
  void **v28;

  v7 = a2;
  v8 = a3;
  v9 = a4;
  v10 = a1[1];
  if (*a1 == v10 || *(id *)(v10 - 40) != v7)
  {
    v21 = 0u;
    v22 = 0u;
    v23 = 0u;
    v25 = 0;
    *(_QWORD *)v26 = 0;
    v24 = v7;
    *(int64x2_t *)&v26[8] = vdupq_n_s64(1uLL);
    sub_63BFC(a1, (uint64_t)&v21);

    v28 = (void **)&v22.i64[1];
    sub_6192C(&v28);
    v28 = (void **)&v21;
    sub_61C40(&v28);
  }
  v11 = a1[1];
  v12 = *(_QWORD *)(v11 - 56);
  if (*(_QWORD *)(v11 - 64) == v12 || *(id *)(v12 - 64) != v8)
  {
    v13 = v8;
    v21 = 0uLL;
    v22 = vdupq_n_s64(1uLL);
    v26[0] = 0;
    v24 = 0;
    v25 = 0;
    v23 = (unint64_t)v13;
    *(CGSize *)&v26[8] = CGSizeZero;
    v27 = 0;
    v14 = *(_QWORD *)(v11 - 56);
    if (v14 >= *(_QWORD *)(v11 - 48))
    {
      v18 = sub_651D0((uint64_t *)(v11 - 64), (uint64_t)&v21);
      v15 = v27;
    }
    else
    {
      v15 = 0;
      v16 = v22;
      *(_OWORD *)v14 = v21;
      *(int64x2_t *)(v14 + 16) = v16;
      *(_QWORD *)&v23 = 0;
      *(_QWORD *)(v14 + 32) = v13;
      *(_QWORD *)(v14 + 40) = 0;
      *(_QWORD *)(v14 + 48) = 0;
      *(_QWORD *)(v14 + 56) = 0;
      v17 = *(_OWORD *)v26;
      *(_QWORD *)(v14 + 80) = *(_QWORD *)&v26[16];
      *((_QWORD *)&v23 + 1) = 0;
      v24 = 0;
      v25 = 0;
      *(_OWORD *)(v14 + 64) = v17;
      v27 = 0;
      *(_QWORD *)(v14 + 88) = 0;
      v18 = v14 + 96;
    }
    *(_QWORD *)(v11 - 56) = v18;

    v28 = (void **)&v23 + 1;
    sub_61A3C(&v28);

  }
  v19 = sub_63D34((uint64_t *)(*(_QWORD *)(v11 - 56) - 56), v9) + 1;

  return v19;
}

void sub_63A10(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, id a9)
{
  void *v9;
  void *v10;
  void *v11;

  sub_619F4(&a9);

  _Unwind_Resume(a1);
}

id *sub_63A48(uint64_t *a1, void *a2, void *a3)
{
  id v5;
  id v6;
  uint64_t v7;
  id v8;
  unint64_t v9;
  void *v10;
  int64x2_t v11;
  __int128 v12;
  uint64_t v13;
  id *v14;
  __int128 v16;
  int64x2_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE v22[24];
  void *v23;
  void **v24;

  v5 = a2;
  v6 = a3;
  v7 = a1[4];
  if (a1[3] == v7 || *(id *)(v7 - 64) != v5)
  {
    v8 = v5;
    v16 = 0uLL;
    v17 = vdupq_n_s64(1uLL);
    v18 = v8;
    v19 = 0;
    v20 = 0;
    v21 = 0;
    v22[0] = 0;
    *(CGSize *)&v22[8] = CGSizeZero;
    v23 = 0;
    v9 = a1[4];
    if (v9 >= a1[5])
    {
      v13 = sub_651D0(a1 + 3, (uint64_t)&v16);
      v10 = v23;
    }
    else
    {
      v10 = 0;
      v11 = v17;
      *(_OWORD *)v9 = v16;
      *(int64x2_t *)(v9 + 16) = v11;
      v18 = 0;
      *(_QWORD *)(v9 + 32) = v8;
      *(_QWORD *)(v9 + 40) = 0;
      *(_QWORD *)(v9 + 48) = 0;
      *(_QWORD *)(v9 + 56) = 0;
      v12 = *(_OWORD *)v22;
      *(_QWORD *)(v9 + 80) = *(_QWORD *)&v22[16];
      v19 = 0;
      v20 = 0;
      v21 = 0;
      *(_OWORD *)(v9 + 64) = v12;
      v23 = 0;
      *(_QWORD *)(v9 + 88) = 0;
      v13 = v9 + 96;
    }
    a1[4] = v13;

    v24 = (void **)&v19;
    sub_61A3C(&v24);

  }
  v14 = sub_63D34((uint64_t *)(a1[4] - 56), v6) + 1;

  return v14;
}

void sub_63B84(_Unwind_Exception *a1, uint64_t a2, ...)
{
  void *v2;
  void *v3;
  va_list va;

  va_start(va, a2);
  sub_619F4((id *)va);

  _Unwind_Resume(a1);
}

double sub_63BA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a2 == -1)
    return UIEdgeInsetsZero.top;
  else
    return sub_6358C(*(_QWORD *)(a1 + 112) + 152 * a2, (a3 - *(_QWORD *)(a1 + 64)) >> 3, (a4 - *(_QWORD *)(a1 + 64)) >> 3);
}

uint64_t sub_63BFC(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char *v14;
  void *v15;
  char *v16;
  char *v17;
  char *v18;
  uint64_t v19;

  v6 = a1[2];
  v4 = (uint64_t)(a1 + 2);
  v5 = v6;
  v7 = *(_QWORD *)(v4 - 8);
  if (v7 >= v6)
  {
    v10 = 0x2E8BA2E8BA2E8BA3 * ((uint64_t)(v7 - *a1) >> 3);
    if ((unint64_t)(v10 + 1) > 0x2E8BA2E8BA2E8BALL)
      sub_6F9C();
    v11 = 0x2E8BA2E8BA2E8BA3 * ((uint64_t)(v5 - *a1) >> 3);
    v12 = 2 * v11;
    if (2 * v11 <= v10 + 1)
      v12 = v10 + 1;
    if (v11 >= 0x1745D1745D1745DLL)
      v13 = 0x2E8BA2E8BA2E8BALL;
    else
      v13 = v12;
    v19 = v4;
    if (v13)
      v14 = (char *)sub_64014(v4, v13);
    else
      v14 = 0;
    v15 = v14;
    v16 = &v14[88 * v10];
    v18 = &v14[88 * v13];
    sub_63F24((uint64_t)v16, a2);
    v17 = v16 + 88;
    sub_63FA0(a1, &v15);
    v9 = a1[1];
    result = (uint64_t)sub_64A50(&v15);
  }
  else
  {
    result = sub_63F24(*(_QWORD *)(v4 - 8), a2);
    v9 = v7 + 88;
    a1[1] = v7 + 88;
  }
  a1[1] = v9;
  return result;
}

void sub_63D20(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_64A50((void **)va);
  _Unwind_Resume(a1);
}

id *sub_63D34(uint64_t *a1, void *a2)
{
  id v3;
  id *i;
  id v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  unsigned int v11;
  id v12;
  CGSize v13;
  unint64_t v14;
  CGSize v15;
  uint64_t v16;
  void *v17;
  id v19;
  void *__p;
  void *v21;
  uint64_t v22;
  CGPoint v23;
  CGSize v24;

  v3 = a2;
  for (i = (id *)*a1; i != (id *)a1[1]; i += 8)
  {
    v5 = *i;
    if (v5 == v3)
    {
      v6 = v3;
LABEL_14:

      goto LABEL_15;
    }
    v6 = v5;
    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "identifier"));
    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "identifier"));
    if (v7 == v8)
    {

      goto LABEL_14;
    }
    v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "identifier"));
    v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "identifier"));
    v11 = objc_msgSend(v9, "isEqual:", v10);

    if (v11)
      goto LABEL_14;

  }
  v12 = v3;
  v19 = v12;
  __p = 0;
  v21 = 0;
  v22 = 0;
  v13 = CGSizeZero;
  v23 = CGPointZero;
  v24 = v13;
  v14 = a1[1];
  if (v14 >= a1[2])
  {
    v16 = sub_64EB0(a1, (uint64_t *)&v19);
    v17 = __p;
    a1[1] = v16;
    if (v17)
    {
      v21 = v17;
      operator delete(v17);
    }
  }
  else
  {
    v19 = 0;
    *(_QWORD *)v14 = v12;
    *(_QWORD *)(v14 + 8) = 0;
    *(_QWORD *)(v14 + 16) = 0;
    *(_QWORD *)(v14 + 24) = 0;
    __p = 0;
    v21 = 0;
    v22 = 0;
    v15 = v24;
    *(CGPoint *)(v14 + 32) = v23;
    *(CGSize *)(v14 + 48) = v15;
    a1[1] = v14 + 64;
  }

  i = (id *)(a1[1] - 64);
LABEL_15:

  return i;
}

void sub_63ED0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  void *v9;

  sub_61AF0((uint64_t)&a9);

  _Unwind_Resume(a1);
}

uint64_t sub_63F24(uint64_t a1, uint64_t a2)
{
  void *v4;

  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = 0;
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)a2 = 0;
  *(_QWORD *)(a2 + 8) = 0;
  *(_QWORD *)(a2 + 16) = 0;
  *(_QWORD *)(a1 + 24) = 0;
  *(_QWORD *)(a1 + 32) = 0;
  *(_QWORD *)(a1 + 40) = 0;
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  v4 = *(void **)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 24) = 0;
  *(_QWORD *)(a2 + 32) = 0;
  *(_QWORD *)(a2 + 40) = 0;
  *(_QWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  return a1;
}

uint64_t sub_63FA0(uint64_t *a1, _QWORD *a2)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  result = sub_6405C((uint64_t)(a1 + 2), a1[1], a1[1], *a1, *a1, a2[1], a2[1]);
  a2[1] = v5;
  v6 = *a1;
  *a1 = v5;
  a2[1] = v6;
  v7 = a1[1];
  a1[1] = a2[2];
  a2[2] = v7;
  v8 = a1[2];
  a1[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

void *sub_64014(uint64_t a1, unint64_t a2)
{
  if (a2 >= 0x2E8BA2E8BA2E8BBLL)
    sub_69F8();
  return operator new(88 * a2);
}

uint64_t sub_6405C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  _QWORD v12[3];
  char v13;
  __int128 v14;
  __int128 v15;

  v7 = a7;
  *(_QWORD *)&v15 = a6;
  *((_QWORD *)&v15 + 1) = a7;
  v14 = v15;
  v12[0] = a1;
  v12[1] = &v14;
  v12[2] = &v15;
  v13 = 0;
  if (a3 == a5)
  {
    v10 = a6;
  }
  else
  {
    v9 = a3;
    do
    {
      v9 -= 88;
      sub_64114(v7 - 88, v9);
      v7 = *((_QWORD *)&v15 + 1) - 88;
      *((_QWORD *)&v15 + 1) -= 88;
    }
    while (v9 != a5);
    v10 = v15;
  }
  v13 = 1;
  sub_649CC((uint64_t)v12);
  return v10;
}

void sub_64100(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_649CC((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_64114(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = 0;
  sub_641C4((_QWORD *)a1, *(_QWORD *)a2, *(_QWORD *)(a2 + 8), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(_QWORD *)(a2 + 8) - *(_QWORD *)a2) >> 5));
  *(_QWORD *)(a1 + 24) = 0;
  *(_QWORD *)(a1 + 32) = 0;
  *(_QWORD *)(a1 + 40) = 0;
  sub_64798((_QWORD *)(a1 + 24), *(_QWORD *)(a2 + 24), *(_QWORD *)(a2 + 32), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(_QWORD *)(a2 + 32) - *(_QWORD *)(a2 + 24)) >> 5));
  *(_QWORD *)(a1 + 48) = *(id *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  return a1;
}

void sub_641AC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_61C40((void ***)va);
  _Unwind_Resume(a1);
}

_QWORD *sub_641C4(_QWORD *result, uint64_t a2, uint64_t a3, unint64_t a4)
{
  _QWORD *v6;

  if (a4)
  {
    v6 = result;
    sub_64248(result, a4);
    result = (_QWORD *)sub_642DC((uint64_t)(v6 + 2), a2, a3, v6[1]);
    v6[1] = result;
  }
  return result;
}

void sub_64228(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)(v9 + 8) = v10;
  sub_61C40(&a9);
  _Unwind_Resume(a1);
}

char *sub_64248(_QWORD *a1, unint64_t a2)
{
  char *result;
  uint64_t v4;

  if (a2 >= 0x2AAAAAAAAAAAAABLL)
    sub_6F9C();
  result = (char *)sub_64298((uint64_t)(a1 + 2), a2);
  *a1 = result;
  a1[1] = result;
  a1[2] = &result[96 * v4];
  return result;
}

void *sub_64298(uint64_t a1, unint64_t a2)
{
  if (a2 >= 0x2AAAAAAAAAAAAABLL)
    sub_69F8();
  return operator new(96 * a2);
}

uint64_t sub_642DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  _QWORD v9[3];
  char v10;
  uint64_t v11;
  uint64_t v12;

  v4 = a4;
  v11 = a4;
  v12 = a4;
  v9[0] = a1;
  v9[1] = &v11;
  v9[2] = &v12;
  v10 = 0;
  if (a2 != a3)
  {
    v6 = a2;
    do
    {
      sub_64384(a1, v4, v6);
      v6 += 96;
      v4 = v12 + 96;
      v12 += 96;
    }
    while (v6 != a3);
  }
  v10 = 1;
  sub_64714((uint64_t)v9);
  return v4;
}

void sub_64370(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_64714((uint64_t)&a9);
  _Unwind_Resume(a1);
}

id sub_64384(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v5;
  id v6;
  char v7;
  id result;

  v5 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)a2 = *(_OWORD *)a3;
  *(_OWORD *)(a2 + 16) = v5;
  v6 = *(id *)(a3 + 32);
  v7 = *(_BYTE *)(a3 + 40);
  *(_QWORD *)(a2 + 48) = 0;
  *(_QWORD *)(a2 + 32) = v6;
  *(_BYTE *)(a2 + 40) = v7;
  *(_QWORD *)(a2 + 56) = 0;
  *(_QWORD *)(a2 + 64) = 0;
  sub_64408((_QWORD *)(a2 + 48), *(_QWORD *)(a3 + 48), *(_QWORD *)(a3 + 56), (uint64_t)(*(_QWORD *)(a3 + 56) - *(_QWORD *)(a3 + 48)) >> 6);
  *(_OWORD *)(a2 + 72) = *(_OWORD *)(a3 + 72);
  result = *(id *)(a3 + 88);
  *(_QWORD *)(a2 + 88) = result;
  return result;
}

void sub_643F4(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Unwind_Resume(a1);
}

_QWORD *sub_64408(_QWORD *result, uint64_t a2, uint64_t a3, unint64_t a4)
{
  _QWORD *v6;

  if (a4)
  {
    v6 = result;
    sub_6448C(result, a4);
    result = (_QWORD *)sub_64500((uint64_t)(v6 + 2), a2, a3, v6[1]);
    v6[1] = result;
  }
  return result;
}

void sub_6446C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)(v9 + 8) = v10;
  sub_61A3C(&a9);
  _Unwind_Resume(a1);
}

char *sub_6448C(_QWORD *a1, unint64_t a2)
{
  char *result;
  uint64_t v4;

  if (a2 >> 58)
    sub_6F9C();
  result = (char *)sub_644CC((uint64_t)(a1 + 2), a2);
  *a1 = result;
  a1[1] = result;
  a1[2] = &result[64 * v4];
  return result;
}

void *sub_644CC(uint64_t a1, unint64_t a2)
{
  if (a2 >> 58)
    sub_69F8();
  return operator new(a2 << 6);
}

uint64_t sub_64500(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  _QWORD v9[3];
  char v10;
  uint64_t v11;
  uint64_t v12;

  v4 = a4;
  v11 = a4;
  v12 = a4;
  v9[0] = a1;
  v9[1] = &v11;
  v9[2] = &v12;
  v10 = 0;
  if (a2 != a3)
  {
    v6 = a2;
    do
    {
      sub_645A8(a1, v4, v6);
      v6 += 64;
      v4 = v12 + 64;
      v12 += 64;
    }
    while (v6 != a3);
  }
  v10 = 1;
  sub_64690((uint64_t)v9);
  return v4;
}

void sub_64594(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_64690((uint64_t)&a9);
  _Unwind_Resume(a1);
}

__n128 sub_645A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __n128 result;
  __int128 v6;

  *(_QWORD *)a2 = *(id *)a3;
  *(_QWORD *)(a2 + 16) = 0;
  *(_QWORD *)(a2 + 24) = 0;
  *(_QWORD *)(a2 + 8) = 0;
  sub_64618((_QWORD *)(a2 + 8), *(const void **)(a3 + 8), *(_QWORD *)(a3 + 16), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(_QWORD *)(a3 + 16) - *(_QWORD *)(a3 + 8)) >> 5));
  result = *(__n128 *)(a3 + 32);
  v6 = *(_OWORD *)(a3 + 48);
  *(__n128 *)(a2 + 32) = result;
  *(_OWORD *)(a2 + 48) = v6;
  return result;
}

void sub_64604(_Unwind_Exception *a1)
{
  id *v1;

  _Unwind_Resume(a1);
}

_QWORD *sub_64618(_QWORD *result, const void *a2, uint64_t a3, unint64_t a4)
{
  _QWORD *v6;
  uint64_t v7;
  size_t v8;

  if (a4)
  {
    v6 = result;
    result = sub_64248(result, a4);
    v7 = v6[1];
    v8 = a3 - (_QWORD)a2;
    if (v8)
      result = memmove((void *)v6[1], a2, v8);
    v6[1] = v7 + v8;
  }
  return result;
}

void sub_64674(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void *v3;

  v3 = *(void **)v1;
  if (*(_QWORD *)v1)
  {
    *(_QWORD *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_64690(uint64_t a1)
{
  if (!*(_BYTE *)(a1 + 24))
    sub_646C4((uint64_t *)a1);
  return a1;
}

void sub_646C4(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = (uint64_t *)a1[1];
  v1 = (uint64_t *)a1[2];
  v3 = *v1;
  v4 = *v2;
  if (*v1 != *v2)
  {
    v5 = *a1;
    do
    {
      v3 -= 64;
      sub_61AC0(v5, v3);
    }
    while (v3 != v4);
  }
}

uint64_t sub_64714(uint64_t a1)
{
  if (!*(_BYTE *)(a1 + 24))
    sub_64748((uint64_t *)a1);
  return a1;
}

void sub_64748(uint64_t *a1)
{
  id **v1;
  id **v2;
  id *v3;
  id *v4;
  uint64_t v5;

  v2 = (id **)a1[1];
  v1 = (id **)a1[2];
  v3 = *v1;
  v4 = *v2;
  if (*v1 != *v2)
  {
    v5 = *a1;
    do
    {
      v3 -= 12;
      sub_61CC4(v5, v3);
    }
    while (v3 != v4);
  }
}

_QWORD *sub_64798(_QWORD *result, uint64_t a2, uint64_t a3, unint64_t a4)
{
  _QWORD *v6;

  if (a4)
  {
    v6 = result;
    sub_64248(result, a4);
    result = (_QWORD *)sub_6481C((uint64_t)(v6 + 2), a2, a3, v6[1]);
    v6[1] = result;
  }
  return result;
}

void sub_647FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)(v9 + 8) = v10;
  sub_6192C(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_6481C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  _QWORD v9[3];
  char v10;
  uint64_t v11;
  uint64_t v12;

  v4 = a4;
  v11 = a4;
  v12 = a4;
  v9[0] = a1;
  v9[1] = &v11;
  v9[2] = &v12;
  v10 = 0;
  if (a2 != a3)
  {
    v6 = a2;
    do
    {
      sub_648C4(a1, v4, v6);
      v6 += 96;
      v4 = v12 + 96;
      v12 += 96;
    }
    while (v6 != a3);
  }
  v10 = 1;
  sub_64948((uint64_t)v9);
  return v4;
}

void sub_648B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_64948((uint64_t)&a9);
  _Unwind_Resume(a1);
}

id sub_648C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v5;
  id v6;
  __int128 v7;
  id result;

  v5 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)a2 = *(_OWORD *)a3;
  *(_OWORD *)(a2 + 16) = v5;
  v6 = *(id *)(a3 + 32);
  *(_QWORD *)(a2 + 40) = 0;
  *(_QWORD *)(a2 + 32) = v6;
  *(_QWORD *)(a2 + 48) = 0;
  *(_QWORD *)(a2 + 56) = 0;
  sub_64408((_QWORD *)(a2 + 40), *(_QWORD *)(a3 + 40), *(_QWORD *)(a3 + 48), (uint64_t)(*(_QWORD *)(a3 + 48) - *(_QWORD *)(a3 + 40)) >> 6);
  v7 = *(_OWORD *)(a3 + 64);
  *(_QWORD *)(a2 + 80) = *(_QWORD *)(a3 + 80);
  *(_OWORD *)(a2 + 64) = v7;
  result = *(id *)(a3 + 88);
  *(_QWORD *)(a2 + 88) = result;
  return result;
}

void sub_64934(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Unwind_Resume(a1);
}

uint64_t sub_64948(uint64_t a1)
{
  if (!*(_BYTE *)(a1 + 24))
    sub_6497C((uint64_t *)a1);
  return a1;
}

void sub_6497C(uint64_t *a1)
{
  id **v1;
  id **v2;
  id *v3;
  id *v4;
  uint64_t v5;

  v2 = (id **)a1[1];
  v1 = (id **)a1[2];
  v3 = *v1;
  v4 = *v2;
  if (*v1 != *v2)
  {
    v5 = *a1;
    do
    {
      v3 -= 12;
      sub_619B0(v5, v3);
    }
    while (v3 != v4);
  }
}

uint64_t sub_649CC(uint64_t a1)
{
  if (!*(_BYTE *)(a1 + 24))
    sub_64A00((uint64_t *)a1);
  return a1;
}

void sub_64A00(uint64_t *a1)
{
  void **v1;
  void **v2;
  uint64_t v3;

  v1 = *(void ***)(a1[2] + 8);
  v2 = *(void ***)(a1[1] + 8);
  if (v1 != v2)
  {
    v3 = *a1;
    do
    {
      sub_61BAC(v3, v1);
      v1 += 11;
    }
    while (v1 != v2);
  }
}

void **sub_64A50(void **a1)
{
  sub_64A80(a1);
  if (*a1)
    operator delete(*a1);
  return a1;
}

void sub_64A80(_QWORD *a1)
{
  uint64_t i;
  uint64_t v2;
  uint64_t v4;

  v2 = a1[1];
  for (i = a1[2]; i != v2; i = a1[2])
  {
    v4 = a1[4];
    a1[2] = i - 88;
    sub_61BAC(v4, (void **)(i - 88));
  }
}

uint64_t sub_64AC4(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v18[5];

  v3 = *a1;
  v4 = 0xAAAAAAAAAAAAAAABLL * ((a1[1] - *a1) >> 5);
  v5 = v4 + 1;
  if (v4 + 1 > 0x2AAAAAAAAAAAAAALL)
    sub_6F9C();
  v7 = (uint64_t)(a1 + 2);
  v8 = 0xAAAAAAAAAAAAAAABLL * ((a1[2] - v3) >> 5);
  if (2 * v8 > v5)
    v5 = 2 * v8;
  if (v8 >= 0x155555555555555)
    v9 = 0x2AAAAAAAAAAAAAALL;
  else
    v9 = v5;
  v18[4] = a1 + 2;
  v10 = (char *)sub_64298(v7, v9);
  v11 = &v10[96 * v4];
  v18[0] = v10;
  v18[1] = v11;
  v18[3] = &v10[96 * v12];
  v13 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)v11 = *(_OWORD *)a2;
  *((_OWORD *)v11 + 1) = v13;
  v14 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a2 + 32) = 0;
  *((_QWORD *)v11 + 4) = v14;
  v11[40] = *(_BYTE *)(a2 + 40);
  *((_QWORD *)v11 + 7) = 0;
  *((_QWORD *)v11 + 8) = 0;
  *((_QWORD *)v11 + 6) = 0;
  *((_OWORD *)v11 + 3) = *(_OWORD *)(a2 + 48);
  *((_QWORD *)v11 + 8) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a2 + 56) = 0;
  *(_QWORD *)(a2 + 64) = 0;
  *(_QWORD *)(a2 + 48) = 0;
  *(_OWORD *)(v11 + 72) = *(_OWORD *)(a2 + 72);
  v15 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a2 + 88) = 0;
  *((_QWORD *)v11 + 11) = v15;
  v18[2] = v11 + 96;
  sub_64BFC(a1, v18);
  v16 = a1[1];
  sub_64DCC(v18);
  return v16;
}

void sub_64BE8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_64DCC((void **)va);
  _Unwind_Resume(a1);
}

uint64_t sub_64BFC(uint64_t *a1, _QWORD *a2)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  result = sub_64C70((uint64_t)(a1 + 2), a1[1], a1[1], *a1, *a1, a2[1], a2[1]);
  a2[1] = v5;
  v6 = *a1;
  *a1 = v5;
  a2[1] = v6;
  v7 = a1[1];
  a1[1] = a2[2];
  a2[2] = v7;
  v8 = a1[2];
  a1[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

uint64_t sub_64C70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v13[3];
  char v14;
  __int128 v15;
  __int128 v16;

  v7 = a7;
  *(_QWORD *)&v16 = a6;
  *((_QWORD *)&v16 + 1) = a7;
  v15 = v16;
  v13[0] = a1;
  v13[1] = &v15;
  v13[2] = &v16;
  if (a3 == a5)
  {
    v11 = a6;
  }
  else
  {
    do
    {
      v8 = *(_OWORD *)(a3 - 80);
      *(_OWORD *)(v7 - 96) = *(_OWORD *)(a3 - 96);
      *(_OWORD *)(v7 - 80) = v8;
      v9 = *(_QWORD *)(a3 - 64);
      *(_QWORD *)(a3 - 64) = 0;
      *(_QWORD *)(v7 - 64) = v9;
      *(_BYTE *)(v7 - 56) = *(_BYTE *)(a3 - 56);
      *(_QWORD *)(v7 - 40) = 0;
      *(_QWORD *)(v7 - 32) = 0;
      *(_QWORD *)(v7 - 48) = 0;
      *(_OWORD *)(v7 - 48) = *(_OWORD *)(a3 - 48);
      *(_QWORD *)(v7 - 32) = *(_QWORD *)(a3 - 32);
      *(_QWORD *)(a3 - 48) = 0;
      *(_QWORD *)(a3 - 40) = 0;
      *(_QWORD *)(a3 - 32) = 0;
      *(_OWORD *)(v7 - 24) = *(_OWORD *)(a3 - 24);
      v10 = *(_QWORD *)(a3 - 8);
      *(_QWORD *)(a3 - 8) = 0;
      *(_QWORD *)(v7 - 8) = v10;
      v7 = *((_QWORD *)&v16 + 1) - 96;
      *((_QWORD *)&v16 + 1) -= 96;
      a3 -= 96;
    }
    while (a3 != a5);
    v11 = v16;
  }
  v14 = 1;
  sub_64D48((uint64_t)v13);
  return v11;
}

uint64_t sub_64D48(uint64_t a1)
{
  if (!*(_BYTE *)(a1 + 24))
    sub_64D7C((uint64_t *)a1);
  return a1;
}

void sub_64D7C(uint64_t *a1)
{
  id *v1;
  id *v2;
  uint64_t v3;

  v1 = *(id **)(a1[2] + 8);
  v2 = *(id **)(a1[1] + 8);
  if (v1 != v2)
  {
    v3 = *a1;
    do
    {
      sub_61CC4(v3, v1);
      v1 += 12;
    }
    while (v1 != v2);
  }
}

void **sub_64DCC(void **a1)
{
  sub_64DFC(a1);
  if (*a1)
    operator delete(*a1);
  return a1;
}

void sub_64DFC(_QWORD *a1)
{
  uint64_t i;
  uint64_t v2;
  uint64_t v4;

  v2 = a1[1];
  for (i = a1[2]; i != v2; i = a1[2])
  {
    v4 = a1[4];
    a1[2] = i - 96;
    sub_61CC4(v4, (id *)(i - 96));
  }
}

uint64_t sub_64E40(uint64_t a1, void *a2)
{
  id v3;

  v3 = a2;
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = objc_msgSend(v3, "columnSpan");
  *(_QWORD *)(a1 + 24) = objc_msgSend(v3, "rowSpan");
  *(_QWORD *)(a1 + 32) = v3;
  *(_BYTE *)(a1 + 40) = 0;
  *(_QWORD *)(a1 + 56) = 0;
  *(_QWORD *)(a1 + 64) = 0;
  *(_QWORD *)(a1 + 48) = 0;
  *(CGSize *)(a1 + 72) = CGSizeZero;
  *(_QWORD *)(a1 + 88) = 0;
  return a1;
}

void sub_64EA0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

uint64_t sub_64EB0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  void *v16[5];

  v3 = *a1;
  v4 = (a1[1] - *a1) >> 6;
  v5 = v4 + 1;
  if ((unint64_t)(v4 + 1) >> 58)
    sub_6F9C();
  v7 = (uint64_t)(a1 + 2);
  v8 = a1[2] - v3;
  if (v8 >> 5 > v5)
    v5 = v8 >> 5;
  if ((unint64_t)v8 >= 0x7FFFFFFFFFFFFFC0)
    v9 = 0x3FFFFFFFFFFFFFFLL;
  else
    v9 = v5;
  v16[4] = a1 + 2;
  if (v9)
    v10 = (char *)sub_644CC(v7, v9);
  else
    v10 = 0;
  v11 = &v10[64 * v4];
  v16[0] = v10;
  v16[1] = v11;
  v16[3] = &v10[64 * v9];
  v12 = *a2;
  *a2 = 0;
  *(_QWORD *)v11 = v12;
  *((_QWORD *)v11 + 1) = 0;
  *((_QWORD *)v11 + 2) = 0;
  *((_QWORD *)v11 + 3) = 0;
  *(_OWORD *)(v11 + 8) = *(_OWORD *)(a2 + 1);
  *((_QWORD *)v11 + 3) = a2[3];
  a2[1] = 0;
  a2[2] = 0;
  a2[3] = 0;
  v13 = *((_OWORD *)a2 + 3);
  *((_OWORD *)v11 + 2) = *((_OWORD *)a2 + 2);
  *((_OWORD *)v11 + 3) = v13;
  v16[2] = v11 + 64;
  sub_64FB4(a1, v16);
  v14 = a1[1];
  sub_6515C(v16);
  return v14;
}

void sub_64FA0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_6515C((void **)va);
  _Unwind_Resume(a1);
}

uint64_t sub_64FB4(uint64_t *a1, _QWORD *a2)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  result = sub_65028((uint64_t)(a1 + 2), a1[1], a1[1], *a1, *a1, a2[1], a2[1]);
  a2[1] = v5;
  v6 = *a1;
  *a1 = v5;
  a2[1] = v6;
  v7 = a1[1];
  a1[1] = a2[2];
  a2[2] = v7;
  v8 = a1[2];
  a1[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

uint64_t sub_65028(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  _QWORD v12[3];
  char v13;
  __int128 v14;
  __int128 v15;

  v7 = a7;
  *(_QWORD *)&v15 = a6;
  *((_QWORD *)&v15 + 1) = a7;
  v14 = v15;
  v12[0] = a1;
  v12[1] = &v14;
  v12[2] = &v15;
  if (a3 == a5)
  {
    v10 = a6;
  }
  else
  {
    do
    {
      v8 = *(_QWORD *)(a3 - 64);
      a3 -= 64;
      *(_QWORD *)a3 = 0;
      *(_QWORD *)(v7 - 64) = v8;
      *(_QWORD *)(v7 - 56) = 0;
      *(_QWORD *)(v7 - 48) = 0;
      *(_QWORD *)(v7 - 40) = 0;
      *(_OWORD *)(v7 - 56) = *(_OWORD *)(a3 + 8);
      *(_QWORD *)(v7 - 40) = *(_QWORD *)(a3 + 24);
      *(_QWORD *)(a3 + 8) = 0;
      *(_QWORD *)(a3 + 16) = 0;
      *(_QWORD *)(a3 + 24) = 0;
      v9 = *(_OWORD *)(a3 + 48);
      *(_OWORD *)(v7 - 32) = *(_OWORD *)(a3 + 32);
      *(_OWORD *)(v7 - 16) = v9;
      v7 = *((_QWORD *)&v15 + 1) - 64;
      *((_QWORD *)&v15 + 1) -= 64;
    }
    while (a3 != a5);
    v10 = v15;
  }
  v13 = 1;
  sub_650D8((uint64_t)v12);
  return v10;
}

uint64_t sub_650D8(uint64_t a1)
{
  if (!*(_BYTE *)(a1 + 24))
    sub_6510C((uint64_t *)a1);
  return a1;
}

void sub_6510C(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(a1[2] + 8);
  v2 = *(_QWORD *)(a1[1] + 8);
  if (v1 != v2)
  {
    v3 = *a1;
    do
    {
      sub_61AC0(v3, v1);
      v1 += 64;
    }
    while (v1 != v2);
  }
}

void **sub_6515C(void **a1)
{
  sub_6518C(a1);
  if (*a1)
    operator delete(*a1);
  return a1;
}

void sub_6518C(_QWORD *a1)
{
  uint64_t i;
  uint64_t v2;
  uint64_t v4;

  v2 = a1[1];
  for (i = a1[2]; i != v2; i = a1[2])
  {
    v4 = a1[4];
    a1[2] = i - 64;
    sub_61AC0(v4, i - 64);
  }
}

uint64_t sub_651D0(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v19[5];

  v3 = *a1;
  v4 = 0xAAAAAAAAAAAAAAABLL * ((a1[1] - *a1) >> 5);
  v5 = v4 + 1;
  if (v4 + 1 > 0x2AAAAAAAAAAAAAALL)
    sub_6F9C();
  v7 = (uint64_t)(a1 + 2);
  v8 = 0xAAAAAAAAAAAAAAABLL * ((a1[2] - v3) >> 5);
  if (2 * v8 > v5)
    v5 = 2 * v8;
  if (v8 >= 0x155555555555555)
    v9 = 0x2AAAAAAAAAAAAAALL;
  else
    v9 = v5;
  v19[4] = a1 + 2;
  v10 = (char *)sub_64298(v7, v9);
  v11 = &v10[96 * v4];
  v19[0] = v10;
  v19[1] = v11;
  v19[3] = &v10[96 * v12];
  v13 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)v11 = *(_OWORD *)a2;
  *((_OWORD *)v11 + 1) = v13;
  v14 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a2 + 32) = 0;
  *((_QWORD *)v11 + 6) = 0;
  *((_QWORD *)v11 + 7) = 0;
  *((_QWORD *)v11 + 4) = v14;
  *((_QWORD *)v11 + 5) = 0;
  *(_OWORD *)(v11 + 40) = *(_OWORD *)(a2 + 40);
  *((_QWORD *)v11 + 7) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a2 + 48) = 0;
  *(_QWORD *)(a2 + 56) = 0;
  *(_QWORD *)(a2 + 40) = 0;
  v15 = *(_QWORD *)(a2 + 80);
  *((_OWORD *)v11 + 4) = *(_OWORD *)(a2 + 64);
  *((_QWORD *)v11 + 10) = v15;
  v16 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a2 + 88) = 0;
  *((_QWORD *)v11 + 11) = v16;
  v19[2] = v11 + 96;
  sub_65304(a1, v19);
  v17 = a1[1];
  sub_654D0(v19);
  return v17;
}

void sub_652F0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_654D0((void **)va);
  _Unwind_Resume(a1);
}

uint64_t sub_65304(uint64_t *a1, _QWORD *a2)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  result = sub_65378((uint64_t)(a1 + 2), a1[1], a1[1], *a1, *a1, a2[1], a2[1]);
  a2[1] = v5;
  v6 = *a1;
  *a1 = v5;
  a2[1] = v6;
  v7 = a1[1];
  a1[1] = a2[2];
  a2[2] = v7;
  v8 = a1[2];
  a1[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

uint64_t sub_65378(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v14[3];
  char v15;
  __int128 v16;
  __int128 v17;

  v7 = a7;
  *(_QWORD *)&v17 = a6;
  *((_QWORD *)&v17 + 1) = a7;
  v16 = v17;
  v14[0] = a1;
  v14[1] = &v16;
  v14[2] = &v17;
  if (a3 == a5)
  {
    v12 = a6;
  }
  else
  {
    do
    {
      v8 = *(_OWORD *)(a3 - 80);
      *(_OWORD *)(v7 - 96) = *(_OWORD *)(a3 - 96);
      *(_OWORD *)(v7 - 80) = v8;
      v9 = *(_QWORD *)(a3 - 64);
      *(_QWORD *)(a3 - 64) = 0;
      *(_QWORD *)(v7 - 64) = v9;
      *(_QWORD *)(v7 - 56) = 0;
      *(_QWORD *)(v7 - 48) = 0;
      *(_QWORD *)(v7 - 40) = 0;
      *(_OWORD *)(v7 - 56) = *(_OWORD *)(a3 - 56);
      *(_QWORD *)(v7 - 40) = *(_QWORD *)(a3 - 40);
      *(_QWORD *)(a3 - 56) = 0;
      *(_QWORD *)(a3 - 48) = 0;
      *(_QWORD *)(a3 - 40) = 0;
      v10 = *(_OWORD *)(a3 - 32);
      *(_QWORD *)(v7 - 16) = *(_QWORD *)(a3 - 16);
      *(_OWORD *)(v7 - 32) = v10;
      v11 = *(_QWORD *)(a3 - 8);
      *(_QWORD *)(a3 - 8) = 0;
      *(_QWORD *)(v7 - 8) = v11;
      v7 = *((_QWORD *)&v17 + 1) - 96;
      *((_QWORD *)&v17 + 1) -= 96;
      a3 -= 96;
    }
    while (a3 != a5);
    v12 = v17;
  }
  v15 = 1;
  sub_6544C((uint64_t)v14);
  return v12;
}

uint64_t sub_6544C(uint64_t a1)
{
  if (!*(_BYTE *)(a1 + 24))
    sub_65480((uint64_t *)a1);
  return a1;
}

void sub_65480(uint64_t *a1)
{
  id *v1;
  id *v2;
  uint64_t v3;

  v1 = *(id **)(a1[2] + 8);
  v2 = *(id **)(a1[1] + 8);
  if (v1 != v2)
  {
    v3 = *a1;
    do
    {
      sub_619B0(v3, v1);
      v1 += 12;
    }
    while (v1 != v2);
  }
}

void **sub_654D0(void **a1)
{
  sub_65500(a1);
  if (*a1)
    operator delete(*a1);
  return a1;
}

void sub_65500(_QWORD *a1)
{
  uint64_t i;
  uint64_t v2;
  uint64_t v4;

  v2 = a1[1];
  for (i = a1[2]; i != v2; i = a1[2])
  {
    v4 = a1[4];
    a1[2] = i - 96;
    sub_619B0(v4, (id *)(i - 96));
  }
}

void sub_65544(_QWORD *a1, _QWORD *a2, void *a3)
{
  id v5;
  id v6;
  id v7;
  NSMutableIndexSet *v8;
  id v9;
  _QWORD v10[4];
  id v11;
  _QWORD *v12;
  _QWORD v13[4];
  id v14;
  _QWORD *v15;
  NSMutableIndexSet *v16;
  id v17;

  v5 = a3;
  v16 = 0;
  v17 = 0;
  sub_656AC(a2, a1, &v16);
  v6 = v17;
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 3221225472;
  v13[2] = sub_65718;
  v13[3] = &unk_23F1A8;
  v15 = a1;
  v7 = v5;
  v14 = v7;
  objc_msgSend(v6, "enumerateIndexesUsingBlock:", v13);

  v8 = v16;
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472;
  v10[2] = sub_65730;
  v10[3] = &unk_23F1A8;
  v12 = a1;
  v9 = v7;
  v11 = v9;
  -[NSMutableIndexSet enumerateIndexesUsingBlock:](v8, "enumerateIndexesUsingBlock:", v10);

}

void sub_6565C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *a19)
{
  void *v19;
  void *v20;
  uint64_t v21;

  _Unwind_Resume(a1);
}

_QWORD *sub_656AC(_QWORD *result, _QWORD *a2, NSMutableIndexSet **a3)
{
  uint64_t v3;
  uint64_t i;
  uint64_t v7;
  uint64_t v8;

  v3 = result[6];
  for (i = result[7]; v3 != i; v3 += 64)
  {
    v7 = *(_QWORD *)(v3 + 8);
    v8 = *(_QWORD *)(v3 + 16);
    while (v7 != v8)
    {
      result = sub_65740(a3, *(_QWORD *)(v7 + 8), *(_QWORD *)(v7 + 16), a2);
      v7 += 96;
    }
  }
  return result;
}

id sub_65718(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(*(id *)(a1 + 32), "addObject:", *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 112) + 152 * a2 + 120));
}

id sub_65730(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(*(id *)(a1 + 32), "addObject:", *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 64) + 8 * a2));
}

id sub_65740(NSMutableIndexSet **a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  id result;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  NSMutableIndexSet *v12;
  NSMutableIndexSet *v13;
  NSMutableIndexSet *v14;

  result = (id)sub_63610(a4, a2, a3);
  if (result != (id)-1)
    return sub_657F4((uint64_t)a1, (uint64_t)result, (uint64_t)a4);
  v9 = a4[8];
  v10 = (a3 - v9) >> 3;
  if (v10 > (a2 - v9) >> 3)
  {
    v11 = (a2 - v9) >> 3;
    v12 = *a1;
    if (!*a1)
    {
      v13 = objc_opt_new(NSMutableIndexSet);
      v14 = *a1;
      *a1 = v13;

      v12 = *a1;
    }
    return -[NSMutableIndexSet addIndexesInRange:](v12, "addIndexesInRange:", v11, v10 - v11);
  }
  return result;
}

id sub_657F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  void *v5;
  NSMutableIndexSet *v6;
  void *v7;

  if (a2 == -1)
  {
    v4 = -1;
  }
  else
  {
    do
    {
      v4 = a2;
      a2 = *(_QWORD *)(*(_QWORD *)(a3 + 112) + 152 * a2 + 128);
    }
    while (a2 != -1);
  }
  v5 = *(void **)(a1 + 8);
  if (!v5)
  {
    v6 = objc_opt_new(NSMutableIndexSet);
    v7 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = v6;

    v5 = *(void **)(a1 + 8);
  }
  return objc_msgSend(v5, "addIndex:", v4);
}

uint64_t *sub_65864(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v6;
  void *v7;
  __int128 v8;

  v4 = a1;
  if (a1 == a2)
    return a1;
  v5 = a2;
  do
  {
    v6 = *v4;
    *v4 = 0;
    v7 = *(void **)a3;
    *(_QWORD *)a3 = v6;

    v8 = *(_OWORD *)(v4 + 1);
    *(_OWORD *)(a3 + 24) = *(_OWORD *)(v4 + 3);
    *(_OWORD *)(a3 + 8) = v8;
    a3 += 40;
    v4 += 5;
  }
  while (v4 != v5);
  return v5;
}

void sub_658DC(uint64_t a1, int a2, uint64_t a3, uint64_t a4, double a5)
{
  uint64_t v7;
  double v10;
  double v11;
  double v12;
  double v13;

  if (a3 != a4)
  {
    v7 = a3;
    v10 = 0.0;
    v11 = 0.0;
    do
    {
      v12 = sub_65980(v7, a2, a1, a5);
      if (v11 < v12)
        v11 = v12;
      v10 = v10 + v13;
      v7 += 64;
    }
    while (v7 != a4);
  }
}

double sub_65980(uint64_t a1, int a2, uint64_t a3, double a4)
{
  uint64_t v5;
  uint64_t v6;
  double i;
  double width;
  double v12;
  double v13;

  v5 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  width = CGSizeZero.width;
  for (i = CGSizeZero.height; v5 != v6; v5 += 96)
  {
    v12 = sub_65A24(v5, a2, a3, a4);
    if (width < v12)
      width = v12;
    if (i < v13)
      i = v13;
  }
  *(double *)(a1 + 48) = width;
  *(double *)(a1 + 56) = i;
  return width;
}

double sub_65A24(uint64_t a1, int a2, uint64_t a3, double a4)
{
  double v5;
  uint64_t v6;

  sub_65A9C(a4 - (*(double *)(a1 + 72) + *(double *)(a1 + 88)), a3, a2, *(id **)(a1 + 8), *(id **)(a1 + 16));
  *(double *)(a1 + 40) = v5;
  *(_QWORD *)(a1 + 48) = v6;
  return v5 + *(double *)(a1 + 72) + *(double *)(a1 + 88);
}

id sub_65A9C(double a1, uint64_t a2, int a3, id *a4, id *a5)
{
  id *v7;
  double v8;
  double v9;
  double v10;
  id v11;
  id result;
  double v13;
  double v14;

  if (a4 != a5)
  {
    v7 = a4;
    if (a3)
      v8 = a1;
    else
      v8 = NAN;
    v9 = 0.0;
    v10 = 0.0;
    do
    {
      objc_msgSend(*v7, "setContainingWidth:", a1);
      objc_msgSend(*v7, "setContainingHeight:", NAN);
      objc_msgSend(*v7, "setFlexedWidth:", v8);
      objc_msgSend(*v7, "setFlexedHeight:", NAN);
      objc_msgSend(*v7, "validateLayout");
      v11 = *v7++;
      result = objc_msgSend(v11, "computedNaturalSize");
      if (v10 < v13)
        v10 = v13;
      v9 = v9 + v14;
    }
    while (v7 != a5);
  }
  return result;
}

_QWORD *sub_65B70(_QWORD *result, _QWORD *a2, NSMutableIndexSet **a3)
{
  uint64_t v3;
  uint64_t i;
  uint64_t v7;
  uint64_t v8;

  v3 = result[5];
  for (i = result[6]; v3 != i; v3 += 64)
  {
    v7 = *(_QWORD *)(v3 + 8);
    v8 = *(_QWORD *)(v3 + 16);
    while (v7 != v8)
    {
      result = sub_65740(a3, *(_QWORD *)(v7 + 8), *(_QWORD *)(v7 + 16), a2);
      v7 += 96;
    }
  }
  return result;
}

id sub_65BDC(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(*(id *)(a1 + 32), "addObject:", *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 112) + 152 * a2 + 120));
}

id sub_65BF4(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(*(id *)(a1 + 32), "addObject:", *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 64) + 8 * a2));
}

void sub_65C04(uint64_t a1)
{
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  id v6;
  char *v7;

  v3 = *(_QWORD *)(a1 + 8);
  v2 = *(_QWORD *)(a1 + 16);
  if (v3 < v2)
  {
    v4 = *(_QWORD *)(a1 + 24);
    do
    {
      v5 = *(_QWORD *)(**(_QWORD **)a1 + 88 * v3 + 24);
      if (v4 >= 0xAAAAAAAAAAAAAAABLL * ((*(_QWORD *)(**(_QWORD **)a1 + 88 * v3 + 32) - v5) >> 5))
      {
        v4 = 0;
        *(_QWORD *)(a1 + 8) = ++v3;
      }
      else
      {
        v6 = *(id *)(v5 + 96 * v4 + 32);
        v7 = (char *)objc_msgSend(v6, "role");

        v3 = *(_QWORD *)(a1 + 8);
        v2 = *(_QWORD *)(a1 + 16);
        if (v7 == (_BYTE *)&dword_0 + 3)
          break;
        v4 = *(_QWORD *)(a1 + 24) + 1;
      }
      *(_QWORD *)(a1 + 24) = v4;
    }
    while (v3 < v2);
  }
  if (v3 >= v2)
  {
    *(_QWORD *)(a1 + 8) = v2;
    *(_QWORD *)(a1 + 24) = 0;
  }
}

void sub_65CD0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_65CE0(uint64_t a1, unint64_t a2, _QWORD *a3)
{
  unint64_t v3;

  v3 = (uint64_t)(*(_QWORD *)(a1 + 8) - *(_QWORD *)a1) >> 3;
  if (a2 <= v3)
  {
    if (a2 < v3)
      *(_QWORD *)(a1 + 8) = *(_QWORD *)a1 + 8 * a2;
  }
  else
  {
    sub_6649C((void **)a1, a2 - v3, a3);
  }
}

void sub_65D10(_QWORD *a1, __int128 *size, uint64_t a3, __int128 *a4)
{
  NSMutableIndexSet *v4;
  unint64_t v5;
  __int128 v6;
  _OWORD *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t *v13;
  uint64_t *v14;
  uint64_t *v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  __int128 *v27;
  uint64_t v28;
  _OWORD *v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  unint64_t v37;
  _QWORD v39[5];
  __int128 v40;
  uint64_t v41;
  _OWORD *v42;
  _QWORD v43[5];
  __int128 v44;
  uint64_t v45;
  _OWORD *v46;
  __int128 v47;
  __int128 v48;
  _OWORD ptr[32];

  if (a1[14] != a1[15])
  {
    v37 = 0;
    v27 = a4;
    v4 = 0;
    memset(ptr, 0, sizeof(ptr));
    v5 = 64;
    v6 = size[1];
    v7 = ptr;
    v47 = *size;
    v48 = v6;
    v28 = a3;
    while (1)
    {
      v8 = *((_QWORD *)&v48 + 1);
      if (*((_QWORD *)&v47 + 1) == *(_QWORD *)(a3 + 8) && *((_QWORD *)&v48 + 1) == *(_QWORD *)(a3 + 24))
        break;
      v9 = *(_QWORD *)(*(_QWORD *)v47 + 88 * *((_QWORD *)&v47 + 1) + 24);
      if (v37 >= v5)
      {
        v10 = v5 + 64;
        v30 = v10;
        if (v7 == ptr)
        {
          v7 = malloc_type_malloc(8 * v10, 0x2004093837F09uLL);
          memcpy(v7, ptr, 8 * v37);
        }
        else
        {
          v7 = malloc_type_realloc(v7, 8 * v10, 0x2004093837F09uLL);
        }
      }
      else
      {
        v30 = v5;
      }
      v29 = v7;
      v36 = (uint64_t *)(v9 + 96 * v8);
      *((_QWORD *)v7 + v37) = v36;
      v31 = v36[6];
      if (v36[5] != v31)
      {
        v11 = v36[5];
        v12 = 0;
        v13 = (uint64_t *)(v9 + 96 * v8);
        v14 = v13 + 1;
        v15 = v13 + 2;
        v16 = v13 + 3;
        do
        {
          v32 = v11;
          v17 = *(_QWORD *)(v11 + 8);
          v18 = *(_QWORD *)(v11 + 16);
          v33 = v18;
          while (v17 != v18)
          {
            v19 = v17;
            v20 = a1[8];
            v34 = v19;
            v21 = (*(_QWORD *)(v19 + 8) - v20) >> 3;
            v22 = *(_QWORD *)(v19 + 16) - v20;
            if (v21 < v22 >> 3)
            {
              v35 = v22 >> 3;
              do
              {
                v23 = *(_QWORD *)(a1[11] + 8 * v21);
                if (v23 != -1)
                {
                  if (!v4)
                    v4 = objc_opt_new(NSMutableIndexSet);
                  do
                  {
                    if ((-[NSMutableIndexSet containsIndex:](v4, "containsIndex:", v23, v27) & 1) == 0)
                    {
                      v24 = a1[14] + 152 * v23;
                      *(_QWORD *)v24 = -1;
                      *(_OWORD *)(v24 + 8) = 0u;
                      *(_OWORD *)(v24 + 24) = 0u;
                      *(_OWORD *)(v24 + 40) = 0u;
                      -[NSMutableIndexSet addIndex:](v4, "addIndex:", v23);
                    }
                    v25 = v21;
                    v26 = a1[14];
                    sub_665AC((_QWORD *)(v26 + 152 * v23), v37, *v36, *v14, v12, *v15, *v16, 1uLL);
                    v23 = *(_QWORD *)(v26 + 152 * v23 + 128);
                    v21 = v25;
                  }
                  while (v23 != -1);
                }
                ++v21;
              }
              while (v21 != v35);
            }
            v18 = v33;
            v17 = v34 + 96;
          }
          ++v12;
          v11 = v32 + 64;
        }
        while (v32 + 64 != v31);
      }
      ++v37;
      ++*((_QWORD *)&v48 + 1);
      sub_65C04((uint64_t)&v47);
      a3 = v28;
      v7 = v29;
      v5 = v30;
    }
    v43[0] = _NSConcreteStackBlock;
    v43[1] = 3221225472;
    v43[2] = sub_66618;
    v43[3] = &unk_23F1C8;
    v43[4] = a1;
    v44 = *v27;
    v45 = *((_QWORD *)v27 + 2);
    v46 = v7;
    -[NSMutableIndexSet enumerateRangesUsingBlock:](v4, "enumerateRangesUsingBlock:", v43);
    v39[0] = _NSConcreteStackBlock;
    v39[1] = 3221225472;
    v39[2] = sub_668A4;
    v39[3] = &unk_23F1C8;
    v39[4] = a1;
    v40 = *v27;
    v41 = *((_QWORD *)v27 + 2);
    v42 = v7;
    -[NSMutableIndexSet enumerateRangesWithOptions:usingBlock:](v4, "enumerateRangesWithOptions:usingBlock:", 2, v39);
    if (v7 != ptr)
      free(v7);

  }
}

void sub_660F0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_66124(uint64_t a1, unint64_t a2, unint64_t a3, int a4)
{
  uint64_t v8;

  v8 = *(_QWORD *)(a1 + 96);
  if (*(_QWORD *)(a1 + 112))
  {
    if (v8 != 2)
      return;
  }
  else if (v8 != 2)
  {
    return;
  }
  sub_5FD14(a1);
  if (a4)
    sub_5F85C(a1, a2, a3);
}

void sub_6649C(void **a1, unint64_t a2, _QWORD *a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  _QWORD *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char *v15;
  uint64_t v16;
  _QWORD *v17;
  char *v18;
  char *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  char *v23;
  char *i;
  uint64_t v25;

  v8 = a1[2];
  v6 = (uint64_t)(a1 + 2);
  v7 = v8;
  v9 = *(_QWORD **)(v6 - 8);
  if (a2 <= (v8 - (_BYTE *)v9) >> 3)
  {
    if (a2)
    {
      v16 = 8 * a2;
      v17 = &v9[a2];
      do
      {
        *v9++ = *a3;
        v16 -= 8;
      }
      while (v16);
      v9 = v17;
    }
    a1[1] = v9;
  }
  else
  {
    v10 = (char *)v9 - (_BYTE *)*a1;
    v11 = a2 + (v10 >> 3);
    if (v11 >> 61)
      sub_6F9C();
    v12 = v10 >> 3;
    v13 = v7 - (_BYTE *)*a1;
    if (v13 >> 2 > v11)
      v11 = v13 >> 2;
    if ((unint64_t)v13 >= 0x7FFFFFFFFFFFFFF8)
      v14 = 0x1FFFFFFFFFFFFFFFLL;
    else
      v14 = v11;
    if (v14)
      v15 = (char *)sub_39CC4(v6, v14);
    else
      v15 = 0;
    v18 = &v15[8 * v12];
    v19 = &v18[8 * a2];
    v20 = 8 * a2;
    v21 = v18;
    do
    {
      *(_QWORD *)v21 = *a3;
      v21 += 8;
      v20 -= 8;
    }
    while (v20);
    v22 = &v15[8 * v14];
    v23 = (char *)*a1;
    for (i = (char *)a1[1]; i != v23; i -= 8)
    {
      v25 = *((_QWORD *)i - 1);
      *((_QWORD *)v18 - 1) = v25;
      v18 -= 8;
    }
    *a1 = v18;
    a1[1] = v19;
    a1[2] = v22;
    if (v23)
      operator delete(v23);
  }
}

_QWORD *sub_665AC(_QWORD *result, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, uint64_t a7, unint64_t a8)
{
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;

  if (*result == -1)
    *result = a2;
  if (!result[4])
  {
    result[1] = a3;
    result[4] = a6;
  }
  if (!result[5])
  {
    result[2] = a4;
    result[5] = a7;
  }
  v8 = result[6];
  if (v8)
  {
    v9 = result[3];
    if (v9 >= a5)
      v10 = a5;
    else
      v10 = result[3];
    v11 = v9 + v8;
    if (v11 <= a8 + a5)
      v11 = a8 + a5;
    result[3] = v10;
    a8 = v11 - v10;
  }
  else
  {
    result[3] = a5;
  }
  result[6] = a8;
  return result;
}

_QWORD *sub_66618(_QWORD *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  double v14;
  double v15;
  uint64_t v16;
  uint64_t v17;
  const CGPoint *v18;
  CGFloat *p_y;
  double v20;
  double x;
  _OWORD v22[3];
  uint64_t v23;

  if (a3)
  {
    v3 = a3;
    v4 = result;
    v5 = result[4];
    v6 = result + 5;
    v7 = 152 * a2;
    do
    {
      v8 = *(_QWORD *)(v5 + 112) + v7;
      v9 = *(_QWORD *)(v4[8] + 8 * *(_QWORD *)v8);
      v10 = *(_QWORD *)(v8 + 112);
      v12 = *(_OWORD *)(v8 + 16);
      v11 = *(_OWORD *)(v8 + 32);
      v13 = *(_OWORD *)v8;
      v23 = *(_QWORD *)(v8 + 48);
      v22[1] = v12;
      v22[2] = v11;
      v22[0] = v13;
      v14 = sub_66700(v6, v9, v10, (unint64_t *)v22);
      v16 = *(_QWORD *)(v8 + 128);
      if (v16 == -1)
      {
        p_y = &CGPointZero.y;
        v18 = &CGPointZero;
      }
      else
      {
        v17 = *(_QWORD *)(v5 + 112) + 152 * v16;
        v18 = (const CGPoint *)(v17 + 136);
        p_y = (CGFloat *)(v17 + 144);
      }
      v20 = *p_y;
      x = v18->x;
      *(double *)(v8 + 136) = v14;
      *(double *)(v8 + 144) = v15;
      result = objc_msgSend(*(id *)(v8 + 120), "setComputedOrigin:", v14 - x, v15 - v20);
      v7 += 152;
      --v3;
    }
    while (v3);
  }
  return result;
}

double sub_66700(uint64_t *a1, uint64_t a2, uint64_t a3, unint64_t *a4)
{
  uint64_t v8;
  double v9;
  double v10;

  v8 = a1[2];
  sub_66124(*a1, a4[1], a4[4], 1);
  v10 = v9;
  sub_5F85C(*a1, a4[1], a4[4]);
  if (a3 && !*(_DWORD *)(v8 + 80))
  {
    objc_msgSend(*(id *)(*(_QWORD *)(a2 + 40) + (a4[3] << 6)), "valign");
    objc_msgSend(*(id *)(*(_QWORD *)(a2 + 40) + ((a4[6] + a4[3] - 1) << 6)), "valign");
  }
  return v10 + *(double *)(v8 + 64);
}

void sub_668A4(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  void *v20;
  _OWORD v21[3];
  uint64_t v22;

  if (a3)
  {
    v3 = a3;
    v5 = a1[4];
    v6 = a1 + 5;
    v7 = 152 * a3;
    v8 = 152 * a2;
    do
    {
      v9 = *(_QWORD *)(v5 + 112) + v7 + v8;
      v10 = *(_QWORD *)(a1[8] + 8 * *(_QWORD *)(v9 - 152));
      v11 = *(_QWORD *)(v9 - 40);
      v12 = *(_OWORD *)(v9 - 136);
      v13 = *(_OWORD *)(v9 - 120);
      v14 = *(_OWORD *)(v9 - 152);
      v22 = *(_QWORD *)(v9 - 104);
      v21[1] = v12;
      v21[2] = v13;
      v21[0] = v14;
      v15 = sub_66700(v6, v10, v11, (unint64_t *)v21);
      v17 = v16;
      v19 = v18;
      v20 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(v9 - 32), "controller", v15));
      objc_msgSend(v20, "validateGroupedContainingLayout:withSize:", *(_QWORD *)(v9 - 32), v17, v19);

      v8 -= 152;
      --v3;
    }
    while (v3);
  }
}

void sub_66980(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

double *sub_66990(double *result, double a2, double a3)
{
  id *v3;
  double v4;
  double *v6;
  double v7;
  double v8;
  double v9;
  id v10;

  result[2] = a2;
  result[3] = a3;
  v3 = *(id **)result;
  if (*((_QWORD *)result + 1) != *(_QWORD *)result)
  {
    v4 = a3;
    v6 = result;
    do
    {
      objc_msgSend(*v3, "computedNaturalSize");
      v8 = v7;
      v10 = *v3++;
      result = (double *)objc_msgSend(v10, "setComputedOrigin:", a2 + (v6[4] - v9) * 0.5, v4);
      v4 = v4 + v8;
    }
    while (v3 != *((id **)v6 + 1));
  }
  return result;
}

void sub_66A0C(_QWORD *a1, void *a2, double a3, double a4)
{
  id v7;
  unint64_t v8;
  unint64_t v9;
  char *v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  char *v16;
  double *v17;
  char *v18;
  uint64_t v19;
  int64x2_t v20;
  uint64_t v21;
  uint64_t v22;
  int64x2_t v23;
  uint64_t v24;
  _QWORD *v25;

  v7 = a2;
  v8 = a1[5];
  v9 = a1[4];
  if (v9 >= v8)
  {
    v11 = a1[3];
    v12 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v9 - v11) >> 3);
    v13 = v12 + 1;
    if (v12 + 1 > 0xAAAAAAAAAAAAAAALL)
      sub_6F9C();
    v14 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v8 - v11) >> 3);
    if (2 * v14 > v13)
      v13 = 2 * v14;
    if (v14 >= 0x555555555555555)
      v15 = 0xAAAAAAAAAAAAAAALL;
    else
      v15 = v13;
    v25 = a1 + 5;
    if (v15)
    {
      v16 = (char *)sub_14C10((uint64_t)(a1 + 5), v15);
      v11 = a1[3];
      v9 = a1[4];
    }
    else
    {
      v16 = 0;
    }
    v17 = (double *)&v16[24 * v12];
    *(_QWORD *)v17 = v7;
    v17[1] = a3;
    v17[2] = a4;
    if (v9 == v11)
    {
      v20 = vdupq_n_s64(v11);
      v18 = &v16[24 * v12];
    }
    else
    {
      v18 = &v16[24 * v12];
      do
      {
        v19 = *(_QWORD *)(v9 - 24);
        v9 -= 24;
        *(_QWORD *)v9 = 0;
        *((_QWORD *)v18 - 3) = v19;
        v18 -= 24;
        *(_OWORD *)(v18 + 8) = *(_OWORD *)(v9 + 8);
      }
      while (v9 != v11);
      v20 = *(int64x2_t *)(a1 + 3);
    }
    v10 = (char *)(v17 + 3);
    a1[3] = v18;
    a1[4] = v17 + 3;
    v23 = v20;
    v21 = a1[5];
    a1[5] = &v16[24 * v15];
    v24 = v21;
    v22 = v20.i64[0];
    sub_66B84((uint64_t)&v22);
  }
  else
  {
    *(_QWORD *)v9 = v7;
    v10 = (char *)(v9 + 24);
    *(double *)(v9 + 8) = a3;
    *(double *)(v9 + 16) = a4;
  }
  a1[4] = v10;

}

void sub_66B70(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

uint64_t sub_66B84(uint64_t a1)
{
  uint64_t i;
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 8);
  for (i = *(_QWORD *)(a1 + 16); i != v3; i = *(_QWORD *)(a1 + 16))
  {
    *(_QWORD *)(a1 + 16) = i - 24;

  }
  if (*(_QWORD *)a1)
    operator delete(*(void **)a1);
  return a1;
}

void sub_66BD4(_QWORD *a1, uint64_t *size, uint64_t *a3, __int128 *a4)
{
  uint64_t *v4;
  NSMutableIndexSet *v6;
  unint64_t v7;
  unint64_t v8;
  _OWORD *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v22;
  _OWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD v29[5];
  __int128 v30;
  uint64_t v31;
  _OWORD *v32;
  _QWORD v33[5];
  __int128 v34;
  uint64_t v35;
  _OWORD *v36;
  _OWORD ptr[32];

  if (a1[14] != a1[15])
  {
    v4 = size;
    memset(ptr, 0, sizeof(ptr));
    if (size == a3)
    {
      v6 = 0;
      v9 = ptr;
    }
    else
    {
      v6 = 0;
      v7 = 0;
      v8 = 64;
      v9 = ptr;
      do
      {
        if (v7 >= v8)
        {
          v8 += 64;
          if (v9 == ptr)
          {
            v9 = malloc_type_malloc(8 * v8, 0x2004093837F09uLL);
            memcpy(v9, ptr, 8 * v7);
          }
          else
          {
            v9 = malloc_type_realloc(v9, 8 * v8, 0x2004093837F09uLL);
          }
        }
        v22 = v8;
        v23 = v9;
        *((_QWORD *)v9 + v7) = v4;
        v10 = v4[6];
        v24 = v4[7];
        if (v10 != v24)
        {
          v11 = 0;
          do
          {
            v25 = v10;
            v13 = *(_QWORD *)(v10 + 8);
            v12 = *(_QWORD *)(v10 + 16);
            v26 = v12;
            while (v13 != v12)
            {
              v14 = a1[8];
              v27 = v13;
              v15 = (*(_QWORD *)(v13 + 8) - v14) >> 3;
              v16 = *(_QWORD *)(v13 + 16) - v14;
              if (v15 < v16 >> 3)
              {
                v28 = v16 >> 3;
                do
                {
                  v17 = *(_QWORD *)(a1[11] + 8 * v15);
                  if (v17 != -1)
                  {
                    if (!v6)
                      v6 = objc_opt_new(NSMutableIndexSet);
                    do
                    {
                      if ((-[NSMutableIndexSet containsIndex:](v6, "containsIndex:", v17) & 1) == 0)
                      {
                        v18 = a1[14] + 152 * v17;
                        *(_QWORD *)v18 = -1;
                        *(_OWORD *)(v18 + 8) = 0u;
                        *(_OWORD *)(v18 + 24) = 0u;
                        *(_OWORD *)(v18 + 40) = 0u;
                        -[NSMutableIndexSet addIndex:](v6, "addIndex:", v17);
                      }
                      v19 = a1[14];
                      sub_665AC((_QWORD *)(v19 + 152 * v17), v7, *v4, v4[1], v11, v4[2], v4[3], 1uLL);
                      v17 = *(_QWORD *)(v19 + 152 * v17 + 128);
                    }
                    while (v17 != -1);
                  }
                  ++v15;
                }
                while (v15 != v28);
              }
              v12 = v26;
              v13 = v27 + 96;
            }
            ++v11;
            v10 = v25 + 64;
          }
          while (v25 + 64 != v24);
        }
        ++v7;
        v4 += 12;
        v8 = v22;
        v9 = v23;
      }
      while (v4 != a3);
    }
    v33[0] = _NSConcreteStackBlock;
    v33[1] = 3221225472;
    v33[2] = sub_66F2C;
    v33[3] = &unk_23F1C8;
    v33[4] = a1;
    v34 = *a4;
    v35 = *((_QWORD *)a4 + 2);
    v36 = v9;
    -[NSMutableIndexSet enumerateRangesUsingBlock:](v6, "enumerateRangesUsingBlock:", v33);
    v29[0] = _NSConcreteStackBlock;
    v29[1] = 3221225472;
    v29[2] = sub_671B8;
    v29[3] = &unk_23F1C8;
    v29[4] = a1;
    v30 = *a4;
    v31 = *((_QWORD *)a4 + 2);
    v32 = v9;
    -[NSMutableIndexSet enumerateRangesWithOptions:usingBlock:](v6, "enumerateRangesWithOptions:usingBlock:", 2, v29);
    if (v9 != ptr)
      free(v9);

  }
}

void sub_66F08(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

_QWORD *sub_66F2C(_QWORD *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  double v14;
  double v15;
  uint64_t v16;
  uint64_t v17;
  const CGPoint *v18;
  CGFloat *p_y;
  double v20;
  double x;
  _OWORD v22[3];
  uint64_t v23;

  if (a3)
  {
    v3 = a3;
    v4 = result;
    v5 = result[4];
    v6 = result + 5;
    v7 = 152 * a2;
    do
    {
      v8 = *(_QWORD *)(v5 + 112) + v7;
      v9 = *(_QWORD *)(v4[8] + 8 * *(_QWORD *)v8);
      v10 = *(_QWORD *)(v8 + 112);
      v12 = *(_OWORD *)(v8 + 16);
      v11 = *(_OWORD *)(v8 + 32);
      v13 = *(_OWORD *)v8;
      v23 = *(_QWORD *)(v8 + 48);
      v22[1] = v12;
      v22[2] = v11;
      v22[0] = v13;
      v14 = sub_67014(v6, v9, v10, (unint64_t *)v22);
      v16 = *(_QWORD *)(v8 + 128);
      if (v16 == -1)
      {
        p_y = &CGPointZero.y;
        v18 = &CGPointZero;
      }
      else
      {
        v17 = *(_QWORD *)(v5 + 112) + 152 * v16;
        v18 = (const CGPoint *)(v17 + 136);
        p_y = (CGFloat *)(v17 + 144);
      }
      v20 = *p_y;
      x = v18->x;
      *(double *)(v8 + 136) = v14;
      *(double *)(v8 + 144) = v15;
      result = objc_msgSend(*(id *)(v8 + 120), "setComputedOrigin:", v14 - x, v15 - v20);
      v7 += 152;
      --v3;
    }
    while (v3);
  }
  return result;
}

double sub_67014(uint64_t *a1, uint64_t a2, uint64_t a3, unint64_t *a4)
{
  uint64_t v8;
  double v9;
  double v10;

  v8 = a1[2];
  sub_66124(*a1, a4[1], a4[4], 1);
  v10 = v9;
  sub_5F85C(*a1, a4[1], a4[4]);
  if (a3 && !*(_DWORD *)(v8 + 32))
  {
    objc_msgSend(*(id *)(*(_QWORD *)(a2 + 48) + (a4[3] << 6)), "valign");
    objc_msgSend(*(id *)(*(_QWORD *)(a2 + 48) + ((a4[6] + a4[3] - 1) << 6)), "valign");
  }
  return v10 + *(double *)(v8 + 16);
}

void sub_671B8(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  void *v20;
  _OWORD v21[3];
  uint64_t v22;

  if (a3)
  {
    v3 = a3;
    v5 = a1[4];
    v6 = a1 + 5;
    v7 = 152 * a3;
    v8 = 152 * a2;
    do
    {
      v9 = *(_QWORD *)(v5 + 112) + v7 + v8;
      v10 = *(_QWORD *)(a1[8] + 8 * *(_QWORD *)(v9 - 152));
      v11 = *(_QWORD *)(v9 - 40);
      v12 = *(_OWORD *)(v9 - 136);
      v13 = *(_OWORD *)(v9 - 120);
      v14 = *(_OWORD *)(v9 - 152);
      v22 = *(_QWORD *)(v9 - 104);
      v21[1] = v12;
      v21[2] = v13;
      v21[0] = v14;
      v15 = sub_67014(v6, v10, v11, (unint64_t *)v21);
      v17 = v16;
      v19 = v18;
      v20 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(v9 - 32), "controller", v15));
      objc_msgSend(v20, "validateGroupedContainingLayout:withSize:", *(_QWORD *)(v9 - 32), v17, v19);

      v8 -= 152;
      --v3;
    }
    while (v3);
  }
}

void sub_67294(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void *sub_672A4(uint64_t a1, unint64_t a2)
{
  if (a2 >= 0x666666666666667)
    sub_69F8();
  return operator new(40 * a2);
}

uint64_t sub_672E8(uint64_t a1)
{
  uint64_t i;
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 8);
  for (i = *(_QWORD *)(a1 + 16); i != v3; i = *(_QWORD *)(a1 + 16))
  {
    *(_QWORD *)(a1 + 16) = i - 40;

  }
  if (*(_QWORD *)a1)
    operator delete(*(void **)a1);
  return a1;
}

void sub_67338(uint64_t a1)
{
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  id v6;
  int *v7;

  v3 = *(_QWORD *)(a1 + 8);
  v2 = *(_QWORD *)(a1 + 16);
  if (v3 < v2)
  {
    v4 = *(_QWORD *)(a1 + 24);
    do
    {
      v5 = *(_QWORD *)(**(_QWORD **)a1 + 88 * v3 + 24);
      if (v4 >= 0xAAAAAAAAAAAAAAABLL * ((*(_QWORD *)(**(_QWORD **)a1 + 88 * v3 + 32) - v5) >> 5))
      {
        v4 = 0;
        *(_QWORD *)(a1 + 8) = ++v3;
      }
      else
      {
        v6 = *(id *)(v5 + 96 * v4 + 32);
        v7 = (int *)objc_msgSend(v6, "role");

        v3 = *(_QWORD *)(a1 + 8);
        v2 = *(_QWORD *)(a1 + 16);
        if (v7 == &dword_4)
          break;
        v4 = *(_QWORD *)(a1 + 24) + 1;
      }
      *(_QWORD *)(a1 + 24) = v4;
    }
    while (v3 < v2);
  }
  if (v3 >= v2)
  {
    *(_QWORD *)(a1 + 8) = v2;
    *(_QWORD *)(a1 + 24) = 0;
  }
}

void sub_67404(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_67414(_QWORD *a1, __int128 *size, uint64_t a3, __int128 *a4)
{
  NSMutableIndexSet *v4;
  unint64_t v5;
  __int128 v6;
  _OWORD *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t *v13;
  uint64_t *v14;
  uint64_t *v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  __int128 *v27;
  uint64_t v28;
  _OWORD *v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  unint64_t v37;
  _QWORD v39[5];
  __int128 v40;
  uint64_t v41;
  _OWORD *v42;
  _QWORD v43[5];
  __int128 v44;
  uint64_t v45;
  _OWORD *v46;
  __int128 v47;
  __int128 v48;
  _OWORD ptr[32];

  if (a1[14] != a1[15])
  {
    v37 = 0;
    v27 = a4;
    v4 = 0;
    memset(ptr, 0, sizeof(ptr));
    v5 = 64;
    v6 = size[1];
    v7 = ptr;
    v47 = *size;
    v48 = v6;
    v28 = a3;
    while (1)
    {
      v8 = *((_QWORD *)&v48 + 1);
      if (*((_QWORD *)&v47 + 1) == *(_QWORD *)(a3 + 8) && *((_QWORD *)&v48 + 1) == *(_QWORD *)(a3 + 24))
        break;
      v9 = *(_QWORD *)(*(_QWORD *)v47 + 88 * *((_QWORD *)&v47 + 1) + 24);
      if (v37 >= v5)
      {
        v10 = v5 + 64;
        v30 = v10;
        if (v7 == ptr)
        {
          v7 = malloc_type_malloc(8 * v10, 0x2004093837F09uLL);
          memcpy(v7, ptr, 8 * v37);
        }
        else
        {
          v7 = malloc_type_realloc(v7, 8 * v10, 0x2004093837F09uLL);
        }
      }
      else
      {
        v30 = v5;
      }
      v29 = v7;
      v36 = (uint64_t *)(v9 + 96 * v8);
      *((_QWORD *)v7 + v37) = v36;
      v31 = v36[6];
      if (v36[5] != v31)
      {
        v11 = v36[5];
        v12 = 0;
        v13 = (uint64_t *)(v9 + 96 * v8);
        v14 = v13 + 1;
        v15 = v13 + 2;
        v16 = v13 + 3;
        do
        {
          v32 = v11;
          v17 = *(_QWORD *)(v11 + 8);
          v18 = *(_QWORD *)(v11 + 16);
          v33 = v18;
          while (v17 != v18)
          {
            v19 = v17;
            v20 = a1[8];
            v34 = v19;
            v21 = (*(_QWORD *)(v19 + 8) - v20) >> 3;
            v22 = *(_QWORD *)(v19 + 16) - v20;
            if (v21 < v22 >> 3)
            {
              v35 = v22 >> 3;
              do
              {
                v23 = *(_QWORD *)(a1[11] + 8 * v21);
                if (v23 != -1)
                {
                  if (!v4)
                    v4 = objc_opt_new(NSMutableIndexSet);
                  do
                  {
                    if ((-[NSMutableIndexSet containsIndex:](v4, "containsIndex:", v23, v27) & 1) == 0)
                    {
                      v24 = a1[14] + 152 * v23;
                      *(_QWORD *)v24 = -1;
                      *(_OWORD *)(v24 + 8) = 0u;
                      *(_OWORD *)(v24 + 24) = 0u;
                      *(_OWORD *)(v24 + 40) = 0u;
                      -[NSMutableIndexSet addIndex:](v4, "addIndex:", v23);
                    }
                    v25 = v21;
                    v26 = a1[14];
                    sub_665AC((_QWORD *)(v26 + 152 * v23), v37, *v36, *v14, v12, *v15, *v16, 1uLL);
                    v23 = *(_QWORD *)(v26 + 152 * v23 + 128);
                    v21 = v25;
                  }
                  while (v23 != -1);
                }
                ++v21;
              }
              while (v21 != v35);
            }
            v18 = v33;
            v17 = v34 + 96;
          }
          ++v12;
          v11 = v32 + 64;
        }
        while (v32 + 64 != v31);
      }
      ++v37;
      ++*((_QWORD *)&v48 + 1);
      sub_67338((uint64_t)&v47);
      a3 = v28;
      v7 = v29;
      v5 = v30;
    }
    v43[0] = _NSConcreteStackBlock;
    v43[1] = 3221225472;
    v43[2] = sub_67828;
    v43[3] = &unk_23F1C8;
    v43[4] = a1;
    v44 = *v27;
    v45 = *((_QWORD *)v27 + 2);
    v46 = v7;
    -[NSMutableIndexSet enumerateRangesUsingBlock:](v4, "enumerateRangesUsingBlock:", v43);
    v39[0] = _NSConcreteStackBlock;
    v39[1] = 3221225472;
    v39[2] = sub_67910;
    v39[3] = &unk_23F1C8;
    v39[4] = a1;
    v40 = *v27;
    v41 = *((_QWORD *)v27 + 2);
    v42 = v7;
    -[NSMutableIndexSet enumerateRangesWithOptions:usingBlock:](v4, "enumerateRangesWithOptions:usingBlock:", 2, v39);
    if (v7 != ptr)
      free(v7);

  }
}

void sub_677F4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

_QWORD *sub_67828(_QWORD *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  double v14;
  double v15;
  uint64_t v16;
  uint64_t v17;
  const CGPoint *v18;
  CGFloat *p_y;
  double v20;
  double x;
  _OWORD v22[3];
  uint64_t v23;

  if (a3)
  {
    v3 = a3;
    v4 = result;
    v5 = result[4];
    v6 = result + 5;
    v7 = 152 * a2;
    do
    {
      v8 = *(_QWORD *)(v5 + 112) + v7;
      v9 = *(_QWORD *)(v4[8] + 8 * *(_QWORD *)v8);
      v10 = *(_QWORD *)(v8 + 112);
      v12 = *(_OWORD *)(v8 + 16);
      v11 = *(_OWORD *)(v8 + 32);
      v13 = *(_OWORD *)v8;
      v23 = *(_QWORD *)(v8 + 48);
      v22[1] = v12;
      v22[2] = v11;
      v22[0] = v13;
      v14 = sub_66700(v6, v9, v10, (unint64_t *)v22);
      v16 = *(_QWORD *)(v8 + 128);
      if (v16 == -1)
      {
        p_y = &CGPointZero.y;
        v18 = &CGPointZero;
      }
      else
      {
        v17 = *(_QWORD *)(v5 + 112) + 152 * v16;
        v18 = (const CGPoint *)(v17 + 136);
        p_y = (CGFloat *)(v17 + 144);
      }
      v20 = *p_y;
      x = v18->x;
      *(double *)(v8 + 136) = v14;
      *(double *)(v8 + 144) = v15;
      result = objc_msgSend(*(id *)(v8 + 120), "setComputedOrigin:", v14 - x, v15 - v20);
      v7 += 152;
      --v3;
    }
    while (v3);
  }
  return result;
}

void sub_67910(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  void *v20;
  _OWORD v21[3];
  uint64_t v22;

  if (a3)
  {
    v3 = a3;
    v5 = a1[4];
    v6 = a1 + 5;
    v7 = 152 * a3;
    v8 = 152 * a2;
    do
    {
      v9 = *(_QWORD *)(v5 + 112) + v7 + v8;
      v10 = *(_QWORD *)(a1[8] + 8 * *(_QWORD *)(v9 - 152));
      v11 = *(_QWORD *)(v9 - 40);
      v12 = *(_OWORD *)(v9 - 136);
      v13 = *(_OWORD *)(v9 - 120);
      v14 = *(_OWORD *)(v9 - 152);
      v22 = *(_QWORD *)(v9 - 104);
      v21[1] = v12;
      v21[2] = v13;
      v21[0] = v14;
      v15 = sub_66700(v6, v10, v11, (unint64_t *)v21);
      v17 = v16;
      v19 = v18;
      v20 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(v9 - 32), "controller", v15));
      objc_msgSend(v20, "validateGroupedContainingLayout:withSize:", *(_QWORD *)(v9 - 32), v17, v19);

      v8 -= 152;
      --v3;
    }
    while (v3);
  }
}

void sub_679EC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_679FC(void ***a1)
{
  void **v1;
  char *v2;
  char *v4;
  void *v5;
  void *v6;

  v1 = *a1;
  v2 = (char *)**a1;
  if (v2)
  {
    v4 = (char *)v1[1];
    v5 = **a1;
    if (v4 != v2)
    {
      do
      {
        v6 = (void *)*((_QWORD *)v4 - 5);
        v4 -= 40;

      }
      while (v4 != v2);
      v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

id sub_68118(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  id v6;

  v3 = a2;
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "lastObject"));
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "value"));
  LOBYTE(a1) = objc_msgSend(v5, "isEqual:", *(_QWORD *)(*(_QWORD *)(a1 + 32) + 24));

  if ((a1 & 1) != 0)
    v6 = &__NSArray0__struct;
  else
    v6 = v3;

  return v6;
}

void sub_6832C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_68344(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_68354(uint64_t a1)
{

}

void sub_6835C(uint64_t a1, void *a2)
{
  objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40), a2);
}

void sub_6A9EC(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  id WeakRetained;

  v2 = *(_QWORD *)(a1 + 40);
  *(_BYTE *)(*(_QWORD *)(a1 + 32) + 48) = 0;
  v3 = *(_QWORD **)(a1 + 32);
  v4 = v3[5];
  if (v2 == v4)
  {
    v3[5] = 0;
    WeakRetained = objc_loadWeakRetained((id *)(*(_QWORD *)(a1 + 32) + 64));
    objc_msgSend(WeakRetained, "hoverInteractionDidSettle:", *(_QWORD *)(a1 + 32));

  }
  else if (v4)
  {
    _objc_msgSend(v3, "_checkIfSettledWithTime:");
  }
}

void sub_6ABC0(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  _QWORD v7[4];
  id v8;
  id v9;
  __int128 v10;

  v5 = a2;
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  v7[2] = sub_6AC60;
  v7[3] = &unk_23F240;
  v10 = *(_OWORD *)(a1 + 40);
  v8 = *(id *)(a1 + 32);
  v9 = v5;
  v6 = v5;
  objc_msgSend(a3, "enumerateObjectsUsingBlock:", v7);

}

id sub_6AC60(uint64_t a1, void *a2, uint64_t a3, _BYTE *a4)
{
  id result;
  CGRect v7;

  objc_msgSend(a2, "CGRectValue");
  result = (id)CGRectContainsPoint(v7, *(CGPoint *)(a1 + 48));
  if ((_DWORD)result)
  {
    result = objc_msgSend(*(id *)(a1 + 32), "addObject:", *(_QWORD *)(a1 + 40));
    *a4 = 1;
  }
  return result;
}

void sub_6B6E8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_6B7FC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_6B8E0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_6BA74(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;

  _Unwind_Resume(a1);
}

void sub_6BC78(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  void *v10;
  void *v11;
  void *v12;

  _Unwind_Resume(a1);
}

void sub_6BD7C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  v5 = v4;

  _Unwind_Resume(a1);
}

void sub_6C27C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, void *a10, void *a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *a17, void *a18)
{
  void *v18;
  void *v19;

  _Unwind_Resume(a1);
}

void sub_6CC7C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, void *a12, void *a13, void *a14, uint64_t a15, void *a16, void *a17, void *a18, void *a19, void *a20,void *a21,uint64_t a22,void *a23,void *a24)
{
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;

  _Unwind_Resume(a1);
}

void sub_6CFDC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_6D0A4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, id a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, void *a16)
{
  void *v16;

  _Unwind_Resume(a1);
}

void sub_6D0CC(uint64_t a1)
{
  uint64_t v2;
  double v3;
  double v4;
  double v5;
  double v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  void *v18;
  void *v19;
  double y;
  void *v21;
  void *v22;
  void *v23;
  id v24;
  uint64_t v25;
  void *v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  void *v31;
  void *v32;
  id v33;
  void *v34;
  void *v35;
  void *v36;
  void *v37;
  void *v38;
  double v39;
  double v40;
  double v41;
  void *v42;
  char *v43;
  double v44;
  double v45;
  double v46;
  double v47;
  double v48;
  double v49;
  id v50;
  id *v51;
  id *v52;
  void *v53;
  void *v54;
  uint64_t v55;
  void *v56;
  uint64_t v57;
  double v58;
  int8x16_t v59;
  _QWORD v60[4];
  id v61;
  _QWORD v62[5];
  id v63;
  _QWORD v64[4];
  int8x16_t v65;
  _QWORD v66[7];
  _QWORD v67[4];
  id v68;

  objc_msgSend(*(id *)(a1 + 32), "setApplyPhase:", 1);
  if (objc_msgSend(*(id *)(*(_QWORD *)(a1 + 40) + 96), "layoutDirection") == (char *)&dword_0 + 2
    && objc_msgSend(*(id *)(a1 + 32), "effectiveUserInterfaceLayoutDirection") != (char *)&dword_0 + 1)
  {
    v2 = 4;
    goto LABEL_7;
  }
  if (objc_msgSend(*(id *)(*(_QWORD *)(a1 + 40) + 96), "layoutDirection") == (char *)&dword_0 + 1
    && objc_msgSend(*(id *)(a1 + 32), "effectiveUserInterfaceLayoutDirection"))
  {
    v2 = 3;
LABEL_7:
    objc_msgSend(*(id *)(a1 + 32), "setSemanticContentAttribute:", v2);
  }
  objc_msgSend(*(id *)(a1 + 32), "contentOffset");
  v4 = v3;
  v6 = v5;
  objc_msgSend(*(id *)(a1 + 32), "bounds");
  v8 = v7;
  v10 = v9;
  v12 = v11;
  v14 = v13;
  v15 = *(_QWORD *)(a1 + 40);
  v16 = *(_QWORD *)(v15 + 128);
  if ((v16 & 1) != 0)
  {
    if ((v16 & 2) != 0)
    {
      v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "renderModel"));
      v19 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v18, "anchorSet"));
      v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v19, "scrollAnchorWithScrollView:offset:", *(_QWORD *)(a1 + 32), v4, v6));

    }
    else
    {
      v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(v15 + 104), "feedScrollAnchor"));
    }
    y = CGPointZero.y;
    if (v17)
    {
      v21 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v17, "anchor"));
      v22 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v21, "identifier"));

      v23 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 40) + 96), "sections"));
      v67[0] = _NSConcreteStackBlock;
      v67[1] = 3221225472;
      v67[2] = sub_6D740;
      v67[3] = &unk_23F290;
      v24 = v22;
      v68 = v24;
      v25 = (uint64_t)objc_msgSend(v23, "indexOfObjectPassingTest:", v67);

      if (v25 != 0x7FFFFFFFFFFFFFFFLL)
      {
        v26 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 40) + 96), "sections"));
        v27 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v26, "objectAtIndexedSubscript:", v25));

        v29 = objc_opt_class(NSString, v28);
        v30 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 40) + 96), "content"));
        v31 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v30, "currentStackName"));
        v32 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v31, "value"));
        v33 = TUIDynamicCast(v29, v32);
        v34 = (void *)objc_claimAutoreleasedReturnValue(v33);

        v35 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v27, "entry"));
        v36 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v35, "stackNames"));

        if (objc_msgSend(v36, "count") && v34 && !objc_msgSend(v36, "containsObject:", v34))
          v25 = 0x7FFFFFFFFFFFFFFFLL;

        if (v25 != 0x7FFFFFFFFFFFFFFFLL)
        {
          v37 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 40) + 96), "sections"));
          v38 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v37, "objectAtIndexedSubscript:", v25));

          objc_msgSend(v38, "size");
          v40 = v39;
          objc_msgSend(*(id *)(a1 + 32), "bounds");
          v58 = v41;
          v42 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v17, "anchor"));
          v43 = (char *)objc_msgSend(v42, "position");

          if (v43)
          {
            if (v43 == (_BYTE *)&dword_0 + 1)
            {
              objc_msgSend(*(id *)(a1 + 32), "adjustedContentInset");
              v44 = v58 - v40 - v45;
            }
            else
            {
              v44 = 0.0;
              if (v43 == (_BYTE *)&dword_0 + 2)
                v44 = (v58 - v40) * 0.5;
            }
          }
          else
          {
            objc_msgSend(*(id *)(a1 + 32), "adjustedContentInset");
            v44 = v46;
          }
          objc_msgSend(v17, "relativeDistance");
          v48 = v47;
          objc_msgSend(v38, "offset");
          y = v49 - (v44 + v58 * 0.5 * v48) - v6;

        }
      }

    }
    v4 = v4 + CGPointZero.x;
    v6 = v6 + y;

  }
  if (+[TUIFeedView areFeedUpdatesAnimated](TUIFeedView, "areFeedUpdatesAnimated"))
  {
    v64[0] = _NSConcreteStackBlock;
    v64[1] = 3221225472;
    v64[2] = sub_6D790;
    v64[3] = &unk_23F330;
    v59 = *(int8x16_t *)(a1 + 32);
    v50 = (id)v59.i64[0];
    v65 = vextq_s8(v59, v59, 8uLL);
    v66[0] = *(id *)(a1 + 48);
    v66[1] = v8;
    v66[2] = v10;
    v66[3] = v12;
    v66[4] = v14;
    *(double *)&v66[5] = v4;
    *(double *)&v66[6] = v6;
    +[TUIFeedView performAnimatedFeedUpdates:](TUIFeedView, "performAnimatedFeedUpdates:", v64);
    v51 = (id *)&v65.i64[1];
    v52 = (id *)v66;
  }
  else
  {
    v53 = *(void **)(a1 + 32);
    v54 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 40) + 152), "model"));
    v56 = *(void **)(a1 + 32);
    v55 = *(_QWORD *)(a1 + 40);
    v57 = *(_QWORD *)(v55 + 128);
    v62[2] = sub_6DCE4;
    v62[3] = &unk_23F2B8;
    v62[0] = _NSConcreteStackBlock;
    v62[1] = 3221225472;
    v62[4] = v55;
    v63 = v56;
    v60[0] = _NSConcreteStackBlock;
    v60[1] = 3221225472;
    v60[2] = sub_6DD5C;
    v60[3] = &unk_23F2E0;
    v61 = *(id *)(a1 + 48);
    objc_msgSend(v53, "performBatchUpdatesWithRenderModel:flags:block:completion:", v54, v57, v62, v60);
    v51 = &v63;
    v52 = &v61;

    if ((*(_BYTE *)(*(_QWORD *)(a1 + 40) + 128) & 1) != 0)
      objc_msgSend(*(id *)(a1 + 32), "setContentOffset:animated:", 0, v4, v6);
  }

  *(_QWORD *)(*(_QWORD *)(a1 + 40) + 112) = 4;
}

void sub_6D60C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  uint64_t v4;

  _Unwind_Resume(a1);
}

void sub_6D6E0()
{
  void *v0;
  uint64_t v1;

  JUMPOUT(0x6D6D0);
}

void sub_6D6F4()
{
  JUMPOUT(0x6D6D0);
}

void sub_6D6FC()
{
  void *v0;

  JUMPOUT(0x6D6D4);
}

void sub_6D708()
{
  JUMPOUT(0x6D6D4);
}

void sub_6D710(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void *a23)
{

  JUMPOUT(0x6D6D4);
}

void sub_6D728(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,void *a30)
{

  JUMPOUT(0x6D738);
}

id sub_6D740(uint64_t a1, void *a2)
{
  void *v3;
  id v4;

  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "UUID"));
  v4 = objc_msgSend(v3, "isEqual:", *(_QWORD *)(a1 + 32));

  return v4;
}

void sub_6D780(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_6D790(uint64_t a1)
{
  id v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  __int128 v6;
  _QWORD v7[4];
  id v8;
  uint64_t v9;
  id v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  _QWORD v14[4];
  id v15;
  uint64_t v16;

  if (*(_QWORD *)(*(_QWORD *)(a1 + 32) + 160))
  {
    objc_msgSend(*(id *)(a1 + 40), "setApplyPhase:", 2);
    v14[0] = _NSConcreteStackBlock;
    v14[1] = 3221225472;
    v14[2] = sub_6D8D4;
    v14[3] = &unk_23F2B8;
    v2 = *(id *)(a1 + 40);
    v3 = *(_QWORD *)(a1 + 32);
    v15 = v2;
    v16 = v3;
    +[UIView performWithoutAnimation:](UIView, "performWithoutAnimation:", v14);

  }
  objc_msgSend(*(id *)(a1 + 40), "setApplyPhase:", 3);
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  v7[2] = sub_6DA08;
  v7[3] = &unk_23F330;
  v4 = *(id *)(a1 + 40);
  v5 = *(_QWORD *)(a1 + 32);
  v8 = v4;
  v9 = v5;
  v10 = *(id *)(a1 + 48);
  v6 = *(_OWORD *)(a1 + 72);
  v11 = *(_OWORD *)(a1 + 56);
  v12 = v6;
  v13 = *(_OWORD *)(a1 + 88);
  +[TUIFeedView performAnimatedFeedUpdates:](TUIFeedView, "performAnimatedFeedUpdates:", v7);

}

void sub_6D8AC(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Unwind_Resume(a1);
}

void sub_6D8D4(uint64_t a1)
{
  void *v2;
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  _QWORD v7[5];
  id v8;

  v2 = *(void **)(a1 + 32);
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 40) + 160), "model"));
  v5 = *(void **)(a1 + 32);
  v4 = *(_QWORD *)(a1 + 40);
  v6 = *(_QWORD *)(v4 + 128);
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  v7[2] = sub_6D990;
  v7[3] = &unk_23F2B8;
  v7[4] = v4;
  v8 = v5;
  objc_msgSend(v2, "performBatchUpdatesWithRenderModel:flags:block:completion:", v3, v6, v7, 0);

}

void sub_6D978(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_6D990(uint64_t a1)
{
  TUIFeedViewInvalidationContext *v2;

  objc_msgSend(*(id *)(a1 + 32), "_applyUpdates:toFeedView:", *(_QWORD *)(a1 + 32) + 32, *(_QWORD *)(a1 + 40));
  v2 = objc_alloc_init(TUIFeedViewInvalidationContext);
  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 160), "applyToContext:");
  objc_msgSend(*(id *)(a1 + 40), "invalidateWithContext:", v2);

}

void sub_6D9F4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_6DA08(uint64_t a1)
{
  void *v2;
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  double MaxY;
  void *v11;
  double v12;
  double v13;
  _QWORD v14[4];
  id v15;
  __int128 v16;
  char v17;
  _QWORD v18[4];
  id v19;
  _QWORD v20[5];
  id v21;

  v2 = *(void **)(a1 + 32);
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 40) + 168), "model"));
  v5 = *(void **)(a1 + 32);
  v4 = *(_QWORD *)(a1 + 40);
  v6 = *(_QWORD *)(v4 + 128);
  v20[0] = _NSConcreteStackBlock;
  v20[1] = 3221225472;
  v20[2] = sub_6DC44;
  v20[3] = &unk_23F2B8;
  v20[4] = v4;
  v21 = v5;
  v18[0] = _NSConcreteStackBlock;
  v18[1] = 3221225472;
  v18[2] = sub_6DCBC;
  v18[3] = &unk_23F2E0;
  v19 = *(id *)(a1 + 48);
  objc_msgSend(v2, "performBatchUpdatesWithRenderModel:flags:block:completion:", v3, v6, v20, v18);

  v7 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 128);
  if ((v7 & 1) != 0)
  {
    if ((v7 & 4) != 0)
    {
      v14[0] = _NSConcreteStackBlock;
      v14[1] = 3221225472;
      v14[2] = sub_6DCD0;
      v14[3] = &unk_23F308;
      v15 = *(id *)(a1 + 32);
      v16 = *(_OWORD *)(a1 + 88);
      v17 = 0;
      +[UIView performWithoutAnimation:](UIView, "performWithoutAnimation:", v14);
      v8 = v15;
    }
    else
    {
      v8 = (void *)objc_claimAutoreleasedReturnValue(+[_TUIAnimationState currentState](_TUIAnimationState, "currentState"));
      v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "customAnimationForContentOffset"));
      if (!v9
        || (MaxY = CGRectGetMaxY(*(CGRect *)(a1 + 56)),
            v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "renderModel")),
            objc_msgSend(v11, "size"),
            v13 = v12,
            v11,
            MaxY > v13))
      {
        objc_msgSend(*(id *)(a1 + 32), "setContentOffset:animated:", 1, *(double *)(a1 + 88), *(double *)(a1 + 96));
      }

    }
  }

}

void sub_6DBD0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,void *a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,void *a28)
{
  void *v28;
  void *v29;

  _Unwind_Resume(a1);
}

void sub_6DC44(uint64_t a1)
{
  TUIFeedViewInvalidationContext *v2;

  objc_msgSend(*(id *)(a1 + 32), "_applyUpdates:toFeedView:", *(_QWORD *)(a1 + 32) + 56, *(_QWORD *)(a1 + 40));
  v2 = objc_alloc_init(TUIFeedViewInvalidationContext);
  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 168), "applyToContext:");
  objc_msgSend(*(id *)(a1 + 40), "invalidateWithContext:", v2);

}

void sub_6DCA8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

uint64_t sub_6DCBC(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 32);
  if (result)
    return (*(uint64_t (**)(void))(result + 16))();
  return result;
}

id sub_6DCD0(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "setContentOffset:animated:", *(unsigned __int8 *)(a1 + 56), *(double *)(a1 + 40), *(double *)(a1 + 48));
}

void sub_6DCE4(uint64_t a1)
{
  TUIFeedViewInvalidationContext *v2;

  objc_msgSend(*(id *)(a1 + 32), "_applyUpdates:toFeedView:", *(_QWORD *)(a1 + 32) + 8, *(_QWORD *)(a1 + 40));
  v2 = objc_alloc_init(TUIFeedViewInvalidationContext);
  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 152), "applyToContext:");
  objc_msgSend(*(id *)(a1 + 40), "invalidateWithContext:", v2);

}

void sub_6DD48(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

uint64_t sub_6DD5C(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 32);
  if (result)
    return (*(uint64_t (**)(void))(result + 16))();
  return result;
}

void sub_6E0A8(uint64_t a1)
{
  void *v1;
  id v2;
  void *v3;
  void *v4;
  void *v5;
  _QWORD v6[3];

  v1 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "superclass"), "supportedAttributes"));
  v2 = objc_msgSend(v1, "mutableCopy");

  v3 = (void *)objc_claimAutoreleasedReturnValue(+[TUIAttributeSet supportedAttributesTextStyling](TUIAttributeSet, "supportedAttributesTextStyling"));
  objc_msgSend(v2, "unionSet:", v3);

  v6[0] = CFSTR("insets");
  v6[1] = CFSTR("text");
  v6[2] = CFSTR("return-key-type");
  v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", v6, 3));
  objc_msgSend(v2, "addAttributesFromArray:", v4);

  v5 = (void *)qword_2CB468;
  qword_2CB468 = (uint64_t)v2;

}

void sub_6E1F8(id a1)
{
  void *v1;
  uint64_t v2;
  void *v3;
  const __CFString *v4;

  v4 = CFSTR("binding");
  v1 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v4, 1));
  v2 = objc_claimAutoreleasedReturnValue(+[TUIAttributeSet setWithArray:](TUIAttributeSet, "setWithArray:", v1));
  v3 = (void *)qword_2CB478;
  qword_2CB478 = v2;

}

void sub_6E8B4(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 128));
  _Unwind_Resume(a1);
}

id sub_6E8D8(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4;
  uint64_t v5;
  id *v6;
  id v7;
  id WeakRetained;
  id v9;
  uint64_t v10;
  id v11;
  void *v12;
  void *v13;

  v4 = *(_QWORD *)(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  v6 = (id *)(a1 + 88);
  v7 = a3;
  WeakRetained = objc_loadWeakRetained(v6);
  v9 = objc_msgSend(WeakRetained, "enabled");
  v10 = *(_QWORD *)(a1 + 48);
  v11 = objc_loadWeakRetained(v6);
  v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "identifier"));
  v13 = (void *)objc_claimAutoreleasedReturnValue(+[TUITextView renderModelWithStates:actionHandler:viewState:enabled:name:identifier:editingInsets:style:placeholderText:text:returnKeyType:keyboardAppearance:](TUITextView, "renderModelWithStates:actionHandler:viewState:enabled:name:identifier:editingInsets:style:placeholderText:text:returnKeyType:keyboardAppearance:", v7, v4, v5, v9, v10, v12, *(double *)(a1 + 96), *(double *)(a1 + 104), *(double *)(a1 + 112), *(double *)(a1 + 120), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 128)));

  return v13;
}

uint64_t sub_6F59C(uint64_t a1)
{
  id WeakRetained;
  void *v3;
  id v4;
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  unsigned int v10;

  WeakRetained = objc_loadWeakRetained((id *)(*(_QWORD *)(a1 + 32) + 40));
  v3 = WeakRetained;
  if (WeakRetained
    && (v4 = objc_msgSend(WeakRetained, "visibleBoundsGeneration"), v5 = *(_QWORD *)(a1 + 32), v4 == *(id *)(v5 + 32)))
  {
    if (*(_BYTE *)(a1 + 40))
      v6 = objc_msgSend(*(id *)(v5 + 88), "windowLowerLoadTriggered");
    else
      v6 = 0;
    if (*(_BYTE *)(a1 + 41))
    {
      v8 = objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 88), "windowLowerUnloadTriggered");
      if (v6)
        v6 = 1;
      else
        v6 = v8;
    }
    if (*(_BYTE *)(a1 + 42))
    {
      v9 = objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 88), "windowUpperLoadTriggered");
      if (v6)
        v6 = 1;
      else
        v6 = v9;
    }
    v7 = v6 != 0;
    if (*(_BYTE *)(a1 + 43))
    {
      v10 = objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 88), "windowUpperUnloadTriggered");
      if (v6)
        v7 = 1;
      else
        v7 = v10;
    }
  }
  else
  {
    v7 = 0;
  }

  return v7;
}

void sub_6F7B8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  id v3;

  v2 = *(_QWORD *)(a1 + 40);
  v3 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 56), "mapData:", a2));
  (*(void (**)(uint64_t, id))(v2 + 16))(v2, v3);

}

void sub_6F8B4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  id v3;

  v2 = *(_QWORD *)(a1 + 40);
  v3 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 56), "mapData:", a2));
  (*(void (**)(uint64_t, id))(v2 + 16))(v2, v3);

}

void sub_71E64(uint64_t a1, void *a2)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  void *v12;
  void *v13;
  void *v14;
  _TUIFeedCaptureSectionLoader *v15;
  void *v16;
  _TUIFeedCaptureSectionLoader *v17;
  id v18;

  v3 = a2;
  v5 = objc_opt_class(NSDictionary, v4);
  v6 = TUIDynamicCast(v5, v3);
  v18 = (id)objc_claimAutoreleasedReturnValue(v6);

  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v18, "objectForKeyedSubscript:", CFSTR("bindings")));
  v9 = objc_opt_class(NSString, v8);
  v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v18, "objectForKeyedSubscript:", CFSTR("template")));
  v11 = TUIDynamicCast(v9, v10);
  v12 = (void *)objc_claimAutoreleasedReturnValue(v11);

  v13 = (void *)objc_claimAutoreleasedReturnValue(+[NSURL URLWithString:relativeToURL:](NSURL, "URLWithString:relativeToURL:", v12, *(_QWORD *)(*(_QWORD *)(a1 + 32) + 56)));
  v14 = (void *)objc_claimAutoreleasedReturnValue(+[TUIFeedEntry feedEntryFromTemplateURL:data:behaviors:](TUIFeedEntry, "feedEntryFromTemplateURL:data:behaviors:", v13, 0, 0));
  v15 = [_TUIFeedCaptureSectionLoader alloc];
  v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v14, "uuid"));
  v17 = -[_TUIFeedCaptureSectionLoader initWithTemplateURL:uuid:bindings:](v15, "initWithTemplateURL:uuid:bindings:", v13, v16, v7);

  objc_msgSend(v14, "setDelegate:", v17);
  objc_msgSend(*(id *)(a1 + 40), "addObject:", v14);
  objc_msgSend(*(id *)(a1 + 48), "addObject:", v17);

}

void sub_72110(uint64_t a1, unint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  void *v13;
  void *v14;
  void *v15;
  id v16;

  if ((unint64_t)objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 72), "count") > a2
    && (unint64_t)objc_msgSend(*(id *)(a1 + 40), "count") > a2)
  {
    v5 = objc_opt_class(NSDictionary, v4);
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "objectAtIndexedSubscript:", a2));
    v7 = TUIDynamicCast(v5, v6);
    v16 = (id)objc_claimAutoreleasedReturnValue(v7);

    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v16, "objectForKeyedSubscript:", CFSTR("bindings")));
    v10 = objc_opt_class(NSString, v9);
    v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v16, "objectForKeyedSubscript:", CFSTR("template")));
    v12 = TUIDynamicCast(v10, v11);
    v13 = (void *)objc_claimAutoreleasedReturnValue(v12);

    v14 = (void *)objc_claimAutoreleasedReturnValue(+[NSURL URLWithString:relativeToURL:](NSURL, "URLWithString:relativeToURL:", v13, *(_QWORD *)(*(_QWORD *)(a1 + 32) + 56)));
    v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 72), "objectAtIndexedSubscript:", a2));
    objc_msgSend(v15, "updateTemplateURL:bindings:", v14, v8);

  }
}

id sub_72DD8(void *a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  void *v11;
  id v12;
  _QWORD v14[4];
  id v15;
  id v16;
  id v17;

  v5 = a2;
  v6 = a3;
  v7 = a1;
  v14[0] = _NSConcreteStackBlock;
  v14[1] = 3221225472;
  v14[2] = sub_7511C;
  v14[3] = &unk_23F5D0;
  v8 = objc_msgSend(objc_alloc((Class)NSMutableDictionary), "initWithCapacity:", objc_msgSend(v7, "count"));
  v15 = v8;
  v16 = v5;
  v17 = v6;
  v9 = v6;
  v10 = v5;
  objc_msgSend(v7, "enumerateKeysAndObjectsUsingBlock:", v14);

  v11 = v17;
  v12 = v8;

  return v12;
}

id sub_72EE0(void *a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  unint64_t v9;
  void *v10;
  void *v11;
  unsigned int v12;
  NSMutableArray *v13;
  void *v14;
  void *v15;

  v3 = a1;
  v4 = a2;
  if (objc_msgSend(v3, "isFileURL") && objc_msgSend(v4, "isFileURL"))
  {
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "standardizedURL"));
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "pathComponents"));

    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "standardizedURL"));
    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "pathComponents"));

    v9 = 0;
    if (objc_msgSend(v6, "count"))
    {
      do
      {
        if (v9 >= (unint64_t)objc_msgSend(v8, "count"))
          break;
        v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "objectAtIndexedSubscript:", v9));
        v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "objectAtIndexedSubscript:", v9));
        v12 = objc_msgSend(v10, "isEqualToString:", v11);

        if (!v12)
          break;
        ++v9;
      }
      while (v9 < (unint64_t)objc_msgSend(v6, "count"));
    }
    v13 = objc_opt_new(NSMutableArray);
    v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "subarrayWithRange:", v9, (char *)objc_msgSend(v6, "count") - v9));
    -[NSMutableArray addObjectsFromArray:](v13, "addObjectsFromArray:", v14);

    while (v9 < (unint64_t)objc_msgSend(v8, "count"))
      -[NSMutableArray insertObject:atIndex:](v13, "insertObject:atIndex:", CFSTR(".."), 0);
    v15 = (void *)objc_claimAutoreleasedReturnValue(-[NSMutableArray componentsJoinedByString:](v13, "componentsJoinedByString:", CFSTR("/")));

  }
  else
  {
    v15 = 0;
  }

  return v15;
}

void sub_73808(uint64_t a1, void *a2)
{
  void *v2;
  id v3;

  v2 = *(void **)(a1 + 32);
  v3 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "dictionaryRepresentation"));
  objc_msgSend(v2, "addObject:", v3);

}

void sub_73A38(uint64_t a1, void *a2)
{
  void *v2;
  void *v3;
  id v4;

  v2 = *(void **)(a1 + 32);
  v4 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "aTemplate"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "package"));
  objc_msgSend(v2, "addObject:", v3);

}

void sub_73D58(uint64_t a1, void *a2)
{
  void *v3;
  _QWORD v4[4];
  id v5;

  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "dynamicStates"));
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_73DD8;
  v4[3] = &unk_23F468;
  v5 = *(id *)(a1 + 32);
  objc_msgSend(v3, "enumerateObjectsUsingBlock:", v4);

}

void sub_73DD8(uint64_t a1, void *a2)
{
  void *v2;
  id v3;

  v2 = *(void **)(a1 + 32);
  v3 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "kind"));
  objc_msgSend(v2, "addObject:", v3);

}

void sub_73E1C(uint64_t a1, void *a2)
{
  void *v3;
  void *v4;
  _QWORD v5[5];
  id v6;

  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "dynamicStates"));
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_73EA4;
  v5[3] = &unk_23F490;
  v4 = *(void **)(a1 + 40);
  v5[4] = *(_QWORD *)(a1 + 32);
  v6 = v4;
  objc_msgSend(v3, "enumerateObjectsUsingBlock:", v5);

}

void sub_73EA4(uint64_t a1, void *a2)
{
  void *v3;
  unsigned int v4;
  void *v5;
  void *v6;
  id v7;
  void *v8;
  void *v9;
  id v10;

  v10 = a2;
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "kind"));
  v4 = objc_msgSend(v3, "isEqualToString:", *(_QWORD *)(a1 + 32));

  if (v4)
  {
    v5 = *(void **)(a1 + 40);
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "instance"));
    v7 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "objectForKeyedSubscript:", v6));

    if (!v7)
    {
      v7 = objc_alloc_init((Class)NSMutableSet);
      v8 = *(void **)(a1 + 40);
      v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "instance"));
      objc_msgSend(v8, "setObject:forKeyedSubscript:", v7, v9);

    }
    objc_msgSend(v7, "addObject:", v10);

  }
}

void sub_73F74(uint64_t a1, uint64_t a2, void *a3)
{
  _QWORD v4[4];
  id v5;

  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_73FE0;
  v4[3] = &unk_23F4E0;
  v5 = *(id *)(a1 + 32);
  objc_msgSend(a3, "enumerateObjectsUsingBlock:", v4);

}

void sub_73FE0(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  id v5;
  void *v6;
  void *v7;
  id v8;
  void *v9;
  NSMutableSet *v10;
  void *v11;
  id v12;
  void *v13;
  void *v14;
  NSMutableDictionary *v15;

  v3 = a2;
  v15 = objc_opt_new(NSMutableDictionary);
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "instance"));
  v5 = sub_74160(v4, 0, 0);
  v6 = (void *)objc_claimAutoreleasedReturnValue(v5);
  -[NSMutableDictionary setObject:forKeyedSubscript:](v15, "setObject:forKeyedSubscript:", v6, CFSTR("instance"));

  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "parameters"));
  v8 = sub_74160(v7, 0, 0);
  v9 = (void *)objc_claimAutoreleasedReturnValue(v8);
  -[NSMutableDictionary setObject:forKeyedSubscript:](v15, "setObject:forKeyedSubscript:", v9, CFSTR("parameters"));

  v10 = objc_opt_new(NSMutableSet);
  v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "value"));

  v12 = sub_74160(v11, v10, CFSTR("value"));
  v13 = (void *)objc_claimAutoreleasedReturnValue(v12);
  -[NSMutableDictionary setObject:forKeyedSubscript:](v15, "setObject:forKeyedSubscript:", v13, CFSTR("value"));

  -[NSMutableSet removeObject:](v10, "removeObject:", CFSTR("value"));
  if (-[NSMutableSet count](v10, "count"))
  {
    v14 = (void *)objc_claimAutoreleasedReturnValue(-[NSMutableSet allObjects](v10, "allObjects"));
    -[NSMutableDictionary setObject:forKeyedSubscript:](v15, "setObject:forKeyedSubscript:", v14, CFSTR("dynamicKeyPaths"));

  }
  objc_msgSend(*(id *)(a1 + 32), "addObject:", v15);

}

id sub_74160(void *a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id v7;
  uint64_t v8;
  id v9;
  _TUIFeedCaptureDynamicObserver *v10;
  void *v11;
  id v12;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  id v18;
  id v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  objc_class *v33;
  NSString *v34;
  void *v35;
  objc_class *v36;
  NSString *v37;
  void *v38;
  _QWORD v39[4];
  id v40;
  id v41;
  uint64_t *v42;
  _QWORD v43[4];
  id v44;
  id v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t (*v50)(uint64_t, uint64_t);
  void (*v51)(uint64_t);
  id v52;

  v5 = a1;
  v6 = a2;
  v7 = a3;
  if (v5)
  {
    if ((objc_opt_respondsToSelector(v5, "instanceForObserver:") & 1) != 0)
    {
      v9 = v5;
      v10 = objc_alloc_init(_TUIFeedCaptureDynamicObserver);
      v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "instanceForObserver:", v10));
      v12 = TUIProtocolCast(&OBJC_PROTOCOL___TUIDynamicArrayInstance, v11);
      v13 = (void *)objc_claimAutoreleasedReturnValue(v12);
      v14 = TUIProtocolCast(&OBJC_PROTOCOL___TUIDynamicValueInstance, v11);
      v15 = objc_claimAutoreleasedReturnValue(v14);
      v17 = (void *)v15;
      if (v13)
      {
        if (v7)
          objc_msgSend(v6, "addObject:", v7);
        v47 = 0;
        v48 = &v47;
        v49 = 0x3032000000;
        v50 = sub_751D0;
        v51 = sub_751E0;
        v52 = 0;
        v18 = objc_msgSend(v13, "count");
        v43[0] = _NSConcreteStackBlock;
        v43[1] = 3221225472;
        v43[2] = sub_751E8;
        v43[3] = &unk_23F5F8;
        v46 = &v47;
        v44 = v6;
        v45 = v7;
        objc_msgSend(v13, "objectsInRange:block:", 0, v18, v43);
        v19 = (id)v48[5];

        v20 = v44;
      }
      else
      {
        if (!v15)
        {
          v33 = (objc_class *)objc_opt_class(v11, v16);
          v34 = NSStringFromClass(v33);
          v35 = (void *)objc_claimAutoreleasedReturnValue(v34);
          v19 = (id)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("invalid dynamic instance -- %@"), v35));

          goto LABEL_17;
        }
        if (v7)
          objc_msgSend(v6, "addObject:", v7);
        v47 = 0;
        v48 = &v47;
        v49 = 0x3032000000;
        v50 = sub_751D0;
        v51 = sub_751E0;
        v52 = 0;
        v39[0] = _NSConcreteStackBlock;
        v39[1] = 3221225472;
        v39[2] = sub_75330;
        v39[3] = &unk_23F620;
        v42 = &v47;
        v40 = v6;
        v41 = v7;
        objc_msgSend(v17, "valueWithBlock:", v39);
        v19 = (id)v48[5];

        v20 = v40;
      }

      _Block_object_dispose(&v47, 8);
LABEL_17:

      goto LABEL_23;
    }
    v21 = objc_opt_class(NSArray, v8);
    if ((objc_opt_isKindOfClass(v5, v21) & 1) != 0)
    {
      v23 = sub_75228(v5, v6, v7);
      v24 = (id)objc_claimAutoreleasedReturnValue(v23);
    }
    else
    {
      v25 = objc_opt_class(NSDictionary, v22);
      if ((objc_opt_isKindOfClass(v5, v25) & 1) != 0)
      {
        v26 = sub_72DD8(v5, v6, v7);
        v24 = (id)objc_claimAutoreleasedReturnValue(v26);
      }
      else
      {
        if (!+[NSJSONSerialization isValidJSONObject:](NSJSONSerialization, "isValidJSONObject:", v5))
        {
          v28 = objc_opt_class(NSString, v27);
          if ((objc_opt_isKindOfClass(v5, v28) & 1) == 0)
          {
            v30 = objc_opt_class(NSNumber, v29);
            if ((objc_opt_isKindOfClass(v5, v30) & 1) == 0)
            {
              v36 = (objc_class *)objc_opt_class(v5, v31);
              v37 = NSStringFromClass(v36);
              v38 = (void *)objc_claimAutoreleasedReturnValue(v37);
              v19 = (id)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("invalid JSON object -- %@"), v38));

              goto LABEL_23;
            }
          }
        }
        v24 = v5;
      }
    }
    v19 = v24;
  }
  else
  {
    v19 = 0;
  }
LABEL_23:

  return v19;
}

void sub_7451C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, ...)
{
  va_list va;

  va_start(va, a16);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_74818(uint64_t a1, void *a2)
{
  void *v3;
  _QWORD v4[4];
  id v5;

  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "imageResources"));
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_74898;
  v4[3] = &unk_23F530;
  v5 = *(id *)(a1 + 32);
  objc_msgSend(v3, "enumerateObjectsUsingBlock:", v4);

}

void sub_74898(uint64_t a1, void *a2)
{
  void *v2;
  id v3;

  v2 = *(void **)(a1 + 32);
  v3 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "kind"));
  objc_msgSend(v2, "addObject:", v3);

}

void sub_748DC(uint64_t a1, void *a2)
{
  void *v3;
  void *v4;
  _QWORD v5[5];
  id v6;

  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "imageResources"));
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_74964;
  v5[3] = &unk_23F558;
  v4 = *(void **)(a1 + 40);
  v5[4] = *(_QWORD *)(a1 + 32);
  v6 = v4;
  objc_msgSend(v3, "enumerateObjectsUsingBlock:", v5);

}

void sub_74964(uint64_t a1, void *a2)
{
  void *v3;
  unsigned int v4;
  void *v5;
  void *v6;
  id v7;
  void *v8;
  void *v9;
  id v10;

  v10 = a2;
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "kind"));
  v4 = objc_msgSend(v3, "isEqualToString:", *(_QWORD *)(a1 + 32));

  if (v4)
  {
    v5 = *(void **)(a1 + 40);
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "instance"));
    v7 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "objectForKeyedSubscript:", v6));

    if (!v7)
    {
      v7 = objc_alloc_init((Class)NSMutableSet);
      v8 = *(void **)(a1 + 40);
      v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "instance"));
      objc_msgSend(v8, "setObject:forKeyedSubscript:", v7, v9);

    }
    objc_msgSend(v7, "addObject:", v10);

  }
}

void sub_74A34(uint64_t a1, uint64_t a2, void *a3)
{
  _QWORD v5[4];
  id v6;
  id v7;

  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_74AB8;
  v5[3] = &unk_23F580;
  v6 = *(id *)(a1 + 32);
  v7 = *(id *)(a1 + 40);
  objc_msgSend(a3, "enumerateObjectsUsingBlock:", v5);

}

void sub_74AB8(uint64_t a1, void *a2)
{
  id v3;
  NSMutableDictionary *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  void *v12;
  double v13;
  double v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  UIImage *v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  void *v30;
  void *v31;
  void *v32;
  uint64_t v33;
  void *v34;
  void *v35;
  NSData *v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  id v40;
  uint64_t v41;
  const __CFString *v42;
  void *v43;
  void *v44;
  void *v45;
  void *v46;
  void *v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  void *v52;
  void *v53;
  void *v54;
  id v55;
  void *v56;
  __CFString *v57;
  void *v58;
  UIImage *v59;
  void *v60;
  uint64_t v61;
  _QWORD v62[4];
  _QWORD v63[4];
  _QWORD v64[2];
  _QWORD v65[2];

  v3 = a2;
  v4 = objc_opt_new(NSMutableDictionary);
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "instance"));
  v6 = sub_74160(v5, 0, 0);
  v7 = (void *)objc_claimAutoreleasedReturnValue(v6);
  -[NSMutableDictionary setObject:forKeyedSubscript:](v4, "setObject:forKeyedSubscript:", v7, CFSTR("instance"));

  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "options"));
  v9 = sub_74160(v8, 0, 0);
  v10 = (void *)objc_claimAutoreleasedReturnValue(v9);
  -[NSMutableDictionary setObject:forKeyedSubscript:](v4, "setObject:forKeyedSubscript:", v10, CFSTR("options"));

  v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "resource"));
  v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "imageContentWithOptions:", 2));

  if ((objc_msgSend(v12, "flags") & 1) == 0)
  {
    objc_msgSend(v12, "intrinsicSize");
    v14 = v13;
    v64[0] = CFSTR("width");
    v15 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](NSNumber, "numberWithDouble:"));
    v64[1] = CFSTR("height");
    v65[0] = v15;
    v16 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](NSNumber, "numberWithDouble:", v14));
    v65[1] = v16;
    v17 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", v65, v64, 2));
    -[NSMutableDictionary setObject:forKeyedSubscript:](v4, "setObject:forKeyedSubscript:", v17, CFSTR("intrinsicSize"));

  }
  v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "resource"));
  v19 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v18, "imageContentWithOptions:", 2));

  v20 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v19, "image"));
  if (v20)
  {
    v21 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v19, "image"));
    v22 = (UIImage *)objc_msgSend(v21, "newImage");

    v60 = v19;
    objc_msgSend(v19, "insets");
    v27 = v26;
    v28 = v24;
    v29 = v25;
    if (v26 != UIEdgeInsetsZero.left
      || v23 != UIEdgeInsetsZero.top
      || v25 != UIEdgeInsetsZero.right
      || v24 != UIEdgeInsetsZero.bottom)
    {
      v62[0] = CFSTR("top");
      v30 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](NSNumber, "numberWithDouble:"));
      v63[0] = v30;
      v62[1] = CFSTR("left");
      v31 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](NSNumber, "numberWithDouble:", v27));
      v63[1] = v31;
      v62[2] = CFSTR("right");
      v32 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](NSNumber, "numberWithDouble:", v29));
      v63[2] = v32;
      v62[3] = CFSTR("bottom");
      v33 = a1;
      v34 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](NSNumber, "numberWithDouble:", v28));
      v63[3] = v34;
      v35 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", v63, v62, 4));
      -[NSMutableDictionary setObject:forKeyedSubscript:](v4, "setObject:forKeyedSubscript:", v35, CFSTR("insets"));

      a1 = v33;
    }
    v59 = v22;
    v36 = UIImagePNGRepresentation(v22);
    v58 = (void *)objc_claimAutoreleasedReturnValue(v36);
    v38 = objc_opt_class(NSString, v37);
    v39 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "instance"));
    v40 = TUIDynamicCast(v38, v39);
    v41 = objc_claimAutoreleasedReturnValue(v40);

    v42 = CFSTR("image");
    if (v41)
      v42 = (const __CFString *)v41;
    v57 = (__CFString *)v42;
    v61 = a1;
    v43 = *(void **)(a1 + 32);
    v44 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "instance"));
    v45 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("%@.png"), v44));
    v46 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v43, "URLByAppendingPathComponent:", v45));

    v47 = (void *)objc_claimAutoreleasedReturnValue(+[NSFileManager defaultManager](NSFileManager, "defaultManager"));
    v48 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v46, "path"));
    LODWORD(v45) = objc_msgSend(v47, "fileExistsAtPath:", v48);

    if ((_DWORD)v45)
    {
      v49 = 1;
      do
      {
        v50 = objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "instance"));
        v51 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("%@-%lu.png"), v50, v49));
        v52 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v46, "URLByAppendingPathComponent:", v51));

        v53 = (void *)objc_claimAutoreleasedReturnValue(+[NSFileManager defaultManager](NSFileManager, "defaultManager"));
        v54 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v52, "path"));
        LOBYTE(v50) = objc_msgSend(v53, "fileExistsAtPath:", v54);

        ++v49;
        v46 = v52;
      }
      while ((v50 & 1) != 0);
    }
    else
    {
      v52 = v46;
    }
    objc_msgSend(v58, "writeToURL:atomically:", v52, 0);
    a1 = v61;
    v55 = sub_72EE0(v52, *(void **)(v61 + 32));
    v56 = (void *)objc_claimAutoreleasedReturnValue(v55);
    -[NSMutableDictionary setObject:forKeyedSubscript:](v4, "setObject:forKeyedSubscript:", v56, CFSTR("url"));

    v19 = v60;
  }

  objc_msgSend(*(id *)(a1 + 40), "addObject:", v4);
}

void sub_7511C(uint64_t a1, void *a2, void *a3)
{
  id v5;
  void *v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  id v11;

  v11 = a2;
  v5 = a3;
  v7 = *(void **)(a1 + 40);
  v6 = *(void **)(a1 + 48);
  if (v6)
    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "stringByAppendingFormat:", CFSTR(".%@"), v11));
  else
    v8 = v11;
  v9 = sub_74160(v5, v7, v8);
  v10 = (void *)objc_claimAutoreleasedReturnValue(v9);
  objc_msgSend(*(id *)(a1 + 32), "setObject:forKeyedSubscript:", v10, v11);

  if (v6)
}

uint64_t sub_751D0(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_751E0(uint64_t a1)
{

}

void sub_751E8(uint64_t a1, void *a2)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;

  v3 = sub_75228(a2, *(void **)(a1 + 32), *(void **)(a1 + 40));
  v4 = objc_claimAutoreleasedReturnValue(v3);
  v5 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
  v6 = *(void **)(v5 + 40);
  *(_QWORD *)(v5 + 40) = v4;

}

id sub_75228(void *a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  void *v11;
  id v12;
  _QWORD v14[4];
  id v15;
  id v16;
  id v17;

  v5 = a2;
  v6 = a3;
  v7 = a1;
  v14[0] = _NSConcreteStackBlock;
  v14[1] = 3221225472;
  v14[2] = sub_75370;
  v14[3] = &unk_23F648;
  v15 = v5;
  v16 = v6;
  v8 = objc_msgSend(objc_alloc((Class)NSMutableArray), "initWithCapacity:", objc_msgSend(v7, "count"));
  v17 = v8;
  v9 = v6;
  v10 = v5;
  objc_msgSend(v7, "enumerateObjectsUsingBlock:", v14);

  v11 = v17;
  v12 = v8;

  return v12;
}

void sub_75330(_QWORD *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;

  v3 = sub_74160(a2, a1[4], a1[5]);
  v4 = objc_claimAutoreleasedReturnValue(v3);
  v5 = *(_QWORD *)(a1[6] + 8);
  v6 = *(void **)(v5 + 40);
  *(_QWORD *)(v5 + 40) = v4;

}

void sub_75370(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  void *v4;
  void *v5;

  v3 = sub_74160(a2, *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40));
  v4 = (void *)objc_claimAutoreleasedReturnValue(v3);
  if (v4)
  {
    v5 = v4;
    objc_msgSend(*(id *)(a1 + 48), "addObject:", v4);
    v4 = v5;
  }

}

void sub_75860(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_7587C(uint64_t a1, void *a2)
{
  id v3;
  id WeakRetained;
  void *v5;
  void *v6;
  void *v7;
  id v8;
  _QWORD v9[2];

  v3 = a2;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  v5 = WeakRetained;
  if (v3 && WeakRetained)
  {
    v6 = *(void **)(a1 + 32);
    v9[0] = WeakRetained;
    v9[1] = v3;
    v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", v9, 2));
    v8 = objc_msgSend(v6, "callWithArguments:", v7);

  }
}

id TUIBundle()
{
  if (qword_2CB490 != -1)
    dispatch_once(&qword_2CB490, &stru_23F690);
  return (id)qword_2CB488;
}

void sub_75A80(id a1)
{
  NSBundle *v1;
  uint64_t v2;
  void *v3;

  v1 = +[NSBundle bundleForClass:](NSBundle, "bundleForClass:", objc_opt_class(TUIBundleClass));
  v2 = objc_claimAutoreleasedReturnValue(v1);
  v3 = (void *)qword_2CB488;
  qword_2CB488 = v2;

}

void sub_75E60(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_75E78(uint64_t a1, void *a2, void *a3)
{
  id v5;
  void *v6;
  void *v7;
  id v8;

  v8 = a2;
  v5 = a3;
  if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24))
    objc_msgSend(*(id *)(a1 + 32), "addObject:", CFSTR(", "));
  objc_msgSend(*(id *)(a1 + 32), "addObject:", v8);
  objc_msgSend(*(id *)(a1 + 32), "addObject:", CFSTR(" = "));
  v6 = *(void **)(a1 + 32);
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "description"));
  objc_msgSend(v6, "addObject:", v7);

  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = 1;
}

void sub_769B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_769C8(uint64_t a1, void *a2, void *a3)
{
  id v5;
  void *v6;
  void *v7;
  id v8;

  v8 = a2;
  v5 = a3;
  if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24))
    objc_msgSend(*(id *)(a1 + 32), "addObject:", CFSTR(", "));
  objc_msgSend(*(id *)(a1 + 32), "addObject:", v8);
  objc_msgSend(*(id *)(a1 + 32), "addObject:", CFSTR(" = "));
  v6 = *(void **)(a1 + 32);
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "description"));
  objc_msgSend(v6, "addObject:", v7);

  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = 1;
}

void sub_77334(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

uint64_t sub_77344(uint64_t *a1, unint64_t a2)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD v7[5];

  v4 = a1[2];
  result = (uint64_t)(a1 + 2);
  if (0x8E38E38E38E38E39 * ((v4 - *a1) >> 3) < a2)
  {
    if (a2 >= 0x38E38E38E38E38FLL)
      sub_6F9C();
    v5 = a1[1] - *a1;
    v7[4] = result;
    v7[0] = sub_78020(result, a2);
    v7[1] = v7[0] + v5;
    v7[2] = v7[0] + v5;
    v7[3] = v7[0] + 72 * v6;
    sub_77FAC(a1, v7);
    return sub_78214((uint64_t)v7);
  }
  return result;
}

void sub_773EC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_78214((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_77C54(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, void *a11)
{
  void *v11;
  void *v12;

  sub_78214((uint64_t)&STACK[0x230]);

  _Unwind_Resume(a1);
}

uint64_t sub_77DA4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;
  char v7;

  if ((uint64_t *)a2 != a3)
  {
    sub_782F0((uint64_t)&v7, a3, *(uint64_t **)(a1 + 8), a2);
    sub_782A0(a1, v5);
  }
  return a2;
}

void sub_77E94(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

uint64_t sub_77FAC(uint64_t *a1, _QWORD *a2)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  result = sub_78068((uint64_t)(a1 + 2), a1[1], a1[1], *a1, *a1, a2[1], a2[1]);
  a2[1] = v5;
  v6 = *a1;
  *a1 = v5;
  a2[1] = v6;
  v7 = a1[1];
  a1[1] = a2[2];
  a2[2] = v7;
  v8 = a1[2];
  a1[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

void *sub_78020(uint64_t a1, unint64_t a2)
{
  if (a2 >= 0x38E38E38E38E38FLL)
    sub_69F8();
  return operator new(72 * a2);
}

uint64_t sub_78068(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  _QWORD v15[3];
  char v16;
  __int128 v17;
  __int128 v18;

  v7 = a7;
  *(_QWORD *)&v18 = a6;
  *((_QWORD *)&v18 + 1) = a7;
  v17 = v18;
  v15[0] = a1;
  v15[1] = &v17;
  v15[2] = &v18;
  if (a3 == a5)
  {
    v13 = a6;
  }
  else
  {
    v8 = a7;
    do
    {
      v9 = *(_OWORD *)(a3 - 72);
      a3 -= 72;
      *(_QWORD *)a3 = 0;
      *(_QWORD *)(a3 + 8) = 0;
      *(_OWORD *)(v8 - 72) = v9;
      v8 -= 72;
      v10 = *(_OWORD *)(a3 + 16);
      v11 = *(_OWORD *)(a3 + 32);
      v12 = *(_OWORD *)(a3 + 48);
      *(_QWORD *)(v8 + 64) = *(_QWORD *)(a3 + 64);
      *(_OWORD *)(v8 + 32) = v11;
      *(_OWORD *)(v8 + 48) = v12;
      *(_OWORD *)(v8 + 16) = v10;
      v7 -= 72;
    }
    while (a3 != a5);
    *((_QWORD *)&v18 + 1) = v8;
    v13 = v18;
  }
  v16 = 1;
  sub_7810C((uint64_t)v15);
  return v13;
}

uint64_t sub_7810C(uint64_t a1)
{
  if (!*(_BYTE *)(a1 + 24))
    sub_78140((uint64_t *)a1);
  return a1;
}

void sub_78140(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE v8[8];
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE v13[8];
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v1 = (uint64_t *)a1[2];
  v3 = *v1;
  v2 = v1[1];
  v14 = v3;
  v15 = v2;
  v16 = v3;
  v17 = v2;
  v4 = *a1;
  v5 = (uint64_t *)a1[1];
  v7 = *v5;
  v6 = v5[1];
  v9 = v7;
  v10 = v6;
  v11 = v7;
  v12 = v6;
  sub_781B4(v4, (uint64_t)v13, (uint64_t)v8);
}

void sub_781B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id *i;

  for (i = *(id **)(a2 + 32); i != *(id **)(a3 + 32); *(_QWORD *)(a2 + 32) = i)
  {

    i = (id *)(*(_QWORD *)(a2 + 32) + 72);
  }
}

uint64_t sub_78214(uint64_t a1)
{
  sub_78248(a1, *(_QWORD *)(a1 + 8));
  if (*(_QWORD *)a1)
    operator delete(*(void **)a1);
  return a1;
}

void sub_78248(uint64_t a1, uint64_t a2)
{
  uint64_t i;

  for (i = *(_QWORD *)(a1 + 16); i != a2; i = *(_QWORD *)(a1 + 16))
  {
    *(_QWORD *)(a1 + 16) = i - 72;

  }
}

void sub_782A0(uint64_t a1, uint64_t a2)
{
  uint64_t i;
  void *v5;

  for (i = *(_QWORD *)(a1 + 8); i != a2; i -= 72)
  {

    v5 = *(void **)(i - 72);
  }
  *(_QWORD *)(a1 + 8) = a2;
}

uint64_t *sub_782F0(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t a4)
{
  uint64_t *v5;
  uint64_t *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;

  v5 = a2;
  if (a2 == a3)
    return a2;
  v6 = a3;
  do
  {
    v7 = *v5;
    *v5 = 0;
    v8 = *(void **)a4;
    *(_QWORD *)a4 = v7;

    v9 = v5[1];
    v5[1] = 0;
    v10 = *(void **)(a4 + 8);
    *(_QWORD *)(a4 + 8) = v9;

    v11 = *((_OWORD *)v5 + 1);
    v12 = *((_OWORD *)v5 + 2);
    v13 = *((_OWORD *)v5 + 3);
    *(_QWORD *)(a4 + 64) = v5[8];
    *(_OWORD *)(a4 + 32) = v12;
    *(_OWORD *)(a4 + 48) = v13;
    *(_OWORD *)(a4 + 16) = v11;
    a4 += 72;
    v5 += 9;
  }
  while (v5 != v6);
  return v6;
}

void sub_78384(void ***a1)
{
  void **v2;

  v2 = *a1;
  if (*v2)
  {
    sub_782A0((uint64_t)v2, (uint64_t)*v2);
    operator delete(**a1);
  }
}

void sub_78948(uint64_t a1, void *a2, uint64_t a3)
{
  void *v5;
  void *v6;
  id v7;

  v7 = a2;
  if (a3)
    objc_msgSend(*(id *)(a1 + 32), "appendString:", CFSTR(", "));
  v5 = *(void **)(a1 + 32);
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "description"));
  objc_msgSend(v5, "appendString:", v6);

}

void sub_78F58(id a1)
{
  void *v1;
  uint64_t v2;
  void *v3;
  const __CFString *v4;

  v4 = CFSTR("n");
  v1 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v4, 1));
  v2 = objc_claimAutoreleasedReturnValue(+[TUIAttributeSet setWithArray:](TUIAttributeSet, "setWithArray:", v1));
  v3 = (void *)qword_2CB498;
  qword_2CB498 = v2;

}

void sub_78FFC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_790C8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_79160(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_791F0(id a1)
{
  void *v1;
  uint64_t v2;
  void *v3;
  const __CFString *v4;

  v4 = CFSTR("n");
  v1 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v4, 1));
  v2 = objc_claimAutoreleasedReturnValue(+[TUIAttributeSet setWithArray:](TUIAttributeSet, "setWithArray:", v1));
  v3 = (void *)qword_2CB4A8;
  qword_2CB4A8 = v2;

}

void sub_79294(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_79360(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_793F8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_79478(id a1)
{
  void *v1;
  uint64_t v2;
  void *v3;
  _QWORD v4[2];

  v4[0] = CFSTR("n");
  v4[1] = CFSTR("v");
  v1 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", v4, 2));
  v2 = objc_claimAutoreleasedReturnValue(+[TUIAttributeSet setWithArray:](TUIAttributeSet, "setWithArray:", v1));
  v3 = (void *)qword_2CB4B8;
  qword_2CB4B8 = v2;

}

void sub_79528(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_795BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_79844(uint64_t a1, void *a2)
{
  void *v3;
  id v4;
  void *v5;
  id WeakRetained;
  id v7;

  v3 = *(void **)(*(_QWORD *)(a1 + 32) + 24);
  v4 = a2;
  v7 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "objectForKey:", v4));
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 32), "objectForKey:", v4));
  WeakRetained = objc_loadWeakRetained((id *)(*(_QWORD *)(a1 + 32) + 8));
  objc_msgSend(WeakRetained, "scrollToItemsMatchingQuery:atScrollPosition:animated:skipVoiceOverFocus:", v4, 1, objc_msgSend(v7, "BOOLValue"), objc_msgSend(v5, "BOOLValue"));

}

void sub_79AB0(id a1)
{
  TUIStarRatingImageCache *v1;
  void *v2;

  v1 = objc_alloc_init(TUIStarRatingImageCache);
  v2 = (void *)qword_2CB4C8;
  qword_2CB4C8 = (uint64_t)v1;

}

double *sub_79E98(double *result)
{
  double *v1;
  unint64_t v2;

  if (*((_QWORD *)result + 5))
  {
    v1 = result;
    v2 = 0;
    do
      result = (double *)objc_msgSend(*((id *)v1 + 4), "drawAtPoint:", floor((v1[10] + v1[12]) * (double)v2++) - v1[7], -v1[6]);
    while (v2 < *((_QWORD *)v1 + 5));
  }
  return result;
}

void sub_7A514(uint64_t a1, void *a2, uint64_t a3, _BYTE *a4)
{
  void *v6;
  double v7;
  double v8;
  void *v9;
  double v10;
  double v11;
  double v12;
  double v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  CGFloat x;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  double MinX;
  double MinY;
  double MaxX;
  double v25;
  double MaxY;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  id v32;
  float v33;
  float v34;
  float v35;
  id v36;
  float v37;
  float v38;
  double v39;
  double v40;
  double v41;
  double v42;
  unint64_t v43;
  int v44;
  int v45;
  unint64_t v46;
  id v50;
  CGRect v51;
  CGRect v52;
  CGRect v53;
  CGRect v54;
  CGRect v55;
  CGRect v56;
  CGRect v57;
  CGRect v58;
  CGRect v59;
  CGRect v60;

  v50 = a2;
  objc_msgSend(*(id *)(a1 + 32), "containingWidth");
  objc_msgSend(v50, "setContainingWidth:");
  objc_msgSend(*(id *)(a1 + 32), "containingHeight");
  objc_msgSend(v50, "setContainingHeight:");
  objc_msgSend(*(id *)(a1 + 32), "flexedWidth");
  objc_msgSend(v50, "setFlexedWidth:");
  objc_msgSend(*(id *)(a1 + 32), "flexedHeight");
  objc_msgSend(v50, "setFlexedHeight:");
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v50, "box"));
  objc_msgSend(v6, "minScale");
  v8 = v7;

  v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v50, "box"));
  objc_msgSend(v9, "maxScale");
  v11 = v10;

  v12 = fmax(v8, 0.01);
  v13 = fmax(v12, fmin(v11, 1.0));
  v14 = (unint64_t)(v13 * 100.0);
  v15 = (unint64_t)(v12 * 100.0);
  v16 = (unint64_t)(v13 * 100.0 + 1.0);
  v17 = 0x7FFFFFFFFFFFFFFFLL;
  do
  {
    objc_msgSend(v50, "setScale:", (double)v14 / 100.0);
    objc_msgSend(v50, "validateLayout");
    objc_msgSend(v50, "computedBoundsWithFlags:", 3);
    x = v51.origin.x;
    y = v51.origin.y;
    width = v51.size.width;
    height = v51.size.height;
    MinX = CGRectGetMinX(v51);
    if (!TUICGFloatIsGreaterThanOrAlmostEqualFloat(MinX, 0.0))
      goto LABEL_13;
    v52.origin.x = x;
    v52.origin.y = y;
    v52.size.width = width;
    v52.size.height = height;
    MinY = CGRectGetMinY(v52);
    if (!TUICGFloatIsGreaterThanOrAlmostEqualFloat(MinY, 0.0))
      goto LABEL_13;
    objc_msgSend(*(id *)(a1 + 32), "containingWidth");
    v53.origin.x = x;
    v53.origin.y = y;
    v53.size.width = width;
    v53.size.height = height;
    MaxX = CGRectGetMaxX(v53);
    objc_msgSend(*(id *)(a1 + 32), "containingWidth");
    if (!TUICGFloatIsLessThanOrAlmostEqualFloat(MaxX, v25))
      goto LABEL_13;
    objc_msgSend(*(id *)(a1 + 32), "containingHeight");
    v54.origin.x = x;
    v54.origin.y = y;
    v54.size.width = width;
    v54.size.height = height;
    MaxY = CGRectGetMaxY(v54);
    objc_msgSend(*(id *)(a1 + 32), "containingHeight");
    if (!TUICGFloatIsLessThanOrAlmostEqualFloat(MaxY, v27))
      goto LABEL_13;
    objc_msgSend(*(id *)(a1 + 32), "flexedWidth");
    v55.origin.x = x;
    v55.origin.y = y;
    v55.size.width = width;
    v55.size.height = height;
    v28 = CGRectGetMaxX(v55);
    objc_msgSend(*(id *)(a1 + 32), "flexedWidth");
    if (!TUICGFloatIsLessThanOrAlmostEqualFloat(v28, v29))
      goto LABEL_13;
    objc_msgSend(*(id *)(a1 + 32), "flexedHeight");
    v56.origin.x = x;
    v56.origin.y = y;
    v56.size.width = width;
    v56.size.height = height;
    v30 = CGRectGetMaxY(v56);
    objc_msgSend(*(id *)(a1 + 32), "flexedHeight");
    if (!TUICGFloatIsLessThanOrAlmostEqualFloat(v30, v31))
      goto LABEL_13;
    v32 = objc_msgSend(*(id *)(a1 + 32), "specifiedWidth");
    v34 = v33;
    v35 = *((float *)&v32 + 1);
    v36 = objc_msgSend(*(id *)(a1 + 32), "specifiedHeight");
    v38 = v37;
    v57.origin.x = x;
    v57.origin.y = y;
    v57.size.width = width;
    v57.size.height = height;
    v39 = CGRectGetMaxX(v57);
    if (!TUICGFloatIsGreaterThanOrAlmostEqualFloat(v39, v35))
      goto LABEL_13;
    v58.origin.x = x;
    v58.origin.y = y;
    v58.size.width = width;
    v58.size.height = height;
    v40 = CGRectGetMaxX(v58);
    if (!TUICGFloatIsLessThanOrAlmostEqualFloat(v40, v34))
      goto LABEL_13;
    v59.origin.x = x;
    v59.origin.y = y;
    v59.size.width = width;
    v59.size.height = height;
    v41 = CGRectGetMaxY(v59);
    if (!TUICGFloatIsGreaterThanOrAlmostEqualFloat(v41, *((float *)&v36 + 1)))
      goto LABEL_13;
    v60.origin.x = x;
    v60.origin.y = y;
    v60.size.width = width;
    v60.size.height = height;
    v42 = CGRectGetMaxY(v60);
    if (TUICGFloatIsLessThanOrAlmostEqualFloat(v42, v38))
    {
      objc_storeStrong((id *)(*(_QWORD *)(a1 + 32) + 112), a2);
      *(_QWORD *)(*(_QWORD *)(a1 + 32) + 104) = a3;
      v43 = v14 + v16 + 1;
      v44 = 1;
      v15 = v14;
      v17 = v14;
    }
    else
    {
LABEL_13:
      v44 = 0;
      v43 = v15 + v14;
      v16 = v14;
    }
    v14 = v43 >> 1;
  }
  while (v43 >> 1 < v16 && v15 < v16);
  if (v17 == 0x7FFFFFFFFFFFFFFFLL)
    v45 = v44;
  else
    v45 = 1;
  if (v45)
    v46 = v17;
  else
    v46 = (unint64_t)(v12 * 100.0);
  if (v46 != 0x7FFFFFFFFFFFFFFFLL && v46 != v14)
  {
    objc_msgSend(v50, "setScale:", (double)v46 / 100.0);
    objc_msgSend(v50, "validateLayout");
  }
  if (v45)
    *a4 = 1;

}

void sub_7AD40(id a1)
{
  void *v1;
  uint64_t v2;
  void *v3;
  const __CFString *v4;

  v4 = CFSTR("binding");
  v1 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v4, 1));
  v2 = objc_claimAutoreleasedReturnValue(+[TUIAttributeSet setWithArray:](TUIAttributeSet, "setWithArray:", v1));
  v3 = (void *)qword_2CB4D8;
  qword_2CB4D8 = v2;

}

void sub_7B3B8(_Unwind_Exception *a1)
{
  id *v1;
  id *v2;
  uint64_t v3;

  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v3 - 96));
  objc_destroyWeak((id *)(v3 - 88));
  _Unwind_Resume(a1);
}

id sub_7B3FC(uint64_t a1, uint64_t a2, void *a3, void *a4, void *a5)
{
  id *v8;
  id WeakRetained;
  void *v10;
  void *v11;
  id v12;
  id v13;
  uint64_t v14;
  id v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  uint64_t v26;
  void *v27;
  void *v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  id v33;
  void *v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  id v41;
  unsigned __int8 v42;
  id v43;
  void *v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  void *v55;

  v8 = (id *)(a1 + 80);
  v54 = a5;
  v53 = a4;
  v52 = a3;
  WeakRetained = objc_loadWeakRetained(v8);
  v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "menuContainer"));
  v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "menuModel"));
  v12 = objc_loadWeakRetained(v8);
  v13 = objc_msgSend(v12, "menuIsPrimary");
  v14 = *(_QWORD *)(a1 + 32);
  v15 = objc_loadWeakRetained((id *)(a1 + 88));
  v55 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "menuWithIsPrimary:actionObject:actionDelegate:", v13, v14, v15));

  v47 = *(_QWORD *)(a1 + 40);
  v46 = *(_QWORD *)(a1 + 48);
  v51 = objc_loadWeakRetained(v8);
  v44 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v51, "linkEntities"));
  v50 = objc_loadWeakRetained(v8);
  v42 = objc_msgSend(v50, "enabled");
  v49 = objc_loadWeakRetained(v8);
  objc_msgSend(v49, "pressedScale");
  v17 = v16;
  v48 = objc_loadWeakRetained(v8);
  objc_msgSend(v48, "touchInsets");
  v19 = v18;
  v21 = v20;
  v23 = v22;
  v25 = v24;
  v45 = objc_loadWeakRetained(v8);
  v26 = objc_claimAutoreleasedReturnValue(objc_msgSend(v45, "identifier"));
  v39 = *(_QWORD *)(a1 + 56);
  v40 = (void *)v26;
  v43 = objc_loadWeakRetained(v8);
  v27 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v43, "pointer"));
  v41 = objc_loadWeakRetained(v8);
  v28 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v41, "focusStyle"));
  v29 = objc_loadWeakRetained(v8);
  LOBYTE(WeakRetained) = objc_msgSend(v29, "menuIsPrimary");
  v30 = *(_QWORD *)(a1 + 64);
  v31 = *(_QWORD *)(a1 + 72);
  v32 = objc_loadWeakRetained(v8);
  LOBYTE(v10) = objc_msgSend(v32, "enableBackgroundForHighlightPreview");
  v33 = objc_loadWeakRetained(v8);
  BYTE1(v38) = objc_msgSend(v33, "enableShadowForHighlightPreview");
  LOBYTE(v38) = (_BYTE)v10;
  LOBYTE(v37) = (_BYTE)WeakRetained;
  LOBYTE(v36) = v42;
  v34 = (void *)objc_claimAutoreleasedReturnValue(+[TUIControlView renderModelWithStateToButtonAttributes:stateToRenderModel:imageModelIDToResource:actionHandler:viewState:linkEntities:type:role:userInterfaceStyle:enabled:pressScale:touchInsets:identifier:style:pointer:focusStyle:menu:contextMenuIsPrimaryAction:name:axAttributes:enableBackgroundForHighlightPreview:enableShadowForHighlightPreview:](TUIControlView, "renderModelWithStateToButtonAttributes:stateToRenderModel:imageModelIDToResource:actionHandler:viewState:linkEntities:type:role:userInterfaceStyle:enabled:pressScale:touchInsets:identifier:style:pointer:focusStyle:menu:contextMenuIsPrimaryAction:name:axAttributes:enableBackgroundForHighlightPreview:enableShadowForHighlightPreview:", 0, v52, v53, v47, v46, v44, v17, v19, v21, v23, v25, 0, 0,
                    0,
                    v36,
                    v40,
                    v39,
                    v27,
                    v28,
                    v55,
                    v37,
                    v30,
                    v31,
                    v38));

  objc_msgSend(v34, "setAnimationGroups:", v54);
  return v34;
}

const __CFString *NSStringFromTUITriggerState(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 2)
    return CFSTR("unknown");
  else
    return off_23FF68[a1 - 1];
}

id sub_7C78C(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_removeAssertion:", *(_QWORD *)(a1 + 40));
}

void sub_7C8C8(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint8_t *a5)
{
  _os_log_debug_impl(a1, a2, OS_LOG_TYPE_DEBUG, a4, a5, 2u);
}

void sub_7CDDC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_7CE00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(WeakRetained, "_updateVisible:", a3);

}

void sub_7DA10(uint64_t a1, void *a2)
{
  id v3;

  v3 = a2;
  if ((objc_opt_respondsToSelector(v3, "appendObjectsWithProtocol:toArray:") & 1) != 0)
    objc_msgSend(v3, "appendObjectsWithProtocol:toArray:", *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40));

}

void sub_7DB3C(id a1, TUIModel *a2, unint64_t a3, BOOL *a4)
{
  -[TUIModel setParentModel:](a2, "setParentModel:", 0, a4);
}

id sub_7DB48(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "setParentModel:", *(_QWORD *)(a1 + 32));
}

id sub_7DBE0(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "appendLayoutModelsToArray:", *(_QWORD *)(a1 + 32));
}

id sub_7DCE4(uint64_t a1)
{
  id WeakRetained;
  id v3;

  WeakRetained = objc_loadWeakRetained((id *)(*(_QWORD *)(a1 + 32) + 56));
  v3 = objc_msgSend(WeakRetained, "invalidateInstantiation:", *(_QWORD *)(a1 + 32));

  return v3;
}

void sub_7DE3C(_QWORD *a1, void *a2)
{
  uint64_t v4;
  void *v5;
  unint64_t v6;
  id v7;
  uint64_t v8;
  void *v9;
  _QWORD v10[5];
  id v11;
  id v12;
  uint64_t v13;
  unint64_t v14;

  v10[0] = _NSConcreteStackBlock;
  v10[2] = sub_7DEDC;
  v10[3] = &unk_23FFE0;
  v4 = a1[4];
  v5 = (void *)a1[5];
  v6 = *(_QWORD *)(v4 + 80) & 0xFFFFFFFFFFFFFFFDLL;
  v10[1] = 3221225472;
  v10[4] = v4;
  v7 = v5;
  v9 = (void *)a1[6];
  v8 = a1[7];
  v11 = v7;
  v13 = v8;
  v14 = v6;
  v12 = v9;
  objc_msgSend(a2, "enumerateObjectsUsingBlock:", v10);

}

void sub_7DEDC(uint64_t a1, void *a2, uint64_t a3)
{
  id v5;
  _BOOL4 v6;
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  _TUIDynamicArrayItem *v16;

  v5 = a2;
  v16 = objc_opt_new(_TUIDynamicArrayItem);
  v6 = TUIEnumeratorNotNil(*(_DWORD *)(*(_QWORD *)(a1 + 32) + 16));
  v7 = objc_alloc_init(*(Class *)(*(_QWORD *)(a1 + 32) + 64));
  v9 = *(_QWORD *)(a1 + 32);
  v8 = *(void **)(a1 + 40);
  v10 = *(_QWORD *)(a1 + 56);
  v11 = objc_msgSend(*(id *)(v9 + 72), "uniqueID");
  v12 = *(_QWORD *)(a1 + 64);
  v13 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 20);
  if (v6)
    v14 = objc_msgSend(v8, "evaluateEnumerator:withObject:atIndex:count:uniqueID:nodes:flags:containingObject:builder:", *(unsigned int *)(v9 + 16), v5, a3, v10, v11, v13, v12, v16, v7);
  else
    v14 = objc_msgSend(v8, "evaluateBinding:withObject:atIndex:count:uniqueID:nodes:flags:containingObject:builder:", *(unsigned int *)(v9 + 28), v5, a3, v10, v11, v13, v12, v16, v7);
  v15 = v14;

  objc_msgSend(v7, "finalizeModelsWithParent:context:", v16, *(_QWORD *)(a1 + 40));
  -[_TUIDynamicArrayItem setInstantiateResult:](v16, "setInstantiateResult:", v15);
  objc_msgSend(*(id *)(a1 + 48), "addObject:", v16);

}

void sub_7E184(uint64_t a1)
{
  __int128 v2;
  uint64_t v3;
  id v4;
  id v5;
  id v6;
  BOOL v7;
  unint64_t v8;
  uint64_t *v9;
  unint64_t v10;
  void *v11;
  uint64_t v12;
  id v13;
  id v14;
  id v15;
  unint64_t v16;
  uint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  void *v20;
  uint64_t v21;
  id v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  void *v27;
  void *v28;
  uint64_t v29;
  id v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  void *v39;
  void *v40;
  BOOL v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  char *v45;
  unint64_t v46;
  TUIIndexMapper *v47;
  uint64_t v48;
  void *v49;
  uint64_t v50;
  id v51;
  TUIIndexMapper *v52;
  unsigned int v53;
  char v54;
  void *v55;
  char *v56;
  _QWORD *v57;
  void *v58;
  id v59;
  char *v60;
  char *v61;
  char *v62;
  char *v63;
  id v64;
  void *v65;
  uint64_t v66;
  unint64_t v67;
  void *v68;
  void *v69;
  unint64_t v70;
  char *v71;
  id v72;
  uint64_t v73;
  char *v74;
  char *v75;
  char *v76;
  uint64_t v77;
  char *v78;
  BOOL v79;
  BOOL v80;
  uint64_t v81;
  id v82;
  void *v83;
  uint64_t v84;
  uint64_t v85;
  TUIIndexMapper *v86;
  id v87;
  void *v88;
  id v89;
  id v90;
  id v91;
  NSObject *v92;
  void *v93;
  id v94;
  id v95;
  uint64_t v96;
  id v97;
  NSString *v98;
  id v99;
  id v100;
  __int128 v101;
  BOOL v102;
  id v103;
  char *v104;
  _QWORD v105[4];
  id v106;
  id v107;
  uint64_t v108;
  id v109;
  char *v110;
  _QWORD v111[5];
  TUIIndexMapper *v112;
  id v113;
  uint64_t *v114;
  uint64_t v115;
  char *v116;
  id v117;
  uint64_t v118;
  uint64_t *v119;
  uint64_t v120;
  uint64_t (*v121)(uint64_t, uint64_t);
  void (*v122)(uint64_t);
  id v123;
  _QWORD v124[5];
  id v125;
  id v126;
  TUIIndexMapper *v127;
  id v128;
  BOOL v129;
  _QWORD v130[5];
  id v131;
  id v132;
  uint64_t v133;
  unint64_t v134;
  _QWORD v135[5];
  id v136;
  id v137;
  uint64_t v138;
  unint64_t v139;
  uint8_t buf[4];
  id v141;
  __int16 v142;
  id v143;
  __int16 v144;
  id v145;

  v103 = objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 8), "mutableCopy");
  if (!v103)
    v103 = objc_alloc_init((Class)NSMutableArray);
  v3 = *(_QWORD *)(a1 + 32);
  if (*(_BYTE *)(a1 + 64))
  {
    if ((*(_BYTE *)(v3 + 104) & 4) != 0)
    {
      v4 = objc_msgSend(*(id *)(v3 + 72), "fetchWindow");
      v3 = *(_QWORD *)(a1 + 32);
      if (v4 != (id)0x7FFFFFFFFFFFFFFFLL)
      {
        v5 = objc_msgSend(*(id *)(v3 + 72), "fetchWindow");
        v3 = *(_QWORD *)(a1 + 32);
        if ((unint64_t)v5 < *(_QWORD *)(v3 + 96))
        {
          v6 = objc_msgSend(*(id *)(v3 + 72), "fetchDelta");
          if (v6)
            v7 = v6 == (id)0x7FFFFFFFFFFFFFFFLL;
          else
            v7 = 1;
          if (v7)
            v8 = 1;
          else
            v8 = (unint64_t)v6;
          v9 = (uint64_t *)(a1 + 32);
          if (v8 >= *(_QWORD *)(*(_QWORD *)(a1 + 32) + 96))
            v10 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 96);
          else
            v10 = v8;
          objc_msgSend(v103, "removeObjectsInRange:", 0, v10);
          *(_QWORD *)(*v9 + 96) -= v10;
          *(_QWORD *)(*v9 + 88) += v10;
          v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "statsCollector"));
          objc_msgSend(v11, "recordEvent:", 21);

          v3 = *v9;
        }
      }
    }
  }
  *(_BYTE *)(v3 + 104) &= ~4u;
  v12 = *(_QWORD *)(a1 + 32);
  if (*(_BYTE *)(a1 + 64))
  {
    if ((*(_BYTE *)(v12 + 104) & 8) != 0)
    {
      v13 = objc_msgSend(*(id *)(v12 + 72), "fetchWindow");
      v12 = *(_QWORD *)(a1 + 32);
      if (v13 != (id)0x7FFFFFFFFFFFFFFFLL)
      {
        v14 = objc_msgSend(*(id *)(v12 + 72), "fetchWindow");
        v12 = *(_QWORD *)(a1 + 32);
        if ((unint64_t)v14 < *(_QWORD *)(v12 + 96))
        {
          v15 = objc_msgSend(*(id *)(v12 + 72), "fetchDelta");
          if (v15 == (id)0x7FFFFFFFFFFFFFFFLL)
            v16 = 1;
          else
            v16 = (unint64_t)v15;
          v17 = (uint64_t *)(a1 + 32);
          v18 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 96);
          if (v16 >= v18)
            v19 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 96);
          else
            v19 = v16;
          objc_msgSend(v103, "removeObjectsInRange:", v18 - v19, v19);
          *(_QWORD *)(*v17 + 96) -= v19;
          v20 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "statsCollector"));
          objc_msgSend(v20, "recordEvent:", 23);

          v12 = *v17;
        }
      }
    }
  }
  *(_BYTE *)(v12 + 104) &= ~8u;
  v21 = *(_QWORD *)(a1 + 32);
  if (*(_BYTE *)(a1 + 64) && (*(_BYTE *)(v21 + 104) & 1) != 0)
  {
    v22 = objc_msgSend(*(id *)(v21 + 72), "fetchDelta");
    v23 = (unint64_t)((unint64_t)v22 <= 1 ? &dword_0 + 1 : v22);
    v21 = *(_QWORD *)(a1 + 32);
    v24 = *(_QWORD *)(v21 + 88);
    if (v24)
    {
      if (v23 != 0x7FFFFFFFFFFFFFFFLL)
      {
        if (v24 >= v23)
          v25 = v24 - v23;
        else
          v25 = 0;
        if (v24 >= v23)
          v26 = v23;
        else
          v26 = *(_QWORD *)(v21 + 88);
        if (v26)
        {
          v27 = *(void **)(v21 + 32);
          v135[0] = _NSConcreteStackBlock;
          v135[1] = 3221225472;
          v135[2] = sub_7ED10;
          v135[3] = &unk_240030;
          v135[4] = v21;
          v136 = *(id *)(a1 + 40);
          v138 = v25;
          v139 = v26;
          v137 = v103;
          objc_msgSend(v27, "objectsInRange:block:", v25, v26, v135);
          *(_QWORD *)(*(_QWORD *)(a1 + 32) + 88) = v25;
          *(_QWORD *)(*(_QWORD *)(a1 + 32) + 96) += v26;

        }
        v28 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "statsCollector"));
        objc_msgSend(v28, "recordEvent:", 20);

        v21 = *(_QWORD *)(a1 + 32);
      }
    }
  }
  *(_BYTE *)(v21 + 104) &= ~1u;
  v29 = *(_QWORD *)(a1 + 32);
  if (*(_BYTE *)(a1 + 64) && (*(_BYTE *)(v29 + 104) & 2) != 0)
  {
    v30 = objc_msgSend(*(id *)(v29 + 72), "fetchDelta");
    v31 = (unint64_t)((unint64_t)v30 <= 1 ? &dword_0 + 1 : v30);
    v32 = *(_QWORD *)(a1 + 32);
    v33 = *(_QWORD *)(v32 + 96) + *(_QWORD *)(v32 + 88);
    v34 = objc_msgSend(*(id *)(v32 + 32), "count");
    v29 = *(_QWORD *)(a1 + 32);
    if (v33 < (unint64_t)v34 && v31 != 0x7FFFFFFFFFFFFFFFLL)
    {
      v35 = *(_QWORD *)(v29 + 88);
      v36 = *(_QWORD *)(v29 + 96);
      v37 = (char *)objc_msgSend(*(id *)(v29 + 32), "count");
      v29 = *(_QWORD *)(a1 + 32);
      if (v31 >= (unint64_t)&v37[-*(_QWORD *)(v29 + 88) - *(_QWORD *)(v29 + 96)])
        v31 = (unint64_t)&v37[-*(_QWORD *)(v29 + 88) - *(_QWORD *)(v29 + 96)];
      if (v31)
      {
        v38 = v36 + v35;
        v39 = *(void **)(v29 + 32);
        v130[0] = _NSConcreteStackBlock;
        v130[1] = 3221225472;
        v130[2] = sub_7EE9C;
        v130[3] = &unk_240030;
        v130[4] = v29;
        v131 = *(id *)(a1 + 40);
        v133 = v38;
        v134 = v31;
        v132 = v103;
        objc_msgSend(v39, "objectsInRange:block:", v38, v31, v130);
        *(_QWORD *)(*(_QWORD *)(a1 + 32) + 96) += v31;
        v40 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "statsCollector"));
        objc_msgSend(v40, "recordEvent:", 22);

        v29 = *(_QWORD *)(a1 + 32);
      }
    }
  }
  *(_BYTE *)(v29 + 104) &= ~2u;
  if (*(_BYTE *)(a1 + 64)
    && objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 72), "fetchWindow") != (id)0x7FFFFFFFFFFFFFFFLL)
  {
    v42 = *(_QWORD *)(a1 + 32);
    v43 = *(_QWORD *)(v42 + 96);
    v41 = v43 < (unint64_t)objc_msgSend(*(id *)(v42 + 72), "fetchWindow");
  }
  else
  {
    v41 = 1;
  }
  v102 = v41;
  *(_QWORD *)&v2 = 134218498;
  v101 = v2;
  while (1)
  {
    v44 = *(_QWORD *)(a1 + 32);
    v46 = *(_QWORD *)(v44 + 88);
    v45 = *(char **)(v44 + 96);
    v104 = (char *)objc_msgSend(*(id *)(v44 + 32), "count", v101);
    v47 = -[TUIIndexMapper initWithCount:]([TUIIndexMapper alloc], "initWithCount:", objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 32), "count"));
    v48 = *(_QWORD *)(a1 + 32);
    v49 = *(void **)(v48 + 32);
    v50 = *(_QWORD *)(a1 + 48);
    v124[0] = _NSConcreteStackBlock;
    v124[1] = 3221225472;
    v124[2] = sub_7F024;
    v124[3] = &unk_240058;
    v124[4] = v48;
    v129 = v102;
    v51 = v103;
    v125 = v51;
    v126 = *(id *)(a1 + 40);
    v52 = v47;
    v127 = v52;
    v128 = *(id *)(a1 + 56);
    v53 = objc_msgSend(v49, "applyUpdatesForTransactionGroup:withBlock:", v50, v124);
    v54 = v53;
    if (!v53)
      break;
    v55 = (void *)objc_claimAutoreleasedReturnValue(-[TUIIndexMapper fetchIndexes](v52, "fetchIndexes"));
    v56 = (char *)objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 32), "count");
    v118 = 0;
    v119 = &v118;
    v120 = 0x3032000000;
    v121 = sub_7F3AC;
    v122 = sub_7F3BC;
    v123 = 0;
    v57 = *(_QWORD **)(a1 + 32);
    v58 = (void *)v57[9];
    if (v58)
    {
      v59 = objc_msgSend(v58, "fetchWindow");
      v57 = *(_QWORD **)(a1 + 32);
      if ((v59 != (id)0x7FFFFFFFFFFFFFFFLL || v56 < v104) && (v46 != v57[11] || v45 != (char *)v57[12]))
      {
        v60 = (char *)(v56 - v45);
        if (v46 < &v45[v46] - v56)
          v60 = 0;
        if (&v45[v46] <= v56)
          v61 = (char *)v46;
        else
          v61 = v60;
        if (&v45[(_QWORD)v61] <= v56)
          v62 = v45;
        else
          v62 = v56;
        if (&v45[(_QWORD)v61] <= v56)
          v63 = v61;
        else
          v63 = 0;
        v64 = objc_msgSend(v55, "mutableCopy");
        v65 = (void *)v119[5];
        v119[5] = (uint64_t)v64;

        while (1)
        {
          v66 = *(_QWORD *)(a1 + 32);
          v67 = *(_QWORD *)(v66 + 88);
          if ((unint64_t)v63 >= v67 || *(_QWORD *)(v66 + 96) + v67 >= (unint64_t)v56)
            break;
          v68 = (void *)objc_claimAutoreleasedReturnValue(+[NSNull null](NSNull, "null"));
          objc_msgSend(v51, "insertObject:atIndex:", v68, 0);

          --*(_QWORD *)(*(_QWORD *)(a1 + 32) + 88);
          ++*(_QWORD *)(*(_QWORD *)(a1 + 32) + 96);
          objc_msgSend((id)v119[5], "addIndex:", *(_QWORD *)(*(_QWORD *)(a1 + 32) + 88));
        }
        while (v67 < (unint64_t)v63 && *(_QWORD *)(v66 + 96))
        {
          objc_msgSend(v51, "removeObjectAtIndex:", 0);
          ++*(_QWORD *)(*(_QWORD *)(a1 + 32) + 88);
          --*(_QWORD *)(*(_QWORD *)(a1 + 32) + 96);
          v66 = *(_QWORD *)(a1 + 32);
          v67 = *(_QWORD *)(v66 + 88);
        }
        while (1)
        {
          v70 = *(_QWORD *)(v66 + 96);
          if (v70 >= (unint64_t)v62 || *(_QWORD *)(v66 + 88) + v70 >= (unint64_t)v56)
            break;
          v69 = (void *)objc_claimAutoreleasedReturnValue(+[NSNull null](NSNull, "null"));
          objc_msgSend(v51, "addObject:", v69);

          objc_msgSend((id)v119[5], "addIndex:", *(_QWORD *)(*(_QWORD *)(a1 + 32) + 96) + *(_QWORD *)(*(_QWORD *)(a1 + 32) + 88));
          ++*(_QWORD *)(*(_QWORD *)(a1 + 32) + 96);
          v66 = *(_QWORD *)(a1 + 32);
        }
        v71 = (char *)objc_msgSend(*(id *)(v66 + 72), "fetchWindow");
        if (v71 != (char *)0x7FFFFFFFFFFFFFFFLL)
        {
          v72 = objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 72), "fetchDelta");
          if ((unint64_t)v72 <= 1)
            v73 = 1;
          else
            v73 = (uint64_t)v72;
          v74 = &v71[2 * v73];
          if (v71 <= v62)
            v75 = v62;
          else
            v75 = v71;
          if (v74 >= v75)
            v62 = v75;
          else
            v62 = v74;
        }
        v57 = *(_QWORD **)(a1 + 32);
        if (v62 >= &v56[-v57[11]])
          v76 = &v56[-v57[11]];
        else
          v76 = v62;
        for (; v57[12] > (unint64_t)v76; v57 = *(_QWORD **)(a1 + 32))
        {
          objc_msgSend(v51, "removeLastObject");
          --*(_QWORD *)(*(_QWORD *)(a1 + 32) + 96);
        }
      }
    }
    v77 = v57[11];
    v78 = (char *)v57[12];
    if (v78)
    {
      if (v77)
        v79 = 0;
      else
        v79 = v78 == v56;
      if (!v79)
        goto LABEL_114;
    }
    else
    {
      if (v77)
        v80 = v77 == 0x7FFFFFFFFFFFFFFFLL;
      else
        v80 = 1;
      if (!v80)
      {
LABEL_114:
        if (v119[5])
        {
          if (v77)
            goto LABEL_116;
LABEL_118:
          v81 = 0;
        }
        else
        {
          v82 = objc_msgSend(v55, "mutableCopy");
          v83 = (void *)v119[5];
          v119[5] = (uint64_t)v82;

          v57 = *(_QWORD **)(a1 + 32);
          if (!v57[11])
            goto LABEL_118;
LABEL_116:
          objc_msgSend((id)v119[5], "removeIndexesInRange:", 0);
          v57 = *(_QWORD **)(a1 + 32);
          v81 = v57[11];
        }
        if ((unint64_t)v56 > v57[12] + v81)
          objc_msgSend((id)v119[5], "removeIndexesInRange:");
      }
    }
    v84 = objc_opt_class(NSNull);
    v111[0] = _NSConcreteStackBlock;
    v111[1] = 3221225472;
    v111[2] = sub_7F3C4;
    v111[3] = &unk_240080;
    v85 = *(_QWORD *)(a1 + 32);
    v115 = v84;
    v111[4] = v85;
    v86 = v52;
    v116 = v56;
    v117 = v104;
    v112 = v86;
    v114 = &v118;
    v87 = v55;
    v113 = v87;
    objc_msgSend(v51, "enumerateObjectsUsingBlock:", v111);
    v88 = (void *)v119[5];
    if (v88)
    {
      v89 = objc_msgSend(v88, "copy");

      v87 = v89;
    }
    v90 = *(id *)(*(_QWORD *)(a1 + 32) + 96);
    if (v90 != objc_msgSend(v51, "count"))
    {
      v91 = TUIInstantiationLog();
      v92 = objc_claimAutoreleasedReturnValue(v91);
      if (os_log_type_enabled(v92, OS_LOG_TYPE_ERROR))
      {
        v97 = objc_msgSend(*(id *)(a1 + 40), "feedId");
        v98 = NSStringFromRange(*(NSRange *)(*(_QWORD *)(a1 + 32) + 88));
        v99 = (id)objc_claimAutoreleasedReturnValue(v98);
        v100 = objc_msgSend(v51, "count");
        *(_DWORD *)buf = v101;
        v141 = v97;
        v142 = 2114;
        v143 = v99;
        v144 = 2048;
        v145 = v100;
        _os_log_error_impl(&dword_0, v92, OS_LOG_TYPE_ERROR, "[fid:%lu] instantiateWindow %{public}@ has different length than children %lu", buf, 0x20u);

      }
      if (_TUIDeviceHasInternalInstall())
        objc_exception_throw(objc_msgSend(objc_alloc((Class)NSException), "initWithName:reason:userInfo:", CFSTR("InstatiateWindowAndChildrenMismatch"), CFSTR("The instantiateWindow and children has mismatching length"), 0));
    }
    v93 = *(void **)(*(_QWORD *)(a1 + 32) + 32);
    v105[0] = _NSConcreteStackBlock;
    v105[1] = 3221225472;
    v105[2] = sub_7F504;
    v105[3] = &unk_2400D0;
    v94 = v87;
    v106 = v94;
    v95 = *(id *)(a1 + 40);
    v96 = *(_QWORD *)(a1 + 32);
    v107 = v95;
    v108 = v96;
    v110 = v56;
    v109 = v51;
    objc_msgSend(v93, "objectsAtIndexes:block:", v94, v105);

    _Block_object_dispose(&v118, 8);
    if ((v54 & 1) == 0)
      goto LABEL_130;
  }

LABEL_130:
  objc_msgSend(*(id *)(a1 + 32), "updateModelChildren:", v51);
  objc_msgSend(*(id *)(a1 + 56), "layoutUpdateWindowRange:", *(_QWORD *)(*(_QWORD *)(a1 + 32) + 88), *(_QWORD *)(*(_QWORD *)(a1 + 32) + 96));

}

void sub_7ECC0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,char a35)
{
  _Block_object_dispose(&a35, 8);
  _Unwind_Resume(a1);
}

void sub_7ED10(uint64_t a1, void *a2)
{
  void *v4;
  _QWORD v5[5];
  id v6;
  id v7;
  __int128 v8;

  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_7EDA4;
  v5[3] = &unk_23FFE0;
  v4 = *(void **)(a1 + 40);
  v5[4] = *(_QWORD *)(a1 + 32);
  v6 = v4;
  v8 = *(_OWORD *)(a1 + 56);
  v7 = *(id *)(a1 + 48);
  objc_msgSend(a2, "enumerateObjectsUsingBlock:", v5);

}

void sub_7EDA4(uint64_t a1, void *a2, uint64_t a3)
{
  id v5;
  id v6;
  id v7;
  _TUIDynamicArrayItem *v8;

  v5 = a2;
  v8 = objc_opt_new(_TUIDynamicArrayItem);
  v6 = objc_alloc_init(*(Class *)(*(_QWORD *)(a1 + 32) + 64));
  v7 = objc_msgSend(*(id *)(a1 + 40), "evaluateEnumerator:withObject:atIndex:count:uniqueID:nodes:flags:containingObject:builder:", *(unsigned int *)(*(_QWORD *)(a1 + 32) + 16), v5, *(_QWORD *)(a1 + 56) + a3, *(_QWORD *)(a1 + 64) + *(_QWORD *)(*(_QWORD *)(a1 + 32) + 96), objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 72), "uniqueID"), *(_QWORD *)(*(_QWORD *)(a1 + 32) + 20), *(_QWORD *)(*(_QWORD *)(a1 + 32) + 80), v8, v6);

  objc_msgSend(v6, "finalizeModelsWithParent:context:", v8, *(_QWORD *)(a1 + 40));
  -[_TUIDynamicArrayItem setInstantiateResult:](v8, "setInstantiateResult:", v7);
  objc_msgSend(*(id *)(a1 + 48), "insertObject:atIndex:", v8, a3);

}

void sub_7EE9C(uint64_t a1, void *a2)
{
  void *v4;
  _QWORD v5[5];
  id v6;
  id v7;
  __int128 v8;

  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_7EF30;
  v5[3] = &unk_23FFE0;
  v4 = *(void **)(a1 + 40);
  v5[4] = *(_QWORD *)(a1 + 32);
  v6 = v4;
  v8 = *(_OWORD *)(a1 + 56);
  v7 = *(id *)(a1 + 48);
  objc_msgSend(a2, "enumerateObjectsUsingBlock:", v5);

}

void sub_7EF30(uint64_t a1, void *a2, uint64_t a3)
{
  id v5;
  id v6;
  id v7;
  _TUIDynamicArrayItem *v8;

  v5 = a2;
  v8 = objc_opt_new(_TUIDynamicArrayItem);
  v6 = objc_alloc_init(*(Class *)(*(_QWORD *)(a1 + 32) + 64));
  v7 = objc_msgSend(*(id *)(a1 + 40), "evaluateEnumerator:withObject:atIndex:count:uniqueID:nodes:flags:containingObject:builder:", *(unsigned int *)(*(_QWORD *)(a1 + 32) + 16), v5, *(_QWORD *)(a1 + 56) + a3, *(_QWORD *)(a1 + 64) + *(_QWORD *)(*(_QWORD *)(a1 + 32) + 96), objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 72), "uniqueID"), *(_QWORD *)(*(_QWORD *)(a1 + 32) + 20), *(_QWORD *)(*(_QWORD *)(a1 + 32) + 80), v8, v6);

  objc_msgSend(v6, "finalizeModelsWithParent:context:", v8, *(_QWORD *)(a1 + 40));
  -[_TUIDynamicArrayItem setInstantiateResult:](v8, "setInstantiateResult:", v7);
  objc_msgSend(*(id *)(a1 + 48), "addObject:", v8);

}

id *sub_7F024(id *result, uint64_t a2, uint64_t a3, unint64_t a4)
{
  id *v6;
  _QWORD *v7;
  unint64_t v8;
  unint64_t v9;
  BOOL v10;
  unint64_t v11;
  BOOL v12;
  char *v13;
  _QWORD *v14;
  unint64_t v15;
  unint64_t v16;
  char *v17;
  id v19;
  void *v20;
  void *v21;
  char *v22;
  char *v23;
  _QWORD *v24;
  unint64_t v25;
  _BOOL4 v27;
  uint64_t v28;
  char *v29;
  char *v30;
  _QWORD *v31;
  unint64_t v32;
  id v34;
  void *v35;
  void *v36;
  void *v37;
  _QWORD *v38;
  unint64_t v39;
  unint64_t v40;
  BOOL v41;
  id v42;
  void *v43;
  void *v44;

  v6 = result;
  switch(a2)
  {
    case 0:
      v7 = result[4];
      v8 = v7[11];
      v9 = v7[12];
      v10 = a4 < v8 || a4 - v8 >= v9;
      if (!v10 || ((v11 = v9 + v8, *((_BYTE *)result + 72)) ? (v12 = v11 == a4) : (v12 = 0), v12))
      {
        v34 = result[5];
        v35 = (void *)objc_claimAutoreleasedReturnValue(+[NSNull null](NSNull, "null"));
        objc_msgSend(v34, "insertObject:atIndex:", v35, a4 - *((_QWORD *)v6[4] + 11));

        ++*((_QWORD *)v6[4] + 12);
        v36 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6[6], "statsCollector"));
        objc_msgSend(v36, "recordEvent:", 25);

      }
      else if (a4 < v8)
      {
        v7[11] = v8 + 1;
      }
      objc_msgSend(v6[7], "insertAtIndex:", a4);
      return (id *)_objc_msgSend(v6[8], "layoutInsertAtIndex:", a4);
    case 1:
      v29 = (char *)objc_msgSend(result[7], "mapFromIndex:", a3);
      v30 = v29;
      v31 = v6[4];
      v32 = v31[11];
      if ((unint64_t)v29 < v32 || (unint64_t)&v29[-v32] >= v31[12])
      {
        if ((unint64_t)v29 < v32)
          v31[11] = v32 - 1;
      }
      else
      {
        objc_msgSend(v6[5], "removeObjectAtIndex:");
        --*((_QWORD *)v6[4] + 12);
        v37 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6[6], "statsCollector"));
        objc_msgSend(v37, "recordEvent:", 24);

      }
      objc_msgSend(v6[7], "deleteAtIndex:", a3);
      return (id *)_objc_msgSend(v6[8], "layoutDeleteAtIndex:", v30);
    case 2:
      v13 = (char *)objc_msgSend(result[7], "mapFromIndex:", a3);
      v14 = v6[4];
      v16 = v14[11];
      v15 = v14[12];
      v17 = &v13[-v16];
      if ((unint64_t)v13 >= v16 && (unint64_t)v17 < v15)
      {
        v19 = v6[5];
        v20 = (void *)objc_claimAutoreleasedReturnValue(+[NSNull null](NSNull, "null"));
        objc_msgSend(v19, "replaceObjectAtIndex:withObject:", v17, v20);

        v21 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6[6], "statsCollector"));
        objc_msgSend(v21, "recordEvent:", 26);

      }
      objc_msgSend(v6[7], "updateAtIndex:", a3);
      return (id *)_objc_msgSend(v6[8], "layoutUpdateAtIndex:", v13);
    case 3:
      v22 = (char *)objc_msgSend(result[7], "mapFromIndex:", a3);
      v23 = v22;
      v24 = v6[4];
      v25 = v24[11];
      v27 = (unint64_t)v22 >= v25 && (unint64_t)&v22[-v25] < v24[12];
      if (v27)
      {
        objc_msgSend(v6[5], "removeObjectAtIndex:");
        v28 = -1;
      }
      else
      {
        v28 = 0;
        if ((unint64_t)v22 < v25)
          v24[11] = v25 - 1;
      }
      v38 = v6[4];
      v39 = v38[11];
      v40 = v38[12];
      v41 = a4 < v39 || a4 - v39 >= v40;
      if (!v41 || *((_BYTE *)v6 + 72) && v39 + v28 + v40 == a4)
      {
        v42 = v6[5];
        v43 = (void *)objc_claimAutoreleasedReturnValue(+[NSNull null](NSNull, "null"));
        objc_msgSend(v42, "insertObject:atIndex:", v43, a4 - *((_QWORD *)v6[4] + 11));

        ++v28;
      }
      else
      {
        if (a4 < v39)
          v38[11] = v39 + 1;
        if (!v27)
          goto LABEL_52;
      }
      v44 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6[6], "statsCollector"));
      objc_msgSend(v44, "recordEvent:", 27);

LABEL_52:
      *((_QWORD *)v6[4] + 12) += v28;
      objc_msgSend(v6[7], "moveFromIndex:toIndex:", a3, a4);
      return (id *)_objc_msgSend(v6[8], "layoutMoveFromIndex:toIndex:", v23);
    default:
      return result;
  }
}

uint64_t sub_7F3AC(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_7F3BC(uint64_t a1)
{

}

void sub_7F3C4(uint64_t a1, void *a2, uint64_t a3)
{
  void *v5;
  id v6;
  void *v7;
  uint64_t v8;
  id v9;
  unsigned int v10;
  id v11;
  BOOL v12;
  int v13;
  BOOL v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  id v21;
  uint64_t v22;
  void *v23;
  id v24;

  v24 = a2;
  if (objc_opt_class(v24) == *(_QWORD *)(a1 + 64))
    v5 = 0;
  else
    v5 = v24;
  v6 = v5;
  v7 = v6;
  if (!v6)
    goto LABEL_37;
  v8 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 88) + a3;
  v9 = objc_msgSend(v6, "instantiateResult");
  v10 = v9;
  if (!v9)
  {
    v16 = 0;
    v17 = 0x7FFFFFFFFFFFFFFFLL;
    goto LABEL_32;
  }
  v11 = objc_msgSend(*(id *)(a1 + 40), "mapToIndex:", v8);
  if (v8)
    v12 = 1;
  else
    v12 = v11 == 0;
  v13 = !v12;
  if (v8)
    v14 = v11 == 0;
  else
    v14 = 0;
  if (v14)
    v15 = 0;
  else
    v15 = (uint64_t)v11;
  if (v14)
    v16 = 1;
  else
    v16 = v13;
  if ((v10 & 1) != 0)
    v17 = v15;
  else
    v17 = (uint64_t)v11;
  if ((v10 & 1) == 0)
    v16 = 0;
  if ((v10 & 2) == 0)
  {
LABEL_32:
    if (((v8 != v17) & (v10 >> 2)) == 0 && !v16)
      goto LABEL_37;
    goto LABEL_34;
  }
  v18 = v17 + 1;
  v19 = *(_QWORD *)(a1 + 80);
  if (v8 + 1 == *(_QWORD *)(a1 + 72))
  {
    if (v18 != v19)
      v16 = 1;
    goto LABEL_32;
  }
  if (v18 != v19)
    goto LABEL_32;
LABEL_34:
  v20 = *(void **)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 40);
  if (!v20)
  {
    v21 = objc_msgSend(*(id *)(a1 + 48), "mutableCopy");
    v22 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
    v23 = *(void **)(v22 + 40);
    *(_QWORD *)(v22 + 40) = v21;

    v20 = *(void **)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 40);
  }
  objc_msgSend(v20, "addIndex:", v8);
LABEL_37:

}

void sub_7F504(uint64_t a1, void *a2)
{
  id v3;
  id v4;
  id v5;
  id v6;
  NSObject *v7;
  void *v8;
  id v9;
  id v10;
  void *v11;
  id v12;
  uint64_t v13;
  void *v14;
  void *v15;
  objc_class *v16;
  NSString *v17;
  void *v18;
  int8x16_t v19;
  _QWORD v20[4];
  id v21;
  int8x16_t v22;
  id v23;
  _QWORD *v24;
  id v25;
  uint64_t v26;
  _QWORD v27[4];
  uint8_t buf[4];
  id v29;
  __int16 v30;
  uint64_t v31;
  __int16 v32;
  id v33;
  __int16 v34;
  void *v35;
  __int16 v36;
  id v37;
  __int16 v38;
  id v39;

  v3 = a2;
  v27[0] = 0;
  v27[1] = v27;
  v27[2] = 0x2020000000;
  v27[3] = 0;
  v4 = objc_msgSend(*(id *)(a1 + 32), "count");
  v5 = objc_msgSend(v3, "count");
  if (v4 != v5)
  {
    v6 = TUIInstantiationLog();
    v7 = objc_claimAutoreleasedReturnValue(v6);
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
    {
      v12 = objc_msgSend(*(id *)(a1 + 40), "feedId");
      v13 = *(_QWORD *)(a1 + 32);
      v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 48) + 32), "array"));
      v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v14, "dataProvider"));
      v16 = (objc_class *)objc_opt_class(v15);
      v17 = NSStringFromClass(v16);
      v18 = (void *)objc_claimAutoreleasedReturnValue(v17);
      *(_DWORD *)buf = 134219266;
      v29 = v12;
      v30 = 2114;
      v31 = v13;
      v32 = 2048;
      v33 = v4;
      v34 = 2114;
      v35 = v18;
      v36 = 2048;
      v37 = v5;
      v38 = 2112;
      v39 = v3;
      _os_log_error_impl(&dword_0, v7, OS_LOG_TYPE_ERROR, "[fid:%lu] requested indexes: %{public}@ (%lu) from %{public}@ -- received %lu: %@", buf, 0x3Eu);

    }
    if (_TUIDeviceHasInternalInstall())
      objc_exception_throw(objc_msgSend(objc_alloc((Class)NSException), "initWithName:reason:userInfo:", CFSTR("InvalidResponse"), CFSTR("The dynamic array provided yielded an incorrect response"), 0));
  }
  v8 = *(void **)(a1 + 32);
  v20[0] = _NSConcreteStackBlock;
  v20[1] = 3221225472;
  v20[2] = sub_7F79C;
  v20[3] = &unk_2400A8;
  v24 = v27;
  v25 = v5;
  v9 = v3;
  v21 = v9;
  v19 = *(int8x16_t *)(a1 + 40);
  v10 = (id)v19.i64[0];
  v22 = vextq_s8(v19, v19, 8uLL);
  v11 = *(void **)(a1 + 56);
  v26 = *(_QWORD *)(a1 + 64);
  v23 = v11;
  objc_msgSend(v8, "enumerateIndexesUsingBlock:", v20);

  _Block_object_dispose(v27, 8);
}

void sub_7F770(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_list va;

  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_7F79C(uint64_t a1, uint64_t a2)
{
  _TUIDynamicArrayItem *v4;
  id v5;
  id v6;
  id v7;

  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 24) >= *(_QWORD *)(a1 + 72))
    v7 = 0;
  else
    v7 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "objectAtIndexedSubscript:"));
  ++*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 24);
  v4 = objc_opt_new(_TUIDynamicArrayItem);
  v5 = objc_alloc_init(*(Class *)(*(_QWORD *)(a1 + 40) + 64));
  v6 = objc_msgSend(*(id *)(a1 + 48), "evaluateEnumerator:withObject:atIndex:count:uniqueID:nodes:flags:containingObject:builder:", *(unsigned int *)(*(_QWORD *)(a1 + 40) + 16), v7, a2, *(_QWORD *)(a1 + 80), objc_msgSend(*(id *)(*(_QWORD *)(a1 + 40) + 72), "uniqueID"), *(_QWORD *)(*(_QWORD *)(a1 + 40) + 20), *(_QWORD *)(*(_QWORD *)(a1 + 40) + 80), v4, v5);
  objc_msgSend(v5, "finalizeModelsWithParent:context:", v4, *(_QWORD *)(a1 + 48));
  -[_TUIDynamicArrayItem setInstantiateResult:](v4, "setInstantiateResult:", v6);
  objc_msgSend(*(id *)(a1 + 56), "replaceObjectAtIndex:withObject:", a2 - *(_QWORD *)(*(_QWORD *)(a1 + 40) + 88), v4);

}

id sub_7F954(void *a1)
{
  id v1;
  id v2;
  void *v3;

  v1 = a1;
  v2 = objc_alloc_init((Class)NSMutableArray);
  objc_msgSend(v1, "appendLayoutChildrenToArray:", v2);

  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "lastObject"));
  return v3;
}

id sub_7F9B0(void *a1)
{
  id v1;
  id v2;
  void *v3;

  v1 = a1;
  v2 = objc_alloc_init((Class)NSMutableArray);
  objc_msgSend(v1, "appendLayoutChildrenToArray:", v2);

  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "firstObject"));
  return v3;
}

void sub_7FF90(id a1)
{
  void *v1;
  id v2;
  void *v3;
  id v4;
  void *v5;
  _QWORD v6[4];

  v1 = (void *)objc_claimAutoreleasedReturnValue(+[TUIAttributeSet supportedAttributesSize](TUIAttributeSet, "supportedAttributesSize"));
  v2 = objc_msgSend(v1, "mutableCopy");

  v6[0] = CFSTR("halign");
  v6[1] = CFSTR("hspacing");
  v6[2] = CFSTR("vspacing");
  v6[3] = CFSTR("layout-mode");
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", v6, 4));
  objc_msgSend(v2, "addAttributesFromArray:", v3);

  v4 = objc_msgSend(v2, "copy");
  v5 = (void *)qword_2CB4E8;
  qword_2CB4E8 = (uint64_t)v4;

}

void sub_800BC(id a1)
{
  void *v1;
  uint64_t v2;
  void *v3;
  _QWORD v4[4];

  v4[0] = CFSTR("valign");
  v4[1] = CFSTR("estimated-width");
  v4[2] = CFSTR("estimated-height");
  v4[3] = CFSTR("estimated-height-above-pivot");
  v1 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", v4, 4));
  v2 = objc_claimAutoreleasedReturnValue(+[TUIAttributeSet setWithArray:](TUIAttributeSet, "setWithArray:", v1));
  v3 = (void *)qword_2CB4F8;
  qword_2CB4F8 = v2;

}

void sub_804A0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

id sub_804D0()
{
  if (qword_2CB510 != -1)
    dispatch_once(&qword_2CB510, &stru_240158);
  return (id)qword_2CB508;
}

void sub_805C8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_806CC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_80760(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_80780(id a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[NSMutableDictionary dictionary](NSMutableDictionary, "dictionary"));
  v2 = (void *)qword_2CB508;
  qword_2CB508 = v1;

  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_2524A0, CFSTR("__text_value"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_2524B8, CFSTR("__closure"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_2524D0, CFSTR("accepts-drop"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_2524E8, CFSTR("alignment-rect-insets"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_252500, CFSTR("allow-fullscreen"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_252518, CFSTR("allow-group-blending"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_252530, CFSTR("allow-hanging-punctuation"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_252548, CFSTR("allow-shrink-to-fit"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_252560, CFSTR("alpha"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_252578, CFSTR("anchor-offset"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_252590, CFSTR("anchor-position"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_2525A8, CFSTR("anchor-ref-id"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_2525C0, CFSTR("arrow-direction"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_2525D8, CFSTR("aspect-ratio"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_2525F0, CFSTR("attribute"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_252608, CFSTR("auto-play"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_252620, CFSTR("axis"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_252638, CFSTR("ax-adjustable"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_252650, CFSTR("ax-button"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_252668, CFSTR("ax-default"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_252680, CFSTR("ax-disabled"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_252698, CFSTR("ax-enable"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_2526B0, CFSTR("ax-heading"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_2526C8, CFSTR("ax-hint"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_2526E0, CFSTR("ax-identifier"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_2526F8, CFSTR("ax-image"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_252710, CFSTR("ax-label"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_252728, CFSTR("ax-toggle"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_252740, CFSTR("ax-touch-container"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_252758, CFSTR("ax-value"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_252770, CFSTR("background-color"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_252788, CFSTR("balance-sections"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_2527A0, CFSTR("based-on"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_2527B8, CFSTR("baseline"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_2527D0, CFSTR("baseline-offset"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_2527E8, CFSTR("behavior"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_252800, CFSTR("binding"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_252818, CFSTR("blend-mode"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_252830, CFSTR("blur-offset"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_252848, CFSTR("blur-radius"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_252860, CFSTR("blur-style"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_252878, CFSTR("border-color"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_252890, CFSTR("border-width"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_2528A8, CFSTR("bottom"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_2528C0, CFSTR("button-role"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_2528D8, CFSTR("c"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_2528F0, CFSTR("calculation-mode"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_252908, CFSTR("cancel-text"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_252920, CFSTR("char-count"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_252938, CFSTR("chart-type"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_252950, CFSTR("clips-to-bounds"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_252968, CFSTR("color"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_252980, CFSTR("columns"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_252998, CFSTR("column-multiple"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_2529B0, CFSTR("column-spacing"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_2529C8, CFSTR("column-span"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_2529E0, CFSTR("column-width"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_2529F8, CFSTR("container-fraction"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_252A10, CFSTR("content-width"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_252A28, CFSTR("continuous-corners"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_252A40, CFSTR("corner-radius"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_252A58, CFSTR("cover-urls"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_252A70, CFSTR("cover-filters"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_252A88, CFSTR("crossfades-contents"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_252AA0, CFSTR("curve"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_252AB8, CFSTR("deceleration-rate"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_252AD0, CFSTR("delay"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_252AE8, CFSTR("designated-id"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_252B00, CFSTR("direction"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_252B18, CFSTR("duration"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_252B30, CFSTR("dynamic-unique-id"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_252B48, CFSTR("element"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_252B60, CFSTR("enable-background-for-highlight-preview"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_252B78, CFSTR("enable-shadow-for-highlight-preview"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_252B90, CFSTR("enabled"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_252BA8, CFSTR("end-color"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_252BC0, CFSTR("end-position"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_252BD8, CFSTR("estimated-height"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_252BF0, CFSTR("estimated-height-above-pivot"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_252C08, CFSTR("estimated-width"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_252C20, CFSTR("fallback-color"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_252C38, CFSTR("feature"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_252C50, CFSTR("fetch-delta"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_252C68, CFSTR("fetch-initial"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_252C80, CFSTR("fetch-padding"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_252C98, CFSTR("fetch-window"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_252CB0, CFSTR("fill-mode"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_252CC8, CFSTR("filter"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_252CE0, CFSTR("focus-style"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_252CF8, CFSTR("font"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_252D10, CFSTR("gradient-width"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_252D28, CFSTR("gradient-insets"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_252D40, CFSTR("gradient-fraction"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_252D58, CFSTR("grouped"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_252D70, CFSTR("group-identifier"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_252D88, CFSTR("group-priority"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_252DA0, CFSTR("halign"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_252DB8, CFSTR("hcompressed"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_252DD0, CFSTR("h"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_252DE8, CFSTR("hflip-for-rtl"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_252E00, CFSTR("hide-ellipses"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_252E18, CFSTR("hspacing"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_252E30, CFSTR("html-tags"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_252E48, CFSTR("href"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_252E60, CFSTR("identifier"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_252E78, CFSTR("ignore-insets-for-opacity-trigger"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_252E90, CFSTR("inherit-from"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_252EA8, CFSTR("inline"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_252EC0, CFSTR("impression-data"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_252ED8, CFSTR("indent-firstline"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_252EF0, CFSTR("indent-leading"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_252F08, CFSTR("indent-trailing"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_252F20, CFSTR("insets"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_252F38, CFSTR("instance"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_252F50, CFSTR("ih"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_252F68, CFSTR("iw"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_252F80, CFSTR("kind"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_252F98, CFSTR("layer-contents-gravity"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_252FB0, CFSTR("layer-video-gravity"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_252FC8, CFSTR("layout-direction"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_252FE0, CFSTR("layout-mode"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_252FF8, CFSTR("leading"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_253010, CFSTR("line-balancing"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_253028, CFSTR("lines"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_253040, CFSTR("live-transform"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_253058, CFSTR("loop"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_253070, CFSTR("mask-color"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_253088, CFSTR("max-aspect-ratio"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_2530A0, CFSTR("max-columns"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_2530B8, CFSTR("max-lines"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_2530D0, CFSTR("max-pages"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_2530E8, CFSTR("max-scale"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_253100, CFSTR("mica-text-key"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_253118, CFSTR("mica-text-value"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_253130, CFSTR("min-lines"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_253148, CFSTR("min-scale"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_253160, CFSTR("muted"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_253178, CFSTR("n"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_253190, CFSTR("name"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_2531A8, CFSTR("menu-is-primary"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_2531C0, CFSTR("item-type"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_2531D8, CFSTR("observation-mode"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_2531F0, CFSTR("observe-trigger"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_253208, CFSTR("observe-trigger-delay"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_253220, CFSTR("observe-trigger-value"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_253238, CFSTR("on"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_253250, CFSTR("opacity"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_253268, CFSTR("padding"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_253280, CFSTR("paginated"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_253298, CFSTR("param"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_2532B0, CFSTR("parameters"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_2532C8, CFSTR("play-state"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_2532E0, CFSTR("pointer-ref-id"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_2532F8, CFSTR("pointer-style"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_253310, CFSTR("poster-frame-url"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_253328, CFSTR("presentation"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_253340, CFSTR("pressed-scale"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_253358, CFSTR("progress"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_253370, CFSTR("progress-id"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_253388, CFSTR("mode"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_2533A0, CFSTR("paused"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_2533B8, CFSTR("raise"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_2533D0, CFSTR("rasterize"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_2533E8, CFSTR("rating"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_253400, CFSTR("ref-id"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_253418, CFSTR("ref-instance"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_253430, CFSTR("relative-width"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_253448, CFSTR("render-mode"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_253460, CFSTR("render-model"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_253478, CFSTR("render-outsets"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_253490, CFSTR("render-transform"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_2534A8, CFSTR("resource-instance"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_2534C0, CFSTR("resource-kind"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_2534D8, CFSTR("resource-load"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_2534F0, CFSTR("resource-options"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_253508, CFSTR("return-key-type"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_253520, CFSTR("role"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_253538, CFSTR("rows"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_253550, CFSTR("row-spacing"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_253568, CFSTR("row-span"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_253580, CFSTR("run-list"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_253598, CFSTR("scale"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_2535B0, CFSTR("search-text-max-length"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_2535C8, CFSTR("select"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_2535E0, CFSTR("select-index"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_2535F8, CFSTR("shadow-color"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_253610, CFSTR("shadow-offset"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_253628, CFSTR("shadow-opacity"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_253640, CFSTR("shadow-radius"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_253658, CFSTR("should-hyphenate"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_253670, CFSTR("show-cancel-button"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_253688, CFSTR("show-playback-controls"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_2536A0, CFSTR("size"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_2536B8, CFSTR("spacing"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_2536D0, CFSTR("span"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_2536E8, CFSTR("start-at-end"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_253700, CFSTR("start-color"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_253718, CFSTR("start-position"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_253730, CFSTR("startTime"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_253748, CFSTR("style"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_253760, CFSTR("text"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_253778, CFSTR("text-alignment"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_253790, CFSTR("timing"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_2537A8, CFSTR("tint"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_2537C0, CFSTR("title"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_2537D8, CFSTR("top"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_2537F0, CFSTR("touch-outsets"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_253808, CFSTR("trailing"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_253820, CFSTR("transform"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_253838, CFSTR("trigger"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_253850, CFSTR("trigger-offset"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_253868, CFSTR("truncate"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_253880, CFSTR("type"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_253898, CFSTR("url"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_2538B0, CFSTR("user-interface-style"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_2538C8, CFSTR("v"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_2538E0, CFSTR("valign"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_2538F8, CFSTR("vcompressed"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_253910, CFSTR("video-id"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_253928, CFSTR("vpivot"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_253940, CFSTR("vertical-placement"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_253958, CFSTR("vspacing"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_253970, CFSTR("weight"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_253988, CFSTR("w"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_2539A0, CFSTR("width-snap"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_2539B8, CFSTR("when-unavailable"));
  objc_msgSend((id)qword_2CB508, "setObject:forKeyedSubscript:", &off_2539D0, CFSTR("z-index"));
}

void sub_82088(id a1)
{
  operator new();
}

void sub_82218(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  void *v9;

  _Unwind_Resume(a1);
}

id sub_828D4(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "appendLayoutChildrenToArray:", *(_QWORD *)(a1 + 32));
}

id sub_8295C(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "appendLayoutModelsToArray:", *(_QWORD *)(a1 + 32));
}

void sub_82A4C(id a1, TUIModel *a2, unint64_t a3, BOOL *a4)
{
  -[TUIModel setParentModel:](a2, "setParentModel:", 0, a4);
}

id sub_82A58(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "setParentModel:", *(_QWORD *)(a1 + 32));
}

void sub_835F0(uint64_t a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  void *v6;
  void *v7;
  double v8;
  double v9;
  id v10;
  _QWORD v11[2];
  _QWORD v12[2];

  v3 = a2;
  v4 = objc_alloc_init((Class)CAGradientLayer);
  objc_msgSend(v4, "setBounds:", *(double *)(a1 + 48), *(double *)(a1 + 56), *(double *)(a1 + 64), *(double *)(a1 + 72));
  v12[0] = objc_msgSend(objc_retainAutorelease(*(id *)(a1 + 32)), "CGColor");
  v12[1] = objc_msgSend(objc_retainAutorelease(*(id *)(a1 + 40)), "CGColor");
  v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", v12, 2));
  objc_msgSend(v4, "setColors:", v5);

  v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](NSNumber, "numberWithDouble:", *(double *)(a1 + 80)));
  v11[0] = v6;
  v11[1] = &off_254AA0;
  v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", v11, 2));
  objc_msgSend(v4, "setLocations:", v7);

  if (*(_QWORD *)(a1 + 88) == 1)
  {
    v8 = 0.5;
    objc_msgSend(v4, "setStartPoint:", *(double *)(a1 + 96), 0.5);
    v9 = *(double *)(a1 + 104);
  }
  else
  {
    v9 = 0.5;
    objc_msgSend(v4, "setStartPoint:", 0.5, *(double *)(a1 + 96));
    v8 = *(double *)(a1 + 104);
  }
  objc_msgSend(v4, "setEndPoint:", v9, v8);
  v10 = objc_msgSend(v3, "CGContext");

  objc_msgSend(v4, "renderInContext:", v10);
}

void sub_83BB0(id a1)
{
  void *v1;

  v1 = (void *)qword_2CB528;
  qword_2CB528 = (uint64_t)&off_2545F0;

}

void sub_83F24(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  void *v8;
  unsigned int v9;
  id v10;

  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "objectForKeyedSubscript:", NSFontAttributeName));
  v9 = objc_msgSend(v8, "isEqual:", *(_QWORD *)(a1 + 32));

  if (v9)
  {
    v10 = objc_msgSend(a2, "mutableCopy");
    objc_msgSend(v10, "removeObjectForKey:", NSFontAttributeName);
    objc_msgSend(*(id *)(a1 + 40), "addAttributes:range:", v10, a3, a4);

  }
  else
  {
    objc_msgSend(*(id *)(a1 + 40), "addAttributes:range:", a2, a3, a4);
  }
}

void sub_84594(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_84708(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_84944()
{
  operator delete();
}

void sub_84ACC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_84C70(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_84D00(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_84D98(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_84E44(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11)
{

  _Unwind_Resume(a1);
}

void sub_84EE0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11)
{

  _Unwind_Resume(a1);
}

void sub_84F70(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11)
{

  _Unwind_Resume(a1);
}

void sub_85000(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11)
{

  _Unwind_Resume(a1);
}

void sub_850A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11)
{

  _Unwind_Resume(a1);
}

void sub_85134(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11)
{

  _Unwind_Resume(a1);
}

void sub_851C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11)
{

  _Unwind_Resume(a1);
}

void sub_85248(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11)
{

  _Unwind_Resume(a1);
}

void sub_852D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11)
{

  _Unwind_Resume(a1);
}

void sub_85368(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11)
{

  _Unwind_Resume(a1);
}

void sub_85410(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11)
{

  _Unwind_Resume(a1);
}

void sub_854B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11)
{

  _Unwind_Resume(a1);
}

void sub_85584(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11)
{

  _Unwind_Resume(a1);
}

void sub_85694(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_85764(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_85810(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_148E8((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_85904(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_859DC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_85B18(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_85BC8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_85CA4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  void *v9;
  void *v10;

  sub_148E8((uint64_t)&a9);

  _Unwind_Resume(a1);
}

void sub_85D7C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_85DE4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_85EC4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11)
{

  _Unwind_Resume(a1);
}

void sub_8616C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  _Unwind_Resume(a1);
}

void sub_86990(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_86AE8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_86BD0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_86CA8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_872D8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_87508(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;

  v8 = v5;

  _Unwind_Resume(a1);
}

void sub_876B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_87738(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11)
{

  _Unwind_Resume(a1);
}

double sub_8783C(uint64_t a1, int a2)
{
  uint64_t v3;
  void *v4;
  unsigned int v5;
  double result;

  if (a2)
  {
    v3 = *(_QWORD *)(a1 + 768);
    if (!v3)
      operator new();
    return sub_87B90(v3);
  }
  v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSUserDefaults standardUserDefaults](NSUserDefaults, "standardUserDefaults"));
  v5 = objc_msgSend(v4, "BOOLForKey:", CFSTR("TUIRecordInstantiationStats"));

  v3 = *(_QWORD *)(a1 + 768);
  if (v5)
  {
    if (!v3)
      return result;
    return sub_87B90(v3);
  }
  if (v3)
  {
    sub_6738(v3 + 88);
    sub_14B0C(v3 + 48);
    sub_14B0C(v3 + 8);
    operator delete();
  }
  return result;
}

void sub_87988(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

uint64_t sub_87AD8(uint64_t result, _DWORD *a2)
{
  *(_DWORD *)result = 0;
  *(_QWORD *)(result + 4) = 0xFFFF0000FFFF0000;
  *(_DWORD *)(result + 12) = 0;
  if (a2)
  {
    *(_DWORD *)result = *(unsigned __int16 *)a2;
    *(_DWORD *)(result + 4) = a2[2];
    *(_DWORD *)(result + 8) = a2[1];
    *(_DWORD *)(result + 12) = a2[3];
  }
  return result;
}

void sub_87B1C(const char *a1)
{
  std::logic_error *exception;

  exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
  sub_87B6C(exception, a1);
}

void sub_87B58(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

std::logic_error *sub_87B6C(std::logic_error *a1, const char *a2)
{
  std::logic_error *result;

  result = std::logic_error::logic_error(a1, a2);
  return result;
}

double sub_87B90(uint64_t a1)
{
  double result;
  __int128 v3;
  __int128 v4;
  int v5;

  v3 = 0u;
  v4 = 0u;
  v5 = 1065353216;
  sub_87C08(a1 + 8, (uint64_t *)&v3);
  sub_14B0C((uint64_t)&v3);
  v3 = 0u;
  v4 = 0u;
  v5 = 1065353216;
  sub_87C08(a1 + 48, (uint64_t *)&v3);
  sub_14B0C((uint64_t)&v3);
  result = 0.0;
  *(_OWORD *)(a1 + 27816) = 0u;
  *(_OWORD *)(a1 + 27832) = 0u;
  return result;
}

void sub_87C08(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  void *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;

  sub_87CA8((_QWORD *)a1);
  v4 = *a2;
  *a2 = 0;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = v4;
  if (v5)
    operator delete(v5);
  v8 = a2[2];
  v7 = a2 + 2;
  v6 = v8;
  v9 = *(v7 - 1);
  *(_QWORD *)(a1 + 16) = v8;
  *(_QWORD *)(a1 + 8) = v9;
  *(v7 - 1) = 0;
  v10 = v7[1];
  *(_QWORD *)(a1 + 24) = v10;
  *(_DWORD *)(a1 + 32) = *((_DWORD *)v7 + 4);
  if (v10)
  {
    v11 = *(_QWORD *)(v6 + 8);
    v12 = *(_QWORD *)(a1 + 8);
    if ((v12 & (v12 - 1)) != 0)
    {
      if (v11 >= v12)
        v11 %= v12;
    }
    else
    {
      v11 &= v12 - 1;
    }
    *(_QWORD *)(*(_QWORD *)a1 + 8 * v11) = a1 + 16;
    *v7 = 0;
    v7[1] = 0;
  }
}

_QWORD *sub_87CA8(_QWORD *result)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t i;

  if (result[3])
  {
    v1 = result;
    result = (_QWORD *)result[2];
    if (result)
    {
      do
      {
        v2 = (_QWORD *)*result;
        operator delete(result);
        result = v2;
      }
      while (v2);
    }
    v1[2] = 0;
    v3 = v1[1];
    if (v3)
    {
      for (i = 0; i != v3; ++i)
        *(_QWORD *)(*v1 + 8 * i) = 0;
    }
    v1[3] = 0;
  }
  return result;
}

id sub_890EC(uint64_t a1)
{
  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 48), "setContentInset:", *(double *)(a1 + 40), *(double *)(a1 + 48), *(double *)(a1 + 56), *(double *)(a1 + 64));
  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 48), "setFrame:", *(double *)(a1 + 72), *(double *)(a1 + 80), *(double *)(a1 + 88), *(double *)(a1 + 96));
  objc_msgSend(*(id *)(a1 + 32), "_leadingGradientFrame");
  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 56), "setFrame:");
  objc_msgSend(*(id *)(a1 + 32), "_trailingGradientFrame");
  return objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 64), "setFrame:");
}

id sub_89A6C(uint64_t a1)
{
  TUIFeedView *v2;
  uint64_t v3;
  void *v4;
  void *v5;
  id WeakRetained;

  v2 = -[TUIFeedView initWithFrame:]([TUIFeedView alloc], "initWithFrame:", *(double *)(a1 + 40), *(double *)(a1 + 48), *(double *)(a1 + 56), *(double *)(a1 + 64));
  v3 = *(_QWORD *)(a1 + 32);
  v4 = *(void **)(v3 + 48);
  *(_QWORD *)(v3 + 48) = v2;

  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 48), "setAutoresizingMask:", 18);
  v5 = (void *)objc_claimAutoreleasedReturnValue(+[UIColor clearColor](UIColor, "clearColor"));
  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 48), "setBackgroundColor:", v5);

  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 48), "setShowsHorizontalScrollIndicator:", 0);
  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 48), "setShowsVerticalScrollIndicator:", 0);
  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 48), "setPagingEnabled:", 0);
  WeakRetained = objc_loadWeakRetained((id *)(*(_QWORD *)(a1 + 32) + 120));
  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 48), "setViewFactory:", WeakRetained);

  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 48), "setDelegate:");
  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 48), "setSubviewsDelegate:");
  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 24), "decelerationRate");
  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 48), "setDecelerationRate:");
  return objc_msgSend(*(id *)(a1 + 32), "addSubview:", *(_QWORD *)(*(_QWORD *)(a1 + 32) + 48));
}

void sub_8AD98(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
  _Block_object_dispose(&a29, 8);
  _Unwind_Resume(a1);
}

id sub_8ADB8(uint64_t a1, uint64_t a2)
{
  id result;

  result = objc_retainBlock(*(id *)(a2 + 40));
  *(_QWORD *)(a1 + 40) = result;
  return result;
}

void sub_8ADE0(uint64_t a1)
{

}

void sub_8ADE8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v2 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40);
  if (v2)
  {
    (*(void (**)(uint64_t, uint64_t))(v2 + 16))(v2, 1);
    v3 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8);
    v4 = *(void **)(v3 + 40);
    *(_QWORD *)(v3 + 40) = 0;

  }
}

void sub_8AE3C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v2 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40);
  if (v2)
  {
    (*(void (**)(uint64_t, _QWORD))(v2 + 16))(v2, 0);
    v3 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8);
    v4 = *(void **)(v3 + 40);
    *(_QWORD *)(v3 + 40) = 0;

  }
}

void sub_8B020(id a1)
{
  _TUIResourceLoaderOfflineCache *v1;
  void *v2;

  v1 = objc_opt_new(_TUIResourceLoaderOfflineCache);
  v2 = (void *)qword_2CB538;
  qword_2CB538 = (uint64_t)v1;

}

void sub_8B330(uint64_t a1, uint64_t a2, void *a3)
{
  id v4;
  void *v5;
  void *v6;
  id v7;

  v4 = a3;
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "response"));
  v7 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "URL"));

  v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSURLRequest requestWithURL:](NSURLRequest, "requestWithURL:", v7));
  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 40), "storeCachedResponse:forRequest:", v4, v6);

}

uint64_t sub_8B4CC(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_8B4DC(uint64_t a1)
{

}

void sub_8B4E4(uint64_t a1)
{
  objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), *(id *)(*(_QWORD *)(a1 + 32) + 40));
}

void sub_8B8C8(uint64_t a1)
{
  uint64_t v2;
  NSMutableDictionary *v3;
  uint64_t v4;
  void *v5;

  v2 = *(_QWORD *)(a1 + 32);
  if (*(_BYTE *)(v2 + 25))
  {
    if ((*(_QWORD *)(v2 + 32) & 0x8000000000000000) != 0)
      objc_msgSend((id)v2, "_aq_loadPostLaunchCaches");
  }
  else if (*(_BYTE *)(v2 + 24))
  {
    objc_msgSend((id)v2, "_aq_saveOfflineCache");
    v3 = objc_opt_new(NSMutableDictionary);
    v4 = *(_QWORD *)(a1 + 32);
    v5 = *(void **)(v4 + 8);
    *(_QWORD *)(v4 + 8) = v3;

  }
  ++*(_QWORD *)(*(_QWORD *)(a1 + 32) + 32);
}

uint64_t sub_8BC20(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  char v3;

  v3 = 0;
  LODWORD(result) = objc_msgSend(*(id *)(a1 + 32), "fileExistsAtPath:isDirectory:", a2, &v3);
  if (v3)
    return result;
  else
    return 0;
}

void sub_8BC58(uint64_t a1, uint64_t a2, void *a3)
{
  id v4;
  void *v5;
  void *v6;
  id v7;

  v4 = a3;
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "response"));
  v7 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "URL"));

  v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSURLRequest requestWithURL:](NSURLRequest, "requestWithURL:", v7));
  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 40), "storeCachedResponse:forRequest:", v4, v6);

}

id sub_8BD90(_QWORD *a1)
{
  return objc_msgSend(*(id *)(a1[4] + 8), "setObject:forKey:", a1[5], a1[6]);
}

void sub_8BE94(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v2 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1[4] + 8), "valueForKey:", a1[5]));
  v3 = *(_QWORD *)(a1[6] + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

id sub_8BF4C(uint64_t a1)
{
  return objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 8), "enumerateKeysAndObjectsUsingBlock:", *(_QWORD *)(a1 + 40));
}

id sub_8BFB0(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_aq_saveOfflineCache");
}

void sub_8C790(_QWORD *a1, void *a2, void *a3, void *a4)
{
  id v7;
  id v8;
  _BYTE *v9;
  uint64_t v10;
  id v11;

  v11 = a2;
  v7 = a3;
  v8 = a4;
  v9 = (_BYTE *)a1[4];
  if (v9[32])
    objc_msgSend(v9, "_addURLToOfflineCache:response:data:", a1[5], v7, v11);
  v10 = a1[6];
  if (v10)
    (*(void (**)(uint64_t, id, id))(v10 + 16))(v10, v11, v8);

}

void sub_8C96C(_QWORD *a1, void *a2, void *a3, void *a4)
{
  id v7;
  id v8;
  _BYTE *v9;
  uint64_t v10;
  id v11;

  v11 = a2;
  v7 = a3;
  v8 = a4;
  v9 = (_BYTE *)a1[4];
  if (v9[32])
    objc_msgSend(v9, "_addURLToOfflineCache:response:data:", a1[5], v7, v11);
  v10 = a1[6];
  if (v10)
    (*(void (**)(uint64_t, id, id))(v10 + 16))(v10, v7, v8);

}

void sub_8CC34(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint8_t *a5)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, a5, 0xCu);
}

uint64_t TUIKeyboardAppearanceFromEnvironmentStyle(uint64_t a1)
{
  if (a1 == 2)
    return 1;
  else
    return 2 * (a1 == 1);
}

BOOL TUIPlatformKeyboardAppearanceFromKeyboardAppearance(_BOOL8 result)
{
  if (result != 2)
    return result == 1;
  return result;
}

void sub_8E004(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_8E094(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_8E12C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_8E19C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_8EC08(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, void *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,char a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,void *__p,uint64_t a48,uint64_t a49,char a50)
{
  void *v50;

  sub_8FED0((uint64_t)&a22);
  if (__p)
  {
    a48 = (uint64_t)__p;
    operator delete(__p);
  }
  sub_60EE0((uint64_t)&a50);

  _Unwind_Resume(a1);
}

double sub_8ED0C(__int128 *a1, double *a2, _QWORD *a3, unint64_t a4)
{
  _QWORD *v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id *v14;
  id *v15;
  _QWORD *v16;
  unint64_t v17;
  id v18;
  uint64_t v19;
  _QWORD *v20;
  double v21;
  double v22;
  unint64_t v23;
  unint64_t v24;
  double v25;
  unint64_t v26;
  unint64_t v27;
  _QWORD *v28;
  uint64_t *v29;
  double v30;
  double v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  double v37;
  unint64_t v38;
  char *v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  unint64_t v43;
  char *v44;
  double *v45;
  char *v46;
  char *v47;
  double *v48;
  _QWORD *v49;
  double **i;
  double **v51;
  double *v52;
  double *v53;
  double v54;
  double *v55;
  uint64_t v56;
  double v57;
  double v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t *v64;
  unint64_t v65;
  double *v66;
  unint64_t v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  uint64_t v75;
  double v76;
  _QWORD *v77;
  double *v78;
  double *v79;
  uint64_t v80;
  uint64_t v81;
  double v82;
  double *v83;
  double v84;
  uint64_t v85;
  double v86;
  __int128 **v87;
  double *v88;
  double *v89;
  double *v90;
  double v91;
  void *v92;
  double *v93;
  uint64_t v94;
  unint64_t v95;
  int64_t v96;
  unint64_t v97;
  char *v98;
  double *v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  void *v103;
  char *v104;
  uint64_t v105;
  unint64_t v106;
  uint64_t v107;
  unint64_t v108;
  char *v109;
  double *v110;
  char *v111;
  uint64_t v112;
  void *v113;
  unint64_t v114;
  uint64_t *v115;
  unint64_t v116;
  unint64_t v117;
  unint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t *v121;
  uint64_t v122;
  unint64_t v123;
  double *v124;
  double v125;
  double v126;
  double v127;
  double v128;
  double v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  unint64_t v134;
  double v135;
  double v136;
  unint64_t v137;
  double v138;
  double v139;
  uint64_t v140;
  char *v141;
  double v142;
  double v143;
  double v144;
  double v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  const CGPoint *v150;
  CGFloat *p_y;
  BOOL v152;
  const CGPoint *v153;
  _QWORD *v154;
  void *v155;
  unint64_t v156;
  __int128 v157;
  uint64_t v158;
  double v159;
  double v160;
  uint64_t *v162;
  uint64_t v163;
  unint64_t v164;
  uint64_t *v165;
  __int128 **v166;
  unint64_t v167;
  double *v168;
  unint64_t v169;
  __int128 v170;
  __int128 *v171;
  __int128 v172;
  uint64_t v173;
  __int128 v174;
  uint64_t v175;
  double *v176;
  double *v177;
  uint64_t v178;
  void *__src[2];
  _QWORD v180[2];
  __int128 __p;
  uint64_t v182;
  __int128 v183;
  unint64_t v184;
  char v185;
  double *v186;
  double *v187;
  uint64_t v188;

  v186 = 0;
  v187 = 0;
  v188 = 0;
  v6 = *(_QWORD **)a1;
  v168 = a2;
  if (a4)
  {
    v7 = a4;
  }
  else
  {
    v7 = 1;
    v9 = *((_QWORD *)a1 + 1);
    v8 = *((_QWORD *)a1 + 2);
LABEL_4:
    while (1)
    {
      v10 = v8;
      v11 = v9;
      if (v9 == *((_QWORD *)a1 + 4) && v8 == *((_QWORD *)a1 + 5))
        break;
      v12 = *v6;
      v13 = *(_QWORD *)(*v6 + 88 * v9) + 96 * v8;
      v15 = *(id **)(v13 + 48);
      v14 = *(id **)(v13 + 56);
      if (v15 == v14)
      {
        v17 = 0;
      }
      else
      {
        v16 = v6;
        v17 = 0;
        do
        {
          if (*v15)
          {
            v18 = objc_msgSend(*v15, "span");
            if ((unint64_t)v18 <= 1)
              v19 = 1;
            else
              v19 = (uint64_t)v18;
          }
          else
          {
            v19 = 1;
          }
          v17 += v19;
          v15 += 8;
        }
        while (v15 != v14);
        v6 = v16;
        v12 = *v16;
      }
      v8 = 0;
      if (v7 <= v17)
        v7 = v17;
      v9 = 0x2E8BA2E8BA2E8BA3 * ((v6[1] - v12) >> 3);
      if (v11 < v9)
      {
        v8 = v10 + 1;
        v20 = (_QWORD *)(v12 + 88 * v11 + 8);
        while (v8 >= 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*v20 - *(v20 - 1)) >> 5))
        {
          v8 = 0;
          ++v11;
          v20 += 11;
          if (v9 == v11)
            goto LABEL_4;
        }
        v9 = v11;
      }
    }
    v6 = *(_QWORD **)a1;
    a2 = v168;
  }
  v169 = v7;
  v21 = a2[5];
  v22 = *a2 - a2[2] - a2[4];
  v183 = 0uLL;
  v184 = 0;
  v24 = *((_QWORD *)a1 + 1);
  v23 = *((_QWORD *)a1 + 2);
  v25 = 0.0;
LABEL_26:
  while (1)
  {
    v26 = v23;
    v27 = v24;
    if (v24 == *((_QWORD *)a1 + 4) && v23 == *((_QWORD *)a1 + 5))
      break;
    v28 = v6;
    v29 = (uint64_t *)(*(_QWORD *)(*v6 + 88 * v24) + 96 * v23);
    sub_658DC((uint64_t)&v185, 0, v29[6], v29[7], NAN);
    v31 = v30;
    *((double *)v29 + 9) = v30;
    v29[10] = v32;
    v33 = *((_QWORD *)&v183 + 1);
    v34 = v183;
    if ((_QWORD)v183 == *((_QWORD *)&v183 + 1))
    {
      __p = 0uLL;
      v182 = 0;
      if ((unint64_t)v183 >= v184)
      {
        v33 = sub_911C0((uint64_t *)&v183, (__int128 **)&__p);
      }
      else
      {
        *(_QWORD *)v183 = 0;
        *(_QWORD *)(v34 + 8) = 0;
        *(_QWORD *)(v34 + 16) = 0;
        sub_9158C((char *)v34, (__int128 *)__p, *((__int128 **)&__p + 1), (uint64_t)(*((_QWORD *)&__p + 1) - __p) >> 4);
        v33 = v34 + 24;
      }
      *((_QWORD *)&v183 + 1) = v33;
      if ((_QWORD)__p)
      {
        *((_QWORD *)&__p + 1) = __p;
        operator delete((void *)__p);
        v33 = *((_QWORD *)&v183 + 1);
      }
      v25 = 0.0;
    }
    if (*((_BYTE *)v168 + 64) && *(_QWORD *)(v33 - 24) != *(_QWORD *)(v33 - 16) && v31 + v21 + v25 > v22)
    {
      __p = 0uLL;
      v182 = 0;
      if (v33 >= v184)
      {
        v33 = sub_911C0((uint64_t *)&v183, (__int128 **)&__p);
      }
      else
      {
        *(_QWORD *)v33 = 0;
        *(_QWORD *)(v33 + 8) = 0;
        *(_QWORD *)(v33 + 16) = 0;
        sub_9158C((char *)v33, (__int128 *)__p, *((__int128 **)&__p + 1), (uint64_t)(*((_QWORD *)&__p + 1) - __p) >> 4);
        v33 += 24;
      }
      *((_QWORD *)&v183 + 1) = v33;
      if ((_QWORD)__p)
      {
        *((_QWORD *)&__p + 1) = __p;
        operator delete((void *)__p);
        v33 = *((_QWORD *)&v183 + 1);
      }
      v25 = 0.0;
    }
    v35 = *(_QWORD *)(v33 - 24);
    v36 = *(_QWORD *)(v33 - 16);
    if (v35 == v36)
      v37 = -0.0;
    else
      v37 = v21;
    v38 = *(_QWORD *)(v33 - 8);
    if (v36 >= v38)
    {
      v40 = (uint64_t)(v36 - v35) >> 4;
      v41 = v40 + 1;
      if ((unint64_t)(v40 + 1) >> 60)
        sub_6F9C();
      v42 = v38 - v35;
      if (v42 >> 3 > v41)
        v41 = v42 >> 3;
      if ((unint64_t)v42 >= 0x7FFFFFFFFFFFFFF0)
        v43 = 0xFFFFFFFFFFFFFFFLL;
      else
        v43 = v41;
      if (v43)
        v44 = (char *)sub_22FD4(v33 - 8, v43);
      else
        v44 = 0;
      v45 = (double *)&v44[16 * v40];
      *(_QWORD *)v45 = v29;
      v45[1] = v31;
      v47 = *(char **)(v33 - 24);
      v46 = *(char **)(v33 - 16);
      v48 = v45;
      if (v46 != v47)
      {
        do
        {
          *((_OWORD *)v48 - 1) = *((_OWORD *)v46 - 1);
          v48 -= 2;
          v46 -= 16;
        }
        while (v46 != v47);
        v46 = *(char **)(v33 - 24);
      }
      v39 = (char *)(v45 + 2);
      *(_QWORD *)(v33 - 24) = v48;
      *(_QWORD *)(v33 - 16) = v45 + 2;
      *(_QWORD *)(v33 - 8) = &v44[16 * v43];
      if (v46)
        operator delete(v46);
    }
    else
    {
      *(_QWORD *)v36 = v29;
      *(double *)(v36 + 8) = v31;
      v39 = (char *)(v36 + 16);
    }
    v23 = 0;
    v25 = v31 + v25 + v37;
    *(_QWORD *)(v33 - 16) = v39;
    v6 = v28;
    v24 = 0x2E8BA2E8BA2E8BA3 * ((uint64_t)(v28[1] - *v28) >> 3);
    if (v27 < v24)
    {
      v23 = v26 + 1;
      v49 = (_QWORD *)(*v28 + 88 * v27 + 8);
      while (v23 >= 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*v49 - *(v49 - 1)) >> 5))
      {
        v23 = 0;
        ++v27;
        v49 += 11;
        if (v24 == v27)
          goto LABEL_26;
      }
      v24 = v27;
    }
  }
  if (*((_BYTE *)v168 + 64))
  {
    v51 = (double **)*((_QWORD *)&v183 + 1);
    for (i = (double **)v183; i != v51; i += 3)
    {
      if (i != (double **)(*((_QWORD *)&v183 + 1) - 24)
        || 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*((_QWORD *)&v183 + 1) - v183) >> 3) <= 1)
      {
        v52 = *i;
        v53 = i[1];
        if (*i != v53)
        {
          v54 = 0.0;
          v55 = *i;
          do
          {
            v54 = v54 + v55[1];
            v55 += 2;
          }
          while (v55 != v53);
          v56 = ((char *)v53 - (char *)v52) >> 4;
          v57 = v22 - (v54 + (double)(unint64_t)(v56 - 1) * v21);
          if (v57 > 0.0 && v52 != v53)
          {
            v59 = v57 / (double)(unint64_t)v56;
            do
            {
              v60 = *(_QWORD *)v52;
              sub_658DC((uint64_t)&v185, 1, *(_QWORD *)(*(_QWORD *)v52 + 48), *(_QWORD *)(*(_QWORD *)v52 + 56), v59 + v52[1]);
              *(_QWORD *)(v60 + 72) = v61;
              *(_QWORD *)(v60 + 80) = v62;
              *((_QWORD *)v52 + 1) = v61;
              v52 += 2;
            }
            while (v52 != v53);
          }
        }
      }
    }
  }
  *(_QWORD *)&__p = 0;
  sub_65CE0((uint64_t)&v186, v169, &__p);
  v64 = *(uint64_t **)a1;
  v63 = *((_QWORD *)a1 + 1);
  v65 = *((_QWORD *)a1 + 2);
  v66 = v168;
  v162 = *(uint64_t **)a1;
LABEL_84:
  while (1)
  {
    v67 = v63;
    v68 = v65;
    if (v63 == *((_QWORD *)a1 + 4) && v65 == *((_QWORD *)a1 + 5))
      break;
    v69 = *v64;
    v70 = *(_QWORD *)(*v64 + 88 * v63) + 96 * v65;
    v71 = *(_QWORD *)(v70 + 48);
    v72 = *(_QWORD *)(v70 + 56);
    if (v71 != v72)
    {
      v164 = v65;
      v73 = 0;
      v74 = 0;
      v75 = 2;
      do
      {
        v76 = *(double *)(v71 + 56);
        if (*(_QWORD *)v71 && (unint64_t)objc_msgSend(*(id *)v71, "span") >= 2)
          operator new();
        if (v74 < v169)
          v186[v74] = fmax(v186[v74], v76);
        ++v74;
        v71 += 64;
        v73 += v75;
        v75 += 2;
      }
      while (v71 != v72);
      v64 = v162;
      v68 = v164;
      v69 = *v162;
      v66 = v168;
    }
    v65 = 0;
    v63 = 0x2E8BA2E8BA2E8BA3 * ((v64[1] - v69) >> 3);
    if (v67 < v63)
    {
      v65 = v68 + 1;
      v77 = (_QWORD *)(v69 + 88 * v67 + 8);
      while (v65 >= 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*v77 - *(v77 - 1)) >> 5))
      {
        v65 = 0;
        ++v67;
        v77 += 11;
        if (v63 == v67)
          goto LABEL_84;
      }
      v63 = v67;
    }
  }
  __p = 0uLL;
  v182 = 0;
  __src[0] = 0;
  sub_65CE0((uint64_t)&__p, v169 + 1, __src);
  v78 = v186;
  v79 = v187;
  v80 = __p;
  if (v186 == v187)
  {
    v85 = 0;
    v82 = 0.0;
  }
  else
  {
    v81 = 0;
    v82 = 0.0;
    v83 = (double *)__p;
    do
    {
      v84 = *v78++;
      *v83++ = v82;
      v82 = v82 + v84;
      --v81;
    }
    while (v78 != v79);
    v85 = -v81;
  }
  *(double *)(v80 + 8 * v85) = v82;
  if (*((_BYTE *)v66 + 64))
    v86 = 0.0;
  else
    v86 = v66[2];
  __src[0] = 0;
  __src[1] = 0;
  v180[0] = 0;
  v166 = (__int128 **)*((_QWORD *)&v183 + 1);
  v87 = (__int128 **)v183;
  if ((_QWORD)v183 == *((_QWORD *)&v183 + 1))
  {
    v102 = 0;
    v101 = 0;
LABEL_136:
    v104 = (char *)__src[0];
    v105 = (v102 - (char *)__src[0]) >> 3;
    v106 = v105 + 1;
    if ((unint64_t)(v105 + 1) >> 61)
      sub_6F9C();
    v107 = v101 - (unint64_t)__src[0];
    if (v107 >> 2 > v106)
      v106 = v107 >> 2;
    if ((unint64_t)v107 >= 0x7FFFFFFFFFFFFFF8)
      v108 = 0x1FFFFFFFFFFFFFFFLL;
    else
      v108 = v106;
    if (v108)
    {
      v109 = (char *)sub_39CC4((uint64_t)v180, v108);
      v104 = (char *)__src[0];
      v102 = (char *)__src[1];
    }
    else
    {
      v109 = 0;
    }
    v110 = (double *)&v109[8 * v105];
    v111 = &v109[8 * v108];
    *v110 = v86;
    v103 = v110 + 1;
    while (v102 != v104)
    {
      v112 = *((_QWORD *)v102 - 1);
      v102 -= 8;
      *((_QWORD *)v110-- - 1) = v112;
    }
    __src[0] = v110;
    __src[1] = v103;
    v180[0] = v111;
    if (v104)
      operator delete(v104);
    goto LABEL_150;
  }
  do
  {
    v176 = 0;
    v177 = 0;
    v178 = 0;
    sub_9158C((char *)&v176, *v87, v87[1], v87[1] - *v87);
    v88 = v176;
    v89 = v177;
    if (v176 != v177)
    {
      v90 = (double *)__src[1];
      do
      {
        v91 = v88[1];
        if ((unint64_t)v90 >= v180[0])
        {
          v93 = (double *)__src[0];
          v94 = ((char *)v90 - (char *)__src[0]) >> 3;
          v95 = v94 + 1;
          if ((unint64_t)(v94 + 1) >> 61)
            sub_6F9C();
          v96 = v180[0] - (unint64_t)__src[0];
          if ((uint64_t)(v180[0] - (unint64_t)__src[0]) >> 2 > v95)
            v95 = v96 >> 2;
          if ((unint64_t)v96 >= 0x7FFFFFFFFFFFFFF8)
            v97 = 0x1FFFFFFFFFFFFFFFLL;
          else
            v97 = v95;
          if (v97)
          {
            v98 = (char *)sub_39CC4((uint64_t)v180, v97);
            v93 = (double *)__src[0];
            v90 = (double *)__src[1];
          }
          else
          {
            v98 = 0;
          }
          v99 = (double *)&v98[8 * v94];
          *v99 = v86;
          v92 = v99 + 1;
          while (v90 != v93)
          {
            v100 = *((_QWORD *)v90-- - 1);
            *((_QWORD *)v99-- - 1) = v100;
          }
          __src[0] = v99;
          __src[1] = v92;
          v180[0] = &v98[8 * v97];
          if (v93)
            operator delete(v93);
        }
        else
        {
          *v90 = v86;
          v92 = v90 + 1;
        }
        __src[1] = v92;
        v86 = v21 + v86 + v91;
        v88 += 2;
        v90 = (double *)v92;
      }
      while (v88 != v89);
      v88 = v176;
    }
    if (v88)
    {
      v177 = v88;
      operator delete(v88);
    }
    v87 += 3;
  }
  while (v87 != v166);
  v102 = (char *)__src[1];
  v101 = v180[0];
  if (__src[1] >= (void *)v180[0])
    goto LABEL_136;
  *(double *)__src[1] = v86;
  v103 = v102 + 8;
LABEL_150:
  __src[1] = v103;
  v113 = __src[0];
  if (v66 + 9 != (double *)__src)
  {
    sub_915FC((char *)v66 + 72, (char *)__src[0], (uint64_t)v103, (int64_t)((uint64_t)v103 - (unint64_t)__src[0]) >> 3);
    v113 = __src[0];
  }
  if (v113)
  {
    __src[1] = v113;
    operator delete(v113);
  }
  v174 = *a1;
  v175 = *((_QWORD *)a1 + 2);
  v172 = *(__int128 *)((char *)a1 + 24);
  v173 = *((_QWORD *)a1 + 5);
  *(_QWORD *)&v170 = v66;
  *((_QWORD *)&v170 + 1) = &__p;
  v171 = a1;
  sub_90D58(a3, (size_t)&v174, (uint64_t)&v172, &v170);
  v163 = *(_QWORD *)(*((_QWORD *)&__p + 1) - 8);
  v115 = *(uint64_t **)a1;
  v114 = *((_QWORD *)a1 + 1);
  v116 = *((_QWORD *)a1 + 2);
  v165 = *(uint64_t **)a1;
LABEL_155:
  while (1)
  {
    v117 = v114;
    v118 = v116;
    if (v114 == *((_QWORD *)a1 + 4) && v116 == *((_QWORD *)a1 + 5))
      break;
    v119 = *v115;
    v120 = *(_QWORD *)(*v115 + 88 * v114);
    v121 = (uint64_t *)(v120 + 96 * v118);
    v122 = *v121;
    v123 = v121[2];
    if (v123 <= 1)
      v123 = 1;
    if (*((_QWORD *)v66 + 7) == 2)
    {
      v124 = (double *)*((_QWORD *)v66 + 9);
      v125 = v66[5];
      v126 = v66[2] + v66[4];
      if (*((_BYTE *)v66 + 64))
        v126 = 0.0;
      v127 = v124[v122];
      v128 = v124[v123 + v122] - v127 - v125;
      v129 = *(double *)(*((_QWORD *)v66 + 10) - 8) - *v124 - v125 + v126 - v127 - v128;
    }
    else
    {
      v130 = *((_QWORD *)v66 + 9);
      v129 = *(double *)(v130 + 8 * v122);
      v128 = *(double *)(v130 + 8 * (v123 + v122)) - v129 - v66[5];
    }
    v131 = v120 + 96 * v118;
    v133 = *(_QWORD *)(v131 + 48);
    v132 = *(_QWORD *)(v131 + 56);
    if (v133 != v132)
    {
      v167 = v118;
      v134 = 0;
      v135 = 0.0;
      do
      {
        v136 = 0.0;
        if (v134 < v169)
          v136 = v186[v134];
        v137 = (unint64_t)objc_msgSend(*(id *)v133, "valign") - 1;
        v138 = 0.0;
        if (v137 <= 3)
          v138 = dbl_22F3D0[v137];
        v139 = *(double *)(v133 + 56);
        v140 = *((_QWORD *)v66 + 7);
        v141 = (char *)objc_msgSend(*(id *)v133, "halign");
        v142 = v138 * (v136 - v139);
        if (v141 == (_BYTE *)&dword_0 + 3)
          v143 = 1.0;
        else
          v143 = 0.0;
        if (v141 == (_BYTE *)&dword_0 + 2)
          v143 = 0.5;
        if (v140 != 2)
          v143 = 1.0 - v143;
        v144 = v129 + *((double *)a1 + 6) + v143 * (v128 - *(double *)(v133 + 48));
        v145 = v142 + v135 + *((double *)a1 + 7);
        *(double *)(v133 + 32) = v144;
        *(double *)(v133 + 40) = v145;
        v146 = *(_QWORD *)(v133 + 8);
        v147 = *(_QWORD *)(v133 + 16);
        while (v146 != v147)
        {
          v148 = *(_QWORD *)(v146 + 56);
          v149 = a3[14] + 152 * v148;
          v150 = (const CGPoint *)(v149 + 136);
          p_y = (CGFloat *)(v149 + 144);
          v152 = v148 == -1;
          if (v148 == -1)
            v153 = &CGPointZero;
          else
            v153 = v150;
          if (v152)
            p_y = &CGPointZero.y;
          sub_66990((double *)(v146 + 8), v144 - v153->x + *(double *)(v146 + 72), v145 - *p_y + *(double *)(v146 + 64));
          v146 += 96;
        }
        v135 = v135 + v136;
        ++v134;
        v133 += 64;
        v66 = v168;
      }
      while (v133 != v132);
      v115 = v165;
      v118 = v167;
      v119 = *v165;
    }
    v116 = 0;
    v114 = 0x2E8BA2E8BA2E8BA3 * ((v115[1] - v119) >> 3);
    if (v117 < v114)
    {
      v116 = v118 + 1;
      v154 = (_QWORD *)(v119 + 88 * v117 + 8);
      while (v116 >= 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*v154 - *(v154 - 1)) >> 5))
      {
        v116 = 0;
        ++v117;
        v154 += 11;
        if (v114 == v117)
          goto LABEL_155;
      }
      v114 = v117;
    }
  }
  v156 = *((_QWORD *)a1 + 12);
  v155 = (void *)*((_QWORD *)a1 + 13);
  *((_QWORD *)a1 + 12) = v184;
  v157 = a1[5];
  a1[5] = v183;
  v183 = v157;
  v184 = v156;
  *(__int128 *)((char *)a1 + 104) = __p;
  v158 = *((_QWORD *)a1 + 15);
  *((_QWORD *)a1 + 15) = v182;
  *(_QWORD *)&__p = v155;
  v182 = v158;
  v159 = v66[2] + v66[4];
  if (*((_BYTE *)v66 + 64))
    v159 = 0.0;
  v160 = *(double *)(*((_QWORD *)v66 + 10) - 8) - **((double **)v66 + 9) - v66[5] + v159;
  *((double *)a1 + 8) = v160;
  *((_QWORD *)a1 + 9) = v163;
  if (v155)
  {
    *((_QWORD *)&__p + 1) = v155;
    operator delete(v155);
  }
  *(_QWORD *)&__p = &v183;
  sub_90B30((void ***)&__p);
  if (v186)
  {
    v187 = v186;
    operator delete(v186);
  }
  return v160;
}

void sub_8FB5C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,void *a26,uint64_t a27,uint64_t a28,void *a29,uint64_t a30,uint64_t a31,uint64_t a32,char *__p,char *a34,uint64_t a35,uint64_t a36,char a37,uint64_t a38)
{
  uint64_t v38;
  void *v40;

  if (__p)
  {
    a34 = __p;
    operator delete(__p);
  }
  __p = &a37;
  sub_90B30((void ***)&__p);
  v40 = *(void **)(v38 - 184);
  if (v40)
  {
    *(_QWORD *)(v38 - 176) = v40;
    operator delete(v40);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_8FC48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if (a2 != a3)
  {
    sub_91958(a3, *(_QWORD *)(a1 + 8), a2);
    v6 = v5;
    v7 = *(_QWORD *)(a1 + 8);
    if (v7 != v5)
    {
      do
      {
        v8 = v7 - 40;

        v7 = v8;
      }
      while (v8 != v6);
    }
    *(_QWORD *)(a1 + 8) = v6;
  }
  return a2;
}

double *sub_8FCBC(id *a1, uint64_t *a2, uint64_t a3, uint64_t a4, _QWORD *a5, double a6, double a7)
{
  double v14;
  double v15;
  uint64_t v16;
  uint64_t v17;
  double v18;
  uint64_t v19;
  double v20;
  double v21;
  double v22;
  double *result;
  double *v24;
  double v25;
  double v26;
  uint64_t v27;
  uint64_t *v28;
  double v29;
  __int128 v30;
  __int128 v31;
  double *v32;
  __int128 v33;
  double *v34;
  double v35;
  double v36;
  char v37;
  double v38;
  __int128 v39;
  double v40;

  v14 = *(double *)(a4 + 32);
  v15 = *(double *)a4;
  v38 = *(double *)(a4 + 8);
  v30 = *(_OWORD *)(a4 + 16);
  v39 = v30;
  v40 = v14;
  v16 = sub_5F7DC(a3, (char *)&dword_0 + 1);
  if (*(_QWORD *)(a3 + 32) != v16)
  {
    v17 = v16;
    sub_658DC((uint64_t)&v37, 0, *(_QWORD *)(v16 + 40), *(_QWORD *)(v16 + 48), *(double *)&v30);
    *(double *)(v17 + 72) = v18;
    *(_QWORD *)(v17 + 80) = v19;
    v20 = *(double *)&v39 - v18;
    v21 = v15 - *(double *)&v39 + v20 * 0.5;
    v22 = v20 * 0.5;
    if (*(_QWORD *)(a4 + 56) == 2)
      v22 = v21;
    v35 = a6 + v22;
    v36 = a7 + v38;
    *(_QWORD *)&v33 = &v38;
    *((_QWORD *)&v33 + 1) = a2;
    v34 = &v35;
    sub_91EE8(a5, (uint64_t *)v17, (uint64_t *)(v17 + 96), &v33);
    sub_92240(v17, &dword_4, a2, (uint64_t)a5, v35, v36);
    sub_5FA24(v17, 1);
    objc_msgSend(*a1, "addObjectsFromArray:", *(_QWORD *)(v17 + 88));
  }
  result = (double *)sub_5F7DC(a3, (char *)&dword_0 + 2);
  if (*(double **)(a3 + 32) != result)
  {
    v24 = result;
    sub_658DC((uint64_t)&v37, 0, *((_QWORD *)result + 5), *((_QWORD *)result + 6), v40);
    v26 = v25;
    v24[9] = v25;
    *((_QWORD *)v24 + 10) = v27;
    v28 = (uint64_t *)sub_5F7DC(a3, (char *)&dword_0 + 2);
    v29 = v15 - v40 + (v40 - v26) * 0.5;
    if (*(_QWORD *)(a4 + 56) == 2)
      v29 = (v40 - v26) * 0.5;
    v35 = a6 + v29;
    v36 = a7 + v38;
    *(_QWORD *)&v31 = &v38;
    *((_QWORD *)&v31 + 1) = a2;
    v32 = &v35;
    sub_92400(a5, v28, v28 + 12, &v31);
    sub_92240((uint64_t)v24, &dword_4, a2, (uint64_t)a5, v35, v36);
    sub_5FA24((uint64_t)v24, 1);
    return (double *)objc_msgSend(*a1, "addObjectsFromArray:", *((_QWORD *)v24 + 11));
  }
  return result;
}

uint64_t sub_8FED0(uint64_t a1)
{
  void *v2;
  void **v4;

  v2 = *(void **)(a1 + 104);
  if (v2)
  {
    *(_QWORD *)(a1 + 112) = v2;
    operator delete(v2);
  }
  v4 = (void **)(a1 + 80);
  sub_90B30(&v4);
  return a1;
}

void sub_9005C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_90284(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_907E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12)
{
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;

  _Unwind_Resume(a1);
}

void sub_909A4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

NSMutableArray **sub_90AE0(NSMutableArray **a1)
{
  NSMutableArray *v2;
  NSMutableArray *v3;

  *a1 = 0;
  v2 = objc_opt_new(NSMutableArray);
  v3 = *a1;
  *a1 = v2;

  return a1;
}

void sub_90B1C(_Unwind_Exception *a1)
{
  id *v1;

  _Unwind_Resume(a1);
}

void sub_90B30(void ***a1)
{
  void **v2;

  v2 = *a1;
  if (*v2)
  {
    sub_90B70((uint64_t *)v2);
    operator delete(**a1);
  }
}

void sub_90B70(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;

  v3 = *a1;
  v2 = a1[1];
  if (v2 != *a1)
  {
    v4 = a1[1];
    do
    {
      v6 = *(void **)(v4 - 24);
      v4 -= 24;
      v5 = v6;
      if (v6)
      {
        *(_QWORD *)(v2 - 16) = v5;
        operator delete(v5);
      }
      v2 = v4;
    }
    while (v4 != v3);
  }
  a1[1] = v3;
}

void sub_90BC4(unint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  unint64_t v4;
  _QWORD *v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  unint64_t v14;
  double *v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  double v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  double v24;
  uint64_t v25;

  *a2 = 0;
  a2[1] = 0;
  a2[2] = 0;
  v4 = *a1;
  v25 = 0x7FF8000000000000;
  sub_65CE0((uint64_t)a2, v4, &v25);
  v5 = (_QWORD *)*a2;
  *(_QWORD *)*a2 = 0;
  v6 = *a1;
  v7 = 8 * *a1;
  if (*a1 >= 2)
  {
    v8 = a1[1];
    v9 = 1;
    do
    {
      v10 = 0;
      v11 = 0;
      v12 = NAN;
      v13 = 2;
      v14 = v8;
      do
      {
        v15 = (double *)(v14 - 8 * (v10 >> 1));
        if (v12 < *v15 + *(double *)&v5[v11])
          v12 = *v15 + *(double *)&v5[v11];
        ++v11;
        v14 += v7 - 8;
        v10 += v13;
        v13 += 2;
      }
      while (v9 != v11);
      *(double *)&v5[v9++] = v12;
      v8 += 8;
    }
    while (v9 != v6);
  }
  if (v6)
  {
    v16 = v6 - 1;
    v17 = v7 - 16;
    v18 = v7 - 8;
    do
    {
      v19 = *(double *)&v5[--v6];
      if (v6)
      {
        v20 = 0;
        v21 = 0;
        v22 = a1[1] + v17;
        v23 = 2;
        do
        {
          v24 = v19 - *(double *)(v22 - 8 * (v20 >> 1));
          if (v24 >= *(double *)&v5[v21])
            v24 = *(double *)&v5[v21];
          *(double *)&v5[v21++] = v24;
          v22 += v18;
          v20 += v23;
          v23 += 2;
        }
        while (v16 != v21);
      }
      --v16;
      v17 -= 8;
    }
    while (v6);
  }
}

void sub_90D3C(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void *v3;

  v3 = *(void **)v1;
  if (*(_QWORD *)v1)
  {
    *(_QWORD *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

void sub_90D58(_QWORD *a1, size_t size, uint64_t a3, __int128 *a4)
{
  NSMutableIndexSet *v4;
  unint64_t v5;
  unint64_t v6;
  _QWORD *v7;
  _OWORD *v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  uint64_t *v15;
  uint64_t *v16;
  uint64_t *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  _QWORD *v30;
  _QWORD *v32;
  uint64_t v33;
  unint64_t v34;
  _OWORD *v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  unint64_t v45;
  _QWORD v46[5];
  __int128 v47;
  uint64_t v48;
  _OWORD *v49;
  _QWORD v50[5];
  __int128 v51;
  uint64_t v52;
  _OWORD *v53;
  _OWORD ptr[32];

  if (a1[14] != a1[15])
  {
    v45 = 0;
    v4 = 0;
    v5 = 64;
    memset(ptr, 0, sizeof(ptr));
    v7 = *(_QWORD **)size;
    v6 = *(_QWORD *)(size + 8);
    v8 = ptr;
    v9 = *(_QWORD *)(size + 16);
    v32 = *(_QWORD **)size;
    v33 = a3;
LABEL_3:
    while (1)
    {
      v10 = v9;
      if (v6 == *(_QWORD *)(a3 + 8) && v9 == *(_QWORD *)(a3 + 16))
        break;
      v11 = *(_QWORD *)(*v7 + 88 * v6);
      v36 = v6;
      if (v45 >= v5)
      {
        v12 = v5 + 64;
        v37 = v12;
        if (v8 == ptr)
        {
          v8 = malloc_type_malloc(8 * v12, 0x2004093837F09uLL);
          memcpy(v8, ptr, 8 * v45);
        }
        else
        {
          v8 = malloc_type_realloc(v8, 8 * v12, 0x2004093837F09uLL);
        }
      }
      else
      {
        v37 = v5;
      }
      v13 = a1;
      v34 = v10;
      v35 = v8;
      v43 = (uint64_t *)(v11 + 96 * v10);
      *((_QWORD *)v8 + v45) = v43;
      v38 = v43[7];
      if (v43[6] != v38)
      {
        v14 = 0;
        v15 = (uint64_t *)(v11 + 96 * v10);
        v16 = v15 + 1;
        v17 = v15 + 2;
        v18 = v15 + 3;
        v19 = v43[6];
        do
        {
          v39 = v19;
          v40 = *(_QWORD *)(v19 + 16);
          v20 = *(_QWORD *)(v19 + 8);
          if (v20 != v40)
          {
            do
            {
              v21 = v20;
              v22 = v13[8];
              v41 = v21;
              v23 = (*(_QWORD *)(v21 + 8) - v22) >> 3;
              v24 = *(_QWORD *)(v21 + 16) - v22;
              if (v23 < v24 >> 3)
              {
                v42 = v24 >> 3;
                do
                {
                  v25 = *(_QWORD *)(v13[11] + 8 * v23);
                  if (v25 != -1)
                  {
                    if (!v4)
                      v4 = objc_opt_new(NSMutableIndexSet);
                    do
                    {
                      if ((-[NSMutableIndexSet containsIndex:](v4, "containsIndex:", v25) & 1) == 0)
                      {
                        v26 = v13[14] + 152 * v25;
                        *(_QWORD *)v26 = -1;
                        *(_OWORD *)(v26 + 8) = 0u;
                        *(_OWORD *)(v26 + 24) = 0u;
                        *(_OWORD *)(v26 + 40) = 0u;
                        -[NSMutableIndexSet addIndex:](v4, "addIndex:", v25);
                      }
                      v27 = v23;
                      v28 = v13[14];
                      sub_665AC((_QWORD *)(v28 + 152 * v25), v45, *v43, *v16, v14, *v17, *v18, 1uLL);
                      v25 = *(_QWORD *)(v28 + 152 * v25 + 128);
                      v23 = v27;
                      v13 = a1;
                    }
                    while (v25 != -1);
                  }
                  ++v23;
                }
                while (v23 != v42);
              }
              v20 = v41 + 96;
            }
            while (v41 + 96 != v40);
          }
          ++v14;
          v19 = v39 + 64;
        }
        while (v39 + 64 != v38);
      }
      v9 = 0;
      ++v45;
      v7 = v32;
      a3 = v33;
      v6 = 0x2E8BA2E8BA2E8BA3 * ((uint64_t)(v32[1] - *v32) >> 3);
      v8 = v35;
      v29 = v36;
      v5 = v37;
      if (v36 < v6)
      {
        v9 = v34 + 1;
        v30 = (_QWORD *)(*v32 + 88 * v36 + 8);
        while (v9 >= 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*v30 - *(v30 - 1)) >> 5))
        {
          v9 = 0;
          ++v29;
          v30 += 11;
          if (v6 == v29)
            goto LABEL_3;
        }
        v6 = v29;
      }
    }
    v50[0] = _NSConcreteStackBlock;
    v50[1] = 3221225472;
    v50[2] = sub_91744;
    v50[3] = &unk_23F1C8;
    v50[4] = a1;
    v51 = *a4;
    v52 = *((_QWORD *)a4 + 2);
    v53 = v8;
    -[NSMutableIndexSet enumerateRangesUsingBlock:](v4, "enumerateRangesUsingBlock:", v50);
    v46[0] = _NSConcreteStackBlock;
    v46[1] = 3221225472;
    v46[2] = sub_91878;
    v46[3] = &unk_23F1C8;
    v46[4] = a1;
    v47 = *a4;
    v48 = *((_QWORD *)a4 + 2);
    v49 = v8;
    -[NSMutableIndexSet enumerateRangesWithOptions:usingBlock:](v4, "enumerateRangesWithOptions:usingBlock:", 2, v46);
    if (v8 != ptr)
      free(v8);

  }
}

void sub_9119C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

uint64_t sub_911C0(uint64_t *a1, __int128 **a2)
{
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[2];
  char *v15;
  char *v16;
  uint64_t *v17;

  v3 = *a1;
  v4 = 0xAAAAAAAAAAAAAAABLL * ((a1[1] - *a1) >> 3);
  v5 = v4 + 1;
  if (v4 + 1 > 0xAAAAAAAAAAAAAAALL)
    sub_6F9C();
  v7 = (uint64_t)(a1 + 2);
  v8 = 0xAAAAAAAAAAAAAAABLL * ((a1[2] - v3) >> 3);
  if (2 * v8 > v5)
    v5 = 2 * v8;
  if (v8 >= 0x555555555555555)
    v9 = 0xAAAAAAAAAAAAAAALL;
  else
    v9 = v5;
  v17 = a1 + 2;
  if (v9)
    v10 = (char *)sub_14C10(v7, v9);
  else
    v10 = 0;
  v11 = &v10[24 * v4];
  v14[0] = v10;
  v14[1] = v11;
  v15 = v11;
  v16 = &v10[24 * v9];
  *(_QWORD *)v11 = 0;
  *((_QWORD *)v11 + 1) = 0;
  *((_QWORD *)v11 + 2) = 0;
  sub_9158C(v11, *a2, a2[1], a2[1] - *a2);
  v15 += 24;
  sub_912D4(a1, v14);
  v12 = a1[1];
  sub_91484((uint64_t)v14);
  return v12;
}

void sub_912C0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_91484((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_912D4(uint64_t *a1, _QWORD *a2)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  result = sub_91348((uint64_t)(a1 + 2), a1[1], a1[1], *a1, *a1, a2[1], a2[1]);
  a2[1] = v5;
  v6 = *a1;
  *a1 = v5;
  a2[1] = v6;
  v7 = a1[1];
  a1[1] = a2[2];
  a2[2] = v7;
  v8 = a1[2];
  a1[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

uint64_t sub_91348(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  __int128 *v11;
  __int128 *v12;
  uint64_t v13;
  _QWORD v15[3];
  char v16;
  __int128 v17;
  __int128 v18;

  v7 = a7;
  *(_QWORD *)&v18 = a6;
  *((_QWORD *)&v18 + 1) = a7;
  v17 = v18;
  v15[0] = a1;
  v15[1] = &v17;
  v15[2] = &v18;
  v16 = 0;
  if (a3 == a5)
  {
    v13 = a6;
  }
  else
  {
    v9 = a3;
    do
    {
      *(_QWORD *)(v7 - 24) = 0;
      *(_QWORD *)(v7 - 16) = 0;
      v10 = v7 - 24;
      *(_QWORD *)(v10 + 16) = 0;
      v11 = *(__int128 **)(v9 - 24);
      v12 = *(__int128 **)(v9 - 16);
      v9 -= 24;
      sub_9158C((char *)v10, v11, v12, v12 - v11);
      v7 = *((_QWORD *)&v18 + 1) - 24;
      *((_QWORD *)&v18 + 1) -= 24;
    }
    while (v9 != a5);
    v13 = v18;
  }
  v16 = 1;
  sub_9140C((uint64_t)v15);
  return v13;
}

void sub_913F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_9140C((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_9140C(uint64_t a1)
{
  if (!*(_BYTE *)(a1 + 24))
    sub_91440(a1);
  return a1;
}

void sub_91440(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;

  v1 = *(_QWORD *)(*(_QWORD *)(a1 + 16) + 8);
  v2 = *(_QWORD *)(*(_QWORD *)(a1 + 8) + 8);
  while (v1 != v2)
  {
    v3 = *(void **)v1;
    if (*(_QWORD *)v1)
    {
      *(_QWORD *)(v1 + 8) = v3;
      operator delete(v3);
    }
    v1 += 24;
  }
}

uint64_t sub_91484(uint64_t a1)
{
  sub_914B8(a1, *(_QWORD *)(a1 + 8));
  if (*(_QWORD *)a1)
    operator delete(*(void **)a1);
  return a1;
}

void sub_914B8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *v5;

  v2 = *(_QWORD *)(a1 + 16);
  while (v2 != a2)
  {
    v5 = *(void **)(v2 - 24);
    *(_QWORD *)(a1 + 16) = v2 - 24;
    if (v5)
    {
      *(_QWORD *)(v2 - 16) = v5;
      operator delete(v5);
      v2 = *(_QWORD *)(a1 + 16);
    }
    else
    {
      v2 -= 24;
    }
  }
}

_QWORD *sub_91510(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;

  *a1 = a2;
  a1[1] = 0;
  a1[2] = 0;
  a1[3] = 0;
  v4 = 0x7FF8000000000000;
  sub_65CE0((uint64_t)(a1 + 1), (unint64_t)((a2 - 1) * a2) >> 1, &v4);
  return a1;
}

void sub_91570(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void **v2;
  void *v4;

  v4 = *v2;
  if (*v2)
  {
    *(_QWORD *)(v1 + 16) = v4;
    operator delete(v4);
  }
  _Unwind_Resume(exception_object);
}

char *sub_9158C(char *result, __int128 *a2, __int128 *a3, unint64_t a4)
{
  char *v6;
  _OWORD *v7;
  __int128 v8;

  if (a4)
  {
    v6 = result;
    result = sub_2A0A0(result, a4);
    v7 = (_OWORD *)*((_QWORD *)v6 + 1);
    while (a2 != a3)
    {
      v8 = *a2++;
      *v7++ = v8;
    }
    *((_QWORD *)v6 + 1) = v7;
  }
  return result;
}

void sub_915E0(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void *v3;

  v3 = *(void **)v1;
  if (*(_QWORD *)v1)
  {
    *(_QWORD *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

char *sub_915FC(char *result, char *__src, uint64_t a3, unint64_t a4)
{
  _QWORD *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  void **v12;
  char *v13;
  _BYTE *v14;
  unint64_t v15;
  char *v16;
  size_t v17;
  void *v18;
  char *v19;

  v7 = result;
  v8 = *((_QWORD *)result + 2);
  v9 = *(char **)result;
  if (a4 > (v8 - *(_QWORD *)result) >> 3)
  {
    if (v9)
    {
      *((_QWORD *)result + 1) = v9;
      operator delete(v9);
      v8 = 0;
      *v7 = 0;
      v7[1] = 0;
      v7[2] = 0;
    }
    if (a4 >> 61)
      sub_6F9C();
    v10 = v8 >> 2;
    if (v8 >> 2 <= a4)
      v10 = a4;
    if ((unint64_t)v8 >= 0x7FFFFFFFFFFFFFF8)
      v11 = 0x1FFFFFFFFFFFFFFFLL;
    else
      v11 = v10;
    result = sub_91704(v7, v11);
    v13 = (char *)v7[1];
    v12 = (void **)(v7 + 1);
    v9 = v13;
LABEL_16:
    v17 = a3 - (_QWORD)__src;
    if (v17)
    {
      v18 = v9;
      v19 = __src;
      goto LABEL_18;
    }
    goto LABEL_19;
  }
  v12 = (void **)(result + 8);
  v14 = (_BYTE *)*((_QWORD *)result + 1);
  v15 = (v14 - v9) >> 3;
  if (v15 >= a4)
    goto LABEL_16;
  v16 = &__src[8 * v15];
  if (v14 != v9)
  {
    result = (char *)memmove(*(void **)result, __src, v14 - v9);
    v9 = (char *)*v12;
  }
  v17 = a3 - (_QWORD)v16;
  if (v17)
  {
    v18 = v9;
    v19 = v16;
LABEL_18:
    result = (char *)memmove(v18, v19, v17);
  }
LABEL_19:
  *v12 = &v9[v17];
  return result;
}

char *sub_91704(_QWORD *a1, unint64_t a2)
{
  char *result;
  uint64_t v4;

  if (a2 >> 61)
    sub_6F9C();
  result = (char *)sub_39CC4((uint64_t)(a1 + 2), a2);
  *a1 = result;
  a1[1] = result;
  a1[2] = &result[8 * v4];
  return result;
}

_QWORD *sub_91744(_QWORD *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  double v11;
  double *v12;
  double v13;
  uint64_t v14;
  double v15;
  double v16;
  double v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  CGFloat *p_y;
  double v24;
  double v25;
  const CGPoint *v26;
  double v27;
  double x;

  if (a3)
  {
    v3 = a3;
    v4 = result;
    v5 = result[4];
    v6 = 152 * a2 + 120;
    do
    {
      v7 = *(_QWORD *)(v5 + 112);
      v8 = *(_QWORD *)(v7 + v6 - 112);
      v9 = *(_QWORD *)(v7 + v6 - 88);
      v10 = v4[5];
      if (v9 <= 1)
        v9 = 1;
      if (*(_QWORD *)(v10 + 56) == 2)
      {
        v11 = 0.0;
        if (!*(_BYTE *)(v10 + 64))
          v11 = *(double *)(v10 + 16) + *(double *)(v10 + 32);
        v12 = *(double **)(v10 + 72);
        v13 = *(double *)(*(_QWORD *)(v10 + 80) - 8)
            - *v12
            - *(double *)(v10 + 40)
            + v11
            - v12[v8]
            - (v12[v9 + v8]
             - v12[v8]
             - *(double *)(v10 + 40));
      }
      else
      {
        v13 = *(double *)(*(_QWORD *)(v10 + 72) + 8 * v8);
      }
      v14 = v4[7];
      v15 = *(double *)(*(_QWORD *)v4[6] + 8 * *(_QWORD *)(v7 + v6 - 96));
      v16 = *(double *)(v14 + 48);
      v17 = *(double *)(v14 + 56);
      v18 = v7 + v6;
      v19 = *(void **)(v7 + v6);
      v20 = *(_QWORD *)(v7 + v6 + 8);
      v21 = v7 + 152 * v20;
      v22 = v20 == -1;
      p_y = &CGPointZero.y;
      if (!v22)
        p_y = (CGFloat *)(v21 + 144);
      v24 = v13 + v16;
      v25 = v15 + v17;
      v26 = (const CGPoint *)(v21 + 136);
      if (v22)
        v26 = &CGPointZero;
      v27 = *p_y;
      x = v26->x;
      *(double *)(v18 + 16) = v24;
      *(double *)(v18 + 24) = v25;
      result = objc_msgSend(v19, "setComputedOrigin:", v24 - x, v25 - v27);
      v6 += 152;
      --v3;
    }
    while (v3);
  }
  return result;
}

void sub_91878(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  id *v7;
  unint64_t v8;
  double v9;
  double v10;
  void *v11;

  if (a3)
  {
    v3 = a3;
    v5 = *(_QWORD *)(a1 + 32);
    v6 = 152 * (a2 + a3) - 32;
    do
    {
      v7 = (id *)(*(_QWORD *)(v5 + 112) + v6);
      v8 = (unint64_t)*(v7 - 11);
      if (v8 <= 1)
        v8 = 1;
      v9 = *(double *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 72) + 8 * ((_QWORD)*(v7 - 14) + v8))
         - *(double *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 72) + 8 * (_QWORD)*(v7 - 14))
         - *(double *)(*(_QWORD *)(a1 + 40) + 40);
      v10 = *(double *)(**(_QWORD **)(a1 + 48) + 8 * ((uint64_t)*(v7 - 12) + (_QWORD)*(v7 - 9)))
          - *(double *)(**(_QWORD **)(a1 + 48) + 8 * (_QWORD)*(v7 - 12));
      v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*v7, "controller"));
      objc_msgSend(v11, "validateGroupedContainingLayout:withSize:", *v7, v9, v10);

      v6 -= 152;
      --v3;
    }
    while (v3);
  }
}

void sub_91948(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

uint64_t sub_91958(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;

  v4 = a1;
  if (a1 != a2)
  {
    do
    {
      sub_919B4(a3, v4);
      v4 += 40;
      a3 += 40;
    }
    while (v4 != a2);
    return a2;
  }
  return v4;
}

uint64_t sub_919B4(uint64_t a1, uint64_t a2)
{
  __int128 v3;

  if (a1 != a2)
  {
    v3 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v3;
    objc_storeStrong((id *)(a1 + 32), *(id *)(a2 + 32));
  }
  return a1;
}

uint64_t sub_919F0(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  char *v10;
  char *v11;
  __int128 v12;
  uint64_t v13;
  _QWORD v15[5];

  v3 = *a1;
  v4 = 0xCCCCCCCCCCCCCCCDLL * ((a1[1] - *a1) >> 3);
  v5 = v4 + 1;
  if (v4 + 1 > 0x666666666666666)
    sub_6F9C();
  v7 = (uint64_t)(a1 + 2);
  v8 = 0xCCCCCCCCCCCCCCCDLL * ((a1[2] - v3) >> 3);
  if (2 * v8 > v5)
    v5 = 2 * v8;
  if (v8 >= 0x333333333333333)
    v9 = 0x666666666666666;
  else
    v9 = v5;
  v15[4] = a1 + 2;
  if (v9)
    v10 = (char *)sub_672A4(v7, v9);
  else
    v10 = 0;
  v11 = &v10[40 * v4];
  v15[0] = v10;
  v15[1] = v11;
  v15[3] = &v10[40 * v9];
  v12 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)v11 = *(_OWORD *)a2;
  *((_OWORD *)v11 + 1) = v12;
  *((_QWORD *)v11 + 4) = *(id *)(a2 + 32);
  v15[2] = v11 + 40;
  sub_91AF8(a1, v15);
  v13 = a1[1];
  sub_91BAC((uint64_t)v15);
  return v13;
}

void sub_91AE4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_91BAC((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t *sub_91AF8(uint64_t *result, _QWORD *a2)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v3 = result;
  v5 = *result;
  v4 = result[1];
  v6 = a2[1];
  if (v4 == *result)
  {
    v7 = a2[1];
  }
  else
  {
    do
    {
      v7 = v6 - 40;
      v8 = v4 - 40;
      v9 = *(_OWORD *)(v4 - 40);
      *(_OWORD *)(v6 - 24) = *(_OWORD *)(v4 - 24);
      *(_OWORD *)(v6 - 40) = v9;
      result = (uint64_t *)*(id *)(v4 - 8);
      *(_QWORD *)(v6 - 8) = result;
      v6 -= 40;
      v4 = v8;
    }
    while (v8 != v5);
  }
  a2[1] = v7;
  v10 = *v3;
  *v3 = v7;
  a2[1] = v10;
  v11 = v3[1];
  v3[1] = a2[2];
  a2[2] = v11;
  v12 = v3[2];
  v3[2] = a2[3];
  a2[3] = v12;
  *a2 = a2[1];
  return result;
}

uint64_t sub_91BAC(uint64_t a1)
{
  uint64_t i;
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 8);
  for (i = *(_QWORD *)(a1 + 16); i != v3; i = *(_QWORD *)(a1 + 16))
  {
    *(_QWORD *)(a1 + 16) = i - 40;

  }
  if (*(_QWORD *)a1)
    operator delete(*(void **)a1);
  return a1;
}

double sub_91BFC(uint64_t a1, int a2, uint64_t a3, uint64_t a4, double a5, double a6)
{
  uint64_t v8;
  double v11;
  double v12;
  double v13;
  double v14;

  if (a3 == a4)
    return 0.0;
  v8 = a3;
  v11 = 0.0;
  v12 = 0.0;
  do
  {
    v13 = sub_91CA0(v8, a2, a1, NAN, a6);
    if (v12 < v14)
      v12 = v14;
    v11 = v11 + v13;
    v8 += 64;
  }
  while (v8 != a4);
  return v11;
}

double sub_91CA0(uint64_t a1, int a2, uint64_t a3, double a4, double a5)
{
  uint64_t v6;
  uint64_t v7;
  double i;
  double width;
  double v14;
  double v15;

  v6 = *(_QWORD *)(a1 + 8);
  v7 = *(_QWORD *)(a1 + 16);
  width = CGSizeZero.width;
  for (i = CGSizeZero.height; v6 != v7; v6 += 96)
  {
    v14 = sub_91D44(v6, a2, a3, a4, a5);
    if (width < v14)
      width = v14;
    if (i < v15)
      i = v15;
  }
  *(double *)(a1 + 48) = width;
  *(double *)(a1 + 56) = i;
  return width;
}

double sub_91D44(uint64_t a1, int a2, uint64_t a3, double a4, double a5)
{
  double v6;
  uint64_t v7;

  v6 = sub_91DBC(a4 - (*(double *)(a1 + 72) + *(double *)(a1 + 88)), a5 - (*(double *)(a1 + 64) + *(double *)(a1 + 80)), a3, a2, *(id **)(a1 + 8), *(id **)(a1 + 16));
  *(double *)(a1 + 40) = v6;
  *(_QWORD *)(a1 + 48) = v7;
  return v6 + *(double *)(a1 + 72) + *(double *)(a1 + 88);
}

double sub_91DBC(double a1, double a2, uint64_t a3, int a4, id *a5, id *a6)
{
  id *v8;
  double v9;
  double v10;
  double v11;
  id v12;
  double v13;
  double v14;

  if (a5 == a6)
    return 0.0;
  v8 = a5;
  if (a4)
    v9 = a2;
  else
    v9 = NAN;
  v10 = 0.0;
  v11 = 0.0;
  do
  {
    objc_msgSend(*v8, "setContainingWidth:", NAN);
    objc_msgSend(*v8, "setContainingHeight:", a2);
    objc_msgSend(*v8, "setFlexedWidth:", NAN);
    objc_msgSend(*v8, "setFlexedHeight:", v9);
    objc_msgSend(*v8, "validateLayout");
    v12 = *v8++;
    objc_msgSend(v12, "computedNaturalSize");
    if (v11 < v14)
      v11 = v14;
    v10 = v10 + v13;
  }
  while (v8 != a6);
  return v10;
}

uint64_t sub_91E90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  void *v6;

  result = CGRectEqualToRect(*(CGRect *)a2, *(CGRect *)a3);
  if ((_DWORD)result)
  {
    v6 = *(void **)(a2 + 32);
    if (v6 == *(void **)(a3 + 32))
      return 1;
    else
      return (uint64_t)objc_msgSend(v6, "isEqual:");
  }
  return result;
}

void sub_91EE8(_QWORD *a1, uint64_t *size, uint64_t *a3, __int128 *a4)
{
  uint64_t *v4;
  NSMutableIndexSet *v6;
  unint64_t v7;
  unint64_t v8;
  _OWORD *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v22;
  _OWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD v29[5];
  __int128 v30;
  uint64_t v31;
  _OWORD *v32;
  _QWORD v33[5];
  __int128 v34;
  uint64_t v35;
  _OWORD *v36;
  _OWORD ptr[32];

  if (a1[14] != a1[15])
  {
    v4 = size;
    memset(ptr, 0, sizeof(ptr));
    if (size == a3)
    {
      v6 = 0;
      v9 = ptr;
    }
    else
    {
      v6 = 0;
      v7 = 0;
      v8 = 64;
      v9 = ptr;
      do
      {
        if (v7 >= v8)
        {
          v8 += 64;
          if (v9 == ptr)
          {
            v9 = malloc_type_malloc(8 * v8, 0x2004093837F09uLL);
            memcpy(v9, ptr, 8 * v7);
          }
          else
          {
            v9 = malloc_type_realloc(v9, 8 * v8, 0x2004093837F09uLL);
          }
        }
        v22 = v8;
        v23 = v9;
        *((_QWORD *)v9 + v7) = v4;
        v10 = v4[5];
        v24 = v4[6];
        if (v10 != v24)
        {
          v11 = 0;
          do
          {
            v25 = v10;
            v13 = *(_QWORD *)(v10 + 8);
            v12 = *(_QWORD *)(v10 + 16);
            v26 = v12;
            while (v13 != v12)
            {
              v14 = a1[8];
              v27 = v13;
              v15 = (*(_QWORD *)(v13 + 8) - v14) >> 3;
              v16 = *(_QWORD *)(v13 + 16) - v14;
              if (v15 < v16 >> 3)
              {
                v28 = v16 >> 3;
                do
                {
                  v17 = *(_QWORD *)(a1[11] + 8 * v15);
                  if (v17 != -1)
                  {
                    if (!v6)
                      v6 = objc_opt_new(NSMutableIndexSet);
                    do
                    {
                      if ((-[NSMutableIndexSet containsIndex:](v6, "containsIndex:", v17) & 1) == 0)
                      {
                        v18 = a1[14] + 152 * v17;
                        *(_QWORD *)v18 = -1;
                        *(_OWORD *)(v18 + 8) = 0u;
                        *(_OWORD *)(v18 + 24) = 0u;
                        *(_OWORD *)(v18 + 40) = 0u;
                        -[NSMutableIndexSet addIndex:](v6, "addIndex:", v17);
                      }
                      v19 = a1[14];
                      sub_665AC((_QWORD *)(v19 + 152 * v17), v7, *v4, v4[1], v11, v4[2], v4[3], 1uLL);
                      v17 = *(_QWORD *)(v19 + 152 * v17 + 128);
                    }
                    while (v17 != -1);
                  }
                  ++v15;
                }
                while (v15 != v28);
              }
              v12 = v26;
              v13 = v27 + 96;
            }
            ++v11;
            v10 = v25 + 64;
          }
          while (v25 + 64 != v24);
        }
        ++v7;
        v4 += 12;
        v8 = v22;
        v9 = v23;
      }
      while (v4 != a3);
    }
    v33[0] = _NSConcreteStackBlock;
    v33[1] = 3221225472;
    v33[2] = sub_92758;
    v33[3] = &unk_23F1C8;
    v33[4] = a1;
    v34 = *a4;
    v35 = *((_QWORD *)a4 + 2);
    v36 = v9;
    -[NSMutableIndexSet enumerateRangesUsingBlock:](v6, "enumerateRangesUsingBlock:", v33);
    v29[0] = _NSConcreteStackBlock;
    v29[1] = 3221225472;
    v29[2] = sub_92814;
    v29[3] = &unk_23F1C8;
    v29[4] = a1;
    v30 = *a4;
    v31 = *((_QWORD *)a4 + 2);
    v32 = v9;
    -[NSMutableIndexSet enumerateRangesWithOptions:usingBlock:](v6, "enumerateRangesWithOptions:usingBlock:", 2, v29);
    if (v9 != ptr)
      free(v9);

  }
}

void sub_9221C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_92240(uint64_t a1, int *a2, uint64_t *a3, uint64_t a4, double a5, double a6)
{
  uint64_t v6;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  double v15;
  uint64_t v16;
  id v17;
  unint64_t v18;
  double v19;
  double v20;
  id v21;
  int *v22;
  double v23;
  int *v24;
  double v25;
  double v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  const CGPoint *v31;
  CGFloat *p_y;
  BOOL v33;
  const CGPoint *v34;
  uint64_t v35;

  v6 = *(_QWORD *)(a1 + 40);
  v35 = *(_QWORD *)(a1 + 48);
  if (v6 != v35)
  {
    v11 = 0;
    v12 = (a3[1] - *a3) >> 3;
    do
    {
      if (v11 >= v12)
        v13 = v12 - 1;
      else
        v13 = v11;
      v14 = *a3;
      v15 = *(double *)(*a3 + 8 * v13);
      if (*(_QWORD *)v6)
      {
        v16 = (uint64_t)objc_msgSend(*(id *)v6, "span");
        v14 = *a3;
        v17 = *(id *)v6;
      }
      else
      {
        v17 = 0;
        v16 = 1;
      }
      v11 += v16;
      if (v11 >= v12)
        v18 = v12 - 1;
      else
        v18 = v11;
      v19 = *(double *)(v14 + 8 * v18);
      v20 = *(double *)(v6 + 56);
      v21 = v17;
      v22 = (int *)objc_msgSend(v21, "valign");
      v23 = v19 - v15;

      v24 = a2;
      if (v22)
        v24 = v22;
      if (v24 == (int *)((char *)&dword_0 + 1) || v24 == (int *)((char *)&dword_0 + 3))
      {
        v25 = v23 - v20;
      }
      else
      {
        v25 = (v23 - v20) * 0.5;
        if (v24 != &dword_4)
          v25 = 0.0;
      }
      v26 = a6 + v15 + v25;
      *(double *)(v6 + 32) = a5;
      *(double *)(v6 + 40) = v26;
      v27 = *(_QWORD *)(v6 + 8);
      v28 = *(_QWORD *)(v6 + 16);
      while (v27 != v28)
      {
        v29 = *(_QWORD *)(v27 + 56);
        v30 = *(_QWORD *)(a4 + 112) + 152 * v29;
        v31 = (const CGPoint *)(v30 + 136);
        p_y = (CGFloat *)(v30 + 144);
        v33 = v29 == -1;
        if (v29 == -1)
          v34 = &CGPointZero;
        else
          v34 = v31;
        if (v33)
          p_y = &CGPointZero.y;
        sub_66990((double *)(v27 + 8), a5 - v34->x + *(double *)(v27 + 72), v26 - *p_y + *(double *)(v27 + 64));
        v27 += 96;
      }
      v6 += 64;
    }
    while (v6 != v35);
  }
}

void sub_923F0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_92400(_QWORD *a1, uint64_t *size, uint64_t *a3, __int128 *a4)
{
  uint64_t *v4;
  NSMutableIndexSet *v6;
  unint64_t v7;
  unint64_t v8;
  _OWORD *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v22;
  _OWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD v29[5];
  __int128 v30;
  uint64_t v31;
  _OWORD *v32;
  _QWORD v33[5];
  __int128 v34;
  uint64_t v35;
  _OWORD *v36;
  _OWORD ptr[32];

  if (a1[14] != a1[15])
  {
    v4 = size;
    memset(ptr, 0, sizeof(ptr));
    if (size == a3)
    {
      v6 = 0;
      v9 = ptr;
    }
    else
    {
      v6 = 0;
      v7 = 0;
      v8 = 64;
      v9 = ptr;
      do
      {
        if (v7 >= v8)
        {
          v8 += 64;
          if (v9 == ptr)
          {
            v9 = malloc_type_malloc(8 * v8, 0x2004093837F09uLL);
            memcpy(v9, ptr, 8 * v7);
          }
          else
          {
            v9 = malloc_type_realloc(v9, 8 * v8, 0x2004093837F09uLL);
          }
        }
        v22 = v8;
        v23 = v9;
        *((_QWORD *)v9 + v7) = v4;
        v10 = v4[5];
        v24 = v4[6];
        if (v10 != v24)
        {
          v11 = 0;
          do
          {
            v25 = v10;
            v13 = *(_QWORD *)(v10 + 8);
            v12 = *(_QWORD *)(v10 + 16);
            v26 = v12;
            while (v13 != v12)
            {
              v14 = a1[8];
              v27 = v13;
              v15 = (*(_QWORD *)(v13 + 8) - v14) >> 3;
              v16 = *(_QWORD *)(v13 + 16) - v14;
              if (v15 < v16 >> 3)
              {
                v28 = v16 >> 3;
                do
                {
                  v17 = *(_QWORD *)(a1[11] + 8 * v15);
                  if (v17 != -1)
                  {
                    if (!v6)
                      v6 = objc_opt_new(NSMutableIndexSet);
                    do
                    {
                      if ((-[NSMutableIndexSet containsIndex:](v6, "containsIndex:", v17) & 1) == 0)
                      {
                        v18 = a1[14] + 152 * v17;
                        *(_QWORD *)v18 = -1;
                        *(_OWORD *)(v18 + 8) = 0u;
                        *(_OWORD *)(v18 + 24) = 0u;
                        *(_OWORD *)(v18 + 40) = 0u;
                        -[NSMutableIndexSet addIndex:](v6, "addIndex:", v17);
                      }
                      v19 = a1[14];
                      sub_665AC((_QWORD *)(v19 + 152 * v17), v7, *v4, v4[1], v11, v4[2], v4[3], 1uLL);
                      v17 = *(_QWORD *)(v19 + 152 * v17 + 128);
                    }
                    while (v17 != -1);
                  }
                  ++v15;
                }
                while (v15 != v28);
              }
              v12 = v26;
              v13 = v27 + 96;
            }
            ++v11;
            v10 = v25 + 64;
          }
          while (v25 + 64 != v24);
        }
        ++v7;
        v4 += 12;
        v8 = v22;
        v9 = v23;
      }
      while (v4 != a3);
    }
    v33[0] = _NSConcreteStackBlock;
    v33[1] = 3221225472;
    v33[2] = sub_928CC;
    v33[3] = &unk_23F1C8;
    v33[4] = a1;
    v34 = *a4;
    v35 = *((_QWORD *)a4 + 2);
    v36 = v9;
    -[NSMutableIndexSet enumerateRangesUsingBlock:](v6, "enumerateRangesUsingBlock:", v33);
    v29[0] = _NSConcreteStackBlock;
    v29[1] = 3221225472;
    v29[2] = sub_92988;
    v29[3] = &unk_23F1C8;
    v29[4] = a1;
    v30 = *a4;
    v31 = *((_QWORD *)a4 + 2);
    v32 = v9;
    -[NSMutableIndexSet enumerateRangesWithOptions:usingBlock:](v6, "enumerateRangesWithOptions:usingBlock:", 2, v29);
    if (v9 != ptr)
      free(v9);

  }
}

void sub_92734(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

_QWORD *sub_92758(_QWORD *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double *v9;
  double v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  CGFloat *p_y;
  double v16;
  double v17;
  const CGPoint *v18;
  double v19;
  double x;

  if (a3)
  {
    v3 = a3;
    v4 = result;
    v5 = result[4];
    v6 = 152 * a2;
    do
    {
      v7 = *(_QWORD *)(v5 + 112);
      v8 = v7 + v6;
      v9 = (double *)v4[7];
      v10 = *(double *)(*(_QWORD *)v4[6] + 8 * *(_QWORD *)(v7 + v6 + 24));
      v11 = *(void **)(v7 + v6 + 120);
      v12 = *(_QWORD *)(v7 + v6 + 128);
      v13 = v7 + 152 * v12;
      v14 = v12 == -1;
      p_y = &CGPointZero.y;
      if (!v14)
        p_y = (CGFloat *)(v13 + 144);
      v16 = *v9 + 0.0;
      v17 = v10 + v9[1];
      v18 = (const CGPoint *)(v13 + 136);
      if (v14)
        v18 = &CGPointZero;
      v19 = *p_y;
      x = v18->x;
      *(double *)(v8 + 136) = v16;
      *(double *)(v8 + 144) = v17;
      result = objc_msgSend(v11, "setComputedOrigin:", v16 - x, v17 - v19);
      v6 += 152;
      --v3;
    }
    while (v3);
  }
  return result;
}

void sub_92814(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double v8;
  double v9;
  void *v10;

  if (a3)
  {
    v3 = a3;
    v5 = *(_QWORD *)(a1 + 32);
    v6 = 152 * (a2 + a3);
    do
    {
      v7 = *(_QWORD *)(v5 + 112) + v6;
      v8 = *(double *)(*(_QWORD *)(a1 + 40) + 8);
      v9 = *(double *)(**(_QWORD **)(a1 + 48) + 8 * (*(_QWORD *)(v7 - 104) + *(_QWORD *)(v7 - 128)))
         - *(double *)(**(_QWORD **)(a1 + 48) + 8 * *(_QWORD *)(v7 - 128));
      v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(v7 - 32), "controller"));
      objc_msgSend(v10, "validateGroupedContainingLayout:withSize:", *(_QWORD *)(v7 - 32), v8, v9);

      v6 -= 152;
      --v3;
    }
    while (v3);
  }
}

void sub_928BC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

_QWORD *sub_928CC(_QWORD *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double *v9;
  double v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  CGFloat *p_y;
  double v16;
  double v17;
  const CGPoint *v18;
  double v19;
  double x;

  if (a3)
  {
    v3 = a3;
    v4 = result;
    v5 = result[4];
    v6 = 152 * a2;
    do
    {
      v7 = *(_QWORD *)(v5 + 112);
      v8 = v7 + v6;
      v9 = (double *)v4[7];
      v10 = *(double *)(*(_QWORD *)v4[6] + 8 * *(_QWORD *)(v7 + v6 + 24));
      v11 = *(void **)(v7 + v6 + 120);
      v12 = *(_QWORD *)(v7 + v6 + 128);
      v13 = v7 + 152 * v12;
      v14 = v12 == -1;
      p_y = &CGPointZero.y;
      if (!v14)
        p_y = (CGFloat *)(v13 + 144);
      v16 = *v9 + 0.0;
      v17 = v10 + v9[1];
      v18 = (const CGPoint *)(v13 + 136);
      if (v14)
        v18 = &CGPointZero;
      v19 = *p_y;
      x = v18->x;
      *(double *)(v8 + 136) = v16;
      *(double *)(v8 + 144) = v17;
      result = objc_msgSend(v11, "setComputedOrigin:", v16 - x, v17 - v19);
      v6 += 152;
      --v3;
    }
    while (v3);
  }
  return result;
}

void sub_92988(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double v8;
  double v9;
  void *v10;

  if (a3)
  {
    v3 = a3;
    v5 = *(_QWORD *)(a1 + 32);
    v6 = 152 * (a2 + a3);
    do
    {
      v7 = *(_QWORD *)(v5 + 112) + v6;
      v8 = *(double *)(*(_QWORD *)(a1 + 40) + 8);
      v9 = *(double *)(**(_QWORD **)(a1 + 48) + 8 * (*(_QWORD *)(v7 - 104) + *(_QWORD *)(v7 - 128)))
         - *(double *)(**(_QWORD **)(a1 + 48) + 8 * *(_QWORD *)(v7 - 128));
      v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(v7 - 32), "controller"));
      objc_msgSend(v10, "validateGroupedContainingLayout:withSize:", *(_QWORD *)(v7 - 32), v8, v9);

      v6 -= 152;
      --v3;
    }
    while (v3);
  }
}

void sub_92A30(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_92A40(void ***a1)
{
  void **v1;
  id *v2;
  id *v4;
  void *v5;
  id *v6;

  v1 = *a1;
  v2 = (id *)**a1;
  if (v2)
  {
    v4 = (id *)v1[1];
    v5 = **a1;
    if (v4 != v2)
    {
      do
      {
        v6 = v4 - 5;

        v4 = v6;
      }
      while (v6 != v2);
      v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

uint64_t sub_92C58(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_92C68(uint64_t a1)
{

}

void sub_92C70(uint64_t a1)
{
  uint64_t v2;
  TUIPair *v3;
  TUIPair *v4;
  uint64_t v5;
  void *v6;
  TUIPair *v7;
  uint64_t v8;
  void *v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  void *v24;
  TUIPair *v25;
  uint64_t v26;
  void *v27;
  _QWORD v28[4];
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id location;

  objc_storeWeak((id *)(*(_QWORD *)(a1 + 32) + 64), *(id *)(a1 + 40));
  v2 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 16);
  v3 = [TUIPair alloc];
  v4 = v3;
  v5 = *(_QWORD *)(a1 + 32);
  if (v2)
  {
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(v5 + 16), "from"));
    v7 = -[TUIPair initWithFirst:second:](v4, "initWithFirst:second:", v6, *(_QWORD *)(*(_QWORD *)(a1 + 32) + 32));
    v8 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
    v9 = *(void **)(v8 + 40);
    *(_QWORD *)(v8 + 40) = v7;

    v10 = *(id *)(*(_QWORD *)(a1 + 32) + 16);
    v11 = *(id *)(*(_QWORD *)(a1 + 32) + 32);
    v12 = *(id *)(*(_QWORD *)(a1 + 32) + 8);
    objc_initWeak(&location, *(id *)(a1 + 32));
    v28[0] = _NSConcreteStackBlock;
    v28[1] = 3221225472;
    v28[2] = sub_92E90;
    v28[3] = &unk_240348;
    objc_copyWeak(&v33, &location);
    v29 = *(id *)(a1 + 40);
    v13 = v11;
    v30 = v13;
    v14 = v10;
    v31 = v14;
    v15 = v12;
    v32 = v15;
    v16 = objc_msgSend(v28, "copy");
    v17 = *(_QWORD *)(a1 + 32);
    v18 = *(void **)(v17 + 24);
    *(_QWORD *)(v17 + 24) = v16;

    v19 = *(_QWORD *)(a1 + 32);
    v20 = *(void **)(v19 + 16);
    *(_QWORD *)(v19 + 16) = 0;

    v21 = *(_QWORD *)(a1 + 32);
    v22 = *(void **)(v21 + 32);
    *(_QWORD *)(v21 + 32) = 0;

    v23 = *(_QWORD *)(a1 + 32);
    v24 = *(void **)(v23 + 8);
    *(_QWORD *)(v23 + 8) = 0;

    objc_destroyWeak(&v33);
    objc_destroyWeak(&location);

  }
  else
  {
    v25 = -[TUIPair initWithFirst:second:](v3, "initWithFirst:second:", *(_QWORD *)(v5 + 72), *(_QWORD *)(v5 + 88));
    v26 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
    v27 = *(void **)(v26 + 40);
    *(_QWORD *)(v26 + 40) = v25;

  }
}

void sub_92E74(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 56));
  _Unwind_Resume(a1);
}

void sub_92E90(uint64_t a1)
{
  id WeakRetained;
  void *v3;
  uint64_t v4;
  _QWORD v5[4];
  id v6;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 64));
  if (WeakRetained)
  {
    if ((objc_opt_respondsToSelector(*(_QWORD *)(a1 + 32), "updateHostingMap:controller:") & 1) != 0)
      objc_msgSend(*(id *)(a1 + 32), "updateHostingMap:controller:", *(_QWORD *)(a1 + 40), WeakRetained);
    v3 = *(void **)(a1 + 32);
    v5[0] = _NSConcreteStackBlock;
    v5[1] = 3221225472;
    v5[2] = sub_92F48;
    v5[3] = &unk_23D938;
    v4 = *(_QWORD *)(a1 + 48);
    v6 = *(id *)(a1 + 56);
    objc_msgSend(v3, "applyUpdate:controller:completion:", v4, WeakRetained, v5);

  }
}

id sub_92F48(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "removeAllObjects");
}

void sub_93004(uint64_t a1)
{
  objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), *(id *)(*(_QWORD *)(a1 + 32) + 72));
}

void sub_930CC(uint64_t a1)
{
  TUIPair *v2;
  uint64_t v3;
  void *v4;

  v2 = -[TUIPair initWithFirst:second:]([TUIPair alloc], "initWithFirst:second:", *(_QWORD *)(*(_QWORD *)(a1 + 32) + 72), *(_QWORD *)(*(_QWORD *)(a1 + 32) + 88));
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

void sub_931D0(uint64_t a1)
{
  id v2;
  id WeakRetained;

  v2 = *(id *)(a1 + 32);
  WeakRetained = objc_loadWeakRetained((id *)(*(_QWORD *)(a1 + 40) + 64));

  if (v2 == WeakRetained)
    objc_storeWeak((id *)(*(_QWORD *)(a1 + 40) + 64), 0);
}

id sub_932E4(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_updateWithHostingMap:transactionGroup:", *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48));
}

void sub_9343C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_list va;

  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_93454(uint64_t a1)
{
  id WeakRetained;
  uint64_t v3;
  void *v4;
  uint64_t v5;

  WeakRetained = objc_loadWeakRetained((id *)(*(_QWORD *)(a1 + 32) + 64));
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = WeakRetained;

  objc_storeStrong((id *)(*(_QWORD *)(a1 + 32) + 88), *(id *)(a1 + 40));
  if (!*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40))
  {
    v5 = *(_QWORD *)(a1 + 32);
    if (*(_BYTE *)(v5 + 40))
      objc_storeStrong((id *)(v5 + 32), *(id *)(a1 + 40));
  }
}

id sub_934CC(_QWORD *a1)
{
  return objc_msgSend(*(id *)(*(_QWORD *)(a1[6] + 8) + 40), "updateHostingMap:controller:", a1[4], a1[5]);
}

id sub_935D4(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_updateWithRenderModel:viewState:flags:transactionGroup:", *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 56));
}

void sub_93DC8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,char a60)
{
  _Block_object_dispose(&a60, 8);
  _Unwind_Resume(a1);
}

void sub_93DF8(uint64_t a1)
{
  id WeakRetained;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  id v12;

  WeakRetained = objc_loadWeakRetained((id *)(*(_QWORD *)(a1 + 32) + 64));
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 72) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = WeakRetained;

  objc_storeStrong((id *)(*(_QWORD *)(a1 + 32) + 80), *(id *)(a1 + 40));
  objc_storeStrong((id *)(*(_QWORD *)(a1 + 32) + 72), *(id *)(a1 + 48));
  v5 = *(_QWORD *)(a1 + 32);
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 72) + 8) + 40) || !*(_BYTE *)(v5 + 40))
  {
    v6 = *(void **)(v5 + 16);
    *(_QWORD *)(v5 + 16) = 0;

    v7 = *(_QWORD *)(a1 + 32);
    v8 = *(void **)(v7 + 32);
    *(_QWORD *)(v7 + 32) = 0;

    v9 = *(_QWORD *)(a1 + 32);
    v10 = *(void **)(v9 + 8);
    *(_QWORD *)(v9 + 8) = 0;
  }
  else
  {
    objc_storeStrong((id *)(v5 + 16), *(id *)(a1 + 56));
    v11 = *(_QWORD *)(a1 + 32);
    v12 = *(id *)(a1 + 64);
    v10 = *(void **)(v11 + 8);
    *(_QWORD *)(v11 + 8) = v12;
  }

  *(_BYTE *)(*(_QWORD *)(a1 + 32) + 40) = 0;
}

void sub_93EC4(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  _QWORD v8[4];
  id v9;
  uint64_t v10;
  id v11;
  id v12;

  v3 = a2;
  v4 = *(void **)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 40);
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472;
  v8[2] = sub_93F90;
  v8[3] = &unk_23E620;
  v5 = *(_QWORD *)(a1 + 32);
  v6 = *(_QWORD *)(a1 + 40);
  v9 = v3;
  v10 = v6;
  v11 = *(id *)(a1 + 48);
  v12 = *(id *)(a1 + 56);
  v7 = v3;
  objc_msgSend(v4, "applyUpdate:controller:completion:", v5, v6, v8);

}

void sub_93F90(uint64_t a1)
{
  void *v2;
  NSObject *v3;
  _QWORD v4[4];
  id v5;
  id v6;

  objc_msgSend(*(id *)(a1 + 32), "invalidate");
  v2 = *(void **)(a1 + 48);
  v3 = *(NSObject **)(*(_QWORD *)(a1 + 40) + 48);
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_94020;
  v4[3] = &unk_23D7D0;
  v5 = v2;
  v6 = *(id *)(a1 + 56);
  dispatch_async(v3, v4);

}

void sub_94020(uint64_t a1)
{
  id v2;
  id v3;
  id v4;
  uint64_t v5;
  void *v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _BYTE v11[128];

  objc_msgSend(*(id *)(a1 + 32), "removeAllObjects");
  v9 = 0u;
  v10 = 0u;
  v7 = 0u;
  v8 = 0u;
  v2 = *(id *)(a1 + 40);
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v8;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v8 != v5)
          objc_enumerationMutation(v2);
        objc_msgSend(*(id *)(*((_QWORD *)&v7 + 1) + 8 * (_QWORD)v6), "resumeUnload", (_QWORD)v7);
        v6 = (char *)v6 + 1;
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
    }
    while (v4);
  }

}

id sub_948F8(uint64_t a1)
{
  return objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 8), "play");
}

void sub_966EC(id a1)
{
  void *v1;
  id v2;
  void *v3;
  id v4;
  void *v5;
  _QWORD v6[6];

  v1 = (void *)objc_claimAutoreleasedReturnValue(+[TUIAttributeSet supportedAttributesSize](TUIAttributeSet, "supportedAttributesSize"));
  v2 = objc_msgSend(v1, "mutableCopy");

  v6[0] = CFSTR("title");
  v6[1] = CFSTR("observe-trigger");
  v6[2] = CFSTR("observe-trigger-value");
  v6[3] = CFSTR("item-type");
  v6[4] = CFSTR("opacity");
  v6[5] = CFSTR("text");
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", v6, 6));
  objc_msgSend(v2, "addAttributesFromArray:", v3);

  v4 = objc_msgSend(v2, "copy");
  v5 = (void *)qword_2CB548;
  qword_2CB548 = (uint64_t)v4;

}

void sub_9687C(id a1)
{
  void *v1;

  v1 = (void *)qword_2CB558;
  qword_2CB558 = (uint64_t)&off_254618;

}

uint64_t TUIIndexMapperComputeCount(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  BOOL v6;
  uint64_t v7;

  v3 = (a1 & (a2 >> 63)) + a2;
  v4 = a3 + (a1 & (a3 >> 63));
  if (v3 >= a1)
    v3 = a1;
  if (v4 + 1 < a1)
    v5 = v4 + 1;
  else
    v5 = a1;
  v6 = __OFSUB__(v5, v3);
  v7 = v5 - v3;
  if ((v7 < 0) ^ v6 | (v7 == 0))
    return 0;
  else
    return v7;
}

void sub_98254()
{
  operator delete();
}

uint64_t *sub_98400(uint64_t **a1, unint64_t a2, unint64_t a3)
{
  uint64_t *result;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t *v10;

  sub_9989C((uint64_t)a1, a2, 0, 0);
  result = sub_9A5EC(a1, a3, 0);
  if (a1 + 1 != (uint64_t **)result)
  {
    v7 = result;
    v8 = result[4];
    v10 = (unint64_t *)v8;
    *(_BYTE *)(v8 + 32) |= 3u;
    v9 = (uint64_t)a1[8] + 1;
    a1[8] = (uint64_t *)v9;
    *(_QWORD *)(v8 + 40) = v9;
    sub_9A1F8(a1, result);
    operator delete(v7);
    *(_QWORD *)v8 = a2;
    *(_QWORD *)(v8 + 8) = 1;
    return sub_9935C(a1, &v10, (uint64_t *)&v10);
  }
  return result;
}

uint64_t sub_984D4(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  unint64_t v5;
  _QWORD *v6;
  uint64_t *v7;
  unint64_t v8;
  unint64_t v9;
  BOOL v10;
  uint64_t v11;
  uint64_t v12;

  v5 = a3 + a2;
  v6 = sub_99E94(a1, a3 + a2, 1);
  if (a1 + 4 == v6)
    return 0x7FFFFFFFFFFFFFFFLL;
  v7 = (uint64_t *)v6[4];
  v8 = v7[2];
  v10 = v5 >= v8;
  v9 = v5 - v8;
  v10 = !v10 || v9 >= v7[3];
  if (v10)
    return 0x7FFFFFFFFFFFFFFFLL;
  v11 = *v7;
  if (v11 == 0x7FFFFFFFFFFFFFFFLL)
    return 0x7FFFFFFFFFFFFFFFLL;
  v12 = v11 + v9;
  if (v12 == 0x7FFFFFFFFFFFFFFFLL)
    return 0x7FFFFFFFFFFFFFFFLL;
  else
    return v12 - a3;
}

id sub_9855C(uint64_t a1)
{
  NSMutableIndexSet *v2;
  _QWORD *v3;
  _QWORD *v4;
  _QWORD *v5;
  _QWORD *v6;
  _QWORD *v7;
  BOOL v8;
  id v9;

  v2 = objc_opt_new(NSMutableIndexSet);
  v3 = *(_QWORD **)(a1 + 24);
  v4 = (_QWORD *)(a1 + 32);
  if (v3 != v4)
  {
    do
    {
      v5 = (_QWORD *)v3[4];
      if (v5[2] != 0x7FFFFFFFFFFFFFFFLL && *v5 == 0x7FFFFFFFFFFFFFFFLL)
        -[NSMutableIndexSet addIndexesInRange:](v2, "addIndexesInRange:");
      v6 = (_QWORD *)v3[1];
      if (v6)
      {
        do
        {
          v7 = v6;
          v6 = (_QWORD *)*v6;
        }
        while (v6);
      }
      else
      {
        do
        {
          v7 = (_QWORD *)v3[2];
          v8 = *v7 == (_QWORD)v3;
          v3 = v7;
        }
        while (!v8);
      }
      v3 = v7;
    }
    while (v7 != v4);
  }
  v9 = -[NSMutableIndexSet copy](v2, "copy");

  return v9;
}

void sub_98618(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

id sub_98634(uint64_t a1)
{
  NSMutableIndexSet *v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  BOOL v8;
  id v9;

  v2 = objc_opt_new(NSMutableIndexSet);
  v3 = *(_QWORD **)(a1 + 24);
  v4 = (_QWORD *)(a1 + 32);
  if (v3 != v4)
  {
    do
    {
      v5 = v3[4];
      if ((*(_BYTE *)(v5 + 32) & 1) != 0
        && *(_QWORD *)(v5 + 16) != 0x7FFFFFFFFFFFFFFFLL
        && *(_QWORD *)v5 != 0x7FFFFFFFFFFFFFFFLL)
      {
        -[NSMutableIndexSet addIndexesInRange:](v2, "addIndexesInRange:");
      }
      v6 = (_QWORD *)v3[1];
      if (v6)
      {
        do
        {
          v7 = v6;
          v6 = (_QWORD *)*v6;
        }
        while (v6);
      }
      else
      {
        do
        {
          v7 = (_QWORD *)v3[2];
          v8 = *v7 == (_QWORD)v3;
          v3 = v7;
        }
        while (!v8);
      }
      v3 = v7;
    }
    while (v7 != v4);
  }
  v9 = -[NSMutableIndexSet copy](v2, "copy");

  return v9;
}

void sub_986F8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

id sub_98714(uint64_t a1)
{
  NSMutableIndexSet *v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  BOOL v9;
  id v10;

  v2 = objc_opt_new(NSMutableIndexSet);
  v3 = *(_QWORD **)(a1 + 24);
  v4 = (_QWORD *)(a1 + 32);
  if (v3 != v4)
  {
    do
    {
      v5 = v3[4];
      v6 = *(_QWORD *)(v5 + 16);
      if ((*(_BYTE *)(v5 + 32) & 1) != 0)
      {
        if (v6 != 0x7FFFFFFFFFFFFFFFLL)
          goto LABEL_7;
      }
      else if (v6 != 0x7FFFFFFFFFFFFFFFLL && *(_QWORD *)v5 == 0x7FFFFFFFFFFFFFFFLL)
      {
LABEL_7:
        -[NSMutableIndexSet addIndexesInRange:](v2, "addIndexesInRange:");
      }
      v7 = (_QWORD *)v3[1];
      if (v7)
      {
        do
        {
          v8 = v7;
          v7 = (_QWORD *)*v7;
        }
        while (v7);
      }
      else
      {
        do
        {
          v8 = (_QWORD *)v3[2];
          v9 = *v8 == (_QWORD)v3;
          v3 = v8;
        }
        while (!v9);
      }
      v3 = v8;
    }
    while (v8 != v4);
  }
  v10 = -[NSMutableIndexSet copy](v2, "copy");

  return v10;
}

void sub_987E0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_9884C(_QWORD *a1, void *a2)
{
  id v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9[6];

  v3 = a2;
  v4 = a1[9];
  if ((v4 & 0x8000000000000000) != 0)
    v4 += a1[7];
  v5 = a1[10];
  v6 = a1[7];
  if (v5 < 0)
    v5 += v6;
  if (v4 >= v6)
    v7 = a1[7];
  else
    v7 = v4;
  if (v5 + 1 < v6)
    v8 = v5 + 1;
  else
    v8 = a1[7];
  sub_9927C(v9, v8 - v7);
}

void sub_98D8C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_98DD0(__CFString *a1)
{
  __CFString *v1;
  _QWORD *isa;
  NSRange *v4;
  const __CFString *v5;
  __CFString *v6;
  __CFString *v7;
  __CFString *v8;
  void *v9;
  __CFString *v10;
  __CFString *v11;
  __CFString *v12;
  __CFString *v13;
  NSUInteger location;
  const __CFString *v15;
  NSString *v16;
  NSUInteger v17;
  const __CFString *v18;
  NSString *v19;
  uint64_t *v20;
  uint64_t *v21;
  BOOL v22;
  __CFString *length;
  NSRange *v24;
  const __CFString *v25;
  __CFString *v26;
  __CFString *v27;
  __CFString *v28;
  void *v29;
  __CFString *v30;
  __CFString *v31;
  __CFString *v32;
  __CFString *v33;
  NSUInteger v34;
  const __CFString *v35;
  NSString *v36;
  NSUInteger v37;
  const __CFString *v38;
  NSString *v39;
  __CFString *info;
  __CFString *data;
  __CFString *v42;
  __CFString *v43;
  uint64_t *p_info;
  __CFString *v45;

  NSLog(CFSTR("old -> new"));
  v42 = a1;
  isa = a1->isa;
  p_info = &a1->info;
  if (a1->isa != &a1->info)
  {
    do
    {
      v4 = (NSRange *)isa[4];
      v5 = CFSTR("(u)");
      if ((v4[2].location & 1) == 0)
        v5 = CFSTR("   ");
      v6 = CFSTR("(m)");
      if ((v4[2].location & 2) == 0)
        v6 = (__CFString *)v5;
      v7 = v6;
      v8 = &stru_243BF0;
      if (v4[2].length != 0x7FFFFFFFFFFFFFFFLL)
      {
        v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedInteger:](NSNumber, "numberWithUnsignedInteger:"));
        v8 = (__CFString *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("[%@]"), v9));

      }
      v10 = CFSTR("x ");
      if ((v4[2].location & 4) == 0)
        v10 = CFSTR("  ");
      v11 = v10;
      v12 = CFSTR(" x");
      if ((v4[2].location & 8) == 0)
        v12 = CFSTR("  ");
      v13 = v12;
      location = v4->location;
      v15 = CFSTR("NFound");
      if (v4->location != 0x7FFFFFFFFFFFFFFFLL)
      {
        v16 = NSStringFromRange(*v4);
        v43 = (__CFString *)objc_claimAutoreleasedReturnValue(v16);
        v15 = v43;
      }
      v17 = v4[1].location;
      v18 = CFSTR("NotFound");
      if (v17 != 0x7FFFFFFFFFFFFFFFLL)
      {
        v19 = NSStringFromRange(v4[1]);
        v1 = (__CFString *)objc_claimAutoreleasedReturnValue(v19);
        v18 = v1;
      }
      NSLog(CFSTR("%@%@ -> %@%@ %@ %@"), v11, v15, v18, v13, v7, v8);
      if (v17 != 0x7FFFFFFFFFFFFFFFLL)

      if (location != 0x7FFFFFFFFFFFFFFFLL)
      v20 = (uint64_t *)isa[1];
      if (v20)
      {
        do
        {
          v21 = v20;
          v20 = (uint64_t *)*v20;
        }
        while (v20);
      }
      else
      {
        do
        {
          v21 = (uint64_t *)isa[2];
          v22 = *v21 == (_QWORD)isa;
          isa = v21;
        }
        while (!v22);
      }
      isa = v21;
    }
    while (v21 != p_info);
  }
  NSLog(CFSTR("new -> old"));
  length = (__CFString *)v42->length;
  v45 = v42 + 1;
  if (length != &v42[1])
  {
    do
    {
      v24 = (NSRange *)length[1].isa;
      v25 = CFSTR("(u)");
      if ((v24[2].location & 1) == 0)
        v25 = CFSTR("   ");
      v26 = CFSTR("(m)");
      if ((v24[2].location & 2) == 0)
        v26 = (__CFString *)v25;
      v27 = v26;
      v28 = &stru_243BF0;
      if (v24[2].length != 0x7FFFFFFFFFFFFFFFLL)
      {
        v29 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedInteger:](NSNumber, "numberWithUnsignedInteger:"));
        v28 = (__CFString *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("[%@]"), v29));

      }
      v30 = CFSTR("x ");
      if ((v24[2].location & 4) == 0)
        v30 = CFSTR("  ");
      v31 = v30;
      v32 = CFSTR(" x");
      if ((v24[2].location & 8) == 0)
        v32 = CFSTR("  ");
      v33 = v32;
      v34 = v24->location;
      v35 = CFSTR("NFound");
      if (v24->location != 0x7FFFFFFFFFFFFFFFLL)
      {
        v36 = NSStringFromRange(*v24);
        v43 = (__CFString *)objc_claimAutoreleasedReturnValue(v36);
        v35 = v43;
      }
      v37 = v24[1].location;
      v38 = CFSTR("NotFound");
      if (v37 != 0x7FFFFFFFFFFFFFFFLL)
      {
        v39 = NSStringFromRange(v24[1]);
        v42 = (__CFString *)objc_claimAutoreleasedReturnValue(v39);
        v38 = v42;
      }
      NSLog(CFSTR("%@%@ <- %@%@ %@ %@"), v31, v35, v38, v33, v27, v28);
      if (v37 != 0x7FFFFFFFFFFFFFFFLL)

      if (v34 != 0x7FFFFFFFFFFFFFFFLL)
      info = (__CFString *)length->info;
      if (info)
      {
        do
        {
          data = info;
          info = (__CFString *)info->isa;
        }
        while (info);
      }
      else
      {
        do
        {
          data = (__CFString *)length->data;
          v22 = data->isa == length;
          length = data;
        }
        while (!v22);
      }
      length = data;
    }
    while (data != v45);
  }
}

void sub_991C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *a17)
{
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  uint64_t v21;

  if (v21 != 0x7FFFFFFFFFFFFFFFLL)

  _Unwind_Resume(a1);
}

void sub_9927C(_QWORD *a1, uint64_t a2)
{
  a1[2] = 0;
  a1[1] = 0;
  *a1 = a1 + 1;
  a1[4] = 0;
  a1[3] = a1 + 4;
  a1[5] = 0;
  a1[6] = a2;
  a1[7] = a2;
  a1[8] = 0;
  a1[9] = 0;
  a1[10] = -1;
  operator new();
}

void sub_99338(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  sub_997B8(v2, *(_QWORD **)(v1 + 32));
  sub_997B8(v1, *(_QWORD **)(v1 + 8));
  _Unwind_Resume(a1);
}

uint64_t *sub_9935C(uint64_t **a1, unint64_t **a2, uint64_t *a3)
{
  uint64_t **v5;
  uint64_t *v6;
  uint64_t **v7;
  uint64_t v9;

  v5 = (uint64_t **)sub_993DC((uint64_t)a1, &v9, a2);
  v6 = *v5;
  if (!*v5)
  {
    v7 = v5;
    v6 = (uint64_t *)operator new(0x28uLL);
    v6[4] = *a3;
    sub_99468(a1, v9, v7, v6);
  }
  return v6;
}

_QWORD *sub_993DC(uint64_t a1, _QWORD *a2, unint64_t **a3)
{
  _QWORD *result;
  _QWORD *v4;
  _QWORD *v5;
  unint64_t *v6;
  unint64_t v7;
  _QWORD *v8;
  unint64_t *v9;
  unint64_t v10;

  v5 = *(_QWORD **)(a1 + 8);
  result = (_QWORD *)(a1 + 8);
  v4 = v5;
  if (v5)
  {
    v6 = *a3;
    v7 = **a3;
    while (1)
    {
      while (1)
      {
        v8 = v4;
        v9 = (unint64_t *)v4[4];
        v10 = *v9;
        if (v7 != 0x7FFFFFFFFFFFFFFFLL || v10 != 0x7FFFFFFFFFFFFFFFLL)
          break;
        if (v6 >= v9)
          goto LABEL_15;
LABEL_13:
        v4 = (_QWORD *)*v8;
        result = v8;
        if (!*v8)
          goto LABEL_19;
      }
      if (v7 < v10)
        goto LABEL_13;
      if (v7 == 0x7FFFFFFFFFFFFFFFLL && v10 == 0x7FFFFFFFFFFFFFFFLL)
      {
LABEL_15:
        if (v9 >= v6)
          goto LABEL_19;
        goto LABEL_16;
      }
      if (v10 >= v7)
        goto LABEL_19;
LABEL_16:
      result = v8 + 1;
      v4 = (_QWORD *)v8[1];
      if (!v4)
        goto LABEL_19;
    }
  }
  v8 = result;
LABEL_19:
  *a2 = v8;
  return result;
}

uint64_t *sub_99468(uint64_t **a1, uint64_t a2, uint64_t **a3, uint64_t *a4)
{
  uint64_t *v5;
  uint64_t *result;

  *a4 = 0;
  a4[1] = 0;
  a4[2] = a2;
  *a3 = a4;
  v5 = (uint64_t *)**a1;
  if (v5)
  {
    *a1 = v5;
    a4 = *a3;
  }
  result = sub_994E8(a1[1], a4);
  a1[2] = (uint64_t *)((char *)a1[2] + 1);
  return result;
}

BOOL sub_994BC(_QWORD *a1, _QWORD *a2)
{
  if (*a1 == 0x7FFFFFFFFFFFFFFFLL && *a2 == 0x7FFFFFFFFFFFFFFFLL)
    return a1 < a2;
  else
    return *a1 < *a2;
}

uint64_t *sub_994E8(uint64_t *result, uint64_t *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t *v4;
  _BYTE *v5;
  int v6;
  uint64_t v7;
  int v8;
  uint64_t **v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  *((_BYTE *)a2 + 24) = a2 == result;
  if (a2 != result)
  {
    do
    {
      v2 = (uint64_t *)a2[2];
      if (*((_BYTE *)v2 + 24))
        return result;
      v3 = (uint64_t *)v2[2];
      v4 = (uint64_t *)*v3;
      if ((uint64_t *)*v3 == v2)
      {
        v7 = v3[1];
        if (!v7 || (v8 = *(unsigned __int8 *)(v7 + 24), v5 = (_BYTE *)(v7 + 24), v8))
        {
          if ((uint64_t *)*v2 == a2)
          {
            v9 = (uint64_t **)a2[2];
          }
          else
          {
            v9 = (uint64_t **)v2[1];
            v10 = *v9;
            v2[1] = (uint64_t)*v9;
            if (v10)
            {
              v10[2] = (uint64_t)v2;
              v3 = (uint64_t *)v2[2];
            }
            v9[2] = v3;
            *(_QWORD *)(v2[2] + 8 * (*(_QWORD *)v2[2] != (_QWORD)v2)) = v9;
            *v9 = v2;
            v2[2] = (uint64_t)v9;
            v3 = v9[2];
            v2 = (uint64_t *)*v3;
          }
          *((_BYTE *)v9 + 24) = 1;
          *((_BYTE *)v3 + 24) = 0;
          v13 = v2[1];
          *v3 = v13;
          if (v13)
            *(_QWORD *)(v13 + 16) = v3;
          v2[2] = v3[2];
          *(_QWORD *)(v3[2] + 8 * (*(_QWORD *)v3[2] != (_QWORD)v3)) = v2;
          v2[1] = (uint64_t)v3;
          goto LABEL_27;
        }
      }
      else if (!v4 || (v6 = *((unsigned __int8 *)v4 + 24), v5 = v4 + 3, v6))
      {
        if ((uint64_t *)*v2 == a2)
        {
          v11 = a2[1];
          *v2 = v11;
          if (v11)
          {
            *(_QWORD *)(v11 + 16) = v2;
            v3 = (uint64_t *)v2[2];
          }
          a2[2] = (uint64_t)v3;
          *(_QWORD *)(v2[2] + 8 * (*(_QWORD *)v2[2] != (_QWORD)v2)) = a2;
          a2[1] = (uint64_t)v2;
          v2[2] = (uint64_t)a2;
          v3 = (uint64_t *)a2[2];
        }
        else
        {
          a2 = (uint64_t *)a2[2];
        }
        *((_BYTE *)a2 + 24) = 1;
        *((_BYTE *)v3 + 24) = 0;
        v2 = (uint64_t *)v3[1];
        v12 = *v2;
        v3[1] = *v2;
        if (v12)
          *(_QWORD *)(v12 + 16) = v3;
        v2[2] = v3[2];
        *(_QWORD *)(v3[2] + 8 * (*(_QWORD *)v3[2] != (_QWORD)v3)) = v2;
        *v2 = (uint64_t)v3;
LABEL_27:
        v3[2] = (uint64_t)v2;
        return result;
      }
      *((_BYTE *)v2 + 24) = 1;
      a2 = v3;
      *((_BYTE *)v3 + 24) = v3 == result;
      *v5 = 1;
    }
    while (v3 != result);
  }
  return result;
}

uint64_t *sub_99680(uint64_t **a1, unint64_t *a2, uint64_t *a3)
{
  uint64_t **v5;
  uint64_t *v6;
  uint64_t **v7;
  uint64_t v9;

  v5 = (uint64_t **)sub_99700((uint64_t)a1, &v9, a2);
  v6 = *v5;
  if (!*v5)
  {
    v7 = v5;
    v6 = (uint64_t *)operator new(0x28uLL);
    v6[4] = *a3;
    sub_99468(a1, v9, v7, v6);
  }
  return v6;
}

_QWORD *sub_99700(uint64_t a1, _QWORD *a2, unint64_t *a3)
{
  _QWORD *result;
  _QWORD *v4;
  _QWORD *v5;
  unint64_t v6;
  unint64_t v7;
  _QWORD *v8;
  unint64_t v9;
  unint64_t v10;

  v5 = *(_QWORD **)(a1 + 8);
  result = (_QWORD *)(a1 + 8);
  v4 = v5;
  if (v5)
  {
    v6 = *a3;
    v7 = *(_QWORD *)(*a3 + 16);
    while (1)
    {
      while (1)
      {
        v8 = v4;
        v9 = v4[4];
        v10 = *(_QWORD *)(v9 + 16);
        if (v7 != 0x7FFFFFFFFFFFFFFFLL || v10 != 0x7FFFFFFFFFFFFFFFLL)
          break;
        if (v6 >= v9)
          goto LABEL_15;
LABEL_13:
        v4 = (_QWORD *)*v8;
        result = v8;
        if (!*v8)
          goto LABEL_19;
      }
      if (v7 < v10)
        goto LABEL_13;
      if (v7 == 0x7FFFFFFFFFFFFFFFLL && v10 == 0x7FFFFFFFFFFFFFFFLL)
      {
LABEL_15:
        if (v9 >= v6)
          goto LABEL_19;
        goto LABEL_16;
      }
      if (v10 >= v7)
        goto LABEL_19;
LABEL_16:
      result = v8 + 1;
      v4 = (_QWORD *)v8[1];
      if (!v4)
        goto LABEL_19;
    }
  }
  v8 = result;
LABEL_19:
  *a2 = v8;
  return result;
}

BOOL sub_9978C(unint64_t a1, unint64_t a2)
{
  unint64_t v2;
  unint64_t v3;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a2 + 16);
  if (v2 == 0x7FFFFFFFFFFFFFFFLL && v3 == 0x7FFFFFFFFFFFFFFFLL)
    return a1 < a2;
  else
    return v2 < v3;
}

void sub_997B8(uint64_t a1, _QWORD *a2)
{
  if (a2)
  {
    sub_997B8(a1, *a2);
    sub_997B8(a1, a2[1]);
    operator delete(a2);
  }
}

uint64_t sub_997F8(uint64_t a1)
{
  _QWORD *v2;
  _QWORD *v3;
  _QWORD *v4;
  BOOL v5;

  v2 = *(_QWORD **)a1;
  if (*(_QWORD *)a1 != a1 + 8)
  {
    do
    {
      if (v2[4])
        operator delete();
      v3 = (_QWORD *)v2[1];
      if (v3)
      {
        do
        {
          v4 = v3;
          v3 = (_QWORD *)*v3;
        }
        while (v3);
      }
      else
      {
        do
        {
          v4 = (_QWORD *)v2[2];
          v5 = *v4 == (_QWORD)v2;
          v2 = v4;
        }
        while (!v5);
      }
      v2 = v4;
    }
    while (v4 != (_QWORD *)(a1 + 8));
  }
  sub_997B8(a1 + 24, *(_QWORD **)(a1 + 32));
  sub_997B8(a1, *(_QWORD **)(a1 + 8));
  return a1;
}

uint64_t sub_9989C(uint64_t a1, unint64_t a2, int a3, int a4)
{
  uint64_t *v8;
  uint64_t *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v14;
  unint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;

  v8 = sub_99D24(a1, a2, 1);
  if ((uint64_t *)(a1 + 8) != v8)
  {
    v9 = v8;
    v10 = v8[4];
    v19 = v10;
    v12 = *(_QWORD *)v10;
    v11 = *(_QWORD *)(v10 + 8);
    if (a2 >= *(_QWORD *)v10 && a2 - *(_QWORD *)v10 < v11)
    {
      v14 = *(_QWORD *)(v10 + 16);
      if (v14 != 0x7FFFFFFFFFFFFFFFLL)
      {
        if (a2 == v12)
        {
          v16 = v11 - 1;
          if (!v16)
          {
            v17 = sub_99E94((_QWORD *)a1, v14, 1);
            if (a3)
            {
              if (a4)
              {
                *(_BYTE *)(v10 + 32) = *(_BYTE *)(v10 + 32) & 0xFE | a4;
                v18 = *(_QWORD *)(a1 + 64) + 1;
                *(_QWORD *)(a1 + 64) = v18;
                *(_QWORD *)(v10 + 40) = v18;
                a3 = (*(unsigned __int8 *)(v10 + 32) >> 1) & 1;
              }
              else
              {
                sub_9A1F8((uint64_t **)(a1 + 24), v17);
                operator delete(v17);
                *(_OWORD *)(v10 + 16) = xmmword_22F000;
                sub_99680((uint64_t **)(a1 + 24), (unint64_t *)&v19, &v19);
                a3 = 0;
              }
            }
            else
            {
              sub_9A1F8((uint64_t **)a1, v9);
              operator delete(v9);
              sub_9A1F8((uint64_t **)(a1 + 24), v17);
              operator delete(v17);
            }
            goto LABEL_25;
          }
          *(_QWORD *)v10 = a2 + 1;
          *(_QWORD *)(v10 + 8) = v16;
          --*(_QWORD *)(v10 + 24);
          if (!a3)
          {
LABEL_25:
            sub_9A004(a1);
            return a3 ^ 1u;
          }
          if (a4)
            operator new();
        }
        else
        {
          if (v11 + v12 != a2 + 1)
            operator new();
          *(_QWORD *)(v10 + 8) = v11 - 1;
          --*(_QWORD *)(v10 + 24);
          if (!a3)
            goto LABEL_25;
          if (a4)
            operator new();
        }
        operator new();
      }
    }
  }
  a3 = 0;
  return a3 ^ 1u;
}

_QWORD *sub_99D24(uint64_t a1, unint64_t a2, char a3)
{
  _QWORD *v6;
  _QWORD *v7;
  _QWORD *v8;
  unint64_t v9;
  _QWORD *v10;
  BOOL v11;
  _QWORD *v12;
  _QWORD *v14;
  uint64_t *v15;
  unint64_t v16;
  __int128 v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  char v21;
  BOOL (*v22)(_QWORD *, _QWORD *);

  v17 = xmmword_22F370;
  v18 = 0;
  v19 = 0;
  v20 = 0x7FFFFFFFFFFFFFFFLL;
  v7 = (_QWORD *)(a1 + 8);
  v6 = *(_QWORD **)a1;
  v15 = (uint64_t *)&v16;
  v16 = a2;
  v22 = sub_994BC;
  v21 = 0;
  v8 = sub_9A074(v6, v7, &v15, (unsigned int (**)(_QWORD, _QWORD))&v22);
  if ((a3 & 1) != 0)
  {
    if (v7 != v8)
    {
      if ((a3 & 1) != 0)
        goto LABEL_17;
      goto LABEL_14;
    }
    if (*(_QWORD **)a1 != v7)
    {
LABEL_10:
      v10 = (_QWORD *)*v7;
      if (*v7)
      {
        do
        {
          v7 = v10;
          v10 = (_QWORD *)v10[1];
        }
        while (v10);
      }
      else
      {
        v14 = v7;
        do
        {
          v7 = (_QWORD *)v14[2];
          v11 = *v7 == (_QWORD)v14;
          v14 = v7;
        }
        while (v11);
      }
      return v7;
    }
    if ((a3 & 1) != 0)
      return v7;
LABEL_14:
    v9 = *(_QWORD *)(a1 + 56);
    goto LABEL_15;
  }
  v9 = *(_QWORD *)(a1 + 56);
  if (v9 > a2)
  {
    if (v7 == v8 && *(_QWORD **)a1 != v7)
      goto LABEL_10;
    goto LABEL_14;
  }
LABEL_15:
  if (v9 <= a2)
    return v8;
  v11 = v7 == v8;
  v7 = v8;
  if (v11)
    return v7;
LABEL_17:
  if (*(_QWORD **)a1 == v8)
    return v8;
  v7 = v8;
  if (*(_QWORD *)v8[4] > a2)
  {
    v12 = (_QWORD *)*v8;
    if (*v8)
    {
      do
      {
        v7 = v12;
        v12 = (_QWORD *)v12[1];
      }
      while (v12);
    }
    else
    {
      do
      {
        v7 = (_QWORD *)v8[2];
        v11 = *v7 == (_QWORD)v8;
        v8 = v7;
      }
      while (v11);
    }
  }
  return v7;
}

_QWORD *sub_99E94(_QWORD *a1, unint64_t a2, char a3)
{
  _QWORD *v6;
  _QWORD *v7;
  _QWORD *v8;
  unint64_t v9;
  _QWORD *v10;
  BOOL v11;
  _QWORD *v12;
  _QWORD *v14;
  __int128 *v15;
  __int128 v16;
  unint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  char v21;
  BOOL (*v22)(unint64_t, unint64_t);

  v16 = xmmword_22F000;
  v17 = a2;
  v18 = 0;
  v19 = 0;
  v20 = 0x7FFFFFFFFFFFFFFFLL;
  v6 = (_QWORD *)a1[3];
  v7 = a1 + 4;
  v15 = &v16;
  v22 = sub_9978C;
  v21 = 0;
  v8 = sub_9A074(v6, a1 + 4, &v15, (unsigned int (**)(_QWORD, _QWORD))&v22);
  if ((a3 & 1) != 0)
  {
    if (v7 != v8)
    {
      if ((a3 & 1) != 0)
        goto LABEL_17;
      goto LABEL_14;
    }
    if ((_QWORD *)a1[3] != v7)
    {
LABEL_10:
      v10 = (_QWORD *)*v7;
      if (*v7)
      {
        do
        {
          v7 = v10;
          v10 = (_QWORD *)v10[1];
        }
        while (v10);
      }
      else
      {
        v14 = a1 + 4;
        do
        {
          v7 = (_QWORD *)v14[2];
          v11 = *v7 == (_QWORD)v14;
          v14 = v7;
        }
        while (v11);
      }
      return v7;
    }
    if ((a3 & 1) != 0)
      return v7;
LABEL_14:
    v9 = a1[6];
    goto LABEL_15;
  }
  v9 = a1[6];
  if (v9 > a2)
  {
    if (v7 == v8 && (_QWORD *)a1[3] != v7)
      goto LABEL_10;
    goto LABEL_14;
  }
LABEL_15:
  if (v9 <= a2)
    return v8;
  v11 = v7 == v8;
  v7 = v8;
  if (v11)
    return v7;
LABEL_17:
  if ((_QWORD *)a1[3] == v8)
    return v8;
  v7 = v8;
  if (*(_QWORD *)(v8[4] + 16) > a2)
  {
    v12 = (_QWORD *)*v8;
    if (*v8)
    {
      do
      {
        v7 = v12;
        v12 = (_QWORD *)v12[1];
      }
      while (v12);
    }
    else
    {
      do
      {
        v7 = (_QWORD *)v8[2];
        v11 = *v7 == (_QWORD)v8;
        v8 = v7;
      }
      while (v11);
    }
  }
  return v7;
}

uint64_t sub_9A004(uint64_t result)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  BOOL v6;

  v1 = *(_QWORD **)(result + 24);
  if (v1 != (_QWORD *)(result + 32))
  {
    v2 = 0;
    do
    {
      v3 = v1[4];
      if (*(_QWORD *)(v3 + 16) != 0x7FFFFFFFFFFFFFFFLL)
      {
        *(_QWORD *)(v3 + 16) = v2;
        v2 += *(_QWORD *)(v3 + 24);
      }
      v4 = (_QWORD *)v1[1];
      if (v4)
      {
        do
        {
          v5 = v4;
          v4 = (_QWORD *)*v4;
        }
        while (v4);
      }
      else
      {
        do
        {
          v5 = (_QWORD *)v1[2];
          v6 = *v5 == (_QWORD)v1;
          v1 = v5;
        }
        while (!v6);
      }
      v1 = v5;
    }
    while (v5 != (_QWORD *)(result + 32));
  }
  return result;
}

_QWORD *sub_9A074(_QWORD *a1, _QWORD *a2, _QWORD *a3, unsigned int (**a4)(_QWORD, _QWORD))
{
  _QWORD *v4;
  unint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  _QWORD *v10;
  BOOL v11;
  unint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  _QWORD *v16;

  v4 = a1;
  if (a1 != a2)
  {
    v7 = 0;
    v8 = a1;
    do
    {
      v9 = (_QWORD *)v8[1];
      if (v9)
      {
        do
        {
          v10 = v9;
          v9 = (_QWORD *)*v9;
        }
        while (v9);
      }
      else
      {
        do
        {
          v10 = (_QWORD *)v8[2];
          v11 = *v10 == (_QWORD)v8;
          v8 = v10;
        }
        while (!v11);
      }
      ++v7;
      v8 = v10;
    }
    while (v10 != a2);
    do
    {
      v12 = v7 >> 1;
      v16 = v4;
      sub_9A16C(&v16, v7 >> 1);
      if ((*a4)(v16[4], *a3))
      {
        v13 = v16;
        v14 = (_QWORD *)v16[1];
        if (v14)
        {
          do
          {
            v4 = v14;
            v14 = (_QWORD *)*v14;
          }
          while (v14);
        }
        else
        {
          do
          {
            v4 = (_QWORD *)v13[2];
            v11 = *v4 == (_QWORD)v13;
            v13 = v4;
          }
          while (!v11);
        }
        v12 = v7 + ~v12;
      }
      v7 = v12;
    }
    while (v12);
  }
  return v4;
}

_QWORD **sub_9A16C(_QWORD **result, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  _QWORD *v4;
  BOOL v5;
  _QWORD *v7;
  _QWORD *v8;

  if (a2 < 0)
  {
    v7 = *result;
    do
    {
      v8 = (_QWORD *)*v7;
      if (*v7)
      {
        do
        {
          v4 = v8;
          v8 = (_QWORD *)v8[1];
        }
        while (v8);
      }
      else
      {
        do
        {
          v4 = (_QWORD *)v7[2];
          v5 = *v4 == (_QWORD)v7;
          v7 = v4;
        }
        while (v5);
      }
      v7 = v4;
    }
    while (!__CFADD__(a2++, 1));
  }
  else
  {
    if (!a2)
      return result;
    v2 = *result;
    do
    {
      v3 = (_QWORD *)v2[1];
      if (v3)
      {
        do
        {
          v4 = v3;
          v3 = (_QWORD *)*v3;
        }
        while (v3);
      }
      else
      {
        do
        {
          v4 = (_QWORD *)v2[2];
          v5 = *v4 == (_QWORD)v2;
          v2 = v4;
        }
        while (!v5);
      }
      v2 = v4;
    }
    while (a2-- > 1);
  }
  *result = v4;
  return result;
}

uint64_t *sub_9A1F8(uint64_t **a1, uint64_t *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t *v4;
  BOOL v5;
  uint64_t *v6;

  v2 = (uint64_t *)a2[1];
  if (v2)
  {
    do
    {
      v3 = v2;
      v2 = (uint64_t *)*v2;
    }
    while (v2);
  }
  else
  {
    v4 = a2;
    do
    {
      v3 = (uint64_t *)v4[2];
      v5 = *v3 == (_QWORD)v4;
      v4 = v3;
    }
    while (!v5);
  }
  if (*a1 == a2)
    *a1 = v3;
  v6 = a1[1];
  a1[2] = (uint64_t *)((char *)a1[2] - 1);
  sub_9A268(v6, a2);
  return v3;
}

uint64_t *sub_9A268(uint64_t *result, uint64_t *a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t *v4;
  int v5;
  uint64_t **v6;
  uint64_t *v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t *v16;
  uint64_t *v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t *v20;
  BOOL v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v2 = *a2;
  v3 = a2;
  if (*a2)
  {
    v4 = (uint64_t *)a2[1];
    if (!v4)
    {
      v3 = a2;
      goto LABEL_7;
    }
    do
    {
      v3 = v4;
      v4 = (uint64_t *)*v4;
    }
    while (v4);
  }
  v2 = v3[1];
  if (v2)
  {
LABEL_7:
    v5 = 0;
    *(_QWORD *)(v2 + 16) = v3[2];
    goto LABEL_8;
  }
  v5 = 1;
LABEL_8:
  v6 = (uint64_t **)v3[2];
  v7 = *v6;
  if (*v6 == v3)
  {
    *v6 = (uint64_t *)v2;
    if (v3 == result)
    {
      v7 = 0;
      result = (uint64_t *)v2;
    }
    else
    {
      v7 = v6[1];
    }
  }
  else
  {
    v6[1] = (uint64_t *)v2;
  }
  v8 = *((unsigned __int8 *)v3 + 24);
  if (v3 != a2)
  {
    v9 = a2[2];
    v3[2] = v9;
    *(_QWORD *)(v9 + 8 * (*(_QWORD *)a2[2] != (_QWORD)a2)) = v3;
    v11 = *a2;
    v10 = a2[1];
    *(_QWORD *)(v11 + 16) = v3;
    *v3 = v11;
    v3[1] = v10;
    if (v10)
      *(_QWORD *)(v10 + 16) = v3;
    *((_BYTE *)v3 + 24) = *((_BYTE *)a2 + 24);
    if (result == a2)
      result = v3;
  }
  if (!v8 || !result)
    return result;
  if (!v5)
  {
    *(_BYTE *)(v2 + 24) = 1;
    return result;
  }
  while (1)
  {
    v12 = v7[2];
    if (*(uint64_t **)v12 == v7)
      break;
    if (!*((_BYTE *)v7 + 24))
    {
      *((_BYTE *)v7 + 24) = 1;
      *(_BYTE *)(v12 + 24) = 0;
      v13 = *(uint64_t **)(v12 + 8);
      v14 = *v13;
      *(_QWORD *)(v12 + 8) = *v13;
      if (v14)
        *(_QWORD *)(v14 + 16) = v12;
      v13[2] = *(_QWORD *)(v12 + 16);
      *(_QWORD *)(*(_QWORD *)(v12 + 16) + 8 * (**(_QWORD **)(v12 + 16) != v12)) = v13;
      *v13 = v12;
      *(_QWORD *)(v12 + 16) = v13;
      if (result == (uint64_t *)*v7)
        result = v7;
      v7 = *(uint64_t **)(*v7 + 8);
    }
    v15 = (_QWORD *)*v7;
    if (*v7 && !*((_BYTE *)v15 + 24))
    {
      v16 = (uint64_t *)v7[1];
      if (!v16)
        goto LABEL_56;
LABEL_55:
      if (*((_BYTE *)v16 + 24))
      {
LABEL_56:
        *((_BYTE *)v15 + 24) = 1;
        *((_BYTE *)v7 + 24) = 0;
        v22 = v15[1];
        *v7 = v22;
        if (v22)
          *(_QWORD *)(v22 + 16) = v7;
        v15[2] = v7[2];
        *(_QWORD *)(v7[2] + 8 * (*(_QWORD *)v7[2] != (_QWORD)v7)) = v15;
        v15[1] = v7;
        v7[2] = (uint64_t)v15;
        v16 = v7;
      }
      else
      {
        v15 = v7;
      }
      v23 = v15[2];
      *((_BYTE *)v15 + 24) = *(_BYTE *)(v23 + 24);
      *(_BYTE *)(v23 + 24) = 1;
      *((_BYTE *)v16 + 24) = 1;
      v24 = *(uint64_t **)(v23 + 8);
      v25 = *v24;
      *(_QWORD *)(v23 + 8) = *v24;
      if (v25)
        *(_QWORD *)(v25 + 16) = v23;
      v24[2] = *(_QWORD *)(v23 + 16);
      *(_QWORD *)(*(_QWORD *)(v23 + 16) + 8 * (**(_QWORD **)(v23 + 16) != v23)) = v24;
      *v24 = v23;
      goto LABEL_72;
    }
    v16 = (uint64_t *)v7[1];
    if (v16 && !*((_BYTE *)v16 + 24))
      goto LABEL_55;
    *((_BYTE *)v7 + 24) = 0;
    v17 = (uint64_t *)v7[2];
    if (v17 == result)
    {
      v17 = result;
LABEL_53:
      *((_BYTE *)v17 + 24) = 1;
      return result;
    }
    if (!*((_BYTE *)v17 + 24))
      goto LABEL_53;
LABEL_49:
    v7 = *(uint64_t **)(v17[2] + 8 * (*(_QWORD *)v17[2] == (_QWORD)v17));
  }
  if (!*((_BYTE *)v7 + 24))
  {
    *((_BYTE *)v7 + 24) = 1;
    *(_BYTE *)(v12 + 24) = 0;
    v18 = v7[1];
    *(_QWORD *)v12 = v18;
    if (v18)
      *(_QWORD *)(v18 + 16) = v12;
    v7[2] = *(_QWORD *)(v12 + 16);
    *(_QWORD *)(*(_QWORD *)(v12 + 16) + 8 * (**(_QWORD **)(v12 + 16) != v12)) = v7;
    v7[1] = v12;
    *(_QWORD *)(v12 + 16) = v7;
    if (result == (uint64_t *)v12)
      result = v7;
    v7 = *(uint64_t **)v12;
  }
  v19 = (_QWORD *)*v7;
  if (*v7 && !*((_BYTE *)v19 + 24))
    goto LABEL_68;
  v20 = (uint64_t *)v7[1];
  if (!v20 || *((_BYTE *)v20 + 24))
  {
    *((_BYTE *)v7 + 24) = 0;
    v17 = (uint64_t *)v7[2];
    if (*((_BYTE *)v17 + 24))
      v21 = v17 == result;
    else
      v21 = 1;
    if (v21)
      goto LABEL_53;
    goto LABEL_49;
  }
  if (v19 && !*((_BYTE *)v19 + 24))
  {
LABEL_68:
    v20 = v7;
  }
  else
  {
    *((_BYTE *)v20 + 24) = 1;
    *((_BYTE *)v7 + 24) = 0;
    v26 = *v20;
    v7[1] = *v20;
    if (v26)
      *(_QWORD *)(v26 + 16) = v7;
    v20[2] = v7[2];
    *(_QWORD *)(v7[2] + 8 * (*(_QWORD *)v7[2] != (_QWORD)v7)) = v20;
    *v20 = (uint64_t)v7;
    v7[2] = (uint64_t)v20;
    v19 = v7;
  }
  v23 = v20[2];
  *((_BYTE *)v20 + 24) = *(_BYTE *)(v23 + 24);
  *(_BYTE *)(v23 + 24) = 1;
  *((_BYTE *)v19 + 24) = 1;
  v24 = *(uint64_t **)v23;
  v27 = *(_QWORD *)(*(_QWORD *)v23 + 8);
  *(_QWORD *)v23 = v27;
  if (v27)
    *(_QWORD *)(v27 + 16) = v23;
  v24[2] = *(_QWORD *)(v23 + 16);
  *(_QWORD *)(*(_QWORD *)(v23 + 16) + 8 * (**(_QWORD **)(v23 + 16) != v23)) = v24;
  v24[1] = v23;
LABEL_72:
  *(_QWORD *)(v23 + 16) = v24;
  return result;
}

_QWORD *sub_9A5EC(_QWORD *a1, unint64_t a2, int a3)
{
  _QWORD *v6;
  unint64_t *v7;
  _QWORD *v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t *v17;

  v6 = sub_99E94(a1, a2, 1);
  if (a1 + 4 == v6)
    operator new();
  v7 = (unint64_t *)v6[4];
  v17 = v7;
  if (v7[2] == 0x7FFFFFFFFFFFFFFFLL)
LABEL_3:
    operator new();
  v9 = a1 + 1;
  ++v7[3];
  sub_9A004((uint64_t)a1);
  v11 = v7[2];
  v10 = v7[3];
  v12 = v10 - 1;
  v7[3] = v10 - 1;
  if (a2 == v11)
  {
    if (v12 | a2)
    {
      if (*v7 != 0x7FFFFFFFFFFFFFFFLL || a3 == 0)
      {
        v7[2] = a2 + 1;
        goto LABEL_3;
      }
      goto LABEL_34;
    }
    *v7 = 0x7FFFFFFFFFFFFFFFLL;
    v7[1] = 0;
    v7[2] = 0;
    v7[3] = 1;
  }
  else
  {
    if (v11 + v12 == a2)
    {
      if (*v7 != 0x7FFFFFFFFFFFFFFFLL || a3 == 0)
        goto LABEL_3;
      goto LABEL_34;
    }
    if (a2 >= v11 && a2 - v11 < v12)
    {
      if (*v7 != 0x7FFFFFFFFFFFFFFFLL || a3 == 0)
        operator new();
LABEL_34:
      v7[3] = v10;
      v9 = sub_9A940((uint64_t)a1, &v17);
      goto LABEL_5;
    }
    if (v11 | v12)
      operator new();
    *(_OWORD *)v7 = xmmword_22F000;
    v7[2] = a2;
    v7[3] = 1;
  }
LABEL_5:
  sub_9A004((uint64_t)a1);
  return v9;
}

_QWORD *sub_9A940(uint64_t a1, unint64_t **a2)
{
  _QWORD *v2;
  _QWORD *v3;
  _QWORD *v4;
  unint64_t *v5;
  unint64_t v6;
  _QWORD *v7;
  unint64_t *v8;
  unint64_t v9;
  _BOOL4 v10;
  _BOOL4 v11;
  BOOL v13;
  _QWORD *v14;
  unint64_t *v15;
  unint64_t v16;

  v4 = *(_QWORD **)(a1 + 8);
  v2 = (_QWORD *)(a1 + 8);
  v3 = v4;
  if (!v4)
    return v2;
  v5 = *a2;
  v6 = **a2;
  v7 = v2;
  do
  {
    v8 = (unint64_t *)v3[4];
    v9 = *v8;
    v10 = *v8 < v6;
    v11 = v8 < v5;
    if (v9 != 0x7FFFFFFFFFFFFFFFLL || v6 != 0x7FFFFFFFFFFFFFFFLL)
      v11 = v10;
    v13 = !v11;
    if (v11)
      v14 = v3 + 1;
    else
      v14 = v3;
    if (v13)
      v7 = v3;
    v3 = (_QWORD *)*v14;
  }
  while (*v14);
  if (v7 == v2)
    return v2;
  v15 = (unint64_t *)v7[4];
  v16 = *v15;
  if (v6 == 0x7FFFFFFFFFFFFFFFLL && v16 == 0x7FFFFFFFFFFFFFFFLL)
  {
    if (v5 >= v15)
      return v7;
    return v2;
  }
  if (v6 < v16)
    return v2;
  return v7;
}

uint64_t sub_9A9D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  unint64_t v9;
  uint64_t v11;
  uint64_t v12;

  v6 = a3 + a2;
  v7 = sub_99D24(a1, a3 + a2, 1);
  if ((_QWORD *)(a1 + 8) == v7)
    return 0x7FFFFFFFFFFFFFFFLL;
  v8 = (_QWORD *)v7[4];
  v9 = v6 - *v8;
  if (v6 < *v8 || v9 >= v8[1])
    return 0x7FFFFFFFFFFFFFFFLL;
  v11 = v8[2];
  if (v11 == 0x7FFFFFFFFFFFFFFFLL)
    return 0x7FFFFFFFFFFFFFFFLL;
  v12 = v11 + v9;
  if (v12 == 0x7FFFFFFFFFFFFFFFLL)
    return 0x7FFFFFFFFFFFFFFFLL;
  else
    return v12 - a4;
}

_QWORD *sub_9AA58(_QWORD *result, unint64_t a2, int64_t a3)
{
  _QWORD *v3;
  unint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  _QWORD *v7;
  _QWORD *v8;
  _QWORD *v9;
  BOOL v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;

  v3 = result;
  if ((a2 & 0x8000000000000000) != 0)
  {
    a2 += result[7];
    if ((a3 & 0x8000000000000000) == 0)
      goto LABEL_4;
    goto LABEL_3;
  }
  if (a3 < 0)
LABEL_3:
    a3 += result[7];
LABEL_4:
  if ((uint64_t)a2 > a3 || a2 >= result[7])
  {
    v14 = (_QWORD *)*result;
    if ((_QWORD *)*result != result + 1)
    {
      do
      {
        v15 = v14[4];
        if (*(_QWORD *)v15 != 0x7FFFFFFFFFFFFFFFLL)
          *(_BYTE *)(v15 + 32) |= 4u;
        v16 = (_QWORD *)v14[1];
        if (v16)
        {
          do
          {
            v17 = v16;
            v16 = (_QWORD *)*v16;
          }
          while (v16);
        }
        else
        {
          do
          {
            v17 = (_QWORD *)v14[2];
            v10 = *v17 == (_QWORD)v14;
            v14 = v17;
          }
          while (!v10);
        }
        v14 = v17;
      }
      while (v17 != result + 1);
    }
  }
  else
  {
    v4 = a3 + 1;
    v5 = sub_9AD8C((uint64_t)result, a2);
    v6 = v3 + 1;
    if (v3 + 1 != v5)
    {
      v7 = (_QWORD *)*v3;
      if ((_QWORD *)*v3 != v5)
      {
        do
        {
          *(_BYTE *)(v7[4] + 32) |= 4u;
          v8 = (_QWORD *)v7[1];
          if (v8)
          {
            do
            {
              v9 = v8;
              v8 = (_QWORD *)*v8;
            }
            while (v8);
          }
          else
          {
            do
            {
              v9 = (_QWORD *)v7[2];
              v10 = *v9 == (_QWORD)v7;
              v7 = v9;
            }
            while (!v10);
          }
          v7 = v9;
        }
        while (v9 != v5);
      }
    }
    result = sub_9AD8C((uint64_t)v3, v4);
    if (v6 != result)
    {
      do
      {
        v11 = result[4];
        if (*(_QWORD *)v11 != 0x7FFFFFFFFFFFFFFFLL)
          *(_BYTE *)(v11 + 32) |= 4u;
        v12 = (_QWORD *)result[1];
        if (v12)
        {
          do
          {
            v13 = v12;
            v12 = (_QWORD *)*v12;
          }
          while (v12);
        }
        else
        {
          do
          {
            v13 = (_QWORD *)result[2];
            v10 = *v13 == (_QWORD)result;
            result = v13;
          }
          while (!v10);
        }
        result = v13;
      }
      while (v13 != v6);
    }
  }
  return result;
}

_QWORD *sub_9ABF0(_QWORD *result, unint64_t a2, int64_t a3)
{
  _QWORD *v3;
  unint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  _QWORD *v7;
  _QWORD *v8;
  _QWORD *v9;
  BOOL v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;

  v3 = result;
  if ((a2 & 0x8000000000000000) != 0)
  {
    a2 += result[6];
    if ((a3 & 0x8000000000000000) == 0)
      goto LABEL_4;
    goto LABEL_3;
  }
  if (a3 < 0)
LABEL_3:
    a3 += result[6];
LABEL_4:
  if ((uint64_t)a2 > a3 || a2 >= result[6])
  {
    v14 = (_QWORD *)result[3];
    if (v14 != result + 4)
    {
      do
      {
        v15 = v14[4];
        if (*(_QWORD *)(v15 + 16) != 0x7FFFFFFFFFFFFFFFLL)
          *(_BYTE *)(v15 + 32) |= 8u;
        v16 = (_QWORD *)v14[1];
        if (v16)
        {
          do
          {
            v17 = v16;
            v16 = (_QWORD *)*v16;
          }
          while (v16);
        }
        else
        {
          do
          {
            v17 = (_QWORD *)v14[2];
            v10 = *v17 == (_QWORD)v14;
            v14 = v17;
          }
          while (!v10);
        }
        v14 = v17;
      }
      while (v17 != result + 4);
    }
  }
  else
  {
    v4 = a3 + 1;
    v5 = sub_9AEF4(result, a2);
    v6 = v3 + 4;
    if (v3 + 4 != v5)
    {
      v7 = (_QWORD *)v3[3];
      if (v7 != v5)
      {
        do
        {
          *(_BYTE *)(v7[4] + 32) |= 8u;
          v8 = (_QWORD *)v7[1];
          if (v8)
          {
            do
            {
              v9 = v8;
              v8 = (_QWORD *)*v8;
            }
            while (v8);
          }
          else
          {
            do
            {
              v9 = (_QWORD *)v7[2];
              v10 = *v9 == (_QWORD)v7;
              v7 = v9;
            }
            while (!v10);
          }
          v7 = v9;
        }
        while (v9 != v5);
      }
    }
    result = sub_9AEF4(v3, v4);
    if (v6 != result)
    {
      do
      {
        v11 = result[4];
        if (*(_QWORD *)(v11 + 16) != 0x7FFFFFFFFFFFFFFFLL)
          *(_BYTE *)(v11 + 32) |= 8u;
        v12 = (_QWORD *)result[1];
        if (v12)
        {
          do
          {
            v13 = v12;
            v12 = (_QWORD *)*v12;
          }
          while (v12);
        }
        else
        {
          do
          {
            v13 = (_QWORD *)result[2];
            v10 = *v13 == (_QWORD)result;
            result = v13;
          }
          while (!v10);
        }
        result = v13;
      }
      while (v13 != v6);
    }
  }
  return result;
}

_QWORD *sub_9AD8C(uint64_t a1, unint64_t a2)
{
  _QWORD *result;
  unint64_t *v5;
  BOOL v6;
  unint64_t v7;
  BOOL v8;

  result = sub_99D24(a1, a2, 0);
  if ((_QWORD *)(a1 + 8) != result)
  {
    v5 = (unint64_t *)result[4];
    v6 = a2 >= *v5;
    v7 = a2 - *v5;
    if (v7)
    {
      v8 = !v6 || v7 >= v5[1];
      result = (_QWORD *)(a1 + 8);
      if (!v8)
        operator new();
    }
  }
  return result;
}

uint64_t sub_9AEA4(uint64_t result, uint64_t a2)
{
  int v2;
  unsigned int v3;
  unsigned int v4;

  v2 = *(_BYTE *)(result + 32) & 0xFE | *(_BYTE *)(a2 + 32) & 1;
  *(_BYTE *)(result + 32) = v2;
  v3 = v2 & 0xFFFFFFFD | (2 * ((*(unsigned __int8 *)(a2 + 32) >> 1) & 1));
  *(_BYTE *)(result + 32) = v3;
  v4 = v3 & 0xFFFFFFFB | (4 * ((*(unsigned __int8 *)(a2 + 32) >> 2) & 1));
  *(_BYTE *)(result + 32) = v4;
  *(_BYTE *)(result + 32) = v4 & 0xF7 | *(_BYTE *)(a2 + 32) & 8;
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  return result;
}

_QWORD *sub_9AEF4(_QWORD *a1, unint64_t a2)
{
  _QWORD *result;
  uint64_t v5;
  unint64_t v6;

  result = sub_99E94(a1, a2, 0);
  if (a1 + 4 != result)
  {
    v5 = result[4];
    v6 = *(_QWORD *)(v5 + 16);
    if (a2 != v6 && a2 >= v6 && a2 - v6 < *(_QWORD *)(v5 + 24))
      operator new();
  }
  return result;
}

void sub_9C6C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_9C6E0(uint64_t a1)
{
  id result;

  ++*(_QWORD *)(*(_QWORD *)(a1 + 32) + 128);
  result = objc_msgSend(*(id *)(a1 + 32), "_q_shouldLoadResourceIfNeededAllowDefer:", 1);
  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = (_BYTE)result;
  return result;
}

_QWORD *sub_9C77C(_QWORD *result)
{
  uint64_t v1;
  uint64_t v2;

  v1 = result[4];
  v2 = *(_QWORD *)(v1 + 128);
  if (v2)
  {
    *(_QWORD *)(v1 + 128) = v2 - 1;
    result = (_QWORD *)result[4];
    if (!result[16] && !result[18])
      return objc_msgSend(result, "_q_unloadResource");
  }
  return result;
}

void sub_9C844(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

_QWORD *sub_9C85C(_QWORD *result)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  void *v7;

  v1 = result[4];
  v2 = *(_QWORD *)(v1 + 136);
  *(_QWORD *)(v1 + 136) = v2 + 1;
  if (!v2)
  {
    v3 = result;
    result = objc_msgSend(*(id *)(result[4] + 64), "markAsNonVolatile");
    v4 = v3[4];
    v5 = *(_BYTE *)(v4 + 104);
    if ((_DWORD)result)
    {
      *(_BYTE *)(v4 + 104) = v5 | 2;
    }
    else
    {
      *(_BYTE *)(v4 + 104) = v5 & 0xFD;
      v6 = v3[4];
      v7 = *(void **)(v6 + 64);
      *(_QWORD *)(v6 + 64) = 0;

      result = objc_msgSend((id)v3[4], "_q_shouldLoadResourceIfNeededAllowDefer:", 1);
      if ((_DWORD)result)
        *(_BYTE *)(*(_QWORD *)(v3[5] + 8) + 24) = 1;
    }
  }
  return result;
}

void sub_9C980(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

_QWORD *sub_9C998(uint64_t a1)
{
  _QWORD *result;

  result = *(_QWORD **)(a1 + 32);
  if (result[16] || result[17])
  {
    result = objc_msgSend(result, "_q_shouldLoadResourceIfNeededAllowDefer:", 0);
    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = (_BYTE)result;
  }
  return result;
}

_QWORD *sub_9CA34(_QWORD *result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = result[4];
  v2 = *(_QWORD *)(v1 + 136);
  if (v2)
  {
    v3 = v2 - 1;
    *(_QWORD *)(v1 + 136) = v3;
    if (!v3)
    {
      v4 = result;
      result = objc_msgSend(*(id *)(result[4] + 64), "markAsVolatile");
      if ((_DWORD)result)
        *(_BYTE *)(v4[4] + 104) &= ~2u;
    }
  }
  return result;
}

void sub_9CB78(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 48), 8);
  _Unwind_Resume(a1);
}

uint64_t sub_9CB9C(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_9CBAC(uint64_t a1)
{

}

void sub_9CBB4(uint64_t a1)
{
  TUIImageContent *v2;
  uint64_t v3;
  TUIImageContent *v4;
  uint64_t v5;
  void *v6;

  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = objc_msgSend(*(id *)(a1 + 32), "_q_shouldLoadResourceIfNeededAllowDefer:", 0);
  if (!*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24))
  {
    if (*(_QWORD *)(*(_QWORD *)(a1 + 32) + 64))
    {
      v2 = [TUIImageContent alloc];
      v3 = *(_QWORD *)(a1 + 32);
      v4 = -[TUIImageContent initWithImage:insets:intrinsicSize:flags:](v2, "initWithImage:insets:intrinsicSize:flags:", *(_QWORD *)(v3 + 64), (*(_BYTE *)(v3 + 104) & 4) == 0, *(double *)(v3 + 72), *(double *)(v3 + 80), *(double *)(v3 + 88), *(double *)(v3 + 96), *(double *)(v3 + 112), *(double *)(v3 + 120));
      v5 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
      v6 = *(void **)(v5 + 40);
      *(_QWORD *)(v5 + 40) = v4;

    }
  }
}

void sub_9CDD0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

_QWORD *sub_9CDE8(uint64_t a1)
{
  _QWORD *result;

  result = *(_QWORD **)(a1 + 32);
  if (result[8])
  {
    objc_msgSend(result, "_q_unloadResource");
    result = objc_msgSend(*(id *)(a1 + 32), "_q_shouldLoadResourceIfNeededAllowDefer:", 0);
    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = (_BYTE)result;
  }
  return result;
}

uint64_t sub_9CE84(uint64_t result)
{
  ++*(_QWORD *)(*(_QWORD *)(result + 32) + 144);
  return result;
}

_QWORD *sub_9CEF0(_QWORD *result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = result[4];
  v2 = *(_QWORD *)(v1 + 144);
  if (v2)
  {
    v3 = v2 - 1;
    *(_QWORD *)(v1 + 144) = v3;
    if (!v3)
    {
      result = (_QWORD *)result[4];
      if (!result[16])
        return objc_msgSend(result, "_q_unloadResource");
    }
  }
  return result;
}

void sub_9D224(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,char a45,uint64_t a46,uint64_t a47,uint64_t a48,char a49,uint64_t a50,uint64_t a51,uint64_t a52,char a53,uint64_t a54,uint64_t a55,uint64_t a56,char a57)
{
  _Block_object_dispose(&a45, 8);
  _Block_object_dispose(&a49, 8);
  _Block_object_dispose(&a53, 8);
  _Block_object_dispose(&a57, 8);
  _Unwind_Resume(a1);
}

void sub_9D274(uint64_t a1)
{
  _BYTE *v2;
  char v3;
  uint64_t v4;
  BOOL v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  CGSize *v10;
  CGFloat *p_height;
  double v12;
  const CGSize *v13;
  double width;
  uint64_t v15;
  const CGSize *v16;
  CGFloat *v17;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  __int128 v25;

  v2 = *(_BYTE **)(a1 + 32);
  if ((v2[104] & 1) == 0)
  {
    if (!objc_msgSend(v2, "allowsMultipleUpdates"))
      return;
    v2 = *(_BYTE **)(a1 + 32);
  }
  if (*(_BYTE *)(a1 + 112))
  {
    v3 = 8;
  }
  else
  {
    v2[104] &= ~1u;
    *(_BYTE *)(*(_QWORD *)(a1 + 32) + 104) |= 2u;
    v2 = *(_BYTE **)(a1 + 32);
    v3 = 8 * *(_BYTE *)(a1 + 112);
  }
  v2[104] = v2[104] & 0xF7 | v3;
  v4 = *(_QWORD *)(a1 + 32);
  if (*(_QWORD *)(v4 + 128))
    v5 = 0;
  else
    v5 = *(_QWORD *)(v4 + 144) == 0;
  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24) = v5;
  if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24))
  {
    v6 = *(_QWORD *)(a1 + 32);
    v7 = *(_QWORD *)(v6 + 152) + 1;
    *(_QWORD *)(v6 + 152) = v7;
    *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 24) = v7;
  }
  objc_storeStrong((id *)(*(_QWORD *)(a1 + 32) + 64), *(id *)(a1 + 40));
  v8 = *(_QWORD *)(a1 + 32);
  v9 = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v8 + 88) = *(_OWORD *)(a1 + 96);
  *(_OWORD *)(v8 + 72) = v9;
  v10 = *(CGSize **)(a1 + 32);
  if ((LOBYTE(v10[6].height) & 4) != 0)
    p_height = &v10[7].height;
  else
    p_height = &CGSizeZero.height;
  v12 = *p_height;
  v13 = v10 + 7;
  if ((LOBYTE(v10[6].height) & 4) == 0)
    v13 = &CGSizeZero;
  width = v13->width;
  -[CGSize _q_loadedImage:insets:](v10, "_q_loadedImage:insets:", *(_QWORD *)(a1 + 40), *(double *)(a1 + 80), *(double *)(a1 + 88), *(double *)(a1 + 96), *(double *)(a1 + 104));
  v15 = *(_QWORD *)(a1 + 32);
  if ((*(_BYTE *)(v15 + 104) & 4) != 0)
    v16 = (const CGSize *)(v15 + 112);
  else
    v16 = &CGSizeZero;
  if ((*(_BYTE *)(v15 + 104) & 4) != 0)
    v17 = (CGFloat *)(v15 + 120);
  else
    v17 = &CGSizeZero.height;
  if (width != v16->width || v12 != *v17)
  {
    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 24) = 1;
    v15 = *(_QWORD *)(a1 + 32);
  }
  if (objc_msgSend(*(id *)(v15 + 40), "count"))
  {
    v19 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 40), "allObjects"));
    v20 = *(_QWORD *)(*(_QWORD *)(a1 + 72) + 8);
    v21 = *(void **)(v20 + 40);
    *(_QWORD *)(v20 + 40) = v19;

  }
  else if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24))
  {
    v22 = *(_QWORD *)(a1 + 32);
    v23 = *(void **)(v22 + 64);
    *(_QWORD *)(v22 + 64) = 0;

    v24 = *(_QWORD *)(a1 + 32);
    v25 = *(_OWORD *)&UIEdgeInsetsZero.bottom;
    *(_OWORD *)(v24 + 72) = *(_OWORD *)&UIEdgeInsetsZero.top;
    *(_OWORD *)(v24 + 88) = v25;
    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24) = 1;
  }
}

void sub_9D47C(uint64_t a1)
{
  id v2;
  id v3;
  id v4;
  uint64_t v5;
  void *i;
  void *v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  _BYTE v12[128];

  v8 = 0u;
  v9 = 0u;
  v10 = 0u;
  v11 = 0u;
  v2 = *(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40);
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v9;
    do
    {
      for (i = 0; i != v4; i = (char *)i + 1)
      {
        if (*(_QWORD *)v9 != v5)
          objc_enumerationMutation(v2);
        v7 = *(void **)(*((_QWORD *)&v8 + 1) + 8 * (_QWORD)i);
        if ((objc_opt_respondsToSelector(v7, "imageResourceDidChangeIntrinsicSize:") & 1) != 0)
          objc_msgSend(v7, "imageResourceDidChangeIntrinsicSize:", *(_QWORD *)(a1 + 32), (_QWORD)v8);
      }
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
    }
    while (v4);
  }

}

_QWORD *sub_9D5A0(uint64_t a1)
{
  _QWORD *result;

  result = *(_QWORD **)(a1 + 32);
  if (result[19] == *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24))
    return objc_msgSend(result, "_q_unloadResource");
  return result;
}

void sub_9D8D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,char a37,uint64_t a38,uint64_t a39,uint64_t a40,char a41,uint64_t a42,uint64_t a43,uint64_t a44,char a45)
{
  _Block_object_dispose(&a37, 8);
  _Block_object_dispose(&a41, 8);
  _Block_object_dispose(&a45, 8);
  _Unwind_Resume(a1);
}

void sub_9D918(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;

  v3 = *(_QWORD *)(a1 + 32);
  v2 = *(void **)(a1 + 40);
  if (*(void **)(v3 + 64) != v2
    || (vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_f64(*(float64x2_t *)(v3 + 72), *(float64x2_t *)(a1 + 72)), (int32x4_t)vceqq_f64(*(float64x2_t *)(v3 + 88), *(float64x2_t *)(a1 + 88)))), 0xFuLL))) & 1) != 0)
  {
    objc_storeStrong((id *)(v3 + 64), v2);
    v4 = *(_QWORD *)(a1 + 32);
    v5 = *(_OWORD *)(a1 + 72);
    *(_OWORD *)(v4 + 88) = *(_OWORD *)(a1 + 88);
    *(_OWORD *)(v4 + 72) = v5;
    *(_BYTE *)(*(_QWORD *)(a1 + 32) + 104) = *(_BYTE *)(*(_QWORD *)(a1 + 32) + 104) & 0xF7 | (8
                                                                                                * *(_BYTE *)(a1 + 104));
    v6 = *(_BYTE *)(a1 + 105);
    if (v6)
    {
      v7 = *(_QWORD *)(a1 + 32);
      if (*(_QWORD *)(v7 + 128))
        v6 = 0;
      else
        v6 = *(_QWORD *)(v7 + 144) == 0;
    }
    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24) = v6;
    if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24))
    {
      v8 = *(_QWORD *)(a1 + 32);
      v9 = *(_QWORD *)(v8 + 152) + 1;
      *(_QWORD *)(v8 + 152) = v9;
      *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 24) = v9;
    }
    if (objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 40), "count"))
    {
      v10 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 40), "allObjects"));
      v11 = *(_QWORD *)(*(_QWORD *)(a1 + 64) + 8);
      v12 = *(void **)(v11 + 40);
      *(_QWORD *)(v11 + 40) = v10;

    }
  }
}

_QWORD *sub_9DA50(uint64_t a1)
{
  _QWORD *result;

  result = *(_QWORD **)(a1 + 32);
  if (result[19] == *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24))
    return objc_msgSend(result, "_q_unloadResource");
  return result;
}

void sub_9DB30(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  BOOL v5;
  TUIImageContent *v6;
  uint64_t v7;
  void *v8;

  v2 = *(_QWORD *)(a1 + 32);
  v3 = *(_QWORD *)(v2 + 64);
  v4 = *(_BYTE *)(v2 + 104);
  if (v3)
    v5 = (v4 & 3) == 0;
  else
    v5 = 1;
  if (!v5 && (*(_BYTE *)(a1 + 48) & 1) != 0)
  {
    v6 = -[TUIImageContent initWithImage:insets:]([TUIImageContent alloc], "initWithImage:insets:", *(_QWORD *)(*(_QWORD *)(a1 + 32) + 64), *(double *)(*(_QWORD *)(a1 + 32) + 72), *(double *)(*(_QWORD *)(a1 + 32) + 80), *(double *)(*(_QWORD *)(a1 + 32) + 88), *(double *)(*(_QWORD *)(a1 + 32) + 96));
LABEL_11:
    v7 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
    v8 = *(void **)(v7 + 40);
    *(_QWORD *)(v7 + 40) = v6;

    return;
  }
  if ((v4 & 4) != 0 && (*(_BYTE *)(a1 + 48) & 2) != 0)
  {
    v6 = -[TUIImageContent initWithIntrinsicSize:flags:]([TUIImageContent alloc], "initWithIntrinsicSize:flags:", 0, *(double *)(*(_QWORD *)(a1 + 32) + 112), *(double *)(*(_QWORD *)(a1 + 32) + 120));
    goto LABEL_11;
  }
}

uint64_t sub_9DC68(uint64_t result)
{
  uint64_t v1;
  int v2;

  v1 = *(_QWORD *)(result + 32);
  if (*(_QWORD *)(v1 + 64))
    v2 = (*(unsigned __int8 *)(v1 + 104) >> 1) & 1;
  else
    LOBYTE(v2) = 0;
  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(result + 40) + 8) + 24) = v2;
  return result;
}

uint64_t sub_9DD24(uint64_t result)
{
  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(result + 40) + 8) + 24) = (*(_BYTE *)(*(_QWORD *)(result + 32) + 104) & 3) == 1;
  return result;
}

void sub_9DDDC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

_BYTE *sub_9DDF4(uint64_t a1)
{
  _BYTE *result;

  result = *(_BYTE **)(a1 + 32);
  if ((result[104] & 4) == 0)
  {
    result = objc_msgSend(result, "_q_shouldLoadResourceIfNeededAllowDefer:", 0);
    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = (_BYTE)result;
  }
  return result;
}

id sub_9DEB0(uint64_t a1)
{
  return objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 40), "addObject:", *(_QWORD *)(a1 + 40));
}

id sub_9DF3C(uint64_t a1)
{
  return objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 40), "removeObject:", *(_QWORD *)(a1 + 40));
}

void sub_9E674(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_9E698(id *a1, void *a2)
{
  id v3;
  id v4;
  id v5;
  id v6;
  NSObject *v7;
  void *v8;
  id WeakRetained;
  int v10;
  void *v11;

  v3 = a2;
  if (v3)
  {
    v4 = objc_alloc((Class)BCUPurgeableImage);
    objc_msgSend(a1[5], "contentsScale");
    v5 = objc_msgSend(v4, "initWithData:contentsScale:", v3);
  }
  else
  {
    v6 = TUIImageCacheLog();
    v7 = objc_claimAutoreleasedReturnValue(v6);
    if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
    {
      v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[4], "absoluteURL"));
      v10 = 138412290;
      v11 = v8;
      _os_log_impl(&dword_0, v7, OS_LOG_TYPE_INFO, "failed to load image with url:%@", (uint8_t *)&v10, 0xCu);

    }
    v5 = 0;
  }
  WeakRetained = objc_loadWeakRetained(a1 + 6);
  objc_msgSend(WeakRetained, "_loadedImage:insets:", v5, UIEdgeInsetsZero.top, UIEdgeInsetsZero.left, UIEdgeInsetsZero.bottom, UIEdgeInsetsZero.right);

}

id sub_9EAA4(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(*(id *)(a1 + 32), "_loadedImage:insets:", a2);
}

void sub_9F580(uint64_t a1, uint64_t a2, void *a3, double a4, double a5, double a6, double a7)
{
  void *v13;
  id v14;
  id v15;
  id v16;

  v13 = *(void **)(a1 + 32);
  v14 = a3;
  objc_msgSend(v13, "_endFilterOperation:", a2);
  v15 = TUIProtocolCast(&OBJC_PROTOCOL___TUIPurgeableImage, v14);
  v16 = (id)objc_claimAutoreleasedReturnValue(v15);

  (*(void (**)(double, double, double, double))(*(_QWORD *)(a1 + 40) + 16))(a4, a5, a6, a7);
}

TUIImageResourceCacheKey *__cdecl sub_9FB00(id a1, TUIImageResource *a2)
{
  return (TUIImageResourceCacheKey *)-[TUIImageResource sizedKey](a2, "sizedKey");
}

TUIImageResourceCacheKey *__cdecl sub_9FBBC(id a1, TUIImageResource *a2)
{
  return (TUIImageResourceCacheKey *)-[TUIImageResource unsizedKey](a2, "unsizedKey");
}

void sub_A0514(uint64_t a1, void *a2, double a3, double a4, double a5, double a6)
{
  id v11;
  id v12;
  NSObject *v13;

  v11 = a2;
  v12 = TUIImageCacheLog();
  v13 = objc_claimAutoreleasedReturnValue(v12);
  if (os_log_type_enabled(v13, OS_LOG_TYPE_DEBUG))
    sub_17DD98(v11, a1, v13);

  objc_msgSend(*(id *)(a1 + 40), "_loadedImage:insets:", v11, a3, a4, a5, a6);
  objc_msgSend(*(id *)(a1 + 32), "removeAllObjects");

}

void sub_A07D0(uint64_t a1, uint64_t a2, void *a3, double a4, double a5, double a6, double a7)
{
  void *v13;
  id v14;
  id v15;
  id v16;

  v13 = *(void **)(a1 + 32);
  v14 = a3;
  objc_msgSend(v13, "_endFilterOperation:", a2);
  v15 = TUIProtocolCast(&OBJC_PROTOCOL___TUIPurgeableImage, v14);
  v16 = (id)objc_claimAutoreleasedReturnValue(v15);

  (*(void (**)(double, double, double, double))(*(_QWORD *)(a1 + 40) + 16))(a4, a5, a6, a7);
}

void sub_A0ADC(uint64_t a1, uint64_t a2, void *a3)
{
  id v5;
  id v6;
  NSObject *v7;
  id v8;

  v5 = a3;
  if (v5)
  {
    v6 = TUIImageCacheLog();
    v7 = objc_claimAutoreleasedReturnValue(v6);
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
      sub_17DE34(a1, v5, v7);

    (*(void (**)(double, double, double, double))(*(_QWORD *)(a1 + 40) + 16))(UIEdgeInsetsZero.top, UIEdgeInsetsZero.left, UIEdgeInsetsZero.bottom, UIEdgeInsetsZero.right);
  }
  else
  {
    v8 = objc_msgSend(objc_alloc((Class)BCUPurgeableImage), "initWithImage:surface:contentsScale:", a2, 0, *(double *)(a1 + 48));
    (*(void (**)(double, double, double, double))(*(_QWORD *)(a1 + 40) + 16))(UIEdgeInsetsZero.top, UIEdgeInsetsZero.left, UIEdgeInsetsZero.bottom, UIEdgeInsetsZero.right);

  }
}

void sub_A12F8(uint64_t a1)
{
  void *v2;
  id v3;
  __int128 v4;
  id v5;
  uint64_t v6;
  void *i;
  void *v8;
  void *v9;
  void *v10;
  id v11;
  NSObject *v12;
  uint64_t v13;
  void *v14;
  const char *v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  uint8_t buf[4];
  void *v22;
  __int16 v23;
  uint64_t v24;
  __int16 v25;
  const char *v26;
  _BYTE v27[128];

  v17 = 0u;
  v18 = 0u;
  v19 = 0u;
  v20 = 0u;
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 72), "objectEnumerator"));
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v17, v27, 16);
  if (v3)
  {
    v5 = v3;
    v6 = *(_QWORD *)v18;
    *(_QWORD *)&v4 = 134218498;
    v16 = v4;
    do
    {
      for (i = 0; i != v5; i = (char *)i + 1)
      {
        if (*(_QWORD *)v18 != v6)
          objc_enumerationMutation(v2);
        v8 = *(void **)(*((_QWORD *)&v17 + 1) + 8 * (_QWORD)i);
        v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "imageContentWithOptions:", 1, v16));
        v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "image"));

        if (!*(_BYTE *)(a1 + 40) || v10)
        {
          v11 = TUIImageCacheLog();
          v12 = objc_claimAutoreleasedReturnValue(v11);
          if (os_log_type_enabled(v12, OS_LOG_TYPE_INFO))
          {
            v13 = objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "debugFunctionalDescription"));
            v14 = (void *)v13;
            *(_DWORD *)buf = v16;
            v15 = "not-loaded";
            if (v10)
              v15 = "loaded";
            v22 = v8;
            v23 = 2114;
            v24 = v13;
            v25 = 2082;
            v26 = v15;
            _os_log_impl(&dword_0, v12, OS_LOG_TYPE_INFO, "[%p] %{public}@ (%{public}s)", buf, 0x20u);

          }
        }
      }
      v5 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v17, v27, 16);
    }
    while (v5);
  }

}

void sub_A1B28(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  void *v4;
  _TUIImageResourceUnsizedCacheSet *v5;
  void *v6;
  _TUICachedURLImageResource *v7;
  uint64_t v8;
  void *v9;
  id v10;

  v2 = *(_QWORD *)(a1 + 32);
  if (v2)
    v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 40) + 40), "objectForKey:", v2));
  else
    v3 = 0;
  objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 40), v3);
  if (v2)

  if (!*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 40))
  {
    if (*(_QWORD *)(a1 + 32))
    {
      v10 = (id)objc_claimAutoreleasedReturnValue(+[_TUICachedURLImageResource sizedURLFromTemplatedURL:baseURL:naturalSize:contentsScale:](_TUICachedURLImageResource, "sizedURLFromTemplatedURL:baseURL:naturalSize:contentsScale:", *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(double *)(a1 + 72), *(double *)(a1 + 80), *(double *)(a1 + 88)));
      v4 = (void *)objc_claimAutoreleasedReturnValue(+[_TUICachedURLImageResource unsizedKeyFromTemplatedURL:baseURL:](_TUICachedURLImageResource, "unsizedKeyFromTemplatedURL:baseURL:", *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56)));
      v5 = sub_A1C74(v4, *(void **)(*(_QWORD *)(a1 + 40) + 48));
      v6 = (void *)objc_claimAutoreleasedReturnValue(v5);
      v7 = -[_TUICachedURLImageResource initWithCache:unsizedCacheSet:queue:templateURL:baseURL:url:naturalSize:contentsScale:loader:]([_TUICachedURLImageResource alloc], "initWithCache:unsizedCacheSet:queue:templateURL:baseURL:url:naturalSize:contentsScale:loader:", *(double *)(a1 + 72), *(double *)(a1 + 80), *(double *)(a1 + 88), *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8));
      v8 = *(_QWORD *)(*(_QWORD *)(a1 + 64) + 8);
      v9 = *(void **)(v8 + 40);
      *(_QWORD *)(v8 + 40) = v7;

      objc_msgSend(*(id *)(*(_QWORD *)(a1 + 40) + 40), "setObject:forKey:", *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 40), *(_QWORD *)(a1 + 32));
    }
  }
}

_TUIImageResourceUnsizedCacheSet *sub_A1C74(void *a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  _TUIImageResourceUnsizedCacheSet *v6;

  v3 = a1;
  v4 = a2;
  v5 = v4;
  if (v3)
  {
    v6 = (_TUIImageResourceUnsizedCacheSet *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "objectForKey:", v3));
    if (!v6)
    {
      v6 = objc_alloc_init(_TUIImageResourceUnsizedCacheSet);
      objc_msgSend(v5, "setObject:forKey:", v6, v3);
    }
  }
  else
  {
    v6 = 0;
  }

  return v6;
}

void sub_A1E1C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_A1E34(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  _TUICachedURLImageResource *v4;
  uint64_t v5;
  void *v6;
  TUIImageResourceCacheKey *v7;

  v2 = *(_QWORD *)(a1 + 32);
  if (v2)
    v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 40) + 40), "objectForKey:", v2));
  else
    v3 = 0;
  objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 40), v3);
  if (v2)

  if (!*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 40) && *(_QWORD *)(a1 + 32))
  {
    if (*(_QWORD *)(a1 + 48))
    {
      v4 = -[_TUICachedURLImageResource initWithCache:unsizedCacheSet:queue:templateURL:baseURL:url:naturalSize:contentsScale:loader:]([_TUICachedURLImageResource alloc], "initWithCache:unsizedCacheSet:queue:templateURL:baseURL:url:naturalSize:contentsScale:loader:", CGSizeZero.width, CGSizeZero.height, *(double *)(a1 + 64), *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8));
      v5 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
      v6 = *(void **)(v5 + 40);
      *(_QWORD *)(v5 + 40) = v4;

      v7 = -[TUIImageResourceCacheKey initWithURL:]([TUIImageResourceCacheKey alloc], "initWithURL:", *(_QWORD *)(a1 + 48));
      objc_msgSend(*(id *)(*(_QWORD *)(a1 + 40) + 40), "setObject:forKey:", *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 40), v7);

    }
  }
}

void sub_A209C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  _TUIImageResourceUnsizedCacheSet *v5;
  void *v6;
  _TUICachedTintedImageResource *v7;
  uint64_t v8;
  void *v9;
  id v10;

  v2 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1[4] + 56), "objectForKey:", a1[5]));
  v3 = *(_QWORD *)(a1[8] + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

  if (!*(_QWORD *)(*(_QWORD *)(a1[8] + 8) + 40))
  {
    v10 = (id)objc_claimAutoreleasedReturnValue(+[_TUICachedTintedImageResource unsizedKeyForColor:imageResource:](_TUICachedTintedImageResource, "unsizedKeyForColor:imageResource:", a1[6], a1[7]));
    v5 = sub_A1C74(v10, *(void **)(a1[4] + 64));
    v6 = (void *)objc_claimAutoreleasedReturnValue(v5);
    v7 = -[_TUICachedTintedImageResource initWithCache:unsizedCacheSet:queue:resource:color:]([_TUICachedTintedImageResource alloc], "initWithCache:unsizedCacheSet:queue:resource:color:", a1[4], v6, *(_QWORD *)(a1[4] + 32), a1[7], a1[6]);
    v8 = *(_QWORD *)(a1[8] + 8);
    v9 = *(void **)(v8 + 40);
    *(_QWORD *)(v8 + 40) = v7;

    objc_msgSend(*(id *)(a1[4] + 56), "setObject:forKey:", *(_QWORD *)(*(_QWORD *)(a1[8] + 8) + 40), a1[5]);
  }
}

void sub_A233C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_list va;

  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_A2354(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  _TUIImageResourceUnsizedCacheSet *v5;
  void *v6;
  _TUICachedFilterImageResource *v7;
  uint64_t v8;
  void *v9;
  id v10;

  v2 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 72), "objectForKey:", *(_QWORD *)(a1 + 40)));
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 64) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

  if (!*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 40))
  {
    v10 = (id)objc_claimAutoreleasedReturnValue(+[_TUICachedFilterImageResource unsizedKeyForFilter:contentsScale:imageResource:](_TUICachedFilterImageResource, "unsizedKeyForFilter:contentsScale:imageResource:", *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(double *)(a1 + 72)));
    v5 = sub_A1C74(v10, *(void **)(*(_QWORD *)(a1 + 32) + 80));
    v6 = (void *)objc_claimAutoreleasedReturnValue(v5);
    v7 = -[_TUICachedFilterImageResource initWithCache:unsizedCacheSet:queue:naturalSize:contentsScale:resource:filter:]([_TUICachedFilterImageResource alloc], "initWithCache:unsizedCacheSet:queue:naturalSize:contentsScale:resource:filter:", *(_QWORD *)(a1 + 32), v6, *(_QWORD *)(*(_QWORD *)(a1 + 32) + 32), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 48), *(double *)(a1 + 80), *(double *)(a1 + 88), *(double *)(a1 + 72));
    v8 = *(_QWORD *)(*(_QWORD *)(a1 + 64) + 8);
    v9 = *(void **)(v8 + 40);
    *(_QWORD *)(v8 + 40) = v7;

    objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 72), "setObject:forKey:", *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 40), *(_QWORD *)(a1 + 40));
  }
}

void sub_A2604(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_list va;

  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_A261C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  _TUIImageResourceUnsizedCacheSet *v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  uint64_t v10;
  void *i;
  uint64_t v12;
  void *v13;
  id v14;
  NSObject *v15;
  _TUICachedSeriesStackImageResource *v16;
  uint64_t v17;
  void *v18;
  void *v19;
  void *v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  uint8_t buf[4];
  uint64_t v26;
  _BYTE v27[128];

  v2 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 88), "objectForKey:", *(_QWORD *)(a1 + 40)));
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 72) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

  if (!*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 72) + 8) + 40))
  {
    v20 = (void *)objc_claimAutoreleasedReturnValue(+[_TUICachedSeriesStackImageResource unsizedKeyForContentsScale:imageResources:](_TUICachedSeriesStackImageResource, "unsizedKeyForContentsScale:imageResources:", *(_QWORD *)(a1 + 48), *(double *)(a1 + 80)));
    v5 = sub_A1C74(v20, *(void **)(*(_QWORD *)(a1 + 32) + 80));
    v19 = (void *)objc_claimAutoreleasedReturnValue(v5);
    v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableArray arrayWithCapacity:](NSMutableArray, "arrayWithCapacity:", objc_msgSend(*(id *)(a1 + 56), "count")));
    v21 = 0u;
    v22 = 0u;
    v23 = 0u;
    v24 = 0u;
    v7 = *(id *)(a1 + 56);
    v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v21, v27, 16);
    if (v8)
    {
      v9 = v8;
      v10 = *(_QWORD *)v22;
      do
      {
        for (i = 0; i != v9; i = (char *)i + 1)
        {
          if (*(_QWORD *)v22 != v10)
            objc_enumerationMutation(v7);
          v12 = *(_QWORD *)(*((_QWORD *)&v21 + 1) + 8 * (_QWORD)i);
          v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 16), "imageFilterWithIdentifier:", v12));
          if (v13)
          {
            objc_msgSend(v6, "addObject:", v13);
          }
          else
          {
            v14 = TUIImageCacheLog();
            v15 = objc_claimAutoreleasedReturnValue(v14);
            if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
            {
              *(_DWORD *)buf = 138412290;
              v26 = v12;
              _os_log_error_impl(&dword_0, v15, OS_LOG_TYPE_ERROR, "Can't find cover filter '%@' for series stack", buf, 0xCu);
            }

          }
        }
        v9 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v21, v27, 16);
      }
      while (v9);
    }

    v16 = -[_TUICachedSeriesStackImageResource initWithCache:unsizedCacheSet:queue:naturalSize:contentsScale:resources:filters:imageSetFilter:]([_TUICachedSeriesStackImageResource alloc], "initWithCache:unsizedCacheSet:queue:naturalSize:contentsScale:resources:filters:imageSetFilter:", *(_QWORD *)(a1 + 32), v19, *(_QWORD *)(*(_QWORD *)(a1 + 32) + 32), *(_QWORD *)(a1 + 48), v6, *(_QWORD *)(a1 + 64), *(double *)(a1 + 88), *(double *)(a1 + 96), *(double *)(a1 + 80));
    v17 = *(_QWORD *)(*(_QWORD *)(a1 + 72) + 8);
    v18 = *(void **)(v17 + 40);
    *(_QWORD *)(v17 + 40) = v16;

    objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 88), "setObject:forKey:", *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 72) + 8) + 40), *(_QWORD *)(a1 + 40));
  }
}

void sub_A2BF8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
  _Block_object_dispose(&a29, 8);
  _Unwind_Resume(a1);
}

void sub_A2C20(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v2 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1[4] + 120), "objectForKey:", a1[5]));
  v3 = *(_QWORD *)(a1[6] + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

void sub_A2C5C(_QWORD *a1)
{
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1[4] + 120), "objectForKey:", a1[5]));

  v3 = *(void **)(a1[4] + 120);
  if (v2)
  {
    v4 = objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "objectForKey:", a1[5]));
    v5 = *(_QWORD *)(a1[6] + 8);
    v6 = *(void **)(v5 + 40);
    *(_QWORD *)(v5 + 40) = v4;

  }
  else
  {
    objc_msgSend(v3, "setObject:forKey:", *(_QWORD *)(*(_QWORD *)(a1[6] + 8) + 40), a1[5]);
  }
}

void sub_A2FF0(uint64_t a1, void *a2)
{
  uint64_t v3;
  id v4;

  v3 = *(_QWORD *)(a1 + 32);
  v4 = a2;
  objc_msgSend(v4, "setUserInterfaceStyle:", v3);
  objc_msgSend(v4, "setDisplayScale:", *(double *)(a1 + 40));
  objc_msgSend(v4, "setLayoutDirection:", *(_QWORD *)(a1 + 48));

}

id sub_A3044(uint64_t a1)
{
  double v2;
  double v3;
  double v4;
  double v5;

  v2 = UIEdgeInsetsSubtract(15, UIEdgeInsetsZero.top, UIEdgeInsetsZero.left, UIEdgeInsetsZero.bottom, UIEdgeInsetsZero.right, *(double *)(a1 + 40), *(double *)(a1 + 48), *(double *)(a1 + 56), *(double *)(a1 + 64));
  return _objc_msgSend(*(id *)(a1 + 32), "drawInRect:", CGPointZero.x + v5, v2 + CGPointZero.y, *(double *)(a1 + 72) - (v5 + v3), *(double *)(a1 + 80) - (v2 + v4));
}

void sub_A31F4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  _TUIImageResourceUnsizedCacheSet *v5;
  void *v6;
  _TUICachedMediaBackdropImageResource *v7;
  uint64_t v8;
  void *v9;
  id v10;

  v2 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 104), "objectForKey:", *(_QWORD *)(a1 + 40)));
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

  if (!*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 40))
  {
    v10 = (id)objc_claimAutoreleasedReturnValue(+[_TUICachedMediaBackdropImageResource unsizedKeyForContentsScale:imageResource:](_TUICachedMediaBackdropImageResource, "unsizedKeyForContentsScale:imageResource:", *(_QWORD *)(a1 + 48), *(double *)(a1 + 64)));
    v5 = sub_A1C74(v10, *(void **)(*(_QWORD *)(a1 + 32) + 112));
    v6 = (void *)objc_claimAutoreleasedReturnValue(v5);
    v7 = -[_TUICachedMediaBackdropImageResource initWithCache:unsizedCacheSet:queue:naturalSize:contentsScale:resource:]([_TUICachedMediaBackdropImageResource alloc], "initWithCache:unsizedCacheSet:queue:naturalSize:contentsScale:resource:", *(_QWORD *)(a1 + 32), v6, *(_QWORD *)(*(_QWORD *)(a1 + 32) + 32), *(_QWORD *)(a1 + 48), *(double *)(a1 + 72), *(double *)(a1 + 80), *(double *)(a1 + 64));
    v8 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
    v9 = *(void **)(v8 + 40);
    *(_QWORD *)(v8 + 40) = v7;

    objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 104), "setObject:forKey:", *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 40), *(_QWORD *)(a1 + 40));
  }
}

void sub_A3348(uint64_t a1)
{
  void *v2;
  id v3;
  id v4;
  uint64_t v5;
  void *v6;
  void *v7;
  id v8;
  id v9;
  uint64_t v10;
  void *v11;
  void *v12;
  id v13;
  id v14;
  uint64_t v15;
  void *v16;
  void *v17;
  id v18;
  id v19;
  uint64_t v20;
  void *v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  _BYTE v38[128];
  _BYTE v39[128];
  _BYTE v40[128];
  _BYTE v41[128];

  v36 = 0u;
  v37 = 0u;
  v34 = 0u;
  v35 = 0u;
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 40), "objectEnumerator"));
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v34, v41, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v35;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v35 != v5)
          objc_enumerationMutation(v2);
        objc_msgSend(*(id *)(*((_QWORD *)&v34 + 1) + 8 * (_QWORD)v6), "_refresh");
        v6 = (char *)v6 + 1;
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v34, v41, 16);
    }
    while (v4);
  }

  v32 = 0u;
  v33 = 0u;
  v30 = 0u;
  v31 = 0u;
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 56), "objectEnumerator"));
  v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v30, v40, 16);
  if (v8)
  {
    v9 = v8;
    v10 = *(_QWORD *)v31;
    do
    {
      v11 = 0;
      do
      {
        if (*(_QWORD *)v31 != v10)
          objc_enumerationMutation(v7);
        objc_msgSend(*(id *)(*((_QWORD *)&v30 + 1) + 8 * (_QWORD)v11), "_refresh");
        v11 = (char *)v11 + 1;
      }
      while (v9 != v11);
      v9 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v30, v40, 16);
    }
    while (v9);
  }

  v28 = 0u;
  v29 = 0u;
  v26 = 0u;
  v27 = 0u;
  v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 72), "objectEnumerator"));
  v13 = objc_msgSend(v12, "countByEnumeratingWithState:objects:count:", &v26, v39, 16);
  if (v13)
  {
    v14 = v13;
    v15 = *(_QWORD *)v27;
    do
    {
      v16 = 0;
      do
      {
        if (*(_QWORD *)v27 != v15)
          objc_enumerationMutation(v12);
        objc_msgSend(*(id *)(*((_QWORD *)&v26 + 1) + 8 * (_QWORD)v16), "_refresh");
        v16 = (char *)v16 + 1;
      }
      while (v14 != v16);
      v14 = objc_msgSend(v12, "countByEnumeratingWithState:objects:count:", &v26, v39, 16);
    }
    while (v14);
  }

  v24 = 0u;
  v25 = 0u;
  v22 = 0u;
  v23 = 0u;
  v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 88), "objectEnumerator", 0));
  v18 = objc_msgSend(v17, "countByEnumeratingWithState:objects:count:", &v22, v38, 16);
  if (v18)
  {
    v19 = v18;
    v20 = *(_QWORD *)v23;
    do
    {
      v21 = 0;
      do
      {
        if (*(_QWORD *)v23 != v20)
          objc_enumerationMutation(v17);
        objc_msgSend(*(id *)(*((_QWORD *)&v22 + 1) + 8 * (_QWORD)v21), "_refresh");
        v21 = (char *)v21 + 1;
      }
      while (v19 != v21);
      v19 = objc_msgSend(v17, "countByEnumeratingWithState:objects:count:", &v22, v38, 16);
    }
    while (v19);
  }

}

void sub_A36F4(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint8_t *a5)
{
  _os_log_debug_impl(a1, a2, OS_LOG_TYPE_DEBUG, a4, a5, 0x16u);
}

uint64_t TUI::Util::PartialStruct::Storage::Header::determineOptimalMap(TUI::Util::PartialStruct::Storage::Header *this, unsigned int a2)
{
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unsigned __int16 *v16;
  unsigned __int16 *v17;
  int v18;
  int v19;
  int v20;

  v4 = *(_QWORD *)this;
  v2 = (char *)this + 8;
  v3 = v4;
  v5 = v4 - *(unsigned int *)(v4 + 4);
  v6 = *(_DWORD *)(v5 + 4);
  if (v6 >= 2)
  {
    v7 = ((unint64_t)*(unsigned __int16 *)(v3 + 8) + 16) >> 4;
    do
    {
      v8 = v7;
      if (!v7)
        break;
      --v7;
    }
    while (!*(_WORD *)&v2[2 * v8 - 2]);
    v9 = 0;
    v10 = a2 >> 4;
    v11 = v6;
    do
    {
      v12 = v5 + *(unsigned int *)(v5 + 16 + 4 * v9);
      v13 = ((unint64_t)*(unsigned __int16 *)(v12 + 8) + 16) >> 4;
      if (v13 >= v8)
        v14 = v8;
      else
        v14 = ((unint64_t)*(unsigned __int16 *)(v12 + 8) + 16) >> 4;
      if (v14)
      {
        if (v8 >= v13)
          v15 = ((unint64_t)*(unsigned __int16 *)(v12 + 8) + 16) >> 4;
        else
          v15 = v8;
        v16 = (unsigned __int16 *)v2;
        v17 = (unsigned __int16 *)(v12 + 12);
        while (1)
        {
          v19 = *v16++;
          v18 = v19;
          v20 = *v17++;
          if ((v18 & ~v20) != 0)
            break;
          if (!--v15)
            goto LABEL_16;
        }
      }
      else
      {
LABEL_16:
        if (a2 == 0xFFFF)
        {
          if (v8 <= v13)
            return v12;
        }
        else if (v13 > v10 && v8 <= v13 && ((1 << (a2 & 0xF)) & *(unsigned __int16 *)(v12 + 12 + 2 * v10)) != 0)
        {
          return v12;
        }
      }
      ++v9;
    }
    while (v9 != v11);
  }
  return 0;
}

_QWORD *TUI::Util::PartialStruct::Storage::Header::transferToNewMap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int v5;
  uint64_t v6;
  _QWORD *v7;
  void *v8;
  unsigned __int16 i;
  size_t v10;
  unsigned int v11;
  unint64_t v12;
  unsigned int v13;
  unint64_t v14;
  _QWORD *v16;

  v4 = a1 + 8;
  if (*(unsigned __int16 *)(*(_QWORD *)a1 + 8) >= *(unsigned __int16 *)(a2 + 8))
    v5 = *(unsigned __int16 *)(a2 + 8);
  else
    v5 = *(unsigned __int16 *)(*(_QWORD *)a1 + 8);
  v6 = *(_QWORD *)a1 - *(unsigned int *)(*(_QWORD *)a1 + 4);
  v7 = malloc_type_malloc(*(unsigned __int16 *)(a2 + 10), 0xC0528C8BuLL);
  bzero(v7, *(unsigned __int16 *)(a2 + 10));
  v16 = v7;
  *v7 = a2;
  v8 = v7 + 1;
  bzero(v8, ((*(unsigned __int16 *)(a2 + 8) + 16) >> 3) & 0x3FFELL);
  for (i = 0; i <= v5; ++i)
  {
    if (((*(unsigned __int16 *)(v4 + 2 * (i >> 4)) >> (i & 0xF)) & 1) != 0)
    {
      if (i <= (unsigned __int16)*(_DWORD *)(v6 + 12))
        v10 = *(unsigned __int16 *)(2 * (unsigned __int16)*(_DWORD *)(v6 + 12)
                                  + v6
                                  + 16
                                  + 4 * *(unsigned int *)(v6 + 4)
                                  + 2 * i
                                  + 2);
      else
        v10 = 0;
      v11 = *(unsigned __int16 *)(*(_QWORD *)a1 + 8);
      if (v11 >= i)
        v12 = (unint64_t)*(unsigned __int16 *)(*(_QWORD *)a1 + (((v11 + 16) >> 3) & 0x3FFELL) + 2 * i + 12) >> 1;
      else
        v12 = 0;
      v13 = *(unsigned __int16 *)(a2 + 8);
      if (v13 >= i)
      {
        if (v12)
        {
          v14 = *(unsigned __int16 *)(a2 + 12 + (((v13 + 16) >> 3) & 0x3FFELL) + 2 * i);
          if (v14 >= 2)
          {
            memcpy((char *)v16 + (v14 >> 1), (const void *)(v12 + a1), v10);
            *((_WORD *)v8 + (i >> 4)) |= 1 << (i & 0xF);
          }
        }
      }
    }
  }
  return v16;
}

void TUI::Util::PartialStruct::Storage::~Storage(TUI::Util::PartialStruct::Storage::Header **this)
{
  TUI::Util::PartialStruct::Storage::Header *v2;
  BOOL v3;
  unsigned __int16 v4;
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;

  v2 = *this;
  if (*this)
    v3 = ((unint64_t)*this & 1) == 0;
  else
    v3 = 0;
  if (v3)
  {
    v4 = 0;
    v5 = *(_QWORD *)v2;
    v6 = *(unsigned __int16 *)(*(_QWORD *)v2 + 8);
    v7 = *(_QWORD *)v2 + 12;
    do
    {
      if (((*((unsigned __int16 *)v2 + (v4 >> 4) + 4) >> (v4 & 0xF)) & 1) != 0)
      {
        v8 = *(unsigned __int16 *)(v5 + 8);
        if (v8 >= v4 && (*(_WORD *)(v7 + (((v8 + 16) >> 3) & 0x3FFELL) + 2 * v4) & 1) != 0)
          TUI::Util::PartialStruct::Storage::setObjectForKey(this, v4, 0);
      }
      ++v4;
    }
    while (v6 >= v4);
    free(v2);
  }
}

void TUI::Util::PartialStruct::Storage::setObjectForKey(TUI::Util::PartialStruct::Storage::Header **this, unsigned int a2, objc_object *a3)
{
  unint64_t v5;
  const void **DataForKey;
  const void **v7;
  TUI::Util::PartialStruct::Storage::Header *v8;
  unsigned int v9;
  const void *v10;
  objc_object *cf;

  cf = a3;
  if (cf)
    DataForKey = (const void **)TUI::Util::PartialStruct::Storage::allocateDataForKey(this, a2, v5, 0);
  else
    DataForKey = (const void **)TUI::Util::PartialStruct::Storage::dataForKey((TUI::Util::PartialStruct::Storage *)this, a2);
  v7 = DataForKey;
  if (DataForKey)
  {
    v8 = *this;
    v9 = *(unsigned __int16 *)(*(_QWORD *)v8 + 8);
    v10 = *DataForKey;
    if (*v7 && v9 >= a2 && ((*((unsigned __int16 *)v8 + (a2 >> 4) + 4) >> (a2 & 0xF)) & 1) != 0)
      CFRelease(v10);
    if (cf)
    {
      *v7 = CFRetain(cf);
      if (v9 >= a2)
        *((_WORD *)v8 + (a2 >> 4) + 4) |= 1 << (a2 & 0xF);
    }
    else
    {
      if (v9 >= a2)
        *((_WORD *)v8 + (a2 >> 4) + 4) &= ~(1 << (a2 & 0xF));
      *v7 = 0;
    }
  }

}

void sub_A5AAC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

uint64_t TUI::Util::PartialStruct::Storage::dataForKey(TUI::Util::PartialStruct::Storage *this, unsigned int a2)
{
  uint64_t v2;
  BOOL v3;
  unsigned int v4;
  unint64_t v5;

  v2 = *(_QWORD *)this;
  if (*(_QWORD *)this)
    v3 = (*(_QWORD *)this & 1) == 0;
  else
    v3 = 0;
  if (v3
    && (v4 = *(unsigned __int16 *)(*(_QWORD *)v2 + 8), v4 >= a2)
    && ((*(unsigned __int16 *)(v2 + 2 * (a2 >> 4) + 8) >> (a2 & 0xF)) & 1) != 0
    && (v5 = *(unsigned __int16 *)(*(_QWORD *)v2 + (((v4 + 16) >> 3) & 0x3FFELL) + 2 * a2 + 12), v5 >= 2))
  {
    return v2 + (v5 >> 1);
  }
  else
  {
    return 0;
  }
}

unint64_t TUI::Util::PartialStruct::Storage::allocateDataForKey(TUI::Util::PartialStruct::Storage::Header **this, unsigned int a2, unint64_t a3, int a4)
{
  uint64_t v7;
  BOOL v8;
  id v9;
  NSObject *v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  TUI::Util::PartialStruct::Storage::Header *v15;
  unsigned int v16;
  unint64_t v17;
  id v18;
  NSObject *v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unsigned int v25;
  id v26;
  unint64_t v27;
  unsigned int v29;
  id v30;
  unint64_t v31;
  id v32;
  unint64_t v33;
  _QWORD *v34;
  unint64_t v35;

  v7 = (uint64_t)*this;
  if (*this)
    v8 = ((unint64_t)*this & 1) == 0;
  else
    v8 = 0;
  if (v8)
  {
    v11 = *(_QWORD *)v7;
    v12 = *(unsigned __int16 *)(*(_QWORD *)v7 + 8);
    if (v12 >= a2)
    {
      v22 = *(unsigned __int16 *)(v11 + (((v12 + 16) >> 3) & 0x3FFELL) + 2 * a2 + 12);
      if (v22 >= 2)
      {
        v27 = v22 >> 1;
        if (a4)
          *(_WORD *)(v7 + 2 * (a2 >> 4) + 8) |= 1 << (a2 & 0xF);
        return v7 + v27;
      }
      v23 = TUI::Util::PartialStruct::Storage::Header::determineOptimalMap(*this, a2);
      if (!v23
        || (v24 = v23,
            v15 = (TUI::Util::PartialStruct::Storage::Header *)TUI::Util::PartialStruct::Storage::Header::transferToNewMap(v7, v23), free((void *)v7), *this = v15, v25 = *(unsigned __int16 *)(v24 + 8), v25 < a2)|| (v17 = *(unsigned __int16 *)(v24 + (((v25 + 16) >> 3) & 0x3FFELL) + 2 * a2 + 12), v17 < 2))
      {
        v26 = TUIDefaultLog();
        v19 = objc_claimAutoreleasedReturnValue(v26);
        if (!os_log_type_enabled(v19, OS_LOG_TYPE_ERROR))
          goto LABEL_34;
        goto LABEL_15;
      }
    }
    else if (*(unsigned __int16 *)(v11 - *(unsigned int *)(v11 + 4) + 12) < a2
           || (v13 = TUI::Util::PartialStruct::Storage::Header::determineOptimalMap(*this, a2)) == 0
           || (v14 = v13,
               v15 = (TUI::Util::PartialStruct::Storage::Header *)TUI::Util::PartialStruct::Storage::Header::transferToNewMap(v7, v13), free((void *)v7), *this = v15, v16 = *(unsigned __int16 *)(v14 + 8), v16 < a2)|| (v17 = *(unsigned __int16 *)(v14 + (((v16 + 16) >> 3) & 0x3FFELL) + 2 * a2 + 12), v17 < 2))
    {
      v18 = TUIDefaultLog();
      v19 = objc_claimAutoreleasedReturnValue(v18);
      if (!os_log_type_enabled(v19, OS_LOG_TYPE_ERROR))
      {
LABEL_34:

        return 0;
      }
LABEL_15:
      sub_17DF30();
      goto LABEL_34;
    }
    v35 = v17 >> 1;
    if (a4)
      *((_WORD *)v15 + (a2 >> 4) + 4) |= 1 << (a2 & 0xF);
    return (unint64_t)v15 + v35;
  }
  if ((v7 & 1) == 0)
  {
    v9 = TUIDefaultLog();
    v10 = objc_claimAutoreleasedReturnValue(v9);
    if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
      sub_17DF90(v10);

    return 0;
  }
  v20 = *(unsigned int *)((v7 & 0xFFFFFFFFFFFFFFFELL) + 4);
  if ((_DWORD)v20)
    v21 = (v7 & 0xFFFFFFFFFFFFFFFELL) + *(unsigned int *)((v7 & 0xFFFFFFFFFFFFFFFELL) + 4 * v20 + 12);
  else
    v21 = 0;
  v29 = *(unsigned __int16 *)(v21 + 8);
  if (v29 < a2)
  {
    v30 = TUIDefaultLog();
    v19 = objc_claimAutoreleasedReturnValue(v30);
    if (os_log_type_enabled(v19, OS_LOG_TYPE_ERROR))
      sub_17DFCC();
    goto LABEL_34;
  }
  v31 = *(unsigned __int16 *)(v21 + (((v29 + 16) >> 3) & 0x3FFELL) + 2 * a2 + 12);
  if (v31 < 2)
  {
    v32 = TUIDefaultLog();
    v19 = objc_claimAutoreleasedReturnValue(v32);
    if (os_log_type_enabled(v19, OS_LOG_TYPE_ERROR))
      sub_17E02C();
    goto LABEL_34;
  }
  v33 = v31 >> 1;
  v34 = malloc_type_malloc(*(unsigned __int16 *)(v21 + 10), 0x189F37EEuLL);
  bzero(v34, *(unsigned __int16 *)(v21 + 10));
  *v34 = v21;
  bzero(v34 + 1, ((*(unsigned __int16 *)(v21 + 8) + 16) >> 3) & 0x3FFELL);
  if (a4)
    *((_WORD *)v34 + (a2 >> 4) + 4) |= 1 << (a2 & 0xF);
  *this = (TUI::Util::PartialStruct::Storage::Header *)v34;
  return (unint64_t)v34 + v33;
}

uint64_t *TUI::Util::PartialStruct::Storage::markAsDefault(uint64_t *this, unsigned int a2)
{
  uint64_t v2;
  BOOL v3;

  v2 = *this;
  if (*this)
    v3 = (*this & 1) == 0;
  else
    v3 = 0;
  if (v3 && *(unsigned __int16 *)(*(_QWORD *)v2 + 8) >= a2)
    *(_WORD *)(v2 + 2 * (a2 >> 4) + 8) &= ~(1 << (a2 & 0xF));
  return this;
}

_QWORD *TUI::Util::PartialStruct::Storage::getObjectForKey(TUI::Util::PartialStruct::Storage *this, unsigned int a2)
{
  _QWORD *v2;

  v2 = (_QWORD *)TUI::Util::PartialStruct::Storage::dataForKey(this, a2);
  if (v2)
    v2 = (_QWORD *)*v2;
  return v2;
}

uint64_t TUI::Util::PartialStruct::Storage::allocated(TUI::Util::PartialStruct::Storage *this)
{
  BOOL v1;

  if (*(_QWORD *)this)
    v1 = (*(_QWORD *)this & 1) == 0;
  else
    v1 = 0;
  if (v1)
    return *(unsigned __int16 *)(**(_QWORD **)this + 10);
  else
    return 0;
}

void TUI::Util::PartialStruct::Storage::compress(TUI::Util::PartialStruct::Storage::Header **this)
{
  TUI::Util::PartialStruct::Storage::Header *v1;
  BOOL v2;
  uint64_t v4;
  TUI::Util::PartialStruct::Storage::Header *v5;

  v1 = *this;
  if (*this)
    v2 = ((unint64_t)*this & 1) == 0;
  else
    v2 = 0;
  if (v2)
  {
    v4 = TUI::Util::PartialStruct::Storage::Header::determineOptimalMap(*this, 0xFFFFu);
    if (v4)
    {
      if (*(_QWORD *)v1 != v4)
      {
        v5 = (TUI::Util::PartialStruct::Storage::Header *)TUI::Util::PartialStruct::Storage::Header::transferToNewMap((uint64_t)v1, v4);
        free(v1);
        *this = v5;
      }
    }
  }
}

void sub_A5F74(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 8u);
}

void sub_A63C0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_A6428(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11)
{

  _Unwind_Resume(a1);
}

void sub_A64A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11)
{
  void *v11;

  _Unwind_Resume(a1);
}

void sub_A6640(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  sub_148E8((uint64_t)&a9);
  sub_148E8((uint64_t)&a11);
  _Unwind_Resume(a1);
}

void sub_A6744(id a1)
{
  void *v1;

  v1 = (void *)qword_2CB568;
  qword_2CB568 = (uint64_t)&off_254640;

}

id sub_A792C(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  int v5;
  void *v6;
  void *v7;
  void *v9;

  v3 = a2;
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "lastObject"));
  v5 = objc_msgSend(v4, "count") == 0;

  if (*(unsigned __int8 *)(a1 + 32) == v5)
  {
    v6 = &__NSArray0__struct;
  }
  else
  {
    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "lastObject"));
    v9 = v7;
    v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v9, 1));

  }
  return v6;
}

void sub_A7C18(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_A959C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,char a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31)
{
  _Block_object_dispose(&a25, 8);
  _Block_object_dispose(&a31, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_A95D4(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_A95E4(uint64_t a1)
{

}

void sub_A95EC(uint64_t a1, void *a2, void *a3)
{
  id v5;
  void *v6;
  void *v7;
  void *v8;
  id v9;
  uint64_t v10;
  void *v11;
  void *v12;
  void *v13;
  NSMutableArray *v14;
  NSMutableArray *v15;
  id v16;

  v16 = a2;
  v5 = a3;
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "objectForKeyedSubscript:", v16));
  if (v6)
  {
    v7 = *(void **)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40);
    if (!v7)
    {
      v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 40) + 48), "deletedModels"));
      v9 = objc_msgSend(v8, "mutableCopy");
      v10 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
      v11 = *(void **)(v10 + 40);
      *(_QWORD *)(v10 + 40) = v9;

      v7 = *(void **)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40);
    }
    objc_msgSend(v7, "setObject:forKeyedSubscript:", v6, v16);
  }
  else
  {
    v12 = *(void **)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 40);
    if (!v12)
    {
      v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 40) + 40), "containedSubmodels"));
      v14 = (NSMutableArray *)objc_msgSend(v13, "mutableCopy");
      v15 = v14;
      if (!v14)
        v15 = objc_opt_new(NSMutableArray);
      objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 40), v15);
      if (!v14)

      v12 = *(void **)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 40);
    }
    objc_msgSend(v12, "addObject:", v5);
  }

}

void sub_A9730(_QWORD *a1, void *a2, void *a3)
{
  id v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  void *v10;
  void *v11;
  id v12;
  id v13;
  _QWORD v14[4];
  id v15;

  v5 = a2;
  v6 = a3;
  v7 = *(void **)(*(_QWORD *)(a1[6] + 8) + 40);
  v14[0] = _NSConcreteStackBlock;
  v14[1] = 3221225472;
  v14[2] = sub_A9844;
  v14[3] = &unk_2407F8;
  v13 = v5;
  v15 = v13;
  v8 = objc_msgSend(v7, "indexOfObjectPassingTest:", v14);
  if (v8 != (id)0x7FFFFFFFFFFFFFFFLL)
  {
    v9 = v8;
    v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1[4] + 40), "identifierToContainedSubmodelMap"));
    v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "objectForKeyedSubscript:", v13));

    v12 = objc_msgSend(v11, "newToContainerPlusDeletesWithUpdate:interests:", v6, a1[5]);
    objc_msgSend(*(id *)(*(_QWORD *)(a1[6] + 8) + 40), "replaceObjectAtIndex:withObject:", v9, v12);

  }
}

id sub_A9844(uint64_t a1, void *a2)
{
  void *v3;
  id v4;

  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "identifier"));
  v4 = objc_msgSend(v3, "isEqual:", *(_QWORD *)(a1 + 32));

  return v4;
}

void sub_A99E0(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  id v14;
  id v15;
  _QWORD v16[4];
  id v17;

  v5 = a2;
  v6 = a3;
  v7 = *(void **)(a1 + 32);
  v16[0] = _NSConcreteStackBlock;
  v16[1] = 3221225472;
  v16[2] = sub_A9B10;
  v16[3] = &unk_2407F8;
  v15 = v5;
  v17 = v15;
  v8 = objc_msgSend(v7, "indexOfObjectPassingTest:", v16);
  if (v8 != (id)0x7FFFFFFFFFFFFFFFLL)
  {
    v9 = v8;
    v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 40) + 40), "identifierToContainedSubmodelMap"));
    v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "objectForKeyedSubscript:", v15));

    v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 40) + 24), "identifierToContainedSubmodelMap"));
    v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "objectForKeyedSubscript:", v15));

    v14 = objc_msgSend(v11, "newCurrentContainerPlusInsertsWithCurrent:update:", v13, v6);
    objc_msgSend(*(id *)(a1 + 32), "replaceObjectAtIndex:withObject:", v9, v14);

  }
}

id sub_A9B10(uint64_t a1, void *a2)
{
  void *v3;
  id v4;

  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "identifier"));
  v4 = objc_msgSend(v3, "isEqual:", *(_QWORD *)(a1 + 32));

  return v4;
}

float64x2_t TUITransformedCornersOfRect(float64x2_t *a1, double *a2, double *a3, double *a4, double *a5, CGFloat a6, CGFloat a7, CGFloat a8, CGFloat a9)
{
  CGFloat MinX;
  CGFloat MinY;
  CGFloat MaxX;
  CGFloat MaxY;
  float64x2_t result;
  CGRect v23;
  CGRect v24;
  CGRect v25;

  MinX = CGRectGetMinX(*(CGRect *)&a6);
  v23.origin.x = a6;
  v23.origin.y = a7;
  v23.size.width = a8;
  v23.size.height = a9;
  MinY = CGRectGetMinY(v23);
  v24.origin.x = a6;
  v24.origin.y = a7;
  v24.size.width = a8;
  v24.size.height = a9;
  MaxX = CGRectGetMaxX(v24);
  v25.origin.x = a6;
  v25.origin.y = a7;
  v25.size.width = a8;
  v25.size.height = a9;
  MaxY = CGRectGetMaxY(v25);
  *a2 = MinX;
  a2[1] = MinY;
  *a3 = MinX;
  a3[1] = MaxY;
  *a4 = MaxX;
  a4[1] = MaxY;
  *a5 = MaxX;
  a5[1] = MinY;
  *(float64x2_t *)a2 = vaddq_f64(a1[2], vmlaq_n_f64(vmulq_n_f64(a1[1], a2[1]), *a1, *a2));
  *(float64x2_t *)a3 = vaddq_f64(a1[2], vmlaq_n_f64(vmulq_n_f64(a1[1], a3[1]), *a1, *a3));
  *(float64x2_t *)a4 = vaddq_f64(a1[2], vmlaq_n_f64(vmulq_n_f64(a1[1], a4[1]), *a1, *a4));
  result = vaddq_f64(a1[2], vmlaq_n_f64(vmulq_n_f64(a1[1], a5[1]), *a1, *a5));
  *(float64x2_t *)a5 = result;
  return result;
}

double TUIFloatRoundedForScale(double result, double a2)
{
  if (a2 > 0.0)
    return round(result * a2) / a2;
  return result;
}

double TUISizeRoundedForScale(double result, double a2, double a3)
{
  if (a3 > 0.0)
    return round(result * a3) / a3;
  return result;
}

double TUIPointRoundedForScale(double result, double a2, double a3)
{
  if (a3 > 0.0)
    return round(result * a3) / a3;
  return result;
}

double TUIInsetsExtendedForScale(int8x16_t a1, double a2, double a3, double a4, double a5, int8x16_t a6)
{
  float64x2_t v6;

  if (a5 > 0.0)
  {
    *(double *)a6.i64 = ceil(fabs(*(double *)a1.i64) * a5) / a5;
    v6.f64[0] = NAN;
    v6.f64[1] = NAN;
    a1.i64[0] = vbslq_s8((int8x16_t)vnegq_f64(v6), a6, a1).u64[0];
  }
  return *(double *)a1.i64;
}

void sub_AA8EC(id a1)
{
  void *v1;
  uint64_t v2;
  void *v3;
  const __CFString *v4;

  v4 = CFSTR("param");
  v1 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v4, 1));
  v2 = objc_claimAutoreleasedReturnValue(+[TUIAttributeSet setWithArray:](TUIAttributeSet, "setWithArray:", v1));
  v3 = (void *)qword_2CB590;
  qword_2CB590 = v2;

}

void sub_AA9EC(id a1)
{
  void *v1;
  uint64_t v2;
  void *v3;
  const __CFString *v4;

  v4 = CFSTR("n");
  v1 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v4, 1));
  v2 = objc_claimAutoreleasedReturnValue(+[TUIAttributeSet setWithArray:](TUIAttributeSet, "setWithArray:", v1));
  v3 = (void *)qword_2CB5A0;
  qword_2CB5A0 = v2;

}

void sub_AAB74(id a1)
{
  void *v1;
  uint64_t v2;
  void *v3;
  const __CFString *v4;

  v4 = CFSTR("n");
  v1 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v4, 1));
  v2 = objc_claimAutoreleasedReturnValue(+[TUIAttributeSet setWithArray:](TUIAttributeSet, "setWithArray:", v1));
  v3 = (void *)qword_2CB5B0;
  qword_2CB5B0 = v2;

}

void sub_AACF4(id a1)
{
  void *v1;
  uint64_t v2;
  void *v3;
  const __CFString *v4;

  v4 = CFSTR("n");
  v1 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v4, 1));
  v2 = objc_claimAutoreleasedReturnValue(+[TUIAttributeSet setWithArray:](TUIAttributeSet, "setWithArray:", v1));
  v3 = (void *)qword_2CB5C0;
  qword_2CB5C0 = v2;

}

void sub_AAF78(id a1)
{
  void *v1;
  uint64_t v2;
  void *v3;
  const __CFString *v4;

  v4 = CFSTR("param");
  v1 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v4, 1));
  v2 = objc_claimAutoreleasedReturnValue(+[TUIAttributeSet setWithArray:](TUIAttributeSet, "setWithArray:", v1));
  v3 = (void *)qword_2CB5D0;
  qword_2CB5D0 = v2;

}

void sub_AB08C(id a1)
{
  void *v1;
  uint64_t v2;
  void *v3;
  const __CFString *v4;

  v4 = CFSTR("n");
  v1 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v4, 1));
  v2 = objc_claimAutoreleasedReturnValue(+[TUIAttributeSet setWithArray:](TUIAttributeSet, "setWithArray:", v1));
  v3 = (void *)qword_2CB5E0;
  qword_2CB5E0 = v2;

}

id sub_ABBE0(uint64_t a1)
{
  CGContextTranslateCTM(*(CGContextRef *)(a1 + 40), 0.0, -*(double *)(*(_QWORD *)(a1 + 32) + 24));
  return +[TSWPText renderColumns:selection:inContext:isFlipped:viewScale:](TSWPText, "renderColumns:selection:inContext:isFlipped:viewScale:", *(_QWORD *)(*(_QWORD *)(a1 + 32) + 16), 0, *(_QWORD *)(a1 + 40), 0, 1.0);
}

void sub_AD830(id a1)
{
  void *v1;

  v1 = (void *)qword_2CB5F0;
  qword_2CB5F0 = (uint64_t)&off_254668;

}

void sub_ADEA4(uint64_t a1)
{
  NSMutableArray *v2;
  id v3;
  id v4;
  id v5;
  uint64_t v6;
  void *i;
  void *v8;
  id v9;
  NSObject *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  uint8_t buf[4];
  uint64_t v19;
  __int16 v20;
  NSMutableArray *v21;
  _BYTE v22[128];

  if (*(_QWORD *)(*(_QWORD *)(a1 + 32) + 40))
  {
    v2 = objc_opt_new(NSMutableArray);
    sub_AE064(v2, *(void **)(*(_QWORD *)(a1 + 32) + 40), 0);
    v16 = 0u;
    v17 = 0u;
    v14 = 0u;
    v15 = 0u;
    v3 = *(id *)(*(_QWORD *)(a1 + 32) + 48);
    v4 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v14, v22, 16);
    if (v4)
    {
      v5 = v4;
      v6 = *(_QWORD *)v15;
      do
      {
        for (i = 0; i != v5; i = (char *)i + 1)
        {
          if (*(_QWORD *)v15 != v6)
            objc_enumerationMutation(v3);
          v8 = *(void **)(*((_QWORD *)&v14 + 1) + 8 * (_QWORD)i);
          v9 = TUILinkEntityObserverLog();
          v10 = objc_claimAutoreleasedReturnValue(v9);
          if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
          {
            v11 = *(_QWORD *)(a1 + 32);
            *(_DWORD *)buf = 134218242;
            v19 = v11;
            v20 = 2112;
            v21 = v2;
            _os_log_impl(&dword_0, v10, OS_LOG_TYPE_INFO, "detach-from-tracker observer[%p]: removed=%@", buf, 0x16u);
          }

          objc_msgSend(v8, "linkEntityController:visibleEntityReferencesWithAdded:removed:", *(_QWORD *)(a1 + 32), 0, v2);
        }
        v5 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v14, v22, 16);
      }
      while (v5);
    }

    v12 = *(_QWORD *)(a1 + 32);
    v13 = *(void **)(v12 + 40);
    *(_QWORD *)(v12 + 40) = 0;

  }
}

void sub_AE064(void *a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  void *v14;
  void *v15;
  void *v16;
  id v17;
  id v18;
  _QWORD v19[4];
  id v20;
  id v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  _BYTE v26[128];

  v5 = a1;
  v6 = a2;
  v7 = a3;
  v22 = 0u;
  v23 = 0u;
  v24 = 0u;
  v25 = 0u;
  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "identifiers"));
  v9 = objc_msgSend(v8, "countByEnumeratingWithState:objects:count:", &v22, v26, 16);
  if (v9)
  {
    v10 = v9;
    v11 = *(_QWORD *)v23;
    do
    {
      v12 = 0;
      do
      {
        if (*(_QWORD *)v23 != v11)
          objc_enumerationMutation(v8);
        v13 = *(_QWORD *)(*((_QWORD *)&v22 + 1) + 8 * (_QWORD)v12);
        v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "attributesMap"));
        v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v14, "objectForKeyedSubscript:", v13));

        sub_AF598(v5, v15, v7);
        v12 = (char *)v12 + 1;
      }
      while (v10 != v12);
      v10 = objc_msgSend(v8, "countByEnumeratingWithState:objects:count:", &v22, v26, 16);
    }
    while (v10);
  }

  v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "identifierNodeMap"));
  v19[0] = _NSConcreteStackBlock;
  v19[1] = 3221225472;
  v19[2] = sub_AF70C;
  v19[3] = &unk_240978;
  v20 = v7;
  v21 = v5;
  v17 = v5;
  v18 = v7;
  objc_msgSend(v16, "enumerateKeysAndObjectsUsingBlock:", v19);

}

void sub_AE41C(void *a1, void *a2, void *a3, void *a4)
{
  id v7;
  id v8;
  id v9;
  id v10;
  void *v11;
  id v12;
  id v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  void *v17;
  void *v18;
  void *v19;
  id v20;
  id v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  void *v25;
  void *v26;
  void *v27;
  id v28;
  id v29;
  id v30;
  _QWORD v31[4];
  id v32;
  id v33;
  id v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  _BYTE v43[128];
  _BYTE v44[128];

  v7 = a1;
  v8 = a2;
  v9 = a3;
  v10 = a4;
  v39 = 0u;
  v40 = 0u;
  v41 = 0u;
  v42 = 0u;
  v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "added"));
  v12 = objc_msgSend(v11, "countByEnumeratingWithState:objects:count:", &v39, v44, 16);
  if (v12)
  {
    v13 = v12;
    v14 = *(_QWORD *)v40;
    do
    {
      v15 = 0;
      do
      {
        if (*(_QWORD *)v40 != v14)
          objc_enumerationMutation(v11);
        v16 = *(_QWORD *)(*((_QWORD *)&v39 + 1) + 8 * (_QWORD)v15);
        v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "attributesMap"));
        v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v17, "objectForKeyedSubscript:", v16));

        sub_AF598(v7, v18, v10);
        v15 = (char *)v15 + 1;
      }
      while (v13 != v15);
      v13 = objc_msgSend(v11, "countByEnumeratingWithState:objects:count:", &v39, v44, 16);
    }
    while (v13);
  }

  v37 = 0u;
  v38 = 0u;
  v35 = 0u;
  v36 = 0u;
  v19 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "removed"));
  v20 = objc_msgSend(v19, "countByEnumeratingWithState:objects:count:", &v35, v43, 16);
  if (v20)
  {
    v21 = v20;
    v22 = *(_QWORD *)v36;
    do
    {
      v23 = 0;
      do
      {
        if (*(_QWORD *)v36 != v22)
          objc_enumerationMutation(v19);
        v24 = *(_QWORD *)(*((_QWORD *)&v35 + 1) + 8 * (_QWORD)v23);
        v25 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "attributesMap"));
        v26 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v25, "objectForKeyedSubscript:", v24));

        sub_AF598(v8, v26, v10);
        v23 = (char *)v23 + 1;
      }
      while (v21 != v23);
      v21 = objc_msgSend(v19, "countByEnumeratingWithState:objects:count:", &v35, v43, 16);
    }
    while (v21);
  }

  v27 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "identifierNodeMap"));
  v31[0] = _NSConcreteStackBlock;
  v31[1] = 3221225472;
  v31[2] = sub_AF788;
  v31[3] = &unk_2409A0;
  v32 = v10;
  v33 = v7;
  v34 = v8;
  v28 = v8;
  v29 = v7;
  v30 = v10;
  objc_msgSend(v27, "enumerateKeysAndObjectsUsingBlock:", v31);

}

void sub_AE754(uint64_t a1)
{
  NSMutableArray *v2;
  id v3;
  NSObject *v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  __int16 v8;
  NSMutableArray *v9;

  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 48), "addObject:", *(_QWORD *)(a1 + 40));
  if (*(_QWORD *)(*(_QWORD *)(a1 + 32) + 40))
  {
    v2 = objc_opt_new(NSMutableArray);
    sub_AE858(v2, *(void **)(*(_QWORD *)(a1 + 32) + 40), 0);
    v3 = TUILinkEntityObserverLog();
    v4 = objc_claimAutoreleasedReturnValue(v3);
    if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
    {
      v5 = *(_QWORD *)(a1 + 32);
      v6 = 134218242;
      v7 = v5;
      v8 = 2112;
      v9 = v2;
      _os_log_impl(&dword_0, v4, OS_LOG_TYPE_INFO, "add observer[%p]: added=%@", (uint8_t *)&v6, 0x16u);
    }

    objc_msgSend(*(id *)(a1 + 40), "linkEntityController:visibleEntityReferencesWithAdded:removed:", *(_QWORD *)(a1 + 32), v2, 0);
  }
}

void sub_AE858(void *a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  void *v14;
  void *v15;
  void *v16;
  id v17;
  id v18;
  _QWORD v19[4];
  id v20;
  id v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  _BYTE v26[128];

  v5 = a1;
  v6 = a2;
  v7 = a3;
  v22 = 0u;
  v23 = 0u;
  v24 = 0u;
  v25 = 0u;
  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "identifiers"));
  v9 = objc_msgSend(v8, "countByEnumeratingWithState:objects:count:", &v22, v26, 16);
  if (v9)
  {
    v10 = v9;
    v11 = *(_QWORD *)v23;
    do
    {
      v12 = 0;
      do
      {
        if (*(_QWORD *)v23 != v11)
          objc_enumerationMutation(v8);
        v13 = *(_QWORD *)(*((_QWORD *)&v22 + 1) + 8 * (_QWORD)v12);
        v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "attributesMap"));
        v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v14, "objectForKeyedSubscript:", v13));

        sub_AF598(v5, v15, v7);
        v12 = (char *)v12 + 1;
      }
      while (v10 != v12);
      v10 = objc_msgSend(v8, "countByEnumeratingWithState:objects:count:", &v22, v26, 16);
    }
    while (v10);
  }

  v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "identifierNodeMap"));
  v19[0] = _NSConcreteStackBlock;
  v19[1] = 3221225472;
  v19[2] = sub_AF804;
  v19[3] = &unk_240978;
  v20 = v7;
  v21 = v5;
  v17 = v5;
  v18 = v7;
  objc_msgSend(v16, "enumerateKeysAndObjectsUsingBlock:", v19);

}

void sub_AEAA0(uint64_t a1)
{
  NSMutableArray *v2;
  id v3;
  NSObject *v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  __int16 v8;
  NSMutableArray *v9;

  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 48), "removeObject:", *(_QWORD *)(a1 + 40));
  if (*(_QWORD *)(*(_QWORD *)(a1 + 32) + 40))
  {
    v2 = objc_opt_new(NSMutableArray);
    sub_AE064(v2, *(void **)(*(_QWORD *)(a1 + 32) + 40), 0);
    v3 = TUILinkEntityObserverLog();
    v4 = objc_claimAutoreleasedReturnValue(v3);
    if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
    {
      v5 = *(_QWORD *)(a1 + 32);
      v6 = 134218242;
      v7 = v5;
      v8 = 2112;
      v9 = v2;
      _os_log_impl(&dword_0, v4, OS_LOG_TYPE_INFO, "remove observer[%p]: removed=%@", (uint8_t *)&v6, 0x16u);
    }

    objc_msgSend(*(id *)(a1 + 40), "linkEntityController:visibleEntityReferencesWithAdded:removed:", *(_QWORD *)(a1 + 32), 0, v2);
  }
}

void sub_AEC4C(uint64_t a1)
{
  NSMutableArray *v2;

  v2 = objc_opt_new(NSMutableArray);
  sub_AECA4(v2, *(void **)(a1 + 40), *(void **)(*(_QWORD *)(a1 + 32) + 40), 0);
  (*(void (**)(void))(*(_QWORD *)(a1 + 48) + 16))();

}

void sub_AECA4(void *a1, void *a2, void *a3, void *a4)
{
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  id v13;
  id v14;
  void *v15;
  id v16;
  id v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  TUILinkEntityReference *v21;
  void *v22;
  TUILinkEntityReference *v23;
  void *v24;
  id v25;
  id v26;
  id v27;
  id obj;
  uint64_t v29;
  id v30;
  id v31;
  void *v32;
  id v33;
  uint64_t v34;
  id v35;
  id v36;
  _QWORD v37[4];
  id v38;
  id v39;
  id v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  _BYTE v49[128];
  _BYTE v50[128];

  v31 = a1;
  v7 = a2;
  v8 = a3;
  v30 = a4;
  v41 = 0u;
  v42 = 0u;
  v43 = 0u;
  v44 = 0u;
  v32 = v8;
  obj = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "identifiers"));
  v33 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v41, v49, 16);
  if (v33)
  {
    v29 = *(_QWORD *)v42;
    do
    {
      v9 = 0;
      do
      {
        if (*(_QWORD *)v42 != v29)
          objc_enumerationMutation(obj);
        v34 = v9;
        v10 = *(_QWORD *)(*((_QWORD *)&v41 + 1) + 8 * v9);
        v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v32, "attributesMap"));
        v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "objectForKeyedSubscript:", v10));

        v36 = v31;
        v35 = v7;
        v13 = v12;
        v14 = v30;
        v45 = 0u;
        v46 = 0u;
        v47 = 0u;
        v48 = 0u;
        v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "linkEntities"));
        v16 = objc_msgSend(v15, "countByEnumeratingWithState:objects:count:", &v45, v50, 16);
        if (v16)
        {
          v17 = v16;
          v18 = *(_QWORD *)v46;
          do
          {
            v19 = 0;
            do
            {
              if (*(_QWORD *)v46 != v18)
                objc_enumerationMutation(v15);
              v20 = *(_QWORD *)(*((_QWORD *)&v45 + 1) + 8 * (_QWORD)v19);
              if (!v7
                || (*((unsigned int (**)(id, _QWORD))v7 + 2))(v35, *(_QWORD *)(*((_QWORD *)&v45 + 1) + 8 * (_QWORD)v19)))
              {
                v21 = [TUILinkEntityReference alloc];
                v22 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "identifier"));
                v23 = -[TUILinkEntityReference initWithModel:path:renderIdentifier:](v21, "initWithModel:path:renderIdentifier:", v20, v14, v22);

                objc_msgSend(v36, "addObject:", v23);
              }
              v19 = (char *)v19 + 1;
            }
            while (v17 != v19);
            v17 = objc_msgSend(v15, "countByEnumeratingWithState:objects:count:", &v45, v50, 16);
          }
          while (v17);
        }

        v9 = v34 + 1;
      }
      while ((id)(v34 + 1) != v33);
      v33 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v41, v49, 16);
    }
    while (v33);
  }

  v24 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v32, "identifierNodeMap"));
  v37[0] = _NSConcreteStackBlock;
  v37[1] = 3221225472;
  v37[2] = sub_AF880;
  v37[3] = &unk_2409C8;
  v38 = v30;
  v39 = v31;
  v40 = v7;
  v25 = v7;
  v26 = v31;
  v27 = v30;
  objc_msgSend(v24, "enumerateKeysAndObjectsUsingBlock:", v37);

}

void sub_AF598(void *a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  TUILinkEntityReference *v13;
  void *v14;
  TUILinkEntityReference *v15;
  id obj;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  _BYTE v21[128];

  v5 = a1;
  v6 = a2;
  v7 = a3;
  v17 = 0u;
  v18 = 0u;
  v19 = 0u;
  v20 = 0u;
  obj = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "linkEntities"));
  v8 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v17, v21, 16);
  if (v8)
  {
    v9 = v8;
    v10 = *(_QWORD *)v18;
    do
    {
      v11 = 0;
      do
      {
        if (*(_QWORD *)v18 != v10)
          objc_enumerationMutation(obj);
        v12 = *(_QWORD *)(*((_QWORD *)&v17 + 1) + 8 * (_QWORD)v11);
        v13 = [TUILinkEntityReference alloc];
        v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "identifier"));
        v15 = -[TUILinkEntityReference initWithModel:path:renderIdentifier:](v13, "initWithModel:path:renderIdentifier:", v12, v7, v14);

        objc_msgSend(v5, "addObject:", v15);
        v11 = (char *)v11 + 1;
      }
      while (v9 != v11);
      v9 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v17, v21, 16);
    }
    while (v9);
  }

}

void sub_AF70C(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  _TUILinkEntityReferencePath *v7;

  v5 = a3;
  v6 = a2;
  v7 = -[_TUILinkEntityReferencePath initWithIdentifier:parent:]([_TUILinkEntityReferencePath alloc], "initWithIdentifier:parent:", v6, *(_QWORD *)(a1 + 32));

  sub_AE064(*(_QWORD *)(a1 + 40), v5, v7);
}

void sub_AF788(_QWORD *a1, void *a2, void *a3)
{
  id v5;
  id v6;
  _TUILinkEntityReferencePath *v7;

  v5 = a3;
  v6 = a2;
  v7 = -[_TUILinkEntityReferencePath initWithIdentifier:parent:]([_TUILinkEntityReferencePath alloc], "initWithIdentifier:parent:", v6, a1[4]);

  sub_AE41C(a1[5], a1[6], v5, v7);
}

void sub_AF804(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  _TUILinkEntityReferencePath *v7;

  v5 = a3;
  v6 = a2;
  v7 = -[_TUILinkEntityReferencePath initWithIdentifier:parent:]([_TUILinkEntityReferencePath alloc], "initWithIdentifier:parent:", v6, *(_QWORD *)(a1 + 32));

  sub_AE858(*(_QWORD *)(a1 + 40), v5, v7);
}

void sub_AF880(_QWORD *a1, void *a2, void *a3)
{
  id v5;
  id v6;
  _TUILinkEntityReferencePath *v7;

  v5 = a3;
  v6 = a2;
  v7 = -[_TUILinkEntityReferencePath initWithIdentifier:parent:]([_TUILinkEntityReferencePath alloc], "initWithIdentifier:parent:", v6, a1[4]);

  sub_AECA4(a1[5], a1[6], v5, v7);
}

id sub_B0B94(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 32), "addSubview:", *(_QWORD *)(*(_QWORD *)(a1 + 32) + 32));
  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 32), "addSubview:", *(_QWORD *)(*(_QWORD *)(a1 + 32) + 48));
  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 32), "addSubview:", *(_QWORD *)(*(_QWORD *)(a1 + 32) + 56));
  objc_msgSend(*(id *)(a1 + 32), "addSubview:", *(_QWORD *)(*(_QWORD *)(a1 + 32) + 40));
  return objc_msgSend(*(id *)(a1 + 32), "_updateGeometry");
}

id sub_B1A08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return objc_msgSend(*(id *)(a1 + 32), "updateVisible:forIdentifier:", a3, *(_QWORD *)(a1 + 40));
}

void sub_B1C98(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  NSObject *v9;

  _os_log_debug_impl(a1, v9, OS_LOG_TYPE_DEBUG, a4, &a9, 0x20u);
}

id sub_B20C4(uint64_t a1, uint64_t a2, void *a3)
{
  return objc_msgSend(a3, "appendRenderOverrideObservers:", *(_QWORD *)(a1 + 32));
}

void sub_B2C6C(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 152), 8);
  _Unwind_Resume(a1);
}

uint64_t sub_B2CB0(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_B2CC0(uint64_t a1)
{

}

void sub_B2CC8(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;
  void *v5;

  v2 = *(_QWORD *)(a1 + 32);
  v3 = *(void **)(v2 + 56);
  *(_QWORD *)(v2 + 56) = 0;

  objc_msgSend(*(id *)(a1 + 32), "updateFromState");
  v4 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v5 = *(void **)(v4 + 40);
  *(_QWORD *)(v4 + 40) = 0;

}

BOOL TUIRenderModelIsEqualToRenderModel(void *a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  unsigned int v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  _BOOL8 v16;

  v3 = a1;
  v4 = a2;
  v5 = v4;
  if (v3 == v4)
  {
    v16 = 1;
  }
  else if ((v3 == 0) != (v4 != 0)
         && (v6 = objc_msgSend(v3, "kind"), v6 == objc_msgSend(v5, "kind"))
         && (v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "identifier")),
             v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "identifier")),
             v9 = TUIIdentifierIsEqualToIdentifier(v7, v8),
             v8,
             v7,
             v9))
  {
    objc_msgSend(v3, "size");
    v11 = v10;
    v13 = v12;
    objc_msgSend(v5, "size");
    v16 = v13 == v15 && v11 == v14;
  }
  else
  {
    v16 = 0;
  }

  return v16;
}

void TUIRenderModelCopyProperties(void *a1, void *a2)
{
  id v3;
  void *v4;
  double v5;
  double v6;
  double v7;
  double v8;
  id v9;

  v3 = a2;
  v9 = a1;
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "identifier"));
  objc_msgSend(v9, "setIdentifier:", v4);

  objc_msgSend(v3, "size");
  v6 = v5;
  v8 = v7;

  objc_msgSend(v9, "setSize:", v6, v8);
}

id TUIRenderModelArrayContainingIsEqualToRenderModelArrayContaining(void *a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  id v9;

  v3 = a1;
  v4 = a2;
  if (TUIRenderModelIsEqualToRenderModel(v3, v4))
  {
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "containedSubmodels"));
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "containedSubmodels"));
    if (v5 == v6 || objc_msgSend(v5, "isEqual:", v6))
    {
      v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "identifierToContainedSubmodelMap"));
      v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "identifierToContainedSubmodelMap"));
      if (v7 == v8)
        v9 = &dword_0 + 1;
      else
        v9 = objc_msgSend(v7, "isEqual:", v8);

    }
    else
    {
      v9 = 0;
    }

  }
  else
  {
    v9 = 0;
  }

  return v9;
}

void TUIRenderModelDebugCollectContainedModels(void *a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  void *v9;
  id v10;
  id v11;
  uint64_t v12;
  void *v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  _BYTE v18[128];

  v3 = a1;
  v4 = a2;
  v5 = v4;
  if (v3 && (objc_msgSend(v4, "containsObject:", v3) & 1) == 0)
  {
    objc_msgSend(v5, "addObject:", v3);
    v6 = TUIProtocolCast(&OBJC_PROTOCOL___TUIRenderModelBaseContaining, v3);
    v7 = (void *)objc_claimAutoreleasedReturnValue(v6);
    v8 = v7;
    if (v7)
    {
      v16 = 0u;
      v17 = 0u;
      v14 = 0u;
      v15 = 0u;
      v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "debugContainedSubmodels", 0));
      v10 = objc_msgSend(v9, "countByEnumeratingWithState:objects:count:", &v14, v18, 16);
      if (v10)
      {
        v11 = v10;
        v12 = *(_QWORD *)v15;
        do
        {
          v13 = 0;
          do
          {
            if (*(_QWORD *)v15 != v12)
              objc_enumerationMutation(v9);
            TUIRenderModelDebugCollectContainedModels(*(_QWORD *)(*((_QWORD *)&v14 + 1) + 8 * (_QWORD)v13), v5);
            v13 = (char *)v13 + 1;
          }
          while (v11 != v13);
          v11 = objc_msgSend(v9, "countByEnumeratingWithState:objects:count:", &v14, v18, 16);
        }
        while (v11);
      }

    }
  }

}

NSMutableString *TUIRenderModelDebugTree(void *a1)
{
  id v1;
  NSMutableString *v2;
  NSMutableString *v3;

  v1 = a1;
  v2 = objc_opt_new(NSMutableString);
  v3 = v2;
  if (v1)
    sub_B5D68(v2, v1, &stru_243BF0);

  return v3;
}

void sub_B5D68(void *a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id v7;
  objc_class *v8;
  NSString *v9;
  void *v10;
  void *v11;
  id v12;
  void *v13;
  id v14;
  void *v15;
  id v16;
  id v17;
  uint64_t v18;
  void *v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  _BYTE v24[128];

  v5 = a1;
  v6 = a2;
  v7 = a3;
  v8 = (objc_class *)objc_opt_class(v6);
  v9 = NSStringFromClass(v8);
  v10 = (void *)objc_claimAutoreleasedReturnValue(v9);
  v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "identifier"));
  objc_msgSend(v5, "appendFormat:", CFSTR("%@%@ %p id=%@\n"), v7, v10, v6, v11);

  v12 = TUIProtocolCast(&OBJC_PROTOCOL___TUIRenderModelBaseContaining, v6);
  v13 = (void *)objc_claimAutoreleasedReturnValue(v12);
  if (v13)
  {
    v14 = objc_msgSend(objc_alloc((Class)NSString), "initWithFormat:", CFSTR("%@  "), v7);
    v20 = 0u;
    v21 = 0u;
    v22 = 0u;
    v23 = 0u;
    v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "debugContainedSubmodels"));
    v16 = objc_msgSend(v15, "countByEnumeratingWithState:objects:count:", &v20, v24, 16);
    if (v16)
    {
      v17 = v16;
      v18 = *(_QWORD *)v21;
      do
      {
        v19 = 0;
        do
        {
          if (*(_QWORD *)v21 != v18)
            objc_enumerationMutation(v15);
          sub_B5D68(v5, *(_QWORD *)(*((_QWORD *)&v20 + 1) + 8 * (_QWORD)v19), v14);
          v19 = (char *)v19 + 1;
        }
        while (v17 != v19);
        v17 = objc_msgSend(v15, "countByEnumeratingWithState:objects:count:", &v20, v24, 16);
      }
      while (v17);
    }

  }
}

void sub_B5F20(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 0xCu);
}

void sub_B9AEC(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose(&STACK[0x268], 8);
  _Block_object_dispose(&STACK[0x288], 8);
  _Block_object_dispose((const void *)(v1 - 256), 8);
  _Block_object_dispose(&STACK[0x2E0], 8);
  _Block_object_dispose((const void *)(v1 - 208), 8);
  _Unwind_Resume(a1);
}

void sub_B9C74(id a1, NSNumber *a2, _TUIFeedLayoutSection *a3, BOOL *a4)
{
  id v4;

  v4 = (id)objc_claimAutoreleasedReturnValue(-[_TUIFeedLayoutSection layoutController](a3, "layoutController"));
  objc_msgSend(v4, "resetInstantiationStats:", 1);

}

uint64_t sub_B9CA8(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_B9CB8(uint64_t a1)
{

}

id sub_B9CC0(uint64_t a1, void *a2)
{
  void *v3;
  id v4;

  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "uuid"));
  v4 = objc_msgSend(v3, "isEqual:", *(_QWORD *)(*(_QWORD *)(a1 + 32) + 368));

  return v4;
}

void sub_B9D04(_QWORD *a1, uint64_t a2)
{
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  unsigned int v8;
  void *v9;
  void *v10;
  unsigned __int8 v11;
  uint64_t v12;
  char v13;
  void *v14;
  NSMutableIndexSet *v15;
  uint64_t v16;
  void *v17;
  id v18;

  v4 = *(void **)(a1[4] + 320);
  v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedInteger:](NSNumber, "numberWithUnsignedInteger:", a2));
  v18 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "objectForKeyedSubscript:", v5));

  if (objc_msgSend(v18, "needsInstantiation"))
  {
    objc_msgSend(v18, "lq_instantiateWithController:transactionGroup:", a1[4], a1[5]);
LABEL_13:
    v14 = *(void **)(*(_QWORD *)(a1[8] + 8) + 40);
    if (!v14)
    {
      v15 = objc_opt_new(NSMutableIndexSet);
      v16 = *(_QWORD *)(a1[8] + 8);
      v17 = *(void **)(v16 + 40);
      *(_QWORD *)(v16 + 40) = v15;

      v14 = *(void **)(*(_QWORD *)(a1[8] + 8) + 40);
    }
    objc_msgSend(v14, "addIndex:", a2);
    goto LABEL_16;
  }
  if (objc_msgSend(v18, "environmentNeedsUpdate"))
    objc_msgSend(v18, "lq_updateEnvironment:withTransactionGroup:", *(_QWORD *)(a1[4] + 80), a1[5]);
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v18, "entry"));
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "stackNames"));
  if ((objc_msgSend(v7, "containsObject:", a1[6]) & 1) != 0)
  {
    v8 = 1;
  }
  else
  {
    v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v18, "entry"));
    v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "stackNames"));
    v8 = objc_msgSend(v10, "containsObject:", *(_QWORD *)(a1[4] + 216));

  }
  v11 = objc_msgSend(v18, "lq_updateLayoutWithTransactionGroup:", a1[5]);
  v12 = *(_QWORD *)(a1[7] + 8);
  if (*(_BYTE *)(v12 + 24))
    v13 = 1;
  else
    v13 = v11;
  *(_BYTE *)(v12 + 24) = v13;
  if ((v11 & 1) != 0 || v8)
    goto LABEL_13;
LABEL_16:

}

id sub_B9E94(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_lq_scheduleLayoutRemainder");
}

void sub_B9E9C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  unsigned __int8 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BOOL4 v11;
  double v12;
  double v13;
  uint64_t v14;
  unint64_t v15;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  id v20;
  id *v21;
  double v22;
  double v23;
  uint64_t v24;
  double v25;
  double v26;
  double v27;
  uint64_t v28;
  double v29;
  double v30;
  double v31;
  void *v32;
  void *v33;
  void *v34;
  void *v35;
  id v36;
  double v37;
  void *v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  _QWORD *v43;
  uint64_t v44;
  TUIRenderModelCollection *v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  TUIRenderModelCollection *v52;
  uint64_t v53;
  void *v54;
  uint64_t v55;
  uint64_t v56;
  TUIRenderModelCollection *v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  TUIRenderModelCollection *v63;
  uint64_t v64;
  void *v65;
  uint64_t v66;
  uint64_t v67;
  int v68;
  TUIRenderModelCollection *v69;
  int v70;
  void *v71;
  uint64_t v72;
  char v73;
  char v74;
  void *v75;
  uint64_t v76;
  void *v77;
  uint64_t v78;
  _QWORD v79[5];
  char v80;
  BOOL v81;
  BOOL v82;
  char v83;
  CGRect v84;

  v2 = *(_QWORD *)(a1 + 32);
  v3 = *(_QWORD *)(v2 + 304);
  if (v3 != 0x7FFFFFFFFFFFFFFFLL && v3 == *(_QWORD *)(v2 + 296))
  {
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(v2 + 256), "info"));
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("TUIRenderInfoKeyIsFinal")));
    v6 = objc_msgSend(v5, "BOOLValue");

    if ((v6 & 1) == 0)
    {
      v43 = *(_QWORD **)(a1 + 32);
      v78 = v43[9];
      v11 = v78 != 0;
      v16 = *(_BYTE *)(a1 + 120) != 0;
      if (v43[38])
        v44 = 2;
      else
        v44 = 1;
      objc_msgSend(v43, "setLayoutState:", v44);
      v45 = [TUIRenderModelCollection alloc];
      v46 = *(_QWORD **)(a1 + 32);
      v47 = *(_QWORD *)(a1 + 40);
      v48 = v46[9];
      v49 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 88) + 8) + 40);
      v50 = *(_QWORD *)(*(_QWORD *)(a1 + 96) + 8);
      v51 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v46, "_infoForFinal:", 1));
      v52 = -[TUIRenderModelCollection initWithContent:sections:size:insets:visibleBoundsObservers:info:anchorSet:layoutDirection:matchingUUID:matchingUID:](v45, "initWithContent:sections:size:insets:visibleBoundsObservers:info:anchorSet:layoutDirection:matchingUUID:matchingUID:", v48, v49, v47, v51, *(_QWORD *)(a1 + 48), objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 80), "layoutDirection"), *(double *)(v50 + 32), *(double *)(v50 + 40), UIEdgeInsetsZero.top, UIEdgeInsetsZero.left, UIEdgeInsetsZero.bottom, UIEdgeInsetsZero.right, 0, 0);
      v53 = *(_QWORD *)(*(_QWORD *)(a1 + 80) + 8);
      v54 = *(void **)(v53 + 40);
      *(_QWORD *)(v53 + 40) = v52;

      objc_storeStrong((id *)(*(_QWORD *)(a1 + 32) + 256), *(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 80) + 8) + 40));
      if (objc_msgSend(*(id *)(a1 + 32), "_lq_shouldSubmitRenderModelUpdate:transactionGroup:", *(unsigned __int8 *)(a1 + 121), *(_QWORD *)(a1 + 56)))
      {
        v55 = *(_QWORD *)(a1 + 32);
        v56 = *(_QWORD *)(v55 + 344);
        if (v56 == 1)
        {
          objc_msgSend(*(id *)(v55 + 120), "updateWithRenderModel:transactionGroup:hasInvalidLayouts:", *(_QWORD *)(v55 + 280), *(_QWORD *)(a1 + 56), *(unsigned __int8 *)(a1 + 122));
        }
        else
        {
          if (v56)
            goto LABEL_42;
          objc_msgSend(*(id *)(v55 + 104), "updateWithHostingMap:transactionGroup:", *(_QWORD *)(v55 + 264), *(_QWORD *)(a1 + 56));
          objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 104), "updateWithRenderModel:viewState:flags:transactionGroup:", *(_QWORD *)(*(_QWORD *)(a1 + 32) + 256), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 56));
          objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 112), "updateWithRenderModel:transactionGroup:", *(_QWORD *)(*(_QWORD *)(a1 + 32) + 272), *(_QWORD *)(a1 + 56));
        }
        v68 = 1;
        if (!v78)
          goto LABEL_47;
        goto LABEL_39;
      }
LABEL_38:
      v68 = 0;
      if (!v11)
      {
LABEL_47:
        if (!v16)
          goto LABEL_58;
        v70 = 0;
        goto LABEL_49;
      }
LABEL_39:
      v69 = (TUIRenderModelCollection *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32)
                                                                                             + 184), "initialContentReadyDate"));
      if (!v69)
        goto LABEL_52;
      v45 = v69;
      if (!v16)
      {

        goto LABEL_58;
      }
      v70 = 1;
LABEL_49:
      v71 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 184), "allContentReadyDate"));

      if (!v70)
      {
        if (v71)
          goto LABEL_58;
        v73 = 0;
        v74 = 0;
        *(_BYTE *)(*(_QWORD *)(a1 + 32) + 8) &= ~1u;
        v16 = 1;
        goto LABEL_57;
      }

      if (v71)
        goto LABEL_58;
      v16 = 1;
LABEL_52:
      *(_BYTE *)(*(_QWORD *)(a1 + 32) + 8) &= ~1u;
      v72 = *(_QWORD *)(a1 + 32);
      if ((*(_BYTE *)(v72 + 8) & 2) != 0)
      {
        v74 = 0;
        v73 = 1;
      }
      else
      {
        *(_BYTE *)(v72 + 8) |= 2u;
        v73 = 1;
        v74 = 1;
      }
LABEL_57:
      v75 = *(void **)(a1 + 56);
      v79[0] = _NSConcreteStackBlock;
      v79[1] = 3221225472;
      v79[2] = sub_BA5D8;
      v79[3] = &unk_240B20;
      v80 = v74;
      v79[4] = *(_QWORD *)(a1 + 32);
      v81 = v16;
      v82 = v16;
      v83 = v73;
      objc_msgSend(v75, "appendUpdateBlock:", v79);
      goto LABEL_58;
    }
  }
  if (*(_BYTE *)(a1 + 123))
  {
    v7 = *(_QWORD *)(a1 + 32);
    goto LABEL_8;
  }
  v7 = *(_QWORD *)(a1 + 32);
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 104) + 8) + 40) || *(_BYTE *)(v7 + 32))
  {
LABEL_8:
    v8 = *(_QWORD *)(v7 + 304);
    if (v8 == 0x7FFFFFFFFFFFFFFFLL)
    {
      if (!*(_QWORD *)(v7 + 72))
        goto LABEL_18;
      goto LABEL_13;
    }
    v9 = *(_QWORD *)(v7 + 296);
    v10 = *(_QWORD *)(v7 + 72);
    v11 = v10 != 0;
    if (v10)
    {
      if (v8 != v9)
      {
LABEL_13:
        v12 = *(double *)(*(_QWORD *)(*(_QWORD *)(a1 + 96) + 8) + 40);
        objc_msgSend(*(id *)(v7 + 80), "viewSize");
        if (v12 > v13
          || (v14 = *(_QWORD *)(a1 + 32),
              v15 = *(_QWORD *)(v14 + 296),
              v15 > (unint64_t)objc_msgSend(*(id *)(v14 + 72), "initialContentReadyEntryIndex")))
        {
          v11 = 1;
          goto LABEL_19;
        }
LABEL_18:
        v11 = 0;
LABEL_19:
        v18 = *(_QWORD *)(a1 + 32);
        v19 = *(_QWORD *)(v18 + 304);
        if (v19 != 0x7FFFFFFFFFFFFFFFLL && *(_QWORD *)(v18 + 296) < v19)
        {
          v20 = objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 88) + 8) + 40), "count");
          v21 = *(id **)(a1 + 32);
          if (v20)
          {
            objc_msgSend(v21[10], "viewSize");
            v23 = v22;
            v24 = *(_QWORD *)(a1 + 32);
            v25 = *(double *)(v24 + 144);
            objc_msgSend(*(id *)(v24 + 80), "viewSize");
            v27 = v26 * 0.5;
            v28 = *(_QWORD *)(a1 + 32);
            v29 = *(double *)(v28 + 152);
            v30 = *(double *)(*(_QWORD *)(*(_QWORD *)(a1 + 96) + 8) + 40);
            if (v29 < v30 + v25 * 0.5)
              v29 = v30 + v25 * 0.5;
            v31 = v29 - v30;
            v32 = *(void **)(v28 + 320);
            v33 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedInteger:](NSNumber, "numberWithUnsignedInteger:", *(_QWORD *)(v28 + 296)));
            v34 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v32, "objectForKeyedSubscript:", v33));
            v35 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v34, "loadingRenderModelWithSize:center:environment:", *(_QWORD *)(*(_QWORD *)(a1 + 32) + 80), v23, v25, v27, v31));

            v36 = objc_msgSend(v35, "section");
            v37 = *(double *)(*(_QWORD *)(*(_QWORD *)(a1 + 96) + 8) + 40);
            v38 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v35, "UUID"));
            v39 = objc_msgSend(v35, "copyWithSection:offset:uuid:", v36, v38, 0.0, v37);

            objc_msgSend(v39, "frame");
            *(CGFloat *)(*(_QWORD *)(*(_QWORD *)(a1 + 96) + 8) + 40) = CGRectGetMaxY(v84);
            v40 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 88) + 8) + 40), "arrayByAddingObject:", v39));
            v41 = *(_QWORD *)(*(_QWORD *)(a1 + 88) + 8);
            v42 = *(void **)(v41 + 40);
            *(_QWORD *)(v41 + 40) = v40;

            objc_msgSend(*(id *)(a1 + 32), "setLayoutState:", 2);
          }
          else
          {
            objc_msgSend(v21, "setLayoutState:", 1);
          }
        }
        v16 = 0;
        v17 = 0;
LABEL_34:
        v57 = [TUIRenderModelCollection alloc];
        v58 = *(_QWORD **)(a1 + 32);
        v59 = *(_QWORD *)(a1 + 40);
        v60 = v58[9];
        v61 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 88) + 8) + 40);
        v62 = *(_QWORD *)(*(_QWORD *)(a1 + 96) + 8);
        v45 = (TUIRenderModelCollection *)objc_claimAutoreleasedReturnValue(objc_msgSend(v58, "_infoForFinal:", v17));
        v63 = -[TUIRenderModelCollection initWithContent:sections:size:insets:visibleBoundsObservers:info:anchorSet:layoutDirection:matchingUUID:matchingUID:](v57, "initWithContent:sections:size:insets:visibleBoundsObservers:info:anchorSet:layoutDirection:matchingUUID:matchingUID:", v60, v61, v59, v45, *(_QWORD *)(a1 + 48), objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 80), "layoutDirection"), *(double *)(v62 + 32), *(double *)(v62 + 40), UIEdgeInsetsZero.top, UIEdgeInsetsZero.left, UIEdgeInsetsZero.bottom, UIEdgeInsetsZero.right, 0, 0);
        v64 = *(_QWORD *)(*(_QWORD *)(a1 + 80) + 8);
        v65 = *(void **)(v64 + 40);
        *(_QWORD *)(v64 + 40) = v63;

        objc_storeStrong((id *)(*(_QWORD *)(a1 + 32) + 256), *(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 80) + 8) + 40));
        if (objc_msgSend(*(id *)(a1 + 32), "_lq_shouldSubmitRenderModelUpdate:transactionGroup:", *(unsigned __int8 *)(a1 + 121), *(_QWORD *)(a1 + 56)))
        {
          v66 = *(_QWORD *)(a1 + 32);
          v67 = *(_QWORD *)(v66 + 344);
          if (v67 == 1)
          {
            objc_msgSend(*(id *)(v66 + 120), "updateWithRenderModel:transactionGroup:hasInvalidLayouts:", *(_QWORD *)(v66 + 280), *(_QWORD *)(a1 + 56), *(unsigned __int8 *)(a1 + 122));
LABEL_46:
            v68 = 1;
            if (!v11)
              goto LABEL_47;
            goto LABEL_39;
          }
          if (!v67)
          {
            objc_msgSend(*(id *)(v66 + 104), "updateWithHostingMap:transactionGroup:", *(_QWORD *)(v66 + 264), *(_QWORD *)(a1 + 56));
            objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 104), "updateWithRenderModel:viewState:flags:transactionGroup:", *(_QWORD *)(*(_QWORD *)(a1 + 32) + 256), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 56));
            objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 112), "updateWithRenderModel:transactionGroup:", *(_QWORD *)(*(_QWORD *)(a1 + 32) + 272), *(_QWORD *)(a1 + 56));
            goto LABEL_46;
          }
LABEL_42:
          v68 = 1;
          if (!v11)
            goto LABEL_47;
          goto LABEL_39;
        }
        goto LABEL_38;
      }
    }
    else if (v8 != v9)
    {
      goto LABEL_18;
    }
    v16 = *(_BYTE *)(a1 + 120) != 0;
    objc_msgSend((id)v7, "setLayoutState:", 2);
    v17 = 1;
    goto LABEL_34;
  }
  v68 = 0;
LABEL_58:
  if (*(_BYTE *)(a1 + 123))
  {
    v76 = *(_QWORD *)(a1 + 32);
  }
  else
  {
    v76 = *(_QWORD *)(a1 + 32);
    if (!*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 104) + 8) + 40) && !*(_BYTE *)(v76 + 32))
      return;
  }
  v77 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(v76 + 184), "initialLayoutStartDate"));

  if (v77)
  {
    if (!v68)
      return;
    goto LABEL_64;
  }
  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 184), "setInitialLayoutStartDate:", *(_QWORD *)(a1 + 72));
  if (v68)
LABEL_64:
    objc_msgSend(*(id *)(a1 + 32), "lq_updateAXModelTreeWithTransactionGroup:", *(_QWORD *)(a1 + 56));
}

void sub_BA5D8(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  id WeakRetained;
  uint64_t v5;
  id v6;
  NSObject *v7;
  id v8;
  _QWORD block[5];
  id v10;
  char v11;
  char v12;

  v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate date](NSDate, "date"));
  if (*(_BYTE *)(a1 + 40))
  {
    v3 = *(_QWORD *)(a1 + 32);
    if ((*(_BYTE *)(v3 + 12) & 0x10) != 0)
    {
      WeakRetained = objc_loadWeakRetained((id *)(v3 + 64));
      objc_msgSend(WeakRetained, "feedLayoutControllerInitialContentReady:", *(_QWORD *)(a1 + 32));

    }
  }
  if (*(_BYTE *)(a1 + 41))
  {
    if (*(_BYTE *)(a1 + 42))
    {
      v5 = *(_QWORD *)(a1 + 32);
      if ((*(_BYTE *)(v5 + 12) & 8) != 0)
      {
        v6 = objc_loadWeakRetained((id *)(v5 + 64));
        objc_msgSend(v6, "feedLayoutControllerAllContentReady:", *(_QWORD *)(a1 + 32));

      }
    }
  }
  v7 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 240), "activeQueue"));
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_BA6F4;
  block[3] = &unk_240AF8;
  v11 = *(_BYTE *)(a1 + 43);
  block[4] = *(_QWORD *)(a1 + 32);
  v10 = v2;
  v12 = *(_BYTE *)(a1 + 42);
  v8 = v2;
  dispatch_async(v7, block);

}

void sub_BA6F4(uint64_t a1)
{
  void *v2;
  void *v3;
  uint64_t v4;
  id v5;

  if (*(_BYTE *)(a1 + 48))
  {
    v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 184), "initialContentReadyDate"));

    if (!v2)
      objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 184), "setInitialContentReadyDate:", *(_QWORD *)(a1 + 40));
  }
  if (*(_BYTE *)(a1 + 49))
  {
    v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 184), "allContentReadyDate"));

    if (!v3)
      objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 184), "setAllContentReadyDate:", *(_QWORD *)(a1 + 40));
  }
  v4 = *(_QWORD *)(a1 + 32);
  if ((*(_BYTE *)(v4 + 248) & 0x10) != 0 && (*(_BYTE *)(v4 + 12) & 1) != 0)
  {
    v5 = +[TUITransaction noAnimationTransaction](TUITransaction, "noAnimationTransaction");
    objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 88), "scheduleLayoutUpdateWithTransaction:block:", v5, &stru_240AD0);
    objc_msgSend(v5, "commit");

  }
}

BOOL sub_BA7D0(id a1, TUITransactionGroup *a2, _TUITransaction *a3)
{
  return 1;
}

void sub_BA7D8(uint64_t a1, uint64_t a2, void *a3)
{
  void *v3;
  id v4;
  void *v5;
  id v6;

  v3 = *(void **)(*(_QWORD *)(a1 + 32) + 440);
  v4 = a3;
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "layoutController"));
  objc_msgSend(v3, "collectStatsFromLayoutController:", v5);

  v6 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "layoutController"));
  objc_msgSend(v6, "resetInstantiationStats:", 0);

}

void sub_BA850(uint64_t a1, uint64_t a2, void *a3)
{
  void *v4;
  void *v5;
  void *v6;
  TUIStatsFeedEntryPass *v7;
  void *v8;
  void *v9;
  id v10;
  void *v11;
  TUIStatsFeedEntryPass *v12;
  id v13;

  v13 = a3;
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "timingCollector"));
  objc_msgSend(v4, "finalizeWithTimebase:", *(_QWORD *)(a1 + 48));
  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 376), "recordReason:", objc_msgSend(v4, "reason"));
  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 376), "addPhase:fromCollector:", 1, v4);
  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 376), "addPhase:fromCollector:", 2, v4);
  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 376), "addPhase:fromCollector:", 3, v4);
  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 376), "addPhase:fromCollector:", 4, v4);
  if (objc_msgSend(v4, "reason"))
  {
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "entry"));
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "uid"));

    v7 = [TUIStatsFeedEntryPass alloc];
    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "entry"));
    v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "templateURL"));
    v10 = objc_msgSend(v4, "reason");
    v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "eventCollector"));
    v12 = -[TUIStatsFeedEntryPass initWithURL:uid:reason:timingCollector:timeBase:eventCollector:](v7, "initWithURL:uid:reason:timingCollector:timeBase:eventCollector:", v9, v6, v10, v4, *(_QWORD *)(a1 + 48), v11);

    objc_msgSend(*(id *)(a1 + 40), "addObject:", v12);
  }

}

void sub_BA9D4(id a1, NSNumber *a2, _TUIFeedLayoutSection *a3, BOOL *a4)
{
  _TUIFeedLayoutSection *v4;
  void *v5;
  id v6;

  v4 = a3;
  v5 = (void *)objc_claimAutoreleasedReturnValue(-[_TUIFeedLayoutSection timingCollector](v4, "timingCollector"));
  objc_msgSend(v5, "reset");

  v6 = (id)objc_claimAutoreleasedReturnValue(-[_TUIFeedLayoutSection eventCollector](v4, "eventCollector"));
  objc_msgSend(v6, "reset");

}

void sub_BAA30(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(*(_QWORD *)(a1 + 32) + 64));
  objc_msgSend(WeakRetained, "feedLayoutController:updateStats:", *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40));

}

uint64_t sub_BAAE8(uint64_t a1)
{
  *(_QWORD *)(*(_QWORD *)(a1 + 32) + 312) |= 3uLL;
  return 1;
}

void sub_BADA8(uint64_t a1)
{
  id v1;
  id v2;
  id v3;
  uint64_t v4;
  void *v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _BYTE v10[128];

  v6 = 0u;
  v7 = 0u;
  v8 = 0u;
  v9 = 0u;
  v1 = *(id *)(a1 + 32);
  v2 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v6, v10, 16);
  if (v2)
  {
    v3 = v2;
    v4 = *(_QWORD *)v7;
    do
    {
      v5 = 0;
      do
      {
        if (*(_QWORD *)v7 != v4)
          objc_enumerationMutation(v1);
        objc_msgSend(*(id *)(*((_QWORD *)&v6 + 1) + 8 * (_QWORD)v5), "completed", (_QWORD)v6);
        v5 = (char *)v5 + 1;
      }
      while (v3 != v5);
      v3 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v6, v10, 16);
    }
    while (v3);
  }

}

void sub_BB244(uint64_t a1)
{
  id v1;
  id v2;
  id v3;
  uint64_t v4;
  void *v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _BYTE v10[128];

  v6 = 0u;
  v7 = 0u;
  v8 = 0u;
  v9 = 0u;
  v1 = *(id *)(a1 + 32);
  v2 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v6, v10, 16);
  if (v2)
  {
    v3 = v2;
    v4 = *(_QWORD *)v7;
    do
    {
      v5 = 0;
      do
      {
        if (*(_QWORD *)v7 != v4)
          objc_enumerationMutation(v1);
        objc_msgSend(*(id *)(*((_QWORD *)&v6 + 1) + 8 * (_QWORD)v5), "completed", (_QWORD)v6);
        v5 = (char *)v5 + 1;
      }
      while (v3 != v5);
      v3 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v6, v10, 16);
    }
    while (v3);
  }

}

id sub_BB45C(uint64_t a1)
{
  void *v1;
  _QWORD v3[4];
  int v4;

  v1 = *(void **)(*(_QWORD *)(a1 + 32) + 160);
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_BB4BC;
  v3[3] = &unk_240C00;
  v4 = *(_DWORD *)(a1 + 40);
  return objc_msgSend(v1, "enumerateObjectsUsingBlock:", v3);
}

id sub_BB4BC(uint64_t a1, void *a2, double a3)
{
  LODWORD(a3) = *(_DWORD *)(a1 + 32);
  return objc_msgSend(a2, "setPriority:", a3);
}

id sub_BB5EC(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  TUIStatsCollector *v7;
  uint64_t v8;
  void *v9;
  TUIStatsTimingCollector *v10;
  uint64_t v11;
  void *v12;
  void *v13;
  _QWORD v15[5];

  *(_QWORD *)(*(_QWORD *)(a1 + 32) + 248) = *(_QWORD *)(a1 + 40);
  v2 = *(_QWORD *)(a1 + 32);
  v3 = *(void **)(v2 + 192);
  *(_QWORD *)(v2 + 192) = 0;

  v4 = *(_QWORD *)(a1 + 32);
  v5 = *(void **)(v4 + 376);
  *(_QWORD *)(v4 + 376) = 0;

  v6 = *(_QWORD *)(a1 + 40);
  if (v6)
  {
    v7 = -[TUIStatsCollector initWithMode:]([TUIStatsCollector alloc], "initWithMode:", *(_QWORD *)(a1 + 40));
    v8 = *(_QWORD *)(a1 + 32);
    v9 = *(void **)(v8 + 192);
    *(_QWORD *)(v8 + 192) = v7;

    v6 = *(_QWORD *)(a1 + 40);
    if ((v6 & 4) != 0)
    {
      v10 = -[TUIStatsTimingCollector initWithMode:]([TUIStatsTimingCollector alloc], "initWithMode:", *(_QWORD *)(a1 + 40));
      v11 = *(_QWORD *)(a1 + 32);
      v12 = *(void **)(v11 + 376);
      *(_QWORD *)(v11 + 376) = v10;

      v6 = *(_QWORD *)(a1 + 40);
    }
  }
  v13 = *(void **)(*(_QWORD *)(a1 + 32) + 320);
  v15[0] = _NSConcreteStackBlock;
  v15[1] = 3221225472;
  v15[2] = sub_BB6D4;
  v15[3] = &unk_240C48;
  v15[4] = v6;
  return objc_msgSend(v13, "enumerateKeysAndObjectsUsingBlock:", v15);
}

id sub_BB6D4(uint64_t a1, uint64_t a2, void *a3)
{
  return objc_msgSend(a3, "setStatsMode:", *(_QWORD *)(a1 + 32));
}

void sub_BB824(uint64_t a1)
{
  TUIStatsFeed *v2;

  v2 = -[TUIStatsFeed initWithDates:collector:]([TUIStatsFeed alloc], "initWithDates:collector:", *(_QWORD *)(*(_QWORD *)(a1 + 32) + 184), *(_QWORD *)(*(_QWORD *)(a1 + 32) + 192));
  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();

}

void sub_BB91C(uint64_t a1)
{
  void *v2;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 184), "initialResourcesRenderedDate"));

  if (!v2)
    _objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 184), "setInitialResourcesRenderedDate:", *(_QWORD *)(a1 + 40));
}

void sub_BBA0C(uint64_t a1)
{
  void *v2;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 184), "resourcesStartLoadingDate"));

  if (!v2)
    _objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 184), "setResourcesStartLoadingDate:", *(_QWORD *)(a1 + 40));
}

void sub_BBAFC(uint64_t a1)
{
  void *v2;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 184), "resourcesLoadedDate"));

  if (!v2)
    objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 184), "setResourcesLoadedDate:", *(_QWORD *)(a1 + 40));
}

void sub_BBBEC(uint64_t a1)
{
  void *v2;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 184), "viewWillAppearDate"));

  if (!v2)
    _objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 184), "setViewWillAppearDate:", *(_QWORD *)(a1 + 40));
}

void sub_BBC90(uint64_t a1)
{
  uint64_t v2;
  void *v3;

  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 160), "enumerateObjectsUsingBlock:", &stru_240C88);
  v2 = *(_QWORD *)(a1 + 32);
  v3 = *(void **)(v2 + 160);
  *(_QWORD *)(v2 + 160) = 0;

}

void sub_BBCCC(id a1, TUIFeedDataRequest *a2, unint64_t a3, BOOL *a4)
{
  -[TUIFeedDataRequest cancelRequest](a2, "cancelRequest", a3, a4);
}

uint64_t sub_BBF70(uint64_t a1, void *a2, void *a3)
{
  id v6;
  id v7;

  objc_storeStrong((id *)(*(_QWORD *)(a1 + 32) + 80), *(id *)(a1 + 40));
  v6 = a3;
  v7 = a2;
  objc_storeStrong((id *)(*(_QWORD *)(a1 + 32) + 368), *(id *)(a1 + 48));
  objc_msgSend(*(id *)(a1 + 32), "lq_updateContent:contentUpdateDate:transaction:transactionGroup:", *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), v6, v7);

  return 1;
}

BOOL sub_BC048(id a1, TUITransactionGroup *a2, _TUITransaction *a3)
{
  return 1;
}

uint64_t sub_BC244(uint64_t a1, uint64_t a2, uint64_t a3)
{
  objc_msgSend(*(id *)(a1 + 32), "lq_updateContent:contentUpdateDate:transaction:transactionGroup:", *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), a3, a2);
  return 1;
}

void sub_BC7A4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31,uint64_t a32,uint64_t a33,uint64_t a34,id location,id a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,char a45)
{
  id *v45;
  id *v46;

  objc_destroyWeak(v46);
  objc_destroyWeak(v45);
  _Block_object_dispose(&a31, 8);
  objc_destroyWeak(&location);
  objc_destroyWeak(&a36);
  _Block_object_dispose(&a45, 8);
  _Unwind_Resume(a1);
}

void sub_BC7FC(uint64_t a1, uint64_t a2, void *a3)
{
  id v4;
  id WeakRetained;
  id v6;
  _BOOL4 v7;
  id v8;
  NSObject *v9;
  _BOOL4 v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  const char *v14;
  NSObject *v15;
  uint32_t v16;
  BOOL v17;
  int v18;
  void *v19;
  uint64_t v20;
  id v21;
  void *v22;
  uint64_t v23;
  void *v24;
  void *v25;
  id v26;
  void *v27;
  id v28;
  uint64_t v29;
  _QWORD v30[4];
  id v31;
  id v32[3];
  _QWORD v33[4];
  id v34;
  id v35[3];
  uint8_t buf[4];
  id v37;
  __int16 v38;
  int v39;
  __int16 v40;
  _BYTE v41[14];

  v4 = a3;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  v6 = objc_loadWeakRetained((id *)(a1 + 64));
  v7 = ++*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) > 0;
  v8 = TUILayoutLog();
  v9 = objc_claimAutoreleasedReturnValue(v8);
  v10 = os_log_type_enabled(v9, OS_LOG_TYPE_DEBUG);
  if (v7)
  {
    if (!v10)
      goto LABEL_5;
    v11 = objc_msgSend(WeakRetained, "feedId");
    v12 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24);
    v13 = *(_QWORD *)(a1 + 72);
    *(_DWORD *)buf = 134218754;
    v37 = v11;
    v38 = 1024;
    v39 = v12;
    v40 = 1024;
    *(_DWORD *)v41 = v13;
    *(_WORD *)&v41[4] = 2112;
    *(_QWORD *)&v41[6] = v6;
    v14 = "[fid:%lu] #%d update entry at section %d %@";
    v15 = v9;
    v16 = 34;
  }
  else
  {
    if (!v10)
      goto LABEL_5;
    v28 = objc_msgSend(WeakRetained, "feedId");
    v29 = *(_QWORD *)(a1 + 72);
    *(_DWORD *)buf = 134218498;
    v37 = v28;
    v38 = 1024;
    v39 = v29;
    v40 = 2112;
    *(_QWORD *)v41 = v6;
    v14 = "[fid:%lu] initial update entry at section %d %@";
    v15 = v9;
    v16 = 28;
  }
  _os_log_debug_impl(&dword_0, v15, OS_LOG_TYPE_DEBUG, v14, buf, v16);
LABEL_5:

  if (WeakRetained)
    v17 = v6 == 0;
  else
    v17 = 1;
  v18 = !v17;
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40))
  {
    if (v18)
    {
      v19 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "transactionCoordinator"));
      v20 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40);
      v33[0] = _NSConcreteStackBlock;
      v33[1] = 3221225472;
      v33[2] = sub_BCB5C;
      v33[3] = &unk_240D20;
      objc_copyWeak(v35, (id *)(a1 + 56));
      v35[1] = *(id *)(a1 + 80);
      v21 = v6;
      v22 = *(void **)(a1 + 72);
      v34 = v21;
      v35[2] = v22;
      objc_msgSend(v19, "scheduleLayoutUpdateWithTransaction:block:", v20, v33);

      objc_destroyWeak(v35);
    }
    objc_msgSend(*(id *)(a1 + 32), "removeCompletionDeferral");
    objc_msgSend(*(id *)(a1 + 32), "removeSubTransactionCompletionDeferral");
    v23 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
    v24 = *(void **)(v23 + 40);
    *(_QWORD *)(v23 + 40) = 0;
    goto LABEL_17;
  }
  if (v18)
  {
    v24 = (void *)objc_claimAutoreleasedReturnValue(+[TUITransaction currentOrImplicitTransaction](TUITransaction, "currentOrImplicitTransaction"));
    v25 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "transactionCoordinator"));
    v30[0] = _NSConcreteStackBlock;
    v30[1] = 3221225472;
    v30[2] = sub_BCC04;
    v30[3] = &unk_240D20;
    objc_copyWeak(v32, (id *)(a1 + 56));
    v32[1] = *(id *)(a1 + 80);
    v26 = v6;
    v27 = *(void **)(a1 + 72);
    v31 = v26;
    v32[2] = v27;
    objc_msgSend(v25, "scheduleLayoutUpdateWithTransaction:block:", v24, v30);

    objc_destroyWeak(v32);
LABEL_17:

  }
}

void sub_BCB3C(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

BOOL sub_BCB5C(uint64_t a1, void *a2)
{
  id v3;
  id WeakRetained;
  id v5;
  id v6;
  void *v7;
  void *v8;
  id v9;

  v3 = a2;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  v5 = *(id *)(a1 + 48);
  v6 = objc_msgSend(WeakRetained, "layoutGenerationId");
  if (v5 == v6)
  {
    v7 = *(void **)(a1 + 32);
    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "data"));
    v9 = objc_msgSend(WeakRetained, "lq_loadFeedEntry:data:section:transactionGroup:", v7, v8, *(_QWORD *)(a1 + 56), v3);

  }
  return v5 == v6;
}

BOOL sub_BCC04(uint64_t a1, void *a2)
{
  id v3;
  id WeakRetained;
  id v5;
  id v6;
  void *v7;
  void *v8;
  id v9;

  v3 = a2;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  v5 = *(id *)(a1 + 48);
  v6 = objc_msgSend(WeakRetained, "layoutGenerationId");
  if (v5 == v6)
  {
    v7 = *(void **)(a1 + 32);
    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "data"));
    v9 = objc_msgSend(WeakRetained, "lq_loadFeedEntry:data:section:transactionGroup:", v7, v8, *(_QWORD *)(a1 + 56), v3);

  }
  return v5 == v6;
}

uint64_t sub_BCD44(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(a1 + 40) + 16))(*(_QWORD *)(a1 + 40), *(_QWORD *)(*(_QWORD *)(a1 + 32) + 184));
}

uint64_t sub_BCFAC(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;

  os_unfair_lock_lock((os_unfair_lock_t)(*(_QWORD *)(a1 + 32) + 16));
  v3 = *(_QWORD *)(a1 + 32);
  v2 = *(void **)(a1 + 40);
  if (v2 == *(void **)(v3 + 24))
  {
    *(_QWORD *)(v3 + 24) = 0;

    os_unfair_lock_unlock((os_unfair_lock_t)(*(_QWORD *)(a1 + 32) + 16));
    if ((objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 80), "isEqualToEnvironment:", *(_QWORD *)(a1 + 40)) & 1) == 0)
    {
      objc_storeStrong((id *)(*(_QWORD *)(a1 + 32) + 384), *(id *)(*(_QWORD *)(a1 + 32) + 80));
      objc_storeStrong((id *)(*(_QWORD *)(a1 + 32) + 80), *(id *)(a1 + 40));
      v4 = 1;
      *(_BYTE *)(*(_QWORD *)(a1 + 32) + 32) = 1;
      objc_storeStrong((id *)(*(_QWORD *)(a1 + 32) + 352), *(id *)(a1 + 48));
      objc_storeStrong((id *)(*(_QWORD *)(a1 + 32) + 360), *(id *)(a1 + 48));
      return v4;
    }
  }
  else
  {
    os_unfair_lock_unlock((os_unfair_lock_t)(v3 + 16));
  }
  return 0;
}

id sub_BD208(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "lq_updateHostingGeometryMap:", *(_QWORD *)(a1 + 40));
}

_QWORD *sub_BD4E0(_QWORD *result)
{
  uint64_t v1;
  _QWORD *v2;

  v1 = result[4];
  if (!*(_QWORD *)(v1 + 344))
  {
    v2 = result;
    objc_msgSend(*(id *)(v1 + 104), "updateWithHostingMap:transactionGroup:", 0, result[5]);
    return objc_msgSend(*(id *)(v2[4] + 104), "updateWithRenderModel:viewState:flags:transactionGroup:", 0, 0, 0, v2[5]);
  }
  return result;
}

void sub_BD918(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
  id *v20;

  objc_destroyWeak(v20);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_BD934(uint64_t a1)
{
  void *v2;
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "delegate"));
  objc_msgSend(v2, "feedLayoutController:axModelSections:renderModelCollection:renderModelSections:", WeakRetained, *(_QWORD *)(a1 + 32), *(_QWORD *)(*(_QWORD *)(a1 + 40) + 256), *(_QWORD *)(a1 + 48));

}

uint64_t sub_BDA14(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  id v5;
  _QWORD v7[4];
  id v8;

  v3 = a2;
  *(_BYTE *)(*(_QWORD *)(a1 + 32) + 33) = 1;
  v4 = *(void **)(*(_QWORD *)(a1 + 32) + 320);
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  v7[2] = sub_BDAA4;
  v7[3] = &unk_240B70;
  v8 = v3;
  v5 = v3;
  objc_msgSend(v4, "enumerateKeysAndObjectsUsingBlock:", v7);

  return 1;
}

id sub_BDAA4(uint64_t a1, uint64_t a2, void *a3)
{
  return _objc_msgSend(a3, "suspendAndTeardownWithTransactionGroup:", *(_QWORD *)(a1 + 32));
}

uint64_t sub_BDC98(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  id v5;
  _QWORD v7[4];
  id v8;

  v3 = a2;
  *(_BYTE *)(*(_QWORD *)(a1 + 32) + 33) = 0;
  objc_storeStrong((id *)(*(_QWORD *)(a1 + 32) + 80), *(id *)(a1 + 40));
  *(_BYTE *)(*(_QWORD *)(a1 + 32) + 32) = 1;
  objc_storeStrong((id *)(*(_QWORD *)(a1 + 32) + 352), *(id *)(a1 + 48));
  objc_storeStrong((id *)(*(_QWORD *)(a1 + 32) + 360), *(id *)(a1 + 48));
  *(_QWORD *)(*(_QWORD *)(a1 + 32) + 312) |= 0xCuLL;
  v4 = *(void **)(*(_QWORD *)(a1 + 32) + 320);
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  v7[2] = sub_BDD70;
  v7[3] = &unk_240B70;
  v8 = v3;
  v5 = v3;
  objc_msgSend(v4, "enumerateKeysAndObjectsUsingBlock:", v7);

  return 1;
}

id sub_BDD70(uint64_t a1, uint64_t a2, void *a3)
{
  return _objc_msgSend(a3, "resumeAndRebuildWithTransactionGroup:", *(_QWORD *)(a1 + 32));
}

void sub_BDE44(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_BDE64(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(WeakRetained, "_updateAfterLayoutConditionSuspendingUpdatesInvalidated");

}

void sub_BDF54(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_BDF74(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(WeakRetained, "_updateAfterLayoutConditionSuspendingUpdatesInvalidated");

}

BOOL sub_BDFEC(id a1, TUITransactionGroup *a2, _TUITransaction *a3)
{
  return 1;
}

void sub_BE064(uint64_t a1)
{
  id v2;
  NSObject *v3;
  id v4;
  NSObject *v5;
  NSObject *v6;
  uint64_t v7;
  os_signpost_id_t v8;
  uint64_t v9;
  void *v10;
  unsigned int v11;
  TUIStatsLiveResize *v12;
  uint64_t v13;
  void *v14;
  int v15;
  uint64_t v16;

  *(_BYTE *)(*(_QWORD *)(a1 + 32) + 34) = 1;
  *(_QWORD *)(*(_QWORD *)(a1 + 32) + 416) = 0;
  v2 = TUIInstantiationLog();
  v3 = objc_claimAutoreleasedReturnValue(v2);
  *(_QWORD *)(*(_QWORD *)(a1 + 32) + 424) = os_signpost_id_generate(v3);

  v4 = TUIInstantiationLog();
  v5 = objc_claimAutoreleasedReturnValue(v4);
  v6 = v5;
  v7 = *(_QWORD *)(a1 + 32);
  v8 = *(_QWORD *)(v7 + 424);
  if (v8 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v5))
  {
    v9 = *(_QWORD *)(v7 + 56);
    v15 = 134217984;
    v16 = v9;
    _os_signpost_emit_with_name_impl(&dword_0, v6, OS_SIGNPOST_INTERVAL_BEGIN, v8, "TUIFeedLayoutController.liveResize", "[fid:%lu]  isAnimation=YES", (uint8_t *)&v15, 0xCu);
  }

  v10 = (void *)objc_claimAutoreleasedReturnValue(+[NSUserDefaults standardUserDefaults](NSUserDefaults, "standardUserDefaults"));
  v11 = objc_msgSend(v10, "BOOLForKey:", CFSTR("TUIRecordLiveResizeStats"));

  if (v11)
  {
    v12 = objc_alloc_init(TUIStatsLiveResize);
    v13 = *(_QWORD *)(a1 + 32);
    v14 = *(void **)(v13 + 440);
    *(_QWORD *)(v13 + 440) = v12;

    objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 440), "beginLiveResize");
  }
}

void sub_BE228(uint64_t a1)
{
  id v2;
  NSObject *v3;
  NSObject *v4;
  _QWORD *v5;
  os_signpost_id_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  __int16 v14;
  uint64_t v15;

  v2 = TUIInstantiationLog();
  v3 = objc_claimAutoreleasedReturnValue(v2);
  v4 = v3;
  v5 = *(_QWORD **)(a1 + 32);
  v6 = v5[53];
  if (v6 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v3))
  {
    v7 = v5[7];
    v8 = v5[52];
    v12 = 134218240;
    v13 = v7;
    v14 = 2048;
    v15 = v8;
    _os_signpost_emit_with_name_impl(&dword_0, v4, OS_SIGNPOST_INTERVAL_END, v6, "TUIFeedLayoutController.liveResize", "[fid:%lu] layoutCount=%lu", (uint8_t *)&v12, 0x16u);
  }

  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 440), "endLiveResize");
  v9 = *(_QWORD *)(a1 + 32);
  v10 = *(void **)(v9 + 440);
  *(_QWORD *)(v9 + 440) = 0;

  *(_BYTE *)(*(_QWORD *)(a1 + 32) + 34) = 0;
  v11 = *(_QWORD *)(a1 + 32);
  if (*(_BYTE *)(v11 + 35))
  {
    *(_BYTE *)(v11 + 35) = 0;
    objc_msgSend(*(id *)(a1 + 32), "_lq_scheduleLayoutRemainder");
  }
}

void sub_BE350(id a1, NSNumber *a2, _TUIFeedLayoutSection *a3, BOOL *a4)
{
  -[_TUIFeedLayoutSection debugDumpEnvironmentContainerStructure](a3, "debugDumpEnvironmentContainerStructure");
}

uint64_t sub_BE424(uint64_t a1)
{
  void *v2;
  void *v3;
  _QWORD v5[4];
  id v6;

  objc_storeStrong((id *)(*(_QWORD *)(a1 + 32) + 224), *(id *)(a1 + 40));
  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 224), "beginCaptureWithFactory:completion:", *(_QWORD *)(*(_QWORD *)(a1 + 32) + 328), *(_QWORD *)(a1 + 48));
  v2 = *(void **)(a1 + 40);
  v3 = *(void **)(*(_QWORD *)(a1 + 32) + 320);
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_BE4BC;
  v5[3] = &unk_240B70;
  v6 = v2;
  objc_msgSend(v3, "enumerateKeysAndObjectsUsingBlock:", v5);

  return 1;
}

void sub_BE4BC(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4;
  void *v5;
  void *v6;
  void *v7;
  id v8;

  v8 = a3;
  v4 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "entry"));
  if (!v4
    || (v5 = (void *)v4,
        v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "entry")),
        v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "entry")),
        v7,
        v6,
        v5,
        v6 == v7))
  {
    objc_msgSend(v8, "lq_captureWithController:", *(_QWORD *)(a1 + 32));
  }

}

void sub_BE604(_QWORD *a1)
{
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD v6[4];
  id v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t, uint64_t);
  void (*v13)(uint64_t);
  id v14;

  v9 = 0;
  v10 = &v9;
  v11 = 0x3032000000;
  v12 = sub_B9CA8;
  v13 = sub_B9CB8;
  v14 = 0;
  v6[0] = _NSConcreteStackBlock;
  v6[2] = sub_BE6EC;
  v6[3] = &unk_240E28;
  v2 = (void *)a1[5];
  v3 = *(void **)(a1[4] + 320);
  v6[1] = 3221225472;
  v7 = v2;
  v8 = &v9;
  objc_msgSend(v3, "enumerateKeysAndObjectsUsingBlock:", v6);
  (*(void (**)(_QWORD, uint64_t, uint64_t, uint64_t))(a1[6] + 16))(a1[6], v10[5], v4, v5);

  _Block_object_dispose(&v9, 8);
}

void sub_BE6D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_BE6EC(uint64_t a1, uint64_t a2, void *a3, _BYTE *a4)
{
  void *v6;
  void *v7;
  _TUIModelDescribingContext *v8;
  void *v9;
  void *v10;
  _TUIModelDescribingContext *v11;
  void *v12;
  void *v13;
  NSMutableString *v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  id v18;

  v18 = a3;
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v18, "entry"));
  v7 = *(void **)(a1 + 32);

  if (v6 == v7)
  {
    v8 = [_TUIModelDescribingContext alloc];
    v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v18, "template"));
    v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "package"));
    v11 = -[_TUIModelDescribingContext initWithPackage:](v8, "initWithPackage:", v10);

    v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v18, "layoutController"));
    v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "rootBox"));
    v14 = TUIModelDump(v13, v11);
    v15 = objc_claimAutoreleasedReturnValue(v14);
    v16 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
    v17 = *(void **)(v16 + 40);
    *(_QWORD *)(v16 + 40) = v15;

    *a4 = 1;
  }

}

void sub_BE89C(_QWORD *a1)
{
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD v6[4];
  id v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t, uint64_t);
  void (*v13)(uint64_t);
  id v14;

  v9 = 0;
  v10 = &v9;
  v11 = 0x3032000000;
  v12 = sub_B9CA8;
  v13 = sub_B9CB8;
  v14 = 0;
  v6[0] = _NSConcreteStackBlock;
  v6[2] = sub_BE984;
  v6[3] = &unk_240E28;
  v2 = (void *)a1[5];
  v3 = *(void **)(a1[4] + 320);
  v6[1] = 3221225472;
  v7 = v2;
  v8 = &v9;
  objc_msgSend(v3, "enumerateKeysAndObjectsUsingBlock:", v6);
  (*(void (**)(_QWORD, uint64_t, uint64_t, uint64_t))(a1[6] + 16))(a1[6], v10[5], v4, v5);

  _Block_object_dispose(&v9, 8);
}

void sub_BE96C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_BE984(uint64_t a1, uint64_t a2, void *a3, _BYTE *a4)
{
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  NSMutableString *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  id v14;

  v14 = a3;
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v14, "entry"));
  v7 = *(void **)(a1 + 32);

  if (v6 == v7)
  {
    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v14, "layoutController"));
    v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "rootLayout"));
    v10 = TUILayoutDump(v9, CFSTR("id"));
    v11 = objc_claimAutoreleasedReturnValue(v10);
    v12 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
    v13 = *(void **)(v12 + 40);
    *(_QWORD *)(v12 + 40) = v11;

    *a4 = 1;
  }

}

void sub_BF078(uint64_t a1, void *a2)
{
  uint64_t v2;
  id v3;

  v2 = *(_QWORD *)(a1 + 32);
  v3 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "firstObject"));
  (*(void (**)(uint64_t, id))(v2 + 16))(v2, v3);

}

void sub_BF824(id a1)
{
  void *v1;
  id v2;
  void *v3;
  id v4;
  void *v5;
  const __CFString *v6;

  v1 = (void *)objc_claimAutoreleasedReturnValue(+[TUIAttributeSet supportedAttributesSize](TUIAttributeSet, "supportedAttributesSize"));
  v2 = objc_msgSend(v1, "mutableCopy");

  v6 = CFSTR("blur-style");
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v6, 1));
  objc_msgSend(v2, "addAttributesFromArray:", v3);

  v4 = objc_msgSend(v2, "copy");
  v5 = (void *)qword_2CB600;
  qword_2CB600 = (uint64_t)v4;

}

NSMutableString *TUIModelDump(void *a1, void *a2)
{
  id v3;
  id v4;
  NSMutableString *v5;

  v3 = a2;
  v4 = a1;
  v5 = objc_opt_new(NSMutableString);
  sub_BFA00(v5, v4, 0, v3);

  return v5;
}

void sub_BFA00(void *a1, void *a2, uint64_t a3, void *a4)
{
  id v7;
  id v8;
  id v9;
  void *v10;
  objc_class *v11;
  NSString *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  id v17;
  void *v18;
  NSMutableArray *v19;
  NSMutableArray *v20;
  id v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  void *i;
  void *v26;
  const __CFString *v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  _BYTE v33[128];

  v7 = a1;
  v8 = a2;
  v9 = a4;
  v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(&stru_243BF0, "stringByPaddingToLength:withString:startingAtIndex:", 2 * a3, CFSTR(" "), 0));
  objc_msgSend(v7, "appendString:", v10);

  v11 = (objc_class *)objc_opt_class(v8);
  v12 = NSStringFromClass(v11);
  v13 = (void *)objc_claimAutoreleasedReturnValue(v12);
  objc_msgSend(v7, "appendFormat:", CFSTR("%@ "), v13);

  if ((objc_opt_respondsToSelector(v8, "describeWithContext:") & 1) != 0)
  {
    v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "describeWithContext:", v9));
    objc_msgSend(v7, "appendFormat:", CFSTR("%@ "), v14);

  }
  if ((objc_opt_respondsToSelector(v8, "identifier") & 1) != 0)
  {
    v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "identifier"));
    v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v15, "tui_identifierToString"));
    objc_msgSend(v7, "appendFormat:", CFSTR("id=%@ "), v16);

  }
  v17 = TUIProtocolCast(&OBJC_PROTOCOL___TUIModelContaining, v8);
  v18 = (void *)objc_claimAutoreleasedReturnValue(v17);
  if (v18)
  {
    v19 = objc_opt_new(NSMutableArray);
    objc_msgSend(v18, "appendContainedChildrenToArray:", v19);
    if (-[NSMutableArray count](v19, "count"))
    {
      v28 = 2 * a3;
      objc_msgSend(v7, "appendString:", CFSTR("{\n"));
      v31 = 0u;
      v32 = 0u;
      v29 = 0u;
      v30 = 0u;
      v20 = v19;
      v21 = -[NSMutableArray countByEnumeratingWithState:objects:count:](v20, "countByEnumeratingWithState:objects:count:", &v29, v33, 16);
      if (v21)
      {
        v22 = v21;
        v23 = *(_QWORD *)v30;
        v24 = a3 + 1;
        do
        {
          for (i = 0; i != v22; i = (char *)i + 1)
          {
            if (*(_QWORD *)v30 != v23)
              objc_enumerationMutation(v20);
            sub_BFA00(v7, *(_QWORD *)(*((_QWORD *)&v29 + 1) + 8 * (_QWORD)i), v24, v9);
          }
          v22 = -[NSMutableArray countByEnumeratingWithState:objects:count:](v20, "countByEnumeratingWithState:objects:count:", &v29, v33, 16);
        }
        while (v22);
      }

      v26 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(&stru_243BF0, "stringByPaddingToLength:withString:startingAtIndex:", v28, CFSTR(" "), 0));
      objc_msgSend(v7, "appendString:", v26);

      v27 = CFSTR("}\n");
    }
    else
    {
      v27 = CFSTR("\n");
    }
    objc_msgSend(v7, "appendString:", v27);

  }
  else
  {
    objc_msgSend(v7, "appendString:", CFSTR("\n"));
  }

}

id sub_BFDC4(_QWORD *a1, uint64_t a2)
{
  return _objc_msgSend(*(id *)(a1[4] + 56), "augmentDataForRange:data:generation:block:", a1[7], a1[8], a2, a1[5], a1[6]);
}

id sub_BFECC(_QWORD *a1, uint64_t a2)
{
  return _objc_msgSend(*(id *)(a1[4] + 56), "augmentDataForIndexes:data:generation:block:", a1[5], a2, a1[6], a1[7]);
}

void sub_C01C8(id a1)
{
  void *v1;
  id v2;
  void *v3;
  id v4;
  void *v5;
  _QWORD v6[2];

  v1 = (void *)objc_claimAutoreleasedReturnValue(+[TUIAttributeSet supportedAttributesSize](TUIAttributeSet, "supportedAttributesSize"));
  v2 = objc_msgSend(v1, "mutableCopy");

  v6[0] = CFSTR("name");
  v6[1] = CFSTR("trigger-offset");
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", v6, 2));
  objc_msgSend(v2, "addAttributesFromArray:", v3);

  v4 = objc_msgSend(v2, "copy");
  v5 = (void *)qword_2CB610;
  qword_2CB610 = (uint64_t)v4;

}

void sub_C0468(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  v2 = v1;

  _Unwind_Resume(a1);
}

id sub_C0C28(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "dismissViewControllerAnimated:completion:", 0, 0);
}

void sub_C2C98(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  id v5;
  uint64_t v6;
  _QWORD v7[4];
  id v8;
  uint64_t v9;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "viewController"));

  if (v2)
  {
    v3 = *(void **)(*(_QWORD *)(a1 + 40) + 104);
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "viewController"));
    v7[0] = _NSConcreteStackBlock;
    v7[1] = 3221225472;
    v7[2] = sub_C2D4C;
    v7[3] = &unk_23D7D0;
    v5 = *(id *)(a1 + 32);
    v6 = *(_QWORD *)(a1 + 40);
    v8 = v5;
    v9 = v6;
    objc_msgSend(v3, "presentViewController:animated:completion:", v4, 1, v7);

  }
}

void sub_C2D4C(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  id v5;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "viewController"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "popoverPresentationController"));
  objc_msgSend(v3, "setPassthroughViews:", 0);

  v4 = *(void **)(a1 + 40);
  v5 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "identifier"));
  objc_msgSend(v4, "updateVisible:forIdentifier:", 1, v5);

}

id sub_C2F4C(uint64_t a1)
{
  id v2;
  NSObject *v3;

  v2 = TUIHostingLog();
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEBUG))
    sub_17E7E4(a1, v3);

  return objc_msgSend(*(id *)(a1 + 48), "setHidden:", 1);
}

void sub_C30B8(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  id v15;
  uint64_t v16;
  _QWORD v17[4];
  id v18;
  uint64_t v19;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "viewController"));

  if (v2)
  {
    v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "viewController"));
    objc_msgSend(v3, "setModalPresentationStyle:", 7);

    v4 = *(void **)(a1 + 32);
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "viewController"));
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "popoverPresentationController"));
    objc_msgSend(v6, "setDelegate:", v4);

    v7 = *(_QWORD *)(a1 + 40);
    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "viewController"));
    v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "popoverPresentationController"));
    objc_msgSend(v9, "setBarButtonItem:", v7);

    v10 = objc_msgSend(*(id *)(a1 + 48), "_popoverArrowDirectionFromProperties:", *(_QWORD *)(a1 + 56));
    v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "viewController"));
    v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "popoverPresentationController"));
    objc_msgSend(v12, "setPermittedArrowDirections:", v10);

    v13 = *(void **)(*(_QWORD *)(a1 + 48) + 104);
    v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "viewController"));
    v17[0] = _NSConcreteStackBlock;
    v17[1] = 3221225472;
    v17[2] = sub_C3220;
    v17[3] = &unk_23D7D0;
    v15 = *(id *)(a1 + 32);
    v16 = *(_QWORD *)(a1 + 48);
    v18 = v15;
    v19 = v16;
    objc_msgSend(v13, "presentViewController:animated:completion:", v14, 1, v17);

  }
}

void sub_C3220(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  id v5;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "viewController"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "popoverPresentationController"));
  objc_msgSend(v3, "setPassthroughViews:", 0);

  v4 = *(void **)(a1 + 40);
  v5 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "identifier"));
  objc_msgSend(v4, "updateVisible:forIdentifier:", 1, v5);

}

uint64_t sub_C3600(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

id sub_C381C(uint64_t a1)
{
  void *v2;
  CGAffineTransform v4;
  CGAffineTransform v5;

  objc_msgSend(*(id *)(a1 + 32), "setHidden:", 0);
  objc_msgSend(*(id *)(a1 + 32), "setAlpha:", 0.0);
  CGAffineTransformMakeScale(&v5, 0.92, 0.92);
  v2 = *(void **)(a1 + 32);
  v4 = v5;
  return objc_msgSend(v2, "setTransform:", &v4);
}

id sub_C3888(uint64_t a1)
{
  void *v2;
  __int128 v3;
  _OWORD v5[3];

  v2 = *(void **)(a1 + 32);
  v3 = *(_OWORD *)&CGAffineTransformIdentity.c;
  v5[0] = *(_OWORD *)&CGAffineTransformIdentity.a;
  v5[1] = v3;
  v5[2] = *(_OWORD *)&CGAffineTransformIdentity.tx;
  objc_msgSend(v2, "setTransform:", v5);
  return objc_msgSend(*(id *)(a1 + 32), "setAlpha:", 1.0);
}

id sub_C3C80(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "setAlpha:", 0.0);
}

id sub_C3C8C(uint64_t a1)
{
  void *v2;
  CGAffineTransform v4;
  CGAffineTransform v5;

  CGAffineTransformMakeScale(&v5, 0.92, 0.92);
  v2 = *(void **)(a1 + 32);
  v4 = v5;
  return objc_msgSend(v2, "setTransform:", &v4);
}

void sub_C3CE0(uint64_t a1)
{
  id v2;

  objc_msgSend(*(id *)(a1 + 32), "removeFromSuperview");
  v2 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "viewController"));
  objc_msgSend(v2, "endAppearanceTransition");

}

void sub_C3D24(uint64_t a1)
{
  void *v2;
  _QWORD v3[4];
  id v4;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "viewController"));
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_C3DAC;
  v3[3] = &unk_23D938;
  v4 = *(id *)(a1 + 32);
  objc_msgSend(v2, "dismissViewControllerAnimated:completion:", 1, v3);

}

id sub_C3DAC(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "presentationDidDismiss");
}

void sub_C3EF8(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = *(_QWORD *)(a1 + 32);
  v2 = *(void **)(v1 + 96);
  *(_QWORD *)(v1 + 96) = 0;

}

void sub_C436C(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_debug_impl(a1, a2, OS_LOG_TYPE_DEBUG, a4, &a9, 0xCu);
}

void sub_C437C(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 8) = a1;
}

void sub_C4D14(id a1)
{
  void *v1;
  id v2;
  void *v3;
  id v4;
  void *v5;
  _QWORD v6[6];

  v1 = (void *)objc_claimAutoreleasedReturnValue(+[TUIAttributeSet supportedAttributesSize](TUIAttributeSet, "supportedAttributesSize"));
  v2 = objc_msgSend(v1, "mutableCopy");

  v6[0] = CFSTR("rating");
  v6[1] = CFSTR("kind");
  v6[2] = CFSTR("background-color");
  v6[3] = CFSTR("start-color");
  v6[4] = CFSTR("color");
  v6[5] = CFSTR("enabled");
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", v6, 6));
  objc_msgSend(v2, "addAttributesFromArray:", v3);

  v4 = objc_msgSend(v2, "copy");
  v5 = (void *)qword_2CB620;
  qword_2CB620 = (uint64_t)v4;

}

void sub_C4E74(id a1)
{
  void *v1;
  uint64_t v2;
  void *v3;
  const __CFString *v4;

  v4 = CFSTR("binding");
  v1 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v4, 1));
  v2 = objc_claimAutoreleasedReturnValue(+[TUIAttributeSet setWithArray:](TUIAttributeSet, "setWithArray:", v1));
  v3 = (void *)qword_2CB630;
  qword_2CB630 = v2;

}

void sub_C55B8(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 112));
  _Unwind_Resume(a1);
}

id sub_C55D4(uint64_t a1, void *a2, void *a3)
{
  id *v5;
  id v6;
  id v7;
  void *v8;
  double v9;
  void *v10;
  void *v11;
  id v12;
  id v13;
  double v14;
  double v15;
  id v16;
  id v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  void *v23;
  uint64_t v25;
  __int128 v26;
  id v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id WeakRetained;

  v31 = *(_QWORD *)(a1 + 32);
  v30 = *(_QWORD *)(a1 + 40);
  v5 = (id *)(a1 + 80);
  v6 = a3;
  v7 = a2;
  WeakRetained = objc_loadWeakRetained(v5);
  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "identifier"));
  v29 = *(_QWORD *)(a1 + 48);
  v9 = *(double *)(a1 + 88);
  v28 = *(unsigned __int8 *)(a1 + 104);
  v27 = objc_msgSend(v7, "computedLayoutDirection");
  v26 = *(_OWORD *)(a1 + 56);
  v25 = *(_QWORD *)(a1 + 72);
  v10 = (void *)objc_claimAutoreleasedReturnValue(+[TUIRatingsBox starRatingImageNameFromKind:](TUIRatingsBox, "starRatingImageNameFromKind:", *(_QWORD *)(a1 + 96)));
  v11 = (void *)objc_claimAutoreleasedReturnValue(+[TUIRatingsBox foregroundImageName](TUIRatingsBox, "foregroundImageName"));
  v12 = objc_loadWeakRetained(v5);
  v13 = objc_msgSend(v12, "size");
  objc_msgSend(v7, "computedNaturalSize");
  +[TUIRatingsBox starSizeForSize:layoutSize:](TUIRatingsBox, "starSizeForSize:layoutSize:", v13);
  v15 = v14;
  v16 = objc_loadWeakRetained(v5);
  v17 = objc_msgSend(v16, "size");
  objc_msgSend(v7, "computedNaturalSize");
  v19 = v18;
  v21 = v20;

  +[TUIRatingsBox spacingForSize:layoutSize:](TUIRatingsBox, "spacingForSize:layoutSize:", v17, v19, v21);
  v23 = (void *)objc_claimAutoreleasedReturnValue(+[TUIRatingsView renderModelWithStates:actionHandler:viewState:identifier:name:rating:enabled:direction:color:startColor:backgroundColor:backgroundImageName:foregroundImageName:starWidth:starPadding:](TUIRatingsView, "renderModelWithStates:actionHandler:viewState:identifier:name:rating:enabled:direction:color:startColor:backgroundColor:backgroundImageName:foregroundImageName:starWidth:starPadding:", v6, v31, v30, v8, v29, v28, v9, v15, v22, v27, v26, v25, v10, v11));

  return v23;
}

TUI::Evaluation::DynamicCache *TUI::Evaluation::DynamicCache::DynamicCache(TUI::Evaluation::DynamicCache *this)
{
  char *v2;
  unint64_t v4;
  uint64_t *v5;

  *(_OWORD *)((char *)this + 8) = 0u;
  v2 = (char *)this + 8;
  *(_OWORD *)((char *)this + 24) = 0u;
  *((_DWORD *)this + 10) = 1065353216;
  *((_OWORD *)this + 3) = 0u;
  *((_OWORD *)this + 4) = 0u;
  *((_DWORD *)this + 20) = 1065353216;
  *(_QWORD *)this = objc_opt_class(&__kCFBooleanTrue);
  v4 = objc_opt_class(TUIDynamicArray);
  v5 = (uint64_t *)&v4;
  *((_BYTE *)sub_41DF8((uint64_t)v2, &v4, (uint64_t)&std::piecewise_construct, &v5) + 24) = 1;
  return this;
}

void sub_C5FFC(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  sub_14B0C(v2);
  sub_14B0C(v1);
  _Unwind_Resume(a1);
}

void TUI::Evaluation::DynamicCache::~DynamicCache(TUI::Evaluation::DynamicCache *this)
{
  sub_14B0C((uint64_t)this + 48);
  sub_14B0C((uint64_t)this + 8);
}

{
  sub_14B0C((uint64_t)this + 48);
  sub_14B0C((uint64_t)this + 8);
}

void sub_C6CF8(uint64_t a1, void *a2)
{
  id v3;
  TUIRenderModelLayerBuilder *v4;
  void *v5;
  id v6;

  v3 = a2;
  v6 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "identifier"));
  v4 = (TUIRenderModelLayerBuilder *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 32), "objectForKeyedSubscript:"));
  if (!v4)
    v4 = objc_alloc_init(TUIRenderModelLayerBuilder);
  objc_msgSend(*(id *)(a1 + 40), "setObject:forKeyedSubscript:", v4, v6);
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "submodel"));

  -[TUIRenderModelLayerBuilder setModel:](v4, "setModel:", v5);
}

void sub_C6E70(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  void *v6;
  _OWORD v7[3];
  __int128 v8;
  __int128 v9;
  __int128 v10;

  v3 = a2;
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "identifier"));
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 32), "objectForKeyedSubscript:", v4));
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "layer"));
  if (v3)
  {
    objc_msgSend(v3, "transform");
  }
  else
  {
    v9 = 0u;
    v10 = 0u;
    v8 = 0u;
  }
  v7[0] = v8;
  v7[1] = v9;
  v7[2] = v10;
  objc_msgSend(v6, "setAffineTransform:", v7);
  objc_msgSend(v3, "center");
  objc_msgSend(v6, "setPosition:");
  objc_msgSend(*(id *)(a1 + 40), "addObject:", v6);

}

void sub_C7054(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_C70F4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_C721C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13)
{
  void *v13;
  void *v14;
  void *v15;
  void *v16;

  _Unwind_Resume(a1);
}

id sub_C7248(uint64_t a1)
{
  void *v2;
  id v3;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "dynamicController"));
  v3 = objc_msgSend(v2, "invalidateInstantiation:", *(_QWORD *)(a1 + 40));

  return v3;
}

void sub_C7288(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_C732C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, id a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{

  _Unwind_Resume(a1);
}

id sub_C7348(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "appendLayoutModelsToArray:", *(_QWORD *)(a1 + 32));
}

void sub_C73D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, id a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{

  _Unwind_Resume(a1);
}

id sub_C73EC(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "appendLayoutModelsToArray:", *(_QWORD *)(a1 + 32));
}

void sub_C742C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_C74E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, id a9)
{

  _Unwind_Resume(a1);
}

void sub_C74FC(id a1, TUIModel *a2, unint64_t a3, BOOL *a4)
{
  -[TUIModel setParentModel:](a2, "setParentModel:", 0, a4);
}

id sub_C7508(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "setParentModel:", *(_QWORD *)(a1 + 32));
}

void sub_C7628(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_C7760(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_C78BC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_C81F0(id a1)
{
  uint64_t v1;

  +[UISegmentedControl defaultHeightForStyle:](UISegmentedControl, "defaultHeightForStyle:", 5);
  qword_2CB648 = v1;
}

void sub_C86B0(id *a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id v7;

  v7 = a2;
  v5 = a3;
  v6 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[4], "geometryForIdentifier:", v7));
  objc_msgSend(a1[5], "removeObject:", v7);
  if (v6 != v5 && (objc_msgSend(v5, "isEqualToGeometry:", v6) & 1) == 0)
    objc_msgSend(a1[6], "addObject:", v7);

}

_QWORD *TUI::Instruction::Decoder::Decoder(_QWORD *result, uint64_t a2, unsigned int a3)
{
  uint64_t v3;

  *result = a2;
  v3 = *(_QWORD *)(a2 + 16);
  result[1] = *(_QWORD *)(a2 + 8);
  result[2] = a3;
  result[3] = v3;
  return result;
}

{
  uint64_t v3;

  *result = a2;
  v3 = *(_QWORD *)(a2 + 16);
  result[1] = *(_QWORD *)(a2 + 8);
  result[2] = a3;
  result[3] = v3;
  return result;
}

uint64_t TUI::Instruction::Decoder::offsetKind(uint64_t this)
{
  if (this <= 0x14u)
    return this;
  else
    return 0;
}

uint64_t TUI::Instruction::Decoder::offsetIndex(TUI::Instruction::Decoder *this)
{
  return this >> 8;
}

uint64_t TUI::Instruction::Decoder::symbolNameFromU24(TUI::Instruction::Decoder *this)
{
  return (unsigned __int16)(this >> 12) | ((unsigned __int16)((unsigned __int16)this & 0xFFF) << 16);
}

uint64_t TUI::Instruction::Decoder::enumerator(TUI::Instruction::Decoder *this, uint64_t a2, const TUI::Evaluation::Context *a3)
{
  uint64_t v3;

  v3 = TUIEnumeratorNil;
  if ((_DWORD)this)
  {
    if (this == 10)
      return this >> 8;
    else
      TUI::Evaluation::Context::reportError(a2, 1031, 0);
  }
  return v3;
}

uint64_t TUI::Instruction::Decoder::elementName(TUI::Instruction::Decoder *this, uint64_t a2, const TUI::Evaluation::Context *a3)
{
  unsigned int v3;
  unsigned int v4;

  v3 = (unsigned __int16)TUINameNil;
  v4 = HIWORD(TUINameNil);
  if ((_DWORD)this)
  {
    if (this == 15)
    {
      v3 = this >> 20;
      v4 = (this >> 8) & 0xFFF;
    }
    else
    {
      TUI::Evaluation::Context::reportError(a2, 1031, 0);
    }
  }
  return v3 | (v4 << 16);
}

uint64_t TUI::Instruction::Decoder::bindingName(TUI::Instruction::Decoder *this, uint64_t a2, const TUI::Evaluation::Context *a3)
{
  unsigned int v3;
  unsigned int v4;

  v3 = (unsigned __int16)TUINameNil;
  v4 = HIWORD(TUINameNil);
  if ((_DWORD)this)
  {
    if (this == 16)
    {
      v3 = this >> 20;
      v4 = (this >> 8) & 0xFFF;
    }
    else
    {
      TUI::Evaluation::Context::reportError(a2, 1031, 0);
    }
  }
  return v3 | (v4 << 16);
}

uint64_t TUI::Instruction::Decoder::constantName(TUI::Instruction::Decoder *this, uint64_t a2, const TUI::Evaluation::Context *a3)
{
  unsigned int v3;
  unsigned int v4;

  v3 = (unsigned __int16)TUINameNil;
  v4 = HIWORD(TUINameNil);
  if ((_DWORD)this)
  {
    if (this == 17)
    {
      v3 = this >> 20;
      v4 = (this >> 8) & 0xFFF;
    }
    else
    {
      TUI::Evaluation::Context::reportError(a2, 1031, 0);
    }
  }
  return v3 | (v4 << 16);
}

uint64_t TUI::Instruction::Decoder::propertyName(TUI::Instruction::Decoder *this, uint64_t a2, const TUI::Evaluation::Context *a3)
{
  if (!(_DWORD)this)
    return 0xFFFFLL;
  if (this == 20)
    return this >> 8;
  TUI::Evaluation::Context::reportError(a2, 1031, 0);
  return 0xFFFFLL;
}

uint64_t TUI::Instruction::Decoder::globalsName(TUI::Instruction::Decoder *this, uint64_t a2, const TUI::Evaluation::Context *a3)
{
  unsigned int v3;
  unsigned int v4;

  v3 = (unsigned __int16)TUINameNil;
  v4 = HIWORD(TUINameNil);
  if ((_DWORD)this)
  {
    if (this == 19)
    {
      v3 = this >> 20;
      v4 = (this >> 8) & 0xFFF;
    }
    else
    {
      TUI::Evaluation::Context::reportError(a2, 1031, 0);
    }
  }
  return v3 | (v4 << 16);
}

unint64_t TUI::Instruction::Decoder::styleReference(TUI::Instruction::Decoder *this, uint64_t a2, const TUI::Evaluation::Context *a3)
{
  unsigned int v3;
  uint64_t v4;

  v3 = TUIStyleReferenceNil;
  v4 = HIDWORD(TUIStyleReferenceNil);
  if ((_DWORD)this)
  {
    if (this == 14)
    {
      v3 = this >> 14;
      v4 = (this >> 8) & 0x3F;
    }
    else
    {
      TUI::Evaluation::Context::reportError(a2, 1031, 0);
    }
  }
  return v3 | (unint64_t)(v4 << 32);
}

unint64_t TUI::Instruction::Decoder::animationReference(TUI::Instruction::Decoder *this, uint64_t a2, const TUI::Evaluation::Context *a3)
{
  unsigned int v3;
  uint64_t v4;

  v3 = TUIAnimationReferenceNil;
  v4 = *(unsigned int *)algn_2C9574;
  if ((_DWORD)this)
  {
    if (this == 13)
    {
      v3 = this >> 14;
      v4 = (this >> 8) & 0x3F;
    }
    else
    {
      TUI::Evaluation::Context::reportError(a2, 1031, 0);
    }
  }
  return v3 | (unint64_t)(v4 << 32);
}

uint64_t TUI::Instruction::Decoder::elementReference(TUI::Instruction::Decoder *this, uint64_t a2, const TUI::Evaluation::Context *a3)
{
  uint64_t v3;

  v3 = TUIElementReferenceNil;
  if ((_DWORD)this)
  {
    if (this == 12)
      return this >> 8;
    else
      TUI::Evaluation::Context::reportError(a2, 1031, 0);
  }
  return v3;
}

uint64_t TUI::Instruction::Decoder::nameReference(TUI::Instruction::Decoder *this, uint64_t a2, const TUI::Evaluation::Context *a3)
{
  uint64_t v3;

  v3 = TUINameReferenceNil;
  if ((_DWORD)this)
  {
    if (this == 11)
      return this >> 8;
    else
      TUI::Evaluation::Context::reportError(a2, 1031, 0);
  }
  return v3;
}

uint64_t TUI::Instruction::Decoder::definition(TUI::Instruction::Decoder *this, uint64_t a2, const TUI::Evaluation::Context *a3)
{
  uint64_t v3;

  v3 = TUIDefinitionNil;
  if ((_DWORD)this)
  {
    if (this == 9)
      return this >> 8;
    else
      TUI::Evaluation::Context::reportError(a2, 1031, 0);
  }
  return v3;
}

void sub_C8C54(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_C8CE4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_C8D7C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_C8DEC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_CA794(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  sub_60EE0((uint64_t)&STACK[0x338]);
  _Unwind_Resume(a1);
}

double sub_CA954(__int128 *a1, uint64_t a2, _QWORD *a3, unint64_t a4)
{
  unint64_t v7;
  uint64_t *v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t *v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t *v18;
  double v19;
  double v20;
  _QWORD *v21;
  double *v22;
  double *v23;
  double *v24;
  uint64_t v25;
  double v26;
  double *v27;
  double v28;
  uint64_t v29;
  uint64_t *v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  BOOL v38;
  uint64_t v39;
  _QWORD *v40;
  void *v41;
  __int128 v42;
  double v43;
  __int128 v44;
  unint64_t v45;
  _QWORD *v46;
  unint64_t v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  int v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  double v55;
  double v56;
  double v57;
  double v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  double v62;
  unint64_t v63;
  double v64;
  double v65;
  double v66;
  char *v67;
  double v68;
  double v69;
  double v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  const CGPoint *v75;
  CGFloat *p_y;
  BOOL v77;
  const CGPoint *v78;
  _QWORD *v79;
  double v81;
  _QWORD *v82;
  uint64_t *v83;
  unint64_t v84;
  unint64_t v85;
  uint64_t v86;
  unint64_t v87;
  __int128 v88;
  __int128 *v89;
  __int128 v90;
  uint64_t v91;
  __int128 v92;
  uint64_t v93;
  uint64_t v94;
  void *__p[3];
  char v96;
  void *v97;
  double *v98;
  uint64_t v99;

  v97 = 0;
  v98 = 0;
  v99 = 0;
  if (!a4)
  {
    v30 = *(uint64_t **)a1;
    v31 = *((_QWORD *)a1 + 1);
    a4 = 1;
    v32 = *((_QWORD *)a1 + 2);
    v33 = *((_QWORD *)a1 + 4);
LABEL_22:
    while (1)
    {
      v34 = v32;
      v35 = v31;
      if (v31 == v33 && v32 == *((_QWORD *)a1 + 5))
        break;
      v32 = 0;
      v36 = *v30;
      v37 = *(_QWORD *)(*(_QWORD *)(*v30 + 88 * v31) + 96 * v34 + 56)
          - *(_QWORD *)(*(_QWORD *)(*v30 + 88 * v31) + 96 * v34 + 48);
      v38 = a4 > v37 >> 6;
      v39 = v37 >> 6;
      if (!v38)
        a4 = v39;
      v31 = 0x2E8BA2E8BA2E8BA3 * ((v30[1] - v36) >> 3);
      if (v35 < v31)
      {
        v32 = v34 + 1;
        v40 = (_QWORD *)(v36 + 88 * v35 + 8);
        while (v32 >= 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*v40 - *(v40 - 1)) >> 5))
        {
          v32 = 0;
          ++v35;
          v40 += 11;
          if (v31 == v35)
            goto LABEL_22;
        }
        v31 = v35;
      }
    }
  }
  __p[0] = 0;
  v87 = a4;
  sub_65CE0((uint64_t)&v97, a4, __p);
  v8 = *(uint64_t **)a1;
  v7 = *((_QWORD *)a1 + 1);
  v9 = *((_QWORD *)a1 + 2);
  v83 = *(uint64_t **)a1;
LABEL_3:
  while (1)
  {
    v10 = v9;
    v11 = v7;
    if (v7 == *((_QWORD *)a1 + 4) && v9 == *((_QWORD *)a1 + 5))
      break;
    v12 = *v8;
    v13 = *(_QWORD *)(*v8 + 88 * v7);
    v14 = (unint64_t *)(v13 + 96 * v9);
    v15 = v14[6];
    v16 = v14[7];
    if (v15 != v16)
    {
      v17 = 0;
      v85 = v9;
      v18 = (unint64_t *)(v13 + 96 * v9 + 16);
      do
      {
        v19 = sub_5F85C(a2, *v14, *v18);
        sub_65980(v15, 0, (uint64_t)&v96, v19);
        if (v17 < v87)
          *((double *)v97 + v17) = fmax(*((double *)v97 + v17), v20);
        ++v17;
        v15 += 64;
      }
      while (v15 != v16);
      v8 = v83;
      v10 = v85;
      v12 = *v83;
    }
    v9 = 0;
    v7 = 0x2E8BA2E8BA2E8BA3 * ((v8[1] - v12) >> 3);
    if (v11 < v7)
    {
      v9 = v10 + 1;
      v21 = (_QWORD *)(v12 + 88 * v11 + 8);
      while (v9 >= 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*v21 - *(v21 - 1)) >> 5))
      {
        v9 = 0;
        ++v11;
        v21 += 11;
        if (v7 == v11)
          goto LABEL_3;
      }
      v7 = v11;
    }
  }
  memset(__p, 0, sizeof(__p));
  v94 = 0;
  sub_65CE0((uint64_t)__p, v87 + 1, &v94);
  v22 = (double *)v97;
  v23 = v98;
  v24 = (double *)__p[0];
  if (v97 == v98)
  {
    v29 = 0;
    v26 = 0.0;
  }
  else
  {
    v25 = 0;
    v26 = 0.0;
    v27 = (double *)__p[0];
    do
    {
      v28 = *v22++;
      *v27++ = v26;
      v26 = v26 + v28;
      --v25;
    }
    while (v22 != v23);
    v29 = -v25;
  }
  v24[v29] = v26;
  v92 = *a1;
  v93 = *((_QWORD *)a1 + 2);
  v90 = *(__int128 *)((char *)a1 + 24);
  v91 = *((_QWORD *)a1 + 5);
  *(_QWORD *)&v88 = a2;
  *((_QWORD *)&v88 + 1) = __p;
  v89 = a1;
  sub_CC010(a3, (size_t)&v92, (uint64_t)&v90, &v88);
  v41 = (void *)*((_QWORD *)a1 + 13);
  v42 = *(_OWORD *)&__p[1];
  v43 = *((double *)__p[1] - 1);
  v44 = *(__int128 *)((char *)a1 + 88);
  *((void **)a1 + 11) = __p[0];
  *(_OWORD *)__p = v44;
  a1[6] = v42;
  __p[2] = v41;
  v81 = sub_5FD14(a2);
  v46 = *(_QWORD **)a1;
  v45 = *((_QWORD *)a1 + 1);
  v47 = *((_QWORD *)a1 + 2);
  v86 = a2;
  v82 = *(_QWORD **)a1;
LABEL_34:
  while (1)
  {
    v48 = v45;
    v49 = v47;
    if (v45 == *((_QWORD *)a1 + 4) && v47 == *((_QWORD *)a1 + 5))
      break;
    v50 = *(_QWORD *)(*v46 + 88 * v45);
    v51 = *((_DWORD *)a1 + 16);
    if (v51)
    {
      v52 = v50 + 96 * v47;
      v53 = *(_QWORD *)(v52 + 48);
      v54 = *(_QWORD *)(v52 + 56);
      v55 = 0.0;
      while (v53 != v54)
      {
        v55 = v55 + *(double *)(v53 + 56);
        v53 += 64;
      }
      v56 = 0.0;
      if (v51 == 5)
        v56 = 1.0;
      if (v51 == 3)
        v56 = 1.0;
      if (v51 == 2)
        v57 = 0.5;
      else
        v57 = v56;
    }
    else
    {
      v57 = 0.0;
      v55 = 0.0;
    }
    sub_66124(a2, *(_QWORD *)(v50 + 96 * v49), *(_QWORD *)(v50 + 96 * v49 + 16), 1);
    v84 = v49;
    v59 = v50 + 96 * v49;
    v60 = *(_QWORD *)(v59 + 48);
    v61 = *(_QWORD *)(v59 + 56);
    if (v60 != v61)
    {
      v62 = v58;
      v63 = 0;
      v64 = v57 * (v43 - v55);
      do
      {
        v65 = 0.0;
        v66 = 0.0;
        if (v63 < v87)
          v66 = *((double *)v97 + v63);
        if (*((_DWORD *)a1 + 16))
        {
          v66 = *(double *)(v60 + 56);
        }
        else
        {
          v67 = (char *)objc_msgSend(*(id *)v60, "valign", 0.0);
          v68 = 0.0;
          if ((unint64_t)(v67 - 1) <= 3)
            v68 = dbl_22F4D8[(_QWORD)(v67 - 1)];
          v65 = v68 * (v66 - *(double *)(v60 + 56));
        }
        v69 = v62 + *((double *)a1 + 6);
        v70 = v65 + v64 + *((double *)a1 + 7);
        *(double *)(v60 + 32) = v69;
        *(double *)(v60 + 40) = v70;
        v71 = *(_QWORD *)(v60 + 8);
        v72 = *(_QWORD *)(v60 + 16);
        while (v71 != v72)
        {
          v73 = *(_QWORD *)(v71 + 56);
          v74 = a3[14] + 152 * v73;
          v75 = (const CGPoint *)(v74 + 136);
          p_y = (CGFloat *)(v74 + 144);
          v77 = v73 == -1;
          if (v73 == -1)
            v78 = &CGPointZero;
          else
            v78 = v75;
          if (v77)
            p_y = &CGPointZero.y;
          sub_66990((double *)(v71 + 8), v69 - v78->x + *(double *)(v71 + 72), v70 - *p_y + *(double *)(v71 + 64));
          v71 += 96;
        }
        v64 = v64 + v66;
        ++v63;
        v60 += 64;
        a2 = v86;
      }
      while (v60 != v61);
    }
    v47 = 0;
    v46 = v82;
    v45 = 0x2E8BA2E8BA2E8BA3 * ((uint64_t)(v82[1] - *v82) >> 3);
    if (v48 < v45)
    {
      v47 = v84 + 1;
      v79 = (_QWORD *)(*v82 + 88 * v48 + 8);
      while (v47 >= 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*v79 - *(v79 - 1)) >> 5))
      {
        v47 = 0;
        ++v48;
        v79 += 11;
        if (v45 == v48)
          goto LABEL_34;
      }
      v45 = v48;
    }
  }
  *((double *)a1 + 9) = v81;
  *((double *)a1 + 10) = v43;
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v97)
  {
    v98 = (double *)v97;
    operator delete(v97);
  }
  return v81;
}

void sub_CAF5C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,void *__p,uint64_t a26,uint64_t a27,uint64_t a28,void *a29,uint64_t a30)
{
  if (__p)
    operator delete(__p);
  if (a29)
    operator delete(a29);
  _Unwind_Resume(exception_object);
}

double *sub_CAFAC(id *a1, uint64_t *a2, uint64_t a3, uint64_t a4, _QWORD *a5, double a6, double a7)
{
  __int128 v14;
  double v15;
  uint64_t v16;
  uint64_t v17;
  double v18;
  uint64_t v19;
  double v20;
  double v21;
  double v22;
  double *result;
  double *v24;
  double v25;
  double v26;
  uint64_t v27;
  uint64_t *v28;
  double v29;
  __int128 v30;
  double *v31;
  __int128 v32;
  double *v33;
  double v34;
  double v35;
  char v36;
  __int128 v37;
  __int128 v38;

  v14 = *(_OWORD *)(a4 + 40);
  v37 = *(_OWORD *)(a4 + 24);
  v38 = v14;
  v15 = *(double *)a4;
  v16 = sub_5F7DC(a3, (char *)&dword_0 + 1);
  if (*(_QWORD *)(a3 + 32) != v16)
  {
    v17 = v16;
    sub_658DC((uint64_t)&v36, 0, *(_QWORD *)(v16 + 40), *(_QWORD *)(v16 + 48), *((double *)&v37 + 1));
    *(double *)(v17 + 72) = v18;
    *(_QWORD *)(v17 + 80) = v19;
    v20 = *((double *)&v37 + 1) - v18;
    v21 = v15 - *((double *)&v37 + 1) + v20 * 0.5;
    v22 = v20 * 0.5;
    if (*(_QWORD *)(a4 + 96) == 2)
      v22 = v21;
    v34 = a6 + v22;
    v35 = a7 + *(double *)&v37;
    *(_QWORD *)&v32 = &v37;
    *((_QWORD *)&v32 + 1) = a2;
    v33 = &v34;
    sub_CC7F0(a5, (uint64_t *)v17, (uint64_t *)(v17 + 96), &v32);
    sub_92240(v17, &dword_4, a2, (uint64_t)a5, v34, v35);
    sub_5FA24(v17, 1);
    objc_msgSend(*a1, "addObjectsFromArray:", *(_QWORD *)(v17 + 88));
  }
  result = (double *)sub_5F7DC(a3, (char *)&dword_0 + 2);
  if (*(double **)(a3 + 32) != result)
  {
    v24 = result;
    sub_658DC((uint64_t)&v36, 0, *((_QWORD *)result + 5), *((_QWORD *)result + 6), *((double *)&v38 + 1));
    v26 = v25;
    v24[9] = v25;
    *((_QWORD *)v24 + 10) = v27;
    v28 = (uint64_t *)sub_5F7DC(a3, (char *)&dword_0 + 2);
    v29 = v15 - *((double *)&v38 + 1) + (*((double *)&v38 + 1) - v26) * 0.5;
    if (*(_QWORD *)(a4 + 96) == 2)
      v29 = (*((double *)&v38 + 1) - v26) * 0.5;
    v34 = a6 + v29;
    v35 = a7 + *(double *)&v37;
    *(_QWORD *)&v30 = &v37;
    *((_QWORD *)&v30 + 1) = a2;
    v31 = &v34;
    sub_CCB48(a5, v28, v28 + 12, &v30);
    sub_92240((uint64_t)v24, &dword_4, a2, (uint64_t)a5, v34, v35);
    sub_5FA24((uint64_t)v24, 1);
    return (double *)objc_msgSend(*a1, "addObjectsFromArray:", *((_QWORD *)v24 + 11));
  }
  return result;
}

unint64_t *sub_CB1B4@<X0>(unint64_t *result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;

  v4 = result[4];
  while (1)
  {
    v5 = *result;
    if (v4 != *result && (v4 >= *result || !*(_QWORD *)(result[1] + 8 * v4)))
      break;
    if (v4 < v5)
    {
      v6 = result[1];
      while (*(_QWORD *)(v6 + 8 * v4))
      {
        result[4] = ++v4;
        if (v5 == v4)
          goto LABEL_11;
      }
    }
    if (v4 == v5)
    {
LABEL_11:
      v7 = (_QWORD *)result[1];
      v8 = (_QWORD *)result[2];
      while (v7 != v8)
      {
        if (*v7)
          --*v7;
        ++v7;
      }
      v4 = 0;
      v9 = result[5] + 1;
      result[4] = 0;
      result[5] = v9;
    }
  }
  v10 = result[6];
  if (v10 && result[5] >= v10 || (v11 = result[7]) != 0 && result[5] >= v11)
  {
    *(_OWORD *)a4 = 0u;
    *(_OWORD *)(a4 + 16) = 0u;
    return result;
  }
  if (v10 && result[5] + a3 > v10)
  {
LABEL_29:
    v12 = 1;
    goto LABEL_30;
  }
  if (!v11)
  {
    if (v4 + a2 <= v5)
      goto LABEL_35;
    goto LABEL_29;
  }
  v12 = 1;
  if (v4 + a2 > v5)
  {
LABEL_30:
    v13 = 1;
    goto LABEL_31;
  }
  v13 = 1;
  if (result[5] + a3 > v11)
  {
LABEL_31:
    v14 = 0;
    v15 = result[5];
    *(_QWORD *)a4 = v4;
    *(_QWORD *)(a4 + 8) = v15;
    *(_QWORD *)(a4 + 16) = v12;
    *(_QWORD *)(a4 + 24) = v13;
    v16 = result[1];
    do
    {
      *(_QWORD *)(v16 + 8 * (v14 + result[4])) = v13;
      ++v14;
    }
    while (v12 != v14);
    v4 = result[4];
    goto LABEL_34;
  }
LABEL_35:
  if (a2)
  {
    v17 = 0;
    if (v5 >= v4)
      v18 = v5 - v4;
    else
      v18 = 0;
    v12 = 1;
    while (v18 != v17 && !*(_QWORD *)(result[1] + 8 * v4 + 8 * v17))
    {
      if (a2 == ++v17)
      {
        v12 = a2;
        v13 = a3;
        goto LABEL_31;
      }
    }
    goto LABEL_30;
  }
  v12 = 0;
  v19 = result[5];
  *(_QWORD *)a4 = v4;
  *(_QWORD *)(a4 + 8) = v19;
  *(_QWORD *)(a4 + 16) = 0;
  *(_QWORD *)(a4 + 24) = a3;
LABEL_34:
  result[4] = v4 + v12;
  return result;
}

uint64_t sub_CB35C(uint64_t result)
{
  int64x2_t **v1;
  int64x2_t v2;
  int64x2_t *i;
  int8x16_t v4;
  int8x16_t v5;

  v1 = *(int64x2_t ***)result;
  v2 = 0uLL;
  while (v1 != *(int64x2_t ***)(result + 8))
  {
    for (i = *v1; i != v1[1]; i += 6)
    {
      if (i[1].i64[0])
      {
        if (i[1].i64[1])
        {
          v4 = (int8x16_t)vaddq_s64(*i, i[1]);
          v5 = (int8x16_t)vdupq_laneq_s64(v2, 1);
          v2 = (int64x2_t)vbslq_s8((int8x16_t)vcgtq_u64((uint64x2_t)v5, (uint64x2_t)v4), v5, v4);
        }
      }
    }
    v1 += 11;
  }
  *(int64x2_t *)(result + 48) = v2;
  return result;
}

void sub_CB3BC(uint64_t a1, uint64_t a2, uint64_t a3, double a4, double a5)
{
  unint64_t v9;
  uint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  BOOL v19;
  unint64_t *v20;
  double v21;
  unint64_t v22;
  unint64_t v23;
  _QWORD *v24;
  double v25;
  double v26;
  uint64_t v27;
  double v28;
  char v30;

  v10 = *(uint64_t **)a1;
  v9 = *(_QWORD *)(a1 + 8);
  v11 = *(_QWORD *)(a1 + 16);
LABEL_2:
  while (1)
  {
    v12 = v11;
    v13 = v9;
    if (v9 == *(_QWORD *)(a1 + 32) && v11 == *(_QWORD *)(a1 + 40))
      break;
    v14 = *v10;
    v15 = *(_QWORD *)(*v10 + 88 * v9);
    v16 = v15 + 96 * v11;
    v17 = *(_QWORD *)(v16 + 16);
    v18 = *(_QWORD *)(v16 + 24);
    if (v17)
      v19 = v18 == 0;
    else
      v19 = 1;
    if (!v19)
    {
      v20 = (unint64_t *)(v15 + 96 * v12);
      v21 = sub_5F85C(a2, *v20, v17);
      sub_658DC((uint64_t)&v30, 0, v20[6], v20[7], v21);
      v20[9] = v22;
      v20[10] = v23;
      v14 = *v10;
    }
    v11 = 0;
    v9 = 0x2E8BA2E8BA2E8BA3 * ((v10[1] - v14) >> 3);
    if (v13 < v9)
    {
      v11 = v12 + 1;
      v24 = (_QWORD *)(v14 + 88 * v13 + 8);
      while (v11 >= 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*v24 - *(v24 - 1)) >> 5))
      {
        v11 = 0;
        ++v13;
        v24 += 11;
        if (v9 == v13)
          goto LABEL_2;
      }
      v9 = v13;
    }
  }
  switch(*(_DWORD *)(a1 + 64))
  {
    case 0:
    case 1:
      v25 = 0.0;
      goto LABEL_19;
    case 2:
      v25 = 0.5;
      goto LABEL_19;
    case 3:
      v25 = 1.0;
LABEL_19:
      v26 = sub_CD188(a1, a2, a3, v25, a4, a5);
      goto LABEL_23;
    case 4:
      v28 = 0.0;
      goto LABEL_22;
    case 5:
      v28 = 1.0;
LABEL_22:
      v26 = sub_CD76C(a1, a2, v28, a4, a5);
LABEL_23:
      *(double *)(a1 + 48) = v26;
      *(_QWORD *)(a1 + 56) = v27;
      break;
    default:
      return;
  }
}

void sub_CB590(id *a1, uint64_t a2, uint64_t a3, _QWORD *a4, double a5, double a6, double a7)
{
  double *v14;
  uint64_t v15;
  unint64_t v16;
  double *v17;
  double *v18;
  double *v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char *v24;
  double *v25;
  char *v26;
  uint64_t v27;
  void *__p;
  double *v29;
  unint64_t v30;

  v30 = 0;
  v14 = (double *)sub_39CC4((uint64_t)&v30, 1uLL);
  v16 = (unint64_t)&v14[v15];
  *v14 = 0.0;
  v17 = v14 + 1;
  __p = v14;
  v30 = v16;
  v29 = v14 + 1;
  if ((unint64_t)(v14 + 1) >= v16)
  {
    v19 = (double *)__p;
    v20 = ((char *)v17 - (_BYTE *)__p) >> 3;
    v21 = v20 + 1;
    if ((unint64_t)(v20 + 1) >> 61)
      sub_6F9C();
    v22 = v16 - (_QWORD)__p;
    if (v22 >> 2 > v21)
      v21 = v22 >> 2;
    if ((unint64_t)v22 >= 0x7FFFFFFFFFFFFFF8)
      v23 = 0x1FFFFFFFFFFFFFFFLL;
    else
      v23 = v21;
    if (v23)
    {
      v24 = (char *)sub_39CC4((uint64_t)&v30, v23);
      v19 = (double *)__p;
      v17 = v29;
    }
    else
    {
      v24 = 0;
    }
    v25 = (double *)&v24[8 * v20];
    v26 = &v24[8 * v23];
    *v25 = a7;
    v18 = v25 + 1;
    while (v17 != v19)
    {
      v27 = *((_QWORD *)v17-- - 1);
      *((_QWORD *)v25-- - 1) = v27;
    }
    __p = v25;
    v29 = v18;
    v30 = (unint64_t)v26;
    if (v19)
      operator delete(v19);
  }
  else
  {
    v14[1] = a7;
    v18 = v14 + 2;
  }
  v29 = v18;
  sub_CAFAC(a1, (uint64_t *)&__p, a2, a3, a4, a5, a6);
  if (__p)
  {
    v29 = (double *)__p;
    operator delete(__p);
  }
}

void sub_CB730(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_CB850(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_CB988(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_CBB84(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_CBD08(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

uint64_t sub_CBE58(uint64_t a1, unint64_t a2)
{
  uint64_t v4;

  *(_QWORD *)a1 = a2;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_QWORD *)(a1 + 56) = 0;
  v4 = 0;
  sub_CBED0(a1 + 8, a2, &v4);
  return a1;
}

void sub_CBEB4(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void **v2;
  void *v4;

  v4 = *v2;
  if (*v2)
  {
    *(_QWORD *)(v1 + 16) = v4;
    operator delete(v4);
  }
  _Unwind_Resume(exception_object);
}

void sub_CBED0(uint64_t a1, unint64_t a2, _QWORD *a3)
{
  unint64_t v3;

  v3 = (uint64_t)(*(_QWORD *)(a1 + 8) - *(_QWORD *)a1) >> 3;
  if (a2 <= v3)
  {
    if (a2 < v3)
      *(_QWORD *)(a1 + 8) = *(_QWORD *)a1 + 8 * a2;
  }
  else
  {
    sub_CBF00((void **)a1, a2 - v3, a3);
  }
}

void sub_CBF00(void **a1, unint64_t a2, _QWORD *a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  _QWORD *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char *v15;
  uint64_t v16;
  _QWORD *v17;
  char *v18;
  char *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  char *v23;
  char *i;
  uint64_t v25;

  v8 = a1[2];
  v6 = (uint64_t)(a1 + 2);
  v7 = v8;
  v9 = *(_QWORD **)(v6 - 8);
  if (a2 <= (v8 - (_BYTE *)v9) >> 3)
  {
    if (a2)
    {
      v16 = 8 * a2;
      v17 = &v9[a2];
      do
      {
        *v9++ = *a3;
        v16 -= 8;
      }
      while (v16);
      v9 = v17;
    }
    a1[1] = v9;
  }
  else
  {
    v10 = (char *)v9 - (_BYTE *)*a1;
    v11 = a2 + (v10 >> 3);
    if (v11 >> 61)
      sub_6F9C();
    v12 = v10 >> 3;
    v13 = v7 - (_BYTE *)*a1;
    if (v13 >> 2 > v11)
      v11 = v13 >> 2;
    if ((unint64_t)v13 >= 0x7FFFFFFFFFFFFFF8)
      v14 = 0x1FFFFFFFFFFFFFFFLL;
    else
      v14 = v11;
    if (v14)
      v15 = (char *)sub_39CC4(v6, v14);
    else
      v15 = 0;
    v18 = &v15[8 * v12];
    v19 = &v18[8 * a2];
    v20 = 8 * a2;
    v21 = v18;
    do
    {
      *(_QWORD *)v21 = *a3;
      v21 += 8;
      v20 -= 8;
    }
    while (v20);
    v22 = &v15[8 * v14];
    v23 = (char *)*a1;
    for (i = (char *)a1[1]; i != v23; i -= 8)
    {
      v25 = *((_QWORD *)i - 1);
      *((_QWORD *)v18 - 1) = v25;
      v18 -= 8;
    }
    *a1 = v18;
    a1[1] = v19;
    a1[2] = v22;
    if (v23)
      operator delete(v23);
  }
}

void sub_CC010(_QWORD *a1, size_t size, uint64_t a3, __int128 *a4)
{
  NSMutableIndexSet *v4;
  unint64_t v5;
  unint64_t v6;
  _QWORD *v7;
  _OWORD *v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  uint64_t *v15;
  uint64_t *v16;
  uint64_t *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  _QWORD *v30;
  _QWORD *v32;
  uint64_t v33;
  unint64_t v34;
  _OWORD *v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  unint64_t v45;
  _QWORD v46[5];
  __int128 v47;
  uint64_t v48;
  _OWORD *v49;
  _QWORD v50[5];
  __int128 v51;
  uint64_t v52;
  _OWORD *v53;
  _OWORD ptr[32];

  if (a1[14] != a1[15])
  {
    v45 = 0;
    v4 = 0;
    v5 = 64;
    memset(ptr, 0, sizeof(ptr));
    v7 = *(_QWORD **)size;
    v6 = *(_QWORD *)(size + 8);
    v8 = ptr;
    v9 = *(_QWORD *)(size + 16);
    v32 = *(_QWORD **)size;
    v33 = a3;
LABEL_3:
    while (1)
    {
      v10 = v9;
      if (v6 == *(_QWORD *)(a3 + 8) && v9 == *(_QWORD *)(a3 + 16))
        break;
      v11 = *(_QWORD *)(*v7 + 88 * v6);
      v36 = v6;
      if (v45 >= v5)
      {
        v12 = v5 + 64;
        v37 = v12;
        if (v8 == ptr)
        {
          v8 = malloc_type_malloc(8 * v12, 0x2004093837F09uLL);
          memcpy(v8, ptr, 8 * v45);
        }
        else
        {
          v8 = malloc_type_realloc(v8, 8 * v12, 0x2004093837F09uLL);
        }
      }
      else
      {
        v37 = v5;
      }
      v13 = a1;
      v34 = v10;
      v35 = v8;
      v43 = (uint64_t *)(v11 + 96 * v10);
      *((_QWORD *)v8 + v45) = v43;
      v38 = v43[7];
      if (v43[6] != v38)
      {
        v14 = 0;
        v15 = (uint64_t *)(v11 + 96 * v10);
        v16 = v15 + 1;
        v17 = v15 + 2;
        v18 = v15 + 3;
        v19 = v43[6];
        do
        {
          v39 = v19;
          v40 = *(_QWORD *)(v19 + 16);
          v20 = *(_QWORD *)(v19 + 8);
          if (v20 != v40)
          {
            do
            {
              v21 = v20;
              v22 = v13[8];
              v41 = v21;
              v23 = (*(_QWORD *)(v21 + 8) - v22) >> 3;
              v24 = *(_QWORD *)(v21 + 16) - v22;
              if (v23 < v24 >> 3)
              {
                v42 = v24 >> 3;
                do
                {
                  v25 = *(_QWORD *)(v13[11] + 8 * v23);
                  if (v25 != -1)
                  {
                    if (!v4)
                      v4 = objc_opt_new(NSMutableIndexSet);
                    do
                    {
                      if ((-[NSMutableIndexSet containsIndex:](v4, "containsIndex:", v25) & 1) == 0)
                      {
                        v26 = v13[14] + 152 * v25;
                        *(_QWORD *)v26 = -1;
                        *(_OWORD *)(v26 + 8) = 0u;
                        *(_OWORD *)(v26 + 24) = 0u;
                        *(_OWORD *)(v26 + 40) = 0u;
                        -[NSMutableIndexSet addIndex:](v4, "addIndex:", v25);
                      }
                      v27 = v23;
                      v28 = v13[14];
                      sub_665AC((_QWORD *)(v28 + 152 * v25), v45, *v43, *v16, v14, *v17, *v18, 1uLL);
                      v25 = *(_QWORD *)(v28 + 152 * v25 + 128);
                      v23 = v27;
                      v13 = a1;
                    }
                    while (v25 != -1);
                  }
                  ++v23;
                }
                while (v23 != v42);
              }
              v20 = v41 + 96;
            }
            while (v41 + 96 != v40);
          }
          ++v14;
          v19 = v39 + 64;
        }
        while (v39 + 64 != v38);
      }
      v9 = 0;
      ++v45;
      v7 = v32;
      a3 = v33;
      v6 = 0x2E8BA2E8BA2E8BA3 * ((uint64_t)(v32[1] - *v32) >> 3);
      v8 = v35;
      v29 = v36;
      v5 = v37;
      if (v36 < v6)
      {
        v9 = v34 + 1;
        v30 = (_QWORD *)(*v32 + 88 * v36 + 8);
        while (v9 >= 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*v30 - *(v30 - 1)) >> 5))
        {
          v9 = 0;
          ++v29;
          v30 += 11;
          if (v6 == v29)
            goto LABEL_3;
        }
        v6 = v29;
      }
    }
    v50[0] = _NSConcreteStackBlock;
    v50[1] = 3221225472;
    v50[2] = sub_CC478;
    v50[3] = &unk_23F1C8;
    v50[4] = a1;
    v51 = *a4;
    v52 = *((_QWORD *)a4 + 2);
    v53 = v8;
    -[NSMutableIndexSet enumerateRangesUsingBlock:](v4, "enumerateRangesUsingBlock:", v50);
    v46[0] = _NSConcreteStackBlock;
    v46[1] = 3221225472;
    v46[2] = sub_CC704;
    v46[3] = &unk_23F1C8;
    v46[4] = a1;
    v47 = *a4;
    v48 = *((_QWORD *)a4 + 2);
    v49 = v8;
    -[NSMutableIndexSet enumerateRangesWithOptions:usingBlock:](v4, "enumerateRangesWithOptions:usingBlock:", 2, v46);
    if (v8 != ptr)
      free(v8);

  }
}

void sub_CC454(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

_QWORD *sub_CC478(_QWORD *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  double v14;
  double v15;
  uint64_t v16;
  uint64_t v17;
  const CGPoint *v18;
  CGFloat *p_y;
  double v20;
  double x;
  _OWORD v22[3];
  uint64_t v23;

  if (a3)
  {
    v3 = a3;
    v4 = result;
    v5 = result[4];
    v6 = result + 5;
    v7 = 152 * a2;
    do
    {
      v8 = *(_QWORD *)(v5 + 112) + v7;
      v9 = *(_QWORD *)(v4[8] + 8 * *(_QWORD *)v8);
      v10 = *(_QWORD *)(v8 + 112);
      v12 = *(_OWORD *)(v8 + 16);
      v11 = *(_OWORD *)(v8 + 32);
      v13 = *(_OWORD *)v8;
      v23 = *(_QWORD *)(v8 + 48);
      v22[1] = v12;
      v22[2] = v11;
      v22[0] = v13;
      v14 = sub_CC560(v6, v9, v10, (unint64_t *)v22);
      v16 = *(_QWORD *)(v8 + 128);
      if (v16 == -1)
      {
        p_y = &CGPointZero.y;
        v18 = &CGPointZero;
      }
      else
      {
        v17 = *(_QWORD *)(v5 + 112) + 152 * v16;
        v18 = (const CGPoint *)(v17 + 136);
        p_y = (CGFloat *)(v17 + 144);
      }
      v20 = *p_y;
      x = v18->x;
      *(double *)(v8 + 136) = v14;
      *(double *)(v8 + 144) = v15;
      result = objc_msgSend(*(id *)(v8 + 120), "setComputedOrigin:", v14 - x, v15 - v20);
      v7 += 152;
      --v3;
    }
    while (v3);
  }
  return result;
}

double sub_CC560(uint64_t *a1, uint64_t a2, uint64_t a3, unint64_t *a4)
{
  uint64_t v8;
  double v9;
  double v10;

  v8 = a1[2];
  sub_66124(*a1, a4[1], a4[4], 1);
  v10 = v9;
  sub_5F85C(*a1, a4[1], a4[4]);
  if (a3 && !*(_DWORD *)(v8 + 64))
  {
    objc_msgSend(*(id *)(*(_QWORD *)(a2 + 48) + (a4[3] << 6)), "valign");
    objc_msgSend(*(id *)(*(_QWORD *)(a2 + 48) + ((a4[6] + a4[3] - 1) << 6)), "valign");
  }
  return v10 + *(double *)(v8 + 48);
}

void sub_CC704(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  void *v20;
  _OWORD v21[3];
  uint64_t v22;

  if (a3)
  {
    v3 = a3;
    v5 = a1[4];
    v6 = a1 + 5;
    v7 = 152 * a3;
    v8 = 152 * a2;
    do
    {
      v9 = *(_QWORD *)(v5 + 112) + v7 + v8;
      v10 = *(_QWORD *)(a1[8] + 8 * *(_QWORD *)(v9 - 152));
      v11 = *(_QWORD *)(v9 - 40);
      v12 = *(_OWORD *)(v9 - 136);
      v13 = *(_OWORD *)(v9 - 120);
      v14 = *(_OWORD *)(v9 - 152);
      v22 = *(_QWORD *)(v9 - 104);
      v21[1] = v12;
      v21[2] = v13;
      v21[0] = v14;
      v15 = sub_CC560(v6, v10, v11, (unint64_t *)v21);
      v17 = v16;
      v19 = v18;
      v20 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(v9 - 32), "controller", v15));
      objc_msgSend(v20, "validateGroupedContainingLayout:withSize:", *(_QWORD *)(v9 - 32), v17, v19);

      v8 -= 152;
      --v3;
    }
    while (v3);
  }
}

void sub_CC7E0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_CC7F0(_QWORD *a1, uint64_t *size, uint64_t *a3, __int128 *a4)
{
  uint64_t *v4;
  NSMutableIndexSet *v6;
  unint64_t v7;
  unint64_t v8;
  _OWORD *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v22;
  _OWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD v29[5];
  __int128 v30;
  uint64_t v31;
  _OWORD *v32;
  _QWORD v33[5];
  __int128 v34;
  uint64_t v35;
  _OWORD *v36;
  _OWORD ptr[32];

  if (a1[14] != a1[15])
  {
    v4 = size;
    memset(ptr, 0, sizeof(ptr));
    if (size == a3)
    {
      v6 = 0;
      v9 = ptr;
    }
    else
    {
      v6 = 0;
      v7 = 0;
      v8 = 64;
      v9 = ptr;
      do
      {
        if (v7 >= v8)
        {
          v8 += 64;
          if (v9 == ptr)
          {
            v9 = malloc_type_malloc(8 * v8, 0x2004093837F09uLL);
            memcpy(v9, ptr, 8 * v7);
          }
          else
          {
            v9 = malloc_type_realloc(v9, 8 * v8, 0x2004093837F09uLL);
          }
        }
        v22 = v8;
        v23 = v9;
        *((_QWORD *)v9 + v7) = v4;
        v10 = v4[5];
        v24 = v4[6];
        if (v10 != v24)
        {
          v11 = 0;
          do
          {
            v25 = v10;
            v13 = *(_QWORD *)(v10 + 8);
            v12 = *(_QWORD *)(v10 + 16);
            v26 = v12;
            while (v13 != v12)
            {
              v14 = a1[8];
              v27 = v13;
              v15 = (*(_QWORD *)(v13 + 8) - v14) >> 3;
              v16 = *(_QWORD *)(v13 + 16) - v14;
              if (v15 < v16 >> 3)
              {
                v28 = v16 >> 3;
                do
                {
                  v17 = *(_QWORD *)(a1[11] + 8 * v15);
                  if (v17 != -1)
                  {
                    if (!v6)
                      v6 = objc_opt_new(NSMutableIndexSet);
                    do
                    {
                      if ((-[NSMutableIndexSet containsIndex:](v6, "containsIndex:", v17) & 1) == 0)
                      {
                        v18 = a1[14] + 152 * v17;
                        *(_QWORD *)v18 = -1;
                        *(_OWORD *)(v18 + 8) = 0u;
                        *(_OWORD *)(v18 + 24) = 0u;
                        *(_OWORD *)(v18 + 40) = 0u;
                        -[NSMutableIndexSet addIndex:](v6, "addIndex:", v17);
                      }
                      v19 = a1[14];
                      sub_665AC((_QWORD *)(v19 + 152 * v17), v7, *v4, v4[1], v11, v4[2], v4[3], 1uLL);
                      v17 = *(_QWORD *)(v19 + 152 * v17 + 128);
                    }
                    while (v17 != -1);
                  }
                  ++v15;
                }
                while (v15 != v28);
              }
              v12 = v26;
              v13 = v27 + 96;
            }
            ++v11;
            v10 = v25 + 64;
          }
          while (v25 + 64 != v24);
        }
        ++v7;
        v4 += 12;
        v8 = v22;
        v9 = v23;
      }
      while (v4 != a3);
    }
    v33[0] = _NSConcreteStackBlock;
    v33[1] = 3221225472;
    v33[2] = sub_CCEA0;
    v33[3] = &unk_23F1C8;
    v33[4] = a1;
    v34 = *a4;
    v35 = *((_QWORD *)a4 + 2);
    v36 = v9;
    -[NSMutableIndexSet enumerateRangesUsingBlock:](v6, "enumerateRangesUsingBlock:", v33);
    v29[0] = _NSConcreteStackBlock;
    v29[1] = 3221225472;
    v29[2] = sub_CCF5C;
    v29[3] = &unk_23F1C8;
    v29[4] = a1;
    v30 = *a4;
    v31 = *((_QWORD *)a4 + 2);
    v32 = v9;
    -[NSMutableIndexSet enumerateRangesWithOptions:usingBlock:](v6, "enumerateRangesWithOptions:usingBlock:", 2, v29);
    if (v9 != ptr)
      free(v9);

  }
}

void sub_CCB24(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_CCB48(_QWORD *a1, uint64_t *size, uint64_t *a3, __int128 *a4)
{
  uint64_t *v4;
  NSMutableIndexSet *v6;
  unint64_t v7;
  unint64_t v8;
  _OWORD *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v22;
  _OWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD v29[5];
  __int128 v30;
  uint64_t v31;
  _OWORD *v32;
  _QWORD v33[5];
  __int128 v34;
  uint64_t v35;
  _OWORD *v36;
  _OWORD ptr[32];

  if (a1[14] != a1[15])
  {
    v4 = size;
    memset(ptr, 0, sizeof(ptr));
    if (size == a3)
    {
      v6 = 0;
      v9 = ptr;
    }
    else
    {
      v6 = 0;
      v7 = 0;
      v8 = 64;
      v9 = ptr;
      do
      {
        if (v7 >= v8)
        {
          v8 += 64;
          if (v9 == ptr)
          {
            v9 = malloc_type_malloc(8 * v8, 0x2004093837F09uLL);
            memcpy(v9, ptr, 8 * v7);
          }
          else
          {
            v9 = malloc_type_realloc(v9, 8 * v8, 0x2004093837F09uLL);
          }
        }
        v22 = v8;
        v23 = v9;
        *((_QWORD *)v9 + v7) = v4;
        v10 = v4[5];
        v24 = v4[6];
        if (v10 != v24)
        {
          v11 = 0;
          do
          {
            v25 = v10;
            v13 = *(_QWORD *)(v10 + 8);
            v12 = *(_QWORD *)(v10 + 16);
            v26 = v12;
            while (v13 != v12)
            {
              v14 = a1[8];
              v27 = v13;
              v15 = (*(_QWORD *)(v13 + 8) - v14) >> 3;
              v16 = *(_QWORD *)(v13 + 16) - v14;
              if (v15 < v16 >> 3)
              {
                v28 = v16 >> 3;
                do
                {
                  v17 = *(_QWORD *)(a1[11] + 8 * v15);
                  if (v17 != -1)
                  {
                    if (!v6)
                      v6 = objc_opt_new(NSMutableIndexSet);
                    do
                    {
                      if ((-[NSMutableIndexSet containsIndex:](v6, "containsIndex:", v17) & 1) == 0)
                      {
                        v18 = a1[14] + 152 * v17;
                        *(_QWORD *)v18 = -1;
                        *(_OWORD *)(v18 + 8) = 0u;
                        *(_OWORD *)(v18 + 24) = 0u;
                        *(_OWORD *)(v18 + 40) = 0u;
                        -[NSMutableIndexSet addIndex:](v6, "addIndex:", v17);
                      }
                      v19 = a1[14];
                      sub_665AC((_QWORD *)(v19 + 152 * v17), v7, *v4, v4[1], v11, v4[2], v4[3], 1uLL);
                      v17 = *(_QWORD *)(v19 + 152 * v17 + 128);
                    }
                    while (v17 != -1);
                  }
                  ++v15;
                }
                while (v15 != v28);
              }
              v12 = v26;
              v13 = v27 + 96;
            }
            ++v11;
            v10 = v25 + 64;
          }
          while (v25 + 64 != v24);
        }
        ++v7;
        v4 += 12;
        v8 = v22;
        v9 = v23;
      }
      while (v4 != a3);
    }
    v33[0] = _NSConcreteStackBlock;
    v33[1] = 3221225472;
    v33[2] = sub_CD014;
    v33[3] = &unk_23F1C8;
    v33[4] = a1;
    v34 = *a4;
    v35 = *((_QWORD *)a4 + 2);
    v36 = v9;
    -[NSMutableIndexSet enumerateRangesUsingBlock:](v6, "enumerateRangesUsingBlock:", v33);
    v29[0] = _NSConcreteStackBlock;
    v29[1] = 3221225472;
    v29[2] = sub_CD0D0;
    v29[3] = &unk_23F1C8;
    v29[4] = a1;
    v30 = *a4;
    v31 = *((_QWORD *)a4 + 2);
    v32 = v9;
    -[NSMutableIndexSet enumerateRangesWithOptions:usingBlock:](v6, "enumerateRangesWithOptions:usingBlock:", 2, v29);
    if (v9 != ptr)
      free(v9);

  }
}

void sub_CCE7C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

_QWORD *sub_CCEA0(_QWORD *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double *v9;
  double v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  CGFloat *p_y;
  double v16;
  double v17;
  const CGPoint *v18;
  double v19;
  double x;

  if (a3)
  {
    v3 = a3;
    v4 = result;
    v5 = result[4];
    v6 = 152 * a2;
    do
    {
      v7 = *(_QWORD *)(v5 + 112);
      v8 = v7 + v6;
      v9 = (double *)v4[7];
      v10 = *(double *)(*(_QWORD *)v4[6] + 8 * *(_QWORD *)(v7 + v6 + 24));
      v11 = *(void **)(v7 + v6 + 120);
      v12 = *(_QWORD *)(v7 + v6 + 128);
      v13 = v7 + 152 * v12;
      v14 = v12 == -1;
      p_y = &CGPointZero.y;
      if (!v14)
        p_y = (CGFloat *)(v13 + 144);
      v16 = *v9 + 0.0;
      v17 = v10 + v9[1];
      v18 = (const CGPoint *)(v13 + 136);
      if (v14)
        v18 = &CGPointZero;
      v19 = *p_y;
      x = v18->x;
      *(double *)(v8 + 136) = v16;
      *(double *)(v8 + 144) = v17;
      result = objc_msgSend(v11, "setComputedOrigin:", v16 - x, v17 - v19);
      v6 += 152;
      --v3;
    }
    while (v3);
  }
  return result;
}

void sub_CCF5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double v8;
  double v9;
  void *v10;

  if (a3)
  {
    v3 = a3;
    v5 = *(_QWORD *)(a1 + 32);
    v6 = 152 * (a2 + a3);
    do
    {
      v7 = *(_QWORD *)(v5 + 112) + v6;
      v8 = *(double *)(*(_QWORD *)(a1 + 40) + 8);
      v9 = *(double *)(**(_QWORD **)(a1 + 48) + 8 * (*(_QWORD *)(v7 - 104) + *(_QWORD *)(v7 - 128)))
         - *(double *)(**(_QWORD **)(a1 + 48) + 8 * *(_QWORD *)(v7 - 128));
      v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(v7 - 32), "controller"));
      objc_msgSend(v10, "validateGroupedContainingLayout:withSize:", *(_QWORD *)(v7 - 32), v8, v9);

      v6 -= 152;
      --v3;
    }
    while (v3);
  }
}

void sub_CD004(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

_QWORD *sub_CD014(_QWORD *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double *v9;
  double v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  CGFloat *p_y;
  double v16;
  double v17;
  const CGPoint *v18;
  double v19;
  double x;

  if (a3)
  {
    v3 = a3;
    v4 = result;
    v5 = result[4];
    v6 = 152 * a2;
    do
    {
      v7 = *(_QWORD *)(v5 + 112);
      v8 = v7 + v6;
      v9 = (double *)v4[7];
      v10 = *(double *)(*(_QWORD *)v4[6] + 8 * *(_QWORD *)(v7 + v6 + 24));
      v11 = *(void **)(v7 + v6 + 120);
      v12 = *(_QWORD *)(v7 + v6 + 128);
      v13 = v7 + 152 * v12;
      v14 = v12 == -1;
      p_y = &CGPointZero.y;
      if (!v14)
        p_y = (CGFloat *)(v13 + 144);
      v16 = *v9 + 0.0;
      v17 = v10 + v9[1];
      v18 = (const CGPoint *)(v13 + 136);
      if (v14)
        v18 = &CGPointZero;
      v19 = *p_y;
      x = v18->x;
      *(double *)(v8 + 136) = v16;
      *(double *)(v8 + 144) = v17;
      result = objc_msgSend(v11, "setComputedOrigin:", v16 - x, v17 - v19);
      v6 += 152;
      --v3;
    }
    while (v3);
  }
  return result;
}

void sub_CD0D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double v8;
  double v9;
  void *v10;

  if (a3)
  {
    v3 = a3;
    v5 = *(_QWORD *)(a1 + 32);
    v6 = 152 * (a2 + a3);
    do
    {
      v7 = *(_QWORD *)(v5 + 112) + v6;
      v8 = *(double *)(*(_QWORD *)(a1 + 40) + 8);
      v9 = *(double *)(**(_QWORD **)(a1 + 48) + 8 * (*(_QWORD *)(v7 - 104) + *(_QWORD *)(v7 - 128)))
         - *(double *)(**(_QWORD **)(a1 + 48) + 8 * *(_QWORD *)(v7 - 128));
      v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(v7 - 32), "controller"));
      objc_msgSend(v10, "validateGroupedContainingLayout:withSize:", *(_QWORD *)(v7 - 32), v8, v9);

      v6 -= 152;
      --v3;
    }
    while (v3);
  }
}

void sub_CD178(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

double sub_CD188(uint64_t a1, uint64_t a2, uint64_t a3, double a4, double a5, double a6)
{
  uint64_t v10;
  unint64_t v12;
  double v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t *v16;
  unint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  double v29;
  double *v30;
  double v31;
  unint64_t v32;
  double v33;
  unint64_t v34;
  _QWORD *v35;
  unint64_t v36;
  uint64_t *v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t *v44;
  unint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  double v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t *v52;
  uint64_t v53;
  double v54;
  double v55;
  double v56;
  uint64_t v57;
  uint64_t v58;
  double v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  double v64;
  double v65;
  double v66;
  uint64_t v67;
  double v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  const CGPoint *v73;
  CGFloat *p_y;
  BOOL v75;
  const CGPoint *v76;
  BOOL v77;
  BOOL v78;
  double v79;
  double v80;
  double v81;
  double v82;
  double v83;
  id v84;
  void *v85;
  _QWORD *v86;
  double v87;
  uint64_t v89;
  uint64_t *v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t *v93;
  unint64_t *v94;
  unint64_t v95;
  char v96;
  unint64_t v97;
  void *v98;
  void *v99;
  unint64_t v100;
  double v101;
  void *__p;
  void *v103;
  uint64_t v104;

  v10 = a2;
  if (*(_QWORD *)(a2 + 16) <= 1uLL)
    v12 = 1;
  else
    v12 = *(_QWORD *)(a2 + 16);
  v13 = *(double *)(a2 + 88);
  sub_91510(&v97, 2 * v12);
  v14 = 0;
  v100 = v12;
  v101 = v13;
  v103 = 0;
  v104 = 0;
  __p = 0;
  v16 = *(uint64_t **)a1;
  v15 = *(_QWORD *)(a1 + 8);
  v17 = *(_QWORD *)(a1 + 16);
  v18 = v98;
  v19 = v97 - 1;
  v20 = *(_QWORD *)(a1 + 32);
LABEL_5:
  while (1)
  {
    v21 = v17;
    v22 = v15;
    if (v15 == v20 && v17 == *(_QWORD *)(a1 + 40))
      break;
    v23 = *v16;
    v24 = *(_QWORD *)(*v16 + 88 * v15);
    if (*(_QWORD *)(v24 + 96 * v21 + 16))
    {
      v25 = *(_QWORD *)(v24 + 96 * v21 + 24);
      if (v25)
      {
        v26 = v24 + 96 * v21;
        v27 = *(_QWORD *)(v26 + 8);
        v28 = v27 + v25;
        if (v14 <= v27 + v25)
          v14 = v27 + v25;
        v29 = *(double *)(v26 + 80);
        v30 = (double *)&v18[2 * v28 + ~((((2 * v27) | 1uLL) * 2 * v27) >> 1) + v19 * 2 * v27];
        if (*(v30 - 1) >= v29)
          v29 = *(v30 - 1);
        *(v30 - 1) = v29;
        if (v27)
        {
          v31 = v101;
          v32 = 2 * v27 + ~((unint64_t)((2 * v27 - 1) * 2 * v27) >> 1) + v19 * (2 * v27 - 1);
          if (*(double *)&v18[v32] >= v101)
            v31 = *(double *)&v18[v32];
          *(double *)&v18[v32] = v31;
        }
        if (v12 > v28)
        {
          v33 = v101;
          v34 = ((2 * v28) | 1) + v19 * 2 * v28 + ~((((2 * v28) | 1) * 2 * v28) >> 1);
          if (*(double *)&v18[v34] >= v101)
            v33 = *(double *)&v18[v34];
          *(double *)&v18[v34] = v33;
        }
      }
    }
    v17 = 0;
    v15 = 0x2E8BA2E8BA2E8BA3 * ((v16[1] - v23) >> 3);
    if (v22 < v15)
    {
      v17 = v21 + 1;
      v35 = (_QWORD *)(v23 + 88 * v22 + 8);
      while (v17 >= 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*v35 - *(v35 - 1)) >> 5))
      {
        v17 = 0;
        ++v22;
        v35 += 11;
        if (v15 == v22)
          goto LABEL_5;
      }
      v15 = v22;
    }
  }
  sub_CD8F4(&v97);
  v37 = *(uint64_t **)a1;
  v36 = *(_QWORD *)(a1 + 8);
  v38 = *(_QWORD *)(a1 + 16);
  v89 = a3;
  v90 = *(uint64_t **)a1;
  v91 = a1;
  v92 = v10;
LABEL_28:
  while (1)
  {
    v39 = v36;
    v40 = v38;
    if (v36 == *(_QWORD *)(a1 + 32) && v38 == *(_QWORD *)(a1 + 40))
      break;
    v41 = *(_QWORD *)(*v37 + 88 * v36);
    v42 = v41 + 96 * v38;
    v45 = *(_QWORD *)(v42 + 16);
    v44 = (unint64_t *)(v42 + 16);
    v43 = v45;
    if (v45)
    {
      v46 = v41 + 96 * v38;
      v48 = *(_QWORD *)(v46 + 24);
      v47 = (_QWORD *)(v46 + 24);
      if (v48)
      {
        v93 = v44;
        v94 = (unint64_t *)(v41 + 96 * v38);
        v95 = v38;
        v49 = sub_5F85C(v10, *v94, v43);
        v50 = v41;
        v51 = v41 + 96 * v95;
        v53 = *(_QWORD *)(v51 + 8);
        v52 = (uint64_t *)(v51 + 8);
        v54 = *((double *)__p + 2 * *v47 + 2 * v53 - 1) - *((double *)__p + 2 * v53);
        sub_658DC((uint64_t)&v96, 0, v52[5], v52[6], v49);
        v56 = v55;
        v57 = v50 + 96 * v95;
        *(_QWORD *)(v57 + 72) = v58;
        *(double *)(v57 + 80) = v55;
        sub_66124(v92, *v94, *v93, 1);
        v60 = v50;
        v61 = *v52;
        v62 = v52[5];
        v63 = v52[6];
        if (v62 == v63)
        {
          v10 = v92;
        }
        else
        {
          v64 = *((double *)__p + 2 * v61) + (v54 - v56) * a4;
          v65 = a5 + v59;
          v66 = a6 + v64;
          v67 = *(_QWORD *)(v91 + 72);
          v68 = 0.0;
          do
          {
            *(double *)(v62 + 32) = v65;
            *(double *)(v62 + 40) = v66 + v68;
            v69 = *(_QWORD *)(v62 + 8);
            v70 = *(_QWORD *)(v62 + 16);
            while (v69 != v70)
            {
              v71 = *(_QWORD *)(v69 + 56);
              v72 = *(_QWORD *)(v67 + 112) + 152 * v71;
              v73 = (const CGPoint *)(v72 + 136);
              p_y = (CGFloat *)(v72 + 144);
              v75 = v71 == -1;
              if (v71 == -1)
                v76 = &CGPointZero;
              else
                v76 = v73;
              if (v75)
                p_y = &CGPointZero.y;
              sub_66990((double *)(v69 + 8), v65 - v76->x + *(double *)(v69 + 72), v66 + v68 - *p_y + *(double *)(v69 + 64));
              v69 += 96;
            }
            v68 = v68 + *(double *)(v62 + 56);
            v62 += 64;
          }
          while (v62 != v63);
          v61 = *v52;
          v10 = v92;
        }
        v37 = v90;
        if (*(_QWORD *)(v89 + 16))
          v77 = v61 == 0;
        else
          v77 = 1;
        v78 = !v77 && *v93 == 1;
        a1 = v91;
        v40 = v95;
        if (v78)
        {
          sub_66124(v10, *v94, 1uLL, 1);
          v80 = v79;
          v81 = *((double *)__p + 2 * *v52);
          v82 = *(double *)(v10 + 88);
          v83 = *(double *)(v89 + 8);
          v84 = *(id *)(v60 + 96 * v95 + 32);
          v85 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v84, "identifier"));
          sub_66A0C((_QWORD *)v89, v85, a5 + v80, a6 + v81 - v82 * 0.5 - v83 * 0.5);

          v37 = v90;
          v40 = v95;
        }
      }
    }
    v38 = 0;
    v36 = 0x2E8BA2E8BA2E8BA3 * ((v37[1] - *v37) >> 3);
    if (v39 < v36)
    {
      v38 = v40 + 1;
      v86 = (_QWORD *)(*v37 + 88 * v39 + 8);
      while (v38 >= 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*v86 - *(v86 - 1)) >> 5))
      {
        v38 = 0;
        ++v39;
        v86 += 11;
        if (v36 == v39)
          goto LABEL_28;
      }
      v36 = v39;
    }
  }
  v87 = sub_5FD14(v10);
  if (__p)
  {
    v103 = __p;
    operator delete(__p);
  }
  if (v98)
  {
    v99 = v98;
    operator delete(v98);
  }
  return v87;
}

void sub_CD728(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  sub_CD940((uint64_t *)va);
  _Unwind_Resume(a1);
}

double sub_CD76C(uint64_t a1, uint64_t a2, double a3, double a4, double a5)
{
  double v9;
  char *v10;
  char *v11;
  double v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  double v16;
  char *v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  __int128 v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;
  __int128 v26;
  uint64_t v27;
  __int128 v28;
  uint64_t v29;
  __int128 v30;
  _BYTE v31[32];
  char *v32;
  char *v33;

  v9 = sub_5FD14(a2);
  sub_CD980(a1, &v32);
  v10 = v32;
  v11 = v33;
  if (v32 == v33)
  {
    if (!v32)
      return v9;
    goto LABEL_10;
  }
  v12 = 0.0;
  do
  {
    v13 = *((_OWORD *)v10 + 2);
    v14 = *(_OWORD *)v10;
    *(_OWORD *)v31 = *((_OWORD *)v10 + 1);
    *(_OWORD *)&v31[16] = v13;
    v30 = v14;
    v15 = *((_QWORD *)v10 + 2);
    v28 = v14;
    v29 = v15;
    v26 = *(_OWORD *)&v31[8];
    v27 = *((_QWORD *)&v13 + 1);
    v16 = sub_CDD44(a1, (uint64_t)&v28, (uint64_t)&v26, a2);
    if (v12 < v16)
      v12 = v16;
    v10 += 48;
  }
  while (v10 != v11);
  v17 = v32;
  v10 = v33;
  if (v32 != v33)
  {
    do
    {
      v18 = *((_OWORD *)v17 + 2);
      v19 = *(_OWORD *)v17;
      *(_OWORD *)v31 = *((_OWORD *)v17 + 1);
      *(_OWORD *)&v31[16] = v18;
      v30 = v19;
      v20 = *((_QWORD *)v17 + 2);
      v24 = v19;
      v25 = v20;
      v22 = *(_OWORD *)&v31[8];
      v23 = *((_QWORD *)&v18 + 1);
      sub_CDFA0(a1, (uint64_t)&v24, (uint64_t)&v22, a2, v12, a4, a5);
      v17 += 48;
    }
    while (v17 != v10);
    v10 = v32;
  }
  if (v10)
  {
LABEL_10:
    v33 = v10;
    operator delete(v10);
  }
  return v9;
}

void sub_CD8D4(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void *v3;

  v3 = *(void **)(v1 - 104);
  if (v3)
  {
    *(_QWORD *)(v1 - 96) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

double sub_CD8F4(unint64_t *a1)
{
  void *v2;
  double result;
  __int128 v4;
  unint64_t v5;

  sub_90BC4(a1, &v4);
  v2 = (void *)a1[6];
  if (v2)
  {
    a1[7] = (unint64_t)v2;
    operator delete(v2);
  }
  result = *(double *)&v4;
  *((_OWORD *)a1 + 3) = v4;
  a1[8] = v5;
  return result;
}

_QWORD *sub_CD940(_QWORD *a1)
{
  void *v2;
  void *v3;

  v2 = (void *)a1[6];
  if (v2)
  {
    a1[7] = v2;
    operator delete(v2);
  }
  v3 = (void *)a1[1];
  if (v3)
  {
    a1[2] = v3;
    operator delete(v3);
  }
  return a1;
}

void sub_CD980(uint64_t a1@<X0>, char **a2@<X8>)
{
  char *v3;
  unint64_t v4;
  _QWORD *v5;
  unint64_t v6;
  uint64_t *v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t *v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  char *v19;
  char *v20;
  char *v21;
  char *v22;
  char *v23;
  __int128 v24;
  __int128 v25;
  _QWORD *v26;
  char *v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  char *v31;
  char *v32;
  char *v33;
  char *v34;
  char *v35;
  __int128 v36;
  __int128 v37;
  _QWORD *v38;

  v3 = 0;
  v4 = 0;
  *a2 = 0;
  a2[1] = 0;
  a2[2] = 0;
  v5 = a2 + 2;
  v7 = *(uint64_t **)a1;
  v6 = *(_QWORD *)(a1 + 8);
  v8 = *(_QWORD *)(a1 + 16);
  v9 = v8;
  v10 = v6;
  v38 = a2 + 2;
LABEL_2:
  while (1)
  {
    v11 = v8;
    v12 = v6;
    if (v6 == *(_QWORD *)(a1 + 32) && v8 == *(_QWORD *)(a1 + 40))
      break;
    v13 = *v7;
    v14 = (unint64_t *)(*(_QWORD *)(*v7 + 88 * v6) + 96 * v8);
    v15 = v14[3] + *v14;
    if (v10 != v6 || v9 != v11)
    {
      if (*v14 < v4)
      {
        if (v15 < v4)
          v4 = v14[3] + *v14;
        goto LABEL_29;
      }
      if ((unint64_t)v3 >= *v5)
      {
        v16 = 0xAAAAAAAAAAAAAAABLL * ((v3 - *a2) >> 4);
        v17 = v16 + 1;
        if (v16 + 1 > 0x555555555555555)
          sub_6F9C();
        if (0x5555555555555556 * ((uint64_t)(*v5 - (_QWORD)*a2) >> 4) > v17)
          v17 = 0x5555555555555556 * ((uint64_t)(*v5 - (_QWORD)*a2) >> 4);
        if (0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*v5 - (_QWORD)*a2) >> 4) >= 0x2AAAAAAAAAAAAAALL)
          v18 = 0x555555555555555;
        else
          v18 = v17;
        if (v18)
          v19 = (char *)sub_7024((uint64_t)v5, v18);
        else
          v19 = 0;
        v20 = &v19[48 * v16];
        *(_QWORD *)v20 = v7;
        *((_QWORD *)v20 + 1) = v10;
        *((_QWORD *)v20 + 2) = v9;
        *((_QWORD *)v20 + 3) = v7;
        *((_QWORD *)v20 + 4) = v12;
        *((_QWORD *)v20 + 5) = v11;
        v22 = *a2;
        v21 = a2[1];
        v23 = v20;
        if (v21 != *a2)
        {
          do
          {
            v24 = *((_OWORD *)v21 - 3);
            v25 = *((_OWORD *)v21 - 1);
            *((_OWORD *)v23 - 2) = *((_OWORD *)v21 - 2);
            *((_OWORD *)v23 - 1) = v25;
            *((_OWORD *)v23 - 3) = v24;
            v23 -= 48;
            v21 -= 48;
          }
          while (v21 != v22);
          v21 = v22;
        }
        v3 = v20 + 48;
        *a2 = v23;
        a2[1] = v20 + 48;
        a2[2] = &v19[48 * v18];
        if (v21)
          operator delete(v21);
        v5 = v38;
      }
      else
      {
        *(_QWORD *)v3 = v7;
        *((_QWORD *)v3 + 1) = v10;
        *((_QWORD *)v3 + 2) = v9;
        *((_QWORD *)v3 + 3) = v7;
        *((_QWORD *)v3 + 4) = v6;
        *((_QWORD *)v3 + 5) = v11;
        v3 += 48;
      }
      a2[1] = v3;
      v13 = *v7;
    }
    v9 = v11;
    v10 = v12;
    v4 = v15;
LABEL_29:
    v8 = 0;
    v6 = 0x2E8BA2E8BA2E8BA3 * ((v7[1] - v13) >> 3);
    if (v12 < v6)
    {
      v8 = v11 + 1;
      v26 = (_QWORD *)(v13 + 88 * v12 + 8);
      while (v8 >= 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*v26 - *(v26 - 1)) >> 5))
      {
        v8 = 0;
        ++v12;
        v26 += 11;
        if (v6 == v12)
          goto LABEL_2;
      }
      v6 = v12;
    }
  }
  if (v10 != v6 || v9 != v8)
  {
    if ((unint64_t)v3 >= *v5)
    {
      v28 = 0xAAAAAAAAAAAAAAABLL * ((v3 - *a2) >> 4);
      if (v28 + 1 > 0x555555555555555)
        sub_6F9C();
      v29 = 0x5555555555555556 * ((uint64_t)(*v5 - (_QWORD)*a2) >> 4);
      if (v29 <= v28 + 1)
        v29 = v28 + 1;
      if (0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*v5 - (_QWORD)*a2) >> 4) >= 0x2AAAAAAAAAAAAAALL)
        v30 = 0x555555555555555;
      else
        v30 = v29;
      if (v30)
        v31 = (char *)sub_7024((uint64_t)v5, v30);
      else
        v31 = 0;
      v32 = &v31[48 * v28];
      v33 = &v31[48 * v30];
      *(_QWORD *)v32 = v7;
      *((_QWORD *)v32 + 1) = v10;
      *((_QWORD *)v32 + 2) = v9;
      *((_QWORD *)v32 + 3) = v7;
      *((_QWORD *)v32 + 4) = v12;
      *((_QWORD *)v32 + 5) = v11;
      v27 = v32 + 48;
      v35 = *a2;
      v34 = a2[1];
      if (v34 != *a2)
      {
        do
        {
          v36 = *((_OWORD *)v34 - 3);
          v37 = *((_OWORD *)v34 - 1);
          *((_OWORD *)v32 - 2) = *((_OWORD *)v34 - 2);
          *((_OWORD *)v32 - 1) = v37;
          *((_OWORD *)v32 - 3) = v36;
          v32 -= 48;
          v34 -= 48;
        }
        while (v34 != v35);
        v34 = v35;
      }
      *a2 = v32;
      a2[1] = v27;
      a2[2] = v33;
      if (v34)
        operator delete(v34);
    }
    else
    {
      *(_QWORD *)v3 = v7;
      *((_QWORD *)v3 + 1) = v10;
      *((_QWORD *)v3 + 2) = v9;
      *((_QWORD *)v3 + 3) = v7;
      v27 = v3 + 48;
      *((_QWORD *)v3 + 4) = v6;
      *((_QWORD *)v3 + 5) = v8;
    }
    a2[1] = v27;
  }
}

void sub_CDD18(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  void *v11;

  v11 = *(void **)a10;
  if (*(_QWORD *)a10)
  {
    *(_QWORD *)(a10 + 8) = v11;
    operator delete(v11);
  }
  _Unwind_Resume(exception_object);
}

double sub_CDD44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v6;
  double v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t *v10;
  unint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  double v23;
  double *v24;
  double v25;
  unint64_t v26;
  double v27;
  unint64_t v28;
  _QWORD *v29;
  void *v30;
  double v31;
  unint64_t v33;
  void *v34;
  void *v35;
  unint64_t v36;
  double v37;
  void *__p;
  void *v39;
  uint64_t v40;

  if (*(_QWORD *)(a4 + 16) <= 1uLL)
    v6 = 1;
  else
    v6 = *(_QWORD *)(a4 + 16);
  v7 = *(double *)(a4 + 88);
  sub_91510(&v33, 2 * v6);
  v8 = 0;
  v36 = v6;
  v37 = v7;
  v39 = 0;
  v40 = 0;
  __p = 0;
  v10 = *(uint64_t **)a2;
  v9 = *(_QWORD *)(a2 + 8);
  v11 = *(_QWORD *)(a2 + 16);
  v12 = v34;
  v13 = v33 - 1;
  v14 = *(_QWORD *)(a3 + 8);
LABEL_5:
  while (1)
  {
    v15 = v11;
    v16 = v9;
    if (v9 == v14 && v11 == *(_QWORD *)(a3 + 16))
      break;
    v17 = *v10;
    v18 = *(_QWORD *)(*v10 + 88 * v9);
    if (*(_QWORD *)(v18 + 96 * v15 + 16))
    {
      v19 = *(_QWORD *)(v18 + 96 * v15 + 24);
      if (v19)
      {
        v20 = v18 + 96 * v15;
        v21 = *(_QWORD *)(v20 + 8);
        v22 = v21 + v19;
        if (v8 <= v21 + v19)
          v8 = v21 + v19;
        v23 = *(double *)(v20 + 80);
        v24 = (double *)&v12[2 * v22 + ~((((2 * v21) | 1uLL) * 2 * v21) >> 1) + v13 * 2 * v21];
        if (*(v24 - 1) >= v23)
          v23 = *(v24 - 1);
        *(v24 - 1) = v23;
        if (v21)
        {
          v25 = v37;
          v26 = 2 * v21 + ~((unint64_t)((2 * v21 - 1) * 2 * v21) >> 1) + v13 * (2 * v21 - 1);
          if (*(double *)&v12[v26] >= v37)
            v25 = *(double *)&v12[v26];
          *(double *)&v12[v26] = v25;
        }
        if (v6 > v22)
        {
          v27 = v37;
          v28 = ((2 * v22) | 1) + v13 * 2 * v22 + ~((((2 * v22) | 1) * 2 * v22) >> 1);
          if (*(double *)&v12[v28] >= v37)
            v27 = *(double *)&v12[v28];
          *(double *)&v12[v28] = v27;
        }
      }
    }
    v11 = 0;
    v9 = 0x2E8BA2E8BA2E8BA3 * ((v10[1] - v17) >> 3);
    if (v16 < v9)
    {
      v11 = v15 + 1;
      v29 = (_QWORD *)(v17 + 88 * v16 + 8);
      while (v11 >= 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*v29 - *(v29 - 1)) >> 5))
      {
        v11 = 0;
        ++v16;
        v29 += 11;
        if (v9 == v16)
          goto LABEL_5;
      }
      v9 = v16;
    }
  }
  sub_CD8F4(&v33);
  if (v8)
  {
    v30 = __p;
    v31 = *((double *)__p + 2 * v8 - 1);
  }
  else
  {
    v30 = __p;
    v31 = 0.0;
    if (!__p)
      goto LABEL_31;
  }
  v39 = v30;
  operator delete(v30);
LABEL_31:
  if (v34)
  {
    v35 = v34;
    operator delete(v34);
  }
  return v31;
}

void sub_CDF8C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_CD940((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_CDFA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5, double a6, double a7)
{
  unint64_t v12;
  double v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t *v16;
  unint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  double v29;
  double *v30;
  double v31;
  unint64_t v32;
  double v33;
  unint64_t v34;
  _QWORD *v35;
  double v36;
  unint64_t v37;
  uint64_t *v38;
  double v39;
  unint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  BOOL v47;
  double v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  double v52;
  double v53;
  uint64_t v54;
  double v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  const CGPoint *v60;
  CGFloat *p_y;
  BOOL v62;
  const CGPoint *v63;
  _QWORD *v64;
  uint64_t *v67;
  uint64_t v68;
  unint64_t v69;
  void *v70;
  void *v71;
  unint64_t v72;
  double v73;
  void *__p;
  void *v75;
  uint64_t v76;

  if (*(_QWORD *)(a4 + 16) <= 1uLL)
    v12 = 1;
  else
    v12 = *(_QWORD *)(a4 + 16);
  v13 = *(double *)(a4 + 88);
  sub_91510(&v69, 2 * v12);
  v14 = 0;
  v72 = v12;
  v73 = v13;
  v75 = 0;
  v76 = 0;
  __p = 0;
  v16 = *(uint64_t **)a2;
  v15 = *(_QWORD *)(a2 + 8);
  v17 = *(_QWORD *)(a2 + 16);
  v18 = v70;
  v19 = v69 - 1;
  v20 = *(_QWORD *)(a3 + 8);
LABEL_5:
  while (1)
  {
    v21 = v17;
    v22 = v15;
    if (v15 == v20 && v17 == *(_QWORD *)(a3 + 16))
      break;
    v23 = *v16;
    v24 = *(_QWORD *)(*v16 + 88 * v15);
    if (*(_QWORD *)(v24 + 96 * v21 + 16))
    {
      v25 = *(_QWORD *)(v24 + 96 * v21 + 24);
      if (v25)
      {
        v26 = v24 + 96 * v21;
        v27 = *(_QWORD *)(v26 + 8);
        v28 = v27 + v25;
        if (v14 <= v27 + v25)
          v14 = v27 + v25;
        v29 = *(double *)(v26 + 80);
        v30 = (double *)&v18[2 * v28 + ~((((2 * v27) | 1uLL) * 2 * v27) >> 1) + v19 * 2 * v27];
        if (*(v30 - 1) >= v29)
          v29 = *(v30 - 1);
        *(v30 - 1) = v29;
        if (v27)
        {
          v31 = v73;
          v32 = 2 * v27 + ~((unint64_t)((2 * v27 - 1) * 2 * v27) >> 1) + v19 * (2 * v27 - 1);
          if (*(double *)&v18[v32] >= v73)
            v31 = *(double *)&v18[v32];
          *(double *)&v18[v32] = v31;
        }
        if (v12 > v28)
        {
          v33 = v73;
          v34 = ((2 * v28) | 1) + v19 * 2 * v28 + ~((((2 * v28) | 1) * 2 * v28) >> 1);
          if (*(double *)&v18[v34] >= v73)
            v33 = *(double *)&v18[v34];
          *(double *)&v18[v34] = v33;
        }
      }
    }
    v17 = 0;
    v15 = 0x2E8BA2E8BA2E8BA3 * ((v16[1] - v23) >> 3);
    if (v22 < v15)
    {
      v17 = v21 + 1;
      v35 = (_QWORD *)(v23 + 88 * v22 + 8);
      while (v17 >= 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*v35 - *(v35 - 1)) >> 5))
      {
        v17 = 0;
        ++v22;
        v35 += 11;
        if (v15 == v22)
          goto LABEL_5;
      }
      v15 = v22;
    }
  }
  sub_CD8F4(&v69);
  if (v14)
    v36 = *((double *)__p + 2 * v14 - 1);
  else
    v36 = 0.0;
  v38 = *(uint64_t **)a2;
  v37 = *(_QWORD *)(a2 + 8);
  v39 = a5 - v36;
  v40 = *(_QWORD *)(a2 + 16);
  v67 = *(uint64_t **)a2;
  v68 = a3;
LABEL_31:
  while (1)
  {
    v41 = v37;
    v42 = v40;
    if (v37 == *(_QWORD *)(a3 + 8) && v40 == *(_QWORD *)(a3 + 16))
      break;
    v43 = *(_QWORD *)(*v38 + 88 * v37);
    v44 = v43 + 96 * v40;
    v45 = *(_QWORD *)(v44 + 16);
    v46 = *(_QWORD *)(v44 + 24);
    if (v45)
      v47 = v46 == 0;
    else
      v47 = 1;
    if (!v47)
    {
      sub_66124(a4, *(_QWORD *)(v43 + 96 * v40), v45, 1);
      v49 = (_QWORD *)(v43 + 96 * v42);
      v51 = v49[6];
      v50 = v49[7];
      if (v51 != v50)
      {
        v52 = a6 + v48;
        v53 = a7 + v39 + *((double *)__p + 2 * v49[1]);
        v54 = *(_QWORD *)(a1 + 72);
        v55 = 0.0;
        do
        {
          *(double *)(v51 + 32) = v52;
          *(double *)(v51 + 40) = v53 + v55;
          v56 = *(_QWORD *)(v51 + 8);
          v57 = *(_QWORD *)(v51 + 16);
          while (v56 != v57)
          {
            v58 = *(_QWORD *)(v56 + 56);
            v59 = *(_QWORD *)(v54 + 112) + 152 * v58;
            v60 = (const CGPoint *)(v59 + 136);
            p_y = (CGFloat *)(v59 + 144);
            v62 = v58 == -1;
            if (v58 == -1)
              v63 = &CGPointZero;
            else
              v63 = v60;
            if (v62)
              p_y = &CGPointZero.y;
            sub_66990((double *)(v56 + 8), v52 - v63->x + *(double *)(v56 + 72), v53 + v55 - *p_y + *(double *)(v56 + 64));
            v56 += 96;
          }
          v55 = v55 + *(double *)(v51 + 56);
          v51 += 64;
        }
        while (v51 != v50);
      }
    }
    v40 = 0;
    v38 = v67;
    a3 = v68;
    v37 = 0x2E8BA2E8BA2E8BA3 * ((v67[1] - *v67) >> 3);
    if (v41 < v37)
    {
      v40 = v42 + 1;
      v64 = (_QWORD *)(*v67 + 88 * v41 + 8);
      while (v40 >= 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*v64 - *(v64 - 1)) >> 5))
      {
        v40 = 0;
        ++v41;
        v64 += 11;
        if (v37 == v41)
          goto LABEL_31;
      }
      v37 = v41;
    }
  }
  if (__p)
  {
    v75 = __p;
    operator delete(__p);
  }
  if (v70)
  {
    v71 = v70;
    operator delete(v70);
  }
}

void sub_CE3D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_CD940((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_CE620(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_CEB10(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, uint64_t a11, void *a12, void *a13, void *a14, void *a15, void *a16, void *a17, void *a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,void *a31)
{
  void *v31;
  void *v32;
  void *v33;

  _Unwind_Resume(a1);
}

void sub_CEBE8(uint64_t a1, void *a2)
{
  void *v3;
  id v4;

  v4 = a2;
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "submodel"));
  if (objc_msgSend(v3, "kind") == &dword_4)
    objc_msgSend(*(id *)(a1 + 32), "addObject:", v4);

}

void sub_CEC4C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_CED40(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_CEDBC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_CEF50(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_CF0F8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_CF450(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_CF5E4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_CF708(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_CF7E0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_CFB10(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_CFD20(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;

  v7 = v5;

  _Unwind_Resume(a1);
}

void sub_CFF50(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_D0144(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_D01F4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_D027C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_D03E4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_D04F8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_D0618(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_D073C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  v5 = v4;

  _Unwind_Resume(a1);
}

void sub_D0854(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_D08D4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  v4 = v3;

  _Unwind_Resume(a1);
}

void sub_D0BD4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, void *a10, void *a11, void *a12)
{
  void *v12;
  void *v13;

  _Unwind_Resume(a1);
}

void sub_D0F24(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, void *a10, void *a11, void *a12)
{
  void *v12;
  void *v13;

  _Unwind_Resume(a1);
}

void sub_D1060(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_D10F4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_D1148(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_D1298(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_D1484(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_D1674(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

uint64_t *sub_D18A8(uint64_t **a1, unint64_t *a2, uint64_t a3, uint64_t **a4)
{
  uint64_t *v6;
  uint64_t **v7;
  unint64_t v8;
  uint64_t **v9;
  unint64_t v10;
  uint64_t *v11;

  v7 = a1 + 1;
  v6 = a1[1];
  if (v6)
  {
    v8 = *a2;
    while (1)
    {
      while (1)
      {
        v9 = (uint64_t **)v6;
        v10 = v6[4];
        if (v8 >= v10)
          break;
        v6 = *v9;
        v7 = v9;
        if (!*v9)
          goto LABEL_10;
      }
      if (v10 >= v8)
        break;
      v6 = v9[1];
      if (!v6)
      {
        v7 = v9 + 1;
        goto LABEL_10;
      }
    }
  }
  else
  {
    v9 = a1 + 1;
LABEL_10:
    v11 = (uint64_t *)operator new(0x30uLL);
    v11[4] = **a4;
    v11[5] = 0;
    sub_99468(a1, (uint64_t)v9, v7, v11);
    return v11;
  }
  return (uint64_t *)v9;
}

uint64_t **sub_D1964(uint64_t **result, _QWORD *a2, _QWORD *a3)
{
  uint64_t **v5;
  uint64_t *v6;
  uint64_t *v7;
  uint64_t *v8;
  _QWORD *v9;
  _QWORD *v10;
  BOOL v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t **v14;
  uint64_t *v15;
  uint64_t *v16;

  v5 = result;
  if (result[2])
  {
    v6 = *result;
    v7 = result[1];
    *result = (uint64_t *)(result + 1);
    v7[2] = 0;
    result[1] = 0;
    result[2] = 0;
    if (v6[1])
      v8 = (uint64_t *)v6[1];
    else
      v8 = v6;
    v14 = result;
    v15 = v8;
    v16 = v8;
    if (v8)
    {
      v15 = sub_D1B38((uint64_t)v8);
      if (a2 != a3)
      {
        v9 = a2;
        do
        {
          v8[4] = v9[4];
          v8[5] = v9[5];
          sub_D1ACC(v5, v8);
          v8 = v15;
          v16 = v15;
          if (v15)
            v15 = sub_D1B38((uint64_t)v15);
          v10 = (_QWORD *)v9[1];
          if (v10)
          {
            do
            {
              a2 = v10;
              v10 = (_QWORD *)*v10;
            }
            while (v10);
          }
          else
          {
            do
            {
              a2 = (_QWORD *)v9[2];
              v11 = *a2 == (_QWORD)v9;
              v9 = a2;
            }
            while (!v11);
          }
          if (!v8)
            break;
          v9 = a2;
        }
        while (a2 != a3);
      }
    }
    result = (uint64_t **)sub_D1B8C((uint64_t)&v14);
  }
  if (a2 != a3)
  {
    do
    {
      result = (uint64_t **)sub_D1BE0(v5, (_OWORD *)a2 + 2);
      v12 = (_QWORD *)a2[1];
      if (v12)
      {
        do
        {
          v13 = v12;
          v12 = (_QWORD *)*v12;
        }
        while (v12);
      }
      else
      {
        do
        {
          v13 = (_QWORD *)a2[2];
          v11 = *v13 == (_QWORD)a2;
          a2 = v13;
        }
        while (!v11);
      }
      a2 = v13;
    }
    while (v13 != a3);
  }
  return result;
}

void sub_D1AB8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_D1B8C((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t *sub_D1ACC(uint64_t **a1, uint64_t *a2)
{
  uint64_t **v3;
  uint64_t *v4;
  uint64_t **v5;

  v3 = a1 + 1;
  v4 = a1[1];
  if (v4)
  {
    do
    {
      while (1)
      {
        v3 = (uint64_t **)v4;
        if (a2[4] >= (unint64_t)v4[4])
          break;
        v4 = (uint64_t *)*v4;
        v5 = v3;
        if (!*v3)
          goto LABEL_8;
      }
      v4 = (uint64_t *)v4[1];
    }
    while (v4);
    v5 = v3 + 1;
  }
  else
  {
    v5 = a1 + 1;
  }
LABEL_8:
  sub_99468(a1, (uint64_t)v3, v5, a2);
  return a2;
}

_QWORD *sub_D1B38(uint64_t a1)
{
  _QWORD *result;
  _QWORD *v3;
  _QWORD *v4;

  result = *(_QWORD **)(a1 + 16);
  if (result)
  {
    v3 = (_QWORD *)*result;
    if (*result == a1)
    {
      *result = 0;
      while (1)
      {
        v4 = (_QWORD *)result[1];
        if (!v4)
          break;
        do
        {
          result = v4;
          v4 = (_QWORD *)*v4;
        }
        while (v4);
      }
    }
    else
    {
      for (result[1] = 0; v3; v3 = (_QWORD *)result[1])
      {
        do
        {
          result = v3;
          v3 = (_QWORD *)*v3;
        }
        while (v3);
      }
    }
  }
  return result;
}

uint64_t sub_D1B8C(uint64_t a1)
{
  _QWORD *v2;
  _QWORD *v3;

  sub_997B8(*(_QWORD *)a1, *(_QWORD **)(a1 + 16));
  v2 = *(_QWORD **)(a1 + 8);
  if (v2)
  {
    v3 = (_QWORD *)v2[2];
    if (v3)
    {
      do
      {
        v2 = v3;
        v3 = (_QWORD *)v3[2];
      }
      while (v3);
      *(_QWORD *)(a1 + 8) = v2;
    }
    sub_997B8(*(_QWORD *)a1, v2);
  }
  return a1;
}

_OWORD *sub_D1BE0(uint64_t **a1, _OWORD *a2)
{
  _OWORD *v4;
  _OWORD *v5;
  uint64_t **v6;
  uint64_t *v7;
  uint64_t **v8;

  v4 = operator new(0x30uLL);
  v5 = v4;
  v4[2] = *a2;
  v6 = a1 + 1;
  v7 = a1[1];
  if (v7)
  {
    do
    {
      while (1)
      {
        v6 = (uint64_t **)v7;
        if (*((_QWORD *)v4 + 4) >= (unint64_t)v7[4])
          break;
        v7 = (uint64_t *)*v7;
        v8 = v6;
        if (!*v6)
          goto LABEL_8;
      }
      v7 = (uint64_t *)v7[1];
    }
    while (v7);
    v8 = v6 + 1;
  }
  else
  {
    v8 = a1 + 1;
  }
LABEL_8:
  sub_99468(a1, (uint64_t)v6, v8, (uint64_t *)v4);
  return v5;
}

id TUIResourceLoadFromString(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  id v4;

  v1 = a1;
  v2 = v1;
  if (qword_2CB658 != -1)
  {
    dispatch_once(&qword_2CB658, &stru_241180);
    if (v2)
      goto LABEL_3;
LABEL_5:
    v4 = 0;
    goto LABEL_6;
  }
  if (!v1)
    goto LABEL_5;
LABEL_3:
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend((id)qword_2CB650, "objectForKeyedSubscript:", v2));
  v4 = objc_msgSend(v3, "unsignedIntegerValue");

LABEL_6:
  return v4;
}

void sub_D2314(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_D2330(id a1)
{
  void *v1;

  v1 = (void *)qword_2CB650;
  qword_2CB650 = (uint64_t)&off_254690;

}

uint64_t TUIResourceLoadForURL(void *a1, uint64_t a2)
{
  id v3;
  void *v4;

  v3 = a1;
  v4 = v3;
  if (!a2)
  {
    if (objc_msgSend(v3, "isFileURL"))
      a2 = 1;
    else
      a2 = 2;
  }

  return a2;
}

void sub_D238C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

uint64_t TUIPriorityIsUndefined()
{
  return 0;
}

float TUIPriorityClamp(float a1)
{
  float v1;

  v1 = 0.0;
  if (a1 >= 0.0)
    v1 = a1;
  if (v1 > 1.0)
    return 1.0;
  return v1;
}

__CFString *NSStringFromTUISpringTimingParameters(float64x2_t *a1)
{
  __CFString *v2;
  id v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  double v8;
  double v9;
  double v10;
  void *v11;

  if ((vmaxv_u16((uint16x4_t)vmovn_s32((int32x4_t)vmvnq_s8((int8x16_t)vuzp1q_s32((int32x4_t)vceqzq_f64(*a1), (int32x4_t)vceqzq_f64(a1[1]))))) & 1) != 0|| a1[2].f64[0] != 0.0)
  {
    v3 = objc_alloc_init((Class)NSMutableArray);
    objc_msgSend(v3, "addObject:", CFSTR("{"));
    v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR(" mass: %g"), *(_QWORD *)&a1->f64[0]));
    objc_msgSend(v3, "addObject:", v4);

    v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR(" stiffness: %g"), *(_QWORD *)&a1->f64[1]));
    objc_msgSend(v3, "addObject:", v5);

    v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR(" damping: %g"), *(_QWORD *)&a1[1].f64[0]));
    objc_msgSend(v3, "addObject:", v6);

    v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR(" initialVelocity: { %g, %g }"), *(_QWORD *)&a1[1].f64[1], *(_QWORD *)&a1[2].f64[0]));
    objc_msgSend(v3, "addObject:", v7);

    v8 = a1->f64[1];
    v9 = 0.0;
    if (v8 != 0.0 && a1->f64[0] != 0.0)
    {
      v10 = sqrt(a1->f64[0] * v8);
      v9 = a1[1].f64[0] / (v10 + v10);
    }
    v11 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR(" == dampingRatio: %g"), *(_QWORD *)&v9));
    objc_msgSend(v3, "addObject:", v11);

    objc_msgSend(v3, "addObject:", CFSTR(" }"));
    v2 = (__CFString *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "componentsJoinedByString:", &stru_243BF0));

  }
  else
  {
    v2 = CFSTR("TUISpringTimingParametersZero");
  }
  return v2;
}

void sub_D25A4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

double TUISpringTimingCalculateDampingRatio(double *a1)
{
  double v1;
  double result;
  double v3;

  v1 = a1[1];
  result = 0.0;
  if (v1 != 0.0 && *a1 != 0.0)
  {
    v3 = sqrt(v1 * *a1);
    return a1[2] / (v3 + v3);
  }
  return result;
}

BOOL TUIValueNotNil(int a1)
{
  return a1 != 0;
}

BOOL TUIValueIsNil(int a1)
{
  return a1 == 0;
}

BOOL TUIConditionNotNil(int a1)
{
  return a1 != 0;
}

BOOL TUIConditionIsNil(int a1)
{
  return a1 == 0;
}

BOOL TUILocationNotNil(int a1)
{
  return a1 != 0x7FFFFFFF;
}

BOOL TUILocationIsNil(int a1)
{
  return a1 == 0x7FFFFFFF;
}

BOOL TUIReferenceListNotNil(int a1)
{
  return a1 != -1;
}

BOOL TUIReferenceListIsNil(int a1)
{
  return a1 == -1;
}

BOOL TUIReferenceNotNil(int a1)
{
  return a1 != -1;
}

BOOL TUIReferenceIsNil(int a1)
{
  return a1 == -1;
}

BOOL TUIDefinitionNotNil(int a1)
{
  return a1 != -1;
}

BOOL TUIDefinitionIsNil(int a1)
{
  return a1 == -1;
}

BOOL TUIEnumeratorNotNil(int a1)
{
  return a1 != -1;
}

BOOL TUIEnumeratorIsNil(int a1)
{
  return a1 == -1;
}

BOOL TUINameIsValid(int a1)
{
  return (~a1 & 0xFFFF0000) != 0 && (_WORD)a1 != 0xFFFF;
}

BOOL TUIElementReferenceNotNil(int a1)
{
  return a1 != -1;
}

BOOL TUIElementReferenceIsNil(int a1)
{
  return a1 == -1;
}

BOOL TUINameReferenceNotNil(int a1)
{
  return a1 != -1;
}

BOOL TUINameReferenceIsNil(int a1)
{
  return a1 == -1;
}

BOOL TUIAttributesNotNil(int a1)
{
  return a1 != -1;
}

BOOL TUIAttributesIsNil(int a1)
{
  return a1 == -1;
}

BOOL TUIElementNodeNotNil(int a1)
{
  return a1 != -1;
}

BOOL TUIElementNodeIsNil(int a1)
{
  return a1 == -1;
}

BOOL TUIClosureNotNil(int a1)
{
  return a1 != -1;
}

BOOL TUIClosureIsNil(int a1)
{
  return a1 == -1;
}

BOOL TUISize32Equal(float a1, float a2, float a3, float a4)
{
  return a2 == a4 && a1 == a3;
}

BOOL TUIInsets32Equal(float a1, float a2, float a3, float a4, float a5, float a6, float a7, float a8)
{
  return a1 == a5 && a2 == a6 && a3 == a7 && a4 == a8;
}

BOOL TUIAffineTransform32IsIdentity(float *a1)
{
  return *a1 == 1.0 && a1[1] == 0.0 && a1[2] == 0.0 && a1[3] == 1.0 && a1[4] == 0.0 && a1[5] == 0.0;
}

uint64_t TUILayerCompositingFilterNeedsBackdropLayer(void *a1)
{
  uint64_t v1;
  id v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  id v8;
  void *v9;
  uint64_t v10;

  v2 = a1;
  if (qword_2CB668 != -1)
    dispatch_once(&qword_2CB668, &stru_2411A0);
  v3 = objc_opt_class(NSString, v1);
  v4 = TUIDynamicCast(v3, v2);
  v6 = (void *)objc_claimAutoreleasedReturnValue(v4);
  if (v6
    || (v7 = objc_opt_class(CAFilter, v5),
        v8 = TUIDynamicCast(v7, v2),
        v9 = (void *)objc_claimAutoreleasedReturnValue(v8),
        v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "type")),
        v9,
        v6))
  {
    v10 = objc_msgSend((id)qword_2CB660, "containsObject:", v6) ^ 1;

  }
  else
  {
    v10 = 0;
  }

  return v10;
}

void sub_D289C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  v3 = v2;

  _Unwind_Resume(a1);
}

void sub_D28CC(id a1)
{
  void *v1;
  uint64_t v2;
  void *v3;
  _QWORD v4[24];

  v4[0] = kCAFilterNormalBlendMode;
  v4[1] = kCAFilterMultiplyBlendMode;
  v4[2] = kCAFilterScreenBlendMode;
  v4[3] = kCAFilterOverlayBlendMode;
  v4[4] = kCAFilterDarkenBlendMode;
  v4[5] = kCAFilterLightenBlendMode;
  v4[6] = kCAFilterColorDodgeBlendMode;
  v4[7] = kCAFilterColorBurnBlendMode;
  v4[8] = kCAFilterSoftLightBlendMode;
  v4[9] = kCAFilterHardLightBlendMode;
  v4[10] = kCAFilterDifferenceBlendMode;
  v4[11] = kCAFilterExclusionBlendMode;
  v4[12] = kCAFilterSubtractBlendMode;
  v4[13] = kCAFilterDivideBlendMode;
  v4[14] = kCAFilterLinearBurnBlendMode;
  v4[15] = kCAFilterLinearDodgeBlendMode;
  v4[16] = kCAFilterLinearLightBlendMode;
  v4[17] = kCAFilterPinLightBlendMode;
  v4[18] = kCAFilterHueBlendMode;
  v4[19] = kCAFilterSaturationBlendMode;
  v4[20] = kCAFilterColorBlendMode;
  v4[21] = kCAFilterLuminosityBlendMode;
  v4[22] = kCAFilterPlusL;
  v4[23] = kCAFilterPlusD;
  v1 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", v4, 24));
  v2 = objc_claimAutoreleasedReturnValue(+[NSSet setWithArray:](NSSet, "setWithArray:", v1));
  v3 = (void *)qword_2CB660;
  qword_2CB660 = v2;

}

void sub_D2AB0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

unsigned int *TUI::Box::Flags::Flags(unsigned int *this)
{
  int v1;
  unint64_t v2;

  v1 = *((unsigned __int8 *)this + 6);
  v2 = (*this | ((unint64_t)(*((unsigned __int16 *)this + 2) | (v1 << 16)) << 32)) & 0xFF002000E00000;
  *((_BYTE *)this + 6) = v1;
  *this = v2;
  *((_WORD *)this + 2) = WORD2(v2);
  return this;
}

{
  int v1;
  unint64_t v2;

  v1 = *((unsigned __int8 *)this + 6);
  v2 = (*this | ((unint64_t)(*((unsigned __int16 *)this + 2) | (v1 << 16)) << 32)) & 0xFF002000E00000;
  *((_BYTE *)this + 6) = v1;
  *this = v2;
  *((_WORD *)this + 2) = WORD2(v2);
  return this;
}

int64_t sub_D3060(id a1, _TUIDynamicArrayUpdate *a2, _TUIDynamicArrayUpdate *a3)
{
  _TUIDynamicArrayUpdate *v4;
  unint64_t v5;
  unint64_t v6;

  v4 = a3;
  v5 = -[_TUIDynamicArrayUpdate newIndex](a2, "newIndex");
  v6 = -[_TUIDynamicArrayUpdate newIndex](v4, "newIndex");

  if (v5 < v6)
    return -1;
  else
    return 1;
}

id *sub_D32FC(id *result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  switch(a2)
  {
    case 0:
      result = (id *)objc_msgSend(result[4], "insertItemAtIndex:", a4);
      break;
    case 1:
      result = (id *)objc_msgSend(result[4], "deleteItemAtIndex:");
      break;
    case 2:
      result = (id *)objc_msgSend(result[4], "updateItemAtIndex:");
      break;
    case 3:
      result = (id *)objc_msgSend(result[4], "moveItemFromIndex:toIndex:");
      break;
    default:
      return result;
  }
  return result;
}

BOOL sub_D37C4(uint64_t a1, void *a2)
{
  void *v3;
  _BOOL8 v4;

  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "superview"));
  v4 = v3 == *(void **)(a1 + 32);

  return v4;
}

id sub_D3800(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 32), "setHidden:", 0);
  return objc_msgSend(*(id *)(a1 + 32), "prepareForReuse");
}

void sub_D3908(uint64_t a1)
{
  id v1;
  id v2;
  id v3;
  uint64_t v4;
  void *v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _BYTE v10[128];

  v6 = 0u;
  v7 = 0u;
  v8 = 0u;
  v9 = 0u;
  v1 = *(id *)(a1 + 32);
  v2 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v6, v10, 16);
  if (v2)
  {
    v3 = v2;
    v4 = *(_QWORD *)v7;
    do
    {
      v5 = 0;
      do
      {
        if (*(_QWORD *)v7 != v4)
          objc_enumerationMutation(v1);
        objc_msgSend(*(id *)(*((_QWORD *)&v6 + 1) + 8 * (_QWORD)v5), "prepareForReuse", (_QWORD)v6);
        v5 = (char *)v5 + 1;
      }
      while (v3 != v5);
      v3 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v6, v10, 16);
    }
    while (v3);
  }

}

void sub_D4160(id a1)
{
  void *v1;

  v1 = (void *)qword_2CB670;
  qword_2CB670 = (uint64_t)&off_2522F0;

}

void sub_D4364(id a1)
{
  void *v1;

  v1 = (void *)qword_2CB680;
  qword_2CB680 = (uint64_t)&off_252308;

}

void sub_D43CC(id a1)
{
  uint64_t v1;
  void *v2;
  _QWORD v3[12];

  v3[0] = CFSTR("didPlay");
  v3[1] = CFSTR("didPause");
  v3[2] = CFSTR("didResume");
  v3[3] = CFSTR("didMute");
  v3[4] = CFSTR("didUnmute");
  v3[5] = CFSTR("didEnterFullscreen");
  v3[6] = CFSTR("didExitFullscreen");
  v3[7] = CFSTR("didPlayToCompletion");
  v3[8] = CFSTR("didFailToLoad");
  v3[9] = CFSTR("didStall");
  v3[10] = CFSTR("didBeginScrubbing");
  v3[11] = CFSTR("didEndScrubbing");
  v1 = objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", v3, 12));
  v2 = (void *)qword_2CB690;
  qword_2CB690 = v1;

}

void sub_D46D0(id a1)
{
  void *v1;

  v1 = (void *)qword_2CB6A0;
  qword_2CB6A0 = (uint64_t)&off_252320;

}

void sub_D4740(id a1)
{
  void *v1;

  v1 = (void *)qword_2CB6B0;
  qword_2CB6B0 = (uint64_t)&off_252338;

}

void sub_D47A8(id a1)
{
  uint64_t v1;
  void *v2;
  _QWORD v3[6];

  v3[0] = CFSTR("actionPlay");
  v3[1] = CFSTR("actionPause");
  v3[2] = CFSTR("actionMute");
  v3[3] = CFSTR("actionUnmute");
  v3[4] = CFSTR("actionEnterFullscreen");
  v3[5] = CFSTR("actionExitFullscreen");
  v1 = objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", v3, 6));
  v2 = (void *)qword_2CB6C0;
  qword_2CB6C0 = v1;

}

void sub_D4AE0(id a1)
{
  dispatch_queue_t v1;
  void *v2;

  v1 = dispatch_queue_create("TUIAVAsset.creationQueue", (dispatch_queue_attr_t)&_dispatch_queue_attr_concurrent);
  v2 = (void *)qword_2CB6D0;
  qword_2CB6D0 = (uint64_t)v1;

}

void sub_D4B10(uint64_t a1)
{
  id v2;

  v2 = objc_msgSend(objc_alloc((Class)AVURLAsset), "initWithURL:options:", *(_QWORD *)(a1 + 32), 0);
  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();

}

void sub_D4C4C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  v2 = v1;

  _Unwind_Resume(a1);
}

void sub_D68F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *a17, void *a18, void *a19, void *a20,void *a21,void *a22,void *a23)
{
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;

  _Unwind_Resume(a1);
}

void sub_D6A5C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, objc_super a9)
{
  void *v9;

  a9.super_class = (Class)TUILayoutController;
  -[_Unwind_Exception dealloc](&a9, "dealloc");
  _Unwind_Resume(a1);
}

void sub_D6AF0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_D6D30(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_D6D90(void *a1, void *a2, uint64_t a3, void *a4)
{
  id v7;
  id v8;
  id v9;
  void *v10;
  id v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  _BYTE v19[128];

  v7 = a1;
  v8 = a2;
  v9 = a4;
  if (((unint64_t)objc_msgSend(v8, "directEnvironmentUseMask") & a3) != 0)
    objc_msgSend(v7, "addObject:", v8);
  if (((unint64_t)objc_msgSend(v8, "descendentEnvironmentUseMask") & a3) != 0)
  {
    v17 = 0u;
    v18 = 0u;
    v15 = 0u;
    v16 = 0u;
    v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "environmentChildContainersForContainer:", v8, 0));
    v11 = objc_msgSend(v10, "countByEnumeratingWithState:objects:count:", &v15, v19, 16);
    if (v11)
    {
      v12 = *(_QWORD *)v16;
      do
      {
        v13 = 0;
        do
        {
          if (*(_QWORD *)v16 != v12)
            objc_enumerationMutation(v10);
          v14 = *(_QWORD *)(*((_QWORD *)&v15 + 1) + 8 * (_QWORD)v13);
          if (v14)
            sub_D6D90(v7, v14, a3, v9);
          v13 = (char *)v13 + 1;
        }
        while (v11 != v13);
        v11 = objc_msgSend(v10, "countByEnumeratingWithState:objects:count:", &v15, v19, 16);
      }
      while (v11);
    }

  }
}

void sub_D6EFC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_D6FCC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

BOOL sub_D6FE4(void *a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  void *v6;

  v3 = a1;
  v4 = a2;
  v5 = v4;
  if (!v3 || v3 == v4)
  {
    v6 = v3;
  }
  else
  {
    do
    {
      v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "parentModel"));

      if (!v6)
        break;
      v3 = v6;
    }
    while (v6 != v5);
  }

  return v6 == v5;
}

void sub_D7064(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_D710C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_D775C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,void *__p,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,char a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  char a67;
  void *v67;
  void *v68;

  TUI::Graph::Ordering::~Ordering((TUI::Graph::Ordering *)&a51);
  sub_14B0C((uint64_t)&a67);

  _Unwind_Resume(a1);
}

unint64_t sub_D78A8(void *a1, void *a2)
{
  id v3;
  id v4;
  id v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  void *i;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  BOOL v14;
  id v15;
  unint64_t v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  _BYTE v22[128];

  v3 = a1;
  v4 = a2;
  v5 = objc_msgSend(v3, "directEnvironmentUseMask");
  v20 = 0u;
  v21 = 0u;
  v18 = 0u;
  v19 = 0u;
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "environmentChildContainersForContainer:", v3));
  v7 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v18, v22, 16);
  v17 = (unint64_t)v5;
  v8 = 0;
  if (v7)
  {
    v9 = *(_QWORD *)v19;
    do
    {
      for (i = 0; i != v7; i = (char *)i + 1)
      {
        if (*(_QWORD *)v19 != v9)
          objc_enumerationMutation(v6);
        v11 = *(_QWORD *)(*((_QWORD *)&v18 + 1) + 8 * (_QWORD)i);
        if (v11)
        {
          v12 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*((_QWORD *)&v18 + 1) + 8 * (_QWORD)i), "parentModel"));
          v13 = (void *)v12;
          if (v12)
            v14 = v12 == (_QWORD)v3;
          else
            v14 = 1;
          if (v14)
          {
            v15 = (id)v12;
          }
          else
          {
            do
            {
              v15 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "parentModel"));

              if (!v15)
                break;
              v13 = v15;
            }
            while (v15 != v3);
          }
          if (v15 == v3)
            v8 |= sub_D78A8(v11, v4);

        }
      }
      v7 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v18, v22, 16);
    }
    while (v7);
  }

  objc_msgSend(v3, "setDescendentEnvironmentUseMask:", v8);
  return v8 | v17;
}

void sub_D7A50(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_D7B3C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_D7D14(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_D7EB0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_D7F6C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_D804C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

uint64_t sub_D8064(uint64_t a1, void *a2)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  id v9[4];
  id v10;

  v10 = a2;
  v4 = a1 + 88;
  v5 = sub_6C98((_QWORD *)(a1 + 88), (unint64_t *)&v10);
  if (!v5)
  {
    v9[0] = v10;
    memset(&v9[1], 0, 24);
    v5 = sub_DB03C(v4, (unint64_t *)v9, (uint64_t *)v9);

  }
  ++v5[3];
  *(_QWORD *)(a1 + 3232 + 24 * *(_QWORD *)(a1 + 27808)) = a2;
  result = mach_absolute_time();
  v7 = *(_QWORD *)(a1 + 27808);
  v8 = a1 + 3232 + 24 * v7;
  *(_QWORD *)(v8 + 8) = result;
  *(_QWORD *)(v8 + 16) = 0;
  *(_QWORD *)(a1 + 27808) = v7 + 1;
  return result;
}

void sub_D8114(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{

  _Unwind_Resume(a1);
}

void sub_D8128(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  id v4;
  unint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11[4];
  id v12;

  v2 = *(_QWORD *)(a1 + 27808) - 1;
  *(_QWORD *)(a1 + 27808) = v2;
  v3 = a1 + 3232;
  v4 = *(id *)(a1 + 3232 + 24 * v2);
  v5 = *(_QWORD *)(v3 + 24 * *(_QWORD *)(a1 + 27808) + 8);
  v6 = mach_absolute_time();
  v12 = v4;
  v7 = sub_6C98((_QWORD *)(a1 + 88), (unint64_t *)&v12);
  if (!v7)
  {
    v11[0] = v12;
    memset(&v11[1], 0, 24);
    v7 = sub_DB03C(a1 + 88, (unint64_t *)v11, (uint64_t *)v11);

  }
  v8 = v6 - v5;
  if (v5 >= v6)
    v8 = v5 - v6;
  v9 = v7[4];
  v7[5] += v8;
  v10 = *(_QWORD *)(a1 + 27808);
  v7[4] = v8 - *(_QWORD *)(a1 + 24 * v10 + 3248) + v9;
  if (v10)
    *(_QWORD *)(a1 + 24 * v10 + 3224) += v8;

}

void sub_D822C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_D8340(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, id a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{

  _Unwind_Resume(a1);
}

id sub_D8364(uint64_t a1)
{
  return _objc_msgSend(*(id *)(a1 + 32), "groupedContainingValidateWithSize:", *(double *)(a1 + 40), *(double *)(a1 + 48));
}

void sub_D8490(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_D85A8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_D8684(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_D8AD4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_D8E04(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, void *a11, void *a12)
{
  void *v12;
  void *v13;
  void *v14;

  _Unwind_Resume(a1);
}

void sub_D8FAC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_D90F0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_D9344(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, void *a14)
{
  void *v14;
  void *v15;

  _Unwind_Resume(a1);
}

void sub_D94A4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;
  void *v12;
  void *v13;

  _Unwind_Resume(a1);
}

void sub_D9728(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_D98B8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_D9980(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_D9AA0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_D9C6C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,id a22)
{
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  uint64_t v26;

  _Block_object_dispose(&a17, 8);
  _Block_object_dispose((const void *)(v26 - 96), 8);

  _Unwind_Resume(a1);
}

uint64_t sub_D9CD4(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_D9CE4(uint64_t a1)
{

}

void sub_D9CEC(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;
  id v11;
  id v12;

  v5 = a2;
  v6 = a3;
  v7 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v8 = *(void **)(v7 + 40);
  *(_QWORD *)(v7 + 40) = v5;
  v12 = v5;

  v9 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
  v10 = *(void **)(v9 + 40);
  *(_QWORD *)(v9 + 40) = v6;
  v11 = v6;

  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

void sub_D9DE0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_D9E34(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_DA004(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_DA0F0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_DA248(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;

  v7 = v6;

  _Unwind_Resume(a1);
}

void sub_DA37C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;

  v7 = v6;

  _Unwind_Resume(a1);
}

void sub_DA6E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  void *v9;

  _Unwind_Resume(a1);
}

void sub_DA9B4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

id sub_DAC74(void *a1)
{
  id v1;
  uint64_t v2;

  v1 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(a1, "parentModel"));
  if (v1)
  {
    while ((objc_opt_respondsToSelector(v1, "hasUpdatesForTransactionGroup:") & 1) == 0)
    {
      v2 = objc_claimAutoreleasedReturnValue(objc_msgSend(v1, "parentModel"));

      v1 = (id)v2;
      if (!v2)
        goto LABEL_6;
    }
    v1 = v1;
  }
LABEL_6:

  return v1;
}

void sub_DACEC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

_QWORD *sub_DACFC(uint64_t a1, _QWORD *a2, uint64_t a3, _QWORD **a4)
{
  unint64_t v4;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint8x8_t v11;
  _QWORD **v12;
  _QWORD *i;
  unint64_t v14;
  float v15;
  float v16;
  _BOOL8 v17;
  unint64_t v18;
  unint64_t v19;
  size_t v20;
  uint64_t v21;
  _QWORD *v22;
  unint64_t v23;

  v7 = 0x9DDFEA08EB382D69 * ((8 * *a2 + 8) ^ HIDWORD(*a2));
  v8 = 0x9DDFEA08EB382D69 * (HIDWORD(*a2) ^ (v7 >> 47) ^ v7);
  v9 = 0x9DDFEA08EB382D69 * (v8 ^ (v8 >> 47));
  v10 = *(_QWORD *)(a1 + 8);
  if (v10)
  {
    v11 = (uint8x8_t)vcnt_s8((int8x8_t)v10);
    v11.i16[0] = vaddlv_u8(v11);
    if (v11.u32[0] > 1uLL)
    {
      v4 = 0x9DDFEA08EB382D69 * (v8 ^ (v8 >> 47));
      if (v9 >= v10)
        v4 = v9 % v10;
    }
    else
    {
      v4 = v9 & (v10 - 1);
    }
    v12 = *(_QWORD ***)(*(_QWORD *)a1 + 8 * v4);
    if (v12)
    {
      for (i = *v12; i; i = (_QWORD *)*i)
      {
        v14 = i[1];
        if (v14 == v9)
        {
          if (i[2] == *a2)
            return i;
        }
        else
        {
          if (v11.u32[0] > 1uLL)
          {
            if (v14 >= v10)
              v14 %= v10;
          }
          else
          {
            v14 &= v10 - 1;
          }
          if (v14 != v4)
            break;
        }
      }
    }
  }
  i = operator new(0x20uLL);
  *i = 0;
  i[1] = v9;
  i[2] = **a4;
  i[3] = 0;
  v15 = (float)(unint64_t)(*(_QWORD *)(a1 + 24) + 1);
  v16 = *(float *)(a1 + 32);
  if (!v10 || (float)(v16 * (float)v10) < v15)
  {
    v17 = 1;
    if (v10 >= 3)
      v17 = (v10 & (v10 - 1)) != 0;
    v18 = v17 | (2 * v10);
    v19 = vcvtps_u32_f32(v15 / v16);
    if (v18 <= v19)
      v20 = v19;
    else
      v20 = v18;
    sub_6A20(a1, v20);
    v10 = *(_QWORD *)(a1 + 8);
    if ((v10 & (v10 - 1)) != 0)
    {
      if (v9 >= v10)
        v4 = v9 % v10;
      else
        v4 = v9;
    }
    else
    {
      v4 = (v10 - 1) & v9;
    }
  }
  v21 = *(_QWORD *)a1;
  v22 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v4);
  if (v22)
  {
    *i = *v22;
LABEL_38:
    *v22 = i;
    goto LABEL_39;
  }
  *i = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = i;
  *(_QWORD *)(v21 + 8 * v4) = a1 + 16;
  if (*i)
  {
    v23 = *(_QWORD *)(*i + 8);
    if ((v10 & (v10 - 1)) != 0)
    {
      if (v23 >= v10)
        v23 %= v10;
    }
    else
    {
      v23 &= v10 - 1;
    }
    v22 = (_QWORD *)(*(_QWORD *)a1 + 8 * v23);
    goto LABEL_38;
  }
LABEL_39:
  ++*(_QWORD *)(a1 + 24);
  return i;
}

void sub_DAF3C(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_DAF50(_QWORD *a1, _QWORD *a2)
{
  int8x8_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint8x8_t v6;
  unint64_t v7;
  _QWORD *v8;
  _QWORD *result;
  unint64_t v10;

  v2 = (int8x8_t)a1[1];
  if (!*(_QWORD *)&v2)
    return 0;
  v3 = 0x9DDFEA08EB382D69 * ((8 * *a2 + 8) ^ HIDWORD(*a2));
  v4 = 0x9DDFEA08EB382D69 * (HIDWORD(*a2) ^ (v3 >> 47) ^ v3);
  v5 = 0x9DDFEA08EB382D69 * (v4 ^ (v4 >> 47));
  v6 = (uint8x8_t)vcnt_s8(v2);
  v6.i16[0] = vaddlv_u8(v6);
  if (v6.u32[0] > 1uLL)
  {
    v7 = v5;
    if (v5 >= *(_QWORD *)&v2)
      v7 = v5 % *(_QWORD *)&v2;
  }
  else
  {
    v7 = v5 & (*(_QWORD *)&v2 - 1);
  }
  v8 = *(_QWORD **)(*a1 + 8 * v7);
  if (!v8)
    return 0;
  result = (_QWORD *)*v8;
  if (*v8)
  {
    do
    {
      v10 = result[1];
      if (v10 == v5)
      {
        if (result[2] == *a2)
          return result;
      }
      else
      {
        if (v6.u32[0] > 1uLL)
        {
          if (v10 >= *(_QWORD *)&v2)
            v10 %= *(_QWORD *)&v2;
        }
        else
        {
          v10 &= *(_QWORD *)&v2 - 1;
        }
        if (v10 != v7)
          return 0;
      }
      result = (_QWORD *)*result;
    }
    while (result);
  }
  return result;
}

char *sub_DB03C(uint64_t a1, unint64_t *a2, uint64_t *a3)
{
  unint64_t v3;
  unint64_t v6;
  unint64_t v7;
  uint8x8_t v8;
  void **v9;
  char *v10;
  unint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  float v14;
  float v15;
  _BOOL8 v16;
  unint64_t v17;
  unint64_t v18;
  size_t v19;
  uint64_t v20;
  _QWORD *v21;
  unint64_t v22;

  v6 = *a2;
  v7 = *(_QWORD *)(a1 + 8);
  if (v7)
  {
    v8 = (uint8x8_t)vcnt_s8((int8x8_t)v7);
    v8.i16[0] = vaddlv_u8(v8);
    if (v8.u32[0] > 1uLL)
    {
      v3 = *a2;
      if (v7 <= v6)
        v3 = v6 % v7;
    }
    else
    {
      v3 = (v7 - 1) & v6;
    }
    v9 = *(void ***)(*(_QWORD *)a1 + 8 * v3);
    if (v9)
    {
      v10 = (char *)*v9;
      if (*v9)
      {
        do
        {
          v11 = *((_QWORD *)v10 + 1);
          if (v11 == v6)
          {
            if (*((_QWORD *)v10 + 2) == v6)
              return v10;
          }
          else
          {
            if (v8.u32[0] > 1uLL)
            {
              if (v11 >= v7)
                v11 %= v7;
            }
            else
            {
              v11 &= v7 - 1;
            }
            if (v11 != v3)
              break;
          }
          v10 = *(char **)v10;
        }
        while (v10);
      }
    }
  }
  v12 = (_QWORD *)(a1 + 16);
  v10 = (char *)operator new(0x30uLL);
  *(_QWORD *)v10 = 0;
  *((_QWORD *)v10 + 1) = v6;
  v13 = *a3;
  *a3 = 0;
  *((_QWORD *)v10 + 2) = v13;
  *(_OWORD *)(v10 + 24) = *(_OWORD *)(a3 + 1);
  *((_QWORD *)v10 + 5) = a3[3];
  v14 = (float)(unint64_t)(*(_QWORD *)(a1 + 24) + 1);
  v15 = *(float *)(a1 + 32);
  if (!v7 || (float)(v15 * (float)v7) < v14)
  {
    v16 = 1;
    if (v7 >= 3)
      v16 = (v7 & (v7 - 1)) != 0;
    v17 = v16 | (2 * v7);
    v18 = vcvtps_u32_f32(v14 / v15);
    if (v17 <= v18)
      v19 = v18;
    else
      v19 = v17;
    sub_6A20(a1, v19);
    v7 = *(_QWORD *)(a1 + 8);
    if ((v7 & (v7 - 1)) != 0)
    {
      if (v7 <= v6)
        v3 = v6 % v7;
      else
        v3 = v6;
    }
    else
    {
      v3 = (v7 - 1) & v6;
    }
  }
  v20 = *(_QWORD *)a1;
  v21 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v3);
  if (v21)
  {
    *(_QWORD *)v10 = *v21;
LABEL_38:
    *v21 = v10;
    goto LABEL_39;
  }
  *(_QWORD *)v10 = *v12;
  *v12 = v10;
  *(_QWORD *)(v20 + 8 * v3) = v12;
  if (*(_QWORD *)v10)
  {
    v22 = *(_QWORD *)(*(_QWORD *)v10 + 8);
    if ((v7 & (v7 - 1)) != 0)
    {
      if (v22 >= v7)
        v22 %= v7;
    }
    else
    {
      v22 &= v7 - 1;
    }
    v21 = (_QWORD *)(*(_QWORD *)a1 + 8 * v22);
    goto LABEL_38;
  }
LABEL_39:
  ++*(_QWORD *)(a1 + 24);
  return v10;
}

void sub_DB278(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  sub_6C54(v2, v1);
  _Unwind_Resume(a1);
}

void sub_DB338(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15)
{
  void *v15;

  if (__p)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_DB360(uint64_t a1, void *a2, void *a3)
{
  id v5;
  void **v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  unint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  char *v17;
  char *v18;
  char *v19;
  char *v20;
  char *v21;
  id v22;

  v22 = a2;
  v5 = a3;
  v6 = *(void ***)(a1 + 32);
  v8 = objc_msgSend(v5, "validatedIntrinsicWidthConsideringSpecified");
  v9 = v7;
  v10 = (unint64_t)v6[2];
  v11 = v6[1];
  if ((unint64_t)v11 >= v10)
  {
    v13 = ((char *)v11 - (_BYTE *)*v6) >> 4;
    v14 = v13 + 1;
    if ((unint64_t)(v13 + 1) >> 60)
      sub_6F9C();
    v15 = v10 - (_QWORD)*v6;
    if (v15 >> 3 > v14)
      v14 = v15 >> 3;
    if ((unint64_t)v15 >= 0x7FFFFFFFFFFFFFF0)
      v16 = 0xFFFFFFFFFFFFFFFLL;
    else
      v16 = v14;
    if (v16)
      v17 = (char *)sub_22FD4((uint64_t)(v6 + 2), v16);
    else
      v17 = 0;
    v18 = &v17[16 * v13];
    v19 = &v17[16 * v16];
    *(_QWORD *)v18 = v8;
    *((_QWORD *)v18 + 1) = v9;
    v12 = v18 + 16;
    v21 = (char *)*v6;
    v20 = (char *)v6[1];
    if (v20 != *v6)
    {
      do
      {
        *((_OWORD *)v18 - 1) = *((_OWORD *)v20 - 1);
        v18 -= 16;
        v20 -= 16;
      }
      while (v20 != v21);
      v20 = (char *)*v6;
    }
    *v6 = v18;
    v6[1] = v12;
    v6[2] = v19;
    if (v20)
      operator delete(v20);
  }
  else
  {
    *v11 = v8;
    v11[1] = v7;
    v12 = v11 + 2;
  }
  v6[1] = v12;

}

void sub_DB484(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_DB5C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

__n128 sub_DB5F4(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = a2[3];
  a1[3] = result;
  return result;
}

void sub_DB604(uint64_t a1, uint64_t a2, void *a3)
{
  double v4;
  double v5;
  id v6;

  v6 = a3;
  objc_msgSend(*(id *)(a1 + 32), "flexedWidth");
  objc_msgSend(*(id *)(a1 + 32), "flexedWidth");
  objc_msgSend(v6, "setFlexedWidth:");
  objc_msgSend(*(id *)(a1 + 32), "flexedHeight");
  objc_msgSend(*(id *)(a1 + 32), "flexedHeight");
  objc_msgSend(v6, "setFlexedHeight:");
  objc_msgSend(v6, "setContainingWidth:", *(double *)(a1 + 48));
  objc_msgSend(v6, "validateLayout");
  objc_msgSend(v6, "setComputedOrigin:", CGPointZero.x, CGPointZero.y);
  objc_msgSend(v6, "computedTransformedSize");
  *(double *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 56) = fmax(*(double *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8)+ 56), v4);
  *(double *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 48) = fmax(*(double *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8)+ 48), v5);

}

void sub_DB6CC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_DB778(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_DB82C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_DB930(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_DBA24(_Unwind_Exception *exception_object)
{
  _Unwind_Resume(exception_object);
}

void sub_DBA48(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  void *v7;
  void *v8;
  void *v9;
  id v10;

  v10 = a2;
  v5 = a3;
  v6 = objc_msgSend(objc_alloc((Class)NSMutableArray), "initWithCapacity:", 1);
  objc_msgSend(v5, "appendLayoutModelsToArray:", v6);
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "firstObject"));
  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "controller"));
  v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "layoutForModel:", v7));

  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 104), "setObject:forKeyedSubscript:", v9, v10);
}

void sub_DBB18(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;
  void *v12;
  void *v13;

  _Unwind_Resume(a1);
}

void sub_DBBCC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_DBC50(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_DBD0C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_DBD90(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_DC2C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, void *a13)
{
  void *v13;
  void *v14;
  void *v15;
  void *v16;

  _Unwind_Resume(a1);
}

void sub_DC4C0(id *a1)
{
  void *v2;
  _QWORD v3[4];
  id v4;
  id v5;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[4], "stateNameToLayout"));
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_DC574;
  v3[3] = &unk_241408;
  v4 = a1[5];
  v5 = a1[6];
  objc_msgSend(v2, "enumerateKeysAndObjectsUsingBlock:", v3);

}

void sub_DC554(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_DC574(uint64_t a1, void *a2, uint64_t a3)
{
  void *v5;
  id v6;

  v6 = a2;
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "renderModelForLayout:kind:", a3, 6));
  objc_msgSend(*(id *)(a1 + 40), "setObject:forKeyedSubscript:", v5, v6);

}

void sub_DC5D4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_DC808(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;

  _Unwind_Resume(a1);
}

void sub_DC8A4(uint64_t a1, void *a2, void *a3)
{
  id v5;
  void *v6;
  id v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  id v12;

  v12 = a2;
  v5 = a3;
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "children"));
  v7 = objc_msgSend(v6, "indexOfObject:", v5);

  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "children"));
  v9 = objc_msgSend(v8, "count");

  if (v7 < v9)
  {
    v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "children"));
    v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "objectAtIndexedSubscript:", v7));

    objc_msgSend(v11, "setStateName:", v12);
  }

}

void sub_DC96C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void sub_DC9F0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

id sub_DDD58(uint64_t a1, void *a2)
{
  void *v2;
  void *v3;
  id v4;

  v2 = *(void **)(a1 + 32);
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "type"));
  v4 = objc_msgSend(v2, "containsObject:", v3);

  return v4;
}

void sub_DDD9C(uint64_t a1, void *a2, void *a3)
{
  id v5;
  void *v6;
  void *v7;
  _TUIHostingGeometryReuseKey *v8;
  void *v9;
  void *v10;
  _TUIHostingGeometryReuseKey *v11;
  id v12;

  v12 = a2;
  v5 = a3;
  v6 = *(void **)(a1 + 32);
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "type"));
  LODWORD(v6) = objc_msgSend(v6, "containsObject:", v7);

  if ((_DWORD)v6)
  {
    v8 = [_TUIHostingGeometryReuseKey alloc];
    v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "type"));
    v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "identifier"));
    objc_msgSend(v5, "requestedSize");
    v11 = -[_TUIHostingGeometryReuseKey initWithType:identifier:requestedSize:](v8, "initWithType:identifier:requestedSize:", v9, v10);

    objc_msgSend(*(id *)(a1 + 40), "setObject:forKeyedSubscript:", v5, v11);
  }

}

id sub_DF5B0(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_determineSystemAutoPlay");
}

TUI::Symbol::Tab *TUI::Symbol::Tab::Tab(TUI::Symbol::Tab *this)
{
  void *__p[2];
  char v4;
  void **v5;

  *(_OWORD *)this = 0u;
  *((_OWORD *)this + 1) = 0u;
  *((_DWORD *)this + 8) = 1065353216;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *((_QWORD *)this + 11) = 0;
  *((_DWORD *)this + 24) = 1065353216;
  *(_OWORD *)((char *)this + 104) = 0u;
  *(_OWORD *)((char *)this + 120) = 0u;
  *(_OWORD *)((char *)this + 136) = 0u;
  *((_QWORD *)this + 19) = 0;
  *((_DWORD *)this + 40) = 1065353216;
  *(_OWORD *)((char *)this + 168) = 0u;
  *(_OWORD *)((char *)this + 184) = 0u;
  *((_DWORD *)this + 50) = 1065353216;
  sub_9350(__p, "width");
  v5 = __p;
  *((_QWORD *)sub_E3590((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (__int128 **)&v5) + 5) = 0;
  if (v4 < 0)
    operator delete(__p[0]);
  sub_9350(__p, "height");
  v5 = __p;
  *((_QWORD *)sub_E3590((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (__int128 **)&v5) + 5) = 1;
  if (v4 < 0)
    operator delete(__p[0]);
  sub_9350(__p, "top");
  v5 = __p;
  *((_QWORD *)sub_E3590((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (__int128 **)&v5) + 5) = 2;
  if (v4 < 0)
    operator delete(__p[0]);
  sub_9350(__p, "left");
  v5 = __p;
  *((_QWORD *)sub_E3590((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (__int128 **)&v5) + 5) = 3;
  if (v4 < 0)
    operator delete(__p[0]);
  sub_9350(__p, "bottom");
  v5 = __p;
  *((_QWORD *)sub_E3590((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (__int128 **)&v5) + 5) = 4;
  if (v4 < 0)
    operator delete(__p[0]);
  sub_9350(__p, "right");
  v5 = __p;
  *((_QWORD *)sub_E3590((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (__int128 **)&v5) + 5) = 5;
  if (v4 < 0)
    operator delete(__p[0]);
  sub_9350(__p, "min");
  v5 = __p;
  *((_QWORD *)sub_E3590((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (__int128 **)&v5) + 5) = 6;
  if (v4 < 0)
    operator delete(__p[0]);
  sub_9350(__p, "max");
  v5 = __p;
  *((_QWORD *)sub_E3590((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (__int128 **)&v5) + 5) = 7;
  if (v4 < 0)
    operator delete(__p[0]);
  sub_9350(__p, "env");
  v5 = __p;
  *((_QWORD *)sub_E3590((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (__int128 **)&v5) + 5) = 8;
  if (v4 < 0)
    operator delete(__p[0]);
  sub_9350(__p, "deviceClass");
  v5 = __p;
  *((_QWORD *)sub_E3590((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (__int128 **)&v5) + 5) = 9;
  if (v4 < 0)
    operator delete(__p[0]);
  sub_9350(__p, "widthClass");
  v5 = __p;
  *((_QWORD *)sub_E3590((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (__int128 **)&v5) + 5) = 10;
  if (v4 < 0)
    operator delete(__p[0]);
  sub_9350(__p, "heightClass");
  v5 = __p;
  *((_QWORD *)sub_E3590((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (__int128 **)&v5) + 5) = 11;
  if (v4 < 0)
    operator delete(__p[0]);
  sub_9350(__p, "windowSize");
  v5 = __p;
  *((_QWORD *)sub_E3590((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (__int128 **)&v5) + 5) = 12;
  if (v4 < 0)
    operator delete(__p[0]);
  sub_9350(__p, "viewSize");
  v5 = __p;
  *((_QWORD *)sub_E3590((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (__int128 **)&v5) + 5) = 89;
  if (v4 < 0)
    operator delete(__p[0]);
  sub_9350(__p, "split");
  v5 = __p;
  *((_QWORD *)sub_E3590((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (__int128 **)&v5) + 5) = 13;
  if (v4 < 0)
    operator delete(__p[0]);
  sub_9350(__p, "orientation");
  v5 = __p;
  *((_QWORD *)sub_E3590((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (__int128 **)&v5) + 5) = 14;
  if (v4 < 0)
    operator delete(__p[0]);
  sub_9350(__p, "ipad-regular");
  v5 = __p;
  *((_QWORD *)sub_E3590((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (__int128 **)&v5) + 5) = 15;
  if (v4 < 0)
    operator delete(__p[0]);
  sub_9350(__p, "ipad-large");
  v5 = __p;
  *((_QWORD *)sub_E3590((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (__int128 **)&v5) + 5) = 16;
  if (v4 < 0)
    operator delete(__p[0]);
  sub_9350(__p, "iphone-regular");
  v5 = __p;
  *((_QWORD *)sub_E3590((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (__int128 **)&v5) + 5) = 17;
  if (v4 < 0)
    operator delete(__p[0]);
  sub_9350(__p, "iphone-large");
  v5 = __p;
  *((_QWORD *)sub_E3590((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (__int128 **)&v5) + 5) = 18;
  if (v4 < 0)
    operator delete(__p[0]);
  sub_9350(__p, "iphone-large-plus");
  v5 = __p;
  *((_QWORD *)sub_E3590((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (__int128 **)&v5) + 5) = 19;
  if (v4 < 0)
    operator delete(__p[0]);
  sub_9350(__p, "compact");
  v5 = __p;
  *((_QWORD *)sub_E3590((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (__int128 **)&v5) + 5) = 20;
  if (v4 < 0)
    operator delete(__p[0]);
  sub_9350(__p, "regular");
  v5 = __p;
  *((_QWORD *)sub_E3590((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (__int128 **)&v5) + 5) = 21;
  if (v4 < 0)
    operator delete(__p[0]);
  sub_9350(__p, "large");
  v5 = __p;
  *((_QWORD *)sub_E3590((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (__int128 **)&v5) + 5) = 22;
  if (v4 < 0)
    operator delete(__p[0]);
  sub_9350(__p, "landscape");
  v5 = __p;
  *((_QWORD *)sub_E3590((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (__int128 **)&v5) + 5) = 23;
  if (v4 < 0)
    operator delete(__p[0]);
  sub_9350(__p, "portrait");
  v5 = __p;
  *((_QWORD *)sub_E3590((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (__int128 **)&v5) + 5) = 24;
  if (v4 < 0)
    operator delete(__p[0]);
  sub_9350(__p, "full");
  v5 = __p;
  *((_QWORD *)sub_E3590((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (__int128 **)&v5) + 5) = 25;
  if (v4 < 0)
    operator delete(__p[0]);
  sub_9350(__p, "wide");
  v5 = __p;
  *((_QWORD *)sub_E3590((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (__int128 **)&v5) + 5) = 26;
  if (v4 < 0)
    operator delete(__p[0]);
  sub_9350(__p, "half");
  v5 = __p;
  *((_QWORD *)sub_E3590((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (__int128 **)&v5) + 5) = 27;
  if (v4 < 0)
    operator delete(__p[0]);
  sub_9350(__p, "narrow");
  v5 = __p;
  *((_QWORD *)sub_E3590((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (__int128 **)&v5) + 5) = 28;
  if (v4 < 0)
    operator delete(__p[0]);
  sub_9350(__p, "style");
  v5 = __p;
  *((_QWORD *)sub_E3590((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (__int128 **)&v5) + 5) = 29;
  if (v4 < 0)
    operator delete(__p[0]);
  sub_9350(__p, "light");
  v5 = __p;
  *((_QWORD *)sub_E3590((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (__int128 **)&v5) + 5) = 30;
  if (v4 < 0)
    operator delete(__p[0]);
  sub_9350(__p, "dark");
  v5 = __p;
  *((_QWORD *)sub_E3590((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (__int128 **)&v5) + 5) = 31;
  if (v4 < 0)
    operator delete(__p[0]);
  sub_9350(__p, "auto");
  v5 = __p;
  *((_QWORD *)sub_E3590((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (__int128 **)&v5) + 5) = 32;
  if (v4 < 0)
    operator delete(__p[0]);
  sub_9350(__p, "inherit");
  v5 = __p;
  *((_QWORD *)sub_E3590((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (__int128 **)&v5) + 5) = 33;
  if (v4 < 0)
    operator delete(__p[0]);
  sub_9350(__p, "intrinsic");
  v5 = __p;
  *((_QWORD *)sub_E3590((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (__int128 **)&v5) + 5) = 34;
  if (v4 < 0)
    operator delete(__p[0]);
  sub_9350(__p, "grid");
  v5 = __p;
  *((_QWORD *)sub_E3590((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (__int128 **)&v5) + 5) = 35;
  if (v4 < 0)
    operator delete(__p[0]);
  sub_9350(__p, "content");
  v5 = __p;
  *((_QWORD *)sub_E3590((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (__int128 **)&v5) + 5) = 36;
  if (v4 < 0)
    operator delete(__p[0]);
  sub_9350(__p, "column");
  v5 = __p;
  *((_QWORD *)sub_E3590((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (__int128 **)&v5) + 5) = 37;
  if (v4 < 0)
    operator delete(__p[0]);
  sub_9350(__p, "r");
  v5 = __p;
  *((_QWORD *)sub_E3590((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (__int128 **)&v5) + 5) = 38;
  if (v4 < 0)
    operator delete(__p[0]);
  sub_9350(__p, "g");
  v5 = __p;
  *((_QWORD *)sub_E3590((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (__int128 **)&v5) + 5) = 39;
  if (v4 < 0)
    operator delete(__p[0]);
  sub_9350(__p, "b");
  v5 = __p;
  *((_QWORD *)sub_E3590((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (__int128 **)&v5) + 5) = 40;
  if (v4 < 0)
    operator delete(__p[0]);
  sub_9350(__p, "a");
  v5 = __p;
  *((_QWORD *)sub_E3590((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (__int128 **)&v5) + 5) = 41;
  if (v4 < 0)
    operator delete(__p[0]);
  sub_9350(__p, "contentSizeCategory");
  v5 = __p;
  *((_QWORD *)sub_E3590((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (__int128 **)&v5) + 5) = 42;
  if (v4 < 0)
    operator delete(__p[0]);
  sub_9350(__p, "x-small");
  v5 = __p;
  *((_QWORD *)sub_E3590((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (__int128 **)&v5) + 5) = 43;
  if (v4 < 0)
    operator delete(__p[0]);
  sub_9350(__p, "small");
  v5 = __p;
  *((_QWORD *)sub_E3590((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (__int128 **)&v5) + 5) = 44;
  if (v4 < 0)
    operator delete(__p[0]);
  sub_9350(__p, "medium");
  v5 = __p;
  *((_QWORD *)sub_E3590((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (__int128 **)&v5) + 5) = 45;
  if (v4 < 0)
    operator delete(__p[0]);
  sub_9350(__p, "x-large");
  v5 = __p;
  *((_QWORD *)sub_E3590((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (__int128 **)&v5) + 5) = 46;
  if (v4 < 0)
    operator delete(__p[0]);
  sub_9350(__p, "xx-large");
  v5 = __p;
  *((_QWORD *)sub_E3590((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (__int128 **)&v5) + 5) = 47;
  if (v4 < 0)
    operator delete(__p[0]);
  sub_9350(__p, "xxx-large");
  v5 = __p;
  *((_QWORD *)sub_E3590((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (__int128 **)&v5) + 5) = 48;
  if (v4 < 0)
    operator delete(__p[0]);
  sub_9350(__p, "ax-medium");
  v5 = __p;
  *((_QWORD *)sub_E3590((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (__int128 **)&v5) + 5) = 66;
  if (v4 < 0)
    operator delete(__p[0]);
  sub_9350(__p, "ax-large");
  v5 = __p;
  *((_QWORD *)sub_E3590((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (__int128 **)&v5) + 5) = 67;
  if (v4 < 0)
    operator delete(__p[0]);
  sub_9350(__p, "ax-x-large");
  v5 = __p;
  *((_QWORD *)sub_E3590((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (__int128 **)&v5) + 5) = 68;
  if (v4 < 0)
    operator delete(__p[0]);
  sub_9350(__p, "ax-xx-large");
  v5 = __p;
  *((_QWORD *)sub_E3590((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (__int128 **)&v5) + 5) = 69;
  if (v4 < 0)
    operator delete(__p[0]);
  sub_9350(__p, "ax-xxx-large");
  v5 = __p;
  *((_QWORD *)sub_E3590((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (__int128 **)&v5) + 5) = 70;
  if (v4 < 0)
    operator delete(__p[0]);
  sub_9350(__p, "contentsScale");
  v5 = __p;
  *((_QWORD *)sub_E3590((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (__int128 **)&v5) + 5) = 49;
  if (v4 < 0)
    operator delete(__p[0]);
  sub_9350(__p, "tintColor");
  v5 = __p;
  *((_QWORD *)sub_E3590((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (__int128 **)&v5) + 5) = 50;
  if (v4 < 0)
    operator delete(__p[0]);
  sub_9350(__p, "count");
  v5 = __p;
  *((_QWORD *)sub_E3590((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (__int128 **)&v5) + 5) = 51;
  if (v4 < 0)
    operator delete(__p[0]);
  sub_9350(__p, "index");
  v5 = __p;
  *((_QWORD *)sub_E3590((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (__int128 **)&v5) + 5) = 52;
  if (v4 < 0)
    operator delete(__p[0]);
  sub_9350(__p, "key");
  v5 = __p;
  *((_QWORD *)sub_E3590((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (__int128 **)&v5) + 5) = 53;
  if (v4 < 0)
    operator delete(__p[0]);
  sub_9350(__p, "first");
  v5 = __p;
  *((_QWORD *)sub_E3590((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (__int128 **)&v5) + 5) = 54;
  if (v4 < 0)
    operator delete(__p[0]);
  sub_9350(__p, "last");
  v5 = __p;
  *((_QWORD *)sub_E3590((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (__int128 **)&v5) + 5) = 55;
  if (v4 < 0)
    operator delete(__p[0]);
  sub_9350(__p, "left-to-right");
  v5 = __p;
  *((_QWORD *)sub_E3590((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (__int128 **)&v5) + 5) = 56;
  if (v4 < 0)
    operator delete(__p[0]);
  sub_9350(__p, "right-to-left");
  v5 = __p;
  *((_QWORD *)sub_E3590((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (__int128 **)&v5) + 5) = 57;
  if (v4 < 0)
    operator delete(__p[0]);
  sub_9350(__p, "layoutDirection");
  v5 = __p;
  *((_QWORD *)sub_E3590((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (__int128 **)&v5) + 5) = 58;
  if (v4 < 0)
    operator delete(__p[0]);
  sub_9350(__p, "color");
  v5 = __p;
  *((_QWORD *)sub_E3590((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (__int128 **)&v5) + 5) = 59;
  if (v4 < 0)
    operator delete(__p[0]);
  sub_9350(__p, "brightness");
  v5 = __p;
  *((_QWORD *)sub_E3590((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (__int128 **)&v5) + 5) = 60;
  if (v4 < 0)
    operator delete(__p[0]);
  sub_9350(__p, "translate");
  v5 = __p;
  *((_QWORD *)sub_E3590((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (__int128 **)&v5) + 5) = 61;
  if (v4 < 0)
    operator delete(__p[0]);
  sub_9350(__p, "scale");
  v5 = __p;
  *((_QWORD *)sub_E3590((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (__int128 **)&v5) + 5) = 62;
  if (v4 < 0)
    operator delete(__p[0]);
  sub_9350(__p, "rotate");
  v5 = __p;
  *((_QWORD *)sub_E3590((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (__int128 **)&v5) + 5) = 63;
  if (v4 < 0)
    operator delete(__p[0]);
  sub_9350(__p, "leading");
  v5 = __p;
  *((_QWORD *)sub_E3590((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (__int128 **)&v5) + 5) = 64;
  if (v4 < 0)
    operator delete(__p[0]);
  sub_9350(__p, "trailing");
  v5 = __p;
  *((_QWORD *)sub_E3590((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (__int128 **)&v5) + 5) = 65;
  if (v4 < 0)
    operator delete(__p[0]);
  sub_9350(__p, "spring");
  v5 = __p;
  *((_QWORD *)sub_E3590((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (__int128 **)&v5) + 5) = 71;
  if (v4 < 0)
    operator delete(__p[0]);
  sub_9350(__p, "mass");
  v5 = __p;
  *((_QWORD *)sub_E3590((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (__int128 **)&v5) + 5) = 72;
  if (v4 < 0)
    operator delete(__p[0]);
  sub_9350(__p, "stiffness");
  v5 = __p;
  *((_QWORD *)sub_E3590((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (__int128 **)&v5) + 5) = 73;
  if (v4 < 0)
    operator delete(__p[0]);
  sub_9350(__p, "damping");
  v5 = __p;
  *((_QWORD *)sub_E3590((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (__int128 **)&v5) + 5) = 74;
  if (v4 < 0)
    operator delete(__p[0]);
  sub_9350(__p, "x");
  v5 = __p;
  *((_QWORD *)sub_E3590((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (__int128 **)&v5) + 5) = 75;
  if (v4 < 0)
    operator delete(__p[0]);
  sub_9350(__p, "y");
  v5 = __p;
  *((_QWORD *)sub_E3590((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (__int128 **)&v5) + 5) = 76;
  if (v4 < 0)
    operator delete(__p[0]);
  sub_9350(__p, "angle");
  v5 = __p;
  *((_QWORD *)sub_E3590((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (__int128 **)&v5) + 5) = 77;
  if (v4 < 0)
    operator delete(__p[0]);
  sub_9350(__p, "identity");
  v5 = __p;
  *((_QWORD *)sub_E3590((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (__int128 **)&v5) + 5) = 78;
  if (v4 < 0)
    operator delete(__p[0]);
  sub_9350(__p, "default");
  v5 = __p;
  *((_QWORD *)sub_E3590((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (__int128 **)&v5) + 5) = 79;
  if (v4 < 0)
    operator delete(__p[0]);
  sub_9350(__p, "editing");
  v5 = __p;
  *((_QWORD *)sub_E3590((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (__int128 **)&v5) + 5) = 80;
  if (v4 < 0)
    operator delete(__p[0]);
  sub_9350(__p, "editingHasValue");
  v5 = __p;
  *((_QWORD *)sub_E3590((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (__int128 **)&v5) + 5) = 81;
  if (v4 < 0)
    operator delete(__p[0]);
  sub_9350(__p, "hasValue");
  v5 = __p;
  *((_QWORD *)sub_E3590((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (__int128 **)&v5) + 5) = 82;
  if (v4 < 0)
    operator delete(__p[0]);
  sub_9350(__p, "highlighted");
  v5 = __p;
  *((_QWORD *)sub_E3590((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (__int128 **)&v5) + 5) = 83;
  if (v4 < 0)
    operator delete(__p[0]);
  sub_9350(__p, "disabled");
  v5 = __p;
  *((_QWORD *)sub_E3590((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (__int128 **)&v5) + 5) = 84;
  if (v4 < 0)
    operator delete(__p[0]);
  sub_9350(__p, "state");
  v5 = __p;
  *((_QWORD *)sub_E3590((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (__int128 **)&v5) + 5) = 85;
  if (v4 < 0)
    operator delete(__p[0]);
  sub_9350(__p, "displayClass");
  v5 = __p;
  *((_QWORD *)sub_E3590((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (__int128 **)&v5) + 5) = 86;
  if (v4 < 0)
    operator delete(__p[0]);
  sub_9350(__p, "oled");
  v5 = __p;
  *((_QWORD *)sub_E3590((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (__int128 **)&v5) + 5) = 88;
  if (v4 < 0)
    operator delete(__p[0]);
  sub_9350(__p, "lcd");
  v5 = __p;
  *((_QWORD *)sub_E3590((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (__int128 **)&v5) + 5) = 87;
  if (v4 < 0)
    operator delete(__p[0]);
  sub_9350(__p, "ceil");
  v5 = __p;
  *((_QWORD *)sub_E3590((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (__int128 **)&v5) + 5) = 90;
  if (v4 < 0)
    operator delete(__p[0]);
  sub_9350(__p, "floor");
  v5 = __p;
  *((_QWORD *)sub_E3590((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (__int128 **)&v5) + 5) = 91;
  if (v4 < 0)
    operator delete(__p[0]);
  sub_9350(__p, "mod");
  v5 = __p;
  *((_QWORD *)sub_E3590((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (__int128 **)&v5) + 5) = 92;
  if (v4 < 0)
    operator delete(__p[0]);
  sub_9350(__p, "round");
  v5 = __p;
  *((_QWORD *)sub_E3590((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (__int128 **)&v5) + 5) = 93;
  if (v4 < 0)
    operator delete(__p[0]);
  sub_9350(__p, "v");
  v5 = __p;
  *((_QWORD *)sub_E3590((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (__int128 **)&v5) + 5) = 94;
  if (v4 < 0)
    operator delete(__p[0]);
  sub_9350(__p, "demoMode");
  v5 = __p;
  *((_QWORD *)sub_E3590((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (__int128 **)&v5) + 5) = 95;
  if (v4 < 0)
    operator delete(__p[0]);
  sub_9350(__p, "size");
  v5 = __p;
  *((_QWORD *)sub_E3590((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (__int128 **)&v5) + 5) = 96;
  if (v4 < 0)
    operator delete(__p[0]);
  sub_9350(__p, "insets");
  v5 = __p;
  *((_QWORD *)sub_E3590((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (__int128 **)&v5) + 5) = 97;
  if (v4 < 0)
    operator delete(__p[0]);
  sub_9350(__p, "length");
  v5 = __p;
  *((_QWORD *)sub_E3590((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (__int128 **)&v5) + 5) = 98;
  if (v4 < 0)
    operator delete(__p[0]);
  sub_9350(__p, "rgb");
  v5 = __p;
  *((_QWORD *)sub_E3590((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (__int128 **)&v5) + 5) = 99;
  if (v4 < 0)
    operator delete(__p[0]);
  sub_9350(__p, "rgba");
  v5 = __p;
  *((_QWORD *)sub_E3590((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (__int128 **)&v5) + 5) = 100;
  if (v4 < 0)
    operator delete(__p[0]);
  sub_9350(__p, "guide");
  v5 = __p;
  *((_QWORD *)sub_E3590((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (__int128 **)&v5) + 5) = 101;
  if (v4 < 0)
    operator delete(__p[0]);
  sub_9350(__p, "unknown");
  v5 = __p;
  *((_QWORD *)sub_E3590((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (__int128 **)&v5) + 5) = 102;
  if (v4 < 0)
    operator delete(__p[0]);
  sub_9350(__p, "none");
  v5 = __p;
  *((_QWORD *)sub_E3590((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (__int128 **)&v5) + 5) = 103;
  if (v4 < 0)
    operator delete(__p[0]);
  sub_9350(__p, "pointSize");
  v5 = __p;
  *((_QWORD *)sub_E3590((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (__int128 **)&v5) + 5) = 104;
  if (v4 < 0)
    operator delete(__p[0]);
  sub_9350(__p, "lightColor");
  v5 = __p;
  *((_QWORD *)sub_E3590((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (__int128 **)&v5) + 5) = 105;
  if (v4 < 0)
    operator delete(__p[0]);
  sub_9350(__p, "darkColor");
  v5 = __p;
  *((_QWORD *)sub_E3590((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (__int128 **)&v5) + 5) = 106;
  if (v4 < 0)
    operator delete(__p[0]);
  sub_9350(__p, "mac");
  v5 = __p;
  *((_QWORD *)sub_E3590((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (__int128 **)&v5) + 5) = 107;
  if (v4 < 0)
    operator delete(__p[0]);
  sub_9350(__p, "active");
  v5 = __p;
  *((_QWORD *)sub_E3590((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (__int128 **)&v5) + 5) = 108;
  if (v4 < 0)
    operator delete(__p[0]);
  sub_9350(__p, "inactive");
  v5 = __p;
  *((_QWORD *)sub_E3590((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (__int128 **)&v5) + 5) = 109;
  if (v4 < 0)
    operator delete(__p[0]);
  sub_9350(__p, "activeAppearance");
  v5 = __p;
  *((_QWORD *)sub_E3590((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (__int128 **)&v5) + 5) = 110;
  if (v4 < 0)
    operator delete(__p[0]);
  sub_9350(__p, "intrinsic-unclamped");
  v5 = __p;
  *((_QWORD *)sub_E3590((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (__int128 **)&v5) + 5) = 111;
  if (v4 < 0)
    operator delete(__p[0]);
  sub_9350(__p, "strcat");
  v5 = __p;
  *((_QWORD *)sub_E3590((uint64_t)this, (unsigned __int8 *)__p, (uint64_t)&std::piecewise_construct, (__int128 **)&v5) + 5) = 112;
  if (v4 < 0)
    operator delete(__p[0]);
  return this;
}

void sub_E2284(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  uint64_t v15;
  uint64_t v16;
  void **v17;
  void *v19;

  if (a15 < 0)
    operator delete(__p);
  sub_92D4(v16);
  sub_E3514(v15 + 128);
  sub_E3488((void ***)&__p);
  sub_E340C(v15 + 64);
  v19 = *v17;
  if (*v17)
  {
    *(_QWORD *)(v15 + 48) = v19;
    operator delete(v19);
  }
  sub_E340C(v15);
  _Unwind_Resume(a1);
}

void TUI::Symbol::Tab::~Tab(TUI::Symbol::Tab *this)
{
  void *v2;
  void **v3;

  sub_92D4((uint64_t)this + 168);
  sub_E3514((uint64_t)this + 128);
  v3 = (void **)((char *)this + 104);
  sub_E3488(&v3);
  sub_E340C((uint64_t)this + 64);
  v2 = (void *)*((_QWORD *)this + 5);
  if (v2)
  {
    *((_QWORD *)this + 6) = v2;
    operator delete(v2);
  }
  sub_E340C((uint64_t)this);
}

uint64_t TUI::Symbol::Tab::lookup(uint64_t a1, unsigned __int8 *a2)
{
  unsigned __int8 *v2;

  v2 = sub_E3DB0((_QWORD *)(a1 + 64), a2);
  if (v2)
    return *((unsigned __int16 *)v2 + 20);
  else
    return 0xFFFFLL;
}

uint64_t TUI::Symbol::Tab::lookup(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;

  if (*(_QWORD *)(a2 + 8) == *(_QWORD *)a2)
    return 0;
  v2 = sub_E3EB0((_QWORD *)(a1 + 128), (unsigned __int16 **)a2);
  if (v2)
    return *((unsigned __int16 *)v2 + 20);
  else
    return 0xFFFFLL;
}

uint64_t TUI::Symbol::Tab::lookupEntry(uint64_t a1, char *a2)
{
  char *v3;
  _QWORD *v4;
  char *v5;
  char *v6;
  unsigned __int8 *v7;
  int v8;
  char *v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  __int16 v18;
  _QWORD *v19;
  int v20;
  int v21;
  int v22;
  unsigned __int8 *v23;
  int v24;
  void *__p[2];
  char v27;
  void *v28;
  char *v29;
  char *v30;

  v28 = 0;
  v29 = 0;
  v30 = 0;
  if (a2[23] >= 0)
    v3 = a2;
  else
    v3 = *(char **)a2;
  v4 = (_QWORD *)(a1 + 64);
  v5 = strchr(v3, 58);
  if (v5)
  {
    v6 = v5;
    while (v6[1] == 58)
    {
      sub_E3364(__p, v3, v6 - v3);
      v7 = sub_E3DB0(v4, (unsigned __int8 *)__p);
      if (v7)
        v8 = *((unsigned __int16 *)v7 + 20);
      else
        v8 = 0xFFFF;
      if (v27 < 0)
        operator delete(__p[0]);
      if (v8 == 0xFFFF)
        break;
      v9 = v29;
      if (v29 >= v30)
      {
        v11 = (char *)v28;
        v12 = v29 - (_BYTE *)v28;
        if (v29 - (_BYTE *)v28 <= -3)
          sub_6F9C();
        v13 = v12 >> 1;
        if (v30 - (_BYTE *)v28 <= (unint64_t)((v12 >> 1) + 1))
          v14 = v13 + 1;
        else
          v14 = v30 - (_BYTE *)v28;
        if ((unint64_t)(v30 - (_BYTE *)v28) >= 0x7FFFFFFFFFFFFFFELL)
          v15 = 0x7FFFFFFFFFFFFFFFLL;
        else
          v15 = v14;
        if (v15)
        {
          v16 = (char *)sub_9414((uint64_t)&v30, v15);
          v11 = (char *)v28;
          v9 = v29;
        }
        else
        {
          v16 = 0;
        }
        v17 = &v16[2 * v13];
        *(_WORD *)v17 = v8;
        v10 = v17 + 2;
        while (v9 != v11)
        {
          v18 = *((_WORD *)v9 - 1);
          v9 -= 2;
          *((_WORD *)v17 - 1) = v18;
          v17 -= 2;
        }
        v28 = v17;
        v29 = v10;
        v30 = &v16[2 * v15];
        if (v11)
          operator delete(v11);
      }
      else
      {
        *(_WORD *)v29 = v8;
        v10 = v9 + 2;
      }
      v29 = v10;
      v3 = v6 + 2;
      v6 = strchr(v6 + 2, 58);
      if (!v6)
        goto LABEL_33;
    }
    goto LABEL_36;
  }
  v10 = 0;
LABEL_33:
  if (v10 == v28)
  {
    v20 = 0;
  }
  else
  {
    v19 = sub_E3EB0((_QWORD *)(a1 + 128), (unsigned __int16 **)&v28);
    if (!v19 || (v20 = *((unsigned __int16 *)v19 + 20), v20 == 0xFFFF))
    {
LABEL_36:
      v21 = 0;
      v22 = -65536;
      goto LABEL_47;
    }
  }
  sub_9350(__p, v3);
  v23 = sub_E3DB0(v4, (unsigned __int8 *)__p);
  if (v23)
    v24 = *((unsigned __int16 *)v23 + 20);
  else
    v24 = 0xFFFF;
  if (v27 < 0)
    operator delete(__p[0]);
  if (v24 == 0xFFFF)
    v21 = 0;
  else
    v21 = v20;
  v22 = v24 << 16;
LABEL_47:
  if (v28)
  {
    v29 = (char *)v28;
    operator delete(v28);
  }
  return v21 | v22;
}

void sub_E2970(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16)
{
  if (a14 < 0)
    operator delete(__p);
  if (a15)
    operator delete(a15);
  _Unwind_Resume(exception_object);
}

id TUI::Symbol::Tab::string(TUI::Symbol::Tab *this, unsigned int a2)
{
  uint64_t v2;
  uint64_t *v3;
  void *v4;

  v2 = *((_QWORD *)this + 13);
  if (0xAAAAAAAAAAAAAAABLL * ((*((_QWORD *)this + 14) - v2) >> 3) <= a2)
  {
    v4 = 0;
  }
  else
  {
    v3 = (uint64_t *)(v2 + 24 * a2);
    if (*((char *)v3 + 23) < 0)
      v3 = (uint64_t *)*v3;
    v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", v3));
  }
  return v4;
}

id TUI::Symbol::Tab::string(TUI::Symbol::Tab *this, unint64_t a2)
{
  int v3;
  unint64_t v4;
  NSMutableString *v5;
  char *v6;
  unsigned __int16 *i;
  id v8;
  uint64_t v9;
  void *v10;
  id v11;
  void *v12;
  id v13;

  v3 = (unsigned __int16)a2;
  v4 = a2 >> 16;
  v5 = objc_opt_new(NSMutableString);
  v6 = (char *)this + 144;
  while (1)
  {
    v6 = *(char **)v6;
    if (!v6)
      break;
    if (*((unsigned __int16 *)v6 + 20) == v3)
    {
      for (i = (unsigned __int16 *)*((_QWORD *)v6 + 2); i != *((unsigned __int16 **)v6 + 3); ++i)
      {
        v8 = TUI::Symbol::Tab::string(this, *i);
        v9 = objc_claimAutoreleasedReturnValue(v8);
        v10 = (void *)v9;
        if (v9)
          -[NSMutableString appendFormat:](v5, "appendFormat:", CFSTR("%@::"), v9);

      }
      break;
    }
  }
  v11 = TUI::Symbol::Tab::string(this, (unsigned __int16)v4);
  v12 = (void *)objc_claimAutoreleasedReturnValue(v11);
  if (v12)
    -[NSMutableString appendString:](v5, "appendString:", v12);
  v13 = -[NSMutableString copy](v5, "copy");

  return v13;
}

void sub_E2B10(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

std::string *TUI::Symbol::Tab::std_string@<X0>(std::string *this@<X0>, Entry a2@<0:W1>, std::string *a3@<X8>)
{
  unsigned __int16 var1;
  std::string *v4;
  std::string *v6;
  unsigned __int16 *i;
  unsigned __int16 *v8;
  std::string::size_type size;
  std::string::size_type v10;
  int v11;
  const std::string::value_type *v12;
  std::string::size_type v13;
  std::string::size_type v14;
  std::string::size_type v15;
  int v16;
  const std::string::value_type *v17;
  std::string::size_type v18;

  var1 = a2.var1;
  v4 = this;
  a3->__r_.__value_.__r.__words[0] = 0;
  a3->__r_.__value_.__l.__size_ = 0;
  a3->__r_.__value_.__r.__words[2] = 0;
  v6 = this + 6;
  while (1)
  {
    v6 = (std::string *)v6->__r_.__value_.__r.__words[0];
    if (!v6)
      break;
    if (LOWORD(v6[1].__r_.__value_.__r.__words[2]) == a2.var0)
    {
      v8 = (unsigned __int16 *)v6->__r_.__value_.__r.__words[2];
      for (i = (unsigned __int16 *)v6[1].__r_.__value_.__l.__data_; v8 != i; ++v8)
      {
        size = v4[4].__r_.__value_.__l.__size_;
        if (0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v4[4].__r_.__value_.__r.__words[2] - size) >> 3) > *v8)
        {
          v10 = size + 24 * *v8;
          v11 = *(char *)(v10 + 23);
          if (v11 >= 0)
            v12 = (const std::string::value_type *)v10;
          else
            v12 = *(const std::string::value_type **)v10;
          if (v11 >= 0)
            v13 = *(unsigned __int8 *)(v10 + 23);
          else
            v13 = *(_QWORD *)(v10 + 8);
          std::string::append(a3, v12, v13);
          this = std::string::append(a3, "::");
          i = (unsigned __int16 *)v6[1].__r_.__value_.__l.__data_;
        }
      }
      break;
    }
  }
  v14 = v4[4].__r_.__value_.__l.__size_;
  if (0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v4[4].__r_.__value_.__r.__words[2] - v14) >> 3) > var1)
  {
    v15 = v14 + 24 * var1;
    v16 = *(char *)(v15 + 23);
    if (v16 >= 0)
      v17 = (const std::string::value_type *)v15;
    else
      v17 = *(const std::string::value_type **)v15;
    if (v16 >= 0)
      v18 = *(unsigned __int8 *)(v15 + 23);
    else
      v18 = *(_QWORD *)(v15 + 8);
    return std::string::append(a3, v17, v18);
  }
  return this;
}

void sub_E2C68(_Unwind_Exception *exception_object)
{
  uint64_t v1;

  if (*(char *)(v1 + 23) < 0)
    operator delete(*(void **)v1);
  _Unwind_Resume(exception_object);
}

uint64_t TUI::Symbol::Tab::loadSymbol(uint64_t a1, unsigned int a2, unsigned __int8 *a3)
{
  uint64_t v5;
  unsigned __int8 *v6;
  uint64_t v7;
  id v8;
  NSObject *v9;
  unsigned __int8 *v11;
  _BYTE buf[12];
  __int16 v13;
  uint64_t v14;
  __int16 v15;
  uint64_t v16;

  v5 = a1 + 64;
  v6 = sub_E3FD4((_QWORD *)(a1 + 64), a3);
  if (!v6)
  {
    *(_QWORD *)buf = a3;
    *((_WORD *)sub_E40D4(v5, a3, (uint64_t)&std::piecewise_construct, (__int128 **)buf) + 20) = a2;
    return 1;
  }
  v7 = *((unsigned __int16 *)v6 + 20);
  if ((_DWORD)v7 == a2)
    return 1;
  v8 = TUIDefaultLog();
  v9 = objc_claimAutoreleasedReturnValue(v8);
  if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
  {
    if ((a3[23] & 0x80u) == 0)
      v11 = a3;
    else
      v11 = *(unsigned __int8 **)a3;
    *(_DWORD *)buf = 136446722;
    *(_QWORD *)&buf[4] = v11;
    v13 = 2048;
    v14 = a2;
    v15 = 2048;
    v16 = v7;
    _os_log_error_impl(&dword_0, v9, OS_LOG_TYPE_ERROR, "symbol:%{public}s index:%lu already exists with index:%lu", buf, 0x20u);
  }

  return 0;
}

BOOL TUI::Symbol::Tab::endSymbolLoading(TUI::Symbol::Tab *this)
{
  char *v2;
  uint64_t *i;
  unsigned __int8 *v4;
  uint64_t *v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t *j;
  std::string __p;
  uint64_t v12;

  v2 = (char *)this + 40;
  sub_E2FB0((uint64_t)this + 40, 0x71uLL, &word_22F5F0);
  for (i = (uint64_t *)*((_QWORD *)this + 2); i; i = (uint64_t *)*i)
  {
    if (*((char *)i + 39) < 0)
      sub_14998(&__p, (void *)i[2], i[3]);
    else
      __p = *(std::string *)(i + 2);
    v12 = i[5];
    v4 = sub_E3FD4((_QWORD *)this + 8, (unsigned __int8 *)&__p);
    if (v4)
      *(_WORD *)(*(_QWORD *)v2 + 2 * v12) = *((_WORD *)v4 + 20);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
  }
  v5 = (uint64_t *)*((_QWORD *)this + 10);
  if (v5)
  {
    LOWORD(v6) = 0;
    do
    {
      if (*((char *)v5 + 39) < 0)
        sub_14998(&__p, (void *)v5[2], v5[3]);
      else
        __p = *(std::string *)(v5 + 2);
      LOWORD(v12) = *((_WORD *)v5 + 20);
      if ((unsigned __int16)v6 <= (unsigned __int16)v12)
        v6 = (unsigned __int16)v12;
      else
        v6 = (unsigned __int16)v6;
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
        operator delete(__p.__r_.__value_.__l.__data_);
      v5 = (uint64_t *)*v5;
    }
    while (v5);
    v7 = v6 + 1;
  }
  else
  {
    v7 = 1;
  }
  v8 = (_QWORD *)((char *)this + 104);
  sub_9350(&__p, "-");
  sub_E2FE0((uint64_t *)this + 13, v7, (__int128 *)&__p);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  for (j = (uint64_t *)*((_QWORD *)this + 10); j; j = (uint64_t *)*j)
  {
    if (*((char *)j + 39) < 0)
      sub_14998(&__p, (void *)j[2], j[3]);
    else
      __p = *(std::string *)(j + 2);
    LOWORD(v12) = *((_WORD *)j + 20);
    std::string::operator=((std::string *)(*v8 + 24 * (unsigned __int16)v12), &__p);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
  }
  return *(__int16 *)(*(_QWORD *)v2 + 16) != -1;
}

void sub_E2F8C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_E2FB0(uint64_t a1, unint64_t a2, _WORD *a3)
{
  unint64_t v3;

  v3 = (uint64_t)(*(_QWORD *)(a1 + 8) - *(_QWORD *)a1) >> 1;
  if (a2 <= v3)
  {
    if (a2 < v3)
      *(_QWORD *)(a1 + 8) = *(_QWORD *)a1 + 2 * a2;
  }
  else
  {
    sub_E4410((void **)a1, a2 - v3, a3);
  }
}

void sub_E2FE0(uint64_t *a1, unint64_t a2, __int128 *a3)
{
  uint64_t v4;
  unint64_t v5;
  BOOL v6;
  unint64_t v7;
  uint64_t v8;

  v4 = a1[1];
  v5 = 0xAAAAAAAAAAAAAAABLL * ((v4 - *a1) >> 3);
  v6 = a2 >= v5;
  v7 = a2 - v5;
  if (v7 != 0 && v6)
  {
    sub_E4518(a1, v7, a3);
  }
  else if (!v6)
  {
    v8 = *a1 + 24 * a2;
    while (v4 != v8)
    {
      if (*(char *)(v4 - 1) < 0)
        operator delete(*(void **)(v4 - 24));
      v4 -= 24;
    }
    a1[1] = v8;
  }
}

void TUI::Symbol::Tab::beginNSLoading(TUI::Symbol::Tab *this)
{
  __int16 v2;
  char *v3;
  _WORD *v4;
  char *v5;
  _QWORD *v6;
  void *v7;
  _QWORD *v8;
  _WORD *v9;
  _QWORD *v10;
  void *v11;
  void *__p;
  void *v13;
  _WORD *v14;
  void **p_p;

  v2 = *(_WORD *)(*((_QWORD *)this + 5) + 16);
  v3 = (char *)this + 128;
  __p = 0;
  v13 = 0;
  v14 = 0;
  p_p = &__p;
  *((_WORD *)sub_E4930((uint64_t)this + 128, (unsigned __int16 **)&__p, (uint64_t)&std::piecewise_construct, (uint64_t *)&p_p)+ 20) = 0;
  if (__p)
  {
    v13 = __p;
    operator delete(__p);
  }
  v4 = operator new(2uLL);
  __p = v4;
  *v4 = v2;
  v13 = v4 + 1;
  v14 = v4 + 1;
  p_p = &__p;
  *((_WORD *)sub_E4930((uint64_t)v3, (unsigned __int16 **)&__p, (uint64_t)&std::piecewise_construct, (uint64_t *)&p_p) + 20) = 1;
  if (__p)
  {
    v13 = __p;
    operator delete(__p);
  }
  v5 = (char *)this + 168;
  __p = &word_22F5F2;
  v6 = sub_E4C64((uint64_t)v5, &word_22F5F2, (uint64_t)&std::piecewise_construct, (_WORD **)&__p);
  v8 = v6 + 3;
  v7 = (void *)v6[3];
  if (v7)
  {
    v6[4] = v7;
    operator delete(v7);
    *v8 = 0;
    v8[1] = 0;
    v8[2] = 0;
  }
  *v8 = 0;
  v8[1] = 0;
  v8[2] = 0;
  v9 = operator new(2uLL);
  *v9 = v2;
  __p = &word_22F5F4;
  v10 = sub_E4C64((uint64_t)v5, &word_22F5F4, (uint64_t)&std::piecewise_construct, (_WORD **)&__p);
  v11 = (void *)v10[3];
  if (v11)
  {
    v10[4] = v11;
    operator delete(v11);
    v10[3] = 0;
    v10[4] = 0;
    v10[5] = 0;
  }
  v10[3] = v9;
  v10[4] = v9 + 1;
  v10[5] = v9 + 1;
}

void sub_E31E4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  void *v11;

  operator delete(v11);
  _Unwind_Resume(a1);
}

uint64_t TUI::Symbol::Tab::loadNS(uint64_t a1, unsigned __int16 a2, uint64_t a3)
{
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t **v8;
  BOOL v9;
  uint64_t *v10;
  uint64_t **v11;
  size_t v12;
  id v14;
  NSObject *v15;
  unsigned __int16 v17;
  char *v18;
  unsigned __int16 v19;
  unsigned __int16 *v20;

  v19 = a2;
  v5 = a1 + 128;
  v6 = sub_E4F04((_QWORD *)(a1 + 128), (unsigned __int16 **)a3);
  v7 = (_QWORD *)(a1 + 168);
  v8 = sub_1529C(v7, &v19);
  if (!v6)
  {
    if (!v8)
    {
      v17 = v19;
      v20 = (unsigned __int16 *)a3;
      *((_WORD *)sub_E5028(v5, (unsigned __int16 **)a3, (uint64_t)&std::piecewise_construct, (uint64_t *)&v20) + 20) = v17;
      v20 = &v19;
      v18 = (char *)(sub_E4C64((uint64_t)v7, &v19, (uint64_t)&std::piecewise_construct, &v20) + 3);
      if (v18 != (char *)a3)
        sub_E53DC(v18, *(char **)a3, *(_QWORD *)(a3 + 8), (uint64_t)(*(_QWORD *)(a3 + 8) - *(_QWORD *)a3) >> 1);
      return 1;
    }
    v9 = 1;
LABEL_6:
    v11 = v8 + 3;
    v10 = v8[3];
    v12 = (char *)v11[1] - (char *)v10;
    if (v12 != *(_QWORD *)(a3 + 8) - *(_QWORD *)a3)
      goto LABEL_11;
    if (memcmp(v10, *(const void **)a3, v12) || v9)
      goto LABEL_11;
    return 1;
  }
  v9 = *((unsigned __int16 *)v6 + 20) != v19;
  if (v8)
    goto LABEL_6;
LABEL_11:
  v14 = TUIDefaultLog();
  v15 = objc_claimAutoreleasedReturnValue(v14);
  if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
    sub_17EA2C(&v19, v15);

  return 0;
}

uint64_t TUI::Symbol::Tab::endNSLoading(TUI::Symbol::Tab *this)
{
  return 1;
}

_QWORD *sub_E3364(_QWORD *__dst, void *__src, size_t __len)
{
  void *v6;
  size_t v7;
  size_t v8;

  if (__len >= 0x7FFFFFFFFFFFFFF8)
    sub_9400();
  if (__len >= 0x17)
  {
    v7 = (__len & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((__len | 7) != 0x17)
      v7 = __len | 7;
    v8 = v7 + 1;
    v6 = operator new(v7 + 1);
    __dst[1] = __len;
    __dst[2] = v8 | 0x8000000000000000;
    *__dst = v6;
  }
  else
  {
    *((_BYTE *)__dst + 23) = __len;
    v6 = __dst;
    if (!__len)
      goto LABEL_9;
  }
  memmove(v6, __src, __len);
LABEL_9:
  *((_BYTE *)v6 + __len) = 0;
  return __dst;
}

uint64_t sub_E340C(uint64_t a1)
{
  void *v2;

  sub_E3444(a1, *(void ***)(a1 + 16));
  v2 = *(void **)a1;
  *(_QWORD *)a1 = 0;
  if (v2)
    operator delete(v2);
  return a1;
}

void sub_E3444(int a1, void **__p)
{
  void **v2;
  void **v3;

  if (__p)
  {
    v2 = __p;
    do
    {
      v3 = (void **)*v2;
      if (*((char *)v2 + 39) < 0)
        operator delete(v2[2]);
      operator delete(v2);
      v2 = v3;
    }
    while (v3);
  }
}

void sub_E3488(void ***a1)
{
  void **v2;

  v2 = *a1;
  if (*v2)
  {
    sub_E34C8((uint64_t *)v2);
    operator delete(**a1);
  }
}

void sub_E34C8(uint64_t *a1)
{
  uint64_t v2;
  uint64_t i;

  v2 = *a1;
  for (i = a1[1]; i != v2; i -= 24)
  {
    if (*(char *)(i - 1) < 0)
      operator delete(*(void **)(i - 24));
  }
  a1[1] = v2;
}

uint64_t sub_E3514(uint64_t a1)
{
  void *v2;

  sub_E354C(a1, *(_QWORD **)(a1 + 16));
  v2 = *(void **)a1;
  *(_QWORD *)a1 = 0;
  if (v2)
    operator delete(v2);
  return a1;
}

void sub_E354C(int a1, _QWORD *__p)
{
  _QWORD *v2;
  _QWORD *v3;
  void *v4;

  if (__p)
  {
    v2 = __p;
    do
    {
      v3 = (_QWORD *)*v2;
      v4 = (void *)v2[2];
      if (v4)
      {
        v2[3] = v4;
        operator delete(v4);
      }
      operator delete(v2);
      v2 = v3;
    }
    while (v3);
  }
}

void *sub_E3590(uint64_t a1, unsigned __int8 *a2, uint64_t a3, __int128 **a4)
{
  unint64_t v4;
  _QWORD *v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint8x8_t v12;
  unint64_t v13;
  void **v14;
  void *i;
  unint64_t v16;
  _QWORD *v17;
  __int128 *v18;
  __int128 v19;
  float v20;
  float v21;
  _BOOL8 v22;
  unint64_t v23;
  unint64_t v24;
  size_t v25;
  uint64_t v26;
  _QWORD *v27;
  unint64_t v28;

  v8 = (_QWORD *)(a1 + 24);
  v9 = sub_E3818(a1 + 24, (uint64_t)a2);
  v10 = v9;
  v11 = *(_QWORD *)(a1 + 8);
  if (v11)
  {
    v12 = (uint8x8_t)vcnt_s8((int8x8_t)v11);
    v12.i16[0] = vaddlv_u8(v12);
    v13 = v12.u32[0];
    if (v12.u32[0] > 1uLL)
    {
      v4 = v9;
      if (v9 >= v11)
        v4 = v9 % v11;
    }
    else
    {
      v4 = (v11 - 1) & v9;
    }
    v14 = *(void ***)(*(_QWORD *)a1 + 8 * v4);
    if (v14)
    {
      for (i = *v14; i; i = *(void **)i)
      {
        v16 = *((_QWORD *)i + 1);
        if (v16 == v10)
        {
          if ((sub_E3CC0(a1 + 32, (unsigned __int8 *)i + 16, a2) & 1) != 0)
            return i;
        }
        else
        {
          if (v13 > 1)
          {
            if (v16 >= v11)
              v16 %= v11;
          }
          else
          {
            v16 &= v11 - 1;
          }
          if (v16 != v4)
            break;
        }
      }
    }
  }
  v17 = (_QWORD *)(a1 + 16);
  i = operator new(0x30uLL);
  *(_QWORD *)i = 0;
  *((_QWORD *)i + 1) = v10;
  v18 = *a4;
  v19 = **a4;
  *((_QWORD *)i + 4) = *((_QWORD *)*a4 + 2);
  *((_OWORD *)i + 1) = v19;
  *((_QWORD *)v18 + 1) = 0;
  *((_QWORD *)v18 + 2) = 0;
  *(_QWORD *)v18 = 0;
  *((_QWORD *)i + 5) = 0;
  v20 = (float)(unint64_t)(*(_QWORD *)(a1 + 24) + 1);
  v21 = *(float *)(a1 + 32);
  if (!v11 || (float)(v21 * (float)v11) < v20)
  {
    v22 = 1;
    if (v11 >= 3)
      v22 = (v11 & (v11 - 1)) != 0;
    v23 = v22 | (2 * v11);
    v24 = vcvtps_u32_f32(v20 / v21);
    if (v23 <= v24)
      v25 = v24;
    else
      v25 = v23;
    sub_6A20(a1, v25);
    v11 = *(_QWORD *)(a1 + 8);
    if ((v11 & (v11 - 1)) != 0)
    {
      if (v10 >= v11)
        v4 = v10 % v11;
      else
        v4 = v10;
    }
    else
    {
      v4 = (v11 - 1) & v10;
    }
  }
  v26 = *(_QWORD *)a1;
  v27 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v4);
  if (v27)
  {
    *(_QWORD *)i = *v27;
LABEL_38:
    *v27 = i;
    goto LABEL_39;
  }
  *(_QWORD *)i = *v17;
  *v17 = i;
  *(_QWORD *)(v26 + 8 * v4) = v17;
  if (*(_QWORD *)i)
  {
    v28 = *(_QWORD *)(*(_QWORD *)i + 8);
    if ((v11 & (v11 - 1)) != 0)
    {
      if (v28 >= v11)
        v28 %= v11;
    }
    else
    {
      v28 &= v11 - 1;
    }
    v27 = (_QWORD *)(*(_QWORD *)a1 + 8 * v28);
    goto LABEL_38;
  }
LABEL_39:
  ++*v8;
  return i;
}

void sub_E37FC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  void **v10;
  uint64_t v11;

  sub_E3D64(v11, v10);
  _Unwind_Resume(a1);
}

unint64_t sub_E3818(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;
  char v5;

  v2 = *(_QWORD *)(a2 + 8);
  if (*(char *)(a2 + 23) >= 0)
  {
    v3 = *(unsigned __int8 *)(a2 + 23);
  }
  else
  {
    a2 = *(_QWORD *)a2;
    v3 = v2;
  }
  return sub_E3854((uint64_t)&v5, (uint64_t *)a2, v3);
}

unint64_t sub_E3854(uint64_t a1, uint64_t *a2, unint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;

  if (a3 > 0x20)
  {
    if (a3 > 0x40)
    {
      v4 = *(uint64_t *)((char *)a2 + a3 - 48);
      v5 = *(uint64_t *)((char *)a2 + a3 - 40);
      v6 = *(uint64_t *)((char *)a2 + a3 - 24);
      v8 = *(uint64_t *)((char *)a2 + a3 - 64);
      v7 = *(uint64_t *)((char *)a2 + a3 - 56);
      v9 = *(uint64_t *)((char *)a2 + a3 - 16);
      v10 = *(uint64_t *)((char *)a2 + a3 - 8);
      v11 = v7 + v9;
      v12 = 0x9DDFEA08EB382D69
          * (v6 ^ ((0x9DDFEA08EB382D69 * (v6 ^ (v4 + a3))) >> 47) ^ (0x9DDFEA08EB382D69 * (v6 ^ (v4 + a3))));
      v13 = 0x9DDFEA08EB382D69 * (v12 ^ (v12 >> 47));
      v14 = v8 + a3 + v7 + v4;
      v15 = v14 + v5;
      v16 = __ROR8__(v14, 44) + v8 + a3 + __ROR8__(v5 + v8 + a3 - 0x622015F714C7D297 * (v12 ^ (v12 >> 47)), 21);
      v17 = v7 + v9 + *(uint64_t *)((char *)a2 + a3 - 32) - 0x4B6D499041670D8DLL;
      v18 = v17 + v6 + v9;
      v19 = __ROR8__(v18, 44);
      v20 = v18 + v10;
      v21 = v19 + v17 + __ROR8__(v17 + v5 + v10, 21);
      v23 = *a2;
      v22 = a2 + 4;
      v24 = v23 - 0x4B6D499041670D8DLL * v5;
      v25 = -(uint64_t)((a3 - 1) & 0xFFFFFFFFFFFFFFC0);
      do
      {
        v26 = *(v22 - 3);
        v27 = v24 + v15 + v11 + v26;
        v28 = v22[2];
        v29 = v22[3];
        v30 = v22[1];
        v11 = v30 + v15 - 0x4B6D499041670D8DLL * __ROR8__(v11 + v16 + v28, 42);
        v31 = v13 + v20;
        v32 = *(v22 - 2);
        v33 = *(v22 - 1);
        v34 = *(v22 - 4) - 0x4B6D499041670D8DLL * v16;
        v35 = v34 + v20 + v33;
        v36 = v34 + v26 + v32;
        v15 = v36 + v33;
        v37 = __ROR8__(v36, 44) + v34;
        v38 = (0xB492B66FBE98F273 * __ROR8__(v27, 37)) ^ v21;
        v24 = 0xB492B66FBE98F273 * __ROR8__(v31, 33);
        v16 = v37 + __ROR8__(v35 + v38, 21);
        v39 = v24 + v21 + *v22;
        v20 = v39 + v30 + v28 + v29;
        v21 = __ROR8__(v39 + v30 + v28, 44) + v39 + __ROR8__(v11 + v32 + v39 + v29, 21);
        v22 += 8;
        v13 = v38;
        v25 += 64;
      }
      while (v25);
      v40 = v24
          - 0x622015F714C7D297
          * ((0x9DDFEA08EB382D69
            * (v21 ^ ((0x9DDFEA08EB382D69 * (v21 ^ v16)) >> 47) ^ (0x9DDFEA08EB382D69 * (v21 ^ v16)))) ^ ((0x9DDFEA08EB382D69 * (v21 ^ ((0x9DDFEA08EB382D69 * (v21 ^ v16)) >> 47) ^ (0x9DDFEA08EB382D69 * (v21 ^ v16)))) >> 47));
      v41 = 0x9DDFEA08EB382D69
          * (v40 ^ (v38
                  - 0x4B6D499041670D8DLL * (v11 ^ (v11 >> 47))
                  - 0x622015F714C7D297
                  * ((0x9DDFEA08EB382D69
                    * (v20 ^ ((0x9DDFEA08EB382D69 * (v20 ^ v15)) >> 47) ^ (0x9DDFEA08EB382D69 * (v20 ^ v15)))) ^ ((0x9DDFEA08EB382D69 * (v20 ^ ((0x9DDFEA08EB382D69 * (v20 ^ v15)) >> 47) ^ (0x9DDFEA08EB382D69 * (v20 ^ v15)))) >> 47))));
      return 0x9DDFEA08EB382D69
           * ((0x9DDFEA08EB382D69 * (v40 ^ (v41 >> 47) ^ v41)) ^ ((0x9DDFEA08EB382D69 * (v40 ^ (v41 >> 47) ^ v41)) >> 47));
    }
    else
    {
      return sub_E3C00(a2, a3);
    }
  }
  else if (a3 > 0x10)
  {
    return sub_E3B54(a2, a3);
  }
  else
  {
    return sub_E3A5C(a2, a3);
  }
}

unint64_t sub_E3A5C(_DWORD *a1, unint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t result;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;

  if (a2 < 9)
  {
    if (a2 < 4)
    {
      result = 0x9AE16A3B2F90404FLL;
      if (a2)
      {
        v8 = (0xC949D7C7509E6557 * (a2 + 4 * *((unsigned __int8 *)a1 + a2 - 1))) ^ (0x9AE16A3B2F90404FLL
                                                                                      * (*(unsigned __int8 *)a1 | ((unint64_t)*((unsigned __int8 *)a1 + (a2 >> 1)) << 8)));
        return 0x9AE16A3B2F90404FLL * (v8 ^ (v8 >> 47));
      }
    }
    else
    {
      v6 = *(unsigned int *)((char *)a1 + a2 - 4);
      v7 = 0x9DDFEA08EB382D69 * (((8 * *a1) + a2) ^ v6);
      return 0x9DDFEA08EB382D69
           * ((0x9DDFEA08EB382D69 * (v6 ^ (v7 >> 47) ^ v7)) ^ ((0x9DDFEA08EB382D69 * (v6 ^ (v7 >> 47) ^ v7)) >> 47));
    }
  }
  else
  {
    v3 = *(_QWORD *)((char *)a1 + a2 - 8);
    v4 = __ROR8__(v3 + a2, a2);
    return (0x9DDFEA08EB382D69
          * ((0x9DDFEA08EB382D69
            * (v4 ^ ((0x9DDFEA08EB382D69 * (v4 ^ *(_QWORD *)a1)) >> 47) ^ (0x9DDFEA08EB382D69 * (v4 ^ *(_QWORD *)a1)))) ^ ((0x9DDFEA08EB382D69 * (v4 ^ ((0x9DDFEA08EB382D69 * (v4 ^ *(_QWORD *)a1)) >> 47) ^ (0x9DDFEA08EB382D69 * (v4 ^ *(_QWORD *)a1)))) >> 47))) ^ v3;
  }
  return result;
}

unint64_t sub_E3B54(_QWORD *a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;

  v2 = a1[1];
  v3 = 0xB492B66FBE98F273 * *a1;
  v4 = __ROR8__(0x9AE16A3B2F90404FLL * *(_QWORD *)((char *)a1 + a2 - 8), 30) + __ROR8__(v3 - v2, 43);
  v5 = v3 + a2 + __ROR8__(v2 ^ 0xC949D7C7509E6557, 20) - 0x9AE16A3B2F90404FLL * *(_QWORD *)((char *)a1 + a2 - 8);
  v6 = 0x9DDFEA08EB382D69 * (v5 ^ (v4 - 0x3C5A37A36834CED9 * *(_QWORD *)((char *)a1 + a2 - 16)));
  return 0x9DDFEA08EB382D69
       * ((0x9DDFEA08EB382D69 * (v5 ^ (v6 >> 47) ^ v6)) ^ ((0x9DDFEA08EB382D69 * (v5 ^ (v6 >> 47) ^ v6)) >> 47));
}

unint64_t sub_E3C00(_QWORD *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;

  v2 = *(_QWORD *)((char *)a1 + a2 - 16);
  v3 = *a1 - 0x3C5A37A36834CED9 * (v2 + a2);
  v5 = a1[2];
  v4 = a1[3];
  v6 = __ROR8__(v3 + v4, 52);
  v7 = v3 + a1[1];
  v8 = __ROR8__(v7, 7);
  v9 = v7 + v5;
  v10 = *(_QWORD *)((char *)a1 + a2 - 32) + v5;
  v11 = v8 + __ROR8__(*a1 - 0x3C5A37A36834CED9 * (v2 + a2), 37) + v6 + __ROR8__(v9, 31);
  v12 = *(_QWORD *)((char *)a1 + a2 - 24) + v10 + v2;
  v13 = 0xC3A5C85C97CB3127 * (v12 + *(_QWORD *)((char *)a1 + a2 - 8) + v4 + v11)
      - 0x651E95C4D06FBFB1
      * (v9
       + v4
       + __ROR8__(v10, 37)
       + __ROR8__(*(_QWORD *)((char *)a1 + a2 - 24) + v10, 7)
       + __ROR8__(*(_QWORD *)((char *)a1 + a2 - 8) + v4 + v10, 52)
       + __ROR8__(v12, 31));
  return 0x9AE16A3B2F90404FLL
       * ((v11 - 0x3C5A37A36834CED9 * (v13 ^ (v13 >> 47))) ^ ((v11 - 0x3C5A37A36834CED9 * (v13 ^ (v13 >> 47))) >> 47));
}

uint64_t sub_E3CC0(uint64_t a1, unsigned __int8 *a2, unsigned __int8 *a3)
{
  unsigned __int8 *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  int v9;
  int v10;
  int v11;
  int v12;
  BOOL v14;
  uint64_t result;

  v3 = a3;
  v4 = a2[23];
  if ((v4 & 0x80u) == 0)
    v5 = a2[23];
  else
    v5 = *((_QWORD *)a2 + 1);
  v6 = a3[23];
  v7 = (char)v6;
  if ((v6 & 0x80u) != 0)
    v6 = *((_QWORD *)a3 + 1);
  if (v5 != v6)
    return 0;
  if (v7 < 0)
    v3 = *(unsigned __int8 **)a3;
  if ((v4 & 0x80) != 0)
    return memcmp(*(const void **)a2, v3, *((_QWORD *)a2 + 1)) == 0;
  if (!a2[23])
    return 1;
  v8 = v4 - 1;
  do
  {
    v10 = *a2++;
    v9 = v10;
    v12 = *v3++;
    v11 = v12;
    v14 = v8-- != 0;
    result = v9 == v11;
  }
  while (v9 == v11 && v14);
  return result;
}

void sub_E3D64(uint64_t a1, void **__p)
{
  if (*(_BYTE *)(a1 + 8))
  {
    if (*((char *)__p + 39) < 0)
      operator delete(__p[2]);
  }
  else if (!__p)
  {
    return;
  }
  operator delete(__p);
}

unsigned __int8 *sub_E3DB0(_QWORD *a1, unsigned __int8 *a2)
{
  unint64_t v4;
  int8x8_t v5;
  unint64_t v6;
  uint8x8_t v7;
  unint64_t v8;
  unint64_t v9;
  unsigned __int8 **v10;
  unsigned __int8 *v11;
  uint64_t v12;
  unint64_t v13;

  v4 = sub_E3818((uint64_t)(a1 + 3), (uint64_t)a2);
  v5 = (int8x8_t)a1[1];
  if (!*(_QWORD *)&v5)
    return 0;
  v6 = v4;
  v7 = (uint8x8_t)vcnt_s8(v5);
  v7.i16[0] = vaddlv_u8(v7);
  v8 = v7.u32[0];
  if (v7.u32[0] > 1uLL)
  {
    v9 = v4;
    if (v4 >= *(_QWORD *)&v5)
      v9 = v4 % *(_QWORD *)&v5;
  }
  else
  {
    v9 = (*(_QWORD *)&v5 - 1) & v4;
  }
  v10 = *(unsigned __int8 ***)(*a1 + 8 * v9);
  if (!v10)
    return 0;
  v11 = *v10;
  if (*v10)
  {
    v12 = (uint64_t)(a1 + 4);
    do
    {
      v13 = *((_QWORD *)v11 + 1);
      if (v6 == v13)
      {
        if ((sub_E3CC0(v12, v11 + 16, a2) & 1) != 0)
          return v11;
      }
      else
      {
        if (v8 > 1)
        {
          if (v13 >= *(_QWORD *)&v5)
            v13 %= *(_QWORD *)&v5;
        }
        else
        {
          v13 &= *(_QWORD *)&v5 - 1;
        }
        if (v13 != v9)
          return 0;
      }
      v11 = *(unsigned __int8 **)v11;
    }
    while (v11);
  }
  return v11;
}

_QWORD *sub_E3EB0(_QWORD *a1, unsigned __int16 **a2)
{
  unsigned __int16 *v2;
  unsigned __int16 *v3;
  unint64_t v4;
  unsigned __int16 *v5;
  unsigned int v6;
  int8x8_t v7;
  uint8x8_t v8;
  unint64_t v9;
  unint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  size_t v13;
  unint64_t v14;
  const void *v15;

  v3 = *a2;
  v2 = a2[1];
  if (*a2 == v2)
  {
    v4 = 0;
  }
  else
  {
    v4 = 0;
    v5 = *a2;
    do
    {
      v6 = *v5++;
      v4 = v6 | (4 * v4);
    }
    while (v5 != v2);
  }
  v7 = (int8x8_t)a1[1];
  if (!*(_QWORD *)&v7)
    return 0;
  v8 = (uint8x8_t)vcnt_s8(v7);
  v8.i16[0] = vaddlv_u8(v8);
  v9 = v8.u32[0];
  if (v8.u32[0] > 1uLL)
  {
    v10 = v4;
    if (v4 >= *(_QWORD *)&v7)
      v10 = v4 % *(_QWORD *)&v7;
  }
  else
  {
    v10 = (*(_QWORD *)&v7 - 1) & v4;
  }
  v11 = *(_QWORD **)(*a1 + 8 * v10);
  if (!v11)
    return 0;
  v12 = (_QWORD *)*v11;
  if (*v11)
  {
    v13 = (char *)v2 - (char *)v3;
    do
    {
      v14 = v12[1];
      if (v4 == v14)
      {
        v15 = (const void *)v12[2];
        if (v12[3] - (_QWORD)v15 == v13 && !memcmp(v15, v3, v13))
          return v12;
      }
      else
      {
        if (v9 > 1)
        {
          if (v14 >= *(_QWORD *)&v7)
            v14 %= *(_QWORD *)&v7;
        }
        else
        {
          v14 &= *(_QWORD *)&v7 - 1;
        }
        if (v14 != v10)
          return 0;
      }
      v12 = (_QWORD *)*v12;
    }
    while (v12);
  }
  return v12;
}

unsigned __int8 *sub_E3FD4(_QWORD *a1, unsigned __int8 *a2)
{
  unint64_t v4;
  int8x8_t v5;
  unint64_t v6;
  uint8x8_t v7;
  unint64_t v8;
  unint64_t v9;
  unsigned __int8 **v10;
  unsigned __int8 *v11;
  uint64_t v12;
  unint64_t v13;

  v4 = sub_E3818((uint64_t)(a1 + 3), (uint64_t)a2);
  v5 = (int8x8_t)a1[1];
  if (!*(_QWORD *)&v5)
    return 0;
  v6 = v4;
  v7 = (uint8x8_t)vcnt_s8(v5);
  v7.i16[0] = vaddlv_u8(v7);
  v8 = v7.u32[0];
  if (v7.u32[0] > 1uLL)
  {
    v9 = v4;
    if (v4 >= *(_QWORD *)&v5)
      v9 = v4 % *(_QWORD *)&v5;
  }
  else
  {
    v9 = (*(_QWORD *)&v5 - 1) & v4;
  }
  v10 = *(unsigned __int8 ***)(*a1 + 8 * v9);
  if (!v10)
    return 0;
  v11 = *v10;
  if (*v10)
  {
    v12 = (uint64_t)(a1 + 4);
    do
    {
      v13 = *((_QWORD *)v11 + 1);
      if (v13 == v6)
      {
        if ((sub_E3CC0(v12, v11 + 16, a2) & 1) != 0)
          return v11;
      }
      else
      {
        if (v8 > 1)
        {
          if (v13 >= *(_QWORD *)&v5)
            v13 %= *(_QWORD *)&v5;
        }
        else
        {
          v13 &= *(_QWORD *)&v5 - 1;
        }
        if (v13 != v9)
          return 0;
      }
      v11 = *(unsigned __int8 **)v11;
    }
    while (v11);
  }
  return v11;
}

unsigned __int8 *sub_E40D4(uint64_t a1, unsigned __int8 *a2, uint64_t a3, __int128 **a4)
{
  unint64_t v4;
  _QWORD *v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint8x8_t v12;
  unint64_t v13;
  unsigned __int8 **v14;
  unsigned __int8 *i;
  unint64_t v16;
  float v17;
  float v18;
  _BOOL8 v19;
  unint64_t v20;
  unint64_t v21;
  size_t v22;
  _QWORD *v23;
  unint64_t v24;
  _QWORD v26[3];

  v8 = (_QWORD *)(a1 + 24);
  v9 = sub_E3818(a1 + 24, (uint64_t)a2);
  v10 = v9;
  v11 = *(_QWORD *)(a1 + 8);
  if (v11)
  {
    v12 = (uint8x8_t)vcnt_s8((int8x8_t)v11);
    v12.i16[0] = vaddlv_u8(v12);
    v13 = v12.u32[0];
    if (v12.u32[0] > 1uLL)
    {
      v4 = v9;
      if (v9 >= v11)
        v4 = v9 % v11;
    }
    else
    {
      v4 = (v11 - 1) & v9;
    }
    v14 = *(unsigned __int8 ***)(*(_QWORD *)a1 + 8 * v4);
    if (v14)
    {
      for (i = *v14; i; i = *(unsigned __int8 **)i)
      {
        v16 = *((_QWORD *)i + 1);
        if (v16 == v10)
        {
          if ((sub_E3CC0(a1 + 32, i + 16, a2) & 1) != 0)
            return i;
        }
        else
        {
          if (v13 > 1)
          {
            if (v16 >= v11)
              v16 %= v11;
          }
          else
          {
            v16 &= v11 - 1;
          }
          if (v16 != v4)
            break;
        }
      }
    }
  }
  sub_E4368(a1, v10, a4, (uint64_t)v26);
  v17 = (float)(unint64_t)(*(_QWORD *)(a1 + 24) + 1);
  v18 = *(float *)(a1 + 32);
  if (!v11 || (float)(v18 * (float)v11) < v17)
  {
    v19 = 1;
    if (v11 >= 3)
      v19 = (v11 & (v11 - 1)) != 0;
    v20 = v19 | (2 * v11);
    v21 = vcvtps_u32_f32(v17 / v18);
    if (v20 <= v21)
      v22 = v21;
    else
      v22 = v20;
    sub_6A20(a1, v22);
    v11 = *(_QWORD *)(a1 + 8);
    if ((v11 & (v11 - 1)) != 0)
    {
      if (v10 >= v11)
        v4 = v10 % v11;
      else
        v4 = v10;
    }
    else
    {
      v4 = (v11 - 1) & v10;
    }
  }
  v23 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v4);
  if (v23)
  {
    *(_QWORD *)v26[0] = *v23;
    *v23 = v26[0];
  }
  else
  {
    *(_QWORD *)v26[0] = *(_QWORD *)(a1 + 16);
    *(_QWORD *)(a1 + 16) = v26[0];
    *(_QWORD *)(*(_QWORD *)a1 + 8 * v4) = a1 + 16;
    if (*(_QWORD *)v26[0])
    {
      v24 = *(_QWORD *)(*(_QWORD *)v26[0] + 8);
      if ((v11 & (v11 - 1)) != 0)
      {
        if (v24 >= v11)
          v24 %= v11;
      }
      else
      {
        v24 &= v11 - 1;
      }
      *(_QWORD *)(*(_QWORD *)a1 + 8 * v24) = v26[0];
    }
  }
  i = (unsigned __int8 *)v26[0];
  ++*v8;
  return i;
}

void sub_E4344(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void **__p, uint64_t a13)
{
  if (__p)
    sub_E3D64((uint64_t)&a13, __p);
  _Unwind_Resume(exception_object);
}

_BYTE *sub_E4368@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, __int128 **a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v7;
  char *v8;
  _BYTE *result;
  __int128 *v10;
  __int128 v11;

  v7 = a1 + 16;
  v8 = (char *)operator new(0x30uLL);
  *(_QWORD *)a4 = v8;
  *(_QWORD *)(a4 + 8) = v7;
  *(_BYTE *)(a4 + 16) = 0;
  *(_QWORD *)v8 = 0;
  *((_QWORD *)v8 + 1) = a2;
  result = v8 + 16;
  v10 = *a3;
  if (*((char *)*a3 + 23) < 0)
  {
    result = sub_14998(result, *(void **)v10, *((_QWORD *)v10 + 1));
  }
  else
  {
    v11 = *v10;
    *((_QWORD *)v8 + 4) = *((_QWORD *)v10 + 2);
    *(_OWORD *)result = v11;
  }
  *((_WORD *)v8 + 20) = 0;
  *(_BYTE *)(a4 + 16) = 1;
  return result;
}

void sub_E43F4(_Unwind_Exception *a1)
{
  _QWORD *v1;
  void **v2;
  uint64_t v3;

  *v1 = 0;
  sub_E3D64(v3, v2);
  _Unwind_Resume(a1);
}

void sub_E4410(void **a1, unint64_t a2, _WORD *a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  _WORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  _WORD *v17;
  char *v18;
  char *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  char *v23;
  char *i;
  __int16 v25;

  v8 = a1[2];
  v6 = (uint64_t)(a1 + 2);
  v7 = v8;
  v9 = *(_WORD **)(v6 - 8);
  if (a2 <= (v8 - (_BYTE *)v9) >> 1)
  {
    if (a2)
    {
      v16 = 2 * a2;
      v17 = &v9[a2];
      do
      {
        *v9++ = *a3;
        v16 -= 2;
      }
      while (v16);
      v9 = v17;
    }
    a1[1] = v9;
  }
  else
  {
    v10 = (char *)v9 - (_BYTE *)*a1;
    v11 = a2 + (v10 >> 1);
    if (v11 < 0)
      sub_6F9C();
    v12 = v10 >> 1;
    v13 = v7 - (_BYTE *)*a1;
    if (v13 > v11)
      v11 = v13;
    if (v13 >= 0x7FFFFFFFFFFFFFFELL)
      v14 = 0x7FFFFFFFFFFFFFFFLL;
    else
      v14 = v11;
    if (v14)
      v15 = (char *)sub_9414(v6, v14);
    else
      v15 = 0;
    v18 = &v15[2 * v12];
    v19 = &v18[2 * a2];
    v20 = 2 * a2;
    v21 = v18;
    do
    {
      *(_WORD *)v21 = *a3;
      v21 += 2;
      v20 -= 2;
    }
    while (v20);
    v22 = &v15[2 * v14];
    v23 = (char *)*a1;
    for (i = (char *)a1[1]; i != v23; i -= 2)
    {
      v25 = *((_WORD *)i - 1);
      *((_WORD *)v18 - 1) = v25;
      v18 -= 2;
    }
    *a1 = v18;
    a1[1] = v19;
    a1[2] = v22;
    if (v23)
      operator delete(v23);
  }
}

_QWORD *sub_E4518(uint64_t *a1, unint64_t a2, __int128 *a3)
{
  _QWORD *result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  char *v18;
  char *v19;
  char *v20;
  char *v21;
  _QWORD *v22;

  v8 = a1[2];
  result = a1 + 2;
  v7 = v8;
  v9 = *(result - 1);
  if (0xAAAAAAAAAAAAAAABLL * ((v8 - v9) >> 3) >= a2)
  {
    if (a2)
    {
      v15 = v9 + 24 * a2;
      v16 = 24 * a2;
      do
      {
        if (*((char *)a3 + 23) < 0)
        {
          result = sub_14998((_BYTE *)v9, *(void **)a3, *((_QWORD *)a3 + 1));
        }
        else
        {
          v17 = *a3;
          *(_QWORD *)(v9 + 16) = *((_QWORD *)a3 + 2);
          *(_OWORD *)v9 = v17;
        }
        v9 += 24;
        v16 -= 24;
      }
      while (v16);
      v9 = v15;
    }
    a1[1] = v9;
  }
  else
  {
    v10 = 0xAAAAAAAAAAAAAAABLL * ((v9 - *a1) >> 3);
    v11 = v10 + a2;
    if (v10 + a2 > 0xAAAAAAAAAAAAAAALL)
      sub_6F9C();
    v12 = 0xAAAAAAAAAAAAAAABLL * ((v7 - *a1) >> 3);
    if (2 * v12 > v11)
      v11 = 2 * v12;
    if (v12 >= 0x555555555555555)
      v13 = 0xAAAAAAAAAAAAAAALL;
    else
      v13 = v11;
    v22 = result;
    if (v13)
      v14 = (char *)sub_14C10((uint64_t)result, v13);
    else
      v14 = 0;
    v18 = v14;
    v19 = &v14[24 * v10];
    v20 = v19;
    v21 = &v14[24 * v13];
    sub_E4694(&v18, a2, a3);
    sub_E4720(a1, &v18);
    return (_QWORD *)sub_E48A8((uint64_t)&v18);
  }
  return result;
}

void sub_E4674(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_E48A8((uint64_t)va);
  _Unwind_Resume(a1);
}

_QWORD *sub_E4694(_QWORD *result, uint64_t a2, __int128 *a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;

  v3 = result;
  v4 = result[2];
  if (a2)
  {
    v6 = v4 + 24 * a2;
    v7 = 24 * a2;
    do
    {
      if (*((char *)a3 + 23) < 0)
      {
        result = sub_14998((_BYTE *)v4, *(void **)a3, *((_QWORD *)a3 + 1));
      }
      else
      {
        v8 = *a3;
        *(_QWORD *)(v4 + 16) = *((_QWORD *)a3 + 2);
        *(_OWORD *)v4 = v8;
      }
      v4 += 24;
      v7 -= 24;
    }
    while (v7);
    v4 = v6;
  }
  v3[2] = v4;
  return result;
}

void sub_E4718(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + 16) = v2;
  _Unwind_Resume(a1);
}

uint64_t sub_E4720(uint64_t *a1, _QWORD *a2)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  result = sub_E4794((uint64_t)(a1 + 2), a1[1], a1[1], *a1, *a1, a2[1], a2[1]);
  a2[1] = v5;
  v6 = *a1;
  *a1 = v5;
  a2[1] = v6;
  v7 = a1[1];
  a1[1] = a2[2];
  a2[2] = v7;
  v8 = a1[2];
  a1[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

uint64_t sub_E4794(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v9;
  __int128 v10;
  _QWORD v12[3];
  char v13;
  __int128 v14;
  __int128 v15;

  v7 = a7;
  *(_QWORD *)&v15 = a6;
  *((_QWORD *)&v15 + 1) = a7;
  v14 = v15;
  v12[0] = a1;
  v12[1] = &v14;
  v12[2] = &v15;
  if (a3 != a5)
  {
    v9 = a7;
    do
    {
      v10 = *(_OWORD *)(a3 - 24);
      *(_QWORD *)(v9 - 8) = *(_QWORD *)(a3 - 8);
      *(_OWORD *)(v9 - 24) = v10;
      v9 -= 24;
      *(_QWORD *)(a3 - 16) = 0;
      *(_QWORD *)(a3 - 8) = 0;
      *(_QWORD *)(a3 - 24) = 0;
      v7 -= 24;
      a3 -= 24;
    }
    while (a3 != a5);
    *((_QWORD *)&v15 + 1) = v9;
  }
  v13 = 1;
  sub_E4830((uint64_t)v12);
  return a6;
}

uint64_t sub_E4830(uint64_t a1)
{
  if (!*(_BYTE *)(a1 + 24))
    sub_E4864(a1);
  return a1;
}

void sub_E4864(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(*(_QWORD *)(a1 + 16) + 8);
  v2 = *(_QWORD *)(*(_QWORD *)(a1 + 8) + 8);
  while (v1 != v2)
  {
    if (*(char *)(v1 + 23) < 0)
      operator delete(*(void **)v1);
    v1 += 24;
  }
}

uint64_t sub_E48A8(uint64_t a1)
{
  sub_E48DC(a1, *(void ***)(a1 + 8));
  if (*(_QWORD *)a1)
    operator delete(*(void **)a1);
  return a1;
}

void sub_E48DC(uint64_t a1, void **a2)
{
  void **v2;
  void **v5;

  v2 = *(void ***)(a1 + 16);
  if (v2 != a2)
  {
    do
    {
      v5 = v2 - 3;
      *(_QWORD *)(a1 + 16) = v2 - 3;
      if (*((char *)v2 - 1) < 0)
      {
        operator delete(*v5);
        v5 = *(void ***)(a1 + 16);
      }
      v2 = v5;
    }
    while (v5 != a2);
  }
}

_QWORD *sub_E4930(uint64_t a1, unsigned __int16 **a2, uint64_t a3, uint64_t *a4)
{
  unint64_t v4;
  unsigned __int16 *v7;
  unsigned __int16 *v8;
  unint64_t v9;
  unsigned __int16 *v10;
  unsigned int v11;
  unint64_t v12;
  uint8x8_t v13;
  unint64_t v14;
  void **v15;
  _QWORD *v16;
  size_t v17;
  unint64_t v18;
  const void *v19;
  _QWORD *v20;
  uint64_t v21;
  float v22;
  float v23;
  _BOOL8 v24;
  unint64_t v25;
  unint64_t v26;
  size_t v27;
  uint64_t v28;
  _QWORD *v29;
  unint64_t v30;

  v8 = *a2;
  v7 = a2[1];
  if (*a2 == v7)
  {
    v9 = 0;
  }
  else
  {
    v9 = 0;
    v10 = *a2;
    do
    {
      v11 = *v10++;
      v9 = v11 | (4 * v9);
    }
    while (v10 != v7);
  }
  v12 = *(_QWORD *)(a1 + 8);
  if (v12)
  {
    v13 = (uint8x8_t)vcnt_s8((int8x8_t)v12);
    v13.i16[0] = vaddlv_u8(v13);
    v14 = v13.u32[0];
    if (v13.u32[0] > 1uLL)
    {
      v4 = v9;
      if (v9 >= v12)
        v4 = v9 % v12;
    }
    else
    {
      v4 = (v12 - 1) & v9;
    }
    v15 = *(void ***)(*(_QWORD *)a1 + 8 * v4);
    if (v15)
    {
      v16 = *v15;
      if (*v15)
      {
        v17 = (char *)v7 - (char *)v8;
        do
        {
          v18 = v16[1];
          if (v18 == v9)
          {
            v19 = (const void *)v16[2];
            if (v16[3] - (_QWORD)v19 == v17 && !memcmp(v19, v8, v17))
              return v16;
          }
          else
          {
            if (v14 > 1)
            {
              if (v18 >= v12)
                v18 %= v12;
            }
            else
            {
              v18 &= v12 - 1;
            }
            if (v18 != v4)
              break;
          }
          v16 = (_QWORD *)*v16;
        }
        while (v16);
      }
    }
  }
  v20 = (_QWORD *)(a1 + 16);
  v16 = operator new(0x30uLL);
  *v16 = 0;
  v16[1] = v9;
  v21 = *a4;
  v16[3] = 0;
  v16[4] = 0;
  v16[2] = 0;
  *((_OWORD *)v16 + 1) = *(_OWORD *)v21;
  v16[4] = *(_QWORD *)(v21 + 16);
  *(_QWORD *)(v21 + 8) = 0;
  *(_QWORD *)(v21 + 16) = 0;
  *(_QWORD *)v21 = 0;
  *((_WORD *)v16 + 20) = 0;
  v22 = (float)(unint64_t)(*(_QWORD *)(a1 + 24) + 1);
  v23 = *(float *)(a1 + 32);
  if (!v12 || (float)(v23 * (float)v12) < v22)
  {
    v24 = 1;
    if (v12 >= 3)
      v24 = (v12 & (v12 - 1)) != 0;
    v25 = v24 | (2 * v12);
    v26 = vcvtps_u32_f32(v22 / v23);
    if (v25 <= v26)
      v27 = v26;
    else
      v27 = v25;
    sub_6A20(a1, v27);
    v12 = *(_QWORD *)(a1 + 8);
    if ((v12 & (v12 - 1)) != 0)
    {
      if (v9 >= v12)
        v4 = v9 % v12;
      else
        v4 = v9;
    }
    else
    {
      v4 = (v12 - 1) & v9;
    }
  }
  v28 = *(_QWORD *)a1;
  v29 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v4);
  if (v29)
  {
    *v16 = *v29;
LABEL_45:
    *v29 = v16;
    goto LABEL_46;
  }
  *v16 = *v20;
  *v20 = v16;
  *(_QWORD *)(v28 + 8 * v4) = v20;
  if (*v16)
  {
    v30 = *(_QWORD *)(*v16 + 8);
    if ((v12 & (v12 - 1)) != 0)
    {
      if (v30 >= v12)
        v30 %= v12;
    }
    else
    {
      v30 &= v12 - 1;
    }
    v29 = (_QWORD *)(*(_QWORD *)a1 + 8 * v30);
    goto LABEL_45;
  }
LABEL_46:
  ++*(_QWORD *)(a1 + 24);
  return v16;
}

void sub_E4BC0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  _QWORD *v10;
  uint64_t v11;

  sub_E4BDC(v11, v10);
  _Unwind_Resume(a1);
}

void sub_E4BDC(uint64_t a1, _QWORD *__p)
{
  void *v3;

  if (*(_BYTE *)(a1 + 8))
  {
    v3 = (void *)__p[2];
    if (v3)
    {
      __p[3] = v3;
      operator delete(v3);
    }
  }
  else if (!__p)
  {
    return;
  }
  operator delete(__p);
}

char *sub_E4C28(_QWORD *a1, uint64_t a2)
{
  char *result;
  uint64_t v4;

  if (a2 < 0)
    sub_6F9C();
  result = (char *)sub_9414((uint64_t)(a1 + 2), a2);
  *a1 = result;
  a1[1] = result;
  a1[2] = &result[2 * v4];
  return result;
}

_QWORD *sub_E4C64(uint64_t a1, unsigned __int16 *a2, uint64_t a3, _WORD **a4)
{
  unint64_t v4;
  unint64_t v7;
  unint64_t v8;
  uint8x8_t v9;
  void **v10;
  _QWORD *v11;
  unint64_t v12;
  _QWORD *v13;
  float v14;
  float v15;
  _BOOL8 v16;
  unint64_t v17;
  unint64_t v18;
  size_t v19;
  uint64_t v20;
  _QWORD *v21;
  unint64_t v22;

  v7 = *a2;
  v8 = *(_QWORD *)(a1 + 8);
  if (v8)
  {
    v9 = (uint8x8_t)vcnt_s8((int8x8_t)v8);
    v9.i16[0] = vaddlv_u8(v9);
    if (v9.u32[0] > 1uLL)
    {
      v4 = *a2;
      if (v8 <= v7)
        v4 = v7 % v8;
    }
    else
    {
      v4 = ((_DWORD)v8 - 1) & v7;
    }
    v10 = *(void ***)(*(_QWORD *)a1 + 8 * v4);
    if (v10)
    {
      v11 = *v10;
      if (*v10)
      {
        do
        {
          v12 = v11[1];
          if (v12 == v7)
          {
            if (*((unsigned __int16 *)v11 + 8) == (_DWORD)v7)
              return v11;
          }
          else
          {
            if (v9.u32[0] > 1uLL)
            {
              if (v12 >= v8)
                v12 %= v8;
            }
            else
            {
              v12 &= v8 - 1;
            }
            if (v12 != v4)
              break;
          }
          v11 = (_QWORD *)*v11;
        }
        while (v11);
      }
    }
  }
  v13 = (_QWORD *)(a1 + 16);
  v11 = operator new(0x30uLL);
  *v11 = 0;
  v11[1] = v7;
  *((_WORD *)v11 + 8) = **a4;
  v11[4] = 0;
  v11[5] = 0;
  v11[3] = 0;
  v14 = (float)(unint64_t)(*(_QWORD *)(a1 + 24) + 1);
  v15 = *(float *)(a1 + 32);
  if (!v8 || (float)(v15 * (float)v8) < v14)
  {
    v16 = 1;
    if (v8 >= 3)
      v16 = (v8 & (v8 - 1)) != 0;
    v17 = v16 | (2 * v8);
    v18 = vcvtps_u32_f32(v14 / v15);
    if (v17 <= v18)
      v19 = v18;
    else
      v19 = v17;
    sub_6A20(a1, v19);
    v8 = *(_QWORD *)(a1 + 8);
    if ((v8 & (v8 - 1)) != 0)
    {
      if (v8 <= v7)
        v4 = v7 % v8;
      else
        v4 = v7;
    }
    else
    {
      v4 = ((_DWORD)v8 - 1) & v7;
    }
  }
  v20 = *(_QWORD *)a1;
  v21 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v4);
  if (v21)
  {
    *v11 = *v21;
LABEL_38:
    *v21 = v11;
    goto LABEL_39;
  }
  *v11 = *v13;
  *v13 = v11;
  *(_QWORD *)(v20 + 8 * v4) = v13;
  if (*v11)
  {
    v22 = *(_QWORD *)(*v11 + 8);
    if ((v8 & (v8 - 1)) != 0)
    {
      if (v22 >= v8)
        v22 %= v8;
    }
    else
    {
      v22 &= v8 - 1;
    }
    v21 = (_QWORD *)(*(_QWORD *)a1 + 8 * v22);
    goto LABEL_38;
  }
LABEL_39:
  ++*(_QWORD *)(a1 + 24);
  return v11;
}

void sub_E4E9C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  _QWORD *v10;
  uint64_t v11;

  sub_E4EB8(v11, v10);
  _Unwind_Resume(a1);
}

void sub_E4EB8(uint64_t a1, _QWORD *__p)
{
  void *v3;

  if (*(_BYTE *)(a1 + 8))
  {
    v3 = (void *)__p[3];
    if (v3)
    {
      __p[4] = v3;
      operator delete(v3);
    }
  }
  else if (!__p)
  {
    return;
  }
  operator delete(__p);
}

_QWORD *sub_E4F04(_QWORD *a1, unsigned __int16 **a2)
{
  unsigned __int16 *v2;
  unsigned __int16 *v3;
  unint64_t v4;
  unsigned __int16 *v5;
  unsigned int v6;
  int8x8_t v7;
  uint8x8_t v8;
  unint64_t v9;
  unint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  size_t v13;
  unint64_t v14;
  const void *v15;

  v3 = *a2;
  v2 = a2[1];
  if (*a2 == v2)
  {
    v4 = 0;
  }
  else
  {
    v4 = 0;
    v5 = *a2;
    do
    {
      v6 = *v5++;
      v4 = v6 | (4 * v4);
    }
    while (v5 != v2);
  }
  v7 = (int8x8_t)a1[1];
  if (!*(_QWORD *)&v7)
    return 0;
  v8 = (uint8x8_t)vcnt_s8(v7);
  v8.i16[0] = vaddlv_u8(v8);
  v9 = v8.u32[0];
  if (v8.u32[0] > 1uLL)
  {
    v10 = v4;
    if (v4 >= *(_QWORD *)&v7)
      v10 = v4 % *(_QWORD *)&v7;
  }
  else
  {
    v10 = (*(_QWORD *)&v7 - 1) & v4;
  }
  v11 = *(_QWORD **)(*a1 + 8 * v10);
  if (!v11)
    return 0;
  v12 = (_QWORD *)*v11;
  if (*v11)
  {
    v13 = (char *)v2 - (char *)v3;
    do
    {
      v14 = v12[1];
      if (v14 == v4)
      {
        v15 = (const void *)v12[2];
        if (v12[3] - (_QWORD)v15 == v13 && !memcmp(v15, v3, v13))
          return v12;
      }
      else
      {
        if (v9 > 1)
        {
          if (v14 >= *(_QWORD *)&v7)
            v14 %= *(_QWORD *)&v7;
        }
        else
        {
          v14 &= *(_QWORD *)&v7 - 1;
        }
        if (v14 != v10)
          return 0;
      }
      v12 = (_QWORD *)*v12;
    }
    while (v12);
  }
  return v12;
}

_QWORD *sub_E5028(uint64_t a1, unsigned __int16 **a2, uint64_t a3, uint64_t *a4)
{
  unint64_t v4;
  unsigned __int16 *v6;
  unsigned __int16 *v7;
  unint64_t v8;
  unsigned __int16 *v9;
  unsigned int v10;
  unint64_t v11;
  uint8x8_t v12;
  unint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  size_t v16;
  unint64_t v17;
  const void *v18;
  float v19;
  float v20;
  _BOOL8 v21;
  unint64_t v22;
  unint64_t v23;
  size_t v24;
  _QWORD *v25;
  unint64_t v26;
  uint64_t *v28;
  _QWORD *v29;

  v7 = *a2;
  v6 = a2[1];
  if (*a2 == v6)
  {
    v8 = 0;
  }
  else
  {
    v8 = 0;
    v9 = *a2;
    do
    {
      v10 = *v9++;
      v8 = v10 | (4 * v8);
    }
    while (v9 != v6);
  }
  v11 = *(_QWORD *)(a1 + 8);
  if (!v11)
    goto LABEL_26;
  v12 = (uint8x8_t)vcnt_s8((int8x8_t)v11);
  v12.i16[0] = vaddlv_u8(v12);
  v13 = v12.u32[0];
  if (v12.u32[0] > 1uLL)
  {
    v4 = v8;
    if (v8 >= v11)
      v4 = v8 % v11;
  }
  else
  {
    v4 = (v11 - 1) & v8;
  }
  v14 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v4);
  if (!v14)
    goto LABEL_26;
  v15 = (_QWORD *)*v14;
  if (!*v14)
    goto LABEL_26;
  v28 = a4;
  v16 = (char *)v6 - (char *)v7;
  do
  {
    v17 = v15[1];
    if (v17 == v8)
    {
      v18 = (const void *)v15[2];
      if (v15[3] - (_QWORD)v18 == v16 && !memcmp(v18, v7, v16))
        return v15;
      goto LABEL_24;
    }
    if (v13 > 1)
    {
      if (v17 >= v11)
        v17 %= v11;
    }
    else
    {
      v17 &= v11 - 1;
    }
    if (v17 != v4)
      break;
LABEL_24:
    v15 = (_QWORD *)*v15;
  }
  while (v15);
  a4 = v28;
LABEL_26:
  sub_E52C8(a1, v8, a4, (uint64_t)&v29);
  v19 = (float)(unint64_t)(*(_QWORD *)(a1 + 24) + 1);
  v20 = *(float *)(a1 + 32);
  if (!v11 || (float)(v20 * (float)v11) < v19)
  {
    v21 = 1;
    if (v11 >= 3)
      v21 = (v11 & (v11 - 1)) != 0;
    v22 = v21 | (2 * v11);
    v23 = vcvtps_u32_f32(v19 / v20);
    if (v22 <= v23)
      v24 = v23;
    else
      v24 = v22;
    sub_6A20(a1, v24);
    v11 = *(_QWORD *)(a1 + 8);
    if ((v11 & (v11 - 1)) != 0)
    {
      if (v8 >= v11)
        v4 = v8 % v11;
      else
        v4 = v8;
    }
    else
    {
      v4 = (v11 - 1) & v8;
    }
  }
  v25 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v4);
  if (v25)
  {
    *v29 = *v25;
    *v25 = v29;
  }
  else
  {
    *v29 = *(_QWORD *)(a1 + 16);
    *(_QWORD *)(a1 + 16) = v29;
    *(_QWORD *)(*(_QWORD *)a1 + 8 * v4) = a1 + 16;
    if (*v29)
    {
      v26 = *(_QWORD *)(*v29 + 8);
      if ((v11 & (v11 - 1)) != 0)
      {
        if (v26 >= v11)
          v26 %= v11;
      }
      else
      {
        v26 &= v11 - 1;
      }
      *(_QWORD *)(*(_QWORD *)a1 + 8 * v26) = v29;
    }
  }
  v15 = v29;
  ++*(_QWORD *)(a1 + 24);
  return v15;
}

void sub_E52A4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, _QWORD *__p, uint64_t a13)
{
  if (__p)
    sub_E4BDC((uint64_t)&a13, __p);
  _Unwind_Resume(exception_object);
}

_QWORD *sub_E52C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  _QWORD *result;

  v7 = a1 + 16;
  v8 = operator new(0x30uLL);
  *(_QWORD *)a4 = v8;
  *(_QWORD *)(a4 + 8) = v7;
  *(_BYTE *)(a4 + 16) = 0;
  *v8 = 0;
  v8[1] = a2;
  v9 = *a3;
  v8[3] = 0;
  v8[4] = 0;
  v8[2] = 0;
  result = sub_E5364(v8 + 2, *(const void **)v9, *(_QWORD *)(v9 + 8), (uint64_t)(*(_QWORD *)(v9 + 8) - *(_QWORD *)v9) >> 1);
  *((_WORD *)v8 + 20) = 0;
  *(_BYTE *)(a4 + 16) = 1;
  return result;
}

void sub_E5348(_Unwind_Exception *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  *v1 = 0;
  sub_E4BDC(v3, v2);
  _Unwind_Resume(a1);
}

_QWORD *sub_E5364(_QWORD *result, const void *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v6;
  uint64_t v7;
  size_t v8;

  if (a4)
  {
    v6 = result;
    result = sub_E4C28(result, a4);
    v7 = v6[1];
    v8 = a3 - (_QWORD)a2;
    if (v8)
      result = memmove((void *)v6[1], a2, v8);
    v6[1] = v7 + v8;
  }
  return result;
}

void sub_E53C0(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void *v3;

  v3 = *(void **)v1;
  if (*(_QWORD *)v1)
  {
    *(_QWORD *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

char *sub_E53DC(char *result, char *__src, uint64_t a3, unint64_t a4)
{
  _QWORD *v7;
  unint64_t v8;
  char *v9;
  unint64_t v10;
  uint64_t v11;
  void **v12;
  char *v13;
  _BYTE *v14;
  unint64_t v15;
  char *v16;
  size_t v17;
  void *v18;
  char *v19;

  v7 = result;
  v8 = *((_QWORD *)result + 2);
  v9 = *(char **)result;
  if (a4 > (uint64_t)(v8 - *(_QWORD *)result) >> 1)
  {
    if (v9)
    {
      *((_QWORD *)result + 1) = v9;
      operator delete(v9);
      v8 = 0;
      *v7 = 0;
      v7[1] = 0;
      v7[2] = 0;
    }
    if ((a4 & 0x8000000000000000) != 0)
      sub_6F9C();
    if (v8 <= a4)
      v10 = a4;
    else
      v10 = v8;
    if (v8 >= 0x7FFFFFFFFFFFFFFELL)
      v11 = 0x7FFFFFFFFFFFFFFFLL;
    else
      v11 = v10;
    result = sub_E4C28(v7, v11);
    v13 = (char *)v7[1];
    v12 = (void **)(v7 + 1);
    v9 = v13;
LABEL_17:
    v17 = a3 - (_QWORD)__src;
    if (v17)
    {
      v18 = v9;
      v19 = __src;
      goto LABEL_19;
    }
    goto LABEL_20;
  }
  v12 = (void **)(result + 8);
  v14 = (_BYTE *)*((_QWORD *)result + 1);
  v15 = (v14 - v9) >> 1;
  if (v15 >= a4)
    goto LABEL_17;
  v16 = &__src[2 * v15];
  if (v14 != v9)
  {
    result = (char *)memmove(*(void **)result, __src, v14 - v9);
    v9 = (char *)*v12;
  }
  v17 = a3 - (_QWORD)v16;
  if (v17)
  {
    v18 = v9;
    v19 = v16;
LABEL_19:
    result = (char *)memmove(v18, v19, v17);
  }
LABEL_20:
  *v12 = &v9[v17];
  return result;
}

void sub_E54DC()
{
  void *v0;

  v0 = objc_autoreleasePoolPush();
  TUI::Symbol::Entry::invalid = -65536;
  objc_autoreleasePoolPop(v0);
}

void sub_E5A54(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  id WeakRetained;

  v1 = *(_QWORD *)(a1 + 32);
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "textView"));
  objc_msgSend(v2, "setText:", v1);

}

void sub_E849C(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  id v5;
  __int128 v6;
  id v7;
  uint64_t v8;
  void *i;
  const __CFURL *v10;
  __CFError *v11;
  __CFError *v12;
  void *v13;
  char *v14;
  id v15;
  NSObject *v16;
  id v17;
  __int128 v18;
  CFErrorRef error;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  uint8_t buf[4];
  const __CFURL *v25;
  __int16 v26;
  CFErrorRef v27;
  _BYTE v28[128];

  v20 = 0u;
  v21 = 0u;
  v22 = 0u;
  v23 = 0u;
  v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSFileManager defaultManager](NSFileManager, "defaultManager"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 48), "URLByAppendingPathComponent:", CFSTR("fonts")));
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "enumeratorAtURL:includingPropertiesForKeys:options:errorHandler:", v3, 0, 5, 0));

  v5 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v20, v28, 16);
  if (v5)
  {
    v7 = v5;
    v8 = *(_QWORD *)v21;
    *(_QWORD *)&v6 = 138543618;
    v18 = v6;
    do
    {
      for (i = 0; i != v7; i = (char *)i + 1)
      {
        if (*(_QWORD *)v21 != v8)
          objc_enumerationMutation(v4);
        v10 = *(const __CFURL **)(*((_QWORD *)&v20 + 1) + 8 * (_QWORD)i);
        if ((objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 16), "containsObject:", v10, v18) & 1) == 0)
        {
          error = 0;
          CTFontManagerRegisterFontsForURL(v10, kCTFontManagerScopeProcess, &error);
          v11 = error;
          v12 = v11;
          if (v11)
          {
            v13 = (void *)objc_claimAutoreleasedReturnValue(-[__CFError domain](v11, "domain"));
            if ((objc_msgSend(v13, "isEqualToString:", kCTFontManagerErrorDomain) & 1) != 0)
            {
              v14 = (char *)-[__CFError code](v12, "code");

              if (v14 == &stru_68.sectname[1])
                goto LABEL_17;
            }
            else
            {

            }
            v17 = TUIDefaultLog();
            v16 = objc_claimAutoreleasedReturnValue(v17);
            if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR))
            {
              *(_DWORD *)buf = v18;
              v25 = v10;
              v26 = 2112;
              v27 = error;
              _os_log_error_impl(&dword_0, v16, OS_LOG_TYPE_ERROR, "failed to register font at URL: %{public}@ %@", buf, 0x16u);
            }
          }
          else
          {
            objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 16), "addObject:", v10);
            v15 = TUIDefaultLog();
            v16 = objc_claimAutoreleasedReturnValue(v15);
            if (os_log_type_enabled(v16, OS_LOG_TYPE_INFO))
            {
              *(_DWORD *)buf = 138412290;
              v25 = v10;
              _os_log_impl(&dword_0, v16, OS_LOG_TYPE_INFO, "registered font at URL:%@", buf, 0xCu);
            }
          }

LABEL_17:
          continue;
        }
      }
      v7 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v20, v28, 16);
    }
    while (v7);
  }

}

id sub_E8798(uint64_t a1)
{
  id v1;
  id v2;
  id v3;
  uint64_t v4;
  void *i;
  const __CFURL *v6;
  CFErrorRef v7;
  id v8;
  NSObject *v9;
  NSObject *v10;
  CFErrorRef error;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  uint8_t buf[4];
  const __CFURL *v19;
  __int16 v20;
  CFErrorRef v21;
  _BYTE v22[128];

  v16 = 0u;
  v17 = 0u;
  v14 = 0u;
  v15 = 0u;
  v1 = *(id *)(*(_QWORD *)(a1 + 32) + 16);
  v2 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v14, v22, 16);
  if (v2)
  {
    v3 = v2;
    v4 = *(_QWORD *)v15;
    do
    {
      for (i = 0; i != v3; i = (char *)i + 1)
      {
        if (*(_QWORD *)v15 != v4)
          objc_enumerationMutation(v1);
        v6 = *(const __CFURL **)(*((_QWORD *)&v14 + 1) + 8 * (_QWORD)i);
        error = 0;
        CTFontManagerUnregisterFontsForURL(v6, kCTFontManagerScopeProcess, &error);
        v7 = error;
        v8 = TUIDefaultLog();
        v9 = objc_claimAutoreleasedReturnValue(v8);
        v10 = v9;
        if (v7)
        {
          if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
          {
            *(_DWORD *)buf = 138543618;
            v19 = v6;
            v20 = 2112;
            v21 = error;
            _os_log_error_impl(&dword_0, v10, OS_LOG_TYPE_ERROR, "failed to unregister font at URL: %{public}@ %@", buf, 0x16u);
          }
        }
        else if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
        {
          *(_DWORD *)buf = 138412290;
          v19 = v6;
          _os_log_impl(&dword_0, v10, OS_LOG_TYPE_INFO, "unregistered font at URL:%@", buf, 0xCu);
        }

      }
      v3 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v14, v22, 16);
    }
    while (v3);
  }

  return objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 16), "removeAllObjects");
}

void sub_E8F18(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_E9160(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_E98A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{

  _Unwind_Resume(a1);
}

void sub_E99C8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_E9F0C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{

  _Unwind_Resume(a1);
}

void sub_EA158(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

_QWORD *sub_EA17C(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t **a4)
{
  unint64_t v4;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint8x8_t v11;
  _QWORD **v12;
  _QWORD *i;
  unint64_t v14;
  uint64_t v15;
  float v16;
  float v17;
  _BOOL8 v18;
  unint64_t v19;
  unint64_t v20;
  size_t v21;
  uint64_t v22;
  _QWORD *v23;
  unint64_t v24;

  v7 = 0x9DDFEA08EB382D69 * ((8 * *a2 + 8) ^ HIDWORD(*a2));
  v8 = 0x9DDFEA08EB382D69 * (HIDWORD(*a2) ^ (v7 >> 47) ^ v7);
  v9 = 0x9DDFEA08EB382D69 * (v8 ^ (v8 >> 47));
  v10 = *(_QWORD *)(a1 + 8);
  if (v10)
  {
    v11 = (uint8x8_t)vcnt_s8((int8x8_t)v10);
    v11.i16[0] = vaddlv_u8(v11);
    if (v11.u32[0] > 1uLL)
    {
      v4 = 0x9DDFEA08EB382D69 * (v8 ^ (v8 >> 47));
      if (v9 >= v10)
        v4 = v9 % v10;
    }
    else
    {
      v4 = v9 & (v10 - 1);
    }
    v12 = *(_QWORD ***)(*(_QWORD *)a1 + 8 * v4);
    if (v12)
    {
      for (i = *v12; i; i = (_QWORD *)*i)
      {
        v14 = i[1];
        if (v14 == v9)
        {
          if (i[2] == *a2)
            return i;
        }
        else
        {
          if (v11.u32[0] > 1uLL)
          {
            if (v14 >= v10)
              v14 %= v10;
          }
          else
          {
            v14 &= v10 - 1;
          }
          if (v14 != v4)
            break;
        }
      }
    }
  }
  i = operator new(0x28uLL);
  *i = 0;
  i[1] = v9;
  v15 = **a4;
  i[3] = 0;
  i[4] = 0;
  i[2] = v15;
  v16 = (float)(unint64_t)(*(_QWORD *)(a1 + 24) + 1);
  v17 = *(float *)(a1 + 32);
  if (!v10 || (float)(v17 * (float)v10) < v16)
  {
    v18 = 1;
    if (v10 >= 3)
      v18 = (v10 & (v10 - 1)) != 0;
    v19 = v18 | (2 * v10);
    v20 = vcvtps_u32_f32(v16 / v17);
    if (v19 <= v20)
      v21 = v20;
    else
      v21 = v19;
    sub_6A20(a1, v21);
    v10 = *(_QWORD *)(a1 + 8);
    if ((v10 & (v10 - 1)) != 0)
    {
      if (v9 >= v10)
        v4 = v9 % v10;
      else
        v4 = v9;
    }
    else
    {
      v4 = (v10 - 1) & v9;
    }
  }
  v22 = *(_QWORD *)a1;
  v23 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v4);
  if (v23)
  {
    *i = *v23;
LABEL_38:
    *v23 = i;
    goto LABEL_39;
  }
  *i = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = i;
  *(_QWORD *)(v22 + 8 * v4) = a1 + 16;
  if (*i)
  {
    v24 = *(_QWORD *)(*i + 8);
    if ((v10 & (v10 - 1)) != 0)
    {
      if (v24 >= v10)
        v24 %= v10;
    }
    else
    {
      v24 &= v10 - 1;
    }
    v23 = (_QWORD *)(*(_QWORD *)a1 + 8 * v24);
    goto LABEL_38;
  }
LABEL_39:
  ++*(_QWORD *)(a1 + 24);
  return i;
}

void sub_EA3C0(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

void sub_EA560(id a1)
{
  void *v1;

  v1 = (void *)qword_2CB6E8;
  qword_2CB6E8 = (uint64_t)&off_2546B8;

}

void sub_EB5E8(id a1)
{
  void *v1;
  uint64_t v2;
  void *v3;
  const __CFString *v4;

  v4 = CFSTR("name");
  v1 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v4, 1));
  v2 = objc_claimAutoreleasedReturnValue(+[TUIAttributeSet setWithArray:](TUIAttributeSet, "setWithArray:", v1));
  v3 = (void *)qword_2CB6F8;
  qword_2CB6F8 = v2;

}

void sub_EB870(id a1)
{
  void *v1;
  uint64_t v2;
  void *v3;
  const __CFString *v4;

  v4 = CFSTR("run-list");
  v1 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v4, 1));
  v2 = objc_claimAutoreleasedReturnValue(+[TUIAttributeSet setWithArray:](TUIAttributeSet, "setWithArray:", v1));
  v3 = (void *)qword_2CB708;
  qword_2CB708 = v2;

}

void sub_EBB5C(id a1)
{
  void *v1;
  id v2;
  void *v3;
  id v4;
  void *v5;
  _QWORD v6[15];

  v1 = (void *)objc_claimAutoreleasedReturnValue(+[TUIAttributeSet supportedAttributesSizeAndIntrinsic](TUIAttributeSet, "supportedAttributesSizeAndIntrinsic"));
  v2 = objc_msgSend(v1, "mutableCopy");

  v6[0] = CFSTR("fill-mode");
  v6[1] = CFSTR("mask-color");
  v6[2] = CFSTR("resource-load");
  v6[3] = CFSTR("filter");
  v6[4] = CFSTR("continuous-corners");
  v6[5] = CFSTR("corner-radius");
  v6[6] = CFSTR("opacity");
  v6[7] = CFSTR("rasterize");
  v6[8] = CFSTR("resource-kind");
  v6[9] = CFSTR("resource-instance");
  v6[10] = CFSTR("resource-options");
  v6[11] = CFSTR("fallback-color");
  v6[12] = CFSTR("hflip-for-rtl");
  v6[13] = CFSTR("crossfades-contents");
  v6[14] = CFSTR("blend-mode");
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", v6, 15));
  objc_msgSend(v2, "addAttributesFromArray:", v3);

  v4 = objc_msgSend(v2, "copy");
  v5 = (void *)qword_2CB718;
  qword_2CB718 = (uint64_t)v4;

}

uint64_t sub_EE768(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_EE778(uint64_t a1)
{

}

void sub_EE780(uint64_t a1)
{
  objc_storeWeak((id *)(*(_QWORD *)(a1 + 32) + 16), *(id *)(a1 + 40));
  objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40), *(id *)(*(_QWORD *)(a1 + 32) + 24));
}

void sub_EE838(uint64_t a1)
{
  id v2;
  id WeakRetained;

  v2 = *(id *)(a1 + 32);
  WeakRetained = objc_loadWeakRetained((id *)(*(_QWORD *)(a1 + 40) + 16));

  if (v2 == WeakRetained)
    objc_storeWeak((id *)(*(_QWORD *)(a1 + 40) + 16), 0);
}

void sub_EE9FC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_EEAEC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void TUI::Evaluation::Context::~Context(TUI::Evaluation::Context *this)
{
  TUI::Instruction::Evaluation *v2;
  uint64_t v3;
  void *v4;

  v2 = (TUI::Instruction::Evaluation *)*((_QWORD *)this + 1);
  if (v2)
  {
    TUI::Instruction::Evaluation::~Evaluation(v2);
    operator delete();
  }
  if (*(_QWORD *)this)
    (*(void (**)(_QWORD))(**(_QWORD **)this + 64))(*(_QWORD *)this);
  v3 = *((_QWORD *)this + 96);
  if (v3)
  {
    sub_6738(v3 + 88);
    sub_14B0C(v3 + 48);
    sub_14B0C(v3 + 8);
    operator delete();
  }

  v4 = (void *)*((_QWORD *)this + 82);
  if (v4)
  {
    *((_QWORD *)this + 83) = v4;
    operator delete(v4);
  }
  sub_14A98((uint64_t)this + 616);

  sub_14B0C((uint64_t)this + 496);
  sub_14B0C((uint64_t)this + 456);
  sub_358DC((uint64_t)this + 352);
  sub_14B0C((uint64_t)this + 312);

  TUI::Evaluation::DynamicCache::~DynamicCache((TUI::Evaluation::Context *)((char *)this + 64));
  sub_148E8((uint64_t)this + 48);
}

void TUI::Evaluation::Context::Context(uint64_t a1, uint64_t a2, void *a3, void *a4, void *a5, void *a6)
{
  id v11;
  id v12;
  id v13;
  id v14;

  v11 = a3;
  v14 = a4;
  v13 = a5;
  a6;
  *(_QWORD *)(a1 + 48) = 0;
  *(_QWORD *)(a1 + 56) = 0;
  TUI::Evaluation::DynamicCache::DynamicCache((TUI::Evaluation::DynamicCache *)(a1 + 64));
  *(_OWORD *)(a1 + 248) = 0u;
  *(_QWORD *)(a1 + 176) = 0;
  *(_OWORD *)(a1 + 264) = 0u;
  *(_OWORD *)(a1 + 280) = 0u;
  *(_OWORD *)(a1 + 296) = 0u;
  *(_OWORD *)(a1 + 312) = 0u;
  *(_OWORD *)(a1 + 328) = 0u;
  *(_OWORD *)(a1 + 152) = 0u;
  *(_DWORD *)(a1 + 344) = 1065353216;
  *(_OWORD *)(a1 + 352) = 0u;
  *(_OWORD *)(a1 + 368) = 0u;
  *(_DWORD *)(a1 + 384) = 1065353216;
  *(_OWORD *)(a1 + 392) = 0u;
  *(_OWORD *)(a1 + 408) = 0u;
  *(_OWORD *)(a1 + 424) = 0u;
  *(_OWORD *)(a1 + 440) = 0u;
  *(_OWORD *)(a1 + 456) = 0u;
  *(_OWORD *)(a1 + 472) = 0u;
  *(_DWORD *)(a1 + 488) = 1065353216;
  *(_OWORD *)(a1 + 496) = 0u;
  *(_OWORD *)(a1 + 512) = 0u;
  *(_DWORD *)(a1 + 528) = 1065353216;
  *(_OWORD *)(a1 + 536) = 0u;
  *(_QWORD *)(a1 + 560) = a2;
  v12 = v11;
  *(_QWORD *)(a1 + 568) = v12;
  *(_QWORD *)(a1 + 576) = objc_msgSend(v12, "packageBuffer", a1 + 352, a1 + 64, v11, v13);
  *(_QWORD *)(a1 + 584) = 0;
  *(_QWORD *)(a1 + 600) = v14;
  *(_OWORD *)(a1 + 608) = 0u;
  *(_OWORD *)(a1 + 624) = 0u;
  *(_QWORD *)(a1 + 640) = 0;
  *(_DWORD *)(a1 + 648) = 1065353216;
  *(_OWORD *)(a1 + 656) = 0u;
  *(_OWORD *)(a1 + 672) = 0u;
  *(_QWORD *)(a1 + 688) = 0;
  *(_OWORD *)(a1 + 712) = 0u;
  *(_OWORD *)(a1 + 728) = 0u;
  *(_OWORD *)(a1 + 744) = 0u;
  *(_QWORD *)(a1 + 760) = 0;
  operator new();
}

void sub_EF0F4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, TUI::Evaluation::DynamicCache *a10, void *a11, void *a12, void *a13, void *a14)
{
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  void *v19;

  v19 = *(void **)(v14 + 656);
  if (v19)
  {
    *(_QWORD *)(v14 + 664) = v19;
    operator delete(v19);
  }
  sub_14A98(v14 + 616);

  sub_14B0C(v17 + 248);
  sub_14B0C(v17 + 208);
  sub_358DC(a9);
  sub_14B0C(v14 + 312);

  TUI::Evaluation::DynamicCache::~DynamicCache(a10);
  sub_148E8(v15);

  _Unwind_Resume(a1);
}

void sub_EF264(uint64_t a1)
{
  __int128 v2;
  __int128 v3;
  int v4;

  *(_QWORD *)&v2 = a1;
  DWORD2(v2) = 0;
  sub_FC0D4((uint64_t)&v2, 0x100uLL);
  if (*(_QWORD *)(a1 + 88))
  {
    v2 = 0u;
    v3 = 0u;
    v4 = 1065353216;
    sub_87C08(a1 + 64, (uint64_t *)&v2);
    sub_14B0C((uint64_t)&v2);
  }
  *(_QWORD *)&v2 = a1 + 32;
  DWORD2(v2) = 0;
  sub_FC0D4((uint64_t)&v2, 0x100uLL);
  if (*(_QWORD *)(a1 + 128))
  {
    v2 = 0u;
    v3 = 0u;
    v4 = 1065353216;
    sub_FC180(a1 + 104, (uint64_t *)&v2);
    sub_358DC((uint64_t)&v2);
  }
}

void TUI::Evaluation::Context::lookupConstant(TUI::Evaluation::Context *this@<X0>, unsigned int a2@<0:W1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  id v14;
  id v15;
  int v16;
  void *v17;
  uint64_t v18;

  v6 = (unsigned __int16)a2;
  objc_msgSend(*((id *)this + 67), "recordEvent:", 14);
  *(_DWORD *)a3 = 0;
  *(_QWORD *)(a3 + 8) = 0;
  if ((_DWORD)v6 == 1 || objc_msgSend(*((id *)this + 73), "hasExtendedNS:", v6))
  {
    v7 = *((_QWORD *)this + 70);
    *((_QWORD *)this + 74) |= sub_EF478(a2, v7);
    v8 = (void *)*((_QWORD *)this + 73);
    if (v8)
    {
      objc_msgSend(v8, "lookupName:symtab:", a2, v7);
      *(_DWORD *)a3 = v16;
      *(_QWORD *)(a3 + 8) = v17;
      *(_QWORD *)(a3 + 16) = v18;

    }
  }
  else
  {
    objc_msgSend(*((id *)this + 67), "recordEvent:", 14);
    v9 = (*(uint64_t (**)(_QWORD, _QWORD))(**(_QWORD **)this + 8))(*(_QWORD *)this, a2);
    if (v10 == -1)
    {
      v14 = TUI::Symbol::Tab::string(*((TUI::Symbol::Tab **)this + 70), a2);
      v15 = (id)objc_claimAutoreleasedReturnValue(v14);
      TUI::Evaluation::Context::reportError((uint64_t)this, 1007, v15);

    }
    else
    {
      v11 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v9 + 32))(v9);
      *(_DWORD *)a3 = *(_DWORD *)v11;
      v12 = *(id *)(v11 + 8);
      v13 = *(_QWORD *)(v11 + 16);
      *(_QWORD *)(a3 + 8) = v12;
      *(_QWORD *)(a3 + 16) = v13;
    }
  }
}

void sub_EF464(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, id a9)
{

  _Unwind_Resume(a1);
}

uint64_t sub_EF478(int a1, uint64_t a2)
{
  unsigned __int16 *v2;
  unint64_t v3;
  int v4;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;

  if ((unsigned __int16)a1 != 1)
    return 32;
  v2 = *(unsigned __int16 **)(a2 + 40);
  v3 = *(_QWORD *)(a2 + 48) - (_QWORD)v2;
  v4 = v3 < 0x13 ? 0xFFFF : v2[9];
  if (v4 == HIWORD(a1))
    return 32;
  if (v3 < 0x15)
    v6 = 0xFFFF;
  else
    v6 = v2[10];
  if (v6 == HIWORD(a1))
    return 4;
  v7 = v3 < 0x17 ? 0xFFFF : v2[11];
  if (v7 == HIWORD(a1))
    return 4;
  if (v3 < 0x1B)
    v8 = 0xFFFF;
  else
    v8 = v2[13];
  if (v8 == HIWORD(a1))
    return 8;
  if (v3 < 0x19)
    v9 = 0xFFFF;
  else
    v9 = v2[12];
  if (v9 == HIWORD(a1))
    return 1;
  v10 = v3 < 0xB3 ? 0xFFFF : v2[89];
  if (v10 == HIWORD(a1))
    return 1;
  if (v3 < 0x1D)
    v11 = 0xFFFF;
  else
    v11 = v2[14];
  if (v11 == HIWORD(a1))
    return 8;
  if (v3 < 0x3B)
    v12 = 0xFFFF;
  else
    v12 = v2[29];
  if (v12 == HIWORD(a1))
    return 16;
  if (v3 < 0xBF)
    v13 = 0xFFFF;
  else
    v13 = v2[95];
  if (v13 == HIWORD(a1))
    return 32;
  v14 = v3 < 0x55 ? 0xFFFF : v2[42];
  if (v14 == HIWORD(a1))
    return 32;
  v15 = v3 < 0x63 ? 0xFFFF : v2[49];
  if (v15 == HIWORD(a1))
    return 32;
  if (v3 < 0x65)
    v16 = 0xFFFF;
  else
    v16 = v2[50];
  if (v16 == HIWORD(a1))
    return 16;
  v17 = v3 < 0x75 ? 0xFFFF : v2[58];
  if (v17 == HIWORD(a1))
    return 32;
  v18 = v3 < 0xAD ? 0xFFFF : v2[86];
  if (v18 == HIWORD(a1))
    return 32;
  if (v3 < 0xDD)
    v19 = 0xFFFF;
  else
    v19 = v2[110];
  if (v19 == HIWORD(a1))
    return 16;
  else
    return 0;
}

void TUI::Evaluation::Context::reportError(uint64_t a1, uint64_t a2, void *a3)
{
  id v5;
  NSMutableDictionary *v6;
  NSMutableDictionary *v7;
  const TUI::Package::Buffer *v8;
  id v9;
  unsigned int *v10;
  unsigned int *v11;
  unint64_t v12;
  unsigned __int16 *v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  id v17;
  void *v18;
  id v19;
  void *v20;
  NSMutableArray *v21;
  void *v22;
  NSMutableDictionary *v23;
  void *v24;
  unint64_t v25;

  v5 = a3;
  if (*(_BYTE *)(a1 + 552))
  {
    v6 = objc_opt_new(NSMutableDictionary);
    v7 = v6;
    if (v5)
      -[NSMutableDictionary setObject:forKeyedSubscript:](v6, "setObject:forKeyedSubscript:", v5, CFSTR("TUIErrorInfoKey"));
    if (*(_QWORD *)(a1 + 664) != *(_QWORD *)(a1 + 656))
    {
      v8 = *(const TUI::Package::Buffer **)(a1 + 576);
      v9 = objc_msgSend(objc_alloc((Class)NSMutableArray), "initWithCapacity:", (uint64_t)(*(_QWORD *)(a1 + 664) - *(_QWORD *)(a1 + 656)) >> 2);
      v10 = *(unsigned int **)(a1 + 656);
      v11 = *(unsigned int **)(a1 + 664);
      while (v10 != v11)
      {
        v12 = *v10;
        if (*((_QWORD *)v8 + 17) > v12 >> 12
          && (v13 = (unsigned __int16 *)(*((_QWORD *)v8 + 16) + 8 * (v12 >> 12))) != 0)
        {
          v14 = *v13;
          v15 = (unint64_t)*((unsigned int *)v13 + 1) << 32;
          v16 = v14 << 16;
        }
        else
        {
          v15 = 0xFFFFFFFF00000000;
          v16 = 4294901760;
        }
        v25 = v15 | v16 | v12 & 0xFFF;
        v17 = TUI::Package::Location::Entry::description((TUI::Package::Location::Entry *)&v25, v8);
        v18 = (void *)objc_claimAutoreleasedReturnValue(v17);
        objc_msgSend(v9, "addObject:", v18);

        ++v10;
      }
      v19 = objc_msgSend(v9, "copy");

      -[NSMutableDictionary setObject:forKeyedSubscript:](v7, "setObject:forKeyedSubscript:", v19, CFSTR("TUIErrorLocationsKey"));
    }
    v20 = *(void **)(a1 + 680);
    if (!v20)
    {
      v21 = objc_opt_new(NSMutableArray);
      v22 = *(void **)(a1 + 680);
      *(_QWORD *)(a1 + 680) = v21;

      v20 = *(void **)(a1 + 680);
    }
    if (-[NSMutableDictionary count](v7, "count"))
      v23 = v7;
    else
      v23 = 0;
    v24 = (void *)objc_claimAutoreleasedReturnValue(+[NSError errorWithDomain:code:userInfo:](NSError, "errorWithDomain:code:userInfo:", CFSTR("TUIErrorDomain"), a2, v23));
    objc_msgSend(v20, "addObject:", v24);

  }
}

void sub_EF850(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

uint64_t TUI::Evaluation::Context::lookupFunction(TUI::Evaluation::Context *this, unsigned int a2)
{
  return (*(uint64_t (**)(_QWORD, _QWORD))(**(_QWORD **)this + 16))(*(_QWORD *)this, a2);
}

uint64_t TUI::Evaluation::Context::lookupBinding(id *this, unsigned int a2)
{
  objc_msgSend(this[67], "recordEvent:", 13);
  return (**(uint64_t (***)(id, _QWORD))*this)(*this, a2);
}

id TUI::Evaluation::Context::objectForBinding(id *this, unsigned int a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;

  v3 = a2;
  objc_msgSend(this[67], "recordEvent:", 13);
  v4 = (**(uint64_t (***)(id, uint64_t))*this)(*this, v3);
  if (v5 == -1)
    v6 = 0;
  else
    v6 = *(id *)((*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 16))(v4) + 32);
  return v6;
}

uint64_t TUI::Evaluation::Context::lookupStyle(id *this, unsigned int a2)
{
  objc_msgSend(this[67], "recordEvent:", 16);
  return (*(uint64_t (**)(id, _QWORD))(*(_QWORD *)*this + 24))(*this, a2);
}

uint64_t TUI::Evaluation::Context::lookupAnimation(TUI::Evaluation::Context *this, unsigned int a2)
{
  return (*(uint64_t (**)(_QWORD, _QWORD))(**(_QWORD **)this + 32))(*(_QWORD *)this, a2);
}

uint64_t TUI::Evaluation::Context::lookupDefinedElement(id *this, unsigned int a2)
{
  objc_msgSend(this[67], "recordEvent:", 15);
  return (*(uint64_t (**)(id, _QWORD))(*(_QWORD *)*this + 40))(*this, a2);
}

uint64_t TUI::Evaluation::Context::lookupNamedElement(id *this, unsigned int a2)
{
  objc_msgSend(this[67], "recordEvent:", 15);
  return (*(uint64_t (**)(id, _QWORD))(*(_QWORD *)*this + 48))(*this, a2);
}

uint64_t TUI::Evaluation::Context::pushBinding(TUI::Evaluation::Context *this, Entry a2, objc_object *a3)
{
  objc_object *v6;
  Entry v7;
  Entry v8;
  uint64_t v9;
  id v11[6];
  id v12[4];
  id v13;

  v6 = a3;
  v7 = a2;
  v8 = (Entry)-65536;
  TUI::Evaluation::Enumerator::State::State((uint64_t)v12, v8, v7);
  objc_storeStrong(&v13, a3);
  TUI::Evaluation::Enumerator::State::State((TUI::Evaluation::Enumerator::State *)v11, (const TUI::Evaluation::Enumerator::State *)v12);
  v9 = (**(uint64_t (***)(uint64_t, _QWORD, id *))(*(_QWORD *)this + 8))(*(_QWORD *)this + 8, HIDWORD(v11[0]), v11);
  TUI::Evaluation::Enumerator::State::~State(v11);
  TUI::Evaluation::Enumerator::State::~State(v12);

  return v9;
}

void sub_EFAC0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id a15)
{
  void *v15;

  TUI::Evaluation::Enumerator::State::~State((id *)&a9);
  TUI::Evaluation::Enumerator::State::~State(&a15);

  _Unwind_Resume(a1);
}

uint64_t TUI::Evaluation::Context::pushBinding(uint64_t a1, uint64_t a2)
{
  return (**(uint64_t (***)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)a1 + 8))(*(_QWORD *)a1 + 8, *(unsigned int *)(a2 + 4), a2);
}

uint64_t TUI::Evaluation::Context::enumeratorStateForBinding(TUI::Evaluation::Context *this, unsigned int a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = (***(uint64_t (****)(_QWORD, _QWORD))this)(*(_QWORD *)this, a2);
  if (v3 == -1)
    return 0;
  else
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)v2 + 16))(v2);
}

uint64_t TUI::Evaluation::Context::beginScope(TUI::Evaluation::Context *this)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)this + 72))(*(_QWORD *)this);
}

uint64_t TUI::Evaluation::Context::endScope(TUI::Evaluation::Context *this)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)this + 80))(*(_QWORD *)this);
}

BOOL TUI::Evaluation::Context::isDefined(id *this, uint64_t a2)
{
  unsigned int v2;
  uint64_t v4;
  id v5;
  _BOOL8 v6;
  void (*v7)(void);
  uint64_t v8;
  int v10;
  void *v11;

  v2 = a2;
  if (HIDWORD(a2) == 2)
  {
    v7 = *(void (**)(void))(*(_QWORD *)*this + 48);
LABEL_12:
    v7();
    return v8 != -1;
  }
  if (HIDWORD(a2) == 1)
  {
    v7 = **(void (***)(void))*this;
    goto LABEL_12;
  }
  if (HIDWORD(a2))
    return 0;
  if ((unsigned __int16)a2 != 1 && !objc_msgSend(this[73], "hasExtendedNS:"))
  {
    v7 = *(void (**)(void))(*(_QWORD *)*this + 8);
    goto LABEL_12;
  }
  v4 = (uint64_t)this[70];
  this[74] = (id)((unint64_t)this[74] | sub_EF478(v2, v4));
  v5 = this[73];
  if (!v5)
    return 0;
  objc_msgSend(v5, "lookupName:symtab:", v2, v4);
  v6 = v10 != 0;

  return v6;
}

void TUI::Evaluation::Context::evaluateParams(TUI::Evaluation::Context *a1, unint64_t a2, unint64_t a3)
{
  TUI::Evaluation::Context::evaluateParams((uint64_t)a1, a3);
  TUI::Evaluation::Context::evaluateParams(a1, a2);
}

void TUI::Evaluation::Context::evaluateParams(uint64_t a1, unint64_t a2)
{
  unint64_t v2;
  unint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int *v12;
  unint64_t v13;
  uint64_t v14;
  int v15;
  unint64_t v16;
  int v17;

  v2 = a2;
  v3 = HIDWORD(a2);
  if (a2 != 0xFFFFFFFFLL && v3 != 0)
  {
    v6 = 8 * a2;
    do
    {
      v7 = *(_QWORD *)(a1 + 576);
      if (*(_QWORD *)(v7 + 168) > v2 && (v8 = *(_QWORD *)(v7 + 160), v6 + v8))
      {
        v9 = v8 + v6;
        v10 = *(unsigned __int16 *)(v8 + v6);
        v11 = v10 & 0xFFF;
        v12 = (int *)(v9 + 4);
        v13 = (unint64_t)*(unsigned __int16 *)(v9 + 2) << 16;
        v14 = (v10 << 20) & 0xF00000000;
      }
      else
      {
        v11 = 0;
        v14 = 0;
        v13 = 4294901760;
        v12 = &TUIValueNil;
      }
      v15 = *v12;
      v16 = v11 | v13 | v14;
      v17 = v15;
      TUI::Evaluation::Context::pushArgument((TUI::Instruction::Evaluation **)a1, (const Entry *)&v16);
      v6 += 8;
      ++v2;
      --v3;
    }
    while (v3);
  }
}

void TUI::Evaluation::Context::evaluateParams(TUI::Evaluation::Context *this, unint64_t a2)
{
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  int *v15;
  unint64_t v16;
  uint64_t v17;
  TUI::Instruction::Decoder *v18;
  unint64_t v19;
  id v20;
  void *v21;
  _QWORD v22[2];

  v3 = a2;
  v4 = HIDWORD(a2);
  if (a2 != 0xFFFFFFFFLL && v4 != 0)
  {
    v7 = 8 * a2;
    do
    {
      v8 = *((_QWORD *)this + 72);
      if (*(_QWORD *)(v8 + 200) > v3 && (v9 = *(_QWORD *)(v8 + 192), v7 + v9))
      {
        v10 = v9 + v7;
        v11 = *(unsigned __int16 *)(v9 + v7);
        v12 = v11 & 0xFFF;
        v13 = (v11 >> 12) & 7;
        v14 = v11 >> 15;
        v15 = (int *)(v10 + 4);
        v16 = (unint64_t)*(unsigned __int16 *)(v10 + 2) << 16;
        v17 = v13 << 32;
      }
      else
      {
        v12 = 0;
        v14 = 0;
        v17 = 0;
        v16 = 4294901760;
        v15 = &TUIValueNil;
      }
      v18 = (TUI::Instruction::Decoder *)*v15;
      v19 = v16 | v12;
      v22[0] = v16 | v12 | v17;
      v22[1] = v14 | ((_QWORD)v18 << 32);
      if (v14 && !TUI::Evaluation::Context::isDefined((id *)this, v16 | v12 | v17))
      {
        if (TUIValueNotNil((int)v18))
        {
          TUI::Evaluation::Context::pushParam((TUI::Instruction::Evaluation **)this, (unsigned int *)v22, v18);
        }
        else
        {
          v2 = v2 & 0xFFFFFFFF00000000 | v19;
          v20 = TUI::Symbol::Tab::string(*((TUI::Symbol::Tab **)this + 70), v2);
          v21 = (void *)objc_claimAutoreleasedReturnValue(v20);
          TUI::Evaluation::Context::reportError((uint64_t)this, 1018, v21);

        }
      }
      v7 += 8;
      ++v3;
      --v4;
    }
    while (v4);
  }
}

void sub_EFEAC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void TUI::Evaluation::Context::pushArgument(TUI::Instruction::Evaluation **this, const Entry *a2)
{
  Entry v4;
  id v5;
  objc_object *v6;
  void *v7;
  unsigned int v8;
  id v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  id v13;
  Entry v14;
  id v15;
  unsigned int v16;
  unsigned int v17;
  unint64_t *p_shared_owners;
  int v19[4];
  std::__shared_weak_count *v20;
  int v21[4];
  std::__shared_weak_count *v22;
  id v23;
  id v24;

  v4 = a2[1];
  switch(v4)
  {
    case 2u:
      TUI::Instruction::Evaluation::evaluate((double *)&v23, this[1], (TUI::Instruction::Decoder *)a2[2]);
      v5 = TUI::Evaluation::ResolvedValue::elementValue(&v23, (const TUI::Evaluation::Context *)this);
      v6 = (objc_object *)objc_claimAutoreleasedReturnValue(v5);

      if (v6)
      {
        v7 = (void *)objc_claimAutoreleasedReturnValue(-[objc_object parsedElement](v6, "parsedElement"));

        if (!v7)
        {
          v15 = -[objc_object ref](v6, "ref");
          v16 = *a2;
          (*(void (**)(int *__return_ptr))(*(_QWORD *)v15 + 112))(v19);
          v17 = -[objc_object node](v6, "node");
          v23 = 0;
          LODWORD(v24) = v17;
          TUI::Evaluation::Context::pushNamedElement(this, v16, v19, (uint64_t)&v23);

          v10 = v20;
          if (!v20)
            goto LABEL_12;
          p_shared_owners = (unint64_t *)&v20->__shared_owners_;
          do
            v12 = __ldaxr(p_shared_owners);
          while (__stlxr(v12 - 1, p_shared_owners));
LABEL_17:
          if (!v12)
          {
            ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
            std::__shared_weak_count::__release_weak(v10);
          }
          goto LABEL_12;
        }
        v8 = *a2;
        -[objc_object closureAndCapture](v6, "closureAndCapture");
        v23 = (id)objc_claimAutoreleasedReturnValue(-[objc_object parsedElement](v6, "parsedElement"));
        LODWORD(v24) = TUIElementNodeNil;
        v9 = v23;
        TUI::Evaluation::Context::pushNamedElement(this, v8, v21, (uint64_t)&v23);

        v10 = v22;
        if (v22)
        {
          v11 = (unint64_t *)&v22->__shared_owners_;
          do
            v12 = __ldaxr(v11);
          while (__stlxr(v12 - 1, v11));
          goto LABEL_17;
        }
      }
LABEL_12:

      return;
    case 1u:
      TUI::Instruction::Evaluation::evaluate((double *)&v23, this[1], (TUI::Instruction::Decoder *)a2[2]);
      v13 = TUI::Evaluation::ResolvedValue::objectValue((TUI::Evaluation::ResolvedValue *)&v23, (const TUI::Evaluation::Context *)this);
      v6 = (objc_object *)objc_claimAutoreleasedReturnValue(v13);

      v14 = *a2;
      TUI::Evaluation::Context::pushBinding((TUI::Evaluation::Context *)this, v14, v6);
      goto LABEL_12;
    case 0u:
      TUI::Evaluation::Context::pushConstant(this, *a2, (TUI::Instruction::Decoder *)a2[2]);
      break;
  }
}

void sub_F00A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id a16)
{
  void *v16;

  sub_148E8((uint64_t)&a11);
  _Unwind_Resume(a1);
}

void TUI::Evaluation::Context::pushParam(TUI::Instruction::Evaluation **a1, unsigned int *a2, TUI::Instruction::Decoder *a3)
{
  unsigned int v5;
  id v6;
  objc_object *v7;
  void *v8;
  unsigned int v9;
  unsigned int v10;
  id v11;
  id v12;
  Entry v13;
  id v14;
  unsigned int v15;
  unsigned int v16;
  std::__shared_weak_count *v17;
  unint64_t *p_shared_owners;
  unint64_t v19;
  _QWORD v20[2];
  std::__shared_weak_count *v21;
  id v22;
  id v23;

  v5 = a2[1];
  switch(v5)
  {
    case 2u:
      TUI::Instruction::Evaluation::evaluate((uint64_t *)&v22, a1[1], a3);
      v6 = TUI::Evaluation::ResolvedValue::elementValue(&v22, (const TUI::Evaluation::Context *)a1);
      v7 = (objc_object *)objc_claimAutoreleasedReturnValue(v6);

      v8 = (void *)objc_claimAutoreleasedReturnValue(-[objc_object parsedElement](v7, "parsedElement"));
      if (v8)
      {
        v9 = *a2;
        v10 = TUIClosureNil;
        v22 = (id)objc_claimAutoreleasedReturnValue(-[objc_object parsedElement](v7, "parsedElement"));
        LODWORD(v23) = TUIElementNodeNil;
        v11 = v22;
        TUI::Evaluation::Context::pushNamedElement(a1, v9, v10, (uint64_t)&v22);

      }
      else
      {
        v14 = -[objc_object ref](v7, "ref");
        v15 = *a2;
        (*(void (**)(_QWORD *__return_ptr))(*(_QWORD *)v14 + 112))(v20);
        v16 = -[objc_object node](v7, "node");
        v22 = 0;
        LODWORD(v23) = v16;
        TUI::Evaluation::Context::pushNamedElement(a1, v15, (int *)v20, (uint64_t)&v22);

        v17 = v21;
        if (v21)
        {
          p_shared_owners = (unint64_t *)&v21->__shared_owners_;
          do
            v19 = __ldaxr(p_shared_owners);
          while (__stlxr(v19 - 1, p_shared_owners));
          if (!v19)
          {
            ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
            std::__shared_weak_count::__release_weak(v17);
          }
        }
      }
      goto LABEL_8;
    case 1u:
      TUI::Instruction::Evaluation::evaluate((uint64_t *)&v22, a1[1], a3);
      v12 = TUI::Evaluation::ResolvedValue::objectValue((TUI::Evaluation::ResolvedValue *)&v22, (const TUI::Evaluation::Context *)a1);
      v7 = (objc_object *)objc_claimAutoreleasedReturnValue(v12);

      v13 = (Entry)*a2;
      TUI::Evaluation::Context::pushBinding((TUI::Evaluation::Context *)a1, v13, v7);
LABEL_8:

      return;
    case 0u:
      TUI::Evaluation::Context::pushConstant(a1, *a2, (TUI::Instruction::Decoder *)a3);
      break;
  }
}

void sub_F02EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, id a12)
{
  void *v12;

  sub_148E8((uint64_t)&a10);
  _Unwind_Resume(a1);
}

void TUI::Evaluation::Context::pushConstant(TUI::Instruction::Evaluation **a1, unsigned int a2, TUI::Instruction::Decoder *a3)
{
  uint64_t v5[3];

  TUI::Instruction::Evaluation::evaluate(v5, a1[1], a3);
  (*(void (**)(uint64_t, _QWORD, uint64_t *))(*((_QWORD *)*a1 + 1) + 8))((uint64_t)*a1 + 8, a2, v5);

}

void sub_F03AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11)
{

  _Unwind_Resume(a1);
}

void TUI::Evaluation::Context::resolve(uint64_t a1@<X0>, TUI::Instruction::Decoder *a2@<X1>, double *a3@<X8>)
{
  TUI::Instruction::Evaluation::evaluate(a3, *(TUI::Instruction::Evaluation **)(a1 + 8), a2);
}

void TUI::Evaluation::Context::pushNamedElement(_QWORD *a1, unsigned int a2, int *a3, uint64_t a4)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;
  int v11;
  uint64_t v12;
  std::__shared_weak_count *v13;

  v4 = *a1 + 8;
  v11 = *a3;
  v5 = (std::__shared_weak_count *)*((_QWORD *)a3 + 2);
  v12 = *((_QWORD *)a3 + 1);
  v13 = v5;
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(*(_QWORD *)v4 + 56))(v4, a2, a4, &v11);
  v8 = v13;
  if (v13)
  {
    v9 = (unint64_t *)&v13->__shared_owners_;
    do
      v10 = __ldaxr(v9);
    while (__stlxr(v10 - 1, v9));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
}

void sub_F0474(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_148E8(v1);
  _Unwind_Resume(a1);
}

void TUI::Evaluation::Context::pushNamedElement(_QWORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  _QWORD v10[2];
  std::__shared_weak_count *v11;

  v6 = *a1;
  (*(void (**)(_QWORD *__return_ptr, _QWORD, _QWORD))(*(_QWORD *)*a1 + 112))(v10, *a1, a3);
  (*(void (**)(uint64_t, _QWORD, uint64_t, _QWORD *))(*(_QWORD *)(v6 + 8) + 56))(v6 + 8, a2, a4, v10);
  v7 = v11;
  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
}

void sub_F052C(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_148E8(v1 + 8);
  _Unwind_Resume(a1);
}

void TUI::Evaluation::Context::resolve(uint64_t a1@<X0>, TUI::Instruction::Decoder *a2@<X1>, uint64_t a3@<X8>)
{
  if (TUIConditionIsNil((int)a2))
  {
    *(_DWORD *)a3 = 12;
    *(_QWORD *)(a3 + 8) = 0;
    *(_BYTE *)(a3 + 16) = 1;
  }
  else
  {
    TUI::Instruction::Evaluation::evaluate((double *)a3, *(TUI::Instruction::Evaluation **)(a1 + 8), a2);
  }
}

uint64_t TUI::Evaluation::Context::pushConstant(TUI::Evaluation::Context *this, unsigned int a2, const ResolvedValue *a3)
{
  return (*(uint64_t (**)(uint64_t, _QWORD, const ResolvedValue *))(*(_QWORD *)(*(_QWORD *)this + 8) + 8))(*(_QWORD *)this + 8, a2, a3);
}

uint64_t TUI::Evaluation::Context::pushFunction(_QWORD *a1, uint64_t a2, unsigned int a3)
{
  unint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;

  v6 = a2;
  result = TUIDefinitionNotNil(a2);
  if ((_DWORD)result)
  {
    v8 = a1[72];
    if (*(_QWORD *)(v8 + 184) > v6 && (v9 = *(_QWORD *)(v8 + 176) + 12 * v6) != 0)
    {
      v10 = *(unsigned __int16 *)(v9 + 2);
      v11 = (unint64_t)*(unsigned __int16 *)(v9 + 4) << 16;
    }
    else
    {
      v10 = 0;
      v11 = 4294901760;
    }
    return (*(uint64_t (**)(uint64_t, unint64_t, uint64_t, _QWORD))(*(_QWORD *)(*a1 + 8) + 16))(*a1 + 8, v10 | v11, a2, a3);
  }
  return result;
}

void TUI::Evaluation::Context::pushNamedElement(TUI::Instruction::Evaluation **a1, unsigned int a2, TUI::Instruction::Decoder *a3)
{
  id v6;
  void *v7;
  void *v8;
  uint64_t v9;
  id v10;
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v13;
  unsigned int v14;
  std::__shared_weak_count *v15;
  unint64_t *v16;
  unint64_t v17;
  _BYTE v18[16];
  std::__shared_weak_count *v19;
  _BYTE v20[16];
  std::__shared_weak_count *v21;
  id v22;
  id v23;

  if (TUIValueNotNil((int)a3))
  {
    TUI::Instruction::Evaluation::evaluate((double *)&v22, a1[1], a3);
    v6 = TUI::Evaluation::ResolvedValue::elementValue(&v22, (const TUI::Evaluation::Context *)a1);
    v7 = (void *)objc_claimAutoreleasedReturnValue(v6);

    if (v7 && (~a2 & 0xFFFF0000) != 0 && (unsigned __int16)a2 != 0xFFFFLL)
    {
      v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "parsedElement"));

      v9 = (uint64_t)*a1 + 8;
      if (v8)
      {
        v10 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "parsedElement"));
        v22 = v10;
        LODWORD(v23) = TUIElementNodeNil;
        objc_msgSend(v7, "closureAndCapture");
        (*(void (**)(uint64_t, _QWORD, id *, _BYTE *))(*(_QWORD *)v9 + 56))(v9, a2, &v22, v20);
        v11 = v21;
        if (v21)
        {
          p_shared_owners = (unint64_t *)&v21->__shared_owners_;
          do
            v13 = __ldaxr(p_shared_owners);
          while (__stlxr(v13 - 1, p_shared_owners));
          if (!v13)
          {
            ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
            std::__shared_weak_count::__release_weak(v11);
          }
        }

      }
      else
      {
        v14 = objc_msgSend(v7, "node");
        v22 = 0;
        LODWORD(v23) = v14;
        objc_msgSend(v7, "closureAndCapture");
        (*(void (**)(uint64_t, _QWORD, id *, _BYTE *))(*(_QWORD *)v9 + 56))(v9, a2, &v22, v18);
        v15 = v19;
        if (v19)
        {
          v16 = (unint64_t *)&v19->__shared_owners_;
          do
            v17 = __ldaxr(v16);
          while (__stlxr(v17 - 1, v16));
          if (!v17)
          {
            ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
            std::__shared_weak_count::__release_weak(v15);
          }
        }

      }
    }
  }
  else
  {
    v7 = 0;
  }

}

void sub_F0830(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16)
{
  void *v16;
  uint64_t v17;

  sub_148E8(v17 + 8);

  _Unwind_Resume(a1);
}

uint64_t TUI::Evaluation::Context::pushStyle(uint64_t *a1, int *a2, unsigned int a3)
{
  uint64_t result;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  unint64_t v12;
  _BOOL8 v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;

  result = TUIDefinitionNotNil(*a2);
  if ((_DWORD)result)
  {
    v7 = a1[72];
    v8 = *a2;
    if (*(_QWORD *)(v7 + 184) > v8 && (v9 = *(_QWORD *)(v7 + 176) + 12 * v8) != 0)
    {
      v10 = *(unsigned __int16 *)(v9 + 2);
      v11 = *(_DWORD *)(v9 + 8);
      v12 = (unint64_t)*(unsigned __int16 *)(v9 + 4) << 16;
      v13 = v11 != -1;
    }
    else
    {
      v10 = 0;
      v13 = 0;
      v12 = 4294901760;
    }
    v14 = *a1;
    v15 = *(_OWORD *)a2;
    v16 = *((_QWORD *)a2 + 2);
    return (*(uint64_t (**)(uint64_t, unint64_t, __int128 *, _QWORD, _BOOL8))(*(_QWORD *)(v14 + 8) + 24))(v14 + 8, v10 | v12, &v15, a3, v13);
  }
  return result;
}

uint64_t TUI::Evaluation::Context::pushAnimation(_QWORD *a1, uint64_t a2, unsigned int a3)
{
  unint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v6 = a2;
  result = TUIDefinitionNotNil(a2);
  if ((_DWORD)result)
  {
    v8 = a1[72];
    if (*(_QWORD *)(v8 + 184) > v6)
    {
      v9 = *(_QWORD *)(v8 + 176) + 12 * v6;
      if (v9)
      {
        v10 = *(unsigned __int16 *)(v9 + 2);
        v11 = *(unsigned __int16 *)(v9 + 4);
        if (v11 != 0xFFFF && (_DWORD)v10 != 0xFFFF)
          return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(*a1 + 8) + 32))(*a1 + 8, v10 | (v11 << 16), a2, a3);
      }
    }
  }
  return result;
}

uint64_t TUI::Evaluation::Context::pushDefinedElement(_QWORD *a1, uint64_t a2, unsigned int a3)
{
  unint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v6 = a2;
  result = TUIDefinitionNotNil(a2);
  if ((_DWORD)result)
  {
    v8 = a1[72];
    if (*(_QWORD *)(v8 + 184) > v6)
    {
      v9 = *(_QWORD *)(v8 + 176) + 12 * v6;
      if (v9)
      {
        v10 = *(unsigned __int16 *)(v9 + 2);
        v11 = *(unsigned __int16 *)(v9 + 4);
        if (v11 != 0xFFFF && (_DWORD)v10 != 0xFFFF)
          return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, _QWORD, BOOL))(*(_QWORD *)(*a1 + 8) + 40))(*a1 + 8, v10 | (v11 << 16), a2, a3, *(_DWORD *)(v9 + 8) != -1);
      }
    }
  }
  return result;
}

uint64_t TUI::Evaluation::Context::pushClosure(_QWORD *a1)
{
  return (*(uint64_t (**)(_QWORD))(*(_QWORD *)*a1 + 120))(*a1);
}

{
  return (*(uint64_t (**)(_QWORD))(*(_QWORD *)*a1 + 128))(*a1);
}

{
  return (*(uint64_t (**)(_QWORD))(*(_QWORD *)*a1 + 136))(*a1);
}

{
  return (*(uint64_t (**)(_QWORD))(*(_QWORD *)*a1 + 144))(*a1);
}

{
  return (*(uint64_t (**)(_QWORD))(*(_QWORD *)*a1 + 152))(*a1);
}

uint64_t TUI::Evaluation::Context::popClosure(TUI::Evaluation::Context *this)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)this + 168))(*(_QWORD *)this);
}

id TUI::Evaluation::Context::clearErrors(id *this)
{
  return objc_msgSend(this[85], "removeAllObjects");
}

id TUI::Evaluation::Context::lastError(id *this)
{
  void *v1;
  id v2;

  v1 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(this[85], "lastObject"));
  v2 = objc_msgSend(v1, "code");

  return v2;
}

void sub_F0B40(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void TUI::Evaluation::Context::newSnapshot()
{
  operator new();
}

void sub_F0C5C(uint64_t a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_148E8((uint64_t)va);
  operator delete();
}

void sub_F0CAC(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  _QWORD *v4;
  unint64_t *v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;

  v4 = *(_QWORD **)(a1 + 48);
  v3 = *(_QWORD *)(a1 + 56);
  *a2 = v4;
  a2[1] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  if (!v4)
    goto LABEL_9;
  v7 = *(_QWORD *)(a1 + 544);
  v8 = *(_QWORD *)(a1 + 752);
  v9 = *(_QWORD *)(a1 + 208);
  v10 = *(id *)(a1 + 760);
  if (v4[1] != v7 || v4[2] != v8 || (id)v4[3] != v10)
  {

    goto LABEL_9;
  }
  v11 = v4[4];

  if (v11 != v9)
LABEL_9:
    operator new();
}

void sub_F0DF4(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_148E8(v1);
  _Unwind_Resume(a1);
}

void TUI::Evaluation::Context::evaluateWithSnapshot(uint64_t *a1, uint64_t **a2, void *a3)
{
  id v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  uint64_t *v10;
  __int128 *v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  uint64_t *v21;
  uint64_t v22;
  id WeakRetained;
  uint64_t v24;
  std::__shared_weak_count *v25;
  unint64_t *p_shared_owners;
  unint64_t v27;
  std::__shared_weak_count *v28;
  unint64_t *v29;
  unint64_t v30;
  void *v31;
  void *v32;
  void *v33;
  void *v34;
  void *v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  void *v48;
  id v49;
  void *v50;
  uint64_t v51;
  uint64_t v52;
  int v53;
  uint64_t v54;
  int v55;
  uint64_t v56;
  id v57;
  id v58;
  uint64_t v59;
  id v60;
  __int128 v61;
  id v62;
  uint64_t v63;
  std::__shared_weak_count *v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  _OWORD v69[2];
  int v70;
  _OWORD v71[2];
  int v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;

  v5 = a3;
  v6 = (void *)a1[68];
  v7 = v6;
  v61 = *((_OWORD *)a1 + 41);
  *((_OWORD *)a1 + 41) = 0u;
  v59 = a1[84];
  a1[84] = 0;
  v8 = (id)a1[76];
  v58 = (id)a1[75];
  v57 = (id)a1[94];
  v9 = (id)a1[95];
  objc_storeStrong((id *)a1 + 68, *(id *)((*a2)[2] + 8));
  v10 = *a2;
  if (a1 + 82 != *a2 + 6)
  {
    sub_FCBE8((char *)a1 + 656, (char *)v10[6], v10[7], (v10[7] - v10[6]) >> 2);
    v10 = *a2;
  }
  objc_storeStrong((id *)a1 + 76, (id)v10[5]);
  objc_storeStrong((id *)a1 + 75, (id)(*a2)[4]);
  objc_storeStrong((id *)a1 + 94, *(id *)((*a2)[2] + 16));
  objc_storeStrong((id *)a1 + 95, *(id *)((*a2)[2] + 24));
  v56 = a1[26];
  a1[26] = *(_QWORD *)((*a2)[2] + 32);
  v55 = *((_DWORD *)a1 + 61);
  v70 = 1065353216;
  memset(v71, 0, sizeof(v71));
  v72 = 1065353216;
  v73 = 0u;
  v74 = 0u;
  v75 = 0u;
  v76 = 0u;
  v11 = (__int128 *)(a1 + 31);
  v12 = *(_OWORD *)(a1 + 33);
  v13 = *(_OWORD *)(a1 + 35);
  v65 = *(_OWORD *)(a1 + 31);
  v66 = v12;
  *(_OWORD *)(a1 + 31) = 0u;
  v14 = *(_OWORD *)(a1 + 37);
  v67 = v13;
  v68 = v14;
  *(_OWORD *)(a1 + 35) = 0u;
  *(_OWORD *)(a1 + 37) = 0u;
  *(_OWORD *)(a1 + 33) = 0u;
  memset(v69, 0, sizeof(v69));
  sub_2A7FC((uint64_t)(a1 + 39), (uint64_t)v69);
  sub_2A7FC((uint64_t)(a1 + 44), (uint64_t)v71);
  v16 = *(_OWORD *)(a1 + 49);
  v15 = *(_OWORD *)(a1 + 51);
  v17 = v74;
  *(_OWORD *)(a1 + 49) = v73;
  *(_OWORD *)(a1 + 51) = v17;
  v73 = v16;
  v74 = v15;
  v19 = *(_OWORD *)(a1 + 55);
  v77 = *(_OWORD *)(a1 + 53);
  v18 = v77;
  v78 = v19;
  v20 = v76;
  *(_OWORD *)(a1 + 53) = v75;
  *(_OWORD *)(a1 + 55) = v20;
  v75 = v18;
  v76 = v19;
  v54 = a1[27];
  v21 = *a2;
  a1[27] = (*a2)[10];
  a1[28] = 0;
  v53 = *((_DWORD *)a1 + 60);
  *((_DWORD *)a1 + 60) = *((_DWORD *)v21 + 22);
  v22 = a1[29];
  a1[29] = v21[12];
  v51 = a1[92];
  v52 = v22;
  WeakRetained = objc_loadWeakRetained((id *)v21 + 9);
  a1[92] = (uint64_t)WeakRetained;

  v24 = *a1;
  v25 = (std::__shared_weak_count *)(*a2)[1];
  v63 = **a2;
  v64 = v25;
  if (v25)
  {
    p_shared_owners = (unint64_t *)&v25->__shared_owners_;
    do
      v27 = __ldxr(p_shared_owners);
    while (__stxr(v27 + 1, p_shared_owners));
  }
  (*(void (**)(uint64_t, uint64_t *, id))(*(_QWORD *)v24 + 104))(v24, &v63, v5);
  v28 = v64;
  if (v64)
  {
    v29 = (unint64_t *)&v64->__shared_owners_;
    do
      v30 = __ldaxr(v29);
    while (__stlxr(v30 - 1, v29));
    if (!v30)
    {
      ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
      std::__shared_weak_count::__release_weak(v28);
    }
  }
  objc_storeStrong((id *)a1 + 68, v6);
  v31 = (void *)a1[82];
  *((_OWORD *)a1 + 41) = v61;
  a1[84] = v59;
  v32 = (void *)a1[76];
  a1[76] = (uint64_t)v8;
  v62 = v8;

  v33 = (void *)a1[75];
  a1[75] = (uint64_t)v58;
  v60 = v58;

  a1[26] = v56;
  *((_DWORD *)a1 + 61) = v55;
  v34 = v7;
  v35 = v5;
  v37 = *v11;
  v36 = *(_OWORD *)(a1 + 33);
  v38 = v66;
  *v11 = v65;
  *(_OWORD *)(a1 + 33) = v38;
  v65 = v37;
  v66 = v36;
  v40 = *(_OWORD *)(a1 + 35);
  v39 = *(_OWORD *)(a1 + 37);
  v41 = v68;
  *(_OWORD *)(a1 + 35) = v67;
  *(_OWORD *)(a1 + 37) = v41;
  v67 = v40;
  v68 = v39;
  sub_2A7FC((uint64_t)(a1 + 39), (uint64_t)v69);
  sub_2A7FC((uint64_t)(a1 + 44), (uint64_t)v71);
  v43 = *(_OWORD *)(a1 + 49);
  v42 = *(_OWORD *)(a1 + 51);
  v44 = v74;
  *(_OWORD *)(a1 + 49) = v73;
  *(_OWORD *)(a1 + 51) = v44;
  v73 = v43;
  v74 = v42;
  v46 = *(_OWORD *)(a1 + 53);
  v45 = *(_OWORD *)(a1 + 55);
  v47 = v76;
  *(_OWORD *)(a1 + 53) = v75;
  *(_OWORD *)(a1 + 55) = v47;
  v75 = v46;
  v76 = v45;
  a1[27] = v54;
  a1[28] = 0;
  *((_DWORD *)a1 + 60) = v53;
  a1[29] = v52;
  a1[92] = v51;
  v48 = (void *)a1[94];
  a1[94] = (uint64_t)v57;
  v49 = v57;

  v50 = (void *)a1[95];
  a1[95] = (uint64_t)v9;

  sub_358DC((uint64_t)v71);
  sub_14B0C((uint64_t)v69);

  if (v31)
    operator delete(v31);

}

void sub_F1248(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *a18, void *a19, uint64_t a20,void *a21)
{
  void *v21;
  void *v22;
  void *v23;
  void *v24;

  if (a21)
    operator delete(a21);

  _Unwind_Resume(a1);
}

id TUI::Evaluation::Context::locationForNode(uint64_t a1, unsigned int a2)
{
  _QWORD *v4;
  unsigned int *v5;
  unint64_t v6;
  unsigned __int16 *v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  id v11;
  void *v12;
  id v13;
  void *v14;
  void *v15;
  void *v16;
  unint64_t v18;

  v4 = *(_QWORD **)(a1 + 576);
  if (v4[27] <= (unint64_t)a2)
    v5 = (unsigned int *)&dword_18;
  else
    v5 = (unsigned int *)(v4[26] + 28 * a2 + 24);
  v6 = *v5;
  if (v4[17] > v6 >> 12 && (v7 = (unsigned __int16 *)(v4[16] + 8 * (v6 >> 12))) != 0)
  {
    v8 = *v7;
    v9 = (unint64_t)*((unsigned int *)v7 + 1) << 32;
    v10 = v8 << 16;
  }
  else
  {
    v9 = 0xFFFFFFFF00000000;
    v10 = 4294901760;
  }
  v18 = v9 | v10 | v6 & 0xFFF;
  v11 = TUI::Package::Location::Entry::xpathString((uint64_t)&v18, v4);
  v12 = (void *)objc_claimAutoreleasedReturnValue(v11);
  v13 = TUI::Package::Location::Entry::pathURL((unsigned __int16 *)&v18, *(_QWORD **)(a1 + 576));
  v14 = (void *)objc_claimAutoreleasedReturnValue(v13);
  v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v14, "lastPathComponent"));

  v16 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("[%@] %@"), v15, v12));
  return v16;
}

void sub_F13B8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void TUI::Evaluation::Context::evaluateWithNodeIdentifier(uint64_t a1, unsigned int a2, void *a3)
{
  uint64_t v5;
  BOOL v6;
  void *v7;
  id v8;
  uint64_t v9;
  void *v10;
  void *v11;
  id v12;

  v12 = a3;
  v5 = a2;
  v6 = !TUIElementNodeNotNil(a2);
  if (!v12)
    v6 = 1;
  v7 = v12;
  if (!v6)
  {
    v8 = *(id *)(a1 + 608);
    v9 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 600), "identifierWithNode:baseIdentifier:", v5, *(_QWORD *)(a1 + 608)));
    v10 = *(void **)(a1 + 608);
    *(_QWORD *)(a1 + 608) = v9;

    (*((void (**)(void))v12 + 2))();
    v11 = *(void **)(a1 + 608);
    *(_QWORD *)(a1 + 608) = v8;

    v7 = v12;
  }

}

void sub_F1488(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void TUI::Evaluation::Context::evaluateWithUnmappedIdentifier(uint64_t a1, void *a2, void *a3)
{
  void (**v5)(_QWORD);
  id v6;
  void *v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  void *v11;
  void *v12;
  id v13;

  v13 = a2;
  v5 = a3;
  if (v13 && v5)
  {
    v6 = *(id *)(a1 + 608);
    v7 = *(void **)(a1 + 608);
    if (v7)
    {
      v8 = objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "tui_identifierByAppendingString:", v13));
      v9 = *(id *)(a1 + 608);
      *(_QWORD *)(a1 + 608) = v8;
    }
    else
    {
      v9 = objc_msgSend(objc_alloc((Class)NSIndexPath), "initWithIndexes:length:", 0, 0);
      v10 = objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "tui_identifierByAppendingString:", v13));
      v11 = *(void **)(a1 + 608);
      *(_QWORD *)(a1 + 608) = v10;

    }
    v5[2](v5);
    v12 = *(void **)(a1 + 608);
    *(_QWORD *)(a1 + 608) = v6;

  }
}

void sub_F1578(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;
  void *v12;

  _Unwind_Resume(a1);
}

id TUI::Evaluation::Context::identifierWithNode(uint64_t a1, unsigned int a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  id v8;
  void *v9;
  void *v10;
  double v12[3];

  v3 = *(_QWORD *)(a1 + 576);
  v4 = a2;
  if (*(_QWORD *)(v3 + 216) > (unint64_t)a2 && (v5 = *(_QWORD *)(v3 + 208) + 28 * a2) != 0)
    v6 = (int *)(v5 + 12);
  else
    v6 = &TUIValueNil;
  v7 = *v6;
  if (!TUIValueNotNil(*v6)
    || TUI::Instruction::Decoder::offsetKind(v7) == 7
    || (TUI::Instruction::Evaluation::evaluate(v12, *(TUI::Instruction::Evaluation **)(a1 + 8), (TUI::Instruction::Decoder *)v7), v8 = TUI::Evaluation::ResolvedValue::stringValue((TUI::Evaluation::ResolvedValue *)v12, (const TUI::Evaluation::Context *)a1), v9 = (void *)objc_claimAutoreleasedReturnValue(v8), *(id *)&v12[1], !v9)|| (v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 608), "tui_identifierByAppendingString:", v9)), v9, !v10))
  {
    v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 600), "identifierWithNode:baseIdentifier:", v4, *(_QWORD *)(a1 + 608)));
  }
  return v10;
}

void sub_F168C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void TUI::Evaluation::Context::evaluateWithIdentifier(uint64_t a1, uint64_t a2, void *a3)
{
  void (**v5)(void);
  id v6;
  void *v7;
  uint64_t v8;
  void *v9;
  void *v10;
  void (**v11)(void);

  v5 = a3;
  if (v5)
  {
    v11 = v5;
    v6 = *(id *)(a1 + 608);
    v7 = *(void **)(a1 + 608);
    if (v7)
      v8 = objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "tui_identifierByAppendingIndex:", a2));
    else
      v8 = objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedInteger:](NSNumber, "numberWithUnsignedInteger:", a2));
    v9 = *(void **)(a1 + 608);
    *(_QWORD *)(a1 + 608) = v8;

    v11[2]();
    v10 = *(void **)(a1 + 608);
    *(_QWORD *)(a1 + 608) = v6;

    v5 = v11;
  }

}

void sub_F1750(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void TUI::Evaluation::Context::evaluateEnumerator(_QWORD *a1, unint64_t a2, Entry a3, void *a4)
{
  void (**v7)(id, uint64_t, _QWORD);
  unint64_t v8;
  Entry v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13[6];

  v7 = a4;
  if (v7)
  {
    (*(void (**)(_QWORD, uint64_t))(*(_QWORD *)*a1 + 72))(*a1, 1);
    v8 = HIDWORD(a2);
    v9 = a3;
    TUI::Evaluation::Enumerator::State::State((uint64_t)v13, (Entry)v8, v9);
    v10 = (**(uint64_t (***)(uint64_t, _QWORD, id *))(*a1 + 8))(*a1 + 8, HIDWORD(v13[0]), v13);
    v12 = v11;
    TUI::Evaluation::Enumerator::State::~State(v13);
    v7[2](v7, v10, v12);
    (*(void (**)(_QWORD))(*(_QWORD *)*a1 + 80))(*a1);
  }

}

void sub_F1820(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, id a9)
{
  void *v9;

  TUI::Evaluation::Enumerator::State::~State(&a9);

  _Unwind_Resume(a1);
}

void TUI::Evaluation::Context::enumerate(TUI::Instruction::Evaluation **a1, unint64_t a2, unint64_t a3, void *a4)
{
  TUI::Instruction::Decoder *v7;
  int v8;
  int v9;
  id v10;
  Entry v11;
  Entry v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  Entry v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  void *k;
  void *v27;
  void *v28;
  uint64_t v29;
  id v30;
  id v31;
  void *v32;
  id v33;
  void *v34;
  uint64_t v35;
  id v36;
  id v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  void *j;
  void *v42;
  uint64_t v43;
  void (**v44)(void);
  id v45;
  uint64_t v46;
  uint64_t v47;
  void *i;
  void *v49;
  uint64_t v50;
  id v51;
  void *v52;
  _BOOL4 v53;
  uint64_t v54;
  id obj;
  id v56;
  TUI::Instruction::Evaluation **v57;
  void (**v58)(void);
  id v59[6];
  _QWORD v60[4];
  void (**v61)(void);
  TUI::Instruction::Evaluation **v62;
  uint64_t v63;
  uint64_t v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  double v77;
  id v78;
  id v79[6];
  _BYTE v80[128];
  _BYTE v81[128];
  _BYTE v82[128];

  v58 = a4;
  if (!v58)
    goto LABEL_35;
  v7 = (TUI::Instruction::Decoder *)HIDWORD(a3);
  if (!TUIValueNotNil(SHIDWORD(a3)))
    goto LABEL_35;
  v8 = (unsigned __int16)a3;
  v9 = WORD1(a3);
  if (!(_DWORD)a2)
  {
    (*(void (**)(TUI::Instruction::Evaluation *, uint64_t))(*(_QWORD *)*a1 + 72))(*a1, 1);
    v17 = WORD2(a2) | (HIWORD(a2) << 16);
    v18 = (Entry)a3;
    TUI::Evaluation::Enumerator::State::State((uint64_t)v79, (Entry)v17, v18);
    v19 = (**((uint64_t (***)(uint64_t, _QWORD, id *))*a1 + 1))((uint64_t)*a1 + 8, HIDWORD(v79[0]), v79);
    v21 = v20;
    TUI::Evaluation::Enumerator::State::~State(v79);
    TUI::Instruction::Evaluation::evaluate(&v77, a1[1], v7);
    v57 = a1;
    v22 = TUI::Evaluation::ResolvedValue::objectValue((TUI::Evaluation::ResolvedValue *)&v77, (const TUI::Evaluation::Context *)a1);
    obj = (id)objc_claimAutoreleasedReturnValue(v22);

    if (HIWORD(a2) == 0xFFFF
      || (a2 & 0xFFFF00000000) == 0xFFFF00000000
      || (objc_opt_respondsToSelector(obj, "keyEnumerator") & 1) == 0
      || (objc_opt_respondsToSelector(obj, "objectForKey:") & 1) == 0)
    {
      if (v9 == 0xFFFF || v8 == 0xFFFF)
        goto LABEL_33;
      v35 = objc_opt_class(NSArray, v23);
      if ((objc_opt_isKindOfClass(obj, v35) & 1) == 0)
      {
        if ((objc_opt_respondsToSelector(obj, "objectEnumerator") & 1) != 0)
        {
          v67 = 0u;
          v68 = 0u;
          v65 = 0u;
          v66 = 0u;
          v44 = (void (**)(void))objc_claimAutoreleasedReturnValue(objc_msgSend(obj, "objectEnumerator"));
          v45 = objc_msgSend(v44, "countByEnumeratingWithState:objects:count:", &v65, v80, 16);
          if (v45)
          {
            v46 = 0;
            v47 = *(_QWORD *)v66;
            do
            {
              for (i = 0; i != v45; i = (char *)i + 1)
              {
                if (*(_QWORD *)v66 != v47)
                  objc_enumerationMutation(v44);
                v49 = *(void **)(*((_QWORD *)&v65 + 1) + 8 * (_QWORD)i);
                v50 = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v19 + 24))(v19, v21);
                objc_storeStrong((id *)(v50 + 32), v49);
                TUI::Evaluation::Context::evaluateWithIdentifier((uint64_t)v57, (uint64_t)i + v46, v58);
              }
              v45 = objc_msgSend(v44, "countByEnumeratingWithState:objects:count:", &v65, v80, 16);
              v46 += (uint64_t)i;
            }
            while (v45);
          }
        }
        else
        {
          if ((objc_opt_respondsToSelector(obj, "tui_unwwrapEnumeratorWithBlock:") & 1) == 0)
          {
            if (obj)
            {
              v51 = TUIProtocolCast(&OBJC_PROTOCOL___TUIDynamicProviding, obj);
              v52 = (void *)objc_claimAutoreleasedReturnValue(v51);
              v53 = v52 == 0;

              if (v53)
              {
                v54 = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v19 + 24))(v19, v21);
                objc_storeStrong((id *)(v54 + 32), obj);
                v58[2]();
              }
            }
            goto LABEL_33;
          }
          v60[0] = _NSConcreteStackBlock;
          v60[1] = 3221225472;
          v60[2] = sub_F1FA0;
          v60[3] = &unk_241548;
          v62 = a1;
          v63 = v19;
          v64 = v21;
          v61 = v58;
          objc_msgSend(obj, "tui_unwwrapEnumeratorWithBlock:", v60);
          v44 = v61;
        }
        goto LABEL_32;
      }
      v36 = obj;
      v37 = objc_msgSend(v36, "count", v36);
      v71 = 0u;
      v72 = 0u;
      v69 = 0u;
      v70 = 0u;
      v56 = v36;
      v38 = objc_msgSend(v56, "countByEnumeratingWithState:objects:count:", &v69, v81, 16);
      if (v38)
      {
        v39 = 0;
        v40 = *(_QWORD *)v70;
        do
        {
          for (j = 0; j != v38; j = (char *)j + 1)
          {
            if (*(_QWORD *)v70 != v40)
              objc_enumerationMutation(v56);
            v42 = *(void **)(*((_QWORD *)&v69 + 1) + 8 * (_QWORD)j);
            v43 = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v19 + 24))(v19, v21);
            *(_QWORD *)(v43 + 16) = (char *)j + v39;
            objc_storeStrong((id *)(v43 + 32), v42);
            *(_BYTE *)(v43 + 8) = ((char *)j + v39 == 0) | (2 * ((char *)j + 1 - (_QWORD)v37 + v39 == 0)) | *(_BYTE *)(v43 + 8) & 0xFC;
            TUI::Evaluation::Context::evaluateWithIdentifier((uint64_t)v57, (uint64_t)j + v39, v58);
          }
          v38 = objc_msgSend(v56, "countByEnumeratingWithState:objects:count:", &v69, v81, 16);
          v39 += (uint64_t)j;
        }
        while (v38);
      }

    }
    else
    {
      v75 = 0u;
      v76 = 0u;
      v73 = 0u;
      v74 = 0u;
      v56 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(obj, "keyEnumerator"));
      v24 = objc_msgSend(v56, "countByEnumeratingWithState:objects:count:", &v73, v82, 16);
      if (v24)
      {
        v25 = *(_QWORD *)v74;
        do
        {
          for (k = 0; k != v24; k = (char *)k + 1)
          {
            if (*(_QWORD *)v74 != v25)
              objc_enumerationMutation(v56);
            v27 = *(void **)(*((_QWORD *)&v73 + 1) + 8 * (_QWORD)k);
            v28 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(obj, "objectForKey:", v27));
            v29 = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v19 + 24))(v19, v21);
            v30 = v27;
            v31 = v28;
            v32 = *(void **)(v29 + 24);
            *(_QWORD *)(v29 + 24) = v30;
            v33 = v30;

            v34 = *(void **)(v29 + 32);
            *(_QWORD *)(v29 + 32) = v31;

            v58[2]();
          }
          v24 = objc_msgSend(v56, "countByEnumeratingWithState:objects:count:", &v73, v82, 16);
        }
        while (v24);
      }
    }
    v44 = (void (**)(void))v56;
LABEL_32:

LABEL_33:
    (*(void (**)(TUI::Instruction::Evaluation *))(*(_QWORD *)*v57 + 80))(*v57);
LABEL_34:

    goto LABEL_35;
  }
  if ((_DWORD)a2 == 1)
  {
    TUI::Instruction::Evaluation::evaluate(&v77, a1[1], (TUI::Instruction::Decoder *)HIDWORD(a3));
    v10 = TUI::Evaluation::ResolvedValue::objectValue((TUI::Evaluation::ResolvedValue *)&v77, (const TUI::Evaluation::Context *)a1);
    obj = (id)objc_claimAutoreleasedReturnValue(v10);

    if (WORD1(a3) != 0xFFFF && (unsigned __int16)a3 != 0xFFFF)
    {
      (*(void (**)(TUI::Instruction::Evaluation *, uint64_t))(*(_QWORD *)*a1 + 72))(*a1, 1);
      v11 = (Entry)a3;
      v12 = (Entry)-65536;
      TUI::Evaluation::Enumerator::State::State((uint64_t)v59, v12, v11);
      v13 = (**((uint64_t (***)(uint64_t, _QWORD, id *))*a1 + 1))((uint64_t)*a1 + 8, HIDWORD(v59[0]), v59);
      v15 = v14;
      TUI::Evaluation::Enumerator::State::~State(v59);
      v16 = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v13 + 24))(v13, v15);
      objc_storeStrong((id *)(v16 + 32), obj);
      v58[2]();
      (*(void (**)(TUI::Instruction::Evaluation *))(*(_QWORD *)*a1 + 80))(*a1);
    }
    goto LABEL_34;
  }
LABEL_35:

}

void sub_F1E94(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,void *a25)
{

  _Unwind_Resume(a1);
}

void sub_F1FA0(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  id v8;

  v8 = a2;
  v6 = *(_QWORD *)(a1 + 40);
  v7 = (*(uint64_t (**)(_QWORD, _QWORD))(**(_QWORD **)(a1 + 48) + 24))(*(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56));
  objc_storeStrong((id *)(v7 + 32), a2);
  TUI::Evaluation::Context::evaluateWithIdentifier(v6, a3, *(void **)(a1 + 32));

}

void sub_F2010(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

uint64_t TUI::Evaluation::Context::Snapshot::Snapshot(uint64_t a1, uint64_t a2, _QWORD *a3, _QWORD *a4)
{
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t *v10;
  unint64_t v11;
  id v12;

  v6 = a4[1];
  *(_QWORD *)a1 = *a4;
  *(_QWORD *)(a1 + 8) = v6;
  if (v6)
  {
    v7 = (unint64_t *)(v6 + 8);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  v9 = a3[1];
  *(_QWORD *)(a1 + 16) = *a3;
  *(_QWORD *)(a1 + 24) = v9;
  if (v9)
  {
    v10 = (unint64_t *)(v9 + 8);
    do
      v11 = __ldxr(v10);
    while (__stxr(v11 + 1, v10));
  }
  *(_QWORD *)(a1 + 32) = *(id *)(a2 + 600);
  v12 = *(id *)(a2 + 608);
  *(_QWORD *)(a1 + 48) = 0;
  *(_QWORD *)(a1 + 40) = v12;
  *(_QWORD *)(a1 + 56) = 0;
  *(_QWORD *)(a1 + 64) = 0;
  sub_FCD30((_QWORD *)(a1 + 48), *(const void **)(a2 + 656), *(_QWORD *)(a2 + 664), (uint64_t)(*(_QWORD *)(a2 + 664) - *(_QWORD *)(a2 + 656)) >> 2);
  *(_QWORD *)(a1 + 80) = 0;
  *(_QWORD *)(a1 + 72) = 0;
  *(_QWORD *)(a1 + 96) = 0;
  objc_storeWeak((id *)(a1 + 72), *(id *)(a2 + 736));
  objc_storeStrong((id *)(a1 + 80), *(id *)(a2 + 216));
  *(_DWORD *)(a1 + 88) = *(_DWORD *)(a2 + 240);
  objc_storeStrong((id *)(a1 + 96), *(id *)(a2 + 232));
  return a1;
}

void sub_F2110(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  sub_148E8(v2);
  sub_148E8(v1);
  _Unwind_Resume(a1);
}

void TUI::Evaluation::Context::Snapshot::~Snapshot(id *this)
{
  id v2;

  objc_destroyWeak(this + 9);
  v2 = this[6];
  if (v2)
  {
    this[7] = v2;
    operator delete(v2);
  }

  sub_148E8((uint64_t)(this + 2));
  sub_148E8((uint64_t)this);
}

id TUI::Evaluation::Context::errors(id *this)
{
  id v2;

  v2 = objc_msgSend(this[85], "count");
  if (v2)
    v2 = objc_msgSend(this[85], "copy");
  return v2;
}

void TUI::Evaluation::Context::instantiateNodeWithBuilder(uint64_t a1, unsigned int a2, void *a3)
{
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  os_unfair_lock_s *v10;
  objc_class *v11;
  uint64_t v12;
  __int128 v13;
  id v14;

  v5 = a3;
  v6 = v5;
  v13 = *(_OWORD *)(a1 + 192);
  v7 = *(_QWORD *)(a1 + 208);
  v9 = *(_QWORD *)(a1 + 168);
  v8 = *(_QWORD *)(a1 + 176);
  *(_QWORD *)(a1 + 168) = v5;
  v10 = *(os_unfair_lock_s **)(a1 + 32);
  v14 = v5;
  if (v10)
  {
    v11 = (objc_class *)objc_opt_class(v5);
    v12 = TUI::ElementInstantiating::BuilderCache::computeProtocolsFromClass(v10, v11);
    v6 = v14;
  }
  else
  {
    v12 = **(_QWORD **)(a1 + 24);
  }
  *(_QWORD *)(a1 + 176) = v12;
  *(_QWORD *)(a1 + 192) = v6;
  *(_QWORD *)(a1 + 200) = 0;
  *(_QWORD *)(a1 + 208) = 0;
  TUI::Evaluation::Context::instantiateChildNode((_QWORD *)a1, a2);
  *(_QWORD *)(a1 + 168) = v9;
  *(_QWORD *)(a1 + 176) = v8;
  *(_OWORD *)(a1 + 192) = v13;
  *(_QWORD *)(a1 + 208) = v7;

}

void sub_F2284(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, id a12)
{

  _Unwind_Resume(a1);
}

void TUI::Evaluation::Context::instantiateChildNode(_QWORD *a1, unsigned int a2)
{
  uint64_t v3;
  unsigned __int16 *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  void *v16;
  id v17;
  _BOOL4 v18;
  NSObject *v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  int v27;
  id v28;
  _QWORD *v29;
  unint64_t v30;
  uint64_t v31;
  objc_class *v32;
  NSString *v33;
  void *v34;
  NSObject *log;
  os_log_t loga;
  uint8_t buf[4];
  id v38;
  __int16 v39;
  uint64_t v40;
  __int16 v41;
  void *v42;

  v3 = a1[72];
  if (*(_QWORD *)(v3 + 216) <= (unint64_t)a2)
    v5 = 0;
  else
    v5 = (unsigned __int16 *)(*(_QWORD *)(v3 + 208) + 28 * a2);
  v6 = a1[3];
  v7 = *(_QWORD *)(v6 + 72);
  v8 = 0xAAAAAAAAAAAAAAABLL * ((*(_QWORD *)(v6 + 80) - v7) >> 4);
  v9 = v7 + 48 * *v5;
  v10 = v6 + 24;
  if (v8 <= *v5)
    v11 = v10;
  else
    v11 = v9;
  v12 = *(unsigned int *)(v11 + 40);
  v13 = v12 | ((unint64_t)*(unsigned __int8 *)(v11 + 44) << 32);
  if ((v12 & 1) != 0 || (v14 = *(_QWORD *)(v11 + 32)) != 0 && (v14 & ~a1[22]) == 0)
  {
    if ((v13 & 0x1F80000000) != 0 && *((_BYTE *)a1 + 40) == 0)
    {
      v20 = a1[27];
      v21 = a1[28];
      v22 = *((_DWORD *)a1 + 60);
      v23 = a1[29];
      if ((v13 & 0x1000000000) != 0)
      {
        if (v21)
          a1[27] = v21;
        *((_DWORD *)a1 + 60) = a2;
        v24 = a1[76];
        a1[28] = 0;
        a1[29] = v24;
      }
      (*(void (**)(void))(*(_QWORD *)*a1 + 72))();
      if ((*(_DWORD *)(v11 + 40) & 0x400000) != 0)
        v25 = TUI::Evaluation::Context::instantiateNodeWithEnumeration((uint64_t)a1, a2, v11);
      else
        v25 = TUI::Evaluation::Context::instantiateNode((uint64_t)a1, a2);
      loga = (os_log_t)objc_claimAutoreleasedReturnValue(v25);
      (*(void (**)(_QWORD))(*(_QWORD *)*a1 + 80))(*a1);
      if (((*(unsigned int *)(v11 + 40) | ((unint64_t)*(unsigned __int8 *)(v11 + 44) << 32)) & 0x1000000000) != 0)
        a1[28] = v21;
      a1[27] = v20;
      *((_DWORD *)a1 + 60) = v22;
      a1[29] = v23;
      if ((v13 & 1) != 0)
        goto LABEL_38;
    }
    else
    {
      if ((v12 & 0x400000) != 0)
        v16 = TUI::Evaluation::Context::instantiateNodeWithEnumeration((uint64_t)a1, a2, v11);
      else
        v16 = TUI::Evaluation::Context::instantiateNode((uint64_t)a1, a2);
      loga = (os_log_t)objc_claimAutoreleasedReturnValue(v16);
      v26 = a1[28];
      if (v26)
        a1[27] = v26;
      a1[28] = 0;
      if ((v13 & 1) != 0)
        goto LABEL_38;
    }
    if (loga)
    {
      v27 = *(_DWORD *)(v11 + 40);
      if ((v27 & 0x100000) != 0)
      {
        objc_msgSend(*(id *)v11, "addObject:toContainingBuilder:context:", loga, a1[21], a1[2]);
      }
      else if ((v27 & 0x8000000) != 0)
      {
        objc_msgSend((id)a1[21], "addBox:", loga);
      }
    }
LABEL_38:

    return;
  }
  v17 = TUIInstantiationLog();
  log = objc_claimAutoreleasedReturnValue(v17);
  v18 = os_log_type_enabled(log, OS_LOG_TYPE_ERROR);
  v19 = log;
  if (v18)
  {
    v28 = objc_msgSend((id)a1[2], "feedId");
    v29 = (_QWORD *)a1[72];
    v30 = *v5;
    if (v29[55] <= v30)
      v31 = 0;
    else
      v31 = v29[54] + *(unsigned int *)(v29[56] + 4 * v30);
    v32 = (objc_class *)objc_opt_class(a1[21]);
    v33 = NSStringFromClass(v32);
    v34 = (void *)objc_claimAutoreleasedReturnValue(v33);
    *(_DWORD *)buf = 134218498;
    v38 = v28;
    v39 = 2082;
    v40 = v31;
    v41 = 2114;
    v42 = v34;
    _os_log_error_impl(&dword_0, log, OS_LOG_TYPE_ERROR, "[fid:%lu] child element name=%{public}s not allowed by current builder %{public}@", buf, 0x20u);

    v19 = log;
  }

}

void sub_F25EC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

id TUI::Evaluation::Context::instantiateNodeWithEnumeration(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  TUI::Evaluation::ResolvedValue *v12;
  id v13;
  NSObject *v14;
  void *v15;
  TUI::Evaluation::ResolvedValue *v16;
  TUI::Evaluation::ResolvedValue *v17;
  TUI::Evaluation::ResolvedValue *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int *v23;
  const TUI::Evaluation::Context *v24;
  int *v25;
  unsigned int v26;
  unsigned int v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  TUIBoxBuilder *v31;
  _QWORD v33[3];

  v5 = *(_QWORD *)(a1 + 576);
  v6 = a2;
  if (*(_QWORD *)(v5 + 216) <= (unint64_t)a2 || (v7 = *(_QWORD *)(v5 + 208) + 28 * a2) == 0)
  {
    v13 = TUIInstantiationLog();
    v14 = objc_claimAutoreleasedReturnValue(v13);
    if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      sub_17EB8C((uint64_t)v33, (uint64_t)objc_msgSend(*(id *)(a1 + 16), "feedId"), v6);
    goto LABEL_9;
  }
  v9 = *(unsigned int *)(v7 + 16);
  v10 = *(unsigned __int16 *)(v7 + 2);
  sub_F2994(a1 + 248, 0);
  *(_QWORD *)(a1 + 432) &= 0xFFFFFFFFFFC3FFFFLL;
  if (v10)
    TUI::Evaluation::Context::computeAttributes(a1, v9 | (v10 << 32), 0, a1 + 248);
  *(_DWORD *)(a1 + 244) = a2;
  LOWORD(v33[0]) = 85;
  v11 = *(_QWORD *)(a1 + 288);
  if ((v11 & 0x200000) != 0)
  {
    v12 = (TUI::Evaluation::ResolvedValue *)(sub_1529C((_QWORD *)(a1 + 352), (unsigned __int16 *)v33) + 3);
    v11 = *(_QWORD *)(a1 + 288);
  }
  else
  {
    v12 = 0;
  }
  LOWORD(v33[0]) = 83;
  if ((v11 & 0x80000) != 0)
  {
    v16 = (TUI::Evaluation::ResolvedValue *)(sub_1529C((_QWORD *)(a1 + 352), (unsigned __int16 *)v33) + 3);
    v11 = *(_QWORD *)(a1 + 288);
  }
  else
  {
    v16 = 0;
  }
  LOWORD(v33[0]) = 82;
  if ((v11 & 0x40000) != 0)
  {
    v17 = (TUI::Evaluation::ResolvedValue *)(sub_1529C((_QWORD *)(a1 + 352), (unsigned __int16 *)v33) + 3);
    v11 = *(_QWORD *)(a1 + 288);
  }
  else
  {
    v17 = 0;
  }
  LOWORD(v33[0]) = 84;
  if ((v11 & 0x100000) != 0)
  {
    v18 = (TUI::Evaluation::ResolvedValue *)(sub_1529C((_QWORD *)(a1 + 352), (unsigned __int16 *)v33) + 3);
    if (v12)
      goto LABEL_19;
  }
  else
  {
    v18 = 0;
    if (v12)
    {
LABEL_19:
      v19 = TUI::Evaluation::ResolvedValue::integerValue(v12, (const TUI::Evaluation::Context *)a1);
      v20 = TUI::Evaluation::ResolvedValue::integerValue(v16, (const TUI::Evaluation::Context *)a1);
      v21 = TUI::Evaluation::ResolvedValue::integerValue(v17, (const TUI::Evaluation::Context *)a1);
      v22 = TUI::Evaluation::ResolvedValue::integerValue(v18, (const TUI::Evaluation::Context *)a1);
      goto LABEL_22;
    }
  }
  v21 = 0x7FFFFFFFFFFFFFFFLL;
  v19 = 0x7FFFFFFFFFFFFFFFLL;
  v20 = 0x7FFFFFFFFFFFFFFFLL;
  v22 = 0x7FFFFFFFFFFFFFFFLL;
LABEL_22:
  LOWORD(v33[0]) = 70;
  if ((*(_BYTE *)(a1 + 256) & 0x40) != 0)
    v23 = (unsigned int *)sub_1529C((_QWORD *)(a1 + 312), (unsigned __int16 *)v33) + 5;
  else
    v23 = (unsigned int *)&TUIValueNil;
  v14 = objc_claimAutoreleasedReturnValue(+[TUIDynamicInstantiateOptions optionsWithFetchWindow:fetchInitial:fetchDelta:fetchPadding:uniqueID:](TUIDynamicInstantiateOptions, "optionsWithFetchWindow:fetchInitial:fetchDelta:fetchPadding:uniqueID:", v19, v20, v21, v22, *v23, v33[0]));
  LOWORD(v33[0]) = 183;
  if ((*(_BYTE *)(a1 + 270) & 0x80) != 0)
    v25 = (int *)sub_1529C((_QWORD *)(a1 + 312), (unsigned __int16 *)v33) + 5;
  else
    v25 = &TUIValueNil;
  v26 = TUI::Instruction::Decoder::enumerator((TUI::Instruction::Decoder *)*v25, a1, v24);
  *(_DWORD *)(a1 + 244) = TUIElementNodeNil;
  sub_EF264(a1 + 248);
  if (!TUIEnumeratorIsNil(v26))
  {
    v27 = TUI::Evaluation::Context::closureForElement(a1, v7);
    if ((*(_BYTE *)(a1 + 184) & 1) != 0)
      v28 = 3;
    else
      v28 = 1;
    v29 = TUI::Evaluation::Context::instantiateEnumeratorWithNodes(a1, v26, v6 | 0x100000000, v27, v14, v28);
    v30 = objc_claimAutoreleasedReturnValue(v29);
    goto LABEL_36;
  }
  if ((*(_DWORD *)(a3 + 40) & 0x800000) != 0)
  {
    v31 = TUI::Evaluation::Context::instantiateNode(a1, v6);
    v30 = objc_claimAutoreleasedReturnValue(v31);
LABEL_36:
    v15 = (void *)v30;
    goto LABEL_37;
  }
  TUI::Evaluation::Context::reportError(a1, 1033, CFSTR("nil enumerator used when not allowed"));
LABEL_9:
  v15 = 0;
LABEL_37:

  return v15;
}

void sub_F295C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

id TUI::Evaluation::Context::feedId(id *this)
{
  return objc_msgSend(this[2], "feedId");
}

void sub_F2994(uint64_t a1, int a2)
{
  __int128 v4;
  __int128 v5;
  int v6;

  *(_QWORD *)&v4 = a1;
  DWORD2(v4) = 0;
  sub_FC0D4((uint64_t)&v4, 0x100uLL);
  *(_QWORD *)&v4 = a1 + 32;
  DWORD2(v4) = 0;
  sub_FC0D4((uint64_t)&v4, 0x100uLL);
  if (*(_QWORD *)(a1 + 88))
  {
    v4 = 0u;
    v5 = 0u;
    v6 = 1065353216;
    sub_87C08(a1 + 64, (uint64_t *)&v4);
    sub_14B0C((uint64_t)&v4);
  }
  if (*(_QWORD *)(a1 + 128))
  {
    v4 = 0u;
    v5 = 0u;
    v6 = 1065353216;
    sub_FC180(a1 + 104, (uint64_t *)&v4);
    sub_358DC((uint64_t)&v4);
  }
  *(_QWORD *)&v4 = a1 + 144;
  DWORD2(v4) = 0;
  sub_FC024(&v4, 0x100uLL);
  *(_QWORD *)&v4 = a1 + 176;
  DWORD2(v4) = 0;
  if (a2)
    sub_FC0D4((uint64_t)&v4, 0x100uLL);
  else
    sub_FC024(&v4, 0x100uLL);
}

void TUI::Evaluation::Context::computeAttributes(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  unsigned __int16 *v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  TUI::Instruction::Decoder *v15;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  int *v19;
  int *v20;
  TUI::Instruction::Decoder *v21;
  unsigned __int8 v22;
  const TUI::Evaluation::Context *v23;
  unint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v40;
  uint64_t v41;
  _DWORD v42[3];
  id obj;
  uint64_t v44;
  unsigned __int16 v45;
  unsigned __int16 *v46;

  v41 = TUIStyleReferenceNil;
  v5 = WORD2(a2);
  if (WORD2(a2))
  {
    v6 = 0;
    v7 = *(_QWORD **)(a1 + 576);
    v8 = a2;
    v40 = a4 + 144;
    v35 = a4 + 176;
    v36 = a4 + 64;
    v32 = a4 + 104;
    v33 = a4 + 32;
    v37 = a2;
    v38 = WORD2(a2);
    do
    {
      if (v7[31] > (unint64_t)(v6 + v8) && (v9 = (unsigned __int16 *)(v7[30] + 8 * (v6 + v8))) != 0)
      {
        v10 = *v9;
        v11 = v7[60];
        if (v10 >= (v7[61] - v11) >> 1)
        {
          LODWORD(v17) = 0;
          v13 = v9[1];
          v14 = *((unsigned int *)v9 + 1);
          v16 = 0xFFFF;
          v42[0] = 1;
          v15 = 0;
        }
        else
        {
          v12 = *(unsigned __int16 *)(v11 + 2 * v10);
          v13 = v9[1];
          v14 = *((unsigned int *)v9 + 1);
          v15 = 0;
          v16 = 0xFFFF;
          if ((_DWORD)v12 == 0xFFFF)
          {
            LODWORD(v17) = 0;
            v42[0] = 1;
          }
          else
          {
            if (v12 >= 0x100)
              sub_87B1C("bitset test argument out of range");
            v42[0] = 0;
            v17 = (*(_QWORD *)(v40 + ((v12 >> 3) & 0x1FF8)) >> v12) & 1;
            v16 = v12;
          }
        }
        if ((v16 == 199 || (_DWORD)v17) && v13)
        {
          v18 = 12 * v14;
          while (1)
          {
            if (v7[29] <= v14)
            {
              v20 = &TUIConditionNil;
              v19 = &TUIValueNil;
            }
            else
            {
              v19 = (int *)(v18 + v7[28]);
              v20 = v19 + 1;
              if (!v19)
              {
                v20 = &TUIConditionNil;
                v19 = &TUIValueNil;
              }
            }
            v21 = (TUI::Instruction::Decoder *)*v19;
            TUI::Evaluation::Context::resolve(a1, (TUI::Instruction::Decoder *)*v20, (uint64_t)&v42[1]);
            v22 = TUI::Evaluation::ResolvedValue::BOOLValue((TUI::Evaluation::ResolvedValue *)&v42[1], (const TUI::Evaluation::Context *)a1);

            if ((v22 & 1) != 0)
              break;
            v18 += 12;
            ++v14;
            if (!--v13)
              goto LABEL_27;
          }
          v15 = v21;
LABEL_27:
          v8 = v37;
          v5 = v38;
        }
        if (!TUIValueNotNil((int)v15))
          goto LABEL_9;
        if (v16 == 199)
        {
          v41 = TUI::Instruction::Decoder::styleReference(v15, a1, v23);
        }
        else
        {
          LOWORD(v46) = v16;
          if (v42[0])
            goto LABEL_9;
          if (v16 >= 0x100
            || (v24 = (unint64_t)v16 >> 6,
                v25 = 1 << v16,
                *(_QWORD *)(a4 + 8 * v24) |= 1 << v16,
                *(_QWORD *)&v42[1] = &v46,
                *((_DWORD *)sub_353D8(v36, (unsigned __int16 *)&v46, (uint64_t)&std::piecewise_construct, (_WORD **)&v42[1])+ 5) = (_DWORD)v15, (unsigned __int16)v46 >= 0x100uLL))
          {
            sub_87B1C("bitset set argument out of range");
          }
          *(_QWORD *)(v40 + (((unint64_t)(unsigned __int16)v46 >> 3) & 0x1FF8)) &= ~(1 << (char)v46);
          if ((*(_QWORD *)(v35 + 8 * v24) & v25) != 0)
            goto LABEL_9;
          if (a3)
          {
            if (v16 - 106 <= 0x2B && ((1 << (v16 - 106)) & 0x80080000001) != 0 || v16 == 1)
              goto LABEL_9;
          }
          else if (v16 == 1 || v16 == 149)
          {
            goto LABEL_9;
          }
          TUI::Instruction::Evaluation::evaluate((double *)&v42[1], *(TUI::Instruction::Evaluation **)(a1 + 8), (TUI::Instruction::Decoder *)v15);
          v45 = v16;
          *(_QWORD *)(v33 + 8 * v24) |= v25;
          v46 = &v45;
          v26 = sub_35914(v32, &v45, (uint64_t)&std::piecewise_construct, &v46);
          *((_DWORD *)v26 + 6) = v42[1];
          objc_storeStrong((id *)v26 + 4, obj);
          v27 = obj;
          v26[5] = v44;

        }
      }
      else
      {
        TUIValueNotNil(0);
      }
LABEL_9:
      ++v6;
    }
    while (v6 != v5);
  }
  if (TUIReferenceListNotNil(v41))
  {
    v28 = -192;
    v29 = 144;
    do
    {
      v30 = *(_QWORD *)(a4 + v29);
      v29 += 8;
      if (v30)
        v31 = 1;
      else
        v31 = v28 == 0;
      v28 += 64;
    }
    while (!v31);
    if (v30)
      TUI::Evaluation::Context::computeStyle((TUI::Symbol::Tab **)a1, v41, a4);
  }
}

void sub_F2E8C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,void *a21)
{

  _Unwind_Resume(a1);
}

TUIBoxBuilder *TUI::Evaluation::Context::instantiateNode(uint64_t a1, unsigned int a2)
{
  uint64_t v4;
  uint64_t v5;
  unsigned __int16 *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  int *v14;
  unint64_t v15;
  _DWORD *v16;
  id v17;
  NSObject *v18;
  TUIBoxBuilder *v19;
  id v21;
  int *v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  char *v27;
  int *v28;
  char *v29;
  int v30;
  objc_class *v31;
  TUIBoxBuilder *v32;
  int v33;
  BOOL v34;
  int v35;
  TUIBoxBuilder *v36;
  _QWORD *v37;
  objc_class *v38;
  TUIBoxBuilder *v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  int v44;
  void *v45;
  char *v46;
  uint64_t i;
  void *v48;
  _OWORD *v49;
  __int128 v50;
  TUIBoxBuilder *v51;
  uint64_t v52;
  TUIBoxBuilder *v53;
  TUIBoxBuilder *v54;
  uint64_t v55;
  uint64_t v56;
  int v57;
  uint64_t v58;
  void *v59;
  TUIBoxBuilder *v60;
  char v61;
  char v62;
  uint64_t v63;
  char v64;
  int v65;
  unsigned __int8 v66;
  int v67;
  TUIBoxBuilder *v68;
  char v69;
  char v70;
  id v71;
  uint64_t v72;
  uint64_t v73;
  id v74;
  uint64_t v75;
  uint64_t v76;
  char v77;
  int v78;
  TUIBoxBuilder *v79;
  id v80;
  id v81;
  id v82;
  _QWORD *v83;
  unint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  TUIBoxBuilder *v88;
  __int128 v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  _QWORD v93[5];
  int v94;
  __int16 v95;
  __int16 v96;
  _QWORD v97[5];
  int v98;
  __int16 v99;
  __int16 v100;
  uint8_t buf[4];
  id v102;
  __int16 v103;
  uint64_t v104;

  v4 = *(_QWORD *)(a1 + 576);
  v5 = a2;
  if (*(_QWORD *)(v4 + 216) <= (unint64_t)a2
    || (v6 = (unsigned __int16 *)(*(_QWORD *)(v4 + 208) + 28 * a2)) == 0)
  {
    v17 = TUIInstantiationLog();
    v18 = objc_claimAutoreleasedReturnValue(v17);
    if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR))
      sub_17EB8C((uint64_t)buf, (uint64_t)objc_msgSend(*(id *)(a1 + 16), "feedId"), v5);
    goto LABEL_13;
  }
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_QWORD *)(v7 + 72);
  v9 = 0xAAAAAAAAAAAAAAABLL * ((*(_QWORD *)(v7 + 80) - v8) >> 4);
  v10 = v8 + 48 * *v6;
  v11 = v7 + 24;
  if (v9 <= *v6)
    v12 = v11;
  else
    v12 = v10;
  if (!*(_QWORD *)v12)
  {
    v21 = TUIInstantiationLog();
    v18 = objc_claimAutoreleasedReturnValue(v21);
    if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR))
    {
      v82 = objc_msgSend(*(id *)(a1 + 16), "feedId");
      v83 = *(_QWORD **)(a1 + 576);
      v84 = *v6;
      if (v83[55] <= v84)
        v85 = 0;
      else
        v85 = v83[54] + *(unsigned int *)(v83[56] + 4 * v84);
      *(_DWORD *)buf = 134218242;
      v102 = v82;
      v103 = 2082;
      v104 = v85;
      _os_log_error_impl(&dword_0, v18, OS_LOG_TYPE_ERROR, "[fid:%lu] no registered instantiator class for: %{public}s", buf, 0x16u);
    }
LABEL_13:

    v19 = 0;
    return v19;
  }
  if (*(_BYTE *)(a1 + 552))
  {
    v13 = *((_DWORD *)v6 + 6);
    if (TUILocationNotNil(v13))
    {
      v14 = *(int **)(a1 + 664);
      v15 = *(_QWORD *)(a1 + 672);
      if ((unint64_t)v14 >= v15)
      {
        v22 = *(int **)(a1 + 656);
        v23 = v14 - v22;
        if ((unint64_t)(v23 + 1) >> 62)
          sub_6F9C();
        v24 = v15 - (_QWORD)v22;
        v25 = (uint64_t)(v15 - (_QWORD)v22) >> 1;
        if (v25 <= v23 + 1)
          v25 = v23 + 1;
        if (v24 >= 0x7FFFFFFFFFFFFFFCLL)
          v26 = 0x3FFFFFFFFFFFFFFFLL;
        else
          v26 = v25;
        if (v26)
        {
          v27 = (char *)sub_FC474(a1 + 672, v26);
          v14 = *(int **)(a1 + 664);
          v22 = *(int **)(a1 + 656);
        }
        else
        {
          v27 = 0;
        }
        v28 = (int *)&v27[4 * v23];
        v29 = &v27[4 * v26];
        *v28 = v13;
        v16 = v28 + 1;
        while (v14 != v22)
        {
          v30 = *--v14;
          *--v28 = v30;
        }
        *(_QWORD *)(a1 + 656) = v28;
        *(_QWORD *)(a1 + 664) = v16;
        *(_QWORD *)(a1 + 672) = v29;
        if (v22)
          operator delete(v22);
      }
      else
      {
        *v14 = v13;
        v16 = v14 + 1;
      }
      *(_QWORD *)(a1 + 664) = v16;
    }
  }
  v31 = *(objc_class **)(v12 + 16);
  if (v31 && (~*(_DWORD *)(v12 + 40) & 0x10000004) != 0)
    v32 = (TUIBoxBuilder *)objc_alloc_init(v31);
  else
    v32 = 0;
  v33 = *(_DWORD *)(v12 + 40);
  v91 = *(_QWORD *)(a1 + 168);
  v92 = v6[2];
  v34 = (v33 & 6) != 0 || v6[2] == 0;
  v90 = *(_QWORD *)(a1 + 176);
  v87 = *((unsigned int *)v6 + 5);
  if (!v34)
  {
    if (v32 && (v33 & 0x10000004) == 0x10000000)
    {
      v36 = v32;
      *(_QWORD *)(a1 + 168) = v36;
      v37 = (_QWORD *)(v12 + 24);
LABEL_53:
      *(_QWORD *)(a1 + 176) = *v37;
      v35 = 1;
      goto LABEL_54;
    }
    v38 = *(objc_class **)(v12 + 8);
    if ((*(_QWORD *)&v33 & 0x80004) == 0x80000 && v38 != 0)
    {
      v40 = (TUIBoxBuilder *)objc_alloc_init(v38);
      *(_QWORD *)(a1 + 168) = v40;
      v37 = (_QWORD *)(v12 + 24);
LABEL_52:
      v36 = v40;
      goto LABEL_53;
    }
    if ((v33 & 0x4000004) == 0x4000000)
    {
      v40 = objc_alloc_init(TUIBoxBuilder);
      *(_QWORD *)(a1 + 168) = v40;
      v37 = *(_QWORD **)(a1 + 24);
      goto LABEL_52;
    }
  }
  v35 = 0;
  v36 = 0;
LABEL_54:
  v41 = *(unsigned int *)(v12 + 40);
  v42 = v41 | ((unint64_t)*(unsigned __int8 *)(v12 + 44) << 32);
  if ((v41 & 8) != 0)
  {
    v88 = v36;
    v86 = *((unsigned int *)v6 + 4);
    v43 = v6[1];
    sub_F2994(a1 + 248, (v42 >> 4) & 1);
    if (v43)
    {
      v44 = *(_DWORD *)(v12 + 40);
      if ((v44 & 0x100) != 0)
      {
        v45 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)v12, "attributesToIgnoreWhenResolving"));
        v46 = (char *)objc_msgSend(v45, "_bitset");
        for (i = 0; i != 32; i += 8)
          *(_QWORD *)(a1 + 424 + i) |= *(_QWORD *)&v46[i];

        v44 = *(_DWORD *)(v12 + 40);
      }
      if ((v44 & 0x400000) != 0)
      {
        *(int8x16_t *)(a1 + 432) = vorrq_s8(*(int8x16_t *)(a1 + 432), (int8x16_t)xmmword_22F610);
        v44 = *(_DWORD *)(v12 + 40);
      }
      if ((v44 & 0x40) != 0)
      {
        v48 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)v12, "attributesToEvaluate"));
        v49 = objc_msgSend(v48, "_bitset");
        v50 = v49[1];
        *(_OWORD *)(a1 + 392) = *v49;
        *(_OWORD *)(a1 + 408) = v50;

      }
      TUI::Evaluation::Context::computeAttributes(a1, v86 | (v43 << 32), 0, a1 + 248);
    }
    *(_DWORD *)(a1 + 244) = a2;
    LODWORD(v42) = *(_DWORD *)(v12 + 40);
    v36 = v88;
  }
  if ((v42 & 0x400) != 0)
  {
    objc_msgSend(*(id *)v12, "preconfigureBox:context:", v32, *(_QWORD *)(a1 + 16));
    LODWORD(v42) = *(_DWORD *)(v12 + 40);
  }
  if ((v42 & 0x8000000) != 0)
  {
    v51 = v32;
    TUI::Evaluation::Context::configureBox(a1, v51, v52, v5);

    LODWORD(v42) = *(_DWORD *)(v12 + 40);
  }
  if ((v42 & 0x800) != 0 && v32)
  {
    v53 = v32;
    objc_msgSend(*(id *)v12, "configureBox:withNode:attributes:context:", v53, v5, *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 16));

    LODWORD(v42) = *(_DWORD *)(v12 + 40);
  }
  if ((v42 & 0x1000) != 0 && v32)
    objc_msgSend(*(id *)v12, "configureObject:withNode:attributes:context:", v32, v5, *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 16));
  if ((v33 & 2) == 0 && (*(_DWORD *)(v12 + 40) & 4) != 0)
  {
    v54 = (TUIBoxBuilder *)objc_msgSend(*(id *)v12, "builderWithNode:object:attributes:context:", v5, v32, *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 16));

    *(_QWORD *)(a1 + 168) = v54;
    *(_QWORD *)(a1 + 176) = *(_QWORD *)(v12 + 24);
    if ((*(_DWORD *)(v12 + 40) & 0x10000000) != 0)
    {
      v36 = v54;

      v35 = 1;
      v32 = v36;
    }
    else
    {
      v35 = 1;
      v36 = v54;
    }
  }
  v55 = *(_QWORD *)(a1 + 208);
  if (v55)
  {
    if ((*(_DWORD *)(v55 + 40) & 0x4000) != 0)
    {
      if (v32)
      {
        if ((*(_DWORD *)(v12 + 40) & 0x8000000) != 0)
        {
          v56 = *(_QWORD *)(a1 + 192);
          if (v56)
            objc_msgSend(*(id *)v55, "configureChildBox:withChildNode:attributes:builder:context:", v32, v5, *(_QWORD *)(a1 + 16), v56, *(_QWORD *)(a1 + 16));
        }
      }
    }
  }
  v57 = *(_DWORD *)(v12 + 40);
  if ((~v57 & 0x1000008) == 0)
  {
    v58 = *(_QWORD *)(a1 + 208);
    if (v58)
    {
      if ((*(_DWORD *)(v58 + 40) & 0x2000000) != 0)
      {
        v59 = *(void **)(a1 + 192);
        if (v59)
        {
          objc_msgSend(v59, "configureWithChildNode:attributes:", v5, *(_QWORD *)(a1 + 16));
          v57 = *(_DWORD *)(v12 + 40);
        }
      }
    }
  }
  if ((v57 & 0x8000000) != 0 && v32)
  {
    v60 = v32;
    -[TUIBoxBuilder _compressStorage](v60, "_compressStorage");

    v57 = *(_DWORD *)(v12 + 40);
  }
  if ((v57 & 0x2000) != 0)
    v61 = v35;
  else
    v61 = 1;
  if ((v61 & 1) == 0)
    objc_msgSend(*(id *)v12, "configureContainingBuilder:withNode:attributes:context:", *(_QWORD *)(a1 + 168), v5, *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 16));
  v62 = v33;
  *(_DWORD *)(a1 + 244) = TUIElementNodeNil;
  sub_EF264(a1 + 248);
  v89 = *(_OWORD *)(a1 + 192);
  v63 = *(_QWORD *)(a1 + 208);
  if (v63 && (*(_DWORD *)(v63 + 40) & 0x200000) != 0)
  {
    *(_QWORD *)(a1 + 208) = 0;
    *(_QWORD *)(a1 + 192) = 0;
  }
  v64 = *(_BYTE *)(a1 + 184);
  v65 = *(_DWORD *)(v12 + 40);
  if (!v32)
    goto LABEL_117;
  if ((v65 & 0x20000000) != 0)
  {
    if ((v65 & 0x40000000) != 0)
      v66 = -[TUIBoxBuilder allowDynamicWindowInstantiation](v32, "allowDynamicWindowInstantiation");
    else
      v66 = 0;
    *(_BYTE *)(a1 + 184) = *(_BYTE *)(a1 + 184) & 0xFE | v66;
  }
  if ((_DWORD)v92)
    v67 = v35;
  else
    v67 = 0;
  if (v67 == 1)
  {
    *(_QWORD *)(a1 + 192) = v36;
    *(_QWORD *)(a1 + 208) = v12;
    if (v36)
    {
      if ((*(_QWORD *)(*(_QWORD *)(a1 + 24) + 16) & *(_QWORD *)(v12 + 24)) != 0)
      {
        v68 = v36;
        *(_QWORD *)(a1 + 200) = v68;

      }
    }
  }
  v65 = *(_DWORD *)(v12 + 40);
  if ((v65 & 0x40000) != 0)
  {
    objc_msgSend(*(id *)v12, "instantiateNode:withObject:context:", v5, v32, *(_QWORD *)(a1 + 16));
  }
  else
  {
LABEL_117:
    if ((v65 & 0x8000) != 0)
    {
      if ((v62 & 2) != 0 && (v65 & 2) == 0
        || ((*(_QWORD *)&v65 & 0x10000) == 0 ? (v69 = 1) : (v69 = v35), (v69 & 1) != 0))
      {
        v34 = (*(_QWORD *)&v65 & 0x20000) == 0;
        v70 = v35 ^ 1;
        if (v34)
          v70 = 1;
        if ((v70 & 1) != 0)
        {
          if ((_DWORD)v92)
          {
            if ((objc_opt_respondsToSelector(*(_QWORD *)(a1 + 168), "onlyInstantiateFirstChildPassingConditionForEnumeratorChildren") & 1) != 0)objc_msgSend(*(id *)(a1 + 168), "onlyInstantiateFirstChildPassingConditionForEnumeratorChildren");
            TUI::Evaluation::Context::instantiateChildren(a1, v87 | (v92 << 32));
          }
        }
        else if ((_DWORD)v92)
        {
          v71 = *(id *)v12;
          v72 = *(_QWORD *)(a1 + 168);
          v73 = *(_QWORD *)(a1 + 16);
          v93[0] = _NSConcreteStackBlock;
          v93[1] = 3221225472;
          v93[2] = sub_F4B04;
          v93[3] = &unk_241588;
          v93[4] = a1;
          v94 = v87;
          v95 = v92;
          v96 = 0;
          objc_msgSend(v71, "instantiateChildrenOfNode:object:builder:context:block:", v5, v32, v72, v73, v93);
        }
      }
      else if ((_DWORD)v92)
      {
        if ((v65 & 2) == 0)
          *(_QWORD *)(a1 + 176) = *(_QWORD *)(v12 + 24);
        v74 = *(id *)v12;
        v75 = *(_QWORD *)(a1 + 168);
        v76 = *(_QWORD *)(a1 + 16);
        v97[0] = _NSConcreteStackBlock;
        v97[1] = 3221225472;
        v97[2] = sub_F45DC;
        v97[3] = &unk_241568;
        v97[4] = a1;
        v98 = v87;
        v99 = v92;
        v100 = 0;
        objc_msgSend(v74, "instantiateChildrenOfNode:object:containingBuilder:context:block:", v5, v32, v75, v76, v97);
      }
    }
  }
  *(_BYTE *)(a1 + 184) = v64;
  *(_QWORD *)(a1 + 208) = v63;
  *(_OWORD *)(a1 + 192) = v89;
  v77 = v35 ^ 1;
  if (!v32)
    v77 = 1;
  if ((v77 & 1) == 0)
  {
    v78 = *(_DWORD *)(v12 + 40);
    if ((v78 & 0x80000) != 0)
    {
      objc_msgSend(*(id *)v12, "configureObject:withBuilder:context:", v32, *(_QWORD *)(a1 + 168), *(_QWORD *)(a1 + 16));
    }
    else if ((v78 & 0x4000000) != 0)
    {
      v79 = v32;
      v80 = *(id *)(a1 + 168);
      v81 = objc_msgSend(v80, "finalizeModelsWithParent:box:context:", v79, v79, *(_QWORD *)(a1 + 16));

    }
  }
  *(_QWORD *)(a1 + 168) = v91;
  *(_QWORD *)(a1 + 176) = v90;
  if (*(_BYTE *)(a1 + 552) && TUILocationNotNil(*((_DWORD *)v6 + 6)))
    *(_QWORD *)(a1 + 664) -= 4;
  v19 = v32;

  return v19;
}

void sub_F383C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

uint64_t TUI::Evaluation::Context::closureForElement(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;

  v2 = TUIClosureNil;
  if (!a2
    || TUI::Package::Buffer::findAttribute(*(_QWORD **)(a1 + 576), 1u, *(unsigned int *)(a2 + 16) | ((unint64_t)*(unsigned __int16 *)(a2 + 2) << 32)) != 65537)
  {
    return v2;
  }
  v5 = *(_QWORD *)(a1 + 576);
  v6 = &TUIValueNil;
  if (*(_QWORD *)(v5 + 232) > v4)
  {
    v7 = *(_QWORD *)(v5 + 224) + 12 * v4;
    if (v7)
      v6 = (int *)v7;
  }
  return TUI::Evaluation::Context::closure(a1, (TUI::Instruction::Decoder *)*v6);
}

id TUI::Evaluation::Context::instantiateEnumeratorWithNodes(uint64_t a1, unsigned int a2, uint64_t a3, unsigned int a4, void *a5, uint64_t a6)
{
  id v11;
  uint64_t v12;
  uint64_t v13;
  _DWORD *v14;
  void *v15;
  unint64_t v16;
  unint64_t v17;
  id v18;
  void *v19;
  void *v20;
  id v21;
  uint64_t v22;
  id v23;
  id v24;
  void *v25;
  _QWORD v27[7];
  unint64_t v28;
  unint64_t v29;

  v11 = a5;
  if (*(_QWORD *)(a1 + 168) && (v12 = a2, TUIEnumeratorNotNil(a2)))
  {
    v13 = *(_QWORD *)(a1 + 576);
    if (*(_QWORD *)(v13 + 264) <= (unint64_t)a2)
      v14 = 0;
    else
      v14 = (_DWORD *)(*(_QWORD *)(v13 + 256) + 16 * a2);
    sub_87AD8((uint64_t)&v28, v14);
    v16 = v28;
    v17 = v29;
    TUI::Instruction::Evaluation::evaluate((double *)&v28, *(TUI::Instruction::Evaluation **)(a1 + 8), (TUI::Instruction::Decoder *)HIDWORD(v29));
    v18 = TUI::Evaluation::ResolvedValue::objectValue((TUI::Evaluation::ResolvedValue *)&v28, (const TUI::Evaluation::Context *)a1);
    v19 = (void *)objc_claimAutoreleasedReturnValue(v18);

    if ((objc_opt_respondsToSelector(v19, "instantiateAsEnumerator:options:flags:builderClass:nodes:snapshot:context:") & 1) != 0)
      v20 = v19;
    else
      v20 = 0;
    v21 = v20;
    if (v21)
    {
      if ((objc_opt_respondsToSelector(*(_QWORD *)(a1 + 168), "addModel:") & 1) != 0)
      {
        v23 = (id)objc_opt_class(*(_QWORD *)(a1 + 168), v22);
        if ((objc_opt_respondsToSelector(*(_QWORD *)(a1 + 168), "builderClassForDynamicInstantiation") & 1) != 0)
          v23 = objc_msgSend(*(id *)(a1 + 168), "builderClassForDynamicInstantiation");
        v24 = objc_retainAutorelease(v23);
        v25 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 16), "snapshotWithClosure:", a4));
        v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v21, "instantiateAsEnumerator:options:flags:builderClass:nodes:snapshot:context:", v12, v11, a6, v24, a3, v25, *(_QWORD *)(a1 + 16)));
      }
      else
      {
        v25 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("%@ not allowing dynamic"), *(_QWORD *)(a1 + 168)));
        TUI::Evaluation::Context::reportError(a1, 1000, v25);
        v15 = 0;
      }

    }
    else
    {
      v27[0] = _NSConcreteStackBlock;
      v27[1] = 3221225472;
      v27[2] = sub_F4B14;
      v27[3] = &unk_2415A8;
      v27[4] = a1;
      v27[5] = a6;
      v27[6] = a3;
      TUI::Evaluation::Context::enumerate((TUI::Instruction::Evaluation **)a1, v16, v17, v27);
      v15 = 0;
    }

  }
  else
  {
    v15 = 0;
  }

  return v15;
}

void sub_F3B7C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void TUI::Evaluation::Context::configureBox(uint64_t a1, void *a2, uint64_t a3, unsigned int a4)
{
  id v6;
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t **v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t **v15;
  uint64_t v16;
  void *v17;
  uint64_t **v18;
  id v19;
  void *v20;
  uint64_t **v21;
  id v22;
  void *v23;
  uint64_t **v24;
  id v25;
  void *v26;
  uint64_t **v27;
  id v28;
  uint64_t v29;
  uint64_t **v30;
  id v31;
  void *v32;
  id v33;
  uint64_t v34;
  uint64_t **v35;
  void *v36;
  void *v37;
  void *v38;
  uint64_t **v39;
  id v40;
  id v41;
  __int128 v42;
  uint64_t **v43;
  __int128 v44;
  uint64_t **v45;
  void *v46;
  uint64_t **v47;
  id v48;
  void *v49;
  uint64_t **v50;
  id v51;
  double top;
  double left;
  double bottom;
  double right;
  uint64_t **v56;
  TUIGuides *v57;
  void *v58;
  void *v59;
  uint64_t **v60;
  id v61;
  void *v62;
  uint64_t **v63;
  id v64;
  uint64_t v65;
  uint64_t **v66;
  uint64_t **v67;
  uint64_t **v68;
  uint64_t **v69;
  uint64_t v70;
  uint64_t **v71;
  uint64_t **v72;
  void *v73;
  uint64_t **v74;
  id v75;
  void *v76;
  uint64_t **v77;
  id v78;
  uint64_t v79;
  uint64_t **v80;
  void *v81;
  uint64_t **v82;
  id v83;
  uint64_t v84;
  uint64_t **v85;
  uint64_t **v86;
  void *v87;
  uint64_t **v88;
  id v89;
  _OWORD v90[3];
  __int128 v91;
  __int128 v92;
  __int128 v93;
  _OWORD v94[3];
  __int128 v95;
  __int128 v96;
  __int128 v97;
  unsigned __int16 v98;

  v6 = a2;
  v7 = TUI::Evaluation::Context::identifierWithNode(a1, a4);
  v8 = (void *)objc_claimAutoreleasedReturnValue(v7);
  objc_msgSend(v6, "setIdentifier:", v8);

  v98 = 223;
  if ((*(_BYTE *)(a1 + 307) & 0x80) != 0)
  {
    v11 = sub_1529C((_QWORD *)(a1 + 352), &v98);
    v9 = TUI::Evaluation::ResolvedValue::lengthValue((TUI::Evaluation::ResolvedValue *)(v11 + 3), (const TUI::Evaluation::Context *)a1);
    v10 = v12;
  }
  else
  {
    v9 = 0x7FC000007FC00000;
    v10 = 0x200007FC00000;
  }
  objc_msgSend(v6, "setWidth:", v9, v10);
  v98 = 98;
  if ((*(_BYTE *)(a1 + 292) & 4) != 0)
  {
    v15 = sub_1529C((_QWORD *)(a1 + 352), &v98);
    v13 = TUI::Evaluation::ResolvedValue::lengthValue((TUI::Evaluation::ResolvedValue *)(v15 + 3), (const TUI::Evaluation::Context *)a1);
    v14 = v16;
  }
  else
  {
    v13 = 0x7FC000007FC00000;
    v14 = 0x200007FC00000;
  }
  objc_msgSend(v6, "setHeight:", v13, v14);
  v98 = 216;
  if ((*(_BYTE *)(a1 + 307) & 1) != 0)
  {
    v18 = sub_1529C((_QWORD *)(a1 + 352), &v98);
    v19 = TUI::Evaluation::ResolvedValue::stringValue((TUI::Evaluation::ResolvedValue *)(v18 + 3), (const TUI::Evaluation::Context *)a1);
    v17 = (void *)objc_claimAutoreleasedReturnValue(v19);
  }
  else
  {
    v17 = 0;
  }
  objc_msgSend(v6, "setValign:", +[TUIBox valignFromString:](TUIBox, "valignFromString:", v17));

  v98 = 96;
  if ((*(_BYTE *)(a1 + 292) & 1) != 0)
  {
    v21 = sub_1529C((_QWORD *)(a1 + 352), &v98);
    v22 = TUI::Evaluation::ResolvedValue::stringValue((TUI::Evaluation::ResolvedValue *)(v21 + 3), (const TUI::Evaluation::Context *)a1);
    v20 = (void *)objc_claimAutoreleasedReturnValue(v22);
  }
  else
  {
    v20 = 0;
  }
  objc_msgSend(v6, "setHalign:", +[TUIBox halignFromString:](TUIBox, "halignFromString:", v20));

  v98 = 10;
  if ((*(_BYTE *)(a1 + 281) & 4) != 0)
  {
    v24 = sub_1529C((_QWORD *)(a1 + 352), &v98);
    v25 = TUI::Evaluation::ResolvedValue::stringValue((TUI::Evaluation::ResolvedValue *)(v24 + 3), (const TUI::Evaluation::Context *)a1);
    v23 = (void *)objc_claimAutoreleasedReturnValue(v25);
  }
  else
  {
    v23 = 0;
  }
  objc_msgSend(v6, "setAnchorPosition:", +[TUIBox anchorPositionFromString:](TUIBox, "anchorPositionFromString:", v23));

  v98 = 168;
  if ((*(_BYTE *)(a1 + 301) & 1) != 0)
  {
    v27 = sub_1529C((_QWORD *)(a1 + 352), &v98);
    v28 = TUI::Evaluation::ResolvedValue::stringValue((TUI::Evaluation::ResolvedValue *)(v27 + 3), (const TUI::Evaluation::Context *)a1);
    v26 = (void *)objc_claimAutoreleasedReturnValue(v28);
  }
  else
  {
    v26 = 0;
  }
  objc_msgSend(v6, "setRenderModelKind:", +[TUIBox renderModelFromString:](TUIBox, "renderModelFromString:", v26));

  v98 = 176;
  if ((*(_BYTE *)(a1 + 302) & 1) != 0
    && (v30 = sub_1529C((_QWORD *)(a1 + 352), &v98),
        v31 = TUI::Evaluation::ResolvedValue::stringValue((TUI::Evaluation::ResolvedValue *)(v30 + 3), (const TUI::Evaluation::Context *)a1), (v32 = (void *)objc_claimAutoreleasedReturnValue(v31)) != 0))
  {
    v33 = +[TUIBox roleFromString:](TUIBox, "roleFromString:", v32);
  }
  else
  {
    v32 = 0;
    v33 = objc_msgSend((id)objc_opt_class(v6, v29), "defaultRole");
  }
  objc_msgSend(v6, "setRole:", v33);
  v98 = 226;
  if ((*(_BYTE *)(a1 + 308) & 4) != 0)
  {
    v35 = sub_1529C((_QWORD *)(a1 + 352), &v98);
    v34 = TUI::Evaluation::ResolvedValue::integerValue((TUI::Evaluation::ResolvedValue *)(v35 + 3), (const TUI::Evaluation::Context *)a1);
  }
  else
  {
    v34 = 0x7FFFFFFFFFFFFFFFLL;
  }
  objc_msgSend(v6, "setZIndex:", v34);
  v36 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 16), "UUID"));
  v37 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "identifier"));
  v98 = 108;
  if ((*(_BYTE *)(a1 + 293) & 0x10) != 0)
  {
    v39 = sub_1529C((_QWORD *)(a1 + 352), &v98);
    v40 = TUI::Evaluation::ResolvedValue::objectValue((TUI::Evaluation::ResolvedValue *)(v39 + 3), (const TUI::Evaluation::Context *)a1);
    v38 = (void *)objc_claimAutoreleasedReturnValue(v40);
  }
  else
  {
    v38 = 0;
  }
  v41 = +[TUIImpressionData newImpressionWithUUID:identifier:data:](TUIImpressionData, "newImpressionWithUUID:identifier:data:", v36, v37, v38);
  objc_msgSend(v6, "setImpressionData:", v41);

  v98 = 208;
  if ((*(_BYTE *)(a1 + 306) & 1) != 0)
  {
    v43 = sub_1529C((_QWORD *)(a1 + 352), &v98);
    TUI::Evaluation::ResolvedValue::transformValue((TUI::Evaluation::ResolvedValue *)(v43 + 3), (const TUI::Evaluation::Context *)a1, &v95);
  }
  else
  {
    v42 = *(_OWORD *)&CGAffineTransformIdentity.c;
    v95 = *(_OWORD *)&CGAffineTransformIdentity.a;
    v96 = v42;
    v97 = *(_OWORD *)&CGAffineTransformIdentity.tx;
  }
  v94[0] = v95;
  v94[1] = v96;
  v94[2] = v97;
  objc_msgSend(v6, "setTransform:", v94);
  v98 = 170;
  if ((*(_BYTE *)(a1 + 301) & 4) != 0)
  {
    v45 = sub_1529C((_QWORD *)(a1 + 352), &v98);
    TUI::Evaluation::ResolvedValue::transformValue((TUI::Evaluation::ResolvedValue *)(v45 + 3), (const TUI::Evaluation::Context *)a1, &v91);
  }
  else
  {
    v44 = *(_OWORD *)&CGAffineTransformIdentity.c;
    v91 = *(_OWORD *)&CGAffineTransformIdentity.a;
    v92 = v44;
    v93 = *(_OWORD *)&CGAffineTransformIdentity.tx;
  }
  v90[0] = v91;
  v90[1] = v92;
  v90[2] = v93;
  objc_msgSend(v6, "setRenderTransform:", v90);
  v98 = 119;
  if ((*(_BYTE *)(a1 + 294) & 0x80) != 0)
  {
    v47 = sub_1529C((_QWORD *)(a1 + 352), &v98);
    v48 = TUI::Evaluation::ResolvedValue::stringValue((TUI::Evaluation::ResolvedValue *)(v47 + 3), (const TUI::Evaluation::Context *)a1);
    v46 = (void *)objc_claimAutoreleasedReturnValue(v48);
  }
  else
  {
    v46 = 0;
  }
  objc_msgSend(v6, "setLayoutDirection:", +[TUIBox interfaceLayoutDirectionFromString:](TUIBox, "interfaceLayoutDirectionFromString:", v46));

  v98 = 124;
  if ((*(_BYTE *)(a1 + 295) & 0x10) != 0)
  {
    v50 = sub_1529C((_QWORD *)(a1 + 352), &v98);
    v51 = TUI::Evaluation::ResolvedValue::stringValue((TUI::Evaluation::ResolvedValue *)(v50 + 3), (const TUI::Evaluation::Context *)a1);
    v49 = (void *)objc_claimAutoreleasedReturnValue(v51);
  }
  else
  {
    v49 = 0;
  }
  objc_msgSend(v6, "setLiveTransformKind:", +[TUIBox liveTransformFromString:](TUIBox, "liveTransformFromString:", v49));

  v98 = 169;
  if ((*(_BYTE *)(a1 + 301) & 2) != 0)
  {
    v56 = sub_1529C((_QWORD *)(a1 + 352), &v98);
    top = TUI::Evaluation::ResolvedValue::insetsValue((id *)v56 + 3, (const TUI::Evaluation::Context *)a1);
  }
  else
  {
    top = UIEdgeInsetsZero.top;
    left = UIEdgeInsetsZero.left;
    bottom = UIEdgeInsetsZero.bottom;
    right = UIEdgeInsetsZero.right;
  }
  objc_msgSend(v6, "setRenderOutsets:", top, left, bottom, right);
  v57 = sub_F736C((TUI::Evaluation::Context *)a1);
  v58 = (void *)objc_claimAutoreleasedReturnValue(v57);
  objc_msgSend(v6, "setGuides:", v58);

  v98 = 164;
  if ((*(_BYTE *)(a1 + 300) & 0x10) != 0)
  {
    v60 = sub_1529C((_QWORD *)(a1 + 352), &v98);
    v61 = TUI::Evaluation::ResolvedValue::stringValue((TUI::Evaluation::ResolvedValue *)(v60 + 3), (const TUI::Evaluation::Context *)a1);
    v59 = (void *)objc_claimAutoreleasedReturnValue(v61);
  }
  else
  {
    v59 = 0;
  }
  objc_msgSend(v6, "setRefId:", v59);

  v98 = 165;
  if ((*(_BYTE *)(a1 + 300) & 0x20) != 0)
  {
    v63 = sub_1529C((_QWORD *)(a1 + 352), &v98);
    v64 = TUI::Evaluation::ResolvedValue::stringValue((TUI::Evaluation::ResolvedValue *)(v63 + 3), (const TUI::Evaluation::Context *)a1);
    v62 = (void *)objc_claimAutoreleasedReturnValue(v64);
  }
  else
  {
    v62 = 0;
  }
  objc_msgSend(v6, "setRefInstance:", v62);

  v98 = 17;
  v65 = *(_QWORD *)(a1 + 280);
  if ((v65 & 0x20000) != 0)
  {
    v66 = sub_1529C((_QWORD *)(a1 + 352), &v98);
    objc_msgSend(v6, "setAxAdjustable:", TUI::Evaluation::ResolvedValue::BOOLValue((TUI::Evaluation::ResolvedValue *)(v66 + 3), (const TUI::Evaluation::Context *)a1));
    v65 = *(_QWORD *)(a1 + 280);
  }
  v98 = 18;
  if ((v65 & 0x40000) != 0)
  {
    v67 = sub_1529C((_QWORD *)(a1 + 352), &v98);
    objc_msgSend(v6, "setAxButton:", TUI::Evaluation::ResolvedValue::BOOLValue((TUI::Evaluation::ResolvedValue *)(v67 + 3), (const TUI::Evaluation::Context *)a1));
    v65 = *(_QWORD *)(a1 + 280);
  }
  v98 = 20;
  if ((v65 & 0x100000) != 0)
  {
    v69 = sub_1529C((_QWORD *)(a1 + 352), &v98);
    objc_msgSend(v6, "setAxDisabled:", TUI::Evaluation::ResolvedValue::BOOLValue((TUI::Evaluation::ResolvedValue *)(v69 + 3), (const TUI::Evaluation::Context *)a1));
  }
  else
  {
    v98 = 74;
    if ((*(_BYTE *)(a1 + 289) & 4) != 0)
    {
      v68 = sub_1529C((_QWORD *)(a1 + 352), &v98);
      objc_msgSend(v6, "setAxDisabled:", TUI::Evaluation::ResolvedValue::BOOLValue((TUI::Evaluation::ResolvedValue *)(v68 + 3), (const TUI::Evaluation::Context *)a1) ^ 1);
    }
  }
  v98 = 21;
  v70 = *(_QWORD *)(a1 + 280);
  if ((v70 & 0x200000) != 0)
  {
    v71 = sub_1529C((_QWORD *)(a1 + 352), &v98);
    objc_msgSend(v6, "setAXElement:", TUI::Evaluation::ResolvedValue::BOOLValue((TUI::Evaluation::ResolvedValue *)(v71 + 3), (const TUI::Evaluation::Context *)a1));
    v70 = *(_QWORD *)(a1 + 280);
  }
  v98 = 25;
  if ((v70 & 0x2000000) != 0)
  {
    v72 = sub_1529C((_QWORD *)(a1 + 352), &v98);
    objc_msgSend(v6, "setAxImage:", TUI::Evaluation::ResolvedValue::BOOLValue((TUI::Evaluation::ResolvedValue *)(v72 + 3), (const TUI::Evaluation::Context *)a1));
    v70 = *(_QWORD *)(a1 + 280);
  }
  v98 = 24;
  if ((v70 & 0x1000000) != 0)
  {
    v74 = sub_1529C((_QWORD *)(a1 + 352), &v98);
    v75 = TUI::Evaluation::ResolvedValue::stringValue((TUI::Evaluation::ResolvedValue *)(v74 + 3), (const TUI::Evaluation::Context *)a1);
    v73 = (void *)objc_claimAutoreleasedReturnValue(v75);
    if (v73)
      objc_msgSend(v6, "setAxIdentifier:", v73);
  }
  else
  {
    v73 = 0;
  }
  v98 = 26;
  if ((*(_BYTE *)(a1 + 283) & 4) != 0)
  {
    v77 = sub_1529C((_QWORD *)(a1 + 352), &v98);
    v78 = TUI::Evaluation::ResolvedValue::stringValue((TUI::Evaluation::ResolvedValue *)(v77 + 3), (const TUI::Evaluation::Context *)a1);
    v76 = (void *)objc_claimAutoreleasedReturnValue(v78);
    if (v76)
      objc_msgSend(v6, "setAxLabel:", v76);
  }
  else
  {
    v76 = 0;
  }
  v98 = 22;
  v79 = *(_QWORD *)(a1 + 280);
  if ((v79 & 0x400000) != 0)
  {
    v80 = sub_1529C((_QWORD *)(a1 + 352), &v98);
    objc_msgSend(v6, "setAxHeading:", TUI::Evaluation::ResolvedValue::BOOLValue((TUI::Evaluation::ResolvedValue *)(v80 + 3), (const TUI::Evaluation::Context *)a1));
    v79 = *(_QWORD *)(a1 + 280);
  }
  v98 = 23;
  if ((v79 & 0x800000) != 0)
  {
    v82 = sub_1529C((_QWORD *)(a1 + 352), &v98);
    v83 = TUI::Evaluation::ResolvedValue::stringValue((TUI::Evaluation::ResolvedValue *)(v82 + 3), (const TUI::Evaluation::Context *)a1);
    v81 = (void *)objc_claimAutoreleasedReturnValue(v83);
    if (v81)
      objc_msgSend(v6, "setAxHint:", v81);
  }
  else
  {
    v81 = 0;
  }
  v98 = 27;
  v84 = *(_QWORD *)(a1 + 280);
  if ((v84 & 0x8000000) != 0)
  {
    v85 = sub_1529C((_QWORD *)(a1 + 352), &v98);
    objc_msgSend(v6, "setAxToggle:", TUI::Evaluation::ResolvedValue::BOOLValue((TUI::Evaluation::ResolvedValue *)(v85 + 3), (const TUI::Evaluation::Context *)a1));
    v84 = *(_QWORD *)(a1 + 280);
  }
  v98 = 28;
  if ((v84 & 0x10000000) != 0)
  {
    v86 = sub_1529C((_QWORD *)(a1 + 352), &v98);
    objc_msgSend(v6, "setAxTouchContainer:", TUI::Evaluation::ResolvedValue::BOOLValue((TUI::Evaluation::ResolvedValue *)(v86 + 3), (const TUI::Evaluation::Context *)a1));
    v84 = *(_QWORD *)(a1 + 280);
  }
  v98 = 29;
  if ((v84 & 0x20000000) != 0)
  {
    v88 = sub_1529C((_QWORD *)(a1 + 352), &v98);
    v89 = TUI::Evaluation::ResolvedValue::stringValue((TUI::Evaluation::ResolvedValue *)(v88 + 3), (const TUI::Evaluation::Context *)a1);
    v87 = (void *)objc_claimAutoreleasedReturnValue(v89);
    if (v87)
      objc_msgSend(v6, "setAxValue:", v87);
  }
  else
  {
    v87 = 0;
  }

}

void sub_F44F0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;

  _Unwind_Resume(a1);
}

uint64_t sub_F45DC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(v2 + 168) = a2;
  return TUI::Evaluation::Context::instantiateChildren(v2, *(_QWORD *)(a1 + 40));
}

void TUI::Evaluation::Context::instantiateChildren(const TUI::Evaluation::Context *a1, uint64_t a2, char a3)
{
  uint64_t v3;
  char v4;
  unsigned int v5;
  uint64_t v7;
  unsigned __int16 *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  TUI::Instruction::Decoder *v17;
  unsigned int v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  id v26;
  NSObject *v27;
  id v28;
  uint64_t v29;
  id v30;
  _QWORD *v31;
  unint64_t v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  TUIBoxBuilder *v36;
  void *v37;
  id v38;
  TUIBoxBuilder *v39;
  uint64_t v40;
  int v41;
  id v42;
  objc_class *v43;
  NSString *v44;
  id v45;
  uint64_t v46;
  void *v47;
  uint64_t v48;
  char v49;
  id v50;
  uint64_t v51;
  id v52;
  uint64_t v53;
  void *v54;
  void *v55;
  uint64_t v56;
  uint8_t buf[4];
  _BYTE v59[18];
  __int16 v60;
  id v61;
  __int16 v62;
  void *v63;
  __int16 v64;
  uint64_t v65;

  v3 = WORD2(a2);
  if (WORD2(a2))
  {
    v4 = a3;
    v5 = a2;
    do
    {
      v7 = *((_QWORD *)a1 + 72);
      if (*(_QWORD *)(v7 + 216) <= (unint64_t)v5
        || (v8 = (unsigned __int16 *)(*(_QWORD *)(v7 + 208) + 28 * v5)) == 0)
      {
        v26 = TUIInstantiationLog();
        v27 = objc_claimAutoreleasedReturnValue(v26);
        if (os_log_type_enabled(v27, OS_LOG_TYPE_ERROR))
        {
          v38 = objc_msgSend(*((id *)a1 + 2), "feedId");
          *(_DWORD *)buf = 134218240;
          *(_QWORD *)v59 = v38;
          *(_WORD *)&v59[8] = 2048;
          *(_QWORD *)&v59[10] = v5;
          _os_log_error_impl(&dword_0, v27, OS_LOG_TYPE_ERROR, "[fid:%lu] failed to find child element: %lu", buf, 0x16u);
        }
        goto LABEL_24;
      }
      v9 = *((_QWORD *)a1 + 3);
      v10 = *(_QWORD *)(v9 + 72);
      v11 = 0xAAAAAAAAAAAAAAABLL * ((*(_QWORD *)(v9 + 80) - v10) >> 4);
      v12 = v10 + 48 * *v8;
      v13 = v9 + 24;
      if (v11 <= *v8)
        v14 = v13;
      else
        v14 = v12;
      v15 = *(_DWORD *)(v14 + 40);
      if ((*(_DWORD *)(v14 + 40) & 1) == 0)
      {
        v16 = *(_QWORD *)(v14 + 32);
        if (!v16 || (v16 & ~*((_QWORD *)a1 + 22)) != 0)
        {
          v28 = TUIInstantiationLog();
          v27 = objc_claimAutoreleasedReturnValue(v28);
          if (os_log_type_enabled(v27, OS_LOG_TYPE_ERROR))
          {
            v30 = objc_msgSend(*((id *)a1 + 2), "feedId");
            v31 = (_QWORD *)*((_QWORD *)a1 + 72);
            v32 = *v8;
            if (v31[55] <= v32)
              v33 = 0;
            else
              v33 = v31[54] + *(unsigned int *)(v31[56] + 4 * v32);
            v43 = (objc_class *)objc_opt_class(*((_QWORD *)a1 + 21), v29);
            v44 = NSStringFromClass(v43);
            v45 = (id)objc_claimAutoreleasedReturnValue(v44);
            v46 = *((_QWORD *)a1 + 4);
            if (v46)
            {
              v50 = TUI::ElementInstantiating::BuilderCache::description(*((_QWORD *)a1 + 4), *(_QWORD *)(v14 + 32));
              v55 = (void *)objc_claimAutoreleasedReturnValue(v50);
              v51 = *((_QWORD *)a1 + 4);
              if (v51)
              {
                v52 = TUI::ElementInstantiating::BuilderCache::description(v51, *((_QWORD *)a1 + 22));
                v53 = objc_claimAutoreleasedReturnValue(v52);
                v49 = 0;
                v47 = v55;
                v54 = (void *)v53;
                v48 = v53;
              }
              else
              {
                v48 = 0;
                v49 = 1;
                v47 = v55;
              }
            }
            else
            {
              v47 = 0;
              v48 = 0;
              v49 = 1;
            }
            *(_DWORD *)buf = 134219010;
            *(_QWORD *)v59 = v30;
            *(_WORD *)&v59[8] = 2082;
            *(_QWORD *)&v59[10] = v33;
            v60 = 2114;
            v61 = v45;
            v62 = 2112;
            v63 = v47;
            v64 = 2112;
            v65 = v48;
            _os_log_error_impl(&dword_0, v27, OS_LOG_TYPE_ERROR, "[fid:%lu] child element name=%{public}s not allowed by current builder %{public}@; required:%@ builder:%@",
              buf,
              0x34u);
            if ((v49 & 1) == 0)

            v4 = a3;
            if (v46)

          }
LABEL_24:

          goto LABEL_25;
        }
      }
      if ((v4 & 1) == 0)
      {
        v17 = (TUI::Instruction::Decoder *)*((unsigned int *)v8 + 2);
        if (!TUIConditionIsNil(*((_DWORD *)v8 + 2)))
        {
          TUI::Evaluation::Context::resolve((uint64_t)a1, v17, (uint64_t)buf);
          v18 = TUI::Evaluation::ResolvedValue::BOOLValue((TUI::Evaluation::ResolvedValue *)buf, a1);

          if (!v18)
            goto LABEL_25;
        }
      }
      v19 = *(unsigned int *)(v14 + 40) | ((unint64_t)*(unsigned __int8 *)(v14 + 44) << 32);
      if ((v19 & 0x1F80000000) != 0)
      {
        v21 = *((_QWORD *)a1 + 27);
        v20 = *((_QWORD *)a1 + 28);
        v22 = *((_DWORD *)a1 + 60);
        v56 = *((_QWORD *)a1 + 29);
        if ((v19 & 0x1000000000) != 0)
        {
          if (v20)
            *((_QWORD *)a1 + 27) = v20;
          *((_DWORD *)a1 + 60) = v5;
          v23 = *((_QWORD *)a1 + 76);
          *((_QWORD *)a1 + 28) = 0;
          *((_QWORD *)a1 + 29) = v23;
          v19 = *(unsigned int *)(v14 + 40) | ((unint64_t)*(unsigned __int8 *)(v14 + 44) << 32);
        }
        (*(void (**)(_QWORD, unint64_t))(**(_QWORD **)a1 + 72))(*(_QWORD *)a1, (v19 >> 31) & 0x3F);
        if ((a3 & 4) != 0 || (*(_DWORD *)(v14 + 40) & 0x400000) == 0)
        {
          v36 = TUI::Evaluation::Context::instantiateNode((uint64_t)a1, v5);
          v25 = objc_claimAutoreleasedReturnValue(v36);
        }
        else
        {
          v24 = TUI::Evaluation::Context::instantiateNodeWithEnumeration((uint64_t)a1, v5, v14);
          v25 = objc_claimAutoreleasedReturnValue(v24);
        }
        v37 = (void *)v25;
        (*(void (**)(_QWORD))(**(_QWORD **)a1 + 80))(*(_QWORD *)a1);
        if (((*(unsigned int *)(v14 + 40) | ((unint64_t)*(unsigned __int8 *)(v14 + 44) << 32)) & 0x1000000000) != 0)
          *((_QWORD *)a1 + 28) = v20;
        *((_QWORD *)a1 + 27) = v21;
        *((_DWORD *)a1 + 60) = v22;
        v4 = a3;
        *((_QWORD *)a1 + 29) = v56;
        if ((v15 & 1) == 0)
          goto LABEL_42;
      }
      else
      {
        if ((v4 & 4) != 0 || (*(_DWORD *)(v14 + 40) & 0x400000) == 0)
        {
          v39 = TUI::Evaluation::Context::instantiateNode((uint64_t)a1, v5);
          v35 = objc_claimAutoreleasedReturnValue(v39);
        }
        else
        {
          v34 = TUI::Evaluation::Context::instantiateNodeWithEnumeration((uint64_t)a1, v5, v14);
          v35 = objc_claimAutoreleasedReturnValue(v34);
        }
        v37 = (void *)v35;
        v40 = *((_QWORD *)a1 + 28);
        if (v40)
          *((_QWORD *)a1 + 27) = v40;
        *((_QWORD *)a1 + 28) = 0;
        if ((v15 & 1) == 0)
        {
LABEL_42:
          if (v37)
          {
            v41 = *(_DWORD *)(v14 + 40);
            if ((v41 & 0x100000) != 0)
            {
              objc_msgSend(*(id *)v14, "addObject:toContainingBuilder:context:", v37, *((_QWORD *)a1 + 21), *((_QWORD *)a1 + 2));
            }
            else if ((v41 & 0x8000000) != 0)
            {
              v42 = *((id *)a1 + 21);
              objc_msgSend(v42, "addBox:", v37);

            }
          }
        }
      }

      if ((v4 & 2) != 0)
        return;
LABEL_25:
      ++v5;
      --v3;
    }
    while (v3);
  }
}

void sub_F4A94(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

uint64_t sub_F4B04(uint64_t a1)
{
  return TUI::Evaluation::Context::instantiateChildren(*(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40));
}

uint64_t sub_F4B14(uint64_t a1)
{
  uint64_t v2;
  char v3;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 32);
  if ((objc_opt_respondsToSelector(*(_QWORD *)(v2 + 168), "onlyInstantiateFirstChildPassingConditionForEnumeratorChildren") & 1) != 0)objc_msgSend(*(id *)(v2 + 168), "onlyInstantiateFirstChildPassingConditionForEnumeratorChildren");
  v3 = *(_BYTE *)(v2 + 184);
  *(_BYTE *)(v2 + 184) = v3 & 0xFE | ((*(_DWORD *)(a1 + 40) & 2) != 0);
  result = TUI::Evaluation::Context::instantiateChildren(v2, *(_QWORD *)(a1 + 48));
  *(_BYTE *)(v2 + 184) = v3;
  return result;
}

id TUI::Evaluation::Context::instantiateEntry(id *a1, void *a2)
{
  id v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  id v8;
  id v9;
  void *v10;
  void *v11;
  void *v12;
  TUIBoxBuilder *v13;
  void *v14;
  id v15;
  id v16;
  id v17;

  v4 = a2;
  objc_storeStrong(a1 + 94, a2);
  v5 = objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "actionObject"));
  v6 = a1[68];
  a1[68] = (id)v5;

  v7 = objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "aTemplate"));
  v8 = a1[95];
  a1[95] = (id)v7;

  (*(void (**)(id, uint64_t))(*(_QWORD *)*a1 + 72))(*a1, 1);
  v9 = *a1;
  v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "bindings"));
  v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "data"));
  (*(void (**)(id, void *))(*(_QWORD *)v9 + 88))(v9, v11);

  v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "aTemplate"));
  v13 = TUI::Evaluation::Context::instantiateNode((uint64_t)a1, objc_msgSend(v12, "rootElementNode"));
  v14 = (void *)objc_claimAutoreleasedReturnValue(v13);

  (*(void (**)(id))(*(_QWORD *)*a1 + 80))(*a1);
  v15 = a1[68];
  a1[68] = 0;

  v16 = a1[94];
  a1[94] = 0;

  v17 = a1[95];
  a1[95] = 0;

  a1[92] = 0;
  a1[21] = 0;

  return v14;
}

void sub_F4CDC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

unint64_t TUI::Evaluation::Context::updateEntryWithBuilderEnvironmentContainer(id *a1, void *a2, void *a3, void *a4)
{
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  id v18;
  id v19;
  id v20;
  os_unfair_lock_s *v21;
  objc_class *v22;
  uint64_t v23;
  _QWORD *v24;
  void *v25;
  unsigned int v26;
  uint64_t v27;
  unint64_t v28;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  void *v37;
  void *v38;

  v8 = a2;
  v9 = a3;
  v10 = a4;
  v11 = a1[68];
  v36 = v11;
  v12 = a1[94];
  v35 = v12;
  v13 = a1[95];
  v14 = v13;
  v33 = a1[92];
  v34 = v14;
  v31 = a1[21];
  v32 = a1[26];
  v30 = a1[22];
  objc_storeStrong(a1 + 94, a2);
  v37 = v10;
  v38 = v9;
  v15 = objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "actionObject"));
  v16 = a1[68];
  a1[68] = (id)v15;

  v17 = objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "aTemplate"));
  v18 = a1[95];
  a1[95] = (id)v17;

  v19 = a1[74];
  a1[74] = 0;
  a1[21] = v9;
  v20 = v9;
  v21 = (os_unfair_lock_s *)a1[4];
  if (v21)
  {
    v22 = (objc_class *)objc_opt_class(v20);
    v23 = TUI::ElementInstantiating::BuilderCache::computeProtocolsFromClass(v21, v22);
  }
  else
  {
    v23 = *(_QWORD *)a1[3];
  }
  a1[22] = (id)v23;
  a1[26] = 0;
  a1[92] = v10;
  v24 = a1[72];
  v25 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "aTemplate"));
  v26 = objc_msgSend(v25, "rootElementNode");
  if (v24[27] <= (unint64_t)v26)
  {

  }
  else
  {
    v27 = v24[26] + 28 * v26;

    if (v27)
      TUI::Evaluation::Context::instantiateChildren((const TUI::Evaluation::Context *)a1, *(unsigned int *)(v27 + 20) | ((unint64_t)*(unsigned __int16 *)(v27 + 4) << 32), 0);
  }
  v28 = (unint64_t)a1[74];
  a1[74] = v19;
  objc_storeStrong(a1 + 68, v11);
  objc_storeStrong(a1 + 94, v12);
  objc_storeStrong(a1 + 95, v13);
  a1[92] = v33;
  a1[26] = v32;
  a1[21] = v31;
  a1[22] = v30;
  if ((objc_msgSend(v38, "containsSingleComponent") & 1) == 0)
    v28 |= (*(uint64_t (**)(id))(*(_QWORD *)*a1 + 216))(*a1);

  return v28;
}

void sub_F4F30(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, void *a15, void *a16, void *a17, void *a18)
{
  void *v18;
  void *v19;

  _Unwind_Resume(a1);
}

void TUI::Evaluation::Context::includeTemplate(uint64_t a1, void *a2)
{
  void **v4;
  id v5;
  unsigned int v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  id v11;

  v11 = a2;
  v4 = (void **)(a1 + 760);
  v5 = *(id *)(a1 + 760);
  objc_storeStrong((id *)(a1 + 760), a2);
  v6 = objc_msgSend(v11, "rootElementNode");
  v7 = *(_QWORD *)(a1 + 576);
  if (*(_QWORD *)(v7 + 216) > (unint64_t)v6)
  {
    v8 = *(_QWORD *)(v7 + 208) + 28 * v6;
    if (v8)
    {
      v9 = objc_autoreleasePoolPush();
      TUI::Evaluation::Context::instantiateChildren((const TUI::Evaluation::Context *)a1, *(unsigned int *)(v8 + 20) | ((unint64_t)*(unsigned __int16 *)(v8 + 4) << 32), 0);
      objc_autoreleasePoolPop(v9);
    }
  }
  v10 = *v4;
  *v4 = v5;

}

void sub_F503C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

uint64_t TUI::Evaluation::Context::evaluateEnumeratorWithNodes(uint64_t a1, unsigned int a2, void *a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, char a8, void *a9, void *a10)
{
  id v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  os_unfair_lock_s *v20;
  objc_class *v21;
  uint64_t v22;
  _BOOL4 v23;
  uint64_t v25;
  _DWORD *v26;
  uint64_t v27;
  Entry v28;
  unint64_t v29;
  unsigned int v30;
  uint64_t v31;
  Entry v32;
  char v37;
  id v38;
  id v39;
  _QWORD v40[7];
  unint64_t v41;
  uint64_t v42;

  v39 = a3;
  v38 = a9;
  v14 = a10;
  v15 = v14;
  v16 = *(_QWORD *)(a1 + 168);
  v17 = *(_QWORD *)(a1 + 176);
  v18 = *(_QWORD *)(a1 + 192);
  v19 = *(_QWORD *)(a1 + 208);
  v37 = *(_BYTE *)(a1 + 184);
  *(_QWORD *)(a1 + 168) = v14;
  v20 = *(os_unfair_lock_s **)(a1 + 32);
  if (v20)
  {
    v21 = (objc_class *)objc_opt_class(v14);
    v22 = TUI::ElementInstantiating::BuilderCache::computeProtocolsFromClass(v20, v21);
  }
  else
  {
    v22 = **(_QWORD **)(a1 + 24);
  }
  *(_QWORD *)(a1 + 176) = v22;
  *(_QWORD *)(a1 + 192) = v15;
  v23 = TUIEnumeratorNotNil(a2);
  if ((a7 & 0xFFFF00000000) != 0 && v23)
  {
    v25 = *(_QWORD *)(a1 + 576);
    if (*(_QWORD *)(v25 + 264) <= (unint64_t)a2)
      v26 = 0;
    else
      v26 = (_DWORD *)(*(_QWORD *)(v25 + 256) + 16 * a2);
    sub_87AD8((uint64_t)&v41, v26);
    v29 = v41;
    v28 = (Entry)v42;
    if ((objc_opt_respondsToSelector(*(_QWORD *)(a1 + 168), "onlyInstantiateFirstChildPassingConditionForEnumeratorChildren") & 1) != 0)
    {
      v30 = objc_msgSend(*(id *)(a1 + 168), "onlyInstantiateFirstChildPassingConditionForEnumeratorChildren");
      v31 = 2;
      if (!v30)
        v31 = 0;
    }
    else
    {
      v31 = 0;
    }
    *(_BYTE *)(a1 + 184) = *(_BYTE *)(a1 + 184) & 0xFE | ((a8 & 2) != 0);
    v40[0] = _NSConcreteStackBlock;
    v40[1] = 3221225472;
    v40[2] = sub_F53C0;
    v40[3] = &unk_2415A8;
    v40[6] = a7;
    v40[4] = a1;
    v40[5] = v31 & 0xFFFFFFFFFFFFFFFBLL | (4 * (a8 & 1));
    v32 = v28;
    v27 = TUI::Evaluation::Context::evaluateEnumeratorWithBlock((_QWORD *)a1, v29, v32, v39, a4, a5, a6, v40);
  }
  else
  {
    v27 = 0;
  }
  *(_QWORD *)(a1 + 168) = v16;
  *(_QWORD *)(a1 + 176) = v17;
  *(_QWORD *)(a1 + 192) = v18;
  *(_QWORD *)(a1 + 208) = v19;
  *(_BYTE *)(a1 + 184) = v37;

  return v27;
}

void sub_F5240(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, void *a15)
{
  void *v15;

  _Unwind_Resume(a1);
}

uint64_t TUI::Evaluation::Context::evaluateEnumeratorWithBlock(_QWORD *a1, unint64_t a2, Entry a3, void *a4, uint64_t a5, uint64_t a6, int a7, void *a8)
{
  id v15;
  id v16;
  Entry v17;
  uint64_t v18;
  _QWORD v20[4];
  id v21;
  id v22;
  uint64_t *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;

  v15 = a4;
  v16 = a8;
  v28 = 0;
  v29 = &v28;
  v30 = 0x2020000000;
  v31 = 0;
  if (v16)
  {
    v20[0] = _NSConcreteStackBlock;
    v20[1] = 3221225472;
    v20[2] = sub_F7534;
    v20[3] = &unk_241658;
    v24 = a1;
    v25 = a5;
    v26 = a6;
    v21 = v15;
    v27 = a7;
    v22 = v16;
    v23 = &v28;
    v17 = a3;
    TUI::Evaluation::Context::evaluateEnumerator(a1, a2, v17, v20);

    v18 = v29[3];
  }
  else
  {
    v18 = 0;
  }
  _Block_object_dispose(&v28, 8);

  return v18;
}

void sub_F5390(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7, void *a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  void *v13;
  void *v14;
  va_list va;

  va_start(va, a13);

  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_F53C0(uint64_t a1)
{
  TUI::Evaluation::Context::instantiateChildren(*(const TUI::Evaluation::Context **)(a1 + 32), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 40));
}

uint64_t TUI::Evaluation::Context::evaluateBindingWithNodes(uint64_t a1, unsigned int a2, void *a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, char a8, uint64_t a9, void *a10)
{
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  _BOOL4 IsValid;
  Entry v22;
  Entry v24;
  Entry v25;
  unsigned int v26;
  uint64_t v27;
  uint64_t v28;
  Entry v29;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD v34[7];

  v32 = a4;
  v33 = a5;
  v15 = a3;
  v16 = a10;
  v18 = *(_QWORD *)(a1 + 168);
  v17 = *(_QWORD *)(a1 + 176);
  v19 = *(_BYTE *)(a1 + 184);
  v20 = **(_QWORD **)(a1 + 24);
  *(_QWORD *)(a1 + 168) = v16;
  *(_QWORD *)(a1 + 176) = v20;
  IsValid = TUINameIsValid(a2);
  if ((a7 & 0xFFFF00000000) != 0 && IsValid)
  {
    v31 = TUI::Package::Enumerator::Entry::binding((TUI::Package::Enumerator::Entry *)a2, v22);
    v25 = v24;
    if ((objc_opt_respondsToSelector(*(_QWORD *)(a1 + 168), "onlyInstantiateFirstChildPassingConditionForEnumeratorChildren") & 1) != 0)
    {
      v26 = objc_msgSend(*(id *)(a1 + 168), "onlyInstantiateFirstChildPassingConditionForEnumeratorChildren", v31, v32, v33);
      v27 = 2;
      if (!v26)
        v27 = 0;
    }
    else
    {
      v27 = 0;
    }
    *(_BYTE *)(a1 + 184) = *(_BYTE *)(a1 + 184) & 0xFE | ((a8 & 2) != 0);
    v34[0] = _NSConcreteStackBlock;
    v34[1] = 3221225472;
    v34[2] = sub_F5560;
    v34[3] = &unk_2415A8;
    v34[6] = a7;
    v34[4] = a1;
    v34[5] = v27 & 0xFFFFFFFFFFFFFFFBLL | (4 * (a8 & 1));
    v29 = v25;
    v28 = TUI::Evaluation::Context::evaluateEnumeratorWithBlock((_QWORD *)a1, v31, v29, v15, v32, v33, a6, v34);
  }
  else
  {
    v28 = 0;
  }
  *(_QWORD *)(a1 + 168) = v18;
  *(_QWORD *)(a1 + 176) = v17;
  *(_BYTE *)(a1 + 184) = v19;

  return v28;
}

void sub_F5544(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_F5560(uint64_t a1)
{
  TUI::Evaluation::Context::instantiateChildren(*(const TUI::Evaluation::Context **)(a1 + 32), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 40));
}

void TUI::Evaluation::Context::evaluateEnumeratorWithNodes(uint64_t a1, unsigned int a2, void *a3, uint64_t a4, void *a5, void *a6)
{
  id v11;
  id v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  _BOOL4 v16;
  uint64_t v18;
  _DWORD *v19;
  unint64_t v20;
  Entry v21;
  Entry v22;
  _QWORD v23[4];
  id v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;

  v11 = a3;
  v12 = a5;
  v13 = a6;
  v14 = *(_QWORD *)(a1 + 168);
  v15 = *(_QWORD *)(a1 + 176);
  *(_QWORD *)(a1 + 168) = v13;
  *(_QWORD *)(a1 + 176) = **(_QWORD **)(a1 + 24);
  v16 = TUIEnumeratorNotNil(a2);
  if ((a4 & 0xFFFF00000000) != 0 && v16)
  {
    v18 = *(_QWORD *)(a1 + 576);
    if (*(_QWORD *)(v18 + 264) <= (unint64_t)a2)
      v19 = 0;
    else
      v19 = (_DWORD *)(*(_QWORD *)(v18 + 256) + 16 * a2);
    sub_87AD8((uint64_t)&v27, v19);
    v20 = v27;
    v21 = (Entry)v28;
    v23[0] = _NSConcreteStackBlock;
    v23[1] = 3221225472;
    v23[2] = sub_F56EC;
    v23[3] = &unk_2415D0;
    v25 = a1;
    v24 = v11;
    v26 = a4;
    v22 = v21;
    TUI::Evaluation::Context::evaluateEnumerator((_QWORD *)a1, v20, v22, v23);

  }
  *(_QWORD *)(a1 + 168) = v14;
  *(_QWORD *)(a1 + 176) = v15;

}

void sub_F56B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;
  void *v15;

  _Unwind_Resume(a1);
}

void sub_F56EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  const TUI::Evaluation::Context *v4;
  uint64_t v5;

  v4 = *(const TUI::Evaluation::Context **)(a1 + 40);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)a2 + 24))(a2, a3);
  objc_storeStrong((id *)(v5 + 32), *(id *)(a1 + 32));
  TUI::Evaluation::Context::instantiateChildren(v4, *(_QWORD *)(a1 + 48), 0);
}

void TUI::Evaluation::Context::evaluateBindingWithNodes(uint64_t a1, unsigned int a2, void *a3, uint64_t a4, uint64_t a5, void *a6)
{
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BOOL4 IsValid;
  Entry v15;
  unint64_t v17;
  Entry v18;
  Entry v19;
  Entry v20;
  id v21;
  _QWORD v22[4];
  id v23;
  uint64_t v24;
  uint64_t v25;

  v21 = a3;
  v10 = a6;
  v11 = *(_QWORD *)(a1 + 168);
  v12 = *(_QWORD *)(a1 + 176);
  v13 = **(_QWORD **)(a1 + 24);
  *(_QWORD *)(a1 + 168) = v10;
  *(_QWORD *)(a1 + 176) = v13;
  IsValid = TUINameIsValid(a2);
  if ((a4 & 0xFFFF00000000) != 0 && IsValid)
  {
    v17 = TUI::Package::Enumerator::Entry::binding((TUI::Package::Enumerator::Entry *)a2, v15);
    v19 = v18;
    v22[0] = _NSConcreteStackBlock;
    v22[1] = 3221225472;
    v22[2] = sub_F5878;
    v22[3] = &unk_2415D0;
    v24 = a1;
    v23 = v21;
    v25 = a4;
    v20 = v19;
    TUI::Evaluation::Context::evaluateEnumerator((_QWORD *)a1, v17, v20, v22);

  }
  *(_QWORD *)(a1 + 168) = v11;
  *(_QWORD *)(a1 + 176) = v12;

}

void sub_F584C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, id a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_F5878(uint64_t a1, uint64_t a2, uint64_t a3)
{
  const TUI::Evaluation::Context *v4;
  uint64_t v5;

  v4 = *(const TUI::Evaluation::Context **)(a1 + 40);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)a2 + 24))(a2, a3);
  objc_storeStrong((id *)(v5 + 32), *(id *)(a1 + 32));
  TUI::Evaluation::Context::instantiateChildren(v4, *(_QWORD *)(a1 + 48), 0);
}

NSMutableArray *TUI::Evaluation::Context::instantiateAnimationReference(_QWORD *a1, unint64_t a2)
{
  _QWORD *v4;
  NSMutableArray *v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  id v15;
  void *v16;
  TUIAnimationBuilder *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unsigned __int16 *v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  TUIAnimationBuilder *v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  char *v43;
  uint64_t j;
  void *v45;
  _OWORD *v46;
  __int128 v47;
  id v48;
  NSObject *v49;
  id v50;
  void *v51;
  id v52;
  void *v53;
  void *v54;
  char *v55;
  uint64_t i;
  void *v57;
  _OWORD *v58;
  __int128 v59;
  uint64_t *v60;
  id v61;
  unint64_t v62;
  unint64_t v63;
  unint64_t v64;
  void *v65;
  unint64_t v66;
  uint64_t v67;
  _OWORD *v68;
  _QWORD *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  NSMutableArray *v74;
  TUIAnimationBuilder *v75;
  unint64_t v76;
  _QWORD *v77;
  uint64_t v78;
  unsigned int v79;
  uint8_t buf[4];
  id v81;

  if (!TUIReferenceListNotNil(a2))
  {
    v5 = 0;
    return v5;
  }
  v72 = a1[22];
  v73 = a1[21];
  v4 = (_QWORD *)a1[72];
  v74 = objc_opt_new(NSMutableArray);
  if (HIDWORD(a2))
  {
    v7 = 0;
    v78 = a2;
    v77 = a1 + 62;
    v70 = (uint64_t)(a1 + 31);
    v68 = a1 + 49;
    v69 = a1 + 53;
    if (HIDWORD(a2) <= 1)
      v8 = 1;
    else
      v8 = HIDWORD(a2);
    v71 = v8;
    while (1)
    {
      if (v4[19] <= (unint64_t)(v7 + v78))
        goto LABEL_60;
      v9 = v4[18] + 12 * (v7 + v78);
      if (!v9)
        goto LABEL_60;
      v10 = *(unsigned __int16 *)(v9 + 2);
      v11 = *(unsigned int *)(v9 + 8);
      v12 = *(unsigned __int16 *)(v9 + 6);
      v13 = *(unsigned __int16 *)(v9 + 4);
      v79 = v10 | (v13 << 16);
      if (v13 == 0xFFFF || v10 == 0xFFFF)
        goto LABEL_60;
      if (!sub_28810(v77, (unsigned __int16 *)&v79))
        break;
      v76 = v76 & 0xFFFFFFFF00000000 | v79;
      v15 = TUI::Symbol::Tab::string((TUI::Symbol::Tab *)a1[70], v76);
      v16 = (void *)objc_claimAutoreleasedReturnValue(v15);
      TUI::Evaluation::Context::reportError((uint64_t)a1, 1002, v16);

LABEL_60:
      if (++v7 == v8)
        goto LABEL_3;
    }
    v17 = objc_alloc_init(TUIAnimationBuilder);
    a1[21] = v17;
    a1[22] = *(_QWORD *)(a1[3] + 8);
    v75 = v17;
    sub_FCDA8((uint64_t)v77, (unsigned __int16 *)&v79, &v79);
    v18 = (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)*a1 + 32))(*a1, v79);
    v20 = v18;
    v21 = v19;
    if (v19 == -1)
    {
      v23 = TUIAnimationDefinitionNil;
      v24 = unk_2C95C4;
    }
    else
    {
      v22 = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v18 + 56))(v18, v19);
      v23 = v22;
      v24 = HIDWORD(v22);
    }
    if (v4[27] <= v24 || (v25 = v4[26], (v26 = (unsigned __int16 *)(v25 + 28 * v24)) == 0))
    {
      v48 = TUIInstantiationLog();
      v49 = objc_claimAutoreleasedReturnValue(v48);
      if (os_log_type_enabled(v49, OS_LOG_TYPE_ERROR))
      {
        v61 = objc_msgSend((id)a1[2], "feedId");
        *(_DWORD *)buf = 134217984;
        v81 = v61;
        _os_log_error_impl(&dword_0, v49, OS_LOG_TYPE_ERROR, "[fid:%lu] invalid animation defintion node", buf, 0xCu);
      }

      goto LABEL_59;
    }
    v66 = v24;
    v67 = v25 + 28 * v24;
    v27 = a1[3];
    v28 = *v26;
    v29 = *(_QWORD *)(v27 + 72);
    v30 = 0xAAAAAAAAAAAAAAABLL * ((*(_QWORD *)(v27 + 80) - v29) >> 4);
    v31 = v29 + 48 * v28;
    v32 = v27 + 24;
    if (v30 > v28)
      v32 = v31;
    v65 = *(void **)v32;
    v33 = *(unsigned __int8 *)(v32 + 44);
    v34 = *(unsigned int *)(v32 + 40);
    v35 = v23;
    if (!TUIDefinitionNotNil(v23))
    {
      v64 = v64 & 0xFFFFFFFF00000000 | v79;
      v50 = TUI::Symbol::Tab::string((TUI::Symbol::Tab *)a1[70], v64);
      v51 = (void *)objc_claimAutoreleasedReturnValue(v50);
      TUI::Evaluation::Context::reportError((uint64_t)a1, 1006, v51);
LABEL_58:

      v60 = (uint64_t *)sub_28810(v77, (unsigned __int16 *)&v79);
      sub_35264(v77, v60);
LABEL_59:

      v8 = v71;
      goto LABEL_60;
    }
    v63 = v34 | (v33 << 32);
    if (v4[23] <= v35
      || (v36 = v4[22] + 12 * v35) == 0
      || (v37 = *(unsigned int *)(v36 + 8), (_DWORD)v37 == -1))
    {
      v39 = v75;
      if ((_DWORD)v11 != -1)
      {
        v62 = v62 & 0xFFFFFFFF00000000 | v79;
        v52 = TUI::Symbol::Tab::string((TUI::Symbol::Tab *)a1[70], v62);
        v53 = (void *)objc_claimAutoreleasedReturnValue(v52);
        TUI::Evaluation::Context::reportError((uint64_t)a1, 1018, v53);

        v39 = v75;
LABEL_55:
        v51 = (void *)objc_claimAutoreleasedReturnValue(-[TUIAnimationBuilder finalizeAnimationWithContext:](v39, "finalizeAnimationWithContext:", a1[2], v62));
        if (v51)
          -[NSMutableArray addObject:](v74, "addObject:", v51);
        a1[21] = 0;
        goto LABEL_58;
      }
      (*(void (**)(_QWORD, uint64_t))(*(_QWORD *)*a1 + 72))(*a1, 3);
      (*(void (**)(_QWORD, uint64_t, uint64_t))(*(_QWORD *)*a1 + 136))(*a1, v20, v21);
      if ((v63 & 8) != 0)
      {
        v40 = *(unsigned int *)(v67 + 16);
        v41 = *(unsigned __int16 *)(v67 + 2);
        sub_F2994(v70, (v63 >> 5) & 1);
        if (v41)
        {
          if ((v63 & 0x200) != 0)
          {
            v54 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v65, "attributesToIgnoreWhenResolvingInvocation"));
            v55 = (char *)objc_msgSend(v54, "_bitset");
            for (i = 0; i != 4; ++i)
              v69[i] |= *(_QWORD *)&v55[i * 8];

            v39 = v75;
          }
          if ((v63 & 0x80) != 0)
          {
            v57 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v65, "attributesToEvaluateForInvocation"));
            v58 = objc_msgSend(v57, "_bitset");
            v59 = v58[1];
            *v68 = *v58;
            *(_OWORD *)(a1 + 51) = v59;

            v39 = v75;
          }
          goto LABEL_52;
        }
LABEL_53:
        *((_DWORD *)a1 + 61) = v66;
      }
    }
    else
    {
      v38 = *(unsigned __int16 *)(v36 + 6);
      v39 = v75;
      (*(void (**)(_QWORD, uint64_t))(*(_QWORD *)*a1 + 72))(*a1, 3);
      TUI::Evaluation::Context::evaluateParams((uint64_t)a1, v11 | (v12 << 32));
      (*(void (**)(_QWORD, uint64_t, uint64_t))(*(_QWORD *)*a1 + 136))(*a1, v20, v21);
      TUI::Evaluation::Context::evaluateParams((TUI::Evaluation::Context *)a1, v37 | (v38 << 32));
      if ((v63 & 8) != 0)
      {
        v40 = *(unsigned int *)(v67 + 16);
        v41 = *(unsigned __int16 *)(v67 + 2);
        sub_F2994(v70, (v63 >> 5) & 1);
        if (v41)
        {
          if ((v63 & 0x200) != 0)
          {
            v42 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v65, "attributesToIgnoreWhenResolvingInvocation"));
            v43 = (char *)objc_msgSend(v42, "_bitset");
            for (j = 0; j != 4; ++j)
              v69[j] |= *(_QWORD *)&v43[j * 8];

            v39 = v75;
          }
          if ((v63 & 0x80) != 0)
          {
            v45 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v65, "attributesToEvaluateForInvocation"));
            v46 = objc_msgSend(v45, "_bitset");
            v47 = v46[1];
            *v68 = *v46;
            *(_OWORD *)(a1 + 51) = v47;

            v39 = v75;
          }
LABEL_52:
          TUI::Evaluation::Context::computeAttributes((uint64_t)a1, v40 | (v41 << 32), 0, v70);
          goto LABEL_53;
        }
        goto LABEL_53;
      }
    }
    -[TUIAnimationBuilder configureWithNode:attributes:](v39, "configureWithNode:attributes:", v66, a1[2]);
    *((_DWORD *)a1 + 61) = TUIElementNodeNil;
    sub_EF264(v70);
    TUI::Evaluation::Context::instantiateChildren((const TUI::Evaluation::Context *)a1, *(unsigned int *)(v67 + 20) | ((unint64_t)*(unsigned __int16 *)(v67 + 4) << 32), 0);
    (*(void (**)(_QWORD))(*(_QWORD *)*a1 + 168))(*a1);
    (*(void (**)(_QWORD))(*(_QWORD *)*a1 + 80))(*a1);
    goto LABEL_55;
  }
LABEL_3:
  v5 = v74;
  -[NSMutableArray sortUsingComparator:](v74, "sortUsingComparator:", &stru_241610);
  a1[21] = v73;
  a1[22] = v72;
  return v5;
}

void sub_F5F20(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void *a23,void *a24)
{
  void *v24;

  _Unwind_Resume(a1);
}

int64_t sub_F5FE8(id a1, TUIAnimation *a2, TUIAnimation *a3)
{
  TUIAnimation *v4;
  double v5;
  double v6;
  double v7;
  int64_t v8;

  v4 = a3;
  -[TUIAnimation delay](a2, "delay");
  v6 = v5;
  -[TUIAnimation delay](v4, "delay");
  if (v6 >= v7)
    v8 = v6 > v7;
  else
    v8 = -1;

  return v8;
}

void sub_F6044(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void TUI::Evaluation::Context::instantiateElementReferenceWithChildrenOfNode(uint64_t a1, int a2, unsigned int a3)
{
  uint64_t v4;
  uint64_t v6;
  _QWORD v8[7];
  int v9;

  v4 = *(_QWORD *)(a1 + 576);
  if (*(_QWORD *)(v4 + 216) > (unint64_t)a3
    && (v6 = *(_QWORD *)(v4 + 208) + 28 * a3) != 0
    && TUIElementReferenceNotNil(a2))
  {
    v8[0] = _NSConcreteStackBlock;
    v8[1] = 3221225472;
    v8[2] = sub_F612C;
    v8[3] = &unk_241630;
    v9 = a2;
    v8[4] = a1;
    v8[5] = v6;
    v8[6] = v4;
    TUI::Evaluation::Context::evaluateWithNodeIdentifier(a1, a3, v8);
  }
  else
  {
    TUI::Evaluation::Context::reportError(a1, 1011, 0);
  }
}

void sub_F612C(uint64_t a1)
{
  const TUI::Evaluation::Context *v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  unsigned int v13;
  uint64_t v14;
  uint64_t v15;
  TUI::Instruction::Decoder *v16;
  unsigned int v17;
  char *v18;
  _DWORD *v19;
  char *v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char *v25;
  char *v26;
  int v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;
  int v37;
  int *v38;
  unint64_t v39;
  _DWORD *v40;
  int *v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  unint64_t v45;
  char *v46;
  int *v47;
  char *v48;
  int v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unsigned int *v53;
  unsigned int *v54;
  unint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  int *v60;
  int *v61;
  TUI::Instruction::Decoder *v62;
  const TUI::Evaluation::Context *v63;
  uint64_t v64;
  std::__shared_weak_count *v65;
  unint64_t *v66;
  unint64_t v67;
  unint64_t *v68;
  unint64_t v69;
  void (*v70)(void);
  unsigned int *v71;
  unsigned int *v72;
  unint64_t v73;
  _QWORD *v74;
  uint64_t v75;
  unint64_t v76;
  uint64_t v77;
  int *v78;
  int *v79;
  TUI::Instruction::Decoder *v80;
  const TUI::Evaluation::Context *v81;
  uint64_t v82;
  std::__shared_weak_count *v83;
  unint64_t *v84;
  unint64_t v85;
  unint64_t *p_shared_owners;
  unint64_t v87;
  id v88;
  void *v89;
  std::__shared_weak_count *v90;
  unint64_t *v91;
  unint64_t v92;
  unint64_t v93;
  uint64_t v94;
  uint64_t v95;
  unint64_t v96;
  unint64_t v97;
  unint64_t v98;
  int v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  int v103;
  __int128 v104;
  int v105;
  __int128 v106;
  id v107;
  id v108;
  char *v109;
  __int128 v110;
  int v111;
  __int128 v112;

  v2 = *(const TUI::Evaluation::Context **)(a1 + 32);
  v3 = *((_QWORD *)v2 + 72);
  v4 = *(unsigned int *)(a1 + 56);
  if (*(_QWORD *)(v3 + 152) > v4 && (v5 = *(_QWORD *)(v3 + 144) + 12 * v4) != 0)
  {
    v101 = *(unsigned __int16 *)(v5 + 2);
    v98 = *(unsigned int *)(v5 + 8);
    v99 = *(unsigned __int16 *)(v5 + 4) << 16;
    v97 = (unint64_t)*(unsigned __int16 *)(v5 + 6) << 32;
  }
  else
  {
    v97 = 0;
    v98 = 0xFFFFFFFFLL;
    v99 = -65536;
    v101 = 0;
  }
  v111 = 0;
  v112 = 0uLL;
  v6 = *(_QWORD *)v2;
  v7 = TUI::Evaluation::Context::closureForElement((uint64_t)v2, *(_QWORD *)(a1 + 40));
  (*(void (**)(char **__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 112))(&v109, v6, v7);
  v111 = (int)v109;
  v112 = v110;
  v8 = *(_QWORD *)(a1 + 40);
  v9 = *(_DWORD *)(v8 + 20);
  v10 = *(unsigned __int16 *)(v8 + 4);
  v109 = 0;
  v110 = 0uLL;
  if (v10)
  {
    v11 = 0;
    v12 = v9;
    do
    {
      v13 = v11 + v12;
      v14 = *(_QWORD *)(a1 + 48);
      if (*(_QWORD *)(v14 + 216) > (unint64_t)(v11 + v12))
      {
        v15 = *(_QWORD *)(v14 + 208) + 28 * v13;
        if (v15)
        {
          v16 = (TUI::Instruction::Decoder *)*(unsigned int *)(v15 + 8);
          if (TUIConditionIsNil(*(_DWORD *)(v15 + 8))
            || (TUI::Evaluation::Context::resolve((uint64_t)v2, v16, (uint64_t)&v107),
                v17 = TUI::Evaluation::ResolvedValue::BOOLValue((TUI::Evaluation::ResolvedValue *)&v107, v2), v108, v17))
          {
            v18 = (char *)v110;
            if ((unint64_t)v110 >= *((_QWORD *)&v110 + 1))
            {
              v20 = v109;
              v21 = (uint64_t)(v110 - (_QWORD)v109) >> 2;
              v22 = v21 + 1;
              if ((unint64_t)(v21 + 1) >> 62)
                sub_6F9C();
              v23 = *((_QWORD *)&v110 + 1) - (_QWORD)v109;
              if ((uint64_t)(*((_QWORD *)&v110 + 1) - (_QWORD)v109) >> 1 > v22)
                v22 = v23 >> 1;
              if ((unint64_t)v23 >= 0x7FFFFFFFFFFFFFFCLL)
                v24 = 0x3FFFFFFFFFFFFFFFLL;
              else
                v24 = v22;
              if (v24)
              {
                v25 = (char *)sub_FC474((uint64_t)&v110 + 8, v24);
                v20 = v109;
                v18 = (char *)v110;
              }
              else
              {
                v25 = 0;
              }
              v26 = &v25[4 * v21];
              *(_DWORD *)v26 = v13;
              v19 = v26 + 4;
              while (v18 != v20)
              {
                v27 = *((_DWORD *)v18 - 1);
                v18 -= 4;
                *((_DWORD *)v26 - 1) = v27;
                v26 -= 4;
              }
              v109 = v26;
              *(_QWORD *)&v110 = v19;
              *((_QWORD *)&v110 + 1) = &v25[4 * v24];
              if (v20)
                operator delete(v20);
            }
            else
            {
              *(_DWORD *)v110 = v13;
              v19 = v18 + 4;
            }
            *(_QWORD *)&v110 = v19;
          }
        }
      }
      ++v11;
    }
    while (v11 != v10);
  }
  objc_msgSend(*((id *)v2 + 67), "recordEvent:", 15);
  v28 = v101 | v99 & 0xFFFF0000;
  v29 = (*(uint64_t (**)(_QWORD, unint64_t))(**(_QWORD **)v2 + 40))(*(_QWORD *)v2, v28);
  v31 = v29;
  v32 = v30;
  if (v30 == -1)
  {
    LODWORD(v33) = TUIElementDefinitionNil;
    LODWORD(v34) = unk_2C95CC;
  }
  else
  {
    v33 = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v29 + 64))(v29, v30);
    v34 = HIDWORD(v33);
  }
  v35 = *(_QWORD *)(a1 + 48);
  if (*(_QWORD *)(v35 + 216) > (unint64_t)v34)
  {
    v102 = *(_QWORD *)(v35 + 208) + 28 * v34;
    if (v102)
    {
      v36 = v33;
      if (TUIDefinitionNotNil(v33))
      {
        if (*((_BYTE *)v2 + 552))
        {
          v37 = *(_DWORD *)(v102 + 24);
          if (TUILocationNotNil(v37))
          {
            v38 = (int *)*((_QWORD *)v2 + 83);
            v39 = *((_QWORD *)v2 + 84);
            if ((unint64_t)v38 >= v39)
            {
              v41 = (int *)*((_QWORD *)v2 + 82);
              v42 = v38 - v41;
              if ((unint64_t)(v42 + 1) >> 62)
                sub_6F9C();
              v43 = v39 - (_QWORD)v41;
              v44 = (uint64_t)(v39 - (_QWORD)v41) >> 1;
              if (v44 <= v42 + 1)
                v44 = v42 + 1;
              if (v43 >= 0x7FFFFFFFFFFFFFFCLL)
                v45 = 0x3FFFFFFFFFFFFFFFLL;
              else
                v45 = v44;
              if (v45)
              {
                v46 = (char *)sub_FC474((uint64_t)v2 + 672, v45);
                v38 = (int *)*((_QWORD *)v2 + 83);
                v41 = (int *)*((_QWORD *)v2 + 82);
              }
              else
              {
                v46 = 0;
              }
              v47 = (int *)&v46[4 * v42];
              v48 = &v46[4 * v45];
              *v47 = v37;
              v40 = v47 + 1;
              while (v38 != v41)
              {
                v49 = *--v38;
                *--v47 = v49;
              }
              *((_QWORD *)v2 + 82) = v47;
              *((_QWORD *)v2 + 83) = v40;
              *((_QWORD *)v2 + 84) = v48;
              if (v41)
                operator delete(v41);
            }
            else
            {
              *v38 = v37;
              v40 = v38 + 1;
            }
            *((_QWORD *)v2 + 83) = v40;
          }
        }
        v50 = *(unsigned int *)(v102 + 20);
        v100 = *(unsigned __int16 *)(v102 + 4);
        v51 = *((_QWORD *)v2 + 72);
        if (*(_QWORD *)(v51 + 184) <= v36
          || (v52 = *(_QWORD *)(v51 + 176) + 12 * v36) == 0
          || *(_DWORD *)(v52 + 8) == -1)
        {
          if (v98 != 0xFFFFFFFF)
          {
            v88 = TUI::Symbol::Tab::string(*((TUI::Symbol::Tab **)v2 + 70), v28);
            v89 = (void *)objc_claimAutoreleasedReturnValue(v88);
            TUI::Evaluation::Context::reportError((uint64_t)v2, 1018, v89);

LABEL_103:
            if (*((_BYTE *)v2 + 552) && TUILocationNotNil(*(_DWORD *)(v102 + 24)))
              *((_QWORD *)v2 + 83) -= 4;
            goto LABEL_106;
          }
          v70 = *(void (**)(void))(**(_QWORD **)v2 + 72);
          if ((_DWORD)v10)
          {
            v70();
            v72 = (unsigned int *)v109;
            v71 = (unsigned int *)v110;
            if (v109 != (char *)v110)
            {
              do
              {
                v73 = *v72;
                v74 = *(_QWORD **)(a1 + 48);
                if (v74[27] > v73)
                {
                  v75 = v74[26] + 28 * v73;
                  if (v75)
                  {
                    if (TUI::Package::Buffer::findAttribute(v74, 0x95u, *(unsigned int *)(v75 + 16) | ((unint64_t)*(unsigned __int16 *)(v75 + 2) << 32)) == 65685)
                    {
                      v77 = *(_QWORD *)(a1 + 48);
                      if (*(_QWORD *)(v77 + 232) > v76 && (v78 = (int *)(*(_QWORD *)(v77 + 224) + 12 * v76)) != 0)
                      {
                        v79 = v78 + 1;
                      }
                      else
                      {
                        v79 = &TUIConditionNil;
                        v78 = &TUIValueNil;
                      }
                      v80 = (TUI::Instruction::Decoder *)*v78;
                      if (!TUIConditionNotNil(*v79))
                      {
                        v82 = TUI::Instruction::Decoder::elementName(v80, (uint64_t)v2, v81);
                        v98 = v98 & 0xFFFFFFFF00000000 | v82;
                        if (TUINameIsValid(v98))
                        {
                          v103 = v111;
                          v83 = (std::__shared_weak_count *)*((_QWORD *)&v112 + 1);
                          v104 = v112;
                          if (*((_QWORD *)&v112 + 1))
                          {
                            v84 = (unint64_t *)(*((_QWORD *)&v112 + 1) + 8);
                            do
                              v85 = __ldxr(v84);
                            while (__stxr(v85 + 1, v84));
                          }
                          v107 = 0;
                          LODWORD(v108) = v73;
                          v97 = v97 & 0xFFFFFFFF00000000 | v82;
                          TUI::Evaluation::Context::pushNamedElement(v2, v82, &v103, (uint64_t)&v107);

                          if (v83)
                          {
                            p_shared_owners = (unint64_t *)&v83->__shared_owners_;
                            do
                              v87 = __ldaxr(p_shared_owners);
                            while (__stlxr(v87 - 1, p_shared_owners));
                            if (!v87)
                            {
                              ((void (*)(std::__shared_weak_count *))v83->__on_zero_shared)(v83);
                              std::__shared_weak_count::__release_weak(v83);
                            }
                          }
                        }
                      }
                    }
                  }
                }
                ++v72;
              }
              while (v72 != v71);
            }
          }
          else
          {
            v70();
          }
          (*(void (**)(_QWORD, uint64_t, uint64_t))(**(_QWORD **)v2 + 144))(*(_QWORD *)v2, v31, v32);
        }
        else
        {
          v94 = *(unsigned int *)(v52 + 8);
          v95 = *(unsigned __int16 *)(v52 + 6);
          (*(void (**)(_QWORD, uint64_t))(**(_QWORD **)v2 + 72))(*(_QWORD *)v2, 63);
          v96 = v50;
          v53 = (unsigned int *)v109;
          v54 = (unsigned int *)v110;
          if (v109 != (char *)v110)
          {
            do
            {
              v55 = *v53;
              v56 = *(_QWORD **)(a1 + 48);
              if (v56[27] > v55)
              {
                v57 = v56[26] + 28 * v55;
                if (v57)
                {
                  if (TUI::Package::Buffer::findAttribute(v56, 0x95u, *(unsigned int *)(v57 + 16) | ((unint64_t)*(unsigned __int16 *)(v57 + 2) << 32)) == 65685)
                  {
                    v59 = *(_QWORD *)(a1 + 48);
                    if (*(_QWORD *)(v59 + 232) > v58 && (v60 = (int *)(*(_QWORD *)(v59 + 224) + 12 * v58)) != 0)
                    {
                      v61 = v60 + 1;
                    }
                    else
                    {
                      v61 = &TUIConditionNil;
                      v60 = &TUIValueNil;
                    }
                    v62 = (TUI::Instruction::Decoder *)*v60;
                    if (!TUIConditionNotNil(*v61))
                    {
                      v64 = TUI::Instruction::Decoder::elementName(v62, (uint64_t)v2, v63);
                      v50 = v50 & 0xFFFFFFFF00000000 | v64;
                      if (TUINameIsValid(v50))
                      {
                        v105 = v111;
                        v65 = (std::__shared_weak_count *)*((_QWORD *)&v112 + 1);
                        v106 = v112;
                        if (*((_QWORD *)&v112 + 1))
                        {
                          v66 = (unint64_t *)(*((_QWORD *)&v112 + 1) + 8);
                          do
                            v67 = __ldxr(v66);
                          while (__stxr(v67 + 1, v66));
                        }
                        v107 = 0;
                        LODWORD(v108) = v55;
                        v93 = v93 & 0xFFFFFFFF00000000 | v64;
                        TUI::Evaluation::Context::pushNamedElement(v2, v64, &v105, (uint64_t)&v107);

                        if (v65)
                        {
                          v68 = (unint64_t *)&v65->__shared_owners_;
                          do
                            v69 = __ldaxr(v68);
                          while (__stlxr(v69 - 1, v68));
                          if (!v69)
                          {
                            ((void (*)(std::__shared_weak_count *))v65->__on_zero_shared)(v65);
                            std::__shared_weak_count::__release_weak(v65);
                          }
                        }
                      }
                    }
                  }
                }
              }
              ++v53;
            }
            while (v53 != v54);
          }
          TUI::Evaluation::Context::evaluateParams((uint64_t)v2, v98 | v97);
          v50 = v96;
          (*(void (**)(_QWORD, uint64_t, uint64_t))(**(_QWORD **)v2 + 144))(*(_QWORD *)v2, v31, v32);
          TUI::Evaluation::Context::evaluateParams(v2, v94 | (v95 << 32));
        }
        TUI::Evaluation::Context::instantiateChildren(v2, v50 | (v100 << 32), 0);
        (*(void (**)(_QWORD))(**(_QWORD **)v2 + 168))(*(_QWORD *)v2);
        (*(void (**)(_QWORD))(**(_QWORD **)v2 + 80))(*(_QWORD *)v2);
        goto LABEL_103;
      }
    }
  }
LABEL_106:
  if (v109)
  {
    *(_QWORD *)&v110 = v109;
    operator delete(v109);
  }
  v90 = (std::__shared_weak_count *)*((_QWORD *)&v112 + 1);
  if (*((_QWORD *)&v112 + 1))
  {
    v91 = (unint64_t *)(*((_QWORD *)&v112 + 1) + 8);
    do
      v92 = __ldaxr(v91);
    while (__stlxr(v92 - 1, v91));
    if (!v92)
    {
      ((void (*)(std::__shared_weak_count *))v90->__on_zero_shared)(v90);
      std::__shared_weak_count::__release_weak(v90);
    }
  }
}

void sub_F6964(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,void *a25)
{
  uint64_t v25;
  void *v27;

  sub_148E8(a10);
  v27 = *(void **)(v25 - 136);
  if (v27)
  {
    *(_QWORD *)(v25 - 128) = v27;
    operator delete(v27);
  }
  sub_148E8(v25 - 104);
  _Unwind_Resume(a1);
}

void TUI::Evaluation::Context::instantiateNamedElementReference(_QWORD *a1, unsigned int a2)
{
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;

  v3 = a2;
  if (!TUIElementReferenceNotNil(a2))
    goto LABEL_11;
  v4 = a1[72];
  if (*(_QWORD *)(v4 + 152) > v3 && (v5 = *(_QWORD *)(v4 + 144) + 12 * v3) != 0)
  {
    v6 = *(unsigned __int16 *)(v5 + 2);
    v7 = *(unsigned int *)(v5 + 8);
    v8 = *(unsigned __int16 *)(v5 + 6);
    v9 = (unint64_t)*(unsigned __int16 *)(v5 + 4) << 16;
    v10 = v8 << 32;
  }
  else
  {
    v6 = 0;
    v10 = 0;
    v7 = 0xFFFFFFFFLL;
    v9 = 4294901760;
  }
  v11 = v6 | v9;
  objc_msgSend((id)a1[67], "recordEvent:", 15);
  v12 = (*(uint64_t (**)(_QWORD, unint64_t))(*(_QWORD *)*a1 + 48))(*a1, v11);
  if (v13 == -1)
  {
LABEL_11:
    v17 = (uint64_t)a1;
    v18 = 1011;
LABEL_12:
    TUI::Evaluation::Context::reportError(v17, v18, 0);
    return;
  }
  v14 = v12;
  v15 = v13;
  v16 = *(_DWORD *)((*(uint64_t (**)(uint64_t))(*(_QWORD *)v12 + 72))(v12) + 8);
  if (!TUIElementNodeNotNil(v16))
  {
    v17 = (uint64_t)a1;
    v18 = 1000;
    goto LABEL_12;
  }
  (*(void (**)(_QWORD, uint64_t))(*(_QWORD *)*a1 + 72))(*a1, 63);
  if (v7 != 0xFFFFFFFFLL)
    TUI::Evaluation::Context::evaluateParams((uint64_t)a1, v7 | v10);
  (*(void (**)(_QWORD, uint64_t, uint64_t))(*(_QWORD *)*a1 + 152))(*a1, v14, v15);
  TUI::Evaluation::Context::instantiateChildNode(a1, v16);
  (*(void (**)(_QWORD))(*(_QWORD *)*a1 + 168))(*a1);
  (*(void (**)(_QWORD))(*(_QWORD *)*a1 + 80))(*a1);
}

NSMutableString *TUI::Evaluation::Context::debugDescribeAttributes(uint64_t a1, uint64_t a2)
{
  NSMutableString *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  unsigned __int16 *v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  void *v14;
  uint64_t v15;
  unsigned int *v16;
  unsigned int *v17;
  uint64_t v19;

  v4 = objc_opt_new(NSMutableString);
  v5 = WORD2(a2);
  if (WORD2(a2))
  {
    v6 = 0;
    v7 = *(_QWORD **)(a1 + 576);
    v19 = a2;
    do
    {
      if (v7[31] > (unint64_t)(v6 + v19) && (v8 = (unsigned __int16 *)(v7[30] + 8 * (v6 + v19))) != 0)
      {
        v9 = *v8;
        v10 = v7[60];
        if (v9 >= (v7[61] - v10) >> 1)
          v11 = 0xFFFFLL;
        else
          v11 = *(unsigned __int16 *)(v10 + 2 * v9);
        v12 = v8[1];
        v13 = *((unsigned int *)v8 + 1);
      }
      else
      {
        v12 = 0;
        v11 = 0xFFFFLL;
        v13 = 0xFFFFFFFFLL;
      }
      v14 = (void *)objc_claimAutoreleasedReturnValue(+[TUIAttributeRegistry nameForAttribute:](TUIAttributeRegistry, "nameForAttribute:", v11));
      -[NSMutableString appendFormat:](v4, "appendFormat:", CFSTR("[%@] values=%lu (offset=%lu)\n"), v14, v12, v13);

      if (v12)
      {
        v15 = 12 * v13;
        do
        {
          if (v7[29] <= v13)
          {
            v17 = (unsigned int *)&TUIConditionNil;
            v16 = (unsigned int *)&TUIValueNil;
          }
          else
          {
            v16 = (unsigned int *)(v15 + v7[28]);
            v17 = v16 + 1;
            if (!v16)
            {
              v17 = (unsigned int *)&TUIConditionNil;
              v16 = (unsigned int *)&TUIValueNil;
            }
          }
          -[NSMutableString appendFormat:](v4, "appendFormat:", CFSTR("  v=%08x c=%08x\n"), *v16, *v17);
          v15 += 12;
          ++v13;
          --v12;
        }
        while (v12);
      }
      ++v6;
    }
    while (v6 != v5);
  }
  return v4;
}

void sub_F6D00(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void TUI::Evaluation::Context::computeStyle(TUI::Symbol::Tab **a1, unint64_t a2, uint64_t a3)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  TUI::Symbol::Tab *v14;
  _QWORD *v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  _QWORD *v24;
  unint64_t v25;
  id v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  id v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  TUI::Symbol::Tab *v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  id v47;
  void *v48;
  id v49;
  void *v50;
  objc_class *v51;
  NSString *v52;
  void *v53;
  void *v54;
  id v55;
  void *v56;
  uint64_t *v57;
  uint64_t v58;
  uint64_t *v59;
  uint64_t v60;
  uint64_t v61;
  BOOL v62;
  BOOL v63;
  unint64_t v64;
  unint64_t v65;
  unint64_t v66;
  unint64_t v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  _QWORD *v71;
  _BYTE v72[24];
  unsigned int v73;

  v6 = (_QWORD *)(a3 + 144);
  v7 = -192;
  v8 = 144;
  do
  {
    v9 = *(_QWORD *)(a3 + v8);
    v8 += 8;
    if (v9)
      v10 = 1;
    else
      v10 = v7 == 0;
    v7 += 64;
  }
  while (!v10);
  if (v9)
  {
    if (TUIReferenceListNotNil(a2))
    {
      v11 = HIDWORD(a2);
      if (HIDWORD(a2))
      {
        v12 = 0;
        v13 = a2;
        v14 = a1[72];
        v15 = a1 + 57;
        if (v11 <= 1)
          v16 = 1;
        else
          v16 = v11;
        v68 = v13;
        v70 = v16;
        v71 = v6;
        do
        {
          if (*((_QWORD *)v14 + 19) <= (unint64_t)(v12 + v13))
          {
            v18 = 0;
            v22 = 0;
            v17 = 0;
          }
          else
          {
            v17 = *((_QWORD *)v14 + 18) + 12 * (v12 + v13);
            if (v17)
            {
              v18 = *(unsigned __int16 *)(v17 + 2);
              v19 = *(unsigned int *)(v17 + 8);
              v20 = (unint64_t)*(unsigned __int16 *)(v17 + 4) << 16;
              v21 = *(unsigned __int16 *)(v17 + 6);
              v17 = (unint64_t)*(unsigned __int16 *)v17 << 32;
              v22 = v21 << 32;
              goto LABEL_20;
            }
            v18 = 0;
            v22 = 0;
          }
          v20 = 4294901760;
          v19 = 0xFFFFFFFFLL;
LABEL_20:
          v23 = v18 | v20;
          v73 = v18 | v20;
          if ((~(_DWORD)v20 & 0xFFFF0000) == 0)
            goto LABEL_56;
          v24 = v15;
          v25 = HIDWORD(v17);
          if (v18 == 0xFFFF || HIDWORD(v17))
          {
            if (v18 == 0xFFFF || (HIDWORD(v17) - 1) > 1)
            {
              v15 = v24;
              v6 = v71;
              goto LABEL_56;
            }
            -[TUI::Symbol::Tab recordEvent:](a1[67], "recordEvent:", 15);
            v28 = (*(uint64_t (**)(TUI::Symbol::Tab *, unint64_t))(*(_QWORD *)*a1 + 48))(*a1, v23);
            if (v29 != -1)
            {
              v30 = v28;
              v31 = v29;
              v32 = objc_opt_class(_TUIStyleReferenceElement, v29);
              v33 = *(id *)(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v30 + 72))(v30, v31);
              v34 = TUIDynamicCast(v32, v33);
              v35 = (void *)objc_claimAutoreleasedReturnValue(v34);

              if (v35)
              {
                (*(void (**)(TUI::Symbol::Tab *, uint64_t))(*(_QWORD *)*a1 + 72))(*a1, 7);
                (*(void (**)(TUI::Symbol::Tab *, uint64_t, uint64_t))(*(_QWORD *)*a1 + 152))(*a1, v30, v31);
                TUI::Evaluation::Context::computeStyle(a1, objc_msgSend(v35, "styleReference"), a3);
                (*(void (**)(TUI::Symbol::Tab *))(*(_QWORD *)*a1 + 168))(*a1);
                (*(void (**)(TUI::Symbol::Tab *))(*(_QWORD *)*a1 + 80))(*a1);
              }
              else
              {
                v66 = v66 & 0xFFFFFFFF00000000 | v73;
                v49 = TUI::Symbol::Tab::string(a1[70], v66);
                v50 = (void *)objc_claimAutoreleasedReturnValue(v49);
                v51 = (objc_class *)*(id *)(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v30 + 72))(v30, v31);
                v52 = NSStringFromClass(v51);
                v53 = (void *)objc_claimAutoreleasedReturnValue(v52);
                v54 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("%@: %@"), v50, v53));
                TUI::Evaluation::Context::reportError((uint64_t)a1, 1000, v54);

              }
              v13 = v68;
LABEL_51:
              v15 = v24;
              goto LABEL_52;
            }
            if ((_DWORD)v25 == 2)
              goto LABEL_51;
            v65 = v65 & 0xFFFFFFFF00000000 | v73;
            v41 = TUI::Symbol::Tab::string(a1[70], v65);
            v27 = (void *)objc_claimAutoreleasedReturnValue(v41);
            TUI::Evaluation::Context::reportError((uint64_t)a1, 1011, v27);
            v15 = v24;
          }
          else
          {
            v15 = v24;
            if (!sub_28810(v24, (unsigned __int16 *)&v73))
            {
              sub_FCDA8((uint64_t)v24, (unsigned __int16 *)&v73, &v73);
              v36 = v73;
              -[TUI::Symbol::Tab recordEvent:](a1[67], "recordEvent:", 16);
              v37 = (*(uint64_t (**)(TUI::Symbol::Tab *, uint64_t))(*(_QWORD *)*a1 + 24))(*a1, v36);
              v39 = v37;
              v40 = v38;
              memset(v72, 0, sizeof(v72));
              if (v38 == -1)
              {
                *(_OWORD *)v72 = TUIStyleDefinitionNil;
                *(_QWORD *)&v72[16] = qword_2C95B8;
              }
              else
              {
                (*(void (**)(_BYTE *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v37 + 48))(v72, v37, v38);
              }
              if (TUIDefinitionNotNil(*(int *)v72))
              {
                v42 = a1[72];
                if (*((_QWORD *)v42 + 23) > (unint64_t)*(unsigned int *)v72)
                {
                  v43 = *((_QWORD *)v42 + 22) + 12 * *(unsigned int *)v72;
                  if (v43)
                  {
                    v44 = *(unsigned int *)(v43 + 8);
                    if ((_DWORD)v44 != -1)
                    {
                      v45 = v19 | v22;
                      v46 = v44 | ((unint64_t)*(unsigned __int16 *)(v43 + 6) << 32);
                      (*(void (**)(TUI::Symbol::Tab *, uint64_t))(*(_QWORD *)*a1 + 72))(*a1, 7);
                      TUI::Evaluation::Context::evaluateParams((uint64_t)a1, v45);
                      (*(void (**)(TUI::Symbol::Tab *, uint64_t, uint64_t))(*(_QWORD *)*a1 + 128))(*a1, v39, v40);
                      TUI::Evaluation::Context::evaluateParams((TUI::Evaluation::Context *)a1, v46);
                      goto LABEL_45;
                    }
                  }
                }
                if (v19 == 0xFFFFFFFFLL)
                {
                  (*(void (**)(TUI::Symbol::Tab *, uint64_t))(*(_QWORD *)*a1 + 72))(*a1, 63);
                  (*(void (**)(TUI::Symbol::Tab *, uint64_t, uint64_t))(*(_QWORD *)*a1 + 128))(*a1, v39, v40);
LABEL_45:
                  TUI::Evaluation::Context::computeAttributes(a1, *(_QWORD *)&v72[4], 1, a3);
                  if (TUIReferenceListNotNil(*(int *)&v72[12]))
                    TUI::Evaluation::Context::computeStyle(a1, *(_QWORD *)&v72[12], a3);
                  (*(void (**)(TUI::Symbol::Tab *))(*(_QWORD *)*a1 + 168))(*a1);
                  (*(void (**)(TUI::Symbol::Tab *))(*(_QWORD *)*a1 + 80))(*a1);
LABEL_48:
                  v13 = v68;
                  v15 = v24;
                }
                else
                {
                  v64 = v64 & 0xFFFFFFFF00000000 | v73;
                  v55 = TUI::Symbol::Tab::string(a1[70], v64);
                  v56 = (void *)objc_claimAutoreleasedReturnValue(v55);
                  TUI::Evaluation::Context::reportError((uint64_t)a1, 1018, v56);
                  v13 = v68;
                  v15 = v24;

                }
                v6 = v71;
                v57 = (uint64_t *)sub_28810(v15, (unsigned __int16 *)&v73);
                sub_35264(v15, v57);
                goto LABEL_55;
              }
              v67 = v67 & 0xFFFFFFFF00000000 | v73;
              v47 = TUI::Symbol::Tab::string(a1[70], v67);
              v48 = (void *)objc_claimAutoreleasedReturnValue(v47);
              TUI::Evaluation::Context::reportError((uint64_t)a1, 1009, v48);

              goto LABEL_48;
            }
            v69 = v69 & 0xFFFFFFFF00000000 | v73;
            v26 = TUI::Symbol::Tab::string(a1[70], v69);
            v27 = (void *)objc_claimAutoreleasedReturnValue(v26);
            TUI::Evaluation::Context::reportError((uint64_t)a1, 1002, v27);
          }

LABEL_52:
          v6 = v71;
LABEL_55:
          v16 = v70;
LABEL_56:
          v58 = -192;
          v59 = v6;
          do
          {
            v61 = *v59++;
            v60 = v61;
            if (v61)
              v62 = 1;
            else
              v62 = v58 == 0;
            v58 += 64;
          }
          while (!v62);
          ++v12;
          if (v60)
            v63 = v12 == v16;
          else
            v63 = 1;
        }
        while (!v63);
      }
    }
  }
}

void sub_F7308(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

TUIGuides *sub_F736C(TUI::Evaluation::Context *a1)
{
  id *v2;
  uint64_t v3;
  id *v4;
  id *v5;
  id *v6;
  id v7;
  id v8;
  id v9;
  id v10;
  void *v11;
  TUIGuides *v12;
  unsigned __int16 v14;
  unsigned __int16 v15;
  unsigned __int16 v16;
  unsigned __int16 v17;

  v14 = 121;
  if ((*((_BYTE *)a1 + 295) & 2) != 0)
    v2 = (id *)(sub_1529C((_QWORD *)a1 + 44, &v14) + 3);
  else
    v2 = 0;
  v15 = 207;
  v3 = *((_QWORD *)a1 + 38);
  if ((v3 & 0x8000) != 0)
  {
    v4 = (id *)(sub_1529C((_QWORD *)a1 + 44, &v15) + 3);
    v3 = *((_QWORD *)a1 + 38);
  }
  else
  {
    v4 = 0;
  }
  v16 = 205;
  if ((v3 & 0x2000) != 0)
    v5 = (id *)(sub_1529C((_QWORD *)a1 + 44, &v16) + 3);
  else
    v5 = 0;
  v17 = 43;
  if ((*((_BYTE *)a1 + 285) & 8) != 0)
  {
    v6 = (id *)(sub_1529C((_QWORD *)a1 + 44, &v17) + 3);
    if (!v2)
      goto LABEL_15;
    goto LABEL_14;
  }
  v6 = 0;
  if (v2)
  {
LABEL_14:
    v7 = TUI::Evaluation::ResolvedValue::guideValue(v2, a1);
    v2 = (id *)objc_claimAutoreleasedReturnValue(v7);
  }
LABEL_15:
  if (v4)
  {
    v8 = TUI::Evaluation::ResolvedValue::guideValue(v4, a1);
    v4 = (id *)objc_claimAutoreleasedReturnValue(v8);
  }
  if (v5)
  {
    v9 = TUI::Evaluation::ResolvedValue::guideValue(v5, a1);
    v5 = (id *)objc_claimAutoreleasedReturnValue(v9);
  }
  if (v6)
  {
    v10 = TUI::Evaluation::ResolvedValue::guideValue(v6, a1);
    v11 = (void *)objc_claimAutoreleasedReturnValue(v10);
    if (v2)
      goto LABEL_27;
  }
  else
  {
    v11 = 0;
    if (v2)
    {
LABEL_27:
      v12 = -[TUIGuides initWithLeading:trailing:top:bottom:]([TUIGuides alloc], "initWithLeading:trailing:top:bottom:", v2, v4, v5, v11);
      goto LABEL_28;
    }
  }
  if (v4 || v5 || v11)
    goto LABEL_27;
  v12 = 0;
LABEL_28:

  return v12;
}

void sub_F7500(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_F7534(uint64_t a1, uint64_t a2, uint64_t a3)
{
  TUI::Instruction::Evaluation **v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  void *v12;
  const TUI::Evaluation::Enumerator::State *v13;
  char v14;
  id v15[5];
  char v16;

  v6 = *(TUI::Instruction::Evaluation ***)(a1 + 56);
  v7 = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)a2 + 24))(a2, a3);
  v8 = *(_QWORD *)(a1 + 64);
  v9 = *(_QWORD *)(a1 + 72);
  v10 = *(void **)(a1 + 32);
  *(_QWORD *)(v7 + 16) = v8;
  objc_storeStrong((id *)(v7 + 32), v10);
  *(_BYTE *)(v7 + 8) = (v8 == 0) | (2 * (v8 + 1 == v9)) | *(_BYTE *)(v7 + 8) & 0xFC;
  if (TUIValueNotNil(*(_DWORD *)(a1 + 80)))
  {
    TUI::Instruction::Evaluation::evaluate((double *)v15, v6[1], (TUI::Instruction::Decoder *)*(unsigned int *)(a1 + 80));
    v11 = TUI::Evaluation::ResolvedValue::stringValue((TUI::Evaluation::ResolvedValue *)v15, (const TUI::Evaluation::Context *)v6);
    v12 = (void *)objc_claimAutoreleasedReturnValue(v11);

    TUI::Evaluation::Context::evaluateWithUnmappedIdentifier((uint64_t)v6, v12, *(void **)(a1 + 40));
  }
  else
  {
    TUI::Evaluation::Context::evaluateWithIdentifier((uint64_t)v6, *(_QWORD *)(a1 + 64), *(void **)(a1 + 40));
  }
  v13 = (const TUI::Evaluation::Enumerator::State *)(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)a2 + 16))(a2, a3);
  TUI::Evaluation::Enumerator::State::State((TUI::Evaluation::Enumerator::State *)v15, v13);
  v14 = v16;
  if ((v16 & 1) == 0)
  {
    if ((v16 & 2) == 0)
      goto LABEL_6;
LABEL_10:
    *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24) |= 2uLL;
    if ((v16 & 4) == 0)
      goto LABEL_8;
    goto LABEL_7;
  }
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24) |= 1uLL;
  v14 = v16;
  if ((v16 & 2) != 0)
    goto LABEL_10;
LABEL_6:
  if ((v14 & 4) != 0)
LABEL_7:
    *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24) |= 4uLL;
LABEL_8:
  TUI::Evaluation::Enumerator::State::~State(v15);
}

void sub_F76B8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

TUIMutableDynamicValue *TUI::Evaluation::Context::viewStateForNode(uint64_t a1, uint64_t a2, unsigned int a3)
{
  uint64_t v4;
  void *v5;
  TUIMutableDynamicValue *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  void *v10;
  id v11;
  void *v12;
  TUIMutableDynamicValue *v13;
  void *v14;
  void *v15;
  void *v16;
  NSMutableDictionary *v17;
  void *v18;
  _TUIViewStateMapping *v19;
  uint64_t v20;
  std::__shared_weak_count *v21;

  v4 = a3;
  if (!TUINameIsValid(a3))
    return (TUIMutableDynamicValue *)0;
  v5 = *(void **)(*(_QWORD *)a1 + 16);
  if (v5)
  {
    objc_msgSend(v5, "model");
    v6 = (TUIMutableDynamicValue *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(v20 + 88), "viewStateForBinding:", v4));
    if (v21)
    {
      p_shared_owners = (unint64_t *)&v21->__shared_owners_;
      do
        v8 = __ldaxr(p_shared_owners);
      while (__stlxr(v8 - 1, p_shared_owners));
      if (!v8)
      {
        ((void (*)())v21->__on_zero_shared)();
        std::__shared_weak_count::__release_weak(v21);
      }
    }
  }
  else
  {
    v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 224), "viewStateForBinding:", v4));
    if (v10)
    {
      v6 = v10;
    }
    else
    {
      v11 = *(id *)(a1 + 216);
      if (v11)
      {
        v12 = v11;
        while (1)
        {
          v13 = (TUIMutableDynamicValue *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "viewStateForBinding:", v4));
          if (v13)
            break;
          v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "parent"));

          v12 = v14;
          if (!v14)
            goto LABEL_17;
        }
        v14 = v12;
      }
      else
      {
        v14 = 0;
LABEL_17:
        v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 600), "identifierWithNode:baseIdentifier:", *(unsigned int *)(a1 + 240), *(_QWORD *)(a1 + 232)));
        if (v15)
        {
          v16 = *(void **)(a1 + 160);
          if (!v16)
          {
            v17 = objc_opt_new(NSMutableDictionary);
            v18 = *(void **)(a1 + 160);
            *(_QWORD *)(a1 + 160) = v17;

            v16 = *(void **)(a1 + 160);
          }
          v19 = (_TUIViewStateMapping *)objc_claimAutoreleasedReturnValue(objc_msgSend(v16, "objectForKeyedSubscript:", v15));
          if (!v19)
          {
            v19 = -[_TUIViewStateMapping initWithParent:]([_TUIViewStateMapping alloc], "initWithParent:", *(_QWORD *)(a1 + 216));
            objc_msgSend(*(id *)(a1 + 160), "setObject:forKeyedSubscript:");
          }
          *(_QWORD *)(a1 + 224) = v19;
          v13 = (TUIMutableDynamicValue *)objc_claimAutoreleasedReturnValue(-[_TUIViewStateMapping viewStateForBinding:](v19, "viewStateForBinding:", v4));
          if (!v13)
          {
            v13 = -[TUIDynamicValue initWithValue:]([TUIMutableDynamicValue alloc], "initWithValue:", 0);
            -[_TUIViewStateMapping setViewState:forBinding:](v19, "setViewState:forBinding:", v13, v4);
          }

        }
        else
        {
          v13 = 0;
        }

      }
      v6 = v13;

    }
  }
  return v6;
}

void sub_F790C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

id TUI::Evaluation::Context::fontSpecForNode(uint64_t a1)
{
  id *v2;
  uint64_t **v3;
  id v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  uint64_t v11;
  void *v12;
  unsigned __int16 v14;
  unsigned __int16 v15;

  v14 = 89;
  if ((*(_BYTE *)(a1 + 291) & 2) != 0)
    v2 = (id *)(sub_1529C((_QWORD *)(a1 + 352), &v14) + 3);
  else
    v2 = 0;
  v15 = 51;
  if ((*(_BYTE *)(a1 + 286) & 8) != 0)
  {
    v3 = sub_1529C((_QWORD *)(a1 + 352), &v15);
    v4 = TUI::Evaluation::ResolvedValue::colorValue((id *)v3 + 3, (const TUI::Evaluation::Context *)a1);
    v5 = (void *)objc_claimAutoreleasedReturnValue(v4);
    if (v5)
    {
      if (!v2)
        goto LABEL_10;
LABEL_9:
      v6 = TUI::Evaluation::ResolvedValue::fontSpecValue(v2, (const TUI::Evaluation::Context *)a1);
      v7 = (void *)objc_claimAutoreleasedReturnValue(v6);
      v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "mappedSpecIfNeededWithEnvironment:", *(_QWORD *)(a1 + 584)));

      if (v8)
        goto LABEL_13;
      goto LABEL_10;
    }
  }
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 200), "color"));
  if (v2)
    goto LABEL_9;
LABEL_10:
  v9 = *(void **)(a1 + 200);
  if (!v9 || (v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "fontSpec"))) == 0)
  {
    v10 = (void *)objc_claimAutoreleasedReturnValue(+[TUIFontSpec defaultFontSpec](TUIFontSpec, "defaultFontSpec"));
    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "mappedSpecIfNeededWithEnvironment:", *(_QWORD *)(a1 + 584)));

  }
LABEL_13:
  if (v5)
  {
    v11 = objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "fontSpecWithColor:", v5));

    v8 = (void *)v11;
  }
  v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "textStyle"));

  if (v12)
    *(_QWORD *)(a1 + 592) |= 0x20uLL;

  return v8;
}

void sub_F7AC0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

id TUI::Evaluation::Context::pointerForNode(uint64_t a1)
{
  void *v1;
  _QWORD *v3;
  uint64_t **v4;
  id v5;
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t **v9;
  id v10;
  id v11;
  void *v12;
  unsigned __int16 v14;
  unsigned __int16 v15;

  v14 = 152;
  if ((*(_BYTE *)(a1 + 299) & 1) == 0)
  {
    v1 = 0;
LABEL_6:
    v8 = 0;
    goto LABEL_9;
  }
  v3 = (_QWORD *)(a1 + 352);
  v4 = sub_1529C((_QWORD *)(a1 + 352), &v14);
  v5 = TUI::Evaluation::ResolvedValue::stringValue((TUI::Evaluation::ResolvedValue *)(v4 + 3), (const TUI::Evaluation::Context *)a1);
  v1 = (void *)objc_claimAutoreleasedReturnValue(v5);
  if (!v1)
    goto LABEL_6;
  v6 = objc_opt_class(TUIPointerStyle);
  v15 = 153;
  if ((*(_BYTE *)(a1 + 299) & 2) != 0)
  {
    v9 = sub_1529C(v3, &v15);
    v10 = TUI::Evaluation::ResolvedValue::objectValue((TUI::Evaluation::ResolvedValue *)(v9 + 3), (const TUI::Evaluation::Context *)a1);
    v7 = (void *)objc_claimAutoreleasedReturnValue(v10);
  }
  else
  {
    v7 = 0;
  }
  v11 = TUIDynamicCast(v6, v7);
  v12 = (void *)objc_claimAutoreleasedReturnValue(v11);

  v8 = (void *)objc_claimAutoreleasedReturnValue(+[TUIPointer pointerWithRefId:style:](TUIPointer, "pointerWithRefId:style:", v1, v12));
LABEL_9:

  return v8;
}

void sub_F7BE0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

uint64_t TUI::Evaluation::Context::closure(uint64_t a1, TUI::Instruction::Decoder *a2)
{
  uint64_t v4;

  v4 = TUIClosureNil;
  if (TUIValueNotNil((int)a2))
  {
    if (TUI::Instruction::Decoder::offsetKind((uint64_t)a2) == 18)
      return TUI::Instruction::Decoder::offsetIndex(a2);
    TUI::Evaluation::Context::reportError(a1, 1000, 0);
  }
  return v4;
}

uint64_t TUI::Evaluation::Context::closureForNode(uint64_t a1, unsigned int a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(a1 + 576);
  if (*(_QWORD *)(v2 + 216) <= (unint64_t)a2)
    v3 = 0;
  else
    v3 = *(_QWORD *)(v2 + 208) + 28 * a2;
  return TUI::Evaluation::Context::closureForElement(a1, v3);
}

uint64_t TUI::Evaluation::Context::captureClosure(_QWORD *a1, unsigned int a2)
{
  return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)*a1 + 112))(*a1, a2);
}

uint64_t TUI::Evaluation::Context::useGlobalsWithName(_QWORD *a1, unsigned int a2)
{
  return (*(uint64_t (**)(_QWORD, _QWORD, _QWORD *))(*(_QWORD *)*a1 + 176))(*a1, a2, a1);
}

uint64_t TUI::Evaluation::Context::evaluateGlobals(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t result;

  v3 = *(_BYTE *)(a1 + 40);
  v4 = *(_QWORD *)(a1 + 592);
  *(_BYTE *)(a1 + 40) = 1;
  TUI::Evaluation::Context::instantiateChildren((const TUI::Evaluation::Context *)a1, a2, 0);
  *(_BYTE *)(a1 + 40) = v3;
  result = *(_QWORD *)(a1 + 592);
  *(_QWORD *)(a1 + 592) = v4;
  return result;
}

void TUI::Evaluation::Context::setEnvironment(id *this, TUIEnvironment *a2)
{
  TUIEnvironment *v4;

  objc_storeStrong(this + 73, a2);
  v4 = a2;
  (*(void (**)(void))(*(_QWORD *)*this + 184))();

}

void sub_F7D74(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

uint64_t TUI::Evaluation::Context::reset(TUI::Evaluation::Context *this)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)this + 200))(*(_QWORD *)this);
}

void TUI::Evaluation::Context::instantiateComponentWithChildrenOfNode(const TUI::Evaluation::Context *a1, unsigned int a2, unsigned int a3)
{
  unint64_t v3;
  unint64_t v4;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  unsigned int v13;
  unint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unsigned __int16 *v19;
  id v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  unsigned int v25;
  uint64_t v26;
  uint64_t v27;
  TUI::Instruction::Decoder *v28;
  char *v29;
  char *v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  char *v35;
  char *v36;
  int v37;
  uint64_t v38;
  unsigned int v39;
  id v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  unsigned int *v46;
  unsigned int *v47;
  unint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  int *v53;
  int *v54;
  TUI::Instruction::Decoder *v55;
  const TUI::Evaluation::Context *v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  std::__shared_weak_count *v60;
  unint64_t *v61;
  unint64_t v62;
  unint64_t *p_shared_owners;
  unint64_t v64;
  uint64_t v65;
  unint64_t v66;
  std::__shared_weak_count *v67;
  unint64_t *v68;
  unint64_t v69;
  uint64_t v70;
  unsigned int v71;
  uint64_t v72;
  void *v73;
  id v74;
  void *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  unsigned __int16 *v81;
  uint64_t v82;
  unint64_t v83;
  unint64_t v84;
  id v85;
  void *v86;
  std::__shared_weak_count *v87;
  unint64_t *v88;
  unint64_t v89;
  unsigned __int16 *v90;
  void *v91;
  void **v92;
  std::__shared_weak_count *v93;
  unint64_t *v94;
  unint64_t v95;
  _BOOL4 v96;
  unint64_t *v97;
  unint64_t v98;
  uint64_t *v99;
  unint64_t v100;
  std::__shared_weak_count *v101;
  char *v102;
  unint64_t *v103;
  unint64_t v104;
  std::__shared_weak_count *v105;
  unsigned __int8 v106;
  int v107;
  unint64_t *v108;
  unint64_t v109;
  _BOOL4 v110;
  BOOL v111;
  int v112;
  int v113;
  uint64_t v114;
  uint64_t v115;
  unint64_t v116;
  uint64_t v117;
  int v118;
  int v119;
  uint64_t v120;
  _QWORD *v121;
  uint64_t v122;
  uint64_t v123;
  unint64_t v124;
  uint64_t v125;
  int v126;
  int v127;
  uint64_t v128;
  unint64_t v129;
  uint64_t v130;
  int v131;
  int v132;
  uint64_t v133;
  unint64_t v134;
  TUIComponent *v135;
  uint64_t v136;
  int v137;
  int v138;
  int v139;
  uint64_t v140;
  _QWORD *v141;
  uint64_t v142;
  _QWORD *v143;
  uint64_t v144;
  _QWORD *v145;
  void *v146;
  std::__shared_weak_count *v147;
  unint64_t *v148;
  unint64_t v149;
  std::__shared_weak_count *v150;
  unint64_t *v151;
  unint64_t v152;
  int v153;
  void *v154;
  id v155;
  _BOOL4 v156;
  unsigned __int16 *v157;
  uint64_t v158;
  TUIComponent *v159;
  unint64_t v160;
  id v161;
  unint64_t v162;
  TUI::Model::Component *v163;
  std::__shared_weak_count *v164;
  char v165;
  char *v166[3];
  __int128 v167;
  uint64_t v168;
  std::__shared_weak_count *v169;
  int v170;
  __int128 v171;
  int v172;
  __int128 v173;
  char *v174;
  char *v175;
  char *v176;
  char **v177;
  __int128 v178;
  __int128 v179;
  __int128 v180;
  __int128 v181;
  __int128 v182;
  uint64_t v183;
  unsigned __int16 v184[10];

  v7 = a2;
  if (TUINameReferenceIsNil(a2))
  {
    v8 = (uint64_t)a1;
    v9 = 1013;
LABEL_40:
    TUI::Evaluation::Context::reportError(v8, v9, 0);
    return;
  }
  v10 = *((_QWORD *)a1 + 72);
  if (*(_QWORD *)(v10 + 152) <= v7 || (v11 = *(_QWORD *)(v10 + 144) + 12 * v7) == 0)
  {
    v13 = -65536;
    v14 = 0xFFFFFFFFLL;
    goto LABEL_9;
  }
  v12 = *(unsigned __int16 *)(v11 + 4);
  v13 = *(unsigned __int16 *)(v11 + 2) | ((unsigned __int16)v12 << 16);
  v14 = *(unsigned int *)(v11 + 8) | ((unint64_t)*(unsigned __int16 *)(v11 + 6) << 32);
  if (v12 == 0xFFFF)
  {
LABEL_9:
    v15 = TUINameNil;
    goto LABEL_10;
  }
  v15 = TUINameNil;
  if (*(_WORD *)(v11 + 2) != 0xFFFF)
    v15 = *(unsigned __int16 *)(v11 + 2) | ((unsigned __int16)v12 << 16);
LABEL_10:
  v16 = TUI::Package::Buffer::componentWithName(v10, v15);
  if (v16)
  {
    v17 = *((_QWORD *)a1 + 72);
    if (*(_QWORD *)(v17 + 216) <= (unint64_t)a3 || (v18 = *(_QWORD *)(v17 + 208) + 28 * a3) == 0)
    {
      v8 = (uint64_t)a1;
      v9 = 1011;
      goto LABEL_40;
    }
    v19 = (unsigned __int16 *)v16;
    v20 = TUI::Evaluation::Context::identifierWithNode((uint64_t)a1, a3);
    v154 = (void *)objc_claimAutoreleasedReturnValue(v20);
    v21 = *(_DWORD *)(v18 + 20);
    v22 = *(unsigned __int16 *)(v18 + 4);
    v174 = 0;
    v175 = 0;
    v176 = 0;
    v157 = v19;
    if (v22)
    {
      v160 = v14;
      v23 = 0;
      v24 = v21;
      v4 = 0x3FFFFFFFFFFFFFFFLL;
      do
      {
        v25 = v23 + v24;
        v26 = *((_QWORD *)a1 + 72);
        if (*(_QWORD *)(v26 + 216) > (unint64_t)(v23 + v24))
        {
          v27 = *(_QWORD *)(v26 + 208) + 28 * v25;
          if (v27)
          {
            v28 = (TUI::Instruction::Decoder *)*(unsigned int *)(v27 + 8);
            if (TUIConditionIsNil(*(_DWORD *)(v27 + 8))
              || (TUI::Evaluation::Context::resolve((uint64_t)a1, v28, (uint64_t)&v177),
                  v3 = (unint64_t)TUI::Evaluation::ResolvedValue::BOOLValue((TUI::Evaluation::ResolvedValue *)&v177, a1), (id)v178, (_DWORD)v3))
            {
              v29 = v175;
              if (v175 >= v176)
              {
                v30 = v174;
                v31 = (v175 - v174) >> 2;
                v32 = v31 + 1;
                if ((unint64_t)(v31 + 1) >> 62)
                  sub_6F9C();
                v33 = v176 - v174;
                if ((v176 - v174) >> 1 > v32)
                  v32 = v33 >> 1;
                if ((unint64_t)v33 >= 0x7FFFFFFFFFFFFFFCLL)
                  v34 = 0x3FFFFFFFFFFFFFFFLL;
                else
                  v34 = v32;
                if (v34)
                {
                  v35 = (char *)sub_FC474((uint64_t)&v176, v34);
                  v30 = v174;
                  v29 = v175;
                }
                else
                {
                  v35 = 0;
                }
                v36 = &v35[4 * v31];
                *(_DWORD *)v36 = v25;
                v3 = (unint64_t)(v36 + 4);
                while (v29 != v30)
                {
                  v37 = *((_DWORD *)v29 - 1);
                  v29 -= 4;
                  *((_DWORD *)v36 - 1) = v37;
                  v36 -= 4;
                }
                v174 = v36;
                v175 = (char *)v3;
                v176 = &v35[4 * v34];
                if (v30)
                  operator delete(v30);
              }
              else
              {
                *(_DWORD *)v175 = v25;
                v3 = (unint64_t)(v29 + 4);
              }
              v175 = (char *)v3;
            }
          }
        }
        ++v23;
      }
      while (v23 != v22);
      v172 = 0;
      v173 = 0uLL;
      v19 = v157;
      if (v174 != v175)
      {
        v38 = *(_QWORD *)a1;
        v39 = TUI::Evaluation::Context::closureForElement((uint64_t)a1, v18);
        (*(void (**)(char ***__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v38 + 112))(&v177, v38, v39);
        v172 = (int)v177;
        v173 = v178;
      }
    }
    else
    {
      v172 = 0;
      v173 = 0uLL;
    }
    v41 = *((_QWORD *)a1 + 72);
    v42 = *((unsigned int *)v19 + 2);
    if (*(_QWORD *)(v41 + 184) > v42 && (v43 = *(_QWORD *)(v41 + 176) + 12 * v42) != 0)
    {
      v44 = *(unsigned int *)(v43 + 8);
      v45 = (unint64_t)*(unsigned __int16 *)(v43 + 6) << 32;
    }
    else
    {
      v45 = 0;
      v44 = 0xFFFFFFFFLL;
    }
    (*(void (**)(_QWORD, uint64_t))(**(_QWORD **)a1 + 72))(*(_QWORD *)a1, 63);
    v47 = (unsigned int *)v174;
    v46 = (unsigned int *)v175;
    if (v174 != v175)
    {
      v4 = 28;
      v158 = v44;
      do
      {
        v48 = *v47;
        v49 = (_QWORD *)*((_QWORD *)a1 + 72);
        if (v49[27] > v48)
        {
          v50 = v49[26] + 28 * v48;
          if (v50)
          {
            if (TUI::Package::Buffer::findAttribute(v49, 0x95u, *(unsigned int *)(v50 + 16) | ((unint64_t)*(unsigned __int16 *)(v50 + 2) << 32)) == 65685)
            {
              v52 = *((_QWORD *)a1 + 72);
              if (*(_QWORD *)(v52 + 232) > v51 && (v53 = (int *)(*(_QWORD *)(v52 + 224) + 12 * v51)) != 0)
              {
                v54 = v53 + 1;
              }
              else
              {
                v54 = &TUIConditionNil;
                v53 = &TUIValueNil;
              }
              v55 = (TUI::Instruction::Decoder *)*v53;
              if (!TUIConditionNotNil(*v54))
              {
                v57 = TUI::Instruction::Decoder::elementName(v55, (uint64_t)a1, v56);
                v3 = v3 & 0xFFFFFFFF00000000 | v57;
                if (TUINameIsValid(v3))
                {
                  v58 = v45;
                  v59 = v14;
                  v170 = v172;
                  v60 = (std::__shared_weak_count *)*((_QWORD *)&v173 + 1);
                  v171 = v173;
                  if (*((_QWORD *)&v173 + 1))
                  {
                    v61 = (unint64_t *)(*((_QWORD *)&v173 + 1) + 8);
                    do
                      v62 = __ldxr(v61);
                    while (__stxr(v62 + 1, v61));
                  }
                  v177 = 0;
                  LODWORD(v178) = v48;
                  v160 = v160 & 0xFFFFFFFF00000000 | v57;
                  TUI::Evaluation::Context::pushNamedElement(a1, v57, &v170, (uint64_t)&v177);

                  if (v60)
                  {
                    p_shared_owners = (unint64_t *)&v60->__shared_owners_;
                    do
                      v64 = __ldaxr(p_shared_owners);
                    while (__stlxr(v64 - 1, p_shared_owners));
                    if (!v64)
                    {
                      ((void (*)(std::__shared_weak_count *))v60->__on_zero_shared)(v60);
                      std::__shared_weak_count::__release_weak(v60);
                    }
                  }
                  v14 = v59;
                  v45 = v58;
                  v44 = v158;
                }
              }
            }
          }
        }
        ++v47;
      }
      while (v47 != v46);
    }
    TUI::Evaluation::Context::evaluateParams((uint64_t)a1, v14);
    v65 = *(_QWORD *)a1;
    TUI::Evaluation::Variables::Capture::emptyClosed(&v168);
    (*(void (**)(uint64_t, uint64_t *))(*(_QWORD *)v65 + 160))(v65, &v168);
    v66 = v44 | v45;
    v67 = v169;
    if (v169)
    {
      v68 = (unint64_t *)&v169->__shared_owners_;
      do
        v69 = __ldaxr(v68);
      while (__stlxr(v69 - 1, v68));
      if (!v69)
      {
        ((void (*)(std::__shared_weak_count *))v67->__on_zero_shared)(v67);
        std::__shared_weak_count::__release_weak(v67);
      }
    }
    TUI::Evaluation::Context::evaluateParams(a1, v66);
    v70 = *(_QWORD *)a1;
    v71 = TUI::Evaluation::Context::closure((uint64_t)a1, (TUI::Instruction::Decoder *)*((unsigned int *)v157 + 9));
    (*(void (**)(char ***__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v70 + 112))(&v177, v70, v71);
    v167 = v178;
    (*(void (**)(_QWORD))(**(_QWORD **)a1 + 168))(*(_QWORD *)a1);
    (*(void (**)(_QWORD))(**(_QWORD **)a1 + 80))(*(_QWORD *)a1);
    v72 = *((_QWORD *)a1 + 92);
    v73 = (void *)*((_QWORD *)a1 + 91);
    v74 = v154;
    v75 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v73, "objectForKey:", v72, &v173));
    v159 = (TUIComponent *)objc_claimAutoreleasedReturnValue(objc_msgSend(v75, "objectForKey:", v74));

    v155 = v74;
    v153 = *v157;
    v156 = v153 != 0;
    v76 = *((unsigned int *)v157 + 8);
    v77 = v157[3];
    memset(v166, 0, sizeof(v166));
    if (v77)
    {
      v78 = 0;
      v162 = 0;
      v79 = 0;
      do
      {
        v80 = *((_QWORD *)a1 + 72);
        if (*(_QWORD *)(v80 + 344) > (unint64_t)(v78 + v76)
          && (v81 = (unsigned __int16 *)(*(_QWORD *)(v80 + 336) + 4 * (v78 + v76))) != 0)
        {
          v4 = v4 & 0xFFFFFFFF00000000 | *v81 | ((unint64_t)v81[1] << 16);
          (*(void (**)(char ***__return_ptr, _QWORD, unint64_t, const TUI::Evaluation::Context *))(**(_QWORD **)a1 + 192))(&v177, *(_QWORD *)a1, v4, a1);
          if (v177)
          {
            v82 = *((unsigned int *)v177 + 22);
            v83 = (unint64_t)v177[9];
            v84 = (unint64_t)v177[10];
            sub_27580(v166, (__int128 *)&v177);
            v79 += v82;
            v162 |= v83 | v84;
          }
          else
          {
            v14 = v14 & 0xFFFFFFFF00000000 | *v81 | ((unint64_t)v81[1] << 16);
            v85 = TUI::Symbol::Tab::string(*((TUI::Symbol::Tab **)a1 + 70), v14);
            v86 = (void *)objc_claimAutoreleasedReturnValue(v85);
            TUI::Evaluation::Context::reportError((uint64_t)a1, 1012, v86);

          }
          v87 = (std::__shared_weak_count *)v178;
          if ((_QWORD)v178)
          {
            v88 = (unint64_t *)(v178 + 8);
            do
              v89 = __ldaxr(v88);
            while (__stlxr(v89 - 1, v88));
            if (!v89)
            {
              ((void (*)(std::__shared_weak_count *))v87->__on_zero_shared)(v87);
              std::__shared_weak_count::__release_weak(v87);
            }
          }
        }
        else
        {
          TUI::Evaluation::Context::reportError((uint64_t)a1, 1012, 0);
        }
        ++v78;
      }
      while (v78 != v77);
    }
    else
    {
      v79 = 0;
      v162 = 0;
    }
    bzero(&v165, 1uLL);
    if ((*((_BYTE *)a1 + 184) & 1) != 0)
      v165 |= 1u;
    v90 = v157;
    v91 = v155;
    if (v159)
    {
      -[TUIComponent model](v159, "model");
      v92 = (void **)*((_QWORD *)v163 + 1);
      v93 = (std::__shared_weak_count *)*((_QWORD *)v163 + 2);
      v177 = (char **)v92;
      *(_QWORD *)&v178 = v93;
      if (v93)
      {
        v94 = (unint64_t *)&v93->__shared_owners_;
        do
          v95 = __ldxr(v94);
        while (__stxr(v95 + 1, v94));
      }
      v96 = TUI::Evaluation::Variables::Capture::operator==((uint64_t)v92, v167);
      if (v93)
      {
        v97 = (unint64_t *)&v93->__shared_owners_;
        do
          v98 = __ldaxr(v97);
        while (__stlxr(v98 - 1, v97));
        if (!v98)
        {
          ((void (*)(std::__shared_weak_count *))v93->__on_zero_shared)(v93);
          std::__shared_weak_count::__release_weak(v93);
        }
      }
      v90 = v157;
      if (v164)
      {
        v99 = &v164->__shared_owners_;
        do
          v100 = __ldaxr((unint64_t *)v99);
        while (__stlxr(v100 - 1, (unint64_t *)v99));
        if (!v100)
        {
          ((void (*)(std::__shared_weak_count *))v164->__on_zero_shared)(v164);
          std::__shared_weak_count::__release_weak(v164);
        }
      }
      -[TUIComponent model](v159, "model");
      v101 = (std::__shared_weak_count *)v178;
      v102 = v177[10];
      if ((_QWORD)v178)
      {
        v103 = (unint64_t *)(v178 + 8);
        do
          v104 = __ldaxr(v103);
        while (__stlxr(v104 - 1, v103));
        if (!v104)
        {
          ((void (*)(std::__shared_weak_count *))v101->__on_zero_shared)(v101);
          std::__shared_weak_count::__release_weak(v101);
        }
      }
      -[TUIComponent model](v159, "model");
      v105 = (std::__shared_weak_count *)v178;
      v106 = v165 ^ *((_BYTE *)v177 + 96);
      v107 = v106 & 1;
      if ((_QWORD)v178)
      {
        v108 = (unint64_t *)(v178 + 8);
        do
          v109 = __ldaxr(v108);
        while (__stlxr(v109 - 1, v108));
        if (!v109)
        {
          ((void (*)(std::__shared_weak_count *))v105->__on_zero_shared)(v105);
          std::__shared_weak_count::__release_weak(v105);
        }
      }
      v110 = v102 == v79 && v96;
      v111 = v110;
      if (!v110)
        v107 = 1;
      v112 = v153 != 0;
      if (v111)
        v112 = v106 & (v153 != 0);
      v156 = v112;
      v113 = !v111;
      v91 = v155;
    }
    else
    {
      v107 = 1;
      v113 = 1;
    }
    v163 = 0;
    v114 = *((_QWORD *)a1 + 96);
    if (v114)
    {
      v115 = *((_QWORD *)a1 + 72);
      v116 = *((unsigned int *)v90 + 2);
      if (*(_QWORD *)(v115 + 184) > v116 && (v117 = *(_QWORD *)(v115 + 176) + 12 * v116) != 0)
      {
        v118 = *(unsigned __int16 *)(v117 + 2);
        v119 = *(unsigned __int16 *)(v117 + 4) << 16;
      }
      else
      {
        v118 = 0;
        v119 = -65536;
      }
      *(_DWORD *)v184 = v118 | v119;
      v120 = v114 + 8;
      v121 = sub_28810((_QWORD *)(v114 + 8), v184);
      if (!v121)
      {
        v183 = 0;
        v182 = 0u;
        v181 = 0u;
        v180 = 0u;
        v179 = 0u;
        v178 = 0u;
        LODWORD(v177) = *(_DWORD *)v184;
        v121 = sub_FC4A8(v120, (unsigned __int16 *)&v177, (uint64_t)&v177);
      }
      ++v121[7];
    }
    v122 = *((_QWORD *)a1 + 96);
    if (!v159)
    {
      if (v122)
      {
        v128 = *((_QWORD *)a1 + 72);
        v129 = *((unsigned int *)v90 + 2);
        if (*(_QWORD *)(v128 + 184) > v129 && (v130 = *(_QWORD *)(v128 + 176) + 12 * v129) != 0)
        {
          v131 = *(unsigned __int16 *)(v130 + 2);
          v132 = *(unsigned __int16 *)(v130 + 4) << 16;
        }
        else
        {
          v131 = 0;
          v132 = -65536;
        }
        *(_DWORD *)v184 = v131 | v132;
        v140 = v122 + 8;
        v141 = sub_28810((_QWORD *)(v122 + 8), v184);
        if (!v141)
        {
          v183 = 0;
          v182 = 0u;
          v181 = 0u;
          v180 = 0u;
          v179 = 0u;
          v178 = 0u;
          LODWORD(v177) = *(_DWORD *)v184;
          v141 = sub_FC4A8(v140, (unsigned __int16 *)&v177, (uint64_t)&v177);
        }
        ++v141[8];
      }
      operator new();
    }
    if (v113)
    {
      if (v122)
      {
        v123 = *((_QWORD *)a1 + 72);
        v124 = *((unsigned int *)v90 + 2);
        if (*(_QWORD *)(v123 + 184) > v124 && (v125 = *(_QWORD *)(v123 + 176) + 12 * v124) != 0)
        {
          v126 = *(unsigned __int16 *)(v125 + 2);
          v127 = *(unsigned __int16 *)(v125 + 4) << 16;
        }
        else
        {
          v126 = 0;
          v127 = -65536;
        }
        *(_DWORD *)v184 = v126 | v127;
        v142 = v122 + 8;
        v143 = sub_28810((_QWORD *)(v122 + 8), v184);
        if (!v143)
        {
          v183 = 0;
          v182 = 0u;
          v181 = 0u;
          v180 = 0u;
          v179 = 0u;
          v178 = 0u;
          LODWORD(v177) = *(_DWORD *)v184;
          v143 = sub_FC4A8(v142, (unsigned __int16 *)&v177, (uint64_t)&v177);
        }
        ++v143[9];
      }
      operator new();
    }
    if (v122)
    {
      v133 = *((_QWORD *)a1 + 72);
      v134 = *((unsigned int *)v90 + 2);
      v135 = v159;
      if (*(_QWORD *)(v133 + 184) > v134 && (v136 = *(_QWORD *)(v133 + 176) + 12 * v134) != 0)
      {
        v137 = v107;
        v138 = *(unsigned __int16 *)(v136 + 2);
        v139 = *(unsigned __int16 *)(v136 + 4) << 16;
      }
      else
      {
        v137 = v107;
        v138 = 0;
        v139 = -65536;
      }
      *(_DWORD *)v184 = v138 | v139;
      v144 = v122 + 8;
      v145 = sub_28810((_QWORD *)(v122 + 8), v184);
      if (!v145)
      {
        v183 = 0;
        v182 = 0u;
        v181 = 0u;
        v180 = 0u;
        v179 = 0u;
        v178 = 0u;
        LODWORD(v177) = *(_DWORD *)v184;
        v145 = sub_FC4A8(v144, (unsigned __int16 *)&v177, (uint64_t)&v177);
      }
      ++v145[10];
      v107 = v137;
    }
    else
    {
      v135 = v159;
    }
    -[TUIComponent setGlobalsEnvironmentUseMask:](v135, "setGlobalsEnvironmentUseMask:", v162);
    v146 = (void *)*((_QWORD *)a1 + 93);
    if (v162)
      objc_msgSend(v146, "addObject:", v135);
    else
      objc_msgSend(v146, "removeObject:", v135);
    if (v156)
      TUI::Evaluation::Context::evaluateComponentBindings(a1, v135, &v163);
    if (v107)
      TUI::Evaluation::Context::instantiateComponentBody(a1, v135, 0);
    if ((objc_opt_respondsToSelector(*((_QWORD *)a1 + 21), "addModel:") & 1) != 0)
      objc_msgSend(*((id *)a1 + 21), "addModel:", v135);
    v177 = v166;
    sub_2A0E0((void ***)&v177);

    v147 = (std::__shared_weak_count *)*((_QWORD *)&v167 + 1);
    if (*((_QWORD *)&v167 + 1))
    {
      v148 = (unint64_t *)(*((_QWORD *)&v167 + 1) + 8);
      do
        v149 = __ldaxr(v148);
      while (__stlxr(v149 - 1, v148));
      if (!v149)
      {
        ((void (*)(std::__shared_weak_count *))v147->__on_zero_shared)(v147);
        std::__shared_weak_count::__release_weak(v147);
      }
    }
    v150 = (std::__shared_weak_count *)*((_QWORD *)&v173 + 1);
    if (*((_QWORD *)&v173 + 1))
    {
      v151 = (unint64_t *)(*((_QWORD *)&v173 + 1) + 8);
      do
        v152 = __ldaxr(v151);
      while (__stlxr(v152 - 1, v151));
      if (!v152)
      {
        ((void (*)(std::__shared_weak_count *))v150->__on_zero_shared)(v150);
        std::__shared_weak_count::__release_weak(v150);
      }
    }
    if (v174)
    {
      v175 = v174;
      operator delete(v174);
    }

  }
  else
  {
    v40 = TUI::Symbol::Tab::string(*((TUI::Symbol::Tab **)a1 + 70), v13);
    v161 = (id)objc_claimAutoreleasedReturnValue(v40);
    TUI::Evaluation::Context::reportError((uint64_t)a1, 1013, v161);

  }
}

void sub_F8E40(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15, id a16, char a17, uint64_t a18, char a19, uint64_t a20,char a21,uint64_t a22,char a23,uint64_t a24,char a25,uint64_t a26,char a27,uint64_t a28,char a29,uint64_t a30,char a31,uint64_t a32,char *a33,uint64_t a34,uint64_t a35,char a36,uint64_t a37,uint64_t a38,char a39,uint64_t a40,char a41)
{
  uint64_t v41;
  void *v43;

  a33 = &a36;
  sub_2A0E0((void ***)&a33);

  sub_148E8((uint64_t)&a39);
  sub_148E8(a9);
  v43 = *(void **)(v41 - 224);
  if (v43)
  {
    *(_QWORD *)(v41 - 216) = v43;
    operator delete(v43);
  }

  _Unwind_Resume(a1);
}

void TUI::Evaluation::Context::evaluateComponentBindings(TUI::Evaluation::Context *this, TUIComponent *a2, TUI::Model::Component **a3)
{
  TUIComponent *v5;
  TUIComponent *v6;
  uint64_t v7;
  unint64_t *v8;
  unint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  TUIComponent *v13;
  unint64_t v14;
  uint64_t v15;
  int v16;
  int v17;
  unint64_t *v18;
  unint64_t v19;
  _QWORD *v20;
  id v21;
  void *v22;
  uint64_t v23;
  id v24;
  void *v25;
  void *v26;
  std::__shared_weak_count *v27;
  unint64_t *p_shared_owners;
  unint64_t v29;
  _QWORD v30[4];
  id v31;
  TUIComponent *v32;
  TUI::Evaluation::Context *v33;
  uint64_t v34;
  TUI::Model::Component **v35;
  uint64_t v36;
  std::__shared_weak_count *v37;
  uint64_t v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  uint64_t v44;
  int v45[3];

  v5 = a2;
  v6 = v5;
  if (v5)
  {
    -[TUIComponent model](v5, "model");
    v7 = *(_QWORD *)(v38 + 40);
    if ((_QWORD)v39)
    {
      v8 = (unint64_t *)(v39 + 8);
      do
        v9 = __ldaxr(v8);
      while (__stlxr(v9 - 1, v8));
      if (!v9)
      {
        (*(void (**)(_QWORD))(*(_QWORD *)v39 + 16))(v39);
        std::__shared_weak_count::__release_weak((std::__shared_weak_count *)v39);
      }
    }
  }
  else
  {
    v7 = 0x545845545F5FLL;
  }
  if (*(_WORD *)v7)
  {
    v10 = (void *)objc_claimAutoreleasedReturnValue(-[TUIComponent identifier](v6, "identifier"));
    v36 = 0;
    v37 = 0;
    v11 = *((_QWORD *)this + 96);
    if (v11)
    {
      v12 = *((_QWORD *)this + 72);
      v13 = v6;
      -[TUIComponent model](v13, "model");
      v14 = *(unsigned int *)(*(_QWORD *)(v38 + 40) + 8);
      if (*(_QWORD *)(v12 + 184) > v14 && (v15 = *(_QWORD *)(v12 + 176) + 12 * v14) != 0)
      {
        v16 = *(unsigned __int16 *)(v15 + 2);
        v17 = *(unsigned __int16 *)(v15 + 4) << 16;
      }
      else
      {
        v16 = 0;
        v17 = -65536;
      }
      if ((_QWORD)v39)
      {
        v18 = (unint64_t *)(v39 + 8);
        do
          v19 = __ldaxr(v18);
        while (__stlxr(v19 - 1, v18));
        if (!v19)
        {
          (*(void (**)(_QWORD))(*(_QWORD *)v39 + 16))(v39);
          std::__shared_weak_count::__release_weak((std::__shared_weak_count *)v39);
        }
      }

      v45[0] = v16 | v17;
      v20 = sub_28810((_QWORD *)(v11 + 8), (unsigned __int16 *)v45);
      if (!v20)
      {
        v44 = 0;
        v43 = 0u;
        v42 = 0u;
        v41 = 0u;
        v40 = 0u;
        v39 = 0u;
        LODWORD(v38) = v45[0];
        v20 = sub_FC4A8(v11 + 8, (unsigned __int16 *)&v38, (uint64_t)&v38);
      }
      ++v20[3];
    }
    *((_QWORD *)this + 88) = v6;
    v21 = objc_msgSend(objc_alloc((Class)NSHashTable), "initWithOptions:capacity:", 512, 0);
    v22 = (void *)*((_QWORD *)this + 89);
    *((_QWORD *)this + 89) = v21;

    v23 = *(_QWORD *)this;
    v30[0] = _NSConcreteStackBlock;
    v30[1] = 3221225472;
    v30[2] = sub_F9BF4;
    v30[3] = &unk_241680;
    v33 = this;
    v24 = v10;
    v31 = v24;
    v34 = v7;
    v35 = a3;
    v32 = v6;
    (*(void (**)(uint64_t, TUIComponent *, TUI::Evaluation::Context *, _QWORD, _QWORD *))(*(_QWORD *)v23
                                                                                                  + 208))(v23, v32, this, 0, v30);
    v25 = (void *)*((_QWORD *)this + 89);
    *((_OWORD *)this + 44) = 0u;

    v26 = (void *)*((_QWORD *)this + 90);
    *((_QWORD *)this + 90) = 0;

    v27 = v37;
    if (v37)
    {
      p_shared_owners = (unint64_t *)&v37->__shared_owners_;
      do
        v29 = __ldaxr(p_shared_owners);
      while (__stlxr(v29 - 1, p_shared_owners));
      if (!v29)
      {
        ((void (*)(std::__shared_weak_count *))v27->__on_zero_shared)(v27);
        std::__shared_weak_count::__release_weak(v27);
      }
    }

  }
}

void sub_F9300(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  void *v11;
  void *v12;
  void *v13;
  va_list va;

  va_start(va, a11);

  sub_148E8((uint64_t)va);
  _Unwind_Resume(a1);
}

void TUI::Evaluation::Context::instantiateComponentBody(TUI::Evaluation::Context *this, TUIComponent *a2, int a3)
{
  TUIComponent *v5;
  TUIComponent *v6;
  uint64_t v7;
  uint64_t v8;
  TUIComponent *v9;
  unint64_t v10;
  uint64_t v11;
  int v12;
  int v13;
  unint64_t *v14;
  unint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  id v21;
  void *v22;
  id v23;
  uint64_t v24;
  std::__shared_weak_count *v25;
  unint64_t *p_shared_owners;
  unint64_t v27;
  unint64_t v28;
  std::__shared_weak_count *v29;
  unint64_t *v30;
  unint64_t v31;
  void *v32;
  uint64_t v33;
  void *v34;
  TUIBoxBuilder *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  int *v40;
  unint64_t v41;
  _DWORD *v42;
  int *v43;
  unint64_t v44;
  unint64_t v45;
  unint64_t v46;
  char *v47;
  int *v48;
  char *v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  int v57;
  unint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  std::__shared_weak_count *v64;
  unint64_t *v65;
  unint64_t v66;
  uint64_t v67;
  id obj;
  void *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  id v74;
  id v75;
  void *v76;
  void *v77;
  id *v78;
  id *v79;
  id *location;
  __int128 v81;
  _QWORD v82[6];
  uint64_t v83;
  std::__shared_weak_count *v84;
  _QWORD *v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  uint64_t v91;
  int v92[3];

  v5 = a2;
  v6 = v5;
  v7 = *((_QWORD *)this + 96);
  if (v7)
  {
    v8 = *((_QWORD *)this + 72);
    v9 = v5;
    -[TUIComponent model](v9, "model");
    v10 = *(unsigned int *)(v85[5] + 8);
    if (*(_QWORD *)(v8 + 184) > v10 && (v11 = *(_QWORD *)(v8 + 176) + 12 * v10) != 0)
    {
      v12 = *(unsigned __int16 *)(v11 + 2);
      v13 = *(unsigned __int16 *)(v11 + 4) << 16;
    }
    else
    {
      v12 = 0;
      v13 = -65536;
    }
    if ((_QWORD)v86)
    {
      v14 = (unint64_t *)(v86 + 8);
      do
        v15 = __ldaxr(v14);
      while (__stlxr(v15 - 1, v14));
      if (!v15)
      {
        (*(void (**)(_QWORD))(*(_QWORD *)v86 + 16))(v86);
        std::__shared_weak_count::__release_weak((std::__shared_weak_count *)v86);
      }
    }

    LODWORD(v83) = v12 | v13;
    v16 = sub_28810((_QWORD *)(v7 + 8), (unsigned __int16 *)&v83);
    if (!v16)
    {
      v91 = 0;
      v90 = 0u;
      v89 = 0u;
      v88 = 0u;
      v87 = 0u;
      v86 = 0u;
      LODWORD(v85) = v83;
      v16 = sub_FC4A8(v7 + 8, (unsigned __int16 *)&v85, (uint64_t)&v85);
    }
    ++v16[6];
    *(_DWORD *)(v7 + 128 + 24 * *(_QWORD *)(v7 + 3200)) = v12 | v13;
    *(_QWORD *)(v7 + 128 + 24 * *(_QWORD *)(v7 + 3200) + 16) = 0;
    v17 = mach_absolute_time();
    v18 = *(_QWORD *)(v7 + 3200);
    *(_QWORD *)(v7 + 24 * v18 + 136) = v17;
    *(_QWORD *)(v7 + 3200) = v18 + 1;
  }
  v71 = *((_QWORD *)this + 21);
  v72 = *((_QWORD *)this + 26);
  v19 = *((_QWORD *)this + 92);
  location = (id *)((char *)this + 544);
  v69 = (void *)*((_QWORD *)this + 68);
  v70 = *((_QWORD *)this + 22);
  v20 = v69;
  v79 = (id *)((char *)this + 752);
  obj = (id)*((_QWORD *)this + 94);
  v21 = obj;
  v78 = (id *)((char *)this + 760);
  v22 = (void *)*((_QWORD *)this + 95);
  v23 = v22;
  v81 = *((_OWORD *)this + 41);
  *((_OWORD *)this + 41) = 0u;
  v73 = *((_QWORD *)this + 84);
  *((_QWORD *)this + 84) = 0;
  v76 = v21;
  v77 = v20;
  v75 = v23;
  if (a3)
  {
    -[TUIComponent model](v6, "model");
    v24 = v85[13];
    v25 = (std::__shared_weak_count *)v85[14];
    if (v25)
    {
      p_shared_owners = (unint64_t *)&v25->__shared_owners_;
      do
        v27 = __ldxr(p_shared_owners);
      while (__stxr(v27 + 1, p_shared_owners));
      do
        v28 = __ldaxr(p_shared_owners);
      while (__stlxr(v28 - 1, p_shared_owners));
      if (!v28)
      {
        ((void (*)(std::__shared_weak_count *))v25->__on_zero_shared)(v25);
        std::__shared_weak_count::__release_weak(v25);
      }
    }
    v29 = (std::__shared_weak_count *)v86;
    if ((_QWORD)v86)
    {
      v30 = (unint64_t *)(v86 + 8);
      do
        v31 = __ldaxr(v30);
      while (__stlxr(v31 - 1, v30));
      if (!v31)
      {
        ((void (*)(std::__shared_weak_count *))v29->__on_zero_shared)(v29);
        std::__shared_weak_count::__release_weak(v29);
      }
    }
    objc_storeStrong(location, *(id *)(v24 + 8));
    objc_storeStrong(v79, *(id *)(v24 + 16));
    objc_storeStrong(v78, *(id *)(v24 + 24));
    *((_QWORD *)this + 26) = *(_QWORD *)(v24 + 32);
  }
  *((_QWORD *)this + 92) = v6;
  v32 = (void *)*((_QWORD *)this + 76);
  v74 = v32;
  v33 = objc_claimAutoreleasedReturnValue(-[TUIComponent identifier](v6, "identifier"));
  v34 = (void *)*((_QWORD *)this + 76);
  *((_QWORD *)this + 76) = v33;

  v35 = objc_alloc_init(TUIBoxBuilder);
  *((_QWORD *)this + 21) = v35;
  *((_QWORD *)this + 22) = **((_QWORD **)this + 3);
  -[TUIComponent model](v6, "model");
  v36 = v83;
  v37 = *((_QWORD *)this + 74);
  *((_QWORD *)this + 74) = 0;
  v38 = *(_QWORD *)(v36 + 40);
  v39 = *(_DWORD *)(v38 + 12);
  if (*((_BYTE *)this + 552) && TUILocationNotNil(*(_DWORD *)(v38 + 12)))
  {
    v40 = (int *)*((_QWORD *)this + 83);
    v41 = *((_QWORD *)this + 84);
    if ((unint64_t)v40 >= v41)
    {
      v43 = (int *)*((_QWORD *)this + 82);
      v67 = v40 - v43;
      if ((unint64_t)(v67 + 1) >> 62)
        sub_6F9C();
      v44 = v41 - (_QWORD)v43;
      v45 = (uint64_t)(v41 - (_QWORD)v43) >> 1;
      if (v45 <= v67 + 1)
        v45 = v67 + 1;
      if (v44 >= 0x7FFFFFFFFFFFFFFCLL)
        v46 = 0x3FFFFFFFFFFFFFFFLL;
      else
        v46 = v45;
      if (v46)
      {
        v47 = (char *)sub_FC474((uint64_t)this + 672, v46);
        v40 = (int *)*((_QWORD *)this + 83);
        v43 = (int *)*((_QWORD *)this + 82);
      }
      else
      {
        v47 = 0;
      }
      v48 = (int *)&v47[4 * v67];
      v49 = &v47[4 * v46];
      *v48 = v39;
      v42 = v48 + 1;
      while (v40 != v43)
      {
        v50 = *--v40;
        *--v48 = v50;
      }
      *((_QWORD *)this + 82) = v48;
      *((_QWORD *)this + 83) = v42;
      *((_QWORD *)this + 84) = v49;
      if (v43)
        operator delete(v43);
    }
    else
    {
      *v40 = v39;
      v42 = v40 + 1;
    }
    *((_QWORD *)this + 83) = v42;
  }
  v51 = *(_QWORD *)this;
  v82[0] = _NSConcreteStackBlock;
  v82[1] = 3221225472;
  v82[2] = sub_FA0BC;
  v82[3] = &unk_2416A0;
  v82[4] = this;
  v82[5] = v38;
  (*(void (**)(uint64_t, TUIComponent *, TUI::Evaluation::Context *, uint64_t, _QWORD *))(*(_QWORD *)v51 + 208))(v51, v6, this, 1, v82);
  if (*((_BYTE *)this + 552) && TUILocationNotNil(v39))
    *((_QWORD *)this + 83) -= 4;
  v52 = *((_QWORD *)this + 74);
  *((_QWORD *)this + 74) = v37;
  v53 = (void *)*((_QWORD *)this + 82);
  *((_OWORD *)this + 41) = v81;
  *((_QWORD *)this + 84) = v73;
  -[TUIBoxBuilder finalizeModelsWithParent:](v35, "finalizeModelsWithParent:", v6);
  -[TUIComponent setDirectEnvironmentUseMask:](v6, "setDirectEnvironmentUseMask:", v52);
  *((_QWORD *)this + 21) = v71;
  *((_QWORD *)this + 22) = v70;
  objc_storeStrong(location, v69);
  objc_storeStrong(v79, obj);
  objc_storeStrong(v78, v22);
  *((_QWORD *)this + 26) = v72;
  objc_storeStrong((id *)this + 76, v32);
  *((_QWORD *)this + 92) = v19;
  v54 = *((_QWORD *)this + 96);
  if (v54)
  {
    v55 = *(_QWORD *)(v54 + 3200) - 1;
    *(_QWORD *)(v54 + 3200) = v55;
    v56 = v54 + 24 * v55;
    v57 = *(_DWORD *)(v56 + 128);
    v58 = *(_QWORD *)(v56 + 136);
    v59 = mach_absolute_time();
    v92[0] = v57;
    v60 = sub_28810((_QWORD *)(v54 + 8), (unsigned __int16 *)v92);
    if (!v60)
    {
      v91 = 0;
      v90 = 0u;
      v89 = 0u;
      v88 = 0u;
      v87 = 0u;
      v86 = 0u;
      LODWORD(v85) = v92[0];
      v60 = sub_FC4A8(v54 + 8, (unsigned __int16 *)&v85, (uint64_t)&v85);
    }
    v61 = v59 - v58;
    if (v58 >= v59)
      v61 = v58 - v59;
    v62 = v60[11];
    v60[12] += v61;
    v63 = *(_QWORD *)(v54 + 3200);
    v60[11] = v61 - *(_QWORD *)(v54 + 24 * v63 + 144) + v62;
    if (v63)
      *(_QWORD *)(v54 + 24 * v63 + 120) += v61;
  }
  v64 = v84;
  if (v84)
  {
    v65 = (unint64_t *)&v84->__shared_owners_;
    do
      v66 = __ldaxr(v65);
    while (__stlxr(v66 - 1, v65));
    if (!v66)
    {
      ((void (*)(std::__shared_weak_count *))v64->__on_zero_shared)(v64);
      std::__shared_weak_count::__release_weak(v64);
    }
  }

  if (v53)
    operator delete(v53);

}

void sub_F9988(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *a19, void *a20,void *a21,uint64_t a22,uint64_t a23,uint64_t a24,void *a25)
{
  void *v25;

  if (a25)
    operator delete(a25);

  _Unwind_Resume(a1);
}

uint64_t TUI::Evaluation::Context::evaluateComponentLocals(uint64_t a1, uint64_t a2)
{
  int v4;
  _OWORD *v5;
  __int128 v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  int v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  _OWORD v26[2];
  int v27;
  _OWORD v28[2];
  int v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;

  v4 = TUIElementNodeNil;
  v27 = 1065353216;
  memset(v28, 0, sizeof(v28));
  v29 = 1065353216;
  v30 = 0u;
  v31 = 0u;
  v32 = 0u;
  v33 = 0u;
  v5 = (_OWORD *)(a1 + 248);
  v6 = *(_OWORD *)(a1 + 280);
  v22 = *(_OWORD *)(a1 + 248);
  v23 = *(_OWORD *)(a1 + 264);
  *(_OWORD *)(a1 + 248) = 0u;
  memset(v26, 0, sizeof(v26));
  v24 = v6;
  v25 = *(_OWORD *)(a1 + 296);
  *(_OWORD *)(a1 + 280) = 0u;
  *(_OWORD *)(a1 + 296) = 0u;
  v7 = a1 + 312;
  *(_OWORD *)(a1 + 264) = 0u;
  sub_2A7FC((uint64_t)v26, a1 + 312);
  sub_2A7FC((uint64_t)v28, a1 + 352);
  v9 = v30;
  v8 = v31;
  v10 = v5[10];
  v30 = v5[9];
  v31 = v10;
  v5[9] = v9;
  v5[10] = v8;
  v12 = v32;
  v11 = v33;
  v13 = v5[12];
  v32 = v5[11];
  v33 = v13;
  v5[11] = v12;
  v5[12] = v11;
  v21 = *(_DWORD *)(a1 + 244);
  *(_DWORD *)(a1 + 244) = v4;
  TUI::Evaluation::Context::instantiateChildren((const TUI::Evaluation::Context *)a1, *(unsigned int *)(*(_QWORD *)(*(_QWORD *)a2 + 40) + 20) | ((unint64_t)*(unsigned __int16 *)(*(_QWORD *)(*(_QWORD *)a2 + 40) + 2) << 32), 0);
  *v5 = v22;
  v5[1] = v23;
  v5[2] = v24;
  v5[3] = v25;
  sub_2A7FC((uint64_t)v26, v7);
  sub_2A7FC((uint64_t)v28, a1 + 352);
  v15 = v30;
  v14 = v31;
  v16 = v5[10];
  v30 = v5[9];
  v31 = v16;
  v5[9] = v15;
  v5[10] = v14;
  v18 = v32;
  v17 = v33;
  v19 = v5[12];
  v32 = v5[11];
  v33 = v19;
  v5[11] = v18;
  v5[12] = v17;
  *(_DWORD *)(a1 + 244) = v21;
  sub_358DC((uint64_t)v28);
  return sub_14B0C((uint64_t)v26);
}

void sub_F9BD8(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  sub_358DC(v2);
  sub_14B0C(v1);
  _Unwind_Resume(a1);
}

void sub_F9BF4(uint64_t a1)
{
  id *v2;
  void *v3;
  _QWORD *v4;
  id v5;
  unsigned int v6;
  std::__shared_weak_count *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *v16;
  unint64_t v17;
  uint64_t v18;
  std::__shared_weak_count *v19;
  unint64_t *v20;
  unint64_t v21;
  unint64_t v22;
  std::__shared_weak_count *v23;
  unint64_t *v24;
  unint64_t v25;
  uint64_t v26;
  std::__shared_weak_count *v27;
  uint64_t v28;
  uint64_t v29;
  std::__shared_weak_count *v30;
  uint64_t v31;
  std::__shared_weak_count *v32;

  v2 = *(id **)(a1 + 48);
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2[20], "objectForKeyedSubscript:", *(_QWORD *)(a1 + 32)));
  v4 = v2 + 90;
  objc_storeStrong(v2 + 90, v3);
  TUI::Evaluation::Context::instantiateChildren((const TUI::Evaluation::Context *)v2, *(unsigned int *)(*(_QWORD *)(a1 + 56) + 16) | ((unint64_t)**(unsigned __int16 **)(a1 + 56) << 32), 0);
  v5 = *v2;
  v6 = TUI::Evaluation::Context::closure((uint64_t)v2, (TUI::Instruction::Decoder *)*(unsigned int *)(*(_QWORD *)(a1 + 56) + 40));
  (*(void (**)(uint64_t *__return_ptr, id, _QWORD))(*(_QWORD *)v5 + 112))(&v28, v5, v6);
  v8 = v29;
  v7 = v30;
  v31 = v29;
  v32 = v30;
  if (!v3 && *v4)
    objc_msgSend(v2[20], "setObject:forKeyedSubscript:", *v4, *(_QWORD *)(a1 + 32));
  v9 = **(_QWORD **)(a1 + 64);
  if (v9)
  {
    v26 = v8;
    v27 = v7;
    if (v7)
    {
      p_shared_owners = (unint64_t *)&v7->__shared_owners_;
      do
        v11 = __ldxr(p_shared_owners);
      while (__stxr(v11 + 1, p_shared_owners));
    }
    sub_26314((_QWORD *)(v9 + 24), &v26);
    v12 = v27;
    if (v27)
    {
      v13 = (unint64_t *)&v27->__shared_owners_;
      do
        v14 = __ldaxr(v13);
      while (__stlxr(v14 - 1, v13));
      if (!v14)
      {
        ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
        std::__shared_weak_count::__release_weak(v12);
      }
    }
    objc_storeStrong((id *)(**(_QWORD **)(a1 + 64) + 72), v2[89]);
    objc_storeStrong((id *)(**(_QWORD **)(a1 + 64) + 88), v2[90]);
  }
  else
  {
    objc_msgSend(*(id *)(a1 + 40), "model");
    v18 = *(_QWORD *)(v28 + 24);
    v19 = *(std::__shared_weak_count **)(v28 + 32);
    if (v19)
    {
      v20 = (unint64_t *)&v19->__shared_owners_;
      do
        v21 = __ldxr(v20);
      while (__stxr(v21 + 1, v20));
      do
        v22 = __ldaxr(v20);
      while (__stlxr(v22 - 1, v20));
      if (!v22)
      {
        ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
        std::__shared_weak_count::__release_weak(v19);
      }
    }
    v23 = (std::__shared_weak_count *)v29;
    if (v29)
    {
      v24 = (unint64_t *)(v29 + 8);
      do
        v25 = __ldaxr(v24);
      while (__stlxr(v25 - 1, v24));
      if (!v25)
      {
        ((void (*)(std::__shared_weak_count *))v23->__on_zero_shared)(v23);
        std::__shared_weak_count::__release_weak(v23);
      }
    }
    if (!v18 || !v31 || !TUI::Evaluation::Variables::Capture::operator==(v18, v31))
      operator new();
  }
  v15 = v32;
  if (v32)
  {
    v16 = (unint64_t *)&v32->__shared_owners_;
    do
      v17 = __ldaxr(v16);
    while (__stlxr(v17 - 1, v16));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
    }
  }

}

void sub_FA030()
{
  operator delete();
}

void sub_FA0BC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  int *v5;
  unint64_t v6;
  _DWORD *v7;
  int *v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  char *v13;
  int *v14;
  char *v15;
  int v16;

  v1 = *(_QWORD *)(a1 + 32);
  v2 = TUI::Package::Buffer::renderBodyForComponent(*(_QWORD *)(v1 + 576), *(_QWORD *)(a1 + 40));
  v3 = v2;
  v4 = *(_DWORD *)(v2 + 8);
  if (*(_BYTE *)(v1 + 552) && TUILocationNotNil(*(_DWORD *)(v2 + 8)))
  {
    v5 = *(int **)(v1 + 664);
    v6 = *(_QWORD *)(v1 + 672);
    if ((unint64_t)v5 >= v6)
    {
      v8 = *(int **)(v1 + 656);
      v9 = v5 - v8;
      if ((unint64_t)(v9 + 1) >> 62)
        sub_6F9C();
      v10 = v6 - (_QWORD)v8;
      v11 = (uint64_t)(v6 - (_QWORD)v8) >> 1;
      if (v11 <= v9 + 1)
        v11 = v9 + 1;
      if (v10 >= 0x7FFFFFFFFFFFFFFCLL)
        v12 = 0x3FFFFFFFFFFFFFFFLL;
      else
        v12 = v11;
      if (v12)
      {
        v13 = (char *)sub_FC474(v1 + 672, v12);
        v5 = *(int **)(v1 + 664);
        v8 = *(int **)(v1 + 656);
      }
      else
      {
        v13 = 0;
      }
      v14 = (int *)&v13[4 * v9];
      v15 = &v13[4 * v12];
      *v14 = v4;
      v7 = v14 + 1;
      while (v5 != v8)
      {
        v16 = *--v5;
        *--v14 = v16;
      }
      *(_QWORD *)(v1 + 656) = v14;
      *(_QWORD *)(v1 + 664) = v7;
      *(_QWORD *)(v1 + 672) = v15;
      if (v8)
        operator delete(v8);
    }
    else
    {
      *v5 = v4;
      v7 = v5 + 1;
    }
    *(_QWORD *)(v1 + 664) = v7;
  }
  TUI::Evaluation::Context::instantiateChildren((const TUI::Evaluation::Context *)v1, *(unsigned int *)(v3 + 4) | ((unint64_t)*(unsigned __int16 *)(v3 + 12) << 32), 0);
  if (*(_BYTE *)(v1 + 552))
  {
    if (TUILocationNotNil(v4))
      *(_QWORD *)(v1 + 664) -= 4;
  }
}

BOOL TUI::Evaluation::Context::updateComponentGlobalsIfNeeded(TUI::Evaluation::Context *this, TUIComponent *a2)
{
  unint64_t v2;
  unint64_t v3;
  TUIComponent *v5;
  TUIComponent *v6;
  uint64_t v7;
  uint64_t v8;
  TUIComponent *v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t *v12;
  unint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  void **v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  unsigned int *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unsigned __int16 *v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  id v31;
  void *v32;
  std::__shared_weak_count *v33;
  unint64_t *v34;
  unint64_t v35;
  void *v36;
  std::__shared_weak_count *v37;
  char *v38;
  unint64_t *v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  TUIComponent *v43;
  unint64_t v44;
  uint64_t v45;
  int v46;
  int v47;
  std::__shared_weak_count *v48;
  unint64_t *v49;
  unint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  int v55;
  unint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  _QWORD *v59;
  uint64_t v60;
  TUIComponent *v62;
  char *v63;
  TUI::Model::Component *v64;
  char *v65[3];
  char **v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  uint64_t v72;

  v5 = a2;
  v6 = v5;
  v7 = *((_QWORD *)this + 96);
  v62 = v5;
  if (v7)
  {
    v8 = *((_QWORD *)this + 72);
    v9 = v5;
    -[TUIComponent model](v9, "model");
    v10 = *((unsigned int *)v66[5] + 2);
    if (*(_QWORD *)(v8 + 184) > v10 && (v11 = *(_QWORD *)(v8 + 176) + 12 * v10) != 0)
    {
      v2 = *(unsigned __int16 *)(v11 + 2);
      v3 = *(unsigned __int16 *)(v11 + 4) << 16;
    }
    else
    {
      v2 = 0;
      v3 = 4294901760;
    }
    if ((_QWORD)v67)
    {
      v12 = (unint64_t *)(v67 + 8);
      do
        v13 = __ldaxr(v12);
      while (__stlxr(v13 - 1, v12));
      if (!v13)
      {
        (*(void (**)(_QWORD))(*(_QWORD *)v67 + 16))(v67);
        std::__shared_weak_count::__release_weak((std::__shared_weak_count *)v67);
      }
    }

    LODWORD(v65[0]) = v2 | v3;
    v14 = sub_28810((_QWORD *)(v7 + 8), (unsigned __int16 *)v65);
    if (!v14)
    {
      v72 = 0;
      v71 = 0u;
      v70 = 0u;
      v69 = 0u;
      v68 = 0u;
      v67 = 0u;
      LODWORD(v66) = v65[0];
      v14 = sub_FC4A8(v7 + 8, (unsigned __int16 *)&v66, (uint64_t)&v66);
    }
    ++v14[4];
    *(_DWORD *)(v7 + 16 * *(_QWORD *)(v7 + 3224) + 3208) = v2 | v3;
    v15 = mach_absolute_time();
    v16 = *(_QWORD *)(v7 + 3224);
    *(_QWORD *)(v7 + 16 * v16 + 3216) = v15;
    *(_QWORD *)(v7 + 3224) = v16 + 1;
  }
  -[TUIComponent model](v6, "model");
  v17 = (void **)v66;
  v18 = (std::__shared_weak_count *)v67;
  if ((_QWORD)v67)
  {
    v19 = (unint64_t *)(v67 + 8);
    do
      v20 = __ldaxr(v19);
    while (__stlxr(v20 - 1, v19));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
      std::__shared_weak_count::__release_weak(v18);
    }
  }
  v21 = (unsigned int *)v17[5];
  v22 = v21[8];
  v23 = *((unsigned __int16 *)v21 + 3);
  memset(v65, 0, sizeof(v65));
  if (v23)
  {
    v24 = 0;
    v25 = 0;
    v63 = 0;
    do
    {
      v26 = *((_QWORD *)this + 72);
      if (*(_QWORD *)(v26 + 344) > (unint64_t)(v24 + v22)
        && (v27 = (unsigned __int16 *)(*(_QWORD *)(v26 + 336) + 4 * (v24 + v22))) != 0)
      {
        v3 = v3 & 0xFFFFFFFF00000000 | *v27 | ((unint64_t)v27[1] << 16);
        (*(void (**)(char ***__return_ptr, _QWORD, unint64_t, TUI::Evaluation::Context *))(**(_QWORD **)this + 192))(&v66, *(_QWORD *)this, v3, this);
        if (v66)
        {
          v28 = *((unsigned int *)v66 + 22);
          v30 = (unint64_t)v66[9];
          v29 = (unint64_t)v66[10];
          sub_27580(v65, (__int128 *)&v66);
          v63 += v28;
          v25 |= v30 | v29;
        }
        else
        {
          v2 = v2 & 0xFFFFFFFF00000000 | *v27 | ((unint64_t)v27[1] << 16);
          v31 = TUI::Symbol::Tab::string(*((TUI::Symbol::Tab **)this + 70), v2);
          v32 = (void *)objc_claimAutoreleasedReturnValue(v31);
          TUI::Evaluation::Context::reportError((uint64_t)this, 1012, v32);

        }
        v33 = (std::__shared_weak_count *)v67;
        if ((_QWORD)v67)
        {
          v34 = (unint64_t *)(v67 + 8);
          do
            v35 = __ldaxr(v34);
          while (__stlxr(v35 - 1, v34));
          if (!v35)
          {
            ((void (*)(std::__shared_weak_count *))v33->__on_zero_shared)(v33);
            std::__shared_weak_count::__release_weak(v33);
          }
        }
      }
      else
      {
        TUI::Evaluation::Context::reportError((uint64_t)this, 1012, 0);
      }
      ++v24;
    }
    while (v24 != v23);
  }
  else
  {
    v63 = 0;
    v25 = 0;
  }
  -[TUIComponent setGlobalsEnvironmentUseMask:](v62, "setGlobalsEnvironmentUseMask:", v25);
  v36 = (void *)*((_QWORD *)this + 93);
  if (v25)
    objc_msgSend(v36, "addObject:", v62);
  else
    objc_msgSend(v36, "removeObject:", v62);
  -[TUIComponent model](v62, "model");
  v37 = (std::__shared_weak_count *)v67;
  v38 = v66[10];
  if ((_QWORD)v67)
  {
    v39 = (unint64_t *)(v67 + 8);
    do
      v40 = __ldaxr(v39);
    while (__stlxr(v40 - 1, v39));
    if (!v40)
    {
      ((void (*)(std::__shared_weak_count *))v37->__on_zero_shared)(v37);
      std::__shared_weak_count::__release_weak(v37);
    }
  }
  if (v63 != v38)
  {
    v41 = *((_QWORD *)this + 96);
    if (v41)
    {
      v42 = *((_QWORD *)this + 72);
      v43 = v62;
      -[TUIComponent model](v43, "model");
      v44 = *((unsigned int *)v66[5] + 2);
      if (*(_QWORD *)(v42 + 184) > v44 && (v45 = *(_QWORD *)(v42 + 176) + 12 * v44) != 0)
      {
        v46 = *(unsigned __int16 *)(v45 + 2);
        v47 = *(unsigned __int16 *)(v45 + 4) << 16;
      }
      else
      {
        v46 = 0;
        v47 = -65536;
      }
      v48 = (std::__shared_weak_count *)v67;
      if ((_QWORD)v67)
      {
        v49 = (unint64_t *)(v67 + 8);
        do
          v50 = __ldaxr(v49);
        while (__stlxr(v50 - 1, v49));
        if (!v50)
        {
          ((void (*)(std::__shared_weak_count *))v48->__on_zero_shared)(v48);
          std::__shared_weak_count::__release_weak(v48);
        }
      }

      LODWORD(v64) = v46 | v47;
      v51 = sub_28810((_QWORD *)(v41 + 8), (unsigned __int16 *)&v64);
      if (!v51)
      {
        v72 = 0;
        v71 = 0u;
        v70 = 0u;
        v69 = 0u;
        v68 = 0u;
        v67 = 0u;
        LODWORD(v66) = (_DWORD)v64;
        v51 = sub_FC4A8(v41 + 8, (unsigned __int16 *)&v66, (uint64_t)&v66);
      }
      ++v51[5];
    }
    v64 = 0;
    operator new();
  }
  v52 = *((_QWORD *)this + 96);
  if (v52)
  {
    v53 = *(_QWORD *)(v52 + 3224) - 1;
    *(_QWORD *)(v52 + 3224) = v53;
    v54 = v52 + 16 * v53;
    v55 = *(_DWORD *)(v54 + 3208);
    v56 = *(_QWORD *)(v54 + 3216);
    v57 = mach_absolute_time();
    LODWORD(v64) = v55;
    v58 = (_QWORD *)(v52 + 8);
    v59 = sub_28810(v58, (unsigned __int16 *)&v64);
    if (!v59)
    {
      v72 = 0;
      v71 = 0u;
      v70 = 0u;
      v69 = 0u;
      v68 = 0u;
      v67 = 0u;
      LODWORD(v66) = (_DWORD)v64;
      v59 = sub_FC4A8((uint64_t)v58, (unsigned __int16 *)&v66, (uint64_t)&v66);
    }
    v60 = v57 - v56;
    if (v56 >= v57)
      v60 = v56 - v57;
    v59[13] += v60;
  }
  v66 = v65;
  sub_2A0E0((void ***)&v66);

  return v63 != v38;
}

void sub_FA948(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, uint64_t a14, uint64_t a15, void **a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,char a25)
{
  void *v25;

  a16 = (void **)&a25;
  sub_2A0E0(&a16);

  _Unwind_Resume(a1);
}

void TUI::Evaluation::Context::instantiateComponentRender(id *a1, unsigned int a2, unsigned int a3)
{
  unint64_t v3;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  id v9;
  unint64_t v10;
  _BOOL4 IsNil;
  int v12;
  uint64_t shared_weak_owners;
  uint64_t *p_shared_owners;
  unint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  int v18;
  unsigned int v19;
  int v20;
  uint64_t v21;
  unsigned int *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unsigned int v26;
  _QWORD *v27;
  uint64_t v28;
  TUI::Instruction::Decoder *v29;
  std::__shared_weak_count *v30;
  std::__shared_weak_count *v31;
  int64_t v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;
  char *v36;
  std::__shared_weak_count *v37;
  int shared_weak_owners_high;
  unsigned int v39;
  id v40;
  void *v41;
  _QWORD *v42;
  unint64_t v43;
  uint64_t v44;
  std::__shared_weak_count *i;
  std::__shared_weak_count *v46;
  unint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  unint64_t v50;
  _QWORD *v51;
  int *v52;
  int *v53;
  TUI::Instruction::Decoder *v54;
  const TUI::Evaluation::Context *v55;
  id v56;
  uint64_t v57;
  std::__shared_weak_count *v58;
  unint64_t *v59;
  unint64_t v60;
  unint64_t *v61;
  unint64_t v62;
  id v63;
  std::__shared_weak_count *v64;
  unint64_t *v65;
  unint64_t v66;
  id v67;
  void *v68;
  id v69;
  id v70;
  int v71;
  int *v72;
  unint64_t v73;
  _DWORD *v74;
  int *v75;
  uint64_t v76;
  unint64_t v77;
  unint64_t v78;
  unint64_t v79;
  char *v80;
  int *v81;
  char *v82;
  int v83;
  std::__shared_weak_count *v84;
  unint64_t *v85;
  unint64_t v86;
  uint64_t v87;
  unint64_t v88;
  unsigned int v89;
  unint64_t v90;
  unsigned int *v91;
  uint64_t v92;
  std::__shared_weak_count *v93;
  int v94;
  __int128 v95;
  id v96;
  __int128 v97;
  int v98;
  __int128 v99;
  std::__shared_weak_count *v100;
  std::__shared_weak_count *v101;
  unint64_t v102;

  v6 = a1[72];
  v7 = a3;
  if (v6[27] <= (unint64_t)a3)
    v8 = 0;
  else
    v8 = v6[26] + 28 * a3;
  v9 = *((id *)*a1 + 2);
  if (!v9 || ((v10 = a2, IsNil = TUINameReferenceIsNil(a2), !v8) ? (v12 = 1) : (v12 = IsNil), v12 == 1))
  {
    TUI::Evaluation::Context::reportError((uint64_t)a1, 1005, 0);
    goto LABEL_10;
  }
  objc_msgSend(v9, "model");
  shared_weak_owners = v100[1].__shared_weak_owners_;
  if (v101)
  {
    p_shared_owners = &v101->__shared_owners_;
    do
      v15 = __ldaxr((unint64_t *)p_shared_owners);
    while (__stlxr(v15 - 1, (unint64_t *)p_shared_owners));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v101->__on_zero_shared)(v101);
      std::__shared_weak_count::__release_weak(v101);
    }
  }
  v16 = a1[72];
  if (v16[19] > v10 && (v17 = v16[18] + 12 * v10) != 0)
  {
    v18 = *(unsigned __int16 *)(v17 + 4);
    v19 = *(unsigned __int16 *)(v17 + 2) | ((unsigned __int16)v18 << 16);
    v90 = *(unsigned int *)(v17 + 8) | ((unint64_t)*(unsigned __int16 *)(v17 + 6) << 32);
    if (v18 != 0xFFFF)
    {
      v20 = TUINameNil;
      if (*(_WORD *)(v17 + 2) != 0xFFFF)
        v20 = *(unsigned __int16 *)(v17 + 2) | ((unsigned __int16)v18 << 16);
      goto LABEL_23;
    }
  }
  else
  {
    v19 = -65536;
    v90 = 0xFFFFFFFFLL;
  }
  v20 = TUINameNil;
LABEL_23:
  v21 = TUI::Package::Buffer::renderMethodForComponent(v16, shared_weak_owners, v20);
  v22 = (unsigned int *)v21;
  if (v21)
  {
    v23 = *(unsigned int *)(v8 + 20);
    v24 = *(unsigned __int16 *)(v8 + 4);
    v100 = 0;
    v101 = 0;
    v102 = 0;
    v89 = v7;
    v91 = (unsigned int *)v21;
    if (v24)
    {
      v25 = 0;
      v7 = v23 | (v24 << 32);
      do
      {
        v26 = v25 + v7;
        v27 = a1[72];
        if (v27[27] > (unint64_t)(v25 + v7))
        {
          v28 = v27[26] + 28 * v26;
          if (v28)
          {
            v29 = (TUI::Instruction::Decoder *)*(unsigned int *)(v28 + 8);
            if (TUIConditionIsNil(*(_DWORD *)(v28 + 8))
              || (TUI::Evaluation::Context::resolve((uint64_t)a1, v29, (uint64_t)&v98),
                  v3 = (unint64_t)TUI::Evaluation::ResolvedValue::BOOLValue((TUI::Evaluation::ResolvedValue *)&v98, (const TUI::Evaluation::Context *)a1), (id)v99, (_DWORD)v3))
            {
              v30 = v101;
              if ((unint64_t)v101 >= v102)
              {
                v31 = v100;
                v32 = ((char *)v101 - (char *)v100) >> 2;
                v33 = v32 + 1;
                if ((unint64_t)(v32 + 1) >> 62)
                  sub_6F9C();
                v34 = v102 - (_QWORD)v100;
                if ((uint64_t)(v102 - (_QWORD)v100) >> 1 > v33)
                  v33 = v34 >> 1;
                if ((unint64_t)v34 >= 0x7FFFFFFFFFFFFFFCLL)
                  v35 = 0x3FFFFFFFFFFFFFFFLL;
                else
                  v35 = v33;
                if (v35)
                {
                  v36 = (char *)sub_FC474((uint64_t)&v102, v35);
                  v31 = v100;
                  v30 = v101;
                }
                else
                {
                  v36 = 0;
                }
                v37 = (std::__shared_weak_count *)&v36[4 * v32];
                LODWORD(v37->__vftable) = v26;
                v3 = (unint64_t)&v37->__vftable + 4;
                while (v30 != v31)
                {
                  shared_weak_owners_high = HIDWORD(v30[-1].__shared_weak_owners_);
                  v30 = (std::__shared_weak_count *)((char *)v30 - 4);
                  HIDWORD(v37[-1].__shared_weak_owners_) = shared_weak_owners_high;
                  v37 = (std::__shared_weak_count *)((char *)v37 - 4);
                }
                v100 = v37;
                v101 = (std::__shared_weak_count *)v3;
                v102 = (unint64_t)&v36[4 * v35];
                if (v31)
                  operator delete(v31);
              }
              else
              {
                LODWORD(v101->__vftable) = v26;
                v3 = (unint64_t)&v30->__vftable + 4;
              }
              v101 = (std::__shared_weak_count *)v3;
            }
          }
        }
        ++v25;
      }
      while (v25 != v24);
      v98 = 0;
      v99 = 0uLL;
      v22 = v91;
      if (v100 != v101)
      {
        v3 = (unint64_t)*a1;
        v39 = TUI::Evaluation::Context::closureForElement((uint64_t)a1, v8);
        (*(void (**)(id *__return_ptr, unint64_t, _QWORD))(*(_QWORD *)v3 + 112))(&v96, v3, v39);
        v98 = (int)v96;
        v99 = v97;
      }
    }
    else
    {
      v98 = 0;
      v99 = 0uLL;
    }
    v42 = a1[72];
    v43 = *v22;
    if (v42[23] > v43 && (v44 = v42[22] + 12 * v43) != 0)
    {
      v87 = *(unsigned int *)(v44 + 8);
      v88 = (unint64_t)*(unsigned __int16 *)(v44 + 6) << 32;
    }
    else
    {
      v87 = 0xFFFFFFFFLL;
      v88 = 0;
    }
    (*(void (**)(id, uint64_t))(*(_QWORD *)*a1 + 72))(*a1, 63);
    v46 = v100;
    for (i = v101; v46 != i; v46 = (std::__shared_weak_count *)((char *)v46 + 4))
    {
      v47 = LODWORD(v46->__vftable);
      v48 = a1[72];
      if (v48[27] > v47)
      {
        v49 = v48[26] + 28 * v47;
        if (v49)
        {
          if (TUI::Package::Buffer::findAttribute(v48, 0x95u, *(unsigned int *)(v49 + 16) | ((unint64_t)*(unsigned __int16 *)(v49 + 2) << 32)) == 65685)
          {
            v51 = a1[72];
            if (v51[29] > v50 && (v52 = (int *)(v51[28] + 12 * v50)) != 0)
            {
              v53 = v52 + 1;
            }
            else
            {
              v53 = &TUIConditionNil;
              v52 = &TUIValueNil;
            }
            v54 = (TUI::Instruction::Decoder *)*v52;
            if (!TUIConditionNotNil(*v53))
            {
              v56 = v9;
              v57 = TUI::Instruction::Decoder::elementName(v54, (uint64_t)a1, v55);
              v7 = v7 & 0xFFFFFFFF00000000 | v57;
              if (TUINameIsValid(v7))
              {
                v94 = v98;
                v58 = (std::__shared_weak_count *)*((_QWORD *)&v99 + 1);
                v95 = v99;
                if (*((_QWORD *)&v99 + 1))
                {
                  v59 = (unint64_t *)(*((_QWORD *)&v99 + 1) + 8);
                  do
                    v60 = __ldxr(v59);
                  while (__stxr(v60 + 1, v59));
                }
                v96 = 0;
                LODWORD(v97) = v47;
                v3 = v3 & 0xFFFFFFFF00000000 | v57;
                TUI::Evaluation::Context::pushNamedElement(a1, v3, &v94, (uint64_t)&v96);

                v9 = v56;
                if (v58)
                {
                  v61 = (unint64_t *)&v58->__shared_owners_;
                  do
                    v62 = __ldaxr(v61);
                  while (__stlxr(v62 - 1, v61));
                  if (!v62)
                  {
                    ((void (*)(std::__shared_weak_count *))v58->__on_zero_shared)(v58);
                    std::__shared_weak_count::__release_weak(v58);
                  }
                }
              }
              else
              {
                v9 = v56;
              }
            }
          }
        }
      }
    }
    TUI::Evaluation::Context::evaluateParams((uint64_t)a1, v90);
    v63 = *a1;
    TUI::Evaluation::Variables::Capture::emptyClosedComponentPassthrough(&v92);
    (*(void (**)(id, uint64_t *))(*(_QWORD *)v63 + 160))(v63, &v92);
    v64 = v93;
    if (v93)
    {
      v65 = (unint64_t *)&v93->__shared_owners_;
      do
        v66 = __ldaxr(v65);
      while (__stlxr(v66 - 1, v65));
      if (!v66)
      {
        ((void (*)(std::__shared_weak_count *))v64->__on_zero_shared)(v64);
        std::__shared_weak_count::__release_weak(v64);
      }
    }
    TUI::Evaluation::Context::evaluateParams((TUI::Evaluation::Context *)a1, v87 | v88);
    v67 = TUI::Evaluation::Context::identifierWithNode((uint64_t)a1, v89);
    v68 = (void *)objc_claimAutoreleasedReturnValue(v67);
    v69 = a1[76];
    v70 = v69;
    objc_storeStrong(a1 + 76, v68);
    v71 = v91[2];
    if (*((_BYTE *)a1 + 552) && TUILocationNotNil(v91[2]))
    {
      v72 = (int *)a1[83];
      v73 = (unint64_t)a1[84];
      if ((unint64_t)v72 >= v73)
      {
        v75 = (int *)a1[82];
        v76 = v72 - v75;
        if ((unint64_t)(v76 + 1) >> 62)
          sub_6F9C();
        v77 = v73 - (_QWORD)v75;
        v78 = (uint64_t)(v73 - (_QWORD)v75) >> 1;
        if (v78 <= v76 + 1)
          v78 = v76 + 1;
        if (v77 >= 0x7FFFFFFFFFFFFFFCLL)
          v79 = 0x3FFFFFFFFFFFFFFFLL;
        else
          v79 = v78;
        if (v79)
        {
          v80 = (char *)sub_FC474((uint64_t)(a1 + 84), v79);
          v72 = (int *)a1[83];
          v75 = (int *)a1[82];
        }
        else
        {
          v80 = 0;
        }
        v81 = (int *)&v80[4 * v76];
        v82 = &v80[4 * v79];
        *v81 = v71;
        v74 = v81 + 1;
        while (v72 != v75)
        {
          v83 = *--v72;
          *--v81 = v83;
        }
        a1[82] = v81;
        a1[83] = v74;
        a1[84] = v82;
        if (v75)
          operator delete(v75);
      }
      else
      {
        *v72 = v71;
        v74 = v72 + 1;
      }
      a1[83] = v74;
    }
    TUI::Evaluation::Context::instantiateChildren((const TUI::Evaluation::Context *)a1, v91[1] | ((unint64_t)*((unsigned __int16 *)v91 + 6) << 32), 0);
    if (*((_BYTE *)a1 + 552) && TUILocationNotNil(v71))
      a1[83] = (char *)a1[83] - 4;
    objc_storeStrong(a1 + 76, v69);
    (*(void (**)(id))(*(_QWORD *)*a1 + 168))(*a1);
    (*(void (**)(id))(*(_QWORD *)*a1 + 80))(*a1);

    v84 = (std::__shared_weak_count *)*((_QWORD *)&v99 + 1);
    if (*((_QWORD *)&v99 + 1))
    {
      v85 = (unint64_t *)(*((_QWORD *)&v99 + 1) + 8);
      do
        v86 = __ldaxr(v85);
      while (__stlxr(v86 - 1, v85));
      if (!v86)
      {
        ((void (*)(std::__shared_weak_count *))v84->__on_zero_shared)(v84);
        std::__shared_weak_count::__release_weak(v84);
      }
    }
    if (v100)
    {
      v101 = v100;
      operator delete(v100);
    }
  }
  else
  {
    v40 = TUI::Symbol::Tab::string((TUI::Symbol::Tab *)a1[70], v19);
    v41 = (void *)objc_claimAutoreleasedReturnValue(v40);
    TUI::Evaluation::Context::reportError((uint64_t)a1, 1014, v41);

  }
LABEL_10:

}

void sub_FB1A0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void TUI::Evaluation::Context::defineComponentBinding(uint64_t a1, Entry a2, void *a3)
{
  id v5;
  id v6;
  void *v7;
  Entry v8;
  Entry v9;
  id v10[4];
  id v11;

  v5 = a3;
  if ((objc_opt_respondsToSelector(v5, "instanceForObserver:") & 1) != 0)
  {
    v6 = v5;
    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "instanceForObserver:", *(_QWORD *)(a1 + 704)));
    if (v7)
      objc_msgSend(*(id *)(a1 + 712), "addObject:", v7);

  }
  else
  {
    v7 = v5;
  }
  v8 = (Entry)-65536;
  v9 = a2;
  TUI::Evaluation::Enumerator::State::State((uint64_t)v10, v8, v9);
  objc_storeStrong(&v11, v7);
  (**(void (***)(uint64_t, _QWORD, id *))(*(_QWORD *)a1 + 8))(*(_QWORD *)a1 + 8, *(unsigned int *)&a2, v10);
  TUI::Evaluation::Enumerator::State::~State(v10);

}

void sub_FB334(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

TUIMutableDynamicValue *TUI::Evaluation::Context::componentViewStateWithName(uint64_t a1, unsigned int a2)
{
  void *v4;
  _TUIViewStateMapping *v5;
  void *v6;
  TUIMutableDynamicValue *v7;

  if (*(_QWORD *)(a1 + 704))
  {
    v4 = *(void **)(a1 + 720);
    if (!v4)
    {
      v5 = -[_TUIViewStateMapping initWithParent:]([_TUIViewStateMapping alloc], "initWithParent:", 0);
      v6 = *(void **)(a1 + 720);
      *(_QWORD *)(a1 + 720) = v5;

      v4 = *(void **)(a1 + 720);
    }
    v7 = (TUIMutableDynamicValue *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "viewStateForBinding:", a2));
    if (!v7)
    {
      v7 = -[TUIDynamicValue initWithValue:]([TUIMutableDynamicValue alloc], "initWithValue:", 0);
      objc_msgSend(*(id *)(a1 + 720), "setViewState:forBinding:", v7, a2);
    }
  }
  else
  {
    v7 = 0;
  }
  return v7;
}

void sub_FB42C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

id TUI::Evaluation::Context::environmentChildContainersForContainer(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 728), "objectForKey:", a2));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "objectEnumerator"));

  return v3;
}

void sub_FB47C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

unint64_t TUI::Evaluation::Context::childrenOfNode(uint64_t a1, unsigned int a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(a1 + 576);
  if (*(_QWORD *)(v2 + 216) > (unint64_t)a2 && (v3 = *(_QWORD *)(v2 + 208) + 28 * a2) != 0)
    return *(unsigned int *)(v3 + 20) | ((unint64_t)*(unsigned __int16 *)(v3 + 4) << 32);
  else
    return TUIElementNodesNil;
}

uint64_t TUI::Evaluation::Context::evaluateCconditionForNode(const TUI::Evaluation::Context *a1, unsigned int a2)
{
  uint64_t v2;
  uint64_t v3;
  id v5;
  _BYTE v7[8];
  id v8;

  v2 = *((_QWORD *)a1 + 72);
  if (*(_QWORD *)(v2 + 216) <= (unint64_t)a2)
    return 1;
  v3 = *(_QWORD *)(v2 + 208) + 28 * a2;
  if (!v3)
    return 1;
  TUI::Evaluation::Context::resolve((uint64_t)a1, (TUI::Instruction::Decoder *)*(unsigned int *)(v3 + 8), (uint64_t)v7);
  v5 = TUI::Evaluation::ResolvedValue::BOOLValue((TUI::Evaluation::ResolvedValue *)v7, a1);

  return (uint64_t)v5;
}

void sub_FB548(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11)
{

  _Unwind_Resume(a1);
}

uint64_t TUI::Evaluation::Context::evaluateAttributeForNode(uint64_t a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  int Attribute;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t i;
  uint64_t v13;
  int *v14;
  int *v15;
  TUI::Instruction::Decoder *v16;
  unsigned int v17;
  id v19;
  double v20;
  id obj;
  uint64_t v22;

  v5 = *(_QWORD **)(a1 + 576);
  if (v5[27] <= (unint64_t)a3)
    return 0;
  v6 = v5[26] + 28 * a3;
  if (!v6)
    return 0;
  Attribute = TUI::Package::Buffer::findAttribute(v5, a2, *(unsigned int *)(v6 + 16) | ((unint64_t)*(unsigned __int16 *)(v6 + 2) << 32));
  if ((_WORD)Attribute == 0xFFFF)
    return 0;
  v10 = HIWORD(Attribute);
  if (!HIWORD(Attribute))
    return 0;
  v11 = v9;
  for (i = 12 * v9; ; i += 12)
  {
    v13 = *(_QWORD *)(a1 + 576);
    if (*(_QWORD *)(v13 + 232) <= v11)
    {
      v15 = &TUIConditionNil;
      v14 = &TUIValueNil;
    }
    else
    {
      v14 = (int *)(i + *(_QWORD *)(v13 + 224));
      v15 = v14 + 1;
      if (!v14)
      {
        v15 = &TUIConditionNil;
        v14 = &TUIValueNil;
      }
    }
    v16 = (TUI::Instruction::Decoder *)*v14;
    TUI::Evaluation::Context::resolve(a1, (TUI::Instruction::Decoder *)*v15, (uint64_t)&v20);
    v17 = TUI::Evaluation::ResolvedValue::BOOLValue((TUI::Evaluation::ResolvedValue *)&v20, (const TUI::Evaluation::Context *)a1);

    if (v17)
      break;
    ++v11;
    if (!--v10)
      return 0;
  }
  TUI::Instruction::Evaluation::evaluate(&v20, *(TUI::Instruction::Evaluation **)(a1 + 8), v16);
  *(_DWORD *)a4 = LODWORD(v20);
  objc_storeStrong((id *)(a4 + 8), obj);
  v19 = obj;
  *(_QWORD *)(a4 + 16) = v22;

  return 1;
}

void sub_FB6B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11)
{

  _Unwind_Resume(a1);
}

id TUI::Evaluation::Context::snapForAttribute(const TUI::Evaluation::Context *a1, unsigned int a2)
{
  uint64_t **v3;
  id v4;
  void *v5;
  uint64_t v6;
  id v7;
  objc_class *v9;
  NSString *v10;
  void *v11;
  void *v12;
  unsigned __int16 v13;

  v13 = a2;
  if (a2 == 0xFFFF)
    return 0;
  if (a2 >= 0x100)
    sub_87B1C("bitset test argument out of range");
  if (((*(_QWORD *)((char *)a1 + (((unint64_t)a2 >> 3) & 0x1FF8) + 280) >> a2) & 1) == 0)
    return 0;
  v3 = sub_1529C((_QWORD *)a1 + 44, &v13);
  v4 = TUI::Evaluation::ResolvedValue::objectValue((TUI::Evaluation::ResolvedValue *)(v3 + 3), a1);
  v5 = (void *)objc_claimAutoreleasedReturnValue(v4);
  if (v5 && (v6 = objc_opt_class(TUISnap), (objc_opt_isKindOfClass(v5, v6) & 1) == 0))
  {
    v9 = (objc_class *)objc_opt_class(v5);
    v10 = NSStringFromClass(v9);
    v11 = (void *)objc_claimAutoreleasedReturnValue(v10);
    v12 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("expected TUISnap, got %@"), v11));
    TUI::Evaluation::Context::reportError((uint64_t)a1, 1000, v12);

    v7 = 0;
  }
  else
  {
    v7 = v5;
  }

  return v7;
}

void sub_FB7E8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void TUI::Evaluation::Context::evaluateStates(_QWORD *a1, void *a2, void *a3)
{
  void (**v5)(id, id);
  void *v6;
  id v7;
  id v8;
  void **v9;
  uint64_t v10;
  void *i;
  void *v12;
  void *v13;
  uint64_t v14;
  id v15;
  __int16 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  id v21;
  id obj;
  void *__p;
  id v24;
  __int16 v25;
  char v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  _BYTE v31[128];

  v21 = a2;
  v5 = a3;
  if (v5)
  {
    v6 = (void *)a1[76];
    v7 = v6;
    v27 = 0u;
    v28 = 0u;
    v29 = 0u;
    v30 = 0u;
    obj = v21;
    v8 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v27, v31, 16);
    if (v8)
    {
      v9 = (void **)(a1 + 76);
      v10 = *(_QWORD *)v28;
      do
      {
        for (i = 0; i != v8; i = (char *)i + 1)
        {
          if (*(_QWORD *)v28 != v10)
            objc_enumerationMutation(obj);
          v12 = *(void **)(*((_QWORD *)&v27 + 1) + 8 * (_QWORD)i);
          if (*((_BYTE *)a1 + 552)
            && (objc_msgSend((id)a1[86], "containsObject:", *(_QWORD *)(*((_QWORD *)&v27 + 1) + 8 * (_QWORD)i)) & 1) == 0)
          {
            v13 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("'%@' not a valid state"), v12));
            TUI::Evaluation::Context::reportError((uint64_t)a1, 1034, v13);

          }
          (*(void (**)(_QWORD, uint64_t))(*(_QWORD *)*a1 + 72))(*a1, 63);
          v14 = a1[70];
          v15 = objc_retainAutorelease(v12);
          sub_9350(&__p, (char *)objc_msgSend(v15, "UTF8String"));
          v16 = TUI::Symbol::Tab::lookup(v14, (unsigned __int8 *)&__p);
          if (v26 < 0)
            operator delete(__p);
          v17 = *(_QWORD *)(a1[70] + 40);
          if ((unint64_t)(*(_QWORD *)(a1[70] + 48) - v17) < 0xAB)
            v18 = 0xFFFFLL;
          else
            v18 = *(unsigned __int16 *)(v17 + 170);
          LODWORD(__p) = 6;
          v24 = 0;
          v25 = v16;
          (*(void (**)(uint64_t, uint64_t, void **))(*(_QWORD *)(*a1 + 8) + 8))(*a1 + 8, v18 << 16, &__p);

          v19 = objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "tui_identifierByAppendingString:", v15));
          v20 = *v9;
          *v9 = (void *)v19;

          v5[2](v5, v15);
          objc_storeStrong((id *)a1 + 76, v6);
          (*(void (**)(_QWORD))(*(_QWORD *)*a1 + 80))(*a1);
        }
        v8 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v27, v31, 16);
      }
      while (v8);
    }

  }
}

void sub_FBA7C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  void *v17;
  void *v18;

  _Unwind_Resume(a1);
}

NSMutableString *TUI::Evaluation::Context::debugDumpEnvironmentContainerStructure(uint64_t a1, void *a2)
{
  id v3;
  NSMutableString *v4;

  v3 = a2;
  v4 = objc_opt_new(NSMutableString);
  sub_FBB60(a1, v3, 0, v4);

  return v4;
}

void sub_FBB44(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_FBB60(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  id v7;
  void *v8;
  objc_class *v9;
  NSString *v10;
  void *v11;
  uint64_t v12;
  id v13;
  TUI::Symbol::Tab *v14;
  _QWORD *v15;
  unsigned int v16;
  id v17;
  void *v18;
  uint64_t *p_shared_owners;
  unint64_t v20;
  void *v21;
  void *v22;
  NSMutableString *v23;
  void *v24;
  id v25;
  NSMutableString *v26;
  void *v27;
  id v28;
  void *v29;
  id v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  void *i;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  void *v38;
  id v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  uint64_t v44;
  std::__shared_weak_count *v45;
  _BYTE v46[128];

  v39 = a2;
  v7 = a4;
  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(&stru_243BF0, "stringByPaddingToLength:withString:startingAtIndex:", 2 * a3, CFSTR(" "), 0));
  objc_msgSend(v7, "appendString:", v8);

  v9 = (objc_class *)objc_opt_class(v39);
  v10 = NSStringFromClass(v9);
  v11 = (void *)objc_claimAutoreleasedReturnValue(v10);
  objc_msgSend(v7, "appendFormat:", CFSTR("<%@ %p"), v11, v39);

  v12 = objc_opt_class(TUIComponent);
  v13 = TUIDynamicCast(v12, v39);
  v38 = (void *)objc_claimAutoreleasedReturnValue(v13);
  if (v38)
  {
    v14 = *(TUI::Symbol::Tab **)(a1 + 560);
    v15 = *(_QWORD **)(a1 + 576);
    objc_msgSend(v38, "model");
    v16 = TUI::Package::Buffer::nameForComponent(v15, *(_QWORD *)(v44 + 40));
    v17 = TUI::Symbol::Tab::string(v14, v16);
    v18 = (void *)objc_claimAutoreleasedReturnValue(v17);
    objc_msgSend(v7, "appendFormat:", CFSTR(" %@"), v18);

    if (v45)
    {
      p_shared_owners = &v45->__shared_owners_;
      do
        v20 = __ldaxr((unint64_t *)p_shared_owners);
      while (__stlxr(v20 - 1, (unint64_t *)p_shared_owners));
      if (!v20)
      {
        ((void (*)(std::__shared_weak_count *))v45->__on_zero_shared)(v45);
        std::__shared_weak_count::__release_weak(v45);
      }
    }
  }
  v21 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v39, "identifier"));
  v22 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v21, "tui_identifierToString"));
  v23 = sub_FC708((char)objc_msgSend(v39, "directEnvironmentUseMask"));
  v24 = (void *)objc_claimAutoreleasedReturnValue(v23);
  objc_msgSend(v7, "appendFormat:", CFSTR(" id=%@ useMask=%@"), v22, v24);

  if ((objc_opt_respondsToSelector(v39, "globalsEnvironmentUseMask") & 1) != 0)
  {
    v25 = v39;
    v26 = sub_FC708((char)objc_msgSend(v25, "globalsEnvironmentUseMask"));
    v27 = (void *)objc_claimAutoreleasedReturnValue(v26);
    objc_msgSend(v7, "appendFormat:", CFSTR(" globalsUseMask=%@"), v27);

  }
  v42 = 0u;
  v43 = 0u;
  v40 = 0u;
  v41 = 0u;
  v28 = TUI::Evaluation::Context::environmentChildContainersForContainer(a1, (uint64_t)v39);
  v29 = (void *)objc_claimAutoreleasedReturnValue(v28);
  v30 = objc_msgSend(v29, "countByEnumeratingWithState:objects:count:", &v40, v46, 16);
  if (v30)
  {
    v37 = 2 * a3;
    v31 = 0;
    v32 = *(_QWORD *)v41;
    v33 = a3 + 1;
    do
    {
      for (i = 0; i != v30; i = (char *)i + 1)
      {
        if (*(_QWORD *)v41 != v32)
          objc_enumerationMutation(v29);
        v35 = *(_QWORD *)(*((_QWORD *)&v40 + 1) + 8 * (_QWORD)i);
        if ((v31 & 1) == 0)
          objc_msgSend(v7, "appendString:", CFSTR(" {\n"));
        sub_FBB60(a1, v35, v33, v7);
        v31 = 1;
      }
      v30 = objc_msgSend(v29, "countByEnumeratingWithState:objects:count:", &v40, v46, 16);
    }
    while (v30);

    v36 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(&stru_243BF0, "stringByPaddingToLength:withString:startingAtIndex:", v37, CFSTR(" "), 0));
    objc_msgSend(v7, "appendString:", v36);

    objc_msgSend(v7, "appendString:", CFSTR("}"));
  }
  else
  {

  }
  objc_msgSend(v7, "appendString:", CFSTR("\n"));

}

void sub_FBED0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, void *a14)
{
  void *v14;
  void *v15;
  void *v16;

  _Unwind_Resume(a1);
}

void TUI::Evaluation::Context::defineStruct(TUI::Evaluation::Context *this, unsigned int a2, TUIStruct *a3)
{
  TUIStruct *v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, int *);
  TUIStruct *v9;
  int v10;
  TUIStruct *v11;

  v5 = a3;
  v6 = *(_QWORD *)this;
  v10 = 18;
  v11 = v5;
  v7 = a2;
  v8 = *(void (**)(uint64_t, uint64_t, int *))(*(_QWORD *)(v6 + 8) + 8);
  v9 = v5;
  v8(v6 + 8, v7, &v10);

}

void sub_FC00C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11)
{
  void *v11;

  _Unwind_Resume(a1);
}

_QWORD *sub_FC024(_QWORD *result, unint64_t a2)
{
  unint64_t v2;
  _QWORD *v3;
  int v4;
  _QWORD *v5;
  unint64_t v6;
  unint64_t v7;
  _QWORD *v8;

  v2 = a2;
  v3 = result;
  v4 = *((_DWORD *)result + 2);
  v5 = (_QWORD *)*result;
  if (v4)
  {
    if ((64 - v4) >= a2)
      v6 = a2;
    else
      v6 = (64 - v4);
    *v5++ |= (0xFFFFFFFFFFFFFFFFLL >> (64 - v4 - v6)) & (-1 << v4);
    v2 = a2 - v6;
    *result = v5;
  }
  v7 = v2 >> 6;
  if (v2 >= 0x40)
    result = memset(v5, 255, 8 * v7);
  if ((v2 & 0x3F) != 0)
  {
    v8 = &v5[v7];
    *v3 = v8;
    *v8 |= 0xFFFFFFFFFFFFFFFFLL >> -(v2 & 0x3F);
  }
  return result;
}

void sub_FC0D4(uint64_t a1, unint64_t a2)
{
  unint64_t v2;
  int v4;
  _QWORD *v5;
  unint64_t v6;
  unint64_t v7;
  _QWORD *v8;

  v2 = a2;
  v4 = *(_DWORD *)(a1 + 8);
  v5 = *(_QWORD **)a1;
  if (v4)
  {
    if ((64 - v4) >= a2)
      v6 = a2;
    else
      v6 = (64 - v4);
    *v5++ &= ~((0xFFFFFFFFFFFFFFFFLL >> (64 - v4 - v6)) & (-1 << v4));
    v2 = a2 - v6;
    *(_QWORD *)a1 = v5;
  }
  v7 = v2 >> 6;
  if (v2 >= 0x40)
    bzero(v5, 8 * v7);
  if ((v2 & 0x3F) != 0)
  {
    v8 = &v5[v7];
    *(_QWORD *)a1 = v8;
    *v8 &= ~(0xFFFFFFFFFFFFFFFFLL >> -(v2 & 0x3F));
  }
}

void sub_FC180(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  void *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;

  sub_FC220(a1);
  v4 = *a2;
  *a2 = 0;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = v4;
  if (v5)
    operator delete(v5);
  v8 = a2[2];
  v7 = a2 + 2;
  v6 = v8;
  v9 = *(v7 - 1);
  *(_QWORD *)(a1 + 16) = v8;
  *(_QWORD *)(a1 + 8) = v9;
  *(v7 - 1) = 0;
  v10 = v7[1];
  *(_QWORD *)(a1 + 24) = v10;
  *(_DWORD *)(a1 + 32) = *((_DWORD *)v7 + 4);
  if (v10)
  {
    v11 = *(_QWORD *)(v6 + 8);
    v12 = *(_QWORD *)(a1 + 8);
    if ((v12 & (v12 - 1)) != 0)
    {
      if (v11 >= v12)
        v11 %= v12;
    }
    else
    {
      v11 &= v12 - 1;
    }
    *(_QWORD *)(*(_QWORD *)a1 + 8 * v11) = a1 + 16;
    *v7 = 0;
    v7[1] = 0;
  }
}

void sub_FC220(uint64_t a1)
{
  uint64_t v2;
  uint64_t i;

  if (*(_QWORD *)(a1 + 24))
  {
    sub_3571C(a1, *(id **)(a1 + 16));
    *(_QWORD *)(a1 + 16) = 0;
    v2 = *(_QWORD *)(a1 + 8);
    if (v2)
    {
      for (i = 0; i != v2; ++i)
        *(_QWORD *)(*(_QWORD *)a1 + 8 * i) = 0;
    }
    *(_QWORD *)(a1 + 24) = 0;
  }
}

uint64_t sub_FC274(uint64_t a1, void *a2, void *a3, void *a4, void *a5, uint64_t a6)
{
  id v11;
  id v12;
  id v13;

  v11 = a3;
  v12 = a4;
  v13 = a5;
  objc_initWeak((id *)a1, a2);
  *(_QWORD *)(a1 + 8) = v11;
  *(_QWORD *)(a1 + 16) = v12;
  *(_QWORD *)(a1 + 24) = v13;
  *(_QWORD *)(a1 + 32) = a6;
  return a1;
}

void sub_FC2E0(_QWORD *a1, uint64_t a2)
{
  *a1 = a2;
  operator new();
}

void sub_FC344(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_FC438((id **)va, 0);
  _Unwind_Resume(a1);
}

void sub_FC360(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete();
}

id *sub_FC384(uint64_t a1)
{
  id *result;

  result = *(id **)(a1 + 24);
  if (result)
  {
    sub_FC3F8(result);
    operator delete();
  }
  return result;
}

uint64_t sub_FC3B8(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 24;
  }
  else
  {
    return 0;
  }
}

id *sub_FC3F8(id *a1)
{

  objc_destroyWeak(a1);
  return a1;
}

id *sub_FC438(id **a1, id *a2)
{
  id *result;

  result = *a1;
  *a1 = a2;
  if (result)
  {
    sub_FC3F8(result);
    operator delete();
  }
  return result;
}

void *sub_FC474(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62)
    sub_69F8();
  return operator new(4 * a2);
}

unsigned __int16 *sub_FC4A8(uint64_t a1, unsigned __int16 *a2, uint64_t a3)
{
  unint64_t v3;
  int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint8x8_t v10;
  void **v11;
  unsigned __int16 *v12;
  unint64_t v13;
  float v15;
  float v16;
  _BOOL8 v17;
  unint64_t v18;
  unint64_t v19;
  size_t v20;
  uint64_t v21;
  _QWORD *v22;
  unint64_t v23;

  v6 = *a2;
  v7 = a2[1];
  v8 = (v6 << 16) | v7;
  v9 = *(_QWORD *)(a1 + 8);
  if (v9)
  {
    v10 = (uint8x8_t)vcnt_s8((int8x8_t)v9);
    v10.i16[0] = vaddlv_u8(v10);
    if (v10.u32[0] > 1uLL)
    {
      v3 = (v6 << 16) | v7;
      if (v9 <= v8)
        v3 = v8 % v9;
    }
    else
    {
      v3 = (v9 - 1) & v8;
    }
    v11 = *(void ***)(*(_QWORD *)a1 + 8 * v3);
    if (v11)
    {
      v12 = (unsigned __int16 *)*v11;
      if (*v11)
      {
        do
        {
          v13 = *((_QWORD *)v12 + 1);
          if (v13 == v8)
          {
            if (v12[9] == (_DWORD)v7 && v12[8] == v6)
              return v12;
          }
          else
          {
            if (v10.u32[0] > 1uLL)
            {
              if (v13 >= v9)
                v13 %= v9;
            }
            else
            {
              v13 &= v9 - 1;
            }
            if (v13 != v3)
              break;
          }
          v12 = *(unsigned __int16 **)v12;
        }
        while (v12);
      }
    }
  }
  v12 = (unsigned __int16 *)operator new(0x70uLL);
  *(_QWORD *)v12 = 0;
  *((_QWORD *)v12 + 1) = v8;
  *((_DWORD *)v12 + 4) = *(_DWORD *)a3;
  *(_OWORD *)(v12 + 28) = *(_OWORD *)(a3 + 40);
  *(_OWORD *)(v12 + 36) = *(_OWORD *)(a3 + 56);
  *(_OWORD *)(v12 + 44) = *(_OWORD *)(a3 + 72);
  *((_QWORD *)v12 + 13) = *(_QWORD *)(a3 + 88);
  *(_OWORD *)(v12 + 12) = *(_OWORD *)(a3 + 8);
  *(_OWORD *)(v12 + 20) = *(_OWORD *)(a3 + 24);
  v15 = (float)(unint64_t)(*(_QWORD *)(a1 + 24) + 1);
  v16 = *(float *)(a1 + 32);
  if (!v9 || (float)(v16 * (float)v9) < v15)
  {
    v17 = 1;
    if (v9 >= 3)
      v17 = (v9 & (v9 - 1)) != 0;
    v18 = v17 | (2 * v9);
    v19 = vcvtps_u32_f32(v15 / v16);
    if (v18 <= v19)
      v20 = v19;
    else
      v20 = v18;
    sub_6A20(a1, v20);
    v9 = *(_QWORD *)(a1 + 8);
    if ((v9 & (v9 - 1)) != 0)
    {
      if (v9 <= v8)
        v3 = v8 % v9;
      else
        v3 = v8;
    }
    else
    {
      v3 = (v9 - 1) & v8;
    }
  }
  v21 = *(_QWORD *)a1;
  v22 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v3);
  if (v22)
  {
    *(_QWORD *)v12 = *v22;
LABEL_42:
    *v22 = v12;
    goto LABEL_43;
  }
  *(_QWORD *)v12 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v12;
  *(_QWORD *)(v21 + 8 * v3) = a1 + 16;
  if (*(_QWORD *)v12)
  {
    v23 = *(_QWORD *)(*(_QWORD *)v12 + 8);
    if ((v9 & (v9 - 1)) != 0)
    {
      if (v23 >= v9)
        v23 %= v9;
    }
    else
    {
      v23 &= v9 - 1;
    }
    v22 = (_QWORD *)(*(_QWORD *)a1 + 8 * v23);
    goto LABEL_42;
  }
LABEL_43:
  ++*(_QWORD *)(a1 + 24);
  return v12;
}

void sub_FC6F4(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

NSMutableString *sub_FC708(char a1)
{
  NSMutableString *v2;
  char v3;

  v2 = objc_opt_new(NSMutableString);
  -[NSMutableString appendString:](v2, "appendString:", CFSTR("("));
  if ((a1 & 1) == 0)
  {
    if ((a1 & 4) == 0)
    {
      if ((a1 & 8) == 0)
      {
        v3 = 1;
        if ((a1 & 0x10) != 0)
          goto LABEL_5;
LABEL_16:
        if ((a1 & 0x20) == 0)
          goto LABEL_20;
        if ((v3 & 1) != 0)
        {
LABEL_19:
          -[NSMutableString appendString:](v2, "appendString:", CFSTR("other"));
          goto LABEL_20;
        }
LABEL_18:
        -[NSMutableString appendString:](v2, "appendString:", CFSTR(","));
        goto LABEL_19;
      }
      goto LABEL_14;
    }
    goto LABEL_11;
  }
  -[NSMutableString appendString:](v2, "appendString:", CFSTR("size"));
  if ((a1 & 4) != 0)
  {
    -[NSMutableString appendString:](v2, "appendString:", CFSTR(","));
LABEL_11:
    -[NSMutableString appendString:](v2, "appendString:", CFSTR("sizeClass"));
  }
  if ((a1 & 8) == 0)
    goto LABEL_15;
  -[NSMutableString appendString:](v2, "appendString:", CFSTR(","));
LABEL_14:
  -[NSMutableString appendString:](v2, "appendString:", CFSTR("configuration"));
LABEL_15:
  v3 = 0;
  if ((a1 & 0x10) == 0)
    goto LABEL_16;
LABEL_5:
  if ((v3 & 1) == 0)
    -[NSMutableString appendString:](v2, "appendString:", CFSTR(","));
  -[NSMutableString appendString:](v2, "appendString:", CFSTR("style"));
  if ((a1 & 0x20) != 0)
    goto LABEL_18;
LABEL_20:
  -[NSMutableString appendString:](v2, "appendString:", CFSTR(")"));
  return v2;
}

void sub_FC81C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

_QWORD *sub_FC830(uint64_t a1, unsigned __int16 *a2, uint64_t a3, _DWORD **a4)
{
  unint64_t v4;
  int v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint8x8_t v11;
  void **v12;
  _QWORD *v13;
  unint64_t v14;
  _QWORD *v16;
  float v17;
  float v18;
  _BOOL8 v19;
  unint64_t v20;
  unint64_t v21;
  size_t v22;
  uint64_t v23;
  _QWORD *v24;
  unint64_t v25;

  v7 = *a2;
  v8 = a2[1];
  v9 = (v7 << 16) | v8;
  v10 = *(_QWORD *)(a1 + 8);
  if (v10)
  {
    v11 = (uint8x8_t)vcnt_s8((int8x8_t)v10);
    v11.i16[0] = vaddlv_u8(v11);
    if (v11.u32[0] > 1uLL)
    {
      v4 = (v7 << 16) | v8;
      if (v10 <= v9)
        v4 = v9 % v10;
    }
    else
    {
      v4 = (v10 - 1) & v9;
    }
    v12 = *(void ***)(*(_QWORD *)a1 + 8 * v4);
    if (v12)
    {
      v13 = *v12;
      if (*v12)
      {
        do
        {
          v14 = v13[1];
          if (v14 == v9)
          {
            if (*((unsigned __int16 *)v13 + 9) == (_DWORD)v8 && *((unsigned __int16 *)v13 + 8) == v7)
              return v13;
          }
          else
          {
            if (v11.u32[0] > 1uLL)
            {
              if (v14 >= v10)
                v14 %= v10;
            }
            else
            {
              v14 &= v10 - 1;
            }
            if (v14 != v4)
              break;
          }
          v13 = (_QWORD *)*v13;
        }
        while (v13);
      }
    }
  }
  v16 = (_QWORD *)(a1 + 16);
  v13 = operator new(0x20uLL);
  *v13 = 0;
  v13[1] = v9;
  *((_DWORD *)v13 + 4) = **a4;
  v13[3] = 0;
  v17 = (float)(unint64_t)(*(_QWORD *)(a1 + 24) + 1);
  v18 = *(float *)(a1 + 32);
  if (!v10 || (float)(v18 * (float)v10) < v17)
  {
    v19 = 1;
    if (v10 >= 3)
      v19 = (v10 & (v10 - 1)) != 0;
    v20 = v19 | (2 * v10);
    v21 = vcvtps_u32_f32(v17 / v18);
    if (v20 <= v21)
      v22 = v21;
    else
      v22 = v20;
    sub_6A20(a1, v22);
    v10 = *(_QWORD *)(a1 + 8);
    if ((v10 & (v10 - 1)) != 0)
    {
      if (v10 <= v9)
        v4 = v9 % v10;
      else
        v4 = v9;
    }
    else
    {
      v4 = (v10 - 1) & v9;
    }
  }
  v23 = *(_QWORD *)a1;
  v24 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v4);
  if (v24)
  {
    *v13 = *v24;
LABEL_42:
    *v24 = v13;
    goto LABEL_43;
  }
  *v13 = *v16;
  *v16 = v13;
  *(_QWORD *)(v23 + 8 * v4) = v16;
  if (*v13)
  {
    v25 = *(_QWORD *)(*v13 + 8);
    if ((v10 & (v10 - 1)) != 0)
    {
      if (v25 >= v10)
        v25 %= v10;
    }
    else
    {
      v25 &= v10 - 1;
    }
    v24 = (_QWORD *)(*(_QWORD *)a1 + 8 * v25);
    goto LABEL_42;
  }
LABEL_43:
  ++*(_QWORD *)(a1 + 24);
  return v13;
}

void sub_FCA78(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  sub_15258(v2, v1);
  _Unwind_Resume(a1);
}

void sub_FCA94(_QWORD *a1, uint64_t a2)
{
  *a1 = a2;
  operator new();
}

void sub_FCAF8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_FCBAC((id **)va, 0);
  _Unwind_Resume(a1);
}

void sub_FCB14(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete();
}

id *sub_FCB38(uint64_t a1)
{
  id *result;

  result = *(id **)(a1 + 24);
  if (result)
  {
    TUI::Evaluation::Context::Snapshot::~Snapshot(result);
    operator delete();
  }
  return result;
}

uint64_t sub_FCB6C(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 24;
  }
  else
  {
    return 0;
  }
}

id *sub_FCBAC(id **a1, id *a2)
{
  id *result;

  result = *a1;
  *a1 = a2;
  if (result)
  {
    TUI::Evaluation::Context::Snapshot::~Snapshot(result);
    operator delete();
  }
  return result;
}

char *sub_FCBE8(char *result, char *__src, uint64_t a3, unint64_t a4)
{
  _QWORD *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  void **v12;
  char *v13;
  _BYTE *v14;
  unint64_t v15;
  char *v16;
  size_t v17;
  void *v18;
  char *v19;

  v7 = result;
  v8 = *((_QWORD *)result + 2);
  v9 = *(char **)result;
  if (a4 > (v8 - *(_QWORD *)result) >> 2)
  {
    if (v9)
    {
      *((_QWORD *)result + 1) = v9;
      operator delete(v9);
      v8 = 0;
      *v7 = 0;
      v7[1] = 0;
      v7[2] = 0;
    }
    if (a4 >> 62)
      sub_6F9C();
    v10 = v8 >> 1;
    if (v8 >> 1 <= a4)
      v10 = a4;
    if ((unint64_t)v8 >= 0x7FFFFFFFFFFFFFFCLL)
      v11 = 0x3FFFFFFFFFFFFFFFLL;
    else
      v11 = v10;
    result = sub_FCCF0(v7, v11);
    v13 = (char *)v7[1];
    v12 = (void **)(v7 + 1);
    v9 = v13;
LABEL_16:
    v17 = a3 - (_QWORD)__src;
    if (v17)
    {
      v18 = v9;
      v19 = __src;
      goto LABEL_18;
    }
    goto LABEL_19;
  }
  v12 = (void **)(result + 8);
  v14 = (_BYTE *)*((_QWORD *)result + 1);
  v15 = (v14 - v9) >> 2;
  if (v15 >= a4)
    goto LABEL_16;
  v16 = &__src[4 * v15];
  if (v14 != v9)
  {
    result = (char *)memmove(*(void **)result, __src, v14 - v9);
    v9 = (char *)*v12;
  }
  v17 = a3 - (_QWORD)v16;
  if (v17)
  {
    v18 = v9;
    v19 = v16;
LABEL_18:
    result = (char *)memmove(v18, v19, v17);
  }
LABEL_19:
  *v12 = &v9[v17];
  return result;
}

char *sub_FCCF0(_QWORD *a1, unint64_t a2)
{
  char *result;
  uint64_t v4;

  if (a2 >> 62)
    sub_6F9C();
  result = (char *)sub_FC474((uint64_t)(a1 + 2), a2);
  *a1 = result;
  a1[1] = result;
  a1[2] = &result[4 * v4];
  return result;
}

_QWORD *sub_FCD30(_QWORD *result, const void *a2, uint64_t a3, unint64_t a4)
{
  _QWORD *v6;
  uint64_t v7;
  size_t v8;

  if (a4)
  {
    v6 = result;
    result = sub_FCCF0(result, a4);
    v7 = v6[1];
    v8 = a3 - (_QWORD)a2;
    if (v8)
      result = memmove((void *)v6[1], a2, v8);
    v6[1] = v7 + v8;
  }
  return result;
}

void sub_FCD8C(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void *v3;

  v3 = *(void **)v1;
  if (*(_QWORD *)v1)
  {
    *(_QWORD *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

_QWORD *sub_FCDA8(uint64_t a1, unsigned __int16 *a2, _DWORD *a3)
{
  unint64_t v3;
  int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint8x8_t v10;
  void **v11;
  _QWORD *v12;
  unint64_t v13;
  float v15;
  float v16;
  _BOOL8 v17;
  unint64_t v18;
  unint64_t v19;
  size_t v20;
  uint64_t v21;
  _QWORD *v22;
  unint64_t v23;

  v6 = *a2;
  v7 = a2[1];
  v8 = (v6 << 16) | v7;
  v9 = *(_QWORD *)(a1 + 8);
  if (v9)
  {
    v10 = (uint8x8_t)vcnt_s8((int8x8_t)v9);
    v10.i16[0] = vaddlv_u8(v10);
    if (v10.u32[0] > 1uLL)
    {
      v3 = (v6 << 16) | v7;
      if (v9 <= v8)
        v3 = v8 % v9;
    }
    else
    {
      v3 = (v9 - 1) & v8;
    }
    v11 = *(void ***)(*(_QWORD *)a1 + 8 * v3);
    if (v11)
    {
      v12 = *v11;
      if (*v11)
      {
        do
        {
          v13 = v12[1];
          if (v13 == v8)
          {
            if (*((unsigned __int16 *)v12 + 9) == (_DWORD)v7 && *((unsigned __int16 *)v12 + 8) == v6)
              return v12;
          }
          else
          {
            if (v10.u32[0] > 1uLL)
            {
              if (v13 >= v9)
                v13 %= v9;
            }
            else
            {
              v13 &= v9 - 1;
            }
            if (v13 != v3)
              break;
          }
          v12 = (_QWORD *)*v12;
        }
        while (v12);
      }
    }
  }
  v12 = operator new(0x18uLL);
  *v12 = 0;
  v12[1] = v8;
  *((_DWORD *)v12 + 4) = *a3;
  v15 = (float)(unint64_t)(*(_QWORD *)(a1 + 24) + 1);
  v16 = *(float *)(a1 + 32);
  if (!v9 || (float)(v16 * (float)v9) < v15)
  {
    v17 = 1;
    if (v9 >= 3)
      v17 = (v9 & (v9 - 1)) != 0;
    v18 = v17 | (2 * v9);
    v19 = vcvtps_u32_f32(v15 / v16);
    if (v18 <= v19)
      v20 = v19;
    else
      v20 = v18;
    sub_6A20(a1, v20);
    v9 = *(_QWORD *)(a1 + 8);
    if ((v9 & (v9 - 1)) != 0)
    {
      if (v9 <= v8)
        v3 = v8 % v9;
      else
        v3 = v8;
    }
    else
    {
      v3 = (v9 - 1) & v8;
    }
  }
  v21 = *(_QWORD *)a1;
  v22 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v3);
  if (v22)
  {
    *v12 = *v22;
LABEL_42:
    *v22 = v12;
    goto LABEL_43;
  }
  *v12 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v12;
  *(_QWORD *)(v21 + 8 * v3) = a1 + 16;
  if (*v12)
  {
    v23 = *(_QWORD *)(*v12 + 8);
    if ((v9 & (v9 - 1)) != 0)
    {
      if (v23 >= v9)
        v23 %= v9;
    }
    else
    {
      v23 &= v9 - 1;
    }
    v22 = (_QWORD *)(*(_QWORD *)a1 + 8 * v23);
    goto LABEL_42;
  }
LABEL_43:
  ++*(_QWORD *)(a1 + 24);
  return v12;
}

void sub_FCFC4(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

void sub_FCFD8(_QWORD *a1, uint64_t a2)
{
  *a1 = a2;
  operator new();
}

void sub_FD030(_Unwind_Exception *exception_object)
{
  uint64_t v1;

  if (v1)
    (*(void (**)(uint64_t))(*(_QWORD *)v1 + 64))(v1);
  _Unwind_Resume(exception_object);
}

void sub_FD054(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete();
}

uint64_t sub_FD078(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 24);
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 64))(result);
  return result;
}

uint64_t sub_FD090(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 24;
  }
  else
  {
    return 0;
  }
}

uint64_t sub_FD0D0(uint64_t result, uint64_t a2, uint64_t a3, float a4)
{
  *(float *)result = a4;
  *(_QWORD *)(result + 4) = a2;
  *(_WORD *)(result + 12) = 2048;
  *(_QWORD *)(result + 14) = a3;
  return result;
}

void sub_FD0E8(void *a1@<X0>, const char *a2@<X3>, uint8_t *a3@<X4>, NSObject *a4@<X8>)
{
  _os_log_error_impl(a1, a4, OS_LOG_TYPE_ERROR, a2, a3, 0x16u);
}

void sub_FD680(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_FD6E8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_FD72C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_FD788(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_FD7E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_FD850(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_FD8B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_FD940(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_FDA54(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_FDB70(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_FDDBC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_FDDCC(void *a1, void *a2, int a3)
{
  id v5;
  id v6;
  unint64_t v7;
  void *v8;
  void *v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  void *i;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  _BYTE v19[128];

  v5 = a1;
  v6 = a2;
  if (objc_msgSend(v6, "length"))
    objc_msgSend(v6, "appendString:", CFSTR("\n"));
  if (a3)
  {
    v7 = 1;
    do
    {
      objc_msgSend(v6, "appendString:", CFSTR("   | "));
      ++v7;
    }
    while (v7 <= a3);
  }
  if (v5)
  {
    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "description"));
    v9 = v8;
    if (!v8)
      v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("-desc was nil!-")));
    objc_msgSend(v6, "appendString:", v9);
    if (!v8)

  }
  v17 = 0u;
  v18 = 0u;
  v15 = 0u;
  v16 = 0u;
  v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "children", 0));
  v11 = objc_msgSend(v10, "countByEnumeratingWithState:objects:count:", &v15, v19, 16);
  if (v11)
  {
    v12 = *(_QWORD *)v16;
    v13 = (a3 + 1);
    do
    {
      for (i = 0; i != v11; i = (char *)i + 1)
      {
        if (*(_QWORD *)v16 != v12)
          objc_enumerationMutation(v10);
        sub_FDDCC(*(_QWORD *)(*((_QWORD *)&v15 + 1) + 8 * (_QWORD)i), v6, v13);
      }
      v11 = objc_msgSend(v10, "countByEnumeratingWithState:objects:count:", &v15, v19, 16);
    }
    while (v11);
  }

}

void sub_FDF80(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_FE128(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_FE17C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_FE238(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_FE4D4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;

  _Unwind_Resume(a1);
}

void sub_FE690(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_FE9F8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void sub_FEAD4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_FEBF0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_FECA8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

id sub_FECC4(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(*(id *)(a1 + 32), "addObject:", a2);
}

void sub_FED7C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_FFD98(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_FFE38(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_FFF54(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1000C4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_100488(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_100DE8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_100FE8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1010A0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_101894(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, void *a11, void *a12, uint64_t a13, void *a14, uint64_t a15, void *a16, uint64_t a17, void *a18, void *a19, uint64_t a20,void *a21)
{

  _Unwind_Resume(a1);
}

void sub_101E50(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_101F48(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_102008(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_102210(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,void *a32,void *a33)
{
  void *v33;
  void *v34;
  void *v35;
  void *v36;

  _Unwind_Resume(a1);
}

void sub_102260(uint64_t a1, _OWORD *a2)
{
  unsigned int v4;
  id *v5;
  id v6;
  __int128 v7;
  double v8;
  double v9;
  NSMutableArray *v10;
  NSMutableArray *v11;
  void *v12;
  __int128 v13;
  id v14;
  void *v15;
  void *v16;
  void *v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  __int128 v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  _OWORD v31[3];
  CGAffineTransform v32;
  CGAffineTransform v33;
  CGAffineTransform v34;

  v4 = objc_msgSend(*(id *)(a1 + 32), "shouldUseSubviewRenderModelWithContext:", *(_QWORD *)(a1 + 40));
  if (v4)
  {
    v5 = (id *)(a1 + 48);
    v6 = *(id *)(a1 + 48);
    v7 = a2[1];
    *(_OWORD *)&v34.a = *a2;
    *(_OWORD *)&v34.c = v7;
    *(_OWORD *)&v34.tx = a2[2];
    objc_msgSend(*(id *)(a1 + 32), "computedNaturalSize");
    CGAffineTransformMakeTranslation(&v34, v8 * 0.5, v9 * 0.5);
    v10 = objc_opt_new(NSMutableArray);

    v11 = v10;
  }
  else
  {
    v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 24), "submodel"));
    v5 = (id *)(a1 + 48);
    v11 = (NSMutableArray *)*(id *)(a1 + 48);
    v13 = a2[1];
    *(_OWORD *)&v34.a = *a2;
    *(_OWORD *)&v34.c = v13;
    *(_OWORD *)&v34.tx = a2[2];
    if (v12)
      goto LABEL_6;
  }
  v14 = objc_msgSend(*(id *)(a1 + 32), "newRenderModelCompatibleWithKind:context:", *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 40));
  if (!v14)
  {
    v15 = 0;
LABEL_10:
    v18 = *(_QWORD *)(a1 + 56);
    v19 = *(void **)(a1 + 32);
    v20 = *(_QWORD *)(a1 + 40);
    v32 = v34;
    objc_msgSend(v19, "appendChildRenderModelCompatibleWithKind:context:transform:toModels:", v18, v20, &v32, v11);
    goto LABEL_11;
  }
  v12 = v14;
LABEL_6:
  v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "convertRenderModel:toKind:", v12, *(_QWORD *)(a1 + 56)));

  v33 = v34;
  v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_transformedRenderModel:transform:context:allowCache:", v15, &v33, *(_QWORD *)(a1 + 40), v4 ^ 1));
  v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "currentLiveTransform"));
  objc_msgSend(v16, "setLiveTransform:", v17);

  -[NSMutableArray addObject:](v11, "addObject:", v16);
  if (!v15 || objc_msgSend(*(id *)(a1 + 32), "shouldAppendChildRenderModels"))
    goto LABEL_10;
LABEL_11:
  if (v4)
  {
    v21 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "renderModelForLayout:submodels:kind:", *(_QWORD *)(a1 + 32), v11, 6));
    v22 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "box"));
    v23 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v22, "identifier"));
    v24 = (void *)objc_claimAutoreleasedReturnValue(+[TUIContainerView renderModelWithSubviewsModel:style:identifier:](TUIContainerView, "renderModelWithSubviewsModel:style:identifier:", v21, 0, v23));

    objc_msgSend(*(id *)(a1 + 32), "renderModelSizeWithContext:", *(_QWORD *)(a1 + 40));
    objc_msgSend(v24, "setSize:");
    v25 = a2[1];
    v31[0] = *a2;
    v31[1] = v25;
    v31[2] = a2[2];
    v26 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_transformedRenderModel:transform:context:allowCache:", v24, v31, *(_QWORD *)(a1 + 40), 1));
    v27 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "currentLiveTransform"));
    objc_msgSend(v26, "setLiveTransform:", v27);

    objc_msgSend(*v5, "addObject:", v26);
  }
  if (*(_QWORD *)(*(_QWORD *)(a1 + 32) + 24))
  {
    v28 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v15, "animationGroups"));

    if (v28)
    {
      v29 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v15, "animationGroups"));
      v30 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v29, "generateAllGroupRenderModelsFromSource:", *(_QWORD *)(*(_QWORD *)(a1 + 32) + 24)));
      objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 24), "setAnimationRenderModels:", v30);

    }
  }

}

void sub_102568(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

uint64_t sub_102610(uint64_t a1)
{
  double v2;
  double v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  CGAffineTransform v9;
  CGAffineTransform v10;

  objc_msgSend(*(id *)(a1 + 32), "computedTransformedSize");
  memset(&v10, 0, sizeof(v10));
  CGAffineTransformMakeTranslation(&v10, v2 * 0.5, v3 * 0.5);
  v4 = *(_QWORD *)(a1 + 40);
  v9 = v10;
  return (*(uint64_t (**)(uint64_t, CGAffineTransform *, _QWORD, uint64_t, uint64_t, uint64_t))(v4 + 16))(v4, &v9, 0, v5, v6, v7);
}

void sub_10282C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1029AC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_102AC0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_102B94(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_102C5C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_102CC4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_102D84(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_102E28(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_102EB8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_102F30(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_102FA8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_103144(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1031B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1032F8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_103508(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_103648(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1036C4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_103730(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1038F8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_103A14(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_103A9C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_103B04(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_103BA8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_103C68(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_103DC4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_103E60(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_103F30(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_104124(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

NSMutableString *TUILayoutDump(void *a1, void *a2)
{
  id v3;
  void *v4;
  unsigned int v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  NSMutableString *v9;
  NSMutableString *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v3 = a1;
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "componentsSeparatedByString:", CFSTR(",")));
  v5 = objc_msgSend(v4, "containsObject:", CFSTR("ptr"));
  v6 = objc_msgSend(v4, "containsObject:", CFSTR("box"));
  v7 = objc_msgSend(v4, "containsObject:", CFSTR("id"));
  v8 = objc_msgSend(v4, "containsObject:", CFSTR("content"));
  v9 = objc_opt_new(NSMutableString);
  v10 = v9;
  v11 = 2;
  if (!v6)
    v11 = 0;
  v12 = v11 | v5;
  v13 = 4;
  if (!v7)
    v13 = 0;
  v14 = 8;
  if (!v8)
    v14 = 0;
  sub_10432C(v9, v3, v12 | v13 | v14, 0);

  return v10;
}

void sub_104300(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_10432C(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  id v7;
  id v8;
  uint64_t v9;
  void *v10;
  objc_class *v11;
  NSString *v12;
  void *v13;
  NSString *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  objc_class *v20;
  NSString *v21;
  void *v22;
  void *v23;
  uint64_t v24;
  void *v25;
  void *v26;
  id v27;
  void *v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  void *v33;
  const __CFString *v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  _BYTE v39[128];
  NSRect v40;

  v7 = a1;
  v8 = a2;
  v9 = 2 * a4;
  v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(&stru_243BF0, "stringByPaddingToLength:withString:startingAtIndex:", 2 * a4, CFSTR(" "), 0));
  objc_msgSend(v7, "appendString:", v10);

  v11 = (objc_class *)objc_opt_class(v8);
  v12 = NSStringFromClass(v11);
  v13 = (void *)objc_claimAutoreleasedReturnValue(v12);
  objc_msgSend(v8, "computedFrame");
  v14 = NSStringFromRect(v40);
  v15 = (void *)objc_claimAutoreleasedReturnValue(v14);
  objc_msgSend(v7, "appendFormat:", CFSTR("%@ %@"), v13, v15);

  if ((a3 & 1) != 0)
    objc_msgSend(v7, "appendFormat:", CFSTR(" %p"), v8);
  if ((a3 & 4) != 0)
  {
    v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "box"));
    v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v16, "identifier"));
    v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v17, "tui_identifierToString"));
    objc_msgSend(v7, "appendFormat:", CFSTR(" id=%@"), v18);

  }
  if ((a3 & 2) != 0)
  {
    v19 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "box"));
    v20 = (objc_class *)objc_opt_class(v19);
    v21 = NSStringFromClass(v20);
    v22 = (void *)objc_claimAutoreleasedReturnValue(v21);
    v23 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "box"));
    objc_msgSend(v7, "appendFormat:", CFSTR(" box=<%@ %p/>"), v22, v23);

  }
  if ((a3 & 8) != 0)
  {
    v24 = objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "debugContentDescription"));
    v25 = (void *)v24;
    if (v24)
      objc_msgSend(v7, "appendFormat:", CFSTR(" %@"), v24);

  }
  v26 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "children"));
  v27 = objc_msgSend(v26, "count");

  if (v27)
  {
    objc_msgSend(v7, "appendString:", CFSTR("{\n"));
    v37 = 0u;
    v38 = 0u;
    v35 = 0u;
    v36 = 0u;
    v28 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "children"));
    v29 = objc_msgSend(v28, "countByEnumeratingWithState:objects:count:", &v35, v39, 16);
    if (v29)
    {
      v30 = *(_QWORD *)v36;
      v31 = a4 + 1;
      do
      {
        v32 = 0;
        do
        {
          if (*(_QWORD *)v36 != v30)
            objc_enumerationMutation(v28);
          sub_10432C(v7, *(_QWORD *)(*((_QWORD *)&v35 + 1) + 8 * (_QWORD)v32), a3, v31);
          v32 = (char *)v32 + 1;
        }
        while (v29 != v32);
        v29 = objc_msgSend(v28, "countByEnumeratingWithState:objects:count:", &v35, v39, 16);
      }
      while (v29);
    }

    v33 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(&stru_243BF0, "stringByPaddingToLength:withString:startingAtIndex:", v9, CFSTR(" "), 0));
    objc_msgSend(v7, "appendString:", v33);

    v34 = CFSTR("}\n");
  }
  else
  {
    v34 = CFSTR("\n");
  }
  objc_msgSend(v7, "appendString:", v34);

}

void sub_104640(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1046C8(id a1)
{
  NSBundle *v1;
  void *v2;
  void *v3;
  uint64_t v4;
  id v5;
  void *v6;
  id v7;

  v1 = +[NSBundle bundleForClass:](NSBundle, "bundleForClass:", objc_opt_class(TUIBox));
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "URLForResource:withExtension:", CFSTR("TUILayout"), CFSTR("ppkg")));
  v7 = 0;
  v4 = objc_claimAutoreleasedReturnValue(+[NSData dataWithContentsOfURL:options:error:](NSData, "dataWithContentsOfURL:options:error:", v3, 8, &v7));
  v5 = v7;
  v6 = (void *)qword_2CB728;
  qword_2CB728 = v4;

}

void sub_104780(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_106020(uint64_t a1, double a2)
{
  double v2;
  id v3;

  LOBYTE(a2) = *(_BYTE *)(a1 + 40);
  v2 = (double)*(unint64_t *)&a2;
  v3 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "posterFrameImageView"));
  objc_msgSend(v3, "setAlpha:", v2);

}

void sub_106064(uint64_t a1, double a2)
{
  double v2;
  id v3;

  LOBYTE(a2) = *(_BYTE *)(a1 + 40);
  v2 = (double)*(unint64_t *)&a2;
  v3 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "posterFrameImageView"));
  objc_msgSend(v3, "setAlpha:", v2);

}

void sub_1061BC(uint64_t a1, double a2)
{
  double v2;
  id v3;

  LOBYTE(a2) = *(_BYTE *)(a1 + 40);
  v2 = (double)*(unint64_t *)&a2;
  v3 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "playButton"));
  objc_msgSend(v3, "setAlpha:", v2);

}

void sub_106200(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;
  id v5;

  v2 = *(unsigned __int8 *)(a1 + 40);
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "playButton"));
  objc_msgSend(v3, "setEnabled:", v2);

  v4 = *(unsigned __int8 *)(a1 + 40);
  v5 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "playButton"));
  objc_msgSend(v5, "setUserInteractionEnabled:", v4);

}

void sub_10626C(uint64_t a1, double a2)
{
  double v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  id v8;

  LOBYTE(a2) = *(_BYTE *)(a1 + 40);
  v3 = (double)*(unint64_t *)&a2;
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "playButton"));
  objc_msgSend(v4, "setAlpha:", v3);

  v5 = *(unsigned __int8 *)(a1 + 40);
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "playButton"));
  objc_msgSend(v6, "setEnabled:", v5);

  v7 = *(unsigned __int8 *)(a1 + 40);
  v8 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "playButton"));
  objc_msgSend(v8, "setUserInteractionEnabled:", v7);

}

void sub_107108(uint64_t a1)
{
  void *v2;
  id v3;
  void *v4;
  id v5;

  v5 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "imageContentWithOptions:", 1));
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "image"));
  v3 = objc_msgSend(v2, "newImage");

  if (v3)
  {
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "posterFrameImageView"));
    objc_msgSend(v4, "setImage:", v3);

  }
}

void sub_1079EC(uint64_t a1, void *a2)
{
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  double v7;
  double v8;
  void *v9;
  void *v10;

  if ((objc_msgSend(a2, "isCancelled") & 1) == 0)
  {
    *(_BYTE *)(*(_QWORD *)(a1 + 32) + 32) = 1;
    v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "feedControllerHost"));
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "videoPlayerManager"));
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 24), "videoId"));
    objc_msgSend(v4, "setMuteStateForPlayerWithVideoId:muted:requestingHost:isTriggerInitiated:", v5, 0, *(_QWORD *)(a1 + 32), 1);

    objc_msgSend(*(id *)(a1 + 32), "_configureVideoViewController");
    objc_msgSend(*(id *)(a1 + 32), "_updateStateBasedSubviewsAnimated:", 1);
    objc_msgSend(*(id *)(a1 + 32), "_updateStateBasedTapGestureRecognizers");
    v6 = *(void **)(a1 + 32);
    objc_msgSend(v6, "currentTime");
    v8 = v7;
    v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 24), "videoId"));
    objc_msgSend(v6, "_reportEvent:mediaTimePlayed:videoId:", 5, v9, v8);

    v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "videoViewController"));
    objc_msgSend(v10, "flashPlaybackControlsWithDuration:", 3.0);

  }
  *(_BYTE *)(*(_QWORD *)(a1 + 32) + 33) = 0;
}

void sub_107B8C(uint64_t a1, void *a2)
{
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  double v7;
  double v8;
  void *v9;

  if ((objc_msgSend(a2, "isCancelled") & 1) == 0)
  {
    *(_BYTE *)(*(_QWORD *)(a1 + 32) + 32) = 0;
    v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "feedControllerHost"));
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "videoPlayerManager"));
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 24), "videoId"));
    objc_msgSend(v4, "setMuteStateForPlayerWithVideoId:muted:requestingHost:isTriggerInitiated:", v5, 1, *(_QWORD *)(a1 + 32), 1);

    objc_msgSend(*(id *)(a1 + 32), "_configureVideoViewController");
    objc_msgSend(*(id *)(a1 + 32), "_updateStateBasedSubviewsAnimated:", 1);
    objc_msgSend(*(id *)(a1 + 32), "_updateStateBasedTapGestureRecognizers");
    v6 = *(void **)(a1 + 32);
    objc_msgSend(v6, "currentTime");
    v8 = v7;
    v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 24), "videoId"));
    objc_msgSend(v6, "_reportEvent:mediaTimePlayed:videoId:", 6, v9, v8);

  }
  *(_BYTE *)(*(_QWORD *)(a1 + 32) + 33) = 0;
}

void sub_107D40(uint64_t a1)
{
  id v1;

  v1 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "videoViewController"));
  objc_msgSend(v1, "flashPlaybackControlsWithDuration:", 100.0);

}

void sub_1082DC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_108334(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1083C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_10842C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_108500(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_108610(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1086CC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_10872C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_10885C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_108ABC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_108AF0(uint64_t a1, unint64_t a2)
{
  unint64_t v2;

  v2 = (uint64_t)(*(_QWORD *)(a1 + 8) - *(_QWORD *)a1) >> 2;
  if (a2 <= v2)
  {
    if (a2 < v2)
      *(_QWORD *)(a1 + 8) = *(_QWORD *)a1 + 4 * a2;
  }
  else
  {
    sub_10A2A0((char **)a1, a2 - v2);
  }
}

void sub_108C6C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_108D50(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_108DE0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_108E68(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_108EF8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_109010(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_109178(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_109644(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, void *a12, uint64_t a13, uint64_t a14, uint64_t a15, void *__p, uint64_t a17)
{
  void *v17;
  void *v18;
  void *v19;
  void *v20;

  if (__p)
    operator delete(__p);

  _Unwind_Resume(a1);
}

void sub_1097CC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_109878(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_109910(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_109A0C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_109B94(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_109C10(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_109D14(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_109DE4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_109EBC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_109F58(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_10A00C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

id TUIIdentifierIsEqualToIdentifier(void *a1, void *a2)
{
  id v3;
  id v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  id v12;
  void *v13;
  id v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  void *v20;
  void *v21;

  v3 = a1;
  v4 = a2;
  v6 = v4;
  if (v3 == v4)
  {
    v14 = &dword_0 + 1;
  }
  else if ((v3 == 0) == (v4 != 0))
  {
    v14 = 0;
  }
  else
  {
    v7 = objc_opt_class(_TUIIdentifier, v5);
    v8 = TUIDynamicCast(v7, v3);
    v10 = (void *)objc_claimAutoreleasedReturnValue(v8);
    if (v10)
    {
      v11 = objc_opt_class(_TUIIdentifier, v9);
      v12 = TUIDynamicCast(v11, v6);
      v13 = (void *)objc_claimAutoreleasedReturnValue(v12);
      if (v13)
        v14 = objc_msgSend(v10, "isEqual:", v13);
      else
        v14 = 0;
    }
    else
    {
      v15 = objc_opt_class(NSIndexPath, v9);
      v16 = TUIDynamicCast(v15, v3);
      v13 = (void *)objc_claimAutoreleasedReturnValue(v16);
      if (v13)
      {
        v18 = objc_opt_class(NSIndexPath, v17);
        v19 = TUIDynamicCast(v18, v6);
        v20 = (void *)objc_claimAutoreleasedReturnValue(v19);
        if (v20)
          v14 = objc_msgSend(v13, "isEqual:", v20);
        else
          v14 = 0;
      }
      else
      {
        v20 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "tui_identifierToString"));
        v21 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "tui_identifierToString"));
        v14 = objc_msgSend(v20, "isEqualToString:", v21);

      }
    }

  }
  return v14;
}

void sub_10A208(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;

  _Unwind_Resume(a1);
}

id TUIIdentifierHash(void *a1)
{
  void *v1;
  id v2;

  v1 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1, "tui_identifierToString"));
  v2 = objc_msgSend(v1, "hash");

  return v2;
}

void sub_10A290(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_10A2A0(char **a1, unint64_t a2)
{
  uint64_t v4;
  char *v5;
  char *v6;
  char *v7;
  char *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char *v14;
  char *v15;
  char *v16;
  char *v17;
  int v18;

  v6 = a1[2];
  v4 = (uint64_t)(a1 + 2);
  v5 = v6;
  v7 = *(char **)(v4 - 8);
  if (a2 <= (v6 - v7) >> 2)
  {
    if (a2)
    {
      bzero(*(void **)(v4 - 8), 4 * a2);
      v7 += 4 * a2;
    }
    a1[1] = v7;
  }
  else
  {
    v8 = *a1;
    v9 = v7 - *a1;
    v10 = a2 + (v9 >> 2);
    if (v10 >> 62)
      sub_6F9C();
    v11 = v9 >> 2;
    v12 = v5 - v8;
    if (v12 >> 1 > v10)
      v10 = v12 >> 1;
    if ((unint64_t)v12 >= 0x7FFFFFFFFFFFFFFCLL)
      v13 = 0x3FFFFFFFFFFFFFFFLL;
    else
      v13 = v10;
    if (v13)
    {
      v14 = (char *)sub_FC474(v4, v13);
      v8 = *a1;
      v7 = a1[1];
    }
    else
    {
      v14 = 0;
    }
    v15 = &v14[4 * v11];
    v16 = &v14[4 * v13];
    bzero(v15, 4 * a2);
    v17 = &v15[4 * a2];
    while (v7 != v8)
    {
      v18 = *((_DWORD *)v7 - 1);
      v7 -= 4;
      *((_DWORD *)v15 - 1) = v18;
      v15 -= 4;
    }
    *a1 = v15;
    a1[1] = v17;
    a1[2] = v16;
    if (v8)
      operator delete(v8);
  }
}

id sub_10A568(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  id v5;
  void *v6;
  void *v7;
  void *v9;

  v3 = a2;
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "lastObject"));
  v5 = objc_msgSend(v4, "count");

  if (v5 == *(id *)(a1 + 32))
  {
    v6 = &__NSArray0__struct;
  }
  else
  {
    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "lastObject"));
    v9 = v7;
    v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v9, 1));

  }
  return v6;
}

void sub_10ABD8(id a1)
{
  _TUIRunLoopWaiter *v1;
  void *v2;

  v1 = objc_alloc_init(_TUIRunLoopWaiter);
  v2 = (void *)qword_2CB738;
  qword_2CB738 = (uint64_t)v1;

}

void sub_10AD8C(uint64_t a1)
{
  id v2;
  id v3;
  id v4;
  id v5;
  uint64_t v6;
  void *i;
  id v8;
  NSObject *v9;
  os_signpost_id_t v10;
  id v11;
  NSObject *v12;
  NSObject *v13;
  id v14;
  NSObject *v15;
  NSObject *v16;
  uint8_t v17[16];
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  _BYTE v22[128];

  os_unfair_lock_lock((os_unfair_lock_t)(*(_QWORD *)(a1 + 32) + 24));
  v2 = objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 40), "copy");
  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 40), "removeAllObjects");
  *(_BYTE *)(*(_QWORD *)(a1 + 32) + 8) &= ~1u;
  os_unfair_lock_unlock((os_unfair_lock_t)(*(_QWORD *)(a1 + 32) + 24));
  v20 = 0u;
  v21 = 0u;
  v18 = 0u;
  v19 = 0u;
  v3 = v2;
  v4 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v18, v22, 16);
  if (v4)
  {
    v5 = v4;
    v6 = *(_QWORD *)v19;
    do
    {
      for (i = 0; i != v5; i = (char *)i + 1)
      {
        if (*(_QWORD *)v19 != v6)
          objc_enumerationMutation(v3);
        (*(void (**)(void))(*(_QWORD *)(*((_QWORD *)&v18 + 1) + 8 * (_QWORD)i) + 16))();
      }
      v5 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v18, v22, 16);
    }
    while (v5);
  }

  v8 = TUISignpostFeedViewController();
  v9 = objc_claimAutoreleasedReturnValue(v8);
  v10 = os_signpost_id_generate(v9);

  v11 = TUISignpostFeedViewController();
  v12 = objc_claimAutoreleasedReturnValue(v11);
  v13 = v12;
  if (v10 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v12))
  {
    *(_WORD *)v17 = 0;
    _os_signpost_emit_with_name_impl(&dword_0, v13, OS_SIGNPOST_INTERVAL_BEGIN, v10, "RunLoopWaitForReadyAssertion", (const char *)&unk_23007A, v17, 2u);
  }

  dispatch_group_wait(*(dispatch_group_t *)(*(_QWORD *)(a1 + 32) + 32), 0xFFFFFFFFFFFFFFFFLL);
  v14 = TUISignpostFeedViewController();
  v15 = objc_claimAutoreleasedReturnValue(v14);
  v16 = v15;
  if (v10 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v15))
  {
    *(_WORD *)v17 = 0;
    _os_signpost_emit_with_name_impl(&dword_0, v16, OS_SIGNPOST_INTERVAL_END, v10, "RunLoopWaitForReadyAssertion", (const char *)&unk_23007A, v17, 2u);
  }

}

void sub_10B0B8(uint64_t a1)
{
  os_unfair_lock_lock((os_unfair_lock_t)(*(_QWORD *)(a1 + 32) + 24));
  --*(_QWORD *)(*(_QWORD *)(a1 + 32) + 16);
  os_unfair_lock_unlock((os_unfair_lock_t)(*(_QWORD *)(a1 + 32) + 24));
  dispatch_group_leave(*(dispatch_group_t *)(*(_QWORD *)(a1 + 32) + 32));
}

id sub_10B104(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "invalidate");
}

id sub_10B348(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "invalidate");
}

id sub_10BB94(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "setNeedsEnvironmentUpdate");
}

void sub_10BFF8(id a1, TUIRenderModelSection *a2, double a3, id a4)
{
  void (**v6)(id, void *, void *, double);
  void *v7;
  id v8;
  id v9;
  uint64_t v10;
  void *i;
  void *v12;
  void *v13;
  void *v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  _BYTE v19[128];

  v6 = (void (**)(id, void *, void *, double))a4;
  v15 = 0u;
  v16 = 0u;
  v17 = 0u;
  v18 = 0u;
  v7 = (void *)objc_claimAutoreleasedReturnValue(-[TUIRenderModelSection impressions](a2, "impressions", 0));
  v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v15, v19, 16);
  if (v8)
  {
    v9 = v8;
    v10 = *(_QWORD *)v16;
    do
    {
      for (i = 0; i != v9; i = (char *)i + 1)
      {
        if (*(_QWORD *)v16 != v10)
          objc_enumerationMutation(v7);
        v12 = *(void **)(*((_QWORD *)&v15 + 1) + 8 * (_QWORD)i);
        v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "data"));
        v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "identifier"));
        v6[2](v6, v12, v14, a3);

      }
      v9 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v15, v19, 16);
    }
    while (v9);
  }

}

void sub_10C148(id a1, TUIRenderModelSection *a2, double a3, id a4)
{
  void (**v6)(id, void *, void *, double);
  void *v7;
  id v8;
  id v9;
  uint64_t v10;
  void *i;
  void *v12;
  void *v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  _BYTE v18[128];

  v6 = (void (**)(id, void *, void *, double))a4;
  v14 = 0u;
  v15 = 0u;
  v16 = 0u;
  v17 = 0u;
  v7 = (void *)objc_claimAutoreleasedReturnValue(-[TUIRenderModelSection linkEntities](a2, "linkEntities", 0));
  v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v14, v18, 16);
  if (v8)
  {
    v9 = v8;
    v10 = *(_QWORD *)v15;
    do
    {
      for (i = 0; i != v9; i = (char *)i + 1)
      {
        if (*(_QWORD *)v15 != v10)
          objc_enumerationMutation(v7);
        v12 = *(void **)(*((_QWORD *)&v14 + 1) + 8 * (_QWORD)i);
        v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "identifier"));
        v6[2](v6, v12, v13, a3);

      }
      v9 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v14, v18, 16);
    }
    while (v9);
  }

}

void sub_10CCF0(uint64_t a1)
{
  id v1;

  v1 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "viewIfLoaded"));
  objc_msgSend(v1, "setNeedsLayout");

}

void sub_10D728(uint64_t a1)
{
  id v1;

  --*(_QWORD *)(*(_QWORD *)(a1 + 32) + 48);
  v1 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 248), "imageResourceCache"));
  objc_msgSend(v1, "deferLoadsEnd");

}

id sub_10DD48(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "removeNotifyWhenAppliedDeferral");
}

void sub_10DD50(uint64_t a1)
{
  void *v2;
  _QWORD v3[5];
  id v4;
  id v5;

  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_10DDD4;
  v3[3] = &unk_23E2C8;
  v2 = *(void **)(a1 + 40);
  v3[4] = *(_QWORD *)(a1 + 32);
  v4 = v2;
  v5 = *(id *)(a1 + 48);
  TUIDispatchAsyncViaRunLoop((uint64_t)v3);

}

id sub_10DDD4(uint64_t a1)
{
  void *v2;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 464), "transactionCoordinator"));
  objc_msgSend(v2, "finalizeSyncTransaction:", *(_QWORD *)(a1 + 40));

  return objc_msgSend(*(id *)(a1 + 48), "invalidate");
}

void sub_10E020(uint64_t a1)
{
  void *v2;
  _QWORD v3[5];
  id v4;
  id v5;

  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_10E0A4;
  v3[3] = &unk_23E2C8;
  v2 = *(void **)(a1 + 40);
  v3[4] = *(_QWORD *)(a1 + 32);
  v4 = v2;
  v5 = *(id *)(a1 + 48);
  TUIDispatchAsyncViaRunLoop((uint64_t)v3);

}

id sub_10E0A4(uint64_t a1)
{
  void *v2;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 464), "transactionCoordinator"));
  objc_msgSend(v2, "finalizeSyncTransaction:", *(_QWORD *)(a1 + 40));

  return objc_msgSend(*(id *)(a1 + 48), "invalidate");
}

void sub_10E250(uint64_t a1)
{
  _BYTE *v2;
  void *v3;
  double v4;
  CGFloat v5;
  double v6;
  CGFloat v7;
  double v8;
  CGFloat v9;
  double v10;
  double v11;
  CGFloat v12;
  double v13;
  CGFloat v14;
  double v15;
  CGFloat v16;
  double v17;
  CGFloat v18;
  uint64_t v19;
  uint64_t v20;
  double v21;
  double v22;
  CGFloat v23;
  double Width;
  CGFloat v25;
  double Height;
  CGFloat v27;
  void *v28;
  CGFloat v29;
  CGFloat v30;
  CGFloat v31;
  CGAffineTransform v32;
  CGAffineTransform v33;
  CGRect v34;
  CGRect v35;
  CGRect v36;
  CGRect v37;

  v2 = *(_BYTE **)(a1 + 32);
  if ((v2[304] & 6) != 0)
  {
    v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "view"));
    objc_msgSend(v3, "bounds");
    v5 = v4;
    v7 = v6;
    v9 = v8;
    v31 = v10;

    objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 456), "bounds");
    v12 = v11;
    v14 = v13;
    v16 = v15;
    v18 = v17;
    v19 = *(_QWORD *)(a1 + 32);
    v20 = *(_QWORD *)(v19 + 304);
    v21 = 1.0;
    v29 = v5;
    v30 = v7;
    if ((v20 & 2) != 0)
    {
      v34.origin.x = v5;
      v34.origin.y = v7;
      v34.size.width = v9;
      v23 = v31;
      v34.size.height = v31;
      Width = CGRectGetWidth(v34);
      v35.origin.x = v12;
      v35.origin.y = v14;
      v35.size.width = v16;
      v35.size.height = v18;
      v25 = CGRectGetWidth(v35);
      v19 = *(_QWORD *)(a1 + 32);
      v22 = Width / v25;
      if ((*(_QWORD *)(v19 + 304) & 4) == 0)
      {
LABEL_7:
        CGAffineTransformMakeScale(&v33, v22, v21);
        v28 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(v19 + 456), "layer"));
        v32 = v33;
        objc_msgSend(v28, "setAffineTransform:", &v32);

        return;
      }
    }
    else
    {
      v22 = 1.0;
      v23 = v31;
      if ((v20 & 4) == 0)
        goto LABEL_7;
    }
    v36.origin.x = v29;
    v36.origin.y = v30;
    v36.size.width = v9;
    v36.size.height = v23;
    Height = CGRectGetHeight(v36);
    v37.origin.x = v12;
    v37.origin.y = v14;
    v37.size.width = v16;
    v37.size.height = v18;
    v27 = CGRectGetHeight(v37);
    v19 = *(_QWORD *)(a1 + 32);
    v21 = Height / v27;
    goto LABEL_7;
  }
}

void sub_10E3CC(uint64_t a1)
{
  id v1;

  --*(_QWORD *)(*(_QWORD *)(a1 + 32) + 48);
  v1 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 248), "imageResourceCache"));
  objc_msgSend(v1, "deferLoadsEnd");

}

uint64_t sub_10EE4C(uint64_t a1)
{
  uint64_t result;

  objc_msgSend(*(id *)(a1 + 32), "invalidate");
  result = *(_QWORD *)(a1 + 40);
  if (result)
    return (*(uint64_t (**)(void))(result + 16))();
  return result;
}

void sub_10EE88(uint64_t a1)
{
  void *v1;
  _QWORD v2[5];
  id v3;

  v2[0] = _NSConcreteStackBlock;
  v2[1] = 3221225472;
  v2[2] = sub_10EEEC;
  v2[3] = &unk_23D7D0;
  v1 = *(void **)(a1 + 40);
  v2[4] = *(_QWORD *)(a1 + 32);
  v3 = v1;
  TUIDispatchAsyncViaRunLoop((uint64_t)v2);

}

void sub_10EEEC(uint64_t a1)
{
  id v2;

  v2 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 464), "transactionCoordinator"));
  objc_msgSend(v2, "finalizeSyncTransaction:", *(_QWORD *)(a1 + 40));

}

BOOL sub_10F57C(id a1, TUITransactionGroup *a2, _TUITransaction *a3)
{
  return 1;
}

uint64_t sub_10FE30(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 32), "invalidate");
  return 1;
}

void sub_110EF8(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  id v4;
  void *v5;
  id v6;

  v2 = *(_QWORD *)(a1 + 32);
  v3 = *(void **)(v2 + 344);
  v4 = *(id *)(a1 + 40);
  v5 = *(void **)(v2 + 344);
  *(_QWORD *)(v2 + 344) = v4;
  v6 = v3;

  objc_msgSend(*(id *)(a1 + 32), "_updateNavigationBarItems");
  objc_msgSend(*(id *)(a1 + 32), "_updateNavigationItemTriggerObservanceForCurrentRenderModel:previous:", *(_QWORD *)(a1 + 40), v6);

}

void sub_111F70(uint64_t a1, void *a2, void *a3)
{
  void *v5;
  id v6;
  id v7;
  void *v8;
  id v9;
  _QWORD v10[4];
  id v11;

  v5 = *(void **)(a1 + 32);
  v6 = a3;
  v7 = a2;
  objc_msgSend(v5, "reset");
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472;
  v10[2] = sub_11203C;
  v10[3] = &unk_2419E8;
  v11 = *(id *)(a1 + 32);
  objc_msgSend(v6, "enumerateObjectsUsingBlock:", v10);

  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "imageResources"));
  v9 = objc_msgSend(v8, "copy");
  objc_msgSend(*(id *)(a1 + 40), "setObject:forKeyedSubscript:", v9, v7);

}

void sub_11203C(uint64_t a1, void *a2)
{
  void *v3;
  uint64_t v4;
  __int128 v5;
  _OWORD v6[3];

  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "renderModel"));
  v4 = *(_QWORD *)(a1 + 32);
  v5 = *(_OWORD *)&CGAffineTransformIdentity.c;
  v6[0] = *(_OWORD *)&CGAffineTransformIdentity.a;
  v6[1] = v5;
  v6[2] = *(_OWORD *)&CGAffineTransformIdentity.tx;
  objc_msgSend(v3, "appendResourcesToCollector:transform:", v4, v6);

}

void sub_112380(uint64_t a1)
{
  double v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  void *v10;
  void *v11;
  void *v12;
  __int128 v13;
  _TUIImageResourceReadyWaiter *v14;
  void *v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  void *v19;
  _QWORD v20[4];
  id v21;
  __int128 *v22;
  uint64_t v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;

  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 456), "visibleBounds");
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 456), "currentViewState"));
  v11 = (void *)objc_claimAutoreleasedReturnValue(+[TUIResourceCollector createImageResourceCollectorForNotLoadedInVisibleBounds:viewState:](TUIResourceCollector, "createImageResourceCollectorForNotLoadedInVisibleBounds:viewState:", v10, v3, v5, v7, v9));

  v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 456), "renderModel"));
  v13 = *(_OWORD *)&CGAffineTransformIdentity.c;
  v24 = *(_OWORD *)&CGAffineTransformIdentity.a;
  v25 = v13;
  v26 = *(_OWORD *)&CGAffineTransformIdentity.tx;
  objc_msgSend(v12, "appendResourcesToCollector:transform:", v11, &v24);

  *(_QWORD *)&v24 = 0;
  *((_QWORD *)&v24 + 1) = &v24;
  *(_QWORD *)&v25 = 0x3032000000;
  *((_QWORD *)&v25 + 1) = sub_112578;
  *(_QWORD *)&v26 = sub_112588;
  v14 = [_TUIImageResourceReadyWaiter alloc];
  v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "imageResources"));
  v16 = *(_QWORD *)(a1 + 40);
  v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 408), "userInteractiveCallbackQueue"));
  *((_QWORD *)&v26 + 1) = -[_TUIImageResourceReadyWaiter initWithImageResources:assertion:assertionQueue:](v14, "initWithImageResources:assertion:assertionQueue:", v15, v16, v17);

  v20[0] = _NSConcreteStackBlock;
  v20[1] = 3221225472;
  v20[2] = sub_112590;
  v20[3] = &unk_241A38;
  v18 = *(_QWORD *)(a1 + 56);
  v22 = &v24;
  v23 = v18;
  v19 = *(void **)(a1 + 40);
  v21 = *(id *)(a1 + 48);
  objc_msgSend(v19, "onInvalidate:", v20);

  _Block_object_dispose(&v24, 8);
}

void sub_112560(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_112578(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_112588(uint64_t a1)
{

}

uint64_t sub_112590(_QWORD *a1)
{
  id v2;
  NSObject *v3;
  NSObject *v4;
  os_signpost_id_t v5;
  uint64_t v6;
  void *v7;
  uint64_t result;
  uint8_t v9[16];

  v2 = TUISignpostFeedViewController();
  v3 = objc_claimAutoreleasedReturnValue(v2);
  v4 = v3;
  v5 = a1[6];
  if (v5 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v3))
  {
    *(_WORD *)v9 = 0;
    _os_signpost_emit_with_name_impl(&dword_0, v4, OS_SIGNPOST_INTERVAL_END, v5, "waitForVisibleImageResources", (const char *)&unk_23007A, v9, 2u);
  }

  v6 = *(_QWORD *)(a1[5] + 8);
  v7 = *(void **)(v6 + 40);
  *(_QWORD *)(v6 + 40) = 0;

  result = a1[4];
  if (result)
    return (*(uint64_t (**)(void))(result + 16))();
  return result;
}

void sub_1127CC(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 112), 8);
  _Unwind_Resume(a1);
}

id sub_1127E4(uint64_t a1, uint64_t a2)
{
  id result;

  result = objc_retainBlock(*(id *)(a2 + 40));
  *(_QWORD *)(a1 + 40) = result;
  return result;
}

void sub_11280C(uint64_t a1)
{

}

id sub_112814(uint64_t a1)
{
  _QWORD v2[5];

  v2[0] = _NSConcreteStackBlock;
  v2[1] = 3221225472;
  v2[2] = sub_112868;
  v2[3] = &unk_240288;
  v2[4] = *(_QWORD *)(a1 + 32);
  return TUIDispatchAsyncViaRunLoop((uint64_t)v2);
}

void sub_112868(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v2 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40);
  if (v2)
  {
    (*(void (**)(uint64_t, _QWORD))(v2 + 16))(v2, 0);
    v3 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8);
    v4 = *(void **)(v3 + 40);
    *(_QWORD *)(v3 + 40) = 0;

  }
}

void sub_1128BC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v2 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40);
  if (v2)
  {
    (*(void (**)(uint64_t, uint64_t))(v2 + 16))(v2, 1);
    v3 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8);
    v4 = *(void **)(v3 + 40);
    *(_QWORD *)(v3 + 40) = 0;

  }
}

void sub_112910(uint64_t a1)
{
  double v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  void *v10;
  void *v11;
  void *v12;
  __int128 v13;
  _TUIImageResourceReadyWaiter *v14;
  void *v15;
  uint64_t v16;
  void *v17;
  void *v18;
  _QWORD v19[5];
  __int128 v20;
  __int128 v21;
  __int128 v22;

  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 456), "visibleBounds");
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 456), "currentViewState"));
  v11 = (void *)objc_claimAutoreleasedReturnValue(+[TUIResourceCollector createImageResourceCollectorForNotLoadedInVisibleBounds:viewState:](TUIResourceCollector, "createImageResourceCollectorForNotLoadedInVisibleBounds:viewState:", v10, v3, v5, v7, v9));

  v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 456), "renderModel"));
  v13 = *(_OWORD *)&CGAffineTransformIdentity.c;
  v20 = *(_OWORD *)&CGAffineTransformIdentity.a;
  v21 = v13;
  v22 = *(_OWORD *)&CGAffineTransformIdentity.tx;
  objc_msgSend(v12, "appendResourcesToCollector:transform:", v11, &v20);

  *(_QWORD *)&v20 = 0;
  *((_QWORD *)&v20 + 1) = &v20;
  *(_QWORD *)&v21 = 0x3032000000;
  *((_QWORD *)&v21 + 1) = sub_112578;
  *(_QWORD *)&v22 = sub_112588;
  v14 = [_TUIImageResourceReadyWaiter alloc];
  v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "imageResources"));
  v16 = *(_QWORD *)(a1 + 40);
  v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 408), "userInitiatedCallbackQueue"));
  *((_QWORD *)&v22 + 1) = -[_TUIImageResourceReadyWaiter initWithImageResources:assertion:assertionQueue:](v14, "initWithImageResources:assertion:assertionQueue:", v15, v16, v17);

  v18 = *(void **)(a1 + 40);
  v19[0] = _NSConcreteStackBlock;
  v19[1] = 3221225472;
  v19[2] = sub_112AF0;
  v19[3] = &unk_240288;
  v19[4] = &v20;
  objc_msgSend(v18, "onInvalidate:", v19);
  _Block_object_dispose(&v20, 8);

}

void sub_112AD8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_112AF0(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8);
  v2 = *(void **)(v1 + 40);
  *(_QWORD *)(v1 + 40) = 0;

}

void sub_112D30(uint64_t a1)
{
  id v2;

  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 168), "addRenderOverride:", *(_QWORD *)(a1 + 40));
  v2 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "view"));
  objc_msgSend(v2, "layoutIfNeeded");

}

void sub_112E3C(uint64_t a1)
{
  id v2;

  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 168), "removeRenderOverride:", *(_QWORD *)(a1 + 40));
  v2 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "view"));
  objc_msgSend(v2, "layoutIfNeeded");

}

id sub_113254(uint64_t a1, void *a2, void *a3, double a4, double a5, double a6)
{
  void *v10;
  id v11;
  id v12;
  void *v13;
  void *v14;
  void *v15;

  v10 = *(void **)(*(_QWORD *)(a1 + 32) + 248);
  v11 = a3;
  v12 = a2;
  v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "imageResourceCache"));
  v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "imageResourceForTemplatedURL:baseURL:naturalSize:contentsScale:", v12, v11, a4, a5, a6));

  v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v14, "unprocessedImageResource"));
  return v15;
}

id sub_113558(uint64_t a1)
{
  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 456), "setImpressionSnapshot:", *(_QWORD *)(a1 + 40));
  return objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 144), "updateWithImpressionSnapshot:", *(_QWORD *)(a1 + 40));
}

void sub_114D30(uint64_t a1, void *a2)
{
  void *v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  id v13;

  v13 = a2;
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "overscrollingLiveTransform"));
  objc_msgSend(v13, "defaultScale");
  v5 = v4;
  if (*(double *)(*(_QWORD *)(a1 + 32) + 40) < 0.0)
  {
    objc_msgSend(v13, "defaultSize");
    v7 = *(double *)(*(_QWORD *)(a1 + 32) + 40);
    if (v7 < 0.0)
      v7 = -v7;
    v5 = (v6 + v7) / v6;
  }
  objc_msgSend(v13, "currentScale");
  if (v8 != v5)
  {
    objc_msgSend(v13, "setCurrentScale:", v5);
    v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 16), "liveTransformViewInvalidationMap"));
    v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "objectForKey:", v3));

    v11 = *(void **)(a1 + 40);
    v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "allObjects"));
    objc_msgSend(v11, "invalidateIndexPaths:", v12);

  }
}

BOOL _isLargePad(void)
{
  if (qword_2CB750 != -1)
    dispatch_once(&qword_2CB750, &stru_241B28);
  return dword_2CB748 != 0;
}

void sub_115204(id a1)
{
  void *v1;
  double v2;
  double v3;
  double v4;
  double v5;
  _BOOL4 v6;

  v1 = (void *)objc_claimAutoreleasedReturnValue(+[UIScreen mainScreen](UIScreen, "mainScreen"));
  objc_msgSend(v1, "bounds");
  v3 = v2;
  v5 = v4;

  v6 = v3 == 1366.0;
  if (v5 == 1366.0)
    v6 = 1;
  dword_2CB748 = v6;
}

void sub_115268(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

uint64_t _determineLayoutDirection(UITraitCollection *a1, UIViewController *a2)
{
  UITraitCollection *v3;
  UIViewController *v4;
  uint64_t v5;
  void *v6;

  v3 = a1;
  v4 = a2;
  if (-[UITraitCollection layoutDirection](v3, "layoutDirection"))
  {
    if ((char *)-[UITraitCollection layoutDirection](v3, "layoutDirection") == (char *)&dword_0 + 1)
    {
      v5 = 2;
    }
    else if (_UIApplicationIsExtension())
    {
      v6 = (void *)objc_claimAutoreleasedReturnValue(-[UIViewController viewIfLoaded](v4, "viewIfLoaded"));
      if (objc_msgSend(v6, "effectiveUserInterfaceLayoutDirection") == (char *)&dword_0 + 1)
        v5 = 2;
      else
        v5 = 1;

    }
    else
    {
      v5 = 0;
    }
  }
  else
  {
    v5 = 1;
  }

  return v5;
}

void sub_115318(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

uint64_t _determineActiveAppearance(UITraitCollection *a1)
{
  UITraitCollection *v1;
  uint64_t v2;

  v1 = a1;
  if (-[UITraitCollection _userInterfaceActiveAppearance](v1, "_userInterfaceActiveAppearance") == (char *)&dword_0 + 1)
    v2 = 2;
  else
    v2 = -[UITraitCollection _userInterfaceActiveAppearance](v1, "_userInterfaceActiveAppearance") == 0;

  return v2;
}

void sub_115384(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

BOOL _needsAccessibilityElements(void)
{
  return _AXSApplicationAccessibilityEnabled() != 0;
}

void sub_11584C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;

  v6 = v5;

  _Unwind_Resume(a1);
}

void sub_11588C(id a1, UIMutableTraits *a2)
{
  UIMutableTraits *v2;

  v2 = a2;
  -[UIMutableTraits setActiveAppearance:](v2, "setActiveAppearance:", 1);
  -[UIMutableTraits setUserInterfaceLevel:](v2, "setUserInterfaceLevel:", 0);
  -[UIMutableTraits setUserInterfaceStyle:](v2, "setUserInterfaceStyle:", 1);
  -[UIMutableTraits setHorizontalSizeClass:](v2, "setHorizontalSizeClass:", 2);
  -[UIMutableTraits setVerticalSizeClass:](v2, "setVerticalSizeClass:", 2);

}

void sub_1158F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1159CC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_115A84(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_115B6C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1161FC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;

  _Unwind_Resume(a1);
}

void sub_11639C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_116450(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_116780(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  _Unwind_Resume(a1);
}

void sub_116BDC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  _Unwind_Resume(a1);
}

void sub_116CE0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1175E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11)
{

  _Unwind_Resume(a1);
}

void sub_117640(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11)
{

  _Unwind_Resume(a1);
}

void sub_117960(id a1)
{
  uint64_t v1;
  uint64_t v2;
  id v3;

  v3 = (id)objc_claimAutoreleasedReturnValue(+[UIScreen mainScreen](UIScreen, "mainScreen"));
  objc_msgSend(v3, "bounds");
  qword_2CB758 = v1;
  qword_2CB760 = v2;

}

void sub_1179AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

_QWORD *sub_1179C0(uint64_t a1, unsigned __int16 *a2, _WORD *a3)
{
  unint64_t v3;
  unint64_t v6;
  unint64_t v7;
  uint8x8_t v8;
  void **v9;
  _QWORD *v10;
  unint64_t v11;
  float v12;
  float v13;
  _BOOL8 v14;
  unint64_t v15;
  unint64_t v16;
  size_t v17;
  uint64_t v18;
  _QWORD *v19;
  unint64_t v20;

  v6 = *a2;
  v7 = *(_QWORD *)(a1 + 8);
  if (v7)
  {
    v8 = (uint8x8_t)vcnt_s8((int8x8_t)v7);
    v8.i16[0] = vaddlv_u8(v8);
    if (v8.u32[0] > 1uLL)
    {
      v3 = *a2;
      if (v7 <= v6)
        v3 = v6 % v7;
    }
    else
    {
      v3 = ((_DWORD)v7 - 1) & v6;
    }
    v9 = *(void ***)(*(_QWORD *)a1 + 8 * v3);
    if (v9)
    {
      v10 = *v9;
      if (*v9)
      {
        do
        {
          v11 = v10[1];
          if (v11 == v6)
          {
            if (*((unsigned __int16 *)v10 + 8) == (_DWORD)v6)
              return v10;
          }
          else
          {
            if (v8.u32[0] > 1uLL)
            {
              if (v11 >= v7)
                v11 %= v7;
            }
            else
            {
              v11 &= v7 - 1;
            }
            if (v11 != v3)
              break;
          }
          v10 = (_QWORD *)*v10;
        }
        while (v10);
      }
    }
  }
  v10 = operator new(0x18uLL);
  *v10 = 0;
  v10[1] = v6;
  *((_WORD *)v10 + 8) = *a3;
  v12 = (float)(unint64_t)(*(_QWORD *)(a1 + 24) + 1);
  v13 = *(float *)(a1 + 32);
  if (!v7 || (float)(v13 * (float)v7) < v12)
  {
    v14 = 1;
    if (v7 >= 3)
      v14 = (v7 & (v7 - 1)) != 0;
    v15 = v14 | (2 * v7);
    v16 = vcvtps_u32_f32(v12 / v13);
    if (v15 <= v16)
      v17 = v16;
    else
      v17 = v15;
    sub_6A20(a1, v17);
    v7 = *(_QWORD *)(a1 + 8);
    if ((v7 & (v7 - 1)) != 0)
    {
      if (v7 <= v6)
        v3 = v6 % v7;
      else
        v3 = v6;
    }
    else
    {
      v3 = ((_DWORD)v7 - 1) & v6;
    }
  }
  v18 = *(_QWORD *)a1;
  v19 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v3);
  if (v19)
  {
    *v10 = *v19;
LABEL_38:
    *v19 = v10;
    goto LABEL_39;
  }
  *v10 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v10;
  *(_QWORD *)(v18 + 8 * v3) = a1 + 16;
  if (*v10)
  {
    v20 = *(_QWORD *)(*v10 + 8);
    if ((v7 & (v7 - 1)) != 0)
    {
      if (v20 >= v7)
        v20 %= v7;
    }
    else
    {
      v20 &= v7 - 1;
    }
    v19 = (_QWORD *)(*(_QWORD *)a1 + 8 * v20);
    goto LABEL_38;
  }
LABEL_39:
  ++*(_QWORD *)(a1 + 24);
  return v10;
}

void sub_117BC8(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_117BDC(uint64_t a1, unsigned __int16 *a2, uint64_t a3, _DWORD **a4)
{
  unint64_t v4;
  int v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint8x8_t v11;
  void **v12;
  _QWORD *v13;
  unint64_t v14;
  _QWORD *v16;
  float v17;
  float v18;
  _BOOL8 v19;
  unint64_t v20;
  unint64_t v21;
  size_t v22;
  uint64_t v23;
  _QWORD *v24;
  unint64_t v25;

  v7 = *a2;
  v8 = a2[1];
  v9 = (v7 << 16) | v8;
  v10 = *(_QWORD *)(a1 + 8);
  if (v10)
  {
    v11 = (uint8x8_t)vcnt_s8((int8x8_t)v10);
    v11.i16[0] = vaddlv_u8(v11);
    if (v11.u32[0] > 1uLL)
    {
      v4 = (v7 << 16) | v8;
      if (v10 <= v9)
        v4 = v9 % v10;
    }
    else
    {
      v4 = (v10 - 1) & v9;
    }
    v12 = *(void ***)(*(_QWORD *)a1 + 8 * v4);
    if (v12)
    {
      v13 = *v12;
      if (*v12)
      {
        do
        {
          v14 = v13[1];
          if (v14 == v9)
          {
            if (*((unsigned __int16 *)v13 + 9) == (_DWORD)v8 && *((unsigned __int16 *)v13 + 8) == v7)
              return v13;
          }
          else
          {
            if (v11.u32[0] > 1uLL)
            {
              if (v14 >= v10)
                v14 %= v10;
            }
            else
            {
              v14 &= v10 - 1;
            }
            if (v14 != v4)
              break;
          }
          v13 = (_QWORD *)*v13;
        }
        while (v13);
      }
    }
  }
  v16 = (_QWORD *)(a1 + 16);
  v13 = operator new(0x30uLL);
  *v13 = 0;
  v13[1] = v9;
  *((_DWORD *)v13 + 4) = **a4;
  *((_DWORD *)v13 + 6) = 0;
  v13[4] = 0;
  v17 = (float)(unint64_t)(*(_QWORD *)(a1 + 24) + 1);
  v18 = *(float *)(a1 + 32);
  if (!v10 || (float)(v18 * (float)v10) < v17)
  {
    v19 = 1;
    if (v10 >= 3)
      v19 = (v10 & (v10 - 1)) != 0;
    v20 = v19 | (2 * v10);
    v21 = vcvtps_u32_f32(v17 / v18);
    if (v20 <= v21)
      v22 = v21;
    else
      v22 = v20;
    sub_6A20(a1, v22);
    v10 = *(_QWORD *)(a1 + 8);
    if ((v10 & (v10 - 1)) != 0)
    {
      if (v10 <= v9)
        v4 = v9 % v10;
      else
        v4 = v9;
    }
    else
    {
      v4 = (v10 - 1) & v9;
    }
  }
  v23 = *(_QWORD *)a1;
  v24 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v4);
  if (v24)
  {
    *v13 = *v24;
LABEL_42:
    *v24 = v13;
    goto LABEL_43;
  }
  *v13 = *v16;
  *v16 = v13;
  *(_QWORD *)(v23 + 8 * v4) = v16;
  if (*v13)
  {
    v25 = *(_QWORD *)(*v13 + 8);
    if ((v10 & (v10 - 1)) != 0)
    {
      if (v25 >= v10)
        v25 %= v10;
    }
    else
    {
      v25 &= v10 - 1;
    }
    v24 = (_QWORD *)(*(_QWORD *)a1 + 8 * v25);
    goto LABEL_42;
  }
LABEL_43:
  ++*(_QWORD *)(a1 + 24);
  return v13;
}

void sub_117E28(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  sub_35898(v2, v1);
  _Unwind_Resume(a1);
}

void sub_11829C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1182C4(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  id WeakRetained;
  id v7;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v7 = WeakRetained;
  if (a4)
    objc_msgSend(WeakRetained, "_updatePopoverLayout");
  else
    objc_msgSend(WeakRetained, "_updateVisible:", a3);

}

void sub_118F64(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_118F7C(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_118F8C(uint64_t a1)
{

}

void sub_118F94(_QWORD *a1, void *a2)
{
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;

  v12 = a2;
  v3 = (void *)a1[4];
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "refId"));
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "refInstance"));
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "identifier"));
  LODWORD(v3) = objc_msgSend(v3, "matchesRefId:refInstance:identifier:", v4, v5, v6);

  if ((_DWORD)v3)
  {
    v7 = *(void **)(a1[5] + 16);
    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "identifier"));
    v9 = objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "objectForKey:", v8));
    v10 = *(_QWORD *)(a1[6] + 8);
    v11 = *(void **)(v10 + 40);
    *(_QWORD *)(v10 + 40) = v9;

  }
}

BOOL sub_11941C(id a1, id a2, BOOL *a3)
{
  id v4;
  uint64_t v5;
  uint64_t v6;
  char isKindOfClass;

  v4 = a2;
  v6 = objc_opt_class(UIButton, v5);
  isKindOfClass = objc_opt_isKindOfClass(v4, v6);

  if ((isKindOfClass & 1) != 0)
    *a3 = 1;
  return isKindOfClass & 1;
}

id sub_11AAEC(uint64_t a1, uint64_t a2, void *a3)
{
  return objc_msgSend(a3, "setParentModel:", *(_QWORD *)(a1 + 32));
}

id sub_11B1B4(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 32), "setContentInset:", *(double *)(a1 + 40), *(double *)(a1 + 48), *(double *)(a1 + 56), *(double *)(a1 + 64));
  return _objc_msgSend(*(id *)(a1 + 32), "setScrollIndicatorInsets:", *(double *)(a1 + 72), *(double *)(a1 + 80), *(double *)(a1 + 88), *(double *)(a1 + 96));
}

void TUI::Model::Component::~Component(id *this)
{
  void **v2;

  *this = off_241C50;
  sub_148E8((uint64_t)(this + 13));

  v2 = this + 6;
  sub_2A0E0(&v2);
  sub_148E8((uint64_t)(this + 3));
  sub_148E8((uint64_t)(this + 1));
}

{
  TUI::Model::Component::~Component(this);
  operator delete();
}

TUI::Model::Component *TUI::Model::Component::Component(TUI::Model::Component *this)
{
  *(_QWORD *)this = off_241C50;
  *((_QWORD *)this + 11) = 0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *((_OWORD *)this + 3) = 0u;
  *((_OWORD *)this + 4) = 0u;
  bzero((char *)this + 96, 1uLL);
  *((_QWORD *)this + 13) = 0;
  *((_QWORD *)this + 14) = 0;
  return this;
}

{
  *(_QWORD *)this = off_241C50;
  *((_QWORD *)this + 11) = 0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *((_OWORD *)this + 3) = 0u;
  *((_OWORD *)this + 4) = 0u;
  bzero((char *)this + 96, 1uLL);
  *((_QWORD *)this + 13) = 0;
  *((_QWORD *)this + 14) = 0;
  return this;
}

uint64_t TUI::Model::Component::Component(uint64_t a1, uint64_t a2, _QWORD *a3, _QWORD *a4, _QWORD **a5, uint64_t a6, char a7, _QWORD *a8)
{
  uint64_t v12;
  unint64_t *v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t *v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t *v19;
  unint64_t v20;

  *(_QWORD *)a1 = off_241C50;
  v12 = a3[1];
  *(_QWORD *)(a1 + 8) = *a3;
  *(_QWORD *)(a1 + 16) = v12;
  if (v12)
  {
    v13 = (unint64_t *)(v12 + 8);
    do
      v14 = __ldxr(v13);
    while (__stxr(v14 + 1, v13));
  }
  v15 = a4[1];
  *(_QWORD *)(a1 + 24) = *a4;
  *(_QWORD *)(a1 + 32) = v15;
  if (v15)
  {
    v16 = (unint64_t *)(v15 + 8);
    do
      v17 = __ldxr(v16);
    while (__stxr(v17 + 1, v16));
  }
  *(_QWORD *)(a1 + 48) = 0;
  *(_QWORD *)(a1 + 40) = a2;
  *(_QWORD *)(a1 + 56) = 0;
  *(_QWORD *)(a1 + 64) = 0;
  sub_2A000((char *)(a1 + 48), *a5, a5[1], ((char *)a5[1] - (char *)*a5) >> 4);
  *(_QWORD *)(a1 + 72) = 0;
  *(_QWORD *)(a1 + 80) = a6;
  *(_QWORD *)(a1 + 88) = 0;
  *(_BYTE *)(a1 + 96) = a7;
  v18 = a8[1];
  *(_QWORD *)(a1 + 104) = *a8;
  *(_QWORD *)(a1 + 112) = v18;
  if (v18)
  {
    v19 = (unint64_t *)(v18 + 8);
    do
      v20 = __ldxr(v19);
    while (__stxr(v20 + 1, v19));
  }
  return a1;
}

{
  return TUI::Model::Component::Component(a1, a2, a3, a4, a5, a6, a7, a8);
}

void sub_11B5BC(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  sub_148E8(v2);
  sub_148E8(v1);
  _Unwind_Resume(a1);
}

uint64_t TUI::Model::Component::Component(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;

  *(_QWORD *)result = off_241C50;
  *(_OWORD *)(result + 8) = *(_OWORD *)(a2 + 8);
  *(_QWORD *)(a2 + 8) = 0;
  *(_QWORD *)(a2 + 16) = 0;
  *(_OWORD *)(result + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a2 + 24) = 0;
  *(_QWORD *)(a2 + 32) = 0;
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(result + 48) = 0;
  *(_QWORD *)(result + 56) = 0;
  *(_QWORD *)(result + 64) = 0;
  *(_OWORD *)(result + 48) = *(_OWORD *)(a2 + 48);
  *(_QWORD *)(result + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a2 + 56) = 0;
  *(_QWORD *)(a2 + 64) = 0;
  *(_QWORD *)(a2 + 48) = 0;
  v2 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(result + 72) = 0;
  *(_QWORD *)(result + 80) = v2;
  *(_QWORD *)(result + 88) = 0;
  *(_BYTE *)(result + 96) = *(_BYTE *)(a2 + 96);
  v3 = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(result + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(result + 112) = v3;
  if (v3)
  {
    v4 = (unint64_t *)(v3 + 8);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  return result;
}

uint64_t TUI::Model::Component::Component(uint64_t a1, uint64_t a2, int a3, uint64_t *a4, int a5, uint64_t *a6, char a7)
{
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t *v13;
  unint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t *v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t *v23;
  unint64_t v24;

  *(_QWORD *)a1 = off_241C50;
  v10 = (uint64_t *)(a2 + 8);
  if (a3)
    v10 = a4;
  v12 = *v10;
  v11 = v10[1];
  *(_QWORD *)(a1 + 8) = v12;
  *(_QWORD *)(a1 + 16) = v11;
  if (v11)
  {
    v13 = (unint64_t *)(v11 + 8);
    do
      v14 = __ldxr(v13);
    while (__stxr(v14 + 1, v13));
  }
  v15 = (uint64_t *)(a2 + 24);
  if (a5)
    v15 = a6;
  v17 = *v15;
  v16 = v15[1];
  *(_QWORD *)(a1 + 24) = v17;
  *(_QWORD *)(a1 + 32) = v16;
  if (v16)
  {
    v18 = (unint64_t *)(v16 + 8);
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
  }
  v20 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = 0;
  *(_QWORD *)(a1 + 40) = v20;
  *(_QWORD *)(a1 + 56) = 0;
  *(_QWORD *)(a1 + 64) = 0;
  sub_2A000((char *)(a1 + 48), *(_QWORD **)(a2 + 48), *(_QWORD **)(a2 + 56), (uint64_t)(*(_QWORD *)(a2 + 56) - *(_QWORD *)(a2 + 48)) >> 4);
  v21 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = 0;
  *(_QWORD *)(a1 + 80) = v21;
  *(_QWORD *)(a1 + 88) = 0;
  *(_BYTE *)(a1 + 96) = a7;
  v22 = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = v22;
  if (v22)
  {
    v23 = (unint64_t *)(v22 + 8);
    do
      v24 = __ldxr(v23);
    while (__stxr(v24 + 1, v23));
  }
  return a1;
}

{
  return TUI::Model::Component::Component(a1, a2, a3, a4, a5, a6, a7);
}

void sub_11B760(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  sub_148E8(v2);
  sub_148E8(v1);
  _Unwind_Resume(a1);
}

uint64_t TUI::Model::Component::operator=(uint64_t a1, uint64_t a2)
{
  sub_255FC(a1 + 8, (__int128 *)(a2 + 8));
  sub_255FC(a1 + 24, (__int128 *)(a2 + 24));
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  sub_11BC9C((void **)(a1 + 48));
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a2 + 48) = 0;
  *(_QWORD *)(a2 + 56) = 0;
  *(_QWORD *)(a2 + 64) = 0;
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
  sub_26314((_QWORD *)(a1 + 104), (uint64_t *)(a2 + 104));
  return a1;
}

uint64_t (***sub_11B804(_QWORD *a1, unsigned int a2))(_QWORD, _QWORD)
{
  uint64_t v3;
  uint64_t (***result)(_QWORD, _QWORD);
  uint64_t v5;
  uint64_t (***v6)(_QWORD, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t (***v9)(_QWORD, uint64_t);
  uint64_t v10;

  v3 = a2;
  result = (uint64_t (***)(_QWORD, _QWORD))a1[3];
  if (!result || (result = (uint64_t (***)(_QWORD, _QWORD))(**result)(result, a2), v5 == -1))
  {
    v6 = (uint64_t (***)(_QWORD, uint64_t))a1[1];
    if (!v6 || (result = (uint64_t (***)(_QWORD, _QWORD))(**v6)(a1[1], v3), v7 == -1))
    {
      v8 = a1[7];
      if (a1[6] != v8)
      {
        do
        {
          v9 = *(uint64_t (****)(_QWORD, uint64_t))(v8 - 16);
          v8 -= 16;
          result = (uint64_t (***)(_QWORD, _QWORD))(**v9)(v9, v3);
        }
        while (v10 == -1 && v8 != a1[6]);
      }
    }
  }
  return result;
}

uint64_t sub_11B8AC(_QWORD *a1, unsigned int a2)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v3 = a2;
  result = a1[3];
  if (!result
    || (result = (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)result + 8))(result, a2), v5 == -1))
  {
    v6 = a1[1];
    if (!v6 || (result = (*(uint64_t (**)(_QWORD, uint64_t))(*(_QWORD *)v6 + 8))(a1[1], v3), v7 == -1))
    {
      v8 = a1[7];
      if (a1[6] != v8)
      {
        do
        {
          v9 = *(_QWORD *)(v8 - 16);
          v8 -= 16;
          result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v9 + 8))(v9, v3);
        }
        while (v10 == -1 && v8 != a1[6]);
      }
    }
  }
  return result;
}

uint64_t sub_11B954(_QWORD *a1, unsigned int a2)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v3 = a2;
  result = a1[3];
  if (!result
    || (result = (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)result + 16))(result, a2), v5 == -1))
  {
    v6 = a1[1];
    if (!v6 || (result = (*(uint64_t (**)(_QWORD, uint64_t))(*(_QWORD *)v6 + 16))(a1[1], v3), v7 == -1))
    {
      v8 = a1[7];
      if (a1[6] != v8)
      {
        do
        {
          v9 = *(_QWORD *)(v8 - 16);
          v8 -= 16;
          result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v9 + 16))(v9, v3);
        }
        while (v10 == -1 && v8 != a1[6]);
      }
    }
  }
  return result;
}

uint64_t sub_11B9FC(_QWORD *a1, unsigned int a2)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v3 = a2;
  result = a1[3];
  if (!result
    || (result = (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)result + 24))(result, a2), v5 == -1))
  {
    v6 = a1[1];
    if (!v6 || (result = (*(uint64_t (**)(_QWORD, uint64_t))(*(_QWORD *)v6 + 24))(a1[1], v3), v7 == -1))
    {
      v8 = a1[7];
      if (a1[6] != v8)
      {
        do
        {
          v9 = *(_QWORD *)(v8 - 16);
          v8 -= 16;
          result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v9 + 24))(v9, v3);
        }
        while (v10 == -1 && v8 != a1[6]);
      }
    }
  }
  return result;
}

uint64_t sub_11BAA4(_QWORD *a1, unsigned int a2)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v3 = a2;
  result = a1[3];
  if (!result
    || (result = (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)result + 32))(result, a2), v5 == -1))
  {
    v6 = a1[1];
    if (!v6 || (result = (*(uint64_t (**)(_QWORD, uint64_t))(*(_QWORD *)v6 + 32))(a1[1], v3), v7 == -1))
    {
      v8 = a1[7];
      if (a1[6] != v8)
      {
        do
        {
          v9 = *(_QWORD *)(v8 - 16);
          v8 -= 16;
          result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v9 + 32))(v9, v3);
        }
        while (v10 == -1 && v8 != a1[6]);
      }
    }
  }
  return result;
}

uint64_t sub_11BB4C(_QWORD *a1, unsigned int a2)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v3 = a2;
  result = a1[3];
  if (!result
    || (result = (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)result + 40))(result, a2), v5 == -1))
  {
    v6 = a1[1];
    if (!v6 || (result = (*(uint64_t (**)(_QWORD, uint64_t))(*(_QWORD *)v6 + 40))(a1[1], v3), v7 == -1))
    {
      v8 = a1[7];
      if (a1[6] != v8)
      {
        do
        {
          v9 = *(_QWORD *)(v8 - 16);
          v8 -= 16;
          result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v9 + 40))(v9, v3);
        }
        while (v10 == -1 && v8 != a1[6]);
      }
    }
  }
  return result;
}

uint64_t sub_11BBF4(_QWORD *a1, unsigned int a2)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v3 = a2;
  result = a1[3];
  if (!result
    || (result = (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)result + 48))(result, a2), v5 == -1))
  {
    v6 = a1[1];
    if (!v6 || (result = (*(uint64_t (**)(_QWORD, uint64_t))(*(_QWORD *)v6 + 48))(a1[1], v3), v7 == -1))
    {
      v8 = a1[7];
      if (a1[6] != v8)
      {
        do
        {
          v9 = *(_QWORD *)(v8 - 16);
          v8 -= 16;
          result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v9 + 48))(v9, v3);
        }
        while (v10 == -1 && v8 != a1[6]);
      }
    }
  }
  return result;
}

void sub_11BC9C(void **a1)
{
  void *v1;
  uint64_t v3;
  void *v4;

  v1 = *a1;
  if (*a1)
  {
    v3 = (uint64_t)a1[1];
    v4 = v1;
    if ((void *)v3 != v1)
    {
      do
        v3 = sub_148E8(v3 - 16);
      while ((void *)v3 != v1);
      v4 = *a1;
    }
    a1[1] = v1;
    operator delete(v4);
    *a1 = 0;
    a1[1] = 0;
    a1[2] = 0;
  }
}

void sub_11BD60(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_11BDD4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_11C914(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, void *a12, void *a13, void *a14, void *a15, void *a16, void *a17, void *a18, void *a19, void *a20,void *a21,uint64_t a22,uint64_t a23,_Unwind_Exception *exception_object,void *a25,void *a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,char a58)
{
  void *v58;
  void *v59;
  void *v60;
  void *v61;
  void *v62;
  void *v63;
  void *v64;
  void *v65;

  sub_14B0C((uint64_t)&a58);
  _Unwind_Resume(a1);
}

void sub_11CBF8(uint64_t a1)
{
  void *v2;
  id v3;
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  id v8;
  id v9;
  uint64_t v10;
  void *i;
  void *v12;
  id v13;
  void *v14;
  void *v15;
  id v16;
  id v17;
  void *v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  _BYTE v23[128];

  v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "subviews"));
  if (!objc_msgSend(v18, "count"))
  {
    objc_msgSend(*(id *)(a1 + 32), "addSubview:", *(_QWORD *)(a1 + 40));
    goto LABEL_22;
  }
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v18, "lastObject"));
  v3 = TUIProtocolCast(&OBJC_PROTOCOL___TUIReusableRenderView, v2);
  v4 = (void *)objc_claimAutoreleasedReturnValue(v3);

  if (v4)
  {
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "layoutAttributes"));
    v6 = objc_msgSend(v5, "zIndex");
    v7 = *(_QWORD *)(a1 + 64);

    if ((uint64_t)v6 <= v7)
    {
      objc_msgSend(*(id *)(a1 + 32), "addSubview:", *(_QWORD *)(a1 + 40));
      goto LABEL_21;
    }
  }
  v21 = 0u;
  v22 = 0u;
  v19 = 0u;
  v20 = 0u;
  v8 = v18;
  v9 = objc_msgSend(v8, "countByEnumeratingWithState:objects:count:", &v19, v23, 16);
  if (!v9)
    goto LABEL_15;
  v10 = *(_QWORD *)v20;
  while (2)
  {
    for (i = 0; i != v9; i = (char *)i + 1)
    {
      if (*(_QWORD *)v20 != v10)
        objc_enumerationMutation(v8);
      v12 = *(void **)(*((_QWORD *)&v19 + 1) + 8 * (_QWORD)i);
      v13 = TUIProtocolCast(&OBJC_PROTOCOL___TUIReusableRenderView, v12);
      v14 = (void *)objc_claimAutoreleasedReturnValue(v13);

      v4 = v14;
      if (v14 && v14 != *(void **)(a1 + 40))
      {
        v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v14, "layoutAttributes"));
        v16 = objc_msgSend(v15, "zIndex");

        v17 = *(id *)(a1 + 64);
        if ((uint64_t)v17 < (uint64_t)v16)
        {
          objc_msgSend(*(id *)(a1 + 32), "insertSubview:belowSubview:", *(_QWORD *)(a1 + 40), v12);
        }
        else
        {
          if (v17 != v16)
            continue;
          objc_msgSend(*(id *)(a1 + 32), "insertSubview:aboveSubview:", *(_QWORD *)(a1 + 40), v4);
        }

        goto LABEL_21;
      }
    }
    v9 = objc_msgSend(v8, "countByEnumeratingWithState:objects:count:", &v19, v23, 16);
    if (v9)
      continue;
    break;
  }
LABEL_15:

  objc_msgSend(*(id *)(a1 + 32), "addSubview:", *(_QWORD *)(a1 + 40));
LABEL_21:

LABEL_22:
  objc_msgSend(*(id *)(a1 + 40), "setSemanticContentAttribute:", *(_QWORD *)(*(_QWORD *)(a1 + 48) + 168));
  sub_11CEA0(*(void **)(a1 + 40));
  TUIReusableSubviewApplyLayoutAttributes(*(void **)(a1 + 40), *(void **)(a1 + 56));

}

void sub_11CE30(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_11CEA0(void *a1)
{
  id v1;
  void *v2;
  unsigned __int8 v3;
  void *v4;
  void *v5;
  unsigned int v6;
  id v7;

  v1 = a1;
  if (v1)
  {
    v7 = v1;
    if (objc_msgSend(v1, "effectiveUserInterfaceLayoutDirection"))
    {
      v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "layer"));
      v3 = objc_msgSend(v2, "flipsHorizontalAxis");

      v1 = v7;
      if ((v3 & 1) == 0)
      {
        v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "layer"));
        objc_msgSend(v4, "setFlipsHorizontalAxis:", 1);
LABEL_7:

        v1 = v7;
      }
    }
    else
    {
      v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "layer"));
      v6 = objc_msgSend(v5, "flipsHorizontalAxis");

      v1 = v7;
      if (v6)
      {
        v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "layer"));
        objc_msgSend(v4, "setFlipsHorizontalAxis:", 0);
        goto LABEL_7;
      }
    }
  }

}

void sub_11CF50(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_11CF7C(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  void *v4;
  id v5;

  v2 = *(_QWORD *)(a1 + 32);
  v3 = *(void **)(v2 + 152);
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(v2 + 136), "identifierForViewAtIndex:", *(_QWORD *)(a1 + 48)));
  v5 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "viewStateForIdentifier:", v4));

  objc_msgSend(*(id *)(a1 + 40), "viewStateRestore:", v5);
}

void sub_11CFEC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{

  _Unwind_Resume(a1);
}

id sub_11D008(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "viewDidEndDisplay");
}

void sub_11D588(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, void *a10, void *a11, void *a12, void *a13, void *a14, void *a15, void *a16, uint64_t a17, void *a18)
{
  void *v18;
  void *v19;

  _Unwind_Resume(a1);
}

void sub_11D704(uint64_t a1)
{
  NSObject *v2;

  objc_msgSend(*(id *)(a1 + 32), "resumeReuseOfView:", *(_QWORD *)(a1 + 40));
  v2 = *(NSObject **)(a1 + 48);
  if (v2)
    dispatch_group_leave(v2);
}

id sub_11D740(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "viewDidEndDisplay");
}

int64_t sub_11D748(id a1, UIView *a2, UIView *a3)
{
  UIView *v4;
  id v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  void *v9;
  BOOL v10;
  int64_t v11;
  void *v12;
  id v13;
  void *v14;
  id v15;
  uint64_t v16;

  v4 = a3;
  v5 = TUIProtocolCast(&OBJC_PROTOCOL___TUIReusableRenderView, a2);
  v6 = objc_claimAutoreleasedReturnValue(v5);
  v7 = TUIProtocolCast(&OBJC_PROTOCOL___TUIReusableRenderView, v4);
  v8 = objc_claimAutoreleasedReturnValue(v7);
  v9 = (void *)v8;
  if (v6 | v8)
  {
    if (v6)
      v10 = 1;
    else
      v10 = v8 == 0;
    if (v10)
    {
      if (!v6 || v8)
      {
        v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend((id)v6, "layoutAttributes"));
        v13 = objc_msgSend(v12, "zIndex");

        v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "layoutAttributes"));
        v15 = objc_msgSend(v14, "zIndex");

        v16 = -1;
        if ((uint64_t)v13 >= (uint64_t)v15)
          v16 = 1;
        if (v13 == v15)
          v11 = 0;
        else
          v11 = v16;
      }
      else
      {
        v11 = 1;
      }
    }
    else
    {
      v11 = -1;
    }
  }
  else
  {
    v11 = 0;
  }

  return v11;
}

void sub_11D834(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_11D924(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_11D980(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_11DA44(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_11DB00(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_11DC74(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_11DCE0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_11DDEC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_11E0B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  void *v9;
  void *v10;

  _Unwind_Resume(a1);
}

void sub_11E210(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, id a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{

  _Unwind_Resume(a1);
}

id sub_11E22C(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "setCurrentViewState:", *(_QWORD *)(a1 + 32));
}

id sub_11E2F8(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "setSemanticContentAttribute:", *(_QWORD *)(a1 + 32));
}

void sub_11E36C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_11E434(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_11E4CC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_11E82C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_11EA24(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_11EA34(uint64_t a1, void *a2, uint64_t a3)
{
  void *v5;
  CGFloat x;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  uint64_t v10;
  double v11;
  double v12;
  double v13;
  double v14;
  void *v15;
  uint64_t v16;
  id WeakRetained;
  id v18;
  CGRect v19;
  CGRect v20;

  v18 = a2;
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 24), "objectAtIndexedSubscript:", a3));
  objc_msgSend(v18, "frame");
  x = v19.origin.x;
  y = v19.origin.y;
  width = v19.size.width;
  height = v19.size.height;
  if (!CGRectIsEmpty(v19))
  {
    v20.origin.x = x;
    v20.origin.y = y;
    v20.size.width = width;
    v20.size.height = height;
    if (CGRectIntersectsRect(*(CGRect *)(a1 + 40), v20))
    {
      v10 = 1;
LABEL_7:
      v11 = *(double *)(a1 + 40);
      v12 = *(double *)(a1 + 48);
      v13 = *(double *)(a1 + 56);
      v14 = *(double *)(a1 + 64);
      v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 32), "objectAtIndexedSubscript:", a3));
      v16 = *(_QWORD *)(a1 + 32);
      WeakRetained = objc_loadWeakRetained((id *)(v16 + 160));
      objc_msgSend(v5, "updateVisible:bounds:host:liveTransformResolver:factory:feedView:", v10, v15, v16, WeakRetained, *(_QWORD *)(a1 + 32), v11, v12, v13, v14);

      goto LABEL_8;
    }
  }
  if ((objc_msgSend(v5, "visible") & 1) != 0 || objc_msgSend(v18, "containsLiveTransforms"))
  {
    v10 = 0;
    goto LABEL_7;
  }
LABEL_8:

}

void sub_11EB84(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;
  void *v12;

  _Unwind_Resume(a1);
}

void sub_11EC30(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_11EC40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v5;
  uint64_t v6;
  id WeakRetained;
  id v8;

  v8 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 24), "objectAtIndexedSubscript:"));
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 32), "objectAtIndexedSubscript:", a3));
  v6 = *(_QWORD *)(a1 + 32);
  WeakRetained = objc_loadWeakRetained((id *)(v6 + 160));
  objc_msgSend(v8, "updateInvalidatedWithHost:liveTransformResolver:factory:feedView:", v5, v6, WeakRetained, *(_QWORD *)(a1 + 32));

}

void sub_11ECE8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void sub_11EDF4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void sub_11EFCC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16, void *a17, void *a18, void *a19, void *a20)
{
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;

  _Unwind_Resume(a1);
}

void sub_11F038(id *a1)
{
  _QWORD *v2;
  void *v3;
  id v4;
  id v5;
  uint64_t v6;
  void *v7;
  void *v8;
  id v9;
  id v10;
  _QWORD v11[4];
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  _QWORD v21[5];
  _BYTE v22[128];

  v2 = a1[4];
  v3 = (void *)v2[3];
  v21[0] = _NSConcreteStackBlock;
  v21[1] = 3221225472;
  v21[2] = sub_11F318;
  v21[3] = &unk_241D78;
  v21[4] = v2;
  objc_msgSend(v3, "enumerateObjectsUsingBlock:", v21);
  v19 = 0u;
  v20 = 0u;
  v17 = 0u;
  v18 = 0u;
  v4 = *((id *)a1[4] + 4);
  v5 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v17, v22, 16);
  if (v5)
  {
    v6 = *(_QWORD *)v18;
    do
    {
      v7 = 0;
      do
      {
        if (*(_QWORD *)v18 != v6)
          objc_enumerationMutation(v4);
        objc_msgSend(*(id *)(*((_QWORD *)&v17 + 1) + 8 * (_QWORD)v7), "removeFromSuperview");
        v7 = (char *)v7 + 1;
      }
      while (v5 != v7);
      v5 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v17, v22, 16);
    }
    while (v5);
  }

  objc_storeStrong((id *)a1[4] + 19, a1[5]);
  objc_msgSend(*((id *)a1[4] + 23), "setRenderModel:withInvalidationContext:", a1[5], 0);
  objc_msgSend(*((id *)a1[4] + 24), "setRenderModel:withInvalidationContext:", a1[5], 0);
  objc_msgSend(*((id *)a1[4] + 25), "setRenderModel:withInvalidationContext:", a1[5], 0);
  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*((id *)a1[4] + 19), "sections"));
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 3221225472;
  v11[2] = sub_11F404;
  v11[3] = &unk_241E10;
  v12 = a1[6];
  v9 = a1[7];
  v10 = a1[4];
  v13 = v9;
  v14 = v10;
  v15 = a1[8];
  v16 = a1[9];
  objc_msgSend(v8, "enumerateObjectsUsingBlock:", v11);

  objc_msgSend(*((id *)a1[4] + 19), "size");
  objc_msgSend(a1[4], "setContentSize:");

}

void sub_11F29C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, void *a15, uint64_t a16, void *a17, void *a18)
{
  void *v18;

  _Unwind_Resume(a1);
}

void sub_11F318(uint64_t a1, void *a2, uint64_t a3)
{
  double y;
  double width;
  double height;
  void *v8;
  uint64_t v9;
  id WeakRetained;
  id v11;

  v11 = a2;
  y = CGRectNull.origin.y;
  width = CGRectNull.size.width;
  height = CGRectNull.size.height;
  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 32), "objectAtIndexedSubscript:", a3));
  v9 = *(_QWORD *)(a1 + 32);
  WeakRetained = objc_loadWeakRetained((id *)(v9 + 160));
  objc_msgSend(v11, "updateVisible:bounds:host:liveTransformResolver:factory:feedView:", 0, v8, v9, WeakRetained, *(_QWORD *)(a1 + 32), CGRectNull.origin.x, y, width, height);

}

void sub_11F3E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void sub_11F404(uint64_t a1, void *a2, uint64_t a3)
{
  void *v3;
  TUIFeedSectionView *v6;
  TUIFeedSectionView *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  _TUIFeedSectionModel *v12;
  id v13;

  v13 = a2;
  v6 = [TUIFeedSectionView alloc];
  objc_msgSend(v13, "frame");
  v7 = -[TUIFeedSectionView initWithFrame:](v6, "initWithFrame:");
  v8 = *(void **)(a1 + 32);
  v9 = v8;
  if (!v8)
  {
    v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "entry"));
    v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "uuid"));
  }
  -[TUIFeedSectionView setTui_querySectionUUID:](v7, "setTui_querySectionUUID:", v9);
  if (!v8)
  {

  }
  v10 = *(void **)(a1 + 40);
  v11 = v10;
  if (!v10)
  {
    v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "entry"));
    v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "uid"));
  }
  -[TUIFeedSectionView setTui_querySectionUID:](v7, "setTui_querySectionUID:", v11);
  if (!v10)
  {

  }
  -[TUIFeedSectionView setRenderModel:](v7, "setRenderModel:", v13);
  TUISectionViewApplyRenderModelSection(v7, v13);
  objc_msgSend(*(id *)(a1 + 48), "addSectionView:respectingZIndex:", v7, 1);
  objc_msgSend(*(id *)(a1 + 56), "addObject:", v7);
  v12 = objc_alloc_init(_TUIFeedSectionModel);
  -[_TUIFeedSectionModel setRenderModel:](v12, "setRenderModel:", v13);
  -[_TUIFeedSectionModel setSectionIndex:](v12, "setSectionIndex:", a3);
  -[_TUIFeedSectionModel setSemanticContentAttribute:](v12, "setSemanticContentAttribute:", objc_msgSend(*(id *)(a1 + 48), "semanticContentAttribute"));
  -[_TUIFeedSectionModel setCurrentViewState:](v12, "setCurrentViewState:", *(_QWORD *)(*(_QWORD *)(a1 + 48) + 224));
  objc_msgSend(*(id *)(a1 + 64), "addObject:", v12);

}

void sub_11F584(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void sub_11F6B0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_11F838(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, id a12)
{
  void *v12;

  _Unwind_Resume(a1);
}

void sub_11FA0C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_11FA38(uint64_t a1)
{
  double MidX;
  double v3;
  double v4;
  double MidY;
  double v6;
  double v7;
  void *v8;
  double v9;
  void *v10;
  id v11;
  NSObject *v12;
  NSString *v13;
  void *v14;
  int v15;
  void *v16;
  __int16 v17;
  void *v18;
  CGPoint v19;

  MidX = CGRectGetMidX(*(CGRect *)(a1 + 40));
  objc_msgSend(*(id *)(a1 + 32), "contentOffset");
  v4 = v3;
  MidY = CGRectGetMidY(*(CGRect *)(a1 + 40));
  objc_msgSend(*(id *)(a1 + 32), "contentOffset");
  v7 = v6;
  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "superview"));
  v9 = MidX - v4;
  v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "_accessibilityHitTest:withEvent:", 0, v9, MidY - v7));

  v11 = TUIDefaultLog();
  v12 = objc_claimAutoreleasedReturnValue(v11);
  if (os_log_type_enabled(v12, OS_LOG_TYPE_INFO))
  {
    v19.x = v9;
    v19.y = MidY - v7;
    v13 = NSStringFromCGPoint(v19);
    v14 = (void *)objc_claimAutoreleasedReturnValue(v13);
    v15 = 138412546;
    v16 = v14;
    v17 = 2112;
    v18 = v10;
    _os_log_impl(&dword_0, v12, OS_LOG_TYPE_INFO, "Focusing VoiceOver cursor at %@ so it will land on %@", (uint8_t *)&v15, 0x16u);

  }
  if (v10)
    UIAccessibilityPostNotification(UIAccessibilityLayoutChangedNotification, v10);

}

void sub_11FB9C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

uint64_t sub_11FBD0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

void sub_11FC7C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_11FD2C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1200D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, void *a11, void *a12)
{

  _Unwind_Resume(a1);
}

void sub_1202CC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void sub_120458(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_120808(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, void *a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1209E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16)
{
  void *v16;

  _Unwind_Resume(a1);
}

void sub_1209FC(uint64_t a1, void *a2, uint64_t a3)
{
  void *v5;
  void *v6;
  void *v7;
  CGFloat v8;
  CGFloat v9;
  CGFloat v10;
  CGFloat v11;
  CGFloat v12;
  CGFloat v13;
  CGFloat v14;
  CGFloat v15;
  _BOOL4 v16;
  void *v17;
  id v18;
  void *v19;
  void *v20;
  id WeakRetained;
  void *v22;
  id v23;
  uint64_t v24;
  id v25;
  _QWORD v26[4];
  id v27;
  id v28;
  uint64_t v29;
  CGRect v30;
  CGRect v31;

  v25 = a2;
  v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedInteger:](NSNumber, "numberWithUnsignedInteger:", a3));
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 24), "objectAtIndexedSubscript:", a3));
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "renderModel"));
  v8 = *(double *)(a1 + 48);
  v9 = *(double *)(a1 + 56);
  v10 = *(double *)(a1 + 64);
  v11 = *(double *)(a1 + 72);
  objc_msgSend(v25, "frame");
  v31.origin.x = v12;
  v31.origin.y = v13;
  v31.size.width = v14;
  v31.size.height = v15;
  v30.origin.x = v8;
  v30.origin.y = v9;
  v30.size.width = v10;
  v30.size.height = v11;
  v16 = CGRectIntersectsRect(v30, v31);
  v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "objectForKeyedSubscript:", v5));
  v18 = v17;
  if (v16)
  {
    if (!v17)
    {
      v19 = (void *)objc_claimAutoreleasedReturnValue(+[NSIndexPath tui_indexPathForRow:inSection:](NSIndexPath, "tui_indexPathForRow:inSection:", 0, a3));
      v20 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "layoutAttributesForViewModel:atIndexPath:withLiveTransformResolver:", v25, v19, *(_QWORD *)(a1 + 32)));
      WeakRetained = objc_loadWeakRetained((id *)(*(_QWORD *)(a1 + 32) + 160));
      v22 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "viewFactoryDequeueReusableSubviewWithReuseIdentifier:indexPath:host:", CFSTR("TUIReuseIdentifierStatsIndicatorView"), v19, *(_QWORD *)(a1 + 32)));

      v26[0] = _NSConcreteStackBlock;
      v26[1] = 3221225472;
      v26[2] = sub_120C9C;
      v26[3] = &unk_241430;
      v18 = v22;
      v27 = v18;
      v23 = v20;
      v24 = *(_QWORD *)(a1 + 32);
      v28 = v23;
      v29 = v24;
      +[UIView performWithoutAnimation:](UIView, "performWithoutAnimation:", v26);
      objc_msgSend(*(id *)(a1 + 40), "setObject:forKey:", v18, v5);

    }
  }
  else
  {
    objc_msgSend(v17, "removeFromSuperview");
    objc_msgSend(*(id *)(a1 + 40), "removeObjectForKey:", v5);
  }

}

void sub_120C18(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, id a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, void *a15)
{
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;

  _Unwind_Resume(a1);
}

id sub_120C9C(void **a1)
{
  TUIReusableSubviewApplyLayoutAttributes(a1[4], a1[5]);
  return objc_msgSend(a1[6], "addSubview:", a1[4]);
}

void sub_120D4C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_120FD4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, void *a10, void *a11, void *a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void *a23,void *a24,void *a25)
{
  void *v25;
  void *v26;

  _Unwind_Resume(a1);
}

void sub_121064(uint64_t a1)
{
  void *v2;
  void *v3;
  id v4;
  id v5;
  id v6;
  id v7;
  uint64_t v8;
  void *v9;
  void *v10;
  void *v11;
  id v12;
  id v13;
  uint64_t v14;
  void *i;
  id v16;
  uint64_t v17;
  void *v18;
  id v19;
  uint64_t v20;
  void *v21;
  id v22;
  void *v23;
  void *v24;
  id v25;
  id v26;
  _QWORD v27[5];
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  _QWORD v32[5];
  _QWORD v33[5];
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  uint64_t *v40;
  _QWORD *v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  uint64_t *v45;
  uint64_t v46;
  char v47;
  _QWORD v48[4];
  _BYTE v49[128];

  v26 = objc_msgSend(objc_alloc((Class)NSMutableArray), "initWithCapacity:", objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 40), "count"));
  v25 = objc_msgSend(objc_alloc((Class)NSMutableArray), "initWithCapacity:", objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 40), "count"));
  v24 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "matchingSectionUUID"));
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "matchingSectionUID"));
  v48[0] = 0;
  v48[1] = v48;
  v48[2] = 0x2020000000;
  v48[3] = 0;
  v44 = 0;
  v45 = &v44;
  v46 = 0x2020000000;
  v47 = 0;
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "sections"));
  v33[0] = _NSConcreteStackBlock;
  v33[1] = 3221225472;
  v33[2] = sub_1215AC;
  v33[3] = &unk_241ED8;
  v33[4] = *(_QWORD *)(a1 + 32);
  v40 = &v44;
  v41 = v48;
  v42 = *(_QWORD *)(a1 + 64);
  v34 = *(id *)(a1 + 48);
  v43 = *(_BYTE *)(a1 + 72);
  v35 = *(id *)(a1 + 56);
  v4 = v24;
  v36 = v4;
  v5 = v2;
  v37 = v5;
  v6 = v26;
  v38 = v6;
  v7 = v25;
  v39 = v7;
  objc_msgSend(v3, "enumerateObjectsUsingBlock:", v33);

  v8 = *(_QWORD *)(a1 + 32);
  v9 = *(void **)(v8 + 32);
  v32[0] = _NSConcreteStackBlock;
  v32[1] = 3221225472;
  v32[2] = sub_121D28;
  v32[3] = &unk_241F00;
  v32[4] = v8;
  objc_msgSend(v9, "enumerateObjectsUsingBlock:", v32);
  if (*((_BYTE *)v45 + 24))
  {
    v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "subviews"));
    v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "sortedArrayUsingComparator:", &stru_241F20));

    v30 = 0u;
    v31 = 0u;
    v28 = 0u;
    v29 = 0u;
    v12 = v11;
    v13 = objc_msgSend(v12, "countByEnumeratingWithState:objects:count:", &v28, v49, 16);
    if (v13)
    {
      v14 = *(_QWORD *)v29;
      do
      {
        for (i = 0; i != v13; i = (char *)i + 1)
        {
          if (*(_QWORD *)v29 != v14)
            objc_enumerationMutation(v12);
          objc_msgSend(*(id *)(a1 + 32), "bringSubviewToFront:", *(_QWORD *)(*((_QWORD *)&v28 + 1) + 8 * (_QWORD)i));
        }
        v13 = objc_msgSend(v12, "countByEnumeratingWithState:objects:count:", &v28, v49, 16);
      }
      while (v13);
    }

  }
  v16 = objc_msgSend(v6, "copy");
  v17 = *(_QWORD *)(a1 + 32);
  v18 = *(void **)(v17 + 32);
  *(_QWORD *)(v17 + 32) = v16;

  v19 = objc_msgSend(v7, "copy");
  v20 = *(_QWORD *)(a1 + 32);
  v21 = *(void **)(v20 + 24);
  *(_QWORD *)(v20 + 24) = v19;

  objc_msgSend(*(id *)(a1 + 32), "setRenderModel:", *(_QWORD *)(a1 + 40));
  v22 = objc_msgSend(*(id *)(a1 + 32), "_isAutomaticContentOffsetAdjustmentEnabled");
  if ((*(_BYTE *)(a1 + 64) & 1) != 0)
    objc_msgSend(*(id *)(a1 + 32), "_setAutomaticContentOffsetAdjustmentEnabled:", 0);
  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 152), "size");
  objc_msgSend(*(id *)(a1 + 32), "setContentSize:");
  objc_msgSend(*(id *)(a1 + 32), "_setAutomaticContentOffsetAdjustmentEnabled:", v22);
  *(_BYTE *)(*(_QWORD *)(a1 + 32) + 48) |= 1u;
  objc_msgSend(*(id *)(a1 + 32), "setNeedsLayout");
  objc_msgSend(*(id *)(a1 + 32), "layoutIfNeeded");
  v23 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "sections"));
  v27[0] = _NSConcreteStackBlock;
  v27[1] = 3221225472;
  v27[2] = sub_121FC8;
  v27[3] = &unk_241DE8;
  v27[4] = *(_QWORD *)(a1 + 32);
  objc_msgSend(v23, "enumerateObjectsUsingBlock:", v27);

  _Block_object_dispose(&v44, 8);
  _Block_object_dispose(v48, 8);

}

void sub_12149C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, void *a11, void *a12, void *a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,void *a37,void *a38,void *a39,void *a40,void *a41,void *a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,char a47,uint64_t a48,uint64_t a49,uint64_t a50,char a51)
{
  void *v51;

  _Block_object_dispose(&a47, 8);
  _Block_object_dispose(&a51, 8);

  _Unwind_Resume(a1);
}

void sub_1215AC(uint64_t a1, void *a2, uint64_t a3)
{
  id v5;
  id v6;
  TUIFeedSectionView *v7;
  TUIFeedSectionView *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  _TUIFeedSectionModel *v13;
  void *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  const __CFString *v18;
  double v19;
  double MaxY;
  char v21;
  _QWORD *v22;
  void (**v23)(_QWORD, _QWORD);
  NSObject *v24;
  void *v25;
  void *v26;
  id v27;
  char v28;
  void *v29;
  void *v30;
  void *v31;
  void *v32;
  void *v33;
  void *v34;
  void *v35;
  void *v36;
  _QWORD v37[4];
  TUIFeedSectionView *v38;
  id v39;
  _QWORD v40[4];
  TUIFeedSectionView *v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  CGRect v47;
  CGRect v48;

  v5 = a2;
  v6 = objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 40), "mapToIndex:", a3);
  if (v6 == (id)0x7FFFFFFFFFFFFFFFLL)
  {
    v7 = [TUIFeedSectionView alloc];
    objc_msgSend(v5, "frame");
    v8 = -[TUIFeedSectionView initWithFrame:](v7, "initWithFrame:");
    v9 = *(void **)(a1 + 56);
    v10 = v9;
    if (!v9)
    {
      v7 = (TUIFeedSectionView *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "entry"));
      v10 = (void *)objc_claimAutoreleasedReturnValue(-[TUIFeedSectionView uuid](v7, "uuid"));
    }
    -[TUIFeedSectionView setTui_querySectionUUID:](v8, "setTui_querySectionUUID:", v10);
    if (!v9)
    {

    }
    v11 = *(void **)(a1 + 64);
    v12 = v11;
    if (!v11)
    {
      v7 = (TUIFeedSectionView *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "entry"));
      v12 = (void *)objc_claimAutoreleasedReturnValue(-[TUIFeedSectionView uid](v7, "uid"));
    }
    -[TUIFeedSectionView setTui_querySectionUID:](v8, "setTui_querySectionUID:", v12);
    if (!v11)
    {

    }
    -[TUIFeedSectionView setRenderModel:](v8, "setRenderModel:", v5);
    TUISectionViewApplyRenderModelSection(v8, v5);
    objc_msgSend(*(id *)(a1 + 32), "addSectionView:respectingZIndex:", v8, *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 88) + 8) + 24) == 0);
    v13 = objc_alloc_init(_TUIFeedSectionModel);
    goto LABEL_36;
  }
  v13 = (_TUIFeedSectionModel *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 24), "objectAtIndexedSubscript:", v6));
  v8 = (TUIFeedSectionView *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 32), "objectAtIndexedSubscript:", v6));
  v14 = (void *)objc_claimAutoreleasedReturnValue(-[TUIFeedSectionView renderModel](v8, "renderModel"));
  v15 = v14;
  if (!v14)
  {
    v16 = 0;
    v44 = 0;
    v45 = 0;
    v46 = 0;
    if (v5)
      goto LABEL_13;
LABEL_15:
    v17 = 0;
    goto LABEL_16;
  }
  objc_msgSend(v14, "config");
  v16 = v46;
  if (!v5)
    goto LABEL_15;
LABEL_13:
  objc_msgSend(v5, "config");
  v17 = v43;
LABEL_16:

  if (v16 != v17)
    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 88) + 8) + 24) = 1;
  v18 = TUIAnimationAnimationPhaseForSectionView(v5, v8, *(_QWORD *)(a1 + 104));
  v36 = (void *)objc_claimAutoreleasedReturnValue(v18);
  if (objc_msgSend(v36, "isEqualToString:", CFSTR("update"))
    && (-[TUIFeedSectionView frame](v8, "frame"), v19 > 0.0))
  {
    -[TUIFeedSectionView frame](v8, "frame");
    MaxY = CGRectGetMaxY(v47);
    objc_msgSend(v5, "frame");
    *(double *)(*(_QWORD *)(*(_QWORD *)(a1 + 96) + 8) + 24) = MaxY - CGRectGetMaxY(v48);
    v21 = 1;
  }
  else
  {
    v21 = 0;
  }
  v22 = TUIAnimationCollectionViewAnimationForSectionView(v5, v8, *(_QWORD *)(a1 + 104));
  v23 = (void (**)(_QWORD, _QWORD))objc_claimAutoreleasedReturnValue(v22);
  if (v23)
  {
    v24 = *(NSObject **)(a1 + 40);
    if (v24)
      dispatch_group_enter(v24);
    -[TUIFeedSectionView setRenderModel:](v8, "setRenderModel:", v5);
    v40[0] = _NSConcreteStackBlock;
    v40[1] = 3221225472;
    v40[2] = sub_121C30;
    v40[3] = &unk_241EB0;
    v41 = v8;
    v42 = *(id *)(a1 + 40);
    ((void (**)(_QWORD, _QWORD *))v23)[2](v23, v40);

  }
  else
  {
    v25 = (void *)objc_claimAutoreleasedReturnValue(-[TUIFeedSectionView layer](v8, "layer"));
    v26 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v25, "animationKeys"));
    v27 = objc_msgSend(v26, "count");

    if (!v27)
    {
      v37[0] = _NSConcreteStackBlock;
      v37[1] = 3221225472;
      v37[2] = sub_121D1C;
      v37[3] = &unk_23F2B8;
      v38 = v8;
      v39 = v5;
      +[UIView performWithoutAnimation:](UIView, "performWithoutAnimation:", v37);

    }
    -[TUIFeedSectionView setRenderModel:](v8, "setRenderModel:", v5);
  }
  if (*(_BYTE *)(a1 + 112))
    v28 = v21;
  else
    v28 = 1;
  if ((v28 & 1) == 0 && *(double *)(*(_QWORD *)(*(_QWORD *)(a1 + 96) + 8) + 24) != 0.0)
  {
    v29 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 48), "animationForKeyPath:", CFSTR("position")));
    objc_msgSend(v29, "setRemovedOnCompletion:", 1);
    objc_msgSend(v29, "setAdditive:", 1);
    v30 = (void *)objc_claimAutoreleasedReturnValue(+[NSValue valueWithCGPoint:](NSValue, "valueWithCGPoint:", 0.0, *(double *)(*(_QWORD *)(*(_QWORD *)(a1 + 96) + 8) + 24)));
    objc_msgSend(v29, "setFromValue:", v30);

    v31 = (void *)objc_claimAutoreleasedReturnValue(+[NSValue valueWithCGPoint:](NSValue, "valueWithCGPoint:", CGPointZero.x, CGPointZero.y));
    objc_msgSend(v29, "setToValue:", v31);

    v32 = (void *)objc_claimAutoreleasedReturnValue(-[TUIFeedSectionView layer](v8, "layer"));
    v33 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v32, "tui_uniqueAnimationKeyWithPrefix:", CFSTR("additivePosition")));

    v34 = (void *)objc_claimAutoreleasedReturnValue(-[TUIFeedSectionView layer](v8, "layer"));
    objc_msgSend(v34, "addAnimation:forKey:", v29, v33);

  }
LABEL_36:
  v35 = (void *)objc_claimAutoreleasedReturnValue(-[_TUIFeedSectionModel renderModel](v13, "renderModel"));
  -[_TUIFeedSectionModel setPreviousRenderModel:](v13, "setPreviousRenderModel:", v35);

  -[_TUIFeedSectionModel setRenderModel:](v13, "setRenderModel:", v5);
  -[_TUIFeedSectionModel setSectionIndex:](v13, "setSectionIndex:", a3);
  -[_TUIFeedSectionModel setSemanticContentAttribute:](v13, "setSemanticContentAttribute:", objc_msgSend(*(id *)(a1 + 32), "semanticContentAttribute"));
  -[_TUIFeedSectionModel setCurrentViewState:](v13, "setCurrentViewState:", *(_QWORD *)(*(_QWORD *)(a1 + 32) + 224));
  objc_msgSend(*(id *)(a1 + 72), "addObject:", v8);
  objc_msgSend(*(id *)(a1 + 80), "addObject:", v13);

}

void sub_121B40(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, void *a15)
{
  void *v15;
  void *v16;
  void *v17;
  void *v18;

  _Unwind_Resume(a1);
}

void sub_121C30(uint64_t a1)
{
  NSObject *v2;
  _QWORD v3[4];
  id v4;

  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_121CC4;
  v3[3] = &unk_241D08;
  v4 = *(id *)(a1 + 32);
  +[UIView performWithoutAnimation:](UIView, "performWithoutAnimation:", v3);
  v2 = *(NSObject **)(a1 + 40);
  if (v2)
    dispatch_group_leave(v2);

}

void sub_121CB0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{

  _Unwind_Resume(a1);
}

void sub_121CC4(uint64_t a1)
{
  void *v1;
  id v2;

  v1 = *(void **)(a1 + 32);
  v2 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v1, "renderModel"));
  TUISectionViewApplyRenderModelSection(v1, v2);

}

void sub_121D08(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_121D1C(uint64_t a1)
{
  TUISectionViewApplyRenderModelSection(*(void **)(a1 + 32), *(void **)(a1 + 40));
}

void sub_121D28(uint64_t a1, void *a2, uint64_t a3)
{
  void *v5;
  double y;
  double width;
  double height;
  uint64_t v9;
  id WeakRetained;
  id v11;

  v11 = a2;
  if (objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 40), "mapFromIndex:", a3) == (id)0x7FFFFFFFFFFFFFFFLL)
  {
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 24), "objectAtIndexedSubscript:", a3));
    y = CGRectNull.origin.y;
    width = CGRectNull.size.width;
    height = CGRectNull.size.height;
    v9 = *(_QWORD *)(a1 + 32);
    WeakRetained = objc_loadWeakRetained((id *)(v9 + 160));
    objc_msgSend(v5, "updateVisible:bounds:host:liveTransformResolver:factory:feedView:", 0, v11, v9, WeakRetained, *(_QWORD *)(a1 + 32), CGRectNull.origin.x, y, width, height);

    objc_msgSend(v11, "removeFromSuperview");
  }

}

void sub_121E1C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

int64_t sub_121E40(id a1, UIView *a2, UIView *a3)
{
  UIView *v4;
  UIView *v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  void *v12;
  int64_t v13;
  void *v15;
  void *v16;
  uint64_t v17;
  void *v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v4 = a2;
  v5 = a3;
  v6 = objc_opt_class(TUIFeedSectionView);
  v7 = TUIDynamicCast(v6, v4);
  v8 = objc_claimAutoreleasedReturnValue(v7);
  v9 = objc_opt_class(TUIFeedSectionView);
  v10 = TUIDynamicCast(v9, v5);
  v11 = objc_claimAutoreleasedReturnValue(v10);
  v12 = (void *)v11;
  if (v8 | v11)
  {
    if (v8 || !v11)
    {
      if (!v8 || v11)
      {
        v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend((id)v8, "renderModel"));
        v16 = v15;
        if (v15)
        {
          objc_msgSend(v15, "config");
          v17 = v22;
        }
        else
        {
          v17 = 0;
          v22 = 0;
        }

        v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "renderModel"));
        v19 = v18;
        if (v18)
        {
          objc_msgSend(v18, "config");
          v20 = v22;
        }
        else
        {
          v20 = 0;
        }

        v21 = -1;
        if (v17 >= v20)
          v21 = 1;
        if (v17 == v20)
          v13 = 0;
        else
          v13 = v21;
      }
      else
      {
        v13 = 1;
      }
    }
    else
    {
      v13 = -1;
    }
  }
  else
  {
    v13 = 0;
  }

  return v13;
}

void sub_121F84(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;

  v6 = v5;

  _Unwind_Resume(a1);
}

void sub_121FC8(uint64_t a1)
{
  id v1;

  v1 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 24), "objectAtIndexedSubscript:"));
  objc_msgSend(v1, "setPreviousRenderModel:", 0);

}

void sub_122010(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_122024(uint64_t a1)
{
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));
}

id sub_122088(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 40), "insertAtIndex:", a2);
}

id sub_1220FC(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 40), "deleteAtIndex:", a2);
}

void sub_1223BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{

  _Unwind_Resume(a1);
}

void sub_12249C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1224FC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1225E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_12269C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void sub_12276C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void sub_122840(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

id sub_12285C(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "appendVisibleView:", *(_QWORD *)(a1 + 32));
}

void sub_1228F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

id sub_122918(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "appendRenderOverrideObservers:", *(_QWORD *)(a1 + 32));
}

void sub_122A98(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{

  _Unwind_Resume(a1);
}

void sub_122C60(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{

  _Unwind_Resume(a1);
}

void sub_123064(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11)
{
  void *v11;

  _Unwind_Resume(a1);
}

void sub_12324C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_123304(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_123780(id a1)
{
  void *v1;
  id v2;

  v1 = (void *)objc_claimAutoreleasedReturnValue(+[NSProcessInfo processInfo](NSProcessInfo, "processInfo"));
  v2 = objc_msgSend(v1, "physicalMemory");

  if ((double)(unint64_t)v2 * 9.31322575e-10 >= 2.0)
    qword_2CA3C8 = 0x3FE0000000000000;
}

void sub_1237E0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

uint64_t sub_1237F0(uint64_t a1, uint64_t a2)
{
  _QWORD *i;

  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  sub_6A20(a1, *(_QWORD *)(a2 + 8));
  for (i = *(_QWORD **)(a2 + 16); i; i = (_QWORD *)*i)
    sub_123864(a1, i + 2, (_OWORD *)i + 1);
  return a1;
}

void sub_12384C(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_14B0C(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_123864(uint64_t a1, unint64_t *a2, _OWORD *a3)
{
  unint64_t v3;
  unint64_t v6;
  unint64_t v7;
  uint8x8_t v8;
  _QWORD **v9;
  _QWORD *i;
  unint64_t v11;
  float v12;
  float v13;
  _BOOL8 v14;
  unint64_t v15;
  unint64_t v16;
  size_t v17;
  uint64_t v18;
  _QWORD *v19;
  unint64_t v20;

  v6 = *a2;
  v7 = *(_QWORD *)(a1 + 8);
  if (v7)
  {
    v8 = (uint8x8_t)vcnt_s8((int8x8_t)v7);
    v8.i16[0] = vaddlv_u8(v8);
    if (v8.u32[0] > 1uLL)
    {
      v3 = *a2;
      if (v6 >= v7)
        v3 = v6 % v7;
    }
    else
    {
      v3 = (v7 - 1) & v6;
    }
    v9 = *(_QWORD ***)(*(_QWORD *)a1 + 8 * v3);
    if (v9)
    {
      for (i = *v9; i; i = (_QWORD *)*i)
      {
        v11 = i[1];
        if (v11 == v6)
        {
          if (i[2] == v6)
            return i;
        }
        else
        {
          if (v8.u32[0] > 1uLL)
          {
            if (v11 >= v7)
              v11 %= v7;
          }
          else
          {
            v11 &= v7 - 1;
          }
          if (v11 != v3)
            break;
        }
      }
    }
  }
  i = operator new(0x20uLL);
  *i = 0;
  i[1] = v6;
  *((_OWORD *)i + 1) = *a3;
  v12 = (float)(unint64_t)(*(_QWORD *)(a1 + 24) + 1);
  v13 = *(float *)(a1 + 32);
  if (!v7 || (float)(v13 * (float)v7) < v12)
  {
    v14 = 1;
    if (v7 >= 3)
      v14 = (v7 & (v7 - 1)) != 0;
    v15 = v14 | (2 * v7);
    v16 = vcvtps_u32_f32(v12 / v13);
    if (v15 <= v16)
      v17 = v16;
    else
      v17 = v15;
    sub_6A20(a1, v17);
    v7 = *(_QWORD *)(a1 + 8);
    if ((v7 & (v7 - 1)) != 0)
    {
      if (v6 >= v7)
        v3 = v6 % v7;
      else
        v3 = v6;
    }
    else
    {
      v3 = (v7 - 1) & v6;
    }
  }
  v18 = *(_QWORD *)a1;
  v19 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v3);
  if (v19)
  {
    *i = *v19;
LABEL_38:
    *v19 = i;
    goto LABEL_39;
  }
  *i = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = i;
  *(_QWORD *)(v18 + 8 * v3) = a1 + 16;
  if (*i)
  {
    v20 = *(_QWORD *)(*i + 8);
    if ((v7 & (v7 - 1)) != 0)
    {
      if (v20 >= v7)
        v20 %= v7;
    }
    else
    {
      v20 &= v7 - 1;
    }
    v19 = (_QWORD *)(*(_QWORD *)a1 + 8 * v20);
    goto LABEL_38;
  }
LABEL_39:
  ++*(_QWORD *)(a1 + 24);
  return i;
}

void sub_123A68(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_123A7C(_QWORD *a1, unint64_t *a2)
{
  int8x8_t v2;
  unint64_t v3;
  uint8x8_t v4;
  unint64_t v5;
  _QWORD *v6;
  _QWORD *result;
  unint64_t v8;

  v2 = (int8x8_t)a1[1];
  if (!*(_QWORD *)&v2)
    return 0;
  v3 = *a2;
  v4 = (uint8x8_t)vcnt_s8(v2);
  v4.i16[0] = vaddlv_u8(v4);
  if (v4.u32[0] > 1uLL)
  {
    v5 = *a2;
    if (v3 >= *(_QWORD *)&v2)
      v5 = v3 % *(_QWORD *)&v2;
  }
  else
  {
    v5 = (*(_QWORD *)&v2 - 1) & v3;
  }
  v6 = *(_QWORD **)(*a1 + 8 * v5);
  if (!v6)
    return 0;
  result = (_QWORD *)*v6;
  if (*v6)
  {
    do
    {
      v8 = result[1];
      if (v8 == v3)
      {
        if (result[2] == v3)
          return result;
      }
      else
      {
        if (v4.u32[0] > 1uLL)
        {
          if (v8 >= *(_QWORD *)&v2)
            v8 %= *(_QWORD *)&v2;
        }
        else
        {
          v8 &= *(_QWORD *)&v2 - 1;
        }
        if (v8 != v5)
          return 0;
      }
      result = (_QWORD *)*result;
    }
    while (result);
  }
  return result;
}

_QWORD *sub_123B30(uint64_t a1, unint64_t *a2, uint64_t a3, _QWORD **a4)
{
  unint64_t v4;
  unint64_t v7;
  unint64_t v8;
  uint8x8_t v9;
  _QWORD **v10;
  _QWORD *i;
  unint64_t v12;
  float v13;
  float v14;
  _BOOL8 v15;
  unint64_t v16;
  unint64_t v17;
  size_t v18;
  uint64_t v19;
  _QWORD *v20;
  unint64_t v21;

  v7 = *a2;
  v8 = *(_QWORD *)(a1 + 8);
  if (v8)
  {
    v9 = (uint8x8_t)vcnt_s8((int8x8_t)v8);
    v9.i16[0] = vaddlv_u8(v9);
    if (v9.u32[0] > 1uLL)
    {
      v4 = *a2;
      if (v7 >= v8)
        v4 = v7 % v8;
    }
    else
    {
      v4 = (v8 - 1) & v7;
    }
    v10 = *(_QWORD ***)(*(_QWORD *)a1 + 8 * v4);
    if (v10)
    {
      for (i = *v10; i; i = (_QWORD *)*i)
      {
        v12 = i[1];
        if (v12 == v7)
        {
          if (i[2] == v7)
            return i;
        }
        else
        {
          if (v9.u32[0] > 1uLL)
          {
            if (v12 >= v8)
              v12 %= v8;
          }
          else
          {
            v12 &= v8 - 1;
          }
          if (v12 != v4)
            break;
        }
      }
    }
  }
  i = operator new(0x20uLL);
  *i = 0;
  i[1] = v7;
  i[2] = **a4;
  i[3] = 0;
  v13 = (float)(unint64_t)(*(_QWORD *)(a1 + 24) + 1);
  v14 = *(float *)(a1 + 32);
  if (!v8 || (float)(v14 * (float)v8) < v13)
  {
    v15 = 1;
    if (v8 >= 3)
      v15 = (v8 & (v8 - 1)) != 0;
    v16 = v15 | (2 * v8);
    v17 = vcvtps_u32_f32(v13 / v14);
    if (v16 <= v17)
      v18 = v17;
    else
      v18 = v16;
    sub_6A20(a1, v18);
    v8 = *(_QWORD *)(a1 + 8);
    if ((v8 & (v8 - 1)) != 0)
    {
      if (v7 >= v8)
        v4 = v7 % v8;
      else
        v4 = v7;
    }
    else
    {
      v4 = (v8 - 1) & v7;
    }
  }
  v19 = *(_QWORD *)a1;
  v20 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v4);
  if (v20)
  {
    *i = *v20;
LABEL_38:
    *v20 = i;
    goto LABEL_39;
  }
  *i = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = i;
  *(_QWORD *)(v19 + 8 * v4) = a1 + 16;
  if (*i)
  {
    v21 = *(_QWORD *)(*i + 8);
    if ((v8 & (v8 - 1)) != 0)
    {
      if (v21 >= v8)
        v21 %= v8;
    }
    else
    {
      v21 &= v8 - 1;
    }
    v20 = (_QWORD *)(*(_QWORD *)a1 + 8 * v21);
    goto LABEL_38;
  }
LABEL_39:
  ++*(_QWORD *)(a1 + 24);
  return i;
}

void sub_123D38(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_123D4C(uint64_t a1, unint64_t *a2, _QWORD *a3)
{
  unint64_t v3;
  unint64_t v6;
  unint64_t v7;
  uint8x8_t v8;
  _QWORD **v9;
  _QWORD *i;
  unint64_t v11;
  float v12;
  float v13;
  _BOOL8 v14;
  unint64_t v15;
  unint64_t v16;
  size_t v17;
  uint64_t v18;
  _QWORD *v19;
  unint64_t v20;

  v6 = *a2;
  v7 = *(_QWORD *)(a1 + 8);
  if (v7)
  {
    v8 = (uint8x8_t)vcnt_s8((int8x8_t)v7);
    v8.i16[0] = vaddlv_u8(v8);
    if (v8.u32[0] > 1uLL)
    {
      v3 = *a2;
      if (v6 >= v7)
        v3 = v6 % v7;
    }
    else
    {
      v3 = (v7 - 1) & v6;
    }
    v9 = *(_QWORD ***)(*(_QWORD *)a1 + 8 * v3);
    if (v9)
    {
      for (i = *v9; i; i = (_QWORD *)*i)
      {
        v11 = i[1];
        if (v11 == v6)
        {
          if (i[2] == v6)
            return i;
        }
        else
        {
          if (v8.u32[0] > 1uLL)
          {
            if (v11 >= v7)
              v11 %= v7;
          }
          else
          {
            v11 &= v7 - 1;
          }
          if (v11 != v3)
            break;
        }
      }
    }
  }
  i = operator new(0x18uLL);
  *i = 0;
  i[1] = v6;
  i[2] = *a3;
  v12 = (float)(unint64_t)(*(_QWORD *)(a1 + 24) + 1);
  v13 = *(float *)(a1 + 32);
  if (!v7 || (float)(v13 * (float)v7) < v12)
  {
    v14 = 1;
    if (v7 >= 3)
      v14 = (v7 & (v7 - 1)) != 0;
    v15 = v14 | (2 * v7);
    v16 = vcvtps_u32_f32(v12 / v13);
    if (v15 <= v16)
      v17 = v16;
    else
      v17 = v15;
    sub_6A20(a1, v17);
    v7 = *(_QWORD *)(a1 + 8);
    if ((v7 & (v7 - 1)) != 0)
    {
      if (v6 >= v7)
        v3 = v6 % v7;
      else
        v3 = v6;
    }
    else
    {
      v3 = (v7 - 1) & v6;
    }
  }
  v18 = *(_QWORD *)a1;
  v19 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v3);
  if (v19)
  {
    *i = *v19;
LABEL_38:
    *v19 = i;
    goto LABEL_39;
  }
  *i = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = i;
  *(_QWORD *)(v18 + 8 * v3) = a1 + 16;
  if (*i)
  {
    v20 = *(_QWORD *)(*i + 8);
    if ((v7 & (v7 - 1)) != 0)
    {
      if (v20 >= v7)
        v20 %= v7;
    }
    else
    {
      v20 &= v7 - 1;
    }
    v19 = (_QWORD *)(*(_QWORD *)a1 + 8 * v20);
    goto LABEL_38;
  }
LABEL_39:
  ++*(_QWORD *)(a1 + 24);
  return i;
}

void sub_123F50(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

void sub_124388(id a1)
{
  TUIDragController *v1;
  void *v2;

  v1 = objc_alloc_init(TUIDragController);
  v2 = (void *)qword_2CB780;
  qword_2CB780 = (uint64_t)v1;

}

id sub_124CEC(void *a1, void *a2, void *a3, double a4, double a5)
{
  id v9;
  id v10;
  id v11;
  uint64_t v12;
  void *v13;
  id v14;
  void *v15;
  void *v16;
  id v17;
  void *v18;
  void *v19;
  unsigned int v20;
  void *v21;
  id v22;
  id v23;
  id v24;
  void *v25;
  id v26;
  id v27;

  v9 = a2;
  v10 = a3;
  v11 = a1;
  v12 = objc_opt_class(_TUIDragPreviewInfo);
  v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "_privateLocalContext"));

  v14 = TUIDynamicCast(v12, v13);
  v15 = (void *)objc_claimAutoreleasedReturnValue(v14);

  v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v15, "dragInfo"));
  v17 = v10;
  v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v16, "arguments"));
  v19 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v18, "objectForKeyedSubscript:", CFSTR("clearBackground")));
  v20 = objc_msgSend(v19, "BOOLValue");

  v21 = v17;
  if (v20)
  {
    v21 = (void *)objc_claimAutoreleasedReturnValue(+[UIColor clearColor](UIColor, "clearColor"));

  }
  if (v21)
  {
    v22 = objc_alloc_init((Class)UIDragPreviewParameters);
    objc_msgSend(v22, "setBackgroundColor:", v21);
  }
  else
  {
    v22 = 0;
  }

  if (!v22)
  {
    v22 = objc_alloc_init((Class)UIDragPreviewParameters);
    if (v9)
      goto LABEL_8;
LABEL_10:
    v27 = objc_alloc((Class)UITargetedDragPreview);
    v23 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v15, "view"));
    v26 = objc_msgSend(v27, "initWithView:parameters:", v23, v22);
    goto LABEL_11;
  }
  if (!v9)
    goto LABEL_10;
LABEL_8:
  v23 = objc_msgSend(objc_alloc((Class)UIDragPreviewTarget), "initWithContainer:center:", v9, a4, a5);
  v24 = objc_alloc((Class)UITargetedDragPreview);
  v25 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v15, "view"));
  v26 = objc_msgSend(v24, "initWithView:parameters:target:", v25, v22, v23);

LABEL_11:
  return v26;
}

id *sub_1255B8(id *result, uint64_t a2)
{
  id *v2;

  v2 = result;
  if (a2 == 1)
  {
    objc_msgSend(result[4], "_setAlpha:forSessionDragItems:", result[5], 1.0);
    return (id *)objc_msgSend(v2[4], "_notifyDelegateOfViewDraggingStateForSession:interaction:dropOperation:", v2[5], v2[6], 0);
  }
  else if (!a2)
  {
    return (id *)objc_msgSend(result[4], "_setAlpha:forSessionDragItems:", result[5], 0.5);
  }
  return result;
}

id sub_12578C(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 32), "setAlpha:", 1.0);
  return objc_msgSend(*(id *)(a1 + 40), "setUserInteractionEnabled:", 1);
}

id sub_125930(void *a1)
{
  void *v1;
  void *v2;
  void *v3;

  v1 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1, "actionHandler"));
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v1, "actionsData"));

  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "behaviorDataForTrigger:", CFSTR("drag")));
  return v3;
}

void sub_125DC8(_QWORD *a1)
{
  void *v2;
  uint64_t v3;
  void *v4;
  id v5;

  v2 = (void *)a1[4];
  v3 = a1[5];
  v5 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1[6] + 32), "behavior"));
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1[6] + 32), "arguments"));
  objc_msgSend(v2, "handleActionForObject:withName:arguments:", v3, v5, v4);

}

void sub_126448(uint64_t a1, void *a2)
{
  id v3;
  id v4;

  v3 = objc_msgSend(a2, "newUIMenuElementWithActionObject:delegate:", *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40));
  if (v3)
  {
    v4 = v3;
    objc_msgSend(*(id *)(a1 + 48), "addObject:", v3);
    v3 = v4;
  }

}

BOOL sub_1266A4(id a1, TUIImageModel *a2, NSDictionary *a3)
{
  TUIImageModel *v3;
  BOOL v4;
  void *v5;

  v3 = a2;
  if (-[TUIImageModel isLoaded](v3, "isLoaded"))
  {
    v4 = 0;
  }
  else
  {
    v5 = (void *)objc_claimAutoreleasedReturnValue(-[TUIImageModel urlString](v3, "urlString"));
    v4 = v5 != 0;

  }
  return v4;
}

void sub_1267AC(id a1, TUIModel *a2, unint64_t a3, BOOL *a4)
{
  -[TUIModel setParentModel:](a2, "setParentModel:", 0, a4);
}

id sub_1267B8(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "setParentModel:", *(_QWORD *)(a1 + 32));
}

void sub_126884(uint64_t a1, void *a2)
{
  id v3;
  id v4;
  NSObject *v5;

  v3 = a2;
  if ((objc_opt_respondsToSelector(v3, "appendObjectsWithProtocol:toArray:") & 1) != 0)
  {
    objc_msgSend(v3, "appendObjectsWithProtocol:toArray:", &OBJC_PROTOCOL___TUIMenuItemModel, *(_QWORD *)(a1 + 32));
  }
  else
  {
    v4 = TUIInstantiationLog();
    v5 = objc_claimAutoreleasedReturnValue(v4);
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
      sub_17EE00((uint64_t)v3, v5);

  }
}

id sub_1279F0(uint64_t a1, void *a2)
{
  return _objc_msgSend(a2, "parentFeedDidUpdateTriggerStatesWithEvent:", *(_QWORD *)(a1 + 32));
}

void sub_127E70(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_127F44(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1281F4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

char *sub_12828C(char *result, char *__src, uint64_t a3, unint64_t a4)
{
  _QWORD *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  void **v12;
  char *v13;
  _BYTE *v14;
  unint64_t v15;
  char *v16;
  size_t v17;
  void *v18;
  char *v19;

  v7 = result;
  v8 = *((_QWORD *)result + 2);
  v9 = *(char **)result;
  if (a4 > (v8 - *(_QWORD *)result) >> 4)
  {
    if (v9)
    {
      *((_QWORD *)result + 1) = v9;
      operator delete(v9);
      v8 = 0;
      *v7 = 0;
      v7[1] = 0;
      v7[2] = 0;
    }
    if (a4 >> 60)
      sub_6F9C();
    v10 = v8 >> 3;
    if (v8 >> 3 <= a4)
      v10 = a4;
    if ((unint64_t)v8 >= 0x7FFFFFFFFFFFFFF0)
      v11 = 0xFFFFFFFFFFFFFFFLL;
    else
      v11 = v10;
    result = sub_2A0A0(v7, v11);
    v13 = (char *)v7[1];
    v12 = (void **)(v7 + 1);
    v9 = v13;
LABEL_16:
    v17 = a3 - (_QWORD)__src;
    if (v17)
    {
      v18 = v9;
      v19 = __src;
      goto LABEL_18;
    }
    goto LABEL_19;
  }
  v12 = (void **)(result + 8);
  v14 = (_BYTE *)*((_QWORD *)result + 1);
  v15 = (v14 - v9) >> 4;
  if (v15 >= a4)
    goto LABEL_16;
  v16 = &__src[16 * v15];
  if (v14 != v9)
  {
    result = (char *)memmove(*(void **)result, __src, v14 - v9);
    v9 = (char *)*v12;
  }
  v17 = a3 - (_QWORD)v16;
  if (v17)
  {
    v18 = v9;
    v19 = v16;
LABEL_18:
    result = (char *)memmove(v18, v19, v17);
  }
LABEL_19:
  *v12 = &v9[v17];
  return result;
}

id TUI::Evaluation::Variables::Globals::equivalentTo(uint64_t a1, unsigned __int16 **a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  id result;
  BOOL v9;
  uint64_t v10;
  unint64_t v11;
  BOOL v12;

  v4 = *a3;
  v3 = a3[1];
  v5 = (v3 - *a3) >> 4;
  if (v5 != (uint64_t)(*(_QWORD *)(a1 + 48) - *(_QWORD *)(a1 + 40)) >> 4)
    return 0;
  result = TUI::Evaluation::Variables::Scope::equivalentTo(a2, *(const TUI::Evaluation::Variables::Scope **)(a1 + 24));
  if ((_DWORD)result)
    v9 = v3 == v4;
  else
    v9 = 1;
  if (!v9)
  {
    v10 = 0;
    v11 = 1;
    while (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + v10) + 16) == *(_QWORD *)(*(_QWORD *)(*a3 + v10) + 16))
    {
      result = (id)TUI::Evaluation::Variables::Globals::equivalentTo();
      if ((_DWORD)result)
        v12 = v11 >= v5;
      else
        v12 = 1;
      ++v11;
      v10 += 16;
      if (v12)
        return result;
    }
    return 0;
  }
  return result;
}

id TUI::Evaluation::Variables::Globals::equivalentTo(TUI::Evaluation::Variables::Globals *this, unsigned __int16 **a2)
{
  const TUI::Evaluation::Variables::Scope *v2;

  v2 = (const TUI::Evaluation::Variables::Scope *)*((_QWORD *)this + 3);
  if (v2 == (const TUI::Evaluation::Variables::Scope *)a2)
    return &dword_0 + 1;
  else
    return TUI::Evaluation::Variables::Scope::equivalentTo(a2, v2);
}

BOOL TUI::Evaluation::Variables::Globals::equivalentTo(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BOOL8 result;
  unint64_t v9;
  int v10;
  int v11;
  BOOL v12;

  v2 = *a2;
  v3 = a2[1];
  v4 = (v3 - *a2) >> 4;
  v5 = *(_QWORD *)(a1 + 40);
  v6 = *(_QWORD *)(a1 + 48) - v5;
  result = v4 == v6 >> 4;
  if (v4 == v6 >> 4 && v3 != v2)
  {
    v9 = 1;
    while (*(_QWORD *)(*(_QWORD *)v5 + 16) == *(_QWORD *)(*(_QWORD *)v2 + 16))
    {
      v10 = *(_DWORD *)(*(_QWORD *)v5 + 88);
      v11 = *(_DWORD *)(*(_QWORD *)v2 + 88);
      result = v10 == v11;
      v12 = v10 != v11 || v9++ >= v4;
      v5 += 16;
      v2 += 16;
      if (v12)
        return result;
    }
    return 0;
  }
  return result;
}

void sub_12883C(id a1)
{
  void *v1;

  v1 = (void *)qword_2CB790;
  qword_2CB790 = (uint64_t)&off_2546E0;

}

void sub_128B00(id a1)
{
  void *v1;

  v1 = (void *)qword_2CB7A0;
  qword_2CB7A0 = (uint64_t)&off_254708;

}

id sub_12A048(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "appendLayoutModelsToArray:", *(_QWORD *)(a1 + 32));
}

void sub_12A134(id a1, TUIModel *a2, unint64_t a3, BOOL *a4)
{
  -[TUIModel setParentModel:](a2, "setParentModel:", 0, a4);
}

id sub_12A140(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "setParentModel:", *(_QWORD *)(a1 + 32));
}

void sub_12A200(uint64_t a1, void *a2)
{
  id v3;

  v3 = a2;
  if ((objc_opt_respondsToSelector(v3, "appendObjectsWithProtocol:toArray:") & 1) != 0)
    objc_msgSend(v3, "appendObjectsWithProtocol:toArray:", *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40));

}

void sub_12A4C0(uint64_t a1, void *a2)
{
  TUIBoxBuilder *v3;
  void *v4;
  void *v5;
  void *v6;
  id v7;

  v7 = a2;
  v3 = objc_alloc_init(TUIBoxBuilder);
  (*(void (**)(void))(*(_QWORD *)(a1 + 48) + 16))();
  v4 = (void *)objc_claimAutoreleasedReturnValue(-[TUIBoxBuilder finalizeModelsWithParent:box:context:](v3, "finalizeModelsWithParent:box:context:", 0, 0, *(_QWORD *)(a1 + 32)));
  if (objc_msgSend(v4, "count") == (char *)&dword_0 + 1)
  {
    v5 = *(void **)(a1 + 40);
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "firstObject"));
    objc_msgSend(v5, "addModel:forState:", v6, v7);

  }
  else
  {
    objc_msgSend(*(id *)(a1 + 32), "reportError:", 1021);
  }

}

NSArray *__cdecl sub_12A9B8(id a1, NSArray *a2)
{
  NSArray *v2;
  NSUInteger v3;
  NSUInteger v4;
  NSUInteger v5;
  void *v6;
  void *v7;
  id v8;
  NSArray *v9;
  NSArray *v10;

  v2 = a2;
  v3 = -[NSArray count](v2, "count");
  if (!v3)
    goto LABEL_8;
  v4 = v3;
  v5 = 0;
  while (1)
  {
    v6 = (void *)objc_claimAutoreleasedReturnValue(-[NSArray objectAtIndexedSubscript:](v2, "objectAtIndexedSubscript:", v5));
    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "updates"));
    v8 = objc_msgSend(v7, "count");

    if (v8)
      break;
    if (v4 == ++v5)
    {
      v5 = v4;
      break;
    }
  }
  if (v5)
    v9 = (NSArray *)objc_claimAutoreleasedReturnValue(-[NSArray subarrayWithRange:](v2, "subarrayWithRange:", v5, v4 - v5));
  else
LABEL_8:
    v9 = v2;
  v10 = v9;

  return v10;
}

void sub_12AFF8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_12B010(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_12B020(uint64_t a1)
{

}

void sub_12B028(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;

  v3 = objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "firstObject"));
  v4 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8);
  v5 = *(void **)(v4 + 40);
  *(_QWORD *)(v4 + 40) = v3;

}

void sub_12B174(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_12B18C(uint64_t a1, void *a2)
{
  objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40), a2);
}

void sub_12B23C(uint64_t a1, void *a2)
{
  _QWORD v3[4];
  id v4;

  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_12B2A8;
  v3[3] = &unk_2421C0;
  v4 = *(id *)(a1 + 32);
  objc_msgSend(a2, "enumerateObjectsUsingBlock:", v3);

}

uint64_t sub_12B2A8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

void sub_12BB38(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9)
{
  id v9;
  void *v10;

  if (a2 == 1)
  {
    v9 = objc_begin_catch(exception_object);
    v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "description"));
    NSLog(CFSTR("Unable to copy TUIMicaPlayer. Error = %@"));

    objc_end_catch();
    JUMPOUT(0x12BB18);
  }
  _Unwind_Resume(exception_object);
}

void sub_12CC50(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_12CC68(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_12CC78(uint64_t a1)
{

}

void sub_12CC80(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  double v5;
  double v6;
  id v7;
  uint64_t v8;
  id v9;
  _QWORD v10[4];
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v14;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "children"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "firstObject"));

  v4 = *(void **)(a1 + 40);
  objc_msgSend(v3, "computedTransformedSize");
  v6 = v5;
  v7 = objc_msgSend(*(id *)(a1 + 32), "computedLayoutDirection");
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472;
  v10[2] = sub_12CD64;
  v10[3] = &unk_2421E8;
  v11 = *(id *)(a1 + 40);
  v12 = v3;
  v8 = *(_QWORD *)(a1 + 48);
  v13 = *(_QWORD *)(a1 + 32);
  v14 = v8;
  v9 = v3;
  objc_msgSend(v4, "evaluateWithWidth:layoutDirection:block:", v7, v10, v6);

}

void sub_12CD64(uint64_t a1)
{
  void *v2;
  id v3;
  void *v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  NSMutableArray *v13;
  TUILayoutRenderModelCollector *v14;
  uint64_t v15;
  void *v16;
  TUIRenderModelCollection *v17;
  void *v18;
  double v19;
  double v20;
  double v21;
  double v22;
  uint64_t v23;
  id v24;
  void *v25;
  void *v26;
  TUIRenderModelCollection *v27;
  uint64_t v28;
  void *v29;
  id v30;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "renderModelForLayout:kind:", *(_QWORD *)(a1 + 40), 7));
  v3 = objc_msgSend(v2, "copyWithSection:offset:uuid:", 0, *(_QWORD *)(*(_QWORD *)(a1 + 48) + 112), CGPointZero.x, CGPointZero.y);

  v4 = *(void **)(a1 + 48);
  objc_msgSend(*(id *)(a1 + 32), "contentsScale");
  objc_msgSend(v4, "erasableInsetsForContentsScale:");
  v6 = v5;
  v8 = v7;
  v10 = v9;
  v12 = v11;
  v13 = objc_opt_new(NSMutableArray);
  objc_msgSend(*(id *)(a1 + 40), "appendVisibleBoundsObservers:axis:offset:", v13, 1, 0.0);
  v14 = objc_alloc_init(TUILayoutRenderModelCollector);
  v15 = *(_QWORD *)(a1 + 40);
  v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "UUID"));
  -[TUILayoutRenderModelCollector collectWithRoot:options:entryUUID:](v14, "collectWithRoot:options:entryUUID:", v15, 1, v16);

  v17 = [TUIRenderModelCollection alloc];
  v30 = v3;
  v18 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v30, 1));
  objc_msgSend(v3, "size");
  v20 = v19;
  v22 = v21;
  v23 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 128);
  v24 = objc_msgSend(*(id *)(a1 + 32), "layoutDirection");
  v25 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "UUID"));
  v26 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "uid"));
  v27 = -[TUIRenderModelCollection initWithContent:sections:size:insets:visibleBoundsObservers:info:anchorSet:layoutDirection:matchingUUID:matchingUID:](v17, "initWithContent:sections:size:insets:visibleBoundsObservers:info:anchorSet:layoutDirection:matchingUUID:matchingUID:", 0, v18, v13, 0, v23, v24, v20, v22, v6, v8, v10, v12, v25, v26);
  v28 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
  v29 = *(void **)(v28 + 40);
  *(_QWORD *)(v28 + 40) = v27;

}

void sub_12D8E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, void *a11, void *a12, void *a13, void *a14)
{
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;

  _Unwind_Resume(a1);
}

int64_t sub_12E30C(id a1, id a2, id a3)
{
  id v4;
  id v5;
  double v6;
  double v7;
  double v8;
  int64_t v9;
  double v10;
  double v11;
  double v12;

  v4 = a2;
  v5 = a3;
  objc_msgSend(v4, "defaultPosition");
  v7 = v6;
  objc_msgSend(v5, "defaultPosition");
  if (v7 >= v8)
  {
    objc_msgSend(v4, "defaultPosition");
    v11 = v10;
    objc_msgSend(v5, "defaultPosition");
    v9 = v11 > v12;
  }
  else
  {
    v9 = -1;
  }

  return v9;
}

void sub_12E440(_QWORD *a1, void *a2, uint64_t a3)
{
  void *v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  void *v15;
  void *v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  id v28;

  v28 = a2;
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v28, "floatingLiveTransform"));
  objc_msgSend(v28, "defaultPosition");
  v7 = v6;
  objc_msgSend(v28, "defaultPosition");
  v9 = v8;
  v10 = *(double *)(a1[4] + 40);
  if (v8 <= v10)
  {
    objc_msgSend(v28, "sectionBottomY");
    v12 = v11;
    objc_msgSend(v5, "size");
    if (v10 >= v12 - v13)
      v9 = v12 - v13;
    else
      v9 = v10;
    objc_msgSend(v28, "defaultPosition");
    if (v14 >= v9)
      v9 = v14;
    if ((unint64_t)(a3 + 1) >= a1[6])
    {
      v16 = 0;
    }
    else
    {
      v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1[4] + 8), "objectAtIndexedSubscript:"));
      v16 = v15;
      if (v15)
      {
        objc_msgSend(v15, "defaultPosition");
        v18 = v17;
        objc_msgSend(v5, "size");
        if (v9 + v19 >= v18)
        {
          objc_msgSend(v5, "size", v9 + v19);
          v9 = v18 - v20;
        }
      }
    }

  }
  objc_msgSend(v28, "currentOffset");
  if (v22 != v7 || v21 != v9)
  {
    objc_msgSend(v28, "setCurrentOffset:", v7, v9);
    v24 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1[4] + 16), "liveTransformViewInvalidationMap"));
    v25 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v24, "objectForKey:", v5));

    v26 = (void *)a1[5];
    v27 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v25, "allObjects"));
    objc_msgSend(v26, "invalidateIndexPaths:", v27);

  }
}

id sub_12EC44(void *a1)
{
  void *v1;
  void *v2;

  v1 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1, "layoutAttributes"));
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v1, "renderModel"));

  return v2;
}

void sub_12F55C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_12F574(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_12F584(uint64_t a1)
{

}

void sub_12F58C(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  double v5;
  double v6;
  id v7;
  uint64_t v8;
  id v9;
  _QWORD v10[4];
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v14;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "children"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "firstObject"));

  v4 = *(void **)(a1 + 40);
  objc_msgSend(v3, "computedTransformedSize");
  v6 = v5;
  v7 = objc_msgSend(*(id *)(a1 + 32), "computedLayoutDirection");
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472;
  v10[2] = sub_12F670;
  v10[3] = &unk_2421E8;
  v11 = *(id *)(a1 + 40);
  v12 = v3;
  v8 = *(_QWORD *)(a1 + 48);
  v13 = *(_QWORD *)(a1 + 32);
  v14 = v8;
  v9 = v3;
  objc_msgSend(v4, "evaluateWithWidth:layoutDirection:block:", v7, v10, v6);

}

void sub_12F670(uint64_t a1)
{
  void *v2;
  id v3;
  void *v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  NSMutableArray *v13;
  TUIRenderModelCollection *v14;
  void *v15;
  double v16;
  double v17;
  double v18;
  double v19;
  uint64_t v20;
  id v21;
  void *v22;
  void *v23;
  TUIRenderModelCollection *v24;
  uint64_t v25;
  void *v26;
  id v27;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "renderModelForLayout:kind:", *(_QWORD *)(a1 + 40), 7));
  v3 = objc_msgSend(v2, "copyWithSection:offset:uuid:", 0, *(_QWORD *)(*(_QWORD *)(a1 + 48) + 112), CGPointZero.x, CGPointZero.y);

  v4 = *(void **)(a1 + 48);
  objc_msgSend(*(id *)(a1 + 32), "contentsScale");
  objc_msgSend(v4, "erasableInsetsForContentsScale:");
  v6 = v5;
  v8 = v7;
  v10 = v9;
  v12 = v11;
  v13 = objc_opt_new(NSMutableArray);
  objc_msgSend(*(id *)(a1 + 40), "appendVisibleBoundsObservers:axis:offset:", v13, 2, 0.0);
  v14 = [TUIRenderModelCollection alloc];
  v27 = v3;
  v15 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v27, 1));
  objc_msgSend(v3, "size");
  v17 = v16;
  v19 = v18;
  v20 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 128);
  v21 = objc_msgSend(*(id *)(a1 + 32), "layoutDirection");
  v22 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "UUID"));
  v23 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "uid"));
  v24 = -[TUIRenderModelCollection initWithContent:sections:size:insets:visibleBoundsObservers:info:anchorSet:layoutDirection:matchingUUID:matchingUID:](v14, "initWithContent:sections:size:insets:visibleBoundsObservers:info:anchorSet:layoutDirection:matchingUUID:matchingUID:", 0, v15, v13, 0, v20, v21, v17, v19, v6, v8, v10, v12, v22, v23);
  v25 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
  v26 = *(void **)(v25 + 40);
  *(_QWORD *)(v25 + 40) = v24;

}

void sub_12FF7C(id a1)
{
  void *v1;
  id v2;
  void *v3;
  id v4;
  void *v5;
  _QWORD v6[3];

  v1 = (void *)objc_claimAutoreleasedReturnValue(+[TUIAttributeSet supportedAttributesSize](TUIAttributeSet, "supportedAttributesSize"));
  v2 = objc_msgSend(v1, "mutableCopy");

  v6[0] = CFSTR("insets");
  v6[1] = CFSTR("columns");
  v6[2] = CFSTR("spacing");
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", v6, 3));
  objc_msgSend(v2, "addAttributesFromArray:", v3);

  v4 = objc_msgSend(v2, "copy");
  v5 = (void *)qword_2CB7B0;
  qword_2CB7B0 = (uint64_t)v4;

}

void sub_1304BC(id a1)
{
  id v1;
  void *v2;

  v1 = -[TUIRunLoopDispatcher initSharedInstance]([TUIRunLoopDispatcher alloc], "initSharedInstance");
  v2 = (void *)qword_2CB7C0;
  qword_2CB7C0 = (uint64_t)v1;

}

id sub_1308F8(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_dispatchAsyncToMain:", *(_QWORD *)(a1 + 40));
}

id sub_130A48(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_dispatchAsyncToMain:", *(_QWORD *)(a1 + 40));
}

id TUIDispatchAsyncViaRunLoop(uint64_t a1)
{
  return +[TUIRunLoopDispatcher dispatchAsyncToMain:](TUIRunLoopDispatcher, "dispatchAsyncToMain:", a1);
}

id TUIDispatchAfterViaRunLoop(uint64_t a1, uint64_t a2)
{
  return +[TUIRunLoopDispatcher dispatchAfter:toMain:](TUIRunLoopDispatcher, "dispatchAfter:toMain:", a1, a2);
}

id TUIDispatchDrainWithTimeout()
{
  return (id)+[TUIRunLoopDispatcher drainWithTimeout:](TUIRunLoopDispatcher, "drainWithTimeout:");
}

void TUIDispatchGroupNotifyViaRunloopIfMain(void *a1, void *a2, void *a3)
{
  id v5;
  NSObject *v6;
  NSObject *v7;
  NSObject *queue;

  queue = a2;
  v5 = a3;
  v6 = a1;
  v7 = v6;
  if (queue == &_dispatch_main_q)
    +[TUIRunLoopDispatcher dispatchGroup:notifyMain:](TUIRunLoopDispatcher, "dispatchGroup:notifyMain:", v6, v5);
  else
    dispatch_group_notify(v6, queue, v5);

}

void sub_130DCC(uint64_t a1, void *a2)
{
  void *v3;
  void *v4;
  void *v5;
  id v6;

  v6 = a2;
  if ((objc_opt_respondsToSelector(v6, "objectForKey:") & 1) != 0)
  {
    v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "dynamicValue"));
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "property"));
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "objectForKey:", v4));

  }
  else
  {
    v5 = 0;
  }
  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();

}

void sub_1311E8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_13128C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_131350(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1313DC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_13152C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_131854(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_131A74(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_131B78(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_131D2C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_131E24(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_131F0C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_131FCC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_132080(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_132134(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_132638(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_132780(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1327B4(void **a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  id *v14;
  id *v15;
  id *v16;
  id *v17;
  char v18;
  char v19;

  v8 = *a1;
  if (a4 <= ((_BYTE *)a1[2] - (_BYTE *)*a1) >> 4)
  {
    v12 = ((_BYTE *)a1[1] - (_BYTE *)v8) >> 4;
    if (v12 >= a4)
    {
      sub_1329C4((uint64_t)&v19, a2, a3, v8);
      v15 = v14;
      v16 = (id *)a1[1];
      if (v16 != v14)
      {
        do
        {
          v17 = v16 - 2;

          v16 = v17;
        }
        while (v17 != v15);
      }
      a1[1] = v15;
    }
    else
    {
      v13 = a2 + 16 * v12;
      sub_1329C4((uint64_t)&v18, a2, v13, v8);
      sub_1328FC(a1, v13, a3);
    }
  }
  else
  {
    sub_13295C(a1);
    if (a4 >> 60)
      sub_6F9C();
    v9 = (_BYTE *)a1[2] - (_BYTE *)*a1;
    v10 = v9 >> 3;
    if (v9 >> 3 <= a4)
      v10 = a4;
    if ((unint64_t)v9 >= 0x7FFFFFFFFFFFFFF0)
      v11 = 0xFFFFFFFFFFFFFFFLL;
    else
      v11 = v10;
    sub_2A0A0(a1, v11);
    sub_1328FC(a1, a2, a3);
  }
}

_QWORD *sub_1328FC(_QWORD *result, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v6;

  v3 = result;
  v4 = (_QWORD *)result[1];
  if (a2 != a3)
  {
    v6 = a2;
    do
    {
      *v4 = *(_QWORD *)v6;
      result = *(id *)(v6 + 8);
      v4[1] = result;
      v4 += 2;
      v6 += 16;
    }
    while (v6 != a3);
  }
  v3[1] = v4;
  return result;
}

void sub_13295C(void **a1)
{
  id *v1;
  id *v3;
  void *v4;
  id *v5;

  v1 = (id *)*a1;
  if (*a1)
  {
    v3 = (id *)a1[1];
    v4 = *a1;
    if (v3 != v1)
    {
      do
      {
        v5 = v3 - 2;

        v3 = v5;
      }
      while (v5 != v1);
      v4 = *a1;
    }
    a1[1] = v1;
    operator delete(v4);
    *a1 = 0;
    a1[1] = 0;
    a1[2] = 0;
  }
}

uint64_t sub_1329C4(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v5;
  uint64_t v6;
  id *v7;

  v5 = a2;
  if (a2 == a3)
    return a2;
  v6 = a3;
  do
  {
    v7 = (id *)(a4 + 1);
    *a4 = *(_QWORD *)v5;
    a4 += 2;
    objc_storeStrong(v7, *(id *)(v5 + 8));
    v5 += 16;
  }
  while (v5 != v6);
  return v6;
}

_QWORD *sub_132A28(_QWORD *result, uint64_t a2, uint64_t a3, unint64_t a4)
{
  _QWORD *v6;

  if (a4)
  {
    v6 = result;
    sub_2A0A0(result, a4);
    return sub_1328FC(v6, a2, a3);
  }
  return result;
}

void sub_132A88(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
  sub_132A9C(&a9);
  _Unwind_Resume(a1);
}

void sub_132A9C(void ***a1)
{
  void **v1;
  id *v2;
  id *v4;
  void *v5;
  id *v6;

  v1 = *a1;
  v2 = (id *)**a1;
  if (v2)
  {
    v4 = (id *)v1[1];
    v5 = **a1;
    if (v4 != v2)
    {
      do
      {
        v6 = v4 - 2;

        v4 = v6;
      }
      while (v6 != v2);
      v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

void sub_132B10(uint64_t *a1, uint64_t *a2, uint64_t a3, char a4)
{
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t *v12;
  double v13;
  uint64_t v14;
  uint64_t v15;
  double v16;
  uint64_t *v17;
  uint64_t *v18;
  double v19;
  double v20;
  uint64_t *v21;
  double v22;
  double v23;
  uint64_t v24;
  void *v25;
  void *v26;
  BOOL v27;
  uint64_t v28;
  double v29;
  uint64_t *v30;
  uint64_t *v31;
  double v32;
  double v33;
  double v34;
  uint64_t v35;
  void *v36;
  void *v37;
  uint64_t *v38;
  double v39;
  uint64_t *v40;
  uint64_t *v41;
  double *v42;
  uint64_t *v43;
  double v44;
  uint64_t *v45;
  BOOL v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t *v50;
  double v51;
  double v52;
  uint64_t v53;
  uint64_t v54;
  double *v55;
  uint64_t v56;
  void *v57;
  uint64_t v58;
  void *v59;
  int64_t v60;
  int64_t v61;
  int64_t v62;
  uint64_t v63;
  uint64_t *v64;
  uint64_t *v65;
  double v66;
  double v67;
  uint64_t *v68;
  uint64_t v69;
  double *v70;
  uint64_t v71;
  void *v72;
  uint64_t v73;
  uint64_t v74;
  void *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t *v80;
  uint64_t *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  void *v85;
  uint64_t *v86;
  uint64_t v87;
  void *v88;
  void *v89;
  uint64_t v90;
  unint64_t v91;
  double *v92;
  double v93;
  double v94;
  uint64_t v95;
  double *v96;
  uint64_t v97;
  void *v98;
  void *v99;
  void **v101;
  uint64_t *v102;
  double v103;
  double v104;
  uint64_t v105;
  void **v106;
  void **v107;
  void *v108;
  void *v109;
  void *v110;

LABEL_1:
  v8 = a1;
  while (2)
  {
    a1 = v8;
    v9 = (char *)a2 - (char *)v8;
    v10 = ((char *)a2 - (char *)v8) >> 4;
    switch(v10)
    {
      case 0:
      case 1:
        return;
      case 2:
        v39 = *((double *)a2 - 2);
        v38 = a2 - 2;
        if (v39 < *(double *)a1)
        {
          v40 = a1;
          v41 = v38;
          goto LABEL_53;
        }
        return;
      case 3:
        sub_1332F8(a1, a1 + 2, a2 - 2);
        return;
      case 4:
        sub_133610(a1, a1 + 2, a1 + 4, a2 - 2);
        return;
      case 5:
        v42 = (double *)(a1 + 4);
        sub_133610(a1, a1 + 2, a1 + 4, a1 + 6);
        v44 = *((double *)a2 - 2);
        v43 = a2 - 2;
        if (v44 < *((double *)a1 + 6))
        {
          sub_1335C0(a1 + 6, v43);
          if (*((double *)a1 + 6) < *v42)
          {
            sub_1335C0(a1 + 4, a1 + 6);
            if (*v42 < *((double *)a1 + 2))
            {
              sub_1335C0(a1 + 2, a1 + 4);
              if (*((double *)a1 + 2) < *(double *)a1)
              {
                v40 = a1;
                v41 = a1 + 2;
LABEL_53:
                sub_1335C0(v40, v41);
              }
            }
          }
        }
        return;
      default:
        if (v9 <= 383)
        {
          v45 = a1 + 2;
          v47 = a1 == a2 || v45 == a2;
          if ((a4 & 1) != 0)
          {
            if (!v47)
            {
              v48 = 0;
              v49 = a1;
              do
              {
                v50 = v45;
                v51 = *((double *)v49 + 2);
                v52 = *(double *)v49;
                if (v51 < *(double *)v49)
                {
                  v53 = v49[3];
                  v49[3] = 0;
                  v54 = v48;
                  while (1)
                  {
                    v55 = (double *)((char *)a1 + v54);
                    v55[2] = v52;
                    v56 = *(uint64_t *)((char *)a1 + v54 + 8);
                    v55[1] = 0.0;
                    v57 = *(void **)((char *)a1 + v54 + 24);
                    *((_QWORD *)v55 + 3) = v56;

                    if (!v54)
                      break;
                    v52 = *(v55 - 2);
                    v54 -= 16;
                    if (v51 >= v52)
                    {
                      v58 = (uint64_t)a1 + v54 + 16;
                      goto LABEL_76;
                    }
                  }
                  v58 = (uint64_t)a1;
LABEL_76:
                  *(double *)v58 = v51;
                  v59 = *(void **)(v58 + 8);
                  *(_QWORD *)(v58 + 8) = v53;

                }
                v45 = v50 + 2;
                v48 += 16;
                v49 = v50;
              }
              while (v50 + 2 != a2);
            }
          }
          else if (!v47)
          {
            v101 = (void **)(a1 + 3);
            do
            {
              v102 = v45;
              v103 = *((double *)a1 + 2);
              v104 = *(double *)a1;
              if (v103 < *(double *)a1)
              {
                v105 = a1[3];
                a1[3] = 0;
                v106 = v101;
                v107 = v101;
                do
                {
                  *((double *)v106 - 1) = v104;
                  v108 = *(v107 - 2);
                  v107 -= 2;
                  *v107 = 0;
                  v109 = *v106;
                  *v106 = v108;

                  v104 = *((double *)v106 - 5);
                  v106 = v107;
                }
                while (v103 < v104);
                *((double *)v107 - 1) = v103;
                v110 = *v107;
                *v107 = (void *)v105;

              }
              v45 = v102 + 2;
              v101 += 2;
              a1 = v102;
            }
            while (v102 + 2 != a2);
          }
          return;
        }
        if (!a3)
        {
          if (a1 == a2)
            return;
          v60 = (unint64_t)(v10 - 2) >> 1;
          v61 = v60;
          do
          {
            v62 = v61;
            if (v60 >= v61)
            {
              v63 = (2 * v61) | 1;
              v64 = &a1[2 * v63];
              if (2 * v62 + 2 < v10 && *(double *)v64 < *((double *)v64 + 2))
              {
                v64 += 2;
                v63 = 2 * v62 + 2;
              }
              v65 = &a1[2 * v62];
              v66 = *(double *)v64;
              v67 = *(double *)v65;
              if (*(double *)v64 >= *(double *)v65)
              {
                v68 = &a1[2 * v62];
                v69 = v68[1];
                v68[1] = 0;
                do
                {
                  v70 = (double *)v65;
                  v65 = v64;
                  *v70 = v66;
                  v71 = v64[1];
                  v65[1] = 0;
                  v72 = (void *)*((_QWORD *)v70 + 1);
                  *((_QWORD *)v70 + 1) = v71;

                  if (v60 < v63)
                    break;
                  v73 = 2 * v63;
                  v63 = (2 * v63) | 1;
                  v64 = &a1[2 * v63];
                  v74 = v73 + 2;
                  if (v74 < v10 && *(double *)v64 < *((double *)v64 + 2))
                  {
                    v64 += 2;
                    v63 = v74;
                  }
                  v66 = *(double *)v64;
                }
                while (*(double *)v64 >= v67);
                *(double *)v65 = v67;
                v75 = (void *)v65[1];
                v65[1] = v69;

              }
            }
            v61 = v62 - 1;
          }
          while (v62);
          v76 = (unint64_t)v9 >> 4;
          while (2)
          {
            v77 = 0;
            v78 = *a1;
            v79 = a1[1];
            a1[1] = 0;
            v80 = a1;
            do
            {
              v81 = v80;
              v80 += 2 * v77 + 2;
              v82 = 2 * v77;
              v77 = (2 * v77) | 1;
              v83 = v82 + 2;
              if (v83 < v76 && *(double *)v80 < *((double *)v80 + 2))
              {
                v80 += 2;
                v77 = v83;
              }
              *v81 = *v80;
              v84 = v80[1];
              v80[1] = 0;
              v85 = (void *)v81[1];
              v81[1] = v84;

            }
            while (v77 <= (uint64_t)((unint64_t)(v76 - 2) >> 1));
            v86 = a2 - 2;
            if (v80 != a2 - 2)
            {
              *v80 = *(a2 - 2);
              v87 = *(a2 - 1);
              *(a2 - 1) = 0;
              v88 = (void *)v80[1];
              v80[1] = v87;

              *(a2 - 2) = v78;
              v89 = (void *)*(a2 - 1);
              *(a2 - 1) = v79;

              v90 = (char *)v80 - (char *)a1 + 16;
              if (v90 >= 17)
              {
                v91 = (((unint64_t)v90 >> 4) - 2) >> 1;
                v92 = (double *)&a1[2 * v91];
                v93 = *v92;
                v94 = *(double *)v80;
                if (*v92 < *(double *)v80)
                {
                  v95 = v80[1];
                  v80[1] = 0;
                  do
                  {
                    v96 = (double *)v80;
                    v80 = (uint64_t *)v92;
                    *v96 = v93;
                    v97 = *((_QWORD *)v92 + 1);
                    v80[1] = 0;
                    v98 = (void *)*((_QWORD *)v96 + 1);
                    *((_QWORD *)v96 + 1) = v97;

                    if (!v91)
                      break;
                    v91 = (v91 - 1) >> 1;
                    v92 = (double *)&a1[2 * v91];
                    v93 = *v92;
                  }
                  while (*v92 < v94);
                  *(double *)v80 = v94;
                  v99 = (void *)v80[1];
                  v80[1] = v95;
LABEL_108:

                }
              }
              a2 = v86;
              if (v76-- <= 2)
                return;
              continue;
            }
            break;
          }
          *v80 = v78;
          v99 = (void *)v80[1];
          v80[1] = v79;
          goto LABEL_108;
        }
        v11 = (unint64_t)v10 >> 1;
        v12 = &a1[2 * ((unint64_t)v10 >> 1)];
        if ((unint64_t)v9 < 0x801)
        {
          sub_1332F8(v12, a1, a2 - 2);
        }
        else
        {
          sub_1332F8(a1, v12, a2 - 2);
          sub_1332F8(a1 + 2, v12 - 2, a2 - 4);
          sub_1332F8(a1 + 4, &a1[2 * v11 + 2], a2 - 6);
          sub_1332F8(v12 - 2, v12, &a1[2 * v11 + 2]);
          sub_1335C0(a1, v12);
        }
        --a3;
        v13 = *(double *)a1;
        if ((a4 & 1) == 0 && *((double *)a1 - 2) >= v13)
        {
          v28 = a1[1];
          a1[1] = 0;
          if (v13 >= *((double *)a2 - 2))
          {
            v30 = a1 + 2;
            do
            {
              v8 = v30;
              if (v30 >= a2)
                break;
              v30 += 2;
            }
            while (v13 >= *(double *)v8);
          }
          else
          {
            v8 = a1;
            do
            {
              v29 = *((double *)v8 + 2);
              v8 += 2;
            }
            while (v13 >= v29);
          }
          v31 = a2;
          if (v8 < a2)
          {
            v31 = a2;
            do
            {
              v32 = *((double *)v31 - 2);
              v31 -= 2;
            }
            while (v13 < v32);
          }
          while (v8 < v31)
          {
            sub_1335C0(v8, v31);
            do
            {
              v33 = *((double *)v8 + 2);
              v8 += 2;
            }
            while (v13 >= v33);
            do
            {
              v34 = *((double *)v31 - 2);
              v31 -= 2;
            }
            while (v13 < v34);
          }
          if (v8 - 2 != a1)
          {
            *a1 = *(v8 - 2);
            v35 = *(v8 - 1);
            *(v8 - 1) = 0;
            v36 = (void *)a1[1];
            a1[1] = v35;

          }
          *((double *)v8 - 2) = v13;
          v37 = (void *)*(v8 - 1);
          *(v8 - 1) = v28;

          a4 = 0;
          continue;
        }
        v14 = 0;
        v15 = a1[1];
        a1[1] = 0;
        do
        {
          v16 = *(double *)&a1[v14 + 2];
          v14 += 2;
        }
        while (v16 < v13);
        v17 = &a1[v14];
        v18 = a2;
        if (v14 == 2)
        {
          v18 = a2;
          do
          {
            if (v17 >= v18)
              break;
            v20 = *((double *)v18 - 2);
            v18 -= 2;
          }
          while (v20 >= v13);
        }
        else
        {
          do
          {
            v19 = *((double *)v18 - 2);
            v18 -= 2;
          }
          while (v19 >= v13);
        }
        v8 = &a1[v14];
        if (v17 < v18)
        {
          v21 = v18;
          do
          {
            sub_1335C0(v8, v21);
            do
            {
              v22 = *((double *)v8 + 2);
              v8 += 2;
            }
            while (v22 < v13);
            do
            {
              v23 = *((double *)v21 - 2);
              v21 -= 2;
            }
            while (v23 >= v13);
          }
          while (v8 < v21);
        }
        if (v8 - 2 != a1)
        {
          *a1 = *(v8 - 2);
          v24 = *(v8 - 1);
          *(v8 - 1) = 0;
          v25 = (void *)a1[1];
          a1[1] = v24;

        }
        *((double *)v8 - 2) = v13;
        v26 = (void *)*(v8 - 1);
        *(v8 - 1) = v15;

        if (v17 < v18)
        {
LABEL_29:
          sub_132B10(a1, v8 - 2, a3, a4 & 1);
          a4 = 0;
          continue;
        }
        v27 = sub_1333A4(a1, v8 - 2);
        if (!sub_1333A4(v8, a2))
        {
          if (v27)
            continue;
          goto LABEL_29;
        }
        a2 = v8 - 2;
        if (!v27)
          goto LABEL_1;
        return;
    }
  }
}

  v8 = a1;
  while (2)
  {
    a1 = v8;
    v9 = (char *)a2 - (char *)v8;
    v10 = ((char *)a2 - (char *)v8) >> 4;
    switch(v10)
    {
      case 0:
      case 1:
        return;
      case 2:
        v39 = *((double *)a2 - 2);
        v38 = a2 - 2;
        if (v39 < *(double *)a1)
        {
          v40 = a1;
          v41 = v38;
          goto LABEL_53;
        }
        return;
      case 3:
        sub_1332F8(a1, a1 + 2, a2 - 2);
        return;
      case 4:
        sub_133610(a1, a1 + 2, a1 + 4, a2 - 2);
        return;
      case 5:
        v42 = (double *)(a1 + 4);
        sub_133610(a1, a1 + 2, a1 + 4, a1 + 6);
        v44 = *((double *)a2 - 2);
        v43 = a2 - 2;
        if (v44 < *((double *)a1 + 6))
        {
          sub_1335C0(a1 + 6, v43);
          if (*((double *)a1 + 6) < *v42)
          {
            sub_1335C0(a1 + 4, a1 + 6);
            if (*v42 < *((double *)a1 + 2))
            {
              sub_1335C0(a1 + 2, a1 + 4);
              if (*((double *)a1 + 2) < *(double *)a1)
              {
                v40 = a1;
                v41 = a1 + 2;
LABEL_53:
                sub_1335C0(v40, v41);
              }
            }
          }
        }
        return;
      default:
        if (v9 <= 383)
        {
          v45 = a1 + 2;
          v47 = a1 == a2 || v45 == a2;
          if ((a4 & 1) != 0)
          {
            if (!v47)
            {
              v48 = 0;
              v49 = a1;
              do
              {
                v50 = v45;
                v51 = *((double *)v49 + 2);
                v52 = *(double *)v49;
                if (v51 < *(double *)v49)
                {
                  v53 = v49[3];
                  v49[3] = 0;
                  v54 = v48;
                  while (1)
                  {
                    v55 = (double *)((char *)a1 + v54);
                    v55[2] = v52;
                    v56 = *(uint64_t *)((char *)a1 + v54 + 8);
                    v55[1] = 0.0;
                    v57 = *(void **)((char *)a1 + v54 + 24);
                    *((_QWORD *)v55 + 3) = v56;

                    if (!v54)
                      break;
                    v52 = *(v55 - 2);
                    v54 -= 16;
                    if (v51 >= v52)
                    {
                      v58 = (uint64_t)a1 + v54 + 16;
                      goto LABEL_76;
                    }
                  }
                  v58 = (uint64_t)a1;
LABEL_76:
                  *(double *)v58 = v51;
                  v59 = *(void **)(v58 + 8);
                  *(_QWORD *)(v58 + 8) = v53;

                }
                v45 = v50 + 2;
                v48 += 16;
                v49 = v50;
              }
              while (v50 + 2 != a2);
            }
          }
          else if (!v47)
          {
            v101 = (void **)(a1 + 3);
            do
            {
              v102 = v45;
              v103 = *((double *)a1 + 2);
              v104 = *(double *)a1;
              if (v103 < *(double *)a1)
              {
                v105 = a1[3];
                a1[3] = 0;
                v106 = v101;
                v107 = v101;
                do
                {
                  *((double *)v106 - 1) = v104;
                  v108 = *(v107 - 2);
                  v107 -= 2;
                  *v107 = 0;
                  v109 = *v106;
                  *v106 = v108;

                  v104 = *((double *)v106 - 5);
                  v106 = v107;
                }
                while (v103 < v104);
                *((double *)v107 - 1) = v103;
                v110 = *v107;
                *v107 = (void *)v105;

              }
              v45 = v102 + 2;
              v101 += 2;
              a1 = v102;
            }
            while (v102 + 2 != a2);
          }
          return;
        }
        if (!a3)
        {
          if (a1 == a2)
            return;
          v60 = (unint64_t)(v10 - 2) >> 1;
          v61 = v60;
          do
          {
            v62 = v61;
            if (v60 >= v61)
            {
              v63 = (2 * v61) | 1;
              v64 = &a1[2 * v63];
              if (2 * v62 + 2 < v10 && *(double *)v64 < *((double *)v64 + 2))
              {
                v64 += 2;
                v63 = 2 * v62 + 2;
              }
              v65 = &a1[2 * v62];
              v66 = *(double *)v64;
              v67 = *(double *)v65;
              if (*(double *)v64 >= *(double *)v65)
              {
                v68 = &a1[2 * v62];
                v69 = v68[1];
                v68[1] = 0;
                do
                {
                  v70 = (double *)v65;
                  v65 = v64;
                  *v70 = v66;
                  v71 = v64[1];
                  v65[1] = 0;
                  v72 = (void *)*((_QWORD *)v70 + 1);
                  *((_QWORD *)v70 + 1) = v71;

                  if (v60 < v63)
                    break;
                  v73 = 2 * v63;
                  v63 = (2 * v63) | 1;
                  v64 = &a1[2 * v63];
                  v74 = v73 + 2;
                  if (v74 < v10 && *(double *)v64 < *((double *)v64 + 2))
                  {
                    v64 += 2;
                    v63 = v74;
                  }
                  v66 = *(double *)v64;
                }
                while (*(double *)v64 >= v67);
                *(double *)v65 = v67;
                v75 = (void *)v65[1];
                v65[1] = v69;

              }
            }
            v61 = v62 - 1;
          }
          while (v62);
          v76 = (unint64_t)v9 >> 4;
          while (2)
          {
            v77 = 0;
            v78 = *a1;
            v79 = a1[1];
            a1[1] = 0;
            v80 = a1;
            do
            {
              v81 = v80;
              v80 += 2 * v77 + 2;
              v82 = 2 * v77;
              v77 = (2 * v77) | 1;
              v83 = v82 + 2;
              if (v83 < v76 && *(double *)v80 < *((double *)v80 + 2))
              {
                v80 += 2;
                v77 = v83;
              }
              *v81 = *v80;
              v84 = v80[1];
              v80[1] = 0;
              v85 = (void *)v81[1];
              v81[1] = v84;

            }
            while (v77 <= (uint64_t)((unint64_t)(v76 - 2) >> 1));
            v86 = a2 - 2;
            if (v80 != a2 - 2)
            {
              *v80 = *(a2 - 2);
              v87 = *(a2 - 1);
              *(a2 - 1) = 0;
              v88 = (void *)v80[1];
              v80[1] = v87;

              *(a2 - 2) = v78;
              v89 = (void *)*(a2 - 1);
              *(a2 - 1) = v79;

              v90 = (char *)v80 - (char *)a1 + 16;
              if (v90 >= 17)
              {
                v91 = (((unint64_t)v90 >> 4) - 2) >> 1;
                v92 = (double *)&a1[2 * v91];
                v93 = *v92;
                v94 = *(double *)v80;
                if (*v92 < *(double *)v80)
                {
                  v95 = v80[1];
                  v80[1] = 0;
                  do
                  {
                    v96 = (double *)v80;
                    v80 = (uint64_t *)v92;
                    *v96 = v93;
                    v97 = *((_QWORD *)v92 + 1);
                    v80[1] = 0;
                    v98 = (void *)*((_QWORD *)v96 + 1);
                    *((_QWORD *)v96 + 1) = v97;

                    if (!v91)
                      break;
                    v91 = (v91 - 1) >> 1;
                    v92 = (double *)&a1[2 * v91];
                    v93 = *v92;
                  }
                  while (*v92 < v94);
                  *(double *)v80 = v94;
                  v99 = (void *)v80[1];
                  v80[1] = v95;
LABEL_108:

                }
              }
              a2 = v86;
              if (v76-- <= 2)
                return;
              continue;
            }
            break;
          }
          *v80 = v78;
          v99 = (void *)v80[1];
          v80[1] = v79;
          goto LABEL_108;
        }
        v11 = (unint64_t)v10 >> 1;
        v12 = &a1[2 * ((unint64_t)v10 >> 1)];
        if ((unint64_t)v9 < 0x801)
        {
          sub_1332F8(v12, a1, a2 - 2);
        }
        else
        {
          sub_1332F8(a1, v12, a2 - 2);
          sub_1332F8(a1 + 2, v12 - 2, a2 - 4);
          sub_1332F8(a1 + 4, &a1[2 * v11 + 2], a2 - 6);
          sub_1332F8(v12 - 2, v12, &a1[2 * v11 + 2]);
          sub_1335C0(a1, v12);
        }
        --a3;
        v13 = *(double *)a1;
        if ((a4 & 1) == 0 && *((double *)a1 - 2) >= v13)
        {
          v28 = a1[1];
          a1[1] = 0;
          if (v13 >= *((double *)a2 - 2))
          {
            v30 = a1 + 2;
            do
            {
              v8 = v30;
              if (v30 >= a2)
                break;
              v30 += 2;
            }
            while (v13 >= *(double *)v8);
          }
          else
          {
            v8 = a1;
            do
            {
              v29 = *((double *)v8 + 2);
              v8 += 2;
            }
            while (v13 >= v29);
          }
          v31 = a2;
          if (v8 < a2)
          {
            v31 = a2;
            do
            {
              v32 = *((double *)v31 - 2);
              v31 -= 2;
            }
            while (v13 < v32);
          }
          while (v8 < v31)
          {
            sub_1335C0(v8, v31);
            do
            {
              v33 = *((double *)v8 + 2);
              v8 += 2;
            }
            while (v13 >= v33);
            do
            {
              v34 = *((double *)v31 - 2);
              v31 -= 2;
            }
            while (v13 < v34);
          }
          if (v8 - 2 != a1)
          {
            *a1 = *(v8 - 2);
            v35 = *(v8 - 1);
            *(v8 - 1) = 0;
            v36 = (void *)a1[1];
            a1[1] = v35;

          }
          *((double *)v8 - 2) = v13;
          v37 = (void *)*(v8 - 1);
          *(v8 - 1) = v28;

          a4 = 0;
          continue;
        }
        v14 = 0;
        v15 = a1[1];
        a1[1] = 0;
        do
        {
          v16 = *(double *)&a1[v14 + 2];
          v14 += 2;
        }
        while (v16 < v13);
        v17 = &a1[v14];
        v18 = a2;
        if (v14 == 2)
        {
          v18 = a2;
          do
          {
            if (v17 >= v18)
              break;
            v20 = *((double *)v18 - 2);
            v18 -= 2;
          }
          while (v20 >= v13);
        }
        else
        {
          do
          {
            v19 = *((double *)v18 - 2);
            v18 -= 2;
          }
          while (v19 >= v13);
        }
        v8 = &a1[v14];
        if (v17 < v18)
        {
          v21 = v18;
          do
          {
            sub_1335C0(v8, v21);
            do
            {
              v22 = *((double *)v8 + 2);
              v8 += 2;
            }
            while (v22 < v13);
            do
            {
              v23 = *((double *)v21 - 2);
              v21 -= 2;
            }
            while (v23 >= v13);
          }
          while (v8 < v21);
        }
        if (v8 - 2 != a1)
        {
          *a1 = *(v8 - 2);
          v24 = *(v8 - 1);
          *(v8 - 1) = 0;
          v25 = (void *)a1[1];
          a1[1] = v24;

        }
        *((double *)v8 - 2) = v13;
        v26 = (void *)*(v8 - 1);
        *(v8 - 1) = v15;

        if (v17 < v18)
        {
LABEL_29:
          sub_1336A4(a1, v8 - 2, a3, a4 & 1);
          a4 = 0;
          continue;
        }
        v27 = sub_133E8C(a1, v8 - 2);
        if (!sub_133E8C(v8, a2))
        {
          if (v27)
            continue;
          goto LABEL_29;
        }
        a2 = v8 - 2;
        if (!v27)
          goto LABEL_1;
        return;
    }
  }
}

  v8 = a1;
  while (2)
  {
    a1 = v8;
    v9 = (char *)a2 - (char *)v8;
    v10 = ((char *)a2 - (char *)v8) >> 4;
    switch(v10)
    {
      case 0:
      case 1:
        return;
      case 2:
        v39 = *((double *)a2 - 2);
        v38 = a2 - 2;
        if (v39 < *(double *)a1)
        {
          v40 = a1;
          v41 = v38;
          goto LABEL_53;
        }
        return;
      case 3:
        sub_1332F8(a1, a1 + 2, a2 - 2);
        return;
      case 4:
        sub_133610(a1, a1 + 2, a1 + 4, a2 - 2);
        return;
      case 5:
        v42 = (double *)(a1 + 4);
        sub_133610(a1, a1 + 2, a1 + 4, a1 + 6);
        v44 = *((double *)a2 - 2);
        v43 = a2 - 2;
        if (v44 < *((double *)a1 + 6))
        {
          sub_1335C0(a1 + 6, v43);
          if (*((double *)a1 + 6) < *v42)
          {
            sub_1335C0(a1 + 4, a1 + 6);
            if (*v42 < *((double *)a1 + 2))
            {
              sub_1335C0(a1 + 2, a1 + 4);
              if (*((double *)a1 + 2) < *(double *)a1)
              {
                v40 = a1;
                v41 = a1 + 2;
LABEL_53:
                sub_1335C0(v40, v41);
              }
            }
          }
        }
        return;
      default:
        if (v9 <= 383)
        {
          v45 = a1 + 2;
          v47 = a1 == a2 || v45 == a2;
          if ((a4 & 1) != 0)
          {
            if (!v47)
            {
              v48 = 0;
              v49 = a1;
              do
              {
                v50 = v45;
                v51 = *((double *)v49 + 2);
                v52 = *(double *)v49;
                if (v51 < *(double *)v49)
                {
                  v53 = v49[3];
                  v49[3] = 0;
                  v54 = v48;
                  while (1)
                  {
                    v55 = (double *)((char *)a1 + v54);
                    v55[2] = v52;
                    v56 = *(uint64_t *)((char *)a1 + v54 + 8);
                    v55[1] = 0.0;
                    v57 = *(void **)((char *)a1 + v54 + 24);
                    *((_QWORD *)v55 + 3) = v56;

                    if (!v54)
                      break;
                    v52 = *(v55 - 2);
                    v54 -= 16;
                    if (v51 >= v52)
                    {
                      v58 = (uint64_t)a1 + v54 + 16;
                      goto LABEL_76;
                    }
                  }
                  v58 = (uint64_t)a1;
LABEL_76:
                  *(double *)v58 = v51;
                  v59 = *(void **)(v58 + 8);
                  *(_QWORD *)(v58 + 8) = v53;

                }
                v45 = v50 + 2;
                v48 += 16;
                v49 = v50;
              }
              while (v50 + 2 != a2);
            }
          }
          else if (!v47)
          {
            v101 = (void **)(a1 + 3);
            do
            {
              v102 = v45;
              v103 = *((double *)a1 + 2);
              v104 = *(double *)a1;
              if (v103 < *(double *)a1)
              {
                v105 = a1[3];
                a1[3] = 0;
                v106 = v101;
                v107 = v101;
                do
                {
                  *((double *)v106 - 1) = v104;
                  v108 = *(v107 - 2);
                  v107 -= 2;
                  *v107 = 0;
                  v109 = *v106;
                  *v106 = v108;

                  v104 = *((double *)v106 - 5);
                  v106 = v107;
                }
                while (v103 < v104);
                *((double *)v107 - 1) = v103;
                v110 = *v107;
                *v107 = (void *)v105;

              }
              v45 = v102 + 2;
              v101 += 2;
              a1 = v102;
            }
            while (v102 + 2 != a2);
          }
          return;
        }
        if (!a3)
        {
          if (a1 == a2)
            return;
          v60 = (unint64_t)(v10 - 2) >> 1;
          v61 = v60;
          do
          {
            v62 = v61;
            if (v60 >= v61)
            {
              v63 = (2 * v61) | 1;
              v64 = &a1[2 * v63];
              if (2 * v62 + 2 < v10 && *(double *)v64 < *((double *)v64 + 2))
              {
                v64 += 2;
                v63 = 2 * v62 + 2;
              }
              v65 = &a1[2 * v62];
              v66 = *(double *)v64;
              v67 = *(double *)v65;
              if (*(double *)v64 >= *(double *)v65)
              {
                v68 = &a1[2 * v62];
                v69 = v68[1];
                v68[1] = 0;
                do
                {
                  v70 = (double *)v65;
                  v65 = v64;
                  *v70 = v66;
                  v71 = v64[1];
                  v65[1] = 0;
                  v72 = (void *)*((_QWORD *)v70 + 1);
                  *((_QWORD *)v70 + 1) = v71;

                  if (v60 < v63)
                    break;
                  v73 = 2 * v63;
                  v63 = (2 * v63) | 1;
                  v64 = &a1[2 * v63];
                  v74 = v73 + 2;
                  if (v74 < v10 && *(double *)v64 < *((double *)v64 + 2))
                  {
                    v64 += 2;
                    v63 = v74;
                  }
                  v66 = *(double *)v64;
                }
                while (*(double *)v64 >= v67);
                *(double *)v65 = v67;
                v75 = (void *)v65[1];
                v65[1] = v69;

              }
            }
            v61 = v62 - 1;
          }
          while (v62);
          v76 = (unint64_t)v9 >> 4;
          while (2)
          {
            v77 = 0;
            v78 = *a1;
            v79 = a1[1];
            a1[1] = 0;
            v80 = a1;
            do
            {
              v81 = v80;
              v80 += 2 * v77 + 2;
              v82 = 2 * v77;
              v77 = (2 * v77) | 1;
              v83 = v82 + 2;
              if (v83 < v76 && *(double *)v80 < *((double *)v80 + 2))
              {
                v80 += 2;
                v77 = v83;
              }
              *v81 = *v80;
              v84 = v80[1];
              v80[1] = 0;
              v85 = (void *)v81[1];
              v81[1] = v84;

            }
            while (v77 <= (uint64_t)((unint64_t)(v76 - 2) >> 1));
            v86 = a2 - 2;
            if (v80 != a2 - 2)
            {
              *v80 = *(a2 - 2);
              v87 = *(a2 - 1);
              *(a2 - 1) = 0;
              v88 = (void *)v80[1];
              v80[1] = v87;

              *(a2 - 2) = v78;
              v89 = (void *)*(a2 - 1);
              *(a2 - 1) = v79;

              v90 = (char *)v80 - (char *)a1 + 16;
              if (v90 >= 17)
              {
                v91 = (((unint64_t)v90 >> 4) - 2) >> 1;
                v92 = (double *)&a1[2 * v91];
                v93 = *v92;
                v94 = *(double *)v80;
                if (*v92 < *(double *)v80)
                {
                  v95 = v80[1];
                  v80[1] = 0;
                  do
                  {
                    v96 = (double *)v80;
                    v80 = (uint64_t *)v92;
                    *v96 = v93;
                    v97 = *((_QWORD *)v92 + 1);
                    v80[1] = 0;
                    v98 = (void *)*((_QWORD *)v96 + 1);
                    *((_QWORD *)v96 + 1) = v97;

                    if (!v91)
                      break;
                    v91 = (v91 - 1) >> 1;
                    v92 = (double *)&a1[2 * v91];
                    v93 = *v92;
                  }
                  while (*v92 < v94);
                  *(double *)v80 = v94;
                  v99 = (void *)v80[1];
                  v80[1] = v95;
LABEL_108:

                }
              }
              a2 = v86;
              if (v76-- <= 2)
                return;
              continue;
            }
            break;
          }
          *v80 = v78;
          v99 = (void *)v80[1];
          v80[1] = v79;
          goto LABEL_108;
        }
        v11 = (unint64_t)v10 >> 1;
        v12 = &a1[2 * ((unint64_t)v10 >> 1)];
        if ((unint64_t)v9 < 0x801)
        {
          sub_1332F8(v12, a1, a2 - 2);
        }
        else
        {
          sub_1332F8(a1, v12, a2 - 2);
          sub_1332F8(a1 + 2, v12 - 2, a2 - 4);
          sub_1332F8(a1 + 4, &a1[2 * v11 + 2], a2 - 6);
          sub_1332F8(v12 - 2, v12, &a1[2 * v11 + 2]);
          sub_1335C0(a1, v12);
        }
        --a3;
        v13 = *(double *)a1;
        if ((a4 & 1) == 0 && *((double *)a1 - 2) >= v13)
        {
          v28 = a1[1];
          a1[1] = 0;
          if (v13 >= *((double *)a2 - 2))
          {
            v30 = a1 + 2;
            do
            {
              v8 = v30;
              if (v30 >= a2)
                break;
              v30 += 2;
            }
            while (v13 >= *(double *)v8);
          }
          else
          {
            v8 = a1;
            do
            {
              v29 = *((double *)v8 + 2);
              v8 += 2;
            }
            while (v13 >= v29);
          }
          v31 = a2;
          if (v8 < a2)
          {
            v31 = a2;
            do
            {
              v32 = *((double *)v31 - 2);
              v31 -= 2;
            }
            while (v13 < v32);
          }
          while (v8 < v31)
          {
            sub_1335C0(v8, v31);
            do
            {
              v33 = *((double *)v8 + 2);
              v8 += 2;
            }
            while (v13 >= v33);
            do
            {
              v34 = *((double *)v31 - 2);
              v31 -= 2;
            }
            while (v13 < v34);
          }
          if (v8 - 2 != a1)
          {
            *a1 = *(v8 - 2);
            v35 = *(v8 - 1);
            *(v8 - 1) = 0;
            v36 = (void *)a1[1];
            a1[1] = v35;

          }
          *((double *)v8 - 2) = v13;
          v37 = (void *)*(v8 - 1);
          *(v8 - 1) = v28;

          a4 = 0;
          continue;
        }
        v14 = 0;
        v15 = a1[1];
        a1[1] = 0;
        do
        {
          v16 = *(double *)&a1[v14 + 2];
          v14 += 2;
        }
        while (v16 < v13);
        v17 = &a1[v14];
        v18 = a2;
        if (v14 == 2)
        {
          v18 = a2;
          do
          {
            if (v17 >= v18)
              break;
            v20 = *((double *)v18 - 2);
            v18 -= 2;
          }
          while (v20 >= v13);
        }
        else
        {
          do
          {
            v19 = *((double *)v18 - 2);
            v18 -= 2;
          }
          while (v19 >= v13);
        }
        v8 = &a1[v14];
        if (v17 < v18)
        {
          v21 = v18;
          do
          {
            sub_1335C0(v8, v21);
            do
            {
              v22 = *((double *)v8 + 2);
              v8 += 2;
            }
            while (v22 < v13);
            do
            {
              v23 = *((double *)v21 - 2);
              v21 -= 2;
            }
            while (v23 >= v13);
          }
          while (v8 < v21);
        }
        if (v8 - 2 != a1)
        {
          *a1 = *(v8 - 2);
          v24 = *(v8 - 1);
          *(v8 - 1) = 0;
          v25 = (void *)a1[1];
          a1[1] = v24;

        }
        *((double *)v8 - 2) = v13;
        v26 = (void *)*(v8 - 1);
        *(v8 - 1) = v15;

        if (v17 < v18)
        {
LABEL_29:
          sub_1340A8(a1, v8 - 2, a3, a4 & 1);
          a4 = 0;
          continue;
        }
        v27 = sub_134890(a1, v8 - 2);
        if (!sub_134890(v8, a2))
        {
          if (v27)
            continue;
          goto LABEL_29;
        }
        a2 = v8 - 2;
        if (!v27)
          goto LABEL_1;
        return;
    }
  }
}

  v9 = (char *)a2 - 24;
  v10 = (__int128 *)a1;
LABEL_2:
  v11 = 1 - a4;
  while (2)
  {
    a1 = (uint64_t)v10;
    v12 = v11;
    v13 = (char *)a2 - (char *)v10;
    v14 = 0xAAAAAAAAAAAAAAABLL * (((char *)a2 - (char *)v10) >> 3);
    switch(v14)
    {
      case 0uLL:
      case 1uLL:
        return result;
      case 2uLL:
        if (*((char *)a2 - 1) < 0)
        {
          sub_14998(v59, *((void **)a2 - 3), *((_QWORD *)a2 - 2));
        }
        else
        {
          v40 = *(_OWORD *)v9;
          v60 = *((_QWORD *)a2 - 1);
          *(_OWORD *)v59 = v40;
        }
        if (*((char *)v10 + 23) < 0)
        {
          sub_14998(v57, *(void **)v10, *((_QWORD *)v10 + 1));
        }
        else
        {
          v41 = *v10;
          v58 = *((_QWORD *)v10 + 2);
          *(_OWORD *)v57 = v41;
        }
        v42 = *a3;
        v43 = sub_E3DB0(*a3, (unsigned __int8 *)v59);
        v44 = sub_E3DB0(v42, (unsigned __int8 *)v57);
        v45 = *((_QWORD *)v43 + 14);
        v46 = *((_QWORD *)v44 + 14);
        v47 = v45 < v46;
        if (v45 == v46)
        {
          v48 = *((_QWORD *)v43 + 8);
          v49 = *((_QWORD *)v44 + 8);
          v34 = v48 == v49;
          v50 = v48 < v49;
          if (v34)
            v47 = v43 < v44;
          else
            v47 = v50;
        }
        if (SHIBYTE(v58) < 0)
          operator delete(v57[0]);
        if (SHIBYTE(v60) < 0)
          operator delete(v59[0]);
        if (v47)
        {
          v51 = *v10;
          v62 = *((_QWORD *)v10 + 2);
          v61 = v51;
          v52 = *(_OWORD *)v9;
          *((_QWORD *)v10 + 2) = *((_QWORD *)v9 + 2);
          *v10 = v52;
          result = *(double *)&v61;
          *(_OWORD *)v9 = v61;
          *((_QWORD *)v9 + 2) = v62;
        }
        return result;
      case 3uLL:
        sub_139380(v10, (__int128 *)((char *)v10 + 24), (__int128 *)((char *)a2 - 24), a3);
        return result;
      case 4uLL:
        *(_QWORD *)&result = sub_13AD20((uint64_t)v10, (uint64_t)v10 + 24, (uint64_t)(v10 + 3), (uint64_t)a2 - 24, a3).n128_u64[0];
        return result;
      case 5uLL:
        *(_QWORD *)&result = sub_13B0C0((uint64_t)v10, (uint64_t)v10 + 24, (uint64_t)(v10 + 3), (uint64_t)v10 + 72, (uint64_t)a2 - 24, a3).n128_u64[0];
        return result;
      default:
        if (v13 <= 575)
        {
          if ((a5 & 1) != 0)
            sub_138D08(v10, a2, a3);
          else
            sub_139054(v10, a2, a3);
          return result;
        }
        if (v12 != 1)
        {
          v15 = v14 >> 1;
          v16 = (__int128 *)((char *)v10 + 24 * (v14 >> 1));
          if ((unint64_t)v13 < 0xC01)
          {
            sub_139380((__int128 *)((char *)v10 + 24 * v15), v10, (__int128 *)((char *)a2 - 24), a3);
            if ((a5 & 1) != 0)
              goto LABEL_25;
          }
          else
          {
            sub_139380(v10, (__int128 *)((char *)v10 + 24 * v15), (__int128 *)((char *)a2 - 24), a3);
            v17 = 3 * v15;
            v18 = (__int128 *)((char *)v10 + 24 * v15 - 24);
            sub_139380((__int128 *)((char *)v10 + 24), v18, a2 - 3, a3);
            v19 = v10 + 3;
            v20 = (__int128 *)((char *)v10 + 8 * v17 + 24);
            sub_139380(v19, v20, (__int128 *)((char *)a2 - 72), a3);
            sub_139380(v18, v16, v20, a3);
            v21 = *(_OWORD *)a1;
            v62 = *(_QWORD *)(a1 + 16);
            v61 = v21;
            v22 = *v16;
            *(_QWORD *)(a1 + 16) = *((_QWORD *)v16 + 2);
            *(_OWORD *)a1 = v22;
            v23 = v61;
            *((_QWORD *)v16 + 2) = v62;
            *v16 = v23;
            if ((a5 & 1) != 0)
              goto LABEL_25;
          }
          if (*(char *)(a1 - 1) < 0)
          {
            sub_14998(__dst, *(void **)(a1 - 24), *(_QWORD *)(a1 - 16));
          }
          else
          {
            v24 = *(_OWORD *)(a1 - 24);
            v56 = *(_QWORD *)(a1 - 8);
            *(_OWORD *)__dst = v24;
          }
          if (*(char *)(a1 + 23) < 0)
          {
            sub_14998(__p, *(void **)a1, *(_QWORD *)(a1 + 8));
          }
          else
          {
            v25 = *(_OWORD *)a1;
            v54 = *(_QWORD *)(a1 + 16);
            *(_OWORD *)__p = v25;
          }
          v26 = *a3;
          v27 = sub_E3DB0(*a3, (unsigned __int8 *)__dst);
          v28 = sub_E3DB0(v26, (unsigned __int8 *)__p);
          v29 = *((_QWORD *)v27 + 14);
          v30 = *((_QWORD *)v28 + 14);
          v31 = v29 < v30;
          if (v29 == v30)
          {
            v32 = *((_QWORD *)v27 + 8);
            v33 = *((_QWORD *)v28 + 8);
            v34 = v32 == v33;
            v35 = v32 < v33;
            if (v34)
              v31 = v27 < v28;
            else
              v31 = v35;
          }
          if (SHIBYTE(v54) < 0)
            operator delete(__p[0]);
          if (SHIBYTE(v56) < 0)
            operator delete(__dst[0]);
          if (!v31)
          {
            v10 = sub_139954((__int128 *)a1, (void **)a2, a3);
            goto LABEL_30;
          }
LABEL_25:
          v36 = sub_13A108(a1, (void **)a2, a3);
          if ((v37 & 1) == 0)
            goto LABEL_28;
          v38 = sub_13A7E4(a1, v36, a3);
          v10 = (__int128 *)(v36 + 24);
          if (!sub_13A7E4(v36 + 24, (uint64_t)a2, a3))
          {
            v11 = v12 + 1;
            if (v38)
              continue;
LABEL_28:
            sub_138830(a1, v36, a3, -v12, a5 & 1);
            v10 = (__int128 *)(v36 + 24);
LABEL_30:
            a5 = 0;
            a4 = -v12;
            goto LABEL_2;
          }
          a4 = -v12;
          a2 = (__int128 *)v36;
          if (v38)
            return result;
          goto LABEL_1;
        }
        if (v10 != a2)
          sub_13B584((uint64_t)v10, a2, a2, a3);
        return result;
    }
  }
}

  v9 = a2 - 24;
  v10 = (__int128 *)a1;
LABEL_2:
  v11 = 1 - a4;
  while (2)
  {
    a1 = (uint64_t)v10;
    v12 = v11;
    v13 = a2 - (unsigned __int8 *)v10;
    v14 = 0xAAAAAAAAAAAAAAABLL * ((a2 - (unsigned __int8 *)v10) >> 3);
    switch(v14)
    {
      case 0uLL:
      case 1uLL:
        return;
      case 2uLL:
        v34 = (_QWORD *)(*a3 + 40);
        v35 = sub_E3DB0(v34, v9);
        v36 = sub_E3DB0(v34, (unsigned __int8 *)v10);
        v37 = *((_QWORD *)v35 + 7);
        v38 = *((_QWORD *)v36 + 7);
        if (v37 != v38)
        {
          if (v37 >= v38)
            return;
          goto LABEL_40;
        }
        v39 = *((_QWORD *)v35 + 6);
        v40 = *((_QWORD *)v36 + 6);
        v29 = v39 == v40;
        v41 = v39 < v40;
        if (v29)
          v41 = v35 < v36;
        if (v41)
        {
LABEL_40:
          v46 = *((_QWORD *)v10 + 2);
          v44 = *v10;
          v42 = *(_OWORD *)v9;
          *((_QWORD *)v10 + 2) = *((_QWORD *)v9 + 2);
          *v10 = v42;
          *(_OWORD *)v9 = v44;
          *((_QWORD *)v9 + 2) = v46;
          return;
        }
        return;
      case 3uLL:
        sub_13CAF0((unsigned __int8 *)v10, (unsigned __int8 *)v10 + 24, a2 - 24, a3);
        return;
      case 4uLL:
        sub_13D794((uint64_t)v10, (unsigned __int8 *)v10 + 24, (unsigned __int8 *)v10 + 48, a2 - 24, a3);
        return;
      case 5uLL:
        sub_13D95C((uint64_t)v10, (unsigned __int8 *)v10 + 24, (unsigned __int8 *)v10 + 48, (unsigned __int8 *)v10 + 72, a2 - 24, a3);
        return;
      default:
        if (v13 <= 575)
        {
          if ((a5 & 1) != 0)
            sub_13C75C((unsigned __int8 *)v10, a2, a3);
          else
            sub_13C930((unsigned __int8 *)v10, a2, a3);
          return;
        }
        if (v12 != 1)
        {
          v15 = v14 >> 1;
          v16 = (unsigned __int8 *)v10 + 24 * (v14 >> 1);
          if ((unint64_t)v13 < 0xC01)
          {
            sub_13CAF0((unsigned __int8 *)v10 + 24 * v15, (unsigned __int8 *)v10, a2 - 24, a3);
            if ((a5 & 1) != 0)
              goto LABEL_16;
          }
          else
          {
            sub_13CAF0((unsigned __int8 *)v10, (unsigned __int8 *)v10 + 24 * v15, a2 - 24, a3);
            v17 = 3 * v15;
            v18 = (unsigned __int8 *)v10 + 24 * v15 - 24;
            sub_13CAF0((unsigned __int8 *)v10 + 24, v18, a2 - 48, a3);
            v19 = (unsigned __int8 *)(v10 + 3);
            v20 = (unsigned __int8 *)v10 + 8 * v17 + 24;
            sub_13CAF0(v19, v20, a2 - 72, a3);
            sub_13CAF0(v18, v16, v20, a3);
            v45 = *(_QWORD *)(a1 + 16);
            v43 = *(_OWORD *)a1;
            v21 = *(_OWORD *)v16;
            *(_QWORD *)(a1 + 16) = *((_QWORD *)v16 + 2);
            *(_OWORD *)a1 = v21;
            *((_QWORD *)v16 + 2) = v45;
            *(_OWORD *)v16 = v43;
            if ((a5 & 1) != 0)
              goto LABEL_16;
          }
          v22 = (_QWORD *)(*a3 + 40);
          v23 = sub_E3DB0(v22, (unsigned __int8 *)(a1 - 24));
          v24 = sub_E3DB0(v22, (unsigned __int8 *)a1);
          v25 = *((_QWORD *)v23 + 7);
          v26 = *((_QWORD *)v24 + 7);
          if (v25 == v26)
          {
            v27 = *((_QWORD *)v23 + 6);
            v28 = *((_QWORD *)v24 + 6);
            v29 = v27 == v28;
            v30 = v27 < v28;
            if (v29)
              v30 = v23 < v24;
            if (!v30)
            {
LABEL_20:
              v10 = sub_13CDA8((__int128 *)a1, a2, a3);
              goto LABEL_21;
            }
          }
          else if (v25 >= v26)
          {
            goto LABEL_20;
          }
LABEL_16:
          v31 = sub_13D12C((__int128 *)a1, a2, a3);
          if ((v32 & 1) == 0)
            goto LABEL_19;
          v33 = sub_13D46C(a1, v31, a3);
          v10 = (__int128 *)(v31 + 24);
          if (!sub_13D46C(v31 + 24, (uint64_t)a2, a3))
          {
            v11 = v12 + 1;
            if (v33)
              continue;
LABEL_19:
            sub_13C328(a1, v31, a3, -v12, a5 & 1);
            v10 = (__int128 *)(v31 + 24);
LABEL_21:
            a5 = 0;
            a4 = -v12;
            goto LABEL_2;
          }
          a4 = -v12;
          a2 = (unsigned __int8 *)v31;
          if (v33)
            return;
          goto LABEL_1;
        }
        if (v10 != (__int128 *)a2)
          sub_13DBA4((uint64_t)v10, (__int128 *)a2, (__int128 *)a2, a3);
        return;
    }
  }
}

  v9 = a1;
LABEL_2:
  v10 = 1 - a4;
  while (2)
  {
    a1 = v9;
    v11 = v10;
    v12 = (char *)a2 - (char *)v9;
    v13 = ((char *)a2 - (char *)v9) >> 3;
    switch(v13)
    {
      case 0uLL:
      case 1uLL:
        return;
      case 2uLL:
        v33 = (unint64_t)*(a2 - 1);
        v46 = *v9;
        v47 = v33;
        v34 = (_QWORD *)(*a3 + 80);
        v35 = sub_6C98(v34, &v47);
        v36 = sub_6C98(v34, &v46);
        v37 = v35[4];
        v38 = v36[4];
        if (v37 == v38)
        {
          v39 = v35[3];
          v40 = v36[3];
          v28 = v39 == v40;
          v41 = v39 < v40;
          if (v28)
            v41 = v35 < v36;
          if (!v41)
            return;
        }
        else if (v37 >= v38)
        {
          return;
        }
        v42 = *v9;
        *v9 = 0;
        v43 = (unint64_t)*(a2 - 1);
        *(a2 - 1) = 0;
        v44 = (void *)*v9;
        *v9 = v43;

        v45 = *(a2 - 1);
        *(a2 - 1) = (void *)v42;

        return;
      case 3uLL:
        sub_13EC08(v9, v9 + 1, (unint64_t *)a2 - 1, a3);
        return;
      case 4uLL:
        sub_13F878(v9, v9 + 1, v9 + 2, (unint64_t *)a2 - 1, a3);
        return;
      case 5uLL:
        sub_13FA7C(v9, v9 + 1, v9 + 2, v9 + 3, (unint64_t *)a2 - 1, a3);
        return;
      default:
        if (v12 <= 191)
        {
          if ((a5 & 1) != 0)
            sub_13E8DC((void **)v9, a2, a3);
          else
            sub_13EA90(v9, (unint64_t *)a2, a3);
          return;
        }
        if (v11 != 1)
        {
          v14 = v13 >> 1;
          v15 = &v9[v13 >> 1];
          if ((unint64_t)v12 < 0x401)
          {
            sub_13EC08(&v9[v13 >> 1], v9, (unint64_t *)a2 - 1, a3);
            if ((a5 & 1) != 0)
              goto LABEL_16;
          }
          else
          {
            sub_13EC08(v9, &v9[v13 >> 1], (unint64_t *)a2 - 1, a3);
            sub_13EC08(v9 + 1, v15 - 1, (unint64_t *)a2 - 2, a3);
            sub_13EC08(v9 + 2, &v9[v14 + 1], (unint64_t *)a2 - 3, a3);
            sub_13EC08(v15 - 1, v15, &v9[v14 + 1], a3);
            v16 = *v9;
            *v9 = 0;
            v17 = *v15;
            *v15 = 0;
            v18 = (void *)*v9;
            *v9 = v17;

            v19 = (void *)*v15;
            *v15 = v16;

            if ((a5 & 1) != 0)
              goto LABEL_16;
          }
          v20 = *(v9 - 1);
          v46 = *v9;
          v47 = v20;
          v21 = (_QWORD *)(*a3 + 80);
          v22 = sub_6C98(v21, &v47);
          v23 = sub_6C98(v21, &v46);
          v24 = v22[4];
          v25 = v23[4];
          if (v24 == v25)
          {
            v26 = v22[3];
            v27 = v23[3];
            v28 = v26 == v27;
            v29 = v26 < v27;
            if (v28)
              v29 = v22 < v23;
            if (!v29)
            {
LABEL_20:
              v9 = sub_13EEF4(a1, (unint64_t *)a2, a3);
              goto LABEL_21;
            }
          }
          else if (v24 >= v25)
          {
            goto LABEL_20;
          }
LABEL_16:
          v30 = sub_13F248(a1, (unint64_t *)a2, a3);
          if ((v31 & 1) == 0)
            goto LABEL_19;
          v32 = sub_13F564(a1, v30, a3);
          v9 = v30 + 1;
          if (!sub_13F564(v30 + 1, (unint64_t *)a2, a3))
          {
            v10 = v11 + 1;
            if (v32)
              continue;
LABEL_19:
            sub_13E558(a1, v30, a3, -v11, a5 & 1);
            v9 = v30 + 1;
LABEL_21:
            a5 = 0;
            a4 = -v11;
            goto LABEL_2;
          }
          a4 = -v11;
          a2 = (void **)v30;
          if (v32)
            return;
          goto LABEL_1;
        }
        if (v9 != (unint64_t *)a2)
          sub_13FD14(v9, (unint64_t *)a2, (unint64_t *)a2, a3);
        return;
    }
  }
}

void sub_1332F8(uint64_t *a1, uint64_t *a2, uint64_t *a3)
{
  double *v5;
  double v6;
  double v7;
  uint64_t *v8;

  v5 = (double *)a1;
  v6 = *(double *)a2;
  v7 = *(double *)a3;
  if (*(double *)a2 < *(double *)a1)
  {
    if (v7 >= v6)
    {
      sub_1335C0(a1, a2);
      if (*(double *)a3 >= *(double *)a2)
        return;
      a1 = a2;
    }
    v8 = a3;
    goto LABEL_9;
  }
  if (v7 < v6)
  {
    sub_1335C0(a2, a3);
    if (*(double *)a2 < *v5)
    {
      a1 = (uint64_t *)v5;
      v8 = a2;
LABEL_9:
      sub_1335C0(a1, v8);
    }
  }
}

BOOL sub_1333A4(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  _BOOL8 result;
  uint64_t *v6;
  uint64_t *v7;
  double *v8;
  uint64_t *v9;
  uint64_t v10;
  int v11;
  double v12;
  double v13;
  uint64_t v14;
  uint64_t v15;
  double *v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  void *v20;
  double *v21;
  uint64_t *v22;
  double v23;

  v4 = ((char *)a2 - (char *)a1) >> 4;
  result = 1;
  switch(v4)
  {
    case 0:
    case 1:
      return result;
    case 2:
      if (*((double *)a2 - 2) < *(double *)a1)
      {
        v6 = a1;
        v7 = a2 - 2;
        goto LABEL_4;
      }
      return result;
    case 3:
      sub_1332F8(a1, a1 + 2, a2 - 2);
      return 1;
    case 4:
      sub_133610(a1, a1 + 2, a1 + 4, a2 - 2);
      return 1;
    case 5:
      v21 = (double *)(a1 + 4);
      sub_133610(a1, a1 + 2, a1 + 4, a1 + 6);
      v23 = *((double *)a2 - 2);
      v22 = a2 - 2;
      if (v23 < *((double *)a1 + 6))
      {
        sub_1335C0(a1 + 6, v22);
        if (*((double *)a1 + 6) < *v21)
        {
          sub_1335C0(a1 + 4, a1 + 6);
          if (*v21 < *((double *)a1 + 2))
          {
            sub_1335C0(a1 + 2, a1 + 4);
            if (*((double *)a1 + 2) < *(double *)a1)
            {
              v6 = a1;
              v7 = a1 + 2;
LABEL_4:
              sub_1335C0(v6, v7);
            }
          }
        }
      }
      return 1;
    default:
      v8 = (double *)(a1 + 4);
      sub_1332F8(a1, a1 + 2, a1 + 4);
      v9 = a1 + 6;
      if (a1 + 6 == a2)
        return 1;
      v10 = 0;
      v11 = 0;
      break;
  }
  while (1)
  {
    v12 = *(double *)v9;
    v13 = *v8;
    if (*(double *)v9 < *v8)
    {
      v14 = v9[1];
      v9[1] = 0;
      v15 = v10;
      while (1)
      {
        v16 = (double *)((char *)a1 + v15);
        v16[6] = v13;
        v17 = *(uint64_t *)((char *)a1 + v15 + 40);
        v16[5] = 0.0;
        v18 = *(void **)((char *)a1 + v15 + 56);
        *((_QWORD *)v16 + 7) = v17;

        if (v15 == -32)
          break;
        v13 = v16[2];
        v15 -= 16;
        if (v12 >= v13)
        {
          v19 = (uint64_t)a1 + v15 + 48;
          goto LABEL_14;
        }
      }
      v19 = (uint64_t)a1;
LABEL_14:
      *(double *)v19 = v12;
      v20 = *(void **)(v19 + 8);
      *(_QWORD *)(v19 + 8) = v14;

      if (++v11 == 8)
        return v9 + 2 == a2;
    }
    v8 = (double *)v9;
    v10 += 16;
    v9 += 2;
    if (v9 == a2)
      return 1;
  }
}

void sub_1335C0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;

  v3 = *a1;
  *a1 = *a2;
  *a2 = v3;
  v4 = a1[1];
  a1[1] = 0;
  v5 = a2[1];
  a2[1] = 0;
  v6 = (void *)a1[1];
  a1[1] = v5;

  v7 = (void *)a2[1];
  a2[1] = v4;

}

void sub_133610(uint64_t *a1, uint64_t *a2, uint64_t *a3, uint64_t *a4)
{
  sub_1332F8(a1, a2, a3);
  if (*(double *)a4 < *(double *)a3)
  {
    sub_1335C0(a3, a4);
    if (*(double *)a3 < *(double *)a2)
    {
      sub_1335C0(a2, a3);
      if (*(double *)a2 < *(double *)a1)
        sub_1335C0(a1, a2);
    }
  }
}

void sub_1336A4(uint64_t *a1, uint64_t *a2, uint64_t a3, char a4)
{
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t *v12;
  double v13;
  uint64_t v14;
  uint64_t v15;
  double v16;
  uint64_t *v17;
  uint64_t *v18;
  double v19;
  double v20;
  uint64_t *v21;
  double v22;
  double v23;
  uint64_t v24;
  void *v25;
  void *v26;
  BOOL v27;
  uint64_t v28;
  double v29;
  uint64_t *v30;
  uint64_t *v31;
  double v32;
  double v33;
  double v34;
  uint64_t v35;
  void *v36;
  void *v37;
  uint64_t *v38;
  double v39;
  uint64_t *v40;
  uint64_t *v41;
  double *v42;
  uint64_t *v43;
  double v44;
  uint64_t *v45;
  BOOL v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t *v50;
  double v51;
  double v52;
  uint64_t v53;
  uint64_t v54;
  double *v55;
  uint64_t v56;
  void *v57;
  uint64_t v58;
  void *v59;
  int64_t v60;
  int64_t v61;
  int64_t v62;
  uint64_t v63;
  uint64_t *v64;
  uint64_t *v65;
  double v66;
  double v67;
  uint64_t *v68;
  uint64_t v69;
  double *v70;
  uint64_t v71;
  void *v72;
  uint64_t v73;
  uint64_t v74;
  void *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t *v80;
  uint64_t *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  void *v85;
  uint64_t *v86;
  uint64_t v87;
  void *v88;
  void *v89;
  uint64_t v90;
  unint64_t v91;
  double *v92;
  double v93;
  double v94;
  uint64_t v95;
  double *v96;
  uint64_t v97;
  void *v98;
  void *v99;
  void **v101;
  uint64_t *v102;
  double v103;
  double v104;
  uint64_t v105;
  void **v106;
  void **v107;
  void *v108;
  void *v109;
  void *v110;

BOOL sub_133E8C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  _BOOL8 result;
  uint64_t *v6;
  uint64_t *v7;
  double *v8;
  uint64_t *v9;
  uint64_t v10;
  int v11;
  double v12;
  double v13;
  uint64_t v14;
  uint64_t v15;
  double *v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  void *v20;
  double *v21;
  uint64_t *v22;
  double v23;

  v4 = ((char *)a2 - (char *)a1) >> 4;
  result = 1;
  switch(v4)
  {
    case 0:
    case 1:
      return result;
    case 2:
      if (*((double *)a2 - 2) < *(double *)a1)
      {
        v6 = a1;
        v7 = a2 - 2;
        goto LABEL_4;
      }
      return result;
    case 3:
      sub_1332F8(a1, a1 + 2, a2 - 2);
      return 1;
    case 4:
      sub_133610(a1, a1 + 2, a1 + 4, a2 - 2);
      return 1;
    case 5:
      v21 = (double *)(a1 + 4);
      sub_133610(a1, a1 + 2, a1 + 4, a1 + 6);
      v23 = *((double *)a2 - 2);
      v22 = a2 - 2;
      if (v23 < *((double *)a1 + 6))
      {
        sub_1335C0(a1 + 6, v22);
        if (*((double *)a1 + 6) < *v21)
        {
          sub_1335C0(a1 + 4, a1 + 6);
          if (*v21 < *((double *)a1 + 2))
          {
            sub_1335C0(a1 + 2, a1 + 4);
            if (*((double *)a1 + 2) < *(double *)a1)
            {
              v6 = a1;
              v7 = a1 + 2;
LABEL_4:
              sub_1335C0(v6, v7);
            }
          }
        }
      }
      return 1;
    default:
      v8 = (double *)(a1 + 4);
      sub_1332F8(a1, a1 + 2, a1 + 4);
      v9 = a1 + 6;
      if (a1 + 6 == a2)
        return 1;
      v10 = 0;
      v11 = 0;
      break;
  }
  while (1)
  {
    v12 = *(double *)v9;
    v13 = *v8;
    if (*(double *)v9 < *v8)
    {
      v14 = v9[1];
      v9[1] = 0;
      v15 = v10;
      while (1)
      {
        v16 = (double *)((char *)a1 + v15);
        v16[6] = v13;
        v17 = *(uint64_t *)((char *)a1 + v15 + 40);
        v16[5] = 0.0;
        v18 = *(void **)((char *)a1 + v15 + 56);
        *((_QWORD *)v16 + 7) = v17;

        if (v15 == -32)
          break;
        v13 = v16[2];
        v15 -= 16;
        if (v12 >= v13)
        {
          v19 = (uint64_t)a1 + v15 + 48;
          goto LABEL_14;
        }
      }
      v19 = (uint64_t)a1;
LABEL_14:
      *(double *)v19 = v12;
      v20 = *(void **)(v19 + 8);
      *(_QWORD *)(v19 + 8) = v14;

      if (++v11 == 8)
        return v9 + 2 == a2;
    }
    v8 = (double *)v9;
    v10 += 16;
    v9 += 2;
    if (v9 == a2)
      return 1;
  }
}

void sub_1340A8(uint64_t *a1, uint64_t *a2, uint64_t a3, char a4)
{
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t *v12;
  double v13;
  uint64_t v14;
  uint64_t v15;
  double v16;
  uint64_t *v17;
  uint64_t *v18;
  double v19;
  double v20;
  uint64_t *v21;
  double v22;
  double v23;
  uint64_t v24;
  void *v25;
  void *v26;
  BOOL v27;
  uint64_t v28;
  double v29;
  uint64_t *v30;
  uint64_t *v31;
  double v32;
  double v33;
  double v34;
  uint64_t v35;
  void *v36;
  void *v37;
  uint64_t *v38;
  double v39;
  uint64_t *v40;
  uint64_t *v41;
  double *v42;
  uint64_t *v43;
  double v44;
  uint64_t *v45;
  BOOL v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t *v50;
  double v51;
  double v52;
  uint64_t v53;
  uint64_t v54;
  double *v55;
  uint64_t v56;
  void *v57;
  uint64_t v58;
  void *v59;
  int64_t v60;
  int64_t v61;
  int64_t v62;
  uint64_t v63;
  uint64_t *v64;
  uint64_t *v65;
  double v66;
  double v67;
  uint64_t *v68;
  uint64_t v69;
  double *v70;
  uint64_t v71;
  void *v72;
  uint64_t v73;
  uint64_t v74;
  void *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t *v80;
  uint64_t *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  void *v85;
  uint64_t *v86;
  uint64_t v87;
  void *v88;
  void *v89;
  uint64_t v90;
  unint64_t v91;
  double *v92;
  double v93;
  double v94;
  uint64_t v95;
  double *v96;
  uint64_t v97;
  void *v98;
  void *v99;
  void **v101;
  uint64_t *v102;
  double v103;
  double v104;
  uint64_t v105;
  void **v106;
  void **v107;
  void *v108;
  void *v109;
  void *v110;

BOOL sub_134890(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  _BOOL8 result;
  uint64_t *v6;
  uint64_t *v7;
  double *v8;
  uint64_t *v9;
  uint64_t v10;
  int v11;
  double v12;
  double v13;
  uint64_t v14;
  uint64_t v15;
  double *v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  void *v20;
  double *v21;
  uint64_t *v22;
  double v23;

  v4 = ((char *)a2 - (char *)a1) >> 4;
  result = 1;
  switch(v4)
  {
    case 0:
    case 1:
      return result;
    case 2:
      if (*((double *)a2 - 2) < *(double *)a1)
      {
        v6 = a1;
        v7 = a2 - 2;
        goto LABEL_4;
      }
      return result;
    case 3:
      sub_1332F8(a1, a1 + 2, a2 - 2);
      return 1;
    case 4:
      sub_133610(a1, a1 + 2, a1 + 4, a2 - 2);
      return 1;
    case 5:
      v21 = (double *)(a1 + 4);
      sub_133610(a1, a1 + 2, a1 + 4, a1 + 6);
      v23 = *((double *)a2 - 2);
      v22 = a2 - 2;
      if (v23 < *((double *)a1 + 6))
      {
        sub_1335C0(a1 + 6, v22);
        if (*((double *)a1 + 6) < *v21)
        {
          sub_1335C0(a1 + 4, a1 + 6);
          if (*v21 < *((double *)a1 + 2))
          {
            sub_1335C0(a1 + 2, a1 + 4);
            if (*((double *)a1 + 2) < *(double *)a1)
            {
              v6 = a1;
              v7 = a1 + 2;
LABEL_4:
              sub_1335C0(v6, v7);
            }
          }
        }
      }
      return 1;
    default:
      v8 = (double *)(a1 + 4);
      sub_1332F8(a1, a1 + 2, a1 + 4);
      v9 = a1 + 6;
      if (a1 + 6 == a2)
        return 1;
      v10 = 0;
      v11 = 0;
      break;
  }
  while (1)
  {
    v12 = *(double *)v9;
    v13 = *v8;
    if (*(double *)v9 < *v8)
    {
      v14 = v9[1];
      v9[1] = 0;
      v15 = v10;
      while (1)
      {
        v16 = (double *)((char *)a1 + v15);
        v16[6] = v13;
        v17 = *(uint64_t *)((char *)a1 + v15 + 40);
        v16[5] = 0.0;
        v18 = *(void **)((char *)a1 + v15 + 56);
        *((_QWORD *)v16 + 7) = v17;

        if (v15 == -32)
          break;
        v13 = v16[2];
        v15 -= 16;
        if (v12 >= v13)
        {
          v19 = (uint64_t)a1 + v15 + 48;
          goto LABEL_14;
        }
      }
      v19 = (uint64_t)a1;
LABEL_14:
      *(double *)v19 = v12;
      v20 = *(void **)(v19 + 8);
      *(_QWORD *)(v19 + 8) = v14;

      if (++v11 == 8)
        return v9 + 2 == a2;
    }
    v8 = (double *)v9;
    v10 += 16;
    v9 += 2;
    if (v9 == a2)
      return 1;
  }
}

uint64_t sub_134AAC(uint64_t a1)
{
  uint64_t i;
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 8);
  for (i = *(_QWORD *)(a1 + 16); i != v3; i = *(_QWORD *)(a1 + 16))
  {
    *(_QWORD *)(a1 + 16) = i - 16;

  }
  if (*(_QWORD *)a1)
    operator delete(*(void **)a1);
  return a1;
}

id sub_134C84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return objc_msgSend(*(id *)(a1 + 32), "addAttributes:range:", a2, a3, a4);
}

void sub_135294(id a1)
{
  void *v1;

  v1 = (void *)qword_2CB7D0;
  qword_2CB7D0 = (uint64_t)&off_254730;

}

void sub_135334(id a1)
{
  void *v1;

  v1 = (void *)qword_2CB7E0;
  qword_2CB7E0 = (uint64_t)&off_254758;

}

void sub_1353D0(id a1)
{
  void *v1;
  id v2;
  id v3;
  uint64_t v4;
  __objc2_class *v5;
  double height;
  __objc2_class *v7;
  void *i;
  void *v9;
  int *v10;
  void *v11;
  void *v12;
  double v13;
  double v14;
  _TUIButtonMetrics *v15;
  double v16;
  double v17;
  double v18;
  double v19;
  _TUIButtonMetrics *v20;
  double v21;
  double v22;
  double v23;
  double v24;
  __objc2_class *v25;
  __objc2_class *v26;
  id v27;
  double v28;
  double v29;
  _TUIButtonMetrics *v30;
  double v31;
  double v32;
  double v33;
  double v34;
  id v35;
  void *v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  _BYTE v41[128];

  v1 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableDictionary dictionaryWithCapacity:](NSMutableDictionary, "dictionaryWithCapacity:", objc_msgSend(&off_252380, "count")));
  v37 = 0u;
  v38 = 0u;
  v39 = 0u;
  v40 = 0u;
  v2 = objc_msgSend(&off_252380, "countByEnumeratingWithState:objects:count:", &v37, v41, 16);
  if (v2)
  {
    v3 = v2;
    v4 = *(_QWORD *)v38;
    v5 = _TUIHBoxDynamicSpacerLayout;
    height = CGSizeZero.height;
    v7 = _TUIHBoxDynamicSpacerLayout;
    do
    {
      for (i = 0; i != v3; i = (char *)i + 1)
      {
        if (*(_QWORD *)v38 != v4)
          objc_enumerationMutation(&off_252380);
        v9 = *(void **)(*((_QWORD *)&v37 + 1) + 8 * (_QWORD)i);
        v10 = (int *)objc_msgSend(v9, "unsignedIntegerValue");
        v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(&v7[60], "buttonWithType:", objc_msgSend(&v5[76], "uiButtonTypeFromTUIButtonType:", v10)));
        v12 = v11;
        if (v10 == &dword_4)
        {
          objc_msgSend(v11, "sizeThatFits:", CGSizeZero.width, height);
          v14 = v13;
          v15 = [_TUIButtonMetrics alloc];
          objc_msgSend(v12, "alignmentRectInsets");
          v20 = -[_TUIButtonMetrics initWithHeight:widthPadding:alignmentRectInsets:](v15, "initWithHeight:widthPadding:alignmentRectInsets:", v14, NAN, v16, v17, v18, v19);
        }
        else
        {
          objc_msgSend(v11, "setTitle:forState:", CFSTR("button"), 0);
          objc_msgSend(v12, "sizeThatFits:", CGSizeZero.width, height);
          v22 = v21;
          v24 = v23;
          v25 = v7;
          v26 = v5;
          v27 = objc_msgSend(objc_alloc((Class)NSAttributedString), "initWithString:", CFSTR("button"));
          objc_msgSend(v27, "tui_widthAsTitle");
          v29 = v28;
          v30 = [_TUIButtonMetrics alloc];
          objc_msgSend(v12, "alignmentRectInsets");
          v20 = -[_TUIButtonMetrics initWithHeight:widthPadding:alignmentRectInsets:](v30, "initWithHeight:widthPadding:alignmentRectInsets:", v24, v22 - v29, v31, v32, v33, v34);

          v5 = v26;
          v7 = v25;
        }
        objc_msgSend(v1, "setObject:forKeyedSubscript:", v20, v9);

      }
      v3 = objc_msgSend(&off_252380, "countByEnumeratingWithState:objects:count:", &v37, v41, 16);
    }
    while (v3);
  }
  v35 = objc_msgSend(v1, "copy");
  v36 = (void *)qword_2CB7F0;
  qword_2CB7F0 = (uint64_t)v35;

}

void sub_13616C(id a1)
{
  void *v1;
  id v2;
  void *v3;
  id v4;
  void *v5;
  _QWORD v6[2];

  v1 = (void *)objc_claimAutoreleasedReturnValue(+[TUIAttributeSet supportedAttributesSize](TUIAttributeSet, "supportedAttributesSize"));
  v2 = objc_msgSend(v1, "mutableCopy");

  objc_msgSend(v2, "removeAttribute:", 98);
  objc_msgSend(v2, "removeAttribute:", 223);
  v6[0] = CFSTR("on");
  v6[1] = CFSTR("enabled");
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", v6, 2));
  objc_msgSend(v2, "addAttributesFromArray:", v3);

  v4 = objc_msgSend(v2, "copy");
  v5 = (void *)qword_2CB800;
  qword_2CB800 = (uint64_t)v4;

}

void sub_1362AC(id a1)
{
  void *v1;
  uint64_t v2;
  void *v3;
  const __CFString *v4;

  v4 = CFSTR("binding");
  v1 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v4, 1));
  v2 = objc_claimAutoreleasedReturnValue(+[TUIAttributeSet setWithArray:](TUIAttributeSet, "setWithArray:", v1));
  v3 = (void *)qword_2CB810;
  qword_2CB810 = v2;

}

void sub_136724(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
  id *v20;

  objc_destroyWeak(v20);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id sub_136748(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id *v7;
  id v8;
  id WeakRetained;
  void *v10;
  void *v11;
  uint64_t v13;

  v4 = *(_QWORD *)(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  v6 = *(unsigned __int8 *)(a1 + 72);
  v7 = (id *)(a1 + 64);
  v8 = a3;
  WeakRetained = objc_loadWeakRetained(v7);
  v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "identifier"));
  LOBYTE(v13) = *(_BYTE *)(a1 + 73);
  v11 = (void *)objc_claimAutoreleasedReturnValue(+[TUIToggleView renderModelWithStates:actionHandler:viewState:enabled:identifier:name:title:isOn:](TUIToggleView, "renderModelWithStates:actionHandler:viewState:enabled:identifier:name:title:isOn:", v8, v4, v5, v6, v10, *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), v13));

  return v11;
}

void sub_136AA4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12)
{
  void *v12;
  void *v13;
  void *v14;

  _Unwind_Resume(a1);
}

id sub_136B40(_QWORD *a1)
{
  unint64_t v1;
  unint64_t v2;
  NSMutableArray *v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  unsigned __int8 *v8;
  id v9;
  void *v10;
  int64x2_t v11;
  int64x2_t v12;
  NSMutableArray *v13;
  uint64_t v14;
  uint64_t i;
  __int128 v16;
  unsigned __int8 *v17;
  id v18;
  void *v19;
  NSMutableArray *v20;
  id *v21;
  id *j;
  _QWORD *v23;
  id v24;
  void *v25;
  NSMutableArray *v26;
  int64x2_t *v27;
  int64x2_t *v28;
  int64x2_t v29;
  int64x2_t v30;
  int64x2_t v31;
  int64x2_t v32;
  int64x2_t v33;
  int64x2_t v34;
  int64x2_t v35;
  id v36;
  void *v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  id v42;
  id v43;
  void *v44;
  double v45;
  void *v46;
  double v47;
  double v48;
  id v49;
  void *v50;
  void *v51;
  void *v52;
  int64x2_t v54;
  void *v55;
  int64x2_t v56;
  void *v57;
  void *v58[2];
  char v59;
  void *v60[2];
  char v61;
  void *__dst[2];
  int64x2_t v63;
  int64x2_t v64;
  int64x2_t v65;
  int64x2_t v66;
  int64x2_t v67;
  int64x2_t v68;
  int64x2_t v69;
  int64x2_t v70;
  int64x2_t v71;
  int64x2_t v72;
  int64x2_t v73;
  id *v74;
  id *v75;
  void *v76[2];
  uint64_t v77;
  int64x2_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  void *__p[2];
  uint64_t v83;
  int64x2_t v84;
  int64x2_t v85;
  int64x2_t v86;
  int64x2_t v87;
  int64x2_t v88;
  uint64_t v89;
  uint64_t v90[3];
  mach_timebase_info info;
  _QWORD v92[10];
  _QWORD v93[10];

  mach_timebase_info(&info);
  v4 = objc_opt_new(NSMutableArray);
  sub_137708(a1, v90);
  v89 = 0;
  v87 = 0u;
  v88 = 0u;
  v85 = 0u;
  v86 = 0u;
  v84 = 0u;
  v5 = v90[0];
  v6 = v90[1];
  while (v5 != v6)
  {
    if (*(char *)(v5 + 23) < 0)
    {
      sub_14998(__dst, *(void **)v5, *(_QWORD *)(v5 + 8));
    }
    else
    {
      v7 = *(_OWORD *)v5;
      v63.i64[0] = *(_QWORD *)(v5 + 16);
      *(_OWORD *)__dst = v7;
    }
    v8 = sub_E3DB0(a1, (unsigned __int8 *)__dst);
    if (v63.i8[7] < 0)
    {
      sub_14998(__p, __dst[0], (unint64_t)__dst[1]);
    }
    else
    {
      *(_OWORD *)__p = *(_OWORD *)__dst;
      v83 = v63.i64[0];
    }
    v9 = sub_13789C((_QWORD *)v8 + 5, (uint64_t *)__p, &info);
    v10 = (void *)objc_claimAutoreleasedReturnValue(v9);
    -[NSMutableArray addObject:](v4, "addObject:", v10);

    if (SHIBYTE(v83) < 0)
      operator delete(__p[0]);
    v11 = vaddq_s64(v85, *(int64x2_t *)(v8 + 56));
    v84 = vaddq_s64(v84, *(int64x2_t *)(v8 + 40));
    v85 = v11;
    v12 = vaddq_s64(v87, *(int64x2_t *)(v8 + 88));
    v86 = vaddq_s64(v86, *(int64x2_t *)(v8 + 72));
    v87 = v12;
    v88 = vaddq_s64(v88, *(int64x2_t *)(v8 + 104));
    v89 += *((_QWORD *)v8 + 15);
    if (v63.i8[7] < 0)
      operator delete(__dst[0]);
    v5 += 24;
  }
  v13 = objc_opt_new(NSMutableArray);
  sub_137CA0((uint64_t)a1, &v80);
  v78 = 0uLL;
  v79 = 0;
  v14 = v80;
  for (i = v81; v14 != i; v14 += 24)
  {
    if (*(char *)(v14 + 23) < 0)
    {
      sub_14998(__dst, *(void **)v14, *(_QWORD *)(v14 + 8));
    }
    else
    {
      v16 = *(_OWORD *)v14;
      v63.i64[0] = *(_QWORD *)(v14 + 16);
      *(_OWORD *)__dst = v16;
    }
    v17 = sub_E3DB0(a1 + 5, (unsigned __int8 *)__dst);
    if (v63.i8[7] < 0)
    {
      sub_14998(v76, __dst[0], (unint64_t)__dst[1]);
    }
    else
    {
      *(_OWORD *)v76 = *(_OWORD *)__dst;
      v77 = v63.i64[0];
    }
    v18 = sub_137E1C((_QWORD *)v17 + 5, (uint64_t *)v76, &info);
    v19 = (void *)objc_claimAutoreleasedReturnValue(v18);
    -[NSMutableArray addObject:](v13, "addObject:", v19);

    if (SHIBYTE(v77) < 0)
      operator delete(v76[0]);
    v78 = vaddq_s64(v78, *(int64x2_t *)(v17 + 40));
    v79 += *((_QWORD *)v17 + 7);
    if (v63.i8[7] < 0)
      operator delete(__dst[0]);
  }
  v20 = objc_opt_new(NSMutableArray);
  sub_137FBC((uint64_t)a1, (uint64_t)&v74);
  v21 = v74;
  for (j = v75; v21 != j; ++v21)
  {
    __dst[0] = *v21;
    v23 = sub_6C98(a1 + 10, (unint64_t *)__dst);
    v24 = sub_1380A0(v23 + 3, (Class)__dst[0], &info);
    v25 = (void *)objc_claimAutoreleasedReturnValue(v24);
    -[NSMutableArray addObject:](v20, "addObject:", v25);

  }
  v26 = objc_opt_new(NSMutableArray);
  v72 = 0u;
  v73 = 0u;
  v27 = (int64x2_t *)a1[15];
  v28 = (int64x2_t *)a1[16];
  if (v27 == v28)
  {
    v38 = a1[15];
  }
  else
  {
    v54 = 0uLL;
    v56 = 0uLL;
    do
    {
      v29 = v27[1];
      *(int64x2_t *)__dst = *v27;
      v63 = v29;
      v30 = v27[2];
      v31 = v27[3];
      v32 = v27[5];
      v66 = v27[4];
      v67 = v32;
      v64 = v30;
      v65 = v31;
      v33 = v27[6];
      v34 = v27[7];
      v35 = v27[9];
      v70 = v27[8];
      v71 = v35;
      v68 = v33;
      v69 = v34;
      v54 = vaddq_s64(v54, v63);
      v56 = vaddq_s64(v56, *(int64x2_t *)__dst);
      v72 = v56;
      v73 = v54;
      v36 = sub_1382A8((unint64_t *)__dst, a1[18], &info, *(double *)v54.i64, *(double *)v63.i64);
      v37 = (void *)objc_claimAutoreleasedReturnValue(v36);
      -[NSMutableArray addObject:](v26, "addObject:", v37);

      v27 += 10;
    }
    while (v27 != v28);
    v27 = (int64x2_t *)a1[15];
    v38 = a1[16];
  }
  v39 = a1[18];
  v40 = a1[19];
  if (v39 >= v40)
    v41 = ~v39;
  else
    v41 = -(uint64_t)v39;
  LODWORD(v2) = info.numer;
  LODWORD(v1) = info.denom;
  v92[0] = CFSTR("components");
  v92[1] = CFSTR("globals");
  v93[0] = v4;
  v93[1] = v13;
  v93[2] = v20;
  v92[2] = CFSTR("layouts");
  v92[3] = CFSTR("componentsSummary");
  sub_9350(v60, "<all>");
  v42 = sub_13789C(&v84, (uint64_t *)v60, &info);
  v55 = (void *)objc_claimAutoreleasedReturnValue(v42);
  v93[3] = v55;
  v92[4] = CFSTR("globalsSummary");
  sub_9350(v58, "<all>");
  v43 = sub_137E1C(&v78, (uint64_t *)v58, &info);
  v57 = (void *)objc_claimAutoreleasedReturnValue(v43);
  v93[4] = v57;
  v93[5] = v26;
  v92[5] = CFSTR("frames");
  v92[6] = CFSTR("frameCount");
  v44 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedLong:](NSNumber, "numberWithUnsignedLong:", 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(a1[16] - a1[15]) >> 5)));
  v45 = (double)v2 * (double)(v41 + v40) / (double)v1 / 1000000000.0;
  v93[6] = v44;
  v92[7] = CFSTR("elapsed");
  v46 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](NSNumber, "numberWithDouble:", v45));
  v93[7] = v46;
  v92[8] = CFSTR("totalElapsed");
  v49 = sub_13851C((unint64_t *)&v72, &info, v47, v48);
  v50 = (void *)objc_claimAutoreleasedReturnValue(v49);
  v93[8] = v50;
  v92[9] = CFSTR("fps");
  v51 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](NSNumber, "numberWithDouble:", (double)(0xCCCCCCCCCCCCCCCDLL * ((v38 - (uint64_t)v27) >> 5)) / v45));
  v93[9] = v51;
  v52 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", v93, v92, 10));

  if (v59 < 0)
    operator delete(v58[0]);

  if (v61 < 0)
    operator delete(v60[0]);

  __dst[0] = &v74;
  sub_1404B8((void ***)__dst);

  __dst[0] = &v80;
  sub_E3488((void ***)__dst);

  __dst[0] = v90;
  sub_E3488((void ***)__dst);

  return v52;
}

void sub_137170(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, uint64_t a10, void *a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,char a50,uint64_t a51,uint64_t a52,void *a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,char a60)
{
  void *v60;
  void *v61;
  void *v62;
  void *v63;
  void *v64;
  void *v65;
  void *v66;
  void *v67;

  if (a18 < 0)
    operator delete(__p);

  if (a24 < 0)
    operator delete(a19);

  a25 = &a50;
  sub_1404B8((void ***)&a25);

  a25 = &a60;
  sub_E3488((void ***)&a25);

  a25 = &STACK[0x200];
  sub_E3488((void ***)&a25);

  _Unwind_Resume(a1);
}

uint64_t sub_137328(_QWORD *a1)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  _OWORD *v5;
  _OWORD *v6;
  void **v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  char *v13;
  char *v14;
  char *v15;
  char *v16;
  char *v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  uint64_t result;

  v4 = a1[17];
  v2 = (uint64_t)(a1 + 17);
  v3 = v4;
  v5 = *(_OWORD **)(v2 - 8);
  if ((unint64_t)v5 >= v4)
  {
    v7 = (void **)(v2 - 16);
    v8 = *(_QWORD *)(v2 - 16);
    v9 = 0xCCCCCCCCCCCCCCCDLL * (((uint64_t)v5 - v8) >> 5);
    v10 = v9 + 1;
    if (v9 + 1 > 0x199999999999999)
      sub_6F9C();
    v11 = 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(v3 - v8) >> 5);
    if (2 * v11 > v10)
      v10 = 2 * v11;
    if (v11 >= 0xCCCCCCCCCCCCCCLL)
      v12 = 0x199999999999999;
    else
      v12 = v10;
    if (v12)
      v13 = (char *)sub_140524(v2, v12);
    else
      v13 = 0;
    v14 = &v13[160 * v9];
    v15 = &v13[160 * v12];
    *((_OWORD *)v14 + 8) = 0u;
    *((_OWORD *)v14 + 9) = 0u;
    *((_OWORD *)v14 + 6) = 0u;
    *((_OWORD *)v14 + 7) = 0u;
    *((_OWORD *)v14 + 4) = 0u;
    *((_OWORD *)v14 + 5) = 0u;
    *((_OWORD *)v14 + 2) = 0u;
    *((_OWORD *)v14 + 3) = 0u;
    *(_OWORD *)v14 = 0u;
    *((_OWORD *)v14 + 1) = 0u;
    v6 = v14 + 160;
    v17 = (char *)a1[15];
    v16 = (char *)a1[16];
    if (v16 != v17)
    {
      do
      {
        v18 = *((_OWORD *)v16 - 9);
        *((_OWORD *)v14 - 10) = *((_OWORD *)v16 - 10);
        *((_OWORD *)v14 - 9) = v18;
        v19 = *((_OWORD *)v16 - 8);
        v20 = *((_OWORD *)v16 - 7);
        v21 = *((_OWORD *)v16 - 5);
        *((_OWORD *)v14 - 6) = *((_OWORD *)v16 - 6);
        *((_OWORD *)v14 - 5) = v21;
        *((_OWORD *)v14 - 8) = v19;
        *((_OWORD *)v14 - 7) = v20;
        v22 = *((_OWORD *)v16 - 4);
        v23 = *((_OWORD *)v16 - 3);
        v24 = *((_OWORD *)v16 - 1);
        *((_OWORD *)v14 - 2) = *((_OWORD *)v16 - 2);
        *((_OWORD *)v14 - 1) = v24;
        *((_OWORD *)v14 - 4) = v22;
        *((_OWORD *)v14 - 3) = v23;
        v14 -= 160;
        v16 -= 160;
      }
      while (v16 != v17);
      v16 = (char *)*v7;
    }
    a1[15] = v14;
    a1[16] = v6;
    a1[17] = v15;
    if (v16)
      operator delete(v16);
  }
  else
  {
    v5[8] = 0u;
    v5[9] = 0u;
    v5[6] = 0u;
    v5[7] = 0u;
    v5[4] = 0u;
    v5[5] = 0u;
    v5[2] = 0u;
    v5[3] = 0u;
    v6 = v5 + 10;
    *v5 = 0u;
    v5[1] = 0u;
  }
  a1[16] = v6;
  result = mach_absolute_time();
  *(_QWORD *)(a1[16] - 16) = result;
  return result;
}

void sub_137508(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

int64x2_t sub_137528(uint64_t a1, _QWORD *a2)
{
  unint64_t v2;
  uint64_t *i;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  Entry v9;
  uint64_t *j;
  __int128 v11;
  Entry v12;
  uint64_t *k;
  __int128 v14;
  uint64_t v15;
  int64x2_t v16;
  int64x2_t result;
  std::string __p;
  _BYTE v19[32];
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;

  for (i = *(uint64_t **)(a1 + 24); i; i = (uint64_t *)*i)
  {
    v6 = *((_OWORD *)i + 4);
    v20 = *((_OWORD *)i + 3);
    v21 = v6;
    v7 = *((_OWORD *)i + 6);
    v22 = *((_OWORD *)i + 5);
    v23 = v7;
    v8 = *((_OWORD *)i + 2);
    *(_OWORD *)v19 = *((_OWORD *)i + 1);
    *(_OWORD *)&v19[16] = v8;
    v2 = v2 & 0xFFFFFFFF00000000 | *(unsigned int *)v19;
    v9 = (Entry)v2;
    TUI::Symbol::Tab::std_string(*(std::string **)a1, v9, &__p);
    sub_140568(a2, (unsigned __int8 *)&__p, (uint64_t)&v19[8]);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
  }
  for (j = *(uint64_t **)(a1 + 64); j; j = (uint64_t *)*j)
  {
    v11 = *((_OWORD *)j + 2);
    *(_OWORD *)v19 = *((_OWORD *)j + 1);
    *(_OWORD *)&v19[16] = v11;
    v2 = v2 & 0xFFFFFFFF00000000 | *(unsigned int *)v19;
    v12 = (Entry)v2;
    TUI::Symbol::Tab::std_string(*(std::string **)a1, v12, &__p);
    sub_14060C((uint64_t)a2, (unsigned __int8 *)&__p, (int64x2_t *)&v19[8]);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
  }
  for (k = *(uint64_t **)(a1 + 104); k; k = (uint64_t *)*k)
  {
    *(_QWORD *)v19 = (id)k[2];
    v14 = *(_OWORD *)(k + 3);
    *(_QWORD *)&v19[24] = k[5];
    *(_OWORD *)&v19[8] = v14;
    sub_1406C8((uint64_t)a2, *(unint64_t *)v19, (int64x2_t *)&v19[8]);

  }
  v15 = a2[16];
  v16 = *(int64x2_t *)(v15 - 144);
  *(int64x2_t *)(v15 - 160) = vaddq_s64(*(int64x2_t *)(v15 - 160), *(int64x2_t *)(a1 + 27816));
  result = vaddq_s64(v16, *(int64x2_t *)(a1 + 27832));
  *(int64x2_t *)(v15 - 144) = result;
  return result;
}

void sub_13769C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16)
{

  _Unwind_Resume(a1);
}

double sub_137708@<D0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t *v4;
  __int128 v5;
  __int128 v6;
  unint64_t v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  __int128 *v11;
  unint64_t v12;
  uint64_t v13;
  void *__p[2];
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  _QWORD *v23;

  *a2 = 0;
  a2[1] = 0;
  a2[2] = 0;
  v4 = (uint64_t *)a1[2];
  if (v4)
  {
    do
    {
      if (*((char *)v4 + 39) < 0)
      {
        sub_14998(__p, (void *)v4[2], v4[3]);
      }
      else
      {
        *(_OWORD *)__p = *((_OWORD *)v4 + 1);
        v16 = v4[4];
      }
      v5 = *(_OWORD *)(v4 + 11);
      v19 = *(_OWORD *)(v4 + 9);
      v20 = v5;
      v21 = *(_OWORD *)(v4 + 13);
      v22 = v4[15];
      v6 = *(_OWORD *)(v4 + 7);
      v17 = *(_OWORD *)(v4 + 5);
      v18 = v6;
      v7 = a2[1];
      if (v7 >= a2[2])
      {
        v9 = sub_138710(a2, (__int128 *)__p);
      }
      else
      {
        if (SHIBYTE(v16) < 0)
        {
          sub_14998((_BYTE *)a2[1], __p[0], (unint64_t)__p[1]);
        }
        else
        {
          v8 = *(_OWORD *)__p;
          *(_QWORD *)(v7 + 16) = v16;
          *(_OWORD *)v7 = v8;
        }
        v9 = v7 + 24;
        a2[1] = v7 + 24;
      }
      a2[1] = v9;
      if (SHIBYTE(v16) < 0)
        operator delete(__p[0]);
      v4 = (uint64_t *)*v4;
    }
    while (v4);
    v10 = *a2;
    v11 = (__int128 *)a2[1];
  }
  else
  {
    v11 = 0;
    v10 = 0;
  }
  v12 = 126 - 2 * __clz(0xAAAAAAAAAAAAAAABLL * (((uint64_t)v11 - v10) >> 3));
  v23 = a1;
  if (v11 == (__int128 *)v10)
    v13 = 0;
  else
    v13 = v12;
  return sub_138830(v10, v11, &v23, v13, 1);
}

void sub_13785C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  sub_E3488((void ***)&__p);
  _Unwind_Resume(a1);
}

id sub_13789C(_QWORD *a1, uint64_t *a2, _DWORD *a3)
{
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  unint64_t v10;
  unint64_t v11;
  double v12;
  void *v13;
  unint64_t v14;
  unint64_t v15;
  void *v16;
  unint64_t v17;
  unint64_t v18;
  void *v19;
  void *v20;
  void *v21;
  void *v23;
  void *v24;
  void *v25;
  _QWORD v26[12];
  _QWORD v27[12];

  v26[0] = CFSTR("name");
  if (*((char *)a2 + 23) < 0)
    a2 = (uint64_t *)*a2;
  v27[0] = objc_claimAutoreleasedReturnValue(+[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", a2, 4));
  v26[1] = CFSTR("instantiateBody");
  v25 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedLong:](NSNumber, "numberWithUnsignedLong:", a1[3]));
  v27[1] = v25;
  v26[2] = CFSTR("instantiate");
  v24 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedLong:](NSNumber, "numberWithUnsignedLong:", a1[4]));
  v27[2] = v24;
  v26[3] = CFSTR("instantiateCreate");
  v23 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedLong:](NSNumber, "numberWithUnsignedLong:", a1[5]));
  v27[3] = v23;
  v26[4] = CFSTR("instantiateUpdate");
  v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedLong:](NSNumber, "numberWithUnsignedLong:", a1[6]));
  v27[4] = v5;
  v26[5] = CFSTR("instantiateReuse");
  v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedLong:](NSNumber, "numberWithUnsignedLong:", a1[7]));
  v27[5] = v6;
  v26[6] = CFSTR("evaluatedBindings");
  v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedLong:](NSNumber, "numberWithUnsignedLong:", *a1));
  v27[6] = v7;
  v26[7] = CFSTR("globalsEvaluated");
  v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedLong:](NSNumber, "numberWithUnsignedLong:", a1[1]));
  v27[7] = v8;
  v26[8] = CFSTR("globalsChanged");
  v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedLong:](NSNumber, "numberWithUnsignedLong:", a1[2]));
  LODWORD(v10) = *a3;
  LODWORD(v11) = a3[1];
  v12 = (double)(unint64_t)a1[8] * (double)v10;
  v27[8] = v9;
  v26[9] = CFSTR("elapsedInstantiateBody (direct)");
  v13 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](NSNumber, "numberWithDouble:", v12 / (double)v11 / 1000000.0));
  v27[9] = v13;
  v26[10] = CFSTR("elapsedInstantiateBody (total)");
  LODWORD(v14) = *a3;
  LODWORD(v15) = a3[1];
  v16 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](NSNumber, "numberWithDouble:", (double)(unint64_t)a1[9] * (double)v14 / (double)v15 / 1000000.0));
  v27[10] = v16;
  v26[11] = CFSTR("elapsedGlobalsEvaluated");
  LODWORD(v17) = *a3;
  LODWORD(v18) = a3[1];
  v19 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](NSNumber, "numberWithDouble:", (double)(unint64_t)a1[10] * (double)v17 / (double)v18 / 1000000.0));
  v27[11] = v19;
  v20 = (void *)v27[0];
  v21 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", v27, v26, 12));

  return v21;
}

void sub_137BA0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, void *a10, void *a11, void *a12)
{
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;

  _Unwind_Resume(a1);
}

int64x2_t sub_137C4C(int64x2_t *a1, int64x2_t *a2)
{
  int64x2_t v2;
  int64x2_t v3;
  int64x2_t result;
  int64x2_t v5;

  v2 = a1[1];
  *a1 = vaddq_s64(*a1, *a2);
  a1[1] = vaddq_s64(v2, a2[1]);
  v3 = a1[3];
  a1[2] = vaddq_s64(a1[2], a2[2]);
  result = vaddq_s64(v3, a2[3]);
  v5 = vaddq_s64(a1[4], a2[4]);
  a1[3] = result;
  a1[4] = v5;
  a1[5].i64[0] += a2[5].i64[0];
  return result;
}

void sub_137CA0(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t *v4;
  unint64_t v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 *v9;
  unint64_t v10;
  uint64_t v11;
  void *__p[2];
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;

  *a2 = 0;
  a2[1] = 0;
  a2[2] = 0;
  v4 = *(uint64_t **)(a1 + 56);
  if (v4)
  {
    do
    {
      if (*((char *)v4 + 39) < 0)
      {
        sub_14998(__p, (void *)v4[2], v4[3]);
      }
      else
      {
        *(_OWORD *)__p = *((_OWORD *)v4 + 1);
        v13 = v4[4];
      }
      v14 = *(_OWORD *)(v4 + 5);
      v15 = v4[7];
      v5 = a2[1];
      if (v5 >= a2[2])
      {
        v7 = sub_138710(a2, (__int128 *)__p);
      }
      else
      {
        if (SHIBYTE(v13) < 0)
        {
          sub_14998((_BYTE *)a2[1], __p[0], (unint64_t)__p[1]);
        }
        else
        {
          v6 = *(_OWORD *)__p;
          *(_QWORD *)(v5 + 16) = v13;
          *(_OWORD *)v5 = v6;
        }
        v7 = v5 + 24;
        a2[1] = v5 + 24;
      }
      a2[1] = v7;
      if (SHIBYTE(v13) < 0)
        operator delete(__p[0]);
      v4 = (uint64_t *)*v4;
    }
    while (v4);
    v8 = *a2;
    v9 = (unsigned __int8 *)a2[1];
  }
  else
  {
    v9 = 0;
    v8 = 0;
  }
  v10 = 126 - 2 * __clz(0xAAAAAAAAAAAAAAABLL * ((uint64_t)&v9[-v8] >> 3));
  v16 = a1;
  if (v9 == (unsigned __int8 *)v8)
    v11 = 0;
  else
    v11 = v10;
  sub_13C328(v8, v9, &v16, v11, 1);
}

void sub_137DDC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  sub_E3488((void ***)&__p);
  _Unwind_Resume(a1);
}

id sub_137E1C(_QWORD *a1, uint64_t *a2, _DWORD *a3)
{
  void *v5;
  void *v6;
  void *v7;
  unint64_t v8;
  unint64_t v9;
  double v10;
  void *v11;
  void *v12;
  _QWORD v14[4];
  _QWORD v15[4];

  v14[0] = CFSTR("name");
  if (*((char *)a2 + 23) < 0)
    a2 = (uint64_t *)*a2;
  v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", a2, 4));
  v15[0] = v5;
  v14[1] = CFSTR("evaluated");
  v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedLong:](NSNumber, "numberWithUnsignedLong:", *a1));
  v15[1] = v6;
  v14[2] = CFSTR("changed");
  v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedLong:](NSNumber, "numberWithUnsignedLong:", a1[1]));
  LODWORD(v8) = *a3;
  LODWORD(v9) = a3[1];
  v10 = (double)(unint64_t)a1[2] * (double)v8;
  v15[2] = v7;
  v14[3] = CFSTR("elapsedEvaluated");
  v11 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](NSNumber, "numberWithDouble:", v10 / (double)v9 / 1000000.0));
  v15[3] = v11;
  v12 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", v15, v14, 4));

  return v12;
}

void sub_137F80(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_137FBC(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v4;
  __int128 v5;
  char *v6;
  void **v7;
  unint64_t v8;
  uint64_t v9;
  id v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;

  *(_QWORD *)a2 = 0;
  *(_QWORD *)(a2 + 8) = 0;
  *(_QWORD *)(a2 + 16) = 0;
  v4 = *(uint64_t **)(a1 + 96);
  if (v4)
  {
    do
    {
      v10 = (id)v4[2];
      v5 = *(_OWORD *)(v4 + 3);
      v12 = v4[5];
      v11 = v5;
      sub_13E3E8((char **)a2, &v10);

      v4 = (uint64_t *)*v4;
    }
    while (v4);
    v6 = *(char **)a2;
    v7 = *(void ***)(a2 + 8);
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  v8 = 126 - 2 * __clz(((char *)v7 - v6) >> 3);
  v13 = a1;
  if (v7 == (void **)v6)
    v9 = 0;
  else
    v9 = v8;
  sub_13E558((unint64_t *)v6, v7, &v13, v9, 1);
}

void sub_138078(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_1404B8((void ***)va);
  _Unwind_Resume(a1);
}

id sub_1380A0(unint64_t *a1, Class aClass, _DWORD *a3)
{
  unint64_t v5;
  unint64_t v6;
  NSString *v7;
  void *v8;
  void *v9;
  unint64_t v10;
  unint64_t v11;
  void *v12;
  unint64_t v13;
  unint64_t v14;
  void *v15;
  unint64_t v16;
  unint64_t v17;
  void *v18;
  void *v19;
  _QWORD v21[5];
  _QWORD v22[5];

  v6 = *a1;
  v5 = a1[1];
  v21[0] = CFSTR("name");
  v7 = NSStringFromClass(aClass);
  v8 = (void *)objc_claimAutoreleasedReturnValue(v7);
  v22[0] = v8;
  v21[1] = CFSTR("countCompute");
  v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedLong:](NSNumber, "numberWithUnsignedLong:", *a1));
  LODWORD(v10) = *a3;
  LODWORD(v11) = a3[1];
  v22[1] = v9;
  v21[2] = CFSTR("averageDirect");
  v12 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](NSNumber, "numberWithDouble:", (double)(v5 / v6) * (double)v10 / (double)v11 / 1000000.0));
  v22[2] = v12;
  v21[3] = CFSTR("elapsedComputeDirect");
  LODWORD(v13) = *a3;
  LODWORD(v14) = a3[1];
  v15 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](NSNumber, "numberWithDouble:", (double)a1[1] * (double)v13 / (double)v14 / 1000000.0));
  v22[3] = v15;
  v21[4] = CFSTR("elapsedComputeTotal");
  LODWORD(v16) = *a3;
  LODWORD(v17) = a3[1];
  v18 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](NSNumber, "numberWithDouble:", (double)a1[2] * (double)v16 / (double)v17 / 1000000.0));
  v22[4] = v18;
  v19 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", v22, v21, 5));

  return v19;
}

void sub_138260(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  _Unwind_Resume(a1);
}

id sub_1382A8(unint64_t *a1, unint64_t a2, _DWORD *a3, double a4, double a5)
{
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  BOOL v11;
  unint64_t v12;
  unint64_t v13;
  id v14;
  void *v15;
  id v16;
  void *v17;
  id v18;
  void *v19;
  unint64_t v20;
  unint64_t v21;
  void *v22;
  unint64_t v23;
  unint64_t v24;
  void *v25;
  void *v26;
  void *__p[2];
  char v29;
  void *v30[2];
  char v31;
  _QWORD v32[5];
  _QWORD v33[5];

  v7 = a1[18];
  v8 = a1[19];
  if (v7 <= a2)
    v9 = a2 - v7;
  else
    v9 = v7 - a2;
  v10 = v8 - v7;
  v11 = v7 >= v8;
  v12 = v7 - v8;
  if (v11)
    v13 = v12;
  else
    v13 = v10;
  v32[0] = CFSTR("elapsed");
  v14 = sub_13851C(a1, a3, a4, a5);
  v15 = (void *)objc_claimAutoreleasedReturnValue(v14);
  v33[0] = v15;
  v32[1] = CFSTR("componentSummary");
  sub_9350(v30, "<all>");
  v16 = sub_13789C(a1 + 4, (uint64_t *)v30, a3);
  v17 = (void *)objc_claimAutoreleasedReturnValue(v16);
  v33[1] = v17;
  v32[2] = CFSTR("globalsSummary");
  sub_9350(__p, "<all>");
  v18 = sub_137E1C(a1 + 15, (uint64_t *)__p, a3);
  v19 = (void *)objc_claimAutoreleasedReturnValue(v18);
  LODWORD(v20) = *a3;
  LODWORD(v21) = a3[1];
  v33[2] = v19;
  v32[3] = CFSTR("total");
  v22 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](NSNumber, "numberWithDouble:", (double)v13 * (double)v20 / (double)v21 / 1000000.0));
  v33[3] = v22;
  v32[4] = CFSTR("offfset");
  LODWORD(v23) = *a3;
  LODWORD(v24) = a3[1];
  v25 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](NSNumber, "numberWithDouble:", (double)v9 * (double)v23 / (double)v24 / 1000000.0));
  v33[4] = v25;
  v26 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", v33, v32, 5));

  if (v29 < 0)
    operator delete(__p[0]);

  if (v31 < 0)
    operator delete(v30[0]);

  return v26;
}

void sub_1384A4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;

  if (a15 < 0)
    operator delete(__p);

  if (a21 < 0)
    operator delete(a16);

  _Unwind_Resume(a1);
}

id sub_13851C(unint64_t *a1, _DWORD *a2, double a3, double a4)
{
  _DWORD *v6;
  void *v7;
  unint64_t v8;
  unint64_t v9;
  double v10;
  void *v11;
  unint64_t v12;
  unint64_t v13;
  void *v14;
  unint64_t v15;
  unint64_t v16;
  void *v17;
  void *v18;
  _QWORD v20[4];
  _QWORD v21[4];

  v20[0] = CFSTR("instantiate");
  LODWORD(a4) = *a2;
  v6 = a2 + 1;
  v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](NSNumber, "numberWithDouble:", (double)*a1 * (double)*(unint64_t *)&a4 / (double)a2[1] / 1000000.0));
  v21[0] = v7;
  v20[1] = CFSTR("layout");
  LODWORD(v8) = *a2;
  *(double *)&v9 = (double)v8;
  v10 = (double)a1[1] * *(double *)&v9;
  LODWORD(v9) = *v6;
  v11 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](NSNumber, "numberWithDouble:", v10 / (double)v9 / 1000000.0));
  v21[1] = v11;
  v20[2] = CFSTR("renderModel");
  LODWORD(v12) = *a2;
  LODWORD(v13) = a2[1];
  v14 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](NSNumber, "numberWithDouble:", (double)a1[2] * (double)v12 / (double)v13 / 1000000.0));
  v21[2] = v14;
  v20[3] = CFSTR("globalsEnvironmentUpdate");
  LODWORD(v15) = *a2;
  LODWORD(v16) = a2[1];
  v17 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](NSNumber, "numberWithDouble:", (double)a1[3] * (double)v15 / (double)v16 / 1000000.0));
  v21[3] = v17;
  v18 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", v21, v20, 4));

  return v18;
}

void sub_1386D4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

uint64_t sub_138710(uint64_t *a1, __int128 *a2)
{
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  char *v10;
  char *v11;
  __int128 v12;
  uint64_t v13;
  _QWORD v15[2];
  char *v16;
  char *v17;
  uint64_t *v18;

  v3 = *a1;
  v4 = 0xAAAAAAAAAAAAAAABLL * ((a1[1] - *a1) >> 3);
  v5 = v4 + 1;
  if (v4 + 1 > 0xAAAAAAAAAAAAAAALL)
    sub_6F9C();
  v7 = (uint64_t)(a1 + 2);
  v8 = 0xAAAAAAAAAAAAAAABLL * ((a1[2] - v3) >> 3);
  if (2 * v8 > v5)
    v5 = 2 * v8;
  if (v8 >= 0x555555555555555)
    v9 = 0xAAAAAAAAAAAAAAALL;
  else
    v9 = v5;
  v18 = a1 + 2;
  if (v9)
    v10 = (char *)sub_14C10(v7, v9);
  else
    v10 = 0;
  v11 = &v10[24 * v4];
  v15[0] = v10;
  v15[1] = v11;
  v16 = v11;
  v17 = &v10[24 * v9];
  if (*((char *)a2 + 23) < 0)
  {
    sub_14998(v11, *(void **)a2, *((_QWORD *)a2 + 1));
    v11 = v16;
  }
  else
  {
    v12 = *a2;
    *((_QWORD *)v11 + 2) = *((_QWORD *)a2 + 2);
    *(_OWORD *)v11 = v12;
  }
  v16 = v11 + 24;
  sub_E4720(a1, v15);
  v13 = a1[1];
  sub_E48A8((uint64_t)v15);
  return v13;
}

void sub_13881C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_E48A8((uint64_t)va);
  _Unwind_Resume(a1);
}

double sub_138830(uint64_t a1, __int128 *a2, _QWORD **a3, uint64_t a4, char a5)
{
  char *v9;
  __int128 *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  __int128 *v16;
  uint64_t v17;
  __int128 *v18;
  __int128 *v19;
  __int128 *v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  _QWORD *v26;
  unsigned __int8 *v27;
  unsigned __int8 *v28;
  unint64_t v29;
  unint64_t v30;
  BOOL v31;
  unint64_t v32;
  unint64_t v33;
  BOOL v34;
  BOOL v35;
  uint64_t v36;
  char v37;
  BOOL v38;
  double result;
  __int128 v40;
  __int128 v41;
  _QWORD *v42;
  unsigned __int8 *v43;
  unsigned __int8 *v44;
  unint64_t v45;
  unint64_t v46;
  _BOOL4 v47;
  unint64_t v48;
  unint64_t v49;
  _BOOL4 v50;
  __int128 v51;
  __int128 v52;
  void *__p[2];
  uint64_t v54;
  void *__dst[2];
  uint64_t v56;
  void *v57[2];
  uint64_t v58;
  void *v59[2];
  uint64_t v60;
  __int128 v61;
  uint64_t v62;

void sub_138CA4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, char a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,uint64_t a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30,uint64_t a31,void *a32,uint64_t a33,int a34,__int16 a35,char a36,char a37)
{
  if (a37 < 0)
    operator delete(a32);
  _Unwind_Resume(exception_object);
}

void sub_138D08(__int128 *a1, __int128 *a2, _QWORD **a3)
{
  __int128 *v3;
  __int128 *v5;
  uint64_t v7;
  __int128 *v8;
  __int128 *v9;
  __int128 v10;
  _QWORD *v11;
  unsigned __int8 *v12;
  unsigned __int8 *v13;
  unint64_t v14;
  unint64_t v15;
  _BOOL4 v16;
  unint64_t v17;
  unint64_t v18;
  BOOL v19;
  _BOOL4 v20;
  void *v21;
  void *v22;
  int v23;
  uint64_t v24;
  void **v25;
  void **v26;
  _QWORD *v27;
  unsigned __int8 *v28;
  unsigned __int8 *v29;
  unint64_t v30;
  unint64_t v31;
  _BOOL4 v32;
  unint64_t v33;
  unint64_t v34;
  _BOOL4 v35;
  __int128 *v36;
  uint64_t v38;
  void *v39[2];
  uint64_t v40;
  void *v41[2];
  _BYTE v42[7];
  char v43;
  _DWORD v44[2];
  void *__p[2];
  uint64_t v46;
  void *__dst[2];
  uint64_t v48;

  if (a1 == a2)
    return;
  v3 = a2;
  v5 = (__int128 *)((char *)a1 + 24);
  if ((__int128 *)((char *)a1 + 24) == a2)
    return;
  v7 = 0;
  v8 = a1;
  do
  {
    v9 = v5;
    if (*((char *)v8 + 47) < 0)
    {
      sub_14998(__dst, *(void **)v5, *((_QWORD *)v8 + 4));
    }
    else
    {
      *(_OWORD *)__dst = *v5;
      v48 = *((_QWORD *)v5 + 2);
    }
    if (*((char *)v8 + 23) < 0)
    {
      sub_14998(__p, *(void **)v8, *((_QWORD *)v8 + 1));
    }
    else
    {
      v10 = *v8;
      v46 = *((_QWORD *)v8 + 2);
      *(_OWORD *)__p = v10;
    }
    v11 = *a3;
    v12 = sub_E3DB0(*a3, (unsigned __int8 *)__dst);
    v13 = sub_E3DB0(v11, (unsigned __int8 *)__p);
    v14 = *((_QWORD *)v12 + 14);
    v15 = *((_QWORD *)v13 + 14);
    v16 = v14 < v15;
    if (v14 == v15)
    {
      v17 = *((_QWORD *)v12 + 8);
      v18 = *((_QWORD *)v13 + 8);
      v19 = v17 == v18;
      v20 = v17 < v18;
      if (v19)
        v16 = v12 < v13;
      else
        v16 = v20;
    }
    if (SHIBYTE(v46) < 0)
      operator delete(__p[0]);
    if (SHIBYTE(v48) < 0)
    {
      operator delete(__dst[0]);
      if (!v16)
        goto LABEL_45;
    }
    else if (!v16)
    {
      goto LABEL_45;
    }
    v21 = *(void **)v9;
    v22 = (void *)*((_QWORD *)v8 + 4);
    v44[0] = *((_DWORD *)v8 + 10);
    *(_DWORD *)((char *)v44 + 3) = *(_DWORD *)((char *)v8 + 43);
    v23 = *((char *)v8 + 47);
    *((_QWORD *)v9 + 1) = 0;
    *((_QWORD *)v9 + 2) = 0;
    *(_QWORD *)v9 = 0;
    v38 = v7;
    while (1)
    {
      v24 = (uint64_t)a1 + v7;
      v25 = (void **)((char *)a1 + v7 + 24);
      if (*((char *)a1 + v7 + 47) < 0)
        operator delete(*v25);
      *(_OWORD *)v25 = *(_OWORD *)v24;
      *(_QWORD *)((char *)a1 + v7 + 40) = *(_QWORD *)(v24 + 16);
      *(_BYTE *)(v24 + 23) = 0;
      *(_BYTE *)v24 = 0;
      if (!v7)
      {
        v36 = a1;
        goto LABEL_44;
      }
      if (v23 < 0)
      {
        sub_14998(v41, v21, (unint64_t)v22);
      }
      else
      {
        v41[0] = v21;
        v41[1] = v22;
        *(_DWORD *)v42 = v44[0];
        *(_DWORD *)&v42[3] = *(_DWORD *)((char *)v44 + 3);
        v43 = v23;
      }
      v26 = (void **)((char *)a1 + v7 - 24);
      if (*((char *)a1 + v7 - 1) < 0)
      {
        sub_14998(v39, *v26, *(_QWORD *)((char *)a1 + v7 - 16));
      }
      else
      {
        *(_OWORD *)v39 = *(_OWORD *)v26;
        v40 = *(_QWORD *)((char *)a1 + v7 - 8);
      }
      v27 = *a3;
      v28 = sub_E3DB0(*a3, (unsigned __int8 *)v41);
      v29 = sub_E3DB0(v27, (unsigned __int8 *)v39);
      v30 = *((_QWORD *)v28 + 14);
      v31 = *((_QWORD *)v29 + 14);
      v32 = v30 < v31;
      if (v30 == v31)
      {
        v33 = *((_QWORD *)v28 + 8);
        v34 = *((_QWORD *)v29 + 8);
        v19 = v33 == v34;
        v35 = v33 < v34;
        if (v19)
          v32 = v28 < v29;
        else
          v32 = v35;
      }
      if (SHIBYTE(v40) < 0)
        operator delete(v39[0]);
      if (v43 < 0)
        break;
      if (!v32)
        goto LABEL_42;
LABEL_40:
      v7 -= 24;
    }
    operator delete(v41[0]);
    if (v32)
      goto LABEL_40;
LABEL_42:
    v36 = (__int128 *)((char *)a1 + v7);
    if (*((char *)a1 + v7 + 23) < 0)
      operator delete(*(void **)v36);
LABEL_44:
    v3 = a2;
    v7 = v38;
    *(_QWORD *)v36 = v21;
    *((_QWORD *)v36 + 1) = v22;
    *((_DWORD *)v36 + 4) = v44[0];
    *(_DWORD *)((char *)v36 + 19) = *(_DWORD *)((char *)v44 + 3);
    *((_BYTE *)v36 + 23) = v23;
LABEL_45:
    v5 = (__int128 *)((char *)v9 + 24);
    v7 += 24;
    v8 = v9;
  }
  while ((__int128 *)((char *)v9 + 24) != v3);
}

void sub_138FE0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,uint64_t a24,void *a25,uint64_t a26,int a27,__int16 a28,char a29,char a30,uint64_t a31,void *__p,uint64_t a33,int a34,__int16 a35,char a36,char a37)
{
  if (a37 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_139054(__int128 *a1, __int128 *a2, _QWORD **a3)
{
  __int128 *v3;
  __int128 *v4;
  __int128 *v5;
  _BYTE *v7;
  __int128 *v8;
  __int128 v9;
  _QWORD *v10;
  unsigned __int8 *v11;
  unsigned __int8 *v12;
  unint64_t v13;
  unint64_t v14;
  _BOOL4 v15;
  unint64_t v16;
  unint64_t v17;
  BOOL v18;
  _BOOL4 v19;
  void *v20;
  void *v21;
  int v22;
  _BYTE *v23;
  void **v24;
  _QWORD *v25;
  unsigned __int8 *v26;
  unsigned __int8 *v27;
  unint64_t v28;
  unint64_t v29;
  BOOL v30;
  unint64_t v31;
  unint64_t v32;
  BOOL v33;
  void *v35[2];
  uint64_t v36;
  void *v37[2];
  _BYTE v38[7];
  char v39;
  _DWORD v40[2];
  void *__p[2];
  uint64_t v42;
  void *__dst[2];
  uint64_t v44;

  if (a1 != a2)
  {
    v3 = a2;
    v4 = a1;
    v5 = (__int128 *)((char *)a1 + 24);
    if ((__int128 *)((char *)a1 + 24) != a2)
    {
      v7 = (char *)a1 + 47;
      do
      {
        v8 = v5;
        if (*((char *)v4 + 47) < 0)
        {
          sub_14998(__dst, *(void **)v5, *((_QWORD *)v4 + 4));
        }
        else
        {
          *(_OWORD *)__dst = *v5;
          v44 = *((_QWORD *)v5 + 2);
        }
        if (*((char *)v4 + 23) < 0)
        {
          sub_14998(__p, *(void **)v4, *((_QWORD *)v4 + 1));
        }
        else
        {
          v9 = *v4;
          v42 = *((_QWORD *)v4 + 2);
          *(_OWORD *)__p = v9;
        }
        v10 = *a3;
        v11 = sub_E3DB0(*a3, (unsigned __int8 *)__dst);
        v12 = sub_E3DB0(v10, (unsigned __int8 *)__p);
        v13 = *((_QWORD *)v11 + 14);
        v14 = *((_QWORD *)v12 + 14);
        v15 = v13 < v14;
        if (v13 == v14)
        {
          v16 = *((_QWORD *)v11 + 8);
          v17 = *((_QWORD *)v12 + 8);
          v18 = v16 == v17;
          v19 = v16 < v17;
          if (v18)
            v15 = v11 < v12;
          else
            v15 = v19;
        }
        if (SHIBYTE(v42) < 0)
          operator delete(__p[0]);
        if (SHIBYTE(v44) < 0)
        {
          operator delete(__dst[0]);
          if (v15)
          {
LABEL_20:
            v20 = *(void **)v8;
            v21 = (void *)*((_QWORD *)v4 + 4);
            v40[0] = *((_DWORD *)v4 + 10);
            *(_DWORD *)((char *)v40 + 3) = *(_DWORD *)((char *)v4 + 43);
            v22 = *((char *)v4 + 47);
            *((_QWORD *)v8 + 1) = 0;
            *((_QWORD *)v8 + 2) = 0;
            *(_QWORD *)v8 = 0;
            v23 = v7;
            do
            {
              v24 = (void **)(v23 - 23);
              if ((char)*v23 < 0)
                operator delete(*v24);
              *(_OWORD *)v24 = *(_OWORD *)(v23 - 47);
              *(_QWORD *)(v23 - 7) = *(_QWORD *)(v23 - 31);
              *(v23 - 24) = 0;
              *(v23 - 47) = 0;
              if (v22 < 0)
              {
                sub_14998(v37, v20, (unint64_t)v21);
              }
              else
              {
                v37[0] = v20;
                v37[1] = v21;
                *(_DWORD *)v38 = v40[0];
                *(_DWORD *)&v38[3] = *(_DWORD *)((char *)v40 + 3);
                v39 = v22;
              }
              if ((char)*(v23 - 48) < 0)
              {
                sub_14998(v35, *(void **)(v23 - 71), *(_QWORD *)(v23 - 63));
              }
              else
              {
                *(_OWORD *)v35 = *(_OWORD *)(v23 - 71);
                v36 = *(_QWORD *)(v23 - 55);
              }
              v25 = *a3;
              v26 = sub_E3DB0(*a3, (unsigned __int8 *)v37);
              v27 = sub_E3DB0(v25, (unsigned __int8 *)v35);
              v28 = *((_QWORD *)v26 + 14);
              v29 = *((_QWORD *)v27 + 14);
              v30 = v28 < v29;
              if (v28 == v29)
              {
                v31 = *((_QWORD *)v26 + 8);
                v32 = *((_QWORD *)v27 + 8);
                v18 = v31 == v32;
                v33 = v31 < v32;
                if (v18)
                  v30 = v26 < v27;
                else
                  v30 = v33;
              }
              if (SHIBYTE(v36) < 0)
                operator delete(v35[0]);
              if (v39 < 0)
                operator delete(v37[0]);
              v23 -= 24;
            }
            while (v30);
            if ((char)*v23 < 0)
              operator delete(*(void **)(v23 - 23));
            *(_QWORD *)(v23 - 23) = v20;
            *(_QWORD *)(v23 - 15) = v21;
            *(_DWORD *)(v23 - 7) = v40[0];
            *((_DWORD *)v23 - 1) = *(_DWORD *)((char *)v40 + 3);
            *v23 = v22;
            v3 = a2;
          }
        }
        else if (v15)
        {
          goto LABEL_20;
        }
        v5 = (__int128 *)((char *)v8 + 24);
        v7 += 24;
        v4 = v8;
      }
      while ((__int128 *)((char *)v8 + 24) != v3);
    }
  }
}

void sub_13930C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,uint64_t a24,void *a25,uint64_t a26,int a27,__int16 a28,char a29,char a30,uint64_t a31,void *__p,uint64_t a33,int a34,__int16 a35,char a36,char a37)
{
  if (a37 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_139380(__int128 *a1, __int128 *a2, __int128 *a3, _QWORD **a4)
{
  _QWORD *v8;
  unsigned __int8 *v9;
  unsigned __int8 *v10;
  unint64_t v11;
  unint64_t v12;
  BOOL v13;
  unint64_t v14;
  unint64_t v15;
  BOOL v16;
  BOOL v17;
  int v18;
  _QWORD *v19;
  unsigned __int8 *v20;
  unsigned __int8 *v21;
  unint64_t v22;
  unint64_t v23;
  _BOOL4 v24;
  unint64_t v25;
  unint64_t v26;
  _BOOL4 v27;
  uint64_t v28;
  __int128 v29;
  uint64_t v30;
  _QWORD *v31;
  unsigned __int8 *v32;
  unsigned __int8 *v33;
  unint64_t v34;
  unint64_t v35;
  BOOL v36;
  unint64_t v37;
  unint64_t v38;
  BOOL v39;
  uint64_t v40;
  __int128 v41;
  uint64_t v42;
  uint64_t v43;
  __int128 v44;
  uint64_t v45;
  _QWORD *v47;
  unsigned __int8 *v48;
  unsigned __int8 *v49;
  unint64_t v50;
  unint64_t v51;
  _BOOL4 v52;
  unint64_t v53;
  unint64_t v54;
  _BOOL4 v55;
  _QWORD *v56;
  unsigned __int8 *v57;
  unsigned __int8 *v58;
  unint64_t v59;
  unint64_t v60;
  _BOOL4 v61;
  unint64_t v62;
  unint64_t v63;
  _BOOL4 v64;
  uint64_t v65;
  __int128 v66;
  uint64_t v67;
  uint64_t v68;
  __int128 v69;
  uint64_t v70;
  void *v71[2];
  uint64_t v72;
  void *v73[2];
  uint64_t v74;
  void *v75[2];
  uint64_t v76;
  void *v77[2];
  uint64_t v78;
  void *v79[2];
  uint64_t v80;
  void *v81[2];
  uint64_t v82;
  void *v83[2];
  uint64_t v84;
  void *v85[2];
  uint64_t v86;
  void *__p[2];
  uint64_t v88;
  __int128 __dst;
  uint64_t v90;

  if (*((char *)a2 + 23) < 0)
  {
    sub_14998(&__dst, *(void **)a2, *((_QWORD *)a2 + 1));
  }
  else
  {
    __dst = *a2;
    v90 = *((_QWORD *)a2 + 2);
  }
  if (*((char *)a1 + 23) < 0)
  {
    sub_14998(__p, *(void **)a1, *((_QWORD *)a1 + 1));
  }
  else
  {
    *(_OWORD *)__p = *a1;
    v88 = *((_QWORD *)a1 + 2);
  }
  v8 = *a4;
  v9 = sub_E3DB0(*a4, (unsigned __int8 *)&__dst);
  v10 = sub_E3DB0(v8, (unsigned __int8 *)__p);
  v11 = *((_QWORD *)v9 + 14);
  v12 = *((_QWORD *)v10 + 14);
  v13 = v11 < v12;
  if (v11 == v12)
  {
    v14 = *((_QWORD *)v9 + 8);
    v15 = *((_QWORD *)v10 + 8);
    v16 = v14 == v15;
    v17 = v14 < v15;
    if (v16)
      v13 = v9 < v10;
    else
      v13 = v17;
  }
  if (SHIBYTE(v88) < 0)
    operator delete(__p[0]);
  if (SHIBYTE(v90) < 0)
    operator delete((void *)__dst);
  v18 = *((char *)a3 + 23);
  if (!v13)
  {
    if (v18 < 0)
    {
      sub_14998(v85, *(void **)a3, *((_QWORD *)a3 + 1));
    }
    else
    {
      *(_OWORD *)v85 = *a3;
      v86 = *((_QWORD *)a3 + 2);
    }
    if (*((char *)a2 + 23) < 0)
    {
      sub_14998(v83, *(void **)a2, *((_QWORD *)a2 + 1));
    }
    else
    {
      *(_OWORD *)v83 = *a2;
      v84 = *((_QWORD *)a2 + 2);
    }
    v31 = *a4;
    v32 = sub_E3DB0(*a4, (unsigned __int8 *)v85);
    v33 = sub_E3DB0(v31, (unsigned __int8 *)v83);
    v34 = *((_QWORD *)v32 + 14);
    v35 = *((_QWORD *)v33 + 14);
    v36 = v34 < v35;
    if (v34 == v35)
    {
      v37 = *((_QWORD *)v32 + 8);
      v38 = *((_QWORD *)v33 + 8);
      v16 = v37 == v38;
      v39 = v37 < v38;
      if (v16)
        v36 = v32 < v33;
      else
        v36 = v39;
    }
    if (SHIBYTE(v84) < 0)
      operator delete(v83[0]);
    if (SHIBYTE(v86) < 0)
    {
      operator delete(v85[0]);
      if (v36)
        goto LABEL_45;
    }
    else if (v36)
    {
LABEL_45:
      v40 = *((_QWORD *)a2 + 2);
      v41 = *a2;
      v42 = *((_QWORD *)a3 + 2);
      *a2 = *a3;
      *((_QWORD *)a2 + 2) = v42;
      *a3 = v41;
      *((_QWORD *)a3 + 2) = v40;
      if (*((char *)a2 + 23) < 0)
      {
        sub_14998(v81, *(void **)a2, *((_QWORD *)a2 + 1));
      }
      else
      {
        *(_OWORD *)v81 = *a2;
        v82 = *((_QWORD *)a2 + 2);
      }
      if (*((char *)a1 + 23) < 0)
      {
        sub_14998(v79, *(void **)a1, *((_QWORD *)a1 + 1));
      }
      else
      {
        *(_OWORD *)v79 = *a1;
        v80 = *((_QWORD *)a1 + 2);
      }
      v47 = *a4;
      v48 = sub_E3DB0(v47, (unsigned __int8 *)v81);
      v49 = sub_E3DB0(v47, (unsigned __int8 *)v79);
      v50 = *((_QWORD *)v48 + 14);
      v51 = *((_QWORD *)v49 + 14);
      v52 = v50 < v51;
      if (v50 == v51)
      {
        v53 = *((_QWORD *)v48 + 8);
        v54 = *((_QWORD *)v49 + 8);
        v16 = v53 == v54;
        v55 = v53 < v54;
        if (v16)
          v52 = v48 < v49;
        else
          v52 = v55;
      }
      if (SHIBYTE(v80) < 0)
        operator delete(v79[0]);
      if (SHIBYTE(v82) < 0)
      {
        operator delete(v81[0]);
        if (!v52)
          return 1;
      }
      else if (!v52)
      {
        return 1;
      }
      v65 = *((_QWORD *)a1 + 2);
      v66 = *a1;
      v67 = *((_QWORD *)a2 + 2);
      *a1 = *a2;
      *((_QWORD *)a1 + 2) = v67;
      *a2 = v66;
      *((_QWORD *)a2 + 2) = v65;
      return 2;
    }
    return 0;
  }
  if (v18 < 0)
  {
    sub_14998(v77, *(void **)a3, *((_QWORD *)a3 + 1));
  }
  else
  {
    *(_OWORD *)v77 = *a3;
    v78 = *((_QWORD *)a3 + 2);
  }
  if (*((char *)a2 + 23) < 0)
  {
    sub_14998(v75, *(void **)a2, *((_QWORD *)a2 + 1));
  }
  else
  {
    *(_OWORD *)v75 = *a2;
    v76 = *((_QWORD *)a2 + 2);
  }
  v19 = *a4;
  v20 = sub_E3DB0(*a4, (unsigned __int8 *)v77);
  v21 = sub_E3DB0(v19, (unsigned __int8 *)v75);
  v22 = *((_QWORD *)v20 + 14);
  v23 = *((_QWORD *)v21 + 14);
  v24 = v22 < v23;
  if (v22 == v23)
  {
    v25 = *((_QWORD *)v20 + 8);
    v26 = *((_QWORD *)v21 + 8);
    v16 = v25 == v26;
    v27 = v25 < v26;
    if (v16)
      v24 = v20 < v21;
    else
      v24 = v27;
  }
  if (SHIBYTE(v76) < 0)
    operator delete(v75[0]);
  if (SHIBYTE(v78) < 0)
  {
    operator delete(v77[0]);
    if (v24)
      goto LABEL_35;
    goto LABEL_48;
  }
  if (!v24)
  {
LABEL_48:
    v43 = *((_QWORD *)a1 + 2);
    v44 = *a1;
    v45 = *((_QWORD *)a2 + 2);
    *a1 = *a2;
    *((_QWORD *)a1 + 2) = v45;
    *a2 = v44;
    *((_QWORD *)a2 + 2) = v43;
    if (*((char *)a3 + 23) < 0)
    {
      sub_14998(v73, *(void **)a3, *((_QWORD *)a3 + 1));
    }
    else
    {
      *(_OWORD *)v73 = *a3;
      v74 = *((_QWORD *)a3 + 2);
    }
    if (*((char *)a2 + 23) < 0)
    {
      sub_14998(v71, *(void **)a2, *((_QWORD *)a2 + 1));
    }
    else
    {
      *(_OWORD *)v71 = *a2;
      v72 = *((_QWORD *)a2 + 2);
    }
    v56 = *a4;
    v57 = sub_E3DB0(v56, (unsigned __int8 *)v73);
    v58 = sub_E3DB0(v56, (unsigned __int8 *)v71);
    v59 = *((_QWORD *)v57 + 14);
    v60 = *((_QWORD *)v58 + 14);
    v61 = v59 < v60;
    if (v59 == v60)
    {
      v62 = *((_QWORD *)v57 + 8);
      v63 = *((_QWORD *)v58 + 8);
      v16 = v62 == v63;
      v64 = v62 < v63;
      if (v16)
        v61 = v57 < v58;
      else
        v61 = v64;
    }
    if (SHIBYTE(v72) < 0)
      operator delete(v71[0]);
    if (SHIBYTE(v74) < 0)
    {
      operator delete(v73[0]);
      if (!v61)
        return 1;
    }
    else if (!v61)
    {
      return 1;
    }
    v68 = *((_QWORD *)a2 + 2);
    v69 = *a2;
    v70 = *((_QWORD *)a3 + 2);
    *a2 = *a3;
    *((_QWORD *)a2 + 2) = v70;
    *a3 = v69;
    *((_QWORD *)a3 + 2) = v68;
    return 2;
  }
LABEL_35:
  v28 = *((_QWORD *)a1 + 2);
  v29 = *a1;
  v30 = *((_QWORD *)a3 + 2);
  *a1 = *a3;
  *((_QWORD *)a1 + 2) = v30;
  *a3 = v29;
  *((_QWORD *)a3 + 2) = v28;
  return 1;
}

void sub_13986C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *__p, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  if (a18 < 0)
    operator delete(a13);
  _Unwind_Resume(a1);
}

__int128 *sub_139954(__int128 *a1, void **a2, _QWORD **a3)
{
  void *v6;
  void *v7;
  int v8;
  _QWORD *v9;
  unsigned __int8 *v10;
  unsigned __int8 *v11;
  unint64_t v12;
  unint64_t v13;
  BOOL v14;
  unint64_t v15;
  unint64_t v16;
  BOOL v17;
  BOOL v18;
  __int128 *v19;
  __int128 *i;
  _QWORD *v21;
  unsigned __int8 *v22;
  unsigned __int8 *v23;
  unint64_t v24;
  unint64_t v25;
  BOOL v26;
  unint64_t v27;
  unint64_t v28;
  BOOL v29;
  _QWORD *v30;
  unsigned __int8 *v31;
  unsigned __int8 *v32;
  unint64_t v33;
  unint64_t v34;
  BOOL v35;
  unint64_t v36;
  unint64_t v37;
  BOOL v38;
  void **v39;
  _QWORD *v40;
  unsigned __int8 *v41;
  unsigned __int8 *v42;
  unint64_t v43;
  unint64_t v44;
  BOOL v45;
  unint64_t v46;
  unint64_t v47;
  BOOL v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 *v52;
  __int128 v53;
  _QWORD *v54;
  unsigned __int8 *v55;
  unsigned __int8 *v56;
  unint64_t v57;
  unint64_t v58;
  _BOOL4 v59;
  unint64_t v60;
  unint64_t v61;
  _BOOL4 v62;
  void **v63;
  __int128 v64;
  _QWORD *v65;
  unsigned __int8 *v66;
  unsigned __int8 *v67;
  unint64_t v68;
  unint64_t v69;
  BOOL v70;
  unint64_t v71;
  unint64_t v72;
  BOOL v73;
  void **v74;
  __int128 v75;
  int v76;
  __int128 *v78;
  void *v79[2];
  uint64_t v80;
  void *v81[2];
  _BYTE v82[7];
  char v83;
  void *v84[2];
  uint64_t v85;
  void *v86[2];
  _BYTE v87[7];
  char v88;
  void *v89[2];
  uint64_t v90;
  void *v91[2];
  _BYTE v92[7];
  char v93;
  void *v94[2];
  uint64_t v95;
  void *v96[2];
  _BYTE v97[7];
  char v98;
  void *__p[2];
  uint64_t v100;
  void *v101[2];
  _BYTE v102[7];
  char v103;
  __int128 v104;
  uint64_t v105;
  void *__dst[2];
  _BYTE v107[7];
  char v108;
  _DWORD v109[2];
  __int128 v110;
  void *v111;

  v6 = *(void **)a1;
  v7 = (void *)*((_QWORD *)a1 + 1);
  v109[0] = *((_DWORD *)a1 + 4);
  *(_DWORD *)((char *)v109 + 3) = *(_DWORD *)((char *)a1 + 19);
  v8 = *((char *)a1 + 23);
  *((_QWORD *)a1 + 1) = 0;
  *((_QWORD *)a1 + 2) = 0;
  *(_QWORD *)a1 = 0;
  if (v8 < 0)
  {
    sub_14998(__dst, v6, (unint64_t)v7);
  }
  else
  {
    __dst[0] = v6;
    __dst[1] = v7;
    *(_DWORD *)v107 = v109[0];
    *(_DWORD *)&v107[3] = *(_DWORD *)((char *)v109 + 3);
    v108 = v8;
  }
  if (*((char *)a2 - 1) < 0)
  {
    sub_14998(&v104, *(a2 - 3), (unint64_t)*(a2 - 2));
  }
  else
  {
    v104 = *(_OWORD *)(a2 - 3);
    v105 = (uint64_t)*(a2 - 1);
  }
  v9 = *a3;
  v10 = sub_E3DB0(*a3, (unsigned __int8 *)__dst);
  v11 = sub_E3DB0(v9, (unsigned __int8 *)&v104);
  v12 = *((_QWORD *)v10 + 14);
  v13 = *((_QWORD *)v11 + 14);
  v14 = v12 < v13;
  if (v12 == v13)
  {
    v15 = *((_QWORD *)v10 + 8);
    v16 = *((_QWORD *)v11 + 8);
    v17 = v15 == v16;
    v18 = v15 < v16;
    if (v17)
      v14 = v10 < v11;
    else
      v14 = v18;
  }
  if (SHIBYTE(v105) < 0)
    operator delete((void *)v104);
  if (v108 < 0)
    operator delete(__dst[0]);
  v78 = a1;
  if (v14)
  {
    v19 = a1;
    do
    {
      if (v8 < 0)
      {
        sub_14998(v101, v6, (unint64_t)v7);
      }
      else
      {
        v101[0] = v6;
        v101[1] = v7;
        *(_DWORD *)v102 = v109[0];
        *(_DWORD *)&v102[3] = *(_DWORD *)((char *)v109 + 3);
        v103 = v8;
      }
      i = (__int128 *)((char *)v19 + 24);
      if (*((char *)v19 + 47) < 0)
      {
        sub_14998(__p, *((void **)v19 + 3), *((_QWORD *)v19 + 4));
      }
      else
      {
        *(_OWORD *)__p = *i;
        v100 = *((_QWORD *)v19 + 5);
      }
      v21 = *a3;
      v22 = sub_E3DB0(*a3, (unsigned __int8 *)v101);
      v23 = sub_E3DB0(v21, (unsigned __int8 *)__p);
      v24 = *((_QWORD *)v22 + 14);
      v25 = *((_QWORD *)v23 + 14);
      v26 = v24 < v25;
      if (v24 == v25)
      {
        v27 = *((_QWORD *)v22 + 8);
        v28 = *((_QWORD *)v23 + 8);
        v17 = v27 == v28;
        v29 = v27 < v28;
        if (v17)
          v26 = v22 < v23;
        else
          v26 = v29;
      }
      if (SHIBYTE(v100) < 0)
        operator delete(__p[0]);
      if (v103 < 0)
        operator delete(v101[0]);
      v19 = i;
    }
    while (!v26);
  }
  else
  {
    for (i = (__int128 *)((char *)a1 + 24); i < (__int128 *)a2; i = (__int128 *)((char *)i + 24))
    {
      if (v8 < 0)
      {
        sub_14998(v96, v6, (unint64_t)v7);
      }
      else
      {
        v96[0] = v6;
        v96[1] = v7;
        *(_DWORD *)v97 = v109[0];
        *(_DWORD *)&v97[3] = *(_DWORD *)((char *)v109 + 3);
        v98 = v8;
      }
      if (*((char *)i + 23) < 0)
      {
        sub_14998(v94, *(void **)i, *((_QWORD *)i + 1));
      }
      else
      {
        *(_OWORD *)v94 = *i;
        v95 = *((_QWORD *)i + 2);
      }
      v30 = *a3;
      v31 = sub_E3DB0(*a3, (unsigned __int8 *)v96);
      v32 = sub_E3DB0(v30, (unsigned __int8 *)v94);
      v33 = *((_QWORD *)v31 + 14);
      v34 = *((_QWORD *)v32 + 14);
      v35 = v33 < v34;
      if (v33 == v34)
      {
        v36 = *((_QWORD *)v31 + 8);
        v37 = *((_QWORD *)v32 + 8);
        v17 = v36 == v37;
        v38 = v36 < v37;
        if (v17)
          v35 = v31 < v32;
        else
          v35 = v38;
      }
      if (SHIBYTE(v95) < 0)
        operator delete(v94[0]);
      if (v98 < 0)
        operator delete(v96[0]);
      if (v35)
        break;
    }
  }
  if (i >= (__int128 *)a2)
  {
    v39 = a2;
  }
  else
  {
    do
    {
      if (v8 < 0)
      {
        sub_14998(v91, v6, (unint64_t)v7);
      }
      else
      {
        v91[0] = v6;
        v91[1] = v7;
        *(_DWORD *)v92 = v109[0];
        *(_DWORD *)&v92[3] = *(_DWORD *)((char *)v109 + 3);
        v93 = v8;
      }
      v39 = a2 - 3;
      if (*((char *)a2 - 1) < 0)
      {
        sub_14998(v89, *(a2 - 3), (unint64_t)*(a2 - 2));
      }
      else
      {
        *(_OWORD *)v89 = *(_OWORD *)v39;
        v90 = (uint64_t)*(a2 - 1);
      }
      v40 = *a3;
      v41 = sub_E3DB0(*a3, (unsigned __int8 *)v91);
      v42 = sub_E3DB0(v40, (unsigned __int8 *)v89);
      v43 = *((_QWORD *)v41 + 14);
      v44 = *((_QWORD *)v42 + 14);
      v45 = v43 < v44;
      if (v43 == v44)
      {
        v46 = *((_QWORD *)v41 + 8);
        v47 = *((_QWORD *)v42 + 8);
        v17 = v46 == v47;
        v48 = v46 < v47;
        if (v17)
          v45 = v41 < v42;
        else
          v45 = v48;
      }
      if (SHIBYTE(v90) < 0)
        operator delete(v89[0]);
      if (v93 < 0)
        operator delete(v91[0]);
      a2 = v39;
    }
    while (v45);
  }
  while (i < (__int128 *)v39)
  {
    v49 = *i;
    v111 = (void *)*((_QWORD *)i + 2);
    v110 = v49;
    v50 = *(_OWORD *)v39;
    *((_QWORD *)i + 2) = v39[2];
    *i = v50;
    v51 = v110;
    v39[2] = v111;
    *(_OWORD *)v39 = v51;
    v52 = i;
    do
    {
      if (v8 < 0)
      {
        sub_14998(v86, v6, (unint64_t)v7);
      }
      else
      {
        v86[0] = v6;
        v86[1] = v7;
        *(_DWORD *)v87 = v109[0];
        *(_DWORD *)&v87[3] = *(_DWORD *)((char *)v109 + 3);
        v88 = v8;
      }
      i = (__int128 *)((char *)v52 + 24);
      if (*((char *)v52 + 47) < 0)
      {
        sub_14998(v84, *((void **)v52 + 3), *((_QWORD *)v52 + 4));
      }
      else
      {
        v53 = *i;
        v85 = *((_QWORD *)v52 + 5);
        *(_OWORD *)v84 = v53;
      }
      v54 = *a3;
      v55 = sub_E3DB0(*a3, (unsigned __int8 *)v86);
      v56 = sub_E3DB0(v54, (unsigned __int8 *)v84);
      v57 = *((_QWORD *)v55 + 14);
      v58 = *((_QWORD *)v56 + 14);
      v59 = v57 < v58;
      if (v57 == v58)
      {
        v60 = *((_QWORD *)v55 + 8);
        v61 = *((_QWORD *)v56 + 8);
        v17 = v60 == v61;
        v62 = v60 < v61;
        if (v17)
          v59 = v55 < v56;
        else
          v59 = v62;
      }
      if (SHIBYTE(v85) < 0)
        operator delete(v84[0]);
      if (v88 < 0)
        operator delete(v86[0]);
      v52 = i;
    }
    while (!v59);
    v63 = v39;
    do
    {
      if (v8 < 0)
      {
        sub_14998(v81, v6, (unint64_t)v7);
      }
      else
      {
        v81[0] = v6;
        v81[1] = v7;
        *(_DWORD *)v82 = v109[0];
        *(_DWORD *)&v82[3] = *(_DWORD *)((char *)v109 + 3);
        v83 = v8;
      }
      v39 = v63 - 3;
      if (*((char *)v63 - 1) < 0)
      {
        sub_14998(v79, *(v63 - 3), (unint64_t)*(v63 - 2));
      }
      else
      {
        v64 = *(_OWORD *)v39;
        v80 = (uint64_t)*(v63 - 1);
        *(_OWORD *)v79 = v64;
      }
      v65 = *a3;
      v66 = sub_E3DB0(*a3, (unsigned __int8 *)v81);
      v67 = sub_E3DB0(v65, (unsigned __int8 *)v79);
      v68 = *((_QWORD *)v66 + 14);
      v69 = *((_QWORD *)v67 + 14);
      v70 = v68 < v69;
      if (v68 == v69)
      {
        v71 = *((_QWORD *)v66 + 8);
        v72 = *((_QWORD *)v67 + 8);
        v17 = v71 == v72;
        v73 = v71 < v72;
        if (v17)
          v70 = v66 < v67;
        else
          v70 = v73;
      }
      if (SHIBYTE(v80) < 0)
        operator delete(v79[0]);
      if (v83 < 0)
        operator delete(v81[0]);
      v63 = v39;
    }
    while (v70);
  }
  v74 = (void **)i - 3;
  if ((__int128 *)((char *)i - 24) == v78)
  {
    if (*((char *)i - 1) < 0)
      operator delete(*v74);
  }
  else
  {
    if (*((char *)v78 + 23) < 0)
      operator delete(*(void **)v78);
    v75 = *(_OWORD *)v74;
    *((_QWORD *)v78 + 2) = *((_QWORD *)i - 1);
    *v78 = v75;
    *((_BYTE *)i - 1) = 0;
    *((_BYTE *)i - 24) = 0;
  }
  *((_QWORD *)i - 3) = v6;
  *((_QWORD *)i - 2) = v7;
  v76 = v109[0];
  *(_DWORD *)((char *)i - 5) = *(_DWORD *)((char *)v109 + 3);
  *((_DWORD *)i - 2) = v76;
  *((_BYTE *)i - 1) = v8;
  return i;
}

void sub_139FCC(_Unwind_Exception *a1)
{
  void *v1;
  int v2;
  uint64_t v3;

  if (*(char *)(v3 - 137) < 0)
    operator delete(*(void **)(v3 - 160));
  if (v2 < 0)
    operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_13A108(uint64_t a1, void **a2, _QWORD **a3)
{
  uint64_t v6;
  void *v7;
  void *v8;
  int v9;
  void **v10;
  _QWORD *v11;
  unsigned __int8 *v12;
  unsigned __int8 *v13;
  unint64_t v14;
  unint64_t v15;
  BOOL v16;
  unint64_t v17;
  unint64_t v18;
  BOOL v19;
  BOOL v20;
  __int128 *v21;
  void **i;
  _QWORD *v23;
  unsigned __int8 *v24;
  unsigned __int8 *v25;
  unint64_t v26;
  unint64_t v27;
  BOOL v28;
  unint64_t v29;
  unint64_t v30;
  BOOL v31;
  _QWORD *v32;
  unsigned __int8 *v33;
  unsigned __int8 *v34;
  unint64_t v35;
  unint64_t v36;
  BOOL v37;
  unint64_t v38;
  unint64_t v39;
  BOOL v40;
  char v41;
  __int128 v42;
  void *v43;
  void *v44;
  __int128 *v45;
  __int128 v46;
  _QWORD *v47;
  unsigned __int8 *v48;
  unsigned __int8 *v49;
  unint64_t v50;
  unint64_t v51;
  BOOL v52;
  unint64_t v53;
  unint64_t v54;
  BOOL v55;
  void **v56;
  __int128 v57;
  _QWORD *v58;
  unsigned __int8 *v59;
  unsigned __int8 *v60;
  unint64_t v61;
  unint64_t v62;
  _BOOL4 v63;
  unint64_t v64;
  unint64_t v65;
  _BOOL4 v66;
  void **v67;
  __int128 v68;
  int v69;
  void *v71[2];
  _BYTE v72[7];
  char v73;
  void *v74[2];
  uint64_t v75;
  void *v76[2];
  _BYTE v77[7];
  char v78;
  void *v79[2];
  uint64_t v80;
  void *__p[2];
  _BYTE v82[7];
  char v83;
  void *v84[2];
  uint64_t v85;
  void *v86[2];
  _BYTE v87[7];
  char v88;
  __int128 v89;
  void *v90;
  void *v91[2];
  _BYTE v92[7];
  char v93;
  __int128 __dst;
  uint64_t v95;
  _DWORD v96[2];
  __int128 v97;
  void *v98;

  v6 = 0;
  v7 = *(void **)a1;
  v8 = *(void **)(a1 + 8);
  v96[0] = *(_DWORD *)(a1 + 16);
  *(_DWORD *)((char *)v96 + 3) = *(_DWORD *)(a1 + 19);
  v9 = *(char *)(a1 + 23);
  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)a1 = 0;
  do
  {
    v10 = (void **)(a1 + v6 + 24);
    if (*(char *)(a1 + v6 + 47) < 0)
    {
      sub_14998(&__dst, *v10, *(_QWORD *)(a1 + v6 + 32));
    }
    else
    {
      __dst = *(_OWORD *)v10;
      v95 = *(_QWORD *)(a1 + v6 + 40);
    }
    if (v9 < 0)
    {
      sub_14998(v91, v7, (unint64_t)v8);
    }
    else
    {
      v91[0] = v7;
      v91[1] = v8;
      *(_DWORD *)v92 = v96[0];
      *(_DWORD *)&v92[3] = *(_DWORD *)((char *)v96 + 3);
      v93 = v9;
    }
    v11 = *a3;
    v12 = sub_E3DB0(*a3, (unsigned __int8 *)&__dst);
    v13 = sub_E3DB0(v11, (unsigned __int8 *)v91);
    v14 = *((_QWORD *)v12 + 14);
    v15 = *((_QWORD *)v13 + 14);
    v16 = v14 < v15;
    if (v14 == v15)
    {
      v17 = *((_QWORD *)v12 + 8);
      v18 = *((_QWORD *)v13 + 8);
      v19 = v17 == v18;
      v20 = v17 < v18;
      if (v19)
        v16 = v12 < v13;
      else
        v16 = v20;
    }
    if (v93 < 0)
      operator delete(v91[0]);
    if (SHIBYTE(v95) < 0)
      operator delete((void *)__dst);
    v6 += 24;
  }
  while (v16);
  v21 = (__int128 *)(a1 + v6);
  if (v6 == 24)
  {
    if (v21 >= (__int128 *)a2)
    {
      i = a2;
    }
    else
    {
      for (i = a2 - 3; ; i -= 3)
      {
        if (*((char *)i + 23) < 0)
        {
          sub_14998(&v89, *i, (unint64_t)i[1]);
        }
        else
        {
          v89 = *(_OWORD *)i;
          v90 = i[2];
        }
        if (v9 < 0)
        {
          sub_14998(v86, v7, (unint64_t)v8);
        }
        else
        {
          v86[0] = v7;
          v86[1] = v8;
          *(_DWORD *)v87 = v96[0];
          *(_DWORD *)&v87[3] = *(_DWORD *)((char *)v96 + 3);
          v88 = v9;
        }
        v32 = *a3;
        v33 = sub_E3DB0(*a3, (unsigned __int8 *)&v89);
        v34 = sub_E3DB0(v32, (unsigned __int8 *)v86);
        v35 = *((_QWORD *)v33 + 14);
        v36 = *((_QWORD *)v34 + 14);
        v37 = v35 < v36;
        if (v35 == v36)
        {
          v38 = *((_QWORD *)v33 + 8);
          v39 = *((_QWORD *)v34 + 8);
          v19 = v38 == v39;
          v40 = v38 < v39;
          if (v19)
            v37 = v33 < v34;
          else
            v37 = v40;
        }
        if (v88 < 0)
          operator delete(v86[0]);
        if (SHIBYTE(v90) < 0)
          operator delete((void *)v89);
        v41 = v21 >= (__int128 *)i || v37;
        if ((v41 & 1) != 0)
          break;
      }
    }
  }
  else
  {
    do
    {
      i = a2 - 3;
      if (*((char *)a2 - 1) < 0)
      {
        sub_14998(v84, *(a2 - 3), (unint64_t)*(a2 - 2));
      }
      else
      {
        *(_OWORD *)v84 = *(_OWORD *)i;
        v85 = (uint64_t)*(a2 - 1);
      }
      if (v9 < 0)
      {
        sub_14998(__p, v7, (unint64_t)v8);
      }
      else
      {
        __p[0] = v7;
        __p[1] = v8;
        *(_DWORD *)v82 = v96[0];
        *(_DWORD *)&v82[3] = *(_DWORD *)((char *)v96 + 3);
        v83 = v9;
      }
      v23 = *a3;
      v24 = sub_E3DB0(*a3, (unsigned __int8 *)v84);
      v25 = sub_E3DB0(v23, (unsigned __int8 *)__p);
      v26 = *((_QWORD *)v24 + 14);
      v27 = *((_QWORD *)v25 + 14);
      v28 = v26 < v27;
      if (v26 == v27)
      {
        v29 = *((_QWORD *)v24 + 8);
        v30 = *((_QWORD *)v25 + 8);
        v19 = v29 == v30;
        v31 = v29 < v30;
        if (v19)
          v28 = v24 < v25;
        else
          v28 = v31;
      }
      if (v83 < 0)
        operator delete(__p[0]);
      if (SHIBYTE(v85) < 0)
        operator delete(v84[0]);
      a2 = i;
    }
    while (!v28);
  }
  while (v21 < (__int128 *)i)
  {
    v97 = *v21;
    v42 = v97;
    v98 = (void *)*((_QWORD *)v21 + 2);
    v43 = v98;
    v44 = i[2];
    *v21 = *(_OWORD *)i;
    *((_QWORD *)v21 + 2) = v44;
    i[2] = v43;
    *(_OWORD *)i = v42;
    v45 = v21;
    do
    {
      v21 = (__int128 *)((char *)v45 + 24);
      if (*((char *)v45 + 47) < 0)
      {
        sub_14998(v79, *((void **)v45 + 3), *((_QWORD *)v45 + 4));
      }
      else
      {
        v46 = *v21;
        v80 = *((_QWORD *)v45 + 5);
        *(_OWORD *)v79 = v46;
      }
      if (v9 < 0)
      {
        sub_14998(v76, v7, (unint64_t)v8);
      }
      else
      {
        v76[0] = v7;
        v76[1] = v8;
        *(_DWORD *)v77 = v96[0];
        *(_DWORD *)&v77[3] = *(_DWORD *)((char *)v96 + 3);
        v78 = v9;
      }
      v47 = *a3;
      v48 = sub_E3DB0(*a3, (unsigned __int8 *)v79);
      v49 = sub_E3DB0(v47, (unsigned __int8 *)v76);
      v50 = *((_QWORD *)v48 + 14);
      v51 = *((_QWORD *)v49 + 14);
      v52 = v50 < v51;
      if (v50 == v51)
      {
        v53 = *((_QWORD *)v48 + 8);
        v54 = *((_QWORD *)v49 + 8);
        v19 = v53 == v54;
        v55 = v53 < v54;
        if (v19)
          v52 = v48 < v49;
        else
          v52 = v55;
      }
      if (v78 < 0)
        operator delete(v76[0]);
      if (SHIBYTE(v80) < 0)
        operator delete(v79[0]);
      v45 = v21;
    }
    while (v52);
    v56 = i;
    do
    {
      i = v56 - 3;
      if (*((char *)v56 - 1) < 0)
      {
        sub_14998(v74, *(v56 - 3), (unint64_t)*(v56 - 2));
      }
      else
      {
        v57 = *(_OWORD *)i;
        v75 = (uint64_t)*(v56 - 1);
        *(_OWORD *)v74 = v57;
      }
      if (v9 < 0)
      {
        sub_14998(v71, v7, (unint64_t)v8);
      }
      else
      {
        v71[0] = v7;
        v71[1] = v8;
        *(_DWORD *)v72 = v96[0];
        *(_DWORD *)&v72[3] = *(_DWORD *)((char *)v96 + 3);
        v73 = v9;
      }
      v58 = *a3;
      v59 = sub_E3DB0(*a3, (unsigned __int8 *)v74);
      v60 = sub_E3DB0(v58, (unsigned __int8 *)v71);
      v61 = *((_QWORD *)v59 + 14);
      v62 = *((_QWORD *)v60 + 14);
      v63 = v61 < v62;
      if (v61 == v62)
      {
        v64 = *((_QWORD *)v59 + 8);
        v65 = *((_QWORD *)v60 + 8);
        v19 = v64 == v65;
        v66 = v64 < v65;
        if (v19)
          v63 = v59 < v60;
        else
          v63 = v66;
      }
      if (v73 < 0)
        operator delete(v71[0]);
      if (SHIBYTE(v75) < 0)
        operator delete(v74[0]);
      v56 = i;
    }
    while (!v63);
  }
  v67 = (void **)v21 - 3;
  if ((__int128 *)((char *)v21 - 24) == (__int128 *)a1)
  {
    if (*((char *)v21 - 1) < 0)
      operator delete(*v67);
  }
  else
  {
    if (*(char *)(a1 + 23) < 0)
      operator delete(*(void **)a1);
    v68 = *(_OWORD *)v67;
    *(_QWORD *)(a1 + 16) = *((_QWORD *)v21 - 1);
    *(_OWORD *)a1 = v68;
    *((_BYTE *)v21 - 1) = 0;
    *((_BYTE *)v21 - 24) = 0;
  }
  *((_QWORD *)v21 - 3) = v7;
  *((_QWORD *)v21 - 2) = v8;
  v69 = v96[0];
  *(_DWORD *)((char *)v21 - 5) = *(_DWORD *)((char *)v96 + 3);
  *((_DWORD *)v21 - 2) = v69;
  *((_BYTE *)v21 - 1) = v9;
  return (uint64_t)v21 - 24;
}

void sub_13A6DC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,void *a24,uint64_t a25,int a26,__int16 a27,char a28,char a29,uint64_t a30,uint64_t a31,int a32,__int16 a33,char a34,char a35,void *a36,uint64_t a37,int a38,__int16 a39,char a40,char a41,uint64_t a42,uint64_t a43,int a44,__int16 a45,char a46,char a47,void *a48,uint64_t a49,int a50,__int16 a51,char a52,char a53,void *__p,uint64_t a55,int a56,__int16 a57,char a58,char a59)
{
  void *v59;
  int v60;

  if (a59 < 0)
    operator delete(__p);
  if (v60 < 0)
    operator delete(v59);
  _Unwind_Resume(exception_object);
}

BOOL sub_13A7E4(uint64_t a1, uint64_t a2, _QWORD **a3)
{
  uint64_t v3;
  unint64_t v5;
  _BOOL8 result;
  __int128 *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  __int128 v12;
  _QWORD *v13;
  unsigned __int8 *v14;
  unsigned __int8 *v15;
  unint64_t v16;
  unint64_t v17;
  _BOOL4 v18;
  unint64_t v19;
  unint64_t v20;
  BOOL v21;
  _BOOL4 v22;
  char v23;
  void *v24;
  void *v25;
  int v26;
  uint64_t v27;
  void **v28;
  void **v29;
  _QWORD *v30;
  unsigned __int8 *v31;
  unsigned __int8 *v32;
  unint64_t v33;
  unint64_t v34;
  _BOOL4 v35;
  unint64_t v36;
  unint64_t v37;
  _BOOL4 v38;
  uint64_t v39;
  _QWORD *v40;
  unsigned __int8 *v41;
  unsigned __int8 *v42;
  unint64_t v43;
  unint64_t v44;
  _BOOL4 v45;
  unint64_t v46;
  unint64_t v47;
  _BOOL4 v48;
  uint64_t v49;
  __int128 v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  int v54;
  void *v56[2];
  uint64_t v57;
  void *v58[2];
  _BYTE v59[7];
  char v60;
  _DWORD v61[2];
  void *__p[2];
  uint64_t v63;
  void *__dst[2];
  uint64_t v65;
  void *v66[2];
  uint64_t v67;
  __int128 v68;
  uint64_t v69;

  v3 = a2;
  v5 = 0xAAAAAAAAAAAAAAABLL * ((a2 - a1) >> 3);
  result = 1;
  switch(v5)
  {
    case 0uLL:
    case 1uLL:
      return result;
    case 2uLL:
      v7 = (__int128 *)(a2 - 24);
      if (*(char *)(a2 - 1) < 0)
      {
        sub_14998(&v68, *(void **)(a2 - 24), *(_QWORD *)(a2 - 16));
      }
      else
      {
        v68 = *v7;
        v69 = *(_QWORD *)(a2 - 8);
      }
      if (*(char *)(a1 + 23) < 0)
      {
        sub_14998(v66, *(void **)a1, *(_QWORD *)(a1 + 8));
      }
      else
      {
        *(_OWORD *)v66 = *(_OWORD *)a1;
        v67 = *(_QWORD *)(a1 + 16);
      }
      v40 = *a3;
      v41 = sub_E3DB0(*a3, (unsigned __int8 *)&v68);
      v42 = sub_E3DB0(v40, (unsigned __int8 *)v66);
      v43 = *((_QWORD *)v41 + 14);
      v44 = *((_QWORD *)v42 + 14);
      v45 = v43 < v44;
      if (v43 == v44)
      {
        v46 = *((_QWORD *)v41 + 8);
        v47 = *((_QWORD *)v42 + 8);
        v21 = v46 == v47;
        v48 = v46 < v47;
        if (v21)
          v45 = v41 < v42;
        else
          v45 = v48;
      }
      if (SHIBYTE(v67) < 0)
        operator delete(v66[0]);
      if (SHIBYTE(v69) < 0)
        operator delete((void *)v68);
      if (v45)
      {
        v49 = *(_QWORD *)(a1 + 16);
        v50 = *(_OWORD *)a1;
        v51 = *(_QWORD *)(v3 - 8);
        *(_OWORD *)a1 = *v7;
        *(_QWORD *)(a1 + 16) = v51;
        *v7 = v50;
        *(_QWORD *)(v3 - 8) = v49;
      }
      return 1;
    case 3uLL:
      sub_139380((__int128 *)a1, (__int128 *)(a1 + 24), (__int128 *)(a2 - 24), a3);
      return 1;
    case 4uLL:
      sub_13AD20(a1, a1 + 24, a1 + 48, a2 - 24, a3);
      return 1;
    case 5uLL:
      sub_13B0C0(a1, a1 + 24, a1 + 48, a1 + 72, a2 - 24, a3);
      return 1;
    default:
      v8 = a1 + 48;
      sub_139380((__int128 *)a1, (__int128 *)(a1 + 24), (__int128 *)(a1 + 48), a3);
      v9 = a1 + 72;
      if (a1 + 72 == v3)
        return 1;
      v10 = 0;
      v11 = 0;
      v52 = v3;
      break;
  }
  while (2)
  {
    if (*(char *)(v9 + 23) < 0)
    {
      sub_14998(__dst, *(void **)v9, *(_QWORD *)(v9 + 8));
    }
    else
    {
      *(_OWORD *)__dst = *(_OWORD *)v9;
      v65 = *(_QWORD *)(v9 + 16);
    }
    if (*(char *)(v8 + 23) < 0)
    {
      sub_14998(__p, *(void **)v8, *(_QWORD *)(v8 + 8));
    }
    else
    {
      v12 = *(_OWORD *)v8;
      v63 = *(_QWORD *)(v8 + 16);
      *(_OWORD *)__p = v12;
    }
    v13 = *a3;
    v14 = sub_E3DB0(*a3, (unsigned __int8 *)__dst);
    v15 = sub_E3DB0(v13, (unsigned __int8 *)__p);
    v16 = *((_QWORD *)v14 + 14);
    v17 = *((_QWORD *)v15 + 14);
    v18 = v16 < v17;
    if (v16 == v17)
    {
      v19 = *((_QWORD *)v14 + 8);
      v20 = *((_QWORD *)v15 + 8);
      v21 = v19 == v20;
      v22 = v19 < v20;
      if (v21)
        v18 = v14 < v15;
      else
        v18 = v22;
    }
    if (SHIBYTE(v63) < 0)
      operator delete(__p[0]);
    if (SHIBYTE(v65) < 0)
    {
      operator delete(__dst[0]);
      if (!v18)
        goto LABEL_47;
    }
    else if (!v18)
    {
      goto LABEL_47;
    }
    v54 = v11;
    v23 = 0;
    v24 = *(void **)v9;
    v25 = *(void **)(v9 + 8);
    v61[0] = *(_DWORD *)(v9 + 16);
    *(_DWORD *)((char *)v61 + 3) = *(_DWORD *)(v9 + 19);
    v26 = *(char *)(v9 + 23);
    *(_QWORD *)(v9 + 8) = 0;
    *(_QWORD *)(v9 + 16) = 0;
    *(_QWORD *)v9 = 0;
    v53 = v10;
    while (1)
    {
      v27 = a1 + v10;
      v28 = (void **)(a1 + v10 + 72);
      if (v23 < 0)
        operator delete(*v28);
      *(_OWORD *)v28 = *(_OWORD *)(v27 + 48);
      *(_QWORD *)(a1 + v10 + 88) = *(_QWORD *)(v27 + 64);
      *(_BYTE *)(v27 + 71) = 0;
      *(_BYTE *)(v27 + 48) = 0;
      if (v10 == -48)
      {
        v39 = a1;
        goto LABEL_46;
      }
      if (v26 < 0)
      {
        sub_14998(v58, v24, (unint64_t)v25);
      }
      else
      {
        v58[0] = v24;
        v58[1] = v25;
        *(_DWORD *)v59 = v61[0];
        *(_DWORD *)&v59[3] = *(_DWORD *)((char *)v61 + 3);
        v60 = v26;
      }
      v29 = (void **)(a1 + v10 + 24);
      if (*(char *)(a1 + v10 + 47) < 0)
      {
        sub_14998(v56, *v29, *(_QWORD *)(a1 + v10 + 32));
      }
      else
      {
        *(_OWORD *)v56 = *(_OWORD *)v29;
        v57 = *(_QWORD *)(a1 + v10 + 40);
      }
      v30 = *a3;
      v31 = sub_E3DB0(*a3, (unsigned __int8 *)v58);
      v32 = sub_E3DB0(v30, (unsigned __int8 *)v56);
      v33 = *((_QWORD *)v31 + 14);
      v34 = *((_QWORD *)v32 + 14);
      v35 = v33 < v34;
      if (v33 == v34)
      {
        v36 = *((_QWORD *)v31 + 8);
        v37 = *((_QWORD *)v32 + 8);
        v21 = v36 == v37;
        v38 = v36 < v37;
        if (v21)
          v35 = v31 < v32;
        else
          v35 = v38;
      }
      if (SHIBYTE(v57) < 0)
        operator delete(v56[0]);
      if (v60 < 0)
        break;
      if (!v35)
        goto LABEL_44;
LABEL_42:
      v23 = *(_BYTE *)(v27 + 71);
      v10 -= 24;
    }
    operator delete(v58[0]);
    if (v35)
      goto LABEL_42;
LABEL_44:
    v39 = a1 + v10 + 48;
    if (*(char *)(a1 + v10 + 71) < 0)
      operator delete(*(void **)v39);
LABEL_46:
    v3 = v52;
    v10 = v53;
    *(_QWORD *)v39 = v24;
    *(_QWORD *)(v39 + 8) = v25;
    *(_DWORD *)(v39 + 16) = v61[0];
    *(_DWORD *)(v39 + 19) = *(_DWORD *)((char *)v61 + 3);
    *(_BYTE *)(v39 + 23) = v26;
    v11 = v54 + 1;
    if (v54 != 7)
    {
LABEL_47:
      v8 = v9;
      v10 += 24;
      v9 += 24;
      if (v9 == v3)
        return 1;
      continue;
    }
    return v9 + 24 == v52;
  }
}

void sub_13AC80(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, int a15, __int16 a16, char a17, char a18, uint64_t a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25,uint64_t a26,void *a27,uint64_t a28,int a29,__int16 a30,char a31,char a32,uint64_t a33,uint64_t a34,uint64_t a35,int a36,__int16 a37,char a38,char a39,uint64_t a40,void *__p,uint64_t a42,int a43,__int16 a44,char a45,char a46)
{
  uint64_t v46;

  if (*(char *)(v46 - 121) < 0)
    operator delete(*(void **)(v46 - 144));
  _Unwind_Resume(exception_object);
}

__n128 sub_13AD20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD **a5)
{
  _QWORD *v10;
  unsigned __int8 *v11;
  unsigned __int8 *v12;
  __n128 result;
  unint64_t v14;
  unint64_t v15;
  _BOOL4 v16;
  unint64_t v17;
  unint64_t v18;
  BOOL v19;
  _BOOL4 v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  _QWORD *v24;
  unsigned __int8 *v25;
  unsigned __int8 *v26;
  unint64_t v27;
  unint64_t v28;
  _BOOL4 v29;
  unint64_t v30;
  unint64_t v31;
  _BOOL4 v32;
  uint64_t v33;
  __int128 v34;
  uint64_t v35;
  _QWORD *v36;
  unsigned __int8 *v37;
  unsigned __int8 *v38;
  unint64_t v39;
  unint64_t v40;
  _BOOL4 v41;
  unint64_t v42;
  unint64_t v43;
  _BOOL4 v44;
  uint64_t v45;
  uint64_t v46;
  void *v47[2];
  uint64_t v48;
  void *v49[2];
  uint64_t v50;
  void *v51[2];
  uint64_t v52;
  void *v53[2];
  uint64_t v54;
  void *__p[2];
  uint64_t v56;
  void *__dst[2];
  uint64_t v58;

  sub_139380((__int128 *)a1, (__int128 *)a2, (__int128 *)a3, a5);
  if (*(char *)(a4 + 23) < 0)
  {
    sub_14998(__dst, *(void **)a4, *(_QWORD *)(a4 + 8));
  }
  else
  {
    *(_OWORD *)__dst = *(_OWORD *)a4;
    v58 = *(_QWORD *)(a4 + 16);
  }
  if (*(char *)(a3 + 23) < 0)
  {
    sub_14998(__p, *(void **)a3, *(_QWORD *)(a3 + 8));
  }
  else
  {
    *(_OWORD *)__p = *(_OWORD *)a3;
    v56 = *(_QWORD *)(a3 + 16);
  }
  v10 = *a5;
  v11 = sub_E3DB0(*a5, (unsigned __int8 *)__dst);
  v12 = sub_E3DB0(v10, (unsigned __int8 *)__p);
  v14 = *((_QWORD *)v11 + 14);
  v15 = *((_QWORD *)v12 + 14);
  v16 = v14 < v15;
  if (v14 == v15)
  {
    v17 = *((_QWORD *)v11 + 8);
    v18 = *((_QWORD *)v12 + 8);
    v19 = v17 == v18;
    v20 = v17 < v18;
    if (v19)
      v16 = v11 < v12;
    else
      v16 = v20;
  }
  if (SHIBYTE(v56) < 0)
    operator delete(__p[0]);
  if (SHIBYTE(v58) < 0)
  {
    operator delete(__dst[0]);
    if (!v16)
      return result;
  }
  else if (!v16)
  {
    return result;
  }
  v21 = *(_QWORD *)(a3 + 16);
  v22 = *(_OWORD *)a3;
  v23 = *(_QWORD *)(a4 + 16);
  *(_OWORD *)a3 = *(_OWORD *)a4;
  *(_QWORD *)(a3 + 16) = v23;
  *(_OWORD *)a4 = v22;
  *(_QWORD *)(a4 + 16) = v21;
  if (*(char *)(a3 + 23) < 0)
  {
    sub_14998(v53, *(void **)a3, *(_QWORD *)(a3 + 8));
  }
  else
  {
    *(_OWORD *)v53 = *(_OWORD *)a3;
    v54 = *(_QWORD *)(a3 + 16);
  }
  if (*(char *)(a2 + 23) < 0)
  {
    sub_14998(v51, *(void **)a2, *(_QWORD *)(a2 + 8));
  }
  else
  {
    *(_OWORD *)v51 = *(_OWORD *)a2;
    v52 = *(_QWORD *)(a2 + 16);
  }
  v24 = *a5;
  v25 = sub_E3DB0(*a5, (unsigned __int8 *)v53);
  v26 = sub_E3DB0(v24, (unsigned __int8 *)v51);
  v27 = *((_QWORD *)v25 + 14);
  v28 = *((_QWORD *)v26 + 14);
  v29 = v27 < v28;
  if (v27 == v28)
  {
    v30 = *((_QWORD *)v25 + 8);
    v31 = *((_QWORD *)v26 + 8);
    v19 = v30 == v31;
    v32 = v30 < v31;
    if (v19)
      v29 = v25 < v26;
    else
      v29 = v32;
  }
  if (SHIBYTE(v52) < 0)
    operator delete(v51[0]);
  if (SHIBYTE(v54) < 0)
  {
    operator delete(v53[0]);
    if (!v29)
      return result;
  }
  else if (!v29)
  {
    return result;
  }
  v33 = *(_QWORD *)(a2 + 16);
  v34 = *(_OWORD *)a2;
  v35 = *(_QWORD *)(a3 + 16);
  *(_OWORD *)a2 = *(_OWORD *)a3;
  *(_QWORD *)(a2 + 16) = v35;
  *(_OWORD *)a3 = v34;
  *(_QWORD *)(a3 + 16) = v33;
  if (*(char *)(a2 + 23) < 0)
  {
    sub_14998(v49, *(void **)a2, *(_QWORD *)(a2 + 8));
  }
  else
  {
    *(_OWORD *)v49 = *(_OWORD *)a2;
    v50 = *(_QWORD *)(a2 + 16);
  }
  if (*(char *)(a1 + 23) < 0)
  {
    sub_14998(v47, *(void **)a1, *(_QWORD *)(a1 + 8));
  }
  else
  {
    *(_OWORD *)v47 = *(_OWORD *)a1;
    v48 = *(_QWORD *)(a1 + 16);
  }
  v36 = *a5;
  v37 = sub_E3DB0(*a5, (unsigned __int8 *)v49);
  v38 = sub_E3DB0(v36, (unsigned __int8 *)v47);
  v39 = *((_QWORD *)v37 + 14);
  v40 = *((_QWORD *)v38 + 14);
  v41 = v39 < v40;
  if (v39 == v40)
  {
    v42 = *((_QWORD *)v37 + 8);
    v43 = *((_QWORD *)v38 + 8);
    v19 = v42 == v43;
    v44 = v42 < v43;
    if (v19)
      v41 = v37 < v38;
    else
      v41 = v44;
  }
  if (SHIBYTE(v48) < 0)
    operator delete(v47[0]);
  if (SHIBYTE(v50) < 0)
    operator delete(v49[0]);
  if (v41)
  {
    v45 = *(_QWORD *)(a1 + 16);
    result = *(__n128 *)a1;
    v46 = *(_QWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_QWORD *)(a1 + 16) = v46;
    *(__n128 *)a2 = result;
    *(_QWORD *)(a2 + 16) = v45;
  }
  return result;
}

void sub_13B030(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,uint64_t a29,char a30,uint64_t a31,int a32,__int16 a33,char a34,char a35,uint64_t a36,void *a37,uint64_t a38,int a39,__int16 a40,char a41,char a42,uint64_t a43,char a44,uint64_t a45,int a46,__int16 a47,char a48,char a49)
{
  if (a21 < 0)
    operator delete(a16);
  _Unwind_Resume(exception_object);
}

__n128 sub_13B0C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, _QWORD **a6)
{
  _QWORD *v12;
  unsigned __int8 *v13;
  unsigned __int8 *v14;
  __n128 result;
  unint64_t v16;
  unint64_t v17;
  _BOOL4 v18;
  unint64_t v19;
  unint64_t v20;
  BOOL v21;
  _BOOL4 v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;
  _QWORD *v26;
  unsigned __int8 *v27;
  unsigned __int8 *v28;
  unint64_t v29;
  unint64_t v30;
  _BOOL4 v31;
  unint64_t v32;
  unint64_t v33;
  _BOOL4 v34;
  uint64_t v35;
  __int128 v36;
  uint64_t v37;
  _QWORD *v38;
  unsigned __int8 *v39;
  unsigned __int8 *v40;
  unint64_t v41;
  unint64_t v42;
  _BOOL4 v43;
  unint64_t v44;
  unint64_t v45;
  _BOOL4 v46;
  uint64_t v47;
  __int128 v48;
  uint64_t v49;
  _QWORD *v50;
  unsigned __int8 *v51;
  unsigned __int8 *v52;
  unint64_t v53;
  unint64_t v54;
  _BOOL4 v55;
  unint64_t v56;
  unint64_t v57;
  _BOOL4 v58;
  uint64_t v59;
  uint64_t v60;
  void *v61[2];
  uint64_t v62;
  void *v63[2];
  uint64_t v64;
  void *v65[2];
  uint64_t v66;
  void *v67[2];
  uint64_t v68;
  void *v69[2];
  uint64_t v70;
  void *v71[2];
  uint64_t v72;
  void *__p[2];
  uint64_t v74;
  void *__dst[2];
  uint64_t v76;

  sub_13AD20(a1, a2, a3, a4, a6);
  if (*(char *)(a5 + 23) < 0)
  {
    sub_14998(__dst, *(void **)a5, *(_QWORD *)(a5 + 8));
  }
  else
  {
    *(_OWORD *)__dst = *(_OWORD *)a5;
    v76 = *(_QWORD *)(a5 + 16);
  }
  if (*(char *)(a4 + 23) < 0)
  {
    sub_14998(__p, *(void **)a4, *(_QWORD *)(a4 + 8));
  }
  else
  {
    *(_OWORD *)__p = *(_OWORD *)a4;
    v74 = *(_QWORD *)(a4 + 16);
  }
  v12 = *a6;
  v13 = sub_E3DB0(*a6, (unsigned __int8 *)__dst);
  v14 = sub_E3DB0(v12, (unsigned __int8 *)__p);
  v16 = *((_QWORD *)v13 + 14);
  v17 = *((_QWORD *)v14 + 14);
  v18 = v16 < v17;
  if (v16 == v17)
  {
    v19 = *((_QWORD *)v13 + 8);
    v20 = *((_QWORD *)v14 + 8);
    v21 = v19 == v20;
    v22 = v19 < v20;
    if (v21)
      v18 = v13 < v14;
    else
      v18 = v22;
  }
  if (SHIBYTE(v74) < 0)
    operator delete(__p[0]);
  if (SHIBYTE(v76) < 0)
  {
    operator delete(__dst[0]);
    if (!v18)
      return result;
  }
  else if (!v18)
  {
    return result;
  }
  v23 = *(_QWORD *)(a4 + 16);
  v24 = *(_OWORD *)a4;
  v25 = *(_QWORD *)(a5 + 16);
  *(_OWORD *)a4 = *(_OWORD *)a5;
  *(_QWORD *)(a4 + 16) = v25;
  *(_OWORD *)a5 = v24;
  *(_QWORD *)(a5 + 16) = v23;
  if (*(char *)(a4 + 23) < 0)
  {
    sub_14998(v71, *(void **)a4, *(_QWORD *)(a4 + 8));
  }
  else
  {
    *(_OWORD *)v71 = *(_OWORD *)a4;
    v72 = *(_QWORD *)(a4 + 16);
  }
  if (*(char *)(a3 + 23) < 0)
  {
    sub_14998(v69, *(void **)a3, *(_QWORD *)(a3 + 8));
  }
  else
  {
    *(_OWORD *)v69 = *(_OWORD *)a3;
    v70 = *(_QWORD *)(a3 + 16);
  }
  v26 = *a6;
  v27 = sub_E3DB0(*a6, (unsigned __int8 *)v71);
  v28 = sub_E3DB0(v26, (unsigned __int8 *)v69);
  v29 = *((_QWORD *)v27 + 14);
  v30 = *((_QWORD *)v28 + 14);
  v31 = v29 < v30;
  if (v29 == v30)
  {
    v32 = *((_QWORD *)v27 + 8);
    v33 = *((_QWORD *)v28 + 8);
    v21 = v32 == v33;
    v34 = v32 < v33;
    if (v21)
      v31 = v27 < v28;
    else
      v31 = v34;
  }
  if (SHIBYTE(v70) < 0)
    operator delete(v69[0]);
  if (SHIBYTE(v72) < 0)
  {
    operator delete(v71[0]);
    if (!v31)
      return result;
  }
  else if (!v31)
  {
    return result;
  }
  v35 = *(_QWORD *)(a3 + 16);
  v36 = *(_OWORD *)a3;
  v37 = *(_QWORD *)(a4 + 16);
  *(_OWORD *)a3 = *(_OWORD *)a4;
  *(_QWORD *)(a3 + 16) = v37;
  *(_OWORD *)a4 = v36;
  *(_QWORD *)(a4 + 16) = v35;
  if (*(char *)(a3 + 23) < 0)
  {
    sub_14998(v67, *(void **)a3, *(_QWORD *)(a3 + 8));
  }
  else
  {
    *(_OWORD *)v67 = *(_OWORD *)a3;
    v68 = *(_QWORD *)(a3 + 16);
  }
  if (*(char *)(a2 + 23) < 0)
  {
    sub_14998(v65, *(void **)a2, *(_QWORD *)(a2 + 8));
  }
  else
  {
    *(_OWORD *)v65 = *(_OWORD *)a2;
    v66 = *(_QWORD *)(a2 + 16);
  }
  v38 = *a6;
  v39 = sub_E3DB0(*a6, (unsigned __int8 *)v67);
  v40 = sub_E3DB0(v38, (unsigned __int8 *)v65);
  v41 = *((_QWORD *)v39 + 14);
  v42 = *((_QWORD *)v40 + 14);
  v43 = v41 < v42;
  if (v41 == v42)
  {
    v44 = *((_QWORD *)v39 + 8);
    v45 = *((_QWORD *)v40 + 8);
    v21 = v44 == v45;
    v46 = v44 < v45;
    if (v21)
      v43 = v39 < v40;
    else
      v43 = v46;
  }
  if (SHIBYTE(v66) < 0)
    operator delete(v65[0]);
  if (SHIBYTE(v68) < 0)
  {
    operator delete(v67[0]);
    if (!v43)
      return result;
  }
  else if (!v43)
  {
    return result;
  }
  v47 = *(_QWORD *)(a2 + 16);
  v48 = *(_OWORD *)a2;
  v49 = *(_QWORD *)(a3 + 16);
  *(_OWORD *)a2 = *(_OWORD *)a3;
  *(_QWORD *)(a2 + 16) = v49;
  *(_OWORD *)a3 = v48;
  *(_QWORD *)(a3 + 16) = v47;
  if (*(char *)(a2 + 23) < 0)
  {
    sub_14998(v63, *(void **)a2, *(_QWORD *)(a2 + 8));
  }
  else
  {
    *(_OWORD *)v63 = *(_OWORD *)a2;
    v64 = *(_QWORD *)(a2 + 16);
  }
  if (*(char *)(a1 + 23) < 0)
  {
    sub_14998(v61, *(void **)a1, *(_QWORD *)(a1 + 8));
  }
  else
  {
    *(_OWORD *)v61 = *(_OWORD *)a1;
    v62 = *(_QWORD *)(a1 + 16);
  }
  v50 = *a6;
  v51 = sub_E3DB0(*a6, (unsigned __int8 *)v63);
  v52 = sub_E3DB0(v50, (unsigned __int8 *)v61);
  v53 = *((_QWORD *)v51 + 14);
  v54 = *((_QWORD *)v52 + 14);
  v55 = v53 < v54;
  if (v53 == v54)
  {
    v56 = *((_QWORD *)v51 + 8);
    v57 = *((_QWORD *)v52 + 8);
    v21 = v56 == v57;
    v58 = v56 < v57;
    if (v21)
      v55 = v51 < v52;
    else
      v55 = v58;
  }
  if (SHIBYTE(v62) < 0)
    operator delete(v61[0]);
  if (SHIBYTE(v64) < 0)
    operator delete(v63[0]);
  if (v55)
  {
    v59 = *(_QWORD *)(a1 + 16);
    result = *(__n128 *)a1;
    v60 = *(_QWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_QWORD *)(a1 + 16) = v60;
    *(__n128 *)a2 = result;
    *(_QWORD *)(a2 + 16) = v59;
  }
  return result;
}

void sub_13B4C8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,uint64_t a29,char a30,uint64_t a31,int a32,__int16 a33,char a34,char a35,uint64_t a36,void *a37,uint64_t a38,int a39,__int16 a40,char a41,char a42,uint64_t a43,char a44,uint64_t a45,int a46,__int16 a47,char a48,char a49,uint64_t a50,void *a51,uint64_t a52,int a53,__int16 a54,char a55,char a56,uint64_t a57,char a58,uint64_t a59,int a60,__int16 a61,char a62,char a63)
{
  if (a21 < 0)
    operator delete(a16);
  _Unwind_Resume(exception_object);
}

__int128 *sub_13B584(uint64_t a1, __int128 *a2, __int128 *a3, _QWORD **a4)
{
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  __int128 *v12;
  __int128 *v13;
  __int128 *v14;
  _QWORD *v15;
  unsigned __int8 *v16;
  unsigned __int8 *v17;
  unint64_t v18;
  unint64_t v19;
  _BOOL4 v20;
  unint64_t v21;
  unint64_t v22;
  BOOL v23;
  _BOOL4 v24;
  uint64_t v25;
  __int128 v26;
  uint64_t v27;
  int64_t v28;
  __int128 *v29;
  void *v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  __int128 v35;
  uint64_t v36;
  uint64_t v37;
  void *__p[2];
  uint64_t v41;
  void *__dst[2];
  uint64_t v43;
  _QWORD v44[2];

  if ((__int128 *)a1 != a2)
  {
    v8 = (uint64_t)a2 - a1;
    v9 = ((uint64_t)a2 - a1) / 24;
    if ((uint64_t)a2 - a1 >= 25)
    {
      v10 = (unint64_t)(v9 - 2) >> 1;
      v11 = v10 + 1;
      v12 = (__int128 *)(a1 + 24 * v10);
      do
      {
        sub_13B8B8(a1, a4, v9, v12);
        v12 = (__int128 *)((char *)v12 - 24);
        --v11;
      }
      while (v11);
    }
    v13 = a2;
    if (a2 != a3)
    {
      v14 = a2;
      while (1)
      {
        if (*((char *)v14 + 23) < 0)
        {
          sub_14998(__dst, *(void **)v14, *((_QWORD *)v14 + 1));
        }
        else
        {
          *(_OWORD *)__dst = *v14;
          v43 = *((_QWORD *)v14 + 2);
        }
        if (*(char *)(a1 + 23) < 0)
        {
          sub_14998(__p, *(void **)a1, *(_QWORD *)(a1 + 8));
        }
        else
        {
          *(_OWORD *)__p = *(_OWORD *)a1;
          v41 = *(_QWORD *)(a1 + 16);
        }
        v15 = *a4;
        v16 = sub_E3DB0(*a4, (unsigned __int8 *)__dst);
        v17 = sub_E3DB0(v15, (unsigned __int8 *)__p);
        v18 = *((_QWORD *)v16 + 14);
        v19 = *((_QWORD *)v17 + 14);
        v20 = v18 < v19;
        if (v18 == v19)
        {
          v21 = *((_QWORD *)v16 + 8);
          v22 = *((_QWORD *)v17 + 8);
          v23 = v21 == v22;
          v24 = v21 < v22;
          if (v23)
            v20 = v16 < v17;
          else
            v20 = v24;
        }
        if (SHIBYTE(v41) < 0)
          operator delete(__p[0]);
        if ((SHIBYTE(v43) & 0x80000000) == 0)
          break;
        operator delete(__dst[0]);
        if (v20)
          goto LABEL_23;
LABEL_24:
        v14 = (__int128 *)((char *)v14 + 24);
        if (v14 == a3)
        {
          v13 = a3;
          goto LABEL_26;
        }
      }
      if (!v20)
        goto LABEL_24;
LABEL_23:
      v25 = *((_QWORD *)v14 + 2);
      v26 = *v14;
      v27 = *(_QWORD *)(a1 + 16);
      *v14 = *(_OWORD *)a1;
      *((_QWORD *)v14 + 2) = v27;
      *(_OWORD *)a1 = v26;
      *(_QWORD *)(a1 + 16) = v25;
      sub_13B8B8(a1, a4, v9, (__int128 *)a1);
      goto LABEL_24;
    }
LABEL_26:
    if (v8 >= 25)
    {
      v28 = v8 / 0x18uLL;
      v29 = (__int128 *)((char *)a2 - 24);
      do
      {
        v30 = *(void **)a1;
        v44[0] = *(_QWORD *)(a1 + 8);
        *(_QWORD *)((char *)v44 + 7) = *(_QWORD *)(a1 + 15);
        v31 = *(_BYTE *)(a1 + 23);
        *(_QWORD *)(a1 + 8) = 0;
        *(_QWORD *)(a1 + 16) = 0;
        *(_QWORD *)a1 = 0;
        v32 = sub_13BE44(a1, a4, v28);
        v33 = v32;
        v34 = *(char *)(v32 + 23);
        if (v29 == (__int128 *)v32)
        {
          if (v34 < 0)
            operator delete(*(void **)v32);
          v37 = v44[0];
          *(_QWORD *)v33 = v30;
          *(_QWORD *)(v33 + 8) = v37;
          *(_QWORD *)(v33 + 15) = *(_QWORD *)((char *)v44 + 7);
          *(_BYTE *)(v33 + 23) = v31;
        }
        else
        {
          if (v34 < 0)
            operator delete(*(void **)v32);
          v35 = *v29;
          *(_QWORD *)(v33 + 16) = *((_QWORD *)v29 + 2);
          *(_OWORD *)v33 = v35;
          v36 = v44[0];
          *(_QWORD *)v29 = v30;
          *((_QWORD *)v29 + 1) = v36;
          *(_QWORD *)((char *)v29 + 15) = *(_QWORD *)((char *)v44 + 7);
          *((_BYTE *)v29 + 23) = v31;
          sub_13C018(a1, v33 + 24, a4, 0xAAAAAAAAAAAAAAABLL * ((v33 + 24 - a1) >> 3));
        }
        v29 = (__int128 *)((char *)v29 - 24);
      }
      while (v28-- > 2);
    }
    return v13;
  }
  return a3;
}

void sub_13B86C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_13B8B8(uint64_t a1, _QWORD **a2, uint64_t a3, __int128 *a4)
{
  unint64_t v4;
  __int128 *v5;
  uint64_t v7;
  __int128 *v8;
  uint64_t v9;
  _QWORD *v10;
  unsigned __int8 *v11;
  unsigned __int8 *v12;
  unint64_t v13;
  unint64_t v14;
  _BOOL4 v15;
  unint64_t v16;
  unint64_t v17;
  BOOL v18;
  _BOOL4 v19;
  uint64_t v20;
  _QWORD *v21;
  unsigned __int8 *v22;
  unsigned __int8 *v23;
  unint64_t v24;
  unint64_t v25;
  BOOL v26;
  unint64_t v27;
  unint64_t v28;
  BOOL v29;
  int v30;
  __int128 *v31;
  __int128 v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  unsigned __int8 *v36;
  unsigned __int8 *v37;
  unint64_t v38;
  unint64_t v39;
  _BOOL4 v40;
  unint64_t v41;
  unint64_t v42;
  _BOOL4 v43;
  _QWORD *v44;
  unsigned __int8 *v45;
  unsigned __int8 *v46;
  unint64_t v47;
  unint64_t v48;
  _BOOL4 v49;
  unint64_t v50;
  unint64_t v51;
  _BOOL4 v52;
  void *v53;
  void *v54;
  uint64_t v56;
  void *v58[2];
  _BYTE v59[7];
  char v60;
  void *v61[2];
  uint64_t v62;
  void *v63[2];
  uint64_t v64;
  void *v65[2];
  uint64_t v66;
  _DWORD v67[2];
  void *__p[2];
  uint64_t v69;
  __int128 v70;
  uint64_t v71;
  __int128 v72;
  uint64_t v73;
  __int128 __dst;
  uint64_t v75;

  v4 = a3 - 2;
  if (a3 >= 2)
  {
    v5 = a4;
    v56 = v4 >> 1;
    if ((uint64_t)(v4 >> 1) >= (uint64_t)(0xAAAAAAAAAAAAAAABLL * (((uint64_t)a4 - a1) >> 3)))
    {
      v7 = (0x5555555555555556 * (((uint64_t)a4 - a1) >> 3)) | 1;
      v8 = (__int128 *)(a1 + 24 * v7);
      v9 = 0x5555555555555556 * (((uint64_t)a4 - a1) >> 3) + 2;
      if (v9 < a3)
      {
        if (*((char *)v8 + 23) < 0)
        {
          sub_14998(&__dst, *(void **)v8, *((_QWORD *)v8 + 1));
        }
        else
        {
          __dst = *v8;
          v75 = *((_QWORD *)v8 + 2);
        }
        if (*((char *)v8 + 47) < 0)
        {
          sub_14998(&v72, *((void **)v8 + 3), *((_QWORD *)v8 + 4));
        }
        else
        {
          v72 = *(__int128 *)((char *)v8 + 24);
          v73 = *((_QWORD *)v8 + 5);
        }
        v10 = *a2;
        v11 = sub_E3DB0(*a2, (unsigned __int8 *)&__dst);
        v12 = sub_E3DB0(v10, (unsigned __int8 *)&v72);
        v13 = *((_QWORD *)v11 + 14);
        v14 = *((_QWORD *)v12 + 14);
        v15 = v13 < v14;
        if (v13 == v14)
        {
          v16 = *((_QWORD *)v11 + 8);
          v17 = *((_QWORD *)v12 + 8);
          v18 = v16 == v17;
          v19 = v16 < v17;
          if (v18)
            v15 = v11 < v12;
          else
            v15 = v19;
        }
        if (SHIBYTE(v73) < 0)
          operator delete((void *)v72);
        if (SHIBYTE(v75) < 0)
        {
          operator delete((void *)__dst);
          if (!v15)
            goto LABEL_19;
          goto LABEL_18;
        }
        if (v15)
        {
LABEL_18:
          v8 = (__int128 *)((char *)v8 + 24);
          v7 = v9;
        }
      }
LABEL_19:
      if (*((char *)v8 + 23) < 0)
      {
        sub_14998(&v70, *(void **)v8, *((_QWORD *)v8 + 1));
      }
      else
      {
        v70 = *v8;
        v71 = *((_QWORD *)v8 + 2);
      }
      v20 = a1;
      if (*((char *)v5 + 23) < 0)
      {
        sub_14998(__p, *(void **)v5, *((_QWORD *)v5 + 1));
      }
      else
      {
        *(_OWORD *)__p = *v5;
        v69 = *((_QWORD *)v5 + 2);
      }
      v21 = *a2;
      v22 = sub_E3DB0(*a2, (unsigned __int8 *)&v70);
      v23 = sub_E3DB0(v21, (unsigned __int8 *)__p);
      v24 = *((_QWORD *)v22 + 14);
      v25 = *((_QWORD *)v23 + 14);
      v26 = v24 < v25;
      if (v24 == v25)
      {
        v27 = *((_QWORD *)v22 + 8);
        v28 = *((_QWORD *)v23 + 8);
        v18 = v27 == v28;
        v29 = v27 < v28;
        if (v18)
          v26 = v22 < v23;
        else
          v26 = v29;
      }
      if (SHIBYTE(v69) < 0)
        operator delete(__p[0]);
      if (SHIBYTE(v71) < 0)
      {
        operator delete((void *)v70);
        if (v26)
          return;
      }
      else if (v26)
      {
        return;
      }
      v53 = (void *)*((_QWORD *)v5 + 1);
      v54 = *(void **)v5;
      v67[0] = *((_DWORD *)v5 + 4);
      *(_DWORD *)((char *)v67 + 3) = *(_DWORD *)((char *)v5 + 19);
      v30 = *((char *)v5 + 23);
      *((_QWORD *)v5 + 1) = 0;
      *((_QWORD *)v5 + 2) = 0;
      *(_QWORD *)v5 = 0;
      while (1)
      {
        v31 = v8;
        if (*((char *)v5 + 23) < 0)
          operator delete(*(void **)v5);
        v32 = *v8;
        *((_QWORD *)v5 + 2) = *((_QWORD *)v8 + 2);
        *v5 = v32;
        *((_BYTE *)v8 + 23) = 0;
        *(_BYTE *)v8 = 0;
        if (v56 < v7)
        {
LABEL_75:
          *(_QWORD *)v31 = v54;
          *((_QWORD *)v31 + 1) = v53;
          *((_DWORD *)v31 + 4) = v67[0];
          *(_DWORD *)((char *)v31 + 19) = *(_DWORD *)((char *)v67 + 3);
          *((_BYTE *)v31 + 23) = v30;
          return;
        }
        v33 = 2 * v7;
        v7 = (2 * v7) | 1;
        v8 = (__int128 *)(v20 + 24 * v7);
        v34 = v33 + 2;
        if (v33 + 2 < a3)
        {
          if (*((char *)v8 + 23) < 0)
          {
            sub_14998(v65, *(void **)v8, *((_QWORD *)v8 + 1));
          }
          else
          {
            *(_OWORD *)v65 = *v8;
            v66 = *((_QWORD *)v8 + 2);
          }
          if (*((char *)v8 + 47) < 0)
          {
            sub_14998(v63, *((void **)v8 + 3), *((_QWORD *)v8 + 4));
          }
          else
          {
            *(_OWORD *)v63 = *(__int128 *)((char *)v8 + 24);
            v64 = *((_QWORD *)v8 + 5);
          }
          v35 = *a2;
          v36 = sub_E3DB0(*a2, (unsigned __int8 *)v65);
          v37 = sub_E3DB0(v35, (unsigned __int8 *)v63);
          v38 = *((_QWORD *)v36 + 14);
          v39 = *((_QWORD *)v37 + 14);
          v40 = v38 < v39;
          if (v38 == v39)
          {
            v41 = *((_QWORD *)v36 + 8);
            v42 = *((_QWORD *)v37 + 8);
            v18 = v41 == v42;
            v43 = v41 < v42;
            if (v18)
              v40 = v36 < v37;
            else
              v40 = v43;
          }
          if (SHIBYTE(v64) < 0)
            operator delete(v63[0]);
          if (SHIBYTE(v66) < 0)
          {
            operator delete(v65[0]);
            if (!v40)
              goto LABEL_55;
LABEL_54:
            v8 = (__int128 *)((char *)v8 + 24);
            v7 = v34;
            goto LABEL_55;
          }
          if (v40)
            goto LABEL_54;
        }
LABEL_55:
        if (*((char *)v8 + 23) < 0)
        {
          sub_14998(v61, *(void **)v8, *((_QWORD *)v8 + 1));
        }
        else
        {
          *(_OWORD *)v61 = *v8;
          v62 = *((_QWORD *)v8 + 2);
        }
        if (v30 < 0)
        {
          sub_14998(v58, v54, (unint64_t)v53);
          v20 = a1;
        }
        else
        {
          v20 = a1;
          v58[0] = v54;
          v58[1] = v53;
          *(_DWORD *)v59 = v67[0];
          *(_DWORD *)&v59[3] = *(_DWORD *)((char *)v67 + 3);
          v60 = v30;
        }
        v44 = *a2;
        v45 = sub_E3DB0(*a2, (unsigned __int8 *)v61);
        v46 = sub_E3DB0(v44, (unsigned __int8 *)v58);
        v47 = *((_QWORD *)v45 + 14);
        v48 = *((_QWORD *)v46 + 14);
        v49 = v47 < v48;
        if (v47 == v48)
        {
          v50 = *((_QWORD *)v45 + 8);
          v51 = *((_QWORD *)v46 + 8);
          v18 = v50 == v51;
          v52 = v50 < v51;
          if (v18)
            v49 = v45 < v46;
          else
            v49 = v52;
        }
        if (v60 < 0)
          operator delete(v58[0]);
        if (SHIBYTE(v62) < 0)
          operator delete(v61[0]);
        v5 = v31;
        if (v49)
        {
          if (*((char *)v31 + 23) < 0)
            operator delete(*(void **)v31);
          goto LABEL_75;
        }
      }
    }
  }
}

void sub_13BD78(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, int a16, __int16 a17, char a18, char a19, uint64_t a20,uint64_t a21,int a22,__int16 a23,char a24,char a25,uint64_t a26,void *a27,uint64_t a28,int a29,__int16 a30,char a31,char a32,uint64_t a33,void *__p,uint64_t a35,int a36,__int16 a37,char a38,char a39,uint64_t a40,void *a41,uint64_t a42,int a43,__int16 a44,char a45,char a46,uint64_t a47,uint64_t a48,uint64_t a49,int a50,__int16 a51,char a52,char a53)
{
  uint64_t v53;

  if (*(char *)(v53 - 105) < 0)
    operator delete(*(void **)(v53 - 128));
  _Unwind_Resume(exception_object);
}

uint64_t sub_13BE44(uint64_t a1, _QWORD **a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  _QWORD *v13;
  unsigned __int8 *v14;
  unsigned __int8 *v15;
  unint64_t v16;
  unint64_t v17;
  _BOOL4 v18;
  unint64_t v19;
  unint64_t v20;
  BOOL v21;
  _BOOL4 v22;
  __int128 v23;
  void *__p[2];
  uint64_t v27;
  void *__dst[2];
  uint64_t v29;

  v5 = 0;
  v6 = a3 - 2;
  if (a3 < 2)
    v6 = a3 - 1;
  v7 = v6 >> 1;
  do
  {
    v8 = a1 + 24 * v5 + 24;
    v9 = 2 * v5;
    v5 = (2 * v5) | 1;
    v10 = v9 + 2;
    if (v9 + 2 >= a3)
      goto LABEL_20;
    if (*(char *)(v8 + 23) < 0)
    {
      sub_14998(__dst, *(void **)v8, *(_QWORD *)(v8 + 8));
    }
    else
    {
      v11 = *(_OWORD *)v8;
      v29 = *(_QWORD *)(v8 + 16);
      *(_OWORD *)__dst = v11;
    }
    if (*(char *)(v8 + 47) < 0)
    {
      sub_14998(__p, *(void **)(v8 + 24), *(_QWORD *)(v8 + 32));
    }
    else
    {
      v12 = *(_OWORD *)(v8 + 24);
      v27 = *(_QWORD *)(v8 + 40);
      *(_OWORD *)__p = v12;
    }
    v13 = *a2;
    v14 = sub_E3DB0(*a2, (unsigned __int8 *)__dst);
    v15 = sub_E3DB0(v13, (unsigned __int8 *)__p);
    v16 = *((_QWORD *)v14 + 14);
    v17 = *((_QWORD *)v15 + 14);
    v18 = v16 < v17;
    if (v16 == v17)
    {
      v19 = *((_QWORD *)v14 + 8);
      v20 = *((_QWORD *)v15 + 8);
      v21 = v19 == v20;
      v22 = v19 < v20;
      if (v21)
        v18 = v14 < v15;
      else
        v18 = v22;
    }
    if (SHIBYTE(v27) < 0)
      operator delete(__p[0]);
    if ((SHIBYTE(v29) & 0x80000000) == 0)
    {
      if (!v18)
        goto LABEL_20;
LABEL_19:
      v8 += 24;
      v5 = v10;
      goto LABEL_20;
    }
    operator delete(__dst[0]);
    if (v18)
      goto LABEL_19;
LABEL_20:
    if (*(char *)(a1 + 23) < 0)
      operator delete(*(void **)a1);
    v23 = *(_OWORD *)v8;
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(v8 + 16);
    *(_OWORD *)a1 = v23;
    *(_BYTE *)(v8 + 23) = 0;
    *(_BYTE *)v8 = 0;
    a1 = v8;
  }
  while (v5 <= v7);
  return v8;
}

void sub_13BFE4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, void *__p, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  if (a23 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_13C018(uint64_t a1, uint64_t a2, _QWORD **a3, uint64_t a4)
{
  unint64_t v4;
  unint64_t v6;
  __int128 *v7;
  __int128 *v8;
  _QWORD *v9;
  unsigned __int8 *v10;
  unsigned __int8 *v11;
  unint64_t v12;
  unint64_t v13;
  _BOOL4 v14;
  unint64_t v15;
  unint64_t v16;
  BOOL v17;
  _BOOL4 v18;
  void *v19;
  void *v20;
  int v21;
  __int128 *v22;
  __int128 v23;
  _QWORD *v24;
  unsigned __int8 *v25;
  unsigned __int8 *v26;
  unint64_t v27;
  unint64_t v28;
  BOOL v29;
  unint64_t v30;
  unint64_t v31;
  BOOL v32;
  void *v35[2];
  _BYTE v36[7];
  char v37;
  void *v38[2];
  uint64_t v39;
  _DWORD v40[2];
  void *__p[2];
  uint64_t v42;
  void *__dst[2];
  uint64_t v44;

  v4 = a4 - 2;
  if (a4 >= 2)
  {
    v6 = v4 >> 1;
    v7 = (__int128 *)(a1 + 24 * (v4 >> 1));
    if (*((char *)v7 + 23) < 0)
    {
      sub_14998(__dst, *(void **)v7, *((_QWORD *)v7 + 1));
    }
    else
    {
      *(_OWORD *)__dst = *v7;
      v44 = *((_QWORD *)v7 + 2);
    }
    v8 = (__int128 *)(a2 - 24);
    if (*(char *)(a2 - 1) < 0)
    {
      sub_14998(__p, *(void **)(a2 - 24), *(_QWORD *)(a2 - 16));
    }
    else
    {
      *(_OWORD *)__p = *v8;
      v42 = *(_QWORD *)(a2 - 8);
    }
    v9 = *a3;
    v10 = sub_E3DB0(*a3, (unsigned __int8 *)__dst);
    v11 = sub_E3DB0(v9, (unsigned __int8 *)__p);
    v12 = *((_QWORD *)v10 + 14);
    v13 = *((_QWORD *)v11 + 14);
    v14 = v12 < v13;
    if (v12 == v13)
    {
      v15 = *((_QWORD *)v10 + 8);
      v16 = *((_QWORD *)v11 + 8);
      v17 = v15 == v16;
      v18 = v15 < v16;
      if (v17)
        v14 = v10 < v11;
      else
        v14 = v18;
    }
    if (SHIBYTE(v42) < 0)
      operator delete(__p[0]);
    if (SHIBYTE(v44) < 0)
    {
      operator delete(__dst[0]);
      if (!v14)
        return;
    }
    else if (!v14)
    {
      return;
    }
    v19 = *(void **)(a2 - 24);
    v20 = *(void **)(a2 - 16);
    v40[0] = *(_DWORD *)(a2 - 8);
    *(_DWORD *)((char *)v40 + 3) = *(_DWORD *)(a2 - 5);
    v21 = *(char *)(a2 - 1);
    *(_QWORD *)(a2 - 16) = 0;
    *(_QWORD *)(a2 - 8) = 0;
    *(_QWORD *)v8 = 0;
    while (1)
    {
      v22 = v7;
      if (*((char *)v8 + 23) < 0)
        operator delete(*(void **)v8);
      v23 = *v7;
      *((_QWORD *)v8 + 2) = *((_QWORD *)v7 + 2);
      *v8 = v23;
      *((_BYTE *)v7 + 23) = 0;
      *(_BYTE *)v7 = 0;
      if (!v6)
        break;
      v6 = (v6 - 1) >> 1;
      v7 = (__int128 *)(a1 + 24 * v6);
      if (*((char *)v7 + 23) < 0)
      {
        sub_14998(v38, *(void **)v7, *((_QWORD *)v7 + 1));
      }
      else
      {
        *(_OWORD *)v38 = *v7;
        v39 = *((_QWORD *)v7 + 2);
      }
      if (v21 < 0)
      {
        sub_14998(v35, v19, (unint64_t)v20);
      }
      else
      {
        v35[0] = v19;
        v35[1] = v20;
        *(_DWORD *)v36 = v40[0];
        *(_DWORD *)&v36[3] = *(_DWORD *)((char *)v40 + 3);
        v37 = v21;
      }
      v24 = *a3;
      v25 = sub_E3DB0(*a3, (unsigned __int8 *)v38);
      v26 = sub_E3DB0(v24, (unsigned __int8 *)v35);
      v27 = *((_QWORD *)v25 + 14);
      v28 = *((_QWORD *)v26 + 14);
      v29 = v27 < v28;
      if (v27 == v28)
      {
        v30 = *((_QWORD *)v25 + 8);
        v31 = *((_QWORD *)v26 + 8);
        v17 = v30 == v31;
        v32 = v30 < v31;
        if (v17)
          v29 = v25 < v26;
        else
          v29 = v32;
      }
      if (v37 < 0)
        operator delete(v35[0]);
      if (SHIBYTE(v39) < 0)
        operator delete(v38[0]);
      v8 = v22;
      if (!v29)
      {
        if (*((char *)v22 + 23) < 0)
          operator delete(*(void **)v22);
        break;
      }
    }
    *(_QWORD *)v22 = v19;
    *((_QWORD *)v22 + 1) = v20;
    *((_DWORD *)v22 + 4) = v40[0];
    *(_DWORD *)((char *)v22 + 19) = *(_DWORD *)((char *)v40 + 3);
    *((_BYTE *)v22 + 23) = v21;
  }
}

void sub_13C2B4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,uint64_t a24,void *a25,uint64_t a26,int a27,__int16 a28,char a29,char a30,uint64_t a31,void *__p,uint64_t a33,int a34,__int16 a35,char a36,char a37)
{
  if (a37 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_13C328(uint64_t a1, unsigned __int8 *a2, _QWORD *a3, uint64_t a4, char a5)
{
  unsigned __int8 *v9;
  __int128 *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unsigned __int8 *v16;
  uint64_t v17;
  unsigned __int8 *v18;
  unsigned __int8 *v19;
  unsigned __int8 *v20;
  __int128 v21;
  _QWORD *v22;
  unsigned __int8 *v23;
  unsigned __int8 *v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  BOOL v29;
  BOOL v30;
  unint64_t v31;
  char v32;
  BOOL v33;
  _QWORD *v34;
  unsigned __int8 *v35;
  unsigned __int8 *v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  BOOL v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  uint64_t v45;
  uint64_t v46;

void sub_13C75C(unsigned __int8 *a1, unsigned __int8 *a2, _QWORD *a3)
{
  unsigned __int8 *v5;
  uint64_t v7;
  unsigned __int8 *v8;
  unsigned __int8 *v9;
  _QWORD *v10;
  unsigned __int8 *v11;
  unsigned __int8 *v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  BOOL v17;
  BOOL v18;
  uint64_t i;
  unsigned __int8 *v20;
  void **v21;
  _QWORD *v22;
  unsigned __int8 *v23;
  unsigned __int8 *v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  BOOL v29;
  unsigned __int8 *v30;
  __int128 v31;
  uint64_t v32;

  if (a1 == a2)
    return;
  v5 = a1 + 24;
  if (a1 + 24 == a2)
    return;
  v7 = 0;
  v8 = a1;
  do
  {
    v9 = v8;
    v8 = v5;
    v10 = (_QWORD *)(*a3 + 40);
    v11 = sub_E3DB0(v10, v5);
    v12 = sub_E3DB0(v10, v9);
    v13 = *((_QWORD *)v11 + 7);
    v14 = *((_QWORD *)v12 + 7);
    if (v13 == v14)
    {
      v15 = *((_QWORD *)v11 + 6);
      v16 = *((_QWORD *)v12 + 6);
      v17 = v15 == v16;
      v18 = v15 < v16;
      if (v17)
        v18 = v11 < v12;
      if (!v18)
        goto LABEL_25;
    }
    else if (v13 >= v14)
    {
      goto LABEL_25;
    }
    v31 = *(_OWORD *)v8;
    v32 = *((_QWORD *)v8 + 2);
    *((_QWORD *)v8 + 1) = 0;
    *((_QWORD *)v8 + 2) = 0;
    *(_QWORD *)v8 = 0;
    for (i = v7; ; i -= 24)
    {
      v20 = &a1[i];
      v21 = (void **)&a1[i + 24];
      if ((char)a1[i + 47] < 0)
        operator delete(*v21);
      *(_OWORD *)v21 = *(_OWORD *)v20;
      *(_QWORD *)&a1[i + 40] = *((_QWORD *)v20 + 2);
      v20[23] = 0;
      *v20 = 0;
      if (!i)
      {
        v30 = a1;
        goto LABEL_24;
      }
      v22 = (_QWORD *)(*a3 + 40);
      v23 = sub_E3DB0(v22, (unsigned __int8 *)&v31);
      v24 = sub_E3DB0(v22, &a1[i - 24]);
      v25 = *((_QWORD *)v23 + 7);
      v26 = *((_QWORD *)v24 + 7);
      if (v25 == v26)
        break;
      if (v25 >= v26)
        goto LABEL_22;
LABEL_20:
      ;
    }
    v27 = *((_QWORD *)v23 + 6);
    v28 = *((_QWORD *)v24 + 6);
    v17 = v27 == v28;
    v29 = v27 < v28;
    if (v17)
      v29 = v23 < v24;
    if (v29)
      goto LABEL_20;
LABEL_22:
    v30 = &a1[i];
    if ((char)a1[i + 23] < 0)
      operator delete(*(void **)v30);
LABEL_24:
    *(_OWORD *)v30 = v31;
    *((_QWORD *)v30 + 2) = v32;
LABEL_25:
    v5 = v8 + 24;
    v7 += 24;
  }
  while (v8 + 24 != a2);
}

