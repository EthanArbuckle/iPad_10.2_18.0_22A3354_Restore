id sub_2EA8(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 32), "p_teardownPlayerIsTransferringToExpanded:", 0);
  return objc_msgSend(*(id *)(a1 + 32), "p_stopAndInvalidate");
}

void sub_3168(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_3184(uint64_t a1)
{
  id WeakRetained;

  objc_msgSend(*(id *)(a1 + 32), "setContents:", 0);
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  objc_msgSend(WeakRetained, "setRemovePosterLayer:", 0);

}

id sub_3A78(uint64_t a1, double a2)
{
  LODWORD(a2) = 0;
  return objc_msgSend(*(id *)(a1 + 32), "setOpacity:", a2);
}

id sub_3BC0(uint64_t a1, double a2)
{
  LODWORD(a2) = 1.0;
  return objc_msgSend(*(id *)(a1 + 32), "setOpacity:", a2);
}

void sub_4428(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  id v6;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "layout"));
  objc_msgSend(v2, "invalidate");

  LODWORD(v2) = UIAccessibilityLayoutChangedNotification;
  v6 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "moviePlayerViewController"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "view"));
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "_accessibleSubviews"));
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "firstObject"));
  UIAccessibilityPostNotification((UIAccessibilityNotifications)v2, v5);

}

void sub_4700(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  id v4;

  v2 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "removePosterLayer"));
  v3 = (void *)v2;
  if (v2)
    (*(void (**)(uint64_t))(v2 + 16))(v2);

  v4 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "autoplayConfig"));
  objc_msgSend(v4, "enabled");

}

void sub_4CC0(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  id v5;
  id v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;
  void *v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  _BYTE v16[128];

  v12 = 0u;
  v13 = 0u;
  v14 = 0u;
  v15 = 0u;
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "moviePlayerViewController", 0));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "view"));
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "subviews"));

  v5 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v12, v16, 16);
  if (v5)
  {
    v6 = v5;
    v7 = *(_QWORD *)v13;
    do
    {
      v8 = 0;
      do
      {
        if (*(_QWORD *)v13 != v7)
          objc_enumerationMutation(v4);
        objc_msgSend(*(id *)(*((_QWORD *)&v12 + 1) + 8 * (_QWORD)v8), "setBackgroundColor:", *(_QWORD *)(a1 + 40));
        v8 = (char *)v8 + 1;
      }
      while (v6 != v8);
      v6 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v12, v16, 16);
    }
    while (v6);
  }

  v9 = *(_QWORD *)(a1 + 40);
  v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "moviePlayerViewController"));
  v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "view"));
  objc_msgSend(v11, "setBackgroundColor:", v9);

}

void sub_524C(uint64_t a1)
{
  void *v2;
  void *v3;
  id v4;

  objc_msgSend(*(id *)(a1 + 32), "setMoviePlayerControllerIsLoaded:", 1);
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "moviePlayerViewController"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "player"));
  objc_msgSend(v3, "play");

  v4 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "layout"));
  objc_msgSend(v4, "invalidate");

}

id sub_67F0(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "p_positionViewsForEditing:", *(unsigned __int8 *)(*(_QWORD *)(a1 + 32) + 8));
}

id sub_8CD4(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "performSelector:withObject:afterDelay:", "p_subAnimationEnded", 0, 0.0);
}

id sub_BB3C(uint64_t a1)
{
  __int128 v1;
  void *v2;
  _QWORD v4[4];
  __int128 v5;

  v1 = *(_OWORD *)(a1 + 32);
  v2 = *(void **)(*(_QWORD *)(a1 + 32) + 632);
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_BBA0;
  v4[3] = &unk_426E28;
  v5 = v1;
  return objc_msgSend(v2, "syncPerformBlock:", v4);
}

id sub_BBA0(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  _QWORD v4[5];

  v1 = *(_QWORD *)(a1 + 40);
  v2 = *(void **)(*(_QWORD *)(a1 + 32) + 632);
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_BC00;
  v4[3] = &unk_426E00;
  v4[4] = v1;
  return objc_msgSend(v2, "enumeratePageHostsUsingBlock:", v4);
}

id sub_BC00(uint64_t a1, void *a2)
{
  return objc_msgSend(objc_msgSend(a2, "containerView"), "setBackgroundColor:", *(_QWORD *)(a1 + 32));
}

id sub_C478(uint64_t a1)
{
  return objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "scrubberCallout"), "setAlpha:", 0.0);
}

id sub_C53C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *v3;
  _QWORD v5[6];

  v2 = *(_QWORD *)(a1 + 32);
  v3 = *(void **)(v2 + 632);
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_C59C;
  v5[3] = &unk_426E78;
  v5[4] = v2;
  v5[5] = a2;
  return objc_msgSend(v3, "syncPerformBlock:", v5);
}

id sub_C59C(uint64_t a1)
{
  __int128 v1;
  void *v2;
  _QWORD v4[4];
  __int128 v5;

  v1 = *(_OWORD *)(a1 + 32);
  v2 = *(void **)(*(_QWORD *)(a1 + 32) + 632);
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_C600;
  v4[3] = &unk_426E50;
  v5 = v1;
  return objc_msgSend(v2, "enumeratePageHostsUsingBlock:", v4);
}

id sub_C600(uint64_t a1, void *a2)
{
  id result;

  result = objc_msgSend(*(id *)(a1 + 32), "p_relativePageIndexForPageInfo:", objc_msgSend(a2, "pageInfo"));
  if (result != (id)0x7FFFFFFFFFFFFFFFLL)
    return (id)(*(uint64_t (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
  return result;
}

id sub_C714(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *v3;
  _QWORD v5[6];

  v2 = *(_QWORD *)(a1 + 32);
  v3 = *(void **)(v2 + 632);
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_C774;
  v5[3] = &unk_426E78;
  v5[4] = v2;
  v5[5] = a2;
  return objc_msgSend(v3, "syncPerformBlock:", v5);
}

id sub_C774(uint64_t a1)
{
  __int128 v1;
  void *v2;
  _QWORD v4[4];
  __int128 v5;

  v1 = *(_OWORD *)(a1 + 32);
  v2 = *(void **)(*(_QWORD *)(a1 + 32) + 632);
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_C7D8;
  v4[3] = &unk_426E50;
  v5 = v1;
  return objc_msgSend(v2, "enumeratePageHostsUsingBlock:", v4);
}

id sub_C7D8(uint64_t a1, void *a2)
{
  id result;

  result = objc_msgSend(*(id *)(a1 + 32), "p_relativePageIndexForPageInfo:", objc_msgSend(a2, "pageInfo"));
  if (result != (id)0x7FFFFFFFFFFFFFFFLL)
    return (id)(*(uint64_t (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
  return result;
}

id sub_CDC0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *v3;
  _QWORD v5[6];

  v2 = *(_QWORD *)(a1 + 32);
  v3 = *(void **)(v2 + 632);
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_CE20;
  v5[3] = &unk_426E78;
  v5[4] = v2;
  v5[5] = a2;
  return objc_msgSend(v3, "syncPerformBlock:", v5);
}

char *sub_CE20(uint64_t a1)
{
  __int128 v2;
  void *v3;
  char *result;
  char *v5;
  _QWORD v6[4];
  __int128 v7;

  v2 = *(_OWORD *)(a1 + 32);
  v3 = *(void **)(*(_QWORD *)(a1 + 32) + 632);
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  v6[2] = sub_CF28;
  v6[3] = &unk_426E50;
  v7 = v2;
  objc_msgSend(v3, "enumeratePageHostsUsingBlock:", v6);
  if (objc_msgSend(*(id *)(a1 + 32), "leftOverscrollView")
    && !objc_msgSend(*(id *)(a1 + 32), "currentRelativePageIndex"))
  {
    (*(void (**)(_QWORD, id, uint64_t))(*(_QWORD *)(a1 + 40) + 16))(*(_QWORD *)(a1 + 40), objc_msgSend(*(id *)(a1 + 32), "leftOverscrollView"), -1);
  }
  result = (char *)objc_msgSend(*(id *)(a1 + 32), "rightOverscrollView");
  if (result)
  {
    v5 = (char *)objc_msgSend(*(id *)(a1 + 32), "currentRelativePageIndex");
    result = (char *)objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "activeSectionController"), "pageCount");
    if (v5 == result - 1)
      return (char *)(*(uint64_t (**)(_QWORD, id, id))(*(_QWORD *)(a1 + 40) + 16))(*(_QWORD *)(a1 + 40), objc_msgSend(*(id *)(a1 + 32), "rightOverscrollView"), objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "activeSectionController"), "pageCount"));
  }
  return result;
}

uint64_t sub_CF28(uint64_t a1, void *a2)
{
  objc_msgSend(*(id *)(a1 + 32), "p_relativePageIndexForPageInfo:", objc_msgSend(a2, "pageInfo"));
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
}

void sub_D160(uint64_t a1)
{
  char *v2;
  __int128 v3;
  uint64_t v4;
  char *v5;
  char *v7;
  id v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  void *v12;
  id v13;
  id v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  void *i;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  id v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  uint8_t buf[4];
  char *v30;
  __int16 v31;
  id v32;
  _BYTE v33[128];

  v2 = (char *)objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "activeSectionController"), "relativePageRangeForCanvasRect:pad:", 0, *(double *)(a1 + 72), *(double *)(a1 + 80), *(double *)(a1 + 88), *(double *)(a1 + 96));
  v5 = &v2[v4];
  if (v2 != (char *)0x7FFFFFFFFFFFFFFFLL && v2 < v5)
  {
    v7 = v2;
    *(_QWORD *)&v3 = 134218242;
    v24 = v3;
    do
    {
      v8 = objc_msgSend(*(id *)(a1 + 40), "pageInfoForRelativePageIndex:forPresentationType:", v7, *(_QWORD *)(a1 + 48), v24);
      if (v8)
      {
        v10 = v8;
        v11 = objc_opt_class(THPageRep, v9);
        v12 = (void *)TSUDynamicCast(v11, objc_msgSend(*(id *)(a1 + 56), "repForInfo:", v10));
        if (v12)
        {
          v13 = objc_msgSend(objc_msgSend(v12, "childReps"), "copy");
          v25 = 0u;
          v26 = 0u;
          v27 = 0u;
          v28 = 0u;
          v14 = objc_msgSend(v13, "countByEnumeratingWithState:objects:count:", &v25, v33, 16);
          if (v14)
          {
            v16 = v14;
            v17 = *(_QWORD *)v26;
            do
            {
              for (i = 0; i != v16; i = (char *)i + 1)
              {
                if (*(_QWORD *)v26 != v17)
                  objc_enumerationMutation(v13);
                v19 = *(_QWORD *)(*((_QWORD *)&v25 + 1) + 8 * (_QWORD)i);
                v20 = objc_opt_class(THBodyRep, v15);
                v21 = TSUDynamicCast(v20, v19);
                if (v21)
                  objc_msgSend(*(id *)(a1 + 64), "addObject:", v21);
              }
              v16 = objc_msgSend(v13, "countByEnumeratingWithState:objects:count:", &v25, v33, 16);
            }
            while (v16);
          }
        }
      }
      else
      {
        v22 = BCReadingStatisticsLog();
        if (os_log_type_enabled(v22, OS_LOG_TYPE_ERROR))
        {
          v23 = objc_msgSend(*(id *)(a1 + 40), "description");
          *(_DWORD *)buf = v24;
          v30 = v7;
          v31 = 2114;
          v32 = v23;
          _os_log_error_impl(&dword_0, v22, OS_LOG_TYPE_ERROR, "Can't find pageInfo for pageIndex %lu in navigation unit %{public}@", buf, 0x16u);
        }
      }
      ++v7;
    }
    while (v7 != v5);
  }
}

id sub_D578(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7)
{
  id v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  id v19;
  uint64_t v20;

  v14 = +[BCProgressKitController sharedController](BCProgressKitController, "sharedController");
  objc_msgSend(v14, "activateChapterForBook:chapterID:title:completion:", a2, a3, a4, 0);
  if (a5)
    objc_msgSend(v14, "activateSectionForBook:chapterID:sectionID:title:completion:", a2, a3, a5, a6, 0);
  v15 = (void *)BUProtocolCast(&OBJC_PROTOCOL___THWWidgetInfo, objc_msgSend(*(id *)(a1 + 32), "info"));
  v16 = a7;
  if (v15)
  {
    v16 = objc_msgSend(objc_msgSend(objc_msgSend(objc_msgSend(v15, "adornmentInfo"), "title"), "containedStorage"), "stringValue");
    if (!objc_msgSend(v16, "length"))
      v16 = a7;
  }
  v17 = objc_msgSend(objc_msgSend(*(id *)(a1 + 40), "documentNavigator"), "storageAnchorForBookmarksUsingViewCenter:", objc_msgSend(*(id *)(a1 + 40), "isTwoUp") ^ 1);
  v18 = objc_msgSend(*(id *)(a1 + 40), "currentContentNode");
  v19 = objc_msgSend(v17, "range");
  return objc_msgSend(v14, "activateWidgetForBook:chapterID:sectionID:widgetID:title:trackingProvider:cfi:completion:", a2, a3, a5, a7, v16, *(_QWORD *)(a1 + 32), objc_msgSend(v18, "cfiForRange:storageUID:includeFilename:pedantic:", v19, v20, objc_msgSend(v17, "storageUID"), 0, 1), 0);
}

void sub_D7D0(uint64_t a1, uint64_t a2)
{
  void *v3;
  id v4;
  id v5;
  id v6;
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;
  id v11;
  uint64_t v12;
  void *v13;
  id v14;
  id v15;
  id obj;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  _BYTE v26[128];

  v3 = (void *)objc_opt_new(NSMutableArray, a2);
  v4 = objc_msgSend(objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "documentRoot"), "navigationModel"), "navigationUnits");
  v22 = 0u;
  v23 = 0u;
  v24 = 0u;
  v25 = 0u;
  obj = v4;
  v5 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v22, v26, 16);
  if (v5)
  {
    v6 = v5;
    v7 = 0;
    v21 = *(_QWORD *)v23;
    v20 = BCProgressContextTreeKey_uniqueID;
    v19 = BCProgressContextTreeKey_title;
    v18 = BCProgressContextTreeKey_displayOrder;
    v17 = BCProgressContextTreeKey_cfi;
    do
    {
      v8 = 0;
      do
      {
        if (*(_QWORD *)v23 != v21)
          objc_enumerationMutation(obj);
        v9 = *(void **)(*((_QWORD *)&v22 + 1) + 8 * (_QWORD)v8);
        v10 = objc_msgSend(objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "documentRoot"), "navigationModel"), "uniqueIdentifierForNavigationUnit:", v9);
        v11 = objc_msgSend(objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "documentRoot"), "navigationModel"), "parentTitleForNavigationUnit:", v9);
        v13 = (void *)objc_opt_new(NSMutableDictionary, v12);
        objc_msgSend(v13, "setValue:forKey:", v10, v20);
        objc_msgSend(v13, "setValue:forKey:", v11, v19);
        objc_msgSend(v13, "setValue:forKey:", +[NSNumber numberWithInteger:](NSNumber, "numberWithInteger:", (char *)v8 + v7), v18);
        v14 = objc_msgSend(objc_msgSend(v9, "contentNodes"), "firstObject");
        v15 = objc_msgSend(v14, "cfiForOffset:storageUID:includeFilename:pedantic:", 0, objc_msgSend(v14, "nodeGUID"), 0, 1);
        if (objc_msgSend(v15, "length"))
          objc_msgSend(v13, "setValue:forKey:", v15, v17);
        objc_msgSend(v3, "addObject:", v13);

        v8 = (char *)v8 + 1;
      }
      while (v6 != v8);
      v6 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v22, v26, 16);
      v7 += (uint64_t)v8;
    }
    while (v6);
  }
  if (objc_msgSend(v3, "count"))
    objc_msgSend(*(id *)(a1 + 40), "buildContextTree:forBook:completion:", v3, *(_QWORD *)(a1 + 48), 0);

}

id sub_DBA4(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "p_updateScrubberCheckToolbarState:", 1);
}

id sub_E888(uint64_t a1)
{
  +[CATransaction begin](CATransaction, "begin");
  objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "bookNavigationDelegate"), "vantageDidChangeBy:reason:", *(_QWORD *)(a1 + 32), CFSTR("THVantageChangeReasonPresentationMode"));
  return +[CATransaction commit](CATransaction, "commit");
}

void sub_F284(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19)
{
  _Unwind_Resume(exception_object);
}

id sub_F2A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _BYTE *a5)
{
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  id result;
  id v13;
  id v14;
  unsigned int v15;
  id v16;
  uint64_t v17;
  id v18;

  v8 = objc_opt_class(TSWPDrawableAttachment, a2);
  v9 = (void *)TSUDynamicCast(v8, a2);
  v11 = objc_opt_class(THWAnchoredWidgetInfo, v10);
  result = (id)TSUDynamicCast(v11, objc_msgSend(v9, "drawable"));
  if (result)
  {
    result = objc_msgSend(result, "widgetInfo");
    if (result == *(id *)(a1 + 32))
    {
      v13 = objc_msgSend(v9, "findCharIndex");
      result = objc_msgSend(objc_msgSend(*(id *)(a1 + 40), "reflowablePaginationController"), "paginationResultForContentNode:", *(_QWORD *)(a1 + 48));
      if (result)
      {
        v14 = objc_msgSend(result, "firstPageIndexIntersectingRange:", v13, 1);
        v15 = objc_msgSend(*(id *)(a1 + 40), "inFlowMode");
        v16 = objc_msgSend(objc_msgSend(*(id *)(a1 + 40), "documentRoot"), "navigationModel");
        v17 = *(_QWORD *)(a1 + 48);
        v18 = +[THPresentationType paginatedPresentationTypeInContext:](THPresentationType, "paginatedPresentationTypeInContext:", objc_msgSend(objc_msgSend(*(id *)(a1 + 40), "documentRoot"), "context"));
        if (v15)
        {
          result = objc_msgSend(v16, "absolutePageIndexForContentNodeRelativePageIndex:inContentNode:forPresentationType:", v14, v17, v18);
          if (result != (id)0x7FFFFFFFFFFFFFFFLL)
            result = objc_msgSend(objc_msgSend(*(id *)(a1 + 40), "documentNavigator"), "setVisibleAbsolutePhysicalPageIndex:", result);
        }
        else
        {
          result = objc_msgSend(v16, "navigationUnitRelativePageIndexForContentNodeRelativePageIndex:inContentNode:forPresentationType:", v14, v17, v18);
          if (result != (id)0x7FFFFFFFFFFFFFFFLL)
          {
            objc_msgSend(objc_msgSend(*(id *)(a1 + 40), "activeSectionController"), "canvasRectForRelativePageIndex:", result);
            result = objc_msgSend(*(id *)(a1 + 40), "p_setUnscaledCanvasRect:");
          }
        }
      }
      *a5 = 1;
      *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 24) = 1;
    }
  }
  return result;
}

void sub_11174(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_11194(uint64_t a1, uint64_t a2)
{
  _Block_object_assign((void *)(a1 + 40), *(const void **)(a2 + 40), 131);
}

void sub_111A4(uint64_t a1)
{
  _Block_object_dispose(*(const void **)(a1 + 40), 131);
}

id sub_111B4(uint64_t a1)
{
  return objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40), "corruptBookAlert");
}

id sub_126E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return objc_msgSend(+[BCProgressKitController sharedController](BCProgressKitController, "sharedController"), "updateWidgetProgressForBook:chapterID:sectionID:widgetID:percent:completion:", a2, a3, a5, a7, *(_QWORD *)(a1 + 32), 0);
}

id sub_127C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return objc_msgSend(+[BCProgressKitController sharedController](BCProgressKitController, "sharedController"), "updateWidgetScoreForBook:chapterID:sectionID:widgetID:score:total:completion:", a2, a3, a5, a7, *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), 0);
}

void sub_12860(id a1, NSString *a2, NSString *a3, NSString *a4, NSString *a5, NSString *a6, NSString *a7)
{
  objc_msgSend(+[BCProgressKitController sharedController](BCProgressKitController, "sharedController", a3, a4, a5, a6), "resetWidgetAttemptForBook:chapterID:sectionID:widgetID:completion:", a2, a3, a5, a7, 0);
}

id sub_129A8(uint64_t a1)
{
  return objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "contentPageNumberView"), "setAlpha:", 0.0);
}

id sub_12B70(uint64_t a1)
{
  return objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "contentPageNumberView"), "setAlpha:", 1.0);
}

id sub_12D40(uint64_t a1)
{
  return objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "contentPageNumberView"), "setAlpha:", 1.0);
}

id sub_1334C(uint64_t a1)
{
  id v1;
  id result;
  id v3;
  uint64_t v4;
  void *v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _BYTE v10[128];

  v6 = 0u;
  v7 = 0u;
  v8 = 0u;
  v9 = 0u;
  v1 = objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "canvas", 0), "topLevelReps");
  result = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v6, v10, 16);
  if (result)
  {
    v3 = result;
    v4 = *(_QWORD *)v7;
    do
    {
      v5 = 0;
      do
      {
        if (*(_QWORD *)v7 != v4)
          objc_enumerationMutation(v1);
        objc_msgSend(*(id *)(*((_QWORD *)&v6 + 1) + 8 * (_QWORD)v5), "recursivelyPerformSelectorIfImplemented:", "canvasDidScrollInFlowMode");
        v5 = (char *)v5 + 1;
      }
      while (v3 != v5);
      result = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v6, v10, 16);
      v3 = result;
    }
    while (result);
  }
  return result;
}

id sub_140F4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *v3;
  _QWORD v5[6];

  v2 = *(_QWORD *)(a1 + 32);
  v3 = *(void **)(v2 + 632);
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_14154;
  v5[3] = &unk_426E78;
  v5[4] = v2;
  v5[5] = a2;
  return objc_msgSend(v3, "syncPerformBlock:", v5);
}

id sub_14154(uint64_t a1)
{
  __int128 v1;
  void *v2;
  _QWORD v4[4];
  __int128 v5;

  v1 = *(_OWORD *)(a1 + 32);
  v2 = *(void **)(*(_QWORD *)(a1 + 32) + 632);
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_141B8;
  v4[3] = &unk_426E50;
  v5 = v1;
  return objc_msgSend(v2, "enumeratePageHostsUsingBlock:", v4);
}

id sub_141B8(uint64_t a1, void *a2)
{
  id result;

  result = objc_msgSend(*(id *)(a1 + 32), "p_relativePageIndexForPageInfo:", objc_msgSend(a2, "pageInfo"));
  if (result != (id)0x7FFFFFFFFFFFFFFFLL)
    return (id)(*(uint64_t (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
  return result;
}

id sub_14318(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *v3;
  _QWORD v5[6];

  v2 = *(_QWORD *)(a1 + 32);
  v3 = *(void **)(v2 + 632);
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_14378;
  v5[3] = &unk_426E78;
  v5[4] = v2;
  v5[5] = a2;
  return objc_msgSend(v3, "syncPerformBlock:", v5);
}

id sub_14378(uint64_t a1)
{
  __int128 v1;
  void *v2;
  _QWORD v4[4];
  __int128 v5;

  v1 = *(_OWORD *)(a1 + 32);
  v2 = *(void **)(*(_QWORD *)(a1 + 32) + 632);
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_143DC;
  v4[3] = &unk_426E50;
  v5 = v1;
  return objc_msgSend(v2, "enumeratePageHostsUsingBlock:", v4);
}

id sub_143DC(uint64_t a1, void *a2)
{
  id result;

  result = objc_msgSend(*(id *)(a1 + 32), "p_relativePageIndexForPageInfo:", objc_msgSend(a2, "pageInfo"));
  if (result != (id)0x7FFFFFFFFFFFFFFFLL)
    return (id)(*(uint64_t (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
  return result;
}

id sub_14534(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *v3;
  _QWORD v5[6];

  v2 = *(_QWORD *)(a1 + 32);
  v3 = *(void **)(v2 + 632);
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_14594;
  v5[3] = &unk_426E78;
  v5[4] = v2;
  v5[5] = a2;
  return objc_msgSend(v3, "syncPerformBlock:", v5);
}

id sub_14594(uint64_t a1)
{
  __int128 v1;
  void *v2;
  _QWORD v4[4];
  __int128 v5;

  v1 = *(_OWORD *)(a1 + 32);
  v2 = *(void **)(*(_QWORD *)(a1 + 32) + 632);
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_145F8;
  v4[3] = &unk_426E50;
  v5 = v1;
  return objc_msgSend(v2, "enumeratePageHostsUsingBlock:", v4);
}

id sub_145F8(uint64_t a1, void *a2)
{
  id result;

  result = objc_msgSend(*(id *)(a1 + 32), "p_relativePageIndexForPageInfo:", objc_msgSend(a2, "pageInfo"));
  if (result != (id)0x7FFFFFFFFFFFFFFFLL)
    return (id)(*(uint64_t (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
  return result;
}

id sub_14BFC(uint64_t a1, uint64_t a2)
{
  id v4;
  _QWORD v6[6];

  v4 = objc_msgSend(*(id *)(a1 + 32), "pageViewProvider");
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  v6[2] = sub_14C68;
  v6[3] = &unk_426E78;
  v6[4] = *(_QWORD *)(a1 + 32);
  v6[5] = a2;
  return objc_msgSend(v4, "syncPerformBlock:", v6);
}

id sub_14C68(uint64_t a1)
{
  __int128 v1;
  void *v2;
  _QWORD v4[4];
  __int128 v5;

  v1 = *(_OWORD *)(a1 + 32);
  v2 = *(void **)(*(_QWORD *)(a1 + 32) + 632);
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_14CCC;
  v4[3] = &unk_426E50;
  v5 = v1;
  return objc_msgSend(v2, "enumeratePageHostsUsingBlock:", v4);
}

id sub_14CCC(uint64_t a1, void *a2)
{
  id result;

  result = objc_msgSend(*(id *)(a1 + 32), "p_relativePageIndexForPageInfo:", objc_msgSend(a2, "pageInfo"));
  if (result != (id)0x7FFFFFFFFFFFFFFFLL)
    return (id)(*(uint64_t (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
  return result;
}

id sub_14E18(uint64_t a1, uint64_t a2)
{
  id v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD v8[7];

  v4 = objc_msgSend(*(id *)(a1 + 32), "pageViewProvider");
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472;
  v8[2] = sub_14E88;
  v8[3] = &unk_4270E0;
  v5 = *(_QWORD *)(a1 + 32);
  v6 = *(_QWORD *)(a1 + 40);
  v8[5] = a2;
  v8[6] = v6;
  v8[4] = v5;
  return objc_msgSend(v4, "syncPerformBlock:", v8);
}

id sub_14E88(uint64_t a1)
{
  uint64_t v1;
  __int128 v2;
  void *v3;
  _QWORD v5[4];
  __int128 v6;
  uint64_t v7;

  v1 = *(_QWORD *)(a1 + 48);
  v2 = *(_OWORD *)(a1 + 32);
  v3 = *(void **)(*(_QWORD *)(a1 + 32) + 632);
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_14EF4;
  v5[3] = &unk_4270B8;
  v7 = v1;
  v6 = v2;
  return objc_msgSend(v3, "enumeratePageHostsUsingBlock:", v5);
}

id sub_14EF4(uint64_t a1, void *a2)
{
  id result;

  result = objc_msgSend(*(id *)(a1 + 32), "p_relativePageIndexForPageInfo:", objc_msgSend(a2, "pageInfo"));
  if (result != (id)0x7FFFFFFFFFFFFFFFLL && result != *(id *)(a1 + 48))
    return (id)(*(uint64_t (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
  return result;
}

id sub_16150(uint64_t a1)
{
  return objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "overscrollTransitionView"), "setAlpha:", 0.0);
}

id sub_1616C(uint64_t a1)
{
  objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "overscrollTransitionView"), "removeFromSuperview");
  objc_msgSend(*(id *)(a1 + 32), "setOverscrollTransitionView:", 0);
  return objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "canvasViewController"), "becomeFirstResponder");
}

id sub_16310(uint64_t a1)
{
  double v2;
  double v3;
  double v4;
  double v5;

  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + OBJC_IVAR___TSADocumentViewController__scrollView), "frame");
  return objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "overscrollTransitionView"), "setFrame:", v2, v3, v4, v5);
}

id sub_16380(uint64_t a1)
{
  *(_BYTE *)(*(_QWORD *)(a1 + 32) + 392) = 1;
  return objc_msgSend(*(id *)(a1 + 32), "setCurrentNavigationUnit:", *(_QWORD *)(a1 + 40));
}

id sub_16700(uint64_t a1)
{
  return objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "overscrollTransitionView"), "setFrame:", *(double *)(a1 + 40), *(double *)(a1 + 48), *(double *)(a1 + 56), *(double *)(a1 + 64));
}

id sub_16740(uint64_t a1)
{
  double v2;
  double v3;
  double v4;
  _QWORD v6[4];
  __int128 v7;

  v2 = *(double *)(a1 + 56);
  v3 = *(double *)(a1 + 72);
  v4 = *(double *)(a1 + 80);
  objc_msgSend(*(id *)(a1 + 32), "removeFromSuperview");
  objc_msgSend(*(id *)(a1 + 32), "setFrame:", v2, 0.0, v3, v4);
  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 40) + OBJC_IVAR___TSADocumentViewController__scrollView), "insertSubview:atIndex:", *(_QWORD *)(a1 + 32), 0);
  objc_msgSend(objc_msgSend(objc_msgSend(objc_msgSend(*(id *)(a1 + 40), "interactiveCanvasController"), "layerHost"), "canvasLayer"), "popLayoutDisabled");
  *(_BYTE *)(*(_QWORD *)(a1 + 40) + 393) = 0;
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  v6[2] = sub_16838;
  v6[3] = &unk_426E28;
  v7 = *(_OWORD *)(a1 + 40);
  return -[NSOperationQueue addOperation:](+[NSOperationQueue mainQueue](NSOperationQueue, "mainQueue"), "addOperation:", +[NSBlockOperation blockOperationWithBlock:](NSBlockOperation, "blockOperationWithBlock:", v6));
}

id sub_16838(uint64_t a1)
{
  *(_BYTE *)(*(_QWORD *)(a1 + 32) + 392) = 1;
  objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "documentNavigator"), "clearFlowAnchorCache");
  objc_msgSend(*(id *)(a1 + 32), "p_verticalOverscrollSetPreviousChapterNavigationUnit:", *(_QWORD *)(a1 + 40));
  objc_msgSend(*(id *)(a1 + 32), "updateVisibleInfos");
  return objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "bookNavigationDelegate"), "vantageDidChangeBy:reason:", *(_QWORD *)(a1 + 32), CFSTR("THVantageChangeReasonScrolling"));
}

id sub_16B2C(uint64_t a1)
{
  return objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "overscrollTransitionView"), "setFrame:", *(double *)(a1 + 40), *(double *)(a1 + 48), *(double *)(a1 + 56), *(double *)(a1 + 64));
}

id sub_16B6C(uint64_t a1)
{
  double v2;
  double v3;
  double v4;
  _QWORD v6[4];
  __int128 v7;

  v2 = *(double *)(a1 + 56);
  v3 = *(double *)(a1 + 72);
  v4 = *(double *)(a1 + 80);
  objc_msgSend(*(id *)(a1 + 32), "removeFromSuperview");
  objc_msgSend(*(id *)(a1 + 32), "setFrame:", v2, 0.0, v3, v4);
  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 40) + OBJC_IVAR___TSADocumentViewController__scrollView), "insertSubview:atIndex:", *(_QWORD *)(a1 + 32), 0);
  objc_msgSend(objc_msgSend(objc_msgSend(objc_msgSend(*(id *)(a1 + 40), "interactiveCanvasController"), "layerHost"), "canvasLayer"), "popLayoutDisabled");
  *(_BYTE *)(*(_QWORD *)(a1 + 40) + 393) = 0;
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  v6[2] = sub_16C64;
  v6[3] = &unk_426E28;
  v7 = *(_OWORD *)(a1 + 40);
  return -[NSOperationQueue addOperation:](+[NSOperationQueue mainQueue](NSOperationQueue, "mainQueue"), "addOperation:", +[NSBlockOperation blockOperationWithBlock:](NSBlockOperation, "blockOperationWithBlock:", v6));
}

id sub_16C64(uint64_t a1)
{
  *(_BYTE *)(*(_QWORD *)(a1 + 32) + 392) = 1;
  objc_msgSend(*(id *)(a1 + 32), "setCurrentNavigationUnit:", *(_QWORD *)(a1 + 40));
  objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "documentNavigator"), "clearFlowAnchorCache");
  objc_msgSend(*(id *)(a1 + 32), "p_setUnscaledCanvasRect:", TSDRectWithSize(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + OBJC_IVAR___TSADocumentViewController__scrollView), "bounds")));
  return objc_msgSend(*(id *)(a1 + 32), "updateVisibleInfos");
}

uint64_t sub_170EC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t result;

  v2 = OBJC_IVAR___TSADocumentViewController__scrollView;
  objc_msgSend(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + OBJC_IVAR___TSADocumentViewController__scrollView), "layer"), "removeAnimationForKey:", CFSTR("slide-pages"));
  v3 = *(_QWORD *)(a1 + 48);
  if (v3)
    (*(void (**)(void))(v3 + 16))();
  objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "documentNavigator"), "setVisibleAbsolutePhysicalPageIndex:", *(_QWORD *)(a1 + 64));
  objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "interactiveCanvasController"), "popThreadedLayoutAndRenderDisabled");
  objc_msgSend(objc_msgSend(objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "interactiveCanvasController"), "layerHost"), "canvasLayer"), "popLayoutDisabled");
  +[CATransaction flush](CATransaction, "flush");
  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + v2), "setUserInteractionEnabled:", 1);
  v4 = *(void **)(a1 + 40);
  if (v4 && *(_BYTE *)(a1 + 72))
    objc_msgSend(v4, "setPreventBounceAnimation:", 1);
  result = *(_QWORD *)(a1 + 56);
  if (result)
    return (*(uint64_t (**)(void))(result + 16))();
  return result;
}

id sub_171B8(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  unint64_t v3;
  _QWORD v5[5];

  v1 = *(_QWORD *)(a1 + 32);
  v2 = *(void **)(v1 + 640);
  v3 = (unint64_t)*(double *)(a1 + 40);
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_17224;
  v5[3] = &unk_427218;
  v5[4] = v1;
  return objc_msgSend(v2, "animateOverscrollWithDuration:enumerator:", v3, v5);
}

id sub_17224(uint64_t a1, uint64_t a2)
{
  void *v2;
  _QWORD v4[5];

  v2 = *(void **)(*(_QWORD *)(a1 + 32) + 632);
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_17284;
  v4[3] = &unk_4271F0;
  v4[4] = a2;
  return objc_msgSend(v2, "enumeratePageHostsUsingBlock:", v4);
}

uint64_t sub_17284(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

id sub_17324(uint64_t a1)
{
  double v2;
  double v3;

  *(_BYTE *)(*(_QWORD *)(a1 + 32) + 393) = 0;
  objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "view"), "addSubview:", objc_msgSend(*(id *)(a1 + 32), "overscrollTransitionView"));
  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + OBJC_IVAR___TSADocumentViewController__scrollView), "center");
  objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "overscrollTransitionView"), "setCenter:", v2, v3);
  *(_BYTE *)(*(_QWORD *)(a1 + 32) + 392) = 1;
  objc_msgSend(*(id *)(a1 + 32), "setLastStorageAnchor:", 0);
  return objc_msgSend(*(id *)(a1 + 32), "setJustUpdatedPresentationType:", 0);
}

id sub_173D4(uint64_t a1)
{
  return objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "bookNavigationDelegate"), "vantageDidChangeBy:reason:", *(_QWORD *)(a1 + 32), CFSTR("THVantageChangeReasonScrolling"));
}

id sub_17788(uint64_t a1)
{
  return objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "scrubber"), "setHidden:", *(unsigned __int8 *)(a1 + 40));
}

id sub_18328(uint64_t a1)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 40);
  if (v2)
    (*(void (**)(void))(v2 + 16))();
  return objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "view"), "setUserInteractionEnabled:", 1);
}

id sub_18ABC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7)
{
  id v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  id v19;
  uint64_t v20;

  v14 = +[BCProgressKitController sharedController](BCProgressKitController, "sharedController");
  objc_msgSend(v14, "activateChapterForBook:chapterID:title:completion:", a2, a3, a4, 0);
  if (a5)
    objc_msgSend(v14, "activateSectionForBook:chapterID:sectionID:title:completion:", a2, a3, a5, a6, 0);
  v15 = (void *)BUProtocolCast(&OBJC_PROTOCOL___THWWidgetInfo, *(_QWORD *)(a1 + 32));
  v16 = a7;
  if (v15)
  {
    v16 = objc_msgSend(objc_msgSend(objc_msgSend(objc_msgSend(v15, "adornmentInfo"), "title"), "containedStorage"), "stringValue");
    if (!objc_msgSend(v16, "length"))
      v16 = a7;
  }
  v17 = objc_msgSend(objc_msgSend(*(id *)(a1 + 40), "documentNavigator"), "storageAnchorForBookmarksUsingViewCenter:", objc_msgSend(*(id *)(a1 + 40), "isTwoUp") ^ 1);
  v18 = objc_msgSend(*(id *)(a1 + 40), "currentContentNode");
  v19 = objc_msgSend(v17, "range");
  objc_msgSend(v14, "activateWidgetForBook:chapterID:sectionID:widgetID:title:trackingProvider:cfi:completion:", a2, a3, a5, a7, v16, 0, objc_msgSend(v18, "cfiForRange:storageUID:includeFilename:pedantic:", v19, v20, objc_msgSend(v17, "storageUID"), 0, 1), 0);
  return objc_msgSend(v14, "updateWidgetProgressForBook:chapterID:sectionID:widgetID:percent:completion:", a2, a3, a5, a7, &off_468F18, 0);
}

void sub_18E7C(id a1, NSString *a2, NSString *a3, NSString *a4, NSString *a5, NSString *a6, NSString *a7)
{
  objc_msgSend(+[BCProgressKitController sharedController](BCProgressKitController, "sharedController", a3, a4, a5, a6, a7), "deactivateCurrentWidgetForBook:completion:", a2, 0);
}

id sub_19908(uint64_t a1)
{
  return objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "interactiveCanvasController"), "handleHyperlinkWithURL:", *(_QWORD *)(a1 + 40));
}

id sub_19A50(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "setHighlightedHyperlinkField:", *(_QWORD *)(a1 + 40));
}

id sub_19A5C(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "setHighlightedHyperlinkField:", 0);
}

id sub_19A68(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 32), "setHighlightedHyperlinkField:", 0);
  return objc_msgSend(objc_msgSend(*(id *)(a1 + 40), "interactiveCanvasController"), "handleHyperlink:hitRep:", *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 32));
}

id sub_19C70(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "setHighlightedHyperlinkField:", *(_QWORD *)(a1 + 40));
}

id sub_19C7C(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "setHighlightedHyperlinkField:", 0);
}

id sub_19C88(uint64_t a1)
{
  void *v2;
  _QWORD v4[4];
  __int128 v5;
  uint64_t v6;

  objc_msgSend(*(id *)(a1 + 32), "setHighlightedHyperlinkField:", 0);
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_19CFC;
  v4[3] = &unk_426F18;
  v5 = *(_OWORD *)(a1 + 48);
  v2 = *(void **)(a1 + 40);
  v6 = *(_QWORD *)(a1 + 32);
  return objc_msgSend(v2, "dismissExpandedAnimatedWithCompletionBlock:", v4);
}

id sub_19CFC(uint64_t a1)
{
  return objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "interactiveCanvasController"), "handleHyperlink:hitRep:", *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48));
}

id sub_1AEE4(uint64_t a1)
{
  void *v1;
  id result;
  id v3;
  uint64_t v4;
  void *v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _BYTE v10[128];

  v6 = 0u;
  v7 = 0u;
  v8 = 0u;
  v9 = 0u;
  v1 = *(void **)(*(_QWORD *)(a1 + 32) + 504);
  result = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v6, v10, 16);
  if (result)
  {
    v3 = result;
    v4 = *(_QWORD *)v7;
    do
    {
      v5 = 0;
      do
      {
        if (*(_QWORD *)v7 != v4)
          objc_enumerationMutation(v1);
        objc_msgSend(*(id *)(*((_QWORD *)&v6 + 1) + 8 * (_QWORD)v5), "setAlpha:", 1.0);
        v5 = (char *)v5 + 1;
      }
      while (v3 != v5);
      result = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v6, v10, 16);
      v3 = result;
    }
    while (result);
  }
  return result;
}

id sub_1B098(uint64_t a1)
{
  void *v1;
  id result;
  id v3;
  uint64_t v4;
  void *v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _BYTE v10[128];

  v6 = 0u;
  v7 = 0u;
  v8 = 0u;
  v9 = 0u;
  v1 = *(void **)(*(_QWORD *)(a1 + 32) + 504);
  result = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v6, v10, 16);
  if (result)
  {
    v3 = result;
    v4 = *(_QWORD *)v7;
    do
    {
      v5 = 0;
      do
      {
        if (*(_QWORD *)v7 != v4)
          objc_enumerationMutation(v1);
        objc_msgSend(*(id *)(*((_QWORD *)&v6 + 1) + 8 * (_QWORD)v5), "setAlpha:", 0.0);
        v5 = (char *)v5 + 1;
      }
      while (v3 != v5);
      result = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v6, v10, 16);
      v3 = result;
    }
    while (result);
  }
  return result;
}

void sub_1B188(uint64_t a1)
{
  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 504), "makeObjectsPerformSelector:", "removeFromSuperview");

  *(_QWORD *)(*(_QWORD *)(a1 + 32) + 504) = 0;
  *(_QWORD *)(*(_QWORD *)(a1 + 32) + 512) = 0;
}

id sub_1B350(uint64_t a1)
{
  return objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "bookNavigationDelegate"), "closeDocument");
}

id sub_1B5F8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  void *v3;
  _QWORD v5[4];
  __int128 v6;
  uint64_t v7;

  v2 = *(_OWORD *)(a1 + 32);
  v3 = *(void **)(*(_QWORD *)(a1 + 32) + 632);
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_1B660;
  v5[3] = &unk_427350;
  v6 = v2;
  v7 = a2;
  return objc_msgSend(v3, "syncPerformBlock:", v5);
}

id sub_1B660(uint64_t a1)
{
  __int128 v1;
  void *v2;
  _QWORD v4[4];
  __int128 v5;
  uint64_t v6;

  v1 = *(_OWORD *)(a1 + 32);
  v2 = *(void **)(*(_QWORD *)(a1 + 32) + 632);
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_1B6D0;
  v4[3] = &unk_427328;
  v5 = v1;
  v6 = *(_QWORD *)(a1 + 48);
  return objc_msgSend(v2, "enumeratePageHostsUsingBlock:", v4);
}

id sub_1B6D0(uint64_t a1, void *a2)
{
  id result;

  result = objc_msgSend(*(id *)(a1 + 40), "containsIndex:", objc_msgSend(*(id *)(a1 + 32), "p_relativePageIndexForPageInfo:", objc_msgSend(a2, "pageInfo")));
  if ((_DWORD)result)
    return (id)(*(uint64_t (**)(void))(*(_QWORD *)(a1 + 48) + 16))();
  return result;
}

id sub_1B938(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  void *v3;
  _QWORD v5[4];
  __int128 v6;
  uint64_t v7;

  v2 = *(_OWORD *)(a1 + 32);
  v3 = *(void **)(*(_QWORD *)(a1 + 32) + 632);
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_1B9A0;
  v5[3] = &unk_427350;
  v6 = v2;
  v7 = a2;
  return objc_msgSend(v3, "syncPerformBlock:", v5);
}

id sub_1B9A0(uint64_t a1)
{
  __int128 v2;
  void *v3;
  char *v4;
  char *v5;
  id result;
  _QWORD v7[4];
  __int128 v8;
  uint64_t v9;

  v2 = *(_OWORD *)(a1 + 32);
  v3 = *(void **)(*(_QWORD *)(a1 + 32) + 632);
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  v7[2] = sub_1BABC;
  v7[3] = &unk_427328;
  v8 = v2;
  v9 = *(_QWORD *)(a1 + 48);
  objc_msgSend(v3, "enumeratePageHostsUsingBlock:", v7);
  v4 = (char *)objc_msgSend(*(id *)(a1 + 32), "currentRelativePageIndex");
  if (objc_msgSend(*(id *)(a1 + 32), "leftOverscrollView") && (v4 == (char *)0x7FFFFFFFFFFFFFFFLL || !v4))
    (*(void (**)(_QWORD, id, uint64_t))(*(_QWORD *)(a1 + 48) + 16))(*(_QWORD *)(a1 + 48), objc_msgSend(*(id *)(a1 + 32), "leftOverscrollView"), -1);
  v5 = (char *)objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "activeSectionController"), "pageCount");
  result = objc_msgSend(*(id *)(a1 + 32), "rightOverscrollView");
  if (result && (v4 == (char *)0x7FFFFFFFFFFFFFFFLL || v4 == v5 - 1))
    return (id)(*(uint64_t (**)(_QWORD, id, char *))(*(_QWORD *)(a1 + 48) + 16))(*(_QWORD *)(a1 + 48), objc_msgSend(*(id *)(a1 + 32), "rightOverscrollView"), v5);
  return result;
}

id sub_1BABC(uint64_t a1, void *a2)
{
  id result;
  id v4;
  void *v5;

  result = objc_msgSend(*(id *)(a1 + 32), "p_relativePageIndexForPageInfo:", objc_msgSend(a2, "pageInfo"));
  if (result != (id)0x7FFFFFFFFFFFFFFFLL)
  {
    v4 = result;
    v5 = *(void **)(a1 + 40);
    if (!v5)
      return (id)(*(uint64_t (**)(void))(*(_QWORD *)(a1 + 48) + 16))();
    result = objc_msgSend(v5, "containsIndex:", v4);
    if ((_DWORD)result)
      return (id)(*(uint64_t (**)(void))(*(_QWORD *)(a1 + 48) + 16))();
  }
  return result;
}

void sub_1C0AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
  _Block_object_dispose(&a26, 8);
  _Unwind_Resume(a1);
}

id sub_1C0C4(uint64_t a1)
{
  double v2;
  double v3;
  double v4;
  double v5;

  objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "configuration"), "scrubberFrame");
  return objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "scrubber"), "setFrame:", v2, v3, v4, v5);
}

id sub_1C124(id result, void *a2)
{
  void *v2;
  double v3;
  double v4;
  double v5;

  if (*(_BYTE *)(*(_QWORD *)(*((_QWORD *)result + 5) + 8) + 24))
  {
    if (*((_BYTE *)result + 64))
    {
      v2 = (void *)*((_QWORD *)result + 4);
      v3 = *((double *)result + 6);
      v4 = *((double *)result + 7);
      objc_msgSend(a2, "transitionDuration");
      return objc_msgSend(v2, "bookViewWillAnimateRotationToSize:duration:", v3, v4, v5);
    }
  }
  return result;
}

id sub_1C18C(uint64_t a1)
{
  int v2;
  void *v3;
  double v4;
  double v5;

  v2 = *(unsigned __int8 *)(a1 + 56);
  v3 = *(void **)(a1 + 32);
  v4 = *(double *)(a1 + 40);
  v5 = *(double *)(a1 + 48);
  if (v2)
    objc_msgSend(v3, "bookViewDidRotateTransitionToSize:", v4, v5);
  else
    objc_msgSend(v3, "bookViewDidTransitionToSize:", v4, v5);
  objc_msgSend(*(id *)(a1 + 32), "setLastLayoutSize:", CGSizeZero.width, CGSizeZero.height);
  objc_msgSend(*(id *)(a1 + 32), "setIsTransitioning:", 0);
  return objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "canvasViewController"), "repositionGlossaryIfPopoverAnimated:", 0);
}

id sub_1C26C(uint64_t a1)
{
  return objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 632), "enumeratePageHostsUsingBlock:", &stru_427458);
}

void sub_1C288(id a1, THPageLayerAndSubviewHost *a2)
{
  id v2;

  v2 = -[TSDRep layout](-[THPageLayerAndSubviewHost rep](a2, "rep"), "layout");
  objc_msgSend(v2, "invalidatePosition");
  objc_msgSend(v2, "invalidate");
}

id sub_1C5D0(uint64_t a1)
{
  double MidX;
  double v3;
  double v4;
  _QWORD *v5;
  void *v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  CGRect v16;
  CGRect v17;

  if (*(_QWORD *)(*(_QWORD *)(a1 + 32) + 224))
    objc_msgSend(+[TSUAssertionHandler currentHandler](TSUAssertionHandler, "currentHandler"), "handleFailureInFunction:file:lineNumber:description:", +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "-[THDocumentViewController bookViewWillRotateTransitionToSize:duration:]_block_invoke"), +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Alder/bliss/Classes/THDocumentViewController.mm"), 7682, CFSTR("expected nil value for '%s'"), "mWhiteBackground");
  *(_QWORD *)(*(_QWORD *)(a1 + 32) + 224) = objc_msgSend(objc_alloc((Class)UIView), "initWithFrame:", 0.0, 0.0, 1024.0, 1024.0);
  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 224), "setClipsToBounds:", 1);
  objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "view"), "bounds");
  MidX = CGRectGetMidX(v16);
  objc_msgSend(objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "view"), "window"), "statusBarMinDimension");
  v4 = v3;
  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 224), "bounds");
  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 224), "setCenter:", MidX, v4 + CGRectGetHeight(v17) * 0.5);
  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 224), "setBackgroundColor:", +[UIColor whiteColor](UIColor, "whiteColor"));
  objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "view"), "insertSubview:belowSubview:", *(_QWORD *)(*(_QWORD *)(a1 + 32) + 224), objc_msgSend(*(id *)(a1 + 32), "canvasScrollView"));
  v5 = *(_QWORD **)(a1 + 32);
  v6 = (void *)v5[28];
  objc_msgSend(objc_msgSend(v5, "canvasScrollView"), "frame");
  objc_msgSend(v6, "convertRect:fromView:", objc_msgSend(*(id *)(a1 + 32), "view"), v7, v8, v9, v10);
  objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "canvasScrollView"), "setFrame:", v11, v12, v13, v14);
  return objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 224), "addSubview:", objc_msgSend(*(id *)(a1 + 32), "canvasScrollView"));
}

id sub_1CE30(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *v3;
  _QWORD v5[6];

  v2 = *(_QWORD *)(a1 + 32);
  v3 = *(void **)(v2 + 632);
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_1CE90;
  v5[3] = &unk_426E78;
  v5[4] = v2;
  v5[5] = a2;
  return objc_msgSend(v3, "syncPerformBlock:", v5);
}

id sub_1CE90(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  _QWORD v4[5];

  v1 = *(_QWORD *)(a1 + 40);
  v2 = *(void **)(*(_QWORD *)(a1 + 32) + 632);
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_1CEF0;
  v4[3] = &unk_4271F0;
  v4[4] = v1;
  return objc_msgSend(v2, "enumeratePageHostsUsingBlock:", v4);
}

uint64_t sub_1CEF0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

id sub_1DFC4(uint64_t a1, uint64_t a2)
{
  id result;

  result = objc_msgSend(*(id *)(a1 + 32), "definesProperty:", a2);
  if ((result & 1) == 0)
    return objc_msgSend(*(id *)(a1 + 32), "setBoxedValue:forProperty:", +[TSWPParagraphStyle boxedDefaultValueForProperty:](TSWPParagraphStyle, "boxedDefaultValueForProperty:", a2), a2);
  return result;
}

void sub_1E774(id a1, NSString *a2)
{
  +[PFDURLProtocol unregisterHost:](PFDURLProtocol, "unregisterHost:", a2);
}

void sub_1F278(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

id sub_1F82C(uint64_t a1, uint64_t a2)
{
  return +[PFDURLProtocol registerHost:bookRootURL:withDRMContext:](PFDURLProtocol, "registerHost:bookRootURL:withDRMContext:", a2, *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40));
}

void sub_20660(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __int128 *v4;
  __int128 v5;
  __int128 v6;
  __int128 *v7;
  __int128 v8;
  __int128 v9;
  __int128 *v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 *v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  uint64_t i;
  uint64_t v20;
  double v21;
  uint64_t v22;
  float v23;
  float v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  __n128 v30;
  double v31;
  __n128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __n128 v37;
  uint64_t v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __n128 v43;
  uint64_t v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __n128 v49;
  uint64_t v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __n128 v55;
  uint64_t v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __n128 v61;
  uint64_t v62;

  v3 = *(_QWORD *)(a1 + 48);
  v4 = (__int128 *)(a2 + 88 * *(_QWORD *)(a1 + 40));
  v62 = *((_QWORD *)v4 + 10);
  v5 = v4[3];
  v59 = v4[2];
  v60 = v5;
  v61 = (__n128)v4[4];
  v6 = v4[1];
  v57 = *v4;
  v58 = v6;
  v7 = (__int128 *)(a2 + 88 * v3);
  v8 = v7[3];
  v53 = v7[2];
  v54 = v8;
  v55 = (__n128)v7[4];
  v56 = *((_QWORD *)v7 + 10);
  v9 = v7[1];
  v51 = *v7;
  v52 = v9;
  v10 = (__int128 *)(a2 + 88 * *(_QWORD *)(a1 + 56));
  v11 = v10[3];
  v47 = v10[2];
  v48 = v11;
  v49 = (__n128)v10[4];
  v50 = *((_QWORD *)v10 + 10);
  v12 = v10[1];
  v45 = *v10;
  v46 = v12;
  v13 = *((_OWORD *)&TSDGPUDataBufferAttributeUpdateDataInvalid + 3);
  v41 = *((_OWORD *)&TSDGPUDataBufferAttributeUpdateDataInvalid + 2);
  v42 = v13;
  v43 = *((__n128 *)&TSDGPUDataBufferAttributeUpdateDataInvalid + 4);
  v44 = *((_QWORD *)&TSDGPUDataBufferAttributeUpdateDataInvalid + 10);
  v14 = *((_OWORD *)&TSDGPUDataBufferAttributeUpdateDataInvalid + 1);
  v39 = *(_OWORD *)&TSDGPUDataBufferAttributeUpdateDataInvalid;
  v40 = v14;
  if (*(_BYTE *)(a1 + 112))
  {
    v15 = (__int128 *)(a2 + 88 * *(_QWORD *)(a1 + 64));
    v16 = v15[3];
    v41 = v15[2];
    v42 = v16;
    v43 = (__n128)v15[4];
    v44 = *((_QWORD *)v15 + 10);
    v17 = v15[1];
    v39 = *v15;
    v40 = v17;
  }
  v18 = *(_QWORD *)(a1 + 72);
  if (v18 >= 1)
  {
    for (i = 0; i < v18; ++i)
    {
      if (v18 >= 1)
      {
        v20 = 0;
        v21 = (double)i;
        do
        {
          v22 = v20 + i * v18;
          v23 = *(double *)(a1 + 88) + (double)v20 * *(double *)(a1 + 80);
          v24 = *(double *)(a1 + 104) + v21 * *(double *)(a1 + 96);
          v35 = v59;
          v36 = v60;
          v37 = v61;
          v38 = v62;
          v33 = v57;
          v34 = v58;
          TSDGPUUpdateDataSetMetalPoint3DAtIndex(&v33, v22, v23, v24, 0.0);
          if (*(_BYTE *)(a1 + 112))
          {
            v35 = v41;
            v36 = v42;
            v37 = v43;
            v38 = v44;
            v33 = v39;
            v34 = v40;
            TSDGPUUpdateDataSetMetalPoint3DAtIndex(&v33, v22, v23, v24, 0.0);
          }
          v25 = *(double *)(a1 + 88) + (double)v20 * *(double *)(a1 + 80);
          objc_msgSend(*(id *)(a1 + 32), "size");
          v26 = *(double *)(a1 + 104) + v21 * *(double *)(a1 + 96);
          v28 = v25 / v27;
          objc_msgSend(*(id *)(a1 + 32), "size");
          v30.n128_f64[0] = v26 / v29;
          v31 = 1.0 - v26 / v29;
          v30.n128_f32[0] = v28;
          v35 = v53;
          v36 = v54;
          v32 = v55;
          v37 = v55;
          v38 = v56;
          v32.n128_f32[0] = v31;
          v33 = v51;
          v34 = v52;
          TSDGPUUpdateDataSetMetalPoint2DAtIndex(&v33, v22, v30, v32);
          v35 = v47;
          v36 = v48;
          v37 = v49;
          v38 = v50;
          v33 = v45;
          v34 = v46;
          TSDGPUUpdateDataSetMetalPoint3DAtIndex(&v33, v22, 0.0, 0.0, 1.0);
          ++v20;
          v18 = *(_QWORD *)(a1 + 72);
        }
        while (v20 < v18);
      }
    }
  }
}

void sub_20A74(uint64_t a1, uint64_t a2)
{
  void *v4;
  _QWORD *v5;
  __int128 *v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 *v10;
  __int128 v11;
  __int128 v12;
  __int128 *v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 *v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  float v25;
  float v26;
  float v27;
  uint64_t v28;
  double v29;
  double v30;
  double v31;
  double v32;
  double v33;
  __double2 v34;
  float v35;
  float v36;
  float v37;
  float v38;
  float v39;
  float v40;
  float v41;
  double v42;
  double v43;
  float v44;
  float v45;
  float v46;
  double v47;
  double v48;
  float v49;
  float cosval;
  double v51;
  _BOOL4 v52;
  float v53;
  float v54;
  float v55;
  double v56;
  double v57;
  uint64_t v58;
  double v59;
  double v60;
  double v61;
  uint64_t v62;
  double v63;
  uint64_t v64;
  float v65;
  double v66;
  uint64_t v67;
  float v68;
  float v69;
  float v70;
  uint64_t v71;
  void *v72;
  float v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  uint64_t v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  uint64_t v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  uint64_t v91;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;
  uint64_t v97;
  __int128 v98;
  __int128 v99;
  __int128 v100;
  __int128 v101;
  __int128 v102;
  uint64_t v103;

  v5 = *(_QWORD **)(a1 + 32);
  v4 = *(void **)(a1 + 40);
  v6 = (__int128 *)(a2 + 88 * v5[6]);
  v7 = v6[3];
  v100 = v6[2];
  v101 = v7;
  v102 = v6[4];
  v103 = *((_QWORD *)v6 + 10);
  v8 = *v6;
  v9 = v6[1];
  v10 = (__int128 *)(a2 + 88 * v5[5]);
  v97 = *((_QWORD *)v10 + 10);
  v98 = v8;
  v99 = v9;
  v11 = v10[3];
  v94 = v10[2];
  v95 = v11;
  v96 = v10[4];
  v12 = v10[1];
  v92 = *v10;
  v93 = v12;
  v13 = (__int128 *)(a2 + 88 * v5[7]);
  v14 = v13[3];
  v88 = v13[2];
  v89 = v14;
  v90 = v13[4];
  v91 = *((_QWORD *)v13 + 10);
  v15 = v13[1];
  v86 = *v13;
  v87 = v15;
  v16 = *((_OWORD *)&TSDGPUDataBufferAttributeUpdateDataInvalid + 3);
  v82 = *((_OWORD *)&TSDGPUDataBufferAttributeUpdateDataInvalid + 2);
  v83 = v16;
  v84 = *((_OWORD *)&TSDGPUDataBufferAttributeUpdateDataInvalid + 4);
  v85 = *((_QWORD *)&TSDGPUDataBufferAttributeUpdateDataInvalid + 10);
  v17 = *((_OWORD *)&TSDGPUDataBufferAttributeUpdateDataInvalid + 1);
  v80 = *(_OWORD *)&TSDGPUDataBufferAttributeUpdateDataInvalid;
  v81 = v17;
  if (objc_msgSend(v4, "isMotionBlurred"))
  {
    v18 = (__int128 *)(a2 + 88 * *(_QWORD *)(*(_QWORD *)(a1 + 32) + 64));
    v19 = v18[3];
    v82 = v18[2];
    v83 = v19;
    v84 = v18[4];
    v85 = *((_QWORD *)v18 + 10);
    v20 = v18[1];
    v80 = *v18;
    v81 = v20;
  }
  v21 = *(_QWORD *)(a1 + 56);
  if (v21 >= 1)
  {
    v22 = 0;
    while (v21 < 1)
    {
LABEL_33:
      if (++v22 >= v21)
        goto LABEL_34;
    }
    v23 = 0;
    while (1)
    {
      v24 = v23 + v22 * v21;
      v76 = v100;
      v77 = v101;
      v78 = v102;
      v79 = v103;
      v74 = v98;
      v75 = v99;
      v26 = *(double *)(a1 + 64) * TSDGPUUpdateDataMetalPoint2DAtIndex(&v74, v24);
      v27 = *(double *)(a1 + 72) * (float)(1.0 - v25);
      v28 = *(_QWORD *)(a1 + 80);
      if (v28 == 11)
      {
        v32 = v26 / *(double *)(a1 + 96);
      }
      else
      {
        if (v28 != 13)
        {
          if (v28 == 14)
          {
            v29 = v27 / *(double *)(a1 + 88);
            v30 = *(double *)(a1 + 104);
            v31 = (1.0 - v29) * *(double *)(a1 + 112);
          }
          else
          {
            v30 = *(double *)(a1 + 104);
            v29 = -(v26 - *(double *)(a1 + 96) * 2.0) / *(double *)(a1 + 96);
            v31 = *(double *)(a1 + 112) * (1.0 - v29);
          }
          v33 = v31 + v29 * v30;
          goto LABEL_16;
        }
        v32 = -(v27 - *(double *)(a1 + 88) * 2.0) / *(double *)(a1 + 88);
      }
      v33 = -((1.0 - v32) * *(double *)(a1 + 112) + v32 * *(double *)(a1 + 104));
LABEL_16:
      v34 = __sincos_stret(v33);
      v76 = v94;
      v77 = v95;
      v78 = v96;
      v79 = v97;
      v74 = v92;
      v75 = v93;
      v35 = TSDGPUUpdateDataMetalPoint3DAtIndex(&v74, v24);
      v37 = v36;
      v73 = v38;
      v76 = v88;
      v77 = v89;
      v78 = v90;
      v79 = v91;
      v74 = v86;
      v75 = v87;
      v39 = TSDGPUUpdateDataMetalPoint3DAtIndex(&v74, v24);
      if ((unint64_t)(*(_QWORD *)(a1 + 80) - 13) > 1)
      {
        v45 = v40;
        v47 = *(double *)(a1 + 96);
        v48 = v47 - v26;
        v43 = -v48;
        v46 = v47 - v48 * v34.__cosval;
        *(float *)&v47 = v34.__sinval;
        v41 = -*(float *)&v47;
        v44 = v37;
      }
      else
      {
        v41 = v39;
        v42 = *(double *)(a1 + 88);
        v43 = v42 - v27;
        v44 = v42 - v43 * v34.__cosval;
        *(float *)&v42 = v34.__sinval;
        v45 = -*(float *)&v42;
        v46 = v35;
      }
      v49 = v34.__sinval * v43;
      v76 = v94;
      v77 = v95;
      v78 = v96;
      v79 = v97;
      v74 = v92;
      v75 = v93;
      TSDGPUUpdateDataSetMetalPoint3DAtIndex(&v74, v24, v46, v44, v49);
      v76 = v88;
      v77 = v89;
      v78 = v90;
      v79 = v91;
      v74 = v86;
      v75 = v87;
      cosval = v34.__cosval;
      if (objc_msgSend(*(id *)(a1 + 40), "isMotionBlurred", TSDGPUUpdateDataSetMetalPoint3DAtIndex(&v74, v24, v41, v45, cosval).n128_f64[0])&& *(_BYTE *)(a1 + 128))
      {
        v51 = *(double *)(a1 + 120);
        v52 = v51 == 0.0;
        if (v51 == 1.0)
          v52 = 1;
        if (v52)
          v53 = v46;
        else
          v53 = v35;
        if (v52)
          v54 = v44;
        else
          v54 = v37;
        v55 = v73;
        if (v52)
          v55 = v49;
        v76 = v82;
        v77 = v83;
        v78 = v84;
        v79 = v85;
        v74 = v80;
        v75 = v81;
        TSDGPUUpdateDataSetMetalPoint3DAtIndex(&v74, v24, v53, v54, v55);
      }
      ++v23;
      v21 = *(_QWORD *)(a1 + 56);
      if (v23 >= v21)
        goto LABEL_33;
    }
  }
LABEL_34:
  switch(*(_QWORD *)(a1 + 80))
  {
    case 0xBLL:
      v76 = v94;
      v77 = v95;
      v78 = v96;
      v79 = v97;
      v74 = v92;
      v75 = v93;
      v56 = TSDGPUUpdateDataMetalPoint3DAtIndex(&v74, 0);
      goto LABEL_41;
    case 0xCLL:
      v58 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 16) - 1;
      v76 = v100;
      v77 = v101;
      v78 = v102;
      v79 = v103;
      v74 = v98;
      v75 = v99;
      v59 = TSDGPUUpdateDataMetalPoint2DAtIndex(&v74, v58);
      objc_msgSend(*(id *)(a1 + 48), "size");
      v61 = v60;
      v62 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 16) - 1;
      v76 = v94;
      v77 = v95;
      v78 = v96;
      v79 = v97;
      v74 = v92;
      v75 = v93;
      v63 = TSDGPUUpdateDataMetalPoint3DAtIndex(&v74, v62);
      goto LABEL_39;
    case 0xDLL:
      v64 = (*(_QWORD *)(*(_QWORD *)(a1 + 32) + 16) - 1) * *(_QWORD *)(*(_QWORD *)(a1 + 32) + 16);
      v76 = v100;
      v77 = v101;
      v78 = v102;
      v79 = v103;
      v74 = v98;
      v75 = v99;
      TSDGPUUpdateDataMetalPoint2DAtIndex(&v74, v64);
      v59 = (float)(1.0 - v65);
      objc_msgSend(*(id *)(a1 + 48), "size");
      v61 = v66;
      v67 = (*(_QWORD *)(*(_QWORD *)(a1 + 32) + 16) - 1) * *(_QWORD *)(*(_QWORD *)(a1 + 32) + 16);
      v76 = v94;
      v77 = v95;
      v78 = v96;
      v79 = v97;
      v74 = v92;
      v75 = v93;
      TSDGPUUpdateDataMetalPoint3DAtIndex(&v74, v67);
      v63 = v68;
LABEL_39:
      v56 = -(v63 - v59 * v61);
      goto LABEL_41;
    case 0xELL:
      v76 = v94;
      v77 = v95;
      v78 = v96;
      v79 = v97;
      v74 = v92;
      v75 = v93;
      TSDGPUUpdateDataMetalPoint3DAtIndex(&v74, 0);
      v56 = v69;
LABEL_41:
      v57 = v56 * 0.5;
      break;
    default:
      v57 = 0.5;
      break;
  }
  v70 = v57;
  v71 = *(_QWORD *)(a1 + 32) + 552;
  v72 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "metalContext"));
  *(float *)(v71 + 4 * (_QWORD)objc_msgSend(v72, "currentBuffer")) = v70;

  *(_BYTE *)(a2 + 88 * *(_QWORD *)(*(_QWORD *)(a1 + 32) + 48) + 56) = 0;
}

void sub_212CC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 *v4;
  __n128 v5;
  __n128 v6;
  __n128 *v7;
  __n128 v8;
  __n128 v9;
  float v10;
  __n128 v11;
  __n128 v12;
  __n128 v13;
  __n128 v14;
  float v15;
  __n128 v16;
  __n128 v17;
  double v18;
  __n128 v19;
  __n128 v20;
  __n128 v21;
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  double v26;
  uint64_t v27;
  double v28;
  double v29;
  double v30;
  double v31;
  __n128 v32;
  __n128 v33;
  double v34;
  __n128 v35;
  __n128 v36;
  __n128 v37;
  __n128 v38;
  __n128 v39;
  __n128 v40;
  __n128 v41;
  __n128 v42;
  __n128 v43;
  uint64_t v44;
  __n128 v45;
  __n128 v46;
  __n128 v47;
  __n128 v48;
  __n128 v49;
  uint64_t v50;
  __n128 v51;
  __n128 v52;
  __n128 v53;
  __n128 v54;
  __n128 v55;
  uint64_t v56;

  v3 = *(_QWORD *)(a1 + 40);
  v4 = (__n128 *)(a2 + 88 * *(_QWORD *)(a1 + 32));
  v56 = v4[5].n128_i64[0];
  v5 = v4[3];
  v53 = v4[2];
  v54 = v5;
  v55 = v4[4];
  v6 = v4[1];
  v51 = *v4;
  v52 = v6;
  v7 = (__n128 *)(a2 + 88 * v3);
  v8 = v7[3];
  v47 = v7[2];
  v48 = v8;
  v49 = v7[4];
  v50 = v7[5].n128_i64[0];
  v9 = v7[1];
  v45 = *v7;
  v46 = v9;
  v10 = TSUClamp(*(double *)(a1 + 48) + *(double *)(a1 + 48), 0.0, *(double *)(a1 + 56));
  v41 = v47;
  v42 = v48;
  v43 = v49;
  v44 = v50;
  v39 = v45;
  v40 = v46;
  TSDGPUUpdateDataSetMetalFloatAtIndex(&v39, 0, v10);
  v41 = v47;
  v42 = v48;
  v43 = v49;
  v44 = v50;
  v39 = v45;
  v40 = v46;
  TSDGPUUpdateDataSetMetalFloatAtIndex(&v39, 1, v10);
  if (*(_BYTE *)(a1 + 128))
  {
    v11.n128_u64[0] = *(_QWORD *)(a1 + 64);
    v11.n128_f32[0] = v11.n128_f64[0];
    v41 = v53;
    v42 = v54;
    v43 = v55;
    v44 = v56;
    v12 = v51;
    v39 = v51;
    v40 = v52;
    v12.n128_u32[0] = 0;
  }
  else
  {
    v12.n128_f32[0] = *(double *)(a1 + 72);
    v41 = v53;
    v42 = v54;
    v43 = v55;
    v44 = v56;
    v11 = v51;
    v39 = v51;
    v40 = v52;
    v11.n128_u32[0] = 0;
  }
  v13 = TSDGPUUpdateDataSetMetalPoint2DAtIndex(&v39, 0, v11, v12);
  v13.n128_u64[0] = *(_QWORD *)(a1 + 64);
  v14.n128_u64[0] = *(_QWORD *)(a1 + 72);
  v13.n128_f32[0] = v13.n128_f64[0];
  v14.n128_f32[0] = v14.n128_f64[0];
  v41 = v53;
  v42 = v54;
  v43 = v55;
  v44 = v56;
  v39 = v51;
  v40 = v52;
  TSDGPUUpdateDataSetMetalPoint2DAtIndex(&v39, 1, v13, v14);
  v15 = TSUClamp(*(double *)(a1 + 48) + *(double *)(a1 + 48), 0.0, *(double *)(a1 + 80));
  v41 = v47;
  v42 = v48;
  v43 = v49;
  v44 = v50;
  v39 = v45;
  v40 = v46;
  TSDGPUUpdateDataSetMetalFloatAtIndex(&v39, 2, v15);
  v41 = v47;
  v42 = v48;
  v43 = v49;
  v44 = v50;
  v39 = v45;
  v40 = v46;
  TSDGPUUpdateDataSetMetalFloatAtIndex(&v39, 3, v15);
  if (*(_BYTE *)(a1 + 128))
  {
    v18 = *(double *)(a1 + 88);
    if (*(_BYTE *)(a1 + 129))
      v18 = -v18;
    v16.n128_f64[0] = *(double *)(a1 + 64) + v18 * *(double *)(a1 + 96);
    v16.n128_f32[0] = v16.n128_f64[0];
    v41 = v53;
    v42 = v54;
    v43 = v55;
    v44 = v56;
    v19 = v51;
    v39 = v51;
    v40 = v52;
    v19.n128_u32[0] = 0;
    v20 = TSDGPUUpdateDataSetMetalPoint2DAtIndex(&v39, 2, v16, v19);
    v20.n128_u64[0] = *(_QWORD *)(a1 + 88);
    v21.n128_u64[0] = *(_QWORD *)(a1 + 96);
    if (*(_BYTE *)(a1 + 129))
      v20.n128_f64[0] = -v20.n128_f64[0];
    v20.n128_f64[0] = *(double *)(a1 + 64) + v20.n128_f64[0] * v21.n128_f64[0];
    v20.n128_f32[0] = v20.n128_f64[0];
    v21.n128_f32[0] = *(double *)(a1 + 72);
  }
  else
  {
    v17.n128_u64[0] = *(_QWORD *)(a1 + 104);
    v17.n128_f32[0] = *(double *)(a1 + 72) + v17.n128_f64[0] * *(double *)(a1 + 96);
    v41 = v53;
    v42 = v54;
    v43 = v55;
    v44 = v56;
    v22 = v51;
    v39 = v51;
    v40 = v52;
    v22.n128_u32[0] = 0;
    v20 = TSDGPUUpdateDataSetMetalPoint2DAtIndex(&v39, 2, v22, v17);
    v20.n128_u64[0] = *(_QWORD *)(a1 + 64);
    v21.n128_f64[0] = *(double *)(a1 + 72) + *(double *)(a1 + 104) * *(double *)(a1 + 96);
    v20.n128_f32[0] = v20.n128_f64[0];
    v21.n128_f32[0] = v21.n128_f64[0];
  }
  v41 = v53;
  v42 = v54;
  v43 = v55;
  v44 = v56;
  v39 = v51;
  v40 = v52;
  TSDGPUUpdateDataSetMetalPoint2DAtIndex(&v39, 3, v20, v21);
  v23 = *(_QWORD *)(a1 + 112);
  if (v23 >= 3)
  {
    v24 = 0;
    v25 = v23 - 2;
    v26 = (double)(v23 - 2) + -1.0;
    v27 = 5;
    do
    {
      v28 = (double)(int)v24 / v26;
      v29 = *(double *)(a1 + 48) + *(double *)(a1 + 48);
      v30 = TSUClamp(v29, 0.0, *(double *)(a1 + 80));
      v31 = TSUSineMap(1.0 - v28);
      *(float *)&v29 = TSUClamp(v29, 0.0, v30 * v31);
      v41 = v47;
      v42 = v48;
      v43 = v49;
      v44 = v50;
      v39 = v45;
      v40 = v46;
      TSDGPUUpdateDataSetMetalFloatAtIndex(&v39, v27 - 1, *(float *)&v29);
      v41 = v47;
      v42 = v48;
      v43 = v49;
      v44 = v50;
      v39 = v45;
      v40 = v46;
      TSDGPUUpdateDataSetMetalFloatAtIndex(&v39, v27, *(float *)&v29);
      if (*(_BYTE *)(a1 + 128))
      {
        v34 = *(double *)(a1 + 88);
        if (*(_BYTE *)(a1 + 129))
          v34 = -v34;
        v32.n128_f64[0] = *(double *)(a1 + 64) + v34 * (*(double *)(a1 + 96) + v28 * *(double *)(a1 + 120));
        v32.n128_f32[0] = v32.n128_f64[0];
        v41 = v53;
        v42 = v54;
        v43 = v55;
        v44 = v56;
        v35 = v51;
        v39 = v51;
        v40 = v52;
        v35.n128_u32[0] = 0;
        v36 = TSDGPUUpdateDataSetMetalPoint2DAtIndex(&v39, v27 - 1, v32, v35);
        v36.n128_u64[0] = *(_QWORD *)(a1 + 88);
        v37.n128_f64[0] = *(double *)(a1 + 96) + v28 * *(double *)(a1 + 120);
        if (*(_BYTE *)(a1 + 129))
          v36.n128_f64[0] = -v36.n128_f64[0];
        v36.n128_f64[0] = *(double *)(a1 + 64) + v36.n128_f64[0] * v37.n128_f64[0];
        v36.n128_f32[0] = v36.n128_f64[0];
        v37.n128_f32[0] = *(double *)(a1 + 72);
      }
      else
      {
        v33.n128_u64[0] = *(_QWORD *)(a1 + 104);
        v33.n128_f32[0] = *(double *)(a1 + 72) + v33.n128_f64[0] * (*(double *)(a1 + 96) + v28 * *(double *)(a1 + 120));
        v41 = v53;
        v42 = v54;
        v43 = v55;
        v44 = v56;
        v38 = v51;
        v39 = v51;
        v40 = v52;
        v38.n128_u32[0] = 0;
        v36 = TSDGPUUpdateDataSetMetalPoint2DAtIndex(&v39, v27 - 1, v38, v33);
        v36.n128_u64[0] = *(_QWORD *)(a1 + 64);
        v37.n128_f64[0] = *(double *)(a1 + 72)
                        + *(double *)(a1 + 104) * (*(double *)(a1 + 96) + v28 * *(double *)(a1 + 120));
        v36.n128_f32[0] = v36.n128_f64[0];
        v37.n128_f32[0] = v37.n128_f64[0];
      }
      v41 = v53;
      v42 = v54;
      v43 = v55;
      v44 = v56;
      v39 = v51;
      v40 = v52;
      TSDGPUUpdateDataSetMetalPoint2DAtIndex(&v39, v27, v36, v37);
      ++v24;
      v27 += 2;
    }
    while (v25 != v24);
  }
}

void sub_23C5C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __int128 *v4;
  __int128 v5;
  __int128 v6;
  __int128 *v7;
  __int128 v8;
  __int128 v9;
  __int128 *v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 *v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  uint64_t i;
  uint64_t v20;
  double v21;
  uint64_t v22;
  float v23;
  float v24;
  __n128 v25;
  __n128 v26;
  double v27;
  float v28;
  float v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  uint64_t v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  uint64_t v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  uint64_t v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  uint64_t v59;

  v3 = *(_QWORD *)(a1 + 40);
  v4 = (__int128 *)(a2 + 88 * *(_QWORD *)(a1 + 32));
  v59 = *((_QWORD *)v4 + 10);
  v5 = v4[3];
  v56 = v4[2];
  v57 = v5;
  v58 = v4[4];
  v6 = v4[1];
  v54 = *v4;
  v55 = v6;
  v7 = (__int128 *)(a2 + 88 * v3);
  v8 = v7[3];
  v50 = v7[2];
  v51 = v8;
  v52 = v7[4];
  v53 = *((_QWORD *)v7 + 10);
  v9 = v7[1];
  v48 = *v7;
  v49 = v9;
  v10 = (__int128 *)(a2 + 88 * *(_QWORD *)(a1 + 48));
  v11 = v10[3];
  v44 = v10[2];
  v45 = v11;
  v46 = v10[4];
  v47 = *((_QWORD *)v10 + 10);
  v12 = v10[1];
  v42 = *v10;
  v43 = v12;
  v13 = *((_OWORD *)&TSDGPUDataBufferAttributeUpdateDataInvalid + 3);
  v38 = *((_OWORD *)&TSDGPUDataBufferAttributeUpdateDataInvalid + 2);
  v39 = v13;
  v40 = *((_OWORD *)&TSDGPUDataBufferAttributeUpdateDataInvalid + 4);
  v41 = *((_QWORD *)&TSDGPUDataBufferAttributeUpdateDataInvalid + 10);
  v14 = *((_OWORD *)&TSDGPUDataBufferAttributeUpdateDataInvalid + 1);
  v36 = *(_OWORD *)&TSDGPUDataBufferAttributeUpdateDataInvalid;
  v37 = v14;
  if (*(_BYTE *)(a1 + 96))
  {
    v15 = (__int128 *)(a2 + 88 * *(_QWORD *)(a1 + 56));
    v16 = v15[3];
    v38 = v15[2];
    v39 = v16;
    v40 = v15[4];
    v41 = *((_QWORD *)v15 + 10);
    v17 = v15[1];
    v36 = *v15;
    v37 = v17;
  }
  v18 = *(_QWORD *)(a1 + 64);
  if (v18 >= 1)
  {
    for (i = 0; i < v18; ++i)
    {
      if (v18 >= 1)
      {
        v20 = 0;
        v21 = (double)i;
        do
        {
          v22 = v20 + i * v18;
          v23 = *(double *)(a1 + 72) * (double)v20;
          v24 = *(double *)(a1 + 80) * v21;
          v32 = v56;
          v33 = v57;
          v34 = v58;
          v35 = v59;
          v30 = v54;
          v31 = v55;
          v25 = TSDGPUUpdateDataSetMetalPoint3DAtIndex(&v30, v22, v23, v24, 0.0);
          v25.n128_u64[0] = *(_QWORD *)(a1 + 88);
          v26.n128_f64[0] = v25.n128_f64[0] * (double)v20;
          v27 = v25.n128_f64[0] * v21;
          v25.n128_f32[0] = v26.n128_f64[0];
          v26.n128_f32[0] = v27;
          v32 = v50;
          v33 = v51;
          v34 = v52;
          v35 = v53;
          v30 = v48;
          v31 = v49;
          TSDGPUUpdateDataSetMetalPoint2DAtIndex(&v30, v22, v25, v26);
          v32 = v44;
          v33 = v45;
          v34 = v46;
          v35 = v47;
          v30 = v42;
          v31 = v43;
          TSDGPUUpdateDataSetMetalPoint3DAtIndex(&v30, v22, 0.0, 0.0, 1.0);
          if (*(_BYTE *)(a1 + 96))
          {
            v28 = *(double *)(a1 + 72) * (double)v20;
            v29 = *(double *)(a1 + 80) * v21;
            v32 = v38;
            v33 = v39;
            v34 = v40;
            v35 = v41;
            v30 = v36;
            v31 = v37;
            TSDGPUUpdateDataSetMetalPoint3DAtIndex(&v30, v22, v28, v29, 0.0);
          }
          ++v20;
          v18 = *(_QWORD *)(a1 + 64);
        }
        while (v20 < v18);
      }
    }
  }
}

void sub_240FC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __int128 *v4;
  __int128 v5;
  __int128 v6;
  __int128 *v7;
  __int128 v8;
  __int128 v9;
  __int128 *v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 *v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  uint64_t i;
  uint64_t j;
  uint64_t v21;
  float v22;
  float v23;
  float v24;
  double v25;
  double v26;
  float v27;
  float v28;
  float v29;
  float v30;
  float v31;
  double v32;
  double v33;
  __double2 v34;
  float v35;
  double v36;
  _BOOL4 v37;
  float v38;
  float v39;
  uint64_t v40;
  uint64_t k;
  unint64_t v42;
  float v43;
  float v44;
  float v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  float v54;
  float v55;
  float v56;
  float v57;
  float v58;
  uint64_t v59;
  float v60;
  float v61;
  float v62;
  float v63;
  float v64;
  uint64_t v65;
  float v66;
  float v67;
  float v68;
  float v69;
  float v70;
  float v71;
  float v72;
  float v73;
  double v74;
  double v75;
  double v76;
  float v78;
  float v79;
  float v80;
  uint64_t v81;
  float v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  uint64_t v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  __int128 v93;
  uint64_t v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  __int128 v99;
  uint64_t v100;
  __int128 v101;
  __int128 v102;
  __int128 v103;
  __int128 v104;
  __int128 v105;
  uint64_t v106;
  __int128 v107;
  __int128 v108;
  __int128 v109;
  __int128 v110;
  __int128 v111;
  uint64_t v112;

  v3 = *(_QWORD *)(a1 + 48);
  v4 = (__int128 *)(a2 + 88 * *(_QWORD *)(a1 + 40));
  v112 = *((_QWORD *)v4 + 10);
  v5 = v4[3];
  v109 = v4[2];
  v110 = v5;
  v111 = v4[4];
  v6 = v4[1];
  v107 = *v4;
  v108 = v6;
  v7 = (__int128 *)(a2 + 88 * v3);
  v8 = v7[3];
  v103 = v7[2];
  v104 = v8;
  v105 = v7[4];
  v106 = *((_QWORD *)v7 + 10);
  v9 = v7[1];
  v101 = *v7;
  v102 = v9;
  v10 = (__int128 *)(a2 + 88 * *(_QWORD *)(a1 + 56));
  v11 = v10[3];
  v97 = v10[2];
  v98 = v11;
  v99 = v10[4];
  v100 = *((_QWORD *)v10 + 10);
  v12 = v10[1];
  v95 = *v10;
  v96 = v12;
  v13 = *((_OWORD *)&TSDGPUDataBufferAttributeUpdateDataInvalid + 3);
  v91 = *((_OWORD *)&TSDGPUDataBufferAttributeUpdateDataInvalid + 2);
  v92 = v13;
  v93 = *((_OWORD *)&TSDGPUDataBufferAttributeUpdateDataInvalid + 4);
  v94 = *((_QWORD *)&TSDGPUDataBufferAttributeUpdateDataInvalid + 10);
  v14 = *((_OWORD *)&TSDGPUDataBufferAttributeUpdateDataInvalid + 1);
  v89 = *(_OWORD *)&TSDGPUDataBufferAttributeUpdateDataInvalid;
  v90 = v14;
  if (*(_BYTE *)(a1 + 96))
  {
    v15 = (__int128 *)(a2 + 88 * *(_QWORD *)(a1 + 64));
    v16 = v15[3];
    v91 = v15[2];
    v92 = v16;
    v93 = v15[4];
    v94 = *((_QWORD *)v15 + 10);
    v17 = v15[1];
    v89 = *v15;
    v90 = v17;
  }
  v18 = *(_QWORD *)(a1 + 72);
  if (v18 >= 1)
  {
    for (i = 0; i < v18; ++i)
    {
      if (v18 >= 1)
      {
        for (j = 0; j < v18; ++j)
        {
          v21 = j + i * v18;
          v85 = v103;
          v86 = v104;
          v87 = v105;
          v88 = v106;
          v83 = v101;
          v84 = v102;
          v22 = TSDGPUUpdateDataMetalPoint2DAtIndex(&v83, v21);
          v24 = v23;
          if (!*(_BYTE *)(a1 + 97))
            v22 = 1.0 - v22;
          objc_msgSend(*(id *)(a1 + 32), "fx:withPercent:", v22, *(double *)(a1 + 80));
          v26 = v25 * -3.14159265;
          v85 = v109;
          v86 = v110;
          v87 = v111;
          v88 = v112;
          v83 = v107;
          v84 = v108;
          v27 = TSDGPUUpdateDataMetalPoint3DAtIndex(&v83, v21);
          v29 = v28;
          v31 = v30;
          v32 = *(double *)(a1 + 88);
          v33 = (float)((float)(v24 * -2.0) + 1.0);
          v34 = __sincos_stret(v26);
          v35 = v32 + -(v32 * v33) * v34.__cosval;
          *(float *)&v26 = v34.__sinval * (v32 * v33);
          v85 = v109;
          v86 = v110;
          v87 = v111;
          v88 = v112;
          v83 = v107;
          v84 = v108;
          TSDGPUUpdateDataSetMetalPoint3DAtIndex(&v83, v21, v27, v35, *(float *)&v26);
          if (*(_BYTE *)(a1 + 96) && *(_BYTE *)(a1 + 98))
          {
            v36 = *(double *)(a1 + 80);
            v37 = v36 == 0.0;
            if (v36 == 1.0)
              v37 = 1;
            if (v37)
              v38 = v32 + -(v32 * v33) * v34.__cosval;
            else
              v38 = v29;
            if (v37)
              v39 = v34.__sinval * (v32 * v33);
            else
              v39 = v31;
            v85 = v91;
            v86 = v92;
            v87 = v93;
            v88 = v94;
            v83 = v89;
            v84 = v90;
            TSDGPUUpdateDataSetMetalPoint3DAtIndex(&v83, v21, v27, v38, v39);
          }
          v18 = *(_QWORD *)(a1 + 72);
        }
      }
    }
    if (v18 >= 1)
    {
      v40 = 0;
      v79 = TSDMetalPoint3DZero[1];
      v80 = TSDMetalPoint3DZero[0];
      v78 = TSDMetalPoint3DZero[2];
      do
      {
        if (v18 >= 1)
        {
          for (k = 0; k < v18; ++k)
          {
            v42 = 0;
            v81 = k + v18 * v40;
            v43 = v78;
            v44 = v79;
            v45 = v80;
            do
            {
              if (v42 > 3)
              {
                v46 = 0;
                v47 = 0;
                v48 = 0;
              }
              else
              {
                v46 = qword_313DB0[v42];
                v47 = qword_313DD0[v42];
                v48 = qword_313DF0[v42];
              }
              v49 = v48 + k;
              if (v48 + k >= 0)
              {
                v50 = v47 + k;
                if (v47 + k >= 0)
                {
                  v51 = v46 + v40;
                  if (v46 + v40 >= 0)
                  {
                    v52 = v48 + v40;
                    if (v48 + v40 >= 0)
                    {
                      v53 = *(_QWORD *)(a1 + 72);
                      if (v52 < v53 && v51 < v53 && v49 < v53 && v50 < v53)
                      {
                        v85 = v109;
                        v86 = v110;
                        v87 = v111;
                        v88 = v112;
                        v83 = v107;
                        v84 = v108;
                        v82 = v43;
                        v54 = TSDGPUUpdateDataMetalPoint3DAtIndex(&v83, v81);
                        v56 = v55;
                        v58 = v57;
                        v59 = v49 + *(_QWORD *)(a1 + 72) * v51;
                        v85 = v109;
                        v86 = v110;
                        v87 = v111;
                        v88 = v112;
                        v83 = v107;
                        v84 = v108;
                        v60 = TSDGPUUpdateDataMetalPoint3DAtIndex(&v83, v59);
                        v62 = v61;
                        v64 = v63;
                        v65 = v50 + *(_QWORD *)(a1 + 72) * v52;
                        v85 = v109;
                        v86 = v110;
                        v87 = v111;
                        v88 = v112;
                        v83 = v107;
                        v84 = v108;
                        v66 = TSDGPUUpdateDataMetalPoint3DAtIndex(&v83, v65) - v54;
                        v68 = v67 - v56;
                        v70 = v69 - v58;
                        v45 = v45 + (float)((float)((float)(v62 - v56) * v70) - (float)((float)(v64 - v58) * v68));
                        v44 = v44 + (float)((float)((float)(v64 - v58) * v66) - (float)((float)(v60 - v54) * v70));
                        v43 = v82 + (float)((float)((float)(v60 - v54) * v68) - (float)((float)(v62 - v56) * v66));
                      }
                    }
                  }
                }
              }
              ++v42;
            }
            while (v42 != 4);
            if (v45 != 0.0 || v44 != 0.0 || (v72 = v79, v71 = v80, v73 = v78, v43 != 0.0))
            {
              v74 = 1.0 / sqrtf((float)((float)(v44 * v44) + (float)(v45 * v45)) + (float)(v43 * v43));
              v75 = v74 * v44;
              v76 = v74 * v43;
              v71 = v74 * v45;
              v72 = v75;
              v73 = v76;
            }
            v85 = v97;
            v86 = v98;
            v87 = v99;
            v88 = v100;
            v83 = v95;
            v84 = v96;
            TSDGPUUpdateDataSetMetalPoint3DAtIndex(&v83, v81, -v71, -v72, -v73);
            v18 = *(_QWORD *)(a1 + 72);
          }
        }
        ++v40;
      }
      while (v40 < v18);
    }
  }
  *(_BYTE *)(a2 + 88 * *(_QWORD *)(a1 + 48) + 56) = 0;
}

void sub_270E4(id a1)
{
  qword_543150 = (uint64_t)dispatch_queue_create("randomGenerator", 0);
}

_QWORD *sub_2710C(_QWORD *result)
{
  _QWORD *v1;

  if (!*(_QWORD *)(result[4] + 72))
  {
    v1 = result;
    result = +[KNAnimationRandomGenerator randomGeneratorFromPluginContext:](KNAnimationRandomGenerator, "randomGeneratorFromPluginContext:");
    *(_QWORD *)(v1[4] + 72) = result;
  }
  return result;
}

void sub_27B88(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_2B67C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
  uint64_t v29;

  _Block_object_dispose(&a29, 8);
  _Block_object_dispose((const void *)(v29 - 160), 8);
  _Unwind_Resume(a1);
}

uint64_t sub_2B6AC(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_2B6BC(uint64_t a1)
{

}

void sub_2B6C4(uint64_t a1)
{
  void *v2;
  id v3;

  v2 = *(void **)(a1 + 32);
  if (v2)
  {
    v3 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "selection"));
    objc_msgSend(*(id *)(a1 + 32), "setInsertionPoint:", objc_msgSend(v3, "start"));

  }
  else if ((objc_msgSend(*(id *)(a1 + 40), "isFirstResponder") & 1) == 0)
  {
    if (objc_msgSend(*(id *)(a1 + 48), "takeFirstResponderOnTap"))
      *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 24) = objc_msgSend(*(id *)(a1 + 40), "becomeFirstResponder");
  }
}

void sub_2B754(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  id v4;

  if (*(_QWORD *)(a1 + 32))
  {
    objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40), "endEditing");
  }
  else if ((objc_msgSend(*(id *)(a1 + 40), "p_handleTapAtPoint:", *(double *)(a1 + 64), *(double *)(a1 + 72)) & 1) == 0&& !*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 24))
  {
    v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "delegate"));
    v3 = TSUProtocolCast(&OBJC_PROTOCOL___THInteractiveCanvasControllerDelegate, v2);
    v4 = (id)objc_claimAutoreleasedReturnValue(v3);

    if ((objc_opt_respondsToSelector(v4, "interactiveCanvasControllerWasTapped:") & 1) != 0)
      objc_msgSend(v4, "interactiveCanvasControllerWasTapped:", *(_QWORD *)(a1 + 40));

  }
}

id sub_2C9B0(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 32), "postEvent:sender:", kBETestDriverPageTurnAnimationEnd, *(_QWORD *)(a1 + 40));
  return objc_msgSend(*(id *)(a1 + 32), "postEvent:sender:", kBETestDriverPageTurnEnd, *(_QWORD *)(a1 + 40));
}

id sub_2CBB8(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 32), "postEvent:sender:", kBETestDriverPageTurnAnimationEnd, *(_QWORD *)(a1 + 40));
  return objc_msgSend(*(id *)(a1 + 32), "postEvent:sender:", kBETestDriverPageTurnEnd, *(_QWORD *)(a1 + 40));
}

BOOL sub_2D064(id a1, TSDRep *a2)
{
  TSDRep *v2;
  uint64_t v3;
  uint64_t v4;
  char isKindOfClass;

  v2 = a2;
  v4 = objc_opt_class(TSWPRep, v3);
  isKindOfClass = objc_opt_isKindOfClass(v2, v4);

  return isKindOfClass & 1;
}

void sub_2D1A0(uint64_t a1)
{
  void *v2;
  void *v3;
  uint64_t v4;
  void *v5;
  char *v6;
  uint64_t v7;
  void *v8;
  void *v9;
  THTextInputResponder *v10;
  void *v11;
  void *v12;
  THTextInputResponder *v13;
  uint64_t v14;
  void *v15;
  objc_super v16;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "object"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "textInputEditor"));
  v4 = TSUProtocolCast(&OBJC_PROTOCOL___TSDTextInput, v3);
  v5 = (void *)objc_claimAutoreleasedReturnValue(v4);

  if (v5)
  {
    v6 = *(char **)(a1 + 40);
    v7 = OBJC_IVAR___TSDInteractiveCanvasController_mTextInputResponder;
    if (!*(_QWORD *)&v6[OBJC_IVAR___TSDInteractiveCanvasController_mTextInputResponder])
    {
      v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "layerHost"));
      v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "canvasView"));

      if (v9)
      {
        v10 = [THTextInputResponder alloc];
        v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "layerHost"));
        v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "canvasView"));
        v13 = -[THTextInputResponder initWithNextResponder:](v10, "initWithNextResponder:", v12);
        v14 = *(_QWORD *)(a1 + 40);
        v15 = *(void **)(v14 + v7);
        *(_QWORD *)(v14 + v7) = v13;

      }
    }
  }
  v16.receiver = *(id *)(a1 + 40);
  v16.super_class = (Class)THInteractiveCanvasController;
  objc_msgSendSuper2(&v16, "p_maybeSetTextResponderEditorTo:", v5);

}

uint64_t sub_2D2D4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

void sub_2FF28(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_2FF40(uint64_t a1, uint64_t a2, uint64_t a3, _BYTE *a4)
{
  uint64_t v8;
  void *v9;
  uint64_t v10;
  id result;

  v8 = objc_opt_class(THModelContainerNode, a2);
  v9 = (void *)TSUDynamicCast(v8, a2);
  v10 = *(_QWORD *)(a1 + 32);
  if (v9)
  {
    result = objc_msgSend(v9, "enumerateSubtreeUsingBlock:", v10);
    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = (_BYTE)result;
  }
  else
  {
    result = (id)(*(uint64_t (**)(_QWORD, uint64_t, uint64_t, uint64_t))(v10 + 16))(*(_QWORD *)(a1 + 32), a2, a3, *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24);
  }
  *a4 = *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24);
  return result;
}

void sub_30AEC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL sub_31670(id a1, TSKModel *a2, BOOL *a3)
{
  uint64_t v4;

  v4 = objc_opt_class(TSWPStorage, a2);
  return objc_opt_isKindOfClass(a2, v4) & 1;
}

int64_t sub_32860(id a1, TSUPair *a2, TSUPair *a3)
{
  return (int64_t)objc_msgSend(-[TSUPair first](a2, "first"), "compare:", -[TSUPair first](a3, "first"));
}

void sub_3391C(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 80), 8);
  _Unwind_Resume(a1);
}

id sub_3393C(uint64_t a1)
{
  void *v2;
  uint64_t v3;

  v2 = *(void **)(*(_QWORD *)(a1 + 32) + 160);
  if (v2)
  {
    objc_msgSend(+[TSUAssertionHandler currentHandler](TSUAssertionHandler, "currentHandler"), "handleFailureInFunction:file:lineNumber:description:", +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "-[THModelContentNode startLoading]_block_invoke"), +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Alder/bliss/Classes/Model/THModelContentNode.m"), 1204, CFSTR("expected nil value for '%s'"), "mLoadOperation");
    v2 = *(void **)(*(_QWORD *)(a1 + 32) + 160);
  }

  *(_QWORD *)(*(_QWORD *)(a1 + 32) + 160) = 0;
  v3 = *(_QWORD *)(a1 + 32);
  if (!*(_QWORD *)(v3 + 160))
  {
    *(_QWORD *)(*(_QWORD *)(a1 + 32) + 160) = -[THModelContentLoadOperation initWithDelegate:contentNode:documentRoot:applePubURL:documentEntryURI:]([THModelContentLoadOperation alloc], "initWithDelegate:contentNode:documentRoot:applePubURL:documentEntryURI:", *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 32), objc_msgSend(*(id *)(a1 + 32), "documentRoot"), *(_QWORD *)(*(_QWORD *)(a1 + 32) + 80), *(_QWORD *)(*(_QWORD *)(a1 + 32) + 72));
    objc_msgSend(objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "documentRoot"), "contentLoadOperationQueue"), "addOperation:", *(_QWORD *)(*(_QWORD *)(a1 + 32) + 160));
    v3 = *(_QWORD *)(a1 + 32);
  }
  *(_DWORD *)(v3 + 152) = 1;
  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = 1;
  return objc_msgSend(*(id *)(a1 + 32), "p_clearFieldsForFutureLoading");
}

id sub_33A94(uint64_t a1)
{
  id result;

  *(_DWORD *)(*(_QWORD *)(a1 + 32) + 152) = 3;
  objc_msgSend(*(id *)(a1 + 32), "setPaginatedBodyStale:", 0);
  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 208), "cancel");

  *(_QWORD *)(*(_QWORD *)(a1 + 32) + 208) = 0;
  result = objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "reflowablePaginationController"), "paginateContentNode:paginationCompletionDelegate:priority:isForeground:activity:", *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 32), 8, 1, *(_QWORD *)(a1 + 40));
  *(_QWORD *)(*(_QWORD *)(a1 + 32) + 208) = result;
  return result;
}

id sub_33B20(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "logEvent:forContentNode:", CFSTR("loadContentNodeBodies:begin"), *(_QWORD *)(a1 + 32));
}

uint64_t sub_33D38(uint64_t a1)
{
  uint64_t v1;

  v1 = 48;
  if (*(_DWORD *)(*(_QWORD *)(a1 + 32) + 152) == 5)
    v1 = 40;
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + v1) + 16))();
}

void sub_34380(uint64_t a1)
{
  id v2;
  uint64_t v3;
  id v4;
  char v5;
  uint64_t v6;
  void *i;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  unsigned int v13;
  id v14;
  id v15;
  id v16;
  id v17;
  uint64_t v18;
  void *j;
  uint64_t v20;
  id v21;
  uint64_t v22;
  void *v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id obj;
  id v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  _BYTE v38[128];
  _BYTE v39[128];

  objc_msgSend(*(id *)(a1 + 32), "willModify");
  v27 = objc_msgSend(*(id *)(a1 + 40), "objectForKey:", kTHModelStorageAnchorsForAnchorID);
  v24 = objc_msgSend(*(id *)(a1 + 40), "objectForKey:", kTHModelStorageAnchorsForCfiFrag);
  v25 = objc_msgSend(*(id *)(a1 + 40), "objectForKey:", kTHModelTextChildOffsetStorageAnchorsForCfiFrag);
  v26 = objc_msgSend(*(id *)(a1 + 40), "objectForKey:", kTHModelAnchorForCfiFrag);
  v34 = 0u;
  v35 = 0u;
  v36 = 0u;
  v37 = 0u;
  obj = *(id *)(a1 + 40);
  v2 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v34, v39, 16);
  if (v2)
  {
    v4 = v2;
    v29 = 0;
    v5 = 0;
    v6 = *(_QWORD *)v35;
    do
    {
      for (i = 0; i != v4; i = (char *)i + 1)
      {
        if (*(_QWORD *)v35 != v6)
          objc_enumerationMutation(obj);
        v8 = *(_QWORD *)(*((_QWORD *)&v34 + 1) + 8 * (_QWORD)i);
        v9 = objc_opt_class(THPresentationType, v3);
        v10 = TSUDynamicCast(v9, v8);
        if (v10)
        {
          v11 = (void *)v10;
          v12 = objc_msgSend(*(id *)(a1 + 40), "objectForKey:", v10);
          if (v5 & 1 | ((objc_msgSend(v11, "isFlow") & 1) == 0))
          {
            v13 = objc_msgSend(v11, "isPaginated");
            v14 = v29;
            if (v13)
              v14 = 0;
            v29 = v14;
            v5 |= v13;
          }
          else
          {
            v5 = 0;
            v29 = v12;
          }
          objc_msgSend(v12, "ownerRetain");
          objc_msgSend(v12, "setParent:", *(_QWORD *)(a1 + 32));
          objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "presentationContentBodies"), "setObject:forUncopiedKey:", v12, v11);
          objc_msgSend(*(id *)(a1 + 32), "setPageCount:forPresentationType:", objc_msgSend(v12, "pageCount"), v11);
          v32 = 0u;
          v33 = 0u;
          v30 = 0u;
          v31 = 0u;
          v15 = objc_msgSend(v12, "pages");
          v16 = objc_msgSend(v15, "countByEnumeratingWithState:objects:count:", &v30, v38, 16);
          if (v16)
          {
            v17 = v16;
            v18 = *(_QWORD *)v31;
            do
            {
              for (j = 0; j != v17; j = (char *)j + 1)
              {
                if (*(_QWORD *)v31 != v18)
                  objc_enumerationMutation(v15);
                objc_msgSend(*(id *)(*((_QWORD *)&v30 + 1) + 8 * (_QWORD)j), "setParent:", *(_QWORD *)(a1 + 32));
              }
              v17 = objc_msgSend(v15, "countByEnumeratingWithState:objects:count:", &v30, v38, 16);
            }
            while (v17);
          }
          if (*(uint64_t *)(*(_QWORD *)(a1 + 32) + 168) >= 1)
          {
            v20 = 0;
            do
            {
              v21 = v12;
              ++v20;
            }
            while (v20 < *(_QWORD *)(*(_QWORD *)(a1 + 32) + 168));
          }
          objc_msgSend(v12, "ownerAutoreleasedAccess");
        }
      }
      v4 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v34, v39, 16);
    }
    while (v4);
  }
  else
  {
    v29 = 0;
    v5 = 0;
  }
  if ((*(_DWORD *)(*(_QWORD *)(a1 + 32) + 152) - 1) >= 2)
    objc_msgSend(+[TSUAssertionHandler currentHandler](TSUAssertionHandler, "currentHandler"), "handleFailureInFunction:file:lineNumber:description:", +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "-[THModelContentNode contentLoadOperation:loadedContentBodies:]_block_invoke"), +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Alder/bliss/Classes/Model/THModelContentNode.m"), 1506, CFSTR("should be loading"));
  v22 = *(_QWORD *)(a1 + 32);
  if ((v29 == 0) | v5 & 1)
  {
    *(_QWORD *)(v22 + 176) += *(_QWORD *)(v22 + 168);
    *(_QWORD *)(*(_QWORD *)(a1 + 32) + 168) = 0;
    *(_DWORD *)(*(_QWORD *)(a1 + 32) + 152) = 4;
  }
  else
  {
    *(_DWORD *)(v22 + 152) = 3;
    objc_msgSend(*(id *)(a1 + 32), "setPaginatedBodyStale:", 0);
    objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 208), "cancel");

    *(_QWORD *)(*(_QWORD *)(a1 + 32) + 208) = 0;
    *(_QWORD *)(*(_QWORD *)(a1 + 32) + 208) = objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "reflowablePaginationController"), "paginateContentNode:paginationCompletionDelegate:priority:isForeground:activity:", *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 32), 8, 1, *(_QWORD *)(a1 + 48));
  }
  if (v24)
    objc_msgSend(*(id *)(a1 + 32), "p_setStorageAnchorsForCfis:");
  if (v25)
    objc_msgSend(*(id *)(a1 + 32), "p_setTextChildOffsetStorageAnchorsForCfis:");
  if (v26)
    objc_msgSend(*(id *)(a1 + 32), "setAnchorForCfiFrag:");
  if (v27)
    objc_msgSend(*(id *)(a1 + 32), "setStorageAnchorsForAnchorIDs:");
  objc_msgSend(*(id *)(a1 + 40), "removeObjectForKey:", kTHModelStorageAnchorsForAnchorID);
  objc_msgSend(*(id *)(a1 + 40), "removeObjectForKey:", kTHModelStorageAnchorsForCfiFrag);
  objc_msgSend(*(id *)(a1 + 40), "removeObjectForKey:", kTHModelTextChildOffsetStorageAnchorsForCfiFrag);
  objc_msgSend(*(id *)(a1 + 40), "removeObjectForKey:", kTHModelAnchorForCfiFrag);
  v23 = *(void **)(a1 + 56);
  if (v23 != *(void **)(*(_QWORD *)(a1 + 32) + 160))
  {
    objc_msgSend(+[TSUAssertionHandler currentHandler](TSUAssertionHandler, "currentHandler"), "handleFailureInFunction:file:lineNumber:description:", +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "-[THModelContentNode contentLoadOperation:loadedContentBodies:]_block_invoke"), +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Alder/bliss/Classes/Model/THModelContentNode.m"), 1556, CFSTR("unknown operation finished"));
    v23 = *(void **)(*(_QWORD *)(a1 + 32) + 160);
  }

  *(_QWORD *)(*(_QWORD *)(a1 + 32) + 160) = 0;
}

id sub_34890(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "logEvent:forContentNode:", CFSTR("loadContentNodeBodies:end"), *(_QWORD *)(a1 + 32));
}

uint64_t sub_35088(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  objc_msgSend(*(id *)(a1 + 32), "setHidden:", *(unsigned __int8 *)(a1 + 48));
  result = *(_QWORD *)(a1 + 40);
  if (result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(result + 16))(result, a2);
  return result;
}

id sub_350D0(uint64_t a1)
{
  double v1;

  v1 = 0.0;
  if (!*(_BYTE *)(a1 + 40))
    v1 = 1.0;
  return objc_msgSend(*(id *)(a1 + 32), "setAlpha:", v1);
}

id sub_350EC(uint64_t a1)
{
  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
  return objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "layer"), "setShouldRasterize:", *(unsigned __int8 *)(a1 + 48));
}

id sub_3517C(uint64_t a1)
{
  +[CATransaction begin](CATransaction, "begin");
  +[CATransaction setDisableActions:](CATransaction, "setDisableActions:", 1);
  (*(void (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
  return +[CATransaction commit](CATransaction, "commit");
}

void sub_35430(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 128), 8);
  _Unwind_Resume(a1);
}

void sub_35450(uint64_t a1, uint64_t a2)
{
  _Block_object_assign((void *)(a1 + 40), *(const void **)(a2 + 40), 131);
}

void sub_35460(uint64_t a1)
{
  _Block_object_dispose(*(const void **)(a1 + 40), 131);
}

id sub_3546C(uint64_t a1)
{
  double MidX;
  void *v3;
  __int128 v4;
  _OWORD v6[3];

  MidX = CGRectGetMidX(*(CGRect *)(a1 + 40));
  objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40), "setCenter:", MidX, CGRectGetMidY(*(CGRect *)(a1 + 40)));
  v3 = *(void **)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40);
  v4 = *(_OWORD *)(a1 + 88);
  v6[0] = *(_OWORD *)(a1 + 72);
  v6[1] = v4;
  v6[2] = *(_OWORD *)(a1 + 104);
  return objc_msgSend(v3, "setTransform:", v6);
}

uint64_t sub_354F4(uint64_t a1)
{
  void *v2;
  __int128 v3;
  _OWORD v5[3];

  if (*(_BYTE *)(a1 + 80))
  {
    v2 = *(void **)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40);
    v3 = *(_OWORD *)&CGAffineTransformIdentity.c;
    v5[0] = *(_OWORD *)&CGAffineTransformIdentity.a;
    v5[1] = v3;
    v5[2] = *(_OWORD *)&CGAffineTransformIdentity.tx;
    objc_msgSend(v2, "setTransform:", v5);
    objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), "setFrame:", *(double *)(a1 + 48), *(double *)(a1 + 56), *(double *)(a1 + 64), *(double *)(a1 + 72));
  }
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

void sub_368EC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *__p, uint64_t a20)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_36924(void **a1, unint64_t a2)
{
  uint64_t v3;
  _BYTE *v4;
  int64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  char *v9;
  _QWORD *v10;
  _QWORD *v11;
  char *v12;
  uint64_t v13;

  v4 = a1[2];
  v3 = (uint64_t)(a1 + 2);
  if (a2 > (v4 - (_BYTE *)*a1) >> 4)
  {
    if (a2 >> 60)
      sub_36C30();
    v5 = (_BYTE *)a1[1] - (_BYTE *)*a1;
    v6 = (char *)sub_36CB8(v3, a2);
    v7 = &v6[v5];
    v9 = &v6[16 * v8];
    v10 = *a1;
    v11 = a1[1];
    v12 = v7;
    if (v11 != *a1)
    {
      v12 = v7;
      do
      {
        v13 = *(v11 - 2);
        v11 -= 2;
        *((_QWORD *)v12 - 2) = v13;
        v12 -= 16;
        *((_QWORD *)v12 + 1) = v11[1];
      }
      while (v11 != v10);
    }
    *a1 = v12;
    a1[1] = v7;
    a1[2] = v9;
    if (v10)
      operator delete(v10);
  }
}

_QWORD *sub_369BC(_QWORD *a1, uint64_t a2, _QWORD *a3)
{
  _QWORD *v4;
  unint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char *v15;
  char *v16;
  unint64_t v17;
  unint64_t v18;
  char *v19;
  uint64_t v20;
  void *__p;
  char *v23;
  char *v24;
  char *v25;
  _QWORD *v26;

  v4 = (_QWORD *)a2;
  v7 = (_QWORD *)*a1;
  v6 = a1[1];
  v8 = a2 - *a1;
  v9 = v8 >> 4;
  v11 = (uint64_t)(a1 + 2);
  v10 = a1[2];
  if (v6 >= v10)
  {
    v12 = ((uint64_t)(v6 - (_QWORD)v7) >> 4) + 1;
    if (v12 >> 60)
      sub_36C30();
    v13 = v10 - (_QWORD)v7;
    if (v13 >> 3 > v12)
      v12 = v13 >> 3;
    if ((unint64_t)v13 >= 0x7FFFFFFFFFFFFFF0)
      v14 = 0xFFFFFFFFFFFFFFFLL;
    else
      v14 = v12;
    v26 = a1 + 2;
    if (v14)
      v15 = (char *)sub_36CB8((uint64_t)(a1 + 2), v14);
    else
      v15 = 0;
    v16 = &v15[16 * v9];
    __p = v15;
    v23 = v16;
    v24 = v16;
    v25 = &v15[16 * v14];
    if (v9 == v14)
    {
      if (v8 < 1)
      {
        if (v7 == v4)
          v18 = 1;
        else
          v18 = v8 >> 3;
        v19 = (char *)sub_36CB8(v11, v18);
        v16 = &v19[16 * (v18 >> 2)];
        __p = v19;
        v23 = v16;
        v25 = &v19[16 * v20];
        if (v15)
          operator delete(v15);
      }
      else
      {
        v17 = v9 + 2;
        if (v9 >= -1)
          v17 = v9 + 1;
        v16 -= 16 * (v17 >> 1);
        v23 = v16;
      }
    }
    *(_QWORD *)v16 = *a3;
    *((_QWORD *)v16 + 1) = a3[1];
    v24 = v16 + 16;
    v4 = (_QWORD *)sub_36D6C(a1, &__p, v4);
    if (v24 != v23)
      v24 += (v23 - v24 + 15) & 0xFFFFFFFFFFFFFFF0;
    if (__p)
      operator delete(__p);
  }
  else if (a2 == v6)
  {
    *(_QWORD *)a2 = *a3;
    v7[2 * v9 + 1] = a3[1];
    a1[1] = a2 + 16;
  }
  else
  {
    sub_36D14((uint64_t)a1, a2, v6, (char *)(a2 + 16));
    if (v4 <= a3)
      a3 += 2 * (a1[1] > (unint64_t)a3);
    *v4 = *a3;
    v7[2 * v9 + 1] = a3[1];
  }
  return v4;
}

void sub_36BB4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, uint64_t a12)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_36C30()
{
  sub_36C44("vector");
}

void sub_36C44(const char *a1)
{
  std::logic_error *exception;

  exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
  sub_36C94(exception, a1);
}

void sub_36C80(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

std::logic_error *sub_36C94(std::logic_error *a1, const char *a2)
{
  std::logic_error *result;

  result = std::logic_error::logic_error(a1, a2);
  return result;
}

void *sub_36CB8(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60)
    sub_36CEC();
  return operator new(16 * a2);
}

void sub_36CEC()
{
  std::bad_array_new_length *exception;
  std::bad_array_new_length *v1;

  exception = (std::bad_array_new_length *)__cxa_allocate_exception(8uLL);
  v1 = std::bad_array_new_length::bad_array_new_length(exception);
}

uint64_t sub_36D14(uint64_t result, uint64_t a2, unint64_t a3, char *a4)
{
  char *v4;
  uint64_t v5;
  uint64_t *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;

  v4 = *(char **)(result + 8);
  v5 = v4 - a4;
  v6 = (uint64_t *)(a2 + v4 - a4);
  v7 = v4;
  while ((unint64_t)v6 < a3)
  {
    v8 = *v6;
    v9 = v6[1];
    v6 += 2;
    *(_QWORD *)v7 = v8;
    *((_QWORD *)v7 + 1) = v9;
    v7 += 16;
  }
  *(_QWORD *)(result + 8) = v7;
  if (v4 != a4)
  {
    v10 = v4 - 8;
    v11 = 16 * (v5 >> 4);
    do
    {
      v12 = *(_QWORD *)(a2 + v11 - 8);
      *((_QWORD *)v10 - 1) = *(_QWORD *)(a2 + v11 - 16);
      *(_QWORD *)v10 = v12;
      v10 -= 16;
      v11 -= 16;
    }
    while (v11);
  }
  return result;
}

uint64_t sub_36D6C(_QWORD *a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t result;
  _QWORD *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *i;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;

  result = a2[1];
  v5 = (_QWORD *)*a1;
  v6 = result;
  if ((_QWORD *)*a1 != a3)
  {
    v7 = a3;
    v6 = a2[1];
    do
    {
      v8 = *(v7 - 2);
      v7 -= 2;
      *(_QWORD *)(v6 - 16) = v8;
      v6 -= 16;
      *(_QWORD *)(v6 + 8) = v7[1];
    }
    while (v7 != v5);
  }
  a2[1] = v6;
  v9 = (_QWORD *)a1[1];
  for (i = (_QWORD *)a2[2]; a3 != v9; i += 2)
  {
    v11 = *a3;
    v12 = a3[1];
    a3 += 2;
    *i = v11;
    i[1] = v12;
  }
  a2[2] = i;
  v13 = (_QWORD *)*a1;
  *a1 = v6;
  a2[1] = v13;
  v14 = a1[1];
  a1[1] = a2[2];
  a2[2] = v14;
  v15 = a1[2];
  a1[2] = a2[3];
  a2[3] = v15;
  *a2 = a2[1];
  return result;
}

id sub_375F8(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "willBeAddedToDocumentRoot:context:", *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40));
}

id sub_37688(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "wasAddedToDocumentRoot:context:", *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40));
}

id sub_37708(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "willBeRemovedFromDocumentRoot:", *(_QWORD *)(a1 + 32));
}

id sub_37788(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "wasRemovedFromDocumentRoot:", *(_QWORD *)(a1 + 32));
}

void sub_37AD0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_37DC4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_380C4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_3814C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_383AC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_38418(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_3846C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_3856C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_38680(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_38714(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_388B8(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 64), 8);
  _Unwind_Resume(a1);
}

id sub_388E0(uint64_t a1, void *a2)
{
  id result;

  result = objc_msgSend(a2, "firstBodyCharacterIndexOverlappingPageRect:", *(double *)(a1 + 40), *(double *)(a1 + 48), *(double *)(a1 + 56), *(double *)(a1 + 64));
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  return result;
}

void sub_389D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

__n128 sub_389F0(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = a2[3];
  a1[3] = result;
  return result;
}

id sub_38A00(uint64_t a1, void *a2)
{
  id result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  result = objc_msgSend(a2, "originOfCharacterIndex:", *(_QWORD *)(a1 + 40));
  v4 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8);
  *(_QWORD *)(v4 + 48) = v5;
  *(_QWORD *)(v4 + 56) = v6;
  return result;
}

void sub_38CB8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_39310(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_39DBC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,void *__p,uint64_t a35)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_3A168(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
  TSWPTopicNumberHints::~TSWPTopicNumberHints((TSWPTopicNumberHints *)&__p);
  _Unwind_Resume(a1);
}

void sub_3A400(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_3BA00(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_3BA20(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(*(id *)(a1 + 32), "p_layoutWithPageLayout:outDidSync:", a2, *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24);
}

void sub_3BDB0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_3C444(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  void *v11;

  objc_sync_exit(v11);
  _Unwind_Resume(a1);
}

void sub_3C524(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_3C5D4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void *sub_3C97C(uint64_t a1, unint64_t a2)
{
  if (a2 >= 0x333333333333334)
    sub_36CEC();
  return operator new(80 * a2);
}

uint64_t *sub_3C9C0(uint64_t **a1, unint64_t *a2)
{
  uint64_t *v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t **v7;
  uint64_t *v8;
  uint64_t **v9;

  v4 = (uint64_t *)operator new(0x30uLL);
  v5 = *a2;
  v6 = a2[1];
  v4[4] = *a2;
  v4[5] = v6;
  v7 = a1 + 1;
  v8 = a1[1];
  if (v8)
  {
    do
    {
      while (1)
      {
        v7 = (uint64_t **)v8;
        if (v5 >= v8[4])
          break;
        v8 = (uint64_t *)*v8;
        v9 = v7;
        if (!*v7)
          goto LABEL_8;
      }
      v8 = (uint64_t *)v8[1];
    }
    while (v8);
    v9 = v7 + 1;
  }
  else
  {
    v9 = a1 + 1;
  }
LABEL_8:
  sub_3CA4C(a1, (uint64_t)v7, v9, v4);
  return v4;
}

uint64_t *sub_3CA4C(uint64_t **a1, uint64_t a2, uint64_t **a3, uint64_t *a4)
{
  uint64_t *v5;
  uint64_t *result;

  *a4 = 0;
  a4[1] = 0;
  a4[2] = a2;
  *a3 = a4;
  v5 = (uint64_t *)**a1;
  if (v5)
  {
    *a1 = v5;
    a4 = *a3;
  }
  result = sub_3CAA0(a1[1], a4);
  a1[2] = (uint64_t *)((char *)a1[2] + 1);
  return result;
}

uint64_t *sub_3CAA0(uint64_t *result, uint64_t *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t *v4;
  _BYTE *v5;
  int v6;
  uint64_t v7;
  int v8;
  uint64_t **v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  *((_BYTE *)a2 + 24) = a2 == result;
  if (a2 != result)
  {
    do
    {
      v2 = (uint64_t *)a2[2];
      if (*((_BYTE *)v2 + 24))
        return result;
      v3 = (uint64_t *)v2[2];
      v4 = (uint64_t *)*v3;
      if ((uint64_t *)*v3 == v2)
      {
        v7 = v3[1];
        if (!v7 || (v8 = *(unsigned __int8 *)(v7 + 24), v5 = (_BYTE *)(v7 + 24), v8))
        {
          if ((uint64_t *)*v2 == a2)
          {
            v9 = (uint64_t **)a2[2];
          }
          else
          {
            v9 = (uint64_t **)v2[1];
            v10 = *v9;
            v2[1] = (uint64_t)*v9;
            if (v10)
            {
              v10[2] = (uint64_t)v2;
              v3 = (uint64_t *)v2[2];
            }
            v9[2] = v3;
            *(_QWORD *)(v2[2] + 8 * (*(_QWORD *)v2[2] != (_QWORD)v2)) = v9;
            *v9 = v2;
            v2[2] = (uint64_t)v9;
            v3 = v9[2];
            v2 = (uint64_t *)*v3;
          }
          *((_BYTE *)v9 + 24) = 1;
          *((_BYTE *)v3 + 24) = 0;
          v13 = v2[1];
          *v3 = v13;
          if (v13)
            *(_QWORD *)(v13 + 16) = v3;
          v2[2] = v3[2];
          *(_QWORD *)(v3[2] + 8 * (*(_QWORD *)v3[2] != (_QWORD)v3)) = v2;
          v2[1] = (uint64_t)v3;
          goto LABEL_27;
        }
      }
      else if (!v4 || (v6 = *((unsigned __int8 *)v4 + 24), v5 = v4 + 3, v6))
      {
        if ((uint64_t *)*v2 == a2)
        {
          v11 = a2[1];
          *v2 = v11;
          if (v11)
          {
            *(_QWORD *)(v11 + 16) = v2;
            v3 = (uint64_t *)v2[2];
          }
          a2[2] = (uint64_t)v3;
          *(_QWORD *)(v2[2] + 8 * (*(_QWORD *)v2[2] != (_QWORD)v2)) = a2;
          a2[1] = (uint64_t)v2;
          v2[2] = (uint64_t)a2;
          v3 = (uint64_t *)a2[2];
        }
        else
        {
          a2 = (uint64_t *)a2[2];
        }
        *((_BYTE *)a2 + 24) = 1;
        *((_BYTE *)v3 + 24) = 0;
        v2 = (uint64_t *)v3[1];
        v12 = *v2;
        v3[1] = *v2;
        if (v12)
          *(_QWORD *)(v12 + 16) = v3;
        v2[2] = v3[2];
        *(_QWORD *)(v3[2] + 8 * (*(_QWORD *)v3[2] != (_QWORD)v3)) = v2;
        *v2 = (uint64_t)v3;
LABEL_27:
        v3[2] = (uint64_t)v2;
        return result;
      }
      *((_BYTE *)v2 + 24) = 1;
      a2 = v3;
      *((_BYTE *)v3 + 24) = v3 == result;
      *v5 = 1;
    }
    while (v3 != result);
  }
  return result;
}

void *sub_3CC38(uint64_t a1, unint64_t a2)
{
  if (a2 >> 61)
    sub_36CEC();
  return operator new(8 * a2);
}

uint64_t sub_3CC6C(uint64_t **a1, unint64_t *a2)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t *v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t *v8;

  v3 = sub_3CCE4((uint64_t)a1, a2);
  if (v3 == v4)
    return 0;
  v5 = v3;
  v6 = v4;
  v7 = 0;
  do
  {
    v8 = sub_3CD7C(a1, v5);
    operator delete(v5);
    ++v7;
    v5 = v8;
  }
  while (v8 != v6);
  return v7;
}

_QWORD *sub_3CCE4(uint64_t a1, unint64_t *a2)
{
  _QWORD *v2;
  _QWORD *v3;
  unint64_t v4;
  unint64_t v5;
  _QWORD *result;
  _QWORD *v7;
  unint64_t v8;
  BOOL v9;
  _QWORD *v10;
  _QWORD *v11;
  _QWORD *v12;

  v2 = (_QWORD *)(a1 + 8);
  v3 = *(_QWORD **)(a1 + 8);
  if (!v3)
    return v2;
  v4 = *a2;
  while (1)
  {
    v5 = v3[4];
    if (v4 >= v5)
      break;
    v2 = v3;
LABEL_7:
    v3 = (_QWORD *)*v3;
    if (!v3)
      return v2;
  }
  if (v5 < v4)
  {
    ++v3;
    goto LABEL_7;
  }
  v7 = (_QWORD *)*v3;
  result = v3;
  if (*v3)
  {
    result = v3;
    do
    {
      v8 = v7[4];
      v9 = v8 >= v4;
      if (v8 >= v4)
        v10 = v7;
      else
        v10 = v7 + 1;
      if (v9)
        result = v7;
      v7 = (_QWORD *)*v10;
    }
    while (*v10);
  }
  v11 = (_QWORD *)v3[1];
  if (v11)
  {
    do
    {
      if (v4 >= v11[4])
        v12 = v11 + 1;
      else
        v12 = v11;
      v11 = (_QWORD *)*v12;
    }
    while (*v12);
  }
  return result;
}

uint64_t *sub_3CD7C(uint64_t **a1, uint64_t *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t *v4;
  BOOL v5;
  uint64_t *v6;

  v2 = (uint64_t *)a2[1];
  if (v2)
  {
    do
    {
      v3 = v2;
      v2 = (uint64_t *)*v2;
    }
    while (v2);
  }
  else
  {
    v4 = a2;
    do
    {
      v3 = (uint64_t *)v4[2];
      v5 = *v3 == (_QWORD)v4;
      v4 = v3;
    }
    while (!v5);
  }
  if (*a1 == a2)
    *a1 = v3;
  v6 = a1[1];
  a1[2] = (uint64_t *)((char *)a1[2] - 1);
  sub_3CDEC(v6, a2);
  return v3;
}

uint64_t *sub_3CDEC(uint64_t *result, uint64_t *a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t *v4;
  int v5;
  uint64_t **v6;
  uint64_t *v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t *v16;
  uint64_t *v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t *v20;
  BOOL v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v2 = *a2;
  v3 = a2;
  if (*a2)
  {
    v4 = (uint64_t *)a2[1];
    if (!v4)
    {
      v3 = a2;
      goto LABEL_7;
    }
    do
    {
      v3 = v4;
      v4 = (uint64_t *)*v4;
    }
    while (v4);
  }
  v2 = v3[1];
  if (v2)
  {
LABEL_7:
    v5 = 0;
    *(_QWORD *)(v2 + 16) = v3[2];
    goto LABEL_8;
  }
  v5 = 1;
LABEL_8:
  v6 = (uint64_t **)v3[2];
  v7 = *v6;
  if (*v6 == v3)
  {
    *v6 = (uint64_t *)v2;
    if (v3 == result)
    {
      v7 = 0;
      result = (uint64_t *)v2;
    }
    else
    {
      v7 = v6[1];
    }
  }
  else
  {
    v6[1] = (uint64_t *)v2;
  }
  v8 = *((unsigned __int8 *)v3 + 24);
  if (v3 != a2)
  {
    v9 = a2[2];
    v3[2] = v9;
    *(_QWORD *)(v9 + 8 * (*(_QWORD *)a2[2] != (_QWORD)a2)) = v3;
    v11 = *a2;
    v10 = a2[1];
    *(_QWORD *)(v11 + 16) = v3;
    *v3 = v11;
    v3[1] = v10;
    if (v10)
      *(_QWORD *)(v10 + 16) = v3;
    *((_BYTE *)v3 + 24) = *((_BYTE *)a2 + 24);
    if (result == a2)
      result = v3;
  }
  if (!v8 || !result)
    return result;
  if (!v5)
  {
    *(_BYTE *)(v2 + 24) = 1;
    return result;
  }
  while (1)
  {
    v12 = v7[2];
    if (*(uint64_t **)v12 == v7)
      break;
    if (!*((_BYTE *)v7 + 24))
    {
      *((_BYTE *)v7 + 24) = 1;
      *(_BYTE *)(v12 + 24) = 0;
      v13 = *(uint64_t **)(v12 + 8);
      v14 = *v13;
      *(_QWORD *)(v12 + 8) = *v13;
      if (v14)
        *(_QWORD *)(v14 + 16) = v12;
      v13[2] = *(_QWORD *)(v12 + 16);
      *(_QWORD *)(*(_QWORD *)(v12 + 16) + 8 * (**(_QWORD **)(v12 + 16) != v12)) = v13;
      *v13 = v12;
      *(_QWORD *)(v12 + 16) = v13;
      if (result == (uint64_t *)*v7)
        result = v7;
      v7 = *(uint64_t **)(*v7 + 8);
    }
    v15 = (_QWORD *)*v7;
    if (*v7 && !*((_BYTE *)v15 + 24))
    {
      v16 = (uint64_t *)v7[1];
      if (!v16)
        goto LABEL_56;
LABEL_55:
      if (*((_BYTE *)v16 + 24))
      {
LABEL_56:
        *((_BYTE *)v15 + 24) = 1;
        *((_BYTE *)v7 + 24) = 0;
        v22 = v15[1];
        *v7 = v22;
        if (v22)
          *(_QWORD *)(v22 + 16) = v7;
        v15[2] = v7[2];
        *(_QWORD *)(v7[2] + 8 * (*(_QWORD *)v7[2] != (_QWORD)v7)) = v15;
        v15[1] = v7;
        v7[2] = (uint64_t)v15;
        v16 = v7;
      }
      else
      {
        v15 = v7;
      }
      v23 = v15[2];
      *((_BYTE *)v15 + 24) = *(_BYTE *)(v23 + 24);
      *(_BYTE *)(v23 + 24) = 1;
      *((_BYTE *)v16 + 24) = 1;
      v24 = *(uint64_t **)(v23 + 8);
      v25 = *v24;
      *(_QWORD *)(v23 + 8) = *v24;
      if (v25)
        *(_QWORD *)(v25 + 16) = v23;
      v24[2] = *(_QWORD *)(v23 + 16);
      *(_QWORD *)(*(_QWORD *)(v23 + 16) + 8 * (**(_QWORD **)(v23 + 16) != v23)) = v24;
      *v24 = v23;
      goto LABEL_72;
    }
    v16 = (uint64_t *)v7[1];
    if (v16 && !*((_BYTE *)v16 + 24))
      goto LABEL_55;
    *((_BYTE *)v7 + 24) = 0;
    v17 = (uint64_t *)v7[2];
    if (v17 == result)
    {
      v17 = result;
LABEL_53:
      *((_BYTE *)v17 + 24) = 1;
      return result;
    }
    if (!*((_BYTE *)v17 + 24))
      goto LABEL_53;
LABEL_49:
    v7 = *(uint64_t **)(v17[2] + 8 * (*(_QWORD *)v17[2] == (_QWORD)v17));
  }
  if (!*((_BYTE *)v7 + 24))
  {
    *((_BYTE *)v7 + 24) = 1;
    *(_BYTE *)(v12 + 24) = 0;
    v18 = v7[1];
    *(_QWORD *)v12 = v18;
    if (v18)
      *(_QWORD *)(v18 + 16) = v12;
    v7[2] = *(_QWORD *)(v12 + 16);
    *(_QWORD *)(*(_QWORD *)(v12 + 16) + 8 * (**(_QWORD **)(v12 + 16) != v12)) = v7;
    v7[1] = v12;
    *(_QWORD *)(v12 + 16) = v7;
    if (result == (uint64_t *)v12)
      result = v7;
    v7 = *(uint64_t **)v12;
  }
  v19 = (_QWORD *)*v7;
  if (*v7 && !*((_BYTE *)v19 + 24))
    goto LABEL_68;
  v20 = (uint64_t *)v7[1];
  if (!v20 || *((_BYTE *)v20 + 24))
  {
    *((_BYTE *)v7 + 24) = 0;
    v17 = (uint64_t *)v7[2];
    if (*((_BYTE *)v17 + 24))
      v21 = v17 == result;
    else
      v21 = 1;
    if (v21)
      goto LABEL_53;
    goto LABEL_49;
  }
  if (v19 && !*((_BYTE *)v19 + 24))
  {
LABEL_68:
    v20 = v7;
  }
  else
  {
    *((_BYTE *)v20 + 24) = 1;
    *((_BYTE *)v7 + 24) = 0;
    v26 = *v20;
    v7[1] = *v20;
    if (v26)
      *(_QWORD *)(v26 + 16) = v7;
    v20[2] = v7[2];
    *(_QWORD *)(v7[2] + 8 * (*(_QWORD *)v7[2] != (_QWORD)v7)) = v20;
    *v20 = (uint64_t)v7;
    v7[2] = (uint64_t)v20;
    v19 = v7;
  }
  v23 = v20[2];
  *((_BYTE *)v20 + 24) = *(_BYTE *)(v23 + 24);
  *(_BYTE *)(v23 + 24) = 1;
  *((_BYTE *)v19 + 24) = 1;
  v24 = *(uint64_t **)v23;
  v27 = *(_QWORD *)(*(_QWORD *)v23 + 8);
  *(_QWORD *)v23 = v27;
  if (v27)
    *(_QWORD *)(v27 + 16) = v23;
  v24[2] = *(_QWORD *)(v23 + 16);
  *(_QWORD *)(*(_QWORD *)(v23 + 16) + 8 * (**(_QWORD **)(v23 + 16) != v23)) = v24;
  v24[1] = v23;
LABEL_72:
  *(_QWORD *)(v23 + 16) = v24;
  return result;
}

void sub_3D170(uint64_t a1, _QWORD *a2)
{
  if (a2)
  {
    sub_3D170(a1, *a2);
    sub_3D170(a1, a2[1]);
    operator delete(a2);
  }
}

uint64_t sub_3F310(uint64_t a1, void *a2)
{
  objc_msgSend(*(id *)(a1 + 32), "calculatePointFromSearchReference:", a2);
  objc_msgSend(a2, "setSearchReferencePoint:");
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
}

void sub_404EC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_40750(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_40C50(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

NSUInteger THTrimHighlightRange(TSWPStorage *a1, _NSRange a2)
{
  NSUInteger location;
  NSUInteger v4;
  NSUInteger v5;
  NSUInteger v6;

  location = a2.location;
  if (a1)
  {
    v4 = a2.length + 1;
    while (1)
    {
      v5 = location + v4;
      if (location + v4 - 1 <= location)
        break;
      --v4;
      if ((IsWhitespaceCharacter(-[TSWPStorage characterAtIndex:](a1, "characterAtIndex:", v5 - 2)) & 1) == 0)
      {
        v6 = location + v4;
        while (IsWhitespaceCharacter(-[TSWPStorage characterAtIndex:](a1, "characterAtIndex:", location)))
        {
          ++location;
          if (!--v4)
            return v6;
        }
        return location;
      }
    }
  }
  return location;
}

BOOL sub_41BAC(id a1, TSDRep *a2, unint64_t a3, BOOL *a4)
{
  return objc_msgSend(-[TSDRep info](a2, "info", a3, a4), "conformsToProtocol:", &OBJC_PROTOCOL___THWWidgetInfo);
}

BOOL sub_41BCC(id a1, TSDRep *a2, unint64_t a3, BOOL *a4)
{
  void *v5;
  BOOL v6;
  unsigned __int8 v7;

  v5 = (void *)TSUProtocolCast(&OBJC_PROTOCOL___THWPressableRep, a2);
  v6 = (objc_opt_respondsToSelector(a2, "pressableAction") & 1) != 0
    && objc_msgSend(v5, "pressableAction") == 1;
  if ((objc_opt_respondsToSelector(a2, "pressableMoveToHitTestFront") & 1) != 0)
    v7 = objc_msgSend(v5, "pressableMoveToHitTestFront");
  else
    v7 = 0;
  return v6 | v7;
}

id sub_421F0(uint64_t a1)
{
  return objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 288), "setContents:", 0);
}

uint64_t sub_44FA0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  id v11;
  uint64_t result;
  uint64_t v13;
  id v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  _BYTE v23[128];

  v4 = objc_opt_class(TSWPDrawableAttachment, a2);
  v5 = (void *)TSUDynamicCast(v4, a2);
  v6 = objc_msgSend(v5, "drawable");
  v8 = objc_opt_class(THWAnchoredWidgetInfo, v7);
  if ((objc_opt_isKindOfClass(v6, v8) & 1) != 0)
  {
    v10 = objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "paginationResults"), "firstPageIndexIntersectingRange:", objc_msgSend(v5, "findCharIndex"), 1);
    v11 = objc_msgSend(v6, "widgetInfo");
    if ((objc_opt_respondsToSelector(v11, "childEnumerator") & 1) == 0)
    {
      result = objc_opt_respondsToSelector(v11, "adornmentInfo");
      if ((result & 1) == 0)
        return result;
      v11 = objc_msgSend(v11, "adornmentInfo");
    }
    return (uint64_t)objc_msgSend(*(id *)(a1 + 32), "p_accumulateStorageUIDsForChildrenInObject:forRelativePageIndex:", v11, v10);
  }
  else
  {
    v13 = objc_opt_class(THTableInfo, v9);
    result = objc_opt_isKindOfClass(v6, v13);
    if ((result & 1) != 0)
    {
      v14 = objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "paginationResults"), "firstPageIndexIntersectingRange:", objc_msgSend(v5, "findCharIndex"), 1);
      v19 = 0u;
      v20 = 0u;
      v21 = 0u;
      v22 = 0u;
      v15 = objc_msgSend(v6, "allWPStorages", 0);
      result = (uint64_t)objc_msgSend(v15, "countByEnumeratingWithState:objects:count:", &v19, v23, 16);
      if (result)
      {
        v16 = result;
        v17 = *(_QWORD *)v20;
        do
        {
          v18 = 0;
          do
          {
            if (*(_QWORD *)v20 != v17)
              objc_enumerationMutation(v15);
            objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "paginationResults"), "assignRelativePageIndex:toStorageUID:", v14, objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "flowModelContentNodeBody"), "nodeUniqueIDForInfo:", *(_QWORD *)(*((_QWORD *)&v19 + 1) + 8 * v18++)));
          }
          while (v16 != v18);
          result = (uint64_t)objc_msgSend(v15, "countByEnumeratingWithState:objects:count:", &v19, v23, 16);
          v16 = result;
        }
        while (result);
      }
    }
  }
  return result;
}

void THWSceneViewReleaseData(int a1, void *a2)
{
  free(a2);
}

void sub_468D4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_46964(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_469DC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_46A64(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_46AA4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_46B04(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_46B50(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_46BA0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_46BF0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

id sub_4748C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  void *v9;

  v8 = objc_opt_class(TSWPCharacterStyle, a2);
  v9 = (void *)TSUDynamicCast(v8, a2);
  return objc_msgSend(*(id *)(a1 + 40), "setCharacterStyle:range:undoTransaction:", objc_msgSend(objc_msgSend(v9, "stylesheet"), "variationOfStyle:propertyMap:", v9, *(_QWORD *)(a1 + 32)), a3, a4, 0);
}

id sub_4776C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = objc_opt_class(TSWPCharacterStyle, a2);
  return objc_msgSend((id)TSUDynamicCast(v4, a2), "setValue:forProperty:", *(_QWORD *)(a1 + 32), 18);
}

id sub_4BE18(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "willBeAddedToDocumentRoot:context:", *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40));
}

id sub_4BEBC(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "wasAddedToDocumentRoot:context:", *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40));
}

id sub_4BF4C(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "willBeRemovedFromDocumentRoot:", *(_QWORD *)(a1 + 32));
}

id sub_4BFDC(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "wasRemovedFromDocumentRoot:", *(_QWORD *)(a1 + 32));
}

char *sub_4EBD4(char *result, char *__src, uint64_t a3, unint64_t a4)
{
  _QWORD *v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  void **v13;
  char *v14;
  _BYTE *v15;
  char *v16;
  size_t v17;
  void *v18;
  char *v19;

  v7 = result;
  v8 = *((_QWORD *)result + 2);
  v9 = *(char **)result;
  if (0xCCCCCCCCCCCCCCCDLL * ((v8 - *(_QWORD *)result) >> 4) < a4)
  {
    if (v9)
    {
      *((_QWORD *)result + 1) = v9;
      operator delete(v9);
      v8 = 0;
      *v7 = 0;
      v7[1] = 0;
      v7[2] = 0;
    }
    if (a4 > 0x333333333333333)
      sub_36C30();
    v10 = 0xCCCCCCCCCCCCCCCDLL * (v8 >> 4);
    v11 = 2 * v10;
    if (2 * v10 <= a4)
      v11 = a4;
    if (v10 >= 0x199999999999999)
      v12 = 0x333333333333333;
    else
      v12 = v11;
    result = sub_4ED0C(v7, v12);
    v14 = (char *)v7[1];
    v13 = (void **)(v7 + 1);
    v9 = v14;
LABEL_16:
    v17 = a3 - (_QWORD)__src;
    if (v17)
    {
      v18 = v9;
      v19 = __src;
      goto LABEL_18;
    }
    goto LABEL_19;
  }
  v13 = (void **)(result + 8);
  v15 = (_BYTE *)*((_QWORD *)result + 1);
  if (0xCCCCCCCCCCCCCCCDLL * ((v15 - v9) >> 4) >= a4)
    goto LABEL_16;
  v16 = &__src[16 * ((v15 - v9) >> 4)];
  if (v15 != v9)
  {
    result = (char *)memmove(*(void **)result, __src, v15 - v9);
    v9 = (char *)*v13;
  }
  v17 = a3 - (_QWORD)v16;
  if (v17)
  {
    v18 = v9;
    v19 = v16;
LABEL_18:
    result = (char *)memmove(v18, v19, v17);
  }
LABEL_19:
  *v13 = &v9[v17];
  return result;
}

char *sub_4ED0C(_QWORD *a1, unint64_t a2)
{
  char *result;
  uint64_t v4;

  if (a2 >= 0x333333333333334)
    sub_36C30();
  result = (char *)sub_3C97C((uint64_t)(a1 + 2), a2);
  *a1 = result;
  a1[1] = result;
  a1[2] = &result[80 * v4];
  return result;
}

_QWORD *sub_4ED5C(_QWORD *result, const void *a2, uint64_t a3, unint64_t a4)
{
  _QWORD *v6;
  uint64_t v7;
  size_t v8;

  if (a4)
  {
    v6 = result;
    result = sub_4ED0C(result, a4);
    v7 = v6[1];
    v8 = a3 - (_QWORD)a2;
    if (v8)
      result = memmove((void *)v6[1], a2, v8);
    v6[1] = v7 + v8;
  }
  return result;
}

void sub_4EDB8(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void *v3;

  v3 = *(void **)v1;
  if (*(_QWORD *)v1)
  {
    *(_QWORD *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_50388(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "currentContentNodes"), "containsObject:", a2) ^ 1;
}

void sub_50C08(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  id v8;
  _QWORD v9[7];
  _QWORD v10[12];
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  char v14;
  _QWORD v15[5];
  uint64_t v16;
  _QWORD v17[5];
  id v18;

  if (a3 != 0x7FFFFFFFFFFFFFFFLL)
  {
    if (a2)
      v8 = objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "sectionInfos"), "objectForKey:", a2);
    else
      v8 = 0;
    objc_msgSend(a2, "startLoading");
    if (*(_BYTE *)(a1 + 40))
      objc_msgSend(a2, "waitUntilFinishedLoadingAndPaginating");
    v17[0] = 0;
    v17[1] = v17;
    v17[2] = 0x3052000000;
    v17[3] = sub_50DDC;
    v17[4] = sub_50DEC;
    v18 = 0;
    v18 = objc_msgSend(*(id *)(a1 + 32), "delegate");
    v15[0] = 0;
    v15[1] = v15;
    v15[2] = 0x3052000000;
    v15[3] = sub_50DDC;
    v15[4] = sub_50DEC;
    v16 = *(_QWORD *)(a1 + 32);
    v11 = 0;
    v12 = &v11;
    v13 = 0x2020000000;
    v14 = 0;
    v10[0] = _NSConcreteStackBlock;
    v10[1] = 3221225472;
    v10[2] = sub_50DF8;
    v10[3] = &unk_427AA0;
    v10[4] = a2;
    v10[5] = v16;
    v10[10] = a3;
    v10[11] = a4;
    v10[6] = v8;
    v10[7] = v17;
    v10[8] = v15;
    v10[9] = &v11;
    v9[0] = _NSConcreteStackBlock;
    v9[1] = 3221225472;
    v9[2] = sub_50EF4;
    v9[3] = &unk_427AC8;
    v9[4] = v8;
    v9[5] = v17;
    v9[6] = v15;
    objc_msgSend(a2, "performWhenFinishedLoading:onError:", v10, v9);
    *((_BYTE *)v12 + 24) = 1;
    _Block_object_dispose(&v11, 8);
    _Block_object_dispose(v15, 8);
    _Block_object_dispose(v17, 8);
  }
}

void sub_50DAC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29,uint64_t a30,uint64_t a31,uint64_t a32,char a33)
{
  uint64_t v33;

  _Block_object_dispose(&a29, 8);
  _Block_object_dispose(&a33, 8);
  _Block_object_dispose((const void *)(v33 - 144), 8);
  _Unwind_Resume(a1);
}

void sub_50DDC(uint64_t a1, uint64_t a2)
{
  _Block_object_assign((void *)(a1 + 40), *(const void **)(a2 + 40), 131);
}

void sub_50DEC(uint64_t a1)
{
  _Block_object_dispose(*(const void **)(a1 + 40), 131);
}

id sub_50DF8(uint64_t a1)
{
  id v2;
  unint64_t v3;
  unint64_t i;
  id v5;
  id result;

  objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 40), "sectionController:didLoadContentNode:presentationType:", *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 40), *(_QWORD *)(a1 + 32), objc_msgSend(*(id *)(a1 + 40), "presentationType"));
  v2 = +[NSMutableArray array](NSMutableArray, "array");
  v3 = *(_QWORD *)(a1 + 80);
  for (i = *(_QWORD *)(a1 + 88) + v3; v3 < i; i = *(_QWORD *)(a1 + 88) + *(_QWORD *)(a1 + 80))
  {
    v5 = objc_msgSend(*(id *)(a1 + 32), "pageAtRelativeIndex:forPresentationType:", v3, objc_msgSend(*(id *)(a1 + 40), "presentationType"));
    if (v5)
      objc_msgSend(v2, "addObject:", v5);
    ++v3;
  }
  result = objc_msgSend(*(id *)(a1 + 48), "setPages:", objc_msgSend(objc_msgSend(*(id *)(a1 + 48), "pages"), "arrayByAddingObjectsFromArray:", v2));
  if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 72) + 8) + 24))
    return objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 40), "sectionControllerInfosDidChange:", *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 40));
  return result;
}

id sub_50EF4(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 32), "setPages:", 0);
  return objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), "showCorruptDocumentAlertForSectionController:", *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40));
}

id sub_510F4(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(*(id *)(a1 + 32), "p_addPagesInRange:forceLoad:", a2, 1, *(unsigned __int8 *)(a1 + 40));
}

uint64_t sub_51228(uint64_t a1, void *a2, void *a3)
{
  return THNSComparisonResultFromInteger((_BYTE *)objc_msgSend(*(id *)(a1 + 32), "indexOfObject:", objc_msgSend(objc_msgSend(a2, "pageController"), "contentNode"))- (_BYTE *)objc_msgSend(*(id *)(a1 + 32), "indexOfObject:", objc_msgSend(objc_msgSend(a3, "pageController"), "contentNode")));
}

void sub_51504(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

__n128 sub_5151C(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)(a2 + 48);
  v3 = *(_OWORD *)(a2 + 64);
  *(__n128 *)(a1 + 48) = result;
  *(_OWORD *)(a1 + 64) = v3;
  return result;
}

void sub_5152C(uint64_t a1)
{
  double v2;
  double v3;
  double v4;
  double v5;
  id v6;
  id v7;
  id v8;
  double v9;
  double v10;
  double v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  objc_msgSend(*(id *)(a1 + 32), "pageOriginForRelativePageIndex:", *(_QWORD *)(a1 + 48));
  v3 = v2;
  v5 = v4;
  v6 = objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "currentNavigationUnit"), "contentNodeForRelativePageIndex:forPresentationType:", *(_QWORD *)(a1 + 48), objc_msgSend(*(id *)(a1 + 32), "presentationType"));
  if (v6)
    v7 = objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "pageControllers"), "objectForKey:", v6);
  else
    v7 = 0;
  v8 = objc_msgSend(v7, "desiredPageSizeForRelativePageIndex:", objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "currentNavigationUnit"), "nodeRelativePageIndexInContentNode:forNavigationUnitRelativePageIndex:presentationType:", v6, *(_QWORD *)(a1 + 48), objc_msgSend(*(id *)(a1 + 32), "presentationType")));
  v11 = TSDRectWithOriginAndSize(v8, v3, v5, v9, v10);
  v12 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  *(double *)(v12 + 48) = v11;
  *(_QWORD *)(v12 + 56) = v13;
  *(_QWORD *)(v12 + 64) = v14;
  *(_QWORD *)(v12 + 72) = v15;
}

id *sub_51F70(id *result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id *v4;
  uint64_t v5;
  uint64_t v6;
  id v7;

  if (a3 != 0x7FFFFFFFFFFFFFFFLL)
  {
    v4 = result;
    v5 = a4 - 1;
    if (!a4)
      v5 = 0;
    v6 = v5 + a3;
    if (a2)
      v7 = objc_msgSend(objc_msgSend(result[4], "pageControllers"), "objectForKey:", a2);
    else
      v7 = 0;
    return (id *)objc_msgSend(v7, "layoutThroughRelativePageIndex:layoutController:", v6, v4[5]);
  }
  return result;
}

void sub_539D0(id a1, THModelContentNode *a2, THPageController *a3, BOOL *a4)
{
  -[THPageController clearCTCache](a3, "clearCTCache");
}

id sub_549BC(uint64_t a1)
{
  return objc_msgSend(objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "documentViewController"), "interactiveCanvasController"), "pageLeft");
}

id sub_549D8(uint64_t a1)
{
  return objc_msgSend(objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "documentViewController"), "interactiveCanvasController"), "pageRight");
}

id sub_54A68(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "closeDocument");
}

id sub_54AE8(uint64_t a1)
{
  return objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "chapterBrowserController"), "transitionPageToDVC:chapterIndex:", 0, 0);
}

void sub_55728(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  uint64_t v30;

  _Block_object_dispose(&a30, 8);
  _Block_object_dispose((const void *)(v30 - 152), 8);
  _Unwind_Resume(a1);
}

uint64_t sub_5574C(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_5575C(uint64_t a1)
{

}

void sub_55764(uint64_t a1, void *a2)
{
  id v4;

  objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), a2);
  v4 = a2;
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));

}

void sub_557B0(uint64_t a1, void *a2)
{
  id v4;

  objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), a2);
  v4 = a2;
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));

}

void sub_557FC(_QWORD *a1)
{
  uint64_t v2;
  void *v3;
  void *v4;
  uint64_t v5;
  NSObject *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if (objc_msgSend(*(id *)(*(_QWORD *)(a1[6] + 8) + 40), "quality") < 0x65)
    v2 = a1[7];
  else
    v2 = a1[6];
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(v2 + 8) + 40), "image"));
  v4 = (void *)objc_claimAutoreleasedReturnValue(+[UIImage imageWithCGImage:](UIImage, "imageWithCGImage:", objc_msgSend(v3, "CGImage")));

  if (!v4)
  {
    v5 = BCImageCacheLog();
    v6 = objc_claimAutoreleasedReturnValue(v5);
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEBUG))
      sub_271274((uint64_t)a1, v6, v7, v8, v9, v10, v11, v12);

  }
  objc_msgSend(*(id *)(a1[5] + 8), "setImage:", v4);

}

void sub_561E4(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_debug_impl(a1, a2, OS_LOG_TYPE_DEBUG, a4, &a9, 0xCu);
}

void sub_56DFC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_56E14(uint64_t a1, uint64_t a2)
{
  _Block_object_assign((void *)(a1 + 40), *(const void **)(a2 + 40), 131);
}

void sub_56E24(uint64_t a1)
{
  _Block_object_dispose(*(const void **)(a1 + 40), 131);
}

id sub_56E30(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void *v5;
  uint64_t v6;
  void *v7;
  id v8;
  uint64_t v9;
  id result;
  id v11;

  v4 = objc_opt_class(THModelContainerNode, a2);
  v5 = (void *)TSUDynamicCast(v4, a2);
  if (v5)
  {
    v7 = v5;
    v8 = objc_msgSend(v5, "applePubRelativePath");
    if (v8)
      objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40), "setObject:forKey:", v7, v8);
  }
  v9 = objc_opt_class(THModelContentNode, v6);
  result = (id)TSUDynamicCast(v9, a2);
  if (result)
  {
    v11 = result;
    result = objc_msgSend(result, "applePubRelativePath");
    if (result)
      return objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40), "setObject:forKey:", v11, result);
  }
  return result;
}

uint64_t THNSComparisonResultFromInteger(uint64_t a1)
{
  uint64_t v1;

  if (a1 < 0)
    v1 = -1;
  else
    v1 = a1;
  if (v1 >= 1)
    return 1;
  else
    return v1;
}

uint64_t sub_57144(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  id v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;

  v6 = objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "positioningOfDrawable:", a2), "bodyCharIndex");
  v7 = objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "positioningOfDrawable:", a3), "bodyCharIndex");
  if (v6 > v7)
    return 1;
  if (v7 > v6)
    return -1;
  v10 = objc_opt_class(THWGutterInfo, v8);
  v11 = (void *)TSUDynamicCast(v10, a2);
  v13 = objc_opt_class(THWGutterInfo, v12);
  v14 = TSUDynamicCast(v13, a3);
  if (v11)
  {
    v15 = (void *)v14;
    if (v14)
    {
      v16 = objc_msgSend(objc_msgSend(v11, "associatedInfo"), "geometry");
      v17 = objc_msgSend(objc_msgSend(v15, "associatedInfo"), "geometry");
      objc_msgSend(v16, "position");
      v19 = v18;
      objc_msgSend(v17, "position");
      if (v19 < v20)
        return -1;
      objc_msgSend(v16, "position");
      v22 = v21;
      objc_msgSend(v17, "position");
      if (v22 > v23)
        return 1;
      objc_msgSend(v16, "position");
      v25 = v24;
      objc_msgSend(v17, "position");
      if (v25 < v26)
        return -1;
      objc_msgSend(v16, "position");
      v28 = v27;
      objc_msgSend(v17, "position");
      if (v28 > v29)
        return 1;
    }
  }
  return 0;
}

void sub_5750C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_57940(void *exc_buf, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9)
{
  void *v9;
  id v10;

  if (a2 == 2)
  {
    v10 = objc_begin_catch(exc_buf);
    objc_msgSend(v10, "description");
    NSLog(CFSTR("THBookOpener caught exception: %@"));
    objc_msgSend(v9, "setException:", v10);
    objc_end_catch();
    JUMPOUT(0x57824);
  }
  objc_begin_catch(exc_buf);
  JUMPOUT(0x57828);
}

void sub_57A9C(id a1)
{
  byte_543178 = MGGetBoolAnswer(CFSTR("apple-internal-install"));
}

void sub_57BC4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

id sub_57DA0(id result)
{
  void *v1;

  if (result)
  {
    v1 = result;
    objc_msgSend(result, "setTheme:", +[IMTheme themeWithIdentifier:](IMTheme, "themeWithIdentifier:", kIMThemeIdentifierDefaultPageTheme));
    objc_msgSend(v1, "setAppearanceStyle:", 0);
    return objc_msgSend(v1, "registerForTraitChanges:withAction:", +[UITraitCollection bc_allAPITraits](UITraitCollection, "bc_allAPITraits"), "_traitCollectionDidChange:previousTraitCollection:");
  }
  return result;
}

id sub_580F8(uint64_t a1)
{
  return objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "delegate"), "displaySettingsControllerDidChangeFlowMode:", *(_QWORD *)(a1 + 32));
}

id sub_598F0(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 32), "setSupportedSections:", *(_QWORD *)(a1 + 40));
  objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "tableView"), "reloadData");
  return objc_msgSend(*(id *)(a1 + 32), "p_setPopoverScrolling");
}

id sub_59924(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "setPreferredContentSize:", *(double *)(a1 + 56), *(double *)(a1 + 64));
}

uint64_t sub_59930(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

uint64_t sub_5993C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

BOOL sub_59FD4(id a1, SCNNode *a2, BOOL *a3)
{
  return -[SCNNode geometry](a2, "geometry", a3) != 0;
}

BOOL sub_5A004(id a1, SCNNode *a2, BOOL *a3)
{
  return -[SCNNode light](a2, "light", a3) != 0;
}

BOOL sub_5A034(id a1, SCNNode *a2, BOOL *a3)
{
  return -[SCNNode camera](a2, "camera", a3) != 0;
}

void sub_5A344(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_5A35C(uint64_t a1, uint64_t a2, uint64_t a3, _BYTE *a4)
{
  id result;

  result = objc_msgSend(CFSTR("THContinuousRotation"), "isEqualToString:", a2);
  if ((result & 1) != 0
    || (result = objc_msgSend(CFSTR("THEaseInRotation"), "isEqualToString:", a2), (_DWORD)result))
  {
    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = 1;
    *a4 = 1;
  }
  return result;
}

void sub_5AF8C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_list va;

  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_5AFAC(uint64_t a1, uint64_t a2)
{
  _Block_object_assign((void *)(a1 + 40), *(const void **)(a2 + 40), 131);
}

void sub_5AFBC(uint64_t a1)
{
  _Block_object_dispose(*(const void **)(a1 + 40), 131);
}

id sub_5AFC8(_QWORD *a1)
{
  id result;

  result = objc_msgSend(*(id *)(a1[4] + 48), "objectForKey:", a1[5]);
  *(_QWORD *)(*(_QWORD *)(a1[6] + 8) + 40) = result;
  return result;
}

id sub_5AFFC(_QWORD *a1)
{
  id result;

  result = objc_msgSend(*(id *)(a1[4] + 48), "objectForKey:", a1[5]);
  if (!result)
    return objc_msgSend(*(id *)(a1[4] + 48), "setObject:forKey:", *(_QWORD *)(*(_QWORD *)(a1[6] + 8) + 40), a1[5]);
  *(_QWORD *)(*(_QWORD *)(a1[6] + 8) + 40) = result;
  return result;
}

id sub_5B70C(id result, void *a2)
{
  id v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  id v9;
  id v10;
  uint64_t v11;
  void *v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  _BYTE v17[128];

  if (result)
  {
    v3 = result;
    v4 = objc_opt_class(THModelContentNode, a2);
    v5 = (void *)TSUDynamicCast(v4, v3);
    if (v5)
    {
      v7 = v5;
      result = objc_msgSend(v5, "nodeBodyExists");
      if ((_DWORD)result)
        return objc_msgSend(a2, "addObject:", v7);
    }
    else
    {
      v8 = objc_opt_class(THModelContainerNode, v6);
      result = (id)TSUDynamicCast(v8, v3);
      if (result)
      {
        v9 = objc_msgSend(result, "childNodes");
        v13 = 0u;
        v14 = 0u;
        v15 = 0u;
        v16 = 0u;
        result = objc_msgSend(v9, "countByEnumeratingWithState:objects:count:", &v13, v17, 16);
        if (result)
        {
          v10 = result;
          v11 = *(_QWORD *)v14;
          do
          {
            v12 = 0;
            do
            {
              if (*(_QWORD *)v14 != v11)
                objc_enumerationMutation(v9);
              sub_5B70C(*(_QWORD *)(*((_QWORD *)&v13 + 1) + 8 * (_QWORD)v12), a2);
              v12 = (char *)v12 + 1;
            }
            while (v10 != v12);
            result = objc_msgSend(v9, "countByEnumeratingWithState:objects:count:", &v13, v17, 16);
            v10 = result;
          }
          while (result);
        }
      }
    }
  }
  return result;
}

void sub_5CC88(uint64_t a1, void *a2, uint64_t a3)
{
  void *v5;
  void *v6;
  void *v7;
  id v8;

  v8 = a2;
  if (a3)
  {
    v5 = (void *)objc_claimAutoreleasedReturnValue(+[TSUAssertionHandler currentHandler](TSUAssertionHandler, "currentHandler"));
    v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "-[THWWebView initWithfilteredOutURLSchemes:requestScope:]_block_invoke"));
    v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Alder/bliss/Classes/Widgets/Web/THWWebView.m"));
    objc_msgSend(v5, "handleFailureInFunction:file:lineNumber:description:", v6, v7, 96, CFSTR("expected nil value for '%s'"), "error");

  }
  objc_msgSend(*(id *)(a1 + 32), "setWebView:", v8);

}

void sub_5D138(uint64_t a1)
{
  id v2;

  objc_msgSend(*(id *)(a1 + 32), "setAlpha:", 1.0);
  v2 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "webView"));
  objc_msgSend(v2, "setAlpha:", 1.0);

}

uint64_t sub_5D184(uint64_t result)
{
  uint64_t v1;
  void *v2;
  void *v3;
  void *v4;

  if (*(_QWORD *)(result + 40))
  {
    v1 = result;
    v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(result + 32), "layer"));
    objc_msgSend(v2, "setShouldRasterize:", 0);

    v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(v1 + 32), "webView"));
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "layer"));
    objc_msgSend(v4, "setShouldRasterize:", 0);

    return (*(uint64_t (**)(void))(*(_QWORD *)(v1 + 40) + 16))();
  }
  return result;
}

void sub_5D380(id a1, id a2, NSError *a3)
{
  NSError *v3;
  uint64_t v4;
  NSObject *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v3 = a3;
  if (v3)
  {
    v4 = THLog();
    v5 = objc_claimAutoreleasedReturnValue(v4);
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
      sub_271320((uint64_t)v3, v5, v6, v7, v8, v9, v10, v11);

  }
}

id *sub_5D7F4(id *result, int a2)
{
  if (a2)
    return (id *)objc_msgSend(result[4], "_attemptURLLoad");
  return result;
}

void sub_5DA54(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id v7;
  uint64_t v8;
  id v9;

  v9 = a2;
  v5 = a3;
  if (v9)
  {
    v6 = objc_alloc((Class)WKWebView);
    objc_msgSend(*(id *)(a1 + 32), "bounds");
    v7 = objc_msgSend(v6, "initWithFrame:configuration:", v9);
    objc_msgSend(v7, "_overrideViewportWithArguments:", &off_469B98);
  }
  else
  {
    v7 = 0;
  }
  v8 = *(_QWORD *)(a1 + 40);
  if (v8)
    (*(void (**)(uint64_t, id, id))(v8 + 16))(v8, v7, v5);

}

void sub_5DDB4(uint64_t a1, uint64_t a2)
{
  void *v3;
  void *v4;
  void *v5;
  uint64_t v6;
  void *v7;
  _QWORD v8[2];
  _QWORD v9[2];

  v8[0] = CFSTR("trigger");
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("%@://"), a2, CFSTR("url-filter")));
  v7 = v3;
  v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", &v7, &v6, 1));
  v8[1] = CFSTR("action");
  v9[0] = v4;
  v9[1] = &off_469BC0;
  v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", v9, v8, 2));

  objc_msgSend(*(id *)(a1 + 32), "addObject:", v5);
}

void sub_5DEB0(uint64_t a1, void *a2, void *a3)
{
  id v5;
  void *v6;
  void *v7;
  void *v8;
  uint64_t v9;
  id v10;

  v10 = a2;
  v5 = a3;
  if (v5)
  {
    v6 = (void *)objc_claimAutoreleasedReturnValue(+[TSUAssertionHandler currentHandler](TSUAssertionHandler, "currentHandler"));
    v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "-[THWWebView _createContentBlockingRulesWithfilteredOutURLSchemes:toRuleListStore:completion:]_block_invoke_2"));
    v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Alder/bliss/Classes/Widgets/Web/THWWebView.m"));
    objc_msgSend(v6, "handleFailureInFunction:file:lineNumber:description:", v7, v8, 389, CFSTR("expected nil value for '%s'"), "error");

  }
  v9 = *(_QWORD *)(a1 + 32);
  if (v9)
    (*(void (**)(uint64_t, id, id))(v9 + 16))(v9, v10, v5);

}

void sub_5E438(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  uint64_t v7;
  NSObject *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v5 = a2;
  v6 = a3;
  if (v5)
    objc_msgSend(*(id *)(a1 + 32), "addContentRuleList:", v5);
  if (v6)
  {
    v7 = THLog();
    v8 = objc_claimAutoreleasedReturnValue(v7);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
      sub_271388((uint64_t)v6, v8, v9, v10, v11, v12, v13, v14);

  }
  v15 = *(_QWORD *)(a1 + 48);
  if (v15)
    (*(void (**)(uint64_t, _QWORD, id))(v15 + 16))(v15, *(_QWORD *)(a1 + 40), v6);

}

void sub_5E650(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 0xCu);
}

void sub_5FB7C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  uint64_t v8;
  va_list va;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  va_list va1;

  va_start(va1, a7);
  va_start(va, a7);
  v8 = va_arg(va1, _QWORD);
  v10 = va_arg(va1, _QWORD);
  v11 = va_arg(va1, _QWORD);
  v12 = va_arg(va1, _QWORD);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_5FBA0(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, _BYTE *a7)
{
  if (++*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(result + 32) + 8) + 24) >= 0xC8uLL)
  {
    *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(result + 40) + 8) + 24) = a5 + a6;
    *a7 = 1;
  }
  return result;
}

id sub_60608(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "setAnnotationStorageRange:", *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40));
}

void sub_61850(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_619F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 96), 8);
  _Unwind_Resume(a1);
}

void sub_61A2C(uint64_t a1, uint64_t a2)
{
  _Block_object_assign((void *)(a1 + 40), *(const void **)(a2 + 40), 131);
}

void sub_61A3C(uint64_t a1)
{
  _Block_object_dispose(*(const void **)(a1 + 40), 131);
}

uint64_t sub_61A48(_QWORD *a1)
{
  void *v2;

  v2 = *(void **)(*(_QWORD *)(a1[5] + 8) + 40);
  objc_sync_enter(v2);
  if ((objc_msgSend(*(id *)(*(_QWORD *)(a1[6] + 8) + 40), "isCancelled") & 1) == 0)
  {
    objc_msgSend(objc_msgSend(*(id *)(*(_QWORD *)(a1[5] + 8) + 40), "queuedOperations"), "removeObject:", *(_QWORD *)(*(_QWORD *)(a1[6] + 8) + 40));
    (*(void (**)(void))(a1[4] + 16))();
  }
  return objc_sync_exit(v2);
}

void sub_61ABC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_61B90(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_61BA8(_QWORD *a1)
{
  void *v2;

  v2 = *(void **)(*(_QWORD *)(a1[6] + 8) + 40);
  objc_sync_enter(v2);
  if (objc_msgSend(objc_msgSend(*(id *)(*(_QWORD *)(a1[6] + 8) + 40), "waitingBlockTimers"), "containsObject:", a1[4]))
  {
    objc_msgSend(objc_msgSend(*(id *)(*(_QWORD *)(a1[6] + 8) + 40), "waitingBlockTimers"), "removeObject:", a1[4]);
    (*(void (**)(void))(a1[5] + 16))();
  }
  return objc_sync_exit(v2);
}

void sub_61C1C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_61D2C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t THRangeExtendBackward(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v3;

  if (a1 >= a3)
    v3 = a3;
  else
    v3 = a1;
  return a1 - v3;
}

uint64_t THRangeExtendForward(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  if (a1 + a2 > a4)
    objc_msgSend(+[TSUAssertionHandler currentHandler](TSUAssertionHandler, "currentHandler"), "handleFailureInFunction:file:lineNumber:description:", +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "NSRange THRangeExtendForward(NSRange, NSUInteger, NSUInteger)"), +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Alder/bliss/Classes/NSRangeUtilities.m"), 20, CFSTR("Extending range that is already beyond end"));
  return a1;
}

id sub_63078(uint64_t a1)
{
  void *v2;

  objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "delegate"), "settingNavigationBarHidden:animated:", *(unsigned __int8 *)(a1 + 40), *(unsigned __int8 *)(a1 + 41));
  v2 = *(void **)(a1 + 32);
  if (*(_BYTE *)(a1 + 40))
    return objc_msgSend(v2, "p_hideNavigationBar");
  else
    return objc_msgSend(v2, "p_showNavigationBar");
}

id sub_630C0(uint64_t a1)
{
  uint64_t v2;

  objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "navigationBar"), "setHidden:", *(unsigned __int8 *)(a1 + 48));
  v2 = *(_QWORD *)(a1 + 40);
  if (v2)
    (*(void (**)(void))(v2 + 16))();
  return objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "delegate"), "didSetNavigationBarHidden:animated:", *(unsigned __int8 *)(a1 + 48), *(unsigned __int8 *)(a1 + 49));
}

id sub_6369C(uint64_t a1)
{
  id result;

  result = (id)(*(uint64_t (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
  if (result)
    return objc_msgSend(*(id *)(a1 + 32), "addObject:", result);
  return result;
}

id sub_646AC(uint64_t a1)
{
  return objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 120), "performSelector:withObject:afterDelay:", *(_QWORD *)(*(_QWORD *)(a1 + 32) + 128), 0.0);
}

id sub_6491C(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "animationDidEndWithContext:", *(_QWORD *)(*(_QWORD *)(a1 + 40) + 112));
}

void sub_65054(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,id location)
{
  id *v24;

  objc_destroyWeak(v24);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id sub_65074(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "present");
}

void sub_6507C(uint64_t a1)
{
  NSObject *WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  dispatch_semaphore_signal(WeakRetained);

}

void sub_650A8(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD block[5];

  objc_msgSend(*(id *)(a1 + 32), "waitUntilCompleted");
  v2 = objc_autoreleasePoolPush();
  objc_msgSend(*(id *)(a1 + 40), "removeAnimations");
  objc_autoreleasePoolPop(v2);
  +[CATransaction commit](CATransaction, "commit");
  v3 = *(_QWORD *)(a1 + 40);
  v4 = *(_QWORD *)(v3 + 120);
  if (v4)
  {
    if ((objc_opt_respondsToSelector(v4, *(_QWORD *)(v3 + 128)) & 1) != 0)
    {
      block[0] = _NSConcreteStackBlock;
      block[1] = 3221225472;
      block[2] = sub_65154;
      block[3] = &unk_426D30;
      block[4] = *(_QWORD *)(a1 + 40);
      dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
    }
  }
}

id sub_65154(uint64_t a1)
{
  return objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 120), "performSelector:withObject:afterDelay:", *(_QWORD *)(*(_QWORD *)(a1 + 32) + 128), 0, 0.0);
}

id sub_65A4C(uint64_t a1)
{
  objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "curtainLayer"), "removeFromSuperlayer");
  return objc_msgSend(*(id *)(a1 + 32), "setCurtainLayer:", 0);
}

id sub_66B88(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(a1 + 32);
  if (v1)
    (*(void (**)(void))(v1 + 16))();
  return -[UIApplication endIgnoringInteractionEvents](+[UIApplication sharedApplication](UIApplication, "sharedApplication"), "endIgnoringInteractionEvents");
}

__n128 sub_67AD4(uint64_t a1)
{
  _BYTE *v2;
  unsigned int v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  NSArray *v9;
  id v10;
  id v11;
  uint64_t v12;
  void *i;
  _OWORD *v14;
  __n128 result;
  __n128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  _OWORD v23[3];
  _BYTE v24[128];

  v2 = *(_BYTE **)(a1 + 32);
  if (!v2[72])
  {
    v3 = objc_msgSend(v2, "p_wantsCurtainFadeOut");
    v2 = *(_BYTE **)(a1 + 32);
    if (v3)
    {
      objc_msgSend(v2, "p_fadeOutCurtain");
      v2 = *(_BYTE **)(a1 + 32);
    }
  }
  if ((objc_opt_respondsToSelector(objc_msgSend(v2, "delegate"), "freeTransformControllerWillEnd:passedThreshold:") & 1) != 0)
    objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "delegate"), "freeTransformControllerWillEnd:passedThreshold:", *(_QWORD *)(a1 + 32), *(unsigned __int8 *)(a1 + 40));
  v4 = objc_msgSend(*(id *)(a1 + 32), "freeTransformLayer");
  v17 = *(_OWORD *)&CGAffineTransformIdentity.c;
  v18 = *(_OWORD *)&CGAffineTransformIdentity.a;
  v23[0] = *(_OWORD *)&CGAffineTransformIdentity.a;
  v23[1] = v17;
  v16 = *(__n128 *)&CGAffineTransformIdentity.tx;
  v23[2] = v16;
  objc_msgSend(v4, "setAffineTransform:", v23);
  v5 = objc_msgSend(*(id *)(a1 + 32), "freeTransformLayer");
  objc_msgSend(v5, "removeAnimationForKey:", kSnapToSizeAnimationName);
  v6 = objc_msgSend(*(id *)(a1 + 32), "shadowLayer");
  objc_msgSend(v6, "removeAnimationForKey:", kSnapToSizeAnimationName);
  v7 = objc_msgSend(*(id *)(a1 + 32), "shadowLayer");
  objc_msgSend(v7, "removeAnimationForKey:", kTHWFreeTransformControllerFadeOutAnimationName);
  if ((objc_opt_respondsToSelector(objc_msgSend(*(id *)(a1 + 32), "delegate"), "freeTransformControllerStyledRep:") & 1) != 0)
  {
    v8 = objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "delegate"), "freeTransformControllerStyledRep:", *(_QWORD *)(a1 + 32));
    objc_msgSend(objc_msgSend(v8, "shadowLayer"), "removeAllAnimations");
    objc_msgSend(objc_msgSend(v8, "reflectionLayer"), "removeAllAnimations");
  }
  objc_msgSend(*(id *)(a1 + 32), "p_cleanupExtraLayers");
  if ((objc_opt_respondsToSelector(objc_msgSend(*(id *)(a1 + 32), "delegate"), "freeTransformControllerDidCleanupViews:passedThreshold:") & 1) != 0)objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "delegate"), "freeTransformControllerDidCleanupViews:passedThreshold:", *(_QWORD *)(a1 + 32), *(unsigned __int8 *)(a1 + 40));
  objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "delegate"), "freeTransformControllerDidEnd:passedThreshold:", *(_QWORD *)(a1 + 32), *(unsigned __int8 *)(a1 + 40));
  objc_msgSend(*(id *)(a1 + 32), "setIsFreeTransformInProgress:", 0);
  --dword_543190;
  v19 = 0u;
  v20 = 0u;
  v21 = 0u;
  v22 = 0u;
  v9 = -[UIApplication windows](+[UIApplication sharedApplication](UIApplication, "sharedApplication"), "windows");
  v10 = -[NSArray countByEnumeratingWithState:objects:count:](v9, "countByEnumeratingWithState:objects:count:", &v19, v24, 16);
  if (v10)
  {
    v11 = v10;
    v12 = *(_QWORD *)v20;
    do
    {
      for (i = 0; i != v11; i = (char *)i + 1)
      {
        if (*(_QWORD *)v20 != v12)
          objc_enumerationMutation(v9);
        objc_msgSend(*(id *)(*((_QWORD *)&v19 + 1) + 8 * (_QWORD)i), "setUserInteractionEnabled:", 1);
      }
      v11 = -[NSArray countByEnumeratingWithState:objects:count:](v9, "countByEnumeratingWithState:objects:count:", &v19, v24, 16);
    }
    while (v11);
  }
  objc_msgSend(+[UIWindow keyWindow](UIWindow, "keyWindow"), "endDisablingInterfaceAutorotation");
  v14 = (_OWORD *)(*(_QWORD *)(a1 + 32) + 264);
  *v14 = v18;
  v14[1] = v17;
  result = v16;
  v14[2] = v16;
  *(_BYTE *)(*(_QWORD *)(a1 + 32) + 72) = 0;
  *(_BYTE *)(*(_QWORD *)(a1 + 32) + 314) = 0;
  return result;
}

void sub_69E1C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_list va;

  va_start(va, a14);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_69E34(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(*(id *)(a1 + 32), "addObject:", a2);
}

void sub_69E40(uint64_t a1, uint64_t a2)
{
  _Block_object_assign((void *)(a1 + 40), *(const void **)(a2 + 40), 131);
}

void sub_69E50(uint64_t a1)
{
  _Block_object_dispose(*(const void **)(a1 + 40), 131);
}

id sub_69E5C(uint64_t a1)
{
  void *v2;
  id result;
  id v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  THPageLayerAndSubviewHost *v9;
  id v10;
  uint64_t v11;
  void *v12;
  id v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  id v17;
  id v18;
  void *v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  _BYTE v28[128];
  _BYTE v29[128];

  v24 = 0u;
  v25 = 0u;
  v26 = 0u;
  v27 = 0u;
  v2 = *(void **)(a1 + 32);
  result = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v24, v29, 16);
  if (result)
  {
    v4 = result;
    v5 = *(_QWORD *)v25;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v25 != v5)
          objc_enumerationMutation(v2);
        v7 = *(_QWORD *)(*((_QWORD *)&v24 + 1) + 8 * (_QWORD)v6);
        v8 = *(void **)(*(_QWORD *)(a1 + 40) + 8);
        if (!v8)
        {
          *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) = objc_alloc_init((Class)TSURetainedPointerKeyDictionary);
          v8 = *(void **)(*(_QWORD *)(a1 + 40) + 8);
        }
        v9 = (THPageLayerAndSubviewHost *)objc_msgSend(v8, "objectForKey:", v7);
        v10 = objc_msgSend(*(id *)(a1 + 40), "p_relativePageIndexForPageInfo:", v7);
        if (v9)
          goto LABEL_36;
        v9 = -[THPageLayerAndSubviewHost initWithPageInfo:scrimEnabled:delegate:]([THPageLayerAndSubviewHost alloc], "initWithPageInfo:scrimEnabled:delegate:", v7, *(unsigned __int8 *)(*(_QWORD *)(a1 + 40) + 56));
        objc_msgSend(*(id *)(*(_QWORD *)(a1 + 40) + 8), "setObject:forUncopiedKey:", v9, v7);
        if (!*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 40))
          *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 40) = +[NSMutableIndexSet indexSet](NSMutableIndexSet, "indexSet");
        if ((unint64_t)v10 <= 0x7FFFFFFFFFFFFFFELL)
          objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 40), "addIndex:", v10);

        if (v9)
        {
LABEL_36:
          if (!-[THPageLayerAndSubviewHost rep](v9, "rep"))
          {
            -[THPageLayerAndSubviewHost setUnscaledFrame:unscaledLayerOffset:viewScale:](v9, "setUnscaledFrame:unscaledLayerOffset:viewScale:", TSDRectWithOriginAndSize(0, *(double *)(a1 + 64) * (double)(uint64_t)v10, 0.0, *(double *)(a1 + 64), *(double *)(a1 + 72)));
            v11 = *(_QWORD *)(a1 + 40);
            if (*(_BYTE *)(v11 + 56))
              -[THPageLayerAndSubviewHost loadPreviewOnQueue:](v9, "loadPreviewOnQueue:", *(_QWORD *)(v11 + 40));
            objc_msgSend(*(id *)(a1 + 48), "addObject:", -[THPageLayerAndSubviewHost view](v9, "view"));
            objc_msgSend(*(id *)(a1 + 48), "addObject:", -[THPageLayerAndSubviewHost borderView](v9, "borderView"));
          }
        }
        objc_msgSend(*(id *)(*(_QWORD *)(a1 + 40) + 16), "removeObject:", v9);
        v6 = (char *)v6 + 1;
      }
      while (v4 != v6);
      result = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v24, v29, 16);
      v4 = result;
    }
    while (result);
  }
  if (*(_BYTE *)(a1 + 88))
  {
    v22 = 0u;
    v23 = 0u;
    v20 = 0u;
    v21 = 0u;
    v12 = *(void **)(*(_QWORD *)(a1 + 40) + 8);
    result = objc_msgSend(v12, "countByEnumeratingWithState:objects:count:", &v20, v28, 16);
    if (result)
    {
      v13 = result;
      v14 = *(_QWORD *)v21;
      do
      {
        v15 = 0;
        do
        {
          if (*(_QWORD *)v21 != v14)
            objc_enumerationMutation(v12);
          v16 = *(_QWORD *)(*((_QWORD *)&v20 + 1) + 8 * (_QWORD)v15);
          v17 = objc_msgSend(*(id *)(*(_QWORD *)(a1 + 40) + 8), "objectForKey:", v16);
          if (v17)
          {
            v18 = v17;
            if (!objc_msgSend(v17, "rep")
              && (objc_msgSend(*(id *)(a1 + 32), "tsu_containsObjectIdenticalTo:", v16) & 1) == 0)
            {
              v19 = *(void **)(*(_QWORD *)(a1 + 40) + 16);
              if (!v19)
              {
                *(_QWORD *)(*(_QWORD *)(a1 + 40) + 16) = objc_alloc_init((Class)TSUMutableRetainedPointerSet);
                v19 = *(void **)(*(_QWORD *)(a1 + 40) + 16);
              }
              objc_msgSend(v19, "addObject:", v18);
            }
          }
          v15 = (char *)v15 + 1;
        }
        while (v13 != v15);
        result = objc_msgSend(v12, "countByEnumeratingWithState:objects:count:", &v20, v28, 16);
        v13 = result;
      }
      while (result);
    }
  }
  return result;
}

void sub_6A404(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
  _Block_object_dispose(&a26, 8);
  _Unwind_Resume(a1);
}

id sub_6A428(uint64_t a1)
{
  id result;
  id v3;
  uint64_t v4;
  void *v5;
  id v6;
  id v7;
  id obj;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  _BYTE v13[128];

  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40) = objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 16), "copy");
  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 16), "removeAllObjects");
  v11 = 0u;
  v12 = 0u;
  v9 = 0u;
  v10 = 0u;
  obj = *(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40);
  result = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v9, v13, 16);
  if (result)
  {
    v3 = result;
    v4 = *(_QWORD *)v10;
    do
    {
      v5 = 0;
      do
      {
        if (*(_QWORD *)v10 != v4)
          objc_enumerationMutation(obj);
        v6 = *(id *)(*((_QWORD *)&v9 + 1) + 8 * (_QWORD)v5);
        v7 = objc_msgSend(v6, "pageInfo");
        objc_msgSend(*(id *)(a1 + 40), "addObject:", objc_msgSend(v6, "view"));
        objc_msgSend(*(id *)(a1 + 40), "addObject:", objc_msgSend(v6, "borderView"));
        if (objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 8), "objectForKey:", v7) != v6)
          objc_msgSend(+[TSUAssertionHandler currentHandler](TSUAssertionHandler, "currentHandler"), "handleFailureInFunction:file:lineNumber:description:", +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "-[THPageViewProvider p_recyclePageHosts]_block_invoke"), +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Alder/bliss/Classes/THPageViewProvider.m"), 249, CFSTR("pageInfoToPageHost[%@] = %@; expected %@"),
            v7,
            objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 8), "objectForKey:", v7),
            v6);
        if (objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 8), "objectForKey:", v7) == v6)
          objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 8), "removeObjectForKey:", v7);
        v5 = (char *)v5 + 1;
      }
      while (v3 != v5);
      result = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v9, v13, 16);
      v3 = result;
    }
    while (result);
  }
  return result;
}

id sub_6A6F8(uint64_t a1)
{
  void *v2;
  id result;
  id v4;
  uint64_t v5;
  void *v6;
  id v7;
  _BOOL8 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  _BYTE v13[128];
  CGRect v14;

  v9 = 0u;
  v10 = 0u;
  v11 = 0u;
  v12 = 0u;
  v2 = *(void **)(*(_QWORD *)(a1 + 32) + 8);
  result = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v9, v13, 16);
  if (result)
  {
    v4 = result;
    v5 = *(_QWORD *)v10;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v10 != v5)
          objc_enumerationMutation(v2);
        v7 = objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 8), "objectForKey:", *(_QWORD *)(*((_QWORD *)&v9 + 1) + 8 * (_QWORD)v6));
        if (objc_msgSend(v7, "rep"))
        {
          objc_msgSend(v7, "canvasBoundsFrame");
          v8 = CGRectIntersectsRect(v14, *(CGRect *)(a1 + 40));
          if (!v8 || !*(_BYTE *)(a1 + 72))
            objc_msgSend(v7, "unloadPreviewAnimated:", v8);
        }
        v6 = (char *)v6 + 1;
      }
      while (v4 != v6);
      result = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v9, v13, 16);
      v4 = result;
    }
    while (result);
  }
  return result;
}

void sub_6AA20(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_6AA38(uint64_t a1, void *a2, _BYTE *a3)
{
  id result;

  result = objc_msgSend(a2, "absolutePageIndex");
  if (result == *(id *)(a1 + 40))
  {
    *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40) = a2;
    *a3 = 1;
  }
  return result;
}

uint64_t sub_6AB8C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

id sub_6AC64(_QWORD *a1)
{
  void *v2;
  id result;
  uint64_t v4;

  v2 = *(void **)(a1[4] + 8);
  if (!v2)
  {
    *(_QWORD *)(a1[4] + 8) = objc_alloc_init((Class)TSURetainedPointerKeyDictionary);
    v2 = *(void **)(a1[4] + 8);
  }
  result = objc_msgSend(v2, "objectForKey:", a1[5]);
  *(_QWORD *)(*(_QWORD *)(a1[6] + 8) + 40) = result;
  v4 = a1[6];
  if (*(_QWORD *)(*(_QWORD *)(v4 + 8) + 40))
  {
    result = objc_msgSend(*(id *)(a1[4] + 16), "containsObject:");
    v4 = a1[6];
    if ((_DWORD)result)
    {
      result = objc_msgSend(*(id *)(a1[4] + 16), "removeObject:", *(_QWORD *)(*(_QWORD *)(v4 + 8) + 40));
      v4 = a1[6];
    }
  }
  if (!*(_QWORD *)(*(_QWORD *)(v4 + 8) + 40))
    return objc_msgSend(+[TSUAssertionHandler currentHandler](TSUAssertionHandler, "currentHandler"), "handleFailureInFunction:file:lineNumber:description:", +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "-[THPageViewProvider layerAndSubviewHostForPageInfo:]_block_invoke"), +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Alder/bliss/Classes/THPageViewProvider.m"), 423, CFSTR("invalid nil value for '%s'"), "result");
  return result;
}

id sub_6AE54(uint64_t a1)
{
  void *v2;

  v2 = *(void **)(*(_QWORD *)(a1 + 32) + 16);
  if (!v2)
  {
    *(_QWORD *)(*(_QWORD *)(a1 + 32) + 16) = objc_alloc_init((Class)TSUMutableRetainedPointerSet);
    v2 = *(void **)(*(_QWORD *)(a1 + 32) + 16);
  }
  return objc_msgSend(v2, "addObject:", *(_QWORD *)(a1 + 40));
}

id sub_6BF3C(uint64_t a1, CGContextRef c)
{
  CGContextScaleCTM(c, *(CGFloat *)(a1 + 40), *(CGFloat *)(a1 + 40));
  return objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "wpTextHelper"), "drawColumn:inContext:isFlipped:viewScale:", objc_msgSend(*(id *)(a1 + 32), "wpColumnHelper"), c, 0, *(double *)(a1 + 40));
}

id sub_6D7E8(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "p_togglePanelDescriptionExpanded");
}

uint64_t THIntegralCenterRectInRect(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5, CGFloat a6, CGFloat a7, CGFloat a8)
{
  double MidX;
  double v16;
  double MidY;
  double v18;
  CGRect v21;
  CGRect v22;
  CGRect v23;
  CGRect v24;

  v21.origin.x = a5;
  v21.origin.y = a6;
  v21.size.width = a7;
  v21.size.height = a8;
  MidX = CGRectGetMidX(v21);
  v22.origin.x = a1;
  v22.origin.y = a2;
  v22.size.width = a3;
  v22.size.height = a4;
  v16 = MidX - CGRectGetWidth(v22) * 0.5;
  v23.origin.x = a5;
  v23.origin.y = a6;
  v23.size.width = a7;
  v23.size.height = a8;
  MidY = CGRectGetMidY(v23);
  v24.origin.x = a1;
  v24.origin.y = a2;
  v24.size.width = a3;
  v24.size.height = a4;
  v18 = MidY - CGRectGetHeight(v24) * 0.5;
  return TSDRoundedRectForMainScreen(v16, v18, a3, a4);
}

double THRectCenterRectInRect(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5, CGFloat a6, CGFloat a7, CGFloat a8)
{
  double MidX;
  double v16;
  CGRect v19;
  CGRect v20;
  CGRect v21;
  CGRect v22;

  v19.origin.x = a5;
  v19.origin.y = a6;
  v19.size.width = a7;
  v19.size.height = a8;
  MidX = CGRectGetMidX(v19);
  v20.origin.x = a1;
  v20.origin.y = a2;
  v20.size.width = a3;
  v20.size.height = a4;
  v16 = MidX - CGRectGetWidth(v20) * 0.5;
  v21.origin.x = a5;
  v21.origin.y = a6;
  v21.size.width = a7;
  v21.size.height = a8;
  CGRectGetMidY(v21);
  v22.origin.x = a1;
  v22.origin.y = a2;
  v22.size.width = a3;
  v22.size.height = a4;
  CGRectGetHeight(v22);
  return v16;
}

double THCenterOfIntegralRectCenteredOnPoint(double a1, double a2, double a3, double a4, double a5, double a6)
{
  CGFloat x;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  double MidX;
  CGRect v12;
  CGRect v13;

  v12.origin.x = TSDRoundedRectForMainScreen(a5 - a3 * 0.5, a6 - a4 * 0.5, a3, a4);
  x = v12.origin.x;
  y = v12.origin.y;
  width = v12.size.width;
  height = v12.size.height;
  MidX = CGRectGetMidX(v12);
  v13.origin.x = x;
  v13.origin.y = y;
  v13.size.width = width;
  v13.size.height = height;
  CGRectGetMidY(v13);
  return MidX;
}

double THScaleNeededToFitSizeInSize(double a1, double a2, double a3, double a4)
{
  double result;

  result = 1.0;
  if (a2 > 0.0 && a1 > 0.0)
  {
    result = a4 / a2;
    if (a3 / a1 < a4 / a2)
      return a3 / a1;
  }
  return result;
}

double THScaleNeededToFillSizeInSize(double a1, double a2, double a3, double a4)
{
  double result;

  result = 1.0;
  if (a2 > 0.0 && a1 > 0.0)
  {
    result = a4 / a2;
    if (a3 / a1 >= a4 / a2)
      return a3 / a1;
  }
  return result;
}

CGFloat THRectMultiplyRectCenteredScalar(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4, double a5)
{
  CGFloat v9;
  CGRect v11;

  v9 = CGRectGetMidX(*(CGRect *)&a1) - a3 * a5 * 0.5;
  v11.origin.x = a1;
  v11.origin.y = a2;
  v11.size.width = a3;
  v11.size.height = a4;
  CGRectGetMidY(v11);
  return v9;
}

_QWORD *sub_6E2DC(uint64_t a1)
{
  _QWORD *result;

  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 8), "setPlaybackState:", 4);
  objc_msgSend(*(id *)(a1 + 32), "stopAllAnimations");
  result = *(_QWORD **)(a1 + 32);
  if (!result[2])
    return objc_msgSend(result, "tearDownShow");
  return result;
}

id sub_6E3E4(uint64_t a1)
{
  id result;

  result = objc_msgSend(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 8), "KPFDocument"), "showMode");
  if ((_DWORD)result != 2)
    return objc_msgSend(*(id *)(a1 + 32), "p_triggerNextEvent");
  return result;
}

id sub_6E4AC(uint64_t a1)
{
  id result;

  if ((objc_msgSend(*(id *)(a1 + 32), "isAnimating") & 1) != 0
    || (result = objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 8), "decrementCurrentEventIndex"), (_DWORD)result))
  {
    objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 8), "setPlaybackStatus:", 2);
    objc_msgSend(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 8), "currentEvent"), "renderEventWithSession:", *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8));
    objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 8), "setPlaybackStatus:", 1);
    *(_BYTE *)(*(_QWORD *)(a1 + 32) + 26) = 0;
    result = objc_msgSend(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 8), "currentEvent"), "isAutomatic");
    if ((_DWORD)result)
      return objc_msgSend(*(id *)(a1 + 32), "p_triggerNextEvent");
  }
  return result;
}

id sub_6E5B4(uint64_t a1)
{
  id result;

  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 8), "setEventIndex:skipBreadCrumb:", *(_QWORD *)(a1 + 40), *(unsigned __int8 *)(a1 + 48));
  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 8), "setPlaybackStatus:", 2);
  objc_msgSend(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 8), "currentEvent"), "renderEventWithSession:", *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8));
  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 8), "setPlaybackStatus:", 1);
  *(_BYTE *)(*(_QWORD *)(a1 + 32) + 26) = 0;
  result = objc_msgSend(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 8), "currentEvent"), "isAutomatic");
  if ((_DWORD)result)
  {
    if (*(_BYTE *)(a1 + 49))
      return objc_msgSend(*(id *)(a1 + 32), "p_triggerNextEvent");
  }
  return result;
}

id sub_6E708(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "gotoEventIndex:", 0);
}

id sub_6E7CC(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "gotoEventIndex:", (char *)objc_msgSend(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 8), "KPFDocument"), "eventCount") - 1);
}

id sub_6E860(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "gotoEventIndex:", objc_msgSend(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 8), "KPFDocument"), "eventIndexForSlideIndex:", *(_QWORD *)(a1 + 40)));
}

id sub_6E91C(uint64_t a1)
{
  id v2;
  char *v3;
  id v4;
  char *v5;
  id result;

  v2 = objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 8), "visibleEventIndex");
  v3 = (char *)objc_msgSend(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 8), "KPFDocument"), "slideIndexForEventIndex:", v2);
  v4 = objc_msgSend(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 8), "KPFDocument"), "eventIndexForSlideIndex:", v3);
  if (v2 == v4)
  {
    if (v3)
    {
      v5 = v3 - 1;
    }
    else if (objc_msgSend(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 8), "KPFDocument", v4), "isLooping"))
    {
      v5 = (char *)objc_msgSend(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 8), "KPFDocument"), "slideCount") - 1;
    }
    else
    {
      v5 = 0;
    }
    v4 = objc_msgSend(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 8), "KPFDocument", v4), "eventIndexForSlideIndex:", v5);
  }
  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 8), "setEventIndex:skipBreadCrumb:", v4, 0);
  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 8), "setPlaybackStatus:", 2);
  objc_msgSend(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 8), "currentEvent"), "renderEventWithSession:", *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8));
  result = objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 8), "setPlaybackStatus:", 1);
  *(_BYTE *)(*(_QWORD *)(a1 + 32) + 26) = 0;
  return result;
}

id sub_6EC70(uint64_t a1)
{
  id v2;
  id result;
  void *v4;
  unsigned int v5;
  void *v6;

  v2 = objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 8), "currentEvent");
  if (objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 8), "playbackStatus") == 4
    || objc_msgSend(v2, "isAutomatic")
    && objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 8), "playbackStatus") != 3)
  {
    v2 = objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 8), "nextEvent");
  }
  result = objc_msgSend(v2, "hyperlinkAtLocation:", *(double *)(a1 + 48), *(double *)(a1 + 56));
  if (result)
  {
    v4 = result;
    if (objc_msgSend(result, "hasPrefix:", CFSTR("?slide=")))
    {
      objc_msgSend(*(id *)(a1 + 32), "gotoEventIndex:", objc_msgSend(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 8), "KPFDocument"), "eventIndexForSlideIndex:", (int)(objc_msgSend(objc_msgSend(v4, "substringFromIndex:", 7), "intValue") - 1)));
    }
    else if (objc_msgSend(v4, "isEqualToString:", CFSTR("?action=exitpresentation")))
    {
      if (!*(_BYTE *)(*(_QWORD *)(a1 + 32) + 24))
        return objc_msgSend(*(id *)(a1 + 32), "p_announceStateUpdate");
    }
    else
    {
      v5 = objc_msgSend(v4, "isEqualToString:", CFSTR("?action=retreat"));
      v6 = *(void **)(a1 + 32);
      if (v5)
        objc_msgSend(v6, "retreatToPreviousSlide");
      else
        objc_msgSend(v6, "p_handleURL:", v4);
    }
    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = 1;
    return objc_msgSend(*(id *)(a1 + 32), "p_announceStateUpdate");
  }
  return result;
}

id sub_6EEB4(uint64_t a1)
{
  id result;

  result = objc_msgSend(*(id *)(a1 + 32), "transportControlCloneCanGotoPrev");
  if ((_DWORD)result)
  {
    objc_msgSend(*(id *)(a1 + 32), "gotoPreviousSlide");
    return objc_msgSend(*(id *)(a1 + 32), "p_announceStateUpdate");
  }
  return result;
}

id sub_6EF58(uint64_t a1)
{
  id result;

  result = objc_msgSend(*(id *)(a1 + 32), "transportControlCloneCanGotoNext");
  if ((_DWORD)result)
  {
    objc_msgSend(*(id *)(a1 + 32), "gotoNextEvent");
    return objc_msgSend(*(id *)(a1 + 32), "p_announceStateUpdate");
  }
  return result;
}

id sub_6EFFC(uint64_t a1)
{
  id result;

  result = objc_msgSend(*(id *)(a1 + 32), "transportControlCloneCanGotoFirst");
  if ((_DWORD)result)
  {
    objc_msgSend(*(id *)(a1 + 32), "resetToFirstEventAndShouldAutoPlay:", 0);
    return objc_msgSend(*(id *)(a1 + 32), "p_announceStateUpdate");
  }
  return result;
}

id sub_6F0A4(uint64_t a1)
{
  id result;

  result = objc_msgSend(*(id *)(a1 + 32), "transportControlCloneCanGotoLast");
  if ((_DWORD)result)
  {
    objc_msgSend(*(id *)(a1 + 32), "gotoLastEvent");
    return objc_msgSend(*(id *)(a1 + 32), "p_announceStateUpdate");
  }
  return result;
}

id sub_6F1A0(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 32), "gotoSlideIndex:", *(_QWORD *)(a1 + 40));
  return objc_msgSend(*(id *)(a1 + 32), "p_announceStateUpdate");
}

id *sub_6F5C8(uint64_t a1)
{
  unsigned int v2;
  id *result;
  unsigned int v4;
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  char *v8;
  id v9;
  char *v10;
  _QWORD v11[5];

  if (objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 8), "playbackState") == 2)
  {
    objc_msgSend(*(id *)(a1 + 32), "p_playSoundtrack");
    objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 8), "setPlaybackState:", 3);
  }
  v2 = objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 8), "playbackStatus");
  result = *(id **)(a1 + 32);
  if (v2 == 4)
  {
    objc_msgSend(result[1], "setPlaybackStatus:", 2);
    objc_msgSend(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 8), "currentEvent"), "tearDown");
    v4 = objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 8), "incrementCurrentEventIndex");
    result = *(id **)(a1 + 32);
    if (v4)
    {
      objc_msgSend(objc_msgSend(result[1], "currentEvent"), "renderEventWithSession:", *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8));
      objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 8), "setPlaybackStatus:", 1);
      result = *(id **)(a1 + 32);
    }
    else if (*((_BYTE *)result + 24))
    {
      return (id *)objc_msgSend(result, "endshow");
    }
  }
  if (!*((_BYTE *)result + 26))
  {
    result = (id *)objc_msgSend(result, "isAnimating");
    v5 = *(_QWORD *)(a1 + 32);
    if ((_DWORD)result)
    {
      *(_BYTE *)(v5 + 26) = 1;
    }
    else
    {
      v6 = objc_msgSend(objc_msgSend(*(id *)(v5 + 8), "currentEvent"), "isMoviePlaying");
      v7 = *(_QWORD *)(a1 + 32);
      if (v6)
      {
        *(_BYTE *)(v7 + 26) = 1;
        return (id *)objc_msgSend(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 8), "currentEvent"), "stopMoviePlayback");
      }
      else if (objc_msgSend(*(id *)(v7 + 8), "playbackStatus") == 1
             && (v8 = (char *)objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 8), "currentEventIndex"),
                 v8 < (char *)objc_msgSend(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 8), "KPFDocument"), "eventCount")- 1))
      {
        v9 = objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 8), "currentEvent");
        v11[0] = _NSConcreteStackBlock;
        v11[1] = 3221225472;
        v11[2] = sub_6F804;
        v11[3] = &unk_426DD0;
        v11[4] = *(_QWORD *)(a1 + 32);
        objc_msgSend(v9, "setAnimationEndHandler:", v11);
        objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 8), "setPlaybackStatus:", 3);
        return (id *)objc_msgSend(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 8), "currentEvent"), "animateEventWithSession:", *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8));
      }
      else
      {
        result = (id *)objc_msgSend(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 8), "KPFDocument"), "isLooping");
        if ((_DWORD)result)
        {
          v10 = (char *)objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 8), "currentEventIndex");
          result = (id *)objc_msgSend(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 8), "KPFDocument"), "eventCount");
          if (v10 == (char *)result - 1)
            return (id *)objc_msgSend(*(id *)(a1 + 32), "gotoFirstEvent");
        }
      }
    }
  }
  return result;
}

id sub_6F804(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "performSelector:withObject:afterDelay:", "p_animationEnded", 0, 0.0);
}

void sub_6FA08(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_71CC0(uint64_t a1)
{
  _QWORD block[5];

  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_71D1C;
  block[3] = &unk_426DD0;
  block[4] = *(_QWORD *)(a1 + 32);
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
}

char *sub_71D1C(uint64_t a1)
{
  char *result;

  result = (char *)objc_msgSend(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 80), "asset"), "statusOfValueForKey:error:", CFSTR("tracks"), 0);
  if (result == (_BYTE *)&dword_0 + 2)
    return (char *)objc_msgSend(*(id *)(a1 + 32), "p_setShowsClosedCaptions:", objc_msgSend(*(id *)(a1 + 32), "showsClosedCaptions"));
  return result;
}

void sub_72614(uint64_t a1)
{
  id v1;
  void *v2;

  v1 = objc_alloc_init(*(Class *)(a1 + 32));
  v2 = (void *)qword_543198;
  qword_543198 = (uint64_t)v1;

}

void sub_72A68(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_72C64(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_72D6C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_72F64(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_73224(uint64_t a1, void *a2)
{
  void *v2;
  id v3;
  id v4;

  v2 = *(void **)(a1 + 32);
  v3 = a2;
  v4 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "url"));
  objc_msgSend(v3, "logEvent:forAsset:", CFSTR("viewControllerForAsset"), v4);

}

void sub_73E84(uint64_t a1, void *a2)
{
  id v3;
  uint64_t v4;
  NSObject *v5;
  void *v6;
  id v7;
  id v8;
  void *v9;
  uint64_t v10;
  unsigned __int8 v11;
  void *v12;
  void *v13;
  uint64_t v14;
  void *v15;
  id v16;
  id v17;
  _QWORD v18[5];
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  _QWORD *v25;
  unsigned __int8 v26;
  char v27;
  id obj;
  _QWORD v29[5];
  id v30;
  _QWORD block[4];
  id v32;
  id v33;

  v3 = a2;
  if (v3)
  {
    v4 = BCIMLog();
    v5 = objc_claimAutoreleasedReturnValue(v4);
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
      sub_2713F0(a1, (uint64_t)v3, v5);

    v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSError errorWithDomain:code:userInfo:](NSError, "errorWithDomain:code:userInfo:", AssetEngineErrorDomain, 1001, 0));
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_74104;
    block[3] = &unk_428288;
    v7 = *(id *)(a1 + 64);
    v32 = v6;
    v33 = v7;
    v8 = v6;
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);

  }
  else
  {
    v29[0] = 0;
    v29[1] = v29;
    v29[2] = 0x3032000000;
    v29[3] = sub_74118;
    v29[4] = sub_74128;
    v30 = 0;
    v9 = *(void **)(a1 + 40);
    v10 = *(_QWORD *)(a1 + 48);
    obj = 0;
    v11 = objc_msgSend(v9, "helper:validateBookAuthorizationWithError:needsCoordination:", v10, &obj, 0);
    objc_storeStrong(&v30, obj);
    v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "assetInfoForURL:", *(_QWORD *)(a1 + 32)));
    v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "descriptionForAsset:", v12));
    objc_msgSend(v13, "loadMetadata");
    v18[0] = _NSConcreteStackBlock;
    v18[1] = 3221225472;
    v18[2] = sub_74130;
    v18[3] = &unk_428350;
    v26 = v11;
    v14 = *(_QWORD *)(a1 + 40);
    v15 = *(void **)(a1 + 48);
    v25 = v29;
    v18[4] = v14;
    v19 = v15;
    v20 = v12;
    v21 = v13;
    v22 = *(id *)(a1 + 56);
    v27 = *(_BYTE *)(a1 + 72);
    v23 = *(id *)(a1 + 32);
    v24 = *(id *)(a1 + 64);
    v16 = v13;
    v17 = v12;
    dispatch_sync((dispatch_queue_t)&_dispatch_main_q, v18);

    _Block_object_dispose(v29, 8);
  }

}

void sub_740E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_list va;

  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_74104(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(a1 + 40) + 16))(*(_QWORD *)(a1 + 40), 0, *(_QWORD *)(a1 + 32));
}

uint64_t sub_74118(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_74128(uint64_t a1)
{

}

void sub_74130(uint64_t a1)
{
  uint64_t v2;
  id *v3;
  uint64_t v4;
  void *v5;
  unsigned int v6;
  id v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  uint64_t v14;
  void *v15;
  void *v16;
  void *v17;
  unsigned int v18;
  uint64_t v19;
  NSObject *v20;
  uint64_t v21;
  id v22;
  id v23;
  id v24;
  void *v25;
  void *v26;
  id v27;
  uint64_t v28;
  id v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  void *v36;
  void *v37;
  id v38;
  uint64_t v39;
  id v40;
  id v41;
  void *v42;
  void *v43;
  void *v44;
  void *v45;
  void *v46;
  void *v47;
  _QWORD block[4];
  id v49;
  id v50;
  uint64_t v51;
  _QWORD v52[5];
  id v53;
  id v54;
  id v55;
  id v56;
  id v57;
  uint64_t v58;
  _QWORD v59[5];
  id v60;
  id v61;
  id v62;
  id v63;
  id v64;
  uint64_t v65;
  id v66;
  uint8_t buf[4];
  uint64_t v68;
  __int16 v69;
  void *v70;

  if (*(_BYTE *)(a1 + 96))
  {
    v2 = *(_QWORD *)(*(_QWORD *)(a1 + 88) + 8);
    v4 = *(_QWORD *)(v2 + 40);
    v3 = (id *)(v2 + 40);
    if (!v4)
    {
      v30 = *(void **)(a1 + 32);
      v31 = *(_QWORD *)(a1 + 40);
      v32 = *(_QWORD *)(a1 + 48);
      v33 = *(_QWORD *)(a1 + 56);
      v34 = *(_QWORD *)(a1 + 64);
      v66 = 0;
      v35 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v30, "_helper:assetInfo:viewControllerForBookDescription:options:error:", v31, v32, v33, v34, &v66));
      objc_storeStrong(v3, v66);
LABEL_23:
      block[0] = _NSConcreteStackBlock;
      block[1] = 3221225472;
      block[2] = sub_749F8;
      block[3] = &unk_4282D8;
      v41 = *(id *)(a1 + 80);
      v49 = v35;
      v50 = v41;
      v51 = *(_QWORD *)(a1 + 88);
      v7 = v35;
      dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);

      v8 = v50;
      goto LABEL_24;
    }
  }
  if (!*(_BYTE *)(a1 + 97)
    || objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 88) + 8) + 40), "code") != (char *)&stru_790.flags + 2
    || (v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 88) + 8)
                                                                          + 40), "domain")),
        v6 = objc_msgSend(v5, "isEqualToString:", AssetEngineErrorDomain),
        v5,
        !v6))
  {
LABEL_22:
    v35 = 0;
    goto LABEL_23;
  }
  v7 = (id)objc_claimAutoreleasedReturnValue(+[AEAssetEngine appInfoMgr](AEAssetEngine, "appInfoMgr"));
  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 72), "path"));
  v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "stringByAppendingPathComponent:", CFSTR("iTunesMetadata.plist")));
  v10 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithContentsOfFile:](NSDictionary, "dictionaryWithContentsOfFile:", v9));
  v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "objectForKey:", CFSTR("com.apple.iTunesStore.downloadInfo")));
  v47 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "valueForKeyPath:", CFSTR("accountInfo.DSPersonID")));
  v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "valueForKeyPath:", CFSTR("accountInfo.AltDSID")));
  v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "valueForKeyPath:", CFSTR("accountInfo.AppleID")));
  if (!objc_msgSend(v13, "length"))
  {
    v14 = objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "objectForKeyedSubscript:", CFSTR("apple-id")));

    v13 = (void *)v14;
  }
  if (!objc_msgSend(v13, "length"))
  {

LABEL_21:
    goto LABEL_22;
  }
  v46 = v12;
  v15 = (void *)objc_claimAutoreleasedReturnValue(+[ACAccountStore bu_sharedAccountStore](ACAccountStore, "bu_sharedAccountStore"));
  v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v15, "ams_iTunesAccountWithUsername:", v13));

  if (v16)
  {
    v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v16, "credential"));
    v18 = objc_msgSend(v17, "isEmpty");

    if (!v18)
    {
      v36 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v16, "ams_DSID"));
      if ((objc_opt_respondsToSelector(v7, "isConnectedToInternet") & 1) != 0
        && objc_msgSend(v7, "isConnectedToInternet")
        && v36)
      {
        v52[0] = _NSConcreteStackBlock;
        v52[1] = 3221225472;
        v52[2] = sub_74874;
        v52[3] = &unk_428328;
        v37 = *(void **)(a1 + 40);
        v52[4] = *(_QWORD *)(a1 + 32);
        v53 = v37;
        v54 = *(id *)(a1 + 64);
        v38 = *(id *)(a1 + 80);
        v55 = v36;
        v56 = 0;
        v39 = *(_QWORD *)(a1 + 88);
        v57 = v38;
        v58 = v39;
        v40 = v36;
        +[PFDContext Xj3eVHDeBoTD6fVn6fY8:completion:](PFDContext, "Xj3eVHDeBoTD6fVn6fY8:completion:", v40, v52);

        goto LABEL_24;
      }

      goto LABEL_21;
    }
  }
  v44 = v16;
  v45 = v9;
  v19 = BCIMLog();
  v20 = objc_claimAutoreleasedReturnValue(v19);
  if (os_log_type_enabled(v20, OS_LOG_TYPE_INFO))
  {
    v21 = *(_QWORD *)(a1 + 72);
    *(_DWORD *)buf = 138412546;
    v68 = v21;
    v69 = 2112;
    v70 = v13;
    _os_log_impl(&dword_0, v20, OS_LOG_TYPE_INFO, "Auth needed due to non-existing account for asset at url, username: %@ -- %@", buf, 0x16u);
  }

  v43 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 64), "objectForKeyedSubscript:", BCTransactionOptionsTransactionKey));
  v42 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "_mainViewControllerForTransaction:", v43));
  v22 = objc_alloc_init((Class)AMSAuthenticateOptions);
  objc_msgSend(v22, "setCanMakeAccountActive:", 0);
  v23 = objc_msgSend(objc_alloc((Class)AMSAuthenticateRequest), "initWithDSID:altDSID:username:options:", v47, v46, v13, v22);
  v24 = objc_msgSend(objc_alloc((Class)AMSUIAuthenticateTask), "initWithRequest:presentingViewController:", v23, v42);
  v25 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v24, "performAuthentication"));
  v59[0] = _NSConcreteStackBlock;
  v59[1] = 3221225472;
  v59[2] = sub_74704;
  v59[3] = &unk_428300;
  v26 = *(void **)(a1 + 40);
  v59[4] = *(_QWORD *)(a1 + 32);
  v60 = v26;
  v61 = *(id *)(a1 + 64);
  v27 = *(id *)(a1 + 80);
  v28 = *(_QWORD *)(a1 + 88);
  v64 = v27;
  v65 = v28;
  v62 = v13;
  v63 = 0;
  v29 = v13;
  objc_msgSend(v25, "addFinishBlock:", v59);

LABEL_24:
}

void sub_74704(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v4;
  void *v5;
  uint64_t v6;
  NSObject *v7;
  id v8;
  uint64_t v9;
  _QWORD v10[4];
  id v11;
  id v12;
  uint64_t v13;
  _QWORD block[5];
  id v15;
  id v16;
  id v17;

  if (!a2 || a3)
  {
    v6 = BCIMLog();
    v7 = objc_claimAutoreleasedReturnValue(v6);
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
      sub_271464();

    v10[0] = _NSConcreteStackBlock;
    v10[1] = 3221225472;
    v10[2] = sub_74858;
    v10[3] = &unk_4282D8;
    v12 = *(id *)(a1 + 72);
    v8 = *(id *)(a1 + 64);
    v9 = *(_QWORD *)(a1 + 80);
    v11 = v8;
    v13 = v9;
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, v10);

    v5 = v12;
  }
  else
  {
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_74844;
    block[3] = &unk_4282B0;
    v4 = *(void **)(a1 + 40);
    block[4] = *(_QWORD *)(a1 + 32);
    v15 = v4;
    v16 = *(id *)(a1 + 48);
    v17 = *(id *)(a1 + 72);
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);

    v5 = v15;
  }

}

id sub_74844(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_helper:canRefetch:viewControllerWithOptions:completion:", *(_QWORD *)(a1 + 40), 1, *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56));
}

uint64_t sub_74858(_QWORD *a1)
{
  return (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(a1[5] + 16))(a1[5], a1[4], *(_QWORD *)(*(_QWORD *)(a1[6] + 8) + 40));
}

void sub_74874(uint64_t a1, void *a2)
{
  id v3;
  uint64_t v4;
  NSObject *v5;
  id v6;
  uint64_t v7;
  void *v8;
  void *v9;
  _QWORD block[4];
  id v11;
  id v12;
  uint64_t v13;
  _QWORD v14[5];
  id v15;
  id v16;
  id v17;

  v3 = a2;
  if (v3)
  {
    v4 = BCIMLog();
    v5 = objc_claimAutoreleasedReturnValue(v4);
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
      sub_2714E4();

    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_749DC;
    block[3] = &unk_4282D8;
    v12 = *(id *)(a1 + 72);
    v6 = *(id *)(a1 + 64);
    v7 = *(_QWORD *)(a1 + 80);
    v11 = v6;
    v13 = v7;
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);

    v8 = v12;
  }
  else
  {
    v14[0] = _NSConcreteStackBlock;
    v14[1] = 3221225472;
    v14[2] = sub_749C8;
    v14[3] = &unk_4282B0;
    v9 = *(void **)(a1 + 40);
    v14[4] = *(_QWORD *)(a1 + 32);
    v15 = v9;
    v16 = *(id *)(a1 + 48);
    v17 = *(id *)(a1 + 72);
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, v14);

    v8 = v15;
  }

}

id sub_749C8(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_helper:canRefetch:viewControllerWithOptions:completion:", *(_QWORD *)(a1 + 40), 0, *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56));
}

uint64_t sub_749DC(_QWORD *a1)
{
  return (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(a1[5] + 16))(a1[5], a1[4], *(_QWORD *)(*(_QWORD *)(a1[6] + 8) + 40));
}

uint64_t sub_749F8(_QWORD *a1)
{
  return (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(a1[5] + 16))(a1[5], a1[4], *(_QWORD *)(*(_QWORD *)(a1[6] + 8) + 40));
}

void sub_74CE4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_74D48(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

id sub_74EC8(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "logEvent:forAsset:", CFSTR("helperForURL"), *(_QWORD *)(a1 + 32));
}

void sub_74F8C(void *a1, uint64_t a2, os_log_t log, const char *a4, ...)
{
  va_list va;

  va_start(va, a4);
  _os_log_error_impl(a1, log, OS_LOG_TYPE_ERROR, a4, (uint8_t *)va, 0x16u);
}

void sub_75210(id a1)
{
  id v1;

  v1 = objc_alloc_init((Class)NSMutableDictionary);
  objc_msgSend(v1, "setObject:forKey:", +[IMTheme themeWithIdentifier:](IMTheme, "themeWithIdentifier:", kIMThemeIdentifierWhitePageTheme), +[NSNumber numberWithInt:](NSNumber, "numberWithInt:", 0));
  objc_msgSend(v1, "setObject:forKey:", +[IMTheme themeWithIdentifier:](IMTheme, "themeWithIdentifier:", kIMThemeIdentifierSepiaPageTheme), +[NSNumber numberWithInt:](NSNumber, "numberWithInt:", 1));
  objc_msgSend(v1, "setObject:forKey:", +[IMTheme themeWithIdentifier:](IMTheme, "themeWithIdentifier:", kIMThemeIdentifierGrayPageTheme), +[NSNumber numberWithInt:](NSNumber, "numberWithInt:", 2));
  objc_msgSend(v1, "setObject:forKey:", +[IMTheme themeWithIdentifier:](IMTheme, "themeWithIdentifier:", kIMThemeIdentifierNightPageTheme), +[NSNumber numberWithInt:](NSNumber, "numberWithInt:", 3));
  objc_msgSend(v1, "setObject:forKey:", +[IMTheme themeWithIdentifier:](IMTheme, "themeWithIdentifier:", kIMThemeIdentifierBlissClassicTheme), +[NSNumber numberWithInt:](NSNumber, "numberWithInt:", 4));
  qword_5431B0 = (uint64_t)v1;
}

void sub_76020(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id sub_76040(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(objc_loadWeak((id *)(a1 + 32)), "_updateAppearanceFromLightLevelController:", a2);
}

id sub_769F4(uint64_t a1)
{
  return objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "titleLabelNavigationBar"), "setAlpha:", 1.0);
}

id sub_76A10(uint64_t a1)
{
  return objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "titleLabelNavigationBar"), "setHidden:", 0);
}

id sub_76A2C(uint64_t a1)
{
  objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "titleLabelNavigationBar"), "setAlpha:", 0.0);
  return objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "actionlessBookmarkButton"), "setAlpha:", 0.0);
}

id *sub_76A64(id *result, int a2)
{
  id *v2;

  if (a2)
  {
    v2 = result;
    objc_msgSend(objc_msgSend(result[4], "titleLabelNavigationBar"), "setLeftItems:rightItems:titleView:animated:", &__NSArray0__struct, &__NSArray0__struct, 0, 0);
    return (id *)objc_msgSend(objc_msgSend(v2[4], "titleLabelNavigationBar"), "setHidden:", 1);
  }
  return result;
}

void sub_77198(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 144), 8);
  _Unwind_Resume(a1);
}

id *sub_771B0(id *result, uint64_t a2)
{
  if (*(_BYTE *)(*((_QWORD *)result[5] + 1) + 24) && *((_BYTE *)result + 64) && !*((_BYTE *)result[4] + 210))
    return (id *)objc_msgSend(result[4], "p_bookViewWillAnimateRotationToSize:withContext:", a2, *((double *)result + 6), *((double *)result + 7));
  return result;
}

id sub_771F0(uint64_t a1, uint64_t a2)
{
  _BYTE *v3;
  void *v5;
  double v6;
  double v7;

  v3 = *(_BYTE **)(a1 + 32);
  if (!v3[210])
  {
    if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) && *(_BYTE *)(a1 + 64))
      objc_msgSend(v3, "p_bookViewDidAnimateRotationToSize:withContext:", a2, *(double *)(a1 + 48), *(double *)(a1 + 56));
    v5 = *(void **)(a1 + 32);
    v6 = *(double *)(a1 + 48);
    v7 = *(double *)(a1 + 56);
    if (*(_BYTE *)(a1 + 64))
      objc_msgSend(v5, "p_bookViewDidRotateTransitionToSize:withContext:", a2, v6, v7);
    else
      objc_msgSend(v5, "p_bookViewDidTransitionToSize:withContext:", a2, v6, v7);
  }
  return objc_msgSend(*(id *)(a1 + 32), "emitReadingOrientationChangeEventIfNeeded");
}

id sub_77E38(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "p_updateFromTheme:", 0);
}

uint64_t sub_7838C(uint64_t a1)
{
  uint64_t result;

  objc_msgSend(*(id *)(a1 + 32), "p_unloadGlossaryViewControllerIfHiding");
  result = *(_QWORD *)(a1 + 40);
  if (result)
    return (*(uint64_t (**)(void))(result + 16))();
  return result;
}

id sub_784E8(uint64_t a1)
{
  id result;

  objc_msgSend(*(id *)(a1 + 32), "setPresentingGlossary:", 1);
  result = objc_msgSend(*(id *)(a1 + 32), "isGlossaryVisible");
  if ((result & 1) == 0)
  {
    objc_msgSend(*(id *)(a1 + 32), "p_ensureGlossaryViewController");
    result = objc_msgSend(*(id *)(a1 + 32), "glossaryViewController");
    if (result)
    {
      objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "glossaryViewController"), "setOriginalViewController:", objc_msgSend(*(id *)(a1 + 32), "visibleViewController"));
      objc_msgSend(objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "glossaryViewController"), "view"), "setAutoresizingMask:", 18);
      objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "glossaryViewController"), "setTheme:", objc_msgSend(*(id *)(a1 + 32), "theme"));
      objc_msgSend(*(id *)(a1 + 32), "vantageWillChangeBy:reason:", *(_QWORD *)(a1 + 32), CFSTR("THVantageChangeReasonTransitionToGlossary"));
      objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "glossaryViewController"), "setModalTransitionStyle:", 0);
      objc_msgSend(*(id *)(a1 + 32), "presentViewController:animated:completion:", objc_msgSend(*(id *)(a1 + 32), "glossaryViewController"), 1, &stru_428408);
      return objc_msgSend(*(id *)(a1 + 32), "vantageDidChangeBy:reason:", *(_QWORD *)(a1 + 32), CFSTR("THVantageChangeReasonTransitionToGlossary"));
    }
  }
  return result;
}

void sub_785EC(id a1)
{
  +[UIViewController attemptRotationToDeviceOrientation](UIViewController, "attemptRotationToDeviceOrientation");
}

id sub_78E10(uint64_t a1)
{
  double v2;
  double v3;
  double v4;
  double v5;
  double v6;
  unint64_t v7;
  unint64_t v8;
  double v9;
  double v10;
  double v11;
  __n128 v12;
  __n128 v13;
  CGFloat v14;
  CGFloat v15;
  id v16;
  CGAffineTransform v18;
  CGAffineTransform v19;
  CGAffineTransform t2;
  CGAffineTransform t1;
  CGAffineTransform v22;
  CGAffineTransform v23;

  v2 = *(double *)(a1 + 56);
  v3 = *(double *)(a1 + 64);
  v4 = *(double *)(a1 + 88);
  v5 = *(double *)(a1 + 96);
  memset(&v23, 0, sizeof(v23));
  CGAffineTransformMakeScale(&v23, v2 / v4, v3 / v5);
  v6 = TSDCenterOfRect(*(double *)(a1 + 40), *(double *)(a1 + 48), v2, v3);
  v8 = v7;
  v9 = TSDCenterOfRect(*(double *)(a1 + 72), *(double *)(a1 + 80), v4, v5);
  v11 = v10;
  v12.n128_f64[0] = v6;
  v13.n128_u64[0] = v8;
  v14 = TSDSubtractPoints(v12, v13, v9, v11);
  t1 = v23;
  CGAffineTransformMakeTranslation(&t2, v14, v15);
  CGAffineTransformConcat(&v22, &t1, &t2);
  v23 = v22;
  v19 = v22;
  v16 = objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "documentViewController"), "canvasScrollView");
  v18 = v19;
  return objc_msgSend(v16, "setTransform:", &v18);
}

id sub_78F08(uint64_t a1)
{
  __int128 v3;

  objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "chapterBrowserController"), "showPageThumbnailAtIndex:", *(_QWORD *)(a1 + 40));
  objc_msgSend(*(id *)(a1 + 32), "p_addViewControllerInFront:reason:", objc_msgSend(*(id *)(a1 + 32), "chapterBrowserController"), CFSTR("THVantageChangeReasonTransitionToTOC"));
  objc_msgSend(objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "documentViewController", *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88)), "canvasScrollView"), "setTransform:", &v3);
  objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "documentViewController"), "setVisibleInfoUpdatesAllowedInLandscape:", 0);
  objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "chapterBrowserController"), "didTransitionFromCanvas");
  objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "documentViewController"), "endRevealTOC");
  return objc_msgSend(*(id *)(a1 + 32), "p_removeViewController:", objc_msgSend(*(id *)(a1 + 32), "documentViewController"));
}

uint64_t sub_79260(uint64_t a1)
{
  uint64_t result;

  objc_msgSend(*(id *)(a1 + 32), "setEnabled:", 1);
  +[UIViewController attemptRotationToDeviceOrientation](UIViewController, "attemptRotationToDeviceOrientation");
  result = *(_QWORD *)(a1 + 40);
  if (result)
    return (*(uint64_t (**)(void))(result + 16))();
  return result;
}

uint64_t sub_79400(uint64_t a1)
{
  void *v2;
  id v3;
  uint64_t result;

  objc_msgSend(*(id *)(a1 + 32), "p_clearNotesFullscreenViewController");
  *(_BYTE *)(*(_QWORD *)(a1 + 32) + 273) = 0;
  v2 = *(void **)(a1 + 32);
  if (*(_QWORD *)(a1 + 40))
  {
    objc_msgSend(v2, "showSearchPopoverWithText:");
  }
  else
  {
    v3 = objc_msgSend(v2, "visibleViewController");
    if (v3 == objc_msgSend(*(id *)(a1 + 32), "documentViewController")
      && objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "documentViewController"), "isViewLoaded"))
    {
      objc_msgSend(objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "documentViewController"), "interactiveCanvasController"), "resumeEditing");
    }
  }
  result = *(_QWORD *)(a1 + 48);
  if (result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(result + 16))(result, 1);
  return result;
}

uint64_t sub_79704(uint64_t result, int a2)
{
  uint64_t v2;

  if (a2)
  {
    v2 = result;
    objc_msgSend(objc_msgSend(*(id *)(*(_QWORD *)(result + 32) + 48), "interactiveCanvasController"), "layoutIfNeeded");
    if (*(_BYTE *)(v2 + 56))
      objc_msgSend(*(id *)(v2 + 32), "followAnchor:pulse:", *(_QWORD *)(v2 + 40), 0);
    if (*(_BYTE *)(v2 + 57))
      objc_msgSend(*(id *)(v2 + 32), "hideLoadSpinner");
    result = *(_QWORD *)(v2 + 48);
    if (result)
      return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

id sub_79D50(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "p_unloadStudyViewController");
}

id sub_7A258(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "logEvent:forBookDescription:", CFSTR("viewsAreReadyForOpenAnimation"), objc_msgSend(*(id *)(a1 + 32), "bookDescription"));
}

id sub_7A900(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "logEvent:forBookDescription:", CFSTR("didLoadBook:begin"), objc_msgSend(*(id *)(a1 + 32), "bookDescription"));
}

void sub_7A934(uint64_t a1)
{
  id v2;
  NSError *v3;
  uint64_t v4;
  _QWORD block[7];

  v2 = objc_msgSend(*(id *)(a1 + 32), "assetViewControllerDelegate");
  v3 = +[NSError errorWithDomain:code:userInfo:](NSError, "errorWithDomain:code:userInfo:", AssetEngineErrorDomain, 2003, 0);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_7A9CC;
  block[3] = &unk_426F18;
  v4 = *(_QWORD *)(a1 + 32);
  block[4] = v2;
  block[5] = v4;
  block[6] = v3;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
}

id sub_7A9CC(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "assetViewController:handleFamilyChangeError:", *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48));
}

id sub_7A9DC(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "logEvent:forBookDescription:", CFSTR("didLoadBook:end"), objc_msgSend(*(id *)(a1 + 32), "bookDescription"));
}

id sub_7AC64(uint64_t a1)
{
  unsigned int v2;
  void *v3;

  v2 = +[NSThread isMainThread](NSThread, "isMainThread");
  v3 = *(void **)(a1 + 32);
  if (v2)
    return objc_msgSend(v3, "didLoadBook:", 0);
  else
    return objc_msgSend(v3, "performSelectorOnMainThread:withObject:waitUntilDone:", "didLoadBook:", 0, 0);
}

id sub_7B020(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "p_closeBookAndGoToStorePageForBook");
}

id sub_7B1BC(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "p_closeBookAndGoToStorePageForBook");
}

id sub_7B33C(uint64_t a1)
{
  return objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "presentingViewController"), "dismissViewControllerAnimated:completion:", 1, 0);
}

id sub_7B4E0(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "p_postponeAlertForRetinaUpdate");
}

id sub_7B4E8(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "p_closeBookAndGoToStoreForRetinaUpdate");
}

id sub_7B930(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "logEvent:forBookDescription:", CFSTR("open"), objc_msgSend(*(id *)(a1 + 32), "bookDescription"));
}

id sub_7BC54(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "p_jumpToLocation:", *(_QWORD *)(a1 + 40));
}

id sub_7BE20(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "logEvent:forBookDescription:", CFSTR("openDidFinish"), objc_msgSend(*(id *)(a1 + 32), "bookDescription"));
}

id sub_7C194(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "logEvent:forBookDescription:", CFSTR("close"), objc_msgSend(*(id *)(a1 + 32), "bookDescription"));
}

id sub_7C3EC(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 32), "setReadingStatisticsControllerLoaded:", 1);
  return objc_msgSend(*(id *)(a1 + 32), "_checkIfScanningReadingStatisticsCanBegin");
}

void sub_7D8B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_list va;

  va_start(va, a14);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_7D8C8(uint64_t a1, uint64_t a2)
{
  _Block_object_assign((void *)(a1 + 40), *(const void **)(a2 + 40), 131);
}

void sub_7D8D8(uint64_t a1)
{
  _Block_object_dispose(*(const void **)(a1 + 40), 131);
}

id sub_7D8E4(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "removeObject:", *(_QWORD *)(a1 + 40));
}

id sub_7D8F0(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 32), "removeObject:", *(_QWORD *)(a1 + 40));
  return objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40), "corruptBookAlert");
}

void sub_7DD10(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,char a32)
{
  uint64_t v32;

  _Block_object_dispose(&a26, 8);
  _Block_object_dispose(&a32, 8);
  _Block_object_dispose((const void *)(v32 - 168), 8);
  _Unwind_Resume(a1);
}

id sub_7DD50(_QWORD *a1)
{
  id result;

  result = objc_msgSend(*(id *)(a1[4] + 160), "isEqual:", a1[5]);
  if ((_DWORD)result)
  {
    objc_msgSend(objc_msgSend(*(id *)(*(_QWORD *)(a1[6] + 8) + 40), "guidedPanController"), "clearTarget");
    objc_msgSend(*(id *)(*(_QWORD *)(a1[7] + 8) + 40), "p_updateCanvasWithPendingPageIndexPath");
    return objc_msgSend(*(id *)(*(_QWORD *)(a1[6] + 8) + 40), "removePreviewForRelativePageIndex:", a1[8]);
  }
  return result;
}

id sub_7DDC4(_QWORD *a1)
{

  *(_QWORD *)(a1[4] + 160) = 0;
  objc_msgSend(*(id *)(*(_QWORD *)(a1[5] + 8) + 40), "endStaticLayoutAndRender:", 1);
  objc_msgSend(*(id *)(*(_QWORD *)(a1[5] + 8) + 40), "didEndFreeTransform");
  return objc_msgSend(*(id *)(*(_QWORD *)(a1[6] + 8) + 40), "corruptBookAlert");
}

id sub_7E6DC(uint64_t a1)
{
  return objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 40), "setAlpha:", 1.0);
}

id sub_7EA90(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "logEvent:forBookDescription:", CFSTR("closeDocument"), objc_msgSend(*(id *)(a1 + 32), "bookDescription"));
}

id sub_7EAC4(uint64_t a1)
{
  return objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "navigationBarController"), "startNavigationBarFade");
}

id sub_7EADC(uint64_t a1)
{
  return objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "navigationBarController"), "completeNavigationBarFade");
}

id sub_7EAF4(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "logEvent:forBookDescription:", CFSTR("requestClose"), objc_msgSend(*(id *)(a1 + 32), "bookDescription"));
}

id sub_7F7D0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = objc_opt_class(UIControl, a2);
  return objc_msgSend((id)BUDynamicCast(v3, *(_QWORD *)(a1 + 32)), "setEnabled:", 1);
}

id sub_7F86C(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "p_displaySettingsDidHide");
}

void sub_7FAE0(id a1)
{
  +[UIViewController attemptRotationToDeviceOrientation](UIViewController, "attemptRotationToDeviceOrientation");
}

id sub_7FBBC(uint64_t a1)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 40);
  if (v2)
    (*(void (**)(void))(v2 + 16))();
  return objc_msgSend(*(id *)(a1 + 32), "p_searchDidHide");
}

id sub_80ADC(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "p_TOCGlossaryPopoverDidHide");
}

void sub_80BE8(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 72));
  _Unwind_Resume(a1);
}

void sub_80C04(uint64_t a1, uint64_t a2)
{
  id v4;
  NSMutableArray *v5;
  NSMutableArray *v6;
  id v7;
  id v8;
  id v9;
  void **v10;
  uint64_t v11;
  id (*v12)(uint64_t);
  void *v13;
  id v14;
  id to;

  objc_copyWeak(&to, (id *)(a1 + 48));
  if (objc_loadWeak(&to))
  {
    objc_msgSend(objc_loadWeak(&to), "dismissActivePopover");
    v4 = objc_msgSend(objc_msgSend(objc_loadWeak(&to), "documentRoot"), "activityItemProvider");
    v5 = +[NSMutableArray arrayWithObject:](NSMutableArray, "arrayWithObject:", v4);
    v6 = v5;
    if (a2)
      -[NSMutableArray addObject:](v5, "addObject:", a2);
    v7 = objc_msgSend(objc_alloc((Class)IMActivityController), "initWithActivityItems:applicationActivities:shareType:propertySource:tracker:", v6, 0, objc_msgSend(v4, "shareType"), objc_msgSend(v4, "propertySource"), objc_msgSend(*(id *)(a1 + 32), "ba_effectiveAnalyticsTracker"));
    objc_msgSend(objc_msgSend(v7, "viewController"), "setOverrideUserInterfaceStyle:", objc_msgSend(*(id *)(a1 + 32), "overrideUserInterfaceStyle"));
    objc_msgSend(objc_loadWeak(&to), "setActivityViewController:", objc_msgSend(v7, "viewController"));
    objc_msgSend(objc_msgSend(objc_loadWeak(&to), "activityViewController"), "setModalPresentationStyle:", 7);
    v8 = objc_msgSend(objc_msgSend(objc_loadWeak(&to), "activityViewController"), "popoverPresentationController");
    objc_msgSend(v8, "setBarButtonItem:", *(_QWORD *)(a1 + 40));
    objc_msgSend(v8, "setPermittedArrowDirections:", 1);
    objc_msgSend(v8, "setDelegate:", objc_loadWeak(&to));
    objc_msgSend(v8, "setPassthroughViews:", objc_msgSend(objc_loadWeak(&to), "p_popoverPassthroughViews"));
    objc_msgSend(v8, "bc_applyTraitOverridesWithOverrideUserInterfaceStyleFromViewController:", *(_QWORD *)(a1 + 32));
    v10 = _NSConcreteStackBlock;
    v11 = 3221225472;
    v12 = sub_80E6C;
    v13 = &unk_4284F0;
    objc_copyWeak(&v14, &to);
    objc_msgSend(v7, "setCompletionHandler:", &v10);
    v9 = objc_loadWeak(&to);
    objc_msgSend(v9, "bc_presentViewController:animated:tintColor:completion:", objc_msgSend(v7, "viewController", v10, v11, v12, v13), 1, +[UIColor bc_booksKeyColor](UIColor, "bc_booksKeyColor"), &stru_428510);

    objc_destroyWeak(&v14);
  }
  objc_destroyWeak(&to);
}

void sub_80E34(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id sub_80E6C(uint64_t a1)
{
  id Weak;

  Weak = objc_loadWeak((id *)(a1 + 32));
  return objc_msgSend(Weak, "p_shareDidHide");
}

void sub_80E84(id a1)
{
  +[UIViewController attemptRotationToDeviceOrientation](UIViewController, "attemptRotationToDeviceOrientation");
}

void sub_80E90(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD v3[6];

  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_80EEC;
  v3[3] = &unk_427290;
  v2 = *(_QWORD *)(a1 + 32);
  v3[4] = a2;
  v3[5] = v2;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v3);
}

uint64_t sub_80EEC(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(a1 + 40) + 16))(*(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 32));
}

id sub_80F64(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "p_shareDidHide");
}

id sub_81278(uint64_t a1)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 40);
  if (v2)
    (*(void (**)(void))(v2 + 16))();
  return objc_msgSend(*(id *)(a1 + 32), "p_bookmarkPopoverDidHide");
}

id sub_82140(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "setEnabled:", 1);
}

id sub_82694(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "setBackgroundColor:", *(_QWORD *)(a1 + 40));
}

id sub_8269C(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "setBackgroundColor:", *(_QWORD *)(a1 + 40));
}

id sub_82A10(uint64_t a1)
{
  double v1;

  if (*(_BYTE *)(a1 + 40))
    v1 = 1.0;
  else
    v1 = 0.0;
  return objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "actionlessBookmarkButton"), "setAlpha:", v1);
}

id sub_82B40(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "showSearchPopoverFromBarButtonItem:withText:", objc_msgSend(*(id *)(a1 + 32), "searchButtonItem"), *(_QWORD *)(a1 + 40));
}

id sub_82F74(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "p_updateFromTheme:", 0);
}

id sub_833CC(uint64_t a1)
{
  id v2;

  v2 = objc_msgSend(*(id *)(a1 + 32), "navigationOverlayView");
  objc_msgSend(*(id *)(a1 + 32), "p_navigationOverlayFrame");
  return objc_msgSend(v2, "setFrame:");
}

id sub_83400(uint64_t a1)
{
  _QWORD v2[5];
  _QWORD v3[4];
  __int128 v4;

  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_8348C;
  v3[3] = &unk_426E28;
  v4 = *(_OWORD *)(a1 + 32);
  v2[0] = _NSConcreteStackBlock;
  v2[1] = 3221225472;
  v2[2] = sub_834BC;
  v2[3] = &unk_427130;
  v2[4] = v4;
  return +[UIView animateWithDuration:animations:completion:](UIView, "animateWithDuration:animations:completion:", v3, v2, 0.2);
}

id sub_8348C(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 32), "setAlpha:", 0.0);
  return objc_msgSend(*(id *)(a1 + 40), "setAlpha:", 1.0);
}

id sub_834BC(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 32), "removeFromSuperview");
  return objc_msgSend(*(id *)(a1 + 32), "setAlpha:", 1.0);
}

id sub_8362C(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "setAlpha:", 0.0);
}

id sub_83638(uint64_t a1)
{
  id v2;
  _QWORD v4[5];

  v2 = objc_msgSend(*(id *)(a1 + 32), "superview");
  if (v2 == objc_msgSend(*(id *)(a1 + 40), "viewIfLoaded"))
    objc_msgSend(*(id *)(a1 + 32), "removeFromSuperview");
  objc_msgSend(*(id *)(a1 + 32), "setAlpha:", 1.0);
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_836E0;
  v4[3] = &unk_426DD0;
  v4[4] = *(_QWORD *)(a1 + 40);
  return +[UIView animateWithDuration:animations:completion:](UIView, "animateWithDuration:animations:completion:", v4, &stru_4285C8, 0.2);
}

id sub_836E0(uint64_t a1)
{
  id v2;

  v2 = objc_msgSend(*(id *)(a1 + 32), "navigationOverlayView");
  objc_msgSend(*(id *)(a1 + 32), "p_navigationOverlayFrame");
  return objc_msgSend(v2, "setFrame:");
}

id sub_838A8(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "closeDocumentWithErrorBlock:", 0);
}

id sub_8415C(uint64_t a1, int a2)
{
  uint64_t v2;

  if (a2)
    v2 = 1;
  else
    v2 = 2;
  return objc_msgSend(*(id *)(a1 + 32), "setDoNotDisturbStatusAtStart:", v2);
}

void sub_84304(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
  _Block_object_dispose(&a27, 8);
  _Unwind_Resume(a1);
}

id sub_84348(uint64_t a1, int a2)
{
  id v4;
  unsigned int v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v18[5];

  if (objc_msgSend(*(id *)(a1 + 32), "optedIn"))
    v4 = objc_msgSend(*(id *)(a1 + 40), "doNotDisturbStatusAtStart");
  else
    v4 = 0;
  v5 = objc_msgSend(*(id *)(a1 + 32), "optedIn");
  v6 = 1;
  if (!a2)
    v6 = 2;
  if (v5)
    v7 = v6;
  else
    v7 = 0;
  v8 = objc_msgSend(objc_alloc((Class)BADoNotDisturbData), "initWithStartStatus:endStatus:", v4, v7);
  v9 = +[BAEventReporter sharedReporter](BAEventReporter, "sharedReporter");
  v10 = *(_QWORD *)(a1 + 32);
  v11 = *(_QWORD *)(a1 + 48);
  v12 = *(_QWORD *)(a1 + 56);
  v13 = *(_QWORD *)(a1 + 64);
  v14 = *(_QWORD *)(a1 + 72);
  v15 = *(_QWORD *)(a1 + 88);
  v16 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 80) + 8) + 40);
  v18[0] = _NSConcreteStackBlock;
  v18[1] = 3221225472;
  v18[2] = sub_84438;
  v18[3] = &unk_426FA8;
  v18[4] = v15;
  return objc_msgSend(v9, "emitReadEventWithTracker:readingSessionData:contentData:readingSettingsData:upSellData:contentSettingsData:doNotDisturbData:startTime:completion:", v10, v11, v12, v13, 0, v14, v8, v16, v18);
}

void sub_84438(uint64_t a1)
{
  _QWORD block[5];

  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_84494;
  block[3] = &unk_426FA8;
  block[4] = *(_QWORD *)(a1 + 32);
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
}

void sub_84494(uint64_t a1)
{
  objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40), "invalidate");

  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40) = 0;
}

id sub_84BFC(uint64_t a1, void *a2)
{
  id v4;
  id v5;
  CGFloat x;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  double v10;
  id v11;
  id result;
  CGRect v13;
  CGRect v14;

  v4 = objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "navigationBarController"), "navigationBar");
  v5 = objc_msgSend(*(id *)(a1 + 32), "view");
  objc_msgSend(v4, "bounds");
  objc_msgSend(v5, "convertRect:fromView:", v4);
  x = v13.origin.x;
  y = v13.origin.y;
  width = v13.size.width;
  height = v13.size.height;
  v10 = CGRectGetWidth(v13);
  v14.origin.x = x;
  v14.origin.y = y;
  v14.size.width = width;
  v14.size.height = height;
  objc_msgSend(a2, "addRegionWithRect:", 0.0, 0.0, v10, CGRectGetMaxY(v14));
  v11 = objc_msgSend(*(id *)(a1 + 32), "visibleViewController");
  result = objc_msgSend(*(id *)(a1 + 32), "documentViewController");
  if (v11 == result)
    return objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "documentViewController"), "buildHoverControlRegionForInteraction:withBuilder:", *(_QWORD *)(*(_QWORD *)(a1 + 32) + 376), a2);
  return result;
}

void sub_857C8()
{
  qword_5431A8 = BCDefaultAppearanceStyleKey;
}

uint64_t sub_85EB8(uint64_t result)
{
  switch(result)
  {
    case 11:
      result = 12;
      break;
    case 12:
      result = 11;
      break;
    case 13:
      result = 14;
      break;
    case 14:
      result = 13;
      break;
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 25:
    case 26:
    case 27:
    case 28:
    case 29:
    case 30:
    case 33:
    case 34:
    case 35:
    case 36:
    case 37:
    case 38:
    case 39:
    case 40:
      return result;
    case 21:
      result = 24;
      break;
    case 22:
      result = 23;
      break;
    case 23:
      result = 22;
      break;
    case 24:
      result = 21;
      break;
    case 31:
      result = 32;
      break;
    case 32:
      result = 31;
      break;
    case 41:
      result = 42;
      break;
    case 42:
      result = 41;
      break;
    case 43:
      result = 44;
      break;
    case 44:
      result = 43;
      break;
    default:
      switch(result)
      {
        case 'o':
          result = 112;
          break;
        case 'p':
          result = 111;
          break;
        case 'r':
          result = 115;
          break;
        case 's':
          result = 114;
          break;
        case 'y':
          result = 122;
          break;
        case 'z':
          result = 121;
          break;
        default:
          return result;
      }
      break;
  }
  return result;
}

void sub_86B9C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9)
{
  void *v9;

  if (a2 == 1)
  {
    objc_begin_catch(exception_object);
    objc_msgSend(+[TSUAssertionHandler currentHandler](TSUAssertionHandler, "currentHandler"), "handleFailureInFunction:file:lineNumber:description:", +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "-[THUserDataManager initWithBookDescription:]"), +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Alder/bliss/Classes/THUserDataManager.m"), 124, CFSTR("Exception initializing user data managed. %@"));

    objc_end_catch();
    JUMPOUT(0x86B7CLL);
  }
  _Unwind_Resume(exception_object);
}

void sub_86D7C(uint64_t a1)
{
  uint64_t v1;
  id v3;
  id v4;

  v1 = *(_QWORD *)(a1 + 32);
  if (*(_BYTE *)(v1 + 32))
  {
    if (*(_QWORD *)(v1 + 24))
    {
      v3 = objc_msgSend(objc_msgSend(*(id *)(v1 + 8), "metadataForPersistentStore:", *(_QWORD *)(a1 + 40)), "mutableCopy");
      v4 = objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 24), "copy");
      objc_msgSend(v3, "setObject:forKey:", v4, CFSTR("THUserData-Metadata"));
      objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 8), "setMetadata:forPersistentStore:", v3, *(_QWORD *)(a1 + 40));

      *(_BYTE *)(*(_QWORD *)(a1 + 32) + 32) = 0;
    }
  }
}

id sub_86EC8(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  id result;

  objc_msgSend(*(id *)(a1 + 32), "p_cacheMetadataDictionary");
  v2 = *(_QWORD *)(a1 + 40);
  v3 = *(void **)(*(_QWORD *)(a1 + 32) + 24);
  if (v2)
    result = objc_msgSend(v3, "setObject:forKey:", v2, *(_QWORD *)(a1 + 48));
  else
    result = objc_msgSend(v3, "removeObjectForKey:", *(_QWORD *)(a1 + 48));
  *(_BYTE *)(*(_QWORD *)(a1 + 32) + 32) = 1;
  return result;
}

void sub_86FD8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_86FF0(uint64_t a1, uint64_t a2)
{
  _Block_object_assign((void *)(a1 + 40), *(const void **)(a2 + 40), 131);
}

void sub_87000(uint64_t a1)
{
  _Block_object_dispose(*(const void **)(a1 + 40), 131);
}

id sub_8700C(uint64_t a1)
{
  id result;

  objc_msgSend(*(id *)(a1 + 32), "p_cacheMetadataDictionary");
  result = objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 24), "objectForKey:", *(_QWORD *)(a1 + 40));
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40) = result;
  return result;
}

void sub_88240(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_889F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_88A0C(uint64_t a1, uint64_t a2)
{
  _Block_object_assign((void *)(a1 + 40), *(const void **)(a2 + 40), 131);
}

void sub_88A1C(uint64_t a1)
{
  _Block_object_dispose(*(const void **)(a1 + 40), 131);
}

id sub_88A28(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40), "addObject:", +[NSPredicate predicateWithFormat:](NSPredicate, "predicateWithFormat:", CFSTR("(plStorageUUID BEGINSWITH[n] %@)"), a2));
}

id sub_89B78(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(*(id *)(a1 + 32), "p_performAction:moc:", objc_msgSend(*(id *)(a1 + 32), "p_actionForInsertingAnnotationWithType:style:absolutePageIndex:range:storage:contentNode:updateBlock:", 1, 0, *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 40), objc_msgSend(*(id *)(a1 + 48), "contentNode"), 0), a2);
}

id sub_89CC4(uint64_t a1, uint64_t a2)
{
  void *v4;
  id v5;
  id v6;
  uint64_t v7;
  void *i;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  _BYTE v14[128];

  v10 = 0u;
  v11 = 0u;
  v12 = 0u;
  v13 = 0u;
  v4 = *(void **)(a1 + 32);
  v5 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v10, v14, 16);
  if (v5)
  {
    v6 = v5;
    v7 = *(_QWORD *)v11;
    do
    {
      for (i = 0; i != v6; i = (char *)i + 1)
      {
        if (*(_QWORD *)v11 != v7)
          objc_enumerationMutation(v4);
        objc_msgSend(*(id *)(a1 + 40), "p_performAction:moc:", objc_msgSend(*(id *)(a1 + 40), "p_actionForDeletingCachedAnnotation:moc:", *(_QWORD *)(*((_QWORD *)&v10 + 1) + 8 * (_QWORD)i), a2), a2);
      }
      v6 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v10, v14, 16);
    }
    while (v6);
  }
  return objc_msgSend(*(id *)(a1 + 40), "p_closeActionGroupWithMoc:", a2);
}

BOOL sub_89F00(uint64_t a1, void *a2)
{
  id v3;
  unint64_t v4;

  if (*(_QWORD *)(a1 + 32) != 0x7FFFFFFFFFFFFFFFLL)
    return objc_msgSend(a2, "annotationAbsolutePhysicalPageIndex") == *(id *)(a1 + 32);
  v3 = objc_msgSend(a2, "annotationStorageRange");
  v4 = *(_QWORD *)(a1 + 40);
  return v4 <= (unint64_t)v3 && *(_QWORD *)(a1 + 48) + v4 >= (unint64_t)v3 + 1;
}

id sub_8A030(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(*(id *)(a1 + 32), "p_performAction:moc:", objc_msgSend(*(id *)(a1 + 32), "p_actionForInsertingAnnotationWithType:style:absolutePageIndex:range:storage:contentNode:updateBlock:", 1, 0, 0x7FFFFFFFFFFFFFFFLL, *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 40), objc_msgSend(*(id *)(a1 + 48), "contentNode"), 0), a2);
}

void sub_8A480(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_8A4F0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_8A708(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_8A730(uint64_t a1, uint64_t a2)
{
  void *v3;

  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40) = -[THAnnotationCache initWithAnnotations:contentNode:]([THAnnotationCache alloc], "initWithAnnotations:contentNode:", objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "p_cachedBookmarksWithMoc:", a2), "allValues"), 0);
  v3 = *(void **)(a1 + 32);
  objc_sync_enter(v3);
  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 176), "setObject:forKey:", *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), CFSTR("THMacAnnotationAllBookmarks"));
  return objc_sync_exit(v3);
}

void sub_8A7C0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

id sub_8A8B8(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(*(id *)(a1 + 32), "p_performAction:moc:", objc_msgSend(*(id *)(a1 + 32), "p_actionForDeletingCachedAnnotation:moc:", *(_QWORD *)(a1 + 40), a2), a2);
}

void sub_8A950(uint64_t a1, uint64_t a2)
{
  id v4;
  THAnnotationTextLocator *v5;
  id v6;
  id v7;
  char v8;
  uint64_t v9;
  void *i;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  _BYTE v20[128];

  v4 = objc_msgSend(*(id *)(a1 + 32), "p_annotationsForFetchRequest:moc:migrateIfNecessary:", objc_msgSend(*(id *)(a1 + 32), "annotationRequestForNonSponsoredNonOrphaned"), a2, 0);
  if (objc_msgSend(v4, "count"))
  {
    v5 = -[THAnnotationTextLocator initWithDocumentRoot:]([THAnnotationTextLocator alloc], "initWithDocumentRoot:", *(_QWORD *)(a1 + 40));
    v16 = 0u;
    v17 = 0u;
    v18 = 0u;
    v19 = 0u;
    v6 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v16, v20, 16);
    if (v6)
    {
      v7 = v6;
      v13 = a2;
      v8 = 0;
      v9 = *(_QWORD *)v17;
      do
      {
        for (i = 0; i != v7; i = (char *)i + 1)
        {
          if (*(_QWORD *)v17 != v9)
            objc_enumerationMutation(v4);
          v11 = *(void **)(*((_QWORD *)&v16 + 1) + 8 * (_QWORD)i);
          if (objc_msgSend(*(id *)(a1 + 32), "p_annotationNeedsMigration:", v11))
          {
            v14 = 0;
            v15 = 0;
            if (-[THAnnotationTextLocator locateAnnotationText:leftContext:rightContext:contentNodeID:storageID:](v5, "locateAnnotationText:leftContext:rightContext:contentNodeID:storageID:", objc_msgSend(v11, "annotationRepresentativeText"), objc_msgSend(v11, "selectionPreContextText"), objc_msgSend(v11, "selectionPostContextText"), &v15, &v14))
            {
              v12 = +[THModelContentNode annotationIDForInfoID:contentNodeID:](THModelContentNode, "annotationIDForInfoID:contentNodeID:", v14, v15);
              objc_msgSend(v11, "setAnnotationStorageRange:", 0, 0);
              objc_msgSend(v11, "setPlStorageUUID:", v12);
              v8 = 1;
            }
          }
        }
        v7 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v16, v20, 16);
      }
      while (v7);
      if ((v8 & 1) != 0)
        objc_msgSend(*(id *)(a1 + 32), "p_commitChangesWithMoc:", v13);
    }

  }
}

void sub_8ACD0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_8ACE8(uint64_t a1, uint64_t a2)
{
  id result;
  int v4;

  result = objc_msgSend(*(id *)(a1 + 32), "p_getReadingLocationWithMOC:", a2);
  if (result)
  {
    result = objc_msgSend(result, "readingProgress");
    *(_DWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = v4;
  }
  return result;
}

void sub_8ADC4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_8ADDC(uint64_t a1, uint64_t a2)
{
  id result;
  int v4;

  result = objc_msgSend(*(id *)(a1 + 32), "p_getReadingLocationWithMOC:", a2);
  if (result)
  {
    result = objc_msgSend(result, "readingProgressHighWaterMark");
    *(_DWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = v4;
  }
  return result;
}

void sub_8B010(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 96), 8);
  _Unwind_Resume(a1);
}

id sub_8B038(uint64_t a1, uint64_t a2)
{
  id result;
  void *v4;
  THPageLocation *v5;
  id v6;
  id v7;
  uint64_t v8;

  result = objc_msgSend(*(id *)(a1 + 32), "p_getReadingLocationWithMOC:", a2);
  if (result)
  {
    v4 = result;
    v5 = [THPageLocation alloc];
    v6 = objc_msgSend(v4, "absolutePhysicalPageIndex");
    v7 = objc_msgSend(v4, "annotationStorageRange");
    *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40) = -[THPageLocation initWithAbsolutePageIndex:range:storageUID:contentNodeGUID:](v5, "initWithAbsolutePageIndex:range:storageUID:contentNodeGUID:", v6, v7, v8, objc_msgSend(v4, "annotationStorageIDWithoutContentNodeID"), objc_msgSend(v4, "annotationContentNodeID"));
    result = objc_msgSend(v4, "placeholderHistory");
    *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40) = result;
  }
  return result;
}

id *sub_8B378(id *result, uint64_t a2, uint64_t a3)
{
  if (a3 || !result[4])
    return (id *)objc_msgSend(result[5], "p_performAction:moc:", objc_msgSend(result[5], "p_actionForDeletingAEAnnotation:", a2), result[6]);
  return result;
}

id sub_8B3C0(uint64_t a1, void *a2)
{
  id v4;
  uint64_t v5;
  double v6;

  objc_msgSend(a2, "setAnnotationModificationDate:", +[NSDate date](NSDate, "date"));
  v4 = objc_msgSend(*(id *)(a1 + 32), "range");
  objc_msgSend(a2, "setAnnotationStorageRange:", v4, v5);
  objc_msgSend(a2, "setAbsolutePhysicalPageIndex:", objc_msgSend(*(id *)(a1 + 32), "absolutePhysicalPageIndex"));
  objc_msgSend(a2, "setPlStorageUUID:", +[THModelContentNode annotationIDForInfoID:contentNodeID:](THModelContentNode, "annotationIDForInfoID:contentNodeID:", objc_msgSend(*(id *)(a1 + 32), "storageUID"), objc_msgSend(*(id *)(a1 + 40), "nodeGUID")));
  objc_msgSend(a2, "setPlaceholderHistory:", *(_QWORD *)(a1 + 48));
  LODWORD(v6) = *(_DWORD *)(a1 + 64);
  objc_msgSend(a2, "updateReadingProgressAndBumpHighWaterMarkToProgress:", v6);
  return objc_msgSend(*(id *)(a1 + 56), "p_addVersioningPropertiesAE:", a2);
}

id sub_8B484(uint64_t a1, void *a2)
{
  double v4;

  objc_msgSend(a2, "setPlaceholderHistory:", *(_QWORD *)(a1 + 32));
  objc_msgSend(*(id *)(a1 + 40), "p_addVersioningPropertiesAE:", a2);
  LODWORD(v4) = *(_DWORD *)(a1 + 48);
  return objc_msgSend(a2, "updateReadingProgressAndBumpHighWaterMarkToProgress:", v4);
}

void sub_8B664(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

id sub_8B684(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(*(id *)(a1 + 32), "addObject:", a2);
}

id sub_8B6F4(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(*(id *)(a1 + 32), "isEqualToString:", objc_msgSend((id)TSUProtocolCast(&OBJC_PROTOCOL___THAnnotation, a2), "annotationUuid"));
}

void sub_8B7D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_8B7EC(uint64_t a1, uint64_t a2)
{
  id result;

  result = objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "p_sortedAssetIDVersionsWithMoc:", a2), "lastObject");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40) = result;
  return result;
}

void sub_8BA10(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, ...)
{
  va_list va;

  va_start(va, a16);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_8BA44(uint64_t a1, void *a2)
{
  id v4;
  id v5;
  id result;

  v4 = objc_alloc((Class)NSFetchRequest);
  v5 = objc_msgSend(v4, "initWithEntityName:", kAEAnnotationEntityName);
  objc_msgSend(v5, "setReturnsDistinctResults:", 1);
  objc_msgSend(v5, "setPropertiesToFetch:", +[NSArray arrayWithObject:](NSArray, "arrayWithObject:", kAEAnnotationAssetVersionKey));
  objc_msgSend(v5, "setResultType:", 2);
  objc_msgSend(v5, "setPredicate:", +[NSPredicate predicateWithFormat:](NSPredicate, "predicateWithFormat:", CFSTR("(annotationAssetID == %@)"), objc_msgSend(*(id *)(a1 + 32), "annotationID")));
  result = objc_msgSend(a2, "executeFetchRequest:error:", v5, 0);
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40) = result;
  return result;
}

int64_t sub_8BB1C(id a1, id a2, id a3)
{
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;

  v5 = objc_opt_class(THBookVersion, a2);
  v6 = (void *)TSUDynamicCast(v5, a2);
  v8 = objc_opt_class(THBookVersion, v7);
  v9 = (void *)TSUDynamicCast(v8, a3);
  if ((objc_msgSend(v9, "isStrictlyNewerThanBookVersion:", v6) & 1) != 0)
    return -1;
  else
    return objc_msgSend(v6, "isStrictlyNewerThanBookVersion:", v9);
}

id sub_8BBEC(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(*(id *)(a1 + 32), "p_annotationsForFetchRequest:moc:migrateIfNecessary:", objc_msgSend(*(id *)(a1 + 32), "annotationRequestForNonSponsoredNonOrphaned"), a2, 1);
}

void sub_8BE50(id a1, AEAnnotation *a2)
{
  -[AEAnnotation setPlaceholderHistory:](a2, "setPlaceholderHistory:", 0);
}

id sub_8BF84(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "setAnnotationStorageRange:", *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40));
}

id sub_8C1C8(uint64_t a1, void *a2)
{
  objc_msgSend(a2, "setPlStorageUUID:", objc_msgSend(*(id *)(a1 + 32), "annotationIDForInfo:", *(_QWORD *)(a1 + 40)));
  return objc_msgSend(a2, "setAnnotationStorageRange:", *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56));
}

id sub_8C2F0(uint64_t a1, void *a2)
{
  void *v4;
  id v5;
  uint64_t v6;

  v4 = *(void **)(a1 + 32);
  v5 = objc_msgSend(a2, "annotationStorageRange");
  return objc_msgSend(a2, "setAnnotationLocation:", objc_msgSend(v4, "cfiForRange:storageUID:includeFilename:pedantic:", v5, v6, objc_msgSend(*(id *)(a1 + 32), "nodeUniqueIDForInfo:", *(_QWORD *)(a1 + 40)), 1, 0));
}

id sub_8C4C4(_QWORD *a1, void *a2)
{
  objc_msgSend(a2, "setAbsolutePhysicalPageIndex:", a1[4]);
  return objc_msgSend(a2, "setAnnotationStorageRange:", a1[5], a1[6]);
}

void sub_8C530(id a1, AEAnnotation *a2)
{
  -[AEAnnotation setAnnotationLocation:](a2, "setAnnotationLocation:", 0);
}

id sub_8C5F4(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(*(id *)(a1 + 32), "p_addVersioningPropertiesAE:", a2);
}

void sub_8C710(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_8C7D0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_8C9BC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_8CD04(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

id sub_8CDE4(id *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  id result;

  v6 = objc_opt_class(NSManagedObjectID, a2);
  v7 = TSUDynamicCast(v6, a3);
  v9 = objc_opt_class(NSString, v8);
  v10 = TSUDynamicCast(v9, a2);
  v12 = objc_opt_class(AEAnnotation, v11);
  v13 = (id)TSUDynamicCast(v12, objc_msgSend(a1[4], "objectWithID:", v7));
  if (objc_msgSend(v13, "isFault"))
    v13 = objc_msgSend(a1[5], "p_storageAnnotationForUUID:includeDeleted:moc:", v10, 0, a1[4]);
  if (!objc_msgSend(v13, "annotationUuid"))
    objc_msgSend(+[TSUAssertionHandler currentHandler](TSUAssertionHandler, "currentHandler"), "handleFailureInFunction:file:lineNumber:description:", +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "-[THAnnotationController p_annotationsForManagedObjectIDs:moc:]_block_invoke"), +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Alder/bliss/Classes/THAnnotationController.m"), 2051, CFSTR("invalid nil value for '%s'"), "annotation.annotationUuid");
  result = objc_msgSend(v13, "annotationUuid");
  if (result)
    return objc_msgSend(a1[6], "setObject:forKey:", v13, objc_msgSend(v13, "annotationUuid"));
  return result;
}

void sub_8D0F8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_8D2A8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_8D6A4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

id sub_8D6E8(uint64_t a1, void *a2)
{
  objc_msgSend(a2, "setAnnotationStorageRange:", *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40));
  return objc_msgSend(a2, "setAnnotationStyle:", *(unsigned int *)(a1 + 48));
}

void sub_8D874(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_list va;

  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_8D88C(uint64_t a1, uint64_t a2)
{
  NSMutableDictionary *v4;
  THModelStorageAnchor *v5;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  THCachedAnnotation *v11;
  _QWORD v12[5];
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t);
  void (*v17)(uint64_t);
  id v18;

  v4 = +[NSMutableDictionary dictionaryWithDictionary:](NSMutableDictionary, "dictionaryWithDictionary:", *(_QWORD *)(a1 + 32));
  v5 = +[THModelStorageAnchor storageAnchorWithContentNode:storage:range:](THModelStorageAnchor, "storageAnchorWithContentNode:storage:range:", *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80));
  if (v5)
    -[NSMutableDictionary setObject:forKey:](v4, "setObject:forKey:", v5, CFSTR("THAnnotationStorageAnchorUndoContextKey"));
  objc_msgSend(*(id *)(a1 + 56), "p_openUndoGroupWithContext:actionName:", v4, objc_msgSend((id)THBundle(), "localizedStringForKey:value:table:", CFSTR("Add Highlight"), &stru_43D7D8, 0));
  v6 = objc_msgSend(*(id *)(a1 + 56), "p_extendExistingAnnotationForRange:storage:contentNode:style:moc:", *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 40), *(unsigned int *)(a1 + 88), a2);
  v13 = 0;
  v14 = &v13;
  v15 = 0x3052000000;
  v16 = sub_88A0C;
  v17 = sub_88A1C;
  v18 = 0;
  if (v6)
  {
    v18 = v6;
  }
  else
  {
    v8 = *(_QWORD *)(a1 + 48);
    v7 = *(void **)(a1 + 56);
    v9 = *(unsigned int *)(a1 + 88);
    v10 = *(_QWORD *)(a1 + 40);
    v12[0] = _NSConcreteStackBlock;
    v12[1] = 3221225472;
    v12[2] = sub_8DA34;
    v12[3] = &unk_428A28;
    v12[4] = &v13;
    objc_msgSend(*(id *)(a1 + 56), "p_performUndoableAction:moc:", objc_msgSend(v7, "p_actionForInsertingAnnotationWithType:style:absolutePageIndex:range:storage:contentNode:updateBlock:", 2, v9, 0x7FFFFFFFFFFFFFFFLL, *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), v8, v10, v12), a2);
  }
  objc_msgSend(*(id *)(a1 + 56), "p_closeUndoGroup");
  v11 = [THCachedAnnotation alloc];
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 40) = -[THCachedAnnotation initWithAnnotation:contentNode:](v11, "initWithAnnotation:contentNode:", v14[5], *(_QWORD *)(a1 + 40));
  _Block_object_dispose(&v13, 8);
}

void sub_8DA18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_8DA34(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(result + 32) + 8) + 40) = a2;
  return result;
}

id sub_8DCF0(uint64_t a1, uint64_t a2)
{
  void *v4;
  id result;
  id v6;
  uint64_t v7;
  void *v8;
  void *v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  _BYTE v14[128];

  v10 = 0u;
  v11 = 0u;
  v12 = 0u;
  v13 = 0u;
  v4 = *(void **)(a1 + 32);
  result = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v10, v14, 16);
  if (result)
  {
    v6 = result;
    v7 = *(_QWORD *)v11;
    do
    {
      v8 = 0;
      do
      {
        if (*(_QWORD *)v11 != v7)
          objc_enumerationMutation(v4);
        v9 = *(void **)(*((_QWORD *)&v10 + 1) + 8 * (_QWORD)v8);
        if (objc_msgSend(v9, "annotationType") != 2)
          objc_msgSend(+[TSUAssertionHandler currentHandler](TSUAssertionHandler, "currentHandler"), "handleFailureInFunction:file:lineNumber:description:", +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "-[THAnnotationController destroyAnnotations:undoContext:]_block_invoke"), +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Alder/bliss/Classes/THAnnotationController.m"), 2307, CFSTR("destroyAnnotations is only for highlight (ranged) annotations -- if we need it for somethign else, we should add a variant that does the right thing with undo"));
        objc_msgSend(*(id *)(a1 + 40), "p_performUndoableAction:moc:", objc_msgSend(*(id *)(a1 + 40), "p_actionForDeletingCachedAnnotation:moc:", v9, a2), a2);
        v8 = (char *)v8 + 1;
      }
      while (v6 != v8);
      result = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v10, v14, 16);
      v6 = result;
    }
    while (result);
  }
  return result;
}

void sub_8E128(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

THCachedAnnotation *sub_8E140(uint64_t a1, uint64_t a2)
{
  THCachedAnnotation *result;
  THCachedAnnotation *v5;
  uint64_t v6;
  BOOL v7;
  void *v8;
  _QWORD v9[5];

  result = (THCachedAnnotation *)objc_msgSend(*(id *)(a1 + 32), "p_annotationForCachedAnnotation:moc:", *(_QWORD *)(a1 + 40), a2);
  v5 = result;
  v6 = *(_QWORD *)(a1 + 56);
  if (v6)
    v7 = result == 0;
  else
    v7 = 1;
  if (v7 || !*(_QWORD *)(a1 + 48))
  {
    result = (THCachedAnnotation *)objc_msgSend(+[TSUAssertionHandler currentHandler](TSUAssertionHandler, "currentHandler"), "handleFailureInFunction:file:lineNumber:description:", +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "-[THAnnotationController modifyAnnotation:undoContext:undoActionName:withBlock:]_block_invoke"), +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Alder/bliss/Classes/THAnnotationController.m"), 2345, CFSTR("invalid annotation"));
    v6 = *(_QWORD *)(a1 + 56);
  }
  if (v6 && v5)
  {
    if (*(_QWORD *)(a1 + 48))
    {
      v8 = *(void **)(a1 + 32);
      v9[0] = _NSConcreteStackBlock;
      v9[1] = 3221225472;
      v9[2] = sub_8E280;
      v9[3] = &unk_428A78;
      v9[4] = v6;
      objc_msgSend(*(id *)(a1 + 32), "p_performUndoableAction:moc:", objc_msgSend(v8, "p_actionForUpdatingAnnotation:withBlock:", v5, v9), a2);
      result = -[THCachedAnnotation initWithAnnotation:contentNode:]([THCachedAnnotation alloc], "initWithAnnotation:contentNode:", v5, *(_QWORD *)(a1 + 48));
      *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 40) = result;
    }
  }
  return result;
}

void sub_8E280(uint64_t a1, uint64_t a2)
{
  THMutableAnnotation *v3;

  v3 = -[THMutableAnnotation initWithAEAnnotation:]([THMutableAnnotation alloc], "initWithAEAnnotation:", a2);
  (*(void (**)(void))(*(_QWORD *)(a1 + 32) + 16))();

}

id sub_8E3E4(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "setAnnotationNote:", *(_QWORD *)(a1 + 32));
}

id sub_8E4A4(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "setAnnotationStyle:", *(unsigned int *)(a1 + 32));
}

void sub_8E61C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

THAnnotationCache *sub_8E64C(uint64_t a1, uint64_t a2)
{
  THAnnotationCache *result;

  result = -[THAnnotationCache initWithAnnotations:contentNode:]([THAnnotationCache alloc], "initWithAnnotations:contentNode:", objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "p_cachedAnnotationsForContentNode:moc:", *(_QWORD *)(a1 + 40), a2), "allValues"), *(_QWORD *)(a1 + 40));
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40) = result;
  return result;
}

void sub_8E8A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_8E8C0(uint64_t a1, uint64_t a2)
{
  id v4;
  id result;
  id v6;
  uint64_t v7;
  void *v8;
  THCachedAnnotation *v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  _BYTE v14[128];

  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40) = objc_opt_new(NSMutableArray, a2);
  v4 = objc_msgSend(*(id *)(a1 + 32), "p_annotationsForFetchRequest:moc:migrateIfNecessary:", *(_QWORD *)(a1 + 40), a2, *(unsigned __int8 *)(a1 + 56));
  v10 = 0u;
  v11 = 0u;
  v12 = 0u;
  v13 = 0u;
  result = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v10, v14, 16);
  if (result)
  {
    v6 = result;
    v7 = *(_QWORD *)v11;
    do
    {
      v8 = 0;
      do
      {
        if (*(_QWORD *)v11 != v7)
          objc_enumerationMutation(v4);
        v9 = -[THCachedAnnotation initWithAnnotation:contentNode:]([THCachedAnnotation alloc], "initWithAnnotation:contentNode:", *(_QWORD *)(*((_QWORD *)&v10 + 1) + 8 * (_QWORD)v8), objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "documentNavModel"), "contentNodeForGUID:", objc_msgSend(*(id *)(*((_QWORD *)&v10 + 1) + 8 * (_QWORD)v8), "annotationContentNodeID")));
        objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40), "addObject:", v9);

        v8 = (char *)v8 + 1;
      }
      while (v6 != v8);
      result = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v10, v14, 16);
      v6 = result;
    }
    while (result);
  }
  return result;
}

uint64_t sub_8EBCC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

id sub_8EC94(uint64_t a1, void *a2)
{
  return objc_msgSend(*(id *)(a1 + 32), "isEqualToString:", objc_msgSend(a2, "annotationContentNodeID"));
}

void sub_8F2EC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_8F4D4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_8FAEC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

id sub_8FB08(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(*(id *)(a1 + 40), "p_processChangeList:moc:", objc_msgSend(*(id *)(a1 + 32), "undoWithAnnotationHost:moc:", *(_QWORD *)(a1 + 40), a2), a2);
}

void sub_8FDF8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

id sub_8FE14(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(*(id *)(a1 + 40), "p_processChangeList:moc:", objc_msgSend(*(id *)(a1 + 32), "redoWithAnnotationHost:moc:", *(_QWORD *)(a1 + 40), a2), a2);
}

void sub_90728(uint64_t a1, void *a2)
{
  uint64_t v4;
  NSObject *v5;
  int v6;
  id v7;
  __int16 v8;
  id v9;

  objc_msgSend(a2, "setAnnotationStyle:", *(unsigned int *)(a1 + 80));
  objc_msgSend(a2, "setAnnotationType:", *(unsigned int *)(a1 + 84));
  if (*(_DWORD *)(a1 + 84) == 1)
    objc_msgSend(a2, "setPlStorageUUID:", objc_msgSend(*(id *)(a1 + 32), "legacyBookmarkIDForInfo:", *(_QWORD *)(a1 + 40)));
  if (*(_QWORD *)(a1 + 56) != 0x7FFFFFFFFFFFFFFFLL)
    objc_msgSend(a2, "setAbsolutePhysicalPageIndex:");
  objc_msgSend(a2, "setAnnotationStorageRange:", *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72));
  v4 = *(_QWORD *)(a1 + 48);
  if (v4)
    v4 = (*(uint64_t (**)(uint64_t, void *))(v4 + 16))(v4, a2);
  v5 = _AEBookPluginsAnnotationsLog(v4);
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    v6 = 138412546;
    v7 = objc_msgSend(a2, "annotationAssetID");
    v8 = 2112;
    v9 = objc_msgSend(a2, "annotationUuid");
    _os_log_impl(&dword_0, v5, OS_LOG_TYPE_DEFAULT, "add bliss annotation: assetID: %@, uuid: %@", (uint8_t *)&v6, 0x16u);
  }
}

void sub_9094C(uint64_t a1, void *a2)
{
  uint64_t v3;
  NSObject *v4;
  int v5;
  id v6;
  __int16 v7;
  id v8;

  v3 = *(_QWORD *)(a1 + 32);
  if (v3)
    v3 = (*(uint64_t (**)(uint64_t, void *))(v3 + 16))(v3, a2);
  v4 = _AEBookPluginsAnnotationsLog(v3);
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    v5 = 138412546;
    v6 = objc_msgSend(a2, "annotationAssetID");
    v7 = 2112;
    v8 = objc_msgSend(a2, "annotationUuid");
    _os_log_impl(&dword_0, v4, OS_LOG_TYPE_DEFAULT, "update bliss annotation: assetID: %@, uuid: %@", (uint8_t *)&v5, 0x16u);
  }
}

id sub_913B8(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "performSelector:withObject:afterDelay:", "p_hyperlinkAnimationEnded", 0, 0.0);
}

id sub_91CAC(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "performSelector:withObject:afterDelay:", "p_animationEnded", 0, 0.0);
}

void sub_91E78(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

id sub_92034(uint64_t a1)
{
  id result;

  *(_QWORD *)(*(_QWORD *)(a1 + 32) + 552) = -[THWPHighlightController initWithParentRep:]([THWPHighlightController alloc], "initWithParentRep:", *(_QWORD *)(a1 + 32));
  if (!objc_msgSend(*(id *)(a1 + 32), "parentRep"))
    objc_msgSend(+[TSUAssertionHandler currentHandler](TSUAssertionHandler, "currentHandler"), "handleFailureInFunction:file:lineNumber:description:", +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "-[THWPRep highlightController]_block_invoke"), +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Alder/bliss/Classes/THWPRep.mm"), 187, CFSTR("invalid nil value for '%s'"), "[self parentRep]");
  result = objc_msgSend(*(id *)(a1 + 32), "parentRep");
  if (result)
    return objc_msgSend(*(id *)(a1 + 32), "setupMarginNotesControllerForHighlightController:", *(_QWORD *)(*(_QWORD *)(a1 + 32) + 552));
  return result;
}

void sub_94424(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

__n128 sub_9443C(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)(a2 + 48);
  v3 = *(_OWORD *)(a2 + 64);
  *(__n128 *)(a1 + 48) = result;
  *(_OWORD *)(a1 + 64) = v3;
  return result;
}

void sub_9444C(uint64_t a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5)
{
  CGRect v5;

  v5.size.height = a5;
  v5.size.width = a4;
  v5.origin.y = a3;
  v5.origin.x = a2;
  *(CGRect *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 48) = CGRectUnion(*(CGRect *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8)+ 48), v5);
}

void sub_946E8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_948F8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_94B30(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_94B90(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, objc_super a9)
{
  void *v9;
  void *v10;

  v10 = v9;
  a9.receiver = v10;
  a9.super_class = (Class)THChapterBrowserController;
  -[_Unwind_Exception dealloc](&a9, "dealloc");
  _Unwind_Resume(a1);
}

void sub_94BC0(void *a1)
{
  __cxa_begin_catch(a1);
  std::terminate();
}

void sub_94DB8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_94E20(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_94FC0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_953DC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_95490(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_95598(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_956CC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_95784(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_958CC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_95C7C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_96288(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_963C4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_964F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_96744(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;
  void *v12;

  _Unwind_Resume(a1);
}

void sub_968E0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

id sub_968F8(uint64_t a1)
{
  id result;

  result = objc_msgSend(*(id *)(a1 + 32), "p_updateAdjacentChapterViews");
  *(_BYTE *)(*(_QWORD *)(a1 + 32) + 417) = 0;
  return result;
}

void sub_96A70(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_96D98(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_96F8C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, id a12)
{
  void *v12;

  _Unwind_Resume(a1);
}

void sub_97100(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;
  void *v15;

  _Unwind_Resume(a1);
}

id sub_97144(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "setBorderVisible:", 1);
}

void sub_9734C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_97518(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_976C0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_97878(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_97A04(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

id sub_97A30(uint64_t a1)
{
  return objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 128), "setAlpha:", 1.0);
}

void sub_97B4C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_97BB4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_97C64(_Unwind_Exception *exception_object)
{
  _Unwind_Resume(exception_object);
}

id sub_97C7C(uint64_t a1)
{
  return objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 128), "setAlpha:", 0.0);
}

void sub_97CEC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_97D64(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_97F54(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_97FF8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;

  v11 = v10;

  _Unwind_Resume(a1);
}

void sub_9819C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_981B4(uint64_t a1)
{
  id v2;

  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 104), "setContentOffset:animated:", 1, 0.0, 0.0);
  v2 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "introMediaViewController"));
  objc_msgSend(v2, "prepareControlsForTOC");

}

void sub_98210(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_9829C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_984F8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void sub_9877C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;
  void *v12;
  void *v13;

  _Unwind_Resume(a1);
}

void sub_989D4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void sub_98B20(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_98CF0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  _Unwind_Resume(a1);
}

id sub_98D58(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "setBorderVisible:", 1);
}

void sub_98EBC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;
  void *v12;
  void *v13;

  _Unwind_Resume(a1);
}

void sub_99070(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;
  void *v12;
  void *v13;

  _Unwind_Resume(a1);
}

void sub_99104(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_992D8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;

  v6 = v3;

  _Unwind_Resume(a1);
}

void sub_99380(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_9947C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;
  void *v12;
  void *v13;

  v13 = v12;

  _Unwind_Resume(a1);
}

void sub_9960C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_9969C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_998B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, void *a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,void *a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,void *a26,void *a27)
{
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  void *v31;

  _Unwind_Resume(a1);
}

id sub_9995C(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "setHighlightedHyperlinkField:", *(_QWORD *)(a1 + 40));
}

id sub_99968(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "setHighlightedHyperlinkField:", 0);
}

id sub_99974(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 32), "setHighlightedHyperlinkField:", 0);
  return objc_msgSend(*(id *)(a1 + 40), "followLink:", *(_QWORD *)(a1 + 48));
}

void sub_99A78(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_99ADC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_99BE8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_99C94(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_99F60(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_9A05C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_9A148(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_9A408(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, id a12)
{
  void *v12;
  void *v13;

  _Unwind_Resume(a1);
}

void sub_9A56C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_9A698(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_9A8DC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_9A974(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_9AEAC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_9B104(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_9B3AC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_9B4F8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_9B698(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_9C29C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,void *a25,void *a26)
{
  void *v26;

  _Unwind_Resume(a1);
}

BOOL sub_9C514(uint64_t a1, void *a2)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  _BOOL8 v9;

  v3 = a2;
  v5 = objc_opt_class(NSNumber, v4);
  v6 = TSUDynamicCast(v5, v3);
  v7 = (void *)objc_claimAutoreleasedReturnValue(v6);
  v8 = v7;
  if (v7)
    v9 = objc_msgSend(v7, "unsignedIntegerValue") == *(id *)(a1 + 32);
  else
    v9 = 0;

  return v9;
}

void sub_9C588(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_9C5D8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_9CA10(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_9CAC4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_9CCE0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_9D2F4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_9D624(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_9D76C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_9D818(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_9D8C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_9D950(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  id v6;

  v3 = *(_QWORD *)(a1 + 32);
  v2 = *(_QWORD *)(a1 + 40);
  if (v3 == *(_QWORD *)(v2 + 104))
  {
    objc_msgSend((id)v2, "p_backgroundScrollingDidEnd");
    v2 = *(_QWORD *)(a1 + 40);
  }
  if (*(_BYTE *)(v2 + 168))
  {
    *(_BYTE *)(v2 + 168) = 0;
    objc_msgSend(*(id *)(a1 + 40), "p_updatePageThumbnails:", 1);
    v2 = *(_QWORD *)(a1 + 40);
  }
  v4 = *(void **)(v2 + 176);
  *(_QWORD *)(v2 + 176) = 0;

  if (objc_msgSend(*(id *)(a1 + 40), "transitioningPageToDVC"))
  {
    objc_msgSend(*(id *)(a1 + 40), "p_updatePageThumbnails:", 1);
    v6 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "p_pageThumbnailViewForPageIndex:", objc_msgSend(*(id *)(a1 + 40), "transitioningThumbnailIndex")));
    objc_msgSend(*(id *)(a1 + 40), "p_transitionThumbnailToDVC:");
    v5 = (void *)objc_claimAutoreleasedReturnValue(+[UIApplication sharedApplication](UIApplication, "sharedApplication"));
    objc_msgSend(v5, "endIgnoringInteractionEvents");

    objc_msgSend(*(id *)(a1 + 40), "setTransitioningPageToDVC:", 0);
    objc_msgSend(*(id *)(a1 + 40), "setTransitioningThumbnailIndex:", 0x7FFFFFFFFFFFFFFFLL);

  }
}

void sub_9DA58(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_9DBCC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_9DC7C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_9E150(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;

  _Unwind_Resume(a1);
}

void sub_9E71C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;

  _Unwind_Resume(a1);
}

void sub_9E924(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_9E9C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;
  void *v12;

  v12 = v11;

  _Unwind_Resume(a1);
}

void sub_9EB28(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *a19)
{
  void *v19;

  _Unwind_Resume(a1);
}

id sub_9EB5C(uint64_t a1)
{
  double v2;
  double v3;
  void *v4;
  id result;
  CGAffineTransform v6;
  CGAffineTransform v7;

  objc_msgSend(*(id *)(a1 + 32), "bounds");
  CGAffineTransformMakeScale(&v7, *(double *)(a1 + 64) / v2, *(double *)(a1 + 72) / v3);
  v4 = *(void **)(a1 + 32);
  v6 = v7;
  objc_msgSend(v4, "setTransform:", &v6);
  result = objc_msgSend(*(id *)(a1 + 32), "setCenter:", TSDCenterOfRect(*(double *)(a1 + 48), *(double *)(a1 + 56), *(double *)(a1 + 64), *(double *)(a1 + 72)));
  if (*(_BYTE *)(a1 + 88))
    return objc_msgSend(*(id *)(a1 + 40), "setShrouded:animated:duration:", 1, 1, *(double *)(a1 + 80));
  return result;
}

id sub_9EBE8(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "p_thumbnailAnimationDidStopWithContext:", *(_QWORD *)(a1 + 40));
}

void sub_9EE60(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_9EFC8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_9F044(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_9F0C0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_9F228(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_9F2A8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_9F390(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_9F3A4(uint64_t a1)
{
  unsigned int v2;
  void *v3;
  double v4;
  id v5;

  v2 = objc_msgSend(*(id *)(a1 + 32), "p_verticalSpaceLimited");
  v5 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "thumbnailTrackBackgroundView"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "layer"));
  *(float *)&v4 = (float)v2;
  objc_msgSend(v3, "setOpacity:", v4);

}

void sub_9F400(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

uint64_t sub_9F420(uint64_t result)
{
  *(_BYTE *)(*(_QWORD *)(result + 32) + 507) = 0;
  *(_BYTE *)(*(_QWORD *)(result + 32) + 492) = 0;
  return result;
}

void sub_9F760(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_9F7D0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_9F8A4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_9F9F8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  _Unwind_Resume(a1);
}

void sub_9FB78(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

id sub_A0D1C(uint64_t a1)
{
  return objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 72), "setAlpha:", 0.0);
}

_QWORD *sub_A0D34(uint64_t a1)
{
  _QWORD *result;

  result = *(_QWORD **)(a1 + 32);
  if (result[3] == *(_QWORD *)(a1 + 40))
    return objc_msgSend(result, "p_hideFallbackImageView");
  return result;
}

_QWORD *sub_A0FA0(uint64_t a1)
{
  _QWORD *result;

  result = *(_QWORD **)(a1 + 32);
  if (result[3] == *(_QWORD *)(a1 + 40))
  {
    result = objc_msgSend(objc_msgSend(result, "interactiveCanvasController"), "currentlyWaitingOnThreadedLayoutAndRender");
    if ((result & 1) == 0)
      return objc_msgSend(*(id *)(a1 + 32), "p_updateVisibleInfosOrRevealCanvas");
  }
  return result;
}

void sub_A18A8(id a1)
{
  qword_5431C0 = (uint64_t)dispatch_queue_create("com.apple.thumbqueue", 0);
}

void sub_A1910(id a1)
{
  qword_5431D0 = (uint64_t)objc_msgSend(+[UIImage th_imageNamed:](UIImage, "th_imageNamed:", CFSTR("thumbnail_placeholder.jpg")), "CGImage");
  CFRetain((CFTypeRef)qword_5431D0);
}

void sub_A26A4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_A26BC(uint64_t a1)
{
  void *v2;
  CGImageRef v3;
  _QWORD v5[6];

  v2 = *(void **)(a1 + 32);
  objc_sync_enter(v2);
  if (objc_msgSend(*(id *)(a1 + 32), "willSetImageFromQueue")
    && objc_msgSend(*(id *)(a1 + 32), "imageData"))
  {
    v3 = CGImageRetain((CGImageRef)+[TSDBitmapImageProvider CGImageForImageData:](TSDBitmapImageProvider, "CGImageForImageData:", objc_msgSend(*(id *)(a1 + 32), "imageData")));
    v5[0] = _NSConcreteStackBlock;
    v5[1] = 3221225472;
    v5[2] = sub_A27AC;
    v5[3] = &unk_427240;
    v5[4] = *(_QWORD *)(a1 + 32);
    v5[5] = v3;
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, v5);

    *(_QWORD *)(*(_QWORD *)(a1 + 32) + 112) = 0;
  }
  return objc_sync_exit(v2);
}

void sub_A2794(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_A27AC(uint64_t a1)
{
  void *v2;

  v2 = *(void **)(a1 + 32);
  objc_sync_enter(v2);
  if (objc_msgSend(*(id *)(a1 + 32), "willSetImageFromQueue")
    && objc_msgSend(*(id *)(a1 + 32), "superview"))
  {
    objc_msgSend(*(id *)(a1 + 32), "setImage:", *(_QWORD *)(a1 + 40));
  }
  CGImageRelease(*(CGImageRef *)(a1 + 40));
  return objc_sync_exit(v2);
}

void sub_A2800(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

id sub_A2984(uint64_t a1)
{
  return objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 136), "setAlpha:", *(double *)(a1 + 40));
}

id sub_A2BB8(uint64_t a1)
{
  return objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "highlightView"), "setAlpha:", 1.0);
}

id sub_A2D04(uint64_t a1)
{
  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 72), "setAlpha:", 0.0);
  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 80), "setAlpha:", 0.0);
  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 88), "setAlpha:", 0.0);
  return objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 120), "setAlpha:", 0.0);
}

id sub_A2E40(uint64_t a1)
{
  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 72), "setAlpha:", 1.0);
  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 80), "setAlpha:", 1.0);
  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 88), "setAlpha:", 1.0);
  return objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 120), "setAlpha:", 1.0);
}

id sub_A3E58(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "setAlpha:", 0.0);
}

id sub_A3E64(uint64_t a1)
{
  return objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 56), "setAlpha:", 1.0);
}

id sub_A3FF4(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 32), "setAlpha:", 1.0);
  return objc_msgSend(*(id *)(*(_QWORD *)(a1 + 40) + 56), "setAlpha:", 0.0);
}

void sub_A4028(uint64_t a1)
{
  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 56), "removeFromSuperview");

  *(_QWORD *)(*(_QWORD *)(a1 + 32) + 56) = 0;
  *(_BYTE *)(*(_QWORD *)(a1 + 32) + 65) = 0;
}

id sub_A4380(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "setAlpha:", 1.0);
}

id sub_A4D08(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "p_didLoadInfo:onComplete:", *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48));
}

id sub_A4DB0(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "p_loadInfoOnComplete:", *(_QWORD *)(a1 + 40));
}

void sub_A5470(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_A557C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_A6174(_Unwind_Exception *exc_buf, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, int a11, char a12)
{
  id v12;
  void *v13;
  id v14;
  NSString *v15;
  NSString *v16;

  if (a2 == 1)
  {
    v12 = objc_begin_catch(exc_buf);
    if (v12)
    {
      v13 = v12;
      v14 = +[TSUAssertionHandler currentHandler](TSUAssertionHandler, "currentHandler");
      v15 = +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "-[THWPHighlightController updateCachedAnnotations]");
      v16 = +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Alder/bliss/Classes/THWPHighlightController.mm");
      objc_msgSend(v13, "description");
      objc_msgSend(v14, "handleFailureInFunction:file:lineNumber:description:", v15, v16, 422, CFSTR("Exeption thrown %@"));
    }
    objc_end_catch();
    if ((a12 & 1) == 0)
      JUMPOUT(0xA6138);
    JUMPOUT(0xA6108);
  }
  _Unwind_Resume(exc_buf);
}

void sub_A6248()
{
  objc_end_catch();
  JUMPOUT(0xA6188);
}

id sub_A9608(uint64_t a1)
{
  return -[UIPasteboard setValue:forPasteboardType:](+[UIPasteboard generalPasteboard](UIPasteboard, "generalPasteboard"), "setValue:forPasteboardType:", objc_msgSend(*(id *)(a1 + 32), "annotationSelectedText"), objc_msgSend(UTTypeUTF8PlainText, "identifier"));
}

id sub_A965C(id *a1)
{
  id v2;
  id v3;
  id v4;
  id v5;
  UIAlertController *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v10[4];
  int8x16_t v11;

  if (!objc_msgSend(objc_msgSend(a1[4], "annotationNote"), "length"))
    return objc_msgSend(a1[5], "destroyAnnotation:undoContext:", a1[4], 0);
  v2 = objc_msgSend((id)THBundle(), "localizedStringForKey:value:table:", CFSTR("Delete Highlight"), &stru_43D7D8, 0);
  v3 = objc_msgSend((id)THBundle(), "localizedStringForKey:value:table:", CFSTR("The associated note will also be deleted."), &stru_43D7D8, 0);
  v4 = objc_msgSend((id)THBundle(), "localizedStringForKey:value:table:", CFSTR("Cancel"), &stru_43D7D8, 0);
  v5 = objc_msgSend((id)THBundle(), "localizedStringForKey:value:table:", CFSTR("Delete"), &stru_43D7D8, 0);
  v6 = +[UIAlertController alertControllerWithTitle:message:preferredStyle:](UIAlertController, "alertControllerWithTitle:message:preferredStyle:", v2, v3, 1);
  -[UIAlertController addAction:](v6, "addAction:", +[UIAlertAction actionWithTitle:style:handler:](UIAlertAction, "actionWithTitle:style:handler:", v4, 1, 0));
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472;
  v10[2] = sub_A980C;
  v10[3] = &unk_428D98;
  v11 = vextq_s8(*((int8x16_t *)a1 + 2), *((int8x16_t *)a1 + 2), 8uLL);
  -[UIAlertController addAction:](v6, "addAction:", +[UIAlertAction actionWithTitle:style:handler:](UIAlertAction, "actionWithTitle:style:handler:", v5, 2, v10));
  v8 = objc_opt_class(THDocumentViewController, v7);
  return objc_msgSend((id)TSUDynamicCast(v8, objc_msgSend(objc_msgSend(objc_msgSend(a1[6], "parentRep"), "interactiveCanvasController"), "delegate")), "presentViewController:animated:completion:", v6, 1, 0);
}

id sub_A980C(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "destroyAnnotation:undoContext:", *(_QWORD *)(a1 + 40), 0);
}

id sub_A981C(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "showNoteEditorForAnnotation:", *(_QWORD *)(a1 + 40));
}

id sub_A9828(uint64_t a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;

  v2 = objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "parentRep"), "interactiveCanvasController");
  v4 = objc_opt_class(THWPEditingController, v3);
  v5 = (void *)TSUDynamicCast(v4, objc_msgSend(v2, "beginEditingRep:", objc_msgSend(*(id *)(a1 + 32), "parentRep")));
  return objc_msgSend(v5, "showDictionaryForAnnotation:", *(_QWORD *)(a1 + 40));
}

id sub_A9890(uint64_t a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;

  v2 = objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "parentRep"), "interactiveCanvasController");
  v4 = objc_opt_class(THWPEditingController, v3);
  v5 = (void *)TSUDynamicCast(v4, objc_msgSend(v2, "beginEditingRep:", objc_msgSend(*(id *)(a1 + 32), "parentRep")));
  return objc_msgSend(v5, "showTranslationForAnnotation:", *(_QWORD *)(a1 + 40));
}

id sub_A98F8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = objc_opt_class(THDocumentViewController, a2);
  return objc_msgSend((id)TSUDynamicCast(v3, objc_msgSend(objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "parentRep"), "interactiveCanvasController"), "delegate")), "presentSearchResultsForString:", objc_msgSend(*(id *)(a1 + 40), "annotationSelectedText"));
}

id sub_A9954(uint64_t a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;

  v2 = objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "parentRep"), "interactiveCanvasController");
  v4 = objc_opt_class(THWPEditingController, v3);
  v5 = (void *)TSUDynamicCast(v4, objc_msgSend(v2, "beginEditingRep:", objc_msgSend(*(id *)(a1 + 32), "parentRep")));
  return objc_msgSend(v5, "shareAnnotation:", *(_QWORD *)(a1 + 40));
}

void sub_AAD3C(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 2u);
}

id sub_AB888(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 40), "setPreferredDisplayMode:", 2 * (objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "termsViewController"), "presentedViewController") != 0));
}

id sub_ABDBC(uint64_t a1)
{
  objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "bookViewController"), "recordOutgoingMajorNavigationJump");
  objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "bookViewController"), "followLink:animated:", *(_QWORD *)(a1 + 40), *(unsigned __int8 *)(a1 + 48));
  objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "bookViewController"), "recordCurrentLocationInHistory");
  return objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "bookViewController"), "updateNavigationAffordances");
}

double sub_AC09C(uint64_t a1)
{
  id v2;
  double v3;
  CGRect v5;

  v2 = objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "definitionsViewController"), "view");
  if (v2
    && (objc_msgSend(v2, "frame"),
        v3 = CGRectGetWidth(v5) + dbl_314300[*(_BYTE *)(a1 + 40) == 0] * -2.0 + -824.0,
        v3 > 0.0))
  {
    return floor(v3 * 0.5);
  }
  else
  {
    return 0.0;
  }
}

void sub_AD55C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_AD574(uint64_t a1, uint64_t a2)
{
  _Block_object_assign((void *)(a1 + 40), *(const void **)(a2 + 40), 131);
}

void sub_AD584(uint64_t a1)
{
  _Block_object_dispose(*(const void **)(a1 + 40), 131);
}

id sub_AD590(_QWORD *a1)
{
  return objc_msgSend(*(id *)(*(_QWORD *)(a1[5] + 8) + 40), "selectEntry:scrollPosition:animated:", a1[4], a1[6], 0);
}

id sub_ADAE0(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "setForegroundColor:", objc_msgSend(objc_msgSend(objc_msgSend(*(id *)(a1 + 40), "themePage"), "primaryTextColor"), "CGColor"));
}

id sub_AE90C(uint64_t a1)
{
  return objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 32), "addObject:", *(_QWORD *)(a1 + 40));
}

id sub_AEC30(uint64_t a1, uint64_t a2)
{
  objc_msgSend(*(id *)(a1 + 32), "p_entryDidLoad:", a2);
  return objc_msgSend(*(id *)(a1 + 40), "scrollToLocation:animated:", *(unsigned int *)(a1 + 48), 0);
}

void sub_AF160(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_list va;

  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_AF180(uint64_t a1, uint64_t a2)
{
  _Block_object_assign((void *)(a1 + 40), *(const void **)(a2 + 40), 131);
}

void sub_AF190(uint64_t a1)
{
  _Block_object_dispose(*(const void **)(a1 + 40), 131);
}

id sub_AF19C(uint64_t a1)
{
  return objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40), "displayIndex:withEntry:animated:", *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(unsigned __int8 *)(a1 + 56));
}

id sub_AF690(void *a1, void *a2)
{
  return objc_msgSend(objc_msgSend(a1, "term"), "localizedCaseInsensitiveCompare:", objc_msgSend(a2, "term"));
}

NSString *sub_AFDBC(void *a1)
{
  id v1;
  __int16 v3;

  v1 = objc_msgSend(objc_msgSend(a1, "normalizedTerm"), "characterAtIndex:", 0);
  v3 = (__int16)v1;
  if (!-[NSCharacterSet characterIsMember:](+[NSCharacterSet letterCharacterSet](NSCharacterSet, "letterCharacterSet"), "characterIsMember:", v1))v3 = 35;
  return -[NSString uppercaseString](+[NSString stringWithCharacters:length:](NSString, "stringWithCharacters:length:", &v3, 1), "uppercaseString");
}

id sub_B053C(uint64_t a1, void *a2)
{
  id v4;

  v4 = objc_msgSend(a2, "paragraphStyleAtCharIndex:effectiveRange:", 0, 0);
  return objc_msgSend(a2, "setParagraphStyle:forCharRange:undoTransaction:", objc_msgSend(objc_msgSend(v4, "stylesheet"), "variationOfStyle:propertyMap:", v4, *(_QWORD *)(a1 + 32)), 0, objc_msgSend(a2, "length"), 0);
}

id sub_B0BD0(uint64_t a1)
{
  id v2;
  void *v3;

  v2 = objc_msgSend(*(id *)(a1 + 32), "p_glossaryEntryForTerm:", objc_msgSend(*(id *)(a1 + 32), "term"));
  v3 = *(void **)(a1 + 40);
  if (v2)
    objc_msgSend(v3, "showGlossaryEntry:");
  else
    objc_msgSend(v3, "showGlossary:", *(_QWORD *)(a1 + 32));
  return objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "glossaryPresenting"), "glossaryPopoverWasDismissed");
}

void sub_B12EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  _QWORD v23[5];
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  void (*v27)(uint64_t, uint64_t);
  void (*v28)(uint64_t);
  _QWORD *v29;

  v5 = objc_msgSend(*(id *)(a1 + 32), "icc");
  objc_msgSend(v5, "setInfosToDisplay:", +[NSArray arrayWithObject:](NSArray, "arrayWithObject:", a3));
  objc_msgSend(v5, "recreateAllLayoutsAndReps");
  v7 = objc_opt_class(THGlossaryEntryLayout, v6);
  v8 = (void *)TSUDynamicCast(v7, objc_msgSend(v5, "layoutForInfo:", a3));
  objc_msgSend(*(id *)(a1 + 32), "setGlossaryEntryLayout:", v8);
  objc_msgSend(v8, "setLayoutStyleProvider:", *(_QWORD *)(a1 + 32));
  objc_msgSend(v5, "layoutIfNeeded");
  v24 = 0;
  v25 = &v24;
  v26 = 0x3052000000;
  v27 = sub_B1558;
  v28 = sub_B1568;
  v23[0] = _NSConcreteStackBlock;
  v23[1] = 3221225472;
  v23[2] = sub_B1574;
  v23[3] = &unk_428F28;
  v23[4] = &v24;
  v29 = v23;
  v9 = objc_msgSend(*(id *)(a1 + 32), "definition");
  objc_msgSend(*(id *)(a1 + 32), "p_insetScrollerContentEdges");
  (*(void (**)(void))(v25[5] + 16))();
  v11 = v10;
  objc_msgSend(v8, "frame");
  v12 = ceil(v11);
  objc_msgSend(objc_msgSend(objc_msgSend(v5, "canvasView"), "canvasLayer"), "setUnscaledSize:", v12, v13);
  objc_msgSend(v8, "frame");
  v15 = v14;
  v17 = v16;
  objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "container"), "setFrame:", v18, v19, v14, v16);
  if (v15 >= v12)
    v12 = v15;
  objc_msgSend(v9, "setContentSize:", v12, v17);
  if (objc_msgSend(*(id *)(a1 + 32), "_isInPopoverPresentation"))
  {
    objc_msgSend(v8, "frame");
    v21 = v17 + 22.0;
    v22 = 366.0;
    if (v21 >= 366.0)
    {
      v12 = v20;
    }
    else
    {
      objc_msgSend(v9, "setBounces:", 0);
      v22 = fmax(v21, 200.0);
    }
    objc_msgSend(*(id *)(a1 + 32), "setPreferredContentSize:", v12, v22);
    objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "navigationController"), "setPreferredContentSize:", v12, v22);
  }
  _Block_object_dispose(&v24, 8);
}

void sub_B152C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_B1558(uint64_t a1, uint64_t a2)
{
  _Block_object_assign((void *)(a1 + 40), *(const void **)(a2 + 40), 135);
}

void sub_B1568(uint64_t a1)
{
  _Block_object_dispose(*(const void **)(a1 + 40), 135);
}

double sub_B1574(uint64_t a1, void *a2)
{
  double v4;
  double x;
  double v6;
  CGFloat y;
  double v8;
  CGFloat width;
  double v10;
  CGFloat height;
  id v12;
  char *v13;
  char *v14;
  uint64_t v15;
  char *v16;
  CGFloat v17;
  CGFloat v18;
  CGFloat v19;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  _BYTE v25[128];
  CGRect v26;
  CGRect v27;
  CGRect v28;

  objc_msgSend(a2, "frameInRoot");
  x = v4;
  y = v6;
  width = v8;
  height = v10;
  v21 = 0u;
  v22 = 0u;
  v23 = 0u;
  v24 = 0u;
  v12 = objc_msgSend(a2, "children", 0);
  v13 = (char *)objc_msgSend(v12, "countByEnumeratingWithState:objects:count:", &v21, v25, 16);
  if (v13)
  {
    v14 = v13;
    v15 = *(_QWORD *)v22;
    do
    {
      v16 = 0;
      do
      {
        if (*(_QWORD *)v22 != v15)
          objc_enumerationMutation(v12);
        v28.origin.x = (*(double (**)(void))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40) + 16))();
        v28.origin.y = v17;
        v28.size.width = v18;
        v28.size.height = v19;
        v26.origin.x = x;
        v26.origin.y = y;
        v26.size.width = width;
        v26.size.height = height;
        v27 = CGRectUnion(v26, v28);
        x = v27.origin.x;
        y = v27.origin.y;
        width = v27.size.width;
        height = v27.size.height;
        ++v16;
      }
      while (v14 != v16);
      v14 = (char *)objc_msgSend(v12, "countByEnumeratingWithState:objects:count:", &v21, v25, 16);
    }
    while (v14);
  }
  return x;
}

BOOL sub_B2BE8(id a1, TSDRep *a2)
{
  return -[TSDRep conformsToProtocol:](a2, "conformsToProtocol:", &OBJC_PROTOCOL___THMarginNotesOwner);
}

BOOL sub_B48D4(id a1, CAFilter *a2)
{
  return objc_msgSend(-[CAFilter name](a2, "name"), "isEqualToString:", CFSTR("kTHAXUndoInvertColorsFilter"));
}

id sub_B7D80(uint64_t a1)
{
  return objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 24), "layoutIfNeeded");
}

id sub_B7D94(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "p_didLayoutOnComplete:", *(_QWORD *)(a1 + 40));
}

id sub_B801C(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "p_layoutOnComplete:", *(_QWORD *)(a1 + 40));
}

id sub_B8180(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return objc_msgSend(*(id *)(a1 + 32), "p_setupCanvasForInfo:withLayoutStyleProvider:onComplete:", a3, *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48));
}

void sub_B878C(id a1, UIMutableTraits *a2)
{
  -[UIMutableTraits setHorizontalSizeClass:](a2, "setHorizontalSizeClass:", 1);
}

void sub_B8ABC(uint64_t a1)
{
  void *v2;
  id v3;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "activityIndicatorView"));
  objc_msgSend(v2, "setAlpha:", 1.0);

  v3 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "openCloseButton"));
  objc_msgSend(v3, "setAlpha:", 0.0);

}

void sub_B8B18(uint64_t a1, int a2)
{
  uint64_t v2;
  id v3;

  v2 = a2 ^ 1u;
  v3 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "activityIndicatorView"));
  objc_msgSend(v3, "setHidden:", v2);

}

void sub_B8BE0(uint64_t a1)
{
  void *v2;
  id v3;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "activityIndicatorView"));
  objc_msgSend(v2, "setAlpha:", 0.0);

  v3 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "openCloseButton"));
  objc_msgSend(v3, "setAlpha:", 1.0);

}

void sub_B8C3C(uint64_t a1, uint64_t a2)
{
  void *v4;
  id v5;

  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "activityIndicatorView"));
  objc_msgSend(v4, "stopAnimating");

  v5 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "activityIndicatorView"));
  objc_msgSend(v5, "setHidden:", a2);

}

void sub_BAC10(uint64_t a1, void *a2)
{
  id v3;
  uint64_t v4;
  CGPath *Mutable;
  id v6;
  id v7;
  void *v8;
  void *v9;
  void *v10;
  id v11;
  id v12;
  CGRect v13;

  v3 = a2;
  +[CATransaction begin](CATransaction, "begin");
  +[CATransaction setDisableActions:](CATransaction, "setDisableActions:", 1);
  v12 = (id)objc_opt_new(CAShapeLayer, v4);
  Mutable = CGPathCreateMutable();
  v13 = CGRectInset(*(CGRect *)(a1 + 40), 1.0, 1.0);
  CGPathAddEllipseInRect(Mutable, 0, v13);
  objc_msgSend(v12, "setPath:", Mutable);
  v6 = objc_retainAutorelease((id)objc_claimAutoreleasedReturnValue(+[UIColor colorWithRed:green:blue:alpha:](UIColor, "colorWithRed:green:blue:alpha:", 0.556862745, 0.556862745, 0.576470588, 0.5)));
  objc_msgSend(v12, "setStrokeColor:", objc_msgSend(v6, "CGColor"));

  objc_msgSend(v12, "setLineWidth:", 1.0);
  v7 = objc_retainAutorelease((id)objc_claimAutoreleasedReturnValue(+[UIColor clearColor](UIColor, "clearColor")));
  objc_msgSend(v12, "setFillColor:", objc_msgSend(v7, "CGColor"));

  CGPathRelease(Mutable);
  v8 = *(void **)(a1 + 32);
  v9 = (void *)objc_claimAutoreleasedReturnValue(+[UIColor colorWithRed:green:blue:alpha:](UIColor, "colorWithRed:green:blue:alpha:", 0.556862745, 0.556862745, 0.576470588, 1.0));
  v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "imageMaskWithColor:", v9));

  objc_msgSend(v10, "drawInRect:", *(double *)(a1 + 72), *(double *)(a1 + 80), *(double *)(a1 + 88), *(double *)(a1 + 96));
  +[CATransaction commit](CATransaction, "commit");
  v11 = objc_msgSend(v3, "CGContext");

  objc_msgSend(v12, "renderInContext:", v11);
}

void sub_BF104(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_BF160(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

id sub_BF268(uint64_t a1)
{
  id v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  _QWORD v9[7];
  char v10;
  _QWORD v11[7];

  objc_msgSend(*(id *)(a1 + 32), "clearSearchResults");
  if ((objc_msgSend(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 8), "searchIndex"), "loaded") & 1) != 0)
  {
    v2 = objc_msgSend(*(id *)(a1 + 40), "stringByTrimmingCharactersInSet:", +[NSCharacterSet whitespaceAndNewlineCharacterSet](NSCharacterSet, "whitespaceAndNewlineCharacterSet"));
    *(_QWORD *)(*(_QWORD *)(a1 + 32) + 24) = v2;
    v3 = *(_QWORD **)(a1 + 48);
    v4 = *(_QWORD *)(a1 + 32);
    if (!*(_BYTE *)(a1 + 56))
    {
      v11[0] = _NSConcreteStackBlock;
      v11[1] = 3221225472;
      v11[2] = sub_BF5BC;
      v11[3] = &unk_427350;
      v11[4] = v4;
      v11[5] = v2;
      v11[6] = v3;
      v3 = v11;
    }
    if (*(_QWORD *)(v4 + 96))
    {
      objc_msgSend(+[TSUAssertionHandler currentHandler](TSUAssertionHandler, "currentHandler"), "handleFailureInFunction:file:lineNumber:description:", +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "-[THSearchController p_kickOffQuery:giveSuggestions:completionBlock:]_block_invoke"), +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Alder/bliss/Classes/THSearchController.m"), 208, CFSTR("mOccurrenceMap should be nil"));
      v4 = *(_QWORD *)(a1 + 32);
    }
    if (*(_QWORD *)(v4 + 104))
    {
      objc_msgSend(+[TSUAssertionHandler currentHandler](TSUAssertionHandler, "currentHandler"), "handleFailureInFunction:file:lineNumber:description:", +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "-[THSearchController p_kickOffQuery:giveSuggestions:completionBlock:]_block_invoke"), +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Alder/bliss/Classes/THSearchController.m"), 209, CFSTR("mAnnotationOccurrenceMap should be nil"));
      v4 = *(_QWORD *)(a1 + 32);
    }
    *(_QWORD *)(*(_QWORD *)(a1 + 32) + 96) = objc_msgSend(objc_msgSend(*(id *)(v4 + 8), "searchIndex"), "occurrenceMapForQuery:", v2);
    *(_QWORD *)(*(_QWORD *)(a1 + 32) + 104) = objc_msgSend(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 8), "annotationSearchIndex"), "occurrenceMapForQuery:", v2);
    *(_QWORD *)(*(_QWORD *)(a1 + 32) + 160) = -[THSearchRefTextLoadOperation initWithDelegate:documentRoot:searchArray:]([THSearchRefTextLoadOperation alloc], "initWithDelegate:documentRoot:searchArray:", *(_QWORD *)(a1 + 32), *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8), objc_msgSend(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 8), "searchIndex"), "filterOutGlossaryKeysFromOccurrenceMap:", *(_QWORD *)(*(_QWORD *)(a1 + 32) + 96)));
    v5 = *(_QWORD *)(a1 + 32);
    v6 = *(void **)(v5 + 160);
    v9[0] = _NSConcreteStackBlock;
    v9[1] = 3221225472;
    v9[2] = sub_BF64C;
    v9[3] = &unk_429090;
    v10 = *(_BYTE *)(a1 + 56);
    v7 = *(_QWORD *)(a1 + 48);
    v9[4] = v5;
    v9[5] = v7;
    v9[6] = v3;
    objc_msgSend(v6, "setCompletionBlock:", v9);
    if (*(_QWORD *)(*(_QWORD *)(a1 + 32) + 152))
      objc_msgSend(+[TSUAssertionHandler currentHandler](TSUAssertionHandler, "currentHandler"), "handleFailureInFunction:file:lineNumber:description:", +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "-[THSearchController p_kickOffQuery:giveSuggestions:completionBlock:]_block_invoke"), +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Alder/bliss/Classes/THSearchController.m"), 228, CFSTR("mReferenceIndexLoadQueue should be nil"));
    *(_QWORD *)(*(_QWORD *)(a1 + 32) + 152) = objc_alloc_init((Class)NSOperationQueue);
    objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 152), "setName:", CFSTR("Search Reference Index Load"));
    return objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 152), "addOperation:", *(_QWORD *)(*(_QWORD *)(a1 + 32) + 160));
  }
  else
  {
    objc_msgSend(*(id *)(a1 + 32), "loadIndex");
    return objc_msgSend(+[TSUAssertionHandler currentHandler](TSUAssertionHandler, "currentHandler"), "handleFailureInFunction:file:lineNumber:description:", +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "-[THSearchController p_kickOffQuery:giveSuggestions:completionBlock:]_block_invoke"), +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Alder/bliss/Classes/THSearchController.m"), 172, CFSTR("Tried to search while index was not loaded."));
  }
}

uint64_t sub_BF5BC(uint64_t a1)
{
  id v2;

  v2 = objc_msgSend(*(id *)(a1 + 32), "p_recentsEntryForTrimmedQuery:resultCount:", *(_QWORD *)(a1 + 40), objc_msgSend(*(id *)(a1 + 32), "searchResultCount"));
  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 16), "removeObject:", v2);
  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 16), "insertObject:atIndex:", v2, 0);
  if ((unint64_t)objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 16), "count") >= 0xB)
    objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 16), "removeLastObject");
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 48) + 16))();
}

id sub_BF64C(uint64_t a1)
{
  char **v1;
  uint64_t v2;

  v1 = &selRef_p_processSearchResultsWithCompletionBlock_;
  v2 = 40;
  if (*(_BYTE *)(a1 + 56))
    v1 = &selRef_p_processSuggestionsWithCompletionBlock_;
  else
    v2 = 48;
  return objc_msgSend(*(id *)(a1 + 32), "performSelectorOnMainThread:withObject:waitUntilDone:", *v1, *(_QWORD *)(a1 + v2), 0);
}

void sub_BF6BC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_BF70C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_BFB28(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_BFB90(uint64_t a1, void *a2, void *a3)
{
  uint64_t result;
  uint64_t v7;
  id v8;
  id v9;
  BOOL v10;
  signed int v11;
  signed int v12;
  uint64_t v13;

  result = (uint64_t)objc_msgSend(objc_msgSend(a2, "term"), "localizedCaseInsensitiveCompare:", objc_msgSend(a3, "term"));
  if (result)
  {
    v7 = result;
    if ((unint64_t)objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 24), "length") < 3
      || ((v8 = objc_msgSend(objc_msgSend(objc_msgSend(a2, "term"), "commonPrefixWithString:options:", *(_QWORD *)(*(_QWORD *)(a1 + 32) + 24), 3), "length"), v9 = objc_msgSend(objc_msgSend(objc_msgSend(a3, "term"), "commonPrefixWithString:options:", *(_QWORD *)(*(_QWORD *)(a1 + 32) + 24), 3), "length"), v10 = v8 == v9, v8 > v9)? (result = -1): (result = 1), v10))
    {
      v11 = objc_msgSend(a2, "rank");
      v12 = objc_msgSend(a3, "rank");
      v13 = -1;
      if (v11 >= v12)
        v13 = 1;
      if (v11 == v12)
        return v7;
      else
        return v13;
    }
  }
  return result;
}

NSString *__cdecl sub_BFC70(id a1, id a2)
{
  return (NSString *)objc_msgSend(a2, "term");
}

NSNumber *__cdecl sub_BFC78(id a1, id a2)
{
  return +[NSNumber numberWithUnsignedInteger:](NSNumber, "numberWithUnsignedInteger:", objc_msgSend(a2, "occurenceCount"));
}

void sub_C038C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL sub_C0418(id a1, id a2, BOOL *a3)
{
  uint64_t v4;
  double v5;
  void *v6;
  void *v7;

  v4 = objc_opt_class(THModelSearchResult, a2);
  *(_QWORD *)&v5 = TSUDynamicCast(v4, a2).n128_u64[0];
  v7 = v6;
  return !objc_msgSend(v6, "displayPageNumber", v5) && objc_msgSend(objc_msgSend(v7, "cfi"), "length") != 0;
}

uint64_t sub_C0470(uint64_t a1, void *a2, void *a3)
{
  signed int v6;
  signed int v7;
  signed int v8;
  id v9;
  id v10;
  BOOL v11;
  uint64_t result;
  BOOL v13;
  id v14;
  id v15;
  uint64_t v16;

  v6 = objc_msgSend(a2, "rank");
  v7 = objc_msgSend(a3, "rank");
  v8 = v7;
  if (v6 != v7 && (v6 == 1 || v7 == 1))
  {
    v13 = v6 < v7;
    goto LABEL_17;
  }
  if ((unint64_t)objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 24), "length") >= 3)
  {
    v9 = objc_msgSend(objc_msgSend(objc_msgSend(a2, "term"), "commonPrefixWithString:options:", *(_QWORD *)(*(_QWORD *)(a1 + 32) + 24), 3), "length");
    v10 = objc_msgSend(objc_msgSend(objc_msgSend(a3, "term"), "commonPrefixWithString:options:", *(_QWORD *)(*(_QWORD *)(a1 + 32) + 24), 3), "length");
    v11 = v9 == v10;
    result = v9 > v10 ? -1 : 1;
    if (!v11)
      return result;
  }
  v13 = v6 < v8;
  if (v6 != v8)
  {
LABEL_17:
    if (v13)
      return -1;
    else
      return 1;
  }
  v14 = objc_msgSend(a2, "pageNumber");
  v15 = objc_msgSend(a3, "pageNumber");
  v16 = -1;
  if (v14 >= v15)
    v16 = 1;
  if (v14 == v15)
    return 0;
  else
    return v16;
}

int64_t sub_C0570(id a1, id a2, id a3)
{
  unsigned int v5;
  unsigned int v6;
  id v7;
  id v8;

  v5 = objc_msgSend(a2, "rank");
  v6 = objc_msgSend(a3, "rank");
  v7 = objc_msgSend(a2, "pageNumber");
  v8 = objc_msgSend(a3, "pageNumber");
  if (v5 == 1 || v6 == 1)
  {
    if (v5 == v6)
    {
      return (int64_t)objc_msgSend(objc_msgSend(a2, "term"), "localizedCaseInsensitiveCompare:", objc_msgSend(a3, "term"));
    }
    else if (v5 == 1)
    {
      return -1;
    }
    else
    {
      return 1;
    }
  }
  else if (v7 == v8)
  {
    return (int64_t)objc_msgSend(objc_msgSend(a2, "cfi"), "caseInsensitiveCompare:", objc_msgSend(a3, "cfi"));
  }
  else if (v7 < v8)
  {
    return -1;
  }
  else
  {
    return 1;
  }
}

void sub_C084C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_C0AD4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_C0C74(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

id sub_C0C88(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "p_indexloadFinished:", *(_QWORD *)(*(_QWORD *)(a1 + 32) + 136));
}

id sub_C0C94(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "p_indexloadFinished:", *(_QWORD *)(*(_QWORD *)(a1 + 32) + 144));
}

void sub_C0CD4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_C0D48(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_C2134(uint64_t a1)
{
  double v2;
  void *v3;
  double v4;
  id v5;

  objc_msgSend(*(id *)(a1 + 32), "p_updateButtonState");
  v2 = *(double *)(a1 + 40);
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "contentContainerView"));
  objc_msgSend(v3, "setAlpha:", v2);

  v4 = *(double *)(a1 + 40);
  v5 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "footerView"));
  objc_msgSend(v5, "setAlpha:", v4);

}

uint64_t sub_C21A8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

void sub_C24F4(uint64_t a1)
{
  THSearchTableViewDataSource *v2;
  void *v3;
  THSearchTableViewDataSource *v4;
  void *v5;
  id v6;

  v2 = [THSearchTableViewDataSource alloc];
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "searchController"));
  v4 = -[THSearchTableViewDataSource initWithSearchController:searchViewMode:](v2, "initWithSearchController:searchViewMode:", v3, 0);
  objc_msgSend(*(id *)(a1 + 32), "setResultsDataSource:", v4);

  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 48), "setText:", 0);
  objc_msgSend(*(id *)(a1 + 32), "p_showBottomView:animated:", (uint64_t)objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 120), "recentSearchCount") > 0, 1);
  v6 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "resultsViewController"));
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "tableView"));
  objc_msgSend(v5, "reloadData");

}

id sub_C2B20(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  id result;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "pendingSearchText"));

  v3 = *(void **)(a1 + 32);
  if (v2)
  {
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "pendingSearchText"));
    objc_msgSend(v3, "searchForString:", v4);

    return objc_msgSend(*(id *)(a1 + 32), "setPendingSearchText:", 0);
  }
  else
  {
    result = objc_msgSend(*(id *)(a1 + 32), "settingSearchForString");
    if ((result & 1) == 0)
      return objc_msgSend(*(id *)(a1 + 32), "p_showRecents");
  }
  return result;
}

id sub_C3570(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "p_configureAnimated:", 1);
}

void sub_C3638(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  void *v7;
  id v8;

  v3 = objc_opt_class(UITableViewController, a2);
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "topViewController"));
  TSUDynamicCast(v3, v4);
  v8 = (id)objc_claimAutoreleasedReturnValue(v5);

  if (v8)
  {
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "tableView"));

    if (v6)
    {
      v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "tableView"));
      objc_msgSend(v7, "reloadData");

      objc_msgSend(*(id *)(a1 + 32), "p_showBottomView:animated:", *(unsigned __int8 *)(*(_QWORD *)(a1 + 32) + 98), 0);
    }
  }

}

id sub_C4764(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 32), "setSettingSearchForString:", 0);
  return objc_msgSend(*(id *)(a1 + 32), "searchBarSearchButtonClicked:", *(_QWORD *)(*(_QWORD *)(a1 + 32) + 48));
}

id sub_C4824(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;

  objc_msgSend(*(id *)(a1 + 32), "_analyticsSubmitInBookSearchEventWithSearchText:", *(_QWORD *)(a1 + 40));
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 120), "suggestionResults"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "suggestionsDataSource"));
  objc_msgSend(v3, "setSuggestions:", v2);

  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "suggestionsDataSource"));
  objc_msgSend(*(id *)(a1 + 32), "setResultsDataSource:", v4);

  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "resultsViewController"));
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "tableView"));
  objc_msgSend(v6, "reloadData");

  return objc_msgSend(*(id *)(a1 + 32), "p_showBottomView:animated:", 1, 1);
}

void sub_C4C90(uint64_t a1)
{
  void *v2;
  id v3;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "progressView"));
  objc_msgSend(v2, "setAlpha:", 0.8);

  v3 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "spinner"));
  objc_msgSend(v3, "setAlpha:", 1.0);

}

id sub_C4DB0(uint64_t a1)
{
  id v2;

  v2 = objc_msgSend(*(id *)(a1 + 32), "unsignedIntegerValue");
  objc_msgSend(*(id *)(a1 + 40), "recordOutgoingMajorNavigationJump");
  return objc_msgSend(*(id *)(a1 + 40), "navigateToAbsolutePageIndex:", v2);
}

void sub_C4EAC(uint64_t a1)
{
  id v2;

  objc_msgSend(*(id *)(a1 + 32), "recordOutgoingMajorNavigationJump");
  v2 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 40) + 120), "anchorForSelectedSearchResult:", *(_QWORD *)(a1 + 48)));
  objc_msgSend(*(id *)(a1 + 32), "navigateToSearchResult:", v2);
  objc_msgSend(*(id *)(a1 + 32), "recordCurrentLocationInHistory");
  objc_msgSend(*(id *)(a1 + 32), "updateNavigationAffordances");

}

void sub_C4FD4(uint64_t a1)
{
  void *v2;
  id v3;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "progressView"));
  objc_msgSend(v2, "setAlpha:", 0.8);

  v3 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "spinner"));
  objc_msgSend(v3, "setAlpha:", 1.0);

}

void sub_C536C(uint64_t a1)
{
  void *v2;
  id v3;

  objc_msgSend(*(id *)(a1 + 32), "p_showBottomView:animated:", 1, 1);
  v3 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "resultsViewController"));
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "tableView"));
  objc_msgSend(v2, "reloadData");

}

id sub_C57D0(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  void *v6;

  v4 = (void *)objc_opt_new(_UIBackgroundViewConfiguration, a2);
  if (a2 == 2048)
    v5 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "secondaryBackgroundColor"));
  else
    v5 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "backgroundColor"));
  v6 = (void *)v5;
  objc_msgSend(v4, "setBackgroundColor:", v5);

  return v4;
}

double THRandomWithMagnitude(double a1)
{
  double v2;

  v2 = drand48();
  return (v2 + -0.5 + v2 + -0.5) * a1;
}

double THRandomWithMaximum(double a1)
{
  return drand48() * a1;
}

double TH3DPointApplyTransform(double *a1, double a2, double a3, double a4)
{
  return a1[3] + a3 * a1[1] + a2 * *a1 + a4 * a1[2];
}

double TH3DPointSubtract(double a1, double a2, double a3, double a4)
{
  return a4 - a1;
}

double THNormalVector(CALayer *a1)
{
  double MidX;
  double MidY;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  CGRect v21;
  CGRect v22;

  -[CALayer frame](a1, "frame");
  MidX = CGRectGetMidX(v21);
  -[CALayer frame](a1, "frame");
  MidY = CGRectGetMidY(v22);
  v4 = 0.0;
  v5 = 0.0;
  v6 = 0.0;
  v7 = 0.0;
  v8 = 0.0;
  v9 = 0.0;
  v10 = 0.0;
  v11 = 0.0;
  if (a1)
  {
    -[CALayer transform](a1, "transform", 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0);
    -[CALayer transform](a1, "transform");
    v7 = v20;
    v6 = v19;
    v5 = v18;
    v4 = v17;
    v11 = v13;
    v10 = v14;
    v9 = v15;
    v8 = v16;
  }
  return v8 + v9 + MidY * v10 + MidX * v11 - (v7 + MidY * v5 + MidX * v4 + v6 * 0.0);
}

double THDistanceFromRectCenterToEdge(CGRect a1, CGPoint a2)
{
  CGFloat height;
  CGFloat width;
  CGFloat y;
  CGFloat x;
  double v6;
  double v7;
  double v8;
  double v9;
  float v10;
  float v11;
  float v12;
  float v13;
  CGRect v15;
  CGRect v16;

  height = a1.size.height;
  width = a1.size.width;
  y = a1.origin.y;
  x = a1.origin.x;
  v6 = TSDNormalizePoint(a2.x, a2.y);
  v8 = v7;
  if (v6 == 0.0)
  {
    v11 = INFINITY;
  }
  else
  {
    v9 = v6;
    v15.origin.x = x;
    v15.origin.y = y;
    v15.size.width = width;
    v15.size.height = height;
    v10 = CGRectGetWidth(v15) * 0.5 / v9;
    v11 = fabsf(v10);
  }
  if (v8 == 0.0)
  {
    v13 = INFINITY;
  }
  else
  {
    v16.origin.x = x;
    v16.origin.y = y;
    v16.size.width = width;
    v16.size.height = height;
    v12 = CGRectGetHeight(v16) * 0.5 / v8;
    v13 = fabsf(v12);
  }
  return fminf(v11, v13);
}

double THBoundingCubeForTransformedRect@<D0>(CGRect a1@<0:D0, 8:D1, 16:D2, 24:D3>, CATransform3D *a2@<X0>, double *a3@<X8>)
{
  CGFloat height;
  CGFloat width;
  CGFloat y;
  CGFloat x;
  double MinX;
  double MaxX;
  double MinY;
  CGFloat MaxY;
  double m12;
  CGFloat m13;
  double m14;
  double m21;
  double m22;
  double m23;
  double m24;
  double m31;
  CGFloat m32;
  double m33;
  double m34;
  float v24;
  float v25;
  float v26;
  float v27;
  float v28;
  float v29;
  float v30;
  float v31;
  float v32;
  float v33;
  float v34;
  float v35;
  CGFloat v36;
  CGFloat v37;
  CGFloat v38;
  float v39;
  float v40;
  float v41;
  double result;
  CGRect v43;
  CGRect v44;
  CGRect v45;

  height = a1.size.height;
  width = a1.size.width;
  y = a1.origin.y;
  x = a1.origin.x;
  MinX = CGRectGetMinX(a1);
  v43.origin.x = x;
  v43.origin.y = y;
  v43.size.width = width;
  v43.size.height = height;
  MaxX = CGRectGetMaxX(v43);
  v44.origin.x = x;
  v44.origin.y = y;
  v44.size.width = width;
  v44.size.height = height;
  MinY = CGRectGetMinY(v44);
  v45.origin.x = x;
  v45.origin.y = y;
  v45.size.width = width;
  v45.size.height = height;
  MaxY = CGRectGetMaxY(v45);
  m12 = a2->m12;
  m13 = a2->m13;
  m14 = a2->m14;
  m21 = a2->m21;
  m22 = a2->m22;
  m23 = a2->m23;
  m24 = a2->m24;
  m31 = a2->m31;
  m32 = a2->m32;
  m33 = a2->m33;
  m34 = a2->m34;
  v24 = m14 + MinY * m12 + MinX * a2->m11 + m13 * 0.0;
  v25 = m24 + MinY * m22 + MinX * m21 + m23 * 0.0;
  v26 = m34 + MinY * m32 + MinX * m31 + m33 * 0.0;
  v27 = m14 + MinY * m12 + MaxX * a2->m11 + m13 * 0.0;
  v28 = fminf(fminf(v24, INFINITY), v27);
  v29 = m24 + MinY * m22 + MaxX * m21 + m23 * 0.0;
  v30 = fminf(fminf(v25, INFINITY), v29);
  v31 = m34 + MinY * m32 + MaxX * m31 + m33 * 0.0;
  v32 = fminf(fminf(v26, INFINITY), v31);
  v33 = fmaxf(fmaxf(v24, 0.0), v27);
  v34 = fmaxf(fmaxf(v25, 0.0), v29);
  v35 = fmaxf(fmaxf(v26, 0.0), v31);
  v36 = MaxY * m12;
  v37 = MaxY * m22;
  v38 = MaxY * m32;
  v39 = m14 + v36 + MinX * a2->m11 + m13 * 0.0;
  v40 = m24 + v37 + MinX * m21 + m23 * 0.0;
  *(float *)&m32 = m34 + v38 + MinX * m31 + m33 * 0.0;
  v41 = m14 + v36 + MaxX * a2->m11 + m13 * 0.0;
  *(float *)&m13 = m24 + v37 + MaxX * m21 + m23 * 0.0;
  *(float *)&v38 = m34 + v38 + MaxX * m31 + m33 * 0.0;
  *a3 = fminf(fminf(v28, v39), v41);
  a3[1] = fminf(fminf(v30, v40), *(float *)&m13);
  a3[2] = fminf(fminf(v32, *(float *)&m32), *(float *)&v38);
  a3[3] = fmaxf(fmaxf(v33, v39), v41);
  result = fmaxf(fmaxf(v35, *(float *)&m32), *(float *)&v38);
  a3[4] = fmaxf(fmaxf(v34, v40), *(float *)&m13);
  a3[5] = result;
  return result;
}

id sub_CC04C(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "setFlownOut:", *(unsigned __int8 *)(a1 + 40));
}

void sub_CE674(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_list va;

  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

_QWORD *sub_CE68C(_QWORD *result, void *a2)
{
  _QWORD *v2;
  void *v4;

  if (*(_BYTE *)(*(_QWORD *)(result[5] + 8) + 24))
  {
    v2 = result;
    if (*((_BYTE *)result + 48))
    {
      objc_msgSend(*(id *)(result[4] + 8), "setScalingMode:", 1);
      v4 = (void *)v2[4];
      objc_msgSend(a2, "transitionDuration");
      return objc_msgSend(v4, "p_layoutViewsWithDuration:");
    }
  }
  return result;
}

_QWORD *sub_CE6F8(_QWORD *result, void *a2)
{
  _QWORD *v3;
  void *v4;

  v3 = result;
  if (*(_BYTE *)(*(_QWORD *)(result[5] + 8) + 24) && *((_BYTE *)result + 48))
    result = objc_msgSend(*(id *)(result[4] + 8), "setScalingMode:", 0);
  if (!*((_BYTE *)v3 + 48))
  {
    v4 = (void *)v3[4];
    objc_msgSend(a2, "transitionDuration");
    return objc_msgSend(v4, "p_layoutViewsWithDuration:");
  }
  return result;
}

_QWORD *sub_CE890(_QWORD *result)
{
  uint64_t v1;

  v1 = result[4];
  if (!*(_BYTE *)(v1 + 120))
    return objc_msgSend(*(id *)(v1 + 16), "studyViewControllerIsDone:");
  return result;
}

id sub_CF118(uint64_t a1)
{
  return objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "backdrop"), "setAlpha:", 1.0);
}

id sub_CF134(uint64_t a1)
{
  objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "optionsButton"), "setAlpha:", 1.0);
  objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "doneButton"), "setAlpha:", 1.0);
  objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "titleLabel"), "setAlpha:", 1.0);
  return objc_msgSend(*(id *)(a1 + 32), "refreshStatusBarAppearance");
}

uint64_t sub_CF184(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 40);
  if (result)
    result = (*(uint64_t (**)(void))(result + 16))();
  *(_BYTE *)(*(_QWORD *)(a1 + 32) + 120) = 0;
  return result;
}

id sub_CF1C0(uint64_t a1)
{
  id v1;
  id result;
  id v3;
  uint64_t v4;
  void *v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _BYTE v10[128];

  v6 = 0u;
  v7 = 0u;
  v8 = 0u;
  v9 = 0u;
  v1 = objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 8), "noteCards", 0);
  result = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v6, v10, 16);
  if (result)
  {
    v3 = result;
    v4 = *(_QWORD *)v7;
    do
    {
      v5 = 0;
      do
      {
        if (*(_QWORD *)v7 != v4)
          objc_enumerationMutation(v1);
        objc_msgSend(*(id *)(*((_QWORD *)&v6 + 1) + 8 * (_QWORD)v5), "setFlownOut:animated:duration:", 0, 1, (double)(uint64_t)objc_msgSend(*(id *)(*((_QWORD *)&v6 + 1) + 8 * (_QWORD)v5), "cardIndex") * 0.0500000007+ 0.430000011);
        v5 = (char *)v5 + 1;
      }
      while (v3 != v5);
      result = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v6, v10, 16);
      v3 = result;
    }
    while (result);
  }
  return result;
}

id sub_CF4E4(uint64_t a1)
{
  objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "optionsButton"), "setAlpha:", 0.0);
  objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "doneButton"), "setAlpha:", 0.0);
  objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "titleLabel"), "setAlpha:", 0.0);
  return objc_msgSend(*(id *)(a1 + 32), "refreshStatusBarAppearance");
}

id sub_CF534(uint64_t a1)
{
  return objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "backdrop"), "setAlpha:", 0.0);
}

uint64_t sub_CF550(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 40);
  if (result)
    result = (*(uint64_t (**)(void))(result + 16))();
  *(_BYTE *)(*(_QWORD *)(a1 + 32) + 120) = 0;
  return result;
}

void sub_D4DF4(uint64_t a1, double a2, double a3, double a4, double a5, double a6)
{
  THHighlightLine *v12;

  v12 = objc_alloc_init(THHighlightLine);
  -[THHighlightLine setFullLineRect:](v12, "setFullLineRect:", a2, a3, a4, a5);
  -[THHighlightLine setCurrentLineRect:](v12, "setCurrentLineRect:", a2, a3, a4, a5);
  -[THHighlightLine setBaseline:](v12, "setBaseline:", a6);
  -[THHighlightLine setUnderlineOffset:](v12, "setUnderlineOffset:", 2.0);
  objc_msgSend(*(id *)(a1 + 32), "p_setupContentLayerForHighlightLine:", v12);
  if (-[THHighlightLine contentLayer](v12, "contentLayer"))
    objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 80), "addObject:", -[THHighlightLine contentLayer](v12, "contentLayer"));

}

void sub_D56C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

__n128 sub_D56DC(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = a2[3];
  a1[3] = result;
  return result;
}

CGFloat sub_D56EC(uint64_t a1, CTLineRef line, double a3, double a4)
{
  uint64_t v6;
  CGFloat result;
  CGFloat descent;

  descent = 0.0;
  *(double *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 48) = CTLineGetTypographicBounds(line, 0, &descent, 0)
                                                              + *(double *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8)
                                                                          + 48);
  v6 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8);
  result = descent + a4 + *(double *)(v6 + 56);
  *(CGFloat *)(v6 + 56) = result;
  return result;
}

void sub_D57FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

CGFloat sub_D5818(uint64_t a1, CTLineRef line, double a3, double a4)
{
  CGFloat result;
  CGFloat descent;

  descent = 0.0;
  CTLineGetTypographicBounds(line, 0, &descent, 0);
  result = descent + a4;
  *(CGFloat *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = descent + a4;
  return result;
}

void sub_D595C(uint64_t a1, const __CTLine *a2, CGFloat a3, CGFloat a4)
{
  CGContextSetTextPosition(*(CGContextRef *)(a1 + 32), a3, a4);
  CGContextSetShouldSmoothFonts(*(CGContextRef *)(a1 + 32), 0);
  CGContextSetShouldAntialias(*(CGContextRef *)(a1 + 32), 1);
  CTLineDraw(a2, *(CGContextRef *)(a1 + 32));
}

void sub_D6DCC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_D6F58(void *a1)
{
  objc_begin_catch(a1);
  objc_exception_rethrow();
}

void sub_D6F64(_Unwind_Exception *a1)
{
  objc_end_catch();
  _Unwind_Resume(a1);
}

void sub_D6FB4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_D7054(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

id sub_D7068(uint64_t a1)
{
  id v2;
  id result;
  id v4;
  uint64_t v5;
  void *v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  uint64_t v11;
  void *v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  _BYTE v21[128];
  _BYTE v22[128];

  *(_QWORD *)(*(_QWORD *)(a1 + 32) + 40) = objc_msgSend(*(id *)(a1 + 40), "copyFixingSize");
  objc_msgSend(*(id *)(a1 + 32), "stopPagination");
  v19 = 0u;
  v20 = 0u;
  v17 = 0u;
  v18 = 0u;
  v2 = objc_msgSend(objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "documentRoot"), "navigationModel"), "navigationUnits");
  result = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v17, v22, 16);
  if (result)
  {
    v4 = result;
    v5 = *(_QWORD *)v18;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v18 != v5)
          objc_enumerationMutation(v2);
        v7 = *(void **)(*((_QWORD *)&v17 + 1) + 8 * (_QWORD)v6);
        v13 = 0u;
        v14 = 0u;
        v15 = 0u;
        v16 = 0u;
        v8 = objc_msgSend(v7, "contentNodes", 0);
        v9 = objc_msgSend(v8, "countByEnumeratingWithState:objects:count:", &v13, v21, 16);
        if (v9)
        {
          v10 = v9;
          v11 = *(_QWORD *)v14;
          do
          {
            v12 = 0;
            do
            {
              if (*(_QWORD *)v14 != v11)
                objc_enumerationMutation(v8);
              objc_msgSend(*(id *)(*((_QWORD *)&v13 + 1) + 8 * (_QWORD)v12), "invalidatePresentationType:", objc_msgSend(*(id *)(a1 + 32), "presentationType"));
              v12 = (char *)v12 + 1;
            }
            while (v10 != v12);
            v10 = objc_msgSend(v8, "countByEnumeratingWithState:objects:count:", &v13, v21, 16);
          }
          while (v10);
        }
        v6 = (char *)v6 + 1;
      }
      while (v6 != v4);
      result = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v17, v22, 16);
      v4 = result;
    }
    while (result);
  }
  return result;
}

void sub_D7284(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_D7428(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_D74E8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

id sub_D7500(uint64_t a1)
{
  id v2;
  id v3;
  char v4;
  uint64_t v5;
  void *v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  uint64_t v11;
  void *i;
  uint64_t v13;
  id result;
  id obj;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  _BYTE v24[128];
  _BYTE v25[128];

  v20 = 0u;
  v21 = 0u;
  v22 = 0u;
  v23 = 0u;
  obj = objc_msgSend(objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "documentRoot"), "navigationModel"), "navigationUnits");
  v2 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v20, v25, 16);
  if (!v2)
    return objc_msgSend(*(id *)(a1 + 32), "p_updatePaginationInProgress");
  v3 = v2;
  v4 = 0;
  v5 = *(_QWORD *)v21;
  do
  {
    v6 = 0;
    do
    {
      if (*(_QWORD *)v21 != v5)
        objc_enumerationMutation(obj);
      v7 = *(void **)(*((_QWORD *)&v20 + 1) + 8 * (_QWORD)v6);
      v16 = 0u;
      v17 = 0u;
      v18 = 0u;
      v19 = 0u;
      v8 = objc_msgSend(v7, "contentNodes");
      v9 = objc_msgSend(v8, "countByEnumeratingWithState:objects:count:", &v16, v24, 16);
      if (v9)
      {
        v10 = v9;
        v11 = *(_QWORD *)v17;
        do
        {
          for (i = 0; i != v10; i = (char *)i + 1)
          {
            if (*(_QWORD *)v17 != v11)
              objc_enumerationMutation(v8);
            v13 = *(_QWORD *)(*((_QWORD *)&v16 + 1) + 8 * (_QWORD)i);
            if (!objc_msgSend(*(id *)(a1 + 32), "paginationResultForContentNode:", v13))
            {
              objc_msgSend(*(id *)(a1 + 32), "paginateContentNode:paginationCompletionDelegate:priority:isForeground:activity:", v13, 0, 0, 0, *(_QWORD *)(a1 + 40));
              v4 = 1;
            }
          }
          v10 = objc_msgSend(v8, "countByEnumeratingWithState:objects:count:", &v16, v24, 16);
        }
        while (v10);
      }
      v6 = (char *)v6 + 1;
    }
    while (v6 != v3);
    result = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v20, v25, 16);
    v3 = result;
  }
  while (result);
  if ((v4 & 1) == 0)
    return objc_msgSend(*(id *)(a1 + 32), "p_updatePaginationInProgress");
  return result;
}

void sub_D773C(uint64_t a1)
{
  id v2;
  id v3;
  id v4;
  uint64_t v5;
  void *i;
  void *v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  _BYTE v12[128];

  if (objc_msgSend(*(id *)(a1 + 32), "isEqualIncludingSize:", objc_msgSend(*(id *)(a1 + 40), "presentationType")))
  {
    v10 = 0u;
    v11 = 0u;
    v8 = 0u;
    v9 = 0u;
    v2 = objc_msgSend(objc_msgSend(*(id *)(a1 + 40), "observers", 0), "copy");
    v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
    if (v3)
    {
      v4 = v3;
      v5 = *(_QWORD *)v9;
      do
      {
        for (i = 0; i != v4; i = (char *)i + 1)
        {
          if (*(_QWORD *)v9 != v5)
            objc_enumerationMutation(v2);
          v7 = *(void **)(*((_QWORD *)&v8 + 1) + 8 * (_QWORD)i);
          if ((objc_opt_respondsToSelector(v7, "paginationController:paginationCompleteStateChangedTo:") & 1) != 0
            && objc_msgSend(*(id *)(a1 + 32), "isEqualIncludingSize:", objc_msgSend(*(id *)(a1 + 40), "presentationType")))
          {
            objc_msgSend(v7, "paginationController:paginationCompleteStateChangedTo:", *(_QWORD *)(a1 + 40), *(unsigned __int8 *)(a1 + 48));
          }
        }
        v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
      }
      while (v4);
    }
  }

}

void sub_D7AD0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_D7CEC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_D7E28(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_D8060(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_D8184(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_D8220(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_D8304(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_D8490(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_D85BC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_D861C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_D8824(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_D8850(uint64_t a1)
{
  id v2;
  id v3;
  id v4;
  id v5;
  id v6;
  uint64_t v7;
  void *i;
  void *v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  _BYTE v14[128];

  v2 = objc_msgSend(*(id *)(a1 + 32), "paginationResultForContentNode:", *(_QWORD *)(a1 + 40));
  if (v2)
  {
    v3 = v2;
    v4 = objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "observers"), "copy");
    v10 = 0u;
    v11 = 0u;
    v12 = 0u;
    v13 = 0u;
    v5 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v10, v14, 16);
    if (v5)
    {
      v6 = v5;
      v7 = *(_QWORD *)v11;
      do
      {
        for (i = 0; i != v6; i = (char *)i + 1)
        {
          if (*(_QWORD *)v11 != v7)
            objc_enumerationMutation(v4);
          v9 = *(void **)(*((_QWORD *)&v10 + 1) + 8 * (_QWORD)i);
          if ((objc_opt_respondsToSelector(v9, "paginationController:paginationResultChanged:forContentNode:paginationProgress:paginationComplete:") & 1) != 0)objc_msgSend(v9, "paginationController:paginationResultChanged:forContentNode:paginationProgress:paginationComplete:", *(_QWORD *)(a1 + 32), v3, *(_QWORD *)(a1 + 40), *(unsigned __int8 *)(a1 + 56), *(double *)(a1 + 48));
        }
        v6 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v10, v14, 16);
      }
      while (v6);
    }

  }
}

void sub_D8B7C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_D8C24(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_D90BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_D90D4(uint64_t a1, void *a2)
{
  id result;

  result = objc_msgSend(a2, "containsOccurrenceOfWord:", *(_QWORD *)(a1 + 32));
  if ((_DWORD)result)
    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = 1;
  return result;
}

void sub_D9BDC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_D9C00(uint64_t a1, void *a2)
{
  _QWORD v3[4];
  __int128 v4;

  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_D9C58;
  v3[3] = &unk_4293B0;
  v4 = *(_OWORD *)(a1 + 32);
  return objc_msgSend(a2, "enumerateOccurrencesWithBlock:", v3);
}

id sub_D9C58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v6;
  id v7;
  id result;
  id v9;

  v6 = objc_msgSend(*(id *)(a1 + 32), "objectForKey:", *(_QWORD *)(a3 + 16));
  v7 = +[TSUPairNonRetainedSecond pairWithFirst:second:](TSUPairNonRetainedSecond, "pairWithFirst:second:", a2, a3);
  if (v6)
  {
    result = objc_msgSend(v6, "addObject:", v7);
  }
  else
  {
    v9 = +[NSMutableArray array](NSMutableArray, "array");
    objc_msgSend(v9, "addObject:", v7);
    result = objc_msgSend(*(id *)(a1 + 32), "setObject:forKey:", v9, *(_QWORD *)(a3 + 16));
  }
  ++*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24);
  return result;
}

_WORD *sub_D9D80(uint64_t a1, uint64_t a2, void *a3)
{
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  _WORD *result;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  _BYTE v15[128];

  if (!a3)
    return objc_msgSend(*(id *)(a1 + 32), "addObject:", a2);
  v13 = 0u;
  v14 = 0u;
  v11 = 0u;
  v12 = 0u;
  v6 = objc_msgSend(a3, "countByEnumeratingWithState:objects:count:", &v11, v15, 16);
  if (!v6)
    return objc_msgSend(*(id *)(a1 + 32), "addObject:", a2);
  v7 = v6;
  v8 = *(_QWORD *)v12;
LABEL_4:
  v9 = 0;
  while (1)
  {
    if (*(_QWORD *)v12 != v8)
      objc_enumerationMutation(a3);
    result = objc_msgSend(*(id *)(*((_QWORD *)&v11 + 1) + 8 * v9), "second");
    if (result)
    {
      if (*result == 1)
        return result;
    }
    if (v7 == (id)++v9)
    {
      v7 = objc_msgSend(a3, "countByEnumeratingWithState:objects:count:", &v11, v15, 16);
      if (v7)
        goto LABEL_4;
      return objc_msgSend(*(id *)(a1 + 32), "addObject:", a2);
    }
  }
}

id sub_DA048(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  double v5;
  void *v6;
  void *v7;
  uint64_t v8;
  _QWORD v10[4];
  __int128 v11;

  v4 = objc_opt_class(THModelSearchIndexTerm, a2);
  *(_QWORD *)&v5 = TSUDynamicCast(v4, a2).n128_u64[0];
  v7 = v6;
  if (!v6)
    objc_msgSend(+[TSUAssertionHandler currentHandler](TSUAssertionHandler, "currentHandler", v5), "handleFailureInFunction:file:lineNumber:description:", +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "-[THSearchIndex p_cfiForString:paragraphRange:]_block_invoke"), +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Alder/bliss/Classes/THModelSearchIndex.m"), 476, CFSTR("invalid nil value for '%s'"), "term");
  v8 = *(_QWORD *)(a1 + 32);
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472;
  v10[2] = sub_DA140;
  v10[3] = &unk_429428;
  v11 = *(_OWORD *)(a1 + 40);
  return objc_msgSend(v7, "enumerateOccurrencesOfWord:withBlock:", v8, v10);
}

id sub_DA140(uint64_t a1, uint64_t a2)
{
  id v3;

  if (!a2)
    return objc_msgSend(+[TSUAssertionHandler currentHandler](TSUAssertionHandler, "currentHandler"), "handleFailureInFunction:file:lineNumber:description:", +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "-[THSearchIndex p_cfiForString:paragraphRange:]_block_invoke_2"), +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Alder/bliss/Classes/THModelSearchIndex.m"), 480, CFSTR("invalid nil value for '%s'"), "occurrence");
  v3 = objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 24), "objectForKey:", *(_QWORD *)(a2 + 16));
  if (v3)
    return objc_msgSend(*(id *)(a1 + 40), "addObject:", v3);
  else
    return objc_msgSend(+[TSUAssertionHandler currentHandler](TSUAssertionHandler, "currentHandler"), "handleFailureInFunction:file:lineNumber:description:", +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "-[THSearchIndex p_cfiForString:paragraphRange:]_block_invoke_2"), +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Alder/bliss/Classes/THModelSearchIndex.m"), 484, CFSTR("invalid nil value for '%s'"), "cfi");
}

id KNBundle()
{
  if (qword_5431F0 != -1)
    dispatch_once(&qword_5431F0, &stru_429470);
  return (id)qword_5431E8;
}

void sub_DB694(id a1)
{
  NSBundle *v1;
  uint64_t v2;
  void *v3;

  v1 = +[NSBundle bundleForClass:](NSBundle, "bundleForClass:", objc_opt_class(KNBundleLookupClass));
  v2 = objc_claimAutoreleasedReturnValue(v1);
  v3 = (void *)qword_5431E8;
  qword_5431E8 = v2;

}

void sub_DC8D8(id a1, IMConfigurationAdder *a2)
{
  -[IMConfigurationAdder addFloat:forKey:](a2, "addFloat:forKey:", CFSTR("cellHeight"), 55.0);
  -[IMConfigurationAdder addFloat:forKey:](a2, "addFloat:forKey:", CFSTR("chapterLabelFontSize"), 16.0);
  -[IMConfigurationAdder addFloat:forKey:](a2, "addFloat:forKey:", CFSTR("discloseButtonLeftMargin"), 10.0);
  -[IMConfigurationAdder addFloat:forKey:](a2, "addFloat:forKey:", CFSTR("discloseButtonRadius"), 12.5);
  -[IMConfigurationAdder addFloat:forKey:](a2, "addFloat:forKey:", CFSTR("discloseButtonRightMargin"), 12.0);
  -[IMConfigurationAdder addFloat:forKey:](a2, "addFloat:forKey:", CFSTR("discloseButtonWidth"), 35.0);
  -[IMConfigurationAdder addFloat:forKey:](a2, "addFloat:forKey:", CFSTR("headerImageToTocTableMargin"), 0.0);
  -[IMConfigurationAdder addBool:forKey:](a2, "addBool:forKey:", 0, CFSTR("multiLevelIndent"));
  -[IMConfigurationAdder addFloat:forKey:](a2, "addFloat:forKey:", CFSTR("ordinalNumberLeftMargin"), 20.0);
  -[IMConfigurationAdder addFloat:forKey:](a2, "addFloat:forKey:", CFSTR("ordinalNumberRightMarginChapter"), 10.0);
  -[IMConfigurationAdder addFloat:forKey:](a2, "addFloat:forKey:", CFSTR("ordinalNumberRightMarginSection"), 15.0);
  -[IMConfigurationAdder addFloat:forKey:](a2, "addFloat:forKey:", CFSTR("ordinalWidthLevel1"), 0.0);
  -[IMConfigurationAdder addFloat:forKey:](a2, "addFloat:forKey:", CFSTR("ordinalWidthLevel2"), 0.0);
  -[IMConfigurationAdder addFloat:forKey:](a2, "addFloat:forKey:", CFSTR("ordinalWidthLevel3"), 0.0);
  -[IMConfigurationAdder addFloat:forKey:](a2, "addFloat:forKey:", CFSTR("ordinalNumberRightMarginSection"), 15.0);
  -[IMConfigurationAdder addFloat:forKey:](a2, "addFloat:forKey:", CFSTR("ordinalNumberRightMarginSection"), 15.0);
  -[IMConfigurationAdder addBool:forKey:](a2, "addBool:forKey:", 1, CFSTR("pageNumberDynamicWidth"));
  -[IMConfigurationAdder addFloat:forKey:](a2, "addFloat:forKey:", CFSTR("pageNumberFontSize"), 12.0);
  -[IMConfigurationAdder addFloat:forKey:](a2, "addFloat:forKey:", CFSTR("pageNumberLeftMargin"), 10.0);
  -[IMConfigurationAdder addFloat:forKey:](a2, "addFloat:forKey:", CFSTR("pageNumberWidth"), 0.0);
  -[IMConfigurationAdder addFloat:forKey:](a2, "addFloat:forKey:", CFSTR("sectionLabelFontSize"), 15.0);
  -[IMConfigurationAdder addFloat:forKey:](a2, "addFloat:forKey:", CFSTR("sectionLabelRightMargin"), 5.0);
  -[IMConfigurationAdder addFloat:forKey:](a2, "addFloat:forKey:", CFSTR("separatorColorWhite"), 201.0);
  -[IMConfigurationAdder addFloat:forKey:](a2, "addFloat:forKey:", CFSTR("viewTopToTocTableMargin"), 150.0);
}

id sub_DCADC(uint64_t a1, void *a2)
{
  id v4;
  id v5;
  id v6;
  _QWORD v8[5];
  _QWORD v9[5];
  _QWORD v10[5];

  v4 = +[IMConfigurationPredicate regularWidthPredicate](IMConfigurationPredicate, "regularWidthPredicate");
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472;
  v10[2] = sub_DCBD4;
  v10[3] = &unk_4294D8;
  v10[4] = *(_QWORD *)(a1 + 32);
  objc_msgSend(a2, "addWithPredicate:adder:", v4, v10);
  v5 = +[IMConfigurationPredicate compactWidthPredicate](IMConfigurationPredicate, "compactWidthPredicate");
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472;
  v9[2] = sub_DCC0C;
  v9[3] = &unk_4294D8;
  v9[4] = *(_QWORD *)(a1 + 32);
  objc_msgSend(a2, "addWithPredicate:adder:", v5, v9);
  v6 = +[IMConfigurationPredicate compactWidthPredicate](IMConfigurationPredicate, "compactWidthPredicate");
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472;
  v8[2] = sub_DCC44;
  v8[3] = &unk_4294D8;
  v8[4] = *(_QWORD *)(a1 + 32);
  return objc_msgSend(a2, "addWithPredicate:adder:", v6, v8);
}

id sub_DCBD4(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "addWithPredicate:adder:", +[IMConfigurationPredicate compactHeightPredicate](IMConfigurationPredicate, "compactHeightPredicate"), *(_QWORD *)(a1 + 32));
}

id sub_DCC0C(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "addWithPredicate:adder:", +[IMConfigurationPredicate regularHeightPredicate](IMConfigurationPredicate, "regularHeightPredicate"), *(_QWORD *)(a1 + 32));
}

id sub_DCC44(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "addWithPredicate:adder:", +[IMConfigurationPredicate compactHeightPredicate](IMConfigurationPredicate, "compactHeightPredicate"), *(_QWORD *)(a1 + 32));
}

id sub_DCC7C(uint64_t a1, void *a2)
{
  id v4;
  id v5;
  id v6;
  _QWORD v8[5];
  _QWORD v9[5];
  _QWORD v10[5];

  v4 = +[IMConfigurationPredicate regularWidthPredicate](IMConfigurationPredicate, "regularWidthPredicate");
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472;
  v10[2] = sub_DCD74;
  v10[3] = &unk_4294D8;
  v10[4] = *(_QWORD *)(a1 + 32);
  objc_msgSend(a2, "addWithPredicate:adder:", v4, v10);
  v5 = +[IMConfigurationPredicate compactWidthPredicate](IMConfigurationPredicate, "compactWidthPredicate");
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472;
  v9[2] = sub_DCDAC;
  v9[3] = &unk_4294D8;
  v9[4] = *(_QWORD *)(a1 + 32);
  objc_msgSend(a2, "addWithPredicate:adder:", v5, v9);
  v6 = +[IMConfigurationPredicate compactWidthPredicate](IMConfigurationPredicate, "compactWidthPredicate");
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472;
  v8[2] = sub_DCDE4;
  v8[3] = &unk_4294D8;
  v8[4] = *(_QWORD *)(a1 + 32);
  return objc_msgSend(a2, "addWithPredicate:adder:", v6, v8);
}

id sub_DCD74(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "addWithPredicate:adder:", +[IMConfigurationPredicate compactHeightPredicate](IMConfigurationPredicate, "compactHeightPredicate"), *(_QWORD *)(a1 + 32));
}

id sub_DCDAC(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "addWithPredicate:adder:", +[IMConfigurationPredicate regularHeightPredicate](IMConfigurationPredicate, "regularHeightPredicate"), *(_QWORD *)(a1 + 32));
}

id sub_DCDE4(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "addWithPredicate:adder:", +[IMConfigurationPredicate compactHeightPredicate](IMConfigurationPredicate, "compactHeightPredicate"), *(_QWORD *)(a1 + 32));
}

void sub_DCEFC(id a1, IMConfigurationAdder *a2)
{
  -[IMConfigurationAdder addWithPredicate:adder:](a2, "addWithPredicate:adder:", +[IMConfigurationPredicate regularHeightPredicate](IMConfigurationPredicate, "regularHeightPredicate"), &stru_429518);
}

void sub_DCF34(id a1, IMConfigurationAdder *a2)
{
  -[IMConfigurationAdder addWithPredicate:adder:](a2, "addWithPredicate:adder:", +[IMConfigurationPredicate regularWidthPredicate](IMConfigurationPredicate, "regularWidthPredicate"), &stru_429538);
}

void sub_DCF6C(id a1, IMConfigurationAdder *a2)
{
  -[IMConfigurationAdder addFloat:forKey:](a2, "addFloat:forKey:", CFSTR("cellHeight"), 44.0);
  -[IMConfigurationAdder addFloat:forKey:](a2, "addFloat:forKey:", CFSTR("chapterLabelFontSize"), 17.0);
  -[IMConfigurationAdder addFloat:forKey:](a2, "addFloat:forKey:", CFSTR("discloseButtonLeftMargin"), 6.0);
  -[IMConfigurationAdder addFloat:forKey:](a2, "addFloat:forKey:", CFSTR("discloseButtonRadius"), 12.5);
  -[IMConfigurationAdder addFloat:forKey:](a2, "addFloat:forKey:", CFSTR("discloseButtonRightMargin"), 75.0);
  -[IMConfigurationAdder addFloat:forKey:](a2, "addFloat:forKey:", CFSTR("discloseButtonWidth"), 35.0);
  -[IMConfigurationAdder addFloat:forKey:](a2, "addFloat:forKey:", CFSTR("headerImageToTocTableMargin"), 0.0);
  -[IMConfigurationAdder addBool:forKey:](a2, "addBool:forKey:", 1, CFSTR("multiLevelIndent"));
  -[IMConfigurationAdder addFloat:forKey:](a2, "addFloat:forKey:", CFSTR("ordinalNumberLeftMargin"), 75.0);
  -[IMConfigurationAdder addFloat:forKey:](a2, "addFloat:forKey:", CFSTR("ordinalNumberRightMarginChapter"), 0.0);
  -[IMConfigurationAdder addFloat:forKey:](a2, "addFloat:forKey:", CFSTR("ordinalNumberRightMarginSection"), 0.0);
  -[IMConfigurationAdder addFloat:forKey:](a2, "addFloat:forKey:", CFSTR("ordinalWidthLevel1"), 35.0);
  -[IMConfigurationAdder addFloat:forKey:](a2, "addFloat:forKey:", CFSTR("ordinalWidthLevel2"), 45.0);
  -[IMConfigurationAdder addFloat:forKey:](a2, "addFloat:forKey:", CFSTR("ordinalWidthLevel3"), 25.0);
  -[IMConfigurationAdder addBool:forKey:](a2, "addBool:forKey:", 0, CFSTR("pageNumberDynamicWidth"));
  -[IMConfigurationAdder addFloat:forKey:](a2, "addFloat:forKey:", CFSTR("pageNumberFontSize"), 17.0);
  -[IMConfigurationAdder addFloat:forKey:](a2, "addFloat:forKey:", CFSTR("pageNumberLeftMargin"), 0.0);
  -[IMConfigurationAdder addFloat:forKey:](a2, "addFloat:forKey:", CFSTR("pageNumberWidth"), 54.0);
  -[IMConfigurationAdder addFloat:forKey:](a2, "addFloat:forKey:", CFSTR("sectionLabelFontSize"), 17.0);
  -[IMConfigurationAdder addFloat:forKey:](a2, "addFloat:forKey:", CFSTR("sectionLabelRightMargin"), 17.0);
  -[IMConfigurationAdder addFloat:forKey:](a2, "addFloat:forKey:", CFSTR("separatorColorWhite"), 201.0);
  -[IMConfigurationAdder addFloat:forKey:](a2, "addFloat:forKey:", CFSTR("viewTopToTocTableMargin"), 150.0);
}

void sub_DD168(id a1, IMConfigurationAdder *a2)
{
  -[IMConfigurationAdder addWithPredicate:adder:](a2, "addWithPredicate:adder:", +[IMConfigurationPredicate regularHeightPredicate](IMConfigurationPredicate, "regularHeightPredicate"), &stru_429578);
}

void sub_DD1A0(id a1, IMConfigurationAdder *a2)
{
  -[IMConfigurationAdder addWithPredicate:adder:](a2, "addWithPredicate:adder:", +[IMConfigurationPredicate regularWidthPredicate](IMConfigurationPredicate, "regularWidthPredicate"), &stru_429598);
}

void sub_DD1D8(id a1, IMConfigurationAdder *a2)
{
  -[IMConfigurationAdder addFloat:forKey:](a2, "addFloat:forKey:", CFSTR("cellHeight"), 44.0);
  -[IMConfigurationAdder addFloat:forKey:](a2, "addFloat:forKey:", CFSTR("chapterLabelFontSize"), 17.0);
  -[IMConfigurationAdder addFloat:forKey:](a2, "addFloat:forKey:", CFSTR("discloseButtonLeftMargin"), 6.0);
  -[IMConfigurationAdder addFloat:forKey:](a2, "addFloat:forKey:", CFSTR("discloseButtonRadius"), 12.5);
  -[IMConfigurationAdder addFloat:forKey:](a2, "addFloat:forKey:", CFSTR("discloseButtonRightMargin"), 75.0);
  -[IMConfigurationAdder addFloat:forKey:](a2, "addFloat:forKey:", CFSTR("discloseButtonWidth"), 35.0);
  -[IMConfigurationAdder addFloat:forKey:](a2, "addFloat:forKey:", CFSTR("headerImageToTocTableMargin"), 0.0);
  -[IMConfigurationAdder addBool:forKey:](a2, "addBool:forKey:", 1, CFSTR("multiLevelIndent"));
  -[IMConfigurationAdder addFloat:forKey:](a2, "addFloat:forKey:", CFSTR("ordinalNumberLeftMargin"), 75.0);
  -[IMConfigurationAdder addFloat:forKey:](a2, "addFloat:forKey:", CFSTR("ordinalNumberRightMarginChapter"), 0.0);
  -[IMConfigurationAdder addFloat:forKey:](a2, "addFloat:forKey:", CFSTR("ordinalNumberRightMarginSection"), 0.0);
  -[IMConfigurationAdder addFloat:forKey:](a2, "addFloat:forKey:", CFSTR("ordinalWidthLevel1"), 35.0);
  -[IMConfigurationAdder addFloat:forKey:](a2, "addFloat:forKey:", CFSTR("ordinalWidthLevel2"), 45.0);
  -[IMConfigurationAdder addFloat:forKey:](a2, "addFloat:forKey:", CFSTR("ordinalWidthLevel3"), 25.0);
  -[IMConfigurationAdder addBool:forKey:](a2, "addBool:forKey:", 0, CFSTR("pageNumberDynamicWidth"));
  -[IMConfigurationAdder addFloat:forKey:](a2, "addFloat:forKey:", CFSTR("pageNumberFontSize"), 17.0);
  -[IMConfigurationAdder addFloat:forKey:](a2, "addFloat:forKey:", CFSTR("pageNumberLeftMargin"), 0.0);
  -[IMConfigurationAdder addFloat:forKey:](a2, "addFloat:forKey:", CFSTR("pageNumberWidth"), 54.0);
  -[IMConfigurationAdder addFloat:forKey:](a2, "addFloat:forKey:", CFSTR("sectionLabelFontSize"), 17.0);
  -[IMConfigurationAdder addFloat:forKey:](a2, "addFloat:forKey:", CFSTR("sectionLabelRightMargin"), 17.0);
  -[IMConfigurationAdder addFloat:forKey:](a2, "addFloat:forKey:", CFSTR("separatorColorWhite"), 201.0);
  -[IMConfigurationAdder addFloat:forKey:](a2, "addFloat:forKey:", CFSTR("viewTopToTocTableMargin"), 150.0);
}

void sub_DD3D4(id a1, IMConfigurationAdder *a2)
{
  -[IMConfigurationAdder addFloat:forKey:](a2, "addFloat:forKey:", CFSTR("cellHeight"), 55.0);
  -[IMConfigurationAdder addFloat:forKey:](a2, "addFloat:forKey:", CFSTR("chapterLabelFontSize"), 16.0);
  -[IMConfigurationAdder addFloat:forKey:](a2, "addFloat:forKey:", CFSTR("discloseButtonLeftMargin"), 10.0);
  -[IMConfigurationAdder addFloat:forKey:](a2, "addFloat:forKey:", CFSTR("discloseButtonRadius"), 12.5);
  -[IMConfigurationAdder addFloat:forKey:](a2, "addFloat:forKey:", CFSTR("discloseButtonRightMargin"), 12.0);
  -[IMConfigurationAdder addFloat:forKey:](a2, "addFloat:forKey:", CFSTR("discloseButtonWidth"), 35.0);
  -[IMConfigurationAdder addFloat:forKey:](a2, "addFloat:forKey:", CFSTR("headerImageToTocTableMargin"), 0.0);
  -[IMConfigurationAdder addBool:forKey:](a2, "addBool:forKey:", 0, CFSTR("multiLevelIndent"));
  -[IMConfigurationAdder addFloat:forKey:](a2, "addFloat:forKey:", CFSTR("ordinalNumberLeftMargin"), 20.0);
  -[IMConfigurationAdder addFloat:forKey:](a2, "addFloat:forKey:", CFSTR("ordinalNumberRightMarginChapter"), 10.0);
  -[IMConfigurationAdder addFloat:forKey:](a2, "addFloat:forKey:", CFSTR("ordinalNumberRightMarginSection"), 15.0);
  -[IMConfigurationAdder addFloat:forKey:](a2, "addFloat:forKey:", CFSTR("ordinalWidthLevel1"), 0.0);
  -[IMConfigurationAdder addFloat:forKey:](a2, "addFloat:forKey:", CFSTR("ordinalWidthLevel2"), 0.0);
  -[IMConfigurationAdder addFloat:forKey:](a2, "addFloat:forKey:", CFSTR("ordinalWidthLevel3"), 0.0);
  -[IMConfigurationAdder addFloat:forKey:](a2, "addFloat:forKey:", CFSTR("ordinalNumberRightMarginSection"), 15.0);
  -[IMConfigurationAdder addFloat:forKey:](a2, "addFloat:forKey:", CFSTR("ordinalNumberRightMarginSection"), 15.0);
  -[IMConfigurationAdder addBool:forKey:](a2, "addBool:forKey:", 1, CFSTR("pageNumberDynamicWidth"));
  -[IMConfigurationAdder addFloat:forKey:](a2, "addFloat:forKey:", CFSTR("pageNumberFontSize"), 12.0);
  -[IMConfigurationAdder addFloat:forKey:](a2, "addFloat:forKey:", CFSTR("pageNumberLeftMargin"), 10.0);
  -[IMConfigurationAdder addFloat:forKey:](a2, "addFloat:forKey:", CFSTR("pageNumberWidth"), 0.0);
  -[IMConfigurationAdder addFloat:forKey:](a2, "addFloat:forKey:", CFSTR("sectionLabelFontSize"), 15.0);
  -[IMConfigurationAdder addFloat:forKey:](a2, "addFloat:forKey:", CFSTR("sectionLabelRightMargin"), 5.0);
  -[IMConfigurationAdder addFloat:forKey:](a2, "addFloat:forKey:", CFSTR("separatorColorWhite"), 201.0);
  -[IMConfigurationAdder addFloat:forKey:](a2, "addFloat:forKey:", CFSTR("viewTopToTocTableMargin"), 150.0);
}

void sub_DD610(id a1, IMConfigurationAdder *a2)
{
  -[IMConfigurationAdder addWithPredicate:adder:](a2, "addWithPredicate:adder:", +[IMConfigurationPredicate regularHeightPredicate](IMConfigurationPredicate, "regularHeightPredicate"), &stru_4295F8);
}

void sub_DD648(id a1, IMConfigurationAdder *a2)
{
  -[IMConfigurationAdder addWithPredicate:adder:](a2, "addWithPredicate:adder:", +[IMConfigurationPredicate regularWidthPredicate](IMConfigurationPredicate, "regularWidthPredicate"), &stru_429618);
}

void sub_DD680(id a1, IMConfigurationAdder *a2)
{
  -[IMConfigurationAdder addFloat:forKey:](a2, "addFloat:forKey:", CFSTR("cellHeight"), 75.0);
  -[IMConfigurationAdder addFloat:forKey:](a2, "addFloat:forKey:", CFSTR("chapterLabelFontSize"), 20.0);
  -[IMConfigurationAdder addFloat:forKey:](a2, "addFloat:forKey:", CFSTR("discloseButtonLeftMargin"), 13.0);
  -[IMConfigurationAdder addFloat:forKey:](a2, "addFloat:forKey:", CFSTR("discloseButtonRadius"), 12.5);
  -[IMConfigurationAdder addFloat:forKey:](a2, "addFloat:forKey:", CFSTR("discloseButtonWidth"), 35.0);
  -[IMConfigurationAdder addFloat:forKey:](a2, "addFloat:forKey:", CFSTR("headerImageToTocTableMargin"), 0.0);
  -[IMConfigurationAdder addBool:forKey:](a2, "addBool:forKey:", 1, CFSTR("multiLevelIndent"));
  -[IMConfigurationAdder addFloat:forKey:](a2, "addFloat:forKey:", CFSTR("ordinalNumberColorWhite"), 0.6);
  -[IMConfigurationAdder addFloat:forKey:](a2, "addFloat:forKey:", CFSTR("ordinalNumberRightMarginChapter"), 0.0);
  -[IMConfigurationAdder addFloat:forKey:](a2, "addFloat:forKey:", CFSTR("ordinalNumberRightMarginSection"), 0.0);
  -[IMConfigurationAdder addFloat:forKey:](a2, "addFloat:forKey:", CFSTR("ordinalWidthLevel1"), 65.0);
  -[IMConfigurationAdder addFloat:forKey:](a2, "addFloat:forKey:", CFSTR("ordinalWidthLevel2"), 75.0);
  -[IMConfigurationAdder addFloat:forKey:](a2, "addFloat:forKey:", CFSTR("ordinalWidthLevel3"), 55.0);
  -[IMConfigurationAdder addBool:forKey:](a2, "addBool:forKey:", 0, CFSTR("pageNumberDynamicWidth"));
  -[IMConfigurationAdder addFloat:forKey:](a2, "addFloat:forKey:", CFSTR("pageNumberFontSize"), 20.0);
  -[IMConfigurationAdder addFloat:forKey:](a2, "addFloat:forKey:", CFSTR("pageNumberLeftMargin"), 0.0);
  -[IMConfigurationAdder addFloat:forKey:](a2, "addFloat:forKey:", CFSTR("pageNumberWidth"), 54.0);
  -[IMConfigurationAdder addFloat:forKey:](a2, "addFloat:forKey:", CFSTR("sectionLabelFontSize"), 20.0);
  -[IMConfigurationAdder addFloat:forKey:](a2, "addFloat:forKey:", CFSTR("sectionLabelRightMargin"), 17.0);
  -[IMConfigurationAdder addFloat:forKey:](a2, "addFloat:forKey:", CFSTR("separatorColorWhite"), 230.0);
  -[IMConfigurationAdder addFloat:forKey:](a2, "addFloat:forKey:", CFSTR("viewTopToTocTableMargin"), 150.0);
  -[IMConfigurationAdder addWithPredicate:adder:](a2, "addWithPredicate:adder:", +[IMConfigurationPredicate landscapePredicate](IMConfigurationPredicate, "landscapePredicate"), &stru_429638);
  -[IMConfigurationAdder addWithPredicate:adder:](a2, "addWithPredicate:adder:", +[IMConfigurationPredicate portraitPredicate](IMConfigurationPredicate, "portraitPredicate"), &stru_429658);
}

void sub_DD8A4(id a1, IMConfigurationAdder *a2)
{
  -[IMConfigurationAdder addFloat:forKey:](a2, "addFloat:forKey:", CFSTR("ordinalNumberLeftMargin"), 180.0);
  -[IMConfigurationAdder addFloat:forKey:](a2, "addFloat:forKey:", CFSTR("discloseButtonRightMargin"), 180.0);
}

void sub_DD8F4(id a1, IMConfigurationAdder *a2)
{
  -[IMConfigurationAdder addFloat:forKey:](a2, "addFloat:forKey:", CFSTR("ordinalNumberLeftMargin"), 38.0);
  -[IMConfigurationAdder addFloat:forKey:](a2, "addFloat:forKey:", CFSTR("discloseButtonRightMargin"), 38.0);
}

uint64_t _highlightRowInfos(void)
{
  if (qword_543200 != -1)
    dispatch_once(&qword_543200, &stru_429678);
  return qword_5431F8;
}

void sub_DF008(id a1)
{
  unsigned __int8 v1;

  v1 = atomic_load((unsigned __int8 *)&qword_543268);
  if ((v1 & 1) == 0 && __cxa_guard_acquire(&qword_543268))
  {
    dword_543208 = 3;
    qword_543210 = (uint64_t)objc_msgSend((id)THBundle(), "localizedStringForKey:value:table:", CFSTR("Yellow"), &stru_43D7D8, 0);
    dword_543218 = 1;
    qword_543220 = (uint64_t)objc_msgSend((id)THBundle(), "localizedStringForKey:value:table:", CFSTR("Green"), &stru_43D7D8, 0);
    dword_543228 = 2;
    qword_543230 = (uint64_t)objc_msgSend((id)THBundle(), "localizedStringForKey:value:table:", CFSTR("Blue"), &stru_43D7D8, 0);
    dword_543238 = 4;
    qword_543240 = (uint64_t)objc_msgSend((id)THBundle(), "localizedStringForKey:value:table:", CFSTR("Pink"), &stru_43D7D8, 0);
    dword_543248 = 5;
    qword_543250 = (uint64_t)objc_msgSend((id)THBundle(), "localizedStringForKey:value:table:", CFSTR("Purple"), &stru_43D7D8, 0);
    dword_543258 = 6;
    qword_543260 = (uint64_t)objc_msgSend((id)THBundle(), "localizedStringForKey:value:table:", CFSTR("Underline"), &stru_43D7D8, 0);
    __cxa_guard_release(&qword_543268);
  }
  qword_5431F8 = (uint64_t)&dword_543208;
}

void sub_DF180(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_543268);
  _Unwind_Resume(a1);
}

double _studyOptionsPopoverSize(void)
{
  double v0;

  if (+[UIFont bc_accessibilityFontSizesEnabled](UIFont, "bc_accessibilityFontSizesEnabled"))v0 = 360.0;
  else
    v0 = 320.0;
  +[UIFont bc_accessibilityFontSizesEnabled](UIFont, "bc_accessibilityFontSizesEnabled");
  return v0;
}

id sub_E0B60(uint64_t a1, uint64_t a2, void *a3)
{
  id v4;
  void *v5;
  id v6;
  uint64_t v7;

  v4 = objc_msgSend(a3, "bodyStorage");
  v5 = *(void **)(a1 + 32);
  v6 = objc_msgSend(v4, "range");
  objc_msgSend(v5, "setStorage:range:", v4, v6, v7);
  return objc_msgSend(*(id *)(a1 + 32), "setFontFamily:textColor:underlineColor:characterSpacing:lineSpacingMode:lineSpacingAmount:alignment:", objc_msgSend(+[TSUFont systemFontOfSize:](TSUFont, "systemFontOfSize:", 12.0), "familyName"), THNoteCardBackTextColor((int)objc_msgSend(*(id *)(a1 + 40), "darkMode")), 0, 0, 4, -0.01, 1.0);
}

uint64_t sub_E3944(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 32);
  if (result)
    return (*(uint64_t (**)(void))(result + 16))();
  return result;
}

uint64_t sub_E3A10(uint64_t a1)
{
  uint64_t result;

  objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "view"), "setHidden:", 1);
  result = *(_QWORD *)(a1 + 40);
  if (result)
    return (*(uint64_t (**)(void))(result + 16))();
  return result;
}

uint64_t sub_E3B2C(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 32);
  if (result)
    return (*(uint64_t (**)(void))(result + 16))();
  return result;
}

uint64_t sub_E3BF8(uint64_t a1)
{
  uint64_t result;

  objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "view"), "setHidden:", 1);
  result = *(_QWORD *)(a1 + 40);
  if (result)
    return (*(uint64_t (**)(void))(result + 16))();
  return result;
}

id sub_E3E5C(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 40), "setPreferredDisplayMode:", 2 * (objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "notesSidebarViewController"), "presentedViewController") != 0));
  return objc_msgSend(*(id *)(a1 + 32), "p_configureToolbarsForEditing:collapsed:", objc_msgSend(*(id *)(a1 + 32), "p_isEditing"), objc_msgSend(*(id *)(a1 + 32), "p_isCollapsed"));
}

id sub_E4590(uint64_t a1)
{
  objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "bookViewController"), "recordCurrentLocationInHistory");
  return objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "bookViewController"), "updateNavigationAffordances");
}

id sub_E4730(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "updateSectionProviders");
}

NSString *__cdecl sub_E5AF4(id a1, id a2)
{
  return (NSString *)objc_msgSend(a2, "stringValue");
}

void sub_E7224(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

__n128 sub_E723C(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)(a2 + 48);
  v3 = *(_OWORD *)(a2 + 64);
  *(__n128 *)(a1 + 48) = result;
  *(_OWORD *)(a1 + 64) = v3;
  return result;
}

void sub_E724C(uint64_t a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5)
{
  CGRect v5;

  v5.size.height = a5;
  v5.size.width = a4;
  v5.origin.y = a3;
  v5.origin.x = a2;
  *(CGRect *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 48) = CGRectUnion(*(CGRect *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8)+ 48), v5);
}

id sub_E7900(uint64_t a1, void *a2)
{
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  id result;
  uint64_t v10;

  v4 = *(double *)(a1 + 40);
  *(float *)&v4 = v4;
  objc_msgSend(a2, "setFloatValue:forProperty:", 17, v4);
  LODWORD(v5) = 0;
  objc_msgSend(a2, "setFloatValue:forProperty:", 81, v5);
  LODWORD(v6) = 0;
  objc_msgSend(a2, "setFloatValue:forProperty:", 80, v6);
  LODWORD(v7) = 0;
  objc_msgSend(a2, "setFloatValue:forProperty:", 87, v7);
  LODWORD(v8) = 0;
  result = objc_msgSend(a2, "setFloatValue:forProperty:", 88, v8);
  v10 = *(_QWORD *)(a1 + 32);
  if (v10)
    return objc_msgSend(a2, "setValue:forProperty:", v10, 85);
  return result;
}

id sub_E7990(uint64_t a1, void *a2)
{
  id result;
  double v5;

  result = objc_msgSend(a2, "definesProperty:", 17);
  if ((_DWORD)result)
  {
    v5 = *(double *)(a1 + 32);
    *(float *)&v5 = v5;
    return objc_msgSend(a2, "setFloatValue:forProperty:", 17, v5);
  }
  return result;
}

void sub_ECF10(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_ECFC8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

id sub_ED0D4(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "setMoviePlayerControllerIsLoaded:", 1);
}

id sub_ED778(uint64_t a1)
{
  objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "delegate"), "introMediaControllerMoviePlayerWillShowControls");
  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 80), "setAlpha:", 1.0);
  return objc_msgSend(*(id *)(a1 + 32), "setControlsHidden:", 0);
}

id sub_ED7C0(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "refreshStatusBarAppearance");
}

id sub_ED7C8(uint64_t a1)
{
  objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "delegate"), "introMediaControllerMoviePlayerWillShowControls");
  return objc_msgSend(*(id *)(a1 + 32), "setControlsHidden:", 0);
}

id sub_ED7F8(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "refreshStatusBarAppearance");
}

id sub_EDA04(uint64_t a1)
{
  objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "delegate"), "introMediaControllerMoviePlayerWillHideControls");
  objc_msgSend(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 16), "controlsView"), "setAlpha:", 0.0);
  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 80), "setAlpha:", 0.0);
  return objc_msgSend(*(id *)(a1 + 32), "setControlsHidden:", 1);
}

id sub_EDA68(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "refreshStatusBarAppearance");
}

id sub_EF8FC(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "clearAndReloadAnnotations");
}

id sub_EF904(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "setInSizeTransition:", 0);
}

id sub_F0040(uint64_t a1)
{
  id result;
  double MaxY;
  CGRect v4;
  CGRect v5;

  result = objc_msgSend(*(id *)(a1 + 32), "numberOfSections");
  if (result)
  {
    objc_msgSend(*(id *)(a1 + 32), "rectForSection:", (char *)objc_msgSend(*(id *)(a1 + 32), "numberOfSections") - 1);
    MaxY = CGRectGetMaxY(v4);
    objc_msgSend(*(id *)(a1 + 32), "bounds");
    return (id)(MaxY >= CGRectGetHeight(v5));
  }
  return result;
}

void sub_F1D0C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_F1D24(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  void *v4;
  void *v5;
  id v6;
  id v7;

  v7 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "cachedAnnotationForIndexPath:", a2));
  v3 = objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "annotationNote"));
  if (v3)
  {
    v4 = (void *)v3;
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "annotationNote"));
    v6 = objc_msgSend(v5, "length");

    if (v6)
      ++*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24);
  }

}

int64_t sub_F1F08(id a1, id a2, id a3)
{
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  int64_t v10;
  id v11;
  id v12;

  v4 = a2;
  v5 = a3;
  v6 = v4;
  v7 = v5;
  v8 = objc_msgSend(v6, "section");
  if (v8 == objc_msgSend(v7, "section"))
  {
    v9 = objc_msgSend(v6, "row");
    if (v9 == objc_msgSend(v7, "row"))
    {
      v10 = 0;
      goto LABEL_9;
    }
    v11 = objc_msgSend(v6, "row");
    v12 = objc_msgSend(v7, "row");
  }
  else
  {
    v11 = objc_msgSend(v6, "section");
    v12 = objc_msgSend(v7, "section");
  }
  if ((uint64_t)v11 < (uint64_t)v12)
    v10 = 1;
  else
    v10 = -1;
LABEL_9:

  return v10;
}

id sub_F70B4(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "setCurrentPageBookmarked:forBookmarkMenuPopoverViewController:", objc_msgSend(*(id *)(a1 + 32), "isCurrentPageBookmarkedForBookmarkMenuPopoverViewController:", *(_QWORD *)(a1 + 40)) ^ 1, *(_QWORD *)(a1 + 40));
}

id sub_F70E4(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "jumpToPageLocation:touchHistory:minor:", *(_QWORD *)(a1 + 40), 1, 0);
}

id sub_F9618(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_animationDidStop");
}

id sub_FA8FC(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "newImageSourceForTextureName:", *(_QWORD *)(a1 + 40));
}

void sub_FCA14(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_FCA2C(uint64_t a1, uint64_t a2)
{
  _Block_object_assign((void *)(a1 + 40), *(const void **)(a2 + 40), 131);
}

void sub_FCA3C(uint64_t a1)
{
  _Block_object_dispose(*(const void **)(a1 + 40), 131);
}

id sub_FCA48(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40), "addObject:", -[THPageLocation initWithDictionaryRepresentation:]([THPageLocation alloc], "initWithDictionaryRepresentation:", a2));
}

void sub_FCBAC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_FCBC8(uint64_t a1, void *a2)
{
  return objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40), "addObject:", objc_msgSend(a2, "dictionaryRepresentation"));
}

id sub_FDB94(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 32), "setCenter:", *(double *)(a1 + 48), *(double *)(a1 + 56));
  objc_msgSend(*(id *)(a1 + 40), "addSubview:", *(_QWORD *)(a1 + 32));
  return objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "layer"), "setZPosition:", *(double *)(a1 + 64));
}

id sub_FE054(uint64_t a1)
{
  void *v2;

  objc_msgSend(*(id *)(a1 + 32), "setCenter:", *(double *)(a1 + 48), *(double *)(a1 + 56));
  v2 = *(void **)(a1 + 40);
  if (v2)
    objc_msgSend(v2, "addSubview:", *(_QWORD *)(a1 + 32));
  else
    objc_msgSend(*(id *)(a1 + 32), "removeFromSuperview");
  return objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "layer"), "setZPosition:", *(double *)(a1 + 64));
}

id sub_FE3E8(uint64_t a1)
{
  __int128 v2;
  _OWORD v4[3];

  +[CATransaction begin](CATransaction, "begin");
  objc_msgSend(*(id *)(a1 + 32), "setWindowLevel:", *(double *)(a1 + 72));
  objc_msgSend(*(id *)(a1 + 32), "setBackgroundColor:", *(_QWORD *)(a1 + 40));
  objc_msgSend(*(id *)(a1 + 48), "setCenter:", *(double *)(a1 + 80), *(double *)(a1 + 88));
  v2 = *(_OWORD *)(a1 + 112);
  v4[0] = *(_OWORD *)(a1 + 96);
  v4[1] = v2;
  v4[2] = *(_OWORD *)(a1 + 128);
  objc_msgSend(*(id *)(a1 + 48), "setTransform:", v4);
  objc_msgSend(*(id *)(a1 + 32), "addSubview:", *(_QWORD *)(a1 + 48));
  if (objc_msgSend(objc_msgSend(*(id *)(a1 + 56), "subviews"), "count"))
    objc_msgSend(+[TSUAssertionHandler currentHandler](TSUAssertionHandler, "currentHandler"), "handleFailureInFunction:file:lineNumber:description:", +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "-[UIWindow(THAdditions) rootView]_block_invoke"), +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Alder/bliss/Classes/Utility/UIWindow_THAdditions.m"), 212, CFSTR("clip view shouldn't have any subviews"));
  if (objc_msgSend(objc_msgSend(*(id *)(a1 + 64), "subviews"), "count") != (char *)&dword_0 + 1)
    objc_msgSend(+[TSUAssertionHandler currentHandler](TSUAssertionHandler, "currentHandler"), "handleFailureInFunction:file:lineNumber:description:", +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "-[UIWindow(THAdditions) rootView]_block_invoke"), +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Alder/bliss/Classes/Utility/UIWindow_THAdditions.m"), 213, CFSTR("new root view should only have one subview"));
  objc_msgSend(*(id *)(a1 + 64), "removeFromSuperview");
  return +[CATransaction commit](CATransaction, "commit");
}

id sub_101C00(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "present");
}

id sub_101C08(uint64_t a1)
{
  return objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 112), "performSelector:withObject:", *(_QWORD *)(*(_QWORD *)(a1 + 32) + 120));
}

id sub_101CF0(uint64_t a1)
{
  return objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 112), "performSelector:withObject:afterDelay:", *(_QWORD *)(*(_QWORD *)(a1 + 32) + 120), *(double *)(a1 + 40));
}

BOOL THFlowBodyHintCompareCharIndex(uint64_t a1, unint64_t a2)
{
  return *(_QWORD *)(a1 + 24) + *(_QWORD *)(a1 + 16) <= a2;
}

void sub_1027BC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_10285C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

id sub_102870(uint64_t a1, void *a2)
{
  id v4;

  if (objc_msgSend(objc_msgSend(a2, "layoutController"), "isLayoutOffscreen"))
    objc_msgSend(+[TSUAssertionHandler currentHandler](TSUAssertionHandler, "currentHandler"), "handleFailureInFunction:file:lineNumber:description:", +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "-[THFlowPageController layoutContentAtLayoutAnchor:padAbove:padBelow:]_block_invoke"), +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Alder/bliss/Classes/THFlowPageController.mm"), 141, CFSTR("should be laying out into an onscreen layout"));
  v4 = objc_msgSend(*(id *)(a1 + 32), "bodyIndex");
  objc_msgSend(*(id *)(a1 + 32), "offsetFromBodyTop");
  return objc_msgSend(a2, "layoutContentAtBodyIndex:offsetFromTop:padAbove:padBelow:", v4, *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48));
}

void sub_102994(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

id sub_1029A8(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "layoutContentFromBottom:", *(_QWORD *)(a1 + 32));
}

void sub_102A24(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

id sub_102A38(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "layoutContentFromTop:", *(_QWORD *)(a1 + 32));
}

void sub_102B68(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_102D4C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_102E60(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19)
{
  void *v19;

  objc_sync_exit(v19);
  _Block_object_dispose(&a19, 8);
  _Unwind_Resume(a1);
}

__n128 sub_102E80(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = a2[3];
  a1[3] = result;
  return result;
}

id sub_102E90(uint64_t a1, void *a2)
{
  id result;
  uint64_t v4;
  uint64_t v5;

  result = objc_msgSend(a2, "firstLineInRect:fromCharIndex:", *(_QWORD *)(a1 + 72), *(double *)(a1 + 40), *(double *)(a1 + 48), *(double *)(a1 + 56), *(double *)(a1 + 64));
  v4 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8);
  *(_QWORD *)(v4 + 48) = result;
  *(_QWORD *)(v4 + 56) = v5;
  return result;
}

void sub_103114(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1032CC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_103438(_Unwind_Exception *a1)
{
  void *v1;
  uint64_t v2;

  objc_sync_exit(v1);
  _Block_object_dispose((const void *)(v2 - 128), 8);
  _Unwind_Resume(a1);
}

id sub_103458(uint64_t a1, void *a2)
{
  id result;

  result = objc_msgSend(a2, "firstBodyCharacterIndexOverlappingPageRect:", *(double *)(a1 + 40), *(double *)(a1 + 48), *(double *)(a1 + 56), *(double *)(a1 + 64));
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  return result;
}

id sub_103490(uint64_t a1, void *a2)
{
  CGFloat y;
  CGFloat height;
  CGFloat width;
  id v6;
  id result;
  id v8;
  void *v9;
  uint64_t v10;
  double v11;
  void *v12;
  void *v13;
  id v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double MidY;
  double v25;
  double v26;
  CGFloat x;
  __int16 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  _BYTE v33[128];
  CGRect v34;
  CGRect v35;
  CGRect v36;

  y = CGRectZero.origin.y;
  width = CGRectZero.size.width;
  height = CGRectZero.size.height;
  v29 = 0u;
  v30 = 0u;
  v31 = 0u;
  v32 = 0u;
  v6 = objc_msgSend(a2, "bodyLayouts");
  result = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v29, v33, 16);
  if (result)
  {
    v8 = result;
    x = CGRectZero.origin.x;
    v9 = 0;
    v10 = *(_QWORD *)v30;
    v11 = 1.79769313e308;
    do
    {
      v12 = 0;
      do
      {
        if (*(_QWORD *)v30 != v10)
          objc_enumerationMutation(v6);
        v13 = *(void **)(*((_QWORD *)&v29 + 1) + 8 * (_QWORD)v12);
        v14 = objc_msgSend(objc_msgSend(v13, "parent", *(_QWORD *)&x), "bodyRectForChildLayout:", v13);
        v16 = v15;
        v18 = v17;
        v20 = v19;
        v22 = v21;
        v23 = TSDDistanceToRectFromRect(v14);
        if (v23 < v11)
        {
          x = v16;
          y = v18;
          width = v20;
          height = v22;
          v9 = v13;
          v11 = v23;
        }
        v12 = (char *)v12 + 1;
      }
      while (v8 != v12);
      result = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v29, v33, 16);
      v8 = result;
    }
    while (result);
    if (v9)
    {
      v28 = 0;
      MidY = CGRectGetMidY(*(CGRect *)(a1 + 40));
      v34.origin.x = x;
      v34.origin.y = y;
      v34.size.width = width;
      v34.size.height = height;
      if (MidY <= CGRectGetMidY(v34))
      {
        v25 = CGPointZero.x;
        v26 = CGPointZero.y;
      }
      else
      {
        v35.origin.x = x;
        v35.origin.y = y;
        v35.size.width = width;
        v35.size.height = height;
        v25 = CGRectGetWidth(v35);
        v36.origin.x = x;
        v36.origin.y = y;
        v36.size.width = width;
        v36.size.height = height;
        v26 = CGRectGetHeight(v36);
      }
      result = +[TSWPColumn charIndexForPoint:inColumnsArray:allowPastBreak:allowNotFound:pastCenterGoesToNextChar:isAtEndOfLine:leadingEdge:](TSWPColumn, "charIndexForPoint:inColumnsArray:allowPastBreak:allowNotFound:pastCenterGoesToNextChar:isAtEndOfLine:leadingEdge:", objc_msgSend(v9, "columns", *(_QWORD *)&x), 0, 0, 0, (char *)&v28 + 1, &v28, v25, v26);
      *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
    }
  }
  return result;
}

void sub_1037A4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15)
{
  void *v15;

  objc_sync_exit(v15);
  _Block_object_dispose(&a15, 8);
  _Unwind_Resume(a1);
}

__n128 sub_1037C4(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = a2[3];
  a1[3] = result;
  return result;
}

id sub_1037D4(uint64_t a1, void *a2)
{
  id result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  result = objc_msgSend(a2, "originOfCharacterIndex:", *(_QWORD *)(a1 + 40));
  v4 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8);
  *(_QWORD *)(v4 + 48) = v5;
  *(_QWORD *)(v4 + 56) = v6;
  return result;
}

void sub_10392C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_103B78(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_103CAC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_103DEC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_103EF4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_103FF0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1044D8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_104620(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1046C0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void *sub_104D7C(uint64_t a1, unint64_t a2)
{
  if (a2 >= 0x666666666666667)
    sub_36CEC();
  return operator new(40 * a2);
}

uint64_t KNAnimationTypeFromKPFAnimationType(void *a1)
{
  if ((objc_msgSend(a1, "isEqualToString:", CFSTR("none")) & 1) != 0)
    return 0;
  if ((objc_msgSend(a1, "isEqualToString:", CFSTR("buildIn")) & 1) != 0)
    return 1;
  if ((objc_msgSend(a1, "isEqualToString:", CFSTR("buildOut")) & 1) != 0)
    return 2;
  if ((objc_msgSend(a1, "isEqualToString:", CFSTR("transition")) & 1) != 0)
    return 3;
  if (objc_msgSend(a1, "isEqualToString:", CFSTR("actionBuild")))
    return 4;
  return 0;
}

TSDLayout *__cdecl sub_108B1C(id a1, TSDRep *a2)
{
  return (TSDLayout *)-[TSDRep layout](a2, "layout");
}

id sub_108BB0(uint64_t a1, void *a2)
{
  uint64_t v4;
  id v5;

  v4 = OBJC_IVAR___TSDRep_mCanvas;
  v5 = objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + OBJC_IVAR___TSDRep_mCanvas), "repForLayout:", a2);
  if (!v5)
    v5 = objc_msgSend(objc_alloc((Class)objc_msgSend(a2, "repClassOverride")), "initWithLayout:canvas:", a2, *(_QWORD *)(*(_QWORD *)(a1 + 32) + v4));
  objc_msgSend(v5, "setParentRep:", *(_QWORD *)(a1 + 32));
  return v5;
}

uint64_t sub_108EA0(uint64_t a1, void *a2, void *a3)
{
  return THNSComparisonResultFromInteger((_BYTE *)objc_msgSend(*(id *)(a1 + 32), "indexOfObject:", objc_msgSend(objc_msgSend(a2, "pageController"), "contentNode"))- (_BYTE *)objc_msgSend(*(id *)(a1 + 32), "indexOfObject:", objc_msgSend(objc_msgSend(a3, "pageController"), "contentNode")));
}

void sub_10A2E0(id a1)
{
  qword_543278 = (uint64_t)objc_alloc_init((Class)NSOperationQueue);
  objc_msgSend((id)qword_543278, "setMaxConcurrentOperationCount:", 1);
}

id sub_10A39C(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(*(id *)(a1 + 32), "performSelector:withObject:", *(_QWORD *)(a1 + 40), a2);
}

id sub_10A458(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(*(id *)(a1 + 32), "performSelector:onThread:withObject:waitUntilDone:", *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 40), a2, 0);
}

id sub_10B204(uint64_t a1)
{
  return +[THReflowablePaginationCache _evictOlderCacheFiles:](THReflowablePaginationCache, "_evictOlderCacheFiles:", *(_QWORD *)(a1 + 32));
}

void sub_10B56C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10B574()
{
  objc_end_catch();
  JUMPOUT(0x10B57CLL);
}

void sub_10BC64(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_list va;

  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10BC90(uint64_t a1, uint64_t a2)
{
  _Block_object_assign((void *)(a1 + 40), *(const void **)(a2 + 40), 131);
}

void sub_10BCA0(uint64_t a1)
{
  _Block_object_dispose(*(const void **)(a1 + 40), 131);
}

id sub_10BCAC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  id result;

  v4 = objc_opt_class(THModelContentNode, a2);
  result = (id)TSUDynamicCast(v4, a2);
  if (result)
    return objc_msgSend(result, "accumulateDisplayPageNumbersIntoAbsolutePageIndexMap:AndDisplayPageNumberArray:", *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40), *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40));
  return result;
}

void sub_10C064(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_10C8E4(NSRange *a1, uint64_t a2)
{
  uint64_t v4;
  void *v5;
  double v6;
  NSRange v7;

  v4 = objc_opt_class(THPageHint);
  *(_QWORD *)&v6 = TSUDynamicCast(v4, a2).n128_u64[0];
  if (v5)
  {
    v7.location = (NSUInteger)objc_msgSend(v5, "range", v6);
    NSIntersectionRange(v7, a1[2]);
  }
}

void sub_10CEA8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

id sub_10DF5C(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "performSelector:withObject:afterDelay:", "p_AnimationEnded", 0, 0.0);
}

void sub_113030(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL THTimeIntervalsAlmostEqual(double a1, double a2)
{
  return vabdd_f64(a1, a2) < 0.01;
}

unint64_t THMinIndex(unint64_t a1, unint64_t a2)
{
  unint64_t v2;

  if (a1 >= a2)
    v2 = a2;
  else
    v2 = a1;
  if (a2 == 0x7FFFFFFFFFFFFFFFLL)
    v2 = a1;
  if (a1 == 0x7FFFFFFFFFFFFFFFLL)
    return a2;
  else
    return v2;
}

unint64_t THMaxIndex(unint64_t a1, unint64_t a2)
{
  unint64_t v2;

  if (a1 <= a2)
    v2 = a2;
  else
    v2 = a1;
  if (a2 == 0x7FFFFFFFFFFFFFFFLL)
    v2 = a1;
  if (a1 == 0x7FFFFFFFFFFFFFFFLL)
    return a2;
  else
    return v2;
}

uint64_t THBundle()
{
  if (qword_5432B0 != -1)
    dispatch_once(&qword_5432B0, &stru_429C18);
  return qword_5432A8;
}

void sub_1132E0(id a1)
{
  qword_5432A8 = +[NSBundle bundleForClass:](NSBundle, "bundleForClass:", objc_opt_class(THBundleLookupClass));
}

void sub_113B50(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_113BD8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_113CDC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL sub_113D64(NSRange *a1, void *a2)
{
  NSUInteger v3;
  NSRange v5;

  v5.location = (NSUInteger)objc_msgSend(a2, "annotationStorageRange");
  v5.length = v3;
  return NSIntersectionRange(a1[32], v5).length != 0;
}

void sub_113DE8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_113E3C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_113E94(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_113EEC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

id sub_1143C0(uint64_t a1)
{
  id result;

  objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "view"), "setAlpha:", 1.0);
  result = objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "closeButton"), "setAlpha:", 1.0);
  if (*(_BYTE *)(a1 + 40))
    return objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "scrimView"), "setAlpha:", 0.5);
  return result;
}

id sub_11441C(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "p_didFade");
}

id sub_114E0C(uint64_t a1)
{
  objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "view"), "setAlpha:", 0.0);
  objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "scrimView"), "setAlpha:", 0.0);
  return objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "closeButton"), "setAlpha:", 0.0);
}

id sub_114E54(uint64_t a1)
{
  objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "view"), "setAlpha:", 1.0);
  objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "view"), "removeFromSuperview");
  objc_msgSend(*(id *)(a1 + 32), "setView:", 0);
  objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "scrimView"), "removeFromSuperview");
  objc_msgSend(*(id *)(a1 + 32), "setScrimView:", 0);
  objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "closeButton"), "removeFromSuperview");
  objc_msgSend(*(id *)(a1 + 32), "setCloseButton:", 0);
  objc_msgSend(*(id *)(a1 + 32), "p_didFade");
  return objc_msgSend(*(id *)(a1 + 32), "setIsDismissing:", 0);
}

BOOL sub_118328(uint64_t a1, void *a2)
{
  return objc_msgSend(*(id *)(a1 + 32), "contentNodeForGUID:", objc_msgSend(a2, "annotationContentNodeID")) == 0;
}

id sub_118B5C(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 32), "p_performRenderJob:accessController:location:width:editingWidth:text:range:interfaceStyle:", *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(double *)(a1 + 72), *(double *)(a1 + 80), *(_QWORD *)(a1 + 104));
  objc_msgSend(*(id *)(a1 + 40), "didFinish");
  return objc_msgSend(*(id *)(a1 + 32), "performSelectorOnMainThread:withObject:waitUntilDone:", "p_finishedRenderJob:", *(_QWORD *)(a1 + 40), 0);
}

void sub_118C8C(uint64_t a1)
{
  id v2;
  id v3;
  THNotesViewRenderedAnnotation *v4;

  v4 = objc_alloc_init(THNotesViewRenderedAnnotation);
  v2 = objc_msgSend(*(id *)(a1 + 32), "p_newHighlightLayerForAnnotation:width:storage:text:range:interfaceStyle:maxLines:documentRoot:", objc_msgSend(*(id *)(a1 + 40), "annotation"), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(double *)(a1 + 64), objc_msgSend(*(id *)(a1 + 40), "maxLines"), objc_msgSend(objc_msgSend(*(id *)(a1 + 40), "contentNode"), "documentRoot"));
  -[THNotesViewRenderedAnnotation setHighlightLayer:](v4, "setHighlightLayer:", v2);
  objc_msgSend(v2, "textFrame");
  -[THNotesViewRenderedAnnotation setHighlightTextFrame:](v4, "setHighlightTextFrame:");
  v3 = objc_msgSend(*(id *)(a1 + 32), "p_newHighlightLayerForAnnotation:width:storage:text:range:interfaceStyle:maxLines:documentRoot:", objc_msgSend(*(id *)(a1 + 40), "annotation"), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(double *)(a1 + 96), objc_msgSend(v2, "numberOfLines"), objc_msgSend(objc_msgSend(*(id *)(a1 + 40), "contentNode"), "documentRoot"));
  -[THNotesViewRenderedAnnotation setEditingHighlightLayer:](v4, "setEditingHighlightLayer:", v3);

  +[CATransaction flush](CATransaction, "flush");
  objc_msgSend(*(id *)(a1 + 40), "setRenderedAnnotation:", v4);

}

void sub_1196E4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,char a24)
{
  _Unwind_Resume(exception_object);
}

void sub_119710(uint64_t a1, double a2, double a3, double a4, double a5, double a6)
{
  uint64_t v6;
  unint64_t v7;
  id v14;
  double v15;

  v6 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
  v7 = *(_QWORD *)(v6 + 24);
  if (v7 < *(_QWORD *)(*(_QWORD *)(a1 + 32) + 104))
  {
    v14 = objc_alloc_init((Class)AEHighlightLine);
    v15 = a3 + 1.0;
    objc_msgSend(v14, "setFullLineRect:", a2, v15, a4, a5);
    objc_msgSend(v14, "setCurrentLineRect:", a2, v15, a4, a5);
    objc_msgSend(v14, "setUnderlinePosition:", a6);
    objc_msgSend(*(id *)(a1 + 40), "addObject:", v14);

    v6 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
    v7 = *(_QWORD *)(v6 + 24);
  }
  *(_QWORD *)(v6 + 24) = v7 + 1;
}

void sub_11B040(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_list va;

  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_11B058(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __int128 v4;
  __n128 v5;
  __int128 v6;
  __n128 v7;
  __int128 v8;
  __n128 v9;
  uint64_t v10;
  double v11;
  double v12;
  id result;
  double v14;
  double v15;
  uint64_t v16;
  unint64_t i;
  uint64_t v18;
  double v19;
  double v20;
  double v21;
  float v22;
  float v23;
  double v24;
  double v25;
  double v26;
  double v27;
  float v28;
  float v29;
  float v30;
  float v31;
  uint64_t v32;
  __n128 v33;
  __n128 v34;
  uint64_t v35;
  __n128 v36;
  __n128 v37;
  uint64_t v38;
  uint64_t v39;
  __n128 v40;
  __n128 v41;
  uint64_t v42;
  __n128 v43;
  __n128 v44;
  uint64_t v45;
  double v46;
  double v47;
  float v48;
  float v49;
  float v50;
  float v51;
  char v52;
  char v53;
  uint64_t v54;
  __n128 v55;
  __n128 v56;
  uint64_t v57;
  __n128 v58;
  __n128 v59;
  uint64_t v60;
  __n128 v61;
  __n128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  uint64_t v66;
  __n128 v67;
  __n128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  uint64_t v72;
  __n128 v73;
  __n128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  uint64_t v78;
  __n128 v79;
  __n128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  uint64_t v84;

  v3 = 0;
  v84 = *(_QWORD *)(a2 + 80);
  v78 = *(_QWORD *)(a2 + 168);
  v72 = *(_QWORD *)(a2 + 256);
  v4 = *(_OWORD *)(a2 + 48);
  v81 = *(_OWORD *)(a2 + 32);
  v82 = v4;
  v83 = *(_OWORD *)(a2 + 64);
  v5 = *(__n128 *)(a2 + 16);
  v79 = *(__n128 *)a2;
  v80 = v5;
  v6 = *(_OWORD *)(a2 + 136);
  v75 = *(_OWORD *)(a2 + 120);
  v76 = v6;
  v77 = *(_OWORD *)(a2 + 152);
  v7 = *(__n128 *)(a2 + 104);
  v73 = *(__n128 *)(a2 + 88);
  v74 = v7;
  v8 = *(_OWORD *)(a2 + 224);
  v69 = *(_OWORD *)(a2 + 208);
  v70 = v8;
  v71 = *(_OWORD *)(a2 + 240);
  v9 = *(__n128 *)(a2 + 192);
  v67 = *(__n128 *)(a2 + 176);
  v68 = v9;
  do
  {
    v10 = v3;
    objc_msgSend(*(id *)(a1 + 32), "p_angleFromQuadrant:inRect:", v3, *(double *)(a1 + 48), *(double *)(a1 + 56), *(double *)(a1 + 64), *(double *)(a1 + 72));
    v12 = v11;
    result = objc_msgSend(*(id *)(a1 + 32), "p_angleFromQuadrant:inRect:", ++v3 & 3, *(double *)(a1 + 48), *(double *)(a1 + 56), *(double *)(a1 + 64), *(double *)(a1 + 72));
    v15 = v14;
    if (v10 == 4)
    {
      v16 = 1;
    }
    else
    {
      v16 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 704);
      if (!v16)
        continue;
    }
    for (i = 0; i != v16; ++i)
    {
      v18 = TSDMixAnglesInRadians(result, v12, v15, (double)i / (double)*(unint64_t *)(*(_QWORD *)(a1 + 32) + 704));
      v20 = TSDDeltaFromAngle(v18, v19);
      v23 = *(float *)(a1 + 96);
      v22 = *(float *)(a1 + 100);
      v24 = *(double *)(a1 + 64);
      v25 = *(double *)(a1 + 72);
      if (*(_BYTE *)(a1 + 104))
      {
        v26 = TSDMultiplyPointScalar(v20, v21, *(double *)(a1 + 80));
        *(float *)&v27 = v27;
        v28 = v22 + *(float *)&v27;
        v29 = 1.0 - (float)(v22 + *(float *)&v27) / v25;
        *(float *)&v26 = v26;
        v30 = v23 + *(float *)&v26;
        v32 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24);
        v33.n128_f64[0] = TSDCenterOfRect(*(double *)(a1 + 48), *(double *)(a1 + 56), v24, v25);
        v33.n128_f32[0] = v33.n128_f64[0];
        v34.n128_f32[0] = v34.n128_f64[0];
        v63 = v81;
        v64 = v82;
        v65 = v83;
        v66 = v84;
        v61 = v79;
        v62 = v80;
        TSDGPUUpdateDataSetMetalPoint2DAtIndex(&v61, v32, v33, v34);
        v35 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24);
        v63 = v75;
        v64 = v76;
        v65 = v77;
        v66 = v78;
        v36 = v73;
        v37 = v74;
        v61 = v73;
        v62 = v74;
        v36.n128_u32[0] = 0.5;
        v37.n128_u32[0] = 0.5;
        TSDGPUUpdateDataSetMetalPoint2DAtIndex(&v61, v35, v36, v37);
        v38 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24);
        v63 = v69;
        v64 = v70;
        v65 = v71;
        v66 = v72;
        v61 = v67;
        v62 = v68;
        TSDGPUUpdateDataSetMetalFloatAtIndex(&v61, v38, 1.0);
        v39 = ++*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24);
        v63 = v81;
        v64 = v82;
        v65 = v83;
        v66 = v84;
        v40 = v79;
        v41 = v80;
        v61 = v79;
        v62 = v80;
        v40.n128_f32[0] = v30;
        v41.n128_f32[0] = v28;
        TSDGPUUpdateDataSetMetalPoint2DAtIndex(&v61, v39, v40, v41);
        v42 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24);
        v63 = v75;
        v64 = v76;
        v65 = v77;
        v66 = v78;
        v43 = v73;
        v44 = v74;
        v61 = v73;
        v62 = v74;
        v31 = v30 / v24;
        v43.n128_f32[0] = v31;
        v44.n128_f32[0] = v29;
        TSDGPUUpdateDataSetMetalPoint2DAtIndex(&v61, v42, v43, v44);
        v45 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24);
        v63 = v69;
        v64 = v70;
        v65 = v71;
        v66 = v72;
        v61 = v67;
        v62 = v68;
        result = (id)TSDGPUUpdateDataSetMetalFloatAtIndex(&v61, v45, 0.0);
        ++*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24);
      }
      else
      {
        v46 = TSDMultiplyPointScalar(v20, v21, *(double *)(a1 + 88));
        *(float *)&v47 = v47;
        v48 = v22 + *(float *)&v47;
        *(float *)&v46 = v46;
        v50 = v23 + *(float *)&v46;
        v51 = (float)(v23 + *(float *)&v46) / v24;
        v52 = 1;
        do
        {
          v53 = v52;
          v54 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24);
          v63 = v81;
          v64 = v82;
          v65 = v83;
          v66 = v84;
          v55 = v79;
          v56 = v80;
          v61 = v79;
          v62 = v80;
          v55.n128_f32[0] = v50;
          v56.n128_f32[0] = v48;
          TSDGPUUpdateDataSetMetalPoint2DAtIndex(&v61, v54, v55, v56);
          v57 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24);
          v63 = v75;
          v64 = v76;
          v65 = v77;
          v66 = v78;
          v58 = v73;
          v59 = v74;
          v61 = v73;
          v62 = v74;
          v58.n128_f32[0] = v51;
          v49 = 1.0 - v48 / v25;
          v59.n128_f32[0] = v49;
          TSDGPUUpdateDataSetMetalPoint2DAtIndex(&v61, v57, v58, v59);
          v60 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24);
          v63 = v69;
          v64 = v70;
          v65 = v71;
          v66 = v72;
          v61 = v67;
          v62 = v68;
          result = (id)TSDGPUUpdateDataSetMetalFloatAtIndex(&v61, v60, (float)(v53 & 1));
          v52 = 0;
          ++*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24);
        }
        while ((v53 & 1) != 0);
      }
    }
  }
  while (v3 != 5);
  return result;
}

void sub_11B5C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_list va;

  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_11B5D8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __int128 v4;
  __n128 v5;
  __int128 v6;
  __n128 v7;
  __int128 v8;
  __n128 v9;
  uint64_t v10;
  double v11;
  double v12;
  id result;
  double v14;
  double v15;
  uint64_t v16;
  unint64_t i;
  uint64_t v18;
  double v19;
  double v20;
  double v21;
  float v22;
  double v23;
  float v24;
  float v25;
  float v26;
  float v27;
  char v28;
  char v29;
  uint64_t v30;
  __n128 v31;
  __n128 v32;
  uint64_t v33;
  __n128 v34;
  __n128 v35;
  uint64_t v36;
  __n128 v37;
  __n128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  uint64_t v42;
  __n128 v43;
  __n128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  uint64_t v48;
  __n128 v49;
  __n128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  uint64_t v54;
  __n128 v55;
  __n128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  uint64_t v60;

  v3 = 0;
  v60 = *(_QWORD *)(a2 + 80);
  v54 = *(_QWORD *)(a2 + 168);
  v48 = *(_QWORD *)(a2 + 256);
  v4 = *(_OWORD *)(a2 + 48);
  v57 = *(_OWORD *)(a2 + 32);
  v58 = v4;
  v59 = *(_OWORD *)(a2 + 64);
  v5 = *(__n128 *)(a2 + 16);
  v55 = *(__n128 *)a2;
  v56 = v5;
  v6 = *(_OWORD *)(a2 + 136);
  v51 = *(_OWORD *)(a2 + 120);
  v52 = v6;
  v53 = *(_OWORD *)(a2 + 152);
  v7 = *(__n128 *)(a2 + 104);
  v49 = *(__n128 *)(a2 + 88);
  v50 = v7;
  v8 = *(_OWORD *)(a2 + 224);
  v45 = *(_OWORD *)(a2 + 208);
  v46 = v8;
  v47 = *(_OWORD *)(a2 + 240);
  v9 = *(__n128 *)(a2 + 192);
  v43 = *(__n128 *)(a2 + 176);
  v44 = v9;
  do
  {
    v10 = v3;
    objc_msgSend(*(id *)(a1 + 32), "p_angleFromQuadrant:inRect:", v3, *(double *)(a1 + 48), *(double *)(a1 + 56), *(double *)(a1 + 64), *(double *)(a1 + 72));
    v12 = v11;
    result = objc_msgSend(*(id *)(a1 + 32), "p_angleFromQuadrant:inRect:", ++v3 & 3, *(double *)(a1 + 48), *(double *)(a1 + 56), *(double *)(a1 + 64), *(double *)(a1 + 72));
    v15 = v14;
    if (v10 == 4)
    {
      v16 = 1;
    }
    else
    {
      v16 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 704);
      if (!v16)
        continue;
    }
    for (i = 0; i != v16; ++i)
    {
      v18 = TSDMixAnglesInRadians(result, v12, v15, (double)i / (double)*(unint64_t *)(*(_QWORD *)(a1 + 32) + 704));
      v20 = TSDDeltaFromAngle(v18, v19);
      v22 = TSDMultiplyPointScalar(v20, v21, *(double *)(a1 + 80));
      *(float *)&v23 = v23;
      v24 = *(float *)(a1 + 88) + v22;
      v25 = *(float *)(a1 + 92) + *(float *)&v23;
      v26 = v24 / *(double *)(a1 + 64);
      v27 = 1.0 - v25 / *(double *)(a1 + 72);
      v28 = 1;
      do
      {
        v29 = v28;
        v30 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24);
        v39 = v57;
        v40 = v58;
        v41 = v59;
        v42 = v60;
        v31 = v55;
        v32 = v56;
        v37 = v55;
        v38 = v56;
        v31.n128_f32[0] = v24;
        v32.n128_f32[0] = v25;
        TSDGPUUpdateDataSetMetalPoint2DAtIndex(&v37, v30, v31, v32);
        v33 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24);
        v39 = v51;
        v40 = v52;
        v41 = v53;
        v42 = v54;
        v34 = v49;
        v35 = v50;
        v37 = v49;
        v38 = v50;
        v34.n128_f32[0] = v26;
        v35.n128_f32[0] = v27;
        TSDGPUUpdateDataSetMetalPoint2DAtIndex(&v37, v33, v34, v35);
        v36 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24);
        v39 = v45;
        v40 = v46;
        v41 = v47;
        v42 = v48;
        v37 = v43;
        v38 = v44;
        result = (id)TSDGPUUpdateDataSetMetalFloatAtIndex(&v37, v36, (float)(v29 & 1));
        v28 = 0;
        ++*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24);
      }
      while ((v29 & 1) != 0);
    }
  }
  while (v3 != 5);
  return result;
}

uint64_t sub_11C6F8(uint64_t result)
{
  switch(result)
  {
    case 11:
      result = 12;
      break;
    case 12:
      result = 11;
      break;
    case 13:
      result = 14;
      break;
    case 14:
      result = 13;
      break;
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 25:
    case 26:
    case 27:
    case 28:
    case 29:
    case 30:
    case 33:
    case 34:
    case 35:
    case 36:
    case 37:
    case 38:
    case 39:
    case 40:
      return result;
    case 21:
      result = 24;
      break;
    case 22:
      result = 23;
      break;
    case 23:
      result = 22;
      break;
    case 24:
      result = 21;
      break;
    case 31:
      result = 32;
      break;
    case 32:
      result = 31;
      break;
    case 41:
      result = 42;
      break;
    case 42:
      result = 41;
      break;
    case 43:
      result = 44;
      break;
    case 44:
      result = 43;
      break;
    default:
      switch(result)
      {
        case 'o':
          result = 112;
          break;
        case 'p':
          result = 111;
          break;
        case 'r':
          result = 115;
          break;
        case 's':
          result = 114;
          break;
        case 'y':
          result = 122;
          break;
        case 'z':
          result = 121;
          break;
        default:
          return result;
      }
      break;
  }
  return result;
}

id sub_11D830(uint64_t a1)
{
  return +[TSDBitmapImageProvider temporaryCGImageSourceForImageData:](TSDBitmapImageProvider, "temporaryCGImageSourceForImageData:", *(_QWORD *)(a1 + 32));
}

NSArray *__cdecl sub_121580(id a1, NSArray *a2)
{
  return (NSArray *)&__NSArray0__struct;
}

id sub_121A68(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "p_cleanupGlossaryPopover");
}

uint64_t sub_12262C(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 32);
  if (result)
    return (*(uint64_t (**)(void))(result + 16))();
  return result;
}

void sub_125A94(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_125AAC(uint64_t a1, uint64_t a2)
{
  _Block_object_assign((void *)(a1 + 40), *(const void **)(a2 + 40), 131);
}

void sub_125ABC(uint64_t a1)
{
  _Block_object_dispose(*(const void **)(a1 + 40), 131);
}

id sub_125AC8(uint64_t a1)
{
  return objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40), "setActivityController:", 0);
}

void sub_125DB4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_125DE0(uint64_t a1)
{
  return objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40), "setActivityController:", 0);
}

id sub_12605C(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "p_deleteSelectedNotes");
}

void sub_126750(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_126818(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_126924(uint64_t a1)
{
  NSObject *v2;
  _QWORD block[5];

  v2 = objc_msgSend(*(id *)(a1 + 32), "dispatchQueue");
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_12698C;
  block[3] = &unk_426DD0;
  block[4] = *(_QWORD *)(a1 + 32);
  dispatch_sync(v2, block);
}

id sub_12698C(uint64_t a1)
{
  id result;

  objc_msgSend(*(id *)(a1 + 32), "setReceivedPreRoll:", 1);
  result = objc_msgSend(*(id *)(a1 + 32), "presentCompletionBlock");
  if (result)
  {
    (*((void (**)(void))objc_msgSend(*(id *)(a1 + 32), "presentCompletionBlock") + 2))();
    return objc_msgSend(*(id *)(a1 + 32), "setPresentCompletionBlock:", 0);
  }
  return result;
}

void sub_126E6C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
  _Block_object_dispose(&a27, 8);
  _Unwind_Resume(a1);
}

id *sub_126E84(id *result, uint64_t a2)
{
  if (*(_BYTE *)(*((_QWORD *)result[5] + 1) + 24))
  {
    if (*((_BYTE *)result + 64))
      return (id *)objc_msgSend(result[4], "bookViewWillAnimateRotationToSize:withContext:", a2, *((double *)result + 6), *((double *)result + 7));
  }
  return result;
}

id sub_126EB4(uint64_t a1, uint64_t a2)
{
  void *v4;
  double v5;
  double v6;

  if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) && *(_BYTE *)(a1 + 64))
    objc_msgSend(*(id *)(a1 + 32), "bookViewDidAnimateRotationToSize:withContext:", a2, *(double *)(a1 + 48), *(double *)(a1 + 56));
  v4 = *(void **)(a1 + 32);
  v5 = *(double *)(a1 + 48);
  v6 = *(double *)(a1 + 56);
  if (*(_BYTE *)(a1 + 64))
    return objc_msgSend(v4, "bookViewDidRotateTransitionToSize:withContext:", a2, v5, v6);
  else
    return objc_msgSend(v4, "bookViewDidTransitionToSize:withContext:", a2, v5, v6);
}

uint64_t sub_127D50(uint64_t a1)
{
  uint64_t result;

  objc_msgSend(*(id *)(a1 + 32), "p_setMoviePlayerBackgroundColor:animated:", objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "p_curtainColor"), "UIColor"), 0);
  result = *(_QWORD *)(a1 + 40);
  if (result)
    return (*(uint64_t (**)(void))(result + 16))();
  return result;
}

id sub_127ED8(uint64_t a1)
{
  id v2;
  id v3;
  id v4;
  uint64_t v5;
  void *v6;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  _BYTE v12[128];

  v8 = 0u;
  v9 = 0u;
  v10 = 0u;
  v11 = 0u;
  v2 = objc_msgSend(objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "moviePlayerViewController", 0), "view"), "subviews");
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v9;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v9 != v5)
          objc_enumerationMutation(v2);
        objc_msgSend(*(id *)(*((_QWORD *)&v8 + 1) + 8 * (_QWORD)v6), "setBackgroundColor:", *(_QWORD *)(a1 + 40));
        v6 = (char *)v6 + 1;
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
    }
    while (v4);
  }
  return objc_msgSend(objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "moviePlayerViewController"), "view"), "setBackgroundColor:", *(_QWORD *)(a1 + 40));
}

uint64_t sub_1281C0(uint64_t a1)
{
  uint64_t result;

  objc_msgSend(*(id *)(a1 + 32), "p_setMoviePlayerBackgroundColor:animated:", objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "p_curtainColor"), "UIColor"), 0);
  result = *(_QWORD *)(a1 + 40);
  if (result)
    return (*(uint64_t (**)(void))(result + 16))();
  return result;
}

uint64_t sub_128214(uint64_t a1)
{
  uint64_t result;

  objc_msgSend(*(id *)(a1 + 32), "p_setMoviePlayerBackgroundColor:animated:", objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "p_curtainColor"), "UIColor"), 0);
  result = *(_QWORD *)(a1 + 40);
  if (result)
    return (*(uint64_t (**)(void))(result + 16))();
  return result;
}

uint64_t sub_128268(uint64_t a1)
{
  uint64_t result;

  -[BCAudioMuxingCoordinator notifyPlaybackWillStart:](+[BCAudioMuxingCoordinator sharedInstance](BCAudioMuxingCoordinator, "sharedInstance"), "notifyPlaybackWillStart:", *(_QWORD *)(a1 + 32));
  objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "moviePlayerViewController"), "setShowsPlaybackControls:", 1);
  objc_msgSend(objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "moviePlayerViewController"), "player"), "play");
  result = *(_QWORD *)(a1 + 40);
  if (result)
    return (*(uint64_t (**)(void))(result + 16))();
  return result;
}

id sub_1283A4(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "setNeedsWhitePointAdaptivityStyleUpdate");
}

id sub_128410(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "setNeedsWhitePointAdaptivityStyleUpdate");
}

id sub_12A464(uint64_t a1)
{
  int v2;
  void *v3;
  double v4;

  v2 = *(unsigned __int8 *)(a1 + 40);
  v3 = *(void **)(a1 + 32);
  if (v2)
  {
    v4 = 0.0;
  }
  else
  {
    objc_msgSend(v3, "setHidden:", 0);
    v3 = *(void **)(a1 + 32);
    v4 = 1.0;
  }
  return objc_msgSend(v3, "setAlpha:", v4);
}

id sub_12A4A4(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "setHidden:", *(unsigned __int8 *)(a1 + 40));
}

id sub_12B420(uint64_t a1)
{
  void *v2;

  if (*(_QWORD *)(a1 + 32))
  {
    objc_msgSend(objc_msgSend(*(id *)(a1 + 40), "contentContainerView"), "addSubview:", objc_msgSend(*(id *)(a1 + 32), "view"));
    v2 = *(void **)(a1 + 32);
  }
  else
  {
    v2 = 0;
  }
  objc_msgSend(objc_msgSend(v2, "view"), "setFrame:", *(double *)(a1 + 56), *(double *)(a1 + 64), *(double *)(a1 + 72), *(double *)(a1 + 80));
  return objc_msgSend(objc_msgSend(*(id *)(a1 + 48), "view"), "setFrame:", *(double *)(a1 + 88), *(double *)(a1 + 96), *(double *)(a1 + 104), *(double *)(a1 + 112));
}

uint64_t sub_12B4C0(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "view"), "removeFromSuperview");
  objc_msgSend(*(id *)(a1 + 32), "removeFromParentViewController");
  objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "view"), "setFrame:", *(double *)(a1 + 64), *(double *)(a1 + 72), *(double *)(a1 + 80), *(double *)(a1 + 88));
  objc_msgSend(*(id *)(a1 + 40), "didMoveToParentViewController:", *(_QWORD *)(a1 + 48));
  *(_BYTE *)(*(_QWORD *)(a1 + 48) + 16) &= 0xFCu;
  objc_msgSend(*(id *)(a1 + 48), "didPresentViewController:", *(_QWORD *)(a1 + 40));
  result = *(_QWORD *)(a1 + 56);
  if (result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(result + 16))(result, a2);
  return result;
}

id sub_12DB94(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "p_togglePanelDescriptionExpanded");
}

int64_t sub_12E494(id a1, id a2, id a3)
{
  id v5;
  id v7;

  v5 = objc_msgSend(a2, "integerValue");
  if ((uint64_t)v5 > (uint64_t)objc_msgSend(a3, "integerValue"))
    return 1;
  v7 = objc_msgSend(a2, "integerValue");
  if ((uint64_t)v7 >= (uint64_t)objc_msgSend(a3, "integerValue"))
    return 0;
  else
    return -1;
}

uint64_t sub_13013C(uint64_t a1)
{
  uint64_t result;

  if ((objc_opt_respondsToSelector(*(_QWORD *)(a1 + 32), "expandableExpandedPresentationDidEnd") & 1) != 0)
    objc_msgSend(*(id *)(a1 + 32), "expandableExpandedPresentationDidEnd");
  result = *(_QWORD *)(a1 + 40);
  if (result)
    return (*(uint64_t (**)(void))(result + 16))();
  return result;
}

void sub_1305A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
  uint64_t v29;

  _Block_object_dispose(&a29, 8);
  _Block_object_dispose((const void *)(v29 - 144), 8);
  _Unwind_Resume(a1);
}

id sub_1305C8(uint64_t a1, uint64_t a2)
{
  _OWORD *v3;
  __int128 v5;
  __int128 v6;
  __int128 v7;

  if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) && *(_BYTE *)(a1 + 72))
  {
    objc_msgSend(*(id *)(a1 + 32), "bookViewWillAnimateRotationToSize:withContext:", a2, *(double *)(a1 + 56), *(double *)(a1 + 64));
    v3 = *(_OWORD **)(*(_QWORD *)(a1 + 48) + 8);
    v3[2] = v5;
    v3[3] = v6;
    v3[4] = v7;
  }
  return objc_msgSend(*(id *)(a1 + 32), "p_updateScrollViewLayout");
}

id sub_130638(uint64_t a1, uint64_t a2)
{
  void *v4;
  _OWORD *v5;
  double v6;
  double v7;
  __int128 v8;
  void *v9;
  double v10;
  double v11;
  _OWORD v13[3];

  if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) && *(_BYTE *)(a1 + 72))
  {
    v4 = *(void **)(a1 + 32);
    v5 = *(_OWORD **)(*(_QWORD *)(a1 + 48) + 8);
    v6 = *(double *)(a1 + 56);
    v7 = *(double *)(a1 + 64);
    v8 = v5[3];
    v13[0] = v5[2];
    v13[1] = v8;
    v13[2] = v5[4];
    objc_msgSend(v4, "bookViewDidAnimateRotationToSize:withContext:transform:", a2, v13, v6, v7);
  }
  v9 = *(void **)(a1 + 32);
  v10 = *(double *)(a1 + 56);
  v11 = *(double *)(a1 + 64);
  if (*(_BYTE *)(a1 + 72))
    return objc_msgSend(v9, "bookViewDidRotateTransitionToSize:withContext:", a2, v10, v11);
  else
    return objc_msgSend(v9, "bookViewDidTransitionToSize:withContext:", a2, v10, v11);
}

id sub_1323AC(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "setNeedsWhitePointAdaptivityStyleUpdate");
}

uint64_t sub_133104(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 32);
  if (result)
    return (*(uint64_t (**)(void))(result + 16))();
  return result;
}

id sub_133DC0(uint64_t a1)
{
  return objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 24), "setFrame:", *(double *)(a1 + 40), *(double *)(a1 + 48), *(double *)(a1 + 56), *(double *)(a1 + 64));
}

uint64_t sub_133DD4(uint64_t result)
{
  *(_BYTE *)(*(_QWORD *)(result + 32) + 10) = 0;
  return result;
}

uint64_t sub_1350E8(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;

  result = objc_opt_respondsToSelector(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 32), "expandedPanel:willChangeToVisible:");
  if ((result & 1) != 0)
  {
    v3 = *(_QWORD *)(a1 + 32);
    if (*(_QWORD *)(v3 + 80))
    {
      result = (uint64_t)objc_msgSend(*(id *)(v3 + 32), "expandedPanel:willChangeToVisible:", 0, *(unsigned __int8 *)(a1 + 40));
      v3 = *(_QWORD *)(a1 + 32);
    }
    if (*(_QWORD *)(v3 + 88))
    {
      result = (uint64_t)objc_msgSend(*(id *)(v3 + 32), "expandedPanel:willChangeToVisible:", 1, *(unsigned __int8 *)(a1 + 40));
      v3 = *(_QWORD *)(a1 + 32);
    }
    if (*(_QWORD *)(v3 + 96))
      return (uint64_t)objc_msgSend(*(id *)(v3 + 32), "expandedPanel:willChangeToVisible:", 2, *(unsigned __int8 *)(a1 + 40));
  }
  return result;
}

id sub_135178(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;

  +[CATransaction begin](CATransaction, "begin");
  +[CATransaction setDisableActions:](CATransaction, "setDisableActions:", 1);
  --*(_QWORD *)(*(_QWORD *)(a1 + 32) + 72);
  v2 = *(_QWORD **)(a1 + 32);
  if (!v2[9])
  {
    objc_msgSend(objc_msgSend(v2, "closeButton"), "setTsdAlpha:", *(double *)(a1 + 48));
    objc_msgSend(objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "topPanel"), "view"), "setTsdAlpha:", *(double *)(a1 + 56));
    objc_msgSend(objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "bottomPanel"), "view"), "setTsdAlpha:", *(double *)(a1 + 64));
    objc_msgSend(objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "controlPanel"), "view"), "setTsdAlpha:", *(double *)(a1 + 72));
    objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "closeButton"), "setHidden:", *(double *)(a1 + 48) == 0.0);
    objc_msgSend(objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "topPanel"), "view"), "setHidden:", *(double *)(a1 + 56) == 0.0);
    objc_msgSend(objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "bottomPanel"), "view"), "setHidden:", *(double *)(a1 + 64) == 0.0);
    objc_msgSend(objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "controlPanel"), "view"), "setHidden:", *(double *)(a1 + 72) == 0.0);
    objc_msgSend(objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "topPanel"), "view"), "alphaAnimationDidEnd");
    objc_msgSend(objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "bottomPanel"), "view"), "alphaAnimationDidEnd");
    objc_msgSend(objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "controlPanel"), "view"), "alphaAnimationDidEnd");
  }
  v3 = *(_QWORD *)(a1 + 40);
  if (v3)
    (*(void (**)(void))(v3 + 16))();
  return +[CATransaction commit](CATransaction, "commit");
}

id sub_13BC1C(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "p_togglePanelDescriptionExpanded");
}

id sub_13CF38(uint64_t a1)
{
  return objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 320), "setMinimizeInfoChange:", 0);
}

void sub_13D9DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v10;
  va_list va;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  va_list va1;

  va_start(va1, a9);
  va_start(va, a9);
  v10 = va_arg(va1, _QWORD);
  v12 = va_arg(va1, _QWORD);
  v13 = va_arg(va1, _QWORD);
  v14 = va_arg(va1, _QWORD);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

id sub_13DA0C(_QWORD *a1, void *a2)
{
  id v3;
  uint64_t v4;
  id v5;
  id result;
  id v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  void *v13;
  void *v14;
  double v15;
  double v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  _BYTE v21[128];

  v3 = objc_msgSend(a2, "layoutForInfo:", a1[4]);
  objc_msgSend(objc_msgSend(v3, "geometry"), "size");
  *(_QWORD *)(*(_QWORD *)(a1[5] + 8) + 24) = v4;
  v19 = 0u;
  v20 = 0u;
  v17 = 0u;
  v18 = 0u;
  v5 = objc_msgSend(v3, "children", 0);
  result = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v17, v21, 16);
  if (result)
  {
    v7 = result;
    v8 = *(_QWORD *)v18;
    do
    {
      v9 = 0;
      do
      {
        if (*(_QWORD *)v18 != v8)
          objc_enumerationMutation(v5);
        v10 = *(_QWORD *)(*((_QWORD *)&v17 + 1) + 8 * (_QWORD)v9);
        v11 = objc_opt_class(THWReviewTextAnswerLayout);
        v12 = TSUDynamicCast(v11, v10).n128_u64[0];
        v14 = v13;
        if (!v13)
          v12 = BCReportAssertionFailureWithMessage("/Library/Caches/com.apple.xbs/Sources/Alder/bliss/Classes/Widgets/Review/THWReviewTextMultipleChoiceLayoutHelper.m", 70, "-[THWReviewTextMultipleChoiceLayoutHelper answerStackSizeForWidth:]_block_invoke", "answerLayout", 0).n128_u64[0];
        v15 = *(double *)(*(_QWORD *)(a1[6] + 8) + 24);
        objc_msgSend(v14, "textWidth", *(double *)&v12);
        if (v15 >= v16)
          v16 = v15;
        *(double *)(*(_QWORD *)(a1[6] + 8) + 24) = v16;
        v9 = (char *)v9 + 1;
      }
      while (v7 != v9);
      result = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v17, v21, 16);
      v7 = result;
    }
    while (result);
  }
  return result;
}

id sub_13E9CC(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "p_updateWithDelegate");
}

uint64_t sub_13E9D4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

id sub_140090(uint64_t a1)
{
  +[CATransaction begin](CATransaction, "begin");
  objc_msgSend(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 40) + 64), "canvas"), "contentsScale");
  objc_msgSend(*(id *)(a1 + 32), "setRasterizationScale:");
  objc_msgSend(*(id *)(a1 + 32), "setShouldRasterize:", *(unsigned __int8 *)(a1 + 48));
  objc_msgSend(*(id *)(a1 + 32), "spi_setPreloadsCache:", *(unsigned __int8 *)(a1 + 48));
  +[CATransaction commit](CATransaction, "commit");
  return +[CATransaction flush](CATransaction, "flush");
}

id sub_1417C4(uint64_t a1)
{
  int v2;
  int v3;
  id v4;
  uint64_t v5;
  double v6;

  +[CATransaction begin](CATransaction, "begin");
  +[CATransaction setValue:forKey:](CATransaction, "setValue:forKey:", kCFBooleanTrue, kCATransactionDisableActions);
  objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "p_objectForLayer:key:", objc_msgSend(*(id *)(a1 + 32), "targetLayer"), CFSTR("opacity")), "floatValue");
  v3 = v2;
  objc_msgSend(*(id *)(a1 + 32), "teardownTarget");
  v4 = objc_msgSend(*(id *)(a1 + 32), "targetLayer");
  v5 = *(_QWORD *)(a1 + 40);
  if (v5)
    (*(void (**)(void))(v5 + 16))();
  objc_msgSend(*(id *)(a1 + 32), "didAnimate");
  if (v4)
  {
    objc_msgSend(v4, "setHidden:", 0);
    LODWORD(v6) = v3;
    objc_msgSend(v4, "setOpacity:", v6);
  }
  +[CATransaction commit](CATransaction, "commit");
  objc_msgSend(*(id *)(a1 + 32), "didAnimatePostCommit");
  return objc_msgSend(+[UIWindow keyWindow](UIWindow, "keyWindow"), "endDisablingInterfaceAutorotation");
}

id sub_145984(uint64_t a1)
{
  uint64_t v2;
  double v3;
  uint64_t v4;

  objc_msgSend(*(id *)(a1 + 32), "p_stop");
  v2 = objc_opt_class(THWAVTransportController);
  *(_QWORD *)&v3 = TSUDynamicCast(v2, objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "movieLayout"), "mediaListener")).n128_u64[0];
  return objc_msgSend(+[THWAVController sharedController](THWAVController, "sharedController", v3), "transportControllerDidStopPlaying:", v4);
}

uint64_t sub_1459E4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

id sub_145AF8(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "setSeeking:", 0);
}

id sub_145C80(uint64_t a1)
{
  id result;

  result = objc_msgSend(*(id *)(a1 + 32), "isPlaying");
  if ((_DWORD)result)
  {
    objc_msgSend(*(id *)(a1 + 32), "stop");
    objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "movieInfo"), "startTime");
    return objc_msgSend(*(id *)(a1 + 32), "setTimeToBeginPlaybackAt:");
  }
  return result;
}

id sub_14611C(uint64_t a1)
{
  id result;
  uint64_t v3;
  double v4;
  uint64_t v5;

  result = objc_msgSend(*(id *)(a1 + 32), "isPlaying");
  if ((_DWORD)result)
  {
    objc_msgSend(*(id *)(a1 + 32), "changeCurrentTimeTo:", 0.0);
    objc_msgSend(*(id *)(a1 + 32), "p_stop");
    v3 = objc_opt_class(THWAVTransportController);
    *(_QWORD *)&v4 = TSUDynamicCast(v3, objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "movieLayout"), "mediaListener")).n128_u64[0];
    return objc_msgSend(+[THWAVController sharedController](THWAVController, "sharedController", v4), "transportControllerDidStartAutoplaying:", v5);
  }
  return result;
}

uint64_t sub_1461A0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

void sub_147360(uint64_t a1)
{
  id v2;
  _QWORD v3[6];

  v2 = objc_msgSend(*(id *)(a1 + 32), "p_largeThumbnail");
  if (v2)
  {
    v3[0] = _NSConcreteStackBlock;
    v3[1] = 3221225472;
    v3[2] = sub_1473D4;
    v3[3] = &unk_426E28;
    v3[4] = *(_QWORD *)(a1 + 32);
    v3[5] = v2;
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, v3);
  }
}

id sub_1473D4(id result)
{
  uint64_t v1;
  _QWORD *v2;
  double v3;
  double v4;

  v1 = *((_QWORD *)result + 4);
  if (*(_DWORD *)(v1 + 80) == 1)
  {
    v2 = result;
    *(_DWORD *)(v1 + 80) = 2;
    objc_msgSend(*(id *)(*((_QWORD *)result + 4) + 64), "setContents:", objc_msgSend(*((id *)result + 5), "CGImage"));
    LODWORD(v3) = 1.0;
    objc_msgSend(*(id *)(v2[4] + 64), "setOpacity:", v3);
    LODWORD(v4) = 1.0;
    objc_msgSend(*(id *)(v2[4] + 72), "setOpacity:", v4);
    objc_msgSend(*(id *)(v2[4] + 64), "setHidden:", 0);
    return objc_msgSend(*(id *)(v2[4] + 72), "setHidden:", 0);
  }
  return result;
}

_QWORD *sub_147648(_QWORD *result)
{
  uint64_t v1;
  _QWORD *v2;

  v1 = result[4];
  if (*(_DWORD *)(v1 + 80) == 3)
  {
    v2 = result;
    *(_DWORD *)(v1 + 80) = 0;
    objc_msgSend(*(id *)(result[4] + 64), "setContents:", 0);
    objc_msgSend(*(id *)(v2[4] + 64), "setHidden:", 1);
    return objc_msgSend(*(id *)(v2[4] + 72), "setHidden:", 1);
  }
  return result;
}

id sub_1479E0(uint64_t a1)
{
  double v2;
  double x;
  double v4;
  double y;
  _QWORD *v6;
  void *v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;

  if (objc_msgSend(*(id *)(a1 + 32), "parentRep"))
  {
    objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "parentRep"), "frameInUnscaledCanvas");
    x = v2;
    y = v4;
  }
  else
  {
    x = CGPointZero.x;
    y = CGPointZero.y;
  }
  v6 = *(_QWORD **)(a1 + 32);
  v7 = (void *)v6[39];
  objc_msgSend(v6, "frameInUnscaledCanvas");
  v9 = v8;
  v11 = v10;
  v13 = v12;
  v15 = v14;
  objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "interactiveCanvasController"), "viewScale");
  return objc_msgSend(v7, "setUnscaledFrame:unscaledLayerOffset:viewScale:", v9, v11, v13, v15, x, y, v16);
}

id sub_148BBC(uint64_t a1, void *a2, uint64_t a3)
{
  return objc_msgSend(a2, "setLayer:", objc_msgSend(*(id *)(a1 + 32), "p_layerForState:pageIndex:", *(_QWORD *)(*(_QWORD *)(a1 + 32) + 297) == a3, a3));
}

id sub_149D40(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 32), "setIsPressableAtPoint:", 0);
  objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "pressableRep"), "setHandlingPress:", 0);
  return objc_msgSend(*(id *)(a1 + 32), "p_invokeAction");
}

id sub_149D7C(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 32), "setIsPressableAtPoint:", 0);
  objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "pressableRep"), "setHandlingPress:", 0);
  return objc_msgSend(*(id *)(a1 + 32), "p_invokeAction");
}

id sub_149E08(uint64_t a1)
{
  void *v1;
  _QWORD v3[5];

  v1 = *(void **)(a1 + 32);
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_149E5C;
  v3[3] = &unk_426DD0;
  v3[4] = v1;
  return objc_msgSend(v1, "p_recoilAnimationWithCompletionBlock:", v3);
}

id sub_149E5C(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "p_invokeAction");
}

id sub_150D68(uint64_t a1)
{
  double v1;

  if (*(_BYTE *)(a1 + 40))
    v1 = 0.0;
  else
    v1 = 1.0;
  return objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "movieUIView"), "setAlpha:", v1);
}

id sub_150DA0(uint64_t a1)
{
  return objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "movieUIView"), "setHidden:", *(unsigned __int8 *)(a1 + 40));
}

id sub_150EA8(uint64_t a1)
{
  return objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "transportController"), "play");
}

id sub_150F24(uint64_t a1)
{
  return objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "transportController"), "pause");
}

id sub_150FB4(uint64_t a1)
{
  unsigned int v2;
  void *v3;

  v2 = objc_msgSend(*(id *)(a1 + 32), "movieIsPlaying");
  v3 = *(void **)(a1 + 32);
  if (v2)
    return objc_msgSend(v3, "pause");
  else
    return objc_msgSend(v3, "play");
}

id sub_151400(id *a1)
{
  id result;
  id v3;
  id v4;

  objc_msgSend(a1[4], "notifyPlaybackWillStart:", a1[5]);
  result = objc_msgSend(a1[5], "playingTransportController");
  if (result != a1[6])
  {
    v3 = objc_msgSend(objc_msgSend(objc_msgSend(a1[5], "playingTransportController"), "movieLayout"), "info");
    if (v3 != objc_msgSend(objc_msgSend(a1[6], "movieLayout"), "info"))
      objc_msgSend(objc_msgSend(a1[5], "playingTransportController"), "stop");
    objc_msgSend(a1[5], "setPlayingTransportController:", a1[6]);
    v4 = objc_msgSend(objc_msgSend(a1[5], "autoplayingTransportControllers"), "allObjects");
    objc_msgSend(objc_msgSend(a1[5], "autoplayingTransportControllers"), "removeAllObjects");
    return objc_msgSend(v4, "makeObjectsPerformSelector:", "stop");
  }
  return result;
}

id sub_1515E4(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 32), "notifyPlaybackWillStart:", *(_QWORD *)(a1 + 40));
  return objc_msgSend(objc_msgSend(*(id *)(a1 + 40), "autoplayingTransportControllers"), "addObject:", *(_QWORD *)(a1 + 48));
}

id sub_1549D0(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 32), "pConfigureScrubberVisibility");
  return objc_msgSend(*(id *)(a1 + 32), "pConfigureHUDVisibility");
}

uint64_t sub_1549F8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

id sub_157D38(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(*(id *)(a1 + 32), "paintRect:inContext:", a2, TSDRectWithSize(a1));
}

id sub_1583D0(uint64_t a1)
{
  void *v2;

  v2 = *(void **)(a1 + 32);
  if (v2 != *(void **)(a1 + 40))
  {
    objc_msgSend(*(id *)(a1 + 40), "setCalloutsVisible:animated:", 1, 0);
    v2 = *(void **)(a1 + 32);
  }
  return objc_msgSend(v2, "setCalloutsVisible:animated:", 1, 1);
}

id sub_159170(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "p_togglePanelDescriptionExpanded");
}

BOOL sub_1595EC(id a1, TSDRep *a2)
{
  return -[TSDRep conformsToProtocol:](a2, "conformsToProtocol:", &OBJC_PROTOCOL___TSDGestureTarget);
}

uint64_t sub_15B4C0(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  objc_msgSend(*(id *)(a1 + 32), "p_adjustScrollViewContentInsets");
  objc_msgSend(objc_msgSend(*(id *)(a1 + 40), "trackingController"), "popDisableUpdates");
  objc_msgSend(objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "interactiveCanvasController"), "trackingController"), "popDisableUpdates");
  objc_msgSend(objc_msgSend(objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "stageCanvasController"), "scrollContentICC"), "trackingController"), "popDisableUpdates");
  objc_msgSend(*(id *)(a1 + 40), "invalidateReps");
  objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "interactiveCanvasController"), "invalidateReps");
  objc_msgSend(objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "stageCanvasController"), "scrollContentICC"), "invalidateReps");
  objc_msgSend(objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "layout"), "sidebarLayout"), "clearPreviousCallout");
  if (*(_QWORD *)(a1 + 56))
    objc_msgSend(*(id *)(a1 + 40), "invalidateLayers");
  objc_msgSend(objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "stageCanvasController"), "scrollContainerICC"), "invalidateLayers");
  result = *(_QWORD *)(a1 + 48);
  if (result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(result + 16))(result, a2);
  return result;
}

id sub_15B780(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 32), "applyScrollingPolicy");
  return objc_msgSend(*(id *)(a1 + 32), "setUserInteractionEnabled:", 1);
}

id sub_15E27C(uint64_t a1)
{
  double v2;
  double v3;
  uint64_t v4;
  double v5;
  double v6;

  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 32), "autosizedCanvasControllerDidLayout:");
  objc_msgSend(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 16), "layoutController"), "rectOfTopLevelLayouts");
  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 32), "autosizedCanvasController:adjustedBoundsRectForTopLevelBoundsRect:");
  v4 = *(_QWORD *)(a1 + 32);
  *(double *)(v4 + 48) = v2;
  *(double *)(v4 + 56) = v3;
  if (v2 <= 0.0)
    v5 = 1.0;
  else
    v5 = v2;
  if (v3 <= 0.0)
    v6 = 1.0;
  else
    v6 = v3;
  objc_msgSend(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 24), "canvasLayer"), "setUnscaledSize:", v5, v6);
  return objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 32), "autosizedCanvasControllerDidResize:");
}

void sub_15E708(id a1, THPageLayerViewProvider *a2)
{
  objc_msgSend(objc_msgSend(-[THPageLayerViewProvider view](a2, "view"), "layer"), "removeAnimationForKey:", CFSTR("displacement"));
  objc_msgSend(objc_msgSend(-[THPageLayerViewProvider borderView](a2, "borderView"), "layer"), "removeAnimationForKey:", CFSTR("displacement"));
}

void sub_15E764(id a1, THPageLayerViewProvider *a2)
{
  objc_msgSend(objc_msgSend(-[THPageLayerViewProvider view](a2, "view"), "layer"), "removeAnimationForKey:", CFSTR("displacement"));
  objc_msgSend(objc_msgSend(-[THPageLayerViewProvider borderView](a2, "borderView"), "layer"), "removeAnimationForKey:", CFSTR("displacement"));
  objc_msgSend(objc_msgSend(-[THPageLayerViewProvider view](a2, "view"), "layer"), "removeAnimationForKey:", CFSTR("opacity"));
  objc_msgSend(objc_msgSend(-[THPageLayerViewProvider borderView](a2, "borderView"), "layer"), "removeAnimationForKey:", CFSTR("opacity"));
  -[THPageLayerViewProvider setVisible:](a2, "setVisible:", 1);
}

void sub_15E7FC(id a1, THPageLayerViewProvider *a2)
{
  CABasicAnimation *v3;
  double v4;
  double v5;

  v3 = +[CABasicAnimation animationWithKeyPath:](CABasicAnimation, "animationWithKeyPath:", CFSTR("opacity"));
  -[CABasicAnimation setRemovedOnCompletion:](v3, "setRemovedOnCompletion:", 0);
  -[CABasicAnimation setDuration:](v3, "setDuration:", 0.1);
  -[CABasicAnimation setBeginTime:](v3, "setBeginTime:", 0.0);
  -[CABasicAnimation setBeginTimeMode:](v3, "setBeginTimeMode:", kCAAnimationRelative);
  -[CABasicAnimation setFillMode:](v3, "setFillMode:", kCAFillModeForwards);
  LODWORD(v4) = 0;
  -[CABasicAnimation setToValue:](v3, "setToValue:", +[NSNumber numberWithFloat:](NSNumber, "numberWithFloat:", v4));
  LODWORD(v5) = 0;
  -[CABasicAnimation setFromValue:](v3, "setFromValue:", +[NSNumber numberWithFloat:](NSNumber, "numberWithFloat:", v5));
  objc_msgSend(objc_msgSend(-[THPageLayerViewProvider view](a2, "view"), "layer"), "addAnimation:forKey:", v3, CFSTR("opacity"));
  objc_msgSend(objc_msgSend(-[THPageLayerViewProvider borderView](a2, "borderView"), "layer"), "addAnimation:forKey:", v3, CFSTR("opacity"));
  -[THPageLayerViewProvider setVisible:](a2, "setVisible:", 0);
}

id sub_15E99C(uint64_t a1, void *a2, uint64_t a3)
{
  _BOOL8 v4;
  double v6;
  float v7;
  float v8;
  double v9;
  CABasicAnimation *v10;
  double v11;

  if (*(_QWORD *)(a1 + 40) == a3)
  {
    objc_msgSend(objc_msgSend(objc_msgSend(a2, "view"), "layer"), "removeAnimationForKey:", CFSTR("opacity"));
    objc_msgSend(objc_msgSend(objc_msgSend(a2, "borderView"), "layer"), "removeAnimationForKey:", CFSTR("opacity"));
    v4 = 1;
  }
  else
  {
    v6 = fmin(fmax(1.0 / (*(double *)(a1 + 48) - *(double *)(a1 + 56)) * (*(double *)(a1 + 64) - *(double *)(a1 + 56)), 0.0), 1.0);
    *(float *)&v6 = v6;
    *(float *)&v6 = fabsf(*(float *)&v6);
    objc_msgSend(*(id *)(a1 + 32), "_solveForInput:", v6);
    v8 = v7;
    v9 = v7;
    objc_msgSend(objc_msgSend(objc_msgSend(a2, "view"), "layer"), "setOpaque:", 0);
    v10 = +[CABasicAnimation animationWithKeyPath:](CABasicAnimation, "animationWithKeyPath:", CFSTR("opacity"));
    -[CABasicAnimation setRemovedOnCompletion:](v10, "setRemovedOnCompletion:", 0);
    -[CABasicAnimation setDuration:](v10, "setDuration:", *(double *)(a1 + 72));
    -[CABasicAnimation setBeginTime:](v10, "setBeginTime:", 0.0);
    -[CABasicAnimation setBeginTimeMode:](v10, "setBeginTimeMode:", kCAAnimationRelative);
    -[CABasicAnimation setFillMode:](v10, "setFillMode:", kCAFillModeBoth);
    *(float *)&v11 = v8;
    -[CABasicAnimation setToValue:](v10, "setToValue:", +[NSNumber numberWithFloat:](NSNumber, "numberWithFloat:", v11));
    -[CABasicAnimation setFromValue:](v10, "setFromValue:", objc_msgSend(objc_msgSend(objc_msgSend(objc_msgSend(a2, "view"), "layer"), "presentationLayer"), "valueForKeyPath:", CFSTR("opacity")));
    objc_msgSend(objc_msgSend(objc_msgSend(a2, "view"), "layer"), "addAnimation:forKey:", v10, CFSTR("opacity"));
    objc_msgSend(objc_msgSend(objc_msgSend(a2, "borderView"), "layer"), "addAnimation:forKey:", v10, CFSTR("opacity"));
    v4 = fabs(v9 + -1.0) < 0.00999999978;
  }
  return objc_msgSend(a2, "setVisible:", v4);
}

id sub_15EBFC(uint64_t a1, void *a2, uint64_t a3, double a4)
{
  float v6;
  float v7;
  double v8;
  CABasicAnimation *v9;
  double v10;

  LODWORD(a4) = 0;
  if (*(_QWORD *)(a1 + 40) != a3)
  {
    a4 = *(double *)(a1 + 48);
    *(float *)&a4 = a4;
  }
  *(float *)&a4 = fabsf(*(float *)&a4);
  objc_msgSend(*(id *)(a1 + 32), "_solveForInput:", a4);
  v7 = 1.0 - v6;
  v8 = (float)(1.0 - v6);
  v9 = +[CABasicAnimation animationWithKeyPath:](CABasicAnimation, "animationWithKeyPath:", CFSTR("opacity"));
  -[CABasicAnimation setRemovedOnCompletion:](v9, "setRemovedOnCompletion:", 0);
  -[CABasicAnimation setDuration:](v9, "setDuration:", *(double *)(a1 + 56));
  -[CABasicAnimation setBeginTime:](v9, "setBeginTime:", *(double *)(a1 + 64));
  -[CABasicAnimation setBeginTimeMode:](v9, "setBeginTimeMode:", kCAAnimationRelative);
  -[CABasicAnimation setFillMode:](v9, "setFillMode:", kCAFillModeBoth);
  *(float *)&v10 = v7;
  -[CABasicAnimation setToValue:](v9, "setToValue:", +[NSNumber numberWithFloat:](NSNumber, "numberWithFloat:", v10));
  -[CABasicAnimation setFromValue:](v9, "setFromValue:", objc_msgSend(objc_msgSend(objc_msgSend(objc_msgSend(a2, "view"), "layer"), "presentationLayer"), "valueForKeyPath:", CFSTR("opacity")));
  objc_msgSend(objc_msgSend(objc_msgSend(a2, "view"), "layer"), "addAnimation:forKey:", v9, CFSTR("opacity"));
  objc_msgSend(objc_msgSend(objc_msgSend(a2, "borderView"), "layer"), "addAnimation:forKey:", v9, CFSTR("opacity"));
  objc_msgSend(objc_msgSend(objc_msgSend(a2, "view"), "layer"), "removeAnimationForKey:", CFSTR("displacement"));
  objc_msgSend(objc_msgSend(objc_msgSend(a2, "borderView"), "layer"), "removeAnimationForKey:", CFSTR("displacement"));
  return objc_msgSend(a2, "setVisible:", fabs(v8 + -1.0) < 0.00999999978);
}

id sub_15EE24(uint64_t a1, void *a2, uint64_t a3)
{
  _BOOL8 v4;
  double v5;
  float v6;
  float v7;
  double v8;
  CABasicAnimation *v9;
  double v10;
  double v11;

  if (*(_QWORD *)(a1 + 40) == a3)
  {
    objc_msgSend(objc_msgSend(objc_msgSend(a2, "view"), "layer"), "removeAnimationForKey:", CFSTR("opacity"));
    objc_msgSend(objc_msgSend(objc_msgSend(a2, "borderView"), "layer"), "removeAnimationForKey:", CFSTR("opacity"));
    v4 = 1;
  }
  else
  {
    v5 = fmin(fmax(1.0 / (*(double *)(a1 + 48) - *(double *)(a1 + 56)) * (*(double *)(a1 + 64) - *(double *)(a1 + 56)), 0.0), 1.0);
    *(float *)&v5 = v5;
    *(float *)&v5 = fabsf(*(float *)&v5);
    objc_msgSend(*(id *)(a1 + 32), "_solveForInput:", v5);
    v7 = v6;
    v8 = v6;
    objc_msgSend(objc_msgSend(objc_msgSend(a2, "view"), "layer"), "setOpaque:", 0);
    v9 = +[CABasicAnimation animationWithKeyPath:](CABasicAnimation, "animationWithKeyPath:", CFSTR("opacity"));
    -[CABasicAnimation setRemovedOnCompletion:](v9, "setRemovedOnCompletion:", 0);
    -[CABasicAnimation setDuration:](v9, "setDuration:", 0.25);
    -[CABasicAnimation setBeginTime:](v9, "setBeginTime:", 0.0);
    -[CABasicAnimation setBeginTimeMode:](v9, "setBeginTimeMode:", kCAAnimationRelative);
    -[CABasicAnimation setFillMode:](v9, "setFillMode:", kCAFillModeBoth);
    *(float *)&v10 = v7;
    -[CABasicAnimation setToValue:](v9, "setToValue:", +[NSNumber numberWithFloat:](NSNumber, "numberWithFloat:", v10));
    *(float *)&v11 = v7;
    -[CABasicAnimation setFromValue:](v9, "setFromValue:", +[NSNumber numberWithFloat:](NSNumber, "numberWithFloat:", v11));
    objc_msgSend(objc_msgSend(objc_msgSend(a2, "view"), "layer"), "addAnimation:forKey:", v9, CFSTR("opacity"));
    objc_msgSend(objc_msgSend(objc_msgSend(a2, "borderView"), "layer"), "addAnimation:forKey:", v9, CFSTR("opacity"));
    v4 = fabs(v8 + -1.0) < 0.00999999978;
  }
  return objc_msgSend(a2, "setVisible:", v4);
}

id sub_15F02C(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  CABasicAnimation *v7;
  BOOL v8;
  _BOOL8 v9;
  double v10;

  objc_msgSend(objc_msgSend(objc_msgSend(a2, "view"), "layer"), "removeAnimationForKey:", CFSTR("displacement"));
  objc_msgSend(objc_msgSend(objc_msgSend(a2, "borderView"), "layer"), "removeAnimationForKey:", CFSTR("displacement"));
  v6 = *(_QWORD *)(a1 + 32);
  v7 = +[CABasicAnimation animationWithKeyPath:](CABasicAnimation, "animationWithKeyPath:", CFSTR("opacity"));
  -[CABasicAnimation setRemovedOnCompletion:](v7, "setRemovedOnCompletion:", 0);
  -[CABasicAnimation setDuration:](v7, "setDuration:", *(double *)(a1 + 40));
  -[CABasicAnimation setBeginTime:](v7, "setBeginTime:", 0.0);
  -[CABasicAnimation setBeginTimeMode:](v7, "setBeginTimeMode:", kCAAnimationRelative);
  -[CABasicAnimation setFillMode:](v7, "setFillMode:", kCAFillModeBoth);
  v8 = v6 == a3;
  v9 = v6 == a3;
  LODWORD(v10) = 0;
  if (v8)
    *(float *)&v10 = 1.0;
  -[CABasicAnimation setToValue:](v7, "setToValue:", +[NSNumber numberWithFloat:](NSNumber, "numberWithFloat:", v10));
  -[CABasicAnimation setFromValue:](v7, "setFromValue:", objc_msgSend(objc_msgSend(objc_msgSend(objc_msgSend(a2, "view"), "layer"), "presentationLayer"), "valueForKeyPath:", CFSTR("opacity")));
  objc_msgSend(objc_msgSend(objc_msgSend(a2, "view"), "layer"), "addAnimation:forKey:", v7, CFSTR("opacity"));
  objc_msgSend(objc_msgSend(objc_msgSend(a2, "borderView"), "layer"), "addAnimation:forKey:", v7, CFSTR("opacity"));
  return objc_msgSend(a2, "setVisible:", v9);
}

id sub_15F1DC(uint64_t a1, void *a2, uint64_t a3)
{
  id result;
  CABasicAnimation *v7;
  double v8;

  objc_msgSend(objc_msgSend(objc_msgSend(a2, "view"), "layer"), "removeAnimationForKey:", CFSTR("displacement"));
  result = objc_msgSend(objc_msgSend(objc_msgSend(a2, "borderView"), "layer"), "removeAnimationForKey:", CFSTR("displacement"));
  if (*(_QWORD *)(a1 + 32) != a3)
  {
    v7 = +[CABasicAnimation animationWithKeyPath:](CABasicAnimation, "animationWithKeyPath:", CFSTR("opacity"));
    -[CABasicAnimation setRemovedOnCompletion:](v7, "setRemovedOnCompletion:", 0);
    -[CABasicAnimation setDuration:](v7, "setDuration:", *(double *)(a1 + 40));
    -[CABasicAnimation setBeginTime:](v7, "setBeginTime:", 0.0);
    -[CABasicAnimation setBeginTimeMode:](v7, "setBeginTimeMode:", kCAAnimationRelative);
    -[CABasicAnimation setFillMode:](v7, "setFillMode:", kCAFillModeBoth);
    LODWORD(v8) = 1.0;
    -[CABasicAnimation setToValue:](v7, "setToValue:", +[NSNumber numberWithFloat:](NSNumber, "numberWithFloat:", v8));
    -[CABasicAnimation setFromValue:](v7, "setFromValue:", objc_msgSend(objc_msgSend(objc_msgSend(objc_msgSend(a2, "view"), "layer"), "presentationLayer"), "valueForKeyPath:", CFSTR("opacity")));
    objc_msgSend(objc_msgSend(objc_msgSend(a2, "view"), "layer"), "addAnimation:forKey:", v7, CFSTR("opacity"));
    objc_msgSend(objc_msgSend(objc_msgSend(a2, "borderView"), "layer"), "addAnimation:forKey:", v7, CFSTR("opacity"));
    return objc_msgSend(a2, "setVisible:", 0);
  }
  return result;
}

id sub_15F388(uint64_t a1, void *a2)
{
  CABasicAnimation *v4;
  double v5;

  v4 = +[CABasicAnimation animationWithKeyPath:](CABasicAnimation, "animationWithKeyPath:", CFSTR("opacity"));
  -[CABasicAnimation setRemovedOnCompletion:](v4, "setRemovedOnCompletion:", 0);
  -[CABasicAnimation setDuration:](v4, "setDuration:", (double)*(unint64_t *)(a1 + 32));
  -[CABasicAnimation setBeginTime:](v4, "setBeginTime:", 0.0);
  -[CABasicAnimation setBeginTimeMode:](v4, "setBeginTimeMode:", kCAAnimationRelative);
  -[CABasicAnimation setFillMode:](v4, "setFillMode:", kCAFillModeForwards);
  LODWORD(v5) = 0;
  -[CABasicAnimation setToValue:](v4, "setToValue:", +[NSNumber numberWithFloat:](NSNumber, "numberWithFloat:", v5));
  -[CABasicAnimation setFromValue:](v4, "setFromValue:", objc_msgSend(objc_msgSend(objc_msgSend(objc_msgSend(a2, "view"), "layer"), "presentationLayer"), "valueForKeyPath:", CFSTR("opacity")));
  objc_msgSend(objc_msgSend(objc_msgSend(a2, "view"), "layer"), "addAnimation:forKey:", v4, CFSTR("opacity"));
  objc_msgSend(objc_msgSend(objc_msgSend(a2, "borderView"), "layer"), "addAnimation:forKey:", v4, CFSTR("opacity"));
  return objc_msgSend(a2, "setVisible:", 0);
}

id sub_15F4E8(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v5;
  id v6;
  CABasicAnimation *v7;
  double v8;

  v5 = *(_QWORD *)(a1 + 32);
  v6 = objc_msgSend(objc_msgSend(a2, "view"), "layer");
  if (v5 == a3)
  {
    objc_msgSend(v6, "removeAnimationForKey:", CFSTR("opacity"));
    objc_msgSend(objc_msgSend(objc_msgSend(a2, "borderView"), "layer"), "removeAnimationForKey:", CFSTR("opacity"));
  }
  else
  {
    objc_msgSend(v6, "setOpaque:", 0);
    v7 = +[CABasicAnimation animationWithKeyPath:](CABasicAnimation, "animationWithKeyPath:", CFSTR("opacity"));
    -[CABasicAnimation setRemovedOnCompletion:](v7, "setRemovedOnCompletion:", 0);
    -[CABasicAnimation setDuration:](v7, "setDuration:", 0.1);
    -[CABasicAnimation setBeginTime:](v7, "setBeginTime:", 0.0);
    -[CABasicAnimation setBeginTimeMode:](v7, "setBeginTimeMode:", kCAAnimationRelative);
    -[CABasicAnimation setFillMode:](v7, "setFillMode:", kCAFillModeBoth);
    LODWORD(v8) = 0;
    -[CABasicAnimation setToValue:](v7, "setToValue:", +[NSNumber numberWithFloat:](NSNumber, "numberWithFloat:", v8));
    -[CABasicAnimation setFromValue:](v7, "setFromValue:", objc_msgSend(objc_msgSend(objc_msgSend(objc_msgSend(a2, "view"), "layer"), "presentationLayer"), "valueForKeyPath:", CFSTR("opacity")));
    objc_msgSend(objc_msgSend(objc_msgSend(a2, "view"), "layer"), "addAnimation:forKey:", v7, CFSTR("opacity"));
    objc_msgSend(objc_msgSend(objc_msgSend(a2, "borderView"), "layer"), "addAnimation:forKey:", v7, CFSTR("opacity"));
  }
  return objc_msgSend(a2, "setVisible:", v5 == a3);
}

void sub_15F658(id a1, THPageLayerViewProvider *a2, int64_t a3)
{
  objc_msgSend(objc_msgSend(-[THPageLayerViewProvider view](a2, "view", a3), "layer"), "removeAnimationForKey:", CFSTR("opacity"));
  objc_msgSend(objc_msgSend(-[THPageLayerViewProvider borderView](a2, "borderView"), "layer"), "removeAnimationForKey:", CFSTR("opacity"));
  -[THPageLayerViewProvider setVisible:](a2, "setVisible:", 1);
}

id sub_15F88C(uint64_t a1, void *a2, uint64_t a3)
{
  id v6;
  double v7;
  double v8;
  double v9;
  double v10;
  id v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  BOOL v18;
  double v19;
  double v21;
  double v23;
  double v24;
  float v26;
  double v27;
  CABasicAnimation *v28;
  float v29;
  double v30;
  double v31;

  if (*(_BYTE *)(a1 + 64))
  {
    v6 = objc_msgSend(a2, "view");
    objc_msgSend(a2, "canvasBoundsFrame");
    v8 = v7;
    v10 = v9;
    v11 = objc_msgSend(objc_msgSend(a2, "view"), "frame");
    objc_msgSend(v6, "setFrame:", TSDRectWithOriginAndSize(v11, v8, v10, v12, v13));
  }
  v14 = (double)a3 - *(double *)(a1 + 40);
  v15 = (double)(unint64_t)(*(_QWORD *)(a1 + 48) - 1);
  v16 = v15 + 0.5;
  v17 = 0.0;
  v18 = v14 < -0.5 || v16 < v14;
  v19 = 0.0;
  if (v18)
  {
    v19 = -1.0;
    if (v14 >= -0.5 || v14 <= -1.0)
    {
      if (v14 <= -1.0)
        goto LABEL_22;
      v21 = v15 + 1.0;
      if (v16 >= v14 || v21 <= v14)
      {
        v19 = 0.0;
        if (v16 <= v14)
          v19 = 1.0;
        goto LABEL_22;
      }
      v23 = v14 - v16;
    }
    else
    {
      v23 = v14 + 0.5;
    }
    v19 = v23 + v23;
  }
LABEL_22:
  objc_msgSend(objc_msgSend(objc_msgSend(a2, "view"), "layer"), "setOpaque:", 0);
  if (v19 > -1.0 && v19 < 1.0)
  {
    if (v19 >= 0.0)
    {
      v17 = 1.0;
      if (v19 <= 0.0)
        goto LABEL_31;
    }
    else
    {
      v19 = fabs(v19);
    }
    *(float *)&v24 = v19;
    objc_msgSend(*(id *)(a1 + 32), "_solveForInput:", v24);
    v17 = 1.0 - v26 * *(double *)(a1 + 56);
  }
LABEL_31:
  v27 = fabs(v17 + -1.0);
  if (v27 >= 0.00999999978)
  {
    v28 = +[CABasicAnimation animationWithKeyPath:](CABasicAnimation, "animationWithKeyPath:", CFSTR("opacity"));
    -[CABasicAnimation setRemovedOnCompletion:](v28, "setRemovedOnCompletion:", 0);
    -[CABasicAnimation setDuration:](v28, "setDuration:", 0.1);
    -[CABasicAnimation setBeginTime:](v28, "setBeginTime:", 0.0);
    -[CABasicAnimation setBeginTimeMode:](v28, "setBeginTimeMode:", kCAAnimationRelative);
    -[CABasicAnimation setFillMode:](v28, "setFillMode:", kCAFillModeBoth);
    v29 = v17;
    *(float *)&v30 = v29;
    -[CABasicAnimation setToValue:](v28, "setToValue:", +[NSNumber numberWithFloat:](NSNumber, "numberWithFloat:", v30));
    *(float *)&v31 = v29;
    -[CABasicAnimation setFromValue:](v28, "setFromValue:", +[NSNumber numberWithFloat:](NSNumber, "numberWithFloat:", v31));
    objc_msgSend(objc_msgSend(objc_msgSend(a2, "view"), "layer"), "addAnimation:forKey:", v28, CFSTR("opacity"));
    objc_msgSend(objc_msgSend(objc_msgSend(a2, "borderView"), "layer"), "addAnimation:forKey:", v28, CFSTR("opacity"));
  }
  else
  {
    objc_msgSend(objc_msgSend(objc_msgSend(a2, "view"), "layer"), "removeAnimationForKey:", CFSTR("opacity"));
    objc_msgSend(objc_msgSend(objc_msgSend(a2, "borderView"), "layer"), "removeAnimationForKey:", CFSTR("opacity"));
  }
  return objc_msgSend(a2, "setVisible:", v27 < 0.00999999978);
}

THGuidedPanRectWell *sub_15FC7C(void *a1, int a2, double a3, double a4, double a5, double a6, double a7)
{
  double v13;
  CGFloat v14;
  double v15;
  CGFloat v16;
  double v17;
  CGFloat v18;
  double v19;
  CGFloat v20;
  THGuidedPanRectWell *v21;
  double MidX;
  CGFloat v23;
  CGFloat v24;
  CGFloat v25;
  CGFloat v26;
  double MaxY;
  _QWORD v30[5];
  char v31;
  _QWORD v32[5];
  CGRect v33;

  objc_msgSend(a1, "guidedPanTargetUnscaledRect");
  v14 = v13;
  v16 = v15;
  v18 = v17;
  v20 = v19;
  v21 = -[THGuidedPanRectWell initWithUnscaledRect:wellRect:target:]([THGuidedPanRectWell alloc], "initWithUnscaledRect:wellRect:target:", a1, v13, v15, v17, v19, a3, a4, a5, a6);
  -[THGuidedPanRectWell setSmoothWeight:](v21, "setSmoothWeight:", 0.1);
  v33.origin.x = v14;
  v33.origin.y = v16;
  v33.size.width = v18;
  v33.size.height = v20;
  MidX = CGRectGetMidX(v33);
  v23 = v14;
  v24 = v16;
  v25 = v18;
  v26 = v20;
  if (a2)
    MaxY = CGRectGetMaxY(*(CGRect *)&v23);
  else
    MaxY = CGRectGetMinY(*(CGRect *)&v23);
  -[THGuidedPanRectWell setFocalPoint:](v21, "setFocalPoint:", MidX, MaxY);
  v32[0] = _NSConcreteStackBlock;
  v32[1] = 3221225472;
  v32[2] = sub_160930;
  v32[3] = &unk_42A2E0;
  *(double *)&v32[4] = a7;
  -[THGuidedPanRectWell setWeightBlock:](v21, "setWeightBlock:", v32);
  v30[0] = _NSConcreteStackBlock;
  v30[1] = 3221225472;
  v30[2] = sub_1609A4;
  v30[3] = &unk_42A308;
  v30[4] = v21;
  v31 = a2;
  -[THGuidedPanRectWell setRatingBlock:](v21, "setRatingBlock:", v30);
  return v21;
}

double sub_160198(uint64_t a1, double a2, double a3, double a4, double a5)
{
  id v7;
  double v8;
  double v9;
  double v10;
  BOOL v11;
  double v12;
  float v13;

  v7 = objc_msgSend(*(id *)(a1 + 32), "unconsumedMovementWithMovement:controller:", *(_QWORD *)(a1 + 40), a4, a5);
  v9 = TSDPointLength(v7, a2, v8) / *(double *)(a1 + 48);
  v10 = (1.0 - v9 + -1.0) * 3.14159265;
  v11 = v9 <= 1.0;
  v12 = -3.14159265;
  if (v11)
    v12 = v10;
  v13 = v12;
  return (float)(cosf(v13) + 1.0) * 0.5;
}

uint64_t sub_16022C(uint64_t a1, double a2, double a3, double a4, double a5)
{
  double v8;
  double v9;
  double v10;
  double v12;
  double v13;
  double v14;

  objc_msgSend(*(id *)(a1 + 32), "currentBlendedWeight");
  if (v8 > 0.7)
  {
    TSDNormalizePoint(a4, a5);
    if (fabs(v9) >= 0.5)
      return 5;
  }
  objc_msgSend(*(id *)(a1 + 32), "currentBlendedWeight");
  if (v10 > 0.7)
    return 3;
  objc_msgSend(*(id *)(a1 + 32), "currentBlendedWeight");
  v13 = v12;
  objc_msgSend(*(id *)(a1 + 32), "previousBlendedWeight");
  return v13 <= v14;
}

double sub_160930(uint64_t a1)
{
  double v1;
  double v2;
  BOOL v3;
  double v4;
  float v5;

  v1 = TSDPointLength() / *(double *)(a1 + 32);
  v2 = 1.0 - v1;
  v3 = v1 <= 1.0;
  v4 = 0.0;
  if (v3)
    v4 = v2;
  v5 = (v4 * 0.7 + -1.0) * 3.14159265;
  return (float)(cosf(v5) + 1.0) * 0.5;
}

uint64_t sub_1609A4(uint64_t a1, double a2, double a3, double a4, double a5)
{
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  uint64_t result;
  double v15;

  v8 = TSDPointLength(a1, a4, a5);
  v9 = TSDNormalizePoint(a4, a5);
  objc_msgSend(*(id *)(a1 + 32), "currentBlendedWeight");
  if (v10 > 0.25)
  {
    objc_msgSend(*(id *)(a1 + 32), "currentBlendedWeight");
    v12 = v11;
    objc_msgSend(*(id *)(a1 + 32), "previousBlendedWeight");
    if (v12 > v13 * 0.9)
      return 4;
  }
  v15 = fabs(v9);
  result = 6;
  if (!*(_BYTE *)(a1 + 40) || v15 <= 0.5 || v8 <= 300.0 || a4 <= 0.0)
  {
    if (a4 < 0.0 && v8 > 300.0 && v15 > 0.5 && *(_BYTE *)(a1 + 40) == 0)
      return 6;
    else
      return 0;
  }
  return result;
}

TSDContentLocation *sub_160C00(uint64_t a1, double a2, double a3)
{
  double v4;
  uint64_t v5;
  TSDContentLocation *v6;

  *(_QWORD *)(*(_QWORD *)(a1 + 32) + 16) = 0;
  if (a2 != 0.0)
  {
    v4 = a3 * 1000.0;
    v5 = *(_QWORD *)(a1 + 32);
    if (*(_BYTE *)(v5 + 104))
    {
      objc_msgSend((id)v5, "_getBouncingDecelerationOffset:forTimeInterval:lastUpdateOffset:min:max:decelerationFactor:decelerationLnFactor:velocity:", v5 + 96, v5 + 24, v4, *(double *)(v5 + 96), *(double *)(v5 + 40), *(double *)(v5 + 56), *(double *)(a1 + 40), *(double *)(a1 + 48));
    }
    else if (*(double *)(v5 + 24) != 0.0)
    {
      objc_msgSend((id)v5, "_getStandardDecelerationOffset:forTimeInterval:min:max:decelerationFactor:decelerationLnFactor:velocity:", v5 + 96, v5 + 24, v4, *(double *)(v5 + 40), *(double *)(v5 + 56), *(double *)(a1 + 40), *(double *)(a1 + 48));
    }
  }
  v6 = +[TSDContentLocation contentLocationWithUnscaledPoint:viewScale:](TSDContentLocation, "contentLocationWithUnscaledPoint:viewScale:", *(double *)(*(_QWORD *)(a1 + 32) + 88), *(double *)(*(_QWORD *)(a1 + 32) + 96), *(double *)(*(_QWORD *)(a1 + 32) + 8));
  *(double *)(*(_QWORD *)(a1 + 32) + 8) = TSDInterpolateFloats(v6, *(double *)(*(_QWORD *)(a1 + 32) + 8), *(double *)(a1 + 56), 0.8);
  return v6;
}

BOOL sub_160CCC(uint64_t a1)
{
  uint64_t v1;
  double v2;

  v1 = *(_QWORD *)(a1 + 32);
  v2 = *(double *)(v1 + 24) * *(double *)(v1 + 24);
  if (v2 < 0.0001)
  {

    *(_QWORD *)(*(_QWORD *)(a1 + 32) + 112) = 0;
  }
  return v2 < 0.0001;
}

id sub_16310C(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "p_updateWithDelegate");
}

uint64_t sub_163114(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

uint64_t sub_1646A4(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 32);
  if (result)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(result + 16))(result, a2, 1);
  return result;
}

uint64_t sub_1646BC(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 32);
  if (result)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(result + 16))(result, a2, 2);
  return result;
}

uint64_t sub_1646D4(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 32);
  if (result)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(result + 16))(result, a2, 3);
  return result;
}

id sub_1646EC(uint64_t a1)
{
  id result;

  objc_msgSend(*(id *)(a1 + 32), "setLastTimeScore:", objc_msgSend(*(id *)(a1 + 40), "score"));
  result = objc_msgSend(*(id *)(a1 + 32), "firstTimeScore");
  if (!result)
    return objc_msgSend(*(id *)(a1 + 32), "setFirstTimeScore:", objc_msgSend(*(id *)(a1 + 40), "score"));
  return result;
}

void sub_167270(id a1, id a2, THWScrollableCanvasController *a3, BOOL *a4)
{
  -[THWScrollableCanvasController setDelegate:](a3, "setDelegate:", 0, a4);
}

id sub_167A88(uint64_t a1)
{
  return objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 304), "setMinimizeInfoChange:", 0);
}

id sub_168EE0(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 32), "setAnswerState:", *(_QWORD *)(a1 + 40));
  return objc_msgSend(*(id *)(a1 + 32), "setUserHasCheckedAnswer:", 0);
}

id sub_16921C(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 32), "setAnswerState:", *(_QWORD *)(a1 + 40));
  return objc_msgSend(*(id *)(a1 + 32), "setUserHasCheckedAnswer:", 0);
}

id sub_16940C(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 32), "setAnswerState:", *(_QWORD *)(a1 + 40));
  return objc_msgSend(*(id *)(a1 + 32), "setUserHasCheckedAnswer:", 0);
}

id sub_169818(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return objc_msgSend(*(id *)(a1 + 32), "reviewQuestionUpdateChoiceIndex:withState:", a2, a3);
}

id sub_169C38(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "setUserHasCheckedAnswer:", 1);
}

id sub_169D04(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 32), "setAnswerState:", 0);
  objc_msgSend(*(id *)(a1 + 32), "setLastTimeScore:", +[NSDecimalNumber zero](NSDecimalNumber, "zero"));
  return objc_msgSend(*(id *)(a1 + 32), "setUserHasCheckedAnswer:", 0);
}

id sub_169E18(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "setCurrentPage:", *(_QWORD *)(a1 + 40));
}

id sub_16BF1C(uint64_t a1)
{
  id result;

  result = *(id *)(a1 + 32);
  if (!*((_BYTE *)result + 8) && *(_QWORD *)(a1 + 40) == *((_QWORD *)result + 6))
    return objc_msgSend(result, "p_autoplayStart");
  return result;
}

id THCanvasCreate(void *a1, id *a2, _QWORD *a3)
{
  return THCanvasCreateWithClass(a1, a2, a3, 0, 0);
}

id THCanvasCreateWithClass(id result, id *a2, _QWORD *a3, void *a4, void *a5)
{
  void *v6;
  void *v7;
  id v9;
  uint64_t v10;
  id v11;
  THCanvasEditor *v12;
  id v13;

  if (!a2 || !a3)
    return result;
  v6 = a5;
  v7 = a4;
  v9 = result;
  if (!a4)
  {
    v7 = (void *)objc_opt_class(TSWPInteractiveCanvasController, a2);
    if (v6)
      goto LABEL_5;
LABEL_14:
    v6 = (void *)objc_opt_class(THWPiOSCanvasViewController, a2);
    goto LABEL_5;
  }
  if (!a5)
    goto LABEL_14;
LABEL_5:
  if ((objc_msgSend(v7, "isSubclassOfClass:", objc_opt_class(TSDInteractiveCanvasController, a2)) & 1) == 0)objc_msgSend(+[TSUAssertionHandler currentHandler](TSUAssertionHandler, "currentHandler"), "handleFailureInFunction:file:lineNumber:description:", +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "void THCanvasCreateWithClass(id<TSDInteractiveCanvasControllerDelegate>, TSDInteractiveCanvasController **, id<TSDCanvasLayerHosting> *, Class, Class)"), +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Alder/bliss/Classes/THCanvasUtilities.m"), 53, CFSTR("bogus ICC class"));
  if ((objc_msgSend(v6, "isSubclassOfClass:", objc_opt_class(TSDiOSCanvasViewController, v10)) & 1) == 0)objc_msgSend(+[TSUAssertionHandler currentHandler](TSUAssertionHandler, "currentHandler"), "handleFailureInFunction:file:lineNumber:description:", +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "void THCanvasCreateWithClass(id<TSDInteractiveCanvasControllerDelegate>, TSDInteractiveCanvasController **, id<TSDCanvasLayerHosting> *, Class, Class)"), +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Alder/bliss/Classes/THCanvasUtilities.m"), 54, CFSTR("bogus CVC class"));
  v11 = *a2;
  if (!*a2)
  {
    v11 = objc_alloc_init((Class)v7);
    objc_msgSend(v11, "setDelegate:", v9);
    v12 = -[THCanvasEditor initWithInteractiveCanvasController:]([THCanvasEditor alloc], "initWithInteractiveCanvasController:", v11);
    objc_msgSend(v11, "setCanvasEditor:", v12);

  }
  v13 = objc_alloc_init((Class)v6);
  objc_msgSend(v11, "setLayerHost:", v13);
  result = objc_msgSend(v13, "setInteractiveCanvasController:", v11);
  *a2 = v11;
  *a3 = v13;
  return result;
}

id THCanvasAndScrollViewCreate(void *a1, id *a2, id *a3, _QWORD *a4)
{
  return THCanvasAndScrollViewCreateWithClass(a1, a2, a3, a4, 0, 0, 0);
}

id THCanvasAndScrollViewCreateWithClass(id result, id *a2, id *a3, _QWORD *a4, void *a5, void *a6, void *a7)
{
  id v11;

  if (a2 && a3 && a4)
  {
    THCanvasCreateWithClass(result, a2, a3, a5, a6);
    if (!a7)
      a7 = (void *)objc_opt_class(TSKScrollView);
    if ((objc_msgSend(a7, "isSubclassOfClass:", objc_opt_class(TSKScrollView)) & 1) == 0)
      objc_msgSend(+[TSUAssertionHandler currentHandler](TSUAssertionHandler, "currentHandler"), "handleFailureInFunction:file:lineNumber:description:", +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "void THCanvasAndScrollViewCreateWithClass(id<TSDInteractiveCanvasControllerDelegate>, TSDInteractiveCanvasController **, id<TSDCanvasLayerHosting> *, TSKScrollView **, Class, Class, Class)"), +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Alder/bliss/Classes/THCanvasUtilities.m"), 131, CFSTR("bogus scroll view class"));
    v11 = objc_alloc_init((Class)a7);
    objc_msgSend(v11, "addSubview:", objc_msgSend(*a3, "canvasView"));
    result = objc_msgSend(v11, "setDelegate:", *a2);
    *a4 = v11;
  }
  return result;
}

id THCanvasAndClippingLayerHostCreateWithClass(id result, id *a2, THWClippingLayerHost **a3, void *a4)
{
  void *v5;
  id v7;
  id v8;
  THCanvasEditor *v9;
  THWClippingLayerHost *v10;

  if (a2 && a3)
  {
    v5 = a4;
    v7 = result;
    if (!a4)
      v5 = (void *)objc_opt_class(TSWPInteractiveCanvasController);
    if ((objc_msgSend(v5, "isSubclassOfClass:", objc_opt_class(TSDInteractiveCanvasController)) & 1) == 0)objc_msgSend(+[TSUAssertionHandler currentHandler](TSUAssertionHandler, "currentHandler"), "handleFailureInFunction:file:lineNumber:description:", +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "void THCanvasAndClippingLayerHostCreateWithClass(id<TSDInteractiveCanvasControllerDelegate>, TSDInteractiveCanvasController **, THWClippingLayerHost **, Class)"), +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Alder/bliss/Classes/THCanvasUtilities.m"), 96, CFSTR("bogus ICC class"));
    v8 = *a2;
    if (!*a2)
    {
      v8 = objc_alloc_init((Class)v5);
      objc_msgSend(v8, "setDelegate:", v7);
      v9 = -[THCanvasEditor initWithInteractiveCanvasController:]([THCanvasEditor alloc], "initWithInteractiveCanvasController:", v8);
      objc_msgSend(v8, "setCanvasEditor:", v9);

    }
    v10 = objc_alloc_init(THWClippingLayerHost);
    objc_msgSend(v8, "setLayerHost:", v10);
    result = -[THWClippingLayerHost setInteractiveCanvasController:](v10, "setInteractiveCanvasController:", v8);
    *a2 = v8;
    *a3 = v10;
  }
  return result;
}

uint64_t sub_16EE6C(uint64_t a1)
{
  uint64_t result;

  if ((objc_opt_respondsToSelector(objc_msgSend(*(id *)(a1 + 32), "handler"), "freeTransformPostAnimationDidCancelWithRep:expandableRep:") & 1) != 0)objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "handler"), "freeTransformPostAnimationDidCancelWithRep:expandableRep:", objc_msgSend(*(id *)(a1 + 32), "rep"), objc_msgSend(*(id *)(a1 + 32), "rep"));
  result = *(_QWORD *)(a1 + 40);
  if (result)
    return (*(uint64_t (**)(void))(result + 16))();
  return result;
}

id sub_171CC8(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "p_updateWithDelegate");
}

uint64_t sub_171CD0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

void sub_1736DC(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  NSObject *v9;

  _os_log_debug_impl(a1, v9, OS_LOG_TYPE_DEBUG, a4, &a9, 0xCu);
}

id sub_175680(uint64_t a1)
{
  objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "showRep"), "playPreparedShow");
  return objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "layout"), "hidePlayButton");
}

id sub_175714(uint64_t a1)
{
  objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "showRep"), "stopShow");
  return objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "layout"), "showPlayButton");
}

id sub_175B6C(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "p_togglePanelDescriptionExpanded");
}

void sub_17C8DC(id a1)
{
  CGColorSpace *DeviceRGB;

  DeviceRGB = CGColorSpaceCreateDeviceRGB();
  qword_5432C8 = (uint64_t)CGBitmapContextCreate(0, 1uLL, 1uLL, 8uLL, 4uLL, DeviceRGB, 5u);
  CGColorSpaceRelease(DeviceRGB);
}

id sub_180DB0(uint64_t a1)
{
  id v2;

  if (objc_msgSend(*(id *)(a1 + 40), "pressableHandler"))
    v2 = objc_msgSend(objc_msgSend(*(id *)(a1 + 40), "pressableHandler"), "widgetInteractionEnabled");
  else
    v2 = &dword_0 + 1;
  return objc_msgSend(*(id *)(a1 + 32), "setUserInteractionEnabled:", v2);
}

uint64_t sub_180DF4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

const __CFString *THUniqueIdForPath(void *a1)
{
  id v2;
  id v3;
  unsigned __int8 v4;
  id v5;
  id v6;
  id v7;
  id v8;
  uint64_t v9;
  void *i;
  const char *v11;
  CC_LONG v12;
  id v13;
  NSFileAttributeType v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  UInt8 *v19;
  unint64_t v20;
  const __CFString *v21;
  id v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  CC_MD5_CTX c;
  char v29;
  UInt8 bytes[16];
  __int128 v31;
  char v32;
  _BYTE v33[128];
  unsigned __int8 data[16];

  v2 = objc_alloc_init((Class)NSFileManager);
  v29 = 0;
  if (objc_msgSend(v2, "fileExistsAtPath:isDirectory:", a1, &v29))
  {
    if (v29)
    {
      v3 = objc_msgSend(a1, "stringByAppendingPathComponent:", CFSTR("OPS"));
      v4 = objc_msgSend(v2, "fileExistsAtPath:isDirectory:", a1, &v29);
      if ((v4 & (v29 != 0)) != 0)
        v5 = v3;
      else
        v5 = a1;
      v23 = v2;
      v6 = objc_msgSend(v2, "enumeratorAtPath:", v5);
      memset(&c, 0, sizeof(c));
      CC_MD5_Init(&c);
      v24 = 0u;
      v25 = 0u;
      v26 = 0u;
      v27 = 0u;
      v7 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v24, v33, 16);
      if (v7)
      {
        v8 = v7;
        v9 = *(_QWORD *)v25;
        do
        {
          for (i = 0; i != v8; i = (char *)i + 1)
          {
            if (*(_QWORD *)v25 != v9)
              objc_enumerationMutation(v6);
            v11 = (const char *)objc_msgSend(*(id *)(*((_QWORD *)&v24 + 1) + 8 * (_QWORD)i), "UTF8String");
            v12 = strlen(v11);
            CC_MD5_Update(&c, v11, v12);
            v13 = objc_msgSend(v6, "fileAttributes");
            v14 = (NSFileAttributeType)objc_msgSend(v13, "valueForKey:", NSFileType);
            if (v14 == NSFileTypeRegular)
            {
              v15 = objc_msgSend(v13, "valueForKey:", NSFileSize);
              *(_DWORD *)data = 0;
              *(_DWORD *)data = objc_msgSend(v15, "unsignedIntValue");
              CC_MD5_Update(&c, data, 4u);
              v16 = objc_msgSend(v13, "valueForKey:", NSFileModificationDate);
              if (v16)
              {
                *(_QWORD *)bytes = 0;
                objc_msgSend(v16, "timeIntervalSinceReferenceDate");
                *(_QWORD *)bytes = v17;
                CC_MD5_Update(&c, bytes, 8u);
              }
            }
            else if (-[NSString isEqualToString:](v14, "isEqualToString:", NSFileTypeDirectory))
            {
              objc_msgSend(v6, "skipDescendents");
            }
          }
          v8 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v24, v33, 16);
        }
        while (v8);
      }
      CC_MD5_Final(data, &c);
      v18 = 0;
      v32 = 0;
      *(_OWORD *)bytes = 0u;
      v31 = 0u;
      v19 = &bytes[1];
      do
      {
        v20 = data[v18];
        *(v19 - 1) = a0123456789abcd[v20 >> 4];
        *v19 = a0123456789abcd[v20 & 0xF];
        v19 += 2;
        ++v18;
      }
      while (v18 != 16);
      v21 = (id)CFStringCreateWithBytes(0, bytes, 32, 0x600u, 0);
      v2 = v23;
    }
    else
    {
      v21 = (const __CFString *)+[NSString md5StringWithContentsOfFile:](NSString, "md5StringWithContentsOfFile:", a1);
    }
  }
  else
  {
    v21 = 0;
  }

  return v21;
}

uint64_t THIsApplePubAtPath(void *a1)
{
  NSFileManager *v2;
  unsigned int v3;
  _BOOL4 v4;
  _BOOL4 v5;
  id v6;
  unsigned int v7;
  BOOL v8;
  NSDictionary *v9;
  NSString *v10;
  id v11;
  id v12;
  uint64_t v14;
  char v15;
  char v16;

  v2 = +[NSFileManager defaultManager](NSFileManager, "defaultManager");
  v16 = 0;
  v3 = -[NSFileManager fileExistsAtPath:isDirectory:](v2, "fileExistsAtPath:isDirectory:", a1, &v16);
  v4 = 0;
  v5 = 0;
  if (v3)
  {
    if (v16)
    {
      v6 = objc_msgSend(a1, "stringByAppendingPathComponent:", CFSTR("mimetype"));
      v15 = 0;
      v7 = -[NSFileManager fileExistsAtPath:isDirectory:](v2, "fileExistsAtPath:isDirectory:", v6, &v15);
      v4 = 0;
      v5 = 0;
      if (v7)
        v8 = v15 == 0;
      else
        v8 = 0;
      if (v8)
      {
        v9 = -[NSFileManager attributesOfItemAtPath:error:](v2, "attributesOfItemAtPath:error:", v6, 0);
        if (v9 && -[NSDictionary fileSize](v9, "fileSize") <= 0x3FF)
        {
          v14 = 0;
          v10 = +[NSString stringWithContentsOfFile:usedEncoding:error:](NSString, "stringWithContentsOfFile:usedEncoding:error:", v6, &v14, 0);
          v11 = -[NSString rangeOfString:options:](v10, "rangeOfString:options:", CFSTR("ibooks"), 1);
          v5 = v11 != (id)0x7FFFFFFFFFFFFFFFLL;
          v4 = v11 == (id)0x7FFFFFFFFFFFFFFFLL
            && -[NSString rangeOfString:options:](v10, "rangeOfString:options:", CFSTR("epub"), 1) != (id)0x7FFFFFFFFFFFFFFFLL;
        }
        else
        {
          v4 = 0;
          v5 = 0;
        }
      }
    }
    else
    {
      v12 = objc_msgSend(a1, "pathExtension");
      if (objc_msgSend(v12, "caseInsensitiveCompare:", CFSTR("ibooks")))
      {
        v5 = 0;
        v4 = objc_msgSend(v12, "caseInsensitiveCompare:", CFSTR("epub")) == 0;
      }
      else
      {
        v4 = 0;
        v5 = 1;
      }
    }
  }
  return v4 | v5;
}

id sub_182384(uint64_t a1)
{
  id result;

  *(_BYTE *)(*(_QWORD *)(a1 + 32) + 281) = *(_BYTE *)(a1 + 40);
  result = objc_msgSend(*(id *)(a1 + 32), "hasBeenRemoved");
  if ((result & 1) == 0)
    return objc_msgSend(*(id *)(a1 + 32), "p_updateWantsSpinner");
  return result;
}

id sub_185664(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "p_updateWithDelegate");
}

uint64_t sub_18566C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

void sub_1876C8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __int128 *v4;
  __n128 v5;
  __n128 v6;
  __int128 v7;
  __n128 v8;
  __int128 v9;
  __int128 *v10;
  __n128 v11;
  __int128 v12;
  __n128 v13;
  __n128 v14;
  __n128 v15;
  __n128 v16;
  __n128 v17;
  __n128 v18;
  __n128 v19;
  __n128 v20;
  __n128 v21;
  __n128 v22;
  __n128 v23;
  __n128 v24;
  __n128 v25;
  __n128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __n128 v30;
  __int128 v31;
  uint64_t v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __n128 v36;
  __int128 v37;
  uint64_t v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __n128 v42;
  __int128 v43;
  uint64_t v44;

  v3 = *(_QWORD *)(a1 + 40);
  v4 = (__int128 *)(a2 + 88 * *(_QWORD *)(a1 + 32));
  v5 = (__n128)v4[3];
  v7 = v4[1];
  v41 = v4[2];
  v6.n128_u64[1] = *((_QWORD *)&v41 + 1);
  v42 = v5;
  v8 = (__n128)v4[3];
  v43 = v4[4];
  v9 = v4[1];
  v39 = *v4;
  v40 = v9;
  v10 = (__int128 *)(a2 + 88 * v3);
  v11 = (__n128)v10[3];
  v35 = v10[2];
  v36 = v11;
  v37 = v10[4];
  v12 = v10[1];
  v33 = *v10;
  v34 = v12;
  v44 = *((_QWORD *)v4 + 10);
  v38 = *((_QWORD *)v10 + 10);
  v29 = v41;
  v30 = v8;
  v31 = v4[4];
  v5.n128_u64[1] = *((_QWORD *)&v31 + 1);
  v5.n128_u64[0] = *(_QWORD *)(a1 + 48);
  v6.n128_u64[0] = *(_QWORD *)(a1 + 56);
  v5.n128_f32[0] = v5.n128_f64[0];
  v6.n128_f32[0] = v6.n128_f64[0];
  v32 = *((_QWORD *)v4 + 10);
  v27 = v39;
  v28 = v7;
  v13 = TSDGPUUpdateDataSetMetalPoint2DAtIndex(&v27, 0, v5, v6);
  v14.n128_u64[0] = *(_QWORD *)(a1 + 56);
  v13.n128_u64[0] = *(_QWORD *)(a1 + 64);
  v13.n128_f32[0] = v13.n128_f64[0];
  v14.n128_f32[0] = v14.n128_f64[0];
  v29 = v41;
  v30 = v42;
  v31 = v43;
  v32 = v44;
  v27 = v39;
  v28 = v40;
  v15 = TSDGPUUpdateDataSetMetalPoint2DAtIndex(&v27, 1, v13, v14);
  v15.n128_u64[0] = *(_QWORD *)(a1 + 48);
  v16.n128_u64[0] = *(_QWORD *)(a1 + 72);
  v15.n128_f32[0] = v15.n128_f64[0];
  v16.n128_f32[0] = v16.n128_f64[0];
  v29 = v41;
  v30 = v42;
  v31 = v43;
  v32 = v44;
  v27 = v39;
  v28 = v40;
  v17 = TSDGPUUpdateDataSetMetalPoint2DAtIndex(&v27, 2, v15, v16);
  v17.n128_u64[0] = *(_QWORD *)(a1 + 64);
  v18.n128_u64[0] = *(_QWORD *)(a1 + 72);
  v17.n128_f32[0] = v17.n128_f64[0];
  v18.n128_f32[0] = v18.n128_f64[0];
  v29 = v41;
  v30 = v42;
  v31 = v43;
  v32 = v44;
  v27 = v39;
  v28 = v40;
  v19 = TSDGPUUpdateDataSetMetalPoint2DAtIndex(&v27, 3, v17, v18);
  v19.n128_u64[0] = *(_QWORD *)(a1 + 80);
  v20.n128_f64[0] = 1.0 - *(double *)(a1 + 88);
  v19.n128_f32[0] = v19.n128_f64[0];
  v20.n128_f32[0] = v20.n128_f64[0];
  v29 = v35;
  v30 = v36;
  v31 = v37;
  v32 = v38;
  v27 = v33;
  v28 = v34;
  v21 = TSDGPUUpdateDataSetMetalPoint2DAtIndex(&v27, 0, v19, v20);
  v21.n128_u64[0] = *(_QWORD *)(a1 + 96);
  v22.n128_f64[0] = 1.0 - *(double *)(a1 + 88);
  v21.n128_f32[0] = v21.n128_f64[0];
  v22.n128_f32[0] = v22.n128_f64[0];
  v29 = v35;
  v30 = v36;
  v31 = v37;
  v32 = v38;
  v27 = v33;
  v28 = v34;
  v23 = TSDGPUUpdateDataSetMetalPoint2DAtIndex(&v27, 1, v21, v22);
  v23.n128_u64[0] = *(_QWORD *)(a1 + 80);
  v24.n128_f64[0] = 1.0 - *(double *)(a1 + 104);
  v23.n128_f32[0] = v23.n128_f64[0];
  v24.n128_f32[0] = v24.n128_f64[0];
  v29 = v35;
  v30 = v36;
  v31 = v37;
  v32 = v38;
  v27 = v33;
  v28 = v34;
  v25 = TSDGPUUpdateDataSetMetalPoint2DAtIndex(&v27, 2, v23, v24);
  v25.n128_u64[0] = *(_QWORD *)(a1 + 96);
  v26.n128_f64[0] = 1.0 - *(double *)(a1 + 104);
  v25.n128_f32[0] = v25.n128_f64[0];
  v26.n128_f32[0] = v26.n128_f64[0];
  v29 = v35;
  v30 = v36;
  v31 = v37;
  v32 = v38;
  v27 = v33;
  v28 = v34;
  TSDGPUUpdateDataSetMetalPoint2DAtIndex(&v27, 3, v25, v26);
}

void sub_187D48(id a1)
{
  +[TSKApplicationDelegate setSurrogateDelegate:](TSKApplicationDelegate, "setSurrogateDelegate:", objc_alloc_init(THApplicationDelegate));
}

id sub_188034(uint64_t a1)
{
  id v2;
  id result;
  id v4;
  NSString *v5;
  NSString *v6;
  uint64_t v7;

  v2 = objc_msgSend(objc_msgSend(-[NSArray objectAtIndex:](NSSearchPathForDirectoriesInDomains(NSApplicationSupportDirectory, 1uLL, 1), "objectAtIndex:", 0), "stringByAppendingPathComponent:", CFSTR("Documents")), "stringByAppendingPathComponent:", objc_msgSend(*(id *)(a1 + 32), "assetID"));
  result = (id)-[NSFileManager fileExistsAtPath:](+[NSFileManager defaultManager](NSFileManager, "defaultManager"), "fileExistsAtPath:", v2);
  if ((_DWORD)result)
  {
    v7 = 0;
    result = (id)-[NSFileManager moveItemAtPath:toPath:error:](+[NSFileManager defaultManager](NSFileManager, "defaultManager"), "moveItemAtPath:toPath:error:", v2, *(_QWORD *)(a1 + 40), &v7);
    if ((result & 1) == 0)
    {
      v4 = +[TSUAssertionHandler currentHandler](TSUAssertionHandler, "currentHandler");
      v5 = +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "+[THApplicationDelegate p_upgradeContextDirectoryForAsset:newPath:]_block_invoke");
      v6 = +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Alder/bliss/Classes/THApplicationDelegate.m");
      return objc_msgSend(v4, "handleFailureInFunction:file:lineNumber:description:", v5, v6, 129, CFSTR("failed to move old context directory to new path with error: %@"), v7);
    }
  }
  return result;
}

void sub_18828C(id a1)
{
  qword_5432E8 = (uint64_t)objc_msgSend(objc_alloc((Class)NSSet), "initWithObjects:", CFSTR("http"), CFSTR("https"), CFSTR("mailto"), CFSTR("urn"), CFSTR("ibooks"), 0);
}

void sub_188330(id a1)
{
  qword_5432F8 = (uint64_t)objc_msgSend(objc_alloc((Class)NSSet), "initWithObjects:", CFSTR("itms"), CFSTR("itmss"), CFSTR("itms-books"), CFSTR("itms-bookss"), CFSTR("itms-itunesu"), 0);
}

void sub_1884FC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

id sub_18867C(id result, int a2)
{
  uint64_t v2;
  uint64_t v3;
  objc_super v4;

  if (a2)
  {
    v2 = *((_QWORD *)result + 5);
    v3 = *((_QWORD *)result + 4);
    v4.receiver = (id)*((_QWORD *)result + 6);
    v4.super_class = (Class)THApplicationDelegate;
    return objc_msgSendSuper2(&v4, "openURL:sourceDocumentRoot:", v3, v2);
  }
  return result;
}

void sub_1886FC(id a1)
{
  id v1;
  NSSet *v2;

  v1 = objc_msgSend(+[NSURL supportediBooksURLSchemes](NSURL, "supportediBooksURLSchemes"), "mutableCopy");
  v2 = +[NSSet setWithArray:](NSSet, "setWithArray:", &off_469AD8);
  objc_msgSend(v1, "unionSet:", +[NSSet setWithArray:](NSSet, "setWithArray:", &off_469AF0));
  objc_msgSend(v1, "minusSet:", v2);
  qword_543308 = (uint64_t)v1;
}

void RandGenerator::RandGenerator(RandGenerator *this)
{
  SP_InitRand(&this->var0.var0);
}

{
  SP_InitRand(&this->var0.var0);
}

void RandGenerator::randomDouble(RandGenerator *this)
{
  double i;

  for (i = SP_RandDouble(&this->var0.var0); i >= 1.0; i = SP_RandDouble(&this->var0.var0))
    ;
}

void RandGenerator::randWithMinMax(RandGenerator *this, double a2, double a3)
{
  if (a2 <= a3)
    RandGenerator::randomDouble(this);
}

void sub_18BB2C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18BC28()
{
  operator delete();
}

void sub_18BD00(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_18BE08(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_18BF40(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_18D1B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_18D1D0(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_18D1E0(uint64_t a1)
{

}

id sub_18D1E8(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40), "addObject:", a2);
}

id sub_18E024(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "p_exposeWebView");
}

id sub_18E448(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "p_exposeWebView");
}

uint64_t sub_18E90C(uint64_t a1, uint64_t a2)
{
  objc_msgSend(*(id *)(a1 + 32), "p_cacheLoadExternalContentApproval:", a2);
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
}

void sub_18EA54(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_18EA6C(uint64_t result, char a2)
{
  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(result + 32) + 8) + 24) = a2;
  return result;
}

uint64_t sub_18EA7C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

id sub_18F670(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "p_togglePanelDescriptionExpanded");
}

id sub_190010(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "p_exposeWebView");
}

id sub_1900E8(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "p_autoplayIfDesired");
}

id sub_190154(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "p_pauseOnCanvas");
}

id sub_1901C0(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "p_pauseOnCanvas");
}

void sub_1906BC(uint64_t a1)
{
  void *v2;
  void *v3;
  unsigned int v4;
  __CFString *v5;
  __CFString *v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  uint64_t v15;
  void *v16;
  void *v17;
  void *v18;
  id v19;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "info"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "autoplayConfig"));
  v4 = objc_msgSend(v3, "enabled");
  v5 = CFSTR("manual.");
  if (v4)
    v5 = CFSTR("autoplay.");
  v6 = v5;

  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "info"));
  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "bookID"));
  v19 = (id)objc_claimAutoreleasedReturnValue(-[__CFString stringByAppendingString:](v6, "stringByAppendingString:", v8));

  v9 = objc_alloc_init((Class)NSURLComponents);
  objc_msgSend(v9, "setScheme:", CFSTR("x-ibooks-th"));
  objc_msgSend(v9, "setHost:", v19);
  v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "path"));
  v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "info"));
  v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "bookBundleURL"));
  v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "path"));
  v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "im_stringWithPathRelativeTo:allowBacktracking:", v13, 0));

  if ((objc_msgSend(v14, "hasPrefix:", CFSTR("/")) & 1) == 0)
  {
    v15 = objc_claimAutoreleasedReturnValue(objc_msgSend(CFSTR("/"), "stringByAppendingString:", v14));

    v14 = (void *)v15;
  }
  objc_msgSend(v9, "setPath:", v14);
  v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "URL"));
  v17 = (void *)objc_claimAutoreleasedReturnValue(+[NSHTTPCookieStorage sharedHTTPCookieStorage](NSHTTPCookieStorage, "sharedHTTPCookieStorage"));
  objc_msgSend(v17, "setCookieAcceptPolicy:", 0);

  v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "webView"));
  objc_msgSend(v18, "loadURL:", v16);

}

id sub_1909FC(uint64_t a1)
{
  uint64_t v2;
  id result;

  v2 = *(_QWORD *)(a1 + 32);
  result = *(id *)(v2 + 336);
  if (result)
  {
    result = objc_msgSend(result, "removeFromSuperlayer");
    v2 = *(_QWORD *)(a1 + 32);
  }
  *(_BYTE *)(v2 + 282) = 1;
  return result;
}

void sub_190AA8(uint64_t a1)
{
  void *v2;
  id *v3;
  uint64_t v4;
  void *v5;
  id v6;

  *(_BYTE *)(*(_QWORD *)(a1 + 32) + 283) = 1;
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "layout"));
  objc_msgSend(v2, "hidePlayButton");

  v3 = *(id **)(a1 + 32);
  if (v3[43])
  {
    objc_msgSend(v3[43], "removeFromSuperlayer");
    v4 = *(_QWORD *)(a1 + 32);
    v5 = *(void **)(v4 + 344);
    *(_QWORD *)(v4 + 344) = 0;

    v3 = *(id **)(a1 + 32);
  }
  v6 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "interactiveCanvasController"));
  objc_msgSend(v6, "layoutInvalidated");

}

id sub_193390(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return objc_msgSend(*(id *)(a1 + 32), "p_filterAnimation:forLayer:key:forPlacardRep:", a2, a3, a4, 0);
}

id sub_193CD8(uint64_t a1)
{
  void *v1;
  _QWORD v3[5];

  v1 = *(void **)(a1 + 32);
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_193D2C;
  v3[3] = &unk_426DD0;
  v3[4] = v1;
  return objc_msgSend(v1, "p_addDropAnimationWithCompletion:", v3);
}

id sub_193D2C(uint64_t a1)
{
  +[CATransaction begin](CATransaction, "begin");
  +[CATransaction setDisableActions:](CATransaction, "setDisableActions:", 1);
  objc_msgSend(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 288), "layer"), "removeAllAnimations");
  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 296), "resumeLayerUpdatesAndLayoutImmediately");
  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 288), "teardown");

  *(_QWORD *)(*(_QWORD *)(a1 + 32) + 288) = 0;
  *(_QWORD *)(*(_QWORD *)(a1 + 32) + 296) = 0;
  return +[CATransaction commit](CATransaction, "commit");
}

id sub_194404(uint64_t a1)
{
  void *v2;
  CGAffineTransform v4;
  CGAffineTransform v5;

  objc_msgSend(*(id *)(a1 + 32), "beginAnimations:context:", CFSTR("scale"), 0);
  objc_msgSend(*(id *)(a1 + 32), "setAnimationDuration:", 0.15);
  CGAffineTransformMakeScale(&v5, 1.1, 1.1);
  v2 = *(void **)(a1 + 40);
  v4 = v5;
  objc_msgSend(v2, "setAffineTransform:", &v4);
  return objc_msgSend(*(id *)(a1 + 32), "commitAnimations");
}

id sub_194A40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return objc_msgSend(*(id *)(a1 + 32), "p_filterAnimation:forLayer:key:forPlacardRep:", a2, a3, a4, *(_QWORD *)(a1 + 40));
}

id sub_19838C(uint64_t a1)
{
  return objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "layer"), "setMasksToBounds:", 0);
}

id sub_19972C(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "shouldStopLoading");
}

uint64_t sub_199968(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 32);
  if (result)
    return (*(uint64_t (**)(void))(result + 16))();
  return result;
}

id sub_199A40(uint64_t a1, double a2)
{
  id v3;
  double v4;

  LODWORD(a2) = 0;
  objc_msgSend(*(id *)(a1 + 32), "setOpacity:", a2);
  objc_msgSend(*(id *)(a1 + 32), "setHidden:", 1);
  objc_msgSend(*(id *)(a1 + 40), "p_setupGestureRecognizers");
  v3 = objc_msgSend(objc_msgSend(*(id *)(a1 + 40), "sceneView"), "layer");
  LODWORD(v4) = 1.0;
  objc_msgSend(v3, "setOpacity:", v4);
  return objc_msgSend(*(id *)(a1 + 40), "resumeIdleAnimationIfNecessary");
}

id sub_199D34(uint64_t a1)
{
  void *v1;
  _QWORD v3[5];

  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_199D8C;
  v3[3] = &unk_426DD0;
  v1 = *(void **)(a1 + 32);
  v3[4] = *(_QWORD *)(a1 + 40);
  return objc_msgSend(v1, "performRead:", v3);
}

void sub_199D8C(uint64_t a1)
{
  id v2;
  _QWORD v3[6];

  v2 = objc_msgSend(*(id *)(a1 + 32), "sceneInfo");
  if (v2)
    v2 = objc_msgSend(*(id *)(a1 + 32), "p_loadSceneFromURL:", objc_msgSend(v2, "sourceURL"));
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_199E14;
  v3[3] = &unk_426E28;
  v3[4] = *(_QWORD *)(a1 + 32);
  v3[5] = v2;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v3);
}

id sub_199E14(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 32), "setIsLoading:", 0);
  objc_msgSend(*(id *)(a1 + 32), "setIsLoaded:", 1);
  objc_msgSend(*(id *)(a1 + 32), "setScene:", *(_QWORD *)(a1 + 40));
  return objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "delegate"), "sceneDidLoadForSceneController:", *(_QWORD *)(a1 + 32));
}

void sub_19A2B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,char a28)
{
  uint64_t v28;

  _Block_object_dispose(&a28, 8);
  _Block_object_dispose((const void *)(v28 - 136), 8);
  _Unwind_Resume(a1);
}

void sub_19A2DC(uint64_t a1, uint64_t a2)
{
  _Block_object_assign((void *)(a1 + 40), *(const void **)(a2 + 40), 131);
}

void sub_19A2EC(uint64_t a1)
{
  _Block_object_dispose(*(const void **)(a1 + 40), 131);
}

id sub_19A2F8(uint64_t a1, uint64_t a2, uint64_t a3, _BYTE *a4)
{
  id result;

  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = a2;
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40) = a3;
  result = objc_msgSend(*(id *)(a1 + 32), "shouldStopLoading");
  *a4 = (_BYTE)result;
  return result;
}

void sub_19AD90(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_19ADA8(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(result + 32) + 8) + 24) = a2;
  return result;
}

void sub_19AE54(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_19AE6C(uint64_t a1, uint64_t a2)
{
  _Block_object_assign((void *)(a1 + 40), *(const void **)(a2 + 40), 131);
}

void sub_19AE7C(uint64_t a1)
{
  _Block_object_dispose(*(const void **)(a1 + 40), 131);
}

id sub_19AE88(uint64_t a1, uint64_t a2, void *a3)
{
  id result;

  result = objc_msgSend(a3, "pageNumberStringForAbsolutePageIndex:presentationType:", a2, objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "sectionController"), "presentationType"));
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40) = result;
  return result;
}

void sub_19CC04(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_19CC1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unsigned int v7;
  void *v8;
  id result;

  objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "delegate"), "documentNavigator:willNavigateToAbsolutePageIndex:inContentNode:", *(_QWORD *)(a1 + 32), a2, a3);
  v7 = objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "documentRoot"), "isCorrupt");
  v8 = *(void **)(a1 + 32);
  if (v7)
    return objc_msgSend(objc_msgSend(v8, "delegate"), "documentNavigatorBookIsCorrupt:", *(_QWORD *)(a1 + 32));
  result = objc_msgSend(objc_msgSend(v8, "documentLinkResolver"), "anchorFromCustomLink:presentationType:", *(_QWORD *)(a1 + 40), objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "sectionController"), "presentationType"));
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40) = result;
  if (!*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40))
  {
    result = +[THContentLinkResolver navigableAnchorFromLink:withContentNode:presentationType:](THContentLinkResolver, "navigableAnchorFromLink:withContentNode:presentationType:", a4, a3, objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "sectionController"), "presentationType"));
    *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40) = result;
  }
  return result;
}

void sub_19D3E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,char a34)
{
  _Block_object_dispose(&a34, 8);
  _Unwind_Resume(a1);
}

id sub_19D408(uint64_t a1)
{
  double v2;
  double v3;
  double v4;
  double v5;

  objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "sectionController"), "rectForBodyAnchor:", *(_QWORD *)(a1 + 40));
  return objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "delegate"), "documentNavigator:scrollToAbsolutePageIndex:specificUnscaledCanvasRect:animated:willPulse:", *(_QWORD *)(a1 + 32), objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "sectionController"), "absolutePageIndexForBodyStorageAnchor:", *(_QWORD *)(a1 + 40)), 0, *(unsigned __int8 *)(a1 + 48), v2, v3, v4, v5);
}

id sub_19D490(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, _BYTE *a5)
{
  id result;

  result = objc_msgSend(a2, "drawable");
  if (result == *(id *)(a1 + 32))
  {
    *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = a4;
    *a5 = 1;
  }
  return result;
}

id sub_19D4E4(uint64_t a1)
{
  return objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "delegate"), "documentNavigator:scrollToAbsolutePageIndex:specificUnscaledCanvasRect:animated:willPulse:", *(_QWORD *)(a1 + 32), objc_msgSend(*(id *)(a1 + 40), "absolutePageIndex"), 1, *(unsigned __int8 *)(a1 + 80), *(double *)(a1 + 48), *(double *)(a1 + 56), *(double *)(a1 + 64), *(double *)(a1 + 72));
}

id sub_19D538(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "p_scrollToAbsolutePageIndex:animated:", *(_QWORD *)(a1 + 40), 1);
}

id sub_19D5E0(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "setVisibleAbsolutePhysicalPageIndex:", *(_QWORD *)(a1 + 40));
}

id sub_19D73C(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "performSelector:withObject:afterDelay:", "p_pulseStorageAnchor:", *(_QWORD *)(a1 + 40), 0.0);
}

void sub_19D8E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_19D8FC(_QWORD *a1)
{
  return objc_msgSend(objc_msgSend(*(id *)(*(_QWORD *)(a1[6] + 8) + 40), "delegate"), "documentNavigator:editAnnotation:noteSelectionRange:", a1[4], a1[5], a1[7], a1[8]);
}

void sub_19DD5C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_19DD78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _BYTE *a5)
{
  uint64_t v8;
  void *v9;
  void *v10;
  uint64_t v11;
  void *v12;
  double v13;
  id v14;
  uint64_t v15;

  v8 = objc_opt_class(TSWPDrawableAttachment);
  TSUDynamicCast(v8, a2);
  v10 = v9;
  v11 = objc_opt_class(THWAnchoredWidgetInfo);
  *(_QWORD *)&v13 = TSUDynamicCast(v11, objc_msgSend(v10, "drawable")).n128_u64[0];
  if (v12)
  {
    if (objc_msgSend(v12, "widgetInfo", v13) == *(id *)(a1 + 32))
    {
      v14 = objc_msgSend(v10, "findCharIndex");
      v15 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
      *(_QWORD *)(v15 + 32) = v14;
      *(_QWORD *)(v15 + 40) = 1;
      *a5 = 1;
    }
  }
}

id sub_19E578(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 32), "setIsScrollingAcrossSections:", 0);
  return objc_msgSend(*(id *)(a1 + 32), "setVisibleAbsolutePhysicalPageIndex:animated:", *(_QWORD *)(a1 + 40), 0);
}

id sub_19E65C(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 32), "setIsScrollingAcrossSections:", 0);
  return objc_msgSend(*(id *)(a1 + 32), "setVisibleAbsolutePhysicalPageIndex:animated:", *(_QWORD *)(a1 + 40), 0);
}

double SP_Init(uint64_t a1)
{
  double result;

  *(_QWORD *)(a1 + 128) = 0;
  result = 0.0;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_DWORD *)(a1 + 136) = 20;
  return result;
}

uint64_t SP_InitSeed(CC_SHA1_CTX *c, void *__src, CC_LONG a3)
{
  size_t v6;
  uint64_t result;

  if (a3 >= 0x14)
    v6 = 20;
  else
    v6 = a3;
  if ((_DWORD)v6)
    memmove(&c[1], __src, v6);
  if (a3 >= 0x14)
  {
    CC_SHA1_Init(c);
  }
  else
  {
    bzero((char *)&c[1] + v6, (20 - v6));
    CC_SHA1_Init(c);
    if (!a3)
      goto LABEL_11;
  }
  CC_SHA1_Update(c, __src, a3);
LABEL_11:
  result = CC_SHA1_Final((unsigned __int8 *)&c[1].Nl, c);
  c[1].data[3] = 0;
  return result;
}

uint64_t SP_InitRand(CC_SHA1_CTX *a1)
{
  int v2;
  _BYTE __src[20];

  v2 = open("/dev/random", 0);
  read(v2, __src, 0x14uLL);
  close(v2);
  return SP_InitSeed(a1, __src, 0x14u);
}

CC_SHA1_CTX *SP_Random(CC_SHA1_CTX *c, char *__dst, unsigned int a3)
{
  unsigned int v3;
  CC_SHA1_CTX *v5;
  CC_LONG *p_Nl;
  CC_SHA1_CTX *v7;
  CC_LONG i;
  size_t v9;

  if (a3)
  {
    v3 = a3;
    v5 = c;
    p_Nl = &c[1].Nl;
    v7 = c + 1;
    for (i = c[1].data[3]; ; i = 0)
    {
      if (i != 20)
      {
        if (v3 >= 20 - i)
          v9 = 20 - i;
        else
          v9 = v3;
        c = (CC_SHA1_CTX *)memmove(__dst, (char *)p_Nl + i, v9);
        v5[1].data[3] += v9;
        v3 -= v9;
        if (!v3)
          return c;
        __dst += v9;
      }
      CC_SHA1_Init(v5);
      CC_SHA1_Update(v5, p_Nl, 0x14u);
      CC_SHA1_Update(v5, v7, 0x14u);
      CC_SHA1_Final((unsigned __int8 *)p_Nl, v5);
      v5[1].data[3] = 0;
    }
  }
  return c;
}

uint64_t SP_RandInt64(CC_SHA1_CTX *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t __dst;

  v3 = a2;
  v4 = a3 - a2;
  if (a3 != a2)
  {
    __dst = 0;
    SP_Random(a1, (char *)&__dst, 8u);
    v3 += __dst % (v4 + 1);
  }
  return v3;
}

uint64_t SP_RandInt32(CC_SHA1_CTX *a1)
{
  unsigned int __dst;

  __dst = 0;
  SP_Random(a1, (char *)&__dst, 4u);
  return __dst;
}

uint64_t SP_RandSize(CC_SHA1_CTX *a1)
{
  uint64_t __dst;

  __dst = 0;
  SP_Random(a1, (char *)&__dst, 8u);
  return __dst;
}

double SP_RandDouble(CC_SHA1_CTX *a1)
{
  unint64_t __dst;

  __dst = 0;
  SP_Random(a1, (char *)&__dst, 8u);
  return (double)__dst * 5.42101086e-20;
}

id sub_1A02B8(uint64_t a1)
{
  return objc_msgSend(objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "documentRoot"), "stylesheet"), "addStyle:", *(_QWORD *)(a1 + 40));
}

id sub_1A02E4(uint64_t a1)
{
  return objc_msgSend(objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "documentRoot"), "stylesheet"), "addStyle:", *(_QWORD *)(a1 + 40));
}

uint64_t _THSearchModelForString(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  id v6;
  id v7;
  uint64_t v8;
  void *i;
  uint64_t v10;
  void *v11;
  id v12;
  int v13;
  uint64_t v14;
  _QWORD v18[5];
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  char v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  _BYTE v27[128];

  v6 = objc_msgSend(objc_alloc((Class)TSKDocumentModelEnumerator), "initWithRootModelObject:filter:", a1, 0);
  v23 = 0u;
  v24 = 0u;
  v25 = 0u;
  v26 = 0u;
  v7 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v23, v27, 16);
  if (v7)
  {
    v8 = *(_QWORD *)v24;
    while (2)
    {
      for (i = 0; i != v7; i = (char *)i + 1)
      {
        if (*(_QWORD *)v24 != v8)
          objc_enumerationMutation(v6);
        v10 = *(_QWORD *)(*((_QWORD *)&v23 + 1) + 8 * (_QWORD)i);
        if (v10 != a1 || (a4 & 1) == 0)
        {
          v11 = (void *)TSUProtocolCast(&OBJC_PROTOCOL___TSKSearchable, v10);
          if ((objc_opt_respondsToSelector(v11, "searchForString:options:onHit:") & 1) != 0
            && (objc_opt_respondsToSelector(v11, "continueSearch:") & 1) != 0)
          {
            v19 = 0;
            v20 = &v19;
            v21 = 0x2020000000;
            v22 = 0;
            v18[0] = _NSConcreteStackBlock;
            v18[1] = 3221225472;
            v18[2] = sub_1A07B8;
            v18[3] = &unk_42AA70;
            v18[4] = &v19;
            v12 = objc_msgSend(v11, "searchForString:options:onHit:", a2, a3, v18);
            if (v12)
            {
              while (!*((_BYTE *)v20 + 24) && (objc_msgSend(v12, "isComplete") & 1) == 0)
                objc_msgSend(v11, "continueSearch:", v12);
            }
            v13 = *((unsigned __int8 *)v20 + 24);
            _Block_object_dispose(&v19, 8);
            if (v13)
            {
              v14 = 1;
              goto LABEL_19;
            }
          }
        }
      }
      v7 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v23, v27, 16);
      if (v7)
        continue;
      break;
    }
  }
  v14 = 0;
LABEL_19:

  return v14;
}

void sub_1A0794(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1A07B8(uint64_t result)
{
  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(result + 32) + 8) + 24) = 1;
  return result;
}

uint64_t THSearchModelForString(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _THSearchModelForString(a1, a2, a3, 0);
}

id THSearchModelsForString(void *a1, uint64_t a2, uint64_t a3)
{
  id result;
  id v7;
  uint64_t v8;
  void *v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  _BYTE v14[128];

  v10 = 0u;
  v11 = 0u;
  v12 = 0u;
  v13 = 0u;
  result = objc_msgSend(a1, "countByEnumeratingWithState:objects:count:", &v10, v14, 16);
  if (result)
  {
    v7 = result;
    v8 = *(_QWORD *)v11;
    while (2)
    {
      v9 = 0;
      do
      {
        if (*(_QWORD *)v11 != v8)
          objc_enumerationMutation(a1);
        if ((_THSearchModelForString(*(_QWORD *)(*((_QWORD *)&v10 + 1) + 8 * (_QWORD)v9), a2, a3, 0) & 1) != 0)
          return &dword_0 + 1;
        v9 = (char *)v9 + 1;
      }
      while (v7 != v9);
      result = objc_msgSend(a1, "countByEnumeratingWithState:objects:count:", &v10, v14, 16);
      v7 = result;
      if (result)
        continue;
      break;
    }
  }
  return result;
}

uint64_t THSearchModelChildrenForString(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _THSearchModelForString(a1, a2, a3, 1);
}

id sub_1A0B90(uint64_t a1, void *a2)
{
  objc_msgSend(a2, "setValue:forProperty:", *(_QWORD *)(a1 + 32), 16);
  return objc_msgSend(a2, "setValue:forProperty:", *(_QWORD *)(a1 + 40), 18);
}

id sub_1A0BCC(uint64_t a1, void *a2)
{
  objc_msgSend(a2, "setValue:forProperty:", *(_QWORD *)(a1 + 32), 16);
  return objc_msgSend(a2, "setValue:forProperty:", *(_QWORD *)(a1 + 40), 18);
}

id sub_1A0D90(uint64_t a1, void *a2)
{
  objc_msgSend(a2, "setValue:forProperty:", *(_QWORD *)(a1 + 32), 16);
  objc_msgSend(a2, "setCGFloatValue:forProperty:", 17, *(double *)(a1 + 48));
  return objc_msgSend(a2, "setValue:forProperty:", *(_QWORD *)(a1 + 40), 18);
}

id sub_1A0DDC(uint64_t a1, void *a2)
{
  objc_msgSend(a2, "setValue:forProperty:", *(_QWORD *)(a1 + 32), 16);
  objc_msgSend(a2, "setCGFloatValue:forProperty:", 17, *(double *)(a1 + 48));
  return objc_msgSend(a2, "setValue:forProperty:", *(_QWORD *)(a1 + 40), 18);
}

id sub_1A0FE4(uint64_t a1, void *a2)
{
  id result;

  objc_msgSend(a2, "setValue:forProperty:", *(_QWORD *)(a1 + 32), 16);
  objc_msgSend(a2, "setCGFloatValue:forProperty:", 17, *(double *)(a1 + 56));
  result = objc_msgSend(a2, "setValue:forProperty:", *(_QWORD *)(a1 + 40), 18);
  if (*(_BYTE *)(a1 + 64))
    return objc_msgSend(*(id *)(a1 + 48), "p_removeBackgroundFillFromStyle:", a2);
  return result;
}

id sub_1A1050(uint64_t a1, void *a2)
{
  id result;
  double v5;
  double v6;
  double v7;
  double v8;

  objc_msgSend(a2, "setValue:forProperty:", *(_QWORD *)(a1 + 32), 16);
  objc_msgSend(a2, "setCGFloatValue:forProperty:", 17, *(double *)(a1 + 56));
  objc_msgSend(a2, "setValue:forProperty:", *(_QWORD *)(a1 + 40), 18);
  result = objc_msgSend(a2, "setIntValue:forProperty:", *(unsigned int *)(a1 + 64), 86);
  if (*(_BYTE *)(a1 + 68))
    result = objc_msgSend(*(id *)(a1 + 48), "p_removeBackgroundFillFromStyle:", a2);
  if (*(_BYTE *)(a1 + 69))
  {
    LODWORD(v5) = 0;
    objc_msgSend(a2, "setFloatValue:forProperty:", 81, v5);
    LODWORD(v6) = 0;
    objc_msgSend(a2, "setFloatValue:forProperty:", 80, v6);
    LODWORD(v7) = 0;
    objc_msgSend(a2, "setFloatValue:forProperty:", 87, v7);
    LODWORD(v8) = 0;
    return objc_msgSend(a2, "setFloatValue:forProperty:", 88, v8);
  }
  return result;
}

void sub_1A142C(id a1, TSWPListStyle *a2)
{
  id v3;
  id v4;
  NSNumber *v5;
  id v6;
  NSMutableArray *v7;
  NSMutableArray *v8;
  NSMutableArray *v9;
  id v10;
  unint64_t v11;
  uint64_t v12;
  double v13;
  id v14;
  id v15;

  if (-[TSWPListStyle definesProperty:](a2, "definesProperty:", 180))
  {
    v3 = -[TSWPListStyle valueForProperty:](a2, "valueForProperty:", 180);
    v4 = -[TSWPListStyle valueForProperty:](a2, "valueForProperty:", 183);
    v5 = +[NSNumber numberWithInt:](NSNumber, "numberWithInt:", 2);
    v6 = +[TSWPListStyle defaultLabelString](TSWPListStyle, "defaultLabelString");
    v15 = +[TSWPListStyle defaultLabelIndents](TSWPListStyle, "defaultLabelIndents");
    v7 = +[NSMutableArray arrayWithArray:](NSMutableArray, "arrayWithArray:", v3);
    v8 = +[NSMutableArray arrayWithArray:](NSMutableArray, "arrayWithArray:", v4);
    v9 = (NSMutableArray *)-[TSWPListStyle valueForProperty:](a2, "valueForProperty:", 177);
    if (!-[NSMutableArray count](v8, "count"))
    {
      while (1)
      {
        v10 = -[NSMutableArray count](v8, "count");
        if (v10 >= -[NSMutableArray count](v7, "count"))
          break;
        -[NSMutableArray addObject:](v8, "addObject:", v6);
      }
    }
    if (!-[NSMutableArray count](v9, "count"))
      v9 = +[NSMutableArray arrayWithArray:](NSMutableArray, "arrayWithArray:", v15);
    if (objc_msgSend(v3, "count"))
    {
      v11 = 0;
      do
      {
        v12 = objc_opt_class(NSNumber);
        *(_QWORD *)&v13 = TSUDynamicCast(v12, objc_msgSend(v3, "objectAtIndex:", v11)).n128_u64[0];
        if (objc_msgSend(v14, "intValue", v13) == 3)
        {
          -[NSMutableArray replaceObjectAtIndex:withObject:](v7, "replaceObjectAtIndex:withObject:", v11, v5);
          if (v11 >= (unint64_t)-[NSMutableArray count](v8, "count"))
            -[NSMutableArray addObject:](v8, "addObject:", v6);
          else
            -[NSMutableArray replaceObjectAtIndex:withObject:](v8, "replaceObjectAtIndex:withObject:", v11, v6);
        }
        ++v11;
      }
      while (v11 < (unint64_t)objc_msgSend(v3, "count"));
    }
    -[TSWPListStyle setValue:forProperty:](a2, "setValue:forProperty:", v9, 177);
    -[TSWPListStyle setValue:forProperty:](a2, "setValue:forProperty:", v7, 180);
    -[TSWPListStyle setValue:forProperty:](a2, "setValue:forProperty:", v8, 183);
  }
}

void sub_1A16E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  TSWPAttributeEnumerator::~TSWPAttributeEnumerator((TSWPAttributeEnumerator *)va);
  _Unwind_Resume(a1);
}

void sub_1A17C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  TSWPAttributeEnumerator::~TSWPAttributeEnumerator((TSWPAttributeEnumerator *)va);
  _Unwind_Resume(a1);
}

void sub_1A18A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  TSWPAttributeEnumerator::~TSWPAttributeEnumerator((TSWPAttributeEnumerator *)va);
  _Unwind_Resume(a1);
}

int64_t sub_1A1E64(id a1, THAnnotation *a2, THAnnotation *a3)
{
  id v4;
  id v5;
  int64_t v6;

  v4 = -[THAnnotation annotationStorageRange](a2, "annotationStorageRange");
  v5 = -[THAnnotation annotationStorageRange](a3, "annotationStorageRange");
  v6 = 1;
  if (v4 <= v5)
    v6 = -1;
  if (v4 == v5)
    return 0;
  else
    return v6;
}

int64_t sub_1A1EA4(id a1, THAnnotation *a2, THAnnotation *a3)
{
  id v4;
  id v5;
  int64_t v6;

  v4 = -[THAnnotation annotationAbsolutePhysicalPageIndex](a2, "annotationAbsolutePhysicalPageIndex");
  v5 = -[THAnnotation annotationAbsolutePhysicalPageIndex](a3, "annotationAbsolutePhysicalPageIndex");
  v6 = 1;
  if (v4 <= v5)
    v6 = -1;
  if (v4 == v5)
    return 0;
  else
    return v6;
}

BOOL sub_1A2654(NSRange *a1, void *a2)
{
  NSUInteger v3;
  NSRange v5;

  v5.location = (NSUInteger)objc_msgSend(a2, "annotationStorageRange");
  v5.length = v3;
  return NSIntersectionRange(a1[32], v5).length != 0;
}

id sub_1A2720(uint64_t a1)
{
  id v2;
  id v3;
  id v4;
  id v5;
  uint64_t v6;
  void *i;
  void *v8;
  id v9;
  id v10;
  uint64_t v11;
  void *j;
  void *v13;
  id v14;
  id v15;
  uint64_t v16;
  void *k;
  void *v18;
  id result;
  id v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  _BYTE v40[128];
  _BYTE v41[128];
  _BYTE v42[128];
  _BYTE v43[128];

  v2 = objc_alloc_init((Class)NSMutableDictionary);
  v38 = 0u;
  v39 = 0u;
  v36 = 0u;
  v37 = 0u;
  v23 = a1;
  v3 = objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 16), "objectEnumerator");
  v4 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v36, v43, 16);
  if (v4)
  {
    v5 = v4;
    v6 = *(_QWORD *)v37;
    do
    {
      for (i = 0; i != v5; i = (char *)i + 1)
      {
        if (*(_QWORD *)v37 != v6)
          objc_enumerationMutation(v3);
        v8 = *(void **)(*((_QWORD *)&v36 + 1) + 8 * (_QWORD)i);
        v32 = 0u;
        v33 = 0u;
        v34 = 0u;
        v35 = 0u;
        v9 = objc_msgSend(v8, "countByEnumeratingWithState:objects:count:", &v32, v42, 16);
        if (v9)
        {
          v10 = v9;
          v11 = *(_QWORD *)v33;
          do
          {
            for (j = 0; j != v10; j = (char *)j + 1)
            {
              if (*(_QWORD *)v33 != v11)
                objc_enumerationMutation(v8);
              objc_msgSend(v2, "setObject:forKey:", *(_QWORD *)(*((_QWORD *)&v32 + 1) + 8 * (_QWORD)j), objc_msgSend(*(id *)(*((_QWORD *)&v32 + 1) + 8 * (_QWORD)j), "annotationUuid"));
            }
            v10 = objc_msgSend(v8, "countByEnumeratingWithState:objects:count:", &v32, v42, 16);
          }
          while (v10);
        }
      }
      v5 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v36, v43, 16);
    }
    while (v5);
  }
  v30 = 0u;
  v31 = 0u;
  v28 = 0u;
  v29 = 0u;
  v13 = *(void **)(*(_QWORD *)(v23 + 32) + 80);
  v14 = objc_msgSend(v13, "countByEnumeratingWithState:objects:count:", &v28, v41, 16);
  if (v14)
  {
    v15 = v14;
    v16 = *(_QWORD *)v29;
    do
    {
      for (k = 0; k != v15; k = (char *)k + 1)
      {
        if (*(_QWORD *)v29 != v16)
          objc_enumerationMutation(v13);
        objc_msgSend(v2, "setObject:forKey:", *(_QWORD *)(*((_QWORD *)&v28 + 1) + 8 * (_QWORD)k), objc_msgSend(*(id *)(*((_QWORD *)&v28 + 1) + 8 * (_QWORD)k), "annotationUuid"));
      }
      v15 = objc_msgSend(v13, "countByEnumeratingWithState:objects:count:", &v28, v41, 16);
    }
    while (v15);
  }
  v26 = 0u;
  v27 = 0u;
  v24 = 0u;
  v25 = 0u;
  v18 = *(void **)(*(_QWORD *)(v23 + 32) + 88);
  result = objc_msgSend(v18, "countByEnumeratingWithState:objects:count:", &v24, v40, 16);
  if (result)
  {
    v20 = result;
    v21 = *(_QWORD *)v25;
    do
    {
      v22 = 0;
      do
      {
        if (*(_QWORD *)v25 != v21)
          objc_enumerationMutation(v18);
        objc_msgSend(v2, "setObject:forKey:", *(_QWORD *)(*((_QWORD *)&v24 + 1) + 8 * (_QWORD)v22), objc_msgSend(*(id *)(*((_QWORD *)&v24 + 1) + 8 * (_QWORD)v22), "annotationUuid"));
        v22 = (char *)v22 + 1;
      }
      while (v20 != v22);
      result = objc_msgSend(v18, "countByEnumeratingWithState:objects:count:", &v24, v40, 16);
      v20 = result;
    }
    while (result);
  }
  *(_QWORD *)(*(_QWORD *)(v23 + 32) + 24) = v2;
  return result;
}

int64_t sub_1A2C18(id a1, THAnnotation *a2, THAnnotation *a3)
{
  id v4;
  id v5;
  int64_t v6;

  v4 = -[THAnnotation annotationAbsolutePhysicalPageIndex](a2, "annotationAbsolutePhysicalPageIndex");
  v5 = -[THAnnotation annotationAbsolutePhysicalPageIndex](a3, "annotationAbsolutePhysicalPageIndex");
  v6 = 1;
  if (v4 <= v5)
    v6 = -1;
  if (v4 == v5)
    return 0;
  else
    return v6;
}

int64_t sub_1A2F20(id a1, THAnnotation *a2, THAnnotation *a3)
{
  id v4;
  id v5;
  int64_t v6;

  v4 = -[THAnnotation annotationAbsolutePhysicalPageIndex](a2, "annotationAbsolutePhysicalPageIndex");
  v5 = -[THAnnotation annotationAbsolutePhysicalPageIndex](a3, "annotationAbsolutePhysicalPageIndex");
  v6 = 1;
  if (v4 <= v5)
    v6 = -1;
  if (v4 == v5)
    return 0;
  else
    return v6;
}

int64_t sub_1A3014(id a1, THAnnotation *a2, THAnnotation *a3)
{
  id v4;
  id v5;
  int64_t v6;

  v4 = -[THAnnotation annotationStorageRange](a2, "annotationStorageRange");
  v5 = -[THAnnotation annotationStorageRange](a3, "annotationStorageRange");
  v6 = 1;
  if (v4 <= v5)
    v6 = -1;
  if (v4 == v5)
    return 0;
  else
    return v6;
}

int64_t sub_1A31B4(id a1, THAnnotation *a2, THAnnotation *a3)
{
  id v4;
  id v5;
  int64_t v6;

  v4 = -[THAnnotation annotationStorageRange](a2, "annotationStorageRange");
  v5 = -[THAnnotation annotationStorageRange](a3, "annotationStorageRange");
  v6 = 1;
  if (v4 <= v5)
    v6 = -1;
  if (v4 == v5)
    return 0;
  else
    return v6;
}

id sub_1A36E0(void *a1, void *a2)
{
  id result;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  unsigned int v10;
  id v11;
  id v12;

  if (a1 == a2)
    return &dword_0 + 1;
  result = 0;
  if (a1)
  {
    if (a2)
    {
      v5 = objc_msgSend(a1, "annotationStorageRange");
      v7 = v6;
      v9 = objc_msgSend(a2, "annotationStorageRange");
      result = 0;
      if (v5 == v9 && v7 == v8)
      {
        v10 = objc_msgSend(a1, "annotationStyle");
        if (v10 == objc_msgSend(a2, "annotationStyle"))
        {
          v11 = objc_msgSend(a1, "annotationNote");
          v12 = objc_msgSend(a2, "annotationNote");
          if (v11 == v12)
            return &dword_0 + 1;
          result = objc_msgSend(v11, "isEqualToString:", v12);
          if ((_DWORD)result)
            return &dword_0 + 1;
        }
        else
        {
          return 0;
        }
      }
    }
  }
  return result;
}

BOOL sub_1A3CC0(id a1, THAnnotation *a2)
{
  return -[THAnnotation annotationNote](a2, "annotationNote") != 0;
}

BOOL sub_1A3CEC(id a1, THAnnotation *a2)
{
  return a2 != 0;
}

BOOL sub_1A3D48(NSRange *a1, void *a2)
{
  NSUInteger location;
  NSUInteger length;
  NSRange v5;
  NSUInteger v6;
  NSUInteger v7;
  _BOOL4 v9;
  NSRange v12;

  v12.location = (NSUInteger)objc_msgSend(a2, "annotationStorageRange");
  location = v12.location;
  length = v12.length;
  v5 = NSIntersectionRange(v12, a1[2]);
  v6 = a1[2].location;
  v7 = a1[2].length;
  v9 = location != v6 || length != v7;
  return v5.location == v6 && v5.length == v7 && v9;
}

BOOL sub_1A3DF0(uint64_t a1, void *a2)
{
  uint64_t v3;

  return objc_msgSend(a2, "annotationStorageRange") == *(id *)(a1 + 32) && v3 == *(_QWORD *)(a1 + 40);
}

BOOL sub_1A3E84(uint64_t a1, void *a2)
{
  NSRange v4;
  NSRange v7;

  v7.location = (NSUInteger)objc_msgSend(a2, "annotationStorageRange");
  v4 = NSIntersectionRange(v7, *(NSRange *)(a1 + 32));
  return v4.location == *(_QWORD *)(a1 + 32)
      && v4.length == *(_QWORD *)(a1 + 40)
      && objc_msgSend(a2, "annotationStyle") == *(_DWORD *)(a1 + 48);
}

void sub_1A3F9C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_1A3FB8(uint64_t a1, void *a2)
{
  NSRange *v3;
  NSUInteger location;
  id result;
  NSUInteger v6;
  NSRange v7;
  NSRange v8;

  v3 = *(NSRange **)(*(_QWORD *)(a1 + 32) + 8);
  location = v3[2].location;
  result = objc_msgSend(a2, "annotationStorageRange");
  v7.location = (NSUInteger)result;
  v7.length = v6;
  if (location != 0x7FFFFFFFFFFFFFFFLL)
  {
    v8 = NSUnionRange(v3[2], v7);
    result = (id)v8.location;
    v7 = v8;
  }
  *(NSRange *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 32) = v7;
  return result;
}

int64_t sub_1A4144(id a1, THAnnotation *a2, THAnnotation *a3)
{
  id v4;
  id v5;
  int64_t v6;

  v4 = -[THAnnotation annotationStorageRange](a2, "annotationStorageRange");
  v5 = -[THAnnotation annotationStorageRange](a3, "annotationStorageRange");
  v6 = 1;
  if (v4 <= v5)
    v6 = -1;
  if (v4 == v5)
    return 0;
  else
    return v6;
}

int64_t sub_1A4194(id a1, THAnnotation *a2, THAnnotation *a3)
{
  if (-[THAnnotation annotationIsUnderline](a2, "annotationIsUnderline")
    && !-[THAnnotation annotationIsUnderline](a3, "annotationIsUnderline"))
  {
    return 1;
  }
  if ((-[THAnnotation annotationIsUnderline](a2, "annotationIsUnderline") & 1) != 0
    || (-[THAnnotation annotationIsUnderline](a3, "annotationIsUnderline") & 1) == 0)
  {
    return (int64_t)objc_msgSend(-[THAnnotation annotationCreationDate](a2, "annotationCreationDate"), "compare:", -[THAnnotation annotationCreationDate](a3, "annotationCreationDate"));
  }
  return -1;
}

int64_t sub_1A422C(id a1, THAnnotation *a2, THAnnotation *a3)
{
  id v5;
  id v6;
  int64_t result;
  id v8;
  unint64_t v9;
  unint64_t v10;
  id v11;
  unint64_t v12;
  int64_t v13;
  int64_t v14;

  v5 = -[THAnnotation annotationAbsolutePhysicalPageIndex](a2, "annotationAbsolutePhysicalPageIndex");
  v6 = -[THAnnotation annotationAbsolutePhysicalPageIndex](a3, "annotationAbsolutePhysicalPageIndex");
  if (v5 == v6)
  {
    result = (int64_t)objc_msgSend(-[THAnnotation annotationStorageUID](a2, "annotationStorageUID"), "compare:", -[THAnnotation annotationStorageUID](a3, "annotationStorageUID"));
    if (result != 1)
    {
      if (result)
      {
        return -1;
      }
      else
      {
        v8 = -[THAnnotation annotationStorageRange](a2, "annotationStorageRange");
        v10 = v9;
        v11 = -[THAnnotation annotationStorageRange](a3, "annotationStorageRange");
        v13 = 1;
        if (v8 <= v11)
          v13 = -1;
        v14 = 1;
        if (v10 <= v12)
          v14 = -1;
        if (v10 == v12)
          v14 = 0;
        if (v8 == v11)
          return v14;
        else
          return v13;
      }
    }
  }
  else if (v5 > v6)
  {
    return 1;
  }
  else
  {
    return -1;
  }
  return result;
}

NSNumber *sub_1A4AC0(uint64_t a1, uint64_t a2, void *a3)
{
  id v5;
  id v6;
  NSNumber *result;
  id v8;
  id v9;

  v5 = objc_msgSend(*(id *)(a1 + 32), "bookDescription");
  v6 = objc_msgSend(*(id *)(a1 + 32), "bookMetadata");
  if (objc_msgSend(a3, "isEqualToString:", AEAssetActivityItemProviderPropertyAssetId))
    return (NSNumber *)objc_msgSend(objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "bookDescription"), "asset"), "assetID");
  if (objc_msgSend(a3, "isEqualToString:", AEAssetActivityItemProviderPropertyStoreId))
    return (NSNumber *)objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "bookDescription"), "storeID");
  if (objc_msgSend(a3, "isEqualToString:", AEAssetActivityItemProviderPropertyStoreUrl))
    return (NSNumber *)objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "bookDescription"), "storeURL");
  if (objc_msgSend(a3, "isEqualToString:", AEAssetActivityItemProviderPropertyAssetCover))
  {
    v8 = objc_msgSend(objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "bookDescription"), "asset"), "url");
    return (NSNumber *)objc_msgSend(objc_msgSend(-[AEPluginRegistry pluginForURL:](+[AEPluginRegistry sharedInstance](AEPluginRegistry, "sharedInstance"), "pluginForURL:", v8), "helperForURL:withOptions:", v8, 0), "helperCoverImage");
  }
  if (objc_msgSend(a3, "isEqualToString:", AEAssetActivityItemProviderPropertyTitle))
  {
    result = (NSNumber *)objc_msgSend(v6, "objectForKey:", CFSTR("itemName"));
    if (!result)
      return (NSNumber *)objc_msgSend(v5, "bookTitle");
  }
  else if (objc_msgSend(a3, "isEqualToString:", AEAssetActivityItemProviderPropertyAuthor))
  {
    result = (NSNumber *)objc_msgSend(v6, "objectForKey:", CFSTR("artistName"));
    if (!result)
      return (NSNumber *)objc_msgSend(v5, "bookAuthor");
  }
  else
  {
    if (objc_msgSend(a3, "isEqualToString:", AEAssetActivityItemProviderPropertyVersion))
      return (NSNumber *)objc_msgSend(v5, "bookVersionString");
    if ((objc_msgSend(a3, "isEqualToString:", AEAssetActivityItemProviderPropertyPublisherLocation) & 1) != 0)
      return 0;
    if (objc_msgSend(a3, "isEqualToString:", AEAssetActivityItemProviderPropertyPublisherName))
      return (NSNumber *)objc_msgSend(v6, "objectForKey:", CFSTR("publisher"));
    if (objc_msgSend(a3, "isEqualToString:", AEAssetActivityItemProviderPropertyPublisherYear))
      return (NSNumber *)objc_msgSend(*(id *)(a1 + 32), "yearFromReleaseDate");
    if (objc_msgSend(a3, "isEqualToString:", AEAssetActivityItemProviderPropertyIsContentProtected))
      return +[NSNumber numberWithBool:](NSNumber, "numberWithBool:", objc_msgSend(objc_msgSend(v5, "drmContext"), "kiUanAfQBD5qIUraolUj"));
    if (objc_msgSend(a3, "isEqualToString:", AEAssetActivityItemProviderPropertyAssetType))
      return (NSNumber *)objc_msgSend(objc_msgSend(v5, "asset"), "assetType");
    if (!objc_msgSend(a3, "isEqualToString:", AEAssetActivityItemProviderPropertyBookDescription))
    {
      return 0;
    }
    else
    {
      v9 = objc_msgSend(v6, "objectForKeyedSubscript:", CFSTR("description"));
      if (!objc_msgSend(v9, "length"))
        v9 = objc_msgSend(v6, "objectForKeyedSubscript:", CFSTR("bookDescription"));
      if (!objc_msgSend(v9, "length"))
        v9 = objc_msgSend(v6, "objectForKeyedSubscript:", CFSTR("longDescription"));
      result = (NSNumber *)objc_msgSend(v9, "length");
      if (result)
        return (NSNumber *)objc_msgSend(v9, "im_stringByStrippingHTML");
    }
  }
  return result;
}

double TSUNormalizedPointInRect(double a1, double a2, double a3, double a4, double a5)
{
  return (a1 - a3) / a5;
}

void sub_1A5F58(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 208), 8);
  _Block_object_dispose((const void *)(v1 - 176), 8);
  _Unwind_Resume(a1);
}

void sub_1A5F80(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 *v4;
  __n128 v5;
  __n128 v6;
  __n128 *v7;
  __n128 v8;
  __n128 v9;
  double v10;
  double v11;
  float v12;
  float v13;
  char v14;
  char v15;
  uint64_t v16;
  __n128 v17;
  __n128 v18;
  uint64_t v19;
  __n128 v20;
  __n128 v21;
  double v22;
  double v23;
  double v24;
  double v25;
  uint64_t v26;
  __n128 v27;
  __n128 v28;
  __n128 v29;
  uint64_t v30;
  __n128 v31;
  double v32;
  double v33;
  double v34;
  double v35;
  double v36;
  uint64_t v37;
  __n128 v38;
  __n128 v39;
  __n128 v40;
  uint64_t v41;
  __n128 v42;
  double v43;
  double v44;
  double v45;
  double v46;
  double v47;
  double v48;
  uint64_t v49;
  __n128 v50;
  __n128 v51;
  __n128 v52;
  uint64_t v53;
  __n128 v54;
  double v55;
  double v56;
  double v57;
  double v58;
  double v59;
  double v60;
  uint64_t v61;
  __n128 v62;
  __n128 v63;
  uint64_t v64;
  __n128 v65;
  __n128 v66;
  uint64_t v67;
  __n128 v68;
  __n128 v69;
  __n128 v70;
  uint64_t v71;
  float v72;
  __n128 v73;
  double v74;
  double MinX;
  double MaxX;
  double v77;
  uint64_t v78;
  __n128 v79;
  __n128 v80;
  __n128 v81;
  uint64_t v82;
  __n128 v83;
  double v84;
  double v85;
  double MinY;
  double MaxY;
  double v88;
  uint64_t v89;
  __n128 v90;
  __n128 v91;
  __n128 v92;
  uint64_t v93;
  __n128 v94;
  double v95;
  double v96;
  double v97;
  double v98;
  uint64_t v99;
  __n128 v100;
  __n128 v101;
  __n128 v102;
  __n128 v103;
  __n128 v104;
  __n128 v105;
  __n128 v106;
  uint64_t v107;
  __n128 v108;
  __n128 v109;
  __n128 v110;
  __n128 v111;
  __n128 v112;
  uint64_t v113;
  __n128 v114;
  __n128 v115;
  __n128 v116;
  __n128 v117;
  __n128 v118;
  uint64_t v119;

  v3 = *(_QWORD *)(a1 + 56);
  v4 = (__n128 *)(a2 + 88 * *(_QWORD *)(a1 + 48));
  v119 = v4[5].n128_i64[0];
  v5 = v4[3];
  v116 = v4[2];
  v117 = v5;
  v118 = v4[4];
  v6 = v4[1];
  v114 = *v4;
  v115 = v6;
  v7 = (__n128 *)(a2 + 88 * v3);
  v8 = v7[3];
  v110 = v7[2];
  v111 = v8;
  v112 = v7[4];
  v113 = v7[5].n128_i64[0];
  v9 = v7[1];
  v108 = *v7;
  v109 = v9;
  v11 = *(double *)(a1 + 64);
  v10 = *(double *)(a1 + 72);
  if (!*(_BYTE *)(a1 + 160))
  {
    v67 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24);
    objc_msgSend(*(id *)(a1 + 32), "p_texCoordFromX:y:", v11, v10);
    v104 = v110;
    v105 = v111;
    v106 = v112;
    v107 = v113;
    v102 = v108;
    v103 = v109;
    v70 = TSDGPUUpdateDataSetMetalPoint2DAtIndex(&v102, v67, v68, v69);
    v71 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24);
    v70.n128_f32[0] = v11;
    v72 = v10;
    v104 = v116;
    v105 = v117;
    v106 = v118;
    v107 = v119;
    v73 = v114;
    v102 = v114;
    v103 = v115;
    v73.n128_f32[0] = v72;
    TSDGPUUpdateDataSetMetalPoint2DAtIndex(&v102, v71, v70, v73);
    ++*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24);
    v74 = *(double *)(a1 + 64) + *(double *)(a1 + 80) * (*(double *)(a1 + 96) + *(double *)(a1 + 104));
    MinX = CGRectGetMinX(*(CGRect *)(a1 + 112));
    MaxX = CGRectGetMaxX(*(CGRect *)(a1 + 112));
    v77 = TSUClamp(v74, MinX, MaxX);
    v78 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24);
    objc_msgSend(*(id *)(a1 + 32), "p_texCoordFromX:y:", v77, v10);
    v104 = v110;
    v105 = v111;
    v106 = v112;
    v107 = v113;
    v102 = v108;
    v103 = v109;
    v81 = TSDGPUUpdateDataSetMetalPoint2DAtIndex(&v102, v78, v79, v80);
    v82 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24);
    v81.n128_f32[0] = v77;
    v104 = v116;
    v105 = v117;
    v106 = v118;
    v107 = v119;
    v83 = v114;
    v102 = v114;
    v103 = v115;
    v83.n128_f32[0] = v10;
    TSDGPUUpdateDataSetMetalPoint2DAtIndex(&v102, v82, v81, v83);
    ++*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24);
    v84 = *(double *)(a1 + 64);
    v85 = *(double *)(a1 + 72) + *(double *)(a1 + 88) * (*(double *)(a1 + 96) + *(double *)(a1 + 104));
    MinY = CGRectGetMinY(*(CGRect *)(a1 + 112));
    MaxY = CGRectGetMaxY(*(CGRect *)(a1 + 112));
    v88 = TSUClamp(v85, MinY, MaxY);
    v89 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24);
    objc_msgSend(*(id *)(a1 + 32), "p_texCoordFromX:y:", v84, v88);
    v104 = v110;
    v105 = v111;
    v106 = v112;
    v107 = v113;
    v102 = v108;
    v103 = v109;
    v92 = TSDGPUUpdateDataSetMetalPoint2DAtIndex(&v102, v89, v90, v91);
    v93 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24);
    v92.n128_f32[0] = v84;
    *(float *)&v84 = v88;
    v104 = v116;
    v105 = v117;
    v106 = v118;
    v107 = v119;
    v94 = v114;
    v102 = v114;
    v103 = v115;
    v94.n128_u32[0] = LODWORD(v84);
    TSDGPUUpdateDataSetMetalPoint2DAtIndex(&v102, v93, v92, v94);
    ++*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24);
    v95 = *(double *)(a1 + 64) + *(double *)(a1 + 80) * (*(double *)(a1 + 96) + *(double *)(a1 + 104));
    v96 = CGRectGetMinX(*(CGRect *)(a1 + 112));
    v97 = CGRectGetMaxX(*(CGRect *)(a1 + 112));
    v98 = TSUClamp(v95, v96, v97);
    v99 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24);
    objc_msgSend(*(id *)(a1 + 32), "p_texCoordFromX:y:", v98, v88);
    v104 = v110;
    v105 = v111;
    v106 = v112;
    v107 = v113;
    v102 = v108;
    v103 = v109;
    v65 = TSDGPUUpdateDataSetMetalPoint2DAtIndex(&v102, v99, v100, v101);
    v64 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24);
    v65.n128_f32[0] = v98;
    v104 = v116;
    v105 = v117;
    v106 = v118;
    v107 = v119;
    v66 = v114;
    v102 = v114;
    v103 = v115;
    v66.n128_f32[0] = v88;
    goto LABEL_8;
  }
  v14 = 1;
  do
  {
    v15 = v14;
    v16 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24);
    objc_msgSend(*(id *)(a1 + 32), "p_texCoordFromX:y:", v11, v10);
    v104 = v110;
    v105 = v111;
    v106 = v112;
    v107 = v113;
    v102 = v108;
    v103 = v109;
    TSDGPUUpdateDataSetMetalPoint2DAtIndex(&v102, v16, v17, v18);
    v19 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24);
    v104 = v116;
    v105 = v117;
    v106 = v118;
    v107 = v119;
    v20 = v114;
    v21 = v115;
    v102 = v114;
    v103 = v115;
    v12 = v11;
    v20.n128_f32[0] = v12;
    v13 = v10;
    v21.n128_f32[0] = v13;
    TSDGPUUpdateDataSetMetalPoint2DAtIndex(&v102, v19, v20, v21);
    v14 = 0;
    ++*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24);
  }
  while ((v15 & 1) != 0);
  v22 = *(double *)(a1 + 64) + (*(double *)(a1 + 80) + *(double *)(a1 + 80)) * *(double *)(a1 + 96);
  v23 = CGRectGetMinX(*(CGRect *)(a1 + 112));
  v24 = CGRectGetMaxX(*(CGRect *)(a1 + 112));
  v25 = TSUClamp(v22, v23, v24);
  v26 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24);
  objc_msgSend(*(id *)(a1 + 32), "p_texCoordFromX:y:", v25, v10);
  v104 = v110;
  v105 = v111;
  v106 = v112;
  v107 = v113;
  v102 = v108;
  v103 = v109;
  v29 = TSDGPUUpdateDataSetMetalPoint2DAtIndex(&v102, v26, v27, v28);
  v30 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24);
  v29.n128_f32[0] = v25;
  v104 = v116;
  v105 = v117;
  v106 = v118;
  v107 = v119;
  v31 = v114;
  v102 = v114;
  v103 = v115;
  v31.n128_f32[0] = v10;
  TSDGPUUpdateDataSetMetalPoint2DAtIndex(&v102, v30, v29, v31);
  ++*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24);
  v32 = *(double *)(a1 + 64);
  v33 = *(double *)(a1 + 72) + (*(double *)(a1 + 88) + *(double *)(a1 + 88)) * *(double *)(a1 + 104);
  v34 = CGRectGetMinY(*(CGRect *)(a1 + 112));
  v35 = CGRectGetMaxY(*(CGRect *)(a1 + 112));
  v36 = TSUClamp(v33, v34, v35);
  v37 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24);
  objc_msgSend(*(id *)(a1 + 32), "p_texCoordFromX:y:", v32, v36);
  v104 = v110;
  v105 = v111;
  v106 = v112;
  v107 = v113;
  v102 = v108;
  v103 = v109;
  v40 = TSDGPUUpdateDataSetMetalPoint2DAtIndex(&v102, v37, v38, v39);
  v41 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24);
  v40.n128_f32[0] = v32;
  v42.n128_f32[0] = v36;
  v104 = v116;
  v105 = v117;
  v106 = v118;
  v107 = v119;
  v102 = v114;
  v103 = v115;
  TSDGPUUpdateDataSetMetalPoint2DAtIndex(&v102, v41, v40, v42);
  ++*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24);
  if (*(double *)(a1 + 144) > 0.0 || *(double *)(a1 + 152) > 0.0)
  {
    v43 = *(double *)(a1 + 64);
    v44 = v43 + CGRectGetWidth(*(CGRect *)(a1 + 112)) * *(double *)(a1 + 96);
    v45 = *(double *)(a1 + 72) + *(double *)(a1 + 152) * *(double *)(a1 + 104);
    v46 = CGRectGetMinY(*(CGRect *)(a1 + 112));
    v47 = CGRectGetMaxY(*(CGRect *)(a1 + 112));
    v48 = TSUClamp(v45, v46, v47);
    v49 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24);
    objc_msgSend(*(id *)(a1 + 32), "p_texCoordFromX:y:", v44, v48);
    v104 = v110;
    v105 = v111;
    v106 = v112;
    v107 = v113;
    v102 = v108;
    v103 = v109;
    v52 = TSDGPUUpdateDataSetMetalPoint2DAtIndex(&v102, v49, v50, v51);
    v53 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24);
    v52.n128_f32[0] = v44;
    v54.n128_f32[0] = v48;
    v104 = v116;
    v105 = v117;
    v106 = v118;
    v107 = v119;
    v102 = v114;
    v103 = v115;
    TSDGPUUpdateDataSetMetalPoint2DAtIndex(&v102, v53, v52, v54);
    ++*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24);
    v55 = *(double *)(a1 + 72);
    v56 = *(double *)(a1 + 64) + *(double *)(a1 + 144) * *(double *)(a1 + 96);
    v57 = v55 + CGRectGetHeight(*(CGRect *)(a1 + 112)) * *(double *)(a1 + 104);
    v58 = CGRectGetMinX(*(CGRect *)(a1 + 112));
    v59 = CGRectGetMaxX(*(CGRect *)(a1 + 112));
    v60 = TSUClamp(v56, v58, v59);
    v61 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24);
    objc_msgSend(*(id *)(a1 + 32), "p_texCoordFromX:y:", v60, v57);
    v104 = v110;
    v105 = v111;
    v106 = v112;
    v107 = v113;
    v102 = v108;
    v103 = v109;
    v65 = TSDGPUUpdateDataSetMetalPoint2DAtIndex(&v102, v61, v62, v63);
    v64 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24);
    v65.n128_f32[0] = v60;
    v66.n128_f32[0] = v57;
    v104 = v116;
    v105 = v117;
    v106 = v118;
    v107 = v119;
    v102 = v114;
    v103 = v115;
LABEL_8:
    TSDGPUUpdateDataSetMetalPoint2DAtIndex(&v102, v64, v65, v66);
    ++*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24);
  }
}

void sub_1A6760(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __int128 *v4;
  double v5;
  double v6;
  __int128 v7;
  __int128 v8;
  __int128 *v9;
  __int128 v10;
  __int128 v11;
  __int128 *v12;
  __int128 v13;
  __int128 v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double MinX;
  double MaxX;
  double v24;
  double MinY;
  double MaxY;
  __n128 v27;
  double v28;
  uint64_t v29;
  __n128 v30;
  uint64_t v31;
  __n128 v32;
  __n128 v33;
  uint64_t v34;
  float v35;
  double v36;
  double v37;
  double v38;
  double v39;
  double v40;
  double v41;
  double v42;
  double v43;
  double v44;
  double v45;
  double v46;
  double v47;
  __n128 v48;
  double v49;
  uint64_t v50;
  __n128 v51;
  uint64_t v52;
  __n128 v53;
  __n128 v54;
  uint64_t v55;
  double v56;
  double v57;
  double v58;
  double v59;
  double v60;
  double v61;
  double v62;
  double v63;
  double v64;
  double v65;
  double v66;
  double v67;
  double v68;
  double v69;
  double v70;
  double v71;
  __n128 v72;
  double v73;
  uint64_t v74;
  __n128 v75;
  uint64_t v76;
  __n128 v77;
  __n128 v78;
  uint64_t v79;
  float v80;
  double v81;
  double v82;
  double v83;
  double v84;
  double v85;
  double v86;
  double v87;
  double v88;
  double v89;
  double v90;
  double v91;
  double v92;
  __n128 v93;
  double v94;
  uint64_t v95;
  __n128 v96;
  uint64_t v97;
  __n128 v98;
  __n128 v99;
  uint64_t v100;
  double v101;
  double v102;
  double v103;
  double v104;
  double v105;
  double v106;
  double v107;
  uint64_t v108;
  uint64_t v109;
  double v110;
  double v111;
  double v112;
  __n128 v113;
  __n128 v114;
  uint64_t v115;
  uint64_t v116;
  __n128 v117;
  __n128 v118;
  uint64_t v119;
  float v120;
  double v121;
  double v122;
  double v123;
  double v124;
  double v125;
  __n128 v126;
  double v127;
  uint64_t v128;
  __n128 v129;
  uint64_t v130;
  __n128 v131;
  __n128 v132;
  uint64_t v133;
  __int128 v134;
  __int128 v135;
  __int128 v136;
  __int128 v137;
  __int128 v138;
  uint64_t v139;
  __int128 v140;
  __int128 v141;
  __int128 v142;
  __int128 v143;
  __int128 v144;
  uint64_t v145;
  __int128 v146;
  __int128 v147;
  __int128 v148;
  __int128 v149;
  __int128 v150;
  uint64_t v151;
  __int128 v152;
  __int128 v153;
  __int128 v154;
  __int128 v155;
  __int128 v156;
  uint64_t v157;

  v3 = *(_QWORD *)(a1 + 72);
  v4 = (__int128 *)(a2 + 88 * *(_QWORD *)(a1 + 64));
  v157 = *((_QWORD *)v4 + 10);
  v5 = *(double *)(a1 + 48);
  if (v5 < *(double *)(a1 + 56))
    v5 = *(double *)(a1 + 56);
  v6 = 1.0 - v5;
  v7 = v4[3];
  v154 = v4[2];
  v155 = v7;
  v156 = v4[4];
  v8 = v4[1];
  v152 = *v4;
  v153 = v8;
  v9 = (__int128 *)(a2 + 88 * v3);
  v10 = v9[3];
  v148 = v9[2];
  v149 = v10;
  v150 = v9[4];
  v151 = *((_QWORD *)v9 + 10);
  v11 = v9[1];
  v146 = *v9;
  v147 = v11;
  v12 = (__int128 *)(a2 + 88 * *(_QWORD *)(a1 + 80));
  v13 = v12[3];
  v142 = v12[2];
  v143 = v13;
  v144 = v12[4];
  v145 = *((_QWORD *)v12 + 10);
  v14 = v12[1];
  v140 = *v12;
  v141 = v14;
  v15 = *(double *)(a1 + 88);
  if (*(_BYTE *)(a1 + 216))
  {
    v16 = *(double *)(a1 + 104);
    if (v16 <= 0.0)
      v16 = *(double *)(a1 + 112) + *(double *)(a1 + 112);
    v17 = *(double *)(a1 + 128);
    v18 = *(double *)(a1 + 96);
    v19 = 0.0;
    if (*(double *)(a1 + 144) > 0.0)
      v19 = CGRectGetHeight(*(CGRect *)(a1 + 152)) * *(double *)(a1 + 136);
    v20 = v15 + v16 * v17;
    v21 = v18 + v19;
  }
  else
  {
    v20 = v15 + *(double *)(a1 + 112) * *(double *)(a1 + 128);
    v21 = *(double *)(a1 + 96) + *(double *)(a1 + 120) * *(double *)(a1 + 136);
  }
  MinX = CGRectGetMinX(*(CGRect *)(a1 + 152));
  MaxX = CGRectGetMaxX(*(CGRect *)(a1 + 152));
  v24 = TSUClamp(v20, MinX, MaxX);
  MinY = CGRectGetMinY(*(CGRect *)(a1 + 152));
  MaxY = CGRectGetMaxY(*(CGRect *)(a1 + 152));
  v27.n128_f64[0] = TSUClamp(v21, MinY, MaxY);
  v28 = v27.n128_f64[0];
  v29 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24);
  v27.n128_f32[0] = v24;
  v30.n128_f32[0] = v28;
  v136 = v154;
  v137 = v155;
  v138 = v156;
  v139 = v157;
  v134 = v152;
  v135 = v153;
  TSDGPUUpdateDataSetMetalPoint2DAtIndex(&v134, v29, v27, v30);
  v31 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24);
  objc_msgSend(*(id *)(a1 + 32), "p_texCoordFromX:y:", v24, v28);
  v136 = v148;
  v137 = v149;
  v138 = v150;
  v139 = v151;
  v134 = v146;
  v135 = v147;
  TSDGPUUpdateDataSetMetalPoint2DAtIndex(&v134, v31, v32, v33);
  v34 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24);
  v35 = v6;
  v136 = v142;
  v137 = v143;
  v138 = v144;
  v139 = v145;
  v134 = v140;
  v135 = v141;
  TSDGPUUpdateDataSetMetalFloatAtIndex(&v134, v34, v35);
  ++*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24);
  v36 = *(double *)(a1 + 88);
  if (*(_BYTE *)(a1 + 216))
  {
    v37 = 0.0;
    if (*(double *)(a1 + 104) > 0.0)
      v37 = CGRectGetWidth(*(CGRect *)(a1 + 152)) * *(double *)(a1 + 128);
    v38 = *(double *)(a1 + 144);
    if (v38 <= 0.0)
      v38 = *(double *)(a1 + 120) + *(double *)(a1 + 120);
    v39 = v36 + v37;
    v40 = *(double *)(a1 + 96) + v38 * *(double *)(a1 + 136);
  }
  else
  {
    v41 = *(double *)(a1 + 128);
    v42 = *(double *)(a1 + 136);
    v39 = v36 + *(double *)(a1 + 112) * v41 + *(double *)(a1 + 184) * v42;
    v40 = *(double *)(a1 + 96) + *(double *)(a1 + 120) * v42 + *(double *)(a1 + 192) * v41;
  }
  v43 = CGRectGetMinX(*(CGRect *)(a1 + 152));
  v44 = CGRectGetMaxX(*(CGRect *)(a1 + 152));
  v45 = TSUClamp(v39, v43, v44);
  v46 = CGRectGetMinY(*(CGRect *)(a1 + 152));
  v47 = CGRectGetMaxY(*(CGRect *)(a1 + 152));
  v48.n128_f64[0] = TSUClamp(v40, v46, v47);
  v49 = v48.n128_f64[0];
  v50 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24);
  v48.n128_f32[0] = v45;
  v51.n128_f32[0] = v49;
  v136 = v154;
  v137 = v155;
  v138 = v156;
  v139 = v157;
  v134 = v152;
  v135 = v153;
  TSDGPUUpdateDataSetMetalPoint2DAtIndex(&v134, v50, v48, v51);
  v52 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24);
  objc_msgSend(*(id *)(a1 + 32), "p_texCoordFromX:y:", v45, v49);
  v136 = v148;
  v137 = v149;
  v138 = v150;
  v139 = v151;
  v134 = v146;
  v135 = v147;
  TSDGPUUpdateDataSetMetalPoint2DAtIndex(&v134, v52, v53, v54);
  v55 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24);
  v136 = v142;
  v137 = v143;
  v138 = v144;
  v139 = v145;
  v134 = v140;
  v135 = v141;
  TSDGPUUpdateDataSetMetalFloatAtIndex(&v134, v55, v35);
  ++*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24);
  v56 = *(double *)(a1 + 184);
  v57 = *(double *)(a1 + 192);
  if (*(double *)(a1 + 200) / v56 >= *(double *)(a1 + 208) / v57)
    v58 = *(double *)(a1 + 208) / v57;
  else
    v58 = *(double *)(a1 + 200) / v56;
  v59 = *(double *)(a1 + 88);
  if (*(_BYTE *)(a1 + 216))
  {
    v60 = *(double *)(a1 + 104);
    if (v60 <= 0.0)
      v60 = *(double *)(a1 + 112) + *(double *)(a1 + 112);
    v61 = v56 + v60;
    v62 = *(double *)(a1 + 128);
    v63 = *(double *)(a1 + 96);
    v64 = 0.0;
    if (*(double *)(a1 + 144) > 0.0)
      v64 = CGRectGetHeight(*(CGRect *)(a1 + 152)) * *(double *)(a1 + 136);
    v65 = v59 + v61 * v62;
    v66 = v63 + v64;
  }
  else
  {
    v65 = v59 + (v56 + *(double *)(a1 + 112)) * *(double *)(a1 + 128);
    v66 = *(double *)(a1 + 96) + (v57 + *(double *)(a1 + 120)) * *(double *)(a1 + 136);
  }
  v67 = CGRectGetMinX(*(CGRect *)(a1 + 152));
  v68 = CGRectGetMaxX(*(CGRect *)(a1 + 152));
  v69 = TSUClamp(v65, v67, v68);
  v70 = CGRectGetMinY(*(CGRect *)(a1 + 152));
  v71 = CGRectGetMaxY(*(CGRect *)(a1 + 152));
  v72.n128_f64[0] = TSUClamp(v66, v70, v71);
  v73 = v72.n128_f64[0];
  v74 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24);
  v72.n128_f32[0] = v69;
  v75.n128_f32[0] = v73;
  v136 = v154;
  v137 = v155;
  v138 = v156;
  v139 = v157;
  v134 = v152;
  v135 = v153;
  TSDGPUUpdateDataSetMetalPoint2DAtIndex(&v134, v74, v72, v75);
  v76 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24);
  objc_msgSend(*(id *)(a1 + 32), "p_texCoordFromX:y:", v69, v73);
  v136 = v148;
  v137 = v149;
  v138 = v150;
  v139 = v151;
  v134 = v146;
  v135 = v147;
  TSDGPUUpdateDataSetMetalPoint2DAtIndex(&v134, v76, v77, v78);
  v79 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24);
  v80 = v58;
  v136 = v142;
  v137 = v143;
  v138 = v144;
  v139 = v145;
  v134 = v140;
  v135 = v141;
  TSDGPUUpdateDataSetMetalFloatAtIndex(&v134, v79, v80);
  ++*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24);
  v81 = *(double *)(a1 + 88);
  if (*(_BYTE *)(a1 + 216))
  {
    v82 = 0.0;
    if (*(double *)(a1 + 104) > 0.0)
      v82 = CGRectGetWidth(*(CGRect *)(a1 + 152)) * *(double *)(a1 + 128);
    v83 = *(double *)(a1 + 144);
    if (v83 <= 0.0)
      v83 = *(double *)(a1 + 120) + *(double *)(a1 + 120);
    v84 = v81 + v82;
    v85 = *(double *)(a1 + 96) + (v83 + *(double *)(a1 + 192)) * *(double *)(a1 + 136);
  }
  else
  {
    v86 = *(double *)(a1 + 128);
    v87 = *(double *)(a1 + 136);
    v84 = v81 + (*(double *)(a1 + 112) + *(double *)(a1 + 184)) * v86 + *(double *)(a1 + 184) * v87;
    v85 = *(double *)(a1 + 96) + (*(double *)(a1 + 120) + *(double *)(a1 + 192)) * v87 + *(double *)(a1 + 192) * v86;
  }
  v88 = CGRectGetMinX(*(CGRect *)(a1 + 152));
  v89 = CGRectGetMaxX(*(CGRect *)(a1 + 152));
  v90 = TSUClamp(v84, v88, v89);
  v91 = CGRectGetMinY(*(CGRect *)(a1 + 152));
  v92 = CGRectGetMaxY(*(CGRect *)(a1 + 152));
  v93.n128_f64[0] = TSUClamp(v85, v91, v92);
  v94 = v93.n128_f64[0];
  v95 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24);
  v93.n128_f32[0] = v90;
  v96.n128_f32[0] = v94;
  v136 = v154;
  v137 = v155;
  v138 = v156;
  v139 = v157;
  v134 = v152;
  v135 = v153;
  TSDGPUUpdateDataSetMetalPoint2DAtIndex(&v134, v95, v93, v96);
  v97 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24);
  objc_msgSend(*(id *)(a1 + 32), "p_texCoordFromX:y:", v90, v94);
  v136 = v148;
  v137 = v149;
  v138 = v150;
  v139 = v151;
  v134 = v146;
  v135 = v147;
  TSDGPUUpdateDataSetMetalPoint2DAtIndex(&v134, v97, v98, v99);
  v100 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24);
  v136 = v142;
  v137 = v143;
  v138 = v144;
  v139 = v145;
  v134 = v140;
  v135 = v141;
  TSDGPUUpdateDataSetMetalFloatAtIndex(&v134, v100, v80);
  ++*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24);
  if (*(_BYTE *)(a1 + 216))
  {
    v101 = *(double *)(a1 + 200);
    if (v101 > 0.0 && *(double *)(a1 + 104) == 0.0)
    {
      v102 = *(double *)(a1 + 168);
      v103 = *(double *)(a1 + 176);
      v104 = *(double *)(a1 + 192);
      v105 = (v101 - v102) / *(double *)(a1 + 184);
      if (v105 >= (*(double *)(a1 + 208) - v103) / v104)
        v105 = (*(double *)(a1 + 208) - v103) / v104;
      v106 = fmax(v105, 0.0);
      v107 = *(double *)(a1 + 88);
      v108 = *(_QWORD *)(a1 + 152);
      v109 = *(_QWORD *)(a1 + 160);
      v110 = v107 + CGRectGetWidth(*(CGRect *)(&v102 - 2)) * *(double *)(a1 + 128);
      v111 = *(double *)(a1 + 96) + *(double *)(a1 + 208) * *(double *)(a1 + 136);
      v112 = CGRectGetMaxY(*(CGRect *)(a1 + 152));
      v113.n128_f64[0] = CGRectGetMinY(*(CGRect *)(a1 + 152));
      if (v113.n128_f64[0] < v111)
        v113.n128_f64[0] = v111;
      v115 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24);
      if (v112 >= v113.n128_f64[0])
        v112 = v113.n128_f64[0];
      v113.n128_f32[0] = v110;
      v114.n128_f32[0] = v112;
      v136 = v154;
      v137 = v155;
      v138 = v156;
      v139 = v157;
      v134 = v152;
      v135 = v153;
      TSDGPUUpdateDataSetMetalPoint2DAtIndex(&v134, v115, v113, v114);
      v116 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24);
      objc_msgSend(*(id *)(a1 + 32), "p_texCoordFromX:y:", v110, v112);
      v136 = v148;
      v137 = v149;
      v138 = v150;
      v139 = v151;
      v134 = v146;
      v135 = v147;
      TSDGPUUpdateDataSetMetalPoint2DAtIndex(&v134, v116, v117, v118);
      v119 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24);
      v120 = v106;
      v136 = v142;
      v137 = v143;
      v138 = v144;
      v139 = v145;
      v134 = v140;
      v135 = v141;
      TSDGPUUpdateDataSetMetalFloatAtIndex(&v134, v119, v120);
      ++*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24);
      v121 = *(double *)(a1 + 96);
      v122 = *(double *)(a1 + 88) + *(double *)(a1 + 200) * *(double *)(a1 + 128);
      v123 = v121 + CGRectGetHeight(*(CGRect *)(a1 + 152)) * *(double *)(a1 + 136);
      v124 = CGRectGetMinX(*(CGRect *)(a1 + 152));
      v125 = CGRectGetMaxX(*(CGRect *)(a1 + 152));
      v126.n128_f64[0] = TSUClamp(v122, v124, v125);
      v127 = v126.n128_f64[0];
      v128 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24);
      v126.n128_f32[0] = v126.n128_f64[0];
      v129.n128_f32[0] = v123;
      v136 = v154;
      v137 = v155;
      v138 = v156;
      v139 = v157;
      v134 = v152;
      v135 = v153;
      TSDGPUUpdateDataSetMetalPoint2DAtIndex(&v134, v128, v126, v129);
      v130 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24);
      objc_msgSend(*(id *)(a1 + 32), "p_texCoordFromX:y:", v127, v123);
      v136 = v148;
      v137 = v149;
      v138 = v150;
      v139 = v151;
      v134 = v146;
      v135 = v147;
      TSDGPUUpdateDataSetMetalPoint2DAtIndex(&v134, v130, v131, v132);
      v133 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24);
      v136 = v142;
      v137 = v143;
      v138 = v144;
      v139 = v145;
      v134 = v140;
      v135 = v141;
      TSDGPUUpdateDataSetMetalFloatAtIndex(&v134, v133, v120);
      ++*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24);
    }
  }
}

TSUColor *THNoteCardBackgroundColor(int a1)
{
  if (a1)
    return +[TSUColor colorWithWhite:alpha:](TSUColor, "colorWithWhite:alpha:", 0.31372549, 1.0);
  else
    return (TSUColor *)+[TSUColor whiteColor](TSUColor, "whiteColor");
}

TSUColor *THNoteDarkenBackgroundColor(int a1)
{
  double v1;

  v1 = 0.945098039;
  if (a1)
    v1 = 0.254901961;
  return +[TSUColor colorWithWhite:alpha:](TSUColor, "colorWithWhite:alpha:", v1, 1.0);
}

TSUColor *THNoteDarkerBackgroundColor(int a1)
{
  double v1;

  v1 = 0.85;
  if (a1)
    v1 = 0.196078431;
  return +[TSUColor colorWithWhite:alpha:](TSUColor, "colorWithWhite:alpha:", v1, 1.0);
}

TSUColor *THNoteCardBorderColor(int a1, int a2)
{
  double v3;

  if (a1)
    return sub_1AA7C8(1, (uint64_t)&stru_42AE80);
  v3 = 0.05;
  if (!a2)
    v3 = 0.012;
  return +[TSUColor colorWithWhite:alpha:](TSUColor, "colorWithWhite:alpha:", 0.0, v3);
}

TSUColor *sub_1AA7C8(int a1, uint64_t a2)
{
  id v4;
  uint64_t v5;
  TSUColor *v6;

  v4 = +[UITraitCollection _currentTraitCollection](UITraitCollection, "_currentTraitCollection");
  if (a1)
    v5 = 2;
  else
    v5 = 1;
  +[UITraitCollection _setCurrentTraitCollection:](UITraitCollection, "_setCurrentTraitCollection:", +[UITraitCollection traitCollectionWithUserInterfaceStyle:](UITraitCollection, "traitCollectionWithUserInterfaceStyle:", v5));
  v6 = +[TSUColor colorWithUIColor:](TSUColor, "colorWithUIColor:", (*(uint64_t (**)(uint64_t))(a2 + 16))(a2));
  +[UITraitCollection _setCurrentTraitCollection:](UITraitCollection, "_setCurrentTraitCollection:", v4);
  return v6;
}

UIColor *__cdecl sub_1AA850(id a1)
{
  return (UIColor *)+[UIColor bc_booksQuaternaryLabelColor](UIColor, "bc_booksQuaternaryLabelColor");
}

TSUColor *THNoteCardHeaderColor(int a1)
{
  return sub_1AA7C8(a1, (uint64_t)&stru_42AEA0);
}

UIColor *__cdecl sub_1AA868(id a1)
{
  return (UIColor *)+[UIColor bc_booksSecondaryLabelColor](UIColor, "bc_booksSecondaryLabelColor");
}

TSUColor *THNoteCardFooterColor(int a1)
{
  return sub_1AA7C8(a1, (uint64_t)&stru_42AEC0);
}

UIColor *__cdecl sub_1AA880(id a1)
{
  return (UIColor *)+[UIColor bc_booksSecondaryLabelColor](UIColor, "bc_booksSecondaryLabelColor");
}

TSUColor *THNoteCardFooterFlipCardColor(int a1)
{
  return sub_1AA7C8(a1, (uint64_t)&stru_42AEE0);
}

UIColor *__cdecl sub_1AA898(id a1)
{
  return (UIColor *)+[UIColor bc_booksSecondaryLabelColor](UIColor, "bc_booksSecondaryLabelColor");
}

TSUColor *THNoteCardHoveredTextColor(int a1)
{
  return sub_1AA7C8(a1, (uint64_t)&stru_42AF00);
}

UIColor *__cdecl sub_1AA8B0(id a1)
{
  return (UIColor *)+[UIColor bc_booksTertiaryLabelColor](UIColor, "bc_booksTertiaryLabelColor");
}

TSUColor *THNoteCardPressedTextColor(int a1)
{
  return sub_1AA7C8(a1, (uint64_t)&stru_42AF20);
}

UIColor *__cdecl sub_1AA8C8(id a1)
{
  return (UIColor *)+[UIColor bc_booksLabelColor](UIColor, "bc_booksLabelColor");
}

TSUColor *THNoteCardFrontTextColor(int a1)
{
  return sub_1AA7C8(a1, (uint64_t)&stru_42AF40);
}

UIColor *__cdecl sub_1AA8E0(id a1)
{
  return (UIColor *)+[UIColor bc_booksLabelColor](UIColor, "bc_booksLabelColor");
}

TSUColor *THNoteCardBackTextColor(int a1)
{
  return sub_1AA7C8(a1, (uint64_t)&stru_42AF60);
}

UIColor *__cdecl sub_1AA8F8(id a1)
{
  return (UIColor *)+[UIColor bc_booksLabelColor](UIColor, "bc_booksLabelColor");
}

TSUColor *THNoteCardEmptyHeadingTextColor(int a1)
{
  return sub_1AA7C8(a1, (uint64_t)&stru_42AF80);
}

UIColor *__cdecl sub_1AA910(id a1)
{
  return (UIColor *)+[UIColor bc_booksLabelColor](UIColor, "bc_booksLabelColor");
}

TSUColor *THNoteCardEmptyBodyTextColor(int a1)
{
  return sub_1AA7C8(a1, (uint64_t)&stru_42AFA0);
}

UIColor *__cdecl sub_1AA928(id a1)
{
  return (UIColor *)+[UIColor bc_booksSecondaryLabelColor](UIColor, "bc_booksSecondaryLabelColor");
}

double sub_1AA934()
{
  double result;

  kTHNoteCardOffset = (__int128)CGSizeZero;
  kTHNoteCardBodyLeftMargin = 0x404D800000000000;
  kTHNoteCardBodyWidth = 0x4088580000000000;
  result = 0.0;
  kTHNoteCardShadowOffset = xmmword_314F60;
  kTHNoteCardShadowOffsetRetina = xmmword_314F60;
  return result;
}

id sub_1AC460(uint64_t a1)
{
  int v2;
  id result;

  *(_BYTE *)(*(_QWORD *)(a1 + 32) + 161) = 0;
  v2 = *(unsigned __int8 *)(a1 + 48);
  result = objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "studyOptions"), "shuffle");
  if (v2 != (_DWORD)result)
  {
    objc_msgSend(*(id *)(a1 + 32), "studyOptionsWillChangeShuffle:", *(_QWORD *)(a1 + 40));
    return objc_msgSend(*(id *)(a1 + 32), "studyOptionsDidChangeShuffle:", *(_QWORD *)(a1 + 40));
  }
  return result;
}

void sub_1AC868(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,char a35)
{
  _Block_object_dispose(&a35, 8);
  _Unwind_Resume(a1);
}

void sub_1AC88C(uint64_t a1, uint64_t a2)
{
  _Block_object_assign((void *)(a1 + 40), *(const void **)(a2 + 40), 131);
}

void sub_1AC89C(uint64_t a1)
{
  _Block_object_dispose(*(const void **)(a1 + 40), 131);
}

void sub_1AC8A8(uint64_t a1, void *a2)
{
  id v4;
  id v5;
  uint64_t v6;
  THAnnotationNoteCardInfo *v7;

  if ((objc_msgSend(a2, "annotationIsOrphan") & 1) == 0)
  {
    if (!*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 40))
      *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 40) = objc_msgSend(*(id *)(a1 + 32), "bodyStorageForPresentationType:", +[THPresentationType paginatedPresentationTypeInContext:](THPresentationType, "paginatedPresentationTypeInContext:", objc_msgSend(*(id *)(a1 + 32), "context")));
    v4 = objc_msgSend(*(id *)(*(_QWORD *)(a1 + 40) + 8), "storageForAnnotation:", a2);
    if (v4)
    {
      v5 = v4;
      v7 = objc_alloc_init(THAnnotationNoteCardInfo);
      -[THAnnotationNoteCardInfo setStorage:](v7, "setStorage:", v5);
      -[THAnnotationNoteCardInfo setAnnotation:](v7, "setAnnotation:", a2);
      -[THAnnotationNoteCardInfo setTitle:](v7, "setTitle:", *(_QWORD *)(a1 + 48));
      -[THAnnotationNoteCardInfo setPageIndex:](v7, "setPageIndex:", objc_msgSend(*(id *)(*(_QWORD *)(a1 + 40) + 8), "absolutePageIndexForAnnotation:", a2));
      if (-[THAnnotationNoteCardInfo storage](v7, "storage") == *(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 40))
        v6 = (uint64_t)objc_msgSend(a2, "annotationStorageRange");
      else
        v6 = 0x7FFFFFFFFFFFFFFFLL;
      -[THAnnotationNoteCardInfo setBodyPosition:](v7, "setBodyPosition:", v6);
      -[THAnnotationNoteCardInfo setPageNumberString:](v7, "setPageNumberString:", objc_msgSend(*(id *)(*(_QWORD *)(a1 + 40) + 8), "pageNumberStringForAnnotation:", a2));
      objc_msgSend(*(id *)(a1 + 56), "addObject:", v7);

    }
  }
}

int64_t sub_1ACB20(id a1, THNoteCardInfo *a2, THNoteCardInfo *a3)
{
  unsigned int v5;
  unsigned int v6;

  v5 = -[THNoteCardInfo noteCardTypeSortOrder](a2, "noteCardTypeSortOrder");
  v6 = -[THNoteCardInfo noteCardTypeSortOrder](a3, "noteCardTypeSortOrder");
  if (v5 > v6)
    return 1;
  if (v5 >= v6)
    return (int64_t)-[THNoteCardInfo compareToNoteCard:](a2, "compareToNoteCard:", a3);
  return -1;
}

id sub_1ADEE0(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 32), "p_handleDelayedCardUpdate");
  return objc_msgSend(*(id *)(a1 + 32), "p_resetFlipOnBelowTopCard");
}

uint64_t sub_1AEDE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t v9;
  double v10;
  void *v11;
  void *v12;
  id v13;
  id v14;
  uint64_t v15;

  v6 = objc_opt_class(THNoteCardLayer);
  TSUDynamicCast(v6, a2);
  v8 = v7;
  v9 = objc_opt_class(THNoteCardLayer);
  *(_QWORD *)&v10 = TSUDynamicCast(v9, a3).n128_u64[0];
  v12 = v11;
  v13 = objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 32), "indexOfObject:", objc_msgSend(v8, "noteCardInfo", v10));
  v14 = objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 32), "indexOfObject:", objc_msgSend(v12, "noteCardInfo"));
  if (v13 >= v14)
    v15 = 0;
  else
    v15 = -1;
  if (v13 > v14)
    return 1;
  else
    return v15;
}

void sub_1AF294(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v10;
  va_list va;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  va_list va1;

  va_start(va1, a9);
  va_start(va, a9);
  v10 = va_arg(va1, _QWORD);
  v12 = va_arg(va1, _QWORD);
  v13 = va_arg(va1, _QWORD);
  v14 = va_arg(va1, _QWORD);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1AF32C(uint64_t result)
{
  uint64_t v1;

  if (++*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(result + 48) + 8) + 24) == *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(result + 56)
                                                                                                  + 8)
                                                                                      + 24))
  {
    v1 = result;
    objc_msgSend(*(id *)(result + 32), "p_recreateNoteCardLayers");
    result = *(_QWORD *)(v1 + 40);
    if (result)
      return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

id sub_1AF71C(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "p_recreateNoteCardLayers");
}

id sub_1AF938(uint64_t a1, void *a2)
{
  id result;

  result = objc_msgSend(a2, "flashScrollIndicators");
  *(_QWORD *)(*(_QWORD *)(a1 + 32) + 88) = a2;
  return result;
}

id sub_1B0CF4(uint64_t a1, CGContextRef c)
{
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;

  CGContextScaleCTM(c, *(CGFloat *)(*(_QWORD *)(a1 + 32) + 80), *(CGFloat *)(*(_QWORD *)(a1 + 32) + 80));
  objc_msgSend(*(id *)(a1 + 40), "drawInRect:", *(double *)(a1 + 48), *(double *)(a1 + 56), *(double *)(a1 + 64), *(double *)(a1 + 72));
  CGContextSetShadowWithColor(c, *(CGSize *)(*(_QWORD *)(a1 + 32) + 56), *(CGFloat *)(*(_QWORD *)(a1 + 32) + 72), (CGColorRef)objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 48), "CGColor"));
  v4 = TSDRectWithSize(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 24), "tsu_boundingSizeWithFont:", *(_QWORD *)(*(_QWORD *)(a1 + 32) + 32)));
  v5 = TSDCenterRectOverRect(v4);
  v7 = v6;
  v9 = v8;
  v11 = v10;
  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 32), "pointSize");
  return objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 24), "drawInRect:withAttributes:", +[NSDictionary dictionaryWithObjectsAndKeys:](NSDictionary, "dictionaryWithObjectsAndKeys:", objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 32), "platformFont"), NSFontAttributeName, objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 40), "platformColor"), NSForegroundColorAttributeName, 0), v5, v7 + (v11 - v12) * -0.5, v9, v11);
}

void sub_1B11C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_list va;

  va_start(va, a14);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1B11E0(uint64_t a1, uint64_t a2)
{
  _Block_object_assign((void *)(a1 + 40), *(const void **)(a2 + 40), 131);
}

void sub_1B11F0(uint64_t a1)
{
  _Block_object_dispose(*(const void **)(a1 + 40), 131);
}

id sub_1B11FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  double v5;
  void *v6;
  void *v7;
  id result;

  v4 = objc_opt_class(THModelSearchIndexTerm);
  *(_QWORD *)&v5 = TSUDynamicCast(v4, a2).n128_u64[0];
  v7 = v6;
  result = objc_msgSend(objc_msgSend(v6, "stem", v5), "isEqualToString:", *(_QWORD *)(a1 + 32));
  if ((_DWORD)result)
    *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40) = v7;
  return result;
}

id sub_1B1250(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  double v5;
  id v6;

  v4 = objc_opt_class(THModelSearchIndexInflection);
  *(_QWORD *)&v5 = TSUDynamicCast(v4, a2).n128_u64[0];
  return objc_msgSend(objc_msgSend(v6, "inflection", v5), "isEqualToString:", *(_QWORD *)(a1 + 32));
}

void sub_1B1538(_Unwind_Exception *a1)
{
  objc_end_catch();
  _Unwind_Resume(a1);
}

void sub_1B1880(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1B1898(uint64_t a1, uint64_t a2)
{
  _Block_object_assign((void *)(a1 + 40), *(const void **)(a2 + 40), 131);
}

void sub_1B18A8(uint64_t a1)
{
  _Block_object_dispose(*(const void **)(a1 + 40), 131);
}

id sub_1B18B4(uint64_t a1, void *a2)
{
  id result;

  result = objc_msgSend(a2, "objectForKey:", *(_QWORD *)(a1 + 32));
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40) = result;
  return result;
}

id sub_1B1A24(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "setObject:forKey:", *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40));
}

id sub_1B1AF8(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "removeObjectForKey:", *(_QWORD *)(a1 + 32));
}

id sub_1B1BE8(uint64_t a1, void *a2)
{
  void *v4;
  id result;
  id v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  _BYTE v14[128];

  v10 = 0u;
  v11 = 0u;
  v12 = 0u;
  v13 = 0u;
  v4 = *(void **)(a1 + 32);
  result = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v10, v14, 16);
  if (result)
  {
    v6 = result;
    v7 = *(_QWORD *)v11;
    do
    {
      v8 = 0;
      do
      {
        if (*(_QWORD *)v11 != v7)
          objc_enumerationMutation(v4);
        v9 = *(_QWORD *)(*((_QWORD *)&v10 + 1) + 8 * (_QWORD)v8);
        if (!objc_msgSend(a2, "objectForKey:", v9))
          objc_msgSend(a2, "setObject:forKey:", objc_msgSend(*(id *)(a1 + 32), "objectForKey:", v9), v9);
        v8 = (char *)v8 + 1;
      }
      while (v6 != v8);
      result = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v10, v14, 16);
      v6 = result;
    }
    while (result);
  }
  return result;
}

void sub_1B1E48(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_1B1E60(uint64_t a1, void *a2)
{
  id result;

  result = objc_msgSend(a2, "mutableCopy");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40) = result;
  return result;
}

void sub_1B242C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __int128 *v4;
  __int128 v5;
  __int128 v6;
  __int128 *v7;
  __int128 v8;
  __int128 v9;
  __int128 *v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 *v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  uint64_t i;
  uint64_t v20;
  double v21;
  uint64_t v22;
  double v23;
  float v24;
  float v25;
  __n128 v26;
  __n128 v27;
  float v28;
  float v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  uint64_t v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  uint64_t v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  uint64_t v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  uint64_t v59;

  v3 = *(_QWORD *)(a1 + 40);
  v4 = (__int128 *)(a2 + 88 * *(_QWORD *)(a1 + 32));
  v59 = *((_QWORD *)v4 + 10);
  v5 = v4[3];
  v56 = v4[2];
  v57 = v5;
  v58 = v4[4];
  v6 = v4[1];
  v54 = *v4;
  v55 = v6;
  v7 = (__int128 *)(a2 + 88 * v3);
  v8 = v7[3];
  v50 = v7[2];
  v51 = v8;
  v52 = v7[4];
  v53 = *((_QWORD *)v7 + 10);
  v9 = v7[1];
  v48 = *v7;
  v49 = v9;
  v10 = (__int128 *)(a2 + 88 * *(_QWORD *)(a1 + 48));
  v11 = v10[3];
  v44 = v10[2];
  v45 = v11;
  v46 = v10[4];
  v47 = *((_QWORD *)v10 + 10);
  v12 = v10[1];
  v42 = *v10;
  v43 = v12;
  v13 = *((_OWORD *)&TSDGPUDataBufferAttributeUpdateDataInvalid + 3);
  v38 = *((_OWORD *)&TSDGPUDataBufferAttributeUpdateDataInvalid + 2);
  v39 = v13;
  v40 = *((_OWORD *)&TSDGPUDataBufferAttributeUpdateDataInvalid + 4);
  v41 = *((_QWORD *)&TSDGPUDataBufferAttributeUpdateDataInvalid + 10);
  v14 = *((_OWORD *)&TSDGPUDataBufferAttributeUpdateDataInvalid + 1);
  v36 = *(_OWORD *)&TSDGPUDataBufferAttributeUpdateDataInvalid;
  v37 = v14;
  if (*(_BYTE *)(a1 + 104))
  {
    v15 = (__int128 *)(a2 + 88 * *(_QWORD *)(a1 + 56));
    v16 = v15[3];
    v38 = v15[2];
    v39 = v16;
    v40 = v15[4];
    v41 = *((_QWORD *)v15 + 10);
    v17 = v15[1];
    v36 = *v15;
    v37 = v17;
  }
  v18 = *(_QWORD *)(a1 + 64);
  if (v18 >= 1)
  {
    for (i = 0; i < v18; ++i)
    {
      if (v18 >= 1)
      {
        v20 = 0;
        v21 = (double)i;
        do
        {
          v22 = v20 + i * v18;
          v23 = (double)v20;
          v24 = *(double *)(a1 + 72) * (double)v20;
          v25 = *(double *)(a1 + 80) * v21;
          v32 = v56;
          v33 = v57;
          v34 = v58;
          v35 = v59;
          v30 = v54;
          v31 = v55;
          v26 = TSDGPUUpdateDataSetMetalPoint3DAtIndex(&v30, v22, v24, v25, 0.0);
          if (*(_BYTE *)(a1 + 104))
          {
            v28 = *(double *)(a1 + 72) * v23;
            v29 = *(double *)(a1 + 80) * v21;
            v32 = v38;
            v33 = v39;
            v34 = v40;
            v35 = v41;
            v30 = v36;
            v31 = v37;
            v26 = TSDGPUUpdateDataSetMetalPoint3DAtIndex(&v30, v22, v28, v29, 0.0);
          }
          v26.n128_f64[0] = *(double *)(a1 + 72) * v23 / *(double *)(a1 + 88);
          v27.n128_f64[0] = 1.0 - *(double *)(a1 + 80) * v21 / *(double *)(a1 + 96);
          v26.n128_f32[0] = v26.n128_f64[0];
          v32 = v50;
          v33 = v51;
          v34 = v52;
          v35 = v53;
          v27.n128_f32[0] = v27.n128_f64[0];
          v30 = v48;
          v31 = v49;
          TSDGPUUpdateDataSetMetalPoint2DAtIndex(&v30, v22, v26, v27);
          v32 = v44;
          v33 = v45;
          v34 = v46;
          v35 = v47;
          v30 = v42;
          v31 = v43;
          TSDGPUUpdateDataSetMetalPoint3DAtIndex(&v30, v22, 0.0, 0.0, 1.0);
          ++v20;
          v18 = *(_QWORD *)(a1 + 64);
        }
        while (v20 < v18);
      }
    }
  }
}

void sub_1B2944(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 *v5;
  __int128 v6;
  __int128 v7;
  __int128 *v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 *v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  double v19;
  double v20;
  uint64_t v21;
  double v22;
  double v23;
  float v24;
  float v25;
  float v26;
  float v27;
  double v28;
  double v29;
  double v30;
  float v31;
  float v32;
  float v33;
  double v34;
  float v35;
  double v36;
  double sinval;
  double cosval;
  __double2 v39;
  double v40;
  double v41;
  double v42;
  double v43;
  double v44;
  double v45;
  double v46;
  double v47;
  double v48;
  float v49;
  float v50;
  float v51;
  float v52;
  double v53;
  float v54;
  float v55;
  float v56;
  float v57;
  double v58;
  _BOOL4 v59;
  float v60;
  float v61;
  float v62;
  double v63;
  float v64;
  float v65;
  float v66;
  float v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  uint64_t v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  uint64_t v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  uint64_t v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  uint64_t v91;

  v4 = *(_QWORD *)(a1 + 40);
  v5 = (__int128 *)(a2 + 88 * *(_QWORD *)(a1 + 32));
  v91 = *((_QWORD *)v5 + 10);
  v6 = v5[3];
  v88 = v5[2];
  v89 = v6;
  v90 = v5[4];
  v7 = v5[1];
  v86 = *v5;
  v87 = v7;
  v8 = (__int128 *)(a2 + 88 * v4);
  v9 = v8[3];
  v82 = v8[2];
  v83 = v9;
  v84 = v8[4];
  v85 = *((_QWORD *)v8 + 10);
  v10 = v8[1];
  v80 = *v8;
  v81 = v10;
  v11 = *((_OWORD *)&TSDGPUDataBufferAttributeUpdateDataInvalid + 3);
  v76 = *((_OWORD *)&TSDGPUDataBufferAttributeUpdateDataInvalid + 2);
  v77 = v11;
  v78 = *((_OWORD *)&TSDGPUDataBufferAttributeUpdateDataInvalid + 4);
  v79 = *((_QWORD *)&TSDGPUDataBufferAttributeUpdateDataInvalid + 10);
  v12 = *((_OWORD *)&TSDGPUDataBufferAttributeUpdateDataInvalid + 1);
  v74 = *(_OWORD *)&TSDGPUDataBufferAttributeUpdateDataInvalid;
  v75 = v12;
  if (*(_BYTE *)(a1 + 176))
  {
    v13 = (__int128 *)(a2 + 88 * *(_QWORD *)(a1 + 48));
    v14 = v13[3];
    v76 = v13[2];
    v77 = v14;
    v78 = v13[4];
    v79 = *((_QWORD *)v13 + 10);
    v15 = v13[1];
    v74 = *v13;
    v75 = v15;
  }
  v16 = *(_QWORD *)(a1 + 56);
  if (v16 >= 1)
  {
    v17 = 0;
    v65 = TSDMetalPoint3DZero[1];
    v66 = TSDMetalPoint3DZero[0];
    v64 = TSDMetalPoint3DZero[2];
    do
    {
      if (v16 >= 1)
      {
        v18 = 0;
        v19 = ((double)v17 + (double)v17) / (double)(v16 - 1) + -1.0;
        v63 = v19;
        do
        {
          if (*(_BYTE *)(a1 + 177))
            v20 = -(((double)v18 + (double)v18) / (double)(v16 - 1) + -1.0);
          else
            v20 = ((double)v18 + (double)v18) / (double)(v16 - 1) + -1.0;
          v21 = v18 + v17 * v16;
          v22 = *(double *)(a1 + 64);
          v23 = *(double *)(a1 + 72);
          v24 = v64;
          v25 = v65;
          v26 = v66;
          if (*(_BYTE *)(a1 + 176))
          {
            v70 = v88;
            v71 = v89;
            v72 = v90;
            v73 = v91;
            v68 = v86;
            v69 = v87;
            v26 = TSDGPUUpdateDataMetalPoint3DAtIndex(&v68, v21);
            v25 = v27;
          }
          v28 = *(double *)(a1 + 80);
          v29 = v19 * v23 + v20 * v22 - v28;
          v67 = v24;
          if (v29 >= 0.0)
          {
            v36 = *(double *)(a1 + 88);
            if (v29 >= v36)
            {
              v43 = v29 - v36;
              sinval = *(double *)(a1 + 120);
              v41 = *(double *)(a1 + 112) + v43 * sinval;
              cosval = *(double *)(a1 + 136);
              v42 = *(double *)(a1 + 128) + v43 * cosval;
            }
            else
            {
              v39 = __sincos_stret(v29 * *(double *)(a1 + 96));
              cosval = v39.__cosval;
              sinval = v39.__sinval;
              v40 = *(double *)(a1 + 104);
              v41 = v40 * (1.0 - v39.__cosval);
              v42 = v40 * v39.__sinval;
            }
            v44 = v19 * v22 - v20 * v23;
            v45 = v28 + v42;
            v46 = *(double *)(a1 + 64);
            v47 = *(double *)(a1 + 72);
            v48 = (v28 + v42) * v46 - v44 * v47;
            v30 = -v48;
            if (!*(_BYTE *)(a1 + 177))
              v30 = v48;
            v49 = -(sinval * v46);
            v50 = -(sinval * v47);
            v51 = cosval;
            if (v49 != 0.0 || v50 != 0.0 || (v33 = v65, v32 = v66, v31 = v64, v51 != 0.0))
            {
              v52 = -v51;
              v53 = 1.0 / sqrtf((float)((float)(v50 * v50) + (float)(v49 * v49)) + (float)(v51 * v51));
              v32 = v53 * v49;
              v33 = v53 * v50;
              v31 = v53 * v52;
            }
            v34 = v44 * v46 + v45 * v47;
            v35 = v41;
          }
          else
          {
            if (*(_BYTE *)(a1 + 177))
              v30 = -v20;
            else
              v30 = v20;
            v31 = -1.0;
            v32 = 0.0;
            v33 = 0.0;
            v34 = v19;
            v35 = 0.0;
          }
          v54 = v34;
          v55 = v30;
          v56 = *(double *)(a1 + 144) * (float)((float)(v55 + 1.0) * 0.5);
          v57 = *(double *)(a1 + 152) * (float)((float)(v54 + 1.0) * 0.5);
          v70 = v88;
          v71 = v89;
          v72 = v90;
          v73 = v91;
          v68 = v86;
          v69 = v87;
          TSDGPUUpdateDataSetMetalPoint3DAtIndex(&v68, v21, v56, v57, v35);
          v70 = v82;
          v71 = v83;
          v72 = v84;
          v73 = v85;
          v68 = v80;
          v69 = v81;
          TSDGPUUpdateDataSetMetalPoint3DAtIndex(&v68, v21, v32, v33, v31);
          if (*(_BYTE *)(a1 + 176) && *(_BYTE *)(a1 + 178))
          {
            v58 = *(double *)(a1 + 160);
            v59 = v58 == 0.0;
            if (v58 == 1.0)
              v59 = 1;
            if (v59)
              v60 = v56;
            else
              v60 = v26;
            if (v59)
              v61 = v57;
            else
              v61 = v25;
            v62 = v67;
            if (v59)
              v62 = v35;
            v70 = v76;
            v71 = v77;
            v72 = v78;
            v73 = v79;
            v68 = v74;
            v69 = v75;
            TSDGPUUpdateDataSetMetalPoint3DAtIndex(&v68, v21, v60, v61, v62);
          }
          ++v18;
          v16 = *(_QWORD *)(a1 + 56);
          v19 = v63;
        }
        while (v18 < v16);
      }
      ++v17;
    }
    while (v17 < v16);
  }
  *(_BYTE *)(a2 + 88 * *(_QWORD *)(a1 + 168) + 56) = 0;
}

void sub_1B5258(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9)
{
  if (a2 == 1)
  {
    objc_begin_catch(exception_object);
    objc_msgSend(+[TSUAssertionHandler currentHandler](TSUAssertionHandler, "currentHandler"), "handleFailureInFunction:file:lineNumber:description:", +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "-[AEAnnotation(THAdditions) p_userDataDictionary]"), +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Alder/bliss/Classes/Annotations/AEAnnotation_THAdditions.m"), 148, CFSTR("exception trying to unarchive user data dictionary: %@"));
    objc_end_catch();
    JUMPOUT(0x1B522CLL);
  }
  _Unwind_Resume(exception_object);
}

void sub_1B5384(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (a2 == 1)
  {
    objc_begin_catch(exception_object);
    objc_msgSend(+[TSUAssertionHandler currentHandler](TSUAssertionHandler, "currentHandler"), "handleFailureInFunction:file:lineNumber:description:", +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "-[AEAnnotation(THAdditions) p_setUserDataDictionary:]"), +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Alder/bliss/Classes/Annotations/AEAnnotation_THAdditions.m"), 177, CFSTR("exception trying to archive user data dictionary: %@"));
    objc_end_catch();
    JUMPOUT(0x1B536CLL);
  }
  _Unwind_Resume(exception_object);
}

id sub_1B6834(uint64_t a1)
{
  id v2;
  void *v3;

  v2 = objc_msgSend(*(id *)(a1 + 32), "transportUI");
  v3 = *(void **)(a1 + 32);
  if (v2)
    return objc_msgSend(objc_msgSend(v3, "transportUI"), "mediaWasPressed");
  else
    return objc_msgSend(v3, "togglePlayPause");
}

id sub_1B6B54(uint64_t a1)
{
  return objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "audioRep"), "play");
}

id sub_1B6BE4(uint64_t a1)
{
  return objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "audioRep"), "pause");
}

id sub_1B6CC8(uint64_t a1)
{
  return objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "audioRep"), "stop");
}

id sub_1B6CE0(uint64_t a1)
{
  return objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "movieRep"), "stop");
}

id sub_1B6D5C(uint64_t a1)
{
  unsigned int v2;
  void *v3;
  id result;
  void *v5;

  if (objc_msgSend(*(id *)(a1 + 32), "audioRep"))
  {
    v2 = objc_msgSend(*(id *)(a1 + 32), "movieIsPlaying");
    v3 = *(void **)(a1 + 32);
    if (v2)
      objc_msgSend(v3, "pause");
    else
      objc_msgSend(v3, "play");
  }
  result = objc_msgSend(*(id *)(a1 + 32), "movieRep");
  if (result)
  {
    v5 = result;
    if (objc_msgSend(result, "isPlaying"))
      return objc_msgSend(v5, "stop");
    else
      return objc_msgSend(v5, "play");
  }
  return result;
}

void sub_1BAF2C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_1BAF44(uint64_t a1, void *a2)
{
  float v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  NSNumber *v7;

  objc_msgSend(objc_msgSend(a2, "valueForKey:", TSWReviewChoiceDescriptionFractionKey), "floatValue");
  if (v3 > 0.0)
    ++*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24);
  v5 = a1 + 32;
  v4 = *(void **)(a1 + 32);
  if (*(uint64_t *)(*(_QWORD *)(*(_QWORD *)(v5 + 8) + 8) + 24) <= 1)
    v6 = 1;
  else
    v6 = 2;
  v7 = +[NSNumber numberWithInteger:](NSNumber, "numberWithInteger:", v6);
  return objc_msgSend(v4, "setValue:forKey:", v7, TSWReviewQuestionDescriptionCardinalityKey);
}

void sub_1BBB54(uint64_t a1)
{
  _QWORD v1[4];
  __int128 v2;

  v1[0] = _NSConcreteStackBlock;
  v1[1] = 3221225472;
  v1[2] = sub_1BBBB0;
  v1[3] = &unk_426E28;
  v2 = *(_OWORD *)(a1 + 32);
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v1);
}

id sub_1BBBB0(uint64_t a1)
{
  void *v2;
  id v3;
  id v4;
  uint64_t v5;
  void *i;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  _BYTE v12[128];

  if (!+[NSThread isMainThread](NSThread, "isMainThread"))
    objc_msgSend(+[TSUAssertionHandler currentHandler](TSUAssertionHandler, "currentHandler"), "handleFailureInFunction:file:lineNumber:description:", +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "-[THModelContentLoadOperation appendMainThreadCompletionBlock:]_block_invoke_2"), +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Alder/compatibility/Publication/ApplePub/THImporter/THModelContentLoadOperation.mm"), 133, CFSTR("This operation must only be performed on the main thread."));
  if ((objc_msgSend(*(id *)(a1 + 32), "isCancelled") & 1) == 0
    && (objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 8), "isClosing") & 1) == 0)
  {
    v10 = 0u;
    v11 = 0u;
    v8 = 0u;
    v9 = 0u;
    v2 = *(void **)(a1 + 40);
    v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
    if (v3)
    {
      v4 = v3;
      v5 = *(_QWORD *)v9;
      do
      {
        for (i = 0; i != v4; i = (char *)i + 1)
        {
          if (*(_QWORD *)v9 != v5)
            objc_enumerationMutation(v2);
          (*(void (**)(void))(*(_QWORD *)(*((_QWORD *)&v8 + 1) + 8 * (_QWORD)i) + 16))();
        }
        v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
      }
      while (v4);
    }
  }
  objc_msgSend(*(id *)(a1 + 40), "removeAllObjects");
  return objc_msgSend(*(id *)(a1 + 32), "setCompletionBlock:", 0);
}

void sub_1BC260()
{
  JUMPOUT(0x1BC270);
}

void sub_1BC688(_Unwind_Exception *exc_buf, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (a2)
  {
    if (a2 == 2)
    {
      objc_begin_catch(exc_buf);
      objc_msgSend(+[TSUAssertionHandler currentHandler](TSUAssertionHandler, "currentHandler"), "handleFailureInFunction:file:lineNumber:description:", +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "-[THModelContentLoadOperation loadNavigationPageContentNode]"), +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Alder/compatibility/Publication/ApplePub/THImporter/THModelContentLoadOperation.mm"), 290, CFSTR("Exception raised during navigation read. %@"));
      objc_end_catch();
    }
    else
    {
      objc_begin_catch(exc_buf);
    }
    JUMPOUT(0x1BC620);
  }
  _Unwind_Resume(exc_buf);
}

void sub_1BCBB0(_Unwind_Exception *a1)
{
  objc_end_catch();
  _Unwind_Resume(a1);
}

id sub_1BD2D0(uint64_t a1, uint64_t a2)
{
  id result;

  result = objc_msgSend(*(id *)(a1 + 32), "definesProperty:", a2);
  if ((result & 1) == 0)
    return objc_msgSend(*(id *)(a1 + 32), "setBoxedValue:forProperty:", +[TSWPParagraphStyle boxedDefaultValueForProperty:](TSWPParagraphStyle, "boxedDefaultValueForProperty:", a2), a2);
  return result;
}

void sub_1BF03C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BF054(_QWORD *a1, void *a2)
{
  PFDUrlHandlerAssetInfo *v3;
  id v4;

  v4 = a2;
  if (a1[4])
  {
    v3 = -[PFDUrlHandlerAssetInfo initWithContext:bookRootURL:]([PFDUrlHandlerAssetInfo alloc], "initWithContext:bookRootURL:", a1[5], a1[6]);
    objc_msgSend(v4, "setObject:forKeyedSubscript:", v3, a1[4]);

  }
  *(_QWORD *)(*(_QWORD *)(a1[7] + 8) + 24) = objc_msgSend(v4, "count");

}

void sub_1BF17C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BF194(uint64_t a1, void *a2)
{
  id v3;
  id v4;

  v3 = a2;
  v4 = v3;
  if (*(_QWORD *)(a1 + 32))
  {
    objc_msgSend(v3, "removeObjectForKey:");
    v3 = v4;
  }
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = objc_msgSend(v3, "count");

}

void sub_1BF2C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1BF2DC(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_1BF2EC(uint64_t a1)
{

}

void sub_1BF2F4(uint64_t a1, void *a2)
{
  id v3;
  uint64_t v4;
  void *v5;
  id v6;

  v6 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "objectForKeyedSubscript:", *(_QWORD *)(a1 + 32)));
  v3 = objc_msgSend(v6, "copy");
  v4 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v5 = *(void **)(v4 + 40);
  *(_QWORD *)(v4 + 40) = v3;

}

void sub_1BF808(uint64_t a1)
{
  id v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  unsigned int v7;
  uint64_t v8;
  void *v9;
  id v10;
  int64_t v11;
  id v12;
  void *v13;
  id v14;

  objc_msgSend(*(id *)(a1 + 32), "_resetForNewLoad");
  v14 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "URL"));
  v2 = objc_msgSend((id)objc_opt_class(*(_QWORD *)(a1 + 32)), "_assetInfoForURL:", v14);
  v3 = (void *)objc_claimAutoreleasedReturnValue(v2);
  v4 = *(void **)(*(_QWORD *)(a1 + 32) + 48);
  if (v4)
  {
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "hosts"));
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v14, "host"));
    v7 = objc_msgSend(v5, "containsObject:", v6);

    if (v7)
      v8 = 0;
    else
      v8 = -1003;
  }
  else
  {
    v8 = 0;
  }
  v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "path"));
  v10 = objc_msgSend(v9, "length");

  if (!v10)
  {
    v8 = -1100;
    goto LABEL_15;
  }
  if (!objc_msgSend(v3, "fileSize"))
  {
    v8 = -1014;
    goto LABEL_15;
  }
  if (!objc_msgSend(v3, "assetIsInsideBookRootPath"))
  {
    v8 = -1102;
    goto LABEL_15;
  }
  if (v8)
  {
LABEL_15:
    objc_msgSend(*(id *)(a1 + 32), "_sendErrorForErrorCode:", v8);
    goto LABEL_16;
  }
  v11 = +[BuLr3rwnVU31zt9OioJ56 dataChunkSize](BuLr3rwnVU31zt9OioJ56, "dataChunkSize");
  v12 = objc_msgSend(v3, "fileSize");
  v13 = *(void **)(a1 + 32);
  if (v11 >= (uint64_t)v12)
    objc_msgSend(v13, "_sendSmallFileForAsset:", v3);
  else
    objc_msgSend(v13, "_sendLargeFileForAsset:", v3);
LABEL_16:

}

id sub_1BF9B0(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_cleanupDispatchIO");
}

void sub_1BFF90(uint64_t a1, int a2, void *a3, int a4)
{
  NSObject *v7;
  uint64_t v8;
  void *v9;
  id v10;
  uint64_t v11;
  NSObject *data;
  _QWORD applier[5];
  id v14;
  id v15;
  uint64_t v16;

  v7 = a3;
  data = v7;
  if (a4)
  {
    if (a4 == 89)
      v8 = -999;
    else
      v8 = -3001;
    objc_msgSend(*(id *)(a1 + 32), "_sendErrorForErrorCode:", v8);
    goto LABEL_11;
  }
  if (v7 && v7 != &_dispatch_data_empty)
  {
    applier[0] = _NSConcreteStackBlock;
    applier[1] = 3221225472;
    applier[2] = sub_1C0084;
    applier[3] = &unk_42B378;
    v9 = *(void **)(a1 + 40);
    applier[4] = *(_QWORD *)(a1 + 32);
    v14 = v9;
    v10 = *(id *)(a1 + 48);
    v11 = *(_QWORD *)(a1 + 56);
    v15 = v10;
    v16 = v11;
    dispatch_data_apply(data, applier);

    v7 = data;
  }
  if (a2)
  {
    objc_msgSend(*(id *)(a1 + 32), "_cleanupDispatchIO");
    objc_msgSend(*(id *)(a1 + 32), "_sendDidFinish");
LABEL_11:
    v7 = data;
  }

}

BOOL sub_1C0084(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  id v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  id v13;
  unsigned int v14;
  id v15;
  BOOL v16;
  uint64_t v18;

  v8 = a2;
  v9 = objc_autoreleasePoolPush();
  v10 = *(void **)(a1 + 32);
  if (a5)
  {
    objc_msgSend(v10, "_maybeSendDidReceiveResponse:", *(_QWORD *)(a1 + 40));
    if (*(_QWORD *)(a1 + 48))
    {
      v11 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableData dataWithLength:](NSMutableData, "dataWithLength:", *(_QWORD *)(a1 + 56)));
      v12 = *(void **)(a1 + 48);
      v13 = objc_retainAutorelease(v11);
      v18 = 0;
      v14 = objc_msgSend(v12, "BaSrRpzcWCyAjSdjbc8j:withSize:into:error:", a4, a5, objc_msgSend(v13, "mutableBytes"), &v18);
      v15 = 0;
      if (v14)
        v16 = v18 == 0;
      else
        v16 = 0;
      if (v16)
      {
        objc_msgSend(v13, "setLength:", a5);
        v15 = v13;
      }

    }
    else
    {
      v15 = objc_msgSend(objc_alloc((Class)NSData), "initWithBytes:length:", a4, a5);
    }
    objc_msgSend(*(id *)(a1 + 32), "_sendDidReceiveData:", v15);

  }
  else
  {
    objc_msgSend(v10, "_sendErrorForErrorCode:", -1014);
  }
  objc_autoreleasePoolPop(v9);

  return a5 != 0;
}

void sub_1C1D60()
{
  operator delete();
}

__CFDictionary *sub_1C1D84(const void **a1)
{
  __CFDictionary *Mutable;

  Mutable = CFDictionaryCreateMutable(kCFAllocatorDefault, 0, &kCFTypeDictionaryKeyCallBacks, &kCFTypeDictionaryValueCallBacks);
  if (CFDictionaryGetCount((CFDictionaryRef)a1[17]) >= 1)
    CFDictionaryAddValue(Mutable, PFDEpubEncryptionParserFairplayInfoKey, a1[17]);
  if (CFArrayGetCount((CFArrayRef)a1[19]) >= 1)
    CFDictionaryAddValue(Mutable, PFDEpubEncryptionParserFontObfuscationInfoKey, a1[19]);
  if (CFDictionaryGetCount((CFDictionaryRef)a1[18]) >= 1)
    CFDictionaryAddValue(Mutable, PFDEpubEncryptionParserEncryptionInfoKey, a1[18]);
  return Mutable;
}

void sub_1C2688()
{
  operator delete();
}

void sub_1C2908(id a1)
{
  qword_543330 = &off_469BE8;
}

void sub_1C3170(void *a1, int a2)
{
  uint64_t v2;
  uint64_t v3;
  id v6;

  sub_1C342C(v3 - 112, *(_QWORD **)(v3 - 104));
  if (a2 == 2)
  {
    v6 = objc_begin_catch(a1);
    objc_end_catch();
    JUMPOUT(0x1C3104);
  }
  objc_begin_catch(a1);
  if (!v2)
    JUMPOUT(0x1C3120);
  JUMPOUT(0x1C310CLL);
}

void sub_1C33B8(_Unwind_Exception *a1)
{
  objc_end_catch();
  _Unwind_Resume(a1);
}

void sub_1C342C(uint64_t a1, _QWORD *a2)
{
  if (a2)
  {
    sub_1C342C(a1, *a2);
    sub_1C342C(a1, a2[1]);
    sub_1C3474((uint64_t)(a2 + 4));
    operator delete(a2);
  }
}

void sub_1C3474(uint64_t a1)
{
  if (*(char *)(a1 + 47) < 0)
    operator delete(*(void **)(a1 + 24));
  if (*(char *)(a1 + 23) < 0)
    operator delete(*(void **)a1);
}

id sub_1C3658(uint64_t a1, uint64_t a2)
{
  id result;

  result = objc_msgSend(*(id *)(a1 + 32), "definesProperty:", a2);
  if ((result & 1) == 0)
    return objc_msgSend(*(id *)(a1 + 32), "setBoxedValue:forProperty:", +[TSWPParagraphStyle boxedDefaultValueForProperty:](TSWPParagraphStyle, "boxedDefaultValueForProperty:", a2), a2);
  return result;
}

void sub_1C3B20(_Unwind_Exception *a1)
{
  objc_end_catch();
  _Unwind_Resume(a1);
}

void sub_1C3B40(void *a1, int a2)
{
  objc_begin_catch(a1);
  if (a2 == 2)
  {
    objc_end_catch();
    JUMPOUT(0x1C3AE0);
  }
  JUMPOUT(0x1C3AE8);
}

_xmlNode *CXFirstChildNamed(_xmlNode *a1, xmlChar *str1)
{
  _xmlNode *i;

  if (!a1)
    return 0;
  for (i = a1->children; i; i = i->next)
  {
    if (i->type == XML_ELEMENT_NODE && xmlStrEqual(str1, i->name))
      break;
  }
  return i;
}

_xmlNode *CXNextSiblingNamed(_xmlNode *a1, xmlChar *str1)
{
  _xmlNode *i;

  if (!a1)
    return 0;
  for (i = a1->next; i; i = i->next)
  {
    if (i->type == XML_ELEMENT_NODE && xmlStrEqual(str1, i->name))
      break;
  }
  return i;
}

uint64_t CXFirstNodeMatchingXPathQuery(_xmlNode *a1, const xmlChar *a2)
{
  xmlXPathContext *v4;
  xmlXPathContext *v5;
  xmlNodePtr node;
  uint64_t v7;

  v4 = xmlXPathNewContext(a1->doc);
  v5 = v4;
  if (v4
    && (v4->node = a1, (v4 = (xmlXPathContext *)xmlXPathEvalExpression(a2, v4)) != 0)
    && (node = v4->node) != 0
    && SLODWORD(node->_private) >= 1)
  {
    v7 = **(_QWORD **)&node->type;
  }
  else
  {
    v7 = 0;
  }
  xmlXPathFreeObject((xmlXPathObjectPtr)v4);
  xmlXPathFreeContext(v5);
  return v7;
}

_xmlNode *pCXFindChild(_xmlNode *a1, CXNamespace *a2, xmlChar *str1)
{
  _xmlNode *i;

  if (!a1)
    return 0;
  for (i = a1->children; i; i = i->next)
  {
    if (i->type == XML_ELEMENT_NODE
      && xmlStrEqual(str1, i->name)
      && -[CXNamespace containsNode:](a2, "containsNode:", i))
    {
      break;
    }
  }
  return i;
}

_xmlNode *pCXFindChildWithAttributeValue(_xmlNode *a1, CXNamespace *a2, xmlChar *a3, const xmlChar *a4, const xmlChar *a5)
{
  _xmlNode *i;
  _xmlNode *v10;
  _xmlAttr *properties;
  _xmlNode *children;

  for (i = pCXFindChild(a1, a2, a3); ; i = CXFindNextChild(v10, a2, a3))
  {
    v10 = i;
    if (!i)
      break;
    properties = i->properties;
    if (properties)
    {
      while (!xmlStrEqual(a4, properties->name))
      {
        properties = properties->next;
        if (!properties)
          goto LABEL_9;
      }
      children = properties->children;
      if (children)
      {
        if (xmlStrEqual(a5, children->content))
          break;
      }
    }
LABEL_9:
    ;
  }
  return v10;
}

_xmlNode *CXFindNextChild(_xmlNode *a1, CXNamespace *a2, xmlChar *str1)
{
  _xmlNode *i;

  for (i = a1->next; i; i = i->next)
  {
    if (i->type == XML_ELEMENT_NODE
      && xmlStrEqual(str1, i->name)
      && -[CXNamespace containsNode:](a2, "containsNode:", i))
    {
      break;
    }
  }
  return i;
}

_xmlNode *CXFindRequiredChild(_xmlNode *a1, CXNamespace *a2, xmlChar *a3)
{
  _xmlNode *v4;

  v4 = pCXFindChild(a1, a2, a3);
  if (!v4)
    +[NSException raise:format:](NSException, "raise:format:", CFSTR("TCXmlException"), CFSTR("Could not find node: %s"), a3);
  return v4;
}

_xmlNode *CXFirstChild(_xmlNode *a1)
{
  _xmlNode *result;

  if (!a1)
    objc_msgSend(+[TSUAssertionHandler currentHandler](TSUAssertionHandler, "currentHandler"), "handleFailureInFunction:file:lineNumber:description:", +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "xmlNodePtr CXFirstChild(xmlNodePtr)"), +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Alder/compatibility/Publication/Common/Utilities/TCXmlUtilities.mm"), 184, CFSTR("Bad node."));
  for (result = a1->children; result; result = result->next)
  {
    if (result->type == XML_ELEMENT_NODE)
      break;
  }
  return result;
}

_xmlNode *CXNextSibling(_xmlNode *a1)
{
  _xmlNode *v1;

  v1 = a1;
  if (!a1)
    objc_msgSend(+[TSUAssertionHandler currentHandler](TSUAssertionHandler, "currentHandler"), "handleFailureInFunction:file:lineNumber:description:", +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "xmlNodePtr CXNextSibling(xmlNodePtr)"), +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Alder/compatibility/Publication/Common/Utilities/TCXmlUtilities.mm"), 198, CFSTR("Bad node."));
  do
    v1 = v1->next;
  while (v1 && v1->type != XML_ELEMENT_NODE);
  return v1;
}

_xmlNode *CXFirstChild(_xmlNode *a1, CXNamespace *a2, xmlChar *a3)
{
  _xmlNode *v5;

  v5 = CXFirstChild(a1);
  pTCXmlCheckName(v5, a2, a3);
  return v5;
}

uint64_t pTCXmlCheckName(_xmlNode *a1, CXNamespace *a2, xmlChar *str2)
{
  uint64_t result;

  if (!a1)
    return (uint64_t)+[NSException raise:format:](NSException, "raise:format:", CFSTR("TCXmlException"), CFSTR("Could not find node: %s"), str2);
  if (!xmlStrEqual(a1->name, str2))
    return (uint64_t)+[NSException raise:format:](NSException, "raise:format:", CFSTR("TCXmlException"), CFSTR("Could not find node: %s"), str2);
  result = -[CXNamespace containsNode:](a2, "containsNode:", a1);
  if ((result & 1) == 0)
    return (uint64_t)+[NSException raise:format:](NSException, "raise:format:", CFSTR("TCXmlException"), CFSTR("Could not find node: %s"), str2);
  return result;
}

_xmlNode *CXNextSibling(_xmlNode *a1, CXNamespace *a2, xmlChar *a3)
{
  _xmlNode *v5;

  v5 = CXNextSibling(a1);
  pTCXmlCheckName(v5, a2, a3);
  return v5;
}

_xmlNode *CXRequiredLongChild(_xmlNode *a1, CXNamespace *a2, xmlChar *a3)
{
  return CXRequiredLongChild(a1, a2, a3, 0);
}

_xmlNode *CXRequiredLongChild(_xmlNode *a1, CXNamespace *a2, xmlChar *a3, int a4)
{
  _xmlNode *result;
  char *Content;
  uint64_t v7;

  result = pCXFindChild(a1, a2, a3);
  if (result)
  {
    Content = (char *)xmlNodeGetContent(result);
    v7 = CXLongValueFromString((uint64_t)Content, Content, a4);
    xmlFree(Content);
    return (_xmlNode *)v7;
  }
  return result;
}

uint64_t CXLongValueFromString(uint64_t a1, char *a2, int a3)
{
  double v5;
  int v8;
  double v9;
  uint64_t v10;

  v9 = 0.0;
  v8 = 0;
  CXSplitValueAndUnit(+[NSString stringWithXmlString:](NSString, "stringWithXmlString:", a2), &v9, &v8);
  if (v8)
  {
    if (a3)
    {
      v5 = CXUnitToPoint(v8);
      return (uint64_t)(v9 * (v5 / CXUnitToPoint(a3)));
    }
    else
    {
      return (uint64_t)v9;
    }
  }
  else
  {
    v10 = 0;
    if (a2)
    {
      sfaxmlXmlCharToLong(a2, &v10);
      return v10;
    }
    else
    {
      return 0;
    }
  }
}

uint64_t CXCountChildren(_xmlNode *a1, CXNamespace *a2, xmlChar *str1)
{
  _xmlNode *children;
  uint64_t v6;

  children = a1->children;
  if (!children)
    return 0;
  v6 = 0;
  do
  {
    if (children->type == XML_ELEMENT_NODE && xmlStrEqual(str1, children->name))
      v6 = v6 + -[CXNamespace containsNode:](a2, "containsNode:", children);
    children = children->next;
  }
  while (children);
  return v6;
}

_xmlAttr *CXFindAttribute(_xmlNode *a1, xmlChar *str2)
{
  _xmlAttr *i;
  const xmlChar *name;

  if (!a1)
    return 0;
  for (i = a1->properties; i; i = i->next)
  {
    name = i->name;
    if (name && xmlStrEqual(name, str2))
      break;
  }
  return i;
}

_xmlAttr *CXFindAttribute(_xmlNode *a1, CXNamespace *a2, xmlChar *str2)
{
  _xmlAttr *i;
  const xmlChar *name;

  if (!a1)
    return 0;
  for (i = a1->properties; i; i = i->next)
  {
    name = i->name;
    if (name && xmlStrEqual(name, str2) && -[CXNamespace containsAttribute:](a2, "containsAttribute:", i))
      break;
  }
  return i;
}

char *CXBoolValueFromString(unsigned __int8 *a1, char *a2)
{
  char *result;
  uint64_t v3;

  result = a2;
  v3 = 0;
  if (a2)
  {
    sfaxmlXmlCharToLong(a2, &v3);
    return (char *)(v3 != 0);
  }
  return result;
}

char *CXLongValueFromString(unsigned __int8 *a1, char *a2)
{
  char *result;
  uint64_t v3;

  result = a2;
  v3 = 0;
  if (a2)
  {
    sfaxmlXmlCharToLong(a2, &v3);
    return (char *)v3;
  }
  return result;
}

uint64_t CXLongValue(uint64_t a1, int a2)
{
  char *String;
  uint64_t v4;

  String = (char *)xmlNodeListGetString(*(xmlDocPtr *)(a1 + 64), *(const xmlNode **)(a1 + 24), 1);
  v4 = CXLongValueFromString((uint64_t)String, String, a2);
  if (String)
    xmlFree(String);
  return v4;
}

id CXSplitValueAndUnit(void *a1, _QWORD *a2, _DWORD *a3)
{
  id v5;
  id result;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  unsigned int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;

  *a2 = 0;
  *a3 = 0;
  v5 = objc_msgSend(a1, "stringByTrimmingCharactersInSet:", +[NSCharacterSet whitespaceAndNewlineCharacterSet](NSCharacterSet, "whitespaceAndNewlineCharacterSet"));
  result = objc_msgSend(v5, "length");
  v7 = result;
  if ((_DWORD)result)
  {
    v8 = (int)result;
    v9 = 0;
    v10 = ((_QWORD)result << 32) - 0x100000000;
    while (1)
    {
      v11 = objc_msgSend(v5, "characterAtIndex:", v10 >> 32);
      v12 = v11;
      if (v11 <= 0x7F)
      {
        if ((_DefaultRuneLocale.__runetype[v11] & 0x100) != 0)
          goto LABEL_9;
      }
      else if (__maskrune(v11, 0x100uLL))
      {
        goto LABEL_9;
      }
      if (v12 != 37 && v12)
      {
LABEL_10:
        v13 = v8 - v9;
        v14 = v8 - (int)v9;
        result = objc_msgSend(objc_msgSend(v5, "substringToIndex:", v13), "doubleValue");
        *a2 = v15;
        if ((_DWORD)v9)
        {
          result = CXUnitWithName((NSString *)objc_msgSend(v5, "substringFromIndex:", v14));
          *a3 = (_DWORD)result;
        }
        return result;
      }
LABEL_9:
      ++v9;
      v10 -= 0x100000000;
      if (v7 == v9)
        goto LABEL_10;
    }
  }
  return result;
}

double CXUnitToPoint(int a1)
{
  int v1;

  v1 = a1 - 6;
  if ((a1 - 6) < 0xB && ((0x77Fu >> v1) & 1) != 0)
    return dbl_315628[v1];
  objc_msgSend(+[TSUAssertionHandler currentHandler](TSUAssertionHandler, "currentHandler"), "handleFailureInFunction:file:lineNumber:description:", +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "double CXUnitToPoint(CXUnit)"), +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Alder/compatibility/Publication/Common/Utilities/TCXmlUtilities.mm"), 997, CFSTR("Unhandled attribute value unit"));
  return 1.0;
}

_xmlAttr *CXRequiredLongAttribute(_xmlNode *a1, CXNamespace *a2, xmlChar *a3)
{
  _xmlAttr *result;

  result = CXFindAttribute(a1, a2, a3);
  if (result)
    return (_xmlAttr *)CXLongValue((uint64_t)result, 0);
  return result;
}

_xmlAttr *CXRequiredLongAttribute(_xmlNode *a1, CXNamespace *a2, xmlChar *a3, int a4)
{
  _xmlAttr *result;

  result = CXFindAttribute(a1, a2, a3);
  if (result)
    return (_xmlAttr *)CXLongValue((uint64_t)result, a4);
  return result;
}

BOOL CXOptionalLongAttribute(_xmlNode *a1, CXNamespace *a2, xmlChar *a3, uint64_t *a4)
{
  _xmlAttr *v5;
  _xmlAttr *v6;

  v5 = CXFindAttribute(a1, a2, a3);
  v6 = v5;
  if (v5)
    *a4 = CXLongValue((uint64_t)v5, 0);
  return v6 != 0;
}

BOOL CXOptionalLongAttribute(_xmlNode *a1, CXNamespace *a2, xmlChar *a3, uint64_t *a4, int a5)
{
  _xmlAttr *v7;
  _xmlAttr *v8;

  v7 = CXFindAttribute(a1, a2, a3);
  v8 = v7;
  if (v7)
    *a4 = CXLongValue((uint64_t)v7, a5);
  return v8 != 0;
}

uint64_t CXDefaultLongAttribute(_xmlNode *a1, CXNamespace *a2, xmlChar *a3, uint64_t a4)
{
  _xmlAttr *v5;

  v5 = CXFindAttribute(a1, a2, a3);
  if (v5)
    return CXLongValue((uint64_t)v5, 0);
  else
    return a4;
}

uint64_t CXDefaultLongAttribute(_xmlNode *a1, CXNamespace *a2, xmlChar *a3, uint64_t a4, int a5)
{
  _xmlAttr *v7;

  v7 = CXFindAttribute(a1, a2, a3);
  if (v7)
    return CXLongValue((uint64_t)v7, a5);
  else
    return a4;
}

uint64_t CXDefaultLongAttributeFromStream(_xmlTextReader *a1, CXNamespace *a2, const xmlChar *a3, uint64_t a4)
{
  char *AttributeNs;
  char *v6;
  uint64_t v8;

  AttributeNs = (char *)xmlTextReaderGetAttributeNs(a1, a3, (const xmlChar *)-[CXNamespace uri](a2, "uri"));
  if (AttributeNs)
  {
    v6 = AttributeNs;
    v8 = 0;
    sfaxmlXmlCharToLong(AttributeNs, &v8);
    a4 = v8;
    xmlFree(v6);
  }
  return a4;
}

unint64_t CXUnsignedLongValue(_xmlAttr *a1)
{
  xmlChar *String;
  xmlChar *v2;
  unint64_t v4;

  v4 = 0;
  String = xmlNodeListGetString(a1->doc, a1->children, 1);
  v2 = String;
  if (String)
    sfaxmlXmlCharToUnsignedLong((const char *)String, &v4);
  xmlFree(v2);
  return v4;
}

_xmlAttr *CXRequiredUnsignedLongAttribute(_xmlNode *a1, CXNamespace *a2, xmlChar *a3)
{
  _xmlAttr *result;

  result = CXFindAttribute(a1, a2, a3);
  if (result)
    return (_xmlAttr *)CXUnsignedLongValue(result);
  return result;
}

BOOL CXOptionalUnsignedLongAttribute(_xmlNode *a1, CXNamespace *a2, xmlChar *a3, unint64_t *a4)
{
  _xmlAttr *v5;
  _xmlAttr *v6;

  v5 = CXFindAttribute(a1, a2, a3);
  v6 = v5;
  if (v5)
    *a4 = CXUnsignedLongValue(v5);
  return v6 != 0;
}

unint64_t CXDefaultUnsignedLongAttribute(_xmlNode *a1, CXNamespace *a2, xmlChar *a3, uint64_t a4)
{
  _xmlAttr *v5;

  v5 = CXFindAttribute(a1, a2, a3);
  if (v5)
    return CXUnsignedLongValue(v5);
  else
    return a4;
}

double CXFraction(NSString *a1)
{
  double result;
  double v2;
  double v3;
  int v4;
  double v5;

  v5 = 0.0;
  v4 = 0;
  CXSplitValueAndUnit(a1, &v5, &v4);
  if (v4 == 13)
  {
    v2 = v5;
    v3 = 100.0;
  }
  else
  {
    result = 0.0;
    if (v4)
      return result;
    v2 = v5;
    v3 = 100000.0;
  }
  return v2 / v3;
}

double CXRequiredFractionAttribute(_xmlNode *a1, CXNamespace *a2, xmlChar *a3)
{
  _xmlAttr *v3;

  v3 = CXRequiredStringAttribute(a1, a2, a3);
  if (v3)
    return CXFraction(&v3->_private);
  else
    return 0.0;
}

_xmlAttr *CXRequiredStringAttribute(_xmlNode *a1, CXNamespace *a2, xmlChar *a3)
{
  _xmlAttr *result;

  result = CXFindAttribute(a1, a2, a3);
  if (result)
    return (_xmlAttr *)objc_msgSend(objc_alloc((Class)NSString), "initWithValueOfXmlAttribute:", result);
  return result;
}

BOOL CXOptionalFractionAttribute(_xmlNode *a1, CXNamespace *a2, xmlChar *a3, double *a4)
{
  NSString *v5;
  NSString *v7;

  v7 = 0;
  CXOptionalStringAttribute(a1, a2, a3, &v7, 1);
  v5 = v7;
  if (v7)
    *a4 = CXFraction(v7);
  return v5 != 0;
}

BOOL CXOptionalStringAttribute(_xmlNode *a1, CXNamespace *a2, xmlChar *a3, NSString **a4)
{
  return CXOptionalStringAttribute(a1, a2, a3, a4, 1);
}

double CXDefaultFractionAttribute(_xmlNode *a1, CXNamespace *a2, xmlChar *a3, double a4)
{
  NSString *v6;

  v6 = 0;
  CXOptionalStringAttribute(a1, a2, a3, &v6, 1);
  if (v6)
    return CXFraction(v6);
  else
    return a4;
}

double CXDoubleValue(_xmlAttr *a1)
{
  xmlChar *String;
  xmlChar *v2;
  double v4;

  v4 = 0.0;
  String = xmlNodeListGetString(a1->doc, a1->children, 1);
  v2 = String;
  if (String)
    sfaxmlXmlCharToDouble((uint64_t)String, &v4);
  xmlFree(v2);
  return v4;
}

double CXRequiredDoubleAttribute(_xmlNode *a1, CXNamespace *a2, xmlChar *a3)
{
  _xmlAttr *v3;

  v3 = CXFindAttribute(a1, a2, a3);
  if (v3)
    return CXDoubleValue(v3);
  else
    return 0.0;
}

BOOL CXOptionalDoubleAttribute(_xmlNode *a1, CXNamespace *a2, xmlChar *a3, double *a4)
{
  _xmlAttr *v5;
  _xmlAttr *v6;

  v5 = CXFindAttribute(a1, a2, a3);
  v6 = v5;
  if (v5)
    *a4 = CXDoubleValue(v5);
  return v6 != 0;
}

double CXDefaultDoubleAttribute(_xmlNode *a1, CXNamespace *a2, xmlChar *a3, double a4)
{
  _xmlAttr *v5;

  v5 = CXFindAttribute(a1, a2, a3);
  if (v5)
    return CXDoubleValue(v5);
  else
    return a4;
}

uint64_t CXBoolValue(_xmlAttr *a1)
{
  xmlChar *String;
  xmlChar *v2;
  unsigned __int8 v4;

  v4 = 0;
  String = xmlNodeListGetString(a1->doc, a1->children, 1);
  v2 = String;
  if (String)
    sfaxmlXmlCharToBool(String, &v4);
  xmlFree(v2);
  return v4;
}

_xmlAttr *CXRequiredBoolAttribute(_xmlNode *a1, CXNamespace *a2, xmlChar *a3)
{
  _xmlAttr *result;

  result = CXFindAttribute(a1, a2, a3);
  if (result)
    return (_xmlAttr *)CXBoolValue(result);
  return result;
}

BOOL CXOptionalBoolAttribute(_xmlNode *a1, CXNamespace *a2, xmlChar *a3, BOOL *a4)
{
  _xmlAttr *v5;
  _xmlAttr *v6;

  v5 = CXFindAttribute(a1, a2, a3);
  v6 = v5;
  if (v5)
    *a4 = CXBoolValue(v5);
  return v6 != 0;
}

BOOL CXOptionalBoolAttributeFromStream(_xmlTextReader *a1, CXNamespace *a2, const xmlChar *a3, BOOL *a4)
{
  char *AttributeNs;
  char *v6;
  uint64_t v8;

  AttributeNs = (char *)xmlTextReaderGetAttributeNs(a1, a3, (const xmlChar *)-[CXNamespace uri](a2, "uri"));
  v6 = AttributeNs;
  if (AttributeNs)
  {
    v8 = 0;
    sfaxmlXmlCharToLong(AttributeNs, &v8);
    *a4 = v8 != 0;
    xmlFree(v6);
  }
  return v6 != 0;
}

uint64_t CXDefaultBoolAttribute(_xmlNode *a1, CXNamespace *a2, xmlChar *a3, uint64_t a4)
{
  _xmlAttr *v5;

  v5 = CXFindAttribute(a1, a2, a3);
  if (v5)
    return CXBoolValue(v5);
  else
    return a4;
}

BOOL CXDefaultBoolAttributeFromStream(_xmlTextReader *a1, CXNamespace *a2, const xmlChar *a3, _BOOL8 a4)
{
  char *AttributeNs;
  char *v6;
  uint64_t v8;

  AttributeNs = (char *)xmlTextReaderGetAttributeNs(a1, a3, (const xmlChar *)-[CXNamespace uri](a2, "uri"));
  if (AttributeNs)
  {
    v6 = AttributeNs;
    v8 = 0;
    sfaxmlXmlCharToLong(AttributeNs, &v8);
    a4 = v8 != 0;
    xmlFree(v6);
  }
  return a4;
}

_xmlAttr *CXRequiredBase64DecodedDataAttribute(_xmlNode *a1, CXNamespace *a2, xmlChar *a3)
{
  _xmlAttr *result;

  result = CXRequiredStringAttribute(a1, a2, a3);
  if (result)
    return (_xmlAttr *)decodeBase64(&result->_private);
  return result;
}

uint64_t decodeBase64(NSString *a1)
{
  if (((unint64_t)-[NSMutableString length](removeCRs(a1), "length") & 3) == 0)
    operator new[]();
  return 0;
}

BOOL CXOptionalStringAttribute(_xmlNode *a1, CXNamespace *a2, xmlChar *a3, NSString **a4, int a5)
{
  _xmlAttr *v7;
  id v8;

  v7 = CXFindAttribute(a1, a2, a3);
  if (v7)
  {
    v8 = objc_msgSend(objc_alloc((Class)NSString), "initWithValueOfXmlAttribute:", v7);
    if (a5)
      v8 = v8;
    *a4 = (NSString *)v8;
  }
  return v7 != 0;
}

NSString *CXDefaultStringAttribute(_xmlNode *a1, CXNamespace *a2, xmlChar *a3, NSString *a4)
{
  _xmlAttr *v5;

  v5 = CXFindAttribute(a1, a2, a3);
  if (v5)
    return (NSString *)objc_msgSend(objc_alloc((Class)NSString), "initWithValueOfXmlAttribute:", v5);
  else
    return a4;
}

uint64_t CXBoolValue(_xmlNode *a1)
{
  xmlChar *String;
  xmlChar *v2;
  unsigned __int8 v4;

  v4 = 0;
  String = xmlNodeListGetString(a1->doc, a1->children, 1);
  v2 = String;
  if (String)
    sfaxmlXmlCharToBool(String, &v4);
  xmlFree(v2);
  return v4;
}

BOOL CXChildOptionalBoolContent(_xmlNode *a1, CXNamespace *a2, xmlChar *a3, BOOL *a4)
{
  _xmlNode *v5;
  _xmlNode *v6;

  v5 = pCXFindChild(a1, a2, a3);
  v6 = v5;
  if (v5)
    *a4 = CXBoolValue(v5);
  return v6 != 0;
}

uint64_t CXChildDefaultBoolContent(_xmlNode *a1, CXNamespace *a2, xmlChar *a3, uint64_t a4)
{
  _xmlNode *v5;

  v5 = pCXFindChild(a1, a2, a3);
  if (v5)
    return CXBoolValue(v5);
  else
    return a4;
}

double CXDoubleValue(_xmlNode *a1)
{
  xmlChar *String;
  xmlChar *v2;
  double v4;

  v4 = 0.0;
  String = xmlNodeListGetString(a1->doc, a1->children, 1);
  v2 = String;
  if (String)
    sfaxmlXmlCharToDouble((uint64_t)String, &v4);
  xmlFree(v2);
  return v4;
}

BOOL CXChildOptionalDoubleContent(_xmlNode *a1, CXNamespace *a2, xmlChar *a3, double *a4)
{
  _xmlNode *v5;
  _xmlNode *v6;

  v5 = pCXFindChild(a1, a2, a3);
  v6 = v5;
  if (v5)
    *a4 = CXDoubleValue(v5);
  return v6 != 0;
}

double CXChildDefaultDoubleContent(_xmlNode *a1, CXNamespace *a2, xmlChar *a3, double a4)
{
  _xmlNode *v5;

  v5 = pCXFindChild(a1, a2, a3);
  if (v5)
    return CXDoubleValue(v5);
  else
    return a4;
}

NSString *CXChildDefaultStringContent(_xmlNode *a1, CXNamespace *a2, xmlChar *a3, NSString *a4)
{
  _xmlNode *v5;

  v5 = pCXFindChild(a1, a2, a3);
  if (v5)
    return (NSString *)objc_msgSend(objc_alloc((Class)NSString), "initWithContentOfXmlNode:", v5);
  else
    return a4;
}

NSString *CXDefaultStringContent(_xmlNode *a1, NSString *a2)
{
  if (a1)
    return (NSString *)objc_msgSend(objc_alloc((Class)NSString), "initWithContentOfXmlNode:", a1);
  else
    return a2;
}

xmlNode *CXNewTextNode(xmlChar *name, NSString *a2)
{
  xmlNode *v3;
  const char *v4;
  xmlNode *v5;

  v3 = xmlNewNode(0, name);
  if (a2)
    v4 = -[NSString xmlString](a2, "xmlString");
  else
    v4 = "";
  v5 = xmlNewText((const xmlChar *)v4);
  xmlAddChild(v3, v5);
  return v3;
}

xmlAttrPtr CXNewAttribute(_xmlNode *a1, const xmlChar *a2, NSString *a3)
{
  const char *v5;

  if (a3)
    v5 = -[NSString xmlString](a3, "xmlString");
  else
    v5 = "";
  return xmlNewProp(a1, a2, (const xmlChar *)v5);
}

BOOL CXNodeHasName(_xmlNode *a1, CXNamespace *a2, xmlChar *str2)
{
  return a1 && xmlStrEqual(a1->name, str2) && -[CXNamespace containsNode:](a2, "containsNode:", a1);
}

uint64_t decodeBase64Char(int a1)
{
  unsigned int v1;
  char v2;
  char v3;
  char v4;
  char v5;
  char v6;

  v1 = a1 - 65;
  if (a1 == 47)
    v2 = 63;
  else
    v2 = -1;
  if (a1 == 61)
    v3 = 64;
  else
    v3 = v2;
  if (a1 == 43)
    v4 = 62;
  else
    v4 = v3;
  if ((a1 - 48) <= 9)
    v5 = a1 + 4;
  else
    v5 = v4;
  if ((a1 - 97) <= 0x19)
    v6 = a1 - 71;
  else
    v6 = v5;
  if (v1 > 0x19)
    LOBYTE(v1) = v6;
  return v1;
}

NSMutableString *removeCRs(NSString *a1)
{
  NSMutableString *v2;
  NSArray *v3;
  NSUInteger v4;
  NSUInteger v5;
  uint64_t i;

  v2 = +[NSMutableString stringWithCapacity:](NSMutableString, "stringWithCapacity:", -[NSString length](a1, "length"));
  v3 = -[NSString componentsSeparatedByString:](a1, "componentsSeparatedByString:", CFSTR("\n"));
  v4 = -[NSArray count](v3, "count");
  if (v4)
  {
    v5 = v4;
    for (i = 0; i != v5; ++i)
      -[NSMutableString appendString:](v2, "appendString:", -[NSArray objectAtIndex:](v3, "objectAtIndex:", i));
  }
  return v2;
}

id CXUnitWithName(NSString *a1)
{
  id v2;

  v2 = (id)qword_543340;
  if (!qword_543340)
  {
    v2 = objc_msgSend(objc_alloc((Class)NSDictionary), "initWithObjectsAndKeys:", +[NSNumber numberWithInt:](NSNumber, "numberWithInt:", 1), CFSTR("f"), +[NSNumber numberWithInt:](NSNumber, "numberWithInt:", 2), CFSTR("fd"), +[NSNumber numberWithInt:](NSNumber, "numberWithInt:", 3), CFSTR("deg"), +[NSNumber numberWithInt:](NSNumber, "numberWithInt:", 5), CFSTR("rad"), +[NSNumber numberWithInt:](NSNumber, "numberWithInt:", 4), CFSTR("grad"), +[NSNumber numberWithInt:](NSNumber, "numberWithInt:", 6), CFSTR("pt"), +[NSNumber numberWithInt:](NSNumber, "numberWithInt:", 7), CFSTR("in"), +[NSNumber numberWithInt:](NSNumber, "numberWithInt:", 8), CFSTR("cm"), +[NSNumber numberWithInt:](NSNumber, "numberWithInt:", 9),
           CFSTR("mm"),
           +[NSNumber numberWithInt:](NSNumber, "numberWithInt:", 10),
           CFSTR("px"),
           +[NSNumber numberWithInt:](NSNumber, "numberWithInt:", 11),
           CFSTR("pc"),
           +[NSNumber numberWithInt:](NSNumber, "numberWithInt:", 11),
           CFSTR("pi"),
           +[NSNumber numberWithInt:](NSNumber, "numberWithInt:", 12),
           CFSTR("emu"),
           +[NSNumber numberWithInt:](NSNumber, "numberWithInt:", 13),
           CFSTR("%"),
           0);
    qword_543340 = (uint64_t)v2;
  }
  return objc_msgSend(objc_msgSend(v2, "objectForKey:", -[NSString lowercaseString](a1, "lowercaseString")), "intValue");
}

const __CFString *TCXmlStringForBool(int a1)
{
  if (a1)
    return CFSTR("1");
  else
    return CFSTR("0");
}

NSString *TCXmlStringForInt(uint64_t a1)
{
  return +[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("%ld"), a1);
}

id TCXmlStringForEnum(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "stringForValue:", a1);
}

NSString *TCXmlStringForDouble(double a1)
{
  return +[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("%g"), *(_QWORD *)&a1);
}

void sub_1C6138(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t *sub_1C6CDC(uint64_t **a1, const xmlChar **a2, uint64_t a3, uint64_t **a4)
{
  uint64_t *v6;
  uint64_t *v7;
  uint64_t **v8;
  uint64_t v10;

  v6 = sub_1C6D60((uint64_t)a1, &v10, a2);
  v7 = (uint64_t *)*v6;
  if (!*v6)
  {
    v8 = (uint64_t **)v6;
    v7 = (uint64_t *)operator new(0x30uLL);
    v7[4] = **a4;
    v7[5] = 0;
    sub_3CA4C(a1, v10, v8, v7);
  }
  return v7;
}

uint64_t *sub_1C6D60(uint64_t a1, _QWORD *a2, const xmlChar **a3)
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t *v7;

  v5 = (uint64_t *)(a1 + 8);
  v4 = *(uint64_t **)(a1 + 8);
  if (v4)
  {
    do
    {
      while (1)
      {
        v7 = v4;
        if ((xmlStrcmp(*a3, (const xmlChar *)v4[4]) & 0x80000000) == 0)
          break;
        v4 = (uint64_t *)*v7;
        v5 = v7;
        if (!*v7)
          goto LABEL_9;
      }
      if ((xmlStrcmp((const xmlChar *)v7[4], *a3) & 0x80000000) == 0)
        break;
      v5 = v7 + 1;
      v4 = (uint64_t *)v7[1];
    }
    while (v4);
  }
  else
  {
    v7 = (uint64_t *)(a1 + 8);
  }
LABEL_9:
  *a2 = v7;
  return v5;
}

id PFXCommonApplePubCssPropertyNameWithCssPropertyName(const char *a1)
{
  return objc_msgSend(objc_alloc((Class)NSString), "initWithFormat:", CFSTR("-ibooks-%s"), a1);
}

id PFXCommonApplePubAttributeNameWithAttributeName(const char *a1)
{
  return objc_msgSend(objc_alloc((Class)NSString), "initWithFormat:", CFSTR("ibooks:%s"), a1);
}

void TCTaggedMessageStructure::TCTaggedMessageStructure(TCTaggedMessageStructure *this, NSString *a2)
{
  int v2;

  v2 = dword_543350++;
  this->var0 = v2;
  this->var1 = a2;
}

{
  int v2;

  v2 = dword_543350++;
  this->var0 = v2;
  this->var1 = a2;
}

void TCTaggedMessageStructure::~TCTaggedMessageStructure(TCTaggedMessageStructure *this)
{

}

{

}

TCMessageEntry *sub_1C7524(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v10;
  id v11;
  id v12;
  uint64_t v13;
  unsigned int *v14;

  if (!a1)
    objc_msgSend(+[TSUAssertionHandler currentHandler](TSUAssertionHandler, "currentHandler"), "handleFailureInFunction:file:lineNumber:description:", +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "TCMessageEntry *createEntryForException(NSException *, ...)"), +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Alder/compatibility/Publication/Common/Utilities/TCMessageContext.mm"), 527, CFSTR("All exceptions passed to TCMessageContext should be non-nil."));
  v10 = objc_opt_class(TCMessageException);
  if ((objc_opt_isKindOfClass(a1, v10) & 1) != 0)
  {
    v11 = objc_msgSend(a1, "getEntry");
    v12 = v11;
  }
  else
  {
    v13 = TCUnknownProblemMessage;
    if (objc_msgSend(objc_msgSend(a1, "name"), "isEqualToString:", NSMallocException))
      v14 = (unsigned int *)TCOutOfMemoryMessage;
    else
      v14 = (unsigned int *)v13;
    return -[TCMessageEntry initWithTag:affectedObject:text:parameters:]([TCMessageEntry alloc], "initWithTag:affectedObject:text:parameters:", *v14, 0, *((_QWORD *)v14 + 1), &a9);
  }
  return (TCMessageEntry *)v11;
}

void sub_1C7AA4(_QWORD *a1)
{
  void *v2;
  TCMessageEntry *v3;

  v2 = *(void **)(a1[4] + 40);
  if (v2)
    objc_msgSend(v2, "addWarning:", +[TSKWarning warningWithMessage:](TSKWarning, "warningWithMessage:", *(_QWORD *)(a1[6] + 8)));
  v3 = -[TCMessageEntry initWithTag:affectedObject:text:parameters:]([TCMessageEntry alloc], "initWithTag:affectedObject:text:parameters:", *(unsigned int *)a1[6], a1[5], *(_QWORD *)(a1[6] + 8), a1[7]);
  objc_msgSend(*(id *)(a1[4] + 8), "addMessageEntry:", v3);

}

uint64_t sub_1C7B88(_QWORD *a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1[4] + 40);
  if (result)
  {
    result = objc_opt_respondsToSelector(result, "addIncompatibleMovieInfo:withCompatibilityLevel:");
    if ((result & 1) != 0)
      return (uint64_t)objc_msgSend(*(id *)(a1[4] + 40), "addIncompatibleMovieInfo:withCompatibilityLevel:", a1[5], a1[6]);
  }
  return result;
}

uint64_t TCVerifyInputMeetsCondition(uint64_t result)
{
  if ((result & 1) == 0)
    return (uint64_t)+[TCMessageException raise:](TCMessageException, "raise:", TCInvalidFileFormatMessage);
  return result;
}

void sub_1C8750(uint64_t a1, uint64_t a2)
{
  _Block_object_assign((void *)(a1 + 40), *(const void **)(a2 + 40), 131);
}

void sub_1C8760(uint64_t a1)
{
  _Block_object_dispose(*(const void **)(a1 + 40), 131);
}

uint64_t sub_1C876C(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;

  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40) = objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 24), "lastObject");
  v2 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40);
  result = +[NSNull null](NSNull, "null");
  v4 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  if (v2 == result)
  {
    *(_QWORD *)(v4 + 40) = 0;
  }
  else
  {
    result = objc_opt_respondsToSelector(*(_QWORD *)(v4 + 40), "identifier");
    if ((result & 1) == 0)
    {
      v5 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40);
      v6 = objc_opt_class(TCMessagePlaceholderInfo);
      result = objc_opt_isKindOfClass(v5, v6);
      if ((result & 1) != 0)
      {
        v7 = *(void **)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40);
        objc_msgSend(v7, "setInUse:", 1);
        result = (uint64_t)objc_msgSend(v7, "key");
        *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40) = result;
      }
    }
  }
  return result;
}

id sub_1C8890(uint64_t a1)
{
  return objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 16), "addMessageEntry:", *(_QWORD *)(a1 + 40));
}

id sub_1C88F4(uint64_t a1)
{
  return objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 8), "addMessageEntry:", *(_QWORD *)(a1 + 40));
}

id sub_1C8958(uint64_t a1)
{
  NSNull *v2;

  v2 = *(NSNull **)(a1 + 32);
  if (!v2)
    v2 = +[NSNull null](NSNull, "null");
  return objc_msgSend(*(id *)(*(_QWORD *)(a1 + 40) + 24), "addObject:", v2);
}

id sub_1C89EC(uint64_t a1)
{
  id result;

  result = objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 24), "count");
  if (result)
  {
    if ((objc_opt_respondsToSelector(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 24), "lastObject"), "identifier") & 1) == 0)
      +[NSNull null](NSNull, "null");
    return objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 24), "removeLastObject");
  }
  return result;
}

id sub_1C8AF8(uint64_t a1)
{
  TCMessagePlaceholderInfo *v2;
  id result;

  v2 = objc_alloc_init(TCMessagePlaceholderInfo);
  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 24), "addObject:", v2);

  result = -[TCMessagePlaceholderInfo key](v2, "key");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40) = result;
  return result;
}

id sub_1C8BA4(uint64_t a1)
{
  id result;
  id v3;

  result = objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 24), "count");
  if (result)
  {
    v3 = objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 24), "lastObject");
    if (objc_msgSend(v3, "isInUse"))
      objc_msgSend(*(id *)(a1 + 32), "setObject:forPlaceholderKey:", *(_QWORD *)(a1 + 40), objc_msgSend(v3, "key"));
    return objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 24), "removeLastObject");
  }
  return result;
}

id sub_1C8C80(uint64_t a1)
{
  NSNull *v2;
  __CFString *v3;

  v2 = +[NSNull null](NSNull, "null");
  v3 = *(__CFString **)(a1 + 32);
  if (!v3)
    goto LABEL_4;
  if (v3 != kTCMessageContext_NullObjectThatMakesWarningUnremovable)
  {
    v2 = (NSNull *)objc_msgSend(*(id *)(a1 + 32), "identifier");
LABEL_4:
    v3 = (__CFString *)v2;
  }
  return objc_msgSend(*(id *)(*(_QWORD *)(a1 + 40) + 32), "setObject:forKey:", v3, *(_QWORD *)(a1 + 48));
}

id sub_1C8D2C(uint64_t a1)
{
  id result;
  id v3;
  id v4;
  id v5;
  id v6;
  char *v7;
  char v8;
  char *v9;
  __CFString *v10;
  __CFString *v11;
  __CFString *v12;
  id v13;

  result = objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 32), "count");
  if (result)
  {
    v13 = objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 8), "copy");
    v3 = objc_msgSend(v13, "objectEnumerator");
    v4 = objc_msgSend(v3, "nextObject");
    if (!v4)
      goto LABEL_17;
    v5 = v4;
    while (1)
    {
      v6 = objc_msgSend(v5, "affectedObjects");
      v7 = (char *)objc_msgSend(v6, "count");
      if (!v7)
        goto LABEL_16;
      v8 = 0;
      v9 = v7 - 1;
      do
      {
        v10 = (__CFString *)objc_msgSend(v6, "objectAtIndex:", v9);
        if (v10 == kTCMessageContext_NullObjectThatMakesWarningUnremovable)
          goto LABEL_11;
        v11 = (__CFString *)objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 32), "objectForKey:", v10);
        if (!v11)
          goto LABEL_13;
        v12 = v11;
        if (v11 != (__CFString *)+[NSNull null](NSNull, "null"))
        {
          if (v12 != kTCMessageContext_NullObjectThatMakesWarningUnremovable)
          {
            objc_msgSend(v6, "replaceObjectAtIndex:withObject:", v9, v12);
            goto LABEL_13;
          }
LABEL_11:
          objc_msgSend(v6, "removeObjectAtIndex:", v9);
          v8 = 1;
          goto LABEL_13;
        }
        objc_msgSend(v6, "removeObjectAtIndex:", v9);
LABEL_13:
        --v9;
      }
      while (v9 != (char *)-1);
      if (!((objc_msgSend(v6, "count") != 0) | v8 & 1))
        objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 8), "removeObject:", v5);
LABEL_16:
      v5 = objc_msgSend(v3, "nextObject");
      if (!v5)
      {
LABEL_17:

        return objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 32), "removeAllObjects");
      }
    }
  }
  return result;
}

void sub_1C91F0()
{
  operator delete();
}

_QWORD *sub_1C9214(_QWORD *a1, void *a2)
{
  _QWORD *result;
  uint64_t *v5;
  uint64_t v6;

  result = a2;
  if (*a1)
  {
    v5 = (uint64_t *)a1[1];
    if (!v5)
      operator new();
    result = operator new(0x18uLL);
    result[2] = a2;
    v6 = *v5;
    *result = *v5;
    result[1] = v5;
    *(_QWORD *)(v6 + 8) = result;
    *v5 = (uint64_t)result;
    ++v5[2];
  }
  else
  {
    *a1 = a2;
  }
  return result;
}

void sub_1C93F0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1C9520(uint64_t a1)
{
  uint64_t v2;

  *(_QWORD *)a1 = 0;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2)
  {
    while (1)
    {
      v2 = *(_QWORD *)(v2 + 8);
      if (v2 == *(_QWORD *)(a1 + 8))
        break;

    }
    if (v2)
    {
      sub_1C959C((_QWORD *)v2);
      operator delete();
    }
  }
  return a1;
}

_QWORD *sub_1C959C(_QWORD *result)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  if (result[2])
  {
    v1 = result;
    result = (_QWORD *)result[1];
    v2 = *v1;
    v3 = *result;
    *(_QWORD *)(v3 + 8) = *(_QWORD *)(*v1 + 8);
    **(_QWORD **)(v2 + 8) = v3;
    v1[2] = 0;
    if (result != v1)
    {
      do
      {
        v4 = (_QWORD *)result[1];
        operator delete(result);
        result = v4;
      }
      while (v4 != v1);
    }
  }
  return result;
}

uint64_t sub_1C95FC(uint64_t a1, const xmlChar **a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  int v6;
  uint64_t *v7;

  v2 = a1 + 8;
  v3 = *(_QWORD *)(a1 + 8);
  if (!v3)
    return v2;
  v5 = a1 + 8;
  do
  {
    v6 = xmlStrcmp(*(const xmlChar **)(v3 + 32), *a2);
    v7 = (uint64_t *)(v3 + 8);
    if (v6 >= 0)
    {
      v7 = (uint64_t *)v3;
      v5 = v3;
    }
    v3 = *v7;
  }
  while (*v7);
  if (v5 == v2 || xmlStrcmp(*a2, *(const xmlChar **)(v5 + 32)) < 0)
    return v2;
  return v5;
}

CFStringRef sub_1C96E0(uint64_t a1)
{
  return CFStringCreateWithFormat(0, 0, CFSTR("(xmlChar*)%s"), a1);
}

uint64_t sub_1C9710(const xmlChar *a1, const xmlChar *a2)
{
  return xmlStrEqual(a1, a2);
}

uint64_t sub_1C9728(const xmlChar *a1)
{
  const xmlChar *v1;
  unsigned int v2;
  unsigned int v3;
  int v4;
  int v5;
  uint64_t v6;
  uint64_t v7;

  v1 = a1;
  v2 = xmlStrlen(a1);
  if (v2 >= 0x11)
  {
    v6 = 0;
    v4 = v2;
    do
      v4 = 257 * v4 + v1[v6++];
    while ((_DWORD)v6 != 8);
    v7 = -8;
    do
      v4 = 257 * v4 + v1[v2 + v7++];
    while ((_DWORD)v7);
  }
  else if (v2)
  {
    v3 = v2;
    v4 = v2;
    do
    {
      v5 = *v1++;
      v4 = 257 * v4 + v5;
      --v3;
    }
    while (v3);
  }
  else
  {
    v4 = 0;
  }
  return ((v4 << v2) + v4);
}

void sub_1C97C0(uint64_t a1, void *a2)
{
  xmlFree(a2);
}

void sub_1C97D4(int a1, void *a2)
{
  free(a2);
}

void sub_1C97DC()
{
  TCXmlStringKeyCallBacks = kCFTypeDictionaryKeyCallBacks.version;
  *(_QWORD *)algn_543AF8 = 0;
  qword_543B00 = 0;
  unk_543B08 = sub_1C96E0;
  qword_543B10 = (uint64_t)sub_1C9710;
  unk_543B18 = sub_1C9728;
  TCOwnedXmlStringKeyCallBacks = kCFTypeDictionaryKeyCallBacks.version;
  *(_QWORD *)algn_543B28 = 0;
  qword_543B30 = (uint64_t)sub_1C97C0;
  unk_543B38 = sub_1C96E0;
  qword_543B40 = (uint64_t)sub_1C9710;
  unk_543B48 = sub_1C9728;
  TCCStringKeyCallBacks = kCFTypeDictionaryKeyCallBacks.version;
  *(_QWORD *)algn_543B58 = 0;
  qword_543B60 = 0;
  unk_543B68 = sub_1C96E0;
  qword_543B70 = (uint64_t)sub_1C9710;
  unk_543B78 = sub_1C9728;
  TCOwnedXmlStringValueCallBacks = kCFTypeDictionaryValueCallBacks.version;
  *(_QWORD *)algn_543B88 = 0;
  qword_543B90 = (uint64_t)sub_1C97C0;
  unk_543B98 = sub_1C96E0;
  qword_543BA0 = (uint64_t)sub_1C9710;
  TCOwnedNonPooledXmlStringKeyCallBacks = kCFTypeDictionaryKeyCallBacks.version;
  unk_543BB0 = 0;
  qword_543BB8 = (uint64_t)sub_1C97D4;
  unk_543BC0 = sub_1C96E0;
  qword_543BC8 = (uint64_t)sub_1C9710;
  unk_543BD0 = sub_1C9728;
  TCOwnedNonPooledXmlStringValueCallBacks = kCFTypeDictionaryValueCallBacks.version;
  unk_543BE0 = 0;
  qword_543BE8 = (uint64_t)sub_1C97D4;
  unk_543BF0 = sub_1C96E0;
  qword_543BF8 = (uint64_t)sub_1C9710;
}

CGFloat createFlippingAboutPoint@<D0>(int a1@<W0>, int a2@<W1>, uint64_t a3@<X8>, CGFloat a4@<D0>, CGFloat a5@<D1>)
{
  __int128 v10;
  double v11;
  double v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  CGFloat result;
  CGAffineTransform v17;
  CGAffineTransform v18;
  CGAffineTransform v19;

  *(_OWORD *)(a3 + 16) = 0u;
  *(_OWORD *)(a3 + 32) = 0u;
  *(_OWORD *)a3 = 0u;
  CGAffineTransformMakeTranslation((CGAffineTransform *)a3, a4, a5);
  v10 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)&v18.a = *(_OWORD *)a3;
  *(_OWORD *)&v18.c = v10;
  *(_OWORD *)&v18.tx = *(_OWORD *)(a3 + 32);
  v11 = 1.0;
  if (a1)
    v12 = -1.0;
  else
    v12 = 1.0;
  if (a2)
    v11 = -1.0;
  CGAffineTransformScale(&v19, &v18, v12, v11);
  v13 = *(_OWORD *)&v19.c;
  *(_OWORD *)a3 = *(_OWORD *)&v19.a;
  *(_OWORD *)(a3 + 16) = v13;
  *(_OWORD *)(a3 + 32) = *(_OWORD *)&v19.tx;
  v14 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)&v17.a = *(_OWORD *)a3;
  *(_OWORD *)&v17.c = v14;
  *(_OWORD *)&v17.tx = *(_OWORD *)(a3 + 32);
  CGAffineTransformTranslate(&v19, &v17, -a4, -a5);
  v15 = *(_OWORD *)&v19.c;
  *(_OWORD *)a3 = *(_OWORD *)&v19.a;
  *(_OWORD *)(a3 + 16) = v15;
  result = v19.tx;
  *(_OWORD *)(a3 + 32) = *(_OWORD *)&v19.tx;
  return result;
}

void getScaleFactorBetweenLengths(double a1, float a2)
{
  if (*(float *)&a1 == 0.0)
  {
    LODWORD(a1) = 1.0;
    if (a2 != 0.0)
      objc_msgSend(+[TSUAssertionHandler currentHandler](TSUAssertionHandler, "currentHandler", a1), "handleFailureInFunction:file:lineNumber:description:", +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "float getScaleFactorBetweenLengths(float, float)"), +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Alder/compatibility/Publication/Common/Utilities/TCAffineTransformUtils.mm"), 36, CFSTR("Trying to map a zero-length segment onto a nonzero-length one"));
  }
}

double getScaleFactorsBetweenRects(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5, CGFloat a6, CGFloat a7, CGFloat a8)
{
  CGFloat v11;
  float Width;
  double v16;
  float v17;
  float v18;
  double v19;
  double Height;
  float v21;
  CGRect v25;
  CGRect v26;
  CGRect v27;

  v11 = a5;
  Width = CGRectGetWidth(*(CGRect *)&a1);
  v25.origin.x = v11;
  v25.origin.y = a6;
  v25.size.width = a7;
  v25.size.height = a8;
  v16 = CGRectGetWidth(v25);
  v17 = v16;
  *(float *)&v16 = Width;
  getScaleFactorBetweenLengths(v16, v17);
  v19 = v18;
  v26.origin.x = a1;
  v26.origin.y = a2;
  v26.size.width = a3;
  v26.size.height = a4;
  *(float *)&v11 = CGRectGetHeight(v26);
  v27.origin.x = a5;
  v27.origin.y = a6;
  v27.size.width = a7;
  v27.size.height = a8;
  Height = CGRectGetHeight(v27);
  v21 = Height;
  LODWORD(Height) = LODWORD(v11);
  getScaleFactorBetweenLengths(Height, v21);
  return v19;
}

CGFloat mapSrcRectOntoDstRect@<D0>(uint64_t a1@<X8>, CGFloat a2@<D0>, CGFloat a3@<D1>, CGFloat a4@<D2>, CGFloat a5@<D3>, CGFloat a6@<D4>, CGFloat a7@<D5>, CGFloat a8@<D6>, CGFloat a9@<D7>)
{
  double ScaleFactorsBetweenRects;
  double v18;
  CGFloat MidX;
  CGFloat MidY;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  CGFloat v24;
  CGFloat v25;
  CGFloat v26;
  CGFloat v27;
  CGFloat v28;
  __int128 v29;
  CGFloat result;
  CGFloat v31;
  CGFloat v32;
  CGAffineTransform v34;
  CGAffineTransform v35;
  CGAffineTransform v36;
  CGRect v37;
  CGRect v38;
  CGRect v39;

  ScaleFactorsBetweenRects = getScaleFactorsBetweenRects(a2, a3, a4, a5, a6, a7, a8, a9);
  v31 = v18;
  v32 = ScaleFactorsBetweenRects;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  v37.origin.x = a6;
  v37.origin.y = a7;
  v37.size.width = a8;
  v37.size.height = a9;
  MidX = CGRectGetMidX(v37);
  v38.origin.x = a6;
  v38.origin.y = a7;
  v38.size.width = a8;
  v38.size.height = a9;
  MidY = CGRectGetMidY(v38);
  CGAffineTransformMakeTranslation((CGAffineTransform *)a1, MidX, MidY);
  v21 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)&v35.a = *(_OWORD *)a1;
  *(_OWORD *)&v35.c = v21;
  *(_OWORD *)&v35.tx = *(_OWORD *)(a1 + 32);
  CGAffineTransformScale(&v36, &v35, v32, v31);
  v22 = *(_OWORD *)&v36.c;
  *(_OWORD *)a1 = *(_OWORD *)&v36.a;
  *(_OWORD *)(a1 + 16) = v22;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)&v36.tx;
  v23 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)&v34.a = *(_OWORD *)a1;
  *(_OWORD *)&v34.c = v23;
  *(_OWORD *)&v34.tx = *(_OWORD *)(a1 + 32);
  v24 = a2;
  *(CGFloat *)&v23 = a3;
  v25 = a4;
  v26 = a5;
  v27 = -CGRectGetMidX(*(CGRect *)((char *)&v23 - 8));
  v39.origin.x = a2;
  v39.origin.y = a3;
  v39.size.width = a4;
  v39.size.height = a5;
  v28 = CGRectGetMidY(v39);
  CGAffineTransformTranslate(&v36, &v34, v27, -v28);
  v29 = *(_OWORD *)&v36.c;
  *(_OWORD *)a1 = *(_OWORD *)&v36.a;
  *(_OWORD *)(a1 + 16) = v29;
  result = v36.tx;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)&v36.tx;
  return result;
}

CGFloat rotateRectAboutCenterDeg@<D0>(uint64_t a1@<X8>, CGFloat a2@<D0>, CGFloat a3@<D1>, CGFloat a4@<D2>, CGFloat a5@<D3>, float a6@<S4>)
{
  CGFloat MidX;
  CGFloat MidY;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  CGFloat v17;
  CGFloat v18;
  CGFloat v19;
  CGFloat v20;
  CGFloat v21;
  __int128 v22;
  CGFloat result;
  CGAffineTransform v24;
  CGAffineTransform v25;
  CGAffineTransform v26;
  CGRect v27;
  CGRect v28;

  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  MidX = CGRectGetMidX(*(CGRect *)&a2);
  v27.origin.x = a2;
  v27.origin.y = a3;
  v27.size.width = a4;
  v27.size.height = a5;
  MidY = CGRectGetMidY(v27);
  CGAffineTransformMakeTranslation((CGAffineTransform *)a1, MidX, MidY);
  v14 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)&v25.a = *(_OWORD *)a1;
  *(_OWORD *)&v25.c = v14;
  *(_OWORD *)&v25.tx = *(_OWORD *)(a1 + 32);
  CGAffineTransformRotate(&v26, &v25, a6 * 3.14159265 / 180.0);
  v15 = *(_OWORD *)&v26.c;
  *(_OWORD *)a1 = *(_OWORD *)&v26.a;
  *(_OWORD *)(a1 + 16) = v15;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)&v26.tx;
  v16 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)&v24.a = *(_OWORD *)a1;
  *(_OWORD *)&v24.c = v16;
  *(_OWORD *)&v24.tx = *(_OWORD *)(a1 + 32);
  v17 = a2;
  *(CGFloat *)&v16 = a3;
  v18 = a4;
  v19 = a5;
  v20 = -CGRectGetMidX(*(CGRect *)((char *)&v16 - 8));
  v28.origin.x = a2;
  v28.origin.y = a3;
  v28.size.width = a4;
  v28.size.height = a5;
  v21 = CGRectGetMidY(v28);
  CGAffineTransformTranslate(&v26, &v24, v20, -v21);
  v22 = *(_OWORD *)&v26.c;
  *(_OWORD *)a1 = *(_OWORD *)&v26.a;
  *(_OWORD *)(a1 + 16) = v22;
  result = v26.tx;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)&v26.tx;
  return result;
}

double transformRect(double *a1, double a2, double a3)
{
  double v6;

  if (a1[1] != 0.0)
    objc_msgSend(+[TSUAssertionHandler currentHandler](TSUAssertionHandler, "currentHandler"), "handleFailureInFunction:file:lineNumber:description:", +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "CGRect transformRect(CGRect, CGAffineTransform)"), +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Alder/compatibility/Publication/Common/Utilities/TCAffineTransformUtils.mm"), 73, &stru_43D7D8);
  v6 = a1[2];
  if (v6 != 0.0)
  {
    objc_msgSend(+[TSUAssertionHandler currentHandler](TSUAssertionHandler, "currentHandler"), "handleFailureInFunction:file:lineNumber:description:", +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "CGRect transformRect(CGRect, CGAffineTransform)"), +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Alder/compatibility/Publication/Common/Utilities/TCAffineTransformUtils.mm"), 74, &stru_43D7D8);
    v6 = a1[2];
  }
  return a1[4] + a3 * v6 + *a1 * a2;
}

double getTransformedSizeOf(double a1, double a2, float a3)
{
  float64x2_t v3;
  float64x2_t v4;
  float64x2_t v5;
  float64x2_t v6;
  float64x2_t v7;
  float64x2_t v8;
  double result;
  CGAffineTransform v12;

  memset(&v12, 0, sizeof(v12));
  CGAffineTransformMakeRotation(&v12, a3 * 3.14159265 / -180.0);
  v3 = vmulq_f64(*(float64x2_t *)&v12.c, (float64x2_t)0);
  v4 = vaddq_f64(*(float64x2_t *)&v12.tx, vmlaq_f64(v3, (float64x2_t)0, *(float64x2_t *)&v12.a));
  v5 = vaddq_f64(*(float64x2_t *)&v12.tx, vmlaq_n_f64(v3, *(float64x2_t *)&v12.a, a1));
  v6 = vmulq_n_f64(*(float64x2_t *)&v12.c, a2);
  v7 = vaddq_f64(*(float64x2_t *)&v12.tx, vmlaq_n_f64(v6, *(float64x2_t *)&v12.a, a1));
  v8 = vaddq_f64(*(float64x2_t *)&v12.tx, vmlaq_f64(v6, (float64x2_t)0, *(float64x2_t *)&v12.a));
  *(_QWORD *)&result = *(_OWORD *)&vcvtq_f64_f32(vsub_f32(vcvt_f32_f64(vmaxnmq_f64(vcvtq_f64_f32(vcvt_f32_f64(vmaxnmq_f64(vcvtq_f64_f32(vcvt_f32_f64(vmaxnmq_f64(v4, v5))), v8))), v7)), vcvt_f32_f64(vminnmq_f64(vcvtq_f64_f32(vcvt_f32_f64(vminnmq_f64(vcvtq_f64_f32(vcvt_f32_f64(vminnmq_f64(v4, v5))), v8))), v7))));
  return result;
}

CGAffineTransform *getRotatedCorners(uint64_t a1, CGFloat a2, CGFloat a3, double a4, double a5, float a6)
{
  double TransformedSizeOf;
  double v13;
  double v14;
  CGAffineTransform *result;
  uint64_t v16;
  double d;
  uint64_t v18;
  __int128 v19;
  double c;
  double v21;
  double v22;
  double v23;
  double v24;
  float64x2_t v25;
  float64x2_t v26;
  float64x2_t v27;
  float64x2_t v28;
  float64x2_t v29;
  float64x2_t v30;
  float64x2_t v31;
  float64x2_t v32;
  float64x2_t v33;
  float64x2_t v34;
  float64x2_t v35;
  float64x2_t v36;
  float64x2_t v37;
  float64x2_t v38;
  float64x2_t v39;
  float64x2_t v40;
  double *v41;
  float64x2_t v42;
  float64x2_t v43;
  float64x2_t v44;
  CGAffineTransform v45;
  CGAffineTransform v46;
  CGAffineTransform v47;
  CGAffineTransform v48;
  float64x2x2_t v49;
  float64x2x2_t v50;

  TransformedSizeOf = getTransformedSizeOf(a4, a5, a6);
  v14 = v13;
  memset(&v48, 0, sizeof(v48));
  CGAffineTransformMakeTranslation(&v48, a4 * -0.5, a5 * -0.5);
  memset(&v47, 0, sizeof(v47));
  CGAffineTransformMakeRotation(&v47, a6 * 3.14159265 / -180.0);
  memset(&v46, 0, sizeof(v46));
  CGAffineTransformMakeTranslation(&v46, TransformedSizeOf * 0.5, v14 * 0.5);
  memset(&v45, 0, sizeof(v45));
  result = CGAffineTransformMakeTranslation(&v45, a2, a3);
  v16 = 0;
  d = v48.d;
  v18 = *(_QWORD *)&v48.b;
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0;
  *(double *)(a1 + 16) = a4;
  *(_QWORD *)(a1 + 24) = 0;
  *(double *)(a1 + 32) = a4;
  *(double *)(a1 + 40) = a5;
  *(_QWORD *)(a1 + 48) = 0;
  *(double *)(a1 + 56) = a5;
  v19 = *(_OWORD *)&v45.c;
  c = v46.c;
  v21 = v46.d;
  v22 = v47.c;
  v23 = v47.d;
  v24 = v48.c;
  v25 = (float64x2_t)vdupq_lane_s64(*(uint64_t *)&v48.a, 0);
  v26 = (float64x2_t)vdupq_lane_s64(*(uint64_t *)&v48.tx, 0);
  v27 = (float64x2_t)vdupq_lane_s64(v18, 0);
  v28 = (float64x2_t)vdupq_lane_s64(*(uint64_t *)&v48.ty, 0);
  v29 = (float64x2_t)vdupq_lane_s64(*(uint64_t *)&v47.a, 0);
  v30 = (float64x2_t)vdupq_lane_s64(*(uint64_t *)&v47.tx, 0);
  v31 = (float64x2_t)vdupq_lane_s64(*(uint64_t *)&v47.b, 0);
  v32 = (float64x2_t)vdupq_lane_s64(*(uint64_t *)&v47.ty, 0);
  v33 = (float64x2_t)vdupq_lane_s64(*(uint64_t *)&v46.a, 0);
  v34 = (float64x2_t)vdupq_lane_s64(*(uint64_t *)&v46.tx, 0);
  v35 = (float64x2_t)vdupq_lane_s64(*(uint64_t *)&v46.b, 0);
  v36 = (float64x2_t)vdupq_lane_s64(*(uint64_t *)&v46.ty, 0);
  v37 = (float64x2_t)vdupq_lane_s64(*(uint64_t *)&v45.a, 0);
  v38 = (float64x2_t)vdupq_lane_s64(*(uint64_t *)&v45.tx, 0);
  v39 = (float64x2_t)vdupq_lane_s64(*(uint64_t *)&v45.b, 0);
  v40 = (float64x2_t)vdupq_lane_s64(*(uint64_t *)&v45.ty, 0);
  do
  {
    v41 = (double *)(a1 + v16);
    v49 = vld2q_f64(v41);
    v42 = vmlaq_f64(vmulq_n_f64(v49.val[1], v24), v49.val[0], v25);
    v49.val[0] = vaddq_f64(v28, vmlaq_f64(vmulq_n_f64(v49.val[1], d), v49.val[0], v27));
    v49.val[1] = vaddq_f64(v26, v42);
    v43 = vmlaq_f64(vmulq_n_f64(v49.val[0], v22), v49.val[1], v29);
    v49.val[0] = vaddq_f64(v32, vmlaq_f64(vmulq_n_f64(v49.val[0], v23), v49.val[1], v31));
    v49.val[1] = vaddq_f64(v30, v43);
    v44 = vmlaq_f64(vmulq_n_f64(v49.val[0], c), v49.val[1], v33);
    v49.val[0] = vaddq_f64(v36, vmlaq_f64(vmulq_n_f64(v49.val[0], v21), v49.val[1], v35));
    v49.val[1] = vaddq_f64(v34, v44);
    v50.val[0] = vaddq_f64(v38, vmlaq_f64(vmulq_n_f64(v49.val[0], *(double *)&v19), v49.val[1], v37));
    v50.val[1] = vaddq_f64(v40, vmlaq_f64(vmulq_n_f64(v49.val[0], *((double *)&v19 + 1)), v49.val[1], v39));
    vst2q_f64(v41, v50);
    v16 += 32;
  }
  while (v16 != 64);
  return result;
}

uint64_t PFXHtmlStyleDisplayValue(PFSPropertySet *a1)
{
  id v1;
  void *v2;
  id v3;

  v1 = -[PFSPropertySet valueForProperty:](a1, "valueForProperty:", "display");
  if (v1
    && (v2 = v1, objc_msgSend(v1, "count"))
    && (v3 = objc_msgSend(v2, "lastObject"), objc_msgSend(v3, "type") == &stru_108))
  {
    return objc_msgSend(objc_msgSend(v3, "value"), "isEqualToString:", CFSTR("none")) ^ 1;
  }
  else
  {
    return 1;
  }
}

_QWORD *sub_1CAE9C(uint64_t **a1, const xmlChar **a2, uint64_t a3, _QWORD **a4)
{
  uint64_t *v6;
  _QWORD *v7;
  uint64_t **v8;
  uint64_t v10;

  v6 = sub_1C6D60((uint64_t)a1, &v10, a2);
  v7 = (_QWORD *)*v6;
  if (!*v6)
  {
    v8 = (uint64_t **)v6;
    v7 = operator new(0x30uLL);
    v7[4] = **a4;
    *((_BYTE *)v7 + 40) = 0;
    sub_3CA4C(a1, v10, v8, v7);
  }
  return v7;
}

void sub_1CB2D0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

PFXString *PFXStringWithXmlString(const xmlChar *a1, uint64_t *a2)
{
  uint64_t v3;
  PFXString *v4;
  PFXString *v5;
  uint64_t **v6;
  const xmlChar *v8;
  const xmlChar **v9;

  v8 = a1;
  if (!*a2)
    operator new();
  v3 = sub_1C95FC(*a2, &v8);
  if (*a2 + 8 != v3)
    return *(PFXString **)(v3 + 40);
  v5 = [PFXString alloc];
  v4 = -[PFXString initWithXmlString:](v5, "initWithXmlString:", v8);
  -[PFXString nsString](v4, "nsString");
  v6 = (uint64_t **)*a2;
  v9 = &v8;
  sub_1C6CDC(v6, &v8, (uint64_t)&std::piecewise_construct, (uint64_t **)&v9)[5] = (uint64_t)v4;
  return v4;
}

PFXString *PFXAttributeNameWithXmlAttributeName(const unsigned __int8 *a1)
{
  return PFXStringWithXmlString(a1, &qword_543398);
}

void sub_1CD158(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1CD1F0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1CD288(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t xmlCharToI(unsigned __int8 *a1, uint64_t a2)
{
  unsigned int v2;
  unsigned __int8 *v4;
  unsigned int v5;

  v2 = *a1;
  if (v2 >= (unsigned __int16)PFXCh0 && (unsigned __int16)PFXCh9 >= v2)
  {
    a2 = 0;
    v4 = a1 + 1;
    do
    {
      a2 = 10 * a2 - (unsigned __int16)PFXCh0 + (int)v2;
      v5 = *v4++;
      v2 = v5;
    }
    while (v5 >= (unsigned __int16)PFXCh0 && (unsigned __int16)PFXCh9 >= v2);
  }
  return a2;
}

uint64_t THImportLog()
{
  if (qword_5433F0 != -1)
    dispatch_once(&qword_5433F0, &stru_42BF38);
  return qword_5433E8;
}

void sub_1CDE24(id a1)
{
  qword_5433E8 = (uint64_t)os_log_create("com.apple.iBooks", "TCPublication.Import");
}

const xmlChar *PFXBezierPathWithSvgPath(const xmlChar *result)
{
  const xmlChar *v1;
  id v2;
  int v3;
  int v4;
  int v5;
  __uint32_t v6;
  char *i;
  __darwin_ct_rune_t v8;
  int v10;
  char *v11;

  if (result)
  {
    v1 = result;
    if (xmlStrlen(result))
    {
      v2 = objc_alloc_init((Class)TSDBezierPath);
      v4 = *v1;
      LOBYTE(v3) = *v1;
      v11 = (char *)(v1 + 1);
      if (v4)
      {
        do
        {
          v5 = (char)v3;
          if ((v3 & 0x80) != 0)
            v6 = __maskrune((char)v3, 0x4000uLL);
          else
            v6 = _DefaultRuneLocale.__runetype[(char)v3] & 0x4000;
          while (!v6)
          {
            do
            {
              if (v5 < 76)
              {
                if (v5 == 67)
                {
                  sub_1CE074((const char **)&v11);
                  sub_1CE0C4(&v11);
                  sub_1CE074((const char **)&v11);
                  sub_1CE0C4(&v11);
                  objc_msgSend(v2, "curveToPoint:controlPoint1:controlPoint2:", sub_1CE074((const char **)&v11));
                }
              }
              else if (v5 > 76)
              {
                if (v5 == 122 || v5 == 90)
                {
                  objc_msgSend(v2, "closePath");
                  goto LABEL_29;
                }
                if (v5 == 77)
                {
                  objc_msgSend(v2, "moveToPoint:", sub_1CE074((const char **)&v11));
                  goto LABEL_29;
                }
              }
              else
              {
                objc_msgSend(v2, "lineToPoint:", sub_1CE074((const char **)&v11));
              }
              for (i = v11; ; i = ++v11)
              {
                v8 = *i;
                if (!(v8 < 0 ? __maskrune(v8, 0x4000uLL) : _DefaultRuneLocale.__runetype[v8] & 0x4000))
                  break;
              }
              v10 = *v11;
            }
            while (v10 == 44);
            if (!*v11)
              break;
            if ((char)v10 < 0)
              v6 = __maskrune((char)v10, 0x100uLL);
            else
              v6 = _DefaultRuneLocale.__runetype[(char)v10] & 0x100;
          }
LABEL_29:
          v3 = *v11++;
        }
        while (v3);
      }
      return (const xmlChar *)v2;
    }
    else
    {
      return 0;
    }
  }
  return result;
}

void sub_1CE020(_Unwind_Exception *exception_object, int a2)
{
  void *v2;

  if (a2 == 1)
  {
    objc_begin_catch(exception_object);

    objc_end_catch();
    JUMPOUT(0x1CDFF4);
  }
  _Unwind_Resume(exception_object);
}

double sub_1CE074(const char **a1)
{
  float v2;

  v2 = strtof(*a1, (char **)a1);
  sub_1CE0C4((char **)a1);
  strtof(*a1, (char **)a1);
  return v2;
}

uint64_t sub_1CE0C4(char **a1)
{
  char *i;
  __darwin_ct_rune_t v3;
  __uint32_t v4;
  char *v5;
  __darwin_ct_rune_t v6;
  uint64_t result;

  for (i = *a1; ; *a1 = i)
  {
    v3 = *i;
    v4 = v3 < 0 ? __maskrune(v3, 0x4000uLL) : _DefaultRuneLocale.__runetype[v3] & 0x4000;
    v5 = *a1;
    if (!v4)
      break;
    i = v5 + 1;
  }
  if (*v5 != 44)
    goto LABEL_9;
  while (1)
  {
    *a1 = ++v5;
LABEL_9:
    v6 = *v5;
    if (v6 < 0)
      break;
    result = _DefaultRuneLocale.__runetype[v6] & 0x4000;
    if (!(_DWORD)result)
      return result;
LABEL_11:
    v5 = *a1;
  }
  result = __maskrune(v6, 0x4000uLL);
  if ((_DWORD)result)
    goto LABEL_11;
  return result;
}

const xmlChar *PFXBezierPathWithCssPathValue(NSArray *a1)
{
  id v2;
  id v3;

  if ((char *)-[NSArray count](a1, "count") == (char *)&dword_0 + 1
    && (v2 = -[NSArray lastObject](a1, "lastObject"), objc_msgSend(v2, "type") == (char *)&stru_108.addr + 2)
    && (v3 = objc_msgSend(v2, "value"),
        (objc_msgSend(objc_msgSend(v3, "objectAtIndex:", 0), "isEqualToString:", CFSTR("svg-path(")) & 1) != 0))
  {
    return PFXBezierPathWithSvgPath((const xmlChar *)objc_msgSend(objc_msgSend(objc_msgSend(objc_msgSend(v3, "objectAtIndex:", 1), "objectAtIndex:", 0), "value"), "UTF8String"));
  }
  else
  {
    return 0;
  }
}

void sub_1CE528(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL TCFloatEqual(float a1, float a2)
{
  float v2;

  v2 = fabsf(a1) * 0.0000001;
  return vabds_f32(a1, a2) <= v2;
}

BOOL TCFloatEqualByEpsilon(float a1, float a2, float a3)
{
  return vabds_f32(a1, a2) <= a3;
}

BOOL TCDoubleEqual(double a1, double a2)
{
  return vabdd_f64(a1, a2) <= fabs(a1) * 0.0000001;
}

BOOL TCDoubleEqualByEpsilon(double a1, double a2, double a3)
{
  return vabdd_f64(a1, a2) <= a3;
}

id TCObjectEqual(objc_object *a1, objc_object *a2)
{
  id result;

  if (a1 == a2)
    return &dword_0 + 1;
  result = 0;
  if (a1)
  {
    if (a2)
      return -[objc_object isEqual:](a1, "isEqual:", a2);
  }
  return result;
}

uint64_t TCIntegerHash(int a1)
{
  return (-1640531535 * a1);
}

id TCDefaultAuthorName(void)
{
  if (qword_543408 != -1)
    dispatch_once(&qword_543408, &stru_42C048);
  return objc_msgSend((id)qword_543400, "localizedStringForKey:value:table:", CFSTR("Imported Author"), &stru_43D7D8, CFSTR("TCCompatibility"));
}

uint64_t TCBundle()
{
  if (qword_543408 != -1)
    dispatch_once(&qword_543408, &stru_42C048);
  return qword_543400;
}

void sub_1CEB28(id a1)
{
  qword_543400 = +[NSBundle bundleForClass:](NSBundle, "bundleForClass:", objc_opt_class(TCBundleLookupClass));
}

id TCRemoveFileSecurely(id result)
{
  id v1;
  uint64_t v2;

  if (result)
  {
    v1 = result;
    result = objc_msgSend(result, "length");
    if (result)
    {
      v2 = 0;
      return (id)-[NSFileManager removeItemAtPath:error:](+[NSFileManager defaultManager](NSFileManager, "defaultManager"), "removeItemAtPath:error:", v1, &v2);
    }
  }
  return result;
}

void PFSCssLexer::PFSCssLexer(PFSCssLexer *this, const char *a2, PFSStyleParserHandler *a3)
{
  uint64_t v4;

  v4 = yyFlexLexer::yyFlexLexer((uint64_t)this, 0, 0);
  *(_QWORD *)v4 = off_42C078;
  *(_DWORD *)(v4 + 28) = 1;
  *(_QWORD *)(v4 + 528) = a2;
  operator new();
}

void sub_1CED20(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  uint64_t v15;

  std::ios::~ios(v15);
  operator delete();
}

void PFSCssLexer::~PFSCssLexer(PFSCssLexer *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)this = off_42C078;
  v2 = *((_QWORD *)this + 68);
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  v3 = *((_QWORD *)this + 69);
  if (v3)
    (*(void (**)(uint64_t))(*(_QWORD *)v3 + 8))(v3);
  v4 = *((_QWORD *)this + 67);
  if (v4)
    (*(void (**)(uint64_t))(*(_QWORD *)v4 + 8))(v4);
  yyFlexLexer::~yyFlexLexer(this);
}

{
  PFSCssLexer::~PFSCssLexer(this);
  operator delete();
}

uint64_t PFSCssLexer::caller(PFSCssLexer *this)
{
  return *((_QWORD *)this + 70);
}

_QWORD *sub_1CEE44(_QWORD *a1, char *__s)
{
  size_t v4;
  size_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;

  v4 = strlen(__s);
  if (v4 >= 0x7FFFFFFFFFFFFFF8)
    sub_1CEEF4();
  v5 = v4;
  if (v4 >= 0x17)
  {
    v7 = (v4 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v4 | 7) != 0x17)
      v7 = v4 | 7;
    v8 = v7 + 1;
    v6 = operator new(v7 + 1);
    a1[1] = v5;
    a1[2] = v8 | 0x8000000000000000;
    *a1 = v6;
  }
  else
  {
    *((_BYTE *)a1 + 23) = v4;
    v6 = a1;
    if (!v4)
      goto LABEL_9;
  }
  memmove(v6, __s, v5);
LABEL_9:
  *((_BYTE *)v6 + v5) = 0;
  return a1;
}

void sub_1CEEF4()
{
  sub_36C44("basic_string");
}

uint64_t sub_1CEF08(uint64_t a1, const std::string *a2, int a3)
{
  uint64_t v6;

  v6 = std::streambuf::basic_streambuf();
  *(_OWORD *)(v6 + 64) = 0u;
  *(_OWORD *)(v6 + 80) = 0u;
  *(_DWORD *)(v6 + 96) = a3;
  std::string::operator=((std::string *)(v6 + 64), a2);
  sub_1CEF98(a1);
  return a1;
}

void sub_1CEF74(_Unwind_Exception *a1)
{
  uint64_t v1;
  void **v2;

  if (*(char *)(v1 + 87) < 0)
    operator delete(*v2);
  std::streambuf::~streambuf(v1);
  _Unwind_Resume(a1);
}

void sub_1CEF98(uint64_t a1)
{
  std::string *v2;
  char v3;
  std::string *v4;
  unint64_t v5;
  int v6;
  std::string::size_type v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;

  *(_QWORD *)(a1 + 88) = 0;
  v2 = (std::string *)(a1 + 64);
  v3 = *(_BYTE *)(a1 + 87);
  if (v3 < 0)
  {
    v4 = *(std::string **)(a1 + 64);
    v5 = *(_QWORD *)(a1 + 72);
  }
  else
  {
    v4 = v2;
    v5 = *(unsigned __int8 *)(a1 + 87);
  }
  v6 = *(_DWORD *)(a1 + 96);
  if ((v6 & 8) != 0)
  {
    *(_QWORD *)(a1 + 88) = (char *)v4 + v5;
    *(_QWORD *)(a1 + 16) = v4;
    *(_QWORD *)(a1 + 24) = v4;
    *(_QWORD *)(a1 + 32) = (char *)v4 + v5;
  }
  if ((v6 & 0x10) != 0)
  {
    *(_QWORD *)(a1 + 88) = (char *)v4 + v5;
    v7 = v3 < 0 ? (*(_QWORD *)(a1 + 80) & 0x7FFFFFFFFFFFFFFFLL) - 1 : 22;
    std::string::resize(v2, v7, 0);
    v8 = *(char *)(a1 + 87) < 0 ? *(_QWORD *)(a1 + 72) : *(unsigned __int8 *)(a1 + 87);
    *(_QWORD *)(a1 + 40) = v4;
    *(_QWORD *)(a1 + 48) = v4;
    *(_QWORD *)(a1 + 56) = (char *)v4 + v8;
    if ((*(_BYTE *)(a1 + 96) & 3) != 0)
    {
      if (v5 >> 31)
      {
        v9 = ((v5 - 0x80000000) * (unsigned __int128)0x200000005uLL) >> 64;
        v10 = 0x7FFFFFFF * ((v9 + ((v5 - 0x80000000 - v9) >> 1)) >> 30);
        v4 = (std::string *)((char *)v4 + v10 + 0x7FFFFFFF);
        v5 = v5 - v10 - 0x7FFFFFFF;
        *(_QWORD *)(a1 + 48) = v4;
      }
      if (v5)
        *(_QWORD *)(a1 + 48) = (char *)v4 + v5;
    }
  }
}

void sub_1CF21C(id a1)
{
  qword_543410 = (uint64_t)objc_msgSend(objc_alloc((Class)NSSet), "initWithObjects:", CFSTR("head"), CFSTR("math"), CFSTR("object"), CFSTR("table"), CFSTR("svg"), 0);
}

void sub_1CFB1C(_Unwind_Exception *exc_buf, int a2)
{
  uint64_t v2;

  if (a2)
  {
    objc_begin_catch(exc_buf);
    if (!v2)
      JUMPOUT(0x1CFA10);
    JUMPOUT(0x1CFAF8);
  }
  _Unwind_Resume(exc_buf);
}

void sub_1CFC60(int a1, xmlTextReaderPtr *a2, NSObject *a3)
{
  int v4;
  xmlChar *v5;
  _DWORD v6[2];
  __int16 v7;
  const char *v8;
  __int16 v9;
  xmlChar *v10;

  v4 = a1 - 2;
  v5 = xmlTextReaderName(*a2);
  v6[0] = 67109634;
  v6[1] = v4;
  v7 = 2080;
  v8 = "";
  v9 = 2080;
  v10 = v5;
  _os_log_debug_impl(&dword_0, a3, OS_LOG_TYPE_DEBUG, "%*sending element %s", (uint8_t *)v6, 0x1Cu);
}

void sub_1D02E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_1D0414((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_1D0314(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;

  v4 = a1[2];
  v5 = a1[1];
  if (v4 == v5)
    v6 = 0;
  else
    v6 = ((v4 - v5) << 6) - 1;
  v7 = a1[5];
  v8 = v7 + a1[4];
  if (v6 == v8)
  {
    sub_1D04F4(a1);
    v5 = a1[1];
    v7 = a1[5];
    v8 = a1[4] + v7;
  }
  *(_QWORD *)(*(_QWORD *)(v5 + ((v8 >> 6) & 0x3FFFFFFFFFFFFF8)) + 8 * (v8 & 0x1FF)) = *a2;
  a1[5] = v7 + 1;
}

void sub_1D0398(uint64_t a1, _QWORD *a2)
{
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(_QWORD *)(a1 + 32);
  if (!v4)
  {
    sub_1D0C64((void **)a1);
    v4 = *(_QWORD *)(a1 + 32);
  }
  v5 = *(_QWORD *)(a1 + 8);
  v6 = (_QWORD *)(v5 + 8 * (v4 >> 9));
  if (*(_QWORD *)(a1 + 16) == v5)
    v7 = 0;
  else
    v7 = *v6 + 8 * (v4 & 0x1FF);
  if (v7 == *v6)
    v7 = *(v6 - 1) + 4096;
  *(_QWORD *)(v7 - 8) = *a2;
  v8 = *(_QWORD *)(a1 + 40) + 1;
  *(_QWORD *)(a1 + 32) = v4 - 1;
  *(_QWORD *)(a1 + 40) = v8;
}

uint64_t sub_1D0414(_QWORD *a1)
{
  void **v2;
  void **v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  void *v7;

  v2 = (void **)a1[1];
  v3 = (void **)a1[2];
  a1[5] = 0;
  v4 = (char *)v3 - (char *)v2;
  if ((unint64_t)((char *)v3 - (char *)v2) >= 0x11)
  {
    do
    {
      operator delete(*v2);
      v3 = (void **)a1[2];
      v2 = (void **)(a1[1] + 8);
      a1[1] = v2;
      v4 = (char *)v3 - (char *)v2;
    }
    while ((unint64_t)((char *)v3 - (char *)v2) > 0x10);
  }
  v5 = v4 >> 3;
  if (v5 == 1)
  {
    v6 = 256;
  }
  else
  {
    if (v5 != 2)
      goto LABEL_9;
    v6 = 512;
  }
  a1[4] = v6;
LABEL_9:
  while (v2 != v3)
  {
    v7 = *v2++;
    operator delete(v7);
  }
  return sub_1D04A8((uint64_t)a1);
}

uint64_t sub_1D04A8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v3 = *(_QWORD *)(a1 + 8);
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != v3)
    *(_QWORD *)(a1 + 16) = v2 + ((v3 - v2 + 7) & 0xFFFFFFFFFFFFFFF8);
  v4 = *(void **)a1;
  if (*(_QWORD *)a1)
    operator delete(v4);
  return a1;
}

void sub_1D04F4(_QWORD *a1)
{
  unint64_t v2;
  BOOL v3;
  unint64_t v4;
  uint64_t v5;
  char *v6;
  _QWORD *v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  int64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  char *v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  unint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  char *v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  char *v43;
  _QWORD *v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  void *v53;
  __int128 v54;
  __int128 v55;
  _QWORD *v56;

  v2 = a1[4];
  v3 = v2 >= 0x200;
  v4 = v2 - 512;
  if (v3)
  {
    v5 = (uint64_t)(a1 + 3);
    v6 = (char *)a1[3];
    a1[4] = v4;
    v7 = (_QWORD *)a1[1];
    v8 = (char *)a1[2];
    v11 = *v7;
    v9 = (char *)(v7 + 1);
    v10 = v11;
    a1[1] = v9;
    if (v8 != v6)
    {
LABEL_33:
      *(_QWORD *)v8 = v10;
      a1[2] += 8;
      return;
    }
    v12 = (uint64_t)&v9[-*a1];
    if ((unint64_t)v9 <= *a1)
    {
      if (v8 == (char *)*a1)
        v33 = 1;
      else
        v33 = (uint64_t)&v8[-*a1] >> 2;
      v34 = (char *)sub_3CC38(v5, v33);
      v35 = &v34[8 * (v33 >> 2)];
      v37 = &v34[8 * v36];
      v38 = (uint64_t *)a1[1];
      v8 = v35;
      v39 = a1[2] - (_QWORD)v38;
      if (v39)
      {
        v8 = &v35[v39 & 0xFFFFFFFFFFFFFFF8];
        v40 = 8 * (v39 >> 3);
        v41 = &v34[8 * (v33 >> 2)];
        do
        {
          v42 = *v38++;
          *(_QWORD *)v41 = v42;
          v41 += 8;
          v40 -= 8;
        }
        while (v40);
      }
      goto LABEL_30;
    }
LABEL_5:
    v13 = v12 >> 3;
    v14 = v12 >> 3 < -1;
    v15 = (v12 >> 3) + 2;
    if (v14)
      v16 = v15;
    else
      v16 = v13 + 1;
    v17 = -(v16 >> 1);
    v18 = v16 >> 1;
    v19 = &v9[-8 * v18];
    v20 = v8 - v9;
    if (v8 != v9)
    {
      memmove(&v9[-8 * v18], v9, v8 - v9);
      v9 = (char *)a1[1];
    }
    v8 = &v19[v20];
    a1[1] = &v9[8 * v17];
    a1[2] = &v19[v20];
    goto LABEL_33;
  }
  v21 = a1[2];
  v22 = (v21 - a1[1]) >> 3;
  v23 = a1[3];
  v24 = v23 - *a1;
  if (v22 < v24 >> 3)
  {
    if (v23 != v21)
    {
      *(_QWORD *)&v54 = operator new(0x1000uLL);
      sub_1D0808(a1, &v54);
      return;
    }
    *(_QWORD *)&v54 = operator new(0x1000uLL);
    sub_1D091C((uint64_t)a1, &v54);
    v44 = (_QWORD *)a1[1];
    v8 = (char *)a1[2];
    v45 = *v44;
    v9 = (char *)(v44 + 1);
    v10 = v45;
    a1[1] = v9;
    if (v8 != (char *)a1[3])
      goto LABEL_33;
    v12 = (uint64_t)&v9[-*a1];
    if ((unint64_t)v9 <= *a1)
    {
      if (v8 == (char *)*a1)
        v46 = 1;
      else
        v46 = (uint64_t)&v8[-*a1] >> 2;
      v34 = (char *)sub_3CC38((uint64_t)(a1 + 3), v46);
      v35 = &v34[8 * (v46 >> 2)];
      v37 = &v34[8 * v47];
      v48 = (uint64_t *)a1[1];
      v8 = v35;
      v49 = a1[2] - (_QWORD)v48;
      if (v49)
      {
        v8 = &v35[v49 & 0xFFFFFFFFFFFFFFF8];
        v50 = 8 * (v49 >> 3);
        v51 = &v34[8 * (v46 >> 2)];
        do
        {
          v52 = *v48++;
          *(_QWORD *)v51 = v52;
          v51 += 8;
          v50 -= 8;
        }
        while (v50);
      }
LABEL_30:
      v43 = (char *)*a1;
      *a1 = v34;
      a1[1] = v35;
      a1[2] = v8;
      a1[3] = v37;
      if (v43)
      {
        operator delete(v43);
        v8 = (char *)a1[2];
      }
      goto LABEL_33;
    }
    goto LABEL_5;
  }
  if (v23 == *a1)
    v25 = 1;
  else
    v25 = v24 >> 2;
  v56 = a1 + 3;
  *(_QWORD *)&v54 = sub_3CC38((uint64_t)(a1 + 3), v25);
  *((_QWORD *)&v54 + 1) = v54 + 8 * v22;
  *(_QWORD *)&v55 = *((_QWORD *)&v54 + 1);
  *((_QWORD *)&v55 + 1) = v54 + 8 * v26;
  v53 = operator new(0x1000uLL);
  sub_1D0A38(&v54, &v53);
  v27 = (_QWORD *)a1[2];
  v28 = -7 - (_QWORD)v27;
  while (v27 != (_QWORD *)a1[1])
  {
    --v27;
    v28 += 8;
    sub_1D0B4C((uint64_t)&v54, v27);
  }
  v29 = (char *)*a1;
  v30 = v54;
  v31 = v55;
  *(_QWORD *)&v54 = *a1;
  *((_QWORD *)&v54 + 1) = v27;
  v32 = *((_OWORD *)a1 + 1);
  *(_OWORD *)a1 = v30;
  *((_OWORD *)a1 + 1) = v31;
  v55 = v32;
  if (v27 != (_QWORD *)v32)
    *(_QWORD *)&v55 = v32 + (-(v32 + v28) & 0xFFFFFFFFFFFFFFF8);
  if (v29)
    operator delete(v29);
}

void sub_1D07BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, uint64_t a13)
{
  void *v13;

  operator delete(v13);
  if (__p)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_1D0808(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  char *v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  int64_t v16;
  char *v17;
  unint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;

  v5 = (char *)a1[3];
  v4 = (uint64_t)(a1 + 3);
  v6 = *(char **)(v4 - 8);
  if (v6 == v5)
  {
    v7 = (char *)a1[1];
    v8 = (uint64_t)&v7[-*a1];
    if ((unint64_t)v7 <= *a1)
    {
      if (v6 == (char *)*a1)
        v18 = 1;
      else
        v18 = (uint64_t)&v6[-*a1] >> 2;
      v19 = (char *)sub_3CC38(v4, v18);
      v21 = &v19[8 * (v18 >> 2)];
      v22 = (uint64_t *)a1[1];
      v6 = v21;
      v23 = a1[2] - (_QWORD)v22;
      if (v23)
      {
        v6 = &v21[v23 & 0xFFFFFFFFFFFFFFF8];
        v24 = 8 * (v23 >> 3);
        v25 = &v19[8 * (v18 >> 2)];
        do
        {
          v26 = *v22++;
          *(_QWORD *)v25 = v26;
          v25 += 8;
          v24 -= 8;
        }
        while (v24);
      }
      v27 = (char *)*a1;
      *a1 = v19;
      a1[1] = v21;
      a1[2] = v6;
      a1[3] = &v19[8 * v20];
      if (v27)
      {
        operator delete(v27);
        v6 = (char *)a1[2];
      }
    }
    else
    {
      v9 = v8 >> 3;
      v10 = v8 >> 3 < -1;
      v11 = (v8 >> 3) + 2;
      if (v10)
        v12 = v11;
      else
        v12 = v9 + 1;
      v13 = -(v12 >> 1);
      v14 = v12 >> 1;
      v15 = &v7[-8 * v14];
      v16 = v6 - v7;
      if (v6 != v7)
      {
        memmove(&v7[-8 * v14], v7, v6 - v7);
        v6 = (char *)a1[1];
      }
      v17 = &v6[8 * v13];
      v6 = &v15[v16];
      a1[1] = v17;
      a1[2] = &v15[v16];
    }
  }
  *(_QWORD *)v6 = *a2;
  a1[2] += 8;
}

void sub_1D091C(uint64_t a1, _QWORD *a2)
{
  char *v4;
  char *v5;
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;

  v4 = *(char **)(a1 + 8);
  if (v4 == *(char **)a1)
  {
    v6 = a1 + 24;
    v7 = *(_BYTE **)(a1 + 24);
    v8 = *(_BYTE **)(a1 + 16);
    if (v8 >= v7)
    {
      if (v7 == v4)
        v12 = 1;
      else
        v12 = (v7 - v4) >> 2;
      v13 = 2 * v12;
      v14 = (char *)sub_3CC38(v6, v12);
      v5 = &v14[(v13 + 6) & 0xFFFFFFFFFFFFFFF8];
      v16 = *(uint64_t **)(a1 + 8);
      v17 = v5;
      v18 = *(_QWORD *)(a1 + 16) - (_QWORD)v16;
      if (v18)
      {
        v17 = &v5[v18 & 0xFFFFFFFFFFFFFFF8];
        v19 = 8 * (v18 >> 3);
        v20 = v5;
        do
        {
          v21 = *v16++;
          *(_QWORD *)v20 = v21;
          v20 += 8;
          v19 -= 8;
        }
        while (v19);
      }
      v22 = *(char **)a1;
      *(_QWORD *)a1 = v14;
      *(_QWORD *)(a1 + 8) = v5;
      *(_QWORD *)(a1 + 16) = v17;
      *(_QWORD *)(a1 + 24) = &v14[8 * v15];
      if (v22)
      {
        operator delete(v22);
        v5 = *(char **)(a1 + 8);
      }
    }
    else
    {
      v9 = (v7 - v8) >> 3;
      if (v9 >= -1)
        v10 = v9 + 1;
      else
        v10 = v9 + 2;
      v11 = v10 >> 1;
      v5 = &v4[8 * (v10 >> 1)];
      if (v8 != v4)
      {
        memmove(&v4[8 * (v10 >> 1)], v4, v8 - v4);
        v4 = *(char **)(a1 + 16);
      }
      *(_QWORD *)(a1 + 8) = v5;
      *(_QWORD *)(a1 + 16) = &v4[8 * v11];
    }
  }
  else
  {
    v5 = *(char **)(a1 + 8);
  }
  *((_QWORD *)v5 - 1) = *a2;
  *(_QWORD *)(a1 + 8) -= 8;
}

void sub_1D0A38(_QWORD *a1, _QWORD *a2)
{
  char *v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  int64_t v14;
  char *v15;
  unint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;

  v4 = (char *)a1[2];
  if (v4 == (char *)a1[3])
  {
    v5 = (char *)a1[1];
    v6 = (uint64_t)&v5[-*a1];
    if ((unint64_t)v5 <= *a1)
    {
      if (v4 == (char *)*a1)
        v16 = 1;
      else
        v16 = (uint64_t)&v4[-*a1] >> 2;
      v17 = (char *)sub_3CC38(a1[4], v16);
      v19 = &v17[8 * (v16 >> 2)];
      v20 = (uint64_t *)a1[1];
      v4 = v19;
      v21 = a1[2] - (_QWORD)v20;
      if (v21)
      {
        v4 = &v19[v21 & 0xFFFFFFFFFFFFFFF8];
        v22 = 8 * (v21 >> 3);
        v23 = &v17[8 * (v16 >> 2)];
        do
        {
          v24 = *v20++;
          *(_QWORD *)v23 = v24;
          v23 += 8;
          v22 -= 8;
        }
        while (v22);
      }
      v25 = (char *)*a1;
      *a1 = v17;
      a1[1] = v19;
      a1[2] = v4;
      a1[3] = &v17[8 * v18];
      if (v25)
      {
        operator delete(v25);
        v4 = (char *)a1[2];
      }
    }
    else
    {
      v7 = v6 >> 3;
      v8 = v6 >> 3 < -1;
      v9 = (v6 >> 3) + 2;
      if (v8)
        v10 = v9;
      else
        v10 = v7 + 1;
      v11 = -(v10 >> 1);
      v12 = v10 >> 1;
      v13 = &v5[-8 * v12];
      v14 = v4 - v5;
      if (v4 != v5)
      {
        memmove(&v5[-8 * v12], v5, v4 - v5);
        v4 = (char *)a1[1];
      }
      v15 = &v4[8 * v11];
      v4 = &v13[v14];
      a1[1] = v15;
      a1[2] = &v13[v14];
    }
  }
  *(_QWORD *)v4 = *a2;
  a1[2] += 8;
}

void sub_1D0B4C(uint64_t a1, _QWORD *a2)
{
  char *v4;
  char *v5;
  _BYTE *v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;

  v4 = *(char **)(a1 + 8);
  if (v4 == *(char **)a1)
  {
    v6 = *(_BYTE **)(a1 + 16);
    v7 = *(_BYTE **)(a1 + 24);
    if (v6 >= v7)
    {
      if (v7 == v4)
        v11 = 1;
      else
        v11 = (v7 - v4) >> 2;
      v12 = 2 * v11;
      v13 = (char *)sub_3CC38(*(_QWORD *)(a1 + 32), v11);
      v5 = &v13[(v12 + 6) & 0xFFFFFFFFFFFFFFF8];
      v15 = *(uint64_t **)(a1 + 8);
      v16 = v5;
      v17 = *(_QWORD *)(a1 + 16) - (_QWORD)v15;
      if (v17)
      {
        v16 = &v5[v17 & 0xFFFFFFFFFFFFFFF8];
        v18 = 8 * (v17 >> 3);
        v19 = v5;
        do
        {
          v20 = *v15++;
          *(_QWORD *)v19 = v20;
          v19 += 8;
          v18 -= 8;
        }
        while (v18);
      }
      v21 = *(char **)a1;
      *(_QWORD *)a1 = v13;
      *(_QWORD *)(a1 + 8) = v5;
      *(_QWORD *)(a1 + 16) = v16;
      *(_QWORD *)(a1 + 24) = &v13[8 * v14];
      if (v21)
      {
        operator delete(v21);
        v5 = *(char **)(a1 + 8);
      }
    }
    else
    {
      v8 = (v7 - v6) >> 3;
      if (v8 >= -1)
        v9 = v8 + 1;
      else
        v9 = v8 + 2;
      v10 = v9 >> 1;
      v5 = &v4[8 * (v9 >> 1)];
      if (v6 != v4)
      {
        memmove(&v4[8 * (v9 >> 1)], v4, v6 - v4);
        v4 = *(char **)(a1 + 16);
      }
      *(_QWORD *)(a1 + 8) = v5;
      *(_QWORD *)(a1 + 16) = &v4[8 * v10];
    }
  }
  else
  {
    v5 = *(char **)(a1 + 8);
  }
  *((_QWORD *)v5 - 1) = *a2;
  *(_QWORD *)(a1 + 8) -= 8;
}

void sub_1D0C64(void **a1)
{
  _BYTE *v2;
  _BYTE *v3;
  unint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  _BYTE *v8;
  _BYTE *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  int64_t v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  int64_t v21;
  char *v22;
  unint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  char *v33;
  _QWORD *v34;
  uint64_t v35;
  void *v36;
  char *v37;
  char *v38;
  char *v39;
  uint64_t v40;
  void *v41;
  void *__p;
  char *v43;
  char *v44;
  char *v45;
  _QWORD *v46;

  v2 = a1[1];
  v3 = a1[2];
  v4 = v3 - v2;
  if (v3 == v2)
    v5 = 0;
  else
    v5 = ((v3 - v2) << 6) - 1;
  v6 = (char *)a1[4];
  if (v5 - (unint64_t)&v6[(_QWORD)a1[5]] < 0x200)
  {
    v7 = (uint64_t)(a1 + 3);
    v8 = a1[3];
    v9 = *a1;
    v10 = v8 - (_BYTE *)*a1;
    if (v4 >= v10)
    {
      if (v8 == v9)
        v11 = 1;
      else
        v11 = v10 >> 2;
      v46 = a1 + 3;
      __p = sub_3CC38(v7, v11);
      v43 = (char *)__p;
      v44 = (char *)__p;
      v45 = (char *)__p + 8 * v12;
      v41 = operator new(0x1000uLL);
      sub_1D0A38(&__p, &v41);
      v13 = (char *)a1[1];
      v14 = v44;
      if (v13 == a1[2])
      {
        v33 = (char *)a1[1];
      }
      else
      {
        do
        {
          if (v14 == v45)
          {
            v15 = v43 - (_BYTE *)__p;
            if (v43 <= __p)
            {
              if (v14 == __p)
                v23 = 1;
              else
                v23 = (v14 - (_BYTE *)__p) >> 2;
              v24 = (char *)sub_3CC38((uint64_t)v46, v23);
              v26 = v43;
              v14 = &v24[8 * (v23 >> 2)];
              v27 = v44 - v43;
              if (v44 != v43)
              {
                v14 = &v24[8 * (v23 >> 2) + (v27 & 0xFFFFFFFFFFFFFFF8)];
                v28 = 8 * (v27 >> 3);
                v29 = &v24[8 * (v23 >> 2)];
                do
                {
                  v30 = *(_QWORD *)v26;
                  v26 += 8;
                  *(_QWORD *)v29 = v30;
                  v29 += 8;
                  v28 -= 8;
                }
                while (v28);
              }
              v31 = __p;
              __p = v24;
              v43 = &v24[8 * (v23 >> 2)];
              v44 = v14;
              v45 = &v24[8 * v25];
              if (v31)
              {
                operator delete(v31);
                v14 = v44;
              }
            }
            else
            {
              v16 = v15 >> 3;
              v17 = v15 >> 3 < -1;
              v18 = (v15 >> 3) + 2;
              if (v17)
                v19 = v18;
              else
                v19 = v16 + 1;
              v20 = &v43[-8 * (v19 >> 1)];
              v21 = v14 - v43;
              if (v14 != v43)
              {
                memmove(&v43[-8 * (v19 >> 1)], v43, v14 - v43);
                v14 = v43;
              }
              v22 = &v14[-8 * (v19 >> 1)];
              v14 = &v20[v21];
              v43 = v22;
              v44 = &v20[v21];
            }
          }
          v32 = *(_QWORD *)v13;
          v13 += 8;
          *(_QWORD *)v14 = v32;
          v14 = v44 + 8;
          v44 += 8;
        }
        while (v13 != a1[2]);
        v33 = (char *)a1[1];
      }
      v36 = *a1;
      v37 = v43;
      *a1 = __p;
      a1[1] = v37;
      __p = v36;
      v43 = v33;
      v38 = (char *)a1[3];
      v39 = v45;
      a1[2] = v14;
      a1[3] = v39;
      v44 = v13;
      v45 = v38;
      if (v14 - v37 == 8)
        v40 = 256;
      else
        v40 = (uint64_t)a1[4] + 512;
      a1[4] = (void *)v40;
      if (v13 != v33)
        v44 = &v13[(v33 - v13 + 7) & 0xFFFFFFFFFFFFFFF8];
      if (v36)
        operator delete(v36);
    }
    else
    {
      if (v2 == v9)
      {
        __p = operator new(0x1000uLL);
        sub_1D0808(a1, &__p);
        v34 = a1[2];
        __p = (void *)*(v34 - 1);
        a1[2] = v34 - 1;
      }
      else
      {
        __p = operator new(0x1000uLL);
      }
      sub_1D091C((uint64_t)a1, &__p);
      if ((_BYTE *)a1[2] - (_BYTE *)a1[1] == 8)
        v35 = 256;
      else
        v35 = (uint64_t)a1[4] + 512;
      a1[4] = (void *)v35;
    }
  }
  else
  {
    a1[4] = v6 + 512;
    __p = (void *)*((_QWORD *)v3 - 1);
    a1[2] = v3 - 8;
    sub_1D091C((uint64_t)a1, &__p);
  }
}

void sub_1D0F28(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, uint64_t a12)
{
  void *v12;

  operator delete(v12);
  if (__p)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_1D198C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  if (a19 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_1D1E2C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,void *a22,uint64_t a23,uint64_t a24,void *__p,uint64_t a26)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_1D1FC0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  __cxa_guard_abort(&qword_543438);
  _Unwind_Resume(a1);
}

void sub_1D2590(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  uint64_t v19;
  void *v21;

  v21 = *(void **)v19;
  if (*(_QWORD *)v19)
  {
    *(_QWORD *)(v19 + 8) = v21;
    operator delete(v21);
  }
  _Unwind_Resume(exception_object);
}

void sub_1D2600(uint64_t a1)
{
  uint64_t v2;
  uint64_t i;

  if (*(_QWORD *)(a1 + 24))
  {
    sub_1D2654(a1, *(void ***)(a1 + 16));
    *(_QWORD *)(a1 + 16) = 0;
    v2 = *(_QWORD *)(a1 + 8);
    if (v2)
    {
      for (i = 0; i != v2; ++i)
        *(_QWORD *)(*(_QWORD *)a1 + 8 * i) = 0;
    }
    *(_QWORD *)(a1 + 24) = 0;
  }
}

void sub_1D2654(int a1, void **__p)
{
  void **v2;
  void **v3;

  if (__p)
  {
    v2 = __p;
    do
    {
      v3 = (void **)*v2;
      if (*((char *)v2 + 39) < 0)
        operator delete(v2[2]);
      operator delete(v2);
      v2 = v3;
    }
    while (v3);
  }
}

void *sub_1D2698(uint64_t a1, unsigned __int8 *a2, uint64_t a3, __int128 **a4)
{
  unint64_t v4;
  _QWORD *v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint8x8_t v12;
  unint64_t v13;
  void **v14;
  void *i;
  unint64_t v16;
  _QWORD *v17;
  __int128 *v18;
  __int128 v19;
  float v20;
  float v21;
  _BOOL8 v22;
  unint64_t v23;
  unint64_t v24;
  size_t v25;
  uint64_t v26;
  _QWORD *v27;
  unint64_t v28;

  v8 = (_QWORD *)(a1 + 24);
  v9 = sub_1D2920(a1 + 24, (uint64_t)a2);
  v10 = v9;
  v11 = *(_QWORD *)(a1 + 8);
  if (v11)
  {
    v12 = (uint8x8_t)vcnt_s8((int8x8_t)v11);
    v12.i16[0] = vaddlv_u8(v12);
    v13 = v12.u32[0];
    if (v12.u32[0] > 1uLL)
    {
      v4 = v9;
      if (v9 >= v11)
        v4 = v9 % v11;
    }
    else
    {
      v4 = (v11 - 1) & v9;
    }
    v14 = *(void ***)(*(_QWORD *)a1 + 8 * v4);
    if (v14)
    {
      for (i = *v14; i; i = *(void **)i)
      {
        v16 = *((_QWORD *)i + 1);
        if (v16 == v10)
        {
          if ((sub_1D2DC8(a1 + 32, (unsigned __int8 *)i + 16, a2) & 1) != 0)
            return i;
        }
        else
        {
          if (v13 > 1)
          {
            if (v16 >= v11)
              v16 %= v11;
          }
          else
          {
            v16 &= v11 - 1;
          }
          if (v16 != v4)
            break;
        }
      }
    }
  }
  v17 = (_QWORD *)(a1 + 16);
  i = operator new(0x38uLL);
  *(_QWORD *)i = 0;
  *((_QWORD *)i + 1) = v10;
  v18 = *a4;
  v19 = **a4;
  *((_QWORD *)i + 4) = *((_QWORD *)*a4 + 2);
  *((_OWORD *)i + 1) = v19;
  *((_QWORD *)v18 + 1) = 0;
  *((_QWORD *)v18 + 2) = 0;
  *(_QWORD *)v18 = 0;
  *((_QWORD *)i + 5) = 0;
  *((_QWORD *)i + 6) = 0;
  v20 = (float)(unint64_t)(*(_QWORD *)(a1 + 24) + 1);
  v21 = *(float *)(a1 + 32);
  if (!v11 || (float)(v21 * (float)v11) < v20)
  {
    v22 = 1;
    if (v11 >= 3)
      v22 = (v11 & (v11 - 1)) != 0;
    v23 = v22 | (2 * v11);
    v24 = vcvtps_u32_f32(v20 / v21);
    if (v23 <= v24)
      v25 = v24;
    else
      v25 = v23;
    sub_1D2E6C(a1, v25);
    v11 = *(_QWORD *)(a1 + 8);
    if ((v11 & (v11 - 1)) != 0)
    {
      if (v10 >= v11)
        v4 = v10 % v11;
      else
        v4 = v10;
    }
    else
    {
      v4 = (v11 - 1) & v10;
    }
  }
  v26 = *(_QWORD *)a1;
  v27 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v4);
  if (v27)
  {
    *(_QWORD *)i = *v27;
LABEL_38:
    *v27 = i;
    goto LABEL_39;
  }
  *(_QWORD *)i = *v17;
  *v17 = i;
  *(_QWORD *)(v26 + 8 * v4) = v17;
  if (*(_QWORD *)i)
  {
    v28 = *(_QWORD *)(*(_QWORD *)i + 8);
    if ((v11 & (v11 - 1)) != 0)
    {
      if (v28 >= v11)
        v28 %= v11;
    }
    else
    {
      v28 &= v11 - 1;
    }
    v27 = (_QWORD *)(*(_QWORD *)a1 + 8 * v28);
    goto LABEL_38;
  }
LABEL_39:
  ++*v8;
  return i;
}

void sub_1D2904(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  void **v10;
  uint64_t v11;

  sub_1D30A0(v11, v10);
  _Unwind_Resume(a1);
}

unint64_t sub_1D2920(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;
  char v5;

  v2 = *(_QWORD *)(a2 + 8);
  if (*(char *)(a2 + 23) >= 0)
  {
    v3 = *(unsigned __int8 *)(a2 + 23);
  }
  else
  {
    a2 = *(_QWORD *)a2;
    v3 = v2;
  }
  return sub_1D295C((uint64_t)&v5, (uint64_t *)a2, v3);
}

unint64_t sub_1D295C(uint64_t a1, uint64_t *a2, unint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;

  if (a3 > 0x20)
  {
    if (a3 > 0x40)
    {
      v4 = *(uint64_t *)((char *)a2 + a3 - 48);
      v5 = *(uint64_t *)((char *)a2 + a3 - 40);
      v6 = *(uint64_t *)((char *)a2 + a3 - 24);
      v8 = *(uint64_t *)((char *)a2 + a3 - 64);
      v7 = *(uint64_t *)((char *)a2 + a3 - 56);
      v9 = *(uint64_t *)((char *)a2 + a3 - 16);
      v10 = *(uint64_t *)((char *)a2 + a3 - 8);
      v11 = v7 + v9;
      v12 = 0x9DDFEA08EB382D69
          * (v6 ^ ((0x9DDFEA08EB382D69 * (v6 ^ (v4 + a3))) >> 47) ^ (0x9DDFEA08EB382D69 * (v6 ^ (v4 + a3))));
      v13 = 0x9DDFEA08EB382D69 * (v12 ^ (v12 >> 47));
      v14 = v8 + a3 + v7 + v4;
      v15 = v14 + v5;
      v16 = __ROR8__(v14, 44) + v8 + a3 + __ROR8__(v5 + v8 + a3 - 0x622015F714C7D297 * (v12 ^ (v12 >> 47)), 21);
      v17 = v7 + v9 + *(uint64_t *)((char *)a2 + a3 - 32) - 0x4B6D499041670D8DLL;
      v18 = v17 + v6 + v9;
      v19 = __ROR8__(v18, 44);
      v20 = v18 + v10;
      v21 = v19 + v17 + __ROR8__(v17 + v5 + v10, 21);
      v23 = *a2;
      v22 = a2 + 4;
      v24 = v23 - 0x4B6D499041670D8DLL * v5;
      v25 = -(uint64_t)((a3 - 1) & 0xFFFFFFFFFFFFFFC0);
      do
      {
        v26 = *(v22 - 3);
        v27 = v24 + v15 + v11 + v26;
        v28 = v22[2];
        v29 = v22[3];
        v30 = v22[1];
        v11 = v30 + v15 - 0x4B6D499041670D8DLL * __ROR8__(v11 + v16 + v28, 42);
        v31 = v13 + v20;
        v32 = *(v22 - 2);
        v33 = *(v22 - 1);
        v34 = *(v22 - 4) - 0x4B6D499041670D8DLL * v16;
        v35 = v34 + v20 + v33;
        v36 = v34 + v26 + v32;
        v15 = v36 + v33;
        v37 = __ROR8__(v36, 44) + v34;
        v38 = (0xB492B66FBE98F273 * __ROR8__(v27, 37)) ^ v21;
        v24 = 0xB492B66FBE98F273 * __ROR8__(v31, 33);
        v16 = v37 + __ROR8__(v35 + v38, 21);
        v39 = v24 + v21 + *v22;
        v20 = v39 + v30 + v28 + v29;
        v21 = __ROR8__(v39 + v30 + v28, 44) + v39 + __ROR8__(v11 + v32 + v39 + v29, 21);
        v22 += 8;
        v13 = v38;
        v25 += 64;
      }
      while (v25);
      v40 = v24
          - 0x622015F714C7D297
          * ((0x9DDFEA08EB382D69
            * (v21 ^ ((0x9DDFEA08EB382D69 * (v21 ^ v16)) >> 47) ^ (0x9DDFEA08EB382D69 * (v21 ^ v16)))) ^ ((0x9DDFEA08EB382D69 * (v21 ^ ((0x9DDFEA08EB382D69 * (v21 ^ v16)) >> 47) ^ (0x9DDFEA08EB382D69 * (v21 ^ v16)))) >> 47));
      v41 = 0x9DDFEA08EB382D69
          * (v40 ^ (v38
                  - 0x4B6D499041670D8DLL * (v11 ^ (v11 >> 47))
                  - 0x622015F714C7D297
                  * ((0x9DDFEA08EB382D69
                    * (v20 ^ ((0x9DDFEA08EB382D69 * (v20 ^ v15)) >> 47) ^ (0x9DDFEA08EB382D69 * (v20 ^ v15)))) ^ ((0x9DDFEA08EB382D69 * (v20 ^ ((0x9DDFEA08EB382D69 * (v20 ^ v15)) >> 47) ^ (0x9DDFEA08EB382D69 * (v20 ^ v15)))) >> 47))));
      return 0x9DDFEA08EB382D69
           * ((0x9DDFEA08EB382D69 * (v40 ^ (v41 >> 47) ^ v41)) ^ ((0x9DDFEA08EB382D69 * (v40 ^ (v41 >> 47) ^ v41)) >> 47));
    }
    else
    {
      return sub_1D2D08(a2, a3);
    }
  }
  else if (a3 > 0x10)
  {
    return sub_1D2C5C(a2, a3);
  }
  else
  {
    return sub_1D2B64(a2, a3);
  }
}

unint64_t sub_1D2B64(_DWORD *a1, unint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t result;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;

  if (a2 < 9)
  {
    if (a2 < 4)
    {
      result = 0x9AE16A3B2F90404FLL;
      if (a2)
      {
        v8 = (0xC949D7C7509E6557 * (a2 + 4 * *((unsigned __int8 *)a1 + a2 - 1))) ^ (0x9AE16A3B2F90404FLL
                                                                                      * (*(unsigned __int8 *)a1 | ((unint64_t)*((unsigned __int8 *)a1 + (a2 >> 1)) << 8)));
        return 0x9AE16A3B2F90404FLL * (v8 ^ (v8 >> 47));
      }
    }
    else
    {
      v6 = *(unsigned int *)((char *)a1 + a2 - 4);
      v7 = 0x9DDFEA08EB382D69 * (((8 * *a1) + a2) ^ v6);
      return 0x9DDFEA08EB382D69
           * ((0x9DDFEA08EB382D69 * (v6 ^ (v7 >> 47) ^ v7)) ^ ((0x9DDFEA08EB382D69 * (v6 ^ (v7 >> 47) ^ v7)) >> 47));
    }
  }
  else
  {
    v3 = *(_QWORD *)((char *)a1 + a2 - 8);
    v4 = __ROR8__(v3 + a2, a2);
    return (0x9DDFEA08EB382D69
          * ((0x9DDFEA08EB382D69
            * (v4 ^ ((0x9DDFEA08EB382D69 * (v4 ^ *(_QWORD *)a1)) >> 47) ^ (0x9DDFEA08EB382D69 * (v4 ^ *(_QWORD *)a1)))) ^ ((0x9DDFEA08EB382D69 * (v4 ^ ((0x9DDFEA08EB382D69 * (v4 ^ *(_QWORD *)a1)) >> 47) ^ (0x9DDFEA08EB382D69 * (v4 ^ *(_QWORD *)a1)))) >> 47))) ^ v3;
  }
  return result;
}

unint64_t sub_1D2C5C(_QWORD *a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;

  v2 = a1[1];
  v3 = 0xB492B66FBE98F273 * *a1;
  v4 = __ROR8__(0x9AE16A3B2F90404FLL * *(_QWORD *)((char *)a1 + a2 - 8), 30) + __ROR8__(v3 - v2, 43);
  v5 = v3 + a2 + __ROR8__(v2 ^ 0xC949D7C7509E6557, 20) - 0x9AE16A3B2F90404FLL * *(_QWORD *)((char *)a1 + a2 - 8);
  v6 = 0x9DDFEA08EB382D69 * (v5 ^ (v4 - 0x3C5A37A36834CED9 * *(_QWORD *)((char *)a1 + a2 - 16)));
  return 0x9DDFEA08EB382D69
       * ((0x9DDFEA08EB382D69 * (v5 ^ (v6 >> 47) ^ v6)) ^ ((0x9DDFEA08EB382D69 * (v5 ^ (v6 >> 47) ^ v6)) >> 47));
}

unint64_t sub_1D2D08(_QWORD *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;

  v2 = *(_QWORD *)((char *)a1 + a2 - 16);
  v3 = *a1 - 0x3C5A37A36834CED9 * (v2 + a2);
  v5 = a1[2];
  v4 = a1[3];
  v6 = __ROR8__(v3 + v4, 52);
  v7 = v3 + a1[1];
  v8 = __ROR8__(v7, 7);
  v9 = v7 + v5;
  v10 = *(_QWORD *)((char *)a1 + a2 - 32) + v5;
  v11 = v8 + __ROR8__(*a1 - 0x3C5A37A36834CED9 * (v2 + a2), 37) + v6 + __ROR8__(v9, 31);
  v12 = *(_QWORD *)((char *)a1 + a2 - 24) + v10 + v2;
  v13 = 0xC3A5C85C97CB3127 * (v12 + *(_QWORD *)((char *)a1 + a2 - 8) + v4 + v11)
      - 0x651E95C4D06FBFB1
      * (v9
       + v4
       + __ROR8__(v10, 37)
       + __ROR8__(*(_QWORD *)((char *)a1 + a2 - 24) + v10, 7)
       + __ROR8__(*(_QWORD *)((char *)a1 + a2 - 8) + v4 + v10, 52)
       + __ROR8__(v12, 31));
  return 0x9AE16A3B2F90404FLL
       * ((v11 - 0x3C5A37A36834CED9 * (v13 ^ (v13 >> 47))) ^ ((v11 - 0x3C5A37A36834CED9 * (v13 ^ (v13 >> 47))) >> 47));
}

uint64_t sub_1D2DC8(uint64_t a1, unsigned __int8 *a2, unsigned __int8 *a3)
{
  unsigned __int8 *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  int v9;
  int v10;
  int v11;
  int v12;
  BOOL v14;
  uint64_t result;

  v3 = a3;
  v4 = a2[23];
  if ((v4 & 0x80u) == 0)
    v5 = a2[23];
  else
    v5 = *((_QWORD *)a2 + 1);
  v6 = a3[23];
  v7 = (char)v6;
  if ((v6 & 0x80u) != 0)
    v6 = *((_QWORD *)a3 + 1);
  if (v5 != v6)
    return 0;
  if (v7 < 0)
    v3 = *(unsigned __int8 **)a3;
  if ((v4 & 0x80) != 0)
    return memcmp(*(const void **)a2, v3, *((_QWORD *)a2 + 1)) == 0;
  if (!a2[23])
    return 1;
  v8 = v4 - 1;
  do
  {
    v10 = *a2++;
    v9 = v10;
    v12 = *v3++;
    v11 = v12;
    v14 = v8-- != 0;
    result = v9 == v11;
  }
  while (v9 == v11 && v14);
  return result;
}

void sub_1D2E6C(uint64_t a1, size_t __n)
{
  size_t prime;
  int8x8_t v4;
  unint64_t v5;
  uint8x8_t v6;
  uint64_t v7;

  if (__n == 1)
  {
    prime = 2;
  }
  else
  {
    prime = __n;
    if ((__n & (__n - 1)) != 0)
      prime = std::__next_prime(__n);
  }
  v4 = *(int8x8_t *)(a1 + 8);
  if (prime > *(_QWORD *)&v4)
    goto LABEL_16;
  if (prime < *(_QWORD *)&v4)
  {
    v5 = vcvtps_u32_f32((float)*(unint64_t *)(a1 + 24) / *(float *)(a1 + 32));
    if (*(_QWORD *)&v4 < 3uLL || (v6 = (uint8x8_t)vcnt_s8(v4), v6.i16[0] = vaddlv_u8(v6), v6.u32[0] > 1uLL))
    {
      v5 = std::__next_prime(v5);
    }
    else
    {
      v7 = 1 << -(char)__clz(v5 - 1);
      if (v5 >= 2)
        v5 = v7;
    }
    if (prime <= v5)
      prime = v5;
    if (prime < *(_QWORD *)&v4)
LABEL_16:
      sub_1D2F48(a1, prime);
  }
}

void sub_1D2F48(uint64_t a1, unint64_t a2)
{
  void *v4;
  void *v5;
  uint64_t v6;
  _QWORD *v7;
  unint64_t v8;
  uint8x8_t v9;
  void *v10;
  _QWORD *v11;
  unint64_t v12;

  if (a2)
  {
    if (a2 >> 61)
      sub_36CEC();
    v4 = operator new(8 * a2);
    v5 = *(void **)a1;
    *(_QWORD *)a1 = v4;
    if (v5)
      operator delete(v5);
    v6 = 0;
    *(_QWORD *)(a1 + 8) = a2;
    do
      *(_QWORD *)(*(_QWORD *)a1 + 8 * v6++) = 0;
    while (a2 != v6);
    v7 = *(_QWORD **)(a1 + 16);
    if (v7)
    {
      v8 = v7[1];
      v9 = (uint8x8_t)vcnt_s8((int8x8_t)a2);
      v9.i16[0] = vaddlv_u8(v9);
      if (v9.u32[0] > 1uLL)
      {
        if (v8 >= a2)
          v8 %= a2;
      }
      else
      {
        v8 &= a2 - 1;
      }
      *(_QWORD *)(*(_QWORD *)a1 + 8 * v8) = a1 + 16;
      v11 = (_QWORD *)*v7;
      if (*v7)
      {
        do
        {
          v12 = v11[1];
          if (v9.u32[0] > 1uLL)
          {
            if (v12 >= a2)
              v12 %= a2;
          }
          else
          {
            v12 &= a2 - 1;
          }
          if (v12 != v8)
          {
            if (!*(_QWORD *)(*(_QWORD *)a1 + 8 * v12))
            {
              *(_QWORD *)(*(_QWORD *)a1 + 8 * v12) = v7;
              goto LABEL_24;
            }
            *v7 = *v11;
            *v11 = **(_QWORD **)(*(_QWORD *)a1 + 8 * v12);
            **(_QWORD **)(*(_QWORD *)a1 + 8 * v12) = v11;
            v11 = v7;
          }
          v12 = v8;
LABEL_24:
          v7 = v11;
          v11 = (_QWORD *)*v11;
          v8 = v12;
        }
        while (v11);
      }
    }
  }
  else
  {
    v10 = *(void **)a1;
    *(_QWORD *)a1 = 0;
    if (v10)
      operator delete(v10);
    *(_QWORD *)(a1 + 8) = 0;
  }
}

void sub_1D30A0(uint64_t a1, void **__p)
{
  if (*(_BYTE *)(a1 + 8))
  {
    if (*((char *)__p + 39) < 0)
      operator delete(__p[2]);
  }
  else if (!__p)
  {
    return;
  }
  operator delete(__p);
}

_QWORD *sub_1D30EC(_QWORD *a1, uint64_t a2)
{
  char *v4;

  v4 = (char *)operator new(0x38uLL);
  *(_QWORD *)v4 = 0;
  *((_QWORD *)v4 + 1) = 0;
  *((_OWORD *)v4 + 1) = *(_OWORD *)a2;
  *((_QWORD *)v4 + 4) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)a2 = 0;
  *(_QWORD *)(a2 + 8) = 0;
  *(_QWORD *)(a2 + 16) = 0;
  *(_OWORD *)(v4 + 40) = *(_OWORD *)(a2 + 24);
  *((_QWORD *)v4 + 1) = sub_1D2920((uint64_t)(a1 + 3), (uint64_t)(v4 + 16));
  return sub_1D319C(a1, v4);
}

void sub_1D3180(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  void **v10;
  uint64_t v11;

  sub_1D30A0(v11, v10);
  _Unwind_Resume(a1);
}

_QWORD *sub_1D319C(_QWORD *a1, _QWORD *a2)
{
  unsigned __int8 *v4;
  unint64_t v5;
  unsigned __int8 *v6;

  v4 = (unsigned __int8 *)(a2 + 2);
  v5 = sub_1D2920((uint64_t)(a1 + 3), (uint64_t)(a2 + 2));
  a2[1] = v5;
  v6 = sub_1D31FC((uint64_t)a1, v5, v4);
  sub_1D336C(a1, a2, v6);
  return a2;
}

unsigned __int8 *sub_1D31FC(uint64_t a1, unint64_t a2, unsigned __int8 *a3)
{
  uint64_t v6;
  float v7;
  unint64_t v8;
  float v9;
  _BOOL8 v10;
  unint64_t v11;
  unint64_t v12;
  size_t v13;
  uint8x8_t v14;
  unint64_t v15;
  unint64_t v16;
  unsigned __int8 *v17;
  unsigned __int8 *v18;
  int v19;
  unint64_t v20;
  unint64_t v21;
  int v22;

  v6 = a1 + 32;
  v7 = *(float *)(a1 + 32);
  v8 = *(_QWORD *)(a1 + 8);
  v9 = (float)(unint64_t)(*(_QWORD *)(a1 + 24) + 1);
  if (!v8 || (float)(v7 * (float)v8) < v9)
  {
    v10 = 1;
    if (v8 >= 3)
      v10 = (v8 & (v8 - 1)) != 0;
    v11 = v10 | (2 * v8);
    v12 = vcvtps_u32_f32(v9 / v7);
    if (v11 <= v12)
      v13 = v12;
    else
      v13 = v11;
    sub_1D3454(a1, v13);
    v8 = *(_QWORD *)(a1 + 8);
  }
  v14 = (uint8x8_t)vcnt_s8((int8x8_t)v8);
  v14.i16[0] = vaddlv_u8(v14);
  v15 = v14.u32[0];
  if (v14.u32[0] > 1uLL)
  {
    v16 = a2;
    if (v8 <= a2)
      v16 = a2 % v8;
  }
  else
  {
    v16 = (v8 - 1) & a2;
  }
  v17 = *(unsigned __int8 **)(*(_QWORD *)a1 + 8 * v16);
  if (v17)
  {
    v18 = *(unsigned __int8 **)v17;
    if (*(_QWORD *)v17)
    {
      v19 = 0;
      do
      {
        v20 = *((_QWORD *)v18 + 1);
        if (v15 > 1)
        {
          v21 = *((_QWORD *)v18 + 1);
          if (v20 >= v8)
            v21 = v20 % v8;
        }
        else
        {
          v21 = v20 & (v8 - 1);
        }
        if (v21 != v16)
          break;
        v22 = v20 == a2 ? sub_1D2DC8(v6, v18 + 16, a3) : 0;
        if ((v19 & (v22 ^ 1) & 1) != 0)
          break;
        v19 |= v22;
        v17 = *(unsigned __int8 **)v17;
        v18 = *(unsigned __int8 **)v17;
      }
      while (*(_QWORD *)v17);
    }
  }
  return v17;
}

_QWORD *sub_1D336C(_QWORD *result, _QWORD *a2, _QWORD *a3)
{
  int8x8_t v3;
  unint64_t v4;
  uint8x8_t v5;
  unint64_t v6;

  v3 = (int8x8_t)result[1];
  v4 = a2[1];
  v5 = (uint8x8_t)vcnt_s8(v3);
  v5.i16[0] = vaddlv_u8(v5);
  if (v5.u32[0] > 1uLL)
  {
    if (v4 >= *(_QWORD *)&v3)
      v4 %= *(_QWORD *)&v3;
  }
  else
  {
    v4 &= *(_QWORD *)&v3 - 1;
  }
  if (!a3)
  {
    *a2 = result[2];
    result[2] = a2;
    *(_QWORD *)(*result + 8 * v4) = result + 2;
    if (!*a2)
      goto LABEL_19;
    v6 = *(_QWORD *)(*a2 + 8);
    if (v5.u32[0] > 1uLL)
    {
      if (v6 >= *(_QWORD *)&v3)
        v6 %= *(_QWORD *)&v3;
    }
    else
    {
      v6 &= *(_QWORD *)&v3 - 1;
    }
LABEL_18:
    *(_QWORD *)(*result + 8 * v6) = a2;
    goto LABEL_19;
  }
  *a2 = *a3;
  *a3 = a2;
  if (*a2)
  {
    v6 = *(_QWORD *)(*a2 + 8);
    if (v5.u32[0] > 1uLL)
    {
      if (v6 >= *(_QWORD *)&v3)
        v6 %= *(_QWORD *)&v3;
    }
    else
    {
      v6 &= *(_QWORD *)&v3 - 1;
    }
    if (v6 != v4)
      goto LABEL_18;
  }
LABEL_19:
  ++result[3];
  return result;
}

void sub_1D3454(uint64_t a1, size_t __n)
{
  size_t prime;
  int8x8_t v4;
  unint64_t v5;
  uint8x8_t v6;
  uint64_t v7;

  if (__n == 1)
  {
    prime = 2;
  }
  else
  {
    prime = __n;
    if ((__n & (__n - 1)) != 0)
      prime = std::__next_prime(__n);
  }
  v4 = *(int8x8_t *)(a1 + 8);
  if (prime > *(_QWORD *)&v4)
    goto LABEL_16;
  if (prime < *(_QWORD *)&v4)
  {
    v5 = vcvtps_u32_f32((float)*(unint64_t *)(a1 + 24) / *(float *)(a1 + 32));
    if (*(_QWORD *)&v4 < 3uLL || (v6 = (uint8x8_t)vcnt_s8(v4), v6.i16[0] = vaddlv_u8(v6), v6.u32[0] > 1uLL))
    {
      v5 = std::__next_prime(v5);
    }
    else
    {
      v7 = 1 << -(char)__clz(v5 - 1);
      if (v5 >= 2)
        v5 = v7;
    }
    if (prime <= v5)
      prime = v5;
    if (prime < *(_QWORD *)&v4)
LABEL_16:
      sub_1D3530(a1, prime);
  }
}

void sub_1D3530(uint64_t a1, unint64_t a2)
{
  void *v4;
  void *v5;
  uint64_t v6;
  unsigned __int8 **v7;
  unint64_t v8;
  uint8x8_t v9;
  unint64_t v10;
  void *v11;
  unsigned __int8 *v12;
  unint64_t v13;
  unsigned __int8 *v14;
  unsigned __int8 *v15;
  int v16;
  unsigned __int8 *v17;
  unint64_t v18;

  if (a2)
  {
    if (a2 >> 61)
      sub_36CEC();
    v4 = operator new(8 * a2);
    v5 = *(void **)a1;
    *(_QWORD *)a1 = v4;
    if (v5)
      operator delete(v5);
    v6 = 0;
    *(_QWORD *)(a1 + 8) = a2;
    do
      *(_QWORD *)(*(_QWORD *)a1 + 8 * v6++) = 0;
    while (a2 != v6);
    v7 = *(unsigned __int8 ***)(a1 + 16);
    if (v7)
    {
      v8 = (unint64_t)v7[1];
      v9 = (uint8x8_t)vcnt_s8((int8x8_t)a2);
      v9.i16[0] = vaddlv_u8(v9);
      v10 = v9.u32[0];
      if (v9.u32[0] > 1uLL)
      {
        if (v8 >= a2)
          v8 %= a2;
      }
      else
      {
        v8 &= a2 - 1;
      }
      *(_QWORD *)(*(_QWORD *)a1 + 8 * v8) = a1 + 16;
      v12 = *v7;
      if (*v7)
      {
        v18 = v9.u32[0];
        do
        {
          v13 = *((_QWORD *)v12 + 1);
          if (v10 > 1)
          {
            if (v13 >= a2)
              v13 %= a2;
          }
          else
          {
            v13 &= a2 - 1;
          }
          if (v13 == v8)
          {
            v7 = (unsigned __int8 **)v12;
          }
          else if (*(_QWORD *)(*(_QWORD *)a1 + 8 * v13))
          {
            v14 = *(unsigned __int8 **)v12;
            if (*(_QWORD *)v12)
            {
              v15 = v12;
              while (1)
              {
                v16 = sub_1D2DC8(a1 + 32, v12 + 16, v14 + 16);
                v17 = *(unsigned __int8 **)v15;
                if (!v16)
                  break;
                v14 = *(unsigned __int8 **)v17;
                v15 = *(unsigned __int8 **)v15;
                if (!*(_QWORD *)v17)
                  goto LABEL_32;
              }
              v14 = *(unsigned __int8 **)v15;
              v17 = v15;
LABEL_32:
              v10 = v18;
            }
            else
            {
              v17 = v12;
            }
            *v7 = v14;
            *(_QWORD *)v17 = **(_QWORD **)(*(_QWORD *)a1 + 8 * v13);
            **(_QWORD **)(*(_QWORD *)a1 + 8 * v13) = v12;
          }
          else
          {
            *(_QWORD *)(*(_QWORD *)a1 + 8 * v13) = v7;
            v7 = (unsigned __int8 **)v12;
            v8 = v13;
          }
          v12 = *v7;
        }
        while (*v7);
      }
    }
  }
  else
  {
    v11 = *(void **)a1;
    *(_QWORD *)a1 = 0;
    if (v11)
      operator delete(v11);
    *(_QWORD *)(a1 + 8) = 0;
  }
}

_QWORD *sub_1D36FC(_QWORD *a1, __int128 *a2)
{
  _QWORD *v4;
  __int128 v5;
  uint64_t v6;
  uint64_t v7;

  v4 = operator new(0x30uLL);
  v5 = *a2;
  *(_QWORD *)a2 = 0;
  *((_QWORD *)a2 + 1) = 0;
  v6 = *((_QWORD *)a2 + 2);
  v7 = *((_QWORD *)a2 + 3);
  *((_QWORD *)a2 + 2) = 0;
  *v4 = 0;
  v4[1] = 0;
  *((_OWORD *)v4 + 1) = v5;
  v4[4] = v6;
  v4[5] = v7;
  v4[1] = sub_1D2920((uint64_t)(a1 + 3), (uint64_t)(v4 + 2));
  return sub_1D319C(a1, v4);
}

void sub_1D3788(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  void **v10;
  uint64_t v11;

  sub_1D30A0(v11, v10);
  _Unwind_Resume(a1);
}

_QWORD *sub_1D37A4(_QWORD *a1, unint64_t *a2)
{
  int8x8_t v2;
  unint64_t v3;
  uint8x8_t v4;
  unint64_t v5;
  _QWORD *v6;
  _QWORD *result;
  unint64_t v8;

  v2 = (int8x8_t)a1[1];
  if (!*(_QWORD *)&v2)
    return 0;
  v3 = *a2;
  v4 = (uint8x8_t)vcnt_s8(v2);
  v4.i16[0] = vaddlv_u8(v4);
  if (v4.u32[0] > 1uLL)
  {
    v5 = *a2;
    if (v3 >= *(_QWORD *)&v2)
      v5 = v3 % *(_QWORD *)&v2;
  }
  else
  {
    v5 = (*(_QWORD *)&v2 - 1) & v3;
  }
  v6 = *(_QWORD **)(*a1 + 8 * v5);
  if (!v6)
    return 0;
  result = (_QWORD *)*v6;
  if (*v6)
  {
    do
    {
      v8 = result[1];
      if (v8 == v3)
      {
        if (result[2] == v3)
          return result;
      }
      else
      {
        if (v4.u32[0] > 1uLL)
        {
          if (v8 >= *(_QWORD *)&v2)
            v8 %= *(_QWORD *)&v2;
        }
        else
        {
          v8 &= *(_QWORD *)&v2 - 1;
        }
        if (v8 != v5)
          return 0;
      }
      result = (_QWORD *)*result;
    }
    while (result);
  }
  return result;
}

_QWORD *sub_1D3858(uint64_t a1, unint64_t *a2, uint64_t a3, _QWORD **a4)
{
  unint64_t v4;
  unint64_t v7;
  unint64_t v8;
  uint8x8_t v9;
  _QWORD **v10;
  _QWORD *i;
  unint64_t v12;
  float v13;
  float v14;
  _BOOL8 v15;
  unint64_t v16;
  unint64_t v17;
  size_t v18;
  uint64_t v19;
  _QWORD *v20;
  unint64_t v21;

  v7 = *a2;
  v8 = *(_QWORD *)(a1 + 8);
  if (v8)
  {
    v9 = (uint8x8_t)vcnt_s8((int8x8_t)v8);
    v9.i16[0] = vaddlv_u8(v9);
    if (v9.u32[0] > 1uLL)
    {
      v4 = *a2;
      if (v7 >= v8)
        v4 = v7 % v8;
    }
    else
    {
      v4 = (v8 - 1) & v7;
    }
    v10 = *(_QWORD ***)(*(_QWORD *)a1 + 8 * v4);
    if (v10)
    {
      for (i = *v10; i; i = (_QWORD *)*i)
      {
        v12 = i[1];
        if (v12 == v7)
        {
          if (i[2] == v7)
            return i;
        }
        else
        {
          if (v9.u32[0] > 1uLL)
          {
            if (v12 >= v8)
              v12 %= v8;
          }
          else
          {
            v12 &= v8 - 1;
          }
          if (v12 != v4)
            break;
        }
      }
    }
  }
  i = operator new(0x28uLL);
  *i = 0;
  i[1] = v7;
  i[2] = **a4;
  i[3] = 0;
  i[4] = 0;
  v13 = (float)(unint64_t)(*(_QWORD *)(a1 + 24) + 1);
  v14 = *(float *)(a1 + 32);
  if (!v8 || (float)(v14 * (float)v8) < v13)
  {
    v15 = 1;
    if (v8 >= 3)
      v15 = (v8 & (v8 - 1)) != 0;
    v16 = v15 | (2 * v8);
    v17 = vcvtps_u32_f32(v13 / v14);
    if (v16 <= v17)
      v18 = v17;
    else
      v18 = v16;
    sub_1D2E6C(a1, v18);
    v8 = *(_QWORD *)(a1 + 8);
    if ((v8 & (v8 - 1)) != 0)
    {
      if (v7 >= v8)
        v4 = v7 % v8;
      else
        v4 = v7;
    }
    else
    {
      v4 = (v8 - 1) & v7;
    }
  }
  v19 = *(_QWORD *)a1;
  v20 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v4);
  if (v20)
  {
    *i = *v20;
LABEL_38:
    *v20 = i;
    goto LABEL_39;
  }
  *i = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = i;
  *(_QWORD *)(v19 + 8 * v4) = a1 + 16;
  if (*i)
  {
    v21 = *(_QWORD *)(*i + 8);
    if ((v8 & (v8 - 1)) != 0)
    {
      if (v21 >= v8)
        v21 %= v8;
    }
    else
    {
      v21 &= v8 - 1;
    }
    v20 = (_QWORD *)(*(_QWORD *)a1 + 8 * v21);
    goto LABEL_38;
  }
LABEL_39:
  ++*(_QWORD *)(a1 + 24);
  return i;
}

void sub_1D3A64(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1D3A78(_QWORD *a1, uint64_t *a2)
{
  uint64_t v2;
  void *v3;
  void *__p;

  v2 = *a2;
  sub_1D3AB8(a1, a2, (uint64_t)&__p);
  v3 = __p;
  __p = 0;
  if (v3)
    operator delete(v3);
  return v2;
}

_QWORD *sub_1D3AB8@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  int8x8_t v3;
  unint64_t v4;
  uint8x8_t v5;
  _QWORD *v6;
  _QWORD *v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;

  v3 = (int8x8_t)result[1];
  v4 = a2[1];
  v5 = (uint8x8_t)vcnt_s8(v3);
  v5.i16[0] = vaddlv_u8(v5);
  if (v5.u32[0] > 1uLL)
  {
    if (v4 >= *(_QWORD *)&v3)
      v4 %= *(_QWORD *)&v3;
  }
  else
  {
    v4 &= *(_QWORD *)&v3 - 1;
  }
  v6 = *(_QWORD **)(*result + 8 * v4);
  do
  {
    v7 = v6;
    v6 = (_QWORD *)*v6;
  }
  while (v6 != a2);
  if (v7 == result + 2)
    goto LABEL_18;
  v8 = v7[1];
  if (v5.u32[0] > 1uLL)
  {
    if (v8 >= *(_QWORD *)&v3)
      v8 %= *(_QWORD *)&v3;
  }
  else
  {
    v8 &= *(_QWORD *)&v3 - 1;
  }
  if (v8 != v4)
  {
LABEL_18:
    if (!*a2)
      goto LABEL_19;
    v9 = *(_QWORD *)(*a2 + 8);
    if (v5.u32[0] > 1uLL)
    {
      if (v9 >= *(_QWORD *)&v3)
        v9 %= *(_QWORD *)&v3;
    }
    else
    {
      v9 &= *(_QWORD *)&v3 - 1;
    }
    if (v9 != v4)
LABEL_19:
      *(_QWORD *)(*result + 8 * v4) = 0;
  }
  v10 = *a2;
  if (*a2)
  {
    v11 = *(_QWORD *)(v10 + 8);
    if (v5.u32[0] > 1uLL)
    {
      if (v11 >= *(_QWORD *)&v3)
        v11 %= *(_QWORD *)&v3;
    }
    else
    {
      v11 &= *(_QWORD *)&v3 - 1;
    }
    if (v11 != v4)
    {
      *(_QWORD *)(*result + 8 * v11) = v7;
      v10 = *a2;
    }
  }
  *v7 = v10;
  *a2 = 0;
  --result[3];
  *(_QWORD *)a3 = a2;
  *(_QWORD *)(a3 + 8) = result + 2;
  *(_BYTE *)(a3 + 16) = 1;
  return result;
}

uint64_t sub_1D3BEC(uint64_t a1, unint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;

  if (a2 >= 0x7FFFFFFFFFFFFFF8)
    sub_1CEEF4();
  if (a2 > 0x16)
  {
    v4 = (a2 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((a2 | 7) != 0x17)
      v4 = a2 | 7;
    v5 = v4 + 1;
    v6 = operator new(v4 + 1);
    *(_QWORD *)(a1 + 8) = a2;
    *(_QWORD *)(a1 + 16) = v5 | 0x8000000000000000;
    *(_QWORD *)a1 = v6;
  }
  else
  {
    *(_QWORD *)(a1 + 8) = 0;
    *(_QWORD *)(a1 + 16) = 0;
    *(_QWORD *)a1 = 0;
    *(_BYTE *)(a1 + 23) = a2;
  }
  return a1;
}

unsigned __int8 *sub_1D3C70(_QWORD *a1, unsigned __int8 *a2)
{
  unint64_t v4;
  int8x8_t v5;
  unint64_t v6;
  uint8x8_t v7;
  unint64_t v8;
  unint64_t v9;
  unsigned __int8 **v10;
  unsigned __int8 *v11;
  uint64_t v12;
  unint64_t v13;

  v4 = sub_1D2920((uint64_t)(a1 + 3), (uint64_t)a2);
  v5 = (int8x8_t)a1[1];
  if (!*(_QWORD *)&v5)
    return 0;
  v6 = v4;
  v7 = (uint8x8_t)vcnt_s8(v5);
  v7.i16[0] = vaddlv_u8(v7);
  v8 = v7.u32[0];
  if (v7.u32[0] > 1uLL)
  {
    v9 = v4;
    if (v4 >= *(_QWORD *)&v5)
      v9 = v4 % *(_QWORD *)&v5;
  }
  else
  {
    v9 = (*(_QWORD *)&v5 - 1) & v4;
  }
  v10 = *(unsigned __int8 ***)(*a1 + 8 * v9);
  if (!v10)
    return 0;
  v11 = *v10;
  if (*v10)
  {
    v12 = (uint64_t)(a1 + 4);
    do
    {
      v13 = *((_QWORD *)v11 + 1);
      if (v13 == v6)
      {
        if ((sub_1D2DC8(v12, v11 + 16, a2) & 1) != 0)
          return v11;
      }
      else
      {
        if (v8 > 1)
        {
          if (v13 >= *(_QWORD *)&v5)
            v13 %= *(_QWORD *)&v5;
        }
        else
        {
          v13 &= *(_QWORD *)&v5 - 1;
        }
        if (v13 != v9)
          return 0;
      }
      v11 = *(unsigned __int8 **)v11;
    }
    while (v11);
  }
  return v11;
}

uint64_t sub_1D3D70(uint64_t a1)
{
  void *v2;

  sub_1D2654(a1, *(void ***)(a1 + 16));
  v2 = *(void **)a1;
  *(_QWORD *)a1 = 0;
  if (v2)
    operator delete(v2);
  return a1;
}

uint64_t sub_1D3DA8(uint64_t a1)
{
  _QWORD *v2;
  _QWORD *v3;
  void *v4;

  v2 = *(_QWORD **)(a1 + 16);
  if (v2)
  {
    do
    {
      v3 = (_QWORD *)*v2;
      operator delete(v2);
      v2 = v3;
    }
    while (v3);
  }
  v4 = *(void **)a1;
  *(_QWORD *)a1 = 0;
  if (v4)
    operator delete(v4);
  return a1;
}

unsigned __int8 *sub_1D3DF0(_QWORD *a1, unsigned __int8 *a2)
{
  unsigned __int8 *v4;
  unsigned __int8 *v5;
  uint64_t v6;
  unsigned __int8 *v7;

  v4 = sub_1D3C70(a1, a2);
  v5 = v4;
  if (v4)
  {
    v6 = (uint64_t)(a1 + 4);
    v7 = v4;
    do
      v7 = *(unsigned __int8 **)v7;
    while (v7 && (sub_1D2DC8(v6, v7 + 16, a2) & 1) != 0);
  }
  return v5;
}

void sub_1D3F38(void *exc_buf, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  id v16;
  uint64_t v17;

  if (a2 == 2)
  {
    v16 = objc_begin_catch(exc_buf);
    v17 = PFSSemanticException;
    objc_msgSend(v16, "name");
    objc_msgSend(v16, "reason");
    +[NSDictionary dictionaryWithObjectsAndKeys:](NSDictionary, "dictionaryWithObjectsAndKeys:", v17);
    objc_end_catch();
    JUMPOUT(0x1D3EFCLL);
  }
  objc_begin_catch(exc_buf);
  objc_exception_rethrow();
}

void sub_1D3FD8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  objc_end_catch();
  PFSStyleParserHandler::~PFSStyleParserHandler((id *)va);
  _Unwind_Resume(a1);
}

uint64_t PFSStyleParserHandler::dictionary(PFSStyleParserHandler *this)
{
  return *((_QWORD *)this + 4);
}

uint64_t PFSStyleParserHandler::fonts(PFSStyleParserHandler *this)
{
  return *((_QWORD *)this + 6);
}

uint64_t PFSStyleParserHandler::errMsg(PFSStyleParserHandler *this)
{
  return *((_QWORD *)this + 9);
}

void PFSStyleParserHandler::PFSStyleParserHandler(PFSStyleParserHandler *this, const char *a2, NSURL *a3, PFSPageCache *a4)
{
  operator new();
}

void sub_1D430C()
{
  operator delete();
}

void PFSStyleParserHandler::~PFSStyleParserHandler(id *this)
{
  id v2;

  v2 = *this;
  if (v2)
  {
    (*(void (**)(id))(*(_QWORD *)v2 + 8))(v2);
    *this = 0;
  }

}

uint64_t PFSStyleParserHandler::currentDictionary(PFSStyleParserHandler *this)
{
  return *((_QWORD *)this + 5);
}

NSMutableDictionary *PFSStyleParserHandler::setCurrentDictionary(NSMutableDictionary *this, NSMutableDictionary *a2)
{
  NSMutableDictionary *isa;
  NSMutableDictionary *v4;

  isa = (NSMutableDictionary *)this[5].super.super.isa;
  if (isa != a2)
  {
    v4 = this;

    this = a2;
    v4[5].super.super.isa = (Class)this;
  }
  return this;
}

uint64_t PFSStyleParserHandler::currentFontDictionary(PFSStyleParserHandler *this)
{
  return *((_QWORD *)this + 7);
}

NSMutableDictionary *PFSStyleParserHandler::setCurrentFontDictionary(NSMutableDictionary *this, NSMutableDictionary *a2)
{
  NSMutableDictionary *isa;
  NSMutableDictionary *v4;

  isa = (NSMutableDictionary *)this[7].super.super.isa;
  if (isa != a2)
  {
    v4 = this;

    this = a2;
    v4[7].super.super.isa = (Class)this;
  }
  return this;
}

id PFSStyleParserHandler::setErrMsg(id *this, const char *a2)
{
  id result;

  result = objc_msgSend(objc_alloc((Class)NSString), "initWithUTF8String:", a2);
  this[9] = result;
  return result;
}

uint64_t PFSStyleParserHandler::lexer(PFSStyleParserHandler *this)
{
  return *(_QWORD *)this;
}

void PFSStyleParserHandler::importHandler(PFSStyleParserHandler *this, NSString *a2, NSArray *a3)
{
  id v6;
  void *v7;
  id v8;
  id v9;

  if (!a3
    || !-[NSArray count](a3, "count")
    || +[PFSStyleParser mediaListIncludesScreen:](PFSStyleParser, "mediaListIncludesScreen:", a3))
  {
    v6 = +[PFXCommon dataWithContentsOfURLString:sourceUrl:](PFXCommon, "dataWithContentsOfURLString:sourceUrl:", a2, *((_QWORD *)this + 8));
    if (v6)
    {
      v7 = v6;
      if (objc_msgSend(v6, "length"))
      {
        v8 = objc_alloc_init((Class)NSMutableDictionary);
        v9 = objc_alloc_init((Class)NSMutableDictionary);
        +[PFSStyleParser parseCSSFrom:intoDict:fontDict:sourceUrl:pageCache:](PFSStyleParser, "parseCSSFrom:intoDict:fontDict:sourceUrl:pageCache:", objc_msgSend(v7, "bytes"), v8, v9, *((_QWORD *)this + 8), *((_QWORD *)this + 1));
        +[PFSStyleParser mergeCSSDict:intoCSSDict:](PFSStyleParser, "mergeCSSDict:intoCSSDict:", v8, *((_QWORD *)this + 4));
        +[PFSStyleParser mergeFontDict:intoFontDict:](PFSStyleParser, "mergeFontDict:intoFontDict:", v9, *((_QWORD *)this + 6));

      }
    }
  }
}

BOOL PFSStyleParserHandler::startMediaHandler(PFSStyleParserHandler *this, NSArray *a2)
{
  _BOOL8 result;

  result = +[PFSStyleParser mediaListIncludesScreen:](PFSStyleParser, "mediaListIncludesScreen:", a2);
  if (!result)
    *((_BYTE *)this + 88) = 1;
  return result;
}

uint64_t PFSStyleParserHandler::endMediaHandler(uint64_t this, NSArray *a2)
{
  *(_BYTE *)(this + 88) = 0;
  return this;
}

id *PFSStyleParserHandler::startMasterPageHandler(id *this, NSString *a2, NSString *a3)
{
  id *v3;

  if (!a3)
  {
    v3 = this;
    this = (id *)objc_msgSend(this[1], "addMasterPageWithName:", a2);
    v3[2] = this;
  }
  return this;
}

uint64_t PFSStyleParserHandler::endMasterPageHandler(uint64_t this)
{
  *(_QWORD *)(this + 16) = 0;
  return this;
}

id PFSStyleParserHandler::startRegularPageHandler(id *this)
{
  id result;

  result = objc_msgSend(this[1], "addPage");
  this[2] = result;
  return result;
}

uint64_t PFSStyleParserHandler::endRegularPageHandler(uint64_t this)
{
  *(_QWORD *)(this + 16) = 0;
  return this;
}

id PFSStyleParserHandler::startSlotHandler(id *this, NSString *a2)
{
  id result;

  result = objc_msgSend(this[2], "addSlotWithId:", a2);
  this[3] = result;
  return result;
}

uint64_t PFSStyleParserHandler::endSlotHandler(uint64_t this)
{
  *(_QWORD *)(this + 24) = 0;
  return this;
}

void PFSStyleParserHandler::positionedSlotsHandler(id *this, NSArray *a2)
{
  id v4;
  id v5;
  id v6;
  uint64_t v7;
  void *i;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  id v13;
  id v14;
  uint64_t v15;
  void *j;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  _BYTE v26[128];
  _BYTE v27[128];

  v4 = objc_msgSend(objc_alloc((Class)NSMutableSet), "initWithCapacity:", -[NSArray count](a2, "count"));
  if (-[NSArray count](a2, "count"))
  {
    v24 = 0u;
    v25 = 0u;
    v22 = 0u;
    v23 = 0u;
    v5 = -[NSArray countByEnumeratingWithState:objects:count:](a2, "countByEnumeratingWithState:objects:count:", &v22, v27, 16);
    if (v5)
    {
      v6 = v5;
      v7 = *(_QWORD *)v23;
      do
      {
        for (i = 0; i != v6; i = (char *)i + 1)
        {
          if (*(_QWORD *)v23 != v7)
            objc_enumerationMutation(a2);
          v9 = *(void **)(*((_QWORD *)&v22 + 1) + 8 * (_QWORD)i);
          v10 = objc_opt_class(NSString);
          if ((objc_opt_isKindOfClass(v9, v10) & 1) != 0)
          {
            objc_msgSend(v4, "addObject:", v9);
          }
          else
          {
            v11 = objc_opt_class(NSArray);
            if ((objc_opt_isKindOfClass(v9, v11) & 1) != 0)
            {
              objc_msgSend(this[2], "addFlow:", v9);
              objc_msgSend(v4, "addObjectsFromArray:", objc_msgSend(v9, "subarrayWithRange:", 0, (char *)objc_msgSend(v9, "count") - 1));
            }
          }
        }
        v6 = -[NSArray countByEnumeratingWithState:objects:count:](a2, "countByEnumeratingWithState:objects:count:", &v22, v27, 16);
      }
      while (v6);
    }
    v20 = 0u;
    v21 = 0u;
    v18 = 0u;
    v19 = 0u;
    v12 = objc_msgSend(objc_msgSend(this[2], "slots", 0), "allKeys");
    v13 = objc_msgSend(v12, "countByEnumeratingWithState:objects:count:", &v18, v26, 16);
    if (v13)
    {
      v14 = v13;
      v15 = *(_QWORD *)v19;
      do
      {
        for (j = 0; j != v14; j = (char *)j + 1)
        {
          if (*(_QWORD *)v19 != v15)
            objc_enumerationMutation(v12);
          v17 = *(_QWORD *)(*((_QWORD *)&v18 + 1) + 8 * (_QWORD)j);
          if ((objc_msgSend(v4, "containsObject:", v17) & 1) == 0)
            objc_msgSend(objc_msgSend(this[2], "slots"), "removeObjectForKey:", v17);
        }
        v14 = objc_msgSend(v12, "countByEnumeratingWithState:objects:count:", &v18, v26, 16);
      }
      while (v14);
    }
  }
  else
  {
    objc_msgSend(objc_msgSend(this[2], "slots"), "removeAllObjects");
  }

}

void PFSStyleParserHandler::startFontFaceHandler(NSMutableDictionary *this)
{
  NSMutableDictionary *v2;

  v2 = (NSMutableDictionary *)objc_alloc_init((Class)NSMutableDictionary);
  PFSStyleParserHandler::setCurrentFontDictionary(this, v2);

}

NSMutableDictionary *PFSStyleParserHandler::endFontFaceHandler(NSMutableDictionary *this)
{
  uint64_t v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  double v8;
  uint64_t v9;
  void *v10;
  void *v11;
  uint64_t v12;
  double v13;
  uint64_t v14;
  const __CFString *v15;
  uint64_t v16;
  void *v17;
  void *v18;
  uint64_t v19;
  double v20;
  void *v21;
  void *v22;
  id v23;
  NSMutableString *v24;
  NSMutableString *v25;
  id v26;

  v2 = objc_opt_class(NSArray);
  TSUDynamicCast(v2, -[objc_class objectForKey:](this[7].super.super.isa, "objectForKey:", CFSTR("font-weight")));
  if (v3
    && (v4 = v3, v5 = objc_opt_class(PFSPair), TSUDynamicCast(v5, objc_msgSend(v4, "lastObject")), v6))
  {
    +[PFSUtilities fontWeightFromHtmlStr:parentWeight:](PFSUtilities, "fontWeightFromHtmlStr:parentWeight:", v6, 400.0);
    v8 = v7;
  }
  else
  {
    v8 = 400.0;
  }
  v9 = objc_opt_class(NSArray);
  TSUDynamicCast(v9, -[objc_class objectForKey:](this[7].super.super.isa, "objectForKey:", CFSTR("font-style")));
  if (v10)
  {
    v11 = v10;
    v12 = objc_opt_class(PFSPair);
    *(_QWORD *)&v13 = TSUDynamicCast(v12, objc_msgSend(v11, "lastObject")).n128_u64[0];
    v15 = +[PFSUtilities identValueOrNilFromPair:](PFSUtilities, "identValueOrNilFromPair:", v14, v13);
  }
  else
  {
    v15 = CFSTR("normal");
  }
  v16 = objc_opt_class(NSArray);
  TSUDynamicCast(v16, -[objc_class objectForKey:](this[7].super.super.isa, "objectForKey:", CFSTR("font-family")));
  if (v17)
  {
    v18 = v17;
    v19 = objc_opt_class(PFSPair);
    *(_QWORD *)&v20 = TSUDynamicCast(v19, objc_msgSend(v18, "lastObject")).n128_u64[0];
    v22 = v21;
    if (objc_msgSend(v21, "type", v20) == &stru_108 || objc_msgSend(v22, "type") == (char *)&stru_B8.reserved3 + 3)
    {
      v23 = objc_msgSend(v22, "stringValue");
      if (v23)
      {
        v24 = +[NSMutableString stringWithString:](NSMutableString, "stringWithString:", v23);
        v25 = v24;
        if (v8 != -65536.0)
          -[NSMutableString appendFormat:](v24, "appendFormat:", CFSTR("%f"), *(_QWORD *)&v8);
        if (v15)
          -[NSMutableString appendString:](v25, "appendString:", v15);
        v26 = objc_msgSend(objc_alloc((Class)NSDictionary), "initWithObjectsAndKeys:", this[7].super.super.isa, v25, 0);
        +[PFSStyleParser mergeFontDict:intoFontDict:](PFSStyleParser, "mergeFontDict:intoFontDict:", v26, this[6].super.super.isa);

      }
    }
  }
  return PFSStyleParserHandler::setCurrentFontDictionary(this, 0);
}

void PFSStyleParserHandler::startSelectorHandler(NSMutableDictionary *this, NSArray *a2)
{
  NSEnumerator *v4;
  id v5;
  id v6;
  NSMutableDictionary *v7;

  if (!LOBYTE(this[11].super.super.isa))
  {
    v7 = (NSMutableDictionary *)objc_alloc_init((Class)NSMutableDictionary);
    v4 = -[NSArray objectEnumerator](a2, "objectEnumerator");
    v5 = -[NSEnumerator nextObject](v4, "nextObject");
    if (v5)
    {
      v6 = v5;
      do
      {
        objc_msgSend(v6, "freeze");
        -[NSMutableDictionary setObject:forKey:](v7, "setObject:forKey:", +[NSMutableDictionary dictionary](NSMutableDictionary, "dictionary"), v6);
        v6 = -[NSEnumerator nextObject](v4, "nextObject");
      }
      while (v6);
    }
    PFSStyleParserHandler::setCurrentDictionary(this, v7);

  }
}

NSMutableDictionary *PFSStyleParserHandler::endSelectorHandler(NSMutableDictionary *this, NSArray *a2)
{
  NSMutableDictionary *v2;

  if (!LOBYTE(this[11].super.super.isa))
  {
    v2 = this;
    +[PFSStyleParser mergeCSSDict:intoCSSDict:](PFSStyleParser, "mergeCSSDict:intoCSSDict:", v2[5].super.super.isa, v2[4].super.super.isa);
    return PFSStyleParserHandler::setCurrentDictionary(v2, 0);
  }
  return this;
}

id PFSStyleParserHandler::propertyHandler(PFSStyleParserHandler *this, const char *a2, NSArray *a3)
{
  void *v6;
  id result;
  id v8;
  NSString *v9;
  void *v10;
  NSString *v11;
  id v12;
  id v13;

  v6 = (void *)*((_QWORD *)this + 3);
  if (v6)
    return objc_msgSend(v6, "addPropertyValue:forProperty:", a3, a2);
  result = (id)*((_QWORD *)this + 2);
  if (result)
  {
    v8 = objc_msgSend(result, "properties");
    v9 = +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", a2);
    v10 = v8;
    return objc_msgSend(v10, "setObject:forKey:", a3, v9);
  }
  if (*((_QWORD *)this + 5))
  {
    v11 = +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", a2);
    v12 = objc_msgSend(objc_msgSend(*((id *)this + 5), "allKeys"), "objectEnumerator");
    result = objc_msgSend(v12, "nextObject");
    if (result)
    {
      v13 = result;
      do
      {
        objc_msgSend(objc_msgSend(*((id *)this + 5), "objectForKey:", v13), "setObject:forKey:", a3, v11);
        result = objc_msgSend(v12, "nextObject");
        v13 = result;
      }
      while (result);
    }
  }
  else if (*((_QWORD *)this + 7))
  {
    v9 = +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", a2);
    v10 = (void *)*((_QWORD *)this + 7);
    return objc_msgSend(v10, "setObject:forKey:", a3, v9);
  }
  return result;
}

uint64_t PFSStyleParserHandler::nextSelectorParseIndex(PFSStyleParserHandler *this)
{
  uint64_t v1;

  v1 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = v1 + 1;
  return v1;
}

id PFSStyleParserHandler::newFullUri(PFSStyleParserHandler *this, NSString *a2)
{
  return +[PFSStyleParser newFullUri:sourceUrl:](PFSStyleParser, "newFullUri:sourceUrl:", a2, *((_QWORD *)this + 8));
}

void PFSStyleSimpleSelector::PFSStyleSimpleSelector(PFSStyleSimpleSelector *this)
{
  *(_QWORD *)this = this;
  *((_QWORD *)this + 1) = this;
  *((_OWORD *)this + 1) = xmmword_3157A0;
  *((_BYTE *)this + 32) = 0;
  *((_DWORD *)this + 9) = 0;
}

{
  *(_QWORD *)this = this;
  *((_QWORD *)this + 1) = this;
  *((_OWORD *)this + 1) = xmmword_3157A0;
  *((_BYTE *)this + 32) = 0;
  *((_DWORD *)this + 9) = 0;
}

void PFSStyleSimpleSelector::~PFSStyleSimpleSelector(PFSStyleSimpleSelector *this)
{
  uint64_t i;

  for (i = *((_QWORD *)this + 1); (PFSStyleSimpleSelector *)i != this; i = *(_QWORD *)(i + 8))
    free(*(void **)(i + 16));
  sub_1C959C(this);
}

uint64_t PFSStyleSimpleSelector::freeze(uint64_t this)
{
  *(_BYTE *)(this + 32) = 1;
  return this;
}

uint64_t PFSStyleSimpleSelector::specificity(PFSStyleSimpleSelector *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t PFSStyleSimpleSelector::hash(PFSStyleSimpleSelector *this)
{
  return *((_QWORD *)this + 3);
}

uint64_t PFSStyleSimpleSelector::frozen(PFSStyleSimpleSelector *this)
{
  return *((unsigned __int8 *)this + 32);
}

_QWORD *PFSStyleSimpleSelector::setElement(PFSStyleSimpleSelector *this, char *__s)
{
  return sub_1D4F50((uint64_t *)this, 33, __s, 1);
}

_QWORD *sub_1D4F50(uint64_t *a1, char a2, char *__s, char a4)
{
  size_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  size_t v12;
  char *v13;
  uint64_t *v14;
  _QWORD *result;
  uint64_t v16;
  uint64_t v17;

  v8 = strlen(__s);
  v9 = a1[3];
  if (v8)
  {
    v10 = __s;
    do
    {
      v11 = *v10++;
      v9 = 16777619 * (v9 ^ v11);
      --v8;
    }
    while (v8);
  }
  a1[3] = v9;
  *((_DWORD *)a1 + 9) += 1 << (8 * a4);
  v12 = strlen(__s);
  v13 = (char *)malloc_type_malloc(v12 + 2, 0x25203452uLL);
  *v13 = a2;
  strcpy(v13 + 1, __s);
  v14 = a1;
  while (1)
  {
    v14 = (uint64_t *)v14[1];
    if (v14 == a1)
      break;
    if (strcmp(v13, (const char *)v14[2]) < 0)
    {
      result = operator new(0x18uLL);
      result[2] = v13;
      v16 = *v14;
      *(_QWORD *)(v16 + 8) = result;
      *result = v16;
      *v14 = (uint64_t)result;
      result[1] = v14;
      goto LABEL_9;
    }
  }
  result = operator new(0x18uLL);
  result[2] = v13;
  v17 = *a1;
  *(_QWORD *)(v17 + 8) = result;
  *a1 = (uint64_t)result;
  *result = v17;
  result[1] = a1;
LABEL_9:
  ++a1[2];
  return result;
}

_QWORD *PFSStyleSimpleSelector::addHashIdentifier(PFSStyleSimpleSelector *this, char *__s)
{
  return sub_1D4F50((uint64_t *)this, 35, __s, 3);
}

_QWORD *PFSStyleSimpleSelector::addPseudoClass(PFSStyleSimpleSelector *this, NSString *a2)
{
  return sub_1D4F50((uint64_t *)this, 37, (char *)-[NSString UTF8String](a2, "UTF8String"), 2);
}

_QWORD *PFSStyleSimpleSelector::addAttrib(PFSStyleSimpleSelector *this, char *__s)
{
  return sub_1D4F50((uint64_t *)this, 36, __s, 2);
}

uint64_t *PFSStyleSimpleSelector::addClass(uint64_t *this, char *__s)
{
  if (*__s)
    return sub_1D4F50(this, 46, __s, 2);
  return this;
}

BOOL PFSStyleSimpleSelector::isEqualTo(PFSStyleSimpleSelector *this, const PFSStyleSimpleSelector *a2)
{
  const PFSStyleSimpleSelector *v4;
  PFSStyleSimpleSelector *v5;

  if (*((_QWORD *)this + 3) != *((_QWORD *)a2 + 3))
    return 0;
  v4 = a2;
  v5 = this;
  while (1)
  {
    v5 = (PFSStyleSimpleSelector *)*((_QWORD *)v5 + 1);
    v4 = (const PFSStyleSimpleSelector *)*((_QWORD *)v4 + 1);
    if (v5 == this || v4 == a2)
      break;
    if (strcmp(*((const char **)v5 + 2), *((const char **)v4 + 2)))
      return 0;
  }
  return v5 == this && v4 == a2;
}

BOOL PFSStyleSimpleSelector::isSubsetOf(PFSStyleSimpleSelector *this, const PFSStyleSimpleSelector *a2)
{
  const PFSStyleSimpleSelector *v4;
  PFSStyleSimpleSelector *v5;
  const char *v6;
  const char *v7;

  v4 = a2;
  v5 = this;
LABEL_2:
  v5 = (PFSStyleSimpleSelector *)*((_QWORD *)v5 + 1);
  if (v5 != this)
  {
    while (1)
    {
      v4 = (const PFSStyleSimpleSelector *)*((_QWORD *)v4 + 1);
      if (v4 == a2)
        break;
      v6 = (const char *)*((_QWORD *)v4 + 2);
      v7 = (const char *)*((_QWORD *)v5 + 2);
      if ((strcmp(v6, v7) & 0x80000000) == 0)
      {
        if ((strcmp(v7, v6) & 0x80000000) == 0)
          goto LABEL_2;
        return v5 == this;
      }
    }
  }
  return v5 == this;
}

char *sub_1D6818(uint64_t a1, char *__src, unint64_t a3, char *a4)
{
  char *v4;
  char *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _BYTE *v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  char *v23;
  char *v24;
  uint64_t v25;
  unint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  char *v30;
  void *__p;
  char *v33;
  char *v34;
  char *v35;
  uint64_t v36;

  v4 = __src;
  if (a3)
  {
    v5 = a4;
    v10 = *(_QWORD *)(a1 + 16);
    v8 = a1 + 16;
    v9 = v10;
    v11 = *(char **)(v8 - 8);
    if (a3 <= (v10 - (uint64_t)v11) >> 3)
    {
      v18 = v11 - __src;
      if (a3 <= (v11 - __src) >> 3)
      {
        v21 = *(char **)(v8 - 8);
        v20 = a3;
      }
      else
      {
        v19 = 0;
        v20 = v18 >> 3;
        v21 = &v11[8 * (a3 - (v18 >> 3))];
        do
        {
          *(_QWORD *)&v11[v19] = *(_QWORD *)a4;
          v19 += 8;
        }
        while (8 * a3 - 8 * v20 != v19);
        *(_QWORD *)(a1 + 8) = v21;
        if (v11 == __src)
          return v4;
      }
      v22 = &__src[8 * a3];
      v23 = &v21[-8 * a3];
      v24 = v21;
      if (v23 < v11)
      {
        v24 = v21;
        do
        {
          v25 = *(_QWORD *)v23;
          v23 += 8;
          *(_QWORD *)v24 = v25;
          v24 += 8;
        }
        while (v23 < v11);
      }
      *(_QWORD *)(a1 + 8) = v24;
      if (v21 != v22)
        memmove(&v21[-8 * ((v21 - v22) >> 3)], __src, v21 - v22);
      if (v4 <= v5)
      {
        if (*(_QWORD *)(a1 + 8) <= (unint64_t)v5)
          v26 = 0;
        else
          v26 = a3;
        v5 += 8 * v26;
      }
      v27 = v4;
      do
      {
        *(_QWORD *)v27 = *(_QWORD *)v5;
        v27 += 8;
        --v20;
      }
      while (v20);
    }
    else
    {
      v12 = *(_BYTE **)a1;
      v13 = a3 + ((uint64_t)&v11[-*(_QWORD *)a1] >> 3);
      if (v13 >> 61)
        sub_36C30();
      v14 = (__src - v12) >> 3;
      v15 = v9 - (_QWORD)v12;
      if (v15 >> 2 > v13)
        v13 = v15 >> 2;
      if ((unint64_t)v15 >= 0x7FFFFFFFFFFFFFF8)
        v16 = 0x1FFFFFFFFFFFFFFFLL;
      else
        v16 = v13;
      v36 = v8;
      if (v16)
        v17 = (char *)sub_3CC38(v8, v16);
      else
        v17 = 0;
      v28 = &v17[8 * v14];
      __p = v17;
      v33 = v28;
      v35 = &v17[8 * v16];
      v29 = 8 * a3;
      v30 = &v28[8 * a3];
      do
      {
        *(_QWORD *)v28 = *(_QWORD *)v5;
        v28 += 8;
        v29 -= 8;
      }
      while (v29);
      v34 = v30;
      v4 = sub_1D7270((void **)a1, (uint64_t)&__p, v4);
      if (v34 != v33)
        v34 += (v33 - v34 + 7) & 0xFFFFFFFFFFFFFFF8;
      if (__p)
        operator delete(__p);
    }
  }
  return v4;
}

void sub_1D6A00(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, uint64_t a12)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_1D71DC(_QWORD *a1)
{
  void **v2;
  void **v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  void *v7;

  v2 = (void **)a1[1];
  v3 = (void **)a1[2];
  a1[5] = 0;
  v4 = (char *)v3 - (char *)v2;
  if ((unint64_t)((char *)v3 - (char *)v2) >= 0x11)
  {
    do
    {
      operator delete(*v2);
      v3 = (void **)a1[2];
      v2 = (void **)(a1[1] + 8);
      a1[1] = v2;
      v4 = (char *)v3 - (char *)v2;
    }
    while ((unint64_t)((char *)v3 - (char *)v2) > 0x10);
  }
  v5 = v4 >> 3;
  if (v5 == 1)
  {
    v6 = 2048;
  }
  else
  {
    if (v5 != 2)
      goto LABEL_9;
    v6 = 4096;
  }
  a1[4] = v6;
LABEL_9:
  while (v2 != v3)
  {
    v7 = *v2++;
    operator delete(v7);
  }
  return sub_1D04A8((uint64_t)a1);
}

char *sub_1D7270(void **a1, uint64_t a2, char *__src)
{
  char *v5;
  char *v6;
  char *v7;
  char *v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  int64_t v12;
  char *v13;
  void *v14;
  void *v15;

  v5 = *(char **)(a2 + 8);
  v6 = (char *)*a1;
  v7 = v5;
  if (*a1 != __src)
  {
    v8 = __src;
    v7 = *(char **)(a2 + 8);
    do
    {
      v9 = *((_QWORD *)v8 - 1);
      v8 -= 8;
      *((_QWORD *)v7 - 1) = v9;
      v7 -= 8;
    }
    while (v8 != v6);
  }
  *(_QWORD *)(a2 + 8) = v7;
  v10 = a1[1];
  v11 = *(_QWORD *)(a2 + 16);
  v12 = v10 - __src;
  if (v10 != __src)
  {
    memmove(*(void **)(a2 + 16), __src, v10 - __src);
    v7 = *(char **)(a2 + 8);
  }
  *(_QWORD *)(a2 + 16) = v11 + v12;
  v13 = (char *)*a1;
  *a1 = v7;
  *(_QWORD *)(a2 + 8) = v13;
  v14 = a1[1];
  a1[1] = *(void **)(a2 + 16);
  *(_QWORD *)(a2 + 16) = v14;
  v15 = a1[2];
  a1[2] = *(void **)(a2 + 24);
  *(_QWORD *)(a2 + 24) = v15;
  *(_QWORD *)a2 = *(_QWORD *)(a2 + 8);
  return v5;
}

void sub_1D7334(_QWORD *a1, _BYTE *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;

  v4 = a1[2];
  v5 = a1[1];
  if (v4 == v5)
    v6 = 0;
  else
    v6 = ((v4 - v5) << 9) - 1;
  v7 = a1[5];
  v8 = v7 + a1[4];
  if (v6 == v8)
  {
    sub_1D73B8(a1);
    v5 = a1[1];
    v7 = a1[5];
    v8 = a1[4] + v7;
  }
  *(_BYTE *)(*(_QWORD *)(v5 + ((v8 >> 9) & 0x7FFFFFFFFFFFF8)) + (v8 & 0xFFF)) = *a2;
  a1[5] = v7 + 1;
}

void sub_1D73B8(_QWORD *a1)
{
  unint64_t v2;
  BOOL v3;
  unint64_t v4;
  uint64_t v5;
  char *v6;
  _QWORD *v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  int64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  char *v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  unint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  char *v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  char *v43;
  _QWORD *v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  void *v53;
  __int128 v54;
  __int128 v55;
  _QWORD *v56;

  v2 = a1[4];
  v3 = v2 >= 0x1000;
  v4 = v2 - 4096;
  if (v3)
  {
    v5 = (uint64_t)(a1 + 3);
    v6 = (char *)a1[3];
    a1[4] = v4;
    v7 = (_QWORD *)a1[1];
    v8 = (char *)a1[2];
    v11 = *v7;
    v9 = (char *)(v7 + 1);
    v10 = v11;
    a1[1] = v9;
    if (v8 != v6)
    {
LABEL_33:
      *(_QWORD *)v8 = v10;
      a1[2] += 8;
      return;
    }
    v12 = (uint64_t)&v9[-*a1];
    if ((unint64_t)v9 <= *a1)
    {
      if (v8 == (char *)*a1)
        v33 = 1;
      else
        v33 = (uint64_t)&v8[-*a1] >> 2;
      v34 = (char *)sub_3CC38(v5, v33);
      v35 = &v34[8 * (v33 >> 2)];
      v37 = &v34[8 * v36];
      v38 = (uint64_t *)a1[1];
      v8 = v35;
      v39 = a1[2] - (_QWORD)v38;
      if (v39)
      {
        v8 = &v35[v39 & 0xFFFFFFFFFFFFFFF8];
        v40 = 8 * (v39 >> 3);
        v41 = &v34[8 * (v33 >> 2)];
        do
        {
          v42 = *v38++;
          *(_QWORD *)v41 = v42;
          v41 += 8;
          v40 -= 8;
        }
        while (v40);
      }
      goto LABEL_30;
    }
LABEL_5:
    v13 = v12 >> 3;
    v14 = v12 >> 3 < -1;
    v15 = (v12 >> 3) + 2;
    if (v14)
      v16 = v15;
    else
      v16 = v13 + 1;
    v17 = -(v16 >> 1);
    v18 = v16 >> 1;
    v19 = &v9[-8 * v18];
    v20 = v8 - v9;
    if (v8 != v9)
    {
      memmove(&v9[-8 * v18], v9, v8 - v9);
      v9 = (char *)a1[1];
    }
    v8 = &v19[v20];
    a1[1] = &v9[8 * v17];
    a1[2] = &v19[v20];
    goto LABEL_33;
  }
  v21 = a1[2];
  v22 = (v21 - a1[1]) >> 3;
  v23 = a1[3];
  v24 = v23 - *a1;
  if (v22 < v24 >> 3)
  {
    if (v23 != v21)
    {
      *(_QWORD *)&v54 = operator new(0x1000uLL);
      sub_1D0808(a1, &v54);
      return;
    }
    *(_QWORD *)&v54 = operator new(0x1000uLL);
    sub_1D091C((uint64_t)a1, &v54);
    v44 = (_QWORD *)a1[1];
    v8 = (char *)a1[2];
    v45 = *v44;
    v9 = (char *)(v44 + 1);
    v10 = v45;
    a1[1] = v9;
    if (v8 != (char *)a1[3])
      goto LABEL_33;
    v12 = (uint64_t)&v9[-*a1];
    if ((unint64_t)v9 <= *a1)
    {
      if (v8 == (char *)*a1)
        v46 = 1;
      else
        v46 = (uint64_t)&v8[-*a1] >> 2;
      v34 = (char *)sub_3CC38((uint64_t)(a1 + 3), v46);
      v35 = &v34[8 * (v46 >> 2)];
      v37 = &v34[8 * v47];
      v48 = (uint64_t *)a1[1];
      v8 = v35;
      v49 = a1[2] - (_QWORD)v48;
      if (v49)
      {
        v8 = &v35[v49 & 0xFFFFFFFFFFFFFFF8];
        v50 = 8 * (v49 >> 3);
        v51 = &v34[8 * (v46 >> 2)];
        do
        {
          v52 = *v48++;
          *(_QWORD *)v51 = v52;
          v51 += 8;
          v50 -= 8;
        }
        while (v50);
      }
LABEL_30:
      v43 = (char *)*a1;
      *a1 = v34;
      a1[1] = v35;
      a1[2] = v8;
      a1[3] = v37;
      if (v43)
      {
        operator delete(v43);
        v8 = (char *)a1[2];
      }
      goto LABEL_33;
    }
    goto LABEL_5;
  }
  if (v23 == *a1)
    v25 = 1;
  else
    v25 = v24 >> 2;
  v56 = a1 + 3;
  *(_QWORD *)&v54 = sub_3CC38((uint64_t)(a1 + 3), v25);
  *((_QWORD *)&v54 + 1) = v54 + 8 * v22;
  *(_QWORD *)&v55 = *((_QWORD *)&v54 + 1);
  *((_QWORD *)&v55 + 1) = v54 + 8 * v26;
  v53 = operator new(0x1000uLL);
  sub_1D0A38(&v54, &v53);
  v27 = (_QWORD *)a1[2];
  v28 = -7 - (_QWORD)v27;
  while (v27 != (_QWORD *)a1[1])
  {
    --v27;
    v28 += 8;
    sub_1D0B4C((uint64_t)&v54, v27);
  }
  v29 = (char *)*a1;
  v30 = v54;
  v31 = v55;
  *(_QWORD *)&v54 = *a1;
  *((_QWORD *)&v54 + 1) = v27;
  v32 = *((_OWORD *)a1 + 1);
  *(_OWORD *)a1 = v30;
  *((_OWORD *)a1 + 1) = v31;
  v55 = v32;
  if (v27 != (_QWORD *)v32)
    *(_QWORD *)&v55 = v32 + (-(v32 + v28) & 0xFFFFFFFFFFFFFFF8);
  if (v29)
    operator delete(v29);
}

void sub_1D7680(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, uint64_t a13)
{
  void *v13;

  operator delete(v13);
  if (__p)
    operator delete(__p);
  _Unwind_Resume(a1);
}

uint64_t sub_1D76CC(_QWORD *a1, int a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  int v7;

  v3 = a1[1];
  v2 = a1[2];
  if (v2 == v3)
    v4 = 0;
  else
    v4 = ((v2 - v3) << 9) - 1;
  v5 = v4 - (a1[5] + a1[4]);
  if (v5 < 0x1000)
    a2 = 1;
  if (v5 < 0x2000)
    v7 = a2;
  else
    v7 = 0;
  if ((v7 & 1) == 0)
  {
    operator delete(*(void **)(v2 - 8));
    a1[2] -= 8;
  }
  return v7 ^ 1u;
}

_QWORD *sub_1D7738(_QWORD *result, const void *a2, uint64_t a3, unint64_t a4)
{
  _QWORD *v6;
  uint64_t v7;
  size_t v8;

  if (a4)
  {
    v6 = result;
    result = sub_1D77B0(result, a4);
    v7 = v6[1];
    v8 = a3 - (_QWORD)a2;
    if (v8)
      result = memmove((void *)v6[1], a2, v8);
    v6[1] = v7 + v8;
  }
  return result;
}

void sub_1D7794(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void *v3;

  v3 = *(void **)v1;
  if (*(_QWORD *)v1)
  {
    *(_QWORD *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

char *sub_1D77B0(_QWORD *a1, unint64_t a2)
{
  char *result;
  uint64_t v4;

  if (a2 >> 61)
    sub_36C30();
  result = (char *)sub_3CC38((uint64_t)(a1 + 2), a2);
  *a1 = result;
  a1[1] = result;
  a1[2] = &result[8 * v4];
  return result;
}

_QWORD *sub_1D77F0(uint64_t a1, unint64_t *a2, uint64_t a3, _QWORD **a4)
{
  unint64_t v4;
  unint64_t v7;
  unint64_t v8;
  uint8x8_t v9;
  _QWORD **v10;
  _QWORD *i;
  unint64_t v12;
  float v13;
  float v14;
  _BOOL8 v15;
  unint64_t v16;
  unint64_t v17;
  size_t v18;
  uint64_t v19;
  _QWORD *v20;
  unint64_t v21;

  v7 = *a2;
  v8 = *(_QWORD *)(a1 + 8);
  if (v8)
  {
    v9 = (uint8x8_t)vcnt_s8((int8x8_t)v8);
    v9.i16[0] = vaddlv_u8(v9);
    if (v9.u32[0] > 1uLL)
    {
      v4 = *a2;
      if (v7 >= v8)
        v4 = v7 % v8;
    }
    else
    {
      v4 = (v8 - 1) & v7;
    }
    v10 = *(_QWORD ***)(*(_QWORD *)a1 + 8 * v4);
    if (v10)
    {
      for (i = *v10; i; i = (_QWORD *)*i)
      {
        v12 = i[1];
        if (v12 == v7)
        {
          if (i[2] == v7)
            return i;
        }
        else
        {
          if (v9.u32[0] > 1uLL)
          {
            if (v12 >= v8)
              v12 %= v8;
          }
          else
          {
            v12 &= v8 - 1;
          }
          if (v12 != v4)
            break;
        }
      }
    }
  }
  i = operator new(0x20uLL);
  *i = 0;
  i[1] = v7;
  i[2] = **a4;
  i[3] = 0;
  v13 = (float)(unint64_t)(*(_QWORD *)(a1 + 24) + 1);
  v14 = *(float *)(a1 + 32);
  if (!v8 || (float)(v14 * (float)v8) < v13)
  {
    v15 = 1;
    if (v8 >= 3)
      v15 = (v8 & (v8 - 1)) != 0;
    v16 = v15 | (2 * v8);
    v17 = vcvtps_u32_f32(v13 / v14);
    if (v16 <= v17)
      v18 = v17;
    else
      v18 = v16;
    sub_1D2E6C(a1, v18);
    v8 = *(_QWORD *)(a1 + 8);
    if ((v8 & (v8 - 1)) != 0)
    {
      if (v7 >= v8)
        v4 = v7 % v8;
      else
        v4 = v7;
    }
    else
    {
      v4 = (v8 - 1) & v7;
    }
  }
  v19 = *(_QWORD *)a1;
  v20 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v4);
  if (v20)
  {
    *i = *v20;
LABEL_38:
    *v20 = i;
    goto LABEL_39;
  }
  *i = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = i;
  *(_QWORD *)(v19 + 8 * v4) = a1 + 16;
  if (*i)
  {
    v21 = *(_QWORD *)(*i + 8);
    if ((v8 & (v8 - 1)) != 0)
    {
      if (v21 >= v8)
        v21 %= v8;
    }
    else
    {
      v21 &= v8 - 1;
    }
    v20 = (_QWORD *)(*(_QWORD *)a1 + 8 * v21);
    goto LABEL_38;
  }
LABEL_39:
  ++*(_QWORD *)(a1 + 24);
  return i;
}

void sub_1D79F8(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_1D7A0C(uint64_t a1, unint64_t *a2, uint64_t a3, _QWORD **a4)
{
  unint64_t v4;
  unint64_t v7;
  unint64_t v8;
  uint8x8_t v9;
  void **v10;
  _QWORD *v11;
  unint64_t v12;
  float v13;
  float v14;
  _BOOL8 v15;
  unint64_t v16;
  unint64_t v17;
  size_t v18;
  uint64_t v19;
  _QWORD *v20;
  unint64_t v21;

  v7 = *a2;
  v8 = *(_QWORD *)(a1 + 8);
  if (v8)
  {
    v9 = (uint8x8_t)vcnt_s8((int8x8_t)v8);
    v9.i16[0] = vaddlv_u8(v9);
    if (v9.u32[0] > 1uLL)
    {
      v4 = *a2;
      if (v7 >= v8)
        v4 = v7 % v8;
    }
    else
    {
      v4 = (v8 - 1) & v7;
    }
    v10 = *(void ***)(*(_QWORD *)a1 + 8 * v4);
    if (v10)
    {
      v11 = *v10;
      if (*v10)
      {
        do
        {
          v12 = v11[1];
          if (v12 == v7)
          {
            if (v11[2] == v7)
              return v11;
          }
          else
          {
            if (v9.u32[0] > 1uLL)
            {
              if (v12 >= v8)
                v12 %= v8;
            }
            else
            {
              v12 &= v8 - 1;
            }
            if (v12 != v4)
              break;
          }
          v11 = (_QWORD *)*v11;
        }
        while (v11);
      }
    }
  }
  v11 = operator new(0x20uLL);
  *v11 = 0;
  v11[1] = v7;
  v11[2] = **a4;
  *((_DWORD *)v11 + 6) = 0;
  v13 = (float)(unint64_t)(*(_QWORD *)(a1 + 24) + 1);
  v14 = *(float *)(a1 + 32);
  if (!v8 || (float)(v14 * (float)v8) < v13)
  {
    v15 = 1;
    if (v8 >= 3)
      v15 = (v8 & (v8 - 1)) != 0;
    v16 = v15 | (2 * v8);
    v17 = vcvtps_u32_f32(v13 / v14);
    if (v16 <= v17)
      v18 = v17;
    else
      v18 = v16;
    sub_1D2E6C(a1, v18);
    v8 = *(_QWORD *)(a1 + 8);
    if ((v8 & (v8 - 1)) != 0)
    {
      if (v7 >= v8)
        v4 = v7 % v8;
      else
        v4 = v7;
    }
    else
    {
      v4 = (v8 - 1) & v7;
    }
  }
  v19 = *(_QWORD *)a1;
  v20 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v4);
  if (v20)
  {
    *v11 = *v20;
LABEL_38:
    *v20 = v11;
    goto LABEL_39;
  }
  *v11 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v11;
  *(_QWORD *)(v19 + 8 * v4) = a1 + 16;
  if (*v11)
  {
    v21 = *(_QWORD *)(*v11 + 8);
    if ((v8 & (v8 - 1)) != 0)
    {
      if (v21 >= v8)
        v21 %= v8;
    }
    else
    {
      v21 &= v8 - 1;
    }
    v20 = (_QWORD *)(*(_QWORD *)a1 + 8 * v21);
    goto LABEL_38;
  }
LABEL_39:
  ++*(_QWORD *)(a1 + 24);
  return v11;
}

void sub_1D7C18(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

void sub_1DD254(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1DD26C(id a1)
{
  qword_543690 = (uint64_t)objc_alloc_init((Class)NSMutableDictionary);
}

void sub_1DDCF0(_Unwind_Exception *a1, int a2)
{
  if (a2 == 1)
  {
    objc_begin_catch(a1);
    objc_end_catch();
    +[TSDStroke emptyStroke](TSDStroke, "emptyStroke");
    JUMPOUT(0x1DDCB0);
  }
  _Unwind_Resume(a1);
}

void sub_1DEA6C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

id sub_1E0204(uint64_t a1, uint64_t a2)
{
  id result;

  result = objc_msgSend(*(id *)(a1 + 32), "containsProperty:", a2);
  if ((result & 1) == 0)
    return objc_msgSend(*(id *)(a1 + 32), "setBoxedObject:forProperty:", +[TSWPParagraphStyle boxedDefaultValueForProperty:](TSWPParagraphStyle, "boxedDefaultValueForProperty:", a2), a2);
  return result;
}

void sub_1E0E48(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1E4590(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1E4714(_Unwind_Exception *a1)
{
  objc_end_catch();
  _Unwind_Resume(a1);
}

void sub_1E53F4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1E7A74(_Unwind_Exception *a1)
{
  objc_end_catch();
  _Unwind_Resume(a1);
}

BOOL sfaxmlNsEqual(uint64_t a1, uint64_t a2)
{
  _BOOL8 result;

  if (!(a1 | a2))
    return 1;
  result = 0;
  if (a1)
  {
    if (a2)
      return xmlStrEqual(*(const xmlChar **)(a1 + 16), *(const xmlChar **)(a2 + 16)) != 0;
  }
  return result;
}

uint64_t sfaxmlNSMutableDataWriteCallback(void *a1, uint64_t a2, uint64_t a3)
{
  objc_msgSend(a1, "appendBytes:length:", a2, (int)a3);
  return a3;
}

id sfaxmlDumpNodeToRetainedNSData(xmlNode *a1)
{
  id v2;
  int v3;
  xmlOutputBuffer *IO;

  v2 = objc_alloc_init((Class)NSMutableData);
  if (a1)
  {
    v3 = xmlKeepBlanksDefault(0);
    IO = xmlOutputBufferCreateIO((xmlOutputWriteCallback)sfaxmlNSMutableDataWriteCallback, 0, v2, 0);
    xmlNodeDumpOutput(IO, a1->doc, a1, 0, 1, 0);
    xmlOutputBufferClose(IO);
    xmlKeepBlanksDefault(v3);
  }
  return v2;
}

const __CFString *sfaxmlNodeDescription(xmlNode *a1)
{
  id v1;
  NSString *v2;
  char v4;

  if (!a1)
    return CFSTR("null node");
  v1 = sfaxmlDumpNodeToRetainedNSData(a1);
  v4 = 0;
  objc_msgSend(v1, "appendBytes:length:", &v4, 1);
  v2 = +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", objc_msgSend(v1, "bytes"));

  return (const __CFString *)v2;
}

uint64_t sfaPushZLibFileReadHandlers_libxml(void)
{
  return xmlRegisterInputCallbacks((xmlInputMatchCallback)sub_1E81A0, (xmlInputOpenCallback)sub_1E81A8, (xmlInputReadCallback)j__gzread, (xmlInputCloseCallback)sub_1E81F0);
}

uint64_t sub_1E81A0()
{
  return 1;
}

gzFile sub_1E81A8(const char *a1)
{
  if (a1 && xmlCheckFilename(a1))
    return gzopen(a1, "rb");
  else
    return 0;
}

uint64_t sub_1E81F0(gzFile_s *a1)
{
  if (gzclose(a1))
    return 0xFFFFFFFFLL;
  else
    return 0;
}

uint64_t sfaPopZLibFileReadHandlers_libxml(int a1)
{
  uint64_t result;

  result = xmlPopInputCallbacks();
  if ((_DWORD)result != a1)
    return (uint64_t)objc_msgSend(+[TSUAssertionHandler currentHandler](TSUAssertionHandler, "currentHandler"), "handleFailureInFunction:file:lineNumber:description:", +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "void sfaPopZLibFileReadHandlers_libxml(int)"), +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Alder/compatibility/Publication/Common/SFArchiving/SFArchivingUtils.mm"), 138, CFSTR("Unbalanced calls to Push/PopZLibFileReadHandlers_libxml"));
  return result;
}

xmlDocPtr sfaxmlSAXParseFile(xmlSAXHandler *a1, const char *a2, int a3, int val)
{
  int v7;
  int v8;
  xmlDocPtr v9;

  v7 = xmlSubstituteEntitiesDefault(val);
  v8 = xmlRegisterInputCallbacks((xmlInputMatchCallback)sub_1E81A0, (xmlInputOpenCallback)sub_1E81A8, (xmlInputReadCallback)j__gzread, (xmlInputCloseCallback)sub_1E81F0);
  v9 = xmlSAXParseFile(a1, a2, a3);
  sfaPopZLibFileReadHandlers_libxml(v8);
  xmlSubstituteEntitiesDefault(v7);
  return v9;
}

xmlDocPtr sfaxmlParseFile(const char *a1)
{
  int v2;
  xmlDocPtr v3;

  v2 = xmlRegisterInputCallbacks((xmlInputMatchCallback)sub_1E81A0, (xmlInputOpenCallback)sub_1E81A8, (xmlInputReadCallback)j__gzread, (xmlInputCloseCallback)sub_1E81F0);
  v3 = sfaxmlSAXParseFile(0, a1, 0, 1);
  sfaPopZLibFileReadHandlers_libxml(v2);
  return v3;
}

void sub_1EA014(_Unwind_Exception *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,void *a39,uint64_t a40,uint64_t a41,void *a42,uint64_t a43,uint64_t a44,void *a45,uint64_t a46,uint64_t a47,void *__p,uint64_t a49,uint64_t a50,char a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,char a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,char a63)
{
  char a69;
  uint64_t v69;
  id v72;

  if (a2)
  {
    if (__p)
      operator delete(__p);
    sub_1D3D70((uint64_t)&a51);
    sub_1D3D70((uint64_t)&a57);
    sub_1EA374((uint64_t)&a63);
    sub_1EA374((uint64_t)&a69);
    if (SLOBYTE(STACK[0x227]) < 0)
      operator delete((void *)STACK[0x210]);
    if (*(char *)(v69 - 233) < 0)
      operator delete(*(void **)(v69 - 256));
    if (*(char *)(v69 - 201) < 0)
      operator delete(*(void **)(v69 - 224));
    if (*(char *)(v69 - 169) < 0)
      operator delete(*(void **)(v69 - 192));
    if (a2 == 2)
    {
      v72 = objc_begin_catch(a1);
      objc_end_catch();
    }
    else
    {
      objc_begin_catch(a1);
    }
    JUMPOUT(0x1E9F80);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_1EA374(uint64_t a1)
{
  void *v2;

  sub_1EA3AC(a1, *(_QWORD **)(a1 + 16));
  v2 = *(void **)a1;
  *(_QWORD *)a1 = 0;
  if (v2)
    operator delete(v2);
  return a1;
}

void sub_1EA3AC(uint64_t a1, _QWORD *a2)
{
  _QWORD *v2;
  _QWORD *v3;

  if (a2)
  {
    v2 = a2;
    do
    {
      v3 = (_QWORD *)*v2;
      sub_1C3474((uint64_t)(v2 + 2));
      operator delete(v2);
      v2 = v3;
    }
    while (v3);
  }
}

unsigned __int8 *sub_1EA3E8(uint64_t a1, unsigned __int8 *a2, uint64_t a3, __int128 **a4)
{
  unint64_t v4;
  _QWORD *v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint8x8_t v12;
  unint64_t v13;
  unsigned __int8 **v14;
  unsigned __int8 *i;
  unint64_t v16;
  float v17;
  float v18;
  _BOOL8 v19;
  unint64_t v20;
  unint64_t v21;
  size_t v22;
  _QWORD *v23;
  unint64_t v24;
  _QWORD v26[3];

  v8 = (_QWORD *)(a1 + 24);
  v9 = sub_1D2920(a1 + 24, (uint64_t)a2);
  v10 = v9;
  v11 = *(_QWORD *)(a1 + 8);
  if (v11)
  {
    v12 = (uint8x8_t)vcnt_s8((int8x8_t)v11);
    v12.i16[0] = vaddlv_u8(v12);
    v13 = v12.u32[0];
    if (v12.u32[0] > 1uLL)
    {
      v4 = v9;
      if (v9 >= v11)
        v4 = v9 % v11;
    }
    else
    {
      v4 = (v11 - 1) & v9;
    }
    v14 = *(unsigned __int8 ***)(*(_QWORD *)a1 + 8 * v4);
    if (v14)
    {
      for (i = *v14; i; i = *(unsigned __int8 **)i)
      {
        v16 = *((_QWORD *)i + 1);
        if (v16 == v10)
        {
          if ((sub_1D2DC8(a1 + 32, i + 16, a2) & 1) != 0)
            return i;
        }
        else
        {
          if (v13 > 1)
          {
            if (v16 >= v11)
              v16 %= v11;
          }
          else
          {
            v16 &= v11 - 1;
          }
          if (v16 != v4)
            break;
        }
      }
    }
  }
  sub_1EA680(a1, v10, a4, (uint64_t)v26);
  v17 = (float)(unint64_t)(*(_QWORD *)(a1 + 24) + 1);
  v18 = *(float *)(a1 + 32);
  if (!v11 || (float)(v18 * (float)v11) < v17)
  {
    v19 = 1;
    if (v11 >= 3)
      v19 = (v11 & (v11 - 1)) != 0;
    v20 = v19 | (2 * v11);
    v21 = vcvtps_u32_f32(v17 / v18);
    if (v20 <= v21)
      v22 = v21;
    else
      v22 = v20;
    sub_1D2E6C(a1, v22);
    v11 = *(_QWORD *)(a1 + 8);
    if ((v11 & (v11 - 1)) != 0)
    {
      if (v10 >= v11)
        v4 = v10 % v11;
      else
        v4 = v10;
    }
    else
    {
      v4 = (v11 - 1) & v10;
    }
  }
  v23 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v4);
  if (v23)
  {
    *(_QWORD *)v26[0] = *v23;
    *v23 = v26[0];
  }
  else
  {
    *(_QWORD *)v26[0] = *(_QWORD *)(a1 + 16);
    *(_QWORD *)(a1 + 16) = v26[0];
    *(_QWORD *)(*(_QWORD *)a1 + 8 * v4) = a1 + 16;
    if (*(_QWORD *)v26[0])
    {
      v24 = *(_QWORD *)(*(_QWORD *)v26[0] + 8);
      if ((v11 & (v11 - 1)) != 0)
      {
        if (v24 >= v11)
          v24 %= v11;
      }
      else
      {
        v24 &= v11 - 1;
      }
      *(_QWORD *)(*(_QWORD *)a1 + 8 * v24) = v26[0];
    }
  }
  i = (unsigned __int8 *)v26[0];
  v26[0] = 0;
  ++*v8;
  sub_1EA7AC((uint64_t)v26, 0);
  return i;
}

void sub_1EA668(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_1EA7AC((uint64_t)va, 0);
  _Unwind_Resume(a1);
}

_BYTE *sub_1EA680@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, __int128 **a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v7;
  _QWORD *v8;
  _BYTE *result;
  __int128 *v10;
  __int128 v11;

  v7 = a1 + 16;
  v8 = operator new(0x40uLL);
  *(_QWORD *)a4 = v8;
  *(_QWORD *)(a4 + 8) = v7;
  *(_BYTE *)(a4 + 16) = 0;
  *v8 = 0;
  v8[1] = a2;
  result = v8 + 2;
  v10 = *a3;
  if (*((char *)*a3 + 23) < 0)
  {
    result = sub_1EA720(result, *(void **)v10, *((_QWORD *)v10 + 1));
  }
  else
  {
    v11 = *v10;
    v8[4] = *((_QWORD *)v10 + 2);
    *(_OWORD *)result = v11;
  }
  v8[5] = 0;
  v8[6] = 0;
  v8[7] = 0;
  *(_BYTE *)(a4 + 16) = 1;
  return result;
}

void sub_1EA708(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_1EA7AC(v1, 0);
  _Unwind_Resume(a1);
}

void *sub_1EA720(_BYTE *__dst, void *__src, unint64_t a3)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v5 = __dst;
  if (a3 > 0x16)
  {
    if (a3 >= 0x7FFFFFFFFFFFFFF8)
      sub_1CEEF4();
    v6 = (a3 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((a3 | 7) != 0x17)
      v6 = a3 | 7;
    v7 = v6 + 1;
    v8 = operator new(v6 + 1);
    v5[1] = a3;
    v5[2] = v7 | 0x8000000000000000;
    *v5 = v8;
    v5 = v8;
  }
  else
  {
    __dst[23] = a3;
  }
  return memmove(v5, __src, a3 + 1);
}

void sub_1EA7AC(uint64_t a1, uint64_t a2)
{
  void *v2;

  v2 = *(void **)a1;
  *(_QWORD *)a1 = a2;
  if (v2)
  {
    if (*(_BYTE *)(a1 + 16))
      sub_1C3474((uint64_t)v2 + 16);
    operator delete(v2);
  }
}

unsigned __int8 *sub_1EA7F0(uint64_t a1, unsigned __int8 *a2, uint64_t a3, __int128 **a4)
{
  unint64_t v4;
  _QWORD *v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint8x8_t v12;
  unint64_t v13;
  unsigned __int8 **v14;
  unsigned __int8 *i;
  unint64_t v16;
  float v17;
  float v18;
  _BOOL8 v19;
  unint64_t v20;
  unint64_t v21;
  size_t v22;
  _QWORD *v23;
  unint64_t v24;
  _QWORD v26[3];

  v8 = (_QWORD *)(a1 + 24);
  v9 = sub_1D2920(a1 + 24, (uint64_t)a2);
  v10 = v9;
  v11 = *(_QWORD *)(a1 + 8);
  if (v11)
  {
    v12 = (uint8x8_t)vcnt_s8((int8x8_t)v11);
    v12.i16[0] = vaddlv_u8(v12);
    v13 = v12.u32[0];
    if (v12.u32[0] > 1uLL)
    {
      v4 = v9;
      if (v9 >= v11)
        v4 = v9 % v11;
    }
    else
    {
      v4 = (v11 - 1) & v9;
    }
    v14 = *(unsigned __int8 ***)(*(_QWORD *)a1 + 8 * v4);
    if (v14)
    {
      for (i = *v14; i; i = *(unsigned __int8 **)i)
      {
        v16 = *((_QWORD *)i + 1);
        if (v16 == v10)
        {
          if ((sub_1D2DC8(a1 + 32, i + 16, a2) & 1) != 0)
            return i;
        }
        else
        {
          if (v13 > 1)
          {
            if (v16 >= v11)
              v16 %= v11;
          }
          else
          {
            v16 &= v11 - 1;
          }
          if (v16 != v4)
            break;
        }
      }
    }
  }
  sub_1EAA84(a1, v10, a4, (uint64_t)v26);
  v17 = (float)(unint64_t)(*(_QWORD *)(a1 + 24) + 1);
  v18 = *(float *)(a1 + 32);
  if (!v11 || (float)(v18 * (float)v11) < v17)
  {
    v19 = 1;
    if (v11 >= 3)
      v19 = (v11 & (v11 - 1)) != 0;
    v20 = v19 | (2 * v11);
    v21 = vcvtps_u32_f32(v17 / v18);
    if (v20 <= v21)
      v22 = v21;
    else
      v22 = v20;
    sub_1D2E6C(a1, v22);
    v11 = *(_QWORD *)(a1 + 8);
    if ((v11 & (v11 - 1)) != 0)
    {
      if (v10 >= v11)
        v4 = v10 % v11;
      else
        v4 = v10;
    }
    else
    {
      v4 = (v11 - 1) & v10;
    }
  }
  v23 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v4);
  if (v23)
  {
    *(_QWORD *)v26[0] = *v23;
    *v23 = v26[0];
  }
  else
  {
    *(_QWORD *)v26[0] = *(_QWORD *)(a1 + 16);
    *(_QWORD *)(a1 + 16) = v26[0];
    *(_QWORD *)(*(_QWORD *)a1 + 8 * v4) = a1 + 16;
    if (*(_QWORD *)v26[0])
    {
      v24 = *(_QWORD *)(*(_QWORD *)v26[0] + 8);
      if ((v11 & (v11 - 1)) != 0)
      {
        if (v24 >= v11)
          v24 %= v11;
      }
      else
      {
        v24 &= v11 - 1;
      }
      *(_QWORD *)(*(_QWORD *)a1 + 8 * v24) = v26[0];
    }
  }
  i = (unsigned __int8 *)v26[0];
  ++*v8;
  return i;
}

void sub_1EAA60(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void **__p, uint64_t a13)
{
  if (__p)
    sub_1D30A0((uint64_t)&a13, __p);
  _Unwind_Resume(exception_object);
}

_BYTE *sub_1EAA84@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, __int128 **a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v7;
  _QWORD *v8;
  _BYTE *result;
  __int128 *v10;
  __int128 v11;

  v7 = a1 + 16;
  v8 = operator new(0x38uLL);
  *(_QWORD *)a4 = v8;
  *(_QWORD *)(a4 + 8) = v7;
  *(_BYTE *)(a4 + 16) = 0;
  *v8 = 0;
  v8[1] = a2;
  result = v8 + 2;
  v10 = *a3;
  if (*((char *)*a3 + 23) < 0)
  {
    result = sub_1EA720(result, *(void **)v10, *((_QWORD *)v10 + 1));
  }
  else
  {
    v11 = *v10;
    v8[4] = *((_QWORD *)v10 + 2);
    *(_OWORD *)result = v11;
  }
  v8[5] = 0;
  v8[6] = 0;
  *(_BYTE *)(a4 + 16) = 1;
  return result;
}

void sub_1EAB10(_Unwind_Exception *a1)
{
  _QWORD *v1;
  void **v2;
  uint64_t v3;

  *v1 = 0;
  sub_1D30A0(v3, v2);
  _Unwind_Resume(a1);
}

void sub_1EB9C0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1EBB3C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1EC980(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *__p, uint64_t a20,uint64_t a21,void *a22,uint64_t a23)
{
  if (__p)
    operator delete(__p);
  if (a22)
    operator delete(a22);
  _Unwind_Resume(exception_object);
}

void sub_1ED25C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1EFC94()
{
  operator delete();
}

unint64_t sub_1EFCBC(uint64_t a1, int a2)
{
  unsigned int v4;

  v4 = *(unsigned __int16 *)(a1 + 24);
  if (v4 <= BYTE2(a2) || *(unsigned __int16 *)(a1 + 26) <= (unsigned __int16)a2)
  {
    objc_msgSend(+[TSUAssertionHandler currentHandler](TSUAssertionHandler, "currentHandler"), "handleFailureInFunction:file:lineNumber:description:", +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "TSDStroke *&TCStrokeMatrix::operator[](TSUColumnRowCoordinate)"), +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Alder/compatibility/Publication/Common/Utilities/TCTableStrokeFlattener.h"), 32, CFSTR("Matrix coordonate out of range"));
    v4 = *(unsigned __int16 *)(a1 + 24);
  }
  return *(_QWORD *)a1 + 8 * (BYTE2(a2) + (unsigned __int16)a2 * (unint64_t)v4);
}

uint64_t sub_1EFE64(uint64_t a1, int a2)
{
  uint64_t v4;

  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = 0;
  *(_DWORD *)(a1 + 24) = a2;
  v4 = 0;
  sub_1EFED0(a1, (unsigned __int16)a2 * (unint64_t)HIWORD(a2) + (unsigned __int16)a2, &v4);
  return a1;
}

void sub_1EFEB4(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void *v3;

  v3 = *(void **)v1;
  if (*(_QWORD *)v1)
  {
    *(_QWORD *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

void sub_1EFED0(uint64_t a1, unint64_t a2, _QWORD *a3)
{
  unint64_t v3;

  v3 = (uint64_t)(*(_QWORD *)(a1 + 8) - *(_QWORD *)a1) >> 3;
  if (a2 <= v3)
  {
    if (a2 < v3)
      *(_QWORD *)(a1 + 8) = *(_QWORD *)a1 + 8 * a2;
  }
  else
  {
    sub_1EFF00((void **)a1, a2 - v3, a3);
  }
}

void sub_1EFF00(void **a1, unint64_t a2, _QWORD *a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  _QWORD *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char *v15;
  uint64_t v16;
  _QWORD *v17;
  char *v18;
  char *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  char *v23;
  char *v24;
  uint64_t v25;

  v8 = a1[2];
  v6 = (uint64_t)(a1 + 2);
  v7 = v8;
  v9 = *(_QWORD **)(v6 - 8);
  if (a2 <= (v8 - (_BYTE *)v9) >> 3)
  {
    if (a2)
    {
      v16 = 8 * a2;
      v17 = &v9[a2];
      do
      {
        *v9++ = *a3;
        v16 -= 8;
      }
      while (v16);
      v9 = v17;
    }
    a1[1] = v9;
  }
  else
  {
    v10 = (char *)v9 - (_BYTE *)*a1;
    v11 = a2 + (v10 >> 3);
    if (v11 >> 61)
      sub_36C30();
    v12 = v10 >> 3;
    v13 = v7 - (_BYTE *)*a1;
    if (v13 >> 2 > v11)
      v11 = v13 >> 2;
    if ((unint64_t)v13 >= 0x7FFFFFFFFFFFFFF8)
      v14 = 0x1FFFFFFFFFFFFFFFLL;
    else
      v14 = v11;
    if (v14)
      v15 = (char *)sub_3CC38(v6, v14);
    else
      v15 = 0;
    v18 = &v15[8 * v12];
    v19 = &v18[8 * a2];
    v20 = 8 * a2;
    v21 = v18;
    do
    {
      *(_QWORD *)v21 = *a3;
      v21 += 8;
      v20 -= 8;
    }
    while (v20);
    v22 = &v15[8 * v14];
    v24 = (char *)*a1;
    v23 = (char *)a1[1];
    if (v23 != *a1)
    {
      do
      {
        v25 = *((_QWORD *)v23 - 1);
        v23 -= 8;
        *((_QWORD *)v18 - 1) = v25;
        v18 -= 8;
      }
      while (v23 != v24);
      v23 = (char *)*a1;
    }
    *a1 = v18;
    a1[1] = v19;
    a1[2] = v22;
    if (v23)
      operator delete(v23);
  }
}

void sub_1F0680(uint64_t a1)
{
  void *v2;
  id v3;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "urlHandlerToTaskMap"));
  objc_msgSend(v2, "setObject:forKey:", *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48));

  v3 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "taskToURLHandlerMap"));
  objc_msgSend(v3, "setObject:forKey:", *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 40));

}

void sub_1F07C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1F07D8(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_1F07E8(uint64_t a1)
{

}

void sub_1F07F0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  id v6;

  v6 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "taskToURLHandlerMap"));
  v2 = objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "objectForKey:", *(_QWORD *)(a1 + 40)));
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "urlHandlerToTaskMap"));
  objc_msgSend(v5, "removeObjectForKey:", *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40));

  objc_msgSend(v6, "removeObjectForKey:", *(_QWORD *)(a1 + 40));
}

void sub_1F0920(uint64_t a1)
{
  id v2;

  v2 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_taskForHandler:", *(_QWORD *)(a1 + 40)));
  objc_msgSend(v2, "didReceiveResponse:", *(_QWORD *)(a1 + 48));

}

void sub_1F0A0C(uint64_t a1)
{
  id v2;

  v2 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_taskForHandler:", *(_QWORD *)(a1 + 40)));
  objc_msgSend(v2, "didReceiveData:", *(_QWORD *)(a1 + 48));

}

void sub_1F0ACC(uint64_t a1)
{
  id v2;

  v2 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_taskForHandler:", *(_QWORD *)(a1 + 40)));
  objc_msgSend(v2, "didFinish");
  objc_msgSend(*(id *)(a1 + 32), "_removeTaskForHandler:", *(_QWORD *)(a1 + 40));

}

void sub_1F0BBC(uint64_t a1)
{
  id v2;

  v2 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_taskForHandler:", *(_QWORD *)(a1 + 40)));
  objc_msgSend(v2, "didFailWithError:", *(_QWORD *)(a1 + 48));
  objc_msgSend(*(id *)(a1 + 32), "_removeTaskForHandler:", *(_QWORD *)(a1 + 40));

}

void sub_1F0CDC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1F0CF4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;

  v5 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "urlHandlerToTaskMap"));
  v2 = objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "objectForKey:", *(_QWORD *)(a1 + 40)));
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

void sub_1F0DC4(uint64_t a1)
{
  void *v2;
  void *v3;
  id v4;

  v4 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "urlHandlerToTaskMap"));
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "objectForKey:", *(_QWORD *)(a1 + 40)));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "taskToURLHandlerMap"));
  objc_msgSend(v3, "removeObjectForKey:", v2);

  objc_msgSend(v4, "removeObjectForKey:", *(_QWORD *)(a1 + 40));
}

void sub_1F1120(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

id sub_1F146C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  double v5;
  id v6;

  v4 = objc_opt_class(TSWPDrawableAttachment);
  *(_QWORD *)&v5 = TSUDynamicCast(v4, a2).n128_u64[0];
  return objc_msgSend(objc_msgSend(v6, "drawable", v5), "setHyperlinkURL:", objc_msgSend(*(id *)(a1 + 32), "url"));
}

void sub_1F1720(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1F184C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1F1900(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t sfaxmlBoolToXmlChar(int a1, char *__str, size_t __size)
{
  const char *v3;

  v3 = "false";
  if (a1)
    v3 = "true";
  return snprintf(__str, __size, "%s", v3);
}

uint64_t sfaxmlXmlCharToBool(const xmlChar *a1, _BYTE *a2)
{
  int v4;
  uint64_t result;

  if (!xmlStrcasecmp(a1, (const xmlChar *)"TRUE"))
    goto LABEL_4;
  if (!xmlStrcasecmp(a1, (const xmlChar *)"FALSE"))
    goto LABEL_6;
  if (xmlStrEqual(a1, (const xmlChar *)"1"))
  {
LABEL_4:
    LOBYTE(v4) = 1;
LABEL_7:
    *a2 = v4;
    return 1;
  }
  if (xmlStrEqual(a1, (const xmlChar *)"0"))
    goto LABEL_6;
  if (!xmlStrcasecmp(a1, (const xmlChar *)"y"))
    goto LABEL_4;
  if (!xmlStrcasecmp(a1, (const xmlChar *)"n"))
    goto LABEL_6;
  if (!xmlStrcasecmp(a1, (const xmlChar *)"t"))
    goto LABEL_4;
  if (!xmlStrcasecmp(a1, (const xmlChar *)"f"))
  {
LABEL_6:
    LOBYTE(v4) = 0;
    goto LABEL_7;
  }
  if (!xmlStrcasecmp(a1, (const xmlChar *)"yes"))
    goto LABEL_4;
  v4 = xmlStrcasecmp(a1, (const xmlChar *)"no");
  result = 0;
  if (!v4)
    goto LABEL_7;
  return result;
}

uint64_t sfaxmlLongToXmlChar(uint64_t a1, char *__str, size_t __size)
{
  return snprintf(__str, __size, "%ld", a1);
}

char *sfaxmlXmlCharToLong(char *a1, uint64_t *a2)
{
  uint64_t v4;
  char *result;
  char *__endptr;

  __endptr = 0;
  v4 = strtol(a1, &__endptr, 10);
  if (*__endptr || !*a1)
  {
    if (strchr(a1, 37))
    {
      v4 *= 1000;
    }
    else
    {
      result = strchr(a1, 112);
      if (!result)
        return result;
      if (result[1] != 116)
        return 0;
      v4 *= 20;
    }
  }
  *a2 = v4;
  return (_BYTE *)(&dword_0 + 1);
}

uint64_t sfaxmlUnsignedLongToXmlChar(uint64_t a1, char *__str, size_t __size)
{
  return snprintf(__str, __size, "%lu", a1);
}

uint64_t sfaxmlXmlCharToUnsignedLong(const char *a1, unint64_t *a2)
{
  unint64_t v4;
  char *__endptr;

  __endptr = 0;
  v4 = strtoul(a1, &__endptr, 10);
  if (*__endptr || !*a1)
    return 0;
  *a2 = v4;
  return 1;
}

uint64_t sfaxmlLongLongToXmlChar(uint64_t a1, char *__str, size_t __size)
{
  return snprintf(__str, __size, "%lld", a1);
}

uint64_t sfaxmlXmlCharToLongLong(const char *a1, uint64_t *a2)
{
  uint64_t v4;
  char *__endptr;

  __endptr = 0;
  v4 = strtoll(a1, &__endptr, 10);
  if (*__endptr || !*a1)
    return 0;
  *a2 = v4;
  return 1;
}

uint64_t sfaxmlUnsignedLongLongToXmlChar(uint64_t a1, char *__str, size_t __size)
{
  return snprintf(__str, __size, "%llu", a1);
}

uint64_t sfaxmlXmlCharToUnsignedLongLong(const char *a1, unint64_t *a2)
{
  unint64_t v4;
  char *__endptr;

  __endptr = 0;
  v4 = strtoull(a1, &__endptr, 10);
  if (*__endptr || !*a1)
    return 0;
  *a2 = v4;
  return 1;
}

int *sfaxmlFloatToXmlChar(char *a1, size_t __n, float a3)
{
  if (fabsf(a3) != INFINITY)
    return (int *)snprintf(a1, __n, "%.*g", 8, a3);
  if (a3 >= 0.0)
  {
    strncpy(a1, "INF", __n);
    return &dword_0 + 3;
  }
  else
  {
    strncpy(a1, "-INF", __n);
    return &dword_4;
  }
}

uint64_t sfaxmlXmlCharToFloat(uint64_t a1, float *a2)
{
  const char *v3;
  int v4;
  __uint32_t v5;
  _BOOL8 v6;
  const char *v7;
  size_t v8;
  unint64_t v9;
  double v10;
  float v12;
  int v13;
  char *v14;

  v3 = (const char *)(a1 - 1);
  do
  {
    v4 = v3[1];
    if (v4 < 0)
      v5 = __maskrune(v3[1], 0x4000uLL);
    else
      v5 = _DefaultRuneLocale.__runetype[v4] & 0x4000;
    ++v3;
  }
  while (v5);
  v6 = v4 == 43;
  if (v4 == 43)
    v7 = v3 + 1;
  else
    v7 = v3;
  v8 = strlen(v7);
  if (v8 < 3)
    goto LABEL_14;
  v9 = v8;
  if (!strncasecmp(v7, "NAN", 3uLL))
  {
    v13 = 2143289344;
LABEL_21:
    v12 = *(float *)&v13;
    goto LABEL_22;
  }
  if (!strncasecmp(v7, "INF", 3uLL))
  {
    v13 = 2139095040;
    goto LABEL_21;
  }
  if (v9 >= 4 && !strncasecmp(v7, "-INF", 4uLL))
  {
    v13 = -8388608;
    goto LABEL_21;
  }
LABEL_14:
  v14 = 0;
  v10 = strtod(v7, &v14);
  if (*v14 || !v3[v6])
    return 0;
  v12 = v10;
LABEL_22:
  *a2 = v12;
  return 1;
}

int *sfaxmlDoubleToXmlChar(char *a1, size_t __n, double a3)
{
  if (fabs(a3) != INFINITY)
    return (int *)snprintf(a1, __n, "%.*g", 17, a3);
  if (a3 >= 0.0)
  {
    strncpy(a1, "INF", __n);
    return &dword_0 + 3;
  }
  else
  {
    strncpy(a1, "-INF", __n);
    return &dword_4;
  }
}

uint64_t sfaxmlXmlCharToDouble(uint64_t a1, double *a2)
{
  const char *v3;
  int v4;
  __uint32_t v5;
  _BOOL8 v6;
  const char *v7;
  size_t v8;
  unint64_t v9;
  double v10;
  unint64_t v12;
  char *v13;

  v3 = (const char *)(a1 - 1);
  do
  {
    v4 = v3[1];
    if (v4 < 0)
      v5 = __maskrune(v3[1], 0x4000uLL);
    else
      v5 = _DefaultRuneLocale.__runetype[v4] & 0x4000;
    ++v3;
  }
  while (v5);
  v6 = v4 == 43;
  if (v4 == 43)
    v7 = v3 + 1;
  else
    v7 = v3;
  v8 = strlen(v7);
  if (v8 >= 3)
  {
    v9 = v8;
    if (!strncasecmp(v7, "NAN", 3uLL))
    {
      v12 = 0x7FF8000000000000;
    }
    else if (!strncasecmp(v7, "INF", 3uLL))
    {
      v12 = 0x7FF0000000000000;
    }
    else
    {
      if (v9 < 4 || strncasecmp(v7, "-INF", 4uLL))
        goto LABEL_14;
      v12 = 0xFFF0000000000000;
    }
    v10 = *(double *)&v12;
    goto LABEL_22;
  }
LABEL_14:
  v13 = 0;
  v10 = strtod(v7, &v13);
  if (*v13 || !v3[v6])
    return 0;
LABEL_22:
  *a2 = v10;
  return 1;
}

BOOL sfaxmlXmlCharToNSString(uint64_t a1, NSString **a2)
{
  NSString *v3;

  v3 = +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", a1);
  *a2 = v3;
  return v3 != 0;
}

void sub_1F255C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1F2950(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

double PFXAffineTransformWithSvgTransform@<D0>(const char *a1@<X0>, _QWORD *a2@<X8>)
{
  __int128 v3;
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  if (a1
    && *a1
    && (v15 = 0,
        v16 = 0,
        v13 = 0,
        v14 = 0,
        v11 = 0,
        v12 = 0,
        sscanf(a1, "matrix(%lg,%lg,%lg,%lg,%lg,%lg)", &v16, &v15, &v14, &v13, &v12, &v11) > 5))
  {
    v5 = v15;
    *(_QWORD *)&v4 = v16;
    v7 = v13;
    v6 = v14;
    v9 = v11;
    v8 = v12;
    *a2 = v16;
    a2[1] = v5;
    a2[2] = v6;
    a2[3] = v7;
    a2[4] = v8;
    a2[5] = v9;
  }
  else
  {
    v3 = *(_OWORD *)&CGAffineTransformIdentity.c;
    *(_OWORD *)a2 = *(_OWORD *)&CGAffineTransformIdentity.a;
    *((_OWORD *)a2 + 1) = v3;
    v4 = *(_OWORD *)&CGAffineTransformIdentity.tx;
    *((_OWORD *)a2 + 2) = v4;
  }
  return *(double *)&v4;
}

CGAffineTransform *PFXAffineTransformWithCssTransformValue@<X0>(NSArray *a1@<X0>, CGRect a2@<0:D0, 8:D1, 16:D2, 24:D3>, PFXHtmlReaderState *a3@<X1>, uint64_t a4@<X8>)
{
  CGFloat height;
  CGFloat width;
  CGFloat y;
  CGFloat x;
  CGFloat MidX;
  CGFloat MidY;
  id v13;
  id v14;
  uint64_t v15;
  void *i;
  void *v17;
  uint64_t v18;
  id v19;
  id v20;
  id v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  CGAffineTransform *p_t1;
  CGAffineTransform *p_t2;
  double v37;
  CGFloat v38;
  CGFloat v39;
  __int128 v40;
  double v41;
  __int128 v42;
  double v43;
  CGFloat v44;
  CGFloat v45;
  __int128 v46;
  __int128 v47;
  CGFloat v48;
  CGFloat v49;
  __int128 v50;
  CGAffineTransform *result;
  __int128 v52;
  CGFloat v53;
  CGAffineTransform v54;
  CGAffineTransform v55;
  CGAffineTransform t2;
  CGAffineTransform t1;
  _OWORD v58[3];
  CGAffineTransform v59;
  _OWORD v60[3];
  CGAffineTransform v61;
  _OWORD v62[3];
  _QWORD v63[6];
  CGAffineTransform v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  _BYTE v69[128];
  CGRect v70;
  CGRect v71;
  CGRect v72;

  height = a2.size.height;
  width = a2.size.width;
  y = a2.origin.y;
  x = a2.origin.x;
  *(_OWORD *)(a4 + 16) = 0u;
  *(_OWORD *)(a4 + 32) = 0u;
  *(_OWORD *)a4 = 0u;
  MidX = CGRectGetMidX(a2);
  v70.origin.x = x;
  v70.origin.y = y;
  v70.size.width = width;
  v53 = height;
  v70.size.height = height;
  MidY = CGRectGetMidY(v70);
  CGAffineTransformMakeTranslation((CGAffineTransform *)a4, MidX, MidY);
  v67 = 0u;
  v68 = 0u;
  v65 = 0u;
  v66 = 0u;
  v13 = -[NSArray countByEnumeratingWithState:objects:count:](a1, "countByEnumeratingWithState:objects:count:", &v65, v69, 16);
  if (v13)
  {
    v14 = v13;
    v15 = *(_QWORD *)v66;
    do
    {
      for (i = 0; i != v14; i = (char *)i + 1)
      {
        if (*(_QWORD *)v66 != v15)
          objc_enumerationMutation(a1);
        v17 = *(void **)(*((_QWORD *)&v65 + 1) + 8 * (_QWORD)i);
        v18 = objc_opt_class(PFSPair);
        if ((objc_opt_isKindOfClass(v17, v18) & 1) != 0 && objc_msgSend(v17, "type") == (char *)&stru_108.addr + 2)
        {
          v19 = objc_msgSend(v17, "value");
          if (objc_msgSend(v19, "count") == (char *)&dword_0 + 2)
          {
            v20 = objc_msgSend(v19, "objectAtIndex:", 0);
            v21 = objc_msgSend(objc_msgSend(v19, "objectAtIndex:", 1), "mutableCopy");
            if (objc_msgSend(v21, "count"))
            {
              v22 = 0;
              do
              {
                if (objc_msgSend(objc_msgSend(v21, "objectAtIndex:", v22), "type") == &stru_20.segname[4])
                  objc_msgSend(v21, "removeObjectAtIndex:", v22);
                else
                  ++v22;
              }
              while (v22 < (unint64_t)objc_msgSend(v21, "count"));
            }
            if ((objc_msgSend(v20, "isEqualToString:", CFSTR("matrix(")) & 1) != 0)
            {
              if (objc_msgSend(v21, "count") != (char *)&dword_4 + 2)
                continue;
              objc_msgSend(objc_msgSend(objc_msgSend(v21, "objectAtIndex:", 0), "value"), "doubleValue");
              v24 = v23;
              objc_msgSend(objc_msgSend(objc_msgSend(v21, "objectAtIndex:", 1), "value"), "doubleValue");
              v26 = v25;
              objc_msgSend(objc_msgSend(objc_msgSend(v21, "objectAtIndex:", 2), "value"), "doubleValue");
              v28 = v27;
              objc_msgSend(objc_msgSend(objc_msgSend(v21, "objectAtIndex:", 3), "value"), "doubleValue");
              v30 = v29;
              +[PFXStyleUtilities pointLengthInPair:readerState:](PFXStyleUtilities, "pointLengthInPair:readerState:", objc_msgSend(v21, "objectAtIndex:", 4), a3);
              v32 = v31;
              +[PFXStyleUtilities pointLengthInPair:readerState:](PFXStyleUtilities, "pointLengthInPair:readerState:", objc_msgSend(v21, "objectAtIndex:", 5), a3);
              v63[0] = v24;
              v63[1] = v26;
              v63[2] = v28;
              v63[3] = v30;
              v63[4] = v32;
              v63[5] = v33;
              v34 = *(_OWORD *)(a4 + 16);
              v62[0] = *(_OWORD *)a4;
              v62[1] = v34;
              v62[2] = *(_OWORD *)(a4 + 32);
              p_t1 = (CGAffineTransform *)v63;
              p_t2 = (CGAffineTransform *)v62;
              goto LABEL_27;
            }
            if (objc_msgSend(v20, "isEqualToString:", CFSTR("translate(")))
            {
              if (objc_msgSend(v21, "count") != (char *)&dword_0 + 2)
                continue;
              +[PFXStyleUtilities pointLengthInPair:readerState:](PFXStyleUtilities, "pointLengthInPair:readerState:", objc_msgSend(v21, "objectAtIndex:", 0), a3);
              v38 = v37;
              +[PFXStyleUtilities pointLengthInPair:readerState:](PFXStyleUtilities, "pointLengthInPair:readerState:", objc_msgSend(v21, "objectAtIndex:", 1), a3);
              CGAffineTransformMakeTranslation(&v61, v38, v39);
              v40 = *(_OWORD *)(a4 + 16);
              v60[0] = *(_OWORD *)a4;
              v60[1] = v40;
              v60[2] = *(_OWORD *)(a4 + 32);
              p_t1 = &v61;
              p_t2 = (CGAffineTransform *)v60;
              goto LABEL_27;
            }
            if (objc_msgSend(v20, "isEqualToString:", CFSTR("rotate(")))
            {
              if (objc_msgSend(v21, "count") != (char *)&dword_0 + 1)
                continue;
              +[PFXStyleUtilities angleInDegreesInPair:readerState:](PFXStyleUtilities, "angleInDegreesInPair:readerState:", objc_msgSend(v21, "objectAtIndex:", 0), a3);
              CGAffineTransformMakeRotation(&v59, v41 * 3.14159265 / 180.0);
              v42 = *(_OWORD *)(a4 + 16);
              v58[0] = *(_OWORD *)a4;
              v58[1] = v42;
              v58[2] = *(_OWORD *)(a4 + 32);
              p_t1 = &v59;
              p_t2 = (CGAffineTransform *)v58;
              goto LABEL_27;
            }
            if (objc_msgSend(v20, "isEqualToString:", CFSTR("scale("))
              && objc_msgSend(v21, "count") == (char *)&dword_0 + 2)
            {
              objc_msgSend(objc_msgSend(objc_msgSend(v21, "objectAtIndex:", 0), "value"), "doubleValue");
              v44 = v43;
              objc_msgSend(objc_msgSend(objc_msgSend(v21, "objectAtIndex:", 1), "value"), "doubleValue");
              CGAffineTransformMakeScale(&t1, v44, v45);
              v46 = *(_OWORD *)(a4 + 16);
              *(_OWORD *)&t2.a = *(_OWORD *)a4;
              *(_OWORD *)&t2.c = v46;
              *(_OWORD *)&t2.tx = *(_OWORD *)(a4 + 32);
              p_t1 = &t1;
              p_t2 = &t2;
LABEL_27:
              CGAffineTransformConcat(&v64, p_t1, p_t2);
              v47 = *(_OWORD *)&v64.c;
              *(_OWORD *)a4 = *(_OWORD *)&v64.a;
              *(_OWORD *)(a4 + 16) = v47;
              *(_OWORD *)(a4 + 32) = *(_OWORD *)&v64.tx;
              continue;
            }
          }
        }
      }
      v14 = -[NSArray countByEnumeratingWithState:objects:count:](a1, "countByEnumeratingWithState:objects:count:", &v65, v69, 16);
    }
    while (v14);
  }
  v71.origin.x = x;
  v71.origin.y = y;
  v71.size.width = width;
  v71.size.height = v53;
  v48 = -CGRectGetMidX(v71);
  v72.origin.x = x;
  v72.origin.y = y;
  v72.size.width = width;
  v72.size.height = v53;
  v49 = CGRectGetMidY(v72);
  CGAffineTransformMakeTranslation(&v55, v48, -v49);
  v50 = *(_OWORD *)(a4 + 16);
  *(_OWORD *)&v54.a = *(_OWORD *)a4;
  *(_OWORD *)&v54.c = v50;
  *(_OWORD *)&v54.tx = *(_OWORD *)(a4 + 32);
  result = CGAffineTransformConcat(&v64, &v55, &v54);
  v52 = *(_OWORD *)&v64.c;
  *(_OWORD *)a4 = *(_OWORD *)&v64.a;
  *(_OWORD *)(a4 + 16) = v52;
  *(_OWORD *)(a4 + 32) = *(_OWORD *)&v64.tx;
  return result;
}

id PFXTSDInfoGeometry(const char *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  id v8;
  id v9;
  _QWORD v11[6];
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  double v18;
  double v19;

  if (!a1)
    return 0;
  v18 = 0.0;
  v19 = 0.0;
  v16 = 0;
  v17 = 0;
  v15 = 0;
  v13 = 0;
  v14 = 0;
  v12 = 0;
  sscanf(a1, "affineGeometry(%lg, %lg, %lg,%lg,%lg,%lg,%lg,%lg)", &v19, &v18, &v17, &v16, &v15, &v14, &v13, &v12);
  v2 = v16;
  v1 = v17;
  v3 = v15;
  v5 = v13;
  v4 = v14;
  v6 = v12;
  v7 = objc_alloc((Class)TSDInfoGeometry);
  v8 = objc_msgSend(v7, "initWithSize:", v19, v18);
  v11[0] = v1;
  v11[1] = v2;
  v11[2] = v3;
  v11[3] = v4;
  v11[4] = v5;
  v11[5] = v6;
  v9 = objc_msgSend(v8, "geometryByAppendingTransform:", v11);

  return v9;
}

id sub_1F7E9C(_QWORD *a1)
{
  id result;

  result = +[PFDUrlHandler registerHost:bookRootURL:withDRMContext:](PFDUrlHandler, "registerHost:bookRootURL:withDRMContext:", a1[4], a1[5], a1[6]);
  if (result)
    return (id)+[NSURLProtocol registerClass:](NSURLProtocol, "registerClass:", a1[7]);
  return result;
}

id sub_1F7F60(uint64_t a1)
{
  id result;

  result = +[PFDUrlHandler unregisterHost:](PFDUrlHandler, "unregisterHost:", *(_QWORD *)(a1 + 32));
  if (!result)
    return +[NSURLProtocol unregisterClass:](NSURLProtocol, "unregisterClass:", *(_QWORD *)(a1 + 40));
  return result;
}

void sub_1F8BF8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t TCUnicodeCharForZapfDingbatsCodePoint(int a1)
{
  if ((a1 - 32) > 0xDE)
    return 0;
  else
    return word_315BF8[(__int16)(a1 - 32)];
}

uint64_t TCUnicodeCharForMTExtraCodePoint(int a1)
{
  if ((a1 - 32) > 0x5D)
    return 0;
  else
    return word_315DB6[(__int16)(a1 - 32)];
}

uint64_t TCUnicodeCharForWingdingsCodePoint(int a1)
{
  if ((a1 - 32) > 0xDE)
    return 0;
  else
    return word_315E72[(__int16)(a1 - 32)];
}

uint64_t TCUnicodeCharForWingdings2CodePoint(int a1)
{
  if ((a1 - 37) > 0xD4)
    return 0;
  else
    return word_316030[(__int16)(a1 - 37)];
}

id TCUnicodeCharForSymbolCodePoint(int a1)
{
  unsigned __int8 v1;
  id v2;
  void *v3;
  id v4;
  unsigned __int8 v6;

  v1 = a1;
  if ((a1 - 32) >= 0xE0)
    objc_msgSend(+[TSUAssertionHandler currentHandler](TSUAssertionHandler, "currentHandler"), "handleFailureInFunction:file:lineNumber:description:", +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "unichar TCUnicodeCharForSymbolCodePoint(UInt16)"), +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Alder/compatibility/Publication/Common/Utilities/TCStringAdditions.mm"), 572, CFSTR("Symbol code point out of range"));
  v6 = v1;
  v2 = objc_msgSend(objc_alloc((Class)NSString), "initWithBytesNoCopy:length:encoding:freeWhenDone:", &v6, 1, 6, 0);
  if (v2)
  {
    v3 = v2;
    v4 = objc_msgSend(v2, "characterAtIndex:", 0);

  }
  else
  {
    NSLog(CFSTR("Could not encode byte 0x%02X as symbol character"), v6);
    return 0;
  }
  return v4;
}

uint64_t (*TCCodePointMapperForFontFamilyName(NSString *a1))(int a1)
{
  uint64_t (*v2)(int);

  if (!a1)
    return 0;
  if (-[NSString caseInsensitiveCompare:](a1, "caseInsensitiveCompare:", CFSTR("Symbol")) == NSOrderedSame)
    return (uint64_t (*)(int))TCUnicodeCharForSymbolCodePoint;
  if (-[NSString caseInsensitiveCompare:](a1, "caseInsensitiveCompare:", CFSTR("Zapf Dingbats")) == NSOrderedSame
    || -[NSString caseInsensitiveCompare:](a1, "caseInsensitiveCompare:", CFSTR("ZapfDingbats")) == NSOrderedSame)
  {
    return TCUnicodeCharForZapfDingbatsCodePoint;
  }
  if (-[NSString caseInsensitiveCompare:](a1, "caseInsensitiveCompare:", CFSTR("Wingdings")) == NSOrderedSame)
    return TCUnicodeCharForWingdingsCodePoint;
  v2 = TCUnicodeCharForWingdings2CodePoint;
  if (-[NSString caseInsensitiveCompare:](a1, "caseInsensitiveCompare:", CFSTR("Wingdings 2"))
    && -[NSString caseInsensitiveCompare:](a1, "caseInsensitiveCompare:", CFSTR("Wingdings2")))
  {
    return 0;
  }
  return v2;
}

id TCFontFamilyIsPi(NSString *a1)
{
  id v2;

  v2 = (id)qword_543758;
  if (!qword_543758)
  {
    v2 = objc_msgSend(objc_alloc((Class)NSSet), "initWithObjects:", CFSTR("Bookshelf Symbol 7"), CFSTR("Monotype Sorts"), CFSTR("MS Reference Specialty"), CFSTR("MT Extra"), CFSTR("Marlett"), CFSTR("Webdings"), CFSTR("Wingdings"), CFSTR("Wingdings 2"), CFSTR("Wingdings 3"), 0);
    qword_543758 = (uint64_t)v2;
  }
  return objc_msgSend(v2, "containsObject:", a1);
}

id TCFontFamilyHasCodePointsInPiRange(NSString *a1)
{
  id v2;

  v2 = (id)qword_543760;
  if (!qword_543760)
  {
    v2 = objc_msgSend(objc_alloc((Class)NSSet), "initWithObjects:", CFSTR("Apple Chancery"), CFSTR("Hoefler Text Ornaments"), CFSTR("Type Embellishments One LET"), 0);
    qword_543760 = (uint64_t)v2;
  }
  return objc_msgSend(v2, "containsObject:", a1);
}

void sub_1FA804()
{
  operator delete();
}

void sub_1FA920(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1FB89C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void PFDEpubEncryptionParser::PFDEpubEncryptionParser(PFDEpubEncryptionParser *this, const char *a2)
{
  uint64_t v4;
  std::string *v5;

  PFDEpubXmlParseHandler::PFDEpubXmlParseHandler(this);
  *(_QWORD *)v4 = &off_42C210;
  *(_OWORD *)(v4 + 192) = 0u;
  v5 = (std::string *)(v4 + 192);
  *(_OWORD *)(v4 + 160) = 0u;
  *(_OWORD *)(v4 + 176) = 0u;
  *(_QWORD *)(v4 + 208) = 0;
  *((_QWORD *)this + 17) = CFDictionaryCreateMutable(kCFAllocatorDefault, 0, &kCFTypeDictionaryKeyCallBacks, &kCFTypeDictionaryValueCallBacks);
  *((_QWORD *)this + 18) = CFDictionaryCreateMutable(kCFAllocatorDefault, 0, &kCFTypeDictionaryKeyCallBacks, &kCFTypeDictionaryValueCallBacks);
  *((_QWORD *)this + 19) = CFArrayCreateMutable(kCFAllocatorDefault, 0, &kCFTypeArrayCallBacks);
  if (a2)
  {
    if (*a2)
      std::string::assign(v5, a2);
  }
}

void sub_1FBED0(_Unwind_Exception *a1)
{
  char *v1;
  void **v2;

  if (v1[215] < 0)
    operator delete(*v2);
  PFDEpubXmlParseHandler::~PFDEpubXmlParseHandler((PFDEpubXmlParseHandler *)v1);
  _Unwind_Resume(a1);
}

void PFDEpubEncryptionParser::~PFDEpubEncryptionParser(PFDEpubEncryptionParser *this)
{
  const void *v2;
  const void *v3;
  const void *v4;
  const void *v5;
  const void *v6;
  const void *v7;
  const void *v8;

  *(_QWORD *)this = &off_42C210;
  v2 = (const void *)*((_QWORD *)this + 17);
  if (v2)
  {
    CFRelease(v2);
    *((_QWORD *)this + 17) = 0;
  }
  v3 = (const void *)*((_QWORD *)this + 18);
  if (v3)
  {
    CFRelease(v3);
    *((_QWORD *)this + 18) = 0;
  }
  v4 = (const void *)*((_QWORD *)this + 19);
  if (v4)
  {
    CFRelease(v4);
    *((_QWORD *)this + 19) = 0;
  }
  v5 = (const void *)*((_QWORD *)this + 20);
  if (v5)
  {
    CFRelease(v5);
    *((_QWORD *)this + 20) = 0;
  }
  v6 = (const void *)*((_QWORD *)this + 21);
  if (v6)
  {
    CFRelease(v6);
    *((_QWORD *)this + 21) = 0;
  }
  v7 = (const void *)*((_QWORD *)this + 22);
  if (v7)
  {
    CFRelease(v7);
    *((_QWORD *)this + 22) = 0;
  }
  v8 = (const void *)*((_QWORD *)this + 23);
  if (v8)
  {
    CFRelease(v8);
    *((_QWORD *)this + 23) = 0;
  }
  if (*((char *)this + 215) < 0)
    operator delete(*((void **)this + 24));
  PFDEpubXmlParseHandler::~PFDEpubXmlParseHandler(this);
}

{
  PFDEpubEncryptionParser::~PFDEpubEncryptionParser(this);
  operator delete();
}

const xmlChar *PFDEpubEncryptionParser::StartRead(PFDEpubEncryptionParser *this)
{
  const xmlChar *result;

  *((_QWORD *)this + 27) = xmlTextReaderConstString(*((xmlTextReaderPtr *)this + 1), (const xmlChar *)"EncryptedData");
  *((_QWORD *)this + 28) = xmlTextReaderConstString(*((xmlTextReaderPtr *)this + 1), (const xmlChar *)"compression");
  *((_QWORD *)this + 29) = xmlTextReaderConstString(*((xmlTextReaderPtr *)this + 1), (const xmlChar *)"deenc:compression");
  *((_QWORD *)this + 30) = xmlTextReaderConstString(*((xmlTextReaderPtr *)this + 1), (const xmlChar *)"EncryptionMethod");
  *((_QWORD *)this + 31) = xmlTextReaderConstString(*((xmlTextReaderPtr *)this + 1), (const xmlChar *)"Algorithm");
  *((_QWORD *)this + 32) = xmlTextReaderConstString(*((xmlTextReaderPtr *)this + 1), (const xmlChar *)"CipherReference");
  *((_QWORD *)this + 33) = xmlTextReaderConstString(*((xmlTextReaderPtr *)this + 1), (const xmlChar *)"URI");
  result = xmlTextReaderConstString(*((xmlTextReaderPtr *)this + 1), (const xmlChar *)"KeyName");
  *((_QWORD *)this + 34) = result;
  *((_QWORD *)this + 35) = CFSTR("encryptionAlgorithm");
  *((_QWORD *)this + 36) = CFSTR("compressionAlgorithm");
  *((_QWORD *)this + 37) = CFSTR("http://www.idpf.org/2008/embedding");
  *((_QWORD *)this + 38) = CFSTR("http://itunes.apple.com/dataenc");
  return result;
}

void PFDEpubEncryptionParser::StopRead(PFDEpubEncryptionParser *this)
{
  const void *v2;
  const void *v3;
  const void *v4;
  const void *v5;

  *(_OWORD *)((char *)this + 216) = 0u;
  *(_OWORD *)((char *)this + 248) = 0u;
  *(_OWORD *)((char *)this + 264) = 0u;
  *(_OWORD *)((char *)this + 232) = 0u;
  v2 = (const void *)*((_QWORD *)this + 35);
  if (v2)
  {
    CFRelease(v2);
    *((_QWORD *)this + 35) = 0;
  }
  v3 = (const void *)*((_QWORD *)this + 36);
  if (v3)
  {
    CFRelease(v3);
    *((_QWORD *)this + 36) = 0;
  }
  v4 = (const void *)*((_QWORD *)this + 37);
  if (v4)
  {
    CFRelease(v4);
    *((_QWORD *)this + 37) = 0;
  }
  v5 = (const void *)*((_QWORD *)this + 38);
  if (v5)
  {
    CFRelease(v5);
    *((_QWORD *)this + 38) = 0;
  }
}

void PFDEpubEncryptionParser::StartElement(uint64_t a1, const xmlChar *a2, uint64_t a3)
{
  const void *v6;
  const void *v7;
  const void *v8;
  const void *v9;
  uint64_t v10;
  const char *v11;
  const void *v12;
  uint64_t v13;
  const char *v14;
  const void *v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  std::string::size_type v19;
  std::string *v20;
  char *v21;
  int64_t v22;
  int64_t size;
  std::string *v24;
  int v25;
  std::string *v26;
  int64_t v27;
  std::string *v28;
  std::string *v29;
  std::string *v30;
  std::string v31;

  PFDEpubXmlParseHandler::StartElement(a1);
  if (xmlStrEqual(a2, *(const xmlChar **)(a1 + 216)))
  {
    v6 = *(const void **)(a1 + 160);
    if (v6)
    {
      CFRelease(v6);
      *(_QWORD *)(a1 + 160) = 0;
    }
    v7 = *(const void **)(a1 + 168);
    if (v7)
    {
      CFRelease(v7);
      *(_QWORD *)(a1 + 168) = 0;
    }
    v8 = *(const void **)(a1 + 176);
    if (v8)
    {
      CFRelease(v8);
      *(_QWORD *)(a1 + 176) = 0;
    }
    v9 = *(const void **)(a1 + 184);
    if (v9)
    {
      CFRelease(v9);
      *(_QWORD *)(a1 + 184) = 0;
    }
    v10 = sub_1C95FC(a3, (const xmlChar **)(a1 + 224));
    if (a3 + 8 == v10)
      v10 = sub_1C95FC(a3, (const xmlChar **)(a1 + 232));
    if (v10 != a3 + 8)
    {
      v11 = (const char *)(v10 + 40);
      if (*(char *)(v10 + 63) < 0)
        v11 = *(const char **)v11;
      *(_QWORD *)(a1 + 184) = CFStringCreateWithCString(kCFAllocatorDefault, v11, 0x8000100u);
    }
  }
  else if (xmlStrEqual(a2, *(const xmlChar **)(a1 + 240)))
  {
    v12 = *(const void **)(a1 + 160);
    if (v12)
    {
      CFRelease(v12);
      *(_QWORD *)(a1 + 160) = 0;
    }
    v13 = sub_1C95FC(a3, (const xmlChar **)(a1 + 248));
    if (a3 + 8 != v13)
    {
      v14 = (const char *)(v13 + 40);
      if (*(char *)(v13 + 63) < 0)
        v14 = *(const char **)v14;
      *(_QWORD *)(a1 + 160) = CFStringCreateWithCString(kCFAllocatorDefault, v14, 0x8000100u);
    }
  }
  else if (xmlStrEqual(a2, *(const xmlChar **)(a1 + 256)))
  {
    v15 = *(const void **)(a1 + 168);
    if (v15)
    {
      CFRelease(v15);
      *(_QWORD *)(a1 + 168) = 0;
    }
    v16 = sub_1C95FC(a3, (const xmlChar **)(a1 + 264));
    if (a3 + 8 != v16)
    {
      PFDEpubXmlParseHandler::hrefStrippingHash((std::string *)(v16 + 40), &v31);
      if (*(char *)(a1 + 215) < 0)
        v18 = *(_QWORD *)(a1 + 200);
      else
        v18 = *(unsigned __int8 *)(a1 + 215);
      v19 = v31.__r_.__value_.__r.__words[0];
      if (v18)
      {
        v17 = *(_BYTE *)(a1 + 215);
        if ((v31.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
          v20 = &v31;
        else
          v20 = (std::string *)v31.__r_.__value_.__r.__words[0];
        if (v17 >= 0)
          v21 = (char *)(a1 + 192);
        else
          v21 = *(char **)(a1 + 192);
        if (v17 >= 0)
          v22 = *(unsigned __int8 *)(a1 + 215);
        else
          v22 = *(_QWORD *)(a1 + 200);
        if (v22)
        {
          if ((v31.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
            size = HIBYTE(v31.__r_.__value_.__r.__words[2]);
          else
            size = v31.__r_.__value_.__l.__size_;
          if (size >= v22)
          {
            v24 = (std::string *)((char *)v20 + size);
            v25 = *v21;
            v26 = v20;
            do
            {
              v27 = size - v22;
              if (v27 == -1)
                break;
              v28 = (std::string *)memchr(v26, v25, v27 + 1);
              if (!v28)
                break;
              v29 = v28;
              if (!memcmp(v28, v21, v22))
              {
                if (v29 == v24 || v29 != v20)
                  break;
                goto LABEL_53;
              }
              v26 = (std::string *)((char *)&v29->__r_.__value_.__l.__data_ + 1);
              size = (char *)v24 - ((char *)&v29->__r_.__value_.__l.__data_ + 1);
            }
            while (size >= v22);
          }
        }
        else
        {
LABEL_53:
          std::string::erase(&v31, 0, v22);
          v19 = v31.__r_.__value_.__r.__words[0];
        }
      }
      if ((v31.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v30 = &v31;
      else
        v30 = (std::string *)v19;
      *(_QWORD *)(a1 + 168) = CFStringCreateWithCString(kCFAllocatorDefault, (const char *)v30, 0x8000100u);
      if (SHIBYTE(v31.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v31.__r_.__value_.__l.__data_);
    }
    if (!*(_QWORD *)(a1 + 168))
      objc_msgSend(+[TSUAssertionHandler currentHandler](TSUAssertionHandler, "currentHandler"), "handleFailureInFunction:file:lineNumber:description:", +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "virtual void PFDEpubEncryptionParser::StartElement(const xmlChar *, const PFDEpubXmlParseHandler::Attributes &)"), +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Alder/compatibility/Publication/DRM/PFDEpubEncryptionParser.cpp"), 157, CFSTR("invalid nil value for '%s'"), "mManifestHref");
  }
}

void sub_1FC448(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t PFDEpubEncryptionParser::EndElement(PFDEpubEncryptionParser *this, xmlChar *str1)
{
  const __CFString *v4;
  __CFDictionary *Mutable;
  const void *v6;
  const void *v7;
  const void *v8;
  const char *v9;
  CFStringRef v10;
  const void *v11;

  if (xmlStrEqual(str1, *((const xmlChar **)this + 27)))
  {
    v4 = (const __CFString *)*((_QWORD *)this + 20);
    if (v4 && *((_QWORD *)this + 21))
    {
      if (CFStringCompare(*((CFStringRef *)this + 37), v4, 0))
      {
        if (CFStringCompare(*((CFStringRef *)this + 38), *((CFStringRef *)this + 20), 0)
          || (v11 = (const void *)*((_QWORD *)this + 22)) == 0)
        {
          Mutable = CFDictionaryCreateMutable(kCFAllocatorDefault, 0, &kCFTypeDictionaryKeyCallBacks, &kCFTypeDictionaryValueCallBacks);
          CFDictionaryAddValue(Mutable, *((const void **)this + 35), *((const void **)this + 20));
          v6 = (const void *)*((_QWORD *)this + 22);
          if (v6)
            CFDictionaryAddValue(Mutable, PFDEpubEncryptionParserFairPlayIdKey, v6);
          v7 = (const void *)*((_QWORD *)this + 23);
          if (v7)
            CFDictionaryAddValue(Mutable, *((const void **)this + 36), v7);
          CFDictionaryAddValue(*((CFMutableDictionaryRef *)this + 18), *((const void **)this + 21), Mutable);
          CFRelease(Mutable);
        }
        else
        {
          CFDictionaryAddValue(*((CFMutableDictionaryRef *)this + 17), *((const void **)this + 21), v11);
        }
      }
      else
      {
        CFArrayAppendValue(*((CFMutableArrayRef *)this + 19), *((const void **)this + 21));
      }
    }
  }
  else if (xmlStrEqual(str1, *((const xmlChar **)this + 34)))
  {
    v8 = (const void *)*((_QWORD *)this + 22);
    if (v8)
    {
      CFRelease(v8);
      *((_QWORD *)this + 22) = 0;
    }
    v9 = (char *)this + 112;
    if (*((char *)this + 135) < 0)
      v9 = *(const char **)v9;
    v10 = CFStringCreateWithCString(kCFAllocatorDefault, v9, 0x8000100u);
    *((_QWORD *)this + 22) = v10;
    if (!v10)
      objc_msgSend(+[TSUAssertionHandler currentHandler](TSUAssertionHandler, "currentHandler"), "handleFailureInFunction:file:lineNumber:description:", +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "virtual void PFDEpubEncryptionParser::EndElement(const xmlChar *)"), +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Alder/compatibility/Publication/DRM/PFDEpubEncryptionParser.cpp"), 197, CFSTR("invalid nil value for '%s'"), "mRightsId");
  }
  return PFDEpubXmlParseHandler::EndElement((uint64_t)this, str1);
}

void PFDEpubRightsParser::PFDEpubRightsParser(PFDEpubRightsParser *this)
{
  _QWORD *v2;

  PFDEpubXmlParseHandler::PFDEpubXmlParseHandler(this);
  *v2 = &off_42C270;
  v2[18] = 0;
  v2[19] = 0;
  *((_QWORD *)this + 17) = CFDictionaryCreateMutable(kCFAllocatorDefault, 0, &kCFTypeDictionaryKeyCallBacks, &kCFTypeDictionaryValueCallBacks);
}

void sub_1FC69C(_Unwind_Exception *a1)
{
  PFDEpubXmlParseHandler *v1;

  PFDEpubXmlParseHandler::~PFDEpubXmlParseHandler(v1);
  _Unwind_Resume(a1);
}

void PFDEpubRightsParser::~PFDEpubRightsParser(PFDEpubRightsParser *this)
{
  const void *v2;
  const void *v3;
  const void *v4;

  *(_QWORD *)this = &off_42C270;
  v2 = (const void *)*((_QWORD *)this + 17);
  if (v2)
  {
    CFRelease(v2);
    *((_QWORD *)this + 17) = 0;
  }
  v3 = (const void *)*((_QWORD *)this + 18);
  if (v3)
  {
    CFRelease(v3);
    *((_QWORD *)this + 18) = 0;
  }
  v4 = (const void *)*((_QWORD *)this + 19);
  if (v4)
  {
    CFRelease(v4);
    *((_QWORD *)this + 19) = 0;
  }
  PFDEpubXmlParseHandler::~PFDEpubXmlParseHandler(this);
}

{
  PFDEpubRightsParser::~PFDEpubRightsParser(this);
  operator delete();
}

const xmlChar *PFDEpubRightsParser::StartRead(PFDEpubRightsParser *this)
{
  const xmlChar *result;

  *((_QWORD *)this + 20) = xmlTextReaderConstString(*((xmlTextReaderPtr *)this + 1), (const xmlChar *)"sID");
  *((_QWORD *)this + 21) = xmlTextReaderConstString(*((xmlTextReaderPtr *)this + 1), (const xmlChar *)"sData");
  result = xmlTextReaderConstString(*((xmlTextReaderPtr *)this + 1), (const xmlChar *)"sinf");
  *((_QWORD *)this + 22) = result;
  return result;
}

_QWORD *PFDEpubRightsParser::StopRead(_QWORD *this)
{
  this[20] = 0;
  this[21] = 0;
  this[22] = 0;
  return this;
}

void PFDEpubRightsParser::StartElement(uint64_t a1, const xmlChar *a2)
{
  const void *v4;
  const void *v5;

  PFDEpubXmlParseHandler::StartElement(a1);
  if (xmlStrEqual(a2, *(const xmlChar **)(a1 + 176)))
  {
    v4 = *(const void **)(a1 + 152);
    if (v4)
    {
      CFRelease(v4);
      *(_QWORD *)(a1 + 152) = 0;
    }
    v5 = *(const void **)(a1 + 144);
    if (v5)
    {
      CFRelease(v5);
      *(_QWORD *)(a1 + 144) = 0;
    }
  }
}

uint64_t PFDEpubRightsParser::EndElement(PFDEpubRightsParser *this, xmlChar *str1)
{
  const void *v4;
  const char *v5;
  CFStringRef v6;
  const void *v7;
  uint64_t v8;
  CFIndex v9;
  __CFData *Mutable;
  __CFData *v11;
  unsigned __int8 *v12;
  UInt8 *MutableBytePtr;
  BOOL v14;
  __CFData *v15;
  CFIndex v16;
  const void *v17;
  const void *v18;
  const void *v19;
  int v20;
  int v21;
  unsigned int v22;
  char *v23;
  UInt8 *v24;
  unsigned int v25;
  unsigned int v26;
  int v27;
  UInt8 v28;
  unsigned int v29;
  UInt8 *v30;
  unsigned int v31;
  uint64_t v32;
  unsigned int v33;
  unsigned int v34;

  if (xmlStrEqual(str1, *((const xmlChar **)this + 20)))
  {
    v4 = (const void *)*((_QWORD *)this + 19);
    if (v4)
    {
      CFRelease(v4);
      *((_QWORD *)this + 19) = 0;
    }
    v5 = (char *)this + 112;
    if (*((char *)this + 135) < 0)
      v5 = *(const char **)v5;
    v6 = CFStringCreateWithCString(kCFAllocatorDefault, v5, 0x8000100u);
    *((_QWORD *)this + 19) = v6;
    if (!v6)
      objc_msgSend(+[TSUAssertionHandler currentHandler](TSUAssertionHandler, "currentHandler"), "handleFailureInFunction:file:lineNumber:description:", +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "virtual void PFDEpubRightsParser::EndElement(const xmlChar *)"), +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Alder/compatibility/Publication/DRM/PFDEpubRightsParser.cpp"), 205, CFSTR("invalid nil value for '%s'"), "mRightsId");
    return PFDEpubXmlParseHandler::EndElement((uint64_t)this, str1);
  }
  if (xmlStrEqual(str1, *((const xmlChar **)this + 21)))
  {
    v7 = (const void *)*((_QWORD *)this + 18);
    if (v7)
    {
      CFRelease(v7);
      *((_QWORD *)this + 18) = 0;
    }
    if (*((char *)this + 135) >= 0)
      LODWORD(v8) = *((unsigned __int8 *)this + 135);
    else
      v8 = *((_QWORD *)this + 15);
    v9 = 3 * vcvtpd_u64_f64((double)v8 * 0.25);
    Mutable = CFDataCreateMutable(kCFAllocatorDefault, v9);
    if (!Mutable)
    {
      *((_QWORD *)this + 18) = 0;
      objc_msgSend(+[TSUAssertionHandler currentHandler](TSUAssertionHandler, "currentHandler"), "handleFailureInFunction:file:lineNumber:description:", +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "virtual void PFDEpubRightsParser::EndElement(const xmlChar *)"), +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Alder/compatibility/Publication/DRM/PFDEpubRightsParser.cpp"), 210, CFSTR("invalid nil value for '%s'"), "mSinfData");
      return PFDEpubXmlParseHandler::EndElement((uint64_t)this, str1);
    }
    v11 = Mutable;
    CFDataSetLength(Mutable, v9);
    if (*((char *)this + 135) >= 0)
      v12 = (unsigned __int8 *)this + 112;
    else
      v12 = (unsigned __int8 *)*((_QWORD *)this + 14);
    MutableBytePtr = CFDataGetMutableBytePtr(v11);
    if (!v12 || (MutableBytePtr ? (v14 = 3 * ((v8 + 3) >> 2) > v9) : (v14 = 1), v14))
    {
      v15 = v11;
      v16 = 0;
LABEL_56:
      CFDataSetLength(v15, v16);
      *((_QWORD *)this + 18) = v11;
      return PFDEpubXmlParseHandler::EndElement((uint64_t)this, str1);
    }
    if (!(_DWORD)v8)
    {
      v30 = MutableBytePtr;
LABEL_53:
      v34 = (_DWORD)v30 - (_DWORD)MutableBytePtr;
      if (v30 - MutableBytePtr > v9)
        objc_msgSend(+[TSUAssertionHandler currentHandler](TSUAssertionHandler, "currentHandler"), "handleFailureInFunction:file:lineNumber:description:", +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "UInt32 RTSPProtocolBase64Decode(const UInt8 *, UInt32, UInt8 *, UInt32)"), +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Alder/compatibility/Publication/DRM/PFDEpubRightsParser.cpp"), 110, CFSTR("bad decode results"));
      v16 = v34;
      v15 = v11;
      goto LABEL_56;
    }
    v20 = 0;
    v21 = 0;
    v22 = 0;
    v23 = (char *)&v12[v8];
    v24 = MutableBytePtr;
    do
    {
      v26 = *v12++;
      v25 = v26;
      v27 = byte_31620A[v26];
      if (v27 == 255)
      {
        if (v25 == 61)
        {
          v22 <<= 6;
          ++v20;
        }
      }
      else
      {
        v28 = v27 | ((_BYTE)v22 << 6);
        ++v21;
        v20 = 0;
        if ((v21 & 3) != 0)
        {
          v22 = v27 | (v22 << 6);
        }
        else
        {
          v29 = v22 << 6;
          *v24 = BYTE2(v29);
          v24[1] = BYTE1(v29);
          v24[2] = v28;
          v24 += 3;
          v22 = 0;
        }
      }
    }
    while (v12 < (unsigned __int8 *)v23);
    if (v20)
    {
      *v24 = BYTE2(v22);
      v30 = v24 + 1;
      if (v20 != 1)
        goto LABEL_53;
    }
    else
    {
      if ((v8 & 3) != 3)
      {
        if ((v8 & 3) != 2)
        {
          v30 = v24;
          goto LABEL_53;
        }
        v31 = v22 >> 4;
        v32 = 1;
        v30 = v24;
        goto LABEL_52;
      }
      v33 = v22 >> 10;
      v22 <<= 6;
      *v24 = v33;
      v30 = v24 + 1;
    }
    v31 = v22 >> 8;
    v32 = 2;
LABEL_52:
    *v30 = v31;
    v30 = &v24[v32];
    goto LABEL_53;
  }
  if (xmlStrEqual(str1, *((const xmlChar **)this + 22)))
  {
    v17 = (const void *)*((_QWORD *)this + 19);
    if (v17)
    {
      v18 = (const void *)*((_QWORD *)this + 18);
      if (!v18
        || (CFDictionaryAddValue(*((CFMutableDictionaryRef *)this + 17), v17, v18),
            (v17 = (const void *)*((_QWORD *)this + 19)) != 0))
      {
        CFRelease(v17);
        *((_QWORD *)this + 19) = 0;
      }
    }
    v19 = (const void *)*((_QWORD *)this + 18);
    if (v19)
    {
      CFRelease(v19);
      *((_QWORD *)this + 18) = 0;
    }
  }
  return PFDEpubXmlParseHandler::EndElement((uint64_t)this, str1);
}

void sub_1FF444(_Unwind_Exception *a1, int a2)
{
  if (a2 == 1)
  {
    objc_begin_catch(a1);
    objc_end_catch();
    JUMPOUT(0x1FF400);
  }
  _Unwind_Resume(a1);
}

void sub_200AE8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_201938(_Unwind_Exception *a1)
{
  objc_end_catch();
  _Unwind_Resume(a1);
}

void sub_202AB4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_202B78(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_202BB0(id a1)
{
  qword_5437A0 = (uint64_t)objc_alloc_init((Class)TSUMutablePointerSet);
  dword_5437A8 = 0;
}

BOOL sub_202BDC(uint64_t a1)
{
  return sub_202C34(a1) != 0;
}

id sub_202BF8(uint64_t a1)
{
  uint64_t v2;

  v2 = 0;
  return objc_msgSend(sub_202C34(a1), "dataWithContentsOfURL:error:", a1, &v2);
}

void *sub_202C34(uint64_t a1)
{
  void *v2;
  id v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  _BYTE v13[128];

  os_unfair_lock_lock((os_unfair_lock_t)&dword_5437A8);
  v11 = 0u;
  v12 = 0u;
  v9 = 0u;
  v10 = 0u;
  v2 = (void *)qword_5437A0;
  v3 = objc_msgSend((id)qword_5437A0, "countByEnumeratingWithState:objects:count:", &v9, v13, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v10;
LABEL_3:
    v6 = 0;
    while (1)
    {
      if (*(_QWORD *)v10 != v5)
        objc_enumerationMutation(v2);
      v7 = *(void **)(*((_QWORD *)&v9 + 1) + 8 * v6);
      if ((objc_msgSend(v7, "p_canDecryptFileAtURL:", a1) & 1) != 0)
        break;
      if (v4 == (id)++v6)
      {
        v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v9, v13, 16);
        if (v4)
          goto LABEL_3;
        goto LABEL_9;
      }
    }
  }
  else
  {
LABEL_9:
    v7 = 0;
  }
  os_unfair_lock_unlock((os_unfair_lock_t)&dword_5437A8);
  return v7;
}

void sub_202E54(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void PFDEpubXmlParseHandler::PFDEpubXmlParseHandler(PFDEpubXmlParseHandler *this)
{
  *(_QWORD *)this = &off_42C300;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 4) = 0;
  *((_QWORD *)this + 3) = 0;
  *((_QWORD *)this + 2) = (char *)this + 24;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 88) = 0u;
  *(_OWORD *)((char *)this + 104) = 0u;
  *(_OWORD *)((char *)this + 120) = 0u;
}

void PFDEpubXmlParseHandler::~PFDEpubXmlParseHandler(PFDEpubXmlParseHandler *this)
{
  xmlTextReader *v2;

  *(_QWORD *)this = &off_42C300;
  v2 = (xmlTextReader *)*((_QWORD *)this + 1);
  if (v2)
    xmlFreeTextReader(v2);
  if (*((char *)this + 135) < 0)
    operator delete(*((void **)this + 14));
  if (*((char *)this + 111) < 0)
    operator delete(*((void **)this + 11));
  if (*((char *)this + 87) < 0)
    operator delete(*((void **)this + 8));
  if (*((char *)this + 63) < 0)
    operator delete(*((void **)this + 5));
  sub_2034C8((uint64_t)this + 16, *((char **)this + 3));
}

BOOL PFDEpubXmlParseHandler::parse(PFDEpubXmlParseHandler *this, std::string::value_type *__s)
{
  xmlTextReaderPtr v5;
  int v6;
  int v7;
  int i;
  const xmlChar *v9;
  const xmlChar *v10;
  BOOL v11;
  const xmlChar *v12;
  const xmlChar *v13;
  const xmlChar *v14;
  int v15;
  const xmlChar *v16[2];

  if (!__s)
    return 1;
  if (!*__s)
    return 1;
  std::string::assign((std::string *)((char *)this + 40), __s);
  if (*((char *)this + 111) < 0)
  {
    **((_BYTE **)this + 11) = 0;
    *((_QWORD *)this + 12) = 0;
  }
  else
  {
    *((_BYTE *)this + 88) = 0;
    *((_BYTE *)this + 111) = 0;
  }
  std::string::assign((std::string *)((char *)this + 88), __s);
  v5 = xmlReaderForFile(__s, 0, 2048);
  *((_QWORD *)this + 1) = v5;
  if (!v5)
    return 1;
  (*(void (**)(PFDEpubXmlParseHandler *))(*(_QWORD *)this + 40))(this);
  v6 = xmlTextReaderRead(*((xmlTextReaderPtr *)this + 1));
  if (v6 == 1)
  {
    do
    {
      v7 = xmlTextReaderNodeType(*((xmlTextReaderPtr *)this + 1));
      switch(v7)
      {
        case 15:
          v13 = xmlTextReaderConstLocalName(*((xmlTextReaderPtr *)this + 1));
          (*(void (**)(PFDEpubXmlParseHandler *, const xmlChar *))(*(_QWORD *)this + 16))(this, v13);
          break;
        case 3:
          v12 = xmlTextReaderConstValue(*((xmlTextReaderPtr *)this + 1));
          (*(void (**)(PFDEpubXmlParseHandler *, const xmlChar *))(*(_QWORD *)this + 8))(this, v12);
          break;
        case 1:
          sub_2034C8((uint64_t)this + 16, *((char **)this + 3));
          *((_QWORD *)this + 3) = 0;
          *((_QWORD *)this + 4) = 0;
          *((_QWORD *)this + 2) = (char *)this + 24;
          if (xmlTextReaderHasAttributes(*((xmlTextReaderPtr *)this + 1)))
          {
            for (i = xmlTextReaderMoveToFirstAttribute(*((xmlTextReaderPtr *)this + 1));
                  i == 1;
                  i = xmlTextReaderMoveToNextAttribute(*((xmlTextReaderPtr *)this + 1)))
            {
              v9 = xmlTextReaderConstLocalName(*((xmlTextReaderPtr *)this + 1));
              v10 = xmlTextReaderConstValue(*((xmlTextReaderPtr *)this + 1));
              if (v9)
                v11 = v10 == 0;
              else
                v11 = 1;
              if (!v11)
              {
                v16[0] = v9;
                v16[1] = v10;
                sub_203518((uint64_t **)this + 2, v16, v16);
              }
            }
            xmlTextReaderMoveToElement(*((xmlTextReaderPtr *)this + 1));
          }
          v14 = xmlTextReaderConstLocalName(*((xmlTextReaderPtr *)this + 1));
          (**(void (***)(PFDEpubXmlParseHandler *, const xmlChar *, char *))this)(this, v14, (char *)this + 16);
          break;
      }
      v15 = xmlTextReaderRead(*((xmlTextReaderPtr *)this + 1));
    }
    while (v15 == 1);
    v6 = v15;
  }
  (*(void (**)(PFDEpubXmlParseHandler *))(*(_QWORD *)this + 48))(this);
  xmlFreeTextReader(*((xmlTextReaderPtr *)this + 1));
  *((_QWORD *)this + 1) = 0;
  return v6 == 0;
}

uint64_t PFDEpubXmlParseHandler::StartElement(uint64_t result)
{
  if (*(char *)(result + 135) < 0)
  {
    **(_BYTE **)(result + 112) = 0;
    *(_QWORD *)(result + 120) = 0;
  }
  else
  {
    *(_BYTE *)(result + 112) = 0;
    *(_BYTE *)(result + 135) = 0;
  }
  return result;
}

std::string *PFDEpubXmlParseHandler::FoundText(std::string *this, const std::string::value_type *a2)
{
  if (a2)
    return std::string::append((std::string *)((char *)this + 112), a2);
  return this;
}

uint64_t PFDEpubXmlParseHandler::EndElement(uint64_t this, const unsigned __int8 *a2)
{
  if (*(char *)(this + 135) < 0)
  {
    **(_BYTE **)(this + 112) = 0;
    *(_QWORD *)(this + 120) = 0;
  }
  else
  {
    *(_BYTE *)(this + 112) = 0;
    *(_BYTE *)(this + 135) = 0;
  }
  return this;
}

void PFDEpubXmlParseHandler::hrefStrippingHash(std::string *this@<X0>, std::string *a2@<X8>)
{
  int v4;
  std::string::size_type v5;
  std::string *v6;
  char *v7;

  v4 = SHIBYTE(this->__r_.__value_.__r.__words[2]);
  if ((v4 & 0x80000000) == 0)
  {
    *a2 = *this;
    goto LABEL_4;
  }
  sub_1EA720(a2, this->__r_.__value_.__l.__data_, this->__r_.__value_.__l.__size_);
  v4 = SHIBYTE(this->__r_.__value_.__r.__words[2]);
  if ((v4 & 0x80000000) == 0)
  {
LABEL_4:
    if (!(_BYTE)v4)
      return;
    goto LABEL_5;
  }
  if (!this->__r_.__value_.__l.__size_)
    return;
LABEL_5:
  v5 = std::string::find(this, 35, 0);
  if (v5 != -1)
    std::string::erase(a2, v5, 0xFFFFFFFFFFFFFFFFLL);
  if ((this->__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v6 = this;
  else
    v6 = (std::string *)this->__r_.__value_.__r.__words[0];
  v7 = xmlURIUnescapeString((const char *)v6, -1, 0);
  if (v7)
  {
    std::string::assign(a2, v7);
    xmlFree(v7);
  }
}

void sub_2034A8(_Unwind_Exception *exception_object)
{
  uint64_t v1;

  if (*(char *)(v1 + 23) < 0)
    operator delete(*(void **)v1);
  _Unwind_Resume(exception_object);
}

void sub_2034C8(uint64_t a1, char *a2)
{
  if (a2)
  {
    sub_2034C8(a1, *(_QWORD *)a2);
    sub_2034C8(a1, *((_QWORD *)a2 + 1));
    if (a2[63] < 0)
      operator delete(*((void **)a2 + 5));
    operator delete(a2);
  }
}

uint64_t *sub_203518(uint64_t **a1, const xmlChar **a2, _QWORD *a3)
{
  uint64_t **v5;
  uint64_t *result;
  uint64_t *v7;
  uint64_t v8;

  v5 = (uint64_t **)sub_1C6D60((uint64_t)a1, &v8, a2);
  result = *v5;
  if (!*v5)
  {
    sub_203594((uint64_t)a1, a3, (uint64_t)&v7);
    sub_3CA4C(a1, v8, v5, v7);
    return v7;
  }
  return result;
}

_QWORD *sub_203594@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  _QWORD *v6;
  char *v7;
  _QWORD *result;

  v5 = a1 + 8;
  v6 = operator new(0x40uLL);
  *(_QWORD *)(a3 + 8) = v5;
  *(_QWORD *)a3 = v6;
  *(_BYTE *)(a3 + 16) = 0;
  v7 = (char *)a2[1];
  v6[4] = *a2;
  result = sub_1CEE44(v6 + 5, v7);
  *(_BYTE *)(a3 + 16) = 1;
  return result;
}

void sub_2035FC(_Unwind_Exception *a1)
{
  _QWORD *v1;
  void **v2;
  uint64_t v3;

  *v1 = 0;
  sub_203618(v3, v2);
  _Unwind_Resume(a1);
}

void sub_203618(uint64_t a1, void **__p)
{
  if (*(_BYTE *)(a1 + 8))
  {
    if (*((char *)__p + 63) < 0)
      operator delete(__p[5]);
  }
  else if (!__p)
  {
    return;
  }
  operator delete(__p);
}

void sub_2042D8(_Unwind_Exception *a1)
{
  void *v1;

  objc_end_catch();
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_205874(void *exc_buf, int a2)
{
  uint64_t v2;
  id v3;

  if (a2 == 2)
  {
    v3 = objc_begin_catch(exc_buf);
    objc_end_catch();
    JUMPOUT(0x205804);
  }
  objc_begin_catch(exc_buf);
  if (!v2)
    JUMPOUT(0x205820);
  JUMPOUT(0x20580CLL);
}

void sub_2066E8(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,void *__p,uint64_t a30,int a31,__int16 a32,char a33,char a34,void *a35,uint64_t a36,int a37,__int16 a38,char a39,char a40)
{
  uint64_t v40;
  uint64_t v41;
  id v44;

  sub_1EA374(v41 - 176);
  if (*(char *)(v41 - 105) < 0)
    operator delete(*(void **)(v41 - 128));
  if (a2 == 2)
  {
    v44 = objc_begin_catch(a1);
    objc_end_catch();
    JUMPOUT(0x206684);
  }
  objc_begin_catch(a1);
  if (!v40)
    JUMPOUT(0x206694);
  JUMPOUT(0x20668CLL);
}

void sub_20698C(_Unwind_Exception *a1)
{
  objc_end_catch();
  _Unwind_Resume(a1);
}

unsigned __int8 *sub_206A00(uint64_t a1, unsigned __int8 *a2, uint64_t a3, __int128 **a4)
{
  unint64_t v4;
  _QWORD *v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint8x8_t v12;
  unint64_t v13;
  unsigned __int8 **v14;
  unsigned __int8 *i;
  unint64_t v16;
  _QWORD *v17;
  __int128 *v18;
  __int128 v19;
  float v20;
  float v21;
  _BOOL8 v22;
  unint64_t v23;
  unint64_t v24;
  size_t v25;
  _QWORD *v26;
  unint64_t v27;
  _QWORD v29[2];
  char v30;

  v8 = (_QWORD *)(a1 + 24);
  v9 = sub_1D2920(a1 + 24, (uint64_t)a2);
  v10 = v9;
  v11 = *(_QWORD *)(a1 + 8);
  if (v11)
  {
    v12 = (uint8x8_t)vcnt_s8((int8x8_t)v11);
    v12.i16[0] = vaddlv_u8(v12);
    v13 = v12.u32[0];
    if (v12.u32[0] > 1uLL)
    {
      v4 = v9;
      if (v9 >= v11)
        v4 = v9 % v11;
    }
    else
    {
      v4 = (v11 - 1) & v9;
    }
    v14 = *(unsigned __int8 ***)(*(_QWORD *)a1 + 8 * v4);
    if (v14)
    {
      for (i = *v14; i; i = *(unsigned __int8 **)i)
      {
        v16 = *((_QWORD *)i + 1);
        if (v16 == v10)
        {
          if ((sub_1D2DC8(a1 + 32, i + 16, a2) & 1) != 0)
            return i;
        }
        else
        {
          if (v13 > 1)
          {
            if (v16 >= v11)
              v16 %= v11;
          }
          else
          {
            v16 &= v11 - 1;
          }
          if (v16 != v4)
            break;
        }
      }
    }
  }
  v17 = operator new(0x40uLL);
  v29[0] = v17;
  v29[1] = a1 + 16;
  *v17 = 0;
  v17[1] = v10;
  v18 = *a4;
  v19 = **a4;
  v17[4] = *((_QWORD *)*a4 + 2);
  *((_OWORD *)v17 + 1) = v19;
  *((_QWORD *)v18 + 1) = 0;
  *((_QWORD *)v18 + 2) = 0;
  *(_QWORD *)v18 = 0;
  v17[6] = 0;
  v17[7] = 0;
  v17[5] = 0;
  v30 = 1;
  v20 = (float)(unint64_t)(*(_QWORD *)(a1 + 24) + 1);
  v21 = *(float *)(a1 + 32);
  if (!v11 || (float)(v21 * (float)v11) < v20)
  {
    v22 = 1;
    if (v11 >= 3)
      v22 = (v11 & (v11 - 1)) != 0;
    v23 = v22 | (2 * v11);
    v24 = vcvtps_u32_f32(v20 / v21);
    if (v23 <= v24)
      v25 = v24;
    else
      v25 = v23;
    sub_1D2E6C(a1, v25);
    v11 = *(_QWORD *)(a1 + 8);
    if ((v11 & (v11 - 1)) != 0)
    {
      if (v10 >= v11)
        v4 = v10 % v11;
      else
        v4 = v10;
    }
    else
    {
      v4 = (v11 - 1) & v10;
    }
  }
  v26 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v4);
  if (v26)
  {
    *(_QWORD *)v29[0] = *v26;
    *v26 = v29[0];
  }
  else
  {
    *(_QWORD *)v29[0] = *(_QWORD *)(a1 + 16);
    *(_QWORD *)(a1 + 16) = v29[0];
    *(_QWORD *)(*(_QWORD *)a1 + 8 * v4) = a1 + 16;
    if (*(_QWORD *)v29[0])
    {
      v27 = *(_QWORD *)(*(_QWORD *)v29[0] + 8);
      if ((v11 & (v11 - 1)) != 0)
      {
        if (v27 >= v11)
          v27 %= v11;
      }
      else
      {
        v27 &= v11 - 1;
      }
      *(_QWORD *)(*(_QWORD *)a1 + 8 * v27) = v29[0];
    }
  }
  i = (unsigned __int8 *)v29[0];
  v29[0] = 0;
  ++*v8;
  sub_1EA7AC((uint64_t)v29, 0);
  return i;
}

void sub_206C8C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_1EA7AC((uint64_t)va, 0);
  _Unwind_Resume(a1);
}

char *sub_209BDC(uint64_t a1, char *__src, char *a3)
{
  char *v3;
  char *v4;
  char *v6;
  unint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  _QWORD *v11;
  uint64_t v12;
  char *v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  char *v19;
  char *v20;
  unint64_t v21;
  unint64_t v22;
  char *v23;
  uint64_t v24;
  void *__p;
  char *v27;
  char *v28;
  char *v29;
  uint64_t v30;

  v3 = a3;
  v4 = __src;
  v6 = *(char **)(a1 + 8);
  v8 = a1 + 16;
  v7 = *(_QWORD *)(a1 + 16);
  if ((unint64_t)v6 >= v7)
  {
    v13 = *(char **)a1;
    v14 = ((uint64_t)&v6[-*(_QWORD *)a1] >> 3) + 1;
    if (v14 >> 61)
      sub_36C30();
    v15 = __src - v13;
    v16 = (__src - v13) >> 3;
    v17 = v7 - (_QWORD)v13;
    if (v17 >> 2 > v14)
      v14 = v17 >> 2;
    if ((unint64_t)v17 >= 0x7FFFFFFFFFFFFFF8)
      v18 = 0x1FFFFFFFFFFFFFFFLL;
    else
      v18 = v14;
    v30 = a1 + 16;
    if (v18)
      v19 = (char *)sub_3CC38(a1 + 16, v18);
    else
      v19 = 0;
    v20 = &v19[8 * v16];
    __p = v19;
    v27 = v20;
    v28 = v20;
    v29 = &v19[8 * v18];
    if (v16 == v18)
    {
      if (v15 < 1)
      {
        if (v13 == v4)
          v22 = 1;
        else
          v22 = v15 >> 2;
        v23 = (char *)sub_3CC38(v8, v22);
        v20 = &v23[8 * (v22 >> 2)];
        __p = v23;
        v27 = v20;
        v29 = &v23[8 * v24];
        if (v19)
          operator delete(v19);
      }
      else
      {
        v21 = v16 + 2;
        if (v16 >= -1)
          v21 = v16 + 1;
        v20 -= 8 * (v21 >> 1);
        v27 = v20;
      }
    }
    *(_QWORD *)v20 = *(_QWORD *)v3;
    v28 = v20 + 8;
    v4 = sub_20AC70((void **)a1, (uint64_t)&__p, v4);
    if (v28 != v27)
      v28 += (v27 - v28 + 7) & 0xFFFFFFFFFFFFFFF8;
    if (__p)
      operator delete(__p);
  }
  else if (__src == v6)
  {
    *(_QWORD *)__src = *(_QWORD *)a3;
    *(_QWORD *)(a1 + 8) = __src + 8;
  }
  else
  {
    v9 = __src + 8;
    v10 = v6 - 8;
    v11 = *(_QWORD **)(a1 + 8);
    while (v10 < v6)
    {
      v12 = *(_QWORD *)v10;
      v10 += 8;
      *v11++ = v12;
    }
    *(_QWORD *)(a1 + 8) = v11;
    if (v6 != v9)
      memmove(&v6[-8 * ((v6 - v9) >> 3)], __src, v6 - v9);
    if (v4 <= v3)
      v3 += 8 * (*(_QWORD *)(a1 + 8) > (unint64_t)v3);
    *(_QWORD *)v4 = *(_QWORD *)v3;
  }
  return v4;
}

void sub_209DE4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, uint64_t a12)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

char *sub_20AC70(void **a1, uint64_t a2, char *__src)
{
  char *v5;
  char *v6;
  char *v7;
  char *v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  int64_t v12;
  char *v13;
  void *v14;
  void *v15;

  v5 = *(char **)(a2 + 8);
  v6 = (char *)*a1;
  v7 = v5;
  if (*a1 != __src)
  {
    v8 = __src;
    v7 = *(char **)(a2 + 8);
    do
    {
      v9 = *((_QWORD *)v8 - 1);
      v8 -= 8;
      *((_QWORD *)v7 - 1) = v9;
      v7 -= 8;
    }
    while (v8 != v6);
  }
  *(_QWORD *)(a2 + 8) = v7;
  v10 = a1[1];
  v11 = *(_QWORD *)(a2 + 16);
  v12 = v10 - __src;
  if (v10 != __src)
  {
    memmove(*(void **)(a2 + 16), __src, v10 - __src);
    v7 = *(char **)(a2 + 8);
  }
  *(_QWORD *)(a2 + 16) = v11 + v12;
  v13 = (char *)*a1;
  *a1 = v7;
  *(_QWORD *)(a2 + 8) = v13;
  v14 = a1[1];
  a1[1] = *(void **)(a2 + 16);
  *(_QWORD *)(a2 + 16) = v14;
  v15 = a1[2];
  a1[2] = *(void **)(a2 + 24);
  *(_QWORD *)(a2 + 24) = v15;
  *(_QWORD *)a2 = *(_QWORD *)(a2 + 8);
  return v5;
}

void sub_20AF84(void *exc_buf, int a2)
{
  _QWORD *v2;
  id v3;

  if (a2 == 2)
  {
    v3 = objc_begin_catch(exc_buf);
    if (v2)
      *v2 = +[TCMessageException nsError:domain:](TCMessageException, "nsError:domain:", v3, CFSTR("com.apple.iWork.Compatibility.ApplePubImport"));
    objc_end_catch();
  }
  else
  {
    objc_begin_catch(exc_buf);
  }
  JUMPOUT(0x20AF58);
}

void sub_20B608(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_20F8F8(id a1)
{
  operator new();
}

void sub_20F938()
{
  operator delete();
}

void sub_20F9C0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_20FA14(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, objc_super a9)
{
  void *v9;
  void *v10;

  v10 = v9;
  a9.receiver = v10;
  a9.super_class = (Class)BuLr3rwnVU31zt9OioJ56;
  -[_Unwind_Exception dealloc](&a9, "dealloc");
  _Unwind_Resume(a1);
}

void sub_20FAD0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_20FC58(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_20FDFC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_20FE30(uint64_t a1, void *a2)
{
  uint64_t v3;
  id v4;

  v4 = a2;
  v3 = *(_QWORD *)(a1 + 32);
  if (v3)
    (*(void (**)(uint64_t, id))(v3 + 16))(v3, v4);

}

void sub_20FE74(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

uint64_t yyFlexLexer::yywrap(yyFlexLexer *this)
{
  return 1;
}

uint64_t yyFlexLexer::yylex(yyFlexLexer *this)
{
  int vars0;

  (*(void (**)(yyFlexLexer *, const char *, ...))(*(_QWORD *)this + 112))(this, "yyFlexLexer::yylex invoked but %option yyclass used", vars0);
  return 0;
}

uint64_t PFSCssLexer::yylex(PFSCssLexer *this)
{
  std::ios_base *v2;
  std::ostream *v3;
  uint64_t v4;
  double v5;
  _QWORD *v6;
  char *v7;
  _BYTE *v8;
  int v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  _BYTE **v15;
  _BYTE *v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int next_buffer;
  int v24;
  int previous_state;
  _QWORD *v26;
  char *v27;
  _BYTE *v29;
  _QWORD *v30;
  char *v31;

  if (!*((_DWORD *)this + 100))
  {
    *((_DWORD *)this + 100) = 1;
    if (!*((_DWORD *)this + 101))
      *((_DWORD *)this + 101) = 1;
    v2 = (std::ios_base *)((char *)this + *(_QWORD *)(*((_QWORD *)this + 6) - 24) + 48);
    if ((v2->__rdstate_ & 5) != 0)
    {
      v2->__rdbuf_ = *(void **)((char *)&std::cin + (unint64_t)std::cin.__vftable[-2].~basic_istream_0 + 40);
      std::ios_base::clear(v2, 0);
    }
    v3 = (std::ostream *)((char *)this + *(_QWORD *)(*((_QWORD *)this + 27) - 24) + 216);
    if (((uint64_t)v3[4].__vftable & 5) != 0)
    {
      v3[5].__vftable = *(std::ostream_vtbl **)((char *)&std::cout
                                              + (unint64_t)std::cout.__vftable[-2].~basic_ostream_0
                                              + 40);
      std::ios_base::clear((std::ios_base *)v3, 0);
    }
    v4 = *((_QWORD *)this + 54);
    if (!v4 || !*(_QWORD *)(v4 + 8 * *((_QWORD *)this + 52)))
    {
      v5 = yyFlexLexer::yyensure_buffer_stack(this);
      *(_QWORD *)(*((_QWORD *)this + 54) + 8 * *((_QWORD *)this + 52)) = (*(uint64_t (**)(PFSCssLexer *, char *, uint64_t, double))(*(_QWORD *)this + 32))(this, (char *)this + 48, 0x4000, v5);
    }
    yyFlexLexer::yy_load_buffer_state(this);
  }
  v6 = (_QWORD *)((char *)this + 392);
  v7 = (char *)this + 448;
  while (1)
  {
LABEL_13:
    v8 = (_BYTE *)*((_QWORD *)this + 49);
    *v8 = *((_BYTE *)this + 376);
    v9 = *((_DWORD *)this + 101);
    v10 = v8;
    do
    {
LABEL_14:
      v11 = byte_3163A6[*v8];
      if (word_31C134[v9])
      {
        *((_DWORD *)this + 110) = v9;
        *((_QWORD *)this + 56) = v8;
      }
      v12 = v9;
      v13 = word_318D22[v9] + v11;
      if (v9 != (__int16)word_3164A6[v13])
      {
        do
        {
          v12 = word_3192BA[v12];
          if (v12 >= 617)
            v11 = *((unsigned __int8 *)&unk_319852 + v11);
          v13 = word_318D22[v12] + v11;
        }
        while (word_3164A6[v13] != (unsigned __int16)v12);
      }
      v9 = word_31989E[v13];
      ++v8;
    }
    while (v9 != 616);
    while (2)
    {
      v14 = *((_DWORD *)this + 110);
      v15 = (_BYTE **)v7;
LABEL_22:
      v16 = *v15;
      v17 = (__int16)word_31C134[v14];
      *((_QWORD *)this + 1) = v10;
      *((_QWORD *)this + 2) = v16 - v10;
      *((_BYTE *)this + 376) = *v16;
      *v16 = 0;
      *((_QWORD *)this + 49) = v16;
LABEL_23:
      switch(v17)
      {
        case 0:
          *v16 = *((_BYTE *)this + 376);
          continue;
        case 1:
          goto LABEL_13;
        case 2:
          return 258;
        case 3:
          return 259;
        case 4:
          return 260;
        case 5:
          return 261;
        case 6:
          return 262;
        case 7:
          return 266;
        case 8:
          return 267;
        case 9:
          return 268;
        case 10:
          return 269;
        case 11:
          return 270;
        case 12:
          return 271;
        case 13:
          return 272;
        case 14:
          return 273;
        case 15:
          return 274;
        case 16:
          return 275;
        case 17:
          *((_QWORD *)this + 65) = strdup(*((const char **)this + 1));
          return 265;
        case 18:
          return 276;
        case 19:
          return 277;
        case 20:
          *((_QWORD *)this + 65) = strdup(*((const char **)this + 1));
          return 263;
        case 21:
          *((_QWORD *)this + 65) = strdup(*((const char **)this + 1));
          return 264;
        case 22:
          *((_QWORD *)this + 65) = strdup(*((const char **)this + 1));
          return 278;
        case 23:
          *((_QWORD *)this + 65) = strdup(*((const char **)this + 1));
          return 279;
        case 24:
          *((_QWORD *)this + 65) = strdup(*((const char **)this + 1));
          return 280;
        case 25:
          *((_QWORD *)this + 65) = strdup(*((const char **)this + 1));
          return 281;
        case 26:
          *((_QWORD *)this + 65) = strdup(*((const char **)this + 1));
          return 282;
        case 27:
          *((_QWORD *)this + 65) = strdup(*((const char **)this + 1));
          return 283;
        case 28:
          *((_QWORD *)this + 65) = strdup(*((const char **)this + 1));
          return 284;
        case 29:
          *((_QWORD *)this + 65) = strdup(*((const char **)this + 1));
          return 285;
        case 30:
          *((_QWORD *)this + 65) = strdup(*((const char **)this + 1));
          return 286;
        case 31:
          *((_QWORD *)this + 65) = strdup(*((const char **)this + 1));
          return 287;
        case 32:
          *((_QWORD *)this + 65) = strdup(*((const char **)this + 1));
          return 288;
        case 33:
          *((_QWORD *)this + 65) = strdup(*((const char **)this + 1));
          return 289;
        case 34:
          *((_QWORD *)this + 65) = strdup(*((const char **)this + 1));
          return 290;
        case 35:
          *((_QWORD *)this + 65) = strdup(*((const char **)this + 1));
          return 291;
        case 36:
          *((_QWORD *)this + 65) = strdup(*((const char **)this + 1));
          return 292;
        case 37:
          *((_QWORD *)this + 65) = strdup(*((const char **)this + 1));
          return 293;
        case 38:
          *((_QWORD *)this + 65) = *((_QWORD *)this + 1);
          return 294;
        case 39:
          *((_QWORD *)this + 65) = strdup(*((const char **)this + 1));
          return 295;
        case 40:
          *((_QWORD *)this + 65) = strdup(*((const char **)this + 1));
          return 296;
        case 41:
        case 42:
          *((_QWORD *)this + 65) = strdup(*((const char **)this + 1));
          return 297;
        case 43:
          *((_QWORD *)this + 65) = strdup(*((const char **)this + 1));
          return 298;
        case 44:
        case 45:
          *((_QWORD *)this + 65) = strdup(*((const char **)this + 1));
          return 299;
        case 46:
          return 123;
        case 47:
          return **((char **)this + 1);
        case 48:
          v26 = v6;
          v27 = v7;
          (*(void (**)(PFSCssLexer *, _QWORD, _QWORD))(*(_QWORD *)this + 104))(this, *((_QWORD *)this + 1), *((_QWORD *)this + 2));
          goto LABEL_43;
        case 49:
          v18 = *((_QWORD *)this + 1);
          *v16 = *((_BYTE *)this + 376);
          v19 = *((_QWORD *)this + 54);
          v20 = *((_QWORD *)this + 52);
          v21 = *(_QWORD *)(v19 + 8 * v20);
          if (*(_DWORD *)(v21 + 64))
          {
            v22 = *((_QWORD *)this + 48);
          }
          else
          {
            v22 = *(_QWORD *)(v21 + 32);
            *((_QWORD *)this + 48) = v22;
            *(_QWORD *)v21 = *(_QWORD *)((char *)this + *(_QWORD *)(*((_QWORD *)this + 6) - 24) + 88);
            v21 = *(_QWORD *)(v19 + 8 * v20);
            *(_DWORD *)(v21 + 64) = 1;
          }
          v30 = v6;
          v31 = v7;
          if (*v6 <= (unint64_t)(*(_QWORD *)(v21 + 8) + v22))
          {
            *((_QWORD *)this + 49) = *((_QWORD *)this + 1) + ~(_DWORD)v18 + (int)v16;
            previous_state = yyFlexLexer::yy_get_previous_state(this);
            v9 = yyFlexLexer::yy_try_NUL_trans(this, previous_state);
            v10 = (_BYTE *)*((_QWORD *)this + 1);
            if (!v9)
            {
              v14 = *((_DWORD *)this + 110);
              v6 = v30;
              v7 = v31;
              v15 = (_BYTE **)v31;
              goto LABEL_22;
            }
            v6 = v30;
            v7 = v31;
            v8 = (_BYTE *)(*v30 + 1);
            *v30 = v8;
            goto LABEL_14;
          }
          v29 = v10;
          next_buffer = yyFlexLexer::yy_get_next_buffer(this);
          if (next_buffer != 1)
          {
            v7 = v31;
            if (!next_buffer)
            {
              *((_QWORD *)this + 49) = *((_QWORD *)this + 1) + ~(_DWORD)v18 + (int)v16;
              v9 = yyFlexLexer::yy_get_previous_state(this);
              v6 = v30;
              v7 = v31;
              v8 = (_BYTE *)*((_QWORD *)this + 49);
              v10 = (_BYTE *)*((_QWORD *)this + 1);
              goto LABEL_14;
            }
            v6 = v30;
            if (next_buffer != 2)
              goto LABEL_13;
            *((_QWORD *)this + 49) = *(_QWORD *)(*(_QWORD *)(*((_QWORD *)this + 54) + 8 * *((_QWORD *)this + 52)) + 8)
                                   + *((_QWORD *)this + 48);
            v14 = yyFlexLexer::yy_get_previous_state(this);
            v6 = v30;
            v7 = v31;
            v10 = (_BYTE *)*((_QWORD *)this + 1);
            v15 = (_BYTE **)v30;
            goto LABEL_22;
          }
          *((_DWORD *)this + 102) = 0;
          if ((*(unsigned int (**)(PFSCssLexer *))(*(_QWORD *)this + 88))(this))
          {
            *((_QWORD *)this + 49) = *((_QWORD *)this + 1);
            v24 = *((_DWORD *)this + 101);
            if (v24 >= 1)
              --v24;
            v17 = (v24 >> 1) + 50;
            v6 = v30;
            v7 = v31;
            v10 = v29;
            goto LABEL_23;
          }
          v6 = v30;
          v7 = v31;
          if (!*((_DWORD *)this + 102))
          {
            (*(void (**)(PFSCssLexer *, char *))(*(_QWORD *)this + 56))(this, (char *)this + 48);
            v6 = v30;
            v7 = v31;
          }
          break;
        case 50:
          return 0;
        default:
          v26 = v6;
          v27 = v7;
          (*(void (**)(PFSCssLexer *, const char *))(*(_QWORD *)this + 112))(this, "fatal flex scanner internal error--no action found");
LABEL_43:
          v7 = v27;
          v6 = v26;
          goto LABEL_13;
      }
      break;
    }
  }
}

double yyFlexLexer::yyensure_buffer_stack(yyFlexLexer *this)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  char *v6;
  double result;
  _QWORD *v8;

  v2 = (void *)*((_QWORD *)this + 54);
  if (v2)
  {
    v3 = *((_QWORD *)this + 53);
    if (*((_QWORD *)this + 52) >= (unint64_t)(v3 - 1))
    {
      v4 = v3 + 8;
      v5 = (char *)malloc_type_realloc(v2, 8 * (v3 + 8), 0x332DE5BFuLL);
      *((_QWORD *)this + 54) = v5;
      if (!v5)
      {
        (*(void (**)(yyFlexLexer *, const char *))(*(_QWORD *)this + 112))(this, "out of dynamic memory in yyensure_buffer_stack()");
        v5 = (char *)*((_QWORD *)this + 54);
      }
      v6 = &v5[8 * *((_QWORD *)this + 53)];
      result = 0.0;
      *((_OWORD *)v6 + 2) = 0u;
      *((_OWORD *)v6 + 3) = 0u;
      *(_OWORD *)v6 = 0u;
      *((_OWORD *)v6 + 1) = 0u;
      *((_QWORD *)this + 53) = v4;
    }
  }
  else
  {
    v8 = malloc_type_malloc(8uLL, 0x3C24D9A4uLL);
    *((_QWORD *)this + 54) = v8;
    if (!v8)
    {
      (*(void (**)(yyFlexLexer *, const char *))(*(_QWORD *)this + 112))(this, "out of dynamic memory in yyensure_buffer_stack()");
      v8 = (_QWORD *)*((_QWORD *)this + 54);
    }
    *v8 = 0;
    result = 0.0;
    *((_OWORD *)this + 26) = xmmword_31C610;
  }
  return result;
}

void yyFlexLexer::yy_load_buffer_state(yyFlexLexer *this)
{
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  std::ios_base *v8;

  v2 = (char *)this + 48;
  v1 = *((_QWORD *)this + 6);
  v3 = *((_QWORD *)this + 54);
  v4 = *((_QWORD *)this + 52);
  v5 = *(_QWORD *)(v3 + 8 * v4);
  v6 = *(_QWORD *)(v5 + 32);
  v7 = *(_QWORD *)(v5 + 16);
  *((_QWORD *)this + 48) = v6;
  *((_QWORD *)this + 49) = v7;
  *((_QWORD *)this + 1) = v7;
  v8 = (std::ios_base *)((char *)this + *(_QWORD *)(v1 - 24) + 48);
  v8->__rdbuf_ = **(void ***)(v3 + 8 * v4);
  std::ios_base::clear(v8, 0);
  v2[328] = **((_BYTE **)v2 + 43);
}

uint64_t yyFlexLexer::yy_get_previous_state(yyFlexLexer *this)
{
  uint64_t v1;
  _BYTE *v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *((unsigned int *)this + 101);
  v2 = (_BYTE *)*((_QWORD *)this + 1);
  v3 = (_BYTE *)*((_QWORD *)this + 49);
  if (v2 < v3)
  {
    do
    {
      if (*v2)
        v4 = byte_3163A6[*v2];
      else
        v4 = &dword_0 + 1;
      if (word_31C134[(int)v1])
      {
        *((_DWORD *)this + 110) = v1;
        *((_QWORD *)this + 56) = v2;
      }
      v5 = (int)v1;
      v6 = word_318D22[(int)v1] + v4;
      if ((_DWORD)v1 != (__int16)word_3164A6[v6])
      {
        do
        {
          v5 = word_3192BA[v5];
          if (v5 >= 617)
            v4 = *((unsigned __int8 *)&unk_319852 + v4);
          v6 = word_318D22[v5] + v4;
        }
        while (word_3164A6[v6] != (unsigned __int16)v5);
      }
      v1 = word_31989E[v6];
      ++v2;
    }
    while (v2 != v3);
  }
  return v1;
}

uint64_t yyFlexLexer::yy_try_NUL_trans(yyFlexLexer *this, int a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  int v6;

  v2 = a2;
  if (word_31C134[a2])
  {
    v3 = *((_QWORD *)this + 49);
    *((_DWORD *)this + 110) = a2;
    *((_QWORD *)this + 56) = v3;
  }
  v4 = word_318D22[a2] + 1;
  if ((__int16)word_3164A6[v4] != a2)
  {
    do
    {
      v5 = (unsigned __int16)word_3192BA[v2];
      v2 = (__int16)v5;
      v4 = word_318D22[(__int16)v5] + 1;
    }
    while (v5 != word_3164A6[v4]);
  }
  v6 = (unsigned __int16)word_31989E[v4];
  if (v6 == 616)
    LOWORD(v6) = 0;
  return (__int16)v6;
}

uint64_t yyFlexLexer::yy_get_next_buffer(yyFlexLexer *this)
{
  uint64_t v2;
  _BYTE *v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  int v8;
  int v9;
  char v10;
  uint64_t v11;
  int v12;
  int v13;
  unsigned int v14;
  char *v15;
  void *v16;
  int v17;
  char *v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  size_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;

  v2 = *(_QWORD *)(*((_QWORD *)this + 54) + 8 * *((_QWORD *)this + 52));
  v3 = *(_BYTE **)(v2 + 8);
  v4 = (char *)*((_QWORD *)this + 1);
  if (*((_QWORD *)this + 49) > (unint64_t)&v3[*((_QWORD *)this + 48) + 1])
  {
    (*(void (**)(yyFlexLexer *, const char *))(*(_QWORD *)this + 112))(this, "fatal flex scanner internal error--end of buffer missed");
    v2 = *(_QWORD *)(*((_QWORD *)this + 54) + 8 * *((_QWORD *)this + 52));
  }
  v5 = *((_QWORD *)this + 49);
  v6 = *((_QWORD *)this + 1);
  if (!*(_DWORD *)(v2 + 60))
  {
    if (v5 - v6 == 1)
      return 1;
    else
      return 2;
  }
  v7 = ~(_DWORD)v6;
  v8 = v7 + v5;
  if (v7 + (int)v5 >= 1)
  {
    v9 = v7 + v5;
    do
    {
      v10 = *v4++;
      *v3++ = v10;
      --v9;
    }
    while (v9);
    v2 = *(_QWORD *)(*((_QWORD *)this + 54) + 8 * *((_QWORD *)this + 52));
  }
  if (*(_DWORD *)(v2 + 64) == 2)
  {
    *((_QWORD *)this + 48) = 0;
    *(_QWORD *)(v2 + 32) = 0;
LABEL_28:
    if (v8)
    {
      v20 = 0;
      v11 = 2;
      *(_DWORD *)(v2 + 64) = 2;
    }
    else
    {
      (*(void (**)(yyFlexLexer *, char *))(*(_QWORD *)this + 56))(this, (char *)this + 48);
      v20 = *((_QWORD *)this + 48);
      v2 = *(_QWORD *)(*((_QWORD *)this + 54) + 8 * *((_QWORD *)this + 52));
      v11 = 1;
    }
    goto LABEL_31;
  }
  v12 = ~v8;
  v13 = *(_DWORD *)(v2 + 24);
  v14 = v13 + ~v8;
  if (!v14)
  {
    v15 = (char *)*((_QWORD *)this + 49);
    while (1)
    {
      v16 = *(void **)(v2 + 8);
      if (!*(_DWORD *)(v2 + 40))
        break;
      v17 = 2 * v13;
      *(_DWORD *)(v2 + 24) = v17;
      v18 = (char *)malloc_type_realloc(v16, v17 + 2, 0x332DE5BFuLL);
      *(_QWORD *)(v2 + 8) = v18;
      if (!v18)
        goto LABEL_19;
LABEL_20:
      v15 = &v18[(int)v15 - (int)v16];
      *((_QWORD *)this + 49) = v15;
      v2 = *(_QWORD *)(*((_QWORD *)this + 54) + 8 * *((_QWORD *)this + 52));
      v13 = *(_DWORD *)(v2 + 24);
      v14 = v13 + v12;
      if (v13 + v12)
        goto LABEL_21;
    }
    *(_QWORD *)(v2 + 8) = 0;
LABEL_19:
    (*(void (**)(yyFlexLexer *, const char *))(*(_QWORD *)this + 112))(this, "fatal error - scanner input buffer overflow");
    v18 = *(char **)(v2 + 8);
    goto LABEL_20;
  }
LABEL_21:
  if (v14 >= 0x2000)
    v19 = 0x2000;
  else
    v19 = v14;
  v20 = (*(uint64_t (**)(yyFlexLexer *, _QWORD, uint64_t))(*(_QWORD *)this + 96))(this, *(_QWORD *)(v2 + 8) + v8, v19);
  *((_QWORD *)this + 48) = v20;
  if ((v20 & 0x80000000) != 0)
  {
    (*(void (**)(yyFlexLexer *, const char *))(*(_QWORD *)this + 112))(this, "input in flex scanner failed");
    v20 = *((_QWORD *)this + 48);
  }
  v2 = *(_QWORD *)(*((_QWORD *)this + 54) + 8 * *((_QWORD *)this + 52));
  *(_QWORD *)(v2 + 32) = v20;
  if (!v20)
    goto LABEL_28;
  v11 = 0;
LABEL_31:
  v21 = v20 + v8;
  if (v21 > *(int *)(v2 + 24))
  {
    v22 = v21 + (v20 >> 1);
    v23 = malloc_type_realloc(*(void **)(v2 + 8), v22, 0x332DE5BFuLL);
    v24 = *((_QWORD *)this + 54);
    v25 = *((_QWORD *)this + 52);
    *(_QWORD *)(*(_QWORD *)(v24 + 8 * v25) + 8) = v23;
    v2 = *(_QWORD *)(v24 + 8 * v25);
    if (!*(_QWORD *)(v2 + 8))
    {
      (*(void (**)(yyFlexLexer *, const char *))(*(_QWORD *)this + 112))(this, "out of dynamic memory in yy_get_next_buffer()");
      v2 = *(_QWORD *)(*((_QWORD *)this + 54) + 8 * *((_QWORD *)this + 52));
    }
    *(_DWORD *)(v2 + 24) = v22 - 2;
    v21 = *((_QWORD *)this + 48) + v8;
  }
  *((_QWORD *)this + 48) = v21;
  *(_BYTE *)(*(_QWORD *)(v2 + 8) + v21) = 0;
  *(_BYTE *)(*((_QWORD *)this + 48)
           + *(_QWORD *)(*(_QWORD *)(*((_QWORD *)this + 54) + 8 * *((_QWORD *)this + 52)) + 8)
           + 1) = 0;
  *((_QWORD *)this + 1) = *(_QWORD *)(*(_QWORD *)(*((_QWORD *)this + 54) + 8 * *((_QWORD *)this + 52)) + 8);
  return v11;
}

uint64_t yyFlexLexer::yyFlexLexer(uint64_t a1, std::istream *a2, std::ostream *a3)
{
  std::istream *v5;
  void (__cdecl *v6)(std::istream *__hidden);
  void *v7;
  std::ostream *v8;
  void *v9;

  *(_QWORD *)a1 = off_42C3A8;
  if (a2)
    v5 = a2;
  else
    v5 = &std::cin;
  v6 = v5->__vftable[-2].~basic_istream_0;
  v7 = *(void **)((char *)v6 + (_QWORD)v5 + 40);
  *(_QWORD *)(a1 + 56) = 0;
  std::ios_base::init((std::ios_base *)(a1 + 64), v7);
  *(_QWORD *)(a1 + 200) = 0;
  *(_DWORD *)(a1 + 208) = -1;
  v8 = &std::cout;
  if (a3)
    v8 = a3;
  v9 = *(std::ostream_vtbl **)((char *)&v8[5].__vftable + (unint64_t)v8->__vftable[-2].~basic_ostream_0);
  std::ios_base::init((std::ios_base *)(a1 + 224), v9);
  *(_QWORD *)(a1 + 360) = 0;
  *(_DWORD *)(a1 + 368) = -1;
  *(_QWORD *)(a1 + 392) = 0;
  *(_QWORD *)(a1 + 400) = 0;
  *(_QWORD *)(a1 + 24) = 1;
  *(_DWORD *)(a1 + 408) = 0;
  *(_QWORD *)(a1 + 456) = 0;
  *(_QWORD *)(a1 + 32) = 0;
  *(_QWORD *)(a1 + 40) = 0;
  *(_QWORD *)(a1 + 424) = 0;
  *(_QWORD *)(a1 + 432) = 0;
  *(_QWORD *)(a1 + 416) = 0;
  *(_QWORD *)(a1 + 496) = 0;
  *(_QWORD *)(a1 + 504) = 0;
  *(_DWORD *)(a1 + 512) = 0;
  return a1;
}

void sub_210E18(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  std::ios::~ios(v2);
  std::istream::~istream(v1);
  _Unwind_Resume(a1);
}

double yyFlexLexer::ctor_common(yyFlexLexer *this)
{
  double result;

  *((_QWORD *)this + 49) = 0;
  *((_QWORD *)this + 50) = 0;
  *(_QWORD *)&result = 1;
  *((_QWORD *)this + 3) = 1;
  *((_DWORD *)this + 102) = 0;
  *((_QWORD *)this + 57) = 0;
  *((_QWORD *)this + 4) = 0;
  *((_QWORD *)this + 5) = 0;
  *((_QWORD *)this + 53) = 0;
  *((_QWORD *)this + 54) = 0;
  *((_QWORD *)this + 52) = 0;
  *((_QWORD *)this + 62) = 0;
  *((_QWORD *)this + 63) = 0;
  *((_DWORD *)this + 128) = 0;
  return result;
}

uint64_t yyFlexLexer::yyFlexLexer(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t v5;
  void *v6;
  void *v7;

  *(_QWORD *)a1 = off_42C3A8;
  v5 = *(_QWORD *)(*a2 - 24);
  v6 = *(void **)((char *)a2 + v5 + 40);
  *(_QWORD *)(a1 + 56) = 0;
  std::ios_base::init((std::ios_base *)(a1 + 64), v6);
  *(_QWORD *)(a1 + 200) = 0;
  *(_DWORD *)(a1 + 208) = -1;
  v7 = *(void **)((char *)a3 + *(_QWORD *)(*a3 - 24) + 40);
  std::ios_base::init((std::ios_base *)(a1 + 224), v7);
  *(_QWORD *)(a1 + 360) = 0;
  *(_DWORD *)(a1 + 368) = -1;
  *(_QWORD *)(a1 + 392) = 0;
  *(_QWORD *)(a1 + 400) = 0;
  *(_QWORD *)(a1 + 24) = 1;
  *(_DWORD *)(a1 + 408) = 0;
  *(_QWORD *)(a1 + 456) = 0;
  *(_QWORD *)(a1 + 32) = 0;
  *(_QWORD *)(a1 + 40) = 0;
  *(_QWORD *)(a1 + 424) = 0;
  *(_QWORD *)(a1 + 432) = 0;
  *(_QWORD *)(a1 + 416) = 0;
  *(_QWORD *)(a1 + 496) = 0;
  *(_QWORD *)(a1 + 504) = 0;
  *(_DWORD *)(a1 + 512) = 0;
  return a1;
}

void sub_210F60(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  std::ios::~ios(v2);
  std::istream::~istream(v1);
  _Unwind_Resume(a1);
}

void yyFlexLexer::~yyFlexLexer(yyFlexLexer *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = off_42C3A8;
  if (*((_QWORD *)this + 57))
    operator delete[]();
  free(*((void **)this + 5));
  v2 = *((_QWORD *)this + 54);
  if (v2)
    v3 = *(_QWORD *)(v2 + 8 * *((_QWORD *)this + 52));
  else
    v3 = 0;
  (*(void (**)(yyFlexLexer *, uint64_t))(*(_QWORD *)this + 40))(this, v3);
  free(*((void **)this + 54));
  std::ostream::~ostream((char *)this + 216);
  std::istream::~istream((char *)this + 48);
}

{
  yyFlexLexer::~yyFlexLexer(this);
  operator delete();
}

void yyFlexLexer::switch_streams(_QWORD *a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  std::ios_base *v9;

  v6 = a1[54];
  if (v6)
    v7 = *(_QWORD *)(v6 + 8 * a1[52]);
  else
    v7 = 0;
  (*(void (**)(_QWORD *, uint64_t))(*a1 + 40))(a1, v7);
  v8 = (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(*a1 + 32))(a1, a2, 0x4000);
  (*(void (**)(_QWORD *, uint64_t))(*a1 + 16))(a1, v8);
  v9 = (std::ios_base *)((char *)a1 + *(_QWORD *)(a1[27] - 24) + 216);
  v9->__rdbuf_ = *(void **)((char *)a3 + *(_QWORD *)(*a3 - 24) + 40);
  std::ios_base::clear(v9, 0);
}

uint64_t yyFlexLexer::switch_streams(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!a2)
    a2 = a1 + 48;
  if (!a3)
    a3 = a1 + 216;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)a1 + 80))(a1, a2, a3);
}

uint64_t yyFlexLexer::LexerInput(yyFlexLexer *this, char *a2)
{
  _QWORD *v2;

  v2 = (_QWORD *)((char *)this + 48);
  if ((*((_BYTE *)this + *(_QWORD *)(*((_QWORD *)this + 6) - 24) + 80) & 7) != 0)
    return 0;
  std::istream::read((char *)this + 48, a2);
  if ((*((_BYTE *)v2 + *(_QWORD *)(*v2 - 24) + 32) & 1) != 0)
    return -1;
  else
    return *((_QWORD *)this + 7);
}

uint64_t yyFlexLexer::LexerOutput(yyFlexLexer *this, const char *a2)
{
  return std::ostream::write((char *)this + 216, a2);
}

void *yyrealloc(void *a1, size_t a2)
{
  return malloc_type_realloc(a1, a2, 0x332DE5BFuLL);
}

uint64_t yyFlexLexer::yyunput(uint64_t this, char a2, char *a3)
{
  char *v3;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v14;
  _BYTE *v15;

  v3 = a3;
  v5 = this;
  v6 = *(_BYTE **)(this + 392);
  *v6 = *(_BYTE *)(this + 376);
  v7 = *(_QWORD *)(*(_QWORD *)(this + 432) + 8 * *(_QWORD *)(this + 416));
  v8 = *(_QWORD *)(v7 + 8);
  if ((unint64_t)v6 < v8 + 2)
  {
    v9 = *(_QWORD *)(this + 384) + 2;
    v10 = *(int *)(v7 + 24);
    v11 = v10 + v8 + 2;
    v12 = v8 + v9;
    if (v9 >= 1)
    {
      do
      {
        v13 = *(_BYTE *)--v12;
        *(_BYTE *)--v11 = v13;
        v7 = *(_QWORD *)(*(_QWORD *)(this + 432) + 8 * *(_QWORD *)(this + 416));
        v8 = *(_QWORD *)(v7 + 8);
      }
      while (v12 > v8);
      LODWORD(v10) = *(_DWORD *)(v7 + 24);
    }
    v14 = v11 - v12;
    v6 += v14;
    v3 = &a3[v14];
    *(_QWORD *)(this + 384) = (int)v10;
    *(_QWORD *)(v7 + 32) = (int)v10;
    if ((unint64_t)v6 < v8 + 2)
      this = (*(uint64_t (**)(uint64_t, const char *))(*(_QWORD *)this + 112))(this, "flex scanner push-back overflow");
  }
  *(v6 - 1) = a2;
  v15 = v6 - 1;
  *(_QWORD *)(v5 + 8) = v3;
  *(_BYTE *)(v5 + 376) = *v15;
  *(_QWORD *)(v5 + 392) = v15;
  return this;
}

uint64_t yyFlexLexer::yyinput(yyFlexLexer *this)
{
  _BYTE *i;
  _BYTE *v3;
  uint64_t result;
  _BYTE *v5;
  uint64_t v6;
  int next_buffer;

  **((_BYTE **)this + 49) = *((_BYTE *)this + 376);
  for (i = (_BYTE *)*((_QWORD *)this + 49); !*i; i = (_BYTE *)*((_QWORD *)this + 49))
  {
    if ((unint64_t)i < *(_QWORD *)(*(_QWORD *)(*((_QWORD *)this + 54) + 8 * *((_QWORD *)this + 52)) + 8)
                             + *((_QWORD *)this + 48))
    {
      *i = 0;
      break;
    }
    v6 = *((_QWORD *)this + 1);
    *((_QWORD *)this + 49) = i + 1;
    next_buffer = yyFlexLexer::yy_get_next_buffer(this);
    if (next_buffer != 1)
    {
      if (next_buffer != 2)
      {
        if (!next_buffer)
          *((_QWORD *)this + 49) = &i[*((_QWORD *)this + 1) - v6];
        break;
      }
      (*(void (**)(yyFlexLexer *, char *))(*(_QWORD *)this + 56))(this, (char *)this + 48);
    }
    if ((*(unsigned int (**)(yyFlexLexer *))(*(_QWORD *)this + 88))(this))
      return 0;
    if (!*((_DWORD *)this + 102))
      (*(void (**)(yyFlexLexer *, char *))(*(_QWORD *)this + 56))(this, (char *)this + 48);
    **((_BYTE **)this + 49) = *((_BYTE *)this + 376);
  }
  v3 = (_BYTE *)*((_QWORD *)this + 49);
  result = *v3;
  *v3 = 0;
  v5 = (_BYTE *)(*((_QWORD *)this + 49) + 1);
  *((_QWORD *)this + 49) = v5;
  *((_BYTE *)this + 376) = *v5;
  return result;
}

void yyFlexLexer::yyrestart(yyFlexLexer *this, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *((_QWORD *)this + 54);
  if (v4 && (v5 = *((_QWORD *)this + 52), *(_QWORD *)(v4 + 8 * v5))
    || (v6 = yyFlexLexer::yyensure_buffer_stack(this),
        v7 = (*(uint64_t (**)(yyFlexLexer *, char *, uint64_t, double))(*(_QWORD *)this + 32))(this, (char *)this + 48, 0x4000, v6), v5 = *((_QWORD *)this + 52), *(_QWORD *)(*((_QWORD *)this + 54) + 8 * v5) = v7, (v4 = *((_QWORD *)this + 54)) != 0))
  {
    v8 = *(_QWORD *)(v4 + 8 * v5);
  }
  else
  {
    v8 = 0;
  }
  yyFlexLexer::yy_init_buffer(this, v8, a2);
  yyFlexLexer::yy_load_buffer_state(this);
}

int *yyFlexLexer::yy_init_buffer(yyFlexLexer *a1, uint64_t a2, _QWORD *a3)
{
  int v6;
  uint64_t v7;
  int *result;

  v6 = *__error();
  yyFlexLexer::yy_flush_buffer(a1, a2);
  *(_QWORD *)a2 = *(_QWORD *)((char *)a3 + *(_QWORD *)(*a3 - 24) + 40);
  *(_DWORD *)(a2 + 60) = 1;
  v7 = *((_QWORD *)a1 + 54);
  if (v7)
    v7 = *(_QWORD *)(v7 + 8 * *((_QWORD *)a1 + 52));
  if (v7 != a2)
    *(_QWORD *)(a2 + 52) = 1;
  *(_DWORD *)(a2 + 44) = 0;
  result = __error();
  *result = v6;
  return result;
}

uint64_t yyFlexLexer::yyrestart(uint64_t a1, uint64_t a2)
{
  if (!a2)
    a2 = a1 + 48;
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 56))(a1, a2);
}

void yyFlexLexer::yy_switch_to_buffer(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  yyFlexLexer::yyensure_buffer_stack((yyFlexLexer *)a1);
  v4 = *(_QWORD *)(a1 + 432);
  if (v4)
  {
    v5 = *(_QWORD *)(a1 + 416);
    v6 = *(_QWORD *)(v4 + 8 * v5);
    if (v6 != a2)
    {
      if (v6)
      {
        **(_BYTE **)(a1 + 392) = *(_BYTE *)(a1 + 376);
        v4 = *(_QWORD *)(a1 + 432);
        v5 = *(_QWORD *)(a1 + 416);
        v7 = *(_QWORD *)(a1 + 384);
        *(_QWORD *)(*(_QWORD *)(v4 + 8 * v5) + 16) = *(_QWORD *)(a1 + 392);
        *(_QWORD *)(*(_QWORD *)(v4 + 8 * v5) + 32) = v7;
      }
      *(_QWORD *)(v4 + 8 * v5) = a2;
      yyFlexLexer::yy_load_buffer_state((yyFlexLexer *)a1);
      *(_DWORD *)(a1 + 408) = 1;
    }
  }
}

_DWORD *yyFlexLexer::yy_create_buffer(yyFlexLexer *a1, _QWORD *a2, int a3)
{
  _DWORD *v6;
  void *v7;

  v6 = malloc_type_malloc(0x48uLL, 0x3C24D9A4uLL);
  if (!v6)
    (*(void (**)(yyFlexLexer *, const char *))(*(_QWORD *)a1 + 112))(a1, "out of dynamic memory in yy_create_buffer()");
  v6[6] = a3;
  v7 = malloc_type_malloc(a3 + 2, 0x3C24D9A4uLL);
  *((_QWORD *)v6 + 1) = v7;
  if (!v7)
    (*(void (**)(yyFlexLexer *, const char *))(*(_QWORD *)a1 + 112))(a1, "out of dynamic memory in yy_create_buffer()");
  v6[10] = 1;
  yyFlexLexer::yy_init_buffer(a1, (uint64_t)v6, a2);
  return v6;
}

void *yyalloc(size_t a1)
{
  return malloc_type_malloc(a1, 0x3C24D9A4uLL);
}

uint64_t yyFlexLexer::yy_create_buffer(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 32))(a1);
}

void yyFlexLexer::yy_delete_buffer(uint64_t a1, void **a2)
{
  uint64_t v3;
  void **v4;

  if (a2)
  {
    v3 = *(_QWORD *)(a1 + 432);
    if (v3)
      v4 = *(void ***)(v3 + 8 * *(_QWORD *)(a1 + 416));
    else
      v4 = 0;
    if (v4 == a2)
      *(_QWORD *)(v3 + 8 * *(_QWORD *)(a1 + 416)) = 0;
    if (*((_DWORD *)a2 + 10))
      free(a2[1]);
    free(a2);
  }
}

void yyFlexLexer::yy_flush_buffer(yyFlexLexer *this, uint64_t a2)
{
  uint64_t v2;

  if (a2)
  {
    *(_QWORD *)(a2 + 32) = 0;
    **(_BYTE **)(a2 + 8) = 0;
    *(_BYTE *)(*(_QWORD *)(a2 + 8) + 1) = 0;
    *(_QWORD *)(a2 + 16) = *(_QWORD *)(a2 + 8);
    *(_DWORD *)(a2 + 48) = 1;
    *(_DWORD *)(a2 + 64) = 0;
    v2 = *((_QWORD *)this + 54);
    if (v2)
      v2 = *(_QWORD *)(v2 + 8 * *((_QWORD *)this + 52));
    if (v2 == a2)
      yyFlexLexer::yy_load_buffer_state(this);
  }
}

void yyFlexLexer::yypush_buffer_state(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  if (a2)
  {
    yyFlexLexer::yyensure_buffer_stack((yyFlexLexer *)a1);
    v4 = *(_QWORD *)(a1 + 432);
    v5 = *(_QWORD *)(a1 + 416);
    if (*(_QWORD *)(v4 + 8 * v5))
    {
      **(_BYTE **)(a1 + 392) = *(_BYTE *)(a1 + 376);
      v4 = *(_QWORD *)(a1 + 432);
      v6 = *(_QWORD *)(a1 + 416);
      v7 = *(_QWORD *)(a1 + 384);
      *(_QWORD *)(*(_QWORD *)(v4 + 8 * v6) + 16) = *(_QWORD *)(a1 + 392);
      *(_QWORD *)(*(_QWORD *)(v4 + 8 * v6) + 32) = v7;
      v5 = v6 + 1;
      *(_QWORD *)(a1 + 416) = v5;
    }
    *(_QWORD *)(v4 + 8 * v5) = a2;
    yyFlexLexer::yy_load_buffer_state((yyFlexLexer *)a1);
    *(_DWORD *)(a1 + 408) = 1;
  }
}

void yyFlexLexer::yypop_buffer_state(yyFlexLexer *this)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v1 = *((_QWORD *)this + 54);
  if (v1 && *(_QWORD *)(v1 + 8 * *((_QWORD *)this + 52)))
  {
    (*(void (**)(yyFlexLexer *))(*(_QWORD *)this + 40))(this);
    v3 = *((_QWORD *)this + 52);
    *(_QWORD *)(*((_QWORD *)this + 54) + 8 * v3) = 0;
    if (v3)
      *((_QWORD *)this + 52) = --v3;
    v4 = *((_QWORD *)this + 54);
    if (v4)
    {
      if (*(_QWORD *)(v4 + 8 * v3))
      {
        yyFlexLexer::yy_load_buffer_state(this);
        *((_DWORD *)this + 102) = 1;
      }
    }
  }
}

_DWORD *yyFlexLexer::yy_push_state(_DWORD *this, int a2)
{
  uint64_t v3;
  int v4;
  int v5;
  void *v6;
  int v7;
  uint64_t v8;
  uint64_t v9;

  v3 = (uint64_t)this;
  v4 = this[9];
  if (this[8] >= v4)
  {
    v5 = v4 + 25;
    this[9] = v5;
    v6 = (void *)*((_QWORD *)this + 5);
    this = v6 ? malloc_type_realloc(v6, 4 * v5, 0x332DE5BFuLL) : malloc_type_malloc(4 * v5, 0x3C24D9A4uLL);
    *(_QWORD *)(v3 + 40) = this;
    if (!this)
      this = (_DWORD *)(*(uint64_t (**)(uint64_t, const char *))(*(_QWORD *)v3 + 112))(v3, "out of memory expanding start-condition stack");
  }
  v7 = *(_DWORD *)(v3 + 404);
  if (v7 >= 1)
    --v7;
  v8 = *(_QWORD *)(v3 + 40);
  v9 = *(int *)(v3 + 32);
  *(_DWORD *)(v3 + 32) = v9 + 1;
  *(_DWORD *)(v8 + 4 * v9) = v7 >> 1;
  *(_DWORD *)(v3 + 404) = (2 * a2) | 1;
  return this;
}

_DWORD *yyFlexLexer::yy_pop_state(_DWORD *this)
{
  _DWORD *v1;
  int v2;
  int v3;

  v1 = this;
  v2 = this[8];
  v3 = v2 - 1;
  this[8] = v2 - 1;
  if (v2 <= 0)
  {
    this = (_DWORD *)(*(uint64_t (**)(_DWORD *, const char *))(*(_QWORD *)this + 112))(this, "start-condition stack underflow");
    v3 = v1[8];
  }
  v1[101] = (2 * *(_DWORD *)(*((_QWORD *)v1 + 5) + 4 * v3)) | 1;
  return this;
}

uint64_t yyFlexLexer::yy_top_state(yyFlexLexer *this)
{
  return *(unsigned int *)(*((_QWORD *)this + 5) + 4 * *((int *)this + 8) - 4);
}

void yyFlexLexer::LexerError(yyFlexLexer *this, char *a2)
{
  _QWORD *v2;

  v2 = sub_2118FC(&std::cerr, a2);
  sub_211930(v2);
  exit(2);
}

_QWORD *sub_2118FC(_QWORD *a1, char *__s)
{
  size_t v4;

  v4 = strlen(__s);
  return sub_2119C0(a1, (uint64_t)__s, v4);
}

_QWORD *sub_211930(_QWORD *a1)
{
  const std::locale::facet *v2;
  uint64_t v3;
  std::locale v5;

  std::ios_base::getloc((const std::ios_base *)((char *)a1 + *(_QWORD *)(*a1 - 24)));
  v2 = std::locale::use_facet(&v5, &std::ctype<char>::id);
  v3 = ((uint64_t (*)(const std::locale::facet *, uint64_t))v2->__vftable[2].~facet_0)(v2, 10);
  std::locale::~locale(&v5);
  std::ostream::put(a1, v3);
  std::ostream::flush(a1);
  return a1;
}

void sub_2119AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::locale a10)
{
  std::locale::~locale(&a10);
  _Unwind_Resume(a1);
}

_QWORD *sub_2119C0(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  int v8;
  int v9;
  const std::locale::facet *v10;
  uint64_t v11;
  _BYTE v13[16];
  std::locale v14;

  std::ostream::sentry::sentry(v13, a1);
  if (v13[0])
  {
    v6 = (uint64_t)a1 + *(_QWORD *)(*a1 - 24);
    v7 = *(_QWORD *)(v6 + 40);
    v8 = *(_DWORD *)(v6 + 8);
    v9 = *(_DWORD *)(v6 + 144);
    if (v9 == -1)
    {
      std::ios_base::getloc((const std::ios_base *)((char *)a1 + *(_QWORD *)(*a1 - 24)));
      v10 = std::locale::use_facet(&v14, &std::ctype<char>::id);
      v9 = ((uint64_t (*)(const std::locale::facet *, uint64_t))v10->__vftable[2].~facet_0)(v10, 32);
      std::locale::~locale(&v14);
      *(_DWORD *)(v6 + 144) = v9;
    }
    if ((v8 & 0xB0) == 0x20)
      v11 = a2 + a3;
    else
      v11 = a2;
    if (!sub_211B24(v7, a2, v11, a2 + a3, v6, (char)v9))
      std::ios_base::clear((std::ios_base *)((char *)a1 + *(_QWORD *)(*a1 - 24)), *(_DWORD *)((char *)a1 + *(_QWORD *)(*a1 - 24) + 32) | 5);
  }
  std::ostream::sentry::~sentry(v13);
  return a1;
}

void sub_211AC8(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, std::locale a12)
{
  _QWORD *v12;

  std::ostream::sentry::~sentry(&a10);
  __cxa_begin_catch(a1);
  std::ios_base::__set_badbit_and_consider_rethrow((std::ios_base *)((char *)v12 + *(_QWORD *)(*v12 - 24)));
  __cxa_end_catch();
  JUMPOUT(0x211AA8);
}

void sub_211B10(_Unwind_Exception *a1)
{
  __cxa_end_catch();
  _Unwind_Resume(a1);
}

uint64_t sub_211B24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int __c)
{
  uint64_t v6;
  uint64_t v11;
  int64_t v12;
  void **v13;
  uint64_t v14;
  uint64_t v15;
  void *__p[2];
  char v18;

  v6 = a1;
  if (a1)
  {
    v11 = *(_QWORD *)(a5 + 24);
    if (v11 <= a4 - a2)
      v12 = 0;
    else
      v12 = v11 - (a4 - a2);
    if (a3 - a2 >= 1 && (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 96))(a1) != a3 - a2)
      return 0;
    if (v12 >= 1)
    {
      sub_211C60(__p, v12, __c);
      v13 = v18 >= 0 ? __p : (void **)__p[0];
      v14 = (*(uint64_t (**)(uint64_t, void **, int64_t))(*(_QWORD *)v6 + 96))(v6, v13, v12);
      if (v18 < 0)
        operator delete(__p[0]);
      if (v14 != v12)
        return 0;
    }
    v15 = a4 - a3;
    if (v15 < 1 || (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)v6 + 96))(v6, a3, v15) == v15)
      *(_QWORD *)(a5 + 24) = 0;
    else
      return 0;
  }
  return v6;
}

void sub_211C44(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

_QWORD *sub_211C60(_QWORD *__b, size_t __len, int __c)
{
  void *v6;
  size_t v7;
  size_t v8;

  if (__len >= 0x7FFFFFFFFFFFFFF8)
    sub_1CEEF4();
  if (__len >= 0x17)
  {
    v7 = (__len & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((__len | 7) != 0x17)
      v7 = __len | 7;
    v8 = v7 + 1;
    v6 = operator new(v7 + 1);
    __b[1] = __len;
    __b[2] = v8 | 0x8000000000000000;
    *__b = v6;
  }
  else
  {
    *((_BYTE *)__b + 23) = __len;
    v6 = __b;
    if (!__len)
      goto LABEL_9;
  }
  memset(v6, __c, __len);
LABEL_9:
  *((_BYTE *)v6 + __len) = 0;
  return __b;
}

void deleteString(void *a1)
{
  if (a1)
    free(a1);
}

unsigned __int8 *getnum(unsigned __int8 *result)
{
  _BYTE *v1;
  uint64_t v2;
  int v3;

  v1 = result;
  if (((char)*result & 0x80000000) == 0)
  {
    v2 = *result;
    v1 = result;
    do
    {
      if (v2 != 46 && (_DefaultRuneLocale.__runetype[v2] & 0x400) == 0)
        break;
      v3 = (char)*++v1;
      v2 = v3;
    }
    while ((v3 & 0x80000000) == 0);
  }
  *v1 = 0;
  return result;
}

char *strdupWithoutQuotes(char *a1)
{
  int v1;
  char *v2;
  size_t v3;
  int v4;

  v1 = *a1;
  if (v1 == 39 || v1 == 34)
    ++a1;
  v2 = strdup(a1);
  v3 = strlen(v2);
  v4 = v2[v3 - 1];
  if (v4 == 39 || v4 == 34)
    v2[v3 - 1] = 0;
  return v2;
}

char *strdupWithoutURLOrQuotes(char *a1)
{
  uint64_t v2;
  char *i;
  int v4;
  char *v5;
  int v6;
  size_t v7;
  unsigned __int8 *v8;
  int v9;
  size_t v10;
  unsigned __int8 *v11;
  int v12;

  if (!strncmp(a1, "url", 3uLL))
    v2 = 3;
  else
    v2 = 0;
  for (i = &a1[v2]; ; ++i)
  {
    v4 = *i;
    if (v4 != 32)
      break;
  }
  if (v4 == 40)
    v5 = i + 1;
  else
    v5 = i;
  do
    v6 = *v5++;
  while (v6 == 32);
  v7 = strlen(v5 - 1);
  v8 = (unsigned __int8 *)&v5[v7];
  v9 = v5[v7 - 2];
  if (v9 == 41)
  {
    *(v8 - 2) = 0;
    v10 = v7 - 2;
    v9 = *(v8 - 3);
  }
  else
  {
    v10 = v7 - 1;
  }
  if (v9 == 32)
  {
    v11 = (unsigned __int8 *)&v5[v10 - 1];
    do
    {
      *v11 = 0;
      v12 = *--v11;
    }
    while (v12 == 32);
  }
  return strdupWithoutQuotes(v5 - 1);
}

PFSPair *pairForTerm2(uint64_t a1, char *a2)
{
  id v4;
  char *v5;
  uint64_t v6;
  int v7;
  id v8;
  PFSPair *v9;

  v4 = objc_alloc((Class)NSString);
  v5 = a2;
  if ((*a2 & 0x80000000) == 0)
  {
    v6 = *a2;
    v5 = a2;
    do
    {
      if (v6 != 46 && (_DefaultRuneLocale.__runetype[v6] & 0x400) == 0)
        break;
      v7 = *++v5;
      v6 = v7;
    }
    while ((v7 & 0x80000000) == 0);
  }
  *v5 = 0;
  v8 = objc_msgSend(v4, "initWithUTF8String:", a2);
  v9 = -[PFSPair initWithType:value:]([PFSPair alloc], "initWithType:value:", a1, v8);
  free(a2);

  return v9;
}

uint64_t yylex(_QWORD *a1, PFSStyleParserHandler *this)
{
  _QWORD *v3;
  uint64_t result;

  v3 = (_QWORD *)PFSStyleParserHandler::lexer(this);
  result = (*(uint64_t (**)(_QWORD *))(*v3 + 64))(v3);
  *a1 = v3[65];
  return result;
}

uint64_t yyparse(PFSStyleParserHandler *a1)
{
  __objc2_meth_list **p_opt_class_meths;
  FILE **v2;
  unsigned int v3;
  int v4;
  __int16 *v5;
  __int16 *v6;
  uint64_t v7;
  __int16 *v8;
  __int16 *v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  int v13;
  _QWORD *v14;
  FILE *v15;
  uint64_t v16;
  int v17;
  FILE *v18;
  int v19;
  void **v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  PFSPair *v24;
  uint64_t v25;
  int v26;
  FILE *v27;
  FILE **v28;
  void **v29;
  char *v30;
  NSArray *v31;
  NSString *v32;
  NSString *v33;
  void *v34;
  NSString *v35;
  void *v36;
  NSString *v37;
  void *v38;
  void *v39;
  PFSPair *v40;
  PFSPair *v41;
  id v42;
  id v43;
  void *v44;
  NSString *v45;
  NSString *v46;
  NSString *v47;
  void *v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  void *v55;
  PFSPair *v56;
  NSString *v57;
  id v58;
  void *v59;
  id v60;
  void *v61;
  void *v62;
  id v63;
  void *v64;
  const char *v65;
  size_t v66;
  size_t v67;
  size_t v68;
  malloc_type_id_t v69;
  size_t v70;
  size_t v71;
  char *v72;
  char *v73;
  char *v74;
  void *v75;
  void *v76;
  id v77;
  id v78;
  id v79;
  id v80;
  id v81;
  id v82;
  id v83;
  void *v84;
  void *v85;
  id v86;
  PFSPair *v87;
  void *v88;
  PFSPair *v89;
  id v90;
  PFSPair *v91;
  id v92;
  id v93;
  id v94;
  id v95;
  char *v96;
  uint64_t v97;
  PFSPair *v98;
  uint64_t v99;
  char *v100;
  void *v101;
  id v102;
  uint64_t v103;
  char *v104;
  void *v105;
  NSString *v106;
  id v107;
  FILE *v108;
  uint64_t v109;
  void **v110;
  int v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  size_t v116;
  char *v117;
  unint64_t v118;
  uint64_t v119;
  __int16 *v120;
  uint64_t v122;
  uint64_t v124;
  uint64_t v125;
  void *v126;
  _BYTE *__src;
  unsigned int v129;
  unint64_t v130;
  __int16 *v131;
  unsigned int v132;
  FILE **v133;
  PFSPair *v134;
  void **v135;
  _BYTE v136[1600];
  _BYTE v137[400];
  _BYTE v138[128];

  p_opt_class_meths = &OBJC_PROTOCOL___THAccessibilityTSKScrollViewDelegate.opt_class_meths;
  v2 = &__stderrp;
  if (yydebug)
    fwrite("Starting parse\n", 0xFuLL, 1uLL, __stderrp);
  v3 = 0;
  v4 = 0;
  v135 = (void **)v136;
  v130 = 200;
  __src = v136;
  v5 = (__int16 *)v137;
  v6 = (__int16 *)v137;
  v129 = -2;
  while (1)
  {
    *v5 = v4;
    if (&v6[v130 - 1] <= v5)
    {
      if (v130 >> 4 > 0x270
        || (2 * v130 >= 0x2710 ? (v7 = 10000) : (v7 = 2 * v130),
            (v8 = (__int16 *)malloc_type_malloc(10 * v7 + 7, 0x1AEE7DBBuLL)) == 0))
      {
        v113 = v138;
        goto LABEL_243;
      }
      v9 = v8;
      v10 = v5 - v6;
      v11 = v10 + 1;
      memcpy(v8, v6, 2 * (v10 + 1));
      memcpy((char *)v9 + ((2 * v7 + 7) & 0xFFFFFFFFFFFFFFF8), __src, 8 * (v10 + 1));
      if (v6 != (__int16 *)v137)
        free(v6);
      if (*((_DWORD *)p_opt_class_meths + 870))
        fprintf(*v2, "Stack size increased to %lu\n", v7);
      v5 = &v9[v10];
      if (v7 <= v11)
      {
        v119 = 1;
        v113 = v138;
        goto LABEL_252;
      }
      v130 = v7;
      v135 = (void **)((char *)&v9[4 * v11 - 4] + ((2 * v7 + 7) & 0xFFFFFFFFFFFFFFF8));
      __src = (char *)v9 + ((2 * v7 + 7) & 0xFFFFFFFFFFFFFFF8);
      v6 = v9;
    }
    if (*((_DWORD *)p_opt_class_meths + 870))
      fprintf(*v2, "Entering state %d\n", v4);
    v12 = word_31C748[v4];
    if (v12 == -193)
      goto LABEL_48;
    v13 = v129;
    if (v129 == -2)
    {
      if (*((_DWORD *)p_opt_class_meths + 870))
        fwrite("Reading a token: ", 0x11uLL, 1uLL, *v2);
      v14 = (_QWORD *)PFSStyleParserHandler::lexer(a1);
      v13 = (*(uint64_t (**)(_QWORD *))(*v14 + 64))(v14);
      v126 = (void *)v14[65];
    }
    if (v13 <= 0)
    {
      if (*((_DWORD *)p_opt_class_meths + 870))
        fwrite("Now at end of input.\n", 0x15uLL, 1uLL, *v2);
      v3 = 0;
      v129 = 0;
    }
    else
    {
      v129 = v13;
      if (v13 > 0x12B)
        v3 = 2;
      else
        v3 = byte_31C9BA[v13];
      if (*((_DWORD *)p_opt_class_meths + 870))
      {
        fprintf(*v2, "%s ", "Next token is");
        v15 = *v2;
        if (v3 >= 0x3D)
          fprintf(v15, "nterm %s (");
        else
          fprintf(v15, "token %s (");
        fputc(41, v15);
        fputc(10, *v2);
      }
    }
    v16 = v3 + v12;
    if (v16 > 0x235 || v3 != word_31CAE6[v16])
    {
LABEL_48:
      v21 = byte_31D3BE[v4];
      if (!byte_31D3BE[v4])
        goto LABEL_232;
LABEL_49:
      v131 = v6;
      v132 = v3;
      v22 = v21;
      v23 = byte_31D4F7[v21];
      v24 = (PFSPair *)v135[1 - v23];
      v133 = (FILE **)v5;
      v134 = v24;
      if (*((_DWORD *)p_opt_class_meths + 870))
      {
        fprintf(*v2, "Reducing stack by rule %d (line %lu):\n", v22 - 1, word_31D822[v22]);
        if ((_DWORD)v23)
        {
          v25 = 0;
          do
          {
            v26 = v25 + 1;
            fprintf(*v2, "   $%d = ", v25 + 1);
            v27 = *v2;
            if (byte_31D946[word_31DB62[v22] + v25] < 61)
              fprintf(v27, "token %s (");
            else
              fprintf(v27, "nterm %s (");
            fputc(41, v27);
            fputc(10, *v2);
            ++v25;
          }
          while ((_DWORD)v23 != v26);
        }
      }
      p_opt_class_meths = &OBJC_PROTOCOL___THAccessibilityTSKScrollViewDelegate.opt_class_meths;
      v28 = v133;
      v29 = v135;
      switch((int)v22)
      {
        case 2:
          goto LABEL_68;
        case 3:
        case 5:
        case 6:
        case 7:
        case 8:
        case 9:
        case 10:
        case 11:
        case 12:
        case 13:
        case 14:
        case 15:
        case 16:
        case 17:
        case 18:
        case 19:
        case 20:
        case 21:
        case 22:
        case 38:
        case 39:
        case 50:
        case 52:
        case 69:
        case 70:
        case 71:
        case 72:
        case 111:
        case 144:
        case 145:
          goto LABEL_57;
        case 4:
        case 53:
        case 54:
        case 55:
        case 56:
        case 57:
        case 58:
          break;
        case 23:
        case 24:
          PFSStyleParserHandler::commentHandler(a1, +[NSString string](NSString, "string"));
          goto LABEL_57;
        case 25:
          v31 = (NSArray *)objc_msgSend(objc_alloc((Class)NSString), "initWithUTF8String:", *(v135 - 3));
          PFSStyleParserHandler::namespaceDeclarationHandler(a1, 0, (NSString *)&v31->super.isa);
          goto LABEL_67;
        case 26:
          v32 = (NSString *)objc_msgSend(objc_alloc((Class)NSString), "initWithUTF8String:", *(v135 - 5));
          v33 = (NSString *)objc_msgSend(objc_alloc((Class)NSString), "initWithUTF8String:", *(v29 - 3));
          PFSStyleParserHandler::namespaceDeclarationHandler(a1, v32, v33);

          v34 = *(v29 - 5);
          if (v34)
            free(v34);
          goto LABEL_68;
        case 27:
        case 37:
        case 75:
        case 81:
        case 98:
        case 99:
        case 117:
        case 119:
          goto LABEL_78;
        case 28:
          v31 = (NSArray *)objc_alloc_init((Class)NSMutableArray);
          v35 = (NSString *)objc_msgSend(objc_alloc((Class)NSString), "initWithUTF8String:", *(v29 - 3));
          PFSStyleParserHandler::importHandler(a1, v35, v31);

LABEL_67:
LABEL_68:
          v36 = *(v29 - 3);
          if (v36)
            goto LABEL_69;
          goto LABEL_57;
        case 29:
          v37 = (NSString *)objc_msgSend(objc_alloc((Class)NSString), "initWithUTF8String:", *(v135 - 4));
          PFSStyleParserHandler::importHandler(a1, v37, (NSArray *)*(v29 - 2));

          v38 = *(v29 - 4);
          if (v38)
            free(v38);
          goto LABEL_105;
        case 30:
          v30 = strdupWithoutQuotes((char *)*v135);
          goto LABEL_74;
        case 31:
          v30 = strdupWithoutURLOrQuotes((char *)*v135);
          goto LABEL_74;
        case 32:
          PFSStyleParserHandler::endMediaHandler((uint64_t)a1, (NSArray *)*(v135 - 4));
          v39 = *(v29 - 4);
          goto LABEL_121;
        case 33:
          PFSStyleParserHandler::endMediaHandler((uint64_t)a1, (NSArray *)*(v135 - 5));
          v39 = *(v29 - 5);
          goto LABEL_121;
        case 34:
          PFSStyleParserHandler::startMediaHandler(a1, (NSArray *)*v135);
LABEL_78:
          v40 = (PFSPair *)*v29;
          goto LABEL_173;
        case 35:
          v41 = (PFSPair *)objc_alloc_init((Class)NSMutableArray);
          v42 = objc_msgSend(objc_alloc((Class)NSString), "initWithUTF8String:", *(v29 - 1));
          v134 = v41;
          -[PFSPair addObject:](v41, "addObject:", v42);
          goto LABEL_204;
        case 36:
          v43 = objc_msgSend(objc_alloc((Class)NSString), "initWithUTF8String:", *(v135 - 1));
          objc_msgSend(*(v29 - 4), "addObject:", v43);

          v44 = *(v29 - 1);
          if (!v44)
            goto LABEL_114;
          goto LABEL_113;
        case 40:
          PFSStyleParserHandler::endMasterPageHandler((uint64_t)a1);
          goto LABEL_57;
        case 41:
          v45 = (NSString *)objc_msgSend(objc_alloc((Class)NSString), "initWithUTF8String:", *v135);
          PFSStyleParserHandler::startMasterPageHandler((id *)a1, v45, 0);
          if (*v29)
            free(*v29);

          goto LABEL_57;
        case 42:
          v46 = (NSString *)objc_msgSend(objc_alloc((Class)NSString), "initWithUTF8String:", *(v135 - 2));
          v47 = (NSString *)objc_msgSend(objc_alloc((Class)NSString), "initWithUTF8String:", *v29);
          PFSStyleParserHandler::startMasterPageHandler((id *)a1, v46, v47);
          v48 = *(v29 - 2);
          if (v48)
            free(v48);
          if (*v29)
            free(*v29);

          goto LABEL_57;
        case 43:
          PFSStyleParserHandler::endRegularPageHandler((uint64_t)a1);
          goto LABEL_57;
        case 44:
          PFSStyleParserHandler::startRegularPageHandler((id *)a1);
          goto LABEL_57;
        case 45:
          v49 = objc_msgSend(objc_alloc((Class)NSString), "initWithUTF8String:", *v135);
          v50 = objc_alloc((Class)TSUPair);
          v51 = v49;
          v52 = 0;
          goto LABEL_97;
        case 46:
          v53 = objc_msgSend(objc_alloc((Class)NSString), "initWithUTF8String:", *(v135 - 1));
          v54 = objc_msgSend(objc_alloc((Class)NSString), "initWithUTF8String:", *v29);
          v134 = (PFSPair *)objc_msgSend(objc_alloc((Class)TSUPair), "initWithFirst:second:", v53, v54);

          v55 = *(v29 - 1);
          if (v55)
            free(v55);
          goto LABEL_130;
        case 47:
          v49 = objc_msgSend(objc_alloc((Class)NSString), "initWithUTF8String:", *v135);
          v50 = objc_alloc((Class)TSUPair);
          v51 = 0;
          v52 = v49;
LABEL_97:
          v56 = (PFSPair *)objc_msgSend(v50, "initWithFirst:second:", v51, v52);
          goto LABEL_111;
        case 48:
          PFSStyleParserHandler::endFontFaceHandler((NSMutableDictionary *)a1);
          goto LABEL_57;
        case 49:
          PFSStyleParserHandler::startFontFaceHandler((NSMutableDictionary *)a1);
          goto LABEL_57;
        case 51:
          v39 = *(v135 - 6);
          goto LABEL_121;
        case 59:
          PFSStyleParserHandler::endSlotHandler((uint64_t)a1);
          goto LABEL_57;
        case 60:
          v57 = (NSString *)objc_msgSend(objc_alloc((Class)NSString), "initWithUTF8String:", *(v135 - 2));
          PFSStyleParserHandler::startSlotHandler((id *)a1, v57);

          v36 = *(v29 - 2);
          if (v36)
LABEL_69:
            free(v36);
          goto LABEL_57;
        case 61:
          PFSStyleParserHandler::positionedSlotsHandler((id *)a1, (NSArray *)*(v135 - 2));
LABEL_105:
          v39 = *(v29 - 2);
          goto LABEL_121;
        case 62:
          PFSStyleParserHandler::positionedSlotsHandler((id *)a1, 0);
          goto LABEL_57;
        case 63:
        case 79:
        case 112:
          v134 = (PFSPair *)objc_msgSend(objc_alloc((Class)NSMutableArray), "initWithObjects:", *v135, 0);
          goto LABEL_178;
        case 64:
          objc_msgSend(*(v135 - 4), "addObject:", *v135);

          goto LABEL_114;
        case 65:
        case 108:
          v30 = (char *)objc_msgSend(objc_alloc((Class)NSString), "initWithUTF8String:", *v135);
LABEL_74:
          v134 = (PFSPair *)v30;
          goto LABEL_130;
        case 66:
          v58 = objc_msgSend(objc_alloc((Class)NSString), "initWithUTF8String:", *(v135 - 4));
          objc_msgSend(*(v29 - 2), "addObject:", objc_msgSend(v58, "substringToIndex:", (char *)objc_msgSend(v58, "length") - 1));

          v59 = *(v29 - 4);
          if (!v59)
            goto LABEL_169;
          goto LABEL_144;
        case 67:
          v49 = objc_msgSend(objc_alloc((Class)NSString), "initWithUTF8String:", *v135);
          v56 = (PFSPair *)objc_msgSend(objc_alloc((Class)NSMutableArray), "initWithObjects:", v49, 0);
LABEL_111:
          v134 = v56;

          goto LABEL_130;
        case 68:
          v60 = objc_msgSend(objc_alloc((Class)NSString), "initWithUTF8String:", *v135);
          objc_msgSend(*(v29 - 4), "addObject:", v60);

          v44 = *v29;
          if (*v29)
LABEL_113:
            free(v44);
LABEL_114:
          v40 = (PFSPair *)*(v29 - 4);
          goto LABEL_173;
        case 73:
          PFSStyleParserHandler::propertyHandler(a1, (const char *)*(v135 - 4), (NSArray *)*(v135 - 1));
          v61 = *(v29 - 4);
          if (v61)
            free(v61);
          v39 = *(v29 - 1);
          goto LABEL_121;
        case 74:
          PFSStyleParserHandler::propertyHandler(a1, (const char *)*(v135 - 3), (NSArray *)*v135);
          v62 = *(v29 - 3);
          if (v62)
            free(v62);
          v39 = *v29;
LABEL_121:

          goto LABEL_57;
        case 76:
          goto LABEL_172;
        case 77:
          PFSStyleParserHandler::endStyleHandler(a1);
          PFSStyleParserHandler::endSelectorHandler((NSMutableDictionary *)a1, (NSArray *)*(v29 - 4));
          v63 = *(v29 - 4);
LABEL_57:
          v134 = 0;
          break;
        case 78:
          PFSStyleParserHandler::startSelectorHandler((NSMutableDictionary *)a1, (NSArray *)*(v135 - 1));
          PFSStyleParserHandler::startStyleHandler(a1);
          goto LABEL_172;
        case 80:
          objc_msgSend(*(v135 - 3), "addObject:", *v135);

          goto LABEL_125;
        case 82:
        case 83:
LABEL_125:
          v40 = (PFSPair *)*(v29 - 3);
          goto LABEL_173;
        case 84:
          v134 = -[PFSStyleSelector initWithParseOrder:]([PFSStyleSelector alloc], "initWithParseOrder:", PFSStyleParserHandler::nextSelectorParseIndex(a1));
          PFSStyleSimpleSelector::setElement((PFSStyleSimpleSelector *)-[PFSPair addSimpleSelector](v134, "addSimpleSelector"), (char *)*v29);
          goto LABEL_130;
        case 85:
          v134 = -[PFSStyleSelector initWithParseOrder:]([PFSStyleSelector alloc], "initWithParseOrder:", PFSStyleParserHandler::nextSelectorParseIndex(a1));
          PFSStyleSimpleSelector::addHashIdentifier((PFSStyleSimpleSelector *)-[PFSPair addSimpleSelector](v134, "addSimpleSelector"), (char *)*v29 + 1);
          goto LABEL_130;
        case 86:
          v134 = -[PFSStyleSelector initWithParseOrder:]([PFSStyleSelector alloc], "initWithParseOrder:", PFSStyleParserHandler::nextSelectorParseIndex(a1));
          PFSStyleSimpleSelector::addClass((uint64_t *)-[PFSPair addSimpleSelector](v134, "addSimpleSelector"), (char *)*v29);
          goto LABEL_130;
        case 87:
          v134 = -[PFSStyleSelector initWithParseOrder:]([PFSStyleSelector alloc], "initWithParseOrder:", PFSStyleParserHandler::nextSelectorParseIndex(a1));
          PFSStyleSimpleSelector::addAttrib((PFSStyleSimpleSelector *)-[PFSPair addSimpleSelector](v134, "addSimpleSelector"), (char *)*v29);
LABEL_130:
          v64 = *v29;
          if (!*v29)
            break;
          goto LABEL_206;
        case 88:
          v134 = -[PFSStyleSelector initWithParseOrder:]([PFSStyleSelector alloc], "initWithParseOrder:", PFSStyleParserHandler::nextSelectorParseIndex(a1));
          PFSStyleSimpleSelector::addPseudoClass((PFSStyleSimpleSelector *)-[PFSPair addSimpleSelector](v134, "addSimpleSelector"), (NSString *)*v29);
          goto LABEL_178;
        case 89:
          PFSStyleSimpleSelector::addHashIdentifier((PFSStyleSimpleSelector *)objc_msgSend(*(v135 - 1), "curSimpleSelector"), (char *)*v135 + 1);
          goto LABEL_136;
        case 90:
          PFSStyleSimpleSelector::addClass((uint64_t *)objc_msgSend(*(v135 - 1), "curSimpleSelector"), (char *)*v135);
          goto LABEL_136;
        case 91:
          PFSStyleSimpleSelector::addAttrib((PFSStyleSimpleSelector *)objc_msgSend(*(v135 - 1), "curSimpleSelector"), (char *)*v135);
LABEL_136:
          if (*v29)
            free(*v29);
          goto LABEL_172;
        case 92:
          PFSStyleSimpleSelector::addPseudoClass((PFSStyleSimpleSelector *)objc_msgSend(*(v135 - 1), "curSimpleSelector"), (NSString *)*v135);
          goto LABEL_171;
        case 93:
          PFSStyleSimpleSelector::setElement((PFSStyleSimpleSelector *)objc_msgSend(*(v135 - 2), "addSimpleSelector"), (char *)*v135);
          goto LABEL_143;
        case 94:
          PFSStyleSimpleSelector::addHashIdentifier((PFSStyleSimpleSelector *)objc_msgSend(*(v135 - 2), "addSimpleSelector"), (char *)*v135 + 1);
          goto LABEL_143;
        case 95:
          PFSStyleSimpleSelector::addClass((uint64_t *)objc_msgSend(*(v135 - 2), "addSimpleSelector"), (char *)*v135);
          goto LABEL_143;
        case 96:
          PFSStyleSimpleSelector::addAttrib((PFSStyleSimpleSelector *)objc_msgSend(*(v135 - 2), "addSimpleSelector"), (char *)*v135);
LABEL_143:
          v59 = *v29;
          if (*v29)
LABEL_144:
            free(v59);
          goto LABEL_169;
        case 97:
          PFSStyleSimpleSelector::addPseudoClass((PFSStyleSimpleSelector *)objc_msgSend(*(v135 - 2), "addSimpleSelector"), (NSString *)*v135);
          goto LABEL_168;
        case 100:
          v134 = (PFSPair *)*(v135 - 3);
          goto LABEL_205;
        case 101:
          v65 = "*";
          goto LABEL_176;
        case 102:
          v66 = strlen((const char *)*(v135 - 6));
          v67 = strlen((const char *)*(v135 - 4));
          v68 = v66 + v67 + strlen((const char *)*(v135 - 2)) + 1;
          v69 = 1545653838;
          goto LABEL_150;
        case 103:
          v70 = strlen((const char *)*(v135 - 6));
          v71 = strlen((const char *)*(v135 - 4));
          v68 = v70 + v71 + strlen((const char *)*(v135 - 2)) + 1;
          v69 = 953256919;
LABEL_150:
          v72 = (char *)malloc_type_malloc(v68, v69);
          v73 = strcpy(v72, (const char *)*(v29 - 6));
          v74 = strcat(v73, (const char *)*(v29 - 4));
          strcat(v74, (const char *)*(v29 - 2));
          v75 = *(v29 - 6);
          if (v75)
            free(v75);
          v134 = (PFSPair *)v72;
          v76 = *(v29 - 4);
          if (v76)
            free(v76);
          v64 = *(v29 - 2);
          if (!v64)
            break;
          goto LABEL_206;
        case 104:
          goto LABEL_169;
        case 105:
          v65 = "=";
          goto LABEL_176;
        case 106:
          v65 = "INCLUDED";
          goto LABEL_176;
        case 107:
          v65 = "DASHMTCH";
          goto LABEL_176;
        case 109:
          v124 = v23;
          v125 = v22;
          v77 = objc_msgSend(objc_alloc((Class)NSString), "initWithUTF8String:", "FUNCTION ");
          v78 = objc_alloc((Class)NSString);
          v79 = objc_msgSend(v78, "initWithUTF8String:", *(v135 - 4));
          v80 = objc_alloc((Class)NSString);
          v81 = objc_msgSend(v80, "initWithUTF8String:", *(v135 - 2));
          v82 = objc_msgSend(objc_alloc((Class)NSString), "initWithUTF8String:", "ENDFUNCTION");
          v83 = objc_msgSend(objc_alloc((Class)NSArray), "initWithObjects:", v77, v79, v81, v82, 0);
          v29 = v135;
          v134 = (PFSPair *)objc_msgSend(objc_msgSend(v83, "componentsJoinedByString:", +[NSString string](NSString, "string")), "mutableCopy");

          v84 = *(v29 - 4);
          if (v84)
            free(v84);
          v85 = *(v29 - 2);
          if (v85)
            free(v85);
          v23 = v124;
          v22 = v125;
          break;
        case 110:
          v40 = (PFSPair *)(&dword_0 + 1);
          goto LABEL_173;
        case 113:
          v86 = objc_msgSend(objc_alloc((Class)NSString), "initWithUTF8String:", *(v135 - 1));
          v87 = -[PFSPair initWithType:value:]([PFSPair alloc], "initWithType:value:", *(char *)*(v29 - 1), v86);

          v88 = *(v29 - 1);
          if (v88)
            free(v88);
          objc_msgSend(*(v29 - 2), "addObject:", v87);

          objc_msgSend(*(v29 - 2), "addObject:", *v29);
LABEL_168:

LABEL_169:
          v40 = (PFSPair *)*(v29 - 2);
          goto LABEL_173;
        case 114:
          objc_msgSend(*(v135 - 1), "addObject:", *v135);
LABEL_171:

LABEL_172:
          v40 = (PFSPair *)*(v29 - 1);
LABEL_173:
          v134 = v40;
          break;
        case 115:
          v65 = "/";
          goto LABEL_176;
        case 116:
          v65 = ",";
LABEL_176:
          v89 = (PFSPair *)strdup(v65);
          goto LABEL_216;
        case 118:
          v90 = objc_msgSend(objc_alloc((Class)NSString), "initWithUTF8String:", "-");
          v91 = [PFSPair alloc];
          v92 = objc_msgSend(*v29, "type");
          v93 = objc_msgSend(v90, "stringByAppendingString:", objc_msgSend(*v135, "value"));
          v29 = v135;
          v134 = -[PFSPair initWithType:value:](v91, "initWithType:value:", v92, v93);

LABEL_178:
          break;
        case 120:
          v94 = objc_msgSend(objc_alloc((Class)NSString), "initWithUTF8String:", *(v135 - 4));
          v95 = objc_msgSend(objc_alloc((Class)NSMutableArray), "initWithObjects:", v94, *(v29 - 2), 0);

          v134 = -[PFSPair initWithType:value:]([PFSPair alloc], "initWithType:value:", 298, v95);
          v64 = *(v29 - 4);
          if (!v64)
            break;
          goto LABEL_206;
        case 121:
          v96 = (char *)*(v135 - 1);
          v97 = 296;
          goto LABEL_215;
        case 122:
          v96 = (char *)*(v135 - 1);
          v97 = 278;
          goto LABEL_215;
        case 123:
          v96 = (char *)*(v135 - 1);
          v97 = 279;
          goto LABEL_215;
        case 124:
          v96 = (char *)*(v135 - 1);
          v97 = 280;
          goto LABEL_215;
        case 125:
          v96 = (char *)*(v135 - 1);
          v97 = 281;
          goto LABEL_215;
        case 126:
          v96 = (char *)*(v135 - 1);
          v97 = 282;
          goto LABEL_215;
        case 127:
          v96 = (char *)*(v135 - 1);
          v97 = 283;
          goto LABEL_215;
        case 128:
          v96 = (char *)*(v135 - 1);
          v97 = 284;
          goto LABEL_215;
        case 129:
          v96 = (char *)*(v135 - 1);
          v97 = 285;
          goto LABEL_215;
        case 130:
          v96 = (char *)*(v135 - 1);
          v97 = 286;
          goto LABEL_215;
        case 131:
          v96 = (char *)*(v135 - 1);
          v97 = 287;
          goto LABEL_215;
        case 132:
          v96 = (char *)*(v135 - 1);
          v97 = 288;
          goto LABEL_215;
        case 133:
          v96 = (char *)*(v135 - 1);
          v97 = 289;
          goto LABEL_215;
        case 134:
          v96 = (char *)*(v135 - 1);
          v97 = 290;
          goto LABEL_215;
        case 135:
          v96 = (char *)*(v135 - 1);
          v97 = 291;
          goto LABEL_215;
        case 136:
          v96 = (char *)*(v135 - 1);
          v97 = 292;
          goto LABEL_215;
        case 137:
          v42 = objc_msgSend(objc_alloc((Class)NSString), "initWithUTF8String:", (char *)*(v135 - 1) + 1);
          v98 = [PFSPair alloc];
          v99 = 265;
          goto LABEL_203;
        case 138:
          v100 = strdupWithoutQuotes((char *)*(v135 - 1));
          v101 = *(v29 - 1);
          if (v101)
            free(v101);
          v102 = objc_msgSend(objc_alloc((Class)NSString), "initWithUTF8String:", v100);
          v134 = -[PFSPair initWithType:value:]([PFSPair alloc], "initWithType:value:", 263, v102);

          if (!v100)
            break;
          v64 = v100;
          goto LABEL_206;
        case 139:
          v42 = objc_msgSend(objc_alloc((Class)NSString), "initWithUTF8String:", *(v135 - 1));
          v98 = [PFSPair alloc];
          v99 = 264;
LABEL_203:
          v134 = -[PFSPair initWithType:value:](v98, "initWithType:value:", v99, v42);
LABEL_204:

LABEL_205:
          v64 = *(v29 - 1);
          if (v64)
LABEL_206:
            free(v64);
          break;
        case 140:
          v103 = v23;
          v104 = strdupWithoutURLOrQuotes((char *)*(v135 - 1));
          v105 = *(v29 - 1);
          if (v105)
            free(v105);
          v106 = (NSString *)objc_msgSend(objc_alloc((Class)NSString), "initWithUTF8String:", v104);
          v107 = PFSStyleParserHandler::newFullUri(a1, v106);

          v134 = -[PFSPair initWithType:value:]([PFSPair alloc], "initWithType:value:", 297, v107);
          if (v104)
            free(v104);
          v23 = v103;
          break;
        case 141:
          v96 = (char *)*(v135 - 1);
          v97 = 299;
          goto LABEL_215;
        case 142:
          v96 = (char *)*(v135 - 1);
          v97 = 295;
          goto LABEL_215;
        case 143:
          v96 = (char *)*(v135 - 1);
          v97 = 293;
LABEL_215:
          v89 = pairForTerm2(v97, v96);
LABEL_216:
          v134 = v89;
          break;
        default:
          p_opt_class_meths = (__objc2_meth_list **)(&OBJC_PROTOCOL___THAccessibilityTSKScrollViewDelegate + 48);
          v2 = v133;
          v28 = v133;
          v29 = v135;
          break;
      }
      if (*((_DWORD *)p_opt_class_meths + 870))
      {
        fprintf(*v2, "%s ", "-> $$ =");
        v108 = *v2;
        v109 = byte_31D589[v22];
        if ((_DWORD)v22)
          fprintf(v108, "nterm %s (");
        else
          fprintf(v108, "token %s (");
        fputc(41, v108);
        fputc(10, *v2);
        v110 = &v29[-v23];
        v5 = (__int16 *)v28 - v23;
        if (*((_DWORD *)p_opt_class_meths + 870))
        {
          v6 = v131;
          sub_2134D0(v131, (unint64_t)v5);
          v3 = v132;
LABEL_225:
          v110[1] = v134;
          v111 = *v5;
          v112 = (v111 + word_31D61C[v109 - 61]);
          v135 = v110 + 1;
          if (v112 <= 0x235
            && (unsigned __int16)word_31CAE6[v112] == (unsigned __int16)v111)
          {
            v17 = word_31CF52[v112];
          }
          else
          {
            v17 = word_31D682[v109 - 61];
          }
          goto LABEL_229;
        }
      }
      else
      {
        v110 = &v29[-v23];
        v109 = byte_31D589[v22];
        v5 = (__int16 *)v28 - v23;
      }
      v3 = v132;
      v6 = v131;
      goto LABEL_225;
    }
    v17 = word_31CF52[v16];
    if (v17 <= 0)
      break;
    if ((_DWORD)v16 == 96)
    {
      v119 = 0;
      v113 = v138;
      goto LABEL_251;
    }
    if (*((_DWORD *)p_opt_class_meths + 870))
    {
      fprintf(*v2, "%s ", "Shifting");
      v18 = *v2;
      if (v3 >= 0x3D)
        fprintf(v18, "nterm %s (");
      else
        fprintf(v18, "token %s (");
      fputc(41, v18);
      fputc(10, *v2);
    }
    if (v129)
      v19 = -2;
    else
      v19 = 0;
    v129 = v19;
    v20 = v135;
    v135[1] = v126;
    v135 = v20 + 1;
LABEL_229:
    ++v5;
    v4 = v17;
  }
  if (word_31CF52[v16])
  {
    v21 = -v17;
    goto LABEL_49;
  }
LABEL_232:
  v114 = sub_213554(0, v4, v129);
  v115 = v114;
  v113 = v138;
  if ((unint64_t)v114 < 0x81)
  {
    v118 = 128;
  }
  else
  {
    if (v114 < 0)
      v116 = -1;
    else
      v116 = 2 * v114;
    v117 = (char *)malloc_type_malloc(v116, 0x6DB23605uLL);
    v118 = 128;
    if (v117)
    {
      v118 = v116;
      v113 = v117;
    }
  }
  if (v115 - 1 < v118)
  {
    sub_213554(v113, v4, v129);
    PFSStyleParserHandler::setErrMsg((id *)a1, v113);
    goto LABEL_244;
  }
  PFSStyleParserHandler::setErrMsg((id *)a1, "syntax error");
  if (v115)
  {
LABEL_243:
    PFSStyleParserHandler::setErrMsg((id *)a1, "memory exhausted");
    v119 = 2;
LABEL_251:
    v9 = v6;
    goto LABEL_252;
  }
LABEL_244:
  if (v5 != v6)
  {
    v120 = v5 - 1;
    do
    {
      sub_2137BC("Error: popping", byte_31D6E8[v4]);
      v4 = *v120;
      if (*((_DWORD *)p_opt_class_meths + 870))
        sub_2134D0(v6, (unint64_t)v120);
    }
    while (v120-- != v6);
    v119 = 1;
    v5 = v6;
    goto LABEL_251;
  }
  v119 = 1;
  v9 = v5;
LABEL_252:
  if (v129 != -2 && v129)
    sub_2137BC("Cleanup: discarding lookahead", v3);
  if (*((_DWORD *)p_opt_class_meths + 870))
    sub_2134D0(v9, (unint64_t)v5);
  while (v5 != v9)
  {
    v122 = *v5--;
    sub_2137BC("Cleanup: popping", byte_31D6E8[v122]);
  }
  if (v9 != (__int16 *)v137)
    free(v9);
  if (v113 != v138)
    free(v113);
  return v119;
}

uint64_t sub_2134D0(__int16 *a1, unint64_t a2)
{
  int v4;

  fwrite("Stack now", 9uLL, 1uLL, __stderrp);
  while ((unint64_t)a1 <= a2)
  {
    v4 = *a1++;
    fprintf(__stderrp, " %d", v4);
  }
  return fputc(10, __stderrp);
}

uint64_t sub_213554(_BYTE *a1, int a2, unsigned int a3)
{
  int v3;
  uint64_t v5;
  unint64_t v6;
  char *v7;
  uint64_t v8;
  int v9;
  int v10;
  int v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  const char *v16;
  int v17;
  unint64_t v18;
  char *v19;
  uint64_t v20;
  BOOL v21;
  int v22;
  int v23;
  uint64_t v24;
  int v27;
  char *i;
  int v29;
  uint64_t v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  char v35[64];
  char *v36;
  __int128 v37;
  __int128 v38;

  v3 = word_31C748[a2];
  if (v3 >= -192)
  {
    if (a3 > 0x12B)
      v5 = 2;
    else
      v5 = byte_31C9BA[a3];
    v7 = off_42C448[v5];
    v8 = sub_213888(0, v7);
    v38 = 0u;
    v37 = 0u;
    v36 = v7;
    strcpy(v35, "syntax error, unexpected %s");
    v9 = -v3 & (v3 >> 31);
    if (566 - v3 >= 61)
      v10 = 61;
    else
      v10 = 566 - v3;
    if (v9 < v10)
    {
      v11 = 0;
      v12 = &v35[27];
      v13 = v9;
      v14 = v3;
      v15 = v10;
      v16 = ", expecting %s";
      v17 = 1;
      v34 = v8;
      v18 = v8;
      while (1)
      {
        if (v13 != 1 && (_DWORD)v13 == word_31CAE6[v13 + v14])
        {
          if (v17 == 5)
          {
            v35[27] = 0;
            v17 = 1;
            v18 = v34;
            goto LABEL_24;
          }
          v19 = off_42C448[v13];
          (&v36)[v17] = v19;
          v20 = sub_213888(0, v19);
          v21 = __CFADD__(v20, v18);
          v18 += v20;
          v22 = v21;
          --v12;
          do
          {
            v23 = *(unsigned __int8 *)v16++;
            *++v12 = v23;
          }
          while (v23);
          ++v17;
          v11 |= v22;
          v16 = " or %s";
        }
        if (++v13 >= v15)
          goto LABEL_24;
      }
    }
    v11 = 0;
    v17 = 1;
    v18 = v8;
LABEL_24:
    v24 = 0;
    while (v35[v24++])
      ;
    v6 = v18 + v24 - 1;
    if (v11 | (v6 < v18))
      return -1;
    if (!a1)
      return v6;
    v27 = 0;
    for (i = v35; ; i += v32)
    {
      v29 = *i;
      *a1 = v29;
      if (v29 != 37)
        break;
      if (i[1] != 115 || v27 >= v17)
        goto LABEL_38;
      v33 = v27 + 1;
      v31 = sub_213888((uint64_t)a1, (&v36)[v27]);
      v32 = 2;
      v27 = v33;
LABEL_40:
      a1 += v31;
    }
    if (!v29)
      return v6;
LABEL_38:
    v31 = 1;
    v32 = 1;
    goto LABEL_40;
  }
  return 0;
}

const char *sub_2137BC(const char *result, int a2)
{
  const char *v3;
  FILE *v4;

  if (yydebug)
  {
    v3 = "Deleting";
    if (result)
      v3 = result;
    fprintf(__stderrp, "%s ", v3);
    v4 = __stderrp;
    if (a2 >= 61)
      fprintf(__stderrp, "nterm %s (");
    else
      fprintf(__stderrp, "token %s (");
    fputc(41, v4);
    return (const char *)fputc(10, __stderrp);
  }
  return result;
}

uint64_t sub_213888(uint64_t a1, _BYTE *a2)
{
  uint64_t v2;
  _BYTE *v3;
  _BYTE *i;
  int v5;
  int v6;
  char v7;
  _BYTE *v8;
  int v9;
  uint64_t v10;
  int v11;

  if (*a2 != 34)
  {
LABEL_13:
    v10 = 0;
    if (a1)
    {
      do
      {
        v11 = a2[v10];
        *(_BYTE *)(a1 + v10++) = v11;
      }
      while (v11);
    }
    else
    {
      while (a2[v10++])
        ;
    }
    return v10 - 1;
  }
  v2 = 0;
  v3 = a2;
  for (i = a2; ; v3 = i)
  {
    v6 = (char)*++i;
    v5 = v6;
    v7 = v6;
    if (v6 > 91)
    {
      if (v5 == 92)
      {
        v9 = v3[2];
        v8 = v3 + 2;
        if (v9 != 92)
          goto LABEL_13;
        v7 = 92;
        i = v8;
      }
      goto LABEL_10;
    }
    if (v5 == 34)
      break;
    if (v5 == 39 || v5 == 44)
      goto LABEL_13;
LABEL_10:
    if (a1)
      *(_BYTE *)(a1 + v2) = v7;
    ++v2;
  }
  if (a1)
    *(_BYTE *)(a1 + v2) = 0;
  return v2;
}

char **sb_stemmer_list()
{
  return off_541D30;
}

_QWORD *sb_stemmer_new(char *__s2, const char *a2)
{
  const char *v3;
  uint64_t (**i)();
  _QWORD *v5;
  _QWORD *v7;
  __int128 v8;
  uint64_t v9;
  void (*v10)(_QWORD);

  if (a2 && strcmp("UTF_8", a2))
    return 0;
  v3 = "da";
  for (i = &off_42C7F0; strcmp(v3, __s2) || *((_DWORD *)i - 6) != 1; i += 5)
  {
    v3 = (const char *)i[1];
    if (!v3)
      return 0;
  }
  v7 = malloc_type_malloc(0x20uLL, 0xA00400770BE9BuLL);
  v5 = v7;
  if (v7)
  {
    v8 = *((_OWORD *)i - 1);
    *(_OWORD *)v7 = v8;
    v7[2] = *i;
    v9 = ((uint64_t (*)(void))v8)();
    v5[3] = v9;
    if (!v9)
    {
      v10 = (void (*)(_QWORD))v5[1];
      if (v10)
        v10(0);
      free(v5);
      return 0;
    }
  }
  return v5;
}

void sb_stemmer_delete(_QWORD *a1)
{
  void (*v2)(_QWORD);

  if (a1)
  {
    v2 = (void (*)(_QWORD))a1[1];
    if (v2)
      v2(a1[3]);
    free(a1);
  }
}

uint64_t sb_stemmer_stem(uint64_t a1, void *__src, int a3)
{
  uint64_t result;

  if (SN_set_current(*(_QWORD *)(a1 + 24), a3, __src))
  {
    result = 0;
    *(_DWORD *)(*(_QWORD *)(a1 + 24) + 12) = 0;
  }
  else if (((*(uint64_t (**)(_QWORD))(a1 + 16))(*(_QWORD *)(a1 + 24)) & 0x80000000) != 0)
  {
    return 0;
  }
  else
  {
    *(_BYTE *)(**(_QWORD **)(a1 + 24) + *(int *)(*(_QWORD *)(a1 + 24) + 12)) = 0;
    return **(_QWORD **)(a1 + 24);
  }
  return result;
}

uint64_t sb_stemmer_length(uint64_t a1)
{
  return *(unsigned int *)(*(_QWORD *)(a1 + 24) + 12);
}

_QWORD *SN_create_env(int a1, int a2, int a3)
{
  _QWORD *v6;
  _QWORD *s;
  void *v8;
  uint64_t v9;
  void *v10;
  void *v11;

  v6 = malloc_type_calloc(1uLL, 0x38uLL, 0x1090040893BA05AuLL);
  if (!v6)
    return v6;
  s = create_s();
  *v6 = s;
  if (!s)
    goto LABEL_13;
  if (!a1)
    goto LABEL_9;
  v8 = malloc_type_calloc(a1, 8uLL, 0x10040436913F5uLL);
  v6[4] = v8;
  if (!v8)
  {
LABEL_13:
    SN_close_env((uint64_t)v6, a1);
    return 0;
  }
  if (a1 >= 1)
  {
    v9 = 0;
    do
    {
      *(_QWORD *)(v6[4] + v9) = create_s();
      if (!*(_QWORD *)(v6[4] + v9))
        goto LABEL_13;
      v9 += 8;
    }
    while (8 * a1 != v9);
  }
LABEL_9:
  if (a2)
  {
    v10 = malloc_type_calloc(a2, 4uLL, 0x100004052888210uLL);
    v6[5] = v10;
    if (!v10)
      goto LABEL_13;
  }
  if (a3)
  {
    v11 = malloc_type_calloc(a3, 1uLL, 0x100004077774924uLL);
    v6[6] = v11;
    if (!v11)
      goto LABEL_13;
  }
  return v6;
}

void SN_close_env(uint64_t a1, int a2)
{
  uint64_t v3;
  uint64_t v4;

  if (a1)
  {
    if (a2)
    {
      if (a2 >= 1)
      {
        v3 = 0;
        v4 = 8 * a2;
        do
        {
          lose_s(*(_QWORD *)(*(_QWORD *)(a1 + 32) + v3));
          v3 += 8;
        }
        while (v4 != v3);
      }
      free(*(void **)(a1 + 32));
    }
    free(*(void **)(a1 + 40));
    free(*(void **)(a1 + 48));
    if (*(_QWORD *)a1)
      lose_s(*(_QWORD *)a1);
    free((void *)a1);
  }
}

uint64_t SN_set_current(uint64_t a1, int a2, void *__src)
{
  uint64_t result;

  result = replace_s(a1, 0, *(_DWORD *)(a1 + 12), a2, __src, 0);
  *(_DWORD *)(a1 + 8) = 0;
  return result;
}

_QWORD *create_s()
{
  _QWORD *result;

  result = malloc_type_malloc(0xAuLL, 0xCFBD9132uLL);
  if (result)
    *result++ = 0x100000001;
  return result;
}

void lose_s(uint64_t a1)
{
  if (a1)
    free((void *)(a1 - 8));
}

uint64_t skip_utf8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v5;
  BOOL v7;

  if (a5 < 0)
  {
    while ((int)a2 > (int)a3)
    {
      v5 = (int)a2 - 1;
      if (*(char *)(a1 + v5) < 0 && (int)v5 > (int)a3)
      {
        v5 = (int)a2 - 1;
        while (*(unsigned __int8 *)(a1 + v5) <= 0xBFu)
        {
          if (--v5 <= (int)a3)
          {
            v5 = a3;
            break;
          }
        }
      }
      LODWORD(a2) = v5;
      if (__CFADD__(a5++, 1))
        return v5;
    }
  }
  else
  {
    if (!a5)
      return a2;
    while ((int)a2 < (int)a4)
    {
      v5 = (a2 + 1);
      if (*(unsigned __int8 *)(a1 + (int)a2) >= 0xC0u && (int)v5 < (int)a4)
      {
        v5 = (int)a2 + 1;
        while (*(char *)(a1 + v5) <= -65)
        {
          if (++v5 >= (int)a4)
          {
            v5 = a4;
            break;
          }
        }
      }
      LODWORD(a2) = v5;
      v7 = __OFSUB__(a5--, 1);
      if ((a5 < 0) ^ v7 | (a5 == 0))
        return v5;
    }
  }
  return 0xFFFFFFFFLL;
}

uint64_t in_grouping_U(uint64_t a1, uint64_t a2, int a3, signed int a4, int a5)
{
  uint64_t v10;
  int v11;
  int v12;
  uint64_t result;
  signed int v14;

  v10 = *(_QWORD *)a1;
  v12 = *(_DWORD *)(a1 + 8);
  v11 = *(_DWORD *)(a1 + 12);
  while (1)
  {
    v14 = 0;
    result = sub_213FC8(v10, v12, v11, (unsigned int *)&v14);
    if (!(_DWORD)result)
      break;
    if (v14 > a4
      || v14 - a3 < 0
      || ((*(unsigned __int8 *)(a2 + ((unint64_t)(v14 - a3) >> 3)) >> ((v14 - a3) & 7)) & 1) == 0)
    {
      return result;
    }
    v12 += result;
    *(_DWORD *)(a1 + 8) = v12;
    if (!a5)
      return 0;
  }
  return 0xFFFFFFFFLL;
}

uint64_t sub_213FC8(uint64_t a1, int a2, int a3, unsigned int *a4)
{
  uint64_t v4;
  unsigned int v5;
  uint64_t result;
  uint64_t v8;
  char v9;

  if (a2 >= a3)
    return 0;
  v4 = a2 + 1;
  v5 = *(unsigned __int8 *)(a1 + a2);
  if (v5 < 0xC0 || (_DWORD)v4 == a3)
  {
    result = 1;
  }
  else
  {
    v8 = a2 + 2;
    v9 = *(_BYTE *)(a1 + v4);
    if (v5 < 0xE0 || (_DWORD)v8 == a3)
    {
      result = 2;
      v5 = v9 & 0x3F | ((v5 & 0x1F) << 6);
    }
    else
    {
      v5 = ((v5 & 0xF) << 12) | ((v9 & 0x3F) << 6) | *(_BYTE *)(a1 + v8) & 0x3F;
      result = 3;
    }
  }
  *a4 = v5;
  return result;
}

uint64_t in_grouping_b_U(uint64_t a1, uint64_t a2, int a3, int a4, int a5)
{
  uint64_t v10;
  int v11;
  int v12;
  uint64_t result;
  int v14;

  v10 = *(_QWORD *)a1;
  v11 = *(_DWORD *)(a1 + 16);
  v12 = *(_DWORD *)(a1 + 8);
  while (1)
  {
    v14 = 0;
    result = sub_2140F0(v10, v12, v11, &v14);
    if (!(_DWORD)result)
      break;
    if (v14 > a4
      || v14 - a3 < 0
      || ((*(unsigned __int8 *)(a2 + ((unint64_t)(v14 - a3) >> 3)) >> ((v14 - a3) & 7)) & 1) == 0)
    {
      return result;
    }
    v12 -= result;
    *(_DWORD *)(a1 + 8) = v12;
    if (!a5)
      return 0;
  }
  return 0xFFFFFFFFLL;
}

uint64_t sub_2140F0(uint64_t a1, int a2, int a3, int *a4)
{
  uint64_t v5;
  int v6;
  int v7;
  uint64_t result;
  uint64_t v9;
  unsigned int v10;

  if (a2 <= a3)
    return 0;
  v5 = a2 - 1;
  v6 = *(char *)(a1 + v5);
  v7 = *(unsigned __int8 *)(a1 + v5);
  result = 1;
  if ((_DWORD)v5 != a3 && v6 < 0)
  {
    v9 = a2 - 2;
    v10 = *(unsigned __int8 *)(a1 + v9);
    if ((_DWORD)v9 == a3 || v10 >= 0xC0)
    {
      v7 = v7 & 0x3F | ((v10 & 0x1F) << 6);
      result = 2;
    }
    else
    {
      v7 = v7 & 0x3F | ((v10 & 0x3F) << 6) & 0xFFF | ((v10 & 0xF) << 12);
      result = 3;
    }
  }
  *a4 = v7;
  return result;
}

uint64_t out_grouping_U(uint64_t a1, uint64_t a2, int a3, signed int a4, int a5)
{
  uint64_t v10;
  int v11;
  int v12;
  uint64_t result;
  signed int v14;

  v10 = *(_QWORD *)a1;
  v12 = *(_DWORD *)(a1 + 8);
  v11 = *(_DWORD *)(a1 + 12);
  while (1)
  {
    v14 = 0;
    result = sub_213FC8(v10, v12, v11, (unsigned int *)&v14);
    if (!(_DWORD)result)
      break;
    if (v14 <= a4
      && v14 - a3 >= 0
      && ((*(unsigned __int8 *)(a2 + ((unint64_t)(v14 - a3) >> 3)) >> ((v14 - a3) & 7)) & 1) != 0)
    {
      return result;
    }
    v12 += result;
    *(_DWORD *)(a1 + 8) = v12;
    if (!a5)
      return 0;
  }
  return 0xFFFFFFFFLL;
}

uint64_t out_grouping_b_U(uint64_t a1, uint64_t a2, int a3, int a4, int a5)
{
  uint64_t v10;
  int v11;
  int v12;
  uint64_t result;
  int v14;

  v10 = *(_QWORD *)a1;
  v11 = *(_DWORD *)(a1 + 16);
  v12 = *(_DWORD *)(a1 + 8);
  while (1)
  {
    v14 = 0;
    result = sub_2140F0(v10, v12, v11, &v14);
    if (!(_DWORD)result)
      break;
    if (v14 <= a4
      && v14 - a3 >= 0
      && ((*(unsigned __int8 *)(a2 + ((unint64_t)(v14 - a3) >> 3)) >> ((v14 - a3) & 7)) & 1) != 0)
    {
      return result;
    }
    v12 -= result;
    *(_DWORD *)(a1 + 8) = v12;
    if (!a5)
      return 0;
  }
  return 0xFFFFFFFFLL;
}

uint64_t in_grouping(uint64_t a1, uint64_t a2, int a3, int a4, int a5)
{
  int v5;
  uint64_t v6;
  int v7;
  int v8;
  unint64_t v9;

  v5 = *(_DWORD *)(a1 + 12);
  v6 = *(int *)(a1 + 8);
  if ((int)v6 > v5)
    v5 = *(_DWORD *)(a1 + 8);
  v7 = v6 + 1;
  while (v5 != v6)
  {
    v8 = *(unsigned __int8 *)(*(_QWORD *)a1 + v6);
    if (v8 > a4)
      return 1;
    v9 = (v8 - a3);
    if ((v9 & 0x80000000) != 0 || ((*(unsigned __int8 *)(a2 + (v9 >> 3)) >> (v9 & 7)) & 1) == 0)
      return 1;
    ++v6;
    *(_DWORD *)(a1 + 8) = v7++;
    if (!a5)
      return 0;
  }
  return 0xFFFFFFFFLL;
}

uint64_t in_grouping_b(uint64_t a1, uint64_t a2, int a3, int a4, int a5)
{
  uint64_t v5;
  uint64_t v6;
  int v7;
  int v8;
  unint64_t v9;

  v5 = *(int *)(a1 + 16);
  v6 = *(int *)(a1 + 8);
  v7 = v6 - 1;
  while (v6 > v5)
  {
    v8 = *(unsigned __int8 *)(*(_QWORD *)a1 + v6 - 1);
    if (v8 > a4)
      return 1;
    v9 = (v8 - a3);
    if ((v9 & 0x80000000) != 0 || ((*(unsigned __int8 *)(a2 + (v9 >> 3)) >> (v9 & 7)) & 1) == 0)
      return 1;
    *(_DWORD *)(a1 + 8) = v7--;
    --v6;
    if (!a5)
      return 0;
  }
  return 0xFFFFFFFFLL;
}

uint64_t out_grouping(uint64_t a1, uint64_t a2, int a3, int a4, int a5)
{
  int v5;
  uint64_t v6;
  int v7;
  int v8;
  unint64_t v9;

  v5 = *(_DWORD *)(a1 + 12);
  v6 = *(int *)(a1 + 8);
  if ((int)v6 > v5)
    v5 = *(_DWORD *)(a1 + 8);
  v7 = v6 + 1;
  while (1)
  {
    if (v5 == v6)
      return 0xFFFFFFFFLL;
    v8 = *(unsigned __int8 *)(*(_QWORD *)a1 + v6);
    if (v8 <= a4)
    {
      v9 = (v8 - a3);
      if ((v9 & 0x80000000) == 0 && ((*(unsigned __int8 *)(a2 + (v9 >> 3)) >> (v9 & 7)) & 1) != 0)
        break;
    }
    ++v6;
    *(_DWORD *)(a1 + 8) = v7++;
    if (!a5)
      return 0;
  }
  return 1;
}

uint64_t out_grouping_b(uint64_t a1, uint64_t a2, int a3, int a4, int a5)
{
  uint64_t v5;
  uint64_t v6;
  int v7;
  int v8;
  unint64_t v9;

  v5 = *(int *)(a1 + 16);
  v6 = *(int *)(a1 + 8);
  v7 = v6 - 1;
  while (1)
  {
    if (v6 <= v5)
      return 0xFFFFFFFFLL;
    v8 = *(unsigned __int8 *)(*(_QWORD *)a1 + v6 - 1);
    if (v8 <= a4)
    {
      v9 = (v8 - a3);
      if ((v9 & 0x80000000) == 0 && ((*(unsigned __int8 *)(a2 + (v9 >> 3)) >> (v9 & 7)) & 1) != 0)
        break;
    }
    *(_DWORD *)(a1 + 8) = v7--;
    --v6;
    if (!a5)
      return 0;
  }
  return 1;
}

uint64_t eq_s(uint64_t a1, int a2, void *__s2)
{
  uint64_t v3;

  v3 = *(int *)(a1 + 8);
  if (*(_DWORD *)(a1 + 12) - (int)v3 < a2 || memcmp((const void *)(*(_QWORD *)a1 + v3), __s2, a2))
    return 0;
  *(_DWORD *)(a1 + 8) = v3 + a2;
  return 1;
}

uint64_t eq_s_b(uint64_t a1, int a2, void *__s2)
{
  uint64_t v3;

  v3 = *(int *)(a1 + 8);
  if ((int)v3 - *(_DWORD *)(a1 + 16) < a2 || memcmp((const void *)(*(_QWORD *)a1 + v3 - a2), __s2, a2))
    return 0;
  *(_DWORD *)(a1 + 8) = v3 - a2;
  return 1;
}

uint64_t eq_v(uint64_t a1, _DWORD *__s2)
{
  return eq_s(a1, *(__s2 - 1), __s2);
}

uint64_t eq_v_b(uint64_t a1, _DWORD *__s2)
{
  return eq_s_b(a1, *(__s2 - 1), __s2);
}

uint64_t find_among(uint64_t a1, uint64_t a2, int a3)
{
  int v5;
  int v6;
  int v7;
  uint64_t v8;
  char v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  int v14;
  BOOL v15;
  BOOL v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(uint64_t);
  int v21;

  v5 = 0;
  v6 = 0;
  v7 = 0;
  v8 = *(int *)(a1 + 8);
  v9 = 1;
  while (1)
  {
    v10 = v5 + ((a3 - v5) >> 1);
    if (v6 >= v7)
      LODWORD(v11) = v7;
    else
      LODWORD(v11) = v6;
    v12 = v10;
    v13 = *(_DWORD *)(a2 + 32 * v10);
    if ((int)v11 >= v13)
    {
      v14 = 0;
    }
    else
    {
      v11 = (int)v11;
      while (*(_DWORD *)(a1 + 12) - (_DWORD)v8 != (_DWORD)v11)
      {
        v14 = *(unsigned __int8 *)(*(_QWORD *)a1 + v8 + v11)
            - *(unsigned __int8 *)(*(_QWORD *)(a2 + 32 * v12 + 8) + v11);
        if (v14)
          goto LABEL_13;
        if (++v11 >= v13)
        {
          v14 = 0;
          LODWORD(v11) = v13;
          goto LABEL_13;
        }
      }
      v14 = -1;
    }
LABEL_13:
    if (v14 < 0)
      a3 = v12;
    else
      v5 = v12;
    if (v14 < 0)
      v7 = v11;
    else
      v6 = v11;
    if (a3 - v5 <= 1)
    {
      v15 = v5 >= 1 || a3 == v5;
      v16 = !v15;
      v17 = v16 & v9;
      v9 = 0;
      if ((v17 & 1) == 0)
        break;
    }
  }
  while (1)
  {
    v18 = v5;
    v19 = a2 + 32 * v5;
    if (v6 >= *(_DWORD *)v19)
    {
      *(_DWORD *)(a1 + 8) = *(_DWORD *)v19 + v8;
      v20 = *(uint64_t (**)(uint64_t))(v19 + 24);
      if (!v20)
        break;
      v21 = v20(a1);
      *(_DWORD *)(a1 + 8) = *(_DWORD *)v19 + v8;
      if (v21)
        break;
    }
    v5 = *(_DWORD *)(v19 + 16);
    if (v5 < 0)
      return 0;
  }
  return *(unsigned int *)(a2 + 32 * v18 + 20);
}

uint64_t find_among_b(uint64_t a1, uint64_t a2, int a3)
{
  int v5;
  int v6;
  int v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  char v11;
  int v12;
  int v13;
  uint64_t v14;
  int v15;
  int v16;
  unsigned __int8 *v17;
  int v18;
  int v19;
  BOOL v20;
  BOOL v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(uint64_t);
  int v26;

  v5 = 0;
  v6 = 0;
  v7 = 0;
  v8 = *(int *)(a1 + 8);
  v9 = v8 - *(_DWORD *)(a1 + 16);
  v10 = v8 + *(_QWORD *)a1 - 1;
  v11 = 1;
  while (1)
  {
    v12 = v5 + ((a3 - v5) >> 1);
    if (v6 >= v7)
      v13 = v7;
    else
      v13 = v6;
    v14 = v12;
    v15 = *(_DWORD *)(a2 + 32 * v12);
    if (v15 + ~v13 < 0)
    {
      v19 = 0;
      v16 = v13;
    }
    else
    {
      v16 = v13;
      v17 = (unsigned __int8 *)(v10 - v13);
      v18 = v15 - v13;
      while (v9 != v16)
      {
        v19 = *v17 - *(unsigned __int8 *)(*(_QWORD *)(a2 + 32 * v14 + 8) + --v18);
        if (v19)
          goto LABEL_13;
        ++v16;
        --v17;
        if (v18 <= 0)
        {
          v19 = 0;
          v16 = v15;
          goto LABEL_13;
        }
      }
      v19 = -1;
    }
LABEL_13:
    if (v19 < 0)
      a3 = v14;
    else
      v5 = v14;
    if (v19 < 0)
      v7 = v16;
    else
      v6 = v16;
    if (a3 - v5 <= 1)
    {
      v20 = v5 >= 1 || a3 == v5;
      v21 = !v20;
      v22 = v21 & v11;
      v11 = 0;
      if ((v22 & 1) == 0)
        break;
    }
  }
  while (1)
  {
    v23 = v5;
    v24 = a2 + 32 * v5;
    if (v6 >= *(_DWORD *)v24)
    {
      *(_DWORD *)(a1 + 8) = v8 - *(_DWORD *)v24;
      v25 = *(uint64_t (**)(uint64_t))(v24 + 24);
      if (!v25)
        break;
      v26 = v25(a1);
      *(_DWORD *)(a1 + 8) = v8 - *(_DWORD *)v24;
      if (v26)
        break;
    }
    v5 = *(_DWORD *)(v24 + 16);
    if (v5 < 0)
      return 0;
  }
  return *(unsigned int *)(a2 + 32 * v23 + 20);
}

uint64_t replace_s(uint64_t a1, int a2, int a3, int a4, void *__src, _DWORD *a6)
{
  _DWORD *v12;
  _QWORD *v13;
  int v14;
  int v15;
  int v16;
  int v17;
  uint64_t result;

  v12 = *(_DWORD **)a1;
  if (!v12)
  {
    v13 = malloc_type_malloc(0xAuLL, 0xCFBD9132uLL);
    if (!v13)
    {
      *(_QWORD *)a1 = 0;
      return 0xFFFFFFFFLL;
    }
    *v13 = 0x100000001;
    v12 = v13 + 1;
    *(_QWORD *)a1 = v12;
  }
  v14 = a2 - a3 + a4;
  if (!v14)
    goto LABEL_12;
  v15 = *(v12 - 1);
  if (v15 + v14 > *(v12 - 2))
  {
    v12 = sub_214954((uint64_t)v12, v15 + v14);
    *(_QWORD *)a1 = v12;
    if (!v12)
      return 0xFFFFFFFFLL;
  }
  memmove((char *)v12 + a3 + v14, (char *)v12 + a3, v15 - a3);
  v12 = *(_DWORD **)a1;
  *(_DWORD *)(*(_QWORD *)a1 - 4) = v15 + v14;
  v16 = *(_DWORD *)(a1 + 8);
  *(_DWORD *)(a1 + 12) += v14;
  if (v16 >= a3)
  {
    v17 = v16 + v14;
  }
  else
  {
    v17 = a2;
    if (v16 <= a2)
      goto LABEL_12;
  }
  *(_DWORD *)(a1 + 8) = v17;
LABEL_12:
  if (a4)
    memmove((char *)v12 + a2, __src, a4);
  result = 0;
  if (a6)
    *a6 = v14;
  return result;
}

_DWORD *sub_214954(uint64_t a1, int a2)
{
  void *v4;
  _DWORD *v5;

  v4 = (void *)(a1 - 8);
  v5 = malloc_type_realloc((void *)(a1 - 8), a2 + 29, 0x5E4C5CB9uLL);
  if (v5)
  {
    *v5 = a2 + 20;
    return v5 + 2;
  }
  else
  {
    if (a1)
      free(v4);
    return 0;
  }
}

uint64_t slice_from_s(uint64_t a1, int a2, void *__src)
{
  int v4;
  int v6;
  int v7;

  v4 = *(_DWORD *)(a1 + 20);
  if ((v4 & 0x80000000) == 0
    && (v6 = *(_DWORD *)(a1 + 24), v4 <= v6)
    && (v7 = *(_DWORD *)(a1 + 12), v6 <= v7)
    && *(_QWORD *)a1
    && v7 <= *(_DWORD *)(*(_QWORD *)a1 - 4))
  {
    return replace_s(a1, v4, v6, a2, __src, 0);
  }
  else
  {
    return 0xFFFFFFFFLL;
  }
}

uint64_t slice_from_v(uint64_t a1, _DWORD *__src)
{
  return slice_from_s(a1, *(__src - 1), __src);
}

uint64_t slice_del(uint64_t a1)
{
  return slice_from_s(a1, 0, 0);
}

uint64_t insert_s(uint64_t a1, int a2, int a3, int a4, void *a5)
{
  uint64_t result;
  int v8;
  int v9;
  int v10;

  v10 = 0;
  if (replace_s(a1, a2, a3, a4, a5, &v10))
    return 0xFFFFFFFFLL;
  v8 = *(_DWORD *)(a1 + 20);
  if (v8 >= a2)
    *(_DWORD *)(a1 + 20) = v10 + v8;
  v9 = *(_DWORD *)(a1 + 24);
  result = 0;
  if (v9 >= a2)
    *(_DWORD *)(a1 + 24) = v10 + v9;
  return result;
}

uint64_t insert_v(uint64_t a1, int a2, int a3, _DWORD *__src)
{
  uint64_t result;
  int v7;
  int v8;
  int v9;

  v9 = 0;
  if (replace_s(a1, a2, a3, *(__src - 1), __src, &v9))
    return 0xFFFFFFFFLL;
  v7 = *(_DWORD *)(a1 + 20);
  if (v7 >= a2)
    *(_DWORD *)(a1 + 20) = v9 + v7;
  v8 = *(_DWORD *)(a1 + 24);
  result = 0;
  if (v8 >= a2)
    *(_DWORD *)(a1 + 24) = v9 + v8;
  return result;
}

_DWORD *slice_to(uint64_t *a1, _DWORD *__dst)
{
  _DWORD *v2;
  int v3;
  int v5;
  int v6;
  int v7;
  uint64_t v8;

  v2 = __dst;
  v3 = *((_DWORD *)a1 + 5);
  if ((v3 & 0x80000000) == 0)
  {
    v5 = *((_DWORD *)a1 + 6);
    v6 = v5 - v3;
    if (v5 >= v3)
    {
      v7 = *((_DWORD *)a1 + 3);
      if (v5 <= v7)
      {
        v8 = *a1;
        if (*a1)
        {
          if (v7 <= *(_DWORD *)(v8 - 4))
          {
            if (*(__dst - 2) < v6)
            {
              v2 = sub_214954((uint64_t)__dst, v6);
              if (!v2)
                return v2;
              v8 = *a1;
              v3 = *((_DWORD *)a1 + 5);
            }
            memmove(v2, (const void *)(v8 + v3), v6);
            *(v2 - 1) = v6;
            return v2;
          }
        }
      }
    }
  }
  if (__dst)
  {
    free(__dst - 2);
    return 0;
  }
  return v2;
}

_DWORD *assign_to(uint64_t a1, _DWORD *__dst)
{
  _DWORD *v2;
  int v4;

  v2 = __dst;
  v4 = *(_DWORD *)(a1 + 12);
  if (*(__dst - 2) >= v4 || (v2 = sub_214954((uint64_t)__dst, v4)) != 0)
  {
    memmove(v2, *(const void **)a1, v4);
    *(v2 - 1) = v4;
  }
  return v2;
}

uint64_t danish_UTF_8_stem(uint64_t a1)
{
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  _DWORD *v7;
  unsigned int v8;
  int v9;
  int v10;
  char v11;
  int among_b;
  int v13;
  int v14;
  unsigned int v15;
  uint64_t v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  unsigned int v22;
  int v23;
  int v24;
  int v25;
  int v26;
  uint64_t v27;
  char v28;
  int v29;
  int v30;
  int v31;
  int v32;
  int v33;
  int v34;
  int v35;
  int v36;
  int v37;
  _DWORD *v39;
  uint64_t v40;
  int v41;

  v2 = *(_DWORD *)(a1 + 8);
  **(_DWORD **)(a1 + 40) = *(_DWORD *)(a1 + 12);
  v3 = *(_DWORD *)(a1 + 8);
  v4 = skip_utf8(*(_QWORD *)a1, *(unsigned int *)(a1 + 8), 0, *(unsigned int *)(a1 + 12), 3);
  if (v4 < 0
    || (*(_DWORD *)(*(_QWORD *)(a1 + 40) + 4) = v4,
        *(_DWORD *)(a1 + 8) = v3,
        (out_grouping_U(a1, (uint64_t)&unk_31DC86, 97, 248, 1) & 0x80000000) != 0)
    || (v5 = in_grouping_U(a1, (uint64_t)&unk_31DC86, 97, 248, 1), v5 < 0))
  {
    v8 = 0;
  }
  else
  {
    v6 = *(_DWORD *)(a1 + 8) + v5;
    *(_DWORD *)(a1 + 8) = v6;
    v7 = *(_DWORD **)(a1 + 40);
    if (v6 <= v7[1])
      v6 = v7[1];
    *v7 = v6;
    v8 = 1;
  }
  *(_DWORD *)(a1 + 16) = v2;
  v9 = *(_DWORD *)(a1 + 12);
  *(_DWORD *)(a1 + 8) = v9;
  v10 = **(_DWORD **)(a1 + 40);
  if (v9 >= v10)
  {
    *(_DWORD *)(a1 + 16) = v10;
    *(_DWORD *)(a1 + 24) = v9;
    if (v9 <= v10
      || (v11 = *(_BYTE *)(v9 + *(_QWORD *)a1 - 1), (v11 & 0xE0) != 0x60)
      || ((0x1C4030u >> v11) & 1) == 0
      || (among_b = find_among_b(a1, (uint64_t)&unk_42CFF0, 32)) == 0)
    {
      *(_DWORD *)(a1 + 16) = v2;
      goto LABEL_17;
    }
    v13 = *(_DWORD *)(a1 + 8);
    *(_DWORD *)(a1 + 16) = v2;
    *(_DWORD *)(a1 + 20) = v13;
    if (among_b == 2)
    {
      if (in_grouping_b_U(a1, (uint64_t)&unk_31DC99, 97, 229, 0))
        goto LABEL_17;
    }
    else if (among_b != 1)
    {
      goto LABEL_17;
    }
    v40 = slice_del(a1);
    if ((v40 & 0x80000000) != 0)
      return v40;
  }
LABEL_17:
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a1 + 12);
  v14 = sub_215054(a1);
  if (v14 >= 0)
    v15 = v8;
  else
    v15 = v14;
  if (v14)
    v16 = v15;
  else
    v16 = v8;
  if (v14)
    v17 = v14 >> 31;
  else
    v17 = 4;
  if ((v17 | 4) == 4)
  {
    v18 = *(_DWORD *)(a1 + 12);
    *(_DWORD *)(a1 + 8) = v18;
    v19 = v18;
  }
  else
  {
    if (v14 < 0)
      return v16;
    v18 = *(_DWORD *)(a1 + 8);
    v19 = *(_DWORD *)(a1 + 12);
  }
  v20 = v18 - v19;
  *(_DWORD *)(a1 + 24) = v18;
  if (!eq_s_b(a1, 2, &unk_31DD2D)
    || (*(_DWORD *)(a1 + 20) = *(_DWORD *)(a1 + 8), !eq_s_b(a1, 2, &unk_31DD2F))
    || (v2 = slice_del(a1), (v2 & 0x80000000) == 0))
  {
    v24 = *(_DWORD *)(a1 + 12) + v20;
    *(_DWORD *)(a1 + 8) = v24;
    v25 = **(_DWORD **)(a1 + 40);
    if (v24 >= v25)
    {
      v26 = *(_DWORD *)(a1 + 16);
      *(_DWORD *)(a1 + 16) = v25;
      *(_DWORD *)(a1 + 8) = v24;
      *(_DWORD *)(a1 + 24) = v24;
      v27 = v24 - 1;
      if ((int)v27 > v25)
      {
        v28 = *(_BYTE *)(*(_QWORD *)a1 + v27);
        if ((v28 & 0xE0) == 0x60 && ((0x180080u >> v28) & 1) != 0)
        {
          v29 = find_among_b(a1, (uint64_t)&unk_42D470, 5);
          if (v29)
          {
            v30 = *(_DWORD *)(a1 + 8);
            *(_DWORD *)(a1 + 16) = v26;
            *(_DWORD *)(a1 + 20) = v30;
            if (v29 == 2)
            {
              v31 = slice_from_s(a1, 4, &unk_31DD31);
              if ((v31 & 0x80000000) == 0)
                goto LABEL_73;
            }
            else
            {
              if (v29 != 1)
                goto LABEL_73;
              v31 = slice_del(a1);
              if ((v31 & 0x80000000) == 0)
              {
                v33 = *(_DWORD *)(a1 + 8);
                v32 = *(_DWORD *)(a1 + 12);
                v34 = sub_215054(a1);
                v35 = v34 >> 31;
                if (!v34)
                  v35 = 4;
                if ((v35 | 4) == 4)
                {
                  *(_DWORD *)(a1 + 8) = v33 - v32 + *(_DWORD *)(a1 + 12);
                }
                else
                {
                  if (v34 >= 0)
                    v41 = v2;
                  else
                    v41 = v34;
                  if (v34)
                    v2 = v41;
                  if (v34 < 0)
                    goto LABEL_33;
                }
LABEL_73:
                v2 = 1;
                goto LABEL_33;
              }
            }
            v2 = v31;
            goto LABEL_33;
          }
        }
      }
      *(_DWORD *)(a1 + 16) = v26;
    }
LABEL_58:
    v23 = *(_DWORD *)(a1 + 12) + v20;
    *(_DWORD *)(a1 + 8) = v23;
    goto LABEL_59;
  }
LABEL_33:
  v21 = v2 >> 31;
  if (!v2)
    v21 = 5;
  if (!v21 || v21 == 5)
    goto LABEL_58;
  if (v2 >= 0)
    v22 = v16;
  else
    v22 = v2;
  if (v2)
    v16 = v22;
  else
    v16 = v16;
  if ((v2 & 0x80000000) == 0)
  {
    v23 = *(_DWORD *)(a1 + 8);
LABEL_59:
    v36 = **(_DWORD **)(a1 + 40);
    if (v23 < v36)
    {
LABEL_62:
      *(_DWORD *)(a1 + 8) = *(_DWORD *)(a1 + 16);
      return 1;
    }
    v37 = *(_DWORD *)(a1 + 16);
    *(_DWORD *)(a1 + 16) = v36;
    *(_DWORD *)(a1 + 24) = v23;
    if (out_grouping_b_U(a1, (uint64_t)&unk_31DC86, 97, 248, 0))
    {
      *(_DWORD *)(a1 + 16) = v37;
      goto LABEL_62;
    }
    *(_DWORD *)(a1 + 20) = *(_DWORD *)(a1 + 8);
    **(_QWORD **)(a1 + 32) = slice_to((uint64_t *)a1, **(_DWORD ***)(a1 + 32));
    v39 = **(_DWORD ***)(a1 + 32);
    if (!v39)
      return 0xFFFFFFFFLL;
    *(_DWORD *)(a1 + 16) = v37;
    if (!eq_v_b(a1, v39))
      goto LABEL_62;
    v40 = slice_del(a1);
    if ((v40 & 0x80000000) == 0)
      goto LABEL_62;
    return v40;
  }
  return v16;
}

uint64_t sub_215054(uint64_t a1)
{
  int v1;
  int v2;
  uint64_t result;
  uint64_t v5;
  int v6;
  uint64_t v7;
  int v8;
  int v9;
  uint64_t v10;
  int v11;
  int v12;

  v1 = *(_DWORD *)(a1 + 8);
  v2 = **(_DWORD **)(a1 + 40);
  if (v1 < v2)
    return 0;
  v6 = *(_DWORD *)(a1 + 12);
  v5 = *(unsigned int *)(a1 + 16);
  *(_DWORD *)(a1 + 16) = v2;
  *(_DWORD *)(a1 + 24) = v1;
  v7 = v1 - 1;
  if ((int)v7 <= v2 || (*(unsigned __int8 *)(*(_QWORD *)a1 + v7) | 0x10) != 0x74)
  {
    result = 0;
    goto LABEL_11;
  }
  result = find_among_b(a1, (uint64_t)&unk_42D3F0, 4);
  if (!(_DWORD)result)
  {
LABEL_11:
    *(_DWORD *)(a1 + 16) = v5;
    return result;
  }
  v8 = *(_DWORD *)(a1 + 8);
  v9 = *(_DWORD *)(a1 + 12);
  *(_DWORD *)(a1 + 16) = v5;
  *(_DWORD *)(a1 + 20) = v8;
  v10 = (v9 + v1 - v6);
  *(_DWORD *)(a1 + 8) = v10;
  v11 = skip_utf8(*(_QWORD *)a1, v10, v5, 0, -1);
  if (v11 < 0)
    return 0;
  *(_DWORD *)(a1 + 8) = v11;
  *(_DWORD *)(a1 + 20) = v11;
  v12 = slice_del(a1);
  if (v12 >= 0)
    return 1;
  else
    return v12 & (v12 >> 31);
}

_QWORD *danish_UTF_8_create_env()
{
  return SN_create_env(1, 2, 0);
}

void danish_UTF_8_close_env(uint64_t a1)
{
  SN_close_env(a1, 1);
}

uint64_t dutch_UTF_8_stem(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t i;
  uint64_t v5;
  uint64_t v6;
  char v7;
  int v8;
  int among;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  _DWORD *v17;
  int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  uint64_t v23;
  char v24;
  int among_b;
  int v26;
  uint64_t v27;
  uint64_t v28;
  unsigned int v29;
  int v30;
  int v31;
  int v32;
  unsigned int v33;
  int v34;
  int v35;
  int v36;
  int v37;
  int v38;
  int v39;
  int v40;
  int v41;
  int v42;
  uint64_t v43;
  char v44;
  int v45;
  int v46;
  int v47;
  int v48;
  int v49;
  int v50;
  int v51;
  _BOOL4 v52;
  int v53;
  int v54;
  unsigned int v55;
  unsigned int v56;
  int v57;
  int v58;
  int v59;
  unsigned int v60;
  int v61;
  int v62;
  int v63;
  uint64_t v64;
  char v65;
  int v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  int v70;
  int v71;
  uint64_t v72;
  char *v73;
  uint64_t v75;
  uint64_t v76;
  int v77;

  v3 = *(unsigned int *)(a1 + 8);
  for (i = v3; ; i = *(unsigned int *)(a1 + 8))
  {
    *(_DWORD *)(a1 + 20) = i;
    v5 = (int)i + 1;
    v6 = *(unsigned int *)(a1 + 12);
    if ((int)v5 >= (int)v6)
      break;
    v7 = *(_BYTE *)(*(_QWORD *)a1 + v5);
    if ((v7 & 0xE0) != 0xA0 || ((0x1448AA12u >> v7) & 1) == 0)
      break;
    among = find_among(a1, (uint64_t)&unk_42D510, 11);
    if (!among)
      goto LABEL_19;
    i = *(unsigned int *)(a1 + 8);
    *(_DWORD *)(a1 + 24) = i;
    switch(among)
    {
      case 1:
        v10 = a1;
        v11 = &unk_31DD51;
        break;
      case 2:
        v10 = a1;
        v11 = &unk_31DD52;
        break;
      case 3:
        v10 = a1;
        v11 = &unk_31DD53;
        break;
      case 4:
        v10 = a1;
        v11 = &unk_31DD54;
        break;
      case 5:
        v10 = a1;
        v11 = &unk_31DD55;
        break;
      case 6:
        v6 = *(unsigned int *)(a1 + 12);
        goto LABEL_6;
      default:
        continue;
    }
    v12 = slice_from_s(v10, 1, v11);
    if ((v12 & 0x80000000) != 0)
      return v12;
LABEL_8:
    ;
  }
  *(_DWORD *)(a1 + 24) = i;
LABEL_6:
  v8 = skip_utf8(*(_QWORD *)a1, i, 0, v6, 1);
  if ((v8 & 0x80000000) == 0)
  {
    *(_DWORD *)(a1 + 8) = v8;
    goto LABEL_8;
  }
LABEL_19:
  *(_DWORD *)(a1 + 8) = v3;
  *(_DWORD *)(a1 + 20) = v3;
  if (eq_s(a1, 1, &unk_31DD56))
  {
    *(_DWORD *)(a1 + 24) = *(_DWORD *)(a1 + 8);
    v12 = slice_from_s(a1, 1, &unk_31DD57);
    if ((v12 & 0x80000000) == 0)
    {
      v13 = *(unsigned int *)(a1 + 8);
      goto LABEL_23;
    }
    return v12;
  }
  *(_DWORD *)(a1 + 8) = v3;
  v13 = v3;
LABEL_23:
  while (2)
  {
    if (!in_grouping_U(a1, (uint64_t)&unk_31DD58, 97, 232, 0))
    {
      LODWORD(v1) = *(_DWORD *)(a1 + 8);
      *(_DWORD *)(a1 + 20) = v1;
      if (eq_s(a1, 1, &unk_31DD69))
      {
        *(_DWORD *)(a1 + 24) = *(_DWORD *)(a1 + 8);
        if (!in_grouping_U(a1, (uint64_t)&unk_31DD58, 97, 232, 0))
        {
          v14 = a1;
          v15 = &unk_31DD6A;
          goto LABEL_29;
        }
      }
      *(_DWORD *)(a1 + 8) = v1;
      if (eq_s(a1, 1, &unk_31DD6B))
      {
        *(_DWORD *)(a1 + 24) = *(_DWORD *)(a1 + 8);
        v14 = a1;
        v15 = &unk_31DD6C;
LABEL_29:
        v12 = slice_from_s(v14, 1, v15);
        if ((v12 & 0x80000000) != 0)
          return v12;
LABEL_30:
        *(_DWORD *)(a1 + 8) = v13;
        continue;
      }
    }
    break;
  }
  *(_DWORD *)(a1 + 8) = v13;
  v16 = skip_utf8(*(_QWORD *)a1, v13, 0, *(unsigned int *)(a1 + 12), 1);
  if ((v16 & 0x80000000) == 0)
  {
    v13 = v16;
    goto LABEL_30;
  }
  *(_DWORD *)(a1 + 8) = v3;
  v17 = *(_DWORD **)(a1 + 40);
  *v17 = *(_DWORD *)(a1 + 12);
  v17[1] = *(_DWORD *)(a1 + 12);
  v18 = out_grouping_U(a1, (uint64_t)&unk_31DD58, 97, 232, 1);
  if ((v18 & 0x80000000) == 0)
  {
    *(_DWORD *)(a1 + 8) += v18;
    v19 = in_grouping_U(a1, (uint64_t)&unk_31DD58, 97, 232, 1);
    if ((v19 & 0x80000000) == 0)
    {
      v20 = *(_DWORD *)(a1 + 8) + v19;
      *(_DWORD *)(a1 + 8) = v20;
      if (v20 <= 3)
        v20 = 3;
      **(_DWORD **)(a1 + 40) = v20;
      v21 = out_grouping_U(a1, (uint64_t)&unk_31DD58, 97, 232, 1);
      if ((v21 & 0x80000000) == 0)
      {
        *(_DWORD *)(a1 + 8) += v21;
        v22 = in_grouping_U(a1, (uint64_t)&unk_31DD58, 97, 232, 1);
        if ((v22 & 0x80000000) == 0)
          *(_DWORD *)(*(_QWORD *)(a1 + 40) + 4) = *(_DWORD *)(a1 + 8) + v22;
      }
    }
  }
  *(_DWORD *)(a1 + 16) = v3;
  v23 = *(int *)(a1 + 12);
  *(_DWORD *)(a1 + 8) = v23;
  *(_DWORD *)(a1 + 24) = v23;
  if ((int)v23 <= (int)v3)
    goto LABEL_61;
  v24 = *(_BYTE *)(v23 + *(_QWORD *)a1 - 1);
  if ((v24 & 0xE0) != 0x60)
    goto LABEL_61;
  if (((0x84020u >> v24) & 1) == 0)
    goto LABEL_61;
  among_b = find_among_b(a1, (uint64_t)&unk_42D670, 5);
  if (!among_b)
    goto LABEL_61;
  v26 = *(_DWORD *)(a1 + 8);
  *(_DWORD *)(a1 + 20) = v26;
  if (among_b == 3)
  {
    if (**(_DWORD **)(a1 + 40) <= v26)
    {
      if (!out_grouping_b_U(a1, (uint64_t)&unk_31DD85, 97, 232, 0))
      {
        v27 = slice_del(a1);
        if ((v27 & 0x80000000) != 0)
          goto LABEL_165;
      }
      goto LABEL_60;
    }
    goto LABEL_52;
  }
  if (among_b == 2)
  {
    v28 = sub_215B38(a1);
    v1 = v28;
    v29 = v28 >> 31;
    if (!(_DWORD)v28)
      v29 = 2;
    if ((v29 | 2) == 2)
      goto LABEL_61;
    if ((v28 & 0x80000000) == 0)
    {
      v30 = *(_DWORD *)(a1 + 8);
      v31 = *(_DWORD *)(a1 + 12);
      goto LABEL_62;
    }
    goto LABEL_144;
  }
  if (among_b != 1)
    goto LABEL_61;
  if (**(_DWORD **)(a1 + 40) > v26)
  {
LABEL_52:
    LODWORD(v1) = 0;
    goto LABEL_61;
  }
  v27 = slice_from_s(a1, 4, &unk_31DD81);
  if ((v27 & 0x80000000) != 0)
    goto LABEL_165;
LABEL_60:
  LODWORD(v1) = 1;
LABEL_61:
  v30 = *(_DWORD *)(a1 + 12);
  *(_DWORD *)(a1 + 8) = v30;
  v31 = v30;
LABEL_62:
  v32 = sub_215BF8(a1);
  if (v32 >= 0)
    v33 = v1;
  else
    v33 = v32;
  if (v32)
    v1 = v33;
  else
    v1 = v1;
  if (v32)
    v34 = v32 >> 31;
  else
    v34 = 4;
  if ((v34 | 4) != 4)
  {
    if ((v32 & 0x80000000) == 0)
    {
      v37 = *(_DWORD *)(a1 + 8);
      v36 = *(_DWORD *)(a1 + 12);
      goto LABEL_75;
    }
LABEL_129:
    if ((_DWORD)v1)
      goto LABEL_144;
    goto LABEL_145;
  }
  v35 = v30 - v31;
  v36 = *(_DWORD *)(a1 + 12);
  v37 = v36 + v35;
  *(_DWORD *)(a1 + 8) = v36 + v35;
LABEL_75:
  *(_DWORD *)(a1 + 24) = v37;
  if (eq_s_b(a1, 4, &unk_31DD96))
  {
    v38 = *(_DWORD *)(a1 + 8);
    *(_DWORD *)(a1 + 20) = v38;
    if (*(_DWORD *)(*(_QWORD *)(a1 + 40) + 4) <= v38)
    {
      v39 = *(_DWORD *)(a1 + 12);
      if (!eq_s_b(a1, 1, &unk_31DD9A))
      {
        *(_DWORD *)(a1 + 8) = v38 - v39 + *(_DWORD *)(a1 + 12);
        v27 = slice_del(a1);
        if ((v27 & 0x80000000) != 0)
        {
LABEL_165:
          v1 = v27;
          if ((v27 & 0x80000000) != 0)
            return v1;
          goto LABEL_145;
        }
        *(_DWORD *)(a1 + 24) = *(_DWORD *)(a1 + 8);
        if (!eq_s_b(a1, 2, &unk_31DD9B))
          goto LABEL_78;
        *(_DWORD *)(a1 + 20) = *(_DWORD *)(a1 + 8);
        v54 = sub_215B38(a1);
        v55 = v54 >= 0 ? v1 : v54;
        v1 = v54 ? v55 : v1;
        v56 = v54 ? v54 >> 31 : 5;
        if (v56 == 5 || !v56)
          goto LABEL_78;
        if ((v54 & 0x80000000) == 0)
        {
          v42 = *(_DWORD *)(a1 + 8);
          v41 = *(_DWORD *)(a1 + 12);
          goto LABEL_79;
        }
        goto LABEL_129;
      }
    }
  }
LABEL_78:
  v40 = v37 - v36;
  v41 = *(_DWORD *)(a1 + 12);
  v42 = v41 + v40;
  *(_DWORD *)(a1 + 8) = v41 + v40;
LABEL_79:
  *(_DWORD *)(a1 + 24) = v42;
  v43 = v42 - 1;
  if ((int)v43 > *(_DWORD *)(a1 + 16)
    && (v44 = *(_BYTE *)(*(_QWORD *)a1 + v43), (v44 & 0xE0) == 0x60)
    && ((0x40890u >> v44) & 1) != 0
    && (v45 = find_among_b(a1, (uint64_t)&unk_42D710, 6)) != 0)
  {
    v46 = *(_DWORD *)(a1 + 8);
    *(_DWORD *)(a1 + 20) = v46;
    switch(v45)
    {
      case 1:
        if (*(_DWORD *)(*(_QWORD *)(a1 + 40) + 4) > v46)
          goto LABEL_136;
        v27 = slice_del(a1);
        if ((v27 & 0x80000000) != 0)
          goto LABEL_165;
        v48 = *(_DWORD *)(a1 + 8);
        v47 = *(_DWORD *)(a1 + 12);
        *(_DWORD *)(a1 + 24) = v48;
        if (eq_s_b(a1, 2, &unk_31DD9D))
        {
          v49 = *(_DWORD *)(a1 + 8);
          *(_DWORD *)(a1 + 20) = v49;
          if (*(_DWORD *)(*(_QWORD *)(a1 + 40) + 4) <= v49)
          {
            v50 = *(_DWORD *)(a1 + 12);
            if (!eq_s_b(a1, 1, &unk_31DD9F))
            {
              v58 = v49 - v50;
LABEL_114:
              *(_DWORD *)(a1 + 8) = v58 + *(_DWORD *)(a1 + 12);
LABEL_135:
              v27 = slice_del(a1);
              if ((v27 & 0x80000000) != 0)
                goto LABEL_165;
              goto LABEL_136;
            }
          }
        }
        *(_DWORD *)(a1 + 8) = v48 - v47 + *(_DWORD *)(a1 + 12);
        v51 = sub_215CC8(a1);
        if (v51 > 0)
          goto LABEL_136;
        v52 = v51 != 0;
        v53 = v51 ? 1 : 7;
        v1 = v51 ? v51 : v1;
LABEL_127:
        if (v53 == 7)
          goto LABEL_136;
        if (v52)
          goto LABEL_129;
        v63 = *(_DWORD *)(a1 + 8);
        v62 = *(_DWORD *)(a1 + 12);
        break;
      case 2:
        if (*(_DWORD *)(*(_QWORD *)(a1 + 40) + 4) > v46)
          goto LABEL_136;
        v57 = *(_DWORD *)(a1 + 12);
        if (eq_s_b(a1, 1, &unk_31DDA0))
          goto LABEL_136;
        v58 = v46 - v57;
        goto LABEL_114;
      case 3:
        if (*(_DWORD *)(*(_QWORD *)(a1 + 40) + 4) > v46)
          goto LABEL_136;
        v27 = slice_del(a1);
        if ((v27 & 0x80000000) != 0)
          goto LABEL_165;
        v59 = sub_215BF8(a1);
        if (v59 >= 0)
          v60 = v1;
        else
          v60 = v59;
        v52 = v59 >> 31;
        if (v59)
          v1 = v60;
        else
          v1 = v1;
        if (v59)
          v53 = v59 >> 31;
        else
          v53 = 7;
        if (v53)
          goto LABEL_127;
        goto LABEL_136;
      case 4:
        if (*(_DWORD *)(*(_QWORD *)(a1 + 40) + 4) > v46)
          goto LABEL_136;
        goto LABEL_135;
      case 5:
        if (*(_DWORD *)(*(_QWORD *)(a1 + 40) + 4) > v46 || !**(_BYTE **)(a1 + 48))
          goto LABEL_136;
        goto LABEL_135;
      default:
        goto LABEL_136;
    }
  }
  else
  {
LABEL_136:
    v61 = v42 - v41;
    v62 = *(_DWORD *)(a1 + 12);
    v63 = v62 + v61;
    *(_DWORD *)(a1 + 8) = v62 + v61;
  }
  if (!out_grouping_b_U(a1, (uint64_t)&unk_31DDA1, 73, 232, 0))
  {
    v64 = *(int *)(a1 + 8);
    if ((int)v64 - 1 > *(_DWORD *)(a1 + 16))
    {
      v65 = *(_BYTE *)(*(_QWORD *)a1 + v64 - 1);
      if ((v65 & 0xE0) == 0x60 && ((0x208022u >> v65) & 1) != 0)
      {
        v66 = *(_DWORD *)(a1 + 12);
        if (find_among_b(a1, (uint64_t)&unk_42D7D0, 4))
        {
          if (!out_grouping_b_U(a1, (uint64_t)&unk_31DD58, 97, 232, 0))
          {
            v75 = *(unsigned int *)(a1 + 16);
            v76 = (*(_DWORD *)(a1 + 12) + v64 - v66);
            *(_DWORD *)(a1 + 8) = v76;
            *(_DWORD *)(a1 + 24) = v76;
            v77 = skip_utf8(*(_QWORD *)a1, v76, v75, 0, -1);
            if ((v77 & 0x80000000) == 0)
            {
              *(_DWORD *)(a1 + 8) = v77;
              *(_DWORD *)(a1 + 20) = v77;
              v27 = slice_del(a1);
              if ((v27 & 0x80000000) != 0)
                goto LABEL_165;
            }
          }
        }
      }
    }
  }
  *(_DWORD *)(a1 + 8) = v63 - v62 + *(_DWORD *)(a1 + 12);
  v1 = 1;
LABEL_144:
  if ((v1 & 0x80000000) == 0)
  {
LABEL_145:
    v67 = *(unsigned int *)(a1 + 16);
    *(_DWORD *)(a1 + 8) = v67;
    v68 = v67;
    while (2)
    {
      *(_DWORD *)(a1 + 20) = v68;
      v69 = *(unsigned int *)(a1 + 12);
      if ((int)v68 < (int)v69 && (*(unsigned __int8 *)(*(_QWORD *)a1 + (int)v68) | 0x10) == 0x59)
      {
        v70 = find_among(a1, (uint64_t)&unk_42D8B0, 3);
        if (!v70)
          goto LABEL_162;
        v68 = *(unsigned int *)(a1 + 8);
        *(_DWORD *)(a1 + 24) = v68;
        switch(v70)
        {
          case 1:
            v72 = a1;
            v73 = "yiIY";
            break;
          case 2:
            v72 = a1;
            v73 = "iIY";
            break;
          case 3:
            v69 = *(unsigned int *)(a1 + 12);
            goto LABEL_154;
          default:
            goto LABEL_156;
        }
        v12 = slice_from_s(v72, 1, v73);
        if ((v12 & 0x80000000) != 0)
          return v12;
        goto LABEL_156;
      }
      *(_DWORD *)(a1 + 24) = v68;
LABEL_154:
      v71 = skip_utf8(*(_QWORD *)a1, v68, 0, v69, 1);
      if (v71 < 0)
      {
LABEL_162:
        *(_DWORD *)(a1 + 8) = v67;
        return 1;
      }
      *(_DWORD *)(a1 + 8) = v71;
LABEL_156:
      v68 = *(unsigned int *)(a1 + 8);
      continue;
    }
  }
  return v1;
}

_QWORD *dutch_UTF_8_create_env()
{
  return SN_create_env(0, 2, 1);
}

void dutch_UTF_8_close_env(uint64_t a1)
{
  SN_close_env(a1, 0);
}

uint64_t sub_215B38(uint64_t a1)
{
  int v1;
  uint64_t result;
  int v4;
  int v5;
  int v6;
  int v7;

  v1 = *(_DWORD *)(a1 + 8);
  if (**(_DWORD **)(a1 + 40) > v1)
    return 0;
  v4 = *(_DWORD *)(a1 + 12);
  v5 = out_grouping_b_U(a1, (uint64_t)&unk_31DD58, 97, 232, 0);
  result = 0;
  if (!v5)
  {
    v6 = v1 - v4;
    *(_DWORD *)(a1 + 8) = *(_DWORD *)(a1 + 12) + v6;
    if (eq_s_b(a1, 3, "gemeendiginglijkbaarbarddkkttaaeeoouuyiIY"))
      return 0;
    *(_DWORD *)(a1 + 8) = *(_DWORD *)(a1 + 12) + v6;
    result = slice_del(a1);
    if ((result & 0x80000000) == 0)
    {
      v7 = sub_215CC8(a1);
      if (v7 >= 1)
        return 1;
      else
        return v7 & (v7 >> 31);
    }
  }
  return result;
}

uint64_t sub_215BF8(uint64_t a1)
{
  uint64_t result;
  int v3;
  int v4;
  int v5;
  int v6;

  **(_BYTE **)(a1 + 48) = 0;
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a1 + 8);
  result = eq_s_b(a1, 1, "eendiginglijkbaarbarddkkttaaeeoouuyiIY");
  if ((_DWORD)result)
  {
    v3 = *(_DWORD *)(a1 + 8);
    *(_DWORD *)(a1 + 20) = v3;
    if (**(_DWORD **)(a1 + 40) <= v3)
    {
      v4 = *(_DWORD *)(a1 + 12);
      v5 = out_grouping_b_U(a1, (uint64_t)&unk_31DD58, 97, 232, 0);
      result = 0;
      if (!v5)
      {
        *(_DWORD *)(a1 + 8) = v3 - v4 + *(_DWORD *)(a1 + 12);
        result = slice_del(a1);
        if ((result & 0x80000000) == 0)
        {
          **(_BYTE **)(a1 + 48) = 1;
          v6 = sub_215CC8(a1);
          if (v6 >= 1)
            return 1;
          else
            return v6 & (v6 >> 31);
        }
      }
    }
    else
    {
      return 0;
    }
  }
  return result;
}

uint64_t sub_215CC8(uint64_t a1)
{
  uint64_t v1;
  char v3;
  uint64_t result;
  int v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  int v9;

  v1 = *(int *)(a1 + 8);
  if ((int)v1 - 1 <= *(_DWORD *)(a1 + 16))
    return 0;
  v3 = *(_BYTE *)(*(_QWORD *)a1 + v1 - 1);
  if ((v3 & 0xE0) != 0x60 || ((0x100810u >> v3) & 1) == 0)
    return 0;
  v5 = *(_DWORD *)(a1 + 12);
  result = find_among_b(a1, (uint64_t)&unk_42D850, 3);
  if ((_DWORD)result)
  {
    v6 = *(unsigned int *)(a1 + 16);
    v7 = (*(_DWORD *)(a1 + 12) + v1 - v5);
    *(_DWORD *)(a1 + 8) = v7;
    *(_DWORD *)(a1 + 24) = v7;
    v8 = skip_utf8(*(_QWORD *)a1, v7, v6, 0, -1);
    if (v8 < 0)
      return 0;
    *(_DWORD *)(a1 + 8) = v8;
    *(_DWORD *)(a1 + 20) = v8;
    v9 = slice_del(a1);
    if (v9 >= 0)
      return 1;
    else
      return v9 & (v9 >> 31);
  }
  return result;
}

uint64_t english_UTF_8_stem(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  int among;
  int v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _DWORD *v12;
  uint64_t v13;
  char v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  int among_b;
  void *v23;
  int v24;
  int v25;
  uint64_t v26;
  void *v27;
  int v28;
  int v29;
  unsigned int v30;
  int v31;
  uint64_t v32;
  int v33;
  int v34;
  uint64_t v35;
  int v36;
  int v37;
  int v38;
  uint64_t v39;
  int v40;
  int v41;
  int v42;
  int v43;
  unsigned int v44;
  int v45;
  int v46;
  int v47;
  int v48;
  int v49;
  unsigned int v50;
  int v51;
  int v52;
  int v53;
  int v54;
  int v55;
  unsigned int v56;
  int v57;
  int v58;
  int v59;
  int v60;
  int v61;
  unsigned int v62;
  int v63;
  int v64;
  unsigned int v65;
  int v66;
  int v67;
  int v68;
  int v69;
  unsigned int v70;
  uint64_t v71;
  int v72;

  v2 = *(unsigned int *)(a1 + 12);
  v3 = *(int *)(a1 + 8);
  *(_DWORD *)(a1 + 20) = v3;
  if ((int)v3 + 2 < (int)v2)
  {
    v4 = *(_BYTE *)(*(_QWORD *)a1 + v3 + 2);
    if ((v4 & 0xE0) == 0x60 && ((0x28C5212u >> v4) & 1) != 0)
    {
      among = find_among(a1, (uint64_t)&unk_42D910, 18);
      v2 = *(unsigned int *)(a1 + 12);
      if (among)
      {
        v6 = *(_DWORD *)(a1 + 8);
        *(_DWORD *)(a1 + 24) = v6;
        if (v6 >= (int)v2)
        {
          switch(among)
          {
            case 1:
              v23 = &unk_31DE18;
              goto LABEL_158;
            case 2:
              v23 = &unk_31DE1B;
              goto LABEL_158;
            case 3:
              v23 = &unk_31DE1E;
              goto LABEL_158;
            case 4:
              v23 = &unk_31DE21;
              goto LABEL_158;
            case 5:
              v23 = &unk_31DE24;
              goto LABEL_158;
            case 6:
              v23 = &unk_31DE27;
LABEL_158:
              v71 = a1;
              v72 = 3;
              break;
            case 7:
              v23 = &unk_31DE2A;
              goto LABEL_165;
            case 8:
              v23 = &unk_31DE2F;
              goto LABEL_163;
            case 9:
              v23 = &unk_31DE33;
              goto LABEL_165;
            case 10:
              v23 = &unk_31DE38;
LABEL_163:
              v71 = a1;
              v72 = 4;
              break;
            case 11:
              v23 = &unk_31DE3C;
LABEL_165:
              v71 = a1;
              v72 = 5;
              break;
            default:
              return 1;
          }
          v10 = slice_from_s(v71, v72, v23);
          if ((v10 & 0x80000000) == 0)
            return 1;
          return v10;
        }
      }
    }
  }
  *(_DWORD *)(a1 + 8) = v3;
  v7 = skip_utf8(*(_QWORD *)a1, v3, 0, v2, 3);
  if (v7 >= 0)
    v8 = v7;
  else
    v8 = v3;
  *(_DWORD *)(a1 + 8) = v8;
  if (v7 < 0)
    return 1;
  *(_DWORD *)(a1 + 8) = v3;
  **(_BYTE **)(a1 + 48) = 0;
  v9 = *(unsigned int *)(a1 + 8);
  *(_DWORD *)(a1 + 20) = v9;
  if (eq_s(a1, 1, &unk_31DE95))
  {
    *(_DWORD *)(a1 + 24) = *(_DWORD *)(a1 + 8);
    v10 = slice_del(a1);
    if ((v10 & 0x80000000) != 0)
      return v10;
  }
  *(_DWORD *)(a1 + 8) = v9;
  *(_DWORD *)(a1 + 20) = v9;
  if (eq_s(a1, 1, &unk_31DE96))
  {
    *(_DWORD *)(a1 + 24) = *(_DWORD *)(a1 + 8);
    v10 = slice_from_s(a1, 1, &unk_31DE97);
    if ((v10 & 0x80000000) != 0)
      return v10;
    **(_BYTE **)(a1 + 48) = 1;
  }
  for (*(_DWORD *)(a1 + 8) = v9; ; *(_DWORD *)(a1 + 8) = v11)
  {
    while (!in_grouping_U(a1, (uint64_t)&unk_31DE98, 97, 121, 0))
    {
      *(_DWORD *)(a1 + 20) = *(_DWORD *)(a1 + 8);
      if (!eq_s(a1, 1, &unk_31DE9C))
        break;
      *(_DWORD *)(a1 + 24) = *(_DWORD *)(a1 + 8);
      *(_DWORD *)(a1 + 8) = v9;
      v10 = slice_from_s(a1, 1, &unk_31DE9D);
      if ((v10 & 0x80000000) != 0)
        return v10;
      **(_BYTE **)(a1 + 48) = 1;
      v9 = *(unsigned int *)(a1 + 8);
    }
    *(_DWORD *)(a1 + 8) = v9;
    v11 = skip_utf8(*(_QWORD *)a1, v9, 0, *(unsigned int *)(a1 + 12), 1);
    if ((v11 & 0x80000000) != 0)
      break;
    v9 = v11;
  }
  *(_DWORD *)(a1 + 8) = v3;
  v12 = *(_DWORD **)(a1 + 40);
  *v12 = *(_DWORD *)(a1 + 12);
  v12[1] = *(_DWORD *)(a1 + 12);
  v13 = *(int *)(a1 + 8);
  if ((int)v13 + 4 < *(_DWORD *)(a1 + 12)
    && (v14 = *(_BYTE *)(*(_QWORD *)a1 + v13 + 4), (v14 & 0xE0) == 0x60)
    && ((0x244000u >> v14) & 1) != 0
    && find_among(a1, (uint64_t)&unk_42DB50, 3))
  {
    v15 = *(_DWORD *)(a1 + 8);
  }
  else
  {
    *(_DWORD *)(a1 + 8) = v13;
    v16 = out_grouping_U(a1, (uint64_t)&unk_31DE98, 97, 121, 1);
    if (v16 < 0)
      goto LABEL_33;
    *(_DWORD *)(a1 + 8) += v16;
    v17 = in_grouping_U(a1, (uint64_t)&unk_31DE98, 97, 121, 1);
    if (v17 < 0)
      goto LABEL_33;
    v15 = *(_DWORD *)(a1 + 8) + v17;
    *(_DWORD *)(a1 + 8) = v15;
  }
  **(_DWORD **)(a1 + 40) = v15;
  v18 = out_grouping_U(a1, (uint64_t)&unk_31DE98, 97, 121, 1);
  if ((v18 & 0x80000000) == 0)
  {
    *(_DWORD *)(a1 + 8) += v18;
    v19 = in_grouping_U(a1, (uint64_t)&unk_31DE98, 97, 121, 1);
    if ((v19 & 0x80000000) == 0)
      *(_DWORD *)(*(_QWORD *)(a1 + 40) + 4) = *(_DWORD *)(a1 + 8) + v19;
  }
LABEL_33:
  *(_DWORD *)(a1 + 16) = v3;
  v20 = *(_DWORD *)(a1 + 12);
  *(_DWORD *)(a1 + 8) = v20;
  *(_DWORD *)(a1 + 24) = v20;
  if (v20 > (int)v3)
  {
    v21 = *(unsigned __int8 *)(v20 + *(_QWORD *)a1 - 1);
    if (v21 == 115 || v21 == 39)
    {
      among_b = find_among_b(a1, (uint64_t)&unk_42DBB0, 3);
      if (among_b)
      {
        v20 = *(_DWORD *)(a1 + 8);
        *(_DWORD *)(a1 + 20) = v20;
        if (among_b == 1)
        {
          v10 = slice_del(a1);
          if ((v10 & 0x80000000) != 0)
            return v10;
          v20 = *(_DWORD *)(a1 + 8);
        }
      }
      else
      {
        v20 = *(_DWORD *)(a1 + 12);
        *(_DWORD *)(a1 + 8) = v20;
      }
    }
  }
  *(_DWORD *)(a1 + 24) = v20;
  if (v20 > *(_DWORD *)(a1 + 16))
  {
    v24 = *(unsigned __int8 *)(*(_QWORD *)a1 + v20 - 1);
    if (v24 == 115 || v24 == 100)
    {
      v25 = find_among_b(a1, (uint64_t)&unk_42DC10, 6);
      if (v25)
      {
        v26 = *(unsigned int *)(a1 + 8);
        *(_DWORD *)(a1 + 20) = v26;
        switch(v25)
        {
          case 3:
            v28 = skip_utf8(*(_QWORD *)a1, v26, *(unsigned int *)(a1 + 16), 0, -1);
            if (v28 < 0)
              goto LABEL_60;
            *(_DWORD *)(a1 + 8) = v28;
            v29 = out_grouping_b_U(a1, (uint64_t)&unk_31DE98, 97, 121, 1);
            if (v29 < 0)
              goto LABEL_60;
            *(_DWORD *)(a1 + 8) -= v29;
            v10 = slice_del(a1);
            if ((v10 & 0x80000000) == 0)
              goto LABEL_60;
            return v10;
          case 2:
            v30 = *(_DWORD *)(a1 + 12);
            v31 = skip_utf8(*(_QWORD *)a1, v26, *(unsigned int *)(a1 + 16), v30, -2);
            if ((v31 & 0x80000000) == 0)
            {
              *(_DWORD *)(a1 + 8) = v31;
              v27 = &unk_31DEB0;
              v32 = a1;
              v33 = 1;
              goto LABEL_59;
            }
            *(_DWORD *)(a1 + 8) = v26 - v30 + *(_DWORD *)(a1 + 12);
            v27 = &unk_31DEB1;
            break;
          case 1:
            v27 = &unk_31DEAE;
            break;
          default:
            goto LABEL_60;
        }
        v32 = a1;
        v33 = 2;
LABEL_59:
        v10 = slice_from_s(v32, v33, v27);
        if ((v10 & 0x80000000) == 0)
          goto LABEL_60;
        return v10;
      }
    }
  }
LABEL_60:
  v34 = *(_DWORD *)(a1 + 16);
  v35 = *(int *)(a1 + 12);
  *(_DWORD *)(a1 + 8) = v35;
  *(_DWORD *)(a1 + 24) = v35;
  if ((int)v35 - 5 > v34)
  {
    v36 = *(unsigned __int8 *)(v35 + *(_QWORD *)a1 - 1);
    if (v36 == 103 || v36 == 100)
    {
      if (find_among_b(a1, (uint64_t)&unk_42DCD0, 8))
      {
        v37 = *(_DWORD *)(a1 + 8);
        *(_DWORD *)(a1 + 20) = v37;
        if (v37 <= *(_DWORD *)(a1 + 16))
        {
          LODWORD(v39) = 0;
          goto LABEL_140;
        }
      }
    }
  }
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a1 + 12);
  v38 = sub_216580(a1);
  v39 = v38 & (v38 >> 31);
  v40 = v38 >> 31;
  if (!v38)
    v40 = 11;
  if (v40 != 11 && v40)
  {
    if (v38 < 0)
      return v39;
    v41 = *(_DWORD *)(a1 + 8);
    v42 = *(_DWORD *)(a1 + 12);
  }
  else
  {
    v41 = *(_DWORD *)(a1 + 12);
    *(_DWORD *)(a1 + 8) = v41;
    v42 = v41;
  }
  v43 = sub_2167B4((_DWORD *)a1);
  if (v43 >= 0)
    v44 = v39;
  else
    v44 = v43;
  if (v43)
    v39 = v44;
  else
    v39 = v39;
  if (v43)
    v45 = v43 >> 31;
  else
    v45 = 12;
  if (v45 != 12 && v45)
  {
    if (v43 < 0)
      return v39;
    v48 = *(_DWORD *)(a1 + 8);
    v47 = *(_DWORD *)(a1 + 12);
  }
  else
  {
    v46 = v41 - v42;
    v47 = *(_DWORD *)(a1 + 12);
    v48 = v46 + v47;
    *(_DWORD *)(a1 + 8) = v46 + v47;
  }
  v49 = sub_216884(a1);
  if (v49 >= 0)
    v50 = v39;
  else
    v50 = v49;
  if (v49)
    v39 = v50;
  else
    v39 = v39;
  if (v49)
    v51 = v49 >> 31;
  else
    v51 = 13;
  if (v51 != 13 && v51)
  {
    if (v49 < 0)
      return v39;
    v54 = *(_DWORD *)(a1 + 8);
    v53 = *(_DWORD *)(a1 + 12);
  }
  else
  {
    v52 = v48 - v47;
    v53 = *(_DWORD *)(a1 + 12);
    v54 = v52 + v53;
    *(_DWORD *)(a1 + 8) = v52 + v53;
  }
  v55 = sub_216A5C(a1);
  if (v55 >= 0)
    v56 = v39;
  else
    v56 = v55;
  if (v55)
    v39 = v56;
  else
    v39 = v39;
  if (v55)
    v57 = v55 >> 31;
  else
    v57 = 14;
  if (v57 != 14 && v57)
  {
    if (v55 < 0)
      return v39;
    v60 = *(_DWORD *)(a1 + 8);
    v59 = *(_DWORD *)(a1 + 12);
  }
  else
  {
    v58 = v54 - v53;
    v59 = *(_DWORD *)(a1 + 12);
    v60 = v58 + v59;
    *(_DWORD *)(a1 + 8) = v58 + v59;
  }
  v61 = sub_216B80(a1);
  if (v61 >= 0)
    v62 = v39;
  else
    v62 = v61;
  if (v61)
    v39 = v62;
  else
    v39 = v39;
  if (v61)
    v63 = v61 >> 31;
  else
    v63 = 15;
  if (v63 != 15 && v63)
  {
    if (v61 < 0)
      return v39;
  }
  else
  {
    *(_DWORD *)(a1 + 8) = v60 - v59 + *(_DWORD *)(a1 + 12);
  }
  v64 = sub_216C80(a1);
  if (v64 >= 0)
    v65 = v39;
  else
    v65 = v64;
  if (v64)
    v39 = v65;
  else
    v39 = v39;
  if (v64)
    v66 = v64 >> 31;
  else
    v66 = 16;
  if ((v66 | 0x10) == 0x10 || (v64 & 0x80000000) == 0)
  {
LABEL_140:
    v67 = *(_DWORD *)(a1 + 16);
    *(_DWORD *)(a1 + 8) = v67;
    v68 = sub_216D84(a1);
    v69 = v68 >> 31;
    if (!v68)
      v69 = 17;
    if (v69 != 17 && v69)
    {
      if (v68 >= 0)
        v70 = v39;
      else
        v70 = v68;
      if (v68)
        v39 = v70;
      else
        v39 = v39;
      if (v68 < 0)
        return v39;
    }
    else
    {
      *(_DWORD *)(a1 + 8) = v67;
    }
    return 1;
  }
  return v39;
}

uint64_t sub_216580(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char v4;
  uint64_t result;
  int v6;
  int v7;
  int v8;
  uint64_t v9;
  char v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;

  v1 = *(int *)(a1 + 8);
  *(_DWORD *)(a1 + 24) = v1;
  v2 = v1 - 1;
  if ((int)v2 <= *(_DWORD *)(a1 + 16))
    return 0;
  v4 = *(_BYTE *)(*(_QWORD *)a1 + v2);
  if ((v4 & 0xE0) != 0x60 || ((0x2000090u >> v4) & 1) == 0)
    return 0;
  result = find_among_b(a1, (uint64_t)&unk_42DDD0, 6);
  if (!(_DWORD)result)
    return result;
  v6 = *(_DWORD *)(a1 + 8);
  *(_DWORD *)(a1 + 20) = v6;
  if ((_DWORD)result == 2)
  {
    v7 = *(_DWORD *)(a1 + 12);
    if ((out_grouping_b_U(a1, (uint64_t)&unk_31DE98, 97, 121, 1) & 0x80000000) != 0)
      return 0;
    *(_DWORD *)(a1 + 8) = v6 - v7 + *(_DWORD *)(a1 + 12);
    result = slice_del(a1);
    if ((result & 0x80000000) != 0)
      return result;
    v8 = *(_DWORD *)(a1 + 12);
    v9 = *(int *)(a1 + 8);
    if ((int)v9 - 1 <= *(_DWORD *)(a1 + 16))
      goto LABEL_17;
    v10 = *(_BYTE *)(*(_QWORD *)a1 + v9 - 1);
    if ((v10 & 0xE0) != 0x60 || ((0x41570D4u >> v10) & 1) == 0)
      goto LABEL_17;
    result = find_among_b(a1, (uint64_t)&unk_42DE90, 13);
    if (!(_DWORD)result)
      return result;
    v14 = v9 - v8;
    v8 = *(_DWORD *)(a1 + 12);
    LODWORD(v9) = v8 + v14;
    *(_DWORD *)(a1 + 8) = v8 + v14;
    if ((_DWORD)result != 3)
    {
      if ((_DWORD)result != 2)
      {
        if ((_DWORD)result != 1)
          return 1;
        result = insert_s(a1, v8 + v14, v8 + v14, 1, &unk_31DEFF);
        *(_DWORD *)(a1 + 8) = v9;
        if ((result & 0x80000000) == 0)
          return 1;
        return result;
      }
      *(_DWORD *)(a1 + 24) = v9;
      v15 = skip_utf8(*(_QWORD *)a1, (v8 + v14), *(unsigned int *)(a1 + 16), 0, -1);
      if ((v15 & 0x80000000) == 0)
      {
        *(_DWORD *)(a1 + 8) = v15;
        *(_DWORD *)(a1 + 20) = v15;
        result = slice_del(a1);
        if ((result & 0x80000000) != 0)
          return result;
        return 1;
      }
    }
    else
    {
LABEL_17:
      if ((_DWORD)v9 == **(_DWORD **)(a1 + 40))
      {
        result = sub_216E80((_DWORD *)a1);
        if ((_DWORD)result)
        {
          v11 = v9 - v8;
          v12 = *(_DWORD *)(a1 + 12);
          v13 = v12 + v9 - v8;
          *(_DWORD *)(a1 + 8) = v13;
          result = insert_s(a1, v12 + v11, v12 + v11, 1, &unk_31DF00);
          *(_DWORD *)(a1 + 8) = v13;
          if ((result & 0x80000000) == 0)
            return 1;
        }
        return result;
      }
    }
    return 0;
  }
  if ((_DWORD)result != 1)
    return 1;
  if (**(_DWORD **)(a1 + 40) > v6)
    return 0;
  result = slice_from_s(a1, 2, &unk_31DEFD);
  if ((result & 0x80000000) == 0)
    return 1;
  return result;
}

uint64_t sub_2167B4(_DWORD *a1)
{
  int v2;
  int v3;
  uint64_t result;
  int v5;
  int v6;

  v2 = a1[2];
  v3 = a1[3];
  a1[6] = v2;
  if (eq_s_b((uint64_t)a1, 1, &unk_31DF34)
    || (a1[2] = v2 - v3 + a1[3], result = eq_s_b((uint64_t)a1, 1, &unk_31DF35), (_DWORD)result))
  {
    a1[5] = a1[2];
    v5 = out_grouping_b_U((uint64_t)a1, (uint64_t)&unk_31DE98, 97, 121, 0);
    result = 0;
    if (!v5)
    {
      if (a1[2] <= a1[4])
      {
        return 0;
      }
      else
      {
        v6 = slice_from_s((uint64_t)a1, 1, &unk_31DF36);
        if (v6 >= 0)
          return 1;
        else
          return v6 & (v6 >> 31);
      }
    }
  }
  return result;
}

uint64_t sub_216884(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char v4;
  uint64_t result;
  int v6;
  void *v7;
  uint64_t v8;
  int v9;
  int v10;

  v1 = *(int *)(a1 + 8);
  *(_DWORD *)(a1 + 24) = v1;
  v2 = v1 - 1;
  if ((int)v2 <= *(_DWORD *)(a1 + 16))
    return 0;
  v4 = *(_BYTE *)(*(_QWORD *)a1 + v2);
  if ((v4 & 0xE0) != 0x60 || ((0xC7200u >> v4) & 1) == 0)
    return 0;
  result = find_among_b(a1, (uint64_t)&unk_42E030, 24);
  if (!(_DWORD)result)
    return result;
  v6 = *(_DWORD *)(a1 + 8);
  *(_DWORD *)(a1 + 20) = v6;
  if (**(_DWORD **)(a1 + 40) > v6)
    return 0;
  switch((int)result)
  {
    case 1:
      v7 = &unk_31DF37;
      goto LABEL_27;
    case 2:
      v7 = &unk_31DF3B;
      goto LABEL_27;
    case 3:
      v7 = &unk_31DF3F;
      goto LABEL_27;
    case 4:
      v7 = &unk_31DF43;
      goto LABEL_27;
    case 5:
      v7 = &unk_31DF47;
      goto LABEL_25;
    case 6:
      v7 = &unk_31DF4A;
      goto LABEL_25;
    case 7:
      v7 = &unk_31DF4D;
      goto LABEL_25;
    case 8:
      v7 = &unk_31DF50;
      goto LABEL_23;
    case 9:
      v7 = &unk_31DF52;
      goto LABEL_25;
    case 10:
      v7 = &unk_31DF55;
      goto LABEL_25;
    case 11:
      v7 = &unk_31DF58;
      goto LABEL_25;
    case 12:
      v7 = &unk_31DF5B;
      goto LABEL_25;
    case 13:
      result = eq_s_b(a1, 1, &unk_31DF5E);
      if (!(_DWORD)result)
        return result;
      v7 = &unk_31DF5F;
LABEL_23:
      v8 = a1;
      v9 = 2;
      goto LABEL_28;
    case 14:
      v7 = &unk_31DF61;
LABEL_25:
      v8 = a1;
      v9 = 3;
      goto LABEL_28;
    case 15:
      v7 = &unk_31DF64;
LABEL_27:
      v8 = a1;
      v9 = 4;
LABEL_28:
      result = slice_from_s(v8, v9, v7);
      if ((result & 0x80000000) == 0)
        goto LABEL_29;
      return result;
    case 16:
      v10 = in_grouping_b_U(a1, (uint64_t)&unk_31DF68, 99, 116, 0);
      result = 0;
      if (v10)
        return result;
      result = slice_del(a1);
      if ((result & 0x80000000) != 0)
        return result;
      goto LABEL_29;
    default:
LABEL_29:
      result = 1;
      break;
  }
  return result;
}

uint64_t sub_216A5C(uint64_t a1)
{
  uint64_t v1;
  char v3;
  uint64_t result;
  int v5;
  _DWORD *v6;
  void *v7;
  uint64_t v8;
  int v9;

  v1 = *(int *)(a1 + 8);
  *(_DWORD *)(a1 + 24) = v1;
  if ((int)v1 - 2 <= *(_DWORD *)(a1 + 16))
    return 0;
  v3 = *(_BYTE *)(v1 + *(_QWORD *)a1 - 1);
  if ((v3 & 0xE0) != 0x60 || ((0x81220u >> v3) & 1) == 0)
    return 0;
  result = find_among_b(a1, (uint64_t)&unk_42E330, 9);
  if (!(_DWORD)result)
    return result;
  v5 = *(_DWORD *)(a1 + 8);
  *(_DWORD *)(a1 + 20) = v5;
  v6 = *(_DWORD **)(a1 + 40);
  if (*v6 > v5)
    return 0;
  switch((int)result)
  {
    case 1:
      v7 = &unk_31DFE3;
      v8 = a1;
      v9 = 4;
      goto LABEL_14;
    case 2:
      v7 = &unk_31DFE7;
      v8 = a1;
      v9 = 3;
      goto LABEL_14;
    case 3:
      v7 = &unk_31DFEA;
      goto LABEL_13;
    case 4:
      v7 = &unk_31DFEC;
LABEL_13:
      v8 = a1;
      v9 = 2;
LABEL_14:
      result = slice_from_s(v8, v9, v7);
      if ((result & 0x80000000) != 0)
        return result;
      goto LABEL_18;
    case 5:
      goto LABEL_17;
    case 6:
      if (v6[1] > v5)
        return 0;
LABEL_17:
      result = slice_del(a1);
      if ((result & 0x80000000) == 0)
        goto LABEL_18;
      return result;
    default:
LABEL_18:
      result = 1;
      break;
  }
  return result;
}

uint64_t sub_216B80(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char v4;
  uint64_t result;
  int v6;
  int v7;

  v1 = *(int *)(a1 + 8);
  *(_DWORD *)(a1 + 24) = v1;
  v2 = v1 - 1;
  if ((int)v2 <= *(_DWORD *)(a1 + 16))
    return 0;
  v4 = *(_BYTE *)(*(_QWORD *)a1 + v2);
  if ((v4 & 0xE0) != 0x60 || ((0x1C7228u >> v4) & 1) == 0)
    return 0;
  result = find_among_b(a1, (uint64_t)&unk_42E450, 18);
  if (!(_DWORD)result)
    return result;
  v6 = *(_DWORD *)(a1 + 8);
  *(_DWORD *)(a1 + 20) = v6;
  if (*(_DWORD *)(*(_QWORD *)(a1 + 40) + 4) > v6)
    return 0;
  if ((_DWORD)result == 2)
  {
    v7 = *(_DWORD *)(a1 + 12);
    if (!eq_s_b(a1, 1, &unk_31E01A))
    {
      *(_DWORD *)(a1 + 8) = v6 - v7 + *(_DWORD *)(a1 + 12);
      result = eq_s_b(a1, 1, &unk_31E01B);
      if (!(_DWORD)result)
        return result;
    }
  }
  else if ((_DWORD)result != 1)
  {
    return 1;
  }
  result = slice_del(a1);
  if ((result & 0x80000000) == 0)
    return 1;
  return result;
}

uint64_t sub_216C80(uint64_t a1)
{
  uint64_t v1;
  int v3;
  uint64_t result;
  int v5;
  _DWORD *v6;
  int v7;

  v1 = *(int *)(a1 + 8);
  *(_DWORD *)(a1 + 24) = v1;
  if ((int)v1 <= *(_DWORD *)(a1 + 16))
    return 0;
  v3 = *(unsigned __int8 *)(v1 + *(_QWORD *)a1 - 1);
  if (v3 != 108 && v3 != 101)
    return 0;
  result = find_among_b(a1, (uint64_t)&unk_42E690, 2);
  if (!(_DWORD)result)
    return result;
  v5 = *(_DWORD *)(a1 + 8);
  *(_DWORD *)(a1 + 20) = v5;
  if ((_DWORD)result == 2)
  {
    if (*(_DWORD *)(*(_QWORD *)(a1 + 40) + 4) <= v5)
    {
      result = eq_s_b(a1, 1, &unk_31E056);
      if (!(_DWORD)result)
        return result;
      goto LABEL_15;
    }
    return 0;
  }
  if ((_DWORD)result != 1)
    return 1;
  v6 = *(_DWORD **)(a1 + 40);
  if (v6[1] <= v5)
    goto LABEL_15;
  if (*v6 > v5)
    return 0;
  v7 = *(_DWORD *)(a1 + 12);
  if (sub_216E80((_DWORD *)a1))
    return 0;
  *(_DWORD *)(a1 + 8) = v5 - v7 + *(_DWORD *)(a1 + 12);
LABEL_15:
  result = slice_del(a1);
  if ((result & 0x80000000) == 0)
    return 1;
  return result;
}

uint64_t sub_216D84(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  if (!**(_BYTE **)(a1 + 48))
    return 0;
  while (1)
  {
    v2 = *(unsigned int *)(a1 + 8);
    *(_DWORD *)(a1 + 20) = v2;
    if (!eq_s(a1, 1, &unk_31E059))
      break;
    LODWORD(v3) = v2;
LABEL_7:
    *(_DWORD *)(a1 + 24) = *(_DWORD *)(a1 + 8);
    *(_DWORD *)(a1 + 8) = v3;
    result = slice_from_s(a1, 1, &unk_31E05A);
    if ((result & 0x80000000) != 0)
      return result;
  }
  v3 = v2;
  while (1)
  {
    *(_DWORD *)(a1 + 8) = v3;
    v4 = skip_utf8(*(_QWORD *)a1, v3, 0, *(unsigned int *)(a1 + 12), 1);
    if ((v4 & 0x80000000) != 0)
      break;
    v3 = v4;
    *(_DWORD *)(a1 + 8) = v4;
    *(_DWORD *)(a1 + 20) = v4;
    if (eq_s(a1, 1, &unk_31E059))
      goto LABEL_7;
  }
  *(_DWORD *)(a1 + 8) = v2;
  return 1;
}

_QWORD *english_UTF_8_create_env()
{
  return SN_create_env(0, 2, 1);
}

void english_UTF_8_close_env(uint64_t a1)
{
  SN_close_env(a1, 0);
}

BOOL sub_216E80(_DWORD *a1)
{
  int v2;
  int v3;
  int v4;
  _BOOL8 result;
  int v6;

  v3 = a1[2];
  v2 = a1[3];
  if (!out_grouping_b_U((uint64_t)a1, (uint64_t)&unk_31DF2F, 89, 121, 0)
    && !in_grouping_b_U((uint64_t)a1, (uint64_t)&unk_31DE98, 97, 121, 0)
    && !out_grouping_b_U((uint64_t)a1, (uint64_t)&unk_31DE98, 97, 121, 0))
  {
    return 1;
  }
  a1[2] = v3 - v2 + a1[3];
  v4 = out_grouping_b_U((uint64_t)a1, (uint64_t)&unk_31DE98, 97, 121, 0);
  result = 0;
  if (!v4)
  {
    v6 = in_grouping_b_U((uint64_t)a1, (uint64_t)&unk_31DE98, 97, 121, 0);
    result = 0;
    if (!v6)
      return a1[2] <= a1[4];
  }
  return result;
}

uint64_t finnish_UTF_8_stem(uint64_t a1)
{
  int v2;
  _DWORD *v3;
  int v4;
  int v5;
  int v6;
  uint64_t v7;
  int v8;
  int v9;
  int v10;
  int among_b;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  int v23;
  int v24;
  int v25;
  int v26;
  int v27;
  int v28;
  void *v29;
  uint64_t v30;
  int v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  int v36;
  int v37;
  int v38;
  int v39;
  int v40;
  int v41;
  int v42;
  int v43;
  int v44;
  int v45;
  int v46;
  int v47;
  int v48;
  unsigned int v49;
  unsigned int v50;
  int v51;
  int v52;
  unsigned int v53;
  int v54;
  int v55;
  int v56;
  unsigned int v57;

  v2 = *(_DWORD *)(a1 + 8);
  v3 = *(_DWORD **)(a1 + 40);
  *v3 = *(_DWORD *)(a1 + 12);
  v3[1] = *(_DWORD *)(a1 + 12);
  if ((out_grouping_U(a1, (uint64_t)&unk_31E06A, 97, 246, 1) & 0x80000000) != 0
    || (v4 = in_grouping_U(a1, (uint64_t)&unk_31E06A, 97, 246, 1), v4 < 0)
    || (v5 = *(_DWORD *)(a1 + 8) + v4,
        *(_DWORD *)(a1 + 8) = v5,
        **(_DWORD **)(a1 + 40) = v5,
        (out_grouping_U(a1, (uint64_t)&unk_31E06A, 97, 246, 1) & 0x80000000) != 0)
    || (v6 = in_grouping_U(a1, (uint64_t)&unk_31E06A, 97, 246, 1), v6 < 0))
  {
    LODWORD(v7) = 0;
  }
  else
  {
    *(_DWORD *)(*(_QWORD *)(a1 + 40) + 4) = *(_DWORD *)(a1 + 8) + v6;
    LODWORD(v7) = 1;
  }
  *(_DWORD *)(a1 + 8) = v2;
  **(_BYTE **)(a1 + 48) = 0;
  v9 = *(_DWORD *)(a1 + 8);
  v8 = *(_DWORD *)(a1 + 12);
  *(_DWORD *)(a1 + 16) = v9;
  *(_DWORD *)(a1 + 8) = v8;
  v10 = **(_DWORD **)(a1 + 40);
  if (v8 >= v10)
  {
    *(_DWORD *)(a1 + 16) = v10;
    *(_DWORD *)(a1 + 24) = v8;
    among_b = find_among_b(a1, (uint64_t)&unk_42E6D0, 10);
    if (!among_b)
    {
      *(_DWORD *)(a1 + 16) = v9;
      goto LABEL_19;
    }
    v12 = *(_DWORD *)(a1 + 8);
    *(_DWORD *)(a1 + 16) = v9;
    *(_DWORD *)(a1 + 20) = v12;
    if (among_b == 2)
    {
      if (*(_DWORD *)(*(_QWORD *)(a1 + 40) + 4) > v12)
        goto LABEL_19;
    }
    else if (among_b == 1 && in_grouping_b_U(a1, (uint64_t)&unk_31E07D, 97, 246, 0))
    {
      goto LABEL_19;
    }
    v13 = slice_del(a1);
    if (v13 >= 0)
      v7 = v7;
    else
      v7 = v13;
    if (v13 < 0)
      return v7;
  }
LABEL_19:
  v14 = *(_DWORD *)(a1 + 12);
  *(_DWORD *)(a1 + 8) = v14;
  v15 = **(_DWORD **)(a1 + 40);
  if (v14 >= v15)
  {
    v16 = *(_DWORD *)(a1 + 16);
    *(_DWORD *)(a1 + 16) = v15;
    *(_DWORD *)(a1 + 24) = v14;
    v17 = find_among_b(a1, (uint64_t)&unk_42E810, 9);
    if (v17)
    {
      v18 = *(int *)(a1 + 8);
      *(_DWORD *)(a1 + 16) = v16;
      *(_DWORD *)(a1 + 20) = v18;
      switch(v17)
      {
        case 1:
          v19 = *(_DWORD *)(a1 + 12);
          if (eq_s_b(a1, 1, &unk_31E0B1))
            goto LABEL_41;
          *(_DWORD *)(a1 + 8) = v18 - v19 + *(_DWORD *)(a1 + 12);
          goto LABEL_40;
        case 2:
          v20 = slice_del(a1);
          if ((v20 & 0x80000000) == 0)
          {
            *(_DWORD *)(a1 + 24) = *(_DWORD *)(a1 + 8);
            if (!eq_s_b(a1, 3, &unk_31E0B2))
              goto LABEL_41;
            *(_DWORD *)(a1 + 20) = *(_DWORD *)(a1 + 8);
            v20 = slice_from_s(a1, 3, &unk_31E0B5);
            if ((v20 & 0x80000000) == 0)
              goto LABEL_41;
          }
          return v20;
        case 3:
          goto LABEL_40;
        case 4:
          if ((int)v18 - 1 <= v16 || *(_BYTE *)(*(_QWORD *)a1 + v18 - 1) != 97)
            goto LABEL_41;
          v21 = &unk_42E930;
          goto LABEL_35;
        case 5:
          if ((int)v18 - 2 <= v16 || *(unsigned __int8 *)(v18 + *(_QWORD *)a1 - 1) != 164)
            goto LABEL_41;
          v21 = &unk_42E9F0;
LABEL_35:
          v22 = a1;
          v23 = 6;
          break;
        case 6:
          if ((int)v18 - 2 <= v16 || *(_BYTE *)(v18 + *(_QWORD *)a1 - 1) != 101)
            goto LABEL_41;
          v21 = &unk_42EAB0;
          v22 = a1;
          v23 = 2;
          break;
        default:
          goto LABEL_41;
      }
      if (find_among_b(v22, (uint64_t)v21, v23))
      {
LABEL_40:
        v20 = slice_del(a1);
        if ((v20 & 0x80000000) != 0)
          return v20;
      }
    }
    else
    {
      *(_DWORD *)(a1 + 16) = v16;
    }
  }
LABEL_41:
  v24 = *(_DWORD *)(a1 + 12);
  *(_DWORD *)(a1 + 8) = v24;
  v25 = **(_DWORD **)(a1 + 40);
  if (v24 >= v25)
  {
    v26 = *(_DWORD *)(a1 + 16);
    *(_DWORD *)(a1 + 16) = v25;
    *(_DWORD *)(a1 + 24) = v24;
    v27 = find_among_b(a1, (uint64_t)&unk_42EAF0, 30);
    if (v27)
    {
      v28 = *(_DWORD *)(a1 + 8);
      *(_DWORD *)(a1 + 16) = v26;
      *(_DWORD *)(a1 + 20) = v28;
      switch(v27)
      {
        case 1:
          v29 = &unk_31E0FC;
          goto LABEL_60;
        case 2:
          v29 = &unk_31E0FD;
          goto LABEL_60;
        case 3:
          v29 = &unk_31E0FE;
          goto LABEL_60;
        case 4:
          v29 = &unk_31E0FF;
          goto LABEL_60;
        case 5:
          v29 = &unk_31E100;
          goto LABEL_51;
        case 6:
          v29 = &unk_31E102;
LABEL_51:
          v30 = a1;
          v31 = 2;
          goto LABEL_61;
        case 7:
          v32 = *(_DWORD *)(a1 + 12) - v28;
          if ((find_among_b(a1, (uint64_t)&unk_42EEB0, 7)
             || (*(_DWORD *)(a1 + 8) = *(_DWORD *)(a1 + 12) - v32, eq_s_b(a1, 2, &unk_31E104)))
            && (v33 = *(unsigned int *)(a1 + 16),
                v34 = (*(_DWORD *)(a1 + 12) - v32),
                *(_DWORD *)(a1 + 8) = v34,
                v35 = skip_utf8(*(_QWORD *)a1, v34, v33, 0, -1),
                (v35 & 0x80000000) == 0))
          {
            *(_DWORD *)(a1 + 8) = v35;
            *(_DWORD *)(a1 + 20) = v35;
          }
          else
          {
            *(_DWORD *)(a1 + 8) = *(_DWORD *)(a1 + 12) - v32;
          }
          goto LABEL_62;
        case 8:
          if (in_grouping_b_U(a1, (uint64_t)&unk_31E06A, 97, 246, 0)
            || out_grouping_b_U(a1, (uint64_t)&unk_31E06A, 97, 246, 0))
          {
            break;
          }
          goto LABEL_62;
        case 9:
          v29 = &unk_31E106;
LABEL_60:
          v30 = a1;
          v31 = 1;
LABEL_61:
          if (eq_s_b(v30, v31, v29))
            goto LABEL_62;
          break;
        default:
LABEL_62:
          v20 = slice_del(a1);
          if ((v20 & 0x80000000) != 0)
            return v20;
          **(_BYTE **)(a1 + 48) = 1;
          break;
      }
    }
    else
    {
      *(_DWORD *)(a1 + 16) = v26;
    }
  }
  v36 = *(_DWORD *)(a1 + 12);
  *(_DWORD *)(a1 + 8) = v36;
  v37 = *(_DWORD *)(*(_QWORD *)(a1 + 40) + 4);
  if (v36 >= v37)
  {
    v38 = *(_DWORD *)(a1 + 16);
    *(_DWORD *)(a1 + 16) = v37;
    *(_DWORD *)(a1 + 24) = v36;
    v39 = find_among_b(a1, (uint64_t)&unk_42EF90, 14);
    if (v39)
    {
      v40 = *(_DWORD *)(a1 + 8);
      *(_DWORD *)(a1 + 16) = v38;
      *(_DWORD *)(a1 + 20) = v40;
      if (v39 == 1)
      {
        v41 = *(_DWORD *)(a1 + 12);
        if (eq_s_b(a1, 2, &unk_31E18A))
          goto LABEL_75;
        *(_DWORD *)(a1 + 8) = v40 - v41 + *(_DWORD *)(a1 + 12);
      }
      v42 = slice_del(a1);
      if (v42 >= 0)
        v7 = v7;
      else
        v7 = v42;
      if (v42 < 0)
        return v7;
    }
    else
    {
      *(_DWORD *)(a1 + 16) = v38;
    }
  }
LABEL_75:
  v43 = *(_DWORD *)(a1 + 12);
  *(_DWORD *)(a1 + 8) = v43;
  if (!**(_BYTE **)(a1 + 48))
  {
    v52 = sub_217628(a1);
    if (v52 >= 0)
      v53 = v7;
    else
      v53 = v52;
    v50 = v52 >> 31;
    if (v52)
      v7 = v53;
    else
      v7 = v7;
    if (v52)
      v54 = v52 >> 31;
    else
      v54 = 10;
    if (v54 && v54 != 10)
    {
LABEL_106:
      if (v50)
        return v7;
      goto LABEL_110;
    }
    goto LABEL_109;
  }
  v44 = **(_DWORD **)(a1 + 40);
  if (v43 < v44)
  {
LABEL_109:
    *(_DWORD *)(a1 + 8) = *(_DWORD *)(a1 + 12);
    goto LABEL_110;
  }
  v45 = *(_DWORD *)(a1 + 16);
  *(_DWORD *)(a1 + 16) = v44;
  *(_DWORD *)(a1 + 24) = v43;
  if (v43 <= v44
    || *(unsigned __int8 *)(v43 + *(_QWORD *)a1 - 1) - 105 > 1
    || !find_among_b(a1, (uint64_t)&unk_42F150, 2))
  {
    *(_DWORD *)(a1 + 16) = v45;
    goto LABEL_109;
  }
  v46 = *(_DWORD *)(a1 + 8);
  *(_DWORD *)(a1 + 16) = v45;
  *(_DWORD *)(a1 + 20) = v46;
  v47 = slice_del(a1);
  if (v47 >= 0)
    v48 = 1;
  else
    v48 = v47 & (v47 >> 31);
  if (v48 >= 0)
    v49 = v7;
  else
    v49 = v48;
  v50 = v48 >> 31;
  if (v48)
    v7 = v49;
  else
    v7 = v7;
  if (v48)
    v51 = v48 >> 31;
  else
    v51 = 8;
  if ((v51 | 8) == 8)
    goto LABEL_109;
  if (v48 < 0)
    goto LABEL_106;
LABEL_110:
  v55 = sub_217784(a1);
  v56 = v55 >> 31;
  if (!v55)
    v56 = 11;
  if (!v56
    || v56 == 11
    || (v55 >= 0 ? (v57 = v7) : (v57 = v55), v55 ? (v7 = v57) : (v7 = v7), (v55 & 0x80000000) == 0))
  {
    *(_DWORD *)(a1 + 8) = *(_DWORD *)(a1 + 16);
    return 1;
  }
  return v7;
}

uint64_t sub_217628(uint64_t a1)
{
  int v1;
  int v2;
  uint64_t result;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;

  v1 = *(_DWORD *)(a1 + 8);
  v2 = **(_DWORD **)(a1 + 40);
  if (v1 < v2)
    return 0;
  v5 = *(_DWORD *)(a1 + 16);
  *(_DWORD *)(a1 + 16) = v2;
  *(_DWORD *)(a1 + 24) = v1;
  result = eq_s_b(a1, 1, &unk_31E1C3);
  if (!(_DWORD)result)
    goto LABEL_6;
  v6 = *(_DWORD *)(a1 + 8);
  v7 = *(_DWORD *)(a1 + 12);
  *(_DWORD *)(a1 + 20) = v6;
  if (in_grouping_b_U(a1, (uint64_t)&unk_31E06A, 97, 246, 0))
    goto LABEL_5;
  *(_DWORD *)(a1 + 8) = v6 - v7 + *(_DWORD *)(a1 + 12);
  result = slice_del(a1);
  if ((result & 0x80000000) == 0)
  {
    *(_DWORD *)(a1 + 16) = v5;
    v8 = *(_DWORD *)(a1 + 8);
    v9 = *(_DWORD *)(*(_QWORD *)(a1 + 40) + 4);
    if (v8 >= v9)
    {
      *(_DWORD *)(a1 + 16) = v9;
      *(_DWORD *)(a1 + 8) = v8;
      *(_DWORD *)(a1 + 24) = v8;
      if (v8 - 2 <= v9 || *(_BYTE *)(v8 + *(_QWORD *)a1 - 1) != 97)
      {
LABEL_5:
        result = 0;
LABEL_6:
        *(_DWORD *)(a1 + 16) = v5;
        return result;
      }
      result = find_among_b(a1, (uint64_t)&unk_42F190, 2);
      if (!(_DWORD)result)
        goto LABEL_6;
      v10 = *(_DWORD *)(a1 + 8);
      *(_DWORD *)(a1 + 16) = v5;
      *(_DWORD *)(a1 + 20) = v10;
      if ((_DWORD)result != 1)
        goto LABEL_16;
      v11 = *(_DWORD *)(a1 + 12);
      if (!eq_s_b(a1, 2, &unk_31E1C4))
      {
        *(_DWORD *)(a1 + 8) = v10 - v11 + *(_DWORD *)(a1 + 12);
LABEL_16:
        LODWORD(result) = slice_del(a1);
        if ((int)result >= 0)
          return 1;
        else
          return result;
      }
    }
    return 0;
  }
  return result;
}

uint64_t sub_217784(uint64_t a1)
{
  int v1;
  int v2;
  uint64_t result;
  int v5;
  int v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  uint64_t v16;
  int v17;
  _DWORD *v18;

  v1 = *(_DWORD *)(a1 + 8);
  v2 = **(_DWORD **)(a1 + 40);
  if (v1 < v2)
    return 0;
  v5 = *(_DWORD *)(a1 + 12);
  v6 = *(_DWORD *)(a1 + 16);
  *(_DWORD *)(a1 + 16) = v2;
  v7 = v5 - v1;
  if (!find_among_b(a1, (uint64_t)&unk_42EEB0, 7))
    goto LABEL_27;
  v8 = *(unsigned int *)(a1 + 16);
  v9 = (*(_DWORD *)(a1 + 12) - v7);
  *(_DWORD *)(a1 + 8) = v9;
  *(_DWORD *)(a1 + 24) = v9;
  v10 = skip_utf8(*(_QWORD *)a1, v9, v8, 0, -1);
  if (v10 < 0
    || (*(_DWORD *)(a1 + 8) = v10, *(_DWORD *)(a1 + 20) = v10, result = slice_del(a1), (result & 0x80000000) == 0))
  {
LABEL_27:
    v11 = *(_DWORD *)(a1 + 12) - v7;
    *(_DWORD *)(a1 + 8) = v11;
    *(_DWORD *)(a1 + 24) = v11;
    if (in_grouping_b_U(a1, (uint64_t)&unk_31E1CD, 97, 228, 0)
      || (*(_DWORD *)(a1 + 20) = *(_DWORD *)(a1 + 8),
          out_grouping_b_U(a1, (uint64_t)&unk_31E06A, 97, 246, 0))
      || (result = slice_del(a1), (result & 0x80000000) == 0))
    {
      v12 = *(_DWORD *)(a1 + 12) - v7;
      *(_DWORD *)(a1 + 8) = v12;
      *(_DWORD *)(a1 + 24) = v12;
      if (!eq_s_b(a1, 1, "jouoj"))
        goto LABEL_14;
      v13 = *(_DWORD *)(a1 + 8);
      v14 = *(_DWORD *)(a1 + 12);
      *(_DWORD *)(a1 + 20) = v13;
      if (!eq_s_b(a1, 1, "ouoj"))
      {
        *(_DWORD *)(a1 + 8) = v13 - v14 + *(_DWORD *)(a1 + 12);
        if (!eq_s_b(a1, 1, "uoj"))
          goto LABEL_14;
      }
      result = slice_del(a1);
      if ((result & 0x80000000) == 0)
      {
LABEL_14:
        v15 = *(_DWORD *)(a1 + 12) - v7;
        *(_DWORD *)(a1 + 8) = v15;
        *(_DWORD *)(a1 + 24) = v15;
        if (!eq_s_b(a1, 1, "oj")
          || (*(_DWORD *)(a1 + 20) = *(_DWORD *)(a1 + 8), !eq_s_b(a1, 1, "j"))
          || (result = slice_del(a1), (result & 0x80000000) == 0))
        {
          *(_DWORD *)(a1 + 8) = *(_DWORD *)(a1 + 12) - v7;
          *(_DWORD *)(a1 + 16) = v6;
          if ((in_grouping_b_U(a1, (uint64_t)&unk_31E06A, 97, 246, 1) & 0x80000000) != 0)
            return 0;
          v16 = *(unsigned int *)(a1 + 8);
          *(_DWORD *)(a1 + 24) = v16;
          v17 = skip_utf8(*(_QWORD *)a1, v16, *(unsigned int *)(a1 + 16), 0, -1);
          if (v17 < 0)
            return 0;
          *(_DWORD *)(a1 + 8) = v17;
          *(_DWORD *)(a1 + 20) = v17;
          **(_QWORD **)(a1 + 32) = slice_to((uint64_t *)a1, **(_DWORD ***)(a1 + 32));
          v18 = **(_DWORD ***)(a1 + 32);
          if (v18)
          {
            result = eq_v_b(a1, v18);
            if ((_DWORD)result)
            {
              LODWORD(result) = slice_del(a1);
              if ((int)result >= 0)
                return 1;
              else
                return result;
            }
          }
          else
          {
            return 0xFFFFFFFFLL;
          }
        }
      }
    }
  }
  return result;
}

_QWORD *finnish_UTF_8_create_env()
{
  return SN_create_env(1, 2, 1);
}

void finnish_UTF_8_close_env(uint64_t a1)
{
  SN_close_env(a1, 1);
}

BOOL sub_217A10(uint64_t a1)
{
  return find_among_b(a1, (uint64_t)&unk_42EEB0, 7) != 0;
}

uint64_t sub_217A38(uint64_t a1)
{
  uint64_t result;

  result = eq_s_b(a1, 1, &unk_31E164);
  if ((_DWORD)result)
    return in_grouping_b_U(a1, (uint64_t)&unk_31E165, 97, 246, 0) == 0;
  return result;
}

uint64_t french_UTF_8_stem(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  _DWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  int among_b;
  int v24;
  int v25;
  void *v26;
  void *v27;
  uint64_t v28;
  int v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  int v34;
  int v35;
  int v36;
  uint64_t v37;
  int v38;
  uint64_t v39;
  void *v40;
  int v41;
  unsigned int v42;
  unsigned int v43;
  int v44;
  int v45;
  int *v46;
  int v47;
  int v48;
  char v49;
  int v50;
  unsigned int v51;
  int v52;
  int v53;
  int v54;
  int v55;
  int v56;
  int v57;
  int v58;
  int v59;
  int v60;
  int v61;
  int v62;
  int v63;
  int v64;
  void *v65;
  uint64_t v66;
  int v67;
  int v68;
  int v69;
  int v70;
  int v71;
  void *v72;
  int v74;
  uint64_t v75;
  char v76;
  uint64_t v77;
  uint64_t v78;
  int v79;
  int v80;
  int v81;
  unsigned int v82;
  unsigned int v83;
  int v84;
  uint64_t v85;
  uint64_t i;
  uint64_t v87;
  char v88;
  int v89;
  int among;
  uint64_t v91;
  void *v92;
  int v93;
  int v94;
  int v95;
  int v96;
  int v97;
  unsigned int v98;
  uint64_t v99;
  int v100;

  v2 = *(unsigned int *)(a1 + 8);
  v100 = *(_DWORD *)(a1 + 8);
  while (!in_grouping_U(a1, (uint64_t)&unk_31E209, 97, 251, 0))
  {
    v5 = *(_DWORD *)(a1 + 8);
    *(_DWORD *)(a1 + 20) = v5;
    if (eq_s(a1, 1, &unk_31E21D)
      && (*(_DWORD *)(a1 + 24) = *(_DWORD *)(a1 + 8), !in_grouping_U(a1, (uint64_t)&unk_31E209, 97, 251, 0)))
    {
      v3 = a1;
      v4 = &unk_31E21E;
    }
    else
    {
      *(_DWORD *)(a1 + 8) = v5;
      if (!eq_s(a1, 1, &unk_31E21F)
        || (*(_DWORD *)(a1 + 24) = *(_DWORD *)(a1 + 8), in_grouping_U(a1, (uint64_t)&unk_31E209, 97, 251, 0)))
      {
        *(_DWORD *)(a1 + 8) = v5;
        if (eq_s(a1, 1, &unk_31E221))
        {
          *(_DWORD *)(a1 + 24) = *(_DWORD *)(a1 + 8);
          v3 = a1;
          v4 = &unk_31E222;
          goto LABEL_17;
        }
        break;
      }
      v3 = a1;
      v4 = &unk_31E220;
    }
LABEL_17:
    v6 = slice_from_s(v3, 1, v4);
    if ((v6 & 0x80000000) != 0)
      return v6;
LABEL_18:
    *(_DWORD *)(a1 + 8) = v2;
  }
  *(_DWORD *)(a1 + 8) = v2;
  *(_DWORD *)(a1 + 20) = v2;
  if (eq_s(a1, 1, &unk_31E223))
  {
    *(_DWORD *)(a1 + 24) = *(_DWORD *)(a1 + 8);
    if (!in_grouping_U(a1, (uint64_t)&unk_31E209, 97, 251, 0))
    {
      v3 = a1;
      v4 = &unk_31E224;
      goto LABEL_17;
    }
  }
  *(_DWORD *)(a1 + 8) = v2;
  if (eq_s(a1, 1, &unk_31E225))
  {
    *(_DWORD *)(a1 + 20) = *(_DWORD *)(a1 + 8);
    if (eq_s(a1, 1, &unk_31E226))
    {
      *(_DWORD *)(a1 + 24) = *(_DWORD *)(a1 + 8);
      v3 = a1;
      v4 = &unk_31E227;
      goto LABEL_17;
    }
  }
  *(_DWORD *)(a1 + 8) = v2;
  v7 = skip_utf8(*(_QWORD *)a1, v2, 0, *(unsigned int *)(a1 + 12), 1);
  if ((v7 & 0x80000000) == 0)
  {
    v2 = v7;
    goto LABEL_18;
  }
  *(_DWORD *)(a1 + 8) = v100;
  v8 = *(_DWORD **)(a1 + 40);
  *v8 = *(_DWORD *)(a1 + 12);
  v8[1] = *(_DWORD *)(a1 + 12);
  v8[2] = *(_DWORD *)(a1 + 12);
  v9 = *(unsigned int *)(a1 + 8);
  if (in_grouping_U(a1, (uint64_t)&unk_31E209, 97, 251, 0)
    || in_grouping_U(a1, (uint64_t)&unk_31E209, 97, 251, 0)
    || (v14 = skip_utf8(*(_QWORD *)a1, *(unsigned int *)(a1 + 8), 0, *(unsigned int *)(a1 + 12), 1), v14 < 0))
  {
    *(_DWORD *)(a1 + 8) = v9;
    v10 = (int)v9 + 2;
    v11 = *(unsigned int *)(a1 + 12);
    v12 = *(_QWORD *)a1;
    if ((int)v10 < (int)v11)
    {
      v13 = *(_BYTE *)(v12 + v10);
      if ((v13 & 0xE0) == 0x60 && ((0x51000u >> v13) & 1) != 0)
      {
        if (find_among(a1, (uint64_t)&unk_42F1D0, 3))
        {
          v14 = *(_DWORD *)(a1 + 8);
          goto LABEL_34;
        }
        v12 = *(_QWORD *)a1;
        v11 = *(unsigned int *)(a1 + 12);
      }
    }
    *(_DWORD *)(a1 + 8) = v9;
    v15 = skip_utf8(v12, v9, 0, v11, 1);
    if ((v15 & 0x80000000) == 0)
    {
      *(_DWORD *)(a1 + 8) = v15;
      v16 = out_grouping_U(a1, (uint64_t)&unk_31E209, 97, 251, 1);
      if ((v16 & 0x80000000) == 0)
      {
        v14 = *(_DWORD *)(a1 + 8) + v16;
        goto LABEL_34;
      }
    }
  }
  else
  {
LABEL_34:
    **(_DWORD **)(a1 + 40) = v14;
  }
  *(_DWORD *)(a1 + 8) = v9;
  v17 = out_grouping_U(a1, (uint64_t)&unk_31E209, 97, 251, 1);
  if ((v17 & 0x80000000) == 0)
  {
    *(_DWORD *)(a1 + 8) += v17;
    v18 = in_grouping_U(a1, (uint64_t)&unk_31E209, 97, 251, 1);
    if ((v18 & 0x80000000) == 0)
    {
      v19 = *(_DWORD *)(a1 + 8) + v18;
      *(_DWORD *)(a1 + 8) = v19;
      *(_DWORD *)(*(_QWORD *)(a1 + 40) + 4) = v19;
      v20 = out_grouping_U(a1, (uint64_t)&unk_31E209, 97, 251, 1);
      if ((v20 & 0x80000000) == 0)
      {
        *(_DWORD *)(a1 + 8) += v20;
        v21 = in_grouping_U(a1, (uint64_t)&unk_31E209, 97, 251, 1);
        if ((v21 & 0x80000000) == 0)
          *(_DWORD *)(*(_QWORD *)(a1 + 40) + 8) = *(_DWORD *)(a1 + 8) + v21;
      }
    }
  }
  *(_DWORD *)(a1 + 16) = v100;
  v22 = *(_DWORD *)(a1 + 12);
  *(_DWORD *)(a1 + 8) = v22;
  *(_DWORD *)(a1 + 24) = v22;
  among_b = find_among_b(a1, (uint64_t)&unk_42F230, 43);
  if (among_b)
  {
    v24 = *(_DWORD *)(a1 + 8);
    *(_DWORD *)(a1 + 20) = v24;
    switch(among_b)
    {
      case 1:
        if (*(_DWORD *)(*(_QWORD *)(a1 + 40) + 8) > v24)
          break;
        goto LABEL_95;
      case 2:
        if (*(_DWORD *)(*(_QWORD *)(a1 + 40) + 8) > v24)
          break;
        v6 = slice_del(a1);
        if ((v6 & 0x80000000) != 0)
          return v6;
        *(_DWORD *)(a1 + 24) = *(_DWORD *)(a1 + 8);
        if (!eq_s_b(a1, 2, &unk_31E231))
          goto LABEL_96;
        v25 = *(_DWORD *)(a1 + 8);
        *(_DWORD *)(a1 + 20) = v25;
        if (*(_DWORD *)(*(_QWORD *)(a1 + 40) + 8) <= v25)
          goto LABEL_95;
        v26 = &unk_31E233;
        goto LABEL_85;
      case 3:
        if (*(_DWORD *)(*(_QWORD *)(a1 + 40) + 8) > v24)
          break;
        v26 = &unk_31E236;
        goto LABEL_85;
      case 4:
        if (*(_DWORD *)(*(_QWORD *)(a1 + 40) + 8) > v24)
          break;
        v27 = &unk_31E239;
LABEL_53:
        LODWORD(v28) = 1;
        v6 = slice_from_s(a1, 1, v27);
        if ((v6 & 0x80000000) != 0)
          return v6;
        goto LABEL_159;
      case 5:
        if (*(_DWORD *)(*(_QWORD *)(a1 + 40) + 8) > v24)
          break;
        v26 = &unk_31E23A;
        goto LABEL_85;
      case 6:
        if (**(_DWORD **)(a1 + 40) > v24)
          break;
        v6 = slice_del(a1);
        if ((v6 & 0x80000000) != 0)
          return v6;
        *(_DWORD *)(a1 + 24) = *(_DWORD *)(a1 + 8);
        v29 = find_among_b(a1, (uint64_t)&unk_42F790, 6);
        if (!v29)
          goto LABEL_96;
        v30 = *(_DWORD *)(a1 + 8);
        *(_DWORD *)(a1 + 20) = v30;
        switch(v29)
        {
          case 1:
            if (*(_DWORD *)(*(_QWORD *)(a1 + 40) + 8) > v30)
              goto LABEL_96;
            v6 = slice_del(a1);
            if ((v6 & 0x80000000) != 0)
              return v6;
            *(_DWORD *)(a1 + 24) = *(_DWORD *)(a1 + 8);
            if (!eq_s_b(a1, 2, &unk_31E23D))
              goto LABEL_96;
            v30 = *(_DWORD *)(a1 + 8);
            *(_DWORD *)(a1 + 20) = v30;
            break;
          case 2:
            v99 = *(_QWORD *)(a1 + 40);
            if (*(_DWORD *)(v99 + 8) <= v30)
              goto LABEL_95;
            if (*(_DWORD *)(v99 + 4) > v30)
              goto LABEL_96;
            v26 = &unk_31E23F;
            goto LABEL_85;
          case 3:
            goto LABEL_231;
          case 4:
            if (**(_DWORD **)(a1 + 40) > v30)
              goto LABEL_96;
            v27 = &unk_31E242;
            goto LABEL_53;
          default:
            goto LABEL_96;
        }
        goto LABEL_231;
      case 7:
        if (*(_DWORD *)(*(_QWORD *)(a1 + 40) + 8) > v24)
          break;
        v6 = slice_del(a1);
        if ((v6 & 0x80000000) != 0)
          return v6;
        v31 = *(int *)(a1 + 8);
        *(_DWORD *)(a1 + 24) = v31;
        v32 = v31 - 1;
        if ((int)v32 <= *(_DWORD *)(a1 + 16))
          goto LABEL_96;
        v33 = *(_BYTE *)(*(_QWORD *)a1 + v32);
        if ((v33 & 0xE0) != 0x60)
          goto LABEL_96;
        if (((0x401008u >> v33) & 1) == 0)
          goto LABEL_96;
        v34 = find_among_b(a1, (uint64_t)&unk_42F850, 3);
        if (!v34)
          goto LABEL_96;
        v30 = *(_DWORD *)(a1 + 8);
        *(_DWORD *)(a1 + 20) = v30;
        switch(v34)
        {
          case 3:
LABEL_231:
            if (*(_DWORD *)(*(_QWORD *)(a1 + 40) + 8) > v30)
              goto LABEL_96;
            break;
          case 2:
            if (*(_DWORD *)(*(_QWORD *)(a1 + 40) + 8) > v30)
            {
              v26 = &unk_31E246;
              goto LABEL_85;
            }
            break;
          case 1:
            if (*(_DWORD *)(*(_QWORD *)(a1 + 40) + 8) > v30)
            {
              v26 = &unk_31E243;
LABEL_85:
              v37 = a1;
              v38 = 3;
LABEL_86:
              v6 = slice_from_s(v37, v38, v26);
              if ((v6 & 0x80000000) != 0)
                return v6;
LABEL_96:
              LODWORD(v28) = 1;
              goto LABEL_159;
            }
            break;
          default:
            goto LABEL_96;
        }
LABEL_95:
        v6 = slice_del(a1);
        if ((v6 & 0x80000000) != 0)
          return v6;
        goto LABEL_96;
      case 8:
        if (*(_DWORD *)(*(_QWORD *)(a1 + 40) + 8) > v24)
          break;
        v6 = slice_del(a1);
        if ((v6 & 0x80000000) != 0)
          return v6;
        *(_DWORD *)(a1 + 24) = *(_DWORD *)(a1 + 8);
        if (!eq_s_b(a1, 2, &unk_31E249))
          goto LABEL_96;
        v35 = *(_DWORD *)(a1 + 8);
        *(_DWORD *)(a1 + 20) = v35;
        if (*(_DWORD *)(*(_QWORD *)(a1 + 40) + 8) > v35)
          goto LABEL_96;
        v6 = slice_del(a1);
        if ((v6 & 0x80000000) != 0)
          return v6;
        *(_DWORD *)(a1 + 24) = *(_DWORD *)(a1 + 8);
        if (!eq_s_b(a1, 2, &unk_31E24B))
          goto LABEL_96;
        v36 = *(_DWORD *)(a1 + 8);
        *(_DWORD *)(a1 + 20) = v36;
        if (*(_DWORD *)(*(_QWORD *)(a1 + 40) + 8) <= v36)
          goto LABEL_95;
        v26 = &unk_31E24D;
        goto LABEL_85;
      case 9:
        v26 = &unk_31E250;
        goto LABEL_85;
      case 10:
        if (*(_DWORD *)(*(_QWORD *)(a1 + 40) + 4) > v24)
          break;
        v26 = &unk_31E253;
        v37 = a1;
        v38 = 2;
        goto LABEL_86;
      case 11:
        v39 = *(_QWORD *)(a1 + 40);
        if (*(_DWORD *)(v39 + 8) <= v24)
          goto LABEL_95;
        if (*(_DWORD *)(v39 + 4) > v24)
          break;
        v26 = &unk_31E255;
        goto LABEL_85;
      case 12:
        if (*(_DWORD *)(*(_QWORD *)(a1 + 40) + 4) > v24
          || out_grouping_b_U(a1, (uint64_t)&unk_31E209, 97, 251, 0))
        {
          break;
        }
        goto LABEL_95;
      case 13:
        if (**(_DWORD **)(a1 + 40) > v24)
          break;
        v40 = &unk_31E258;
        goto LABEL_101;
      case 14:
        if (**(_DWORD **)(a1 + 40) > v24)
          break;
        v40 = &unk_31E25B;
LABEL_101:
        v41 = slice_from_s(a1, 3, v40);
        goto LABEL_102;
      case 15:
        v44 = *(_DWORD *)(a1 + 12);
        if (in_grouping_b_U(a1, (uint64_t)&unk_31E209, 97, 251, 0)
          || **(_DWORD **)(a1 + 40) > *(_DWORD *)(a1 + 8))
        {
          break;
        }
        *(_DWORD *)(a1 + 8) = v24 - v44 + *(_DWORD *)(a1 + 12);
        v41 = slice_del(a1);
LABEL_102:
        v42 = v41 & (v41 >> 31);
        if (v41 >= 0)
          v28 = 1;
        else
          v28 = v42;
        if ((v41 & 0x80000000) == 0)
          goto LABEL_111;
        if ((v42 & 0x80000000) == 0)
          goto LABEL_159;
        v43 = v42 >> 31;
        goto LABEL_145;
      default:
        goto LABEL_96;
    }
  }
  LODWORD(v28) = 1;
LABEL_111:
  v45 = *(_DWORD *)(a1 + 12);
  *(_DWORD *)(a1 + 8) = v45;
  v46 = *(int **)(a1 + 40);
  v47 = *v46;
  if (v45 >= *v46)
  {
    v48 = *(_DWORD *)(a1 + 16);
    *(_DWORD *)(a1 + 16) = v47;
    *(_DWORD *)(a1 + 24) = v45;
    if (v45 <= v47
      || (v49 = *(_BYTE *)(v45 + *(_QWORD *)a1 - 1), (v49 & 0xE0) != 0x60)
      || ((0x41C0222u >> v49) & 1) == 0)
    {
      v50 = 0;
      goto LABEL_116;
    }
    v50 = find_among_b(a1, (uint64_t)&unk_42F8B0, 35);
    if (!v50)
      goto LABEL_116;
    *(_DWORD *)(a1 + 20) = *(_DWORD *)(a1 + 8);
    if (v50 != 1)
      goto LABEL_153;
    v68 = out_grouping_b_U(a1, (uint64_t)&unk_31E209, 97, 251, 0);
    v50 = 0;
    if (v68)
    {
LABEL_116:
      *(_DWORD *)(a1 + 16) = v48;
    }
    else
    {
      v50 = slice_del(a1);
      if ((v50 & 0x80000000) == 0)
      {
LABEL_153:
        v50 = 1;
        goto LABEL_116;
      }
    }
    if (v50 >= 0)
      v51 = v28;
    else
      v51 = v50;
    v43 = v50 >> 31;
    if (v50)
      v28 = v51;
    else
      v28 = v28;
    if (v50)
      v52 = v50 >> 31;
    else
      v52 = 6;
    if (!v52)
      goto LABEL_159;
    if (v52 == 6)
    {
      v45 = *(_DWORD *)(a1 + 12);
      v46 = *(int **)(a1 + 40);
      goto LABEL_129;
    }
LABEL_145:
    if (!v43)
    {
LABEL_159:
      v71 = *(_DWORD *)(a1 + 12);
      *(_DWORD *)(a1 + 8) = v71;
      *(_DWORD *)(a1 + 24) = v71;
      if (eq_s_b(a1, 1, &unk_31E204))
      {
        *(_DWORD *)(a1 + 20) = *(_DWORD *)(a1 + 8);
        v72 = &unk_31E205;
        goto LABEL_163;
      }
      *(_DWORD *)(a1 + 8) = *(_DWORD *)(a1 + 12);
      if (eq_s_b(a1, 2, &unk_31E206))
      {
        *(_DWORD *)(a1 + 20) = *(_DWORD *)(a1 + 8);
        v72 = &unk_31E208;
LABEL_163:
        v6 = slice_from_s(a1, 1, v72);
        if ((v6 & 0x80000000) != 0)
          return v6;
      }
      goto LABEL_172;
    }
    return v28;
  }
LABEL_129:
  *(_DWORD *)(a1 + 8) = v45;
  v53 = *v46;
  if (v45 >= v53)
  {
    v54 = *(_DWORD *)(a1 + 16);
    *(_DWORD *)(a1 + 16) = v53;
    *(_DWORD *)(a1 + 24) = v45;
    v55 = find_among_b(a1, (uint64_t)&unk_42FD10, 38);
    if (!v55)
      goto LABEL_135;
    v56 = *(_DWORD *)(a1 + 8);
    *(_DWORD *)(a1 + 20) = v56;
    switch(v55)
    {
      case 3:
        v6 = slice_del(a1);
        if ((v6 & 0x80000000) != 0)
          return v6;
        v70 = *(_DWORD *)(a1 + 8);
        v69 = *(_DWORD *)(a1 + 12);
        *(_DWORD *)(a1 + 24) = v70;
        if (eq_s_b(a1, 1, &unk_31E3F6))
        {
          *(_DWORD *)(a1 + 20) = *(_DWORD *)(a1 + 8);
          goto LABEL_157;
        }
        *(_DWORD *)(a1 + 8) = v70 - v69 + *(_DWORD *)(a1 + 12);
        break;
      case 2:
        goto LABEL_157;
      case 1:
        if (*(_DWORD *)(*(_QWORD *)(a1 + 40) + 8) > v56)
        {
LABEL_135:
          *(_DWORD *)(a1 + 16) = v54;
          v45 = *(_DWORD *)(a1 + 12);
          goto LABEL_136;
        }
LABEL_157:
        v6 = slice_del(a1);
        if ((v6 & 0x80000000) != 0)
          return v6;
        break;
    }
    *(_DWORD *)(a1 + 16) = v54;
    goto LABEL_159;
  }
LABEL_136:
  *(_DWORD *)(a1 + 8) = v45;
  *(_DWORD *)(a1 + 24) = v45;
  if (eq_s_b(a1, 1, &unk_31E492)
    && (v57 = *(_DWORD *)(a1 + 8),
        v58 = *(_DWORD *)(a1 + 12),
        *(_DWORD *)(a1 + 20) = v57,
        !out_grouping_b_U(a1, (uint64_t)&unk_31E493, 97, 232, 0)))
  {
    *(_DWORD *)(a1 + 8) = v57 - v58 + *(_DWORD *)(a1 + 12);
    v6 = slice_del(a1);
    if ((v6 & 0x80000000) != 0)
      return v6;
    v59 = *(_DWORD *)(a1 + 8);
  }
  else
  {
    v59 = *(_DWORD *)(a1 + 12);
    *(_DWORD *)(a1 + 8) = v59;
  }
  v60 = **(_DWORD **)(a1 + 40);
  if (v59 >= v60)
  {
    v61 = *(_DWORD *)(a1 + 16);
    *(_DWORD *)(a1 + 16) = v60;
    *(_DWORD *)(a1 + 8) = v59;
    *(_DWORD *)(a1 + 24) = v59;
    v62 = find_among_b(a1, (uint64_t)&unk_4301D0, 7);
    if (v62)
    {
      v63 = *(_DWORD *)(a1 + 8);
      *(_DWORD *)(a1 + 20) = v63;
      switch(v62)
      {
        case 1:
          if (*(_DWORD *)(*(_QWORD *)(a1 + 40) + 8) > v63)
            break;
          v64 = *(_DWORD *)(a1 + 12);
          if (eq_s_b(a1, 1, &unk_31E4A4))
            goto LABEL_170;
          *(_DWORD *)(a1 + 8) = v63 - v64 + *(_DWORD *)(a1 + 12);
          v65 = &unk_31E4A5;
          v66 = a1;
          v67 = 1;
LABEL_169:
          if (!eq_s_b(v66, v67, v65))
            break;
LABEL_170:
          v6 = slice_del(a1);
          if ((v6 & 0x80000000) == 0)
            break;
          return v6;
        case 2:
          v6 = slice_from_s(a1, 1, &unk_31E4A6);
          if ((v6 & 0x80000000) != 0)
            return v6;
          break;
        case 3:
          goto LABEL_170;
        case 4:
          v65 = &unk_31E4A7;
          v66 = a1;
          v67 = 2;
          goto LABEL_169;
        default:
          break;
      }
    }
    *(_DWORD *)(a1 + 16) = v61;
  }
LABEL_172:
  v74 = *(_DWORD *)(a1 + 16);
  v75 = *(int *)(a1 + 12);
  *(_DWORD *)(a1 + 8) = v75;
  if ((int)v75 - 2 <= v74)
    goto LABEL_190;
  v76 = *(_BYTE *)(v75 + *(_QWORD *)a1 - 1);
  if ((v76 & 0xE0) != 0x60)
    goto LABEL_190;
  if (((0x105000u >> v76) & 1) == 0)
    goto LABEL_190;
  if (!find_among_b(a1, (uint64_t)&unk_4302B0, 5))
    goto LABEL_190;
  v77 = *(unsigned int *)(a1 + 12);
  v78 = *(unsigned int *)(a1 + 16);
  *(_DWORD *)(a1 + 8) = v77;
  *(_DWORD *)(a1 + 24) = v77;
  v79 = skip_utf8(*(_QWORD *)a1, v77, v78, 0, -1);
  if (v79 < 0)
    goto LABEL_190;
  *(_DWORD *)(a1 + 8) = v79;
  *(_DWORD *)(a1 + 20) = v79;
  v80 = slice_del(a1);
  v81 = v80 & (v80 >> 31);
  if (v80 >= 0)
    v81 = 1;
  v82 = v81 >= 0 ? v28 : v81;
  v28 = v81 ? v82 : v28;
  v83 = v81 ? v81 >> 31 : 13;
  if (v83 != 13 && v83)
  {
    if (v81 < 0)
      return v28;
  }
  else
  {
LABEL_190:
    *(_DWORD *)(a1 + 8) = *(_DWORD *)(a1 + 12);
  }
  v84 = 2;
  do
    --v84;
  while (!out_grouping_b_U(a1, (uint64_t)&unk_31E209, 97, 251, 0));
  if (v84 > 0)
    goto LABEL_194;
  v93 = *(_DWORD *)(a1 + 8);
  v94 = *(_DWORD *)(a1 + 12);
  *(_DWORD *)(a1 + 24) = v93;
  if (!eq_s_b(a1, 2, &unk_31E4CF))
  {
    *(_DWORD *)(a1 + 8) = v93 - v94 + *(_DWORD *)(a1 + 12);
    if (!eq_s_b(a1, 2, &unk_31E4D1))
      goto LABEL_194;
  }
  *(_DWORD *)(a1 + 20) = *(_DWORD *)(a1 + 8);
  v95 = slice_from_s(a1, 1, &unk_31E4D3);
  v96 = v95 & (v95 >> 31);
  if (v95 >= 0)
    v96 = 1;
  v97 = v96 >> 31;
  if (!v96)
    v97 = 14;
  if (!v97
    || v97 == 14
    || (v96 >= 0 ? (v98 = v28) : (v98 = v96), v96 ? (v28 = v98) : (v28 = v28), (v96 & 0x80000000) == 0))
  {
LABEL_194:
    v85 = *(unsigned int *)(a1 + 16);
    *(_DWORD *)(a1 + 8) = v85;
    for (i = v85; ; i = *(unsigned int *)(a1 + 8))
    {
      *(_DWORD *)(a1 + 20) = i;
      v87 = *(unsigned int *)(a1 + 12);
      if ((int)i < (int)v87
        && (v88 = *(_BYTE *)(*(_QWORD *)a1 + (int)i), (v88 & 0xE0) == 0x40)
        && ((0x2200200u >> v88) & 1) != 0)
      {
        among = find_among(a1, (uint64_t)&unk_430350, 4);
        if (!among)
          goto LABEL_210;
        i = *(unsigned int *)(a1 + 8);
        *(_DWORD *)(a1 + 24) = i;
        switch(among)
        {
          case 1:
            v91 = a1;
            v92 = &unk_31E4D4;
            break;
          case 2:
            v91 = a1;
            v92 = &unk_31E4D5;
            break;
          case 3:
            v91 = a1;
            v92 = &unk_31E4D6;
            break;
          case 4:
            v87 = *(unsigned int *)(a1 + 12);
            goto LABEL_199;
          default:
            continue;
        }
        v6 = slice_from_s(v91, 1, v92);
        if ((v6 & 0x80000000) != 0)
          return v6;
      }
      else
      {
        *(_DWORD *)(a1 + 24) = i;
LABEL_199:
        v89 = skip_utf8(*(_QWORD *)a1, i, 0, v87, 1);
        if (v89 < 0)
        {
LABEL_210:
          *(_DWORD *)(a1 + 8) = v85;
          return 1;
        }
        *(_DWORD *)(a1 + 8) = v89;
      }
    }
  }
  return v28;
}

_QWORD *french_UTF_8_create_env()
{
  return SN_create_env(0, 3, 0);
}

void french_UTF_8_close_env(uint64_t a1)
{
  SN_close_env(a1, 0);
}

uint64_t german_UTF_8_stem(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  void *v9;
  _DWORD *v10;
  unsigned int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  _DWORD *v16;
  int v17;
  int v18;
  uint64_t v19;
  char v20;
  int among_b;
  int v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  int v27;
  int v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  int v33;
  int v34;
  int v35;
  int among;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  int v40;
  int v41;
  int v42;
  int v43;
  int v44;
  int v45;
  int v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  int v50;
  int v51;

  v2 = *(unsigned int *)(a1 + 8);
  v3 = v2;
  while (1)
  {
    while (1)
    {
      *(_DWORD *)(a1 + 20) = v3;
      if (!eq_s(a1, 2, &unk_31E4E4))
        break;
      *(_DWORD *)(a1 + 24) = *(_DWORD *)(a1 + 8);
      result = slice_from_s(a1, 2, &unk_31E4E6);
      if ((result & 0x80000000) != 0)
        return result;
      v3 = *(unsigned int *)(a1 + 8);
    }
    *(_DWORD *)(a1 + 8) = v3;
    v5 = skip_utf8(*(_QWORD *)a1, v3, 0, *(unsigned int *)(a1 + 12), 1);
    if ((v5 & 0x80000000) != 0)
      break;
    v3 = v5;
    *(_DWORD *)(a1 + 8) = v5;
  }
  v6 = v2;
  do
  {
    while (1)
    {
      *(_DWORD *)(a1 + 8) = v6;
      if (in_grouping_U(a1, (uint64_t)&unk_31E4E8, 97, 252, 0))
        break;
      v7 = *(_DWORD *)(a1 + 8);
      *(_DWORD *)(a1 + 20) = v7;
      if (eq_s(a1, 1, &unk_31E4FC))
      {
        *(_DWORD *)(a1 + 24) = *(_DWORD *)(a1 + 8);
        if (!in_grouping_U(a1, (uint64_t)&unk_31E4E8, 97, 252, 0))
        {
          v8 = a1;
          v9 = &unk_31E4FD;
          goto LABEL_15;
        }
      }
      *(_DWORD *)(a1 + 8) = v7;
      if (!eq_s(a1, 1, &unk_31E4FE))
        break;
      *(_DWORD *)(a1 + 24) = *(_DWORD *)(a1 + 8);
      if (in_grouping_U(a1, (uint64_t)&unk_31E4E8, 97, 252, 0))
        break;
      v8 = a1;
      v9 = &unk_31E4FF;
LABEL_15:
      result = slice_from_s(v8, 1, v9);
      if ((result & 0x80000000) != 0)
        return result;
    }
    *(_DWORD *)(a1 + 8) = v6;
    v6 = skip_utf8(*(_QWORD *)a1, v6, 0, *(unsigned int *)(a1 + 12), 1);
  }
  while ((v6 & 0x80000000) == 0);
  *(_DWORD *)(a1 + 8) = v2;
  v10 = *(_DWORD **)(a1 + 40);
  *v10 = *(_DWORD *)(a1 + 12);
  v10[1] = *(_DWORD *)(a1 + 12);
  v11 = *(_DWORD *)(a1 + 8);
  v12 = skip_utf8(*(_QWORD *)a1, v11, 0, *(unsigned int *)(a1 + 12), 3);
  if ((v12 & 0x80000000) == 0)
  {
    *(_DWORD *)(*(_QWORD *)(a1 + 40) + 8) = v12;
    *(_DWORD *)(a1 + 8) = v11;
    v13 = out_grouping_U(a1, (uint64_t)&unk_31E4E8, 97, 252, 1);
    if ((v13 & 0x80000000) == 0)
    {
      *(_DWORD *)(a1 + 8) += v13;
      v14 = in_grouping_U(a1, (uint64_t)&unk_31E4E8, 97, 252, 1);
      if ((v14 & 0x80000000) == 0)
      {
        v15 = *(_DWORD *)(a1 + 8) + v14;
        *(_DWORD *)(a1 + 8) = v15;
        v16 = *(_DWORD **)(a1 + 40);
        if (v15 <= v16[2])
          v15 = v16[2];
        *v16 = v15;
        v17 = out_grouping_U(a1, (uint64_t)&unk_31E4E8, 97, 252, 1);
        if ((v17 & 0x80000000) == 0)
        {
          *(_DWORD *)(a1 + 8) += v17;
          v18 = in_grouping_U(a1, (uint64_t)&unk_31E4E8, 97, 252, 1);
          if ((v18 & 0x80000000) == 0)
            *(_DWORD *)(*(_QWORD *)(a1 + 40) + 4) = *(_DWORD *)(a1 + 8) + v18;
        }
      }
    }
  }
  *(_DWORD *)(a1 + 16) = v2;
  v19 = *(int *)(a1 + 12);
  *(_DWORD *)(a1 + 8) = v19;
  *(_DWORD *)(a1 + 24) = v19;
  if ((int)v19 <= (int)v2)
    goto LABEL_41;
  v20 = *(_BYTE *)(v19 + *(_QWORD *)a1 - 1);
  if ((v20 & 0xE0) != 0x60)
    goto LABEL_41;
  if (((0xC6020u >> v20) & 1) == 0)
    goto LABEL_41;
  among_b = find_among_b(a1, (uint64_t)&unk_4303D0, 7);
  if (!among_b)
    goto LABEL_41;
  v22 = *(_DWORD *)(a1 + 8);
  *(_DWORD *)(a1 + 20) = v22;
  if (**(_DWORD **)(a1 + 40) > v22)
    goto LABEL_41;
  switch(among_b)
  {
    case 3:
      if (!in_grouping_b_U(a1, (uint64_t)&unk_31E504, 98, 116, 0))
        goto LABEL_40;
      goto LABEL_41;
    case 2:
      result = slice_del(a1);
      if ((result & 0x80000000) == 0)
      {
        *(_DWORD *)(a1 + 24) = *(_DWORD *)(a1 + 8);
        if (eq_s_b(a1, 1, &unk_31E500))
        {
          *(_DWORD *)(a1 + 20) = *(_DWORD *)(a1 + 8);
          if (eq_s_b(a1, 3, &unk_31E501))
            goto LABEL_40;
        }
        goto LABEL_41;
      }
      break;
    case 1:
LABEL_40:
      result = slice_del(a1);
      if ((result & 0x80000000) == 0)
      {
LABEL_41:
        v23 = *(_DWORD *)(a1 + 16);
        v24 = *(int *)(a1 + 12);
        *(_DWORD *)(a1 + 8) = v24;
        *(_DWORD *)(a1 + 24) = v24;
        v25 = v24 - 1;
        if ((int)v25 <= v23)
          goto LABEL_51;
        v26 = *(_BYTE *)(*(_QWORD *)a1 + v25);
        if ((v26 & 0xE0) != 0x60)
          goto LABEL_51;
        if (((0x144000u >> v26) & 1) == 0)
          goto LABEL_51;
        v27 = find_among_b(a1, (uint64_t)&unk_4304B0, 4);
        if (!v27)
          goto LABEL_51;
        v28 = *(_DWORD *)(a1 + 8);
        *(_DWORD *)(a1 + 20) = v28;
        if (**(_DWORD **)(a1 + 40) > v28)
          goto LABEL_51;
        if (v27 != 2)
        {
          if (v27 == 1)
            goto LABEL_48;
          goto LABEL_51;
        }
        if (in_grouping_b_U(a1, (uint64_t)&unk_31E507, 98, 116, 0))
          goto LABEL_51;
        v51 = skip_utf8(*(_QWORD *)a1, *(unsigned int *)(a1 + 8), *(unsigned int *)(a1 + 16), *(unsigned int *)(a1 + 12), -3);
        if (v51 < 0)
          goto LABEL_51;
        *(_DWORD *)(a1 + 8) = v51;
LABEL_48:
        result = slice_del(a1);
        if ((result & 0x80000000) == 0)
        {
LABEL_51:
          v29 = *(_DWORD *)(a1 + 16);
          v30 = *(int *)(a1 + 12);
          *(_DWORD *)(a1 + 8) = v30;
          *(_DWORD *)(a1 + 24) = v30;
          v31 = v30 - 1;
          if ((int)v31 > v29)
          {
            v32 = *(_BYTE *)(*(_QWORD *)a1 + v31);
            if ((v32 & 0xE0) == 0x60 && ((0x100990u >> v32) & 1) != 0)
            {
              v33 = find_among_b(a1, (uint64_t)&unk_430530, 8);
              if (v33)
              {
                v34 = *(_DWORD *)(a1 + 8);
                *(_DWORD *)(a1 + 20) = v34;
                if (*(_DWORD *)(*(_QWORD *)(a1 + 40) + 4) <= v34)
                {
                  switch(v33)
                  {
                    case 1:
                      result = slice_del(a1);
                      if ((result & 0x80000000) != 0)
                        return result;
                      *(_DWORD *)(a1 + 24) = *(_DWORD *)(a1 + 8);
                      if (!eq_s_b(a1, 2, &unk_31E50A))
                        break;
                      v41 = *(_DWORD *)(a1 + 8);
                      v42 = *(_DWORD *)(a1 + 12);
                      *(_DWORD *)(a1 + 20) = v41;
                      if (eq_s_b(a1, 1, &unk_31E50C))
                        break;
                      v43 = *(_DWORD *)(a1 + 12) + v41 - v42;
                      *(_DWORD *)(a1 + 8) = v43;
LABEL_87:
                      if (*(_DWORD *)(*(_QWORD *)(a1 + 40) + 4) > v43)
                        break;
LABEL_88:
                      result = slice_del(a1);
                      if ((result & 0x80000000) != 0)
                        return result;
                      break;
                    case 2:
                      v44 = *(_DWORD *)(a1 + 12);
                      if (eq_s_b(a1, 1, &unk_31E50D))
                        break;
                      *(_DWORD *)(a1 + 8) = v34 - v44 + *(_DWORD *)(a1 + 12);
                      goto LABEL_88;
                    case 3:
                      result = slice_del(a1);
                      if ((result & 0x80000000) != 0)
                        return result;
                      v45 = *(_DWORD *)(a1 + 8);
                      v46 = v45 - *(_DWORD *)(a1 + 12);
                      *(_DWORD *)(a1 + 24) = v45;
                      if (eq_s_b(a1, 2, &unk_31E50E)
                        || (*(_DWORD *)(a1 + 8) = *(_DWORD *)(a1 + 12) + v46, eq_s_b(a1, 2, &unk_31E510)))
                      {
                        v47 = *(_DWORD *)(a1 + 8);
                        *(_DWORD *)(a1 + 20) = v47;
                        if (**(_DWORD **)(a1 + 40) <= v47)
                          goto LABEL_88;
                      }
                      *(_DWORD *)(a1 + 8) = *(_DWORD *)(a1 + 12) + v46;
                      break;
                    case 4:
                      result = slice_del(a1);
                      if ((result & 0x80000000) != 0)
                        return result;
                      v48 = *(int *)(a1 + 8);
                      *(_DWORD *)(a1 + 24) = v48;
                      v49 = v48 - 1;
                      if ((int)v49 > *(_DWORD *)(a1 + 16)
                        && *(unsigned __int8 *)(*(_QWORD *)a1 + v49) - 103 <= 1)
                      {
                        v50 = find_among_b(a1, (uint64_t)&unk_430630, 2);
                        if (v50)
                        {
                          v43 = *(_DWORD *)(a1 + 8);
                          *(_DWORD *)(a1 + 20) = v43;
                          if (v50 == 1)
                            goto LABEL_87;
                        }
                      }
                      break;
                    default:
                      break;
                  }
                }
              }
            }
          }
          v35 = *(_DWORD *)(a1 + 16);
          *(_DWORD *)(a1 + 8) = v35;
          *(_DWORD *)(a1 + 20) = v35;
          among = find_among(a1, (uint64_t)&unk_430670, 6);
          if (among)
          {
            while (2)
            {
              v37 = *(unsigned int *)(a1 + 8);
              *(_DWORD *)(a1 + 24) = v37;
              switch(among)
              {
                case 1:
                  v38 = a1;
                  v39 = &unk_31E548;
                  goto LABEL_63;
                case 2:
                  v38 = a1;
                  v39 = &unk_31E549;
                  goto LABEL_63;
                case 3:
                  v38 = a1;
                  v39 = &unk_31E54A;
                  goto LABEL_63;
                case 4:
                  v38 = a1;
                  v39 = &unk_31E54B;
                  goto LABEL_63;
                case 5:
                  v38 = a1;
                  v39 = &unk_31E54C;
LABEL_63:
                  result = slice_from_s(v38, 1, v39);
                  if ((result & 0x80000000) == 0)
                    goto LABEL_64;
                  return result;
                case 6:
                  v40 = skip_utf8(*(_QWORD *)a1, v37, 0, *(unsigned int *)(a1 + 12), 1);
                  if (v40 < 0)
                    break;
                  *(_DWORD *)(a1 + 8) = v40;
                  goto LABEL_64;
                default:
LABEL_64:
                  *(_DWORD *)(a1 + 20) = *(_DWORD *)(a1 + 8);
                  among = find_among(a1, (uint64_t)&unk_430670, 6);
                  if (!among)
                    break;
                  continue;
              }
              break;
            }
          }
          *(_DWORD *)(a1 + 8) = v35;
          return 1;
        }
      }
      break;
    default:
      goto LABEL_41;
  }
  return result;
}

_QWORD *german_UTF_8_create_env()
{
  return SN_create_env(0, 3, 0);
}

void german_UTF_8_close_env(uint64_t a1)
{
  SN_close_env(a1, 0);
}

uint64_t hungarian_UTF_8_stem(uint64_t a1)
{
  int v2;
  int v3;
  uint64_t v4;
  int v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  int among_b;
  int v14;
  int v15;
  int v16;
  unsigned int v17;
  unsigned int v18;
  int v19;
  int v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  int v26;
  void *v27;
  int v28;
  int v29;
  int v30;
  int v31;
  int v32;
  int v33;
  void *v34;
  int v35;
  int v36;
  int v37;
  int v38;
  int v39;
  int v40;
  uint64_t v41;
  int v42;
  int v43;
  int v44;
  int v45;
  int v46;
  unsigned int v47;
  int v48;
  int v49;
  int v50;
  int v51;
  int v52;
  unsigned int v53;
  int v54;
  int v55;
  int v56;
  int v57;
  int v58;
  unsigned int v59;
  int v60;
  int v61;
  int v62;
  unsigned int v63;
  int v64;
  int v65;
  unsigned int v66;
  unsigned int v67;
  void *v68;

  v2 = *(_DWORD *)(a1 + 8);
  **(_DWORD **)(a1 + 40) = *(_DWORD *)(a1 + 12);
  v3 = *(_DWORD *)(a1 + 8);
  if (!in_grouping_U(a1, (uint64_t)&unk_31E59A, 97, 252, 0)
    && (in_grouping_U(a1, (uint64_t)&unk_31E59A, 97, 252, 1) & 0x80000000) == 0)
  {
    v7 = *(unsigned int *)(a1 + 12);
    v8 = *(int *)(a1 + 8);
    v9 = *(_QWORD *)a1;
    if ((int)v8 + 1 < (int)v7)
    {
      v10 = *(_BYTE *)(v9 + v8 + 1);
      if ((v10 & 0xE0) == 0x60 && ((0x6080000u >> v10) & 1) != 0)
      {
        if (find_among(a1, (uint64_t)&unk_430730, 8))
        {
          v6 = *(_DWORD *)(a1 + 8);
          goto LABEL_14;
        }
        v9 = *(_QWORD *)a1;
        v7 = *(unsigned int *)(a1 + 12);
      }
    }
    *(_DWORD *)(a1 + 8) = v8;
    v6 = skip_utf8(v9, v8, 0, v7, 1);
    if ((v6 & 0x80000000) == 0)
      goto LABEL_14;
  }
  *(_DWORD *)(a1 + 8) = v3;
  LODWORD(v4) = 0;
  if (out_grouping_U(a1, (uint64_t)&unk_31E59A, 97, 252, 0))
    goto LABEL_15;
  v5 = out_grouping_U(a1, (uint64_t)&unk_31E59A, 97, 252, 1);
  if (v5 < 0)
  {
    LODWORD(v4) = 0;
    goto LABEL_15;
  }
  v6 = *(_DWORD *)(a1 + 8) + v5;
LABEL_14:
  **(_DWORD **)(a1 + 40) = v6;
  LODWORD(v4) = 1;
LABEL_15:
  *(_DWORD *)(a1 + 16) = v2;
  v11 = *(int *)(a1 + 12);
  *(_DWORD *)(a1 + 8) = v11;
  *(_DWORD *)(a1 + 24) = v11;
  v12 = v11 - 1;
  if ((int)v12 <= v2)
    goto LABEL_37;
  if (*(_BYTE *)(*(_QWORD *)a1 + v12) != 108)
    goto LABEL_37;
  among_b = find_among_b(a1, (uint64_t)&unk_430830, 2);
  if (!among_b)
    goto LABEL_37;
  v14 = *(_DWORD *)(a1 + 8);
  *(_DWORD *)(a1 + 20) = v14;
  if (**(_DWORD **)(a1 + 40) > v14)
    goto LABEL_37;
  if ((among_b == 2 || among_b == 1) && !sub_219D04(a1))
    goto LABEL_37;
  v15 = slice_del(a1);
  if ((v15 & 0x80000000) == 0)
  {
    v16 = sub_219D98(a1);
    if (v16 >= 1)
      v15 = 1;
    else
      v15 = v16 & (v16 >> 31);
  }
  v17 = v15 >= 0 ? v4 : v15;
  v4 = v15 ? v17 : v4;
  v18 = v15 ? v15 >> 31 : 3;
  if (v18 != 3 && v18)
  {
    if (v15 < 0)
      return v4;
    v19 = *(_DWORD *)(a1 + 8);
    v20 = *(_DWORD *)(a1 + 12);
  }
  else
  {
LABEL_37:
    v19 = *(_DWORD *)(a1 + 12);
    *(_DWORD *)(a1 + 8) = v19;
    v20 = v19;
  }
  *(_DWORD *)(a1 + 24) = v19;
  if (find_among_b(a1, (uint64_t)&unk_430B50, 44))
  {
    v21 = *(_DWORD *)(a1 + 8);
    *(_DWORD *)(a1 + 20) = v21;
    if (**(_DWORD **)(a1 + 40) <= v21)
    {
      v22 = slice_del(a1);
      if ((v22 & 0x80000000) != 0)
        return v22;
      v23 = *(int *)(a1 + 8);
      *(_DWORD *)(a1 + 24) = v23;
      v24 = v23 - 1;
      if ((int)v24 > *(_DWORD *)(a1 + 16) && (*(unsigned __int8 *)(*(_QWORD *)a1 + v24) | 8) == 0xA9)
      {
        v25 = find_among_b(a1, (uint64_t)&unk_4310D0, 2);
        if (v25)
        {
          v26 = *(_DWORD *)(a1 + 8);
          *(_DWORD *)(a1 + 20) = v26;
          if (**(_DWORD **)(a1 + 40) <= v26)
          {
            if (v25 == 2)
            {
              v27 = &unk_31E68B;
            }
            else
            {
              if (v25 != 1)
                goto LABEL_52;
              v27 = &unk_31E68A;
            }
            v22 = slice_from_s(a1, 1, v27);
            if ((v22 & 0x80000000) != 0)
              return v22;
          }
        }
      }
    }
  }
LABEL_52:
  v28 = v19 - v20;
  v29 = *(_DWORD *)(a1 + 16);
  v30 = v28 + *(_DWORD *)(a1 + 12);
  *(_DWORD *)(a1 + 8) = v30;
  *(_DWORD *)(a1 + 24) = v30;
  if (v30 - 2 <= v29)
    goto LABEL_64;
  v31 = *(unsigned __int8 *)(*(_QWORD *)a1 + v30 - 1);
  if (v31 != 116 && v31 != 110)
    goto LABEL_64;
  v32 = find_among_b(a1, (uint64_t)&unk_431110, 3);
  if (!v32)
    goto LABEL_64;
  v33 = *(_DWORD *)(a1 + 8);
  *(_DWORD *)(a1 + 20) = v33;
  if (**(_DWORD **)(a1 + 40) > v33)
    goto LABEL_64;
  switch(v32)
  {
    case 3:
      v34 = &unk_31E692;
      goto LABEL_63;
    case 2:
      v34 = &unk_31E691;
LABEL_63:
      v22 = slice_from_s(a1, 1, v34);
      if ((v22 & 0x80000000) == 0)
        break;
      return v22;
    case 1:
      v34 = &unk_31E690;
      goto LABEL_63;
  }
LABEL_64:
  v35 = *(_DWORD *)(a1 + 16);
  v36 = v28 + *(_DWORD *)(a1 + 12);
  *(_DWORD *)(a1 + 8) = v36;
  *(_DWORD *)(a1 + 24) = v36;
  if (v36 - 3 > v35 && *(_BYTE *)(*(_QWORD *)a1 + v36 - 1) == 108)
  {
    v37 = find_among_b(a1, (uint64_t)&unk_431170, 6);
    if (v37)
    {
      v38 = *(_DWORD *)(a1 + 8);
      *(_DWORD *)(a1 + 20) = v38;
      if (**(_DWORD **)(a1 + 40) <= v38)
      {
        switch(v37)
        {
          case 1:
          case 2:
            v22 = slice_del(a1);
            if ((v22 & 0x80000000) == 0)
              goto LABEL_70;
            return v22;
          case 3:
            v68 = &unk_31E6A1;
            break;
          case 4:
            v68 = &unk_31E6A2;
            break;
          default:
            goto LABEL_70;
        }
        v22 = slice_from_s(a1, 1, v68);
        if ((v22 & 0x80000000) != 0)
          return v22;
      }
    }
  }
LABEL_70:
  v39 = *(_DWORD *)(a1 + 16);
  v40 = v28 + *(_DWORD *)(a1 + 12);
  *(_DWORD *)(a1 + 8) = v40;
  *(_DWORD *)(a1 + 24) = v40;
  v41 = v40 - 1;
  if ((int)v41 <= v39)
    goto LABEL_74;
  if ((*(unsigned __int8 *)(*(_QWORD *)a1 + v41) | 8) != 0xA9)
    goto LABEL_74;
  v42 = find_among_b(a1, (uint64_t)&unk_431230, 2);
  if (!v42)
    goto LABEL_74;
  v43 = *(_DWORD *)(a1 + 8);
  *(_DWORD *)(a1 + 20) = v43;
  if (**(_DWORD **)(a1 + 40) > v43)
    goto LABEL_74;
  if ((v42 == 2 || v42 == 1) && !sub_219D04(a1))
    goto LABEL_74;
  v64 = slice_del(a1);
  if ((v64 & 0x80000000) == 0)
  {
    v65 = sub_219D98(a1);
    if (v65 >= 1)
      v64 = 1;
    else
      v64 = v65 & (v65 >> 31);
  }
  v66 = v64 >= 0 ? v4 : v64;
  v4 = v64 ? v66 : v4;
  v67 = v64 ? v64 >> 31 : 7;
  if (v67 != 7 && v67)
  {
    if (v64 < 0)
      return v4;
    v45 = *(_DWORD *)(a1 + 8);
    v44 = *(_DWORD *)(a1 + 12);
  }
  else
  {
LABEL_74:
    v44 = *(_DWORD *)(a1 + 12);
    v45 = v28 + v44;
    *(_DWORD *)(a1 + 8) = v45;
  }
  v46 = sub_21989C(a1);
  if (v46 >= 0)
    v47 = v4;
  else
    v47 = v46;
  if (v46)
    v4 = v47;
  else
    v4 = v4;
  if (v46)
    v48 = v46 >> 31;
  else
    v48 = 8;
  if ((v48 | 8) == 8)
  {
    v49 = v45 - v44;
    v50 = *(_DWORD *)(a1 + 12);
    v51 = v49 + v50;
    *(_DWORD *)(a1 + 8) = v49 + v50;
  }
  else
  {
    if (v46 < 0)
      return v4;
    v51 = *(_DWORD *)(a1 + 8);
    v50 = *(_DWORD *)(a1 + 12);
  }
  v52 = sub_2199A0(a1);
  if (v52 >= 0)
    v53 = v4;
  else
    v53 = v52;
  if (v52)
    v4 = v53;
  else
    v4 = v4;
  if (v52)
    v54 = v52 >> 31;
  else
    v54 = 9;
  if (v54 != 9 && v54)
  {
    if (v52 < 0)
      return v4;
    v57 = *(_DWORD *)(a1 + 8);
    v56 = *(_DWORD *)(a1 + 12);
  }
  else
  {
    v55 = v51 - v50;
    v56 = *(_DWORD *)(a1 + 12);
    v57 = v55 + v56;
    *(_DWORD *)(a1 + 8) = v55 + v56;
  }
  v58 = sub_219AB4(a1);
  if (v58 >= 0)
    v59 = v4;
  else
    v59 = v58;
  if (v58)
    v4 = v59;
  else
    v4 = v4;
  if (v58)
    v60 = v58 >> 31;
  else
    v60 = 10;
  if (v60 != 10 && v60)
  {
    if (v58 < 0)
      return v4;
  }
  else
  {
    *(_DWORD *)(a1 + 8) = v57 - v56 + *(_DWORD *)(a1 + 12);
  }
  v61 = sub_219C14(a1);
  v62 = v61 >> 31;
  if (!v61)
    v62 = 11;
  if (!v62
    || v62 == 11
    || (v61 >= 0 ? (v63 = v4) : (v63 = v61), v61 ? (v4 = v63) : (v4 = v4), (v61 & 0x80000000) == 0))
  {
    *(_DWORD *)(a1 + 8) = *(_DWORD *)(a1 + 16);
    return 1;
  }
  return v4;
}

uint64_t sub_21989C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int v4;
  uint64_t result;
  int v6;
  void *v7;

  v1 = *(int *)(a1 + 8);
  *(_DWORD *)(a1 + 24) = v1;
  v2 = v1 - 1;
  if ((int)v2 <= *(_DWORD *)(a1 + 16))
    return 0;
  v4 = *(unsigned __int8 *)(*(_QWORD *)a1 + v2);
  if (v4 != 169 && v4 != 105)
    return 0;
  result = find_among_b(a1, (uint64_t)&unk_431270, 12);
  if (!(_DWORD)result)
    return result;
  v6 = *(_DWORD *)(a1 + 8);
  *(_DWORD *)(a1 + 20) = v6;
  if (**(_DWORD **)(a1 + 40) > v6)
    return 0;
  switch((int)result)
  {
    case 1:
    case 4:
    case 7:
    case 9:
      result = slice_del(a1);
      if ((result & 0x80000000) == 0)
        goto LABEL_17;
      return result;
    case 2:
      v7 = &unk_31E6C8;
      goto LABEL_16;
    case 3:
      v7 = &unk_31E6C9;
      goto LABEL_16;
    case 5:
      v7 = &unk_31E6CA;
      goto LABEL_16;
    case 6:
      v7 = &unk_31E6CB;
      goto LABEL_16;
    case 8:
      v7 = &unk_31E6CC;
LABEL_16:
      result = slice_from_s(a1, 1, v7);
      if ((result & 0x80000000) == 0)
        goto LABEL_17;
      return result;
    default:
LABEL_17:
      result = 1;
      break;
  }
  return result;
}

uint64_t sub_2199A0(uint64_t a1)
{
  uint64_t result;
  int v3;
  void *v4;

  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a1 + 8);
  result = find_among_b(a1, (uint64_t)&unk_4313F0, 31);
  if ((_DWORD)result)
  {
    v3 = *(_DWORD *)(a1 + 8);
    *(_DWORD *)(a1 + 20) = v3;
    if (**(_DWORD **)(a1 + 40) <= v3)
    {
      switch((int)result)
      {
        case 1:
        case 4:
        case 7:
        case 8:
        case 9:
        case 12:
        case 13:
        case 16:
        case 17:
        case 18:
          result = slice_del(a1);
          if ((result & 0x80000000) == 0)
            goto LABEL_6;
          return result;
        case 2:
          v4 = &unk_31E6FE;
          goto LABEL_18;
        case 3:
          v4 = &unk_31E6FF;
          goto LABEL_18;
        case 5:
          v4 = &unk_31E700;
          goto LABEL_18;
        case 6:
          v4 = &unk_31E701;
          goto LABEL_18;
        case 10:
          v4 = &unk_31E702;
          goto LABEL_18;
        case 11:
          v4 = &unk_31E703;
          goto LABEL_18;
        case 14:
          v4 = &unk_31E704;
          goto LABEL_18;
        case 15:
          v4 = &unk_31E705;
          goto LABEL_18;
        case 19:
          v4 = &unk_31E706;
          goto LABEL_18;
        case 20:
          v4 = &unk_31E707;
LABEL_18:
          result = slice_from_s(a1, 1, v4);
          if ((result & 0x80000000) != 0)
            return result;
          goto LABEL_6;
        default:
LABEL_6:
          result = 1;
          break;
      }
    }
    else
    {
      return 0;
    }
  }
  return result;
}

uint64_t sub_219AB4(uint64_t a1)
{
  uint64_t v1;
  char v3;
  uint64_t result;
  int v5;
  void *v6;

  v1 = *(int *)(a1 + 8);
  *(_DWORD *)(a1 + 24) = v1;
  if ((int)v1 <= *(_DWORD *)(a1 + 16))
    return 0;
  v3 = *(_BYTE *)(v1 + *(_QWORD *)a1 - 1);
  if ((v3 & 0xE0) != 0x60 || ((0x2A10u >> v3) & 1) == 0)
    return 0;
  result = find_among_b(a1, (uint64_t)&unk_4317D0, 42);
  if (!(_DWORD)result)
    return result;
  v5 = *(_DWORD *)(a1 + 8);
  *(_DWORD *)(a1 + 20) = v5;
  if (**(_DWORD **)(a1 + 40) > v5)
    return 0;
  switch((int)result)
  {
    case 1:
    case 4:
    case 5:
    case 6:
    case 9:
    case 10:
    case 11:
    case 14:
    case 15:
    case 16:
    case 17:
    case 20:
    case 21:
    case 24:
    case 25:
    case 26:
    case 29:
      result = slice_del(a1);
      if ((result & 0x80000000) == 0)
        goto LABEL_24;
      return result;
    case 2:
      v6 = &unk_31E758;
      goto LABEL_23;
    case 3:
      v6 = &unk_31E759;
      goto LABEL_23;
    case 7:
      v6 = &unk_31E75A;
      goto LABEL_23;
    case 8:
      v6 = &unk_31E75B;
      goto LABEL_23;
    case 12:
      v6 = &unk_31E75C;
      goto LABEL_23;
    case 13:
      v6 = &unk_31E75D;
      goto LABEL_23;
    case 18:
      v6 = &unk_31E75E;
      goto LABEL_23;
    case 19:
      v6 = &unk_31E75F;
      goto LABEL_23;
    case 22:
      v6 = &unk_31E760;
      goto LABEL_23;
    case 23:
      v6 = &unk_31E761;
      goto LABEL_23;
    case 27:
      v6 = &unk_31E762;
      goto LABEL_23;
    case 28:
      v6 = &unk_31E763;
LABEL_23:
      result = slice_from_s(a1, 1, v6);
      if ((result & 0x80000000) == 0)
        goto LABEL_24;
      return result;
    default:
LABEL_24:
      result = 1;
      break;
  }
  return result;
}

uint64_t sub_219C14(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  int v4;
  void *v5;

  v1 = *(int *)(a1 + 8);
  *(_DWORD *)(a1 + 24) = v1;
  if ((int)v1 <= *(_DWORD *)(a1 + 16) || *(_BYTE *)(v1 + *(_QWORD *)a1 - 1) != 107)
    return 0;
  result = find_among_b(a1, (uint64_t)&unk_431D10, 7);
  if (!(_DWORD)result)
    return result;
  v4 = *(_DWORD *)(a1 + 8);
  *(_DWORD *)(a1 + 20) = v4;
  if (**(_DWORD **)(a1 + 40) > v4)
    return 0;
  switch((int)result)
  {
    case 1:
      v5 = &unk_31E802;
      goto LABEL_12;
    case 2:
      v5 = &unk_31E803;
LABEL_12:
      result = slice_from_s(a1, 1, v5);
      if ((result & 0x80000000) == 0)
        goto LABEL_13;
      return result;
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      result = slice_del(a1);
      if ((result & 0x80000000) != 0)
        return result;
      goto LABEL_13;
    default:
LABEL_13:
      result = 1;
      break;
  }
  return result;
}

_QWORD *hungarian_UTF_8_create_env()
{
  return SN_create_env(0, 1, 0);
}

void hungarian_UTF_8_close_env(uint64_t a1)
{
  SN_close_env(a1, 0);
}

uint64_t sub_219D04(uint64_t a1)
{
  uint64_t v1;
  char v3;
  uint64_t result;
  int v5;

  v1 = *(int *)(a1 + 8);
  if ((int)v1 - 1 <= *(_DWORD *)(a1 + 16))
    return 0;
  v3 = *(_BYTE *)(*(_QWORD *)a1 + v1 - 1);
  if ((v3 & 0xE0) != 0x60 || ((0x65D7CDCu >> v3) & 1) == 0)
    return 0;
  v5 = *(_DWORD *)(a1 + 12);
  result = find_among_b(a1, (uint64_t)&unk_430870, 23);
  if ((_DWORD)result)
  {
    *(_DWORD *)(a1 + 8) = v1 - v5 + *(_DWORD *)(a1 + 12);
    return 1;
  }
  return result;
}

uint64_t sub_219D98(uint64_t a1)
{
  uint64_t v2;
  int v3;
  int v4;

  v2 = skip_utf8(*(_QWORD *)a1, *(unsigned int *)(a1 + 8), *(unsigned int *)(a1 + 16), 0, -1);
  if ((v2 & 0x80000000) != 0)
    return 0;
  *(_DWORD *)(a1 + 8) = v2;
  *(_DWORD *)(a1 + 24) = v2;
  v3 = skip_utf8(*(_QWORD *)a1, v2, *(unsigned int *)(a1 + 16), *(unsigned int *)(a1 + 12), -1);
  if (v3 < 0)
    return 0;
  *(_DWORD *)(a1 + 8) = v3;
  *(_DWORD *)(a1 + 20) = v3;
  v4 = slice_del(a1);
  if (v4 >= 0)
    return 1;
  else
    return v4 & (v4 >> 31);
}

uint64_t italian_UTF_8_stem(uint64_t a1)
{
  uint64_t v2;
  int among;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t result;
  int v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  void *v12;
  _DWORD *v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  int among_b;
  int v31;
  int v32;
  int v33;
  int *v34;
  int v35;
  int v36;
  int v37;
  int v38;
  int v39;
  int v40;
  int v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  int v46;
  int v47;
  int v48;
  uint64_t v49;
  void *v50;
  int v51;
  void *v52;
  int v53;
  void *v54;
  uint64_t v55;
  int v56;
  uint64_t v57;
  uint64_t v58;
  char v59;
  int v60;
  int v61;
  int v62;
  uint64_t v63;
  uint64_t v64;
  char v65;
  int v66;
  int v67;

  v2 = *(unsigned int *)(a1 + 8);
  *(_DWORD *)(a1 + 20) = v2;
  among = find_among(a1, (uint64_t)&unk_431DF0, 7);
  if (among)
  {
    while (2)
    {
      v4 = *(unsigned int *)(a1 + 8);
      *(_DWORD *)(a1 + 24) = v4;
      switch(among)
      {
        case 1:
          v5 = a1;
          v6 = &unk_31E82E;
          goto LABEL_9;
        case 2:
          v5 = a1;
          v6 = &unk_31E830;
          goto LABEL_9;
        case 3:
          v5 = a1;
          v6 = &unk_31E832;
          goto LABEL_9;
        case 4:
          v5 = a1;
          v6 = &unk_31E834;
          goto LABEL_9;
        case 5:
          v5 = a1;
          v6 = &unk_31E836;
          goto LABEL_9;
        case 6:
          v5 = a1;
          v6 = &unk_31E838;
LABEL_9:
          result = slice_from_s(v5, 2, v6);
          if ((result & 0x80000000) == 0)
            goto LABEL_10;
          return result;
        case 7:
          v8 = skip_utf8(*(_QWORD *)a1, v4, 0, *(unsigned int *)(a1 + 12), 1);
          if (v8 < 0)
            break;
          *(_DWORD *)(a1 + 8) = v8;
          goto LABEL_10;
        default:
LABEL_10:
          *(_DWORD *)(a1 + 20) = *(_DWORD *)(a1 + 8);
          among = find_among(a1, (uint64_t)&unk_431DF0, 7);
          if (!among)
            break;
          continue;
      }
      break;
    }
  }
  v9 = v2;
  do
  {
    while (1)
    {
      *(_DWORD *)(a1 + 8) = v9;
      if (in_grouping_U(a1, (uint64_t)&unk_31E83A, 97, 249, 0))
        break;
      v10 = *(_DWORD *)(a1 + 8);
      *(_DWORD *)(a1 + 20) = v10;
      if (eq_s(a1, 1, &unk_31E84E))
      {
        *(_DWORD *)(a1 + 24) = *(_DWORD *)(a1 + 8);
        if (!in_grouping_U(a1, (uint64_t)&unk_31E83A, 97, 249, 0))
        {
          v11 = a1;
          v12 = &unk_31E84F;
          goto LABEL_22;
        }
      }
      *(_DWORD *)(a1 + 8) = v10;
      if (!eq_s(a1, 1, &unk_31E850))
        break;
      *(_DWORD *)(a1 + 24) = *(_DWORD *)(a1 + 8);
      if (in_grouping_U(a1, (uint64_t)&unk_31E83A, 97, 249, 0))
        break;
      v11 = a1;
      v12 = &unk_31E851;
LABEL_22:
      result = slice_from_s(v11, 1, v12);
      if ((result & 0x80000000) != 0)
        return result;
    }
    *(_DWORD *)(a1 + 8) = v9;
    v9 = skip_utf8(*(_QWORD *)a1, v9, 0, *(unsigned int *)(a1 + 12), 1);
  }
  while ((v9 & 0x80000000) == 0);
  *(_DWORD *)(a1 + 8) = v2;
  v13 = *(_DWORD **)(a1 + 40);
  *v13 = *(_DWORD *)(a1 + 12);
  v13[1] = *(_DWORD *)(a1 + 12);
  v13[2] = *(_DWORD *)(a1 + 12);
  v14 = *(_DWORD *)(a1 + 8);
  if (!in_grouping_U(a1, (uint64_t)&unk_31E83A, 97, 249, 0))
  {
    if ((v15 = *(_DWORD *)(a1 + 8), !out_grouping_U(a1, (uint64_t)&unk_31E83A, 97, 249, 0))
      && (v18 = out_grouping_U(a1, (uint64_t)&unk_31E83A, 97, 249, 1), (v18 & 0x80000000) == 0)
      || (*(_DWORD *)(a1 + 8) = v15, !in_grouping_U(a1, (uint64_t)&unk_31E83A, 97, 249, 0))
      && (v18 = in_grouping_U(a1, (uint64_t)&unk_31E83A, 97, 249, 1), (v18 & 0x80000000) == 0))
    {
LABEL_38:
      v17 = *(_DWORD *)(a1 + 8) + v18;
      goto LABEL_39;
    }
  }
  *(_DWORD *)(a1 + 8) = v14;
  if (!out_grouping_U(a1, (uint64_t)&unk_31E83A, 97, 249, 0))
  {
    v16 = *(_DWORD *)(a1 + 8);
    if (!out_grouping_U(a1, (uint64_t)&unk_31E83A, 97, 249, 0))
    {
      v18 = out_grouping_U(a1, (uint64_t)&unk_31E83A, 97, 249, 1);
      if ((v18 & 0x80000000) == 0)
        goto LABEL_38;
    }
    *(_DWORD *)(a1 + 8) = v16;
    if (!in_grouping_U(a1, (uint64_t)&unk_31E83A, 97, 249, 0))
    {
      v17 = skip_utf8(*(_QWORD *)a1, *(unsigned int *)(a1 + 8), 0, *(unsigned int *)(a1 + 12), 1);
      if ((v17 & 0x80000000) == 0)
LABEL_39:
        **(_DWORD **)(a1 + 40) = v17;
    }
  }
  *(_DWORD *)(a1 + 8) = v14;
  v19 = out_grouping_U(a1, (uint64_t)&unk_31E83A, 97, 249, 1);
  if ((v19 & 0x80000000) == 0)
  {
    *(_DWORD *)(a1 + 8) += v19;
    v20 = in_grouping_U(a1, (uint64_t)&unk_31E83A, 97, 249, 1);
    if ((v20 & 0x80000000) == 0)
    {
      v21 = *(_DWORD *)(a1 + 8) + v20;
      *(_DWORD *)(a1 + 8) = v21;
      *(_DWORD *)(*(_QWORD *)(a1 + 40) + 4) = v21;
      v22 = out_grouping_U(a1, (uint64_t)&unk_31E83A, 97, 249, 1);
      if ((v22 & 0x80000000) == 0)
      {
        *(_DWORD *)(a1 + 8) += v22;
        v23 = in_grouping_U(a1, (uint64_t)&unk_31E83A, 97, 249, 1);
        if ((v23 & 0x80000000) == 0)
          *(_DWORD *)(*(_QWORD *)(a1 + 40) + 8) = *(_DWORD *)(a1 + 8) + v23;
      }
    }
  }
  *(_DWORD *)(a1 + 16) = v2;
  v24 = *(int *)(a1 + 12);
  *(_DWORD *)(a1 + 8) = v24;
  *(_DWORD *)(a1 + 24) = v24;
  v25 = v24 - 1;
  if ((int)v25 > (int)v2)
  {
    v26 = *(_BYTE *)(*(_QWORD *)a1 + v25);
    if ((v26 & 0xE0) == 0x60 && ((0x8222u >> v26) & 1) != 0)
    {
      if (find_among_b(a1, (uint64_t)&unk_431ED0, 37))
      {
        v27 = *(int *)(a1 + 8);
        *(_DWORD *)(a1 + 20) = v27;
        v28 = v27 - 1;
        if ((int)v28 > *(_DWORD *)(a1 + 16))
        {
          v29 = *(unsigned __int8 *)(*(_QWORD *)a1 + v28);
          if (v29 == 114 || v29 == 111)
          {
            among_b = find_among_b(a1, (uint64_t)&unk_432370, 5);
            if (among_b)
            {
              if (**(_DWORD **)(a1 + 40) <= *(_DWORD *)(a1 + 8))
              {
                if (among_b == 2)
                {
                  result = slice_from_s(a1, 1, &unk_31E85E);
                  if ((result & 0x80000000) != 0)
                    return result;
                }
                else if (among_b == 1)
                {
                  result = slice_del(a1);
                  if ((result & 0x80000000) != 0)
                    return result;
                }
              }
            }
          }
        }
      }
    }
  }
  v31 = *(_DWORD *)(a1 + 12);
  *(_DWORD *)(a1 + 8) = v31;
  *(_DWORD *)(a1 + 24) = v31;
  v32 = find_among_b(a1, (uint64_t)&unk_432410, 51);
  if (v32)
  {
    v33 = *(_DWORD *)(a1 + 8);
    *(_DWORD *)(a1 + 20) = v33;
    switch(v32)
    {
      case 1:
        v34 = *(int **)(a1 + 40);
        v35 = v34[2];
        goto LABEL_115;
      case 2:
        v34 = *(int **)(a1 + 40);
        if (v34[2] > v33)
          goto LABEL_63;
        result = slice_del(a1);
        if ((result & 0x80000000) != 0)
          return result;
        *(_DWORD *)(a1 + 24) = *(_DWORD *)(a1 + 8);
        v52 = &unk_31E8F6;
        goto LABEL_102;
      case 3:
        v34 = *(int **)(a1 + 40);
        if (v34[2] > v33)
          goto LABEL_63;
        v54 = &unk_31E8F8;
        v55 = a1;
        v56 = 3;
        goto LABEL_112;
      case 4:
        v34 = *(int **)(a1 + 40);
        if (v34[2] > v33)
          goto LABEL_63;
        v54 = &unk_31E8FB;
        v55 = a1;
        v56 = 1;
        goto LABEL_112;
      case 5:
        v34 = *(int **)(a1 + 40);
        if (v34[2] > v33)
          goto LABEL_63;
        v54 = &unk_31E8FC;
        v55 = a1;
        v56 = 4;
LABEL_112:
        result = slice_from_s(v55, v56, v54);
        if ((result & 0x80000000) != 0)
          return result;
        goto LABEL_68;
      case 6:
        v34 = *(int **)(a1 + 40);
        v35 = *v34;
LABEL_115:
        if (v35 <= v33)
          goto LABEL_116;
        goto LABEL_63;
      case 7:
        v34 = *(int **)(a1 + 40);
        if (v34[1] > v33)
          goto LABEL_63;
        result = slice_del(a1);
        if ((result & 0x80000000) != 0)
          return result;
        v57 = *(int *)(a1 + 8);
        *(_DWORD *)(a1 + 24) = v57;
        v58 = v57 - 1;
        if ((int)v58 <= *(_DWORD *)(a1 + 16))
          goto LABEL_68;
        v59 = *(_BYTE *)(*(_QWORD *)a1 + v58);
        if ((v59 & 0xE0) != 0x60)
          goto LABEL_68;
        if (((0x481008u >> v59) & 1) == 0)
          goto LABEL_68;
        v60 = find_among_b(a1, (uint64_t)&unk_432A70, 4);
        if (!v60)
          goto LABEL_68;
        v61 = *(_DWORD *)(a1 + 8);
        *(_DWORD *)(a1 + 20) = v61;
        if (*(_DWORD *)(*(_QWORD *)(a1 + 40) + 8) > v61)
          goto LABEL_68;
        v62 = v60;
        result = slice_del(a1);
        if ((result & 0x80000000) != 0)
          return result;
        if (v62 != 1)
          goto LABEL_68;
        *(_DWORD *)(a1 + 24) = *(_DWORD *)(a1 + 8);
        v52 = &unk_31E900;
LABEL_102:
        if (!eq_s_b(a1, 2, v52))
          goto LABEL_68;
        v53 = *(_DWORD *)(a1 + 8);
        *(_DWORD *)(a1 + 20) = v53;
LABEL_104:
        if (*(_DWORD *)(*(_QWORD *)(a1 + 40) + 8) > v53)
          goto LABEL_68;
LABEL_116:
        result = slice_del(a1);
        if ((result & 0x80000000) != 0)
          return result;
        goto LABEL_68;
      case 8:
        v34 = *(int **)(a1 + 40);
        if (v34[2] > v33)
          goto LABEL_63;
        result = slice_del(a1);
        if ((result & 0x80000000) != 0)
          return result;
        v63 = *(int *)(a1 + 8);
        *(_DWORD *)(a1 + 24) = v63;
        v64 = v63 - 1;
        if ((int)v64 > *(_DWORD *)(a1 + 16))
        {
          v65 = *(_BYTE *)(*(_QWORD *)a1 + v64);
          if ((v65 & 0xE0) == 0x60 && ((0x401008u >> v65) & 1) != 0)
          {
            v66 = find_among_b(a1, (uint64_t)&unk_432AF0, 3);
            if (v66)
            {
              v53 = *(_DWORD *)(a1 + 8);
              *(_DWORD *)(a1 + 20) = v53;
              if (v66 == 1)
                goto LABEL_104;
            }
          }
        }
        goto LABEL_68;
      case 9:
        v34 = *(int **)(a1 + 40);
        if (v34[2] > v33)
          goto LABEL_63;
        result = slice_del(a1);
        if ((result & 0x80000000) != 0)
          return result;
        *(_DWORD *)(a1 + 24) = *(_DWORD *)(a1 + 8);
        if (!eq_s_b(a1, 2, &unk_31E902))
          goto LABEL_68;
        v67 = *(_DWORD *)(a1 + 8);
        *(_DWORD *)(a1 + 20) = v67;
        if (*(_DWORD *)(*(_QWORD *)(a1 + 40) + 8) > v67)
          goto LABEL_68;
        result = slice_del(a1);
        if ((result & 0x80000000) != 0)
          return result;
        *(_DWORD *)(a1 + 24) = *(_DWORD *)(a1 + 8);
        v52 = &unk_31E904;
        goto LABEL_102;
      default:
        goto LABEL_68;
    }
  }
  v34 = *(int **)(a1 + 40);
LABEL_63:
  v36 = *(_DWORD *)(a1 + 12);
  *(_DWORD *)(a1 + 8) = v36;
  v37 = *v34;
  if (v36 >= v37)
  {
    v38 = *(_DWORD *)(a1 + 16);
    *(_DWORD *)(a1 + 16) = v37;
    *(_DWORD *)(a1 + 24) = v36;
    v39 = find_among_b(a1, (uint64_t)&unk_432B50, 87);
    if (v39)
    {
      *(_DWORD *)(a1 + 20) = *(_DWORD *)(a1 + 8);
      if (v39 == 1)
      {
        result = slice_del(a1);
        if ((result & 0x80000000) != 0)
          return result;
      }
    }
    *(_DWORD *)(a1 + 16) = v38;
  }
LABEL_68:
  v40 = *(_DWORD *)(a1 + 12);
  *(_DWORD *)(a1 + 8) = v40;
  *(_DWORD *)(a1 + 24) = v40;
  if (in_grouping_b_U(a1, (uint64_t)&unk_31EB73, 97, 242, 0))
    goto LABEL_70;
  v41 = *(_DWORD *)(a1 + 8);
  *(_DWORD *)(a1 + 20) = v41;
  if (**(_DWORD **)(a1 + 40) > v41)
    goto LABEL_70;
  result = slice_del(a1);
  if ((result & 0x80000000) != 0)
    return result;
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a1 + 8);
  if (!eq_s_b(a1, 1, &unk_31EB86)
    || (v51 = *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 20) = v51, **(_DWORD **)(a1 + 40) > v51))
  {
LABEL_70:
    v42 = *(_DWORD *)(a1 + 12);
    *(_DWORD *)(a1 + 8) = v42;
  }
  else
  {
    result = slice_del(a1);
    if ((result & 0x80000000) != 0)
      return result;
    v42 = *(_DWORD *)(a1 + 8);
  }
  *(_DWORD *)(a1 + 24) = v42;
  if (!eq_s_b(a1, 1, &unk_31EB87)
    || (*(_DWORD *)(a1 + 20) = *(_DWORD *)(a1 + 8), in_grouping_b_U(a1, (uint64_t)&unk_31EB88, 99, 103, 0))
    || **(_DWORD **)(a1 + 40) > *(_DWORD *)(a1 + 8)
    || (result = slice_del(a1), (result & 0x80000000) == 0))
  {
    v43 = *(unsigned int *)(a1 + 16);
    *(_DWORD *)(a1 + 8) = v43;
    v44 = v43;
    while (2)
    {
      *(_DWORD *)(a1 + 20) = v44;
      v45 = *(unsigned int *)(a1 + 12);
      if ((int)v44 < (int)v45)
      {
        v46 = *(unsigned __int8 *)(*(_QWORD *)a1 + (int)v44);
        if (v46 == 73 || v46 == 85)
        {
          v47 = find_among(a1, (uint64_t)&unk_433630, 3);
          if (!v47)
            goto LABEL_92;
          v44 = *(unsigned int *)(a1 + 8);
          *(_DWORD *)(a1 + 24) = v44;
          switch(v47)
          {
            case 1:
              v49 = a1;
              v50 = &unk_31EB89;
              break;
            case 2:
              v49 = a1;
              v50 = &unk_31EB8A;
              break;
            case 3:
              v45 = *(unsigned int *)(a1 + 12);
              goto LABEL_85;
            default:
              goto LABEL_87;
          }
          result = slice_from_s(v49, 1, v50);
          if ((result & 0x80000000) != 0)
            return result;
          goto LABEL_87;
        }
      }
      *(_DWORD *)(a1 + 24) = v44;
LABEL_85:
      v48 = skip_utf8(*(_QWORD *)a1, v44, 0, v45, 1);
      if (v48 < 0)
      {
LABEL_92:
        *(_DWORD *)(a1 + 8) = v43;
        return 1;
      }
      *(_DWORD *)(a1 + 8) = v48;
LABEL_87:
      v44 = *(unsigned int *)(a1 + 8);
      continue;
    }
  }
  return result;
}

_QWORD *italian_UTF_8_create_env()
{
  return SN_create_env(0, 3, 0);
}

void italian_UTF_8_close_env(uint64_t a1)
{
  SN_close_env(a1, 0);
}

uint64_t norwegian_UTF_8_stem(uint64_t a1)
{
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  _DWORD *v7;
  unsigned int v8;
  int v9;
  int v10;
  char v11;
  int among_b;
  int v13;
  int v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  int v20;
  int v21;
  int v22;
  int v23;
  unsigned int v24;
  uint64_t result;
  int v26;
  int v27;
  int v28;
  uint64_t v29;
  char v30;
  int v31;
  int v32;
  int v33;

  v2 = *(_DWORD *)(a1 + 8);
  **(_DWORD **)(a1 + 40) = *(_DWORD *)(a1 + 12);
  v3 = *(_DWORD *)(a1 + 8);
  v4 = skip_utf8(*(_QWORD *)a1, *(unsigned int *)(a1 + 8), 0, *(unsigned int *)(a1 + 12), 3);
  if (v4 < 0
    || (*(_DWORD *)(*(_QWORD *)(a1 + 40) + 4) = v4,
        *(_DWORD *)(a1 + 8) = v3,
        (out_grouping_U(a1, (uint64_t)&unk_31EB8D, 97, 248, 1) & 0x80000000) != 0)
    || (v5 = in_grouping_U(a1, (uint64_t)&unk_31EB8D, 97, 248, 1), v5 < 0))
  {
    v8 = 0;
  }
  else
  {
    v6 = *(_DWORD *)(a1 + 8) + v5;
    *(_DWORD *)(a1 + 8) = v6;
    v7 = *(_DWORD **)(a1 + 40);
    if (v6 <= v7[1])
      v6 = v7[1];
    *v7 = v6;
    v8 = 1;
  }
  *(_DWORD *)(a1 + 16) = v2;
  v9 = *(_DWORD *)(a1 + 12);
  *(_DWORD *)(a1 + 8) = v9;
  v10 = **(_DWORD **)(a1 + 40);
  if (v9 >= v10)
  {
    *(_DWORD *)(a1 + 16) = v10;
    *(_DWORD *)(a1 + 24) = v9;
    if (v9 <= v10
      || (v11 = *(_BYTE *)(v9 + *(_QWORD *)a1 - 1), (v11 & 0xE0) != 0x60)
      || ((0x1C4022u >> v11) & 1) == 0
      || (among_b = find_among_b(a1, (uint64_t)&unk_433690, 29)) == 0)
    {
      *(_DWORD *)(a1 + 16) = v2;
      goto LABEL_18;
    }
    v13 = *(_DWORD *)(a1 + 8);
    *(_DWORD *)(a1 + 16) = v2;
    *(_DWORD *)(a1 + 20) = v13;
    if (among_b == 3)
    {
      result = slice_from_s(a1, 2, &unk_31EBA5);
      if ((result & 0x80000000) != 0)
        return result;
    }
    else
    {
      if (among_b == 2)
      {
        v33 = *(_DWORD *)(a1 + 12);
        if (in_grouping_b_U(a1, (uint64_t)&unk_31EBA0, 98, 122, 0))
        {
          *(_DWORD *)(a1 + 8) = v13 - v33 + *(_DWORD *)(a1 + 12);
          if (!eq_s_b(a1, 1, &unk_31EBA4)
            || out_grouping_b_U(a1, (uint64_t)&unk_31EB8D, 97, 248, 0))
          {
            goto LABEL_18;
          }
        }
      }
      else if (among_b != 1)
      {
        goto LABEL_18;
      }
      result = slice_del(a1);
      if ((result & 0x80000000) != 0)
        return result;
    }
  }
LABEL_18:
  v14 = *(_DWORD *)(a1 + 12);
  *(_DWORD *)(a1 + 8) = v14;
  v15 = **(_DWORD **)(a1 + 40);
  if (v14 < v15)
  {
LABEL_37:
    v26 = *(_DWORD *)(a1 + 12);
    *(_DWORD *)(a1 + 8) = v26;
LABEL_38:
    v27 = **(_DWORD **)(a1 + 40);
    if (v26 >= v27)
    {
      v28 = *(_DWORD *)(a1 + 16);
      *(_DWORD *)(a1 + 16) = v27;
      *(_DWORD *)(a1 + 24) = v26;
      v29 = v26 - 1;
      if ((int)v29 > v27
        && (v30 = *(_BYTE *)(*(_QWORD *)a1 + v29), (v30 & 0xE0) == 0x60)
        && ((0x480080u >> v30) & 1) != 0
        && (v31 = find_among_b(a1, (uint64_t)&unk_433A70, 11)) != 0)
      {
        v32 = *(_DWORD *)(a1 + 8);
        *(_DWORD *)(a1 + 16) = v28;
        *(_DWORD *)(a1 + 20) = v32;
        if (v31 == 1)
        {
          result = slice_del(a1);
          if ((result & 0x80000000) != 0)
            return result;
        }
      }
      else
      {
        *(_DWORD *)(a1 + 16) = v28;
      }
    }
    *(_DWORD *)(a1 + 8) = *(_DWORD *)(a1 + 16);
    return 1;
  }
  v16 = *(unsigned int *)(a1 + 16);
  *(_DWORD *)(a1 + 16) = v15;
  *(_DWORD *)(a1 + 24) = v14;
  v17 = v14 - 1;
  if ((int)v17 <= v15
    || *(_BYTE *)(*(_QWORD *)a1 + v17) != 116
    || !find_among_b(a1, (uint64_t)&unk_433A30, 2))
  {
    *(_DWORD *)(a1 + 16) = v16;
    goto LABEL_37;
  }
  v19 = *(_DWORD *)(a1 + 8);
  v18 = *(unsigned int *)(a1 + 12);
  *(_DWORD *)(a1 + 16) = v16;
  *(_DWORD *)(a1 + 20) = v19;
  *(_DWORD *)(a1 + 8) = v18;
  v20 = skip_utf8(*(_QWORD *)a1, v18, v16, 0, -1);
  if (v20 < 0)
    goto LABEL_37;
  *(_DWORD *)(a1 + 8) = v20;
  *(_DWORD *)(a1 + 20) = v20;
  v21 = slice_del(a1);
  v22 = v21 & (v21 >> 31);
  if (v21 >= 0)
    v22 = 1;
  v23 = v22 >> 31;
  if (!v22)
    v23 = 4;
  if ((v23 | 4) == 4)
    goto LABEL_37;
  if (v22 >= 0)
    v24 = v8;
  else
    v24 = v22;
  if (v22)
    result = v24;
  else
    result = v8;
  if ((v22 & 0x80000000) == 0)
  {
    v26 = *(_DWORD *)(a1 + 8);
    goto LABEL_38;
  }
  return result;
}

_QWORD *norwegian_UTF_8_create_env()
{
  return SN_create_env(0, 2, 0);
}

void norwegian_UTF_8_close_env(uint64_t a1)
{
  SN_close_env(a1, 0);
}

uint64_t porter_UTF_8_stem(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t inserted;
  _DWORD *v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  uint64_t v14;
  int among_b;
  void *v16;
  uint64_t v17;
  int v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  int v23;
  int v24;
  int v25;
  int v26;
  uint64_t v27;
  char v28;
  int v29;
  int v30;
  int v31;
  int v32;
  int v33;
  int v34;
  int v35;
  int v36;
  int v37;
  int v38;
  unsigned int v39;
  unsigned int v40;
  int v41;
  int v42;
  char v43;
  int v44;
  int v45;
  void *v46;
  uint64_t v47;
  int v48;
  int v49;
  int v50;
  unsigned int v51;
  int v52;
  int v53;
  int v54;
  int v55;
  unsigned int v56;
  int v57;
  int v58;
  int v59;
  int v60;
  int v61;
  unsigned int v62;
  int v63;
  int v64;
  int v65;
  unsigned int v66;
  int v67;
  uint64_t v68;
  uint64_t v69;

  **(_BYTE **)(a1 + 48) = 0;
  v3 = *(unsigned int *)(a1 + 8);
  *(_DWORD *)(a1 + 20) = v3;
  if (eq_s(a1, 1, &unk_31EC41))
  {
    *(_DWORD *)(a1 + 24) = *(_DWORD *)(a1 + 8);
    v1 = slice_from_s(a1, 1, &unk_31EC42);
    if ((v1 & 0x80000000) != 0)
      return v1;
    **(_BYTE **)(a1 + 48) = 1;
  }
  *(_DWORD *)(a1 + 8) = v3;
  v4 = v3;
  while (1)
  {
    while (!in_grouping_U(a1, (uint64_t)&unk_31EC43, 97, 121, 0))
    {
      *(_DWORD *)(a1 + 20) = *(_DWORD *)(a1 + 8);
      if (!eq_s(a1, 1, &unk_31EC47))
        break;
      *(_DWORD *)(a1 + 24) = *(_DWORD *)(a1 + 8);
      *(_DWORD *)(a1 + 8) = v4;
      inserted = slice_from_s(a1, 1, &unk_31EC48);
      if ((inserted & 0x80000000) != 0)
        return inserted;
      **(_BYTE **)(a1 + 48) = 1;
      v4 = *(unsigned int *)(a1 + 8);
    }
    *(_DWORD *)(a1 + 8) = v4;
    v5 = skip_utf8(*(_QWORD *)a1, v4, 0, *(unsigned int *)(a1 + 12), 1);
    if ((v5 & 0x80000000) != 0)
      break;
    v4 = v5;
    *(_DWORD *)(a1 + 8) = v5;
  }
  *(_DWORD *)(a1 + 8) = v3;
  v7 = *(_DWORD **)(a1 + 40);
  *v7 = *(_DWORD *)(a1 + 12);
  v7[1] = *(_DWORD *)(a1 + 12);
  v8 = *(_DWORD *)(a1 + 8);
  v9 = out_grouping_U(a1, (uint64_t)&unk_31EC43, 97, 121, 1);
  if ((v9 & 0x80000000) == 0)
  {
    *(_DWORD *)(a1 + 8) += v9;
    v10 = in_grouping_U(a1, (uint64_t)&unk_31EC43, 97, 121, 1);
    if ((v10 & 0x80000000) == 0)
    {
      v11 = *(_DWORD *)(a1 + 8) + v10;
      *(_DWORD *)(a1 + 8) = v11;
      **(_DWORD **)(a1 + 40) = v11;
      v12 = out_grouping_U(a1, (uint64_t)&unk_31EC43, 97, 121, 1);
      if ((v12 & 0x80000000) == 0)
      {
        *(_DWORD *)(a1 + 8) += v12;
        v13 = in_grouping_U(a1, (uint64_t)&unk_31EC43, 97, 121, 1);
        if ((v13 & 0x80000000) == 0)
          *(_DWORD *)(*(_QWORD *)(a1 + 40) + 4) = *(_DWORD *)(a1 + 8) + v13;
      }
    }
  }
  *(_DWORD *)(a1 + 16) = v8;
  v14 = *(int *)(a1 + 12);
  *(_DWORD *)(a1 + 8) = v14;
  *(_DWORD *)(a1 + 24) = v14;
  if ((int)v14 <= v8)
    goto LABEL_27;
  if (*(_BYTE *)(v14 + *(_QWORD *)a1 - 1) != 115)
    goto LABEL_27;
  among_b = find_among_b(a1, (uint64_t)&unk_433BD0, 4);
  if (!among_b)
    goto LABEL_27;
  *(_DWORD *)(a1 + 20) = *(_DWORD *)(a1 + 8);
  if (among_b == 3)
  {
    inserted = slice_del(a1);
    if ((inserted & 0x80000000) != 0)
      return inserted;
  }
  else
  {
    if (among_b == 2)
    {
      v16 = &unk_31EC4D;
      v17 = a1;
      v18 = 1;
    }
    else
    {
      if (among_b != 1)
        goto LABEL_27;
      v16 = &unk_31EC4B;
      v17 = a1;
      v18 = 2;
    }
    inserted = slice_from_s(v17, v18, v16);
    if ((inserted & 0x80000000) != 0)
      return inserted;
  }
LABEL_27:
  v19 = *(_DWORD *)(a1 + 16);
  v20 = *(int *)(a1 + 12);
  *(_DWORD *)(a1 + 8) = v20;
  *(_DWORD *)(a1 + 24) = v20;
  v21 = v20 - 1;
  if ((int)v21 <= v19)
    goto LABEL_53;
  v22 = *(unsigned __int8 *)(*(_QWORD *)a1 + v21);
  if (v22 != 103 && v22 != 100)
    goto LABEL_53;
  v23 = find_among_b(a1, (uint64_t)&unk_433C50, 3);
  if (!v23)
    goto LABEL_53;
  v24 = *(_DWORD *)(a1 + 8);
  *(_DWORD *)(a1 + 20) = v24;
  if (v23 != 2)
  {
    if (v23 == 1 && **(_DWORD **)(a1 + 40) <= v24)
    {
      inserted = slice_from_s(a1, 2, &unk_31EC58);
      if ((inserted & 0x80000000) != 0)
        return inserted;
    }
    goto LABEL_53;
  }
  v25 = *(_DWORD *)(a1 + 12);
  if ((out_grouping_b_U(a1, (uint64_t)&unk_31EC43, 97, 121, 1) & 0x80000000) != 0)
    goto LABEL_53;
  *(_DWORD *)(a1 + 8) = v24 - v25 + *(_DWORD *)(a1 + 12);
  inserted = slice_del(a1);
  if ((inserted & 0x80000000) != 0)
    return inserted;
  v26 = *(_DWORD *)(a1 + 12);
  v27 = *(int *)(a1 + 8);
  if ((int)v27 - 1 <= *(_DWORD *)(a1 + 16)
    || (v28 = *(_BYTE *)(*(_QWORD *)a1 + v27 - 1), (v28 & 0xE0) != 0x60)
    || ((0x41570D4u >> v28) & 1) == 0)
  {
LABEL_41:
    if ((_DWORD)v27 == **(_DWORD **)(a1 + 40) && sub_21B848(a1))
    {
      v29 = v27 - v26;
      v30 = *(_DWORD *)(a1 + 12);
      v31 = v30 + v27 - v26;
      *(_DWORD *)(a1 + 8) = v31;
      inserted = insert_s(a1, v30 + v29, v30 + v29, 1, &unk_31EC5B);
      *(_DWORD *)(a1 + 8) = v31;
      if ((inserted & 0x80000000) != 0)
        return inserted;
    }
    goto LABEL_53;
  }
  v32 = find_among_b(a1, (uint64_t)&unk_433CB0, 13);
  if (v32)
  {
    v33 = v27 - v26;
    v26 = *(_DWORD *)(a1 + 12);
    LODWORD(v27) = v26 + v33;
    *(_DWORD *)(a1 + 8) = v26 + v33;
    switch(v32)
    {
      case 3:
        goto LABEL_41;
      case 2:
        *(_DWORD *)(a1 + 24) = v27;
        v34 = skip_utf8(*(_QWORD *)a1, (v26 + v33), *(unsigned int *)(a1 + 16), 0, -1);
        if ((v34 & 0x80000000) == 0)
        {
          *(_DWORD *)(a1 + 8) = v34;
          *(_DWORD *)(a1 + 20) = v34;
          inserted = slice_del(a1);
          if ((inserted & 0x80000000) != 0)
            return inserted;
        }
        break;
      case 1:
        inserted = insert_s(a1, v26 + v33, v26 + v33, 1, &unk_31EC5A);
        *(_DWORD *)(a1 + 8) = v27;
        if ((inserted & 0x80000000) != 0)
          return inserted;
        break;
    }
  }
LABEL_53:
  v35 = *(_DWORD *)(a1 + 12);
  *(_DWORD *)(a1 + 8) = v35;
  *(_DWORD *)(a1 + 24) = v35;
  if (!eq_s_b(a1, 1, &unk_31EC81))
  {
    *(_DWORD *)(a1 + 8) = *(_DWORD *)(a1 + 12);
    if (!eq_s_b(a1, 1, &unk_31EC82))
      goto LABEL_69;
  }
  *(_DWORD *)(a1 + 20) = *(_DWORD *)(a1 + 8);
  v36 = out_grouping_b_U(a1, (uint64_t)&unk_31EC43, 97, 121, 1);
  if (v36 < 0)
    goto LABEL_69;
  *(_DWORD *)(a1 + 8) -= v36;
  v37 = slice_from_s(a1, 1, &unk_31EC83);
  v38 = v37 & (v37 >> 31);
  if (v37 >= 0)
    v38 = 1;
  v39 = v38 >= 0 ? v1 : v38;
  v1 = v38 ? v39 : v1;
  v40 = v38 ? v38 >> 31 : 12;
  if (v40 != 12 && v40)
  {
    if (v38 < 0)
      return v1;
    v41 = *(_DWORD *)(a1 + 8);
    v42 = *(_DWORD *)(a1 + 12);
  }
  else
  {
LABEL_69:
    v41 = *(_DWORD *)(a1 + 12);
    *(_DWORD *)(a1 + 8) = v41;
    v42 = v41;
  }
  *(_DWORD *)(a1 + 24) = v41;
  if (v41 - 2 > *(_DWORD *)(a1 + 16))
  {
    v43 = *(_BYTE *)(*(_QWORD *)a1 + v41 - 1);
    if ((v43 & 0xE0) == 0x60 && ((0xC7200u >> v43) & 1) != 0)
    {
      v44 = find_among_b(a1, (uint64_t)&unk_433E50, 20);
      if (v44)
      {
        v45 = *(_DWORD *)(a1 + 8);
        *(_DWORD *)(a1 + 20) = v45;
        if (**(_DWORD **)(a1 + 40) <= v45)
        {
          switch(v44)
          {
            case 1:
              v46 = &unk_31EC84;
              goto LABEL_82;
            case 2:
              v46 = &unk_31EC88;
              goto LABEL_82;
            case 3:
              v46 = &unk_31EC8C;
              goto LABEL_82;
            case 4:
              v46 = &unk_31EC90;
LABEL_82:
              v47 = a1;
              v48 = 4;
              goto LABEL_95;
            case 5:
              v46 = &unk_31EC94;
              goto LABEL_94;
            case 6:
              v46 = &unk_31EC97;
              v47 = a1;
              v48 = 1;
              goto LABEL_95;
            case 7:
              v46 = &unk_31EC98;
              goto LABEL_94;
            case 8:
              v46 = &unk_31EC9B;
              goto LABEL_94;
            case 9:
              v46 = &unk_31EC9E;
              goto LABEL_89;
            case 10:
              v46 = &unk_31ECA0;
LABEL_89:
              v47 = a1;
              v48 = 2;
              goto LABEL_95;
            case 11:
              v46 = &unk_31ECA2;
              goto LABEL_94;
            case 12:
              v46 = &unk_31ECA5;
              goto LABEL_94;
            case 13:
              v46 = &unk_31ECA8;
              goto LABEL_94;
            case 14:
              v46 = &unk_31ECAB;
LABEL_94:
              v47 = a1;
              v48 = 3;
LABEL_95:
              inserted = slice_from_s(v47, v48, v46);
              if ((inserted & 0x80000000) == 0)
                break;
              return inserted;
            default:
              break;
          }
        }
      }
    }
  }
  v49 = v41 - v42;
  *(_DWORD *)(a1 + 8) = v49 + *(_DWORD *)(a1 + 12);
  v50 = sub_21B52C(a1);
  if (v50 >= 0)
    v51 = v1;
  else
    v51 = v50;
  if (v50)
    v1 = v51;
  else
    v1 = v1;
  if (v50)
    v52 = v50 >> 31;
  else
    v52 = 14;
  if (v52 != 14 && v52)
  {
    if (v50 < 0)
      return v1;
    v54 = *(_DWORD *)(a1 + 8);
    v53 = *(_DWORD *)(a1 + 12);
  }
  else
  {
    v53 = *(_DWORD *)(a1 + 12);
    v54 = v49 + v53;
    *(_DWORD *)(a1 + 8) = v54;
  }
  v55 = sub_21B610(a1);
  if (v55 >= 0)
    v56 = v1;
  else
    v56 = v55;
  if (v55)
    v1 = v56;
  else
    v1 = v1;
  if (v55)
    v57 = v55 >> 31;
  else
    v57 = 15;
  if (v57 != 15 && v57)
  {
    if (v55 < 0)
      return v1;
    v60 = *(_DWORD *)(a1 + 8);
    v59 = *(_DWORD *)(a1 + 12);
  }
  else
  {
    v58 = v54 - v53;
    v59 = *(_DWORD *)(a1 + 12);
    v60 = v58 + v59;
    *(_DWORD *)(a1 + 8) = v58 + v59;
  }
  v61 = sub_21B710(a1);
  if (v61 >= 0)
    v62 = v1;
  else
    v62 = v61;
  if (v61)
    v1 = v62;
  else
    v1 = v1;
  if (v61)
    v63 = v61 >> 31;
  else
    v63 = 16;
  if ((v63 | 0x10) == 0x10)
  {
    *(_DWORD *)(a1 + 8) = v60 - v59 + *(_DWORD *)(a1 + 12);
  }
  else if (v61 < 0)
  {
    return v1;
  }
  v64 = sub_21B7AC(a1);
  v65 = v64 >> 31;
  if (!v64)
    v65 = 17;
  if (!v65
    || v65 == 17
    || (v64 >= 0 ? (v66 = v1) : (v66 = v64), v64 ? (v1 = v66) : (v1 = v1), (v64 & 0x80000000) == 0))
  {
    v67 = *(_DWORD *)(a1 + 16);
    *(_DWORD *)(a1 + 8) = v67;
    if (**(_BYTE **)(a1 + 48))
    {
      do
      {
        v68 = *(unsigned int *)(a1 + 8);
        while (1)
        {
          *(_DWORD *)(a1 + 20) = v68;
          if (eq_s(a1, 1, &unk_31EC49))
            break;
          *(_DWORD *)(a1 + 8) = v68;
          v69 = skip_utf8(*(_QWORD *)a1, v68, 0, *(unsigned int *)(a1 + 12), 1);
          if ((v69 & 0x80000000) != 0)
            goto LABEL_155;
          v68 = v69;
          *(_DWORD *)(a1 + 8) = v69;
        }
        *(_DWORD *)(a1 + 24) = *(_DWORD *)(a1 + 8);
        *(_DWORD *)(a1 + 8) = v68;
        v1 = slice_from_s(a1, 1, &unk_31EC4A);
      }
      while ((v1 & 0x80000000) == 0);
    }
    else
    {
LABEL_155:
      *(_DWORD *)(a1 + 8) = v67;
      return 1;
    }
  }
  return v1;
}

uint64_t sub_21B52C(uint64_t a1)
{
  uint64_t v1;
  char v3;
  uint64_t result;
  int v5;
  void *v6;

  v1 = *(int *)(a1 + 8);
  *(_DWORD *)(a1 + 24) = v1;
  if ((int)v1 - 2 <= *(_DWORD *)(a1 + 16))
    return 0;
  v3 = *(_BYTE *)(v1 + *(_QWORD *)a1 - 1);
  if ((v3 & 0xE0) != 0x60 || ((0x81220u >> v3) & 1) == 0)
    return 0;
  result = find_among_b(a1, (uint64_t)&unk_4340D0, 7);
  if (!(_DWORD)result)
    return result;
  v5 = *(_DWORD *)(a1 + 8);
  *(_DWORD *)(a1 + 20) = v5;
  if (**(_DWORD **)(a1 + 40) > v5)
    return 0;
  if ((_DWORD)result == 3)
  {
    result = slice_del(a1);
    if ((result & 0x80000000) != 0)
      return result;
    return 1;
  }
  if ((_DWORD)result != 2)
  {
    if ((_DWORD)result == 1)
    {
      v6 = &unk_31ED16;
      goto LABEL_15;
    }
    return 1;
  }
  v6 = &unk_31ED18;
LABEL_15:
  result = slice_from_s(a1, 2, v6);
  if ((result & 0x80000000) == 0)
    return 1;
  return result;
}

uint64_t sub_21B610(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char v4;
  uint64_t result;
  int v6;
  int v7;

  v1 = *(int *)(a1 + 8);
  *(_DWORD *)(a1 + 24) = v1;
  v2 = v1 - 1;
  if ((int)v2 <= *(_DWORD *)(a1 + 16))
    return 0;
  v4 = *(_BYTE *)(*(_QWORD *)a1 + v2);
  if ((v4 & 0xE0) != 0x60 || ((0x3C7228u >> v4) & 1) == 0)
    return 0;
  result = find_among_b(a1, (uint64_t)&unk_4341B0, 19);
  if (!(_DWORD)result)
    return result;
  v6 = *(_DWORD *)(a1 + 8);
  *(_DWORD *)(a1 + 20) = v6;
  if (*(_DWORD *)(*(_QWORD *)(a1 + 40) + 4) > v6)
    return 0;
  if ((_DWORD)result == 2)
  {
    v7 = *(_DWORD *)(a1 + 12);
    if (!eq_s_b(a1, 1, &unk_31ED39))
    {
      *(_DWORD *)(a1 + 8) = v6 - v7 + *(_DWORD *)(a1 + 12);
      result = eq_s_b(a1, 1, &unk_31ED3A);
      if (!(_DWORD)result)
        return result;
    }
  }
  else if ((_DWORD)result != 1)
  {
    return 1;
  }
  result = slice_del(a1);
  if ((result & 0x80000000) == 0)
    return 1;
  return result;
}

uint64_t sub_21B710(uint64_t a1)
{
  uint64_t result;
  int v3;
  _DWORD *v4;
  int v5;

  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a1 + 8);
  result = eq_s_b(a1, 1, &unk_31ED77);
  if ((_DWORD)result)
  {
    v3 = *(_DWORD *)(a1 + 8);
    *(_DWORD *)(a1 + 20) = v3;
    v4 = *(_DWORD **)(a1 + 40);
    if (v4[1] > v3)
    {
      if (*v4 > v3)
        return 0;
      v5 = *(_DWORD *)(a1 + 12);
      if (sub_21B848(a1))
        return 0;
      *(_DWORD *)(a1 + 8) = v3 - v5 + *(_DWORD *)(a1 + 12);
    }
    LODWORD(result) = slice_del(a1);
    if ((int)result >= 0)
      return 1;
    else
      return result;
  }
  return result;
}

uint64_t sub_21B7AC(uint64_t a1)
{
  uint64_t result;
  int v3;
  int v4;

  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a1 + 8);
  result = eq_s_b(a1, 1, &unk_31ED78);
  if ((_DWORD)result)
  {
    v3 = *(_DWORD *)(a1 + 8);
    *(_DWORD *)(a1 + 20) = v3;
    if (*(_DWORD *)(*(_QWORD *)(a1 + 40) + 4) <= v3)
    {
      result = eq_s_b(a1, 1, &unk_31ED79);
      if ((_DWORD)result)
      {
        v4 = slice_del(a1);
        if (v4 >= 0)
          return 1;
        else
          return v4 & (v4 >> 31);
      }
    }
    else
    {
      return 0;
    }
  }
  return result;
}

_QWORD *porter_UTF_8_create_env()
{
  return SN_create_env(0, 2, 1);
}

void porter_UTF_8_close_env(uint64_t a1)
{
  SN_close_env(a1, 0);
}

BOOL sub_21B848(uint64_t a1)
{
  int v2;
  _BOOL8 result;
  int v4;

  v2 = out_grouping_b_U(a1, (uint64_t)&unk_31EC7C, 89, 121, 0);
  result = 0;
  if (!v2)
  {
    v4 = in_grouping_b_U(a1, (uint64_t)&unk_31EC43, 97, 121, 0);
    result = 0;
    if (!v4)
      return out_grouping_b_U(a1, (uint64_t)&unk_31EC43, 97, 121, 0) == 0;
  }
  return result;
}

uint64_t portuguese_UTF_8_stem(uint64_t a1)
{
  int v2;
  uint64_t i;
  uint64_t v4;
  uint64_t v5;
  int v6;
  int among;
  int v8;
  uint64_t v9;
  void *v10;
  uint64_t result;
  _DWORD *v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  uint64_t v23;
  char v24;
  int among_b;
  int v26;
  void *v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  int v33;
  int v34;
  int v35;
  void *v36;
  uint64_t v37;
  int v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  int v43;
  int v44;
  int v45;
  int v46;
  int v47;
  int v48;
  int v49;
  int v50;
  int v51;
  int v52;
  int v53;
  int v54;
  int v55;
  int v56;
  int v57;
  int v58;
  int v59;
  int v60;
  int v61;
  uint64_t v62;
  uint64_t j;
  uint64_t v64;
  uint64_t v65;
  int v66;
  int v67;
  uint64_t v68;
  void *v69;
  int v70;
  int v71;
  int v72;

  v2 = *(_DWORD *)(a1 + 8);
  for (i = v2; ; i = *(unsigned int *)(a1 + 8))
  {
    *(_DWORD *)(a1 + 20) = i;
    v4 = (int)i + 1;
    v5 = *(unsigned int *)(a1 + 12);
    if ((int)v4 >= (int)v5 || (v6 = *(unsigned __int8 *)(*(_QWORD *)a1 + v4), v6 != 163) && v6 != 181)
    {
      *(_DWORD *)(a1 + 24) = i;
      goto LABEL_11;
    }
    among = find_among(a1, (uint64_t)&unk_434410, 3);
    if (!among)
      goto LABEL_18;
    i = *(unsigned int *)(a1 + 8);
    *(_DWORD *)(a1 + 24) = i;
    if (among == 1)
    {
      v9 = a1;
      v10 = &unk_31ED85;
      goto LABEL_16;
    }
    if (among != 2)
      break;
    v9 = a1;
    v10 = &unk_31ED87;
LABEL_16:
    result = slice_from_s(v9, 2, v10);
    if ((result & 0x80000000) != 0)
      return result;
LABEL_13:
    ;
  }
  if (among != 3)
    goto LABEL_13;
  v5 = *(unsigned int *)(a1 + 12);
LABEL_11:
  v8 = skip_utf8(*(_QWORD *)a1, i, 0, v5, 1);
  if ((v8 & 0x80000000) == 0)
  {
    *(_DWORD *)(a1 + 8) = v8;
    goto LABEL_13;
  }
LABEL_18:
  *(_DWORD *)(a1 + 8) = v2;
  v12 = *(_DWORD **)(a1 + 40);
  *v12 = *(_DWORD *)(a1 + 12);
  v12[1] = *(_DWORD *)(a1 + 12);
  v12[2] = *(_DWORD *)(a1 + 12);
  v13 = *(_DWORD *)(a1 + 8);
  if (!in_grouping_U(a1, (uint64_t)&unk_31ED8D, 97, 250, 0))
  {
    if ((v14 = *(_DWORD *)(a1 + 8), !out_grouping_U(a1, (uint64_t)&unk_31ED8D, 97, 250, 0))
      && (v17 = out_grouping_U(a1, (uint64_t)&unk_31ED8D, 97, 250, 1), (v17 & 0x80000000) == 0)
      || (*(_DWORD *)(a1 + 8) = v14, !in_grouping_U(a1, (uint64_t)&unk_31ED8D, 97, 250, 0))
      && (v17 = in_grouping_U(a1, (uint64_t)&unk_31ED8D, 97, 250, 1), (v17 & 0x80000000) == 0))
    {
LABEL_31:
      v16 = *(_DWORD *)(a1 + 8) + v17;
      goto LABEL_32;
    }
  }
  *(_DWORD *)(a1 + 8) = v13;
  if (!out_grouping_U(a1, (uint64_t)&unk_31ED8D, 97, 250, 0))
  {
    v15 = *(_DWORD *)(a1 + 8);
    if (!out_grouping_U(a1, (uint64_t)&unk_31ED8D, 97, 250, 0))
    {
      v17 = out_grouping_U(a1, (uint64_t)&unk_31ED8D, 97, 250, 1);
      if ((v17 & 0x80000000) == 0)
        goto LABEL_31;
    }
    *(_DWORD *)(a1 + 8) = v15;
    if (!in_grouping_U(a1, (uint64_t)&unk_31ED8D, 97, 250, 0))
    {
      v16 = skip_utf8(*(_QWORD *)a1, *(unsigned int *)(a1 + 8), 0, *(unsigned int *)(a1 + 12), 1);
      if ((v16 & 0x80000000) == 0)
LABEL_32:
        **(_DWORD **)(a1 + 40) = v16;
    }
  }
  *(_DWORD *)(a1 + 8) = v13;
  v18 = out_grouping_U(a1, (uint64_t)&unk_31ED8D, 97, 250, 1);
  if ((v18 & 0x80000000) == 0)
  {
    *(_DWORD *)(a1 + 8) += v18;
    v19 = in_grouping_U(a1, (uint64_t)&unk_31ED8D, 97, 250, 1);
    if ((v19 & 0x80000000) == 0)
    {
      v20 = *(_DWORD *)(a1 + 8) + v19;
      *(_DWORD *)(a1 + 8) = v20;
      *(_DWORD *)(*(_QWORD *)(a1 + 40) + 4) = v20;
      v21 = out_grouping_U(a1, (uint64_t)&unk_31ED8D, 97, 250, 1);
      if ((v21 & 0x80000000) == 0)
      {
        *(_DWORD *)(a1 + 8) += v21;
        v22 = in_grouping_U(a1, (uint64_t)&unk_31ED8D, 97, 250, 1);
        if ((v22 & 0x80000000) == 0)
          *(_DWORD *)(*(_QWORD *)(a1 + 40) + 8) = *(_DWORD *)(a1 + 8) + v22;
      }
    }
  }
  *(_DWORD *)(a1 + 16) = v2;
  v23 = *(int *)(a1 + 12);
  *(_DWORD *)(a1 + 8) = v23;
  *(_DWORD *)(a1 + 24) = v23;
  if ((int)v23 - 2 > v2)
  {
    v24 = *(_BYTE *)(v23 + *(_QWORD *)a1 - 1);
    if ((v24 & 0xE0) == 0x60 && ((0xCD022u >> v24) & 1) != 0)
    {
      among_b = find_among_b(a1, (uint64_t)&unk_434470, 45);
      if (among_b)
      {
        v26 = *(_DWORD *)(a1 + 8);
        *(_DWORD *)(a1 + 20) = v26;
        switch(among_b)
        {
          case 1:
            if (*(_DWORD *)(*(_QWORD *)(a1 + 40) + 8) > v26)
              break;
            goto LABEL_44;
          case 2:
            if (*(_DWORD *)(*(_QWORD *)(a1 + 40) + 8) > v26)
              break;
            v27 = &unk_31EDA1;
            v28 = a1;
            v29 = 3;
            goto LABEL_87;
          case 3:
            if (*(_DWORD *)(*(_QWORD *)(a1 + 40) + 8) > v26)
              break;
            v27 = &unk_31EDA4;
            v28 = a1;
            v29 = 1;
            goto LABEL_87;
          case 4:
            if (*(_DWORD *)(*(_QWORD *)(a1 + 40) + 8) > v26)
              break;
            v27 = &unk_31EDA5;
            v28 = a1;
            v29 = 4;
            goto LABEL_87;
          case 5:
            if (*(_DWORD *)(*(_QWORD *)(a1 + 40) + 4) > v26)
              break;
            result = slice_del(a1);
            if ((result & 0x80000000) != 0)
              return result;
            v30 = *(int *)(a1 + 8);
            *(_DWORD *)(a1 + 24) = v30;
            v31 = v30 - 1;
            if ((int)v31 <= *(_DWORD *)(a1 + 16))
              goto LABEL_94;
            v32 = *(_BYTE *)(*(_QWORD *)a1 + v31);
            if ((v32 & 0xE0) != 0x60)
              goto LABEL_94;
            if (((0x480018u >> v32) & 1) == 0)
              goto LABEL_94;
            v33 = find_among_b(a1, (uint64_t)&unk_434A10, 4);
            if (!v33)
              goto LABEL_94;
            v34 = *(_DWORD *)(a1 + 8);
            *(_DWORD *)(a1 + 20) = v34;
            if (*(_DWORD *)(*(_QWORD *)(a1 + 40) + 8) > v34)
              goto LABEL_94;
            v35 = v33;
            result = slice_del(a1);
            if ((result & 0x80000000) != 0)
              return result;
            if (v35 != 1)
              goto LABEL_94;
            *(_DWORD *)(a1 + 24) = *(_DWORD *)(a1 + 8);
            v36 = &unk_31EDA9;
LABEL_80:
            if (!eq_s_b(a1, 2, v36))
              goto LABEL_94;
            v44 = *(_DWORD *)(a1 + 8);
            *(_DWORD *)(a1 + 20) = v44;
LABEL_82:
            if (*(_DWORD *)(*(_QWORD *)(a1 + 40) + 8) > v44)
              goto LABEL_94;
LABEL_44:
            result = slice_del(a1);
            if ((result & 0x80000000) != 0)
              return result;
            goto LABEL_94;
          case 6:
            if (*(_DWORD *)(*(_QWORD *)(a1 + 40) + 8) > v26)
              break;
            result = slice_del(a1);
            if ((result & 0x80000000) != 0)
              return result;
            v37 = *(int *)(a1 + 8);
            *(_DWORD *)(a1 + 24) = v37;
            if ((int)v37 - 3 <= *(_DWORD *)(a1 + 16))
              goto LABEL_94;
            v38 = *(unsigned __int8 *)(v37 + *(_QWORD *)a1 - 1);
            if (v38 != 108 && v38 != 101)
              goto LABEL_94;
            v39 = &unk_434A90;
            goto LABEL_74;
          case 7:
            if (*(_DWORD *)(*(_QWORD *)(a1 + 40) + 8) > v26)
              break;
            result = slice_del(a1);
            if ((result & 0x80000000) != 0)
              return result;
            v40 = *(int *)(a1 + 8);
            *(_DWORD *)(a1 + 24) = v40;
            v41 = v40 - 1;
            if ((int)v41 <= *(_DWORD *)(a1 + 16))
              goto LABEL_94;
            v42 = *(_BYTE *)(*(_QWORD *)a1 + v41);
            if ((v42 & 0xE0) != 0x60 || ((0x401008u >> v42) & 1) == 0)
              goto LABEL_94;
            v39 = &unk_434AF0;
LABEL_74:
            v43 = find_among_b(a1, (uint64_t)v39, 3);
            if (!v43)
              goto LABEL_94;
            v44 = *(_DWORD *)(a1 + 8);
            *(_DWORD *)(a1 + 20) = v44;
            if (v43 != 1)
              goto LABEL_94;
            goto LABEL_82;
          case 8:
            if (*(_DWORD *)(*(_QWORD *)(a1 + 40) + 8) > v26)
              break;
            result = slice_del(a1);
            if ((result & 0x80000000) != 0)
              return result;
            *(_DWORD *)(a1 + 24) = *(_DWORD *)(a1 + 8);
            v36 = &unk_31EDAB;
            goto LABEL_80;
          case 9:
            if (**(_DWORD **)(a1 + 40) > v26 || !eq_s_b(a1, 1, &unk_31EDAD))
              break;
            v27 = &unk_31EDAE;
            v28 = a1;
            v29 = 2;
LABEL_87:
            result = slice_from_s(v28, v29, v27);
            if ((result & 0x80000000) != 0)
              return result;
            goto LABEL_94;
          default:
            goto LABEL_94;
        }
      }
    }
  }
  v45 = *(_DWORD *)(a1 + 12);
  *(_DWORD *)(a1 + 8) = v45;
  v46 = **(_DWORD **)(a1 + 40);
  if (v45 < v46)
  {
LABEL_98:
    *(_DWORD *)(a1 + 8) = v45;
    *(_DWORD *)(a1 + 24) = v45;
    v53 = find_among_b(a1, (uint64_t)&unk_435A50, 7);
    if (!v53)
      goto LABEL_102;
    v52 = *(_DWORD *)(a1 + 8);
    *(_DWORD *)(a1 + 20) = v52;
    if (v53 != 1)
      goto LABEL_102;
LABEL_100:
    if (**(_DWORD **)(a1 + 40) > v52)
      goto LABEL_102;
    result = slice_del(a1);
    if ((result & 0x80000000) == 0)
      goto LABEL_102;
    return result;
  }
  v47 = *(_DWORD *)(a1 + 16);
  *(_DWORD *)(a1 + 16) = v46;
  *(_DWORD *)(a1 + 24) = v45;
  v48 = find_among_b(a1, (uint64_t)&unk_434B50, 120);
  if (!v48)
  {
    *(_DWORD *)(a1 + 16) = v47;
    v45 = *(_DWORD *)(a1 + 12);
    goto LABEL_98;
  }
  *(_DWORD *)(a1 + 20) = *(_DWORD *)(a1 + 8);
  if (v48 == 1)
  {
    result = slice_del(a1);
    if ((result & 0x80000000) != 0)
      return result;
  }
  *(_DWORD *)(a1 + 16) = v47;
LABEL_94:
  v49 = *(_DWORD *)(a1 + 12);
  *(_DWORD *)(a1 + 8) = v49;
  *(_DWORD *)(a1 + 24) = v49;
  if (eq_s_b(a1, 1, &unk_31ED83))
  {
    v51 = *(_DWORD *)(a1 + 8);
    v50 = *(_DWORD *)(a1 + 12);
    *(_DWORD *)(a1 + 20) = v51;
    if (eq_s_b(a1, 1, &unk_31ED84))
    {
      v52 = *(_DWORD *)(a1 + 12) + v51 - v50;
      *(_DWORD *)(a1 + 8) = v52;
      goto LABEL_100;
    }
  }
LABEL_102:
  v54 = *(_DWORD *)(a1 + 12);
  *(_DWORD *)(a1 + 8) = v54;
  *(_DWORD *)(a1 + 24) = v54;
  v55 = find_among_b(a1, (uint64_t)&unk_435B30, 4);
  if (!v55)
    goto LABEL_111;
  v56 = *(_DWORD *)(a1 + 8);
  *(_DWORD *)(a1 + 20) = v56;
  if (v55 == 2)
  {
    result = slice_from_s(a1, 1, &unk_31F0D8);
    if ((result & 0x80000000) != 0)
      return result;
    goto LABEL_111;
  }
  if (v55 != 1 || **(_DWORD **)(a1 + 40) > v56)
    goto LABEL_111;
  result = slice_del(a1);
  if ((result & 0x80000000) != 0)
    return result;
  v57 = *(_DWORD *)(a1 + 8);
  v58 = *(_DWORD *)(a1 + 12);
  *(_DWORD *)(a1 + 24) = v57;
  if (!eq_s_b(a1, 1, &unk_31F0D4)
    || (v59 = *(_DWORD *)(a1 + 8),
        v60 = *(_DWORD *)(a1 + 12),
        *(_DWORD *)(a1 + 20) = v59,
        !eq_s_b(a1, 1, &unk_31F0D5)))
  {
    *(_DWORD *)(a1 + 8) = v57 - v58 + *(_DWORD *)(a1 + 12);
    if (eq_s_b(a1, 1, &unk_31F0D6))
    {
      v70 = *(_DWORD *)(a1 + 8);
      v71 = *(_DWORD *)(a1 + 12);
      *(_DWORD *)(a1 + 20) = v70;
      if (eq_s_b(a1, 1, &unk_31F0D7))
      {
        v61 = v70 - v71;
        goto LABEL_132;
      }
    }
    goto LABEL_111;
  }
  v61 = v59 - v60;
LABEL_132:
  v72 = *(_DWORD *)(a1 + 12) + v61;
  *(_DWORD *)(a1 + 8) = v72;
  if (**(_DWORD **)(a1 + 40) > v72 || (result = slice_del(a1), (result & 0x80000000) == 0))
  {
LABEL_111:
    v62 = *(unsigned int *)(a1 + 16);
    *(_DWORD *)(a1 + 8) = v62;
    for (j = v62; ; j = *(unsigned int *)(a1 + 8))
    {
      *(_DWORD *)(a1 + 20) = j;
      v64 = (int)j + 1;
      v65 = *(unsigned int *)(a1 + 12);
      if ((int)v64 < (int)v65 && *(_BYTE *)(*(_QWORD *)a1 + v64) == 126)
      {
        v66 = find_among(a1, (uint64_t)&unk_435BB0, 3);
        if (!v66)
          goto LABEL_127;
        j = *(unsigned int *)(a1 + 8);
        *(_DWORD *)(a1 + 24) = j;
        if (v66 == 1)
        {
          v68 = a1;
          v69 = &unk_31F0E0;
          goto LABEL_125;
        }
        if (v66 == 2)
        {
          v68 = a1;
          v69 = &unk_31F0E2;
LABEL_125:
          result = slice_from_s(v68, 2, v69);
          if ((result & 0x80000000) != 0)
            return result;
          continue;
        }
        if (v66 != 3)
          continue;
        v65 = *(unsigned int *)(a1 + 12);
      }
      else
      {
        *(_DWORD *)(a1 + 24) = j;
      }
      v67 = skip_utf8(*(_QWORD *)a1, j, 0, v65, 1);
      if (v67 < 0)
      {
LABEL_127:
        *(_DWORD *)(a1 + 8) = v62;
        return 1;
      }
      *(_DWORD *)(a1 + 8) = v67;
    }
  }
  return result;
}

_QWORD *portuguese_UTF_8_create_env()
{
  return SN_create_env(0, 3, 0);
}

void portuguese_UTF_8_close_env(uint64_t a1)
{
  SN_close_env(a1, 0);
}

uint64_t romanian_UTF_8_stem(uint64_t a1)
{
  int v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  void *v6;
  uint64_t result;
  uint64_t v8;
  _DWORD *v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  int among_b;
  int v24;
  void *v25;
  int v26;
  uint64_t v27;
  int v28;
  int v29;
  int v30;
  int v31;
  int v32;
  uint64_t v33;
  int v34;
  void *v35;
  int v36;
  int v37;
  int v38;
  int v39;
  void *v40;
  uint64_t v41;
  int v42;
  int v43;
  int v44;
  int v45;
  int v46;
  int v47;
  int v48;
  int v49;
  int v50;
  int v51;
  uint64_t v53;
  uint64_t i;
  uint64_t v55;
  int v56;
  int among;
  int v58;
  uint64_t v59;
  void *v60;

  v2 = *(_DWORD *)(a1 + 8);
  v3 = v2;
  while (!in_grouping_U(a1, (uint64_t)&unk_31F0F5, 97, 259, 0))
  {
    v4 = *(_DWORD *)(a1 + 8);
    *(_DWORD *)(a1 + 20) = v4;
    if (eq_s(a1, 1, &unk_31F10A)
      && (*(_DWORD *)(a1 + 24) = *(_DWORD *)(a1 + 8), !in_grouping_U(a1, (uint64_t)&unk_31F0F5, 97, 259, 0)))
    {
      v5 = a1;
      v6 = &unk_31F10B;
    }
    else
    {
      *(_DWORD *)(a1 + 8) = v4;
      if (!eq_s(a1, 1, &unk_31F10C))
        break;
      *(_DWORD *)(a1 + 24) = *(_DWORD *)(a1 + 8);
      if (in_grouping_U(a1, (uint64_t)&unk_31F0F5, 97, 259, 0))
        break;
      v5 = a1;
      v6 = &unk_31F10D;
    }
    result = slice_from_s(v5, 1, v6);
    if ((result & 0x80000000) != 0)
      return result;
LABEL_10:
    *(_DWORD *)(a1 + 8) = v3;
  }
  *(_DWORD *)(a1 + 8) = v3;
  v8 = skip_utf8(*(_QWORD *)a1, v3, 0, *(unsigned int *)(a1 + 12), 1);
  if ((v8 & 0x80000000) == 0)
  {
    v3 = v8;
    goto LABEL_10;
  }
  *(_DWORD *)(a1 + 8) = v2;
  v9 = *(_DWORD **)(a1 + 40);
  *v9 = *(_DWORD *)(a1 + 12);
  v9[1] = *(_DWORD *)(a1 + 12);
  v9[2] = *(_DWORD *)(a1 + 12);
  v10 = *(_DWORD *)(a1 + 8);
  if (!in_grouping_U(a1, (uint64_t)&unk_31F0F5, 97, 259, 0))
  {
    if ((v11 = *(_DWORD *)(a1 + 8), !out_grouping_U(a1, (uint64_t)&unk_31F0F5, 97, 259, 0))
      && (v14 = out_grouping_U(a1, (uint64_t)&unk_31F0F5, 97, 259, 1), (v14 & 0x80000000) == 0)
      || (*(_DWORD *)(a1 + 8) = v11, !in_grouping_U(a1, (uint64_t)&unk_31F0F5, 97, 259, 0))
      && (v14 = in_grouping_U(a1, (uint64_t)&unk_31F0F5, 97, 259, 1), (v14 & 0x80000000) == 0))
    {
LABEL_26:
      v13 = *(_DWORD *)(a1 + 8) + v14;
      goto LABEL_27;
    }
  }
  *(_DWORD *)(a1 + 8) = v10;
  if (!out_grouping_U(a1, (uint64_t)&unk_31F0F5, 97, 259, 0))
  {
    v12 = *(_DWORD *)(a1 + 8);
    if (!out_grouping_U(a1, (uint64_t)&unk_31F0F5, 97, 259, 0))
    {
      v14 = out_grouping_U(a1, (uint64_t)&unk_31F0F5, 97, 259, 1);
      if ((v14 & 0x80000000) == 0)
        goto LABEL_26;
    }
    *(_DWORD *)(a1 + 8) = v12;
    if (!in_grouping_U(a1, (uint64_t)&unk_31F0F5, 97, 259, 0))
    {
      v13 = skip_utf8(*(_QWORD *)a1, *(unsigned int *)(a1 + 8), 0, *(unsigned int *)(a1 + 12), 1);
      if ((v13 & 0x80000000) == 0)
LABEL_27:
        **(_DWORD **)(a1 + 40) = v13;
    }
  }
  *(_DWORD *)(a1 + 8) = v10;
  v15 = out_grouping_U(a1, (uint64_t)&unk_31F0F5, 97, 259, 1);
  if ((v15 & 0x80000000) == 0)
  {
    *(_DWORD *)(a1 + 8) += v15;
    v16 = in_grouping_U(a1, (uint64_t)&unk_31F0F5, 97, 259, 1);
    if ((v16 & 0x80000000) == 0)
    {
      v17 = *(_DWORD *)(a1 + 8) + v16;
      *(_DWORD *)(a1 + 8) = v17;
      *(_DWORD *)(*(_QWORD *)(a1 + 40) + 4) = v17;
      v18 = out_grouping_U(a1, (uint64_t)&unk_31F0F5, 97, 259, 1);
      if ((v18 & 0x80000000) == 0)
      {
        *(_DWORD *)(a1 + 8) += v18;
        v19 = in_grouping_U(a1, (uint64_t)&unk_31F0F5, 97, 259, 1);
        if ((v19 & 0x80000000) == 0)
          *(_DWORD *)(*(_QWORD *)(a1 + 40) + 8) = *(_DWORD *)(a1 + 8) + v19;
      }
    }
  }
  *(_DWORD *)(a1 + 16) = v2;
  v20 = *(int *)(a1 + 12);
  *(_DWORD *)(a1 + 8) = v20;
  *(_DWORD *)(a1 + 24) = v20;
  v21 = v20 - 1;
  if ((int)v21 > v2)
  {
    v22 = *(_BYTE *)(*(_QWORD *)a1 + v21);
    if ((v22 & 0xE0) == 0x60 && ((0x41222u >> v22) & 1) != 0)
    {
      among_b = find_among_b(a1, (uint64_t)&unk_435C10, 16);
      if (among_b)
      {
        v24 = *(_DWORD *)(a1 + 8);
        *(_DWORD *)(a1 + 20) = v24;
        if (*(_DWORD *)(*(_QWORD *)(a1 + 40) + 4) <= v24)
        {
          switch(among_b)
          {
            case 1:
              result = slice_del(a1);
              if ((result & 0x80000000) == 0)
                goto LABEL_50;
              return result;
            case 2:
              v25 = &unk_31F10E;
              goto LABEL_46;
            case 3:
              v25 = &unk_31F10F;
              goto LABEL_46;
            case 4:
              v25 = &unk_31F110;
              goto LABEL_46;
            case 5:
              v26 = *(_DWORD *)(a1 + 12);
              if (eq_s_b(a1, 2, &unk_31F111))
                goto LABEL_50;
              *(_DWORD *)(a1 + 8) = v24 - v26 + *(_DWORD *)(a1 + 12);
              v25 = &unk_31F113;
LABEL_46:
              v27 = a1;
              v28 = 1;
              break;
            case 6:
              v25 = &unk_31F114;
              v27 = a1;
              v28 = 2;
              break;
            case 7:
              v25 = &unk_31F116;
              v27 = a1;
              v28 = 4;
              break;
            default:
              goto LABEL_50;
          }
          result = slice_from_s(v27, v28, v25);
          if ((result & 0x80000000) != 0)
            return result;
        }
      }
    }
  }
LABEL_50:
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a1 + 12);
  **(_BYTE **)(a1 + 48) = 0;
  v29 = *(_DWORD *)(a1 + 8);
  v30 = v29 - *(_DWORD *)(a1 + 12);
  *(_DWORD *)(a1 + 24) = v29;
  v31 = find_among_b(a1, (uint64_t)&unk_4365D0, 46);
  if (v31)
  {
    while (2)
    {
      v32 = *(_DWORD *)(a1 + 8);
      *(_DWORD *)(a1 + 20) = v32;
      if (*(_DWORD *)(*(_QWORD *)(a1 + 40) + 4) <= v32)
      {
        switch(v31)
        {
          case 1:
            v33 = a1;
            v34 = 4;
            v35 = &unk_31F158;
            goto LABEL_59;
          case 2:
            v33 = a1;
            v34 = 4;
            v35 = &unk_31F15C;
            goto LABEL_59;
          case 3:
            v33 = a1;
            v34 = 2;
            v35 = &unk_31F160;
            goto LABEL_59;
          case 4:
            v33 = a1;
            v34 = 2;
            v35 = &unk_31F162;
            goto LABEL_59;
          case 5:
            v33 = a1;
            v34 = 2;
            v35 = &unk_31F164;
            goto LABEL_59;
          case 6:
            v33 = a1;
            v34 = 2;
            v35 = &unk_31F166;
LABEL_59:
            result = slice_from_s(v33, v34, v35);
            if ((result & 0x80000000) == 0)
              goto LABEL_60;
            return result;
          default:
LABEL_60:
            **(_BYTE **)(a1 + 48) = 1;
            v36 = *(_DWORD *)(a1 + 12) + v30;
            *(_DWORD *)(a1 + 8) = v36;
            *(_DWORD *)(a1 + 24) = v36;
            v31 = find_among_b(a1, (uint64_t)&unk_4365D0, 46);
            if (!v31)
              break;
            continue;
        }
      }
      break;
    }
  }
  v37 = *(_DWORD *)(a1 + 12) + v30;
  *(_DWORD *)(a1 + 8) = v37;
  *(_DWORD *)(a1 + 24) = v37;
  v38 = find_among_b(a1, (uint64_t)&unk_435E10, 62);
  if (!v38)
    goto LABEL_73;
  v39 = *(_DWORD *)(a1 + 8);
  *(_DWORD *)(a1 + 20) = v39;
  if (*(_DWORD *)(*(_QWORD *)(a1 + 40) + 8) > v39)
    goto LABEL_73;
  switch(v38)
  {
    case 3:
      v40 = &unk_31F155;
      v41 = a1;
      v42 = 3;
      goto LABEL_71;
    case 2:
      if (!eq_s_b(a1, 2, &unk_31F152))
        goto LABEL_73;
      *(_DWORD *)(a1 + 20) = *(_DWORD *)(a1 + 8);
      v40 = &unk_31F154;
      v41 = a1;
      v42 = 1;
LABEL_71:
      result = slice_from_s(v41, v42, v40);
      if ((result & 0x80000000) != 0)
        return result;
      break;
    case 1:
      result = slice_del(a1);
      if ((result & 0x80000000) != 0)
        return result;
      break;
  }
  **(_BYTE **)(a1 + 48) = 1;
LABEL_73:
  v43 = *(_DWORD *)(a1 + 12);
  *(_DWORD *)(a1 + 8) = v43;
  if (**(_BYTE **)(a1 + 48) || (v44 = **(_DWORD **)(a1 + 40), v43 < v44))
  {
LABEL_82:
    v49 = *(_DWORD *)(a1 + 12);
    *(_DWORD *)(a1 + 8) = v49;
    *(_DWORD *)(a1 + 24) = v49;
    v50 = find_among_b(a1, (uint64_t)&unk_437750, 5);
    if (v50)
    {
      v51 = *(_DWORD *)(a1 + 8);
      *(_DWORD *)(a1 + 20) = v51;
      if (**(_DWORD **)(a1 + 40) <= v51 && v50 == 1)
      {
        result = slice_del(a1);
        if ((result & 0x80000000) != 0)
          return result;
      }
    }
    v53 = *(unsigned int *)(a1 + 16);
    *(_DWORD *)(a1 + 8) = v53;
    for (i = v53; ; i = *(unsigned int *)(a1 + 8))
    {
      *(_DWORD *)(a1 + 20) = i;
      v55 = *(unsigned int *)(a1 + 12);
      if ((int)i < (int)v55 && ((v56 = *(unsigned __int8 *)(*(_QWORD *)a1 + (int)i), v56 == 73) || v56 == 85))
      {
        among = find_among(a1, (uint64_t)&unk_4377F0, 3);
        if (!among)
          goto LABEL_106;
        i = *(unsigned int *)(a1 + 8);
        *(_DWORD *)(a1 + 24) = i;
        if (among == 1)
        {
          v59 = a1;
          v60 = &unk_31F537;
          goto LABEL_104;
        }
        if (among == 2)
        {
          v59 = a1;
          v60 = &unk_31F538;
LABEL_104:
          result = slice_from_s(v59, 1, v60);
          if ((result & 0x80000000) != 0)
            return result;
          continue;
        }
        if (among != 3)
          continue;
        v55 = *(unsigned int *)(a1 + 12);
      }
      else
      {
        *(_DWORD *)(a1 + 24) = i;
      }
      v58 = skip_utf8(*(_QWORD *)a1, i, 0, v55, 1);
      if (v58 < 0)
      {
LABEL_106:
        *(_DWORD *)(a1 + 8) = v53;
        return 1;
      }
      *(_DWORD *)(a1 + 8) = v58;
    }
  }
  v45 = *(_DWORD *)(a1 + 16);
  *(_DWORD *)(a1 + 16) = v44;
  *(_DWORD *)(a1 + 24) = v43;
  v46 = find_among_b(a1, (uint64_t)&unk_436B90, 94);
  if (!v46
    || (v47 = *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 20) = v47, v46 != 2)
    && (v46 != 1
     || (v48 = *(_DWORD *)(a1 + 12), out_grouping_b_U(a1, (uint64_t)&unk_31F0F5, 97, 259, 0))
     && (*(_DWORD *)(a1 + 8) = v47 - v48 + *(_DWORD *)(a1 + 12), !eq_s_b(a1, 1, &unk_31F370)))
    || (result = slice_del(a1), (result & 0x80000000) == 0))
  {
    *(_DWORD *)(a1 + 16) = v45;
    goto LABEL_82;
  }
  return result;
}

_QWORD *romanian_UTF_8_create_env()
{
  return SN_create_env(0, 3, 1);
}

void romanian_UTF_8_close_env(uint64_t a1)
{
  SN_close_env(a1, 0);
}

uint64_t russian_UTF_8_stem(uint64_t a1)
{
  int v2;
  _DWORD *v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  uint64_t result;
  int among_b;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  int v23;
  int v24;
  int v25;
  int v26;
  int v27;
  int v28;
  int v29;
  int v30;
  int v31;
  int v32;
  int v33;
  int v34;
  int v35;
  int v36;
  int v37;
  void *v38;
  int v39;

  v2 = *(_DWORD *)(a1 + 8);
  v3 = *(_DWORD **)(a1 + 40);
  *v3 = *(_DWORD *)(a1 + 12);
  v3[1] = *(_DWORD *)(a1 + 12);
  v4 = out_grouping_U(a1, (uint64_t)&unk_31F53D, 1072, 1103, 1);
  if ((v4 & 0x80000000) == 0)
  {
    v5 = *(_DWORD *)(a1 + 8) + v4;
    *(_DWORD *)(a1 + 8) = v5;
    **(_DWORD **)(a1 + 40) = v5;
    v6 = in_grouping_U(a1, (uint64_t)&unk_31F53D, 1072, 1103, 1);
    if ((v6 & 0x80000000) == 0)
    {
      *(_DWORD *)(a1 + 8) += v6;
      v7 = out_grouping_U(a1, (uint64_t)&unk_31F53D, 1072, 1103, 1);
      if ((v7 & 0x80000000) == 0)
      {
        *(_DWORD *)(a1 + 8) += v7;
        v8 = in_grouping_U(a1, (uint64_t)&unk_31F53D, 1072, 1103, 1);
        if ((v8 & 0x80000000) == 0)
          *(_DWORD *)(*(_QWORD *)(a1 + 40) + 4) = *(_DWORD *)(a1 + 8) + v8;
      }
    }
  }
  *(_DWORD *)(a1 + 16) = v2;
  v9 = *(_DWORD *)(a1 + 12);
  *(_DWORD *)(a1 + 8) = v9;
  v10 = **(_DWORD **)(a1 + 40);
  if (v9 < v10)
    return 0;
  *(_DWORD *)(a1 + 16) = v10;
  *(_DWORD *)(a1 + 8) = v9;
  *(_DWORD *)(a1 + 24) = v9;
  among_b = find_among_b(a1, (uint64_t)&unk_437850, 9);
  if (among_b)
  {
    v13 = *(_DWORD *)(a1 + 8);
    *(_DWORD *)(a1 + 20) = v13;
    if (among_b == 2)
      goto LABEL_37;
    if (among_b != 1)
      goto LABEL_38;
    v14 = *(_DWORD *)(a1 + 12);
    if (eq_s_b(a1, 2, &unk_31F541))
      goto LABEL_37;
    *(_DWORD *)(a1 + 8) = v13 - v14 + *(_DWORD *)(a1 + 12);
    if (eq_s_b(a1, 2, &unk_31F543))
      goto LABEL_37;
  }
  v16 = *(_DWORD *)(a1 + 12);
  v15 = *(_DWORD *)(a1 + 16);
  *(_DWORD *)(a1 + 8) = v16;
  *(_DWORD *)(a1 + 24) = v16;
  if (v16 - 3 <= v15)
    goto LABEL_21;
  v17 = *(unsigned __int8 *)(v16 + *(_QWORD *)a1 - 1);
  if (v17 != 143 && v17 != 140)
    goto LABEL_21;
  v18 = find_among_b(a1, (uint64_t)&unk_437970, 2);
  if (!v18)
  {
    v16 = *(_DWORD *)(a1 + 12);
LABEL_21:
    *(_DWORD *)(a1 + 8) = v16;
    goto LABEL_22;
  }
  v16 = *(_DWORD *)(a1 + 8);
  *(_DWORD *)(a1 + 20) = v16;
  if (v18 == 1)
  {
    result = slice_del(a1);
    if ((result & 0x80000000) != 0)
      return result;
    v16 = *(_DWORD *)(a1 + 8);
  }
LABEL_22:
  v19 = *(_DWORD *)(a1 + 12);
  *(_DWORD *)(a1 + 24) = v16;
  v20 = find_among_b(a1, (uint64_t)&unk_437AB0, 26);
  if (v20)
  {
    v21 = *(_DWORD *)(a1 + 8);
    *(_DWORD *)(a1 + 20) = v21;
    if (v20 == 1)
    {
      result = slice_del(a1);
      if ((result & 0x80000000) != 0)
        return result;
      v21 = *(_DWORD *)(a1 + 8);
    }
    *(_DWORD *)(a1 + 24) = v21;
    v22 = find_among_b(a1, (uint64_t)&unk_4379B0, 8);
    if (!v22)
      goto LABEL_38;
    v23 = *(_DWORD *)(a1 + 8);
    *(_DWORD *)(a1 + 20) = v23;
    if (v22 != 2)
    {
      if (v22 != 1)
        goto LABEL_38;
      v24 = *(_DWORD *)(a1 + 12);
      if (!eq_s_b(a1, 2, &unk_31F58F))
      {
        *(_DWORD *)(a1 + 8) = v23 - v24 + *(_DWORD *)(a1 + 12);
        if (!eq_s_b(a1, 2, &unk_31F591))
          goto LABEL_38;
      }
    }
  }
  else
  {
    v25 = v19 - v16;
    v26 = *(_DWORD *)(a1 + 12) - v25;
    *(_DWORD *)(a1 + 8) = v26;
    *(_DWORD *)(a1 + 24) = v26;
    v27 = find_among_b(a1, (uint64_t)&unk_437DF0, 46);
    if (!v27)
      goto LABEL_61;
    v28 = *(_DWORD *)(a1 + 8);
    *(_DWORD *)(a1 + 20) = v28;
    if (v27 != 2)
    {
      if (v27 != 1)
        goto LABEL_38;
      v29 = *(_DWORD *)(a1 + 12);
      if (!eq_s_b(a1, 2, &unk_31F62B))
      {
        *(_DWORD *)(a1 + 8) = v28 - v29 + *(_DWORD *)(a1 + 12);
        if (!eq_s_b(a1, 2, &unk_31F62D))
        {
LABEL_61:
          *(_DWORD *)(a1 + 8) = *(_DWORD *)(a1 + 12) - v25;
          LODWORD(result) = sub_21D06C((_DWORD *)a1);
          v39 = result;
          if ((int)result >= 0)
            result = 1;
          else
            result = result;
          if (v39 < 0)
            return result;
          goto LABEL_38;
        }
      }
    }
  }
LABEL_37:
  result = slice_del(a1);
  if ((result & 0x80000000) != 0)
    return result;
LABEL_38:
  v30 = *(_DWORD *)(a1 + 12);
  *(_DWORD *)(a1 + 8) = v30;
  *(_DWORD *)(a1 + 24) = v30;
  if (eq_s_b(a1, 2, &unk_31F53B))
  {
    *(_DWORD *)(a1 + 20) = *(_DWORD *)(a1 + 8);
    result = slice_del(a1);
    if ((result & 0x80000000) != 0)
      return result;
    v31 = *(_DWORD *)(a1 + 8);
    v32 = *(_DWORD *)(a1 + 12);
  }
  else
  {
    v31 = *(_DWORD *)(a1 + 12);
    *(_DWORD *)(a1 + 8) = v31;
    v32 = v31;
  }
  *(_DWORD *)(a1 + 24) = v31;
  if (v31 - 5 <= *(_DWORD *)(a1 + 16)
    || (v33 = *(unsigned __int8 *)(*(_QWORD *)a1 + v31 - 1), v33 != 140) && v33 != 130
    || (v34 = find_among_b(a1, (uint64_t)&unk_438830, 2)) == 0
    || (v35 = *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 20) = v35, *(_DWORD *)(*(_QWORD *)(a1 + 40) + 4) > v35)
    || v34 != 1
    || (result = slice_del(a1), (result & 0x80000000) == 0))
  {
    v36 = v31 - v32 + *(_DWORD *)(a1 + 12);
    *(_DWORD *)(a1 + 8) = v36;
    *(_DWORD *)(a1 + 24) = v36;
    v37 = find_among_b(a1, (uint64_t)&unk_438870, 4);
    if (v37)
    {
      *(_DWORD *)(a1 + 20) = *(_DWORD *)(a1 + 8);
      switch(v37)
      {
        case 3:
          goto LABEL_58;
        case 2:
          v38 = &unk_31F7AB;
          break;
        case 1:
          result = slice_del(a1);
          if ((result & 0x80000000) != 0)
            return result;
          *(_DWORD *)(a1 + 24) = *(_DWORD *)(a1 + 8);
          if (!eq_s_b(a1, 2, &unk_31F7A7))
            goto LABEL_59;
          *(_DWORD *)(a1 + 20) = *(_DWORD *)(a1 + 8);
          v38 = &unk_31F7A9;
          break;
        default:
          goto LABEL_59;
      }
      if (eq_s_b(a1, 2, v38))
      {
LABEL_58:
        result = slice_del(a1);
        if ((result & 0x80000000) != 0)
          return result;
      }
    }
LABEL_59:
    *(_DWORD *)(a1 + 16) = v2;
    *(_DWORD *)(a1 + 8) = v2;
    return 1;
  }
  return result;
}

uint64_t sub_21D06C(_DWORD *a1)
{
  uint64_t result;

  a1[6] = a1[2];
  result = find_among_b((uint64_t)a1, (uint64_t)&unk_4383B0, 36);
  if ((_DWORD)result)
  {
    a1[5] = a1[2];
    if ((_DWORD)result != 1)
      return 1;
    result = slice_del((uint64_t)a1);
    if ((result & 0x80000000) == 0)
      return 1;
  }
  return result;
}

_QWORD *russian_UTF_8_create_env()
{
  return SN_create_env(0, 2, 0);
}

void russian_UTF_8_close_env(uint64_t a1)
{
  SN_close_env(a1, 0);
}

uint64_t spanish_UTF_8_stem(uint64_t a1)
{
  int v2;
  _DWORD *v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  int among_b;
  int v21;
  void *v22;
  uint64_t v23;
  int v24;
  uint64_t result;
  int v26;
  uint64_t v27;
  char v28;
  int v29;
  int v30;
  void *v31;
  void *v32;
  uint64_t v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  int v38;
  int v39;
  int v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  int v46;
  int v47;
  int v48;
  int v49;
  int v50;
  int v51;
  int v52;
  int v53;
  int v54;
  int v55;
  int v56;
  int v57;
  int v58;
  int v59;
  int v60;
  int v61;
  int v62;
  int v63;
  int v64;
  int v65;
  uint64_t v66;
  uint64_t i;
  uint64_t v68;
  uint64_t v69;
  char v70;
  int v71;
  int among;
  uint64_t v73;
  void *v74;
  int v75;
  int v76;

  v2 = *(_DWORD *)(a1 + 8);
  v3 = *(_DWORD **)(a1 + 40);
  *v3 = *(_DWORD *)(a1 + 12);
  v3[1] = *(_DWORD *)(a1 + 12);
  v3[2] = *(_DWORD *)(a1 + 12);
  v4 = *(_DWORD *)(a1 + 8);
  if (!in_grouping_U(a1, (uint64_t)&unk_31F7D5, 97, 252, 0))
  {
    v5 = *(_DWORD *)(a1 + 8);
    if (!out_grouping_U(a1, (uint64_t)&unk_31F7D5, 97, 252, 0))
    {
      v8 = out_grouping_U(a1, (uint64_t)&unk_31F7D5, 97, 252, 1);
      if ((v8 & 0x80000000) == 0)
        goto LABEL_14;
    }
    *(_DWORD *)(a1 + 8) = v5;
    if (!in_grouping_U(a1, (uint64_t)&unk_31F7D5, 97, 252, 0))
    {
      v8 = in_grouping_U(a1, (uint64_t)&unk_31F7D5, 97, 252, 1);
      if ((v8 & 0x80000000) == 0)
        goto LABEL_14;
    }
  }
  *(_DWORD *)(a1 + 8) = v4;
  if (!out_grouping_U(a1, (uint64_t)&unk_31F7D5, 97, 252, 0))
  {
    v6 = *(_DWORD *)(a1 + 8);
    if (!out_grouping_U(a1, (uint64_t)&unk_31F7D5, 97, 252, 0))
    {
      v8 = out_grouping_U(a1, (uint64_t)&unk_31F7D5, 97, 252, 1);
      if ((v8 & 0x80000000) == 0)
      {
LABEL_14:
        v7 = *(_DWORD *)(a1 + 8) + v8;
LABEL_15:
        **(_DWORD **)(a1 + 40) = v7;
        goto LABEL_16;
      }
    }
    *(_DWORD *)(a1 + 8) = v6;
    if (!in_grouping_U(a1, (uint64_t)&unk_31F7D5, 97, 252, 0))
    {
      v7 = skip_utf8(*(_QWORD *)a1, *(unsigned int *)(a1 + 8), 0, *(unsigned int *)(a1 + 12), 1);
      if ((v7 & 0x80000000) == 0)
        goto LABEL_15;
    }
  }
LABEL_16:
  *(_DWORD *)(a1 + 8) = v4;
  v9 = out_grouping_U(a1, (uint64_t)&unk_31F7D5, 97, 252, 1);
  if ((v9 & 0x80000000) == 0)
  {
    *(_DWORD *)(a1 + 8) += v9;
    v10 = in_grouping_U(a1, (uint64_t)&unk_31F7D5, 97, 252, 1);
    if ((v10 & 0x80000000) == 0)
    {
      v11 = *(_DWORD *)(a1 + 8) + v10;
      *(_DWORD *)(a1 + 8) = v11;
      *(_DWORD *)(*(_QWORD *)(a1 + 40) + 4) = v11;
      v12 = out_grouping_U(a1, (uint64_t)&unk_31F7D5, 97, 252, 1);
      if ((v12 & 0x80000000) == 0)
      {
        *(_DWORD *)(a1 + 8) += v12;
        v13 = in_grouping_U(a1, (uint64_t)&unk_31F7D5, 97, 252, 1);
        if ((v13 & 0x80000000) == 0)
          *(_DWORD *)(*(_QWORD *)(a1 + 40) + 8) = *(_DWORD *)(a1 + 8) + v13;
      }
    }
  }
  *(_DWORD *)(a1 + 16) = v2;
  v14 = *(int *)(a1 + 12);
  *(_DWORD *)(a1 + 8) = v14;
  *(_DWORD *)(a1 + 24) = v14;
  v15 = v14 - 1;
  if ((int)v15 > v2)
  {
    v16 = *(_BYTE *)(*(_QWORD *)a1 + v15);
    if ((v16 & 0xE0) == 0x60 && ((0x88022u >> v16) & 1) != 0)
    {
      if (find_among_b(a1, (uint64_t)&unk_4388F0, 13))
      {
        v17 = *(int *)(a1 + 8);
        *(_DWORD *)(a1 + 20) = v17;
        v18 = v17 - 1;
        if ((int)v18 > *(_DWORD *)(a1 + 16))
        {
          v19 = *(unsigned __int8 *)(*(_QWORD *)a1 + v18);
          if (v19 == 114 || v19 == 111)
          {
            among_b = find_among_b(a1, (uint64_t)&unk_438A90, 11);
            if (among_b)
            {
              v21 = *(_DWORD *)(a1 + 8);
              if (**(_DWORD **)(a1 + 40) <= v21)
              {
                switch(among_b)
                {
                  case 1:
                    *(_DWORD *)(a1 + 20) = v21;
                    v22 = &unk_31F7E9;
                    v23 = a1;
                    v24 = 5;
                    goto LABEL_37;
                  case 2:
                    *(_DWORD *)(a1 + 20) = v21;
                    v22 = &unk_31F7EE;
                    v23 = a1;
                    v24 = 4;
                    goto LABEL_37;
                  case 3:
                    *(_DWORD *)(a1 + 20) = v21;
                    v22 = &unk_31F7F2;
                    goto LABEL_36;
                  case 4:
                    *(_DWORD *)(a1 + 20) = v21;
                    v22 = &unk_31F7F4;
                    goto LABEL_36;
                  case 5:
                    *(_DWORD *)(a1 + 20) = v21;
                    v22 = &unk_31F7F6;
LABEL_36:
                    v23 = a1;
                    v24 = 2;
LABEL_37:
                    result = slice_from_s(v23, v24, v22);
                    if ((result & 0x80000000) != 0)
                      return result;
                    break;
                  case 6:
                    goto LABEL_40;
                  case 7:
                    if (!eq_s_b(a1, 1, &unk_31F7F8))
                      break;
LABEL_40:
                    result = slice_del(a1);
                    if ((result & 0x80000000) == 0)
                      break;
                    return result;
                  default:
                    break;
                }
              }
            }
          }
        }
      }
    }
  }
  v26 = *(_DWORD *)(a1 + 16);
  v27 = *(int *)(a1 + 12);
  *(_DWORD *)(a1 + 8) = v27;
  *(_DWORD *)(a1 + 24) = v27;
  if ((int)v27 - 2 > v26)
  {
    v28 = *(_BYTE *)(v27 + *(_QWORD *)a1 - 1);
    if ((v28 & 0xE0) == 0x60 && ((0xCC032u >> v28) & 1) != 0)
    {
      v29 = find_among_b(a1, (uint64_t)&unk_438BF0, 46);
      if (v29)
      {
        v30 = *(_DWORD *)(a1 + 8);
        *(_DWORD *)(a1 + 20) = v30;
        switch(v29)
        {
          case 1:
            if (*(_DWORD *)(*(_QWORD *)(a1 + 40) + 8) <= v30)
              goto LABEL_101;
            break;
          case 2:
            if (*(_DWORD *)(*(_QWORD *)(a1 + 40) + 8) > v30)
              break;
            result = slice_del(a1);
            if ((result & 0x80000000) != 0)
              return result;
            *(_DWORD *)(a1 + 24) = *(_DWORD *)(a1 + 8);
            v31 = &unk_31F849;
            goto LABEL_135;
          case 3:
            if (*(_DWORD *)(*(_QWORD *)(a1 + 40) + 8) > v30)
              break;
            v32 = &unk_31F84B;
            v33 = a1;
            v34 = 3;
            goto LABEL_57;
          case 4:
            if (*(_DWORD *)(*(_QWORD *)(a1 + 40) + 8) > v30)
              break;
            v32 = &unk_31F84E;
            v33 = a1;
            v34 = 1;
            goto LABEL_57;
          case 5:
            if (*(_DWORD *)(*(_QWORD *)(a1 + 40) + 8) > v30)
              break;
            v32 = &unk_31F84F;
            v33 = a1;
            v34 = 4;
LABEL_57:
            result = slice_from_s(v33, v34, v32);
            if ((result & 0x80000000) != 0)
              return result;
            goto LABEL_102;
          case 6:
            if (*(_DWORD *)(*(_QWORD *)(a1 + 40) + 4) > v30)
              break;
            result = slice_del(a1);
            if ((result & 0x80000000) != 0)
              return result;
            v35 = *(int *)(a1 + 8);
            *(_DWORD *)(a1 + 24) = v35;
            v36 = v35 - 1;
            if ((int)v36 <= *(_DWORD *)(a1 + 16))
              goto LABEL_102;
            v37 = *(_BYTE *)(*(_QWORD *)a1 + v36);
            if ((v37 & 0xE0) != 0x60)
              goto LABEL_102;
            if (((0x480018u >> v37) & 1) == 0)
              goto LABEL_102;
            v38 = find_among_b(a1, (uint64_t)&unk_4391B0, 4);
            if (!v38)
              goto LABEL_102;
            v39 = *(_DWORD *)(a1 + 8);
            *(_DWORD *)(a1 + 20) = v39;
            if (*(_DWORD *)(*(_QWORD *)(a1 + 40) + 8) > v39)
              goto LABEL_102;
            v40 = v38;
            result = slice_del(a1);
            if ((result & 0x80000000) != 0)
              return result;
            if (v40 != 1)
              goto LABEL_102;
            *(_DWORD *)(a1 + 24) = *(_DWORD *)(a1 + 8);
            v31 = &unk_31F853;
LABEL_135:
            if (!eq_s_b(a1, 2, v31))
              goto LABEL_102;
            v47 = *(_DWORD *)(a1 + 8);
            *(_DWORD *)(a1 + 20) = v47;
LABEL_137:
            if (*(_DWORD *)(*(_QWORD *)(a1 + 40) + 8) > v47)
              goto LABEL_102;
            goto LABEL_101;
          case 7:
            if (*(_DWORD *)(*(_QWORD *)(a1 + 40) + 8) > v30)
              break;
            result = slice_del(a1);
            if ((result & 0x80000000) != 0)
              return result;
            v41 = *(int *)(a1 + 8);
            *(_DWORD *)(a1 + 24) = v41;
            if ((int)v41 - 3 <= *(_DWORD *)(a1 + 16) || *(_BYTE *)(v41 + *(_QWORD *)a1 - 1) != 101)
              goto LABEL_102;
            v42 = &unk_439230;
            goto LABEL_80;
          case 8:
            if (*(_DWORD *)(*(_QWORD *)(a1 + 40) + 8) > v30)
              break;
            result = slice_del(a1);
            if ((result & 0x80000000) != 0)
              return result;
            v43 = *(int *)(a1 + 8);
            *(_DWORD *)(a1 + 24) = v43;
            v44 = v43 - 1;
            if ((int)v44 <= *(_DWORD *)(a1 + 16))
              goto LABEL_102;
            v45 = *(_BYTE *)(*(_QWORD *)a1 + v44);
            if ((v45 & 0xE0) != 0x60 || ((0x401008u >> v45) & 1) == 0)
              goto LABEL_102;
            v42 = &unk_439290;
LABEL_80:
            v46 = find_among_b(a1, (uint64_t)v42, 3);
            if (v46)
            {
              v47 = *(_DWORD *)(a1 + 8);
              *(_DWORD *)(a1 + 20) = v47;
              if (v46 == 1)
                goto LABEL_137;
            }
            goto LABEL_102;
          case 9:
            if (*(_DWORD *)(*(_QWORD *)(a1 + 40) + 8) > v30)
              break;
            result = slice_del(a1);
            if ((result & 0x80000000) != 0)
              return result;
            *(_DWORD *)(a1 + 24) = *(_DWORD *)(a1 + 8);
            v31 = &unk_31F855;
            goto LABEL_135;
          default:
            goto LABEL_102;
        }
      }
    }
  }
  v48 = *(_DWORD *)(a1 + 12);
  *(_DWORD *)(a1 + 8) = v48;
  v49 = **(_DWORD **)(a1 + 40);
  if (v48 >= v49)
  {
    v50 = *(_DWORD *)(a1 + 16);
    *(_DWORD *)(a1 + 16) = v49;
    *(_DWORD *)(a1 + 24) = v48;
    v51 = find_among_b(a1, (uint64_t)&unk_4392F0, 12);
    if (v51)
    {
      v52 = *(_DWORD *)(a1 + 8);
      *(_DWORD *)(a1 + 16) = v50;
      *(_DWORD *)(a1 + 20) = v52;
      if (v51 != 1)
        goto LABEL_102;
      if (eq_s_b(a1, 1, &unk_31F958))
        goto LABEL_101;
    }
    else
    {
      *(_DWORD *)(a1 + 16) = v50;
    }
  }
  v53 = *(_DWORD *)(a1 + 12);
  *(_DWORD *)(a1 + 8) = v53;
  v54 = **(_DWORD **)(a1 + 40);
  if (v53 < v54)
    goto LABEL_102;
  v55 = *(_DWORD *)(a1 + 16);
  *(_DWORD *)(a1 + 16) = v54;
  *(_DWORD *)(a1 + 24) = v53;
  v56 = find_among_b(a1, (uint64_t)&unk_439470, 96);
  if (!v56)
  {
    *(_DWORD *)(a1 + 16) = v55;
    goto LABEL_102;
  }
  v57 = *(_DWORD *)(a1 + 8);
  *(_DWORD *)(a1 + 16) = v55;
  *(_DWORD *)(a1 + 20) = v57;
  if (v56 != 2)
  {
    if (v56 != 1)
      goto LABEL_102;
    v58 = *(_DWORD *)(a1 + 12) - v57;
    v59 = eq_s_b(a1, 1, &unk_31F981);
    v60 = *(_DWORD *)(a1 + 12);
    if (v59)
    {
      v61 = *(_DWORD *)(a1 + 8);
      if (eq_s_b(a1, 1, &unk_31F982))
        v62 = v61 - v60 + *(_DWORD *)(a1 + 12);
      else
        v62 = *(_DWORD *)(a1 + 12) - v58;
    }
    else
    {
      v62 = v60 - v58;
    }
    *(_DWORD *)(a1 + 8) = v62;
    *(_DWORD *)(a1 + 20) = v62;
  }
LABEL_101:
  result = slice_del(a1);
  if ((result & 0x80000000) != 0)
    return result;
LABEL_102:
  v63 = *(_DWORD *)(a1 + 12);
  *(_DWORD *)(a1 + 8) = v63;
  *(_DWORD *)(a1 + 24) = v63;
  v64 = find_among_b(a1, (uint64_t)&unk_43A070, 8);
  if (!v64)
    goto LABEL_109;
  v65 = *(_DWORD *)(a1 + 8);
  *(_DWORD *)(a1 + 20) = v65;
  if (v64 == 2)
  {
    if (**(_DWORD **)(a1 + 40) <= v65)
    {
      result = slice_del(a1);
      if ((result & 0x80000000) != 0)
        return result;
      *(_DWORD *)(a1 + 24) = *(_DWORD *)(a1 + 8);
      if (eq_s_b(a1, 1, &unk_31FB40))
      {
        v75 = *(_DWORD *)(a1 + 8);
        v76 = *(_DWORD *)(a1 + 12);
        *(_DWORD *)(a1 + 20) = v75;
        if (eq_s_b(a1, 1, &unk_31FB41))
        {
          v65 = *(_DWORD *)(a1 + 12) + v75 - v76;
          *(_DWORD *)(a1 + 8) = v65;
          goto LABEL_105;
        }
      }
    }
LABEL_109:
    v66 = *(unsigned int *)(a1 + 16);
    *(_DWORD *)(a1 + 8) = v66;
    for (i = v66; ; i = *(unsigned int *)(a1 + 8))
    {
      *(_DWORD *)(a1 + 20) = i;
      v68 = (int)i + 1;
      v69 = *(unsigned int *)(a1 + 12);
      if ((int)v68 < (int)v69
        && (v70 = *(_BYTE *)(*(_QWORD *)a1 + v68), (v70 & 0xE0) == 0xA0)
        && ((0x4082202u >> v70) & 1) != 0)
      {
        among = find_among(a1, (uint64_t)&unk_43A170, 6);
        if (!among)
          goto LABEL_127;
        i = *(unsigned int *)(a1 + 8);
        *(_DWORD *)(a1 + 24) = i;
        switch(among)
        {
          case 1:
            v73 = a1;
            v74 = &unk_31FB4F;
            break;
          case 2:
            v73 = a1;
            v74 = &unk_31FB50;
            break;
          case 3:
            v73 = a1;
            v74 = &unk_31FB51;
            break;
          case 4:
            v73 = a1;
            v74 = &unk_31FB52;
            break;
          case 5:
            v73 = a1;
            v74 = &unk_31FB53;
            break;
          case 6:
            v69 = *(unsigned int *)(a1 + 12);
            goto LABEL_114;
          default:
            continue;
        }
        result = slice_from_s(v73, 1, v74);
        if ((result & 0x80000000) != 0)
          return result;
      }
      else
      {
        *(_DWORD *)(a1 + 24) = i;
LABEL_114:
        v71 = skip_utf8(*(_QWORD *)a1, i, 0, v69, 1);
        if (v71 < 0)
        {
LABEL_127:
          *(_DWORD *)(a1 + 8) = v66;
          return 1;
        }
        *(_DWORD *)(a1 + 8) = v71;
      }
    }
  }
  if (v64 != 1)
    goto LABEL_109;
LABEL_105:
  if (**(_DWORD **)(a1 + 40) > v65)
    goto LABEL_109;
  result = slice_del(a1);
  if ((result & 0x80000000) == 0)
    goto LABEL_109;
  return result;
}

_QWORD *spanish_UTF_8_create_env()
{
  return SN_create_env(0, 3, 0);
}

void spanish_UTF_8_close_env(uint64_t a1)
{
  SN_close_env(a1, 0);
}

uint64_t swedish_UTF_8_stem(uint64_t a1)
{
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  _DWORD *v7;
  uint64_t v8;
  int v9;
  int v10;
  char v11;
  int among_b;
  int v13;
  uint64_t v14;
  int v15;
  int v16;
  uint64_t v17;
  char v18;
  int v19;
  unsigned int v20;
  int v21;
  int v22;
  int v23;
  int v24;
  uint64_t v25;
  char v26;
  int v27;
  int v28;
  unsigned int v29;
  uint64_t v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  void *v35;

  v2 = *(_DWORD *)(a1 + 8);
  **(_DWORD **)(a1 + 40) = *(_DWORD *)(a1 + 12);
  v3 = *(_DWORD *)(a1 + 8);
  v4 = skip_utf8(*(_QWORD *)a1, *(unsigned int *)(a1 + 8), 0, *(unsigned int *)(a1 + 12), 3);
  if (v4 < 0
    || (*(_DWORD *)(*(_QWORD *)(a1 + 40) + 4) = v4,
        *(_DWORD *)(a1 + 8) = v3,
        (out_grouping_U(a1, (uint64_t)&unk_31FB5E, 97, 246, 1) & 0x80000000) != 0)
    || (v5 = in_grouping_U(a1, (uint64_t)&unk_31FB5E, 97, 246, 1), v5 < 0))
  {
    LODWORD(v8) = 0;
  }
  else
  {
    v6 = *(_DWORD *)(a1 + 8) + v5;
    *(_DWORD *)(a1 + 8) = v6;
    v7 = *(_DWORD **)(a1 + 40);
    if (v6 <= v7[1])
      v6 = v7[1];
    *v7 = v6;
    LODWORD(v8) = 1;
  }
  *(_DWORD *)(a1 + 16) = v2;
  v9 = *(_DWORD *)(a1 + 12);
  *(_DWORD *)(a1 + 8) = v9;
  v10 = **(_DWORD **)(a1 + 40);
  if (v9 < v10)
    goto LABEL_17;
  *(_DWORD *)(a1 + 16) = v10;
  *(_DWORD *)(a1 + 24) = v9;
  if (v9 > v10
    && (v11 = *(_BYTE *)(v9 + *(_QWORD *)a1 - 1), (v11 & 0xE0) == 0x60)
    && ((0x1C4032u >> v11) & 1) != 0
    && (among_b = find_among_b(a1, (uint64_t)&unk_43A230, 37)) != 0)
  {
    v13 = *(_DWORD *)(a1 + 8);
    *(_DWORD *)(a1 + 16) = v2;
    *(_DWORD *)(a1 + 20) = v13;
    if (among_b != 2)
    {
      if (among_b != 1)
        goto LABEL_17;
LABEL_66:
      v34 = slice_del(a1);
      if ((v34 & 0x80000000) != 0)
        return v34;
      goto LABEL_17;
    }
    if (!in_grouping_b_U(a1, (uint64_t)&unk_31FB71, 98, 121, 0))
      goto LABEL_66;
  }
  else
  {
    *(_DWORD *)(a1 + 16) = v2;
  }
LABEL_17:
  v14 = *(int *)(a1 + 12);
  *(_DWORD *)(a1 + 8) = v14;
  v15 = **(_DWORD **)(a1 + 40);
  if ((int)v14 < v15)
  {
LABEL_33:
    v22 = *(_DWORD *)(a1 + 12);
    *(_DWORD *)(a1 + 8) = v22;
    goto LABEL_34;
  }
  v16 = *(_DWORD *)(a1 + 16);
  *(_DWORD *)(a1 + 16) = v15;
  v17 = v14 - 1;
  if ((int)v17 <= v15)
    goto LABEL_21;
  v18 = *(_BYTE *)(*(_QWORD *)a1 + v17);
  if ((v18 & 0xE0) != 0x60 || ((0x104010u >> v18) & 1) == 0)
    goto LABEL_21;
  v19 = find_among_b(a1, (uint64_t)&unk_43A6D0, 7);
  if (!v19)
    goto LABEL_22;
  v31 = *(unsigned int *)(a1 + 12);
  v32 = *(unsigned int *)(a1 + 16);
  *(_DWORD *)(a1 + 8) = v31;
  *(_DWORD *)(a1 + 24) = v31;
  v33 = skip_utf8(*(_QWORD *)a1, v31, v32, 0, -1);
  if (v33 < 0)
  {
LABEL_21:
    v19 = 0;
LABEL_22:
    *(_DWORD *)(a1 + 16) = v16;
    goto LABEL_23;
  }
  *(_DWORD *)(a1 + 8) = v33;
  *(_DWORD *)(a1 + 20) = v33;
  v19 = slice_del(a1);
  if ((v19 & 0x80000000) == 0)
  {
    v19 = 1;
    goto LABEL_22;
  }
LABEL_23:
  if (v19 >= 0)
    v20 = v8;
  else
    v20 = v19;
  if (v19)
    v8 = v20;
  else
    v8 = v8;
  if (v19)
    v21 = v19 >> 31;
  else
    v21 = 4;
  if ((v21 | 4) == 4)
    goto LABEL_33;
  if (v19 < 0)
    return v8;
  v22 = *(_DWORD *)(a1 + 8);
LABEL_34:
  v23 = **(_DWORD **)(a1 + 40);
  if (v22 < v23)
  {
LABEL_51:
    *(_DWORD *)(a1 + 8) = *(_DWORD *)(a1 + 16);
    return 1;
  }
  v24 = *(_DWORD *)(a1 + 16);
  *(_DWORD *)(a1 + 16) = v23;
  *(_DWORD *)(a1 + 24) = v22;
  v25 = v22 - 1;
  if ((int)v25 <= v23 || (v26 = *(_BYTE *)(*(_QWORD *)a1 + v25), (v26 & 0xE0) != 0x60) || ((0x180080u >> v26) & 1) == 0)
  {
    v27 = 0;
LABEL_39:
    *(_DWORD *)(a1 + 16) = v24;
    goto LABEL_40;
  }
  v27 = find_among_b(a1, (uint64_t)&unk_43A7B0, 5);
  if (!v27)
    goto LABEL_39;
  *(_DWORD *)(a1 + 20) = *(_DWORD *)(a1 + 8);
  if (v27 == 3)
  {
    v35 = &unk_31FC09;
    goto LABEL_70;
  }
  if (v27 == 2)
  {
    v35 = &unk_31FC05;
LABEL_70:
    v27 = slice_from_s(a1, 4, v35);
    if (v27 < 0)
      goto LABEL_40;
LABEL_71:
    v27 = 1;
    goto LABEL_39;
  }
  if (v27 != 1)
    goto LABEL_71;
  v27 = slice_del(a1);
  if ((v27 & 0x80000000) == 0)
    goto LABEL_71;
LABEL_40:
  v28 = v27 >> 31;
  if (!v27)
    v28 = 5;
  if (!v28 || v28 == 5)
    goto LABEL_51;
  v29 = v27 >= 0 ? v8 : v27;
  v8 = v27 ? v29 : v8;
  if ((v27 & 0x80000000) == 0)
    goto LABEL_51;
  return v8;
}

_QWORD *swedish_UTF_8_create_env()
{
  return SN_create_env(0, 2, 0);
}

void swedish_UTF_8_close_env(uint64_t a1)
{
  SN_close_env(a1, 0);
}

uint64_t turkish_UTF_8_stem(uint64_t a1)
{
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  uint64_t result;
  int v8;
  int v9;
  int v10;
  unsigned int v11;
  unsigned int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  int v23;
  int among_b;
  int v25;
  int v26;
  int v27;
  int v28;
  int v29;
  int v30;
  int v31;
  int v32;
  int v33;
  unsigned int v34;
  int v35;
  int v36;
  int v37;
  int v38;
  int v39;
  unsigned int v40;
  uint64_t v41;
  int v42;
  int v43;
  int v44;
  int v45;
  int v46;
  int v47;
  int v48;
  int v49;
  unsigned int v50;
  int v51;
  int v52;
  int v53;
  int v54;
  unsigned int v55;
  int v56;
  int v57;
  int v58;
  int v59;
  uint64_t v60;
  int v61;
  int v62;
  int v63;
  int v64;
  int v65;
  int v66;
  int v67;
  int v68;
  int v69;
  uint64_t v70;
  int v71;
  int v72;
  int v73;
  int v74;
  int v75;
  int v76;
  int v77;
  int v78;
  int v79;
  int v80;
  int v81;
  int v82;
  uint64_t v83;
  int v84;
  int v85;
  int v86;
  int v87;
  int v88;
  int v89;
  int v90;
  int v91;
  uint64_t v92;
  int v93;
  int v94;
  int v95;
  int v96;
  int v97;
  int v98;
  int v99;
  int v100;
  int v101;
  int v102;
  int v103;
  int v104;
  int v105;
  int v106;
  int v107;
  int v108;
  int v109;
  int v110;
  int v111;
  int v112;
  int v113;
  int v114;
  int v115;
  int v116;
  int v117;
  int v118;
  int v119;
  int v120;
  int v121;
  unsigned int v122;
  int v123;
  int v124;
  int v125;
  int v126;
  int v127;
  int v128;
  int v129;
  int v130;
  int v131;
  int v132;
  int v133;
  int v134;
  int v135;
  unsigned int v136;
  unsigned int v137;
  int v138;
  int v139;
  int v140;
  int v141;
  int inserted;
  int v143;
  int v144;
  int v145;
  void *v146;
  uint64_t v147;
  int v148;
  int v149;
  int v150;
  int v151;
  int v152;
  int v153;
  int v154;
  int v155;
  int v156;
  void *v157;
  uint64_t v158;
  int v159;
  unsigned int v160;
  int v161;
  int v162;
  int v163;
  int v164;
  char v165;
  int v166;
  int v167;
  int v168;
  int v169;
  int v170;
  int v171;
  int v172;
  int v173;
  int v174;
  int v175;
  int v176;

  v2 = *(_DWORD *)(a1 + 8);
  v3 = out_grouping_U(a1, (uint64_t)&unk_31FC23, 97, 305, 1);
  if (v3 < 0)
  {
    result = 0;
    *(_DWORD *)(a1 + 8) = v2;
    return result;
  }
  v4 = 3;
  do
  {
    v5 = *(_DWORD *)(a1 + 8) + v3;
    *(_DWORD *)(a1 + 8) = v5;
    v3 = out_grouping_U(a1, (uint64_t)&unk_31FC23, 97, 305, 1);
    --v4;
  }
  while ((v3 & 0x80000000) == 0);
  if (v4 <= 1)
    v6 = v2;
  else
    v6 = v5;
  *(_DWORD *)(a1 + 8) = v6;
  if (v4 > 1)
    return 0;
  *(_DWORD *)(a1 + 16) = v2;
  v8 = *(_DWORD *)(a1 + 12);
  *(_DWORD *)(a1 + 8) = v8;
  *(_DWORD *)(a1 + 24) = v8;
  **(_BYTE **)(a1 + 48) = 1;
  v10 = *(_DWORD *)(a1 + 8);
  v9 = *(_DWORD *)(a1 + 12);
  v11 = sub_21F204(a1);
  v12 = v11 >> 31;
  if (v11)
    v13 = v11 >> 31;
  else
    v13 = 2;
  if (!v13)
    goto LABEL_138;
  v14 = v11;
  if (v13 != 2)
    goto LABEL_135;
  v15 = v9 - v10;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a1 + 12) - v15;
  v16 = sub_21F27C(a1);
  if (v16 >= 0)
    v17 = v14;
  else
    v17 = v16;
  v12 = v16 >> 31;
  if (v16)
  {
    v14 = v17;
    v18 = v16 >> 31;
  }
  else
  {
    v18 = 4;
  }
  if (!v18)
    goto LABEL_138;
  if (v18 != 4)
    goto LABEL_135;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a1 + 12) - v15;
  v19 = sub_21F2CC(a1);
  if (v19 >= 0)
    v20 = v14;
  else
    v20 = v19;
  v12 = v19 >> 31;
  if (v19)
  {
    v14 = v20;
    v21 = v19 >> 31;
  }
  else
  {
    v21 = 5;
  }
  if (!v21)
    goto LABEL_138;
  if (v21 != 5)
    goto LABEL_135;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a1 + 12) - v15;
  if (eq_s_b(a1, 3, &unk_31FD27) && sub_21F85C(a1))
    goto LABEL_138;
  v23 = *(_DWORD *)(a1 + 12);
  v22 = *(_DWORD *)(a1 + 16);
  *(_DWORD *)(a1 + 8) = v23 - v15;
  if (v23 - v15 - 5 <= v22)
    goto LABEL_48;
  if ((*(unsigned __int8 *)(*(_QWORD *)a1 + v23 - v15 - 1) | 4) != 0x65)
    goto LABEL_48;
  among_b = find_among_b(a1, (uint64_t)&unk_43ADD0, 2);
  v23 = *(_DWORD *)(a1 + 12);
  if (!among_b)
    goto LABEL_48;
  v25 = *(_DWORD *)(a1 + 8);
  if (!sub_21F348(a1))
  {
    v26 = v23 - v25;
    *(_DWORD *)(a1 + 8) = *(_DWORD *)(a1 + 12) - v26;
    if (!sub_21F3A0(a1))
    {
      *(_DWORD *)(a1 + 8) = *(_DWORD *)(a1 + 12) - v26;
      v53 = sub_21F410(a1);
      v54 = v53 >= 0 ? v14 : v53;
      v55 = v53 >> 31;
      if (v53)
      {
        v14 = v54;
        v56 = v53 >> 31;
      }
      else
      {
        v56 = 12;
      }
      if (v56)
      {
        if (v56 != 12)
          goto LABEL_132;
        *(_DWORD *)(a1 + 8) = *(_DWORD *)(a1 + 12) - v26;
        v57 = sub_21F484(a1);
        if (v57 >= 0)
          v58 = v14;
        else
          v58 = v57;
        v55 = v57 >> 31;
        if (v57)
        {
          v14 = v58;
          v59 = v57 >> 31;
        }
        else
        {
          v59 = 13;
        }
        if (v59)
        {
          if (v59 == 13)
          {
            *(_DWORD *)(a1 + 8) = *(_DWORD *)(a1 + 12) - v26;
            if (!sub_21F4F4(a1))
              *(_DWORD *)(a1 + 8) = *(_DWORD *)(a1 + 12) - v26;
            goto LABEL_39;
          }
LABEL_132:
          if (v55)
            goto LABEL_136;
        }
      }
    }
  }
LABEL_39:
  v27 = sub_21F204(a1);
  if (v27 >= 0)
    v28 = v14;
  else
    v28 = v27;
  v12 = v27 >> 31;
  if (v27)
  {
    v14 = v28;
    v29 = v27 >> 31;
  }
  else
  {
    v29 = 8;
  }
  if (!v29)
    goto LABEL_138;
  if (v29 != 8)
    goto LABEL_135;
  v23 = *(_DWORD *)(a1 + 12);
LABEL_48:
  *(_DWORD *)(a1 + 8) = v23 - v15;
  if (!sub_21F3A0(a1))
  {
    *(_DWORD *)(a1 + 8) = *(_DWORD *)(a1 + 12) - v15;
    if (sub_21F5D8(a1))
    {
      v41 = *(int *)(a1 + 8);
      if ((int)v41 - 2 > *(_DWORD *)(a1 + 16)
        && *(_BYTE *)(v41 + *(_QWORD *)a1 - 1) == 122
        && find_among_b(a1, (uint64_t)&unk_43B150, 4))
      {
        v43 = *(_DWORD *)(a1 + 8);
        v42 = *(_DWORD *)(a1 + 12);
        v44 = sub_21F27C(a1);
        if (v44 >= 0)
          v45 = v14;
        else
          v45 = v44;
        v12 = v44 >> 31;
        if (v44)
        {
          v14 = v45;
          v46 = v44 >> 31;
        }
        else
        {
          v46 = 22;
        }
        if (!v46)
          goto LABEL_138;
        if (v46 != 22)
        {
          if ((v44 & 0x80000000) == 0)
            goto LABEL_138;
          goto LABEL_135;
        }
        *(_DWORD *)(a1 + 8) = v43 - v42 + *(_DWORD *)(a1 + 12);
        if (sub_21F2CC(a1))
          goto LABEL_138;
      }
    }
    *(_DWORD *)(a1 + 8) = *(_DWORD *)(a1 + 12) - v15;
    if (sub_21F348(a1))
      goto LABEL_86;
    *(_DWORD *)(a1 + 8) = *(_DWORD *)(a1 + 12) - v15;
    v49 = sub_21F4F4(a1);
    v12 = v49 >> 31;
    v50 = v49 ? v49 >> 31 : 26;
    if (!v50)
      goto LABEL_86;
    if (v50 == 26)
    {
      *(_DWORD *)(a1 + 8) = *(_DWORD *)(a1 + 12) - v15;
      if (!sub_21F484(a1))
      {
        *(_DWORD *)(a1 + 8) = *(_DWORD *)(a1 + 12) - v15;
        if (!sub_21F410(a1))
        {
          *(_DWORD *)(a1 + 8) = *(_DWORD *)(a1 + 12) - v15;
          if (!sub_21F568(a1))
          {
LABEL_139:
            LODWORD(v60) = 0;
            goto LABEL_140;
          }
          *(_DWORD *)(a1 + 20) = *(_DWORD *)(a1 + 8);
          result = slice_del(a1);
          if ((result & 0x80000000) != 0)
            return result;
          v48 = *(_DWORD *)(a1 + 8);
          v47 = *(_DWORD *)(a1 + 12);
          *(_DWORD *)(a1 + 24) = v48;
          if (!sub_21F348(a1))
          {
            v51 = v47 - v48;
            *(_DWORD *)(a1 + 8) = *(_DWORD *)(a1 + 12) - (v47 - v48);
            if (!sub_21F3A0(a1))
            {
              *(_DWORD *)(a1 + 8) = *(_DWORD *)(a1 + 12) - v51;
              if (!sub_21F410(a1))
              {
                *(_DWORD *)(a1 + 8) = *(_DWORD *)(a1 + 12) - v51;
                if (!sub_21F484(a1))
                {
                  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a1 + 12) - v51;
                  if (!sub_21F4F4(a1))
                    *(_DWORD *)(a1 + 8) = *(_DWORD *)(a1 + 12) - v51;
                }
              }
            }
          }
          goto LABEL_88;
        }
      }
LABEL_86:
      *(_DWORD *)(a1 + 20) = *(_DWORD *)(a1 + 8);
      result = slice_del(a1);
      if ((result & 0x80000000) != 0)
        return result;
      v48 = *(_DWORD *)(a1 + 8);
      v47 = *(_DWORD *)(a1 + 12);
      *(_DWORD *)(a1 + 24) = v48;
LABEL_88:
      result = sub_21F204(a1);
      if ((_DWORD)result)
      {
        if ((result & 0x80000000) != 0)
          return result;
      }
      else
      {
        *(_DWORD *)(a1 + 8) = v48 - v47 + *(_DWORD *)(a1 + 12);
      }
      goto LABEL_138;
    }
    if (v49 >= 0)
      v52 = v14;
    else
      v52 = v49;
    if (v49)
      v14 = v52;
    if ((v49 & 0x80000000) == 0)
      goto LABEL_86;
LABEL_135:
    if (v12)
      goto LABEL_136;
LABEL_138:
    *(_DWORD *)(a1 + 20) = *(_DWORD *)(a1 + 8);
    result = slice_del(a1);
    if ((result & 0x80000000) != 0)
      return result;
    goto LABEL_139;
  }
  *(_DWORD *)(a1 + 20) = *(_DWORD *)(a1 + 8);
  result = slice_del(a1);
  if ((result & 0x80000000) != 0)
    return result;
  v31 = *(_DWORD *)(a1 + 8);
  v30 = *(_DWORD *)(a1 + 12);
  *(_DWORD *)(a1 + 24) = v31;
  v32 = sub_21F568(a1);
  if (v32 >= 0)
    v33 = v14;
  else
    v33 = v32;
  v34 = v32 >> 31;
  if (v32)
  {
    v14 = v33;
    v35 = v32 >> 31;
  }
  else
  {
    v35 = 16;
  }
  if (!v35)
    goto LABEL_71;
  if (v35 == 16)
  {
    v36 = v30 - v31;
    *(_DWORD *)(a1 + 8) = *(_DWORD *)(a1 + 12) - (v30 - v31);
    v37 = sub_21F27C(a1);
    if (v37 >= 0)
      v38 = v14;
    else
      v38 = v37;
    v34 = v37 >> 31;
    if (v37)
    {
      v14 = v38;
      v39 = v37 >> 31;
    }
    else
    {
      v39 = 18;
    }
    if (!v39)
      goto LABEL_71;
    if (v39 == 18)
    {
      *(_DWORD *)(a1 + 8) = *(_DWORD *)(a1 + 12) - v36;
      if (sub_21F2CC(a1))
        goto LABEL_71;
      *(_DWORD *)(a1 + 8) = *(_DWORD *)(a1 + 12) - v36;
      v40 = sub_21F204(a1);
      if (!v40)
      {
        *(_DWORD *)(a1 + 8) = v31 - v30 + *(_DWORD *)(a1 + 12);
        goto LABEL_71;
      }
      v14 = v40;
      if ((v40 & 0x80000000) == 0)
      {
LABEL_71:
        **(_BYTE **)(a1 + 48) = 0;
        goto LABEL_138;
      }
      v34 = v40 >> 31;
    }
  }
  if (!v34)
    goto LABEL_71;
LABEL_136:
  LODWORD(v60) = v14 & (v14 >> 31);
  result = v60;
  if (v14 < 0)
    return result;
LABEL_140:
  v61 = *(_DWORD *)(a1 + 12);
  *(_DWORD *)(a1 + 8) = v61;
  if (!**(_BYTE **)(a1 + 48))
    return 0;
  *(_DWORD *)(a1 + 24) = v61;
  v62 = sub_21F3A0(a1);
  v63 = v62 >> 31;
  if (v62)
    v64 = v62 >> 31;
  else
    v64 = 2;
  if (v64 != 2)
  {
    if (!v64)
      goto LABEL_146;
    goto LABEL_323;
  }
  v69 = *(_DWORD *)(a1 + 12);
  *(_DWORD *)(a1 + 8) = v69;
  *(_DWORD *)(a1 + 24) = v69;
  if (sub_21F5D8(a1))
  {
    v70 = *(int *)(a1 + 8) - 1;
    if ((int)v70 > *(_DWORD *)(a1 + 16)
      && (*(unsigned __int8 *)(*(_QWORD *)a1 + v70) | 4) == 0x65
      && find_among_b(a1, (uint64_t)&unk_43B1D0, 2)
      && sub_220318(a1))
    {
      *(_DWORD *)(a1 + 20) = *(_DWORD *)(a1 + 8);
      result = slice_del(a1);
      if ((result & 0x80000000) != 0)
        return result;
      v72 = *(_DWORD *)(a1 + 8);
      v71 = *(_DWORD *)(a1 + 12);
      *(_DWORD *)(a1 + 24) = v72;
      if (!sub_21FCC0(a1))
      {
        v73 = v71 - v72;
        v74 = *(_DWORD *)(a1 + 12) - v73;
        *(_DWORD *)(a1 + 8) = v74;
        *(_DWORD *)(a1 + 24) = v74;
        v75 = sub_21FD20(a1);
        if (v75 >= 0)
          v76 = v62;
        else
          v76 = v75;
        v63 = v75 >> 31;
        if (v75)
        {
          v62 = v76;
          v77 = v75 >> 31;
        }
        else
        {
          v77 = 8;
        }
        if (v77)
        {
          if (v77 != 8)
            goto LABEL_171;
          *(_DWORD *)(a1 + 8) = *(_DWORD *)(a1 + 12) - v73;
          v78 = sub_21FEAC(a1);
          v63 = v78 >> 31;
          if (v78 < 0)
            v62 = v78;
          if (!v78)
            v63 = 10;
          if (v78 <= 0)
          {
LABEL_171:
            if (v63)
            {
              if (v63 != 10)
              {
                if (v63 != 9)
                {
LABEL_174:
                  if (v63 == 7)
                    goto LABEL_331;
                  goto LABEL_323;
                }
                goto LABEL_277;
              }
              v123 = *(_DWORD *)(a1 + 12) - v73;
              *(_DWORD *)(a1 + 8) = v123;
              *(_DWORD *)(a1 + 24) = v123;
              if (sub_21F3A0(a1))
              {
                *(_DWORD *)(a1 + 20) = *(_DWORD *)(a1 + 8);
                result = slice_del(a1);
                if ((result & 0x80000000) != 0)
                  return result;
                v124 = sub_21F984((_DWORD *)a1);
                if (v124)
                {
                  v62 = v124;
                  if ((v124 & 0x80000000) == 0)
                    goto LABEL_331;
                  v63 = v124 >> 31;
                  if (v124 >= 0)
                    goto LABEL_331;
                  goto LABEL_174;
                }
              }
LABEL_410:
              v68 = *(_DWORD *)(a1 + 12) - v73;
              goto LABEL_150;
            }
          }
        }
LABEL_277:
        *(_DWORD *)(a1 + 20) = *(_DWORD *)(a1 + 8);
        result = slice_del(a1);
        if ((result & 0x80000000) != 0)
          return result;
        v119 = *(_DWORD *)(a1 + 8);
        v120 = *(_DWORD *)(a1 + 12) - v119;
        *(_DWORD *)(a1 + 24) = v119;
        if (!sub_21F3A0(a1))
          goto LABEL_281;
        *(_DWORD *)(a1 + 20) = *(_DWORD *)(a1 + 8);
        result = slice_del(a1);
        if ((result & 0x80000000) != 0)
          return result;
        result = sub_21F984((_DWORD *)a1);
        if (!(_DWORD)result)
        {
LABEL_281:
          v68 = *(_DWORD *)(a1 + 12) - v120;
          goto LABEL_150;
        }
        goto LABEL_192;
      }
      goto LABEL_191;
    }
  }
  v79 = *(_DWORD *)(a1 + 12);
  *(_DWORD *)(a1 + 8) = v79;
  *(_DWORD *)(a1 + 24) = v79;
  v80 = sub_220008(a1);
  if (v80 >= 0)
    v81 = v62;
  else
    v81 = v80;
  v63 = v80 >> 31;
  if (v80)
  {
    v62 = v81;
    v82 = v80 >> 31;
  }
  else
  {
    v82 = 13;
  }
  if (v82)
  {
    if (v82 == 13)
    {
      *(_DWORD *)(a1 + 8) = *(_DWORD *)(a1 + 12);
      if (!sub_21F5D8(a1))
        goto LABEL_210;
      v83 = *(int *)(a1 + 8) - 1;
      if ((int)v83 <= *(_DWORD *)(a1 + 16)
        || (*(unsigned __int8 *)(*(_QWORD *)a1 + v83) | 4) != 0x65
        || !find_among_b(a1, (uint64_t)&unk_43B3D0, 2))
      {
        goto LABEL_210;
      }
    }
    else if (v80 < 0)
    {
      goto LABEL_323;
    }
  }
  v85 = *(_DWORD *)(a1 + 8);
  v84 = *(_DWORD *)(a1 + 12);
  if (sub_21FCC0(a1))
    goto LABEL_191;
  v86 = v84 - v85;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a1 + 12) - v86;
  v87 = sub_21FEAC(a1);
  if (v87 >= 0)
    v88 = v62;
  else
    v88 = v87;
  v63 = v87 >> 31;
  if (v87)
  {
    v62 = v88;
    v89 = v87 >> 31;
  }
  else
  {
    v89 = 18;
  }
  if (v89 == 18)
  {
    *(_DWORD *)(a1 + 8) = *(_DWORD *)(a1 + 12) - v86;
    v90 = sub_21F984((_DWORD *)a1);
    v63 = v90 >> 31;
    if (v90 < 0)
      v62 = v90;
    if (!v90)
      v63 = 15;
    if (v90 > 0)
      goto LABEL_331;
  }
  else if (!v89)
  {
    goto LABEL_277;
  }
  if (!v63)
    goto LABEL_331;
  if (v63 != 15)
  {
LABEL_323:
    if (v63 != 1)
      goto LABEL_331;
    goto LABEL_324;
  }
LABEL_210:
  v91 = *(_DWORD *)(a1 + 12);
  *(_DWORD *)(a1 + 8) = v91;
  *(_DWORD *)(a1 + 24) = v91;
  if (sub_21F5D8(a1)
    && (v92 = *(int *)(a1 + 8), (int)v92 - 3 > *(_DWORD *)(a1 + 16))
    && *(_BYTE *)(v92 + *(_QWORD *)a1 - 1) == 110
    && find_among_b(a1, (uint64_t)&unk_43B410, 2)
    || (*(_DWORD *)(a1 + 8) = *(_DWORD *)(a1 + 12), sub_21F5D8(a1))
    && find_among_b(a1, (uint64_t)&unk_43B450, 4))
  {
    v94 = *(_DWORD *)(a1 + 8);
    v93 = *(_DWORD *)(a1 + 12);
    v95 = sub_21FEAC(a1);
    if (v95 >= 0)
      v96 = v62;
    else
      v96 = v95;
    v63 = v95 >> 31;
    if (v95)
    {
      v62 = v96;
      v97 = v95 >> 31;
    }
    else
    {
      v97 = 23;
    }
    if (v97 != 23)
    {
      if (!v97)
        goto LABEL_277;
      if ((v95 & 0x80000000) == 0)
        goto LABEL_331;
      goto LABEL_323;
    }
    *(_DWORD *)(a1 + 8) = v94 - v93 + *(_DWORD *)(a1 + 12);
    if (sub_21FCC0(a1))
      goto LABEL_331;
  }
  v98 = *(_DWORD *)(a1 + 12);
  *(_DWORD *)(a1 + 8) = v98;
  *(_DWORD *)(a1 + 24) = v98;
  v99 = sub_22007C(a1);
  if (v99 >= 0)
    v100 = v62;
  else
    v100 = v99;
  v63 = v99 >> 31;
  if (v99)
  {
    v62 = v100;
    v101 = v99 >> 31;
  }
  else
  {
    v101 = 26;
  }
  if (v101 == 26)
  {
    v107 = *(_DWORD *)(a1 + 12);
    *(_DWORD *)(a1 + 8) = v107;
    *(_DWORD *)(a1 + 24) = v107;
    if (sub_2200EC(a1))
      goto LABEL_250;
    *(_DWORD *)(a1 + 8) = *(_DWORD *)(a1 + 12);
    v108 = sub_220160(a1);
    if (v108 < 0)
      v62 = v108;
    if (v108 > 0)
      goto LABEL_250;
    v63 = v108 >> 31;
    v122 = v108 ? v108 >> 31 : 35;
    if (!v122)
      goto LABEL_250;
    if (v122 != 35)
    {
      if (v122 != 34)
        goto LABEL_323;
LABEL_250:
      *(_DWORD *)(a1 + 20) = *(_DWORD *)(a1 + 8);
      result = slice_del(a1);
      if ((result & 0x80000000) != 0)
        return result;
      v110 = *(_DWORD *)(a1 + 8);
      v109 = *(_DWORD *)(a1 + 12);
      *(_DWORD *)(a1 + 24) = v110;
      if (!sub_21F3A0(a1))
        goto LABEL_261;
      *(_DWORD *)(a1 + 20) = *(_DWORD *)(a1 + 8);
      result = slice_del(a1);
      if ((result & 0x80000000) != 0)
        return result;
      v111 = sub_21F984((_DWORD *)a1);
      if (v111 >= 0)
        v112 = v62;
      else
        v112 = v111;
      v63 = v111 >> 31;
      if (v111)
      {
        v62 = v112;
        v113 = v111 >> 31;
      }
      else
      {
        v113 = 36;
      }
      if (!v113)
        goto LABEL_331;
      if (v113 == 36)
      {
LABEL_261:
        v73 = v109 - v110;
        v114 = *(_DWORD *)(a1 + 12) - v73;
        *(_DWORD *)(a1 + 8) = v114;
        *(_DWORD *)(a1 + 24) = v114;
        v115 = sub_21FD20(a1);
        if (v115 >= 0)
          v116 = v62;
        else
          v116 = v115;
        v63 = v115 >> 31;
        if (v115)
        {
          v62 = v116;
          v117 = v115 >> 31;
        }
        else
        {
          v117 = 38;
        }
        if (!v117)
          goto LABEL_277;
        if (v117 == 38)
        {
          *(_DWORD *)(a1 + 8) = *(_DWORD *)(a1 + 12) - v73;
          v118 = sub_21FEAC(a1);
          v63 = v118 >> 31;
          if (v118 < 0)
            v62 = v118;
          if (!v118)
            v63 = 40;
          if (v118 > 0)
            goto LABEL_277;
        }
        switch(v63)
        {
          case 0:
            goto LABEL_277;
          case 40:
            *(_DWORD *)(a1 + 8) = *(_DWORD *)(a1 + 12) - v73;
            v136 = sub_21F984((_DWORD *)a1);
            if (!v136)
              goto LABEL_410;
            v62 = v136;
            if ((v136 & 0x80000000) == 0)
              goto LABEL_331;
            v63 = v136 >> 31;
            break;
          case 39:
            goto LABEL_277;
        }
      }
      if (!v63 || v63 == 37)
        goto LABEL_331;
      goto LABEL_323;
    }
    v125 = *(_DWORD *)(a1 + 12);
    *(_DWORD *)(a1 + 8) = v125;
    *(_DWORD *)(a1 + 24) = v125;
    if (!sub_21FCC0(a1))
    {
      *(_DWORD *)(a1 + 8) = *(_DWORD *)(a1 + 12);
      v126 = sub_21F984((_DWORD *)a1);
      if (v126 >= 0)
        v127 = v62;
      else
        v127 = v126;
      v63 = v126 >> 31;
      if (v126)
      {
        v62 = v127;
        v128 = v126 >> 31;
      }
      else
      {
        v128 = 44;
      }
      if (!v128)
        goto LABEL_331;
      if (v128 != 44)
        goto LABEL_323;
      v129 = *(_DWORD *)(a1 + 12);
      *(_DWORD *)(a1 + 8) = v129;
      *(_DWORD *)(a1 + 24) = v129;
      if (!sub_2201D8(a1))
      {
        *(_DWORD *)(a1 + 8) = *(_DWORD *)(a1 + 12);
        v166 = sub_220248(a1);
        v167 = v166 >= 0 ? v62 : v166;
        v63 = v166 >> 31;
        if (v166)
        {
          v62 = v167;
          v168 = v166 >> 31;
        }
        else
        {
          v168 = 47;
        }
        if (v168)
        {
          if (v168 != 47)
            goto LABEL_396;
          *(_DWORD *)(a1 + 8) = *(_DWORD *)(a1 + 12);
          v169 = sub_2202A0(a1);
          v63 = v169 >> 31;
          if (v169 < 0)
            v62 = v169;
          if (!v169)
            v63 = 48;
          if (v169 <= 0)
          {
LABEL_396:
            if (v63)
            {
              if (v63 == 48)
              {
                v171 = *(_DWORD *)(a1 + 12);
                *(_DWORD *)(a1 + 8) = v171;
                *(_DWORD *)(a1 + 24) = v171;
                v172 = sub_21FD20(a1);
                if (v172 >= 0)
                  v173 = v62;
                else
                  v173 = v172;
                v63 = v172 >> 31;
                if (v172)
                {
                  v62 = v173;
                  v174 = v172 >> 31;
                }
                else
                {
                  v174 = 53;
                }
                if (v174)
                {
                  if (v174 == 53)
                  {
                    *(_DWORD *)(a1 + 8) = *(_DWORD *)(a1 + 12);
                    v175 = sub_21FEAC(a1);
                    if (v175 >= 0)
                      v176 = v62;
                    else
                      v176 = v175;
                    if (v175)
                      v62 = v176;
                    else
                      v62 = 0;
                    if (v175 <= 0)
                      goto LABEL_324;
                  }
                  else if (v172 < 0)
                  {
                    goto LABEL_323;
                  }
                }
                goto LABEL_277;
              }
              if (v63 != 46)
                goto LABEL_323;
            }
          }
        }
      }
      *(_DWORD *)(a1 + 20) = *(_DWORD *)(a1 + 8);
      result = slice_del(a1);
      if ((result & 0x80000000) != 0)
        return result;
      v131 = *(_DWORD *)(a1 + 8);
      v130 = *(_DWORD *)(a1 + 12);
      v73 = v130 - v131;
      *(_DWORD *)(a1 + 24) = v131;
      v132 = sub_21FD20(a1);
      v133 = v132 >> 31;
      if (!v132)
        v133 = 49;
      if (v133 == 49)
      {
        *(_DWORD *)(a1 + 8) = v131 - v130 + *(_DWORD *)(a1 + 12);
        if (!sub_21F3A0(a1))
          goto LABEL_410;
      }
      else if (v133)
      {
        if (v132 >= 0)
          v170 = v62;
        else
          v170 = v132;
        if (v132)
          v62 = v170;
        if (v132 < 0)
          goto LABEL_324;
      }
      else
      {
        *(_DWORD *)(a1 + 20) = *(_DWORD *)(a1 + 8);
        result = slice_del(a1);
        if ((result & 0x80000000) != 0)
          return result;
        v135 = *(_DWORD *)(a1 + 8);
        v134 = *(_DWORD *)(a1 + 12);
        *(_DWORD *)(a1 + 24) = v135;
        if (!sub_21F3A0(a1))
          *(_DWORD *)(a1 + 8) = v135 - v134 + *(_DWORD *)(a1 + 12);
      }
      *(_DWORD *)(a1 + 20) = *(_DWORD *)(a1 + 8);
      result = slice_del(a1);
      if ((result & 0x80000000) != 0)
        return result;
      *(_DWORD *)(a1 + 24) = *(_DWORD *)(a1 + 8);
      result = sub_21F984((_DWORD *)a1);
      if (!(_DWORD)result)
        goto LABEL_410;
LABEL_192:
      if ((result & 0x80000000) != 0)
        return result;
      goto LABEL_331;
    }
LABEL_191:
    *(_DWORD *)(a1 + 20) = *(_DWORD *)(a1 + 8);
    result = slice_del(a1);
    goto LABEL_192;
  }
  if (v101)
    goto LABEL_323;
  *(_DWORD *)(a1 + 20) = *(_DWORD *)(a1 + 8);
  result = slice_del(a1);
  if ((result & 0x80000000) != 0)
    return result;
  v103 = *(_DWORD *)(a1 + 8);
  v102 = *(_DWORD *)(a1 + 12);
  *(_DWORD *)(a1 + 24) = v103;
  v104 = sub_21FD20(a1);
  if (v104 >= 0)
    v105 = v62;
  else
    v105 = v104;
  if (v104)
  {
    v62 = v105;
    v106 = v104 >> 31;
  }
  else
  {
    v106 = 27;
  }
  if (v106 == 27)
  {
    *(_DWORD *)(a1 + 8) = *(_DWORD *)(a1 + 12) - (v102 - v103);
    if (sub_21F3A0(a1))
    {
LABEL_146:
      *(_DWORD *)(a1 + 20) = *(_DWORD *)(a1 + 8);
      result = slice_del(a1);
      if ((result & 0x80000000) != 0)
        return result;
      v66 = *(_DWORD *)(a1 + 8);
      v65 = *(_DWORD *)(a1 + 12);
      result = sub_21F984((_DWORD *)a1);
      if (!(_DWORD)result)
      {
        v67 = v66 - v65;
LABEL_149:
        v68 = v67 + *(_DWORD *)(a1 + 12);
LABEL_150:
        *(_DWORD *)(a1 + 8) = v68;
        goto LABEL_331;
      }
      goto LABEL_192;
    }
    *(_DWORD *)(a1 + 8) = *(_DWORD *)(a1 + 12) - (v102 - v103);
    v121 = sub_21F984((_DWORD *)a1);
    if (!v121)
    {
      v67 = v103 - v102;
      goto LABEL_149;
    }
    v62 = v121;
    if ((v121 & 0x80000000) == 0 || v121 >= 0)
    {
LABEL_331:
      v138 = *(_DWORD *)(a1 + 16);
      *(_DWORD *)(a1 + 8) = v138;
      if (eq_s(a1, 2, &unk_31FE2C))
      {
LABEL_334:
        **(_DWORD **)(a1 + 40) = 2;
        if (*(_DWORD *)(a1 + 12) == 2)
        {
LABEL_340:
          inserted = 0;
LABEL_366:
          *(_DWORD *)(a1 + 8) = v138;
          goto LABEL_367;
        }
      }
      else
      {
        while (1)
        {
          v139 = skip_utf8(*(_QWORD *)a1, *(unsigned int *)(a1 + 8), 0, *(unsigned int *)(a1 + 12), 1);
          if (v139 < 0)
            break;
          *(_DWORD *)(a1 + 8) = v139;
          if (eq_s(a1, 2, &unk_31FE2C))
            goto LABEL_334;
        }
      }
      v140 = v138;
      while (1)
      {
        *(_DWORD *)(a1 + 8) = v140;
        if (eq_s(a1, 5, &unk_31FE2E))
          break;
        v140 = skip_utf8(*(_QWORD *)a1, *(unsigned int *)(a1 + 8), 0, *(unsigned int *)(a1 + 12), 1);
        if (v140 < 0)
        {
          v141 = *(_DWORD *)(a1 + 12);
          goto LABEL_341;
        }
      }
      **(_DWORD **)(a1 + 40) = 5;
      v141 = *(_DWORD *)(a1 + 12);
      if (v141 == 5)
        goto LABEL_340;
LABEL_341:
      *(_DWORD *)(a1 + 16) = v138;
      *(_DWORD *)(a1 + 8) = v141;
      if (eq_s_b(a1, 1, &unk_31FE33)
        || (*(_DWORD *)(a1 + 8) = *(_DWORD *)(a1 + 12), eq_s_b(a1, 1, &unk_31FE34)))
      {
        *(_DWORD *)(a1 + 8) = *(_DWORD *)(a1 + 12);
        if ((out_grouping_b_U(a1, (uint64_t)&unk_31FC23, 97, 305, 1) & 0x80000000) == 0)
        {
          v144 = *(_DWORD *)(a1 + 8);
          v143 = *(_DWORD *)(a1 + 12);
          if (eq_s_b(a1, 1, &unk_31FE35)
            || (*(_DWORD *)(a1 + 8) = v144 - v143 + *(_DWORD *)(a1 + 12), eq_s_b(a1, 2, &unk_31FE36)))
          {
            v145 = *(_DWORD *)(a1 + 12);
            *(_DWORD *)(a1 + 8) = v145;
            v146 = &unk_31FE38;
            v147 = a1;
            v148 = v145;
            v149 = v145;
            v150 = 2;
            goto LABEL_356;
          }
        }
        *(_DWORD *)(a1 + 8) = *(_DWORD *)(a1 + 12);
        if ((out_grouping_b_U(a1, (uint64_t)&unk_31FC23, 97, 305, 1) & 0x80000000) == 0)
        {
          v152 = *(_DWORD *)(a1 + 8);
          v151 = *(_DWORD *)(a1 + 12);
          if (eq_s_b(a1, 1, &unk_31FE3A)
            || (*(_DWORD *)(a1 + 8) = v152 - v151 + *(_DWORD *)(a1 + 12), eq_s_b(a1, 1, &unk_31FE3B)))
          {
            v145 = *(_DWORD *)(a1 + 12);
            *(_DWORD *)(a1 + 8) = v145;
            v146 = &unk_31FE3C;
LABEL_355:
            v147 = a1;
            v148 = v145;
            v149 = v145;
            v150 = 1;
LABEL_356:
            inserted = insert_s(v147, v148, v149, v150, v146);
            *(_DWORD *)(a1 + 8) = v145;
            if (inserted < 0)
            {
LABEL_367:
              if (inserted >= 0)
                v160 = v60;
              else
                v160 = inserted;
              if (!inserted)
                v160 = 0;
              if (inserted >= 1)
                return 1;
              else
                return v160;
            }
            goto LABEL_357;
          }
        }
        *(_DWORD *)(a1 + 8) = *(_DWORD *)(a1 + 12);
        if ((out_grouping_b_U(a1, (uint64_t)&unk_31FC23, 97, 305, 1) & 0x80000000) == 0)
        {
          v154 = *(_DWORD *)(a1 + 8);
          v153 = *(_DWORD *)(a1 + 12);
          if (eq_s_b(a1, 1, &unk_31FE3D)
            || (*(_DWORD *)(a1 + 8) = v154 - v153 + *(_DWORD *)(a1 + 12), eq_s_b(a1, 1, &unk_31FE3E)))
          {
            v145 = *(_DWORD *)(a1 + 12);
            *(_DWORD *)(a1 + 8) = v145;
            v146 = &unk_31FE3F;
            goto LABEL_355;
          }
        }
        *(_DWORD *)(a1 + 8) = *(_DWORD *)(a1 + 12);
        if ((out_grouping_b_U(a1, (uint64_t)&unk_31FC23, 97, 305, 1) & 0x80000000) == 0)
        {
          v162 = *(_DWORD *)(a1 + 8);
          v161 = *(_DWORD *)(a1 + 12);
          if (eq_s_b(a1, 2, &unk_31FE40)
            || (*(_DWORD *)(a1 + 8) = v162 - v161 + *(_DWORD *)(a1 + 12), eq_s_b(a1, 2, &unk_31FE42)))
          {
            v163 = *(_DWORD *)(a1 + 12);
            *(_DWORD *)(a1 + 8) = v163;
            v164 = insert_s(a1, v163, v163, 2, &unk_31FE44);
            *(_DWORD *)(a1 + 8) = v163;
            inserted = v164 & (v164 >> 31);
            if (inserted < 0 != v165)
              goto LABEL_367;
          }
        }
      }
LABEL_357:
      v155 = *(_DWORD *)(a1 + 12);
      *(_DWORD *)(a1 + 8) = v155;
      *(_DWORD *)(a1 + 24) = v155;
      v156 = find_among_b(a1, (uint64_t)&unk_43B6D0, 4);
      if (v156)
      {
        *(_DWORD *)(a1 + 20) = *(_DWORD *)(a1 + 8);
        switch(v156)
        {
          case 1:
            v157 = &unk_31FE46;
            goto LABEL_363;
          case 2:
            v157 = &unk_31FE47;
            v158 = a1;
            v159 = 2;
            goto LABEL_364;
          case 3:
            v157 = &unk_31FE49;
            goto LABEL_363;
          case 4:
            v157 = &unk_31FE4A;
LABEL_363:
            v158 = a1;
            v159 = 1;
LABEL_364:
            inserted = slice_from_s(v158, v159, v157);
            if ((inserted & 0x80000000) == 0)
              break;
            goto LABEL_367;
          default:
            break;
        }
      }
      v138 = *(_DWORD *)(a1 + 16);
      inserted = 1;
      goto LABEL_366;
    }
  }
  else
  {
    if (!v106)
      goto LABEL_277;
    if (v104 >= 0)
      goto LABEL_331;
  }
LABEL_324:
  if (v62 >= 0)
    v137 = v60;
  else
    v137 = v62;
  if (v62)
    v60 = v137;
  else
    v60 = v60;
  result = v60;
  if ((v62 & 0x80000000) == 0)
    goto LABEL_331;
  return result;
}

_QWORD *turkish_UTF_8_create_env()
{
  return SN_create_env(0, 1, 1);
}

void turkish_UTF_8_close_env(uint64_t a1)
{
  SN_close_env(a1, 0);
}

uint64_t sub_21F204(uint64_t a1)
{
  uint64_t v2;

  if (sub_21F5D8(a1)
    && (v2 = *(int *)(a1 + 8), (int)v2 - 3 > *(_DWORD *)(a1 + 16))
    && *(unsigned __int8 *)(v2 + *(_QWORD *)a1 - 1) == 159
    && find_among_b(a1, (uint64_t)&unk_43A850, 4))
  {
    return sub_21F85C(a1);
  }
  else
  {
    return 0;
  }
}

uint64_t sub_21F27C(uint64_t a1)
{
  if (sub_21F5D8(a1) && find_among_b(a1, (uint64_t)&unk_43A8D0, 32))
    return sub_21F85C(a1);
  else
    return 0;
}

uint64_t sub_21F2CC(uint64_t a1)
{
  uint64_t v1;
  char v3;

  v1 = *(int *)(a1 + 8) - 1;
  if ((int)v1 > *(_DWORD *)(a1 + 16)
    && (v3 = *(_BYTE *)(*(_QWORD *)a1 + v1), (v3 & 0xE0) == 0x60)
    && ((0x6822u >> v3) & 1) != 0
    && find_among_b(a1, (uint64_t)&unk_43ACD0, 8))
  {
    return sub_21F85C(a1);
  }
  else
  {
    return 0;
  }
}

BOOL sub_21F348(uint64_t a1)
{
  uint64_t v1;

  v1 = *(int *)(a1 + 8);
  return (int)v1 - 4 > *(_DWORD *)(a1 + 16)
      && *(_BYTE *)(v1 + *(_QWORD *)a1 - 1) == 122
      && find_among_b(a1, (uint64_t)&unk_43AE10, 4) != 0;
}

uint64_t sub_21F3A0(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;

  result = sub_21F5D8(a1);
  if ((_DWORD)result)
  {
    v3 = *(int *)(a1 + 8);
    return (int)v3 - 2 > *(_DWORD *)(a1 + 16)
        && *(_BYTE *)(v3 + *(_QWORD *)a1 - 1) == 114
        && find_among_b(a1, (uint64_t)&unk_43AE90, 2) != 0;
  }
  return result;
}

uint64_t sub_21F410(uint64_t a1)
{
  uint64_t v2;

  if (sub_21F5D8(a1)
    && (v2 = *(int *)(a1 + 8) - 1, (int)v2 > *(_DWORD *)(a1 + 16))
    && *(_BYTE *)(*(_QWORD *)a1 + v2) == 109
    && find_among_b(a1, (uint64_t)&unk_43AED0, 4))
  {
    return sub_21F85C(a1);
  }
  else
  {
    return 0;
  }
}

uint64_t sub_21F484(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;

  result = sub_21F5D8(a1);
  if ((_DWORD)result)
  {
    v3 = *(int *)(a1 + 8);
    return (int)v3 - 2 > *(_DWORD *)(a1 + 16)
        && *(_BYTE *)(v3 + *(_QWORD *)a1 - 1) == 110
        && find_among_b(a1, (uint64_t)&unk_43AF50, 4) != 0;
  }
  return result;
}

uint64_t sub_21F4F4(uint64_t a1)
{
  uint64_t v2;

  if (sub_21F5D8(a1)
    && (v2 = *(int *)(a1 + 8) - 1, (int)v2 > *(_DWORD *)(a1 + 16))
    && *(_BYTE *)(*(_QWORD *)a1 + v2) == 122
    && find_among_b(a1, (uint64_t)&unk_43AFD0, 4))
  {
    return sub_21F85C(a1);
  }
  else
  {
    return 0;
  }
}

uint64_t sub_21F568(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;

  result = sub_21F5D8(a1);
  if ((_DWORD)result)
  {
    v3 = *(int *)(a1 + 8);
    return (int)v3 - 2 > *(_DWORD *)(a1 + 16)
        && *(_BYTE *)(v3 + *(_QWORD *)a1 - 1) == 114
        && find_among_b(a1, (uint64_t)&unk_43B050, 8) != 0;
  }
  return result;
}

uint64_t sub_21F5D8(uint64_t a1)
{
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  uint64_t result;

  v3 = *(_DWORD *)(a1 + 8);
  v2 = *(_DWORD *)(a1 + 12);
  if ((out_grouping_b_U(a1, (uint64_t)&unk_31FC23, 97, 305, 1) & 0x80000000) != 0)
    return 0;
  v5 = *(_DWORD *)(a1 + 8);
  v4 = *(_DWORD *)(a1 + 12);
  if (eq_s_b(a1, 1, &unk_31FC3E))
  {
    if ((out_grouping_b_U(a1, (uint64_t)&unk_31FC3F, 97, 305, 1) & 0x80000000) == 0)
      goto LABEL_18;
  }
  v6 = v4 - v5;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a1 + 12) - v6;
  if (eq_s_b(a1, 1, &unk_31FC5A))
  {
    if ((out_grouping_b_U(a1, (uint64_t)&unk_31FC5B, 101, 252, 1) & 0x80000000) == 0)
      goto LABEL_18;
  }
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a1 + 12) - v6;
  if (eq_s_b(a1, 2, &unk_31FC6E))
  {
    if ((out_grouping_b_U(a1, (uint64_t)&unk_31FC70, 97, 305, 1) & 0x80000000) == 0)
      goto LABEL_18;
  }
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a1 + 12) - v6;
  if (eq_s_b(a1, 1, &unk_31FC8B))
  {
    if ((out_grouping_b_U(a1, (uint64_t)&unk_31FC8C, 101, 105, 1) & 0x80000000) == 0)
      goto LABEL_18;
  }
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a1 + 12) - v6;
  if (eq_s_b(a1, 1, &unk_31FC8D))
  {
    if ((out_grouping_b_U(a1, (uint64_t)&unk_31FC8E, 111, 117, 1) & 0x80000000) == 0)
      goto LABEL_18;
  }
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a1 + 12) - v6;
  if (eq_s_b(a1, 2, &unk_31FC8F))
  {
    if ((out_grouping_b_U(a1, (uint64_t)&unk_31FC91, 246, 252, 1) & 0x80000000) == 0)
      goto LABEL_18;
  }
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a1 + 12) - v6;
  if (eq_s_b(a1, 1, &unk_31FC92))
  {
    if ((out_grouping_b_U(a1, (uint64_t)&unk_31FC8E, 111, 117, 1) & 0x80000000) == 0)
      goto LABEL_18;
  }
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a1 + 12) - v6;
  result = eq_s_b(a1, 2, &unk_31FC93);
  if (!(_DWORD)result)
    return result;
  if ((out_grouping_b_U(a1, (uint64_t)&unk_31FC91, 246, 252, 1) & 0x80000000) != 0)
    return 0;
LABEL_18:
  *(_DWORD *)(a1 + 8) = v3 - v2 + *(_DWORD *)(a1 + 12);
  return 1;
}

uint64_t sub_21F85C(uint64_t a1)
{
  int v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  int v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t result;
  int v11;
  int v12;
  int v13;

  v2 = *(_DWORD *)(a1 + 12) - *(_DWORD *)(a1 + 8);
  if (eq_s_b(a1, 1, &unk_31FCA7))
  {
    v3 = *(unsigned int *)(a1 + 16);
    v4 = (*(_DWORD *)(a1 + 12) - v2);
    *(_DWORD *)(a1 + 8) = v4;
    v5 = skip_utf8(*(_QWORD *)a1, v4, v3, 0, -1);
    if ((v5 & 0x80000000) == 0)
    {
      v6 = v5;
      *(_DWORD *)(a1 + 8) = v5;
      v7 = *(_DWORD *)(a1 + 12);
      if (!in_grouping_b_U(a1, (uint64_t)&unk_31FC23, 97, 305, 0))
      {
        v13 = v6 - v7 + *(_DWORD *)(a1 + 12);
        goto LABEL_10;
      }
    }
  }
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a1 + 12) - v2;
  v8 = eq_s_b(a1, 1, &unk_31FCA8);
  v9 = (*(_DWORD *)(a1 + 12) - v2);
  *(_DWORD *)(a1 + 8) = v9;
  if (v8)
    return 0;
  v11 = skip_utf8(*(_QWORD *)a1, v9, *(unsigned int *)(a1 + 16), 0, -1);
  if (v11 < 0)
    return 0;
  *(_DWORD *)(a1 + 8) = v11;
  v12 = in_grouping_b_U(a1, (uint64_t)&unk_31FC23, 97, 305, 0);
  result = 0;
  if (!v12)
  {
    v13 = *(_DWORD *)(a1 + 12) - v2;
LABEL_10:
    *(_DWORD *)(a1 + 8) = v13;
    return 1;
  }
  return result;
}

uint64_t sub_21F984(_DWORD *a1)
{
  uint64_t result;
  int v3;
  int v4;
  int v5;
  uint64_t v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  unsigned int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  unsigned int v23;
  int v24;
  int v25;
  int v26;
  int v27;
  int v28;
  int v29;
  int v30;
  unsigned int v31;
  int v32;
  int v33;
  int v34;
  int v35;
  BOOL v36;
  unsigned int v37;
  uint64_t v38;

  a1[6] = a1[2];
  result = eq_s_b((uint64_t)a1, 2, &unk_31FDA1);
  if (!(_DWORD)result)
    return result;
  v4 = a1[2];
  v3 = a1[3];
  v5 = sub_2201D8((uint64_t)a1);
  v6 = v5 & (v5 >> 31);
  v7 = v5 >> 31;
  if (v5)
    v8 = v5 >> 31;
  else
    v8 = 2;
  if (v8 != 2)
  {
    if (!v8)
    {
      a1[5] = a1[2];
      result = slice_del((uint64_t)a1);
      if ((result & 0x80000000) != 0)
        return result;
      v10 = a1[2];
      v9 = a1[3];
      a1[6] = v10;
      if (sub_21F3A0((uint64_t)a1))
      {
        a1[5] = a1[2];
        result = slice_del((uint64_t)a1);
        if ((result & 0x80000000) != 0)
          return result;
        v12 = a1[2];
        v11 = a1[3];
        result = sub_21F984(a1);
        if (!(_DWORD)result)
        {
          v13 = v12 - v11;
LABEL_12:
          v14 = v13 + a1[3];
LABEL_72:
          a1[2] = v14;
          return 1;
        }
LABEL_50:
        if ((result & 0x80000000) != 0)
          return result;
        return 1;
      }
      v28 = v10 - v9;
      a1[2] = a1[3] + v28;
      result = sub_21FD20((uint64_t)a1);
      if (!(_DWORD)result)
      {
        v14 = a1[3] + v28;
        goto LABEL_72;
      }
      if ((result & 0x80000000) != 0)
        return result;
LABEL_67:
      a1[5] = a1[2];
      result = slice_del((uint64_t)a1);
      if ((result & 0x80000000) != 0)
        return result;
      v33 = a1[2];
      v34 = a1[3] - v33;
      a1[6] = v33;
      if (!sub_21F3A0((uint64_t)a1))
        goto LABEL_71;
      a1[5] = a1[2];
      result = slice_del((uint64_t)a1);
      if ((result & 0x80000000) != 0)
        return result;
      result = sub_21F984(a1);
      if (!(_DWORD)result)
      {
LABEL_71:
        v14 = a1[3] - v34;
        goto LABEL_72;
      }
      goto LABEL_50;
    }
    goto LABEL_89;
  }
  a1[2] = a1[3] - (v3 - v4);
  v15 = sub_2200EC((uint64_t)a1);
  if (v15 >= 0)
    v16 = v6;
  else
    v16 = v15;
  v7 = v15 >> 31;
  if (v15)
    v6 = v16;
  else
    v6 = v6;
  if (v15)
    v17 = v15 >> 31;
  else
    v17 = 9;
  if (v17 == 9)
  {
    a1[2] = a1[3] - (v3 - v4);
    result = sub_220008((uint64_t)a1);
    if (!(_DWORD)result)
      return result;
    v27 = a1[2];
    v26 = a1[3];
    if (!sub_21FCC0((uint64_t)a1))
    {
      v29 = v26 - v27;
      a1[2] = a1[3] - v29;
      v30 = sub_21FEAC((uint64_t)a1);
      if (v30 >= 0)
        v31 = v6;
      else
        v31 = v30;
      v7 = v30 >> 31;
      if (v30)
        v6 = v31;
      else
        v6 = v6;
      if (v30)
        v32 = v30 >> 31;
      else
        v32 = 19;
      if (v32 != 19)
      {
        if (!v32)
          goto LABEL_67;
        if ((v30 & 0x80000000) == 0)
          return 1;
        goto LABEL_89;
      }
      a1[2] = a1[3] - v29;
      v35 = sub_21F984(a1);
      v36 = v35 <= 0;
      if (v35 >= 0)
        v37 = v6;
      else
        v37 = v35;
      if (v35)
        result = v37;
      else
        result = 0;
      if (!v36)
        return 1;
      return result;
    }
LABEL_49:
    a1[5] = a1[2];
    result = slice_del((uint64_t)a1);
    goto LABEL_50;
  }
  if (v17)
    goto LABEL_89;
  a1[5] = a1[2];
  result = slice_del((uint64_t)a1);
  if ((result & 0x80000000) != 0)
    return result;
  v19 = a1[2];
  v18 = a1[3];
  a1[6] = v19;
  if (sub_21FCC0((uint64_t)a1))
    goto LABEL_49;
  v20 = v18 - v19;
  v21 = a1[3] - (v18 - v19);
  a1[2] = v21;
  a1[6] = v21;
  v22 = sub_21FD20((uint64_t)a1);
  if (v22 >= 0)
    v23 = v6;
  else
    v23 = v22;
  v7 = v22 >> 31;
  if (v22)
    v6 = v23;
  else
    v6 = v6;
  if (v22)
    v24 = v22 >> 31;
  else
    v24 = 12;
  if (!v24)
    goto LABEL_67;
  if (v24 == 12)
  {
    a1[2] = a1[3] - v20;
    v25 = sub_21FEAC((uint64_t)a1);
    v7 = v25 >> 31;
    v6 = v25 >= 0 ? v6 : v25;
    if (!v25)
      v7 = 14;
    if (v25 > 0)
      goto LABEL_67;
  }
  switch(v7)
  {
    case 0:
      goto LABEL_67;
    case 14:
      a1[2] = a1[3] - v20;
      v38 = sub_21F984(a1);
      if (!(_DWORD)v38)
      {
        v13 = v19 - v18;
        goto LABEL_12;
      }
      v6 = v38;
      if ((v38 & 0x80000000) == 0)
        return 1;
      v7 = v38 >> 31;
      break;
    case 13:
      goto LABEL_67;
  }
  result = 1;
  if (v7 && v7 != 11)
  {
LABEL_89:
    result = v6;
    if (v7 == 1)
      return result;
    return 1;
  }
  return result;
}

BOOL sub_21FCC0(uint64_t a1)
{
  uint64_t v1;
  int v2;

  v1 = *(int *)(a1 + 8);
  if ((int)v1 - 3 > *(_DWORD *)(a1 + 16)
    && ((v2 = *(unsigned __int8 *)(v1 + *(_QWORD *)a1 - 1), v2 == 177) || v2 == 105))
  {
    return find_among_b(a1, (uint64_t)&unk_43B210, 2) != 0;
  }
  else
  {
    return 0;
  }
}

uint64_t sub_21FD20(uint64_t a1)
{
  uint64_t v1;
  char v3;
  uint64_t result;
  int v5;
  uint64_t v6;
  int v7;
  int v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  int v13;
  int v14;

  v1 = *(int *)(a1 + 8);
  if ((int)v1 <= *(_DWORD *)(a1 + 16))
    return 0;
  v3 = *(_BYTE *)(v1 + *(_QWORD *)a1 - 1);
  if ((v3 & 0xE0) != 0x60 || ((0x4006000u >> v3) & 1) == 0)
    return 0;
  result = find_among_b(a1, (uint64_t)&unk_43B250, 10);
  if ((_DWORD)result)
  {
    v5 = *(_DWORD *)(a1 + 12) - *(_DWORD *)(a1 + 8);
    if (!in_grouping_b_U(a1, (uint64_t)&unk_31FDD0, 105, 305, 0))
    {
      v10 = *(unsigned int *)(a1 + 16);
      v11 = (*(_DWORD *)(a1 + 12) - v5);
      *(_DWORD *)(a1 + 8) = v11;
      v12 = skip_utf8(*(_QWORD *)a1, v11, v10, 0, -1);
      if ((v12 & 0x80000000) == 0)
      {
        v13 = v12;
        *(_DWORD *)(a1 + 8) = v12;
        v14 = *(_DWORD *)(a1 + 12);
        if (!out_grouping_b_U(a1, (uint64_t)&unk_31FC23, 97, 305, 0))
        {
          v9 = v13 - v14 + *(_DWORD *)(a1 + 12);
          goto LABEL_15;
        }
      }
    }
    *(_DWORD *)(a1 + 8) = *(_DWORD *)(a1 + 12) - v5;
    result = in_grouping_b_U(a1, (uint64_t)&unk_31FDD0, 105, 305, 0);
    v6 = (*(_DWORD *)(a1 + 12) - v5);
    *(_DWORD *)(a1 + 8) = v6;
    if ((_DWORD)result)
    {
      v7 = skip_utf8(*(_QWORD *)a1, v6, *(unsigned int *)(a1 + 16), 0, -1);
      if (v7 < 0)
        return 0;
      *(_DWORD *)(a1 + 8) = v7;
      v8 = out_grouping_b_U(a1, (uint64_t)&unk_31FC23, 97, 305, 0);
      result = 0;
      if (!v8)
      {
        v9 = *(_DWORD *)(a1 + 12) - v5;
LABEL_15:
        *(_DWORD *)(a1 + 8) = v9;
        return 1;
      }
    }
  }
  return result;
}

uint64_t sub_21FEAC(uint64_t a1)
{
  uint64_t result;
  int v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  int v8;
  int v9;
  int v10;
  uint64_t v11;
  int v12;
  int v13;
  int v14;

  result = sub_21F5D8(a1);
  if ((_DWORD)result)
  {
    v3 = in_grouping_b_U(a1, (uint64_t)&unk_31FDD0, 105, 305, 0);
    result = 0;
    if (!v3)
    {
      v4 = *(_DWORD *)(a1 + 12) - *(_DWORD *)(a1 + 8);
      if (eq_s_b(a1, 1, &unk_31FDEA))
      {
        v5 = *(unsigned int *)(a1 + 16);
        v6 = (*(_DWORD *)(a1 + 12) - v4);
        *(_DWORD *)(a1 + 8) = v6;
        v7 = skip_utf8(*(_QWORD *)a1, v6, v5, 0, -1);
        if ((v7 & 0x80000000) == 0)
        {
          v8 = v7;
          *(_DWORD *)(a1 + 8) = v7;
          v9 = *(_DWORD *)(a1 + 12);
          if (!in_grouping_b_U(a1, (uint64_t)&unk_31FC23, 97, 305, 0))
          {
            v14 = v8 - v9 + *(_DWORD *)(a1 + 12);
            goto LABEL_12;
          }
        }
      }
      *(_DWORD *)(a1 + 8) = *(_DWORD *)(a1 + 12) - v4;
      v10 = eq_s_b(a1, 1, &unk_31FDEB);
      v11 = (*(_DWORD *)(a1 + 12) - v4);
      *(_DWORD *)(a1 + 8) = v11;
      if (v10)
        return 0;
      v12 = skip_utf8(*(_QWORD *)a1, v11, *(unsigned int *)(a1 + 16), 0, -1);
      if (v12 < 0)
        return 0;
      *(_DWORD *)(a1 + 8) = v12;
      v13 = in_grouping_b_U(a1, (uint64_t)&unk_31FC23, 97, 305, 0);
      result = 0;
      if (!v13)
      {
        v14 = *(_DWORD *)(a1 + 12) - v4;
LABEL_12:
        *(_DWORD *)(a1 + 8) = v14;
        return 1;
      }
    }
  }
  return result;
}

uint64_t sub_220008(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;

  result = sub_21F5D8(a1);
  if ((_DWORD)result)
  {
    v3 = *(int *)(a1 + 8);
    return (int)v3 - 2 > *(_DWORD *)(a1 + 16)
        && (*(unsigned __int8 *)(v3 + *(_QWORD *)a1 - 1) | 4) == 0x65
        && find_among_b(a1, (uint64_t)&unk_43B390, 2) != 0;
  }
  return result;
}

uint64_t sub_22007C(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;

  result = sub_21F5D8(a1);
  if ((_DWORD)result)
  {
    v3 = *(int *)(a1 + 8);
    return (int)v3 - 2 > *(_DWORD *)(a1 + 16)
        && *(_BYTE *)(v3 + *(_QWORD *)a1 - 1) == 110
        && find_among_b(a1, (uint64_t)&unk_43B4D0, 4) != 0;
  }
  return result;
}

uint64_t sub_2200EC(uint64_t a1)
{
  uint64_t v2;

  if (sub_21F5D8(a1)
    && (v2 = *(int *)(a1 + 8) - 1, (int)v2 > *(_DWORD *)(a1 + 16))
    && *(_BYTE *)(*(_QWORD *)a1 + v2) == 110
    && find_among_b(a1, (uint64_t)&unk_43B550, 4))
  {
    return sub_220318(a1);
  }
  else
  {
    return 0;
  }
}

uint64_t sub_220160(uint64_t a1)
{
  uint64_t v2;

  if (sub_21F5D8(a1)
    && (v2 = *(int *)(a1 + 8) - 1, (int)v2 > *(_DWORD *)(a1 + 16))
    && (*(unsigned __int8 *)(*(_QWORD *)a1 + v2) | 4) == 0x65
    && find_among_b(a1, (uint64_t)&unk_43B5D0, 2))
  {
    return sub_21F85C(a1);
  }
  else
  {
    return 0;
  }
}

uint64_t sub_2201D8(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;

  result = sub_21F5D8(a1);
  if ((_DWORD)result)
  {
    v3 = *(int *)(a1 + 8) - 1;
    return (int)v3 > *(_DWORD *)(a1 + 16)
        && (*(unsigned __int8 *)(*(_QWORD *)a1 + v3) | 4) == 0x65
        && find_among_b(a1, (uint64_t)&unk_43B610, 4) != 0;
  }
  return result;
}

uint64_t sub_220248(uint64_t a1)
{
  if (sub_21F5D8(a1) && !in_grouping_b_U(a1, (uint64_t)&unk_31FDD0, 105, 305, 0))
    return sub_21F85C(a1);
  else
    return 0;
}

uint64_t sub_2202A0(uint64_t a1)
{
  uint64_t v2;

  if (sub_21F5D8(a1)
    && (v2 = *(int *)(a1 + 8), (int)v2 > *(_DWORD *)(a1 + 16))
    && (*(unsigned __int8 *)(v2 + *(_QWORD *)a1 - 1) | 4) == 0x65
    && find_among_b(a1, (uint64_t)&unk_43B690, 2))
  {
    return sub_21F85C(a1);
  }
  else
  {
    return 0;
  }
}

uint64_t sub_220318(uint64_t a1)
{
  int v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  int v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t result;
  int v11;
  int v12;
  int v13;

  v2 = *(_DWORD *)(a1 + 12) - *(_DWORD *)(a1 + 8);
  if (eq_s_b(a1, 1, &unk_31FDA7))
  {
    v3 = *(unsigned int *)(a1 + 16);
    v4 = (*(_DWORD *)(a1 + 12) - v2);
    *(_DWORD *)(a1 + 8) = v4;
    v5 = skip_utf8(*(_QWORD *)a1, v4, v3, 0, -1);
    if ((v5 & 0x80000000) == 0)
    {
      v6 = v5;
      *(_DWORD *)(a1 + 8) = v5;
      v7 = *(_DWORD *)(a1 + 12);
      if (!in_grouping_b_U(a1, (uint64_t)&unk_31FC23, 97, 305, 0))
      {
        v13 = v6 - v7 + *(_DWORD *)(a1 + 12);
        goto LABEL_10;
      }
    }
  }
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a1 + 12) - v2;
  v8 = eq_s_b(a1, 1, &unk_31FDA8);
  v9 = (*(_DWORD *)(a1 + 12) - v2);
  *(_DWORD *)(a1 + 8) = v9;
  if (v8)
    return 0;
  v11 = skip_utf8(*(_QWORD *)a1, v9, *(unsigned int *)(a1 + 16), 0, -1);
  if (v11 < 0)
    return 0;
  *(_DWORD *)(a1 + 8) = v11;
  v12 = in_grouping_b_U(a1, (uint64_t)&unk_31FC23, 97, 305, 0);
  result = 0;
  if (!v12)
  {
    v13 = *(_DWORD *)(a1 + 12) - v2;
LABEL_10:
    *(_DWORD *)(a1 + 8) = v13;
    return 1;
  }
  return result;
}

void sub_220604(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_22061C(uint64_t a1, uint64_t a2)
{
  _Block_object_assign((void *)(a1 + 40), *(const void **)(a2 + 40), 135);
}

void sub_22062C(uint64_t a1)
{
  _Block_object_dispose(*(const void **)(a1 + 40), 135);
}

TSLSearchTreeNode *sub_220638(uint64_t a1, TSLSearchTreeNode *a2, unsigned __int16 *a3, void *a4)
{
  TSLSearchTreeNode *v6;
  unsigned int v8;
  unsigned int splitchar;
  uint64_t v10;
  int *v11;
  uint64_t (*v12)(void);
  objc_class *v13;
  uint64_t v15;

  v6 = a2;
  if (!a2)
    v6 = -[TSLSearchTreeNode initWithSplit:]([TSLSearchTreeNode alloc], "initWithSplit:", *a3);
  v8 = *a3;
  splitchar = v6->splitchar;
  if (v8 < splitchar)
  {
    v10 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40);
    v11 = &OBJC_IVAR___TSLSearchTreeNode_low;
LABEL_7:
    v12 = *(uint64_t (**)(void))(v10 + 16);
    goto LABEL_8;
  }
  if (v8 > splitchar)
  {
    v10 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40);
    v11 = &OBJC_IVAR___TSLSearchTreeNode_high;
    goto LABEL_7;
  }
  if (!*a3)
  {
    v13 = a4;
    v11 = &OBJC_IVAR___TSLSearchTreeNode_value;
    goto LABEL_9;
  }
  v15 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40);
  v11 = &OBJC_IVAR___TSLSearchTreeNode_equal;
  v12 = *(uint64_t (**)(void))(v15 + 16);
LABEL_8:
  v13 = (objc_class *)v12();
LABEL_9:
  *(Class *)((char *)&v6->super.isa + *v11) = v13;
  return v6;
}

uint64_t sub_220B80(uint64_t a1)
{
  void *v1;
  uint64_t v2;
  id v3;
  uint64_t result;

  v1 = *(void **)(a1 + 32);
  if (objc_msgSend(v1, "conformsToProtocol:", &OBJC_PROTOCOL___TSAccessibilitySpecializer))
  {
    if ((objc_opt_respondsToSelector(v1, "specializedClass") & 1) != 0)
    {
      v3 = objc_msgSend(v1, "specializedClass");
      if (objc_msgSend(v3, "isSubclassOfClass:", v1))
        v1 = v3;
    }
  }
  result = objc_opt_new(v1, v2);
  qword_5437E8 = result;
  return result;
}

NSString *TSAccessibilityLocalizedString(uint64_t a1)
{
  NSString *v2;
  int ShouldCrashOnValidationErrorAfterLaunch;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = -[NSBundle localizedStringForKey:value:table:](+[NSBundle bundleForClass:](NSBundle, "bundleForClass:", objc_opt_class(TSAccessibility)), "localizedStringForKey:value:table:", a1, &stru_43D7D8, CFSTR("TSAccessibility"));
  if (TSAccessibilityShouldPerformValidationChecks())
  {
    if (v2 == (NSString *)a1)
    {
      ShouldCrashOnValidationErrorAfterLaunch = TSAccessibilityShouldCrashOnValidationErrorAfterLaunch();
      if (__TSAccessibilityHandleValidationErrorWithDescription(ShouldCrashOnValidationErrorAfterLaunch, 0, (uint64_t)CFSTR("error: String could not be found for key: %@"), v4, v5, v6, v7, v8, a1))abort();
    }
  }
  return v2;
}

id TSAccessibilityLocalizedUnsignedInteger(uint64_t a1)
{
  return +[NSNumberFormatter tsaxLocalizedUnsignedInteger:](NSNumberFormatter, "tsaxLocalizedUnsignedInteger:", a1);
}

id TSAccessibilityLocalizedNumber(uint64_t a1)
{
  return +[NSNumberFormatter tsaxLocalizedNumber:](NSNumberFormatter, "tsaxLocalizedNumber:", a1);
}

id TSAccessibilityLocalizedPercent()
{
  return +[NSNumberFormatter tsaxLocalizedPercentage:](NSNumberFormatter, "tsaxLocalizedPercentage:");
}

NSMutableString *__TSAccessibilityStringForVariables(int a1, id a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v11;
  uint64_t v12;
  NSMutableString *v13;
  const __CFString *v14;
  uint64_t *v15;
  id v16;
  uint64_t *v18;

  v11 = objc_opt_class(NSString);
  v12 = objc_opt_class(NSAttributedString);
  v13 = +[NSMutableString stringWithString:](NSMutableString, "stringWithString:", &stru_43D7D8);
  if ((objc_opt_isKindOfClass(a2, v11) & 1) == 0)
  {
    if ((objc_opt_isKindOfClass(a2, v12) & 1) != 0)
      a2 = objc_msgSend(a2, "string");
    else
      a2 = 0;
  }
  if (objc_msgSend(a2, "length"))
    -[NSMutableString appendString:](v13, "appendString:", a2);
  v18 = &a9;
  if (a1)
    v14 = CFSTR(", ");
  else
    v14 = CFSTR(" ");
  while (1)
  {
    do
    {
      v15 = v18++;
      v16 = (id)*v15;
      if ((objc_opt_isKindOfClass(*v15, v11) & 1) == 0)
      {
        if ((objc_opt_isKindOfClass(v16, v12) & 1) != 0)
          v16 = objc_msgSend(v16, "string");
        else
          v16 = 0;
      }
    }
    while (!objc_msgSend(v16, "length"));
    if ((objc_msgSend(v16, "isEqualToString:", CFSTR("__TSAccessibilityStringForVariablesSentinel")) & 1) != 0)
      break;
    if (-[NSMutableString length](v13, "length"))
      -[NSMutableString appendString:](v13, "appendString:", v14);
    -[NSMutableString appendString:](v13, "appendString:", v16);
  }
  return v13;
}

id __TSAccessibilityStringForArraysAndVariables(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  id v14;
  uint64_t *v15;
  void *v16;
  id v17;
  uint64_t *v19;

  v10 = objc_opt_class(NSString);
  v11 = objc_opt_class(NSAttributedString);
  v12 = objc_opt_class(NSArray);
  v13 = +[NSMutableString string](NSMutableString, "string");
  if ((objc_opt_isKindOfClass(a1, v10) & 1) != 0)
    goto LABEL_8;
  if ((objc_opt_isKindOfClass(a1, v11) & 1) != 0)
  {
    v14 = objc_msgSend(a1, "string");
  }
  else
  {
    if ((objc_opt_isKindOfClass(a1, v12) & 1) == 0)
    {
      a1 = 0;
      goto LABEL_8;
    }
    v14 = objc_msgSend(a1, "componentsJoinedByString:", CFSTR(", "));
  }
  a1 = v14;
LABEL_8:
  if (objc_msgSend(a1, "length"))
    objc_msgSend(v13, "appendString:", a1);
  v19 = &a9;
  while (1)
  {
    do
    {
      v15 = v19++;
      v16 = (void *)*v15;
      if ((objc_opt_isKindOfClass(*v15, v10) & 1) != 0)
        continue;
      if ((objc_opt_isKindOfClass(v16, v11) & 1) != 0)
      {
        v17 = objc_msgSend(v16, "string");
LABEL_16:
        v16 = v17;
        continue;
      }
      if ((objc_opt_isKindOfClass(v16, v12) & 1) != 0)
      {
        v17 = objc_msgSend(v16, "componentsJoinedByString:", CFSTR(", "));
        goto LABEL_16;
      }
      v16 = 0;
    }
    while (!objc_msgSend(v16, "length"));
    if ((objc_msgSend(v16, "isEqualToString:", CFSTR("__TSAccessibilityStringForArraysAndVariablesSentinel")) & 1) != 0)return v13;
    if (objc_msgSend(v13, "length"))
      objc_msgSend(v13, "appendString:", CFSTR(", "));
    objc_msgSend(v13, "appendString:", v16);
  }
}

id TSAccessibilityFriendlyFilename(void *a1)
{
  id v1;

  v1 = objc_msgSend(a1, "mutableCopy");
  if (objc_msgSend(v1, "length"))
  {
    -[NSRegularExpression replaceMatchesInString:options:range:withTemplate:](+[NSRegularExpression regularExpressionWithPattern:options:error:](NSRegularExpression, "regularExpressionWithPattern:options:error:", CFSTR("\\.([a-zA-Z0-9]+)$"), 16, 0), "replaceMatchesInString:options:range:withTemplate:", v1, 0, 0, objc_msgSend(v1, "length"), &stru_43D7D8);
    -[NSRegularExpression replaceMatchesInString:options:range:withTemplate:](+[NSRegularExpression regularExpressionWithPattern:options:error:](NSRegularExpression, "regularExpressionWithPattern:options:error:", CFSTR("[\\s|\\-|\\_|.]{0,1}2x"), 16, 0), "replaceMatchesInString:options:range:withTemplate:", v1, 0, 0, objc_msgSend(v1, "length"), &stru_43D7D8);
    -[NSRegularExpression replaceMatchesInString:options:range:withTemplate:](+[NSRegularExpression regularExpressionWithPattern:options:error:](NSRegularExpression, "regularExpressionWithPattern:options:error:", CFSTR("[\\-\\_]+"), 0, 0), "replaceMatchesInString:options:range:withTemplate:", v1, 0, 0, objc_msgSend(v1, "length"), CFSTR(" "));
  }
  return v1;
}

id TSAccessibilityPostAnnouncementNotification(uint64_t a1, uint64_t a2)
{
  TSAccessibility *v4;
  id result;

  v4 = +[TSAccessibility sharedInstance](TSAccessibility, "sharedInstance");
  result = -[TSAccessibility tsaxRespondsToSelector:fromExtrasProtocol:](v4, "tsaxRespondsToSelector:fromExtrasProtocol:", "handlePostingAnnouncement:sender:priority:", &OBJC_PROTOCOL___TSAccessibilityExtras);
  if ((_DWORD)result)
    return -[TSAccessibility handlePostingAnnouncement:sender:priority:](v4, "handlePostingAnnouncement:sender:priority:", a2, a1, 5);
  return result;
}

id TSAccessibilityPostAnnouncementNotificationWithPriority(uint64_t a1, uint64_t a2, uint64_t a3)
{
  TSAccessibility *v6;
  id result;

  v6 = +[TSAccessibility sharedInstance](TSAccessibility, "sharedInstance");
  result = -[TSAccessibility tsaxRespondsToSelector:fromExtrasProtocol:](v6, "tsaxRespondsToSelector:fromExtrasProtocol:", "handlePostingAnnouncement:sender:priority:", &OBJC_PROTOCOL___TSAccessibilityExtras);
  if ((_DWORD)result)
    return -[TSAccessibility handlePostingAnnouncement:sender:priority:](v6, "handlePostingAnnouncement:sender:priority:", a2, a1, a3);
  return result;
}

id TSAccessibilityPostHighPriorityAnnouncementNotification(uint64_t a1, uint64_t a2)
{
  TSAccessibility *v4;
  id result;

  v4 = +[TSAccessibility sharedInstance](TSAccessibility, "sharedInstance");
  result = -[TSAccessibility tsaxRespondsToSelector:fromExtrasProtocol:](v4, "tsaxRespondsToSelector:fromExtrasProtocol:", "handlePostingAnnouncement:sender:priority:", &OBJC_PROTOCOL___TSAccessibilityExtras);
  if ((_DWORD)result)
    return -[TSAccessibility handlePostingAnnouncement:sender:priority:](v4, "handlePostingAnnouncement:sender:priority:", a2, a1, 1);
  return result;
}

void TSAccessibilityPerformBlockOnMainThread(void (**a1)(_QWORD))
{
  if (+[NSThread isMainThread](NSThread, "isMainThread"))
    a1[2](a1);
  else
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, a1);
}

void TSAccessibilityPerformBlockAsynchronouslyOnMainThread(dispatch_block_t block)
{
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
}

void TSAccessibilityPerformBlockOnMainThreadAfterDelay(void *a1, double a2)
{
  dispatch_time_t v3;

  v3 = dispatch_time(0, (uint64_t)(a2 * 1000000000.0));
  dispatch_after(v3, (dispatch_queue_t)&_dispatch_main_q, a1);
}

BOOL TSAccessibilityNearlyEqualSizes(double a1, double a2, double a3, double a4)
{
  _BOOL4 v4;

  v4 = vabdd_f64(a1, a3) < 0.01;
  return vabdd_f64(a2, a4) < 0.01 && v4;
}

uint64_t TSAccessibilityShouldPerformValidationChecks()
{
  if (qword_543800 != -1)
    dispatch_once(&qword_543800, &stru_43B7B0);
  return byte_5437F8;
}

uint64_t __TSAccessibilityHandleValidationErrorWithDescription(int a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v10;
  id v11;

  LODWORD(v10) = a1;
  v11 = objc_msgSend(objc_alloc((Class)NSString), "initWithFormat:arguments:", a3, &a9);
  NSLog(CFSTR("*** TSAccessibility validation error: %@"), v11);
  if (v11)
    v10 = v10;
  else
    v10 = 0;
  if ((_DWORD)v10 == 1 && a2 != 0)
  {
    if (qword_543828 != -1)
      dispatch_once(&qword_543828, &stru_43B810);
    v10 = 0;
  }

  return v10;
}

uint64_t TSAccessibilityShouldCrashOnValidationErrorAfterLaunch()
{
  if (qword_543820 != -1)
    dispatch_once(&qword_543820, &stru_43B7F0);
  return byte_543818;
}

uint64_t __TSAccessibilityPerformSafeBlock(uint64_t a1)
{
  (*(void (**)(void))(a1 + 16))();
  return 0;
}

Class __TSAccessibilityCastAsSafeCategory(void *a1, uint64_t a2, int a3, _BYTE *a4)
{
  NSString *v8;
  NSString *v9;
  int v10;
  int v11;
  NSString *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  Class v18;
  int v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char isKindOfClass;
  int v27;
  Class result;
  int v29;
  objc_class *v30;
  NSString *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  if (!a2)
    return 0;
  v8 = (NSString *)objc_msgSend(a1, "tsaxTargetClassName");
  v9 = v8;
  if (a3)
  {
    if (qword_543800 != -1)
      dispatch_once(&qword_543800, &stru_43B7B0);
    LOBYTE(v10) = 0;
    if (byte_5437F8 && !v9)
    {
      if (qword_543820 != -1)
        dispatch_once(&qword_543820, &stru_43B7F0);
      v11 = byte_543818;
      v12 = NSStringFromClass((Class)a1);
      v10 = __TSAccessibilityHandleValidationErrorWithDescription(v11, 0, (uint64_t)CFSTR("Couldn't find target class name for safe category class %@"), v13, v14, v15, v16, v17, (uint64_t)v12);
      if (!a4)
      {
        if (v10)
          goto LABEL_43;
      }
    }
    if (a4)
      *a4 = v10;
    if (v9)
    {
      v18 = NSClassFromString(v9);
      if (qword_543800 != -1)
        dispatch_once(&qword_543800, &stru_43B7B0);
      LOBYTE(v19) = 0;
      if (byte_5437F8 && !v18)
      {
        if (qword_543820 != -1)
          dispatch_once(&qword_543820, &stru_43B7F0);
        v20 = byte_543818;
        NSStringFromClass((Class)a1);
        v19 = __TSAccessibilityHandleValidationErrorWithDescription(v20, 0, (uint64_t)CFSTR("Couldn't find target class named %@ for safe category class %@"), v21, v22, v23, v24, v25, (uint64_t)v9);
        if (!a4)
        {
          if (v19)
            goto LABEL_43;
        }
      }
      if (a4)
        *a4 = v19;
      if (v18)
      {
        isKindOfClass = objc_opt_isKindOfClass(a2, v18);
        if (qword_543800 != -1)
          dispatch_once(&qword_543800, &stru_43B7B0);
        if ((byte_5437F8 == 0) | isKindOfClass & 1)
        {
          LOBYTE(v27) = 0;
LABEL_37:
          if (a4)
            *a4 = v27;
          goto LABEL_39;
        }
        if (qword_543820 != -1)
          dispatch_once(&qword_543820, &stru_43B7F0);
        v29 = byte_543818;
        v30 = (objc_class *)objc_opt_class(a2);
        v31 = NSStringFromClass(v30);
        NSStringFromClass((Class)a1);
        v27 = __TSAccessibilityHandleValidationErrorWithDescription(v29, 0, (uint64_t)CFSTR("Failed to cast object <%@: %p> as safe category %@"), v32, v33, v34, v35, v36, (uint64_t)v31);
        if (a4 || !v27)
          goto LABEL_37;
LABEL_43:
        abort();
      }
    }
    return 0;
  }
  if (!v8)
    return 0;
  result = NSClassFromString(v8);
  if (!result)
    return result;
  isKindOfClass = objc_opt_isKindOfClass(a2, result);
LABEL_39:
  if ((isKindOfClass & 1) != 0)
    return (Class)a2;
  else
    return 0;
}

uint64_t __TSAccessibilityCastAsClass(objc_class *a1, uint64_t a2, int a3, _BYTE *a4)
{
  char isKindOfClass;
  int v9;
  int v11;
  objc_class *v12;
  NSString *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  if (!a2)
    return 0;
  isKindOfClass = objc_opt_isKindOfClass(a2, a1);
  if (a3)
  {
    if (qword_543800 != -1)
      dispatch_once(&qword_543800, &stru_43B7B0);
    if ((byte_5437F8 == 0) | isKindOfClass & 1)
    {
      LOBYTE(v9) = 0;
    }
    else
    {
      if (qword_543820 != -1)
        dispatch_once(&qword_543820, &stru_43B7F0);
      v11 = byte_543818;
      v12 = (objc_class *)objc_opt_class(a2);
      v13 = NSStringFromClass(v12);
      NSStringFromClass(a1);
      v9 = __TSAccessibilityHandleValidationErrorWithDescription(v11, 0, (uint64_t)CFSTR("Failed to cast object <%@: %p> as class %@"), v14, v15, v16, v17, v18, (uint64_t)v13);
      if (!a4 && v9)
        abort();
    }
    if (a4)
      *a4 = v9;
  }
  if ((isKindOfClass & 1) != 0)
    return a2;
  else
    return 0;
}

void *__TSAccessibilityCastAsProtocol(Protocol *a1, void *a2, int a3, _BYTE *a4)
{
  unsigned int v8;
  char v9;
  int v10;
  int v12;
  objc_class *v13;
  NSString *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  if (!a2)
    return 0;
  v8 = objc_msgSend(a2, "conformsToProtocol:", a1);
  if (a3)
  {
    if (qword_543800 != -1)
      dispatch_once(&qword_543800, &stru_43B7B0);
    if (byte_5437F8)
      v9 = v8;
    else
      v9 = 1;
    if ((v9 & 1) != 0)
    {
      LOBYTE(v10) = 0;
    }
    else
    {
      if (qword_543820 != -1)
        dispatch_once(&qword_543820, &stru_43B7F0);
      v12 = byte_543818;
      v13 = (objc_class *)objc_opt_class(a2);
      v14 = NSStringFromClass(v13);
      NSStringFromProtocol(a1);
      v10 = __TSAccessibilityHandleValidationErrorWithDescription(v12, 0, (uint64_t)CFSTR("Failed to cast object <%@: %p> as protocol %@"), v15, v16, v17, v18, v19, (uint64_t)v14);
      if (!a4 && v10)
        abort();
    }
    if (a4)
      *a4 = v10;
  }
  if (v8)
    return a2;
  else
    return 0;
}

void TSAccessibilityInstallSafeCategory(NSString *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  Class v7;
  BOOL v8;

  v7 = NSClassFromString(a1);
  if (qword_543800 != -1)
    dispatch_once(&qword_543800, &stru_43B7B0);
  if (byte_5437F8)
    v8 = v7 == 0;
  else
    v8 = 0;
  if (v8)
  {
    if (qword_543810 != -1)
      dispatch_once(&qword_543810, &stru_43B7D0);
    if (__TSAccessibilityHandleValidationErrorWithDescription(byte_543808, 1, (uint64_t)CFSTR("Failed installing safe category: %@ does not exist in runtime."), v2, v3, v4, v5, v6, (uint64_t)a1))abort();
  }
  else if (v7)
  {
    -[objc_class performSelector:](v7, "performSelector:", "_tsaxInitializeSafeCategory");
  }
}

uint64_t TSAccessibilityShouldCrashOnValidationError()
{
  if (qword_543810 != -1)
    dispatch_once(&qword_543810, &stru_43B7D0);
  return byte_543808;
}

void TSAccessibilityInstallSafeCategories(void *a1)
{
  void *v1;
  id v2;
  id v3;
  uint64_t v4;
  id v5;
  size_t v6;
  __objc2_meth_list **p_opt_class_meths;
  __objc2_meth_list **v8;
  __objc2_meth_list **v9;
  uint64_t v10;
  void *v11;
  NSString *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  Class v18;
  __objc2_meth_list **v19;
  __objc2_meth_list **v20;
  NSString *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  Class v27;
  void *v28;
  size_t v29;
  Class *v30;
  void *v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  void *v35;
  id *v36;
  char *__base;
  uint64_t v38;
  id v39;
  _QWORD __compar[7];
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  _BYTE v45[128];

  v1 = a1;
  v2 = objc_msgSend(a1, "count");
  if (v2)
  {
    __base = (char *)malloc_type_malloc(40 * (_QWORD)v2, 0x800402FCC0CB6uLL);
    if (__base)
    {
      v43 = 0u;
      v44 = 0u;
      v41 = 0u;
      v42 = 0u;
      v3 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v41, v45, 16);
      if (v3)
      {
        v5 = v3;
        v6 = 0;
        p_opt_class_meths = &OBJC_PROTOCOL___THAccessibilityTSKScrollViewDelegate.opt_class_meths;
        v8 = &OBJC_PROTOCOL___THAccessibilityTSKScrollViewDelegate.opt_class_meths;
        v9 = &OBJC_PROTOCOL___THAccessibilityTSKScrollViewDelegate.opt_class_meths;
        v10 = *(_QWORD *)v42;
        v38 = *(_QWORD *)v42;
        do
        {
          v11 = 0;
          v39 = v5;
          do
          {
            if (*(_QWORD *)v42 != v10)
              objc_enumerationMutation(v1);
            v12 = *(NSString **)(*((_QWORD *)&v41 + 1) + 8 * (_QWORD)v11);
            v18 = NSClassFromString(v12);
            if (p_opt_class_meths[256] != (__objc2_meth_list *)-1)
              dispatch_once(&qword_543800, &stru_43B7B0);
            if (!*((_BYTE *)v8 + 2040) || v18)
            {
              if (v18)
              {
                v19 = v9;
                v20 = v8;
                v21 = (NSString *)-[objc_class tsaxTargetClassName](v18, "tsaxTargetClassName");
                v27 = NSClassFromString(v21);
                if (p_opt_class_meths[256] != (__objc2_meth_list *)-1)
                  dispatch_once(&qword_543800, &stru_43B7B0);
                if (!*((_BYTE *)v20 + 2040) || v27)
                {
                  if (v27)
                  {
                    v28 = v1;
                    v29 = v6;
                    v30 = (Class *)&__base[40 * v6];
                    *v30 = v18;
                    v30[1] = (Class)v12;
                    v30[2] = (Class)sub_225F48(v18, (uint64_t)v12);
                    v30[3] = v27;
                    v30[4] = (Class)sub_225F48(v27, (uint64_t)v21);
                    v6 = v29 + 1;
                    v1 = v28;
                    p_opt_class_meths = (__objc2_meth_list **)(&OBJC_PROTOCOL___THAccessibilityTSKScrollViewDelegate + 48);
                  }
                  v8 = v20;
                  v9 = v19;
                  v10 = v38;
                  v5 = v39;
                }
                else
                {
                  v9 = v19;
                  if (v19[258] != (__objc2_meth_list *)-1)
                    dispatch_once(&qword_543810, &stru_43B7D0);
                  v5 = v39;
                  v8 = v20;
                  v10 = v38;
                  if (__TSAccessibilityHandleValidationErrorWithDescription(byte_543808, 1, (uint64_t)CFSTR("Failed installing %@ on %@. %@ does not exist in runtime."), v22, v23, v24, v25, v26, (uint64_t)v12))LABEL_37:abort();
                }
              }
            }
            else
            {
              if (v9[258] != (__objc2_meth_list *)-1)
                dispatch_once(&qword_543810, &stru_43B7D0);
              if (__TSAccessibilityHandleValidationErrorWithDescription(byte_543808, 1, (uint64_t)CFSTR("Failed installing safe category: %@ does not exist in runtime."), v13, v14, v15, v16, v17, (uint64_t)v12))goto LABEL_37;
            }
            v11 = (char *)v11 + 1;
          }
          while (v5 != v11);
          v5 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v41, v45, 16);
        }
        while (v5);
      }
      else
      {
        v6 = 0;
      }
      v31 = (void *)objc_opt_new(NSMutableArray, v4);
      v33 = (void *)objc_opt_new(NSMutableSet, v32);
      v35 = (void *)objc_opt_new(NSMutableSet, v34);
      __compar[0] = _NSConcreteStackBlock;
      __compar[1] = 3221225472;
      __compar[2] = sub_225FDC;
      __compar[3] = &unk_43B790;
      __compar[4] = v31;
      __compar[5] = v33;
      __compar[6] = v35;
      qsort_b(__base, v6, 0x28uLL, __compar);

      if (v6)
      {
        v36 = (id *)(__base + 16);
        do
        {
          objc_msgSend(*(v36 - 2), "_tsaxInstallSafeCategoryOnClass:", v36[1]);

          v36 += 5;
          --v6;
        }
        while (v6);
      }
      free(__base);
    }
  }
}

id sub_225F48(void *a1, uint64_t a2)
{
  id v3;
  objc_class *v4;
  objc_class *v5;

  v3 = objc_msgSend(objc_alloc((Class)NSMutableString), "initWithString:", a2);
  v4 = (objc_class *)objc_msgSend(a1, "superclass");
  if (v4)
  {
    v5 = v4;
    do
    {
      objc_msgSend(v3, "insertString:atIndex:", CFSTR(","), 0);
      objc_msgSend(v3, "insertString:atIndex:", NSStringFromClass(v5), 0);
      v5 = (objc_class *)-[objc_class superclass](v5, "superclass");
    }
    while (v5);
  }
  return v3;
}

uint64_t sub_225FDC(void **a1, void **a2, uint64_t a3)
{
  uint64_t result;

  result = (uint64_t)objc_msgSend(a2[4], "compare:", *(_QWORD *)(a3 + 32));
  if (!result)
  {
    if ((sub_226064(a2, a3, a1[4], a1[5], a1[6]) & 1) != 0)
    {
      return 1;
    }
    else if ((sub_226064((void **)a3, (uint64_t)a2, a1[4], a1[5], a1[6]) & 1) != 0)
    {
      return -1;
    }
    else
    {
      return (uint64_t)objc_msgSend(a2[2], "compare:", *(_QWORD *)(a3 + 16));
    }
  }
  return result;
}

uint64_t sub_226064(void **a1, uint64_t a2, void *a3, void *a4, void *a5)
{
  char v9;
  NSString *v10;
  Class v11;

  sub_2281B4(*a1, a3, a4, a5);
  v9 = 0;
  while (objc_msgSend(a3, "count"))
  {
    v10 = (NSString *)objc_msgSend(a3, "objectAtIndex:", 0);
    objc_msgSend(a3, "removeObjectAtIndex:", 0);
    objc_msgSend(a5, "addObject:", v10);
    if (-[NSString isEqualToString:](v10, "isEqualToString:", *(_QWORD *)(a2 + 8)))
    {
      objc_msgSend(a3, "removeAllObjects");
      v9 = 1;
    }
    else
    {
      v11 = NSClassFromString(v10);
      sub_2281B4(v11, a3, a4, a5);
    }

  }
  objc_msgSend(a5, "removeAllObjects");
  return v9 & 1;
}

void sub_22667C(id a1)
{
  const __CFString *v1;
  int AppBooleanValue;

  if (!byte_5437F8)
  {
    v1 = (const __CFString *)sub_2266FC();
    AppBooleanValue = CFPreferencesGetAppBooleanValue(CFSTR("ReportValidationErrors"), v1, 0);
    byte_5437F8 = AppBooleanValue != 0;
    if (!AppBooleanValue)
    {
      if (qword_543810 != -1)
        dispatch_once(&qword_543810, &stru_43B7D0);
      byte_5437F8 = byte_543808;
    }
  }
}

id sub_2266FC()
{
  TSAccessibility *v0;

  v0 = +[TSAccessibility sharedInstance](TSAccessibility, "sharedInstance");
  if (-[TSAccessibility _tsaxRespondsToSelector:fromExtrasProtocol:skipAssertions:](v0, "_tsaxRespondsToSelector:fromExtrasProtocol:skipAssertions:", "preferencesDomain", &OBJC_PROTOCOL___TSAccessibilityExtras, 1))return -[TSAccessibility preferencesDomain](v0, "preferencesDomain");
  else
    return 0;
}

void sub_226754(id a1)
{
  const __CFString *v1;

  if (!byte_543808)
  {
    v1 = (const __CFString *)sub_2266FC();
    byte_543808 = CFPreferencesGetAppBooleanValue(CFSTR("CrashOnValidationErrors"), v1, 0) != 0;
  }
}

void sub_22679C(id a1)
{
  if (qword_543810 != -1)
    dispatch_once(&qword_543810, &stru_43B7D0);
  byte_543818 = byte_543808;
}

void sub_2267E4(id a1)
{
  TSAccessibilityPerformBlockOnMainThreadAfterDelay(&stru_43B830, 0.1);
}

void sub_2267F8(id a1)
{
  NSLog(CFSTR("*** TSAccessibility validation error: see log output above."));
  abort();
}

void __TSAccessibilityValidateMethodSignature(uint64_t a1, int a2, int a3, Method m, const char *a5, const char **a6)
{
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int NumberOfArguments;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unsigned int v21;
  unsigned int v22;
  unsigned int v23;
  const char **v24;
  const char *v25;
  char *v26;
  unsigned int v27;
  unsigned int v28;

  if (m)
  {
    v9 = method_copyReturnType(m);
    if (qword_543800 != -1)
      dispatch_once(&qword_543800, &stru_43B7B0);
    if (byte_5437F8 && !sub_226AA8(a5, v9))
    {
      if (qword_543810 != -1)
        dispatch_once(&qword_543810, &stru_43B7D0);
      if (__TSAccessibilityHandleValidationErrorWithDescription(byte_543808, 1, (uint64_t)CFSTR("Return type is different for method: -[%@ %@]. Actual: %s, Stated: %s"), v10, v11, v12, v13, v14, a1))goto LABEL_35;
    }
    if (v9)
      free(v9);
    NumberOfArguments = method_getNumberOfArguments(m);
    v21 = NumberOfArguments - 2;
    if (NumberOfArguments == 2)
    {
      v27 = 0;
    }
    else
    {
      v22 = NumberOfArguments;
      v28 = NumberOfArguments - 2;
      v23 = 2;
      while (1)
      {
        v24 = a6++;
        v25 = *v24;
        if (!*v24)
          break;
        v26 = method_copyArgumentType(m, v23);
        if (qword_543800 != -1)
          dispatch_once(&qword_543800, &stru_43B7B0);
        if (byte_5437F8 && !sub_226AA8(v25, v26))
        {
          if (qword_543810 != -1)
            dispatch_once(&qword_543810, &stru_43B7D0);
          if (__TSAccessibilityHandleValidationErrorWithDescription(byte_543808, 1, (uint64_t)CFSTR("Argument type is different for method: -[%@ %@]. Actual: %s, Stated: %s"), v16, v17, v18, v19, v20, a1))goto LABEL_35;
        }
        if (v26)
          free(v26);
        if (v22 == ++v23)
        {
          v21 = v28;
          v27 = v28;
          goto LABEL_27;
        }
      }
      v27 = v23 - 2;
      v21 = v28;
    }
LABEL_27:
    if (qword_543800 != -1)
      dispatch_once(&qword_543800, &stru_43B7B0);
    if (v21 != v27 && byte_5437F8)
    {
      if (qword_543810 != -1)
        dispatch_once(&qword_543810, &stru_43B7D0);
      if (__TSAccessibilityHandleValidationErrorWithDescription(byte_543808, 1, (uint64_t)CFSTR("Argument count is different for method: -[%@ %@]. Actual: %u, Stated: %u"), v16, v17, v18, v19, v20, a1))LABEL_35:abort();
    }
  }
}

BOOL sub_226AA8(const char *a1, char *__s2)
{
  _BOOL8 v2;
  id v5;
  void *v6;

  v2 = 0;
  if (a1 && __s2)
  {
    if (!strcmp(a1, __s2))
    {
      return 1;
    }
    else
    {
      v5 = objc_msgSend(objc_alloc((Class)NSString), "initWithFormat:", CFSTR("@\"%s\""), a1);
      v6 = v5;
      if (v5)
        v2 = strcmp((const char *)objc_msgSend(v5, "UTF8String"), __s2) == 0;
      else
        v2 = 0;

    }
  }
  return v2;
}

void __TSAccessibilityValidateSymbol(char *__symbol)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;

  if (!dlsym(&dword_8, __symbol))
  {
    v7 = dlsym((void *)0xFFFFFFFFFFFFFFFELL, __symbol);
    if (qword_543800 != -1)
      dispatch_once(&qword_543800, &stru_43B7B0);
    if (byte_5437F8 && !v7)
    {
      if (qword_543810 != -1)
        dispatch_once(&qword_543810, &stru_43B7D0);
      if (__TSAccessibilityHandleValidationErrorWithDescription(byte_543808, 1, (uint64_t)CFSTR("Symbol not present: %s"), v2, v3, v4, v5, v6, (uint64_t)__symbol))abort();
    }
  }
}

void __TSAccessibilityValidateClassMethod(NSString *a1, NSString *a2)
{
  objc_class *v4;
  const char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  Method ClassMethod;

  v4 = NSClassFromString(a1);
  v5 = NSSelectorFromString(a2);
  ClassMethod = class_getClassMethod(v4, v5);
  if (qword_543800 != -1)
    dispatch_once(&qword_543800, &stru_43B7B0);
  if (byte_5437F8 && !ClassMethod)
  {
    if (qword_543810 != -1)
      dispatch_once(&qword_543810, &stru_43B7D0);
    if (__TSAccessibilityHandleValidationErrorWithDescription(byte_543808, 1, (uint64_t)CFSTR("%@ Class method not present: %@"), v6, v7, v8, v9, v10, (uint64_t)a1))abort();
  }
}

void __TSAccessibilityValidateClassMethodComplete(NSString *a1, NSString *a2, const char *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, const char *a9)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  objc_class *v17;
  BOOL v18;
  const char *v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  objc_method *ClassMethod;

  v17 = NSClassFromString(a1);
  if (qword_543800 != -1)
    dispatch_once(&qword_543800, &stru_43B7B0);
  if (byte_5437F8)
    v18 = v17 == 0;
  else
    v18 = 0;
  if (v18)
  {
    if (qword_543810 != -1)
      dispatch_once(&qword_543810, &stru_43B7D0);
    if (__TSAccessibilityHandleValidationErrorWithDescription(byte_543808, 1, (uint64_t)CFSTR("Class missing: %@"), v12, v13, v14, v15, v16, (uint64_t)a1))goto LABEL_19;
  }
  v19 = NSSelectorFromString(a2);
  ClassMethod = class_getClassMethod(v17, v19);
  if (qword_543800 != -1)
    dispatch_once(&qword_543800, &stru_43B7B0);
  if (byte_5437F8 && !ClassMethod)
  {
    if (qword_543810 != -1)
      dispatch_once(&qword_543810, &stru_43B7D0);
    if (__TSAccessibilityHandleValidationErrorWithDescription(byte_543808, 1, (uint64_t)CFSTR("Class method missing: -[%@ %@]"), v21, v22, v23, v24, v25, (uint64_t)a1))LABEL_19:abort();
  }
  __TSAccessibilityValidateMethodSignature((uint64_t)a1, v20, (int)a2, ClassMethod, a3, &a9);
}

void __TSAccessibilityValidateIsKindOfClass(NSString *a1, NSString *a2)
{
  objc_class *v4;
  Class v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  objc_class *v12;
  Class Superclass;
  char v14;

  v4 = NSClassFromString(a1);
  v5 = NSClassFromString(a2);
  v11 = 0;
  if (v4)
  {
    v12 = v5;
    if (v5)
    {
      do
      {
        Superclass = class_getSuperclass(v4);
        v11 = Superclass == v12;
        if (!Superclass)
          break;
        v4 = Superclass;
      }
      while (Superclass != v12);
    }
  }
  if (qword_543800 != -1)
    dispatch_once(&qword_543800, &stru_43B7B0);
  if (byte_5437F8)
    v14 = v11;
  else
    v14 = 1;
  if ((v14 & 1) == 0)
  {
    if (qword_543810 != -1)
      dispatch_once(&qword_543810, &stru_43B7D0);
    if (__TSAccessibilityHandleValidationErrorWithDescription(byte_543808, 1, (uint64_t)CFSTR("%@ is not a kind of %@"), v6, v7, v8, v9, v10, (uint64_t)a1))abort();
  }
}

void __TSAccessibilityValidateIvarType(NSString *a1, const char *a2, const char *a3)
{
  objc_class *v6;
  objc_ivar *InstanceVariable;
  char *TypeEncoding;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = NSClassFromString(a1);
  InstanceVariable = class_getInstanceVariable(v6, a2);
  TypeEncoding = (char *)ivar_getTypeEncoding(InstanceVariable);
  if (qword_543800 != -1)
    dispatch_once(&qword_543800, &stru_43B7B0);
  if (byte_5437F8 && !sub_226AA8(a3, TypeEncoding))
  {
    if (qword_543810 != -1)
      dispatch_once(&qword_543810, &stru_43B7D0);
    if (__TSAccessibilityHandleValidationErrorWithDescription(byte_543808, 1, (uint64_t)CFSTR("%@ : Ivar is not the right type: %s [Should be: %s was: %s]"), v9, v10, v11, v12, v13, (uint64_t)a1))abort();
  }
}

void __TSAccessibilityValidateInstanceMethod(NSString *a1, NSString *a2)
{
  objc_class *v4;
  const char *v5;
  Method InstanceMethod;
  Method *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  objc_method *v14;
  BOOL v15;
  char v16;
  unsigned int outCount;

  v4 = NSClassFromString(a1);
  v5 = NSSelectorFromString(a2);
  InstanceMethod = class_getInstanceMethod(v4, v5);
  outCount = 0;
  v7 = class_copyMethodList(v4, &outCount);
  if (v7)
  {
    if (outCount)
    {
      v13 = 0;
      do
      {
        v14 = v7[v13];
        v15 = v14 == InstanceMethod;
        ++v13;
      }
      while (v13 < outCount && v14 != InstanceMethod);
    }
    else
    {
      v15 = 0;
    }
    free(v7);
  }
  else
  {
    v15 = 0;
  }
  if (qword_543800 != -1)
    dispatch_once(&qword_543800, &stru_43B7B0);
  if (byte_5437F8)
    v16 = v15;
  else
    v16 = 1;
  if ((v16 & 1) == 0)
  {
    if (qword_543810 != -1)
      dispatch_once(&qword_543810, &stru_43B7D0);
    if (__TSAccessibilityHandleValidationErrorWithDescription(byte_543808, 1, (uint64_t)CFSTR("%@ Instance method not present: %@"), v8, v9, v10, v11, v12, (uint64_t)a1))abort();
  }
}

void __TSAccessibilityValidateInstanceMethodComplete(NSString *a1, NSString *a2, const char *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, const char *a9)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  objc_class *v17;
  BOOL v18;
  const char *v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  objc_method *InstanceMethod;

  v17 = NSClassFromString(a1);
  if (qword_543800 != -1)
    dispatch_once(&qword_543800, &stru_43B7B0);
  if (byte_5437F8)
    v18 = v17 == 0;
  else
    v18 = 0;
  if (v18)
  {
    if (qword_543810 != -1)
      dispatch_once(&qword_543810, &stru_43B7D0);
    if (__TSAccessibilityHandleValidationErrorWithDescription(byte_543808, 1, (uint64_t)CFSTR("Class missing: %@"), v12, v13, v14, v15, v16, (uint64_t)a1))goto LABEL_19;
  }
  v19 = NSSelectorFromString(a2);
  InstanceMethod = class_getInstanceMethod(v17, v19);
  if (qword_543800 != -1)
    dispatch_once(&qword_543800, &stru_43B7B0);
  if (byte_5437F8 && !InstanceMethod)
  {
    if (qword_543810 != -1)
      dispatch_once(&qword_543810, &stru_43B7D0);
    if (__TSAccessibilityHandleValidationErrorWithDescription(byte_543808, 1, (uint64_t)CFSTR("Instance method missing: -[%@ %@]"), v21, v22, v23, v24, v25, (uint64_t)a1))LABEL_19:abort();
  }
  __TSAccessibilityValidateMethodSignature((uint64_t)a1, v20, (int)a2, InstanceMethod, a3, &a9);
}

void __TSAccessibilityValidateProperty(NSString *a1, const char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  objc_class *v9;
  BOOL v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  objc_property_t Property;

  v9 = NSClassFromString(a1);
  if (qword_543800 != -1)
    dispatch_once(&qword_543800, &stru_43B7B0);
  if (byte_5437F8)
    v10 = v9 == 0;
  else
    v10 = 0;
  if (v10)
  {
    if (qword_543810 != -1)
      dispatch_once(&qword_543810, &stru_43B7D0);
    if (__TSAccessibilityHandleValidationErrorWithDescription(byte_543808, 1, (uint64_t)CFSTR("Class missing: %@"), v4, v5, v6, v7, v8, (uint64_t)a1))goto LABEL_19;
  }
  Property = class_getProperty(v9, a2);
  if (qword_543800 != -1)
    dispatch_once(&qword_543800, &stru_43B7B0);
  if (byte_5437F8 && !Property)
  {
    if (qword_543810 != -1)
      dispatch_once(&qword_543810, &stru_43B7D0);
    if (__TSAccessibilityHandleValidationErrorWithDescription(byte_543808, 1, (uint64_t)CFSTR("Property missing: %@.%s"), v11, v12, v13, v14, v15, (uint64_t)a1))LABEL_19:abort();
  }
}

void __TSAccessibilityValidateClass(NSString *a1)
{
  objc_class *v2;
  const char *Name;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = NSClassFromString(a1);
  Name = class_getName(v2);
  if (qword_543800 != -1)
    dispatch_once(&qword_543800, &stru_43B7B0);
  if (byte_5437F8 && !strcmp(Name, "nil"))
  {
    if (qword_543810 != -1)
      dispatch_once(&qword_543810, &stru_43B7D0);
    if (__TSAccessibilityHandleValidationErrorWithDescription(byte_543808, 1, (uint64_t)CFSTR("Class not present: %@"), v4, v5, v6, v7, v8, (uint64_t)a1))abort();
  }
}

void __TSAccessibilityValidateIvar(NSString *a1, const char *a2)
{
  objc_class *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  Ivar InstanceVariable;
  BOOL v11;

  v4 = NSClassFromString(a1);
  InstanceVariable = class_getInstanceVariable(v4, a2);
  if (qword_543800 != -1)
    dispatch_once(&qword_543800, &stru_43B7B0);
  if (byte_5437F8)
    v11 = InstanceVariable == 0;
  else
    v11 = 0;
  if (v11)
  {
    if (qword_543810 != -1)
      dispatch_once(&qword_543810, &stru_43B7D0);
    if (__TSAccessibilityHandleValidationErrorWithDescription(byte_543808, 1, (uint64_t)CFSTR("%@ : Ivar not present: %s"), v5, v6, v7, v8, v9, (uint64_t)a1))abort();
  }
}

void __TSAccessibilityValidateProtocolProperty(NSString *a1, const char *a2)
{
  Protocol *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  objc_property_t Property;
  BOOL v11;

  v4 = NSProtocolFromString(a1);
  Property = protocol_getProperty(v4, a2, 0, 1);
  if (qword_543800 != -1)
    dispatch_once(&qword_543800, &stru_43B7B0);
  if (byte_5437F8)
    v11 = Property == 0;
  else
    v11 = 0;
  if (v11)
  {
    if (qword_543810 != -1)
      dispatch_once(&qword_543810, &stru_43B7D0);
    if (__TSAccessibilityHandleValidationErrorWithDescription(byte_543808, 1, (uint64_t)CFSTR("%@ Protocol property not present: %s"), v5, v6, v7, v8, v9, (uint64_t)a1))abort();
  }
}

void __TSAccessibilityValidateProtocolMethod(NSString *a1, NSString *a2, BOOL a3, BOOL a4)
{
  Protocol *v8;
  const char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  SEL name;

  v8 = NSProtocolFromString(a1);
  v9 = NSSelectorFromString(a2);
  name = protocol_getMethodDescription(v8, v9, a3, a4).name;
  if (qword_543800 != -1)
    dispatch_once(&qword_543800, &stru_43B7B0);
  if (byte_5437F8 && !name)
  {
    if (qword_543810 != -1)
      dispatch_once(&qword_543810, &stru_43B7D0);
    if (__TSAccessibilityHandleValidationErrorWithDescription(byte_543808, 1, (uint64_t)CFSTR("%@ Protocol %@ %@ method not present: %@"), v10, v11, v12, v13, v14, (uint64_t)a1))abort();
  }
}

uint64_t __TSAccessibilityValidateBlockSignature(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  __objc2_meth_list **p_opt_class_meths;
  __objc2_meth_list **v13;
  uint64_t v14;
  int v15;
  int v16;
  int v17;
  int v18;
  const __CFString *v19;
  int v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  const char *v27;
  const char *v28;
  uint64_t v29;
  void *v30;
  id v31;
  id v32;
  id v33;
  uint64_t v34;
  void *j;
  objc_class *v36;
  id v37;
  id v38;
  void *i;
  void **v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  const char *v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  void **v52;
  uint64_t v53;
  _BYTE v54[128];

  v53 = a2;
  p_opt_class_meths = &OBJC_PROTOCOL___THAccessibilityTSKScrollViewDelegate.opt_class_meths;
  if (qword_543800 != -1)
    dispatch_once(&qword_543800, &stru_43B7B0);
  v13 = &OBJC_PROTOCOL___THAccessibilityTSKScrollViewDelegate.opt_class_meths;
  if (byte_5437F8 && !v53)
  {
    if (qword_543820 != -1)
      dispatch_once(&qword_543820, &stru_43B7F0);
    v14 = __TSAccessibilityHandleValidationErrorWithDescription(byte_543818, 0, (uint64_t)CFSTR("Reference block is NULL."), a4, a5, a6, a7, a8, v46);
    if (!a1)
      return v14;
  }
  else
  {
    v14 = 0;
    if (!a1)
      return v14;
  }
  if (v53)
  {
    v15 = *(_DWORD *)(a1 + 8);
    v16 = *(_DWORD *)(v53 + 8);
    if (qword_543800 != -1)
      dispatch_once(&qword_543800, &stru_43B7B0);
    if (byte_5437F8 && (v15 & 0x40000000) == 0)
    {
      if (qword_543820 != -1)
        dispatch_once(&qword_543820, &stru_43B7F0);
      if ((__TSAccessibilityHandleValidationErrorWithDescription(byte_543818, 0, (uint64_t)CFSTR("block has no signature."), a4, a5, a6, a7, a8, v46) & 1) != 0)return 1;
      if (qword_543800 != -1)
        dispatch_once(&qword_543800, &stru_43B7B0);
    }
    v17 = v16 & 0x40000000;
    if (!byte_5437F8 || v17)
    {
      v14 = 0;
      if ((v15 & 0x40000000) == 0 || !v17)
        return v14;
      v21 = *(_DWORD *)(a1 + 8);
      v22 = *(_DWORD *)(v53 + 8);
      v23 = *(_QWORD *)(a1 + 24);
      v24 = *(_QWORD *)(v53 + 24);
      if (byte_5437F8 && !v23)
      {
        if (qword_543820 != -1)
          dispatch_once(&qword_543820, &stru_43B7F0);
        if ((__TSAccessibilityHandleValidationErrorWithDescription(byte_543818, 0, (uint64_t)CFSTR("block literal has no descriptor."), a4, a5, a6, a7, a8, v46) & 1) != 0)return 1;
        if (qword_543800 != -1)
          dispatch_once(&qword_543800, &stru_43B7B0);
      }
      if (!byte_5437F8 || v24)
      {
        v14 = 0;
        if (v23 && v24)
        {
          v25 = 32;
          if ((v21 & 0x2000000) != 0)
            v26 = 32;
          else
            v26 = 16;
          v27 = *(const char **)(v23 + v26);
          if ((v22 & 0x2000000) == 0)
            v25 = 16;
          v28 = *(const char **)(v24 + v25);
          if ((objc_msgSend(a3, "isEqual:", objc_opt_class(__TSAccessibilityValidateBlockSignatureSentinel)) & 1) != 0)
          {
            v30 = 0;
          }
          else
          {
            v30 = (void *)objc_opt_new(NSMutableArray, v29);
            if (objc_msgSend(a3, "isSubclassOfClass:", objc_opt_class(TSAccessibilitySafeCategory)))objc_msgSend(v30, "addObject:", a3);
            v52 = (void **)&a10;
            for (i = (void *)a9;
                  (objc_msgSend(i, "isEqual:", objc_opt_class(__TSAccessibilityValidateBlockSignatureSentinel)) & 1) == 0;
                  i = *v40)
            {
              if ((objc_msgSend(i, "isSubclassOfClass:", objc_opt_class(TSAccessibilitySafeCategory)) & 1) != 0)objc_msgSend(v30, "addObject:", i);
              v40 = v52++;
            }
          }
          if (objc_msgSend(v30, "count"))
          {
            v47 = v27;
            v31 = objc_msgSend(objc_alloc((Class)NSMutableString), "initWithUTF8String:", v28);
            v48 = 0u;
            v49 = 0u;
            v50 = 0u;
            v51 = 0u;
            v32 = objc_msgSend(v30, "countByEnumeratingWithState:objects:count:", &v48, v54, 16);
            if (v32)
            {
              v33 = v32;
              v34 = *(_QWORD *)v49;
              do
              {
                for (j = 0; j != v33; j = (char *)j + 1)
                {
                  if (*(_QWORD *)v49 != v34)
                    objc_enumerationMutation(v30);
                  v36 = *(objc_class **)(*((_QWORD *)&v48 + 1) + 8 * (_QWORD)j);
                  v37 = objc_msgSend(objc_alloc((Class)NSString), "initWithFormat:", CFSTR("@\"%s\""), class_getName(v36));
                  v38 = objc_msgSend(objc_alloc((Class)NSString), "initWithFormat:", CFSTR("@\"%@\""), -[objc_class tsaxTargetClassName](v36, "tsaxTargetClassName"));
                  objc_msgSend(v31, "replaceOccurrencesOfString:withString:options:range:", v37, v38, 0, 0, objc_msgSend(v31, "length"));

                }
                v33 = objc_msgSend(v30, "countByEnumeratingWithState:objects:count:", &v48, v54, 16);
              }
              while (v33);
            }
            v28 = (const char *)objc_msgSend(v31, "UTF8String");
            p_opt_class_meths = (__objc2_meth_list **)(&OBJC_PROTOCOL___THAccessibilityTSKScrollViewDelegate + 48);
            v13 = (__objc2_meth_list **)(&OBJC_PROTOCOL___THAccessibilityTSKScrollViewDelegate + 48);
            v27 = v47;
          }
          else
          {
            v31 = 0;
          }

          if (p_opt_class_meths[256] != (__objc2_meth_list *)-1)
            dispatch_once(&qword_543800, &stru_43B7B0);
          if (!*((_BYTE *)v13 + 2040) || !strcmp(v27, v28))
          {
            v14 = 0;
          }
          else
          {
            if (qword_543820 != -1)
              dispatch_once(&qword_543820, &stru_43B7F0);
            v14 = __TSAccessibilityHandleValidationErrorWithDescription(byte_543818, 0, (uint64_t)CFSTR("Signature mismatch for block: '%s'; reference signature: '%s'"),
                    v41,
                    v42,
                    v43,
                    v44,
                    v45,
                    (uint64_t)v27);
          }

        }
        return v14;
      }
      if (qword_543820 != -1)
        dispatch_once(&qword_543820, &stru_43B7F0);
      v18 = byte_543818;
      v19 = CFSTR("reference block literal has no descriptor.");
    }
    else
    {
      if (qword_543820 != -1)
        dispatch_once(&qword_543820, &stru_43B7F0);
      v18 = byte_543818;
      v19 = CFSTR("reference block has no signature.");
    }
    return __TSAccessibilityHandleValidationErrorWithDescription(v18, 0, (uint64_t)v19, a4, a5, a6, a7, a8, a9);
  }
  return v14;
}

objc_ivar *__tsax_verbose_encode_with_type_encoding_group_class(objc_class *a1, const char *a2)
{
  objc_ivar *result;

  result = class_getInstanceVariable(a1, a2);
  if (result)
    return (objc_ivar *)ivar_getTypeEncoding(result);
  return result;
}

void __TSAccessibilitySetAssociatedObject(void *a1, const void *a2, void *a3)
{
  objc_setAssociatedObject(a1, a2, a3, (char *)&dword_0 + 1);
}

void __TSAccessibilitySetAssociatedNonRetainedObject(void *a1, const void *a2, void *a3)
{
  objc_setAssociatedObject(a1, a2, a3, 0);
}

void __TSAccessibilitySetAssociatedCopiedObject(void *a1, const void *a2, void *a3)
{
  objc_setAssociatedObject(a1, a2, a3, (char *)&dword_0 + 3);
}

id __TSAccessibilityGetAssociatedBool(void *a1, const void *a2)
{
  return objc_msgSend(objc_getAssociatedObject(a1, a2), "BOOLValue");
}

void __TSAccessibilitySetAssociatedBool(void *a1, const void *a2, int a3)
{
  NSNumber *v5;

  if (a3)
    v5 = +[NSNumber numberWithBool:](NSNumber, "numberWithBool:", 1);
  else
    v5 = 0;
  objc_setAssociatedObject(a1, a2, v5, (char *)&dword_0 + 1);
}

id __TSAccessibilityGetAssociatedInteger(void *a1, const void *a2)
{
  return objc_msgSend(objc_getAssociatedObject(a1, a2), "integerValue");
}

void __TSAccessibilitySetAssociatedInteger(id object, void *key, NSNumber *a3)
{
  if (a3)
    a3 = +[NSNumber numberWithInteger:](NSNumber, "numberWithInteger:");
  objc_setAssociatedObject(object, key, a3, (char *)&dword_0 + 1);
}

id __TSAccessibilityGetAssociatedUnsignedInteger(void *a1, const void *a2)
{
  return objc_msgSend(objc_getAssociatedObject(a1, a2), "unsignedIntegerValue");
}

void __TSAccessibilitySetAssociatedUnsignedInteger(id object, void *key, id a3)
{
  id v5;

  if (a3)
    a3 = objc_msgSend(objc_alloc((Class)NSNumber), "initWithUnsignedInteger:", a3);
  v5 = a3;
  objc_setAssociatedObject(object, key, a3, (char *)&dword_0 + 1);

}

id __TSAccessibilityGetAssociatedRange(void *a1, const void *a2)
{
  id result;

  result = objc_getAssociatedObject(a1, a2);
  if (result)
    return objc_msgSend(result, "rangeValue");
  return result;
}

void __TSAccessibilitySetAssociatedRange(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  NSValue *v6;

  if (a3 | a4)
    v6 = +[NSValue valueWithRange:](NSValue, "valueWithRange:");
  else
    v6 = 0;
  objc_setAssociatedObject(a1, a2, v6, (char *)&dword_0 + 1);
}

id __TSAccessibilityGetAssociatedTimeInterval(void *a1, const void *a2)
{
  return objc_msgSend(objc_getAssociatedObject(a1, a2), "doubleValue");
}

void __TSAccessibilitySetAssociatedTimeInterval(void *a1, const void *a2, double a3)
{
  id v5;
  id v6;

  if (a3 == 0.0)
    v5 = 0;
  else
    v5 = objc_msgSend(objc_alloc((Class)NSNumber), "initWithDouble:", a3);
  v6 = v5;
  objc_setAssociatedObject(a1, a2, v5, (char *)&dword_0 + 1);

}

id __TSAccessibilityGetAssociatedCGFloat(void *a1, const void *a2)
{
  return objc_msgSend(objc_getAssociatedObject(a1, a2), "doubleValue");
}

void __TSAccessibilitySetAssociatedCGFloat(void *a1, const void *a2, double a3)
{
  NSNumber *v5;

  if (a3 == 0.0)
    v5 = 0;
  else
    v5 = +[NSNumber numberWithDouble:](NSNumber, "numberWithDouble:");
  objc_setAssociatedObject(a1, a2, v5, (char *)&dword_0 + 1);
}

CGFloat __TSAccessibilityGetAssociatedCGPoint(void *a1, const void *a2)
{
  id AssociatedObject;
  CGFloat result;

  AssociatedObject = objc_getAssociatedObject(a1, a2);
  if (!AssociatedObject)
    return CGPointZero.x;
  objc_msgSend(AssociatedObject, "CGPointValue");
  return result;
}

void __TSAccessibilitySetAssociatedCGPoint(void *a1, const void *a2, double a3, double a4)
{
  NSValue *v7;

  if (a3 == CGPointZero.x && a4 == CGPointZero.y)
    v7 = 0;
  else
    v7 = +[NSValue valueWithCGPoint:](NSValue, "valueWithCGPoint:");
  objc_setAssociatedObject(a1, a2, v7, (char *)&dword_0 + 1);
}

CGFloat __TSAccessibilityGetAssociatedCGRect(void *a1, const void *a2)
{
  id AssociatedObject;
  CGFloat result;

  AssociatedObject = objc_getAssociatedObject(a1, a2);
  if (!AssociatedObject)
    return CGRectZero.origin.x;
  objc_msgSend(AssociatedObject, "CGRectValue");
  return result;
}

void __TSAccessibilitySetAssociatedCGRect(void *a1, const void *a2, double a3, double a4, double a5, double a6)
{
  NSValue *v12;
  CGRect v13;

  v13.origin.x = CGRectZero.origin.x;
  v13.origin.y = CGRectZero.origin.y;
  v13.size.width = CGRectZero.size.width;
  v13.size.height = CGRectZero.size.height;
  if (CGRectEqualToRect(*(CGRect *)&a3, v13))
    v12 = 0;
  else
    v12 = +[NSValue valueWithCGRect:](NSValue, "valueWithCGRect:", a3, a4, a5, a6);
  objc_setAssociatedObject(a1, a2, v12, (char *)&dword_0 + 1);
}

id sub_2281B4(void *a1, void *a2, void *a3, void *a4)
{
  id v7;
  id v8;
  uint64_t v9;
  void *i;
  uint64_t v11;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  _BYTE v17[128];

  objc_msgSend(a1, "tsaxAddSafeCategoryDependenciesToCollection:");
  v15 = 0u;
  v16 = 0u;
  v13 = 0u;
  v14 = 0u;
  v7 = objc_msgSend(a3, "countByEnumeratingWithState:objects:count:", &v13, v17, 16);
  if (v7)
  {
    v8 = v7;
    v9 = *(_QWORD *)v14;
    do
    {
      for (i = 0; i != v8; i = (char *)i + 1)
      {
        if (*(_QWORD *)v14 != v9)
          objc_enumerationMutation(a3);
        v11 = *(_QWORD *)(*((_QWORD *)&v13 + 1) + 8 * (_QWORD)i);
        if ((objc_msgSend(a4, "containsObject:", v11) & 1) == 0
          && (objc_msgSend(a2, "containsObject:", v11) & 1) == 0)
        {
          objc_msgSend(a2, "addObject:", v11);
        }
      }
      v8 = objc_msgSend(a3, "countByEnumeratingWithState:objects:count:", &v13, v17, 16);
    }
    while (v8);
  }
  return objc_msgSend(a3, "removeAllObjects");
}

void sub_22905C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_229074(uint64_t a1, uint64_t a2)
{
  _Block_object_assign((void *)(a1 + 40), *(const void **)(a2 + 40), 131);
}

void sub_229084(uint64_t a1)
{
  _Block_object_dispose(*(const void **)(a1 + 40), 131);
}

id sub_229090(uint64_t a1, uint64_t a2, uint64_t a3, _BYTE *a4)
{
  id result;

  result = objc_msgSend(*(id *)(a1 + 32), "isEqual:");
  if ((_DWORD)result)
  {
    *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40) = a2;
    *a4 = 1;
  }
  return result;
}

uint64_t sub_229A14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = sub_229A7C(a2, *(_QWORD *)(a1 + 32));
  v7 = v6;
  v8 = sub_229A7C(a3, *(_QWORD *)(a1 + 32));
  v10 = -1;
  if (v5 < v8)
    v11 = -1;
  else
    v11 = 1;
  if (v5 == v8)
    v11 = 0;
  if (v7 >= v9)
    v10 = 1;
  if (v7 == v9)
    return v11;
  else
    return v10;
}

uint64_t sub_229A7C(uint64_t a1, uint64_t a2)
{
  void *v3;
  Class v4;
  unint64_t v5;
  _QWORD v7[6];
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;

  if (a1 == a2)
    return 2;
  LOBYTE(v8) = 0;
  v3 = (void *)objc_opt_class(TSDKnobAccessibilityElement);
  v4 = __TSAccessibilityCastAsSafeCategory(v3, a1, 1, &v8);
  if ((_BYTE)v8)
    abort();
  v8 = 0;
  v9 = &v8;
  v10 = 0x2020000000;
  v11 = 0;
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  v7[2] = sub_229C70;
  v7[3] = &unk_42BF18;
  v7[4] = v4;
  v7[5] = &v8;
  if (__TSAccessibilityPerformSafeBlock((uint64_t)v7))
    abort();
  v5 = v9[3];
  _Block_object_dispose(&v8, 8);
  if (v5 <= 9)
  {
    if (((1 << v5) & 0x92) != 0)
      return 1;
    if (((1 << v5) & 0x124) == 0)
    {
      if (((1 << v5) & 0x248) != 0)
        return 3;
      return 0;
    }
    return 2;
  }
  return 0;
}

void sub_229BC8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_229C70(uint64_t a1)
{
  id result;

  result = objc_msgSend(*(id *)(a1 + 32), "knobTag");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = result;
  return result;
}

void sub_229FA4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_229FBC(uint64_t a1, uint64_t a2)
{
  _Block_object_assign((void *)(a1 + 40), *(const void **)(a2 + 40), 131);
}

void sub_229FCC(uint64_t a1)
{
  _Block_object_dispose(*(const void **)(a1 + 40), 131);
}

id sub_229FD8(uint64_t a1)
{
  id result;

  result = objc_msgSend(*(id *)(a1 + 32), "p_repsForStorage:", *(_QWORD *)(a1 + 40));
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40) = result;
  return result;
}

void sub_22A4F8(uint64_t a1)
{
  unsigned __int8 v2;
  unsigned int v3;
  void *v4;
  NSObject *v5;
  dispatch_time_t v6;
  _QWORD handler[4];
  __int128 v8;

  v2 = objc_msgSend(*(id *)(a1 + 32), "_isCancelled");
  if (objc_msgSend(*(id *)(a1 + 32), "_dispatchTimer"))
  {
    v3 = objc_msgSend(*(id *)(a1 + 32), "automaticallyCancelPendingBlockUponSchedulingNewBlock");
    v4 = *(void **)(a1 + 32);
    if (!v3)
    {
      NSLog(CFSTR("[warning]: %@: Ignoring block scheduled for execution %.2f seconds from now."), v4, *(_QWORD *)(a1 + 48));
      return;
    }
    objc_msgSend(v4, "_reallyCancel");
  }
  if ((v2 & 1) == 0)
  {
    v5 = dispatch_source_create((dispatch_source_type_t)&_dispatch_source_type_timer, 0, 0, (dispatch_queue_t)objc_msgSend(*(id *)(a1 + 32), "_dispatchQueue"));
    v6 = dispatch_time(0, (uint64_t)(*(double *)(a1 + 48) * 1000000000.0));
    dispatch_source_set_timer(v5, v6, 0xFFFFFFFFFFFFFFFFLL, 0);
    handler[0] = _NSConcreteStackBlock;
    handler[1] = 3221225472;
    handler[2] = sub_22A61C;
    handler[3] = &unk_427290;
    v8 = *(_OWORD *)(a1 + 32);
    dispatch_source_set_event_handler(v5, handler);
    dispatch_resume(v5);
    objc_msgSend(*(id *)(a1 + 32), "_setDispatchTimer:", v5);
    dispatch_release(v5);
  }
}

id sub_22A61C(uint64_t a1)
{
  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
  return objc_msgSend(*(id *)(a1 + 32), "_reallyCancel");
}

id sub_22A6F0(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_reallyCancel");
}

void sub_22B2D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_list va;

  va_start(va, a8);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_22B2E8(uint64_t a1, uint64_t a2)
{
  _Block_object_assign((void *)(a1 + 40), *(const void **)(a2 + 40), 131);
}

void sub_22B2F8(uint64_t a1)
{
  _Block_object_dispose(*(const void **)(a1 + 40), 131);
}

id sub_22B304(uint64_t a1)
{
  id result;

  result = objc_msgSend(*(id *)(a1 + 32), "knobForTag:", *(_QWORD *)(a1 + 48));
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40) = result;
  return result;
}

void sub_22B5BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

__n128 sub_22B5D4(uint64_t a1)
{
  _OWORD *v2;
  __n128 result;
  __int128 v4;
  __int128 v5;
  __n128 v6;

  objc_msgSend(*(id *)(a1 + 32), "transformToConvertNaturalFromLayerRelative");
  v2 = *(_OWORD **)(*(_QWORD *)(a1 + 40) + 8);
  result = v6;
  v2[2] = v4;
  v2[3] = v5;
  v2[4] = v6;
  return result;
}

void sub_22B718(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_22B730(uint64_t a1)
{
  id result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  result = objc_msgSend(*(id *)(a1 + 32), "convertNaturalPointFromUnscaledCanvas:", *(double *)(a1 + 48), *(double *)(a1 + 56));
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  *(_QWORD *)(v3 + 32) = v4;
  *(_QWORD *)(v3 + 40) = v5;
  return result;
}

void sub_22B830(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_22B848(uint64_t a1)
{
  id result;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  result = objc_msgSend(*(id *)(a1 + 32), "convertNaturalRectFromUnscaledCanvas:", *(double *)(a1 + 48), *(double *)(a1 + 56), *(double *)(a1 + 64), *(double *)(a1 + 72));
  v3 = *(_QWORD **)(*(_QWORD *)(a1 + 40) + 8);
  v3[4] = v4;
  v3[5] = v5;
  v3[6] = v6;
  v3[7] = v7;
  return result;
}

void sub_22B934(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_22B94C(uint64_t a1)
{
  id result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  result = objc_msgSend(*(id *)(a1 + 32), "convertNaturalPointToUnscaledCanvas:", *(double *)(a1 + 48), *(double *)(a1 + 56));
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  *(_QWORD *)(v3 + 32) = v4;
  *(_QWORD *)(v3 + 40) = v5;
  return result;
}

void sub_22BA4C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_22BA64(uint64_t a1)
{
  id result;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  result = objc_msgSend(*(id *)(a1 + 32), "convertNaturalRectToUnscaledCanvas:", *(double *)(a1 + 48), *(double *)(a1 + 56), *(double *)(a1 + 64), *(double *)(a1 + 72));
  v3 = *(_QWORD **)(*(_QWORD *)(a1 + 40) + 8);
  v3[4] = v4;
  v3[5] = v5;
  v3[6] = v6;
  v3[7] = v7;
  return result;
}

void sub_22C390(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_22C3A8(uint64_t a1, uint64_t a2)
{
  _Block_object_assign((void *)(a1 + 40), *(const void **)(a2 + 40), 131);
}

void sub_22C3B8(uint64_t a1)
{
  _Block_object_dispose(*(const void **)(a1 + 40), 131);
}

id sub_22C3C4(uint64_t a1)
{
  id result;

  result = objc_msgSend(objc_alloc((Class)objc_msgSend(*(id *)(a1 + 32), "tsaxTargetClass")), "initWithRange:", *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56));
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40) = result;
  return result;
}

void sub_22C6B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_22C6CC(uint64_t a1)
{
  id result;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  result = objc_msgSend(*(id *)(a1 + 32), "firstRectForRange:", *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56));
  v3 = *(_QWORD **)(*(_QWORD *)(a1 + 40) + 8);
  v3[4] = v4;
  v3[5] = v5;
  v3[6] = v6;
  v3[7] = v7;
  return result;
}

id sub_22CA0C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  objc_super v4;

  v1 = *(unsigned int *)(a1 + 40);
  v2 = *(unsigned int *)(a1 + 44);
  v4.receiver = *(id *)(a1 + 32);
  v4.super_class = (Class)TSTFormulaTextEditingControllerAccessibility;
  return objc_msgSendSuper2(&v4, "arrowKeyReceivedInDirection:withModifierKeys:", v1, v2);
}

id sub_22CB88(uint64_t a1)
{
  void *v1;
  _QWORD v3[5];
  char v4;

  v1 = *(void **)(a1 + 32);
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_22CBE8;
  v3[3] = &unk_427268;
  v4 = *(_BYTE *)(a1 + 40);
  v3[4] = v1;
  return objc_msgSend(v1, "tsaxPerformBlockAffectingKeyboardReferenceToken:", v3);
}

id sub_22CBE8(uint64_t a1)
{
  uint64_t v1;
  objc_super v3;

  v1 = *(unsigned __int8 *)(a1 + 40);
  v3.receiver = *(id *)(a1 + 32);
  v3.super_class = (Class)TSTFormulaTextEditingControllerAccessibility;
  return objc_msgSendSuper2(&v3, "endInsertingKeyboardReferenceLeavingActive:", v1);
}

id sub_22CC74(uint64_t a1)
{
  uint64_t v1;
  objc_super v3;

  v1 = *(_QWORD *)(a1 + 32);
  v3.receiver = *(id *)(a1 + 40);
  v3.super_class = (Class)TSTFormulaTextEditingControllerAccessibility;
  return objc_msgSendSuper2(&v3, "insertTabIgnoringFieldEditor:", v1);
}

id sub_22CCFC(uint64_t a1)
{
  uint64_t v1;
  objc_super v3;

  v1 = *(_QWORD *)(a1 + 32);
  v3.receiver = *(id *)(a1 + 40);
  v3.super_class = (Class)TSTFormulaTextEditingControllerAccessibility;
  return objc_msgSendSuper2(&v3, "p_insertTab:", v1);
}

id sub_22CD88(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  objc_super v4;

  v1 = *(unsigned int *)(a1 + 40);
  v2 = *(unsigned int *)(a1 + 44);
  v4.receiver = *(id *)(a1 + 32);
  v4.super_class = (Class)TSTFormulaTextEditingControllerAccessibility;
  return objc_msgSendSuper2(&v4, "p_modifyKeyboardReferenceInDirection:withModifierKeys:", v1, v2);
}

id sub_22CE14(uint64_t a1)
{
  objc_super v2;

  v2.receiver = *(id *)(a1 + 32);
  v2.super_class = (Class)TSTFormulaTextEditingControllerAccessibility;
  return objc_msgSendSuper2(&v2, "p_startInsertingKeyboardReference");
}

id sub_22CFA4(uint64_t a1)
{
  uint64_t v1;
  objc_super v3;

  v1 = *(_QWORD *)(a1 + 32);
  v3.receiver = *(id *)(a1 + 40);
  v3.super_class = (Class)TSTFormulaTextEditingControllerAccessibility;
  return objc_msgSendSuper2(&v3, "setAutocompletionText:prefixRange:", v1, *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56));
}

id sub_22CFE0(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 32), "tsaxDidUpdateAutocompletionTextForToken:", objc_msgSend(*(id *)(a1 + 32), "tsaxCompletionToken"));
  return objc_msgSend(*(id *)(a1 + 32), "_tsaxSetDidUpdateAutocompletionText:", 0);
}

int64_t sub_22D750(id a1, id a2, id a3)
{
  double v4;
  double v5;
  double v6;
  int64_t v7;

  objc_msgSend(a2, "tsaxFrameInScreenSpace");
  v5 = v4;
  objc_msgSend(a3, "tsaxFrameInScreenSpace");
  v7 = -1;
  if (v5 >= v6)
    v7 = 1;
  if (v5 == v6)
    return 0;
  else
    return v7;
}

void sub_22D86C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_22D888(uint64_t a1, uint64_t a2)
{
  _Block_object_assign((void *)(a1 + 40), *(const void **)(a2 + 40), 131);
}

void sub_22D898(uint64_t a1)
{
  _Block_object_dispose(*(const void **)(a1 + 40), 131);
}

id sub_22D8A4(uint64_t a1, void *a2, uint64_t a3, _BYTE *a4)
{
  id result;
  void *v8;

  result = objc_msgSend(a2, "conformsToProtocol:", *(_QWORD *)(a1 + 32));
  if ((_DWORD)result)
  {
    result = objc_msgSend(*(id *)(a1 + 40), "_tsaxFirstSelectedRepInCanvasEditor:preferExplicitlyFocusedReps:", a2, 1);
    *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40) = result;
    *a4 = 1;
  }
  if (!*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40))
  {
    v8 = (void *)objc_opt_class(TSWPEditingControllerAccessibility);
    result = -[objc_class tsaxEditingRepWithCaret](__TSAccessibilityCastAsSafeCategory(v8, (uint64_t)a2, 0, 0), "tsaxEditingRepWithCaret");
    *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40) = result;
    if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40))
      *a4 = 1;
  }
  return result;
}

void sub_22DA54(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_22DA6C(uint64_t a1)
{
  id result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  result = objc_msgSend(*(id *)(a1 + 32), "convertBoundsToUnscaledPoint:", *(double *)(a1 + 48), *(double *)(a1 + 56));
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  *(_QWORD *)(v3 + 32) = v4;
  *(_QWORD *)(v3 + 40) = v5;
  return result;
}

void sub_22DB6C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_22DB84(uint64_t a1)
{
  id result;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  result = objc_msgSend(*(id *)(a1 + 32), "convertBoundsToUnscaledRect:", *(double *)(a1 + 48), *(double *)(a1 + 56), *(double *)(a1 + 64), *(double *)(a1 + 72));
  v3 = *(_QWORD **)(*(_QWORD *)(a1 + 40) + 8);
  v3[4] = v4;
  v3[5] = v5;
  v3[6] = v6;
  v3[7] = v7;
  return result;
}

void sub_22DC70(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_22DC88(uint64_t a1)
{
  id result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  result = objc_msgSend(*(id *)(a1 + 32), "convertUnscaledToBoundsPoint:", *(double *)(a1 + 48), *(double *)(a1 + 56));
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  *(_QWORD *)(v3 + 32) = v4;
  *(_QWORD *)(v3 + 40) = v5;
  return result;
}

void sub_22DD88(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_22DDA0(uint64_t a1)
{
  id result;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  result = objc_msgSend(*(id *)(a1 + 32), "convertUnscaledToBoundsRect:", *(double *)(a1 + 48), *(double *)(a1 + 56), *(double *)(a1 + 64), *(double *)(a1 + 72));
  v3 = *(_QWORD **)(*(_QWORD *)(a1 + 40) + 8);
  v3[4] = v4;
  v3[5] = v5;
  v3[6] = v6;
  v3[7] = v7;
  return result;
}

void sub_22DEC8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_22DEE0(uint64_t a1)
{
  id result;

  result = objc_msgSend(*(id *)(a1 + 32), "repForInfo:", *(_QWORD *)(a1 + 40));
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40) = result;
  return result;
}

void sub_22E000(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_22E018(uint64_t a1)
{
  id result;

  result = objc_msgSend(*(id *)(a1 + 32), "repsForInfo:", *(_QWORD *)(a1 + 40));
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40) = result;
  return result;
}

void sub_22E120(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_22E138(uint64_t a1)
{
  id result;

  result = objc_msgSend(*(id *)(a1 + 32), "repForLayout:", *(_QWORD *)(a1 + 40));
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40) = result;
  return result;
}

id sub_22E330(uint64_t a1)
{
  return objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "tsaxCanvasEditor"), "setSelectionToRep:", *(_QWORD *)(a1 + 40));
}

id sub_22E4FC(uint64_t a1)
{
  return objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "tsaxCanvasEditor"), "setSelectionToInfos:", *(_QWORD *)(a1 + 40));
}

id sub_22E6C0(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "scrollToPrimarySelection");
}

void sub_22E768(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_22E780(uint64_t a1)
{
  id result;
  uint64_t v3;

  result = objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "tsaxTargetClass"), "smallRepOutsetForHitTesting");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = v3;
  return result;
}

void sub_22E9F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_22EA08(uint64_t a1)
{
  id result;
  uint64_t v3;

  result = objc_msgSend(*(id *)(a1 + 32), "convertPointsToRulerUnits:", *(double *)(a1 + 48));
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = v3;
  return result;
}

void sub_22ECE8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_22ED00(uint64_t a1, uint64_t a2)
{
  _Block_object_assign((void *)(a1 + 40), *(const void **)(a2 + 40), 131);
}

void sub_22ED10(uint64_t a1)
{
  _Block_object_dispose(*(const void **)(a1 + 40), 131);
}

id sub_22ED1C(uint64_t a1)
{
  id result;

  result = objc_msgSend(objc_alloc((Class)objc_msgSend(*(id *)(a1 + 32), "tsaxTargetClass")), "initWithRep:knob:", *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48));
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 40) = result;
  return result;
}

void sub_22F2EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_22F304(uint64_t a1)
{
  id result;
  uint64_t v3;

  result = objc_msgSend(*(id *)(a1 + 32), "convertPointsToRulerUnits:", *(double *)(a1 + 48));
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = v3;
  return result;
}

void sub_22F6F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_list va;

  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_22F70C(uint64_t a1, uint64_t a2)
{
  _Block_object_assign((void *)(a1 + 40), *(const void **)(a2 + 40), 131);
}

void sub_22F71C(uint64_t a1)
{
  _Block_object_dispose(*(const void **)(a1 + 40), 131);
}

id sub_22F728(uint64_t a1)
{
  id result;

  result = objc_msgSend(*(id *)(a1 + 32), "p_orderedChartTypeArrayForPage:", *(_QWORD *)(a1 + 48));
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40) = result;
  return result;
}

id sub_22F75C(uint64_t a1, uint64_t a2)
{
  objc_class *v4;
  void *v5;
  void *v6;
  id v7;
  void *v8;
  Class v9;
  NSString *v10;
  char v12;
  char v13;

  v13 = 0;
  v4 = (objc_class *)objc_opt_class(UIButton);
  v5 = (void *)__TSAccessibilityCastAsClass(v4, a2, 1, &v13);
  if (v13)
    goto LABEL_7;
  v6 = v5;
  v7 = objc_msgSend(v5, "tag");
  if (v7 >= objc_msgSend(*(id *)(a1 + 32), "count"))
  {
LABEL_5:
    v10 = TSAccessibilityLocalizedString((uint64_t)CFSTR("chart"));
    return objc_msgSend(*(id *)(a1 + 40), "_tsaxApplyLabel:toButton:", v10, v6);
  }
  v12 = 0;
  v8 = (void *)objc_opt_class(TSCHChartTypeAccessibility);
  v9 = __TSAccessibilityCastAsSafeCategory(v8, (uint64_t)objc_msgSend(*(id *)(a1 + 32), "objectAtIndex:", v7), 1, &v12);
  if (v12)
LABEL_7:
    abort();
  v10 = (NSString *)-[objc_class tsaxFullDescription](v9, "tsaxFullDescription");
  if (!v10)
    goto LABEL_5;
  return objc_msgSend(*(id *)(a1 + 40), "_tsaxApplyLabel:toButton:", v10, v6);
}

id sub_22F98C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  objc_class *v6;
  uint64_t v7;
  char v9;

  v9 = 0;
  v6 = (objc_class *)objc_opt_class(UIButton);
  v7 = __TSAccessibilityCastAsClass(v6, a2, 1, &v9);
  if (v9)
    abort();
  return objc_msgSend(*(id *)(a1 + 40), "_tsaxApplyLabel:toButton:", objc_msgSend(*(id *)(a1 + 32), "objectAtIndexedSubscript:", a3), v7);
}

void sub_22FBCC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_list va;

  va_start(va, a8);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_22FBE4(uint64_t a1, uint64_t a2)
{
  _Block_object_assign((void *)(a1 + 40), *(const void **)(a2 + 40), 131);
}

void sub_22FBF4(uint64_t a1)
{
  _Block_object_dispose(*(const void **)(a1 + 40), 131);
}

id sub_22FC00(uint64_t a1)
{
  id result;

  result = objc_msgSend((id)objc_opt_class(*(_QWORD *)(a1 + 32)), "properties");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40) = result;
  return result;
}

void sub_22FD48(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_22FD60(uint64_t a1)
{
  id result;

  result = objc_msgSend(*(id *)(a1 + 32), "objectForProperty:", *(unsigned int *)(a1 + 48));
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40) = result;
  return result;
}

void sub_22FE2C(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 48), 8);
  _Unwind_Resume(a1);
}

id sub_22FE44(uint64_t a1)
{
  id result;

  result = objc_msgSend(*(id *)(a1 + 32), "intValueForProperty:", *(unsigned int *)(a1 + 48));
  *(_DWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = (_DWORD)result;
  return result;
}

void sub_22FF18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_22FF30(uint64_t a1)
{
  id result;
  int v3;

  result = objc_msgSend(*(id *)(a1 + 32), "floatValueForProperty:", *(unsigned int *)(a1 + 48));
  *(_DWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = v3;
  return result;
}

void sub_230594(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_2305AC(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "willBeginEditingContainedRep");
}

void sub_2305B4(uint64_t a1, uint64_t a2)
{
  _Block_object_assign((void *)(a1 + 40), *(const void **)(a2 + 40), 131);
}

void sub_2305C4(uint64_t a1)
{
  _Block_object_dispose(*(const void **)(a1 + 40), 131);
}

id sub_2305D0(uint64_t a1)
{
  id result;

  result = objc_msgSend(*(id *)(a1 + 32), "beginEditingRep:", *(_QWORD *)(a1 + 40));
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40) = result;
  return result;
}

uint64_t sub_230708(uint64_t result, void *a2, unint64_t a3)
{
  unint64_t v3;
  unint64_t v4;
  BOOL v5;
  uint64_t v7;

  v3 = *(_QWORD *)(result + 56);
  v5 = a3 >= v3;
  v4 = a3 - v3;
  v5 = !v5 || v4 >= *(_QWORD *)(result + 64);
  if (!v5)
  {
    v7 = result;
    result = objc_opt_isKindOfClass(a2, *(_QWORD *)(result + 32));
    if ((result & 1) != 0)
    {
      result = (uint64_t)objc_msgSend(objc_msgSend(*(id *)(v7 + 40), "tsaxRepForInfo:", objc_msgSend(a2, "tsaxValueForKey:", CFSTR("drawable"))), "tsaxShouldExposeAsAttachmentToken");
      if ((_DWORD)result)
        return (*(uint64_t (**)(void))(*(_QWORD *)(v7 + 48) + 16))();
    }
  }
  return result;
}

id sub_23096C(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "tsaxSetParentInteractiveCanvasController:", *(_QWORD *)(a1 + 32));
}

id sub_230978(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "tsaxSetParentInteractiveCanvasController:", *(_QWORD *)(a1 + 32));
}

id sub_230984(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "tsaxSetParentInteractiveCanvasController:", *(_QWORD *)(a1 + 32));
}

id sub_230E38(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "p_playForKnob");
}

id sub_230E98(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "p_togglePlaying");
}

void sub_232600(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 48), 8);
  _Unwind_Resume(a1);
}

id sub_232618(uint64_t a1)
{
  id result;

  result = objc_msgSend(*(id *)(a1 + 32), "elementAtIndex:", *(_QWORD *)(a1 + 48));
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = result;
  return result;
}

void sub_2326E4(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 48), 8);
  _Unwind_Resume(a1);
}

id sub_2326FC(uint64_t a1)
{
  id result;

  result = objc_msgSend(*(id *)(a1 + 32), "elementAtIndex:associatedPoints:", *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56));
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = result;
  return result;
}

void sub_232F30(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_232F48(uint64_t result, uint64_t a2, int a3)
{
  *(_DWORD *)(*(_QWORD *)(*(_QWORD *)(result + 32) + 8) + 24) = a3;
  return result;
}

id sub_233034(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "p_toggleCheckbox:", *(_QWORD *)(a1 + 40));
}

void sub_233940(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 104), 8);
  _Unwind_Resume(a1);
}

void sub_233974(uint64_t a1, uint64_t a2)
{
  _Block_object_assign((void *)(a1 + 40), *(const void **)(a2 + 40), 131);
}

void sub_233984(uint64_t a1)
{
  _Block_object_dispose(*(const void **)(a1 + 40), 131);
}

id sub_233990(uint64_t a1)
{
  id result;

  result = objc_msgSend(*(id *)(a1 + 32), "columnNameForCellID:cellRangeContainingName:restrictToBodyRange:", *(unsigned int *)(a1 + 56), *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 32, 1);
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40) = result;
  return result;
}

id sub_2339D4(uint64_t a1)
{
  id result;

  result = objc_msgSend(*(id *)(a1 + 32), "rowNameForCellID:cellRangeContainingName:restrictToBodyRange:", *(unsigned int *)(a1 + 56), *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 32, 1);
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40) = result;
  return result;
}

void sub_2341E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_2341FC(uint64_t a1, unsigned int a2)
{
  id result;
  uint64_t v4;
  id v5;
  void *v6;

  result = objc_msgSend(*(id *)(a1 + 32), "tsaxChildCellForCellID:", a2);
  if (result)
  {
    v5 = result;
    v6 = *(void **)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40);
    if (!v6)
    {
      *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40) = objc_opt_new(NSMutableArray, v4);
      v6 = *(void **)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40);
    }
    return objc_msgSend(v6, "addObject:", v5);
  }
  return result;
}

void sub_234304(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_23431C(uint64_t result, int a2, uint64_t a3, _BYTE *a4)
{
  if (((*(_DWORD *)(result + 40) ^ a2) & 0xFFFFFF) == 0)
  {
    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(result + 32) + 8) + 24) = 1;
    *a4 = 1;
  }
  return result;
}

void sub_234718(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_list va;

  va_start(va, a8);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_234730(uint64_t a1)
{
  id result;

  result = objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "tsaxValueForKey:", CFSTR("tableInfo")), "editingCellID");
  *(_DWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 32) = (_DWORD)result;
  return result;
}

void sub_234800(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_234818(uint64_t a1)
{
  id result;

  result = objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "tsaxTableModel"), "numberOfHeaderColumns");
  *(_WORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = (_WORD)result;
  return result;
}

void sub_2348E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_2348F8(uint64_t a1)
{
  id result;

  result = objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "tsaxTableModel"), "numberOfHeaderRows");
  *(_WORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = (_WORD)result;
  return result;
}

void sub_234A00(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_234A18(uint64_t a1)
{
  id result;

  result = -[objc_class controlCellEditorForICC:](NSClassFromString(CFSTR("TSTTableControlCellEditor")), "controlCellEditorForICC:", *(_QWORD *)(a1 + 32));
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40) = result;
  return result;
}

void sub_234BD4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_list va;

  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_234BEC(uint64_t a1)
{
  id result;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  result = objc_msgSend(*(id *)(a1 + 32), "deviceBoundsForCellRange:", *(_QWORD *)(a1 + 48));
  v3 = *(_QWORD **)(*(_QWORD *)(a1 + 40) + 8);
  v3[4] = v4;
  v3[5] = v5;
  v3[6] = v6;
  v3[7] = v7;
  return result;
}

uint64_t sub_234D18(uint64_t a1)
{
  uint64_t v2;
  double MidX;
  double MidY;

  v2 = *(_QWORD *)(a1 + 32);
  MidX = CGRectGetMidX(*(CGRect *)(a1 + 40));
  MidY = CGRectGetMidY(*(CGRect *)(a1 + 40));
  return (*(uint64_t (**)(uint64_t, double, double))(v2 + 16))(v2, MidX, MidY);
}

id sub_234E74(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "handleSingleTapAtPoint:", *(double *)(a1 + 40), *(double *)(a1 + 48));
}

uint64_t sub_234EFC(uint64_t a1)
{
  uint64_t result;
  _QWORD v2[4];
  __int128 v3;
  int v4;

  v2[0] = _NSConcreteStackBlock;
  v2[1] = 3221225472;
  v2[2] = sub_234F60;
  v2[3] = &unk_43BBF8;
  v4 = *(_DWORD *)(a1 + 48);
  v3 = *(_OWORD *)(a1 + 32);
  result = __TSAccessibilityPerformSafeBlock((uint64_t)v2);
  if ((_DWORD)result)
    abort();
  return result;
}

void sub_234F60(uint64_t a1)
{
  id v2;
  id v3;

  v2 = objc_msgSend(objc_alloc(NSClassFromString(CFSTR("TSTTableSelection"))), "initWithTableModel:andCellID:", objc_msgSend(*(id *)(a1 + 32), "tsaxTableModel"), *(unsigned int *)(a1 + 48));
  if (v2)
  {
    v3 = v2;
    if (objc_msgSend(*(id *)(a1 + 40), "tsaxHasMultipleTableInfos"))
      objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "tsaxInteractiveCanvasController"), "tsaxSelectRep:", *(_QWORD *)(a1 + 32));
    if (objc_msgSend(*(id *)(a1 + 32), "tsaxRespondsToSelector:fromExtrasProtocol:", "tsaxWillSelectCellForID:", &OBJC_PROTOCOL___TSTTableRepAccessibilityExtras))objc_msgSend(*(id *)(a1 + 32), "tsaxWillSelectCellForID:", *(unsigned int *)(a1 + 48));
    objc_msgSend(*(id *)(a1 + 32), "p_setSelection:mode:atPoint:", v3, 3, INFINITY, INFINITY);

  }
}

id sub_235100(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "handleDoubleTapAtPoint:");
}

void sub_235108(uint64_t a1)
{
  id v2;
  id v3;
  id v4;
  id v5;

  objc_msgSend(*(id *)(a1 + 32), "beginTextEditingAtCellID:", *(unsigned int *)(a1 + 52));
  v2 = objc_msgSend(*(id *)(a1 + 32), "tsaxContainedTextEditor");
  if (*(_DWORD *)(a1 + 48) == 1)
    v3 = objc_msgSend(objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "tsaxContainedTextEditingRep"), "tsaxStorage"), "tsaxUnsignedIntegerValueForKey:", CFSTR("length"));
  else
    v3 = 0;
  v4 = objc_msgSend(objc_alloc(NSClassFromString(CFSTR("TSWPSelection"))), "initWithRange:", 0, v3);
  objc_msgSend(v2, "setSelection:", v4);

  v5 = objc_msgSend(objc_alloc(NSClassFromString(CFSTR("TSTTableSelection"))), "initWithTableModel:andCellID:", *(_QWORD *)(a1 + 40), *(unsigned int *)(a1 + 52));
  objc_msgSend(*(id *)(a1 + 32), "p_setSelection:mode:atPoint:", v5, 6, INFINITY, INFINITY);

}

id sub_23526C(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "endEditing");
}

id sub_2352EC(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_tsaxCleanupChildren");
}

void sub_235774(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_235790(uint64_t a1, uint64_t a2)
{
  _Block_object_assign((void *)(a1 + 40), *(const void **)(a2 + 40), 131);
}

void sub_2357A0(uint64_t a1)
{
  _Block_object_dispose(*(const void **)(a1 + 40), 131);
}

const __CFString *sub_2357AC(const __CFString *result, void *a2, int a3)
{
  const __CFString *v4;
  uint64_t *p_info;
  uint64_t info;
  const __CFString *v7;
  double v8;
  uint64_t v9;
  NSString *v10;

  v4 = result;
  switch(a3)
  {
    case 0:
      result = (const __CFString *)objc_msgSend(result[1].isa, "tsaxStringForCellID:", LODWORD(result[1].data));
      info = v4[1].info;
      p_info = &v4[1].info;
      *(_QWORD *)(*(_QWORD *)(info + 8) + 40) = result;
      if (!*(_QWORD *)(*(_QWORD *)(*p_info + 8) + 40))
      {
        result = (const __CFString *)objc_msgSend(a2, "tsaxHasFormula");
        if ((_DWORD)result)
        {
          result = (const __CFString *)objc_msgSend(a2, "tsaxHasFormulaError");
          if ((_DWORD)result)
          {
            result = (const __CFString *)TSAccessibilityLocalizedString((uint64_t)CFSTR("cell.value.formula.error"));
            goto LABEL_16;
          }
        }
      }
      return result;
    case 1:
      if (objc_msgSend(a2, "tsaxBoolValue"))
        v7 = CFSTR("checked");
      else
        v7 = CFSTR("unchecked");
      goto LABEL_12;
    case 2:
      objc_msgSend(a2, "tsaxDoubleValue");
      v9 = (unint64_t)v8;
      if ((unint64_t)v8 == 1)
      {
        v7 = CFSTR("stars.rating.singular");
LABEL_12:
        result = (const __CFString *)TSAccessibilityLocalizedString((uint64_t)v7);
      }
      else
      {
        v10 = TSAccessibilityLocalizedString((uint64_t)CFSTR("stars.rating.plural %@"));
        result = +[NSString stringWithFormat:](NSString, "stringWithFormat:", v10, TSAccessibilityLocalizedUnsignedInteger(v9));
      }
      goto LABEL_15;
    case 3:
    case 4:
      p_info = &result[1].info;
      result = &stru_43D7D8;
      goto LABEL_16;
    case 5:
      result = (const __CFString *)objc_msgSend(a2, "tsaxSelectedMultipleChoiceValueDescription");
LABEL_15:
      p_info = &v4[1].info;
LABEL_16:
      *(_QWORD *)(*(_QWORD *)(*p_info + 8) + 40) = result;
      break;
    default:
      return result;
  }
  return result;
}

void sub_235D4C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_235D64(uint64_t a1)
{
  id result;

  result = objc_msgSend(*(id *)(a1 + 32), "_tsaxShouldPreventMakingVisible");
  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = (_BYTE)result;
  return result;
}

id sub_235FE0(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "exitFind");
}

id sub_2363B4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  objc_super v4;

  v1 = *(_QWORD *)(a1 + 40);
  v2 = *(unsigned __int8 *)(a1 + 48);
  v4.receiver = *(id *)(a1 + 32);
  v4.super_class = (Class)TSAFindReplaceUIControllerAccessibility;
  return objc_msgSendSuper2(&v4, "p_findNextResultInDirection:alertingIfNotFound:", v1, v2);
}

id sub_2370C8(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "setDirection:", *(_QWORD *)(a1 + 40));
}

id sub_2373C4(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 32), "beginDraggingMarker");
  objc_msgSend(*(id *)(a1 + 32), "updateDraggingMarkerWithOffset:rulerPoint:", *(double *)(a1 + 40), *(double *)(a1 + 48), *(double *)(a1 + 56), *(double *)(a1 + 64));
  return objc_msgSend(*(id *)(a1 + 32), "endDraggingMarkerWithOffset:rulerPoint:", *(double *)(a1 + 40), *(double *)(a1 + 48), *(double *)(a1 + 56), *(double *)(a1 + 64));
}

void sub_237524(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 64), 8);
  _Unwind_Resume(a1);
}

id sub_23754C(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "p_getColumnLeftPosition:columnRightPosition:", *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24, *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24);
}

void sub_23761C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_237634(uint64_t a1)
{
  id result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  result = objc_msgSend(*(id *)(a1 + 32), "minMaxModelValuesForRulerMarker:", *(_QWORD *)(a1 + 40));
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
  *(_QWORD *)(v3 + 32) = v4;
  *(_QWORD *)(v3 + 40) = v5;
  return result;
}

id sub_237AF4(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "setValue:forKey:", *(_QWORD *)(a1 + 40), CFSTR("draggingRulerMarker"));
}

id sub_237D90(uint64_t a1)
{
  uint64_t v1;
  objc_super v3;

  v1 = *(_QWORD *)(a1 + 32);
  v3.receiver = *(id *)(a1 + 40);
  v3.super_class = (Class)TSDTextInputResponderAccessibility;
  return objc_msgSendSuper2(&v3, "forwardInvocation:", v1);
}

id sub_238070(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "enumeratePropertiesUsingBlock:", *(_QWORD *)(a1 + 40));
}

void sub_238574(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_23858C(uint64_t a1, uint64_t a2)
{
  _Block_object_assign((void *)(a1 + 40), *(const void **)(a2 + 40), 131);
}

void sub_23859C(uint64_t a1)
{
  _Block_object_dispose(*(const void **)(a1 + 40), 131);
}

id sub_2385A8(_QWORD *a1)
{
  id result;

  result = objc_msgSend(objc_alloc(NSClassFromString(CFSTR("TSWPSelection"))), "initWithRange:", a1[5], a1[6]);
  *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 40) = result;
  return result;
}

id sub_2389D4(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "insertText:", *(_QWORD *)(a1 + 40));
}

id sub_238AD4(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "replaceRange:withText:", *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 40));
}

void sub_238B8C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_238BA4(uint64_t a1)
{
  id result;
  uint64_t v3;
  uint64_t v4;

  result = objc_msgSend(*(id *)(a1 + 32), "tsax_rangeOfLineFragmentAtCharIndex:", *(_QWORD *)(a1 + 48));
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  *(_QWORD *)(v3 + 32) = result;
  *(_QWORD *)(v3 + 40) = v4;
  return result;
}

void sub_2391E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, ...)
{
  uint64_t v17;
  va_list va;

  va_start(va, a17);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v17 - 96), 8);
  _Unwind_Resume(a1);
}

void sub_23920C(uint64_t a1, uint64_t a2)
{
  _Block_object_assign((void *)(a1 + 40), *(const void **)(a2 + 40), 131);
}

void sub_23921C(uint64_t a1)
{
  _Block_object_dispose(*(const void **)(a1 + 40), 131);
}

id sub_239228(uint64_t a1)
{
  id result;

  result = objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "tsaxStorage"), "smartFieldAtCharIndex:attributeKind:effectiveRange:", *(_QWORD *)(a1 + 56), 6, *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 32);
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40) = result;
  return result;
}

id sub_23926C(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "tsaxSetSelectedTextRange:", *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48));
}

void sub_239408(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  uint64_t v10;
  va_list va;

  va_start(va, a10);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v10 - 88), 8);
  _Unwind_Resume(a1);
}

id sub_239434(uint64_t a1)
{
  id result;

  result = objc_msgSend(*(id *)(a1 + 32), "tsax_listItemLabelForCharIndex:textIsLiteral:", *(_QWORD *)(a1 + 56), *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24);
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40) = result;
  return result;
}

id sub_239620(uint64_t a1)
{
  uint64_t v1;
  objc_super v3;

  v1 = *(_QWORD *)(a1 + 32);
  v3.receiver = *(id *)(a1 + 40);
  v3.super_class = (Class)TSWPEditingControllerAccessibility;
  return objc_msgSendSuper2(&v3, "cut:", v1);
}

id sub_2396B8(uint64_t a1)
{
  uint64_t v1;
  objc_super v3;

  v1 = *(_QWORD *)(a1 + 32);
  v3.receiver = *(id *)(a1 + 40);
  v3.super_class = (Class)TSWPEditingControllerAccessibility;
  return objc_msgSendSuper2(&v3, "copy:", v1);
}

id sub_239750(uint64_t a1)
{
  uint64_t v1;
  objc_super v3;

  v1 = *(_QWORD *)(a1 + 32);
  v3.receiver = *(id *)(a1 + 40);
  v3.super_class = (Class)TSWPEditingControllerAccessibility;
  return objc_msgSendSuper2(&v3, "paste:", v1);
}

id sub_239B8C(uint64_t a1)
{
  id result;

  result = objc_msgSend(*(id *)(a1 + 32), "tsaxListItemLabelForLineAtCurrentSelection");
  if (result)
    return TSAccessibilityPostAnnouncementNotification(*(_QWORD *)(a1 + 32), (uint64_t)result);
  return result;
}

void sub_239CA0(uint64_t a1)
{
  id v2;
  id v3;
  uint64_t v4;
  id v5;

  v2 = objc_alloc(NSClassFromString(CFSTR("TSWPSelection")));
  v3 = objc_msgSend(*(id *)(a1 + 32), "tsaxRange");
  v5 = objc_msgSend(v2, "initWithType:range:styleInsertionBehavior:caretAffinity:", 0, v3, v4, objc_msgSend(*(id *)(a1 + 32), "tsaxUnsignedIntValueForKey:", CFSTR("styleInsertionBehavior")), objc_msgSend(*(id *)(a1 + 32), "tsaxUnsignedIntValueForKey:", CFSTR("caretAffinity")));
  objc_msgSend(*(id *)(a1 + 40), "setValue:forKey:", v5, CFSTR("selection"));

}

void sub_23A18C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v10;
  va_list va;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  va_list va1;

  va_start(va1, a9);
  va_start(va, a9);
  v10 = va_arg(va1, _QWORD);
  v12 = va_arg(va1, _QWORD);
  v13 = va_arg(va1, _QWORD);
  v14 = va_arg(va1, _QWORD);
  v15 = va_arg(va1, _QWORD);
  v16 = va_arg(va1, _QWORD);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

void sub_23A1BC(uint64_t a1, uint64_t a2)
{
  _Block_object_assign((void *)(a1 + 40), *(const void **)(a2 + 40), 131);
}

void sub_23A1CC(uint64_t a1)
{
  _Block_object_dispose(*(const void **)(a1 + 40), 131);
}

id sub_23A1D8(uint64_t a1, unint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  NSString *v8;
  id v9;
  uint64_t v10;
  id v11;
  NSString *v12;
  id v13;
  void *v14;
  id v15;
  NSString *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  NSString *v24;
  id v25;
  void *v26;
  NSMutableString *v27;
  id result;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v4 = (unsigned __int16)a2 + 1;
  v5 = BYTE2(a2);
  v6 = BYTE2(a2) + 1;
  if (HIWORD(a2) == 1)
  {
    v7 = objc_alloc((Class)NSString);
    v8 = TSAccessibilityLocalizedString((uint64_t)CFSTR("row.selected.description.singular %@"));
    v9 = objc_msgSend(v7, "initWithFormat:", v8, TSAccessibilityLocalizedUnsignedInteger(v4), v30);
  }
  else
  {
    v10 = (unsigned __int16)a2 + HIWORD(a2);
    v11 = objc_alloc((Class)NSString);
    v12 = TSAccessibilityLocalizedString((uint64_t)CFSTR("row.selected.description.plural %@ %@"));
    v13 = TSAccessibilityLocalizedUnsignedInteger(v4);
    v9 = objc_msgSend(v11, "initWithFormat:", v12, v13, TSAccessibilityLocalizedUnsignedInteger(v10));
  }
  v14 = v9;
  v15 = objc_alloc((Class)NSString);
  if ((a2 & 0xFFFF00000000) == 0x100000000)
  {
    v16 = TSAccessibilityLocalizedString((uint64_t)CFSTR("column.selected.description.singular %@"));
    v17 = objc_msgSend(v15, "initWithFormat:", v16, TSAccessibilityLocalizedUnsignedInteger(v6), v31);
  }
  else
  {
    v24 = TSAccessibilityLocalizedString((uint64_t)CFSTR("column.selected.description.plural %@ %@"));
    v25 = TSAccessibilityLocalizedUnsignedInteger(v6);
    v17 = objc_msgSend(v15, "initWithFormat:", v24, v25, TSAccessibilityLocalizedUnsignedInteger(v5 + WORD2(a2)));
  }
  v26 = v17;
  v27 = __TSAccessibilityStringForVariables(1, v14, v18, v19, v20, v21, v22, v23, (uint64_t)v17);

  result = *(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40);
  if (result)
  {
    v29 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
    if (*(_QWORD *)(v29 + 40))
    {
      result = objc_msgSend(result, "appendFormat:", CFSTR(", , %@"), *(_QWORD *)(v29 + 40), CFSTR("__TSAccessibilityStringForVariablesSentinel"));
      v29 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
    }
    *(_QWORD *)(v29 + 40) = v27;
  }
  else
  {
    result = objc_msgSend(objc_alloc((Class)NSMutableString), "initWithFormat:", TSAccessibilityLocalizedString((uint64_t)CFSTR("columns.and.rows.selected.beginning.format %@")), v27, CFSTR("__TSAccessibilityStringForVariablesSentinel"));
    *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40) = result;
  }
  return result;
}

id sub_23A678(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_tsaxSetStoredLabel:", objc_msgSend(*(id *)(a1 + 40), "_tsaxStoredLabel"));
}

void sub_23AE24(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_23AE3C(uint64_t a1, uint64_t a2)
{
  _Block_object_assign((void *)(a1 + 40), *(const void **)(a2 + 40), 131);
}

void sub_23AE4C(uint64_t a1)
{
  _Block_object_dispose(*(const void **)(a1 + 40), 131);
}

id sub_23AE58(uint64_t a1)
{
  id result;

  result = objc_msgSend(*(id *)(a1 + 32), "editorForEditAction:withSender:", *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 40));
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40) = result;
  return result;
}

void sub_23B9B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_23B9CC(uint64_t a1, uint64_t a2)
{
  _Block_object_assign((void *)(a1 + 40), *(const void **)(a2 + 40), 131);
}

void sub_23B9DC(uint64_t a1)
{
  _Block_object_dispose(*(const void **)(a1 + 40), 131);
}

id sub_23B9E8(uint64_t a1)
{
  id result;

  result = objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "tsaxTargetClass"), "selectionWithRange:", *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56));
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40) = result;
  return result;
}

id sub_23C748(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "tsaxInvalidateChildrenImmediately");
}

id sub_23C7AC(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "tsaxInvalidateChildrenEventually");
}

void sub_23CB20(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_list va;

  va_start(va, a8);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_23CB38(uint64_t a1)
{
  id result;

  result = objc_msgSend(*(id *)(a1 + 32), "anchorCellID");
  *(_DWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 32) = (_DWORD)result;
  return result;
}

id sub_23CCB8(_QWORD *a1)
{
  uint64_t v1;
  void *v2;
  uint64_t v3;
  _QWORD v5[5];

  v2 = (void *)a1[4];
  v1 = a1[5];
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_23CD14;
  v5[3] = &unk_43BE38;
  v3 = a1[7];
  v5[4] = a1[6];
  return objc_msgSend(v2, "enumerateSelectedCellsInTable:withFlags:usingBlock:", v1, v3, v5);
}

uint64_t sub_23CD14(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

void sub_23CE4C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_23CE6C(uint64_t a1, uint64_t a2)
{
  _Block_object_assign((void *)(a1 + 40), *(const void **)(a2 + 40), 131);
}

void sub_23CE7C(uint64_t a1)
{
  _Block_object_dispose(*(const void **)(a1 + 40), 131);
}

id sub_23CE88(uint64_t a1)
{
  id result;

  result = objc_msgSend(*(id *)(a1 + 32), "tsaxSubstringInStorageWithRange:", *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56));
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40) = result;
  return result;
}

void sub_23D0D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_23D0E8(uint64_t a1)
{
  id result;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  result = objc_msgSend(*(id *)(a1 + 32), "glyphRectForRange:includingLabel:", *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), 0);
  v3 = *(_QWORD **)(*(_QWORD *)(a1 + 40) + 8);
  v3[4] = v4;
  v3[5] = v5;
  v3[6] = v6;
  v3[7] = v7;
  return result;
}

id sub_23D968(uint64_t a1)
{
  objc_super v2;

  v2.receiver = *(id *)(a1 + 32);
  v2.super_class = (Class)TSTiOSTableRepDelegateAccessibility;
  return objc_msgSendSuper2(&v2, "p_showContextMenuAtPoint:", *(double *)(a1 + 40), *(double *)(a1 + 48));
}

id sub_23DBEC(uint64_t a1)
{
  id result;

  result = objc_alloc_init(*(Class *)(a1 + 32));
  qword_543898 = (uint64_t)result;
  return result;
}

id sub_23E800(uint64_t a1, double a2)
{
  LODWORD(a2) = *(_DWORD *)(a1 + 40);
  return objc_msgSend(*(id *)(a1 + 32), "_setValue:andSendAction:", *(unsigned __int8 *)(a1 + 44), a2);
}

uint64_t sub_23EE54(void *a1, void *a2, int a3)
{
  uint64_t result;
  const __CFString *v6;
  id v7;
  void *v8;
  int v9;
  id v10;
  uint64_t v11;
  id v12;
  const __CFString *v13;
  const __CFString *v14;
  id v15;
  uint64_t v16;
  id v17;
  id v18;
  id v19;
  uint64_t v20;
  id v21;
  void *v22;
  const __CFString *v23;
  id v24;

  while (1)
  {
    if ((objc_opt_isKindOfClass(a1, qword_5438C0) & 1) != 0
      || (objc_opt_isKindOfClass(a1, qword_543968) & 1) != 0
      || (objc_opt_isKindOfClass(a1, qword_543970) & 1) != 0
      || (objc_opt_isKindOfClass(a1, qword_543978) & 1) != 0
      || (objc_opt_isKindOfClass(a1, qword_543980) & 1) != 0)
    {
      v6 = CFSTR("Row");
      goto LABEL_31;
    }
    if ((objc_opt_isKindOfClass(a1, qword_5438C8) & 1) != 0)
      break;
    if ((objc_opt_isKindOfClass(a1, qword_543988) & 1) != 0)
      return (uint64_t)sub_23FA04(a1, a2, a3);
    if ((objc_opt_isKindOfClass(a1, qword_5438D0) & 1) != 0
      || (objc_opt_isKindOfClass(a1, qword_5438F8) & 1) != 0
      || (objc_opt_isKindOfClass(a1, qword_543900) & 1) != 0)
    {
      objc_msgSend(a2, "setObject:forKey:", CFSTR("UnderOver"), CFSTR("AXMType"));
      v10 = +[NSMutableDictionary dictionary](NSMutableDictionary, "dictionary");
      v11 = (a3 + 1);
      sub_23EE54(objc_msgSend(a1, "tsaxValueForKey:", CFSTR("schemataBase")), v10, v11);
      objc_msgSend(a2, "setObject:forKey:", v10, CFSTR("AXMBaseObject"));
      v12 = +[NSMutableDictionary dictionary](NSMutableDictionary, "dictionary");
      sub_23EE54(objc_msgSend(a1, "tsaxValueForKey:", CFSTR("schemataOver")), v12, v11);
      objc_msgSend(a2, "setObject:forKey:", v12, CFSTR("AXMOverObject"));
      v13 = (const __CFString *)+[NSMutableDictionary dictionary](NSMutableDictionary, "dictionary");
      sub_23EE54(objc_msgSend(a1, "tsaxValueForKey:", CFSTR("schemataUnder")), v13, v11);
      v14 = CFSTR("AXMUnderObject");
      goto LABEL_40;
    }
    if ((objc_opt_isKindOfClass(a1, qword_5438D8) & 1) != 0)
    {
      objc_msgSend(a2, "setObject:forKey:", CFSTR("Fraction"), CFSTR("AXMType"));
      v19 = +[NSMutableDictionary dictionary](NSMutableDictionary, "dictionary");
      v20 = (a3 + 1);
      sub_23EE54(objc_msgSend(a1, "tsaxValueForKey:", CFSTR("mFirst")), v19, v20);
      objc_msgSend(a2, "setObject:forKey:", v19, +[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("%@%@"), CFSTR("Term"), CFSTR("1")));
      v21 = +[NSMutableDictionary dictionary](NSMutableDictionary, "dictionary");
      sub_23EE54(objc_msgSend(a1, "tsaxValueForKey:", CFSTR("mSecond")), v21, v20);
      objc_msgSend(a2, "setObject:forKey:", v21, +[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("%@%@"), CFSTR("Term"), CFSTR("2")));
      v13 = (const __CFString *)+[NSMutableDictionary dictionary](NSMutableDictionary, "dictionary");
      sub_23EE54(objc_msgSend(a1, "tsaxValueForKey:", CFSTR("operatorCore")), v13, v20);
      v14 = CFSTR("AXMOperator");
LABEL_40:
      v22 = a2;
      v23 = v13;
      return (uint64_t)objc_msgSend(v22, "setObject:forKey:", v23, v14);
    }
    if ((objc_opt_isKindOfClass(a1, qword_543950) & 1) != 0)
    {
      objc_msgSend(a2, "setObject:forKey:", CFSTR("LongDivision"), CFSTR("AXMType"));
      v24 = +[NSMutableDictionary dictionary](NSMutableDictionary, "dictionary");
      sub_23EE54(objc_msgSend(a1, "tsaxValueForKey:", CFSTR("mDivisor")), v24, (a3 + 1));
      objc_msgSend(a2, "setObject:forKey:", v24, +[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("%@%@"), CFSTR("Term"), CFSTR("1")));
      v7 = objc_msgSend(a1, "tsaxValueForKey:", CFSTR("mStack"));
      v8 = a2;
      v9 = a3;
      return (uint64_t)sub_23F8AC(v7, v8, v9);
    }
    if ((objc_opt_isKindOfClass(a1, qword_5438E0) & 1) != 0 || (objc_opt_isKindOfClass(a1, qword_543918) & 1) != 0)
    {
      objc_msgSend(a2, "setObject:forKey:", CFSTR("Identifier"), CFSTR("AXMType"));
      return (uint64_t)sub_23FA9C(a1, a2);
    }
    if ((objc_opt_isKindOfClass(a1, qword_5438E8) & 1) != 0)
    {
      v23 = CFSTR("Space");
      v14 = CFSTR("AXMType");
      goto LABEL_50;
    }
    if ((objc_opt_isKindOfClass(a1, qword_5438F0) & 1) != 0)
    {
      objc_msgSend(a2, "setObject:forKey:", CFSTR("Operator"), CFSTR("AXMType"));
      sub_23FA9C(a1, a2);
      v23 = (const __CFString *)objc_msgSend(a1, "tsaxValueForKey:", CFSTR("operatorUnicharOrNul"));
      v14 = CFSTR("AXMUnichar");
      goto LABEL_50;
    }
    if ((objc_opt_isKindOfClass(a1, qword_543908) & 1) != 0
      || (objc_opt_isKindOfClass(a1, qword_543910) & 1) != 0
      || (objc_opt_isKindOfClass(a1, qword_543920) & 1) != 0)
    {
      objc_msgSend(a2, "setObject:forKey:", CFSTR("SubSuperScript"), CFSTR("AXMType"));
      v15 = +[NSMutableDictionary dictionary](NSMutableDictionary, "dictionary");
      v16 = (a3 + 1);
      sub_23EE54(objc_msgSend(a1, "tsaxValueForKey:", CFSTR("schemataKernel")), v15, v16);
      objc_msgSend(a2, "setObject:forKey:", v15, CFSTR("AXMBaseObject"));
      v17 = +[NSMutableDictionary dictionary](NSMutableDictionary, "dictionary");
      sub_23EE54(objc_msgSend(a1, "tsaxValueForKey:", CFSTR("schemataSubscript")), v17, v16);
      objc_msgSend(a2, "setObject:forKey:", v17, CFSTR("AXMSubscriptObject"));
      v13 = (const __CFString *)+[NSMutableDictionary dictionary](NSMutableDictionary, "dictionary");
      sub_23EE54(objc_msgSend(a1, "tsaxValueForKey:", CFSTR("schemataSuperscript")), v13, v16);
      v14 = CFSTR("AXMSuperscriptObject");
      goto LABEL_40;
    }
    if ((objc_opt_isKindOfClass(a1, qword_543928) & 1) != 0)
    {
      v6 = CFSTR("Table");
      goto LABEL_31;
    }
    if ((objc_opt_isKindOfClass(a1, qword_543938) & 1) != 0)
    {
      v6 = CFSTR("TableCell");
      goto LABEL_31;
    }
    if ((objc_opt_isKindOfClass(a1, qword_543930) & 1) != 0)
    {
      v6 = CFSTR("TableRow");
      goto LABEL_31;
    }
    if ((objc_opt_isKindOfClass(a1, qword_543940) & 1) != 0 || (objc_opt_isKindOfClass(a1, qword_543948) & 1) != 0)
    {
      objc_msgSend(a2, "setObject:forKey:", CFSTR("RootOperation"), CFSTR("AXMType"));
      v18 = +[NSMutableDictionary dictionary](NSMutableDictionary, "dictionary");
      sub_23EE54(objc_msgSend(a1, "tsaxValueForKey:", CFSTR("schemataRadicand")), v18, (a3 + 1));
      objc_msgSend(a2, "setObject:forKey:", v18, CFSTR("AXMRadicandObject"));
      v13 = (const __CFString *)+[NSMutableDictionary dictionary](NSMutableDictionary, "dictionary");
      sub_23EE54(objc_msgSend(a1, "tsaxValueForKey:", CFSTR("schemataIndex")), v13, (a3 + 1));
      v14 = CFSTR("AXMRootIndexObject");
      goto LABEL_40;
    }
    if ((objc_opt_isKindOfClass(a1, qword_543958) & 1) != 0)
    {
      v6 = CFSTR("Fenced");
LABEL_31:
      objc_msgSend(a2, "setObject:forKey:", v6, CFSTR("AXMType"));
      v7 = a1;
      v8 = a2;
      v9 = a3;
      return (uint64_t)sub_23F8AC(v7, v8, v9);
    }
    if ((objc_opt_isKindOfClass(a1, qword_543960) & 1) != 0)
    {
      objc_msgSend(a2, "setObject:forKey:", CFSTR("Text"), CFSTR("AXMType"));
      result = (uint64_t)objc_msgSend(objc_msgSend(objc_msgSend(a1, "tsaxValueForKey:", CFSTR("mContent")), "tsaxValueForKey:", CFSTR("mChildren")), "componentsJoinedByString:", CFSTR(" "));
      if (!result)
        return result;
      v23 = (const __CFString *)result;
      v14 = CFSTR("AXMContent");
LABEL_50:
      v22 = a2;
      return (uint64_t)objc_msgSend(v22, "setObject:forKey:", v23, v14);
    }
    result = objc_opt_isKindOfClass(a1, qword_543990);
    if ((result & 1) != 0)
    {
      result = (uint64_t)objc_msgSend(a1, "tsaxValueForKey:", CFSTR("mExpression"));
      a1 = (void *)result;
      if (result)
        continue;
    }
    return result;
  }
  objc_msgSend(a2, "setObject:forKey:", CFSTR("Row"), CFSTR("AXMType"));
  return (uint64_t)sub_23FA04(a1, a2, a3);
}

void sub_23F680(id a1)
{
  qword_5438C0 = (uint64_t)NSClassFromString(CFSTR("EQKitMathMLMRow"));
  qword_5438C8 = (uint64_t)NSClassFromString(CFSTR("EQKitMathMLMStyle"));
  qword_5438D0 = (uint64_t)NSClassFromString(CFSTR("EQKitMathMLMUnderover"));
  qword_5438D8 = (uint64_t)NSClassFromString(CFSTR("EQKitMathMLMFraction"));
  qword_5438E0 = (uint64_t)NSClassFromString(CFSTR("EQKitMathMLMIdentifier"));
  qword_5438E8 = (uint64_t)NSClassFromString(CFSTR("EQKitMathMLMSpace"));
  qword_5438F0 = (uint64_t)NSClassFromString(CFSTR("EQKitMathMLMOperator"));
  qword_5438F8 = (uint64_t)NSClassFromString(CFSTR("EQKitMathMLMOver"));
  qword_543900 = (uint64_t)NSClassFromString(CFSTR("EQKitMathMLMUnder"));
  qword_543908 = (uint64_t)NSClassFromString(CFSTR("EQKitMathMLMSuperscript"));
  qword_543910 = (uint64_t)NSClassFromString(CFSTR("EQKitMathMLMSubscript"));
  qword_543918 = (uint64_t)NSClassFromString(CFSTR("EQKitMathMLMNumber"));
  qword_543920 = (uint64_t)NSClassFromString(CFSTR("EQKitMathMLMSubsuperscript"));
  qword_543928 = (uint64_t)NSClassFromString(CFSTR("EQKitMathMLMTable"));
  qword_543930 = (uint64_t)NSClassFromString(CFSTR("EQKitMathMLMTr"));
  qword_543938 = (uint64_t)NSClassFromString(CFSTR("EQKitMathMLMTd"));
  qword_543940 = (uint64_t)NSClassFromString(CFSTR("EQKitMathMLMSqrt"));
  qword_543948 = (uint64_t)NSClassFromString(CFSTR("EQKitMathMLMRoot"));
  qword_543950 = (uint64_t)NSClassFromString(CFSTR("EQKitMathMLMLongDivision"));
  qword_543958 = (uint64_t)NSClassFromString(CFSTR("EQKitMathMLMFenced"));
  qword_543960 = (uint64_t)NSClassFromString(CFSTR("EQKitMathMLMText"));
  qword_543968 = (uint64_t)NSClassFromString(CFSTR("EQKitMathMLMStackRow"));
  qword_543970 = (uint64_t)NSClassFromString(CFSTR("EQKitMathMLMStackGroup"));
  qword_543978 = (uint64_t)NSClassFromString(CFSTR("EQKitMathMLMStackCarry"));
  qword_543980 = (uint64_t)NSClassFromString(CFSTR("EQKitMathMLMStack"));
  qword_543988 = (uint64_t)NSClassFromString(CFSTR("EQKitMathMLMPadded"));
  qword_543990 = (uint64_t)NSClassFromString(CFSTR("EQKitMathMLMAction"));
}

id sub_23F8AC(void *a1, void *a2, int a3)
{
  id v6;
  id v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  id v14;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  _BYTE v20[128];

  v6 = +[NSMutableArray array](NSMutableArray, "array");
  v16 = 0u;
  v17 = 0u;
  v18 = 0u;
  v19 = 0u;
  v7 = objc_msgSend(a1, "tsaxValueForKey:", CFSTR("mChildren"), 0);
  v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v16, v20, 16);
  if (v8)
  {
    v9 = v8;
    v10 = *(_QWORD *)v17;
    v11 = (a3 + 1);
    do
    {
      v12 = 0;
      do
      {
        if (*(_QWORD *)v17 != v10)
          objc_enumerationMutation(v7);
        v13 = *(_QWORD *)(*((_QWORD *)&v16 + 1) + 8 * (_QWORD)v12);
        v14 = +[NSMutableDictionary dictionary](NSMutableDictionary, "dictionary");
        sub_23EE54(v13, v14, v11);
        objc_msgSend(v6, "addObject:", v14);
        v12 = (char *)v12 + 1;
      }
      while (v9 != v12);
      v9 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v16, v20, 16);
    }
    while (v9);
  }
  return objc_msgSend(a2, "setObject:forKey:", v6, CFSTR("AXMChildren"));
}

id sub_23FA04(void *a1, void *a2, int a3)
{
  id v6;
  id v7;
  id v8;
  id v9;

  v6 = +[NSMutableArray array](NSMutableArray, "array");
  v7 = objc_msgSend(a1, "tsaxValueForKey:", CFSTR("mChild"));
  if (v7)
  {
    v8 = v7;
    v9 = +[NSMutableDictionary dictionary](NSMutableDictionary, "dictionary");
    sub_23EE54(v8, v9, (a3 + 1));
    objc_msgSend(v6, "addObject:", v9);
  }
  return objc_msgSend(a2, "setObject:forKey:", v6, CFSTR("AXMChildren"));
}

id sub_23FA9C(void *a1, void *a2)
{
  id result;
  const __CFString *v5;

  if (objc_msgSend(a1, "tsaxValueForKey:", CFSTR("schemataTokenString")))
    objc_msgSend(a2, "setObject:forKey:", objc_msgSend(a1, "tsaxValueForKey:", CFSTR("schemataTokenString")), CFSTR("AXMContent"));
  result = objc_msgSend(objc_msgSend(objc_msgSend(a1, "tsaxValueForKey:", CFSTR("schemataFontStyling")), "tsaxValueForKey:", CFSTR("scriptVariant")), "intValue");
  if ((_DWORD)result == 3)
  {
    v5 = CFSTR("StyleItalic");
  }
  else
  {
    if ((_DWORD)result != 2)
      return result;
    v5 = CFSTR("StyleBold");
  }
  return objc_msgSend(a2, "setObject:forKey:", v5, CFSTR("AXMFontStyle"));
}

void sub_24039C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_list va;

  va_start(va, a8);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_2403B4(uint64_t a1)
{
  id result;

  result = objc_msgSend(*(id *)(a1 + 32), "upperLeftCellID");
  *(_DWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 32) = (_DWORD)result;
  return result;
}

void sub_240484(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_list va;

  va_start(va, a8);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_24049C(uint64_t a1)
{
  id result;

  result = objc_msgSend(*(id *)(a1 + 32), "bottomRightCellID");
  *(_DWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 32) = (_DWORD)result;
  return result;
}

void sub_240568(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_list va;

  va_start(va, a8);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_240580(uint64_t a1)
{
  id result;

  result = objc_msgSend(*(id *)(a1 + 32), "boundingCellRange");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 32) = result;
  return result;
}

id sub_240608(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "enumerateCellRangesUsingBlock:", *(_QWORD *)(a1 + 40));
}

void sub_240A6C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, ...)
{
  va_list va;

  va_start(va, a16);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_240A8C(uint64_t a1)
{
  id result;

  result = objc_msgSend(*(id *)(a1 + 32), "findCharIndex");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = result;
  return result;
}

void sub_240F70(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_list va;

  va_start(va, a8);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_240F88(uint64_t a1)
{
  id result;

  result = objc_msgSend(*(id *)(a1 + 32), "cellID");
  *(_DWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 32) = (_DWORD)result;
  return result;
}

void sub_241440(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 64), 8);
  _Unwind_Resume(a1);
}

void sub_241458(uint64_t a1, uint64_t a2)
{
  _Block_object_assign((void *)(a1 + 40), *(const void **)(a2 + 40), 131);
}

void sub_241468(uint64_t a1)
{
  _Block_object_dispose(*(const void **)(a1 + 40), 131);
}

id sub_241474(uint64_t a1)
{
  id result;

  result = objc_msgSend(objc_alloc((Class)objc_msgSend(*(id *)(a1 + 32), "tsaxTargetClass")), "initWithStorage:subRange:", *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64));
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40) = result;
  return result;
}

void sub_24154C(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 48), 8);
  _Unwind_Resume(a1);
}

id sub_241564(uint64_t a1)
{
  id result;

  result = objc_msgSend(*(id *)(a1 + 32), "previousCharacterIndex:", *(_QWORD *)(a1 + 48));
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = result;
  return result;
}

void sub_241630(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 48), 8);
  _Unwind_Resume(a1);
}

id sub_241648(uint64_t a1)
{
  id result;

  result = objc_msgSend(*(id *)(a1 + 32), "nextCharacterIndex:", *(_QWORD *)(a1 + 48));
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = result;
  return result;
}

void sub_241778(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_241790(uint64_t a1)
{
  id result;
  double v3;
  double v4[4];

  result = objc_msgSend(*(id *)(a1 + 32), "getRGBAComponents:", v4);
  v3 = fmax(v4[1] * 0.715200007 + v4[0] * 0.212599993 + v4[2] * 0.0722000003 * v4[3], 0.0);
  if (v3 > 1.0)
    v3 = 1.0;
  *(double *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = v3;
  return result;
}

id sub_242304(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "tsaxSetAssociatedPopoverController:", 0);
}

id sub_2426CC(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "tsaxSetAssociatedPopoverController:", *(_QWORD *)(a1 + 40));
}

id sub_242A88()
{
  id result;
  void *v1;
  id v2;
  id v3;
  uint64_t v4;
  void *i;
  void *v6;
  void *v7;
  Class v8;
  Class v9;
  void *v10;
  Class v11;
  Class v12;
  id v13;
  uint64_t v14;
  id v15;
  id v16;
  id v17;
  char v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  _BYTE v23[128];

  result = objc_msgSend((id)qword_5439A8, "count");
  if (result)
  {
    v21 = 0u;
    v22 = 0u;
    v19 = 0u;
    v20 = 0u;
    v1 = (void *)qword_5439A8;
    v2 = objc_msgSend((id)qword_5439A8, "countByEnumeratingWithState:objects:count:", &v19, v23, 16);
    if (v2)
    {
      v3 = v2;
      v4 = *(_QWORD *)v20;
      while (2)
      {
        for (i = 0; i != v3; i = (char *)i + 1)
        {
          if (*(_QWORD *)v20 != v4)
            objc_enumerationMutation(v1);
          v6 = *(void **)(*((_QWORD *)&v19 + 1) + 8 * (_QWORD)i);
          v18 = 0;
          v7 = (void *)objc_opt_class(TSKPopoverControllerAccessibility);
          v8 = __TSAccessibilityCastAsSafeCategory(v7, (uint64_t)objc_msgSend(v6, "tsaxValueForKey:", CFSTR("nonretainedObjectValue")), 1, &v18);
          if (v18
            || (v9 = v8,
                v18 = 0,
                v10 = (void *)objc_opt_class(TSUIWindowAccessibility),
                v11 = __TSAccessibilityCastAsSafeCategory(v10, (uint64_t)-[UIApplication keyWindow](+[UIApplication sharedApplication](UIApplication, "sharedApplication"), "keyWindow"), 1, &v18), v18))
          {
            abort();
          }
          v12 = v11;
          v13 = -[objc_class tsaxFirstResponder](v11, "tsaxFirstResponder");
          v14 = objc_opt_class(UIView);
          if ((objc_opt_isKindOfClass(v13, v14) & 1) != 0)
          {
            v15 = -[objc_class tsaxFirstResponder](v12, "tsaxFirstResponder");
            v16 = objc_msgSend(-[objc_class tsaxContentViewController](v9, "tsaxContentViewController"), "view");
            if (v15)
            {
              v17 = v16;
              while (v15 != v17)
              {
                v15 = objc_msgSend(v15, "superview");
                if (!v15)
                  goto LABEL_14;
              }
              return 0;
            }
          }
LABEL_14:
          ;
        }
        v3 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v19, v23, 16);
        result = &dword_0 + 1;
        if (v3)
          continue;
        break;
      }
    }
    else
    {
      return &dword_0 + 1;
    }
  }
  return result;
}

void sub_243834(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,char a32)
{
  uint64_t v32;

  _Block_object_dispose(&a32, 8);
  _Block_object_dispose((const void *)(v32 - 152), 8);
  _Block_object_dispose((const void *)(v32 - 120), 8);
  _Unwind_Resume(a1);
}

void sub_243874(uint64_t a1, uint64_t a2)
{
  _Block_object_assign((void *)(a1 + 40), *(const void **)(a2 + 40), 131);
}

void sub_243884(uint64_t a1)
{
  _Block_object_dispose(*(const void **)(a1 + 40), 131);
}

id sub_243890(_QWORD *a1)
{
  id result;
  char v3;
  uint64_t v4;
  char v5;

  v5 = 1;
  v4 = 0;
  v3 = 0;
  *(_QWORD *)(*(_QWORD *)(a1[6] + 8) + 40) = objc_msgSend(objc_alloc(NSClassFromString(CFSTR("TSWPEditingController"))), "initWithStorage:interactiveCanvasController:", a1[4], a1[5]);
  *(_QWORD *)(*(_QWORD *)(a1[7] + 8) + 24) = objc_msgSend(*(id *)(*(_QWORD *)(a1[6] + 8) + 40), "p_charIndexByMovingCharIndex:withEolAffinity:toBoundary:inDirection:preferPosition:isLeadingEdge:", a1[9], &v5, 2, 3, &v4, &v3);
  result = objc_msgSend(*(id *)(*(_QWORD *)(a1[6] + 8) + 40), "p_charIndexByMovingCharIndex:withEolAffinity:toBoundary:inDirection:preferPosition:isLeadingEdge:", a1[9] + a1[10] - 1, &v5, 2, 2, &v4, &v3);
  *(_QWORD *)(*(_QWORD *)(a1[8] + 8) + 24) = result;
  return result;
}

id sub_243958(uint64_t a1)
{
  uint64_t v1;
  NSString *v2;

  v1 = *(_QWORD *)(a1 + 32);
  v2 = TSAccessibilityLocalizedString((uint64_t)CFSTR("find.success"));
  return TSAccessibilityPostAnnouncementNotification(v1, (uint64_t)v2);
}

id sub_243988(uint64_t a1)
{
  return TSAccessibilityPostAnnouncementNotification(*(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40));
}

void sub_243A78(id a1, TSWPAttachmentAccessibility *a2, unint64_t a3, BOOL *a4)
{
  -[TSWPAttachmentAccessibility tsaxParentStorageWasUpdated](a2, "tsaxParentStorageWasUpdated", a3, a4);
}

void sub_243A80(id a1, TSWPFootnoteReferenceAttachmentAccessibility *a2, unint64_t a3, BOOL *a4)
{
  -[TSWPAttachmentAccessibility tsaxParentStorageWasUpdated](a2, "tsaxParentStorageWasUpdated", a3, a4);
}

void sub_243FE4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_243FFC(uint64_t a1)
{
  id result;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  result = objc_msgSend(*(id *)(a1 + 32), "convertUnscaledToBoundsRect:", *(double *)(a1 + 48), *(double *)(a1 + 56), *(double *)(a1 + 64), *(double *)(a1 + 72));
  v3 = *(_QWORD **)(*(_QWORD *)(a1 + 40) + 8);
  v3[4] = v4;
  v3[5] = v5;
  v3[6] = v6;
  v3[7] = v7;
  return result;
}

id sub_2444EC(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "tsaxSetParentInteractiveCanvasController:", *(_QWORD *)(a1 + 32));
}

id sub_2444F8(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "tsaxSetParentInteractiveCanvasController:", *(_QWORD *)(a1 + 32));
}

id sub_244504(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "tsaxSetParentInteractiveCanvasController:", *(_QWORD *)(a1 + 32));
}

void sub_2445D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_2445E8(uint64_t a1, uint64_t a2)
{
  _Block_object_assign((void *)(a1 + 40), *(const void **)(a2 + 40), 131);
}

void sub_2445F8(uint64_t a1)
{
  _Block_object_dispose(*(const void **)(a1 + 40), 131);
}

id sub_244604(uint64_t a1)
{
  id result;

  result = objc_msgSend(*(id *)(a1 + 32), "fillsForDefaultSeriesType");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40) = result;
  return result;
}

void sub_2448D0(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 48), 8);
  _Unwind_Resume(a1);
}

id sub_2448E8(uint64_t a1)
{
  id result;

  result = objc_msgSend(*(id *)(a1 + 32), "selectionRangeMaxForCharIndex:", *(_QWORD *)(a1 + 48));
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = result;
  return result;
}

void sub_2449C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_2449E0(uint64_t a1, uint64_t a2)
{
  _Block_object_assign((void *)(a1 + 40), *(const void **)(a2 + 40), 131);
}

void sub_2449F0(uint64_t a1)
{
  _Block_object_dispose(*(const void **)(a1 + 40), 131);
}

id sub_2449FC(uint64_t a1)
{
  id result;

  result = objc_msgSend(*(id *)(a1 + 32), "substringWithRange:", *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56));
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40) = result;
  return result;
}

id sub_244AF8(uint64_t a1)
{
  void *v2;
  id v3;
  uint64_t v4;
  _QWORD v6[5];

  v2 = *(void **)(a1 + 32);
  v3 = objc_msgSend(v2, "tsaxRange");
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  v6[2] = sub_244B70;
  v6[3] = &unk_43C000;
  v6[4] = *(_QWORD *)(a1 + 40);
  return objc_msgSend(v2, "enumerateAttachmentsInTextRange:usingBlock:", v3, v4, v6);
}

Class sub_244B70(uint64_t a1, uint64_t a2)
{
  void *v4;
  Class result;
  char v6;

  v6 = 0;
  v4 = (void *)objc_opt_class(TSWPAttachmentAccessibility);
  result = __TSAccessibilityCastAsSafeCategory(v4, a2, 1, &v6);
  if (v6)
    abort();
  if (result)
    return (Class)(*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
  return result;
}

Class sub_244C48(uint64_t a1)
{
  Class result;
  Class v3;
  unint64_t v4;
  void *v5;
  char v6;
  uint64_t v7;
  char v8;

  v8 = 0;
  result = (Class)objc_msgSend(*(id *)(a1 + 32), "tsaxUnsignedIntegerValueForKey:", CFSTR("footnoteCount"));
  if (result)
  {
    v3 = result;
    v4 = 1;
    do
    {
      v7 = 0;
      v6 = 0;
      v5 = (void *)objc_opt_class(TSWPFootnoteReferenceAttachmentAccessibility);
      result = __TSAccessibilityCastAsSafeCategory(v5, (uint64_t)objc_msgSend(*(id *)(a1 + 32), "footnoteAtFootnoteIndex:outCharIndex:", v4 - 1, &v7), 1, &v6);
      if (v6)
        abort();
      if (result)
        result = (Class)(*(uint64_t (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
      if (v4 >= (unint64_t)v3)
        break;
      ++v4;
    }
    while (!v8);
  }
  return result;
}

void sub_244DE8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_244E04(uint64_t result, uint64_t a2, unint64_t a3, uint64_t a4, _BYTE *a5)
{
  unint64_t v5;

  v5 = *(_QWORD *)(result + 40);
  if (a3 <= v5 && a3 + a4 >= v5)
  {
    *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(result + 32) + 8) + 40) = a2;
    *a5 = 1;
  }
  return result;
}

id sub_244EC8(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  _QWORD v4[5];

  v1 = *(unsigned int *)(a1 + 64);
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_244F28;
  v4[3] = &unk_43C050;
  v2 = *(void **)(a1 + 32);
  v4[4] = *(_QWORD *)(a1 + 40);
  return objc_msgSend(v2, "enumerateSmartFieldsWithAttributeKind:inRange:usingBlock:", v1, *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), v4);
}

Class sub_244F28(uint64_t a1, uint64_t a2)
{
  void *v4;
  Class result;
  char v6;

  v6 = 0;
  v4 = (void *)objc_opt_class(TSWPSmartFieldAccessibility);
  result = __TSAccessibilityCastAsSafeCategory(v4, a2, 1, &v6);
  if (v6)
    abort();
  if (result)
    return (Class)(*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
  return result;
}

void sub_24506C(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 64), 8);
  _Unwind_Resume(a1);
}

id sub_245084(uint64_t a1)
{
  id result;

  result = objc_msgSend(*(id *)(a1 + 32), "editableAnnotationForInsertionPointSelection:includeComments:withOutRange:selectionIsOnEdge:", *(_QWORD *)(a1 + 40), *(unsigned __int8 *)(a1 + 72), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64));
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40) = result;
  return result;
}

void sub_24516C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_245184(uint64_t a1)
{
  id result;
  uint64_t v3;
  uint64_t v4;

  result = objc_msgSend(*(id *)(a1 + 32), "rangeOfAnnotationWithOptions:range:", 0, *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56));
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  *(_QWORD *)(v3 + 32) = result;
  *(_QWORD *)(v3 + 40) = v4;
  return result;
}

void sub_245264(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_24527C(uint64_t a1)
{
  id result;
  uint64_t v3;
  uint64_t v4;

  result = objc_msgSend(*(id *)(a1 + 32), "rangeForAnnotation:", *(_QWORD *)(a1 + 40));
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
  *(_QWORD *)(v3 + 32) = result;
  *(_QWORD *)(v3 + 40) = v4;
  return result;
}

void sub_24564C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_245664(uint64_t a1, uint64_t a2)
{
  _Block_object_assign((void *)(a1 + 40), *(const void **)(a2 + 40), 131);
}

void sub_245674(uint64_t a1)
{
  _Block_object_dispose(*(const void **)(a1 + 40), 131);
}

id sub_245680(uint64_t a1)
{
  id result;

  result = objc_msgSend(*(id *)(a1 + 32), "mostSpecificCurrentEditorOfClass:", +[TSAccessibilitySafeCategory tsaxTargetClass](TSTTableEditorAccessibility, "tsaxTargetClass"));
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40) = result;
  return result;
}

void sub_245848(id a1)
{
  UIAccessibilityPostNotification(UIAccessibilityLayoutChangedNotification, 0);
}

void sub_246048(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_246064(uint64_t a1, uint64_t a2)
{
  _Block_object_assign((void *)(a1 + 40), *(const void **)(a2 + 40), 131);
}

void sub_246074(uint64_t a1)
{
  _Block_object_dispose(*(const void **)(a1 + 40), 131);
}

id sub_246080(uint64_t a1)
{
  id result;

  result = objc_msgSend(*(id *)(a1 + 32), "swatchGridViewForPage:", *(_QWORD *)(a1 + 48));
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40) = result;
  return result;
}

void sub_246640(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_246664(uint64_t a1)
{
  id v2;
  id v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;

  v2 = objc_alloc(NSClassFromString(CFSTR("TSWPSelection")));
  v3 = objc_msgSend(*(id *)(a1 + 32), "tsaxRangeValueForKey:", CFSTR("range"));
  v20 = objc_msgSend(v2, "initWithRange:", v3, v4);
  objc_msgSend(*(id *)(a1 + 40), "rectForSelection:", v20);
  v5 = *(_QWORD **)(*(_QWORD *)(a1 + 56) + 8);
  v5[4] = v6;
  v5[5] = v7;
  v5[6] = v8;
  v5[7] = v9;
  objc_msgSend(*(id *)(a1 + 40), "convertNaturalRectToUnscaledCanvas:", *(double *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 32), *(double *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 40), *(double *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 48), *(double *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 56));
  v10 = *(_QWORD **)(*(_QWORD *)(a1 + 56) + 8);
  v10[4] = v11;
  v10[5] = v12;
  v10[6] = v13;
  v10[7] = v14;
  objc_msgSend(*(id *)(a1 + 48), "convertUnscaledToBoundsRect:", *(double *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 32), *(double *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 40), *(double *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 48), *(double *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 56));
  v15 = *(_QWORD **)(*(_QWORD *)(a1 + 56) + 8);
  v15[4] = v16;
  v15[5] = v17;
  v15[6] = v18;
  v15[7] = v19;

}

id sub_246E9C(uint64_t a1)
{
  uint64_t v2;
  id result;
  id v4;
  objc_super v5;

  v2 = *(_QWORD *)(a1 + 32);
  v5.receiver = *(id *)(a1 + 40);
  v5.super_class = (Class)TSADocumentManagerViewAccessibility;
  objc_msgSendSuper2(&v5, "scrollViewDidScroll:", v2);
  result = (id)UIAccessibilityIsVoiceOverRunning();
  if ((_DWORD)result)
  {
    v4 = objc_msgSend(objc_msgSend(*(id *)(a1 + 40), "tsaxValueForKey:", CFSTR("_assignedCells")), "count");
    result = objc_msgSend(*(id *)(a1 + 40), "tsaxUnsignedIntegerValueForKey:", CFSTR("_itemCount"));
    if (v4 < result)
      return objc_msgSend(*(id *)(a1 + 40), "_loadCells");
  }
  return result;
}

id sub_246F70(uint64_t a1)
{
  objc_super v2;

  v2.receiver = *(id *)(a1 + 32);
  v2.super_class = (Class)TSADocumentManagerViewAccessibility;
  return objc_msgSendSuper2(&v2, "_loadCells");
}

void sub_2474A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_list va;

  va_start(va, a8);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_2474C0(uint64_t a1)
{
  id result;

  result = objc_msgSend(*(id *)(a1 + 32), "editingCellID");
  *(_DWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 32) = (_DWORD)result;
  return result;
}

uint64_t TSUIReferenceLibraryViewControllerAccessibilityShouldPreventActualLookup()
{
  return byte_5439B6;
}

uint64_t TSUIReferenceLibraryViewControllerAccessibilitySetShouldPreventActualLookup(uint64_t result)
{
  byte_5439B6 = result;
  return result;
}

id sub_247DE0(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "p_buildMenuItems:forSelection:", *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48));
}

id sub_247E5C(uint64_t a1)
{
  uint64_t v1;
  objc_super v3;

  v1 = *(_QWORD *)(a1 + 32);
  v3.receiver = *(id *)(a1 + 40);
  v3.super_class = (Class)TSDiOSCanvasViewControllerAccessibility;
  return objc_msgSendSuper2(&v3, "showEditMenuForSelection:", v1);
}

id sub_249400(uint64_t a1)
{
  id result;

  if (objc_msgSend(*(id *)(a1 + 32), "firstElementForUpcomingScreenChangeResetCount"))
    objc_msgSend(*(id *)(a1 + 32), "setFirstElementForUpcomingScreenChangeResetCount:", (char *)objc_msgSend(*(id *)(a1 + 32), "firstElementForUpcomingScreenChangeResetCount") - 1);
  result = objc_msgSend(*(id *)(a1 + 32), "firstElementForUpcomingScreenChangeResetCount");
  if (!result)
    return objc_msgSend(*(id *)(a1 + 32), "setCachedFirstElementForUpcomingScreenChange:", 0);
  return result;
}

id sub_2494F0(uint64_t a1)
{
  id result;

  if (objc_msgSend(*(id *)(a1 + 32), "firstElementForUpcomingPageTurnResetCount"))
    objc_msgSend(*(id *)(a1 + 32), "setFirstElementForUpcomingPageTurnResetCount:", (char *)objc_msgSend(*(id *)(a1 + 32), "firstElementForUpcomingPageTurnResetCount") - 1);
  result = objc_msgSend(*(id *)(a1 + 32), "firstElementForUpcomingPageTurnResetCount");
  if (!result)
    return objc_msgSend(*(id *)(a1 + 32), "setCachedFirstElementForUpcomingPageTurn:", 0);
  return result;
}

NSString *TSAccessibilityGetUIKitLocalizedString(uint64_t a1)
{
  NSBundle *v2;

  v2 = (NSBundle *)qword_5439C8;
  if (qword_5439C8)
    return -[NSBundle localizedStringForKey:value:table:](v2, "localizedStringForKey:value:table:", a1, &stru_43D7D8, CFSTR("Accessibility"));
  v2 = +[NSBundle bundleWithIdentifier:](NSBundle, "bundleWithIdentifier:", CFSTR("com.apple.UIKit.axbundle"));
  qword_5439C8 = (uint64_t)v2;
  if (v2)
    return -[NSBundle localizedStringForKey:value:table:](v2, "localizedStringForKey:value:table:", a1, &stru_43D7D8, CFSTR("Accessibility"));
  else
    return (NSString *)a1;
}

id TSAccessibilityPostLayoutChangedNotification(void *a1)
{
  int ShouldCrashOnValidationErrorAfterLaunch;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  if (qword_5439D0)
  {
    if (!a1)
      return objc_msgSend((id)qword_5439D0, "afterDelay:processBlock:", &stru_43C260, 0.25);
  }
  else
  {
    qword_5439D0 = -[TSAccessibilityTimer initWithTargetSerialQueue:]([TSAccessibilityTimer alloc], "initWithTargetSerialQueue:", &_dispatch_main_q);
    objc_msgSend((id)qword_5439D0, "setAutomaticallyCancelPendingBlockUponSchedulingNewBlock:", 1);
    if (!a1)
      return objc_msgSend((id)qword_5439D0, "afterDelay:processBlock:", &stru_43C260, 0.25);
  }
  if (qword_5439D8)
  {
    if ((void *)qword_5439D8 != a1)
    {
      if (TSAccessibilityShouldPerformValidationChecks())
      {
        ShouldCrashOnValidationErrorAfterLaunch = TSAccessibilityShouldCrashOnValidationErrorAfterLaunch();
        if (__TSAccessibilityHandleValidationErrorWithDescription(ShouldCrashOnValidationErrorAfterLaunch, 0, (uint64_t)CFSTR("Multiple targets for multiple layout changed notifications. This is likely a bug."), v3, v4, v5, v6, v7, v9))abort();
      }
    }
  }
  else
  {
    qword_5439D8 = a1;
  }
  return objc_msgSend((id)qword_5439D0, "afterDelay:processBlock:", &stru_43C260, 0.25);
}

void sub_249668(id a1)
{
  id v1;

  UIAccessibilityPostNotification(UIAccessibilityLayoutChangedNotification, (id)qword_5439D8);
  v1 = (id)qword_5439D8;
  qword_5439D8 = 0;
}

id sub_249904(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_accessibilityUnregister");
}

id sub_249BF8(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(*(id *)(a1 + 32), "addObject:", a2);
}

id sub_249E64(uint64_t a1)
{
  int ShouldCrashOnValidationErrorAfterLaunch;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  id v9;
  id v10;
  uint64_t v11;
  void *v12;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  _BYTE v18[128];

  if (TSAccessibilityShouldPerformValidationChecks())
  {
    if (!+[NSThread isMainThread](NSThread, "isMainThread"))
    {
      ShouldCrashOnValidationErrorAfterLaunch = TSAccessibilityShouldCrashOnValidationErrorAfterLaunch();
      if (__TSAccessibilityHandleValidationErrorWithDescription(ShouldCrashOnValidationErrorAfterLaunch, 0, (uint64_t)CFSTR("This must only be called on the main thread."), v3, v4, v5, v6, v7, v14))abort();
    }
  }
  objc_msgSend(*(id *)(a1 + 32), "tsaxInvalidateChildrenImmediately");
  if (objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "_tsaxChildInvalidationCompletionBlocks"), "count"))
  {
    v16 = 0u;
    v17 = 0u;
    v14 = 0u;
    v15 = 0u;
    v8 = objc_msgSend(*(id *)(a1 + 32), "_tsaxChildInvalidationCompletionBlocks", 0);
    v9 = objc_msgSend(v8, "countByEnumeratingWithState:objects:count:", &v14, v18, 16);
    if (v9)
    {
      v10 = v9;
      v11 = *(_QWORD *)v15;
      do
      {
        v12 = 0;
        do
        {
          if (*(_QWORD *)v15 != v11)
            objc_enumerationMutation(v8);
          (*(void (**)(void))(*(_QWORD *)(*((_QWORD *)&v14 + 1) + 8 * (_QWORD)v12) + 16))();
          v12 = (char *)v12 + 1;
        }
        while (v10 != v12);
        v10 = objc_msgSend(v8, "countByEnumeratingWithState:objects:count:", &v14, v18, 16);
      }
      while (v10);
    }
    objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "_tsaxChildInvalidationCompletionBlocks"), "removeAllObjects");
  }
  return *(id *)(a1 + 32);
}

void sub_24A5BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_24A5D4(uint64_t a1)
{
  id result;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  result = objc_msgSend(*(id *)(a1 + 32), "columnRectForRange:", *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56));
  v3 = *(_QWORD **)(*(_QWORD *)(a1 + 40) + 8);
  v3[4] = v4;
  v3[5] = v5;
  v3[6] = v6;
  v3[7] = v7;
  return result;
}

void sub_24A6D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_24A6F0(uint64_t a1)
{
  id result;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  result = objc_msgSend(*(id *)(a1 + 32), "glyphRectForRange:includingLabel:", *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(unsigned __int8 *)(a1 + 64));
  v3 = *(_QWORD **)(*(_QWORD *)(a1 + 40) + 8);
  v3[4] = v4;
  v3[5] = v5;
  v3[6] = v6;
  v3[7] = v7;
  return result;
}

void sub_24A7D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_24A7EC(uint64_t a1)
{
  id result;
  uint64_t v3;
  uint64_t v4;

  result = objc_msgSend(*(id *)(a1 + 32), "rangeOfLineFragmentAtIndex:", *(_QWORD *)(a1 + 48));
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  *(_QWORD *)(v3 + 32) = result;
  *(_QWORD *)(v3 + 40) = v4;
  return result;
}

void sub_24A8E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_24A900(uint64_t a1)
{
  id result;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  result = objc_msgSend(*(id *)(a1 + 32), "boundsOfLineFragmentAtIndex:", *(_QWORD *)(a1 + 48));
  v3 = *(_QWORD **)(*(_QWORD *)(a1 + 40) + 8);
  v3[4] = v4;
  v3[5] = v5;
  v3[6] = v6;
  v3[7] = v7;
  return result;
}

void sub_24A9D4(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 48), 8);
  _Unwind_Resume(a1);
}

id sub_24A9EC(uint64_t a1)
{
  id result;

  result = objc_msgSend(*(id *)(a1 + 32), "lineIndexForCharIndex:eol:", *(_QWORD *)(a1 + 48), *(unsigned __int8 *)(a1 + 56));
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = result;
  return result;
}

uint64_t sub_24BD60(uint64_t a1)
{
  TSAccessibilityPostLayoutChangedNotification(*(void **)(a1 + 32));
  return 1;
}

uint64_t sub_24BD7C(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 32), "tsaxSelect");
  TSAccessibilityPostLayoutChangedNotification(*(void **)(a1 + 40));
  return 1;
}

void sub_24C158(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_24C170(uint64_t a1, uint64_t a2)
{
  _Block_object_assign((void *)(a1 + 40), *(const void **)(a2 + 40), 131);
}

void sub_24C180(uint64_t a1)
{
  _Block_object_dispose(*(const void **)(a1 + 40), 131);
}

id sub_24C18C(uint64_t a1)
{
  id result;

  result = objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "tableRep"), "tsaxTableName");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40) = result;
  return result;
}

id sub_24D8E8(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "addAdditionalChildLayersToArray:", *(_QWORD *)(a1 + 40));
}

id sub_24D8F4(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "addChildViewsToArray:", *(_QWORD *)(a1 + 40));
}

id sub_24D9B8(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "endEditing");
}

id sub_24DC08(uint64_t a1)
{
  objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "_tsaxRepContainerElementCache"), "tsaxInvalidateChildrenImmediately");
  objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "_tsaxRepContainerElementCache"), "setRep:", 0);
  objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "_tsaxRepContainerElementCache"), "tsaxAccessibilityUnregister");
  return objc_msgSend(*(id *)(a1 + 32), "tsaxAccessibilityUnregister");
}

char *sub_24E400(uint64_t a1)
{
  char *result;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v10;
  __int128 v11;
  char v12;

  v12 = 0;
  result = (char *)objc_msgSend(*(id *)(a1 + 32), "paragraphIndexRangeForCharRange:", *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56));
  if (result < &result[v3])
  {
    v4 = result;
    v5 = v3;
    v10 = xmmword_3146B0;
    do
    {
      v6 = objc_msgSend(*(id *)(a1 + 32), "textRangeForParagraphAtIndex:", v4, v10);
      v8 = v7;
      v11 = v10;
      result = (char *)objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "valueForProperty:atCharIndex:effectiveRange:", 47, v6, &v11), "isEqualToString:", CFSTR("heading"));
      if ((_DWORD)result)
      {
        if (v6 == (id)v11 && v8 == *((_QWORD *)&v11 + 1))
        {
          result = (char *)(*(uint64_t (**)(_QWORD, id, uint64_t, NSNumber *, NSNumber *, char *))(*(_QWORD *)(a1 + 40) + 16))(*(_QWORD *)(a1 + 40), v6, v8, +[NSNumber numberWithUnsignedLongLong:](NSNumber, "numberWithUnsignedLongLong:", TSAccessibilityTraitHeader), +[NSNumber numberWithBool:](NSNumber, "numberWithBool:", 1), &v12);
          if (v12)
            break;
        }
      }
      ++v4;
      --v5;
    }
    while (v5);
  }
  return result;
}

void sub_24E7D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_24E7F0(uint64_t a1, uint64_t a2)
{
  _Block_object_assign((void *)(a1 + 40), *(const void **)(a2 + 40), 131);
}

void sub_24E800(uint64_t a1)
{
  _Block_object_dispose(*(const void **)(a1 + 40), 131);
}

id sub_24E80C(uint64_t a1, unint64_t a2, NSUInteger a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  id v12;
  unint64_t v13;
  BOOL v14;
  NSUInteger v15;
  NSUInteger v16;
  int ShouldCrashOnValidationErrorAfterLaunch;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  NSRange v23;
  uint64_t v25;
  NSRange v26;
  NSRange v27;

  if (!*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40))
  {
    v10 = *(_QWORD *)(a1 + 32);
    v11 = objc_opt_class(AXAttributedString);
    if ((objc_opt_isKindOfClass(v10, v11) & 1) != 0)
      v12 = *(id *)(a1 + 32);
    else
      v12 = objc_msgSend(objc_alloc((Class)AXAttributedString), "initWithString:", *(_QWORD *)(a1 + 32));
    *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40) = v12;
  }
  v13 = *(_QWORD *)(a1 + 48);
  v14 = a2 >= v13;
  v15 = a2 - v13;
  if (v14)
    v16 = v15;
  else
    v16 = 0;
  if (TSAccessibilityShouldPerformValidationChecks())
  {
    if (v16 >= (unint64_t)objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), "length"))
    {
      ShouldCrashOnValidationErrorAfterLaunch = TSAccessibilityShouldCrashOnValidationErrorAfterLaunch();
      if (__TSAccessibilityHandleValidationErrorWithDescription(ShouldCrashOnValidationErrorAfterLaunch, 0, (uint64_t)CFSTR("The attribute being applied is out of bounds!"), v18, v19, v20, v21, v22, v25))abort();
    }
  }
  v27.length = (NSUInteger)objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), "length");
  v26.location = v16;
  v26.length = a3;
  v27.location = 0;
  v23 = NSIntersectionRange(v26, v27);
  return objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), "setAttribute:forKey:withRange:", a5, a4, v23.location, v23.length);
}

id sub_24F118(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "setInsertionPoint:", objc_msgSend(*(id *)(a1 + 40), "_tsaxLastCharacterIndexForActivation"));
}

void sub_24FA70(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_24FA8C(uint64_t a1, void *a2, uint64_t a3, _BYTE *a4)
{
  id result;

  result = objc_msgSend(a2, "isEqual:", *(_QWORD *)(a1 + 32));
  if ((_DWORD)result)
  {
    *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = a3;
    *a4 = 1;
  }
  return result;
}

void sub_250140(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_250160(uint64_t a1)
{
  id result;

  result = objc_msgSend(*(id *)(a1 + 32), "rectsForSelection:", *(_QWORD *)(a1 + 40));
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40) = result;
  return result;
}

void sub_25063C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_250654(uint64_t a1, uint64_t a2)
{
  _Block_object_assign((void *)(a1 + 40), *(const void **)(a2 + 40), 131);
}

void sub_250664(uint64_t a1)
{
  _Block_object_dispose(*(const void **)(a1 + 40), 131);
}

id sub_250670(uint64_t a1)
{
  id result;

  result = objc_msgSend(*(id *)(a1 + 32), "valueForProperty:", *(unsigned int *)(a1 + 48));
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40) = result;
  return result;
}

NSString *THAccessibilityLocalizedString(uint64_t a1)
{
  NSString *v2;
  int ShouldCrashOnValidationErrorAfterLaunch;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = -[NSBundle localizedStringForKey:value:table:](+[NSBundle bundleForClass:](NSBundle, "bundleForClass:", objc_opt_class(THAccessibility)), "localizedStringForKey:value:table:", a1, &stru_43D7D8, CFSTR("THAccessibility"));
  if (TSAccessibilityShouldPerformValidationChecks())
  {
    if (v2 == (NSString *)a1)
    {
      ShouldCrashOnValidationErrorAfterLaunch = TSAccessibilityShouldCrashOnValidationErrorAfterLaunch();
      if (__TSAccessibilityHandleValidationErrorWithDescription(ShouldCrashOnValidationErrorAfterLaunch, 0, (uint64_t)CFSTR("error: String could not be found for key: %@"), v4, v5, v6, v7, v8, a1))abort();
    }
  }
  return v2;
}

NSString *THAccessibilityLocalizedTimeDescription(float a1)
{
  uint64_t v1;
  unint64_t v2;
  id v3;
  const __CFString *v4;
  NSString *v5;
  id v6;
  const __CFString *v7;
  NSString *v8;
  uint64_t v10;
  uint64_t v11;

  v1 = (int)a1;
  if ((int)v1 < 60)
  {
    v2 = 0;
  }
  else
  {
    v2 = v1 / 0x3CuLL;
    v1 = v1 % 0x3C;
  }
  v3 = TSAccessibilityLocalizedNumber((uint64_t)+[NSNumber numberWithInt:](NSNumber, "numberWithInt:", v1));
  if ((_DWORD)v1 == 1)
    v4 = CFSTR("time.unit.second.singular");
  else
    v4 = CFSTR("time.unit.second.plural");
  v5 = THAccessibilityLocalizedString((uint64_t)v4);
  if (!(_DWORD)v2)
    return +[NSString stringWithFormat:](NSString, "stringWithFormat:", THAccessibilityLocalizedString((uint64_t)CFSTR("time.format.seconds %@ %@")), v3, v5, v10, v11);
  v6 = TSAccessibilityLocalizedNumber((uint64_t)+[NSNumber numberWithInt:](NSNumber, "numberWithInt:", v2));
  if ((_DWORD)v2 == 1)
    v7 = CFSTR("time.unit.minute.singular");
  else
    v7 = CFSTR("time.unit.minute.plural");
  v8 = THAccessibilityLocalizedString((uint64_t)v7);
  return +[NSString stringWithFormat:](NSString, "stringWithFormat:", THAccessibilityLocalizedString((uint64_t)CFSTR("time.format.minutesandseconds %@ %@ %@ %@")), v6, v8, v3, v5);
}

uint64_t THAccessibilityIsFKAEnabledWithKeyboardAttached()
{
  uint64_t result;

  result = _AXSFullKeyboardAccessEnabled();
  if ((_DWORD)result)
    return GSEventIsHardwareKeyboardAttached() != 0;
  return result;
}

void sub_252DA8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_252DC0(uint64_t a1, uint64_t a2)
{
  _Block_object_assign((void *)(a1 + 40), *(const void **)(a2 + 40), 131);
}

void sub_252DD0(uint64_t a1)
{
  _Block_object_dispose(*(const void **)(a1 + 40), 131);
}

id sub_252DDC(uint64_t a1)
{
  id result;

  result = objc_msgSend(objc_alloc((Class)objc_msgSend(*(id *)(a1 + 32), "tsaxTargetClass")), "initWithTarget:context:", objc_msgSend(objc_msgSend(*(id *)(a1 + 40), "tsaxLinkURL"), "absoluteString"), 0);
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40) = result;
  return result;
}

id sub_252F5C(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "p_invokeAction");
}

void sub_2532E4(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 48), 8);
  _Unwind_Resume(a1);
}

id sub_253304(uint64_t a1)
{
  id result;

  result = objc_msgSend(*(id *)(a1 + 32), "thaxPerformActionAllowingToolbarHideRequestsWithBlock:", *(_QWORD *)(a1 + 40));
  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24) = 1;
  return result;
}

id sub_2533A8(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "showToolbarAnimated:", 0);
}

void sub_253488(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_2534A0(uint64_t a1, uint64_t a2)
{
  _Block_object_assign((void *)(a1 + 40), *(const void **)(a2 + 40), 131);
}

void sub_2534B0(uint64_t a1)
{
  _Block_object_dispose(*(const void **)(a1 + 40), 131);
}

id sub_2534BC(uint64_t a1)
{
  id result;

  result = objc_msgSend(*(id *)(a1 + 32), "chapterBrowserController:tocTileModelAtIndex:", *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 56));
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40) = result;
  return result;
}

void sub_253588(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_2535A0(uint64_t a1)
{
  id result;

  result = objc_msgSend(*(id *)(a1 + 32), "isTOCVisible");
  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = (_BYTE)result;
  return result;
}

id sub_2537C0(uint64_t a1)
{
  objc_super v2;

  v2.receiver = *(id *)(a1 + 32);
  v2.super_class = (Class)THBookViewControllerAccessibility;
  return objc_msgSendSuper2(&v2, "removeTOC");
}

id sub_253850(uint64_t a1)
{
  uint64_t v1;
  objc_super v3;

  v1 = *(_QWORD *)(a1 + 32);
  v3.receiver = *(id *)(a1 + 40);
  v3.super_class = (Class)THBookViewControllerAccessibility;
  return objc_msgSendSuper2(&v3, "donePressedFromToolbar:", v1);
}

void sub_2543E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_list va;

  va_start(va, a8);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_2543FC(uint64_t a1)
{
  id result;

  result = objc_msgSend(*(id *)(a1 + 32), "p_selectedTocViewController");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40) = result;
  return result;
}

id sub_2547A4(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "invalidateLayers");
}

id sub_254A94(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "presentRepExpanded:", *(_QWORD *)(a1 + 40));
}

id sub_254FA0(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "p_pageRight");
}

id sub_255004(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "p_pageLeft");
}

id sub_2550A4(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "p_horizontalOverscrollPreviousChapter");
}

id sub_255104(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "p_horizontalOverscrollNextChapter");
}

id sub_255164(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "p_verticalOverscrollPreviousChapter");
}

id sub_2551C4(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "p_verticalOverscrollNextChapter");
}

id sub_255260(uint64_t a1)
{
  return objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "thaxCanvasScrollView"), "_accessibilitySendScrollStatus");
}

id sub_255324(uint64_t a1)
{
  return objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "thaxCanvasScrollView"), "_accessibilitySendScrollStatus");
}

id sub_255394(uint64_t a1)
{
  return objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "tsaxValueForKey:", CFSTR("canvasScrollView")), "thaxSetScrollingDelegate:", 0);
}

id sub_255418(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "showToolbarAnimated:", 0);
}

void sub_25558C(uint64_t a1)
{
  id v1;
  id v2;
  id v3;
  id v4;
  id v5;

  v1 = objc_msgSend(*(id *)(a1 + 32), "tsaxChildren");
  if (objc_msgSend(v1, "count"))
  {
    v2 = objc_alloc_init((Class)NSMutableArray);
    v5 = v2;
    v3 = v1;
    while (1)
    {
      objc_msgSend(v2, "tsaxAddObjectsInReverseOrder:", v3);
      if (!objc_msgSend(v5, "count"))
      {

        return;
      }
      v4 = objc_msgSend(v5, "tsaxPopObject");
      if ((objc_msgSend(v4, "isAccessibilityElement") & 1) != 0)
        break;
      v3 = objc_msgSend(v4, "accessibilityElements");
      v2 = v5;
    }

    if (v4)
      -[TSAccessibility setFirstElementForUpcomingScreenChange:](+[TSAccessibility sharedInstance](TSAccessibility, "sharedInstance"), "setFirstElementForUpcomingScreenChange:", v4);
  }
}

id sub_2559A4(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 32), "thaxSetScrollingDelegate:", *(_QWORD *)(a1 + 40));
  return objc_msgSend(*(id *)(a1 + 32), "tsaxSetUseContentInset:", 1);
}

void sub_255AD8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_list va;

  va_start(va, a8);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_255AF0(uint64_t a1, uint64_t a2)
{
  _Block_object_assign((void *)(a1 + 40), *(const void **)(a2 + 40), 131);
}

void sub_255B00(uint64_t a1)
{
  _Block_object_dispose(*(const void **)(a1 + 40), 131);
}

id sub_255B0C(uint64_t a1)
{
  id result;

  result = objc_msgSend(*(id *)(a1 + 32), "bodyStorageForPresentationType:", *(_QWORD *)(a1 + 40));
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40) = result;
  return result;
}

void sub_255C2C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_list va;

  va_start(va, a8);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_255C44(uint64_t a1)
{
  id result;

  result = objc_msgSend(*(id *)(a1 + 32), "nodeUniqueIDForInfo:", *(_QWORD *)(a1 + 40));
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40) = result;
  return result;
}

void sub_255D24(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_255D3C(uint64_t a1)
{
  id result;

  result = objc_msgSend(*(id *)(a1 + 32), "infoForNodeUniqueID:forPresentationType:", *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48));
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 40) = result;
  return result;
}

id sub_256788(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "handleHyperlink:hitRep:", *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48));
}

void sub_256CC8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_list va;

  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_256CE4(uint64_t a1, uint64_t a2)
{
  _Block_object_assign((void *)(a1 + 40), *(const void **)(a2 + 40), 131);
}

void sub_256CF4(uint64_t a1)
{
  _Block_object_dispose(*(const void **)(a1 + 40), 131);
}

id sub_256D00(uint64_t a1)
{
  id result;

  result = objc_msgSend(*(id *)(a1 + 32), "repForLayout:", objc_msgSend(*(id *)(a1 + 40), "tsaxValueForKey:", CFSTR("resultsLayout")));
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40) = result;
  return result;
}

id sub_256D44(uint64_t a1)
{
  id result;

  result = objc_msgSend(*(id *)(a1 + 32), "repForLayout:", objc_msgSend(*(id *)(a1 + 40), "tsaxValueForKey:", CFSTR("checkingLayout")));
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40) = result;
  return result;
}

id sub_256FFC(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "animateTopCardToBottomInDirection:", -1.0, 0.0);
}

id sub_257064(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "animateBottomCardToTopInDirection:", 1.0, 0.0);
}

void sub_257108(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_257120(uint64_t a1)
{
  id result;

  result = objc_msgSend(*(id *)(a1 + 32), "isShowingEmptyStudyCard");
  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = (_BYTE)result;
  return result;
}

void sub_25763C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_257654(uint64_t a1)
{
  id result;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  result = objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "thaxDelegate"), "overlayableZoomableCanvasController:expandBoundsForHitTesting:", *(_QWORD *)(a1 + 32), *(double *)(a1 + 48), *(double *)(a1 + 56), *(double *)(a1 + 64), *(double *)(a1 + 72));
  v3 = *(_QWORD **)(*(_QWORD *)(a1 + 40) + 8);
  v3[4] = v4;
  v3[5] = v5;
  v3[6] = v6;
  v3[7] = v7;
  return result;
}

void sub_257FB0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_257FC8(uint64_t a1, uint64_t a2)
{
  _Block_object_assign((void *)(a1 + 40), *(const void **)(a2 + 40), 131);
}

void sub_257FD8(uint64_t a1)
{
  _Block_object_dispose(*(const void **)(a1 + 40), 131);
}

id sub_257FE4(uint64_t a1)
{
  id result;

  result = objc_msgSend(*(id *)(a1 + 32), "p_repForQuestion:", *(_QWORD *)(a1 + 40));
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40) = result;
  return result;
}

id sub_258094(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 32), "thaxSetScrollingDelegate:", 0);
  return objc_msgSend(*(id *)(a1 + 32), "tsaxSetScrollStatusFormatString:", 0);
}

id sub_258198(uint64_t a1)
{
  void *v2;
  NSString *v3;

  objc_msgSend(*(id *)(a1 + 32), "thaxSetScrollingDelegate:", *(_QWORD *)(a1 + 40));
  v2 = *(void **)(a1 + 32);
  v3 = TSAccessibilityLocalizedString((uint64_t)CFSTR("glossary.scroll.view.status.string.format"));
  return objc_msgSend(v2, "tsaxSetScrollStatusFormatString:", v3);
}

void sub_25849C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_2584B4(uint64_t a1, uint64_t a2)
{
  _Block_object_assign((void *)(a1 + 40), *(const void **)(a2 + 40), 131);
}

void sub_2584C4(uint64_t a1)
{
  _Block_object_dispose(*(const void **)(a1 + 40), 131);
}

id sub_2584D0(uint64_t a1)
{
  id result;

  result = objc_msgSend(*(id *)(a1 + 32), "contentNodeForRelativePageIndex:forPresentationType:", *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 40));
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40) = result;
  return result;
}

void sub_2585B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_2585C8(uint64_t a1)
{
  id result;
  uint64_t v3;
  uint64_t v4;

  result = objc_msgSend(*(id *)(a1 + 32), "absolutePageRangeForPresentationType:", *(_QWORD *)(a1 + 40));
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
  *(_QWORD *)(v3 + 32) = result;
  *(_QWORD *)(v3 + 40) = v4;
  return result;
}

void sub_25898C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_2589A4(uint64_t a1, uint64_t a2)
{
  _Block_object_assign((void *)(a1 + 40), *(const void **)(a2 + 40), 131);
}

void sub_2589B4(uint64_t a1)
{
  _Block_object_dispose(*(const void **)(a1 + 40), 131);
}

id sub_2589C0(uint64_t a1)
{
  id result;

  result = objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "tsaxTargetClass"), "paginatedPresentationTypeInContext:", *(_QWORD *)(a1 + 40));
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40) = result;
  return result;
}

void sub_258B34(uint64_t a1)
{
  id v1;

  v1 = objc_msgSend(objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "view"), "window"), "tsaxFindDescendantPassingTest:", &stru_43C3D0);
  if (v1)
    UIAccessibilityPostNotification(TSAccessibilityMoveToElementNotification, v1);
}

BOOL sub_258B78(id a1, id a2)
{
  Class v3;
  unint64_t v4;

  v3 = NSClassFromString(CFSTR("TSWPRep"));
  if ((objc_opt_isKindOfClass(a2, v3) & 1) == 0)
    return 0;
  v4 = (unint64_t)objc_msgSend(a2, "accessibilityTraits");
  return (TSAccessibilityTraitHeader & v4) != 0;
}

id sub_25900C(uint64_t a1)
{
  void *v1;
  id result;
  id v3;
  uint64_t v4;
  void *v5;
  id v6;
  _QWORD v7[5];
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  _BYTE v12[128];

  v8 = 0u;
  v9 = 0u;
  v10 = 0u;
  v11 = 0u;
  v1 = *(void **)(a1 + 32);
  result = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
  if (result)
  {
    v3 = result;
    v4 = *(_QWORD *)v9;
    do
    {
      v5 = 0;
      do
      {
        if (*(_QWORD *)v9 != v4)
          objc_enumerationMutation(v1);
        v6 = objc_msgSend(objc_msgSend(*(id *)(*((_QWORD *)&v8 + 1) + 8 * (_QWORD)v5), "tsaxValueForKey:", CFSTR("mICC")), "tsaxValueForKey:", CFSTR("canvasView"));
        v7[0] = _NSConcreteStackBlock;
        v7[1] = 3221225472;
        v7[2] = sub_259160;
        v7[3] = &unk_426DD0;
        v7[4] = v6;
        if (__TSAccessibilityPerformSafeBlock((uint64_t)v7))
          abort();
        v5 = (char *)v5 + 1;
      }
      while (v3 != v5);
      result = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
      v3 = result;
    }
    while (result);
  }
  return result;
}

id sub_259160(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "tsaxInvalidateChildrenEventually");
}

void sub_25926C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_259294(uint64_t a1)
{
  id v2;

  v2 = objc_msgSend(*(id *)(a1 + 32), "tsaxRepForInfo:", *(_QWORD *)(a1 + 40));
  if (v2)
  {
    UIAccessibilityPostNotification(TSAccessibilityMoveToElementNotification, v2);
    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24) = 1;
  }
}

void sub_259488(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_2594A8(uint64_t a1, uint64_t a2)
{
  _Block_object_assign((void *)(a1 + 40), *(const void **)(a2 + 40), 131);
}

void sub_2594B8(uint64_t a1)
{
  _Block_object_dispose(*(const void **)(a1 + 40), 131);
}

id sub_2594C4(uint64_t a1)
{
  id result;

  result = objc_msgSend(*(id *)(a1 + 32), "objectForKey:", *(_QWORD *)(a1 + 48));
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40) = result;
  return result;
}

id sub_25986C(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "p_showOverlay:withAutoHide:", *(_QWORD *)(a1 + 40), 0);
}

id sub_2599D4(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "p_hideOverlay:", *(_QWORD *)(a1 + 40));
}

id sub_259C54(uint64_t a1)
{
  id v1;
  uint64_t v2;
  id v3;
  double v4;
  CGFloat v5;
  double v6;
  CGFloat v7;
  double v8;
  CGFloat v9;
  double v10;
  CGFloat v11;
  id result;
  id v13;
  uint64_t v14;
  void *v15;
  void *v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  _BYTE v21[128];
  CGRect v22;
  CGRect v23;

  v1 = objc_msgSend(*(id *)(a1 + 32), "_thaxView");
  v2 = objc_opt_class(UIImageView);
  v3 = objc_msgSend(v1, "subviews");
  objc_msgSend(objc_msgSend(v1, "window"), "bounds");
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v11 = v10;
  v17 = 0u;
  v18 = 0u;
  v19 = 0u;
  v20 = 0u;
  result = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v17, v21, 16);
  if (result)
  {
    v13 = result;
    v14 = *(_QWORD *)v18;
    do
    {
      v15 = 0;
      do
      {
        if (*(_QWORD *)v18 != v14)
          objc_enumerationMutation(v3);
        v16 = *(void **)(*((_QWORD *)&v17 + 1) + 8 * (_QWORD)v15);
        if ((objc_opt_isKindOfClass(v16, v2) & 1) != 0)
        {
          objc_msgSend(v16, "frame");
          v23.origin.x = v5;
          v23.origin.y = v7;
          v23.size.width = v9;
          v23.size.height = v11;
          if (CGRectEqualToRect(v22, v23))
          {
            objc_msgSend(v16, "setIsAccessibilityElement:", 1);
            objc_msgSend(v16, "setAccessibilityLabel:", THAccessibilityLocalizedString((uint64_t)CFSTR("introduction.image")));
            objc_msgSend(v16, "setAccessibilityHint:", THAccessibilityLocalizedString((uint64_t)CFSTR("introduction.image.hint.iOS")));
          }
        }
        v15 = (char *)v15 + 1;
      }
      while (v13 != v15);
      result = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v17, v21, 16);
      v13 = result;
    }
    while (result);
  }
  return result;
}

id sub_259EBC(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "p_nextPage");
}

id sub_25A09C(uint64_t a1)
{
  objc_super v2;

  v2.receiver = *(id *)(a1 + 32);
  v2.super_class = (Class)THWAdornmentControllerAccessibility;
  return objc_msgSendSuper2(&v2, "setAdornmentsVisible:", 1);
}

id sub_25A130(uint64_t a1)
{
  objc_super v2;

  v2.receiver = *(id *)(a1 + 32);
  v2.super_class = (Class)THWAdornmentControllerAccessibility;
  return objc_msgSendSuper2(&v2, "setAdornmentsVisible:", 0);
}

void sub_25A7A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_25A7C4(uint64_t a1, uint64_t a2)
{
  _Block_object_assign((void *)(a1 + 40), *(const void **)(a2 + 40), 131);
}

void sub_25A7D4(uint64_t a1)
{
  _Block_object_dispose(*(const void **)(a1 + 40), 131);
}

id sub_25A7E0(uint64_t a1, uint64_t a2, uint64_t a3, _BYTE *a4)
{
  objc_class *v7;
  void *v8;
  void *v9;
  id result;
  char v11;

  v11 = 0;
  v7 = (objc_class *)objc_opt_class(NSString);
  v8 = (void *)__TSAccessibilityCastAsClass(v7, a3, 1, &v11);
  if (v11)
    abort();
  v9 = v8;
  result = objc_msgSend(v8, "length");
  if (result)
  {
    *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40) = v9;
    *a4 = 1;
  }
  return result;
}

void sub_25AA44(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 48), 8);
  _Unwind_Resume(a1);
}

id sub_25AA5C(uint64_t a1)
{
  id result;

  result = objc_msgSend(*(id *)(a1 + 32), "indexOfNode:", *(_QWORD *)(a1 + 40));
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24) = result;
  return result;
}

uint64_t sub_25B094(uint64_t a1)
{
  uint64_t result;

  result = objc_opt_respondsToSelector(*(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40));
  if ((result & 1) != 0)
    return (uint64_t)objc_msgSend(*(id *)(a1 + 32), "performSelector:", *(_QWORD *)(a1 + 40));
  return result;
}

void sub_25C630(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_25C648(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_25C658(uint64_t a1)
{

}

void sub_25C660(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v2 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "accessibilityRegionsForCurrentEvent"));
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

id sub_25C7A4(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "gotoNextEvent");
}

id sub_25C830(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "gotoPreviousEvent");
}

id sub_25CD40(uint64_t a1)
{
  id v2;
  id v3;
  id v4;
  float v5;
  double v6;

  v2 = objc_msgSend(*(id *)(a1 + 32), "tsaxBoolValueForKey:", CFSTR("_isTracking"));
  v3 = objc_msgSend(*(id *)(a1 + 32), "tsaxBoolValueForKey:", CFSTR("_needsCommit"));
  v4 = objc_msgSend(*(id *)(a1 + 32), "tsaxBoolValueForKey:", CFSTR("_canCommit"));
  objc_msgSend(*(id *)(a1 + 32), "setValue:forKey:", &__kCFBooleanTrue, CFSTR("_isTracking"));
  objc_msgSend(*(id *)(a1 + 32), "setValue:forKey:", &__kCFBooleanTrue, CFSTR("_needsCommit"));
  objc_msgSend(*(id *)(a1 + 32), "setValue:forKey:", &__kCFBooleanTrue, CFSTR("_canCommit"));
  objc_msgSend(*(id *)(a1 + 32), "thaxDuration");
  *(float *)&v6 = v5 * *(float *)(a1 + 40);
  objc_msgSend(*(id *)(a1 + 32), "_setValueWhileTracking:", v6);
  objc_msgSend(*(id *)(a1 + 32), "sendActionsForControlEvents:", 4096);
  objc_msgSend(*(id *)(a1 + 32), "setValue:forKey:", +[NSNumber numberWithBool:](NSNumber, "numberWithBool:", v4), CFSTR("_canCommit"));
  objc_msgSend(*(id *)(a1 + 32), "setValue:forKey:", +[NSNumber numberWithBool:](NSNumber, "numberWithBool:", v3), CFSTR("_needsCommit"));
  return objc_msgSend(*(id *)(a1 + 32), "setValue:forKey:", +[NSNumber numberWithBool:](NSNumber, "numberWithBool:", v2), CFSTR("_isTracking"));
}

id sub_25D5BC(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "done:", 0);
}

void sub_25D69C(uint64_t a1)
{
  _QWORD v1[5];

  v1[0] = _NSConcreteStackBlock;
  v1[1] = 3221225472;
  v1[2] = sub_25D70C;
  v1[3] = &unk_427830;
  v1[4] = *(_QWORD *)(a1 + 32);
  if (__TSAccessibilityPerformSafeBlock((uint64_t)v1))
    abort();
  UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0);
}

uint64_t sub_25D70C(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 32);
  if (result)
    return (*(uint64_t (**)(void))(result + 16))();
  return result;
}

id sub_25D928(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "thaxAnnounceCurrentGalleryItem");
}

id sub_25DD24(uint64_t a1)
{
  return objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "thaxPopoverParentView"), "thaxSetPresentedWidgetPopoverController:", 0);
}

id sub_25DE14(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "thaxSetPresentedWidgetPopoverController:", *(_QWORD *)(a1 + 40));
}

id sub_25E0F8(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "followLink:", *(_QWORD *)(a1 + 40));
}

id sub_25E194(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 32), "tsaxSetUseContentInset:", 0);
  objc_msgSend(*(id *)(a1 + 32), "thaxSetScrollingDelegate:", 0);
  objc_msgSend(*(id *)(a1 + 40), "tsaxSetUseContentInset:", 1);
  return objc_msgSend(*(id *)(a1 + 40), "thaxSetScrollingDelegate:", *(_QWORD *)(a1 + 48));
}

id sub_25E2E0(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 32), "tsaxSetShouldIgnoreSiblingPageControl:", 0);
  objc_msgSend(*(id *)(a1 + 32), "thaxSetScrollingDelegate:", 0);
  return objc_msgSend(*(id *)(a1 + 32), "tsaxSetScrollAnnouncementDelay:", 0.0);
}

id sub_25E31C(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 32), "tsaxSetShouldIgnoreSiblingPageControl:", 1);
  objc_msgSend(*(id *)(a1 + 32), "thaxSetScrollingDelegate:", *(_QWORD *)(a1 + 40));
  return objc_msgSend(*(id *)(a1 + 32), "tsaxSetScrollAnnouncementDelay:", 0.2);
}

id sub_25E454(uint64_t a1)
{
  uint64_t v1;
  objc_super v3;

  v1 = *(unsigned __int8 *)(a1 + 40);
  v3.receiver = *(id *)(a1 + 32);
  v3.super_class = (Class)THChapterBrowserControllerAccessibility;
  return objc_msgSendSuper2(&v3, "viewDidAppear:", v1);
}

id sub_25ED60(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "p_resetPagesScrollViewAndCapThumbCount:firstVisibleRelativePage:resetContentOffset:", 0, 0, 1);
}

void sub_25EEA4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_25EEBC(uint64_t a1, uint64_t a2)
{
  _Block_object_assign((void *)(a1 + 40), *(const void **)(a2 + 40), 131);
}

void sub_25EECC(uint64_t a1)
{
  _Block_object_dispose(*(const void **)(a1 + 40), 131);
}

id sub_25EED8(uint64_t a1)
{
  id v2;
  id result;

  v2 = objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "_axTileModelOfChapterAtIndex:", *(unsigned int *)(a1 + 48)), "tsaxValueForKey:", CFSTR("portraitEntries"));
  result = objc_msgSend(v2, "count");
  if (result)
  {
    result = objc_msgSend(objc_msgSend(v2, "objectAtIndex:", 0), "tsaxValueForKey:", CFSTR("sectionIdentifier"));
    *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40) = result;
  }
  return result;
}

void sub_25F72C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  uint64_t v11;
  va_list va;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  va_list va1;

  va_start(va1, a9);
  va_start(va, a9);
  v11 = va_arg(va1, _QWORD);
  v13 = va_arg(va1, _QWORD);
  v14 = va_arg(va1, _QWORD);
  v15 = va_arg(va1, _QWORD);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Block_object_dispose((const void *)(v9 - 160), 8);
  _Unwind_Resume(a1);
}

NSArray *sub_25F784(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  CGFloat v5;
  CGFloat v6;
  CGFloat v7;
  uint64_t v8;
  void *v9;
  id v10;
  id v11;
  id v12;
  uint64_t v13;
  void *i;
  void *v15;
  CGFloat v16;
  CGFloat v17;
  CGFloat v18;
  CGFloat v19;
  Class v20;
  NSArray *v21;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  _BYTE v27[128];
  CGRect v28;
  CGRect v29;

  objc_msgSend(*(id *)(a1 + 32), "contentOffset");
  v2 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  *(_QWORD *)(v2 + 32) = v3;
  *(_QWORD *)(v2 + 40) = v4;
  v5 = *(double *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 32);
  v6 = *(double *)(a1 + 48);
  v7 = *(double *)(a1 + 56);
  v9 = (void *)objc_opt_new(NSMutableArray, v8);
  v10 = objc_msgSend(*(id *)(a1 + 32), "subviews");
  v23 = 0u;
  v24 = 0u;
  v25 = 0u;
  v26 = 0u;
  v11 = objc_msgSend(v10, "countByEnumeratingWithState:objects:count:", &v23, v27, 16);
  if (v11)
  {
    v12 = v11;
    v13 = *(_QWORD *)v24;
    do
    {
      for (i = 0; i != v12; i = (char *)i + 1)
      {
        if (*(_QWORD *)v24 != v13)
          objc_enumerationMutation(v10);
        v15 = *(void **)(*((_QWORD *)&v23 + 1) + 8 * (_QWORD)i);
        objc_msgSend(v15, "frame");
        v29.origin.x = v16;
        v29.origin.y = v17;
        v29.size.width = v18;
        v29.size.height = v19;
        v28.origin.y = 0.0;
        v28.origin.x = v5;
        v28.size.width = v6;
        v28.size.height = v7;
        if (CGRectIntersectsRect(v28, v29))
        {
          v20 = NSClassFromString(CFSTR("THPageThumbnailView"));
          if ((objc_opt_isKindOfClass(v15, v20) & 1) != 0)
            objc_msgSend(v9, "addObject:", v15);
        }
      }
      v12 = objc_msgSend(v10, "countByEnumeratingWithState:objects:count:", &v23, v27, 16);
    }
    while (v12);
  }
  objc_msgSend(v9, "sortUsingComparator:", &stru_43C4B0);
  v21 = +[NSArray arrayWithArray:](NSArray, "arrayWithArray:", v9);

  return v21;
}

int64_t sub_25F93C(id a1, id a2, id a3)
{
  unsigned int v5;
  unsigned int v6;
  unsigned int v8;
  unsigned int v9;

  v5 = objc_msgSend(a2, "tsaxUnsignedIntValueForKey:", CFSTR("chapterIndex"));
  v6 = objc_msgSend(a3, "tsaxUnsignedIntValueForKey:", CFSTR("chapterIndex"));
  if (v5 < v6)
    return -1;
  if (v6 < v5)
    return 1;
  v8 = objc_msgSend(a2, "tsaxUnsignedIntValueForKey:", CFSTR("pageIndex"));
  v9 = objc_msgSend(a3, "tsaxUnsignedIntValueForKey:", CFSTR("pageIndex"));
  if (v8 >= v9)
    return v9 < v8;
  else
    return -1;
}

id sub_25F9E0(_QWORD *a1, void *a2, uint64_t a3, _BYTE *a4)
{
  id result;

  result = objc_msgSend(a2, "tsaxUnsignedIntValueForKey:", CFSTR("chapterIndex"));
  if (a1[6] == result)
  {
    *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 40) = a2;
    *a4 = 1;
  }
  else
  {
    *(_BYTE *)(*(_QWORD *)(a1[5] + 8) + 24) = 1;
  }
  return result;
}

void sub_25FE18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_25FE30(uint64_t a1, uint64_t a2)
{
  _Block_object_assign((void *)(a1 + 40), *(const void **)(a2 + 40), 131);
}

void sub_25FE40(uint64_t a1)
{
  _Block_object_dispose(*(const void **)(a1 + 40), 131);
}

id sub_25FE4C(uint64_t a1)
{
  id result;

  result = objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "thaxPageController"), "thaxCurrentPageNumberUsingPhysicalBookFormatString:", 0);
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40) = result;
  return result;
}

void sub_25FF2C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

NSUInteger sub_25FF44(NSRange *a1, uint64_t a2, void *a3)
{
  void *v5;
  Class v6;
  NSUInteger result;
  NSRange v8;
  char v9;
  NSRange v10;

  v9 = 0;
  v5 = (void *)objc_opt_class(THCachedAnnotationAccessibility);
  v6 = __TSAccessibilityCastAsSafeCategory(v5, (uint64_t)objc_msgSend(a3, "tsaxValueForKey:", CFSTR("annotation")), 1, &v9);
  if (v9)
    abort();
  v10.location = (NSUInteger)-[objc_class thaxAnnotationStorageRange](v6, "thaxAnnotationStorageRange");
  v8 = NSIntersectionRange(v10, a1[3]);
  result = v8.location;
  if (v8.length)
    result = (*(uint64_t (**)(void))(a1[2].location + 16))();
  ++*(_QWORD *)(*(_QWORD *)(a1[2].length + 8) + 24);
  return result;
}

void sub_2600E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

Class sub_260100(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v8;
  Class result;

  v8 = (void *)objc_opt_class(THTSWPHyperlinkFieldAccessibility);
  result = __TSAccessibilityCastAsSafeCategory(v8, a2, 0, 0);
  if (result)
  {
    result = (Class)objc_msgSend(*(id *)(a1 + 32), "thaxHyperlinkFieldRepresentsAGlossaryTerm:", result);
    if ((_DWORD)result)
    {
      objc_msgSend(objc_msgSend(*(id *)(a1 + 40), "tsaxStorage"), "tsaxSubstringWithRange:", a3, a4);
      result = (Class)(*(uint64_t (**)(void))(*(_QWORD *)(a1 + 48) + 16))();
    }
  }
  ++*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 24);
  return result;
}

void sub_2602A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

Class sub_2602B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v8;
  Class result;

  v8 = (void *)objc_opt_class(THTSWPHyperlinkFieldAccessibility);
  result = __TSAccessibilityCastAsSafeCategory(v8, a2, 0, 0);
  if (result)
  {
    result = (Class)objc_msgSend(*(id *)(a1 + 32), "thaxHyperlinkFieldRepresentsAGlossaryTerm:", result);
    if ((result & 1) == 0)
    {
      objc_msgSend(objc_msgSend(*(id *)(a1 + 40), "tsaxStorage"), "tsaxSubstringWithRange:", a3, a4);
      result = (Class)(*(uint64_t (**)(void))(*(_QWORD *)(a1 + 48) + 16))();
    }
  }
  ++*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 24);
  return result;
}

void sub_260508(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 96), 8);
  _Unwind_Resume(a1);
}

uint64_t sub_260524(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, _BYTE *a6)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
  if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24))
    *a6 = 1;
  return result;
}

uint64_t sub_260574(uint64_t a1, uint64_t a2, void *a3, _BYTE *a4)
{
  uint64_t result;

  objc_msgSend(a3, "thaxAnnotationStorageRange");
  objc_msgSend(a3, "thaxHighlightStyleDescription");
  result = (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
  if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24))
    *a4 = 1;
  return result;
}

uint64_t sub_260604(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, _BYTE *a6)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
  if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24))
    *a6 = 1;
  return result;
}

uint64_t sub_26066C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, _BYTE *a6)
{
  uint64_t result;

  (*(void (**)(_QWORD, uint64_t, uint64_t, NSNumber *, void *, uint64_t))(*(_QWORD *)(a1 + 32) + 16))(*(_QWORD *)(a1 + 32), a4, a5, +[NSNumber numberWithUnsignedLongLong:](NSNumber, "numberWithUnsignedLongLong:", TSAccessibilityTraitLink), &__kCFBooleanTrue, *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24);
  result = (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
  if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24))
    *a6 = 1;
  return result;
}

void sub_2609E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_2609FC(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40), "_thaxRotorItemForPredicate:fromItems:", a2, objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40), "_thaxHighlightsRotorItems"));
}

void sub_260B2C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_260B44(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40), "_thaxRotorItemForPredicate:fromItems:", a2, objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40), "_thaxLinksRotorItems"));
}

void sub_260C74(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_260C8C(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40), "_thaxRotorItemForPredicate:fromItems:", a2, objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40), "_thaxGlossaryTermsRotorItems"));
}

BOOL sub_260F24(uint64_t a1, void *a2)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = objc_msgSend(a2, "tsaxRange");
  v5 = v4;
  return v3 == objc_msgSend(*(id *)(a1 + 32), "tsaxRange") && v5 == v6;
}

void sub_261010(id a1, THWPRepCustomRotorItemAccessibilityElement *a2, unint64_t a3, BOOL *a4)
{
  -[THWPRepCustomRotorItemAccessibilityElement setAccessibilityContainer:](a2, "setAccessibilityContainer:", 0, a4);
}

void sub_26101C(id a1, THWPRepCustomRotorItemAccessibilityElement *a2, unint64_t a3, BOOL *a4)
{
  -[THWPRepCustomRotorItemAccessibilityElement setAccessibilityContainer:](a2, "setAccessibilityContainer:", 0, a4);
}

void sub_261028(id a1, THWPRepCustomRotorItemAccessibilityElement *a2, unint64_t a3, BOOL *a4)
{
  -[THWPRepCustomRotorItemAccessibilityElement setAccessibilityContainer:](a2, "setAccessibilityContainer:", 0, a4);
}

void sub_26114C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  id v6;
  uint64_t v7;
  id v8;

  v6 = objc_msgSend(*(id *)(a1 + 32), "tsaxRepRangeWithStorageRange:", a4, a5);
  v8 = +[TSDTextRangeAccessibility tsaxNewTextRangeWithRange:](TSDTextRangeAccessibility, "tsaxNewTextRangeWithRange:", v6, v7);
  objc_msgSend(*(id *)(a1 + 40), "addObject:", v8);

}

void sub_261258(uint64_t a1, uint64_t a2, void *a3)
{
  id v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  id v8;

  v4 = objc_msgSend(a3, "thaxAnnotationStorageRange");
  v6 = objc_msgSend(*(id *)(a1 + 32), "tsaxRepRangeWithStorageRange:", v4, v5);
  v8 = +[TSDTextRangeAccessibility tsaxNewTextRangeWithRange:](TSDTextRangeAccessibility, "tsaxNewTextRangeWithRange:", v6, v7);
  objc_msgSend(*(id *)(a1 + 40), "addObject:", v8);

}

void sub_26136C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  id v6;
  uint64_t v7;
  id v8;

  v6 = objc_msgSend(*(id *)(a1 + 32), "tsaxRepRangeWithStorageRange:", a4, a5);
  v8 = +[TSDTextRangeAccessibility tsaxNewTextRangeWithRange:](TSDTextRangeAccessibility, "tsaxNewTextRangeWithRange:", v6, v7);
  objc_msgSend(*(id *)(a1 + 40), "addObject:", v8);

}

id sub_261664(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "p_selectAnswer");
}

void sub_263FE0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_263FF8(uint64_t a1, uint64_t a2)
{
  _Block_object_assign((void *)(a1 + 40), *(const void **)(a2 + 40), 131);
}

void sub_264008(uint64_t a1)
{
  _Block_object_dispose(*(const void **)(a1 + 40), 131);
}

uint64_t sub_264014(uint64_t a1, uint64_t a2, _BYTE *a3)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
  if ((_DWORD)result)
  {
    *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40) = a2;
    *a3 = 1;
  }
  return result;
}

id sub_2644B4(uint64_t a1)
{
  uint64_t v1;
  objc_super v3;

  v1 = *(unsigned __int8 *)(a1 + 40);
  v3.receiver = *(id *)(a1 + 32);
  v3.super_class = (Class)THFlowTOCViewControllerAccessibility;
  return objc_msgSendSuper2(&v3, "viewDidAppear:", v1);
}

void sub_26456C(uint64_t a1)
{
  id v2;

  objc_msgSend(*(id *)(a1 + 32), "_axShowToolbar");
  v2 = objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "thaxDelegate"), "tsaxValueForKey:", CFSTR("closeButton"));
  UIAccessibilityPostNotification(TSAccessibilityMoveToElementNotification, v2);
}

id sub_2648B0(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "p_updateWithNewPageIndex:animated:", *(_QWORD *)(a1 + 40), 0);
}

id sub_264944(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "p_updateWithNewPageIndex:animated:", *(_QWORD *)(a1 + 40), 0);
}

id sub_264D50(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "p_returnToOriginalViewController");
}

id sub_265508(uint64_t a1)
{
  void *v1;
  _QWORD v3[5];

  v1 = *(void **)(a1 + 32);
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_26555C;
  v3[3] = &unk_426DD0;
  v3[4] = v1;
  return objc_msgSend(v1, "thaxPerformActionAllowingToolbarHideRequestsWithBlock:", v3);
}

id sub_26555C(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "hideToolbarAnimated:", 0);
}

id sub_265660(uint64_t a1)
{
  uint64_t v1;
  objc_super v3;

  v1 = *(unsigned __int8 *)(a1 + 40);
  v3.receiver = *(id *)(a1 + 32);
  v3.super_class = (Class)THTOCViewControllerAccessibility;
  return objc_msgSendSuper2(&v3, "viewDidAppear:", v1);
}

char *sub_265754(uint64_t a1)
{
  id v2;
  char *v3;
  char *result;
  id v5;
  UIAccessibilityTraits v6;
  char *v7;
  id v8;
  void *v9;
  unint64_t v10;
  unint64_t v11;

  v2 = objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "tsaxValueForKey:", CFSTR("accessibilityContainer")), "tsaxValueForKey:", CFSTR("accessibilityElements"));
  v3 = (char *)objc_msgSend(v2, "count");
  result = (char *)objc_msgSend(v2, "indexOfObject:", *(_QWORD *)(a1 + 32));
  if (result != (char *)0x7FFFFFFFFFFFFFFFLL)
  {
    v5 = 0;
    v6 = UIAccessibilityTraitCausesPageTurn;
    v7 = result + 1;
    while (v7 < v3)
    {
      v8 = objc_msgSend(v2, "objectAtIndex:", v7);
      v9 = v8;
      if (!v5)
        v5 = v8;
      v10 = (unint64_t)objc_msgSend(v8, "accessibilityTraits");
      if ((v6 & v10) == 0)
      {
        v11 = v10;
        if ((objc_msgSend(v9, "conformsToProtocol:", &OBJC_PROTOCOL___UIAccessibilityReadingContent) & 1) == 0)
        {
          ++v7;
          if ((TSAccessibilityTraitBookContent & v11) == 0)
            continue;
        }
      }
      return (char *)-[TSAccessibility setFirstElementForUpcomingPageTurn:](+[TSAccessibility sharedInstance](TSAccessibility, "sharedInstance"), "setFirstElementForUpcomingPageTurn:", v9);
    }
    v9 = v5;
    return (char *)-[TSAccessibility setFirstElementForUpcomingPageTurn:](+[TSAccessibility sharedInstance](TSAccessibility, "sharedInstance"), "setFirstElementForUpcomingPageTurn:", v9);
  }
  return result;
}

id sub_265BC0(uint64_t a1)
{
  return objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "tsaxValueForKey:", CFSTR("mScrollView")), "thaxSetVerticalScrollingDisabled:", 1);
}

id sub_265CBC(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "p_showEditorForHighlight:", *(_QWORD *)(a1 + 40));
}

void sub_265D74(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_265D8C(uint64_t a1, uint64_t a2)
{
  _Block_object_assign((void *)(a1 + 40), *(const void **)(a2 + 40), 131);
}

void sub_265D9C(uint64_t a1)
{
  _Block_object_dispose(*(const void **)(a1 + 40), 131);
}

id sub_265DA8(uint64_t a1)
{
  id result;

  result = objc_msgSend(*(id *)(a1 + 32), "highlightAtCanvasPoint:", *(double *)(a1 + 48), *(double *)(a1 + 56));
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40) = result;
  return result;
}

void sub_265E88(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_265EA0(uint64_t a1)
{
  id result;

  result = objc_msgSend(*(id *)(a1 + 32), "annotationForRange:", *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56));
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40) = result;
  return result;
}

void sub_265F80(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_265F98(uint64_t a1)
{
  id result;

  result = objc_msgSend(*(id *)(a1 + 32), "annotationsForRange:", *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56));
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40) = result;
  return result;
}

id sub_2668D4(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "interactiveImageCalloutPressed:", *(_QWORD *)(a1 + 40));
}

id sub_2671F4(uint64_t a1)
{
  void *v2;
  Class v3;

  objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "thaxDelegate"), "buttonControlWasPressed:", *(_QWORD *)(a1 + 32));
  v2 = (void *)objc_opt_class(THTSDCanvasAccessibility);
  v3 = __TSAccessibilityCastAsSafeCategory(v2, (uint64_t)objc_msgSend(*(id *)(a1 + 32), "tsaxCanvas"), 0, 0);
  return -[objc_class thaxInvalidateLayers](v3, "thaxInvalidateLayers");
}

id sub_267C50(uint64_t a1)
{
  return objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "thaxCanvasView"), "tsaxInvalidateChildrenImmediately");
}

void sub_268288(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 48), 8);
  _Unwind_Resume(a1);
}

uint64_t sub_2682A4(uint64_t a1)
{
  uint64_t result;
  id v3;
  Class v4;

  result = (uint64_t)objc_msgSend(*(id *)(a1 + 32), "linkForHyperlinkField:", *(_QWORD *)(a1 + 40));
  if (result)
  {
    v3 = objc_msgSend(*(id *)(a1 + 48), "anchorFromLink:", result);
    v4 = NSClassFromString(CFSTR("THModelGlossaryEntryAnchor"));
    result = objc_opt_isKindOfClass(v3, v4);
    if ((result & 1) != 0)
      *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 24) = 1;
  }
  return result;
}

id sub_2683B0(uint64_t a1)
{
  void *v1;
  void *v2;

  v1 = *(void **)(a1 + 32);
  v2 = *(void **)(a1 + 40);
  objc_msgSend(v2, "accessibilityActivationPoint");
  return objc_msgSend(v1, "pressableRepWasPressed:atPoint:", v2);
}

uint64_t sub_268610(uint64_t a1)
{
  id v1;
  Class v2;
  uint64_t result;

  v1 = objc_msgSend(*(id *)(a1 + 32), "tsaxRepForInfo:", *(_QWORD *)(a1 + 40));
  v2 = NSClassFromString(CFSTR("TSWPRep"));
  result = objc_opt_isKindOfClass(v1, v2);
  if ((result & 1) != 0)
    return (uint64_t)objc_msgSend(v1, "tsaxSetShouldIgnoreParentShape:", 1);
  return result;
}

NSString *__cdecl sub_2686E8(id a1, THUISliderAccessibility *a2)
{
  void *v3;
  Class v4;
  Class v5;
  float v6;
  float v7;
  float v8;
  float v9;
  float v10;
  float v11;
  NSString *v12;
  NSString *v13;
  char v15;

  v15 = 0;
  v3 = (void *)objc_opt_class(THWDetailSliderAccessibility);
  v4 = __TSAccessibilityCastAsSafeCategory(v3, (uint64_t)a2, 1, &v15);
  if (v15)
    abort();
  v5 = v4;
  -[objc_class thaxValue](v4, "thaxValue");
  v7 = v6;
  -[objc_class thaxDuration](v5, "thaxDuration");
  v9 = ceilf(v7 * v8);
  -[objc_class thaxDuration](v5, "thaxDuration");
  v11 = v10;
  v12 = THAccessibilityLocalizedString((uint64_t)CFSTR("av.duration.format %@ %@"));
  v13 = THAccessibilityLocalizedTimeDescription(v9);
  return +[NSString stringWithFormat:](NSString, "stringWithFormat:", v12, v13, THAccessibilityLocalizedTimeDescription(v11));
}

void sub_268FC4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, ...)
{
  va_list va;

  va_start(va, a17);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_268FE0(uint64_t a1, uint64_t a2)
{
  _Block_object_assign((void *)(a1 + 40), *(const void **)(a2 + 40), 131);
}

void sub_268FF0(uint64_t a1)
{
  _Block_object_dispose(*(const void **)(a1 + 40), 131);
}

id sub_268FFC(uint64_t a1)
{
  id result;

  result = objc_msgSend(*(id *)(a1 + 32), "hyperlinkAtLocation:", *(double *)(a1 + 48), *(double *)(a1 + 56));
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40) = result;
  return result;
}

id sub_269030(uint64_t a1)
{
  id result;

  result = objc_msgSend(*(id *)(a1 + 32), "eventIndexForSlideIndex:", *(_QWORD *)(a1 + 48));
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = result;
  return result;
}

id sub_26914C(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "dismissPopoverAnimated:", *(unsigned __int8 *)(a1 + 40));
}

void sub_269378(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_269390(uint64_t a1, uint64_t a2)
{
  _Block_object_assign((void *)(a1 + 40), *(const void **)(a2 + 40), 131);
}

void sub_2693A0(uint64_t a1)
{
  _Block_object_dispose(*(const void **)(a1 + 40), 131);
}

id sub_2693AC(uint64_t a1)
{
  id result;

  result = objc_msgSend(*(id *)(a1 + 32), "pageNumberStringForAbsolutePageIndex:forPresentationType:", *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 40));
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40) = result;
  return result;
}

void sub_2694BC(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 64), 8);
  _Unwind_Resume(a1);
}

id sub_2694D4(uint64_t a1)
{
  id result;

  result = objc_msgSend(*(id *)(a1 + 32), "majorSnippetForAbsolutePageIndex:withDocumentRoot:forPresentationType:", *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48));
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 40) = result;
  return result;
}

void sub_2695E4(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 64), 8);
  _Unwind_Resume(a1);
}

id sub_2695FC(uint64_t a1)
{
  id result;

  result = objc_msgSend(*(id *)(a1 + 32), "minorSnippetForAbsolutePageIndex:withDocumentRoot:forPresentationType:", *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48));
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 40) = result;
  return result;
}

void sub_269754(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_list va;

  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_269770(uint64_t a1)
{
  id result;

  result = objc_msgSend(*(id *)(a1 + 32), "p_lessonNodeForContentNode:", *(_QWORD *)(a1 + 40));
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40) = result;
  return result;
}

uint64_t sub_2697A4(uint64_t result)
{
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(result + 40) + 8) + 40) = *(_QWORD *)(result + 32);
  return result;
}

void sub_2698D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_list va;

  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_2698F0(uint64_t a1)
{
  id result;

  result = objc_msgSend(*(id *)(a1 + 32), "p_chapterNodeForContentNode:", *(_QWORD *)(a1 + 40));
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40) = result;
  return result;
}

uint64_t sub_269924(uint64_t result)
{
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(result + 40) + 8) + 40) = *(_QWORD *)(result + 32);
  return result;
}

void sub_2699E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_2699F8(uint64_t a1)
{
  id result;

  result = objc_msgSend(*(id *)(a1 + 32), "navigationUnitContainingContentNode:", *(_QWORD *)(a1 + 40));
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40) = result;
  return result;
}

void sub_269B18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_list va;

  va_start(va, a8);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_269B30(uint64_t a1)
{
  id result;

  result = objc_msgSend(*(id *)(a1 + 32), "chapterAndNumberStringForNavigationUnit:", *(_QWORD *)(a1 + 40));
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40) = result;
  return result;
}

void sub_26A640(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_26A658(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, _BYTE *a5)
{
  if (a2)
  {
    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(result + 32) + 8) + 24) = 1;
    *a5 = 1;
  }
  return result;
}

void sub_26A730(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_26A748(uint64_t a1, uint64_t a2)
{
  _Block_object_assign((void *)(a1 + 40), *(const void **)(a2 + 40), 131);
}

void sub_26A758(uint64_t a1)
{
  _Block_object_dispose(*(const void **)(a1 + 40), 131);
}

Class sub_26A764(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _BYTE *a5)
{
  void *v8;
  Class result;

  v8 = (void *)objc_opt_class(TSWPHyperlinkFieldAccessibility);
  result = __TSAccessibilityCastAsSafeCategory(v8, a2, 0, 0);
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40) = result;
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40))
    *a5 = 1;
  return result;
}

id sub_26A9A4(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "play");
}

id sub_26B21C(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "thaxSetOriginatingButton:", objc_msgSend(*(id *)(a1 + 40), "tsaxValueForKey:", CFSTR("thaxParentRep")));
}

id sub_26B468(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "dismiss");
}

void sub_26B848(uint64_t a1)
{
  id v2;

  if (objc_msgSend(*(id *)(a1 + 32), "isEqual:", objc_msgSend(*(id *)(a1 + 40), "storageUID")))
    v2 = objc_msgSend(objc_msgSend(*(id *)(a1 + 48), "thaxInteractiveCanvasController"), "thaxBodyRepForStorage:", *(_QWORD *)(a1 + 56));
  else
    v2 = objc_msgSend(objc_msgSend(*(id *)(a1 + 48), "thaxInteractiveCanvasController"), "tsaxRepForInfo:", objc_msgSend(*(id *)(a1 + 64), "thaxInfoForNodeUniqueID:forPresentationType:", objc_msgSend(*(id *)(a1 + 40), "storageUID"), *(_QWORD *)(a1 + 72)));
  if (v2)
    UIAccessibilityPostNotification(UIAccessibilityLayoutChangedNotification, v2);
}

id sub_26C000(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "p_changeToPageAtIndex:", *(_QWORD *)(a1 + 40));
}

id sub_26C304(uint64_t a1)
{
  return objc_msgSend(objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "thaxPlayButtonRep"), "tsaxValueForKey:", CFSTR("layout")), "invalidateFrame");
}

void sub_26C574(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_26C5A0(uint64_t a1)
{
  void *v2;
  id v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id result;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v2 = *(void **)(a1 + 32);
  v3 = objc_msgSend(*(id *)(a1 + 40), "thaxAnnotationStorageRange");
  objc_msgSend(v2, "p_repRectForHighlight:", v3, v4);
  v5 = *(_QWORD **)(*(_QWORD *)(a1 + 56) + 8);
  v5[4] = v6;
  v5[5] = v7;
  v5[6] = v8;
  v5[7] = v9;
  result = objc_msgSend(*(id *)(a1 + 48), "convertNaturalRectToUnscaledCanvas:", *(double *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 32), *(double *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 40), *(double *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 48), *(double *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 56));
  v11 = *(_QWORD **)(*(_QWORD *)(a1 + 56) + 8);
  v11[4] = v12;
  v11[5] = v13;
  v11[6] = v14;
  v11[7] = v15;
  return result;
}

void sub_26C7FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_26C814(uint64_t a1, uint64_t a2)
{
  _Block_object_assign((void *)(a1 + 40), *(const void **)(a2 + 40), 131);
}

void sub_26C824(uint64_t a1)
{
  _Block_object_dispose(*(const void **)(a1 + 40), 131);
}

Class sub_26C830(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _BYTE *a5)
{
  void *v8;
  Class result;

  v8 = (void *)objc_opt_class(TSWPHyperlinkFieldAccessibility);
  result = __TSAccessibilityCastAsSafeCategory(v8, a2, 0, 0);
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40) = result;
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40))
    *a5 = 1;
  return result;
}

void sub_26D010(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_26D030(uint64_t a1)
{
  void *v2;
  id v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id result;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v2 = *(void **)(a1 + 32);
  v3 = objc_msgSend(*(id *)(a1 + 40), "thaxAnnotationStorageRange");
  objc_msgSend(v2, "p_repRectForHighlight:", v3, v4);
  v5 = *(_QWORD **)(*(_QWORD *)(a1 + 64) + 8);
  v5[4] = v6;
  v5[5] = v7;
  v5[6] = v8;
  v5[7] = v9;
  objc_msgSend(*(id *)(a1 + 48), "convertNaturalRectToUnscaledCanvas:", *(double *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 32), *(double *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 40), *(double *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 48), *(double *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 56));
  v10 = *(_QWORD **)(*(_QWORD *)(a1 + 64) + 8);
  v10[4] = v11;
  v10[5] = v12;
  v10[6] = v13;
  v10[7] = v14;
  result = objc_msgSend(*(id *)(a1 + 56), "convertUnscaledToBoundsRect:", *(double *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 32), *(double *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 40), *(double *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 48), *(double *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 56));
  v16 = *(_QWORD **)(*(_QWORD *)(a1 + 64) + 8);
  v16[4] = v17;
  v16[5] = v18;
  v16[6] = v19;
  v16[7] = v20;
  return result;
}

uint64_t sub_26D9A4(uint64_t a1)
{
  UIAccessibilityPostNotification(UIAccessibilityLayoutChangedNotification, *(id *)(a1 + 32));
  +[UIFocusRingManager moveRingToFocusItem:forClient:](UIFocusRingManager, "moveRingToFocusItem:forClient:", *(_QWORD *)(a1 + 32), CFSTR("AXFKATextFieldClient"));
  return _UIAXAssignFocusToItem(*(_QWORD *)(a1 + 32));
}

void sub_26E034(id a1)
{
  UIAccessibilityPostNotification(UIAccessibilityPageScrolledNotification, 0);
}

id sub_26FE48(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "play");
}

id sub_26FE50(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "pause");
}

BOOL sub_2703C8(id a1, double a2, double a3)
{
  return vabdd_f64(a3, a2) < 25.0;
}

uint64_t sub_2703DC(uint64_t a1, void *a2, void *a3)
{
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  char v13;
  uint64_t v14;

  objc_msgSend(a2, "accessibilityFrame");
  v6 = v5;
  v8 = v7;
  objc_msgSend(a3, "accessibilityFrame");
  v10 = v9;
  v12 = v11;
  if ((*(unsigned int (**)(double, double))(*(_QWORD *)(a1 + 32) + 16))(v6, v9))
  {
    v13 = (*(uint64_t (**)(double, double))(*(_QWORD *)(a1 + 32) + 16))(v8, v12);
    v14 = -1;
    if (v8 >= v12)
      v14 = 1;
    if ((v13 & 1) != 0)
      return 0;
    else
      return v14;
  }
  else if (v6 >= v10)
  {
    return 1;
  }
  else
  {
    return -1;
  }
}

void sub_270FD0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_270FE8(uint64_t a1)
{
  id result;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  result = objc_msgSend(*(id *)(a1 + 32), "_accessibilityBoundsForRange:", *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56));
  v3 = *(_QWORD **)(*(_QWORD *)(a1 + 40) + 8);
  v3[4] = v4;
  v3[5] = v5;
  v3[6] = v6;
  v3[7] = v7;
  return result;
}

void sub_27120C(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_561E4(&dword_0, a2, a3, "THiOSFlowToCTableViewController: Beginning request for ToC book cover: %@", a5, a6, a7, a8, 2u);
}

void sub_271274(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_561E4(&dword_0, a2, a3, "THiOSFlowToCTableViewController: Failed request for ToC book cover: %@", a5, a6, a7, a8, 2u);
}

void sub_2712E0(os_log_t log)
{
  uint8_t v1[16];

  *(_WORD *)v1 = 0;
  _os_log_error_impl(&dword_0, log, OS_LOG_TYPE_ERROR, "Layer host is not a <THiOSTraitsCacheHosting>", v1, 2u);
}

void sub_271320(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_271388(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_5E650(&dword_0, a2, a3, "Failed to create Content Blocking rules for bliss web widget %@", a5, a6, a7, a8, 2u);
}

void sub_2713F0(uint64_t a1, uint64_t a2, NSObject *a3)
{
  _BYTE v3[24];

  *(_DWORD *)v3 = 138412546;
  *(_QWORD *)&v3[4] = *(_QWORD *)(a1 + 32);
  *(_WORD *)&v3[12] = 2114;
  *(_QWORD *)&v3[14] = a2;
  sub_74F8C(&dword_0, a2, a3, "AEPDFPlugin coordinateReadingItemAtURL Error taking coordinate read for %@;  Error: %{public}@",
    *(_QWORD *)v3,
    *(_QWORD *)&v3[8],
    *(_QWORD *)&v3[16]);
  sub_74FA0();
}

void sub_271464()
{
  uint64_t v0;
  os_log_t v1;
  uint8_t v2[14];
  uint64_t v3;

  sub_74FA8();
  v3 = v0;
  _os_log_error_impl(&dword_0, v1, OS_LOG_TYPE_ERROR, "Error authenticating account: %@ -- %@", v2, 0x16u);
  sub_74FA0();
}

void sub_2714E4()
{
  uint64_t v0;
  os_log_t v1;

  sub_74FA8();
  sub_74F8C(&dword_0, v0, v1, "Error refetching bag for dsid: %@ -- %@");
  sub_74FA0();
}

void sub_27154C(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_AAD3C(&dword_0, a1, a3, "Unable to create interaction for highlight edit menu", a5, a6, a7, a8, 0);
}

void sub_271580(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_AAD3C(&dword_0, a1, a3, "Unable to set annotation style", a5, a6, a7, a8, 0);
}

void sub_2715B4()
{
  os_log_t v0;
  uint8_t v1[24];

  sub_10B9D4();
  _os_log_debug_impl(&dword_0, v0, OS_LOG_TYPE_DEBUG, "Could not read pagination data at %{public}@: %{public}@", v1, 0x16u);
  sub_74FA0();
}

void sub_271628()
{
  uint64_t v0;
  os_log_t v1;

  sub_10B9D4();
  sub_74F8C(&dword_0, v0, v1, "Error unarchiving pagination data at %{public}@: %{public}@");
  sub_74FA0();
}

void sub_27168C(uint64_t a1, uint8_t *buf)
{
  *(_DWORD *)buf = 138543362;
  *(_QWORD *)(buf + 4) = a1;
  _os_log_error_impl(&dword_0, (os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR, "Exception loading reflowable pagination cache: %{public}@", buf, 0xCu);
}

void sub_2716D4()
{
  uint64_t v0;
  os_log_t v1;

  sub_10B9D4();
  sub_74F8C(&dword_0, v0, v1, "Error writing pagination data at %{public}@: %{public}@");
  sub_74FA0();
}

void sub_271738(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  objc_msgSend(a1, "description");
  sub_1736DC(&dword_0, v1, v2, "appearing CFIs %@", v3, v4, v5, v6, 2u);
  sub_1736F0();
}

void sub_2717A8(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  objc_msgSend(a1, "description");
  sub_1736DC(&dword_0, v1, v2, "disappearing CFIs %@", v3, v4, v5, v6, 2u);
  sub_1736F0();
}

void sub_271818()
{
  uint64_t v0;
  os_log_t v1;

  sub_1AA6F8();
  sub_74F8C(&dword_0, v0, v1, "Error reading curves from file %{public}@: %{public}@");
}

void sub_271884()
{
  uint64_t v0;
  os_log_t v1;

  sub_1AA6F8();
  sub_74F8C(&dword_0, v0, v1, "Error unarchiving animation curves at %{public}@: %{public}@");
}

void sub_2718F0(uint64_t *a1, NSObject *a2)
{
  uint64_t v2;
  int v3;
  uint64_t v4;

  v2 = *a1;
  v3 = 138543362;
  v4 = v2;
  _os_log_error_impl(&dword_0, a2, OS_LOG_TYPE_ERROR, "Error trying to unarchive user data dictionary: %{public}@", (uint8_t *)&v3, 0xCu);
}

void operator delete[]()
{
  while (1)
    ;
}

void operator delete(void *__p)
{
  while (1)
    ;
}

void operator delete()
{
  while (1)
    ;
}

void operator new[]()
{
  while (1)
    ;
}

void *__cdecl operator new(size_t __sz)
{
  while (1)
    ;
}

void operator new()
{
  while (1)
    ;
}

id objc_msgSend_BaSrRpzcWCyAjSdjbc8j_withSize_into_error_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "BaSrRpzcWCyAjSdjbc8j:withSize:into:error:");
}

id objc_msgSend_CGColor(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "CGColor");
}

id objc_msgSend_CGContext(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "CGContext");
}

id objc_msgSend_CGImage(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "CGImage");
}

id objc_msgSend_CGImageForContentsScale_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "CGImageForContentsScale:");
}

id objc_msgSend_CGImageForImageData_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "CGImageForImageData:");
}

id objc_msgSend_CGImageForInfo_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "CGImageForInfo:");
}

id objc_msgSend_CGImageForInfo_documentRoot_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "CGImageForInfo:documentRoot:");
}

id objc_msgSend_CGImageForNaturalSize(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "CGImageForNaturalSize");
}

id objc_msgSend_CGImageForTextureName_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "CGImageForTextureName:");
}

id objc_msgSend_CGImageForTextureName_session_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "CGImageForTextureName:session:");
}

id objc_msgSend_CGImageOfSize_forInfo_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "CGImageOfSize:forInfo:");
}

id objc_msgSend_CGPath(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "CGPath");
}

id objc_msgSend_CGPointValue(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "CGPointValue");
}

id objc_msgSend_CGRectValue(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "CGRectValue");
}

id objc_msgSend_CGSizeValue(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "CGSizeValue");
}

id objc_msgSend_CTFont(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "CTFont");
}

id objc_msgSend_EXC6L9VofSI7ZuGjFga5qXiB(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "EXC6L9VofSI7ZuGjFga5qXiB");
}

id objc_msgSend_HUDBackgroundColor(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "HUDBackgroundColor");
}

id objc_msgSend_HUDOverlayView(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "HUDOverlayView");
}

id objc_msgSend_HUDVendor(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "HUDVendor");
}

id objc_msgSend_IDsForInfos(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "IDsForInfos");
}

id objc_msgSend_IDsOfEntriesWithClass_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "IDsOfEntriesWithClass:");
}

id objc_msgSend_JSONObjectWithData_options_error_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "JSONObjectWithData:options:error:");
}

id objc_msgSend_KPFDocument(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "KPFDocument");
}

id objc_msgSend_KPFSlideList(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "KPFSlideList");
}

id objc_msgSend_NSData(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "NSData");
}

id objc_msgSend_RlXOkXCKRgyluEUOMXWx43md(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "RlXOkXCKRgyluEUOMXWx43md");
}

id objc_msgSend_TOCButton(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "TOCButton");
}

id objc_msgSend_TOCGlossaryViewController(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "TOCGlossaryViewController");
}

id objc_msgSend_TOCHideToolbarAnimated_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "TOCHideToolbarAnimated:");
}

id objc_msgSend_TOCShowToolbarAnimated_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "TOCShowToolbarAnimated:");
}

id objc_msgSend_TOCViewControllerDidShowChapter_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "TOCViewControllerDidShowChapter:");
}

id objc_msgSend_TOCViewControllerDidShowIntroMedia_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "TOCViewControllerDidShowIntroMedia:");
}

id objc_msgSend_TOCViewControllerToolbarBackgroundColor_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "TOCViewControllerToolbarBackgroundColor:");
}

id objc_msgSend_TSDEdgeInsetsValue(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "TSDEdgeInsetsValue");
}

id objc_msgSend_UIColor(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "UIColor");
}

id objc_msgSend_UIImage(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "UIImage");
}

id objc_msgSend_URL(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "URL");
}

id objc_msgSend_URLByAppendingPathComponent_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "URLByAppendingPathComponent:");
}

id objc_msgSend_URLByAppendingPathComponent_isDirectory_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "URLByAppendingPathComponent:isDirectory:");
}

id objc_msgSend_URLByDeletingLastPathComponent(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "URLByDeletingLastPathComponent");
}

id objc_msgSend_URLByStandardizingPath(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "URLByStandardizingPath");
}

id objc_msgSend_URLPathAllowedCharacterSet(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "URLPathAllowedCharacterSet");
}

id objc_msgSend_URLProtocol_didFailWithError_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "URLProtocol:didFailWithError:");
}

id objc_msgSend_URLProtocol_didLoadData_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "URLProtocol:didLoadData:");
}

id objc_msgSend_URLProtocol_didReceiveResponse_cacheStoragePolicy_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "URLProtocol:didReceiveResponse:cacheStoragePolicy:");
}

id objc_msgSend_URLProtocolDidFinishLoading_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "URLProtocolDidFinishLoading:");
}

id objc_msgSend_URLQueryAllowedCharacterSet(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "URLQueryAllowedCharacterSet");
}

id objc_msgSend_URLWithString_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "URLWithString:");
}

id objc_msgSend_URLWithString_relativeToURL_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "URLWithString:relativeToURL:");
}

id objc_msgSend_URLsForDirectory_inDomains_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "URLsForDirectory:inDomains:");
}

id objc_msgSend_UTF8String(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "UTF8String");
}

id objc_msgSend_UUID(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "UUID");
}

id objc_msgSend_Xj3eVHDeBoTD6fVn6fY8_completion_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "Xj3eVHDeBoTD6fVn6fY8:completion:");
}

id objc_msgSend___accessibilityHitTest_withEvent_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "__accessibilityHitTest:withEvent:");
}

id objc_msgSend___accessibilityLabel(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "__accessibilityLabel");
}

id objc_msgSend__accessHostMap_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_accessHostMap:");
}

id objc_msgSend__accessibilityBoundsForRange_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_accessibilityBoundsForRange:");
}

id objc_msgSend__accessibilityHitTest_withEvent_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_accessibilityHitTest:withEvent:");
}

id objc_msgSend__accessibilityIncludeDuringContentReading(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_accessibilityIncludeDuringContentReading");
}

id objc_msgSend__accessibilityIsInTHBookView(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_accessibilityIsInTHBookView");
}

id objc_msgSend__accessibilityLeafDescendantsWithOptions_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_accessibilityLeafDescendantsWithOptions:");
}

id objc_msgSend__accessibilityScrollAncestorForSelector_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_accessibilityScrollAncestorForSelector:");
}

id objc_msgSend__accessibilityScrollParent(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_accessibilityScrollParent");
}

id objc_msgSend__accessibilityScrollStatus(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_accessibilityScrollStatus");
}

id objc_msgSend__accessibilitySelectedTextRange(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_accessibilitySelectedTextRange");
}

id objc_msgSend__accessibilitySetRoleDescription_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_accessibilitySetRoleDescription:");
}

id objc_msgSend__accessibilitySubviews(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_accessibilitySubviews");
}

id objc_msgSend__accessibilityUnregister(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_accessibilityUnregister");
}

id objc_msgSend__accessibilityValueForRange_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_accessibilityValueForRange:");
}

id objc_msgSend__accessibleSubviews(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_accessibleSubviews");
}

id objc_msgSend__addAlternateDescription_toChildInfo_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_addAlternateDescription:toChildInfo:");
}

id objc_msgSend__addURLToChildInfo_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_addURLToChildInfo:");
}

id objc_msgSend__addUserStyleSheet_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_addUserStyleSheet:");
}

id objc_msgSend__adjustMinScale(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_adjustMinScale");
}

id objc_msgSend__adjustScaleReplicatorLayers_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_adjustScaleReplicatorLayers:");
}

id objc_msgSend__adjustSplitReplicatorLayers_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_adjustSplitReplicatorLayers:");
}

id objc_msgSend__adjustZPositionIfNecessary(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_adjustZPositionIfNecessary");
}

id objc_msgSend__adjustedContentPadding(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_adjustedContentPadding");
}

id objc_msgSend__adornmentInfoWithResults_readerState_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_adornmentInfoWithResults:readerState:");
}

id objc_msgSend__adornmentLayoutModeFromString_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_adornmentLayoutModeFromString:");
}

id objc_msgSend__analyticsContentSettingsData(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_analyticsContentSettingsData");
}

id objc_msgSend__analyticsReadingProgress(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_analyticsReadingProgress");
}

id objc_msgSend__analyticsReadingSettingsData(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_analyticsReadingSettingsData");
}

id objc_msgSend__analyticsSessionHost(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_analyticsSessionHost");
}

id objc_msgSend__analyticsSubmitInBookSearchEventWithSearchText_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_analyticsSubmitInBookSearchEventWithSearchText:");
}

id objc_msgSend__applicationKeyWindow(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_applicationKeyWindow");
}

id objc_msgSend__applyColors(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_applyColors");
}

id objc_msgSend__assetInfoForHost_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_assetInfoForHost:");
}

id objc_msgSend__assetInfoForURL_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_assetInfoForURL:");
}

id objc_msgSend__attemptURLLoad(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_attemptURLLoad");
}

id objc_msgSend__axAncestorRepOfType_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_axAncestorRepOfType:");
}

id objc_msgSend__axCanDismissParentBooksPopoverController(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_axCanDismissParentBooksPopoverController");
}

id objc_msgSend__axClearWeakReferencesToSelf(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_axClearWeakReferencesToSelf");
}

id objc_msgSend__axDefinitionsScrollViewPositionDidChange(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_axDefinitionsScrollViewPositionDidChange");
}

id objc_msgSend__axDidChangePageUsingChapterPageControl_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_axDidChangePageUsingChapterPageControl:");
}

id objc_msgSend__axDidInitiatePullThrough(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_axDidInitiatePullThrough");
}

id objc_msgSend__axDidSwitchToEntryViewController_shouldWaitForEntryToBeLoaded_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_axDidSwitchToEntryViewController:shouldWaitForEntryToBeLoaded:");
}

id objc_msgSend__axDismissParentBooksPopoverControllerIfAppropriate(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_axDismissParentBooksPopoverControllerIfAppropriate");
}

id objc_msgSend__axEnumerateAncestorsUsingBlock_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_axEnumerateAncestorsUsingBlock:");
}

id objc_msgSend__axEquation(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_axEquation");
}

id objc_msgSend__axHandleCustomItemDidBecomeFocused(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_axHandleCustomItemDidBecomeFocused");
}

id objc_msgSend__axHideToolbar(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_axHideToolbar");
}

id objc_msgSend__axInitializeScrollingEnabledFlag(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_axInitializeScrollingEnabledFlag");
}

id objc_msgSend__axIsFlowModeRep(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_axIsFlowModeRep");
}

id objc_msgSend__axMarginNoteBoundsInCanvasView(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_axMarginNoteBoundsInCanvasView");
}

id objc_msgSend__axNumberOfRegularChapters(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_axNumberOfRegularChapters");
}

id objc_msgSend__axParentBooksPopoverController(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_axParentBooksPopoverController");
}

id objc_msgSend__axParentRep(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_axParentRep");
}

id objc_msgSend__axPerformBlockAffectingMediaControllerState_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_axPerformBlockAffectingMediaControllerState:");
}

id objc_msgSend__axQuickSpeakContent(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_axQuickSpeakContent");
}

id objc_msgSend__axRefreshShowingContentFlag(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_axRefreshShowingContentFlag");
}

id objc_msgSend__axRegisterForDismissPopupNotification(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_axRegisterForDismissPopupNotification");
}

id objc_msgSend__axSectionIdentifierOfChapterAtIndex_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_axSectionIdentifierOfChapterAtIndex:");
}

id objc_msgSend__axSelectedTextRange(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_axSelectedTextRange");
}

id objc_msgSend__axShouldOutputTransferProgress(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_axShouldOutputTransferProgress");
}

id objc_msgSend__axShouldTreatAsCustomItemForTextElement(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_axShouldTreatAsCustomItemForTextElement");
}

id objc_msgSend__axShowToolbar(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_axShowToolbar");
}

id objc_msgSend__axShowToolbarIfAppropriate(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_axShowToolbarIfAppropriate");
}

id objc_msgSend__axTileModelOfChapterAtIndex_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_axTileModelOfChapterAtIndex:");
}

id objc_msgSend__axTitleOfChapterAtIndex_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_axTitleOfChapterAtIndex:");
}

id objc_msgSend__axWillDismissPopover(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_axWillDismissPopover");
}

id objc_msgSend__axWillPresentPopover(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_axWillPresentPopover");
}

id objc_msgSend__backgroundShapeInfoCanvasSize_readerState_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_backgroundShapeInfoCanvasSize:readerState:");
}

id objc_msgSend__blurThroughWithStyle_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_blurThroughWithStyle:");
}

id objc_msgSend__boundingFrame(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_boundingFrame");
}

id objc_msgSend__canSearch(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_canSearch");
}

id objc_msgSend__canShowGlossaryOrStudyCards(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_canShowGlossaryOrStudyCards");
}

id objc_msgSend__checkIfScanningReadingStatisticsCanBegin(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_checkIfScanningReadingStatisticsCanBegin");
}

id objc_msgSend__cleanupDispatchIO(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_cleanupDispatchIO");
}

id objc_msgSend__columnStyleWithReaderState_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_columnStyleWithReaderState:");
}

id objc_msgSend__commitValue(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_commitValue");
}

id objc_msgSend__configurePagesScrollView(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_configurePagesScrollView");
}

id objc_msgSend__configureResultsCell_forSearchResult_inTableView_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_configureResultsCell:forSearchResult:inTableView:");
}

id objc_msgSend__containerSize(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_containerSize");
}

id objc_msgSend__containerSizeClampWidth_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_containerSizeClampWidth:");
}

id objc_msgSend__contentInsetScrubberVerticalPadding(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_contentInsetScrubberVerticalPadding");
}

id objc_msgSend__createConfigurationWithfilteredOutURLSchemes_requestScope_completion_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_createConfigurationWithfilteredOutURLSchemes:requestScope:completion:");
}

id objc_msgSend__createContentBlockingRulesWithfilteredOutURLSchemes_toRuleListStore_completion_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_createContentBlockingRulesWithfilteredOutURLSchemes:toRuleListStore:completion:");
}

id objc_msgSend__createNodeContentsWithState_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_createNodeContentsWithState:");
}

id objc_msgSend__createWebViewWithContentBlockers_requestScope_completion_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_createWebViewWithContentBlockers:requestScope:completion:");
}

id objc_msgSend__currentLocation(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_currentLocation");
}

id objc_msgSend__currentTraitCollection(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_currentTraitCollection");
}

id objc_msgSend__disableAutoNightMode(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_disableAutoNightMode");
}

id objc_msgSend__dismissReplaceContent(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_dismissReplaceContent");
}

id objc_msgSend__dismissWillReplaceContentWithFlush_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_dismissWillReplaceContentWithFlush:");
}

id objc_msgSend__dispatchQueue(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_dispatchQueue");
}

id objc_msgSend__dispatchTimer(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_dispatchTimer");
}

id objc_msgSend__documentRoot(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_documentRoot");
}

id objc_msgSend__enableAutoNightMode(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_enableAutoNightMode");
}

id objc_msgSend__executeBlockWithLock_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_executeBlockWithLock:");
}

id objc_msgSend__firstElementForUpcomingPageTurn(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_firstElementForUpcomingPageTurn");
}

id objc_msgSend__firstElementForUpcomingScreenChange(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_firstElementForUpcomingScreenChange");
}

id objc_msgSend__getBouncingDecelerationOffset_forTimeInterval_lastUpdateOffset_min_max_decelerationFactor_decelerationLnFactor_velocity_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_getBouncingDecelerationOffset:forTimeInterval:lastUpdateOffset:min:max:decelerationFactor:decelerationLnFactor:velocity:");
}

id objc_msgSend__getStandardDecelerationOffset_forTimeInterval_min_max_decelerationFactor_decelerationLnFactor_velocity_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_getStandardDecelerationOffset:forTimeInterval:min:max:decelerationFactor:decelerationLnFactor:velocity:");
}

id objc_msgSend__grayThemeButtonImageSelected_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_grayThemeButtonImageSelected:");
}

id objc_msgSend__helper_assetInfo_viewControllerForBookDescription_options_error_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_helper:assetInfo:viewControllerForBookDescription:options:error:");
}

id objc_msgSend__ignoredElements(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_ignoredElements");
}

id objc_msgSend__inAnalyticsReadSession(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_inAnalyticsReadSession");
}

id objc_msgSend__isCancelled(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_isCancelled");
}

id objc_msgSend__isCompactHeight(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_isCompactHeight");
}

id objc_msgSend__isCompactWidth(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_isCompactWidth");
}

id objc_msgSend__isInPopoverPresentation(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_isInPopoverPresentation");
}

id objc_msgSend__isShowingContent(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_isShowingContent");
}

id objc_msgSend__loadCells(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_loadCells");
}

id objc_msgSend__mainViewControllerForTransaction_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_mainViewControllerForTransaction:");
}

id objc_msgSend__maybeSendDidReceiveResponse_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_maybeSendDidReceiveResponse:");
}

id objc_msgSend__mimeTypeForURL_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_mimeTypeForURL:");
}

id objc_msgSend__navigationUnitRelativePageIndexForBeginningOfVisibleRectInInteractiveCanvasController_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_navigationUnitRelativePageIndexForBeginningOfVisibleRectInInteractiveCanvasController:");
}

id objc_msgSend__navigationUnitRelativePageIndexForCenterOfVisibleRectInInteractiveCanvasController_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_navigationUnitRelativePageIndexForCenterOfVisibleRectInInteractiveCanvasController:");
}

id objc_msgSend__navigationUnitRelativePageIndexForFirstQuadrantOfVisibleRectInInteractiveCanvasController_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_navigationUnitRelativePageIndexForFirstQuadrantOfVisibleRectInInteractiveCanvasController:");
}

id objc_msgSend__navigationUnitRelativePageIndexForSecondQuadrantOfVisibleRectInInteractiveCanvasController_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_navigationUnitRelativePageIndexForSecondQuadrantOfVisibleRectInInteractiveCanvasController:");
}

id objc_msgSend__nightThemeButtonImageSelected_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_nightThemeButtonImageSelected:");
}

id objc_msgSend__noteSideLengthAtScale_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_noteSideLengthAtScale:");
}

id objc_msgSend__overrideViewportWithArguments_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_overrideViewportWithArguments:");
}

id objc_msgSend__parseBodyWithPrefix_index_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_parseBodyWithPrefix:index:");
}

id objc_msgSend__perUserBookURLForBookURL_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_perUserBookURLForBookURL:");
}

id objc_msgSend__performWithProtocolLock_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_performWithProtocolLock:");
}

id objc_msgSend__placeholderLabel(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_placeholderLabel");
}

id objc_msgSend__propertySetForFlowBodyWithStyleCache_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_propertySetForFlowBodyWithStyleCache:");
}

id objc_msgSend__rangeForBodyRep_visibleUnscaledRect_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_rangeForBodyRep:visibleUnscaledRect:");
}

id objc_msgSend__reallyCancel(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_reallyCancel");
}

id objc_msgSend__removeTaskForHandler_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_removeTaskForHandler:");
}

id objc_msgSend__renderAnnotationsForTheme_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_renderAnnotationsForTheme:");
}

id objc_msgSend__resetForNewLoad(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_resetForNewLoad");
}

id objc_msgSend__resetScrubInfo(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_resetScrubInfo");
}

id objc_msgSend__restoreAutoNightModeSwitch(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_restoreAutoNightModeSwitch");
}

id objc_msgSend__resultsEstimatedRowHeight(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_resultsEstimatedRowHeight");
}

id objc_msgSend__resultsHeaderHeight(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_resultsHeaderHeight");
}

id objc_msgSend__runBlockOnAppropriateQueue_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_runBlockOnAppropriateQueue:");
}

id objc_msgSend__safeAreaInsets(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_safeAreaInsets");
}

id objc_msgSend__scaleForIdealValueForVerticalPosition_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_scaleForIdealValueForVerticalPosition:");
}

id objc_msgSend__scaleForVerticalPosition_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_scaleForVerticalPosition:");
}

id objc_msgSend__scaleInstanceAlphaOffsetForOpen_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_scaleInstanceAlphaOffsetForOpen:");
}

id objc_msgSend__scaleInstanceTransformForOpen_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_scaleInstanceTransformForOpen:");
}

id objc_msgSend__scaledValueForValue_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_scaledValueForValue:");
}

id objc_msgSend__scanReadingStatisticsWithNode_root_ordinal_level_childIndex_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_scanReadingStatisticsWithNode:root:ordinal:level:childIndex:");
}

id objc_msgSend__scheduleInteractionReset(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_scheduleInteractionReset");
}

id objc_msgSend__selectableRep(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_selectableRep");
}

id objc_msgSend__selectionDisplayInteraction(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_selectionDisplayInteraction");
}

id objc_msgSend__sendDidFailWithError_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_sendDidFailWithError:");
}

id objc_msgSend__sendDidFinish(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_sendDidFinish");
}

id objc_msgSend__sendDidReceiveData_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_sendDidReceiveData:");
}

id objc_msgSend__sendDidReceiveResponse_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_sendDidReceiveResponse:");
}

id objc_msgSend__sendErrorForErrorCode_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_sendErrorForErrorCode:");
}

id objc_msgSend__sendLargeFileForAsset_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_sendLargeFileForAsset:");
}

id objc_msgSend__sendSingleDataResponse_mimeType_requestedURL_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_sendSingleDataResponse:mimeType:requestedURL:");
}

id objc_msgSend__sendSmallFileForAsset_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_sendSmallFileForAsset:");
}

id objc_msgSend__sepiaThemeButtonImageSelected_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_sepiaThemeButtonImageSelected:");
}

id objc_msgSend__setAutoDisableCancelButton_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_setAutoDisableCancelButton:");
}

id objc_msgSend__setBackgroundViewConfigurationProvider_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_setBackgroundViewConfigurationProvider:");
}

id objc_msgSend__setCancelled_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_setCancelled:");
}

id objc_msgSend__setCurrentTraitCollection_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_setCurrentTraitCollection:");
}

id objc_msgSend__setCurrentlyFocusedElement_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_setCurrentlyFocusedElement:");
}

id objc_msgSend__setDeveloperExtrasEnabled_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_setDeveloperExtrasEnabled:");
}

id objc_msgSend__setDiagnosticLoggingEnabled_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_setDiagnosticLoggingEnabled:");
}

id objc_msgSend__setDispatchQueue_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_setDispatchQueue:");
}

id objc_msgSend__setDispatchTimer_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_setDispatchTimer:");
}

id objc_msgSend__setHidesShadow_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_setHidesShadow:");
}

id objc_msgSend__setKeyboardFrame_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_setKeyboardFrame:");
}

id objc_msgSend__setKeyboardVisible_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_setKeyboardVisible:");
}

id objc_msgSend__setLargeImageAsyncDecodingEnabled_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_setLargeImageAsyncDecodingEnabled:");
}

id objc_msgSend__setLogsPageMessagesToSystemConsoleEnabled_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_setLogsPageMessagesToSystemConsoleEnabled:");
}

id objc_msgSend__setMouseEventPolicy_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_setMouseEventPolicy:");
}

id objc_msgSend__setPinsTableHeaderView_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_setPinsTableHeaderView:");
}

id objc_msgSend__setSectionContentInset_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_setSectionContentInset:");
}

id objc_msgSend__setTracker_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_setTracker:");
}

id objc_msgSend__setValueWhileTracking_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_setValueWhileTracking:");
}

id objc_msgSend__setupAnimation(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_setupAnimation");
}

id objc_msgSend__setupAnswerLayouts(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_setupAnswerLayouts");
}

id objc_msgSend__setupCompact(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_setupCompact");
}

id objc_msgSend__setupControlsForStyle(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_setupControlsForStyle");
}

id objc_msgSend__setupLayers(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_setupLayers");
}

id objc_msgSend__setupMegaPad(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_setupMegaPad");
}

id objc_msgSend__setupQuickAnimationToLayer_withKeyPath_toValue_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_setupQuickAnimationToLayer:withKeyPath:toValue:");
}

id objc_msgSend__setupRegular(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_setupRegular");
}

id objc_msgSend__setupScaleAnimationLayers(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_setupScaleAnimationLayers");
}

id objc_msgSend__setupSplitAnimationLayers(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_setupSplitAnimationLayers");
}

id objc_msgSend__shadowLayerPositionForOpen_top_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_shadowLayerPositionForOpen:top:");
}

id objc_msgSend__shouldBeginImmediateHighlightForGesture_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_shouldBeginImmediateHighlightForGesture:");
}

id objc_msgSend__shouldReverseLayoutDirection(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_shouldReverseLayoutDirection");
}

id objc_msgSend__shouldShowAutoNightMode(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_shouldShowAutoNightMode");
}

id objc_msgSend__shouldShowMagnifierForGesture_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_shouldShowMagnifierForGesture:");
}

id objc_msgSend__singletonAlloc(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_singletonAlloc");
}

id objc_msgSend__solveForInput_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_solveForInput:");
}

id objc_msgSend__splitInstanceTransformForOpen_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_splitInstanceTransformForOpen:");
}

id objc_msgSend__splitReplicatorLayerPositionForOpen_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_splitReplicatorLayerPositionForOpen:");
}

id objc_msgSend__stackLayout(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_stackLayout");
}

id objc_msgSend__storageAnchorForPageBookmark(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_storageAnchorForPageBookmark");
}

id objc_msgSend__stringForCurrentTime_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_stringForCurrentTime:");
}

id objc_msgSend__stringForInverseCurrentTime_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_stringForInverseCurrentTime:");
}

id objc_msgSend__stringForTime_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_stringForTime:");
}

id objc_msgSend__styleForTheme(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_styleForTheme");
}

id objc_msgSend__stylizeForTheme(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_stylizeForTheme");
}

id objc_msgSend__systemImageNamed_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_systemImageNamed:");
}

id objc_msgSend__taskForHandler_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_taskForHandler:");
}

id objc_msgSend__teardown(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_teardown");
}

id objc_msgSend__th_undoInvertColorsFilter(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_th_undoInvertColorsFilter");
}

id objc_msgSend__thaxActiveEntryViewControllerBeingLoaded(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_thaxActiveEntryViewControllerBeingLoaded");
}

id objc_msgSend__thaxAllowsToolbarHideRequests(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_thaxAllowsToolbarHideRequests");
}

id objc_msgSend__thaxAnnotation(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_thaxAnnotation");
}

id objc_msgSend__thaxAnnotationsDidChange(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_thaxAnnotationsDidChange");
}

id objc_msgSend__thaxAnnounceNumberOfSelectedNotes(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_thaxAnnounceNumberOfSelectedNotes");
}

id objc_msgSend__thaxApplyAccessibilityInfo(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_thaxApplyAccessibilityInfo");
}

id objc_msgSend__thaxApplyAccessibilityScrollingInfo(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_thaxApplyAccessibilityScrollingInfo");
}

id objc_msgSend__thaxAuthorProvidedAccessibilityDescription(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_thaxAuthorProvidedAccessibilityDescription");
}

id objc_msgSend__thaxBackgroundScrollView(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_thaxBackgroundScrollView");
}

id objc_msgSend__thaxBookViewController(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_thaxBookViewController");
}

id objc_msgSend__thaxBookmarkToolbarButton(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_thaxBookmarkToolbarButton");
}

id objc_msgSend__thaxBuyButtonItem(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_thaxBuyButtonItem");
}

id objc_msgSend__thaxCachedGlossaryTermsRotorItems(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_thaxCachedGlossaryTermsRotorItems");
}

id objc_msgSend__thaxCachedHighlightsRotorItems(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_thaxCachedHighlightsRotorItems");
}

id objc_msgSend__thaxCachedLinksRotorItems(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_thaxCachedLinksRotorItems");
}

id objc_msgSend__thaxCalloutInfo(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_thaxCalloutInfo");
}

id objc_msgSend__thaxCanDismissPresentedWidgetPopoverController(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_thaxCanDismissPresentedWidgetPopoverController");
}

id objc_msgSend__thaxCanvasView(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_thaxCanvasView");
}

id objc_msgSend__thaxCaptionStorage(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_thaxCaptionStorage");
}

id objc_msgSend__thaxCardNumberLabel(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_thaxCardNumberLabel");
}

id objc_msgSend__thaxCellContentView(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_thaxCellContentView");
}

id objc_msgSend__thaxChapterLabel(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_thaxChapterLabel");
}

id objc_msgSend__thaxChapterName(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_thaxChapterName");
}

id objc_msgSend__thaxChapterPageControl(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_thaxChapterPageControl");
}

id objc_msgSend__thaxChildReps(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_thaxChildReps");
}

id objc_msgSend__thaxChoiceState(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_thaxChoiceState");
}

id objc_msgSend__thaxCloseButtonItem(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_thaxCloseButtonItem");
}

id objc_msgSend__thaxColumnForLineIndex_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_thaxColumnForLineIndex:");
}

id objc_msgSend__thaxConfigurePlayButton(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_thaxConfigurePlayButton");
}

id objc_msgSend__thaxConfigureRepIgnorance(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_thaxConfigureRepIgnorance");
}

id objc_msgSend__thaxContainsSmartFields(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_thaxContainsSmartFields");
}

id objc_msgSend__thaxCurrentItem(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_thaxCurrentItem");
}

id objc_msgSend__thaxCurrentItemIndex(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_thaxCurrentItemIndex");
}

id objc_msgSend__thaxCurrentPage(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_thaxCurrentPage");
}

id objc_msgSend__thaxDateLabel(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_thaxDateLabel");
}

id objc_msgSend__thaxDelegate(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_thaxDelegate");
}

id objc_msgSend__thaxDidRenderNewEvent(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_thaxDidRenderNewEvent");
}

id objc_msgSend__thaxDismissPresentedWidgetPopoverControllerIfAppropriate(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_thaxDismissPresentedWidgetPopoverControllerIfAppropriate");
}

id objc_msgSend__thaxDisplaySettingsToolbarButton(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_thaxDisplaySettingsToolbarButton");
}

id objc_msgSend__thaxEditing(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_thaxEditing");
}

id objc_msgSend__thaxEmptyCardAccessibilityLabel(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_thaxEmptyCardAccessibilityLabel");
}

id objc_msgSend__thaxFullscreenNotesViewOriginatingButton(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_thaxFullscreenNotesViewOriginatingButton");
}

id objc_msgSend__thaxGlossaryEntry(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_thaxGlossaryEntry");
}

id objc_msgSend__thaxGlossaryTermsRotor(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_thaxGlossaryTermsRotor");
}

id objc_msgSend__thaxGlossaryTermsRotorItems(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_thaxGlossaryTermsRotorItems");
}

id objc_msgSend__thaxHeaderImageViews(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_thaxHeaderImageViews");
}

id objc_msgSend__thaxHiddenPlayButton(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_thaxHiddenPlayButton");
}

id objc_msgSend__thaxHideDVCElements(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_thaxHideDVCElements");
}

id objc_msgSend__thaxHighlightController(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_thaxHighlightController");
}

id objc_msgSend__thaxHighlightsRotor(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_thaxHighlightsRotor");
}

id objc_msgSend__thaxHighlightsRotorItems(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_thaxHighlightsRotorItems");
}

id objc_msgSend__thaxHorizontalOverscrollNextChapter(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_thaxHorizontalOverscrollNextChapter");
}

id objc_msgSend__thaxHorizontalOverscrollPreviousChapter(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_thaxHorizontalOverscrollPreviousChapter");
}

id objc_msgSend__thaxHost(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_thaxHost");
}

id objc_msgSend__thaxHyperlinkFieldForRange_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_thaxHyperlinkFieldForRange:");
}

id objc_msgSend__thaxIsCurrentPage(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_thaxIsCurrentPage");
}

id objc_msgSend__thaxIsDescendentOfExpandedViewController(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_thaxIsDescendentOfExpandedViewController");
}

id objc_msgSend__thaxIsEditing(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_thaxIsEditing");
}

id objc_msgSend__thaxIsFirstThumbnail(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_thaxIsFirstThumbnail");
}

id objc_msgSend__thaxIsGlossaryOpenedFromPopover(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_thaxIsGlossaryOpenedFromPopover");
}

id objc_msgSend__thaxIsPerformingHitTest(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_thaxIsPerformingHitTest");
}

id objc_msgSend__thaxIsPlaying(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_thaxIsPlaying");
}

id objc_msgSend__thaxIsRepExpandable(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_thaxIsRepExpandable");
}

id objc_msgSend__thaxIsSelected(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_thaxIsSelected");
}

id objc_msgSend__thaxIsShowingContent(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_thaxIsShowingContent");
}

id objc_msgSend__thaxIsViewLoaded(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_thaxIsViewLoaded");
}

id objc_msgSend__thaxItems(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_thaxItems");
}

id objc_msgSend__thaxLabel(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_thaxLabel");
}

id objc_msgSend__thaxLastSeenAbsolutePaginatedPageIndex(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_thaxLastSeenAbsolutePaginatedPageIndex");
}

id objc_msgSend__thaxLastTimestampForPerformingBlockAffectingMediaControllerState(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_thaxLastTimestampForPerformingBlockAffectingMediaControllerState");
}

id objc_msgSend__thaxLineIndexInColumn_forLineIndex_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_thaxLineIndexInColumn:forLineIndex:");
}

id objc_msgSend__thaxLinksRotor(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_thaxLinksRotor");
}

id objc_msgSend__thaxLinksRotorItems(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_thaxLinksRotorItems");
}

id objc_msgSend__thaxMode(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_thaxMode");
}

id objc_msgSend__thaxMovieInfo(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_thaxMovieInfo");
}

id objc_msgSend__thaxNameToViewMapping(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_thaxNameToViewMapping");
}

id objc_msgSend__thaxNeedsRepSetup(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_thaxNeedsRepSetup");
}

id objc_msgSend__thaxNextButtonRep(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_thaxNextButtonRep");
}

id objc_msgSend__thaxNoResultsLabel(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_thaxNoResultsLabel");
}

id objc_msgSend__thaxNoteCardsController(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_thaxNoteCardsController");
}

id objc_msgSend__thaxNoteCountLabel(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_thaxNoteCountLabel");
}

id objc_msgSend__thaxNotesToolbarButton(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_thaxNotesToolbarButton");
}

id objc_msgSend__thaxNumberOfSelectedNotes(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_thaxNumberOfSelectedNotes");
}

id objc_msgSend__thaxOriginatingButton(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_thaxOriginatingButton");
}

id objc_msgSend__thaxPageNumberLabel(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_thaxPageNumberLabel");
}

id objc_msgSend__thaxPageNumberView(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_thaxPageNumberView");
}

id objc_msgSend__thaxPageScrubberModify_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_thaxPageScrubberModify:");
}

id objc_msgSend__thaxPagesScrollView(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_thaxPagesScrollView");
}

id objc_msgSend__thaxPresentedWidgetPopoverController(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_thaxPresentedWidgetPopoverController");
}

id objc_msgSend__thaxPressableHandler(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_thaxPressableHandler");
}

id objc_msgSend__thaxPreviousButtonRep(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_thaxPreviousButtonRep");
}

id objc_msgSend__thaxPreviouslyFocusedElement(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_thaxPreviouslyFocusedElement");
}

id objc_msgSend__thaxRadioState(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_thaxRadioState");
}

id objc_msgSend__thaxRepForQuestion_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_thaxRepForQuestion:");
}

id objc_msgSend__thaxRepWantsPressAction(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_thaxRepWantsPressAction");
}

id objc_msgSend__thaxScrollView(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_thaxScrollView");
}

id objc_msgSend__thaxScrollableCanvasController(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_thaxScrollableCanvasController");
}

id objc_msgSend__thaxSearchToolbarButton(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_thaxSearchToolbarButton");
}

id objc_msgSend__thaxSectionController(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_thaxSectionController");
}

id objc_msgSend__thaxSelectButton(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_thaxSelectButton");
}

id objc_msgSend__thaxSelected(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_thaxSelected");
}

id objc_msgSend__thaxSelectedNotes(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_thaxSelectedNotes");
}

id objc_msgSend__thaxSelectedRepRange(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_thaxSelectedRepRange");
}

id objc_msgSend__thaxSelectedTOCViewController(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_thaxSelectedTOCViewController");
}

id objc_msgSend__thaxSetActiveEntryViewControllerBeingLoaded_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_thaxSetActiveEntryViewControllerBeingLoaded:");
}

id objc_msgSend__thaxSetAllowsToolbarHideRequests_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_thaxSetAllowsToolbarHideRequests:");
}

id objc_msgSend__thaxSetCachedGlossaryTermsRotorItems_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_thaxSetCachedGlossaryTermsRotorItems:");
}

id objc_msgSend__thaxSetCachedHighlightsRotorItems_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_thaxSetCachedHighlightsRotorItems:");
}

id objc_msgSend__thaxSetCachedLinksRotorItems_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_thaxSetCachedLinksRotorItems:");
}

id objc_msgSend__thaxSetFullscreenNotesViewOriginatingButton_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_thaxSetFullscreenNotesViewOriginatingButton:");
}

id objc_msgSend__thaxSetGlossaryOpenedFromPopover_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_thaxSetGlossaryOpenedFromPopover:");
}

id objc_msgSend__thaxSetLastSeenAbsolutePaginatedPageIndex_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_thaxSetLastSeenAbsolutePaginatedPageIndex:");
}

id objc_msgSend__thaxSetLastTimestampForPerformingBlockAffectingMediaControllerState_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_thaxSetLastTimestampForPerformingBlockAffectingMediaControllerState:");
}

id objc_msgSend__thaxSetNeedsRepSetup_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_thaxSetNeedsRepSetup:");
}

id objc_msgSend__thaxSetPerformingHitTest_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_thaxSetPerformingHitTest:");
}

id objc_msgSend__thaxSetPreviouslyFocusedElement_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_thaxSetPreviouslyFocusedElement:");
}

id objc_msgSend__thaxSetScrollingEnabled_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_thaxSetScrollingEnabled:");
}

id objc_msgSend__thaxSetSelectedRepRange_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_thaxSetSelectedRepRange:");
}

id objc_msgSend__thaxSetShouldIgnoreScrollingEnabledChanges_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_thaxSetShouldIgnoreScrollingEnabledChanges:");
}

id objc_msgSend__thaxSetShouldOutputCurrentChapterForPageChange_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_thaxSetShouldOutputCurrentChapterForPageChange:");
}

id objc_msgSend__thaxSetShouldOutputCurrentChapterForPageThumbnailsScrollStatus_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_thaxSetShouldOutputCurrentChapterForPageThumbnailsScrollStatus:");
}

id objc_msgSend__thaxSetShowingContent_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_thaxSetShowingContent:");
}

id objc_msgSend__thaxSetStoredGlossaryTermsRotor_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_thaxSetStoredGlossaryTermsRotor:");
}

id objc_msgSend__thaxSetStoredHighlightsRotor_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_thaxSetStoredHighlightsRotor:");
}

id objc_msgSend__thaxSetStoredLinksRotor_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_thaxSetStoredLinksRotor:");
}

id objc_msgSend__thaxSetWasSelectedPriorToAccessibilityActivate_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_thaxSetWasSelectedPriorToAccessibilityActivate:");
}

id objc_msgSend__thaxShouldIgnoreScrollingEnabledChanges(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_thaxShouldIgnoreScrollingEnabledChanges");
}

id objc_msgSend__thaxShouldOutputCurrentChapterForPageChange(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_thaxShouldOutputCurrentChapterForPageChange");
}

id objc_msgSend__thaxShouldOutputCurrentChapterForPageThumbnailsScrollStatus(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_thaxShouldOutputCurrentChapterForPageThumbnailsScrollStatus");
}

id objc_msgSend__thaxShouldPreventToolbarNavbarHiding(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_thaxShouldPreventToolbarNavbarHiding");
}

id objc_msgSend__thaxShowDVCElements(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_thaxShowDVCElements");
}

id objc_msgSend__thaxShowToolbar(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_thaxShowToolbar");
}

id objc_msgSend__thaxStageCanvasController(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_thaxStageCanvasController");
}

id objc_msgSend__thaxState(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_thaxState");
}

id objc_msgSend__thaxStepValue(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_thaxStepValue");
}

id objc_msgSend__thaxStoredGlossaryTermsRotor(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_thaxStoredGlossaryTermsRotor");
}

id objc_msgSend__thaxStoredHighlightsRotor(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_thaxStoredHighlightsRotor");
}

id objc_msgSend__thaxStoredLinksRotor(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_thaxStoredLinksRotor");
}

id objc_msgSend__thaxTableView(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_thaxTableView");
}

id objc_msgSend__thaxTableViewCellController(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_thaxTableViewCellController");
}

id objc_msgSend__thaxTangierEndSlider(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_thaxTangierEndSlider");
}

id objc_msgSend__thaxTangierStartSlider(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_thaxTangierStartSlider");
}

id objc_msgSend__thaxTheme(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_thaxTheme");
}

id objc_msgSend__thaxThumbnailTrackCanvasController(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_thaxThumbnailTrackCanvasController");
}

id objc_msgSend__thaxTocGlossaryButton(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_thaxTocGlossaryButton");
}

id objc_msgSend__thaxUpdateSpeakScreenColorsForCurrentTheme(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_thaxUpdateSpeakScreenColorsForCurrentTheme");
}

id objc_msgSend__thaxVerticalOverscrollNextChapter(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_thaxVerticalOverscrollNextChapter");
}

id objc_msgSend__thaxVerticalOverscrollPreviousChapter(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_thaxVerticalOverscrollPreviousChapter");
}

id objc_msgSend__thaxView(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_thaxView");
}

id objc_msgSend__thaxWasSelectedPriorToAccessibilityActivate(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_thaxWasSelectedPriorToAccessibilityActivate");
}

id objc_msgSend__thumbHitFrame(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_thumbHitFrame");
}

id objc_msgSend__thumbView(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_thumbView");
}

id objc_msgSend__thumbViewNeue(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_thumbViewNeue");
}

id objc_msgSend__titleView(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_titleView");
}

id objc_msgSend__tsaxActivationShouldBeginEditing_shouldHandleCanvasSelection_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxActivationShouldBeginEditing:shouldHandleCanvasSelection:");
}

id objc_msgSend__tsaxActiveTextFindResultSelection(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxActiveTextFindResultSelection");
}

id objc_msgSend__tsaxAddButton(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxAddButton");
}

id objc_msgSend__tsaxAddCategoryMethod_toClass_isClass_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxAddCategoryMethod:toClass:isClass:");
}

id objc_msgSend__tsaxAddSelectionActionsToArray_forRep_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxAddSelectionActionsToArray:forRep:");
}

id objc_msgSend__tsaxAddToVisiblePopoverControllers(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxAddToVisiblePopoverControllers");
}

id objc_msgSend__tsaxAllButtons(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxAllButtons");
}

id objc_msgSend__tsaxAllowNextMenuToBecomeVisible(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxAllowNextMenuToBecomeVisible");
}

id objc_msgSend__tsaxAllowsDidUpdateSelectedChoiceForCompletionToken(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxAllowsDidUpdateSelectedChoiceForCompletionToken");
}

id objc_msgSend__tsaxApplyAccessibilityInfo(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxApplyAccessibilityInfo");
}

id objc_msgSend__tsaxApplyLabel_toButton_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxApplyLabel:toButton:");
}

id objc_msgSend__tsaxApplyOrderedLabels_toButtons_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxApplyOrderedLabels:toButtons:");
}

id objc_msgSend__tsaxArrowButton(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxArrowButton");
}

id objc_msgSend__tsaxAssociatedPopoverController(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxAssociatedPopoverController");
}

id objc_msgSend__tsaxBackgroundButton(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxBackgroundButton");
}

id objc_msgSend__tsaxBezierPath(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxBezierPath");
}

id objc_msgSend__tsaxBottomLeftButton(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxBottomLeftButton");
}

id objc_msgSend__tsaxBottomRightButton(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxBottomRightButton");
}

id objc_msgSend__tsaxCachedApproximateColorDescription(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxCachedApproximateColorDescription");
}

id objc_msgSend__tsaxCachedCharIndexNumber(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxCachedCharIndexNumber");
}

id objc_msgSend__tsaxCachedOriginatingButton(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxCachedOriginatingButton");
}

id objc_msgSend__tsaxCanBeSelected(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxCanBeSelected");
}

id objc_msgSend__tsaxCanBeSelectedWithSelectableRepReference_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxCanBeSelectedWithSelectableRepReference:");
}

id objc_msgSend__tsaxCanDismissAssociatedPopoverController(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxCanDismissAssociatedPopoverController");
}

id objc_msgSend__tsaxCellsRowsAndColumnsCache(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxCellsRowsAndColumnsCache");
}

id objc_msgSend__tsaxChartInfo(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxChartInfo");
}

id objc_msgSend__tsaxChartType(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxChartType");
}

id objc_msgSend__tsaxChildInvalidationCompletionBlocks(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxChildInvalidationCompletionBlocks");
}

id objc_msgSend__tsaxChildInvalidationTimer(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxChildInvalidationTimer");
}

id objc_msgSend__tsaxChildrenCache(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxChildrenCache");
}

id objc_msgSend__tsaxChildrenCellsCache(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxChildrenCellsCache");
}

id objc_msgSend__tsaxCleanupTableChildrenElementsCache_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxCleanupTableChildrenElementsCache:");
}

id objc_msgSend__tsaxClearWeakReferences(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxClearWeakReferences");
}

id objc_msgSend__tsaxColor(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxColor");
}

id objc_msgSend__tsaxColorDescriptionForAttributes_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxColorDescriptionForAttributes:");
}

id objc_msgSend__tsaxColumnElementsCache(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxColumnElementsCache");
}

id objc_msgSend__tsaxColumnIndexElementsCache(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxColumnIndexElementsCache");
}

id objc_msgSend__tsaxCompareCGFloat_toCGFloat_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxCompareCGFloat:toCGFloat:");
}

id objc_msgSend__tsaxCondenseAttributedString_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxCondenseAttributedString:");
}

id objc_msgSend__tsaxConvertNumberOfTicksToPoints_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxConvertNumberOfTicksToPoints:");
}

id objc_msgSend__tsaxConvertPointToRulerValue_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxConvertPointToRulerValue:");
}

id objc_msgSend__tsaxCurrentlyFocusedButton(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxCurrentlyFocusedButton");
}

id objc_msgSend__tsaxDidUpdateAutocompletionText(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxDidUpdateAutocompletionText");
}

id objc_msgSend__tsaxDidUpdateCurrentPage(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxDidUpdateCurrentPage");
}

id objc_msgSend__tsaxDirection(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxDirection");
}

id objc_msgSend__tsaxDirectionElement(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxDirectionElement");
}

id objc_msgSend__tsaxDirectionForButton_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxDirectionForButton:");
}

id objc_msgSend__tsaxDirectionType(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxDirectionType");
}

id objc_msgSend__tsaxDismissAssociatedPopoverControllerIfAppropriate(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxDismissAssociatedPopoverControllerIfAppropriate");
}

id objc_msgSend__tsaxDownButton(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxDownButton");
}

id objc_msgSend__tsaxDraggingRulerMarker(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxDraggingRulerMarker");
}

id objc_msgSend__tsaxEditingCellIDAsRange(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxEditingCellIDAsRange");
}

id objc_msgSend__tsaxEditingTextRep(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxEditingTextRep");
}

id objc_msgSend__tsaxElementAccessibilityChildren_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxElementAccessibilityChildren:");
}

id objc_msgSend__tsaxElementAtIndex_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxElementAtIndex:");
}

id objc_msgSend__tsaxElementAtIndex_associatedPoints_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxElementAtIndex:associatedPoints:");
}

id objc_msgSend__tsaxElementCount(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxElementCount");
}

id objc_msgSend__tsaxElementForMovingToSelection(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxElementForMovingToSelection");
}

id objc_msgSend__tsaxEnsureChildrenCellsAreLoaded(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxEnsureChildrenCellsAreLoaded");
}

id objc_msgSend__tsaxExpressionNode(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxExpressionNode");
}

id objc_msgSend__tsaxFindReplaceController(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxFindReplaceController");
}

id objc_msgSend__tsaxFirstSelectedRepInCanvasEditor_preferExplicitlyFocusedReps_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxFirstSelectedRepInCanvasEditor:preferExplicitlyFocusedReps:");
}

id objc_msgSend__tsaxFormulaPlainTextOfAbsorbedToken(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxFormulaPlainTextOfAbsorbedToken");
}

id objc_msgSend__tsaxFrame(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxFrame");
}

id objc_msgSend__tsaxFriendlyFilename(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxFriendlyFilename");
}

id objc_msgSend__tsaxGetDictionaryForLineNumber_columnNumber_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxGetDictionaryForLineNumber:columnNumber:");
}

id objc_msgSend__tsaxGetEffectiveLineNumber_columnNumber_forPoint_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxGetEffectiveLineNumber:columnNumber:forPoint:");
}

id objc_msgSend__tsaxGetEffectiveLineNumber_columnNumber_forPosition_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxGetEffectiveLineNumber:columnNumber:forPosition:");
}

id objc_msgSend__tsaxGradientStops(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxGradientStops");
}

id objc_msgSend__tsaxGradientType(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxGradientType");
}

id objc_msgSend__tsaxHasZeroArcs(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxHasZeroArcs");
}

id objc_msgSend__tsaxIgnoreBeginEditingOnSingleTap(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxIgnoreBeginEditingOnSingleTap");
}

id objc_msgSend__tsaxImageData(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxImageData");
}

id objc_msgSend__tsaxImageInfo(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxImageInfo");
}

id objc_msgSend__tsaxInferredLabel(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxInferredLabel");
}

id objc_msgSend__tsaxInstallSafeCategoryOnClass_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxInstallSafeCategoryOnClass:");
}

id objc_msgSend__tsaxInteractionDidStart(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxInteractionDidStart");
}

id objc_msgSend__tsaxInteractionDidStop(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxInteractionDidStop");
}

id objc_msgSend__tsaxInteractiveCanvasController(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxInteractiveCanvasController");
}

id objc_msgSend__tsaxInvalidateChildrenOnParentCanvasViewEventually(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxInvalidateChildrenOnParentCanvasViewEventually");
}

id objc_msgSend__tsaxInvalidateChildrenOnParentCanvasViewImmediately(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxInvalidateChildrenOnParentCanvasViewImmediately");
}

id objc_msgSend__tsaxInvalidateViewChildrenEventually(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxInvalidateViewChildrenEventually");
}

id objc_msgSend__tsaxIsAcceptingTypedText(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxIsAcceptingTypedText");
}

id objc_msgSend__tsaxIsBeingDeallocated(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxIsBeingDeallocated");
}

id objc_msgSend__tsaxIsBuildingChildrenCache(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxIsBuildingChildrenCache");
}

id objc_msgSend__tsaxIsCircular(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxIsCircular");
}

id objc_msgSend__tsaxIsDiamond(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxIsDiamond");
}

id objc_msgSend__tsaxIsEditMenuAllowedToAppear(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxIsEditMenuAllowedToAppear");
}

id objc_msgSend__tsaxIsInsertingText(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxIsInsertingText");
}

id objc_msgSend__tsaxIsInvalidatingChildrenCache(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxIsInvalidatingChildrenCache");
}

id objc_msgSend__tsaxIsLineSegment(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxIsLineSegment");
}

id objc_msgSend__tsaxIsPerformingBlockAffectingTableSelection(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxIsPerformingBlockAffectingTableSelection");
}

id objc_msgSend__tsaxIsPerformingBlockEndingEditing(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxIsPerformingBlockEndingEditing");
}

id objc_msgSend__tsaxIsPerformingBlockWhilePreventingDisplayOfCurrentValueHUD(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxIsPerformingBlockWhilePreventingDisplayOfCurrentValueHUD");
}

id objc_msgSend__tsaxIsRectangular(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxIsRectangular");
}

id objc_msgSend__tsaxIsTriangular(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxIsTriangular");
}

id objc_msgSend__tsaxKeyCorrespondsToPropertyRequiringAccessToCanvas_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxKeyCorrespondsToPropertyRequiringAccessToCanvas:");
}

id objc_msgSend__tsaxKnobAccessibilityElementsCache(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxKnobAccessibilityElementsCache");
}

id objc_msgSend__tsaxKnobElementCacheIsInvalid(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxKnobElementCacheIsInvalid");
}

id objc_msgSend__tsaxLabelOptionsInParagraphAlignSegmentedControl_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxLabelOptionsInParagraphAlignSegmentedControl:");
}

id objc_msgSend__tsaxLabelOptionsInVerticalAlignSegmentedControl_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxLabelOptionsInVerticalAlignSegmentedControl:");
}

id objc_msgSend__tsaxLastAnnouncedValue(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxLastAnnouncedValue");
}

id objc_msgSend__tsaxLastCharacterIndexForActivation(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxLastCharacterIndexForActivation");
}

id objc_msgSend__tsaxLastElementIsClose(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxLastElementIsClose");
}

id objc_msgSend__tsaxLastElementIsMove(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxLastElementIsMove");
}

id objc_msgSend__tsaxLastSelectedButton(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxLastSelectedButton");
}

id objc_msgSend__tsaxLastUpdatedMenuItemsWhilePreventingActualItemsMutation(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxLastUpdatedMenuItemsWhilePreventingActualItemsMutation");
}

id objc_msgSend__tsaxLeftButton(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxLeftButton");
}

id objc_msgSend__tsaxLineNumberAndColumnForPosition_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxLineNumberAndColumnForPosition:");
}

id objc_msgSend__tsaxLocalizedNumberForKey_withShadow_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxLocalizedNumberForKey:withShadow:");
}

id objc_msgSend__tsaxLocalizedNumberForKey_withShadow_isPercentage_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxLocalizedNumberForKey:withShadow:isPercentage:");
}

id objc_msgSend__tsaxMarkViewAsNestedVerticalScrollView_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxMarkViewAsNestedVerticalScrollView:");
}

id objc_msgSend__tsaxModelValue(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxModelValue");
}

id objc_msgSend__tsaxMovieData(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxMovieData");
}

id objc_msgSend__tsaxMovieInfo(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxMovieInfo");
}

id objc_msgSend__tsaxNeedsColumnAndRowIndexElements(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxNeedsColumnAndRowIndexElements");
}

id objc_msgSend__tsaxNumberOfArcs(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxNumberOfArcs");
}

id objc_msgSend__tsaxNumberOfConsecutiveLineSegments(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxNumberOfConsecutiveLineSegments");
}

id objc_msgSend__tsaxNumberOfLineSegments(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxNumberOfLineSegments");
}

id objc_msgSend__tsaxNumberOfSides(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxNumberOfSides");
}

id objc_msgSend__tsaxOpacity(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxOpacity");
}

id objc_msgSend__tsaxOriginDescription(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxOriginDescription");
}

id objc_msgSend__tsaxParentCanvasView(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxParentCanvasView");
}

id objc_msgSend__tsaxParentInteractiveCanvasController(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxParentInteractiveCanvasController");
}

id objc_msgSend__tsaxParentLayer(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxParentLayer");
}

id objc_msgSend__tsaxParentPlaceholderDescription(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxParentPlaceholderDescription");
}

id objc_msgSend__tsaxParentShapeHint(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxParentShapeHint");
}

id objc_msgSend__tsaxParentShapeLabel(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxParentShapeLabel");
}

id objc_msgSend__tsaxPath(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxPath");
}

id objc_msgSend__tsaxPendingSyncState(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxPendingSyncState");
}

id objc_msgSend__tsaxPerformBlockAllowingDidUpdateSelectedChoiceForCompletionToken_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxPerformBlockAllowingDidUpdateSelectedChoiceForCompletionToken:");
}

id objc_msgSend__tsaxPerformBlockCaringAboutReusingCells_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxPerformBlockCaringAboutReusingCells:");
}

id objc_msgSend__tsaxPerformGestureOnCellForID_withSafeBlock_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxPerformGestureOnCellForID:withSafeBlock:");
}

id objc_msgSend__tsaxPopoverWasPresentedFromOriginatingButton_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxPopoverWasPresentedFromOriginatingButton:");
}

id objc_msgSend__tsaxPrePopulatedColumnOrRowElementsCacheWithKind_inDirection_cacheWasRebuilt_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxPrePopulatedColumnOrRowElementsCacheWithKind:inDirection:cacheWasRebuilt:");
}

id objc_msgSend__tsaxPresetIndex(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxPresetIndex");
}

id objc_msgSend__tsaxProcessStringForObjectReplacements_rangeOffset_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxProcessStringForObjectReplacements:rangeOffset:");
}

id objc_msgSend__tsaxPropertyRepresentsObjectType_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxPropertyRepresentsObjectType:");
}

id objc_msgSend__tsaxRegisteredLinkedTextContainerElements(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxRegisteredLinkedTextContainerElements");
}

id objc_msgSend__tsaxRepContainerElementCache(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxRepContainerElementCache");
}

id objc_msgSend__tsaxRepRangeIsHeading(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxRepRangeIsHeading");
}

id objc_msgSend__tsaxResetSwatchGridViews(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxResetSwatchGridViews");
}

id objc_msgSend__tsaxRespondsToSelector_fromExtrasProtocol_skipAssertions_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxRespondsToSelector:fromExtrasProtocol:skipAssertions:");
}

id objc_msgSend__tsaxRightButton(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxRightButton");
}

id objc_msgSend__tsaxRotationDescription(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxRotationDescription");
}

id objc_msgSend__tsaxRowElementsCache(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxRowElementsCache");
}

id objc_msgSend__tsaxRowIndexElementsCache(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxRowIndexElementsCache");
}

id objc_msgSend__tsaxRulerMarkerController(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxRulerMarkerController");
}

id objc_msgSend__tsaxRulerUnitsInstance(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxRulerUnitsInstance");
}

id objc_msgSend__tsaxSegments(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxSegments");
}

id objc_msgSend__tsaxSelectedButton(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxSelectedButton");
}

id objc_msgSend__tsaxSelectedRepsInCanvasEditor_preferExplicitlyFocusedReps_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxSelectedRepsInCanvasEditor:preferExplicitlyFocusedReps:");
}

id objc_msgSend__tsaxSeriesAllStyles(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxSeriesAllStyles");
}

id objc_msgSend__tsaxSetAcceptingTypedText_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxSetAcceptingTypedText:");
}

id objc_msgSend__tsaxSetAllowsDidUpdateSelectedChoiceForCompletionToken_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxSetAllowsDidUpdateSelectedChoiceForCompletionToken:");
}

id objc_msgSend__tsaxSetBeingDeallocated_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxSetBeingDeallocated:");
}

id objc_msgSend__tsaxSetBuildingChildrenCache_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxSetBuildingChildrenCache:");
}

id objc_msgSend__tsaxSetCachedApproximateColorDescription_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxSetCachedApproximateColorDescription:");
}

id objc_msgSend__tsaxSetCachedCharIndexNumber_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxSetCachedCharIndexNumber:");
}

id objc_msgSend__tsaxSetCachedOriginatingButton_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxSetCachedOriginatingButton:");
}

id objc_msgSend__tsaxSetCellsRowsAndColumnsCache_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxSetCellsRowsAndColumnsCache:");
}

id objc_msgSend__tsaxSetChildInvalidationCompletionBlocks_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxSetChildInvalidationCompletionBlocks:");
}

id objc_msgSend__tsaxSetChildInvalidationTimer_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxSetChildInvalidationTimer:");
}

id objc_msgSend__tsaxSetChildrenCache_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxSetChildrenCache:");
}

id objc_msgSend__tsaxSetChildrenCellsCache_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxSetChildrenCellsCache:");
}

id objc_msgSend__tsaxSetDidUpdateAutocompletionText_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxSetDidUpdateAutocompletionText:");
}

id objc_msgSend__tsaxSetDirectionElement_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxSetDirectionElement:");
}

id objc_msgSend__tsaxSetDraggingRulerMarker_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxSetDraggingRulerMarker:");
}

id objc_msgSend__tsaxSetFormulaPlainTextOfAbsorbedToken_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxSetFormulaPlainTextOfAbsorbedToken:");
}

id objc_msgSend__tsaxSetIgnoreBeginEditingOnSingleTap_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxSetIgnoreBeginEditingOnSingleTap:");
}

id objc_msgSend__tsaxSetInsertingText_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxSetInsertingText:");
}

id objc_msgSend__tsaxSetInvalidatingChildrenCache_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxSetInvalidatingChildrenCache:");
}

id objc_msgSend__tsaxSetIsPerformingBlockWhilePreventingDisplayOfCurrentValueHUD_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxSetIsPerformingBlockWhilePreventingDisplayOfCurrentValueHUD:");
}

id objc_msgSend__tsaxSetIsTearingDown_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxSetIsTearingDown:");
}

id objc_msgSend__tsaxSetKnobAccessibilityElementsCache_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxSetKnobAccessibilityElementsCache:");
}

id objc_msgSend__tsaxSetKnobElementCacheIsInvalid_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxSetKnobElementCacheIsInvalid:");
}

id objc_msgSend__tsaxSetLastAnnouncedValue_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxSetLastAnnouncedValue:");
}

id objc_msgSend__tsaxSetLastCharacterIndexForActivation_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxSetLastCharacterIndexForActivation:");
}

id objc_msgSend__tsaxSetLastSelectedButton_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxSetLastSelectedButton:");
}

id objc_msgSend__tsaxSetLastUpdatedMenuItemsWhilePreventingActualItemsMutation_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxSetLastUpdatedMenuItemsWhilePreventingActualItemsMutation:");
}

id objc_msgSend__tsaxSetParentInteractiveCanvasController_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxSetParentInteractiveCanvasController:");
}

id objc_msgSend__tsaxSetPendingSyncState_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxSetPendingSyncState:");
}

id objc_msgSend__tsaxSetPerformingBlockAffectingTableSelection_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxSetPerformingBlockAffectingTableSelection:");
}

id objc_msgSend__tsaxSetPerformingBlockEndingEditing_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxSetPerformingBlockEndingEditing:");
}

id objc_msgSend__tsaxSetPerformingUndoOrRedo_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxSetPerformingUndoOrRedo:");
}

id objc_msgSend__tsaxSetRegisteredLinkedTextContainerElements_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxSetRegisteredLinkedTextContainerElements:");
}

id objc_msgSend__tsaxSetRepContainerElementCache_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxSetRepContainerElementCache:");
}

id objc_msgSend__tsaxSetShapeContainedTextRep_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxSetShapeContainedTextRep:");
}

id objc_msgSend__tsaxSetShouldEnterIntermediateStateUponScrolling_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxSetShouldEnterIntermediateStateUponScrolling:");
}

id objc_msgSend__tsaxSetShouldForceIsTracking_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxSetShouldForceIsTracking:");
}

id objc_msgSend__tsaxSetShouldPreventAccessToCanvas_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxSetShouldPreventAccessToCanvas:");
}

id objc_msgSend__tsaxSetShouldPreventMakingVisible_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxSetShouldPreventMakingVisible:");
}

id objc_msgSend__tsaxSetShouldPreventMutatingItems_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxSetShouldPreventMutatingItems:");
}

id objc_msgSend__tsaxSetShouldSkipSelectionChangedNotification_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxSetShouldSkipSelectionChangedNotification:");
}

id objc_msgSend__tsaxSetTwoDimensionalChildrenCellsCache_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxSetTwoDimensionalChildrenCellsCache:");
}

id objc_msgSend__tsaxSetupRulerController(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxSetupRulerController");
}

id objc_msgSend__tsaxShadowAngle(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxShadowAngle");
}

id objc_msgSend__tsaxShadowColor(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxShadowColor");
}

id objc_msgSend__tsaxShapeContainedTextRep(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxShapeContainedTextRep");
}

id objc_msgSend__tsaxShapeStyle(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxShapeStyle");
}

id objc_msgSend__tsaxShareButton(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxShareButton");
}

id objc_msgSend__tsaxShouldActuallyPreventMakingVisible(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxShouldActuallyPreventMakingVisible");
}

id objc_msgSend__tsaxShouldEnterIntermediateStateUponScrolling(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxShouldEnterIntermediateStateUponScrolling");
}

id objc_msgSend__tsaxShouldForceIsTracking(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxShouldForceIsTracking");
}

id objc_msgSend__tsaxShouldPreventAccessToCanvas(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxShouldPreventAccessToCanvas");
}

id objc_msgSend__tsaxShouldPreventMakingVisible(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxShouldPreventMakingVisible");
}

id objc_msgSend__tsaxShouldPreventMutatingItems(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxShouldPreventMutatingItems");
}

id objc_msgSend__tsaxShouldSkipSelectionChangedNotification(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxShouldSkipSelectionChangedNotification");
}

id objc_msgSend__tsaxSizeDescription(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxSizeDescription");
}

id objc_msgSend__tsaxStoredLabel(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxStoredLabel");
}

id objc_msgSend__tsaxStringForDirection_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxStringForDirection:");
}

id objc_msgSend__tsaxStrokeColor(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxStrokeColor");
}

id objc_msgSend__tsaxStrokeWidth(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxStrokeWidth");
}

id objc_msgSend__tsaxTheme(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxTheme");
}

id objc_msgSend__tsaxTickFrameSpacing(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxTickFrameSpacing");
}

id objc_msgSend__tsaxTopLeftButton(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxTopLeftButton");
}

id objc_msgSend__tsaxTopRightButton(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxTopRightButton");
}

id objc_msgSend__tsaxTwoDimensionalChildrenCellsCache(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxTwoDimensionalChildrenCellsCache");
}

id objc_msgSend__tsaxType(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxType");
}

id objc_msgSend__tsaxUpButton(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxUpButton");
}

id objc_msgSend__tsaxUpdateEditingCellIDOnMasterLayout(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxUpdateEditingCellIDOnMasterLayout");
}

id objc_msgSend__tsaxUpdateOriginatingButton_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxUpdateOriginatingButton:");
}

id objc_msgSend__tsaxUpdatePathSourceLabelForType_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxUpdatePathSourceLabelForType:");
}

id objc_msgSend__tsaxValidatedValueForKey_expectedClass_expectedTypeEncoding_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxValidatedValueForKey:expectedClass:expectedTypeEncoding:");
}

id objc_msgSend__tsaxValidatedValueForKey_expectedClass_possibleExpectedTypeEncodings_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_tsaxValidatedValueForKey:expectedClass:possibleExpectedTypeEncodings:");
}

id objc_msgSend__turnAutoNightModeSwitchOff(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_turnAutoNightModeSwitchOff");
}

id objc_msgSend__unbookmarkBookmarks_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_unbookmarkBookmarks:");
}

id objc_msgSend__updateAppearanceFromLightLevelController_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_updateAppearanceFromLightLevelController:");
}

id objc_msgSend__updateCloseButtonItem(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_updateCloseButtonItem");
}

id objc_msgSend__updateConstraints(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_updateConstraints");
}

id objc_msgSend__updateContentOffsets(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_updateContentOffsets");
}

id objc_msgSend__updateFlop_withContext_dataBuffer_isUpdating_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_updateFlop:withContext:dataBuffer:isUpdating:");
}

id objc_msgSend__updateForAvailableDuration(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_updateForAvailableDuration");
}

id objc_msgSend__updateScrubberCalloutForPageNumber_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_updateScrubberCalloutForPageNumber:");
}

id objc_msgSend__updateShadowWithTexture_percent_direction_shadowBuffer_currentBuffer_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_updateShadowWithTexture:percent:direction:shadowBuffer:currentBuffer:");
}

id objc_msgSend__updateTheme(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_updateTheme");
}

id objc_msgSend__updateTimeDisplayForTime_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_updateTimeDisplayForTime:");
}

id objc_msgSend__updateTrackInset(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_updateTrackInset");
}

id objc_msgSend__whiteThemeButtonImageSelected_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_whiteThemeButtonImageSelected:");
}

id objc_msgSend__widgetFromResults_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "_widgetFromResults:");
}

id objc_msgSend_absoluteEntryForRelativeUri_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "absoluteEntryForRelativeUri:");
}

id objc_msgSend_absoluteLink_withContentNode_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "absoluteLink:withContentNode:");
}

id objc_msgSend_absolutePageIndex(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "absolutePageIndex");
}

id objc_msgSend_absolutePageIndexArrayForDisplayPageNumberMap(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "absolutePageIndexArrayForDisplayPageNumberMap");
}

id objc_msgSend_absolutePageIndexForAnnotation_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "absolutePageIndexForAnnotation:");
}

id objc_msgSend_absolutePageIndexForBeginningOfSection(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "absolutePageIndexForBeginningOfSection");
}

id objc_msgSend_absolutePageIndexForBodyStorageAnchor_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "absolutePageIndexForBodyStorageAnchor:");
}

id objc_msgSend_absolutePageIndexForCFI_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "absolutePageIndexForCFI:");
}

id objc_msgSend_absolutePageIndexForContentNodeRelativePageIndex_inContentNode_forPresentationType_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "absolutePageIndexForContentNodeRelativePageIndex:inContentNode:forPresentationType:");
}

id objc_msgSend_absolutePageIndexForDisplayPageNumber_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "absolutePageIndexForDisplayPageNumber:");
}

id objc_msgSend_absolutePageIndexForEndOfSection(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "absolutePageIndexForEndOfSection");
}

id objc_msgSend_absolutePageIndexForFirstQuadrantOfVisibleRectInInteractiveCanvasController_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "absolutePageIndexForFirstQuadrantOfVisibleRectInInteractiveCanvasController:");
}

id objc_msgSend_absolutePageIndexForLink_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "absolutePageIndexForLink:");
}

id objc_msgSend_absolutePageIndexForLocation_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "absolutePageIndexForLocation:");
}

id objc_msgSend_absolutePageIndexForNextSection(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "absolutePageIndexForNextSection");
}

id objc_msgSend_absolutePageIndexForPreviousSection(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "absolutePageIndexForPreviousSection");
}

id objc_msgSend_absolutePageIndexForRelativePageIndex_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "absolutePageIndexForRelativePageIndex:");
}

id objc_msgSend_absolutePageIndexForRelativePageIndex_forPresentationType_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "absolutePageIndexForRelativePageIndex:forPresentationType:");
}

id objc_msgSend_absolutePageIndexForSecondQuadrantOfVisibleRectInInteractiveCanvasController_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "absolutePageIndexForSecondQuadrantOfVisibleRectInInteractiveCanvasController:");
}

id objc_msgSend_absolutePageIndexForStorageAnchor_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "absolutePageIndexForStorageAnchor:");
}

id objc_msgSend_absolutePageIndexForTileEntry_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "absolutePageIndexForTileEntry:");
}

id objc_msgSend_absolutePageIndexFromEncodedPageNumberResult_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "absolutePageIndexFromEncodedPageNumberResult:");
}

id objc_msgSend_absolutePageIndexesForDisplayPageNumber_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "absolutePageIndexesForDisplayPageNumber:");
}

id objc_msgSend_absolutePageNumberFromCustomLink_presentationType_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "absolutePageNumberFromCustomLink:presentationType:");
}

id objc_msgSend_absolutePageRangeForPresentationType_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "absolutePageRangeForPresentationType:");
}

id objc_msgSend_absolutePathWithUrl_relativeToFile_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "absolutePathWithUrl:relativeToFile:");
}

id objc_msgSend_absolutePhysicalPageIndex(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "absolutePhysicalPageIndex");
}

id objc_msgSend_absoluteString(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "absoluteString");
}

id objc_msgSend_absoluteURL(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "absoluteURL");
}

id objc_msgSend_accessController(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "accessController");
}

id objc_msgSend_accessControllerForAnnotationRenderer_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "accessControllerForAnnotationRenderer:");
}

id objc_msgSend_accessibilityActivationPoint(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "accessibilityActivationPoint");
}

id objc_msgSend_accessibilityContainer(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "accessibilityContainer");
}

id objc_msgSend_accessibilityContainerType(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "accessibilityContainerType");
}

id objc_msgSend_accessibilityDescription(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "accessibilityDescription");
}

id objc_msgSend_accessibilityDescriptions(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "accessibilityDescriptions");
}

id objc_msgSend_accessibilityElementAtIndex_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "accessibilityElementAtIndex:");
}

id objc_msgSend_accessibilityElementCount(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "accessibilityElementCount");
}

id objc_msgSend_accessibilityElementIsFocused(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "accessibilityElementIsFocused");
}

id objc_msgSend_accessibilityElements(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "accessibilityElements");
}

id objc_msgSend_accessibilityElementsHidden(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "accessibilityElementsHidden");
}

id objc_msgSend_accessibilityFrame(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "accessibilityFrame");
}

id objc_msgSend_accessibilityIdentifier(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "accessibilityIdentifier");
}

id objc_msgSend_accessibilityLabel(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "accessibilityLabel");
}

id objc_msgSend_accessibilityRegionsForCurrentEvent(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "accessibilityRegionsForCurrentEvent");
}

id objc_msgSend_accessibilityScrollDownPage(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "accessibilityScrollDownPage");
}

id objc_msgSend_accessibilityScrollLeftPage(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "accessibilityScrollLeftPage");
}

id objc_msgSend_accessibilityScrollRightPage(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "accessibilityScrollRightPage");
}

id objc_msgSend_accessibilityScrollUpPage(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "accessibilityScrollUpPage");
}

id objc_msgSend_accessibilitySupportLoaded(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "accessibilitySupportLoaded");
}

id objc_msgSend_accessibilityTraits(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "accessibilityTraits");
}

id objc_msgSend_accessibilityUserDefinedLabel(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "accessibilityUserDefinedLabel");
}

id objc_msgSend_accessibilityValue(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "accessibilityValue");
}

id objc_msgSend_accessoryType(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "accessoryType");
}

id objc_msgSend_action(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "action");
}

id objc_msgSend_actionWithStartAction_cancelAction_finishAction_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "actionWithStartAction:cancelAction:finishAction:");
}

id objc_msgSend_actionWithTitle_image_identifier_handler_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "actionWithTitle:image:identifier:handler:");
}

id objc_msgSend_actionWithTitle_style_handler_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "actionWithTitle:style:handler:");
}

id objc_msgSend_actionlessBookmarkButton(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "actionlessBookmarkButton");
}

id objc_msgSend_actionsForTarget_forControlEvent_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "actionsForTarget:forControlEvent:");
}

id objc_msgSend_activate(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "activate");
}

id objc_msgSend_activateBackground_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "activateBackground:");
}

id objc_msgSend_activateChapterForBook_chapterID_title_completion_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "activateChapterForBook:chapterID:title:completion:");
}

id objc_msgSend_activateConstraints_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "activateConstraints:");
}

id objc_msgSend_activateSectionForBook_chapterID_sectionID_title_completion_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "activateSectionForBook:chapterID:sectionID:title:completion:");
}

id objc_msgSend_activateWidgetForBook_chapterID_sectionID_widgetID_title_trackingProvider_cfi_completion_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "activateWidgetForBook:chapterID:sectionID:widgetID:title:trackingProvider:cfi:completion:");
}

id objc_msgSend_activationState(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "activationState");
}

id objc_msgSend_activeContextWithCompletion_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "activeContextWithCompletion:");
}

id objc_msgSend_activeHighlightLayers(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "activeHighlightLayers");
}

id objc_msgSend_activeInterfaceOrientation(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "activeInterfaceOrientation");
}

id objc_msgSend_activePopoverEditor(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "activePopoverEditor");
}

id objc_msgSend_activeSectionController(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "activeSectionController");
}

id objc_msgSend_activeTransportControllers(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "activeTransportControllers");
}

id objc_msgSend_activityController(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "activityController");
}

id objc_msgSend_activityIndicatorCellHeight(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "activityIndicatorCellHeight");
}

id objc_msgSend_activityIndicatorView(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "activityIndicatorView");
}

id objc_msgSend_activityItemProvider(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "activityItemProvider");
}

id objc_msgSend_activityItemProviderForCurrentSelection(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "activityItemProviderForCurrentSelection");
}

id objc_msgSend_activityItemProviderWithCachedAnnotation_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "activityItemProviderWithCachedAnnotation:");
}

id objc_msgSend_activityItemProviderWithCachedAnnotations_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "activityItemProviderWithCachedAnnotations:");
}

id objc_msgSend_activityViewController(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "activityViewController");
}

id objc_msgSend_actualStageDrawable(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "actualStageDrawable");
}

id objc_msgSend_addAction_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "addAction:");
}

id objc_msgSend_addActionToArray_withName_actionBlock_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "addActionToArray:withName:actionBlock:");
}

id objc_msgSend_addAdornmentViewsToView_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "addAdornmentViewsToView:");
}

id objc_msgSend_addAffectedObject_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "addAffectedObject:");
}

id objc_msgSend_addAnimation_forKey_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "addAnimation:forKey:");
}

id objc_msgSend_addAnimationWithDuration_targetScale_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "addAnimationWithDuration:targetScale:");
}

id objc_msgSend_addAnimationsAtLayerTime_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "addAnimationsAtLayerTime:");
}

id objc_msgSend_addAnimationsAtTime_relativeToCurrentMediaTime_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "addAnimationsAtTime:relativeToCurrentMediaTime:");
}

id objc_msgSend_addAnnotationForStorage_range_contentNode_style_undoContext_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "addAnnotationForStorage:range:contentNode:style:undoContext:");
}

id objc_msgSend_addArrangedSubview_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "addArrangedSubview:");
}

id objc_msgSend_addAttachmentLayout_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "addAttachmentLayout:");
}

id objc_msgSend_addAttribute_value_range_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "addAttribute:value:range:");
}

id objc_msgSend_addAttributeName_withValue_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "addAttributeName:withValue:");
}

id objc_msgSend_addAudioMuxingObserver_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "addAudioMuxingObserver:");
}

id objc_msgSend_addBackgroundFadeOutAnimation(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "addBackgroundFadeOutAnimation");
}

id objc_msgSend_addBodyBoxInfo_insertContext_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "addBodyBoxInfo:insertContext:");
}

id objc_msgSend_addBool_forKey_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "addBool:forKey:");
}

id objc_msgSend_addBreakIfApplicableToEntry_newBreakState_hintCollector_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "addBreakIfApplicableToEntry:newBreakState:hintCollector:");
}

id objc_msgSend_addButtonShadow(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "addButtonShadow");
}

id objc_msgSend_addCABasicOpacityAnimationToValue_duration_removedOnCompletion_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "addCABasicOpacityAnimationToValue:duration:removedOnCompletion:");
}

id objc_msgSend_addCFIString_error_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "addCFIString:error:");
}

id objc_msgSend_addCellWithSize_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "addCellWithSize:");
}

id objc_msgSend_addChapterLabel_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "addChapterLabel:");
}

id objc_msgSend_addCharacter_toStorage_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "addCharacter:toStorage:");
}

id objc_msgSend_addChild_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "addChild:");
}

id objc_msgSend_addChildAttributesToParentForResult_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "addChildAttributesToParentForResult:");
}

id objc_msgSend_addChildInfo_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "addChildInfo:");
}

id objc_msgSend_addChildInfo_toGroupInfo_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "addChildInfo:toGroupInfo:");
}

id objc_msgSend_addChildNode_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "addChildNode:");
}

id objc_msgSend_addChildResultsFromState_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "addChildResultsFromState:");
}

id objc_msgSend_addChildViewController_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "addChildViewController:");
}

id objc_msgSend_addChoice_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "addChoice:");
}

id objc_msgSend_addClip(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "addClip");
}

id objc_msgSend_addCompletedHandler_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "addCompletedHandler:");
}

id objc_msgSend_addConstraints_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "addConstraints:");
}

id objc_msgSend_addContentAnimation(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "addContentAnimation");
}

id objc_msgSend_addContentNodeToCache_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "addContentNodeToCache:");
}

id objc_msgSend_addContentRuleList_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "addContentRuleList:");
}

id objc_msgSend_addContinuousRotationWithEaseIn(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "addContinuousRotationWithEaseIn");
}

id objc_msgSend_addContinuousRotationWithInitialRotation_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "addContinuousRotationWithInitialRotation:");
}

id objc_msgSend_addDescendentLayoutsToArray_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "addDescendentLayoutsToArray:");
}

id objc_msgSend_addDisallowedElementKind_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "addDisallowedElementKind:");
}

id objc_msgSend_addDrawable_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "addDrawable:");
}

id objc_msgSend_addDrawable_insertContext_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "addDrawable:insertContext:");
}

id objc_msgSend_addDrawable_positioning_insertContext_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "addDrawable:positioning:insertContext:");
}

id objc_msgSend_addDrawablesToPageZOrderWithContentState_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "addDrawablesToPageZOrderWithContentState:");
}

id objc_msgSend_addDrawablesToPageZOrderWithState_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "addDrawablesToPageZOrderWithState:");
}

id objc_msgSend_addElementInfoForName_isBlockLevel_ignoreContainedText_denotesList_denotesListItem_isItsOwnParagraph_isTableRelated_hasTextAlign_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "addElementInfoForName:isBlockLevel:ignoreContainedText:denotesList:denotesListItem:isItsOwnParagraph:isTableRelated:hasTextAlign:");
}

id objc_msgSend_addElementName_result_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "addElementName:result:");
}

id objc_msgSend_addEntriesFromDictionary_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "addEntriesFromDictionary:");
}

id objc_msgSend_addEntry_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "addEntry:");
}

id objc_msgSend_addEntryForColor_red_green_blue_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "addEntryForColor:red:green:blue:");
}

id objc_msgSend_addEntryForPath_andTerm_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "addEntryForPath:andTerm:");
}

id objc_msgSend_addEntryWithElementName_elementNamespace_mappingClass_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "addEntryWithElementName:elementNamespace:mappingClass:");
}

id objc_msgSend_addErrorMessageEntry_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "addErrorMessageEntry:");
}

id objc_msgSend_addExtraSafeCategoryNamesToCollection_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "addExtraSafeCategoryNamesToCollection:");
}

id objc_msgSend_addFinishBlock_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "addFinishBlock:");
}

id objc_msgSend_addFloat_forKey_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "addFloat:forKey:");
}

id objc_msgSend_addFloatingDrawable_insertContext_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "addFloatingDrawable:insertContext:");
}

id objc_msgSend_addFloatingInfo_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "addFloatingInfo:");
}

id objc_msgSend_addFloatingWrappable_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "addFloatingWrappable:");
}

id objc_msgSend_addFlow_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "addFlow:");
}

id objc_msgSend_addFontSize_forName_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "addFontSize:forName:");
}

id objc_msgSend_addForegroundFadeAnimation(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "addForegroundFadeAnimation");
}

id objc_msgSend_addFraction_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "addFraction:");
}

id objc_msgSend_addGestureRecognizer_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "addGestureRecognizer:");
}

id objc_msgSend_addGutterInfo_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "addGutterInfo:");
}

id objc_msgSend_addHighlight_forData_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "addHighlight:forData:");
}

id objc_msgSend_addHighlightWithStyle_forSender_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "addHighlightWithStyle:forSender:");
}

id objc_msgSend_addHintCollection_idref_presentationId_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "addHintCollection:idref:presentationId:");
}

id objc_msgSend_addIndex_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "addIndex:");
}

id objc_msgSend_addInflection_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "addInflection:");
}

id objc_msgSend_addInfoForProperty_isInherited_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "addInfoForProperty:isInherited:");
}

id objc_msgSend_addInteraction_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "addInteraction:");
}

id objc_msgSend_addInterest_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "addInterest:");
}

id objc_msgSend_addInterestInProviderForData_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "addInterestInProviderForData:");
}

id objc_msgSend_addItem_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "addItem:");
}

id objc_msgSend_addKeyCommand_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "addKeyCommand:");
}

id objc_msgSend_addLargerThumb_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "addLargerThumb:");
}

id objc_msgSend_addLayoutsToArray_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "addLayoutsToArray:");
}

id objc_msgSend_addLineBreakForEntry_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "addLineBreakForEntry:");
}

id objc_msgSend_addLineBreakHintWithPresentationId_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "addLineBreakHintWithPresentationId:");
}

id objc_msgSend_addLineToPoint_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "addLineToPoint:");
}

id objc_msgSend_addMappingFromGUIDToNodeToDictionary_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "addMappingFromGUIDToNodeToDictionary:");
}

id objc_msgSend_addMarginNoteLayersToArray_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "addMarginNoteLayersToArray:");
}

id objc_msgSend_addMasterPageWithName_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "addMasterPageWithName:");
}

id objc_msgSend_addMessageEntry_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "addMessageEntry:");
}

id objc_msgSend_addMomentumTiltWithVelocity_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "addMomentumTiltWithVelocity:");
}

id objc_msgSend_addNode_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "addNode:");
}

id objc_msgSend_addNonBlockingObserver_selector_name_object_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "addNonBlockingObserver:selector:name:object:");
}

id objc_msgSend_addNote_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "addNote:");
}

id objc_msgSend_addObject_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "addObject:");
}

id objc_msgSend_addObjectsFromArray_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "addObjectsFromArray:");
}

id objc_msgSend_addObserver_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "addObserver:");
}

id objc_msgSend_addObserver_changeHandler_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "addObserver:changeHandler:");
}

id objc_msgSend_addObserver_forChangeSource_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "addObserver:forChangeSource:");
}

id objc_msgSend_addObserver_forKeyPath_options_context_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "addObserver:forKeyPath:options:context:");
}

id objc_msgSend_addObserver_selector_name_object_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "addObserver:selector:name:object:");
}

id objc_msgSend_addObserverForName_object_queue_usingBlock_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "addObserverForName:object:queue:usingBlock:");
}

id objc_msgSend_addOccurrence_rank_paragraphIndex_pageNumber_displayPageNumber_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "addOccurrence:rank:paragraphIndex:pageNumber:displayPageNumber:");
}

id objc_msgSend_addOperation_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "addOperation:");
}

id objc_msgSend_addPage(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "addPage");
}

id objc_msgSend_addPage_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "addPage:");
}

id objc_msgSend_addPageInfo_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "addPageInfo:");
}

id objc_msgSend_addPageStartIndex(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "addPageStartIndex");
}

id objc_msgSend_addPersistentStoreWithType_configuration_URL_options_error_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "addPersistentStoreWithType:configuration:URL:options:error:");
}

id objc_msgSend_addPerspectiveProjection(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "addPerspectiveProjection");
}

id objc_msgSend_addPressAnimationFromPoint_scale_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "addPressAnimationFromPoint:scale:");
}

id objc_msgSend_addPropertyValue_forProperty_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "addPropertyValue:forProperty:");
}

id objc_msgSend_addQuestion_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "addQuestion:");
}

id objc_msgSend_addRecoilAnimationFromPoint_hardRebound_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "addRecoilAnimationFromPoint:hardRebound:");
}

id objc_msgSend_addRefText_forRID_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "addRefText:forRID:");
}

id objc_msgSend_addReference_cfi_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "addReference:cfi:");
}

id objc_msgSend_addRegionWithRect_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "addRegionWithRect:");
}

id objc_msgSend_addRelaxAnimationFromPoint_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "addRelaxAnimationFromPoint:");
}

id objc_msgSend_addResultFromChildEntry_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "addResultFromChildEntry:");
}

id objc_msgSend_addSafeCategoryNamesToCollection_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "addSafeCategoryNamesToCollection:");
}

id objc_msgSend_addScheduledHandler_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "addScheduledHandler:");
}

id objc_msgSend_addSectionLabel_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "addSectionLabel:");
}

id objc_msgSend_addSimpleSelector(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "addSimpleSelector");
}

id objc_msgSend_addSlotWithId_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "addSlotWithId:");
}

id objc_msgSend_addSmartField_toRange_dolcContext_undoTransaction_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "addSmartField:toRange:dolcContext:undoTransaction:");
}

id objc_msgSend_addStartHintWithIdref_presentationId_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "addStartHintWithIdref:presentationId:");
}

id objc_msgSend_addStop_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "addStop:");
}

id objc_msgSend_addStyle_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "addStyle:");
}

id objc_msgSend_addStyle_withIdentifier_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "addStyle:withIdentifier:");
}

id objc_msgSend_addStyle_withParent_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "addStyle:withParent:");
}

id objc_msgSend_addStylesheetProperties_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "addStylesheetProperties:");
}

id objc_msgSend_addStylesheetProperties_forEntry_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "addStylesheetProperties:forEntry:");
}

id objc_msgSend_addSublayer_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "addSublayer:");
}

id objc_msgSend_addSubview_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "addSubview:");
}

id objc_msgSend_addSubviews_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "addSubviews:");
}

id objc_msgSend_addTarget_action_forControlEvents_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "addTarget:action:forControlEvents:");
}

id objc_msgSend_addTermWithStem_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "addTermWithStem:");
}

id objc_msgSend_addTermsForAnnotation_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "addTermsForAnnotation:");
}

id objc_msgSend_addTimer_forMode_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "addTimer:forMode:");
}

id objc_msgSend_addTinyThumb_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "addTinyThumb:");
}

id objc_msgSend_addToViewController_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "addToViewController:");
}

id objc_msgSend_addUserScript_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "addUserScript:");
}

id objc_msgSend_addValuesFromPropertyMap_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "addValuesFromPropertyMap:");
}

id objc_msgSend_addWarning_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "addWarning:");
}

id objc_msgSend_addWarningMessageEntry_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "addWarningMessageEntry:");
}

id objc_msgSend_addWithPredicate_adder_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "addWithPredicate:adder:");
}

id objc_msgSend_addedAnnotationUUIDsForContentNodeID_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "addedAnnotationUUIDsForContentNodeID:");
}

id objc_msgSend_additionalBackgroundInset(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "additionalBackgroundInset");
}

id objc_msgSend_additionalLayouts(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "additionalLayouts");
}

id objc_msgSend_additionalLayoutsForPanel_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "additionalLayoutsForPanel:");
}

id objc_msgSend_additionalPropertiesForNavPointId_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "additionalPropertiesForNavPointId:");
}

id objc_msgSend_additionalVisibleRelativePageIndexesForSectionController_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "additionalVisibleRelativePageIndexesForSectionController:");
}

id objc_msgSend_adjustContentInsets(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "adjustContentInsets");
}

id objc_msgSend_adjustContentViewFrame(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "adjustContentViewFrame");
}

id objc_msgSend_adjustTransformForMotionBlurBuffer_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "adjustTransformForMotionBlurBuffer:");
}

id objc_msgSend_adornmentController(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "adornmentController");
}

id objc_msgSend_adornmentController_allowWindowMoveForPanel_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "adornmentController:allowWindowMoveForPanel:");
}

id objc_msgSend_adornmentInfo(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "adornmentInfo");
}

id objc_msgSend_adornmentInfoWithWidgetPlacement_readerState_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "adornmentInfoWithWidgetPlacement:readerState:");
}

id objc_msgSend_adornmentPanel_frameForSize_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "adornmentPanel:frameForSize:");
}

id objc_msgSend_adornmentPanelBackgroundAppearance_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "adornmentPanelBackgroundAppearance:");
}

id objc_msgSend_adornmentPanelFontName_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "adornmentPanelFontName:");
}

id objc_msgSend_adornmentPanelFontSize_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "adornmentPanelFontSize:");
}

id objc_msgSend_adornmentPanelMinHeight_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "adornmentPanelMinHeight:");
}

id objc_msgSend_adornmentPanelTitleLeftIndent_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "adornmentPanelTitleLeftIndent:");
}

id objc_msgSend_adornmentPanelWidth_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "adornmentPanelWidth:");
}

id objc_msgSend_adornmentsVisible(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "adornmentsVisible");
}

id objc_msgSend_affectedObjects(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "affectedObjects");
}

id objc_msgSend_affineGeometryWithAffineTransform_appliedToBounds_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "affineGeometryWithAffineTransform:appliedToBounds:");
}

id objc_msgSend_affineTransform(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "affineTransform");
}

id objc_msgSend_afterDelay_processBlock_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "afterDelay:processBlock:");
}

id objc_msgSend_agSuxzs6g5UyvRU64xGP_error_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "agSuxzs6g5UyvRU64xGP:error:");
}

id objc_msgSend_alertControllerWithTitle_message_preferredStyle_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "alertControllerWithTitle:message:preferredStyle:");
}

id objc_msgSend_aliasedPathWithViewScale_effectiveStrokeWidth_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "aliasedPathWithViewScale:effectiveStrokeWidth:");
}

id objc_msgSend_allAnnotations(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "allAnnotations");
}

id objc_msgSend_allBodiesExist_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "allBodiesExist:");
}

id objc_msgSend_allElementsSelector(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "allElementsSelector");
}

id objc_msgSend_allKeys(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "allKeys");
}

id objc_msgSend_allKeysForObject_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "allKeysForObject:");
}

id objc_msgSend_allLines(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "allLines");
}

id objc_msgSend_allObjects(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "allObjects");
}

id objc_msgSend_allReps(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "allReps");
}

id objc_msgSend_allTargets(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "allTargets");
}

id objc_msgSend_allTouches(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "allTouches");
}

id objc_msgSend_allValues(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "allValues");
}

id objc_msgSend_allWPStorages(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "allWPStorages");
}

id objc_msgSend_allocWithZone_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "allocWithZone:");
}

id objc_msgSend_allowCopy(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "allowCopy");
}

id objc_msgSend_allowGlossary(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "allowGlossary");
}

id objc_msgSend_allowLayoutAndRenderOnThread(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "allowLayoutAndRenderOnThread");
}

id objc_msgSend_allowNetworkAccess(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "allowNetworkAccess");
}

id objc_msgSend_allowSelectAll(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "allowSelectAll");
}

id objc_msgSend_allowSimultaneousRecognitionByRecognizers_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "allowSimultaneousRecognitionByRecognizers:");
}

id objc_msgSend_allowableMovement(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "allowableMovement");
}

id objc_msgSend_allowsAction_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "allowsAction:");
}

id objc_msgSend_allowsPinchZoom(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "allowsPinchZoom");
}

id objc_msgSend_alpha(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "alpha");
}

id objc_msgSend_alphaAnimationDidEnd(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "alphaAnimationDidEnd");
}

id objc_msgSend_alphaAnimationWillBegin(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "alphaAnimationWillBegin");
}

id objc_msgSend_alphaComponent(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "alphaComponent");
}

id objc_msgSend_alphabeticalIndexForEntries_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "alphabeticalIndexForEntries:");
}

id objc_msgSend_alphabeticalIndexForGlossary_withPrefix_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "alphabeticalIndexForGlossary:withPrefix:");
}

id objc_msgSend_alphabeticalTermIndex(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "alphabeticalTermIndex");
}

id objc_msgSend_altDesc(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "altDesc");
}

id objc_msgSend_alternateLayerForView(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "alternateLayerForView");
}

id objc_msgSend_alternativeNextCaption(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "alternativeNextCaption");
}

id objc_msgSend_alternativePrevCaption(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "alternativePrevCaption");
}

id objc_msgSend_ams_DSID(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "ams_DSID");
}

id objc_msgSend_ams_iTunesAccountWithUsername_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "ams_iTunesAccountWithUsername:");
}

id objc_msgSend_analyticsReadStartDate(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "analyticsReadStartDate");
}

id objc_msgSend_analyticsReadStartProgress(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "analyticsReadStartProgress");
}

id objc_msgSend_ancestorEntryWithElementName_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "ancestorEntryWithElementName:");
}

id objc_msgSend_ancestorEntryWithReaderClass_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "ancestorEntryWithReaderClass:");
}

id objc_msgSend_ancestorLayoutOfLayout_orDelegateConformingToProtocol_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "ancestorLayoutOfLayout:orDelegateConformingToProtocol:");
}

id objc_msgSend_ancestorParagraphStyle(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "ancestorParagraphStyle");
}

id objc_msgSend_ancestorReaderWithClass_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "ancestorReaderWithClass:");
}

id objc_msgSend_ancestorRepOfRep_orDelegateConformingToProtocol_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "ancestorRepOfRep:orDelegateConformingToProtocol:");
}

id objc_msgSend_anchorAtOrigin(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "anchorAtOrigin");
}

id objc_msgSend_anchorCellID(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "anchorCellID");
}

id objc_msgSend_anchorForCFIString_coarsenIfNeeded_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "anchorForCFIString:coarsenIfNeeded:");
}

id objc_msgSend_anchorForCfiFrag(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "anchorForCfiFrag");
}

id objc_msgSend_anchorForSelectedSearchResult_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "anchorForSelectedSearchResult:");
}

id objc_msgSend_anchorFromAbsoluteLink_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "anchorFromAbsoluteLink:");
}

id objc_msgSend_anchorFromAbsoluteLink_presentationType_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "anchorFromAbsoluteLink:presentationType:");
}

id objc_msgSend_anchorFromCustomLink_presentationType_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "anchorFromCustomLink:presentationType:");
}

id objc_msgSend_anchorFromLink_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "anchorFromLink:");
}

id objc_msgSend_anchorPoint(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "anchorPoint");
}

id objc_msgSend_anchoredAttachmentPositions(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "anchoredAttachmentPositions");
}

id objc_msgSend_anchoredAttachmentPositionsForBodyChildAtIndex_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "anchoredAttachmentPositionsForBodyChildAtIndex:");
}

id objc_msgSend_anchoredRangeForBodyIndex_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "anchoredRangeForBodyIndex:");
}

id objc_msgSend_andPredicateWithSubpredicates_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "andPredicateWithSubpredicates:");
}

id objc_msgSend_angle(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "angle");
}

id objc_msgSend_angleInDegreesInPair_readerState_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "angleInDegreesInPair:readerState:");
}

id objc_msgSend_animatableDestinationSetupTarget_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "animatableDestinationSetupTarget:");
}

id objc_msgSend_animateAlongsideTransition_completion_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "animateAlongsideTransition:completion:");
}

id objc_msgSend_animateEventWithSession_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "animateEventWithSession:");
}

id objc_msgSend_animateFadeWithDuration_forPageIndex_enumerator_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "animateFadeWithDuration:forPageIndex:enumerator:");
}

id objc_msgSend_animateOpacityAndDisplaymentProgess_delay_duration_initialPageIndex_enumerator_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "animateOpacityAndDisplaymentProgess:delay:duration:initialPageIndex:enumerator:");
}

id objc_msgSend_animateOverscrollWithDuration_enumerator_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "animateOverscrollWithDuration:enumerator:");
}

id objc_msgSend_animateShowWithDuration_forPageIndex_enumerator_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "animateShowWithDuration:forPageIndex:enumerator:");
}

id objc_msgSend_animateSlideWithSession_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "animateSlideWithSession:");
}

id objc_msgSend_animateToViewScale_contentOffset_duration_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "animateToViewScale:contentOffset:duration:");
}

id objc_msgSend_animateWithCrossFadeContent_backgroundLayout_duration_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "animateWithCrossFadeContent:backgroundLayout:duration:");
}

id objc_msgSend_animateWithDelay_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "animateWithDelay:");
}

id objc_msgSend_animateWithDuration_animations_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "animateWithDuration:animations:");
}

id objc_msgSend_animateWithDuration_animations_completion_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "animateWithDuration:animations:completion:");
}

id objc_msgSend_animateWithDuration_delay_options_animations_completion_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "animateWithDuration:delay:options:animations:completion:");
}

id objc_msgSend_animateWithSession_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "animateWithSession:");
}

id objc_msgSend_animateZoomWithDuration_initialPageIndex_minViewScale_maxViewScale_currentViewScale_enumerator_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "animateZoomWithDuration:initialPageIndex:minViewScale:maxViewScale:currentViewScale:enumerator:");
}

id objc_msgSend_animatedBuild(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "animatedBuild");
}

id objc_msgSend_animatedFromFullscreen(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "animatedFromFullscreen");
}

id objc_msgSend_animating(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "animating");
}

id objc_msgSend_animatingScroll(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "animatingScroll");
}

id objc_msgSend_animatingViewScale(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "animatingViewScale");
}

id objc_msgSend_animatingVisibilityCount(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "animatingVisibilityCount");
}

id objc_msgSend_animation(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "animation");
}

id objc_msgSend_animationBeginTime(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "animationBeginTime");
}

id objc_msgSend_animationContainerProvidesShadowForAnimation(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "animationContainerProvidesShadowForAnimation");
}

id objc_msgSend_animationController(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "animationController");
}

id objc_msgSend_animationController_updateWhitePointAdaptivtyStyleWithDuration_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "animationController:updateWhitePointAdaptivtyStyleWithDuration:");
}

id objc_msgSend_animationControllerDidAddContentAnimations_uniformTargetScale_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "animationControllerDidAddContentAnimations:uniformTargetScale:");
}

id objc_msgSend_animationControllerSetsDestination_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "animationControllerSetsDestination:");
}

id objc_msgSend_animationControllerSetupTarget_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "animationControllerSetupTarget:");
}

id objc_msgSend_animationDidEnd(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "animationDidEnd");
}

id objc_msgSend_animationDidEndWithContext_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "animationDidEndWithContext:");
}

id objc_msgSend_animationDuration(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "animationDuration");
}

id objc_msgSend_animationForKey_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "animationForKey:");
}

id objc_msgSend_animationKeys(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "animationKeys");
}

id objc_msgSend_animationLayer(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "animationLayer");
}

id objc_msgSend_animationName(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "animationName");
}

id objc_msgSend_animationRegistry(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "animationRegistry");
}

id objc_msgSend_animationWillBeginWithContext_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "animationWillBeginWithContext:");
}

id objc_msgSend_animationWithKeyPath_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "animationWithKeyPath:");
}

id objc_msgSend_annotation(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "annotation");
}

id objc_msgSend_annotationAbsolutePhysicalPageIndex(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "annotationAbsolutePhysicalPageIndex");
}

id objc_msgSend_annotationAssetID(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "annotationAssetID");
}

id objc_msgSend_annotationAtUnscaledPoint_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "annotationAtUnscaledPoint:");
}

id objc_msgSend_annotationBlendMode(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "annotationBlendMode");
}

id objc_msgSend_annotationBookVersion(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "annotationBookVersion");
}

id objc_msgSend_annotationCache(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "annotationCache");
}

id objc_msgSend_annotationContentNodeID(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "annotationContentNodeID");
}

id objc_msgSend_annotationController(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "annotationController");
}

id objc_msgSend_annotationCount(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "annotationCount");
}

id objc_msgSend_annotationCountForStudyCards(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "annotationCountForStudyCards");
}

id objc_msgSend_annotationCreationDate(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "annotationCreationDate");
}

id objc_msgSend_annotationEditorForAnnotation_editsOnLaunch_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "annotationEditorForAnnotation:editsOnLaunch:");
}

id objc_msgSend_annotationForCurrentSelection(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "annotationForCurrentSelection");
}

id objc_msgSend_annotationForRange_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "annotationForRange:");
}

id objc_msgSend_annotationForUUID_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "annotationForUUID:");
}

id objc_msgSend_annotationForUUID_includeDeleted_moc_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "annotationForUUID:includeDeleted:moc:");
}

id objc_msgSend_annotationFromCurrentSelection(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "annotationFromCurrentSelection");
}

id objc_msgSend_annotationHasNote(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "annotationHasNote");
}

id objc_msgSend_annotationID(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "annotationID");
}

id objc_msgSend_annotationIDForInfo_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "annotationIDForInfo:");
}

id objc_msgSend_annotationIDForInfoID_contentNodeID_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "annotationIDForInfoID:contentNodeID:");
}

id objc_msgSend_annotationIsBookmark(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "annotationIsBookmark");
}

id objc_msgSend_annotationIsOrphan(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "annotationIsOrphan");
}

id objc_msgSend_annotationIsPlaceholder(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "annotationIsPlaceholder");
}

id objc_msgSend_annotationIsUnderline(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "annotationIsUnderline");
}

id objc_msgSend_annotationLocation(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "annotationLocation");
}

id objc_msgSend_annotationModificationDate(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "annotationModificationDate");
}

id objc_msgSend_annotationNote(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "annotationNote");
}

id objc_msgSend_annotationPageTheme(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "annotationPageTheme");
}

id objc_msgSend_annotationProviderForOfflineDBWithAssetID_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "annotationProviderForOfflineDBWithAssetID:");
}

id objc_msgSend_annotationRenderer_contentNodeForAnnotation_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "annotationRenderer:contentNodeForAnnotation:");
}

id objc_msgSend_annotationRenderer_didLoadContentNode_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "annotationRenderer:didLoadContentNode:");
}

id objc_msgSend_annotationRenderer_didRenderAnnotation_withResult_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "annotationRenderer:didRenderAnnotation:withResult:");
}

id objc_msgSend_annotationRenderer_storageForAnnotationLocation_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "annotationRenderer:storageForAnnotationLocation:");
}

id objc_msgSend_annotationRepresentativeText(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "annotationRepresentativeText");
}

id objc_msgSend_annotationRequestForAllNotes(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "annotationRequestForAllNotes");
}

id objc_msgSend_annotationRequestForNonOrphanedNotes(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "annotationRequestForNonOrphanedNotes");
}

id objc_msgSend_annotationRequestForNonOrphanedSearchText_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "annotationRequestForNonOrphanedSearchText:");
}

id objc_msgSend_annotationRequestForNonSponsoredNonOrphaned(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "annotationRequestForNonSponsoredNonOrphaned");
}

id objc_msgSend_annotationRequestForOrphanedNotes(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "annotationRequestForOrphanedNotes");
}

id objc_msgSend_annotationRequestForOrphanedSearchText_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "annotationRequestForOrphanedSearchText:");
}

id objc_msgSend_annotationRequestForSearchText_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "annotationRequestForSearchText:");
}

id objc_msgSend_annotationSearchIndex(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "annotationSearchIndex");
}

id objc_msgSend_annotationSearchIndexBuildOperationFailed_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "annotationSearchIndexBuildOperationFailed:");
}

id objc_msgSend_annotationSelectedText(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "annotationSelectedText");
}

id objc_msgSend_annotationSerializationManagerWithAssetID_assetURL_bookVersionString_pathToAssetContextDirectory_isManagedBook_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "annotationSerializationManagerWithAssetID:assetURL:bookVersionString:pathToAssetContextDirectory:isManagedBook:");
}

id objc_msgSend_annotationSource(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "annotationSource");
}

id objc_msgSend_annotationStorageController(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "annotationStorageController");
}

id objc_msgSend_annotationStorageIDWithoutContentNodeID(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "annotationStorageIDWithoutContentNodeID");
}

id objc_msgSend_annotationStorageRange(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "annotationStorageRange");
}

id objc_msgSend_annotationStorageUID(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "annotationStorageUID");
}

id objc_msgSend_annotationStyle(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "annotationStyle");
}

id objc_msgSend_annotationType(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "annotationType");
}

id objc_msgSend_annotationUUID(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "annotationUUID");
}

id objc_msgSend_annotationUuid(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "annotationUuid");
}

id objc_msgSend_annotationVersion(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "annotationVersion");
}

id objc_msgSend_annotationWithUUID_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "annotationWithUUID:");
}

id objc_msgSend_annotationWithUuid_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "annotationWithUuid:");
}

id objc_msgSend_annotations(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "annotations");
}

id objc_msgSend_annotationsChangedInRange_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "annotationsChangedInRange:");
}

id objc_msgSend_annotationsDidUpdateWithUndoContext_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "annotationsDidUpdateWithUndoContext:");
}

id objc_msgSend_annotationsForIndexPaths_updateChapterTitle_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "annotationsForIndexPaths:updateChapterTitle:");
}

id objc_msgSend_annotationsForRange_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "annotationsForRange:");
}

id objc_msgSend_annotationsForStorage_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "annotationsForStorage:");
}

id objc_msgSend_annotationsForStorageUID_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "annotationsForStorageUID:");
}

id objc_msgSend_annotationsOrderedForVisualStacking_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "annotationsOrderedForVisualStacking:");
}

id objc_msgSend_annotationsReadEnabled(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "annotationsReadEnabled");
}

id objc_msgSend_annotationsUpdatedForContentNode_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "annotationsUpdatedForContentNode:");
}

id objc_msgSend_annotationsWillUpdateWithUndoContext_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "annotationsWillUpdateWithUndoContext:");
}

id objc_msgSend_annotationsWriteEnabled(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "annotationsWriteEnabled");
}

id objc_msgSend_answerLayoutWidth(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "answerLayoutWidth");
}

id objc_msgSend_answerStackSize(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "answerStackSize");
}

id objc_msgSend_answerStackSizeForWidth_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "answerStackSizeForWidth:");
}

id objc_msgSend_answerState(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "answerState");
}

id objc_msgSend_answerWeight(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "answerWeight");
}

id objc_msgSend_answers(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "answers");
}

id objc_msgSend_answersAreText(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "answersAreText");
}

id objc_msgSend_answersFrame(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "answersFrame");
}

id objc_msgSend_answersSize(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "answersSize");
}

id objc_msgSend_answersUpdated(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "answersUpdated");
}

id objc_msgSend_antiAliasDefeatLayerFrame_forTransform_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "antiAliasDefeatLayerFrame:forTransform:");
}

id objc_msgSend_anyObject(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "anyObject");
}

id objc_msgSend_appInfoMgr(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "appInfoMgr");
}

id objc_msgSend_appearance(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "appearance");
}

id objc_msgSend_appearanceButtonItem(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "appearanceButtonItem");
}

id objc_msgSend_appearanceRowHeight(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "appearanceRowHeight");
}

id objc_msgSend_appearanceStyle(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "appearanceStyle");
}

id objc_msgSend_appendAttributedString_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "appendAttributedString:");
}

id objc_msgSend_appendBytes_length_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "appendBytes:length:");
}

id objc_msgSend_appendFormat_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "appendFormat:");
}

id objc_msgSend_appendMainThreadCompletionBlock_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "appendMainThreadCompletionBlock:");
}

id objc_msgSend_appendString_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "appendString:");
}

id objc_msgSend_applePubDocId(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "applePubDocId");
}

id objc_msgSend_applePubEntry(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "applePubEntry");
}

id objc_msgSend_applePubReaderState(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "applePubReaderState");
}

id objc_msgSend_applePubRelativePath(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "applePubRelativePath");
}

id objc_msgSend_applePubURL(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "applePubURL");
}

id objc_msgSend_applePubUpdateRangesWithLineBreakIndexes_textStorage_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "applePubUpdateRangesWithLineBreakIndexes:textStorage:");
}

id objc_msgSend_applePubVersion(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "applePubVersion");
}

id objc_msgSend_applePubZipURL(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "applePubZipURL");
}

id objc_msgSend_applicationCacheDirectory(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "applicationCacheDirectory");
}

id objc_msgSend_applicationDidReceiveMemoryWarning_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "applicationDidReceiveMemoryWarning:");
}

id objc_msgSend_applicationName(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "applicationName");
}

id objc_msgSend_applyLabelFonts(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "applyLabelFonts");
}

id objc_msgSend_applyObject_toParagraphIndexRange_forKind_undoTransaction_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "applyObject:toParagraphIndexRange:forKind:undoTransaction:");
}

id objc_msgSend_applyScrollingPolicy(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "applyScrollingPolicy");
}

id objc_msgSend_applyTheme(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "applyTheme");
}

id objc_msgSend_applyToContext_viewScale_flipped_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "applyToContext:viewScale:flipped:");
}

id objc_msgSend_applyToRepRenderable_withScale_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "applyToRepRenderable:withScale:");
}

id objc_msgSend_applyTransform_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "applyTransform:");
}

id objc_msgSend_archive(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "archive");
}

id objc_msgSend_archiveRootObject_toFile_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "archiveRootObject:toFile:");
}

id objc_msgSend_archiveStorageURLForAssetID_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "archiveStorageURLForAssetID:");
}

id objc_msgSend_areAllNotesSelected(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "areAllNotesSelected");
}

id objc_msgSend_areAnimationsEnabled(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "areAnimationsEnabled");
}

id objc_msgSend_areControlsHidden(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "areControlsHidden");
}

id objc_msgSend_array(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "array");
}

id objc_msgSend_arrayByAddingObject_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "arrayByAddingObject:");
}

id objc_msgSend_arrayByAddingObjectsFromArray_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "arrayByAddingObjectsFromArray:");
}

id objc_msgSend_arrayPiecewiseTransformedBy_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "arrayPiecewiseTransformedBy:");
}

id objc_msgSend_arrayWithArray_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "arrayWithArray:");
}

id objc_msgSend_arrayWithCapacity_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "arrayWithCapacity:");
}

id objc_msgSend_arrayWithObject_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "arrayWithObject:");
}

id objc_msgSend_arrayWithObjects_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "arrayWithObjects:");
}

id objc_msgSend_arrayWithObjects_count_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "arrayWithObjects:count:");
}

id objc_msgSend_arrowDirection(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "arrowDirection");
}

id objc_msgSend_asiOSCVC(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "asiOSCVC");
}

id objc_msgSend_asset(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "asset");
}

id objc_msgSend_asset_isSameAsAsset_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "asset:isSameAsAsset:");
}

id objc_msgSend_assetID(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "assetID");
}

id objc_msgSend_assetIDForAssetAtURLOnMainThread_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "assetIDForAssetAtURLOnMainThread:");
}

id objc_msgSend_assetIDFromURL_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "assetIDFromURL:");
}

id objc_msgSend_assetInfoForURL_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "assetInfoForURL:");
}

id objc_msgSend_assetIsInsideBookRootPath(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "assetIsInsideBookRootPath");
}

id objc_msgSend_assetType(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "assetType");
}

id objc_msgSend_assetViewController_assetPropertyChanged_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "assetViewController:assetPropertyChanged:");
}

id objc_msgSend_assetViewController_requestClose_finishedConsuming_error_withErrorBlock_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "assetViewController:requestClose:finishedConsuming:error:withErrorBlock:");
}

id objc_msgSend_assetViewController_willClose_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "assetViewController:willClose:");
}

id objc_msgSend_assetViewController_willOpen_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "assetViewController:willOpen:");
}

id objc_msgSend_assetViewControllerDelegate(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "assetViewControllerDelegate");
}

id objc_msgSend_assetViewControllerMinifiedBarButtonItem_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "assetViewControllerMinifiedBarButtonItem:");
}

id objc_msgSend_assetViewControllerSignificantReadingLocationChange_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "assetViewControllerSignificantReadingLocationChange:");
}

id objc_msgSend_assetViewControllerUpdateToolbars(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "assetViewControllerUpdateToolbars");
}

id objc_msgSend_assetViewControllerWillUnload(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "assetViewControllerWillUnload");
}

id objc_msgSend_assetWithURL_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "assetWithURL:");
}

id objc_msgSend_assetWithURL_assetID_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "assetWithURL:assetID:");
}

id objc_msgSend_assetWithURL_assetID_type_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "assetWithURL:assetID:type:");
}

id objc_msgSend_assignContentNodes(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "assignContentNodes");
}

id objc_msgSend_assignRelativePageIndex_toStorageUID_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "assignRelativePageIndex:toStorageUID:");
}

id objc_msgSend_assignedGutterLayouts(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "assignedGutterLayouts");
}

id objc_msgSend_assignedPageNumbers(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "assignedPageNumbers");
}

id objc_msgSend_associatedInfo(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "associatedInfo");
}

id objc_msgSend_attachDrawable_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "attachDrawable:");
}

id objc_msgSend_attachToView_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "attachToView:");
}

id objc_msgSend_attachmentAtAttachmentIndex_outCharIndex_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "attachmentAtAttachmentIndex:outCharIndex:");
}

id objc_msgSend_attachmentAtCharIndex_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "attachmentAtCharIndex:");
}

id objc_msgSend_attachmentCount(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "attachmentCount");
}

id objc_msgSend_attachmentId(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "attachmentId");
}

id objc_msgSend_attachmentIndexRangeForTextRange_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "attachmentIndexRangeForTextRange:");
}

id objc_msgSend_attachmentOrFootnoteAtCharIndex_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "attachmentOrFootnoteAtCharIndex:");
}

id objc_msgSend_attemptRotationToDeviceOrientation(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "attemptRotationToDeviceOrientation");
}

id objc_msgSend_attributeWithName_bufferUsage_dataType_normalized_componentCount_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "attributeWithName:bufferUsage:dataType:normalized:componentCount:");
}

id objc_msgSend_attributedTitleForState_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "attributedTitleForState:");
}

id objc_msgSend_attributes(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "attributes");
}

id objc_msgSend_attributesAtIndex_effectiveRange_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "attributesAtIndex:effectiveRange:");
}

id objc_msgSend_attributesOfItemAtPath_error_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "attributesOfItemAtPath:error:");
}

id objc_msgSend_audioRep(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "audioRep");
}

id objc_msgSend_author(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "author");
}

id objc_msgSend_authorFromPlistEntry_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "authorFromPlistEntry:");
}

id objc_msgSend_authoredVersion(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "authoredVersion");
}

id objc_msgSend_authorizeAVPlayerItemForPlayback_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "authorizeAVPlayerItemForPlayback:");
}

id objc_msgSend_autoNightModeEnabled_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "autoNightModeEnabled:");
}

id objc_msgSend_autoNightModeSwitch(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "autoNightModeSwitch");
}

id objc_msgSend_autoNumberFootnoteCountForRange_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "autoNumberFootnoteCountForRange:");
}

id objc_msgSend_autoRotationMode(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "autoRotationMode");
}

id objc_msgSend_autohide(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "autohide");
}

id objc_msgSend_autohideTimeout(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "autohideTimeout");
}

id objc_msgSend_autohideTimer(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "autohideTimer");
}

id objc_msgSend_automaticallyCancelPendingBlockUponSchedulingNewBlock(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "automaticallyCancelPendingBlockUponSchedulingNewBlock");
}

id objc_msgSend_autoplayAllowed(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "autoplayAllowed");
}

id objc_msgSend_autoplayConfig(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "autoplayConfig");
}

id objc_msgSend_autoplayConfigWithState_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "autoplayConfigWithState:");
}

id objc_msgSend_autoplayController(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "autoplayController");
}

id objc_msgSend_autoplayRequested(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "autoplayRequested");
}

id objc_msgSend_autoplayStart(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "autoplayStart");
}

id objc_msgSend_autoplayStop(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "autoplayStop");
}

id objc_msgSend_autoplayingTransportControllers(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "autoplayingTransportControllers");
}

id objc_msgSend_autosizeFlags(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "autosizeFlags");
}

id objc_msgSend_autosizeMargin(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "autosizeMargin");
}

id objc_msgSend_autosizedCanvasController(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "autosizedCanvasController");
}

id objc_msgSend_autosizedCanvasController_adjustedBoundsRectForTopLevelBoundsRect_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "autosizedCanvasController:adjustedBoundsRectForTopLevelBoundsRect:");
}

id objc_msgSend_autosizedCanvasControllerDidLayout_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "autosizedCanvasControllerDidLayout:");
}

id objc_msgSend_autosizedFrameForTextLayout_textSize_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "autosizedFrameForTextLayout:textSize:");
}

id objc_msgSend_autosizes(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "autosizes");
}

id objc_msgSend_ba_analyticsTracker(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "ba_analyticsTracker");
}

id objc_msgSend_ba_effectiveAnalyticsTracker(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "ba_effectiveAnalyticsTracker");
}

id objc_msgSend_ba_setupNewAnalyticsTrackerWithName_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "ba_setupNewAnalyticsTrackerWithName:");
}

id objc_msgSend_backLayer(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "backLayer");
}

id objc_msgSend_backOrdinalText(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "backOrdinalText");
}

id objc_msgSend_backTitleText(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "backTitleText");
}

id objc_msgSend_backdrop(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "backdrop");
}

id objc_msgSend_background(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "background");
}

id objc_msgSend_backgroundButton(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "backgroundButton");
}

id objc_msgSend_backgroundColor(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "backgroundColor");
}

id objc_msgSend_backgroundColorForNavigationBar_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "backgroundColorForNavigationBar:");
}

id objc_msgSend_backgroundColorForSceneController_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "backgroundColorForSceneController:");
}

id objc_msgSend_backgroundColorForTraitCollection_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "backgroundColorForTraitCollection:");
}

id objc_msgSend_backgroundColorForTraitEnvironment_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "backgroundColorForTraitEnvironment:");
}

id objc_msgSend_backgroundColorFromThemeIdentifier_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "backgroundColorFromThemeIdentifier:");
}

id objc_msgSend_backgroundFill(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "backgroundFill");
}

id objc_msgSend_backgroundHighlightLayer(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "backgroundHighlightLayer");
}

id objc_msgSend_backgroundImageForState_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "backgroundImageForState:");
}

id objc_msgSend_backgroundImageInfo(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "backgroundImageInfo");
}

id objc_msgSend_backgroundLayer(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "backgroundLayer");
}

id objc_msgSend_backgroundRect(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "backgroundRect");
}

id objc_msgSend_backgroundRectTitleOnly(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "backgroundRectTitleOnly");
}

id objc_msgSend_backgroundScrollView(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "backgroundScrollView");
}

id objc_msgSend_backgroundShape(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "backgroundShape");
}

id objc_msgSend_backgroundSize(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "backgroundSize");
}

id objc_msgSend_backgroundSourceFrame(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "backgroundSourceFrame");
}

id objc_msgSend_backgroundTargetFrame(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "backgroundTargetFrame");
}

id objc_msgSend_backgroundView(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "backgroundView");
}

id objc_msgSend_bakedScale(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "bakedScale");
}

id objc_msgSend_bakedShadowLayer(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "bakedShadowLayer");
}

id objc_msgSend_baseLayer(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "baseLayer");
}

id objc_msgSend_baseLayerDict(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "baseLayerDict");
}

id objc_msgSend_basePredicate(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "basePredicate");
}

id objc_msgSend_baseViewScale(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "baseViewScale");
}

id objc_msgSend_baseline(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "baseline");
}

id objc_msgSend_basicMediaTypes(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "basicMediaTypes");
}

id objc_msgSend_bc_accessibilityFontSizesEnabled(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "bc_accessibilityFontSizesEnabled");
}

id objc_msgSend_bc_allAPITraits(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "bc_allAPITraits");
}

id objc_msgSend_bc_analyticsVisibilitySubtreeDidDisappear(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "bc_analyticsVisibilitySubtreeDidDisappear");
}

id objc_msgSend_bc_analyticsVisibilitySubtreeWillDisappear(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "bc_analyticsVisibilitySubtreeWillDisappear");
}

id objc_msgSend_bc_analyticsVisibilityUpdateSubtree(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "bc_analyticsVisibilityUpdateSubtree");
}

id objc_msgSend_bc_applyTraitOverridesWithOverrideUserInterfaceStyleFromViewController_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "bc_applyTraitOverridesWithOverrideUserInterfaceStyleFromViewController:");
}

id objc_msgSend_bc_booksBackground(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "bc_booksBackground");
}

id objc_msgSend_bc_booksBlue(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "bc_booksBlue");
}

id objc_msgSend_bc_booksKeyColor(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "bc_booksKeyColor");
}

id objc_msgSend_bc_booksLabelColor(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "bc_booksLabelColor");
}

id objc_msgSend_bc_booksSecondaryBackground(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "bc_booksSecondaryBackground");
}

id objc_msgSend_bc_booksSecondaryLabelColor(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "bc_booksSecondaryLabelColor");
}

id objc_msgSend_bc_booksSeparatorColor(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "bc_booksSeparatorColor");
}

id objc_msgSend_bc_booksTableSelectionColor(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "bc_booksTableSelectionColor");
}

id objc_msgSend_bc_contentSizeCategoryIsGreaterThan_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "bc_contentSizeCategoryIsGreaterThan:");
}

id objc_msgSend_bc_contextualPresentedViewController(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "bc_contextualPresentedViewController");
}

id objc_msgSend_bc_darkSystemBackgroundForTraitCollection_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "bc_darkSystemBackgroundForTraitCollection:");
}

id objc_msgSend_bc_doesFolderAtURL_containFileAtURL_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "bc_doesFolderAtURL:containFileAtURL:");
}

id objc_msgSend_bc_isModelTransitioning(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "bc_isModelTransitioning");
}

id objc_msgSend_bc_knownPropertiesEqual_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "bc_knownPropertiesEqual:");
}

id objc_msgSend_bc_presentViewController_animated_tintColor_completion_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "bc_presentViewController:animated:tintColor:completion:");
}

id objc_msgSend_bc_readingExperienceBarItem_target_action_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "bc_readingExperienceBarItem:target:action:");
}

id objc_msgSend_bc_windowForViewController(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "bc_windowForViewController");
}

id objc_msgSend_becomeFirstResponder(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "becomeFirstResponder");
}

id objc_msgSend_begin(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "begin");
}

id objc_msgSend_beginAnimations_context_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "beginAnimations:context:");
}

id objc_msgSend_beginAppearanceTransition_animated_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "beginAppearanceTransition:animated:");
}

id objc_msgSend_beginDisablingInterfaceAutorotation(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "beginDisablingInterfaceAutorotation");
}

id objc_msgSend_beginDragAtPoint_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "beginDragAtPoint:");
}

id objc_msgSend_beginDragHighlightAtPoint_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "beginDragHighlightAtPoint:");
}

id objc_msgSend_beginDraggingContentOffset(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "beginDraggingContentOffset");
}

id objc_msgSend_beginDraggingMarker(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "beginDraggingMarker");
}

id objc_msgSend_beginEditing(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "beginEditing");
}

id objc_msgSend_beginEditingRep_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "beginEditingRep:");
}

id objc_msgSend_beginEntryWithName_isCompressed_uncompressedSize_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "beginEntryWithName:isCompressed:uncompressedSize:");
}

id objc_msgSend_beginIgnoringInteractionEvents(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "beginIgnoringInteractionEvents");
}

id objc_msgSend_beginLongAudioSessionWithIdentifier_completion_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "beginLongAudioSessionWithIdentifier:completion:");
}

id objc_msgSend_beginMagnifyingTarget_magnificationPoint_offset_animated_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "beginMagnifyingTarget:magnificationPoint:offset:animated:");
}

id objc_msgSend_beginOperation(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "beginOperation");
}

id objc_msgSend_beginStaticLayoutAndRender(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "beginStaticLayoutAndRender");
}

id objc_msgSend_beginTextEditingAtCellID_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "beginTextEditingAtCellID:");
}

id objc_msgSend_beginTime(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "beginTime");
}

id objc_msgSend_beginTransition(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "beginTransition");
}

id objc_msgSend_beginUnknownSizeEntryWithName_isCompressed_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "beginUnknownSizeEntryWithName:isCompressed:");
}

id objc_msgSend_beginUpdates(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "beginUpdates");
}

id objc_msgSend_bezierPath(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "bezierPath");
}

id objc_msgSend_bezierPathByOffsettingPath_joinStyle_withThreshold_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "bezierPathByOffsettingPath:joinStyle:withThreshold:");
}

id objc_msgSend_bezierPathWithCGPath_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "bezierPathWithCGPath:");
}

id objc_msgSend_bezierPathWithOvalInRect_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "bezierPathWithOvalInRect:");
}

id objc_msgSend_bezierPathWithRect_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "bezierPathWithRect:");
}

id objc_msgSend_bezierPathWithRoundedRect_cornerRadius_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "bezierPathWithRoundedRect:cornerRadius:");
}

id objc_msgSend_bindColorAndVelocityWithMetalContext_shouldFillBackground_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "bindColorAndVelocityWithMetalContext:shouldFillBackground:");
}

id objc_msgSend_bk_traitCollectionWithReadingMode_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "bk_traitCollectionWithReadingMode:");
}

id objc_msgSend_blackColor(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "blackColor");
}

id objc_msgSend_blendedColorWithFraction_ofColor_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "blendedColorWithFraction:ofColor:");
}

id objc_msgSend_blissClassicStyle(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "blissClassicStyle");
}

id objc_msgSend_blockClass(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "blockClass");
}

id objc_msgSend_blockOperationWithBlock_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "blockOperationWithBlock:");
}

id objc_msgSend_blockWidth(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "blockWidth");
}

id objc_msgSend_blue(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "blue");
}

id objc_msgSend_blueColor(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "blueColor");
}

id objc_msgSend_blueComponent(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "blueComponent");
}

id objc_msgSend_blurAmount(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "blurAmount");
}

id objc_msgSend_blurFraction(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "blurFraction");
}

id objc_msgSend_body(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "body");
}

id objc_msgSend_bodyAnchorForCanvasRect_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "bodyAnchorForCanvasRect:");
}

id objc_msgSend_bodyBoxInfos(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "bodyBoxInfos");
}

id objc_msgSend_bodyCharIndex(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "bodyCharIndex");
}

id objc_msgSend_bodyCount(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "bodyCount");
}

id objc_msgSend_bodyFloatingInfos(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "bodyFloatingInfos");
}

id objc_msgSend_bodyIndex(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "bodyIndex");
}

id objc_msgSend_bodyIndexClosestToPoint_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "bodyIndexClosestToPoint:");
}

id objc_msgSend_bodyIndexInPageLayout(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "bodyIndexInPageLayout");
}

id objc_msgSend_bodyInfo(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "bodyInfo");
}

id objc_msgSend_bodyLayout(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "bodyLayout");
}

id objc_msgSend_bodyLayouts(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "bodyLayouts");
}

id objc_msgSend_bodyMapper(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "bodyMapper");
}

id objc_msgSend_bodyOffset(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "bodyOffset");
}

id objc_msgSend_bodyPosition(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "bodyPosition");
}

id objc_msgSend_bodyRectForChildLayout_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "bodyRectForChildLayout:");
}

id objc_msgSend_bodyStorage(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "bodyStorage");
}

id objc_msgSend_bodyStorageForPresentationType_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "bodyStorageForPresentationType:");
}

id objc_msgSend_bodyStorageRange(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "bodyStorageRange");
}

id objc_msgSend_bodyStorageUID(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "bodyStorageUID");
}

id objc_msgSend_bodyTopAtIndex_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "bodyTopAtIndex:");
}

id objc_msgSend_boldSystemFontOfSize_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "boldSystemFontOfSize:");
}

id objc_msgSend_bookAnnotationController(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "bookAnnotationController");
}

id objc_msgSend_bookAuthor(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "bookAuthor");
}

id objc_msgSend_bookBundleURL(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "bookBundleURL");
}

id objc_msgSend_bookBundleUrl(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "bookBundleUrl");
}

id objc_msgSend_bookContentDidLoad(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "bookContentDidLoad");
}

id objc_msgSend_bookCoverDescription(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "bookCoverDescription");
}

id objc_msgSend_bookDelegate(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "bookDelegate");
}

id objc_msgSend_bookDescription(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "bookDescription");
}

id objc_msgSend_bookDescriptionCache(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "bookDescriptionCache");
}

id objc_msgSend_bookDescriptionForContext_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "bookDescriptionForContext:");
}

id objc_msgSend_bookID(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "bookID");
}

id objc_msgSend_bookIsPaginatedForLandscape(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "bookIsPaginatedForLandscape");
}

id objc_msgSend_bookIsPaginatedForPortrait(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "bookIsPaginatedForPortrait");
}

id objc_msgSend_bookLinkResolver(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "bookLinkResolver");
}

id objc_msgSend_bookLoadedSuccessfully(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "bookLoadedSuccessfully");
}

id objc_msgSend_bookMetadata(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "bookMetadata");
}

id objc_msgSend_bookModificationDate(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "bookModificationDate");
}

id objc_msgSend_bookNavigationDelegate(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "bookNavigationDelegate");
}

id objc_msgSend_bookNavigator(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "bookNavigator");
}

id objc_msgSend_bookNavigatorForInteractiveCanvasController_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "bookNavigatorForInteractiveCanvasController:");
}

id objc_msgSend_bookOpenDestinationIsTOC(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "bookOpenDestinationIsTOC");
}

id objc_msgSend_bookOpenFailed(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "bookOpenFailed");
}

id objc_msgSend_bookOpenTransitionDidEnd(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "bookOpenTransitionDidEnd");
}

id objc_msgSend_bookOpened(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "bookOpened");
}

id objc_msgSend_bookPropertiesDelegate(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "bookPropertiesDelegate");
}

id objc_msgSend_bookRootURL(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "bookRootURL");
}

id objc_msgSend_bookSubtitle(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "bookSubtitle");
}

id objc_msgSend_bookTOCHeaderImageDataForTOC_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "bookTOCHeaderImageDataForTOC:");
}

id objc_msgSend_bookTitle(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "bookTitle");
}

id objc_msgSend_bookUserDefaults(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "bookUserDefaults");
}

id objc_msgSend_bookVersion(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "bookVersion");
}

id objc_msgSend_bookVersionString(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "bookVersionString");
}

id objc_msgSend_bookVersionWithVersionString_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "bookVersionWithVersionString:");
}

id objc_msgSend_bookViewController(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "bookViewController");
}

id objc_msgSend_bookViewDidAnimateRotationToSize_withContext_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "bookViewDidAnimateRotationToSize:withContext:");
}

id objc_msgSend_bookViewDidAnimateRotationToSize_withContext_transform_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "bookViewDidAnimateRotationToSize:withContext:transform:");
}

id objc_msgSend_bookViewDidRotateTransitionToSize_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "bookViewDidRotateTransitionToSize:");
}

id objc_msgSend_bookViewDidRotateTransitionToSize_withContext_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "bookViewDidRotateTransitionToSize:withContext:");
}

id objc_msgSend_bookViewDidTransitionToSize_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "bookViewDidTransitionToSize:");
}

id objc_msgSend_bookViewDidTransitionToSize_withContext_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "bookViewDidTransitionToSize:withContext:");
}

id objc_msgSend_bookViewWillAnimateRotationToSize_withContext_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "bookViewWillAnimateRotationToSize:withContext:");
}

id objc_msgSend_bookViewWillRotateTransitionToSize_duration_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "bookViewWillRotateTransitionToSize:duration:");
}

id objc_msgSend_bookViewWillRotateTransitionToSize_withTransitionCoordinator_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "bookViewWillRotateTransitionToSize:withTransitionCoordinator:");
}

id objc_msgSend_bookViewWillTransitionToSize_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "bookViewWillTransitionToSize:");
}

id objc_msgSend_bookViewWillTransitionToSize_withTransitionCoordinator_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "bookViewWillTransitionToSize:withTransitionCoordinator:");
}

id objc_msgSend_bookmarkAbsolutePhysicalPage_anchor_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "bookmarkAbsolutePhysicalPage:anchor:");
}

id objc_msgSend_bookmarkAbsolutePhysicalPageIndexSet(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "bookmarkAbsolutePhysicalPageIndexSet");
}

id objc_msgSend_bookmarkAnnotations(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "bookmarkAnnotations");
}

id objc_msgSend_bookmarkButton(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "bookmarkButton");
}

id objc_msgSend_bookmarkButtonItem(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "bookmarkButtonItem");
}

id objc_msgSend_bookmarkFetchedResultsController(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "bookmarkFetchedResultsController");
}

id objc_msgSend_bookmarkHotspotDimension(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "bookmarkHotspotDimension");
}

id objc_msgSend_bookmarkHotspotRegionForPage_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "bookmarkHotspotRegionForPage:");
}

id objc_msgSend_bookmarkLabelColor(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "bookmarkLabelColor");
}

id objc_msgSend_bookmarkPageInfo_anchor_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "bookmarkPageInfo:anchor:");
}

id objc_msgSend_bookmarkPageNumberColor(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "bookmarkPageNumberColor");
}

id objc_msgSend_bookmarkTitleLabel(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "bookmarkTitleLabel");
}

id objc_msgSend_bookmarkViewController(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "bookmarkViewController");
}

id objc_msgSend_bookmarksShouldBeVisible(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "bookmarksShouldBeVisible");
}

id objc_msgSend_bookspotHistoryStack(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "bookspotHistoryStack");
}

id objc_msgSend_bookspotWithPageIndex_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "bookspotWithPageIndex:");
}

id objc_msgSend_BOOLForKey_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "BOOLForKey:");
}

id objc_msgSend_BOOLForKey_context_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "BOOLForKey:context:");
}

id objc_msgSend_BOOLValue(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "BOOLValue");
}

id objc_msgSend_BOOLValueInPair_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "BOOLValueInPair:");
}

id objc_msgSend_borderColor(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "borderColor");
}

id objc_msgSend_borderView(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "borderView");
}

id objc_msgSend_borderWidth(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "borderWidth");
}

id objc_msgSend_bottomAnchor(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "bottomAnchor");
}

id objc_msgSend_bottomBorder(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "bottomBorder");
}

id objc_msgSend_bottomBorderWidthConstraint(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "bottomBorderWidthConstraint");
}

id objc_msgSend_bottomCardAngle(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "bottomCardAngle");
}

id objc_msgSend_bottomCardOffset(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "bottomCardOffset");
}

id objc_msgSend_bottomConstraint(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "bottomConstraint");
}

id objc_msgSend_bottomFullWidthToolbarFrame(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "bottomFullWidthToolbarFrame");
}

id objc_msgSend_bottomOverscrollView(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "bottomOverscrollView");
}

id objc_msgSend_bottomPanel(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "bottomPanel");
}

id objc_msgSend_bottomPanelInfos(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "bottomPanelInfos");
}

id objc_msgSend_bottomRightCellID(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "bottomRightCellID");
}

id objc_msgSend_bottomRightToolbarFrame(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "bottomRightToolbarFrame");
}

id objc_msgSend_bottomSeparatorYPositionForChapterIndex_lessonIndex_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "bottomSeparatorYPositionForChapterIndex:lessonIndex:");
}

id objc_msgSend_bottomWrapperView(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "bottomWrapperView");
}

id objc_msgSend_boundingBoxForChildren(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "boundingBoxForChildren");
}

id objc_msgSend_boundingCellRange(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "boundingCellRange");
}

id objc_msgSend_boundingRectWithSize_options_attributes_context_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "boundingRectWithSize:options:attributes:context:");
}

id objc_msgSend_bounds(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "bounds");
}

id objc_msgSend_boundsBeforeRotation(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "boundsBeforeRotation");
}

id objc_msgSend_boundsForPath_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "boundsForPath:");
}

id objc_msgSend_boundsIncludingStroke(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "boundsIncludingStroke");
}

id objc_msgSend_boundsInfluencingExteriorWrap(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "boundsInfluencingExteriorWrap");
}

id objc_msgSend_boundsLocationForICC_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "boundsLocationForICC:");
}

id objc_msgSend_boundsOfLineFragmentAtIndex_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "boundsOfLineFragmentAtIndex:");
}

id objc_msgSend_boundsRectForSelection_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "boundsRectForSelection:");
}

id objc_msgSend_boundsWithProperties_readerState_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "boundsWithProperties:readerState:");
}

id objc_msgSend_boundsWithStackEntry_readerState_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "boundsWithStackEntry:readerState:");
}

id objc_msgSend_boxedDefaultValueForProperty_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "boxedDefaultValueForProperty:");
}

id objc_msgSend_boxedObjectForProperty_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "boxedObjectForProperty:");
}

id objc_msgSend_breakCharacterFromPropertySet_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "breakCharacterFromPropertySet:");
}

id objc_msgSend_bridgeController(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "bridgeController");
}

id objc_msgSend_brightness(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "brightness");
}

id objc_msgSend_brightnessButtonItem(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "brightnessButtonItem");
}

id objc_msgSend_brightnessSlider(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "brightnessSlider");
}

id objc_msgSend_bringSubviewToFront_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "bringSubviewToFront:");
}

id objc_msgSend_browserPageNode(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "browserPageNode");
}

id objc_msgSend_bu_sharedAccountStore(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "bu_sharedAccountStore");
}

id objc_msgSend_bufferIndex(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "bufferIndex");
}

id objc_msgSend_buildConstraintsFromParent_layoutGuide_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "buildConstraintsFromParent:layoutGuide:");
}

id objc_msgSend_buildContextTree_forBook_completion_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "buildContextTree:forBook:completion:");
}

id objc_msgSend_buildDisplayPageMapsWithDocumentRoot_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "buildDisplayPageMapsWithDocumentRoot:");
}

id objc_msgSend_buildHighlightsForSearchReferences_contentsScaleForLayers_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "buildHighlightsForSearchReferences:contentsScaleForLayers:");
}

id objc_msgSend_buildHoverRegions(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "buildHoverRegions");
}

id objc_msgSend_buildType(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "buildType");
}

id objc_msgSend_bulletGeometryListType_bullet_entryOrientationState_propertySet_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "bulletGeometryListType:bullet:entryOrientationState:propertySet:");
}

id objc_msgSend_bundleForClass_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "bundleForClass:");
}

id objc_msgSend_bundleIdentifier(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "bundleIdentifier");
}

id objc_msgSend_bundlePath(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "bundlePath");
}

id objc_msgSend_bundleURL(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "bundleURL");
}

id objc_msgSend_bundleWithIdentifier_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "bundleWithIdentifier:");
}

id objc_msgSend_bundleWithURL_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "bundleWithURL:");
}

id objc_msgSend_buttonControl_imageForState_highlighted_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "buttonControl:imageForState:highlighted:");
}

id objc_msgSend_buttonControlAdjustImageWhenHighlighted_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "buttonControlAdjustImageWhenHighlighted:");
}

id objc_msgSend_buttonControlRep(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "buttonControlRep");
}

id objc_msgSend_buttonControlUseContentsScaleForImageCache_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "buttonControlUseContentsScaleForImageCache:");
}

id objc_msgSend_buttonControlWasPressed_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "buttonControlWasPressed:");
}

id objc_msgSend_buttonCornerRadius(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "buttonCornerRadius");
}

id objc_msgSend_buttonFontName(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "buttonFontName");
}

id objc_msgSend_buttonFontSize(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "buttonFontSize");
}

id objc_msgSend_buttonSize(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "buttonSize");
}

id objc_msgSend_buttonStrokeWidth(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "buttonStrokeWidth");
}

id objc_msgSend_buttonTitleColorDisabled(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "buttonTitleColorDisabled");
}

id objc_msgSend_buttonWithType_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "buttonWithType:");
}

id objc_msgSend_buyButtonItem(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "buyButtonItem");
}

id objc_msgSend_bytes(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "bytes");
}

id objc_msgSend_cString(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "cString");
}

id objc_msgSend_cStringUsingEncoding_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "cStringUsingEncoding:");
}

id objc_msgSend_cacheAndTrimNode_inState_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "cacheAndTrimNode:inState:");
}

id objc_msgSend_cacheBookDescription_forURL_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "cacheBookDescription:forURL:");
}

id objc_msgSend_cacheCharacterPosition_forDrawableAnchorId_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "cacheCharacterPosition:forDrawableAnchorId:");
}

id objc_msgSend_cacheDefinition_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "cacheDefinition:");
}

id objc_msgSend_cacheDirectoryForAsset_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "cacheDirectoryForAsset:");
}

id objc_msgSend_cacheDrawable_forSlot_withContentState_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "cacheDrawable:forSlot:withContentState:");
}

id objc_msgSend_cacheDrawable_readerState_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "cacheDrawable:readerState:");
}

id objc_msgSend_cacheFrameSpec_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "cacheFrameSpec:");
}

id objc_msgSend_cacheResult_forKey_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "cacheResult:forKey:");
}

id objc_msgSend_cachedAbsolutePageIndex(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "cachedAbsolutePageIndex");
}

id objc_msgSend_cachedAnchorForRect(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "cachedAnchorForRect");
}

id objc_msgSend_cachedAnnotationForFetchedObject_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "cachedAnnotationForFetchedObject:");
}

id objc_msgSend_cachedAnnotationForIndexPath_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "cachedAnnotationForIndexPath:");
}

id objc_msgSend_cachedAnnotationsForAnnotations_filteredWithContentNode_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "cachedAnnotationsForAnnotations:filteredWithContentNode:");
}

id objc_msgSend_cachedAnnotationsForAnnotations_withFilter_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "cachedAnnotationsForAnnotations:withFilter:");
}

id objc_msgSend_cachedAnnotationsForContentNode_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "cachedAnnotationsForContentNode:");
}

id objc_msgSend_cachedAnnotationsForFetchRequest_migrateIfNecessary_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "cachedAnnotationsForFetchRequest:migrateIfNecessary:");
}

id objc_msgSend_cachedApproval_forBookID_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "cachedApproval:forBookID:");
}

id objc_msgSend_cachedApprovalForBookID_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "cachedApprovalForBookID:");
}

id objc_msgSend_cachedBookDescriptionForURL_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "cachedBookDescriptionForURL:");
}

id objc_msgSend_cachedDataForKPFFileURL_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "cachedDataForKPFFileURL:");
}

id objc_msgSend_cachedFirstElementForUpcomingPageTurn(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "cachedFirstElementForUpcomingPageTurn");
}

id objc_msgSend_cachedFirstElementForUpcomingScreenChange(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "cachedFirstElementForUpcomingScreenChange");
}

id objc_msgSend_cachedFlowAnchorForRect(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "cachedFlowAnchorForRect");
}

id objc_msgSend_cachedFrameSize(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "cachedFrameSize");
}

id objc_msgSend_cachedLargerTextConstraints(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "cachedLargerTextConstraints");
}

id objc_msgSend_cachedPageLayoutValidated(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "cachedPageLayoutValidated");
}

id objc_msgSend_cachedPillModeNextImage(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "cachedPillModeNextImage");
}

id objc_msgSend_cachedPillModePrevImage(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "cachedPillModePrevImage");
}

id objc_msgSend_cachedResultsForKey_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "cachedResultsForKey:");
}

id objc_msgSend_calculatePointFromSearchReference_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "calculatePointFromSearchReference:");
}

id objc_msgSend_callBrowserWithURLEncoding_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "callBrowserWithURLEncoding:");
}

id objc_msgSend_callStackSymbols(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "callStackSymbols");
}

id objc_msgSend_calloutAtIndex_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "calloutAtIndex:");
}

id objc_msgSend_calloutCount(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "calloutCount");
}

id objc_msgSend_calloutEnumerator(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "calloutEnumerator");
}

id objc_msgSend_calloutIndex(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "calloutIndex");
}

id objc_msgSend_calloutInfo(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "calloutInfo");
}

id objc_msgSend_calloutInfoForDisplay(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "calloutInfoForDisplay");
}

id objc_msgSend_calloutLayer(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "calloutLayer");
}

id objc_msgSend_calloutLayouts(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "calloutLayouts");
}

id objc_msgSend_calloutReps(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "calloutReps");
}

id objc_msgSend_camera(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "camera");
}

id objc_msgSend_cameraControlEventHandler(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "cameraControlEventHandler");
}

id objc_msgSend_canAddColumnBreak(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "canAddColumnBreak");
}

id objc_msgSend_canAddColumnBreak_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "canAddColumnBreak:");
}

id objc_msgSend_canAddHighlight(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "canAddHighlight");
}

id objc_msgSend_canAddNote(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "canAddNote");
}

id objc_msgSend_canApplyToShapeRenderable(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "canApplyToShapeRenderable");
}

id objc_msgSend_canChangeBrightness(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "canChangeBrightness");
}

id objc_msgSend_canCopy(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "canCopy");
}

id objc_msgSend_canDecreaseFontSize(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "canDecreaseFontSize");
}

id objc_msgSend_canFlipTopCard(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "canFlipTopCard");
}

id objc_msgSend_canHandleGesture_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "canHandleGesture:");
}

id objc_msgSend_canHandleGesture_forChildRep_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "canHandleGesture:forChildRep:");
}

id objc_msgSend_canIncreaseFontSize(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "canIncreaseFontSize");
}

id objc_msgSend_canModifyAnnotations(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "canModifyAnnotations");
}

id objc_msgSend_canOpenURL_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "canOpenURL:");
}

id objc_msgSend_canPerformAction_withSender_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "canPerformAction:withSender:");
}

id objc_msgSend_canReadAnnotations(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "canReadAnnotations");
}

id objc_msgSend_canReadHighlights(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "canReadHighlights");
}

id objc_msgSend_canRevealTOC(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "canRevealTOC");
}

id objc_msgSend_canScroll(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "canScroll");
}

id objc_msgSend_canSeek(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "canSeek");
}

id objc_msgSend_canSendMail(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "canSendMail");
}

id objc_msgSend_canTrustCalculatedPageNumbers(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "canTrustCalculatedPageNumbers");
}

id objc_msgSend_canUpdateLibraryBarButtonItem_withOldString_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "canUpdateLibraryBarButtonItem:withOldString:");
}

id objc_msgSend_cancel(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "cancel");
}

id objc_msgSend_cancelAllOperations(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "cancelAllOperations");
}

id objc_msgSend_cancelApplePubRead(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "cancelApplePubRead");
}

id objc_msgSend_cancelDragAnimated_duration_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "cancelDragAnimated:duration:");
}

id objc_msgSend_cancelLoadIndex(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "cancelLoadIndex");
}

id objc_msgSend_cancelLoading(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "cancelLoading");
}

id objc_msgSend_cancelPreloadOfContentNodesForChapterBrowserController_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "cancelPreloadOfContentNodesForChapterBrowserController:");
}

id objc_msgSend_cancelPreviousPerformRequestsWithTarget_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "cancelPreviousPerformRequestsWithTarget:");
}

id objc_msgSend_cancelPreviousPerformRequestsWithTarget_selector_object_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "cancelPreviousPerformRequestsWithTarget:selector:object:");
}

id objc_msgSend_cancelSearch(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "cancelSearch");
}

id objc_msgSend_cancelTimer(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "cancelTimer");
}

id objc_msgSend_cancelTransform(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "cancelTransform");
}

id objc_msgSend_cancelled(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "cancelled");
}

id objc_msgSend_canvas(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "canvas");
}

id objc_msgSend_canvas_willLayoutRep_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "canvas:willLayoutRep:");
}

id objc_msgSend_canvasBoundsFrame(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "canvasBoundsFrame");
}

id objc_msgSend_canvasController(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "canvasController");
}

id objc_msgSend_canvasDidLayout(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "canvasDidLayout");
}

id objc_msgSend_canvasDidStopScrolling(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "canvasDidStopScrolling");
}

id objc_msgSend_canvasDidZoomCompletion(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "canvasDidZoomCompletion");
}

id objc_msgSend_canvasExitFreeTransformController(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "canvasExitFreeTransformController");
}

id objc_msgSend_canvasGeometry(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "canvasGeometry");
}

id objc_msgSend_canvasLayer(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "canvasLayer");
}

id objc_msgSend_canvasLayoutSize(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "canvasLayoutSize");
}

id objc_msgSend_canvasOriginDeltaForPageController_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "canvasOriginDeltaForPageController:");
}

id objc_msgSend_canvasOriginForPageController_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "canvasOriginForPageController:");
}

id objc_msgSend_canvasPosterLayer(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "canvasPosterLayer");
}

id objc_msgSend_canvasRectForAnnotation_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "canvasRectForAnnotation:");
}

id objc_msgSend_canvasRectForRelativePageIndex_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "canvasRectForRelativePageIndex:");
}

id objc_msgSend_canvasScrollView(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "canvasScrollView");
}

id objc_msgSend_canvasScrollViewForChapterBrowserController_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "canvasScrollViewForChapterBrowserController:");
}

id objc_msgSend_canvasSize(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "canvasSize");
}

id objc_msgSend_canvasSizeForPageCount_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "canvasSizeForPageCount:");
}

id objc_msgSend_canvasView(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "canvasView");
}

id objc_msgSend_canvasViewController(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "canvasViewController");
}

id objc_msgSend_capHeight(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "capHeight");
}

id objc_msgSend_capabilities(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "capabilities");
}

id objc_msgSend_caption(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "caption");
}

id objc_msgSend_captionShape(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "captionShape");
}

id objc_msgSend_captionStorage(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "captionStorage");
}

id objc_msgSend_captionStorageUpdated(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "captionStorageUpdated");
}

id objc_msgSend_cardIndex(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "cardIndex");
}

id objc_msgSend_cardinality(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "cardinality");
}

id objc_msgSend_caseInsensitiveCompare_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "caseInsensitiveCompare:");
}

id objc_msgSend_catalystNotesGestureRecognizer(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "catalystNotesGestureRecognizer");
}

id objc_msgSend_cellConfiguration(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "cellConfiguration");
}

id objc_msgSend_cellCount(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "cellCount");
}

id objc_msgSend_cellForRowAtIndexPath_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "cellForRowAtIndexPath:");
}

id objc_msgSend_cellFromTriangleIndex_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "cellFromTriangleIndex:");
}

id objc_msgSend_cellHeight(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "cellHeight");
}

id objc_msgSend_cellHeightValid(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "cellHeightValid");
}

id objc_msgSend_cellID(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "cellID");
}

id objc_msgSend_cellIndexFromTriangleIndex_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "cellIndexFromTriangleIndex:");
}

id objc_msgSend_cellMargin(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "cellMargin");
}

id objc_msgSend_cellView(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "cellView");
}

id objc_msgSend_cells(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "cells");
}

id objc_msgSend_center(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "center");
}

id objc_msgSend_centerAttribute(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "centerAttribute");
}

id objc_msgSend_centerItemTextColor(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "centerItemTextColor");
}

id objc_msgSend_centerPlusMovementContentPlacement(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "centerPlusMovementContentPlacement");
}

id objc_msgSend_centerPoint(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "centerPoint");
}

id objc_msgSend_centerXAnchor(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "centerXAnchor");
}

id objc_msgSend_centerYAnchor(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "centerYAnchor");
}

id objc_msgSend_centeredInScrollViewForScrollableCanvasController_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "centeredInScrollViewForScrollableCanvasController:");
}

id objc_msgSend_cfAttributedString(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "cfAttributedString");
}

id objc_msgSend_cfi(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "cfi");
}

id objc_msgSend_cfiCount(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "cfiCount");
}

id objc_msgSend_cfiForOffset_storageUID_includeFilename_pedantic_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "cfiForOffset:storageUID:includeFilename:pedantic:");
}

id objc_msgSend_cfiForRange_storageUID_includeFilename_pedantic_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "cfiForRange:storageUID:includeFilename:pedantic:");
}

id objc_msgSend_cfiFragWithOffset_storageUID_pedantic_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "cfiFragWithOffset:storageUID:pedantic:");
}

id objc_msgSend_cfiPath(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "cfiPath");
}

id objc_msgSend_cfiPathToNodeWithDepth_nodeArray_idArray_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "cfiPathToNodeWithDepth:nodeArray:idArray:");
}

id objc_msgSend_cfiSet(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "cfiSet");
}

id objc_msgSend_cfiString(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "cfiString");
}

id objc_msgSend_cgDataProvider(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "cgDataProvider");
}

id objc_msgSend_changeCurrentTimeTo_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "changeCurrentTimeTo:");
}

id objc_msgSend_changeNotifier(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "changeNotifier");
}

id objc_msgSend_changeToViewport_previousCalloutIndex_contentOffset_animated_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "changeToViewport:previousCalloutIndex:contentOffset:animated:");
}

id objc_msgSend_changedAnnotationUUIDsForContentNodeID_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "changedAnnotationUUIDsForContentNodeID:");
}

id objc_msgSend_changedContentNodeIDs(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "changedContentNodeIDs");
}

id objc_msgSend_chapterAndNumberStringForNavigationUnit_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "chapterAndNumberStringForNavigationUnit:");
}

id objc_msgSend_chapterBrowserController(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "chapterBrowserController");
}

id objc_msgSend_chapterBrowserController_cancelledTransitionToPageIndex_chapterIndex_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "chapterBrowserController:cancelledTransitionToPageIndex:chapterIndex:");
}

id objc_msgSend_chapterBrowserController_didTransitionToPageIndex_chapterIndex_relativeTargetRect_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "chapterBrowserController:didTransitionToPageIndex:chapterIndex:relativeTargetRect:");
}

id objc_msgSend_chapterBrowserController_isCurrentlyDisplayedPageForRelativePageIndex_andChapterIndex_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "chapterBrowserController:isCurrentlyDisplayedPageForRelativePageIndex:andChapterIndex:");
}

id objc_msgSend_chapterBrowserController_navigateToLinkInDVC_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "chapterBrowserController:navigateToLinkInDVC:");
}

id objc_msgSend_chapterBrowserController_pageNumberStringForRelativePageIndex_andChapterIndex_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "chapterBrowserController:pageNumberStringForRelativePageIndex:andChapterIndex:");
}

id objc_msgSend_chapterBrowserController_preloadContentNodesForPageRange_chapterIndex_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "chapterBrowserController:preloadContentNodesForPageRange:chapterIndex:");
}

id objc_msgSend_chapterBrowserController_rectForRelativePageIndex_chapterIndex_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "chapterBrowserController:rectForRelativePageIndex:chapterIndex:");
}

id objc_msgSend_chapterBrowserController_relativePageIndexForLink_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "chapterBrowserController:relativePageIndexForLink:");
}

id objc_msgSend_chapterBrowserController_targetRelativeRectForRelativePoint_atPageIndex_chapterIndex_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "chapterBrowserController:targetRelativeRectForRelativePoint:atPageIndex:chapterIndex:");
}

id objc_msgSend_chapterBrowserController_tocTileModelAtIndex_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "chapterBrowserController:tocTileModelAtIndex:");
}

id objc_msgSend_chapterBrowserController_updateTitleForChapterIndex_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "chapterBrowserController:updateTitleForChapterIndex:");
}

id objc_msgSend_chapterBrowserController_willTransitionToPageIndex_chapterIndex_freeTransform_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "chapterBrowserController:willTransitionToPageIndex:chapterIndex:freeTransform:");
}

id objc_msgSend_chapterBrowserPagePresentationType(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "chapterBrowserPagePresentationType");
}

id objc_msgSend_chapterCountForChapterBrowserController_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "chapterCountForChapterBrowserController:");
}

id objc_msgSend_chapterDataQueue(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "chapterDataQueue");
}

id objc_msgSend_chapterGuidString(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "chapterGuidString");
}

id objc_msgSend_chapterIndex(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "chapterIndex");
}

id objc_msgSend_chapterLabel(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "chapterLabel");
}

id objc_msgSend_chapterLabelFontSize(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "chapterLabelFontSize");
}

id objc_msgSend_chapterName(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "chapterName");
}

id objc_msgSend_chapterString(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "chapterString");
}

id objc_msgSend_chapterThumb(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "chapterThumb");
}

id objc_msgSend_chapterTitle(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "chapterTitle");
}

id objc_msgSend_chapterTitleColor(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "chapterTitleColor");
}

id objc_msgSend_chapterTitleHeightForAllChapters(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "chapterTitleHeightForAllChapters");
}

id objc_msgSend_chapterUIState(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "chapterUIState");
}

id objc_msgSend_chapterViewController(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "chapterViewController");
}

id objc_msgSend_chapterViewController_followLink_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "chapterViewController:followLink:");
}

id objc_msgSend_chapterViewTable_entryForIndex_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "chapterViewTable:entryForIndex:");
}

id objc_msgSend_chapterViewTable_selectedEntryWithIndex_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "chapterViewTable:selectedEntryWithIndex:");
}

id objc_msgSend_chapterViewTableController(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "chapterViewTableController");
}

id objc_msgSend_chapterViewTableDoneButtonPressed_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "chapterViewTableDoneButtonPressed:");
}

id objc_msgSend_chapterViewTableNumberOfEntries_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "chapterViewTableNumberOfEntries:");
}

id objc_msgSend_chapterWidth(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "chapterWidth");
}

id objc_msgSend_charIndexForPoint_inColumnsArray_allowPastBreak_allowNotFound_isAtEndOfLine_leadingEdge_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "charIndexForPoint:inColumnsArray:allowPastBreak:allowNotFound:isAtEndOfLine:leadingEdge:");
}

id objc_msgSend_charIndexForPoint_inColumnsArray_allowPastBreak_allowNotFound_pastCenterGoesToNextChar_isAtEndOfLine_leadingEdge_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "charIndexForPoint:inColumnsArray:allowPastBreak:allowNotFound:pastCenterGoesToNextChar:isAtEndOfLine:leadingEdge:");
}

id objc_msgSend_charIndexForPointWithPinning_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "charIndexForPointWithPinning:");
}

id objc_msgSend_charIndexFromPoint_allowPastBreak_allowNotFound_pastCenterGoesToNextChar_isAtEndOfLine_leadingEdge_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "charIndexFromPoint:allowPastBreak:allowNotFound:pastCenterGoesToNextChar:isAtEndOfLine:leadingEdge:");
}

id objc_msgSend_charIndexFromPoint_allowPastBreak_isAtEndOfLine_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "charIndexFromPoint:allowPastBreak:isAtEndOfLine:");
}

id objc_msgSend_characterAtIndex_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "characterAtIndex:");
}

id objc_msgSend_characterCount(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "characterCount");
}

id objc_msgSend_characterIsMember_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "characterIsMember:");
}

id objc_msgSend_characterOffsetTerminatingStepIdentifier_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "characterOffsetTerminatingStepIdentifier:");
}

id objc_msgSend_characterOffsetWithOffset_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "characterOffsetWithOffset:");
}

id objc_msgSend_characterPositionForDrawableAnchorId_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "characterPositionForDrawableAnchorId:");
}

id objc_msgSend_characterSetWithCharactersInString_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "characterSetWithCharactersInString:");
}

id objc_msgSend_characterStyle(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "characterStyle");
}

id objc_msgSend_characterStyleAtCharIndex_effectiveRange_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "characterStyleAtCharIndex:effectiveRange:");
}

id objc_msgSend_characterStyleForStyleSelector_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "characterStyleForStyleSelector:");
}

id objc_msgSend_checkAnswerButtonFrame(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "checkAnswerButtonFrame");
}

id objc_msgSend_checkEncryption(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "checkEncryption");
}

id objc_msgSend_checkIfOneOrMoreAnnotationsForStorage_range_passesTest_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "checkIfOneOrMoreAnnotationsForStorage:range:passesTest:");
}

id objc_msgSend_checkImage(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "checkImage");
}

id objc_msgSend_checkStreamNamespace_ns_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "checkStreamNamespace:ns:");
}

id objc_msgSend_checkingLayout(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "checkingLayout");
}

id objc_msgSend_checkingWPLayout(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "checkingWPLayout");
}

id objc_msgSend_childElementNameAtIndex_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "childElementNameAtIndex:");
}

id objc_msgSend_childEnumerator(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "childEnumerator");
}

id objc_msgSend_childEnumeratorForRange_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "childEnumeratorForRange:");
}

id objc_msgSend_childInfos(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "childInfos");
}

id objc_msgSend_childInfosForLayout(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "childInfosForLayout");
}

id objc_msgSend_childLayoutCreated_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "childLayoutCreated:");
}

id objc_msgSend_childNodes(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "childNodes");
}

id objc_msgSend_childNodesWithCamera(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "childNodesWithCamera");
}

id objc_msgSend_childPairAtIndex_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "childPairAtIndex:");
}

id objc_msgSend_childReps(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "childReps");
}

id objc_msgSend_childRepsForHitTesting(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "childRepsForHitTesting");
}

id objc_msgSend_childResultAtIndex_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "childResultAtIndex:");
}

id objc_msgSend_childResultCount(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "childResultCount");
}

id objc_msgSend_childResults(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "childResults");
}

id objc_msgSend_childViewControllerForStatusBarHidden(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "childViewControllerForStatusBarHidden");
}

id objc_msgSend_childViewSuperview(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "childViewSuperview");
}

id objc_msgSend_childWithIndex_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "childWithIndex:");
}

id objc_msgSend_children(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "children");
}

id objc_msgSend_childrenForLayout(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "childrenForLayout");
}

id objc_msgSend_childrenForWrappingDependents(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "childrenForWrappingDependents");
}

id objc_msgSend_childrenFromLayoutInContainerRep_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "childrenFromLayoutInContainerRep:");
}

id objc_msgSend_choice(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "choice");
}

id objc_msgSend_choiceAtIndex_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "choiceAtIndex:");
}

id objc_msgSend_choiceCount(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "choiceCount");
}

id objc_msgSend_choiceDescriptions(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "choiceDescriptions");
}

id objc_msgSend_choiceState(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "choiceState");
}

id objc_msgSend_choices(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "choices");
}

id objc_msgSend_chrome(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "chrome");
}

id objc_msgSend_chromeAnimationInterval(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "chromeAnimationInterval");
}

id objc_msgSend_clampedCenterPointForPoint_withPlacement_viewScale_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "clampedCenterPointForPoint:withPlacement:viewScale:");
}

id objc_msgSend_clampedUnscaledContentOffset_anchor_viewScale_scrollViewBoundsSize_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "clampedUnscaledContentOffset:anchor:viewScale:scrollViewBoundsSize:");
}

id objc_msgSend_clampedUnscaledContentOffset_forViewScale_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "clampedUnscaledContentOffset:forViewScale:");
}

id objc_msgSend_clampedUnscaledContentOffset_forViewScale_scrollViewBoundsSize_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "clampedUnscaledContentOffset:forViewScale:scrollViewBoundsSize:");
}

id objc_msgSend_classAttribute(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "classAttribute");
}

id objc_msgSend_classForName_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "classForName:");
}

id objc_msgSend_classNamed_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "classNamed:");
}

id objc_msgSend_cleanup(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "cleanup");
}

id objc_msgSend_cleanupEntry(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "cleanupEntry");
}

id objc_msgSend_clearAndReloadAnnotations(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "clearAndReloadAnnotations");
}

id objc_msgSend_clearAutohideTimer(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "clearAutohideTimer");
}

id objc_msgSend_clearBookDescriptionCache(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "clearBookDescriptionCache");
}

id objc_msgSend_clearCTCaches(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "clearCTCaches");
}

id objc_msgSend_clearColor(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "clearColor");
}

id objc_msgSend_clearContents(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "clearContents");
}

id objc_msgSend_clearDisplayPageMapsWithDocumentRoot_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "clearDisplayPageMapsWithDocumentRoot:");
}

id objc_msgSend_clearFlowAnchorCache(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "clearFlowAnchorCache");
}

id objc_msgSend_clearGestureRecognizer(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "clearGestureRecognizer");
}

id objc_msgSend_clearHighlightRect(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "clearHighlightRect");
}

id objc_msgSend_clearHintsOnRelativePageIndex_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "clearHintsOnRelativePageIndex:");
}

id objc_msgSend_clearIDsForTemporaryTableCellStorage(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "clearIDsForTemporaryTableCellStorage");
}

id objc_msgSend_clearLayout(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "clearLayout");
}

id objc_msgSend_clearNodesByEntry(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "clearNodesByEntry");
}

id objc_msgSend_clearPreviousCallout(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "clearPreviousCallout");
}

id objc_msgSend_clearSearch(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "clearSearch");
}

id objc_msgSend_clearSearchResults(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "clearSearchResults");
}

id objc_msgSend_clearTarget(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "clearTarget");
}

id objc_msgSend_clearTypesetterCache(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "clearTypesetterCache");
}

id objc_msgSend_clearUpperStackOnMinorPaging(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "clearUpperStackOnMinorPaging");
}

id objc_msgSend_client(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "client");
}

id objc_msgSend_clientApplicationController(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "clientApplicationController");
}

id objc_msgSend_clippingLayer(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "clippingLayer");
}

id objc_msgSend_clippingLayerHost(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "clippingLayerHost");
}

id objc_msgSend_clipsToBounds(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "clipsToBounds");
}

id objc_msgSend_clone(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "clone");
}

id objc_msgSend_cloneForTransportControl_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "cloneForTransportControl:");
}

id objc_msgSend_close_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "close:");
}

id objc_msgSend_closeButton(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "closeButton");
}

id objc_msgSend_closeButtonAlternateImage(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "closeButtonAlternateImage");
}

id objc_msgSend_closeButtonFrame(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "closeButtonFrame");
}

id objc_msgSend_closeButtonImage(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "closeButtonImage");
}

id objc_msgSend_closeButtonIsNeeded(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "closeButtonIsNeeded");
}

id objc_msgSend_closeButtonItem(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "closeButtonItem");
}

id objc_msgSend_closeDocumentWithErrorBlock_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "closeDocumentWithErrorBlock:");
}

id objc_msgSend_closePath(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "closePath");
}

id objc_msgSend_closeSectionImage(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "closeSectionImage");
}

id objc_msgSend_closeTOCButtonItem(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "closeTOCButtonItem");
}

id objc_msgSend_closestColumnForPoint_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "closestColumnForPoint:");
}

id objc_msgSend_code(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "code");
}

id objc_msgSend_collect(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "collect");
}

id objc_msgSend_color(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "color");
}

id objc_msgSend_colorAttachments(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "colorAttachments");
}

id objc_msgSend_colorAttribute(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "colorAttribute");
}

id objc_msgSend_colorBarHorizontalInset(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "colorBarHorizontalInset");
}

id objc_msgSend_colorCache(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "colorCache");
}

id objc_msgSend_colorComponentFromPair_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "colorComponentFromPair:");
}

id objc_msgSend_colorFromCaption(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "colorFromCaption");
}

id objc_msgSend_colorInArray_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "colorInArray:");
}

id objc_msgSend_colorPaletteMap(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "colorPaletteMap");
}

id objc_msgSend_colorRandomness(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "colorRandomness");
}

id objc_msgSend_colorTexCoordAttribute(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "colorTexCoordAttribute");
}

id objc_msgSend_colorWithAlphaComponent_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "colorWithAlphaComponent:");
}

id objc_msgSend_colorWithCGColor_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "colorWithCGColor:");
}

id objc_msgSend_colorWithHue_saturation_brightness_alpha_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "colorWithHue:saturation:brightness:alpha:");
}

id objc_msgSend_colorWithPatternImage_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "colorWithPatternImage:");
}

id objc_msgSend_colorWithPlatformColor_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "colorWithPlatformColor:");
}

id objc_msgSend_colorWithRed_green_blue_alpha_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "colorWithRed:green:blue:alpha:");
}

id objc_msgSend_colorWithUIColor_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "colorWithUIColor:");
}

id objc_msgSend_colorWithWhite_alpha_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "colorWithWhite:alpha:");
}

id objc_msgSend_column(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "column");
}

id objc_msgSend_columnCount(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "columnCount");
}

id objc_msgSend_columnForCharIndex_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "columnForCharIndex:");
}

id objc_msgSend_columnForCharIndex_eol_withColumns_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "columnForCharIndex:eol:withColumns:");
}

id objc_msgSend_columnFrame(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "columnFrame");
}

id objc_msgSend_columnIndex(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "columnIndex");
}

id objc_msgSend_columnMetricsForCharIndex_outRange_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "columnMetricsForCharIndex:outRange:");
}

id objc_msgSend_columnNameForCellID_cellRangeContainingName_restrictToBodyRange_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "columnNameForCellID:cellRangeContainingName:restrictToBodyRange:");
}

id objc_msgSend_columnRange(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "columnRange");
}

id objc_msgSend_columnRectForRange_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "columnRectForRange:");
}

id objc_msgSend_columnStyle(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "columnStyle");
}

id objc_msgSend_columns(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "columns");
}

id objc_msgSend_commandBuffer(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "commandBuffer");
}

id objc_msgSend_commandQueue(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "commandQueue");
}

id objc_msgSend_commandWithTitle_image_action_input_modifierFlags_propertyList_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "commandWithTitle:image:action:input:modifierFlags:propertyList:");
}

id objc_msgSend_commandWithTitle_image_action_propertyList_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "commandWithTitle:image:action:propertyList:");
}

id objc_msgSend_commit(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "commit");
}

id objc_msgSend_commitAnimations(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "commitAnimations");
}

id objc_msgSend_commitUserDataChanges(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "commitUserDataChanges");
}

id objc_msgSend_commitWithChangeList_annotationHost_moc_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "commitWithChangeList:annotationHost:moc:");
}

id objc_msgSend_commonPrefixWithString_options_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "commonPrefixWithString:options:");
}

id objc_msgSend_compactFlowPresentationState(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "compactFlowPresentationState");
}

id objc_msgSend_compactHeightPredicate(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "compactHeightPredicate");
}

id objc_msgSend_compactPresentation(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "compactPresentation");
}

id objc_msgSend_compactUIView(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "compactUIView");
}

id objc_msgSend_compactWidthPredicate(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "compactWidthPredicate");
}

id objc_msgSend_compare_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "compare:");
}

id objc_msgSend_compare_options_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "compare:options:");
}

id objc_msgSend_compare_options_range_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "compare:options:range:");
}

id objc_msgSend_compensateForStrokeThickness(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "compensateForStrokeThickness");
}

id objc_msgSend_compileContentRuleListForIdentifier_encodedContentRuleList_completionHandler_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "compileContentRuleListForIdentifier:encodedContentRuleList:completionHandler:");
}

id objc_msgSend_completeDragInDirection_newCardIndex_animated_duration_completion_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "completeDragInDirection:newCardIndex:animated:duration:completion:");
}

id objc_msgSend_completionBlock(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "completionBlock");
}

id objc_msgSend_completionTargetRect(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "completionTargetRect");
}

id objc_msgSend_componentAtIndex_identifier_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "componentAtIndex:identifier:");
}

id objc_msgSend_componentCount(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "componentCount");
}

id objc_msgSend_components(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "components");
}

id objc_msgSend_components_fromDate_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "components:fromDate:");
}

id objc_msgSend_componentsJoinedByString_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "componentsJoinedByString:");
}

id objc_msgSend_componentsSeparatedByCharactersInSet_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "componentsSeparatedByCharactersInSet:");
}

id objc_msgSend_componentsSeparatedByString_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "componentsSeparatedByString:");
}

id objc_msgSend_computeCommandEncoder(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "computeCommandEncoder");
}

id objc_msgSend_computeDirectLayerFrame_andTransform_basedOnLayoutGeometry_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "computeDirectLayerFrame:andTransform:basedOnLayoutGeometry:");
}

id objc_msgSend_configuration(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "configuration");
}

id objc_msgSend_configurationWithIdentifier_sourcePoint_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "configurationWithIdentifier:sourcePoint:");
}

id objc_msgSend_configurationWithPointSize_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "configurationWithPointSize:");
}

id objc_msgSend_configurationWithPointSize_weight_scale_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "configurationWithPointSize:weight:scale:");
}

id objc_msgSend_configurePlayButtonForRate_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "configurePlayButtonForRate:");
}

id objc_msgSend_configureVerticalScrollSwitchCell_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "configureVerticalScrollSwitchCell:");
}

id objc_msgSend_configureViewsForConfigurationChange(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "configureViewsForConfigurationChange");
}

id objc_msgSend_conformsToProtocol_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "conformsToProtocol:");
}

id objc_msgSend_constant(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "constant");
}

id objc_msgSend_constrainTableWidthToLegacyiPadWidth(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "constrainTableWidthToLegacyiPadWidth");
}

id objc_msgSend_constraintEqualToAnchor_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "constraintEqualToAnchor:");
}

id objc_msgSend_constraintEqualToAnchor_constant_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "constraintEqualToAnchor:constant:");
}

id objc_msgSend_constraintEqualToAnchor_multiplier_constant_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "constraintEqualToAnchor:multiplier:constant:");
}

id objc_msgSend_constraintEqualToConstant_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "constraintEqualToConstant:");
}

id objc_msgSend_constraintWithItem_attribute_relatedBy_toItem_attribute_multiplier_constant_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "constraintWithItem:attribute:relatedBy:toItem:attribute:multiplier:constant:");
}

id objc_msgSend_constraints(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "constraints");
}

id objc_msgSend_constraintsWithVisualFormat_options_metrics_views_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "constraintsWithVisualFormat:options:metrics:views:");
}

id objc_msgSend_containedLayout(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "containedLayout");
}

id objc_msgSend_containedRep(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "containedRep");
}

id objc_msgSend_containedStorage(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "containedStorage");
}

id objc_msgSend_container(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "container");
}

id objc_msgSend_containerLayerForRep_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "containerLayerForRep:");
}

id objc_msgSend_containerView(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "containerView");
}

id objc_msgSend_containerWrap(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "containerWrap");
}

id objc_msgSend_containsAttribute_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "containsAttribute:");
}

id objc_msgSend_containsContentNode_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "containsContentNode:");
}

id objc_msgSend_containsEffect_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "containsEffect:");
}

id objc_msgSend_containsEffect_ofType_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "containsEffect:ofType:");
}

id objc_msgSend_containsIndex_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "containsIndex:");
}

id objc_msgSend_containsInfo_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "containsInfo:");
}

id objc_msgSend_containsMovie(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "containsMovie");
}

id objc_msgSend_containsNode_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "containsNode:");
}

id objc_msgSend_containsObject_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "containsObject:");
}

id objc_msgSend_containsOccurrenceOfWord_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "containsOccurrenceOfWord:");
}

id objc_msgSend_containsPoint_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "containsPoint:");
}

id objc_msgSend_containsPoint_withSlop_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "containsPoint:withSlop:");
}

id objc_msgSend_containsPrefix_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "containsPrefix:");
}

id objc_msgSend_containsProperty_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "containsProperty:");
}

id objc_msgSend_containsUnknownContentVersions(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "containsUnknownContentVersions");
}

id objc_msgSend_containsUnknownContentVersions_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "containsUnknownContentVersions:");
}

id objc_msgSend_containsValueForKey_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "containsValueForKey:");
}

id objc_msgSend_content(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "content");
}

id objc_msgSend_contentAnimationToFocalPointFromLocation_withMovement_velocity_controller_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "contentAnimationToFocalPointFromLocation:withMovement:velocity:controller:");
}

id objc_msgSend_contentClippingLayerHost(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "contentClippingLayerHost");
}

id objc_msgSend_contentConfiguration(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "contentConfiguration");
}

id objc_msgSend_contentContainerView(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "contentContainerView");
}

id objc_msgSend_contentData(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "contentData");
}

id objc_msgSend_contentDataForSearchViewController_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "contentDataForSearchViewController:");
}

id objc_msgSend_contentFrame(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "contentFrame");
}

id objc_msgSend_contentImage(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "contentImage");
}

id objc_msgSend_contentInset(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "contentInset");
}

id objc_msgSend_contentInsets(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "contentInsets");
}

id objc_msgSend_contentInsetsForPresentationType_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "contentInsetsForPresentationType:");
}

id objc_msgSend_contentInsetsForScrollableCanvasController_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "contentInsetsForScrollableCanvasController:");
}

id objc_msgSend_contentLayer(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "contentLayer");
}

id objc_msgSend_contentLayout(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "contentLayout");
}

id objc_msgSend_contentLinkResolverWithContentNode_presentationType_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "contentLinkResolverWithContentNode:presentationType:");
}

id objc_msgSend_contentLoadOperation_loadedContentBodies_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "contentLoadOperation:loadedContentBodies:");
}

id objc_msgSend_contentLoadOperationFailed_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "contentLoadOperationFailed:");
}

id objc_msgSend_contentLoadOperationQueue(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "contentLoadOperationQueue");
}

id objc_msgSend_contentLocation(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "contentLocation");
}

id objc_msgSend_contentLocationInterpolatingFromLocation_toLocation_fraction_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "contentLocationInterpolatingFromLocation:toLocation:fraction:");
}

id objc_msgSend_contentLocationWithMovement_controller_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "contentLocationWithMovement:controller:");
}

id objc_msgSend_contentLocationWithUnscaledPoint_viewScale_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "contentLocationWithUnscaledPoint:viewScale:");
}

id objc_msgSend_contentNode(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "contentNode");
}

id objc_msgSend_contentNodeAfterNode_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "contentNodeAfterNode:");
}

id objc_msgSend_contentNodeBeforeNode_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "contentNodeBeforeNode:");
}

id objc_msgSend_contentNodeBody(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "contentNodeBody");
}

id objc_msgSend_contentNodeForAbsolutePageIndex_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "contentNodeForAbsolutePageIndex:");
}

id objc_msgSend_contentNodeForAnnotation_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "contentNodeForAnnotation:");
}

id objc_msgSend_contentNodeForBodyStorageID_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "contentNodeForBodyStorageID:");
}

id objc_msgSend_contentNodeForCfi_error_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "contentNodeForCfi:error:");
}

id objc_msgSend_contentNodeForEntry_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "contentNodeForEntry:");
}

id objc_msgSend_contentNodeForGUID_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "contentNodeForGUID:");
}

id objc_msgSend_contentNodeForInfo_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "contentNodeForInfo:");
}

id objc_msgSend_contentNodeForInfoID_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "contentNodeForInfoID:");
}

id objc_msgSend_contentNodeForPageIndex_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "contentNodeForPageIndex:");
}

id objc_msgSend_contentNodeForPageLocation_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "contentNodeForPageLocation:");
}

id objc_msgSend_contentNodeForRelativePageIndex_forPresentationType_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "contentNodeForRelativePageIndex:forPresentationType:");
}

id objc_msgSend_contentNodeFromLink_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "contentNodeFromLink:");
}

id objc_msgSend_contentNodeGUID(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "contentNodeGUID");
}

id objc_msgSend_contentNodeGUIDToContentNodeDictionary(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "contentNodeGUIDToContentNodeDictionary");
}

id objc_msgSend_contentNodeRelativePageIndex(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "contentNodeRelativePageIndex");
}

id objc_msgSend_contentNodes(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "contentNodes");
}

id objc_msgSend_contentNodesAskedToLoad(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "contentNodesAskedToLoad");
}

id objc_msgSend_contentNodesSurroundingRelativePageRange_forPresentationType_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "contentNodesSurroundingRelativePageRange:forPresentationType:");
}

id objc_msgSend_contentOffset(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "contentOffset");
}

id objc_msgSend_contentOffsetForAnchor_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "contentOffsetForAnchor:");
}

id objc_msgSend_contentOpenAnimator(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "contentOpenAnimator");
}

id objc_msgSend_contentPadding(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "contentPadding");
}

id objc_msgSend_contentPageNumberView(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "contentPageNumberView");
}

id objc_msgSend_contentPaginationOperation_paginatedNodeBody_forPresentationType_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "contentPaginationOperation:paginatedNodeBody:forPresentationType:");
}

id objc_msgSend_contentPlacementForPoint_inView_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "contentPlacementForPoint:inView:");
}

id objc_msgSend_contentProvider(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "contentProvider");
}

id objc_msgSend_contentRect(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "contentRect");
}

id objc_msgSend_contentRefPlacement(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "contentRefPlacement");
}

id objc_msgSend_contentSize(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "contentSize");
}

id objc_msgSend_contentSizeCategoryDidChange(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "contentSizeCategoryDidChange");
}

id objc_msgSend_contentStatusBarStyle(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "contentStatusBarStyle");
}

id objc_msgSend_contentStorage(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "contentStorage");
}

id objc_msgSend_contentSubType(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "contentSubType");
}

id objc_msgSend_contentTextColor(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "contentTextColor");
}

id objc_msgSend_contentTextLayout(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "contentTextLayout");
}

id objc_msgSend_contentTextRep(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "contentTextRep");
}

id objc_msgSend_contentType(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "contentType");
}

id objc_msgSend_contentView(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "contentView");
}

id objc_msgSend_contentViewController(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "contentViewController");
}

id objc_msgSend_contentViewTransform(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "contentViewTransform");
}

id objc_msgSend_contents(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "contents");
}

id objc_msgSend_contentsScale(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "contentsScale");
}

id objc_msgSend_contentsScaleForScrollableCanvasController_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "contentsScaleForScrollableCanvasController:");
}

id objc_msgSend_context(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "context");
}

id objc_msgSend_contextDirectoryForAsset_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "contextDirectoryForAsset:");
}

id objc_msgSend_contextDirectoryForAssetWithID_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "contextDirectoryForAssetWithID:");
}

id objc_msgSend_contextDirectoryPath(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "contextDirectoryPath");
}

id objc_msgSend_contextForArchive_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "contextForArchive:");
}

id objc_msgSend_contextForCurrentThread(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "contextForCurrentThread");
}

id objc_msgSend_contextRangeForResult(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "contextRangeForResult");
}

id objc_msgSend_contextWithScale_hostView_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "contextWithScale:hostView:");
}

id objc_msgSend_contextualStringsForSelection_prefix_suffix_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "contextualStringsForSelection:prefix:suffix:");
}

id objc_msgSend_continueSearch_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "continueSearch:");
}

id objc_msgSend_control_isInteractionEnabledForRep_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "control:isInteractionEnabledForRep:");
}

id objc_msgSend_control_repWasAdded_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "control:repWasAdded:");
}

id objc_msgSend_control_repWillBeRemoved_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "control:repWillBeRemoved:");
}

id objc_msgSend_controlButtonSize(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "controlButtonSize");
}

id objc_msgSend_controlCellEditorForICC_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "controlCellEditorForICC:");
}

id objc_msgSend_controlContainerChildrenForLayout_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "controlContainerChildrenForLayout:");
}

id objc_msgSend_controlContainerMasksToBounds_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "controlContainerMasksToBounds:");
}

id objc_msgSend_controlHostRep(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "controlHostRep");
}

id objc_msgSend_controlLayouts(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "controlLayouts");
}

id objc_msgSend_controlPanel(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "controlPanel");
}

id objc_msgSend_controlStyle(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "controlStyle");
}

id objc_msgSend_controller(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "controller");
}

id objc_msgSend_controllerDidTransitionToSize_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "controllerDidTransitionToSize:");
}

id objc_msgSend_controllerWillAnimateToSize_duration_inFrame_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "controllerWillAnimateToSize:duration:inFrame:");
}

id objc_msgSend_controllerWillTransitionToSize_withTransitionCoordinator_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "controllerWillTransitionToSize:withTransitionCoordinator:");
}

id objc_msgSend_controlsFrame(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "controlsFrame");
}

id objc_msgSend_controlsHidden(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "controlsHidden");
}

id objc_msgSend_controlsInfoForIntroMediaController_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "controlsInfoForIntroMediaController:");
}

id objc_msgSend_controlsLayout(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "controlsLayout");
}

id objc_msgSend_controlsSizeWithPanelWidth_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "controlsSizeWithPanelWidth:");
}

id objc_msgSend_controlsView(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "controlsView");
}

id objc_msgSend_convertBoundsToUnscaledPoint_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "convertBoundsToUnscaledPoint:");
}

id objc_msgSend_convertBoundsToUnscaledRect_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "convertBoundsToUnscaledRect:");
}

id objc_msgSend_convertBoundsToUnscaledSize_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "convertBoundsToUnscaledSize:");
}

id objc_msgSend_convertCanvasPointToOwnerPoint_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "convertCanvasPointToOwnerPoint:");
}

id objc_msgSend_convertContentLocation_fromPlacement_toPlacement_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "convertContentLocation:fromPlacement:toPlacement:");
}

id objc_msgSend_convertNaturalPointFromUnscaledCanvas_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "convertNaturalPointFromUnscaledCanvas:");
}

id objc_msgSend_convertNaturalPointToLayerRelative_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "convertNaturalPointToLayerRelative:");
}

id objc_msgSend_convertNaturalPointToUnscaledCanvas_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "convertNaturalPointToUnscaledCanvas:");
}

id objc_msgSend_convertNaturalRectFromUnscaledCanvas_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "convertNaturalRectFromUnscaledCanvas:");
}

id objc_msgSend_convertNaturalRectToLayerRelative_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "convertNaturalRectToLayerRelative:");
}

id objc_msgSend_convertNaturalRectToUnscaledCanvas_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "convertNaturalRectToUnscaledCanvas:");
}

id objc_msgSend_convertPoint_fromLayer_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "convertPoint:fromLayer:");
}

id objc_msgSend_convertPoint_fromView_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "convertPoint:fromView:");
}

id objc_msgSend_convertPoint_fromWindow_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "convertPoint:fromWindow:");
}

id objc_msgSend_convertPoint_toLayer_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "convertPoint:toLayer:");
}

id objc_msgSend_convertPoint_toView_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "convertPoint:toView:");
}

id objc_msgSend_convertPointsToRulerUnits_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "convertPointsToRulerUnits:");
}

id objc_msgSend_convertRect_fromLayer_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "convertRect:fromLayer:");
}

id objc_msgSend_convertRect_fromView_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "convertRect:fromView:");
}

id objc_msgSend_convertRect_fromWindow_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "convertRect:fromWindow:");
}

id objc_msgSend_convertRect_toLayer_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "convertRect:toLayer:");
}

id objc_msgSend_convertRect_toView_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "convertRect:toView:");
}

id objc_msgSend_convertUnscaledPointToLayerRelative_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "convertUnscaledPointToLayerRelative:");
}

id objc_msgSend_convertUnscaledToBoundsPoint_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "convertUnscaledToBoundsPoint:");
}

id objc_msgSend_convertUnscaledToBoundsRect_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "convertUnscaledToBoundsRect:");
}

id objc_msgSend_convertUnscaledToBoundsSize_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "convertUnscaledToBoundsSize:");
}

id objc_msgSend_coordinateAccessWithIntents_queue_byAccessor_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "coordinateAccessWithIntents:queue:byAccessor:");
}

id objc_msgSend_copy(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "copy");
}

id objc_msgSend_copyCGImageAtTime_actualTime_error_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "copyCGImageAtTime:actualTime:error:");
}

id objc_msgSend_copyFixingSize(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "copyFixingSize");
}

id objc_msgSend_copyItemAtPath_toPath_error_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "copyItemAtPath:toPath:error:");
}

id objc_msgSend_copyWithContext_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "copyWithContext:");
}

id objc_msgSend_copyWithContext_stylesheet_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "copyWithContext:stylesheet:");
}

id objc_msgSend_copyWithZone_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "copyWithZone:");
}

id objc_msgSend_cornerRadius(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "cornerRadius");
}

id objc_msgSend_correctCount(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "correctCount");
}

id objc_msgSend_corruptBookAlert(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "corruptBookAlert");
}

id objc_msgSend_count(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "count");
}

id objc_msgSend_countByEnumeratingWithState_objects_count_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "countByEnumeratingWithState:objects:count:");
}

id objc_msgSend_countLabel(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "countLabel");
}

id objc_msgSend_countLines(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "countLines");
}

id objc_msgSend_countOfIndexesInRange_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "countOfIndexesInRange:");
}

id objc_msgSend_countOfItemsToDelete(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "countOfItemsToDelete");
}

id objc_msgSend_countOfUserNotesToDelete(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "countOfUserNotesToDelete");
}

id objc_msgSend_counts(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "counts");
}

id objc_msgSend_coverDescriptionForAsset_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "coverDescriptionForAsset:");
}

id objc_msgSend_coverDescriptionForURL_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "coverDescriptionForURL:");
}

id objc_msgSend_cp1(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "cp1");
}

id objc_msgSend_cp2(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "cp2");
}

id objc_msgSend_createArrays_context_device_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "createArrays:context:device:");
}

id objc_msgSend_createBlurTexturesWithBlurSteps_maxBlurRadius_stepsToDecreaseRadius_commandBuffer_capabilities_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "createBlurTexturesWithBlurSteps:maxBlurRadius:stepsToDecreaseRadius:commandBuffer:capabilities:");
}

id objc_msgSend_createBodiesWithContentState_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "createBodiesWithContentState:");
}

id objc_msgSend_createBodiesWithState_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "createBodiesWithState:");
}

id objc_msgSend_createButtonItemConfigurationWithImageName_forSelector_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "createButtonItemConfigurationWithImageName:forSelector:");
}

id objc_msgSend_createColumns(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "createColumns");
}

id objc_msgSend_createColumnsWithPropertySet_columnCount_readerState_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "createColumnsWithPropertySet:columnCount:readerState:");
}

id objc_msgSend_createColumnsWithPropertySet_readerState_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "createColumnsWithPropertySet:readerState:");
}

id objc_msgSend_createContentNodeWithId_label_entry_readerState_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "createContentNodeWithId:label:entry:readerState:");
}

id objc_msgSend_createContextForCurrentThread(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "createContextForCurrentThread");
}

id objc_msgSend_createDataWithName_error_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "createDataWithName:error:");
}

id objc_msgSend_createDirectoryAtPath_withIntermediateDirectories_attributes_error_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "createDirectoryAtPath:withIntermediateDirectories:attributes:error:");
}

id objc_msgSend_createDirectoryAtURL_withIntermediateDirectories_attributes_error_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "createDirectoryAtURL:withIntermediateDirectories:attributes:error:");
}

id objc_msgSend_createDocumentWithKPFBundle_drmContext_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "createDocumentWithKPFBundle:drmContext:");
}

id objc_msgSend_createFontAtCharIndex_scaleTextPercent_effectiveRange_styleProvider_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "createFontAtCharIndex:scaleTextPercent:effectiveRange:styleProvider:");
}

id objc_msgSend_createFontFromCaption(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "createFontFromCaption");
}

id objc_msgSend_createHighlightMenuElementFor_annotationUUID_delegate_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "createHighlightMenuElementFor:annotationUUID:delegate:");
}

id objc_msgSend_createLayerHostIfNeededWithFrame_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "createLayerHostIfNeededWithFrame:");
}

id objc_msgSend_createLayerHostIfNeededWithFrame_viewScale_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "createLayerHostIfNeededWithFrame:viewScale:");
}

id objc_msgSend_createLayerHostIfNeededWithUnscaledFrame_viewScale_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "createLayerHostIfNeededWithUnscaledFrame:viewScale:");
}

id objc_msgSend_createMovieUIView(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "createMovieUIView");
}

id objc_msgSend_createPIRegularExpressionForAttribute_searchOptions_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "createPIRegularExpressionForAttribute:searchOptions:");
}

id objc_msgSend_createPaddingWithPropertySet_readerState_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "createPaddingWithPropertySet:readerState:");
}

id objc_msgSend_createPagesWithContentState_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "createPagesWithContentState:");
}

id objc_msgSend_createPlayerWithKPFDocument_bundle_layer_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "createPlayerWithKPFDocument:bundle:layer:");
}

id objc_msgSend_createPropertySetWithSelector_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "createPropertySetWithSelector:");
}

id objc_msgSend_createQueryString(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "createQueryString");
}

id objc_msgSend_createStageWithSteps_takingSteps_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "createStageWithSteps:takingSteps:");
}

id objc_msgSend_createStylesInStylesheet_presetIndex_colors_alternate_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "createStylesInStylesheet:presetIndex:colors:alternate:");
}

id objc_msgSend_createStylesWithSelector_styleCache_isLeaf_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "createStylesWithSelector:styleCache:isLeaf:");
}

id objc_msgSend_createTransportControllerForLayouts_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "createTransportControllerForLayouts:");
}

id objc_msgSend_createTransportUI(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "createTransportUI");
}

id objc_msgSend_createViewIfNeededWithFrame_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "createViewIfNeededWithFrame:");
}

id objc_msgSend_createViewIfNeededWithFrame_viewScale_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "createViewIfNeededWithFrame:viewScale:");
}

id objc_msgSend_createViewIfNeededWithUnscaledFrame_viewScale_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "createViewIfNeededWithUnscaledFrame:viewScale:");
}

id objc_msgSend_createViewsForConfigurationChange(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "createViewsForConfigurationChange");
}

id objc_msgSend_createWithBuildType_attributes_direction_effect_deliveryStyle_stageCount_eventIndex_stageIndex_startTime_eventStartTime_duration_automatic_renderer_animateAtEndOfPreviousBuild_isEmphasisBuild_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "createWithBuildType:attributes:direction:effect:deliveryStyle:stageCount:eventIndex:stageIndex:startTime:eventStartTime:duration:automatic:renderer:animateAtEndOfPreviousBuild:isEmphasisBuild:");
}

id objc_msgSend_createXmlTextWriterAtEntry_inOutputStream_isCompressed_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "createXmlTextWriterAtEntry:inOutputStream:isCompressed:");
}

id objc_msgSend_createdFromAnnotationHUD(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "createdFromAnnotationHUD");
}

id objc_msgSend_createdPressableHandler(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "createdPressableHandler");
}

id objc_msgSend_createdWebView(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "createdWebView");
}

id objc_msgSend_credential(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "credential");
}

id objc_msgSend_cropRect(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "cropRect");
}

id objc_msgSend_curBookspot(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "curBookspot");
}

id objc_msgSend_curSimpleSelector(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "curSimpleSelector");
}

id objc_msgSend_curentEventIndex(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "curentEventIndex");
}

id objc_msgSend_currentAbsolutePageIndex(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "currentAbsolutePageIndex");
}

id objc_msgSend_currentAbsolutePageIndexForBeginningOfVisibleCanvas(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "currentAbsolutePageIndexForBeginningOfVisibleCanvas");
}

id objc_msgSend_currentAbsolutePageIndexForBookmarks(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "currentAbsolutePageIndexForBookmarks");
}

id objc_msgSend_currentAbsolutePageIndexForBookmarksUsingViewCenter_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "currentAbsolutePageIndexForBookmarksUsingViewCenter:");
}

id objc_msgSend_currentAnchoredDrawableLayouts(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "currentAnchoredDrawableLayouts");
}

id objc_msgSend_currentAnnotationStyle(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "currentAnnotationStyle");
}

id objc_msgSend_currentAttributePrefix(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "currentAttributePrefix");
}

id objc_msgSend_currentBlendedWeight(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "currentBlendedWeight");
}

id objc_msgSend_currentBookspotLocation(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "currentBookspotLocation");
}

id objc_msgSend_currentBreakState(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "currentBreakState");
}

id objc_msgSend_currentBuffer(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "currentBuffer");
}

id objc_msgSend_currentCallout(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "currentCallout");
}

id objc_msgSend_currentCaptionStorage(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "currentCaptionStorage");
}

id objc_msgSend_currentChapter(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "currentChapter");
}

id objc_msgSend_currentCollation(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "currentCollation");
}

id objc_msgSend_currentContainerNode(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "currentContainerNode");
}

id objc_msgSend_currentContentNode(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "currentContentNode");
}

id objc_msgSend_currentContentNodes(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "currentContentNodes");
}

id objc_msgSend_currentDevice(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "currentDevice");
}

id objc_msgSend_currentDocOrientationState(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "currentDocOrientationState");
}

id objc_msgSend_currentDragAnnotation(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "currentDragAnnotation");
}

id objc_msgSend_currentElementPrefix(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "currentElementPrefix");
}

id objc_msgSend_currentEntryMediaState(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "currentEntryMediaState");
}

id objc_msgSend_currentEntryOrientationState(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "currentEntryOrientationState");
}

id objc_msgSend_currentEvent(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "currentEvent");
}

id objc_msgSend_currentEventIndex(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "currentEventIndex");
}

id objc_msgSend_currentHandler(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "currentHandler");
}

id objc_msgSend_currentHtmlDocMediaState(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "currentHtmlDocMediaState");
}

id objc_msgSend_currentHtmlStackEntry(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "currentHtmlStackEntry");
}

id objc_msgSend_currentHudHost(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "currentHudHost");
}

id objc_msgSend_currentInlineDrawableLayouts(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "currentInlineDrawableLayouts");
}

id objc_msgSend_currentItem(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "currentItem");
}

id objc_msgSend_currentLightLevel(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "currentLightLevel");
}

id objc_msgSend_currentLineRect(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "currentLineRect");
}

id objc_msgSend_currentLocale(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "currentLocale");
}

id objc_msgSend_currentMediaSelection(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "currentMediaSelection");
}

id objc_msgSend_currentNavigationUnit(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "currentNavigationUnit");
}

id objc_msgSend_currentNavigationUnitRelativePageIndex(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "currentNavigationUnitRelativePageIndex");
}

id objc_msgSend_currentObjectOrPlaceholder(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "currentObjectOrPlaceholder");
}

id objc_msgSend_currentPage(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "currentPage");
}

id objc_msgSend_currentPageDrawableMap(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "currentPageDrawableMap");
}

id objc_msgSend_currentPageIndex(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "currentPageIndex");
}

id objc_msgSend_currentPageInfoForBookmarks(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "currentPageInfoForBookmarks");
}

id objc_msgSend_currentPageInfoForBookmarksUsingViewCenter_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "currentPageInfoForBookmarksUsingViewCenter:");
}

id objc_msgSend_currentPageLocation(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "currentPageLocation");
}

id objc_msgSend_currentPageNumber(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "currentPageNumber");
}

id objc_msgSend_currentPresentationType(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "currentPresentationType");
}

id objc_msgSend_currentQuery(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "currentQuery");
}

id objc_msgSend_currentRID(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "currentRID");
}

id objc_msgSend_currentReferenceAnchorForEntryOrientation_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "currentReferenceAnchorForEntryOrientation:");
}

id objc_msgSend_currentRelativePageIndex(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "currentRelativePageIndex");
}

id objc_msgSend_currentRelativePageIndexRange(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "currentRelativePageIndexRange");
}

id objc_msgSend_currentSlide(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "currentSlide");
}

id objc_msgSend_currentSlideIndex(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "currentSlideIndex");
}

id objc_msgSend_currentStackEntry(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "currentStackEntry");
}

id objc_msgSend_currentStage(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "currentStage");
}

id objc_msgSend_currentState(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "currentState");
}

id objc_msgSend_currentSubreaderWithState_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "currentSubreaderWithState:");
}

id objc_msgSend_currentTOCLessonIndex(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "currentTOCLessonIndex");
}

id objc_msgSend_currentTableReader(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "currentTableReader");
}

id objc_msgSend_currentThread(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "currentThread");
}

id objc_msgSend_currentThumbImage(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "currentThumbImage");
}

id objc_msgSend_currentTime(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "currentTime");
}

id objc_msgSend_currentTocTile(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "currentTocTile");
}

id objc_msgSend_currentTransform(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "currentTransform");
}

id objc_msgSend_currentViewScale(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "currentViewScale");
}

id objc_msgSend_currentWeight(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "currentWeight");
}

id objc_msgSend_currentXmlStackEntry(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "currentXmlStackEntry");
}

id objc_msgSend_currentlyFocusedElement(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "currentlyFocusedElement");
}

id objc_msgSend_currentlyScrolling(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "currentlyScrolling");
}

id objc_msgSend_currentlyWaitingOnThreadedLayoutAndRender(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "currentlyWaitingOnThreadedLayoutAndRender");
}

id objc_msgSend_cursorIndex(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "cursorIndex");
}

id objc_msgSend_curtainColorForFreeTransformController_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "curtainColorForFreeTransformController:");
}

id objc_msgSend_curtainLayer(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "curtainLayer");
}

id objc_msgSend_curtainSizeForFreeTransformController_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "curtainSizeForFreeTransformController:");
}

id objc_msgSend_curveAndOvershootAnimation(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "curveAndOvershootAnimation");
}

id objc_msgSend_curveToPoint_controlPoint1_controlPoint2_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "curveToPoint:controlPoint1:controlPoint2:");
}

id objc_msgSend_customPageIndex(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "customPageIndex");
}

id objc_msgSend_cvc(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "cvc");
}

id objc_msgSend_darkMode(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "darkMode");
}

id objc_msgSend_data(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "data");
}

id objc_msgSend_dataBuffer(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "dataBuffer");
}

id objc_msgSend_dataChunkSize(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "dataChunkSize");
}

id objc_msgSend_dataForAbsoluteURL_context_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "dataForAbsoluteURL:context:");
}

id objc_msgSend_dataForDocRelativePath_context_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "dataForDocRelativePath:context:");
}

id objc_msgSend_dataFromDocumentURI_context_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "dataFromDocumentURI:context:");
}

id objc_msgSend_dataFromNSData_filename_context_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "dataFromNSData:filename:context:");
}

id objc_msgSend_dataLength(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "dataLength");
}

id objc_msgSend_dataRepresentationForEntryName_error_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "dataRepresentationForEntryName:error:");
}

id objc_msgSend_dataRepresentationForFile_error_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "dataRepresentationForFile:error:");
}

id objc_msgSend_dataSource(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "dataSource");
}

id objc_msgSend_dataUsingEncoding_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "dataUsingEncoding:");
}

id objc_msgSend_dataWithBytes_length_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "dataWithBytes:length:");
}

id objc_msgSend_dataWithContentsOfFile_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "dataWithContentsOfFile:");
}

id objc_msgSend_dataWithContentsOfFile_error_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "dataWithContentsOfFile:error:");
}

id objc_msgSend_dataWithContentsOfURL_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "dataWithContentsOfURL:");
}

id objc_msgSend_dataWithContentsOfURL_drmContext_error_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "dataWithContentsOfURL:drmContext:error:");
}

id objc_msgSend_dataWithContentsOfURL_error_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "dataWithContentsOfURL:error:");
}

id objc_msgSend_dataWithContentsOfURL_options_error_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "dataWithContentsOfURL:options:error:");
}

id objc_msgSend_dataWithContentsOfURLString_sourceUrl_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "dataWithContentsOfURLString:sourceUrl:");
}

id objc_msgSend_dataWithJSONObject_options_error_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "dataWithJSONObject:options:error:");
}

id objc_msgSend_dataWithLength_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "dataWithLength:");
}

id objc_msgSend_databaseKey(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "databaseKey");
}

id objc_msgSend_date(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "date");
}

id objc_msgSend_dateFromString_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "dateFromString:");
}

id objc_msgSend_dateLabel(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "dateLabel");
}

id objc_msgSend_dateLabelHorizontalInset(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "dateLabelHorizontalInset");
}

id objc_msgSend_dateWithTimeIntervalSinceNow_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "dateWithTimeIntervalSinceNow:");
}

id objc_msgSend_deactivateConstraints_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "deactivateConstraints:");
}

id objc_msgSend_deadTouchRectsForPan(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "deadTouchRectsForPan");
}

id objc_msgSend_dealloc(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "dealloc");
}

id objc_msgSend_debugOnly(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "debugOnly");
}

id objc_msgSend_decodeBoolForKey_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "decodeBoolForKey:");
}

id objc_msgSend_decodeDoubleForKey_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "decodeDoubleForKey:");
}

id objc_msgSend_decodeFloatForKey_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "decodeFloatForKey:");
}

id objc_msgSend_decodeIntegerForKey_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "decodeIntegerForKey:");
}

id objc_msgSend_decodeObject(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "decodeObject");
}

id objc_msgSend_decodeObjectOfClass_forKey_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "decodeObjectOfClass:forKey:");
}

id objc_msgSend_decodeObjectOfClasses_forKey_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "decodeObjectOfClasses:forKey:");
}

id objc_msgSend_decreaseFontSize_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "decreaseFontSize:");
}

id objc_msgSend_decrementCurrentEventIndex(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "decrementCurrentEventIndex");
}

id objc_msgSend_decrementCurrentSlideIndex(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "decrementCurrentSlideIndex");
}

id objc_msgSend_decryptEntryWithName_error_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "decryptEntryWithName:error:");
}

id objc_msgSend_defaultBackgroundColor(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "defaultBackgroundColor");
}

id objc_msgSend_defaultBookLibrary(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "defaultBookLibrary");
}

id objc_msgSend_defaultCacheManager(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "defaultCacheManager");
}

id objc_msgSend_defaultCenter(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "defaultCenter");
}

id objc_msgSend_defaultDisabledShadow(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "defaultDisabledShadow");
}

id objc_msgSend_defaultEnvironment(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "defaultEnvironment");
}

id objc_msgSend_defaultImage(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "defaultImage");
}

id objc_msgSend_defaultLabelIndents(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "defaultLabelIndents");
}

id objc_msgSend_defaultLabelString(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "defaultLabelString");
}

id objc_msgSend_defaultListStyle(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "defaultListStyle");
}

id objc_msgSend_defaultManager(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "defaultManager");
}

id objc_msgSend_defaultNoneListStyle(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "defaultNoneListStyle");
}

id objc_msgSend_defaultParagraphStyle(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "defaultParagraphStyle");
}

id objc_msgSend_defaultStatusBarHeightInOrientation_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "defaultStatusBarHeightInOrientation:");
}

id objc_msgSend_defaultStore(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "defaultStore");
}

id objc_msgSend_defaultStyleWithContext_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "defaultStyleWithContext:");
}

id objc_msgSend_defaultStyleWithContext_type_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "defaultStyleWithContext:type:");
}

id objc_msgSend_defaultValueForProperty_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "defaultValueForProperty:");
}

id objc_msgSend_defaultVoiceOverOptions(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "defaultVoiceOverOptions");
}

id objc_msgSend_deferCanvasLayoutToAfterRotationHasCompleted(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "deferCanvasLayoutToAfterRotationHasCompleted");
}

id objc_msgSend_deferExposeWebView(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "deferExposeWebView");
}

id objc_msgSend_deferViewCreationForScrollableCanvasController_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "deferViewCreationForScrollableCanvasController:");
}

id objc_msgSend_deferredStageViewFrame(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "deferredStageViewFrame");
}

id objc_msgSend_definesProperty_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "definesProperty:");
}

id objc_msgSend_definition(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "definition");
}

id objc_msgSend_definitionMap(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "definitionMap");
}

id objc_msgSend_definitionsViewController(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "definitionsViewController");
}

id objc_msgSend_deflateTarget_intoHints_childHints_anchoredAttachmentPositions_topicNumbers_layoutState_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "deflateTarget:intoHints:childHints:anchoredAttachmentPositions:topicNumbers:layoutState:");
}

id objc_msgSend_delayedTFTapGestureRecognizer(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "delayedTFTapGestureRecognizer");
}

id objc_msgSend_delegate(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "delegate");
}

id objc_msgSend_delegateMap(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "delegateMap");
}

id objc_msgSend_deleteCharactersInRange_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "deleteCharactersInRange:");
}

id objc_msgSend_deleteObject_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "deleteObject:");
}

id objc_msgSend_deleteRange_undoTransaction_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "deleteRange:undoTransaction:");
}

id objc_msgSend_deleteRowsAtIndexPaths_withRowAnimation_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "deleteRowsAtIndexPaths:withRowAnimation:");
}

id objc_msgSend_deleteSections_withRowAnimation_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "deleteSections:withRowAnimation:");
}

id objc_msgSend_deleteSelectedNotes(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "deleteSelectedNotes");
}

id objc_msgSend_deletedAnnotationUUIDsForContentNodeID_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "deletedAnnotationUUIDsForContentNodeID:");
}

id objc_msgSend_deltaFromOriginalOffset(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "deltaFromOriginalOffset");
}

id objc_msgSend_denyBookmarkEdit(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "denyBookmarkEdit");
}

id objc_msgSend_dependentLayouts(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "dependentLayouts");
}

id objc_msgSend_dequeueReusableCellWithIdentifier_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "dequeueReusableCellWithIdentifier:");
}

id objc_msgSend_dequeueReusableCellWithIdentifier_forIndexPath_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "dequeueReusableCellWithIdentifier:forIndexPath:");
}

id objc_msgSend_dequeueReusableHeaderFooterViewWithIdentifier_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "dequeueReusableHeaderFooterViewWithIdentifier:");
}

id objc_msgSend_descendentWrappables(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "descendentWrappables");
}

id objc_msgSend_describedImageWithIdentifier_size_processingOptions_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "describedImageWithIdentifier:size:processingOptions:");
}

id objc_msgSend_description(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "description");
}

id objc_msgSend_descriptionForAsset_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "descriptionForAsset:");
}

id objc_msgSend_descriptionForURL_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "descriptionForURL:");
}

id objc_msgSend_descriptionGeometry(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "descriptionGeometry");
}

id objc_msgSend_descriptionStorage(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "descriptionStorage");
}

id objc_msgSend_descriptionWithAsset_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "descriptionWithAsset:");
}

id objc_msgSend_descriptionWithURL_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "descriptionWithURL:");
}

id objc_msgSend_descriptionWithURL_assetID_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "descriptionWithURL:assetID:");
}

id objc_msgSend_deselectAllNotes(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "deselectAllNotes");
}

id objc_msgSend_deselectRowAtIndexPath_animated_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "deselectRowAtIndexPath:animated:");
}

id objc_msgSend_desiredPageSizeForRelativePageIndex_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "desiredPageSizeForRelativePageIndex:");
}

id objc_msgSend_destination(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "destination");
}

id objc_msgSend_destroyAnnotation_undoContext_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "destroyAnnotation:undoContext:");
}

id objc_msgSend_destroyAnnotations_undoContext_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "destroyAnnotations:undoContext:");
}

id objc_msgSend_destroyLayoutState_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "destroyLayoutState:");
}

id objc_msgSend_detachFromView_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "detachFromView:");
}

id objc_msgSend_detailNavigationController(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "detailNavigationController");
}

id objc_msgSend_detailScrubbingAvailableForCurrentDuration(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "detailScrubbingAvailableForCurrentDuration");
}

id objc_msgSend_detailSlider_didChangeScrubSpeed_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "detailSlider:didChangeScrubSpeed:");
}

id objc_msgSend_detailSlider_didChangeValue_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "detailSlider:didChangeValue:");
}

id objc_msgSend_detailSliderTrackingDidBegin_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "detailSliderTrackingDidBegin:");
}

id objc_msgSend_detailTextLabel(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "detailTextLabel");
}

id objc_msgSend_detailsDataSource(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "detailsDataSource");
}

id objc_msgSend_detailsViewController(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "detailsViewController");
}

id objc_msgSend_device(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "device");
}

id objc_msgSend_deviceBoundsForCellRange_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "deviceBoundsForCellRange:");
}

id objc_msgSend_dictionary(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "dictionary");
}

id objc_msgSend_dictionaryHasDefinitionForTerm_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "dictionaryHasDefinitionForTerm:");
}

id objc_msgSend_dictionaryRepresentation(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "dictionaryRepresentation");
}

id objc_msgSend_dictionaryWithCapacity_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "dictionaryWithCapacity:");
}

id objc_msgSend_dictionaryWithContentsOfFile_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "dictionaryWithContentsOfFile:");
}

id objc_msgSend_dictionaryWithContentsOfPlistData_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "dictionaryWithContentsOfPlistData:");
}

id objc_msgSend_dictionaryWithDictionary_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "dictionaryWithDictionary:");
}

id objc_msgSend_dictionaryWithObject_forKey_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "dictionaryWithObject:forKey:");
}

id objc_msgSend_dictionaryWithObjects_forKeys_count_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "dictionaryWithObjects:forKeys:count:");
}

id objc_msgSend_dictionaryWithObjectsAndKeys_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "dictionaryWithObjectsAndKeys:");
}

id objc_msgSend_didAnimate(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "didAnimate");
}

id objc_msgSend_didAnimatePostCommit(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "didAnimatePostCommit");
}

id objc_msgSend_didBeginFreeTransform(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "didBeginFreeTransform");
}

id objc_msgSend_didChangeValueForKey_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "didChangeValueForKey:");
}

id objc_msgSend_didCloseBook_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "didCloseBook:");
}

id objc_msgSend_didCloseDocument(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "didCloseDocument");
}

id objc_msgSend_didDrawCenterBurst(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "didDrawCenterBurst");
}

id objc_msgSend_didEndFreeTransform(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "didEndFreeTransform");
}

id objc_msgSend_didEnterBackground(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "didEnterBackground");
}

id objc_msgSend_didExitExpanded(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "didExitExpanded");
}

id objc_msgSend_didFailWithError_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "didFailWithError:");
}

id objc_msgSend_didFinish(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "didFinish");
}

id objc_msgSend_didJumpToPageLocation_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "didJumpToPageLocation:");
}

id objc_msgSend_didLayoutBlock(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "didLayoutBlock");
}

id objc_msgSend_didMoveToParentViewController_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "didMoveToParentViewController:");
}

id objc_msgSend_didPresentExpanded(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "didPresentExpanded");
}

id objc_msgSend_didPresentExpandedPostCommit(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "didPresentExpandedPostCommit");
}

id objc_msgSend_didPresentViewController_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "didPresentViewController:");
}

id objc_msgSend_didReceiveData_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "didReceiveData:");
}

id objc_msgSend_didReceiveResponse_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "didReceiveResponse:");
}

id objc_msgSend_didReset_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "didReset:");
}

id objc_msgSend_didTransitionFromCanvas(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "didTransitionFromCanvas");
}

id objc_msgSend_didTransitionFromViewController_toTOCViewController_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "didTransitionFromViewController:toTOCViewController:");
}

id objc_msgSend_differenceRangeWithCache_storageUID_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "differenceRangeWithCache:storageUID:");
}

id objc_msgSend_differsInMoreThanTranslationFrom_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "differsInMoreThanTranslationFrom:");
}

id objc_msgSend_direction(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "direction");
}

id objc_msgSend_directionView(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "directionView");
}

id objc_msgSend_directionViewController(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "directionViewController");
}

id objc_msgSend_dirtyRange(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "dirtyRange");
}

id objc_msgSend_disableAllGestures(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "disableAllGestures");
}

id objc_msgSend_disableCanvasInteraction(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "disableCanvasInteraction");
}

id objc_msgSend_disableNormalGestures(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "disableNormalGestures");
}

id objc_msgSend_disableParentScrollOnFirstOrLastPage(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "disableParentScrollOnFirstOrLastPage");
}

id objc_msgSend_disableScrolling(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "disableScrolling");
}

id objc_msgSend_disabledPrimaryColor(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "disabledPrimaryColor");
}

id objc_msgSend_disallowEditingOfTextStringWithStorage_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "disallowEditingOfTextStringWithStorage:");
}

id objc_msgSend_disallowRotate(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "disallowRotate");
}

id objc_msgSend_discloseButtonLeftMargin(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "discloseButtonLeftMargin");
}

id objc_msgSend_discloseButtonRadius(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "discloseButtonRadius");
}

id objc_msgSend_discloseButtonRightMargin(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "discloseButtonRightMargin");
}

id objc_msgSend_discloseButtonWidth(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "discloseButtonWidth");
}

id objc_msgSend_disconnect(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "disconnect");
}

id objc_msgSend_dismissActivePopover(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "dismissActivePopover");
}

id objc_msgSend_dismissActivePopoverIsTransitioning_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "dismissActivePopoverIsTransitioning:");
}

id objc_msgSend_dismissActivePopovers(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "dismissActivePopovers");
}

id objc_msgSend_dismissActivityController_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "dismissActivityController:");
}

id objc_msgSend_dismissAnimated_completion_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "dismissAnimated:completion:");
}

id objc_msgSend_dismissBookmarkMenu_completion_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "dismissBookmarkMenu:completion:");
}

id objc_msgSend_dismissCompletionHandler(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "dismissCompletionHandler");
}

id objc_msgSend_dismissDisplaySettings_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "dismissDisplaySettings:");
}

id objc_msgSend_dismissExpandedAnimatedWithCompletionBlock_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "dismissExpandedAnimatedWithCompletionBlock:");
}

id objc_msgSend_dismissExpandedImmediate(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "dismissExpandedImmediate");
}

id objc_msgSend_dismissGR(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "dismissGR");
}

id objc_msgSend_dismissPopoverAnimated_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "dismissPopoverAnimated:");
}

id objc_msgSend_dismissSearchKeyboard_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "dismissSearchKeyboard:");
}

id objc_msgSend_dismissSearchPopover_completion_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "dismissSearchPopover:completion:");
}

id objc_msgSend_dismissSharePopover(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "dismissSharePopover");
}

id objc_msgSend_dismissSharePopover_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "dismissSharePopover:");
}

id objc_msgSend_dismissStudyOptionsMenu_completion_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "dismissStudyOptionsMenu:completion:");
}

id objc_msgSend_dismissTOCGlossaryView_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "dismissTOCGlossaryView:");
}

id objc_msgSend_dismissViewControllerAnimated_completion_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "dismissViewControllerAnimated:completion:");
}

id objc_msgSend_dispatch_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "dispatch:");
}

id objc_msgSend_dispatchQueue(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "dispatchQueue");
}

id objc_msgSend_dispatchThreadgroups_threadsPerThreadgroup_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "dispatchThreadgroups:threadsPerThreadgroup:");
}

id objc_msgSend_displayAtCurrentLayerTime(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "displayAtCurrentLayerTime");
}

id objc_msgSend_displayEntry_whenCollapsed_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "displayEntry:whenCollapsed:");
}

id objc_msgSend_displayIndex_withEntry_animated_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "displayIndex:withEntry:animated:");
}

id objc_msgSend_displayMode(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "displayMode");
}

id objc_msgSend_displayModeButtonItem(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "displayModeButtonItem");
}

id objc_msgSend_displayModeDidChange_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "displayModeDidChange:");
}

id objc_msgSend_displayNumberStringFromEncodedPageNumberResult_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "displayNumberStringFromEncodedPageNumberResult:");
}

id objc_msgSend_displayPageNumber(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "displayPageNumber");
}

id objc_msgSend_displayPageNumberArray(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "displayPageNumberArray");
}

id objc_msgSend_displayPageNumberForAbsolutePageIndex_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "displayPageNumberForAbsolutePageIndex:");
}

id objc_msgSend_displayPageNumberForPageIndex_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "displayPageNumberForPageIndex:");
}

id objc_msgSend_displayPageNumberFormat(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "displayPageNumberFormat");
}

id objc_msgSend_displayPageNumberMap(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "displayPageNumberMap");
}

id objc_msgSend_displayPageNumberValue(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "displayPageNumberValue");
}

id objc_msgSend_displaySectionInfoForRelativePageIndex_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "displaySectionInfoForRelativePageIndex:");
}

id objc_msgSend_displaySettingsController_willChangeStyle_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "displaySettingsController:willChangeStyle:");
}

id objc_msgSend_displaySettingsControllerDidChangeFontSize_toFlowSizeScale_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "displaySettingsControllerDidChangeFontSize:toFlowSizeScale:");
}

id objc_msgSend_displaySettingsViewController(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "displaySettingsViewController");
}

id objc_msgSend_displaySinglePageChapterSeparately_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "displaySinglePageChapterSeparately:");
}

id objc_msgSend_displaySinglePageChapterSeparatelyForPageController_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "displaySinglePageChapterSeparatelyForPageController:");
}

id objc_msgSend_displaySleepController(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "displaySleepController");
}

id objc_msgSend_displayStartingPageFormatForPresentationType_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "displayStartingPageFormatForPresentationType:");
}

id objc_msgSend_displayStartingPageFormats(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "displayStartingPageFormats");
}

id objc_msgSend_displayStartingPageNumberForPresentationType_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "displayStartingPageNumberForPresentationType:");
}

id objc_msgSend_displayStartingPageNumbers(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "displayStartingPageNumbers");
}

id objc_msgSend_displayValueForStyleSelector_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "displayValueForStyleSelector:");
}

id objc_msgSend_displayedEntry(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "displayedEntry");
}

id objc_msgSend_distanceFieldTextureWithTexture_textureSize_maxDistance_edgeInsets_downsampleScale_floatTexture_makeCPUReadable_metalContext_capabilities_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "distanceFieldTextureWithTexture:textureSize:maxDistance:edgeInsets:downsampleScale:floatTexture:makeCPUReadable:metalContext:capabilities:");
}

id objc_msgSend_distanceSquaredToPoint_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "distanceSquaredToPoint:");
}

id objc_msgSend_distantFuture(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "distantFuture");
}

id objc_msgSend_divider(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "divider");
}

id objc_msgSend_dividerColor(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "dividerColor");
}

id objc_msgSend_dividerHeightConstraint(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "dividerHeightConstraint");
}

id objc_msgSend_dividerView(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "dividerView");
}

id objc_msgSend_doNotDisturbStatusAtStart(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "doNotDisturbStatusAtStart");
}

id objc_msgSend_docRelativePath(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "docRelativePath");
}

id objc_msgSend_docVersion(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "docVersion");
}

id objc_msgSend_documentDidLoad(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "documentDidLoad");
}

id objc_msgSend_documentEntryURI(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "documentEntryURI");
}

id objc_msgSend_documentLinkResolver(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "documentLinkResolver");
}

id objc_msgSend_documentNavModel(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "documentNavModel");
}

id objc_msgSend_documentNavigator(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "documentNavigator");
}

id objc_msgSend_documentNavigator_didChangeFromChapterAtIndex_toChapterAtIndex_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "documentNavigator:didChangeFromChapterAtIndex:toChapterAtIndex:");
}

id objc_msgSend_documentNavigator_didChangeFromContentNode_toContentNode_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "documentNavigator:didChangeFromContentNode:toContentNode:");
}

id objc_msgSend_documentNavigator_didJumpToPageLocation_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "documentNavigator:didJumpToPageLocation:");
}

id objc_msgSend_documentNavigator_didJumpToStorageAnchor_withWillJumpReturn_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "documentNavigator:didJumpToStorageAnchor:withWillJumpReturn:");
}

id objc_msgSend_documentNavigator_failedToFollowAnchor_pulse_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "documentNavigator:failedToFollowAnchor:pulse:");
}

id objc_msgSend_documentNavigator_failedToFollowLink_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "documentNavigator:failedToFollowLink:");
}

id objc_msgSend_documentNavigator_willChangeFromChapterAtIndex_toChapterAtIndex_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "documentNavigator:willChangeFromChapterAtIndex:toChapterAtIndex:");
}

id objc_msgSend_documentNavigator_willChangeFromContentNode_toContentNode_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "documentNavigator:willChangeFromContentNode:toContentNode:");
}

id objc_msgSend_documentNavigator_willJumpToPageLocation_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "documentNavigator:willJumpToPageLocation:");
}

id objc_msgSend_documentNavigator_willJumpToStorageAnchor_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "documentNavigator:willJumpToStorageAnchor:");
}

id objc_msgSend_documentNavigator_willNavigateToAbsolutePageIndex_inContentNode_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "documentNavigator:willNavigateToAbsolutePageIndex:inContentNode:");
}

id objc_msgSend_documentNavigatorForInteractiveCanvasController_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "documentNavigatorForInteractiveCanvasController:");
}

id objc_msgSend_documentNavigatorIsInTwoPageMode_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "documentNavigatorIsInTwoPageMode:");
}

id objc_msgSend_documentNavigatorIsOnActiveCanvas_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "documentNavigatorIsOnActiveCanvas:");
}

id objc_msgSend_documentNavigatorWillScrollToNextSection_completionBlock_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "documentNavigatorWillScrollToNextSection:completionBlock:");
}

id objc_msgSend_documentNavigatorWillScrollToPreviousSection_completionBlock_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "documentNavigatorWillScrollToPreviousSection:completionBlock:");
}

id objc_msgSend_documentObject(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "documentObject");
}

id objc_msgSend_documentPath(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "documentPath");
}

id objc_msgSend_documentRelativeEntryForRelativeUri_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "documentRelativeEntryForRelativeUri:");
}

id objc_msgSend_documentRoot(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "documentRoot");
}

id objc_msgSend_documentRootForChapterBrowserController_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "documentRootForChapterBrowserController:");
}

id objc_msgSend_documentRootForSceneController_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "documentRootForSceneController:");
}

id objc_msgSend_documentRootForSectionController_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "documentRootForSectionController:");
}

id objc_msgSend_documentViewController(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "documentViewController");
}

id objc_msgSend_documentViewController_bodyReps_visibleRectIs_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "documentViewController:bodyReps:visibleRectIs:");
}

id objc_msgSend_documentViewController_didChangePaginationStatus_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "documentViewController:didChangePaginationStatus:");
}

id objc_msgSend_documentViewControllerWithDocument_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "documentViewControllerWithDocument:");
}

id objc_msgSend_documentWillDealloc(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "documentWillDealloc");
}

id objc_msgSend_domain(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "domain");
}

id objc_msgSend_doneButton(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "doneButton");
}

id objc_msgSend_doneRendering(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "doneRendering");
}

id objc_msgSend_doubleBetween::(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "doubleBetween::");
}

id objc_msgSend_doubleTapGR(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "doubleTapGR");
}

id objc_msgSend_doubleTapGestureRecognizer(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "doubleTapGestureRecognizer");
}

id objc_msgSend_doubleValue(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "doubleValue");
}

id objc_msgSend_dragGestureRecognizer_requiredMovementForTouch_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "dragGestureRecognizer:requiredMovementForTouch:");
}

id objc_msgSend_dragOffset(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "dragOffset");
}

id objc_msgSend_dragStartPoint(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "dragStartPoint");
}

id objc_msgSend_draggablePlacardLayout_imageSizeForSize_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "draggablePlacardLayout:imageSizeForSize:");
}

id objc_msgSend_draggablePlacardLayout_originForSize_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "draggablePlacardLayout:originForSize:");
}

id objc_msgSend_draggablePlacardLayoutInsets_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "draggablePlacardLayoutInsets:");
}

id objc_msgSend_draggablePlacardLayoutTextHeight_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "draggablePlacardLayoutTextHeight:");
}

id objc_msgSend_draggablePlacardLayoutTextInsets_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "draggablePlacardLayoutTextInsets:");
}

id objc_msgSend_draggablePlacardLayoutTextWidth_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "draggablePlacardLayoutTextWidth:");
}

id objc_msgSend_draggedPastThreshold(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "draggedPastThreshold");
}

id objc_msgSend_draggingPlacardIndex(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "draggingPlacardIndex");
}

id objc_msgSend_draggingRep(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "draggingRep");
}

id objc_msgSend_drain(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "drain");
}

id objc_msgSend_drawBloomEffectWithTexture_metalContext_encoder_MVPMatrix_bloomAmount_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "drawBloomEffectWithTexture:metalContext:encoder:MVPMatrix:bloomAmount:");
}

id objc_msgSend_drawGrid_encoder_currentBuffer_advanceDynamicBuffer_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "drawGrid:encoder:currentBuffer:advanceDynamicBuffer:");
}

id objc_msgSend_drawImageInContext_rect_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "drawImageInContext:rect:");
}

id objc_msgSend_drawInRect_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "drawInRect:");
}

id objc_msgSend_drawInRect_blendMode_alpha_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "drawInRect:blendMode:alpha:");
}

id objc_msgSend_drawMetalWithEncoder_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "drawMetalWithEncoder:");
}

id objc_msgSend_drawResultWithWorkingRenderEncoder_destinationRenderEncoder_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "drawResultWithWorkingRenderEncoder:destinationRenderEncoder:");
}

id objc_msgSend_drawWipeWithPercent_opacity_renderEncoder_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "drawWipeWithPercent:opacity:renderEncoder:");
}

id objc_msgSend_drawWithEncoder_atIndex_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "drawWithEncoder:atIndex:");
}

id objc_msgSend_drawWithEncoder_atIndex_advanceDynamicBuffer_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "drawWithEncoder:atIndex:advanceDynamicBuffer:");
}

id objc_msgSend_drawWithEncoder_atIndex_range_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "drawWithEncoder:atIndex:range:");
}

id objc_msgSend_drawWithPercent_opacity_rotation_clockwise_texture_context_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "drawWithPercent:opacity:rotation:clockwise:texture:context:");
}

id objc_msgSend_drawable(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "drawable");
}

id objc_msgSend_drawableAttachmentCache(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "drawableAttachmentCache");
}

id objc_msgSend_drawableFrame(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "drawableFrame");
}

id objc_msgSend_drawablePlacementClass(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "drawablePlacementClass");
}

id objc_msgSend_drawablePositionings(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "drawablePositionings");
}

id objc_msgSend_drawableReaderForCurrentMediaStateWithStackEntry_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "drawableReaderForCurrentMediaStateWithStackEntry:");
}

id objc_msgSend_drawableStorage(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "drawableStorage");
}

id objc_msgSend_drawableToPresent(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "drawableToPresent");
}

id objc_msgSend_drawableWidgetWithContext_infoGeometry_widgetTitle_stageDrawable_widgetInfo_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "drawableWidgetWithContext:infoGeometry:widgetTitle:stageDrawable:widgetInfo:");
}

id objc_msgSend_drawables(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "drawables");
}

id objc_msgSend_drawablesZOrder(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "drawablesZOrder");
}

id objc_msgSend_drawerFrame(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "drawerFrame");
}

id objc_msgSend_drawsPageBackground(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "drawsPageBackground");
}

id objc_msgSend_drmContext(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "drmContext");
}

id objc_msgSend_dropCapSpacingWithLineCount_elevatedLineCount_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "dropCapSpacingWithLineCount:elevatedLineCount:");
}

id objc_msgSend_dropCapWithCharCount_characterStyleOverridePropertyMap_spacing_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "dropCapWithCharCount:characterStyleOverridePropertyMap:spacing:");
}

id objc_msgSend_duration(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "duration");
}

id objc_msgSend_durationChanged_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "durationChanged:");
}

id objc_msgSend_dynamicOperationController(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "dynamicOperationController");
}

id objc_msgSend_dynamicallyZooming(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "dynamicallyZooming");
}

id objc_msgSend_editControlCenteringRect(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "editControlCenteringRect");
}

id objc_msgSend_editMenuForHighlightAtPoint_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "editMenuForHighlightAtPoint:");
}

id objc_msgSend_editMenuInteraction(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "editMenuInteraction");
}

id objc_msgSend_editableAnnotationForInsertionPointSelection_includeComments_withOutRange_selectionIsOnEdge_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "editableAnnotationForInsertionPointSelection:includeComments:withOutRange:selectionIsOnEdge:");
}

id objc_msgSend_editingCellID(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "editingCellID");
}

id objc_msgSend_editingCellIDInTable(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "editingCellIDInTable");
}

id objc_msgSend_editingHighlightLayer(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "editingHighlightLayer");
}

id objc_msgSend_editingHighlightWidthForAnnotationRenderer_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "editingHighlightWidthForAnnotationRenderer:");
}

id objc_msgSend_editorController(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "editorController");
}

id objc_msgSend_editorForEditAction_withSender_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "editorForEditAction:withSender:");
}

id objc_msgSend_editorGeometry(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "editorGeometry");
}

id objc_msgSend_effectClassWithName_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "effectClassWithName:");
}

id objc_msgSend_effectClassWithName_andType_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "effectClassWithName:andType:");
}

id objc_msgSend_effectView(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "effectView");
}

id objc_msgSend_elementAtIndex_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "elementAtIndex:");
}

id objc_msgSend_elementAtIndex_associatedPoints_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "elementAtIndex:associatedPoints:");
}

id objc_msgSend_elementCount(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "elementCount");
}

id objc_msgSend_elementHasTextAlign_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "elementHasTextAlign:");
}

id objc_msgSend_elementId(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "elementId");
}

id objc_msgSend_elementInfoForElement_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "elementInfoForElement:");
}

id objc_msgSend_elementInfoForElementName_elementNamespace_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "elementInfoForElementName:elementNamespace:");
}

id objc_msgSend_elementInfos(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "elementInfos");
}

id objc_msgSend_elementIsTableRelated_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "elementIsTableRelated:");
}

id objc_msgSend_elementKind(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "elementKind");
}

id objc_msgSend_elementName(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "elementName");
}

id objc_msgSend_elementNamespace(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "elementNamespace");
}

id objc_msgSend_elementReaders(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "elementReaders");
}

id objc_msgSend_elementType(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "elementType");
}

id objc_msgSend_embeddedArtHref(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "embeddedArtHref");
}

id objc_msgSend_embeddedArtURL(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "embeddedArtURL");
}

id objc_msgSend_embeddedCanvasDidEndScrolling(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "embeddedCanvasDidEndScrolling");
}

id objc_msgSend_embeddedCanvasWillBeginScrolling(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "embeddedCanvasWillBeginScrolling");
}

id objc_msgSend_emitInBookSearchEventWithTracker_readingSessionData_contentData_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "emitInBookSearchEventWithTracker:readingSessionData:contentData:");
}

id objc_msgSend_emitReadEventWithTracker_readingSessionData_contentData_readingSettingsData_upSellData_contentSettingsData_doNotDisturbData_startTime_completion_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "emitReadEventWithTracker:readingSessionData:contentData:readingSettingsData:upSellData:contentSettingsData:doNotDisturbData:startTime:completion:");
}

id objc_msgSend_emitReadingAutoNightSettingChangeEventWithTracker_readingSessionData_contentData_isOn_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "emitReadingAutoNightSettingChangeEventWithTracker:readingSessionData:contentData:isOn:");
}

id objc_msgSend_emitReadingBackgroundColorChangeEventWithTracker_readingSessionData_contentData_backgroundColorData_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "emitReadingBackgroundColorChangeEventWithTracker:readingSessionData:contentData:backgroundColorData:");
}

id objc_msgSend_emitReadingFontSizeChangeEventWithTracker_readingSessionData_contentData_fontSize_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "emitReadingFontSizeChangeEventWithTracker:readingSessionData:contentData:fontSize:");
}

id objc_msgSend_emitReadingOrientationChangeEventWithTracker_readingSessionData_contentData_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "emitReadingOrientationChangeEventWithTracker:readingSessionData:contentData:");
}

id objc_msgSend_emptyCellForTable_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "emptyCellForTable:");
}

id objc_msgSend_emptyPattern(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "emptyPattern");
}

id objc_msgSend_emptyStroke(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "emptyStroke");
}

id objc_msgSend_enableGestureKinds_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "enableGestureKinds:");
}

id objc_msgSend_enabled(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "enabled");
}

id objc_msgSend_enabledOnlyIfWidgetInteractionDisabledOnPage(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "enabledOnlyIfWidgetInteractionDisabledOnPage");
}

id objc_msgSend_enclosingScrollView(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "enclosingScrollView");
}

id objc_msgSend_encodeBool_forKey_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "encodeBool:forKey:");
}

id objc_msgSend_encodeDouble_forKey_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "encodeDouble:forKey:");
}

id objc_msgSend_encodeFloat_forKey_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "encodeFloat:forKey:");
}

id objc_msgSend_encodeInteger_forKey_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "encodeInteger:forKey:");
}

id objc_msgSend_encodeObject_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "encodeObject:");
}

id objc_msgSend_encodeObject_forKey_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "encodeObject:forKey:");
}

id objc_msgSend_encodedData(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "encodedData");
}

id objc_msgSend_encryptionXmlPathForArchive_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "encryptionXmlPathForArchive:");
}

id objc_msgSend_encryptionXmlPathForArchiveAtPath_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "encryptionXmlPathForArchiveAtPath:");
}

id objc_msgSend_end(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "end");
}

id objc_msgSend_endAppearanceTransition(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "endAppearanceTransition");
}

id objc_msgSend_endCurrentReferenceAnchorForEntryOrientation_contentState_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "endCurrentReferenceAnchorForEntryOrientation:contentState:");
}

id objc_msgSend_endCurrentReferenceAnchorForEntryOrientation_readerState_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "endCurrentReferenceAnchorForEntryOrientation:readerState:");
}

id objc_msgSend_endCurrentReferenceAnchorWithContentState_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "endCurrentReferenceAnchorWithContentState:");
}

id objc_msgSend_endDisablingInterfaceAutorotation(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "endDisablingInterfaceAutorotation");
}

id objc_msgSend_endDragHighlightAtPoint_accept_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "endDragHighlightAtPoint:accept:");
}

id objc_msgSend_endDragInDirection_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "endDragInDirection:");
}

id objc_msgSend_endEditing(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "endEditing");
}

id objc_msgSend_endEditingDidDelete_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "endEditingDidDelete:");
}

id objc_msgSend_endElement(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "endElement");
}

id objc_msgSend_endElementInStream_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "endElementInStream:");
}

id objc_msgSend_endEncoding(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "endEncoding");
}

id objc_msgSend_endIgnoringInteractionEvents(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "endIgnoringInteractionEvents");
}

id objc_msgSend_endRevealTOC(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "endRevealTOC");
}

id objc_msgSend_endRevealTOCWithEnumerator_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "endRevealTOCWithEnumerator:");
}

id objc_msgSend_endStaticLayoutAndRender_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "endStaticLayoutAndRender:");
}

id objc_msgSend_endTime(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "endTime");
}

id objc_msgSend_endUISession(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "endUISession");
}

id objc_msgSend_endUpdates(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "endUpdates");
}

id objc_msgSend_endshow(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "endshow");
}

id objc_msgSend_enforceAnimationLayer(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "enforceAnimationLayer");
}

id objc_msgSend_enhancedReportObject_withWarning_parameters_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "enhancedReportObject:withWarning:parameters:");
}

id objc_msgSend_enqueueMainThreadBlock_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "enqueueMainThreadBlock:");
}

id objc_msgSend_ensure2DStrokeArray_hasDim1_dim2_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "ensure2DStrokeArray:hasDim1:dim2:");
}

id objc_msgSend_ensureCacheDirectory_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "ensureCacheDirectory:");
}

id objc_msgSend_ensureContextDirectoryExists_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "ensureContextDirectoryExists:");
}

id objc_msgSend_ensureDocumentIsLoaded(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "ensureDocumentIsLoaded");
}

id objc_msgSend_ensureGeometryFitsChildren(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "ensureGeometryFitsChildren");
}

id objc_msgSend_ensureLayoutThroughRect_pad_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "ensureLayoutThroughRect:pad:");
}

id objc_msgSend_ensureLayoutThroughRelativePageRange_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "ensureLayoutThroughRelativePageRange:");
}

id objc_msgSend_ensureMinimumNumberOfRows_withState_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "ensureMinimumNumberOfRows:withState:");
}

id objc_msgSend_ensureNonSponsoredAnnotationsAreMigrated(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "ensureNonSponsoredAnnotationsAreMigrated");
}

id objc_msgSend_ensureReadyToPlay(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "ensureReadyToPlay");
}

id objc_msgSend_ensureWidgetObjectInjected(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "ensureWidgetObjectInjected");
}

id objc_msgSend_entries(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "entries");
}

id objc_msgSend_entry(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "entry");
}

id objc_msgSend_entryAtIndex_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "entryAtIndex:");
}

id objc_msgSend_entryBody(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "entryBody");
}

id objc_msgSend_entryCount(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "entryCount");
}

id objc_msgSend_entryForColor_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "entryForColor:");
}

id objc_msgSend_entryForPath_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "entryForPath:");
}

id objc_msgSend_entryForRowAtIndexPath_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "entryForRowAtIndexPath:");
}

id objc_msgSend_entryForTerm_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "entryForTerm:");
}

id objc_msgSend_entryNSURL(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "entryNSURL");
}

id objc_msgSend_entryPath(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "entryPath");
}

id objc_msgSend_entryURI(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "entryURI");
}

id objc_msgSend_entryWithName_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "entryWithName:");
}

id objc_msgSend_enumerateAnnotationsForStorage_range_withBlock_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "enumerateAnnotationsForStorage:range:withBlock:");
}

id objc_msgSend_enumerateAnnotationsWithBlock_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "enumerateAnnotationsWithBlock:");
}

id objc_msgSend_enumerateAttachmentsInTextRange_usingBlock_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "enumerateAttachmentsInTextRange:usingBlock:");
}

id objc_msgSend_enumerateAttachmentsOfClass_inTextRange_usingBlock_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "enumerateAttachmentsOfClass:inTextRange:usingBlock:");
}

id objc_msgSend_enumerateIndexesUsingBlock_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "enumerateIndexesUsingBlock:");
}

id objc_msgSend_enumerateKeysAndObjectsUsingBlock_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "enumerateKeysAndObjectsUsingBlock:");
}

id objc_msgSend_enumerateObjectsUsingBlock_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "enumerateObjectsUsingBlock:");
}

id objc_msgSend_enumerateObjectsWithOptions_usingBlock_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "enumerateObjectsWithOptions:usingBlock:");
}

id objc_msgSend_enumerateOccurrencesOfWord_withBlock_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "enumerateOccurrencesOfWord:withBlock:");
}

id objc_msgSend_enumerateOccurrencesWithBlock_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "enumerateOccurrencesWithBlock:");
}

id objc_msgSend_enumeratePageHostsUsingBlock_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "enumeratePageHostsUsingBlock:");
}

id objc_msgSend_enumeratePropertiesUsingBlock_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "enumeratePropertiesUsingBlock:");
}

id objc_msgSend_enumerateSelectedCellsInTable_withFlags_usingBlock_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "enumerateSelectedCellsInTable:withFlags:usingBlock:");
}

id objc_msgSend_enumerateSmartFieldsWithAttributeKind_inRange_usingBlock_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "enumerateSmartFieldsWithAttributeKind:inRange:usingBlock:");
}

id objc_msgSend_enumerateSubdomainsOfHost_usingBlock_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "enumerateSubdomainsOfHost:usingBlock:");
}

id objc_msgSend_enumerateSubstringsInRange_options_usingBlock_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "enumerateSubstringsInRange:options:usingBlock:");
}

id objc_msgSend_enumerateSubtreeUsingBlock_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "enumerateSubtreeUsingBlock:");
}

id objc_msgSend_enumerateWithAttributeKind_inRange_usingBlock_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "enumerateWithAttributeKind:inRange:usingBlock:");
}

id objc_msgSend_enumerateWordsForPrefix_withBlock_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "enumerateWordsForPrefix:withBlock:");
}

id objc_msgSend_enumeratorAtPath_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "enumeratorAtPath:");
}

id objc_msgSend_enumeratorAtURL_includingPropertiesForKeys_options_errorHandler_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "enumeratorAtURL:includingPropertiesForKeys:options:errorHandler:");
}

id objc_msgSend_environment(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "environment");
}

id objc_msgSend_environmentFromData_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "environmentFromData:");
}

id objc_msgSend_equationEnvironment(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "equationEnvironment");
}

id objc_msgSend_equationEnvironmentEntry(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "equationEnvironmentEntry");
}

id objc_msgSend_error(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "error");
}

id objc_msgSend_errorWithDomain_code_userInfo_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "errorWithDomain:code:userInfo:");
}

id objc_msgSend_evaluate_blockIfCorrect_blockIfIncorrect_blockIfMissing_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "evaluate:blockIfCorrect:blockIfIncorrect:blockIfMissing:");
}

id objc_msgSend_evaluateAnswerWithResponseController_updateScore_choiceBlock_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "evaluateAnswerWithResponseController:updateScore:choiceBlock:");
}

id objc_msgSend_evaluateBlockIfCorrect_blockIfIncorrect_blockIfMissing_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "evaluateBlockIfCorrect:blockIfIncorrect:blockIfMissing:");
}

id objc_msgSend_evaluateJavaScript_completionHandler_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "evaluateJavaScript:completionHandler:");
}

id objc_msgSend_evaluatorClass(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "evaluatorClass");
}

id objc_msgSend_eventCount(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "eventCount");
}

id objc_msgSend_eventDictAtIndex_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "eventDictAtIndex:");
}

id objc_msgSend_eventHandler(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "eventHandler");
}

id objc_msgSend_eventIndexForSlideIndex_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "eventIndexForSlideIndex:");
}

id objc_msgSend_exception(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "exception");
}

id objc_msgSend_exceptionWithName_reason_userInfo_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "exceptionWithName:reason:userInfo:");
}

id objc_msgSend_exchangeObjectAtIndex_withObjectAtIndex_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "exchangeObjectAtIndex:withObjectAtIndex:");
}

id objc_msgSend_executeFetchRequest_error_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "executeFetchRequest:error:");
}

id objc_msgSend_existingBookViewControllerForDocumentRoot_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "existingBookViewControllerForDocumentRoot:");
}

id objc_msgSend_exitAVPresentation_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "exitAVPresentation:");
}

id objc_msgSend_exitExpandedTimer(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "exitExpandedTimer");
}

id objc_msgSend_exitingExpanded(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "exitingExpanded");
}

id objc_msgSend_expandableExpandedPresentationDidEnd(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "expandableExpandedPresentationDidEnd");
}

id objc_msgSend_expandableInfoForWidgetInfo_forPresentationType_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "expandableInfoForWidgetInfo:forPresentationType:");
}

id objc_msgSend_expandableRep(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "expandableRep");
}

id objc_msgSend_expandableRepContainsHTMLContent_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "expandableRepContainsHTMLContent:");
}

id objc_msgSend_expandableRepForInfo_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "expandableRepForInfo:");
}

id objc_msgSend_expandableShouldPreloadExpanded(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "expandableShouldPreloadExpanded");
}

id objc_msgSend_expandableUseContainerForAnimations_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "expandableUseContainerForAnimations:");
}

id objc_msgSend_expandableWillPresentExpanded(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "expandableWillPresentExpanded");
}

id objc_msgSend_expandedAllowsPresentationInExpandedForInfo_isReflowablePresentation_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "expandedAllowsPresentationInExpandedForInfo:isReflowablePresentation:");
}

id objc_msgSend_expandedAppearance(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "expandedAppearance");
}

id objc_msgSend_expandedAppearanceForPanel_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "expandedAppearanceForPanel:");
}

id objc_msgSend_expandedBackgroundColor(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "expandedBackgroundColor");
}

id objc_msgSend_expandedContentAllowDoubleTapZoom(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "expandedContentAllowDoubleTapZoom");
}

id objc_msgSend_expandedContentAllowPinchZoom(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "expandedContentAllowPinchZoom");
}

id objc_msgSend_expandedContentDrawableToPresent(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "expandedContentDrawableToPresent");
}

id objc_msgSend_expandedContentHandlesDoubleTapZoomDirectly(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "expandedContentHandlesDoubleTapZoomDirectly");
}

id objc_msgSend_expandedContentMaximumZoomScale(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "expandedContentMaximumZoomScale");
}

id objc_msgSend_expandedContentMinimumZoomScale(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "expandedContentMinimumZoomScale");
}

id objc_msgSend_expandedContentNonContiguousZoomScale(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "expandedContentNonContiguousZoomScale");
}

id objc_msgSend_expandedContentScrollEnabled(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "expandedContentScrollEnabled");
}

id objc_msgSend_expandedDidAnimateRotationToSize_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "expandedDidAnimateRotationToSize:");
}

id objc_msgSend_expandedDidAppearPreAnimation(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "expandedDidAppearPreAnimation");
}

id objc_msgSend_expandedDidRotateTransitionToSize_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "expandedDidRotateTransitionToSize:");
}

id objc_msgSend_expandedDidTransitionToSize_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "expandedDidTransitionToSize:");
}

id objc_msgSend_expandedDrawableToPresent(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "expandedDrawableToPresent");
}

id objc_msgSend_expandedFrameInUnscaledCanvasSize(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "expandedFrameInUnscaledCanvasSize");
}

id objc_msgSend_expandedHasContentForPanel_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "expandedHasContentForPanel:");
}

id objc_msgSend_expandedHeightForPanel_allowDefault_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "expandedHeightForPanel:allowDefault:");
}

id objc_msgSend_expandedInfo(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "expandedInfo");
}

id objc_msgSend_expandedOnly(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "expandedOnly");
}

id objc_msgSend_expandedPanel_willAnimateToVisible_duration_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "expandedPanel:willAnimateToVisible:duration:");
}

id objc_msgSend_expandedPanel_willChangeToVisible_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "expandedPanel:willChangeToVisible:");
}

id objc_msgSend_expandedRep(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "expandedRep");
}

id objc_msgSend_expandedRepController(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "expandedRepController");
}

id objc_msgSend_expandedRepControllerAnimatePanel_withCrossFadeContent_backgroundLayout_duration_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "expandedRepControllerAnimatePanel:withCrossFadeContent:backgroundLayout:duration:");
}

id objc_msgSend_expandedRepControllerHasRoomForPanels(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "expandedRepControllerHasRoomForPanels");
}

id objc_msgSend_expandedRepControllerInvalidateChildrenInPanel_invalidateWPAuto_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "expandedRepControllerInvalidateChildrenInPanel:invalidateWPAuto:");
}

id objc_msgSend_expandedRepControllerState(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "expandedRepControllerState");
}

id objc_msgSend_expandedRepControllerUpdatePanelVisibility(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "expandedRepControllerUpdatePanelVisibility");
}

id objc_msgSend_expandedRepSourceRep(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "expandedRepSourceRep");
}

id objc_msgSend_expandedRotationAnimationController(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "expandedRotationAnimationController");
}

id objc_msgSend_expandedShouldDismissOnChangeFromSizeClassPairWithController_flowMode_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "expandedShouldDismissOnChangeFromSizeClassPairWithController:flowMode:");
}

id objc_msgSend_expandedStackedControlContainerInsetsForPanel_withDefault_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "expandedStackedControlContainerInsetsForPanel:withDefault:");
}

id objc_msgSend_expandedStageDrawable(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "expandedStageDrawable");
}

id objc_msgSend_expandedSupportedGestureKinds(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "expandedSupportedGestureKinds");
}

id objc_msgSend_expandedViewController(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "expandedViewController");
}

id objc_msgSend_expandedViewController_activateProgressForRep_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "expandedViewController:activateProgressForRep:");
}

id objc_msgSend_expandedViewController_deactivateProgressForRep_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "expandedViewController:deactivateProgressForRep:");
}

id objc_msgSend_expandedViewControllerDidCancelDismiss_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "expandedViewControllerDidCancelDismiss:");
}

id objc_msgSend_expandedViewControllerDidDismiss_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "expandedViewControllerDidDismiss:");
}

id objc_msgSend_expandedViewControllerDidPresent_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "expandedViewControllerDidPresent:");
}

id objc_msgSend_expandedViewControllerWillBeginDismissing_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "expandedViewControllerWillBeginDismissing:");
}

id objc_msgSend_expandedViewControllerWillDismiss_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "expandedViewControllerWillDismiss:");
}

id objc_msgSend_expandedViewControllerWillPresent_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "expandedViewControllerWillPresent:");
}

id objc_msgSend_expandedWillAnimateRotationFromSize_toSize_duration_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "expandedWillAnimateRotationFromSize:toSize:duration:");
}

id objc_msgSend_expandedWillPresentWithController_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "expandedWillPresentWithController:");
}

id objc_msgSend_expandedWillRotateTransitionFromSize_toSize_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "expandedWillRotateTransitionFromSize:toSize:");
}

id objc_msgSend_expandedZoomableInteractiveCanvasController(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "expandedZoomableInteractiveCanvasController");
}

id objc_msgSend_exposurePolicy(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "exposurePolicy");
}

id objc_msgSend_extendedDragOffsetInDirection_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "extendedDragOffsetInDirection:");
}

id objc_msgSend_exteriorOfBezierPath_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "exteriorOfBezierPath:");
}

id objc_msgSend_exteriorTextWrap(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "exteriorTextWrap");
}

id objc_msgSend_exteriorTextWrapWithCssValue_readerState_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "exteriorTextWrapWithCssValue:readerState:");
}

id objc_msgSend_exteriorTextWrapWithIsHTMLWrap_type_direction_fitType_margin_alphaThreshold_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "exteriorTextWrapWithIsHTMLWrap:type:direction:fitType:margin:alphaThreshold:");
}

id objc_msgSend_externalURLLoadPrompter(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "externalURLLoadPrompter");
}

id objc_msgSend_externalURLOpenPrompter(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "externalURLOpenPrompter");
}

id objc_msgSend_fadeInAnimationLayer(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "fadeInAnimationLayer");
}

id objc_msgSend_fadeInOnDelayAnimationToOpacity_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "fadeInOnDelayAnimationToOpacity:");
}

id objc_msgSend_fadeOutAnimationLayer(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "fadeOutAnimationLayer");
}

id objc_msgSend_fadeoutTimer(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "fadeoutTimer");
}

id objc_msgSend_fallThroughClass(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "fallThroughClass");
}

id objc_msgSend_fallbackImage(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "fallbackImage");
}

id objc_msgSend_familyName(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "familyName");
}

id objc_msgSend_fetchCGImageFor_forRequest_timeOut_waitForNonGeneric_completion_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "fetchCGImageFor:forRequest:timeOut:waitForNonGeneric:completion:");
}

id objc_msgSend_fetchCurrentState_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "fetchCurrentState:");
}

id objc_msgSend_fidgetResolver(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "fidgetResolver");
}

id objc_msgSend_fieldOfViewInRadians(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "fieldOfViewInRadians");
}

id objc_msgSend_figureReference(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "figureReference");
}

id objc_msgSend_fileAttributes(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "fileAttributes");
}

id objc_msgSend_fileCache(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "fileCache");
}

id objc_msgSend_fileExistsAtPath_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "fileExistsAtPath:");
}

id objc_msgSend_fileExistsAtPath_isDirectory_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "fileExistsAtPath:isDirectory:");
}

id objc_msgSend_fileSize(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "fileSize");
}

id objc_msgSend_fileURLWithPath_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "fileURLWithPath:");
}

id objc_msgSend_fileURLWithPath_isDirectory_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "fileURLWithPath:isDirectory:");
}

id objc_msgSend_fill(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "fill");
}

id objc_msgSend_fillType(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "fillType");
}

id objc_msgSend_fillsForDefaultSeriesType(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "fillsForDefaultSeriesType");
}

id objc_msgSend_filterOutGlossaryKeysFromOccurrenceMap_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "filterOutGlossaryKeysFromOccurrenceMap:");
}

id objc_msgSend_filterWithType_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "filterWithType:");
}

id objc_msgSend_filteredArrayUsingPredicate_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "filteredArrayUsingPredicate:");
}

id objc_msgSend_filters(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "filters");
}

id objc_msgSend_finalizePageHintsForOrientation_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "finalizePageHintsForOrientation:");
}

id objc_msgSend_finalizeStrokesWithState_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "finalizeStrokesWithState:");
}

id objc_msgSend_find_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "find:");
}

id objc_msgSend_findCharIndex(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "findCharIndex");
}

id objc_msgSend_findMasterSlotWithId_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "findMasterSlotWithId:");
}

id objc_msgSend_findRefNodeFromRoot_reader_ns_manifest_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "findRefNodeFromRoot:reader:ns:manifest:");
}

id objc_msgSend_findSlotWithId_pageIndex_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "findSlotWithId:pageIndex:");
}

id objc_msgSend_findVisibleCellInTable_forIndexPath_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "findVisibleCellInTable:forIndexPath:");
}

id objc_msgSend_findcolorInfo_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "findcolorInfo:");
}

id objc_msgSend_finishDecoding(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "finishDecoding");
}

id objc_msgSend_finishEncoding(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "finishEncoding");
}

id objc_msgSend_finishLoading(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "finishLoading");
}

id objc_msgSend_fireworkStartingPositionX(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "fireworkStartingPositionX");
}

id objc_msgSend_first(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "first");
}

id objc_msgSend_firstBodyCharacterIndexOverlappingPageRect_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "firstBodyCharacterIndexOverlappingPageRect:");
}

id objc_msgSend_firstBodyCharacterIndexOverlappingPageRect_forRelativePageIndex_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "firstBodyCharacterIndexOverlappingPageRect:forRelativePageIndex:");
}

id objc_msgSend_firstBodyCharacterIndexOverlappingPageRect_forRelativePageIndex_onMissReturnClosestBody_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "firstBodyCharacterIndexOverlappingPageRect:forRelativePageIndex:onMissReturnClosestBody:");
}

id objc_msgSend_firstCharacterIndexOverlappingPageRect_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "firstCharacterIndexOverlappingPageRect:");
}

id objc_msgSend_firstChildResultWithElementName_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "firstChildResultWithElementName:");
}

id objc_msgSend_firstChildTarget(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "firstChildTarget");
}

id objc_msgSend_firstDotSpecialRendering(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "firstDotSpecialRendering");
}

id objc_msgSend_firstElementForUpcomingPageTurnResetCount(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "firstElementForUpcomingPageTurnResetCount");
}

id objc_msgSend_firstElementForUpcomingScreenChangeResetCount(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "firstElementForUpcomingScreenChangeResetCount");
}

id objc_msgSend_firstHint(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "firstHint");
}

id objc_msgSend_firstIndex(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "firstIndex");
}

id objc_msgSend_firstLaunchView(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "firstLaunchView");
}

id objc_msgSend_firstLineAscent(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "firstLineAscent");
}

id objc_msgSend_firstLineCacheRange(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "firstLineCacheRange");
}

id objc_msgSend_firstLineCacheRect(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "firstLineCacheRect");
}

id objc_msgSend_firstLineInRect_forBodyAnchor_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "firstLineInRect:forBodyAnchor:");
}

id objc_msgSend_firstLineInRect_fromCharIndex_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "firstLineInRect:fromCharIndex:");
}

id objc_msgSend_firstLoad(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "firstLoad");
}

id objc_msgSend_firstMatchInString_options_range_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "firstMatchInString:options:range:");
}

id objc_msgSend_firstModelLink(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "firstModelLink");
}

id objc_msgSend_firstNavigationUnit(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "firstNavigationUnit");
}

id objc_msgSend_firstNoteBelowSectionAdjustment(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "firstNoteBelowSectionAdjustment");
}

id objc_msgSend_firstObject(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "firstObject");
}

id objc_msgSend_firstPageIndex(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "firstPageIndex");
}

id objc_msgSend_firstPageIndexIntersectingRange_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "firstPageIndexIntersectingRange:");
}

id objc_msgSend_firstRectForRange_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "firstRectForRange:");
}

id objc_msgSend_firstTarget(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "firstTarget");
}

id objc_msgSend_firstThumbOverlap(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "firstThumbOverlap");
}

id objc_msgSend_firstThumbSize(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "firstThumbSize");
}

id objc_msgSend_firstTimeScore(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "firstTimeScore");
}

id objc_msgSend_firstValueFromCandidatePropertyNames_selectedIndex_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "firstValueFromCandidatePropertyNames:selectedIndex:");
}

id objc_msgSend_fitHeightViewScale(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "fitHeightViewScale");
}

id objc_msgSend_fitWidthViewScale(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "fitWidthViewScale");
}

id objc_msgSend_fixFrameAndScrollView(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "fixFrameAndScrollView");
}

id objc_msgSend_fixedPageSizeForLandscapeOrientation_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "fixedPageSizeForLandscapeOrientation:");
}

id objc_msgSend_flashScrollIndicators(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "flashScrollIndicators");
}

id objc_msgSend_flipAffordancePressed(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "flipAffordancePressed");
}

id objc_msgSend_flipGlyphFrame(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "flipGlyphFrame");
}

id objc_msgSend_floatForKey_context_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "floatForKey:context:");
}

id objc_msgSend_floatFromString_usingDefault_restOfString_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "floatFromString:usingDefault:restOfString:");
}

id objc_msgSend_floatValue(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "floatValue");
}

id objc_msgSend_floatValueForKey_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "floatValueForKey:");
}

id objc_msgSend_floatValueForProperty_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "floatValueForProperty:");
}

id objc_msgSend_floatingDrawableInfos(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "floatingDrawableInfos");
}

id objc_msgSend_floatingDrawableLayouts(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "floatingDrawableLayouts");
}

id objc_msgSend_floatingDrawableLayoutsForTarget_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "floatingDrawableLayoutsForTarget:");
}

id objc_msgSend_floatingDrawableStorage(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "floatingDrawableStorage");
}

id objc_msgSend_floatingHeaderController(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "floatingHeaderController");
}

id objc_msgSend_floatingInfo(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "floatingInfo");
}

id objc_msgSend_floatingLayout(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "floatingLayout");
}

id objc_msgSend_floatingLayouts(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "floatingLayouts");
}

id objc_msgSend_floatingWrappables(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "floatingWrappables");
}

id objc_msgSend_flowFontScaleForFontSize_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "flowFontScaleForFontSize:");
}

id objc_msgSend_flowIsCurrent(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "flowIsCurrent");
}

id objc_msgSend_flowLayoutObserverForSectionController_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "flowLayoutObserverForSectionController:");
}

id objc_msgSend_flowMediaTypes(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "flowMediaTypes");
}

id objc_msgSend_flowModeEnabled_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "flowModeEnabled:");
}

id objc_msgSend_flowModelContentNodeBody(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "flowModelContentNodeBody");
}

id objc_msgSend_flowPageController_isEdgeObscured_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "flowPageController:isEdgeObscured:");
}

id objc_msgSend_flowPageControllerWillChangeContentHeight_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "flowPageControllerWillChangeContentHeight:");
}

id objc_msgSend_flowPositionerWithDelegate_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "flowPositionerWithDelegate:");
}

id objc_msgSend_flowPresentationType(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "flowPresentationType");
}

id objc_msgSend_flowPresentationTypeInContext_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "flowPresentationTypeInContext:");
}

id objc_msgSend_flowPresentationTypeInContext_pageSize_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "flowPresentationTypeInContext:pageSize:");
}

id objc_msgSend_flowSectionController(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "flowSectionController");
}

id objc_msgSend_flowSizeScale(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "flowSizeScale");
}

id objc_msgSend_flowState(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "flowState");
}

id objc_msgSend_flowTocViewController(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "flowTocViewController");
}

id objc_msgSend_flows(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "flows");
}

id objc_msgSend_flush(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "flush");
}

id objc_msgSend_flushThumbnails(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "flushThumbnails");
}

id objc_msgSend_focusShapeView(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "focusShapeView");
}

id objc_msgSend_followAbsolutePageIndex_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "followAbsolutePageIndex:");
}

id objc_msgSend_followAnchor_pulse_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "followAnchor:pulse:");
}

id objc_msgSend_followLink_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "followLink:");
}

id objc_msgSend_followLink_animated_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "followLink:animated:");
}

id objc_msgSend_followingAnchor(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "followingAnchor");
}

id objc_msgSend_font(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "font");
}

id objc_msgSend_fontDownloadAlertController(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "fontDownloadAlertController");
}

id objc_msgSend_fontName(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "fontName");
}

id objc_msgSend_fontNameForLabelControl_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "fontNameForLabelControl:");
}

id objc_msgSend_fontObfuscationInfo(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "fontObfuscationInfo");
}

id objc_msgSend_fontPointSizeFromHtmlStr_parentSize_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "fontPointSizeFromHtmlStr:parentSize:");
}

id objc_msgSend_fontSize(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "fontSize");
}

id objc_msgSend_fontSizeButtons(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "fontSizeButtons");
}

id objc_msgSend_fontSizeForLabelControl_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "fontSizeForLabelControl:");
}

id objc_msgSend_fontSizeForTextSource_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "fontSizeForTextSource:");
}

id objc_msgSend_fontSizeNameMap(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "fontSizeNameMap");
}

id objc_msgSend_fontWeightFromHtmlStr_parentWeight_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "fontWeightFromHtmlStr:parentWeight:");
}

id objc_msgSend_fontWithName_size_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "fontWithName:size:");
}

id objc_msgSend_fontWithScale_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "fontWithScale:");
}

id objc_msgSend_footerIndexDividerFrame(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "footerIndexDividerFrame");
}

id objc_msgSend_footerIndexTitleFrame(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "footerIndexTitleFrame");
}

id objc_msgSend_footerTermsDividerFrame(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "footerTermsDividerFrame");
}

id objc_msgSend_footerTermsTitleFrame(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "footerTermsTitleFrame");
}

id objc_msgSend_footerView(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "footerView");
}

id objc_msgSend_footerViewHeightConstraint(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "footerViewHeightConstraint");
}

id objc_msgSend_footnoteAtFootnoteIndex_outCharIndex_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "footnoteAtFootnoteIndex:outCharIndex:");
}

id objc_msgSend_forceBackgroundLayout(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "forceBackgroundLayout");
}

id objc_msgSend_forceStatusBarVisible(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "forceStatusBarVisible");
}

id objc_msgSend_forceStopScrollingAtCurrentPageIndex(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "forceStopScrollingAtCurrentPageIndex");
}

id objc_msgSend_forceTextOnly(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "forceTextOnly");
}

id objc_msgSend_forceThemeColors(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "forceThemeColors");
}

id objc_msgSend_foregroundLayer(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "foregroundLayer");
}

id objc_msgSend_foregroundTintColorForNavigationBar_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "foregroundTintColorForNavigationBar:");
}

id objc_msgSend_forwardPlaybackEndTime(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "forwardPlaybackEndTime");
}

id objc_msgSend_fraction(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "fraction");
}

id objc_msgSend_fractionForChoiceIndex_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "fractionForChoiceIndex:");
}

id objc_msgSend_fragment(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "fragment");
}

id objc_msgSend_fragmentFromPathString_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "fragmentFromPathString:");
}

id objc_msgSend_fragmentPhysicalPageIndexes(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "fragmentPhysicalPageIndexes");
}

id objc_msgSend_frame(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "frame");
}

id objc_msgSend_frameBounds(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "frameBounds");
}

id objc_msgSend_frameCanvasContentInsets(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "frameCanvasContentInsets");
}

id objc_msgSend_frameForChapterViewController_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "frameForChapterViewController:");
}

id objc_msgSend_frameForChapterViewController_withSize_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "frameForChapterViewController:withSize:");
}

id objc_msgSend_frameForCulling(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "frameForCulling");
}

id objc_msgSend_frameForOnCanvasUI(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "frameForOnCanvasUI");
}

id objc_msgSend_frameForOrdinalAtIndentLevel_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "frameForOrdinalAtIndentLevel:");
}

id objc_msgSend_frameForPageThumbAtIndex_chapterIndex_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "frameForPageThumbAtIndex:chapterIndex:");
}

id objc_msgSend_frameForPopupInUnscaledCanvas(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "frameForPopupInUnscaledCanvas");
}

id objc_msgSend_frameHeight(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "frameHeight");
}

id objc_msgSend_frameInParent(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "frameInParent");
}

id objc_msgSend_frameInRoot(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "frameInRoot");
}

id objc_msgSend_frameInShowLayer(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "frameInShowLayer");
}

id objc_msgSend_frameInUnscaledCanvas(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "frameInUnscaledCanvas");
}

id objc_msgSend_frameName(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "frameName");
}

id objc_msgSend_frameOfEffectWithContext_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "frameOfEffectWithContext:");
}

id objc_msgSend_frameOfEffectWithFrame_context_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "frameOfEffectWithFrame:context:");
}

id objc_msgSend_frameOnCanvas(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "frameOnCanvas");
}

id objc_msgSend_frameSpecForName_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "frameSpecForName:");
}

id objc_msgSend_frameSpecWithUri_contentState_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "frameSpecWithUri:contentState:");
}

id objc_msgSend_frameViewSettings(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "frameViewSettings");
}

id objc_msgSend_frameViewSize(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "frameViewSize");
}

id objc_msgSend_frameY(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "frameY");
}

id objc_msgSend_freeTransform(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "freeTransform");
}

id objc_msgSend_freeTransformController(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "freeTransformController");
}

id objc_msgSend_freeTransformControllerDidBegin_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "freeTransformControllerDidBegin:");
}

id objc_msgSend_freeTransformControllerDidCleanupViews_passedThreshold_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "freeTransformControllerDidCleanupViews:passedThreshold:");
}

id objc_msgSend_freeTransformControllerDidContinue_withScale_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "freeTransformControllerDidContinue:withScale:");
}

id objc_msgSend_freeTransformControllerDidEnd_passedThreshold_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "freeTransformControllerDidEnd:passedThreshold:");
}

id objc_msgSend_freeTransformControllerDidFinishFreeTransforming_passedThreshold_completionBlock_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "freeTransformControllerDidFinishFreeTransforming:passedThreshold:completionBlock:");
}

id objc_msgSend_freeTransformControllerOriginalTargetLayerFrame_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "freeTransformControllerOriginalTargetLayerFrame:");
}

id objc_msgSend_freeTransformControllerRectForCompletionAnimation_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "freeTransformControllerRectForCompletionAnimation:");
}

id objc_msgSend_freeTransformControllerShouldFadeShadowOut_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "freeTransformControllerShouldFadeShadowOut:");
}

id objc_msgSend_freeTransformControllerShouldMoveFreeTransformViewAboveStatusBar_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "freeTransformControllerShouldMoveFreeTransformViewAboveStatusBar:");
}

id objc_msgSend_freeTransformControllerShouldUseEffectsWindow_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "freeTransformControllerShouldUseEffectsWindow:");
}

id objc_msgSend_freeTransformControllerShouldUsedTracedShadowPath_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "freeTransformControllerShouldUsedTracedShadowPath:");
}

id objc_msgSend_freeTransformControllerStyledRep_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "freeTransformControllerStyledRep:");
}

id objc_msgSend_freeTransformControllerWantsShadow_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "freeTransformControllerWantsShadow:");
}

id objc_msgSend_freeTransformControllerWillBeginCompletionAnimation_passedThreshold_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "freeTransformControllerWillBeginCompletionAnimation:passedThreshold:");
}

id objc_msgSend_freeTransformControllerWillEnd_passedThreshold_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "freeTransformControllerWillEnd:passedThreshold:");
}

id objc_msgSend_freeTransformControllerWillFadeOutCurtain_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "freeTransformControllerWillFadeOutCurtain:");
}

id objc_msgSend_freeTransformControllerWillMoveTargetLayer_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "freeTransformControllerWillMoveTargetLayer:");
}

id objc_msgSend_freeTransformDelegate(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "freeTransformDelegate");
}

id objc_msgSend_freeTransformDidCancelWithRep_expandableRep_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "freeTransformDidCancelWithRep:expandableRep:");
}

id objc_msgSend_freeTransformDidEnd(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "freeTransformDidEnd");
}

id objc_msgSend_freeTransformDidEndPassedThreshold_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "freeTransformDidEndPassedThreshold:");
}

id objc_msgSend_freeTransformGestureRecognizer(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "freeTransformGestureRecognizer");
}

id objc_msgSend_freeTransformGestureRecognizerShouldAllowPinchDown_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "freeTransformGestureRecognizerShouldAllowPinchDown:");
}

id objc_msgSend_freeTransformGestureRecognizerShouldAllowPinchUp_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "freeTransformGestureRecognizerShouldAllowPinchUp:");
}

id objc_msgSend_freeTransformGestureRecognizerShouldDelayRecognizeUntilScaleChange_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "freeTransformGestureRecognizerShouldDelayRecognizeUntilScaleChange:");
}

id objc_msgSend_freeTransformGestureRecognizerShouldRubberband_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "freeTransformGestureRecognizerShouldRubberband:");
}

id objc_msgSend_freeTransformInFlight(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "freeTransformInFlight");
}

id objc_msgSend_freeTransformInteractionEnabledOverride(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "freeTransformInteractionEnabledOverride");
}

id objc_msgSend_freeTransformLayer(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "freeTransformLayer");
}

id objc_msgSend_freeTransformPostAnimationDidCancelWithRep_expandableRep_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "freeTransformPostAnimationDidCancelWithRep:expandableRep:");
}

id objc_msgSend_freeTransformRepHandler(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "freeTransformRepHandler");
}

id objc_msgSend_freeTransformWillBegin(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "freeTransformWillBegin");
}

id objc_msgSend_freeTransformableHandler(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "freeTransformableHandler");
}

id objc_msgSend_freeze(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "freeze");
}

id objc_msgSend_frontLayer(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "frontLayer");
}

id objc_msgSend_frontOrdinalText(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "frontOrdinalText");
}

id objc_msgSend_frontTitleText(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "frontTitleText");
}

id objc_msgSend_ftc(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "ftc");
}

id objc_msgSend_ftcTargetFrame(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "ftcTargetFrame");
}

id objc_msgSend_fullLineRect(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "fullLineRect");
}

id objc_msgSend_fullTransform(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "fullTransform");
}

id objc_msgSend_fullres(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "fullres");
}

id objc_msgSend_fullresCropRect(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "fullresCropRect");
}

id objc_msgSend_functionWithControlPoints__::(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "functionWithControlPoints::::");
}

id objc_msgSend_functionWithName_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "functionWithName:");
}

id objc_msgSend_furtherInitWithGlossaryController_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "furtherInitWithGlossaryController:");
}

id objc_msgSend_fx_withPercent_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "fx:withPercent:");
}

id objc_msgSend_galleryCaptionMargin(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "galleryCaptionMargin");
}

id objc_msgSend_galleryCaptionPosition(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "galleryCaptionPosition");
}

id objc_msgSend_galleryCaptionStorage(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "galleryCaptionStorage");
}

id objc_msgSend_galleryCaptionWidth(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "galleryCaptionWidth");
}

id objc_msgSend_galleryItemFromEntry_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "galleryItemFromEntry:");
}

id objc_msgSend_generalPasteboard(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "generalPasteboard");
}

id objc_msgSend_generateSizedImageOnBackgroundThread(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "generateSizedImageOnBackgroundThread");
}

id objc_msgSend_genre(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "genre");
}

id objc_msgSend_genreFromPlistEntry_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "genreFromPlistEntry:");
}

id objc_msgSend_geometry(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "geometry");
}

id objc_msgSend_geometryByAppendingTransform_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "geometryByAppendingTransform:");
}

id objc_msgSend_geometryByTranslatingBy_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "geometryByTranslatingBy:");
}

id objc_msgSend_geometryFromFullTransform_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "geometryFromFullTransform:");
}

id objc_msgSend_geometryInRoot(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "geometryInRoot");
}

id objc_msgSend_geometryRelativeToGeometry_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "geometryRelativeToGeometry:");
}

id objc_msgSend_gestureDispatcher(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "gestureDispatcher");
}

id objc_msgSend_gestureHitLink_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "gestureHitLink:");
}

id objc_msgSend_gestureKind(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "gestureKind");
}

id objc_msgSend_gestureRecognizerShouldBegin_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "gestureRecognizerShouldBegin:");
}

id objc_msgSend_gestureRecognizerWithKind_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "gestureRecognizerWithKind:");
}

id objc_msgSend_gestureRecognizers(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "gestureRecognizers");
}

id objc_msgSend_gestureReset_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "gestureReset:");
}

id objc_msgSend_gestureState(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "gestureState");
}

id objc_msgSend_gestureWithKind_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "gestureWithKind:");
}

id objc_msgSend_getBoundingBoxMin_max_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "getBoundingBoxMin:max:");
}

id objc_msgSend_getCharacters_range_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "getCharacters:range:");
}

id objc_msgSend_getColumnCountFromPropertySet_maximumColumnCount_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "getColumnCountFromPropertySet:maximumColumnCount:");
}

id objc_msgSend_getCount(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "getCount");
}

id objc_msgSend_getEntry(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "getEntry");
}

id objc_msgSend_getFileSystemRepresentation_maxLength_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "getFileSystemRepresentation:maxLength:");
}

id objc_msgSend_getHrefFromNode_ns_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "getHrefFromNode:ns:");
}

id objc_msgSend_getMessageTag(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "getMessageTag");
}

id objc_msgSend_getMessageText(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "getMessageText");
}

id objc_msgSend_getPlaceholder_andPageHistory_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "getPlaceholder:andPageHistory:");
}

id objc_msgSend_getRGBAComponents_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "getRGBAComponents:");
}

id objc_msgSend_getRed_green_blue_alpha_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "getRed:green:blue:alpha:");
}

id objc_msgSend_getResourceValue_forKey_error_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "getResourceValue:forKey:error:");
}

id objc_msgSend_getString_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "getString:");
}

id objc_msgSend_getTextFromNavLabelFromStream_readerState_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "getTextFromNavLabelFromStream:readerState:");
}

id objc_msgSend_getUrlFromContentFromStream_readerState_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "getUrlFromContentFromStream:readerState:");
}

id objc_msgSend_globalPredicate(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "globalPredicate");
}

id objc_msgSend_glossary(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "glossary");
}

id objc_msgSend_glossaryController(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "glossaryController");
}

id objc_msgSend_glossaryEntry(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "glossaryEntry");
}

id objc_msgSend_glossaryEntryLayout(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "glossaryEntryLayout");
}

id objc_msgSend_glossaryEntryLayoutBackgroundColor(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "glossaryEntryLayoutBackgroundColor");
}

id objc_msgSend_glossaryEntryLayoutContentSize(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "glossaryEntryLayoutContentSize");
}

id objc_msgSend_glossaryEntryLayoutDefaultHeightForPortion_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "glossaryEntryLayoutDefaultHeightForPortion:");
}

id objc_msgSend_glossaryEntryLayoutFloatingStyle(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "glossaryEntryLayoutFloatingStyle");
}

id objc_msgSend_glossaryEntryLayoutForegroundColor(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "glossaryEntryLayoutForegroundColor");
}

id objc_msgSend_glossaryEntryLayoutHasFooter(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "glossaryEntryLayoutHasFooter");
}

id objc_msgSend_glossaryEntryLayoutIncludePortion_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "glossaryEntryLayoutIncludePortion:");
}

id objc_msgSend_glossaryEntryLayoutStyleProvider(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "glossaryEntryLayoutStyleProvider");
}

id objc_msgSend_glossaryEntryLayoutTopMarginForPortion_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "glossaryEntryLayoutTopMarginForPortion:");
}

id objc_msgSend_glossaryEntryLayoutValueForDistance_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "glossaryEntryLayoutValueForDistance:");
}

id objc_msgSend_glossaryEntryLayoutViewFrame(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "glossaryEntryLayoutViewFrame");
}

id objc_msgSend_glossaryEntryUri(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "glossaryEntryUri");
}

id objc_msgSend_glossaryHitInfo(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "glossaryHitInfo");
}

id objc_msgSend_glossaryIndex(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "glossaryIndex");
}

id objc_msgSend_glossaryLinkResolver(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "glossaryLinkResolver");
}

id objc_msgSend_glossaryLinkResolverWithGlossaryController_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "glossaryLinkResolverWithGlossaryController:");
}

id objc_msgSend_glossaryPopoverNavController(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "glossaryPopoverNavController");
}

id objc_msgSend_glossaryPopoverViewController(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "glossaryPopoverViewController");
}

id objc_msgSend_glossaryPresenting(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "glossaryPresenting");
}

id objc_msgSend_glossaryRangeInRep(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "glossaryRangeInRep");
}

id objc_msgSend_glossaryRootView(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "glossaryRootView");
}

id objc_msgSend_glossarySplitViewController(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "glossarySplitViewController");
}

id objc_msgSend_glossaryTermExists(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "glossaryTermExists");
}

id objc_msgSend_glossaryTermTableCell_selected_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "glossaryTermTableCell:selected:");
}

id objc_msgSend_glossaryViewController(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "glossaryViewController");
}

id objc_msgSend_glyphRectForRange_includingLabel_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "glyphRectForRange:includingLabel:");
}

id objc_msgSend_gotoBookspot_minor_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "gotoBookspot:minor:");
}

id objc_msgSend_gotoEventIndex_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "gotoEventIndex:");
}

id objc_msgSend_gotoFirstSlide(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "gotoFirstSlide");
}

id objc_msgSend_gotoLastEvent(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "gotoLastEvent");
}

id objc_msgSend_gotoLastSlide(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "gotoLastSlide");
}

id objc_msgSend_gotoNextEvent(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "gotoNextEvent");
}

id objc_msgSend_gotoNextSlide(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "gotoNextSlide");
}

id objc_msgSend_gotoPreviousSlide(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "gotoPreviousSlide");
}

id objc_msgSend_gotoSlideAtIndex_shouldAutoPlay_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "gotoSlideAtIndex:shouldAutoPlay:");
}

id objc_msgSend_gotoSlideIndex_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "gotoSlideIndex:");
}

id objc_msgSend_gradientLayer(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "gradientLayer");
}

id objc_msgSend_grayColor(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "grayColor");
}

id objc_msgSend_green(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "green");
}

id objc_msgSend_greenColor(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "greenColor");
}

id objc_msgSend_greenComponent(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "greenComponent");
}

id objc_msgSend_gridView_didTapCell_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "gridView:didTapCell:");
}

id objc_msgSend_gridView_didTapNameForCell_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "gridView:didTapNameForCell:");
}

id objc_msgSend_groupFrameWithViewScale_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "groupFrameWithViewScale:");
}

id objc_msgSend_groupShape(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "groupShape");
}

id objc_msgSend_groupedBackgroundColor(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "groupedBackgroundColor");
}

id objc_msgSend_guidedPanController(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "guidedPanController");
}

id objc_msgSend_guidedPanFillScreenViewScale(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "guidedPanFillScreenViewScale");
}

id objc_msgSend_guidedPanGestureRecognizer(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "guidedPanGestureRecognizer");
}

id objc_msgSend_guidedPanRelativePageIndexWithController_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "guidedPanRelativePageIndexWithController:");
}

id objc_msgSend_guidedPanTargetAddWellsToArray_withController_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "guidedPanTargetAddWellsToArray:withController:");
}

id objc_msgSend_guidedPanTargetIsTargeted(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "guidedPanTargetIsTargeted");
}

id objc_msgSend_guidedPanTargetKind(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "guidedPanTargetKind");
}

id objc_msgSend_guidedPanTargetUnscaledPageRect(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "guidedPanTargetUnscaledPageRect");
}

id objc_msgSend_guidedPanTargetUnscaledRect(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "guidedPanTargetUnscaledRect");
}

id objc_msgSend_guidedPanTargetWithController_location_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "guidedPanTargetWithController:location:");
}

id objc_msgSend_guidedPanUnscaledPageSize(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "guidedPanUnscaledPageSize");
}

id objc_msgSend_guidedPanWellRatingWithMovement_velocity_controller_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "guidedPanWellRatingWithMovement:velocity:controller:");
}

id objc_msgSend_guidedPanWillAnimateFrom_to_duration_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "guidedPanWillAnimateFrom:to:duration:");
}

id objc_msgSend_guidedPanWillBegin(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "guidedPanWillBegin");
}

id objc_msgSend_guidedPanWillBeginAtPoint_controller_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "guidedPanWillBeginAtPoint:controller:");
}

id objc_msgSend_guidedPanZoomedOutViewScale(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "guidedPanZoomedOutViewScale");
}

id objc_msgSend_gutterDrawableStorage(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "gutterDrawableStorage");
}

id objc_msgSend_gutterOrder(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "gutterOrder");
}

id objc_msgSend_gutterWidth(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "gutterWidth");
}

id objc_msgSend_handleAnnotationProvider_willMergeVersionMismatchedAnnotationsWithIncomingAnnotationAssetVersion_assetAssetVersion_assetID_assetURL_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "handleAnnotationProvider:willMergeVersionMismatchedAnnotationsWithIncomingAnnotationAssetVersion:assetAssetVersion:assetID:assetURL:");
}

id objc_msgSend_handleDownButtonTouchDownEvent_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "handleDownButtonTouchDownEvent:");
}

id objc_msgSend_handleFailureInFunction_file_lineNumber_description_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "handleFailureInFunction:file:lineNumber:description:");
}

id objc_msgSend_handleGesture_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "handleGesture:");
}

id objc_msgSend_handleHyperlink_hitRep_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "handleHyperlink:hitRep:");
}

id objc_msgSend_handleHyperlinkWithURL_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "handleHyperlinkWithURL:");
}

id objc_msgSend_handleNaturally(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "handleNaturally");
}

id objc_msgSend_handleNavigateNextCommand(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "handleNavigateNextCommand");
}

id objc_msgSend_handleNavigatePreviousCommand(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "handleNavigatePreviousCommand");
}

id objc_msgSend_handlePressOnDoubleTap(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "handlePressOnDoubleTap");
}

id objc_msgSend_handleTopCardFlipAffordancePressed_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "handleTopCardFlipAffordancePressed:");
}

id objc_msgSend_handleTouchAtLocation_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "handleTouchAtLocation:");
}

id objc_msgSend_handleTrackerManipulator_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "handleTrackerManipulator:");
}

id objc_msgSend_handleURL_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "handleURL:");
}

id objc_msgSend_handleUpButtonTouchDownEvent_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "handleUpButtonTouchDownEvent:");
}

id objc_msgSend_handleViews(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "handleViews");
}

id objc_msgSend_handler(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "handler");
}

id objc_msgSend_hasActions(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "hasActions");
}

id objc_msgSend_hasAlpha(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "hasAlpha");
}

id objc_msgSend_hasAnyRulesForIdentifier_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "hasAnyRulesForIdentifier:");
}

id objc_msgSend_hasBackContent(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "hasBackContent");
}

id objc_msgSend_hasBeenRemoved(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "hasBeenRemoved");
}

id objc_msgSend_hasBeenSized(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "hasBeenSized");
}

id objc_msgSend_hasBody(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "hasBody");
}

id objc_msgSend_hasBodyFlow(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "hasBodyFlow");
}

id objc_msgSend_hasBodyStorageUID_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "hasBodyStorageUID:");
}

id objc_msgSend_hasCachedVersionInZip_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "hasCachedVersionInZip:");
}

id objc_msgSend_hasChanges(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "hasChanges");
}

id objc_msgSend_hasChildrenForAdornmentInfo(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "hasChildrenForAdornmentInfo");
}

id objc_msgSend_hasContentForPanel_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "hasContentForPanel:");
}

id objc_msgSend_hasContinuousRotationAnimation(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "hasContinuousRotationAnimation");
}

id objc_msgSend_hasDescription(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "hasDescription");
}

id objc_msgSend_hasDoneLayout(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "hasDoneLayout");
}

id objc_msgSend_hasEmbeddedAnimation(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "hasEmbeddedAnimation");
}

id objc_msgSend_hasFullHintForRelativePageIndex_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "hasFullHintForRelativePageIndex:");
}

id objc_msgSend_hasGlossaryTerms(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "hasGlossaryTerms");
}

id objc_msgSend_hasHints(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "hasHints");
}

id objc_msgSend_hasIntroPage(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "hasIntroPage");
}

id objc_msgSend_hasLeftBorder(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "hasLeftBorder");
}

id objc_msgSend_hasMarginNoteAtCanvasPoint_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "hasMarginNoteAtCanvasPoint:");
}

id objc_msgSend_hasMaxValue(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "hasMaxValue");
}

id objc_msgSend_hasMinValue(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "hasMinValue");
}

id objc_msgSend_hasMovedDistance_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "hasMovedDistance:");
}

id objc_msgSend_hasNextBookspot(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "hasNextBookspot");
}

id objc_msgSend_hasPaginatedData(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "hasPaginatedData");
}

id objc_msgSend_hasPrefix_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "hasPrefix:");
}

id objc_msgSend_hasPrevBookspot(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "hasPrevBookspot");
}

id objc_msgSend_hasRaisedViews(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "hasRaisedViews");
}

id objc_msgSend_hasRendered(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "hasRendered");
}

id objc_msgSend_hasRightBorder(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "hasRightBorder");
}

id objc_msgSend_hasRoomForPanels(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "hasRoomForPanels");
}

id objc_msgSend_hasSmartFields(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "hasSmartFields");
}

id objc_msgSend_hasSpreadPages(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "hasSpreadPages");
}

id objc_msgSend_hasSuffix_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "hasSuffix:");
}

id objc_msgSend_hasThumbnailImageForAbsolutePageIndex_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "hasThumbnailImageForAbsolutePageIndex:");
}

id objc_msgSend_hasTitle(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "hasTitle");
}

id objc_msgSend_hasUserSelected(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "hasUserSelected");
}

id objc_msgSend_hash(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "hash");
}

id objc_msgSend_hashIncludingSize(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "hashIncludingSize");
}

id objc_msgSend_headerImageViews(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "headerImageViews");
}

id objc_msgSend_headerInfo(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "headerInfo");
}

id objc_msgSend_headerLayout(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "headerLayout");
}

id objc_msgSend_headerMaxSize(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "headerMaxSize");
}

id objc_msgSend_headerTextColor(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "headerTextColor");
}

id objc_msgSend_headerTextColorDimmed(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "headerTextColorDimmed");
}

id objc_msgSend_headerViewForSection_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "headerViewForSection:");
}

id objc_msgSend_headersData(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "headersData");
}

id objc_msgSend_headersView(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "headersView");
}

id objc_msgSend_height(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "height");
}

id objc_msgSend_heightAnchor(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "heightAnchor");
}

id objc_msgSend_heightForFlexibleChildLayout_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "heightForFlexibleChildLayout:");
}

id objc_msgSend_heightOfTopZoneForDockingSwipe(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "heightOfTopZoneForDockingSwipe");
}

id objc_msgSend_heightValid(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "heightValid");
}

id objc_msgSend_helper_validateBookAuthorizationWithError_needsCoordination_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "helper:validateBookAuthorizationWithError:needsCoordination:");
}

id objc_msgSend_helperCoverImage(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "helperCoverImage");
}

id objc_msgSend_helperForURL_withOptions_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "helperForURL:withOptions:");
}

id objc_msgSend_helperMetadataForKey_needsCoordination_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "helperMetadataForKey:needsCoordination:");
}

id objc_msgSend_helperValidateBookAuthorizationWithError_needsCoordination_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "helperValidateBookAuthorizationWithError:needsCoordination:");
}

id objc_msgSend_hidden(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "hidden");
}

id objc_msgSend_hiddenColor(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "hiddenColor");
}

id objc_msgSend_hiddenPlayButton(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "hiddenPlayButton");
}

id objc_msgSend_hiddenPlayButton_compactUI(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "hiddenPlayButton_compactUI");
}

id objc_msgSend_hide(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "hide");
}

id objc_msgSend_hideAllAnnotationStyles(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "hideAllAnnotationStyles");
}

id objc_msgSend_hideAnnotationStyle_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "hideAnnotationStyle:");
}

id objc_msgSend_hideControls(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "hideControls");
}

id objc_msgSend_hideEditMenu(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "hideEditMenu");
}

id objc_msgSend_hideFullscreenNotesView_andSearchForText_animated_force_completion_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "hideFullscreenNotesView:andSearchForText:animated:force:completion:");
}

id objc_msgSend_hideFullscreenNotesView_andSearchForText_completion_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "hideFullscreenNotesView:andSearchForText:completion:");
}

id objc_msgSend_hideGlossaryWithDestinationViewController_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "hideGlossaryWithDestinationViewController:");
}

id objc_msgSend_hideGlossaryWithDestinationViewController_animated_completion_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "hideGlossaryWithDestinationViewController:animated:completion:");
}

id objc_msgSend_hideLeftNumericDisplay(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "hideLeftNumericDisplay");
}

id objc_msgSend_hideLoadSpinner(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "hideLoadSpinner");
}

id objc_msgSend_hideNavigationHistory(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "hideNavigationHistory");
}

id objc_msgSend_hidePageThumbnailAtIndex_chapterIndex_scrollIfNecessary_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "hidePageThumbnailAtIndex:chapterIndex:scrollIfNecessary:");
}

id objc_msgSend_hidePageThumbnailsAnimated_duration_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "hidePageThumbnailsAnimated:duration:");
}

id objc_msgSend_hidePlayButton(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "hidePlayButton");
}

id objc_msgSend_hideRightNumericDisplay(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "hideRightNumericDisplay");
}

id objc_msgSend_hideScrollIndicators(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "hideScrollIndicators");
}

id objc_msgSend_hideTOC(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "hideTOC");
}

id objc_msgSend_hideToolbarAnimated_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "hideToolbarAnimated:");
}

id objc_msgSend_hideWithEnumerator_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "hideWithEnumerator:");
}

id objc_msgSend_highlight(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "highlight");
}

id objc_msgSend_highlightAnnotations(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "highlightAnnotations");
}

id objc_msgSend_highlightAnnotationsSortedByRange(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "highlightAnnotationsSortedByRange");
}

id objc_msgSend_highlightAtCanvasPoint_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "highlightAtCanvasPoint:");
}

id objc_msgSend_highlightColor(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "highlightColor");
}

id objc_msgSend_highlightColorBar(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "highlightColorBar");
}

id objc_msgSend_highlightColorBarDescent(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "highlightColorBarDescent");
}

id objc_msgSend_highlightColorEditorController(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "highlightColorEditorController");
}

id objc_msgSend_highlightController(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "highlightController");
}

id objc_msgSend_highlightEditingWidthAdjustment(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "highlightEditingWidthAdjustment");
}

id objc_msgSend_highlightGestureController(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "highlightGestureController");
}

id objc_msgSend_highlightGestureRecognizer(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "highlightGestureRecognizer");
}

id objc_msgSend_highlightLayer(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "highlightLayer");
}

id objc_msgSend_highlightLayers(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "highlightLayers");
}

id objc_msgSend_highlightLayersInCanvasUnscaledRect_scale_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "highlightLayersInCanvasUnscaledRect:scale:");
}

id objc_msgSend_highlightLeftInset(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "highlightLeftInset");
}

id objc_msgSend_highlightRightInset(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "highlightRightInset");
}

id objc_msgSend_highlightTextFrame(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "highlightTextFrame");
}

id objc_msgSend_highlightView(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "highlightView");
}

id objc_msgSend_highlightWidthForAnnotationRenderer_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "highlightWidthForAnnotationRenderer:");
}

id objc_msgSend_highlightWithData_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "highlightWithData:");
}

id objc_msgSend_highlighted(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "highlighted");
}

id objc_msgSend_highlightedIndexPath(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "highlightedIndexPath");
}

id objc_msgSend_highlightedRelativeRect(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "highlightedRelativeRect");
}

id objc_msgSend_highlightedText(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "highlightedText");
}

id objc_msgSend_hintCollectionWithUrl_data_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "hintCollectionWithUrl:data:");
}

id objc_msgSend_hintCollectorForStorage_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "hintCollectorForStorage:");
}

id objc_msgSend_hintForRelativePageIndex_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "hintForRelativePageIndex:");
}

id objc_msgSend_hintRangeForRelativePageIndex_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "hintRangeForRelativePageIndex:");
}

id objc_msgSend_hints(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "hints");
}

id objc_msgSend_hintsCount(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "hintsCount");
}

id objc_msgSend_hintsData(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "hintsData");
}

id objc_msgSend_hintsForBodyIndex_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "hintsForBodyIndex:");
}

id objc_msgSend_hitField(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "hitField");
}

id objc_msgSend_hitKnobAtPoint_returningRep_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "hitKnobAtPoint:returningRep:");
}

id objc_msgSend_hitRegionEdgeInsets(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "hitRegionEdgeInsets");
}

id objc_msgSend_hitRep(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "hitRep");
}

id objc_msgSend_hitRep_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "hitRep:");
}

id objc_msgSend_hitRep_allowsAllReps_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "hitRep:allowsAllReps:");
}

id objc_msgSend_hitRep_withGesture_passingTest_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "hitRep:withGesture:passingTest:");
}

id objc_msgSend_hitReps_withSlop_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "hitReps:withSlop:");
}

id objc_msgSend_hitTest_withEvent_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "hitTest:withEvent:");
}

id objc_msgSend_hitTestOptions(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "hitTestOptions");
}

id objc_msgSend_horizontaAlignmentForLabelControl_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "horizontaAlignmentForLabelControl:");
}

id objc_msgSend_horizontalFlip(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "horizontalFlip");
}

id objc_msgSend_horizontalOffset(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "horizontalOffset");
}

id objc_msgSend_horizontalSizeClass(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "horizontalSizeClass");
}

id objc_msgSend_horizontalStrokeAboveRow_inColumn_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "horizontalStrokeAboveRow:inColumn:");
}

id objc_msgSend_horizontalStrokeStartingAtColumn_row_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "horizontalStrokeStartingAtColumn:row:");
}

id objc_msgSend_host(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "host");
}

id objc_msgSend_hostCanvasLayer(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "hostCanvasLayer");
}

id objc_msgSend_hostICC(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "hostICC");
}

id objc_msgSend_hostLayer(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "hostLayer");
}

id objc_msgSend_hostView(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "hostView");
}

id objc_msgSend_hostViewSizeForIntroMediaController_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "hostViewSizeForIntroMediaController:");
}

id objc_msgSend_hosts(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "hosts");
}

id objc_msgSend_hoverInteraction(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "hoverInteraction");
}

id objc_msgSend_hovering(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "hovering");
}

id objc_msgSend_href(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "href");
}

id objc_msgSend_htmlPairToColor_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "htmlPairToColor:");
}

id objc_msgSend_htmlReaderState(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "htmlReaderState");
}

id objc_msgSend_htmlStringToColor_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "htmlStringToColor:");
}

id objc_msgSend_htmlValueToBorderWidth_parentFontSize_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "htmlValueToBorderWidth:parentFontSize:");
}

id objc_msgSend_htmlValueToLineHeight_parentFontSize_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "htmlValueToLineHeight:parentFontSize:");
}

id objc_msgSend_htmlValueToPointLength_parentFontSize_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "htmlValueToPointLength:parentFontSize:");
}

id objc_msgSend_htmlValueToPointLength_parentFontSize_isPercent_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "htmlValueToPointLength:parentFontSize:isPercent:");
}

id objc_msgSend_htmlValueToPointLength_parentFontSize_percentageBasis_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "htmlValueToPointLength:parentFontSize:percentageBasis:");
}

id objc_msgSend_htmlValueToPointLength_parentFontSize_percentageBasis_usePercentageBasis_isPercent_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "htmlValueToPointLength:parentFontSize:percentageBasis:usePercentageBasis:isPercent:");
}

id objc_msgSend_hudExternalPadding(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "hudExternalPadding");
}

id objc_msgSend_hudInternalPadding(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "hudInternalPadding");
}

id objc_msgSend_hyperLinkedEvent(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "hyperLinkedEvent");
}

id objc_msgSend_hyperlinkAtLocation_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "hyperlinkAtLocation:");
}

id objc_msgSend_hyperlinkGestureRecognizer(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "hyperlinkGestureRecognizer");
}

id objc_msgSend_hyperlinkURL(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "hyperlinkURL");
}

id objc_msgSend_iPad10SizeClassPredicate(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "iPad10SizeClassPredicate");
}

id objc_msgSend_iPadOtherSizeClassPredicate(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "iPadOtherSizeClassPredicate");
}

id objc_msgSend_iPadSizeClassPredicate(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "iPadSizeClassPredicate");
}

id objc_msgSend_iTunesMobileContext(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "iTunesMobileContext");
}

id objc_msgSend_i_bodyCount(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "i_bodyCount");
}

id objc_msgSend_i_computeWrapPath(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "i_computeWrapPath");
}

id objc_msgSend_i_exteriorTextWrap(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "i_exteriorTextWrap");
}

id objc_msgSend_i_gutterOverhang(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "i_gutterOverhang");
}

id objc_msgSend_i_handleGlossaryHyperlink_rep_anchor_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "i_handleGlossaryHyperlink:rep:anchor:");
}

id objc_msgSend_i_inflateColumnsInBodyLayout_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "i_inflateColumnsInBodyLayout:");
}

id objc_msgSend_i_infoForBodyIndex_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "i_infoForBodyIndex:");
}

id objc_msgSend_i_layoutGeometryProvider(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "i_layoutGeometryProvider");
}

id objc_msgSend_i_pageHintForPageIndex_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "i_pageHintForPageIndex:");
}

id objc_msgSend_i_performWithEachLine_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "i_performWithEachLine:");
}

id objc_msgSend_i_rectForBodyIndex_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "i_rectForBodyIndex:");
}

id objc_msgSend_i_rectForPageLayout(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "i_rectForPageLayout");
}

id objc_msgSend_i_rectForSectionLayout(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "i_rectForSectionLayout");
}

id objc_msgSend_i_registerPageLayout_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "i_registerPageLayout:");
}

id objc_msgSend_i_setContentsScale_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "i_setContentsScale:");
}

id objc_msgSend_i_setGutterOverhang_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "i_setGutterOverhang:");
}

id objc_msgSend_i_setHeight_forBodyIndex_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "i_setHeight:forBodyIndex:");
}

id objc_msgSend_i_textRangeForBodyIndex_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "i_textRangeForBodyIndex:");
}

id objc_msgSend_i_unregisterPageLayout_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "i_unregisterPageLayout:");
}

id objc_msgSend_i_updateStorageImageWithSize_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "i_updateStorageImageWithSize:");
}

id objc_msgSend_i_wrapPath(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "i_wrapPath");
}

id objc_msgSend_icc(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "icc");
}

id objc_msgSend_iconTextPopupHighlightUnderline(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "iconTextPopupHighlightUnderline");
}

id objc_msgSend_idealWebFrame(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "idealWebFrame");
}

id objc_msgSend_idealWebSize(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "idealWebSize");
}

id objc_msgSend_identValueInPair_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "identValueInPair:");
}

id objc_msgSend_identValueOrNilFromPair_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "identValueOrNilFromPair:");
}

id objc_msgSend_identifier(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "identifier");
}

id objc_msgSend_idleAnimationBehavior(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "idleAnimationBehavior");
}

id objc_msgSend_ignoreEquationAlignment(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "ignoreEquationAlignment");
}

id objc_msgSend_ignoreTimeChangeUpdate(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "ignoreTimeChangeUpdate");
}

id objc_msgSend_ignoresEventsOutsideCells(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "ignoresEventsOutsideCells");
}

id objc_msgSend_im_ancestorViewControllerConformingToProtocol_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "im_ancestorViewControllerConformingToProtocol:");
}

id objc_msgSend_im_isCompactHeight(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "im_isCompactHeight");
}

id objc_msgSend_im_isCompactWidth(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "im_isCompactWidth");
}

id objc_msgSend_im_isStyleDark(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "im_isStyleDark");
}

id objc_msgSend_im_stringByCollapsingRunsOfWhitespaceAndNewlines(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "im_stringByCollapsingRunsOfWhitespaceAndNewlines");
}

id objc_msgSend_im_stringWithPathRelativeTo_allowBacktracking_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "im_stringWithPathRelativeTo:allowBacktracking:");
}

id objc_msgSend_im_theme(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "im_theme");
}

id objc_msgSend_image(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "image");
}

id objc_msgSend_imageAccessibilityDescription(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "imageAccessibilityDescription");
}

id objc_msgSend_imageBorder(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "imageBorder");
}

id objc_msgSend_imageBorderWidthConstraint(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "imageBorderWidthConstraint");
}

id objc_msgSend_imageCropAnimationController(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "imageCropAnimationController");
}

id objc_msgSend_imageDPI(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "imageDPI");
}

id objc_msgSend_imageData(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "imageData");
}

id objc_msgSend_imageDataForUri_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "imageDataForUri:");
}

id objc_msgSend_imageDataForUri_isSharable_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "imageDataForUri:isSharable:");
}

id objc_msgSend_imageForMaxSize_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "imageForMaxSize:");
}

id objc_msgSend_imageForShapeInfo_viewScale_screenScale_lines_documentRoot_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "imageForShapeInfo:viewScale:screenScale:lines:documentRoot:");
}

id objc_msgSend_imageForShapeInfo_viewScale_screenScale_lines_layoutRect_useCullingRect_documentRoot_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "imageForShapeInfo:viewScale:screenScale:lines:layoutRect:useCullingRect:documentRoot:");
}

id objc_msgSend_imageForState_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "imageForState:");
}

id objc_msgSend_imageForStorage_maxWidth_lines_layoutRect_useCullingRect_maxLines_allowsLastLineTruncation_contentsScale_documentRoot_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "imageForStorage:maxWidth:lines:layoutRect:useCullingRect:maxLines:allowsLastLineTruncation:contentsScale:documentRoot:");
}

id objc_msgSend_imageFrame(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "imageFrame");
}

id objc_msgSend_imageFromEntry_packageState_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "imageFromEntry:packageState:");
}

id objc_msgSend_imageInfo(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "imageInfo");
}

id objc_msgSend_imageIsAtSide(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "imageIsAtSide");
}

id objc_msgSend_imageMaskWithColor_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "imageMaskWithColor:");
}

id objc_msgSend_imageNameForPauseButton(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "imageNameForPauseButton");
}

id objc_msgSend_imageNameForPauseButtonPressed(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "imageNameForPauseButtonPressed");
}

id objc_msgSend_imageNameForPlayButton(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "imageNameForPlayButton");
}

id objc_msgSend_imageNameForPlayButtonPressed(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "imageNameForPlayButtonPressed");
}

id objc_msgSend_imageNamed_inBundle_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "imageNamed:inBundle:");
}

id objc_msgSend_imagePlacement(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "imagePlacement");
}

id objc_msgSend_imageProperties(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "imageProperties");
}

id objc_msgSend_imageRef(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "imageRef");
}

id objc_msgSend_imageSize(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "imageSize");
}

id objc_msgSend_imageSizedForShapeWithSinglePixelStroke_contentsScale_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "imageSizedForShapeWithSinglePixelStroke:contentsScale:");
}

id objc_msgSend_imageView(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "imageView");
}

id objc_msgSend_imageWithActions_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "imageWithActions:");
}

id objc_msgSend_imageWithCGImage_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "imageWithCGImage:");
}

id objc_msgSend_imageWithCGImage_scale_orientation_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "imageWithCGImage:scale:orientation:");
}

id objc_msgSend_imageWithConfiguration_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "imageWithConfiguration:");
}

id objc_msgSend_imageWithContentsOfFile_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "imageWithContentsOfFile:");
}

id objc_msgSend_imageWithData_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "imageWithData:");
}

id objc_msgSend_imageWithImageData_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "imageWithImageData:");
}

id objc_msgSend_imageWithRenderingMode_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "imageWithRenderingMode:");
}

id objc_msgSend_imageWithSize_drawnUsingBlock_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "imageWithSize:drawnUsingBlock:");
}

id objc_msgSend_imageWithTintColor_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "imageWithTintColor:");
}

id objc_msgSend_imageWithUnscaledSize_viewScale_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "imageWithUnscaledSize:viewScale:");
}

id objc_msgSend_imaxLocalizedUnsignedInteger_usesGroupingSeparator_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "imaxLocalizedUnsignedInteger:usesGroupingSeparator:");
}

id objc_msgSend_imaxSetAccessibilityDelegate_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "imaxSetAccessibilityDelegate:");
}

id objc_msgSend_imaxValueForKey_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "imaxValueForKey:");
}

id objc_msgSend_immediatePressGesture(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "immediatePressGesture");
}

id objc_msgSend_inBody(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "inBody");
}

id objc_msgSend_inFlowHeader(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "inFlowHeader");
}

id objc_msgSend_inFlowMode(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "inFlowMode");
}

id objc_msgSend_inFreeTransform(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "inFreeTransform");
}

id objc_msgSend_inGuidedPan(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "inGuidedPan");
}

id objc_msgSend_inHUDView(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "inHUDView");
}

id objc_msgSend_inList(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "inList");
}

id objc_msgSend_inLiveResize(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "inLiveResize");
}

id objc_msgSend_inPaginatedMode(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "inPaginatedMode");
}

id objc_msgSend_inResize(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "inResize");
}

id objc_msgSend_inSizeTransition(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "inSizeTransition");
}

id objc_msgSend_inTable(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "inTable");
}

id objc_msgSend_includeInTOC(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "includeInTOC");
}

id objc_msgSend_incorrectCount(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "incorrectCount");
}

id objc_msgSend_increaseFontSize_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "increaseFontSize:");
}

id objc_msgSend_incrementCurrentEventIndex(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "incrementCurrentEventIndex");
}

id objc_msgSend_incrementCurrentSlideIndex(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "incrementCurrentSlideIndex");
}

id objc_msgSend_incrementTextReadBy_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "incrementTextReadBy:");
}

id objc_msgSend_indentLevel(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "indentLevel");
}

id objc_msgSend_indentationWidth(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "indentationWidth");
}

id objc_msgSend_index(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "index");
}

id objc_msgSend_indexAtPosition_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "indexAtPosition:");
}

id objc_msgSend_indexDividerLayout(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "indexDividerLayout");
}

id objc_msgSend_indexForChoice_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "indexForChoice:");
}

id objc_msgSend_indexForEntry_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "indexForEntry:");
}

id objc_msgSend_indexFromPoint_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "indexFromPoint:");
}

id objc_msgSend_indexGreaterThanIndex_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "indexGreaterThanIndex:");
}

id objc_msgSend_indexLabelLayout(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "indexLabelLayout");
}

id objc_msgSend_indexLayout(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "indexLayout");
}

id objc_msgSend_indexLoaded(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "indexLoaded");
}

id objc_msgSend_indexOfCallout_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "indexOfCallout:");
}

id objc_msgSend_indexOfItem_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "indexOfItem:");
}

id objc_msgSend_indexOfNode_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "indexOfNode:");
}

id objc_msgSend_indexOfObject_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "indexOfObject:");
}

id objc_msgSend_indexOfObject_inSortedRange_options_usingComparator_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "indexOfObject:inSortedRange:options:usingComparator:");
}

id objc_msgSend_indexOfObjectIdenticalTo_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "indexOfObjectIdenticalTo:");
}

id objc_msgSend_indexOfObjectPassingTest_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "indexOfObjectPassingTest:");
}

id objc_msgSend_indexOfQuestion_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "indexOfQuestion:");
}

id objc_msgSend_indexPath(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "indexPath");
}

id objc_msgSend_indexPathCorrespondsToSearchResultRow_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "indexPathCorrespondsToSearchResultRow:");
}

id objc_msgSend_indexPathCorrespondsToSeeAllResultsRow_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "indexPathCorrespondsToSeeAllResultsRow:");
}

id objc_msgSend_indexPathForCell_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "indexPathForCell:");
}

id objc_msgSend_indexPathForEntry_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "indexPathForEntry:");
}

id objc_msgSend_indexPathForRow_inSection_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "indexPathForRow:inSection:");
}

id objc_msgSend_indexPathForRowAtPoint_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "indexPathForRowAtPoint:");
}

id objc_msgSend_indexPathForRowPreceedingIndexPath_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "indexPathForRowPreceedingIndexPath:");
}

id objc_msgSend_indexPathForSelectedRow(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "indexPathForSelectedRow");
}

id objc_msgSend_indexPathWithIndexes_length_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "indexPathWithIndexes:length:");
}

id objc_msgSend_indexPathsForSelectedRows(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "indexPathsForSelectedRows");
}

id objc_msgSend_indexPathsForVisibleRows(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "indexPathsForVisibleRows");
}

id objc_msgSend_indexProperties(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "indexProperties");
}

id objc_msgSend_indexSet(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "indexSet");
}

id objc_msgSend_indexSetWithIndex_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "indexSetWithIndex:");
}

id objc_msgSend_indexesOfObjectsPassingTest_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "indexesOfObjectsPassingTest:");
}

id objc_msgSend_indirection(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "indirection");
}

id objc_msgSend_individualCaptions(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "individualCaptions");
}

id objc_msgSend_inflateTarget_fromHints_childHint_anchoredAttachmentPositions_topicNumbers_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "inflateTarget:fromHints:childHint:anchoredAttachmentPositions:topicNumbers:");
}

id objc_msgSend_inflection(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "inflection");
}

id objc_msgSend_inflections(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "inflections");
}

id objc_msgSend_info(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "info");
}

id objc_msgSend_infoDictionary(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "infoDictionary");
}

id objc_msgSend_infoForModel_withSelection_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "infoForModel:withSelection:");
}

id objc_msgSend_infoForNodeUniqueID_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "infoForNodeUniqueID:");
}

id objc_msgSend_infoForNodeUniqueID_forPresentationType_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "infoForNodeUniqueID:forPresentationType:");
}

id objc_msgSend_infoForPressable(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "infoForPressable");
}

id objc_msgSend_infoGeometry(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "infoGeometry");
}

id objc_msgSend_infos(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "infos");
}

id objc_msgSend_infosChangeForViewportChangeInScrollableCanvasController_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "infosChangeForViewportChangeInScrollableCanvasController:");
}

id objc_msgSend_infosForIDs(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "infosForIDs");
}

id objc_msgSend_infosForPanel_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "infosForPanel:");
}

id objc_msgSend_infosForStagePages_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "infosForStagePages:");
}

id objc_msgSend_infosToDisplay(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "infosToDisplay");
}

id objc_msgSend_infosToDisplayForContainerInOverlayableZoomableCanvasController_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "infosToDisplayForContainerInOverlayableZoomableCanvasController:");
}

id objc_msgSend_infosToDisplayForRelativePageRange_forceLoad_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "infosToDisplayForRelativePageRange:forceLoad:");
}

id objc_msgSend_init(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "init");
}

id objc_msgSend_initBackContentLayerWithDarkMode_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initBackContentLayerWithDarkMode:");
}

id objc_msgSend_initCustomShaderWithVertexShader_fragmentShader_device_library_colorAttachment_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initCustomShaderWithVertexShader:fragmentShader:device:library:colorAttachment:");
}

id objc_msgSend_initCustomShaderWithVertexShader_fragmentShader_device_library_colorAttachment_velocityAttachment_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initCustomShaderWithVertexShader:fragmentShader:device:library:colorAttachment:velocityAttachment:");
}

id objc_msgSend_initDefaultGaussianBlurShaderWithDevice_colorAttachment_halfSizedRadius_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initDefaultGaussianBlurShaderWithDevice:colorAttachment:halfSizedRadius:");
}

id objc_msgSend_initDefaultSingleDirectionMotionBlurShaderWithDevice_colorAttachment_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initDefaultSingleDirectionMotionBlurShaderWithDevice:colorAttachment:");
}

id objc_msgSend_initDefaultTextureAndOpacityMotionBlurShaderWithDevice_colorAttachment_velocityAttachment_motionBlur_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initDefaultTextureAndOpacityMotionBlurShaderWithDevice:colorAttachment:velocityAttachment:motionBlur:");
}

id objc_msgSend_initDefaultTextureAndOpacityShaderWithDevice_colorAttachment_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initDefaultTextureAndOpacityShaderWithDevice:colorAttachment:");
}

id objc_msgSend_initDefaultTextureShaderWithDevice_colorAttachment_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initDefaultTextureShaderWithDevice:colorAttachment:");
}

id objc_msgSend_initFileURLWithPath_isDirectory_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initFileURLWithPath:isDirectory:");
}

id objc_msgSend_initForEmptyShapeWithPreviousRange_context_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initForEmptyShapeWithPreviousRange:context:");
}

id objc_msgSend_initForReadingFromData_error_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initForReadingFromData:error:");
}

id objc_msgSend_initForWritingWithMutableData_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initForWritingWithMutableData:");
}

id objc_msgSend_initFrontContentLayerWithDarkMode_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initFrontContentLayerWithDarkMode:");
}

id objc_msgSend_initQuadTextureShaderWithFragmentShader_device_library_colorAttachment_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initQuadTextureShaderWithFragmentShader:device:library:colorAttachment:");
}

id objc_msgSend_initRequiringSecureCoding_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initRequiringSecureCoding:");
}

id objc_msgSend_initRootStageInContext_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initRootStageInContext:");
}

id objc_msgSend_initTOCSectionUIState(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initTOCSectionUIState");
}

id objc_msgSend_initTemporaryWithContext_storage_range_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initTemporaryWithContext:storage:range:");
}

id objc_msgSend_initTemporaryWithContext_string_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initTemporaryWithContext:string:");
}

id objc_msgSend_initTemporaryWithStorage_range_contentNode_style_chapterTitle_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initTemporaryWithStorage:range:contentNode:style:chapterTitle:");
}

id objc_msgSend_initUnsupportedNsWithUri_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initUnsupportedNsWithUri:");
}

id objc_msgSend_initWitContentNodeBody_presentationType_readerState_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWitContentNodeBody:presentationType:readerState:");
}

id objc_msgSend_initWithAEAnnotation_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithAEAnnotation:");
}

id objc_msgSend_initWithAbsolutePageIndex_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithAbsolutePageIndex:");
}

id objc_msgSend_initWithAbsolutePageIndex_range_storageUID_contentNodeGUID_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithAbsolutePageIndex:range:storageUID:contentNodeGUID:");
}

id objc_msgSend_initWithAccessibilityContainer_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithAccessibilityContainer:");
}

id objc_msgSend_initWithAccessibilityParent_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithAccessibilityParent:");
}

id objc_msgSend_initWithAction_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithAction:");
}

id objc_msgSend_initWithActivityIndicatorStyle_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithActivityIndicatorStyle:");
}

id objc_msgSend_initWithActivityItems_applicationActivities_shareType_propertySource_tracker_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithActivityItems:applicationActivities:shareType:propertySource:tracker:");
}

id objc_msgSend_initWithAnimationContext_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithAnimationContext:");
}

id objc_msgSend_initWithAnimationContext_texture_destinationRect_translate_duration_direction_buildType_metalContext_randomGenerator_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithAnimationContext:texture:destinationRect:translate:duration:direction:buildType:metalContext:randomGenerator:");
}

id objc_msgSend_initWithAnnotation_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithAnnotation:");
}

id objc_msgSend_initWithAnnotation_contentNode_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithAnnotation:contentNode:");
}

id objc_msgSend_initWithAnnotation_contentNode_updateBlock_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithAnnotation:contentNode:updateBlock:");
}

id objc_msgSend_initWithAnnotation_maxLines_showHighlight_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithAnnotation:maxLines:showHighlight:");
}

id objc_msgSend_initWithAnnotation_propertySource_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithAnnotation:propertySource:");
}

id objc_msgSend_initWithAnnotationController_contentNode_storageId_storageLength_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithAnnotationController:contentNode:storageId:storageLength:");
}

id objc_msgSend_initWithAnnotationProvider_documentNavigationModel_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithAnnotationProvider:documentNavigationModel:");
}

id objc_msgSend_initWithAnnotationUUID_delegate_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithAnnotationUUID:delegate:");
}

id objc_msgSend_initWithAnnotations_contentNode_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithAnnotations:contentNode:");
}

id objc_msgSend_initWithAnnotations_contentNode_needsMigration_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithAnnotations:contentNode:needsMigration:");
}

id objc_msgSend_initWithAnnotations_propertySource_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithAnnotations:propertySource:");
}

id objc_msgSend_initWithAnnotationsByStorage_bookmarkAnnotations_orphanedAnnotations_needsMigration_temporaryAnnotation_contentNode_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithAnnotationsByStorage:bookmarkAnnotations:orphanedAnnotations:needsMigration:temporaryAnnotation:contentNode:");
}

id objc_msgSend_initWithApplePubData_context_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithApplePubData:context:");
}

id objc_msgSend_initWithArray_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithArray:");
}

id objc_msgSend_initWithAsset_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithAsset:");
}

id objc_msgSend_initWithAsset_summary_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithAsset:summary:");
}

id objc_msgSend_initWithAssetID_bookVersionString_modificationDate_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithAssetID:bookVersionString:modificationDate:");
}

id objc_msgSend_initWithAutoplayEnabled_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithAutoplayEnabled:");
}

id objc_msgSend_initWithBarButtonSystemItem_target_action_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithBarButtonSystemItem:target:action:");
}

id objc_msgSend_initWithBezierPath_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithBezierPath:");
}

id objc_msgSend_initWithBodyInfo_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithBodyInfo:");
}

id objc_msgSend_initWithBookDescription_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithBookDescription:");
}

id objc_msgSend_initWithBookDescription_bookCoverDescription_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithBookDescription:bookCoverDescription:");
}

id objc_msgSend_initWithBookID_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithBookID:");
}

id objc_msgSend_initWithBookPropertiesDelegate_delegate_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithBookPropertiesDelegate:delegate:");
}

id objc_msgSend_initWithBookViewController_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithBookViewController:");
}

id objc_msgSend_initWithBookmarkCount_noteCount_highlightCount_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithBookmarkCount:noteCount:highlightCount:");
}

id objc_msgSend_initWithBool_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithBool:");
}

id objc_msgSend_initWithBuildType_attributes_direction_effect_deliveryStyle_stageCount_eventIndex_stageIndex_startTime_eventStartTime_duration_automatic_renderer_animateAtEndOfPreviousBuild_isEmphasisBuild_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithBuildType:attributes:direction:effect:deliveryStyle:stageCount:eventIndex:stageIndex:startTime:eventStartTime:duration:automatic:renderer:animateAtEndOfPreviousBuild:isEmphasisBuild:");
}

id objc_msgSend_initWithBundle_basePath_readerState_isVolatile_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithBundle:basePath:readerState:isVolatile:");
}

id objc_msgSend_initWithBytes_length_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithBytes:length:");
}

id objc_msgSend_initWithBytesNoCopy_length_encoding_freeWhenDone_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithBytesNoCopy:length:encoding:freeWhenDone:");
}

id objc_msgSend_initWithCFDictionary_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithCFDictionary:");
}

id objc_msgSend_initWithCFI_error_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithCFI:error:");
}

id objc_msgSend_initWithCGColor_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithCGColor:");
}

id objc_msgSend_initWithCGImage_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithCGImage:");
}

id objc_msgSend_initWithCString_encoding_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithCString:encoding:");
}

id objc_msgSend_initWithCachedAnnotation_chapterTitle_physicalPageNumber_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithCachedAnnotation:chapterTitle:physicalPageNumber:");
}

id objc_msgSend_initWithCalendarIdentifier_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithCalendarIdentifier:");
}

id objc_msgSend_initWithCanvas_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithCanvas:");
}

id objc_msgSend_initWithCapacity_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithCapacity:");
}

id objc_msgSend_initWithChapterTitle_delegate_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithChapterTitle:delegate:");
}

id objc_msgSend_initWithChoice_index_delegate_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithChoice:index:delegate:");
}

id objc_msgSend_initWithChoice_questionRep_questionHost_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithChoice:questionRep:questionHost:");
}

id objc_msgSend_initWithColor_fraction_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithColor:fraction:");
}

id objc_msgSend_initWithColor_width_cap_join_pattern_miterLimit_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithColor:width:cap:join:pattern:miterLimit:");
}

id objc_msgSend_initWithColorName_red_green_blue_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithColorName:red:green:blue:");
}

id objc_msgSend_initWithColumnCount_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithColumnCount:");
}

id objc_msgSend_initWithColumnCount_equalWidth_widthArray_gapArray_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithColumnCount:equalWidth:widthArray:gapArray:");
}

id objc_msgSend_initWithComponents_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithComponents:");
}

id objc_msgSend_initWithConcurrencyType_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithConcurrencyType:");
}

id objc_msgSend_initWithContentNode_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithContentNode:");
}

id objc_msgSend_initWithContentNode_annotation_noteRange_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithContentNode:annotation:noteRange:");
}

id objc_msgSend_initWithContentNode_elementId_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithContentNode:elementId:");
}

id objc_msgSend_initWithContentNode_pageLocation_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithContentNode:pageLocation:");
}

id objc_msgSend_initWithContentNode_paginationResults_flowModelContentNodeBody_presentationType_documentRoot_isForegroundPagination_delegate_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithContentNode:paginationResults:flowModelContentNodeBody:presentationType:documentRoot:isForegroundPagination:delegate:");
}

id objc_msgSend_initWithContentNode_presentationType_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithContentNode:presentationType:");
}

id objc_msgSend_initWithContentNode_relativePageIndex_presentationType_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithContentNode:relativePageIndex:presentationType:");
}

id objc_msgSend_initWithContentNode_startElementId_startPattern_startOccurrence_startRange_endElementId_endPattern_endOccurrence_endRange_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithContentNode:startElementId:startPattern:startOccurrence:startRange:endElementId:endPattern:endOccurrence:endRange:");
}

id objc_msgSend_initWithContentNode_startXPointer_endXPointer_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithContentNode:startXPointer:endXPointer:");
}

id objc_msgSend_initWithContentNode_storage_range_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithContentNode:storage:range:");
}

id objc_msgSend_initWithContentNode_storageUID_range_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithContentNode:storageUID:range:");
}

id objc_msgSend_initWithContentNodeGUID_presentationType_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithContentNodeGUID:presentationType:");
}

id objc_msgSend_initWithContentOfXmlNode_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithContentOfXmlNode:");
}

id objc_msgSend_initWithContentProvider_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithContentProvider:");
}

id objc_msgSend_initWithContentsOfFile_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithContentsOfFile:");
}

id objc_msgSend_initWithContentsOfURL_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithContentsOfURL:");
}

id objc_msgSend_initWithContext_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithContext:");
}

id objc_msgSend_initWithContext_bookRootURL_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithContext:bookRootURL:");
}

id objc_msgSend_initWithContext_canCullStyles_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithContext:canCullStyles:");
}

id objc_msgSend_initWithContext_contentNodes_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithContext:contentNodes:");
}

id objc_msgSend_initWithContext_documentRoot_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithContext:documentRoot:");
}

id objc_msgSend_initWithContext_drawable_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithContext:drawable:");
}

id objc_msgSend_initWithContext_geometry_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithContext:geometry:");
}

id objc_msgSend_initWithContext_geometry_pathSource_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithContext:geometry:pathSource:");
}

id objc_msgSend_initWithContext_geometry_rows_columns_styles_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithContext:geometry:rows:columns:styles:");
}

id objc_msgSend_initWithContext_geometry_sourceURL_drmContext_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithContext:geometry:sourceURL:drmContext:");
}

id objc_msgSend_initWithContext_geometry_sourceURL_drmContext_stageColor_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithContext:geometry:sourceURL:drmContext:stageColor:");
}

id objc_msgSend_initWithContext_geometry_stageGeometry_sourceURL_drmContext_exposurePolicy_ignoreInfoPlist_allowNetworkAccess_autoplayConfig_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithContext:geometry:stageGeometry:sourceURL:drmContext:exposurePolicy:ignoreInfoPlist:allowNetworkAccess:autoplayConfig:");
}

id objc_msgSend_initWithContext_geometry_style_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithContext:geometry:style:");
}

id objc_msgSend_initWithContext_geometry_style_imageData_originalImageData_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithContext:geometry:style:imageData:originalImageData:");
}

id objc_msgSend_initWithContext_geometry_style_movieRemoteURL_loadedAsset_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithContext:geometry:style:movieRemoteURL:loadedAsset:");
}

id objc_msgSend_initWithContext_geometry_style_pathSource_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithContext:geometry:style:pathSource:");
}

id objc_msgSend_initWithContext_geometry_style_pathSource_wpStorage_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithContext:geometry:style:pathSource:wpStorage:");
}

id objc_msgSend_initWithContext_geometry_style_showInfo_adornmentInfo_showTransportControls_autoPlayConfig_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithContext:geometry:style:showInfo:adornmentInfo:showTransportControls:autoPlayConfig:");
}

id objc_msgSend_initWithContext_geometry_style_stageGeometry_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithContext:geometry:style:stageGeometry:");
}

id objc_msgSend_initWithContext_geometry_style_wpStorage_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithContext:geometry:style:wpStorage:");
}

id objc_msgSend_initWithContext_imageData_thumbnailData_captionStorage_cropRect_accessibilityDescriptions_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithContext:imageData:thumbnailData:captionStorage:cropRect:accessibilityDescriptions:");
}

id objc_msgSend_initWithContext_mathMLNode_fromXMLDoc_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithContext:mathMLNode:fromXMLDoc:");
}

id objc_msgSend_initWithContext_name_overridePropertyMap_isVariation_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithContext:name:overridePropertyMap:isVariation:");
}

id objc_msgSend_initWithContext_parent_applePubRelativePath_andTerm_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithContext:parent:applePubRelativePath:andTerm:");
}

id objc_msgSend_initWithContext_storage_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithContext:storage:");
}

id objc_msgSend_initWithContext_string_kind_stylesheet_paragraphStyle_listStyle_section_columnStyle_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithContext:string:kind:stylesheet:paragraphStyle:listStyle:section:columnStyle:");
}

id objc_msgSend_initWithContext_string_stylesheet_kind_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithContext:string:stylesheet:kind:");
}

id objc_msgSend_initWithContext_type_text_numberOfChoices_titleAccessibilityDescription_imageAccessibilityDescription_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithContext:type:text:numberOfChoices:titleAccessibilityDescription:imageAccessibilityDescription:");
}

id objc_msgSend_initWithContext_url_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithContext:url:");
}

id objc_msgSend_initWithContext_widgetInfo_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithContext:widgetInfo:");
}

id objc_msgSend_initWithCustomView_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithCustomView:");
}

id objc_msgSend_initWithDSID_altDSID_username_options_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithDSID:altDSID:username:options:");
}

id objc_msgSend_initWithDX_dY_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithDX:dY:");
}

id objc_msgSend_initWithData_encoding_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithData:encoding:");
}

id objc_msgSend_initWithDataNoCopy_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithDataNoCopy:");
}

id objc_msgSend_initWithDefaultView(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithDefaultView");
}

id objc_msgSend_initWithDelegate_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithDelegate:");
}

id objc_msgSend_initWithDelegate_contentNode_documentRoot_applePubURL_documentEntryURI_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithDelegate:contentNode:documentRoot:applePubURL:documentEntryURI:");
}

id objc_msgSend_initWithDelegate_contentNode_paginationController_presentationType_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithDelegate:contentNode:paginationController:presentationType:");
}

id objc_msgSend_initWithDelegate_darkMode_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithDelegate:darkMode:");
}

id objc_msgSend_initWithDelegate_documentContext_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithDelegate:documentContext:");
}

id objc_msgSend_initWithDelegate_documentRoot_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithDelegate:documentRoot:");
}

id objc_msgSend_initWithDelegate_documentRoot_searchArray_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithDelegate:documentRoot:searchArray:");
}

id objc_msgSend_initWithDelegate_enablePaging_pageHorizontally_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithDelegate:enablePaging:pageHorizontally:");
}

id objc_msgSend_initWithDelegate_interactiveCanvasController_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithDelegate:interactiveCanvasController:");
}

id objc_msgSend_initWithDelegate_kind_expandedRep_documentRoot_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithDelegate:kind:expandedRep:documentRoot:");
}

id objc_msgSend_initWithDelegate_ordinal_applePubURL_documentEntryURI_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithDelegate:ordinal:applePubURL:documentEntryURI:");
}

id objc_msgSend_initWithDelegate_pageControlHeight_presentationType_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithDelegate:pageControlHeight:presentationType:");
}

id objc_msgSend_initWithDelegate_pagePositionController_presentationType_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithDelegate:pagePositionController:presentationType:");
}

id objc_msgSend_initWithDelegate_view_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithDelegate:view:");
}

id objc_msgSend_initWithDictionary_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithDictionary:");
}

id objc_msgSend_initWithDictionaryRepresentation_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithDictionaryRepresentation:");
}

id objc_msgSend_initWithDocument_name_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithDocument:name:");
}

id objc_msgSend_initWithDocumentLinkResolver_glossaryLinkResolver_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithDocumentLinkResolver:glossaryLinkResolver:");
}

id objc_msgSend_initWithDocumentRoot_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithDocumentRoot:");
}

id objc_msgSend_initWithDocumentRoot_applePubURL_archive_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithDocumentRoot:applePubURL:archive:");
}

id objc_msgSend_initWithDocumentRoot_bookNavigator_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithDocumentRoot:bookNavigator:");
}

id objc_msgSend_initWithDocumentRoot_contentNode_flowNodeBody_archive_documentEntryUri_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithDocumentRoot:contentNode:flowNodeBody:archive:documentEntryUri:");
}

id objc_msgSend_initWithDocumentRoot_contentNode_flowNodeBody_paginatedNodeBody_archive_documentEntryUri_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithDocumentRoot:contentNode:flowNodeBody:paginatedNodeBody:archive:documentEntryUri:");
}

id objc_msgSend_initWithDocumentRoot_expandableRep_delegate_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithDocumentRoot:expandableRep:delegate:");
}

id objc_msgSend_initWithDocumentRoot_interactiveCanvasController_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithDocumentRoot:interactiveCanvasController:");
}

id objc_msgSend_initWithDocumentRoot_navigationUnitsNodes_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithDocumentRoot:navigationUnitsNodes:");
}

id objc_msgSend_initWithDocumentRoot_nodeBody_tocTile_archive_documentEntryUri_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithDocumentRoot:nodeBody:tocTile:archive:documentEntryUri:");
}

id objc_msgSend_initWithDocumentRoot_sourcePresentationType_targetPresentationType_loadCache_observer_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithDocumentRoot:sourcePresentationType:targetPresentationType:loadCache:observer:");
}

id objc_msgSend_initWithDomain_code_userInfo_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithDomain:code:userInfo:");
}

id objc_msgSend_initWithDouble_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithDouble:");
}

id objc_msgSend_initWithDrawable_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithDrawable:");
}

id objc_msgSend_initWithEffect_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithEffect:");
}

id objc_msgSend_initWithEffectClass_direction_duration_effect_session_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithEffectClass:direction:duration:effect:session:");
}

id objc_msgSend_initWithEffectClass_direction_duration_session_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithEffectClass:direction:duration:session:");
}

id objc_msgSend_initWithEffectDict_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithEffectDict:");
}

id objc_msgSend_initWithEffectSize_blurScale_metalContext_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithEffectSize:blurScale:metalContext:");
}

id objc_msgSend_initWithElementName_elementNamespace_mappingClass_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithElementName:elementNamespace:mappingClass:");
}

id objc_msgSend_initWithEntity_insertIntoManagedObjectContext_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithEntity:insertIntoManagedObjectContext:");
}

id objc_msgSend_initWithEntityName_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithEntityName:");
}

id objc_msgSend_initWithEntry_body_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithEntry:body:");
}

id objc_msgSend_initWithEntry_inArchive_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithEntry:inArchive:");
}

id objc_msgSend_initWithEntry_inArchive_documentRoot_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithEntry:inArchive:documentRoot:");
}

id objc_msgSend_initWithEntry_searchArray_inArchive_documentRoot_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithEntry:searchArray:inArchive:documentRoot:");
}

id objc_msgSend_initWithEntryBody_documentRoot_archive_documentEntryUri_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithEntryBody:documentRoot:archive:documentEntryUri:");
}

id objc_msgSend_initWithEqualColumnCount_gapFraction_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithEqualColumnCount:gapFraction:");
}

id objc_msgSend_initWithEvent_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithEvent:");
}

id objc_msgSend_initWithExpandedRep_documentRoot_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithExpandedRep:documentRoot:");
}

id objc_msgSend_initWithFallThroughAllowed_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithFallThroughAllowed:");
}

id objc_msgSend_initWithFetchRequest_managedObjectContext_sectionNameKeyPath_cacheName_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithFetchRequest:managedObjectContext:sectionNameKeyPath:cacheName:");
}

id objc_msgSend_initWithFileName_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithFileName:");
}

id objc_msgSend_initWithFirst_second_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithFirst:second:");
}

id objc_msgSend_initWithFormat_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithFormat:");
}

id objc_msgSend_initWithFormat_arguments_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithFormat:arguments:");
}

id objc_msgSend_initWithFrame_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithFrame:");
}

id objc_msgSend_initWithFrame_blissClassicStyle_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithFrame:blissClassicStyle:");
}

id objc_msgSend_initWithFrame_configuration_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithFrame:configuration:");
}

id objc_msgSend_initWithFrame_cornerRadius_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithFrame:cornerRadius:");
}

id objc_msgSend_initWithFrame_documentRoot_delegate_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithFrame:documentRoot:delegate:");
}

id objc_msgSend_initWithFrame_expandedLayout_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithFrame:expandedLayout:");
}

id objc_msgSend_initWithFrame_isFirstThumbnail_delegate_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithFrame:isFirstThumbnail:delegate:");
}

id objc_msgSend_initWithFrame_isOpaque_isWideGamut_delegate_metalDevice_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithFrame:isOpaque:isWideGamut:delegate:metalDevice:");
}

id objc_msgSend_initWithFrame_options_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithFrame:options:");
}

id objc_msgSend_initWithFrame_style_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithFrame:style:");
}

id objc_msgSend_initWithFrame_theme_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithFrame:theme:");
}

id objc_msgSend_initWithFrameSpec_assetScale_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithFrameSpec:assetScale:");
}

id objc_msgSend_initWithFramebufferSize_slideSize_randomGenerator_metalContext_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithFramebufferSize:slideSize:randomGenerator:metalContext:");
}

id objc_msgSend_initWithFreeTransformableRep_handler_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithFreeTransformableRep:handler:");
}

id objc_msgSend_initWithGeometry_widgetInfo_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithGeometry:widgetInfo:");
}

id objc_msgSend_initWithGestureDispatcher_gestureKind_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithGestureDispatcher:gestureKind:");
}

id objc_msgSend_initWithGlossaryController_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithGlossaryController:");
}

id objc_msgSend_initWithGlossaryEntry_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithGlossaryEntry:");
}

id objc_msgSend_initWithGlossaryEntry_storageUID_range_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithGlossaryEntry:storageUID:range:");
}

id objc_msgSend_initWithHelper_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithHelper:");
}

id objc_msgSend_initWithHosts_bookRootURL_context_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithHosts:bookRootURL:context:");
}

id objc_msgSend_initWithHtmlStackEntry_parentEntryMediaState_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithHtmlStackEntry:parentEntryMediaState:");
}

id objc_msgSend_initWithId_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithId:");
}

id objc_msgSend_initWithImage_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithImage:");
}

id objc_msgSend_initWithImage_highlightedImage_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithImage:highlightedImage:");
}

id objc_msgSend_initWithImageContentLayer_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithImageContentLayer:");
}

id objc_msgSend_initWithImageData_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithImageData:");
}

id objc_msgSend_initWithImageData_technique_tintColor_size_originalImageData_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithImageData:technique:tintColor:size:originalImageData:");
}

id objc_msgSend_initWithIndex_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithIndex:");
}

id objc_msgSend_initWithIndex_choice_delegate_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithIndex:choice:delegate:");
}

id objc_msgSend_initWithIndex_storage_listLabelStyle_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithIndex:storage:listLabelStyle:");
}

id objc_msgSend_initWithIndexSet_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithIndexSet:");
}

id objc_msgSend_initWithIndexes_length_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithIndexes:length:");
}

id objc_msgSend_initWithInflection_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithInflection:");
}

id objc_msgSend_initWithInfo_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithInfo:");
}

id objc_msgSend_initWithInfoGeometry_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithInfoGeometry:");
}

id objc_msgSend_initWithInnerCfiFrag_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithInnerCfiFrag:");
}

id objc_msgSend_initWithInputStream_J00oNrNGGvbpr5VY2bUB_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithInputStream:J00oNrNGGvbpr5VY2bUB:");
}

id objc_msgSend_initWithInt_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithInt:");
}

id objc_msgSend_initWithInteger_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithInteger:");
}

id objc_msgSend_initWithInteractiveCanvasController_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithInteractiveCanvasController:");
}

id objc_msgSend_initWithInteractiveCanvasController_pageSize_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithInteractiveCanvasController:pageSize:");
}

id objc_msgSend_initWithIsHTMLWrap_type_direction_fitType_margin_alphaThreshold_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithIsHTMLWrap:type:direction:fitType:margin:alphaThreshold:");
}

id objc_msgSend_initWithItemProvider_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithItemProvider:");
}

id objc_msgSend_initWithItemProviders_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithItemProviders:");
}

id objc_msgSend_initWithKPFBundle_kpfDictionary_drmContext_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithKPFBundle:kpfDictionary:drmContext:");
}

id objc_msgSend_initWithKPFDocument_showLayer_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithKPFDocument:showLayer:");
}

id objc_msgSend_initWithKey_ascending_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithKey:ascending:");
}

id objc_msgSend_initWithKey_ascending_selector_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithKey:ascending:selector:");
}

id objc_msgSend_initWithLayer_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithLayer:");
}

id objc_msgSend_initWithLayer_hostView_gesture_anchorPoint_delegate_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithLayer:hostView:gesture:anchorPoint:delegate:");
}

id objc_msgSend_initWithLayerAndSubviewHost_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithLayerAndSubviewHost:");
}

id objc_msgSend_initWithLayout_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithLayout:");
}

id objc_msgSend_initWithLayout_canvas_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithLayout:canvas:");
}

id objc_msgSend_initWithLayout_column_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithLayout:column:");
}

id objc_msgSend_initWithLayout_targeted_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithLayout:targeted:");
}

id objc_msgSend_initWithLocale_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithLocale:");
}

id objc_msgSend_initWithLocaleIdentifier_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithLocaleIdentifier:");
}

id objc_msgSend_initWithLocation_velocity_min_max_targetViewScale_controller_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithLocation:velocity:min:max:targetViewScale:controller:");
}

id objc_msgSend_initWithManagedObjectModel_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithManagedObjectModel:");
}

id objc_msgSend_initWithMetalTexture_frame_blurAmount_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithMetalTexture:frame:blurAmount:");
}

id objc_msgSend_initWithMode_amount_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithMode:amount:");
}

id objc_msgSend_initWithModel_documentRoot_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithModel:documentRoot:");
}

id objc_msgSend_initWithMovieViewController_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithMovieViewController:");
}

id objc_msgSend_initWithName_actionBlock_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithName:actionBlock:");
}

id objc_msgSend_initWithName_bufferUsage_dataType_normalized_componentCount_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithName:bufferUsage:dataType:normalized:componentCount:");
}

id objc_msgSend_initWithName_itemSearchBlock_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithName:itemSearchBlock:");
}

id objc_msgSend_initWithName_reason_userInfo_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithName:reason:userInfo:");
}

id objc_msgSend_initWithNavigationUnit_navigationModel_tocModel_chapterIndex_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithNavigationUnit:navigationModel:tocModel:chapterIndex:");
}

id objc_msgSend_initWithNavigationUnits_navigationModel_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithNavigationUnits:navigationModel:");
}

id objc_msgSend_initWithNextResponder_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithNextResponder:");
}

id objc_msgSend_initWithNibName_bundle_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithNibName:bundle:");
}

id objc_msgSend_initWithObject_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithObject:");
}

id objc_msgSend_initWithObjects_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithObjects:");
}

id objc_msgSend_initWithObjectsAndKeys_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithObjectsAndKeys:");
}

id objc_msgSend_initWithOffset_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithOffset:");
}

id objc_msgSend_initWithOpacity_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithOpacity:");
}

id objc_msgSend_initWithOptions_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithOptions:");
}

id objc_msgSend_initWithPackageURL_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithPackageURL:");
}

id objc_msgSend_initWithPageController_absoluteOffset_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithPageController:absoluteOffset:");
}

id objc_msgSend_initWithPageIndex_pageController_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithPageIndex:pageController:");
}

id objc_msgSend_initWithPageInfo_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithPageInfo:");
}

id objc_msgSend_initWithPageInfo_scrimEnabled_delegate_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithPageInfo:scrimEnabled:delegate:");
}

id objc_msgSend_initWithPair_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithPair:");
}

id objc_msgSend_initWithParagraphStyle_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithParagraphStyle:");
}

id objc_msgSend_initWithParagraphStyle_columnStyle_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithParagraphStyle:columnStyle:");
}

id objc_msgSend_initWithParent_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithParent:");
}

id objc_msgSend_initWithParentContext_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithParentContext:");
}

id objc_msgSend_initWithParentEntry_reader_elementName_elementNamespace_cfiPath_readerState_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithParentEntry:reader:elementName:elementNamespace:cfiPath:readerState:");
}

id objc_msgSend_initWithParentRep_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithParentRep:");
}

id objc_msgSend_initWithParentTOCRep_linkField_textRange_indexInTOC_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithParentTOCRep:linkField:textRange:indexInTOC:");
}

id objc_msgSend_initWithParseOrder_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithParseOrder:");
}

id objc_msgSend_initWithPath_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithPath:");
}

id objc_msgSend_initWithPath_J00oNrNGGvbpr5VY2bUB_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithPath:J00oNrNGGvbpr5VY2bUB:");
}

id objc_msgSend_initWithPath_allowArchive_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithPath:allowArchive:");
}

id objc_msgSend_initWithPath_collapseCommonRootDirectory_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithPath:collapseCommonRootDirectory:");
}

id objc_msgSend_initWithPath_fragment_context_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithPath:fragment:context:");
}

id objc_msgSend_initWithPath_offset_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithPath:offset:");
}

id objc_msgSend_initWithPattern_options_error_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithPattern:options:error:");
}

id objc_msgSend_initWithPlayer_delegate_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithPlayer:delegate:");
}

id objc_msgSend_initWithPlayerItem_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithPlayerItem:");
}

id objc_msgSend_initWithPoints_clippedToRect_percentOfCellsToSplit_randomGenerator_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithPoints:clippedToRect:percentOfCellsToSplit:randomGenerator:");
}

id objc_msgSend_initWithPopUpInfo_scale_documentRoot_scrollableCanvasHost_bookNavigator_documentNavigator_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithPopUpInfo:scale:documentRoot:scrollableCanvasHost:bookNavigator:documentNavigator:");
}

id objc_msgSend_initWithPosition_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithPosition:");
}

id objc_msgSend_initWithPosition_alignment_leader_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithPosition:alignment:leader:");
}

id objc_msgSend_initWithPosition_size_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithPosition:size:");
}

id objc_msgSend_initWithPosition_size_angle_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithPosition:size:angle:");
}

id objc_msgSend_initWithPosition_size_widthValid_heightValid_horizontalFlip_verticalFlip_angle_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithPosition:size:widthValid:heightValid:horizontalFlip:verticalFlip:angle:");
}

id objc_msgSend_initWithPressableRep_pressHandler_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithPressableRep:pressHandler:");
}

id objc_msgSend_initWithProperties_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithProperties:");
}

id objc_msgSend_initWithPropertiesAndValues_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithPropertiesAndValues:");
}

id objc_msgSend_initWithPropertySource_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithPropertySource:");
}

id objc_msgSend_initWithQuestion_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithQuestion:");
}

id objc_msgSend_initWithQuestion_index_delegate_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithQuestion:index:delegate:");
}

id objc_msgSend_initWithQueueMode_requestScope_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithQueueMode:requestScope:");
}

id objc_msgSend_initWithRange_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithRange:");
}

id objc_msgSend_initWithReaderState_entryPath_definitionMap_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithReaderState:entryPath:definitionMap:");
}

id objc_msgSend_initWithRep_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithRep:");
}

id objc_msgSend_initWithRep_canvas_stageCanvasController_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithRep:canvas:stageCanvasController:");
}

id objc_msgSend_initWithRep_knob_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithRep:knob:");
}

id objc_msgSend_initWithRep_pagedCanvasController_zoomableCanvasController_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithRep:pagedCanvasController:zoomableCanvasController:");
}

id objc_msgSend_initWithRequest_presentingViewController_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithRequest:presentingViewController:");
}

id objc_msgSend_initWithRequestScope_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithRequestScope:");
}

id objc_msgSend_initWithResponse_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithResponse:");
}

id objc_msgSend_initWithReuseIdentifier_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithReuseIdentifier:");
}

id objc_msgSend_initWithRoot_pVwXvin61ocxeAjqxjwz_andRights_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithRoot:pVwXvin61ocxeAjqxjwz:andRights:");
}

id objc_msgSend_initWithRootModelObject_filter_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithRootModelObject:filter:");
}

id objc_msgSend_initWithRootViewController_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithRootViewController:");
}

id objc_msgSend_initWithScale_hostView_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithScale:hostView:");
}

id objc_msgSend_initWithScale_scaleWithText_baselineOffset_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithScale:scaleWithText:baselineOffset:");
}

id objc_msgSend_initWithSceneController_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithSceneController:");
}

id objc_msgSend_initWithSceneInfo_frame_delegate_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithSceneInfo:frame:delegate:");
}

id objc_msgSend_initWithScore_correctCount_incorrectCount_missingCount_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithScore:correctCount:incorrectCount:missingCount:");
}

id objc_msgSend_initWithScrollViewStatus_autoNightThemeStatus_backgroundColor_font_fontSize_brightnessLevel_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithScrollViewStatus:autoNightThemeStatus:backgroundColor:font:fontSize:brightnessLevel:");
}

id objc_msgSend_initWithSearchController_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithSearchController:");
}

id objc_msgSend_initWithSearchController_searchViewMode_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithSearchController:searchViewMode:");
}

id objc_msgSend_initWithSearchTargetProviders_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithSearchTargetProviders:");
}

id objc_msgSend_initWithSection_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithSection:");
}

id objc_msgSend_initWithSectionTitle_andEntry_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithSectionTitle:andEntry:");
}

id objc_msgSend_initWithSeed_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithSeed:");
}

id objc_msgSend_initWithSettings_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithSettings:");
}

id objc_msgSend_initWithShowSize_viewScale_baseLayer_isBaseLayerVisible_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithShowSize:viewScale:baseLayer:isBaseLayerVisible:");
}

id objc_msgSend_initWithSize_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithSize:");
}

id objc_msgSend_initWithSize_format_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithSize:format:");
}

id objc_msgSend_initWithSize_metalContext_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithSize:metalContext:");
}

id objc_msgSend_initWithSize_transform_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithSize:transform:");
}

id objc_msgSend_initWithSizingDelegate_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithSizingDelegate:");
}

id objc_msgSend_initWithSlideDictionary_slideTag_baseResourcePath_drmContext_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithSlideDictionary:slideTag:baseResourcePath:drmContext:");
}

id objc_msgSend_initWithSource_forMainFrameOnly_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithSource:forMainFrameOnly:");
}

id objc_msgSend_initWithSource_injectionTime_forMainFrameOnly_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithSource:injectionTime:forMainFrameOnly:");
}

id objc_msgSend_initWithSplit_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithSplit:");
}

id objc_msgSend_initWithStackEntry_parentEntryOrientationState_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithStackEntry:parentEntryOrientationState:");
}

id objc_msgSend_initWithStartStatus_endStatus_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithStartStatus:endStatus:");
}

id objc_msgSend_initWithStem_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithStem:");
}

id objc_msgSend_initWithSteps_takingSteps_name_inContext_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithSteps:takingSteps:name:inContext:");
}

id objc_msgSend_initWithStorage_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithStorage:");
}

id objc_msgSend_initWithStorage_interactiveCanvasController_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithStorage:interactiveCanvasController:");
}

id objc_msgSend_initWithStorage_owner_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithStorage:owner:");
}

id objc_msgSend_initWithStorage_range_context_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithStorage:range:context:");
}

id objc_msgSend_initWithStorage_readerState_defaultParagraphStyleIdentifier_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithStorage:readerState:defaultParagraphStyleIdentifier:");
}

id objc_msgSend_initWithStorage_selection_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithStorage:selection:");
}

id objc_msgSend_initWithStorage_subRange_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithStorage:subRange:");
}

id objc_msgSend_initWithString_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithString:");
}

id objc_msgSend_initWithString_attributes_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithString:attributes:");
}

id objc_msgSend_initWithString_context_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithString:context:");
}

id objc_msgSend_initWithString_paragraphStyle_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithString:paragraphStyle:");
}

id objc_msgSend_initWithString_range_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithString:range:");
}

id objc_msgSend_initWithString_relativeToURL_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithString:relativeToURL:");
}

id objc_msgSend_initWithStudyOptions_unfilteredContentAvailable_darkMode_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithStudyOptions:unfilteredContentAvailable:darkMode:");
}

id objc_msgSend_initWithStyle_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithStyle:");
}

id objc_msgSend_initWithStyle_reuseIdentifier_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithStyle:reuseIdentifier:");
}

id objc_msgSend_initWithStyle_reuseIdentifier_tableView_sizingDelegate_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithStyle:reuseIdentifier:tableView:sizingDelegate:");
}

id objc_msgSend_initWithTOCModel_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithTOCModel:");
}

id objc_msgSend_initWithTableInfo_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithTableInfo:");
}

id objc_msgSend_initWithTableModel_andCellID_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithTableModel:andCellID:");
}

id objc_msgSend_initWithTag_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithTag:");
}

id objc_msgSend_initWithTag_affectedObject_text_parameters_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithTag:affectedObject:text:parameters:");
}

id objc_msgSend_initWithTag_index_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithTag:index:");
}

id objc_msgSend_initWithTarget_action_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithTarget:action:");
}

id objc_msgSend_initWithTarget_context_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithTarget:context:");
}

id objc_msgSend_initWithTargetElement_targetRange_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithTargetElement:targetRange:");
}

id objc_msgSend_initWithTargetSerialQueue_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithTargetSerialQueue:");
}

id objc_msgSend_initWithTerm_annotation_pageNumber_displayPageNumber_occurrenceIndex_context_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithTerm:annotation:pageNumber:displayPageNumber:occurrenceIndex:context:");
}

id objc_msgSend_initWithTerm_glossaryController_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithTerm:glossaryController:");
}

id objc_msgSend_initWithTerm_rank_cfi_pageNumber_displayPageNumber_occurrenceIndex_context_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithTerm:rank:cfi:pageNumber:displayPageNumber:occurrenceIndex:context:");
}

id objc_msgSend_initWithTitle_action_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithTitle:action:");
}

id objc_msgSend_initWithTitle_includeInTOC_context_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithTitle:includeInTOC:context:");
}

id objc_msgSend_initWithTitle_style_target_action_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithTitle:style:target:action:");
}

id objc_msgSend_initWithTopInset_leftInset_bottomInset_rightInset_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithTopInset:leftInset:bottomInset:rightInset:");
}

id objc_msgSend_initWithTransportController_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithTransportController:");
}

id objc_msgSend_initWithType_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithType:");
}

id objc_msgSend_initWithType_range_styleInsertionBehavior_caretAffinity_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithType:range:styleInsertionBehavior:caretAffinity:");
}

id objc_msgSend_initWithType_value_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithType:value:");
}

id objc_msgSend_initWithURL_MIMEType_expectedContentLength_textEncodingName_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithURL:MIMEType:expectedContentLength:textEncodingName:");
}

id objc_msgSend_initWithURL_assetID_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithURL:assetID:");
}

id objc_msgSend_initWithURL_assetID_summary_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithURL:assetID:summary:");
}

id objc_msgSend_initWithURL_assetID_type_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithURL:assetID:type:");
}

id objc_msgSend_initWithURL_looping_volume_name_audioOnly_drmContext_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithURL:looping:volume:name:audioOnly:drmContext:");
}

id objc_msgSend_initWithURL_options_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithURL:options:");
}

id objc_msgSend_initWithURL_withOptions_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithURL:withOptions:");
}

id objc_msgSend_initWithUTF8String_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithUTF8String:");
}

id objc_msgSend_initWithUnscaledRect_wellRect_target_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithUnscaledRect:wellRect:target:");
}

id objc_msgSend_initWithUnsignedInteger_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithUnsignedInteger:");
}

id objc_msgSend_initWithUri_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithUri:");
}

id objc_msgSend_initWithUserDefaults_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithUserDefaults:");
}

id objc_msgSend_initWithValueOfXmlAttribute_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithValueOfXmlAttribute:");
}

id objc_msgSend_initWithVersion_bookVersion_assetID_creatorID_contentNode_storage_updateBlock_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithVersion:bookVersion:assetID:creatorID:contentNode:storage:updateBlock:");
}

id objc_msgSend_initWithVertexRect_textureRect_minimumDataSize_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithVertexRect:textureRect:minimumDataSize:");
}

id objc_msgSend_initWithView_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithView:");
}

id objc_msgSend_initWithView_scrollView_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithView:scrollView:");
}

id objc_msgSend_initWithViewController_provider_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithViewController:provider:");
}

id objc_msgSend_initWithViewScale_contentOffset_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithViewScale:contentOffset:");
}

id objc_msgSend_initWithViewScale_contentOffset_groupShape_titleStorage_titleGeometry_descriptionStorage_descriptionGeometry_lineShape_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithViewScale:contentOffset:groupShape:titleStorage:titleGeometry:descriptionStorage:descriptionGeometry:lineShape:");
}

id objc_msgSend_initWithWidth_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithWidth:");
}

id objc_msgSend_initWithXmlString_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithXmlString:");
}

id objc_msgSend_initWithZOrder_delegate_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithZOrder:delegate:");
}

id objc_msgSend_initWithfilteredOutURLSchemes_requestScope_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithfilteredOutURLSchemes:requestScope:");
}

id objc_msgSend_initialConfiguration(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initialConfiguration");
}

id objc_msgSend_initialLayerPosition(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initialLayerPosition");
}

id objc_msgSend_initialLayerSize(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initialLayerSize");
}

id objc_msgSend_initialLocation1(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initialLocation1");
}

id objc_msgSend_initialLocation2(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initialLocation2");
}

id objc_msgSend_initialLocationInView_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initialLocationInView:");
}

id objc_msgSend_injectedWidgetObject(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "injectedWidgetObject");
}

id objc_msgSend_innerClipView(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "innerClipView");
}

id objc_msgSend_innerPathMaxRangeReader(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "innerPathMaxRangeReader");
}

id objc_msgSend_innerPathReader(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "innerPathReader");
}

id objc_msgSend_innermostElement(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "innermostElement");
}

id objc_msgSend_input(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "input");
}

id objc_msgSend_insertAttachmentOrFootnote_range_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "insertAttachmentOrFootnote:range:");
}

id objc_msgSend_insertChild_atIndex_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "insertChild:atIndex:");
}

id objc_msgSend_insertElementAttributes_intoSelector_identifier_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "insertElementAttributes:intoSelector:identifier:");
}

id objc_msgSend_insertObject_atIndex_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "insertObject:atIndex:");
}

id objc_msgSend_insertRowsAtIndexPaths_withRowAnimation_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "insertRowsAtIndexPaths:withRowAnimation:");
}

id objc_msgSend_insertSections_withRowAnimation_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "insertSections:withRowAnimation:");
}

id objc_msgSend_insertSiblingMenu_afterMenuForIdentifier_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "insertSiblingMenu:afterMenuForIdentifier:");
}

id objc_msgSend_insertString_atIndex_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "insertString:atIndex:");
}

id objc_msgSend_insertSublayer_above_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "insertSublayer:above:");
}

id objc_msgSend_insertSublayer_atIndex_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "insertSublayer:atIndex:");
}

id objc_msgSend_insertSublayer_below_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "insertSublayer:below:");
}

id objc_msgSend_insertSubview_aboveSubview_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "insertSubview:aboveSubview:");
}

id objc_msgSend_insertSubview_atIndex_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "insertSubview:atIndex:");
}

id objc_msgSend_insertSubview_belowSubview_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "insertSubview:belowSubview:");
}

id objc_msgSend_insertSubviewAtBack_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "insertSubviewAtBack:");
}

id objc_msgSend_insertTab_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "insertTab:");
}

id objc_msgSend_insertValidatedChildLayoutForInfo_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "insertValidatedChildLayoutForInfo:");
}

id objc_msgSend_insertWord_value_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "insertWord:value:");
}

id objc_msgSend_insertionOrder(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "insertionOrder");
}

id objc_msgSend_insetFrame_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "insetFrame:");
}

id objc_msgSend_instanceData(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "instanceData");
}

id objc_msgSend_instantiateWithOwner_options_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "instantiateWithOwner:options:");
}

id objc_msgSend_instructionalWPLayout(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "instructionalWPLayout");
}

id objc_msgSend_intBetween::(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "intBetween::");
}

id objc_msgSend_intValue(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "intValue");
}

id objc_msgSend_intValueForProperty_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "intValueForProperty:");
}

id objc_msgSend_integerForKey_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "integerForKey:");
}

id objc_msgSend_integerValue(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "integerValue");
}

id objc_msgSend_integerValueInPair_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "integerValueInPair:");
}

id objc_msgSend_interactionEnabled(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "interactionEnabled");
}

id objc_msgSend_interactions(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "interactions");
}

id objc_msgSend_interactiveCanvasController(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "interactiveCanvasController");
}

id objc_msgSend_interactiveCanvasController_activateProgressForRep_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "interactiveCanvasController:activateProgressForRep:");
}

id objc_msgSend_interactiveCanvasController_didOverscrollBottom_state_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "interactiveCanvasController:didOverscrollBottom:state:");
}

id objc_msgSend_interactiveCanvasController_didOverscrollLeft_state_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "interactiveCanvasController:didOverscrollLeft:state:");
}

id objc_msgSend_interactiveCanvasController_didOverscrollRight_state_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "interactiveCanvasController:didOverscrollRight:state:");
}

id objc_msgSend_interactiveCanvasController_didOverscrollTop_state_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "interactiveCanvasController:didOverscrollTop:state:");
}

id objc_msgSend_interactiveCanvasController_didZoomToColumn_ofRep_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "interactiveCanvasController:didZoomToColumn:ofRep:");
}

id objc_msgSend_interactiveCanvasController_expandBoundsForScrollViewHitTesting_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "interactiveCanvasController:expandBoundsForScrollViewHitTesting:");
}

id objc_msgSend_interactiveCanvasController_maskLayerForBounds_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "interactiveCanvasController:maskLayerForBounds:");
}

id objc_msgSend_interactiveCanvasController_pointIsInLeftMargin_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "interactiveCanvasController:pointIsInLeftMargin:");
}

id objc_msgSend_interactiveCanvasController_pointIsInRightMargin_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "interactiveCanvasController:pointIsInRightMargin:");
}

id objc_msgSend_interactiveCanvasController_primaryTargetForGesture_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "interactiveCanvasController:primaryTargetForGesture:");
}

id objc_msgSend_interactiveCanvasController_progressDidChangeForRep_percent_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "interactiveCanvasController:progressDidChangeForRep:percent:");
}

id objc_msgSend_interactiveCanvasController_resetAttemptForRep_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "interactiveCanvasController:resetAttemptForRep:");
}

id objc_msgSend_interactiveCanvasController_scoreDidChangeForRep_score_total_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "interactiveCanvasController:scoreDidChangeForRep:score:total:");
}

id objc_msgSend_interactiveCanvasController_shouldBeginEditingTHWPRep_withGesture_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "interactiveCanvasController:shouldBeginEditingTHWPRep:withGesture:");
}

id objc_msgSend_interactiveCanvasController_shouldZoomToColumn_withFrame_tapPoint_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "interactiveCanvasController:shouldZoomToColumn:withFrame:tapPoint:");
}

id objc_msgSend_interactiveCanvasController_wantsToPresentContextMenuAtCanvasPoint_forAnnotationUUID_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "interactiveCanvasController:wantsToPresentContextMenuAtCanvasPoint:forAnnotationUUID:");
}

id objc_msgSend_interactiveCanvasControllerAllowPaging_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "interactiveCanvasControllerAllowPaging:");
}

id objc_msgSend_interactiveCanvasControllerFreeTransformDidEnd_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "interactiveCanvasControllerFreeTransformDidEnd:");
}

id objc_msgSend_interactiveCanvasControllerFreeTransformWillBegin_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "interactiveCanvasControllerFreeTransformWillBegin:");
}

id objc_msgSend_interactiveCanvasControllerPaddingForZoomToColumn_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "interactiveCanvasControllerPaddingForZoomToColumn:");
}

id objc_msgSend_interactiveCanvasControllerShouldAllowZoomToColumn_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "interactiveCanvasControllerShouldAllowZoomToColumn:");
}

id objc_msgSend_interactiveCanvasControllerShouldIgnoreOverscroll_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "interactiveCanvasControllerShouldIgnoreOverscroll:");
}

id objc_msgSend_interactiveCanvasControllerShouldPageLeftOnMarginTap_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "interactiveCanvasControllerShouldPageLeftOnMarginTap:");
}

id objc_msgSend_interactiveCanvasControllerShouldPageRightOnMarginTap_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "interactiveCanvasControllerShouldPageRightOnMarginTap:");
}

id objc_msgSend_interactiveCanvasControllerWasTapped_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "interactiveCanvasControllerWasTapped:");
}

id objc_msgSend_interactiveCanvasControllerWillShowNoteEditor_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "interactiveCanvasControllerWillShowNoteEditor:");
}

id objc_msgSend_interactiveImageCallout_convertContentPointToUnscaledOverlayPoint_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "interactiveImageCallout:convertContentPointToUnscaledOverlayPoint:");
}

id objc_msgSend_interactiveImageCalloutFontScale_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "interactiveImageCalloutFontScale:");
}

id objc_msgSend_interactiveImageCalloutIsScrollViewDragging_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "interactiveImageCalloutIsScrollViewDragging:");
}

id objc_msgSend_interactiveImageCalloutPressed_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "interactiveImageCalloutPressed:");
}

id objc_msgSend_interactiveImageSidebarAnimationDuration_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "interactiveImageSidebarAnimationDuration:");
}

id objc_msgSend_interactiveImageSidebarIsExpanded_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "interactiveImageSidebarIsExpanded:");
}

id objc_msgSend_interactiveImageSidebarSize_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "interactiveImageSidebarSize:");
}

id objc_msgSend_interactiveLayers(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "interactiveLayers");
}

id objc_msgSend_interfaceOrientation(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "interfaceOrientation");
}

id objc_msgSend_interfaceStyle(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "interfaceStyle");
}

id objc_msgSend_interiorWrapperLayer(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "interiorWrapperLayer");
}

id objc_msgSend_interleavedInfosWithInfos_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "interleavedInfosWithInfos:");
}

id objc_msgSend_intersectSet_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "intersectSet:");
}

id objc_msgSend_intrinsicContentSize(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "intrinsicContentSize");
}

id objc_msgSend_introMediaControllerIsActive(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "introMediaControllerIsActive");
}

id objc_msgSend_introMediaControllerIsOffscreen(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "introMediaControllerIsOffscreen");
}

id objc_msgSend_introMediaControllerMoviePlayerWillHideControls(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "introMediaControllerMoviePlayerWillHideControls");
}

id objc_msgSend_introMediaControllerMoviePlayerWillShowControls(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "introMediaControllerMoviePlayerWillShowControls");
}

id objc_msgSend_introMediaControllerShouldAdvancePast_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "introMediaControllerShouldAdvancePast:");
}

id objc_msgSend_introMediaIsVideo(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "introMediaIsVideo");
}

id objc_msgSend_introMediaUrl(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "introMediaUrl");
}

id objc_msgSend_introMediaViewController(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "introMediaViewController");
}

id objc_msgSend_introMediaViewControllerForChapterBrowserController_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "introMediaViewControllerForChapterBrowserController:");
}

id objc_msgSend_invalidate(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "invalidate");
}

id objc_msgSend_invalidateChildren(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "invalidateChildren");
}

id objc_msgSend_invalidateChildrenInPanel_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "invalidateChildrenInPanel:");
}

id objc_msgSend_invalidateExteriorWrap(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "invalidateExteriorWrap");
}

id objc_msgSend_invalidateForSizeChange(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "invalidateForSizeChange");
}

id objc_msgSend_invalidateFrame(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "invalidateFrame");
}

id objc_msgSend_invalidateIntrinsicContentSize(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "invalidateIntrinsicContentSize");
}

id objc_msgSend_invalidateKnobs(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "invalidateKnobs");
}

id objc_msgSend_invalidateLayers(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "invalidateLayers");
}

id objc_msgSend_invalidateLayoutInBackground_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "invalidateLayoutInBackground:");
}

id objc_msgSend_invalidateLayouts(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "invalidateLayouts");
}

id objc_msgSend_invalidateLayoutsAndFrames(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "invalidateLayoutsAndFrames");
}

id objc_msgSend_invalidateLineHints(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "invalidateLineHints");
}

id objc_msgSend_invalidateMaxAutoGrowWidth(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "invalidateMaxAutoGrowWidth");
}

id objc_msgSend_invalidatePaginationData(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "invalidatePaginationData");
}

id objc_msgSend_invalidatePaginationResults(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "invalidatePaginationResults");
}

id objc_msgSend_invalidateParentForWrap(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "invalidateParentForWrap");
}

id objc_msgSend_invalidatePosition(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "invalidatePosition");
}

id objc_msgSend_invalidatePresentationType_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "invalidatePresentationType:");
}

id objc_msgSend_invalidateQuestionLayouts(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "invalidateQuestionLayouts");
}

id objc_msgSend_invalidateReps(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "invalidateReps");
}

id objc_msgSend_invalidateRepsInBackground(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "invalidateRepsInBackground");
}

id objc_msgSend_invalidateSize(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "invalidateSize");
}

id objc_msgSend_invalidateTextLayout(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "invalidateTextLayout");
}

id objc_msgSend_invalidateTitleStyle(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "invalidateTitleStyle");
}

id objc_msgSend_invalidateVisibleBounds(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "invalidateVisibleBounds");
}

id objc_msgSend_inverseTransform(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "inverseTransform");
}

id objc_msgSend_invocationWithMethodSignature_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "invocationWithMethodSignature:");
}

id objc_msgSend_invokeWithTarget_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "invokeWithTarget:");
}

id objc_msgSend_is2UpForCanvasExitTransformDelegate_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "is2UpForCanvasExitTransformDelegate:");
}

id objc_msgSend_isAcceptableLeaf(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isAcceptableLeaf");
}

id objc_msgSend_isAccessibilityElement(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isAccessibilityElement");
}

id objc_msgSend_isAllNotes(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isAllNotes");
}

id objc_msgSend_isAlmostEqualToColor_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isAlmostEqualToColor:");
}

id objc_msgSend_isAncestorScrollViewDragging(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isAncestorScrollViewDragging");
}

id objc_msgSend_isAnchored(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isAnchored");
}

id objc_msgSend_isAnchoredToText(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isAnchoredToText");
}

id objc_msgSend_isAnimated(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isAnimated");
}

id objc_msgSend_isAnimating(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isAnimating");
}

id objc_msgSend_isAnnotationWriteEnabled(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isAnnotationWriteEnabled");
}

id objc_msgSend_isAssetOfflineWithAssetID_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isAssetOfflineWithAssetID:");
}

id objc_msgSend_isAtCollapseBorder_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isAtCollapseBorder:");
}

id objc_msgSend_isAtEnd(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isAtEnd");
}

id objc_msgSend_isAudioOnly(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isAudioOnly");
}

id objc_msgSend_isAudioOnlyWithPosterImage_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isAudioOnlyWithPosterImage:");
}

id objc_msgSend_isAutoNightModeEnabled(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isAutoNightModeEnabled");
}

id objc_msgSend_isAutomatic(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isAutomatic");
}

id objc_msgSend_isBackgroundSoundPlaying(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isBackgroundSoundPlaying");
}

id objc_msgSend_isBagRefetchRequiredForStatus_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isBagRefetchRequiredForStatus:");
}

id objc_msgSend_isBeingManipulated(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isBeingManipulated");
}

id objc_msgSend_isBeingPresented(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isBeingPresented");
}

id objc_msgSend_isBodyStorage_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isBodyStorage:");
}

id objc_msgSend_isBookEpub(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isBookEpub");
}

id objc_msgSend_isBookPortraitOnly(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isBookPortraitOnly");
}

id objc_msgSend_isBookmark(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isBookmark");
}

id objc_msgSend_isBookmarkApplicable(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isBookmarkApplicable");
}

id objc_msgSend_isBottomCard(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isBottomCard");
}

id objc_msgSend_isBottomCardAtPoint_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isBottomCardAtPoint:");
}

id objc_msgSend_isBuild(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isBuild");
}

id objc_msgSend_isBuildIn(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isBuildIn");
}

id objc_msgSend_isBuildOut(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isBuildOut");
}

id objc_msgSend_isCancelled(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isCancelled");
}

id objc_msgSend_isCanvasInteractive(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isCanvasInteractive");
}

id objc_msgSend_isCanvasPointOnHighlight_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isCanvasPointOnHighlight:");
}

id objc_msgSend_isChapterGuidLink(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isChapterGuidLink");
}

id objc_msgSend_isChapterLink(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isChapterLink");
}

id objc_msgSend_isCharForcesLineBreak_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isCharForcesLineBreak:");
}

id objc_msgSend_isClosing(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isClosing");
}

id objc_msgSend_isCollapsedForSidebarContentViewController_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isCollapsedForSidebarContentViewController:");
}

id objc_msgSend_isCompact(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isCompact");
}

id objc_msgSend_isCompactFlowPresentation(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isCompactFlowPresentation");
}

id objc_msgSend_isCompactFlowPresentationForPageController_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isCompactFlowPresentationForPageController:");
}

id objc_msgSend_isCompactHeight(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isCompactHeight");
}

id objc_msgSend_isCompactHeightForChapterBrowserController_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isCompactHeightForChapterBrowserController:");
}

id objc_msgSend_isCompactWidth(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isCompactWidth");
}

id objc_msgSend_isCompactWidthForChapterBrowserController_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isCompactWidthForChapterBrowserController:");
}

id objc_msgSend_isComplete(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isComplete");
}

id objc_msgSend_isCompleteBook(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isCompleteBook");
}

id objc_msgSend_isConnectedToInternet(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isConnectedToInternet");
}

id objc_msgSend_isContinuous(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isContinuous");
}

id objc_msgSend_isCorrupt(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isCorrupt");
}

id objc_msgSend_isCurrentPage(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isCurrentPage");
}

id objc_msgSend_isCurrentPageBookmarked(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isCurrentPageBookmarked");
}

id objc_msgSend_isCurrentPageBookmarkedForBookmarkMenuPopoverViewController_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isCurrentPageBookmarkedForBookmarkMenuPopoverViewController:");
}

id objc_msgSend_isCurrentlyCompact(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isCurrentlyCompact");
}

id objc_msgSend_isCurrentlyScrolling(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isCurrentlyScrolling");
}

id objc_msgSend_isCustom(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isCustom");
}

id objc_msgSend_isCustomPage(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isCustomPage");
}

id objc_msgSend_isDebuggingEnabled(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isDebuggingEnabled");
}

id objc_msgSend_isDecelerating(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isDecelerating");
}

id objc_msgSend_isDeletableFileAtPath_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isDeletableFileAtPath:");
}

id objc_msgSend_isDescendantOfView_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isDescendantOfView:");
}

id objc_msgSend_isDeviceSupported(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isDeviceSupported");
}

id objc_msgSend_isDirectory(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isDirectory");
}

id objc_msgSend_isDismissing(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isDismissing");
}

id objc_msgSend_isDocumentLoaded(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isDocumentLoaded");
}

id objc_msgSend_isDragging(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isDragging");
}

id objc_msgSend_isDraggingTopCard(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isDraggingTopCard");
}

id objc_msgSend_isDraggingViaGuidedPan(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isDraggingViaGuidedPan");
}

id objc_msgSend_isDrawable(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isDrawable");
}

id objc_msgSend_isDynamic(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isDynamic");
}

id objc_msgSend_isEPUB(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isEPUB");
}

id objc_msgSend_isEditing(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isEditing");
}

id objc_msgSend_isEmpty(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isEmpty");
}

id objc_msgSend_isEmptyCard(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isEmptyCard");
}

id objc_msgSend_isEnabled(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isEnabled");
}

id objc_msgSend_isEncodedResultForPageNumber_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isEncodedResultForPageNumber:");
}

id objc_msgSend_isEntryInline_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isEntryInline:");
}

id objc_msgSend_isEpub(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isEpub");
}

id objc_msgSend_isEqual_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isEqual:");
}

id objc_msgSend_isEqualIncludingSize_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isEqualIncludingSize:");
}

id objc_msgSend_isEqualToArray_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isEqualToArray:");
}

id objc_msgSend_isEqualToBookVersion_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isEqualToBookVersion:");
}

id objc_msgSend_isEqualToKnob_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isEqualToKnob:");
}

id objc_msgSend_isEqualToSet_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isEqualToSet:");
}

id objc_msgSend_isEqualToString_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isEqualToString:");
}

id objc_msgSend_isEqualToValue_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isEqualToValue:");
}

id objc_msgSend_isExpanded(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isExpanded");
}

id objc_msgSend_isExpandedOnly(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isExpandedOnly");
}

id objc_msgSend_isExpanding(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isExpanding");
}

id objc_msgSend_isFSOMovie(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isFSOMovie");
}

id objc_msgSend_isFault(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isFault");
}

id objc_msgSend_isFileURL(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isFileURL");
}

id objc_msgSend_isFinished(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isFinished");
}

id objc_msgSend_isFirstResponder(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isFirstResponder");
}

id objc_msgSend_isFlipped(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isFlipped");
}

id objc_msgSend_isFloatingAboveText(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isFloatingAboveText");
}

id objc_msgSend_isFlow(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isFlow");
}

id objc_msgSend_isFocusedOnColumn(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isFocusedOnColumn");
}

id objc_msgSend_isFocusedOnTarget(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isFocusedOnTarget");
}

id objc_msgSend_isFollowingCellHighlighted(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isFollowingCellHighlighted");
}

id objc_msgSend_isFollowingCellSelected(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isFollowingCellSelected");
}

id objc_msgSend_isFrame(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isFrame");
}

id objc_msgSend_isFrameRenderer(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isFrameRenderer");
}

id objc_msgSend_isFreeTransformInProgress(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isFreeTransformInProgress");
}

id objc_msgSend_isGlossaryPresenting(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isGlossaryPresenting");
}

id objc_msgSend_isGlossaryVisible(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isGlossaryVisible");
}

id objc_msgSend_isHTMLWrap(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isHTMLWrap");
}

id objc_msgSend_isHidden(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isHidden");
}

id objc_msgSend_isHighlighted(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isHighlighted");
}

id objc_msgSend_isHovering(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isHovering");
}

id objc_msgSend_isInFullscreen(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isInFullscreen");
}

id objc_msgSend_isInRoot(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isInRoot");
}

id objc_msgSend_isInUse(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isInUse");
}

id objc_msgSend_isInlineWithText(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isInlineWithText");
}

id objc_msgSend_isInsideWidget(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isInsideWidget");
}

id objc_msgSend_isInternalInstall(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isInternalInstall");
}

id objc_msgSend_isIntroMedia(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isIntroMedia");
}

id objc_msgSend_isKeyboardVisible(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isKeyboardVisible");
}

id objc_msgSend_isLaidOut(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isLaidOut");
}

id objc_msgSend_isLandscape(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isLandscape");
}

id objc_msgSend_isLastInSection_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isLastInSection:");
}

id objc_msgSend_isLastPageInChapterForChapterBrowserController_pageIndex_chapterIndex_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isLastPageInChapterForChapterBrowserController:pageIndex:chapterIndex:");
}

id objc_msgSend_isLayoutDisabled(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isLayoutDisabled");
}

id objc_msgSend_isLayoutOffscreen(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isLayoutOffscreen");
}

id objc_msgSend_isLegacy(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isLegacy");
}

id objc_msgSend_isLoaded(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isLoaded");
}

id objc_msgSend_isLoading(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isLoading");
}

id objc_msgSend_isLocked(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isLocked");
}

id objc_msgSend_isLooping(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isLooping");
}

id objc_msgSend_isMagicMove(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isMagicMove");
}

id objc_msgSend_isMainThread(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isMainThread");
}

id objc_msgSend_isManagedBook(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isManagedBook");
}

id objc_msgSend_isManagedBookFromURL_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isManagedBookFromURL:");
}

id objc_msgSend_isMaxXEdgeObscured(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isMaxXEdgeObscured");
}

id objc_msgSend_isMediaTypeSupportedInAll_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isMediaTypeSupportedInAll:");
}

id objc_msgSend_isMediaTypeSupportedInFlow_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isMediaTypeSupportedInFlow:");
}

id objc_msgSend_isMediaTypeSupportedInPaginated_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isMediaTypeSupportedInPaginated:");
}

id objc_msgSend_isMemberOfClass_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isMemberOfClass:");
}

id objc_msgSend_isMenuVisible(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isMenuVisible");
}

id objc_msgSend_isMetalEnabled(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isMetalEnabled");
}

id objc_msgSend_isMetalRenderer(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isMetalRenderer");
}

id objc_msgSend_isMetalTexture(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isMetalTexture");
}

id objc_msgSend_isMinibar(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isMinibar");
}

id objc_msgSend_isMotionBlurred(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isMotionBlurred");
}

id objc_msgSend_isMovie(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isMovie");
}

id objc_msgSend_isMoviePlaying(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isMoviePlaying");
}

id objc_msgSend_isMovingToParentViewController(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isMovingToParentViewController");
}

id objc_msgSend_isMuted(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isMuted");
}

id objc_msgSend_isNamespaceSupported_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isNamespaceSupported:");
}

id objc_msgSend_isNavigationBarHidden(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isNavigationBarHidden");
}

id objc_msgSend_isNight_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isNight:");
}

id objc_msgSend_isNotesFullscreenVisible(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isNotesFullscreenVisible");
}

id objc_msgSend_isOn(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isOn");
}

id objc_msgSend_isOpaque(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isOpaque");
}

id objc_msgSend_isOrdinary(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isOrdinary");
}

id objc_msgSend_isOrphan(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isOrphan");
}

id objc_msgSend_isOrphanedNotes(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isOrphanedNotes");
}

id objc_msgSend_isOverscrolling(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isOverscrolling");
}

id objc_msgSend_isPageBookmarked(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isPageBookmarked");
}

id objc_msgSend_isPageLink(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isPageLink");
}

id objc_msgSend_isPageLocationValid_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isPageLocationValid:");
}

id objc_msgSend_isPaginated(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isPaginated");
}

id objc_msgSend_isPagingEnabled(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isPagingEnabled");
}

id objc_msgSend_isPaused(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isPaused");
}

id objc_msgSend_isPlaceholder(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isPlaceholder");
}

id objc_msgSend_isPlaying(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isPlaying");
}

id objc_msgSend_isPointInsideTopCardFlipGlyph_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isPointInsideTopCardFlipGlyph:");
}

id objc_msgSend_isPopoverVisible(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isPopoverVisible");
}

id objc_msgSend_isPreorderBook(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isPreorderBook");
}

id objc_msgSend_isPressableAtPoint(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isPressableAtPoint");
}

id objc_msgSend_isPressed(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isPressed");
}

id objc_msgSend_isPreview(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isPreview");
}

id objc_msgSend_isQuickSpeakEnabled(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isQuickSpeakEnabled");
}

id objc_msgSend_isRange(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isRange");
}

id objc_msgSend_isRawAttribute_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isRawAttribute:");
}

id objc_msgSend_isReflowablePresentation(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isReflowablePresentation");
}

id objc_msgSend_isRelative(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isRelative");
}

id objc_msgSend_isRevealingTOC(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isRevealingTOC");
}

id objc_msgSend_isRotating(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isRotating");
}

id objc_msgSend_isSample(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isSample");
}

id objc_msgSend_isSampleAtURL_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isSampleAtURL:");
}

id objc_msgSend_isSampleFromPlistEntry_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isSampleFromPlistEntry:");
}

id objc_msgSend_isScroll(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isScroll");
}

id objc_msgSend_isScrollEnabled(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isScrollEnabled");
}

id objc_msgSend_isSearching(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isSearching");
}

id objc_msgSend_isSectionOpen_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isSectionOpen:");
}

id objc_msgSend_isSelected(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isSelected");
}

id objc_msgSend_isSettledOnFirstOrLastPage(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isSettledOnFirstOrLastPage");
}

id objc_msgSend_isShowingEmptyStudyCard(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isShowingEmptyStudyCard");
}

id objc_msgSend_isSinglePageInChapterForChapterBrowserController_chapterIndex_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isSinglePageInChapterForChapterBrowserController:chapterIndex:");
}

id objc_msgSend_isStopped(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isStopped");
}

id objc_msgSend_isStoreBook(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isStoreBook");
}

id objc_msgSend_isStrictlyNewerThanBookVersion_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isStrictlyNewerThanBookVersion:");
}

id objc_msgSend_isStudyViewControllerVisible(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isStudyViewControllerVisible");
}

id objc_msgSend_isStylus(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isStylus");
}

id objc_msgSend_isSubclassOfClass_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isSubclassOfClass:");
}

id objc_msgSend_isSuccessful(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isSuccessful");
}

id objc_msgSend_isTOC(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isTOC");
}

id objc_msgSend_isTOCButtonApplicable(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isTOCButtonApplicable");
}

id objc_msgSend_isTOCVisible(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isTOCVisible");
}

id objc_msgSend_isTextResult(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isTextResult");
}

id objc_msgSend_isTitle(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isTitle");
}

id objc_msgSend_isToolbarHidden(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isToolbarHidden");
}

id objc_msgSend_isTopCard(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isTopCard");
}

id objc_msgSend_isTopCardAtPoint_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isTopCardAtPoint:");
}

id objc_msgSend_isTracking(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isTracking");
}

id objc_msgSend_isTrackingAssetID_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isTrackingAssetID:");
}

id objc_msgSend_isTransition(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isTransition");
}

id objc_msgSend_isTransitioning(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isTransitioning");
}

id objc_msgSend_isTransitioningToStop(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isTransitioningToStop");
}

id objc_msgSend_isTwoUp(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isTwoUp");
}

id objc_msgSend_isTwoUpForChapterBrowserController_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isTwoUpForChapterBrowserController:");
}

id objc_msgSend_isTwoUpForNavigationUnitForPageController_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isTwoUpForNavigationUnitForPageController:");
}

id objc_msgSend_isTwoUpForSectionController_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isTwoUpForSectionController:");
}

id objc_msgSend_isUnderline(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isUnderline");
}

id objc_msgSend_isUnfilteredContentAvailable(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isUnfilteredContentAvailable");
}

id objc_msgSend_isUnversioned(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isUnversioned");
}

id objc_msgSend_isUserInteractionEnabled(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isUserInteractionEnabled");
}

id objc_msgSend_isValid(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isValid");
}

id objc_msgSend_isViewLoaded(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isViewLoaded");
}

id objc_msgSend_isVisibleOnCanvas(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isVisibleOnCanvas");
}

id objc_msgSend_isWarmingUp(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isWarmingUp");
}

id objc_msgSend_isWebContentLoaded(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isWebContentLoaded");
}

id objc_msgSend_isWidgetEntry_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isWidgetEntry:");
}

id objc_msgSend_isWidgetExpandedOnly_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isWidgetExpandedOnly:");
}

id objc_msgSend_isZipArchiveAtPath_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isZipArchiveAtPath:");
}

id objc_msgSend_isZoomedOut(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isZoomedOut");
}

id objc_msgSend_isbn(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "isbn");
}

id objc_msgSend_itemProviderWithAnnotation_propertyProvider_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "itemProviderWithAnnotation:propertyProvider:");
}

id objc_msgSend_items(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "items");
}

id objc_msgSend_javascriptHandler(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "javascriptHandler");
}

id objc_msgSend_jumpToPageLocation_touchHistory_minor_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "jumpToPageLocation:touchHistory:minor:");
}

id objc_msgSend_justUpdatedPresentationType(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "justUpdatedPresentationType");
}

id objc_msgSend_key(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "key");
}

id objc_msgSend_keyColor(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "keyColor");
}

id objc_msgSend_keyCommandWithInput_modifierFlags_action_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "keyCommandWithInput:modifierFlags:action:");
}

id objc_msgSend_keyEnumerator(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "keyEnumerator");
}

id objc_msgSend_keyPath(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "keyPath");
}

id objc_msgSend_keyWindow(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "keyWindow");
}

id objc_msgSend_keyXmlAttributeName(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "keyXmlAttributeName");
}

id objc_msgSend_keyboardFrame(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "keyboardFrame");
}

id objc_msgSend_keysOfEntriesPassingTest_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "keysOfEntriesPassingTest:");
}

id objc_msgSend_kiUanAfQBD5qIUraolUj(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "kiUanAfQBD5qIUraolUj");
}

id objc_msgSend_killColumns(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "killColumns");
}

id objc_msgSend_kind(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "kind");
}

id objc_msgSend_knob(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "knob");
}

id objc_msgSend_knobDragGestureRecognizer(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "knobDragGestureRecognizer");
}

id objc_msgSend_knobForTag_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "knobForTag:");
}

id objc_msgSend_knobTag(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "knobTag");
}

id objc_msgSend_kpfDocument(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "kpfDocument");
}

id objc_msgSend_kpfPlayer(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "kpfPlayer");
}

id objc_msgSend_kpfPlayerControllerDelegate(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "kpfPlayerControllerDelegate");
}

id objc_msgSend_label(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "label");
}

id objc_msgSend_labelBoundsOfLineFragmentAtIndex_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "labelBoundsOfLineFragmentAtIndex:");
}

id objc_msgSend_labelClass(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "labelClass");
}

id objc_msgSend_labelFontForRow_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "labelFontForRow:");
}

id objc_msgSend_labelFrame(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "labelFrame");
}

id objc_msgSend_labelIndentWithState_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "labelIndentWithState:");
}

id objc_msgSend_labelWithHighlights(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "labelWithHighlights");
}

id objc_msgSend_landscapeEntries(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "landscapeEntries");
}

id objc_msgSend_landscapePredicate(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "landscapePredicate");
}

id objc_msgSend_language(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "language");
}

id objc_msgSend_languageForString_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "languageForString:");
}

id objc_msgSend_largerTextConstraints(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "largerTextConstraints");
}

id objc_msgSend_largerThumbs(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "largerThumbs");
}

id objc_msgSend_lastAbsolutePageIndex(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "lastAbsolutePageIndex");
}

id objc_msgSend_lastAnalyticsDeviceOrientationReported(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "lastAnalyticsDeviceOrientationReported");
}

id objc_msgSend_lastChildHint(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "lastChildHint");
}

id objc_msgSend_lastColumn(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "lastColumn");
}

id objc_msgSend_lastDragCenter(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "lastDragCenter");
}

id objc_msgSend_lastHint(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "lastHint");
}

id objc_msgSend_lastHintForBodyIndex_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "lastHintForBodyIndex:");
}

id objc_msgSend_lastIndex(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "lastIndex");
}

id objc_msgSend_lastLayoutBoundsSize(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "lastLayoutBoundsSize");
}

id objc_msgSend_lastLayoutSize(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "lastLayoutSize");
}

id objc_msgSend_lastObject(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "lastObject");
}

id objc_msgSend_lastPage(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "lastPage");
}

id objc_msgSend_lastPageInChapterString(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "lastPageInChapterString");
}

id objc_msgSend_lastPageNumberUpdate(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "lastPageNumberUpdate");
}

id objc_msgSend_lastPathComponent(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "lastPathComponent");
}

id objc_msgSend_lastPositionInRoot(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "lastPositionInRoot");
}

id objc_msgSend_lastScrollOffset(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "lastScrollOffset");
}

id objc_msgSend_lastStorageAnchor(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "lastStorageAnchor");
}

id objc_msgSend_lastTarget(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "lastTarget");
}

id objc_msgSend_lastVelocity(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "lastVelocity");
}

id objc_msgSend_layer(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "layer");
}

id objc_msgSend_layerAndSubviewHostForPageInfo_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "layerAndSubviewHostForPageInfo:");
}

id objc_msgSend_layerDragging_convertNaturalPointToBounds_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "layerDragging:convertNaturalPointToBounds:");
}

id objc_msgSend_layerDragging_naturalPositionWithGesture_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "layerDragging:naturalPositionWithGesture:");
}

id objc_msgSend_layerDraggingDidMove_withPosition_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "layerDraggingDidMove:withPosition:");
}

id objc_msgSend_layerForFloatingHeaderAtIndex_forController_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "layerForFloatingHeaderAtIndex:forController:");
}

id objc_msgSend_layerForRep_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "layerForRep:");
}

id objc_msgSend_layerFrameInScaledCanvas(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "layerFrameInScaledCanvas");
}

id objc_msgSend_layerFrameInScaledCanvasRelativeToParent(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "layerFrameInScaledCanvasRelativeToParent");
}

id objc_msgSend_layerHost(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "layerHost");
}

id objc_msgSend_layerHostingView(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "layerHostingView");
}

id objc_msgSend_layerSaveRestore(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "layerSaveRestore");
}

id objc_msgSend_layerSize(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "layerSize");
}

id objc_msgSend_layers(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "layers");
}

id objc_msgSend_layout(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "layout");
}

id objc_msgSend_layoutAnchorForContentOffset_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "layoutAnchorForContentOffset:");
}

id objc_msgSend_layoutClass(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "layoutClass");
}

id objc_msgSend_layoutContentAtLayoutAnchor_padAbove_padBelow_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "layoutContentAtLayoutAnchor:padAbove:padBelow:");
}

id objc_msgSend_layoutContentAtLayoutAnchor_padAbove_padBelow_layoutController_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "layoutContentAtLayoutAnchor:padAbove:padBelow:layoutController:");
}

id objc_msgSend_layoutContentFromBottom_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "layoutContentFromBottom:");
}

id objc_msgSend_layoutContentFromBottom_layoutController_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "layoutContentFromBottom:layoutController:");
}

id objc_msgSend_layoutContentFromTop_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "layoutContentFromTop:");
}

id objc_msgSend_layoutContext(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "layoutContext");
}

id objc_msgSend_layoutController(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "layoutController");
}

id objc_msgSend_layoutControllerForPageController_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "layoutControllerForPageController:");
}

id objc_msgSend_layoutForCallout_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "layoutForCallout:");
}

id objc_msgSend_layoutForChoiceIndex_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "layoutForChoiceIndex:");
}

id objc_msgSend_layoutForInfo_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "layoutForInfo:");
}

id objc_msgSend_layoutForInfo_childOfLayout_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "layoutForInfo:childOfLayout:");
}

id objc_msgSend_layoutForQuestion_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "layoutForQuestion:");
}

id objc_msgSend_layoutForTargetIndex_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "layoutForTargetIndex:");
}

id objc_msgSend_layoutFrame(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "layoutFrame");
}

id objc_msgSend_layoutGeometryFittingLayoutGeometry_inFrame_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "layoutGeometryFittingLayoutGeometry:inFrame:");
}

id objc_msgSend_layoutGeometryFromInfo(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "layoutGeometryFromInfo");
}

id objc_msgSend_layoutHeaders(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "layoutHeaders");
}

id objc_msgSend_layoutIfNeeded(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "layoutIfNeeded");
}

id objc_msgSend_layoutIntoTarget_withLayoutState_outSync_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "layoutIntoTarget:withLayoutState:outSync:");
}

id objc_msgSend_layoutIntoTarget_withRange_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "layoutIntoTarget:withRange:");
}

id objc_msgSend_layoutInvalidated(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "layoutInvalidated");
}

id objc_msgSend_layoutMarginsGuide(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "layoutMarginsGuide");
}

id objc_msgSend_layoutMode(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "layoutMode");
}

id objc_msgSend_layoutOrientation(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "layoutOrientation");
}

id objc_msgSend_layoutPanel(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "layoutPanel");
}

id objc_msgSend_layoutRect(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "layoutRect");
}

id objc_msgSend_layoutRequirementsProvider(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "layoutRequirementsProvider");
}

id objc_msgSend_layoutScrollView(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "layoutScrollView");
}

id objc_msgSend_layoutScrubberCallout(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "layoutScrubberCallout");
}

id objc_msgSend_layoutStateForLayoutTarget_afterHint_childHint_topicNumbers_textIsVertical_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "layoutStateForLayoutTarget:afterHint:childHint:topicNumbers:textIsVertical:");
}

id objc_msgSend_layoutStyleProvider(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "layoutStyleProvider");
}

id objc_msgSend_layoutSubviews(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "layoutSubviews");
}

id objc_msgSend_layoutSubviewsWithPill(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "layoutSubviewsWithPill");
}

id objc_msgSend_layoutSubviewsWithoutPill(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "layoutSubviewsWithoutPill");
}

id objc_msgSend_layoutTextStorage_minSize_maxSize_anchor_pageNumber_pageCount_flags_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "layoutTextStorage:minSize:maxSize:anchor:pageNumber:pageCount:flags:");
}

id objc_msgSend_layoutThroughRelativePageIndex_layoutController_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "layoutThroughRelativePageIndex:layoutController:");
}

id objc_msgSend_layoutTransportUI(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "layoutTransportUI");
}

id objc_msgSend_layoutWithLayoutManager_range_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "layoutWithLayoutManager:range:");
}

id objc_msgSend_layouts(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "layouts");
}

id objc_msgSend_layoutsForModel_withSelection_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "layoutsForModel:withSelection:");
}

id objc_msgSend_leadingAnchor(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "leadingAnchor");
}

id objc_msgSend_leftAnchor(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "leftAnchor");
}

id objc_msgSend_leftMargin(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "leftMargin");
}

id objc_msgSend_leftOverscrollView(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "leftOverscrollView");
}

id objc_msgSend_leftPadding(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "leftPadding");
}

id objc_msgSend_leftToolbarItems_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "leftToolbarItems:");
}

id objc_msgSend_leftView(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "leftView");
}

id objc_msgSend_legacyBookmarkIDForInfo_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "legacyBookmarkIDForInfo:");
}

id objc_msgSend_length(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "length");
}

id objc_msgSend_letterCharacterSet(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "letterCharacterSet");
}

id objc_msgSend_libraryButtonItemForViewController_selector_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "libraryButtonItemForViewController:selector:");
}

id objc_msgSend_libraryMgr(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "libraryMgr");
}

id objc_msgSend_lifeSpan(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "lifeSpan");
}

id objc_msgSend_lifeSpanAttribute(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "lifeSpanAttribute");
}

id objc_msgSend_lifeSpanDelay(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "lifeSpanDelay");
}

id objc_msgSend_lifeSpanMinDuration(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "lifeSpanMinDuration");
}

id objc_msgSend_lifeSpanRandomness(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "lifeSpanRandomness");
}

id objc_msgSend_light(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "light");
}

id objc_msgSend_lightGrayColor(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "lightGrayColor");
}

id objc_msgSend_likelyHighlightGestureRecognizer(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "likelyHighlightGestureRecognizer");
}

id objc_msgSend_line(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "line");
}

id objc_msgSend_lineBreakMode(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "lineBreakMode");
}

id objc_msgSend_lineBreaksForIdref_fromIndexSet_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "lineBreaksForIdref:fromIndexSet:");
}

id objc_msgSend_lineEndWithIdentifier_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "lineEndWithIdentifier:");
}

id objc_msgSend_lineEndWithPath_endPoint_isFilled_identifier_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "lineEndWithPath:endPoint:isFilled:identifier:");
}

id objc_msgSend_lineFragmentAtIndex_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "lineFragmentAtIndex:");
}

id objc_msgSend_lineHeight(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "lineHeight");
}

id objc_msgSend_lineHints(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "lineHints");
}

id objc_msgSend_lineHintsForPropertySet_textStorage_contentState_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "lineHintsForPropertySet:textStorage:contentState:");
}

id objc_msgSend_lineIndexForCharIndex_eol_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "lineIndexForCharIndex:eol:");
}

id objc_msgSend_lineMetrics(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "lineMetrics");
}

id objc_msgSend_lineMetricsAtCharIndex_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "lineMetricsAtCharIndex:");
}

id objc_msgSend_lineMetricsAtCharIndex_allowEndOfLine_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "lineMetricsAtCharIndex:allowEndOfLine:");
}

id objc_msgSend_lineMetricsAtPoint_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "lineMetricsAtPoint:");
}

id objc_msgSend_lineSelectionsForSelection_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "lineSelectionsForSelection:");
}

id objc_msgSend_lineShadow(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "lineShadow");
}

id objc_msgSend_lineSpacing(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "lineSpacing");
}

id objc_msgSend_lineToPoint_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "lineToPoint:");
}

id objc_msgSend_lineWithLineMetrics_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "lineWithLineMetrics:");
}

id objc_msgSend_linearGradientWithGradientStops_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "linearGradientWithGradientStops:");
}

id objc_msgSend_lines(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "lines");
}

id objc_msgSend_link(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "link");
}

id objc_msgSend_linkField(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "linkField");
}

id objc_msgSend_linkForHyperlinkField_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "linkForHyperlinkField:");
}

id objc_msgSend_linkForNavigationUnitIndex_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "linkForNavigationUnitIndex:");
}

id objc_msgSend_linkForURL_inContentNode_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "linkForURL:inContentNode:");
}

id objc_msgSend_linkForURL_inStorage_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "linkForURL:inStorage:");
}

id objc_msgSend_linkPulseActivationTime(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "linkPulseActivationTime");
}

id objc_msgSend_linkPulseSearchReferences(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "linkPulseSearchReferences");
}

id objc_msgSend_linksInfo(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "linksInfo");
}

id objc_msgSend_listIndentForLevel_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "listIndentForLevel:");
}

id objc_msgSend_listLevel(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "listLevel");
}

id objc_msgSend_listNumberTypeForString_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "listNumberTypeForString:");
}

id objc_msgSend_listStart(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "listStart");
}

id objc_msgSend_listStyle(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "listStyle");
}

id objc_msgSend_listTypeFromCssListStyleType_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "listTypeFromCssListStyleType:");
}

id objc_msgSend_loadApplicationLibraryWithDevice_library_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "loadApplicationLibraryWithDevice:library:");
}

id objc_msgSend_loadCompletions(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "loadCompletions");
}

id objc_msgSend_loadContentNode(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "loadContentNode");
}

id objc_msgSend_loadCoreData(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "loadCoreData");
}

id objc_msgSend_loadDelegate(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "loadDelegate");
}

id objc_msgSend_loadEntry_withLayoutStyleProvider_onComplete_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "loadEntry:withLayoutStyleProvider:onComplete:");
}

id objc_msgSend_loadEpubContentNode(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "loadEpubContentNode");
}

id objc_msgSend_loadEquationFontsIfNeeded(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "loadEquationFontsIfNeeded");
}

id objc_msgSend_loadExtraAccessibilitySupport(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "loadExtraAccessibilitySupport");
}

id objc_msgSend_loadFromArchiveWithAssetID_bookVersionString_modificationDate_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "loadFromArchiveWithAssetID:bookVersionString:modificationDate:");
}

id objc_msgSend_loadHintsFrom_contentState_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "loadHintsFrom:contentState:");
}

id objc_msgSend_loadIndex(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "loadIndex");
}

id objc_msgSend_loadInfoOnComplete_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "loadInfoOnComplete:");
}

id objc_msgSend_loadMarginsForEntry_entryMediaState_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "loadMarginsForEntry:entryMediaState:");
}

id objc_msgSend_loadMetadata(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "loadMetadata");
}

id objc_msgSend_loadNavigationPageContentNode(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "loadNavigationPageContentNode");
}

id objc_msgSend_loadNibNamed_owner_options_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "loadNibNamed:owner:options:");
}

id objc_msgSend_loadPaginationCache(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "loadPaginationCache");
}

id objc_msgSend_loadPluginIfNeeded(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "loadPluginIfNeeded");
}

id objc_msgSend_loadPreviewOnQueue_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "loadPreviewOnQueue:");
}

id objc_msgSend_loadPropertiesIfNecessary(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "loadPropertiesIfNecessary");
}

id objc_msgSend_loadQueue(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "loadQueue");
}

id objc_msgSend_loadRequest_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "loadRequest:");
}

id objc_msgSend_loadStudyViewControllerForAnimation_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "loadStudyViewControllerForAnimation:");
}

id objc_msgSend_loadURL_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "loadURL:");
}

id objc_msgSend_loadValuesAsynchronouslyForKeys_completionHandler_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "loadValuesAsynchronouslyForKeys:completionHandler:");
}

id objc_msgSend_loadViewIfNeeded(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "loadViewIfNeeded");
}

id objc_msgSend_loaded(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "loaded");
}

id objc_msgSend_loadedDocumentSelectorsForEntry_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "loadedDocumentSelectorsForEntry:");
}

id objc_msgSend_loading(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "loading");
}

id objc_msgSend_loadingQueue(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "loadingQueue");
}

id objc_msgSend_loanedSceneController(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "loanedSceneController");
}

id objc_msgSend_localizedCaseInsensitiveCompare_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "localizedCaseInsensitiveCompare:");
}

id objc_msgSend_localizedDescription(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "localizedDescription");
}

id objc_msgSend_localizedMenuString_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "localizedMenuString:");
}

id objc_msgSend_localizedStringForKey_value_table_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "localizedStringForKey:value:table:");
}

id objc_msgSend_localizedStringFromNumber_numberStyle_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "localizedStringFromNumber:numberStyle:");
}

id objc_msgSend_localizedStringWithFormat_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "localizedStringWithFormat:");
}

id objc_msgSend_locateAnnotationText_leftContext_rightContext_contentNodeID_storageID_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "locateAnnotationText:leftContext:rightContext:contentNodeID:storageID:");
}

id objc_msgSend_location1(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "location1");
}

id objc_msgSend_location2(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "location2");
}

id objc_msgSend_locationInView_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "locationInView:");
}

id objc_msgSend_lock(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "lock");
}

id objc_msgSend_logError_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "logError:");
}

id objc_msgSend_logEvent_forAsset_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "logEvent:forAsset:");
}

id objc_msgSend_logEventWithBlock_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "logEventWithBlock:");
}

id objc_msgSend_longLongValue(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "longLongValue");
}

id objc_msgSend_longPressGR(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "longPressGR");
}

id objc_msgSend_lookupController(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "lookupController");
}

id objc_msgSend_lookupIDFrom_inManifest_ns_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "lookupIDFrom:inManifest:ns:");
}

id objc_msgSend_loopOption(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "loopOption");
}

id objc_msgSend_lowercaseString(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "lowercaseString");
}

id objc_msgSend_luminance(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "luminance");
}

id objc_msgSend_magicMoveMatches(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "magicMoveMatches");
}

id objc_msgSend_magnifierBackgroundColor(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "magnifierBackgroundColor");
}

id objc_msgSend_mainBundle(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "mainBundle");
}

id objc_msgSend_mainQueue(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "mainQueue");
}

id objc_msgSend_mainRunLoop(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "mainRunLoop");
}

id objc_msgSend_mainScreen(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "mainScreen");
}

id objc_msgSend_mainThread(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "mainThread");
}

id objc_msgSend_mainView(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "mainView");
}

id objc_msgSend_maintainScrollOffsetInFrameChangeForScrollableCanvasController_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "maintainScrollOffsetInFrameChangeForScrollableCanvasController:");
}

id objc_msgSend_majorSnippet(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "majorSnippet");
}

id objc_msgSend_majorSnippetForAbsolutePageIndex_withDocumentRoot_forPresentationType_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "majorSnippetForAbsolutePageIndex:withDocumentRoot:forPresentationType:");
}

id objc_msgSend_majorVersion(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "majorVersion");
}

id objc_msgSend_makeAVAsset(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "makeAVAsset");
}

id objc_msgSend_makeKeyWindow(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "makeKeyWindow");
}

id objc_msgSend_makeLayoutModeStateWithStackEntry_parentEntryMediaState_documentOrientationState_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "makeLayoutModeStateWithStackEntry:parentEntryMediaState:documentOrientationState:");
}

id objc_msgSend_makeLayoutModeStateWithStackEntry_parentEntryOrientationState_documentOrientationState_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "makeLayoutModeStateWithStackEntry:parentEntryOrientationState:documentOrientationState:");
}

id objc_msgSend_makeObjectsPerformSelector_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "makeObjectsPerformSelector:");
}

id objc_msgSend_makeObjectsPerformSelector_withObject_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "makeObjectsPerformSelector:withObject:");
}

id objc_msgSend_makeSectionClosed_withSender_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "makeSectionClosed:withSender:");
}

id objc_msgSend_makeSectionOpen_withSender_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "makeSectionOpen:withSender:");
}

id objc_msgSend_managedObjectContext(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "managedObjectContext");
}

id objc_msgSend_managedObjectContextDidSaveObserver(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "managedObjectContextDidSaveObserver");
}

id objc_msgSend_managedObjectContextSaveObserver(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "managedObjectContextSaveObserver");
}

id objc_msgSend_managedObjectModel(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "managedObjectModel");
}

id objc_msgSend_map_stackEntry_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "map:stackEntry:");
}

id objc_msgSend_mapAffineTransformWithState_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "mapAffineTransformWithState:");
}

id objc_msgSend_mapAlignment_to_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "mapAlignment:to:");
}

id objc_msgSend_mapAnswer_toChoice_questionType_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "mapAnswer:toChoice:questionType:");
}

id objc_msgSend_mapAnswerAttributes_stackEntry_result_orientationState_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "mapAnswerAttributes:stackEntry:result:orientationState:");
}

id objc_msgSend_mapBackgroundShapeStyleWithStackEntry_readerState_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "mapBackgroundShapeStyleWithStackEntry:readerState:");
}

id objc_msgSend_mapBorders_to_stackEntry_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "mapBorders:to:stackEntry:");
}

id objc_msgSend_mapBoundsWithState_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "mapBoundsWithState:");
}

id objc_msgSend_mapBulletWithOrientationState_readerState_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "mapBulletWithOrientationState:readerState:");
}

id objc_msgSend_mapCharacterPropertiesFrom_to_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "mapCharacterPropertiesFrom:to:");
}

id objc_msgSend_mapContentPaddingFromStyleProperties_contentState_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "mapContentPaddingFromStyleProperties:contentState:");
}

id objc_msgSend_mapContentRefPlacehment_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "mapContentRefPlacehment:");
}

id objc_msgSend_mapCssBackgroundFromStyleProperties_contentState_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "mapCssBackgroundFromStyleProperties:contentState:");
}

id objc_msgSend_mapCurrentBreakStateForOrientation_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "mapCurrentBreakStateForOrientation:");
}

id objc_msgSend_mapDefaultBackgroundShapeWithPlacement_readerState_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "mapDefaultBackgroundShapeWithPlacement:readerState:");
}

id objc_msgSend_mapElementPropertiesTo_stackEntry_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "mapElementPropertiesTo:stackEntry:");
}

id objc_msgSend_mapEndElementUsingCurrentLayoutWithState_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "mapEndElementUsingCurrentLayoutWithState:");
}

id objc_msgSend_mapEndElementWithState_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "mapEndElementWithState:");
}

id objc_msgSend_mapFillColor_to_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "mapFillColor:to:");
}

id objc_msgSend_mapFillFromStyleProperties_contentState_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "mapFillFromStyleProperties:contentState:");
}

id objc_msgSend_mapFontName_to_index_stackEntry_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "mapFontName:to:index:stackEntry:");
}

id objc_msgSend_mapFontProperties_to_stackEntry_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "mapFontProperties:to:stackEntry:");
}

id objc_msgSend_mapFontShorthand_to_parentFontSize_stackEntry_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "mapFontShorthand:to:parentFontSize:stackEntry:");
}

id objc_msgSend_mapFontSize_to_parentFontSize_index_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "mapFontSize:to:parentFontSize:index:");
}

id objc_msgSend_mapFontStyle_to_index_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "mapFontStyle:to:index:");
}

id objc_msgSend_mapFontVariant_to_index_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "mapFontVariant:to:index:");
}

id objc_msgSend_mapFontWeight_to_index_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "mapFontWeight:to:index:");
}

id objc_msgSend_mapHrefForStackEntry_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "mapHrefForStackEntry:");
}

id objc_msgSend_mapHyphenate_to_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "mapHyphenate:to:");
}

id objc_msgSend_mapLayoutStyleFromPropertySet_toPropertyMap_readerState_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "mapLayoutStyleFromPropertySet:toPropertyMap:readerState:");
}

id objc_msgSend_mapLineSpacing_to_stackEntry_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "mapLineSpacing:to:stackEntry:");
}

id objc_msgSend_mapMarginStyleProperty_propertyNames_left_top_right_bottom_parentFontSize_percentageBasis_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "mapMarginStyleProperty:propertyNames:left:top:right:bottom:parentFontSize:percentageBasis:");
}

id objc_msgSend_mapMarginsForEntry_to_inList_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "mapMarginsForEntry:to:inList:");
}

id objc_msgSend_mapMarkerProperty_fromStyleProperties_contentState_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "mapMarkerProperty:fromStyleProperties:contentState:");
}

id objc_msgSend_mapNonChildResults_withState_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "mapNonChildResults:withState:");
}

id objc_msgSend_mapNonListStyleWithOrientationState_readerState_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "mapNonListStyleWithOrientationState:readerState:");
}

id objc_msgSend_mapOpacityFromStyleProperties_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "mapOpacityFromStyleProperties:");
}

id objc_msgSend_mapPageBreakBefore_to_stackEntry_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "mapPageBreakBefore:to:stackEntry:");
}

id objc_msgSend_mapParagraphPropertiesFrom_to_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "mapParagraphPropertiesFrom:to:");
}

id objc_msgSend_mapPlacementModeWithState_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "mapPlacementModeWithState:");
}

id objc_msgSend_mapProperties_to_stackEntry_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "mapProperties:to:stackEntry:");
}

id objc_msgSend_mapPropertySet_to_readerState_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "mapPropertySet:to:readerState:");
}

id objc_msgSend_mapRadiusFromStyleProperties_contentState_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "mapRadiusFromStyleProperties:contentState:");
}

id objc_msgSend_mapReferenceAnchorWithStackEntry_contentState_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "mapReferenceAnchorWithStackEntry:contentState:");
}

id objc_msgSend_mapReflectionFromStyleProperties_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "mapReflectionFromStyleProperties:");
}

id objc_msgSend_mapShadowFromStyleProperties_contentState_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "mapShadowFromStyleProperties:contentState:");
}

id objc_msgSend_mapStartElementWithState_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "mapStartElementWithState:");
}

id objc_msgSend_mapStartIndexWithStackEntry_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "mapStartIndexWithStackEntry:");
}

id objc_msgSend_mapStroke_paragraphBorderType_stackEntry_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "mapStroke:paragraphBorderType:stackEntry:");
}

id objc_msgSend_mapStrokeColor_withCandidatePropertiesName_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "mapStrokeColor:withCandidatePropertiesName:");
}

id objc_msgSend_mapStrokeFromStyleProperties_contentState_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "mapStrokeFromStyleProperties:contentState:");
}

id objc_msgSend_mapStrokePattern_withCandidatePropertiesName_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "mapStrokePattern:withCandidatePropertiesName:");
}

id objc_msgSend_mapStrokeProperty_propertySet_readerState_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "mapStrokeProperty:propertySet:readerState:");
}

id objc_msgSend_mapStrokeWidth_withCandidatePropertiesName_stackEntry_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "mapStrokeWidth:withCandidatePropertiesName:stackEntry:");
}

id objc_msgSend_mapTabInterval_to_stackEntry_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "mapTabInterval:to:stackEntry:");
}

id objc_msgSend_mapTabStops_to_stackEntry_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "mapTabStops:to:stackEntry:");
}

id objc_msgSend_mapTableWithKeyOptions_valueOptions_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "mapTableWithKeyOptions:valueOptions:");
}

id objc_msgSend_mapTextIndent_to_stackEntry_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "mapTextIndent:to:stackEntry:");
}

id objc_msgSend_mapTextShadowShorthand_to_parentFontSize_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "mapTextShadowShorthand:to:parentFontSize:");
}

id objc_msgSend_mapVerticalAlignmentWithPropertySet_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "mapVerticalAlignmentWithPropertySet:");
}

id objc_msgSend_mappingClass(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "mappingClass");
}

id objc_msgSend_margin(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "margin");
}

id objc_msgSend_marginAboveNote(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "marginAboveNote");
}

id objc_msgSend_marginAboveSeparator(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "marginAboveSeparator");
}

id objc_msgSend_marginAfter(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "marginAfter");
}

id objc_msgSend_marginBefore(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "marginBefore");
}

id objc_msgSend_marginNote(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "marginNote");
}

id objc_msgSend_marginNoteAtPoint_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "marginNoteAtPoint:");
}

id objc_msgSend_marginNoteForAnnotation_inRep_highlightBounds_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "marginNoteForAnnotation:inRep:highlightBounds:");
}

id objc_msgSend_marginNoteSideForPageRelativeRect_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "marginNoteSideForPageRelativeRect:");
}

id objc_msgSend_marginNotesController(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "marginNotesController");
}

id objc_msgSend_marginNotesGestureRecognizer(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "marginNotesGestureRecognizer");
}

id objc_msgSend_marginNotesOwner(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "marginNotesOwner");
}

id objc_msgSend_mask(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "mask");
}

id objc_msgSend_maskGroupVerticalInset(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "maskGroupVerticalInset");
}

id objc_msgSend_maskInfo(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "maskInfo");
}

id objc_msgSend_maskLayer(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "maskLayer");
}

id objc_msgSend_maskLayerOrigin(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "maskLayerOrigin");
}

id objc_msgSend_masksToBounds(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "masksToBounds");
}

id objc_msgSend_masterNavigationController(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "masterNavigationController");
}

id objc_msgSend_matchesInString_options_range_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "matchesInString:options:range:");
}

id objc_msgSend_matchesTailOf_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "matchesTailOf:");
}

id objc_msgSend_matchingSelectorsForSelector_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "matchingSelectorsForSelector:");
}

id objc_msgSend_maxAbsolutePageIndexForNodeAtTileEntry_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "maxAbsolutePageIndexForNodeAtTileEntry:");
}

id objc_msgSend_maxAnnotationAssetVersion(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "maxAnnotationAssetVersion");
}

id objc_msgSend_maxCalloutFrameWidth(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "maxCalloutFrameWidth");
}

id objc_msgSend_maxContentHeight(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "maxContentHeight");
}

id objc_msgSend_maxLines(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "maxLines");
}

id objc_msgSend_maxLinesForAnnotationRenderer_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "maxLinesForAnnotationRenderer:");
}

id objc_msgSend_maxNoteLabelLines(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "maxNoteLabelLines");
}

id objc_msgSend_maxScale(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "maxScale");
}

id objc_msgSend_maxSize(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "maxSize");
}

id objc_msgSend_maxSpeed(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "maxSpeed");
}

id objc_msgSend_maxValue(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "maxValue");
}

id objc_msgSend_maxWidth(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "maxWidth");
}

id objc_msgSend_maximumContentSize(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "maximumContentSize");
}

id objc_msgSend_maximumFrameSizeForChild_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "maximumFrameSizeForChild:");
}

id objc_msgSend_maximumHeight(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "maximumHeight");
}

id objc_msgSend_maximumMetalTextureSizeForDevice_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "maximumMetalTextureSizeForDevice:");
}

id objc_msgSend_maximumNumberOfThumbsToLeftOfLeftmostDuringBackgroundDrag(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "maximumNumberOfThumbsToLeftOfLeftmostDuringBackgroundDrag");
}

id objc_msgSend_maximumNumberOfThumbsToRightOfLeftmostDuringBackgroundDrag(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "maximumNumberOfThumbsToRightOfLeftmostDuringBackgroundDrag");
}

id objc_msgSend_maximumNumberOfTouches(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "maximumNumberOfTouches");
}

id objc_msgSend_maximumPinchViewScale(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "maximumPinchViewScale");
}

id objc_msgSend_maximumPressDuration(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "maximumPressDuration");
}

id objc_msgSend_maximumValue(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "maximumValue");
}

id objc_msgSend_maybePromptUserBeforeOpeningExternalURL_shouldThrottle_promptContext_completion_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "maybePromptUserBeforeOpeningExternalURL:shouldThrottle:promptContext:completion:");
}

id objc_msgSend_md5StringWithContentsOfFile_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "md5StringWithContentsOfFile:");
}

id objc_msgSend_measureStorage_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "measureStorage:");
}

id objc_msgSend_measuredSizeWithFlags_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "measuredSizeWithFlags:");
}

id objc_msgSend_measuredSizeWithFlags_maxSize_layoutParent_styleProvider_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "measuredSizeWithFlags:maxSize:layoutParent:styleProvider:");
}

id objc_msgSend_mediaListIncludesScreen_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "mediaListIncludesScreen:");
}

id objc_msgSend_mediaListener(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "mediaListener");
}

id objc_msgSend_mediaPlaybackIsPaused(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "mediaPlaybackIsPaused");
}

id objc_msgSend_mediaSearchResults(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "mediaSearchResults");
}

id objc_msgSend_mediaSelectionGroupForMediaCharacteristic_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "mediaSelectionGroupForMediaCharacteristic:");
}

id objc_msgSend_mediaSelectionOptionsFromArray_filteredAndSortedAccordingToPreferredLanguages_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "mediaSelectionOptionsFromArray:filteredAndSortedAccordingToPreferredLanguages:");
}

id objc_msgSend_mediumDashPattern(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "mediumDashPattern");
}

id objc_msgSend_meetsStageDimensionRequirementForExpanded(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "meetsStageDimensionRequirementForExpanded");
}

id objc_msgSend_megaPadSizeClassPredicate(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "megaPadSizeClassPredicate");
}

id objc_msgSend_member_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "member:");
}

id objc_msgSend_menuForHighlightAtLocation_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "menuForHighlightAtLocation:");
}

id objc_msgSend_menuWithTitle_image_identifier_options_children_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "menuWithTitle:image:identifier:options:children:");
}

id objc_msgSend_mergeBackArrayComponentsWithEscapeIn_desiredMaxCount_separator_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "mergeBackArrayComponentsWithEscapeIn:desiredMaxCount:separator:");
}

id objc_msgSend_mergeCSSDict_intoCSSDict_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "mergeCSSDict:intoCSSDict:");
}

id objc_msgSend_mergeChangesFromContextDidSaveNotification_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "mergeChangesFromContextDidSaveNotification:");
}

id objc_msgSend_mergeFontDict_intoFontDict_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "mergeFontDict:intoFontDict:");
}

id objc_msgSend_metadata(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "metadata");
}

id objc_msgSend_metadataForAssetAtURL_needsCoordination_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "metadataForAssetAtURL:needsCoordination:");
}

id objc_msgSend_metadataForPersistentStore_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "metadataForPersistentStore:");
}

id objc_msgSend_metalAnimationDidEndWithContext_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "metalAnimationDidEndWithContext:");
}

id objc_msgSend_metalAnimationHasBegunWithContext_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "metalAnimationHasBegunWithContext:");
}

id objc_msgSend_metalAnimationWillBeginWithContext_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "metalAnimationWillBeginWithContext:");
}

id objc_msgSend_metalContext(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "metalContext");
}

id objc_msgSend_metalDevice(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "metalDevice");
}

id objc_msgSend_metalFloatForAttribute_atIndex_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "metalFloatForAttribute:atIndex:");
}

id objc_msgSend_metalPoint2DForAttribute_atIndex_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "metalPoint2DForAttribute:atIndex:");
}

id objc_msgSend_metalPoint3DForAttribute_atIndex_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "metalPoint3DForAttribute:atIndex:");
}

id objc_msgSend_metalPoint3DRandomDirection(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "metalPoint3DRandomDirection");
}

id objc_msgSend_metalPoint4DForAttribute_atIndex_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "metalPoint4DForAttribute:atIndex:");
}

id objc_msgSend_metalPrepareAnimationWithContext_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "metalPrepareAnimationWithContext:");
}

id objc_msgSend_metalTeardownAnimationsWithContext_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "metalTeardownAnimationsWithContext:");
}

id objc_msgSend_metalTexture(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "metalTexture");
}

id objc_msgSend_metalTextureWithContext_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "metalTextureWithContext:");
}

id objc_msgSend_methodSignatureForSelector_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "methodSignatureForSelector:");
}

id objc_msgSend_microseconds(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "microseconds");
}

id objc_msgSend_mimeType(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "mimeType");
}

id objc_msgSend_minContentSize(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "minContentSize");
}

id objc_msgSend_minMaxModelValuesForRulerMarker_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "minMaxModelValuesForRulerMarker:");
}

id objc_msgSend_minScale(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "minScale");
}

id objc_msgSend_minValue(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "minValue");
}

id objc_msgSend_minWidthToShowScrubberEndTime(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "minWidthToShowScrubberEndTime");
}

id objc_msgSend_minWidthToShowScrubberStartTime(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "minWidthToShowScrubberStartTime");
}

id objc_msgSend_minifiedControllerLoadedAssetViewController(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "minifiedControllerLoadedAssetViewController");
}

id objc_msgSend_minimizeLayoutPadding(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "minimizeLayoutPadding");
}

id objc_msgSend_minimumContentSize(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "minimumContentSize");
}

id objc_msgSend_minimumHeight(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "minimumHeight");
}

id objc_msgSend_minimumNumberOfTouches(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "minimumNumberOfTouches");
}

id objc_msgSend_minimumPinchViewScale(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "minimumPinchViewScale");
}

id objc_msgSend_minimumPressDuration(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "minimumPressDuration");
}

id objc_msgSend_minimumValue(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "minimumValue");
}

id objc_msgSend_minorSnippet(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "minorSnippet");
}

id objc_msgSend_minorSnippetForAbsolutePageIndex_withDocumentRoot_forPresentationType_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "minorSnippetForAbsolutePageIndex:withDocumentRoot:forPresentationType:");
}

id objc_msgSend_minorVersion(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "minorVersion");
}

id objc_msgSend_minusPropertyMap_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "minusPropertyMap:");
}

id objc_msgSend_minusSet_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "minusSet:");
}

id objc_msgSend_missingCount(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "missingCount");
}

id objc_msgSend_miterLimit(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "miterLimit");
}

id objc_msgSend_moc(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "moc");
}

id objc_msgSend_modalPresentationStyle(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "modalPresentationStyle");
}

id objc_msgSend_modalViewControllerProviderForGlossaryDefinitionsViewController_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "modalViewControllerProviderForGlossaryDefinitionsViewController:");
}

id objc_msgSend_mode(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "mode");
}

id objc_msgSend_modeStringForMode_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "modeStringForMode:");
}

id objc_msgSend_model(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "model");
}

id objc_msgSend_modelBodyInfos(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "modelBodyInfos");
}

id objc_msgSend_modelLink(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "modelLink");
}

id objc_msgSend_modelLinkWithFragment_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "modelLinkWithFragment:");
}

id objc_msgSend_modelLinkWithItemPath_dirPath_fragment_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "modelLinkWithItemPath:dirPath:fragment:");
}

id objc_msgSend_modelStorageAnchorForAnnotation_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "modelStorageAnchorForAnnotation:");
}

id objc_msgSend_modelStorageAnchorForCfi_error_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "modelStorageAnchorForCfi:error:");
}

id objc_msgSend_modelStorageAnchorForCfi_shallow_error_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "modelStorageAnchorForCfi:shallow:error:");
}

id objc_msgSend_modificationDate(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "modificationDate");
}

id objc_msgSend_modifiedAnnotation_withChapterTitle_physicalPageNumber_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "modifiedAnnotation:withChapterTitle:physicalPageNumber:");
}

id objc_msgSend_modifierFlags(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "modifierFlags");
}

id objc_msgSend_modifyAnnotation_undoContext_undoActionName_withBlock_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "modifyAnnotation:undoContext:undoActionName:withBlock:");
}

id objc_msgSend_modifyAnnotation_withNoteText_undoContext_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "modifyAnnotation:withNoteText:undoContext:");
}

id objc_msgSend_modifyAnnotation_withStyle_undoContext_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "modifyAnnotation:withStyle:undoContext:");
}

id objc_msgSend_modifyEachCharacterStyleWithBlock_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "modifyEachCharacterStyleWithBlock:");
}

id objc_msgSend_modifyEachParagraphStyleWithBlock_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "modifyEachParagraphStyleWithBlock:");
}

id objc_msgSend_mostSpecificCurrentEditorOfClass_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "mostSpecificCurrentEditorOfClass:");
}

id objc_msgSend_moveDrawable_toZOrder_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "moveDrawable:toZOrder:");
}

id objc_msgSend_moveFirstObjectToLast(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "moveFirstObjectToLast");
}

id objc_msgSend_moveItemAtPath_toPath_error_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "moveItemAtPath:toPath:error:");
}

id objc_msgSend_moveLastObjectToFirst(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "moveLastObjectToFirst");
}

id objc_msgSend_moveObjectsAtIndexes_toIndex_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "moveObjectsAtIndexes:toIndex:");
}

id objc_msgSend_moveRingToFocusItem_forClient_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "moveRingToFocusItem:forClient:");
}

id objc_msgSend_moveToPoint_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "moveToPoint:");
}

id objc_msgSend_moveViewAboveStatusBar_zPosition_hostView_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "moveViewAboveStatusBar:zPosition:hostView:");
}

id objc_msgSend_moveViewBackBelowStatusBar_preserveCurrentFrame_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "moveViewBackBelowStatusBar:preserveCurrentFrame:");
}

id objc_msgSend_moveViewToEffectsWindowAboveStatusBar_zPosition_hostView_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "moveViewToEffectsWindowAboveStatusBar:zPosition:hostView:");
}

id objc_msgSend_movements(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "movements");
}

id objc_msgSend_movieData(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "movieData");
}

id objc_msgSend_movieForObjectID_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "movieForObjectID:");
}

id objc_msgSend_movieInfo(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "movieInfo");
}

id objc_msgSend_movieInfoForDrawableWidgetInfo_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "movieInfoForDrawableWidgetInfo:");
}

id objc_msgSend_movieIsAtEnd(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "movieIsAtEnd");
}

id objc_msgSend_movieIsPlaying(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "movieIsPlaying");
}

id objc_msgSend_movieLayout(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "movieLayout");
}

id objc_msgSend_movieNameForTextureName_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "movieNameForTextureName:");
}

id objc_msgSend_moviePlayerControllerIsLoaded(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "moviePlayerControllerIsLoaded");
}

id objc_msgSend_moviePlayerControllerIsShowing(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "moviePlayerControllerIsShowing");
}

id objc_msgSend_moviePlayerViewController(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "moviePlayerViewController");
}

id objc_msgSend_movieRemoteURL(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "movieRemoteURL");
}

id objc_msgSend_movieRep(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "movieRep");
}

id objc_msgSend_movieUIView(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "movieUIView");
}

id objc_msgSend_movieURLForTextureName_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "movieURLForTextureName:");
}

id objc_msgSend_movieViewController(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "movieViewController");
}

id objc_msgSend_multiLevelIndent(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "multiLevelIndent");
}

id objc_msgSend_mutableBytes(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "mutableBytes");
}

id objc_msgSend_mutableCopy(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "mutableCopy");
}

id objc_msgSend_mutableCopyWithZone_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "mutableCopyWithZone:");
}

id objc_msgSend_mutateResponse_block_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "mutateResponse:block:");
}

id objc_msgSend_mutateReviewWidgetData_block_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "mutateReviewWidgetData:block:");
}

id objc_msgSend_mvpMatrixWithContext_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "mvpMatrixWithContext:");
}

id objc_msgSend_mvpMatrixWithTexture_andFrame_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "mvpMatrixWithTexture:andFrame:");
}

id objc_msgSend_myTableViewController(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "myTableViewController");
}

id objc_msgSend_myView(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "myView");
}

id objc_msgSend_name(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "name");
}

id objc_msgSend_namespaceCheck(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "namespaceCheck");
}

id objc_msgSend_naturalBounds(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "naturalBounds");
}

id objc_msgSend_naturalBoundsForHitTesting(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "naturalBoundsForHitTesting");
}

id objc_msgSend_naturalLocationForRep_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "naturalLocationForRep:");
}

id objc_msgSend_naturalSize(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "naturalSize");
}

id objc_msgSend_naturalSizeForImageData_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "naturalSizeForImageData:");
}

id objc_msgSend_navOverlayPageNumberView(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "navOverlayPageNumberView");
}

id objc_msgSend_navUnitRelativePageIndexForContentNode_forContentNodeRelativePageIndex_presentationType_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "navUnitRelativePageIndexForContentNode:forContentNodeRelativePageIndex:presentationType:");
}

id objc_msgSend_navigableAnchorFromLink_withContentNode_presentationType_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "navigableAnchorFromLink:withContentNode:presentationType:");
}

id objc_msgSend_navigableLayouts(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "navigableLayouts");
}

id objc_msgSend_navigateByBookDirection_bookGranularity_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "navigateByBookDirection:bookGranularity:");
}

id objc_msgSend_navigateFromNotesViewToAnchorInDVC_completion_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "navigateFromNotesViewToAnchorInDVC:completion:");
}

id objc_msgSend_navigateToAbsolutePageIndex_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "navigateToAbsolutePageIndex:");
}

id objc_msgSend_navigateToAnchorInDVC_pulse_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "navigateToAnchorInDVC:pulse:");
}

id objc_msgSend_navigateToSearchResult_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "navigateToSearchResult:");
}

id objc_msgSend_navigationBar(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "navigationBar");
}

id objc_msgSend_navigationBarController(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "navigationBarController");
}

id objc_msgSend_navigationBarIsTranslucent_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "navigationBarIsTranslucent:");
}

id objc_msgSend_navigationController(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "navigationController");
}

id objc_msgSend_navigationDelegate(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "navigationDelegate");
}

id objc_msgSend_navigationHistoryStepperController(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "navigationHistoryStepperController");
}

id objc_msgSend_navigationItem(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "navigationItem");
}

id objc_msgSend_navigationModel(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "navigationModel");
}

id objc_msgSend_navigationOverlayContainer(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "navigationOverlayContainer");
}

id objc_msgSend_navigationOverlayView(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "navigationOverlayView");
}

id objc_msgSend_navigationPageNode(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "navigationPageNode");
}

id objc_msgSend_navigationType(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "navigationType");
}

id objc_msgSend_navigationUnitContainingContentNode_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "navigationUnitContainingContentNode:");
}

id objc_msgSend_navigationUnitDidChange_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "navigationUnitDidChange:");
}

id objc_msgSend_navigationUnitFollowingNavigationUnit_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "navigationUnitFollowingNavigationUnit:");
}

id objc_msgSend_navigationUnitForChapterIndex_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "navigationUnitForChapterIndex:");
}

id objc_msgSend_navigationUnitRelativePageIndexForAbsolutePageIndex_forPresentationType_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "navigationUnitRelativePageIndexForAbsolutePageIndex:forPresentationType:");
}

id objc_msgSend_navigationUnitRelativePageIndexForContentNodeRelativePageIndex_inContentNode_forPresentationType_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "navigationUnitRelativePageIndexForContentNodeRelativePageIndex:inContentNode:forPresentationType:");
}

id objc_msgSend_navigationUnitWithContext_andModelNode_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "navigationUnitWithContext:andModelNode:");
}

id objc_msgSend_navigationUnits(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "navigationUnits");
}

id objc_msgSend_navigator(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "navigator");
}

id objc_msgSend_ncxAdditions(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "ncxAdditions");
}

id objc_msgSend_ncxEntryUri(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "ncxEntryUri");
}

id objc_msgSend_needInnerMask(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "needInnerMask");
}

id objc_msgSend_needOuterMask(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "needOuterMask");
}

id objc_msgSend_needsAccessibilityAnnouncements(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "needsAccessibilityAnnouncements");
}

id objc_msgSend_needsAccessibilityElements(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "needsAccessibilityElements");
}

id objc_msgSend_needsAnnotationSourceForLayout_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "needsAnnotationSourceForLayout:");
}

id objc_msgSend_needsInflation(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "needsInflation");
}

id objc_msgSend_needsLayout(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "needsLayout");
}

id objc_msgSend_needsMarginNoteUpdate(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "needsMarginNoteUpdate");
}

id objc_msgSend_needsMigration(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "needsMigration");
}

id objc_msgSend_needsToRedrawForVisibleBounds_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "needsToRedrawForVisibleBounds:");
}

id objc_msgSend_networkFromStylesheet_presetIndex_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "networkFromStylesheet:presetIndex:");
}

id objc_msgSend_newAllEncryptionInfoForArchive_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "newAllEncryptionInfoForArchive:");
}

id objc_msgSend_newAllEncryptionInfoFromAssetForArchive_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "newAllEncryptionInfoFromAssetForArchive:");
}

id objc_msgSend_newAllEncryptionInfoFromAssetForArchiveAtPath_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "newAllEncryptionInfoFromAssetForArchiveAtPath:");
}

id objc_msgSend_newAllEncryptionInfoFromCacheForArchive_originalEncryptionPath_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "newAllEncryptionInfoFromCacheForArchive:originalEncryptionPath:");
}

id objc_msgSend_newAnnotationCacheWithRemovedAnnotation_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "newAnnotationCacheWithRemovedAnnotation:");
}

id objc_msgSend_newAnnotationCacheWithTemporaryAnnotation_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "newAnnotationCacheWithTemporaryAnnotation:");
}

id objc_msgSend_newAnnotationCacheWithUpdatedAnnotation_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "newAnnotationCacheWithUpdatedAnnotation:");
}

id objc_msgSend_newBufferWithBytes_length_options_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "newBufferWithBytes:length:options:");
}

id objc_msgSend_newBulletListPropertyNames_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "newBulletListPropertyNames:");
}

id objc_msgSend_newCachedSizedImage(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "newCachedSizedImage");
}

id objc_msgSend_newCachedSizedImageWithNaturalSize(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "newCachedSizedImageWithNaturalSize");
}

id objc_msgSend_newCommandQueue(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "newCommandQueue");
}

id objc_msgSend_newComputePipelineStateWithDescriptor_options_reflection_error_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "newComputePipelineStateWithDescriptor:options:reflection:error:");
}

id objc_msgSend_newDataBufferWithVertexAttributes_meshSize_device_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "newDataBufferWithVertexAttributes:meshSize:device:");
}

id objc_msgSend_newDataBufferWithVertexAttributes_vertexCount_indexElementCount_device_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "newDataBufferWithVertexAttributes:vertexCount:indexElementCount:device:");
}

id objc_msgSend_newDataBufferWithVertexRect_textureRect_device_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "newDataBufferWithVertexRect:textureRect:device:");
}

id objc_msgSend_newDataBufferWithVertexRect_textureRect_meshSize_textureFlipped_includeCenterAttribute_addTransparentBorder_device_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "newDataBufferWithVertexRect:textureRect:meshSize:textureFlipped:includeCenterAttribute:addTransparentBorder:device:");
}

id objc_msgSend_newDataBufferWithVertexRect_textureRect_textureFlipped_device_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "newDataBufferWithVertexRect:textureRect:textureFlipped:device:");
}

id objc_msgSend_newDataWithBundleResource_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "newDataWithBundleResource:");
}

id objc_msgSend_newEventAtIndex_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "newEventAtIndex:");
}

id objc_msgSend_newFunctionWithName_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "newFunctionWithName:");
}

id objc_msgSend_newImage(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "newImage");
}

id objc_msgSend_newImageFillWithImageData_technique_tintColor_contentState_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "newImageFillWithImageData:technique:tintColor:contentState:");
}

id objc_msgSend_newImageForTextureName_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "newImageForTextureName:");
}

id objc_msgSend_newImageSourceForTextureName_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "newImageSourceForTextureName:");
}

id objc_msgSend_newImageSourceWithContentsOfURL_error_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "newImageSourceWithContentsOfURL:error:");
}

id objc_msgSend_newManagedObjectContext(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "newManagedObjectContext");
}

id objc_msgSend_newMovieForTextureName_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "newMovieForTextureName:");
}

id objc_msgSend_newMovieForTextureName_movieDict_withObjectID_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "newMovieForTextureName:movieDict:withObjectID:");
}

id objc_msgSend_newNavigationControllerForGlossaryView_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "newNavigationControllerForGlossaryView:");
}

id objc_msgSend_newNodeBodyWithContext_isFlow_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "newNodeBodyWithContext:isFlow:");
}

id objc_msgSend_newNotesViewController(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "newNotesViewController");
}

id objc_msgSend_newPageControllerForContentNode_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "newPageControllerForContentNode:");
}

id objc_msgSend_newParticleSystemWithNumberOfParticles_objectSize_slideSize_duration_direction_randomGenerator_shader_metalContext_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "newParticleSystemWithNumberOfParticles:objectSize:slideSize:duration:direction:randomGenerator:shader:metalContext:");
}

id objc_msgSend_newParticleSystemWithNumberOfParticles_objectSize_slideSize_duration_direction_shader_percentOfCellsToSplit_randomGenerator_metalContext_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "newParticleSystemWithNumberOfParticles:objectSize:slideSize:duration:direction:shader:percentOfCellsToSplit:randomGenerator:metalContext:");
}

id objc_msgSend_newParticleSystemWithParticleSize_particleSystemSize_objectSize_slideSize_duration_direction_randomGenerator_shader_metalContext_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "newParticleSystemWithParticleSize:particleSystemSize:objectSize:slideSize:duration:direction:randomGenerator:shader:metalContext:");
}

id objc_msgSend_newSectionInfoForContentNode_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "newSectionInfoForContentNode:");
}

id objc_msgSend_newSessionAssertion(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "newSessionAssertion");
}

id objc_msgSend_newSoundtrack(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "newSoundtrack");
}

id objc_msgSend_newStackEntryFromReader_elementInfo_parentEntry_cfiPath_readerState_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "newStackEntryFromReader:elementInfo:parentEntry:cfiPath:readerState:");
}

id objc_msgSend_newStemmedWord_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "newStemmedWord:");
}

id objc_msgSend_newSubCollectionWithRange_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "newSubCollectionWithRange:");
}

id objc_msgSend_newSubstorageWithRange_storageContext_objectsContext_flags_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "newSubstorageWithRange:storageContext:objectsContext:flags:");
}

id objc_msgSend_newTemporaryReviewDataMOC(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "newTemporaryReviewDataMOC");
}

id objc_msgSend_newTemporateReviewResponseMOC(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "newTemporateReviewResponseMOC");
}

id objc_msgSend_newTransportController(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "newTransportController");
}

id objc_msgSend_newUnversionedBookVersion(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "newUnversionedBookVersion");
}

id objc_msgSend_newViewController(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "newViewController");
}

id objc_msgSend_newWipeDataBufferWithVertexRect_textureRect_metalContext_colorAttachment_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "newWipeDataBufferWithVertexRect:textureRect:metalContext:colorAttachment:");
}

id objc_msgSend_nextBookspot(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "nextBookspot");
}

id objc_msgSend_nextButton(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "nextButton");
}

id objc_msgSend_nextButtonFrame(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "nextButtonFrame");
}

id objc_msgSend_nextCaption(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "nextCaption");
}

id objc_msgSend_nextCharacterIndex_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "nextCharacterIndex:");
}

id objc_msgSend_nextDrawable(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "nextDrawable");
}

id objc_msgSend_nextEvent(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "nextEvent");
}

id objc_msgSend_nextEventIndexAfterCurrent(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "nextEventIndexAfterCurrent");
}

id objc_msgSend_nextHintLocation(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "nextHintLocation");
}

id objc_msgSend_nextHintShapeRef(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "nextHintShapeRef");
}

id objc_msgSend_nextKey(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "nextKey");
}

id objc_msgSend_nextObject(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "nextObject");
}

id objc_msgSend_nextSibling(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "nextSibling");
}

id objc_msgSend_nextSlide(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "nextSlide");
}

id objc_msgSend_nextTargetFromLayout_column_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "nextTargetFromLayout:column:");
}

id objc_msgSend_nextVisibleAbsolutePageNumber(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "nextVisibleAbsolutePageNumber");
}

id objc_msgSend_nextWordFromIndex_forward_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "nextWordFromIndex:forward:");
}

id objc_msgSend_nibWithNibName_bundle_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "nibWithNibName:bundle:");
}

id objc_msgSend_noResultsView(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "noResultsView");
}

id objc_msgSend_noSearchResultsViewController(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "noSearchResultsViewController");
}

id objc_msgSend_node(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "node");
}

id objc_msgSend_nodeAfterNode_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "nodeAfterNode:");
}

id objc_msgSend_nodeAtIndex_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "nodeAtIndex:");
}

id objc_msgSend_nodeBodyExists(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "nodeBodyExists");
}

id objc_msgSend_nodeBodyForPresentationType_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "nodeBodyForPresentationType:");
}

id objc_msgSend_nodeForPageIndex_inNode_excludeHeadings_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "nodeForPageIndex:inNode:excludeHeadings:");
}

id objc_msgSend_nodeFromLink_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "nodeFromLink:");
}

id objc_msgSend_nodeGUID(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "nodeGUID");
}

id objc_msgSend_nodeRelativePageIndex(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "nodeRelativePageIndex");
}

id objc_msgSend_nodeRelativePageIndexInContentNode_forNavigationUnitRelativePageIndex_presentationType_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "nodeRelativePageIndexInContentNode:forNavigationUnitRelativePageIndex:presentationType:");
}

id objc_msgSend_nodeType(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "nodeType");
}

id objc_msgSend_nodeUniqueIDForInfo_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "nodeUniqueIDForInfo:");
}

id objc_msgSend_nodeUniqueIDForInfo_forPresentationType_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "nodeUniqueIDForInfo:forPresentationType:");
}

id objc_msgSend_nonCurrentVersionPredicate(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "nonCurrentVersionPredicate");
}

id objc_msgSend_nonDelegatedReader(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "nonDelegatedReader");
}

id objc_msgSend_nonEmptyBodyCount(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "nonEmptyBodyCount");
}

id objc_msgSend_nonEmptyColumns(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "nonEmptyColumns");
}

id objc_msgSend_nonFidgetValue(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "nonFidgetValue");
}

id objc_msgSend_nonOrphanedPredicate(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "nonOrphanedPredicate");
}

id objc_msgSend_nonOrphanedRangePredicate(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "nonOrphanedRangePredicate");
}

id objc_msgSend_nonSponsoredNonOrphanedPredicate(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "nonSponsoredNonOrphanedPredicate");
}

id objc_msgSend_nonSponsoredPredicate(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "nonSponsoredPredicate");
}

id objc_msgSend_nonretainedObjectValue(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "nonretainedObjectValue");
}

id objc_msgSend_normalizedCompare_with_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "normalizedCompare:with:");
}

id objc_msgSend_normalizedPrefixSearchStrings(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "normalizedPrefixSearchStrings");
}

id objc_msgSend_normalizedStringForSearch(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "normalizedStringForSearch");
}

id objc_msgSend_normalizedStringsForPrefixSearch(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "normalizedStringsForPrefixSearch");
}

id objc_msgSend_normalizedTerm(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "normalizedTerm");
}

id objc_msgSend_notFoundLabel(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "notFoundLabel");
}

id objc_msgSend_notPredicateWithSubpredicate_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "notPredicateWithSubpredicate:");
}

id objc_msgSend_noteCardBodyHeight(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "noteCardBodyHeight");
}

id objc_msgSend_noteCardBodyLeftMargin(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "noteCardBodyLeftMargin");
}

id objc_msgSend_noteCardBodyTopMargin(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "noteCardBodyTopMargin");
}

id objc_msgSend_noteCardBodyWidth(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "noteCardBodyWidth");
}

id objc_msgSend_noteCardColorBarPaddingFromScrollBottom(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "noteCardColorBarPaddingFromScrollBottom");
}

id objc_msgSend_noteCardColorBarWidth(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "noteCardColorBarWidth");
}

id objc_msgSend_noteCardCount(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "noteCardCount");
}

id objc_msgSend_noteCardDidSettle_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "noteCardDidSettle:");
}

id objc_msgSend_noteCardFooterBaselineOffset(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "noteCardFooterBaselineOffset");
}

id objc_msgSend_noteCardHeaderBaselineOffset(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "noteCardHeaderBaselineOffset");
}

id objc_msgSend_noteCardInfo(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "noteCardInfo");
}

id objc_msgSend_noteCardLayerCount(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "noteCardLayerCount");
}

id objc_msgSend_noteCardLeftMargin(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "noteCardLeftMargin");
}

id objc_msgSend_noteCardOffset(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "noteCardOffset");
}

id objc_msgSend_noteCardRightMargin(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "noteCardRightMargin");
}

id objc_msgSend_noteCardSectionTitlePaddingToPageNumber(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "noteCardSectionTitlePaddingToPageNumber");
}

id objc_msgSend_noteCardShadowOpacity(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "noteCardShadowOpacity");
}

id objc_msgSend_noteCardSize(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "noteCardSize");
}

id objc_msgSend_noteCardTypeSortOrder(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "noteCardTypeSortOrder");
}

id objc_msgSend_noteCards(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "noteCards");
}

id objc_msgSend_noteCardsControllerUpdatedTopCardFrame_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "noteCardsControllerUpdatedTopCardFrame:");
}

id objc_msgSend_noteEdgeInsetsAtScale_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "noteEdgeInsetsAtScale:");
}

id objc_msgSend_noteEditorController(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "noteEditorController");
}

id objc_msgSend_noteEditorViewController(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "noteEditorViewController");
}

id objc_msgSend_noteLabel(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "noteLabel");
}

id objc_msgSend_noteLabelHorizontalInset(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "noteLabelHorizontalInset");
}

id objc_msgSend_noteRange(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "noteRange");
}

id objc_msgSend_noteText(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "noteText");
}

id objc_msgSend_noteWasDeleted(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "noteWasDeleted");
}

id objc_msgSend_notes(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "notes");
}

id objc_msgSend_notesButtonItem(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "notesButtonItem");
}

id objc_msgSend_notesDetailViewController(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "notesDetailViewController");
}

id objc_msgSend_notesExist(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "notesExist");
}

id objc_msgSend_notesFullscreenViewController(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "notesFullscreenViewController");
}

id objc_msgSend_notesSearchResults(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "notesSearchResults");
}

id objc_msgSend_notesSidebarBarColor(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "notesSidebarBarColor");
}

id objc_msgSend_notesSidebarCell_highlightDidChange_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "notesSidebarCell:highlightDidChange:");
}

id objc_msgSend_notesSidebarCell_selectionDidChange_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "notesSidebarCell:selectionDidChange:");
}

id objc_msgSend_notesSidebarViewController(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "notesSidebarViewController");
}

id objc_msgSend_notesSplitViewController(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "notesSplitViewController");
}

id objc_msgSend_notesTableViewController(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "notesTableViewController");
}

id objc_msgSend_notesThumb(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "notesThumb");
}

id objc_msgSend_notificationOperationQueue(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "notificationOperationQueue");
}

id objc_msgSend_notificationWithName_object_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "notificationWithName:object:");
}

id objc_msgSend_notifyPlaybackWillStart_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "notifyPlaybackWillStart:");
}

id objc_msgSend_nsError_domain_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "nsError:domain:");
}

id objc_msgSend_nsString(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "nsString");
}

id objc_msgSend_null(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "null");
}

id objc_msgSend_numSelectedTargets(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "numSelectedTargets");
}

id objc_msgSend_numberOfArguments(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "numberOfArguments");
}

id objc_msgSend_numberOfBookmarks(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "numberOfBookmarks");
}

id objc_msgSend_numberOfColumns(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "numberOfColumns");
}

id objc_msgSend_numberOfContentNodes(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "numberOfContentNodes");
}

id objc_msgSend_numberOfEntries(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "numberOfEntries");
}

id objc_msgSend_numberOfFloatingHeaders_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "numberOfFloatingHeaders:");
}

id objc_msgSend_numberOfFooterRows(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "numberOfFooterRows");
}

id objc_msgSend_numberOfHeaderColumns(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "numberOfHeaderColumns");
}

id objc_msgSend_numberOfHeaderRows(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "numberOfHeaderRows");
}

id objc_msgSend_numberOfHighlightAnnotations(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "numberOfHighlightAnnotations");
}

id objc_msgSend_numberOfLines(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "numberOfLines");
}

id objc_msgSend_numberOfNotes(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "numberOfNotes");
}

id objc_msgSend_numberOfObjects(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "numberOfObjects");
}

id objc_msgSend_numberOfOrphanedAnnotations(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "numberOfOrphanedAnnotations");
}

id objc_msgSend_numberOfPages(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "numberOfPages");
}

id objc_msgSend_numberOfRanges(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "numberOfRanges");
}

id objc_msgSend_numberOfResultsInSection_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "numberOfResultsInSection:");
}

id objc_msgSend_numberOfRows(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "numberOfRows");
}

id objc_msgSend_numberOfRowsForFloatingHeaderAtIndex_forController_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "numberOfRowsForFloatingHeaderAtIndex:forController:");
}

id objc_msgSend_numberOfRowsInSection_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "numberOfRowsInSection:");
}

id objc_msgSend_numberOfSections(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "numberOfSections");
}

id objc_msgSend_numberOfSectionsInTableView_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "numberOfSectionsInTableView:");
}

id objc_msgSend_numberOfStagePages(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "numberOfStagePages");
}

id objc_msgSend_numberOfSubentriesForIndex_inModel_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "numberOfSubentriesForIndex:inModel:");
}

id objc_msgSend_numberOfTapsRequired(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "numberOfTapsRequired");
}

id objc_msgSend_numberOfThumbnailTrackPages(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "numberOfThumbnailTrackPages");
}

id objc_msgSend_numberOfVerticesPerParticle(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "numberOfVerticesPerParticle");
}

id objc_msgSend_numberParagraphStyle(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "numberParagraphStyle");
}

id objc_msgSend_numberStringInPair_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "numberStringInPair:");
}

id objc_msgSend_numberWithBool_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "numberWithBool:");
}

id objc_msgSend_numberWithDouble_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "numberWithDouble:");
}

id objc_msgSend_numberWithFloat_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "numberWithFloat:");
}

id objc_msgSend_numberWithInt_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "numberWithInt:");
}

id objc_msgSend_numberWithInteger_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "numberWithInteger:");
}

id objc_msgSend_numberWithUnsignedInteger_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "numberWithUnsignedInteger:");
}

id objc_msgSend_numberWithUnsignedLongLong_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "numberWithUnsignedLongLong:");
}

id objc_msgSend_objCType(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "objCType");
}

id objc_msgSend_object(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "object");
}

id objc_msgSend_objectAtIndex_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "objectAtIndex:");
}

id objc_msgSend_objectAtIndexPath_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "objectAtIndexPath:");
}

id objc_msgSend_objectAtIndexedSubscript_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "objectAtIndexedSubscript:");
}

id objc_msgSend_objectDataBufferAttributeColorTexCoord(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "objectDataBufferAttributeColorTexCoord");
}

id objc_msgSend_objectDataBufferAttributePosition(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "objectDataBufferAttributePosition");
}

id objc_msgSend_objectDataBufferAttributeSpeed(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "objectDataBufferAttributeSpeed");
}

id objc_msgSend_objectDidEndMoviePlayback_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "objectDidEndMoviePlayback:");
}

id objc_msgSend_objectEnumerator(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "objectEnumerator");
}

id objc_msgSend_objectForKey_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "objectForKey:");
}

id objc_msgSend_objectForKeyedSubscript_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "objectForKeyedSubscript:");
}

id objc_msgSend_objectForProperty_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "objectForProperty:");
}

id objc_msgSend_objectID(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "objectID");
}

id objc_msgSend_objectSize(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "objectSize");
}

id objc_msgSend_objectSystemForTR_slideRect_duration_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "objectSystemForTR:slideRect:duration:");
}

id objc_msgSend_objectWillBeginMoviePlayback_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "objectWillBeginMoviePlayback:");
}

id objc_msgSend_objectWithID_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "objectWithID:");
}

id objc_msgSend_objectsPassingTest_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "objectsPassingTest:");
}

id objc_msgSend_observer_didChangeStyle_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "observer:didChangeStyle:");
}

id objc_msgSend_observers(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "observers");
}

id objc_msgSend_observingRate(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "observingRate");
}

id objc_msgSend_occurenceCount(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "occurenceCount");
}

id objc_msgSend_occurrenceCount(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "occurrenceCount");
}

id objc_msgSend_occurrenceIndex(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "occurrenceIndex");
}

id objc_msgSend_occurrenceMapForQuery_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "occurrenceMapForQuery:");
}

id objc_msgSend_occurrences(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "occurrences");
}

id objc_msgSend_offscreenNoteDistance(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "offscreenNoteDistance");
}

id objc_msgSend_offset(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "offset");
}

id objc_msgSend_offsetFromBodyTop(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "offsetFromBodyTop");
}

id objc_msgSend_offsetGeometryBy_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "offsetGeometryBy:");
}

id objc_msgSend_offsetSize_inPagingDirectionWithOffset_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "offsetSize:inPagingDirectionWithOffset:");
}

id objc_msgSend_offsetStartCharIndexBy_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "offsetStartCharIndexBy:");
}

id objc_msgSend_offsetStartCharIndicesBy_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "offsetStartCharIndicesBy:");
}

id objc_msgSend_onCanvasScale(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "onCanvasScale");
}

id objc_msgSend_onCanvasView(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "onCanvasView");
}

id objc_msgSend_onCanvasViews(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "onCanvasViews");
}

id objc_msgSend_one(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "one");
}

id objc_msgSend_opacity(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "opacity");
}

id objc_msgSend_openAnimationDidFinish(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "openAnimationDidFinish");
}

id objc_msgSend_openCloseButton(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "openCloseButton");
}

id objc_msgSend_openSectionImage(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "openSectionImage");
}

id objc_msgSend_openURL_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "openURL:");
}

id objc_msgSend_openURL_options_completionHandler_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "openURL:options:completionHandler:");
}

id objc_msgSend_openURL_sourceDocumentRoot_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "openURL:sourceDocumentRoot:");
}

id objc_msgSend_opened(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "opened");
}

id objc_msgSend_openingAbsolutePageIndexOverride(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "openingAbsolutePageIndexOverride");
}

id objc_msgSend_openingCFIOverride(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "openingCFIOverride");
}

id objc_msgSend_openingFragmentOverride(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "openingFragmentOverride");
}

id objc_msgSend_openingLocationOverride(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "openingLocationOverride");
}

id objc_msgSend_operationShouldCancelLoad(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "operationShouldCancelLoad");
}

id objc_msgSend_operations(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "operations");
}

id objc_msgSend_opfEntryUri(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "opfEntryUri");
}

id objc_msgSend_opfXmlUriFromPackage_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "opfXmlUriFromPackage:");
}

id objc_msgSend_optedIn(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "optedIn");
}

id objc_msgSend_optionalDispatcher(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "optionalDispatcher");
}

id objc_msgSend_options(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "options");
}

id objc_msgSend_optionsButton(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "optionsButton");
}

id objc_msgSend_optionsPopoverController(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "optionsPopoverController");
}

id objc_msgSend_orPredicateWithSubpredicates_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "orPredicateWithSubpredicates:");
}

id objc_msgSend_orangeColor(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "orangeColor");
}

id objc_msgSend_orderedChildDrawables(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "orderedChildDrawables");
}

id objc_msgSend_orderedDrawables(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "orderedDrawables");
}

id objc_msgSend_orderedDrawables_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "orderedDrawables:");
}

id objc_msgSend_orderedList(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "orderedList");
}

id objc_msgSend_orderedSetWithArray_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "orderedSetWithArray:");
}

id objc_msgSend_ordinal(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "ordinal");
}

id objc_msgSend_ordinalLabel(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "ordinalLabel");
}

id objc_msgSend_ordinalNumberLeftMargin(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "ordinalNumberLeftMargin");
}

id objc_msgSend_ordinalNumberRightMarginChapter(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "ordinalNumberRightMarginChapter");
}

id objc_msgSend_ordinalNumberRightMarginSection(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "ordinalNumberRightMarginSection");
}

id objc_msgSend_ordinalTextColor(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "ordinalTextColor");
}

id objc_msgSend_ordinalWidthLevel1(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "ordinalWidthLevel1");
}

id objc_msgSend_ordinalWidthLevel2(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "ordinalWidthLevel2");
}

id objc_msgSend_ordinalWidthLevel3(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "ordinalWidthLevel3");
}

id objc_msgSend_orientation(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "orientation");
}

id objc_msgSend_orientationAnchor(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "orientationAnchor");
}

id objc_msgSend_orientationCount(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "orientationCount");
}

id objc_msgSend_orientationLock(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "orientationLock");
}

id objc_msgSend_orientationState(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "orientationState");
}

id objc_msgSend_originOfCharacterIndex_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "originOfCharacterIndex:");
}

id objc_msgSend_originOfCharacterIndex_forRelativePageIndex_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "originOfCharacterIndex:forRelativePageIndex:");
}

id objc_msgSend_originalAssetSizes(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "originalAssetSizes");
}

id objc_msgSend_originalCanvasScrollViewFrame(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "originalCanvasScrollViewFrame");
}

id objc_msgSend_originalCanvasScrollViewSuperview(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "originalCanvasScrollViewSuperview");
}

id objc_msgSend_originalShadowTransform(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "originalShadowTransform");
}

id objc_msgSend_originalStorage(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "originalStorage");
}

id objc_msgSend_originalTargetLayerFrame(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "originalTargetLayerFrame");
}

id objc_msgSend_originalThumbnailFrame(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "originalThumbnailFrame");
}

id objc_msgSend_originalViewController(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "originalViewController");
}

id objc_msgSend_originalViewScale(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "originalViewScale");
}

id objc_msgSend_originalViewSize(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "originalViewSize");
}

id objc_msgSend_orphanedAnnotations(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "orphanedAnnotations");
}

id objc_msgSend_orphanedPredicate(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "orphanedPredicate");
}

id objc_msgSend_orphanedRangePredicate(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "orphanedRangePredicate");
}

id objc_msgSend_outerClipView(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "outerClipView");
}

id objc_msgSend_overlayContentBackgroundColor(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "overlayContentBackgroundColor");
}

id objc_msgSend_overlayableZoomableCanvasController_canvasViewShouldBecomeFirstResponder_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "overlayableZoomableCanvasController:canvasViewShouldBecomeFirstResponder:");
}

id objc_msgSend_overlayableZoomableCanvasController_contentInsetsForViewScale_viewportBounds_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "overlayableZoomableCanvasController:contentInsetsForViewScale:viewportBounds:");
}

id objc_msgSend_overlayableZoomableCanvasController_didEndZoomingAtScale_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "overlayableZoomableCanvasController:didEndZoomingAtScale:");
}

id objc_msgSend_overlayableZoomableCanvasController_expandBoundsForHitTesting_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "overlayableZoomableCanvasController:expandBoundsForHitTesting:");
}

id objc_msgSend_overlayableZoomableCanvasController_infosToDisplayForContentViewport_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "overlayableZoomableCanvasController:infosToDisplayForContentViewport:");
}

id objc_msgSend_overlayableZoomableCanvasController_interactiveCanvasControllerDidScroll_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "overlayableZoomableCanvasController:interactiveCanvasControllerDidScroll:");
}

id objc_msgSend_overlayableZoomableCanvasController_shouldDisableScrollingAtContentEdgesForScrollView_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "overlayableZoomableCanvasController:shouldDisableScrollingAtContentEdgesForScrollView:");
}

id objc_msgSend_overlayableZoomableCanvasController_shouldDisableScrollingWhenCursorIsHiddenForScrollView_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "overlayableZoomableCanvasController:shouldDisableScrollingWhenCursorIsHiddenForScrollView:");
}

id objc_msgSend_overlayableZoomableCanvasControllerContentsScale_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "overlayableZoomableCanvasControllerContentsScale:");
}

id objc_msgSend_overlayableZoomableCanvasControllerDeferViewCreation_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "overlayableZoomableCanvasControllerDeferViewCreation:");
}

id objc_msgSend_overridePropertyMap(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "overridePropertyMap");
}

id objc_msgSend_overrideUserInterfaceStyle(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "overrideUserInterfaceStyle");
}

id objc_msgSend_overscrollTransitionView(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "overscrollTransitionView");
}

id objc_msgSend_overshoot(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "overshoot");
}

id objc_msgSend_ownerAutoreleasedAccess(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "ownerAutoreleasedAccess");
}

id objc_msgSend_ownerRelease(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "ownerRelease");
}

id objc_msgSend_ownerRetain(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "ownerRetain");
}

id objc_msgSend_owningAttachment(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "owningAttachment");
}

id objc_msgSend_ownsMarginNote_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "ownsMarginNote:");
}

id objc_msgSend_ownsShow(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "ownsShow");
}

id objc_msgSend_ownsWebView(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "ownsWebView");
}

id objc_msgSend_pAnimationView(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "pAnimationView");
}

id objc_msgSend_pConfigureHUDVisibility(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "pConfigureHUDVisibility");
}

id objc_msgSend_pConfigureScrubberVisibility(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "pConfigureScrubberVisibility");
}

id objc_msgSend_pCreateHUDBackgroundForView_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "pCreateHUDBackgroundForView:");
}

id objc_msgSend_pHintCollectorForPresentationId_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "pHintCollectorForPresentationId:");
}

id objc_msgSend_pParameterStringFromParameterArray_addQuoting_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "pParameterStringFromParameterArray:addQuoting:");
}

id objc_msgSend_pServeWidgetControllerRequest_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "pServeWidgetControllerRequest:");
}

id objc_msgSend_pSetControlColors(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "pSetControlColors");
}

id objc_msgSend_p_SetType_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_SetType:");
}

id objc_msgSend_p_SetValue_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_SetValue:");
}

id objc_msgSend_p_THCFIReaderStringFromBKCFIString_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_THCFIReaderStringFromBKCFIString:");
}

id objc_msgSend_p_accumulateStorageUIDsForChildrenInObject_forRelativePageIndex_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_accumulateStorageUIDsForChildrenInObject:forRelativePageIndex:");
}

id objc_msgSend_p_actionForDeletingAEAnnotation_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_actionForDeletingAEAnnotation:");
}

id objc_msgSend_p_actionForDeletingCachedAnnotation_moc_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_actionForDeletingCachedAnnotation:moc:");
}

id objc_msgSend_p_actionForInsertingAnnotationWithType_style_absolutePageIndex_range_storage_contentNode_updateBlock_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_actionForInsertingAnnotationWithType:style:absolutePageIndex:range:storage:contentNode:updateBlock:");
}

id objc_msgSend_p_actionForUpdatingAnnotation_withBlock_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_actionForUpdatingAnnotation:withBlock:");
}

id objc_msgSend_p_actionForUpdatingAnnotation_withContentNode_block_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_actionForUpdatingAnnotation:withContentNode:block:");
}

id objc_msgSend_p_activePagePaddingOptions(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_activePagePaddingOptions");
}

id objc_msgSend_p_activeTableView(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_activeTableView");
}

id objc_msgSend_p_activityIndicatorCell_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_activityIndicatorCell:");
}

id objc_msgSend_p_activityItemPropertySource(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_activityItemPropertySource");
}

id objc_msgSend_p_activityItemProviderWithAnnotation_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_activityItemProviderWithAnnotation:");
}

id objc_msgSend_p_activityItemProviderWithCurrentSelection(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_activityItemProviderWithCurrentSelection");
}

id objc_msgSend_p_addAnimationFromAnimationDict_forLayer_withTextureName_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_addAnimationFromAnimationDict:forLayer:withTextureName:");
}

id objc_msgSend_p_addBackdropWithSettings_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_addBackdropWithSettings:");
}

id objc_msgSend_p_addBackgroundViewWithColor_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_addBackgroundViewWithColor:");
}

id objc_msgSend_p_addChildRepsToArray_inContainer_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_addChildRepsToArray:inContainer:");
}

id objc_msgSend_p_addDropAnimationWithCompletion_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_addDropAnimationWithCompletion:");
}

id objc_msgSend_p_addFrameAnimationForLayer_duration_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_addFrameAnimationForLayer:duration:");
}

id objc_msgSend_p_addHighlight_forCachedAnnotation_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_addHighlight:forCachedAnnotation:");
}

id objc_msgSend_p_addHighlightForSelection_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_addHighlightForSelection:");
}

id objc_msgSend_p_addIntroMediaView(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_addIntroMediaView");
}

id objc_msgSend_p_addKeyCommands(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_addKeyCommands");
}

id objc_msgSend_p_addLayoutsForInfos_toArray_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_addLayoutsForInfos:toArray:");
}

id objc_msgSend_p_addOvershootAnimationWithOriginalFrame_originalTransform_targetFrame_targetTransform_completion_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_addOvershootAnimationWithOriginalFrame:originalTransform:targetFrame:targetTransform:completion:");
}

id objc_msgSend_p_addPageToContentBody(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_addPageToContentBody");
}

id objc_msgSend_p_addPagesInRange_forceLoad_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_addPagesInRange:forceLoad:");
}

id objc_msgSend_p_addPerspectiveTransform_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_addPerspectiveTransform:");
}

id objc_msgSend_p_addRemoveBookmarkIndexPath(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_addRemoveBookmarkIndexPath");
}

id objc_msgSend_p_addStrokeLayer(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_addStrokeLayer");
}

id objc_msgSend_p_addVersioningPropertiesAE_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_addVersioningPropertiesAE:");
}

id objc_msgSend_p_addViewControllerInBack_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_addViewControllerInBack:");
}

id objc_msgSend_p_addViewControllerInFront_reason_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_addViewControllerInFront:reason:");
}

id objc_msgSend_p_addWrappingRequirementsForLayout_toArray_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_addWrappingRequirementsForLayout:toArray:");
}

id objc_msgSend_p_adjustContentViewFrameForSize_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_adjustContentViewFrameForSize:");
}

id objc_msgSend_p_adjustMaskLayerOnScrollView_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_adjustMaskLayerOnScrollView:");
}

id objc_msgSend_p_adjustScale_andFrame_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_adjustScale:andFrame:");
}

id objc_msgSend_p_adjustScrollViewContentInsets(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_adjustScrollViewContentInsets");
}

id objc_msgSend_p_adjustViewsForSize_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_adjustViewsForSize:");
}

id objc_msgSend_p_affineTransformFromArray_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_affineTransformFromArray:");
}

id objc_msgSend_p_alertUserAboutAnnotationBehavior(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_alertUserAboutAnnotationBehavior");
}

id objc_msgSend_p_alertUserAboutFontDownload(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_alertUserAboutFontDownload");
}

id objc_msgSend_p_alertUserAboutRetinaUpdate(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_alertUserAboutRetinaUpdate");
}

id objc_msgSend_p_alignScrollViewForHeight_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_alignScrollViewForHeight:");
}

id objc_msgSend_p_allAnnotationsForSearchText_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_allAnnotationsForSearchText:");
}

id objc_msgSend_p_allBookmarksFetchRequest(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_allBookmarksFetchRequest");
}

id objc_msgSend_p_allContentNodeAnnotations(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_allContentNodeAnnotations");
}

id objc_msgSend_p_allSearchResults(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_allSearchResults");
}

id objc_msgSend_p_allowPaging(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_allowPaging");
}

id objc_msgSend_p_allowsPageDisplacement(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_allowsPageDisplacement");
}

id objc_msgSend_p_allowsPinchZoom(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_allowsPinchZoom");
}

id objc_msgSend_p_alwaysShowSheetNoteEditor(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_alwaysShowSheetNoteEditor");
}

id objc_msgSend_p_alwaysVisible(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_alwaysVisible");
}

id objc_msgSend_p_anchorForLink_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_anchorForLink:");
}

id objc_msgSend_p_anchorPointFromXPointer_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_anchorPointFromXPointer:");
}

id objc_msgSend_p_anchoredRangeForRelativePageIndex_forceLayout_allowAfterLayoutPoint_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_anchoredRangeForRelativePageIndex:forceLayout:allowAfterLayoutPoint:");
}

id objc_msgSend_p_angleFromQuadrant_inRect_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_angleFromQuadrant:inRect:");
}

id objc_msgSend_p_animateButtonLayer_hide_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_animateButtonLayer:hide:");
}

id objc_msgSend_p_animateFromVC_toVC_transition_completion_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_animateFromVC:toVC:transition:completion:");
}

id objc_msgSend_p_animateHorizontalOverscrollToPageIndex_duration_animationCompletionBlock_layoutCompletionBlock_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_animateHorizontalOverscrollToPageIndex:duration:animationCompletionBlock:layoutCompletionBlock:");
}

id objc_msgSend_p_animatePlacardChanges_duration_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_animatePlacardChanges:duration:");
}

id objc_msgSend_p_animateSubEffect_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_animateSubEffect:");
}

id objc_msgSend_p_animatingCallouts(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_animatingCallouts");
}

id objc_msgSend_p_animationDidStopForThumbnailView_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_animationDidStopForThumbnailView:");
}

id objc_msgSend_p_animationKeyPathForAction_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_animationKeyPathForAction:");
}

id objc_msgSend_p_animationPercentWithPercent_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_animationPercentWithPercent:");
}

id objc_msgSend_p_animationTypeNumberFromString_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_animationTypeNumberFromString:");
}

id objc_msgSend_p_animationsArray(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_animationsArray");
}

id objc_msgSend_p_annotationAtIndexPath_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_annotationAtIndexPath:");
}

id objc_msgSend_p_annotationCacheForContentNode_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_annotationCacheForContentNode:");
}

id objc_msgSend_p_annotationCellForIndexPath_withTableView_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_annotationCellForIndexPath:withTableView:");
}

id objc_msgSend_p_annotationController(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_annotationController");
}

id objc_msgSend_p_annotationForCachedAnnotation_moc_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_annotationForCachedAnnotation:moc:");
}

id objc_msgSend_p_annotationForSelection_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_annotationForSelection:");
}

id objc_msgSend_p_annotationFromCurrentSelection(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_annotationFromCurrentSelection");
}

id objc_msgSend_p_annotationNeedsMigration_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_annotationNeedsMigration:");
}

id objc_msgSend_p_annotationNeedsMigrationForAnnotationSchemaVersion_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_annotationNeedsMigrationForAnnotationSchemaVersion:");
}

id objc_msgSend_p_annotationRequestForAnnotationUUID_includeDeleted_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_annotationRequestForAnnotationUUID:includeDeleted:");
}

id objc_msgSend_p_annotationRequestForContentNode_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_annotationRequestForContentNode:");
}

id objc_msgSend_p_annotationSource(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_annotationSource");
}

id objc_msgSend_p_annotationUUIDFromSender_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_annotationUUIDFromSender:");
}

id objc_msgSend_p_annotationsAtRepPoint_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_annotationsAtRepPoint:");
}

id objc_msgSend_p_annotationsForContentNode_moc_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_annotationsForContentNode:moc:");
}

id objc_msgSend_p_annotationsForFetchRequest_moc_migrateIfNecessary_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_annotationsForFetchRequest:moc:migrateIfNecessary:");
}

id objc_msgSend_p_annotationsForManagedObjectIDs_moc_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_annotationsForManagedObjectIDs:moc:");
}

id objc_msgSend_p_annotationsInRepRect_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_annotationsInRepRect:");
}

id objc_msgSend_p_annotationsNeedsMigration_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_annotationsNeedsMigration:");
}

id objc_msgSend_p_answersHeightForWidth_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_answersHeightForWidth:");
}

id objc_msgSend_p_answersSizeForWidth_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_answersSizeForWidth:");
}

id objc_msgSend_p_answersUpdated(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_answersUpdated");
}

id objc_msgSend_p_anvilGlobalScale(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_anvilGlobalScale");
}

id objc_msgSend_p_applicationFontScaleWithFilterDelegate_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_applicationFontScaleWithFilterDelegate:");
}

id objc_msgSend_p_applyAccessibilityLabelForButton_withImageNamed_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_applyAccessibilityLabelForButton:withImageNamed:");
}

id objc_msgSend_p_applyNoteTransform_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_applyNoteTransform:");
}

id objc_msgSend_p_applyTheme(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_applyTheme");
}

id objc_msgSend_p_arrowBoundsForArrowDirection_targetPoint_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_arrowBoundsForArrowDirection:targetPoint:");
}

id objc_msgSend_p_arrowDirectionForTargetRect_targetBounds_permittedDirections_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_arrowDirectionForTargetRect:targetBounds:permittedDirections:");
}

id objc_msgSend_p_assignGutterInfo_toBodyLayout_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_assignGutterInfo:toBodyLayout:");
}

id objc_msgSend_p_autoplayEnabled(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_autoplayEnabled");
}

id objc_msgSend_p_autoplayStop_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_autoplayStop:");
}

id objc_msgSend_p_backgroundColorFill(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_backgroundColorFill");
}

id objc_msgSend_p_backgroundFill(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_backgroundFill");
}

id objc_msgSend_p_backgroundImageContentLayer(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_backgroundImageContentLayer");
}

id objc_msgSend_p_backgroundImageContentsRect(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_backgroundImageContentsRect");
}

id objc_msgSend_p_backgroundImageRep(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_backgroundImageRep");
}

id objc_msgSend_p_backgroundScrollingDidEnd(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_backgroundScrollingDidEnd");
}

id objc_msgSend_p_becameVisibleOnCanvas(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_becameVisibleOnCanvas");
}

id objc_msgSend_p_beginIgnoringWritability(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_beginIgnoringWritability");
}

id objc_msgSend_p_beginMagnification_atPoint_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_beginMagnification:atPoint:");
}

id objc_msgSend_p_beginTransitionFromPageThumbnail_transformView_freeTransform_firstThumbNailToTransition_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_beginTransitionFromPageThumbnail:transformView:freeTransform:firstThumbNailToTransition:");
}

id objc_msgSend_p_bestPopoverHeight(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_bestPopoverHeight");
}

id objc_msgSend_p_bestPopoverHeightForSections_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_bestPopoverHeightForSections:");
}

id objc_msgSend_p_bezierPathFromSavedPathElements_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_bezierPathFromSavedPathElements:");
}

id objc_msgSend_p_binSearchAnswersWidth_maxWidth_naturalWidth_height_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_binSearchAnswersWidth:maxWidth:naturalWidth:height:");
}

id objc_msgSend_p_binarySearchPageArray_forCharacterIndex_min_max_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_binarySearchPageArray:forCharacterIndex:min:max:");
}

id objc_msgSend_p_blendModeForCachedAnnotation_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_blendModeForCachedAnnotation:");
}

id objc_msgSend_p_bodyForPresentationType_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_bodyForPresentationType:");
}

id objc_msgSend_p_bodyHintAtIndex_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_bodyHintAtIndex:");
}

id objc_msgSend_p_bodyLayoutDidLayout_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_bodyLayoutDidLayout:");
}

id objc_msgSend_p_bodyRangeForPossiblyAttachedInfo_body_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_bodyRangeForPossiblyAttachedInfo:body:");
}

id objc_msgSend_p_bodyRangeForRelativePageIndex_forceLayout_allowAfterLayoutPoint_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_bodyRangeForRelativePageIndex:forceLayout:allowAfterLayoutPoint:");
}

id objc_msgSend_p_bodyRangeForStorageAnchorInFlow_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_bodyRangeForStorageAnchorInFlow:");
}

id objc_msgSend_p_bodyStorageAnchorForFlow(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_bodyStorageAnchorForFlow");
}

id objc_msgSend_p_bodyStorageAnchorForFlowInRect_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_bodyStorageAnchorForFlowInRect:");
}

id objc_msgSend_p_bookContentDidLoad(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_bookContentDidLoad");
}

id objc_msgSend_p_bookViewDidAnimateRotationToSize_withContext_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_bookViewDidAnimateRotationToSize:withContext:");
}

id objc_msgSend_p_bookViewDidRotateTransitionToSize_withContext_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_bookViewDidRotateTransitionToSize:withContext:");
}

id objc_msgSend_p_bookViewDidTransitionToSize_withContext_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_bookViewDidTransitionToSize:withContext:");
}

id objc_msgSend_p_bookViewWillRotateTransitionToSize_withTransitionCoordinator_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_bookViewWillRotateTransitionToSize:withTransitionCoordinator:");
}

id objc_msgSend_p_bookViewWillTransitionToSize_withTransitionCoordinator_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_bookViewWillTransitionToSize:withTransitionCoordinator:");
}

id objc_msgSend_p_bookmarkLayerFrame(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_bookmarkLayerFrame");
}

id objc_msgSend_p_bookmarkRequestForContentNode_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_bookmarkRequestForContentNode:");
}

id objc_msgSend_p_bookmarkSortDescriptorsAscending_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_bookmarkSortDescriptorsAscending:");
}

id objc_msgSend_p_bookmarkTitleStringForLocation_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_bookmarkTitleStringForLocation:");
}

id objc_msgSend_p_bookmarksWithMOC_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_bookmarksWithMOC:");
}

id objc_msgSend_p_bookspotAtCursor_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_bookspotAtCursor:");
}

id objc_msgSend_p_borderColorForCurrentScreenScale(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_borderColorForCurrentScreenScale");
}

id objc_msgSend_p_borderWidth(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_borderWidth");
}

id objc_msgSend_p_borderWidthForCurrentScreenScale(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_borderWidthForCurrentScreenScale");
}

id objc_msgSend_p_bottomHairlineColorForAppearance_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_bottomHairlineColorForAppearance:");
}

id objc_msgSend_p_bottomNoteCard(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_bottomNoteCard");
}

id objc_msgSend_p_bufferedHullFrameForImageFrame_calloutFrame_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_bufferedHullFrameForImageFrame:calloutFrame:");
}

id objc_msgSend_p_buildAlphabeticalIndexForGlossaryEntries_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_buildAlphabeticalIndexForGlossaryEntries:");
}

id objc_msgSend_p_buildContextTree(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_buildContextTree");
}

id objc_msgSend_p_buildIntroMediaViewController(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_buildIntroMediaViewController");
}

id objc_msgSend_p_buildPathToNodeIndex(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_buildPathToNodeIndex");
}

id objc_msgSend_p_buildSupportedSections(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_buildSupportedSections");
}

id objc_msgSend_p_buttonImageWithBackgroundImage_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_buttonImageWithBackgroundImage:");
}

id objc_msgSend_p_cacheCellHeight_annotation_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_cacheCellHeight:annotation:");
}

id objc_msgSend_p_cacheLoadExternalContentApproval_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_cacheLoadExternalContentApproval:");
}

id objc_msgSend_p_cacheMetadataDictionary(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_cacheMetadataDictionary");
}

id objc_msgSend_p_cachedAnnotationForAnnotation_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_cachedAnnotationForAnnotation:");
}

id objc_msgSend_p_cachedAnnotationNeedsMigration_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_cachedAnnotationNeedsMigration:");
}

id objc_msgSend_p_cachedAnnotationsForContentNode_moc_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_cachedAnnotationsForContentNode:moc:");
}

id objc_msgSend_p_cachedBookmarksWithMoc_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_cachedBookmarksWithMoc:");
}

id objc_msgSend_p_cachedLoadExternalContentApproval(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_cachedLoadExternalContentApproval");
}

id objc_msgSend_p_cachedPageLayoutForPageIndex_preferredLayoutController_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_cachedPageLayoutForPageIndex:preferredLayoutController:");
}

id objc_msgSend_p_cachedPathForSize_arrowDirection_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_cachedPathForSize:arrowDirection:");
}

id objc_msgSend_p_calculateAngle(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_calculateAngle");
}

id objc_msgSend_p_calculateAngleFromLocation1_location2_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_calculateAngleFromLocation1:location2:");
}

id objc_msgSend_p_calculateQuadShaderMVPMatrixWithPercent_slideSize_destRect_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_calculateQuadShaderMVPMatrixWithPercent:slideSize:destRect:");
}

id objc_msgSend_p_calculateScale(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_calculateScale");
}

id objc_msgSend_p_calculateTextPlacardNumRows_numCols_rowHeight_colWidth_lasRowNeedsCentering_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_calculateTextPlacardNumRows:numCols:rowHeight:colWidth:lasRowNeedsCentering:");
}

id objc_msgSend_p_calloutFrameWithViewScale_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_calloutFrameWithViewScale:");
}

id objc_msgSend_p_cameraGroup(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_cameraGroup");
}

id objc_msgSend_p_cameraShakePointsWithRandomGenerator_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_cameraShakePointsWithRandomGenerator:");
}

id objc_msgSend_p_canAddNote(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_canAddNote");
}

id objc_msgSend_p_canCopySelection_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_canCopySelection:");
}

id objc_msgSend_p_canDecryptFileAtURL_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_canDecryptFileAtURL:");
}

id objc_msgSend_p_canHighlight(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_canHighlight");
}

id objc_msgSend_p_canHighlightAtPoint_inView_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_canHighlightAtPoint:inView:");
}

id objc_msgSend_p_canLoadEnhancedCaptionsInformationForURL_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_canLoadEnhancedCaptionsInformationForURL:");
}

id objc_msgSend_p_canModifyAnnotations(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_canModifyAnnotations");
}

id objc_msgSend_p_canMoveToNextPage(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_canMoveToNextPage");
}

id objc_msgSend_p_canMoveToPreviousPage(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_canMoveToPreviousPage");
}

id objc_msgSend_p_canNavigateByBookDirection_bookGranularity_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_canNavigateByBookDirection:bookGranularity:");
}

id objc_msgSend_p_canNavigateByHistoryDirection_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_canNavigateByHistoryDirection:");
}

id objc_msgSend_p_canOverscroll(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_canOverscroll");
}

id objc_msgSend_p_canSearchSelection_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_canSearchSelection:");
}

id objc_msgSend_p_canShareSelection_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_canShareSelection:");
}

id objc_msgSend_p_canShowDictionaryForSelection_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_canShowDictionaryForSelection:");
}

id objc_msgSend_p_canShowGlossaryForSelection_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_canShowGlossaryForSelection:");
}

id objc_msgSend_p_canTranslateSelection_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_canTranslateSelection:");
}

id objc_msgSend_p_cancelAllContentNodeLoading(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_cancelAllContentNodeLoading");
}

id objc_msgSend_p_cancelBookOpen(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_cancelBookOpen");
}

id objc_msgSend_p_cancelDragAnimated_duration_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_cancelDragAnimated:duration:");
}

id objc_msgSend_p_cancelEditingOnAllVisibleCells(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_cancelEditingOnAllVisibleCells");
}

id objc_msgSend_p_cancelExitExpandedTimer(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_cancelExitExpandedTimer");
}

id objc_msgSend_p_cancelUIFadeOutTimer(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_cancelUIFadeOutTimer");
}

id objc_msgSend_p_canvasDidZoom(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_canvasDidZoom");
}

id objc_msgSend_p_canvasInfoForExpandedInfo_presentationType_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_canvasInfoForExpandedInfo:presentationType:");
}

id objc_msgSend_p_captionsInPanel(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_captionsInPanel");
}

id objc_msgSend_p_cardEdgeInsets(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_cardEdgeInsets");
}

id objc_msgSend_p_cellFontTextStyle(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_cellFontTextStyle");
}

id objc_msgSend_p_cellForChapterIndex_lessonIndex_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_cellForChapterIndex:lessonIndex:");
}

id objc_msgSend_p_cellForIndexPath_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_cellForIndexPath:");
}

id objc_msgSend_p_cellHeight(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_cellHeight");
}

id objc_msgSend_p_cfiForString_paragraphRange_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_cfiForString:paragraphRange:");
}

id objc_msgSend_p_cfiFragsForOffsetsComparator(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_cfiFragsForOffsetsComparator");
}

id objc_msgSend_p_changeToPageAtIndex_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_changeToPageAtIndex:");
}

id objc_msgSend_p_chapterIndexForCurrentScrollPosition(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_chapterIndexForCurrentScrollPosition");
}

id objc_msgSend_p_chapterNodeForContentNode_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_chapterNodeForContentNode:");
}

id objc_msgSend_p_chapterRelativePageIndexesCurrentlyVisibleInRect_forChapterFrame_chapterPageCount_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_chapterRelativePageIndexesCurrentlyVisibleInRect:forChapterFrame:chapterPageCount:");
}

id objc_msgSend_p_charIndexByMovingCharIndex_withEolAffinity_toBoundary_inDirection_preferPosition_isLeadingEdge_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_charIndexByMovingCharIndex:withEolAffinity:toBoundary:inDirection:preferPosition:isLeadingEdge:");
}

id objc_msgSend_p_checkQuestionAnswer_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_checkQuestionAnswer:");
}

id objc_msgSend_p_childPageLayoutAtCenterFromLayout_visibleUnscaledCenter_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_childPageLayoutAtCenterFromLayout:visibleUnscaledCenter:");
}

id objc_msgSend_p_choiceIndex(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_choiceIndex");
}

id objc_msgSend_p_circledButtonImageFromImage_radius_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_circledButtonImageFromImage:radius:");
}

id objc_msgSend_p_clampContentOffset_forViewScale_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_clampContentOffset:forViewScale:");
}

id objc_msgSend_p_clampPointToLine_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_clampPointToLine:");
}

id objc_msgSend_p_clampedScaleWithOriginalScale_originalFrame_targetFrame_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_clampedScaleWithOriginalScale:originalFrame:targetFrame:");
}

id objc_msgSend_p_cleanseStack(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_cleanseStack");
}

id objc_msgSend_p_cleanup(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_cleanup");
}

id objc_msgSend_p_cleanupAfterTransitionFromPageThumbnail_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_cleanupAfterTransitionFromPageThumbnail:");
}

id objc_msgSend_p_cleanupAfterViewUnload(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_cleanupAfterViewUnload");
}

id objc_msgSend_p_cleanupExtraLayers(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_cleanupExtraLayers");
}

id objc_msgSend_p_cleanupGlossaryPopover(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_cleanupGlossaryPopover");
}

id objc_msgSend_p_cleanupPlayerAndController(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_cleanupPlayerAndController");
}

id objc_msgSend_p_clearAnnotationCache(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_clearAnnotationCache");
}

id objc_msgSend_p_clearCanvas(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_clearCanvas");
}

id objc_msgSend_p_clearChapterViewAtIndex_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_clearChapterViewAtIndex:");
}

id objc_msgSend_p_clearDataForUnusedContentNodes(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_clearDataForUnusedContentNodes");
}

id objc_msgSend_p_clearDynamicFreeTransformController(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_clearDynamicFreeTransformController");
}

id objc_msgSend_p_clearFieldsForFutureLoading(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_clearFieldsForFutureLoading");
}

id objc_msgSend_p_clearFlushableMembers(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_clearFlushableMembers");
}

id objc_msgSend_p_clearNotesFullscreenViewController(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_clearNotesFullscreenViewController");
}

id objc_msgSend_p_clearOffscreenLayouts(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_clearOffscreenLayouts");
}

id objc_msgSend_p_clearTimer(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_clearTimer");
}

id objc_msgSend_p_clearUndoStack(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_clearUndoStack");
}

id objc_msgSend_p_clearUpperStack(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_clearUpperStack");
}

id objc_msgSend_p_clearViewMasks(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_clearViewMasks");
}

id objc_msgSend_p_closeActionGroupWithMoc_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_closeActionGroupWithMoc:");
}

id objc_msgSend_p_closeUndoGroup(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_closeUndoGroup");
}

id objc_msgSend_p_closestMatchForString_startCharIndex_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_closestMatchForString:startCharIndex:");
}

id objc_msgSend_p_colorFromArray_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_colorFromArray:");
}

id objc_msgSend_p_colorFromColor_withAlpha_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_colorFromColor:withAlpha:");
}

id objc_msgSend_p_columnFrameBasedOnStyle(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_columnFrameBasedOnStyle");
}

id objc_msgSend_p_columnMargin(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_columnMargin");
}

id objc_msgSend_p_combineBottomAndControlPanels(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_combineBottomAndControlPanels");
}

id objc_msgSend_p_commitChangesWithMoc_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_commitChangesWithMoc:");
}

id objc_msgSend_p_commonInitWithDarkMode_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_commonInitWithDarkMode:");
}

id objc_msgSend_p_completeDismiss(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_completeDismiss");
}

id objc_msgSend_p_completeDragInDirection_animationDuration_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_completeDragInDirection:animationDuration:");
}

id objc_msgSend_p_componentIsValid_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_componentIsValid:");
}

id objc_msgSend_p_computeCheckButtonStateDisabled_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_computeCheckButtonStateDisabled:");
}

id objc_msgSend_p_computeTotalHeightWithInsets_fixedOnly_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_computeTotalHeightWithInsets:fixedOnly:");
}

id objc_msgSend_p_configureCloseButton(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_configureCloseButton");
}

id objc_msgSend_p_configureTableViewController_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_configureTableViewController:");
}

id objc_msgSend_p_configureTableViewControllerColors_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_configureTableViewControllerColors:");
}

id objc_msgSend_p_configureThumbCaps(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_configureThumbCaps");
}

id objc_msgSend_p_configureThumbCapsForSize_updateImmediately_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_configureThumbCapsForSize:updateImmediately:");
}

id objc_msgSend_p_configureThumbsAndUpdateLayout_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_configureThumbsAndUpdateLayout:");
}

id objc_msgSend_p_configureToolbarsForCollapsed_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_configureToolbarsForCollapsed:");
}

id objc_msgSend_p_configureToolbarsForEditing_collapsed_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_configureToolbarsForEditing:collapsed:");
}

id objc_msgSend_p_constraintsOfSeparatorInCell_tableView_indexPath_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_constraintsOfSeparatorInCell:tableView:indexPath:");
}

id objc_msgSend_p_containerBoundsToContentBoundsTransform(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_containerBoundsToContentBoundsTransform");
}

id objc_msgSend_p_contentBoundsToContainerBoundsTransform(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_contentBoundsToContainerBoundsTransform");
}

id objc_msgSend_p_contentBoundsToUnscaledTransform(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_contentBoundsToUnscaledTransform");
}

id objc_msgSend_p_contentFrameForEntryIndex_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_contentFrameForEntryIndex:");
}

id objc_msgSend_p_contentFrameFrameForSize_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_contentFrameFrameForSize:");
}

id objc_msgSend_p_contentIsScrollable(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_contentIsScrollable");
}

id objc_msgSend_p_contentLocationForMovement_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_contentLocationForMovement:");
}

id objc_msgSend_p_contentLocationUsingWellsForMovement_velocity_currentLocation_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_contentLocationUsingWellsForMovement:velocity:currentLocation:");
}

id objc_msgSend_p_contentLocationWithMovement_snapToBounds_overscrolled_controller_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_contentLocationWithMovement:snapToBounds:overscrolled:controller:");
}

id objc_msgSend_p_contentNodeAnchorFromLink_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_contentNodeAnchorFromLink:");
}

id objc_msgSend_p_contentNodeForBodyStorage_forceLoad_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_contentNodeForBodyStorage:forceLoad:");
}

id objc_msgSend_p_contentNodeForCachedAnnotation_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_contentNodeForCachedAnnotation:");
}

id objc_msgSend_p_contentNodeForInfo_presentationType_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_contentNodeForInfo:presentationType:");
}

id objc_msgSend_p_contentUnscaledToBoundsTransform(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_contentUnscaledToBoundsTransform");
}

id objc_msgSend_p_contentsRectForDestination_shouldFill_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_contentsRectForDestination:shouldFill:");
}

id objc_msgSend_p_contentsRectForItem_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_contentsRectForItem:");
}

id objc_msgSend_p_contentsScale(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_contentsScale");
}

id objc_msgSend_p_controlsCanvasController(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_controlsCanvasController");
}

id objc_msgSend_p_controlsVisibleWithAdornmentsVisible_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_controlsVisibleWithAdornmentsVisible:");
}

id objc_msgSend_p_createAttributedString(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_createAttributedString");
}

id objc_msgSend_p_createGlossaryEntryViewController(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_createGlossaryEntryViewController");
}

id objc_msgSend_p_createGradientBackgroundLayerIfNeeded(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_createGradientBackgroundLayerIfNeeded");
}

id objc_msgSend_p_createImageFromImageProviderBlock_withMaxSize_outNativeSize_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_createImageFromImageProviderBlock:withMaxSize:outNativeSize:");
}

id objc_msgSend_p_createModelSearchResultForTerm_searchContext_occurrence_occurrenceIndex_previousEntry_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_createModelSearchResultForTerm:searchContext:occurrence:occurrenceIndex:previousEntry:");
}

id objc_msgSend_p_createNewNoteCardLayer(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_createNewNoteCardLayer");
}

id objc_msgSend_p_createSideBorderView(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_createSideBorderView");
}

id objc_msgSend_p_createSubEffectsFromDict_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_createSubEffectsFromDict:");
}

id objc_msgSend_p_createViewIfNeededWithFrame_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_createViewIfNeededWithFrame:");
}

id objc_msgSend_p_createViews(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_createViews");
}

id objc_msgSend_p_crossfadeLayerOut_fadeLayerIn_completion_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_crossfadeLayerOut:fadeLayerIn:completion:");
}

id objc_msgSend_p_currentEntryIndex(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_currentEntryIndex");
}

id objc_msgSend_p_currentFlowSizeScale(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_currentFlowSizeScale");
}

id objc_msgSend_p_currentImageContentLayer(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_currentImageContentLayer");
}

id objc_msgSend_p_currentImageRep(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_currentImageRep");
}

id objc_msgSend_p_currentPageSize(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_currentPageSize");
}

id objc_msgSend_p_currentQuestion(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_currentQuestion");
}

id objc_msgSend_p_currentScrollableCanvasController(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_currentScrollableCanvasController");
}

id objc_msgSend_p_currentSpreadSize(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_currentSpreadSize");
}

id objc_msgSend_p_curtainColor(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_curtainColor");
}

id objc_msgSend_p_customButtonWithFrame_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_customButtonWithFrame:");
}

id objc_msgSend_p_customizeWithTheme_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_customizeWithTheme:");
}

id objc_msgSend_p_dataController(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_dataController");
}

id objc_msgSend_p_dataSourceForTableView_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_dataSourceForTableView:");
}

id objc_msgSend_p_defaultImage(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_defaultImage");
}

id objc_msgSend_p_defaultListLabelParagraphStyleFromStyle_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_defaultListLabelParagraphStyleFromStyle:");
}

id objc_msgSend_p_definitionViewFrame(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_definitionViewFrame");
}

id objc_msgSend_p_deleteNotesAtIndexPaths_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_deleteNotesAtIndexPaths:");
}

id objc_msgSend_p_dequeueRecycledEntryController(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_dequeueRecycledEntryController");
}

id objc_msgSend_p_desiredCanvasSize(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_desiredCanvasSize");
}

id objc_msgSend_p_desiredVisibleLayoutsForRect_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_desiredVisibleLayoutsForRect:");
}

id objc_msgSend_p_desiredWidth(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_desiredWidth");
}

id objc_msgSend_p_destroyBodyLayoutState(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_destroyBodyLayoutState");
}

id objc_msgSend_p_detailsViewIsCompactWidth(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_detailsViewIsCompactWidth");
}

id objc_msgSend_p_diagramFrameWithViewScale_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_diagramFrameWithViewScale:");
}

id objc_msgSend_p_didBeginWithPosition_boundsPosition_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_didBeginWithPosition:boundsPosition:");
}

id objc_msgSend_p_didCreateView(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_didCreateView");
}

id objc_msgSend_p_didDragInsideDrawer_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_didDragInsideDrawer:");
}

id objc_msgSend_p_didEndWithPosition_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_didEndWithPosition:");
}

id objc_msgSend_p_didFade(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_didFade");
}

id objc_msgSend_p_didFinishTransitionWithSize_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_didFinishTransitionWithSize:");
}

id objc_msgSend_p_didLayout(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_didLayout");
}

id objc_msgSend_p_dismissActiveAnimated_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_dismissActiveAnimated:");
}

id objc_msgSend_p_dismissExpandedAnimatedWithCompletionBlock_freeTransformDidEnd_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_dismissExpandedAnimatedWithCompletionBlock:freeTransformDidEnd:");
}

id objc_msgSend_p_dismissExpandedImmediateWithCompletionBlock_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_dismissExpandedImmediateWithCompletionBlock:");
}

id objc_msgSend_p_dismissGlossaryPopoverAnimated_cleanup_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_dismissGlossaryPopoverAnimated:cleanup:");
}

id objc_msgSend_p_dismissKeyboardOnScroll(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_dismissKeyboardOnScroll");
}

id objc_msgSend_p_dismissSearchKeyboard(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_dismissSearchKeyboard");
}

id objc_msgSend_p_displayAttributesForParameters_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_displayAttributesForParameters:");
}

id objc_msgSend_p_displayPageNumberForTileEntry_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_displayPageNumberForTileEntry:");
}

id objc_msgSend_p_displaySectionForSection_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_displaySectionForSection:");
}

id objc_msgSend_p_distanceFromWellRect_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_distanceFromWellRect:");
}

id objc_msgSend_p_dividerLayoutForPageIndex_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_dividerLayoutForPageIndex:");
}

id objc_msgSend_p_documentNavigatorFromNotification_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_documentNavigatorFromNotification:");
}

id objc_msgSend_p_documentURIForResourcePath_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_documentURIForResourcePath:");
}

id objc_msgSend_p_doesRep_containCharIndex_isStart_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_doesRep:containCharIndex:isStart:");
}

id objc_msgSend_p_dotOptionLayerWithColor_size_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_dotOptionLayerWithColor:size:");
}

id objc_msgSend_p_dragHosting(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_dragHosting");
}

id objc_msgSend_p_dragLayerToPosition_boundsPosition_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_dragLayerToPosition:boundsPosition:");
}

id objc_msgSend_p_draggingPlacardIndexForRep_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_draggingPlacardIndexForRep:");
}

id objc_msgSend_p_drawFlipWithPercent_currentBuffer_texture_encoder_isMotionBlurred_isUpdating_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_drawFlipWithPercent:currentBuffer:texture:encoder:isMotionBlurred:isUpdating:");
}

id objc_msgSend_p_drawFlopVertical_encoder_metalTexture_oldMetalTexture_isUpdating_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_drawFlopVertical:encoder:metalTexture:oldMetalTexture:isUpdating:");
}

id objc_msgSend_p_drawHighlightLine_forAnnotation_scale_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_drawHighlightLine:forAnnotation:scale:");
}

id objc_msgSend_p_drawMetalParticleSystemsWithEncoder_texture_percent_sparkles_particleSystemOpacity_metalContext_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_drawMetalParticleSystemsWithEncoder:texture:percent:sparkles:particleSystemOpacity:metalContext:");
}

id objc_msgSend_p_drawObject_percent_encoder_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_drawObject:percent:encoder:");
}

id objc_msgSend_p_drawParticleSystemsWithPercent_sparkles_particleSystemOpacity_context_renderEncoder_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_drawParticleSystemsWithPercent:sparkles:particleSystemOpacity:context:renderEncoder:");
}

id objc_msgSend_p_drawTwistWithPercent_currentBuffer_texture_oldTexture_encoder_isMotionBlurred_isUpdating_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_drawTwistWithPercent:currentBuffer:texture:oldTexture:encoder:isMotionBlurred:isUpdating:");
}

id objc_msgSend_p_drawWithContext_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_drawWithContext:");
}

id objc_msgSend_p_drawWithMetalContext_renderEncoder_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_drawWithMetalContext:renderEncoder:");
}

id objc_msgSend_p_drawerContainsPoint_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_drawerContainsPoint:");
}

id objc_msgSend_p_drawerFrameSize(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_drawerFrameSize");
}

id objc_msgSend_p_drawerPositionForImagePlacard_withSize_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_drawerPositionForImagePlacard:withSize:");
}

id objc_msgSend_p_drawerPositionForPlacard_withSize_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_drawerPositionForPlacard:withSize:");
}

id objc_msgSend_p_drawerPositionForTextPlacard_withSize_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_drawerPositionForTextPlacard:withSize:");
}

id objc_msgSend_p_duplicateCameraAndAddToGroupAtSceneCenter(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_duplicateCameraAndAddToGroupAtSceneCenter");
}

id objc_msgSend_p_effectsArray(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_effectsArray");
}

id objc_msgSend_p_elementInfoForElementName_elementNamespace_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_elementInfoForElementName:elementNamespace:");
}

id objc_msgSend_p_enclosingInteractiveCanvasController(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_enclosingInteractiveCanvasController");
}

id objc_msgSend_p_endIgnoringWritability(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_endIgnoringWritability");
}

id objc_msgSend_p_ensureCFIForAEAnnotation_moc_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_ensureCFIForAEAnnotation:moc:");
}

id objc_msgSend_p_ensureDataForContentNodes(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_ensureDataForContentNodes");
}

id objc_msgSend_p_ensureGlossaryViewController(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_ensureGlossaryViewController");
}

id objc_msgSend_p_ensureInNavigationUnitForContentNode_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_ensureInNavigationUnitForContentNode:");
}

id objc_msgSend_p_ensureLayoutThroughRelativePageRange_withLayoutController_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_ensureLayoutThroughRelativePageRange:withLayoutController:");
}

id objc_msgSend_p_ensureLoaded(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_ensureLoaded");
}

id objc_msgSend_p_ensureTypesetterCreated(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_ensureTypesetterCreated");
}

id objc_msgSend_p_ensureVisibleAbsolutePhysicalPageIndexFromFullscreen(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_ensureVisibleAbsolutePhysicalPageIndexFromFullscreen");
}

id objc_msgSend_p_entryDidLoad_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_entryDidLoad:");
}

id objc_msgSend_p_entryIndexForContentFrame_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_entryIndexForContentFrame:");
}

id objc_msgSend_p_entryNameForPath_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_entryNameForPath:");
}

id objc_msgSend_p_enumerateBoundsRectsForSelection_includeSpaceBefore_includeSpaceAfter_includeLeading_withBlock_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_enumerateBoundsRectsForSelection:includeSpaceBefore:includeSpaceAfter:includeLeading:withBlock:");
}

id objc_msgSend_p_enumerateLinesForWidth_withBlock_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_enumerateLinesForWidth:withBlock:");
}

id objc_msgSend_p_enumerateLinesWithBlock_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_enumerateLinesWithBlock:");
}

id objc_msgSend_p_enumerateRelativePageRange_acrossContentNodesUsingBlock_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_enumerateRelativePageRange:acrossContentNodesUsingBlock:");
}

id objc_msgSend_p_erasableBounds(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_erasableBounds");
}

id objc_msgSend_p_evaluateAnswerToQuestion_updateScore_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_evaluateAnswerToQuestion:updateScore:");
}

id objc_msgSend_p_eventsArray(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_eventsArray");
}

id objc_msgSend_p_expandCanvasRectIfFlow_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_expandCanvasRectIfFlow:");
}

id objc_msgSend_p_expandableInfoForInfo_forceLoad_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_expandableInfoForInfo:forceLoad:");
}

id objc_msgSend_p_expandedLayoutGeometryForFrame_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_expandedLayoutGeometryForFrame:");
}

id objc_msgSend_p_expandedPaddingAfterCaption(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_expandedPaddingAfterCaption");
}

id objc_msgSend_p_expandedStageDrawableWantsFreeTransform(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_expandedStageDrawableWantsFreeTransform");
}

id objc_msgSend_p_expandedViewControllerForRep_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_expandedViewControllerForRep:");
}

id objc_msgSend_p_expandedViewportFrameInPortalRect_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_expandedViewportFrameInPortalRect:");
}

id objc_msgSend_p_expandedWidgetLayoutFrame(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_expandedWidgetLayoutFrame");
}

id objc_msgSend_p_expandedWidgetStageFrame(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_expandedWidgetStageFrame");
}

id objc_msgSend_p_extendExistingAnnotationForRange_storage_contentNode_style_moc_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_extendExistingAnnotationForRange:storage:contentNode:style:moc:");
}

id objc_msgSend_p_fadeOutCurtain(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_fadeOutCurtain");
}

id objc_msgSend_p_failWithGestureState_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_failWithGestureState:");
}

id objc_msgSend_p_fallbackTextColorToContrastWidgetBackground(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_fallbackTextColorToContrastWidgetBackground");
}

id objc_msgSend_p_fetchResponseForQuestionID_moc_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_fetchResponseForQuestionID:moc:");
}

id objc_msgSend_p_fetchReviewWidgetDataForWidgetID_moc_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_fetchReviewWidgetDataForWidgetID:moc:");
}

id objc_msgSend_p_fetchedResultsControllerBookmarkIndexPathToTableViewBookmarkIndexPath_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_fetchedResultsControllerBookmarkIndexPathToTableViewBookmarkIndexPath:");
}

id objc_msgSend_p_fillModefromDictionary_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_fillModefromDictionary:");
}

id objc_msgSend_p_filteredOutURLSchemes(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_filteredOutURLSchemes");
}

id objc_msgSend_p_findConstraint_onView_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_findConstraint:onView:");
}

id objc_msgSend_p_finishedRenderJob_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_finishedRenderJob:");
}

id objc_msgSend_p_fireCanvasDidZoomCompletion(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_fireCanvasDidZoomCompletion");
}

id objc_msgSend_p_fireworksSystemsForTR_build_context_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_fireworksSystemsForTR:build:context:");
}

id objc_msgSend_p_firstIndexedWordInQuery_outWordRange_outHasMultipleWords_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_firstIndexedWordInQuery:outWordRange:outHasMultipleWords:");
}

id objc_msgSend_p_firstVisibleThumbnailPageIndexInCurrentChapter(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_firstVisibleThumbnailPageIndexInCurrentChapter");
}

id objc_msgSend_p_fixScrollViewToMatchCanvas(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_fixScrollViewToMatchCanvas");
}

id objc_msgSend_p_fixupChapterViewFrames(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_fixupChapterViewFrames");
}

id objc_msgSend_p_flameSystemForTR_build_randomGenerator_metalContext_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_flameSystemForTR:build:randomGenerator:metalContext:");
}

id objc_msgSend_p_flippedImageBounds(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_flippedImageBounds");
}

id objc_msgSend_p_flowPivotRangeForBodyAnchor_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_flowPivotRangeForBodyAnchor:");
}

id objc_msgSend_p_followDocumentAnchor_pulse_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_followDocumentAnchor:pulse:");
}

id objc_msgSend_p_forceButtonVisible(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_forceButtonVisible");
}

id objc_msgSend_p_forgetActivePopover_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_forgetActivePopover:");
}

id objc_msgSend_p_frameForChoiceIndex_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_frameForChoiceIndex:");
}

id objc_msgSend_p_frameForHUDUI(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_frameForHUDUI");
}

id objc_msgSend_p_frameForOnCanvasUI(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_frameForOnCanvasUI");
}

id objc_msgSend_p_frameForTextures(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_frameForTextures");
}

id objc_msgSend_p_freeAnnotationRanges(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_freeAnnotationRanges");
}

id objc_msgSend_p_generateHintForPageIndex_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_generateHintForPageIndex:");
}

id objc_msgSend_p_generateTextures(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_generateTextures");
}

id objc_msgSend_p_geometry_offsetBy_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_geometry:offsetBy:");
}

id objc_msgSend_p_gestureHitLink_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_gestureHitLink:");
}

id objc_msgSend_p_gestureIsHandleable_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_gestureIsHandleable:");
}

id objc_msgSend_p_getConstraint_onView_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_getConstraint:onView:");
}

id objc_msgSend_p_getReadingLocationWithMOC_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_getReadingLocationWithMOC:");
}

id objc_msgSend_p_getWidgetIDsForInfo_completion_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_getWidgetIDsForInfo:completion:");
}

id objc_msgSend_p_globalScale(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_globalScale");
}

id objc_msgSend_p_glossaryEntryForTerm_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_glossaryEntryForTerm:");
}

id objc_msgSend_p_glossaryTargetRect(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_glossaryTargetRect");
}

id objc_msgSend_p_goToPage_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_goToPage:");
}

id objc_msgSend_p_gotoNextDistinctBookspot(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_gotoNextDistinctBookspot");
}

id objc_msgSend_p_gotoNextImmediateBookspot(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_gotoNextImmediateBookspot");
}

id objc_msgSend_p_gotoPrevDistinctBookspot(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_gotoPrevDistinctBookspot");
}

id objc_msgSend_p_gotoPrevImmediateBookspot(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_gotoPrevImmediateBookspot");
}

id objc_msgSend_p_groupedlLayerAnimationsFromAnimationDictionary_forLayer_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_groupedlLayerAnimationsFromAnimationDictionary:forLayer:");
}

id objc_msgSend_p_handleDelayedCardUpdate(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_handleDelayedCardUpdate");
}

id objc_msgSend_p_handleDoubleTap_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_handleDoubleTap:");
}

id objc_msgSend_p_handleHighlightChange_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_handleHighlightChange:");
}

id objc_msgSend_p_handleLongPress_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_handleLongPress:");
}

id objc_msgSend_p_handleOverscroll_state_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_handleOverscroll:state:");
}

id objc_msgSend_p_handleSingleTap_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_handleSingleTap:");
}

id objc_msgSend_p_handleTapAtPoint_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_handleTapAtPoint:");
}

id objc_msgSend_p_handleURL_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_handleURL:");
}

id objc_msgSend_p_hasBookmark(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_hasBookmark");
}

id objc_msgSend_p_hasDestinationPage(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_hasDestinationPage");
}

id objc_msgSend_p_hasHyperlink(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_hasHyperlink");
}

id objc_msgSend_p_hasIndividualCaptions(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_hasIndividualCaptions");
}

id objc_msgSend_p_hasNextBookspot(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_hasNextBookspot");
}

id objc_msgSend_p_hasPageScrubberControl(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_hasPageScrubberControl");
}

id objc_msgSend_p_hasPrevBookspot(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_hasPrevBookspot");
}

id objc_msgSend_p_hasSourceRepForInfo_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_hasSourceRepForInfo:");
}

id objc_msgSend_p_hasTargetRepForInfo_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_hasTargetRepForInfo:");
}

id objc_msgSend_p_hasValidViewForFreeTransform(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_hasValidViewForFreeTransform");
}

id objc_msgSend_p_heightForPortion_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_heightForPortion:");
}

id objc_msgSend_p_heightOfGutterDrawablesForBodyLayout_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_heightOfGutterDrawablesForBodyLayout:");
}

id objc_msgSend_p_hideFallbackImageView(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_hideFallbackImageView");
}

id objc_msgSend_p_hideHUDView(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_hideHUDView");
}

id objc_msgSend_p_hideMovieControlsAnimated_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_hideMovieControlsAnimated:");
}

id objc_msgSend_p_hideNavigationBar(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_hideNavigationBar");
}

id objc_msgSend_p_highlightFromAnnotation_range_rect_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_highlightFromAnnotation:range:rect:");
}

id objc_msgSend_p_highlightLayerForThumbnailSize_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_highlightLayerForThumbnailSize:");
}

id objc_msgSend_p_highlightLineFromLineSelection_isUnderline_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_highlightLineFromLineSelection:isUnderline:");
}

id objc_msgSend_p_highlightThumbTargetsIfShouldInThumb_atPoint_coverFullThumb_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_highlightThumbTargetsIfShouldInThumb:atPoint:coverFullThumb:");
}

id objc_msgSend_p_hitTest_noteCard_outset_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_hitTest:noteCard:outset:");
}

id objc_msgSend_p_hoistMaskLayer(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_hoistMaskLayer");
}

id objc_msgSend_p_horizontalOverscrollAnimationDuration(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_horizontalOverscrollAnimationDuration");
}

id objc_msgSend_p_horizontalOverscrollNextChapter(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_horizontalOverscrollNextChapter");
}

id objc_msgSend_p_horizontalOverscrollPreviousChapter(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_horizontalOverscrollPreviousChapter");
}

id objc_msgSend_p_host(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_host");
}

id objc_msgSend_p_hullPoint_inVertexRect_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_hullPoint:inVertexRect:");
}

id objc_msgSend_p_hyperlink(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_hyperlink");
}

id objc_msgSend_p_hyperlinksArray(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_hyperlinksArray");
}

id objc_msgSend_p_idealForMaxSize_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_idealForMaxSize:");
}

id objc_msgSend_p_imageForState_highlighted_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_imageForState:highlighted:");
}

id objc_msgSend_p_imageFrameWithViewScale_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_imageFrameWithViewScale:");
}

id objc_msgSend_p_imageIsMostlyBlack(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_imageIsMostlyBlack");
}

id objc_msgSend_p_imagePlacement(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_imagePlacement");
}

id objc_msgSend_p_imageRep(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_imageRep");
}

id objc_msgSend_p_imageRepForItem_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_imageRepForItem:");
}

id objc_msgSend_p_imageSize(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_imageSize");
}

id objc_msgSend_p_indexForItem_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_indexForItem:");
}

id objc_msgSend_p_indexPathForCell_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_indexPathForCell:");
}

id objc_msgSend_p_indexPathForChapterIndex_lessonIndex_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_indexPathForChapterIndex:lessonIndex:");
}

id objc_msgSend_p_indicatorAtIndex_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_indicatorAtIndex:");
}

id objc_msgSend_p_indicatorCenterAtIndex_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_indicatorCenterAtIndex:");
}

id objc_msgSend_p_inferNavigationUnits(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_inferNavigationUnits");
}

id objc_msgSend_p_inflection_matchesWord_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_inflection:matchesWord:");
}

id objc_msgSend_p_infoDictionary(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_infoDictionary");
}

id objc_msgSend_p_infoForNodeUniqueID_inContentNode_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_infoForNodeUniqueID:inContentNode:");
}

id objc_msgSend_p_initCommon(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_initCommon");
}

id objc_msgSend_p_initMetalLayerIfNeeded(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_initMetalLayerIfNeeded");
}

id objc_msgSend_p_initWithFrame_theme_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_initWithFrame:theme:");
}

id objc_msgSend_p_initialQuestionIndex(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_initialQuestionIndex");
}

id objc_msgSend_p_initialStatesArray(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_initialStatesArray");
}

id objc_msgSend_p_initializeFields(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_initializeFields");
}

id objc_msgSend_p_initializeMoviePlayerController(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_initializeMoviePlayerController");
}

id objc_msgSend_p_initializeTheme_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_initializeTheme:");
}

id objc_msgSend_p_injectFileContents_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_injectFileContents:");
}

id objc_msgSend_p_innerMaskLayerWithBounds_path_fadeSizes_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_innerMaskLayerWithBounds:path:fadeSizes:");
}

id objc_msgSend_p_innerMaskLayerWithBounds_path_fadeSizes_maskGroupVerticalInset_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_innerMaskLayerWithBounds:path:fadeSizes:maskGroupVerticalInset:");
}

id objc_msgSend_p_insertBodyAndValidatedFloatingLayouts(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_insertBodyAndValidatedFloatingLayouts");
}

id objc_msgSend_p_insertChildLayoutForInfo_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_insertChildLayoutForInfo:");
}

id objc_msgSend_p_insertDVCInBack(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_insertDVCInBack");
}

id objc_msgSend_p_insertDVCInBackAnimated_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_insertDVCInBackAnimated:");
}

id objc_msgSend_p_insertPageLayoutIntoCache_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_insertPageLayoutIntoCache:");
}

id objc_msgSend_p_insetAmount(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_insetAmount");
}

id objc_msgSend_p_insetScrollerContentEdges(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_insetScrollerContentEdges");
}

id objc_msgSend_p_insetsWithViewScale_viewportBounds_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_insetsWithViewScale:viewportBounds:");
}

id objc_msgSend_p_integralScaledThumbnailHighlightWidth(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_integralScaledThumbnailHighlightWidth");
}

id objc_msgSend_p_interactionDidEnd(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_interactionDidEnd");
}

id objc_msgSend_p_interactionWillStart(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_interactionWillStart");
}

id objc_msgSend_p_interfaceOrientation(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_interfaceOrientation");
}

id objc_msgSend_p_introMediaIsUnseenAndSeeable(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_introMediaIsUnseenAndSeeable");
}

id objc_msgSend_p_invaliatePaginationData(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_invaliatePaginationData");
}

id objc_msgSend_p_invalidateBodyLayoutOnPageIndex_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_invalidateBodyLayoutOnPageIndex:");
}

id objc_msgSend_p_invalidateButtonImage(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_invalidateButtonImage");
}

id objc_msgSend_p_invalidateCachedGeometry(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_invalidateCachedGeometry");
}

id objc_msgSend_p_invalidateCaches(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_invalidateCaches");
}

id objc_msgSend_p_invalidateCalloutReps(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_invalidateCalloutReps");
}

id objc_msgSend_p_invalidateExternal(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_invalidateExternal");
}

id objc_msgSend_p_invalidateTimer(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_invalidateTimer");
}

id objc_msgSend_p_isAtEnd(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_isAtEnd");
}

id objc_msgSend_p_isAutoplayAllowed(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_isAutoplayAllowed");
}

id objc_msgSend_p_isBottomCardParameters_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_isBottomCardParameters:");
}

id objc_msgSend_p_isBottomViewVisible(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_isBottomViewVisible");
}

id objc_msgSend_p_isCollapsed(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_isCollapsed");
}

id objc_msgSend_p_isCompact(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_isCompact");
}

id objc_msgSend_p_isCompactFlowPresentation(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_isCompactFlowPresentation");
}

id objc_msgSend_p_isCompactFlowPresentationForSectionController_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_isCompactFlowPresentationForSectionController:");
}

id objc_msgSend_p_isCompactHeight(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_isCompactHeight");
}

id objc_msgSend_p_isCompactWidth(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_isCompactWidth");
}

id objc_msgSend_p_isCustomApplePubPageLink(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_isCustomApplePubPageLink");
}

id objc_msgSend_p_isEditing(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_isEditing");
}

id objc_msgSend_p_isExpanded(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_isExpanded");
}

id objc_msgSend_p_isExpanding(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_isExpanding");
}

id objc_msgSend_p_isFamilyDeauthorizedError_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_isFamilyDeauthorizedError:");
}

id objc_msgSend_p_isGestureWithinPressableBounds_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_isGestureWithinPressableBounds:");
}

id objc_msgSend_p_isGutterInfo_assgnedToBodyLayout_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_isGutterInfo:assgnedToBodyLayout:");
}

id objc_msgSend_p_isGutterInfoAssigned_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_isGutterInfoAssigned:");
}

id objc_msgSend_p_isInBodyRep(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_isInBodyRep");
}

id objc_msgSend_p_isInTwoPageMode_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_isInTwoPageMode:");
}

id objc_msgSend_p_isIndexedWord_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_isIndexedWord:");
}

id objc_msgSend_p_isLayoutComplete(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_isLayoutComplete");
}

id objc_msgSend_p_isPageInteractionMode(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_isPageInteractionMode");
}

id objc_msgSend_p_isPageLocationApplicable(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_isPageLocationApplicable");
}

id objc_msgSend_p_isPageLocationValid_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_isPageLocationValid:");
}

id objc_msgSend_p_isPreorderBook(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_isPreorderBook");
}

id objc_msgSend_p_isSampleBook(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_isSampleBook");
}

id objc_msgSend_p_isSearchVisible(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_isSearchVisible");
}

id objc_msgSend_p_isSelectionSingleAnchoredDrawableAttachment(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_isSelectionSingleAnchoredDrawableAttachment");
}

id objc_msgSend_p_isSinglePageChapter(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_isSinglePageChapter");
}

id objc_msgSend_p_isStageBackgroundTransparent(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_isStageBackgroundTransparent");
}

id objc_msgSend_p_isTOCLandscape(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_isTOCLandscape");
}

id objc_msgSend_p_isTOCViewController_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_isTOCViewController:");
}

id objc_msgSend_p_isTableViewInEditMode_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_isTableViewInEditMode:");
}

id objc_msgSend_p_isToggleBookmarkGesture_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_isToggleBookmarkGesture:");
}

id objc_msgSend_p_isToolbarHidden_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_isToolbarHidden:");
}

id objc_msgSend_p_isTopCardParameters_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_isTopCardParameters:");
}

id objc_msgSend_p_itemAtIndex_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_itemAtIndex:");
}

id objc_msgSend_p_itemForZoomableCanvasController_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_itemForZoomableCanvasController:");
}

id objc_msgSend_p_itemFromChildLayout_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_itemFromChildLayout:");
}

id objc_msgSend_p_itemIndexForZoomableCanvasController_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_itemIndexForZoomableCanvasController:");
}

id objc_msgSend_p_jumpToAnnotationAnchor_pulse_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_jumpToAnnotationAnchor:pulse:");
}

id objc_msgSend_p_jumpToBKCFIString_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_jumpToBKCFIString:");
}

id objc_msgSend_p_jumpToContentNodeAnchor_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_jumpToContentNodeAnchor:");
}

id objc_msgSend_p_jumpToFragment_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_jumpToFragment:");
}

id objc_msgSend_p_jumpToLocation_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_jumpToLocation:");
}

id objc_msgSend_p_jumpToPageAnchor_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_jumpToPageAnchor:");
}

id objc_msgSend_p_jumpToStorageAnchor_pulse_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_jumpToStorageAnchor:pulse:");
}

id objc_msgSend_p_jumpWithBlock_andPulseStorageAnchor_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_jumpWithBlock:andPulseStorageAnchor:");
}

id objc_msgSend_p_jumpWithBlock_annotation_noteSelectionRange_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_jumpWithBlock:annotation:noteSelectionRange:");
}

id objc_msgSend_p_keyForContentNode_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_keyForContentNode:");
}

id objc_msgSend_p_kickOffIntroMediaIfNecessary(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_kickOffIntroMediaIfNecessary");
}

id objc_msgSend_p_kickOffQuery_giveSuggestions_completionBlock_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_kickOffQuery:giveSuggestions:completionBlock:");
}

id objc_msgSend_p_killDrawableLayouts_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_killDrawableLayouts:");
}

id objc_msgSend_p_labelColor(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_labelColor");
}

id objc_msgSend_p_labelWithText_frame_textColor_tag_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_labelWithText:frame:textColor:tag:");
}

id objc_msgSend_p_largeThumbnail(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_largeThumbnail");
}

id objc_msgSend_p_largestDividedAngleInRect_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_largestDividedAngleInRect:");
}

id objc_msgSend_p_lastPageIndexWithBodyAfterPageIndex_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_lastPageIndexWithBodyAfterPageIndex:");
}

id objc_msgSend_p_lastValidPageHint(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_lastValidPageHint");
}

id objc_msgSend_p_layerForCallout_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_layerForCallout:");
}

id objc_msgSend_p_layerForItem_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_layerForItem:");
}

id objc_msgSend_p_layerForPageIndex_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_layerForPageIndex:");
}

id objc_msgSend_p_layerForSelectingPage(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_layerForSelectingPage");
}

id objc_msgSend_p_layerForState_pageIndex_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_layerForState:pageIndex:");
}

id objc_msgSend_p_layoutBodyLayout_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_layoutBodyLayout:");
}

id objc_msgSend_p_layoutCanvasForSize_duration_forceBackgroundLayout_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_layoutCanvasForSize:duration:forceBackgroundLayout:");
}

id objc_msgSend_p_layoutContentDownwardFromBodyIndex_amount_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_layoutContentDownwardFromBodyIndex:amount:");
}

id objc_msgSend_p_layoutContentFrame(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_layoutContentFrame");
}

id objc_msgSend_p_layoutContentUpwardFromBodyIndex_amount_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_layoutContentUpwardFromBodyIndex:amount:");
}

id objc_msgSend_p_layoutEndCharIndex(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_layoutEndCharIndex");
}

id objc_msgSend_p_layoutEndRange(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_layoutEndRange");
}

id objc_msgSend_p_layoutForDrawable_inContainingLayout_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_layoutForDrawable:inContainingLayout:");
}

id objc_msgSend_p_layoutForInfo_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_layoutForInfo:");
}

id objc_msgSend_p_layoutForPortion_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_layoutForPortion:");
}

id objc_msgSend_p_layoutGeometryForStageDrawable(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_layoutGeometryForStageDrawable");
}

id objc_msgSend_p_layoutGutterDrawables(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_layoutGutterDrawables");
}

id objc_msgSend_p_layoutGutterDrawablesForBodyLayout_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_layoutGutterDrawablesForBodyLayout:");
}

id objc_msgSend_p_layoutLayersWithFrame_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_layoutLayersWithFrame:");
}

id objc_msgSend_p_layoutLine(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_layoutLine");
}

id objc_msgSend_p_layoutManager(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_layoutManager");
}

id objc_msgSend_p_layoutNextPageForLayoutController_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_layoutNextPageForLayoutController:");
}

id objc_msgSend_p_layoutPanels(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_layoutPanels");
}

id objc_msgSend_p_layoutSinglePageChapter(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_layoutSinglePageChapter");
}

id objc_msgSend_p_layoutStyleProvider(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_layoutStyleProvider");
}

id objc_msgSend_p_layoutSublayers(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_layoutSublayers");
}

id objc_msgSend_p_layoutThroughPageIndex_forLayoutController_clearOffscreenInfos_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_layoutThroughPageIndex:forLayoutController:clearOffscreenInfos:");
}

id objc_msgSend_p_layoutViewsForOrientation_duration_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_layoutViewsForOrientation:duration:");
}

id objc_msgSend_p_layoutViewsWithDuration_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_layoutViewsWithDuration:");
}

id objc_msgSend_p_layoutWithSize_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_layoutWithSize:");
}

id objc_msgSend_p_leftThirdBounds(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_leftThirdBounds");
}

id objc_msgSend_p_lessonNodeForContentNode_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_lessonNodeForContentNode:");
}

id objc_msgSend_p_libraryManagerInfo(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_libraryManagerInfo");
}

id objc_msgSend_p_lineSearchReferencesForSearchReferences_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_lineSearchReferencesForSearchReferences:");
}

id objc_msgSend_p_lineSelectionsForSelection_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_lineSelectionsForSelection:");
}

id objc_msgSend_p_linkContentNodeIsConsistentWithOurs_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_linkContentNodeIsConsistentWithOurs:");
}

id objc_msgSend_p_loadCachedPillButtonImages(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_loadCachedPillButtonImages");
}

id objc_msgSend_p_loadEntryAtIndex_scrollLocation_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_loadEntryAtIndex:scrollLocation:");
}

id objc_msgSend_p_loadHeaderImageAndUpdateLayout(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_loadHeaderImageAndUpdateLayout");
}

id objc_msgSend_p_loadImageWithFilename_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_loadImageWithFilename:");
}

id objc_msgSend_p_loadNavigationOverlay(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_loadNavigationOverlay");
}

id objc_msgSend_p_loadSceneFromURL_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_loadSceneFromURL:");
}

id objc_msgSend_p_loadTitleLabel(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_loadTitleLabel");
}

id objc_msgSend_p_loadToolbar(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_loadToolbar");
}

id objc_msgSend_p_localteardown(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_localteardown");
}

id objc_msgSend_p_localteardownSecondStage(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_localteardownSecondStage");
}

id objc_msgSend_p_maintainIntegrity_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_maintainIntegrity:");
}

id objc_msgSend_p_makeTopCardInteractive(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_makeTopCardInteractive");
}

id objc_msgSend_p_makeTopCardNonInteractive(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_makeTopCardNonInteractive");
}

id objc_msgSend_p_makeViewForAnnotationAtIndexPath_cell_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_makeViewForAnnotationAtIndexPath:cell:");
}

id objc_msgSend_p_margin(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_margin");
}

id objc_msgSend_p_marginNoteHitRep_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_marginNoteHitRep:");
}

id objc_msgSend_p_marginNotePresentationRectForCachedAnnotation_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_marginNotePresentationRectForCachedAnnotation:");
}

id objc_msgSend_p_matchingAnswerStateForQuestion_temporaryMOC_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_matchingAnswerStateForQuestion:temporaryMOC:");
}

id objc_msgSend_p_maxAbsolutePageNumberForNodeAtTileEntry_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_maxAbsolutePageNumberForNodeAtTileEntry:");
}

id objc_msgSend_p_maxNumberOfThumbnailsPerPage(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_maxNumberOfThumbnailsPerPage");
}

id objc_msgSend_p_maxScrollViewSize(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_maxScrollViewSize");
}

id objc_msgSend_p_maxScrollViewSizeForViewSize_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_maxScrollViewSizeForViewSize:");
}

id objc_msgSend_p_maxSizeForResolution_naturalSize_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_maxSizeForResolution:naturalSize:");
}

id objc_msgSend_p_maxSizeWithImageSize_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_maxSizeWithImageSize:");
}

id objc_msgSend_p_maxTextWidth(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_maxTextWidth");
}

id objc_msgSend_p_mayHaveSettled(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_mayHaveSettled");
}

id objc_msgSend_p_metalSetupWithContext_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_metalSetupWithContext:");
}

id objc_msgSend_p_migrateAEAnnotation_fromStorage_toAnyNonBodyStorageInContentNode_moc_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_migrateAEAnnotation:fromStorage:toAnyNonBodyStorageInContentNode:moc:");
}

id objc_msgSend_p_migrateAEAnnotation_inContentNode_moc_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_migrateAEAnnotation:inContentNode:moc:");
}

id objc_msgSend_p_migrateAEAnnotation_withinStorage_moc_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_migrateAEAnnotation:withinStorage:moc:");
}

id objc_msgSend_p_migrateAEAnnotationIfNecessary_moc_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_migrateAEAnnotationIfNecessary:moc:");
}

id objc_msgSend_p_migrateBookmarkOrPlaceholderAEAnnotation_inContentNode_moc_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_migrateBookmarkOrPlaceholderAEAnnotation:inContentNode:moc:");
}

id objc_msgSend_p_modelLinkFromChapterLink_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_modelLinkFromChapterLink:");
}

id objc_msgSend_p_modifyBookDefaultsDictionary_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_modifyBookDefaultsDictionary:");
}

id objc_msgSend_p_modifyEachCharacterStyleWithBlock_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_modifyEachCharacterStyleWithBlock:");
}

id objc_msgSend_p_modifyEachParagraphStyleWithBlock_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_modifyEachParagraphStyleWithBlock:");
}

id objc_msgSend_p_moveLoupe_inRep_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_moveLoupe:inRep:");
}

id objc_msgSend_p_moveMaskFromLayer_toLayer_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_moveMaskFromLayer:toLayer:");
}

id objc_msgSend_p_mvpMatrixWithTexture_direction_percent_colorIndex_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_mvpMatrixWithTexture:direction:percent:colorIndex:");
}

id objc_msgSend_p_navigationOverlayFrame(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_navigationOverlayFrame");
}

id objc_msgSend_p_nearestIndicatorToLocation_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_nearestIndicatorToLocation:");
}

id objc_msgSend_p_newBookmarkAbsolutePhysicalPageIndexSetFromBookmarks_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_newBookmarkAbsolutePhysicalPageIndexSetFromBookmarks:");
}

id objc_msgSend_p_newHighlightLayerForAnnotation_width_storage_text_range_interfaceStyle_maxLines_documentRoot_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_newHighlightLayerForAnnotation:width:storage:text:range:interfaceStyle:maxLines:documentRoot:");
}

id objc_msgSend_p_newLayerFromDict_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_newLayerFromDict:");
}

id objc_msgSend_p_newMaskPathWithBounds_cornerRadius_arrowDirection_arrowBounds_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_newMaskPathWithBounds:cornerRadius:arrowDirection:arrowBounds:");
}

id objc_msgSend_p_newPathFromArray_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_newPathFromArray:");
}

id objc_msgSend_p_newTitleLayer(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_newTitleLayer");
}

id objc_msgSend_p_nextDistinctBookspot(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_nextDistinctBookspot");
}

id objc_msgSend_p_nextDistinctBookspotCursorIndex(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_nextDistinctBookspotCursorIndex");
}

id objc_msgSend_p_nextRootSearchTargetIndexFromIndex_forString_options_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_nextRootSearchTargetIndexFromIndex:forString:options:");
}

id objc_msgSend_p_nonCurrentVersionPredicateWithPredicate_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_nonCurrentVersionPredicateWithPredicate:");
}

id objc_msgSend_p_nonEmptyCaptionStorage(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_nonEmptyCaptionStorage");
}

id objc_msgSend_p_nonOrphanedAnnotationsForSearchText_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_nonOrphanedAnnotationsForSearchText:");
}

id objc_msgSend_p_nonOrphanedRangeAnnotationPredicateWithPredicate_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_nonOrphanedRangeAnnotationPredicateWithPredicate:");
}

id objc_msgSend_p_nonSponsoredAnnotationRequest(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_nonSponsoredAnnotationRequest");
}

id objc_msgSend_p_nonSponsoredPredicateWithDocumentRoot_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_nonSponsoredPredicateWithDocumentRoot:");
}

id objc_msgSend_p_normalImage(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_normalImage");
}

id objc_msgSend_p_noteCardAtIndex_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_noteCardAtIndex:");
}

id objc_msgSend_p_noteCardForPoint_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_noteCardForPoint:");
}

id objc_msgSend_p_noteCardsForInfos_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_noteCardsForInfos:");
}

id objc_msgSend_p_noteTransformForParameters_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_noteTransformForParameters:");
}

id objc_msgSend_p_notifySelectionDidChange(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_notifySelectionDidChange");
}

id objc_msgSend_p_numberOfNotes(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_numberOfNotes");
}

id objc_msgSend_p_numberOfParticlesForTR_slideRect_duration_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_numberOfParticlesForTR:slideRect:duration:");
}

id objc_msgSend_p_numberOfRenderedAnnotationsInSection_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_numberOfRenderedAnnotationsInSection:");
}

id objc_msgSend_p_numberOfRowsInSection_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_numberOfRowsInSection:");
}

id objc_msgSend_p_numberOfThumbnailPagesAndThumbnailsPerPage_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_numberOfThumbnailPagesAndThumbnailsPerPage:");
}

id objc_msgSend_p_objectForLayer_key_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_objectForLayer:key:");
}

id objc_msgSend_p_objectTranslationAtPercent_duration_objectSmashDuration_objectFrame_randomGenerator_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_objectTranslationAtPercent:duration:objectSmashDuration:objectFrame:randomGenerator:");
}

id objc_msgSend_p_offsetForGutterDrawableLayout_forBody_atOffset_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_offsetForGutterDrawableLayout:forBody:atOffset:");
}

id objc_msgSend_p_offsetForThumbnailAtIndex_chapterIndex_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_offsetForThumbnailAtIndex:chapterIndex:");
}

id objc_msgSend_p_onlyTopResults(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_onlyTopResults");
}

id objc_msgSend_p_openActionGroup(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_openActionGroup");
}

id objc_msgSend_p_openBook(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_openBook");
}

id objc_msgSend_p_openUndoGroupWithContext_actionName_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_openUndoGroupWithContext:actionName:");
}

id objc_msgSend_p_orderedChartTypeArrayForPage_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_orderedChartTypeArrayForPage:");
}

id objc_msgSend_p_orderedChildInfos(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_orderedChildInfos");
}

id objc_msgSend_p_orphanAEAnnotation_moc_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_orphanAEAnnotation:moc:");
}

id objc_msgSend_p_orphanedAnnotationsForSearchText_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_orphanedAnnotationsForSearchText:");
}

id objc_msgSend_p_outerMaskLayerWithFrame_path_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_outerMaskLayerWithFrame:path:");
}

id objc_msgSend_p_overriddenBodyFrame(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_overriddenBodyFrame");
}

id objc_msgSend_p_overscrollBarWithFrame_chapterIndex_tocTile_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_overscrollBarWithFrame:chapterIndex:tocTile:");
}

id objc_msgSend_p_ownerInfoForPopUpInfo_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_ownerInfoForPopUpInfo:");
}

id objc_msgSend_p_pageHintForRelativePageIndex_forceLayout_allowAfterLayoutPoint_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_pageHintForRelativePageIndex:forceLayout:allowAfterLayoutPoint:");
}

id objc_msgSend_p_pageIndexForPoint_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_pageIndexForPoint:");
}

id objc_msgSend_p_pageInfoForAbsolutePageIndex_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_pageInfoForAbsolutePageIndex:");
}

id objc_msgSend_p_pageInfoForPageAtRelativeIndex_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_pageInfoForPageAtRelativeIndex:");
}

id objc_msgSend_p_pageMarginWidth(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_pageMarginWidth");
}

id objc_msgSend_p_pageThumbScrollingDidEnd(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_pageThumbScrollingDidEnd");
}

id objc_msgSend_p_pageThumbnailViewForModelLink_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_pageThumbnailViewForModelLink:");
}

id objc_msgSend_p_pageThumbnailViewForPageIndex_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_pageThumbnailViewForPageIndex:");
}

id objc_msgSend_p_pagesScrollViewNextChapterThreshhold(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_pagesScrollViewNextChapterThreshhold");
}

id objc_msgSend_p_panelForKind_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_panelForKind:");
}

id objc_msgSend_p_panelVisible_default_forced_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_panelVisible:default:forced:");
}

id objc_msgSend_p_parseFromString_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_parseFromString:");
}

id objc_msgSend_p_parseString(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_parseString");
}

id objc_msgSend_p_particleTexturedRectWithPath_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_particleTexturedRectWithPath:");
}

id objc_msgSend_p_pathWithDirection_origin_size_scale_includeWedge_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_pathWithDirection:origin:size:scale:includeWedge:");
}

id objc_msgSend_p_pathWithDirection_size_includeWedge_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_pathWithDirection:size:includeWedge:");
}

id objc_msgSend_p_pause(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_pause");
}

id objc_msgSend_p_pauseOnCanvas(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_pauseOnCanvas");
}

id objc_msgSend_p_percentElapsed(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_percentElapsed");
}

id objc_msgSend_p_performAction_moc_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_performAction:moc:");
}

id objc_msgSend_p_performBlock_withPageLayoutAtRelativeIndex_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_performBlock:withPageLayoutAtRelativeIndex:");
}

id objc_msgSend_p_performBlock_withPageLayoutAtRelativeIndex_preferredLayoutController_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_performBlock:withPageLayoutAtRelativeIndex:preferredLayoutController:");
}

id objc_msgSend_p_performRenderJob_accessController_location_width_editingWidth_text_range_interfaceStyle_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_performRenderJob:accessController:location:width:editingWidth:text:range:interfaceStyle:");
}

id objc_msgSend_p_performUndoableAction_moc_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_performUndoableAction:moc:");
}

id objc_msgSend_p_perspectiveTransformWithScale_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_perspectiveTransformWithScale:");
}

id objc_msgSend_p_pillWidthForText_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_pillWidthForText:");
}

id objc_msgSend_p_placardHorzPadding(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_placardHorzPadding");
}

id objc_msgSend_p_placardImagePadding(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_placardImagePadding");
}

id objc_msgSend_p_placardImageSize(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_placardImageSize");
}

id objc_msgSend_p_placardVertPadding(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_placardVertPadding");
}

id objc_msgSend_p_placeCompactGutterDrawableLayout_forBody_atOffset_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_placeCompactGutterDrawableLayout:forBody:atOffset:");
}

id objc_msgSend_p_placeGutterDrawableLayout_withPositioning_inColumn_inBody_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_placeGutterDrawableLayout:withPositioning:inColumn:inBody:");
}

id objc_msgSend_p_placeholderImage(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_placeholderImage");
}

id objc_msgSend_p_placeholderLocationDidChange(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_placeholderLocationDidChange");
}

id objc_msgSend_p_play(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_play");
}

id objc_msgSend_p_playSoundtrack(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_playSoundtrack");
}

id objc_msgSend_p_pointAnnotationPredicateWithPredicate_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_pointAnnotationPredicateWithPredicate:");
}

id objc_msgSend_p_pointIsInLeftMargin_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_pointIsInLeftMargin:");
}

id objc_msgSend_p_pointIsInRedZone_onView_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_pointIsInRedZone:onView:");
}

id objc_msgSend_p_pointIsInRightMargin_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_pointIsInRightMargin:");
}

id objc_msgSend_p_popViewControllerAnimated_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_popViewControllerAnimated:");
}

id objc_msgSend_p_popoverCenterForArrowDirection_targetRect_targetBounds_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_popoverCenterForArrowDirection:targetRect:targetBounds:");
}

id objc_msgSend_p_popoverPassthroughViews(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_popoverPassthroughViews");
}

id objc_msgSend_p_populate(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_populate");
}

id objc_msgSend_p_populateNoteCard_withInfo_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_populateNoteCard:withInfo:");
}

id objc_msgSend_p_populatePageNumbersOfModelSearchResults_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_populatePageNumbersOfModelSearchResults:");
}

id objc_msgSend_p_populateParagraphStyle_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_populateParagraphStyle:");
}

id objc_msgSend_p_portalFrame(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_portalFrame");
}

id objc_msgSend_p_portionCount(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_portionCount");
}

id objc_msgSend_p_portionForLayout_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_portionForLayout:");
}

id objc_msgSend_p_positionChildrenWithAlignment_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_positionChildrenWithAlignment:");
}

id objc_msgSend_p_positionForTargetAtIndex_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_positionForTargetAtIndex:");
}

id objc_msgSend_p_positionViewsForEditing_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_positionViewsForEditing:");
}

id objc_msgSend_p_possiblyReplaceCFIFragmentForExistingOffsetEntry_newEntry_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_possiblyReplaceCFIFragmentForExistingOffsetEntry:newEntry:");
}

id objc_msgSend_p_prefersStatusBarHidden(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_prefersStatusBarHidden");
}

id objc_msgSend_p_preloadContentNodesForVisibleThumbnails(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_preloadContentNodesForVisibleThumbnails");
}

id objc_msgSend_p_prepForFirstLaunchViewLayout(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_prepForFirstLaunchViewLayout");
}

id objc_msgSend_p_prepareAnimationWithContext_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_prepareAnimationWithContext:");
}

id objc_msgSend_p_preparePageControllerForLayout_layoutController_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_preparePageControllerForLayout:layoutController:");
}

id objc_msgSend_p_presentingFullscreen(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_presentingFullscreen");
}

id objc_msgSend_p_pressInAnimationWithCompletionBlock_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_pressInAnimationWithCompletionBlock:");
}

id objc_msgSend_p_pressableRepGestureRecognizer(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_pressableRepGestureRecognizer");
}

id objc_msgSend_p_pressedImage(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_pressedImage");
}

id objc_msgSend_p_prevDistinctBookspot(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_prevDistinctBookspot");
}

id objc_msgSend_p_prevDistinctBookspotCursorIndex(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_prevDistinctBookspotCursorIndex");
}

id objc_msgSend_p_previousCellForTableView_indexPath_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_previousCellForTableView:indexPath:");
}

id objc_msgSend_p_previousRootSearchTargetIndexFromIndex_forString_options_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_previousRootSearchTargetIndexFromIndex:forString:options:");
}

id objc_msgSend_p_processChangeList_moc_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_processChangeList:moc:");
}

id objc_msgSend_p_processHintsWithContentState_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_processHintsWithContentState:");
}

id objc_msgSend_p_processWidowsAndInflationForLayoutController_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_processWidowsAndInflationForLayoutController:");
}

id objc_msgSend_p_propertyValueFromDictionary_forLayer_forAction_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_propertyValueFromDictionary:forLayer:forAction:");
}

id objc_msgSend_p_pushBookspot_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_pushBookspot:");
}

id objc_msgSend_p_pushViewController_animated_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_pushViewController:animated:");
}

id objc_msgSend_p_questionAtPageIndex_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_questionAtPageIndex:");
}

id objc_msgSend_p_questionCanBeChecked_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_questionCanBeChecked:");
}

id objc_msgSend_p_questionHost(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_questionHost");
}

id objc_msgSend_p_questionLayoutForPageIndex_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_questionLayoutForPageIndex:");
}

id objc_msgSend_p_questionRep(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_questionRep");
}

id objc_msgSend_p_queuePaginationOperationForContentNode_nodeBody_priority_isForeground_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_queuePaginationOperationForContentNode:nodeBody:priority:isForeground:");
}

id objc_msgSend_p_rangeAnnotationPredicateWithPredicate_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_rangeAnnotationPredicateWithPredicate:");
}

id objc_msgSend_p_rangeOfAEAnnotation_inStorage_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_rangeOfAEAnnotation:inStorage:");
}

id objc_msgSend_p_readBookDefaultsDictionary_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_readBookDefaultsDictionary:");
}

id objc_msgSend_p_rebuild(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_rebuild");
}

id objc_msgSend_p_rebuildContentSize(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_rebuildContentSize");
}

id objc_msgSend_p_rebuildNoteCardInfos(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_rebuildNoteCardInfos");
}

id objc_msgSend_p_rebuildNoteTransform(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_rebuildNoteTransform");
}

id objc_msgSend_p_rebuildWithPageIndex_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_rebuildWithPageIndex:");
}

id objc_msgSend_p_recentSearchAtIndex_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_recentSearchAtIndex:");
}

id objc_msgSend_p_recentsEntryForTrimmedQuery_resultCount_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_recentsEntryForTrimmedQuery:resultCount:");
}

id objc_msgSend_p_recoilAnimationFromPoint_scale_duration_hardRebound_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_recoilAnimationFromPoint:scale:duration:hardRebound:");
}

id objc_msgSend_p_recoilAnimationWithCompletionBlock_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_recoilAnimationWithCompletionBlock:");
}

id objc_msgSend_p_recoverFromFastScrollingDesynchronization(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_recoverFromFastScrollingDesynchronization");
}

id objc_msgSend_p_recreateNoteCardLayers(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_recreateNoteCardLayers");
}

id objc_msgSend_p_rectFromDictionary_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_rectFromDictionary:");
}

id objc_msgSend_p_recursivelyAddAutoplayableRepsForRep_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_recursivelyAddAutoplayableRepsForRep:");
}

id objc_msgSend_p_recursivelyFindPageInfos_callingBlock_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_recursivelyFindPageInfos:callingBlock:");
}

id objc_msgSend_p_recycleEntry_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_recycleEntry:");
}

id objc_msgSend_p_recyclePageHosts(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_recyclePageHosts");
}

id objc_msgSend_p_referenceContentIsImage(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_referenceContentIsImage");
}

id objc_msgSend_p_reflectShuffleOptionsChangeWithCompletionBlock_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_reflectShuffleOptionsChangeWithCompletionBlock:");
}

id objc_msgSend_p_refreshQuestions(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_refreshQuestions");
}

id objc_msgSend_p_registerDefaults(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_registerDefaults");
}

id objc_msgSend_p_relativePageIndexFollowingRelativePageIndex_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_relativePageIndexFollowingRelativePageIndex:");
}

id objc_msgSend_p_relativePageIndexForAnchoredCharIndex_forceLayout_searchAfterLayoutPoint_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_relativePageIndexForAnchoredCharIndex:forceLayout:searchAfterLayoutPoint:");
}

id objc_msgSend_p_relativePageIndexForCharIndex_caretAffinity_forceLayout_searchAfterLayoutPoint_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_relativePageIndexForCharIndex:caretAffinity:forceLayout:searchAfterLayoutPoint:");
}

id objc_msgSend_p_relativePageIndexForPageInfo_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_relativePageIndexForPageInfo:");
}

id objc_msgSend_p_relativePageIndexPrecedingRelativePageIndex_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_relativePageIndexPrecedingRelativePageIndex:");
}

id objc_msgSend_p_relativeSheetIndexFromCanvasPoint_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_relativeSheetIndexFromCanvasPoint:");
}

id objc_msgSend_p_relaxAnimationWithCompletionBlock_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_relaxAnimationWithCompletionBlock:");
}

id objc_msgSend_p_relaxMinimizeInfosNextFrame(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_relaxMinimizeInfosNextFrame");
}

id objc_msgSend_p_releaseControllerForIndex_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_releaseControllerForIndex:");
}

id objc_msgSend_p_releaseData(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_releaseData");
}

id objc_msgSend_p_releaseFlushedBodies(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_releaseFlushedBodies");
}

id objc_msgSend_p_releaseOutlets(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_releaseOutlets");
}

id objc_msgSend_p_releaseOverscrollViews(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_releaseOverscrollViews");
}

id objc_msgSend_p_reload(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_reload");
}

id objc_msgSend_p_reloadAnnotations(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_reloadAnnotations");
}

id objc_msgSend_p_reloadFromBottom(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_reloadFromBottom");
}

id objc_msgSend_p_reloadNoteCardAtIndex_noteCards_noteCardInfos_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_reloadNoteCardAtIndex:noteCards:noteCardInfos:");
}

id objc_msgSend_p_reloadNoteCardInfosFromNavigationUnit_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_reloadNoteCardInfosFromNavigationUnit:");
}

id objc_msgSend_p_removeAdjacentChapterViews(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_removeAdjacentChapterViews");
}

id objc_msgSend_p_removeBackgroundFillFromStyle_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_removeBackgroundFillFromStyle:");
}

id objc_msgSend_p_removeCanvasTransform(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_removeCanvasTransform");
}

id objc_msgSend_p_removeHighlightForCachedAnnotation_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_removeHighlightForCachedAnnotation:");
}

id objc_msgSend_p_removeNoteForCachedAnnotation_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_removeNoteForCachedAnnotation:");
}

id objc_msgSend_p_removeOrphanedLayoutsFromCache(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_removeOrphanedLayoutsFromCache");
}

id objc_msgSend_p_removePageLayoutFromCache_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_removePageLayoutFromCache:");
}

id objc_msgSend_p_removePlaybackNotifications(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_removePlaybackNotifications");
}

id objc_msgSend_p_removeSpinner(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_removeSpinner");
}

id objc_msgSend_p_removeStackItemAtIndex_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_removeStackItemAtIndex:");
}

id objc_msgSend_p_removeViewController_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_removeViewController:");
}

id objc_msgSend_p_repForChoiceIndex_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_repForChoiceIndex:");
}

id objc_msgSend_p_repForInfo_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_repForInfo:");
}

id objc_msgSend_p_repForQuestion_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_repForQuestion:");
}

id objc_msgSend_p_repForTargetIndex_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_repForTargetIndex:");
}

id objc_msgSend_p_repRectForHighlight_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_repRectForHighlight:");
}

id objc_msgSend_p_repRectForHighlight_lineHasAttachment_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_repRectForHighlight:lineHasAttachment:");
}

id objc_msgSend_p_repRectForPoint_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_repRectForPoint:");
}

id objc_msgSend_p_repToAnimate(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_repToAnimate");
}

id objc_msgSend_p_reparentSceneView(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_reparentSceneView");
}

id objc_msgSend_p_reportProgress(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_reportProgress");
}

id objc_msgSend_p_repsForStorage_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_repsForStorage:");
}

id objc_msgSend_p_repsForStorage_range_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_repsForStorage:range:");
}

id objc_msgSend_p_resetAppearance(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_resetAppearance");
}

id objc_msgSend_p_resetPageDisplacment(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_resetPageDisplacment");
}

id objc_msgSend_p_resetPagesScrollViewAndCapThumbCount_firstVisibleRelativePage_resetContentOffset_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_resetPagesScrollViewAndCapThumbCount:firstVisibleRelativePage:resetContentOffset:");
}

id objc_msgSend_p_resetToFirstSlideAndShouldAutoPlay_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_resetToFirstSlideAndShouldAutoPlay:");
}

id objc_msgSend_p_resetUIFadeOutTimer(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_resetUIFadeOutTimer");
}

id objc_msgSend_p_resetViewScaleForItemsExcept_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_resetViewScaleForItemsExcept:");
}

id objc_msgSend_p_resizePopoverViewAnimated_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_resizePopoverViewAnimated:");
}

id objc_msgSend_p_resizeViewsForSize_duration_maintainPageIndex_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_resizeViewsForSize:duration:maintainPageIndex:");
}

id objc_msgSend_p_resolveLink_andCallBlock_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_resolveLink:andCallBlock:");
}

id objc_msgSend_p_responseController(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_responseController");
}

id objc_msgSend_p_responseEntityWithMOC_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_responseEntityWithMOC:");
}

id objc_msgSend_p_restoreChangedProperties_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_restoreChangedProperties:");
}

id objc_msgSend_p_restoreLayer_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_restoreLayer:");
}

id objc_msgSend_p_restoreToLaunchPage(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_restoreToLaunchPage");
}

id objc_msgSend_p_resultKindForSection_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_resultKindForSection:");
}

id objc_msgSend_p_resultsForSection_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_resultsForSection:");
}

id objc_msgSend_p_resultsForSection_onlyTop_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_resultsForSection:onlyTop:");
}

id objc_msgSend_p_retinaUpdateAlertAttemptsKey(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_retinaUpdateAlertAttemptsKey");
}

id objc_msgSend_p_retinaUpdateAlertDateKey(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_retinaUpdateAlertDateKey");
}

id objc_msgSend_p_reviewEntityWithMOC_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_reviewEntityWithMOC:");
}

id objc_msgSend_p_reviewWidgetDataForResponse_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_reviewWidgetDataForResponse:");
}

id objc_msgSend_p_rightTwoThirdBounds(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_rightTwoThirdBounds");
}

id objc_msgSend_p_rotateNoteCardInfosToContentNode_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_rotateNoteCardInfosToContentNode:");
}

id objc_msgSend_p_rotationAngleFromTransform_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_rotationAngleFromTransform:");
}

id objc_msgSend_p_saveLayer_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_saveLayer:");
}

id objc_msgSend_p_savePlaceholder(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_savePlaceholder");
}

id objc_msgSend_p_savedPathFromPath_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_savedPathFromPath:");
}

id objc_msgSend_p_scaleFactorForTextureToFitWithinMaxSizeWithSize_scaleFactor_maxTextureSize_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_scaleFactorForTextureToFitWithinMaxSizeWithSize:scaleFactor:maxTextureSize:");
}

id objc_msgSend_p_scaleForAnimationLayer(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_scaleForAnimationLayer");
}

id objc_msgSend_p_scaleForTargetLayer(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_scaleForTargetLayer");
}

id objc_msgSend_p_scaleToFitStage(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_scaleToFitStage");
}

id objc_msgSend_p_scaledInsets(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_scaledInsets");
}

id objc_msgSend_p_scaledViewFrameOnCanvas(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_scaledViewFrameOnCanvas");
}

id objc_msgSend_p_scaledWidth(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_scaledWidth");
}

id objc_msgSend_p_sceneContentLayer(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_sceneContentLayer");
}

id objc_msgSend_p_scheduleTimer(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_scheduleTimer");
}

id objc_msgSend_p_scrollPageScrollViewToOffset_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_scrollPageScrollViewToOffset:");
}

id objc_msgSend_p_scrollScaledFromClientScaledPoint_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_scrollScaledFromClientScaledPoint:");
}

id objc_msgSend_p_scrollToAbsolutePageIndex_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_scrollToAbsolutePageIndex:");
}

id objc_msgSend_p_scrollToAbsolutePageIndex_animated_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_scrollToAbsolutePageIndex:animated:");
}

id objc_msgSend_p_scrollToThumbnailAtIndex_animated_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_scrollToThumbnailAtIndex:animated:");
}

id objc_msgSend_p_scrollViewContentSize(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_scrollViewContentSize");
}

id objc_msgSend_p_scrollViewFrameForPaging_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_scrollViewFrameForPaging:");
}

id objc_msgSend_p_searchDidHide(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_searchDidHide");
}

id objc_msgSend_p_searchText(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_searchText");
}

id objc_msgSend_p_sectionAtIndex_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_sectionAtIndex:");
}

id objc_msgSend_p_selectAnswer(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_selectAnswer");
}

id objc_msgSend_p_selectDotClosestToPageIndex_animated_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_selectDotClosestToPageIndex:animated:");
}

id objc_msgSend_p_selectedTocViewController(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_selectedTocViewController");
}

id objc_msgSend_p_selectedTocViewControllerCreateIfNecessary_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_selectedTocViewControllerCreateIfNecessary:");
}

id objc_msgSend_p_selectionOrAnnotation(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_selectionOrAnnotation");
}

id objc_msgSend_p_sequentialPageSizeOffsetFromPageSize_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_sequentialPageSizeOffsetFromPageSize:");
}

id objc_msgSend_p_setActiveSectionControllerDeferVantageDidChange_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_setActiveSectionControllerDeferVantageDidChange:");
}

id objc_msgSend_p_setBookspot_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_setBookspot:");
}

id objc_msgSend_p_setBorderMode_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_setBorderMode:");
}

id objc_msgSend_p_setChapterIndex_forScrub_stillScrolling_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_setChapterIndex:forScrub:stillScrolling:");
}

id objc_msgSend_p_setConstraint_onView_toValue_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_setConstraint:onView:toValue:");
}

id objc_msgSend_p_setCurrentFlowSizeScale_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_setCurrentFlowSizeScale:");
}

id objc_msgSend_p_setCurrentPage_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_setCurrentPage:");
}

id objc_msgSend_p_setDefaultScrubberCalloutFollowsThumbState(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_setDefaultScrubberCalloutFollowsThumbState");
}

id objc_msgSend_p_setDeselectAllButtonText(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_setDeselectAllButtonText");
}

id objc_msgSend_p_setDynamicScale_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_setDynamicScale:");
}

id objc_msgSend_p_setFrame_scale_pageIndex_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_setFrame:scale:pageIndex:");
}

id objc_msgSend_p_setHasBookmark_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_setHasBookmark:");
}

id objc_msgSend_p_setLayoutScale_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_setLayoutScale:");
}

id objc_msgSend_p_setLineProperties_fromRange_isUnderline_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_setLineProperties:fromRange:isUnderline:");
}

id objc_msgSend_p_setLinkPulseControllerActive_autohide_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_setLinkPulseControllerActive:autohide:");
}

id objc_msgSend_p_setMoviePlayerBackgroundColor_animated_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_setMoviePlayerBackgroundColor:animated:");
}

id objc_msgSend_p_setNavigationOverlayHidden_animated_autoHides_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_setNavigationOverlayHidden:animated:autoHides:");
}

id objc_msgSend_p_setNeedsLayoutOnPageIndex_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_setNeedsLayoutOnPageIndex:");
}

id objc_msgSend_p_setNextButtonTitle(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_setNextButtonTitle");
}

id objc_msgSend_p_setOnCanvasRepShadowLayerHidden_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_setOnCanvasRepShadowLayerHidden:");
}

id objc_msgSend_p_setPanGRs_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_setPanGRs:");
}

id objc_msgSend_p_setPlaying_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_setPlaying:");
}

id objc_msgSend_p_setPopoverScrolling(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_setPopoverScrolling");
}

id objc_msgSend_p_setPrevButtonTitle(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_setPrevButtonTitle");
}

id objc_msgSend_p_setScale_animated_duration_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_setScale:animated:duration:");
}

id objc_msgSend_p_setSelectAllButtonText(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_setSelectAllButtonText");
}

id objc_msgSend_p_setSelectedAppearanceLastEntry_animated_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_setSelectedAppearanceLastEntry:animated:");
}

id objc_msgSend_p_setSelection_mode_atPoint_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_setSelection:mode:atPoint:");
}

id objc_msgSend_p_setSelectionLineLayersHidden_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_setSelectionLineLayersHidden:");
}

id objc_msgSend_p_setSeparatorsHidden_forCellAtIndexPath_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_setSeparatorsHidden:forCellAtIndexPath:");
}

id objc_msgSend_p_setStorageAnchorsForCfis_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_setStorageAnchorsForCfis:");
}

id objc_msgSend_p_setTextChildOffsetStorageAnchorsForCfis_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_setTextChildOffsetStorageAnchorsForCfis:");
}

id objc_msgSend_p_setUnscaledCanvasRect_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_setUnscaledCanvasRect:");
}

id objc_msgSend_p_setUnscaledCanvasRect_animated_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_setUnscaledCanvasRect:animated:");
}

id objc_msgSend_p_setUserDataDictionary_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_setUserDataDictionary:");
}

id objc_msgSend_p_setViewScale_contentOffset_completion_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_setViewScale:contentOffset:completion:");
}

id objc_msgSend_p_setVisibleViewControllerToViewController_reason_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_setVisibleViewControllerToViewController:reason:");
}

id objc_msgSend_p_setWantsStatusBarVisible_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_setWantsStatusBarVisible:");
}

id objc_msgSend_p_setupAndAnimateGLAnimationsFromAttributesDict_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_setupAndAnimateGLAnimationsFromAttributesDict:");
}

id objc_msgSend_p_setupAndAnimateGLAnimationsFromPluginArray_withEffect_session_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_setupAndAnimateGLAnimationsFromPluginArray:withEffect:session:");
}

id objc_msgSend_p_setupAnimationWithContext_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_setupAnimationWithContext:");
}

id objc_msgSend_p_setupAnnotationControllerForBook_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_setupAnnotationControllerForBook:");
}

id objc_msgSend_p_setupAnswerLayouts(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_setupAnswerLayouts");
}

id objc_msgSend_p_setupAsAnimationDestination(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_setupAsAnimationDestination");
}

id objc_msgSend_p_setupBackground(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_setupBackground");
}

id objc_msgSend_p_setupBodyScrollLayer(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_setupBodyScrollLayer");
}

id objc_msgSend_p_setupBorder(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_setupBorder");
}

id objc_msgSend_p_setupBorderAndBackground(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_setupBorderAndBackground");
}

id objc_msgSend_p_setupBottomRowWithMetalTexture_width_height_bakedScale_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_setupBottomRowWithMetalTexture:width:height:bakedScale:");
}

id objc_msgSend_p_setupCameraBehavior(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_setupCameraBehavior");
}

id objc_msgSend_p_setupCanvasExitTransformController(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_setupCanvasExitTransformController");
}

id objc_msgSend_p_setupCardNumberLabel(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_setupCardNumberLabel");
}

id objc_msgSend_p_setupChapterViewControllerAtIndex_withChapterIndex_allowThumbnail_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_setupChapterViewControllerAtIndex:withChapterIndex:allowThumbnail:");
}

id objc_msgSend_p_setupChildViewControllers(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_setupChildViewControllers");
}

id objc_msgSend_p_setupColorBar(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_setupColorBar");
}

id objc_msgSend_p_setupContentLayerForHighlightLine_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_setupContentLayerForHighlightLine:");
}

id objc_msgSend_p_setupContentView(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_setupContentView");
}

id objc_msgSend_p_setupCurtain(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_setupCurtain");
}

id objc_msgSend_p_setupDataBufferWithParticleCount_visibleParticleCount_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_setupDataBufferWithParticleCount:visibleParticleCount:");
}

id objc_msgSend_p_setupDataBuffersWithFrameRect_openFromCenter_device_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_setupDataBuffersWithFrameRect:openFromCenter:device:");
}

id objc_msgSend_p_setupDisplaySettingsIfNeeded(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_setupDisplaySettingsIfNeeded");
}

id objc_msgSend_p_setupEnhancedCaptionsInformation(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_setupEnhancedCaptionsInformation");
}

id objc_msgSend_p_setupFlipLabel(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_setupFlipLabel");
}

id objc_msgSend_p_setupForTransformWithGesture_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_setupForTransformWithGesture:");
}

id objc_msgSend_p_setupFrames(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_setupFrames");
}

id objc_msgSend_p_setupFreeTransformController(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_setupFreeTransformController");
}

id objc_msgSend_p_setupFreeTransformControllerWithGesture_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_setupFreeTransformControllerWithGesture:");
}

id objc_msgSend_p_setupGestureRecognizers(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_setupGestureRecognizers");
}

id objc_msgSend_p_setupHeadingLabel_bodyLabel_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_setupHeadingLabel:bodyLabel:");
}

id objc_msgSend_p_setupInitialZoom(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_setupInitialZoom");
}

id objc_msgSend_p_setupMVPMatricesWithContext_device_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_setupMVPMatricesWithContext:device:");
}

id objc_msgSend_p_setupMetalAnimationWithContext_texturedRect_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_setupMetalAnimationWithContext:texturedRect:");
}

id objc_msgSend_p_setupMetalBlurEffectsWithContext_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_setupMetalBlurEffectsWithContext:");
}

id objc_msgSend_p_setupMetalContext(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_setupMetalContext");
}

id objc_msgSend_p_setupMetalEdgeDistanceTextureWithContext_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_setupMetalEdgeDistanceTextureWithContext:");
}

id objc_msgSend_p_setupMetalFadeDataBufferContentsWithOpaqueAttributes_frameRect_openFromCenter_maxRadius_center_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_setupMetalFadeDataBufferContentsWithOpaqueAttributes:frameRect:openFromCenter:maxRadius:center:");
}

id objc_msgSend_p_setupMetalOpaqueDataBufferContentsWithOpaqueAttributes_frameRect_openFromCenter_minRadius_maxRadius_center_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_setupMetalOpaqueDataBufferContentsWithOpaqueAttributes:frameRect:openFromCenter:minRadius:maxRadius:center:");
}

id objc_msgSend_p_setupMetalShaderUniformsWithTexture_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_setupMetalShaderUniformsWithTexture:");
}

id objc_msgSend_p_setupMetalShadersWithContext_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_setupMetalShadersWithContext:");
}

id objc_msgSend_p_setupMetalTransformWithContext_texturedRect_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_setupMetalTransformWithContext:texturedRect:");
}

id objc_msgSend_p_setupNavOverlayContainer(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_setupNavOverlayContainer");
}

id objc_msgSend_p_setupNextChapterView(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_setupNextChapterView");
}

id objc_msgSend_p_setupOverscrollViews(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_setupOverscrollViews");
}

id objc_msgSend_p_setupPageNumberLabel(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_setupPageNumberLabel");
}

id objc_msgSend_p_setupPageNumberViews(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_setupPageNumberViews");
}

id objc_msgSend_p_setupParameters(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_setupParameters");
}

id objc_msgSend_p_setupParticleSystemWithContext_image_build_randomGenerator_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_setupParticleSystemWithContext:image:build:randomGenerator:");
}

id objc_msgSend_p_setupParticleSystemWithImage_build_randomGenerator_metalContext_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_setupParticleSystemWithImage:build:randomGenerator:metalContext:");
}

id objc_msgSend_p_setupParticleSystemWithImage_direction_duration_randomGenerator_metalContext_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_setupParticleSystemWithImage:direction:duration:randomGenerator:metalContext:");
}

id objc_msgSend_p_setupParticleTexturedRectWithContext_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_setupParticleTexturedRectWithContext:");
}

id objc_msgSend_p_setupParticleTexturedRectsWithMetalContext_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_setupParticleTexturedRectsWithMetalContext:");
}

id objc_msgSend_p_setupPlacardLayouts(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_setupPlacardLayouts");
}

id objc_msgSend_p_setupPlaybackNotifications(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_setupPlaybackNotifications");
}

id objc_msgSend_p_setupPosterFrame(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_setupPosterFrame");
}

id objc_msgSend_p_setupPreviousChapterView(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_setupPreviousChapterView");
}

id objc_msgSend_p_setupSceneControllerIfNecessary_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_setupSceneControllerIfNecessary:");
}

id objc_msgSend_p_setupSceneViewWithCancelHandler_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_setupSceneViewWithCancelHandler:");
}

id objc_msgSend_p_setupShadersWithMetalContext_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_setupShadersWithMetalContext:");
}

id objc_msgSend_p_setupShadow(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_setupShadow");
}

id objc_msgSend_p_setupSoundtrack(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_setupSoundtrack");
}

id objc_msgSend_p_setupSpinner(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_setupSpinner");
}

id objc_msgSend_p_setupTitleLabel(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_setupTitleLabel");
}

id objc_msgSend_p_setupTransitionView(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_setupTransitionView");
}

id objc_msgSend_p_setupWhenUnfilteredContentIsAvailable(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_setupWhenUnfilteredContentIsAvailable");
}

id objc_msgSend_p_setupWhenUnfilteredContentIsNotAvailable(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_setupWhenUnfilteredContentIsNotAvailable");
}

id objc_msgSend_p_shadowFadeInAnimation_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_shadowFadeInAnimation:");
}

id objc_msgSend_p_shadowFadeOutAnimation_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_shadowFadeOutAnimation:");
}

id objc_msgSend_p_shadowFrame(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_shadowFrame");
}

id objc_msgSend_p_shadowOffsetForCurrentScreenScale(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_shadowOffsetForCurrentScreenScale");
}

id objc_msgSend_p_shadowRadiusForCurrentScreenScale(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_shadowRadiusForCurrentScreenScale");
}

id objc_msgSend_p_sharedCaptionStorage(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_sharedCaptionStorage");
}

id objc_msgSend_p_shouldAlertAboutRetinaUpdate(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_shouldAlertAboutRetinaUpdate");
}

id objc_msgSend_p_shouldCrossFade(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_shouldCrossFade");
}

id objc_msgSend_p_shouldDragOwnInteraction_rep_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_shouldDragOwnInteraction:rep:");
}

id objc_msgSend_p_shouldDrawMarginNoteForCachedCachedAnnotation_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_shouldDrawMarginNoteForCachedCachedAnnotation:");
}

id objc_msgSend_p_shouldHandleVantageDidChangeNotification_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_shouldHandleVantageDidChangeNotification:");
}

id objc_msgSend_p_shouldHaveFloatingLayout(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_shouldHaveFloatingLayout");
}

id objc_msgSend_p_shouldHighlightThumbTargets(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_shouldHighlightThumbTargets");
}

id objc_msgSend_p_shouldHitTest(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_shouldHitTest");
}

id objc_msgSend_p_shouldSendVantageChangedNotificationWithReason_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_shouldSendVantageChangedNotificationWithReason:");
}

id objc_msgSend_p_shouldShowAppearanceImage(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_shouldShowAppearanceImage");
}

id objc_msgSend_p_shouldShowBookmark(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_shouldShowBookmark");
}

id objc_msgSend_p_shouldShowNoteIcon(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_shouldShowNoteIcon");
}

id objc_msgSend_p_shouldShowPlayButton(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_shouldShowPlayButton");
}

id objc_msgSend_p_shouldShowPosterImage(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_shouldShowPosterImage");
}

id objc_msgSend_p_shouldShowShroudForVisibleSize_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_shouldShowShroudForVisibleSize:");
}

id objc_msgSend_p_shouldStartEditingOnLongPress(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_shouldStartEditingOnLongPress");
}

id objc_msgSend_p_shouldStartEditingOnPress(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_shouldStartEditingOnPress");
}

id objc_msgSend_p_shouldSuppressRenderingDuringExpansion(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_shouldSuppressRenderingDuringExpansion");
}

id objc_msgSend_p_shouldTextFlowAroundWrappable_inTarget_inColumn_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_shouldTextFlowAroundWrappable:inTarget:inColumn:");
}

id objc_msgSend_p_shouldUseTextLabelWithFrameWidth_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_shouldUseTextLabelWithFrameWidth:");
}

id objc_msgSend_p_showBottomView_animated_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_showBottomView:animated:");
}

id objc_msgSend_p_showBuyButton(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_showBuyButton");
}

id objc_msgSend_p_showCorrectView_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_showCorrectView:");
}

id objc_msgSend_p_showDVC(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_showDVC");
}

id objc_msgSend_p_showDVCAnimated_withLink_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_showDVCAnimated:withLink:");
}

id objc_msgSend_p_showEditor_forRange_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_showEditor:forRange:");
}

id objc_msgSend_p_showEntry_animated_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_showEntry:animated:");
}

id objc_msgSend_p_showGlossary(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_showGlossary");
}

id objc_msgSend_p_showMovieControls(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_showMovieControls");
}

id objc_msgSend_p_showNavigationBar(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_showNavigationBar");
}

id objc_msgSend_p_showRecents(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_showRecents");
}

id objc_msgSend_p_showThumbUsingTinyThumb_freeTransformController_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_showThumbUsingTinyThumb:freeTransformController:");
}

id objc_msgSend_p_showTransportControls(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_showTransportControls");
}

id objc_msgSend_p_showingIntroMedia(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_showingIntroMedia");
}

id objc_msgSend_p_shrinkAmountForMovement_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_shrinkAmountForMovement:");
}

id objc_msgSend_p_sidebarRep(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_sidebarRep");
}

id objc_msgSend_p_simpleButtonLayerWithSize_fillColor_borderColor_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_simpleButtonLayerWithSize:fillColor:borderColor:");
}

id objc_msgSend_p_sinfForEntryWithName_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_sinfForEntryWithName:");
}

id objc_msgSend_p_singleTapResetsToDefaultZoom(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_singleTapResetsToDefaultZoom");
}

id objc_msgSend_p_smokeSystemForTR_build_randomGenerator_metalContext_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_smokeSystemForTR:build:randomGenerator:metalContext:");
}

id objc_msgSend_p_snippetPairForAbsolutePageIndex_withDocumentRoot_forPresentationType_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_snippetPairForAbsolutePageIndex:withDocumentRoot:forPresentationType:");
}

id objc_msgSend_p_sortedAssetIDVersionsWithMoc_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_sortedAssetIDVersionsWithMoc:");
}

id objc_msgSend_p_sourceICC(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_sourceICC");
}

id objc_msgSend_p_sourceRepForInfo_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_sourceRepForInfo:");
}

id objc_msgSend_p_sparkleSystemForTR_slideRect_duration_direction_randomGenerator_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_sparkleSystemForTR:slideRect:duration:direction:randomGenerator:");
}

id objc_msgSend_p_specksSystemForTR_build_randomGenerator_metalContext_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_specksSystemForTR:build:randomGenerator:metalContext:");
}

id objc_msgSend_p_splitLine_lineSegmentRects_wrappable_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_splitLine:lineSegmentRects:wrappable:");
}

id objc_msgSend_p_stackForCallout_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_stackForCallout:");
}

id objc_msgSend_p_stageAlmostCoversPage(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_stageAlmostCoversPage");
}

id objc_msgSend_p_stageBackgroundFrameRelativeToImageContentLayer(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_stageBackgroundFrameRelativeToImageContentLayer");
}

id objc_msgSend_p_stageTransitionAnimationIn_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_stageTransitionAnimationIn:");
}

id objc_msgSend_p_standardSearchBar(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_standardSearchBar");
}

id objc_msgSend_p_startAutoplay(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_startAutoplay");
}

id objc_msgSend_p_startAutoplayableDescendantsOfReps_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_startAutoplayableDescendantsOfReps:");
}

id objc_msgSend_p_startCancelTimer(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_startCancelTimer");
}

id objc_msgSend_p_startCancelTimerWithTimeout_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_startCancelTimerWithTimeout:");
}

id objc_msgSend_p_startIntroMediaIfNecessary(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_startIntroMediaIfNecessary");
}

id objc_msgSend_p_startNextRenderJob(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_startNextRenderJob");
}

id objc_msgSend_p_startRecognizeTimer(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_startRecognizeTimer");
}

id objc_msgSend_p_startsVisible(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_startsVisible");
}

id objc_msgSend_p_statusBarOffset(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_statusBarOffset");
}

id objc_msgSend_p_stop(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_stop");
}

id objc_msgSend_p_stopMagnification_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_stopMagnification:");
}

id objc_msgSend_p_storageAnchorFromLink_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_storageAnchorFromLink:");
}

id objc_msgSend_p_storageAnnotationForUUID_includeDeleted_moc_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_storageAnnotationForUUID:includeDeleted:moc:");
}

id objc_msgSend_p_stubHintAtRelativePageIndex_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_stubHintAtRelativePageIndex:");
}

id objc_msgSend_p_studyButtonShouldBeEnabled(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_studyButtonShouldBeEnabled");
}

id objc_msgSend_p_styleForPresentation_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_styleForPresentation:");
}

id objc_msgSend_p_styleProviderForLayout_inPanel_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_styleProviderForLayout:inPanel:");
}

id objc_msgSend_p_supportZoom(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_supportZoom");
}

id objc_msgSend_p_suppressRendering_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_suppressRendering:");
}

id objc_msgSend_p_supressRendering_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_supressRendering:");
}

id objc_msgSend_p_swatchRectForSwatchAtRow_column_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_swatchRectForSwatchAtRow:column:");
}

id objc_msgSend_p_syncActionlessBookmarkToolbarButtonFrame(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_syncActionlessBookmarkToolbarButtonFrame");
}

id objc_msgSend_p_syncWithStatusAnimated_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_syncWithStatusAnimated:");
}

id objc_msgSend_p_syncWithStatusForPage_animated_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_syncWithStatusForPage:animated:");
}

id objc_msgSend_p_tableViewBookmarkIndexPathToFetchedResultsControllerBookmarkIndexPath_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_tableViewBookmarkIndexPathToFetchedResultsControllerBookmarkIndexPath:");
}

id objc_msgSend_p_targetExpandedSize(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_targetExpandedSize");
}

id objc_msgSend_p_targetFirstHint(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_targetFirstHint");
}

id objc_msgSend_p_targetFrame(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_targetFrame");
}

id objc_msgSend_p_targetICC(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_targetICC");
}

id objc_msgSend_p_targetIndexNearPoint_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_targetIndexNearPoint:");
}

id objc_msgSend_p_targetLastHint(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_targetLastHint");
}

id objc_msgSend_p_targetRepForInfo_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_targetRepForInfo:");
}

id objc_msgSend_p_targetRepForPlacardRep_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_targetRepForPlacardRep:");
}

id objc_msgSend_p_targetViewBackgroundColor(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_targetViewBackgroundColor");
}

id objc_msgSend_p_tearDownMoviePlayback(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_tearDownMoviePlayback");
}

id objc_msgSend_p_teardown(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_teardown");
}

id objc_msgSend_p_teardownAsAnimationDestination(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_teardownAsAnimationDestination");
}

id objc_msgSend_p_teardownCanvas(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_teardownCanvas");
}

id objc_msgSend_p_teardownImageCropAnimationControllerWithDestinationRep_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_teardownImageCropAnimationControllerWithDestinationRep:");
}

id objc_msgSend_p_teardownPlayerIsTransferringToExpanded_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_teardownPlayerIsTransferringToExpanded:");
}

id objc_msgSend_p_teardownTimer(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_teardownTimer");
}

id objc_msgSend_p_teardownTimers(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_teardownTimers");
}

id objc_msgSend_p_texCoordFromX_y_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_texCoordFromX:y:");
}

id objc_msgSend_p_textColor(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_textColor");
}

id objc_msgSend_p_textForSelectAllButton_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_textForSelectAllButton:");
}

id objc_msgSend_p_textOptionWithColor_size_index_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_textOptionWithColor:size:index:");
}

id objc_msgSend_p_textVerticalCenter(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_textVerticalCenter");
}

id objc_msgSend_p_textureSizeIsValid_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_textureSizeIsValid:");
}

id objc_msgSend_p_texturedRectFromImagePath_metalContext_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_texturedRectFromImagePath:metalContext:");
}

id objc_msgSend_p_texturesDictionary(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_texturesDictionary");
}

id objc_msgSend_p_thumbShownForChapter_index_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_thumbShownForChapter:index:");
}

id objc_msgSend_p_thumbnailSize(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_thumbnailSize");
}

id objc_msgSend_p_thumbnailsVisible(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_thumbnailsVisible");
}

id objc_msgSend_p_thumbnailsVisibleInPanel(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_thumbnailsVisibleInPanel");
}

id objc_msgSend_p_thumbnailsVisibleOnMainCanvas(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_thumbnailsVisibleOnMainCanvas");
}

id objc_msgSend_p_timingFunctionFromString_forActionDictionary_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_timingFunctionFromString:forActionDictionary:");
}

id objc_msgSend_p_tintAndTitleColor(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_tintAndTitleColor");
}

id objc_msgSend_p_toggleCanvasZoomAnimated_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_toggleCanvasZoomAnimated:");
}

id objc_msgSend_p_topCoordinateForPortion_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_topCoordinateForPortion:");
}

id objc_msgSend_p_topHairlineColorForAppearance_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_topHairlineColorForAppearance:");
}

id objc_msgSend_p_topNoteCard(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_topNoteCard");
}

id objc_msgSend_p_topNoteCardInfo(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_topNoteCardInfo");
}

id objc_msgSend_p_trackProgressForRep_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_trackProgressForRep:");
}

id objc_msgSend_p_transcribeWithoutAssertions_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_transcribeWithoutAssertions:");
}

id objc_msgSend_p_transformForPercent_centerPoint_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_transformForPercent:centerPoint:");
}

id objc_msgSend_p_transformFromArray_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_transformFromArray:");
}

id objc_msgSend_p_transitionFromPageThumbnail_destinationRect_shouldShroud_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_transitionFromPageThumbnail:destinationRect:shouldShroud:");
}

id objc_msgSend_p_transitionThumbnailToDVC_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_transitionThumbnailToDVC:");
}

id objc_msgSend_p_triggerEvent(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_triggerEvent");
}

id objc_msgSend_p_triggerNextEvent(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_triggerNextEvent");
}

id objc_msgSend_p_trimHighlightRange_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_trimHighlightRange:");
}

id objc_msgSend_p_tryToBegin(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_tryToBegin");
}

id objc_msgSend_p_unclippedVisibleBounds(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_unclippedVisibleBounds");
}

id objc_msgSend_p_unhideViewIfNeeded(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_unhideViewIfNeeded");
}

id objc_msgSend_p_unhoistMaskLayer(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_unhoistMaskLayer");
}

id objc_msgSend_p_unloadEntry(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_unloadEntry");
}

id objc_msgSend_p_unloadGlossaryViewControllerIfHiding(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_unloadGlossaryViewControllerIfHiding");
}

id objc_msgSend_p_unloadMoviePlayer(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_unloadMoviePlayer");
}

id objc_msgSend_p_unloadStudyViewController(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_unloadStudyViewController");
}

id objc_msgSend_p_unpackNotification_outCurrentRelativePageIndex_outTopLevelReps_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_unpackNotification:outCurrentRelativePageIndex:outTopLevelReps:");
}

id objc_msgSend_p_unscaledViewFrameBasedOnStyle(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_unscaledViewFrameBasedOnStyle");
}

id objc_msgSend_p_unselectedTocViewController(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_unselectedTocViewController");
}

id objc_msgSend_p_updateAdjacentChapterViews(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_updateAdjacentChapterViews");
}

id objc_msgSend_p_updateAnimation_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_updateAnimation:");
}

id objc_msgSend_p_updateAnnotationsByStorage_byAddingAnnotation_storageUUID_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_updateAnnotationsByStorage:byAddingAnnotation:storageUUID:");
}

id objc_msgSend_p_updateAnnotationsByStorage_byRemovingAnnotation_storageUUID_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_updateAnnotationsByStorage:byRemovingAnnotation:storageUUID:");
}

id objc_msgSend_p_updateAppearanceForArrowDirection_arrowBounds_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_updateAppearanceForArrowDirection:arrowBounds:");
}

id objc_msgSend_p_updateBackgroundColor(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_updateBackgroundColor");
}

id objc_msgSend_p_updateBackgroundLayer(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_updateBackgroundLayer");
}

id objc_msgSend_p_updateBackgroundLayerContent(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_updateBackgroundLayerContent");
}

id objc_msgSend_p_updateBackgroundViewWithArrowDirection_arrowBounds_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_updateBackgroundViewWithArrowDirection:arrowBounds:");
}

id objc_msgSend_p_updateBookmarkAffordances(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_updateBookmarkAffordances");
}

id objc_msgSend_p_updateBookmarkStatusAnimated_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_updateBookmarkStatusAnimated:");
}

id objc_msgSend_p_updateBottomWrapperFrame(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_updateBottomWrapperFrame");
}

id objc_msgSend_p_updateButtonState(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_updateButtonState");
}

id objc_msgSend_p_updateCachedAnnotations_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_updateCachedAnnotations:");
}

id objc_msgSend_p_updateCalloutLayouts(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_updateCalloutLayouts");
}

id objc_msgSend_p_updateCanvasSize(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_updateCanvasSize");
}

id objc_msgSend_p_updateCanvasToSize_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_updateCanvasToSize:");
}

id objc_msgSend_p_updateCanvasWithPendingPageIndexPath(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_updateCanvasWithPendingPageIndexPath");
}

id objc_msgSend_p_updateCaption(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_updateCaption");
}

id objc_msgSend_p_updateCenterTitle(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_updateCenterTitle");
}

id objc_msgSend_p_updateChapterBackgroundsView(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_updateChapterBackgroundsView");
}

id objc_msgSend_p_updateChapterHeader(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_updateChapterHeader");
}

id objc_msgSend_p_updateChapterWidths(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_updateChapterWidths");
}

id objc_msgSend_p_updateChoiceStates(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_updateChoiceStates");
}

id objc_msgSend_p_updateClipViewWithArrowDirection_arrowBounds_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_updateClipViewWithArrowDirection:arrowBounds:");
}

id objc_msgSend_p_updateCloseButton(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_updateCloseButton");
}

id objc_msgSend_p_updateColors(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_updateColors");
}

id objc_msgSend_p_updateContainerMap_forCallout_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_updateContainerMap:forCallout:");
}

id objc_msgSend_p_updateContainers(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_updateContainers");
}

id objc_msgSend_p_updateContentInfosToDisplay(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_updateContentInfosToDisplay");
}

id objc_msgSend_p_updateContentsScale(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_updateContentsScale");
}

id objc_msgSend_p_updateContextAndCFIForStorage_storageID_range_annotation_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_updateContextAndCFIForStorage:storageID:range:annotation:");
}

id objc_msgSend_p_updateDarkMode(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_updateDarkMode");
}

id objc_msgSend_p_updateDiagramWithZoom_offset_animated_previousCalloutIndex_completion_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_updateDiagramWithZoom:offset:animated:previousCalloutIndex:completion:");
}

id objc_msgSend_p_updateEditButtons(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_updateEditButtons");
}

id objc_msgSend_p_updateFlipGlyphWithTouches_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_updateFlipGlyphWithTouches:");
}

id objc_msgSend_p_updateFloatingPositionsIfRequired(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_updateFloatingPositionsIfRequired");
}

id objc_msgSend_p_updateForContentFrame_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_updateForContentFrame:");
}

id objc_msgSend_p_updateFrameForSize_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_updateFrameForSize:");
}

id objc_msgSend_p_updateFromTheme_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_updateFromTheme:");
}

id objc_msgSend_p_updateGlossaryDefinitionSynchronous_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_updateGlossaryDefinitionSynchronous:");
}

id objc_msgSend_p_updateGradient(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_updateGradient");
}

id objc_msgSend_p_updateGradientColors(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_updateGradientColors");
}

id objc_msgSend_p_updateHighlight_toRange_rect_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_updateHighlight:toRange:rect:");
}

id objc_msgSend_p_updateHintAtIndex_withBodyTargets_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_updateHintAtIndex:withBodyTargets:");
}

id objc_msgSend_p_updateHostGeometry(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_updateHostGeometry");
}

id objc_msgSend_p_updateInfosToDisplay(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_updateInfosToDisplay");
}

id objc_msgSend_p_updateLayer(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_updateLayer");
}

id objc_msgSend_p_updateLayerContents_withImage_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_updateLayerContents:withImage:");
}

id objc_msgSend_p_updateLayers(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_updateLayers");
}

id objc_msgSend_p_updateLayersAnimated_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_updateLayersAnimated:");
}

id objc_msgSend_p_updateLineAndShadows(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_updateLineAndShadows");
}

id objc_msgSend_p_updateLinkForSelection_withAnimatingPulse_selectionFlags_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_updateLinkForSelection:withAnimatingPulse:selectionFlags:");
}

id objc_msgSend_p_updateLinkLayersForRangeSelection_withAnimatingPulse_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_updateLinkLayersForRangeSelection:withAnimatingPulse:");
}

id objc_msgSend_p_updateMarginNoteForCachedAnnotation_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_updateMarginNoteForCachedAnnotation:");
}

id objc_msgSend_p_updateMarginNoteForHighlight_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_updateMarginNoteForHighlight:");
}

id objc_msgSend_p_updateMaskLayer(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_updateMaskLayer");
}

id objc_msgSend_p_updateMaxPageNumberWidth(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_updateMaxPageNumberWidth");
}

id objc_msgSend_p_updateMinMaxViewScaleForItem_forceMinScale_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_updateMinMaxViewScaleForItem:forceMinScale:");
}

id objc_msgSend_p_updateMoreAnswersLayer(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_updateMoreAnswersLayer");
}

id objc_msgSend_p_updateMostVisiblePageIndex(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_updateMostVisiblePageIndex");
}

id objc_msgSend_p_updateNavigationOverlayContainerFrame(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_updateNavigationOverlayContainerFrame");
}

id objc_msgSend_p_updateNoteCardOrder(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_updateNoteCardOrder");
}

id objc_msgSend_p_updateNotesExist(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_updateNotesExist");
}

id objc_msgSend_p_updateOtherItemLayers_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_updateOtherItemLayers:");
}

id objc_msgSend_p_updatePageControl(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_updatePageControl");
}

id objc_msgSend_p_updatePageLayouts(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_updatePageLayouts");
}

id objc_msgSend_p_updatePageNumberViewPositionsForSize_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_updatePageNumberViewPositionsForSize:");
}

id objc_msgSend_p_updatePageNumberingForce_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_updatePageNumberingForce:");
}

id objc_msgSend_p_updatePageNumbers(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_updatePageNumbers");
}

id objc_msgSend_p_updatePageScrubberControlForSizeClassChange(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_updatePageScrubberControlForSizeClassChange");
}

id objc_msgSend_p_updatePageScrubberFrame(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_updatePageScrubberFrame");
}

id objc_msgSend_p_updatePageThumbnails_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_updatePageThumbnails:");
}

id objc_msgSend_p_updatePageViewHostsWithTheme_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_updatePageViewHostsWithTheme:");
}

id objc_msgSend_p_updatePageViewsForScrollingAnimated_restoreOrigin_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_updatePageViewsForScrollingAnimated:restoreOrigin:");
}

id objc_msgSend_p_updatePageViewsForScrollingAnimated_restoreOrigin_pageIndexSet_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_updatePageViewsForScrollingAnimated:restoreOrigin:pageIndexSet:");
}

id objc_msgSend_p_updatePageViewsWithInfos_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_updatePageViewsWithInfos:");
}

id objc_msgSend_p_updatePageViewsWithInfos_removeUnused_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_updatePageViewsWithInfos:removeUnused:");
}

id objc_msgSend_p_updatePagesAndThumbnailLayouts(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_updatePagesAndThumbnailLayouts");
}

id objc_msgSend_p_updatePagesScrollView(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_updatePagesScrollView");
}

id objc_msgSend_p_updatePaginationInProgress(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_updatePaginationInProgress");
}

id objc_msgSend_p_updatePersitentQuestionIndex_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_updatePersitentQuestionIndex:");
}

id objc_msgSend_p_updatePresentationTypeAnimated_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_updatePresentationTypeAnimated:");
}

id objc_msgSend_p_updateProgessKitSectionInCanvasRect_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_updateProgessKitSectionInCanvasRect:");
}

id objc_msgSend_p_updateProgressKitForNewNavigationUnit_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_updateProgressKitForNewNavigationUnit:");
}

id objc_msgSend_p_updatePulseLayerPositions(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_updatePulseLayerPositions");
}

id objc_msgSend_p_updateQuestionIndex_animate_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_updateQuestionIndex:animate:");
}

id objc_msgSend_p_updateRasterizeOnLayer(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_updateRasterizeOnLayer");
}

id objc_msgSend_p_updateRenderedPageHosts(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_updateRenderedPageHosts");
}

id objc_msgSend_p_updateScrollViewAndZoomSettingsForSize_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_updateScrollViewAndZoomSettingsForSize:");
}

id objc_msgSend_p_updateScrollViewClipsToBounds(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_updateScrollViewClipsToBounds");
}

id objc_msgSend_p_updateScrollViewDecelerationRate(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_updateScrollViewDecelerationRate");
}

id objc_msgSend_p_updateScrollViewForSize_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_updateScrollViewForSize:");
}

id objc_msgSend_p_updateScrollViewLayout(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_updateScrollViewLayout");
}

id objc_msgSend_p_updateScrollViewWithDelegate(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_updateScrollViewWithDelegate");
}

id objc_msgSend_p_updateScrubberCheckToolbarState_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_updateScrubberCheckToolbarState:");
}

id objc_msgSend_p_updateSectionInfosForRelativePageRange_forceLoad_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_updateSectionInfosForRelativePageRange:forceLoad:");
}

id objc_msgSend_p_updateSetShowsDoneButton(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_updateSetShowsDoneButton");
}

id objc_msgSend_p_updateShadow(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_updateShadow");
}

id objc_msgSend_p_updateSidebarLayouts(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_updateSidebarLayouts");
}

id objc_msgSend_p_updateStageBackgroundLayer(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_updateStageBackgroundLayer");
}

id objc_msgSend_p_updateStageBackgroundLayerFromLayout(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_updateStageBackgroundLayerFromLayout");
}

id objc_msgSend_p_updateStageCornerRadius(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_updateStageCornerRadius");
}

id objc_msgSend_p_updateStageViewFrame_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_updateStageViewFrame:");
}

id objc_msgSend_p_updateStorages(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_updateStorages");
}

id objc_msgSend_p_updateSubviewsOrLayers(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_updateSubviewsOrLayers");
}

id objc_msgSend_p_updateTOCForPresentationModeChange(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_updateTOCForPresentationModeChange");
}

id objc_msgSend_p_updateTOCForUpcomingPresentationModeChange(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_updateTOCForUpcomingPresentationModeChange");
}

id objc_msgSend_p_updateTargetStateForPoint_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_updateTargetStateForPoint:");
}

id objc_msgSend_p_updateTargetsAndPlacardLayout_animated_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_updateTargetsAndPlacardLayout:animated:");
}

id objc_msgSend_p_updateTextLayerFrame(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_updateTextLayerFrame");
}

id objc_msgSend_p_updateThumbLayout(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_updateThumbLayout");
}

id objc_msgSend_p_updateTitleLabelToolbarVisible_animated_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_updateTitleLabelToolbarVisible:animated:");
}

id objc_msgSend_p_updateToPageIndex_usingCachedImagedFromRep_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_updateToPageIndex:usingCachedImagedFromRep:");
}

id objc_msgSend_p_updateToolbarButtonStates(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_updateToolbarButtonStates");
}

id objc_msgSend_p_updateTransform(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_updateTransform");
}

id objc_msgSend_p_updateUserInteractionForController_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_updateUserInteractionForController:");
}

id objc_msgSend_p_updateVerticalOverscrollTransform(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_updateVerticalOverscrollTransform");
}

id objc_msgSend_p_updateViewMasks(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_updateViewMasks");
}

id objc_msgSend_p_updateVisibleInfos(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_updateVisibleInfos");
}

id objc_msgSend_p_updateVisibleInfosWithPaddingOptions_force_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_updateVisibleInfosWithPaddingOptions:force:");
}

id objc_msgSend_p_updateWantsSpinner(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_updateWantsSpinner");
}

id objc_msgSend_p_updateWidgetInteractionMode(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_updateWidgetInteractionMode");
}

id objc_msgSend_p_updateWithDelegate(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_updateWithDelegate");
}

id objc_msgSend_p_updateWithPaginationResults(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_updateWithPaginationResults");
}

id objc_msgSend_p_updateWithSettings_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_updateWithSettings:");
}

id objc_msgSend_p_updateWithTouch_animated_lastTouch_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_updateWithTouch:animated:lastTouch:");
}

id objc_msgSend_p_upgradeAEAnnotation_moc_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_upgradeAEAnnotation:moc:");
}

id objc_msgSend_p_upgradeContextDirectoryForAsset_newPath_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_upgradeContextDirectoryForAsset:newPath:");
}

id objc_msgSend_p_urlForMovie_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_urlForMovie:");
}

id objc_msgSend_p_urlForResource_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_urlForResource:");
}

id objc_msgSend_p_useCompactPadding(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_useCompactPadding");
}

id objc_msgSend_p_useTitleOnlyForCallout(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_useTitleOnlyForCallout");
}

id objc_msgSend_p_userDataDictionary(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_userDataDictionary");
}

id objc_msgSend_p_userDataObjectForKey_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_userDataObjectForKey:");
}

id objc_msgSend_p_validateButtonsAnimated_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_validateButtonsAnimated:");
}

id objc_msgSend_p_validateFileURL_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_validateFileURL:");
}

id objc_msgSend_p_validatePageHints(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_validatePageHints");
}

id objc_msgSend_p_verticalOverflow(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_verticalOverflow");
}

id objc_msgSend_p_verticalOverscrollAnimationDuration(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_verticalOverscrollAnimationDuration");
}

id objc_msgSend_p_verticalOverscrollSetPreviousChapterNavigationUnit_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_verticalOverscrollSetPreviousChapterNavigationUnit:");
}

id objc_msgSend_p_verticalSpaceLimited(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_verticalSpaceLimited");
}

id objc_msgSend_p_viewFrameBasedOnStyle(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_viewFrameBasedOnStyle");
}

id objc_msgSend_p_viewSizeDidChange(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_viewSizeDidChange");
}

id objc_msgSend_p_visiblePageRangeWillChangeTo_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_visiblePageRangeWillChangeTo:");
}

id objc_msgSend_p_visibleRectChanged(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_visibleRectChanged");
}

id objc_msgSend_p_visibleSectionProviderIndexForIndexPath_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_visibleSectionProviderIndexForIndexPath:");
}

id objc_msgSend_p_wantsCancelButton(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_wantsCancelButton");
}

id objc_msgSend_p_wantsCurtainFadeOut(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_wantsCurtainFadeOut");
}

id objc_msgSend_p_wantsToOpenToTOC(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_wantsToOpenToTOC");
}

id objc_msgSend_p_webView_shouldStartLoadWithURL_navigationType_syncResponseHandler_asyncResponseHandler_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_webView:shouldStartLoadWithURL:navigationType:syncResponseHandler:asyncResponseHandler:");
}

id objc_msgSend_p_wellForTarget_wellRect_blendDistance_prev_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_wellForTarget:wellRect:blendDistance:prev:");
}

id objc_msgSend_p_widgetWidth(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_widgetWidth");
}

id objc_msgSend_p_willFade(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_willFade");
}

id objc_msgSend_p_willLayoutCanvasFlow_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_willLayoutCanvasFlow:");
}

id objc_msgSend_p_willLayoutCanvasPaginated_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_willLayoutCanvasPaginated:");
}

id objc_msgSend_p_willUnsettle(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_willUnsettle");
}

id objc_msgSend_p_windowOrViewSize(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_windowOrViewSize");
}

id objc_msgSend_p_withPageLayoutPerformBlock_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_withPageLayoutPerformBlock:");
}

id objc_msgSend_p_wpLayout(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_wpLayout");
}

id objc_msgSend_p_wpLayoutParent(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_wpLayoutParent");
}

id objc_msgSend_p_xOffsetForHorizontalAlignment_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_xOffsetForHorizontalAlignment:");
}

id objc_msgSend_p_yOffsetForVerticalAlignment_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_yOffsetForVerticalAlignment:");
}

id objc_msgSend_p_zoomColumnAtPoint_forceWpRep_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_zoomColumnAtPoint:forceWpRep:");
}

id objc_msgSend_p_zoomDuration(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_zoomDuration");
}

id objc_msgSend_p_zoomableCanvasControlRepForItemIndex_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_zoomableCanvasControlRepForItemIndex:");
}

id objc_msgSend_p_zoomableCanvasControllerForItem_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_zoomableCanvasControllerForItem:");
}

id objc_msgSend_p_zoomableCanvasControllerForItemIndex_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "p_zoomableCanvasControllerForItemIndex:");
}

id objc_msgSend_packageState(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "packageState");
}

id objc_msgSend_padding(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "padding");
}

id objc_msgSend_paddingAfter(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "paddingAfter");
}

id objc_msgSend_paddingBefore(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "paddingBefore");
}

id objc_msgSend_paddingPropertyNames(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "paddingPropertyNames");
}

id objc_msgSend_paddingWithTopInset_leftInset_bottomInset_rightInset_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "paddingWithTopInset:leftInset:bottomInset:rightInset:");
}

id objc_msgSend_pageAreaBackgroundColor(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "pageAreaBackgroundColor");
}

id objc_msgSend_pageAtRelativeIndex_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "pageAtRelativeIndex:");
}

id objc_msgSend_pageAtRelativeIndex_forPresentationType_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "pageAtRelativeIndex:forPresentationType:");
}

id objc_msgSend_pageCache(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "pageCache");
}

id objc_msgSend_pageContentWidth(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "pageContentWidth");
}

id objc_msgSend_pageControl(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "pageControl");
}

id objc_msgSend_pageControl_layerForState_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "pageControl:layerForState:");
}

id objc_msgSend_pageControl_layerForState_pageIndex_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "pageControl:layerForState:pageIndex:");
}

id objc_msgSend_pageControl_updateLayer_forHighlight_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "pageControl:updateLayer:forHighlight:");
}

id objc_msgSend_pageControlCreateFont_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "pageControlCreateFont:");
}

id objc_msgSend_pageControlTextColor_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "pageControlTextColor:");
}

id objc_msgSend_pageController(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "pageController");
}

id objc_msgSend_pageControllerForContentNode_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "pageControllerForContentNode:");
}

id objc_msgSend_pageControllerForContentOffset_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "pageControllerForContentOffset:");
}

id objc_msgSend_pageControllers(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "pageControllers");
}

id objc_msgSend_pageCount(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "pageCount");
}

id objc_msgSend_pageCountForNavigationUnitForPageController_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "pageCountForNavigationUnitForPageController:");
}

id objc_msgSend_pageCountForPagedCanvasController_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "pageCountForPagedCanvasController:");
}

id objc_msgSend_pageCountForPresentationType_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "pageCountForPresentationType:");
}

id objc_msgSend_pageDirectlyToIndex(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "pageDirectlyToIndex");
}

id objc_msgSend_pageDrawableList(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "pageDrawableList");
}

id objc_msgSend_pageDrawableMaps(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "pageDrawableMaps");
}

id objc_msgSend_pageEndCharIndex(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "pageEndCharIndex");
}

id objc_msgSend_pageHints(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "pageHints");
}

id objc_msgSend_pageHorizontally(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "pageHorizontally");
}

id objc_msgSend_pageHostForAbsolutePageIndex_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "pageHostForAbsolutePageIndex:");
}

id objc_msgSend_pageIndex(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "pageIndex");
}

id objc_msgSend_pageIndexFormatter(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "pageIndexFormatter");
}

id objc_msgSend_pageIndexFromBookspot_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "pageIndexFromBookspot:");
}

id objc_msgSend_pageInfo(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "pageInfo");
}

id objc_msgSend_pageInfoForPageController_pageIndex_presentationType_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "pageInfoForPageController:pageIndex:presentationType:");
}

id objc_msgSend_pageInfoForRelativePageIndex_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "pageInfoForRelativePageIndex:");
}

id objc_msgSend_pageInfoForRelativePageIndex_forPresentationType_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "pageInfoForRelativePageIndex:forPresentationType:");
}

id objc_msgSend_pageLabel(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "pageLabel");
}

id objc_msgSend_pageLabelBaselineToTitleLabelConstraint(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "pageLabelBaselineToTitleLabelConstraint");
}

id objc_msgSend_pageLabelTrailingConstraint(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "pageLabelTrailingConstraint");
}

id objc_msgSend_pageLayout(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "pageLayout");
}

id objc_msgSend_pageLeft(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "pageLeft");
}

id objc_msgSend_pageLocationWithAnnotation_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "pageLocationWithAnnotation:");
}

id objc_msgSend_pageLocationWithStorageAnchor_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "pageLocationWithStorageAnchor:");
}

id objc_msgSend_pageNumber(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "pageNumber");
}

id objc_msgSend_pageNumberColor(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "pageNumberColor");
}

id objc_msgSend_pageNumberDynamicWidth(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "pageNumberDynamicWidth");
}

id objc_msgSend_pageNumberFont(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "pageNumberFont");
}

id objc_msgSend_pageNumberFontSize(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "pageNumberFontSize");
}

id objc_msgSend_pageNumberHovered(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "pageNumberHovered");
}

id objc_msgSend_pageNumberLabel(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "pageNumberLabel");
}

id objc_msgSend_pageNumberLabelFrame(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "pageNumberLabelFrame");
}

id objc_msgSend_pageNumberLeftMargin(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "pageNumberLeftMargin");
}

id objc_msgSend_pageNumberPosition(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "pageNumberPosition");
}

id objc_msgSend_pageNumberPressed(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "pageNumberPressed");
}

id objc_msgSend_pageNumberString(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "pageNumberString");
}

id objc_msgSend_pageNumberStringForAbsolutePageIndex_forPresentationType_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "pageNumberStringForAbsolutePageIndex:forPresentationType:");
}

id objc_msgSend_pageNumberStringForAbsolutePageIndex_presentationType_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "pageNumberStringForAbsolutePageIndex:presentationType:");
}

id objc_msgSend_pageNumberStringForAnnotation_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "pageNumberStringForAnnotation:");
}

id objc_msgSend_pageNumberStringForLink_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "pageNumberStringForLink:");
}

id objc_msgSend_pageNumberStringForLocation_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "pageNumberStringForLocation:");
}

id objc_msgSend_pageNumberWidth(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "pageNumberWidth");
}

id objc_msgSend_pageOriginForRelativePageIndex_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "pageOriginForRelativePageIndex:");
}

id objc_msgSend_pageOriginForRelativePageIndex_pageFrame_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "pageOriginForRelativePageIndex:pageFrame:");
}

id objc_msgSend_pageOriginOfCharacterIndex_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "pageOriginOfCharacterIndex:");
}

id objc_msgSend_pagePositionController(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "pagePositionController");
}

id objc_msgSend_pagePositionControllerForPageController_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "pagePositionControllerForPageController:");
}

id objc_msgSend_pageRight(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "pageRight");
}

id objc_msgSend_pageSize(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "pageSize");
}

id objc_msgSend_pageSizeDelegate(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "pageSizeDelegate");
}

id objc_msgSend_pageSizeForPresentationType_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "pageSizeForPresentationType:");
}

id objc_msgSend_pageSizeWithZeroInPagingDirection(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "pageSizeWithZeroInPagingDirection");
}

id objc_msgSend_pageStartCharIndex(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "pageStartCharIndex");
}

id objc_msgSend_pageStartIndices(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "pageStartIndices");
}

id objc_msgSend_pageTargetRectForRevealingTOC(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "pageTargetRectForRevealingTOC");
}

id objc_msgSend_pageTheme(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "pageTheme");
}

id objc_msgSend_pageViewDisplacement(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "pageViewDisplacement");
}

id objc_msgSend_pageViewProvider(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "pageViewProvider");
}

id objc_msgSend_pageViewProvider_absolutePageIndexForPageInfo_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "pageViewProvider:absolutePageIndexForPageInfo:");
}

id objc_msgSend_pageViewProviderStartAbsolutePageIndex_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "pageViewProviderStartAbsolutePageIndex:");
}

id objc_msgSend_pageViewProviderUnclippedVisibleBounds_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "pageViewProviderUnclippedVisibleBounds:");
}

id objc_msgSend_pageViewProviderViewsAdded_pageIndexSet_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "pageViewProviderViewsAdded:pageIndexSet:");
}

id objc_msgSend_pageWithIndex_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "pageWithIndex:");
}

id objc_msgSend_pagedCanvasControlLayoutDidValidate_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "pagedCanvasControlLayoutDidValidate:");
}

id objc_msgSend_pagedCanvasController(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "pagedCanvasController");
}

id objc_msgSend_pagedCanvasController_customizeLayerHost_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "pagedCanvasController:customizeLayerHost:");
}

id objc_msgSend_pagedCanvasController_didScrollToPageIndex_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "pagedCanvasController:didScrollToPageIndex:");
}

id objc_msgSend_pagedCanvasController_expandBoundsForScrollViewHitTesting_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "pagedCanvasController:expandBoundsForScrollViewHitTesting:");
}

id objc_msgSend_pagedCanvasController_infosToDisplayForPageRange_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "pagedCanvasController:infosToDisplayForPageRange:");
}

id objc_msgSend_pagedCanvasController_renderedPageIndexSetFromReps_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "pagedCanvasController:renderedPageIndexSetFromReps:");
}

id objc_msgSend_pagedCanvasController_shouldDisableScrollingAtContentEdgesForScrollView_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "pagedCanvasController:shouldDisableScrollingAtContentEdgesForScrollView:");
}

id objc_msgSend_pagedCanvasController_shouldDisableScrollingWhenCursorIsHiddenForScrollView_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "pagedCanvasController:shouldDisableScrollingWhenCursorIsHiddenForScrollView:");
}

id objc_msgSend_pagedCanvasController_willUpdateWithInfosToDisplay_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "pagedCanvasController:willUpdateWithInfosToDisplay:");
}

id objc_msgSend_pagedCanvasControllerContentsScale_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "pagedCanvasControllerContentsScale:");
}

id objc_msgSend_pagedCanvasControllerDeferViewCreation_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "pagedCanvasControllerDeferViewCreation:");
}

id objc_msgSend_pagedCanvasControllerDidLayout_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "pagedCanvasControllerDidLayout:");
}

id objc_msgSend_pagedCanvasControllerDidLayoutAndRenderOnBackgroundThread_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "pagedCanvasControllerDidLayoutAndRenderOnBackgroundThread:");
}

id objc_msgSend_pagedCanvasControllerDidStopScrolling_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "pagedCanvasControllerDidStopScrolling:");
}

id objc_msgSend_pagedCanvasControllerRestrictVisibleToRenderedContent_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "pagedCanvasControllerRestrictVisibleToRenderedContent:");
}

id objc_msgSend_pages(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "pages");
}

id objc_msgSend_pagesForPresentationType_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "pagesForPresentationType:");
}

id objc_msgSend_pagesScrollView(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "pagesScrollView");
}

id objc_msgSend_paginate(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "paginate");
}

id objc_msgSend_paginateContentNode_paginationCompletionDelegate_priority_isForeground_activity_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "paginateContentNode:paginationCompletionDelegate:priority:isForeground:activity:");
}

id objc_msgSend_paginatedBodyStale(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "paginatedBodyStale");
}

id objc_msgSend_paginatedIsCurrent(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "paginatedIsCurrent");
}

id objc_msgSend_paginatedMediaTypes(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "paginatedMediaTypes");
}

id objc_msgSend_paginatedModelContentNodeBody(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "paginatedModelContentNodeBody");
}

id objc_msgSend_paginatedPageSize(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "paginatedPageSize");
}

id objc_msgSend_paginatedPositionerWithDelegate_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "paginatedPositionerWithDelegate:");
}

id objc_msgSend_paginatedPresentationType(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "paginatedPresentationType");
}

id objc_msgSend_paginatedPresentationTypeInContext_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "paginatedPresentationTypeInContext:");
}

id objc_msgSend_paginatedPresentationTypeInContext_pageSize_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "paginatedPresentationTypeInContext:pageSize:");
}

id objc_msgSend_paginatedSectionController(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "paginatedSectionController");
}

id objc_msgSend_paginatedSpreadSize(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "paginatedSpreadSize");
}

id objc_msgSend_paginatedState(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "paginatedState");
}

id objc_msgSend_paginatedTOCShowsStatusBar(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "paginatedTOCShowsStatusBar");
}

id objc_msgSend_paginationComplete(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "paginationComplete");
}

id objc_msgSend_paginationCompletions(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "paginationCompletions");
}

id objc_msgSend_paginationController(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "paginationController");
}

id objc_msgSend_paginationController_paginatedBody_forPresentationType_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "paginationController:paginatedBody:forPresentationType:");
}

id objc_msgSend_paginationController_paginationCompleteStateChangedTo_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "paginationController:paginationCompleteStateChangedTo:");
}

id objc_msgSend_paginationController_paginationResultChanged_forContentNode_paginationProgress_paginationComplete_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "paginationController:paginationResultChanged:forContentNode:paginationProgress:paginationComplete:");
}

id objc_msgSend_paginationCount(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "paginationCount");
}

id objc_msgSend_paginationDelegate(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "paginationDelegate");
}

id objc_msgSend_paginationProgress(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "paginationProgress");
}

id objc_msgSend_paginationQueue(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "paginationQueue");
}

id objc_msgSend_paginationResultForContentNode_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "paginationResultForContentNode:");
}

