@implementation TSAccessibility

+ (id)sharedInstance
{
  _QWORD block[5];

  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_220B80;
  block[3] = &unk_426DD0;
  block[4] = a1;
  if (qword_5437F0 != -1)
    dispatch_once(&qword_5437F0, block);
  return (id)qword_5437E8;
}

- (void)dealloc
{
  objc_super v3;

  if (-[TSAccessibility conformsToProtocol:](self, "conformsToProtocol:", &OBJC_PROTOCOL___TSAccessibilityExtras)&& (objc_opt_respondsToSelector(self, "unloadExtraAccessibilitySupport") & 1) != 0)
  {
    -[TSAccessibility unloadExtraAccessibilitySupport](self, "unloadExtraAccessibilitySupport");
  }
  v3.receiver = self;
  v3.super_class = (Class)TSAccessibility;
  -[TSAccessibility dealloc](&v3, "dealloc");
}

- (void)performValidation
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  uint64_t v308;
  uint64_t v309;
  uint64_t v310;
  uint64_t v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t v314;
  uint64_t v315;
  uint64_t v316;
  const char *v317;
  uint64_t v318;
  uint64_t v319;
  uint64_t v320;
  uint64_t v321;
  uint64_t v322;
  uint64_t v323;
  uint64_t v324;
  uint64_t v325;
  uint64_t v326;
  uint64_t v327;
  uint64_t v328;
  uint64_t v329;
  uint64_t v330;
  uint64_t v331;
  uint64_t v332;
  uint64_t v333;
  uint64_t v334;
  uint64_t v335;
  uint64_t v336;
  uint64_t v337;
  uint64_t v338;
  uint64_t v339;
  uint64_t v340;
  uint64_t v341;
  uint64_t v342;
  uint64_t v343;
  uint64_t v344;
  uint64_t v345;
  uint64_t v346;
  uint64_t v347;
  uint64_t v348;
  uint64_t v349;
  uint64_t v350;
  uint64_t v351;
  uint64_t v352;
  uint64_t v353;
  uint64_t v354;
  uint64_t v355;
  uint64_t v356;
  uint64_t v357;
  uint64_t v358;
  uint64_t v359;
  uint64_t v360;
  uint64_t v361;
  uint64_t v362;
  uint64_t v363;
  uint64_t v364;
  uint64_t v365;
  uint64_t v366;
  uint64_t v367;
  uint64_t v368;
  uint64_t v369;
  uint64_t v370;
  uint64_t v371;
  uint64_t v372;
  uint64_t v373;
  uint64_t v374;
  uint64_t v375;
  uint64_t v376;
  uint64_t v377;
  uint64_t v378;
  uint64_t v379;
  uint64_t v380;
  uint64_t v381;
  uint64_t v382;
  uint64_t v383;
  uint64_t v384;
  uint64_t v385;
  uint64_t v386;
  uint64_t v387;
  uint64_t v388;
  uint64_t v389;
  uint64_t v390;
  uint64_t v391;
  uint64_t v392;
  uint64_t v393;
  uint64_t v394;
  uint64_t v395;
  uint64_t v396;
  uint64_t v397;
  uint64_t v398;
  uint64_t v399;
  uint64_t v400;
  uint64_t v401;
  uint64_t v402;
  uint64_t v403;
  uint64_t v404;
  uint64_t v405;
  uint64_t v406;
  uint64_t v407;
  uint64_t v408;
  uint64_t v409;
  uint64_t v410;
  uint64_t v411;
  uint64_t v412;
  uint64_t v413;
  uint64_t v414;
  uint64_t v415;
  uint64_t v416;
  uint64_t v417;
  uint64_t v418;
  uint64_t v419;
  uint64_t v420;
  uint64_t v421;
  uint64_t v422;
  uint64_t v423;
  uint64_t v424;
  uint64_t v425;
  uint64_t v426;
  uint64_t v427;
  uint64_t v428;
  uint64_t v429;
  uint64_t v430;
  uint64_t v431;
  uint64_t v432;
  uint64_t v433;
  uint64_t v434;
  uint64_t v435;
  uint64_t v436;
  uint64_t v437;
  uint64_t v438;
  uint64_t v439;
  uint64_t v440;
  uint64_t v441;
  uint64_t v442;
  uint64_t v443;
  uint64_t v444;
  uint64_t v445;
  uint64_t v446;
  uint64_t v447;
  uint64_t v448;
  uint64_t v449;
  uint64_t v450;
  uint64_t v451;
  uint64_t v452;
  uint64_t v453;
  uint64_t v454;
  uint64_t v455;
  uint64_t v456;
  uint64_t v457;
  uint64_t v458;
  uint64_t v459;
  uint64_t v460;
  uint64_t v461;
  uint64_t v462;
  uint64_t v463;
  uint64_t v464;
  uint64_t v465;
  uint64_t v466;
  uint64_t v467;
  uint64_t v468;
  uint64_t v469;
  uint64_t v470;
  uint64_t v471;
  uint64_t v472;
  uint64_t v473;
  uint64_t v474;
  uint64_t v475;
  uint64_t v476;
  uint64_t v477;
  uint64_t v478;
  uint64_t v479;
  uint64_t v480;
  uint64_t v481;
  uint64_t v482;
  uint64_t v483;
  uint64_t v484;
  uint64_t v485;
  uint64_t v486;
  uint64_t v487;
  uint64_t v488;
  uint64_t v489;
  uint64_t v490;
  uint64_t v491;
  uint64_t v492;
  uint64_t v493;
  uint64_t v494;
  uint64_t v495;
  uint64_t v496;
  uint64_t v497;
  uint64_t v498;
  uint64_t v499;
  uint64_t v500;
  uint64_t v501;
  uint64_t v502;
  uint64_t v503;
  uint64_t v504;
  uint64_t v505;
  uint64_t v506;
  uint64_t v507;
  uint64_t v508;
  uint64_t v509;
  uint64_t v510;
  uint64_t v511;
  uint64_t v512;
  uint64_t v513;
  uint64_t v514;
  uint64_t v515;
  uint64_t v516;
  uint64_t v517;
  uint64_t v518;
  uint64_t v519;
  uint64_t v520;
  uint64_t v521;
  uint64_t v522;
  uint64_t v523;
  uint64_t v524;
  uint64_t v525;
  uint64_t v526;
  uint64_t v527;
  uint64_t v528;
  uint64_t v529;
  uint64_t v530;
  uint64_t v531;
  uint64_t v532;
  uint64_t v533;
  uint64_t v534;
  uint64_t v535;
  uint64_t v536;
  uint64_t v537;
  uint64_t v538;
  uint64_t v539;
  uint64_t v540;
  uint64_t v541;
  uint64_t v542;
  uint64_t v543;
  uint64_t v544;
  uint64_t v545;
  uint64_t v546;
  uint64_t v547;
  uint64_t v548;
  uint64_t v549;
  uint64_t v550;
  uint64_t v551;
  uint64_t v552;
  uint64_t v553;
  uint64_t v554;
  uint64_t v555;
  uint64_t v556;
  uint64_t v557;
  uint64_t v558;
  uint64_t v559;
  uint64_t v560;
  uint64_t v561;
  uint64_t v562;
  uint64_t v563;
  uint64_t v564;
  uint64_t v565;
  uint64_t v566;
  uint64_t v567;
  uint64_t v568;
  uint64_t v569;
  uint64_t v570;
  uint64_t v571;
  uint64_t v572;
  uint64_t v573;
  uint64_t v574;
  uint64_t v575;
  uint64_t v576;
  uint64_t v577;
  uint64_t v578;
  uint64_t v579;
  uint64_t v580;
  uint64_t v581;
  uint64_t v582;
  uint64_t v583;
  uint64_t v584;
  uint64_t v585;
  uint64_t v586;
  uint64_t v587;
  uint64_t v588;
  uint64_t v589;
  uint64_t v590;
  uint64_t v591;
  uint64_t v592;
  uint64_t v593;
  uint64_t v594;
  uint64_t v595;
  uint64_t v596;
  uint64_t v597;
  uint64_t v598;
  uint64_t v599;
  uint64_t v600;
  uint64_t v601;
  uint64_t v602;
  uint64_t v603;
  uint64_t v604;
  uint64_t v605;
  uint64_t v606;
  uint64_t v607;
  uint64_t v608;
  uint64_t v609;
  uint64_t v610;
  uint64_t v611;
  uint64_t v612;
  uint64_t v613;
  uint64_t v614;
  uint64_t v615;
  uint64_t v616;
  uint64_t v617;
  uint64_t v618;
  uint64_t v619;
  uint64_t v620;
  uint64_t v621;
  uint64_t v622;
  uint64_t v623;
  uint64_t v624;
  uint64_t v625;
  uint64_t v626;
  uint64_t v627;
  uint64_t v628;
  uint64_t v629;
  uint64_t v630;
  uint64_t v631;
  uint64_t v632;
  uint64_t v633;
  uint64_t v634;
  uint64_t v635;
  uint64_t v636;
  uint64_t v637;
  uint64_t v638;
  uint64_t v639;
  uint64_t v640;
  uint64_t v641;
  uint64_t v642;
  uint64_t v643;
  uint64_t v644;
  uint64_t v645;
  uint64_t v646;
  uint64_t v647;
  uint64_t v648;
  uint64_t v649;
  uint64_t v650;
  uint64_t v651;
  uint64_t v652;
  uint64_t v653;
  uint64_t v654;
  uint64_t v655;
  uint64_t v656;
  uint64_t v657;
  uint64_t v658;
  uint64_t v659;
  uint64_t v660;
  uint64_t v661;
  uint64_t v662;
  uint64_t v663;
  uint64_t v664;
  uint64_t v665;
  uint64_t v666;
  uint64_t v667;
  uint64_t v668;
  uint64_t v669;
  uint64_t v670;
  uint64_t v671;
  uint64_t v672;
  uint64_t v673;
  uint64_t v674;
  uint64_t v675;
  uint64_t v676;
  uint64_t v677;
  uint64_t v678;
  uint64_t v679;
  uint64_t v680;
  uint64_t v681;
  uint64_t v682;
  uint64_t v683;
  uint64_t v684;
  uint64_t v685;
  uint64_t v686;
  uint64_t v687;
  uint64_t v688;
  uint64_t v689;
  uint64_t v690;
  uint64_t v691;
  uint64_t v692;
  uint64_t v693;
  uint64_t v694;
  uint64_t v695;
  uint64_t v696;
  uint64_t v697;
  uint64_t v698;
  uint64_t v699;
  uint64_t v700;
  uint64_t v701;
  uint64_t v702;
  uint64_t v703;
  uint64_t v704;
  uint64_t v705;
  uint64_t v706;
  uint64_t v707;
  uint64_t v708;
  uint64_t v709;
  uint64_t v710;
  uint64_t v711;
  uint64_t v712;
  uint64_t v713;
  uint64_t v714;
  uint64_t v715;
  uint64_t v716;
  uint64_t v717;
  uint64_t v718;
  uint64_t v719;
  uint64_t v720;
  uint64_t v721;
  uint64_t v722;
  uint64_t v723;
  uint64_t v724;
  uint64_t v725;
  uint64_t v726;
  uint64_t v727;
  uint64_t v728;
  uint64_t v729;
  uint64_t v730;
  uint64_t v731;
  uint64_t v732;
  uint64_t v733;
  uint64_t v734;
  uint64_t v735;
  uint64_t v736;
  uint64_t v737;
  uint64_t v738;
  uint64_t v739;
  uint64_t v740;
  uint64_t v741;
  uint64_t v742;
  uint64_t v743;
  uint64_t v744;
  uint64_t v745;
  uint64_t v746;
  uint64_t v747;
  uint64_t v748;
  uint64_t v749;
  uint64_t v750;
  uint64_t v751;
  uint64_t v752;
  uint64_t v753;
  uint64_t v754;
  uint64_t v755;
  uint64_t v756;
  uint64_t v757;
  uint64_t v758;
  uint64_t v759;
  uint64_t v760;
  uint64_t v761;
  uint64_t v762;
  uint64_t v763;
  uint64_t v764;
  uint64_t v765;
  uint64_t v766;
  uint64_t v767;
  uint64_t v768;
  uint64_t v769;
  uint64_t v770;
  uint64_t v771;
  uint64_t v772;
  uint64_t v773;
  uint64_t v774;
  uint64_t v775;
  uint64_t v776;
  uint64_t v777;
  uint64_t v778;
  uint64_t v779;
  uint64_t v780;
  uint64_t v781;
  uint64_t v782;
  uint64_t v783;
  uint64_t v784;
  uint64_t v785;
  uint64_t v786;
  uint64_t v787;
  uint64_t v788;
  uint64_t v789;
  uint64_t v790;
  uint64_t v791;
  uint64_t v792;
  uint64_t v793;
  uint64_t v794;
  uint64_t v795;
  uint64_t v796;
  uint64_t v797;
  uint64_t v798;
  uint64_t v799;
  uint64_t v800;
  uint64_t v801;
  uint64_t v802;
  uint64_t v803;
  uint64_t v804;
  uint64_t v805;
  uint64_t v806;
  uint64_t v807;
  uint64_t v808;
  uint64_t v809;
  uint64_t v810;
  uint64_t v811;
  uint64_t v812;
  uint64_t v813;
  uint64_t v814;
  uint64_t v815;
  uint64_t v816;
  uint64_t v817;
  uint64_t v818;
  uint64_t v819;
  uint64_t v820;
  uint64_t v821;
  uint64_t v822;
  uint64_t v823;
  uint64_t v824;
  uint64_t v825;
  uint64_t v826;
  uint64_t v827;
  uint64_t v828;
  uint64_t v829;
  uint64_t v830;
  uint64_t v831;
  uint64_t v832;
  uint64_t v833;
  uint64_t v834;
  uint64_t v835;
  uint64_t v836;
  uint64_t v837;
  uint64_t v838;
  uint64_t v839;
  uint64_t v840;
  uint64_t v841;
  uint64_t v842;
  uint64_t v843;
  uint64_t v844;
  uint64_t v845;
  uint64_t v846;
  uint64_t v847;
  uint64_t v848;
  uint64_t v849;
  uint64_t v850;
  uint64_t v851;
  uint64_t v852;
  uint64_t v853;
  uint64_t v854;
  uint64_t v855;
  uint64_t v856;
  uint64_t v857;
  uint64_t v858;
  uint64_t v859;
  uint64_t v860;
  uint64_t v861;
  uint64_t v862;
  uint64_t v863;
  uint64_t v864;
  uint64_t v865;
  uint64_t v866;
  uint64_t v867;
  uint64_t v868;
  uint64_t v869;
  uint64_t v870;
  uint64_t v871;
  uint64_t v872;
  uint64_t v873;
  uint64_t v874;
  uint64_t v875;
  uint64_t v876;
  uint64_t v877;
  uint64_t v878;
  uint64_t v879;
  uint64_t v880;
  uint64_t v881;
  uint64_t v882;
  uint64_t v883;
  uint64_t v884;
  uint64_t v885;
  uint64_t v886;
  uint64_t v887;
  uint64_t v888;
  uint64_t v889;
  uint64_t v890;
  uint64_t v891;
  uint64_t v892;
  uint64_t v893;
  uint64_t v894;
  uint64_t v895;
  uint64_t v896;
  uint64_t v897;
  uint64_t v898;
  uint64_t v899;
  uint64_t v900;
  uint64_t v901;
  uint64_t v902;
  uint64_t v903;
  uint64_t v904;
  uint64_t v905;
  uint64_t v906;
  uint64_t v907;
  uint64_t v908;
  uint64_t v909;
  uint64_t v910;
  uint64_t v911;
  uint64_t v912;
  uint64_t v913;
  uint64_t v914;
  uint64_t v915;
  uint64_t v916;
  uint64_t v917;
  uint64_t v918;
  uint64_t v919;
  uint64_t v920;
  uint64_t v921;
  uint64_t v922;
  uint64_t v923;
  uint64_t v924;
  uint64_t v925;
  uint64_t v926;
  uint64_t v927;
  uint64_t v928;
  uint64_t v929;
  uint64_t v930;
  uint64_t v931;
  uint64_t v932;
  uint64_t v933;
  uint64_t v934;
  uint64_t v935;
  uint64_t v936;
  uint64_t v937;
  uint64_t v938;
  uint64_t v939;
  uint64_t v940;
  uint64_t v941;
  uint64_t v942;
  uint64_t v943;
  uint64_t v944;
  uint64_t v945;
  uint64_t v946;
  uint64_t v947;
  uint64_t v948;
  uint64_t v949;
  uint64_t v950;
  uint64_t v951;
  uint64_t v952;
  uint64_t v953;
  uint64_t v954;
  uint64_t v955;
  uint64_t v956;
  uint64_t v957;
  uint64_t v958;
  uint64_t v959;
  uint64_t v960;
  uint64_t v961;
  uint64_t v962;
  uint64_t v963;
  uint64_t v964;
  uint64_t v965;
  uint64_t v966;
  uint64_t v967;
  uint64_t v968;
  uint64_t v969;
  uint64_t v970;
  uint64_t v971;
  uint64_t v972;
  uint64_t v973;
  uint64_t v974;
  uint64_t v975;
  uint64_t v976;
  uint64_t v977;
  uint64_t v978;
  uint64_t v979;
  uint64_t v980;
  uint64_t v981;
  uint64_t v982;
  uint64_t v983;
  uint64_t v984;
  uint64_t v985;
  uint64_t v986;
  uint64_t v987;
  uint64_t v988;
  uint64_t v989;
  uint64_t v990;
  uint64_t v991;
  uint64_t v992;
  uint64_t v993;
  uint64_t v994;
  uint64_t v995;
  uint64_t v996;
  uint64_t v997;
  uint64_t v998;
  uint64_t v999;
  uint64_t v1000;
  uint64_t v1001;
  uint64_t v1002;
  uint64_t v1003;
  uint64_t v1004;
  uint64_t v1005;
  uint64_t v1006;
  uint64_t v1007;
  uint64_t v1008;
  uint64_t v1009;
  uint64_t v1010;
  uint64_t v1011;
  uint64_t v1012;
  uint64_t v1013;
  uint64_t v1014;
  uint64_t v1015;
  uint64_t v1016;
  uint64_t v1017;
  uint64_t v1018;
  uint64_t v1019;
  uint64_t v1020;
  uint64_t v1021;
  uint64_t v1022;
  uint64_t v1023;
  uint64_t v1024;
  uint64_t v1025;
  uint64_t v1026;
  uint64_t v1027;
  uint64_t v1028;
  uint64_t v1029;
  uint64_t v1030;
  uint64_t v1031;
  uint64_t v1032;
  uint64_t v1033;
  uint64_t v1034;
  uint64_t v1035;
  uint64_t v1036;
  uint64_t v1037;
  uint64_t v1038;
  uint64_t v1039;
  uint64_t v1040;
  uint64_t v1041;
  uint64_t v1042;
  uint64_t v1043;
  uint64_t v1044;
  uint64_t v1045;
  uint64_t v1046;
  uint64_t v1047;
  uint64_t v1048;
  uint64_t v1049;
  uint64_t v1050;
  uint64_t v1051;
  uint64_t v1052;
  uint64_t v1053;
  uint64_t v1054;
  uint64_t v1055;
  uint64_t v1056;
  uint64_t v1057;
  uint64_t v1058;
  uint64_t v1059;
  uint64_t v1060;
  uint64_t v1061;
  uint64_t v1062;
  uint64_t v1063;
  uint64_t v1064;
  uint64_t v1065;
  uint64_t v1066;
  uint64_t v1067;
  uint64_t v1068;
  uint64_t v1069;
  uint64_t v1070;
  uint64_t v1071;
  uint64_t v1072;
  uint64_t v1073;
  uint64_t v1074;
  uint64_t v1075;
  uint64_t v1076;
  uint64_t v1077;
  uint64_t v1078;
  uint64_t v1079;
  uint64_t v1080;
  uint64_t v1081;
  uint64_t v1082;
  uint64_t v1083;
  uint64_t v1084;
  uint64_t v1085;
  uint64_t v1086;
  uint64_t v1087;
  uint64_t v1088;
  uint64_t v1089;
  uint64_t v1090;
  uint64_t v1091;
  uint64_t v1092;
  uint64_t v1093;
  uint64_t v1094;
  uint64_t v1095;
  uint64_t v1096;
  uint64_t v1097;
  uint64_t v1098;
  uint64_t v1099;
  uint64_t v1100;
  uint64_t v1101;
  uint64_t v1102;
  uint64_t v1103;
  uint64_t v1104;
  uint64_t v1105;
  uint64_t v1106;
  uint64_t v1107;
  uint64_t v1108;
  uint64_t v1109;
  uint64_t v1110;
  uint64_t v1111;
  uint64_t v1112;
  uint64_t v1113;
  uint64_t v1114;
  uint64_t v1115;
  uint64_t v1116;
  uint64_t v1117;
  uint64_t v1118;
  uint64_t v1119;
  uint64_t v1120;
  uint64_t v1121;
  uint64_t v1122;
  uint64_t v1123;
  uint64_t v1124;
  uint64_t v1125;
  uint64_t v1126;
  uint64_t v1127;
  uint64_t v1128;
  uint64_t v1129;
  uint64_t v1130;
  uint64_t v1131;
  uint64_t v1132;
  uint64_t v1133;
  uint64_t v1134;
  uint64_t v1135;
  uint64_t v1136;
  uint64_t v1137;
  uint64_t v1138;
  uint64_t v1139;
  uint64_t v1140;
  uint64_t v1141;
  uint64_t v1142;
  uint64_t v1143;
  uint64_t v1144;
  uint64_t v1145;
  uint64_t v1146;
  uint64_t v1147;
  uint64_t v1148;
  uint64_t v1149;
  uint64_t v1150;
  uint64_t v1151;
  uint64_t v1152;
  uint64_t v1153;
  uint64_t v1154;
  uint64_t v1155;
  uint64_t v1156;
  uint64_t v1157;
  uint64_t v1158;
  uint64_t v1159;
  uint64_t v1160;
  uint64_t v1161;
  uint64_t v1162;
  uint64_t v1163;
  uint64_t v1164;
  uint64_t v1165;
  uint64_t v1166;
  uint64_t v1167;
  uint64_t v1168;
  uint64_t v1169;
  uint64_t v1170;
  uint64_t v1171;
  uint64_t v1172;
  uint64_t v1173;
  uint64_t v1174;
  uint64_t v1175;
  uint64_t v1176;
  uint64_t v1177;
  uint64_t v1178;
  uint64_t v1179;
  uint64_t v1180;
  uint64_t v1181;
  uint64_t v1182;
  uint64_t v1183;
  uint64_t v1184;
  uint64_t v1185;
  uint64_t v1186;
  uint64_t v1187;
  uint64_t v1188;
  uint64_t v1189;
  uint64_t v1190;
  uint64_t v1191;
  uint64_t v1192;
  uint64_t v1193;
  uint64_t v1194;
  uint64_t v1195;
  uint64_t v1196;
  uint64_t v1197;
  uint64_t v1198;
  uint64_t v1199;
  uint64_t v1200;
  uint64_t v1201;
  uint64_t v1202;
  uint64_t v1203;
  uint64_t v1204;
  uint64_t v1205;
  uint64_t v1206;
  uint64_t v1207;
  uint64_t v1208;
  uint64_t v1209;
  uint64_t v1210;
  uint64_t v1211;
  uint64_t v1212;
  uint64_t v1213;
  uint64_t v1214;
  uint64_t v1215;
  uint64_t v1216;
  uint64_t v1217;
  uint64_t v1218;
  uint64_t v1219;
  uint64_t v1220;
  uint64_t v1221;
  uint64_t v1222;
  uint64_t v1223;
  uint64_t v1224;
  uint64_t v1225;
  uint64_t v1226;
  uint64_t v1227;
  uint64_t v1228;
  uint64_t v1229;
  uint64_t v1230;
  uint64_t v1231;
  uint64_t v1232;
  uint64_t v1233;
  uint64_t v1234;
  uint64_t v1235;
  uint64_t v1236;
  uint64_t v1237;
  uint64_t v1238;
  uint64_t v1239;
  uint64_t v1240;
  uint64_t v1241;
  uint64_t v1242;
  uint64_t v1243;
  uint64_t v1244;
  uint64_t v1245;
  uint64_t v1246;
  uint64_t v1247;
  uint64_t v1248;
  uint64_t v1249;
  uint64_t v1250;
  uint64_t v1251;
  uint64_t v1252;
  uint64_t v1253;
  uint64_t v1254;
  uint64_t v1255;
  uint64_t v1256;
  uint64_t v1257;
  uint64_t v1258;
  uint64_t v1259;
  uint64_t v1260;
  uint64_t v1261;
  uint64_t v1262;
  uint64_t v1263;
  uint64_t v1264;
  uint64_t v1265;
  uint64_t v1266;
  uint64_t v1267;
  uint64_t v1268;
  uint64_t v1269;
  uint64_t v1270;
  uint64_t v1271;
  uint64_t v1272;
  uint64_t v1273;
  uint64_t v1274;
  uint64_t v1275;
  uint64_t v1276;
  uint64_t v1277;
  uint64_t v1278;
  uint64_t v1279;
  uint64_t v1280;
  uint64_t v1281;
  uint64_t v1282;
  uint64_t v1283;
  uint64_t v1284;
  uint64_t v1285;
  uint64_t v1286;
  uint64_t v1287;
  uint64_t v1288;
  uint64_t v1289;
  uint64_t v1290;
  uint64_t v1291;
  uint64_t v1292;
  uint64_t v1293;
  uint64_t v1294;
  uint64_t v1295;
  uint64_t v1296;
  uint64_t v1297;
  uint64_t v1298;
  uint64_t v1299;
  uint64_t v1300;
  uint64_t v1301;
  uint64_t v1302;
  uint64_t v1303;
  uint64_t v1304;
  uint64_t v1305;
  uint64_t v1306;
  uint64_t v1307;
  uint64_t v1308;
  uint64_t v1309;
  uint64_t v1310;
  uint64_t v1311;
  uint64_t v1312;
  uint64_t v1313;
  uint64_t v1314;
  uint64_t v1315;
  uint64_t v1316;
  uint64_t v1317;
  uint64_t v1318;
  uint64_t v1319;
  uint64_t v1320;
  uint64_t v1321;
  uint64_t v1322;
  uint64_t v1323;
  uint64_t v1324;
  uint64_t v1325;
  uint64_t v1326;
  uint64_t v1327;
  uint64_t v1328;
  uint64_t v1329;
  uint64_t v1330;
  uint64_t v1331;
  uint64_t v1332;
  uint64_t v1333;
  uint64_t v1334;
  uint64_t v1335;
  uint64_t v1336;
  uint64_t v1337;
  uint64_t v1338;
  uint64_t v1339;
  uint64_t v1340;
  uint64_t v1341;
  uint64_t v1342;
  uint64_t v1343;
  uint64_t v1344;
  uint64_t v1345;
  uint64_t v1346;
  uint64_t v1347;
  uint64_t v1348;
  uint64_t v1349;
  uint64_t v1350;
  uint64_t v1351;
  uint64_t v1352;
  uint64_t v1353;
  uint64_t v1354;
  uint64_t v1355;
  uint64_t v1356;
  uint64_t v1357;
  uint64_t v1358;
  uint64_t v1359;
  uint64_t v1360;
  uint64_t v1361;
  uint64_t v1362;
  uint64_t v1363;
  uint64_t v1364;
  uint64_t v1365;
  uint64_t v1366;
  uint64_t v1367;
  uint64_t v1368;
  uint64_t v1369;
  uint64_t v1370;
  uint64_t v1371;
  uint64_t v1372;
  uint64_t v1373;
  uint64_t v1374;
  uint64_t v1375;
  uint64_t v1376;
  uint64_t v1377;
  uint64_t v1378;
  uint64_t v1379;
  uint64_t v1380;
  uint64_t v1381;
  uint64_t v1382;
  uint64_t v1383;
  uint64_t v1384;
  uint64_t v1385;
  uint64_t v1386;
  uint64_t v1387;
  uint64_t v1388;
  uint64_t v1389;
  uint64_t v1390;
  uint64_t v1391;
  uint64_t v1392;
  uint64_t v1393;
  uint64_t v1394;
  uint64_t v1395;
  uint64_t v1396;
  uint64_t v1397;
  uint64_t v1398;
  uint64_t v1399;
  uint64_t v1400;
  uint64_t v1401;
  uint64_t v1402;
  uint64_t v1403;
  uint64_t v1404;
  uint64_t v1405;
  uint64_t v1406;
  uint64_t v1407;
  uint64_t v1408;
  uint64_t v1409;
  uint64_t v1410;
  uint64_t v1411;
  uint64_t v1412;
  uint64_t v1413;
  uint64_t v1414;
  uint64_t v1415;
  uint64_t v1416;
  uint64_t v1417;
  uint64_t v1418;
  uint64_t v1419;
  uint64_t v1420;
  uint64_t v1421;
  uint64_t v1422;
  uint64_t v1423;
  uint64_t v1424;
  uint64_t v1425;
  uint64_t v1426;
  uint64_t v1427;
  uint64_t v1428;
  uint64_t v1429;
  uint64_t v1430;
  uint64_t v1431;
  uint64_t v1432;
  uint64_t v1433;
  uint64_t v1434;
  uint64_t v1435;
  uint64_t v1436;
  uint64_t v1437;
  uint64_t v1438;
  uint64_t v1439;
  uint64_t v1440;
  uint64_t v1441;
  uint64_t v1442;
  uint64_t v1443;
  uint64_t v1444;
  uint64_t v1445;
  uint64_t v1446;
  uint64_t v1447;
  uint64_t v1448;
  uint64_t v1449;
  uint64_t v1450;
  uint64_t v1451;
  uint64_t v1452;
  uint64_t v1453;
  uint64_t v1454;
  uint64_t v1455;
  uint64_t v1456;
  uint64_t v1457;
  uint64_t v1458;
  uint64_t v1459;
  uint64_t v1460;
  uint64_t v1461;
  uint64_t v1462;
  uint64_t v1463;
  uint64_t v1464;
  uint64_t v1465;
  uint64_t v1466;
  uint64_t v1467;
  uint64_t v1468;
  uint64_t v1469;
  uint64_t v1470;
  uint64_t v1471;
  uint64_t v1472;
  uint64_t v1473;
  uint64_t v1474;
  uint64_t v1475;
  uint64_t v1476;
  uint64_t v1477;
  uint64_t v1478;
  uint64_t v1479;
  uint64_t v1480;
  uint64_t v1481;
  uint64_t v1482;
  uint64_t v1483;
  uint64_t v1484;
  uint64_t v1485;
  uint64_t v1486;
  uint64_t v1487;
  uint64_t v1488;
  uint64_t v1489;
  uint64_t v1490;
  uint64_t v1491;
  uint64_t v1492;
  uint64_t v1493;
  uint64_t v1494;
  uint64_t v1495;
  uint64_t v1496;
  uint64_t v1497;
  uint64_t v1498;
  uint64_t v1499;
  uint64_t v1500;
  uint64_t v1501;
  uint64_t v1502;
  uint64_t v1503;
  uint64_t v1504;
  uint64_t v1505;
  uint64_t v1506;
  uint64_t v1507;
  uint64_t v1508;
  uint64_t v1509;
  uint64_t v1510;
  uint64_t v1511;
  uint64_t v1512;
  uint64_t v1513;
  uint64_t v1514;
  uint64_t v1515;
  uint64_t v1516;
  uint64_t v1517;
  uint64_t v1518;
  uint64_t v1519;
  uint64_t v1520;
  uint64_t v1521;
  uint64_t v1522;
  uint64_t v1523;
  uint64_t v1524;
  uint64_t v1525;
  uint64_t v1526;
  uint64_t v1527;
  uint64_t v1528;
  uint64_t v1529;
  uint64_t v1530;
  uint64_t v1531;
  uint64_t v1532;
  uint64_t v1533;
  uint64_t v1534;
  uint64_t v1535;
  uint64_t v1536;
  uint64_t v1537;
  uint64_t v1538;
  uint64_t v1539;
  uint64_t v1540;
  uint64_t v1541;
  uint64_t v1542;
  uint64_t v1543;
  uint64_t v1544;
  uint64_t v1545;
  uint64_t v1546;
  uint64_t v1547;

  if (-[TSAccessibility supportsCharts](self, "supportsCharts"))
  {
    __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSCH3DFill"), CFSTR("identifier"), "@", v2, v3, v4, v5, v6, 0);
    __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSCH3DFillSetIdentifier"), CFSTR("textureSetFilename"), "@", v7, v8, v9, v10, v11, 0);
    __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSCHChartDrawableInfo"), CFSTR("chart"), "@", v12, v13, v14, v15, v16, 0);
    __TSAccessibilityValidateIsKindOfClass(CFSTR("TSCHChartDrawableInfo"), CFSTR("TSDDrawableInfo"));
    __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSCHChartInfo"), CFSTR("chartType"), "@", v17, v18, v19, v20, v21, 0);
    __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSCHChartRep"), CFSTR("chartInfo"), "@", v22, v23, v24, v25, v26, 0);
    __TSAccessibilityValidateIsKindOfClass(CFSTR("TSCHChartSeriesStyle"), CFSTR("TSSStyle"));
    __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSCHChartStylePreset"), CFSTR("seriesStyles"), "@", v27, v28, v29, v30, v31, 0);
    __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSCHChartType"), CFSTR("userInterfaceName"), "@", v32, v33, v34, v35, v36, 0);
  }
  __TSAccessibilityValidateIsKindOfClass(CFSTR("TSDAngleGradient"), CFSTR("TSDGradient"));
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSDAngleGradient"), CFSTR("gradientAngleInDegrees"), "d", v37, v38, v39, v40, v41, 0);
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSDAnnotationController"), CFSTR("hasAnnotations"), "B", v42, v43, v44, v45, v46, 0);
  __TSAccessibilityValidateIsKindOfClass(CFSTR("TSDAudioRep"), CFSTR("TSDRep"));
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSDAudioRep"), CFSTR("movieInfo"), "@", v47, v48, v49, v50, v51, 0);
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSDAudioRep"), CFSTR("playerController"), "@", v52, v53, v54, v55, v56, 0);
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSDBezierPath"), CFSTR("isCircular"), "B", v57, v58, v59, v60, v61, 0);
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSDBezierPath"), CFSTR("isDiamond"), "B", v62, v63, v64, v65, v66, 0);
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSDBezierPath"), CFSTR("isLineSegment"), "B", v67, v68, v69, v70, v71, 0);
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSDBezierPath"), CFSTR("isRectangular"), "B", v72, v73, v74, v75, v76, 0);
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSDBezierPath"), CFSTR("isTriangular"), "B", v77, v78, v79, v80, v81, 0);
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSDBezierPath"), CFSTR("elementCount"), "q", v82, v83, v84, v85, v86, 0);
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSDBezierPath"), CFSTR("isFlat"), "B", v87, v88, v89, v90, v91, 0);
  __TSAccessibilityValidateIsKindOfClass(CFSTR("TSDBezierPathSource"), CFSTR("TSDPathSource"));
  __TSAccessibilityValidateIvarType(CFSTR("TSDBezierPathSource"), "mPath", "TSDBezierPath");
  __TSAccessibilityValidateIsKindOfClass(CFSTR("TSDBrushStroke"), CFSTR("TSDSmartStroke"));
  __TSAccessibilityValidateIsKindOfClass(CFSTR("TSDCalligraphyStroke"), CFSTR("TSDSmartStroke"));
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSDCalloutPathSource"), CFSTR("isTailAtCenter"), "B", v92, v93, v94, v95, v96, 0);
  __TSAccessibilityValidateIsKindOfClass(CFSTR("TSDCalloutPathSource"), CFSTR("TSDPathSource"));
  __TSAccessibilityValidateIvarType(CFSTR("TSDCanvas"), "mInLayout", "B");
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSDCanvas"), CFSTR("accessController"), "@", v97, v98, v99, v100, v101, 0);
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSDCanvas"), CFSTR("canvasController"), "@", v102, v103, v104, v105, v106, 0);
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSDCanvas"), CFSTR("convertBoundsToUnscaledPoint:"), "{CGPoint=dd}", v107, v108, v109, v110, v111, "{CGPoint=dd}");
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSDCanvas"), CFSTR("convertUnscaledToBoundsRect:"), "{CGRect={CGPoint=dd}{CGSize=dd}}", v112, v113, v114, v115, v116, "{CGRect={CGPoint=dd}{CGSize=dd}}");
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSDCanvas"), CFSTR("delegate"), "@", v117, v118, v119, v120, v121, 0);
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSDCanvas"), CFSTR("i_registerRep:"), "v", v122, v123, v124, v125, v126, "@");
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSDCanvas"), CFSTR("i_unregisterRep:"), "v", v127, v128, v129, v130, v131, "@");
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSDCanvas"), CFSTR("layoutController"), "@", v132, v133, v134, v135, v136, 0);
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSDCanvas"), CFSTR("p_updateRepsFromLayouts"), "B", v137, v138, v139, v140, v141, 0);
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSDCanvas"), CFSTR("topLevelReps"), "@", v142, v143, v144, v145, v146, 0);
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSDCanvas"), CFSTR("viewScale"), "d", v147, v148, v149, v150, v151, 0);
  __TSAccessibilityValidateProtocolMethod(CFSTR("TSDCanvasEditor"), CFSTR("canPerformEditorAction:withSender:"), 1, 1);
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSDCanvasEditor"), CFSTR("canvasEditorHelper"), "@", v152, v153, v154, v155, v156, 0);
  __TSAccessibilityValidateProtocolMethod(CFSTR("TSDCanvasEditor"), CFSTR("canvasSelection"), 1, 1);
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSDCanvasEditor"), CFSTR("canvasSelectionWithInfos:"), "@", v157, v158, v159, v160, v161, "@");
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSDCanvasEditor"), CFSTR("interactiveCanvasController"), "@", v162, v163, v164, v165, v166, 0);
  __TSAccessibilityValidateProtocolMethod(CFSTR("TSDCanvasEditor"), CFSTR("canvasSelection"), 1, 1);
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSDCanvasEditorHelper"), CFSTR("canvasEditor"), "@", v167, v168, v169, v170, v171, 0);
  __TSAccessibilityValidateIsKindOfClass(CFSTR("TSDCanvasLayer"), CFSTR("CALayer"));
  __TSAccessibilityValidateProtocolMethod(CFSTR("TSDCanvasSelection"), CFSTR("unlockedInfos"), 1, 1);
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSDCanvasView"), CFSTR("canvasLayer"), "@", v172, v173, v174, v175, v176, 0);
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSDCanvasView"), CFSTR("controller"), "@", v177, v178, v179, v180, v181, 0);
  __TSAccessibilityValidateIsKindOfClass(CFSTR("TSDColorFill"), CFSTR("TSDFill"));
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSDColorFill"), CFSTR("color"), "@", v182, v183, v184, v185, v186, 0);
  __TSAccessibilityValidateIsKindOfClass(CFSTR("TSDConnectionLinePathSource"), CFSTR("TSDPathSource"));
  __TSAccessibilityValidateIsKindOfClass(CFSTR("TSDContactShadow"), CFSTR("TSDShadow"));
  __TSAccessibilityValidateIsKindOfClass(CFSTR("TSDCurvedShadow"), CFSTR("TSDShadow"));
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSDDefaultPartitioner"), CFSTR("i_repForCanvas:"), "@", v187, v188, v189, v190, v191, "@");
  __TSAccessibilityValidateClassMethodComplete(CFSTR("TSDDefaultRenderingObjects"), CFSTR("defaultEndpoints"), "@", v192, v193, v194, v195, v196, 0);
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSDDrawableEditor"), CFSTR("interactiveCanvasController"), "@", v197, v198, v199, v200, v201, 0);
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSDDrawableInfo"), CFSTR("accessibilityDescription"), "@", v202, v203, v204, v205, v206, 0);
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSDDrawableInfo"), CFSTR("comment"), "@", v207, v208, v209, v210, v211, 0);
  __TSAccessibilityValidateIsKindOfClass(CFSTR("TSDDropShadow"), CFSTR("TSDShadow"));
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSDEditableBezierPathSource"), CFSTR("bezierPath"), "@", v212, v213, v214, v215, v216, 0);
  __TSAccessibilityValidateIsKindOfClass(CFSTR("TSDEditableBezierPathSource"), CFSTR("TSDPathSource"));
  __TSAccessibilityValidateProtocolMethod(CFSTR("TSDEditor"), CFSTR("canPerformEditorAction:withSender:"), 0, 1);
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSDEditorController"), CFSTR("currentEditors"), "@", v217, v218, v219, v220, v221, 0);
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSDEditorController"), CFSTR("editorForEditAction:withSender:"), "@", v222, v223, v224, v225, v226, ":");
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSDEditorController"), CFSTR("mostSpecificCurrentEditorOfClass:"), "@", v227, v228, v229, v230, v231, "#");
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSDEditorController"), CFSTR("textInputEditor"), "@", v232, v233, v234, v235, v236, 0);
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSDFill"), CFSTR("fillType"), "i", v237, v238, v239, v240, v241, 0);
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSDFill"), CFSTR("referenceColor"), "@", v242, v243, v244, v245, v246, 0);
  __TSAccessibilityValidateIsKindOfClass(CFSTR("TSDFrame"), CFSTR("TSDStroke"));
  __TSAccessibilityValidateIvarType(CFSTR("TSDFrame"), "mSpec", "TSDFrameSpec");
  __TSAccessibilityValidateIvarType(CFSTR("TSDFrameSpec"), "mFrameName", "NSString");
  __TSAccessibilityValidateIsKindOfClass(CFSTR("TSDGradient"), CFSTR("TSDFill"));
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSDGradient"), CFSTR("gradientStops"), "@", v247, v248, v249, v250, v251, 0);
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSDGradient"), CFSTR("gradientType"), "Q", v252, v253, v254, v255, v256, 0);
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSDGradientStop"), CFSTR("color"), "@", v257, v258, v259, v260, v261, 0);
  __TSAccessibilityValidateIsKindOfClass(CFSTR("TSDImageFill"), CFSTR("TSDFill"));
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSDImageFill"), CFSTR("technique"), "i", v262, v263, v264, v265, v266, 0);
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSDImageFill"), CFSTR("tintColor"), "@", v267, v268, v269, v270, v271, 0);
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSDImageInfo"), CFSTR("imageData"), "@", v272, v273, v274, v275, v276, 0);
  __TSAccessibilityValidateIsKindOfClass(CFSTR("TSDImageInfo"), CFSTR("TSDDrawableInfo"));
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSDImageRep"), CFSTR("imageInfo"), "@", v277, v278, v279, v280, v281, 0);
  __TSAccessibilityValidateIsKindOfClass(CFSTR("TSDImageRep"), CFSTR("TSDRep"));
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSDInfoGeometry"), CFSTR("angle"), "d", v282, v283, v284, v285, v286, 0);
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSDInfoGeometry"), CFSTR("position"), "{CGPoint=dd}", v287, v288, v289, v290, v291, 0);
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSDInfoGeometry"), CFSTR("size"), "{CGSize=dd}", v292, v293, v294, v295, v296, 0);
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSDInteractiveCanvasController"), CFSTR("annotationController"), "@", v297, v298, v299, v300, v301, 0);
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSDInteractiveCanvasController"), CFSTR("canvas"), "@", v302, v303, v304, v305, v306, 0);
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSDInteractiveCanvasController"), CFSTR("canvasEditor"), "@", v307, v308, v309, v310, v311, 0);
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSDInteractiveCanvasController"), CFSTR("canvasView"), "@", v312, v313, v314, v315, v316, 0);
  v317 = "{CGPoint=dd}";
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSDInteractiveCanvasController"), CFSTR("convertBoundsToUnscaledPoint:"), "{CGPoint=dd}", v318, v319, v320, v321, v322, "{CGPoint=dd}");
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSDInteractiveCanvasController"), CFSTR("convertBoundsToUnscaledRect:"), "{CGRect={CGPoint=dd}{CGSize=dd}}", v323, v324, v325, v326, v327, "{CGRect={CGPoint=dd}{CGSize=dd}}");
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSDInteractiveCanvasController"), CFSTR("convertUnscaledToBoundsPoint:"), "{CGPoint=dd}", v328, v329, v330, v331, v332, "{CGPoint=dd}");
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSDInteractiveCanvasController"), CFSTR("convertUnscaledToBoundsRect:"), "{CGRect={CGPoint=dd}{CGSize=dd}}", v333, v334, v335, v336, v337, "{CGRect={CGPoint=dd}{CGSize=dd}}");
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSDInteractiveCanvasController"), CFSTR("currentlyWaitingOnThreadedLayoutAndRender"), "B", v338, v339, v340, v341, v342, 0);
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSDInteractiveCanvasController"), CFSTR("delegate"), "@", v343, v344, v345, v346, v347, 0);
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSDInteractiveCanvasController"), CFSTR("editorController"), "@", v348, v349, v350, v351, v352, 0);
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSDInteractiveCanvasController"), CFSTR("endEditing"), "v", v353, v354, v355, v356, v357, 0);
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSDInteractiveCanvasController"), CFSTR("hitRep:"), "@", v358, v359, v360, v361, v362, "{CGPoint=dd}");
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSDInteractiveCanvasController"), CFSTR("infosToDisplay"), "@", v363, v364, v365, v366, v367, 0);
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSDInteractiveCanvasController"), CFSTR("layerHost"), "@", v368, v369, v370, v371, v372, 0);
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSDInteractiveCanvasController"), CFSTR("repForInfo:"), "@", v373, v374, v375, v376, v377, "@");
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSDInteractiveCanvasController"), CFSTR("repForLayout:"), "@", v378, v379, v380, v381, v382, "@");
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSDInteractiveCanvasController"), CFSTR("repsForInfo:"), "@", v383, v384, v385, v386, v387, "@");
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSDInteractiveCanvasController"), CFSTR("scrollToPrimarySelection"), "v", v388, v389, v390, v391, v392, 0);
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSDInteractiveCanvasController"), CFSTR("teardown"), "v", v393, v394, v395, v396, v397, 0);
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSDInteractiveCanvasController"), CFSTR("topLevelRepsForHitTesting"), "@", v398, v399, v400, v401, v402, 0);
  __TSAccessibilityValidateProtocolMethod(CFSTR("TSDInteractiveCanvasControllerDelegate"), CFSTR("inPrintPreviewMode"), 0, 1);
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSDKnob"), CFSTR("isHitByUnscaledPoint:andRep:returningDistance:"), "B", v403, v404, v405, v406, v407, "{CGPoint=dd}");
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSDKnob"), CFSTR("layer"), "@", v408, v409, v410, v411, v412, 0);
  __TSAccessibilityValidateIvarType(CFSTR("TSDKnob"), "mRep", "TSDRep");
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSDKnob"), CFSTR("position"), "{CGPoint=dd}", v413, v414, v415, v416, v417, 0);
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSDKnob"), CFSTR("tag"), "Q", v418, v419, v420, v421, v422, 0);
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSDKnobTracker"), CFSTR("beginMovingKnob"), "v", v423, v424, v425, v426, v427, 0);
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSDKnobTracker"), CFSTR("currentBoundsForStandardKnobs"), "{CGRect={CGPoint=dd}{CGSize=dd}}", v428, v429, v430, v431, v432, 0);
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSDKnobTracker"), CFSTR("endMovingKnob"), "v", v433, v434, v435, v436, v437, 0);
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSDKnobTracker"), CFSTR("initWithRep:knob:"), "@", v438, v439, v440, v441, v442, "@");
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSDKnobTracker"), CFSTR("knob"), "@", v443, v444, v445, v446, v447, 0);
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSDKnobTracker"), CFSTR("moveKnobToRepPosition:"), "v", v448, v449, v450, v451, v452, "{CGPoint=dd}");
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSDKnobTracker"), CFSTR("setDidDrag:"), "v", v453, v454, v455, v456, v457, "B");
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSDLayout"), CFSTR("dragBy:"), "v", v458, v459, v460, v461, v462, "{CGPoint=dd}");
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSDLayout"), CFSTR("info"), "@", v463, v464, v465, v466, v467, 0);
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSDLayout"), CFSTR("inspectorGeometry"), "@", v468, v469, v470, v471, v472, 0);
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSDLayout"), CFSTR("invalidate"), "v", v473, v474, v475, v476, v477, 0);
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSDLayout"), CFSTR("layoutController"), "@", v478, v479, v480, v481, v482, 0);
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSDLayoutController"), CFSTR("canvas"), "@", v483, v484, v485, v486, v487, 0);
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSDLayoutController"), CFSTR("rootLayout"), "@", v488, v489, v490, v491, v492, 0);
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSDLayoutGeometry"), CFSTR("frame"), "{CGRect={CGPoint=dd}{CGSize=dd}}", v493, v494, v495, v496, v497, 0);
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSDLayoutGeometry"), CFSTR("transform"), "{CGAffineTransform=dddddd}", v498, v499, v500, v501, v502, 0);
  __TSAccessibilityValidateIvarType(CFSTR("TSDLineEnd"), "mIdentifier", "NSString");
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSDLinePreset"), CFSTR("headLineEnd"), "@", v503, v504, v505, v506, v507, 0);
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSDLinePreset"), CFSTR("stroke"), "@", v508, v509, v510, v511, v512, 0);
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSDLinePreset"), CFSTR("tailLineEnd"), "@", v513, v514, v515, v516, v517, 0);
  __TSAccessibilityValidateIsKindOfClass(CFSTR("TSDMediaStyle"), CFSTR("TSSStyle"));
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSDMediaStyle"), CFSTR("presetKind"), "@", v518, v519, v520, v521, v522, 0);
  __TSAccessibilityValidateIvarType(CFSTR("TSDMovieInfo"), "mMovieData", "TSPData");
  __TSAccessibilityValidateIsKindOfClass(CFSTR("TSDMovieInfo"), CFSTR("TSDDrawableInfo"));
  __TSAccessibilityValidateIsKindOfClass(CFSTR("TSDMovieKnob"), CFSTR("TSDKnob"));
  __TSAccessibilityValidateIsKindOfClass(CFSTR("TSDMovieRep"), CFSTR("TSDRep"));
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSDMovieRep"), CFSTR("isPlayable"), "B", v523, v524, v525, v526, v527, 0);
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSDMovieRep"), CFSTR("movieInfo"), "@", v528, v529, v530, v531, v532, 0);
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSDMovieRep"), CFSTR("p_playForKnob"), "v", v533, v534, v535, v536, v537, 0);
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSDMovieRep"), CFSTR("p_togglePlaying"), "v", v538, v539, v540, v541, v542, 0);
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSDMovieRep"), CFSTR("playerController"), "@", v543, v544, v545, v546, v547, 0);
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSDPartitionedPartialLayout"), CFSTR("partitioner"), "@", v548, v549, v550, v551, v552, 0);
  __TSAccessibilityValidateIsKindOfClass(CFSTR("TSDPartitionedPartialRep"), CFSTR("TSDRep"));
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSDPartitionedPartialRep"), CFSTR("canvas"), "@", v553, v554, v555, v556, v557, 0);
  __TSAccessibilityValidateClassMethod(CFSTR("TSDPathSource"), CFSTR("pathSourceForShapeType:naturalSize:"));
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSDPathSource"), CFSTR("copyWithZone:"), "@", v558, v559, v560, v561, v562, "^{_NSZone=}");
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSDPathSource"), CFSTR("naturalSize"), "{CGSize=dd}", v563, v564, v565, v566, v567, 0);
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSDPointPathSource"), CFSTR("type"), "i", v568, v569, v570, v571, v572, 0);
  __TSAccessibilityValidateIvarType(CFSTR("TSDReflection"), "mOpacity", "d");
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSDRep"), CFSTR("becameNotSelected"), "v", v573, v574, v575, v576, v577, 0);
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSDRep"), CFSTR("becameSelected"), "v", v578, v579, v580, v581, v582, 0);
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSDRep"), CFSTR("canvas"), "@", v583, v584, v585, v586, v587, 0);
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSDRep"), CFSTR("convertNaturalPointFromUnscaledCanvas:"), v317, v588, v589, v590, v591, v592, v317);
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSDRep"), CFSTR("convertNaturalRectFromUnscaledCanvas:"), "{CGRect={CGPoint=dd}{CGSize=dd}}", v593, v594, v595, v596, v597, "{CGRect={CGPoint=dd}{CGSize=dd}}");
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSDRep"), CFSTR("convertNaturalPointToUnscaledCanvas:"), v317, v598, v599, v600, v601, v602, v317);
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSDRep"), CFSTR("convertNaturalRectToUnscaledCanvas:"), "{CGRect={CGPoint=dd}{CGSize=dd}}", v603, v604, v605, v606, v607, "{CGRect={CGPoint=dd}{CGSize=dd}}");
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSDRep"), CFSTR("frameInUnscaledCanvas"), "{CGRect={CGPoint=dd}{CGSize=dd}}", v608, v609, v610, v611, v612, 0);
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSDRep"), CFSTR("handleSingleTapAtPoint:"), "B", v613, v614, v615, v616, v617, "{CGPoint=dd}");
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSDRep"), CFSTR("handleDoubleTapAtPoint:"), "B", v618, v619, v620, v621, v622, "{CGPoint=dd}");
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSDRep"), CFSTR("i_willBeRemoved"), "v", v623, v624, v625, v626, v627, 0);
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSDRep"), CFSTR("info"), "@", v628, v629, v630, v631, v632, 0);
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSDRep"), CFSTR("invalidateKnobs"), "v", v633, v634, v635, v636, v637, 0);
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSDRep"), CFSTR("isLocked"), "B", v638, v639, v640, v641, v642, 0);
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSDRep"), CFSTR("isSelected"), "B", v643, v644, v645, v646, v647, 0);
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSDRep"), CFSTR("layerFrameInScaledCanvas"), "{CGRect={CGPoint=dd}{CGSize=dd}}", v648, v649, v650, v651, v652, 0);
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSDRep"), CFSTR("layout"), "@", v653, v654, v655, v656, v657, 0);
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSDRep"), CFSTR("knobForTag:"), "@", v658, v659, v660, v661, v662, "Q");
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSDRep"), CFSTR("knobs"), "@", v663, v664, v665, v666, v667, 0);
  __TSAccessibilityValidateIvarType(CFSTR("TSDRep"), "mKnobs", "NSArray");
  __TSAccessibilityValidateIvarType(CFSTR("TSDRep"), "mKnobsAreShowing", "B");
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSDRep"), CFSTR("naturalBounds"), "{CGRect={CGPoint=dd}{CGSize=dd}}", v668, v669, v670, v671, v672, 0);
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSDRep"), CFSTR("newTrackerForKnob:"), "@", v673, v674, v675, v676, v677, "@");
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSDRep"), CFSTR("parentRep"), "@", v678, v679, v680, v681, v682, 0);
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSDRep"), CFSTR("repForSelecting"), "@", v683, v684, v685, v686, v687, 0);
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSDRep"), CFSTR("shouldCreateKnobs"), "B", v688, v689, v690, v691, v692, 0);
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSDRep"), CFSTR("texture"), "@", v693, v694, v695, v696, v697, 0);
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSDRep"), CFSTR("transformToConvertNaturalFromLayerRelative"), "{CGAffineTransform=dddddd}", v698, v699, v700, v701, v702, 0);
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSDScalarPathSource"), CFSTR("type"), "i", v703, v704, v705, v706, v707, 0);
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSDScalarPathSource"), CFSTR("scalar"), "d", v708, v709, v710, v711, v712, 0);
  __TSAccessibilityValidateIsKindOfClass(CFSTR("TSDScalarPathSource"), CFSTR("TSDPathSource"));
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSDShadow"), CFSTR("TSUColor"), "@", v713, v714, v715, v716, v717, 0);
  __TSAccessibilityValidateIvarType(CFSTR("TSDShadow"), "mAngle", "d");
  __TSAccessibilityValidateIvarType(CFSTR("TSDShadow"), "mEnabled", "B");
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSDShapeInfo"), CFSTR("pathSource"), "@", v718, v719, v720, v721, v722, 0);
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSDShapeInfo"), CFSTR("shapeStyle"), "@", v723, v724, v725, v726, v727, 0);
  __TSAccessibilityValidateIsKindOfClass(CFSTR("TSDShapeLayout"), CFSTR("TSDLayout"));
  __TSAccessibilityValidateIsKindOfClass(CFSTR("TSDShapeRep"), CFSTR("TSDRep"));
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSDShapeRep"), CFSTR("shapeInfo"), "@", v728, v729, v730, v731, v732, 0);
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSDShapeRep"), CFSTR("shapeLayout"), "@", v733, v734, v735, v736, v737, 0);
  __TSAccessibilityValidateIsKindOfClass(CFSTR("TSDShapeStyle"), CFSTR("TSSStyle"));
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSDTextureSet"), CFSTR("layer"), "@", v738, v739, v740, v741, v742, 0);
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSWPShapeRep"), CFSTR("willBeginEditingContainedRep"), "v", v743, v744, v745, v746, v747, 0);
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSDShapeStyle"), CFSTR("valueForProperty:"), "@", v748, v749, v750, v751, v752, "i");
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSDSmartStroke"), CFSTR("strokeName"), "@", v753, v754, v755, v756, v757, 0);
  __TSAccessibilityValidateIsKindOfClass(CFSTR("TSDSmartStroke"), CFSTR("TSDStroke"));
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSDStroke"), CFSTR("color"), "@", v758, v759, v760, v761, v762, 0);
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSDStroke"), CFSTR("pattern"), "@", v763, v764, v765, v766, v767, 0);
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSDStroke"), CFSTR("isNullStroke"), "B", v768, v769, v770, v771, v772, 0);
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSDStroke"), CFSTR("width"), "d", v773, v774, v775, v776, v777, 0);
  __TSAccessibilityValidateClassMethod(CFSTR("TSDStrokePattern"), CFSTR("solidPattern"));
  __TSAccessibilityValidateClassMethod(CFSTR("TSDStrokePattern"), CFSTR("emptyPattern"));
  __TSAccessibilityValidateClassMethod(CFSTR("TSDStrokePattern"), CFSTR("shortDashPattern"));
  __TSAccessibilityValidateClassMethod(CFSTR("TSDStrokePattern"), CFSTR("mediumDashPattern"));
  __TSAccessibilityValidateClassMethod(CFSTR("TSDStrokePattern"), CFSTR("longDashPattern"));
  __TSAccessibilityValidateClassMethod(CFSTR("TSDStrokePattern"), CFSTR("roundDashPattern"));
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSDStrokePattern"), CFSTR("patternType"), "i", v778, v779, v780, v781, v782, 0);
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSKAVPlayerController"), CFSTR("isPlaying"), "B", v783, v784, v785, v786, v787, 0);
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSKDocumentRoot"), CFSTR("theme"), "@", v788, v789, v790, v791, v792, 0);
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSKRulerUnits"), CFSTR("convertPointsToRulerUnits:"), "d", v793, v794, v795, v796, v797, "d");
  __TSAccessibilityValidateClassMethodComplete(CFSTR("TSKRulerUnits"), CFSTR("instance"), "@", v798, v799, v800, v801, v802, 0);
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSKScrollView"), CFSTR("delegate"), "@", v803, v804, v805, v806, v807, 0);
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSPData"), CFSTR("filename"), "@", v808, v809, v810, v811, v812, 0);
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSSStyle"), CFSTR("floatValueForProperty:"), "f", v813, v814, v815, v816, v817, "i");
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSSStyle"), CFSTR("intValueForProperty:"), "i", v818, v819, v820, v821, v822, "i");
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSSStyle"), CFSTR("name"), "@", v823, v824, v825, v826, v827, 0);
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSSStyle"), CFSTR("objectForProperty:"), "@", v828, v829, v830, v831, v832, "i");
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSSStyle"), CFSTR("styleIdentifier"), "@", v833, v834, v835, v836, v837, 0);
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSSTheme"), CFSTR("presetsOfKind:"), "@", v838, v839, v840, v841, v842, "@");
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSSPropertySet"), CFSTR("enumeratePropertiesUsingBlock:"), "v", v843, v844, v845, v846, v847, "@?");
  __TSAccessibilityValidateIsKindOfClass(CFSTR("TSWPParagraphStyle"), CFSTR("TSSStyle"));
  __TSAccessibilityValidateClass(CFSTR("TSTCell"));
  __TSAccessibilityValidateClassMethodComplete(CFSTR("TSTCellRegion"), CFSTR("regionFromRange:"), "@", v848, v849, v850, v851, v852, "{?={?=SCC}{?=SS}}");
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSTCellRegion"), CFSTR("boundingCellRange"), "{?={?=SCC}{?=SS}}", v853, v854, v855, v856, v857, 0);
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSTCellRegion"), CFSTR("enumerateCellRangesUsingBlock:"), "v", v858, v859, v860, v861, v862, "@?");
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSTCellRegion"), CFSTR("equalsCellRange:"), "B", v863, v864, v865, v866, v867, "{?={?=SCC}{?=SS}}");
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSTCellRegion"), CFSTR("isEmpty"), "B", v868, v869, v870, v871, v872, 0);
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSTCellRegion"), CFSTR("isRectangle"), "B", v873, v874, v875, v876, v877, 0);
  __TSAccessibilityValidateIsKindOfClass(CFSTR("TSTCellStyle"), CFSTR("TSSStyle"));
  __TSAccessibilityValidateClassMethodComplete(CFSTR("TSTConfiguration"), CFSTR("sharedTableConfiguration"), "@", v878, v879, v880, v881, v882, 0);
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSTConfiguration"), CFSTR("beginEditingOnSingleTap"), "B", v883, v884, v885, v886, v887, 0);
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSTConfiguration"), CFSTR("supportsContainedTextEditing"), "B", v888, v889, v890, v891, v892, 0);
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSTEditingState"), CFSTR("editingMode"), "i", v893, v894, v895, v896, v897, 0);
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSTEditingState"), CFSTR("selection"), "@", v898, v899, v900, v901, v902, 0);
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSTMasterLayout"), CFSTR("updateDynamicChangeRowOrColumnCount:count:newlyAddedElementSize:"), "B", v903, v904, v905, v906, v907, "i");
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSTMasterLayout"), CFSTR("updateDynamicSelectionRegion:"), "v", v908, v909, v910, v911, v912, "@");
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSTSearchReference"), CFSTR("cellID"), "{?=SCC}", v913, v914, v915, v916, v917, 0);
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSTSearchReference"), CFSTR("range"), "{_NSRange=QQ}", v918, v919, v920, v921, v922, 0);
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSTSearchReference"), CFSTR("tableInfo"), "@", v923, v924, v925, v926, v927, 0);
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSTTableInfo"), CFSTR("editingCellID"), "{?=SCC}", v928, v929, v930, v931, v932, 0);
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSTTableInfo"), CFSTR("masterLayout"), "@", v933, v934, v935, v936, v937, 0);
  __TSAccessibilityValidateIvarType(CFSTR("TSTTableInfo"), "mMasterLayout", "TSTMasterLayout");
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSTTableInfo"), CFSTR("setEditingCellID:"), "v", v938, v939, v940, v941, v942, "{?=SCC}");
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSTTableModel"), CFSTR("numberOfColumns"), "S", v943, v944, v945, v946, v947, 0);
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSTTableModel"), CFSTR("numberOfRows"), "S", v948, v949, v950, v951, v952, 0);
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSTTableModel"), CFSTR("range"), "{?={?=SCC}{?=SS}}", v953, v954, v955, v956, v957, 0);
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSTTableModel"), CFSTR("tableName"), "@", v958, v959, v960, v961, v962, 0);
  __TSAccessibilityValidateIsKindOfClass(CFSTR("TSTTableRep"), CFSTR("TSDRep"));
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSTTableRep"), CFSTR("canvasView"), "@", v963, v964, v965, v966, v967, 0);
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSTTableRep"), CFSTR("deviceBoundsForCellRange:"), "{CGRect={CGPoint=dd}{CGSize=dd}}", v968, v969, v970, v971, v972, "{?={?=SCC}{?=SS}}");
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSTTableRep"), CFSTR("editorSelection"), "@", v973, v974, v975, v976, v977, 0);
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSTTableRep"), CFSTR("masterLayout"), "@", v978, v979, v980, v981, v982, 0);
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSTTableRep"), CFSTR("tableChrome"), "@", v983, v984, v985, v986, v987, 0);
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSTTableRep"), CFSTR("tableLayout"), "@", v988, v989, v990, v991, v992, 0);
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSTTableRep"), CFSTR("tableModel"), "@", v993, v994, v995, v996, v997, 0);
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSTTableRep"), CFSTR("updateChildrenFromLayout"), "v", v998, v999, v1000, v1001, v1002, 0);
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSTTableRep"), CFSTR("updateFromLayout"), "v", v1003, v1004, v1005, v1006, v1007, 0);
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSTTableSelection"), CFSTR("anchorCellID"), "{?=SCC}", v1008, v1009, v1010, v1011, v1012, 0);
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSTTableSelection"), CFSTR("cellRegion"), "@", v1013, v1014, v1015, v1016, v1017, 0);
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSTTableSelection"), CFSTR("enumerateSelectedCellsInTable:withFlags:usingBlock:"), "v", v1018, v1019, v1020, v1021, v1022, "@");
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSTTableSelection"), CFSTR("initWithTableModel:andCellID:"), "@", v1023, v1024, v1025, v1026, v1027, "@");
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSTTableSelection"), CFSTR("selectionType"), "i", v1028, v1029, v1030, v1031, v1032, 0);
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSTTableStylePreset"), CFSTR("index"), "Q", v1033, v1034, v1035, v1036, v1037, 0);
  __TSAccessibilityValidateClassMethod(CFSTR("NSString"), CFSTR("stringForValue:withListNumberFormat:"));
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSWPAttachment"), CFSTR("findCharIndex"), "Q", v1038, v1039, v1040, v1041, v1042, 0);
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSWPAttachment"), CFSTR("parentStorage"), "@", v1043, v1044, v1045, v1046, v1047, 0);
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSWPAttachment"), CFSTR("setParentStorage:"), "v", v1048, v1049, v1050, v1051, v1052, "@");
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSWPAttachment"), CFSTR("wasRemovedFromDocumentRoot:"), "v", v1053, v1054, v1055, v1056, v1057, "@");
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSWPColumn"), CFSTR("boundsOfLineFragmentAtIndex:"), "{CGRect={CGPoint=dd}{CGSize=dd}}", v1058, v1059, v1060, v1061, v1062, "Q");
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSWPColumn"), CFSTR("columnRectForRange:"), "{CGRect={CGPoint=dd}{CGSize=dd}}", v1063, v1064, v1065, v1066, v1067, "{_NSRange=QQ}");
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSWPColumn"), CFSTR("countLines"), "Q", v1068, v1069, v1070, v1071, v1072, 0);
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSWPColumn"), CFSTR("glyphRectForRange:includingLabel:"), "{CGRect={CGPoint=dd}{CGSize=dd}}", v1073, v1074, v1075, v1076, v1077, "{_NSRange=QQ}");
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSWPColumn"), CFSTR("lineIndexForCharIndex:eol:"), "Q", v1078, v1079, v1080, v1081, v1082, "Q");
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSWPColumn"), CFSTR("range"), "{_NSRange=QQ}", v1083, v1084, v1085, v1086, v1087, 0);
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSWPColumn"), CFSTR("rangeOfLineFragmentAtIndex:"), "{_NSRange=QQ}", v1088, v1089, v1090, v1091, v1092, "Q");
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSWPColumn"), CFSTR("styleProvider"), "@", v1093, v1094, v1095, v1096, v1097, 0);
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSWPDrawableAttachment"), CFSTR("drawable"), "@", v1098, v1099, v1100, v1101, v1102, 0);
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSWPEditingController"), CFSTR("editingReps"), "@", v1103, v1104, v1105, v1106, v1107, 0);
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSWPEditingController"), CFSTR("endEditing"), "v", v1108, v1109, v1110, v1111, v1112, 0);
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSWPEditingController"), CFSTR("initWithStorage:interactiveCanvasController:"), "@", v1113, v1114, v1115, v1116, v1117, "@");
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSWPEditingController"), CFSTR("insertionPoint"), "Q", v1118, v1119, v1120, v1121, v1122, 0);
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSWPEditingController"), CFSTR("interactiveCanvasController"), "@", v1123, v1124, v1125, v1126, v1127, 0);
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSWPEditingController"), CFSTR("p_charIndexByMovingCharIndex:withEolAffinity:toBoundary:inDirection:preferPosition:isLeadingEdge:"), "Q", v1128, v1129, v1130, v1131, v1132, "Q");
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSWPEditingController"), CFSTR("selection"), "@", v1133, v1134, v1135, v1136, v1137, 0);
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSWPEditingController"), CFSTR("selectionChangedWithFlags:wpFlags:"), "v", v1138, v1139, v1140, v1141, v1142, "Q");
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSWPEditingController"), CFSTR("replaceRange:withText:"), "v", v1143, v1144, v1145, v1146, v1147, "{_NSRange=QQ}");
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSWPEditingController"), CFSTR("setInsertionPoint:"), "v", v1148, v1149, v1150, v1151, v1152, "Q");
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSWPEditingController"), CFSTR("setSelection:"), "v", v1153, v1154, v1155, v1156, v1157, "@");
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSWPEditingController"), CFSTR("storage"), "@", v1158, v1159, v1160, v1161, v1162, 0);
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSWPEditingController"), CFSTR("tsax_listItemLabelForCharIndex:textIsLiteral:"), "@", v1163, v1164, v1165, v1166, v1167, "Q");
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSWPEditingController"), CFSTR("tsax_rangeOfLineFragmentAtCharIndex:"), "{_NSRange=QQ}", v1168, v1169, v1170, v1171, v1172, "Q");
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSWPFootnoteReferenceAttachment"), CFSTR("containedStorage"), "@", v1173, v1174, v1175, v1176, v1177, 0);
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSWPFilteredStorage"), CFSTR("initWithStorage:subRange:"), "@", v1178, v1179, v1180, v1181, v1182, "@");
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSWPFilteredStorage"), CFSTR("previousCharacterIndex:"), "Q", v1183, v1184, v1185, v1186, v1187, "Q");
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSWPFilteredStorage"), CFSTR("nextCharacterIndex:"), "Q", v1188, v1189, v1190, v1191, v1192, "Q");
  __TSAccessibilityValidateIsKindOfClass(CFSTR("TSWPHyperlinkField"), CFSTR("TSWPSmartField"));
  __TSAccessibilityValidateClassMethodComplete(CFSTR("TSWPFontCache"), CFSTR("sharedCache"), "@", v1193, v1194, v1195, v1196, v1197, 0);
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSWPFontCache"), CFSTR("availableMembersOfFontFamily:"), "@", v1198, v1199, v1200, v1201, v1202, "@");
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSWPHyperlinkField"), CFSTR("displayText"), "@", v1203, v1204, v1205, v1206, v1207, 0);
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSWPHyperlinkField"), CFSTR("url"), "@", v1208, v1209, v1210, v1211, v1212, 0);
  __TSAccessibilityValidateIsKindOfClass(CFSTR("TSWPInteractiveCanvasController"), CFSTR("TSDInteractiveCanvasController"));
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSWPInteractiveCanvasController"), CFSTR("hyperlinkPopoverIsShown"), "B", v1213, v1214, v1215, v1216, v1217, 0);
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSWPInteractiveCanvasController"), CFSTR("p_repsForStorage:"), "@", v1218, v1219, v1220, v1221, v1222, "@");
  __TSAccessibilityValidateProtocolMethod(CFSTR("TSWPInteractiveCanvasControllerDelegate"), CFSTR("interactiveCanvasController:tappedOnFootnoteAttachment:"), 0, 1);
  __TSAccessibilityValidateIsKindOfClass(CFSTR("TSWPLayout"), CFSTR("TSDLayout"));
  __TSAccessibilityValidateIsKindOfClass(CFSTR("TSWPListStyle"), CFSTR("TSSStyle"));
  __TSAccessibilityValidateIsKindOfClass(CFSTR("TSWPParagraphStyle"), CFSTR("TSSStyle"));
  __TSAccessibilityValidateIsKindOfClass(CFSTR("TSWPPlaceholderSmartField"), CFSTR("TSWPSmartField"));
  __TSAccessibilityValidateIsKindOfClass(CFSTR("TSWPRep"), CFSTR("TSDRep"));
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSWPRep"), CFSTR("caretRectForCharIndex:caretAffinity:"), "{CGRect={CGPoint=dd}{CGSize=dd}}", v1223, v1224, v1225, v1226, v1227, "Q");
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSWPRep"), CFSTR("columns"), "@", v1228, v1229, v1230, v1231, v1232, 0);
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSWPRep"), CFSTR("isEditing"), "B", v1233, v1234, v1235, v1236, v1237, 0);
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSWPRep"), CFSTR("isSelectionHighlightSuppressed"), "B", v1238, v1239, v1240, v1241, v1242, 0);
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSWPRep"), CFSTR("p_canRepBeginEditingOnDoubleTap"), "B", v1243, v1244, v1245, v1246, v1247, 0);
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSWPRep"), CFSTR("pulseCaret"), "v", v1248, v1249, v1250, v1251, v1252, 0);
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSWPRep"), CFSTR("range"), "{_NSRange=QQ}", v1253, v1254, v1255, v1256, v1257, 0);
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSWPRep"), CFSTR("rectForSelection:"), "{CGRect={CGPoint=dd}{CGSize=dd}}", v1258, v1259, v1260, v1261, v1262, "@");
  __TSAccessibilityValidateIvarType(CFSTR("TSWPRep"), "_selectionHighlightLayer", "CAShapeLayer");
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSWPRep"), CFSTR("storage"), "@", v1263, v1264, v1265, v1266, v1267, 0);
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSWPSearchReference"), CFSTR("selection"), "@", v1268, v1269, v1270, v1271, v1272, 0);
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSWPSearchReference"), CFSTR("storage"), "@", v1273, v1274, v1275, v1276, v1277, 0);
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSWPSelection"), CFSTR("initWithRange:"), "@", v1278, v1279, v1280, v1281, v1282, "{_NSRange=QQ}");
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSWPSelection"), CFSTR("range"), "{_NSRange=QQ}", v1283, v1284, v1285, v1286, v1287, 0);
  __TSAccessibilityValidateIsKindOfClass(CFSTR("TSWPShapeInfo"), CFSTR("TSDDrawableInfo"));
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSWPShapeInfo"), CFSTR("containedStorage"), "@", v1288, v1289, v1290, v1291, v1292, 0);
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSWPShapeInfo"), CFSTR("displaysInstructionalText"), "B", v1293, v1294, v1295, v1296, v1297, 0);
  __TSAccessibilityValidateIsKindOfClass(CFSTR("TSWPShapeRep"), CFSTR("TSDShapeRep"));
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSWPShapeRep"), CFSTR("containedRep"), "@", v1298, v1299, v1300, v1301, v1302, 0);
  __TSAccessibilityValidateIsKindOfClass(CFSTR("TSWPShapeStyle"), CFSTR("TSDShapeStyle"));
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSWPShapeStyle"), CFSTR("presetKind"), "@", v1303, v1304, v1305, v1306, v1307, 0);
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSWPSmartField"), CFSTR("parentStorage"), "@", v1308, v1309, v1310, v1311, v1312, 0);
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSWPSmartField"), CFSTR("range"), "{_NSRange=QQ}", v1313, v1314, v1315, v1316, v1317, 0);
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSWPStorage"), CFSTR("attachmentOrFootnoteAtCharIndex:"), "@", v1318, v1319, v1320, v1321, v1322, "Q");
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSWPStorage"), CFSTR("createFontAtCharIndex:scaleTextPercent:effectiveRange:styleProvider:"), "^{__CTFont=}", v1323, v1324, v1325, v1326, v1327, "Q");
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSWPStorage"), CFSTR("enumerateAttachmentsInTextRange:usingBlock:"), "v", v1328, v1329, v1330, v1331, v1332, "{_NSRange=QQ}");
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSWPStorage"), CFSTR("enumerateSmartFieldsWithAttributeKind:inRange:usingBlock:"), "v", v1333, v1334, v1335, v1336, v1337, "i");
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSWPStorage"), CFSTR("findCharIndexForFootnoteAttachment:"), "Q", v1338, v1339, v1340, v1341, v1342, "@");
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSWPStorage"), CFSTR("footnoteAtFootnoteIndex:outCharIndex:"), "@", v1343, v1344, v1345, v1346, v1347, "Q");
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSWPStorage"), CFSTR("footnoteCount"), "Q", v1348, v1349, v1350, v1351, v1352, 0);
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSWPStorage"), CFSTR("footnoteIndexForFootnote:"), "Q", v1353, v1354, v1355, v1356, v1357, "@");
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSWPStorage"), CFSTR("footnoteStorages"), "@", v1358, v1359, v1360, v1361, v1362, 0);
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSWPStorage"), CFSTR("hasSmartFields"), "B", v1363, v1364, v1365, v1366, v1367, 0);
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSWPStorage"), CFSTR("length"), "Q", v1368, v1369, v1370, v1371, v1372, 0);
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSWPStorage"), CFSTR("listNumberForParagraphIndex:numberingData:"), "Q", v1373, v1374, v1375, v1376, v1377, "Q");
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSWPStorage"), CFSTR("listStyleCount"), "Q", v1378, v1379, v1380, v1381, v1382, 0);
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSWPStorage"), CFSTR("listStyleAtCharIndex:effectiveRange:"), "@", v1383, v1384, v1385, v1386, v1387, "Q");
  __TSAccessibilityValidateIvarType(CFSTR("TSWPStorage"), "_owningAttachment", "TSPObject<TSDOwningAttachment>");
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSWPStorage"), CFSTR("paragraphCount"), "Q", v1388, v1389, v1390, v1391, v1392, 0);
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSWPStorage"), CFSTR("paragraphIndexAtCharIndex:"), "Q", v1393, v1394, v1395, v1396, v1397, "Q");
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSWPStorage"), CFSTR("paragraphLevelAtCharIndex:"), "Q", v1398, v1399, v1400, v1401, v1402, "Q");
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSWPStorage"), CFSTR("paragraphIndexRangeForCharRange:"), "{_NSRange=QQ}", v1403, v1404, v1405, v1406, v1407, "{_NSRange=QQ}");
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSWPStorage"), CFSTR("paragraphStyleAtCharIndex:effectiveRange:"), "@", v1408, v1409, v1410, v1411, v1412, "Q");
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSWPStorage"), CFSTR("range"), "{_NSRange=QQ}", v1413, v1414, v1415, v1416, v1417, 0);
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSWPStorage"), CFSTR("selectionRangeMaxForCharIndex:"), "Q", v1418, v1419, v1420, v1421, v1422, "Q");
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSWPStorage"), CFSTR("smartFieldAtCharIndex:attributeKind:effectiveRange:"), "@", v1423, v1424, v1425, v1426, v1427, "Q");
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSWPStorage"), CFSTR("string"), "@", v1428, v1429, v1430, v1431, v1432, 0);
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSWPStorage"), CFSTR("stringEquivalentFromRange:"), "@", v1433, v1434, v1435, v1436, v1437, "{_NSRange=QQ}");
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSWPStorage"), CFSTR("substringWithRange:"), "@", v1438, v1439, v1440, v1441, v1442, "{_NSRange=QQ}");
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSWPStorage"), CFSTR("textRangeForParagraphAtIndex:"), "{_NSRange=QQ}", v1443, v1444, v1445, v1446, v1447, "Q");
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSWPStorage"), CFSTR("wpKind"), "i", v1448, v1449, v1450, v1451, v1452, 0);
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSWPStorageBroadcaster"), CFSTR("broadcastStorage:didChangeRange:delta:broadcastKind:"), "v", v1453, v1454, v1455, v1456, v1457, "@");
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSWPTabs"), CFSTR("count"), "Q", v1458, v1459, v1460, v1461, v1462, 0);
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSWPTabs"), CFSTR("indexForTabWithPosition:alignment:leader:"), "Q", v1463, v1464, v1465, v1466, v1467, "d");
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSWPTabs"), CFSTR("removeTabAtIndex:"), "v", v1468, v1469, v1470, v1471, v1472, "Q");
  __TSAccessibilityValidateClassMethodComplete(CFSTR("TSUColor"), CFSTR("colorWithHue:saturation:brightness:alpha:"), "@", v1473, v1474, v1475, v1476, v1477, "d");
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSUColor"), CFSTR("redComponent"), "d", v1478, v1479, v1480, v1481, v1482, 0);
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSUColor"), CFSTR("blueComponent"), "d", v1483, v1484, v1485, v1486, v1487, 0);
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSUColor"), CFSTR("greenComponent"), "d", v1488, v1489, v1490, v1491, v1492, 0);
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSUColor"), CFSTR("alphaComponent"), "d", v1493, v1494, v1495, v1496, v1497, 0);
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSUColor"), CFSTR("hueComponent"), "d", v1498, v1499, v1500, v1501, v1502, 0);
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSUColor"), CFSTR("saturationComponent"), "d", v1503, v1504, v1505, v1506, v1507, 0);
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSUColor"), CFSTR("getRGBAComponents:"), "v", v1508, v1509, v1510, v1511, v1512, "^d");
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSUImage"), CFSTR("size"), "{CGSize=dd}", v1513, v1514, v1515, v1516, v1517, 0);
  __TSAccessibilityValidateClassMethodComplete(CFSTR("TSUNumberFormatter"), CFSTR("displayNameForCurrencyCode:"), "@", v1518, v1519, v1520, v1521, v1522, "@");
  __TSAccessibilityValidateProtocolMethod(CFSTR("TSKScrollViewDelegate"), CFSTR("scrollView:willAnimateToContentOffset:"), 0, 1);
  __TSAccessibilityValidateClass(CFSTR("TSDStroke"));
  __TSAccessibilityValidateClass(CFSTR("TSDShapeLayout"));
  __TSAccessibilityValidateClass(CFSTR("TSDShadowSwatch"));
  __TSAccessibilityValidateClass(CFSTR("TSKToolbar"));
  __TSAccessibilityValidateClass(CFSTR("TSTCell"));
  __TSAccessibilityValidateClass(CFSTR("TSWPColumn"));
  __TSAccessibilityValidateClass(CFSTR("TSUColor"));
  __TSAccessibilityValidateIsKindOfClass(CFSTR("TSDContainerRep"), CFSTR("TSDRep"));
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSDContainerRep"), CFSTR("childReps"), "@", v1523, v1524, v1525, v1526, v1527, 0);
  __TSAccessibilityValidateIsKindOfClass(CFSTR("TSAInteractiveCanvasController"), CFSTR("TSDInteractiveCanvasController"));
  __TSAccessibilityValidateIsKindOfClass(CFSTR("TSKScrollView"), CFSTR("UIScrollView"));
  __TSAccessibilityValidateClassMethod(CFSTR("TSWPEditMenuController"), CFSTR("sharedEditMenuController"));
  __TSAccessibilityValidateInstanceMethod(CFSTR("TSDRep"), CFSTR("setParentRep:"));
  __TSAccessibilityValidateInstanceMethod(CFSTR("TSWPRep"), CFSTR("overlayLayers"));
  __TSAccessibilityValidateInstanceMethod(CFSTR("TSPObject"), CFSTR("context"));
  __TSAccessibilityValidateInstanceMethod(CFSTR("TSSStyle"), CFSTR("name"));
  __TSAccessibilityValidateInstanceMethod(CFSTR("TSSStyle"), CFSTR("name"));
  __TSAccessibilityValidateInstanceMethod(CFSTR("TSDShapeLayout"), CFSTR("layoutInfoGeometry"));
  __TSAccessibilityValidateInstanceMethod(CFSTR("TSDInteractiveCanvasController"), CFSTR("setViewScale:andScrollViewFrame:maintainPosition:animated:"));
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSDInteractiveCanvasController"), CFSTR("scrollView:willAnimateToContentOffset:"), "v", v1528, v1529, v1530, v1531, v1532, "@");
  __TSAccessibilityValidateInstanceMethod(CFSTR("TSDDrawableInfo"), CFSTR("parentInfo"));
  __TSAccessibilityValidateInstanceMethod(CFSTR("TSDStroke"), CFSTR("pattern"));
  __TSAccessibilityValidateInstanceMethod(CFSTR("TSSStyle"), CFSTR("styleIdentifier"));
  __TSAccessibilityValidateInstanceMethod(CFSTR("TSDShadowSwatch"), CFSTR("shadow"));
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSDRep"), CFSTR("initWithLayout:canvas:"), "@", v1533, v1534, v1535, v1536, v1537, "@");
  __TSAccessibilityValidateInstanceMethod(CFSTR("TSPData"), CFSTR("filename"));
  __TSAccessibilityValidateInstanceMethod(CFSTR("TSWPRep"), CFSTR("beginEditing"));
  __TSAccessibilityValidateInstanceMethod(CFSTR("TSWPRep"), CFSTR("canEditWithEditor:"));
  __TSAccessibilityValidateInstanceMethod(CFSTR("TSWPEditingController"), CFSTR("selectAll:"));
  __TSAccessibilityValidateInstanceMethod(CFSTR("TSWPEditingController"), CFSTR("copy:"));
  __TSAccessibilityValidateInstanceMethod(CFSTR("TSWPEditingController"), CFSTR("p_sendHandleTapNotification"));
  __TSAccessibilityValidateInstanceMethod(CFSTR("TSWPEditingController"), CFSTR("unfilteredText"));
  __TSAccessibilityValidateInstanceMethod(CFSTR("TSWPEditingController"), CFSTR("insertText:"));
  __TSAccessibilityValidateInstanceMethod(CFSTR("TSWPEditingController"), CFSTR("deleteBackward"));
  __TSAccessibilityValidateInstanceMethod(CFSTR("TSWPEditingController"), CFSTR("deleteForward"));
  __TSAccessibilityValidateInstanceMethod(CFSTR("TSWPEditingController"), CFSTR("definitionAction:"));
  __TSAccessibilityValidateInstanceMethod(CFSTR("TSWPEditingController"), CFSTR("styleAction:"));
  __TSAccessibilityValidateInstanceMethod(CFSTR("TSWPEditingController"), CFSTR("replaceAction:"));
  __TSAccessibilityValidateInstanceMethod(CFSTR("TSWPEditingController"), CFSTR("p_updateHUDState"));
  __TSAccessibilityValidateInstanceMethod(CFSTR("TSWPEditMenuController"), CFSTR("p_setMenuVisible:"));
  __TSAccessibilityValidateInstanceMethod(CFSTR("TSWPEditingController"), CFSTR("setIsBecomingActive:"));
  __TSAccessibilityValidateInstanceMethod(CFSTR("TSWPEditingController"), CFSTR("canPerformEditorAction:withSender:"));
  __TSAccessibilityValidateInstanceMethod(CFSTR("TSWPEditingController"), CFSTR("shouldShowEditMenu"));
  __TSAccessibilityValidateInstanceMethod(CFSTR("TSWPEditingController"), CFSTR("editorCanHideEditMenu"));
  __TSAccessibilityValidateInstanceMethod(CFSTR("TSDKnob"), CFSTR("knobImage"));
  __TSAccessibilityValidateInstanceMethod(CFSTR("TSDInteractiveCanvasController"), CFSTR("hitKnobAtPoint:returningRep:"));
  __TSAccessibilityValidateInstanceMethod(CFSTR("TSWPColumn"), CFSTR("lineIndexForCharIndex:eol:"));
  __TSAccessibilityValidateInstanceMethod(CFSTR("TSWPColumn"), CFSTR("rangeOfLineFragmentAtIndex:"));
  __TSAccessibilityValidateInstanceMethod(CFSTR("TSWPColumn"), CFSTR("glyphRectForRange:includingLabel:"));
  __TSAccessibilityValidateInstanceMethod(CFSTR("TSWPRep"), CFSTR("columnForCharIndex:"));
  __TSAccessibilityValidateInstanceMethod(CFSTR("TSWPRep"), CFSTR("charIndexForPointWithPinning:"));
  __TSAccessibilityValidateInstanceMethod(CFSTR("TSWPStorage"), CFSTR("valueForProperty:atCharIndex:effectiveRange:"));
  __TSAccessibilityValidateInstanceMethod(CFSTR("TSUIntegerKeyDictionary"), CFSTR("objectForKey:"));
  __TSAccessibilityValidateInstanceMethod(CFSTR("TSUIntegerKeyDictionary"), CFSTR("valueEnumerator"));
  __TSAccessibilityValidateInstanceMethod(CFSTR("UITableViewCell"), CFSTR("editControlWasClicked:"));
  __TSAccessibilityValidateInstanceMethod(CFSTR("TSDDrawableInfo"), CFSTR("owningAttachment"));
  __TSAccessibilityValidateIvar(CFSTR("TSDInteractiveCanvasController"), "mRepsByRepLayer");
  __TSAccessibilityValidateIvar(CFSTR("TSKSegmentedControl"), "mButtonSegments");
  __TSAccessibilityValidateIvar(CFSTR("TSDCanvas"), "mAllReps");
  __TSAccessibilityValidateProtocolMethod(CFSTR("TSDInfo"), CFSTR("owningAttachment"), 1, 1);
  if (-[TSAccessibility supportsTableEditing](self, "supportsTableEditing"))
  {
    __TSAccessibilityValidateIsKindOfClass(CFSTR("TSTiOSCellEditorViewController"), CFSTR("UIViewController"));
    __TSAccessibilityValidateIvarType(CFSTR("TSTNumberCellEditor"), "mCachedCurrencyCode", "NSString");
    __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSTNumberCellEditor"), CFSTR("deleteBackward"), "v", v1538, v1539, v1540, v1541, v1542, 0);
    __TSAccessibilityValidateInstanceMethod(CFSTR("TSTTableKnob"), CFSTR("knobVariant"));
    __TSAccessibilityValidateIvar(CFSTR("TSTiOSCellEditorViewController"), "mNumberSegment");
    __TSAccessibilityValidateIvar(CFSTR("TSTiOSCellEditorViewController"), "mBackSegment");
    __TSAccessibilityValidateIvar(CFSTR("TSTiOSCellEditorViewController"), "mDateDurationSegment");
    __TSAccessibilityValidateIvar(CFSTR("TSTiOSCellEditorViewController"), "mTextSegment");
    __TSAccessibilityValidateIvar(CFSTR("TSTiOSCellEditorViewController"), "mFormulaSegment");
    __TSAccessibilityValidateIvar(CFSTR("TSTiOSCellEditorViewController"), "mDoneCancelSubView");
  }
  __TSAccessibilityValidateClassMethod(CFSTR("UICalloutBar"), CFSTR("sharedCalloutBar"));
  __TSAccessibilityValidateInstanceMethod(CFSTR("UIDimmingView"), CFSTR("passthroughViews"));
  __TSAccessibilityValidateInstanceMethod(CFSTR("UIPopoverController"), CFSTR("dimmingViewWasTapped:"));
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("UIScrollView"), CFSTR("_setContentOffset:duration:animationCurve:"), "v", v1543, v1544, v1545, v1546, v1547, "{CGPoint=dd}");
  __TSAccessibilityValidateInstanceMethod(CFSTR("NSObject"), CFSTR("_accessibilityShouldUseViewHierarchyForFindingScrollParent"));
  __TSAccessibilityValidateInstanceMethod(CFSTR("UIApplication"), CFSTR("_accessibilityMainWindow"));
  __TSAccessibilityValidateInstanceMethod(CFSTR("UIApplication"), CFSTR("_accessibilityElementFirst:last:forFocus:"));
  __TSAccessibilityValidateInstanceMethod(CFSTR("UIScrollView"), CFSTR("_accessibilityScrollAnimationDurationDelay"));
  __TSAccessibilityValidateInstanceMethod(CFSTR("UIScrollView"), CFSTR("_accessibilityScrollStatus"));
  __TSAccessibilityValidateInstanceMethod(CFSTR("UIScrollView"), CFSTR("_accessibilityScrollStatusFormatString"));
  __TSAccessibilityValidateInstanceMethod(CFSTR("UIView"), CFSTR("_accessibleSubviews"));
}

- (void)addSafeCategoryNamesToCollection:(id)a3
{
  objc_msgSend(a3, "addObject:", CFSTR("TSCALayerAccessibility"));
  if (-[TSAccessibility supportsCharts](self, "supportsCharts"))
  {
    objc_msgSend(a3, "addObject:", CFSTR("TSCH3DFillAccessibility"));
    objc_msgSend(a3, "addObject:", CFSTR("TSCHChartDrawableInfoAccessibility"));
    objc_msgSend(a3, "addObject:", CFSTR("TSCHChartInfoAccessibility"));
    objc_msgSend(a3, "addObject:", CFSTR("TSCHChartRepAccessibility"));
    objc_msgSend(a3, "addObject:", CFSTR("TSCHChartSeriesStyleAccessibility"));
    objc_msgSend(a3, "addObject:", CFSTR("TSCHChartStylePresetAccessibility"));
    objc_msgSend(a3, "addObject:", CFSTR("TSCHChartTypeAccessibility"));
  }
  objc_msgSend(a3, "addObject:", CFSTR("TSDAngleGradientAccessibility"));
  objc_msgSend(a3, "addObject:", CFSTR("TSDAudioRepAccessibility"));
  objc_msgSend(a3, "addObject:", CFSTR("TSDBezierPathAccessibility"));
  objc_msgSend(a3, "addObject:", CFSTR("TSDBezierPathSourceAccessibility"));
  objc_msgSend(a3, "addObject:", CFSTR("TSDBrushStrokeAccessibility"));
  objc_msgSend(a3, "addObject:", CFSTR("TSDCalloutPathSourceAccessibility"));
  objc_msgSend(a3, "addObject:", CFSTR("TSDCanvasAccessibility"));
  objc_msgSend(a3, "addObject:", CFSTR("TSDCanvasViewAccessibility"));
  objc_msgSend(a3, "addObject:", CFSTR("TSDColorFillAccessibility"));
  objc_msgSend(a3, "addObject:", CFSTR("TSDConnectionLinePathSourceAccessibility"));
  objc_msgSend(a3, "addObject:", CFSTR("TSDContactShadowAccessibility"));
  objc_msgSend(a3, "addObject:", CFSTR("TSDContainerRepAccessibility"));
  objc_msgSend(a3, "addObject:", CFSTR("TSDCurvedShadowAccessibility"));
  objc_msgSend(a3, "addObject:", CFSTR("TSDDrawableInfoAccessibility"));
  objc_msgSend(a3, "addObject:", CFSTR("TSDDropShadowAccessibility"));
  objc_msgSend(a3, "addObject:", CFSTR("TSDEditableBezierPathSourceAccessibility"));
  objc_msgSend(a3, "addObject:", CFSTR("TSDEditorControllerAccessibility"));
  objc_msgSend(a3, "addObject:", CFSTR("TSDFillAccessibility"));
  objc_msgSend(a3, "addObject:", CFSTR("TSDFrameAccessibility"));
  objc_msgSend(a3, "addObject:", CFSTR("TSDGradientAccessibility"));
  objc_msgSend(a3, "addObject:", CFSTR("TSDGradientStopAccessibility"));
  objc_msgSend(a3, "addObject:", CFSTR("TSDImageFillAccessibility"));
  objc_msgSend(a3, "addObject:", CFSTR("TSDImageInfoAccessibility"));
  objc_msgSend(a3, "addObject:", CFSTR("TSDImageRepAccessibility"));
  objc_msgSend(a3, "addObject:", CFSTR("TSDInfoGeometryAccessibility"));
  objc_msgSend(a3, "addObject:", CFSTR("TSDInteractiveCanvasControllerAccessibility"));
  objc_msgSend(a3, "addObject:", CFSTR("TSDKnobAccessibility"));
  objc_msgSend(a3, "addObject:", CFSTR("TSDKnobTrackerAccessibility"));
  objc_msgSend(a3, "addObject:", CFSTR("TSDLayoutAccessibility"));
  objc_msgSend(a3, "addObject:", CFSTR("TSDLayoutGeometryAccessibility"));
  objc_msgSend(a3, "addObject:", CFSTR("TSDMediaStyleAccessibility"));
  objc_msgSend(a3, "addObject:", CFSTR("TSDMovieInfoAccessibility"));
  objc_msgSend(a3, "addObject:", CFSTR("TSDMovieKnobAccessibility"));
  objc_msgSend(a3, "addObject:", CFSTR("TSDMovieRepAccessibility"));
  objc_msgSend(a3, "addObject:", CFSTR("TSDPathSourceAccessibility"));
  objc_msgSend(a3, "addObject:", CFSTR("TSDPointPathSourceAccessibility"));
  objc_msgSend(a3, "addObject:", CFSTR("TSDReflectionAccessibility"));
  objc_msgSend(a3, "addObject:", CFSTR("TSDRepAccessibility"));
  objc_msgSend(a3, "addObject:", CFSTR("TSDScalarPathSourceAccessibility"));
  objc_msgSend(a3, "addObject:", CFSTR("TSDShadowAccessibility"));
  objc_msgSend(a3, "addObject:", CFSTR("TSDShapeInfoAccessibility"));
  objc_msgSend(a3, "addObject:", CFSTR("TSDShapeLayoutAccessibility"));
  objc_msgSend(a3, "addObject:", CFSTR("TSDShapeRepAccessibility"));
  objc_msgSend(a3, "addObject:", CFSTR("TSDShapeStyleAccessibility"));
  objc_msgSend(a3, "addObject:", CFSTR("TSDSmartStrokeAccessibility"));
  objc_msgSend(a3, "addObject:", CFSTR("TSDStrokeAccessibility"));
  objc_msgSend(a3, "addObject:", CFSTR("TSDStrokePatternAccessibility"));
  objc_msgSend(a3, "addObject:", CFSTR("TSKAVPlayerControllerAccessibility"));
  objc_msgSend(a3, "addObject:", CFSTR("TSKRulerUnitsAccessibility"));
  objc_msgSend(a3, "addObject:", CFSTR("TSPDataAccessibility"));
  objc_msgSend(a3, "addObject:", CFSTR("TSTCellAccessibility"));
  objc_msgSend(a3, "addObject:", CFSTR("TSTCellRegionAccessibility"));
  objc_msgSend(a3, "addObject:", CFSTR("TSTConfigurationAccessibility"));
  objc_msgSend(a3, "addObject:", CFSTR("TSTMasterLayoutAccessibility"));
  objc_msgSend(a3, "addObject:", CFSTR("TSTTableRepAccessibility"));
  objc_msgSend(a3, "addObject:", CFSTR("TSTTableSelectionAccessibility"));
  objc_msgSend(a3, "addObject:", CFSTR("TSTTableStylePresetAccessibility"));
  objc_msgSend(a3, "addObject:", CFSTR("TSWPAttachmentAccessibility"));
  objc_msgSend(a3, "addObject:", CFSTR("TSWPColumnAccessibility"));
  objc_msgSend(a3, "addObject:", CFSTR("TSWPEditingControllerAccessibility"));
  objc_msgSend(a3, "addObject:", CFSTR("TSWPFilteredStorageAccessibility"));
  objc_msgSend(a3, "addObject:", CFSTR("TSWPFootnoteReferenceAttachmentAccessibility"));
  objc_msgSend(a3, "addObject:", CFSTR("TSWPHyperlinkFieldAccessibility"));
  objc_msgSend(a3, "addObject:", CFSTR("TSWPInteractiveCanvasControllerAccessibility"));
  objc_msgSend(a3, "addObject:", CFSTR("TSWPListStyleAccessibility"));
  objc_msgSend(a3, "addObject:", CFSTR("TSWPLayoutAccessibility"));
  objc_msgSend(a3, "addObject:", CFSTR("TSWPRepAccessibility"));
  objc_msgSend(a3, "addObject:", CFSTR("TSWPSelectionAccessibility"));
  objc_msgSend(a3, "addObject:", CFSTR("TSWPShapeInfoAccessibility"));
  objc_msgSend(a3, "addObject:", CFSTR("TSWPShapeRepAccessibility"));
  objc_msgSend(a3, "addObject:", CFSTR("TSWPSmartFieldAccessibility"));
  objc_msgSend(a3, "addObject:", CFSTR("TSWPStorageAccessibility"));
  objc_msgSend(a3, "addObject:", CFSTR("TSWPStorageBroadcasterAccessibility"));
  objc_msgSend(a3, "addObject:", CFSTR("TSSStyleAccessibility"));
  objc_msgSend(a3, "addObject:", CFSTR("TSSPropertySetAccessibility"));
  objc_msgSend(a3, "addObject:", CFSTR("TSSThemeAccessibility"));
  objc_msgSend(a3, "addObject:", CFSTR("TSWPParagraphStyleAccessibility"));
  objc_msgSend(a3, "addObject:", CFSTR("TSUColorAccessibility"));
  objc_msgSend(a3, "addObject:", CFSTR("TSDBrushStrokeAccessibility"));
  objc_msgSend(a3, "addObject:", CFSTR("TSDShadowSwatchAccessibility"));
  objc_msgSend(a3, "addObject:", CFSTR("TSUIAccessibilityElementKBKey"));
  objc_msgSend(a3, "addObject:", CFSTR("TSUIApplicationAccessibility"));
  objc_msgSend(a3, "addObject:", CFSTR("TSUIButtonAccessibility"));
  objc_msgSend(a3, "addObject:", CFSTR("TSUILabelAccessibility"));
  objc_msgSend(a3, "addObject:", CFSTR("TSUIPageControlAccessibility"));
  objc_msgSend(a3, "addObject:", CFSTR("TSUIReferenceLibraryViewControllerAccessibility"));
  objc_msgSend(a3, "addObject:", CFSTR("TSUIScrollViewAccessibility"));
  objc_msgSend(a3, "addObject:", CFSTR("TSUISliderAccessibility"));
  objc_msgSend(a3, "addObject:", CFSTR("TSWPEditMenuControllerAccessibility"));
  objc_msgSend(a3, "addObject:", CFSTR("TSWPShapeInfoAccessibility"));
  if (-[TSAccessibility supportsTableEditing](self, "supportsTableEditing"))
  {
    objc_msgSend(a3, "addObject:", CFSTR("TSTiOSCellEditorViewControllerAccessibility"));
    objc_msgSend(a3, "addObject:", CFSTR("TSTNumberCellEditorAccessibility"));
    objc_msgSend(a3, "addObject:", CFSTR("TSTTableKnobAccessibility"));
  }
}

- (void)loadAccessibilitySupport
{
  uint64_t v3;
  void *v4;

  if (!-[TSAccessibility accessibilitySupportLoaded](self, "accessibilitySupportLoaded"))
  {
    if (TSAccessibilityShouldPerformValidationChecks())
    {
      -[TSAccessibility performValidation](self, "performValidation");
      if (-[TSAccessibility conformsToProtocol:](self, "conformsToProtocol:", &OBJC_PROTOCOL___TSAccessibilityExtras))
      {
        if ((objc_opt_respondsToSelector(self, "performExtraValidation") & 1) != 0)
          -[TSAccessibility performExtraValidation](self, "performExtraValidation");
      }
    }
    v4 = (void *)objc_opt_new(NSMutableSet, v3);
    -[TSAccessibility addSafeCategoryNamesToCollection:](self, "addSafeCategoryNamesToCollection:", v4);
    if (-[TSAccessibility conformsToProtocol:](self, "conformsToProtocol:", &OBJC_PROTOCOL___TSAccessibilityExtras)&& (objc_opt_respondsToSelector(self, "addExtraSafeCategoryNamesToCollection:") & 1) != 0)
    {
      -[TSAccessibility addExtraSafeCategoryNamesToCollection:](self, "addExtraSafeCategoryNamesToCollection:", v4);
    }
    TSAccessibilityInstallSafeCategories(v4);

    if (-[TSAccessibility conformsToProtocol:](self, "conformsToProtocol:", &OBJC_PROTOCOL___TSAccessibilityExtras))
    {
      if ((objc_opt_respondsToSelector(self, "loadExtraAccessibilitySupport") & 1) != 0)
        -[TSAccessibility loadExtraAccessibilitySupport](self, "loadExtraAccessibilitySupport");
    }
    -[TSAccessibility setAccessibilitySupportLoaded:](self, "setAccessibilitySupportLoaded:", 1);
  }
}

- (BOOL)supportsCharts
{
  return 1;
}

- (BOOL)supportsTableEditing
{
  return 1;
}

- (BOOL)supportsAdvancedTextSearchExperience
{
  return 0;
}

- (id)canvasViewDescription
{
  return TSAccessibilityLocalizedString((uint64_t)CFSTR("canvas.general.description"));
}

- (BOOL)accessibilitySupportLoaded
{
  return self->_accessibilitySupportLoaded;
}

- (void)setAccessibilitySupportLoaded:(BOOL)a3
{
  self->_accessibilitySupportLoaded = a3;
}

- (BOOL)quickSpeakSupportLoaded
{
  return __TSAccessibilityGetAssociatedBool(self, &unk_5439B8);
}

- (void)setQuickSpeakSupportLoaded:(BOOL)a3
{
  __TSAccessibilitySetAssociatedBool(self, &unk_5439B8, a3);
}

- (BOOL)shouldFakeQuickSpeakAlwaysSpeaking
{
  return __TSAccessibilityGetAssociatedBool(self, &unk_5439B9);
}

- (void)setShouldFakeQuickSpeakAlwaysSpeaking:(BOOL)a3
{
  __TSAccessibilitySetAssociatedBool(self, &unk_5439B9, a3);
}

- (BOOL)_isKeyboardVisible
{
  return __TSAccessibilityGetAssociatedBool(self, &unk_5439BA);
}

- (void)_setKeyboardVisible:(BOOL)a3
{
  __TSAccessibilitySetAssociatedBool(self, &unk_5439BA, a3);
}

- (CGRect)_keyboardFrame
{
  double AssociatedCGRect;
  double v3;
  double v4;
  double v5;
  CGRect result;

  AssociatedCGRect = __TSAccessibilityGetAssociatedCGRect(self, &unk_5439BB);
  result.size.height = v5;
  result.size.width = v4;
  result.origin.y = v3;
  result.origin.x = AssociatedCGRect;
  return result;
}

- (void)_setKeyboardFrame:(CGRect)a3
{
  __TSAccessibilitySetAssociatedCGRect(self, &unk_5439BB, a3.origin.x, a3.origin.y, a3.size.width, a3.size.height);
}

- (id)cachedCurrentlyFocusedElement
{
  return __TSAccessibilityGetAssociatedObject(self, &unk_5439BC);
}

- (void)setCachedCurrentlyFocusedElement:(id)a3
{
  __TSAccessibilitySetAssociatedObject(self, &unk_5439BC, a3);
}

- (id)cachedFirstElementForUpcomingScreenChange
{
  return __TSAccessibilityGetAssociatedObject(self, &unk_5439BD);
}

- (void)setCachedFirstElementForUpcomingScreenChange:(id)a3
{
  __TSAccessibilitySetAssociatedObject(self, &unk_5439BD, a3);
}

- (unint64_t)firstElementForUpcomingScreenChangeResetCount
{
  return (unint64_t)__TSAccessibilityGetAssociatedUnsignedInteger(self, &unk_5439BE);
}

- (void)setFirstElementForUpcomingScreenChangeResetCount:(unint64_t)a3
{
  __TSAccessibilitySetAssociatedUnsignedInteger(self, &unk_5439BE, (id)a3);
}

- (id)cachedFirstElementForUpcomingPageTurn
{
  return __TSAccessibilityGetAssociatedObject(self, &unk_5439BF);
}

- (void)setCachedFirstElementForUpcomingPageTurn:(id)a3
{
  __TSAccessibilitySetAssociatedObject(self, &unk_5439BF, a3);
}

- (unint64_t)firstElementForUpcomingPageTurnResetCount
{
  return (unint64_t)__TSAccessibilityGetAssociatedUnsignedInteger(self, &unk_5439C0);
}

- (void)setFirstElementForUpcomingPageTurnResetCount:(unint64_t)a3
{
  __TSAccessibilitySetAssociatedUnsignedInteger(self, &unk_5439C0, (id)a3);
}

- (BOOL)_systemVersionIsGreaterOrEqualTo:(id)a3
{
  return -[NSString compare:options:](-[UIDevice systemVersion](+[UIDevice currentDevice](UIDevice, "currentDevice"), "systemVersion"), "compare:options:", a3, 64) != NSOrderedAscending;
}

- (void)_keyboardWasShown:(id)a3
{
  -[TSAccessibility _setKeyboardVisible:](self, "_setKeyboardVisible:", 1);
  objc_msgSend(objc_msgSend(objc_msgSend(a3, "userInfo"), "objectForKey:", UIKeyboardFrameEndUserInfoKey), "CGRectValue");
  -[TSAccessibility _setKeyboardFrame:](self, "_setKeyboardFrame:");
}

- (void)_keyboardWillBeHidden:(id)a3
{
  -[TSAccessibility _setKeyboardVisible:](self, "_setKeyboardVisible:", 0);
  -[TSAccessibility _setKeyboardFrame:](self, "_setKeyboardFrame:", CGRectNull.origin.x, CGRectNull.origin.y, CGRectNull.size.width, CGRectNull.size.height);
}

- (void)_setCurrentlyFocusedElement:(id)a3
{
  -[TSAccessibility setCachedCurrentlyFocusedElement:](self, "setCachedCurrentlyFocusedElement:", a3);
}

- (id)preferencesDomain
{
  return CFSTR("com.apple.Accessibility");
}

- (void)performExtraValidation
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;

  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("NSObject"), CFSTR("_accessibilityFrameForSorting"), "{CGRect={CGPoint=dd}{CGSize=dd}}", v2, v3, v4, v5, v6, 0);
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("NSObject"), CFSTR("_accessibilityHasTextOperations"), "B", v8, v9, v10, v11, v12, 0);
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("NSObject"), CFSTR("_accessibilityLoadAccessibilityInformation"), "v", v13, v14, v15, v16, v17, 0);
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("NSObject"), CFSTR("_accessibilityOverridesInstructionsHint"), "B", v18, v19, v20, v21, v22, 0);
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("NSObject"), CFSTR("_accessibilityParentView"), "@", v23, v24, v25, v26, v27, 0);
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("NSObject"), CFSTR("_accessibilityPerformCustomActionWithIdentifier:"), "B", v28, v29, v30, v31, v32, "@");
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("NSObject"), CFSTR("_accessibilityScrollToVisible"), "B", v33, v34, v35, v36, v37, 0);
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("NSObject"), CFSTR("_accessibilityTextOperationAction:"), "B", v38, v39, v40, v41, v42, "@");
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("NSObject"), CFSTR("_accessibilityTextViewTextOperationResponder"), "@", v43, v44, v45, v46, v47, 0);
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("NSObject"), CFSTR("_accessibilityTextOperations"), "@", v48, v49, v50, v51, v52, 0);
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("NSObject"), CFSTR("accessibilityMenuActions"), "@", v53, v54, v55, v56, v57, 0);
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("NSObject"), CFSTR("accessibilityEditOperationAction:"), "B", v58, v59, v60, v61, v62, "@");
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("UISlider"), CFSTR("_setValue:andSendAction:"), "v", v63, v64, v65, v66, v67, "f");
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("UIScrollView"), CFSTR("_accessibilityScrollStatusPrefersVertical"), "B", v68, v69, v70, v71, v72, 0);
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("UIScrollView"), CFSTR("accessibilityApplyScrollContent:sendScrollStatus:animated:"), "v", v73, v74, v75, v76, v77, "{CGPoint=dd}");
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("UITableViewCell"), CFSTR("_accessibilityRetrieveTableViewCellText"), "@", v78, v79, v80, v81, v82, 0);
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("UITableViewCell"), CFSTR("_accessibilityRetrieveTableViewIvarsText"), "@", v83, v84, v85, v86, v87, 0);
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("UITableViewCell"), CFSTR("_accessibilityTableViewCellSubclassShouldExist"), "B", v88, v89, v90, v91, v92, 0);
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("UIView"), CFSTR("_accessibilityViewController"), "@", v93, v94, v95, v96, v97, 0);
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("UIView"), CFSTR("_accessibleSubviews"), "@", v98, v99, v100, v101, v102, 0);
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("UIWindow"), CFSTR("firstResponder"), "@", v103, v104, v105, v106, v107, 0);
  __TSAccessibilityValidateIsKindOfClass(CFSTR("TSADocumentViewController"), CFSTR("TSAViewController"));
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSADocumentViewController"), CFSTR("allowEditMenuToAppear"), "B", v108, v109, v110, v111, v112, 0);
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSADocumentViewController"), CFSTR("coachingTipsButton"), "@", v113, v114, v115, v116, v117, 0);
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSADocumentViewController"), CFSTR("setDocumentMode:animated:"), "v", v118, v119, v120, v121, v122, "q");
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSADocumentViewController"), CFSTR("sharingButton"), "@", v123, v124, v125, v126, v127, 0);
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSAViewController"), CFSTR("toolbarButtonItemForCoachingTipsWithTarget:action:"), "@", v128, v129, v130, v131, v132, "@");
  __TSAccessibilityValidateIsKindOfClass(CFSTR("TSDCheckableTableViewCell"), CFSTR("UITableViewCell"));
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSDCheckableTableViewCell"), CFSTR("checked"), "B", v133, v134, v135, v136, v137, 0);
  __TSAccessibilityValidateIvarType(CFSTR("TSDCheckableTableViewCell"), "mImageButton", "UIButton");
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSDCheckableTableViewCell"), CFSTR("setChecked:"), "v", v138, v139, v140, v141, v142, "B");
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSDCheckableTableViewCell"), CFSTR("setImage:forState:"), "v", v143, v144, v145, v146, v147, "@");
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSDDoubleSegmentedControlTableViewCell"), CFSTR("leftSegmentedControl"), "@", v148, v149, v150, v151, v152, 0);
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSDDoubleSegmentedControlTableViewCell"), CFSTR("rightSegmentedControl"), "@", v153, v154, v155, v156, v157, 0);
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSDInteractiveCanvasController"), CFSTR("textInputResponder"), "@", v158, v159, v160, v161, v162, 0);
  __TSAccessibilityValidateIsKindOfClass(CFSTR("TSDiOSCanvasViewController"), CFSTR("UIViewController"));
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSDiOSCanvasViewController"), CFSTR("asiOSCVC"), "@", v163, v164, v165, v166, v167, 0);
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSDiOSCanvasViewController"), CFSTR("delegate"), "@", v168, v169, v170, v171, v172, 0);
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSDiOSCanvasViewController"), CFSTR("extraMenuItems"), "@", v173, v174, v175, v176, v177, 0);
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSDiOSCanvasViewController"), CFSTR("interactiveCanvasController"), "@", v178, v179, v180, v181, v182, 0);
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSDiOSCanvasViewController"), CFSTR("setContextMenuMightBeDisplayed:"), "v", v183, v184, v185, v186, v187, "B");
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSDiOSCanvasViewController"), CFSTR("showEditMenuForSelection:"), "v", v188, v189, v190, v191, v192, "@");
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSDPointPathSource"), CFSTR("initWithType:point:naturalSize:"), "@", v193, v194, v195, v196, v197, "i");
  __TSAccessibilityValidateIsKindOfClass(CFSTR("TSDTextInputResponder"), CFSTR("UIResponder"));
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSDTextInputResponder"), CFSTR("editingTextRep"), "@", v198, v199, v200, v201, v202, 0);
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSDTextInputResponder"), CFSTR("editingTextReps"), "@", v203, v204, v205, v206, v207, 0);
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSDTextInputResponder"), CFSTR("editor"), "@", v208, v209, v210, v211, v212, 0);
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSDTextInputResponder"), CFSTR("selectAll:"), "v", v213, v214, v215, v216, v217, "@");
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSDTextInputResponder"), CFSTR("p_ICC"), "@", v218, v219, v220, v221, v222, 0);
  __TSAccessibilityValidateIvarType(CFSTR("TSDTextInputResponder"), "_editor", "NSObject<TSDTextInput>");
  __TSAccessibilityValidateIvarType(CFSTR("TSDTextInputResponder"), "_nextResponder", "UIResponder");
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSDTextRange"), CFSTR("initWithRange:"), "@", v223, v224, v225, v226, v227, "{_NSRange=QQ}");
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSDTextRange"), CFSTR("range"), "{_NSRange=QQ}", v228, v229, v230, v231, v232, 0);
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSKPopoverBasedViewController"), CFSTR("p_newCloseImageBarButtonWithTarget:action:"), "@", v233, v234, v235, v236, v237, "@");
  __TSAccessibilityValidateIvarType(CFSTR("TSKPopoverBasedViewController"), "mPopoverController", "TSKPopoverController");
  __TSAccessibilityValidateIvarType(CFSTR("TSKSegmentedControl"), "mButtonSegments", "NSMutableArray");
  if (-[TSAccessibility supportsCharts](self, "supportsCharts"))
    __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSAInsertPopoverController"), CFSTR("p_orderedChartTypeArrayForPage:"), "@", v238, v239, v240, v241, v242, "Q");
  __TSAccessibilityValidateInstanceMethodComplete(CFSTR("TSUColor"), CFSTR("UIColor"), "@", v238, v239, v240, v241, v242, 0);
}

- (void)addExtraSafeCategoryNamesToCollection:(id)a3
{
  objc_msgSend(a3, "addObject:", CFSTR("TSNSObjectAccessibility_iOS"));
  objc_msgSend(a3, "addObject:", CFSTR("TSUICollectionViewCellAccessibility"));
  objc_msgSend(a3, "addObject:", CFSTR("TSUIInputSetHostViewAccessibility"));
  objc_msgSend(a3, "addObject:", CFSTR("TSUIMenuControllerAccessibility"));
  objc_msgSend(a3, "addObject:", CFSTR("TSUINavigationItemAccessibility"));
  objc_msgSend(a3, "addObject:", CFSTR("TSUIPopoverPresentationControllerAccessibility"));
  objc_msgSend(a3, "addObject:", CFSTR("TSUITableViewCellAccessibility"));
  objc_msgSend(a3, "addObject:", CFSTR("TSUIViewAccessibility"));
  objc_msgSend(a3, "addObject:", CFSTR("TSUIViewControllerAccessibility"));
  objc_msgSend(a3, "addObject:", CFSTR("TSUIWindowAccessibility"));
  objc_msgSend(a3, "addObject:", CFSTR("TSAViewControllerAccessibility"));
  objc_msgSend(a3, "addObject:", CFSTR("TSDCheckableTableViewCellAccessibility"));
  objc_msgSend(a3, "addObject:", CFSTR("TSDDoubleSegmentedControlTableViewCellAccessibility"));
  objc_msgSend(a3, "addObject:", CFSTR("TSDiOSCanvasViewControllerAccessibility"));
  objc_msgSend(a3, "addObject:", CFSTR("TSDTextInputResponderAccessibility"));
  objc_msgSend(a3, "addObject:", CFSTR("TSDTextRangeAccessibility"));
  objc_msgSend(a3, "addObject:", CFSTR("TSWPEquationRepAccessibility"));
  objc_msgSend(a3, "addObject:", CFSTR("TSKPopoverBasedViewControllerAccessibility"));
  objc_msgSend(a3, "addObject:", CFSTR("TSKSegmentedControlAccessibility"));
}

- (void)loadExtraAccessibilitySupport
{
  NSNotificationCenter *v3;

  -[TSAccessibility _setKeyboardFrame:](self, "_setKeyboardFrame:", CGRectNull.origin.x, CGRectNull.origin.y, CGRectNull.size.width, CGRectNull.size.height);
  v3 = +[NSNotificationCenter defaultCenter](NSNotificationCenter, "defaultCenter");
  -[NSNotificationCenter addObserver:selector:name:object:](v3, "addObserver:selector:name:object:", self, "_keyboardWasShown:", UIKeyboardDidShowNotification, 0);
  -[NSNotificationCenter addObserver:selector:name:object:](v3, "addObserver:selector:name:object:", self, "_keyboardWillBeHidden:", UIKeyboardWillHideNotification, 0);
}

- (void)unloadExtraAccessibilitySupport
{
  NSNotificationCenter *v3;

  v3 = +[NSNotificationCenter defaultCenter](NSNotificationCenter, "defaultCenter");
  -[NSNotificationCenter removeObserver:name:object:](v3, "removeObserver:name:object:", self, UIKeyboardDidShowNotification, 0);
  -[NSNotificationCenter removeObserver:name:object:](v3, "removeObserver:name:object:", self, UIKeyboardWillHideNotification, 0);
  -[TSAccessibility _setKeyboardFrame:](self, "_setKeyboardFrame:", CGRectNull.origin.x, CGRectNull.origin.y, CGRectNull.size.width, CGRectNull.size.height);
}

- (void)handlePostingAnnouncement:(id)a3 sender:(id)a4 priority:(int)a5
{
  uint64_t v5;
  int ShouldCrashOnValidationErrorAfterLaunch;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  id v14;
  id v15;
  uint64_t v16;
  id v17;
  id v18;

  v5 = *(_QWORD *)&a5;
  if (TSAccessibilityShouldPerformValidationChecks())
  {
    if (!+[NSThread isMainThread](NSThread, "isMainThread"))
    {
      ShouldCrashOnValidationErrorAfterLaunch = TSAccessibilityShouldCrashOnValidationErrorAfterLaunch();
      if (__TSAccessibilityHandleValidationErrorWithDescription(ShouldCrashOnValidationErrorAfterLaunch, 0, (uint64_t)CFSTR("Need to post announcements from main thread only."), v8, v9, v10, v11, v12, v16))abort();
    }
  }
  if ((_DWORD)v5 == 5 || !objc_msgSend(a3, "length"))
  {
    v15 = a3;
  }
  else
  {
    v13 = objc_msgSend(objc_alloc((Class)NSNumber), "initWithInt:", v5);
    v14 = objc_msgSend(objc_alloc((Class)NSDictionary), "initWithObjectsAndKeys:", v13, CFSTR("UIAccessibilityTokenAnnouncementPriority"), 0);

    v17 = objc_msgSend(objc_alloc((Class)NSAttributedString), "initWithString:attributes:", a3, v14);
    v15 = v17;
  }
  v18 = v15;
  UIAccessibilityPostNotification(UIAccessibilityAnnouncementNotification, v15);

}

- (void)loadQuickSpeakSupport
{
  if (!-[TSAccessibility quickSpeakSupportLoaded](self, "quickSpeakSupportLoaded")
    && NSClassFromString(CFSTR("AXQuickSpeak")))
  {
    -[TSAccessibility setQuickSpeakSupportLoaded:](self, "setQuickSpeakSupportLoaded:", 1);
    if (TSAccessibilityShouldPerformValidationChecks())
      __TSAccessibilityValidateInstanceMethod(CFSTR("AXQuickSpeak"), CFSTR("isSpeaking"));
    TSAccessibilityInstallSafeCategory(CFSTR("TSAXQuickSpeak"));
  }
}

- (BOOL)isQuickSpeakEnabled
{
  _BOOL4 v3;
  _BOOL8 v4;
  unsigned __int8 v5;

  v3 = -[TSAccessibility quickSpeakSupportLoaded](self, "quickSpeakSupportLoaded");
  if (v3)
  {
    v4 = -[TSAccessibility shouldFakeQuickSpeakAlwaysSpeaking](self, "shouldFakeQuickSpeakAlwaysSpeaking");
    -[TSAccessibility setShouldFakeQuickSpeakAlwaysSpeaking:](self, "setShouldFakeQuickSpeakAlwaysSpeaking:", 1);
    v5 = -[TSAccessibility tsaxBoolValueForKey:](self, "tsaxBoolValueForKey:", CFSTR("_accessibilityShouldShowPauseBubble"));
    -[TSAccessibility setShouldFakeQuickSpeakAlwaysSpeaking:](self, "setShouldFakeQuickSpeakAlwaysSpeaking:", v4);
    LOBYTE(v3) = v5;
  }
  return v3;
}

- (BOOL)isKeyboardVisible
{
  return -[TSAccessibility _isKeyboardVisible](self, "_isKeyboardVisible");
}

- (CGRect)keyboardFrame
{
  double v2;
  double v3;
  double v4;
  double v5;
  CGRect result;

  -[TSAccessibility _keyboardFrame](self, "_keyboardFrame");
  result.size.height = v5;
  result.size.width = v4;
  result.origin.y = v3;
  result.origin.x = v2;
  return result;
}

- (id)currentlyFocusedElement
{
  return -[TSAccessibility cachedCurrentlyFocusedElement](self, "cachedCurrentlyFocusedElement");
}

- (void)setFirstElementForUpcomingScreenChange:(id)a3
{
  _QWORD v5[5];

  if (-[TSAccessibility cachedFirstElementForUpcomingScreenChange](self, "cachedFirstElementForUpcomingScreenChange") != a3)
  {
    -[TSAccessibility setCachedFirstElementForUpcomingScreenChange:](self, "setCachedFirstElementForUpcomingScreenChange:", a3);
    -[TSAccessibility setFirstElementForUpcomingScreenChangeResetCount:](self, "setFirstElementForUpcomingScreenChangeResetCount:", (char *)-[TSAccessibility firstElementForUpcomingScreenChangeResetCount](self, "firstElementForUpcomingScreenChangeResetCount")+ 1);
    v5[0] = _NSConcreteStackBlock;
    v5[1] = 3221225472;
    v5[2] = sub_249400;
    v5[3] = &unk_426DD0;
    v5[4] = self;
    TSAccessibilityPerformBlockOnMainThreadAfterDelay(v5, 5.0);
  }
}

- (void)setFirstElementForUpcomingPageTurn:(id)a3
{
  _QWORD v5[5];

  if (-[TSAccessibility cachedFirstElementForUpcomingPageTurn](self, "cachedFirstElementForUpcomingPageTurn") != a3)
  {
    -[TSAccessibility setCachedFirstElementForUpcomingPageTurn:](self, "setCachedFirstElementForUpcomingPageTurn:", a3);
    -[TSAccessibility setFirstElementForUpcomingPageTurnResetCount:](self, "setFirstElementForUpcomingPageTurnResetCount:", (char *)-[TSAccessibility firstElementForUpcomingPageTurnResetCount](self, "firstElementForUpcomingPageTurnResetCount")+ 1);
    v5[0] = _NSConcreteStackBlock;
    v5[1] = 3221225472;
    v5[2] = sub_2494F0;
    v5[3] = &unk_426DD0;
    v5[4] = self;
    TSAccessibilityPerformBlockOnMainThreadAfterDelay(v5, 5.0);
  }
}

+ (Class)specializedClass
{
  return (Class)objc_opt_class(THAccessibility, a2);
}

@end
