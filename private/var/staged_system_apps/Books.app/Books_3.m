Swift::Void __swiftcall BKLibraryBookshelfCollectionViewController.viewModeChanged()()
{
  void *v0;
  id v1;
  id v2;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  id v16;
  void *v17;
  id v18;
  id v19;
  id v20;
  uint64_t v21;
  void *v22;
  id v23;

  v1 = objc_msgSend(v0, "layout");
  v2 = objc_msgSend(v1, "viewMode");

  v3 = objc_msgSend(v0, "dataSourceAdaptor");
  v4 = objc_msgSend(v3, "supplementaryDataSource");

  v5 = objc_msgSend(v4, "viewMode");
  if (v2 != v5)
  {
    v6 = objc_msgSend(v0, "layout");
    v7 = objc_msgSend(v0, "dataSourceAdaptor");
    v8 = objc_msgSend(v7, "supplementaryDataSource");

    v9 = objc_msgSend(v8, "viewMode");
    objc_msgSend(v6, "setViewMode:", v9);

    v10 = objc_msgSend(v0, "layout");
    v11 = objc_msgSend(v0, "view");
    if (v11)
    {
      v12 = v11;
      v13 = objc_msgSend(v11, "window");

      if (v13)
      {
        v14 = v0;
      }
      else
      {
        v15 = objc_msgSend(v0, "navigationController");
        v14 = objc_msgSend(v15, "topViewController");

      }
      objc_msgSend(v10, "updateMetricsWithViewController:", v14);

      v16 = objc_msgSend(v0, "collectionView");
      if (v16)
      {
        v17 = v16;
        v18 = objc_msgSend(v16, "collectionViewLayout");

        objc_msgSend(v18, "invalidateLayout");
      }
      v19 = objc_msgSend(v0, "collectionView");
      objc_msgSend(v19, "reloadData");

      sub_1002B1458();
      v20 = objc_msgSend(v0, "navigationItem");
      v21 = objc_opt_self(BSUINavigationItem);
      v22 = (void *)swift_dynamicCastObjCClass(v20, v21);
      v23 = v22;
      if (!v22)
      {

        v22 = 0;
      }
      objc_msgSend(v22, "notifyRightBarButtonItemsDidChange");

    }
    else
    {
      __break(1u);
    }
  }
}

void sub_1002B1458()
{
  void *v0;
  id v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  id v12;

  v1 = objc_msgSend(v0, "navigationItem");
  v2 = objc_msgSend(v1, "rightBarButtonItems");

  if (v2)
  {
    v3 = sub_100009E04(0, &qword_1009D8D60, UIBarButtonItem_ptr);
    v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v2, v3);

    if ((unint64_t)v4 >> 62)
      goto LABEL_15;
    v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v4);
    for (; v5; v5 = _CocoaArrayWrapper.endIndex.getter(v11))
    {
      v6 = 4;
      while (1)
      {
        v7 = (v4 & 0xC000000000000001) != 0
           ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v6 - 4, v4)
           : *(id *)(v4 + 8 * v6);
        v8 = v7;
        v9 = v6 - 3;
        if (__OFADD__(v6 - 4, 1))
          break;
        if (!objc_msgSend(v7, "tag"))
        {
          swift_bridgeObjectRelease_n(v4, 2);
          v12 = v8;
          v10 = sub_1002AF898();
          objc_msgSend(v12, "setMenu:", v10);

          return;
        }

        ++v6;
        if (v9 == v5)
          goto LABEL_11;
      }
      __break(1u);
LABEL_15:
      if (v4 < 0)
        v11 = v4;
      else
        v11 = v4 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v4);
    }
LABEL_11:
    swift_bridgeObjectRelease_n(v4, 2);
  }
}

Swift::Void __swiftcall BKLibraryBookshelfCollectionViewController.sortModeChanged()()
{
  void *v0;
  id v1;
  id v2;
  id v3;
  id v4;
  id v5;
  uint64_t v6;
  void *v7;
  id v8;

  v1 = objc_msgSend(v0, "layout");
  v2 = objc_msgSend(v0, "dataSourceAdaptor");
  v3 = objc_msgSend(v2, "supplementaryDataSource");

  v4 = objc_msgSend(v3, "sortMode");
  objc_msgSend(v1, "setReorderableCollection:", v4 == (id)6);

  objc_msgSend(v0, "reloadData");
  sub_1002B1458();
  v5 = objc_msgSend(v0, "navigationItem");
  v6 = objc_opt_self(BSUINavigationItem);
  v7 = (void *)swift_dynamicCastObjCClass(v5, v6);
  v8 = v7;
  if (!v7)
  {

    v7 = 0;
  }
  objc_msgSend(v7, "notifyRightBarButtonItemsDidChange");

}

Swift::Void __swiftcall BKLibraryBookshelfCollectionViewController.largeTitleVisibilityDidChange(isVisible:)(Swift::Bool isVisible)
{
  void *v2;
  id v3;

  v2 = sub_1002B101C();
  if (v2)
  {
    v3 = v2;
    if (objc_msgSend(v2, "isHidden") != isVisible)
      objc_msgSend(v3, "setHidden:");

  }
}

Swift::Void __swiftcall BKLibraryBookshelfCollectionViewController.dragAndDropSessionDidStart()()
{
  void *v0;
  char *v1;

  v1 = (char *)objc_msgSend(v0, "dragAndDropSessionsActive");
  if (__OFADD__(v1, 1))
  {
    __break(1u);
  }
  else
  {
    objc_msgSend(v0, "setDragAndDropSessionsActive:", v1 + 1);
    objc_msgSend(v0, "configureForDragAndDropSession");
  }
}

Swift::Void __swiftcall BKLibraryBookshelfCollectionViewController.dragAndDropSessionDidEnd()()
{
  void *v0;
  char *v1;

  v1 = (char *)objc_msgSend(v0, "dragAndDropSessionsActive");
  if (__OFSUB__(v1, 1))
  {
    __break(1u);
  }
  else
  {
    objc_msgSend(v0, "setDragAndDropSessionsActive:", v1 - 1);
    objc_msgSend(v0, "configureForDragAndDropSession");
  }
}

Swift::Void __swiftcall BKLibraryBookshelfCollectionViewController.configureForDragAndDropSession()()
{
  uint64_t v0;

  sub_100009E04(0, (unint64_t *)&qword_1009CEC30, OS_dispatch_queue_ptr);
  v0 = swift_allocObject(&unk_1008F9968, 24, 7);
  swift_unknownObjectWeakInit(v0 + 16);
  swift_retain(v0);
  static OS_dispatch_queue.dispatchAsyncOnMainIfNeeded(block:)(sub_1002B2BA4, v0);
  swift_release_n(v0, 2);
}

void sub_1002B1AF4(uint64_t a1)
{
  uint64_t v1;
  void *Strong;
  void *v3;
  _BOOL8 v4;
  id v5;
  id v6;
  _BYTE v7[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v7, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = Strong;
    v4 = (uint64_t)objc_msgSend(Strong, "dragAndDropSessionsActive") > 0;
    objc_msgSend(v3, "updateBarButtonsAnimated:", 1);
    v5 = objc_msgSend(v3, "dataSourceAdaptor");
    v6 = objc_msgSend(v5, "supplementaryDataSource");

    objc_msgSend(v6, "setIsInDragSession:", v4);
  }
}

uint64_t sub_1002B1C80(void *a1, uint64_t a2, uint64_t a3, SEL *a4, uint64_t a5)
{
  id v9;
  uint64_t v10;
  id v11;
  __int128 v13;
  __int128 v14;

  if (a3)
  {
    v9 = a1;
    v10 = swift_unknownObjectRetain(a3);
    _bridgeAnyObjectToAny(_:)(v10);
    swift_unknownObjectRelease(a3);
  }
  else
  {
    v13 = 0u;
    v14 = 0u;
    v11 = a1;
  }
  objc_msgSend(a1, *a4, a5, v13, v14);

  return sub_100010960((uint64_t)&v13, (uint64_t *)&unk_1009D04E0);
}

uint64_t BKLibraryBookshelfCollectionViewController.createSeriesViewController(from:with:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  v4 = sub_10004CFD4(&qword_1009D76B0);
  v3[5] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for PageControllerFactory(0);
  v3[6] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v3[7] = v6;
  v3[8] = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for ActionOrigin.Kind(0);
  v3[9] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v3[10] = v8;
  v3[11] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for ActionOrigin(0);
  v3[12] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v3[13] = v10;
  v3[14] = swift_task_alloc((*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for Metrics.NavigationType(0);
  v3[15] = v11;
  v12 = *(_QWORD *)(v11 - 8);
  v3[16] = v12;
  v3[17] = swift_task_alloc((*(_QWORD *)(v12 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_10004CFD4(&qword_1009D76B8);
  v3[18] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v13 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for SeriesRoomPageIntent(0);
  v3[19] = v14;
  v15 = *(_QWORD *)(v14 - 8);
  v3[20] = v15;
  v3[21] = swift_task_alloc((*(_QWORD *)(v15 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for SeriesType(0);
  v3[22] = v16;
  v17 = *(_QWORD *)(v16 - 8);
  v3[23] = v17;
  v18 = (*(_QWORD *)(v17 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[24] = swift_task_alloc(v18);
  v3[25] = swift_task_alloc(v18);
  v19 = type metadata accessor for MainActor(0);
  v3[26] = static MainActor.shared.getter(v19);
  v20 = dispatch thunk of Actor.unownedExecutor.getter(v19, &protocol witness table for MainActor);
  v3[27] = v20;
  v3[28] = v21;
  return swift_task_switch(sub_1002B1F24, v20, v21);
}

uint64_t sub_1002B1F24()
{
  _QWORD *v0;
  void *v1;
  id v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  void *v12;
  double v13;
  unsigned __int8 v14;
  unsigned int *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  Swift::String v26;
  id v27;
  uint64_t v28;
  void *v29;
  void *v30;
  Swift::String v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v0[29] = UIViewController.objectGraphInContext.getter();
  v1 = (void *)v0[2];
  static PageRenderEvent.willPerformAction()();
  v2 = objc_msgSend(v1, "seriesID");
  v3 = (void *)v0[2];
  if (v2)
  {
    v4 = v2;
    v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(v2);
    v35 = v6;
    v36 = v5;

    v7 = objc_msgSend(v3, "seriesBooks");
    if (!v7)
      goto LABEL_6;
    v8 = v7;
    v9 = sub_100009E04(0, (unint64_t *)&qword_1009E3A00, BKLibraryAsset_ptr);
    v10 = sub_1002B2BF4();
    v11 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v8, v9, v10);

    v12 = (void *)sub_1003A3498(v11);
    *(_QWORD *)&v13 = swift_bridgeObjectRelease(v11).n128_u64[0];
    if (!v12)
      goto LABEL_6;
    v14 = objc_msgSend(v12, "isAudiobook", v13);

    if ((v14 & 1) != 0)
      v15 = (unsigned int *)&enum case for SeriesType.audiobook(_:);
    else
LABEL_6:
      v15 = (unsigned int *)&enum case for SeriesType.book(_:);
    v17 = v0[24];
    v16 = v0[25];
    v18 = v0[22];
    v19 = v0[23];
    v21 = v0[17];
    v20 = v0[18];
    v23 = v0[15];
    v22 = v0[16];
    v33 = v0[11];
    v32 = v0[10];
    v34 = v0[9];
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v19 + 104))(v16, *v15, v18);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 16))(v17, v16, v18);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v19 + 56))(v20, 1, 1, v18);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v22 + 104))(v21, enum case for Metrics.NavigationType.forward(_:), v23);
    SeriesRoomPageIntent.init(seriesID:seriesType:originatingSeriesID:originatingSeriesType:resource:navigationType:)(v36, v35, v17, 0, 0, v20, 0, v21);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v32 + 104))(v33, enum case for ActionOrigin.Kind.lockup(_:), v34);
    ActionOrigin.init(sectionID:sectionName:contentID:kind:seriesID:genreID:collectionID:authorID:flowcaseID:brickID:)(0x6C6568736B6F6F62, 0xE900000000000066, 0, 0, 0, 0, v33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
    v24 = (_QWORD *)swift_task_alloc(async function pointer to BaseObjectGraph.inject<A>(_:)[1]);
    v0[30] = v24;
    *v24 = v0;
    v24[1] = sub_1002B2308;
    return BaseObjectGraph.inject<A>(_:)(v0[8], v0[6], v0[6]);
  }
  else
  {
    _StringGuts.grow(_:)(54);
    v26._object = (void *)0x80000001007BBF30;
    v26._countAndFlagsBits = 0xD000000000000034;
    String.append(_:)(v26);
    v27 = objc_msgSend(v3, "description");
    v28 = static String._unconditionallyBridgeFromObjectiveC(_:)(v27);
    v30 = v29;

    v31._countAndFlagsBits = v28;
    v31._object = v30;
    String.append(_:)(v31);
    swift_bridgeObjectRelease(v30);
    return _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Books/BKLibraryBookshelfCollectionViewController.swift", 54, 2, 527, 0);
  }
}

uint64_t sub_1002B2308()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 240);
  *(_QWORD *)(*v1 + 248) = v0;
  swift_task_dealloc(v3);
  if (v0)
    v4 = sub_1002B2654;
  else
    v4 = sub_1002B2368;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 216), *(_QWORD *)(v2 + 224));
}

uint64_t sub_1002B2368()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  id v8;
  uint64_t v9;
  _QWORD *v10;

  v1 = v0[13];
  v2 = v0[12];
  v4 = (void *)v0[4];
  v3 = v0[5];
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v1 + 16))(v3, v0[14], v2);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v1 + 56))(v3, 0, 1, v2);
  v5 = objc_msgSend(v4, "bc_isPresentedInCardViewController");
  v6 = objc_msgSend(v4, "presentingViewController");
  v7 = v6;
  if (v6)

  v8 = objc_allocWithZone((Class)type metadata accessor for NavigationContext(0));
  v9 = NavigationContext.init(isInCard:isInModal:)(v5, v7 != 0);
  v0[32] = v9;
  v10 = (_QWORD *)swift_task_alloc(async function pointer to PageControllerFactory.create<A>(intent:parentTracker:origin:navigationContext:shouldReportFigaro:hidesDefaultBackButton:navigationBarTitle:)[1]);
  v0[33] = v10;
  sub_1002B2BAC();
  *v10 = v0;
  v10[1] = sub_1002B248C;
  return PageControllerFactory.create<A>(intent:parentTracker:origin:navigationContext:shouldReportFigaro:hidesDefaultBackButton:navigationBarTitle:)(v0[21], v0[3], v0[5], v9, 0, 1, 0, 0);
}

uint64_t sub_1002B248C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)();

  v4 = *(_QWORD **)v2;
  v5 = *(_QWORD *)(*(_QWORD *)v2 + 264);
  *(_QWORD *)(*(_QWORD *)v2 + 272) = v1;
  swift_task_dealloc(v5);
  v6 = (void *)v4[32];
  v7 = v4[5];
  if (v1)
  {
    sub_100010960(v7, &qword_1009D76B0);

    v8 = v4[27];
    v9 = v4[28];
    v10 = sub_1002B275C;
  }
  else
  {
    v4[35] = a1;
    sub_100010960(v7, &qword_1009D76B0);

    v8 = v4[27];
    v9 = v4[28];
    v10 = sub_1002B2528;
  }
  return swift_task_switch(v10, v8, v9);
}

uint64_t sub_1002B2528()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v2 = *(_QWORD *)(v0 + 200);
  v1 = *(_QWORD *)(v0 + 208);
  v3 = *(_QWORD *)(v0 + 168);
  v14 = *(_QWORD *)(v0 + 176);
  v15 = *(_QWORD *)(v0 + 192);
  v11 = *(_QWORD *)(v0 + 160);
  v12 = *(_QWORD *)(v0 + 152);
  v13 = *(_QWORD *)(v0 + 184);
  v16 = *(_QWORD *)(v0 + 144);
  v17 = *(_QWORD *)(v0 + 136);
  v4 = *(_QWORD *)(v0 + 104);
  v5 = *(_QWORD *)(v0 + 112);
  v6 = *(_QWORD *)(v0 + 96);
  v7 = *(_QWORD *)(v0 + 56);
  v8 = *(_QWORD *)(v0 + 64);
  v9 = *(_QWORD *)(v0 + 48);
  v18 = *(_QWORD *)(v0 + 88);
  v19 = *(_QWORD *)(v0 + 40);
  swift_release(*(_QWORD *)(v0 + 232));
  swift_release(v1);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v8, v9);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v5, v6);
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v3, v12);
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v2, v14);
  swift_task_dealloc(v2);
  swift_task_dealloc(v15);
  swift_task_dealloc(v3);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v5);
  swift_task_dealloc(v18);
  swift_task_dealloc(v8);
  swift_task_dealloc(v19);
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 280));
}

uint64_t sub_1002B2654()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;

  v1 = *(_QWORD *)(v0 + 208);
  v19 = *(_QWORD *)(v0 + 200);
  v2 = *(_QWORD *)(v0 + 176);
  v3 = *(_QWORD *)(v0 + 184);
  v5 = *(_QWORD *)(v0 + 160);
  v4 = *(_QWORD *)(v0 + 168);
  v6 = *(_QWORD *)(v0 + 152);
  v7 = *(_QWORD *)(v0 + 104);
  v8 = *(_QWORD *)(v0 + 112);
  v9 = *(_QWORD *)(v0 + 96);
  swift_release(*(_QWORD *)(v0 + 232));
  swift_release(v1);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v8, v9);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v19, v2);
  v10 = *(_QWORD *)(v0 + 192);
  v11 = *(_QWORD *)(v0 + 168);
  v13 = *(_QWORD *)(v0 + 136);
  v12 = *(_QWORD *)(v0 + 144);
  v14 = *(_QWORD *)(v0 + 112);
  v15 = *(_QWORD *)(v0 + 88);
  v16 = *(_QWORD *)(v0 + 64);
  v17 = *(_QWORD *)(v0 + 40);
  swift_task_dealloc(*(_QWORD *)(v0 + 200));
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002B275C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v1 = *(_QWORD *)(v0 + 208);
  v21 = *(_QWORD *)(v0 + 176);
  v22 = *(_QWORD *)(v0 + 200);
  v2 = *(_QWORD *)(v0 + 160);
  v19 = *(_QWORD *)(v0 + 168);
  v20 = *(_QWORD *)(v0 + 184);
  v3 = *(_QWORD *)(v0 + 152);
  v4 = *(_QWORD *)(v0 + 104);
  v5 = *(_QWORD *)(v0 + 112);
  v6 = *(_QWORD *)(v0 + 96);
  v7 = *(_QWORD *)(v0 + 56);
  v8 = *(_QWORD *)(v0 + 64);
  v9 = *(_QWORD *)(v0 + 48);
  swift_release(*(_QWORD *)(v0 + 232));
  swift_release(v1);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v8, v9);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v5, v6);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v19, v3);
  (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v22, v21);
  v10 = *(_QWORD *)(v0 + 192);
  v11 = *(_QWORD *)(v0 + 168);
  v13 = *(_QWORD *)(v0 + 136);
  v12 = *(_QWORD *)(v0 + 144);
  v14 = *(_QWORD *)(v0 + 112);
  v15 = *(_QWORD *)(v0 + 88);
  v16 = *(_QWORD *)(v0 + 64);
  v17 = *(_QWORD *)(v0 + 40);
  swift_task_dealloc(*(_QWORD *)(v0 + 200));
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002B29BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  v5 = type metadata accessor for MainActor(0);
  v4[6] = static MainActor.shared.getter(v5);
  v6 = dispatch thunk of Actor.unownedExecutor.getter(v5, &protocol witness table for MainActor);
  return swift_task_switch(sub_1002B2A2C, v6, v7);
}

uint64_t sub_1002B2A2C()
{
  uint64_t *v0;
  void *v1;
  const void *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  id v6;
  id v7;
  id v8;
  uint64_t **v9;

  v1 = (void *)v0[5];
  v3 = (void *)v0[3];
  v2 = (const void *)v0[4];
  v4 = (void *)v0[2];
  swift_release(v0[6]);
  v0[7] = (uint64_t)_Block_copy(v2);
  v5 = dword_1009D76AC;
  v6 = v4;
  v7 = v3;
  v8 = v1;
  v9 = (uint64_t **)swift_task_alloc(v5);
  v0[8] = (uint64_t)v9;
  *v9 = v0;
  v9[1] = (uint64_t *)sub_1002B2AB0;
  return BKLibraryBookshelfCollectionViewController.createSeriesViewController(from:with:)(v0[2], v0[3]);
}

uint64_t sub_1002B2AB0(void *a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;
  uint64_t v9;
  void (**v10)(_QWORD, _QWORD, _QWORD);
  void *v11;

  v3 = v1;
  v5 = *(_QWORD *)(*v2 + 64);
  v6 = *(void **)(*v2 + 40);
  v8 = *(void **)(*v2 + 16);
  v7 = *(void **)(*v2 + 24);
  v9 = *v2;
  swift_task_dealloc(v5);

  v10 = *(void (***)(_QWORD, _QWORD, _QWORD))(v9 + 56);
  if (v3)
  {
    v11 = (void *)_convertErrorToNSError(_:)(v3);
    swift_errorRelease(v3);
    ((void (**)(_QWORD, _QWORD, void *))v10)[2](v10, 0, v11);

    _Block_release(v10);
  }
  else
  {
    ((void (**)(_QWORD, void *, _QWORD))v10)[2](v10, a1, 0);
    _Block_release(v10);

  }
  return (*(uint64_t (**)(void))(v9 + 8))();
}

uint64_t sub_1002B2B80()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_1002B2BA4()
{
  uint64_t v0;

  sub_1002B1AF4(v0);
}

unint64_t sub_1002B2BAC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009D76C0;
  if (!qword_1009D76C0)
  {
    v1 = type metadata accessor for SeriesRoomPageIntent(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for SeriesRoomPageIntent, v1);
    atomic_store(result, (unint64_t *)&qword_1009D76C0);
  }
  return result;
}

unint64_t sub_1002B2BF4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009D6DB0;
  if (!qword_1009D6DB0)
  {
    v1 = sub_100009E04(255, (unint64_t *)&qword_1009E3A00, BKLibraryAsset_ptr);
    result = swift_getWitnessTable(&protocol conformance descriptor for NSObject, v1);
    atomic_store(result, (unint64_t *)&qword_1009D6DB0);
  }
  return result;
}

uint64_t sub_1002B2C4C()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 32));
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1002B2C88()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v2 = v0[2];
  v3 = v0[3];
  v5 = v0[4];
  v4 = v0[5];
  v6 = (_QWORD *)swift_task_alloc(dword_1009D76D4);
  *(_QWORD *)(v1 + 16) = v6;
  *v6 = v1;
  v6[1] = sub_1001FC2C4;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1009D76D0 + dword_1009D76D0))(v2, v3, v5, v4);
}

uint64_t sub_1002B2D04()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int *v4;
  _QWORD *v5;

  v2 = v0[2];
  v3 = v0[3];
  v4 = (int *)v0[4];
  v5 = (_QWORD *)swift_task_alloc(dword_1009EFA14);
  *(_QWORD *)(v1 + 16) = v5;
  *v5 = v1;
  v5[1] = sub_1001FC2C4;
  return ((uint64_t (*)(uint64_t, uint64_t, int *))((char *)&dword_1009EFA10 + dword_1009EFA10))(v2, v3, v4);
}

uint64_t sub_1002B2D80()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

void sub_1002B2DAC(uint64_t a1)
{
  uint64_t v1;

  sub_1002B0B70(a1, v1);
}

uint64_t sub_1002B2DB4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 32, 7);
}

void sub_1002B2DE0(uint64_t a1)
{
  uint64_t v1;

  sub_1002B0C6C(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24));
}

void sub_1002B2DE8(uint64_t a1)
{
  uint64_t v1;

  sub_1002B0BCC(a1, v1, (SEL *)&selRef_showGrid);
}

void sub_1002B2E08(uint64_t a1)
{
  uint64_t v1;

  sub_1002B0BCC(a1, v1, (SEL *)&selRef_showList);
}

void sub_1002B2E28(uint64_t a1)
{
  uint64_t v1;

  sub_1002B0E80(a1, v1, sub_1002B0ED4);
}

void sub_1002B2E48(uint64_t a1)
{
  uint64_t v1;

  sub_1002B0E80(a1, v1, sub_1002B0D90);
}

uint64_t sub_1002B2E68(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  v4[0] = &unk_100717420;
  result = swift_checkMetadataState(319, *(_QWORD *)(a1 + 16));
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(result - 8) + 64;
    swift_initStructMetadata(a1, 0, 2, v4, a1 + 32);
    return 0;
  }
  return result;
}

uint64_t *sub_1002B2EE0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v10;
  uint64_t v11;

  v4 = a1;
  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_DWORD *)(v6 + 80);
  if (v7 > 7
    || (*(_DWORD *)(v6 + 80) & 0x100000) != 0
    || ((v7 + 16) & (unint64_t)~v7) + *(_QWORD *)(v6 + 64) > 0x18)
  {
    v10 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v10 + ((v7 & 0xF8 ^ 0x1F8) & (v7 + 16)));
    swift_retain(v10);
  }
  else
  {
    if ((unint64_t)*a2 < 0xFFFFFFFF)
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
    }
    else
    {
      v11 = a2[1];
      *v4 = *a2;
      v4[1] = v11;
      swift_retain(v11);
    }
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 16))(((unint64_t)v4 + v7 + 16) & ~v7, ((unint64_t)a2 + v7 + 16) & ~v7, v5);
  }
  return v4;
}

uint64_t sub_1002B2FB8(_QWORD *a1, uint64_t a2)
{
  if (*a1 >= 0xFFFFFFFFuLL)
    swift_release(a1[1]);
  return (*(uint64_t (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))(((unint64_t)a1 + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80));
}

uint64_t sub_1002B300C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  if (*(_QWORD *)a2 < 0xFFFFFFFFuLL)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    v6 = *(_QWORD *)(a2 + 8);
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v6;
    swift_retain(v6);
  }
  v7 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 16))((*(unsigned __int8 *)(v7 + 80) + 16 + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(unsigned __int8 *)(v7 + 80) + 16 + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

unint64_t *sub_1002B308C(unint64_t *a1, unint64_t *a2, uint64_t a3)
{
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;

  v6 = *a2;
  if (*a1 < 0xFFFFFFFF)
  {
    if (v6 >= 0xFFFFFFFF)
    {
      v9 = a2[1];
      *a1 = v6;
      a1[1] = v9;
      swift_retain(v9);
      goto LABEL_8;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    goto LABEL_8;
  }
  if (v6 < 0xFFFFFFFF)
  {
    swift_release(a1[1]);
    goto LABEL_7;
  }
  v7 = a2[1];
  v8 = a1[1];
  *a1 = v6;
  a1[1] = v7;
  swift_retain(v7);
  swift_release(v8);
LABEL_8:
  v10 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v10 + 24))(((unint64_t)a1 + *(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
  return a1;
}

uint64_t sub_1002B314C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;

  if (*(_QWORD *)a2 < 0xFFFFFFFFuLL)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    v4 = *(_QWORD *)(a2 + 8);
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v4;
  }
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v5 + 32))((*(unsigned __int8 *)(v5 + 80) + 16 + a1) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80), (*(unsigned __int8 *)(v5 + 80) + 16 + a2) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
  return a1;
}

unint64_t *sub_1002B31B8(unint64_t *a1, unint64_t *a2, uint64_t a3)
{
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;

  v6 = *a2;
  if (*a1 < 0xFFFFFFFF)
  {
    if (v6 >= 0xFFFFFFFF)
    {
      v9 = a2[1];
      *a1 = v6;
      a1[1] = v9;
      goto LABEL_8;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    goto LABEL_8;
  }
  if (v6 < 0xFFFFFFFF)
  {
    swift_release(a1[1]);
    goto LABEL_7;
  }
  v7 = a2[1];
  v8 = a1[1];
  *a1 = v6;
  a1[1] = v7;
  swift_release(v8);
LABEL_8:
  v10 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v10 + 40))(((unint64_t)a1 + *(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
  return a1;
}

uint64_t sub_1002B326C(_QWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  char v10;
  int v11;
  unsigned int v13;
  int v14;
  uint64_t v15;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0x7FFFFFFE)
    v6 = 2147483646;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(unsigned __int8 *)(v4 + 80);
  v8 = a2 - v6;
  if (a2 <= v6)
    goto LABEL_22;
  v9 = ((v7 + 16) & ~v7) + *(_QWORD *)(v4 + 64);
  v10 = 8 * v9;
  if (v9 <= 3)
  {
    v13 = ((v8 + ~(-1 << v10)) >> v10) + 1;
    if (HIWORD(v13))
    {
      v11 = *(_DWORD *)((char *)a1 + v9);
      if (!v11)
        goto LABEL_22;
      goto LABEL_15;
    }
    if (v13 > 0xFF)
    {
      v11 = *(unsigned __int16 *)((char *)a1 + v9);
      if (!*(_WORD *)((char *)a1 + v9))
        goto LABEL_22;
      goto LABEL_15;
    }
    if (v13 < 2)
    {
LABEL_22:
      if (v5 > 0x7FFFFFFE)
        return (*(uint64_t (**)(unint64_t))(v4 + 48))(((unint64_t)a1 + v7 + 16) & ~v7);
      v15 = *a1;
      if (*a1 >= 0xFFFFFFFFuLL)
        LODWORD(v15) = -1;
      if ((v15 + 1) >= 2)
        return v15;
      else
        return 0;
    }
  }
  v11 = *((unsigned __int8 *)a1 + v9);
  if (!*((_BYTE *)a1 + v9))
    goto LABEL_22;
LABEL_15:
  v14 = (v11 - 1) << v10;
  if (v9 > 3)
    v14 = 0;
  if (!(_DWORD)v9)
    return v6 + v14 + 1;
  if (v9 > 3)
    LODWORD(v9) = 4;
  return ((uint64_t (*)(void))((char *)&loc_1002B3340 + 4 * byte_1007173F8[(v9 - 1)]))();
}

void sub_1002B33C0(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  size_t v7;
  unsigned int v8;
  int v9;
  unsigned int v10;
  int v11;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFEu)
    v6 = 2147483646;
  else
    v6 = *(_DWORD *)(v5 + 84);
  v7 = ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))
     + *(_QWORD *)(v5 + 64);
  if (a3 > v6)
  {
    if (v7 <= 3)
    {
      v10 = ((a3 - v6 + ~(-1 << (8 * v7))) >> (8 * v7)) + 1;
      if (HIWORD(v10))
      {
        v8 = &dword_100000004;
      }
      else if (v10 >= 0x100)
      {
        v8 = 2;
      }
      else
      {
        v8 = v10 > 1;
      }
    }
    else
    {
      v8 = &_mh_execute_header.magic + 1;
    }
  }
  else
  {
    v8 = 0;
  }
  if (v6 < a2)
  {
    v9 = ~v6 + a2;
    if (v7 < 4)
    {
      if ((_DWORD)v7)
      {
        v11 = v9 & ~(-1 << (8 * v7));
        bzero(a1, v7);
        if ((_DWORD)v7 == 3)
        {
          *a1 = v11;
          *((_BYTE *)a1 + 2) = BYTE2(v11);
        }
        else if ((_DWORD)v7 == 2)
        {
          *a1 = v11;
        }
        else
        {
          *(_BYTE *)a1 = v11;
        }
      }
    }
    else
    {
      bzero(a1, v7);
      *(_DWORD *)a1 = v9;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X13 }
}

uint64_t type metadata accessor for PopoverListItem(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10000D3D4(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for PopoverListItem);
}

uint64_t sub_1002B35D8(uint64_t a1, uint64_t a2)
{
  __int128 v3;

  v3 = *(_OWORD *)(a2 + 16);
  return swift_getOpaqueTypeConformance2(&v3, &unk_10086A2A0, 1);
}

uint64_t sub_1002B360C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __n128 v35;
  unint64_t v36;
  uint64_t v37;
  void (*v38)(uint64_t, uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t WitnessTable;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t *v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  unint64_t v58;
  _QWORD v59[6];

  v3 = v2;
  v51 = a2;
  v43 = *(_QWORD *)(a1 + 16);
  v5 = type metadata accessor for ModifiedContent(255, v43, &type metadata for _PaddingLayout);
  v41 = *(_QWORD *)(a1 + 24);
  v59[3] = v41;
  v59[4] = &protocol witness table for _PaddingLayout;
  v6 = v5;
  v44 = v5;
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v5);
  v8 = type metadata accessor for PopoverListHighlight(0, v6, WitnessTable, v7);
  v46 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v10 = (char *)&v40 - v9;
  v11 = type metadata accessor for ModifiedContent(0, v8, &type metadata for _AlignmentWritingModifier);
  v47 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v13 = (char *)&v40 - v12;
  v14 = type metadata accessor for ModifiedContent(0, v11, &type metadata for _AlignmentWritingModifier);
  v49 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v16 = (char *)&v40 - v15;
  v17 = sub_100030B74(&qword_1009D77C8);
  v18 = type metadata accessor for ModifiedContent(0, v14, v17);
  v50 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin(v18);
  v45 = (char *)&v40 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v48 = (uint64_t)&v40 - v21;
  v22 = *v3;
  v23 = v3[1];
  v52 = v43;
  v53 = v41;
  v54 = v3;
  sub_10002ACF0(v22, v23);
  v24 = sub_1004DCAE0(v22, v23, (uint64_t (*)(uint64_t))sub_1002B3BC0, v44, WitnessTable, (uint64_t)v10, 7.0, 1.0);
  v25 = static HorizontalAlignment.listRowSeparatorLeading.getter(v24);
  v26 = swift_getWitnessTable(&unk_1007299D8, v8);
  View.alignmentGuide(_:computeValue:)(v25, sub_1002B3B28, 0, v8, v26);
  v27 = (*(uint64_t (**)(char *, uint64_t))(v46 + 8))(v10, v8);
  v28 = static HorizontalAlignment.listRowSeparatorTrailing.getter(v27);
  v29 = sub_1002B3BCC();
  v59[1] = v26;
  v59[2] = v29;
  v30 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v11);
  View.alignmentGuide(_:computeValue:)(v28, sub_1002B3B4C, 0, v11, v30);
  v31 = (*(uint64_t (**)(char *, uint64_t))(v47 + 8))(v13, v11);
  v32 = static Color.clear.getter(v31);
  v58 = v29;
  v59[0] = v32;
  v57 = v30;
  v33 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v14);
  v34 = (uint64_t)v45;
  View.listRowBackground<A>(_:)(v59, v14, &type metadata for Color, v33, &protocol witness table for Color);
  v35 = swift_release(v32);
  (*(void (**)(char *, uint64_t, __n128))(v49 + 8))(v16, v14, v35);
  v36 = sub_1002B3C10();
  v55 = v33;
  v56 = v36;
  swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v18);
  v37 = v48;
  sub_100344038(v34, v18, v48);
  v38 = *(void (**)(uint64_t, uint64_t))(v50 + 8);
  v38(v34, v18);
  sub_100341C00(v37, v18, v51);
  return ((uint64_t (*)(uint64_t, uint64_t))v38)(v37, v18);
}

uint64_t sub_1002B39E0@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t);
  _QWORD v18[2];

  v6 = type metadata accessor for ModifiedContent(0, a1, &type metadata for _PaddingLayout);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)v18 - v11;
  v14 = type metadata accessor for PopoverListItem(0, a1, a2, v13);
  v15 = static Edge.Set.vertical.getter(v14);
  View.padding(_:_:)(v15, 0x4020000000000000, 0, a1, a2);
  v18[0] = a2;
  v18[1] = &protocol witness table for _PaddingLayout;
  swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v6);
  sub_100344038((uint64_t)v9, v6, (uint64_t)v12);
  v16 = *(void (**)(char *, uint64_t))(v7 + 8);
  v16(v9, v6);
  sub_100341C00((uint64_t)v12, v6, a3);
  return ((uint64_t (*)(char *, uint64_t))v16)(v12, v6);
}

uint64_t sub_1002B3B28()
{
  uint64_t v0;

  v0 = static HorizontalAlignment.leading.getter();
  return ViewDimensions.subscript.getter(v0);
}

uint64_t sub_1002B3B4C()
{
  uint64_t v0;

  v0 = static HorizontalAlignment.trailing.getter();
  return ViewDimensions.subscript.getter(v0);
}

uint64_t sub_1002B3B70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(void)@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, _QWORD *a7@<X8>)
{
  *a7 = a1;
  a7[1] = a2;
  type metadata accessor for PopoverListItem(0, a5, a6, a4);
  return a3();
}

uint64_t sub_1002B3BC0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1002B39E0(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

unint64_t sub_1002B3BCC()
{
  unint64_t result;

  result = qword_1009D77D0;
  if (!qword_1009D77D0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for _AlignmentWritingModifier, &type metadata for _AlignmentWritingModifier);
    atomic_store(result, (unint64_t *)&qword_1009D77D0);
  }
  return result;
}

unint64_t sub_1002B3C10()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009EB940;
  if (!qword_1009EB940)
  {
    v1 = sub_100030B74(&qword_1009D77C8);
    result = swift_getWitnessTable(&protocol conformance descriptor for _TraitWritingModifier<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1009EB940);
  }
  return result;
}

uint64_t sub_1002B3C5C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t WitnessTable;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = type metadata accessor for ModifiedContent(255, *a1, &type metadata for _PaddingLayout);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
  v4 = type metadata accessor for PopoverListHighlight(255, v1, WitnessTable, v3);
  v5 = type metadata accessor for ModifiedContent(255, v4, &type metadata for _AlignmentWritingModifier);
  v6 = type metadata accessor for ModifiedContent(255, v5, &type metadata for _AlignmentWritingModifier);
  v7 = sub_100030B74(&qword_1009D77C8);
  v8 = type metadata accessor for ModifiedContent(255, v6, v7);
  swift_getWitnessTable(&unk_1007299D8, v4);
  sub_1002B3BCC();
  swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v5);
  swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v6);
  sub_1002B3C10();
  return swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v8);
}

ValueMetadata *type metadata accessor for PopoverHeader()
{
  return &type metadata for PopoverHeader;
}

uint64_t sub_1002B3D9C(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_10086A2F0, 1);
}

void sub_1002B3DAC(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unsigned int v38;
  unsigned int v39;
  uint64_t v40;
  int v41;
  int v42;
  double v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _BYTE *v50;
  uint64_t v51;
  void (*v52)(_BYTE *, _BYTE *, uint64_t);
  _BYTE *v53;
  char v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  void (*v58)(_BYTE *, uint64_t, __n128);
  __n128 v59;
  _BYTE v60[12];
  int v61;
  uint64_t v62;
  _BYTE *v63;
  _BYTE *v64;
  uint64_t v65;
  uint64_t v66;
  char v67;
  _QWORD v68[2];

  v6 = type metadata accessor for Divider(0);
  v7 = *(_QWORD *)(v6 - 8);
  v65 = v6;
  v66 = v7;
  __chkstk_darwin(v6);
  v64 = &v60[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v9);
  v63 = &v60[-v10];
  v68[0] = a1;
  v68[1] = a2;
  v11 = sub_1001F2108();
  v12 = swift_bridgeObjectRetain(a2);
  v13 = Text.init<A>(_:)(v68, &type metadata for String, v11, v12);
  v15 = v14;
  v17 = v16;
  v19 = v18 & 1;
  v20 = static Font.body.getter();
  static Font.Weight.medium.getter(v20);
  v21 = Font.weight(_:)(v20);
  swift_release(v20);
  v22 = Text.font(_:)(v21, v13, v15, v19, v17);
  v24 = v23;
  v26 = v25;
  v28 = v27;
  swift_release(v21);
  v29 = v26 & 1;
  sub_1001F5B28(v13, v15, v19);
  swift_bridgeObjectRelease(v17);
  v30 = _s5Books11ChromeStyleC14secondaryColor7SwiftUI0E0Vvg_0();
  v31 = Text.foregroundColor(_:)(v30, v22, v24, v29, v28);
  v33 = v32;
  v61 = v34;
  v62 = v35;
  swift_release(v30);
  sub_1001F5B28(v22, v24, v29);
  swift_bridgeObjectRelease(v28);
  v37 = static Edge.Set.top.getter(v36);
  v38 = v37;
  v39 = static Edge.Set.bottom.getter(v37);
  v40 = Edge.Set.init(rawValue:)(0);
  v41 = Edge.Set.init(rawValue:)(v40);
  if (Edge.Set.init(rawValue:)(v41 & v38) != v38)
    v40 = Edge.Set.init(rawValue:)(v40 | v38);
  v42 = Edge.Set.init(rawValue:)(v40);
  if (Edge.Set.init(rawValue:)(v42 & v39) != v39)
    LOBYTE(v40) = Edge.Set.init(rawValue:)(v40 | v39);
  v43 = EdgeInsets.init(_all:)(8.0);
  v45 = v44;
  v47 = v46;
  v49 = v48;
  v50 = v63;
  Divider.init()();
  LOBYTE(v68[0]) = v61 & 1;
  v67 = 0;
  v51 = v65;
  v52 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v66 + 16);
  v53 = v64;
  v52(v64, v50, v65);
  v54 = v68[0];
  v55 = v67;
  *(_QWORD *)a3 = v31;
  *(_QWORD *)(a3 + 8) = v33;
  *(_BYTE *)(a3 + 16) = v54;
  v56 = v62;
  *(_QWORD *)(a3 + 24) = v62;
  *(_BYTE *)(a3 + 32) = v40;
  *(double *)(a3 + 40) = v43;
  *(_QWORD *)(a3 + 48) = v45;
  *(_QWORD *)(a3 + 56) = v47;
  *(_QWORD *)(a3 + 64) = v49;
  *(_BYTE *)(a3 + 72) = v55;
  v57 = sub_10004CFD4(&qword_1009D77E0);
  v52((_BYTE *)(a3 + *(int *)(v57 + 48)), v53, v51);
  sub_1001F596C(v31, v33, v54);
  v58 = *(void (**)(_BYTE *, uint64_t, __n128))(v66 + 8);
  v59 = swift_bridgeObjectRetain(v56);
  v58(v50, v51, v59);
  ((void (*)(_BYTE *, uint64_t))v58)(v53, v51);
  sub_1001F5B28(v31, v33, v68[0]);
  swift_bridgeObjectRelease(v56);
}

void sub_1002B40A4(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v5 = *v2;
  v4 = v2[1];
  *(_QWORD *)a2 = static HorizontalAlignment.center.getter(a1);
  *(_QWORD *)(a2 + 8) = 0;
  *(_BYTE *)(a2 + 16) = 0;
  v6 = sub_10004CFD4(&qword_1009D77D8);
  sub_1002B3DAC(v5, v4, a2 + *(int *)(v6 + 44));
}

unint64_t sub_1002B40FC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009D77E8;
  if (!qword_1009D77E8)
  {
    v1 = sub_100030B74(&qword_1009D77F0);
    result = swift_getWitnessTable(&protocol conformance descriptor for VStack<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1009D77E8);
  }
  return result;
}

uint64_t sub_1002B4148(char a1)
{
  uint64_t v1;
  char v3;

  v3 = a1;
  v1 = sub_10004CFD4(&qword_1009D2A50);
  return CheckedContinuation.resume(returning:)(&v3, v1);
}

uint64_t sub_1002B4188(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  return a2(0);
}

uint64_t sub_1002B41AC(uint64_t a1, uint64_t (*a2)(uint64_t))
{
  return a2(1);
}

id sub_1002B41FC()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BookReaderToolbarPresenter();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for BookReaderToolbarPresenter()
{
  return objc_opt_self(_TtC5Books26BookReaderToolbarPresenter);
}

void *sub_1002B424C()
{
  uint64_t v0;
  void *v1;
  Class isa;
  uint64_t v3;
  id v4;
  id v5;
  void *v6;
  uint64_t v7;
  id v9;

  v1 = (void *)objc_opt_self(AMSMescal);
  isa = Data._bridgeToObjectiveC()().super.isa;
  v3 = *(_QWORD *)(v0 + 16);
  v9 = 0;
  v4 = objc_msgSend(v1, "signatureFromData:type:bag:error:", isa, 1, v3, &v9);

  v5 = v9;
  if (v4)
  {
    v6 = (void *)static Data._unconditionallyBridgeFromObjectiveC(_:)(v4);

  }
  else
  {
    v6 = v5;
    _convertNSErrorToError(_:)(v5);

    swift_willThrow(v7);
  }
  return v6;
}

void *sub_1002B4350()
{
  return sub_1002B424C();
}

Swift::Bool __swiftcall SplitViewContentHostingController.select(identifier:isUserAction:editNameOnSelect:)(Swift::String identifier, Swift::Bool isUserAction, Swift::Bool editNameOnSelect)
{
  uint64_t v3;
  uint64_t v4;
  void *object;
  uint64_t countAndFlagsBits;
  uint64_t v9;
  void *v10;
  void *v11;
  id v12;
  id v13;
  id v14;
  uint64_t KeyPath;
  uint64_t v16;
  void *v17;
  void *v18;
  uint64_t v19;
  char v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  id v26;
  void *v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  void *v33;
  id v34;
  id v35;
  id v36;
  unsigned int v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  NSObject *v42;
  os_log_type_t v43;
  uint8_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  objc_super v51;
  uint64_t v52;
  uint64_t v53[2];
  _QWORD v54[3];

  v4 = v3;
  object = identifier._object;
  countAndFlagsBits = identifier._countAndFlagsBits;
  v9 = sub_100009E04(0, (unint64_t *)&qword_1009CEC30, OS_dispatch_queue_ptr);
  v10 = (void *)static OS_dispatch_queue.main.getter(v9);
  v11 = &_dispatch_main_q;
  v12 = &_dispatch_main_q;
  v13 = v10;
  v14 = &_dispatch_main_q;
  if (v13 == &_dispatch_main_q)
  {
    +[NSThread isMainThread](NSThread, "isMainThread");
    v11 = v13;
  }

  KeyPath = swift_getKeyPath(&unk_100717630);
  v16 = swift_getKeyPath(&unk_100717658);
  static Published.subscript.getter(v54, v4, KeyPath, v16);
  swift_release(KeyPath);
  swift_release(v16);
  v17 = (void *)v54[0];
  if (v54[0])
  {
    v19 = *(_QWORD *)(v54[0] + OBJC_IVAR___BKRootBarItem_identifier);
    v18 = *(void **)(v54[0] + OBJC_IVAR___BKRootBarItem_identifier + 8);
    swift_bridgeObjectRetain(v18);

    if (v19 == countAndFlagsBits && v18 == object)
    {
      swift_bridgeObjectRelease(object);
    }
    else
    {
      v21 = _stringCompareWithSmolCheck(_:_:expecting:)(v19, v18, countAndFlagsBits, object, 0);
      swift_bridgeObjectRelease(v18);
      if ((v21 & 1) == 0)
        goto LABEL_9;
    }
    if (!isUserAction || sub_1002B4C74())
      goto LABEL_33;
    v51.receiver = *(id *)(v4 + OBJC_IVAR___BKSplitViewContentHostingController_viewController);
    v51.super_class = (Class)type metadata accessor for MainContentViewController();
    v26 = objc_msgSendSuper2(&v51, "contentNavigationController");
    if (!v26)
      return (char)v26;
    v27 = v26;
    v28 = objc_msgSend(v26, "viewControllers");
    v29 = sub_100009E04(0, (unint64_t *)&qword_1009D8D70, UIViewController_ptr);
    v30 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v28, v29);

    if ((unint64_t)v30 >> 62)
    {
      if (v30 < 0)
        v49 = v30;
      else
        v49 = v30 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v30);
      v31 = _CocoaArrayWrapper.endIndex.getter(v49);
      swift_bridgeObjectRelease(v30);
    }
    else
    {
      v31 = *(_QWORD *)((v30 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease(v30);
    if (v31 == 1)
    {
      v32 = objc_msgSend(v27, "topViewController");
      if (!v32)
        goto LABEL_30;
      v33 = v32;
      v34 = objc_msgSend(v32, "contentScrollView");

      if (!v34)
        goto LABEL_30;
      objc_msgSend(v34, "_scrollToTopIfPossible:", 1);
    }
    else
    {
      v34 = objc_msgSend(v27, "popToRootViewControllerAnimated:", 1);
    }

LABEL_30:
    if (UIAccessibilityIsVoiceOverRunning())
    {
      v46 = swift_getKeyPath(&unk_100717630);
      v47 = swift_getKeyPath(&unk_100717658);
      static Published.subscript.getter(v54, v4, v46, v47);
      swift_release(v46);
      swift_release(v47);
      v48 = (void *)v54[0];
      PassthroughSubject.send(_:)(v54);

    }
    else
    {

    }
    goto LABEL_33;
  }
LABEL_9:
  v22 = (uint64_t *)(v4 + OBJC_IVAR___BKSplitViewContentHostingController_standardItems);
  swift_beginAccess(v4 + OBJC_IVAR___BKSplitViewContentHostingController_standardItems, v54, 0, 0);
  v23 = *v22;
  swift_bridgeObjectRetain(object);
  swift_bridgeObjectRetain(v23);
  v25 = sub_1002C5E9C(v24, countAndFlagsBits, (uint64_t)object);
  swift_bridgeObjectRelease(v23);
  swift_bridgeObjectRelease(object);
  if (!v25)
  {
    v35 = objc_allocWithZone((Class)type metadata accessor for RootBarItem());
    swift_bridgeObjectRetain(object);
    v36 = RootBarItem.init(identifier:isPlaceholder:url:titleOverride:iconNameOverride:selectedIconNameOverride:countryCode:editNameOnSelect:)(countAndFlagsBits, (unint64_t)object, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
    v37 = objc_msgSend(v36, "isLibraryCollection");

    if (v37)
      goto LABEL_22;
    if (qword_1009CE408 != -1)
      swift_once(&qword_1009CE408, sub_10006B6D0);
    v40 = type metadata accessor for Logger(0);
    sub_100048F64(v40, (uint64_t)qword_1009E1C98);
    v41 = swift_bridgeObjectRetain_n(object, 2);
    v42 = Logger.logObject.getter(v41);
    v43 = static os_log_type_t.error.getter(v42);
    if (os_log_type_enabled(v42, v43))
    {
      v44 = (uint8_t *)swift_slowAlloc(12, -1);
      v45 = swift_slowAlloc(32, -1);
      v53[0] = v45;
      *(_DWORD *)v44 = 136315138;
      swift_bridgeObjectRetain(object);
      v52 = sub_100040F58(countAndFlagsBits, (unint64_t)object, v53);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v52, v53, v44 + 4, v44 + 12);
      swift_bridgeObjectRelease_n(object, 3);
      _os_log_impl((void *)&_mh_execute_header, v42, v43, "Identifier %s isn't valid under current storefront, skip selection.", v44, 0xCu);
      swift_arrayDestroy(v45, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v45, -1, -1);
      swift_slowDealloc(v44, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n(object, 2);
    }
LABEL_33:
    LOBYTE(v26) = 0;
    return (char)v26;
  }

LABEL_22:
  v38 = (uint64_t *)(v4 + OBJC_IVAR___BKSplitViewContentHostingController_selectedIdentifier);
  v39 = *(_QWORD *)(v4 + OBJC_IVAR___BKSplitViewContentHostingController_selectedIdentifier + 8);
  *v38 = countAndFlagsBits;
  v38[1] = (uint64_t)object;
  swift_bridgeObjectRetain(object);
  swift_bridgeObjectRelease(v39);
  sub_1002B62E8(isUserAction, editNameOnSelect, 0);
  LOBYTE(v26) = 1;
  return (char)v26;
}

Swift::Bool __swiftcall SplitViewContentHostingController.hasStandardItem(withIdentifier:)(Swift::String withIdentifier)
{
  uint64_t v1;
  uint64_t v2;
  void *object;
  uint64_t countAndFlagsBits;
  uint64_t v5;
  void *v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  _BYTE v16[24];

  v2 = v1;
  object = withIdentifier._object;
  countAndFlagsBits = withIdentifier._countAndFlagsBits;
  v5 = sub_100009E04(0, (unint64_t *)&qword_1009CEC30, OS_dispatch_queue_ptr);
  v6 = (void *)static OS_dispatch_queue.main.getter(v5);
  v7 = &_dispatch_main_q;
  v8 = &_dispatch_main_q;
  v9 = v6;
  v10 = &_dispatch_main_q;
  if (v9 == &_dispatch_main_q)
  {
    +[NSThread isMainThread](NSThread, "isMainThread");
    v7 = v9;
  }

  v11 = (uint64_t *)(v2 + OBJC_IVAR___BKSplitViewContentHostingController_standardItems);
  swift_beginAccess(v2 + OBJC_IVAR___BKSplitViewContentHostingController_standardItems, v16, 0, 0);
  v12 = *v11;
  swift_bridgeObjectRetain(object);
  swift_bridgeObjectRetain(v12);
  v14 = sub_1002C5E9C(v13, countAndFlagsBits, (uint64_t)object);
  swift_bridgeObjectRelease(v12);
  swift_bridgeObjectRelease(object);
  if (v14)

  return v14 != 0;
}

UINavigationController_optional __swiftcall SplitViewContentHostingController.navigationController(forIdentifier:)(Swift::String forIdentifier)
{
  uint64_t v1;
  uint64_t v2;
  void *object;
  uint64_t countAndFlagsBits;
  uint64_t v5;
  void *v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  uint64_t *v11;
  Swift::Bool v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  void *v16;
  id v17;
  objc_class *v18;
  _BYTE v19[24];
  UINavigationController_optional result;

  v2 = v1;
  object = forIdentifier._object;
  countAndFlagsBits = forIdentifier._countAndFlagsBits;
  v5 = sub_100009E04(0, (unint64_t *)&qword_1009CEC30, OS_dispatch_queue_ptr);
  v6 = (void *)static OS_dispatch_queue.main.getter(v5);
  v7 = &_dispatch_main_q;
  v8 = &_dispatch_main_q;
  v9 = v6;
  v10 = &_dispatch_main_q;
  if (v9 == &_dispatch_main_q)
  {
    +[NSThread isMainThread](NSThread, "isMainThread");
    v7 = v9;
  }

  v11 = (uint64_t *)(v2 + OBJC_IVAR___BKSplitViewContentHostingController_cachedControllers);
  swift_beginAccess(v2 + OBJC_IVAR___BKSplitViewContentHostingController_cachedControllers, v19, 0, 0);
  v13 = *v11;
  if (*(_QWORD *)(v13 + 16))
  {
    swift_bridgeObjectRetain(object);
    swift_bridgeObjectRetain(v13);
    v14 = sub_10004CE80(countAndFlagsBits, (uint64_t)object);
    if ((v15 & 1) != 0)
    {
      v16 = *(void **)(*(_QWORD *)(v13 + 56) + 8 * v14);
      v17 = v16;
    }
    else
    {
      v16 = 0;
    }
    swift_bridgeObjectRelease(object);
    swift_bridgeObjectRelease(v13);
  }
  else
  {
    v16 = 0;
  }
  v18 = (objc_class *)v16;
  result.value.super.super.super.isa = v18;
  result.is_nil = v12;
  return result;
}

UIViewController_optional __swiftcall SplitViewContentHostingController.topViewController(forIdentifier:)(Swift::String forIdentifier)
{
  uint64_t v1;
  uint64_t v2;
  void *object;
  uint64_t countAndFlagsBits;
  uint64_t v5;
  void *v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  uint64_t *v11;
  Swift::Bool v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  id v16;
  objc_class *v17;
  objc_class *v18;
  _BYTE v19[24];
  UIViewController_optional result;

  v2 = v1;
  object = forIdentifier._object;
  countAndFlagsBits = forIdentifier._countAndFlagsBits;
  v5 = sub_100009E04(0, (unint64_t *)&qword_1009CEC30, OS_dispatch_queue_ptr);
  v6 = (void *)static OS_dispatch_queue.main.getter(v5);
  v7 = &_dispatch_main_q;
  v8 = &_dispatch_main_q;
  v9 = v6;
  v10 = &_dispatch_main_q;
  if (v9 == &_dispatch_main_q)
  {
    +[NSThread isMainThread](NSThread, "isMainThread");
    v7 = v9;
  }

  v11 = (uint64_t *)(v2 + OBJC_IVAR___BKSplitViewContentHostingController_cachedControllers);
  swift_beginAccess(v2 + OBJC_IVAR___BKSplitViewContentHostingController_cachedControllers, v19, 0, 0);
  v13 = *v11;
  if (!*(_QWORD *)(v13 + 16))
    goto LABEL_7;
  swift_bridgeObjectRetain(object);
  swift_bridgeObjectRetain(v13);
  v14 = sub_10004CE80(countAndFlagsBits, (uint64_t)object);
  if ((v15 & 1) == 0)
  {
    swift_bridgeObjectRelease(object);
    swift_bridgeObjectRelease(v13);
LABEL_7:
    v17 = 0;
    goto LABEL_8;
  }
  v16 = *(id *)(*(_QWORD *)(v13 + 56) + 8 * v14);
  swift_bridgeObjectRelease(object);
  v17 = (objc_class *)objc_msgSend(v16, "topViewController", swift_bridgeObjectRelease(v13).n128_f64[0]);

LABEL_8:
  v18 = v17;
  result.value.super.super.isa = v18;
  result.is_nil = v12;
  return result;
}

BOOL sub_1002B4C74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v20;
  uint64_t v21;
  _QWORD aBlock[5];
  uint64_t v23;

  v0 = type metadata accessor for DispatchWorkItemFlags(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for DispatchQoS(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100009E04(0, (unint64_t *)&unk_1009E8A70, BCCardStackViewController_ptr);
  v9 = (void *)UIViewController.firstVisibleChildViewController<A>(of:includePresented:)(v8, 1, v8);
  if (v9)
  {
    v10 = sub_100009E04(0, (unint64_t *)&qword_1009CEC30, OS_dispatch_queue_ptr);
    v11 = static OS_dispatch_queue.main.getter(v10);
    v21 = v1;
    v12 = (void *)v11;
    v13 = swift_allocObject(&unk_1008F9C28, 24, 7);
    swift_unknownObjectWeakInit(v13 + 16, v9);
    aBlock[4] = sub_1002C8020;
    v23 = v13;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1000147F0;
    aBlock[3] = &unk_1008F9C40;
    v14 = _Block_copy(aBlock);
    v15 = swift_release(v23);
    static DispatchQoS.unspecified.getter(v15);
    aBlock[0] = _swiftEmptyArrayStorage;
    v16 = sub_100008DB0((unint64_t *)&qword_1009D48E0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v17 = sub_10004CFD4((uint64_t *)&unk_1009DB460);
    v18 = sub_100065324();
    dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v17, v18, v0, v16);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v7, v3, v14);
    _Block_release(v14);

    (*(void (**)(char *, uint64_t))(v21 + 8))(v3, v0);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  return v9 != 0;
}

uint64_t sub_1002B4EB0(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  _BYTE v6[24];

  v2 = *a1;
  v3 = (uint64_t *)(*a2 + OBJC_IVAR___BKSplitViewContentHostingController_standardItems);
  swift_beginAccess(v3, v6, 1, 0);
  v4 = *v3;
  *v3 = v2;
  swift_bridgeObjectRetain(v2);
  return swift_bridgeObjectRelease(v4);
}

uint64_t SplitViewContentHostingController.standardItems.getter()
{
  uint64_t v0;
  _QWORD *v1;
  _BYTE v3[24];

  v1 = (_QWORD *)(v0 + OBJC_IVAR___BKSplitViewContentHostingController_standardItems);
  swift_beginAccess(v0 + OBJC_IVAR___BKSplitViewContentHostingController_standardItems, v3, 0, 0);
  return swift_bridgeObjectRetain(*v1);
}

uint64_t property wrapper backing initializer of SplitViewContentHostingController.selectedItem(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = a1;
  v1 = sub_10004CFD4((uint64_t *)&unk_1009D7930);
  return Published.init(initialValue:)(&v3, v1);
}

uint64_t SplitViewContentHostingController.selectedItem.getter()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_100717630);
  v2 = swift_getKeyPath(&unk_100717658);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(v2);
  swift_release(KeyPath);
  return v4;
}

uint64_t sub_1002B5014@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_100717630);
  v5 = swift_getKeyPath(&unk_100717658);
  static Published.subscript.getter(&v7, v3, KeyPath, v5);
  swift_release(v5);
  result = swift_release(KeyPath);
  *a2 = v7;
  return result;
}

uint64_t sub_1002B5090(void **a1, void **a2)
{
  void *v2;
  void *v3;
  uint64_t KeyPath;
  uint64_t v5;
  id v6;
  void *v8;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_100717630);
  v5 = swift_getKeyPath(&unk_100717658);
  v8 = v2;
  v6 = v2;
  return static Published.subscript.setter(&v8, v3, KeyPath, v5);
}

uint64_t SplitViewContentHostingController.selectedItem.setter(uint64_t a1)
{
  void *v1;
  uint64_t KeyPath;
  uint64_t v4;
  uint64_t v6;

  KeyPath = swift_getKeyPath(&unk_100717630);
  v4 = swift_getKeyPath(&unk_100717658);
  v6 = a1;
  return static Published.subscript.setter(&v6, v1, KeyPath, v4);
}

void (*SplitViewContentHostingController.selectedItem.modify(_QWORD *a1))(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t KeyPath;
  uint64_t v5;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  KeyPath = swift_getKeyPath(&unk_100717630);
  v3[4] = KeyPath;
  v5 = swift_getKeyPath(&unk_100717658);
  v3[5] = v5;
  v3[6] = static Published.subscript.modify(v3, v1, KeyPath, v5);
  return sub_1002B51E0;
}

void sub_1002B51E0(_QWORD *a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = (void *)*a1;
  v2 = *(_QWORD *)(*a1 + 40);
  v3 = *(_QWORD *)(*a1 + 32);
  (*(void (**)(_QWORD, _QWORD))(*a1 + 48))(*a1, 0);
  swift_release(v2);
  swift_release(v3);
  free(v1);
}

uint64_t SplitViewContentHostingController.$selectedItem.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  swift_beginAccess(v0 + OBJC_IVAR___BKSplitViewContentHostingController__selectedItem, v3, 33, 0);
  v1 = sub_10004CFD4(&qword_1009D33C8);
  Published.projectedValue.getter(v1);
  return swift_endAccess(v3);
}

uint64_t SplitViewContentHostingController.$selectedItem.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  double v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  _BYTE v11[24];

  v3 = sub_10004CFD4(&qword_1009D7940);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = __chkstk_darwin(v3);
  v7 = &v11[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  (*(void (**)(_BYTE *, uint64_t, uint64_t, double))(v4 + 16))(v7, a1, v3, v5);
  swift_beginAccess(v1 + OBJC_IVAR___BKSplitViewContentHostingController__selectedItem, v11, 33, 0);
  v8 = sub_10004CFD4(&qword_1009D33C8);
  Published.projectedValue.setter(v7, v8);
  swift_endAccess(v11);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
}

void (*SplitViewContentHostingController.$selectedItem.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = sub_10004CFD4(&qword_1009D7940);
  v3[10] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[11] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  v7 = malloc(v6);
  v8 = OBJC_IVAR___BKSplitViewContentHostingController__selectedItem;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess(v1 + v8, v3, 33, 0);
  v9 = sub_10004CFD4(&qword_1009D33C8);
  v3[16] = v9;
  Published.projectedValue.getter(v9);
  swift_endAccess(v3);
  return sub_1002B5428;
}

void sub_1002B5428(uint64_t a1, char a2)
{
  _QWORD *v3;
  void (*v4)(_QWORD, _QWORD, _QWORD);
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(void *, uint64_t);

  v3 = *(_QWORD **)a1;
  v4 = *(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(*(_QWORD *)a1 + 88) + 16);
  v4(*(_QWORD *)(*(_QWORD *)a1 + 104), v3[14], v3[10]);
  v5 = v3[15];
  v6 = v3[16];
  v7 = (void *)v3[13];
  v8 = (void *)v3[14];
  v10 = v3[11];
  v9 = (void *)v3[12];
  v11 = v3[9];
  v12 = v3[10];
  v13 = v11 + v5;
  if ((a2 & 1) != 0)
  {
    v4(v3[12], v3[13], v3[10]);
    swift_beginAccess(v13, v3 + 3, 33, 0);
    Published.projectedValue.setter(v9, v6);
    swift_endAccess(v3 + 3);
    v14 = *(void (**)(void *, uint64_t))(v10 + 8);
    v14(v7, v12);
  }
  else
  {
    swift_beginAccess(v11 + v5, v3 + 6, 33, 0);
    Published.projectedValue.setter(v7, v6);
    swift_endAccess(v3 + 6);
    v14 = *(void (**)(void *, uint64_t))(v10 + 8);
  }
  v14(v8, v12);
  free(v8);
  free(v7);
  free(v9);
  free(v3);
}

uint64_t SplitViewContentHostingController.rootBarCoordinator.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  v1 = v0 + OBJC_IVAR___BKSplitViewContentHostingController_rootBarCoordinator;
  swift_beginAccess(v0 + OBJC_IVAR___BKSplitViewContentHostingController_rootBarCoordinator, v3, 0, 0);
  return swift_unknownObjectWeakLoadStrong(v1);
}

uint64_t SplitViewContentHostingController.rootBarCoordinator.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[24];

  v3 = v1 + OBJC_IVAR___BKSplitViewContentHostingController_rootBarCoordinator;
  swift_beginAccess(v3, v5, 1, 0);
  swift_unknownObjectWeakAssign(v3, a1);
  return swift_unknownObjectRelease(a1);
}

void (*SplitViewContentHostingController.rootBarCoordinator.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v4 = OBJC_IVAR___BKSplitViewContentHostingController_rootBarCoordinator;
  v3[4] = v1;
  v3[5] = v4;
  v5 = v1 + v4;
  swift_beginAccess(v1 + v4, v3, 33, 0);
  v3[3] = swift_unknownObjectWeakLoadStrong(v5);
  return sub_1002B5650;
}

void sub_1002B5650(uint64_t a1, char a2)
{
  _QWORD *v3;
  uint64_t v4;

  v3 = *(_QWORD **)a1;
  v4 = *(_QWORD *)(*(_QWORD *)a1 + 24);
  swift_unknownObjectWeakAssign(*(_QWORD *)(*(_QWORD *)a1 + 32) + *(_QWORD *)(*(_QWORD *)a1 + 40), v4);
  if ((a2 & 1) != 0)
  {
    swift_unknownObjectRelease(v3[3]);
    swift_endAccess(v3);
  }
  else
  {
    swift_endAccess(v3);
    swift_unknownObjectRelease(v4);
  }
  free(v3);
}

char *SplitViewContentHostingController.__allocating_init(viewControllerProvider:viewController:)(uint64_t a1, void *a2)
{
  objc_class *v2;
  id v5;

  v5 = objc_allocWithZone(v2);
  return SplitViewContentHostingController.init(viewControllerProvider:viewController:)(a1, a2);
}

char *SplitViewContentHostingController.init(viewControllerProvider:viewController:)(uint64_t a1, void *a2)
{
  char *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  char *v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  id v23;
  objc_class *v24;
  id v25;
  void *v26;
  char *v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *, uint64_t);
  char *v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  id v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD v41[3];
  objc_super v42;

  v38 = a2;
  v39 = a1;
  v4 = type metadata accessor for NSNotificationCenter.Publisher(0);
  v40 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v6 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10004CFD4(&qword_1009D33C8);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = &v2[OBJC_IVAR___BKSplitViewContentHostingController_viewControllerProvider];
  swift_unknownObjectWeakInit(&v2[OBJC_IVAR___BKSplitViewContentHostingController_viewControllerProvider], 0);
  *(_QWORD *)&v2[OBJC_IVAR___BKSplitViewContentHostingController_standardItems] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v2[OBJC_IVAR___BKSplitViewContentHostingController_cachedControllers] = &_swiftEmptyDictionarySingleton;
  *(_QWORD *)&v2[OBJC_IVAR___BKSplitViewContentHostingController_cancellables] = &_swiftEmptySetSingleton;
  v12 = &v2[OBJC_IVAR___BKSplitViewContentHostingController_selectedIdentifier];
  *(_QWORD *)v12 = 0;
  *((_QWORD *)v12 + 1) = 0;
  v13 = &v2[OBJC_IVAR___BKSplitViewContentHostingController__selectedItem];
  v41[0] = 0;
  v14 = v2;
  v15 = sub_10004CFD4((uint64_t *)&unk_1009D7930);
  Published.init(initialValue:)(v41, v15);
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v13, v10, v7);
  v16 = OBJC_IVAR___BKSplitViewContentHostingController_userSelectedItemSubject;
  v17 = sub_10004CFD4(&qword_1009CEC00);
  v18 = swift_allocObject(v17, *(unsigned int *)(v17 + 48), *(unsigned __int16 *)(v17 + 52));
  *(_QWORD *)&v14[v16] = PassthroughSubject.init()(v18);
  v19 = OBJC_IVAR___BKSplitViewContentHostingController_accessibilityPopToRootUserSelectedItemSubject;
  v20 = sub_10004CFD4(&qword_1009CEC08);
  v21 = swift_allocObject(v20, *(unsigned int *)(v20 + 48), *(unsigned __int16 *)(v20 + 52));
  *(_QWORD *)&v14[v19] = PassthroughSubject.init()(v21);
  swift_unknownObjectWeakInit(&v14[OBJC_IVAR___BKSplitViewContentHostingController_rootBarCoordinator], 0);
  v22 = objc_msgSend((id)objc_opt_self(NSHashTable), "weakObjectsHashTable");
  *(_QWORD *)&v14[OBJC_IVAR___BKSplitViewContentHostingController_isCreatingContentForNavigationController] = v22;
  swift_unknownObjectWeakAssign(v11, a1);
  v23 = v38;
  *(_QWORD *)&v14[OBJC_IVAR___BKSplitViewContentHostingController_viewController] = v38;
  v38 = v23;

  v24 = (objc_class *)type metadata accessor for SplitViewContentHostingController(0);
  v42.receiver = v14;
  v42.super_class = v24;
  v25 = objc_msgSendSuper2(&v42, "init");
  v26 = (void *)objc_opt_self(NSNotificationCenter);
  v27 = (char *)v25;
  v28 = objc_msgSend(v26, "defaultCenter");
  NSNotificationCenter.publisher(for:object:)(UIApplicationDidReceiveMemoryWarningNotification, 0);

  v29 = swift_allocObject(&unk_1008F9BA8, 24, 7);
  swift_unknownObjectWeakInit(v29 + 16, v27);
  v30 = sub_100008DB0((unint64_t *)&qword_1009E8840, (uint64_t (*)(uint64_t))&type metadata accessor for NSNotificationCenter.Publisher, (uint64_t)&protocol conformance descriptor for NSNotificationCenter.Publisher);
  v31 = Publisher<>.sink(receiveValue:)(sub_1002C68D8, v29, v4, v30);
  swift_release(v29);
  v32 = *(void (**)(char *, uint64_t))(v40 + 8);
  v32(v6, v4);
  v33 = &v27[OBJC_IVAR___BKSplitViewContentHostingController_cancellables];
  swift_beginAccess(&v27[OBJC_IVAR___BKSplitViewContentHostingController_cancellables], v41, 33, 0);
  AnyCancellable.store(in:)(v33);
  swift_endAccess(v41);
  swift_release(v31);
  v34 = objc_msgSend(v26, "defaultCenter");
  NSNotificationCenter.publisher(for:object:)(JSABridgeWillReloadNotification, 0);

  v35 = swift_allocObject(&unk_1008F9BA8, 24, 7);
  swift_unknownObjectWeakInit(v35 + 16, v27);
  v36 = Publisher<>.sink(receiveValue:)(sub_1002C68E0, v35, v4, v30);
  swift_release(v35);
  v32(v6, v4);
  swift_beginAccess(v33, v41, 33, 0);
  AnyCancellable.store(in:)(v33);
  swift_endAccess(v41);

  swift_unknownObjectRelease(v39);
  swift_release(v36);
  return v27;
}

void sub_1002B5B20(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t Strong;
  void *v9;
  _BYTE v10[24];

  v2 = a2 + 16;
  if (qword_1009CDDD8 != -1)
    swift_once(&qword_1009CDDD8, sub_1002BB714);
  v3 = type metadata accessor for Logger(0);
  v4 = sub_100048F64(v3, (uint64_t)qword_1009D78C0);
  v5 = Logger.logObject.getter(v4);
  v6 = static os_log_type_t.error.getter(v5);
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v7 = 0;
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "Received memory warning, removing all non-current VCs", v7, 2u);
    swift_slowDealloc(v7, -1, -1);
  }

  swift_beginAccess(v2, v10, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v9 = (void *)Strong;
    sub_1002B5C24();

  }
}

void sub_1002B5C24()
{
  uint64_t v0;
  uint64_t v1;
  Swift::Int *v2;
  Swift::Int v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  unint64_t v8;
  unint64_t v9;
  int64_t v10;
  unint64_t v11;
  int64_t v12;
  void *v13;
  _QWORD *v14;
  uint64_t v15;
  BOOL v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t i;
  id v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  id v27;
  NSString v28;
  uint64_t v29;
  Swift::Int v30;
  uint64_t v31;
  Swift::Int v32;
  Swift::Int v33;
  Swift::Int *v34;
  Swift::Int v35;
  uint64_t v36;
  Swift::Int v37;
  int64_t v38;
  uint64_t v39;
  id v40;
  unint64_t v41;
  int64_t v42;
  char v43[24];

  v1 = *(_QWORD *)(v0 + OBJC_IVAR___BKSplitViewContentHostingController_selectedIdentifier + 8);
  v39 = *(_QWORD *)(v0 + OBJC_IVAR___BKSplitViewContentHostingController_selectedIdentifier);
  v2 = (Swift::Int *)(v0 + OBJC_IVAR___BKSplitViewContentHostingController_cachedControllers);
  swift_beginAccess(v2, v43, 1, 0);
  v34 = v2;
  v3 = *v2;
  v37 = v3 + 64;
  v4 = 1 << *(_BYTE *)(v3 + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(v3 + 64);
  v38 = (unint64_t)(v4 + 63) >> 6;
  swift_bridgeObjectRetain(v1);
  swift_bridgeObjectRetain(v3);
  v7 = 0;
  v35 = v3;
  v36 = v1;
  while (1)
  {
    if (v6)
    {
      v8 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v9 = v8 | (v7 << 6);
      goto LABEL_21;
    }
    v10 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
LABEL_44:
      __break(1u);
      goto LABEL_45;
    }
    if (v10 >= v38)
      goto LABEL_42;
    v11 = *(_QWORD *)(v37 + 8 * v10);
    ++v7;
    if (!v11)
    {
      v7 = v10 + 1;
      if (v10 + 1 >= v38)
        goto LABEL_42;
      v11 = *(_QWORD *)(v37 + 8 * v7);
      if (!v11)
      {
        v7 = v10 + 2;
        if (v10 + 2 >= v38)
          goto LABEL_42;
        v11 = *(_QWORD *)(v37 + 8 * v7);
        if (!v11)
          break;
      }
    }
LABEL_20:
    v6 = (v11 - 1) & v11;
    v9 = __clz(__rbit64(v11)) + (v7 << 6);
LABEL_21:
    v13 = *(void **)(*(_QWORD *)(v3 + 56) + 8 * v9);
    if (v1)
    {
      v14 = (_QWORD *)(*(_QWORD *)(v3 + 48) + 16 * v9);
      v15 = v14[1];
      v16 = *v14 == v39 && v1 == v15;
      if (v16 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v14, v15, v39, v1, 0) & 1) != 0)
        continue;
    }
    v40 = v13;
    v17 = objc_msgSend(v40, "viewControllers");
    v18 = sub_100009E04(0, (unint64_t *)&qword_1009D8D70, UIViewController_ptr);
    v19 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v17, v18);

    v41 = v6;
    v42 = v7;
    if ((unint64_t)v19 >> 62)
    {
      if (v19 < 0)
        v29 = v19;
      else
        v29 = v19 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v19);
      v20 = _CocoaArrayWrapper.endIndex.getter(v29);
      swift_bridgeObjectRelease(v19);
      if (!v20)
        goto LABEL_4;
    }
    else
    {
      v20 = *(_QWORD *)((v19 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (!v20)
        goto LABEL_4;
    }
    if (v20 < 1)
      goto LABEL_44;
    for (i = 0; i != v20; ++i)
    {
      if ((v19 & 0xC000000000000001) != 0)
        v22 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v19);
      else
        v22 = *(id *)(v19 + 8 * i + 32);
      v23 = v22;
      v24 = objc_opt_self(TUIFeedViewController);
      v25 = swift_dynamicCastObjCClass(v23, v24);
      if (v25)
      {
        v26 = (void *)v25;
        v27 = v23;
        v28 = String._bridgeToObjectiveC()();
        objc_msgSend(v26, "suspendAndTeardownForReason:", v28);

      }
    }
LABEL_4:

    swift_bridgeObjectRelease(v19);
    v3 = v35;
    v1 = v36;
    v6 = v41;
    v7 = v42;
  }
  v12 = v10 + 3;
  if (v12 >= v38)
  {
LABEL_42:
    swift_release(v3);
    v30 = *v34;
    swift_bridgeObjectRetain(v1);
    swift_bridgeObjectRetain(v30);
    v32 = sub_1002C7B30(v31, v39, v1);
    swift_bridgeObjectRelease(v30);
    swift_bridgeObjectRelease_n(v1, 2);
    v33 = *v34;
    *v34 = v32;
    swift_bridgeObjectRelease(v33);
    return;
  }
  v11 = *(_QWORD *)(v37 + 8 * v12);
  if (v11)
  {
    v7 = v12;
    goto LABEL_20;
  }
  while (1)
  {
    v7 = v12 + 1;
    if (__OFADD__(v12, 1))
      break;
    if (v7 >= v38)
      goto LABEL_42;
    v11 = *(_QWORD *)(v37 + 8 * v7);
    ++v12;
    if (v11)
      goto LABEL_20;
  }
LABEL_45:
  __break(1u);
}

void sub_1002B5FC4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  _BYTE v5[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v5, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (void *)Strong;
    sub_1002B6014();

  }
}

void sub_1002B6014()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  char v7;
  void *v8;
  char v9;
  uint64_t *v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t *v13;
  unint64_t v14;
  _BYTE v15[24];
  char v16[24];

  v1 = v0;
  v2 = type metadata accessor for DispatchPredicate(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = &v15[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = sub_100009E04(0, (unint64_t *)&qword_1009CEC30, OS_dispatch_queue_ptr);
  *v5 = static OS_dispatch_queue.main.getter(v6);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v3 + 104))(v5, enum case for DispatchPredicate.onQueue(_:), v2);
  v7 = _dispatchPreconditionTest(_:)(v5);
  (*(void (**)(_QWORD *, uint64_t))(v3 + 8))(v5, v2);
  if ((v7 & 1) != 0)
  {
    type metadata accessor for HotReloadController(0);
    v8 = (void *)static HotReloadController.shared.getter();
    v9 = dispatch thunk of HotReloadController.isHotReloading.getter();

    if ((v9 & 1) == 0)
    {
      v10 = (uint64_t *)(v1 + OBJC_IVAR___BKSplitViewContentHostingController_standardItems);
      swift_beginAccess(v1 + OBJC_IVAR___BKSplitViewContentHostingController_standardItems, v16, 1, 0);
      v11 = *v10;
      *v10 = (uint64_t)_swiftEmptyArrayStorage;
      swift_bridgeObjectRelease(v11);
      v12 = sub_1001DAB24((uint64_t)_swiftEmptyArrayStorage);
      v13 = (unint64_t *)(v1 + OBJC_IVAR___BKSplitViewContentHostingController_cachedControllers);
      swift_beginAccess(v13, v15, 1, 0);
      v14 = *v13;
      *v13 = v12;
      swift_bridgeObjectRelease(v14);
    }
  }
  else
  {
    __break(1u);
  }
}

void SplitViewContentHostingController.init()()
{
  _swift_stdlib_reportUnimplementedInitializer("Books.SplitViewContentHostingController", 39, "init()", 6, 0);
  __break(1u);
}

id SplitViewContentHostingController.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SplitViewContentHostingController(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

void sub_1002B62E8(char a1, char a2, char a3)
{
  char *v3;
  char *v4;
  uint64_t KeyPath;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  unint64_t v14;
  unint64_t *v15;
  char v17;
  void *v18;
  objc_class *v19;
  id v20;
  void *v21;
  id v22;
  unint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  id v29;
  unsigned int v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  void *v41;
  objc_class *v42;
  id v43;
  id v44;
  id v45;
  id v46;
  char *v47;
  void *Strong;
  void *v49;
  id v50;
  id v51;
  id v52;
  char v53[24];
  _QWORD v54[3];
  char *v55;
  objc_super v56;
  objc_super v57;

  v4 = v3;
  KeyPath = swift_getKeyPath(&unk_100717630);
  v9 = swift_getKeyPath(&unk_100717658);
  static Published.subscript.getter(v54, v4, KeyPath, v9);
  swift_release(KeyPath);
  swift_release(v9);
  v10 = (void *)v54[0];
  if (!v54[0])
  {
    v13 = (uint64_t *)&v4[OBJC_IVAR___BKSplitViewContentHostingController_selectedIdentifier];
    v15 = (unint64_t *)&v4[OBJC_IVAR___BKSplitViewContentHostingController_selectedIdentifier + 8];
    v14 = *v15;
LABEL_11:
    if (!v14)
      goto LABEL_17;
    goto LABEL_14;
  }
  v12 = *(_QWORD *)(v54[0] + OBJC_IVAR___BKRootBarItem_identifier);
  v11 = *(_QWORD *)(v54[0] + OBJC_IVAR___BKRootBarItem_identifier + 8);
  swift_bridgeObjectRetain(v11);

  v13 = (uint64_t *)&v4[OBJC_IVAR___BKSplitViewContentHostingController_selectedIdentifier];
  v15 = (unint64_t *)&v4[OBJC_IVAR___BKSplitViewContentHostingController_selectedIdentifier + 8];
  v14 = *v15;
  if (!v11)
    goto LABEL_11;
  if (!v14)
  {
    swift_bridgeObjectRelease(v11);
LABEL_14:
    v18 = *(void **)&v4[OBJC_IVAR___BKSplitViewContentHostingController_viewController];
    v19 = (objc_class *)type metadata accessor for MainContentViewController();
    v57.receiver = v18;
    v57.super_class = v19;
    v20 = objc_msgSendSuper2(&v57, "contentNavigationController");
    if (v20)
    {
      v21 = v20;
      v22 = objc_msgSend(v20, "topViewController");

      if (v22)
      {
        objc_msgSend(v22, "setEditing:animated:", 0, 0);

      }
    }
LABEL_17:
    v23 = *v15;
    if (!*v15)
      goto LABEL_25;
    goto LABEL_18;
  }
  if (v12 != *v13 || v14 != v11)
  {
    v17 = _stringCompareWithSmolCheck(_:_:expecting:)(v12, v11, *v13, v14, 0);
    swift_bridgeObjectRelease(v11);
    if ((v17 & 1) != 0)
      goto LABEL_17;
    goto LABEL_14;
  }
  swift_bridgeObjectRelease(v11);
  v23 = *v15;
  if (!*v15)
    goto LABEL_25;
LABEL_18:
  v24 = *v13;
  v25 = &v4[OBJC_IVAR___BKSplitViewContentHostingController_standardItems];
  swift_beginAccess(&v4[OBJC_IVAR___BKSplitViewContentHostingController_standardItems], v53, 0, 0);
  v26 = *(_QWORD *)v25;
  swift_bridgeObjectRetain_n(v23, 2);
  v27 = swift_bridgeObjectRetain(v26);
  v28 = sub_1002C5E9C(v27, v24, v23);
  swift_bridgeObjectRelease(v26);
  swift_bridgeObjectRelease(v23);
  if (v28)
  {
    swift_bridgeObjectRelease(v23);
LABEL_21:
    v31 = swift_getKeyPath(&unk_100717630);
    v32 = swift_getKeyPath(&unk_100717658);
    v54[0] = v28;
    v33 = v4;
    v34 = v31;
    v35 = v32;
    goto LABEL_26;
  }
  v29 = objc_allocWithZone((Class)type metadata accessor for RootBarItem());
  swift_bridgeObjectRetain(v23);
  v28 = RootBarItem.init(identifier:isPlaceholder:url:titleOverride:iconNameOverride:selectedIconNameOverride:countryCode:editNameOnSelect:)(v24, v23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a2 & 1);
  v30 = objc_msgSend(v28, "isLibraryCollection");
  swift_bridgeObjectRelease(v23);
  if (v30)
    goto LABEL_21;

LABEL_25:
  v36 = swift_getKeyPath(&unk_100717630);
  v37 = swift_getKeyPath(&unk_100717658);
  v54[0] = 0;
  v33 = v4;
  v34 = v36;
  v35 = v37;
LABEL_26:
  static Published.subscript.setter(v54, v33, v34, v35);
  v38 = swift_getKeyPath(&unk_100717630);
  v39 = swift_getKeyPath(&unk_100717658);
  static Published.subscript.getter(v54, v4, v38, v39);
  swift_release(v38);
  swift_release(v39);
  v40 = (char *)v54[0];
  if (!v54[0])
    return;
  v41 = *(void **)&v4[OBJC_IVAR___BKSplitViewContentHostingController_viewController];
  v42 = (objc_class *)type metadata accessor for MainContentViewController();
  v56.receiver = v41;
  v56.super_class = v42;
  v43 = objc_msgSendSuper2(&v56, "contentNavigationController");
  v44 = v43;
  if (v43)
  {
    v45 = objc_msgSend(v43, "topViewController");

    if (!v45)
    {
      v44 = 0;
      if ((a3 & 1) == 0)
        goto LABEL_31;
      goto LABEL_34;
    }
    v46 = objc_msgSend(v45, "bc_deepestVisibleChildViewControllerIncludePresented:", 1);

    v44 = objc_msgSend(v46, "ba_effectiveAnalyticsTracker");
  }
  if ((a3 & 1) == 0)
  {
LABEL_31:
    if ((a1 & 1) != 0)
    {
      v47 = &v4[OBJC_IVAR___BKSplitViewContentHostingController_rootBarCoordinator];
      swift_beginAccess(&v4[OBJC_IVAR___BKSplitViewContentHostingController_rootBarCoordinator], v54, 0, 0);
      Strong = (void *)swift_unknownObjectWeakLoadStrong(v47);
      if (Strong)
      {
        v49 = Strong;
        v50 = objc_msgSend(Strong, "rootViewController");
        swift_unknownObjectRelease(v49);
        objc_msgSend(v50, "bc_dismissIfSafeAnimated:", 0);

      }
    }
  }
LABEL_34:
  v51 = sub_1002B67CC(v40);
  v52 = v51;
  MainContentViewController.contentNavigationController.setter((char *)v51);
  if ((a1 & 1) != 0)
  {
    v55 = v40;
    PassthroughSubject.send(_:)(&v55);
    sub_1002B7500(v44);
  }

}

Swift::Void __swiftcall SplitViewContentHostingController.select(identifier:)(Swift::String identifier)
{
  SplitViewContentHostingController.select(identifier:isUserAction:editNameOnSelect:)(identifier, 0, 0);
}

id sub_1002B67CC(char *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  uint64_t Strong;
  void *v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  id v23;
  id result;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  uint64_t v31;
  NSString v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  Class isa;
  void *v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v44;
  uint64_t v45;
  unsigned int v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  id v51;
  id v52;
  uint64_t v53;
  unsigned int v54;
  id v55;
  NSObject *v56;
  os_log_type_t v57;
  uint64_t v58;
  uint64_t v59;
  unsigned int v60;
  id v61;
  id v62;
  _QWORD *v63;
  os_log_t v64;
  uint64_t v65;
  NSObject *v66;
  id v67;
  id v68;
  id v69;
  id v70;
  NSObject *v71;
  int v72;
  _BOOL4 v73;
  uint64_t v74;
  _QWORD *v75;
  id v76;
  id v77;
  id v78;
  NSObject *v79;
  uint64_t v80;
  uint64_t v81;
  os_log_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  unint64_t v88;
  unint64_t v89;
  uint64_t v90;
  void *v91;
  void *v92;
  void *v93;
  uint64_t v94;
  id v95;
  id v96;
  id v97;
  id v98;
  uint64_t v99;
  _BYTE v100[4];
  int v101;
  uint64_t v102;
  void (*v103)(os_log_t, uint64_t, uint64_t);
  uint64_t v104;
  os_log_t v105;
  id v106;
  uint64_t v107;
  uint64_t v108;
  _QWORD *v109;
  NSObject *v110;
  id v111;
  NSObject *v112;
  id v113;
  uint64_t v114;
  __int128 v115;
  __int128 aBlock;
  __int128 v117;
  uint64_t (*v118)(void *);
  uint64_t v119;
  char v120[24];
  __int128 v121;
  uint64_t v122;
  uint64_t v123;
  _BYTE v124[4];

  v2 = v1;
  v4 = type metadata accessor for AutomationSemantics(0);
  v110 = *(NSObject **)(v4 - 8);
  __chkstk_darwin(v4);
  v6 = &v100[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = type metadata accessor for Logger(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  v10 = __chkstk_darwin(v7);
  __chkstk_darwin(v10);
  v12 = &v100[-v11];
  Strong = swift_unknownObjectWeakLoadStrong((char *)v1 + OBJC_IVAR___BKSplitViewContentHostingController_viewControllerProvider);
  if (!Strong)
    return objc_msgSend(objc_allocWithZone((Class)BSUINavigationController), "init");
  v14 = (void *)Strong;
  v104 = v9;
  v105 = (os_log_t)&v100[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_1009CDDD8 != -1)
    swift_once(&qword_1009CDDD8, sub_1002BB714);
  v15 = sub_100048F64(v7, (uint64_t)qword_1009D78C0);
  v103 = *(void (**)(os_log_t, uint64_t, uint64_t))(v8 + 16);
  v103(v12, v15, v7);
  v113 = a1;
  v16 = (uint64_t *)&a1[OBJC_IVAR___BKRootBarItem_identifier];
  v17 = *(_QWORD *)&a1[OBJC_IVAR___BKRootBarItem_identifier + 8];
  v111 = (id)*v16;
  v18 = (_QWORD *)((char *)v1 + OBJC_IVAR___BKSplitViewContentHostingController_cachedControllers);
  swift_beginAccess((char *)v1 + OBJC_IVAR___BKSplitViewContentHostingController_cachedControllers, v120, 0, 0);
  v19 = *v18;
  v20 = *(_QWORD *)(*v18 + 16);
  v108 = v7;
  v107 = v8;
  v112 = v12;
  v106 = v14;
  v109 = v2;
  if (v20)
  {
    swift_bridgeObjectRetain(v17);
    swift_bridgeObjectRetain(v19);
    v21 = sub_10004CE80((uint64_t)v111, v17);
    if ((v22 & 1) != 0)
    {
      v23 = *(id *)(*(_QWORD *)(v19 + 56) + 8 * v21);
      swift_bridgeObjectRelease(v17);
      swift_bridgeObjectRelease(v19);
      goto LABEL_11;
    }
    swift_bridgeObjectRelease(v17);
    swift_bridgeObjectRelease(v19);
  }
  v102 = v4;
  v25 = v113;
  v26 = objc_msgSend(v14, "navigationControllerForItem:", v113);
  v27 = objc_allocWithZone((Class)BSUIPlaceholderViewController);
  v28 = v26;
  v29 = objc_msgSend(v27, "init");
  v30 = objc_msgSend(v29, "navigationItem");
  RootBarItem.title.getter((uint64_t *)&v121);
  v31 = v122;
  v115 = v121;
  sub_100210D88((uint64_t)&v115);
  sub_100025B3C((uint64_t)&v123, (uint64_t)v124, &qword_1009D2A80);
  sub_100210D88((uint64_t)v124);
  v32 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v31);
  objc_msgSend(v30, "setTitle:", v32);

  v33 = sub_10004CFD4((uint64_t *)&unk_1009D4750);
  v34 = swift_allocObject(v33, 40, 7);
  *(_OWORD *)(v34 + 16) = xmmword_1007118F0;
  *(_QWORD *)(v34 + 32) = v29;
  *(_QWORD *)&aBlock = v34;
  specialized Array._endMutation()(v34);
  v35 = aBlock;
  sub_100009E04(0, (unint64_t *)&qword_1009D8D70, UIViewController_ptr);
  v23 = v28;
  v36 = v29;
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v35);
  objc_msgSend(v23, "setViewControllers:", isa);

  result = objc_msgSend(v23, "view");
  if (!result)
  {
    __break(1u);
    return result;
  }
  v38 = result;
  v39 = objc_msgSend(v25, "automationID");
  v40 = static String._unconditionallyBridgeFromObjectiveC(_:)(v39);
  v42 = v41;

  aBlock = 0u;
  v117 = 0u;
  static AutomationSemantics.page(name:id:)(v40, v42, &aBlock);
  swift_bridgeObjectRelease(v42);
  sub_100010960((uint64_t)&aBlock, (uint64_t *)&unk_1009D04E0);
  UIView.setAutomationSemantics(_:)(v6);

  ((void (*)(_BYTE *, uint64_t))v110[1].isa)(v6, v102);
  swift_beginAccess(v18, &aBlock, 33, 0);
  swift_bridgeObjectRetain(v17);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v18);
  v114 = *v18;
  *v18 = 0x8000000000000000;
  sub_1002C3F04((uint64_t)v23, (uint64_t)v111, v17, isUniquelyReferenced_nonNull_native, &qword_1009D0828, (void (*)(void))sub_10037A770, (void (*)(unint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_10037FCB8);
  v44 = *v18;
  *v18 = v114;
  swift_bridgeObjectRelease(v17);
  swift_bridgeObjectRelease(v44);
  swift_endAccess(&aBlock);

  v12 = v112;
  v2 = v109;
LABEL_11:
  v45 = OBJC_IVAR___BKSplitViewContentHostingController_isCreatingContentForNavigationController;
  v46 = objc_msgSend(*(id *)((char *)v2+ OBJC_IVAR___BKSplitViewContentHostingController_isCreatingContentForNavigationController), "containsObject:", v23);
  v47 = objc_msgSend(v23, "viewControllers");
  v48 = sub_100009E04(0, (unint64_t *)&qword_1009D8D70, UIViewController_ptr);
  v49 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v47, v48);

  if ((unint64_t)v49 >> 62)
  {
    if (v49 < 0)
      v99 = v49;
    else
      v99 = v49 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v49);
    v50 = (void *)_CocoaArrayWrapper.endIndex.getter(v99);
    swift_bridgeObjectRelease(v49);
  }
  else
  {
    v50 = *(void **)((v49 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v51 = v113;
  if (v50)
  {
    if ((v49 & 0xC000000000000001) != 0)
    {
      v52 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v49);
    }
    else
    {
      if (!*(_QWORD *)((v49 & 0xFFFFFFFFFFFFF8) + 0x10))
        __break(1u);
      v52 = *(id *)(v49 + 32);
    }
    v50 = v52;
    swift_bridgeObjectRelease(v49);
    v53 = sub_100009E04(0, (unint64_t *)&unk_1009D7C28, BSUIPlaceholderViewController_ptr);
    v54 = objc_msgSend(v50, "isKindOfClass:", swift_getObjCClassFromMetadata(v53)) ^ 1;
    if (((v46 | v54) & 1) == 0)
      goto LABEL_23;
LABEL_21:
    v55 = v51;
    v56 = Logger.logObject.getter(v55);
    v57 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v56, v57))
    {
      v58 = swift_slowAlloc(34, -1);
      v113 = v50;
      v59 = v58;
      v109 = (_QWORD *)swift_slowAlloc(8, -1);
      v110 = swift_slowAlloc(32, -1);
      *(_QWORD *)&aBlock = v110;
      *(_DWORD *)v59 = 136315906;
      v114 = sub_100040F58(0xD00000000000001CLL, 0x80000001007BC5F0, (uint64_t *)&aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v114, &v115, v59 + 4, v59 + 12);
      *(_WORD *)(v59 + 12) = 2114;
      v60 = v46;
      v114 = (uint64_t)v55;
      v61 = v55;
      v105 = v56;
      v62 = v61;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v114, &v115, v59 + 14, v59 + 22);
      v63 = v109;
      *v109 = v55;

      *(_WORD *)(v59 + 22) = 1024;
      LODWORD(v114) = v60;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v114, (char *)&v114 + 4, v59 + 24, v59 + 28);
      *(_WORD *)(v59 + 28) = 1024;
      LODWORD(v114) = v54;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v114, (char *)&v114 + 4, v59 + 30, v59 + 34);
      v64 = v105;
      _os_log_impl((void *)&_mh_execute_header, v105, v57, "%s: Skipping creating content VC for %{public}@. isCreatingVC: %{BOOL}d, hasValidVC: %{BOOL}d", (uint8_t *)v59, 0x22u);
      v65 = sub_10004CFD4((uint64_t *)&unk_1009D6190);
      swift_arrayDestroy(v63, 1, v65);
      swift_slowDealloc(v63, -1, -1);
      v66 = v110;
      swift_arrayDestroy(v110, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v66, -1, -1);
      swift_slowDealloc(v59, -1, -1);

      swift_unknownObjectRelease(v106);
      (*(void (**)(NSObject *, uint64_t))(v107 + 8))(v112, v108);
    }
    else
    {

      swift_unknownObjectRelease(v106);
      (*(void (**)(NSObject *, uint64_t))(v107 + 8))(v12, v108);
    }
    return v23;
  }
  swift_bridgeObjectRelease(v49);
  if ((v46 & 1) != 0)
  {
    v54 = 0;
    v50 = 0;
    goto LABEL_21;
  }
LABEL_23:
  objc_msgSend(*(id *)((char *)v2 + v45), "addObject:", v23);
  v67 = v50;
  v68 = v51;
  v69 = v67;
  v70 = v68;
  v71 = Logger.logObject.getter(v70);
  v72 = static os_log_type_t.default.getter();
  v110 = v71;
  v73 = os_log_type_enabled(v71, (os_log_type_t)v72);
  v111 = v23;
  v113 = v69;
  if (v73)
  {
    v101 = v72;
    v74 = swift_slowAlloc(32, -1);
    v75 = (_QWORD *)swift_slowAlloc(16, -1);
    v102 = swift_slowAlloc(32, -1);
    *(_QWORD *)&aBlock = v102;
    *(_DWORD *)v74 = 136315650;
    v114 = sub_100040F58(0xD00000000000001CLL, 0x80000001007BC5F0, (uint64_t *)&aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v114, &v115, v74 + 4, v74 + 12);
    *(_WORD *)(v74 + 12) = 2114;
    if (v50)
    {
      v76 = v113;
      v114 = (uint64_t)v113;
      v77 = v113;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v114, &v115, v74 + 14, v74 + 22);
    }
    else
    {
      v114 = 0;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v114, &v115, v74 + 14, v74 + 22);
      v76 = v113;
    }
    *v75 = v50;

    *(_WORD *)(v74 + 22) = 2114;
    v114 = (uint64_t)v70;
    v78 = v70;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v114, &v115, v74 + 24, v74 + 32);
    v75[1] = v70;

    v79 = v110;
    _os_log_impl((void *)&_mh_execute_header, v110, (os_log_type_t)v101, "%s: Creating content VC to replace %{public}@ for %{public}@", (uint8_t *)v74, 0x20u);
    v80 = sub_10004CFD4((uint64_t *)&unk_1009D6190);
    swift_arrayDestroy(v75, 2, v80);
    swift_slowDealloc(v75, -1, -1);
    v81 = v102;
    swift_arrayDestroy(v102, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v81, -1, -1);
    swift_slowDealloc(v74, -1, -1);

    v12 = v112;
  }
  else
  {

  }
  v82 = v105;
  v83 = v108;
  v103(v105, (uint64_t)v12, v108);
  v84 = v107;
  v85 = *(unsigned __int8 *)(v107 + 80);
  v86 = (v85 + 16) & ~v85;
  v87 = (v104 + v86 + 7) & 0xFFFFFFFFFFFFFFF8;
  v88 = (v87 + 15) & 0xFFFFFFFFFFFFFFF8;
  v89 = (v88 + 15) & 0xFFFFFFFFFFFFFFF8;
  v90 = swift_allocObject(&unk_1008F9CA0, v89 + 8, v85 | 7);
  (*(void (**)(uint64_t, os_log_t, uint64_t))(v84 + 32))(v90 + v86, v82, v83);
  *(_QWORD *)(v90 + v87) = v70;
  v91 = v109;
  *(_QWORD *)(v90 + v88) = v109;
  v92 = v111;
  *(_QWORD *)(v90 + v89) = v111;
  v118 = sub_1002C80C4;
  v119 = v90;
  *(_QWORD *)&aBlock = _NSConcreteStackBlock;
  *((_QWORD *)&aBlock + 1) = 1107296256;
  *(_QWORD *)&v117 = sub_10000B65C;
  *((_QWORD *)&v117 + 1) = &unk_1008F9CB8;
  v93 = _Block_copy(&aBlock);
  v94 = v119;
  v95 = v70;
  v96 = v91;
  v97 = v92;
  swift_release(v94);
  v98 = v106;
  objc_msgSend(v106, "viewControllerForItem:completion:", v95, v93);
  _Block_release(v93);

  swift_unknownObjectRelease(v98);
  (*(void (**)(NSObject *, uint64_t))(v84 + 8))(v112, v83);
  return v97;
}

void sub_1002B7500(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t KeyPath;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  void (*v29)(char *, _QWORD, uint64_t);
  char *v30;
  void (*v31)(char *, _QWORD, id);
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  void *v39;
  char *v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  char isUniquelyReferenced_nonNull_native;
  void *v47;
  Class isa;
  void *v49;
  uint64_t v50;
  Class v51;
  char *v52;
  uint64_t v53;
  id v54;
  void *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  void *v65;
  _OWORD v66[2];
  __int128 v67;
  uint64_t v68;
  void *v69;
  char v70[32];

  v2 = v1;
  v4 = type metadata accessor for FigaroClickEvent.TargetType(0);
  v63 = *(_QWORD *)(v4 - 8);
  v64 = v4;
  __chkstk_darwin(v4);
  v6 = (char *)&v52 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = type metadata accessor for FigaroClickEvent.Location.Type(0);
  v57 = *(_QWORD *)(v58 - 8);
  __chkstk_darwin(v58);
  v59 = (char *)&v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (_QWORD *)type metadata accessor for FigaroActionType(0);
  v9 = *(v8 - 1);
  __chkstk_darwin(v8);
  v60 = (char *)&v52 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for FigaroClickEvent.ActionContext(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v56 = (char *)&v52 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for FigaroClickEvent(0);
  v61 = *(_QWORD *)(v14 - 8);
  v62 = v14;
  __chkstk_darwin(v14);
  v16 = (char *)&v52 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = swift_getKeyPath(&unk_100717630);
  v18 = swift_getKeyPath(&unk_100717658);
  static Published.subscript.getter(&v67, v2, KeyPath, v18);
  swift_release(KeyPath);
  swift_release(v18);
  if ((_QWORD)v67)
  {
    v54 = v8;
    v19 = a1;
    v21 = *(_QWORD *)(v67 + OBJC_IVAR___BKRootBarItem_identifier + 8);
    v53 = *(_QWORD *)(v67 + OBJC_IVAR___BKRootBarItem_identifier);
    v20 = v53;
    v22 = (uint64_t *)(v2 + OBJC_IVAR___BKSplitViewContentHostingController_standardItems);
    v52 = v6;
    v23 = (char *)v67;
    swift_beginAccess(v2 + OBJC_IVAR___BKSplitViewContentHostingController_standardItems, v70, 0, 0);
    v24 = *v22;
    swift_bridgeObjectRetain_n(v21, 2);
    v25 = swift_bridgeObjectRetain(v24);
    v26 = sub_1002C5A9C(v25, v20, v21);
    v55 = v19;
    LOBYTE(v20) = v27;
    swift_bridgeObjectRelease(v24);
    swift_bridgeObjectRelease(v21);
    if ((v20 & 1) != 0)
      v28 = -1;
    else
      v28 = v26;
    v29 = *(void (**)(char *, _QWORD, uint64_t))(v12 + 104);
    v30 = v56;
    v29(v56, enum case for FigaroClickEvent.ActionContext.tabBarController(_:), v11);
    v31 = *(void (**)(char *, _QWORD, id))(v9 + 104);
    v32 = v60;
    v31(v60, enum case for FigaroActionType.focus(_:), v54);
    v54 = v23;
    v33 = *(_QWORD *)&v23[OBJC_IVAR___BKRootBarItem_url];
    v34 = *(_QWORD *)&v23[OBJC_IVAR___BKRootBarItem_url + 8];
    v35 = sub_10004CFD4(&qword_1009E8860);
    v36 = *(_QWORD *)(type metadata accessor for FigaroClickEvent.Location(0) - 8);
    v37 = swift_allocObject(v35, ((*(unsigned __int8 *)(v36 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80))+ *(_QWORD *)(v36 + 72), *(unsigned __int8 *)(v36 + 80) | 7);
    *(_OWORD *)(v37 + 16) = xmmword_10070CCA0;
    v38 = v59;
    (*(void (**)(char *, _QWORD, uint64_t))(v57 + 104))(v59, enum case for FigaroClickEvent.Location.Type.tabItem(_:), v58);
    swift_bridgeObjectRetain(v34);
    v39 = v55;
    FigaroClickEvent.Location.init(adamId:name:locationPosition:locationType:)(0, 0, 0, 0, v28, v38);
    v40 = v52;
    (*(void (**)(char *, _QWORD, uint64_t))(v63 + 104))(v52, enum case for FigaroClickEvent.TargetType.tabItem(_:), v64);
    v41 = sub_1004F6E50((uint64_t)_swiftEmptyArrayStorage);
    FigaroClickEvent.init(actionContext:actionDetails:actionType:actionURLString:locations:targetId:targetType:)(v30, v41, v32, v33, v34, v37, v53, v21, v40);
    v42 = sub_100008DB0(&qword_1009D7C20, (uint64_t (*)(uint64_t))&type metadata accessor for FigaroClickEvent, (uint64_t)&protocol conformance descriptor for FigaroClickEvent);
    v43 = v62;
    v44 = FigaroEventBuilding.build()(v62, v42);
    (*(void (**)(char *, uint64_t))(v61 + 8))(v16, v43);
    v69 = &_swiftEmptyDictionarySingleton;
    if (v39)
    {
      v68 = type metadata accessor for BATracker(0);
      *(_QWORD *)&v67 = v39;
      sub_10004CFC4(&v67, v66);
      v45 = v39;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(&_swiftEmptyDictionarySingleton);
      v65 = &_swiftEmptyDictionarySingleton;
      sub_1002C3A2C(v66, 0x72656B63617274, 0xE700000000000000, isUniquelyReferenced_nonNull_native);
      v69 = v65;
      swift_bridgeObjectRelease(0x8000000000000000);
    }
    else
    {
      sub_1002BD938(0x72656B63617274, 0xE700000000000000, &v67);
      sub_100010960((uint64_t)&v67, (uint64_t *)&unk_1009D04E0);
    }
    v47 = (void *)objc_opt_self(JSAApplication);
    type metadata accessor for FigaroKey(0);
    sub_100008DB0(&qword_1009D05A8, (uint64_t (*)(uint64_t))type metadata accessor for FigaroKey, (uint64_t)&unk_10070DDC4);
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v44);
    v49 = v69;
    v50 = sub_1004EC9E0((uint64_t)v69);
    swift_bridgeObjectRelease(v49);
    v51 = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v50);
    objc_msgSend(v47, "recordNativeEvent:additionalInfo:", isa, v51);

  }
}

uint64_t sub_1002B7A90(void *a1, uint64_t a2, void *a3, void *a4, void *a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  void *v18;
  void *v19;
  id v20;
  id v21;
  id v22;
  id v23;
  _QWORD v25[2];
  void *v26;
  void *v27;

  v26 = a4;
  v27 = a5;
  v8 = type metadata accessor for Logger(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  __chkstk_darwin(v8);
  v11 = (char *)v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25[1] = sub_100009E04(0, (unint64_t *)&qword_1009CEC30, OS_dispatch_queue_ptr);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  v12 = *(unsigned __int8 *)(v9 + 80);
  v13 = (v12 + 24) & ~v12;
  v14 = (v10 + v13 + 7) & 0xFFFFFFFFFFFFFFF8;
  v15 = (v14 + 15) & 0xFFFFFFFFFFFFFFF8;
  v16 = (v15 + 15) & 0xFFFFFFFFFFFFFFF8;
  v17 = swift_allocObject(&unk_1008F9CF0, v16 + 8, v12 | 7);
  *(_QWORD *)(v17 + 16) = a1;
  (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(v17 + v13, v11, v8);
  *(_QWORD *)(v17 + v14) = a3;
  v18 = v26;
  *(_QWORD *)(v17 + v15) = v26;
  v19 = v27;
  *(_QWORD *)(v17 + v16) = v27;
  v20 = a1;
  v21 = a3;
  v22 = v18;
  v23 = v19;
  static OS_dispatch_queue.dispatchAsyncOnMainIfNeeded(block:)(sub_1002C81E4, v17);
  return swift_release(v17);
}

void sub_1002B7BE0(void *a1, char **a2, char *a3, char *a4, void *a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  id v22;
  unint64_t v23;
  char v24;
  NSObject *v25;
  id v26;
  uint64_t v27;
  NSString v28;
  id v29;
  char *v30;
  NSObject *v31;
  char *v32;
  NSObject *v33;
  NSObject *v34;
  BOOL v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  NSObject *v39;
  char *v40;
  char *v41;
  char **v42;
  _QWORD *v43;
  os_log_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  NSObject *v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  char *v52;
  char **v53;
  uint64_t v54;
  id v55;
  char *v56;
  NSObject *v57;
  os_log_type_t v58;
  uint64_t v59;
  char **v60;
  char *v61;
  uint64_t v62;
  char **v63;
  NSObject *v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;
  NSObject *v68;
  char *v69;
  uint64_t v70;
  id v71;
  os_log_t v72;
  uint64_t v73;
  _QWORD *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  char *v81;
  id v82;
  void *v83;
  NSObject *v84;
  char *v85;
  void *v86;
  char *v87;
  char *v88;
  NSObject *v89;
  id v90;
  id v91;
  id v92;
  uint64_t v93;
  _QWORD *v94;
  uint64_t v95;
  os_log_t v96;
  int v97;
  char *v98;
  id v99;
  uint64_t v100;
  NSObject *v101;
  char **v102;
  id v103;
  char *v104;
  uint64_t v105[5];
  char *v106;
  uint64_t v107;
  _BYTE v108[24];
  _OWORD v109[2];
  uint64_t v110;
  __int128 v111;
  uint64_t v112;
  uint64_t v113;
  _BYTE v114[16];
  __int128 v115;
  _BYTE v116[16];
  __int128 v117;
  __int128 v118;

  v10 = type metadata accessor for Logger(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  v13 = __chkstk_darwin(v10);
  v14 = (char *)&v93 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v104 = a4;
  if (!a1)
  {
    v47 = a3;
    v48 = Logger.logObject.getter(v47);
    v49 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v48, (os_log_type_t)v49))
    {
      v50 = swift_slowAlloc(22, -1);
      v102 = (char **)swift_slowAlloc(8, -1);
      v103 = (id)swift_slowAlloc(32, -1);
      *(_QWORD *)&v111 = v103;
      *(_DWORD *)v50 = 136315394;
      *(_QWORD *)&v109[0] = sub_100040F58(0xD00000000000001CLL, 0x80000001007BC5F0, (uint64_t *)&v111);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v109, (char *)v109 + 8, v50 + 4, v50 + 12);
      *(_WORD *)(v50 + 12) = 2114;
      *(_QWORD *)&v109[0] = v47;
      v51 = a5;
      v52 = v47;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v109, (char *)v109 + 8, v50 + 14, v50 + 22);
      v53 = v102;
      *v102 = v47;

      a5 = v51;
      _os_log_impl((void *)&_mh_execute_header, v48, (os_log_type_t)v49, "%s: Did not get a contentViewController for %{public}@, bailing out with spinner", (uint8_t *)v50, 0x16u);
      v54 = sub_10004CFD4((uint64_t *)&unk_1009D6190);
      swift_arrayDestroy(v53, 1, v54);
      swift_slowDealloc(v53, -1, -1);
      v55 = v103;
      swift_arrayDestroy(v103, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v55, -1, -1);
      swift_slowDealloc(v50, -1, -1);
    }
    else
    {

    }
    objc_msgSend(*(id *)&v104[OBJC_IVAR___BKSplitViewContentHostingController_isCreatingContentForNavigationController], "removeObject:", a5);
    return;
  }
  v100 = v13;
  v102 = a2;
  v103 = a5;
  v16 = *(_QWORD *)&a3[OBJC_IVAR___BKRootBarItem_identifier];
  v15 = *(_QWORD *)&a3[OBJC_IVAR___BKRootBarItem_identifier + 8];
  v17 = (uint64_t *)&a4[OBJC_IVAR___BKSplitViewContentHostingController_cachedControllers];
  swift_beginAccess(v17, v108, 0, 0);
  v18 = *v17;
  v19 = *(_QWORD *)(v18 + 16);
  v101 = a1;
  if (!v19)
    goto LABEL_13;
  swift_bridgeObjectRetain(v15);
  swift_bridgeObjectRetain(v18);
  v20 = sub_10004CE80(v16, v15);
  if ((v21 & 1) == 0)
  {
    swift_bridgeObjectRelease(v15);
    swift_bridgeObjectRelease(v18);
    goto LABEL_13;
  }
  v22 = *(id *)(*(_QWORD *)(v18 + 56) + 8 * v20);
  swift_bridgeObjectRelease(v15);
  swift_bridgeObjectRelease(v18);
  if (v22 != v103)
  {
LABEL_13:
    v56 = a3;
    v57 = Logger.logObject.getter(v56);
    v58 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v57, v58))
    {
      v59 = swift_slowAlloc(22, -1);
      v60 = (char **)swift_slowAlloc(8, -1);
      v102 = (char **)swift_slowAlloc(32, -1);
      *(_QWORD *)&v111 = v102;
      *(_DWORD *)v59 = 136315394;
      *(_QWORD *)&v109[0] = sub_100040F58(0xD00000000000001CLL, 0x80000001007BC5F0, (uint64_t *)&v111);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v109, (char *)v109 + 8, v59 + 4, v59 + 12);
      *(_WORD *)(v59 + 12) = 2114;
      *(_QWORD *)&v109[0] = v56;
      v61 = v56;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v109, (char *)v109 + 8, v59 + 14, v59 + 22);
      *v60 = v56;

      _os_log_impl((void *)&_mh_execute_header, v57, v58, "%s: Skipping updating content VC for %{public}@ because the active UI is no longer sidebar", (uint8_t *)v59, 0x16u);
      v62 = sub_10004CFD4((uint64_t *)&unk_1009D6190);
      swift_arrayDestroy(v60, 1, v62);
      swift_slowDealloc(v60, -1, -1);
      v63 = v102;
      swift_arrayDestroy(v102, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v63, -1, -1);
      swift_slowDealloc(v59, -1, -1);
    }
    else
    {

    }
    v64 = v101;
    objc_msgSend(*(id *)&v104[OBJC_IVAR___BKSplitViewContentHostingController_isCreatingContentForNavigationController], "removeObject:", v103);

    return;
  }
  RootBarItem.title.getter((uint64_t *)v109);
  v117 = v109[0];
  v118 = v109[1];
  sub_100210D88((uint64_t)&v117);
  sub_100025B3C((uint64_t)&v110, (uint64_t)v116, &qword_1009D2A80);
  sub_100210D88((uint64_t)v116);
  v111 = v118;
  v23 = sub_1001F15BC();
  v24 = Collection.isNotEmpty.getter(&type metadata for String, v23);
  sub_100210D88((uint64_t)&v118);
  v25 = v101;
  if ((v24 & 1) != 0)
  {
    v26 = -[NSObject navigationItem](v101, "navigationItem");
    RootBarItem.title.getter((uint64_t *)&v111);
    v27 = v112;
    v115 = v111;
    sub_100210D88((uint64_t)&v115);
    sub_100025B3C((uint64_t)&v113, (uint64_t)v114, &qword_1009D2A80);
    sub_100210D88((uint64_t)v114);
    v28 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v27);
    objc_msgSend(v26, "setTitle:", v28);

  }
  v29 = objc_msgSend(v103, "transitionCoordinator");
  v30 = a3;
  v31 = v25;
  v32 = v30;
  v33 = v31;
  v34 = Logger.logObject.getter(v33);
  v97 = static os_log_type_t.default.getter();
  v35 = os_log_type_enabled(v34, (os_log_type_t)v97);
  v99 = v29;
  if (v29)
  {
    v101 = v33;
    v98 = v32;
    if (v35)
    {
      v36 = swift_slowAlloc(32, -1);
      v96 = v34;
      v37 = v36;
      v38 = (_QWORD *)swift_slowAlloc(16, -1);
      v94 = v38;
      v95 = swift_slowAlloc(32, -1);
      v105[0] = v95;
      *(_DWORD *)v37 = 136315650;
      v107 = sub_100040F58(0xD00000000000001CLL, 0x80000001007BC5F0, v105);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v107, v108, v37 + 4, v37 + 12);
      *(_WORD *)(v37 + 12) = 2112;
      v93 = v37 + 22;
      v107 = (uint64_t)v33;
      v39 = v33;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v107, v108, v37 + 14, v93);
      *v38 = a1;

      *(_WORD *)(v37 + 22) = 2114;
      v40 = v98;
      v107 = (uint64_t)v98;
      v41 = v98;
      v42 = v102;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v107, v108, v37 + 24, v37 + 32);
      v43 = v94;
      v94[1] = v40;

      v44 = v96;
      _os_log_impl((void *)&_mh_execute_header, v96, (os_log_type_t)v97, "%s: Updating nav stack alongside transition with content VC %@ for %{public}@", (uint8_t *)v37, 0x20u);
      v45 = sub_10004CFD4((uint64_t *)&unk_1009D6190);
      swift_arrayDestroy(v43, 2, v45);
      swift_slowDealloc(v43, -1, -1);
      v46 = v95;
      swift_arrayDestroy(v95, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v46, -1, -1);
      swift_slowDealloc(v37, -1, -1);

    }
    else
    {

      v42 = v102;
    }
    v77 = v100;
    (*(void (**)(char *, char **, uint64_t))(v11 + 16))((char *)&v93 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v42, v100);
    v78 = *(unsigned __int8 *)(v11 + 80);
    v79 = (v78 + 40) & ~v78;
    v80 = (v12 + v79 + 7) & 0xFFFFFFFFFFFFFFF8;
    v81 = (char *)swift_allocObject(&unk_1008F9D18, v80 + 8, v78 | 7);
    v82 = v103;
    v83 = v104;
    *((_QWORD *)v81 + 2) = v104;
    *((_QWORD *)v81 + 3) = v82;
    v84 = v101;
    *((_QWORD *)v81 + 4) = v101;
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(&v81[v79], v14, v77);
    v85 = v98;
    *(_QWORD *)&v81[v80] = v98;
    v105[4] = (uint64_t)sub_1002C82E0;
    v106 = v81;
    v105[0] = (uint64_t)_NSConcreteStackBlock;
    v105[1] = 1107296256;
    v105[2] = (uint64_t)sub_1004D7C0C;
    v105[3] = (uint64_t)&unk_1008F9D30;
    v86 = _Block_copy(v105);
    v87 = v106;
    v88 = v85;
    v89 = v84;
    v90 = v83;
    v91 = v82;
    swift_release(v87);
    v92 = v99;
    objc_msgSend(v99, "animateAlongsideTransition:completion:", 0, v86);

    _Block_release(v86);
    swift_unknownObjectRelease(v92);
  }
  else
  {
    if (v35)
    {
      v65 = swift_slowAlloc(32, -1);
      v66 = swift_slowAlloc(16, -1);
      v96 = v34;
      v101 = v33;
      v67 = (_QWORD *)v66;
      v100 = swift_slowAlloc(32, -1);
      v105[0] = v100;
      *(_DWORD *)v65 = 136315650;
      v107 = sub_100040F58(0xD00000000000001CLL, 0x80000001007BC5F0, v105);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v107, v108, v65 + 4, v65 + 12);
      *(_WORD *)(v65 + 12) = 2112;
      v107 = (uint64_t)v101;
      v68 = v101;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v107, v108, v65 + 14, v65 + 22);
      *v67 = a1;

      *(_WORD *)(v65 + 22) = 2114;
      v107 = (uint64_t)v32;
      v69 = v32;
      v70 = (uint64_t)v102;
      v71 = v103;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v107, v108, v65 + 24, v65 + 32);
      v67[1] = v32;

      v72 = v96;
      _os_log_impl((void *)&_mh_execute_header, v96, (os_log_type_t)v97, "%s: Updating nav stack with content VC %@ for %{public}@", (uint8_t *)v65, 0x20u);
      v73 = sub_10004CFD4((uint64_t *)&unk_1009D6190);
      swift_arrayDestroy(v67, 2, v73);
      v74 = v67;
      v33 = v101;
      swift_slowDealloc(v74, -1, -1);
      v75 = v100;
      swift_arrayDestroy(v100, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v75, -1, -1);
      swift_slowDealloc(v65, -1, -1);

      v76 = (uint64_t)v104;
    }
    else
    {

      v71 = v103;
      v76 = (uint64_t)v104;
      v70 = (uint64_t)v102;
    }
    sub_1002B86C0(v76, v71, v33, v70, v32);

  }
}

uint64_t sub_1002B86C0(uint64_t a1, void *a2, NSObject *a3, uint64_t a4, void *a5)
{
  void *v9;
  void *v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  uint64_t v16;
  char **v17;
  id v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  NSObject *v26;
  os_log_type_t v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  Class isa;
  id v38;
  id v39;
  uint64_t v40;
  id v41;
  id v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  NSObject *v54;
  os_log_type_t v55;
  uint64_t v56;
  void *v57;
  id v58;
  uint64_t v59;
  NSObject *v60;
  id v61;
  NSObject *v62;
  NSObject *v63;
  NSObject *v64;
  os_log_type_t v65;
  uint64_t v66;
  NSObject **v67;
  NSObject *v68;
  NSObject *v69;
  uint64_t v70;
  _QWORD *v72;
  uint64_t v73;
  os_log_t log;
  _QWORD *v75;
  void *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;

  sub_100009E04(0, (unint64_t *)&qword_1009CEC30, OS_dispatch_queue_ptr);
  v9 = (void *)static OS_dispatch_queue.main.getter();
  v10 = &_dispatch_main_q;
  v11 = &_dispatch_main_q;
  v12 = v9;
  v13 = &_dispatch_main_q;
  if (v12 == &_dispatch_main_q)
  {
    +[NSThread isMainThread](NSThread, "isMainThread");
    v10 = v12;
  }

  objc_msgSend(*(id *)(a1 + OBJC_IVAR___BKSplitViewContentHostingController_isCreatingContentForNavigationController), "removeObject:", a2);
  v14 = objc_msgSend(a2, "viewControllers");
  v15 = (id)sub_100009E04(0, (unint64_t *)&qword_1009D8D70, UIViewController_ptr);
  v16 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v14, v15);

  v82 = v16;
  v17 = &selRef_minifiedPresenterClose_completion_;
  v18 = objc_msgSend(a2, "navigationBar");
  v19 = (char *)objc_msgSend(v18, "items");

  if (!v19)
  {
LABEL_24:
    v15 = 0;
    if ((unint64_t)v16 >> 62)
    {
LABEL_10:
      if (v16 < 0)
        v23 = v16;
      else
        v23 = v16 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v16);
      v24 = _CocoaArrayWrapper.endIndex.getter(v23);
      swift_bridgeObjectRelease(v16);
      if (!v24)
        goto LABEL_14;
      goto LABEL_26;
    }
LABEL_25:
    if (!*(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_14:
      v76 = v15;
      v25 = a5;
      v26 = Logger.logObject.getter(v25);
      v27 = static os_log_type_t.fault.getter();
      if (os_log_type_enabled(v26, v27))
      {
        log = a3;
        v28 = swift_slowAlloc(22, -1);
        v72 = (_QWORD *)swift_slowAlloc(8, -1);
        v73 = swift_slowAlloc(32, -1);
        v81 = v73;
        *(_DWORD *)v28 = 136315394;
        v80 = sub_100040F58(0xD000000000000017, 0x80000001007BC630, &v81);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v80, &v81, v28 + 4, v28 + 12);
        *(_WORD *)(v28 + 12) = 2114;
        v80 = (uint64_t)v25;
        v29 = v25;
        v17 = &selRef_minifiedPresenterClose_completion_;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v80, &v81, v28 + 14, v28 + 22);
        *v72 = v25;

        _os_log_impl((void *)&_mh_execute_header, v26, v27, "%s: Nav stack is empty for %{public}@", (uint8_t *)v28, 0x16u);
        v30 = sub_10004CFD4((uint64_t *)&unk_1009D6190);
        swift_arrayDestroy(v72, 1, v30);
        swift_slowDealloc(v72, -1, -1);
        swift_arrayDestroy(v73, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v73, -1, -1);
        v31 = v28;
        a3 = log;
        swift_slowDealloc(v31, -1, -1);
      }
      else
      {

      }
      v21 = a3;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v21);
      v19 = *(char **)((v82 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v32 = *(_QWORD *)((v82 & 0xFFFFFFFFFFFFFF8) + 0x18);
      v15 = v76;
      if ((unint64_t)v19 >= v32 >> 1)
        goto LABEL_64;
      while (1)
      {
        v33 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v19, v21);
LABEL_32:
        specialized Array._endMutation()(v33);
        v36 = v82;
        swift_bridgeObjectRetain(v82);
        isa = Array._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease(v36);
        objc_msgSend(a2, "setViewControllers:", isa);

        v38 = objc_msgSend(a2, v17[67]);
        v39 = objc_msgSend(v38, "items");

        if (!v39)
          goto LABEL_48;
        v40 = sub_100009E04(0, &qword_1009D7C38, UINavigationItem_ptr);
        v21 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v39, v40);

        if ((unint64_t)v21 >> 62)
        {
LABEL_43:
          if (v21 < 0)
            v44 = v21;
          else
            v44 = v21 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain(v21);
          v45 = _CocoaArrayWrapper.endIndex.getter(v44);
          swift_bridgeObjectRelease(v21);
          if (!v45)
          {
LABEL_47:
            swift_bridgeObjectRelease(v21);
            goto LABEL_48;
          }
        }
        else if (!*(_QWORD *)((v21 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          goto LABEL_47;
        }
        if ((v21 & 0xC000000000000001) != 0)
          goto LABEL_62;
        v32 = *(_QWORD *)((v21 & 0xFFFFFFFFFFFFF8) + 0x10);
        if (v32)
        {
          v41 = *(id *)(v21 + 32);
          goto LABEL_38;
        }
        __break(1u);
LABEL_64:
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v32 > 1, v19 + 1, 1);
      }
    }
LABEL_26:
    v21 = a3;
    if (!swift_isUniquelyReferenced_nonNull_bridgeObject(v16)
      || v16 < 0
      || (v16 & 0x4000000000000000) != 0)
    {
      v16 = sub_100007D80(v16);
      v82 = v16;
    }
    if (!*(_QWORD *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_43;
    }
    v35 = *(void **)((v16 & 0xFFFFFFFFFFFFFF8) + 0x20);
    *(_QWORD *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x20) = v21;

    goto LABEL_32;
  }
  v20 = sub_100009E04(0, &qword_1009D7C38, UINavigationItem_ptr);
  v21 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v19, v20);

  if (!((unint64_t)v21 >> 62))
  {
    v19 = *(char **)((v21 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v19)
      goto LABEL_6;
    goto LABEL_23;
  }
  if (v21 < 0)
    v34 = v21;
  else
    v34 = v21 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v21);
  v19 = (char *)_CocoaArrayWrapper.endIndex.getter(v34);
  swift_bridgeObjectRelease(v21);
  if (!v19)
  {
LABEL_23:
    swift_bridgeObjectRelease(v21);
    goto LABEL_24;
  }
LABEL_6:
  if ((v21 & 0xC000000000000001) != 0)
  {
    v22 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v21);
LABEL_9:
    v15 = v22;
    swift_bridgeObjectRelease(v21);
    if ((unint64_t)v16 >> 62)
      goto LABEL_10;
    goto LABEL_25;
  }
  if (*(_QWORD *)((v21 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v22 = *(id *)(v21 + 32);
    goto LABEL_9;
  }
  __break(1u);
LABEL_62:
  v41 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v21);
LABEL_38:
  v42 = v41;
  swift_bridgeObjectRelease(v21);
  if (v42)
  {
    swift_unknownObjectRelease(v42);
    if (!v15 || v42 != v15)
      goto LABEL_56;
    v78 = a1;
    v43 = 0;
    v15 = v42;
    goto LABEL_50;
  }
LABEL_48:
  if (v15)
    goto LABEL_56;
  v78 = a1;
  v43 = 1;
LABEL_50:
  v46 = objc_msgSend(a2, v17[67], v72);
  v47 = objc_msgSend(v46, "isLocked");

  v48 = objc_msgSend(a2, v17[67]);
  objc_msgSend(v48, "setLocked:", 0);

  if ((v43 & 1) == 0)
  {
    v49 = objc_msgSend(a2, v17[67]);

  }
  v50 = objc_msgSend(a2, v17[67]);
  v51 = -[NSObject navigationItem](a3, "navigationItem");
  objc_msgSend(v50, "pushNavigationItem:animated:", v51, 0);

  v52 = objc_msgSend(a2, v17[67]);
  objc_msgSend(v52, "setLocked:", v47);

  v53 = a5;
  v54 = Logger.logObject.getter(v53);
  v55 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v54, v55))
  {
    v56 = swift_slowAlloc(22, -1);
    v75 = (_QWORD *)swift_slowAlloc(8, -1);
    v77 = swift_slowAlloc(32, -1);
    v81 = v77;
    *(_DWORD *)v56 = 136315394;
    v80 = sub_100040F58(0xD000000000000017, 0x80000001007BC630, &v81);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v80, &v81, v56 + 4, v56 + 12);
    *(_WORD *)(v56 + 12) = 2114;
    v80 = (uint64_t)v53;
    v57 = v15;
    v58 = v53;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v80, &v81, v56 + 14, v56 + 22);
    *v75 = v53;

    v15 = v57;
    _os_log_impl((void *)&_mh_execute_header, v54, v55, "%s: Applied nav bar workaround for %{public}@", (uint8_t *)v56, 0x16u);
    v59 = sub_10004CFD4((uint64_t *)&unk_1009D6190);
    swift_arrayDestroy(v75, 1, v59);
    swift_slowDealloc(v75, -1, -1);
    swift_arrayDestroy(v77, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v77, -1, -1);
    swift_slowDealloc(v56, -1, -1);
  }
  else
  {

  }
  a1 = v78;
LABEL_56:
  objc_msgSend(*(id *)(a1 + OBJC_IVAR___BKSplitViewContentHostingController_viewController), "didUpdateContentViewController", v72);
  v60 = a3;
  v61 = a5;
  v62 = v60;
  v63 = v61;
  v64 = Logger.logObject.getter(v63);
  v65 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v64, v65))
  {
    v66 = swift_slowAlloc(32, -1);
    v67 = (NSObject **)swift_slowAlloc(16, -1);
    v79 = swift_slowAlloc(32, -1);
    v81 = v79;
    *(_DWORD *)v66 = 136315650;
    v80 = sub_100040F58(0xD000000000000017, 0x80000001007BC630, &v81);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v80, &v81, v66 + 4, v66 + 12);
    *(_WORD *)(v66 + 12) = 2112;
    v80 = (uint64_t)v62;
    v68 = v62;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v80, &v81, v66 + 14, v66 + 22);
    *v67 = v62;

    *(_WORD *)(v66 + 22) = 2114;
    v80 = (uint64_t)v63;
    v69 = v63;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v80, &v81, v66 + 24, v66 + 32);
    v67[1] = v63;

    _os_log_impl((void *)&_mh_execute_header, v64, v65, "%s: Created content VC %@ for %{public}@", (uint8_t *)v66, 0x20u);
    v70 = sub_10004CFD4((uint64_t *)&unk_1009D6190);
    swift_arrayDestroy(v67, 2, v70);
    swift_slowDealloc(v67, -1, -1);
    swift_arrayDestroy(v79, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v79, -1, -1);
    swift_slowDealloc(v66, -1, -1);

  }
  else
  {

  }
  return swift_bridgeObjectRelease(v82);
}

void *SplitViewContentHostingController.activeRootBarWrapperViewController.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + OBJC_IVAR___BKSplitViewContentHostingController_viewController);
  v2 = v1;
  return v1;
}

uint64_t SplitViewContentHostingController.transferableNavigationControllers()()
{
  uint64_t v0;
  _QWORD *v1;
  _BYTE v3[24];

  v1 = (_QWORD *)(v0 + OBJC_IVAR___BKSplitViewContentHostingController_cachedControllers);
  swift_beginAccess(v0 + OBJC_IVAR___BKSplitViewContentHostingController_cachedControllers, v3, 0, 0);
  return swift_bridgeObjectRetain(*v1);
}

Swift::Void __swiftcall SplitViewContentHostingController.prepareNavigationControllerForTransferRootBarItem(with:)(Swift::String with)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t object;
  uint64_t countAndFlagsBits;
  uint64_t *v5;
  uint64_t v6;
  unint64_t v7;
  char v8;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v10;
  id v11;
  uint64_t v12;
  id v13;
  id v14;
  objc_super v15;
  uint64_t v16;
  _BYTE v17[24];

  v2 = v1;
  object = (uint64_t)with._object;
  countAndFlagsBits = with._countAndFlagsBits;
  v5 = (uint64_t *)(v2 + OBJC_IVAR___BKSplitViewContentHostingController_cachedControllers);
  swift_beginAccess(v2 + OBJC_IVAR___BKSplitViewContentHostingController_cachedControllers, v17, 33, 0);
  v6 = *v5;
  swift_bridgeObjectRetain(*v5);
  v7 = sub_10004CE80(countAndFlagsBits, object);
  LOBYTE(object) = v8;
  swift_bridgeObjectRelease(v6);
  if ((object & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v5);
    v10 = *v5;
    v16 = *v5;
    *v5 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_1002C1948(&qword_1009D0828);
      v10 = v16;
    }
    swift_bridgeObjectRelease(*(_QWORD *)(*(_QWORD *)(v10 + 48) + 16 * v7 + 8));
    v11 = *(id *)(*(_QWORD *)(v10 + 56) + 8 * v7);
    sub_1002BEABC(v7, v10);
    v12 = *v5;
    *v5 = v10;
    swift_bridgeObjectRelease(v12);
    swift_endAccess(v17);
    v15.receiver = *(id *)(v2 + OBJC_IVAR___BKSplitViewContentHostingController_viewController);
    v15.super_class = (Class)type metadata accessor for MainContentViewController();
    v13 = objc_msgSendSuper2(&v15, "contentNavigationController");
    if (v13)
    {
      v14 = v13;

      if (v14 == v11)
        MainContentViewController.contentNavigationController.setter(0);
    }

  }
  else
  {
    swift_endAccess(v17);
  }
}

void SplitViewContentHostingController.transfer(from:)(unint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void **p_vtable;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  _BOOL4 v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t ObjectType;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(uint64_t, uint64_t, __n128);
  __n128 v26;
  char *v27;
  uint64_t v28;
  char *v29;
  void *v30;
  int64_t v31;
  BOOL v32;
  uint64_t *v33;
  void *v34;
  uint64_t v35;
  id v36;
  id v37;
  id v38;
  unint64_t v39;
  char v40;
  id v41;
  id v42;
  uint64_t v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  Swift::Int v49;
  Swift::Int v50;
  unint64_t v51;
  char *v52;
  uint64_t v53;
  __n128 v54;
  uint64_t *v55;
  unint64_t v56;
  unint64_t v57;
  __objc2_class *v58;
  uint64_t v59;
  uint64_t v60;
  void *v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t *v64;
  id v65;
  uint64_t v66;
  void *v67;
  id v68;
  uint64_t v69;
  void *v70;
  void *v71;
  NSString v72;
  unint64_t v73;
  uint64_t v74;
  unint64_t v75;
  id v76;
  void *v77;
  uint64_t v78;
  unint64_t v79;
  id v80;
  uint64_t v81;
  uint64_t *v82;
  void *v83;
  uint64_t v84;
  uint64_t v85;
  void *v86;
  uint64_t v87;
  BOOL v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  Swift::String v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  void *v97;
  id v98;
  NSObject *v99;
  os_log_type_t v100;
  uint64_t v101;
  unint64_t v102;
  id v103;
  id v104;
  uint64_t v105;
  uint64_t v106;
  void *v107;
  unint64_t v108;
  char v109;
  unint64_t v110;
  id v111;
  void *v112;
  id v113;
  uint64_t v114;
  NSString v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  id v124;
  Class isa;
  uint64_t *v126;
  uint64_t v127;
  uint64_t v128;
  _QWORD *v129;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v131;
  char *v132;
  char *v133;
  NSObject *v134;
  os_log_type_t v135;
  uint64_t v136;
  unint64_t v137;
  uint64_t v138;
  id v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t *v142;
  __n128 v143;
  uint64_t *v144;
  id v145;
  char v146;
  unint64_t v147;
  unint64_t v148;
  int64_t v149;
  uint64_t v150;
  uint64_t *v151;
  void *v152;
  uint64_t v153;
  id v154;
  char *v155;
  char *v156;
  uint64_t *v157;
  uint64_t *v158;
  BOOL v159;
  char *v160;
  unint64_t v161;
  char *v162;
  uint64_t v163;
  uint64_t *v164;
  _BYTE *v166;
  unint64_t v167;
  uint64_t v168;
  uint64_t *v169;
  _QWORD *v170;
  _QWORD *v171;
  _QWORD *v172;
  _QWORD *v173;
  _QWORD *v174;
  uint64_t v175;
  NSObject *v176;
  os_log_type_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  void *v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  unsigned __int8 v189;
  unint64_t v190;
  char v191;
  double v192;
  id v193;
  uint64_t v194;
  id v195;
  void *v196;
  id v197;
  uint64_t v198;
  uint64_t v199;
  unint64_t v200;
  unint64_t v201;
  void *v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  unsigned __int8 v206;
  NSString v207;
  uint64_t v208;
  id v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  NSObject *v214;
  os_log_type_t v215;
  uint8_t *v216;
  uint64_t v217;
  uint64_t *v218;
  uint64_t v219;
  uint64_t v220;
  void *v221;
  void **v222;
  id v223;
  id v224;
  unsigned int v225;
  uint64_t *v226;
  uint64_t v227;
  uint64_t v228;
  NSObject *v229;
  os_log_type_t v230;
  uint8_t *v231;
  void **v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t *v235;
  char *v236;
  uint64_t v237;
  __n128 v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  id v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  char *v247;
  char *v248;
  uint64_t v249;
  void **v250;
  char *v251;
  __n128 v252;
  uint64_t v253;
  int64_t v254;
  id v255;
  unint64_t v256;
  uint64_t v257;
  uint64_t v258;
  id v259;
  uint64_t *v260;
  uint64_t *v261;
  id v262;
  id v263;
  uint64_t *v264;
  uint64_t v265;
  uint64_t v266[3];
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270[3];
  objc_super v271;
  uint64_t v272;
  uint64_t v273;
  _OWORD v274[2];
  uint64_t v275;
  __int128 v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279[6];
  uint64_t v280;
  _QWORD v281[5];
  unint64_t v282;
  uint64_t v283;
  __int128 v284;
  __int128 v285;
  uint64_t v286;
  _BYTE v287[16];
  __int128 v288;
  _BYTE v289[16];
  __int128 v290;
  __int128 v291;
  Swift::String v292;
  Swift::String v293;

  v258 = a2;
  v4 = type metadata accessor for Logger(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  p_vtable = (void **)((char *)&v244 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (qword_1009CDDE0 == -1)
    goto LABEL_2;
LABEL_134:
  swift_once(&qword_1009CDDE0, sub_1002BB738);
LABEL_2:
  v8 = sub_100048F64(v4, (uint64_t)qword_1009D78D8);
  v245 = v5;
  v246 = v4;
  (*(void (**)(void **, uint64_t, uint64_t))(v5 + 16))(p_vtable, v8, v4);
  v9 = swift_unknownObjectRetain_n(a1, 2);
  v10 = Logger.logObject.getter(v9);
  v11 = static os_log_type_t.default.getter(v10);
  v12 = os_log_type_enabled(v10, v11);
  v250 = p_vtable;
  if (v12)
  {
    v13 = (uint8_t *)swift_slowAlloc(12, -1);
    v14 = swift_slowAlloc(32, -1);
    v280 = v14;
    *(_DWORD *)v13 = 136315138;
    v282 = a1;
    v283 = v258;
    swift_unknownObjectRetain(a1);
    v15 = sub_10004CFD4((uint64_t *)&unk_1009E8880);
    v16 = sub_10004CFD4((uint64_t *)&unk_1009D7980);
    if (swift_dynamicCast(&v284, &v282, v15, v16, 6))
    {
      v17 = *((_QWORD *)&v285 + 1);
      v18 = v286;
      sub_10003F198(&v284, *((uint64_t *)&v285 + 1));
      v19 = dispatch thunk of CustomStringConvertible.description.getter(v17, v18);
      v21 = v20;
      _s5Books15CurrentPageViewVwxx_0(&v284);
    }
    else
    {
      v286 = 0;
      v284 = 0u;
      v285 = 0u;
      sub_100010960((uint64_t)&v284, &qword_1009E8890);
      v21 = 0xE90000000000003ELL;
      v19 = 0x6E776F6E6B6E753CLL;
    }
    *(_QWORD *)&v284 = sub_100040F58(v19, v21, &v280);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v284, (char *)&v284 + 8, v13 + 4, v13 + 12);
    swift_unknownObjectRelease_n(a1, 2);
    swift_bridgeObjectRelease(v21);
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "Starting to transfer navigation from forwarder %s", v13, 0xCu);
    swift_arrayDestroy(v14, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v14, -1, -1);
    swift_slowDealloc(v13, -1, -1);

    p_vtable = v250;
  }
  else
  {
    swift_unknownObjectRelease_n(a1, 2);

  }
  ObjectType = swift_getObjectType();
  v23 = v258;
  v24 = (*(uint64_t (**)(uint64_t, uint64_t))(v258 + 16))(ObjectType, v258);
  v273 = v24;
  v25 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v23 + 8);
  v26 = swift_bridgeObjectRetain(v24);
  v257 = ObjectType;
  v27 = (char *)v25(ObjectType, v23, v26);
  v28 = 0x1009D7000;
  v247 = v27;
  v256 = a1;
  if (!v27)
  {
    swift_bridgeObjectRelease(v24);
    v248 = 0;
    v244 = 0;
    goto LABEL_179;
  }
  v29 = v27;
  v30 = *(void **)&v27[OBJC_IVAR___BKRootBarItem_identifier];
  v31 = *(_QWORD *)&v27[OBJC_IVAR___BKRootBarItem_identifier + 8];
  v32 = v30 == (void *)0x7972617262696CLL && v31 == 0xE700000000000000;
  if (!v32
    && (_stringCompareWithSmolCheck(_:_:expecting:)(*(_QWORD *)&v27[OBJC_IVAR___BKRootBarItem_identifier], *(_QWORD *)&v27[OBJC_IVAR___BKRootBarItem_identifier + 8], 0x7972617262696CLL, 0xE700000000000000, 0) & 1) == 0)
  {
    v52 = v29;
    swift_bridgeObjectRelease(v24);
    v244 = 0;
    goto LABEL_48;
  }
  v263 = v30;
  v33 = (uint64_t *)(v249 + OBJC_IVAR___BKSplitViewContentHostingController_standardItems);
  swift_beginAccess(v249 + OBJC_IVAR___BKSplitViewContentHostingController_standardItems, &v265, 0, 0);
  v34 = v29;
  v261 = v33;
  v35 = *v33;
  swift_bridgeObjectRetain(v31);
  swift_bridgeObjectRetain(v35);
  v262 = v34;
  v2 = (uint64_t *)sub_1002C5E9C(v35, 0x7972617262696CLL, 0xE700000000000000);
  v244 = 0;
  swift_bridgeObjectRelease(v35);
  v264 = v2;
  if (!v2)
  {
    v36 = objc_allocWithZone((Class)type metadata accessor for RootBarItem());
    v37 = RootBarItem.init(identifier:isPlaceholder:url:titleOverride:iconNameOverride:selectedIconNameOverride:countryCode:editNameOnSelect:)(0x7972617262696CLL, 0xE700000000000000, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
    if ((objc_msgSend(v37, "isLibraryCollection") & 1) == 0)
    {
      swift_bridgeObjectRelease(v24);
      swift_bridgeObjectRelease(v31);

      v248 = v247;
      goto LABEL_179;
    }
    v264 = (uint64_t *)v37;
  }
  v29 = v247;
  v38 = v263;
  if (!*(_QWORD *)(v24 + 16))
    goto LABEL_47;
  swift_bridgeObjectRetain(v31);
  v39 = sub_10004CE80((uint64_t)v38, v31);
  if ((v40 & 1) == 0)
  {
    swift_bridgeObjectRelease(v31);
    v29 = v247;
LABEL_47:
    swift_bridgeObjectRelease(v24);
    swift_bridgeObjectRelease(v31);

LABEL_48:
    v248 = v29;
    goto LABEL_179;
  }
  v41 = *(id *)(*(_QWORD *)(v24 + 56) + 8 * v39);
  swift_bridgeObjectRelease(v31);
  swift_bridgeObjectRelease(v24);

  (*(void (**)(id, int64_t, uint64_t))(v258 + 24))(v38, v31, v257);
  v259 = v41;
  v42 = objc_msgSend(v41, "viewControllers");
  v260 = (uint64_t *)sub_100009E04(0, (unint64_t *)&qword_1009D8D70, UIViewController_ptr);
  v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v42, v260);

  v282 = v4;
  v28 = (unint64_t)v4 >> 62;
  if ((unint64_t)v4 >> 62)
    goto LABEL_139;
  v43 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(v4);
  if (!v43)
    goto LABEL_28;
  while (1)
  {
    v5 = 0;
    p_vtable = &OBJC_METACLASS___BKMinifiedAssetPresenter.vtable;
    while (1)
    {
      v44 = (v4 & 0xC000000000000001) != 0
          ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v5, v4)
          : *(id *)(v4 + 8 * v5 + 32);
      a1 = (unint64_t)v44;
      v45 = objc_opt_self(BKLibraryCollectionsListViewController);
      if (swift_dynamicCastObjCClass(a1, v45))
        break;

      v46 = v5 + 1;
      if (__OFADD__(v5, 1))
      {
        __break(1u);
LABEL_133:
        __break(1u);
        goto LABEL_134;
      }
      ++v5;
      if (v46 == v43)
        goto LABEL_28;
    }
    swift_bridgeObjectRelease(v4);

    v75 = v5 + 1;
    if (!__OFADD__(v5, 1))
    {
      if (!v28)
      {
        if (v75 != *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_71;
        break;
      }
      goto LABEL_308;
    }
LABEL_307:
    __break(1u);
LABEL_308:
    v240 = v4 < 0 ? v4 : v4 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v4);
    v241 = _CocoaArrayWrapper.endIndex.getter(v240);
    swift_bridgeObjectRelease(v4);
    if (v75 == v241)
      break;
LABEL_71:
    v28 = v5 + 5;
    while (1)
    {
      a1 = v28 - 4;
      if ((v4 & 0xC000000000000001) != 0)
      {
        v76 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v28 - 4, v4);
        goto LABEL_76;
      }
      if ((a1 & 0x8000000000000000) != 0)
        break;
      if (a1 >= *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_136;
      v76 = *(id *)(v4 + 8 * v28);
LABEL_76:
      v77 = v76;
      v78 = objc_opt_self(p_vtable + 322);
      v2 = (uint64_t *)swift_dynamicCastObjCClass(v77, v78);

      if (!v2)
      {
        if (a1 != v5)
        {
          if ((v4 & 0xC000000000000001) != 0)
          {
            v81 = specialized _ArrayBuffer._getElementSlowPath(_:)(v5, v4);
            v82 = (uint64_t *)specialized _ArrayBuffer._getElementSlowPath(_:)(v28 - 4, v4);
          }
          else
          {
            if (v5 < 0)
              goto LABEL_160;
            v79 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
            if (v5 >= v79)
              goto LABEL_161;
            v80 = *(id *)(v4 + 8 * v5 + 32);
            if ((a1 & 0x8000000000000000) != 0)
              goto LABEL_162;
            if (a1 >= v79)
              goto LABEL_164;
            v81 = (uint64_t)v80;
            v82 = (uint64_t *)*(id *)(v4 + 8 * v28);
          }
          v2 = v82;
          if (!swift_isUniquelyReferenced_nonNull_bridgeObject(v4)
            || v4 < 0
            || (v4 & 0x4000000000000000) != 0)
          {
            v4 = sub_100007D80(v4);
            v282 = v4;
          }
          v83 = *(void **)((v4 & 0xFFFFFFFFFFFFFF8) + 8 * v5 + 0x20);
          *(_QWORD *)((v4 & 0xFFFFFFFFFFFFFF8) + 8 * v5 + 0x20) = v2;

          specialized Array._endMutation()(v84);
          v4 = v282;
          if (!swift_isUniquelyReferenced_nonNull_bridgeObject(v282)
            || v4 < 0
            || (v4 & 0x4000000000000000) != 0)
          {
            v4 = sub_100007D80(v4);
            v282 = v4;
          }
          if ((a1 & 0x8000000000000000) != 0)
            goto LABEL_163;
          v85 = v4 & 0xFFFFFFFFFFFFFF8;
          if (a1 >= *(_QWORD *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10))
            goto LABEL_165;
          v86 = *(void **)(v85 + 8 * v28);
          *(_QWORD *)(v85 + 8 * v28) = v81;

          v4 = (uint64_t)&v282;
          specialized Array._endMutation()(v87);
        }
        v88 = __OFADD__(v5++, 1);
        if (v88)
          goto LABEL_138;
      }
      v89 = v28 - 3;
      if (__OFADD__(a1, 1))
        goto LABEL_137;
      v4 = v282;
      if (v282 >> 62)
      {
        if ((v282 & 0x8000000000000000) != 0)
          v91 = v282;
        else
          v91 = v282 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v282);
        v90 = _CocoaArrayWrapper.endIndex.getter(v91);
        swift_bridgeObjectRelease(v4);
      }
      else
      {
        v90 = *(_QWORD *)((v282 & 0xFFFFFFFFFFFFF8) + 0x10);
      }
      ++v28;
      if (v89 == v90)
        goto LABEL_30;
    }
    __break(1u);
LABEL_136:
    __break(1u);
LABEL_137:
    __break(1u);
LABEL_138:
    __break(1u);
LABEL_139:
    if (v4 < 0)
      v116 = v4;
    else
      v116 = v4 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v4);
    v43 = _CocoaArrayWrapper.endIndex.getter(v116);
    if (!v43)
    {
LABEL_28:
      swift_bridgeObjectRelease(v4);
      if (!v28)
      {
        v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
        break;
      }
      goto LABEL_166;
    }
  }
LABEL_30:
  while (2)
  {
    if ((unint64_t)v4 >> 62)
    {
      if (v4 < 0)
        v117 = v4;
      else
        v117 = v4 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v4);
      v47 = _CocoaArrayWrapper.endIndex.getter(v117);
      swift_bridgeObjectRelease(v4);
    }
    else
    {
      v47 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    if (v47 < v5)
    {
      __break(1u);
    }
    else
    {
      sub_1002C68E8(v5, v47);
      v4 = v282;
      v28 = v282 >> 62;
      if (!(v282 >> 62))
      {
        v48 = *(_QWORD *)((v282 & 0xFFFFFFFFFFFFF8) + 0x10);
        if (v48 >= 1)
          a1 = 1;
        else
          a1 = *(_QWORD *)((v282 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain(v282);
        if (v48 >= a1)
        {
          if ((v4 & 0xC000000000000001) == 0)
            goto LABEL_42;
LABEL_39:
          if ((unint64_t)v48 >= 2)
          {
            v49 = a1;
            do
            {
              v50 = v49 + 1;
              _ArrayBuffer._typeCheckSlowPath(_:)(v49);
              v49 = v50;
            }
            while (v48 != v50);
          }
          goto LABEL_42;
        }
        goto LABEL_159;
      }
    }
    if (v4 < 0)
      v118 = v4;
    else
      v118 = v4 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain_n(v4, 2);
    v48 = _CocoaArrayWrapper.endIndex.getter(v118);
    swift_bridgeObjectRelease(v4);
    if ((v48 & 0x8000000000000000) == 0)
    {
      if (v48 >= 1)
        a1 = 1;
      else
        a1 = v48;
      swift_bridgeObjectRetain(v4);
      v119 = _CocoaArrayWrapper.endIndex.getter(v118);
      swift_bridgeObjectRelease(v4);
      if (v119 >= (uint64_t)a1)
      {
        swift_bridgeObjectRetain(v4);
        v120 = _CocoaArrayWrapper.endIndex.getter(v118);
        swift_bridgeObjectRelease(v4);
        if (v120 >= v48)
          goto LABEL_326;
        __break(1u);
      }
LABEL_159:
      __break(1u);
LABEL_160:
      __break(1u);
LABEL_161:
      __break(1u);
LABEL_162:
      __break(1u);
LABEL_163:
      __break(1u);
LABEL_164:
      __break(1u);
LABEL_165:
      __break(1u);
LABEL_166:
      if (v4 < 0)
        v121 = v4;
      else
        v121 = v4 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v4);
      v5 = _CocoaArrayWrapper.endIndex.getter(v121);
      swift_bridgeObjectRelease(v4);
      continue;
    }
    break;
  }
LABEL_325:
  __break(1u);
LABEL_326:
  if ((v4 & 0xC000000000000001) != 0)
    goto LABEL_39;
LABEL_42:
  if (v28)
  {
    if (v4 < 0)
      v53 = v4;
    else
      v53 = v4 & 0xFFFFFFFFFFFFFF8;
    v54 = swift_bridgeObjectRetain(v4);
    v5 = _CocoaArrayWrapper.subscript.getter(a1, v48, v53, v54);
    v2 = v55;
    a1 = v56;
    v51 = v57;
    swift_bridgeObjectRelease_n(v4, 2);
  }
  else
  {
    v5 = v4 & 0xFFFFFFFFFFFFFF8;
    v2 = (uint64_t *)((v4 & 0xFFFFFFFFFFFFFF8) + 32);
    v51 = (2 * v48) | 1;
  }
  p_vtable = (void **)(v51 >> 1);
  if (a1 == v51 >> 1)
  {
LABEL_55:
    swift_unknownObjectRelease(v5);
    v5 = (uint64_t)v264;
    goto LABEL_125;
  }
  v58 = &OBJC_METACLASS___PPTSubtestBasedOpenTest;
  while (1)
  {
    if ((uint64_t)a1 >= (uint64_t)p_vtable)
      goto LABEL_133;
    v4 = v2[a1];
    v59 = objc_opt_self(BKLibraryBookshelfCollectionViewController);
    v60 = swift_dynamicCastObjCClass(v4, v59);
    if (v60)
    {
      v61 = (void *)v60;
      v4 = (uint64_t)(id)v4;
      v48 = (uint64_t)objc_msgSend(v61, "collection");

      if (v48)
        break;
    }
    if (p_vtable == (void **)++a1)
      goto LABEL_55;
  }
  swift_unknownObjectRelease(v5);
  v62 = v282;
  if ((v282 & 0xC000000000000001) == 0)
  {
    v63 = (uint64_t)v250;
    v64 = v264;
    if ((a1 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (a1 < *(_QWORD *)((v282 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v65 = *(id *)(v282 + 8 * a1 + 32);
      goto LABEL_65;
    }
    __break(1u);
LABEL_318:
    __break(1u);
    goto LABEL_319;
  }
  while (1)
  {
    v65 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(a1, v62);
    v63 = (uint64_t)v250;
    v64 = v264;
LABEL_65:
    v66 = objc_opt_self(&v58[96]);
    v67 = (void *)swift_dynamicCastObjCClass(v65, v66);
    if (v67)
    {
      v255 = v65;
      v68 = objc_msgSend(v67, "collectionID");
      v69 = static String._unconditionallyBridgeFromObjectiveC(_:)(v68);
      v71 = v70;

      v72 = String._bridgeToObjectiveC()();
      v73 = _s5Books20RootBarItemsProviderC14itemIdentifier22forDefaultCollectionIDSSSgSo09BCDefaultjK0a_tFZ_0((uint64_t)v72);
      v48 = v74;

      if (v48)
      {
        swift_bridgeObjectRelease(v71);
      }
      else
      {
        *(_QWORD *)&v284 = 0x3A6D6F74737563;
        *((_QWORD *)&v284 + 1) = 0xE700000000000000;
        v92._countAndFlagsBits = v69;
        v92._object = v71;
        String.append(_:)(v92);
        swift_bridgeObjectRelease(v71);
        v48 = *((_QWORD *)&v284 + 1);
        v73 = v284;
      }
      v93 = *v261;
      swift_bridgeObjectRetain(v48);
      swift_bridgeObjectRetain(v93);
      v94 = v244;
      v96 = v73;
      v97 = sub_1002C5E9C(v95, v73, v48);
      v244 = v94;
      swift_bridgeObjectRelease(v93);
      swift_bridgeObjectRelease(v48);
      if (v97
        || (v98 = objc_allocWithZone((Class)type metadata accessor for RootBarItem()),
            swift_bridgeObjectRetain(v48),
            v97 = RootBarItem.init(identifier:isPlaceholder:url:titleOverride:iconNameOverride:selectedIconNameOverride:countryCode:editNameOnSelect:)(v96, v48, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0), objc_msgSend(v97, "isLibraryCollection")))
      {
        v264 = v64;
        swift_bridgeObjectRelease(v48);
        swift_bridgeObjectRetain_n(v31, 2);
        v5 = v97;
        v4 = v63;
        v99 = Logger.logObject.getter(v5);
        v100 = static os_log_type_t.default.getter(v99);
        if (os_log_type_enabled(v99, v100))
        {
          v101 = swift_slowAlloc(22, -1);
          v261 = (uint64_t *)swift_slowAlloc(64, -1);
          *(_QWORD *)&v284 = v261;
          *(_DWORD *)v101 = 136446466;
          swift_bridgeObjectRetain(v31);
          v280 = sub_100040F58((uint64_t)v263, v31, (uint64_t *)&v284);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v280, v281, v101 + 4, v101 + 12);
          swift_bridgeObjectRelease_n(v31, 3);
          *(_WORD *)(v101 + 12) = 2082;
          v254 = v101 + 14;
          v48 = *(_QWORD *)(v5 + OBJC_IVAR___BKRootBarItem_identifier);
          v102 = *(_QWORD *)(v5 + OBJC_IVAR___BKRootBarItem_identifier + 8);
          swift_bridgeObjectRetain(v102);
          v280 = sub_100040F58(v48, v102, (uint64_t *)&v284);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v280, v281, v254, v101 + 22);

          swift_bridgeObjectRelease(v102);
          _os_log_impl((void *)&_mh_execute_header, v99, v100, "Removing bottom VCs from the source nav stack of '%{public}s' item, in order to transfer it to %{public}s sidebar item", (uint8_t *)v101, 0x16u);
          v4 = (uint64_t)v261;
          swift_arrayDestroy(v261, 2, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v4, -1, -1);
          swift_slowDealloc(v101, -1, -1);
        }
        else
        {

          swift_bridgeObjectRelease_n(v31, 2);
        }

        if (!a1)
        {
          v104 = (id)v5;
          goto LABEL_122;
        }
        if ((a1 & 0x8000000000000000) != 0)
          goto LABEL_318;
        v4 = v282;
        if (!(v282 >> 62))
        {
          v28 = *(_QWORD *)((v282 & 0xFFFFFFFFFFFFF8) + 0x10);
          v103 = (id)v5;
          if (v28 < 0)
            goto LABEL_120;
          goto LABEL_119;
        }
LABEL_319:
        if (v4 < 0)
          v242 = v4;
        else
          v242 = v4 & 0xFFFFFFFFFFFFFF8;
        v243 = (id)v5;
        swift_bridgeObjectRetain(v4);
        v28 = _CocoaArrayWrapper.endIndex.getter(v242);
        swift_bridgeObjectRelease(v4);
        if (v28 < 0)
        {
LABEL_120:
          sub_1002C68E8(0, a1);
LABEL_122:
          v105 = *(_QWORD *)(v5 + OBJC_IVAR___BKRootBarItem_identifier);
          v106 = *(_QWORD *)(v5 + OBJC_IVAR___BKRootBarItem_identifier + 8);
          swift_bridgeObjectRetain(v106);
          v107 = (void *)sub_1002BDC24(v105, v106, (uint64_t)&qword_1009D0828, (void (*)(uint64_t))sub_1002C1948);
          swift_bridgeObjectRelease(v106);

          goto LABEL_125;
        }
LABEL_119:
        if (v28 >= (uint64_t)a1)
          goto LABEL_120;
        __break(1u);
        goto LABEL_325;
      }

      swift_bridgeObjectRelease(v48);
    }
    else
    {

    }
    v5 = (uint64_t)v64;
LABEL_125:
    RootBarItem.title.getter((uint64_t *)v274);
    v290 = v274[0];
    v291 = v274[1];
    sub_100210D88((uint64_t)&v290);
    sub_100025B3C((uint64_t)&v275, (uint64_t)v289, &qword_1009D2A80);
    sub_100210D88((uint64_t)v289);
    v284 = v291;
    v108 = sub_1001F15BC();
    v109 = Collection.isNotEmpty.getter(&type metadata for String, v108);
    sub_100210D88((uint64_t)&v291);
    v110 = v282;
    if ((v109 & 1) == 0)
      goto LABEL_175;
    if (v282 >> 62)
      break;
    v58 = *(__objc2_class **)((v282 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v282);
    if (!v58)
      goto LABEL_174;
LABEL_128:
    if ((v110 & 0xC000000000000001) != 0)
    {
      v111 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v110);
      goto LABEL_131;
    }
    if (*(_QWORD *)((v110 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v111 = *(id *)(v110 + 32);
LABEL_131:
      v112 = v111;
      v113 = objc_msgSend(v111, "navigationItem", swift_bridgeObjectRelease(v110).n128_f64[0]);

      RootBarItem.title.getter((uint64_t *)&v276);
      v114 = v277;
      v288 = v276;
      sub_100210D88((uint64_t)&v288);
      sub_100025B3C((uint64_t)&v278, (uint64_t)v287, &qword_1009D2A80);
      sub_100210D88((uint64_t)v287);
      v115 = String._bridgeToObjectiveC()();
      objc_msgSend(v113, "setTitle:", v115, swift_bridgeObjectRelease(v114).n128_f64[0]);

      v110 = v282;
      goto LABEL_175;
    }
    __break(1u);
  }
  if ((v282 & 0x8000000000000000) != 0)
    v122 = v282;
  else
    v122 = v282 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v282);
  v58 = (__objc2_class *)_CocoaArrayWrapper.endIndex.getter(v122);
  if (v58)
    goto LABEL_128;
LABEL_174:
  swift_bridgeObjectRelease(v110);
LABEL_175:
  v123 = (char *)(id)v5;

  v124 = v259;
  swift_bridgeObjectRetain(v110);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v124, "setViewControllers:", isa, swift_bridgeObjectRelease(v110).n128_f64[0]);

  v126 = (uint64_t *)&v123[OBJC_IVAR___BKRootBarItem_identifier];
  v127 = *(_QWORD *)&v123[OBJC_IVAR___BKRootBarItem_identifier];
  v128 = *(_QWORD *)&v123[OBJC_IVAR___BKRootBarItem_identifier + 8];
  v129 = (_QWORD *)(v249 + OBJC_IVAR___BKSplitViewContentHostingController_cachedControllers);
  swift_beginAccess(v249 + OBJC_IVAR___BKSplitViewContentHostingController_cachedControllers, &v284, 33, 0);
  v2 = (uint64_t *)v124;
  swift_bridgeObjectRetain(v128);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v129);
  v280 = *v129;
  *v129 = 0x8000000000000000;
  sub_1002C3F04((uint64_t)v2, v127, v128, isUniquelyReferenced_nonNull_native, &qword_1009D0828, (void (*)(void))sub_10037A770, (void (*)(unint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_10037FCB8);
  v131 = *v129;
  *v129 = v280;
  swift_bridgeObjectRelease(v128);
  swift_bridgeObjectRelease(v131);
  swift_endAccess(&v284);
  v248 = v123;
  v132 = v123;
  swift_bridgeObjectRetain(v31);
  v133 = v132;
  v134 = Logger.logObject.getter(v133);
  v135 = static os_log_type_t.default.getter(v134);
  if (os_log_type_enabled(v134, v135))
  {
    v136 = swift_slowAlloc(22, -1);
    v262 = (id)swift_slowAlloc(64, -1);
    *(_QWORD *)&v284 = v262;
    *(_DWORD *)v136 = 136446466;
    swift_bridgeObjectRetain(v31);
    v280 = sub_100040F58((uint64_t)v263, v31, (uint64_t *)&v284);
    v264 = v2;
    v2 = v281;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v280, v281, v136 + 4, v136 + 12);
    swift_bridgeObjectRelease_n(v31, 3);
    *(_WORD *)(v136 + 12) = 2080;
    v138 = *v126;
    v137 = v126[1];
    swift_bridgeObjectRetain(v137);
    v280 = sub_100040F58(v138, v137, (uint64_t *)&v284);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v280, v281, v136 + 14, v136 + 22);

    swift_bridgeObjectRelease(v137);
    _os_log_impl((void *)&_mh_execute_header, v134, v135, "Converted the nav stack of '%{public}s' item from navigation forwarder to %s sidebar item", (uint8_t *)v136, 0x16u);
    v139 = v262;
    swift_arrayDestroy(v262, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v139, -1, -1);
    swift_slowDealloc(v136, -1, -1);

  }
  else
  {
    swift_bridgeObjectRelease_n(v31, 2);

  }
  a1 = v256;
  swift_bridgeObjectRelease(v282);
  p_vtable = v250;
  v28 = (uint64_t)&qword_1009D7000;
LABEL_179:
  v140 = *(_QWORD *)(v273 + 64);
  v253 = v273 + 64;
  v4 = 1 << *(_BYTE *)(v273 + 32);
  v141 = -1;
  if (v4 < 64)
    v141 = ~(-1 << v4);
  v75 = v141 & v140;
  v142 = (uint64_t *)(v249 + OBJC_IVAR___BKSplitViewContentHostingController_standardItems);
  v255 = (id)(v249 + *(_QWORD *)(v28 + 2344));
  v259 = (id)v273;
  swift_bridgeObjectRetain(v273);
  v260 = v142;
  v143 = swift_beginAccess(v142, &v272, 0, 0);
  v31 = 0;
  v254 = (unint64_t)(v4 + 63) >> 6;
  v251 = (char *)&type metadata for Any + 8;
  v143.n128_u64[0] = 136446210;
  v252 = v143;
  while (2)
  {
    if (v75)
    {
      v261 = (uint64_t *)((v75 - 1) & v75);
      v147 = __clz(__rbit64(v75)) | (v31 << 6);
      goto LABEL_198;
    }
    v88 = __OFADD__(v31++, 1);
    if (v88)
      goto LABEL_297;
    if (v31 < v254)
    {
      v148 = *(_QWORD *)(v253 + 8 * v31);
      if (!v148)
      {
        v149 = v31 + 1;
        if (v31 + 1 >= v254)
          break;
        v148 = *(_QWORD *)(v253 + 8 * v149);
        if (!v148)
        {
          v149 = v31 + 2;
          if (v31 + 2 >= v254)
            break;
          v148 = *(_QWORD *)(v253 + 8 * v149);
          if (!v148)
          {
            v149 = v31 + 3;
            if (v31 + 3 >= v254)
              break;
            v148 = *(_QWORD *)(v253 + 8 * v149);
            if (!v148)
            {
              while (1)
              {
                v31 = v149 + 1;
                if (__OFADD__(v149, 1))
                  goto LABEL_299;
                if (v31 >= v254)
                  goto LABEL_275;
                v148 = *(_QWORD *)(v253 + 8 * v31);
                ++v149;
                if (v148)
                  goto LABEL_197;
              }
            }
          }
        }
        v31 = v149;
      }
LABEL_197:
      v261 = (uint64_t *)((v148 - 1) & v148);
      v147 = __clz(__rbit64(v148)) + (v31 << 6);
LABEL_198:
      v150 = *((_QWORD *)v259 + 6) + 16 * v147;
      v151 = *(uint64_t **)v150;
      v2 = *(uint64_t **)(v150 + 8);
      v152 = *(void **)(*((_QWORD *)v259 + 7) + 8 * v147);
      v4 = *v260;
      if ((unint64_t)*v260 >> 62)
      {
        if (v4 < 0)
          v208 = *v260;
        else
          v208 = v4 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain_n(*v260, 2);
        swift_bridgeObjectRetain(v2);
        v209 = v152;
        v153 = _CocoaArrayWrapper.endIndex.getter(v208);
      }
      else
      {
        v153 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain_n(*v260, 2);
        swift_bridgeObjectRetain(v2);
        v154 = v152;
      }
      v263 = v152;
      v264 = v151;
      v262 = (id)v31;
      if (v153)
      {
        v31 = v4 & 0xC000000000000001;
        if ((v4 & 0xC000000000000001) != 0)
          v155 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v4);
        else
          v155 = (char *)*(id *)(v4 + 32);
        v28 = (uint64_t)v155;
        v156 = &v155[OBJC_IVAR___BKRootBarItem_identifier];
        v157 = *(uint64_t **)&v155[OBJC_IVAR___BKRootBarItem_identifier];
        v158 = (uint64_t *)*((_QWORD *)v156 + 1);
        v159 = v157 == v151 && v158 == v2;
        if (v159 || (_stringCompareWithSmolCheck(_:_:expecting:)(v157, v158, v151, v2, 0) & 1) != 0)
        {
LABEL_208:
          swift_bridgeObjectRelease_n(v4, 2);
          goto LABEL_230;
        }

        if (v153 != 1)
        {
          v75 = 5;
          while (1)
          {
            v160 = v31
                 ? (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v75 - 4, v4)
                 : (char *)*(id *)(v4 + 8 * v75);
            v28 = (uint64_t)v160;
            v161 = v75 - 3;
            if (__OFADD__(v75 - 4, 1))
              break;
            v162 = &v160[OBJC_IVAR___BKRootBarItem_identifier];
            v163 = *(_QWORD *)&v160[OBJC_IVAR___BKRootBarItem_identifier];
            v164 = (uint64_t *)*((_QWORD *)v162 + 1);
            if (*(uint64_t **)v162 == v264 && v164 == v2)
            {
              v151 = v264;
              goto LABEL_208;
            }
            if ((_stringCompareWithSmolCheck(_:_:expecting:)(v163, v164, v264, v2, 0) & 1) != 0)
            {
              v151 = v264;
              goto LABEL_208;
            }

            ++v75;
            if (v161 == v153)
              goto LABEL_221;
          }
          __break(1u);
LABEL_297:
          __break(1u);
LABEL_298:
          __break(1u);
LABEL_299:
          __break(1u);
LABEL_300:
          if (v4 < 0)
            v237 = v4;
          else
            v237 = v4 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain(v4);
          v5 = _CocoaArrayWrapper.endIndex.getter(v237);
          if (!v5)
            goto LABEL_304;
          goto LABEL_292;
        }
      }
LABEL_221:
      swift_bridgeObjectRelease_n(v4, 2);
      v4 = type metadata accessor for RootBarItem();
      v166 = objc_allocWithZone((Class)v4);
      v151 = v264;
      if (v264 == (uint64_t *)0x5F676E6964616572 && v2 == (uint64_t *)0xEB00000000776F6ELL
        || (_stringCompareWithSmolCheck(_:_:expecting:)(v264, v2, 0x5F676E6964616572, 0xEB00000000776F6ELL, 0) & 1) != 0
        || v151 == (uint64_t *)0x776F6E5F64616572 && v2 == (uint64_t *)0xE800000000000000
        || (_stringCompareWithSmolCheck(_:_:expecting:)(v151, v2, 0x776F6E5F64616572, 0xE800000000000000, 0) & 1) != 0)
      {
        v167 = 0xE400000000000000;
        v168 = 1701670760;
      }
      else
      {
        swift_bridgeObjectRetain(v2);
        v168 = (uint64_t)v151;
        v167 = (unint64_t)v2;
      }
      v169 = (uint64_t *)&v166[OBJC_IVAR___BKRootBarItem_identifier];
      *v169 = v168;
      v169[1] = v167;
      v166[OBJC_IVAR___BKRootBarItem_isPlaceholder] = 0;
      v170 = &v166[OBJC_IVAR___BKRootBarItem_url];
      *v170 = 0;
      v170[1] = 0;
      v171 = &v166[OBJC_IVAR___BKRootBarItem_titleOverride];
      *v171 = 0;
      v171[1] = 0;
      v172 = &v166[OBJC_IVAR___BKRootBarItem_iconNameOverride];
      *v172 = 0;
      v172[1] = 0;
      v173 = &v166[OBJC_IVAR___BKRootBarItem_selectedIconNameOverride];
      *v173 = 0;
      v173[1] = 0;
      v174 = &v166[OBJC_IVAR___BKRootBarItem_countryCode];
      *v174 = 0;
      v174[1] = 0;
      v166[OBJC_IVAR___BKRootBarItem_editNameOnSelect] = 0;
      v271.receiver = v166;
      v271.super_class = (Class)v4;
      v145 = objc_msgSendSuper2(&v271, "init", v244);
      if ((objc_msgSend(v145, "isLibraryCollection") & 1) != 0)
      {
        v28 = (uint64_t)v145;
LABEL_230:
        v175 = swift_bridgeObjectRetain_n(v2, 2);
        v176 = Logger.logObject.getter(v175);
        v177 = static os_log_type_t.default.getter(v176);
        if (os_log_type_enabled(v176, v177))
        {
          v178 = swift_slowAlloc(12, -1);
          v179 = swift_slowAlloc(32, -1);
          v270[0] = v179;
          *(_DWORD *)v178 = v252.n128_u32[0];
          swift_bridgeObjectRetain(v2);
          *(_QWORD *)(v178 + 4) = sub_100040F58((uint64_t)v264, (unint64_t)v2, v270);
          swift_bridgeObjectRelease_n(v2, 3);
          _os_log_impl((void *)&_mh_execute_header, v176, v177, "Transferring the '%{public}s' item from navigation forwarder", (uint8_t *)v178, 0xCu);
          swift_arrayDestroy(v179, 1, v251);
          v180 = v179;
          v151 = v264;
          swift_slowDealloc(v180, -1, -1);
          swift_slowDealloc(v178, -1, -1);
        }
        else
        {
          swift_bridgeObjectRelease_n(v2, 2);
        }

        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v258 + 24))(v151, v2, v257);
        a1 = v28 + OBJC_IVAR___BKRootBarItem_titleOverride;
        v181 = *(_QWORD *)(v28 + OBJC_IVAR___BKRootBarItem_titleOverride + 8);
        if (v181)
        {
          v182 = 0;
          v75 = *(_QWORD *)a1;
          v183 = *(_QWORD *)(v28 + OBJC_IVAR___BKRootBarItem_titleOverride + 8);
          v184 = v183;
        }
        else
        {
          v186 = *(_QWORD *)(v28 + OBJC_IVAR___BKRootBarItem_identifier);
          v185 = *(void **)(v28 + OBJC_IVAR___BKRootBarItem_identifier + 8);
          swift_bridgeObjectRetain(v185);
          _s5Books20RootBarItemsProviderC18customCollectionID18fromItemIdentifierSSSgSS_tFZ_0(v186, (unint64_t)v185);
          v188 = v187;
          swift_bridgeObjectRelease(v187);
          if (v188)
          {
            swift_bridgeObjectRelease(v185);
            v189 = 14;
          }
          else
          {
            v292._countAndFlagsBits = v186;
            v292._object = v185;
            v189 = _s5Books20RootBarItemsProviderC8ItemKindO8rawValueAESgSS_tcfC_0(v292);
            if (v189 == 16)
              v189 = 15;
          }
          sub_100047B64(v189, v279);
          v184 = v279[1];
          v75 = v279[2];
          v183 = v279[3];
          v182 = v279[5];
          sub_100025B3C((uint64_t)v279, (uint64_t)&v284, (uint64_t *)&unk_1009D7970);
          if (!*((_QWORD *)&v284 + 1))
          {
            v182 = 0;
            v75 = 0;
            v183 = 0xE000000000000000;
            v184 = 0xE000000000000000;
          }
        }
        swift_bridgeObjectRetain_n(v181, 2);
        swift_bridgeObjectRelease(v184);
        swift_bridgeObjectRelease(v182);
        v270[0] = v75;
        v270[1] = v183;
        v190 = sub_1001F15BC();
        v191 = Collection.isNotEmpty.getter(&type metadata for String, v190);
        *(_QWORD *)&v192 = swift_bridgeObjectRelease(v183).n128_u64[0];
        v31 = (int64_t)v264;
        if ((v191 & 1) != 0)
        {
          v193 = objc_msgSend(v263, "viewControllers", v192);
          v194 = sub_100009E04(0, (unint64_t *)&qword_1009D8D70, UIViewController_ptr);
          v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v193, v194);

          if ((unint64_t)v4 >> 62)
          {
            if (v4 < 0)
              v210 = v4;
            else
              v210 = v4 & 0xFFFFFFFFFFFFFF8;
            swift_bridgeObjectRetain(v4);
            v211 = _CocoaArrayWrapper.endIndex.getter(v210);
            swift_bridgeObjectRelease(v4);
            if (!v211)
              goto LABEL_182;
LABEL_249:
            if ((v4 & 0xC000000000000001) != 0)
            {
              v195 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v4);
            }
            else
            {
              if (!*(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10))
                goto LABEL_298;
              v195 = *(id *)(v4 + 32);
            }
            v196 = v195;
            v197 = objc_msgSend(v195, "navigationItem", swift_bridgeObjectRelease(v4).n128_f64[0]);

            v198 = *(_QWORD *)(a1 + 8);
            if (v198)
            {
              v199 = 0;
              v200 = *(_QWORD *)(a1 + 8);
              v201 = v200;
            }
            else
            {
              v203 = *(_QWORD *)(v28 + OBJC_IVAR___BKRootBarItem_identifier);
              v202 = *(void **)(v28 + OBJC_IVAR___BKRootBarItem_identifier + 8);
              swift_bridgeObjectRetain(v202);
              _s5Books20RootBarItemsProviderC18customCollectionID18fromItemIdentifierSSSgSS_tFZ_0(v203, (unint64_t)v202);
              v205 = v204;
              swift_bridgeObjectRelease(v204);
              if (v205)
              {
                swift_bridgeObjectRelease(v202);
                v206 = 14;
              }
              else
              {
                v293._countAndFlagsBits = v203;
                v293._object = v202;
                v206 = _s5Books20RootBarItemsProviderC8ItemKindO8rawValueAESgSS_tcfC_0(v293);
                if (v206 == 16)
                  v206 = 15;
              }
              sub_100047B64(v206, &v280);
              v201 = v281[0];
              v200 = v281[2];
              v199 = v281[4];
              sub_100025B3C((uint64_t)&v280, (uint64_t)&v282, (uint64_t *)&unk_1009D7970);
              if (!v283)
              {
                v199 = 0;
                v200 = 0xE000000000000000;
                v201 = 0xE000000000000000;
              }
            }
            swift_bridgeObjectRetain_n(v198, 2);
            swift_bridgeObjectRelease(v201);
            swift_bridgeObjectRelease(v199);
            v207 = String._bridgeToObjectiveC()();
            objc_msgSend(v197, "setTitle:", v207, swift_bridgeObjectRelease(v200).n128_f64[0]);

            p_vtable = v250;
            v31 = (int64_t)v264;
          }
          else
          {
            if (*(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10))
              goto LABEL_249;
LABEL_182:
            swift_bridgeObjectRelease(v4);
          }
        }
        v144 = (uint64_t *)v255;
        swift_beginAccess(v255, v270, 33, 0);
        v145 = v263;
        v146 = swift_isUniquelyReferenced_nonNull_native(*v144);
        v266[0] = *v144;
        *v144 = 0x8000000000000000;
        sub_1002C3F04((uint64_t)v145, v31, (uint64_t)v2, v146, &qword_1009D0828, (void (*)(void))sub_10037A770, (void (*)(unint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_10037FCB8);
        v4 = *v144;
        *v144 = v266[0];
        swift_bridgeObjectRelease(v2);
        swift_bridgeObjectRelease(v4);
        swift_endAccess(v270);
        a1 = v256;
      }
      else
      {
        swift_bridgeObjectRelease(v2);
        v28 = (uint64_t)v263;
      }

      v75 = (unint64_t)v261;
      v31 = (int64_t)v262;
      continue;
    }
    break;
  }
LABEL_275:
  swift_release(v259);
  v2 = &qword_1009D7000;
  a1 = (unint64_t)v248;
  if (v248)
  {
    v212 = *(_QWORD *)&v248[OBJC_IVAR___BKRootBarItem_identifier];
    v28 = *(_QWORD *)&v248[OBJC_IVAR___BKRootBarItem_identifier + 8];
    goto LABEL_279;
  }
  v28 = *(_QWORD *)(v249 + OBJC_IVAR___BKSplitViewContentHostingController_selectedIdentifier + 8);
  if (!v28)
  {
    v235 = v260;
    swift_beginAccess(v260, v266, 0, 0);
    v4 = *v235;
    if ((unint64_t)v4 >> 62)
      goto LABEL_300;
    v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v4);
    if (!v5)
    {
LABEL_304:
      swift_bridgeObjectRelease(v4);

      v238 = swift_bridgeObjectRelease(v273);
      (*(void (**)(void **, uint64_t, __n128))(v245 + 8))(p_vtable, v246, v238);
      return;
    }
LABEL_292:
    if ((v4 & 0xC000000000000001) != 0)
    {
      v239 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, v4);
      swift_bridgeObjectRelease(v4);
      v212 = *(_QWORD *)(v239 + OBJC_IVAR___BKRootBarItem_identifier);
      v28 = *(_QWORD *)(v239 + OBJC_IVAR___BKRootBarItem_identifier + 8);
      swift_bridgeObjectRetain(v28);
      swift_unknownObjectRelease(v239);
      goto LABEL_280;
    }
    if (*(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v236 = (char *)*(id *)(v4 + 32);
      swift_bridgeObjectRelease(v4);
      v212 = *(_QWORD *)&v236[OBJC_IVAR___BKRootBarItem_identifier];
      v28 = *(_QWORD *)&v236[OBJC_IVAR___BKRootBarItem_identifier + 8];
      swift_bridgeObjectRetain(v28);

      goto LABEL_280;
    }
    __break(1u);
    goto LABEL_307;
  }
  v212 = *(_QWORD *)(v249 + OBJC_IVAR___BKSplitViewContentHostingController_selectedIdentifier);
LABEL_279:
  swift_bridgeObjectRetain(v28);
LABEL_280:
  v213 = swift_bridgeObjectRetain_n(v28, 2);
  v214 = Logger.logObject.getter(v213);
  v215 = static os_log_type_t.default.getter(v214);
  if (os_log_type_enabled(v214, v215))
  {
    v216 = (uint8_t *)swift_slowAlloc(12, -1);
    v217 = swift_slowAlloc(32, -1);
    v270[0] = v217;
    *(_DWORD *)v216 = v252.n128_u32[0];
    swift_bridgeObjectRetain(v28);
    v268 = sub_100040F58(v212, v28, v270);
    a1 = (unint64_t)v248;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v268, &v269, v216 + 4, v216 + 12);
    swift_bridgeObjectRelease_n(v28, 3);
    _os_log_impl((void *)&_mh_execute_header, v214, v215, "Transferring selected item '%{public}s'", v216, 0xCu);
    swift_arrayDestroy(v217, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v217, -1, -1);
    swift_slowDealloc(v216, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n(v28, 2);
  }

  v218 = v260;
  swift_beginAccess(v260, v270, 0, 0);
  v219 = *v218;
  swift_bridgeObjectRetain(v28);
  swift_bridgeObjectRetain(v219);
  v221 = sub_1002C5E9C(v220, v212, v28);
  swift_bridgeObjectRelease(v219);
  swift_bridgeObjectRelease(v28);
  v222 = v250;
  if (v221)
  {

    goto LABEL_286;
  }
  v223 = objc_allocWithZone((Class)type metadata accessor for RootBarItem());
  swift_bridgeObjectRetain(v28);
  v224 = RootBarItem.init(identifier:isPlaceholder:url:titleOverride:iconNameOverride:selectedIconNameOverride:countryCode:editNameOnSelect:)(v212, v28, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
  v225 = objc_msgSend(v224, "isLibraryCollection");

  if (v225)
  {
LABEL_286:
    swift_bridgeObjectRelease(v273);
    v226 = (uint64_t *)(v249 + v2[289]);
    v227 = v226[1];
    *v226 = v212;
    v226[1] = v28;
    swift_bridgeObjectRelease(v227);
    sub_1002B62E8(0, 0, 1);

LABEL_287:
    (*(void (**)(void **, uint64_t))(v245 + 8))(v222, v246);

    return;
  }
  swift_bridgeObjectRetain(v28);
  v229 = Logger.logObject.getter(v228);
  v230 = static os_log_type_t.fault.getter(v229);
  if (!os_log_type_enabled(v229, v230))
  {
    swift_bridgeObjectRelease_n(v28, 2);

    swift_bridgeObjectRelease(v273);
    goto LABEL_287;
  }
  v248 = (char *)a1;
  v231 = (uint8_t *)swift_slowAlloc(12, -1);
  v232 = v222;
  v233 = swift_slowAlloc(32, -1);
  v268 = v233;
  *(_DWORD *)v231 = 136315138;
  swift_bridgeObjectRetain(v28);
  v267 = sub_100040F58(v212, v28, &v268);
  UnsafeMutableRawBufferPointer.copyMemory(from:)(&v267, &v268, v231 + 4, v231 + 12);
  swift_bridgeObjectRelease(v28);
  v234 = v273;
  swift_bridgeObjectRelease_n(v28, 2);
  swift_bridgeObjectRelease(v234);
  _os_log_impl((void *)&_mh_execute_header, v229, v230, "Current identifier %s from TabBar can't be selected in a SplitView anymore.", v231, 0xCu);
  swift_arrayDestroy(v233, 1, (char *)&type metadata for Any + 8);
  swift_slowDealloc(v233, -1, -1);
  swift_slowDealloc(v231, -1, -1);

  (*(void (**)(void **, uint64_t))(v245 + 8))(v232, v246);
}

uint64_t sub_1002BB5EC()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_100717630);
  v2 = swift_getKeyPath(&unk_100717658);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(KeyPath);
  swift_release(v2);
  return v4;
}

void sub_1002BB664(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  void *v3;
  void *v4;
  _QWORD aBlock[6];
  _BYTE v6[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v6, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = (void *)Strong;
    aBlock[4] = BKAppDelegate.enableMetricsInspectorOnDebugMode();
    aBlock[5] = 0;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1000147F0;
    aBlock[3] = &unk_1008F9C68;
    v4 = _Block_copy(aBlock);
    objc_msgSend(v3, "popAllCardsAnimated:completion:", 1, v4);
    _Block_release(v4);

  }
}

uint64_t sub_1002BB714(uint64_t a1)
{
  return sub_100007AF0(a1, qword_1009D78C0, 0xD000000000000021, 0x80000001007176A0);
}

uint64_t sub_1002BB738(uint64_t a1)
{
  return sub_100007AF0(a1, qword_1009D78D8, 0xD000000000000034, 0x80000001007BC570);
}

unint64_t sub_1002BB75C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = v1;
  v4 = *(_QWORD *)(v2 + 40);
  v5 = type metadata accessor for UUID(0);
  v6 = sub_100008DB0(&qword_1009D7AE8, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
  v7 = dispatch thunk of Hashable._rawHashValue(seed:)(v4, v5, v6);
  return sub_1002BD490(a1, v7, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (unint64_t *)&unk_1009D7AF0, (uint64_t)&protocol conformance descriptor for UUID);
}

unint64_t sub_1002BB7F4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = static Hasher._hash(seed:_:)(*(_QWORD *)(v1 + 40), a1);
  return sub_1002BD2C0(a1, v3);
}

uint64_t sub_1002BB82C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  Swift::Int v6;
  _QWORD v8[9];

  Hasher.init(_seed:)(v8, *(_QWORD *)(v1 + 40));
  v3 = sub_1001E8DB4(a1);
  v5 = v4;
  String.hash(into:)(v8, v3, v4);
  swift_bridgeObjectRelease(v5);
  v6 = Hasher._finalize()();
  return sub_1002BC040(a1, v6);
}

unint64_t sub_1002BB8A4(char a1)
{
  uint64_t v1;
  uint64_t v2;
  char v4;
  uint64_t v5;
  unint64_t v6;
  Swift::Int v7;
  _QWORD v9[9];

  v2 = v1;
  Hasher.init(_seed:)(v9, *(_QWORD *)(v2 + 40));
  v4 = a1 & 1;
  if ((a1 & 1) != 0)
    v5 = 6710384;
  else
    v5 = 1802465122;
  if ((a1 & 1) != 0)
    v6 = 0xE300000000000000;
  else
    v6 = 0xE400000000000000;
  String.hash(into:)(v9, v5, v6);
  swift_bridgeObjectRelease(v6);
  v7 = Hasher._finalize()();
  return sub_1002BC478(v4, v7);
}

uint64_t sub_1002BB928(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1006724B0(*(_QWORD *)(v1 + 40), a1);
  return sub_1002BC59C(a1, v3);
}

void sub_1002BB958(char a1)
{
  uint64_t v1;
  _QWORD v3[9];

  Hasher.init(_seed:)(v3, *(_QWORD *)(v1 + 40));
  __asm { BR              X10 }
}

uint64_t sub_1002BB9A8()
{
  uint64_t v0;
  Swift::Int v1;
  uint64_t v3;

  String.hash(into:)(&v3, 0x7972617262696CLL, 0xE700000000000000);
  swift_bridgeObjectRelease(0xE700000000000000);
  v1 = Hasher._finalize()();
  return sub_1002BC82C(v0, v1);
}

unint64_t sub_1002BBA5C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  Swift::Int v5;
  _QWORD v7[9];

  Hasher.init(_seed:)(v7, *(_QWORD *)(v2 + 40));
  if (a2)
  {
    Hasher._combine(_:)(1u);
    swift_bridgeObjectRetain(a2);
    String.hash(into:)(v7, a1, a2);
    swift_bridgeObjectRelease(a2);
  }
  else
  {
    Hasher._combine(_:)(0);
  }
  v5 = Hasher._finalize()();
  return sub_1002BCA74(a1, a2, v5);
}

uint64_t sub_1002BBAEC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1006725B8(*(_QWORD *)(v1 + 40), a1);
  return sub_1002BCB3C(a1, v3);
}

unint64_t sub_1002BBB1C(unsigned __int8 a1)
{
  uint64_t v1;
  unint64_t v3;
  unint64_t v4;
  Swift::Int v5;
  _QWORD v7[9];

  Hasher.init(_seed:)(v7, *(_QWORD *)(v1 + 40));
  if (a1)
  {
    if (a1 == 1)
      v3 = 0xD00000000000001BLL;
    else
      v3 = 0x73754372656D6974;
    if (a1 == 1)
      v4 = 0x80000001007B2390;
    else
      v4 = 0xEB000000006D6F74;
  }
  else
  {
    v4 = 0xE800000000000000;
    v3 = 0x66664F72656D6974;
  }
  String.hash(into:)(v7, v3, v4);
  swift_bridgeObjectRelease(v4);
  v5 = Hasher._finalize()();
  return sub_1002BCDF4(a1, v5);
}

unint64_t sub_1002BBBDC(char a1)
{
  uint64_t v1;
  uint64_t v2;
  char v4;
  unint64_t v5;
  unint64_t v6;
  Swift::Int v7;
  _QWORD v9[9];

  v2 = v1;
  Hasher.init(_seed:)(v9, *(_QWORD *)(v2 + 40));
  v4 = a1 & 1;
  if ((a1 & 1) != 0)
    v5 = 0x6E72755465676170;
  else
    v5 = 0xD000000000000010;
  if ((a1 & 1) != 0)
    v6 = 0xEB00000000676E69;
  else
    v6 = 0x80000001007B23C0;
  String.hash(into:)(v9, v5, v6);
  swift_bridgeObjectRelease(v6);
  v7 = Hasher._finalize()();
  return sub_1002BCFA0(v4, v7);
}

unint64_t sub_1002BBC7C(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  Swift::Int v5;
  _QWORD v7[9];

  v2 = v1;
  Hasher.init(_seed:)(v7, *(_QWORD *)(v2 + 40));
  if ((a1 & 1) != 0)
    v4 = 0x6573616572636564;
  else
    v4 = 0x6573616572636E69;
  String.hash(into:)(v7, v4, 0xE800000000000000);
  swift_bridgeObjectRelease(0xE800000000000000);
  v5 = Hasher._finalize()();
  return sub_1002BD0E4(a1 & 1, v5);
}

unint64_t sub_1002BBCF8(double a1, double a2)
{
  uint64_t v2;
  Swift::Int v5;
  _QWORD v7[9];

  Hasher.init(_seed:)(v7, *(_QWORD *)(v2 + 40));
  UnitPoint.hash(into:)(v7, a1, a2);
  v5 = Hasher._finalize()();
  return sub_1002BD1DC(v5, a1, a2);
}

unint64_t sub_1002BBD58(char a1)
{
  uint64_t v1;
  uint64_t v2;
  char v4;
  uint64_t v5;
  unint64_t v6;
  Swift::Int v7;
  _QWORD v9[9];

  v2 = v1;
  Hasher.init(_seed:)(v9, *(_QWORD *)(v2 + 40));
  v4 = a1 & 1;
  if ((a1 & 1) != 0)
    v5 = 0x73756F6976657270;
  else
    v5 = 1954047342;
  if ((a1 & 1) != 0)
    v6 = 0xE800000000000000;
  else
    v6 = 0xE400000000000000;
  String.hash(into:)(v9, v5, v6);
  swift_bridgeObjectRelease(v6);
  v7 = Hasher._finalize()();
  return sub_1002BD35C(v4, v7);
}

unint64_t sub_1002BBDE4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = v1;
  v4 = *(_QWORD *)(v2 + 40);
  v5 = type metadata accessor for CollectionRecommendationType(0);
  v6 = sub_100008DB0(&qword_1009D7B00, (uint64_t (*)(uint64_t))&type metadata accessor for CollectionRecommendationType, (uint64_t)&protocol conformance descriptor for CollectionRecommendationType);
  v7 = dispatch thunk of Hashable._rawHashValue(seed:)(v4, v5, v6);
  return sub_1002BD490(a1, v7, (uint64_t (*)(uint64_t))&type metadata accessor for CollectionRecommendationType, &qword_1009D7B08, (uint64_t)&protocol conformance descriptor for CollectionRecommendationType);
}

unint64_t sub_1002BBE7C(char a1)
{
  uint64_t v1;
  uint64_t v2;
  char v4;
  uint64_t v5;
  unint64_t v6;
  Swift::Int v7;
  _QWORD v9[9];

  v2 = v1;
  Hasher.init(_seed:)(v9, *(_QWORD *)(v2 + 40));
  v4 = a1 & 1;
  if ((a1 & 1) != 0)
    v5 = 0x6369666963657073;
  else
    v5 = 0x6563655274736F6DLL;
  if ((a1 & 1) != 0)
    v6 = 0xE800000000000000;
  else
    v6 = 0xEA0000000000746ELL;
  String.hash(into:)(v9, v5, v6);
  swift_bridgeObjectRelease(v6);
  v7 = Hasher._finalize()();
  return sub_1002BD5C0(v4, v7);
}

unint64_t sub_1002BBF20(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = v1;
  v4 = *(_QWORD *)(v2 + 40);
  v5 = type metadata accessor for Date(0);
  v6 = sub_100008DB0(&qword_1009D7AD8, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
  v7 = dispatch thunk of Hashable._rawHashValue(seed:)(v4, v5, v6);
  return sub_1002BD490(a1, v7, (uint64_t (*)(uint64_t))&type metadata accessor for Date, &qword_1009D7AE0, (uint64_t)&protocol conformance descriptor for Date);
}

unint64_t sub_1002BBFB8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  Swift::Int v6;
  _QWORD v8[9];

  Hasher.init(_seed:)(v8, *(_QWORD *)(v1 + 40));
  type metadata accessor for CFString(0);
  v4 = v3;
  v5 = sub_100008DB0(&qword_1009D7B28, (uint64_t (*)(uint64_t))type metadata accessor for CFString, (uint64_t)&unk_10070EFA0);
  _CFObject.hash(into:)(v8, v4, v5);
  v6 = Hasher._finalize()();
  return sub_1002BD700(a1, v6);
}

uint64_t sub_1002BC040(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;

  v3 = a2 & ~(-1 << *(_BYTE *)(v2 + 32));
  if (((*(_QWORD *)(v2 + 64 + ((v3 >> 3) & 0xFFFFFFFFFFFFF8)) >> v3) & 1) != 0)
    __asm { BR              X9 }
  return a2 & ~(-1 << *(_BYTE *)(v2 + 32));
}

unint64_t sub_1002BC478(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  char v11;

  v3 = -1 << *(_BYTE *)(v2 + 32);
  v4 = a2 & ~v3;
  if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
  {
    v5 = ~v3;
    if ((a1 & 1) != 0)
      v6 = 6710384;
    else
      v6 = 1802465122;
    if ((a1 & 1) != 0)
      v7 = 0xE300000000000000;
    else
      v7 = 0xE400000000000000;
    while (1)
    {
      v8 = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v4) ? 6710384 : 1802465122;
      v9 = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v4) ? 0xE300000000000000 : 0xE400000000000000;
      if (v8 == v6 && v9 == v7)
        break;
      v11 = _stringCompareWithSmolCheck(_:_:expecting:)(v8, v9, v6, v7, 0);
      swift_bridgeObjectRelease(v9);
      swift_bridgeObjectRelease(v7);
      if ((v11 & 1) == 0)
      {
        v4 = (v4 + 1) & v5;
        if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
          continue;
      }
      return v4;
    }
    swift_bridgeObjectRelease_n(v7, 2);
  }
  return v4;
}

uint64_t sub_1002BC59C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;

  v3 = a2 & ~(-1 << *(_BYTE *)(v2 + 32));
  if (((*(_QWORD *)(v2 + 64 + ((v3 >> 3) & 0xFFFFFFFFFFFFF8)) >> v3) & 1) != 0)
    __asm { BR              X9 }
  return a2 & ~(-1 << *(_BYTE *)(v2 + 32));
}

uint64_t sub_1002BC82C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;

  v3 = a2 & ~(-1 << *(_BYTE *)(v2 + 32));
  if (((*(_QWORD *)(v2 + 64 + ((v3 >> 3) & 0xFFFFFFFFFFFFF8)) >> v3) & 1) != 0)
    __asm { BR              X9 }
  return a2 & ~(-1 << *(_BYTE *)(v2 + 32));
}

unint64_t sub_1002BCA74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  BOOL v13;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v9 = ~v5;
    v10 = *(_QWORD *)(v3 + 48);
    do
    {
      v11 = (_QWORD *)(v10 + 16 * v6);
      v12 = v11[1];
      if (v12)
      {
        if (a2)
        {
          v13 = *v11 == a1 && v12 == a2;
          if (v13 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v11, v12, a1, a2, 0) & 1) != 0)
            return v6;
        }
      }
      else if (!a2)
      {
        return v6;
      }
      v6 = (v6 + 1) & v9;
    }
    while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
  }
  return v6;
}

uint64_t sub_1002BCB3C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;

  v3 = a2 & ~(-1 << *(_BYTE *)(v2 + 32));
  if (((*(_QWORD *)(v2 + 64 + ((v3 >> 3) & 0xFFFFFFFFFFFFF8)) >> v3) & 1) != 0)
    __asm { BR              X9 }
  return a2 & ~(-1 << *(_BYTE *)(v2 + 32));
}

unint64_t sub_1002BCDF4(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  int v9;
  unint64_t v10;
  unint64_t v11;
  char v12;

  v3 = -1 << *(_BYTE *)(v2 + 32);
  v4 = a2 & ~v3;
  if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
  {
    v6 = ~v3;
    while (1)
    {
      if (*(_BYTE *)(*(_QWORD *)(v2 + 48) + v4))
      {
        if (*(_BYTE *)(*(_QWORD *)(v2 + 48) + v4) == 1)
        {
          v7 = 0x80000001007B2390;
          v8 = 0xD00000000000001BLL;
          v9 = a1;
          if (!a1)
            goto LABEL_17;
        }
        else
        {
          v8 = 0x73754372656D6974;
          v7 = 0xEB000000006D6F74;
          v9 = a1;
          if (!a1)
          {
LABEL_17:
            v11 = 0xE800000000000000;
            v10 = 0x66664F72656D6974;
            if (v8 != 0x66664F72656D6974)
              goto LABEL_19;
            goto LABEL_18;
          }
        }
      }
      else
      {
        v7 = 0xE800000000000000;
        v8 = 0x66664F72656D6974;
        v9 = a1;
        if (!a1)
          goto LABEL_17;
      }
      if (v9 == 1)
        v10 = 0xD00000000000001BLL;
      else
        v10 = 0x73754372656D6974;
      if (v9 == 1)
        v11 = 0x80000001007B2390;
      else
        v11 = 0xEB000000006D6F74;
      if (v8 != v10)
        goto LABEL_19;
LABEL_18:
      if (v7 == v11)
      {
        swift_bridgeObjectRelease_n(v7, 2);
        return v4;
      }
LABEL_19:
      v12 = _stringCompareWithSmolCheck(_:_:expecting:)(v8, v7, v10, v11, 0);
      swift_bridgeObjectRelease(v7);
      swift_bridgeObjectRelease(v11);
      if ((v12 & 1) == 0)
      {
        v4 = (v4 + 1) & v6;
        if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
          continue;
      }
      return v4;
    }
  }
  return v4;
}

unint64_t sub_1002BCFA0(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  char v11;

  v3 = -1 << *(_BYTE *)(v2 + 32);
  v4 = a2 & ~v3;
  if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
  {
    v5 = ~v3;
    if ((a1 & 1) != 0)
      v6 = 0x6E72755465676170;
    else
      v6 = 0xD000000000000010;
    if ((a1 & 1) != 0)
      v7 = 0xEB00000000676E69;
    else
      v7 = 0x80000001007B23C0;
    while (1)
    {
      v8 = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v4) ? 0x6E72755465676170 : 0xD000000000000010;
      v9 = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v4) ? 0xEB00000000676E69 : 0x80000001007B23C0;
      if (v8 == v6 && v9 == v7)
        break;
      v11 = _stringCompareWithSmolCheck(_:_:expecting:)(v8, v9, v6, v7, 0);
      swift_bridgeObjectRelease(v9);
      swift_bridgeObjectRelease(v7);
      if ((v11 & 1) == 0)
      {
        v4 = (v4 + 1) & v5;
        if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
          continue;
      }
      return v4;
    }
    swift_bridgeObjectRelease_n(v7, 2);
  }
  return v4;
}

unint64_t sub_1002BD0E4(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = -1 << *(_BYTE *)(v2 + 32);
  v4 = a2 & ~v3;
  if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
  {
    v5 = ~v3;
    if ((a1 & 1) != 0)
      v6 = 0x6573616572636564;
    else
      v6 = 0x6573616572636E69;
    while (1)
    {
      v7 = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v4) ? 0x6573616572636564 : 0x6573616572636E69;
      if (v7 == v6)
        break;
      v8 = _stringCompareWithSmolCheck(_:_:expecting:)(v7, 0xE800000000000000, v6, 0xE800000000000000, 0);
      swift_bridgeObjectRelease_n(0xE800000000000000, 2);
      if ((v8 & 1) == 0)
      {
        v4 = (v4 + 1) & v5;
        if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
          continue;
      }
      return v4;
    }
    swift_bridgeObjectRelease_n(0xE800000000000000, 2);
  }
  return v4;
}

unint64_t sub_1002BD1DC(uint64_t a1, double a2, double a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t i;
  uint64_t v9;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  i = a1 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0
    && (static UnitPoint.== infix(_:_:)(*(double *)(*(_QWORD *)(v3 + 48) + 16 * i), *(double *)(*(_QWORD *)(v3 + 48) + 16 * i + 8), a2, a3) & 1) == 0)
  {
    v9 = ~v5;
    for (i = (i + 1) & v9; ((*(_QWORD *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0; i = (i + 1) & v9)
    {
      if ((static UnitPoint.== infix(_:_:)(*(double *)(*(_QWORD *)(v3 + 48) + 16 * i), *(double *)(*(_QWORD *)(v3 + 48) + 16 * i + 8), a2, a3) & 1) != 0)break;
    }
  }
  return i;
}

unint64_t sub_1002BD2C0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = *(_QWORD *)(v2 + 48);
    if (*(_QWORD *)(v7 + 8 * result) != a1)
    {
      v8 = ~v5;
      for (result = (result + 1) & v8;
            ((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v8)
      {
        if (*(_QWORD *)(v7 + 8 * result) == a1)
          break;
      }
    }
  }
  return result;
}

unint64_t sub_1002BD35C(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  char v11;

  v3 = -1 << *(_BYTE *)(v2 + 32);
  v4 = a2 & ~v3;
  if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
  {
    v5 = ~v3;
    if ((a1 & 1) != 0)
      v6 = 0x73756F6976657270;
    else
      v6 = 1954047342;
    if ((a1 & 1) != 0)
      v7 = 0xE800000000000000;
    else
      v7 = 0xE400000000000000;
    while (1)
    {
      v8 = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v4) ? 0x73756F6976657270 : 1954047342;
      v9 = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v4) ? 0xE800000000000000 : 0xE400000000000000;
      if (v8 == v6 && v9 == v7)
        break;
      v11 = _stringCompareWithSmolCheck(_:_:expecting:)(v8, v9, v6, v7, 0);
      swift_bridgeObjectRelease(v9);
      swift_bridgeObjectRelease(v7);
      if ((v11 & 1) == 0)
      {
        v4 = (v4 + 1) & v5;
        if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
          continue;
      }
      return v4;
    }
    swift_bridgeObjectRelease_n(v7, 2);
  }
  return v4;
}

unint64_t sub_1002BD490(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), unint64_t *a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, unint64_t, uint64_t, __n128);
  uint64_t v18;
  char v19;
  uint64_t v21;
  uint64_t (*v22)(uint64_t);
  unint64_t *v23;
  uint64_t v24;

  v23 = a4;
  v24 = a5;
  v6 = v5;
  v21 = a1;
  v22 = a3;
  v8 = a3(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10.n128_f64[0] = __chkstk_darwin(v8);
  v12 = (char *)&v21 - v11;
  v13 = -1 << *(_BYTE *)(v6 + 32);
  v14 = a2 & ~v13;
  if (((*(_QWORD *)(v6 + 64 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) != 0)
  {
    v15 = ~v13;
    v16 = *(_QWORD *)(v9 + 72);
    v17 = *(void (**)(char *, unint64_t, uint64_t, __n128))(v9 + 16);
    do
    {
      v17(v12, *(_QWORD *)(v6 + 48) + v16 * v14, v8, v10);
      v18 = sub_100008DB0(v23, v22, v24);
      v19 = dispatch thunk of static Equatable.== infix(_:_:)(v12, v21, v8, v18);
      (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
      if ((v19 & 1) != 0)
        break;
      v14 = (v14 + 1) & v15;
    }
    while (((*(_QWORD *)(v6 + 64 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) != 0);
  }
  return v14;
}

unint64_t sub_1002BD5C0(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  char v11;

  v3 = -1 << *(_BYTE *)(v2 + 32);
  v4 = a2 & ~v3;
  if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
  {
    v5 = ~v3;
    if ((a1 & 1) != 0)
      v6 = 0x6369666963657073;
    else
      v6 = 0x6563655274736F6DLL;
    if ((a1 & 1) != 0)
      v7 = 0xE800000000000000;
    else
      v7 = 0xEA0000000000746ELL;
    while (1)
    {
      v8 = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v4) ? 0x6369666963657073 : 0x6563655274736F6DLL;
      v9 = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v4) ? 0xE800000000000000 : 0xEA0000000000746ELL;
      if (v8 == v6 && v9 == v7)
        break;
      v11 = _stringCompareWithSmolCheck(_:_:expecting:)(v8, v9, v6, v7, 0);
      swift_bridgeObjectRelease(v9);
      swift_bridgeObjectRelease(v7);
      if ((v11 & 1) == 0)
      {
        v4 = (v4 + 1) & v5;
        if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
          continue;
      }
      return v4;
    }
    swift_bridgeObjectRelease_n(v7, 2);
  }
  return v4;
}

unint64_t sub_1002BD700(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t i;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  id v12;
  char v13;
  uint64_t v14;
  id v15;
  char v16;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  i = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
  {
    v6 = v2;
    type metadata accessor for CFString(0);
    v9 = v8;
    v10 = *(void **)(*(_QWORD *)(v6 + 48) + 8 * i);
    v11 = sub_100008DB0(&qword_1009D7B28, (uint64_t (*)(uint64_t))type metadata accessor for CFString, (uint64_t)&unk_10070EFA0);
    v12 = v10;
    v13 = static _CFObject.== infix(_:_:)(v12, a1, v9, v11);

    if ((v13 & 1) == 0)
    {
      v14 = ~v4;
      for (i = (i + 1) & v14; ((*(_QWORD *)(v3 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0; i = (i + 1) & v14)
      {
        v15 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * i);
        v16 = static _CFObject.== infix(_:_:)(v15, a1, v9, v11);

        if ((v16 & 1) != 0)
          break;
      }
    }
  }
  return i;
}

uint64_t sub_1002BD840(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  unint64_t v7;
  char v8;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v3 = v2;
  v6 = *v3;
  swift_bridgeObjectRetain(*v3);
  v7 = sub_10004CE80(a1, a2);
  LOBYTE(a2) = v8;
  swift_bridgeObjectRelease(v6);
  if ((a2 & 1) == 0)
    return 0;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
  v10 = *v3;
  v14 = *v3;
  *v3 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1002BF910();
    v10 = v14;
  }
  swift_bridgeObjectRelease(*(_QWORD *)(*(_QWORD *)(v10 + 48) + 16 * v7 + 8));
  v11 = *(_QWORD *)(*(_QWORD *)(v10 + 56) + 16 * v7);
  sub_1002BE3B4(v7, v10);
  v12 = *v3;
  *v3 = v10;
  swift_bridgeObjectRelease(v12);
  return v11;
}

uint64_t sub_1002BD924(uint64_t a1, uint64_t a2)
{
  return sub_1002BDC24(a1, a2, (uint64_t)&qword_1009D0828, (void (*)(uint64_t))sub_1002C1948);
}

double sub_1002BD938@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v8;
  unint64_t v9;
  char v10;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v12;
  uint64_t v13;
  double result;
  uint64_t v15;

  v4 = v3;
  v8 = *v4;
  swift_bridgeObjectRetain(*v4);
  v9 = sub_10004CE80(a1, a2);
  LOBYTE(a2) = v10;
  swift_bridgeObjectRelease(v8);
  if ((a2 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v4);
    v12 = *v4;
    v15 = *v4;
    *v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1002C1118(&qword_1009D0A40, (void (*)(unint64_t, _BYTE *))sub_10004CD0C, (void (*)(_BYTE *, uint64_t))sub_10004CFC4);
      v12 = v15;
    }
    swift_bridgeObjectRelease(*(_QWORD *)(*(_QWORD *)(v12 + 48) + 16 * v9 + 8));
    sub_10004CFC4((_OWORD *)(*(_QWORD *)(v12 + 56) + 32 * v9), a3);
    sub_1002BE588(v9, v12);
    v13 = *v4;
    *v4 = v12;
    swift_bridgeObjectRelease(v13);
  }
  else
  {
    result = 0.0;
    *a3 = 0u;
    a3[1] = 0u;
  }
  return result;
}

void sub_1002BDA40(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v8;
  unint64_t v9;
  char v10;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v4 = v3;
  v8 = *v4;
  swift_bridgeObjectRetain(*v4);
  v9 = sub_10004CE80(a1, a2);
  LOBYTE(a2) = v10;
  swift_bridgeObjectRelease(v8);
  if ((a2 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v4);
    v12 = *v4;
    v14 = *v4;
    *v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1002BFE98();
      v12 = v14;
    }
    swift_bridgeObjectRelease(*(_QWORD *)(*(_QWORD *)(v12 + 48) + 16 * v9 + 8));
    sub_100025B3C(*(_QWORD *)(v12 + 56) + 32 * v9, (uint64_t)a3, (uint64_t *)&unk_1009D04E0);
    sub_1002BE588(v9, v12);
    v13 = *v4;
    *v4 = v12;
    swift_bridgeObjectRelease(v13);
  }
  else
  {
    *a3 = 0;
    a3[1] = 0;
    a3[2] = 0;
    a3[3] = 1;
  }
}

void sub_1002BDB2C(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  unint64_t v7;
  char v8;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v3 = v2;
  v6 = *v3;
  swift_bridgeObjectRetain(*v3);
  v7 = sub_1000561E8(a1);
  LOBYTE(a1) = v8;
  swift_bridgeObjectRelease(v6);
  if ((a1 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
    v10 = *v3;
    v12 = *v3;
    *v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1002C0094();
      v10 = v12;
    }
    sub_1000569AC(*(_QWORD *)(v10 + 48) + 40 * v7);
    sub_100025B3C(*(_QWORD *)(v10 + 56) + 32 * v7, (uint64_t)a2, (uint64_t *)&unk_1009D04E0);
    sub_1002BE75C(v7, v10);
    v11 = *v3;
    *v3 = v10;
    swift_bridgeObjectRelease(v11);
  }
  else
  {
    *a2 = 0;
    a2[1] = 0;
    a2[2] = 0;
    a2[3] = 1;
  }
}

uint64_t sub_1002BDC10(uint64_t a1, uint64_t a2)
{
  return sub_1002BDC24(a1, a2, (uint64_t)&unk_1009DDEE0, (void (*)(uint64_t))sub_1002C1948);
}

uint64_t sub_1002BDC24(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t *v4;
  uint64_t *v7;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;

  v7 = v4;
  v10 = *v7;
  swift_bridgeObjectRetain(*v7);
  v11 = sub_10004CE80(a1, a2);
  LOBYTE(a2) = v12;
  swift_bridgeObjectRelease(v10);
  if ((a2 & 1) == 0)
    return 0;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v7);
  v14 = *v7;
  v18 = *v7;
  *v7 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    a4(a3);
    v14 = v18;
  }
  swift_bridgeObjectRelease(*(_QWORD *)(*(_QWORD *)(v14 + 48) + 16 * v11 + 8));
  v15 = *(_QWORD *)(*(_QWORD *)(v14 + 56) + 8 * v11);
  sub_1002BEABC(v11, v14);
  v16 = *v7;
  *v7 = v14;
  swift_bridgeObjectRelease(v16);
  return v15;
}

uint64_t sub_1002BDD04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1002BDE14(a1, a2, (uint64_t (*)(_QWORD))&type metadata accessor for PBPropertyConfiguration, &qword_1009D7BF0, a3);
}

double sub_1002BDD18@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  unint64_t v7;
  char v8;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v10;
  uint64_t v11;
  double result;
  uint64_t v13;

  v3 = v2;
  v6 = *v3;
  swift_bridgeObjectRetain(*v3);
  v7 = sub_1000561E8(a1);
  LOBYTE(a1) = v8;
  swift_bridgeObjectRelease(v6);
  if ((a1 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
    v10 = *v3;
    v13 = *v3;
    *v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1002C0614();
      v10 = v13;
    }
    sub_1000569AC(*(_QWORD *)(v10 + 48) + 40 * v7);
    sub_10004CFC4((_OWORD *)(*(_QWORD *)(v10 + 56) + 32 * v7), a2);
    sub_1002BE75C(v7, v10);
    v11 = *v3;
    *v3 = v10;
    *(_QWORD *)&result = swift_bridgeObjectRelease(v11).n128_u64[0];
  }
  else
  {
    result = 0.0;
    *a2 = 0u;
    a2[1] = 0u;
  }
  return result;
}

uint64_t sub_1002BDE00@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1002BDE14(a1, a2, (uint64_t (*)(_QWORD))&type metadata accessor for SeriesListSortOrder, &qword_1009D7BA0, a3);
}

uint64_t sub_1002BDE14@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(_QWORD)@<X2>, uint64_t *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t *v5;
  uint64_t *v8;
  uint64_t v12;
  unint64_t v13;
  char v14;
  __n128 v15;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;

  v8 = v5;
  v12 = *v8;
  swift_bridgeObjectRetain(*v8);
  v13 = sub_10004CE80(a1, a2);
  LOBYTE(a2) = v14;
  v15 = swift_bridgeObjectRelease(v12);
  if ((a2 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v8);
    v17 = *v8;
    v27 = *v8;
    *v8 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1002C2B2C(a3, a4);
      v17 = v27;
    }
    v18 = swift_bridgeObjectRelease(*(_QWORD *)(*(_QWORD *)(v17 + 48) + 16 * v13 + 8));
    v19 = *(_QWORD *)(v17 + 56);
    v20 = ((uint64_t (*)(_QWORD, __n128))a3)(0, v18);
    v21 = *(_QWORD *)(v20 - 8);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v21 + 32))(a5, v19 + *(_QWORD *)(v21 + 72) * v13, v20);
    sub_1002BF51C(v13, v17, a3);
    v22 = *v8;
    *v8 = v17;
    v23 = swift_bridgeObjectRelease(v22);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t, __n128))(v21 + 56))(a5, 0, 1, v20, v23);
  }
  else
  {
    v25 = ((uint64_t (*)(_QWORD, __n128))a3)(0, v15);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(*(_QWORD *)(v25 - 8) + 56))(a5, 1, 1, v25, v26);
  }
}

uint64_t sub_1002BDF58@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1002BDE14(a1, a2, (uint64_t (*)(_QWORD))&type metadata accessor for SeriesListFilterOption, &qword_1009D7BA8, a3);
}

uint64_t sub_1002BDF6C(uint64_t a1, uint64_t a2)
{
  return sub_1002BDF84(a1, a2, (uint64_t *)&unk_1009DDE40);
}

uint64_t sub_1002BDF78(uint64_t a1, uint64_t a2)
{
  return sub_1002BDF84(a1, a2, (uint64_t *)&unk_1009D0A30);
}

uint64_t sub_1002BDF84(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t *v3;
  uint64_t *v5;
  uint64_t v8;
  unint64_t v9;
  char v10;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v5 = v3;
  v8 = *v5;
  swift_bridgeObjectRetain(*v5);
  v9 = sub_10004CE80(a1, a2);
  LOBYTE(a2) = v10;
  swift_bridgeObjectRelease(v8);
  if ((a2 & 1) == 0)
    return 0;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v5);
  v12 = *v5;
  v16 = *v5;
  *v5 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1002C2FEC(a3);
    v12 = v16;
  }
  swift_bridgeObjectRelease(*(_QWORD *)(*(_QWORD *)(v12 + 48) + 16 * v9 + 8));
  v13 = *(_QWORD *)(*(_QWORD *)(v12 + 56) + 8 * v9);
  sub_1002BEABC(v9, v12);
  v14 = *v5;
  *v5 = v12;
  swift_bridgeObjectRelease(v14);
  return v13;
}

uint64_t sub_1002BE060(uint64_t a1, uint64_t a2)
{
  return sub_1002BDC24(a1, a2, (uint64_t)&qword_1009D7B68, (void (*)(uint64_t))sub_1002C2790);
}

uint64_t sub_1002BE074(uint64_t a1, uint64_t a2)
{
  return sub_1002BDC24(a1, a2, (uint64_t)&qword_1009D7B60, (void (*)(uint64_t))sub_1002C2790);
}

uint64_t sub_1002BE088@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  unint64_t v7;
  char v8;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;

  v3 = v2;
  v6 = *v3;
  swift_bridgeObjectRetain(*v3);
  v7 = sub_1002BBDE4(a1);
  LOBYTE(a1) = v8;
  swift_bridgeObjectRelease(v6);
  if ((a1 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
    v10 = *v3;
    v21 = *v3;
    *v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1002C1C90();
      v10 = v21;
    }
    v11 = *(_QWORD *)(v10 + 48);
    v12 = type metadata accessor for CollectionRecommendationType(0);
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11 + *(_QWORD *)(*(_QWORD *)(v12 - 8) + 72) * v7, v12);
    v13 = *(_QWORD *)(v10 + 56);
    v14 = type metadata accessor for CollectionRecommendationOptions(0);
    v15 = *(_QWORD *)(v14 - 8);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v15 + 32))(a2, v13 + *(_QWORD *)(v15 + 72) * v7, v14);
    sub_1002BECA0(v7, v10);
    v16 = *v3;
    *v3 = v10;
    v17 = swift_bridgeObjectRelease(v16);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t, __n128))(v15 + 56))(a2, 0, 1, v14, v17);
  }
  else
  {
    v19 = type metadata accessor for CollectionRecommendationOptions(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(*(_QWORD *)(v19 - 8) + 56))(a2, 1, 1, v19, v20);
  }
}

uint64_t sub_1002BE1C4(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  unint64_t v7;
  char v8;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v3 = v2;
  v6 = *v3;
  swift_bridgeObjectRetain(*v3);
  v7 = sub_10004CE80(a1, a2);
  LOBYTE(a2) = v8;
  swift_bridgeObjectRelease(v6);
  if ((a2 & 1) == 0)
    return 0;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
  v10 = *v3;
  v14 = *v3;
  *v3 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1002C238C();
    v10 = v14;
  }
  swift_bridgeObjectRelease(*(_QWORD *)(*(_QWORD *)(v10 + 48) + 16 * v7 + 8));
  v11 = *(_QWORD *)(*(_QWORD *)(v10 + 56) + 24 * v7);
  sub_1002BF140(v7, v10);
  v12 = *v3;
  *v3 = v10;
  swift_bridgeObjectRelease(v12);
  return v11;
}

uint64_t sub_1002BE2B4(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  unint64_t v7;
  char v8;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v3 = v2;
  v6 = *v3;
  swift_bridgeObjectRetain(*v3);
  v7 = sub_10004CE80(a1, a2);
  LOBYTE(a2) = v8;
  swift_bridgeObjectRelease(v6);
  if ((a2 & 1) == 0)
    return 0;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
  v10 = *v3;
  v14 = *v3;
  *v3 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1002C293C();
    v10 = v14;
  }
  swift_bridgeObjectRelease(*(_QWORD *)(*(_QWORD *)(v10 + 48) + 16 * v7 + 8));
  v11 = *(_QWORD *)(*(_QWORD *)(v10 + 56) + 32 * v7);
  sub_1002BF334(v7, v10);
  v12 = *v3;
  *v3 = v10;
  swift_bridgeObjectRelease(v12);
  return v11;
}

unint64_t sub_1002BE3B4(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  Swift::Int v12;
  unint64_t v13;
  uint64_t v14;
  _OWORD *v15;
  _OWORD *v16;
  uint64_t v17;
  _OWORD *v18;
  _OWORD *v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  _QWORD v26[9];

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = _HashTable.previousHole(before:)(result, a2 + 64, ~v5);
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        v9 = (uint64_t *)(*(_QWORD *)(a2 + 48) + 16 * v6);
        v10 = *v9;
        v11 = v9[1];
        Hasher.init(_seed:)(v26, *(_QWORD *)(a2 + 40));
        swift_bridgeObjectRetain(v11);
        String.hash(into:)(v26, v10, v11);
        v12 = Hasher._finalize()();
        result = swift_bridgeObjectRelease(v11);
        v13 = v12 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v13 < v8)
            goto LABEL_5;
        }
        else if (v13 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v13)
        {
LABEL_11:
          v14 = *(_QWORD *)(a2 + 48);
          v15 = (_OWORD *)(v14 + 16 * v3);
          v16 = (_OWORD *)(v14 + 16 * v6);
          if (v3 != v6 || v15 >= v16 + 1)
            *v15 = *v16;
          v17 = *(_QWORD *)(a2 + 56);
          v18 = (_OWORD *)(v17 + 16 * v3);
          v19 = (_OWORD *)(v17 + 16 * v6);
          if (v3 != v6 || (v3 = v6, v18 >= v19 + 1))
          {
            *v18 = *v19;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v20 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v21 = *v20;
    v22 = (-1 << v3) - 1;
  }
  else
  {
    v20 = (uint64_t *)(v4 + 8 * (result >> 6));
    v22 = *v20;
    v21 = (-1 << result) - 1;
  }
  *v20 = v22 & v21;
  v23 = *(_QWORD *)(a2 + 16);
  v24 = __OFSUB__(v23, 1);
  v25 = v23 - 1;
  if (v24)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v25;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1002BE588(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __int128 v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  Swift::Int v13;
  unint64_t v14;
  uint64_t v15;
  _OWORD *v16;
  _OWORD *v17;
  uint64_t v18;
  _OWORD *v19;
  _OWORD *v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  _QWORD v27[9];

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = _HashTable.previousHole(before:)(result, a2 + 64, ~v5);
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        v10 = (uint64_t *)(*(_QWORD *)(a2 + 48) + 16 * v6);
        v11 = *v10;
        v12 = v10[1];
        Hasher.init(_seed:)(v27, *(_QWORD *)(a2 + 40));
        swift_bridgeObjectRetain(v12);
        String.hash(into:)(v27, v11, v12);
        v13 = Hasher._finalize()();
        result = swift_bridgeObjectRelease(v12);
        v14 = v13 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v14 < v8)
            goto LABEL_5;
        }
        else if (v14 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v14)
        {
LABEL_11:
          v15 = *(_QWORD *)(a2 + 48);
          v16 = (_OWORD *)(v15 + 16 * v3);
          v17 = (_OWORD *)(v15 + 16 * v6);
          if (v3 != v6 || v16 >= v17 + 1)
            *v16 = *v17;
          v18 = *(_QWORD *)(a2 + 56);
          v19 = (_OWORD *)(v18 + 32 * v3);
          v20 = (_OWORD *)(v18 + 32 * v6);
          if (v3 != v6 || (v3 = v6, v19 >= v20 + 2))
          {
            v9 = v20[1];
            *v19 = *v20;
            v19[1] = v9;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v21 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v22 = *v21;
    v23 = (-1 << v3) - 1;
  }
  else
  {
    v21 = (uint64_t *)(v4 + 8 * (result >> 6));
    v23 = *v21;
    v22 = (-1 << result) - 1;
  }
  *v21 = v23 & v22;
  v24 = *(_QWORD *)(a2 + 16);
  v25 = __OFSUB__(v24, 1);
  v26 = v24 - 1;
  if (v25)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v26;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1002BE75C(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __int128 v9;
  Swift::Int v10;
  Swift::Int v11;
  uint64_t v14;
  unint64_t v15;
  __int128 *v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  _OWORD *v20;
  _OWORD *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  _BYTE v28[40];

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = _HashTable.previousHole(before:)(result, a2 + 64, ~v5);
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        sub_1000569E0(*(_QWORD *)(a2 + 48) + 40 * v6, (uint64_t)v28);
        v10 = AnyHashable._rawHashValue(seed:)(*(_QWORD *)(a2 + 40));
        result = sub_1000569AC((uint64_t)v28);
        v11 = v10 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 >= v8 && v3 >= v11)
          {
LABEL_16:
            v14 = *(_QWORD *)(a2 + 48);
            v15 = v14 + 40 * v3;
            v16 = (__int128 *)(v14 + 40 * v6);
            if (v3 != v6 || v15 >= (unint64_t)v16 + 40)
            {
              v17 = *v16;
              v18 = v16[1];
              *(_QWORD *)(v15 + 32) = *((_QWORD *)v16 + 4);
              *(_OWORD *)v15 = v17;
              *(_OWORD *)(v15 + 16) = v18;
            }
            v19 = *(_QWORD *)(a2 + 56);
            v20 = (_OWORD *)(v19 + 32 * v3);
            v21 = (_OWORD *)(v19 + 32 * v6);
            if (v3 != v6 || (v3 = v6, v20 >= v21 + 2))
            {
              v9 = v21[1];
              *v20 = *v21;
              v20[1] = v9;
              v3 = v6;
            }
          }
        }
        else if (v11 >= v8 || v3 >= v11)
        {
          goto LABEL_16;
        }
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v22 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v23 = *v22;
    v24 = (-1 << v3) - 1;
  }
  else
  {
    v22 = (uint64_t *)(v4 + 8 * (result >> 6));
    v24 = *v22;
    v23 = (-1 << result) - 1;
  }
  *v22 = v24 & v23;
  v25 = *(_QWORD *)(a2 + 16);
  v26 = __OFSUB__(v25, 1);
  v27 = v25 - 1;
  if (v26)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v27;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1002BE928(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  unint64_t v11;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = _HashTable.previousHole(before:)(result, a2 + 64, ~v5);
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        v9 = *(_QWORD *)(a2 + 48);
        v10 = (_QWORD *)(v9 + 8 * v6);
        result = static Hasher._hash(seed:_:)(*(_QWORD *)(a2 + 40), *v10);
        v11 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 >= v8 && v3 >= (uint64_t)v11)
          {
LABEL_16:
            v14 = (_QWORD *)(v9 + 8 * v3);
            if (v3 != v6 || v14 >= v10 + 1)
              *v14 = *v10;
            v15 = *(_QWORD *)(a2 + 56);
            v16 = (_QWORD *)(v15 + 8 * v3);
            v17 = (_QWORD *)(v15 + 8 * v6);
            if (v3 != v6 || (v3 = v6, v16 >= v17 + 1))
            {
              *v16 = *v17;
              v3 = v6;
            }
          }
        }
        else if (v11 >= v8 || v3 >= (uint64_t)v11)
        {
          goto LABEL_16;
        }
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v18 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v19 = *v18;
    v20 = (-1 << v3) - 1;
  }
  else
  {
    v18 = (uint64_t *)(v4 + 8 * (result >> 6));
    v20 = *v18;
    v19 = (-1 << result) - 1;
  }
  *v18 = v20 & v19;
  v21 = *(_QWORD *)(a2 + 16);
  v22 = __OFSUB__(v21, 1);
  v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v23;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1002BEABC(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  Swift::Int v12;
  unint64_t v13;
  uint64_t v14;
  _OWORD *v15;
  _OWORD *v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  _QWORD v26[9];

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = _HashTable.previousHole(before:)(result, a2 + 64, ~v5);
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        v9 = (uint64_t *)(*(_QWORD *)(a2 + 48) + 16 * v6);
        v10 = *v9;
        v11 = v9[1];
        Hasher.init(_seed:)(v26, *(_QWORD *)(a2 + 40));
        swift_bridgeObjectRetain(v11);
        String.hash(into:)(v26, v10, v11);
        v12 = Hasher._finalize()();
        result = swift_bridgeObjectRelease(v11);
        v13 = v12 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v13 < v8)
            goto LABEL_5;
        }
        else if (v13 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v13)
        {
LABEL_11:
          v14 = *(_QWORD *)(a2 + 48);
          v15 = (_OWORD *)(v14 + 16 * v3);
          v16 = (_OWORD *)(v14 + 16 * v6);
          if (v3 != v6 || v15 >= v16 + 1)
            *v15 = *v16;
          v17 = *(_QWORD *)(a2 + 56);
          v18 = (_QWORD *)(v17 + 8 * v3);
          v19 = (_QWORD *)(v17 + 8 * v6);
          if (v3 != v6 || (v3 = v6, v18 >= v19 + 1))
          {
            *v18 = *v19;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v20 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v21 = *v20;
    v22 = (-1 << v3) - 1;
  }
  else
  {
    v20 = (uint64_t *)(v4 + 8 * (result >> 6));
    v22 = *v20;
    v21 = (-1 << result) - 1;
  }
  *v20 = v22 & v21;
  v23 = *(_QWORD *)(a2 + 16);
  v24 = __OFSUB__(v23, 1);
  v25 = v23 - 1;
  if (v24)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v25;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1002BEC94(unint64_t a1, uint64_t a2)
{
  return sub_1002BF748(a1, a2, (uint64_t (*)(_QWORD))&type metadata accessor for Book.Metadata);
}

void sub_1002BECA0(int64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int64_t v30;
  unint64_t v31;
  int64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  BOOL v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(char *, unint64_t, uint64_t);
  unint64_t v44;
  uint64_t v45;

  v4 = type metadata accessor for CollectionRecommendationType(0);
  v45 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v6 = (char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = a2 + 64;
  v8 = -1 << *(_BYTE *)(a2 + 32);
  v9 = (a1 + 1) & ~v8;
  if (((1 << v9) & *(_QWORD *)(a2 + 64 + 8 * (v9 >> 6))) != 0)
  {
    v10 = ~v8;
    v11 = _HashTable.previousHole(before:)(a1, a2 + 64, ~v8);
    if ((*(_QWORD *)(v7 + 8 * (v9 >> 6)) & (1 << v9)) != 0)
    {
      v44 = (v11 + 1) & v10;
      v12 = *(_QWORD *)(v45 + 72);
      v43 = *(void (**)(char *, unint64_t, uint64_t))(v45 + 16);
      v13 = v10;
      do
      {
        v14 = v7;
        v15 = v12;
        v16 = v12 * v9;
        v17 = v13;
        v43(v6, *(_QWORD *)(a2 + 48) + v12 * v9, v4);
        v18 = *(_QWORD *)(a2 + 40);
        v19 = sub_100008DB0(&qword_1009D7B00, (uint64_t (*)(uint64_t))&type metadata accessor for CollectionRecommendationType, (uint64_t)&protocol conformance descriptor for CollectionRecommendationType);
        v20 = dispatch thunk of Hashable._rawHashValue(seed:)(v18, v4, v19);
        (*(void (**)(char *, uint64_t))(v45 + 8))(v6, v4);
        v13 = v17;
        v21 = v20 & v17;
        if (a1 >= (uint64_t)v44)
        {
          if (v21 >= v44 && a1 >= (uint64_t)v21)
          {
LABEL_16:
            v24 = *(_QWORD *)(a2 + 48);
            v25 = v24 + v15 * a1;
            v26 = v24 + v16;
            v7 = v14;
            if (v15 * a1 < v16 || v25 >= v26 + v15)
            {
              swift_arrayInitWithTakeFrontToBack(v25, v26, 1, v4);
            }
            else if (v15 * a1 != v16)
            {
              swift_arrayInitWithTakeBackToFront(v25, v26);
            }
            v27 = *(_QWORD *)(a2 + 56);
            v28 = type metadata accessor for CollectionRecommendationOptions(0);
            v29 = *(_QWORD *)(*(_QWORD *)(v28 - 8) + 72);
            v30 = v29 * a1;
            v31 = v27 + v29 * a1;
            v32 = v29 * v9;
            v33 = v27 + v29 * v9;
            v34 = v33 + v29;
            if (v30 < v32 || v31 >= v34)
            {
              swift_arrayInitWithTakeFrontToBack(v31, v33, 1, v28);
              a1 = v9;
              v13 = v17;
            }
            else
            {
              a1 = v9;
              v13 = v17;
              if (v30 != v32)
              {
                swift_arrayInitWithTakeBackToFront(v31, v33);
                v13 = v17;
                a1 = v9;
              }
            }
            goto LABEL_5;
          }
        }
        else if (v21 >= v44 || a1 >= (uint64_t)v21)
        {
          goto LABEL_16;
        }
        v7 = v14;
LABEL_5:
        v9 = (v9 + 1) & v13;
        v12 = v15;
      }
      while (((*(_QWORD *)(v7 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
    }
    v36 = (uint64_t *)(v7 + 8 * ((unint64_t)a1 >> 6));
    v37 = *v36;
    v38 = (-1 << a1) - 1;
  }
  else
  {
    v36 = (uint64_t *)(v7 + 8 * ((unint64_t)a1 >> 6));
    v38 = *v36;
    v37 = (-1 << a1) - 1;
  }
  *v36 = v38 & v37;
  v39 = *(_QWORD *)(a2 + 16);
  v40 = __OFSUB__(v39, 1);
  v41 = v39 - 1;
  if (v40)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v41;
    ++*(_DWORD *)(a2 + 36);
  }
}

unint64_t sub_1002BEF74(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  unint64_t v11;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int64_t v18;
  int64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = _HashTable.previousHole(before:)(result, a2 + 64, ~v5);
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        v9 = *(_QWORD *)(a2 + 48);
        v10 = (_QWORD *)(v9 + 8 * v6);
        result = static Hasher._hash(seed:_:)(*(_QWORD *)(a2 + 40), *v10);
        v11 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 < v8 || v3 < (uint64_t)v11)
            goto LABEL_6;
        }
        else if (v11 < v8 && v3 < (uint64_t)v11)
        {
          goto LABEL_6;
        }
        v14 = (_QWORD *)(v9 + 8 * v3);
        if (v3 != v6 || v14 >= v10 + 1)
          *v14 = *v10;
        v15 = *(_QWORD *)(a2 + 56);
        v16 = sub_10004CFD4(&qword_1009D7AA0);
        v17 = *(_QWORD *)(*(_QWORD *)(v16 - 8) + 72);
        v18 = v17 * v3;
        result = v15 + v17 * v3;
        v19 = v17 * v6;
        v20 = v15 + v17 * v6;
        v21 = v20 + v17;
        if (v18 < v19 || result >= v21)
        {
          result = swift_arrayInitWithTakeFrontToBack(result, v20, 1, v16);
        }
        else
        {
          v3 = v6;
          if (v18 == v19)
            goto LABEL_6;
          result = swift_arrayInitWithTakeBackToFront(result, v20);
        }
        v3 = v6;
LABEL_6:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v23 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v24 = *v23;
    v25 = (-1 << v3) - 1;
  }
  else
  {
    v23 = (uint64_t *)(v4 + 8 * (result >> 6));
    v25 = *v23;
    v24 = (-1 << result) - 1;
  }
  *v23 = v25 & v24;
  v26 = *(_QWORD *)(a2 + 16);
  v27 = __OFSUB__(v26, 1);
  v28 = v26 - 1;
  if (v27)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v28;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1002BF140(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __int128 v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  Swift::Int v13;
  unint64_t v14;
  uint64_t v15;
  _OWORD *v16;
  _OWORD *v17;
  uint64_t v18;
  unint64_t v19;
  __int128 *v20;
  BOOL v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  _QWORD v28[9];

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = _HashTable.previousHole(before:)(result, a2 + 64, ~v5);
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        v10 = (uint64_t *)(*(_QWORD *)(a2 + 48) + 16 * v6);
        v11 = *v10;
        v12 = v10[1];
        Hasher.init(_seed:)(v28, *(_QWORD *)(a2 + 40));
        swift_bridgeObjectRetain(v12);
        String.hash(into:)(v28, v11, v12);
        v13 = Hasher._finalize()();
        result = swift_bridgeObjectRelease(v12);
        v14 = v13 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v14 < v8)
            goto LABEL_5;
        }
        else if (v14 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v14)
        {
LABEL_11:
          v15 = *(_QWORD *)(a2 + 48);
          v16 = (_OWORD *)(v15 + 16 * v3);
          v17 = (_OWORD *)(v15 + 16 * v6);
          if (v3 != v6 || v16 >= v17 + 1)
            *v16 = *v17;
          v18 = *(_QWORD *)(a2 + 56);
          v19 = v18 + 24 * v3;
          v20 = (__int128 *)(v18 + 24 * v6);
          if (24 * v3 < (uint64_t)(24 * v6) || v19 >= (unint64_t)v20 + 24 || (v21 = v3 == v6, v3 = v6, !v21))
          {
            v9 = *v20;
            *(_QWORD *)(v19 + 16) = *((_QWORD *)v20 + 2);
            *(_OWORD *)v19 = v9;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v22 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v23 = *v22;
    v24 = (-1 << v3) - 1;
  }
  else
  {
    v22 = (uint64_t *)(v4 + 8 * (result >> 6));
    v24 = *v22;
    v23 = (-1 << result) - 1;
  }
  *v22 = v24 & v23;
  v25 = *(_QWORD *)(a2 + 16);
  v26 = __OFSUB__(v25, 1);
  v27 = v25 - 1;
  if (v26)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v27;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1002BF334(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __int128 v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  Swift::Int v13;
  unint64_t v14;
  uint64_t v15;
  _OWORD *v16;
  _OWORD *v17;
  uint64_t v18;
  _OWORD *v19;
  _OWORD *v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  _QWORD v27[9];

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = _HashTable.previousHole(before:)(result, a2 + 64, ~v5);
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        v10 = (uint64_t *)(*(_QWORD *)(a2 + 48) + 16 * v6);
        v11 = *v10;
        v12 = v10[1];
        Hasher.init(_seed:)(v27, *(_QWORD *)(a2 + 40));
        swift_bridgeObjectRetain(v12);
        String.hash(into:)(v27, v11, v12);
        v13 = Hasher._finalize()();
        result = swift_bridgeObjectRelease(v12);
        v14 = v13 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v14 < v8)
            goto LABEL_5;
        }
        else if (v14 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v14)
        {
LABEL_11:
          v15 = *(_QWORD *)(a2 + 48);
          v16 = (_OWORD *)(v15 + 16 * v3);
          v17 = (_OWORD *)(v15 + 16 * v6);
          if (v3 != v6 || v16 >= v17 + 1)
            *v16 = *v17;
          v18 = *(_QWORD *)(a2 + 56);
          v19 = (_OWORD *)(v18 + 32 * v3);
          v20 = (_OWORD *)(v18 + 32 * v6);
          if (32 * v3 != 32 * v6 || (v3 = v6, v19 >= v20 + 2))
          {
            v9 = v20[1];
            *v19 = *v20;
            v19[1] = v9;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v21 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v22 = *v21;
    v23 = (-1 << v3) - 1;
  }
  else
  {
    v21 = (uint64_t *)(v4 + 8 * (result >> 6));
    v23 = *v21;
    v22 = (-1 << result) - 1;
  }
  *v21 = v23 & v22;
  v24 = *(_QWORD *)(a2 + 16);
  v25 = __OFSUB__(v24, 1);
  v26 = v24 - 1;
  if (v25)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v26;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1002BF510(unint64_t a1, uint64_t a2)
{
  return sub_1002BF51C(a1, a2, (uint64_t (*)(_QWORD))&type metadata accessor for Date);
}

unint64_t sub_1002BF51C(unint64_t result, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v9;
  unint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  Swift::Int v14;
  unint64_t v15;
  uint64_t v16;
  _OWORD *v17;
  _OWORD *v18;
  uint64_t v19;
  uint64_t v20;
  int64_t v21;
  int64_t v22;
  unint64_t v23;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;
  _QWORD v31[9];

  v4 = result;
  v5 = a2 + 64;
  v6 = -1 << *(_BYTE *)(a2 + 32);
  v7 = (result + 1) & ~v6;
  if (((1 << v7) & *(_QWORD *)(a2 + 64 + 8 * (v7 >> 6))) != 0)
  {
    v9 = ~v6;
    result = _HashTable.previousHole(before:)(result, a2 + 64, ~v6);
    if ((*(_QWORD *)(v5 + 8 * (v7 >> 6)) & (1 << v7)) != 0)
    {
      v10 = (result + 1) & v9;
      while (1)
      {
        v11 = (uint64_t *)(*(_QWORD *)(a2 + 48) + 16 * v7);
        v12 = *v11;
        v13 = v11[1];
        Hasher.init(_seed:)(v31, *(_QWORD *)(a2 + 40));
        swift_bridgeObjectRetain(v13);
        String.hash(into:)(v31, v12, v13);
        v14 = Hasher._finalize()();
        result = swift_bridgeObjectRelease(v13);
        v15 = v14 & v9;
        if (v4 >= (uint64_t)v10)
          break;
        if (v15 < v10)
          goto LABEL_11;
LABEL_12:
        v16 = *(_QWORD *)(a2 + 48);
        v17 = (_OWORD *)(v16 + 16 * v4);
        v18 = (_OWORD *)(v16 + 16 * v7);
        if (v4 != v7 || v17 >= v18 + 1)
          *v17 = *v18;
        v19 = *(_QWORD *)(a2 + 56);
        v20 = *(_QWORD *)(*(_QWORD *)(a3(0) - 8) + 72);
        v21 = v20 * v4;
        result = v19 + v20 * v4;
        v22 = v20 * v7;
        v23 = v19 + v20 * v7 + v20;
        if (v21 < v22 || result >= v23)
        {
          result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          v4 = v7;
          if (v21 == v22)
            goto LABEL_6;
          result = swift_arrayInitWithTakeBackToFront();
        }
        v4 = v7;
LABEL_6:
        v7 = (v7 + 1) & v9;
        if (((*(_QWORD *)(v5 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) == 0)
          goto LABEL_21;
      }
      if (v15 < v10)
        goto LABEL_6;
LABEL_11:
      if (v4 < (uint64_t)v15)
        goto LABEL_6;
      goto LABEL_12;
    }
LABEL_21:
    v25 = (uint64_t *)(v5 + 8 * ((unint64_t)v4 >> 6));
    v26 = *v25;
    v27 = (-1 << v4) - 1;
  }
  else
  {
    v25 = (uint64_t *)(v5 + 8 * (result >> 6));
    v27 = *v25;
    v26 = (-1 << result) - 1;
  }
  *v25 = v27 & v26;
  v28 = *(_QWORD *)(a2 + 16);
  v29 = __OFSUB__(v28, 1);
  v30 = v28 - 1;
  if (v29)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v30;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1002BF724(unint64_t a1, uint64_t a2)
{
  return sub_1002BF748(a1, a2, (uint64_t (*)(_QWORD))&type metadata accessor for CFIRange);
}

unint64_t sub_1002BF730(unint64_t a1, uint64_t a2)
{
  return sub_1002BF748(a1, a2, (uint64_t (*)(_QWORD))&type metadata accessor for ContentMessage.CFIUpdate);
}

unint64_t sub_1002BF73C(unint64_t a1, uint64_t a2)
{
  return sub_1002BF748(a1, a2, (uint64_t (*)(_QWORD))&type metadata accessor for StoreBookRating);
}

unint64_t sub_1002BF748(unint64_t result, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  unint64_t v13;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  int64_t v19;
  int64_t v20;
  unint64_t v21;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;

  v4 = result;
  v5 = a2 + 64;
  v6 = -1 << *(_BYTE *)(a2 + 32);
  v7 = (result + 1) & ~v6;
  if (((1 << v7) & *(_QWORD *)(a2 + 64 + 8 * (v7 >> 6))) != 0)
  {
    v9 = ~v6;
    result = _HashTable.previousHole(before:)(result, a2 + 64, ~v6);
    if ((*(_QWORD *)(v5 + 8 * (v7 >> 6)) & (1 << v7)) != 0)
    {
      v10 = (result + 1) & v9;
      do
      {
        v11 = *(_QWORD *)(a2 + 48);
        v12 = (_QWORD *)(v11 + 8 * v7);
        result = static Hasher._hash(seed:_:)(*(_QWORD *)(a2 + 40), *v12);
        v13 = result & v9;
        if (v4 >= (uint64_t)v10)
        {
          if (v13 < v10 || v4 < (uint64_t)v13)
            goto LABEL_6;
        }
        else if (v13 < v10 && v4 < (uint64_t)v13)
        {
          goto LABEL_6;
        }
        v16 = (_QWORD *)(v11 + 8 * v4);
        if (v4 != v7 || v16 >= v12 + 1)
          *v16 = *v12;
        v17 = *(_QWORD *)(a2 + 56);
        v18 = *(_QWORD *)(*(_QWORD *)(a3(0) - 8) + 72);
        v19 = v18 * v4;
        result = v17 + v18 * v4;
        v20 = v18 * v7;
        v21 = v17 + v18 * v7 + v18;
        if (v19 < v20 || result >= v21)
        {
          result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          v4 = v7;
          if (v19 == v20)
            goto LABEL_6;
          result = swift_arrayInitWithTakeBackToFront();
        }
        v4 = v7;
LABEL_6:
        v7 = (v7 + 1) & v9;
      }
      while (((*(_QWORD *)(v5 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) != 0);
    }
    v23 = (uint64_t *)(v5 + 8 * ((unint64_t)v4 >> 6));
    v24 = *v23;
    v25 = (-1 << v4) - 1;
  }
  else
  {
    v23 = (uint64_t *)(v5 + 8 * (result >> 6));
    v25 = *v23;
    v24 = (-1 << result) - 1;
  }
  *v23 = v25 & v24;
  v26 = *(_QWORD *)(a2 + 16);
  v27 = __OFSUB__(v26, 1);
  v28 = v26 - 1;
  if (v27)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v28;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

void sub_1002BF910()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;

  v1 = v0;
  sub_10004CFD4((uint64_t *)&unk_1009D7A30);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    swift_release(v2);
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v25 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v25 >= v13)
      goto LABEL_26;
    v26 = *(_QWORD *)(v6 + 8 * v25);
    ++v9;
    if (!v26)
    {
      v9 = v25 + 1;
      if (v25 + 1 >= v13)
        goto LABEL_26;
      v26 = *(_QWORD *)(v6 + 8 * v9);
      if (!v26)
        break;
    }
LABEL_25:
    v12 = (v26 - 1) & v26;
    v15 = __clz(__rbit64(v26)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + v16);
    v19 = *v17;
    v18 = v17[1];
    v20 = (uint64_t *)(*(_QWORD *)(v2 + 56) + v16);
    v21 = *v20;
    v22 = v20[1];
    v23 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v23 = v19;
    v23[1] = v18;
    v24 = (_QWORD *)(*(_QWORD *)(v4 + 56) + v16);
    *v24 = v21;
    v24[1] = v22;
    swift_bridgeObjectRetain(v18);
    swift_bridgeObjectRetain(v22);
  }
  v27 = v25 + 2;
  if (v27 >= v13)
    goto LABEL_26;
  v26 = *(_QWORD *)(v6 + 8 * v27);
  if (v26)
  {
    v9 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v26 = *(_QWORD *)(v6 + 8 * v9);
    ++v27;
    if (v26)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void *sub_1002BFAC8()
{
  return sub_1002C1118(&qword_1009D0A40, (void (*)(unint64_t, _BYTE *))sub_10004CD0C, (void (*)(_BYTE *, uint64_t))sub_10004CFC4);
}

id sub_1002BFAE4()
{
  return sub_1002C1948(&qword_1009D7B80);
}

void sub_1002BFAF0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;

  v1 = v0;
  sub_10004CFD4(&qword_1009D05F0);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    swift_release(v2);
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_26;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
        break;
    }
LABEL_25:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v18 = *v16;
    v17 = v16[1];
    LOBYTE(v16) = *(_BYTE *)(*(_QWORD *)(v2 + 56) + v15);
    v19 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v15);
    *v19 = v18;
    v19[1] = v17;
    *(_BYTE *)(*(_QWORD *)(v4 + 56) + v15) = (_BYTE)v16;
    swift_bridgeObjectRetain(v17);
  }
  v22 = v20 + 2;
  if (v22 >= v13)
    goto LABEL_26;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_1002BFC98()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  unint64_t v6;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t *v24;
  uint64_t v25;
  _BYTE v26[40];

  v1 = v0;
  sub_10004CFD4((uint64_t *)&unk_1009D7A40);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    swift_release(v2);
LABEL_28:
    *v1 = v4;
    return;
  }
  v24 = v1;
  v5 = (void *)(v3 + 64);
  v6 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v6)
    memmove(v5, (const void *)(v2 + 64), 8 * v6);
  v25 = v2 + 64;
  v8 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v9 = 1 << *(_BYTE *)(v2 + 32);
  v10 = -1;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  v11 = v10 & *(_QWORD *)(v2 + 64);
  v12 = (unint64_t)(v9 + 63) >> 6;
  while (1)
  {
    if (v11)
    {
      v13 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v14 = v13 | (v8 << 6);
      goto LABEL_12;
    }
    v21 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v21 >= v12)
      goto LABEL_26;
    v22 = *(_QWORD *)(v25 + 8 * v21);
    ++v8;
    if (!v22)
    {
      v8 = v21 + 1;
      if (v21 + 1 >= v12)
        goto LABEL_26;
      v22 = *(_QWORD *)(v25 + 8 * v8);
      if (!v22)
        break;
    }
LABEL_25:
    v11 = (v22 - 1) & v22;
    v14 = __clz(__rbit64(v22)) + (v8 << 6);
LABEL_12:
    v15 = 16 * v14;
    v16 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v14);
    v17 = *v16;
    v18 = v16[1];
    v19 = 40 * v14;
    sub_10000B5E4(*(_QWORD *)(v2 + 56) + 40 * v14, (uint64_t)v26, &qword_1009E8A20);
    v20 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v15);
    *v20 = v17;
    v20[1] = v18;
    sub_100025B3C((uint64_t)v26, *(_QWORD *)(v4 + 56) + v19, &qword_1009E8A20);
    swift_bridgeObjectRetain(v18);
  }
  v23 = v21 + 2;
  if (v23 >= v12)
  {
LABEL_26:
    swift_release(v2);
    v1 = v24;
    goto LABEL_28;
  }
  v22 = *(_QWORD *)(v25 + 8 * v23);
  if (v22)
  {
    v8 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    v8 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v8 >= v12)
      goto LABEL_26;
    v22 = *(_QWORD *)(v25 + 8 * v8);
    ++v23;
    if (v22)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
}

void sub_1002BFE98()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  unint64_t v6;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t *v24;
  uint64_t v25;
  _BYTE v26[32];

  v1 = v0;
  sub_10004CFD4((uint64_t *)&unk_1009DDD90);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    swift_release(v2);
LABEL_28:
    *v1 = v4;
    return;
  }
  v24 = v1;
  v5 = (void *)(v3 + 64);
  v6 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v6)
    memmove(v5, (const void *)(v2 + 64), 8 * v6);
  v25 = v2 + 64;
  v8 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v9 = 1 << *(_BYTE *)(v2 + 32);
  v10 = -1;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  v11 = v10 & *(_QWORD *)(v2 + 64);
  v12 = (unint64_t)(v9 + 63) >> 6;
  while (1)
  {
    if (v11)
    {
      v13 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v14 = v13 | (v8 << 6);
      goto LABEL_12;
    }
    v21 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v21 >= v12)
      goto LABEL_26;
    v22 = *(_QWORD *)(v25 + 8 * v21);
    ++v8;
    if (!v22)
    {
      v8 = v21 + 1;
      if (v21 + 1 >= v12)
        goto LABEL_26;
      v22 = *(_QWORD *)(v25 + 8 * v8);
      if (!v22)
        break;
    }
LABEL_25:
    v11 = (v22 - 1) & v22;
    v14 = __clz(__rbit64(v22)) + (v8 << 6);
LABEL_12:
    v15 = 16 * v14;
    v16 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v14);
    v17 = *v16;
    v18 = v16[1];
    v19 = 32 * v14;
    sub_10000B5E4(*(_QWORD *)(v2 + 56) + 32 * v14, (uint64_t)v26, (uint64_t *)&unk_1009D04E0);
    v20 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v15);
    *v20 = v17;
    v20[1] = v18;
    sub_100025B3C((uint64_t)v26, *(_QWORD *)(v4 + 56) + v19, (uint64_t *)&unk_1009D04E0);
    swift_bridgeObjectRetain(v18);
  }
  v23 = v21 + 2;
  if (v23 >= v12)
  {
LABEL_26:
    swift_release(v2);
    v1 = v24;
    goto LABEL_28;
  }
  v22 = *(_QWORD *)(v25 + 8 * v23);
  if (v22)
  {
    v8 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    v8 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v8 >= v12)
      goto LABEL_26;
    v22 = *(_QWORD *)(v25 + 8 * v8);
    ++v23;
    if (v22)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
}

void sub_1002C0094()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  _BYTE v24[32];
  _OWORD v25[2];
  uint64_t v26;

  v1 = v0;
  sub_10004CFD4(&qword_1009D04D0);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    swift_release(v2);
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v21 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v21 >= v13)
      goto LABEL_26;
    v22 = *(_QWORD *)(v6 + 8 * v21);
    ++v9;
    if (!v22)
    {
      v9 = v21 + 1;
      if (v21 + 1 >= v13)
        goto LABEL_26;
      v22 = *(_QWORD *)(v6 + 8 * v9);
      if (!v22)
        break;
    }
LABEL_25:
    v12 = (v22 - 1) & v22;
    v15 = __clz(__rbit64(v22)) + (v9 << 6);
LABEL_12:
    v16 = 40 * v15;
    sub_1000569E0(*(_QWORD *)(v2 + 48) + 40 * v15, (uint64_t)v25);
    v17 = 32 * v15;
    sub_10000B5E4(*(_QWORD *)(v2 + 56) + v17, (uint64_t)v24, (uint64_t *)&unk_1009D04E0);
    v18 = *(_QWORD *)(v4 + 48) + v16;
    v19 = v25[0];
    v20 = v25[1];
    *(_QWORD *)(v18 + 32) = v26;
    *(_OWORD *)v18 = v19;
    *(_OWORD *)(v18 + 16) = v20;
    sub_100025B3C((uint64_t)v24, *(_QWORD *)(v4 + 56) + v17, (uint64_t *)&unk_1009D04E0);
  }
  v23 = v21 + 2;
  if (v23 >= v13)
    goto LABEL_26;
  v22 = *(_QWORD *)(v6 + 8 * v23);
  if (v22)
  {
    v9 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v22 = *(_QWORD *)(v6 + 8 * v9);
    ++v23;
    if (v22)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

id sub_1002C0288()
{
  return sub_1002C1948((uint64_t *)&unk_1009DDEE0);
}

void *sub_1002C0294()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;

  v1 = v0;
  sub_10004CFD4((uint64_t *)&unk_1009D7BF8);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release(v2);
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v18 = v17[1];
    v19 = 8 * v15;
    v20 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v19);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = *v17;
    v21[1] = v18;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain(v18);
    result = (void *)swift_unknownObjectRetain(v20);
  }
  v24 = v22 + 2;
  if (v24 >= v13)
    goto LABEL_26;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void sub_1002C0448()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;

  v1 = v0;
  sub_10004CFD4((uint64_t *)&unk_1009D0A50);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    swift_release(v2);
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v23 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v13)
      goto LABEL_26;
    v24 = *(_QWORD *)(v6 + 8 * v23);
    ++v9;
    if (!v24)
    {
      v9 = v23 + 1;
      if (v23 + 1 >= v13)
        goto LABEL_26;
      v24 = *(_QWORD *)(v6 + 8 * v9);
      if (!v24)
        break;
    }
LABEL_25:
    v12 = (v24 - 1) & v24;
    v15 = __clz(__rbit64(v24)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v19 = *v17;
    v18 = v17[1];
    v20 = 8 * v15;
    v21 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v20);
    v22 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v22 = v19;
    v22[1] = v18;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v20) = v21;
    swift_bridgeObjectRetain(v18);
  }
  v25 = v23 + 2;
  if (v25 >= v13)
    goto LABEL_26;
  v24 = *(_QWORD *)(v6 + 8 * v25);
  if (v24)
  {
    v9 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v24 = *(_QWORD *)(v6 + 8 * v9);
    ++v25;
    if (v24)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_1002C05F4()
{
  sub_1002C2B2C((uint64_t (*)(_QWORD))&type metadata accessor for JSON, &qword_1009D7A50);
}

id sub_1002C0608()
{
  return sub_1002C1948((uint64_t *)&unk_1009D7BD0);
}

void sub_1002C0614()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  _OWORD v24[2];
  _OWORD v25[2];
  uint64_t v26;

  v1 = v0;
  sub_10004CFD4(&qword_1009D0A60);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    swift_release(v2);
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v21 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v21 >= v13)
      goto LABEL_26;
    v22 = *(_QWORD *)(v6 + 8 * v21);
    ++v9;
    if (!v22)
    {
      v9 = v21 + 1;
      if (v21 + 1 >= v13)
        goto LABEL_26;
      v22 = *(_QWORD *)(v6 + 8 * v9);
      if (!v22)
        break;
    }
LABEL_25:
    v12 = (v22 - 1) & v22;
    v15 = __clz(__rbit64(v22)) + (v9 << 6);
LABEL_12:
    v16 = 40 * v15;
    sub_1000569E0(*(_QWORD *)(v2 + 48) + 40 * v15, (uint64_t)v25);
    v17 = 32 * v15;
    sub_10004CD0C(*(_QWORD *)(v2 + 56) + v17, (uint64_t)v24);
    v18 = *(_QWORD *)(v4 + 48) + v16;
    v19 = v25[0];
    v20 = v25[1];
    *(_QWORD *)(v18 + 32) = v26;
    *(_OWORD *)v18 = v19;
    *(_OWORD *)(v18 + 16) = v20;
    sub_10004CFC4(v24, (_OWORD *)(*(_QWORD *)(v4 + 56) + v17));
  }
  v23 = v21 + 2;
  if (v23 >= v13)
    goto LABEL_26;
  v22 = *(_QWORD *)(v6 + 8 * v23);
  if (v22)
  {
    v9 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v22 = *(_QWORD *)(v6 + 8 * v9);
    ++v23;
    if (v22)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

id sub_1002C07F8()
{
  return sub_1002C1948((uint64_t *)&unk_1009D7C50);
}

id sub_1002C0804()
{
  return sub_1002C1948(&qword_1009DDF90);
}

void sub_1002C0810()
{
  sub_1002C2FEC((uint64_t *)&unk_1009DDF50);
}

void sub_1002C081C()
{
  sub_1002C0850(&qword_1009D7BC8, (void (*)(_BYTE *, uint64_t))sub_100022840);
}

id sub_1002C0830()
{
  return sub_1002C1948(&qword_1009D7BC0);
}

void sub_1002C083C()
{
  sub_1002C0850((uint64_t *)&unk_1009D7A60, (void (*)(_BYTE *, uint64_t))sub_100022840);
}

void sub_1002C0850(uint64_t *a1, void (*a2)(_BYTE *, uint64_t))
{
  uint64_t *v2;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  unint64_t v9;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  uint64_t *v27;
  uint64_t v28;
  _BYTE v29[40];

  v4 = v2;
  sub_10004CFD4(a1);
  v5 = *v2;
  v6 = static _DictionaryStorage.copy(original:)(*v2);
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
    swift_release(v5);
LABEL_28:
    *v4 = v7;
    return;
  }
  v27 = v4;
  v8 = (void *)(v6 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)v8 >= v5 + 64 + 8 * v9)
    memmove(v8, (const void *)(v5 + 64), 8 * v9);
  v28 = v5 + 64;
  v11 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v12 = 1 << *(_BYTE *)(v5 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v5 + 64);
  v15 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      v16 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v17 = v16 | (v11 << 6);
      goto LABEL_12;
    }
    v24 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v24 >= v15)
      goto LABEL_26;
    v25 = *(_QWORD *)(v28 + 8 * v24);
    ++v11;
    if (!v25)
    {
      v11 = v24 + 1;
      if (v24 + 1 >= v15)
        goto LABEL_26;
      v25 = *(_QWORD *)(v28 + 8 * v11);
      if (!v25)
        break;
    }
LABEL_25:
    v14 = (v25 - 1) & v25;
    v17 = __clz(__rbit64(v25)) + (v11 << 6);
LABEL_12:
    v18 = 16 * v17;
    v19 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v17);
    v20 = *v19;
    v21 = v19[1];
    v22 = 40 * v17;
    sub_10002E418(*(_QWORD *)(v5 + 56) + 40 * v17, (uint64_t)v29);
    v23 = (_QWORD *)(*(_QWORD *)(v7 + 48) + v18);
    *v23 = v20;
    v23[1] = v21;
    a2(v29, *(_QWORD *)(v7 + 56) + v22);
    swift_bridgeObjectRetain(v21);
  }
  v26 = v24 + 2;
  if (v26 >= v15)
  {
LABEL_26:
    swift_release(v5);
    v4 = v27;
    goto LABEL_28;
  }
  v25 = *(_QWORD *)(v28 + 8 * v26);
  if (v25)
  {
    v11 = v26;
    goto LABEL_25;
  }
  while (1)
  {
    v11 = v26 + 1;
    if (__OFADD__(v26, 1))
      break;
    if (v11 >= v15)
      goto LABEL_26;
    v25 = *(_QWORD *)(v28 + 8 * v11);
    ++v26;
    if (v25)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
}

void sub_1002C0A3C(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  id v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;
  __int128 v26;

  v2 = v1;
  sub_10004CFD4(a1);
  v3 = *v1;
  v4 = static _DictionaryStorage.copy(original:)(*v1);
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_26:
    swift_release(v3);
    *v2 = v5;
    return;
  }
  v6 = (void *)(v4 + 64);
  v7 = v3 + 64;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)v6 >= v3 + 64 + 8 * v8)
    memmove(v6, (const void *)(v3 + 64), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 64);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v23 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v14)
      goto LABEL_26;
    v24 = *(_QWORD *)(v7 + 8 * v23);
    ++v10;
    if (!v24)
    {
      v10 = v23 + 1;
      if (v23 + 1 >= v14)
        goto LABEL_26;
      v24 = *(_QWORD *)(v7 + 8 * v10);
      if (!v24)
        break;
    }
LABEL_25:
    v13 = (v24 - 1) & v24;
    v16 = __clz(__rbit64(v24)) + (v10 << 6);
LABEL_12:
    v17 = 16 * v16;
    v18 = (uint64_t *)(*(_QWORD *)(v3 + 48) + v17);
    v20 = *v18;
    v19 = v18[1];
    v26 = *(_OWORD *)(*(_QWORD *)(v3 + 56) + v17);
    v21 = (_QWORD *)(*(_QWORD *)(v5 + 48) + v17);
    *v21 = v20;
    v21[1] = v19;
    *(_OWORD *)(*(_QWORD *)(v5 + 56) + v17) = v26;
    swift_bridgeObjectRetain(v19);
    v22 = (id)v26;
    swift_retain(*((_QWORD *)&v26 + 1));
  }
  v25 = v23 + 2;
  if (v25 >= v14)
    goto LABEL_26;
  v24 = *(_QWORD *)(v7 + 8 * v25);
  if (v24)
  {
    v10 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    v10 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v10 >= v14)
      goto LABEL_26;
    v24 = *(_QWORD *)(v7 + 8 * v10);
    ++v25;
    if (v24)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_1002C0C00()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;

  v1 = v0;
  sub_10004CFD4((uint64_t *)&unk_1009D7C60);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    swift_release(v2);
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v19 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v13)
      goto LABEL_26;
    v20 = *(_QWORD *)(v6 + 8 * v19);
    ++v9;
    if (!v20)
    {
      v9 = v19 + 1;
      if (v19 + 1 >= v13)
        goto LABEL_26;
      v20 = *(_QWORD *)(v6 + 8 * v9);
      if (!v20)
        break;
    }
LABEL_25:
    v22 = __clz(__rbit64(v20));
    v12 = (v20 - 1) & v20;
    v15 = v22 + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = 8 * v15;
    v18 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v17);
    *(_OWORD *)(*(_QWORD *)(v4 + 48) + v16) = *(_OWORD *)(*(_QWORD *)(v2 + 48) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v17) = v18;
  }
  v21 = v19 + 2;
  if (v21 >= v13)
    goto LABEL_26;
  v20 = *(_QWORD *)(v6 + 8 * v21);
  if (v20)
  {
    v9 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v20 = *(_QWORD *)(v6 + 8 * v9);
    ++v21;
    if (v20)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_1002C0D90()
{
  sub_1002C0F64(&qword_1009D0750);
}

id sub_1002C0D9C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  void *v18;
  id v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;

  v1 = v0;
  sub_10004CFD4((uint64_t *)&unk_1009DDE30);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (id)swift_release(v2);
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_26;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
        break;
    }
LABEL_25:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(void **)(*(_QWORD *)(v2 + 48) + v16);
    v18 = *(void **)(*(_QWORD *)(v2 + 56) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v16) = v18;
    v19 = v17;
    result = v18;
  }
  v22 = v20 + 2;
  if (v22 >= v13)
    goto LABEL_26;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1002C0F40()
{
  return sub_1002C1948(&qword_1009D7A58);
}

void sub_1002C0F4C()
{
  sub_1002C2FEC(&qword_1009D7B98);
}

void sub_1002C0F58()
{
  sub_1002C0F64(&qword_1009D7B78);
}

void sub_1002C0F64(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;

  v2 = v1;
  sub_10004CFD4(a1);
  v3 = *v1;
  v4 = static _DictionaryStorage.copy(original:)(*v1);
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_26:
    swift_release(v3);
    *v2 = v5;
    return;
  }
  v6 = (void *)(v4 + 64);
  v7 = v3 + 64;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)v6 >= v3 + 64 + 8 * v8)
    memmove(v6, (const void *)(v3 + 64), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 64);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v19 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v14)
      goto LABEL_26;
    v20 = *(_QWORD *)(v7 + 8 * v19);
    ++v10;
    if (!v20)
    {
      v10 = v19 + 1;
      if (v19 + 1 >= v14)
        goto LABEL_26;
      v20 = *(_QWORD *)(v7 + 8 * v10);
      if (!v20)
        break;
    }
LABEL_25:
    v13 = (v20 - 1) & v20;
    v16 = __clz(__rbit64(v20)) + (v10 << 6);
LABEL_12:
    v17 = 8 * v16;
    v18 = *(_QWORD *)(*(_QWORD *)(v3 + 56) + v17);
    *(_QWORD *)(*(_QWORD *)(v5 + 48) + v17) = *(_QWORD *)(*(_QWORD *)(v3 + 48) + v17);
    *(_QWORD *)(*(_QWORD *)(v5 + 56) + v17) = v18;
    swift_bridgeObjectRetain(v18);
  }
  v21 = v19 + 2;
  if (v21 >= v14)
    goto LABEL_26;
  v20 = *(_QWORD *)(v7 + 8 * v21);
  if (v20)
  {
    v10 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    v10 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v10 >= v14)
      goto LABEL_26;
    v20 = *(_QWORD *)(v7 + 8 * v10);
    ++v21;
    if (v20)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void *sub_1002C10FC()
{
  return sub_1002C1118(&qword_1009D04F8, (void (*)(unint64_t, _BYTE *))sub_10004CD0C, (void (*)(_BYTE *, uint64_t))sub_10004CFC4);
}

void *sub_1002C1118(uint64_t *a1, void (*a2)(unint64_t, _BYTE *), void (*a3)(_BYTE *, uint64_t))
{
  uint64_t *v3;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *result;
  unint64_t v10;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;
  uint64_t *v28;
  uint64_t v29;
  _BYTE v31[32];

  v5 = v3;
  sub_10004CFD4(a1);
  v6 = *v3;
  v7 = static _DictionaryStorage.copy(original:)(*v3);
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
  {
    result = (void *)swift_release(v6);
LABEL_28:
    *v5 = v8;
    return result;
  }
  v28 = v5;
  result = (void *)(v7 + 64);
  v10 = (unint64_t)((1 << *(_BYTE *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v6 + 64 + 8 * v10)
    result = memmove(result, (const void *)(v6 + 64), 8 * v10);
  v29 = v6 + 64;
  v12 = 0;
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v6 + 16);
  v13 = 1 << *(_BYTE *)(v6 + 32);
  v14 = -1;
  if (v13 < 64)
    v14 = ~(-1 << v13);
  v15 = v14 & *(_QWORD *)(v6 + 64);
  v16 = (unint64_t)(v13 + 63) >> 6;
  while (1)
  {
    if (v15)
    {
      v17 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v18 = v17 | (v12 << 6);
      goto LABEL_12;
    }
    v25 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v25 >= v16)
      goto LABEL_26;
    v26 = *(_QWORD *)(v29 + 8 * v25);
    ++v12;
    if (!v26)
    {
      v12 = v25 + 1;
      if (v25 + 1 >= v16)
        goto LABEL_26;
      v26 = *(_QWORD *)(v29 + 8 * v12);
      if (!v26)
        break;
    }
LABEL_25:
    v15 = (v26 - 1) & v26;
    v18 = __clz(__rbit64(v26)) + (v12 << 6);
LABEL_12:
    v19 = 16 * v18;
    v20 = (uint64_t *)(*(_QWORD *)(v6 + 48) + 16 * v18);
    v21 = *v20;
    v22 = v20[1];
    v23 = 32 * v18;
    a2(*(_QWORD *)(v6 + 56) + 32 * v18, v31);
    v24 = (_QWORD *)(*(_QWORD *)(v8 + 48) + v19);
    *v24 = v21;
    v24[1] = v22;
    a3(v31, *(_QWORD *)(v8 + 56) + v23);
    result = (void *)swift_bridgeObjectRetain(v22);
  }
  v27 = v25 + 2;
  if (v27 >= v16)
  {
LABEL_26:
    result = (void *)swift_release(v6);
    v5 = v28;
    goto LABEL_28;
  }
  v26 = *(_QWORD *)(v29 + 8 * v27);
  if (v26)
  {
    v12 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    v12 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v12 >= v16)
      goto LABEL_26;
    v26 = *(_QWORD *)(v29 + 8 * v12);
    ++v27;
    if (v26)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void sub_1002C1308()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  id v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  _OWORD v23[2];

  v1 = v0;
  sub_10004CFD4(&qword_1009D05E0);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    swift_release(v2);
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_26;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
        break;
    }
LABEL_25:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(void **)(*(_QWORD *)(v2 + 48) + 8 * v15);
    v18 = 32 * v15;
    sub_10004CD0C(*(_QWORD *)(v2 + 56) + 32 * v15, (uint64_t)v23);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    sub_10004CFC4(v23, (_OWORD *)(*(_QWORD *)(v4 + 56) + v18));
    v19 = v17;
  }
  v22 = v20 + 2;
  if (v22 >= v13)
    goto LABEL_26;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_1002C14CC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  __int128 v25;
  int64_t v26;
  unint64_t v27;
  int64_t v28;
  uint64_t *v29;
  _OWORD v30[3];
  uint64_t v31;

  v1 = v0;
  sub_10004CFD4(&qword_1009D7B50);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    swift_release(v2);
LABEL_28:
    *v1 = v4;
    return;
  }
  v29 = v1;
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v26 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v26 >= v13)
      goto LABEL_26;
    v27 = *(_QWORD *)(v6 + 8 * v26);
    ++v9;
    if (!v27)
    {
      v9 = v26 + 1;
      if (v26 + 1 >= v13)
        goto LABEL_26;
      v27 = *(_QWORD *)(v6 + 8 * v9);
      if (!v27)
        break;
    }
LABEL_25:
    v12 = (v27 - 1) & v27;
    v15 = __clz(__rbit64(v27)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v18 = *v17;
    v19 = v17[1];
    v20 = 56 * v15;
    sub_10000B5E4(*(_QWORD *)(v2 + 56) + 56 * v15, (uint64_t)v30, &qword_1009D7B58);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = v18;
    v21[1] = v19;
    v22 = *(_QWORD *)(v4 + 56) + v20;
    v23 = v31;
    v24 = v30[2];
    v25 = v30[1];
    *(_OWORD *)v22 = v30[0];
    *(_OWORD *)(v22 + 16) = v25;
    *(_OWORD *)(v22 + 32) = v24;
    *(_QWORD *)(v22 + 48) = v23;
    swift_bridgeObjectRetain(v19);
  }
  v28 = v26 + 2;
  if (v28 >= v13)
  {
LABEL_26:
    swift_release(v2);
    v1 = v29;
    goto LABEL_28;
  }
  v27 = *(_QWORD *)(v6 + 8 * v28);
  if (v27)
  {
    v9 = v28;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v28 + 1;
    if (__OFADD__(v28, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v27 = *(_QWORD *)(v6 + 8 * v9);
    ++v28;
    if (v27)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
}

void *sub_1002C16D0()
{
  return sub_1002C31A4(&qword_1009D7B70);
}

void sub_1002C16DC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  unint64_t v10;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t *v25;
  uint64_t v26;

  v1 = v0;
  v2 = type metadata accessor for UUID(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10004CFD4(&qword_1009D0560);
  v6 = *v0;
  v7 = static _DictionaryStorage.copy(original:)(*v0);
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
  {
    swift_release(v6);
LABEL_28:
    *v1 = v8;
    return;
  }
  v25 = v1;
  v9 = (void *)(v7 + 64);
  v10 = (unint64_t)((1 << *(_BYTE *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)v9 >= v6 + 64 + 8 * v10)
    memmove(v9, (const void *)(v6 + 64), 8 * v10);
  v26 = v6 + 64;
  v12 = 0;
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v6 + 16);
  v13 = 1 << *(_BYTE *)(v6 + 32);
  v14 = -1;
  if (v13 < 64)
    v14 = ~(-1 << v13);
  v15 = v14 & *(_QWORD *)(v6 + 64);
  v16 = (unint64_t)(v13 + 63) >> 6;
  while (1)
  {
    if (v15)
    {
      v17 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v18 = v17 | (v12 << 6);
      goto LABEL_12;
    }
    v22 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v16)
      goto LABEL_26;
    v23 = *(_QWORD *)(v26 + 8 * v22);
    ++v12;
    if (!v23)
    {
      v12 = v22 + 1;
      if (v22 + 1 >= v16)
        goto LABEL_26;
      v23 = *(_QWORD *)(v26 + 8 * v12);
      if (!v23)
        break;
    }
LABEL_25:
    v15 = (v23 - 1) & v23;
    v18 = __clz(__rbit64(v23)) + (v12 << 6);
LABEL_12:
    v19 = *(_QWORD *)(v3 + 72) * v18;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v5, *(_QWORD *)(v6 + 48) + v19, v2);
    v20 = 8 * v18;
    v21 = *(_QWORD *)(*(_QWORD *)(v6 + 56) + v20);
    (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(_QWORD *)(v8 + 48) + v19, v5, v2);
    *(_QWORD *)(*(_QWORD *)(v8 + 56) + v20) = v21;
  }
  v24 = v22 + 2;
  if (v24 >= v16)
  {
LABEL_26:
    swift_release(v6);
    v1 = v25;
    goto LABEL_28;
  }
  v23 = *(_QWORD *)(v26 + 8 * v24);
  if (v23)
  {
    v12 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v12 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v12 >= v16)
      goto LABEL_26;
    v23 = *(_QWORD *)(v26 + 8 * v12);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
}

void sub_1002C1910()
{
  sub_1002C3350((uint64_t (*)(_QWORD))&type metadata accessor for Book.Metadata, &qword_1009D7A70);
}

id sub_1002C1924()
{
  return sub_1002C1948(&qword_1009D7A80);
}

id sub_1002C1930()
{
  return sub_1002C1948(&qword_1009D7A88);
}

id sub_1002C193C()
{
  return sub_1002C1948(&qword_1009D7A98);
}

id sub_1002C1948(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id result;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  _QWORD *v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;

  v2 = v1;
  sub_10004CFD4(a1);
  v3 = *v1;
  v4 = static _DictionaryStorage.copy(original:)(*v1);
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_26:
    result = (id)swift_release(v3);
    *v2 = v5;
    return result;
  }
  result = (id)(v4 + 64);
  v7 = v3 + 64;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8)
    result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 64);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v23 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v14)
      goto LABEL_26;
    v24 = *(_QWORD *)(v7 + 8 * v23);
    ++v10;
    if (!v24)
    {
      v10 = v23 + 1;
      if (v23 + 1 >= v14)
        goto LABEL_26;
      v24 = *(_QWORD *)(v7 + 8 * v10);
      if (!v24)
        break;
    }
LABEL_25:
    v13 = (v24 - 1) & v24;
    v16 = __clz(__rbit64(v24)) + (v10 << 6);
LABEL_12:
    v17 = 16 * v16;
    v18 = (_QWORD *)(*(_QWORD *)(v3 + 48) + 16 * v16);
    v19 = v18[1];
    v20 = 8 * v16;
    v21 = *(void **)(*(_QWORD *)(v3 + 56) + v20);
    v22 = (_QWORD *)(*(_QWORD *)(v5 + 48) + v17);
    *v22 = *v18;
    v22[1] = v19;
    *(_QWORD *)(*(_QWORD *)(v5 + 56) + v20) = v21;
    swift_bridgeObjectRetain(v19);
    result = v21;
  }
  v25 = v23 + 2;
  if (v25 >= v14)
    goto LABEL_26;
  v24 = *(_QWORD *)(v7 + 8 * v25);
  if (v24)
  {
    v10 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    v10 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v10 >= v14)
      goto LABEL_26;
    v24 = *(_QWORD *)(v7 + 8 * v10);
    ++v25;
    if (v24)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void sub_1002C1AF0()
{
  sub_1002C3350((uint64_t (*)(_QWORD))&type metadata accessor for Book.MediaType, &qword_1009D7A90);
}

void sub_1002C1B04()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;

  v1 = v0;
  sub_10004CFD4(&qword_1009D7A78);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    swift_release(v2);
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      v9 = v18 + 1;
      if (v18 + 1 >= v13)
        goto LABEL_26;
      v19 = *(_QWORD *)(v6 + 8 * v9);
      if (!v19)
        break;
    }
LABEL_25:
    v21 = __clz(__rbit64(v19));
    v12 = (v19 - 1) & v19;
    v15 = v21 + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = *(_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v16) = v17;
  }
  v20 = v18 + 2;
  if (v20 >= v13)
    goto LABEL_26;
  v19 = *(_QWORD *)(v6 + 8 * v20);
  if (v19)
  {
    v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v9);
    ++v20;
    if (v19)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_1002C1C90()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char *v26;
  int64_t v27;
  unint64_t v28;
  int64_t v29;
  int64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  int64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int64_t v44;

  v41 = type metadata accessor for CollectionRecommendationOptions(0);
  v37 = *(_QWORD *)(v41 - 8);
  __chkstk_darwin(v41);
  v40 = (char *)&v33 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = type metadata accessor for CollectionRecommendationType(0);
  v36 = *(_QWORD *)(v39 - 8);
  __chkstk_darwin(v39);
  v38 = (char *)&v33 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10004CFD4(&qword_1009D05C0);
  v33 = v0;
  v3 = *v0;
  v4 = static _DictionaryStorage.copy(original:)(*v0);
  v5 = *(_QWORD *)(v3 + 16);
  v43 = v4;
  if (!v5)
  {
    swift_release(v3);
    v32 = v43;
    v31 = v33;
LABEL_25:
    *v31 = v32;
    return;
  }
  v6 = v4;
  v7 = (char *)(v4 + 64);
  v8 = (char *)(v3 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v6 + 32)) + 63) >> 6;
  v34 = v3 + 64;
  if (v6 != v3 || v7 >= &v8[8 * v9])
  {
    memmove(v7, v8, 8 * v9);
    v6 = v43;
  }
  v10 = 0;
  *(_QWORD *)(v6 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v42 = v3;
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 64);
  v35 = (unint64_t)(v11 + 63) >> 6;
  v14 = v36;
  v15 = v37;
  v17 = v38;
  v16 = v39;
  v18 = v41;
  v19 = v43;
  while (1)
  {
    if (v13)
    {
      v20 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v44 = v10;
      v21 = v20 | (v10 << 6);
      v22 = v42;
      goto LABEL_9;
    }
    v27 = v10 + 1;
    v22 = v42;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v27 >= v35)
      goto LABEL_23;
    v28 = *(_QWORD *)(v34 + 8 * v27);
    v29 = v10 + 1;
    if (!v28)
    {
      v29 = v27 + 1;
      if (v27 + 1 >= v35)
        goto LABEL_23;
      v28 = *(_QWORD *)(v34 + 8 * v29);
      if (!v28)
        break;
    }
LABEL_22:
    v13 = (v28 - 1) & v28;
    v44 = v29;
    v21 = __clz(__rbit64(v28)) + (v29 << 6);
LABEL_9:
    v23 = *(_QWORD *)(v14 + 72) * v21;
    (*(void (**)(char *, unint64_t, uint64_t))(v14 + 16))(v17, *(_QWORD *)(v22 + 48) + v23, v16);
    v24 = *(_QWORD *)(v15 + 72) * v21;
    v25 = *(_QWORD *)(v22 + 56) + v24;
    v26 = v40;
    (*(void (**)(char *, unint64_t, uint64_t))(v15 + 16))(v40, v25, v18);
    (*(void (**)(unint64_t, char *, uint64_t))(v14 + 32))(*(_QWORD *)(v19 + 48) + v23, v17, v16);
    (*(void (**)(unint64_t, char *, uint64_t))(v15 + 32))(*(_QWORD *)(v19 + 56) + v24, v26, v18);
    v10 = v44;
  }
  v30 = v27 + 2;
  if (v30 >= v35)
  {
LABEL_23:
    swift_release(v42);
    v31 = v33;
    v32 = v43;
    goto LABEL_25;
  }
  v28 = *(_QWORD *)(v34 + 8 * v30);
  if (v28)
  {
    v29 = v30;
    goto LABEL_22;
  }
  while (1)
  {
    v29 = v30 + 1;
    if (__OFADD__(v30, 1))
      break;
    if (v29 >= v35)
      goto LABEL_23;
    v28 = *(_QWORD *)(v34 + 8 * v29);
    ++v30;
    if (v28)
      goto LABEL_22;
  }
LABEL_27:
  __break(1u);
}

void sub_1002C1F70()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  int64_t v25;

  v1 = sub_10004CFD4(&qword_1009D7AA0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10004CFD4(&qword_1009D7AA8);
  v23 = v0;
  v5 = *v0;
  v6 = static _DictionaryStorage.copy(original:)(*v0);
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
LABEL_23:
    swift_release(v5);
    *v23 = v7;
    return;
  }
  v8 = (void *)(v6 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)v8 >= v5 + 64 + 8 * v9)
    memmove(v8, (const void *)(v5 + 64), 8 * v9);
  v10 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v11 = 1 << *(_BYTE *)(v5 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v5 + 64);
  v24 = v5 + 64;
  v25 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v14 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v15 = v14 | (v10 << 6);
      goto LABEL_9;
    }
    v19 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v19 >= v25)
      goto LABEL_23;
    v20 = *(_QWORD *)(v24 + 8 * v19);
    ++v10;
    if (!v20)
    {
      v10 = v19 + 1;
      if (v19 + 1 >= v25)
        goto LABEL_23;
      v20 = *(_QWORD *)(v24 + 8 * v10);
      if (!v20)
        break;
    }
LABEL_22:
    v13 = (v20 - 1) & v20;
    v15 = __clz(__rbit64(v20)) + (v10 << 6);
LABEL_9:
    v16 = 8 * v15;
    v17 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + 8 * v15);
    v18 = *(_QWORD *)(v2 + 72) * v15;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(_QWORD *)(v5 + 56) + v18, v1);
    *(_QWORD *)(*(_QWORD *)(v7 + 48) + v16) = v17;
    (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(_QWORD *)(v7 + 56) + v18, v4, v1);
  }
  v21 = v19 + 2;
  if (v21 >= v25)
    goto LABEL_23;
  v20 = *(_QWORD *)(v24 + 8 * v21);
  if (v20)
  {
    v10 = v21;
    goto LABEL_22;
  }
  while (1)
  {
    v10 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v10 >= v25)
      goto LABEL_23;
    v20 = *(_QWORD *)(v24 + 8 * v10);
    ++v21;
    if (v20)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
}

void sub_1002C2198()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;
  uint64_t *v28;
  _OWORD v29[2];
  uint64_t v30;

  v1 = v0;
  sub_10004CFD4(&qword_1009DDEF0);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    swift_release(v2);
LABEL_28:
    *v1 = v4;
    return;
  }
  v28 = v1;
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v25 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v25 >= v13)
      goto LABEL_26;
    v26 = *(_QWORD *)(v6 + 8 * v25);
    ++v9;
    if (!v26)
    {
      v9 = v25 + 1;
      if (v25 + 1 >= v13)
        goto LABEL_26;
      v26 = *(_QWORD *)(v6 + 8 * v9);
      if (!v26)
        break;
    }
LABEL_25:
    v12 = (v26 - 1) & v26;
    v15 = __clz(__rbit64(v26)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v19 = *v17;
    v18 = v17[1];
    v20 = 40 * v15;
    sub_1000569E0(*(_QWORD *)(v2 + 56) + 40 * v15, (uint64_t)v29);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = v19;
    v21[1] = v18;
    v22 = *(_QWORD *)(v4 + 56) + v20;
    v23 = v30;
    v24 = v29[1];
    *(_OWORD *)v22 = v29[0];
    *(_OWORD *)(v22 + 16) = v24;
    *(_QWORD *)(v22 + 32) = v23;
    swift_bridgeObjectRetain(v18);
  }
  v27 = v25 + 2;
  if (v27 >= v13)
  {
LABEL_26:
    swift_release(v2);
    v1 = v28;
    goto LABEL_28;
  }
  v26 = *(_QWORD *)(v6 + 8 * v27);
  if (v26)
  {
    v9 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v26 = *(_QWORD *)(v6 + 8 * v9);
    ++v27;
    if (v26)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
}

void sub_1002C238C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  _QWORD *v24;
  uint64_t v25;
  int64_t v26;
  unint64_t v27;
  int64_t v28;

  v1 = v0;
  sub_10004CFD4((uint64_t *)&unk_1009D09E0);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    swift_release(v2);
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v26 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v26 >= v13)
      goto LABEL_26;
    v27 = *(_QWORD *)(v6 + 8 * v26);
    ++v9;
    if (!v27)
    {
      v9 = v26 + 1;
      if (v26 + 1 >= v13)
        goto LABEL_26;
      v27 = *(_QWORD *)(v6 + 8 * v9);
      if (!v27)
        break;
    }
LABEL_25:
    v12 = (v27 - 1) & v27;
    v15 = __clz(__rbit64(v27)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = *(_QWORD *)(v2 + 56);
    v18 = (_QWORD *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v19 = v18[1];
    v20 = 24 * v15;
    v21 = *(_QWORD *)(v17 + v20);
    v22 = *(_QWORD *)(v17 + v20 + 8);
    v23 = *(_BYTE *)(v17 + v20 + 16);
    v24 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v24 = *v18;
    v24[1] = v19;
    v25 = *(_QWORD *)(v4 + 56) + v20;
    *(_QWORD *)v25 = v21;
    *(_QWORD *)(v25 + 8) = v22;
    *(_BYTE *)(v25 + 16) = v23;
    swift_bridgeObjectRetain(v19);
    sub_1001E160C(v21, v22, v23);
  }
  v28 = v26 + 2;
  if (v28 >= v13)
    goto LABEL_26;
  v27 = *(_QWORD *)(v6 + 8 * v28);
  if (v27)
  {
    v9 = v28;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v28 + 1;
    if (__OFADD__(v28, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v27 = *(_QWORD *)(v6 + 8 * v9);
    ++v28;
    if (v27)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_1002C2564()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  unint64_t v9;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  _QWORD *v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;

  v1 = v0;
  v2 = type metadata accessor for NoteHighlight(0);
  v30 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v4 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10004CFD4(&qword_1009D0530);
  v5 = *v0;
  v6 = static _DictionaryStorage.copy(original:)(*v0);
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
    swift_release(v5);
LABEL_28:
    *v1 = v7;
    return;
  }
  v28 = v1;
  v8 = (void *)(v6 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)v8 >= v5 + 64 + 8 * v9)
    memmove(v8, (const void *)(v5 + 64), 8 * v9);
  v29 = v5 + 64;
  v11 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v12 = 1 << *(_BYTE *)(v5 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v5 + 64);
  v15 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      v16 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v17 = v16 | (v11 << 6);
      goto LABEL_12;
    }
    v24 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v24 >= v15)
      goto LABEL_26;
    v25 = *(_QWORD *)(v29 + 8 * v24);
    ++v11;
    if (!v25)
    {
      v11 = v24 + 1;
      if (v24 + 1 >= v15)
        goto LABEL_26;
      v25 = *(_QWORD *)(v29 + 8 * v11);
      if (!v25)
        break;
    }
LABEL_25:
    v14 = (v25 - 1) & v25;
    v17 = __clz(__rbit64(v25)) + (v11 << 6);
LABEL_12:
    v18 = 16 * v17;
    v19 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v17);
    v21 = *v19;
    v20 = v19[1];
    v22 = *(_QWORD *)(v30 + 72) * v17;
    sub_1002C6D20(*(_QWORD *)(v5 + 56) + v22, (uint64_t)v4);
    v23 = (_QWORD *)(*(_QWORD *)(v7 + 48) + v18);
    *v23 = v21;
    v23[1] = v20;
    sub_1001E08CC((uint64_t)v4, *(_QWORD *)(v7 + 56) + v22);
    swift_bridgeObjectRetain(v20);
  }
  v26 = v24 + 2;
  if (v26 >= v15)
  {
LABEL_26:
    swift_release(v5);
    v1 = v28;
    goto LABEL_28;
  }
  v25 = *(_QWORD *)(v29 + 8 * v26);
  if (v25)
  {
    v11 = v26;
    goto LABEL_25;
  }
  while (1)
  {
    v11 = v26 + 1;
    if (__OFADD__(v26, 1))
      break;
    if (v11 >= v15)
      goto LABEL_26;
    v25 = *(_QWORD *)(v29 + 8 * v11);
    ++v26;
    if (v25)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
}

void sub_1002C2790(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;

  v2 = v1;
  sub_10004CFD4(a1);
  v3 = *v1;
  v4 = static _DictionaryStorage.copy(original:)(*v1);
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_26:
    swift_release(v3);
    *v2 = v5;
    return;
  }
  v6 = (void *)(v4 + 64);
  v7 = v3 + 64;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)v6 >= v3 + 64 + 8 * v8)
    memmove(v6, (const void *)(v3 + 64), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 64);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v23 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v14)
      goto LABEL_26;
    v24 = *(_QWORD *)(v7 + 8 * v23);
    ++v10;
    if (!v24)
    {
      v10 = v23 + 1;
      if (v23 + 1 >= v14)
        goto LABEL_26;
      v24 = *(_QWORD *)(v7 + 8 * v10);
      if (!v24)
        break;
    }
LABEL_25:
    v13 = (v24 - 1) & v24;
    v16 = __clz(__rbit64(v24)) + (v10 << 6);
LABEL_12:
    v17 = 16 * v16;
    v18 = (_QWORD *)(*(_QWORD *)(v3 + 48) + 16 * v16);
    v19 = v18[1];
    v20 = 8 * v16;
    v21 = *(_QWORD *)(*(_QWORD *)(v3 + 56) + v20);
    v22 = (_QWORD *)(*(_QWORD *)(v5 + 48) + v17);
    *v22 = *v18;
    v22[1] = v19;
    *(_QWORD *)(*(_QWORD *)(v5 + 56) + v20) = v21;
    swift_bridgeObjectRetain(v19);
    swift_retain(v21);
  }
  v25 = v23 + 2;
  if (v25 >= v14)
    goto LABEL_26;
  v24 = *(_QWORD *)(v7 + 8 * v25);
  if (v24)
  {
    v10 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    v10 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v10 >= v14)
      goto LABEL_26;
    v24 = *(_QWORD *)(v7 + 8 * v10);
    ++v25;
    if (v24)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_1002C293C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  _QWORD *v25;
  uint64_t v26;
  id v27;
  int64_t v28;
  unint64_t v29;
  int64_t v30;

  v1 = v0;
  sub_10004CFD4((uint64_t *)&unk_1009D7B40);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    swift_release(v2);
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v28 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v28 >= v13)
      goto LABEL_26;
    v29 = *(_QWORD *)(v6 + 8 * v28);
    ++v9;
    if (!v29)
    {
      v9 = v28 + 1;
      if (v28 + 1 >= v13)
        goto LABEL_26;
      v29 = *(_QWORD *)(v6 + 8 * v9);
      if (!v29)
        break;
    }
LABEL_25:
    v12 = (v29 - 1) & v29;
    v15 = __clz(__rbit64(v29)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v18 = *v17;
    v19 = v17[1];
    v20 = 32 * v15;
    v21 = *(_QWORD *)(v2 + 56) + v20;
    v22 = *(_QWORD *)v21;
    v23 = *(_QWORD *)(v21 + 8);
    v24 = *(void **)(v21 + 16);
    LOBYTE(v21) = *(_BYTE *)(v21 + 24);
    v25 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v25 = v18;
    v25[1] = v19;
    v26 = *(_QWORD *)(v4 + 56) + v20;
    *(_QWORD *)v26 = v22;
    *(_QWORD *)(v26 + 8) = v23;
    *(_QWORD *)(v26 + 16) = v24;
    *(_BYTE *)(v26 + 24) = v21;
    v27 = v24;
    swift_bridgeObjectRetain(v19);
    swift_bridgeObjectRetain(v23);
  }
  v30 = v28 + 2;
  if (v30 >= v13)
    goto LABEL_26;
  v29 = *(_QWORD *)(v6 + 8 * v30);
  if (v29)
  {
    v9 = v30;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v30 + 1;
    if (__OFADD__(v30, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v29 = *(_QWORD *)(v6 + 8 * v9);
    ++v30;
    if (v29)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_1002C2B18()
{
  sub_1002C2B2C((uint64_t (*)(_QWORD))&type metadata accessor for Date, (uint64_t *)&unk_1009D7B30);
}

void sub_1002C2B2C(uint64_t (*a1)(_QWORD), uint64_t *a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  unint64_t v12;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  int64_t v28;
  unint64_t v29;
  int64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  int64_t v36;
  uint64_t v37;
  uint64_t v38;

  v37 = a1(0);
  v4 = *(_QWORD *)(v37 - 8);
  __chkstk_darwin(v37);
  v6 = (char *)&v33 - v5;
  sub_10004CFD4(a2);
  v34 = v2;
  v7 = *v2;
  v8 = static _DictionaryStorage.copy(original:)(*v2);
  v9 = *(_QWORD *)(v7 + 16);
  v38 = v8;
  if (!v9)
  {
    swift_release(v7);
    v32 = v38;
    v31 = v34;
LABEL_28:
    *v31 = v32;
    return;
  }
  v10 = v8;
  v11 = (void *)(v8 + 64);
  v12 = (unint64_t)((1 << *(_BYTE *)(v10 + 32)) + 63) >> 6;
  if (v10 != v7 || (unint64_t)v11 >= v7 + 64 + 8 * v12)
  {
    memmove(v11, (const void *)(v7 + 64), 8 * v12);
    v10 = v38;
  }
  v35 = v7 + 64;
  v14 = 0;
  *(_QWORD *)(v10 + 16) = *(_QWORD *)(v7 + 16);
  v15 = 1 << *(_BYTE *)(v7 + 32);
  v16 = -1;
  if (v15 < 64)
    v16 = ~(-1 << v15);
  v17 = v16 & *(_QWORD *)(v7 + 64);
  v36 = (unint64_t)(v15 + 63) >> 6;
  v18 = v37;
  while (1)
  {
    if (v17)
    {
      v19 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      v20 = v19 | (v14 << 6);
      goto LABEL_12;
    }
    v28 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v28 >= v36)
      goto LABEL_26;
    v29 = *(_QWORD *)(v35 + 8 * v28);
    ++v14;
    if (!v29)
    {
      v14 = v28 + 1;
      if (v28 + 1 >= v36)
        goto LABEL_26;
      v29 = *(_QWORD *)(v35 + 8 * v14);
      if (!v29)
        break;
    }
LABEL_25:
    v17 = (v29 - 1) & v29;
    v20 = __clz(__rbit64(v29)) + (v14 << 6);
LABEL_12:
    v21 = 16 * v20;
    v22 = (uint64_t *)(*(_QWORD *)(v7 + 48) + 16 * v20);
    v24 = *v22;
    v23 = v22[1];
    v25 = *(_QWORD *)(v4 + 72) * v20;
    (*(void (**)(char *, unint64_t, uint64_t))(v4 + 16))(v6, *(_QWORD *)(v7 + 56) + v25, v18);
    v26 = v38;
    v27 = (_QWORD *)(*(_QWORD *)(v38 + 48) + v21);
    *v27 = v24;
    v27[1] = v23;
    (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(*(_QWORD *)(v26 + 56) + v25, v6, v18);
    swift_bridgeObjectRetain(v23);
  }
  v30 = v28 + 2;
  if (v30 >= v36)
  {
LABEL_26:
    swift_release(v7);
    v31 = v34;
    v32 = v38;
    goto LABEL_28;
  }
  v29 = *(_QWORD *)(v35 + 8 * v30);
  if (v29)
  {
    v14 = v30;
    goto LABEL_25;
  }
  while (1)
  {
    v14 = v30 + 1;
    if (__OFADD__(v30, 1))
      break;
    if (v14 >= v36)
      goto LABEL_26;
    v29 = *(_QWORD *)(v35 + 8 * v14);
    ++v30;
    if (v29)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
}

void sub_1002C2D88()
{
  sub_1002C3350((uint64_t (*)(_QWORD))&type metadata accessor for CFIRange, (uint64_t *)&unk_1009D7AC0);
}

void sub_1002C2D9C()
{
  sub_1002C3350((uint64_t (*)(_QWORD))&type metadata accessor for ContentMessage.CFIUpdate, &qword_1009D0A28);
}

void sub_1002C2DB0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  unint64_t v9;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  int64_t v26;

  v1 = type metadata accessor for Date(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10004CFD4(&qword_1009D7AD0);
  v24 = v0;
  v5 = *v0;
  v6 = static _DictionaryStorage.copy(original:)(*v0);
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
LABEL_26:
    swift_release(v5);
    *v24 = v7;
    return;
  }
  v8 = (void *)(v6 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)v8 >= v5 + 64 + 8 * v9)
    memmove(v8, (const void *)(v5 + 64), 8 * v9);
  v25 = v5 + 64;
  v11 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v12 = 1 << *(_BYTE *)(v5 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v5 + 64);
  v26 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      v15 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v16 = v15 | (v11 << 6);
      goto LABEL_12;
    }
    v20 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v26)
      goto LABEL_26;
    v21 = *(_QWORD *)(v25 + 8 * v20);
    ++v11;
    if (!v21)
    {
      v11 = v20 + 1;
      if (v20 + 1 >= v26)
        goto LABEL_26;
      v21 = *(_QWORD *)(v25 + 8 * v11);
      if (!v21)
        break;
    }
LABEL_25:
    v14 = (v21 - 1) & v21;
    v16 = __clz(__rbit64(v21)) + (v11 << 6);
LABEL_12:
    v17 = *(_QWORD *)(v2 + 72) * v16;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(_QWORD *)(v5 + 48) + v17, v1);
    v18 = 8 * v16;
    v19 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v16);
    (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(_QWORD *)(v7 + 48) + v17, v4, v1);
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + v18) = v19;
    swift_bridgeObjectRetain(v19);
  }
  v22 = v20 + 2;
  if (v22 >= v26)
    goto LABEL_26;
  v21 = *(_QWORD *)(v25 + 8 * v22);
  if (v21)
  {
    v11 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v11 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v11 >= v26)
      goto LABEL_26;
    v21 = *(_QWORD *)(v25 + 8 * v11);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_1002C2FE0()
{
  sub_1002C2FEC((uint64_t *)&unk_1009DDDF0);
}

void sub_1002C2FEC(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;

  v2 = v1;
  sub_10004CFD4(a1);
  v3 = *v1;
  v4 = static _DictionaryStorage.copy(original:)(*v1);
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_26:
    swift_release(v3);
    *v2 = v5;
    return;
  }
  v6 = (void *)(v4 + 64);
  v7 = v3 + 64;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)v6 >= v3 + 64 + 8 * v8)
    memmove(v6, (const void *)(v3 + 64), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 64);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v23 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v14)
      goto LABEL_26;
    v24 = *(_QWORD *)(v7 + 8 * v23);
    ++v10;
    if (!v24)
    {
      v10 = v23 + 1;
      if (v23 + 1 >= v14)
        goto LABEL_26;
      v24 = *(_QWORD *)(v7 + 8 * v10);
      if (!v24)
        break;
    }
LABEL_25:
    v13 = (v24 - 1) & v24;
    v16 = __clz(__rbit64(v24)) + (v10 << 6);
LABEL_12:
    v17 = 16 * v16;
    v18 = (_QWORD *)(*(_QWORD *)(v3 + 48) + 16 * v16);
    v19 = v18[1];
    v20 = 8 * v16;
    v21 = *(_QWORD *)(*(_QWORD *)(v3 + 56) + v20);
    v22 = (_QWORD *)(*(_QWORD *)(v5 + 48) + v17);
    *v22 = *v18;
    v22[1] = v19;
    *(_QWORD *)(*(_QWORD *)(v5 + 56) + v20) = v21;
    swift_bridgeObjectRetain(v19);
    swift_bridgeObjectRetain(v21);
  }
  v25 = v23 + 2;
  if (v25 >= v14)
    goto LABEL_26;
  v24 = *(_QWORD *)(v7 + 8 * v25);
  if (v24)
  {
    v10 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    v10 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v10 >= v14)
      goto LABEL_26;
    v24 = *(_QWORD *)(v7 + 8 * v10);
    ++v25;
    if (v24)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void *sub_1002C3198()
{
  return sub_1002C31A4(&qword_1009D09D0);
}

void *sub_1002C31A4(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *result;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;

  v2 = v1;
  sub_10004CFD4(a1);
  v3 = *v1;
  v4 = static _DictionaryStorage.copy(original:)(*v1);
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_26:
    result = (void *)swift_release(v3);
    *v2 = v5;
    return result;
  }
  result = (void *)(v4 + 64);
  v7 = v3 + 64;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8)
    result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 64);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v19 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v14)
      goto LABEL_26;
    v20 = *(_QWORD *)(v7 + 8 * v19);
    ++v10;
    if (!v20)
    {
      v10 = v19 + 1;
      if (v19 + 1 >= v14)
        goto LABEL_26;
      v20 = *(_QWORD *)(v7 + 8 * v10);
      if (!v20)
        break;
    }
LABEL_25:
    v13 = (v20 - 1) & v20;
    v16 = __clz(__rbit64(v20)) + (v10 << 6);
LABEL_12:
    v17 = 8 * v16;
    v18 = *(_QWORD *)(*(_QWORD *)(v3 + 56) + v17);
    *(_QWORD *)(*(_QWORD *)(v5 + 48) + v17) = *(_QWORD *)(*(_QWORD *)(v3 + 48) + v17);
    *(_QWORD *)(*(_QWORD *)(v5 + 56) + v17) = v18;
    result = (void *)swift_retain(v18);
  }
  v21 = v19 + 2;
  if (v21 >= v14)
    goto LABEL_26;
  v20 = *(_QWORD *)(v7 + 8 * v21);
  if (v20)
  {
    v10 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    v10 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v10 >= v14)
      goto LABEL_26;
    v20 = *(_QWORD *)(v7 + 8 * v10);
    ++v21;
    if (v20)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void sub_1002C333C()
{
  sub_1002C3350((uint64_t (*)(_QWORD))&type metadata accessor for StoreBookRating, &qword_1009D0550);
}

void sub_1002C3350(uint64_t (*a1)(_QWORD), uint64_t *a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  unint64_t v12;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  int64_t v29;

  v4 = a1(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v26 - v6;
  sub_10004CFD4(a2);
  v27 = v2;
  v8 = *v2;
  v9 = static _DictionaryStorage.copy(original:)(*v2);
  v10 = v9;
  if (!*(_QWORD *)(v8 + 16))
  {
LABEL_26:
    swift_release(v8);
    *v27 = v10;
    return;
  }
  v11 = (void *)(v9 + 64);
  v12 = (unint64_t)((1 << *(_BYTE *)(v10 + 32)) + 63) >> 6;
  if (v10 != v8 || (unint64_t)v11 >= v8 + 64 + 8 * v12)
    memmove(v11, (const void *)(v8 + 64), 8 * v12);
  v14 = 0;
  *(_QWORD *)(v10 + 16) = *(_QWORD *)(v8 + 16);
  v15 = 1 << *(_BYTE *)(v8 + 32);
  v16 = -1;
  if (v15 < 64)
    v16 = ~(-1 << v15);
  v17 = v16 & *(_QWORD *)(v8 + 64);
  v28 = v8 + 64;
  v29 = (unint64_t)(v15 + 63) >> 6;
  while (1)
  {
    if (v17)
    {
      v18 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      v19 = v18 | (v14 << 6);
      goto LABEL_12;
    }
    v23 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v29)
      goto LABEL_26;
    v24 = *(_QWORD *)(v28 + 8 * v23);
    ++v14;
    if (!v24)
    {
      v14 = v23 + 1;
      if (v23 + 1 >= v29)
        goto LABEL_26;
      v24 = *(_QWORD *)(v28 + 8 * v14);
      if (!v24)
        break;
    }
LABEL_25:
    v17 = (v24 - 1) & v24;
    v19 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_12:
    v20 = 8 * v19;
    v21 = *(_QWORD *)(*(_QWORD *)(v8 + 48) + 8 * v19);
    v22 = *(_QWORD *)(v5 + 72) * v19;
    (*(void (**)(char *, unint64_t, uint64_t))(v5 + 16))(v7, *(_QWORD *)(v8 + 56) + v22, v4);
    *(_QWORD *)(*(_QWORD *)(v10 + 48) + v20) = v21;
    (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(*(_QWORD *)(v10 + 56) + v22, v7, v4);
  }
  v25 = v23 + 2;
  if (v25 >= v29)
    goto LABEL_26;
  v24 = *(_QWORD *)(v28 + 8 * v25);
  if (v24)
  {
    v14 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    v14 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v14 >= v29)
      goto LABEL_26;
    v24 = *(_QWORD *)(v28 + 8 * v14);
    ++v25;
    if (v24)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

_QWORD *sub_1002C3570(_QWORD *a1)
{
  return sub_1005B06B8(0, a1[2], 0, a1);
}

_QWORD *sub_1002C3584(_QWORD *a1)
{
  return sub_1005B0580(0, a1[2], 0, a1);
}

_QWORD *sub_1002C3598(_QWORD *a1)
{
  return sub_100043ED0(0, a1[2], 0, a1);
}

_QWORD *sub_1002C35AC(_QWORD *a1)
{
  return sub_1005B0900(0, a1[2], 0, a1);
}

_QWORD *sub_1002C35C0(_QWORD *a1)
{
  return sub_1005B1614(0, a1[2], 0, a1);
}

_QWORD *sub_1002C35D4(_QWORD *a1)
{
  return sub_1005B058C(0, a1[2], 0, a1);
}

uint64_t sub_1002C35E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    v3 = a3;
    v5 = a2;
    v7 = a1;
    v6 = *v4;
    if (!((unint64_t)*v4 >> 62))
    {
      v9 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v9 >= a2)
        goto LABEL_4;
LABEL_34:
      __break(1u);
      goto LABEL_35;
    }
  }
  if (v6 < 0)
    v24 = v6;
  else
    v24 = v6 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v6);
  v9 = _CocoaArrayWrapper.endIndex.getter(v24);
  swift_bridgeObjectRelease(v6);
  if (v9 < v5)
    goto LABEL_34;
LABEL_4:
  v9 = v5 - v7;
  if (__OFSUB__(v5, v7))
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  v8 = 1 - v9;
  if (__OFSUB__(1, v9))
  {
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  v6 = *v4;
  if (!((unint64_t)*v4 >> 62))
  {
    v10 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
    v11 = v10 + v8;
    if (!__OFADD__(v10, v8))
      goto LABEL_8;
LABEL_42:
    __break(1u);
LABEL_43:
    if (v6 < 0)
      v26 = v6;
    else
      v26 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v6);
    v14 = _CocoaArrayWrapper.endIndex.getter(v26);
    swift_bridgeObjectRelease(v6);
    goto LABEL_15;
  }
LABEL_37:
  if (v6 < 0)
    v25 = v6;
  else
    v25 = v6 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v6);
  v10 = _CocoaArrayWrapper.endIndex.getter(v25);
  swift_bridgeObjectRelease(v6);
  v11 = v10 + v8;
  if (__OFADD__(v10, v8))
    goto LABEL_42;
LABEL_8:
  v6 = *v4;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(*v4);
  *v4 = v6;
  v10 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v6 & 0x8000000000000000) == 0 && (v6 & 0x4000000000000000) == 0)
  {
    v13 = v6 & 0xFFFFFFFFFFFFFF8;
    if (v11 <= *(_QWORD *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_18;
    v10 = 1;
  }
  if ((unint64_t)v6 >> 62)
    goto LABEL_43;
  v14 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_15:
  if (v14 <= v11)
    v14 = v11;
  swift_bridgeObjectRetain(v6);
  v6 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v10, v14, 1, v6);
  swift_bridgeObjectRelease(*v4);
  *v4 = v6;
  v13 = v6 & 0xFFFFFFFFFFFFFF8;
LABEL_18:
  v15 = (_QWORD *)(v13 + 32 + 8 * v7);
  v16 = sub_100009E04(0, (unint64_t *)&qword_1009D8D70, UIViewController_ptr);
  v17 = (char *)swift_arrayDestroy(v15, v9, v16);
  if (!v8)
  {
LABEL_28:
    *v15 = v3;
    return specialized Array._endMutation()(v17);
  }
  if (!((unint64_t)v6 >> 62))
  {
    v18 = *(_QWORD *)(v13 + 16);
    v19 = v18 - v5;
    if (!__OFSUB__(v18, v5))
      goto LABEL_21;
LABEL_52:
    __break(1u);
    goto LABEL_53;
  }
  if (v6 < 0)
    v27 = v6;
  else
    v27 = v13;
  swift_bridgeObjectRetain(v6);
  v28 = _CocoaArrayWrapper.endIndex.getter(v27);
  swift_bridgeObjectRelease(v6);
  v19 = v28 - v5;
  if (__OFSUB__(v28, v5))
    goto LABEL_52;
LABEL_21:
  if ((v19 & 0x8000000000000000) == 0)
  {
    v17 = (char *)(v15 + 1);
    v20 = (char *)(v13 + 32 + 8 * v5);
    if (v15 + 1 != (_QWORD *)v20 || v17 >= &v20[8 * v19])
      v17 = (char *)memmove(v17, v20, 8 * v19);
    if (!((unint64_t)v6 >> 62))
    {
      v21 = *(_QWORD *)(v13 + 16);
      v22 = v21 + v8;
      if (!__OFADD__(v21, v8))
      {
LABEL_27:
        *(_QWORD *)(v13 + 16) = v22;
        goto LABEL_28;
      }
      goto LABEL_58;
    }
LABEL_53:
    if (v6 < 0)
      v29 = v6;
    else
      v29 = v13;
    swift_bridgeObjectRetain(v6);
    v30 = _CocoaArrayWrapper.endIndex.getter(v29);
    swift_bridgeObjectRelease(v6);
    v22 = v30 + v8;
    if (!__OFADD__(v30, v8))
      goto LABEL_27;
LABEL_58:
    __break(1u);
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
  __break(1u);
  return result;
}

void sub_1002C38D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  _QWORD *v5;
  _QWORD **v6;
  _QWORD *v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t *v21;
  unint64_t v22;
  char v23;

  v6 = (_QWORD **)v5;
  v12 = (_QWORD *)*v5;
  v14 = sub_10004CE80(a3, a4);
  v15 = v12[2];
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
  }
  else
  {
    v18 = v13;
    v19 = v12[3];
    if (v19 >= v17 && (a5 & 1) != 0)
    {
LABEL_7:
      v20 = *v6;
      if ((v18 & 1) != 0)
      {
LABEL_8:
        v21 = (uint64_t *)(v20[7] + 16 * v14);
        swift_bridgeObjectRelease(v21[1]);
        *v21 = a1;
        v21[1] = a2;
        return;
      }
      goto LABEL_11;
    }
    if (v19 >= v17 && (a5 & 1) == 0)
    {
      sub_1002BF910();
      goto LABEL_7;
    }
    sub_10037A44C(v17, a5 & 1);
    v22 = sub_10004CE80(a3, a4);
    if ((v18 & 1) == (v23 & 1))
    {
      v14 = v22;
      v20 = *v6;
      if ((v18 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_10037FC68(v14, a3, a4, a1, a2, v20);
      swift_bridgeObjectRetain(a4);
      return;
    }
  }
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
  __break(1u);
}

void sub_1002C3A10(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  sub_1002C3F04(a1, a2, a3, a4, &qword_1009D0828, (void (*)(void))sub_10037A770, (void (*)(unint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_10037FCB8);
}

_OWORD *sub_1002C3A2C(_OWORD *a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD **v5;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  _OWORD *result;
  unint64_t v21;
  char v22;

  v5 = (_QWORD **)v4;
  v10 = (_QWORD *)*v4;
  v12 = sub_10004CE80(a2, a3);
  v13 = v10[2];
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
  }
  else
  {
    v16 = v11;
    v17 = v10[3];
    if (v17 >= v15 && (a4 & 1) != 0)
    {
LABEL_7:
      v18 = *v5;
      if ((v16 & 1) != 0)
      {
LABEL_8:
        v19 = (_QWORD *)(v18[7] + 32 * v12);
        _s5Books15CurrentPageViewVwxx_0(v19);
        return sub_10004CFC4(a1, v19);
      }
      goto LABEL_11;
    }
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_1002C1118(&qword_1009D0A40, (void (*)(unint64_t, _BYTE *))sub_10004CD0C, (void (*)(_BYTE *, uint64_t))sub_10004CFC4);
      goto LABEL_7;
    }
    sub_10037A77C(v15, a4 & 1);
    v21 = sub_10004CE80(a2, a3);
    if ((v16 & 1) == (v22 & 1))
    {
      v12 = v21;
      v18 = *v5;
      if ((v16 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_10037FCBC(v12, a2, a3, a1, v18);
      return (_OWORD *)swift_bridgeObjectRetain(a3);
    }
  }
  result = (_OWORD *)KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
  __break(1u);
  return result;
}

void sub_1002C3B74(char a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD **v5;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  char v20;

  v5 = (_QWORD **)v4;
  v10 = (_QWORD *)*v4;
  v12 = sub_10004CE80(a2, a3);
  v13 = v10[2];
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
  }
  else
  {
    v16 = v11;
    v17 = v10[3];
    if (v17 >= v15 && (a4 & 1) != 0)
    {
LABEL_7:
      v18 = *v5;
      if ((v16 & 1) != 0)
      {
LABEL_8:
        *(_BYTE *)(v18[7] + v12) = a1 & 1;
        return;
      }
      goto LABEL_11;
    }
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_1002BFAF0();
      goto LABEL_7;
    }
    sub_10037A798(v15, a4 & 1);
    v19 = sub_10004CE80(a2, a3);
    if ((v16 & 1) == (v20 & 1))
    {
      v12 = v19;
      v18 = *v5;
      if ((v16 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_10037FD24(v12, a2, a3, a1 & 1, v18);
      swift_bridgeObjectRetain(a3);
      return;
    }
  }
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
  __break(1u);
}

void sub_1002C3C98(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD **v5;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  char v20;

  v5 = (_QWORD **)v4;
  v10 = (_QWORD *)*v4;
  v12 = sub_10004CE80(a2, a3);
  v13 = v10[2];
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
  }
  else
  {
    v16 = v11;
    v17 = v10[3];
    if (v17 >= v15 && (a4 & 1) != 0)
    {
LABEL_7:
      v18 = *v5;
      if ((v16 & 1) != 0)
      {
LABEL_8:
        sub_1002C6CD8(a1, v18[7] + 32 * v12);
        return;
      }
      goto LABEL_11;
    }
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_1002BFE98();
      goto LABEL_7;
    }
    sub_10037AE0C(v15, a4 & 1);
    v19 = sub_10004CE80(a2, a3);
    if ((v16 & 1) == (v20 & 1))
    {
      v12 = v19;
      v18 = *v5;
      if ((v16 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_10037FD6C(v12, a2, a3, a1, v18);
      swift_bridgeObjectRetain(a3);
      return;
    }
  }
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
  __break(1u);
}

uint64_t sub_1002C3DBC(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t result;
  unint64_t v18;
  char v19;
  _BYTE v20[40];

  v4 = (_QWORD **)v3;
  v8 = (_QWORD *)*v3;
  v10 = sub_1000561E8(a2);
  v11 = v8[2];
  v12 = (v9 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
  }
  else
  {
    v14 = v9;
    v15 = v8[3];
    if (v15 >= v13 && (a3 & 1) != 0)
    {
LABEL_7:
      v16 = *v4;
      if ((v14 & 1) != 0)
        return sub_1002C6CD8(a1, v16[7] + 32 * v10);
      goto LABEL_11;
    }
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_1002C0094();
      goto LABEL_7;
    }
    sub_10037B144(v13, a3 & 1);
    v18 = sub_1000561E8(a2);
    if ((v14 & 1) == (v19 & 1))
    {
      v10 = v18;
      v16 = *v4;
      if ((v14 & 1) != 0)
        return sub_1002C6CD8(a1, v16[7] + 32 * v10);
LABEL_11:
      sub_1000569E0(a2, (uint64_t)v20);
      return sub_10037FDDC(v10, (uint64_t)v20, a1, v16);
    }
  }
  result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for AnyHashable);
  __break(1u);
  return result;
}

void sub_1002C3EE8(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  sub_1002C3F04(a1, a2, a3, a4, (uint64_t *)&unk_1009DDEE0, (void (*)(void))sub_10037B478, (void (*)(unint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_10037FCB8);
}

void sub_1002C3F04(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t *a5, void (*a6)(void), void (*a7)(unint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t *v7;
  uint64_t *v10;
  uint64_t v15;
  char v16;
  unint64_t v17;
  uint64_t v18;
  _BOOL8 v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;

  v10 = v7;
  v15 = *v7;
  v17 = sub_10004CE80(a2, a3);
  v18 = *(_QWORD *)(v15 + 16);
  v19 = (v16 & 1) == 0;
  v20 = v18 + v19;
  if (__OFADD__(v18, v19))
  {
    __break(1u);
  }
  else
  {
    v21 = v16;
    v22 = *(_QWORD *)(v15 + 24);
    if (v22 >= v20 && (a4 & 1) != 0)
    {
LABEL_7:
      v23 = *v10;
      if ((v21 & 1) != 0)
      {
LABEL_8:
        v24 = *(_QWORD *)(v23 + 56);

        *(_QWORD *)(v24 + 8 * v17) = a1;
        return;
      }
      goto LABEL_11;
    }
    if (v22 >= v20 && (a4 & 1) == 0)
    {
      sub_1002C1948(a5);
      goto LABEL_7;
    }
    a6();
    v25 = sub_10004CE80(a2, a3);
    if ((v21 & 1) == (v26 & 1))
    {
      v17 = v25;
      v23 = *v10;
      if ((v21 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      a7(v17, a2, a3, a1, v23);
      swift_bridgeObjectRetain(a3);
      return;
    }
  }
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
  __break(1u);
}

void sub_1002C405C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  sub_1002C46A0(a1, a2, a3, a4, &qword_1009D7BE0, (void (*)(void))sub_10037B484, (void (*)(unint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_10037FCB8);
}

void sub_1002C4078(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  sub_1002C40C0(a1, a2, a3, a4, (uint64_t (*)(_QWORD))&type metadata accessor for PBPropertyValue, &qword_1009D7BE8, (void (*)(void))sub_10037B490, (void (*)(unint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_10037FE60);
}

void sub_1002C409C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  sub_1002C40C0(a1, a2, a3, a4, (uint64_t (*)(_QWORD))&type metadata accessor for PBPropertyConfiguration, &qword_1009D7BF0, (void (*)(void))sub_10037B4A4, (void (*)(unint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_10037FE6C);
}

void sub_1002C40C0(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t (*a5)(_QWORD), uint64_t *a6, void (*a7)(void), void (*a8)(unint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t *v8;
  uint64_t *v11;
  uint64_t v16;
  char v17;
  unint64_t v18;
  uint64_t v19;
  _BOOL8 v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;

  v11 = v8;
  v16 = *v8;
  v18 = sub_10004CE80(a2, a3);
  v19 = *(_QWORD *)(v16 + 16);
  v20 = (v17 & 1) == 0;
  v21 = v19 + v20;
  if (__OFADD__(v19, v20))
  {
    __break(1u);
  }
  else
  {
    v22 = v17;
    v23 = *(_QWORD *)(v16 + 24);
    if (v23 >= v21 && (a4 & 1) != 0)
    {
LABEL_7:
      v24 = *v11;
      if ((v22 & 1) != 0)
      {
LABEL_8:
        v25 = *(_QWORD *)(v24 + 56);
        v26 = a5(0);
        (*(void (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 40))(v25 + *(_QWORD *)(*(_QWORD *)(v26 - 8) + 72) * v18, a1, v26);
        return;
      }
      goto LABEL_11;
    }
    if (v23 >= v21 && (a4 & 1) == 0)
    {
      sub_1002C2B2C(a5, a6);
      goto LABEL_7;
    }
    a7();
    v27 = sub_10004CE80(a2, a3);
    if ((v22 & 1) == (v28 & 1))
    {
      v18 = v27;
      v24 = *v11;
      if ((v22 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      a8(v18, a2, a3, a1, v24);
      swift_bridgeObjectRetain(a3);
      return;
    }
  }
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
  __break(1u);
}

void sub_1002C4230(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD **v5;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  char v20;

  v5 = (_QWORD **)v4;
  v10 = (_QWORD *)*v4;
  v12 = sub_10004CE80(a2, a3);
  v13 = v10[2];
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
  }
  else
  {
    v16 = v11;
    v17 = v10[3];
    if (v17 >= v15 && (a4 & 1) != 0)
    {
LABEL_7:
      v18 = *v5;
      if ((v16 & 1) != 0)
      {
LABEL_8:
        *(_QWORD *)(v18[7] + 8 * v12) = a1;
        return;
      }
      goto LABEL_11;
    }
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_1002C0448();
      goto LABEL_7;
    }
    sub_100025834(v15, a4 & 1);
    v19 = sub_10004CE80(a2, a3);
    if ((v16 & 1) == (v20 & 1))
    {
      v12 = v19;
      v18 = *v5;
      if ((v16 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_10037FE78(v12, a2, a3, a1, v18);
      swift_bridgeObjectRetain(a3);
      return;
    }
  }
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
  __break(1u);
}

void sub_1002C4350(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  sub_1002C3F04(a1, a2, a3, a4, (uint64_t *)&unk_1009D7BD0, (void (*)(void))sub_10037B4CC, (void (*)(unint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_10037FCB8);
}

_OWORD *sub_1002C436C(_OWORD *a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  _OWORD *result;
  unint64_t v19;
  char v20;
  _BYTE v21[40];

  v4 = (_QWORD **)v3;
  v8 = (_QWORD *)*v3;
  v10 = sub_1000561E8(a2);
  v11 = v8[2];
  v12 = (v9 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
  }
  else
  {
    v14 = v9;
    v15 = v8[3];
    if (v15 >= v13 && (a3 & 1) != 0)
    {
LABEL_7:
      v16 = *v4;
      if ((v14 & 1) != 0)
      {
LABEL_8:
        v17 = (_QWORD *)(v16[7] + 32 * v10);
        _s5Books15CurrentPageViewVwxx_0(v17);
        return sub_10004CFC4(a1, v17);
      }
      goto LABEL_11;
    }
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_1002C0614();
      goto LABEL_7;
    }
    sub_10037B4D8(v13, a3 & 1);
    v19 = sub_1000561E8(a2);
    if ((v14 & 1) == (v20 & 1))
    {
      v10 = v19;
      v16 = *v4;
      if ((v14 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_1000569E0(a2, (uint64_t)v21);
      return sub_10037FEC0(v10, (uint64_t)v21, a1, v16);
    }
  }
  result = (_OWORD *)KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for AnyHashable);
  __break(1u);
  return result;
}

void sub_1002C44A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  sub_1002C44DC(a1, a2, a3, a4, a5, &qword_1009D7060, (void (*)(void))sub_10037BB20, (void (*)(unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_10037FF38);
}

void sub_1002C44C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  sub_1002C44DC(a1, a2, a3, a4, a5, (uint64_t *)&unk_1009D7BB0, (void (*)(void))sub_10037BB2C, (void (*)(unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_10037FF38);
}

void sub_1002C44DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t *a6, void (*a7)(void), void (*a8)(unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t *v8;
  uint64_t *v11;
  uint64_t v16;
  char v17;
  unint64_t v18;
  uint64_t v19;
  _BOOL8 v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  unint64_t v27;
  char v28;

  v11 = v8;
  v16 = *v8;
  v18 = sub_10004CE80(a3, a4);
  v19 = *(_QWORD *)(v16 + 16);
  v20 = (v17 & 1) == 0;
  v21 = v19 + v20;
  if (__OFADD__(v19, v20))
  {
    __break(1u);
  }
  else
  {
    v22 = v17;
    v23 = *(_QWORD *)(v16 + 24);
    if (v23 >= v21 && (a5 & 1) != 0)
    {
LABEL_7:
      v24 = *v11;
      if ((v22 & 1) != 0)
      {
LABEL_8:
        v25 = *(_QWORD *)(v24 + 56) + 16 * v18;
        v26 = *(void **)v25;
        swift_release(*(_QWORD *)(v25 + 8));

        *(_QWORD *)v25 = a1;
        *(_QWORD *)(v25 + 8) = a2;
        return;
      }
      goto LABEL_11;
    }
    if (v23 >= v21 && (a5 & 1) == 0)
    {
      sub_1002C0A3C(a6);
      goto LABEL_7;
    }
    a7();
    v27 = sub_10004CE80(a3, a4);
    if ((v22 & 1) == (v28 & 1))
    {
      v18 = v27;
      v24 = *v11;
      if ((v22 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      a8(v18, a3, a4, a1, a2, v24);
      swift_bridgeObjectRetain(a4);
      return;
    }
  }
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
  __break(1u);
}

void sub_1002C463C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  sub_1002C40C0(a1, a2, a3, a4, (uint64_t (*)(_QWORD))&type metadata accessor for SeriesListSortOrder, &qword_1009D7BA0, (void (*)(void))sub_10037BE44, (void (*)(unint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_10037FF3C);
}

void sub_1002C4660(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  sub_1002C40C0(a1, a2, a3, a4, (uint64_t (*)(_QWORD))&type metadata accessor for SeriesListFilterOption, &qword_1009D7BA8, (void (*)(void))sub_10037BE58, (void (*)(unint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_10037FF48);
}

void sub_1002C4684(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  sub_1002C46A0(a1, a2, a3, a4, (uint64_t *)&unk_1009DDE40, (void (*)(void))sub_10037C154, (void (*)(unint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_10037FCB8);
}

void sub_1002C46A0(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t *a5, void (*a6)(void), void (*a7)(unint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t *v7;
  uint64_t *v10;
  uint64_t v15;
  char v16;
  unint64_t v17;
  uint64_t v18;
  _BOOL8 v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;

  v10 = v7;
  v15 = *v7;
  v17 = sub_10004CE80(a2, a3);
  v18 = *(_QWORD *)(v15 + 16);
  v19 = (v16 & 1) == 0;
  v20 = v18 + v19;
  if (__OFADD__(v18, v19))
  {
    __break(1u);
  }
  else
  {
    v21 = v16;
    v22 = *(_QWORD *)(v15 + 24);
    if (v22 >= v20 && (a4 & 1) != 0)
    {
LABEL_7:
      v23 = *v10;
      if ((v21 & 1) != 0)
      {
LABEL_8:
        v24 = *(_QWORD *)(v23 + 56);
        swift_bridgeObjectRelease(*(_QWORD *)(v24 + 8 * v17));
        *(_QWORD *)(v24 + 8 * v17) = a1;
        return;
      }
      goto LABEL_11;
    }
    if (v22 >= v20 && (a4 & 1) == 0)
    {
      sub_1002C2FEC(a5);
      goto LABEL_7;
    }
    a6();
    v25 = sub_10004CE80(a2, a3);
    if ((v21 & 1) == (v26 & 1))
    {
      v17 = v25;
      v23 = *v10;
      if ((v21 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      a7(v17, a2, a3, a1, v23);
      swift_bridgeObjectRetain(a3);
      return;
    }
  }
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
  __break(1u);
}

void sub_1002C47F8(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  unint64_t v18;
  char v19;

  v4 = (_QWORD **)v3;
  v8 = (_QWORD *)*v3;
  v10 = sub_1002BB7F4(a2);
  v11 = v8[2];
  v12 = (v9 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
  }
  else
  {
    v14 = v9;
    v15 = v8[3];
    if (v15 >= v13 && (a3 & 1) != 0)
    {
LABEL_7:
      v16 = *v4;
      if ((v14 & 1) != 0)
      {
LABEL_8:
        v17 = v16[7];
        swift_bridgeObjectRelease(*(_QWORD *)(v17 + 8 * v10));
        *(_QWORD *)(v17 + 8 * v10) = a1;
        return;
      }
      goto LABEL_11;
    }
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_1002C0F64(&qword_1009D0750);
      goto LABEL_7;
    }
    sub_10037C160(v13, a3 & 1);
    v18 = sub_1002BB7F4(a2);
    if ((v14 & 1) == (v19 & 1))
    {
      v10 = v18;
      v16 = *v4;
      if ((v14 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_10037FFE4(v10, a2, a1, v16);
      return;
    }
  }
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for UInt64);
  __break(1u);
}

void sub_1002C4914(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  sub_1002C46A0(a1, a2, a3, a4, (uint64_t *)&unk_1009D7B88, (void (*)(void))sub_10037C178, (void (*)(unint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_10037FCB8);
}

void sub_1002C4930(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  sub_1002C46A0(a1, a2, a3, a4, (uint64_t *)&unk_1009D0A30, (void (*)(void))sub_10037C184, (void (*)(unint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_10037FCB8);
}

_OWORD *sub_1002C494C(_OWORD *a1, void *a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v7;
  char v8;
  unint64_t v9;
  uint64_t v10;
  _BOOL8 v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  _OWORD *result;
  unint64_t v18;
  char v19;
  uint64_t v20;

  v4 = (_QWORD **)v3;
  v7 = (_QWORD *)*v3;
  v9 = sub_100033888((uint64_t)a2);
  v10 = v7[2];
  v11 = (v8 & 1) == 0;
  v12 = v10 + v11;
  if (__OFADD__(v10, v11))
  {
    __break(1u);
  }
  else
  {
    v13 = v8;
    v14 = v7[3];
    if (v14 >= v12 && (a3 & 1) != 0)
    {
LABEL_7:
      v15 = *v4;
      if ((v13 & 1) != 0)
      {
LABEL_8:
        v16 = (_QWORD *)(v15[7] + 32 * v9);
        _s5Books15CurrentPageViewVwxx_0(v16);
        return sub_10004CFC4(a1, v16);
      }
      goto LABEL_11;
    }
    if (v14 >= v12 && (a3 & 1) == 0)
    {
      sub_1002C1308();
      goto LABEL_7;
    }
    sub_10037C79C(v12, a3 & 1);
    v18 = sub_100033888((uint64_t)a2);
    if ((v13 & 1) == (v19 & 1))
    {
      v9 = v18;
      v15 = *v4;
      if ((v13 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_10038002C(v9, (uint64_t)a2, a1, v15);
      return a2;
    }
  }
  type metadata accessor for Key(0);
  result = (_OWORD *)KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v20);
  __break(1u);
  return result;
}

void sub_1002C4A6C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  sub_1002C46A0(a1, a2, a3, a4, (uint64_t *)&unk_1009D7B10, (void (*)(void))sub_10037CAE0, (void (*)(unint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_10037FCB8);
}

void sub_1002C4A88(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  sub_1002C4AC0(a1, a2, a3, a4, &qword_1009D7B68, (void (*)(void))sub_10037CAEC, (void (*)(unint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_10037FCB8);
}

void sub_1002C4AA4(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  sub_1002C4AC0(a1, a2, a3, a4, &qword_1009D7B60, (void (*)(void))sub_10037CAF8, (void (*)(unint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_10037FCB8);
}

void sub_1002C4AC0(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t *a5, void (*a6)(void), void (*a7)(unint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t *v7;
  uint64_t *v10;
  uint64_t v15;
  char v16;
  unint64_t v17;
  uint64_t v18;
  _BOOL8 v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;

  v10 = v7;
  v15 = *v7;
  v17 = sub_10004CE80(a2, a3);
  v18 = *(_QWORD *)(v15 + 16);
  v19 = (v16 & 1) == 0;
  v20 = v18 + v19;
  if (__OFADD__(v18, v19))
  {
    __break(1u);
  }
  else
  {
    v21 = v16;
    v22 = *(_QWORD *)(v15 + 24);
    if (v22 >= v20 && (a4 & 1) != 0)
    {
LABEL_7:
      v23 = *v10;
      if ((v21 & 1) != 0)
      {
LABEL_8:
        v24 = *(_QWORD *)(v23 + 56);
        swift_release(*(_QWORD *)(v24 + 8 * v17));
        *(_QWORD *)(v24 + 8 * v17) = a1;
        return;
      }
      goto LABEL_11;
    }
    if (v22 >= v20 && (a4 & 1) == 0)
    {
      sub_1002C2790(a5);
      goto LABEL_7;
    }
    a6();
    v25 = sub_10004CE80(a2, a3);
    if ((v21 & 1) == (v26 & 1))
    {
      v17 = v25;
      v23 = *v10;
      if ((v21 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      a7(v17, a2, a3, a1, v23);
      swift_bridgeObjectRetain(a3);
      return;
    }
  }
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
  __break(1u);
}

uint64_t sub_1002C4C18(uint64_t a1, uint64_t a2, char a3)
{
  return sub_1002C4DB8(a1, a2, a3, (uint64_t (*)(_QWORD))&type metadata accessor for StoreBookTasteInfo, &qword_1009D0510, (void (*)(void))sub_10037CB04, (uint64_t (*)(unint64_t, uint64_t, uint64_t, uint64_t))sub_100380090);
}

void sub_1002C4C3C(uint64_t a1, char a2, double a3)
{
  _QWORD *v3;
  _QWORD **v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  unint64_t v21;
  char v22;
  uint64_t v23;

  v4 = (_QWORD **)v3;
  v8 = type metadata accessor for UUID(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (_QWORD *)*v3;
  v14 = sub_1002BB75C(a1);
  v15 = v12[2];
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
  }
  else
  {
    v18 = v13;
    v19 = v12[3];
    if (v19 >= v17 && (a2 & 1) != 0)
    {
LABEL_7:
      v20 = *v4;
      if ((v18 & 1) != 0)
      {
LABEL_8:
        *(double *)(v20[7] + 8 * v14) = a3;
        return;
      }
      goto LABEL_11;
    }
    if (v19 >= v17 && (a2 & 1) == 0)
    {
      sub_1002C16DC();
      goto LABEL_7;
    }
    sub_10037CB18(v17, a2 & 1);
    v21 = sub_1002BB75C(a1);
    if ((v18 & 1) == (v22 & 1))
    {
      v14 = v21;
      v20 = *v4;
      if ((v18 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1, v8);
      sub_10038009C(v14, (uint64_t)v11, v20, a3);
      return;
    }
  }
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v8);
  __break(1u);
}

uint64_t sub_1002C4D94(uint64_t a1, uint64_t a2, char a3)
{
  return sub_1002C4DB8(a1, a2, a3, (uint64_t (*)(_QWORD))&type metadata accessor for Book.Metadata, &qword_1009D7A70, (void (*)(void))sub_10037CEA8, (uint64_t (*)(unint64_t, uint64_t, uint64_t, uint64_t))sub_100380134);
}

uint64_t sub_1002C4DB8(uint64_t a1, uint64_t a2, char a3, uint64_t (*a4)(_QWORD), uint64_t *a5, void (*a6)(void), uint64_t (*a7)(unint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t *v7;
  uint64_t *v11;
  uint64_t v15;
  char v16;
  unint64_t v17;
  uint64_t v18;
  _BOOL8 v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t result;
  unint64_t v27;
  char v28;

  v11 = v7;
  v15 = *v7;
  v17 = sub_1002BB7F4(a2);
  v18 = *(_QWORD *)(v15 + 16);
  v19 = (v16 & 1) == 0;
  v20 = v18 + v19;
  if (__OFADD__(v18, v19))
  {
    __break(1u);
  }
  else
  {
    v21 = v16;
    v22 = *(_QWORD *)(v15 + 24);
    if (v22 >= v20 && (a3 & 1) != 0)
    {
LABEL_7:
      v23 = *v11;
      if ((v21 & 1) != 0)
      {
LABEL_8:
        v24 = *(_QWORD *)(v23 + 56);
        v25 = a4(0);
        return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 40))(v24 + *(_QWORD *)(*(_QWORD *)(v25 - 8) + 72) * v17, a1, v25);
      }
      return a7(v17, a2, a1, v23);
    }
    if (v22 >= v20 && (a3 & 1) == 0)
    {
      sub_1002C3350(a4, a5);
      goto LABEL_7;
    }
    a6();
    v27 = sub_1002BB7F4(a2);
    if ((v21 & 1) == (v28 & 1))
    {
      v17 = v27;
      v23 = *v11;
      if ((v21 & 1) != 0)
        goto LABEL_8;
      return a7(v17, a2, a1, v23);
    }
  }
  result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for UInt64);
  __break(1u);
  return result;
}

uint64_t sub_1002C4F10(uint64_t a1, uint64_t a2, char a3)
{
  return sub_1002C4DB8(a1, a2, a3, (uint64_t (*)(_QWORD))&type metadata accessor for Book.MediaType, &qword_1009D7A90, (void (*)(void))sub_10037CEE0, (uint64_t (*)(unint64_t, uint64_t, uint64_t, uint64_t))sub_100380140);
}

void sub_1002C4F34(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  unint64_t v17;
  char v18;

  v4 = (_QWORD **)v3;
  v8 = (_QWORD *)*v3;
  v10 = sub_1002BB7F4(a2);
  v11 = v8[2];
  v12 = (v9 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
  }
  else
  {
    v14 = v9;
    v15 = v8[3];
    if (v15 >= v13 && (a3 & 1) != 0)
    {
LABEL_7:
      v16 = *v4;
      if ((v14 & 1) != 0)
      {
LABEL_8:
        *(_QWORD *)(v16[7] + 8 * v10) = a1;
        return;
      }
      goto LABEL_11;
    }
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_1002C1B04();
      goto LABEL_7;
    }
    sub_10037CEF4(v13, a3 & 1);
    v17 = sub_1002BB7F4(a2);
    if ((v14 & 1) == (v18 & 1))
    {
      v10 = v17;
      v16 = *v4;
      if ((v14 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_10037FFE4(v10, a2, a1, v16);
      return;
    }
  }
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for UInt64);
  __break(1u);
}

uint64_t sub_1002C503C(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  unint64_t v24;
  char v25;
  uint64_t v26;

  v4 = (_QWORD **)v3;
  v8 = type metadata accessor for CollectionRecommendationType(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (_QWORD *)*v3;
  v14 = sub_1002BBDE4(a2);
  v15 = v12[2];
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
  }
  else
  {
    v18 = v13;
    v19 = v12[3];
    if (v19 >= v17 && (a3 & 1) != 0)
    {
LABEL_7:
      v20 = *v4;
      if ((v18 & 1) != 0)
      {
LABEL_8:
        v21 = v20[7];
        v22 = type metadata accessor for CollectionRecommendationOptions(0);
        return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 40))(v21 + *(_QWORD *)(*(_QWORD *)(v22 - 8) + 72) * v14, a1, v22);
      }
      goto LABEL_11;
    }
    if (v19 >= v17 && (a3 & 1) == 0)
    {
      sub_1002C1C90();
      goto LABEL_7;
    }
    sub_10037D198(v17, a3 & 1);
    v24 = sub_1002BBDE4(a2);
    if ((v18 & 1) == (v25 & 1))
    {
      v14 = v24;
      v20 = *v4;
      if ((v18 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
      return sub_10038014C(v14, (uint64_t)v11, a1, v20);
    }
  }
  result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v8);
  __break(1u);
  return result;
}

uint64_t sub_1002C51C4(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  unint64_t v20;
  char v21;

  v4 = (_QWORD **)v3;
  v8 = (_QWORD *)*v3;
  v10 = sub_1002BB7F4(a2);
  v11 = v8[2];
  v12 = (v9 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
  }
  else
  {
    v14 = v9;
    v15 = v8[3];
    if (v15 >= v13 && (a3 & 1) != 0)
    {
LABEL_7:
      v16 = *v4;
      if ((v14 & 1) != 0)
      {
LABEL_8:
        v17 = v16[7];
        v18 = sub_10004CFD4(&qword_1009D7AA0);
        return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v17 + *(_QWORD *)(*(_QWORD *)(v18 - 8) + 72) * v10, a1, v18);
      }
      return sub_100380204(v10, a2, a1, v16);
    }
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_1002C1F70();
      goto LABEL_7;
    }
    sub_10037D590(v13, a3 & 1);
    v20 = sub_1002BB7F4(a2);
    if ((v14 & 1) == (v21 & 1))
    {
      v10 = v20;
      v16 = *v4;
      if ((v14 & 1) != 0)
        goto LABEL_8;
      return sub_100380204(v10, a2, a1, v16);
    }
  }
  result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for UInt64);
  __break(1u);
  return result;
}

void sub_1002C52EC(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6)
{
  _QWORD *v6;
  _QWORD **v7;
  _QWORD *v14;
  char v15;
  unint64_t v16;
  uint64_t v17;
  _BOOL8 v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  int v24;
  _QWORD *v25;
  BOOL v26;
  uint64_t v27;

  v7 = (_QWORD **)v6;
  v14 = (_QWORD *)*v6;
  v16 = sub_10004CE80(a4, a5);
  v17 = v14[2];
  v18 = (v15 & 1) == 0;
  v19 = v17 + v18;
  if (__OFADD__(v17, v18))
  {
    __break(1u);
    goto LABEL_13;
  }
  v20 = v15;
  v21 = v14[3];
  if (v21 >= v19 && (a6 & 1) != 0)
    goto LABEL_9;
  if (v21 >= v19 && (a6 & 1) == 0)
  {
    sub_1002C238C();
    goto LABEL_9;
  }
  sub_10037DF30(v19, a6 & 1);
  v22 = sub_10004CE80(a4, a5);
  if ((v20 & 1) != (v23 & 1))
  {
LABEL_13:
    KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
    __break(1u);
    return;
  }
  v16 = v22;
LABEL_9:
  v24 = a3 & 1;
  v25 = *v7;
  if ((v20 & 1) != 0)
  {
    v26 = v24 != 0;
    v27 = v25[7] + 24 * v16;
    sub_1002C7FE8(*(_QWORD *)v27, *(_QWORD *)(v27 + 8), *(_BYTE *)(v27 + 16));
    *(_QWORD *)v27 = a1;
    *(_QWORD *)(v27 + 8) = a2;
    *(_BYTE *)(v27 + 16) = v26;
  }
  else
  {
    sub_100380294(v16, a4, a5, a1, a2, v24, v25);
    swift_bridgeObjectRetain(a5);
  }
}

void sub_1002C5444(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  sub_1002C4AC0(a1, a2, a3, a4, (uint64_t *)&unk_1009D7AB0, (void (*)(void))sub_10037E5C0, (void (*)(unint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_10037FCB8);
}

void sub_1002C5460(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, char a7)
{
  _QWORD *v7;
  _QWORD **v8;
  _QWORD *v15;
  char v16;
  unint64_t v17;
  uint64_t v18;
  _BOOL8 v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  void *v25;
  unint64_t v26;
  char v27;

  v8 = (_QWORD **)v7;
  v15 = (_QWORD *)*v7;
  v17 = sub_10004CE80(a5, a6);
  v18 = v15[2];
  v19 = (v16 & 1) == 0;
  v20 = v18 + v19;
  if (__OFADD__(v18, v19))
  {
    __break(1u);
  }
  else
  {
    v21 = v16;
    v22 = v15[3];
    if (v22 >= v20 && (a7 & 1) != 0)
    {
LABEL_7:
      v23 = *v8;
      if ((v21 & 1) != 0)
      {
LABEL_8:
        v24 = v23[7] + 32 * v17;
        v25 = *(void **)(v24 + 16);
        swift_bridgeObjectRelease(*(_QWORD *)(v24 + 8));

        *(_QWORD *)v24 = a1;
        *(_QWORD *)(v24 + 8) = a2;
        *(_QWORD *)(v24 + 16) = a3;
        *(_BYTE *)(v24 + 24) = a4 & 1;
        return;
      }
      goto LABEL_11;
    }
    if (v22 >= v20 && (a7 & 1) == 0)
    {
      sub_1002C293C();
      goto LABEL_7;
    }
    sub_10037E8DC(v20, a7 & 1);
    v26 = sub_10004CE80(a5, a6);
    if ((v21 & 1) == (v27 & 1))
    {
      v17 = v26;
      v23 = *v8;
      if ((v21 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_1003802EC(v17, a5, a6, a1, a2, a3, a4 & 1, v23);
      swift_bridgeObjectRetain(a6);
      return;
    }
  }
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
  __break(1u);
}

uint64_t sub_1002C55D0(uint64_t a1, uint64_t a2, char a3)
{
  return sub_1002C5618(a1, a2, a3, (uint64_t (*)(_QWORD))&type metadata accessor for CFIRange, (uint64_t *)&unk_1009D7AC0, (void (*)(void))sub_10037EF94, (uint64_t (*)(unint64_t, uint64_t, uint64_t, uint64_t))sub_100380340);
}

uint64_t sub_1002C55F4(uint64_t a1, uint64_t a2, char a3)
{
  return sub_1002C5618(a1, a2, a3, (uint64_t (*)(_QWORD))&type metadata accessor for ContentMessage.CFIUpdate, &qword_1009D0A28, (void (*)(void))sub_10037EFA8, (uint64_t (*)(unint64_t, uint64_t, uint64_t, uint64_t))sub_10038034C);
}

uint64_t sub_1002C5618(uint64_t a1, uint64_t a2, char a3, uint64_t (*a4)(_QWORD), uint64_t *a5, void (*a6)(void), uint64_t (*a7)(unint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t *v7;
  uint64_t *v11;
  uint64_t v15;
  char v16;
  unint64_t v17;
  uint64_t v18;
  _BOOL8 v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t result;
  unint64_t v27;
  char v28;

  v11 = v7;
  v15 = *v7;
  v17 = sub_1002BB7F4(a2);
  v18 = *(_QWORD *)(v15 + 16);
  v19 = (v16 & 1) == 0;
  v20 = v18 + v19;
  if (__OFADD__(v18, v19))
  {
    __break(1u);
  }
  else
  {
    v21 = v16;
    v22 = *(_QWORD *)(v15 + 24);
    if (v22 >= v20 && (a3 & 1) != 0)
    {
LABEL_7:
      v23 = *v11;
      if ((v21 & 1) != 0)
      {
LABEL_8:
        v24 = *(_QWORD *)(v23 + 56);
        v25 = a4(0);
        return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 40))(v24 + *(_QWORD *)(*(_QWORD *)(v25 - 8) + 72) * v17, a1, v25);
      }
      return a7(v17, a2, a1, v23);
    }
    if (v22 >= v20 && (a3 & 1) == 0)
    {
      sub_1002C3350(a4, a5);
      goto LABEL_7;
    }
    a6();
    v27 = sub_1002BB7F4(a2);
    if ((v21 & 1) == (v28 & 1))
    {
      v17 = v27;
      v23 = *v11;
      if ((v21 & 1) != 0)
        goto LABEL_8;
      return a7(v17, a2, a1, v23);
    }
  }
  result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for Int);
  __break(1u);
  return result;
}

void sub_1002C5770(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  uint64_t v24;

  v4 = (_QWORD **)v3;
  v8 = type metadata accessor for Date(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (_QWORD *)*v3;
  v14 = sub_1002BBF20(a2);
  v15 = v12[2];
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_14;
  }
  v18 = v13;
  v19 = v12[3];
  if (v19 >= v17 && (a3 & 1) != 0)
  {
LABEL_7:
    v20 = *v4;
    if ((v18 & 1) != 0)
    {
LABEL_8:
      v21 = v20[7];
      swift_bridgeObjectRelease(*(_QWORD *)(v21 + 8 * v14));
      *(_QWORD *)(v21 + 8 * v14) = a1;
      return;
    }
    goto LABEL_11;
  }
  if (v19 >= v17 && (a3 & 1) == 0)
  {
    sub_1002C2DB0();
    goto LABEL_7;
  }
  sub_10037EFBC(v17, a3 & 1);
  v22 = sub_1002BBF20(a2);
  if ((v18 & 1) != (v23 & 1))
  {
LABEL_14:
    KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v8);
    __break(1u);
    return;
  }
  v14 = v22;
  v20 = *v4;
  if ((v18 & 1) != 0)
    goto LABEL_8;
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  sub_100380358(v14, (uint64_t)v11, a1, v20);
}

uint64_t sub_1002C58CC(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t result;
  unint64_t v19;
  char v20;

  v4 = (_QWORD **)v3;
  v8 = (_QWORD *)*v3;
  v10 = sub_1002BB7F4(a2);
  v11 = v8[2];
  v12 = (v9 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
  }
  else
  {
    v14 = v9;
    v15 = v8[3];
    if (v15 >= v13 && (a3 & 1) != 0)
    {
LABEL_7:
      v16 = *v4;
      if ((v14 & 1) != 0)
      {
LABEL_8:
        v17 = v16[7];
        result = swift_release(*(_QWORD *)(v17 + 8 * v10));
        *(_QWORD *)(v17 + 8 * v10) = a1;
        return result;
      }
      return sub_10037FFE4(v10, a2, a1, v16);
    }
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_1002C31A4(&qword_1009D09D0);
      goto LABEL_7;
    }
    sub_10037F66C(v13, a3 & 1);
    v19 = sub_1002BB7F4(a2);
    if ((v14 & 1) == (v20 & 1))
    {
      v10 = v19;
      v16 = *v4;
      if ((v14 & 1) != 0)
        goto LABEL_8;
      return sub_10037FFE4(v10, a2, a1, v16);
    }
  }
  result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for Int);
  __break(1u);
  return result;
}

uint64_t sub_1002C59E8(uint64_t a1, uint64_t a2, char a3)
{
  return sub_1002C4DB8(a1, a2, a3, (uint64_t (*)(_QWORD))&type metadata accessor for StoreBookRating, &qword_1009D0550, (void (*)(void))sub_10037F928, (uint64_t (*)(unint64_t, uint64_t, uint64_t, uint64_t))sub_1003803F0);
}

uint64_t sub_1002C5A10(uint64_t a1)
{
  uint64_t v1;

  return a1 & ~(-1 << *(_BYTE *)(v1 + 32));
}

uint64_t sub_1002C5A3C()
{
  uint64_t v0;
  Swift::Int v1;
  _QWORD v3[9];

  Hasher.init(_seed:)(v3, *(_QWORD *)(v0 + 40));
  String.hash(into:)(v3, 0x746C7561666564, 0xE700000000000000);
  v1 = Hasher._finalize()();
  return sub_1002C5A10(v1);
}

uint64_t sub_1002C5A9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t i;
  char *v8;
  void *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char v14;
  uint64_t v15;
  uint64_t v16;

  if ((unint64_t)a1 >> 62)
    goto LABEL_18;
  v6 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (v6)
  {
    for (i = 0; ; ++i)
    {
      if ((a1 & 0xC000000000000001) != 0)
        v8 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(i, a1);
      else
        v8 = (char *)*(id *)(a1 + 8 * i + 32);
      v9 = v8;
      v10 = &v8[OBJC_IVAR___BKRootBarItem_identifier];
      v11 = *(_QWORD *)&v8[OBJC_IVAR___BKRootBarItem_identifier];
      v12 = *((_QWORD *)v10 + 1);
      if (*(_QWORD *)v10 == a2 && v12 == a3)
      {

        return i;
      }
      v14 = _stringCompareWithSmolCheck(_:_:expecting:)(v11, v12, a2, a3, 0);

      if ((v14 & 1) != 0)
        return i;
      v15 = i + 1;
      if (__OFADD__(i, 1))
        break;
      if (v15 == v6)
        return 0;
    }
    __break(1u);
LABEL_18:
    if (a1 < 0)
      v16 = a1;
    else
      v16 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v6 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease(a1);
  }
  return 0;
}

_QWORD *sub_1002C5BDC(unint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *result;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  char v22;
  char v23;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;

  v5 = a1;
  if (a1 >> 62)
    goto LABEL_26;
  v6 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_3:
  result = _swiftEmptyArrayStorage;
  if (v6)
  {
    result = (_QWORD *)specialized ContiguousArray.reserveCapacity(_:)(v6);
    if ((v6 & 0x8000000000000000) == 0)
    {
      v8 = 0;
      v32 = v5 & 0xC000000000000001;
      v30 = v5;
      while (1)
      {
        if (v6 == v8)
        {
          __break(1u);
LABEL_26:
          if (v5 < 0)
            v28 = v5;
          else
            v28 = v5 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain(v5);
          v6 = _CocoaArrayWrapper.endIndex.getter(v28);
          swift_bridgeObjectRelease(v5);
          goto LABEL_3;
        }
        if (v32)
          v9 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v8, v5);
        else
          v9 = (char *)*(id *)(v5 + 8 * v8 + 32);
        v13 = v9;
        if (*(_QWORD *)(a2 + 16))
        {
          v14 = *(_QWORD *)&v9[OBJC_IVAR___BKRootBarItem_identifier];
          v15 = *(_QWORD *)&v9[OBJC_IVAR___BKRootBarItem_identifier + 8];
          swift_bridgeObjectRetain(v15);
          v16 = sub_10004CE80(v14, v15);
          if ((v17 & 1) != 0)
          {
            v10 = (char *)*(id *)(*(_QWORD *)(a2 + 56) + 8 * v16);
            swift_bridgeObjectRelease(v15);
            sub_100009E04(0, (unint64_t *)&qword_1009D9DA0, NSObject_ptr);
            if ((static NSObject.== infix(_:_:)(v13, v10) & 1) != 0)
            {
              v18 = *(_QWORD *)&v10[OBJC_IVAR___BKRootBarItem_identifier];
              v19 = *(_QWORD *)&v10[OBJC_IVAR___BKRootBarItem_identifier + 8];
              v20 = *a3;
              swift_bridgeObjectRetain(v19);
              swift_bridgeObjectRetain(v20);
              v31 = sub_10004CE80(v18, v19);
              v21 = a3;
              v23 = v22;
              swift_bridgeObjectRelease(v20);
              if ((v23 & 1) != 0)
              {
                isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v21);
                v25 = *v21;
                v33 = *v21;
                *v21 = 0x8000000000000000;
                if ((isUniquelyReferenced_nonNull_native & 1) == 0)
                {
                  sub_1002C1948(&qword_1009D7B80);
                  v25 = v33;
                }
                swift_bridgeObjectRelease(*(_QWORD *)(*(_QWORD *)(v25 + 48) + 16 * v31 + 8));
                v29 = *(void **)(*(_QWORD *)(v25 + 56) + 8 * v31);
                sub_1002BEABC(v31, v25);
                v26 = *v21;
                *v21 = v25;

                swift_bridgeObjectRelease(v19);
                v27 = v26;
              }
              else
              {

                v27 = v19;
              }
              v9 = (char *)swift_bridgeObjectRelease(v27);
              a3 = v21;
              v5 = v30;
              goto LABEL_8;
            }

          }
          else
          {
            v9 = (char *)swift_bridgeObjectRelease(v15);
          }
        }
        v10 = v13;
LABEL_8:
        ++v8;
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v9);
        v11 = _swiftEmptyArrayStorage[2];
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v11);
        v12 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v11, v10);
        specialized ContiguousArray._endMutation()(v12);
        if (v6 == v8)
          return _swiftEmptyArrayStorage;
      }
    }
    __break(1u);
  }
  return result;
}

void *sub_1002C5E9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  if ((unint64_t)a1 >> 62)
    goto LABEL_17;
  v6 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  for (; v6; v6 = _CocoaArrayWrapper.endIndex.getter(v15))
  {
    v7 = 4;
    while (1)
    {
      v8 = (a1 & 0xC000000000000001) != 0
         ? (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v7 - 4, a1)
         : (char *)*(id *)(a1 + 8 * v7);
      v9 = v8;
      v10 = v7 - 3;
      if (__OFADD__(v7 - 4, 1))
        break;
      v11 = &v8[OBJC_IVAR___BKRootBarItem_identifier];
      v12 = *(_QWORD *)&v8[OBJC_IVAR___BKRootBarItem_identifier];
      v13 = *((_QWORD *)v11 + 1);
      v14 = *(_QWORD *)v11 == a2 && v13 == a3;
      if (v14 || (_stringCompareWithSmolCheck(_:_:expecting:)(v12, v13, a2, a3, 0) & 1) != 0)
      {
        swift_bridgeObjectRelease(a1);
        return v9;
      }

      ++v7;
      if (v10 == v6)
        goto LABEL_21;
    }
    __break(1u);
LABEL_17:
    if (a1 < 0)
      v15 = a1;
    else
      v15 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
  }
LABEL_21:
  swift_bridgeObjectRelease(a1);
  return 0;
}

uint64_t _s5Books33SplitViewContentHostingControllerC16setStandardItems_8animatedySayAA11RootBarItemCG_SbtF_0(unint64_t a1)
{
  char *v1;
  char *v2;
  void *v3;
  id v4;
  id v5;
  id v6;
  void *v7;
  uint64_t *v8;
  uint64_t isUniquelyReferenced_nonNull_native;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  unint64_t v21;
  uint64_t v22;
  _BOOL8 v23;
  uint64_t v24;
  char v25;
  unint64_t v26;
  char v27;
  uint64_t *v28;
  uint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t *v40;
  _QWORD *v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  int v53;
  uint64_t v54;
  uint64_t v55;
  objc_class *v56;
  id v57;
  id v58;
  uint64_t KeyPath;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  void *v65;
  void *v66;
  id v67;
  id v68;
  id v69;
  uint64_t v70;
  uint64_t v71;
  void *v72;
  _QWORD *v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  void *Strong;
  void *v83;
  id v84;
  id v85;
  uint64_t result;
  uint64_t v87;
  uint64_t *v89;
  uint64_t v90;
  unint64_t v91;
  uint64_t v92;
  uint64_t v93;
  objc_super v94;
  uint64_t v95;
  id v96[3];
  uint64_t v97;
  char v98[24];

  v2 = v1;
  sub_100009E04(0, (unint64_t *)&qword_1009CEC30, OS_dispatch_queue_ptr);
  v3 = (void *)((uint64_t (*)(void))static OS_dispatch_queue.main.getter)();
  v4 = &_dispatch_main_q;
  v5 = v3;
  v6 = &_dispatch_main_q;
  v7 = &_dispatch_main_q;
  if (v5 == &_dispatch_main_q)
  {
    +[NSThread isMainThread](NSThread, "isMainThread");
    v7 = v5;
  }

  v8 = (uint64_t *)&v2[OBJC_IVAR___BKSplitViewContentHostingController_standardItems];
  swift_beginAccess(&v2[OBJC_IVAR___BKSplitViewContentHostingController_standardItems], v98, 1, 0);
  v89 = v8;
  isUniquelyReferenced_nonNull_native = *v8;
  if ((unint64_t)*v8 >> 62)
    goto LABEL_27;
  v10 = *(_QWORD *)((isUniquelyReferenced_nonNull_native & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain_n(*v8, 2);
  v93 = (uint64_t)v2;
  while (v10)
  {
    v91 = isUniquelyReferenced_nonNull_native & 0xC000000000000001;
    v11 = (uint64_t)&_swiftEmptyDictionarySingleton;
    v12 = 4;
    v90 = isUniquelyReferenced_nonNull_native;
    while (1)
    {
      v15 = v12 - 4;
      if (!v91)
        break;
      v16 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v12 - 4, isUniquelyReferenced_nonNull_native);
      v17 = v12 - 3;
      if (__OFADD__(v15, 1))
        goto LABEL_24;
LABEL_13:
      v2 = v16;
      v18 = *(_QWORD *)&v16[OBJC_IVAR___BKRootBarItem_identifier];
      v19 = *(_QWORD *)&v16[OBJC_IVAR___BKRootBarItem_identifier + 8];
      swift_bridgeObjectRetain(v19);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v11);
      v96[0] = (id)v11;
      v21 = sub_10004CE80(v18, v19);
      v22 = *(_QWORD *)(v11 + 16);
      v23 = (v20 & 1) == 0;
      v24 = v22 + v23;
      if (__OFADD__(v22, v23))
        goto LABEL_25;
      v25 = v20;
      if (*(_QWORD *)(v11 + 24) >= v24)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) != 0)
        {
          v11 = (uint64_t)v96[0];
          if ((v20 & 1) != 0)
            goto LABEL_6;
        }
        else
        {
          sub_1002C1948(&qword_1009D7B80);
          v11 = (uint64_t)v96[0];
          if ((v25 & 1) != 0)
            goto LABEL_6;
        }
      }
      else
      {
        sub_100045E38(v24, isUniquelyReferenced_nonNull_native);
        v26 = sub_10004CE80(v18, v19);
        if ((v25 & 1) != (v27 & 1))
        {
LABEL_92:
          result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
          __break(1u);
          return result;
        }
        v21 = v26;
        v11 = (uint64_t)v96[0];
        if ((v25 & 1) != 0)
        {
LABEL_6:
          v13 = *(_QWORD *)(v11 + 56);
          v14 = 8 * v21;

          *(_QWORD *)(v13 + v14) = v2;
          goto LABEL_7;
        }
      }
      *(_QWORD *)(v11 + 8 * (v21 >> 6) + 64) |= 1 << v21;
      v28 = (uint64_t *)(*(_QWORD *)(v11 + 48) + 16 * v21);
      *v28 = v18;
      v28[1] = v19;
      *(_QWORD *)(*(_QWORD *)(v11 + 56) + 8 * v21) = v2;
      v29 = *(_QWORD *)(v11 + 16);
      v30 = __OFADD__(v29, 1);
      v31 = v29 + 1;
      if (v30)
        goto LABEL_26;
      *(_QWORD *)(v11 + 16) = v31;
      swift_bridgeObjectRetain(v19);
LABEL_7:
      swift_bridgeObjectRelease(v19);
      swift_bridgeObjectRelease(0x8000000000000000);
      ++v12;
      isUniquelyReferenced_nonNull_native = v90;
      if (v17 == v10)
        goto LABEL_32;
    }
    v16 = (char *)*(id *)(isUniquelyReferenced_nonNull_native + 8 * v12);
    v17 = v12 - 3;
    if (!__OFADD__(v15, 1))
      goto LABEL_13;
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    if (isUniquelyReferenced_nonNull_native < 0)
      v32 = isUniquelyReferenced_nonNull_native;
    else
      v32 = isUniquelyReferenced_nonNull_native & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain_n(isUniquelyReferenced_nonNull_native, 3);
    v10 = _CocoaArrayWrapper.endIndex.getter(v32);
    swift_bridgeObjectRelease(isUniquelyReferenced_nonNull_native);
    v93 = (uint64_t)v2;
  }
  v11 = (uint64_t)&_swiftEmptyDictionarySingleton;
LABEL_32:
  swift_bridgeObjectRelease_n(isUniquelyReferenced_nonNull_native, 2);
  v97 = v11;
  swift_bridgeObjectRetain(v11);
  v33 = sub_1002C5BDC(a1, v11, &v97);
  swift_bridgeObjectRelease(v11);
  v34 = *v89;
  *v89 = (uint64_t)v33;
  swift_bridgeObjectRelease(v34);
  v35 = v97;
  v36 = v97 + 64;
  v37 = 1 << *(_BYTE *)(v97 + 32);
  v38 = -1;
  if (v37 < 64)
    v38 = ~(-1 << v37);
  v39 = v38 & *(_QWORD *)(v97 + 64);
  v40 = (uint64_t *)(v93 + OBJC_IVAR___BKSplitViewContentHostingController_cachedControllers);
  v92 = OBJC_IVAR___BKSplitViewContentHostingController_viewController;
  v41 = (_QWORD *)((unint64_t)(v37 + 63) >> 6);
  swift_bridgeObjectRetain(v97);
  v42 = 0;
  while (v39)
  {
    v43 = __clz(__rbit64(v39));
    v39 &= v39 - 1;
    v44 = v43 | (v42 << 6);
LABEL_56:
    v48 = (uint64_t *)(*(_QWORD *)(v35 + 48) + 16 * v44);
    v49 = *v48;
    v50 = v48[1];
    swift_beginAccess(v40, v96, 33, 0);
    isUniquelyReferenced_nonNull_native = *v40;
    swift_bridgeObjectRetain(v50);
    swift_bridgeObjectRetain(isUniquelyReferenced_nonNull_native);
    v51 = sub_10004CE80(v49, v50);
    v11 = v52;
    swift_bridgeObjectRelease(isUniquelyReferenced_nonNull_native);
    if ((v11 & 1) != 0)
    {
      v53 = swift_isUniquelyReferenced_nonNull_native(*v40);
      v54 = *v40;
      v95 = *v40;
      *v40 = 0x8000000000000000;
      if (!v53)
      {
        sub_1002C1948(&qword_1009D0828);
        v54 = v95;
      }
      swift_bridgeObjectRelease(*(_QWORD *)(*(_QWORD *)(v54 + 48) + 16 * v51 + 8));
      isUniquelyReferenced_nonNull_native = *(_QWORD *)(*(_QWORD *)(v54 + 56) + 8 * v51);
      sub_1002BEABC(v51, v54);
      v55 = *v40;
      *v40 = v54;
      swift_bridgeObjectRelease(v55);
      swift_endAccess(v96);
      swift_bridgeObjectRelease(v50);
      v11 = *(_QWORD *)(v93 + v92);
      v56 = (objc_class *)type metadata accessor for MainContentViewController();
      v94.receiver = (id)v11;
      v94.super_class = v56;
      v57 = objc_msgSendSuper2(&v94, "contentNavigationController");
      if (v57)
      {
        v58 = v57;

        if (v58 == (id)isUniquelyReferenced_nonNull_native)
          MainContentViewController.contentNavigationController.setter(0);
      }

    }
    else
    {
      swift_endAccess(v96);
      swift_bridgeObjectRelease(v50);
    }
  }
  v45 = v42 + 1;
  if (__OFADD__(v42, 1))
  {
    __break(1u);
    goto LABEL_79;
  }
  if (v45 >= (uint64_t)v41)
    goto LABEL_64;
  v46 = *(_QWORD *)(v36 + 8 * v45);
  ++v42;
  if (v46)
    goto LABEL_55;
  v42 = v45 + 1;
  if (v45 + 1 >= (uint64_t)v41)
    goto LABEL_64;
  v46 = *(_QWORD *)(v36 + 8 * v42);
  if (v46)
    goto LABEL_55;
  v42 = v45 + 2;
  if (v45 + 2 >= (uint64_t)v41)
    goto LABEL_64;
  v46 = *(_QWORD *)(v36 + 8 * v42);
  if (v46)
    goto LABEL_55;
  v42 = v45 + 3;
  if (v45 + 3 >= (uint64_t)v41)
    goto LABEL_64;
  v46 = *(_QWORD *)(v36 + 8 * v42);
  if (v46)
    goto LABEL_55;
  v42 = v45 + 4;
  if (v45 + 4 >= (uint64_t)v41)
    goto LABEL_64;
  v46 = *(_QWORD *)(v36 + 8 * v42);
  if (v46)
  {
LABEL_55:
    v39 = (v46 - 1) & v46;
    v44 = __clz(__rbit64(v46)) + (v42 << 6);
    goto LABEL_56;
  }
  v47 = v45 + 5;
  if (v47 < (uint64_t)v41)
  {
    v46 = *(_QWORD *)(v36 + 8 * v47);
    if (!v46)
    {
      while (1)
      {
        v42 = v47 + 1;
        if (__OFADD__(v47, 1))
          break;
        if (v42 >= (uint64_t)v41)
          goto LABEL_64;
        v46 = *(_QWORD *)(v36 + 8 * v42);
        ++v47;
        if (v46)
          goto LABEL_55;
      }
LABEL_79:
      __break(1u);
LABEL_80:
      if (v11 < 0)
        v79 = v11;
      else
        v79 = v11 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v11);
      if (!_CocoaArrayWrapper.endIndex.getter(v79))
        goto LABEL_84;
LABEL_75:
      if ((v11 & 0xC000000000000001) != 0)
      {
        v87 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, v11);
        swift_bridgeObjectRelease(v11);
        v78 = *(_QWORD *)(v87 + OBJC_IVAR___BKRootBarItem_identifier);
        v77 = *(_QWORD *)(v87 + OBJC_IVAR___BKRootBarItem_identifier + 8);
        swift_bridgeObjectRetain(v77);
        swift_unknownObjectRelease(v87);
      }
      else
      {
        if (!*(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          goto LABEL_92;
        }
        v76 = (char *)*(id *)(v11 + 32);
        swift_bridgeObjectRelease(v11);
        v78 = *(_QWORD *)&v76[OBJC_IVAR___BKRootBarItem_identifier];
        v77 = *(_QWORD *)&v76[OBJC_IVAR___BKRootBarItem_identifier + 8];
        swift_bridgeObjectRetain(v77);

      }
      goto LABEL_85;
    }
    v42 = v47;
    goto LABEL_55;
  }
LABEL_64:
  swift_release(v35);
  KeyPath = swift_getKeyPath(&unk_100717630);
  v60 = swift_getKeyPath(&unk_100717658);
  isUniquelyReferenced_nonNull_native = v93;
  static Published.subscript.getter(v96, v93, KeyPath, v60);
  swift_release(KeyPath);
  swift_release(v60);
  v61 = (char *)v96[0];
  if (v96[0])
  {
    if (objc_msgSend(v96[0], "isStandardItem"))
    {
      v63 = *(_QWORD *)&v61[OBJC_IVAR___BKRootBarItem_identifier];
      v62 = *(_QWORD *)&v61[OBJC_IVAR___BKRootBarItem_identifier + 8];
      v64 = swift_bridgeObjectRetain(v62);
      v65 = (void *)static OS_dispatch_queue.main.getter(v64);
      v66 = &_dispatch_main_q;
      v67 = &_dispatch_main_q;
      v68 = v65;
      v69 = &_dispatch_main_q;
      if (v68 == &_dispatch_main_q)
      {
        +[NSThread isMainThread](NSThread, "isMainThread");
        v66 = v68;
      }

      v70 = *v89;
      swift_bridgeObjectRetain(v62);
      v71 = swift_bridgeObjectRetain(v70);
      v72 = sub_1002C5E9C(v71, v63, v62);
      swift_bridgeObjectRelease(v70);
      swift_bridgeObjectRelease(v62);
      if (v72)
      {

        swift_bridgeObjectRelease(v62);
        isUniquelyReferenced_nonNull_native = v93;
      }
      else
      {
        swift_bridgeObjectRelease(v62);
        isUniquelyReferenced_nonNull_native = v93;
        v73 = (_QWORD *)(v93 + OBJC_IVAR___BKSplitViewContentHostingController_selectedIdentifier);
        v74 = *(_QWORD *)(v93 + OBJC_IVAR___BKSplitViewContentHostingController_selectedIdentifier + 8);
        *v73 = 0;
        v73[1] = 0;

        swift_bridgeObjectRelease(v74);
      }
    }
    else
    {

    }
  }
  v41 = (_QWORD *)(isUniquelyReferenced_nonNull_native
                 + OBJC_IVAR___BKSplitViewContentHostingController_selectedIdentifier);
  if (!*(_QWORD *)(isUniquelyReferenced_nonNull_native
                  + OBJC_IVAR___BKSplitViewContentHostingController_selectedIdentifier
                  + 8))
  {
    v11 = *v89;
    if ((unint64_t)*v89 >> 62)
      goto LABEL_80;
    v75 = *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(*v89);
    if (v75)
      goto LABEL_75;
LABEL_84:
    swift_bridgeObjectRelease(v11);
    v78 = 0;
    v77 = 0;
LABEL_85:
    v80 = v41[1];
    *v41 = v78;
    v41[1] = v77;
    swift_bridgeObjectRelease(v80);
  }
  v81 = isUniquelyReferenced_nonNull_native + OBJC_IVAR___BKSplitViewContentHostingController_rootBarCoordinator;
  swift_beginAccess(isUniquelyReferenced_nonNull_native + OBJC_IVAR___BKSplitViewContentHostingController_rootBarCoordinator, v96, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v81);
  if (Strong)
  {
    v83 = Strong;
    v84 = objc_msgSend(Strong, "hostingViewController");
    swift_unknownObjectRelease(v83);
    v85 = *(id *)(isUniquelyReferenced_nonNull_native + v92);

    if (v84 == v85)
      sub_1002B62E8(0, 0, 0);
  }
  return swift_bridgeObjectRelease(v97);
}

uint64_t type metadata accessor for SplitViewContentHostingController(uint64_t a1)
{
  uint64_t result;

  result = qword_1009D79B8;
  if (!qword_1009D79B8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for SplitViewContentHostingController);
  return result;
}

uint64_t sub_1002C68B4()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_1002C68D8(uint64_t a1)
{
  uint64_t v1;

  sub_1002B5B20(a1, v1);
}

void sub_1002C68E0(uint64_t a1)
{
  uint64_t v1;

  sub_1002B5FC4(a1, v1);
}

uint64_t sub_1002C68E8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  const void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    v2 = a2;
    v4 = a1;
    v5 = *v3;
    if (!((unint64_t)*v3 >> 62))
    {
      v7 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v7 >= a2)
        goto LABEL_4;
LABEL_34:
      __break(1u);
      goto LABEL_35;
    }
  }
  if (v5 < 0)
    v21 = v5;
  else
    v21 = v5 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v5);
  v7 = _CocoaArrayWrapper.endIndex.getter(v21);
  swift_bridgeObjectRelease(v5);
  if (v7 < v2)
    goto LABEL_34;
LABEL_4:
  v7 = v2 - v4;
  if (__OFSUB__(v2, v4))
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  v6 = v4 - v2;
  if (__OFSUB__(0, v7))
  {
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  v5 = *v3;
  if (!((unint64_t)*v3 >> 62))
  {
    v8 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
    v9 = v8 - v7;
    if (!__OFADD__(v8, v6))
      goto LABEL_8;
LABEL_42:
    __break(1u);
LABEL_43:
    if (v5 < 0)
      v23 = v5;
    else
      v23 = v5 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v5);
    v12 = _CocoaArrayWrapper.endIndex.getter(v23);
    swift_bridgeObjectRelease(v5);
    goto LABEL_15;
  }
LABEL_37:
  if (v5 < 0)
    v22 = v5;
  else
    v22 = v5 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v5);
  v8 = _CocoaArrayWrapper.endIndex.getter(v22);
  swift_bridgeObjectRelease(v5);
  v9 = v8 + v6;
  if (__OFADD__(v8, v6))
    goto LABEL_42;
LABEL_8:
  v5 = *v3;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(*v3);
  *v3 = v5;
  v8 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v5 & 0x8000000000000000) == 0 && (v5 & 0x4000000000000000) == 0)
  {
    v11 = v5 & 0xFFFFFFFFFFFFFF8;
    if (v9 <= *(_QWORD *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_18;
    v8 = 1;
  }
  if ((unint64_t)v5 >> 62)
    goto LABEL_43;
  v12 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_15:
  if (v12 <= v9)
    v12 = v9;
  swift_bridgeObjectRetain(v5);
  v5 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v8, v12, 1, v5);
  swift_bridgeObjectRelease(*v3);
  *v3 = v5;
  v11 = v5 & 0xFFFFFFFFFFFFFF8;
LABEL_18:
  v13 = sub_100009E04(0, (unint64_t *)&qword_1009D8D70, UIViewController_ptr);
  v14 = (void *)swift_arrayDestroy(v11 + 32 + 8 * v4, v7, v13);
  if (!v6)
    return specialized Array._endMutation()(v14);
  if (!((unint64_t)v5 >> 62))
  {
    v15 = *(_QWORD *)(v11 + 16);
    v16 = v15 - v2;
    if (!__OFSUB__(v15, v2))
      goto LABEL_21;
LABEL_52:
    __break(1u);
    goto LABEL_53;
  }
  if (v5 < 0)
    v24 = v5;
  else
    v24 = v11;
  swift_bridgeObjectRetain(v5);
  v25 = _CocoaArrayWrapper.endIndex.getter(v24);
  swift_bridgeObjectRelease(v5);
  v16 = v25 - v2;
  if (__OFSUB__(v25, v2))
    goto LABEL_52;
LABEL_21:
  if ((v16 & 0x8000000000000000) == 0)
  {
    v17 = (const void *)(v11 + 32 + 8 * v2);
    if (v4 != v2 || v11 + 32 + 8 * v4 >= (unint64_t)v17 + 8 * v16)
      v14 = memmove((void *)(v11 + 32 + 8 * v4), v17, 8 * v16);
    if (!((unint64_t)v5 >> 62))
    {
      v18 = *(_QWORD *)(v11 + 16);
      v19 = v18 + v6;
      if (!__OFADD__(v18, v6))
      {
LABEL_27:
        *(_QWORD *)(v11 + 16) = v19;
        return specialized Array._endMutation()(v14);
      }
      goto LABEL_58;
    }
LABEL_53:
    if (v5 < 0)
      v26 = v5;
    else
      v26 = v11;
    swift_bridgeObjectRetain(v5);
    v27 = _CocoaArrayWrapper.endIndex.getter(v26);
    swift_bridgeObjectRelease(v5);
    v19 = v27 + v6;
    if (!__OFADD__(v27, v6))
      goto LABEL_27;
LABEL_58:
    __break(1u);
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
  __break(1u);
  return result;
}

uint64_t sub_1002C6BC4@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  _BYTE v6[24];

  v3 = (uint64_t *)(*a1 + OBJC_IVAR___BKSplitViewContentHostingController_standardItems);
  swift_beginAccess(v3, v6, 0, 0);
  v4 = *v3;
  *a2 = *v3;
  return swift_bridgeObjectRetain(v4);
}

uint64_t sub_1002C6C1C()
{
  return type metadata accessor for SplitViewContentHostingController(0);
}

void sub_1002C6C24(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[11];

  v4[0] = "\b";
  v4[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[2] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v4[3] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[4] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v4[5] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v4[6] = &unk_100717700;
  sub_100065638(319);
  if (v3 <= 0x3F)
  {
    v4[7] = *(_QWORD *)(v2 - 8) + 64;
    v4[8] = (char *)&value witness table for Builtin.NativeObject + 64;
    v4[9] = (char *)&value witness table for Builtin.NativeObject + 64;
    v4[10] = "\b";
    swift_updateClassMetadata2(a1, 256, 11, v4, a1 + 80);
  }
}

uint64_t sub_1002C6CD8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10004CFD4((uint64_t *)&unk_1009D04E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1002C6D20(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for NoteHighlight(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void *sub_1002C6D64(uint64_t a1, int64_t a2)
{
  _QWORD *v2;
  _QWORD *v4;
  int64_t v5;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  _QWORD *isUniquelyReferenced_nonNull_native;
  int64_t v11;
  void *result;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char v19;

  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  v4 = (_QWORD *)*v2;
  v5 = *(_QWORD *)(*v2 + 16);
  if (v5 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v7 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v8 = a1 - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native(*v2);
  if (!(_DWORD)isUniquelyReferenced_nonNull_native || v9 > v4[3] >> 1)
  {
    if (v5 <= v9)
      v11 = v5 + v8;
    else
      v11 = v5;
    v4 = sub_100043ED0(isUniquelyReferenced_nonNull_native, v11, 1, v4);
  }
  result = (void *)swift_arrayDestroy(&v4[2 * a1 + 4], v7, &type metadata for String);
  if (!v7)
    goto LABEL_20;
  v13 = v4[2];
  v14 = __OFSUB__(v13, a2);
  v15 = v13 - a2;
  if (v14)
    goto LABEL_26;
  if ((v15 & 0x8000000000000000) == 0)
  {
    v16 = (char *)&v4[2 * a2 + 4];
    if (a1 != a2 || &v4[2 * a1 + 4] >= (_QWORD *)&v16[16 * v15])
      result = memmove(&v4[2 * a1 + 4], v16, 16 * v15);
    v17 = v4[2];
    v14 = __OFADD__(v17, v8);
    v18 = v17 - v7;
    if (!v14)
    {
      v4[2] = v18;
LABEL_20:
      *v2 = v4;
      return result;
    }
    goto LABEL_27;
  }
LABEL_28:
  v19 = 2;
  result = (void *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, v19, 1046, 0);
  __break(1u);
  return result;
}

uint64_t sub_1002C6ECC(uint64_t a1, uint64_t a2)
{
  return sub_1002C6ED8(a1, a2, type metadata accessor for InfoBar.TimedMessage);
}

uint64_t sub_1002C6ED8(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t (*v6)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  const void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    v6 = a3;
    v3 = a2;
    v5 = a1;
    v7 = *v4;
    if (!((unint64_t)*v4 >> 62))
    {
      v9 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v9 >= a2)
        goto LABEL_4;
LABEL_34:
      __break(1u);
      goto LABEL_35;
    }
  }
  if (v7 < 0)
    v23 = v7;
  else
    v23 = v7 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v7);
  v9 = _CocoaArrayWrapper.endIndex.getter(v23);
  swift_bridgeObjectRelease(v7);
  if (v9 < v3)
    goto LABEL_34;
LABEL_4:
  v9 = v3 - v5;
  if (__OFSUB__(v3, v5))
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  v8 = v5 - v3;
  if (__OFSUB__(0, v9))
  {
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  v7 = *v4;
  if (!((unint64_t)*v4 >> 62))
  {
    v10 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
    v11 = v10 - v9;
    if (!__OFADD__(v10, v8))
      goto LABEL_8;
LABEL_42:
    __break(1u);
LABEL_43:
    if (v7 < 0)
      v25 = v7;
    else
      v25 = v7 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v7);
    v14 = _CocoaArrayWrapper.endIndex.getter(v25);
    swift_bridgeObjectRelease(v7);
    goto LABEL_15;
  }
LABEL_37:
  if (v7 < 0)
    v24 = v7;
  else
    v24 = v7 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v7);
  v10 = _CocoaArrayWrapper.endIndex.getter(v24);
  swift_bridgeObjectRelease(v7);
  v11 = v10 + v8;
  if (__OFADD__(v10, v8))
    goto LABEL_42;
LABEL_8:
  v7 = *v4;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(*v4);
  *v4 = v7;
  v10 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v7 & 0x8000000000000000) == 0 && (v7 & 0x4000000000000000) == 0)
  {
    v13 = v7 & 0xFFFFFFFFFFFFFF8;
    if (v11 <= *(_QWORD *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_18;
    v10 = 1;
  }
  if ((unint64_t)v7 >> 62)
    goto LABEL_43;
  v14 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_15:
  if (v14 <= v11)
    v14 = v11;
  swift_bridgeObjectRetain(v7);
  v7 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v10, v14, 1, v7);
  swift_bridgeObjectRelease(*v4);
  *v4 = v7;
  v13 = v7 & 0xFFFFFFFFFFFFFF8;
LABEL_18:
  v15 = v6(0);
  v16 = (void *)swift_arrayDestroy(v13 + 32 + 8 * v5, v9, v15);
  if (!v8)
    return specialized Array._endMutation()(v16);
  if (!((unint64_t)v7 >> 62))
  {
    v17 = *(_QWORD *)(v13 + 16);
    v18 = v17 - v3;
    if (!__OFSUB__(v17, v3))
      goto LABEL_21;
LABEL_52:
    __break(1u);
    goto LABEL_53;
  }
  if (v7 < 0)
    v26 = v7;
  else
    v26 = v13;
  swift_bridgeObjectRetain(v7);
  v27 = _CocoaArrayWrapper.endIndex.getter(v26);
  v16 = (void *)swift_bridgeObjectRelease(v7);
  v18 = v27 - v3;
  if (__OFSUB__(v27, v3))
    goto LABEL_52;
LABEL_21:
  if ((v18 & 0x8000000000000000) == 0)
  {
    v19 = (const void *)(v13 + 32 + 8 * v3);
    if (v5 != v3 || v13 + 32 + 8 * v5 >= (unint64_t)v19 + 8 * v18)
      v16 = memmove((void *)(v13 + 32 + 8 * v5), v19, 8 * v18);
    if (!((unint64_t)v7 >> 62))
    {
      v20 = *(_QWORD *)(v13 + 16);
      v21 = v20 + v8;
      if (!__OFADD__(v20, v8))
      {
LABEL_27:
        *(_QWORD *)(v13 + 16) = v21;
        return specialized Array._endMutation()(v16);
      }
      goto LABEL_58;
    }
LABEL_53:
    if (v7 < 0)
      v28 = v7;
    else
      v28 = v13;
    swift_bridgeObjectRetain(v7);
    v29 = _CocoaArrayWrapper.endIndex.getter(v28);
    v16 = (void *)swift_bridgeObjectRelease(v7);
    v21 = v29 + v8;
    if (!__OFADD__(v29, v8))
      goto LABEL_27;
LABEL_58:
    __break(1u);
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
  __break(1u);
  return result;
}

uint64_t sub_1002C71A8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  const void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    v2 = a2;
    v4 = a1;
    v5 = *v3;
    if (!((unint64_t)*v3 >> 62))
    {
      v7 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v7 >= a2)
        goto LABEL_4;
LABEL_34:
      __break(1u);
      goto LABEL_35;
    }
  }
  if (v5 < 0)
    v21 = v5;
  else
    v21 = v5 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v5);
  v7 = _CocoaArrayWrapper.endIndex.getter(v21);
  swift_bridgeObjectRelease(v5);
  if (v7 < v2)
    goto LABEL_34;
LABEL_4:
  v7 = v2 - v4;
  if (__OFSUB__(v2, v4))
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  v6 = v4 - v2;
  if (__OFSUB__(0, v7))
  {
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  v5 = *v3;
  if (!((unint64_t)*v3 >> 62))
  {
    v8 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
    v9 = v8 - v7;
    if (!__OFADD__(v8, v6))
      goto LABEL_8;
LABEL_42:
    __break(1u);
LABEL_43:
    if (v5 < 0)
      v23 = v5;
    else
      v23 = v5 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v5);
    v12 = _CocoaArrayWrapper.endIndex.getter(v23);
    swift_bridgeObjectRelease(v5);
    goto LABEL_15;
  }
LABEL_37:
  if (v5 < 0)
    v22 = v5;
  else
    v22 = v5 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v5);
  v8 = _CocoaArrayWrapper.endIndex.getter(v22);
  swift_bridgeObjectRelease(v5);
  v9 = v8 + v6;
  if (__OFADD__(v8, v6))
    goto LABEL_42;
LABEL_8:
  v5 = *v3;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(*v3);
  *v3 = v5;
  v8 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v5 & 0x8000000000000000) == 0 && (v5 & 0x4000000000000000) == 0)
  {
    v11 = v5 & 0xFFFFFFFFFFFFFF8;
    if (v9 <= *(_QWORD *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_18;
    v8 = 1;
  }
  if ((unint64_t)v5 >> 62)
    goto LABEL_43;
  v12 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_15:
  if (v12 <= v9)
    v12 = v9;
  swift_bridgeObjectRetain(v5);
  v5 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v8, v12, 1, v5);
  swift_bridgeObjectRelease(*v3);
  *v3 = v5;
  v11 = v5 & 0xFFFFFFFFFFFFFF8;
LABEL_18:
  v13 = sub_10004CFD4((uint64_t *)&unk_1009D7C10);
  v14 = (void *)swift_arrayDestroy(v11 + 32 + 8 * v4, v7, v13);
  if (!v6)
    return specialized Array._endMutation()(v14);
  if (!((unint64_t)v5 >> 62))
  {
    v15 = *(_QWORD *)(v11 + 16);
    v16 = v15 - v2;
    if (!__OFSUB__(v15, v2))
      goto LABEL_21;
LABEL_52:
    __break(1u);
    goto LABEL_53;
  }
  if (v5 < 0)
    v24 = v5;
  else
    v24 = v11;
  swift_bridgeObjectRetain(v5);
  v25 = _CocoaArrayWrapper.endIndex.getter(v24);
  swift_bridgeObjectRelease(v5);
  v16 = v25 - v2;
  if (__OFSUB__(v25, v2))
    goto LABEL_52;
LABEL_21:
  if ((v16 & 0x8000000000000000) == 0)
  {
    v17 = (const void *)(v11 + 32 + 8 * v2);
    if (v4 != v2 || v11 + 32 + 8 * v4 >= (unint64_t)v17 + 8 * v16)
      v14 = memmove((void *)(v11 + 32 + 8 * v4), v17, 8 * v16);
    if (!((unint64_t)v5 >> 62))
    {
      v18 = *(_QWORD *)(v11 + 16);
      v19 = v18 + v6;
      if (!__OFADD__(v18, v6))
      {
LABEL_27:
        *(_QWORD *)(v11 + 16) = v19;
        return specialized Array._endMutation()(v14);
      }
      goto LABEL_58;
    }
LABEL_53:
    if (v5 < 0)
      v26 = v5;
    else
      v26 = v11;
    swift_bridgeObjectRetain(v5);
    v27 = _CocoaArrayWrapper.endIndex.getter(v26);
    swift_bridgeObjectRelease(v5);
    v19 = v27 + v6;
    if (!__OFADD__(v27, v6))
      goto LABEL_27;
LABEL_58:
    __break(1u);
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
  __break(1u);
  return result;
}

Swift::Int sub_1002C7478(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t *v16;
  uint64_t v17;
  unint64_t v18;
  void *v19;
  BOOL v20;
  int64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  NSObject *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  os_log_type_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v43;
  uint64_t v44;
  int64_t v45;
  _QWORD v48[2];
  uint64_t v49;
  unint64_t v50;
  id v51;
  Swift::String v52;

  v6 = 0;
  v7 = 0;
  v44 = a3 + 64;
  v8 = 1 << *(_BYTE *)(a3 + 32);
  v9 = -1;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  v10 = v9 & *(_QWORD *)(a3 + 64);
  v45 = (unint64_t)(v8 + 63) >> 6;
LABEL_5:
  v43 = v6;
  if (v10)
  {
LABEL_6:
    v11 = __clz(__rbit64(v10));
    v10 &= v10 - 1;
    v12 = v11 | (v7 << 6);
    goto LABEL_21;
  }
  while (1)
  {
    v13 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
LABEL_46:
      __break(1u);
      goto LABEL_47;
    }
    if (v13 >= v45)
      return sub_100299DE4(a1, a2, v43, a3);
    v14 = *(_QWORD *)(v44 + 8 * v13);
    ++v7;
    if (!v14)
    {
      v7 = v13 + 1;
      if (v13 + 1 >= v45)
        return sub_100299DE4(a1, a2, v43, a3);
      v14 = *(_QWORD *)(v44 + 8 * v7);
      if (!v14)
      {
        v7 = v13 + 2;
        if (v13 + 2 >= v45)
          return sub_100299DE4(a1, a2, v43, a3);
        v14 = *(_QWORD *)(v44 + 8 * v7);
        if (!v14)
          break;
      }
    }
LABEL_20:
    v10 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v7 << 6);
LABEL_21:
    v16 = (uint64_t *)(*(_QWORD *)(a3 + 48) + 16 * v12);
    v17 = *v16;
    v18 = v16[1];
    v19 = *(void **)(*(_QWORD *)(a3 + 56) + 8 * v12);
    if (a5)
    {
      v20 = v17 == a4 && v18 == a5;
      if (v20 || (_stringCompareWithSmolCheck(_:_:expecting:)(v17, v18, a4, a5, 0) & 1) != 0)
      {
        *(unint64_t *)((char *)a1 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
        v6 = v43 + 1;
        if (__OFADD__(v43, 1))
          goto LABEL_48;
        goto LABEL_5;
      }
    }
    v21 = v7;
    v49 = v17;
    v50 = v18;
    v48[0] = 0x3A6D6F74737563;
    v48[1] = 0xE700000000000000;
    v22 = sub_100048F7C();
    v23 = sub_100048FC0();
    swift_bridgeObjectRetain_n(v18, 2);
    v51 = v19;
    if ((BidirectionalCollection<>.starts<A>(with:)(v48, &type metadata for String, &type metadata for String, v22, v23) & 1) == 0)
    {
      if (qword_1009CE408 != -1)
        swift_once(&qword_1009CE408, sub_10006B6D0);
      v30 = type metadata accessor for Logger(0);
      sub_100048F64(v30, (uint64_t)qword_1009E1C98);
      v31 = swift_bridgeObjectRetain_n(v18, 2);
      v32 = Logger.logObject.getter(v31);
      v36 = static os_log_type_t.debug.getter(v32, v33, v34, v35);
      if (os_log_type_enabled(v32, v36))
      {
        v37 = swift_slowAlloc(12, -1);
        v38 = swift_slowAlloc(32, -1);
        v49 = v38;
        *(_DWORD *)v37 = 136315138;
        swift_bridgeObjectRetain(v18);
        *(_QWORD *)(v37 + 4) = sub_100040F58(v17, v18, &v49);
        swift_bridgeObjectRelease_n(v18, 3);
        _os_log_impl((void *)&_mh_execute_header, v32, v36, "Can't extract collectionID from identifier: %s", (uint8_t *)v37, 0xCu);
        swift_arrayDestroy(v38, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v38, -1, -1);
        swift_slowDealloc(v37, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n(v18, 2);
      }
      v52._countAndFlagsBits = v17;
      v52._object = (void *)v18;
      v39 = (char *)&loc_1002C7954
          + dword_1002C7AEC[_s5Books20RootBarItemsProviderC8ItemKindO8rawValueAESgSS_tcfC_0(v52)];
      __asm { BR              X9 }
    }
    v49 = v17;
    v50 = v18;
    swift_bridgeObjectRetain(v18);
    v24 = String.count.getter(0x3A6D6F74737563, 0xE700000000000000);
    v25 = v18;
    v7 = v21;
    if (v24)
    {
      if (v24 < 0)
        goto LABEL_46;
      v26 = HIBYTE(v18) & 0xF;
      if ((v18 & 0x2000000000000000) == 0)
        v26 = v17;
      v27 = 7;
      if (((v18 >> 60) & ((v17 & 0x800000000000000) == 0)) != 0)
        v27 = 11;
      v28 = String.index(_:offsetBy:limitedBy:)(15, v24, v27 | (v26 << 16));
      if ((v29 & 1) != 0)
        goto LABEL_49;
      String.removeSubrange(_:)(15, v28);
      v25 = v50;
    }
    swift_bridgeObjectRelease(v18);
    swift_bridgeObjectRelease(v25);
    swift_bridgeObjectRelease(v18);

    swift_bridgeObjectRelease(0xE600000000000000);
    if (v10)
      goto LABEL_6;
  }
  v15 = v13 + 3;
  if (v15 < v45)
  {
    v14 = *(_QWORD *)(v44 + 8 * v15);
    if (!v14)
    {
      while (1)
      {
        v7 = v15 + 1;
        if (__OFADD__(v15, 1))
          break;
        if (v7 >= v45)
          return sub_100299DE4(a1, a2, v43, a3);
        v14 = *(_QWORD *)(v44 + 8 * v7);
        ++v15;
        if (v14)
          goto LABEL_20;
      }
LABEL_47:
      __break(1u);
LABEL_48:
      __break(1u);
LABEL_49:
      __break(1u);
      JUMPOUT(0x1002C7AECLL);
    }
    v7 = v15;
    goto LABEL_20;
  }
  return sub_100299DE4(a1, a2, v43, a3);
}

Swift::Int sub_1002C7B30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  char v7;
  unsigned int v8;
  unint64_t v9;
  size_t v10;
  uint64_t isStackAllocationSafe;
  Swift::Int v12;
  uint64_t v13;
  void *v14;
  uint64_t v16;

  v7 = *(_BYTE *)(a1 + 32);
  v8 = v7 & 0x3F;
  v9 = (unint64_t)((1 << v7) + 63) >> 6;
  v10 = 8 * v9;
  isStackAllocationSafe = swift_bridgeObjectRetain_n(a3, 2);
  if (v8 <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(v10, 8), (isStackAllocationSafe & 1) != 0))
  {
    __chkstk_darwin(isStackAllocationSafe);
    bzero((char *)&v16 - ((v10 + 15) & 0x3FFFFFFFFFFFFFF0), v10);
    swift_bridgeObjectRetain(a3);
    v12 = sub_1002C7478((unint64_t *)((char *)&v16 - ((v10 + 15) & 0x3FFFFFFFFFFFFFF0)), v9, a1, a2, a3);
    v13 = swift_bridgeObjectRelease(a3);
    if (v3)
      swift_willThrow(v13);
    swift_bridgeObjectRelease_n(a3, 2);
  }
  else
  {
    v14 = (void *)swift_slowAlloc(v10, -1);
    bzero(v14, v10);
    swift_bridgeObjectRetain(a3);
    v12 = sub_1002C7478((unint64_t *)v14, v9, a1, a2, a3);
    swift_bridgeObjectRelease(a3);
    swift_slowDealloc(v14, -1, -1);
    swift_bridgeObjectRelease_n(a3, 2);
  }
  return v12;
}

void *sub_1002C7CF0(uint64_t a1, int64_t a2)
{
  _QWORD *v2;
  _QWORD *v4;
  int64_t v5;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  _QWORD *isUniquelyReferenced_nonNull_native;
  int64_t v11;
  uint64_t v12;
  void *result;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char v20;

  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  v4 = (_QWORD *)*v2;
  v5 = *(_QWORD *)(*v2 + 16);
  if (v5 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v7 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v8 = a1 - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native(*v2);
  if (!(_DWORD)isUniquelyReferenced_nonNull_native || v9 > v4[3] >> 1)
  {
    if (v5 <= v9)
      v11 = v5 + v8;
    else
      v11 = v5;
    v4 = sub_1005B09F8(isUniquelyReferenced_nonNull_native, v11, 1, v4);
  }
  v12 = sub_10004CFD4(&qword_1009D7B20);
  result = (void *)swift_arrayDestroy(&v4[2 * a1 + 4], v7, v12);
  if (!v7)
    goto LABEL_20;
  v14 = v4[2];
  v15 = __OFSUB__(v14, a2);
  v16 = v14 - a2;
  if (v15)
    goto LABEL_26;
  if ((v16 & 0x8000000000000000) == 0)
  {
    v17 = (char *)&v4[2 * a2 + 4];
    if (a1 != a2 || &v4[2 * a1 + 4] >= (_QWORD *)&v17[16 * v16])
      result = memmove(&v4[2 * a1 + 4], v17, 16 * v16);
    v18 = v4[2];
    v15 = __OFADD__(v18, v8);
    v19 = v18 - v7;
    if (!v15)
    {
      v4[2] = v19;
LABEL_20:
      *v2 = v4;
      return result;
    }
    goto LABEL_27;
  }
LABEL_28:
  v20 = 2;
  result = (void *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, v20, 1046, 0);
  __break(1u);
  return result;
}

void *sub_1002C7E60(uint64_t a1, int64_t a2)
{
  _QWORD *v2;
  _QWORD *v4;
  int64_t v5;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  _QWORD *isUniquelyReferenced_nonNull_native;
  int64_t v11;
  void *result;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  char *v16;
  size_t v17;
  BOOL v18;
  uint64_t v19;
  uint64_t v20;
  char v21;

  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_25;
  }
  v4 = (_QWORD *)*v2;
  v5 = *(_QWORD *)(*v2 + 16);
  if (v5 < a2)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v7 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  v8 = a1 - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native(*v2);
  if (!(_DWORD)isUniquelyReferenced_nonNull_native || v9 > v4[3] >> 1)
  {
    if (v5 <= v9)
      v11 = v5 + v8;
    else
      v11 = v5;
    v4 = sub_1005B058C(isUniquelyReferenced_nonNull_native, v11, 1, v4);
  }
  result = (void *)swift_arrayDestroy(&v4[9 * a1 + 4], v7, &type metadata for SidebarViewModel.Item);
  if (!v7)
    goto LABEL_23;
  v13 = v4[2];
  v14 = __OFSUB__(v13, a2);
  v15 = v13 - a2;
  if (v14)
    goto LABEL_29;
  if ((v15 & 0x8000000000000000) == 0)
  {
    v16 = (char *)&v4[9 * a2 + 4];
    v17 = 72 * v15;
    if (72 * a1 < 72 * a2 || (&v4[9 * a1 + 4] < (_QWORD *)&v16[v17] ? (v18 = a1 == a2) : (v18 = 0), !v18))
      result = memmove(&v4[9 * a1 + 4], v16, v17);
    v19 = v4[2];
    v14 = __OFADD__(v19, v8);
    v20 = v19 - v7;
    if (!v14)
    {
      v4[2] = v20;
LABEL_23:
      *v2 = v4;
      return result;
    }
    goto LABEL_30;
  }
LABEL_31:
  v21 = 2;
  result = (void *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, v21, 1046, 0);
  __break(1u);
  return result;
}

uint64_t sub_1002C7FE8(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) == 0)
    return swift_release(a1);
  swift_bridgeObjectRelease(a1);
  return swift_bridgeObjectRelease(a2);
}

uint64_t sub_1002C8014(uint64_t a1, uint64_t a2)
{
  return sub_1002C6ED8(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for SinglePageViewController);
}

void sub_1002C8020()
{
  uint64_t v0;

  sub_1002BB664(v0);
}

uint64_t sub_1002C8028()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;

  v1 = type metadata accessor for Logger(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v7 + 15) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return swift_deallocObject(v0, v8 + 8, v5);
}

uint64_t sub_1002C80C4(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;

  v3 = *(_QWORD *)(type metadata accessor for Logger(0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_1002B7A90(a1, v1 + v4, *(void **)(v1 + v5), *(void **)(v1 + ((v5 + 15) & 0xFFFFFFFFFFFFFFF8)), *(void **)(v1 + ((((v5 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_1002C812C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;

  v1 = type metadata accessor for Logger(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v7 + 15) & 0xFFFFFFFFFFFFFFF8;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v8 + 8, v5);
}

void sub_1002C81E4()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(type metadata accessor for Logger(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_1002B7BE0(*(void **)(v0 + 16), (char **)(v0 + v2), *(char **)(v0 + v3), *(char **)(v0 + ((v3 + 15) & 0xFFFFFFFFFFFFFFF8)), *(void **)(v0 + ((((v3 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_1002C8240()
{
  id *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = type metadata accessor for Logger(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 40) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;

  (*(void (**)(char *, uint64_t))(v2 + 8))((char *)v0 + v4, v1);
  return swift_deallocObject(v0, v6 + 8, v5);
}

uint64_t sub_1002C82E0()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(type metadata accessor for Logger(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  return sub_1002B86C0(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24), *(NSObject **)(v0 + 32), v0 + v2, *(void **)(v0 + ((*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFF8)));
}

_QWORD *sub_1002C8348()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v38;
  unint64_t v39;
  void (*v40)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD v46[3];
  id v47;

  v1 = v0;
  v2 = sub_10004CFD4(&qword_1009D7D90);
  v3 = *(_QWORD *)(v2 - 8);
  v44 = v2;
  v45 = v3;
  __chkstk_darwin(v2);
  v43 = (char *)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10004CFD4((uint64_t *)&unk_1009D4AE0);
  __chkstk_darwin(v5);
  v7 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10004CFD4(&qword_1009D7D98);
  v9 = *(_QWORD *)(v8 - 8);
  v41 = v8;
  v42 = v9;
  __chkstk_darwin(v8);
  v11 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for ReportIssueViewModel(0);
  swift_allocObject(v12, *(unsigned int *)(v12 + 48), *(unsigned __int16 *)(v12 + 52));
  v0[2] = sub_1005FFA64();
  v13 = sub_10004CFD4(&qword_1009D7DA0);
  v14 = swift_allocObject(v13, *(unsigned int *)(v13 + 48), *(unsigned __int16 *)(v13 + 52));
  v0[3] = PassthroughSubject.init()(v14);
  v15 = sub_10004CFD4(&qword_1009D1668);
  v16 = swift_allocObject(v15, *(unsigned int *)(v15 + 48), *(unsigned __int16 *)(v15 + 52));
  v0[4] = PassthroughSubject.init()(v16);
  v17 = sub_10004CFD4(&qword_1009D7DA8);
  v18 = swift_allocObject(v17, *(unsigned int *)(v17 + 48), *(unsigned __int16 *)(v17 + 52));
  v19 = PassthroughSubject.init()(v18);
  v0[5] = v19;
  v20 = sub_10004CFD4(&qword_1009D7DB0);
  v21 = swift_allocObject(v20, *(unsigned int *)(v20 + 48), *(unsigned __int16 *)(v20 + 52));
  v0[6] = PassthroughSubject.init()(v21);
  v0[7] = &_swiftEmptySetSingleton;
  v46[0] = v19;
  v22 = sub_100059BB4();
  v23 = swift_retain(v19);
  v47 = (id)static OS_dispatch_queue.main.getter(v23);
  v24 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
  v40 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56);
  v40(v7, 1, 1, v24);
  v25 = sub_100030B34(&qword_1009D7DB8, &qword_1009D7DA8, (uint64_t)&protocol conformance descriptor for PassthroughSubject<A, B>);
  v39 = sub_1001EDDD0();
  Publisher.receive<A>(on:options:)(&v47, v7, v17, v22, v25, v39);
  sub_1001EDE18((uint64_t)v7);

  swift_release(v46[0]);
  v26 = swift_allocObject(&unk_1008F9D88, 24, 7);
  swift_weakInit(v26 + 16, v0);
  v27 = sub_100030B34(&qword_1009D7DC0, &qword_1009D7D98, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  v28 = v41;
  v29 = Publisher<>.sink(receiveValue:)(sub_1002C8EE8, v26, v41, v27);
  swift_release(v26);
  (*(void (**)(char *, uint64_t))(v42 + 8))(v11, v28);
  swift_beginAccess(v1 + 7, v46, 33, 0);
  AnyCancellable.store(in:)(v1 + 7);
  swift_endAccess(v46);
  swift_release(v29);
  v46[0] = v1[6];
  v30 = swift_retain(v46[0]);
  v47 = (id)static OS_dispatch_queue.main.getter(v30);
  v40(v7, 1, 1, v24);
  v31 = sub_100030B34(&qword_1009D7DC8, &qword_1009D7DB0, (uint64_t)&protocol conformance descriptor for PassthroughSubject<A, B>);
  v32 = v43;
  Publisher.receive<A>(on:options:)(&v47, v7, v20, v22, v31, v39);
  sub_1001EDE18((uint64_t)v7);

  swift_release(v46[0]);
  v33 = swift_allocObject(&unk_1008F9D88, 24, 7);
  swift_weakInit(v33 + 16, v1);
  v34 = sub_100030B34(&qword_1009D7DD0, &qword_1009D7D90, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  v35 = v44;
  v36 = Publisher<>.sink(receiveValue:)(sub_1002C8EF0, v33, v44, v34);
  swift_release(v33);
  (*(void (**)(char *, uint64_t))(v45 + 8))(v32, v35);
  swift_beginAccess(v1 + 7, v46, 33, 0);
  AnyCancellable.store(in:)(v1 + 7);
  swift_endAccess(v46);
  swift_release(v36);
  return v1;
}

uint64_t sub_1002C87A8(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t KeyPath;
  uint64_t v14;
  uint64_t *v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  char v19;
  char v20[24];

  v3 = *(_QWORD *)a1;
  v2 = *(_QWORD *)(a1 + 8);
  v4 = *(unsigned __int8 *)(a1 + 16);
  v5 = a2 + 16;
  swift_beginAccess(a2 + 16, v20, 0, 0);
  result = swift_weakLoadStrong(v5);
  if (result)
  {
    v7 = result;
    if (!v4)
    {
      v17 = v3;
      v18 = v2;
      v19 = 0;
      swift_bridgeObjectRetain(v2);
      PassthroughSubject.send(_:)(&v17);
      sub_1002C9360(v3, v2, 0);
      return swift_release(v7);
    }
    if (v4 == 1)
    {
      v8 = (uint64_t *)(*(_QWORD *)(result + 16) + OBJC_IVAR____TtC5Books20ReportIssueViewModel_textEntered);
      v9 = v8[1];
      *v8 = v3;
      v8[1] = v2;
      swift_bridgeObjectRetain(v2);
      swift_bridgeObjectRelease(v9);
      v10 = *(_QWORD *)(v7 + 16);
      v11 = HIBYTE(v2) & 0xF;
      if ((v2 & 0x2000000000000000) == 0)
        v11 = v3 & 0xFFFFFFFFFFFFLL;
      v12 = v11 == 0;
      KeyPath = swift_getKeyPath(&unk_100717850);
      v14 = swift_getKeyPath(&unk_100717878);
      LOBYTE(v17) = v12;
      swift_retain(v10);
      static Published.subscript.setter(&v17, v10, KeyPath, v14);
      return swift_release(v7);
    }
    v15 = (uint64_t *)(*(_QWORD *)(result + 16) + OBJC_IVAR____TtC5Books20ReportIssueViewModel_textEntered);
    v16 = v15[1];
    v17 = *v15;
    v18 = v16;
    v19 = 1;
    swift_bridgeObjectRetain(v16);
    PassthroughSubject.send(_:)(&v17);
    swift_release(v7);
    return swift_bridgeObjectRelease(v16);
  }
  return result;
}

uint64_t sub_1002C891C(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t KeyPath;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  char v19;
  uint64_t v20;
  unsigned __int8 *v21;
  _QWORD *v22;
  uint64_t v23;
  int v24;
  BOOL v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  char v32[24];

  v3 = *(_QWORD *)a1;
  v2 = *(_QWORD **)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(unsigned __int8 *)(a1 + 24);
  v6 = a2 + 16;
  swift_beginAccess(a2 + 16, v32, 0, 0);
  result = swift_weakLoadStrong(v6);
  if (!result)
    return result;
  v8 = result;
  v9 = *(_QWORD *)(result + 16);
  swift_retain(result);
  swift_retain(v9);
  v10 = sub_1002C8EF8(v3);
  swift_release(v8);
  KeyPath = swift_getKeyPath(&unk_100717808);
  v12 = swift_getKeyPath(&unk_100717830);
  v30 = v10;
  static Published.subscript.setter(&v30, v9, KeyPath, v12);
  if (v4)
  {
    v13 = *(_QWORD *)(v8 + 16);
    v14 = swift_getKeyPath(&unk_100717898);
    v15 = swift_getKeyPath(&unk_1007178C0);
    v30 = v2;
    v31 = v4;
    swift_bridgeObjectRetain(v4);
    swift_retain(v13);
    static Published.subscript.setter(&v30, v13, v14, v15);
  }
  v16 = *(_QWORD *)(v8 + 16);
  v17 = *(_QWORD *)(v16 + OBJC_IVAR____TtC5Books20ReportIssueViewModel_textEntered + 8);
  if (v17)
  {
    v30 = *(_QWORD **)(v16 + OBJC_IVAR____TtC5Books20ReportIssueViewModel_textEntered);
    v31 = v17;
    v18 = sub_1001F15BC();
    v19 = Collection.isNotEmpty.getter(&type metadata for String, v18);
    if (!v4)
      goto LABEL_16;
  }
  else
  {
    v19 = 0;
    if (!v4)
      goto LABEL_16;
  }
  v20 = *(_QWORD *)(v3 + 16);
  if (v20)
  {
    v21 = (unsigned __int8 *)(v3 + 96);
    while (1)
    {
      v22 = (_QWORD *)*((_QWORD *)v21 - 8);
      v23 = *((_QWORD *)v21 - 7);
      v24 = *v21;
      v25 = v22 == v2 && v4 == v23;
      if (v25 || (_stringCompareWithSmolCheck(_:_:expecting:)(v22, v23, v2, v4, 0) & 1) != 0)
        break;
      v21 += 72;
      if (!--v20)
        goto LABEL_16;
    }
    v26 = (v24 == 2) & (v19 ^ 1);
    swift_retain(v16);
    goto LABEL_18;
  }
LABEL_16:
  swift_retain(v16);
  v26 = 1;
LABEL_18:
  v27 = swift_getKeyPath(&unk_100717850);
  v28 = swift_getKeyPath(&unk_100717878);
  LOBYTE(v30) = v26;
  v29 = static Published.subscript.setter(&v30, v16, v27, v28);
  if (v5)
    PassthroughSubject.send(_:)(v29);
  return swift_release(v8);
}

uint64_t sub_1002C8B3C()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_release(v0[3]);
  swift_release(v0[4]);
  swift_release(v0[5]);
  swift_release(v0[6]);
  swift_bridgeObjectRelease(v0[7]);
  return swift_deallocClassInstance(v0, 64, 7);
}

uint64_t type metadata accessor for ReportIssuePresenter()
{
  return objc_opt_self(_TtC5Books20ReportIssuePresenter);
}

uint64_t sub_1002C8BA8@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  *a1 = v2;
  return swift_retain(v2);
}

uint64_t sub_1002C8BB8()
{
  uint64_t v0;

  return swift_retain(*(_QWORD *)(*(_QWORD *)v0 + 32));
}

uint64_t sub_1002C8BC4()
{
  uint64_t v0;

  return swift_retain(*(_QWORD *)(*(_QWORD *)v0 + 24));
}

uint64_t sub_1002C8BD0()
{
  uint64_t v0;

  return swift_retain(*(_QWORD *)(*(_QWORD *)v0 + 40));
}

uint64_t sub_1002C8BDC()
{
  uint64_t v0;

  return swift_retain(*(_QWORD *)(*(_QWORD *)v0 + 48));
}

uint64_t sub_1002C8BE8@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_100717850);
  v5 = swift_getKeyPath(&unk_100717878);
  static Published.subscript.getter(&v7, v3, KeyPath, v5);
  swift_release(KeyPath);
  result = swift_release(v5);
  *a2 = v7;
  return result;
}

uint64_t sub_1002C8C64(char *a1, uint64_t *a2)
{
  char v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  char v7;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_100717850);
  v5 = swift_getKeyPath(&unk_100717878);
  v7 = v2;
  swift_retain(v3);
  return static Published.subscript.setter(&v7, v3, KeyPath, v5);
}

uint64_t sub_1002C8CD4@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_100717808);
  v5 = swift_getKeyPath(&unk_100717830);
  static Published.subscript.getter(&v7, v3, KeyPath, v5);
  swift_release(KeyPath);
  result = swift_release(v5);
  *a2 = v7;
  return result;
}

uint64_t sub_1002C8D50(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v7;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_100717808);
  v5 = swift_getKeyPath(&unk_100717830);
  v7 = v2;
  swift_bridgeObjectRetain(v2);
  swift_retain(v3);
  return static Published.subscript.setter(&v7, v3, KeyPath, v5);
}

double sub_1002C8DC8@<D0>(uint64_t *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  double result;
  __int128 v7;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_100717898);
  v5 = swift_getKeyPath(&unk_1007178C0);
  static Published.subscript.getter(&v7, v3, KeyPath, v5);
  swift_release(KeyPath);
  swift_release(v5);
  result = *(double *)&v7;
  *a2 = v7;
  return result;
}

uint64_t sub_1002C8E44(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t KeyPath;
  uint64_t v6;
  _QWORD v8[2];

  v3 = *a1;
  v2 = a1[1];
  v4 = *a2;
  KeyPath = swift_getKeyPath(&unk_100717898);
  v6 = swift_getKeyPath(&unk_1007178C0);
  v8[0] = v3;
  v8[1] = v2;
  swift_bridgeObjectRetain(v2);
  swift_retain(v4);
  return static Published.subscript.setter(v8, v4, KeyPath, v6);
}

uint64_t sub_1002C8EC4()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1002C8EE8(uint64_t a1)
{
  uint64_t v1;

  return sub_1002C87A8(a1, v1);
}

uint64_t sub_1002C8EF0(uint64_t a1)
{
  uint64_t v1;

  return sub_1002C891C(a1, v1);
}

_QWORD *sub_1002C8EF8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  char *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t ObjCClassFromMetadata;
  id v28;
  char *v29;
  uint64_t v30;
  unint64_t v31;
  char *v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  char *v42;
  id v43;
  char *v44;
  const char *v45;
  unint64_t v46;
  unint64_t v47;
  unint64_t v48;
  BOOL v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD v56[2];
  unint64_t v57;
  unint64_t v58;
  char *v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unsigned int v76;

  v3 = type metadata accessor for Locale(0);
  v62 = *(_QWORD *)(v3 - 8);
  v63 = v3;
  v4 = __chkstk_darwin(v3);
  v61 = (char *)v56 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v60 = (char *)v56 - v6;
  v7 = type metadata accessor for String.LocalizationValue(0);
  v68 = *(_QWORD *)(v7 - 8);
  v69 = v7;
  v8 = __chkstk_darwin(v7);
  v59 = (char *)v56 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v67 = (char *)v56 - v10;
  v11 = *(_QWORD *)(a1 + 16);
  if (!v11)
    return _swiftEmptyArrayStorage;
  v56[1] = v1;
  swift_bridgeObjectRetain(a1);
  v12 = 0;
  v13 = _swiftEmptyArrayStorage;
  v57 = 0x80000001007BC9E0;
  v58 = 0x80000001007BC960;
  v64 = a1;
  do
  {
    v14 = a1 + v12;
    v16 = *(_QWORD *)(a1 + v12 + 32);
    v15 = *(_QWORD *)(a1 + v12 + 40);
    v18 = *(_QWORD *)(a1 + v12 + 48);
    v17 = *(_QWORD *)(a1 + v12 + 56);
    v19 = *(_QWORD *)(a1 + v12 + 64);
    v20 = *(_QWORD *)(a1 + v12 + 72);
    v73 = v19;
    v74 = v17;
    v21 = *(_QWORD *)(v14 + 88);
    v71 = *(_QWORD *)(v14 + 80);
    v72 = v20;
    v22 = *(unsigned __int8 *)(v14 + 96);
    v76 = v22 - 1;
    v75 = v15;
    v70 = v21;
    if (v22)
    {
      v65 = v18;
      v66 = v16;
      if (v22 == 1)
      {
        swift_bridgeObjectRetain(v15);
        swift_bridgeObjectRetain(v17);
        swift_bridgeObjectRetain(v20);
        swift_bridgeObjectRetain(v21);
        v23 = v67;
        v24 = String.LocalizationValue.init(stringLiteral:)(0xD00000000000002ALL, v58);
        v34 = v60;
        static Locale.current.getter(v24);
        v25 = v59;
        (*(void (**)(char *, char *, uint64_t))(v68 + 16))(v59, v23, v69);
        v26 = type metadata accessor for BundleFinder();
        ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v26);
        v28 = objc_msgSend((id)objc_opt_self(NSBundle), "bundleForClass:", ObjCClassFromMetadata);
        v29 = v61;
        v39 = v62;
        v41 = v63;
        (*(void (**)(char *, char *, uint64_t))(v62 + 16))(v61, v34, v63);
        v42 = v25;
        v43 = v28;
        v44 = v29;
        v45 = "Narration issue explanation text field placeholder for optional field";
      }
      else
      {
        swift_bridgeObjectRetain(v15);
        swift_bridgeObjectRetain(v17);
        swift_bridgeObjectRetain(v20);
        swift_bridgeObjectRetain(v21);
        v32 = v67;
        v33 = String.LocalizationValue.init(stringLiteral:)(0xD00000000000002ALL, v57);
        v34 = v60;
        static Locale.current.getter(v33);
        v35 = v59;
        (*(void (**)(char *, char *, uint64_t))(v68 + 16))(v59, v32, v69);
        v36 = type metadata accessor for BundleFinder();
        v37 = swift_getObjCClassFromMetadata(v36);
        v38 = objc_msgSend((id)objc_opt_self(NSBundle), "bundleForClass:", v37);
        v40 = v61;
        v39 = v62;
        v41 = v63;
        (*(void (**)(char *, char *, uint64_t))(v62 + 16))(v61, v34, v63);
        v42 = v35;
        v43 = v38;
        v44 = v40;
        v45 = "Narration issue explanation text field placeholder for required field";
      }
      v30 = String.init(localized:table:bundle:locale:comment:)(v42, 0, 0, v43, v44, v45, 69, 2);
      v31 = v46;
      (*(void (**)(char *, uint64_t))(v39 + 8))(v34, v41);
      (*(void (**)(char *, uint64_t))(v68 + 8))(v67, v69);
      v18 = v65;
      v16 = v66;
    }
    else
    {
      swift_bridgeObjectRetain(v15);
      swift_bridgeObjectRetain(v17);
      swift_bridgeObjectRetain(v20);
      swift_bridgeObjectRetain(v21);
      v30 = 0;
      v31 = 0xE000000000000000;
    }
    if ((swift_isUniquelyReferenced_nonNull_native(v13) & 1) == 0)
      v13 = sub_1005B0B60(0, v13[2] + 1, 1, v13);
    v48 = v13[2];
    v47 = v13[3];
    if (v48 >= v47 >> 1)
      v13 = sub_1005B0B60((_QWORD *)(v47 > 1), v48 + 1, 1, v13);
    v49 = v76 < 2;
    v13[2] = v48 + 1;
    v50 = &v13[11 * v48];
    v51 = v75;
    v50[4] = v16;
    v50[5] = v51;
    v52 = v74;
    v50[6] = v18;
    v50[7] = v52;
    v53 = v72;
    v50[8] = v73;
    v50[9] = v53;
    v54 = v70;
    v50[10] = v71;
    v50[11] = v54;
    *((_BYTE *)v50 + 96) = v49;
    v50[13] = v30;
    v50[14] = v31;
    v12 += 72;
    --v11;
    a1 = v64;
  }
  while (v11);
  swift_bridgeObjectRelease(v64);
  return v13;
}

uint64_t sub_1002C9360(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 <= 1u)
    return swift_bridgeObjectRelease(a2);
  return result;
}

ValueMetadata *type metadata accessor for AccessibilityShowsCloseButtonLCV()
{
  return &type metadata for AccessibilityShowsCloseButtonLCV;
}

uint64_t sub_1002C9388(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_10086A7A8, 1);
}

void sub_1002C9398(_BYTE *a1@<X8>)
{
  *a1 = 0;
}

uint64_t sub_1002C93A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return static EnvironmentKey<>._valuesEqual(_:_:)(a1, a2, a3, a4, &protocol witness table for Bool);
}

uint64_t sub_1002C93AC()
{
  unint64_t v0;
  uint64_t var1;

  v0 = sub_1002C9DD4();
  EnvironmentValues.subscript.getter(&var1, &type metadata for BooksAccessibilityHiddenKey, &type metadata for BooksAccessibilityHiddenKey, v0);
  return var1;
}

uint64_t sub_1002C93E4@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  double v15;
  uint64_t v16;
  char *v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t);
  double v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD v31[2];
  uint64_t v32;
  _QWORD *v33;

  v31[1] = a1;
  v5 = type metadata accessor for AccessibilityTraits(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)v31 - v10;
  v32 = sub_10004CFD4(&qword_1009D7DF0);
  __chkstk_darwin(v32);
  v13 = (char *)v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __chkstk_darwin(v14);
  v17 = (char *)v31 - v16;
  if ((a2 & 1) != 0)
  {
    static AccessibilityTraits.isSelected.getter(v15);
  }
  else
  {
    v33 = _swiftEmptyArrayStorage;
    v31[0] = sub_100008DB0(&qword_1009D3BA0, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityTraits, (uint64_t)&protocol conformance descriptor for AccessibilityTraits);
    v18 = a2;
    v19 = a3;
    v20 = sub_10004CFD4(&qword_1009D3BA8);
    v21 = sub_100030B34(&qword_1009D3BB0, &qword_1009D3BA8, (uint64_t)&protocol conformance descriptor for [A]);
    v22 = v20;
    a3 = v19;
    a2 = v18;
    dispatch thunk of SetAlgebra.init<A>(_:)(&v33, v22, v21, v5, v31[0]);
  }
  v23 = sub_10004CFD4(&qword_1009D7DF8);
  v24 = sub_100030B34(&qword_1009D7E00, &qword_1009D7DF8, (uint64_t)&protocol conformance descriptor for _ViewModifier_Content<A>);
  View.accessibilityAddTraits(_:)(v11, v23, v24);
  v25 = *(void (**)(char *, uint64_t))(v6 + 8);
  v25(v11, v5);
  if ((a2 & 1) != 0)
  {
    v33 = _swiftEmptyArrayStorage;
    v27 = sub_100008DB0(&qword_1009D3BA0, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityTraits, (uint64_t)&protocol conformance descriptor for AccessibilityTraits);
    v28 = sub_10004CFD4(&qword_1009D3BA8);
    v29 = sub_100030B34(&qword_1009D3BB0, &qword_1009D3BA8, (uint64_t)&protocol conformance descriptor for [A]);
    dispatch thunk of SetAlgebra.init<A>(_:)(&v33, v28, v29, v5, v27);
  }
  else
  {
    static AccessibilityTraits.isSelected.getter(v26);
  }
  ModifiedContent<>.accessibilityRemoveTraits(_:)(v8, v32);
  v25(v8, v5);
  sub_100010960((uint64_t)v13, &qword_1009D7DF0);
  return sub_100025B3C((uint64_t)v17, a3, &qword_1009D7DF0);
}

uint64_t sub_1002C9694@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  char *v2;

  return sub_1002C93E4(a1, *v2, a2);
}

uint64_t sub_1002C969C@<X0>(int a1@<W1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t (*v12)(uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  _QWORD v24[2];

  v21 = a2;
  v22 = a3;
  v23 = a1;
  v5 = sub_10004CFD4(&qword_1009D7E08);
  __chkstk_darwin(v5);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for AccessibilityTraits(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24[0] = _swiftEmptyArrayStorage;
  v13 = sub_100008DB0(&qword_1009D3BA0, v12, (uint64_t)&protocol conformance descriptor for AccessibilityTraits);
  v14 = sub_10004CFD4(&qword_1009D3BA8);
  v15 = sub_100030B34(&qword_1009D3BB0, &qword_1009D3BA8, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(v24, v14, v15, v8, v13);
  v16 = sub_10004CFD4(&qword_1009D7E10);
  v17 = sub_100030B34(&qword_1009D7E18, &qword_1009D7E10, (uint64_t)&protocol conformance descriptor for _ViewModifier_Content<A>);
  View.accessibilityAddTraits(_:)(v11, v16, v17);
  result = (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  if ((v23 & 1) != 0)
  {
    v24[0] = v21;
    v24[1] = v22;
    v19 = sub_1001F2108();
    ModifiedContent<>.accessibilityHint<A>(_:)(v24, v5, &type metadata for String, v19);
    sub_100010960(a4, &qword_1009D7E08);
    return sub_100025B3C((uint64_t)v7, a4, &qword_1009D7E08);
  }
  return result;
}

uint64_t sub_1002C9888@<X0>(uint64_t a1@<X8>)
{
  unsigned __int8 *v1;

  return sub_1002C969C(*v1, *((_QWORD *)v1 + 1), *((_QWORD *)v1 + 2), a1);
}

uint64_t sub_1002C9894@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;

  return sub_1002C98CC(a1, *v2, v2[1], &qword_1009D7E50, &qword_1009D7E58, &qword_1009D7E60, (void (*)(_QWORD *, uint64_t, _QWORD *, unint64_t))&ModifiedContent<>.accessibilityLabel<A>(_:), a2);
}

uint64_t sub_1002C98CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X3>, uint64_t *a5@<X4>, unint64_t *a6@<X5>, void (*a7)(_QWORD *, uint64_t, _QWORD *, unint64_t)@<X6>, uint64_t a8@<X8>)
{
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t (*v17)(uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(_QWORD *, uint64_t, _QWORD *, unint64_t);
  unint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD v31[2];

  v27 = a7;
  v28 = a6;
  v29 = a1;
  v30 = a3;
  v25 = a2;
  v26 = sub_10004CFD4(a4);
  __chkstk_darwin(v26);
  v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for AccessibilityTraits(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v25 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31[0] = _swiftEmptyArrayStorage;
  v18 = sub_100008DB0(&qword_1009D3BA0, v17, (uint64_t)&protocol conformance descriptor for AccessibilityTraits);
  v19 = sub_10004CFD4(&qword_1009D3BA8);
  v20 = sub_100030B34(&qword_1009D3BB0, &qword_1009D3BA8, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(v31, v19, v20, v13, v18);
  v21 = sub_10004CFD4(a5);
  v22 = sub_100030B34(v28, a5, (uint64_t)&protocol conformance descriptor for _ViewModifier_Content<A>);
  View.accessibilityAddTraits(_:)(v16, v21, v22);
  result = (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  if (v30)
  {
    v31[0] = v25;
    v31[1] = v30;
    v24 = sub_1001F2108();
    v27(v31, v26, &type metadata for String, v24);
    sub_100010960(a8, a4);
    return sub_100025B3C((uint64_t)v12, a8, a4);
  }
  return result;
}

uint64_t sub_1002C9AA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;

  return sub_1002C98CC(a1, *v2, v2[1], &qword_1009D7E80, &qword_1009D7E88, &qword_1009D7E90, (void (*)(_QWORD *, uint64_t, _QWORD *, unint64_t))&ModifiedContent<>.accessibilityValue<A>(_:), a2);
}

uint64_t sub_1002C9ADC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;

  return sub_1002C98CC(a1, *v2, v2[1], &qword_1009D7E68, &qword_1009D7E70, &qword_1009D7E78, (void (*)(_QWORD *, uint64_t, _QWORD *, unint64_t))&ModifiedContent<>.accessibilityHint<A>(_:), a2);
}

double sub_1002C9B14(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t ObjCClassFromMetadata;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  double result;
  _QWORD v26[2];
  _BYTE v27[16];
  uint64_t v28;
  uint64_t v29;

  v26[1] = a1;
  v1 = type metadata accessor for Locale(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)v26 - v6;
  v8 = type metadata accessor for String.LocalizationValue(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)v26 - v13;
  v15 = String.LocalizationValue.init(stringLiteral:)(0x65736F6C43, 0xE500000000000000);
  static Locale.current.getter(v15);
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v11, v14, v8);
  v16 = type metadata accessor for BundleFinder();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v16);
  v18 = objc_msgSend((id)objc_opt_self(NSBundle), "bundleForClass:", ObjCClassFromMetadata);
  (*(void (**)(char *, char *, uint64_t))(v2 + 16))(v4, v7, v1);
  v19 = String.init(localized:table:bundle:locale:comment:)(v11, 0, 0, v18, v4, "An accessibility title for a close button", 41, 2);
  v21 = v20;
  (*(void (**)(char *, uint64_t))(v2 + 8))(v7, v1);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v8);
  v28 = v19;
  v29 = v21;
  v22 = sub_10004CFD4(&qword_1009D7DE0);
  v23 = sub_10004CFD4((uint64_t *)&unk_1009D8850);
  v24 = sub_100030B34(&qword_1009D7DE8, &qword_1009D7DE0, (uint64_t)&protocol conformance descriptor for _ViewModifier_Content<A>);
  sub_100030B34(&qword_1009D3E98, (uint64_t *)&unk_1009D8850, (uint64_t)&protocol conformance descriptor for Label<A, B>);
  View.accessibilityShowsLargeContentViewer<A>(_:)(sub_1002C9E18, v27, v22, v23, v24);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v21).n128_u64[0];
  return result;
}

uint64_t sub_1002C9D64(uint64_t a1, uint64_t a2)
{
  unint64_t v3;
  _QWORD v5[2];

  v5[0] = a1;
  v5[1] = a2;
  v3 = sub_1001F2108();
  swift_bridgeObjectRetain(a2);
  return Label<>.init<A>(_:systemImage:)(v5, 0x6B72616D78, 0xE500000000000000, &type metadata for String, v3);
}

unint64_t sub_1002C9DD4()
{
  unint64_t result;

  result = qword_1009D7DD8;
  if (!qword_1009D7DD8)
  {
    result = swift_getWitnessTable(&unk_100717A94, &type metadata for BooksAccessibilityHiddenKey);
    atomic_store(result, (unint64_t *)&qword_1009D7DD8);
  }
  return result;
}

uint64_t sub_1002C9E18()
{
  uint64_t v0;

  return sub_1002C9D64(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

ValueMetadata *type metadata accessor for BooksAccessibilityHiddenKey()
{
  return &type metadata for BooksAccessibilityHiddenKey;
}

double destroy for AccessibilityConditionalAction(uint64_t a1)
{
  double result;

  swift_release(*(_QWORD *)(a1 + 8));
  sub_1001F5B28(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_BYTE *)(a1 + 32));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 40));
  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 56)).n128_u64[0];
  return result;
}

uint64_t initializeWithCopy for AccessibilityConditionalAction(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  __int128 v9;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_BYTE *)(a2 + 32);
  swift_retain(v4);
  sub_1001F596C(v5, v6, v7);
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_BYTE *)(a1 + 32) = v7;
  v8 = *(_QWORD *)(a2 + 56);
  v9 = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 40) = v9;
  *(_QWORD *)(a1 + 56) = v8;
  swift_bridgeObjectRetain(v9);
  swift_retain(v8);
  return a1;
}

uint64_t assignWithCopy for AccessibilityConditionalAction(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_retain(v4);
  swift_release(v5);
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 24);
  v8 = *(_BYTE *)(a2 + 32);
  sub_1001F596C(v6, v7, v8);
  v9 = *(_QWORD *)(a1 + 16);
  v10 = *(_QWORD *)(a1 + 24);
  v11 = *(_BYTE *)(a1 + 32);
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 32) = v8;
  sub_1001F5B28(v9, v10, v11);
  v12 = *(_QWORD *)(a2 + 40);
  v13 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 40) = v12;
  swift_bridgeObjectRetain(v12);
  swift_bridgeObjectRelease(v13);
  v15 = *(_QWORD *)(a2 + 48);
  v14 = *(_QWORD *)(a2 + 56);
  v16 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)(a1 + 48) = v15;
  *(_QWORD *)(a1 + 56) = v14;
  swift_retain(v14);
  swift_release(v16);
  return a1;
}

__n128 initializeWithTake for AccessibilityConditionalAction(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for AccessibilityConditionalAction(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;

  v4 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release(v4);
  v5 = *(_BYTE *)(a2 + 32);
  v6 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_BYTE *)(a1 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 32) = v5;
  sub_1001F5B28(v6, v7, v8);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 40));
  v9 = *(_QWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  v10 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)(a1 + 56) = v9;
  swift_release(v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for AccessibilityConditionalAction(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 64))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AccessibilityConditionalAction(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 64) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 64) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for AccessibilityConditionalAction()
{
  return &type metadata for AccessibilityConditionalAction;
}

uint64_t destroy for AccessibilityConditionalHint(uint64_t a1)
{
  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + 16));
}

uint64_t _s5Books28AccessibilityConditionalHintVwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  swift_bridgeObjectRetain(v3);
  return a1;
}

uint64_t assignWithCopy for AccessibilityConditionalHint(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v3;
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRelease(v4);
  return a1;
}

uint64_t assignWithTake for AccessibilityConditionalHint(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  swift_bridgeObjectRelease(v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for AccessibilityConditionalHint(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 24))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AccessibilityConditionalHint(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for AccessibilityConditionalHint()
{
  return &type metadata for AccessibilityConditionalHint;
}

uint64_t getEnumTagSinglePayload for AccessibilityConditionallySelected(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 1 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 1;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 1;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 1;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v8 = (v6 + 2147483646) & 0x7FFFFFFF;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for AccessibilityConditionallySelected(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1002CA304 + 4 * byte_1007178E5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1002CA338 + 4 * byte_1007178E0[v4]))();
}

uint64_t sub_1002CA338(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1002CA340(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1002CA348);
  return result;
}

uint64_t sub_1002CA354(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1002CA35CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1002CA360(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1002CA368(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AccessibilityConditionallySelected()
{
  return &type metadata for AccessibilityConditionallySelected;
}

uint64_t sub_1002CA384()
{
  _QWORD v1[4];

  v1[0] = sub_100030B74(&qword_1009D7DE0);
  v1[1] = sub_100030B74((uint64_t *)&unk_1009D8850);
  v1[2] = sub_100030B34(&qword_1009D7DE8, &qword_1009D7DE0, (uint64_t)&protocol conformance descriptor for _ViewModifier_Content<A>);
  v1[3] = sub_100030B34(&qword_1009D3E98, (uint64_t *)&unk_1009D8850, (uint64_t)&protocol conformance descriptor for Label<A, B>);
  return swift_getOpaqueTypeConformance2(v1, &opaque type descriptor for <<opaque return type of View.accessibilityShowsLargeContentViewer<A>(_:)>>, 1);
}

uint64_t sub_1002CA424(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_10086A88C, 1);
}

uint64_t sub_1002CA434@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t (*v10)(uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unsigned int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;

  v28 = a1;
  v27 = sub_10004CFD4(&qword_1009D7E20);
  __chkstk_darwin(v27);
  v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for AccessibilityTraits(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(uint64_t (**)(uint64_t))v2;
  v11 = *(_QWORD *)(v2 + 16);
  v25 = *(_QWORD *)(v2 + 24);
  v26 = v11;
  v24 = *(unsigned __int8 *)(v2 + 32);
  v12 = *(_QWORD *)(v2 + 40);
  v22 = *(_QWORD *)(v2 + 48);
  v23 = v12;
  v21 = *(_QWORD *)(v2 + 56);
  v29 = _swiftEmptyArrayStorage;
  v14 = sub_100008DB0(&qword_1009D3BA0, v13, (uint64_t)&protocol conformance descriptor for AccessibilityTraits);
  v15 = sub_10004CFD4(&qword_1009D3BA8);
  v16 = sub_100030B34(&qword_1009D3BB0, &qword_1009D3BA8, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v29, v15, v16, v6, v14);
  v17 = sub_10004CFD4(&qword_1009D7E28);
  v18 = sub_100030B34(&qword_1009D7E30, &qword_1009D7E28, (uint64_t)&protocol conformance descriptor for _ViewModifier_Content<A>);
  View.accessibilityAddTraits(_:)(v9, v17, v18);
  v19 = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  result = v10(v19);
  if ((result & 1) != 0)
  {
    ModifiedContent<>.accessibilityAction(named:_:)(v26, v25, v24, v23, v22, v21, v27);
    sub_100010960(a2, &qword_1009D7E20);
    return sub_100025B3C((uint64_t)v5, a2, &qword_1009D7E20);
  }
  return result;
}

uint64_t sub_1002CA638(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_10086A864, 1);
}

uint64_t sub_1002CA648(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_10086A83C, 1);
}

ValueMetadata *type metadata accessor for AccessibilityOptionalHint()
{
  return &type metadata for AccessibilityOptionalHint;
}

ValueMetadata *type metadata accessor for AccessibilityOptionalLabel()
{
  return &type metadata for AccessibilityOptionalLabel;
}

uint64_t _s9DataModelV9SearchBarVwet(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t _s9DataModelV9SearchBarVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for AccessibilityOptionalValue()
{
  return &type metadata for AccessibilityOptionalValue;
}

uint64_t sub_1002CA73C()
{
  return sub_1002CA7A4(&qword_1009D7E38, &qword_1009D7DF0, &qword_1009D7E00, &qword_1009D7DF8);
}

uint64_t sub_1002CA770()
{
  return sub_1002CA7A4(&qword_1009D7E40, &qword_1009D7E08, &qword_1009D7E18, &qword_1009D7E10);
}

uint64_t sub_1002CA7A4(unint64_t *a1, uint64_t *a2, unint64_t *a3, uint64_t *a4)
{
  uint64_t result;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v8 = sub_100030B74(a2);
    sub_100030B34(a3, a4, (uint64_t)&protocol conformance descriptor for _ViewModifier_Content<A>);
    sub_100008DB0(qword_1009D4760, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v8);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1002CA83C()
{
  return sub_1002CA7A4(&qword_1009D7E48, &qword_1009D7E20, &qword_1009D7E30, &qword_1009D7E28);
}

uint64_t sub_1002CA870(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_10086A904, 1);
}

uint64_t sub_1002CA880(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_10086A8DC, 1);
}

uint64_t sub_1002CA890(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_10086A8B4, 1);
}

uint64_t sub_1002CA8A0()
{
  return sub_1002CA7A4(&qword_1009D7E98, &qword_1009D7E50, &qword_1009D7E60, &qword_1009D7E58);
}

uint64_t sub_1002CA8D4()
{
  return sub_1002CA7A4(&qword_1009D7EA0, &qword_1009D7E68, &qword_1009D7E78, &qword_1009D7E70);
}

uint64_t sub_1002CA908()
{
  return sub_1002CA7A4(&qword_1009D7EA8, &qword_1009D7E80, &qword_1009D7E90, &qword_1009D7E88);
}

id sub_1002CA940()
{
  id v0;
  id result;

  v0 = objc_msgSend(objc_allocWithZone((Class)NSDateComponentsFormatter), "init");
  result = objc_msgSend(v0, "setUnitsStyle:", 3);
  qword_100A1E450 = (uint64_t)v0;
  return result;
}

uint64_t destroy for BookReaderView(uint64_t a1)
{
  swift_unknownObjectWeakDestroy(a1);

  swift_release(*(_QWORD *)(a1 + 40));
  swift_release(*(_QWORD *)(a1 + 48));
  swift_release(*(_QWORD *)(a1 + 64));
  swift_release(*(_QWORD *)(a1 + 72));
  swift_weakDestroy(a1 + 80);
  swift_weakDestroy(a1 + 88);
  swift_weakDestroy(a1 + 96);
  swift_unknownObjectWeakDestroy(a1 + 104);
  return swift_weakDestroy(a1 + 120);
}

uint64_t initializeWithCopy for BookReaderView(uint64_t a1, _QWORD *a2)
{
  _QWORD *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  id v13;

  v4 = (_QWORD *)swift_unknownObjectWeakCopyInit(a1, a2);
  v5 = a2[2];
  v4[1] = a2[1];
  v4[2] = v5;
  v6 = (void *)a2[3];
  v7 = a2[4];
  v4[3] = v6;
  v4[4] = v7;
  v8 = a2[5];
  v9 = a2[6];
  v4[5] = v8;
  v4[6] = v9;
  v10 = a2[8];
  v4[7] = a2[7];
  v4[8] = v10;
  v11 = a2[9];
  v12 = v4 + 10;
  v4[9] = v11;
  v13 = v6;
  swift_retain(v8);
  swift_retain(v9);
  swift_retain(v10);
  swift_retain(v11);
  swift_weakCopyInit(v12, a2 + 10);
  swift_weakCopyInit(a1 + 88, a2 + 11);
  swift_weakCopyInit(a1 + 96, a2 + 12);
  swift_unknownObjectWeakCopyInit(a1 + 104, a2 + 13);
  *(_QWORD *)(a1 + 112) = a2[14];
  swift_weakCopyInit(a1 + 120, a2 + 15);
  return a1;
}

_QWORD *assignWithCopy for BookReaderView(_QWORD *a1, _QWORD *a2)
{
  _QWORD *v4;
  void *v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v4 = (_QWORD *)swift_unknownObjectWeakCopyAssign(a1, a2);
  v4[1] = a2[1];
  v4[2] = a2[2];
  v5 = (void *)a2[3];
  v6 = (void *)v4[3];
  v4[3] = v5;
  v7 = v5;

  a1[4] = a2[4];
  v8 = a2[5];
  v9 = a1[5];
  a1[5] = v8;
  swift_retain(v8);
  swift_release(v9);
  v10 = a2[6];
  v11 = a1[6];
  a1[6] = v10;
  swift_retain(v10);
  swift_release(v11);
  a1[7] = a2[7];
  v12 = a2[8];
  v13 = a1[8];
  a1[8] = v12;
  swift_retain(v12);
  swift_release(v13);
  v14 = a2[9];
  v15 = a1[9];
  a1[9] = v14;
  swift_retain(v14);
  swift_release(v15);
  swift_weakCopyAssign(a1 + 10, a2 + 10);
  swift_weakCopyAssign(a1 + 11, a2 + 11);
  swift_weakCopyAssign(a1 + 12, a2 + 12);
  swift_unknownObjectWeakCopyAssign(a1 + 13, a2 + 13);
  a1[14] = a2[14];
  swift_weakCopyAssign(a1 + 15, a2 + 15);
  return a1;
}

uint64_t initializeWithTake for BookReaderView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;

  v4 = swift_unknownObjectWeakTakeInit(a1, a2);
  *(_QWORD *)(v4 + 8) = *(_QWORD *)(a2 + 8);
  v5 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(v4 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(v4 + 32) = v5;
  *(_QWORD *)(v4 + 48) = *(_QWORD *)(a2 + 48);
  *(_OWORD *)(v4 + 56) = *(_OWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_weakTakeInit(v4 + 80, a2 + 80);
  swift_weakTakeInit(a1 + 88, a2 + 88);
  swift_weakTakeInit(a1 + 96, a2 + 96);
  swift_unknownObjectWeakTakeInit(a1 + 104, a2 + 104);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  swift_weakTakeInit(a1 + 120, a2 + 120);
  return a1;
}

_QWORD *assignWithTake for BookReaderView(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = swift_unknownObjectWeakTakeAssign(a1, a2);
  *(_OWORD *)(v4 + 8) = *(_OWORD *)(a2 + 8);
  v5 = *(void **)(v4 + 24);
  *(_QWORD *)(v4 + 24) = *(_QWORD *)(a2 + 24);

  v6 = *(_QWORD *)(a2 + 40);
  v7 = a1[5];
  a1[4] = *(_QWORD *)(a2 + 32);
  a1[5] = v6;
  swift_release(v7);
  v8 = a1[6];
  a1[6] = *(_QWORD *)(a2 + 48);
  swift_release(v8);
  v9 = *(_QWORD *)(a2 + 64);
  v10 = a1[8];
  a1[7] = *(_QWORD *)(a2 + 56);
  a1[8] = v9;
  swift_release(v10);
  v11 = a1[9];
  a1[9] = *(_QWORD *)(a2 + 72);
  swift_release(v11);
  swift_weakTakeAssign(a1 + 10, a2 + 80);
  swift_weakTakeAssign(a1 + 11, a2 + 88);
  swift_weakTakeAssign(a1 + 12, a2 + 96);
  swift_unknownObjectWeakTakeAssign(a1 + 13, a2 + 104);
  a1[14] = *(_QWORD *)(a2 + 112);
  swift_weakTakeAssign(a1 + 15, a2 + 120);
  return a1;
}

uint64_t getEnumTagSinglePayload for BookReaderView(uint64_t a1, int a2)
{
  int v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 128))
    return *(_DWORD *)a1 + 0x80000000;
  if ((*(_QWORD *)(a1 + 8) & 0xF000000000000007) != 0)
    v2 = *(_DWORD *)a1 & 0x7FFFFFFF;
  else
    v2 = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for BookReaderView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 120) = 0;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 128) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      *(_QWORD *)(result + 8) = 1;
      return result;
    }
    *(_BYTE *)(result + 128) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for BookReaderView()
{
  return &type metadata for BookReaderView;
}

uint64_t sub_1002CADF0(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_10086A96C, 1);
}

uint64_t sub_1002CAE00()
{
  uint64_t result;

  result = static Animation.interpolatingSpring(mass:stiffness:damping:initialVelocity:)(1.0, 200.0, 30.0, 0.0);
  qword_100A1E458 = result;
  return result;
}

uint64_t sub_1002CAE30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X8>)
{
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  a6[1] = 0;
  swift_unknownObjectWeakInit(a6);
  swift_weakInit(a6 + 15, 0);
  v12 = a4[14];
  a6[9] = v12;
  sub_10028D0D4(a1, (uint64_t)(a6 + 10));
  a6[1] = a3;
  swift_unknownObjectWeakAssign(a6, a2);
  a6[6] = a4;
  v13 = (void *)a4[13];
  v14 = type metadata accessor for ChromeStyle(0);
  v15 = sub_100008DB0((unint64_t *)&qword_1009D8330, type metadata accessor for ChromeStyle, (uint64_t)&protocol conformance descriptor for ChromeStyle);
  swift_retain(v12);
  swift_retain(a4);
  a6[2] = ObservedObject.init(wrappedValue:)(v13, v14, v15);
  a6[3] = v16;
  swift_weakAssign(a6 + 15);
  v17 = a4[22];
  if (v17)
  {
    v18 = *(_QWORD *)(*(_QWORD *)(v17 + 16) + 32);
    swift_retain(v18);
  }
  else
  {
    v18 = sub_1005C5CEC(0, 0);
  }
  v19 = type metadata accessor for SampleHeaderViewModel(0);
  v20 = sub_100008DB0(&qword_1009D8118, type metadata accessor for SampleHeaderViewModel, (uint64_t)&unk_100732420);
  a6[4] = ObservedObject.init(wrappedValue:)(v18, v19, v20);
  a6[5] = v21;
  v22 = a4[4];
  v23 = type metadata accessor for PublishedBool(0);
  v24 = sub_100008DB0((unint64_t *)&unk_1009F0220, type metadata accessor for PublishedBool, (uint64_t)&unk_100730AFC);
  swift_retain(v22);
  a6[7] = ObservedObject.init(wrappedValue:)(v25, v23, v24);
  a6[8] = v26;
  static Tips.configure(_:)(_swiftEmptyArrayStorage);
  swift_unknownObjectRelease(a2);
  swift_release(a4);
  swift_release(a5);
  return sub_10028D108(a1);
}

uint64_t sub_1002CB018@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t KeyPath;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t OpaqueTypeConformance2;
  uint64_t v38;
  _QWORD *v39;
  _QWORD *v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  _QWORD *v58;
  uint64_t v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  __n128 v68;
  uint64_t v69;
  _QWORD *v70;
  _QWORD *v71;
  uint64_t v72;
  _QWORD *v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  unint64_t v78;
  uint64_t v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  __n128 v85;
  _QWORD *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  BOOL v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  int *v98;
  uint64_t v99;
  uint64_t v100;
  _QWORD *v101;
  uint64_t v102;
  uint64_t *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  _QWORD *v113;
  _QWORD *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  __n128 v119;
  uint64_t v120;
  char *v121;
  void (*v122)(char *, uint64_t, uint64_t, __n128);
  uint64_t v123;
  char *v124;
  void (*v125)(char *, uint64_t);
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  char v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  __int128 v134;
  uint64_t v135;
  id v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t *v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t *v145;
  uint64_t v146;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  void *v153;
  _QWORD *v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  char *v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  __int128 v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  char *v171;
  uint64_t v172;
  char *v173;
  uint64_t v174;
  char *v175;
  uint64_t v176;
  uint64_t v177;
  __int128 v178;
  uint64_t v179;
  char *v180;
  char *v181;
  uint64_t v182;
  __int128 v183;
  __int128 v184;
  uint64_t v185;
  uint64_t v186;
  _BYTE v187[128];
  __int128 v188;
  uint64_t v189;
  char v190;
  uint64_t (*v191)@<X0>(uint64_t@<X8>);
  uint64_t v192;
  uint64_t v193;
  ValueMetadata *v194;
  unint64_t v195;
  void *v196;
  _UNKNOWN **v197;
  uint64_t v198;

  v2 = v1;
  v177 = a1;
  v176 = type metadata accessor for ColorScheme(0);
  v174 = *(_QWORD *)(v176 - 8);
  __chkstk_darwin(v176);
  v173 = (char *)&v150 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v175 = (char *)&v150 - v5;
  v165 = type metadata accessor for ThemeOptionsContainerViewModifier(0);
  __chkstk_darwin(v165);
  *(_QWORD *)&v166 = (char *)&v150 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10004CFD4(&qword_1009D7EB0);
  __chkstk_darwin(v7);
  v154 = (uint64_t *)((char *)&v150 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = sub_10004CFD4(&qword_1009D7EB8);
  v10 = *(_QWORD *)(v9 - 8);
  v155 = v9;
  v156 = v10;
  __chkstk_darwin(v9);
  *(_QWORD *)&v178 = (char *)&v150 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_10004CFD4(&qword_1009D7EC0);
  v13 = *(_QWORD *)(v12 - 8);
  v157 = v12;
  v158 = v13;
  __chkstk_darwin(v12);
  v181 = (char *)&v150 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_10004CFD4(&qword_1009D7EC8);
  v16 = *(_QWORD *)(v15 - 8);
  v160 = v15;
  v161 = v16;
  __chkstk_darwin(v15);
  v180 = (char *)&v150 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_10004CFD4(&qword_1009D7ED0);
  v163 = *(_QWORD *)(v18 - 8);
  v164 = v18;
  __chkstk_darwin(v18);
  v159 = (char *)&v150 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v162 = sub_10004CFD4(&qword_1009D7ED8);
  __chkstk_darwin(v162);
  v182 = (uint64_t)&v150 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v167 = sub_10004CFD4(&qword_1009D7EE0);
  __chkstk_darwin(v167);
  v169 = (uint64_t)&v150 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v168 = sub_10004CFD4(&qword_1009D7EE8);
  __chkstk_darwin(v168);
  v172 = (uint64_t)&v150 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v170 = sub_10004CFD4(&qword_1009D7EF0);
  __chkstk_darwin(v170);
  v171 = (char *)&v150 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1002CFCAC(v1, (uint64_t)&v193);
  v24 = swift_allocObject(&unk_1008FA208, 144, 7);
  sub_1002CFCE4((uint64_t)&v193, v24 + 16);
  v191 = sub_1002CFD18;
  v192 = v24;
  sub_1002CFCAC(v2, (uint64_t)&v193);
  KeyPath = swift_getKeyPath(&unk_100717CE0);
  sub_1002CFCAC(&v193, (uint64_t)&v188);
  v26 = (_QWORD *)swift_allocObject(&unk_1008FA230, 168, 7);
  v26[2] = 0;
  v26[3] = 0;
  sub_1002CFCE4((uint64_t)&v188, (uint64_t)(v26 + 4));
  v26[20] = KeyPath;
  sub_1002CFCAC(&v193, (uint64_t)v187);
  v27 = (_QWORD *)swift_allocObject(&unk_1008FA258, 168, 7);
  v27[2] = 0;
  v27[3] = 0;
  sub_1002CFCE4((uint64_t)v187, (uint64_t)(v27 + 4));
  v27[20] = KeyPath;
  swift_retain(KeyPath);
  v28 = sub_10004CFD4(&qword_1009D7EF8);
  Binding.init(get:set:)(&v183, sub_1002D0474, v26, sub_1002D047C, v27, v28);
  sub_1002D0480((uint64_t)&v193);
  v188 = v183;
  v189 = v184;
  v190 = BYTE8(v184);
  sub_1002CFCAC(v2, (uint64_t)&v193);
  v29 = swift_allocObject(&unk_1008FA280, 144, 7);
  sub_1002CFCE4((uint64_t)&v193, v29 + 16);
  v30 = sub_10004CFD4(&qword_1009D7F00);
  v151 = v30;
  v31 = sub_10004CFD4(&qword_1009D7F08);
  v152 = v31;
  v32 = sub_100030B34(&qword_1009D7F10, &qword_1009D7F00, (uint64_t)&protocol conformance descriptor for GeometryReader<A>);
  v153 = (void *)v32;
  v33 = sub_1002D04B8();
  v34 = sub_100030B74(&qword_1009D7F20);
  v35 = type metadata accessor for PagePresentationSizing(255);
  v179 = v35;
  v36 = sub_1002D04FC();
  v193 = v34;
  v194 = (ValueMetadata *)v35;
  v195 = v36;
  v196 = &protocol witness table for PagePresentationSizing;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v193, &opaque type descriptor for <<opaque return type of View.presentationSizing<A>(_:)>>, 1);
  View.sheet<A, B>(item:onDismiss:content:)(&v188, 0, 0, sub_1002D04B0, v29, v30, &type metadata for OverlayViewModel.BookmarkNotes, v31, v32, v33, OpaqueTypeConformance2);
  swift_release(v29);
  swift_release(v188);
  swift_release(*((_QWORD *)&v188 + 1));
  swift_release(v189);
  swift_release(v192);
  sub_1002CFCAC(v2, (uint64_t)&v193);
  v38 = swift_getKeyPath(&unk_100717D08);
  sub_1002CFCAC(&v193, (uint64_t)&v188);
  v39 = (_QWORD *)swift_allocObject(&unk_1008FA2A8, 168, 7);
  v39[2] = 0;
  v39[3] = 0;
  sub_1002CFCE4((uint64_t)&v188, (uint64_t)(v39 + 4));
  v39[20] = v38;
  sub_1002CFCAC(&v193, (uint64_t)v187);
  v40 = (_QWORD *)swift_allocObject(&unk_1008FA2D0, 168, 7);
  v40[2] = 0;
  v40[3] = 0;
  sub_1002CFCE4((uint64_t)v187, (uint64_t)(v40 + 4));
  v40[20] = v38;
  swift_retain(v38);
  v41 = sub_10004CFD4(&qword_1009D7F48);
  v42 = v154;
  Binding.init(get:set:)(v154, sub_1002D0670, v39, sub_1002D06CC, v40, v41);
  sub_1002D0480((uint64_t)&v193);
  sub_1002CFCAC(v2, (uint64_t)&v193);
  v43 = swift_allocObject(&unk_1008FA2F8, 144, 7);
  sub_1002CFCE4((uint64_t)&v193, v43 + 16);
  v44 = type metadata accessor for OverlayViewModel.Search(0);
  v45 = sub_10004CFD4(&qword_1009D7F50);
  v150 = v45;
  v193 = v151;
  v194 = &type metadata for OverlayViewModel.BookmarkNotes;
  v195 = v152;
  v196 = v153;
  v197 = (_UNKNOWN **)v33;
  v198 = OpaqueTypeConformance2;
  v46 = swift_getOpaqueTypeConformance2(&v193, &opaque type descriptor for <<opaque return type of View.sheet<A, B>(item:onDismiss:content:)>>, 1);
  v153 = (void *)v46;
  v47 = sub_100008DB0(&qword_1009D7F58, type metadata accessor for OverlayViewModel.Search, (uint64_t)&unk_100722160);
  v48 = sub_100030B74(&qword_1009D7F60);
  v49 = sub_1002D06E8();
  v193 = v48;
  v194 = (ValueMetadata *)v179;
  v195 = v49;
  v196 = &protocol witness table for PagePresentationSizing;
  v50 = swift_getOpaqueTypeConformance2(&v193, &opaque type descriptor for <<opaque return type of View.presentationSizing<A>(_:)>>, 1);
  v148 = v46;
  v51 = (uint64_t)v42;
  v52 = v42;
  v53 = v155;
  v54 = v178;
  View.sheet<A, B>(item:onDismiss:content:)(v52, 0, 0, sub_1002D06E0, v43, v155, v44, v45, v148, v47, v50);
  swift_release(v43);
  sub_100010960(v51, &qword_1009D7EB0);
  v55 = v53;
  (*(void (**)(uint64_t, uint64_t))(v156 + 8))(v54, v53);
  sub_1002CFCAC(v2, (uint64_t)&v193);
  v56 = swift_getKeyPath(&unk_100717D30);
  sub_1002CFCAC(&v193, (uint64_t)&v188);
  v57 = (_QWORD *)swift_allocObject(&unk_1008FA320, 168, 7);
  v57[2] = 0;
  v57[3] = 0;
  sub_1002CFCE4((uint64_t)&v188, (uint64_t)(v57 + 4));
  v57[20] = v56;
  sub_1002CFCAC(&v193, (uint64_t)v187);
  v58 = (_QWORD *)swift_allocObject(&unk_1008FA348, 168, 7);
  v58[2] = 0;
  v58[3] = 0;
  sub_1002CFCE4((uint64_t)v187, (uint64_t)(v58 + 4));
  v58[20] = v56;
  swift_retain(v56);
  v59 = sub_10004CFD4(&qword_1009D7F88);
  Binding.init(get:set:)(&v183, sub_1002D0888, v57, sub_1002D08E8, v58, v59);
  sub_1002D0480((uint64_t)&v193);
  v188 = v183;
  v189 = v184;
  v60 = v2;
  sub_1002CFCAC(v2, (uint64_t)&v193);
  v61 = swift_allocObject(&unk_1008FA370, 144, 7);
  sub_1002CFCE4((uint64_t)&v193, v61 + 16);
  v62 = sub_10004CFD4(&qword_1009D7F90);
  v193 = v55;
  v194 = (ValueMetadata *)v44;
  v195 = v150;
  v196 = v153;
  v197 = (_UNKNOWN **)v47;
  v198 = v50;
  v63 = swift_getOpaqueTypeConformance2(&v193, &opaque type descriptor for <<opaque return type of View.sheet<A, B>(item:onDismiss:content:)>>, 1);
  v64 = sub_1002D0938();
  v65 = sub_1001F5558(&qword_1009D7FA0, &qword_1009D7F90, (void (*)(void))sub_1002D097C);
  v66 = v181;
  v67 = v157;
  View.sheet<A, B>(item:drawsBackground:content:)(&v188, 1, sub_1002D0930, v61, v157, &type metadata for OverlayViewModel.Share, v62, v63, v64, v65);
  swift_release(v61);
  swift_release(v188);
  swift_release(*((_QWORD *)&v188 + 1));
  v68 = swift_release(v189);
  (*(void (**)(char *, uint64_t, __n128))(v158 + 8))(v66, v67, v68);
  sub_1002CFCAC(v60, (uint64_t)&v193);
  v69 = swift_getKeyPath(&unk_100717D58);
  sub_1002CFCAC(&v193, (uint64_t)&v188);
  v70 = (_QWORD *)swift_allocObject(&unk_1008FA398, 168, 7);
  v70[2] = 0;
  v70[3] = 0;
  sub_1002CFCE4((uint64_t)&v188, (uint64_t)(v70 + 4));
  v70[20] = v69;
  sub_1002CFCAC(&v193, (uint64_t)v187);
  v71 = (_QWORD *)swift_allocObject(&unk_1008FA3C0, 168, 7);
  v71[2] = 0;
  v71[3] = 0;
  sub_1002CFCE4((uint64_t)v187, (uint64_t)(v71 + 4));
  v71[20] = v69;
  swift_retain(v69);
  v72 = sub_10004CFD4(&qword_1009D7FD0);
  Binding.init(get:set:)(&v183, sub_1002D0AFC, v70, sub_1002D047C, v71, v72);
  sub_1002D0480((uint64_t)&v193);
  v188 = v183;
  v189 = v184;
  v190 = BYTE8(v184);
  v73 = v60;
  sub_1002CFCAC(v60, (uint64_t)&v193);
  v74 = swift_allocObject(&unk_1008FA3E8, 144, 7);
  sub_1002CFCE4((uint64_t)&v193, v74 + 16);
  v75 = sub_10004CFD4(&qword_1009D7FD8);
  v193 = v67;
  v194 = &type metadata for OverlayViewModel.Share;
  v195 = v62;
  v196 = (void *)v63;
  v197 = (_UNKNOWN **)v64;
  v198 = v65;
  v76 = v159;
  v77 = swift_getOpaqueTypeConformance2(&v193, &opaque type descriptor for <<opaque return type of View.sheet<A, B>(item:drawsBackground:content:)>>, 1);
  v78 = sub_1002D0BC4();
  v79 = sub_100030B74(&qword_1009D7FE8);
  v80 = sub_1002D0C08();
  v193 = v79;
  v194 = (ValueMetadata *)v179;
  v195 = v80;
  v196 = &protocol witness table for PagePresentationSizing;
  v81 = swift_getOpaqueTypeConformance2(&v193, &opaque type descriptor for <<opaque return type of View.presentationSizing<A>(_:)>>, 1);
  v149 = v77;
  v82 = v160;
  v83 = v75;
  v84 = v180;
  View.sheet<A, B>(item:onDismiss:content:)(&v188, 0, 0, sub_1002D0BBC, v74, v160, &type metadata for OverlayViewModel.TOC, v83, v149, v78, v81);
  swift_release(v74);
  swift_release(v188);
  swift_release(*((_QWORD *)&v188 + 1));
  v85 = swift_release(v189);
  (*(void (**)(char *, uint64_t, __n128))(v161 + 8))(v84, v82, v85);
  v86 = v73;
  v87 = sub_1002CDDF8();
  v91 = v87;
  if (v87)
    sub_1002D0E4C(v87, v88, v89, v90);
  v92 = v91 == 0;
  v93 = *sub_10003F198((_QWORD *)(v73[6] + 184), *(_QWORD *)(v73[6] + 208));
  v196 = (void *)type metadata accessor for ThemeOptionsContainerPresenter();
  v197 = &off_100906730;
  v193 = v93;
  v94 = *(_QWORD *)(v93 + 32);
  v95 = type metadata accessor for ChromeStyle(0);
  v180 = (char *)v95;
  v96 = sub_100008DB0((unint64_t *)&qword_1009D8330, type metadata accessor for ChromeStyle, (uint64_t)&protocol conformance descriptor for ChromeStyle);
  v181 = (char *)v96;
  swift_retain(v93);
  swift_retain(v94);
  EnvironmentObject.init()(v95, v96);
  v98 = (int *)v165;
  v97 = v166;
  *(_QWORD *)v166 = v99;
  *(_QWORD *)(v97 + 8) = v100;
  v101 = (_QWORD *)(v97 + v98[5]);
  *v101 = swift_getKeyPath(&unk_100717D80);
  v102 = sub_10004CFD4((uint64_t *)&unk_1009D8200);
  swift_storeEnumTagMultiPayload(v101, v102, 0);
  *(_BYTE *)(v97 + v98[6]) = v92;
  sub_10002E418((uint64_t)&v193, v97 + v98[7]);
  v103 = (uint64_t *)(v97 + v98[8]);
  v104 = type metadata accessor for ThemeOptionsContainerViewModel(0);
  v105 = sub_100008DB0(&qword_1009D8010, type metadata accessor for ThemeOptionsContainerViewModel, (uint64_t)&unk_100730820);
  v106 = ObservedObject.init(wrappedValue:)(v94, v104, v105);
  v108 = v107;
  _s5Books15CurrentPageViewVwxx_0(&v193);
  *v103 = v106;
  v103[1] = v108;
  v110 = v163;
  v109 = v164;
  v111 = v182;
  (*(void (**)(uint64_t, char *, uint64_t))(v163 + 16))(v182, v76, v164);
  sub_10002C960(v97, v111 + *(int *)(v162 + 36), type metadata accessor for ThemeOptionsContainerViewModifier);
  (*(void (**)(char *, uint64_t))(v110 + 8))(v76, v109);
  sub_1002CFCAC(v73, (uint64_t)&v193);
  v112 = swift_getKeyPath(&unk_100717DB0);
  sub_1002CFCAC(&v193, (uint64_t)&v188);
  v113 = (_QWORD *)swift_allocObject(&unk_1008FA410, 168, 7);
  v113[2] = 0;
  v113[3] = 0;
  sub_1002CFCE4((uint64_t)&v188, (uint64_t)(v113 + 4));
  v113[20] = v112;
  sub_1002CFCAC(&v193, (uint64_t)v187);
  v114 = (_QWORD *)swift_allocObject(&unk_1008FA438, 168, 7);
  v114[2] = 0;
  v114[3] = 0;
  sub_1002CFCE4((uint64_t)v187, (uint64_t)(v114 + 4));
  v114[20] = v112;
  swift_retain(v112);
  v115 = sub_10004CFD4(&qword_1009D8018);
  Binding.init(get:set:)(&v183, sub_1002D0D90, v113, sub_1002D0E28, v114, v115);
  sub_1002D0480((uint64_t)&v193);
  v178 = v183;
  v166 = v184;
  v164 = v186;
  v165 = v185;
  v116 = v73[6];
  v117 = swift_getKeyPath(&unk_100717DD8);
  v193 = v116;
  v179 = sub_100008DB0((unint64_t *)&qword_1009E4C90, type metadata accessor for BookReaderViewModel, (uint64_t)&unk_10072A198);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v193, v117, v179);
  swift_release(v117);
  v118 = v116 + OBJC_IVAR____TtC5Books19BookReaderViewModel__themeColorScheme;
  v119 = swift_beginAccess(v116 + OBJC_IVAR____TtC5Books19BookReaderViewModel__themeColorScheme, &v188, 0, 0);
  v120 = v174;
  v121 = v175;
  v122 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v174 + 16);
  v123 = v176;
  v122(v175, v118, v176, v119);
  v124 = v173;
  (*(void (**)(char *, _QWORD, uint64_t))(v120 + 104))(v173, enum case for ColorScheme.dark(_:), v123);
  LOBYTE(v118) = static ColorScheme.== infix(_:_:)(v121, v124);
  v125 = *(void (**)(char *, uint64_t))(v120 + 8);
  v125(v124, v123);
  if ((v118 & 1) != 0)
    v126 = 842150655;
  else
    v126 = 4109694207;
  v127 = Color.init(rgbaHex:)(v126);
  v125(v121, v123);
  v128 = *(_QWORD *)(v86[6] + OBJC_IVAR____TtC5Books19BookReaderViewModel_overlayViewModel);
  swift_retain(v128);
  v129 = sub_1003F4F20();
  swift_release(v128);
  sub_1002CFCAC(v86, (uint64_t)&v193);
  v130 = swift_allocObject(&unk_1008FA460, 144, 7);
  sub_1002CFCE4((uint64_t)&v193, v130 + 16);
  v131 = v182;
  v132 = v169;
  sub_10000B5E4(v182, v169, &qword_1009D7ED8);
  v133 = v132 + *(int *)(v167 + 36);
  v134 = v166;
  *(_OWORD *)v133 = v178;
  *(_OWORD *)(v133 + 16) = v134;
  v135 = v164;
  *(_QWORD *)(v133 + 32) = v165;
  *(_QWORD *)(v133 + 40) = v135;
  *(_QWORD *)(v133 + 48) = v127;
  *(_BYTE *)(v133 + 56) = (v129 & 1) == 0;
  *(_QWORD *)(v133 + 64) = sub_1002D0E44;
  *(_QWORD *)(v133 + 72) = v130;
  sub_100010960(v131, &qword_1009D7ED8);
  v136 = *(id *)(v86[6] + 104);
  v137 = static ObservableObject.environmentStore.getter(v180, v181);
  v138 = v172;
  sub_10000B5E4(v132, v172, &qword_1009D7EE0);
  v139 = (uint64_t *)(v138 + *(int *)(v168 + 36));
  *v139 = v137;
  v139[1] = (uint64_t)v136;
  sub_100010960(v132, &qword_1009D7EE0);
  v140 = swift_getKeyPath(&unk_100717D80);
  v141 = v86[6];
  v142 = swift_getKeyPath(&unk_100717DD8);
  v193 = v141;
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v193, v142, v179);
  swift_release(v142);
  v143 = v141 + OBJC_IVAR____TtC5Books19BookReaderViewModel__themeColorScheme;
  swift_beginAccess(v141 + OBJC_IVAR____TtC5Books19BookReaderViewModel__themeColorScheme, &v193, 0, 0);
  v144 = (uint64_t)v171;
  v145 = (uint64_t *)&v171[*(int *)(v170 + 36)];
  v146 = sub_10004CFD4(&qword_1009D88E0);
  ((void (*)(char *, uint64_t, uint64_t))v122)((char *)v145 + *(int *)(v146 + 28), v143, v123);
  *v145 = v140;
  sub_100025B3C(v138, v144, &qword_1009D7EE8);
  return sub_100025B3C(v144, v177, &qword_1009D7EF0);
}

uint64_t sub_1002CC160@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;

  v48 = a2;
  v3 = type metadata accessor for AppEntityVisualState(0);
  v4 = *(_QWORD *)(v3 - 8);
  v46 = v3;
  v47 = v4;
  __chkstk_darwin(v3);
  v45 = (char *)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10004CFD4(&qword_1009D8038);
  __chkstk_darwin(v6);
  v8 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10004CFD4(&qword_1009D8040);
  __chkstk_darwin(v9);
  v11 = (char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_10004CFD4(&qword_1009D8048);
  v44 = v12;
  __chkstk_darwin(v12);
  v14 = (char *)&v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1002CC4E0((uint64_t)v8);
  sub_10000B5E4((uint64_t)v8, (uint64_t)v11, &qword_1009D8038);
  v11[*(int *)(v9 + 36)] = 1;
  sub_100010960((uint64_t)v8, &qword_1009D8038);
  LOBYTE(v9) = static Edge.Set.all.getter(v15);
  sub_10000B5E4((uint64_t)v11, (uint64_t)v14, &qword_1009D8040);
  v14[*(int *)(v12 + 36)] = v9;
  sub_100010960((uint64_t)v11, &qword_1009D8040);
  v16 = *(_QWORD *)(a1 + 48) + OBJC_IVAR____TtC5Books19BookReaderViewModel_bookAppEntity;
  v17 = *(_QWORD *)(v16 + 8);
  v18 = *(_BYTE *)(v16 + 16);
  v19 = *(_QWORD *)(v16 + 24);
  v20 = *(_QWORD *)(v16 + 32);
  v21 = *(_QWORD *)(v16 + 40);
  v22 = *(_QWORD *)(v16 + 48);
  v23 = *(_QWORD *)(v16 + 56);
  v24 = *(_QWORD *)(v16 + 64);
  v26 = *(_QWORD *)(v16 + 72);
  v25 = *(_QWORD *)(v16 + 80);
  v27 = *(_QWORD *)(v16 + 88);
  v50 = *(_QWORD *)v16;
  v51 = v17;
  v52 = v18;
  v53 = v19;
  v54 = v20;
  v55 = v21;
  v56 = v22;
  v57 = v23;
  v58 = v24;
  v59 = v26;
  v60 = v25;
  v61 = v27;
  v49 = _swiftEmptyArrayStorage;
  v43 = sub_100008DB0(&qword_1009D8050, (uint64_t (*)(uint64_t))&type metadata accessor for AppEntityVisualState, (uint64_t)&protocol conformance descriptor for AppEntityVisualState);
  swift_bridgeObjectRetain(v17);
  swift_retain(v19);
  swift_retain(v20);
  swift_retain(v21);
  swift_retain(v22);
  swift_retain(v23);
  swift_retain(v24);
  swift_retain(v26);
  swift_bridgeObjectRetain(v27);
  v28 = sub_10004CFD4(&qword_1009D8058);
  v29 = sub_100030B34(&qword_1009D8060, &qword_1009D8058, (uint64_t)&protocol conformance descriptor for [A]);
  v31 = v45;
  v30 = v46;
  dispatch thunk of SetAlgebra.init<A>(_:)(&v49, v28, v29, v46, v43);
  v32 = sub_1001F5558(&qword_1009D8068, &qword_1009D8048, (void (*)(void))sub_1002D10A8);
  v33 = sub_1001F8840();
  View.appEntity<A>(_:state:)(&v50, v31, v44, &type metadata for BookAppEntity, v32, v33);
  (*(void (**)(char *, uint64_t))(v47 + 8))(v31, v30);
  v34 = v51;
  v35 = v53;
  v36 = v54;
  v37 = v55;
  v38 = v56;
  v39 = v57;
  v40 = v58;
  v41 = v61;
  swift_release(v59);
  swift_release(v40);
  swift_release(v39);
  swift_release(v38);
  swift_release(v37);
  swift_release(v36);
  swift_release(v35);
  swift_bridgeObjectRelease(v34);
  swift_bridgeObjectRelease(v41);
  return sub_100010960((uint64_t)v14, &qword_1009D8048);
}

uint64_t sub_1002CC4E0@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t ObjectType;
  double v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _OWORD *v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  char v25;
  char v26;
  _OWORD v27[7];

  v2 = v1;
  v4 = sub_10004CFD4(&qword_1009D8088);
  __chkstk_darwin(v4);
  v6 = (_QWORD *)((char *)v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = v1[6];
  v8 = *(_QWORD *)(v7 + 40);
  v9 = *(_QWORD *)(v7 + 48);
  ObjectType = swift_getObjectType();
  swift_unknownObjectRetain(v8);
  v11 = dispatch thunk of BookContentHostEnvironmentProviding.layoutSize.getter(ObjectType, v9);
  v13 = v12;
  v14 = swift_unknownObjectRelease(v8);
  *v6 = static Alignment.center.getter(v14);
  v6[1] = v15;
  v16 = sub_10004CFD4(&qword_1009D8098);
  sub_1002CE3C4(v2, (_QWORD *)((char *)v6 + *(int *)(v16 + 44)), v11);
  v18 = static Alignment.center.getter(v17);
  v26 = 1;
  v25 = 1;
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(v27, 0, 1, 0, 1, 0, 1, v13, 0, 0, v25, 0, v26, v18, v19);
  sub_10000B5E4((uint64_t)v6, a1, &qword_1009D8088);
  v20 = (_OWORD *)(a1 + *(int *)(sub_10004CFD4(&qword_1009D8038) + 36));
  v21 = v27[5];
  v20[4] = v27[4];
  v20[5] = v21;
  v20[6] = v27[6];
  v22 = v27[1];
  *v20 = v27[0];
  v20[1] = v22;
  v23 = v27[3];
  v20[2] = v27[2];
  v20[3] = v23;
  return sub_100010960((uint64_t)v6, &qword_1009D8088);
}

uint64_t sub_1002CC6B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t KeyPath;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v15[3];

  v1 = sub_10004CFD4(&qword_1009EFD70);
  __chkstk_darwin(v1);
  v3 = (char *)&v15[-1] - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v6 = (char *)&v15[-1] - v5;
  v7 = *(_QWORD *)(v0 + 48);
  KeyPath = swift_getKeyPath(&unk_100717E00);
  v15[0] = v7;
  v9 = sub_100008DB0((unint64_t *)&qword_1009E4C90, type metadata accessor for BookReaderViewModel, (uint64_t)&unk_10072A198);
  ObservationRegistrar.access<A, B>(_:keyPath:)(v15, KeyPath, v9);
  swift_release(KeyPath);
  v10 = v7 + OBJC_IVAR____TtC5Books19BookReaderViewModel__overlay;
  swift_beginAccess(v7 + OBJC_IVAR____TtC5Books19BookReaderViewModel__overlay, v15, 0, 0);
  sub_10000B5E4(v10, (uint64_t)v6, &qword_1009EFD70);
  v11 = type metadata accessor for OverlayViewModel.Overlay(0);
  v12 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(v6, 1, v11) != 1)
  {
    sub_10000B5E4((uint64_t)v6, (uint64_t)v3, &qword_1009EFD70);
    if (swift_getEnumCaseMultiPayload(v3, v11))
    {
      sub_10002C8F0((uint64_t)v3, type metadata accessor for OverlayViewModel.Overlay);
LABEL_6:
      v12 = 0;
      goto LABEL_7;
    }
    v12 = *(_QWORD *)v3;
    if ((v3[8] & 1) != 0)
    {
      swift_release(*(_QWORD *)v3);
      goto LABEL_6;
    }
  }
LABEL_7:
  sub_100010960((uint64_t)v6, &qword_1009EFD70);
  return v12;
}

void sub_1002CC85C(_QWORD *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t Strong;
  uint64_t v5;

  if (!*a1)
  {
    v3 = sub_1002CC6B4();
    swift_release(v3);
    if (v3)
    {
      Strong = swift_unknownObjectWeakLoadStrong(a2);
      if (Strong)
      {
        v5 = Strong;
        if (sub_1005E01D0() != 2)
          sub_1005E0A48();
        swift_unknownObjectRelease(v5);
      }
    }
  }
}

uint64_t sub_1002CC8C4@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t KeyPath;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v27;
  _QWORD v28[10];
  _BYTE v29[80];
  uint64_t v30;
  id v31;

  v27 = a2;
  v3 = type metadata accessor for PagePresentationSizing(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v28[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10004CFD4(&qword_1009EFEC0);
  __chkstk_darwin(v7);
  v9 = (char *)&v28[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_10004CFD4(&qword_1009D7F20);
  __chkstk_darwin(v10);
  v12 = (char *)&v28[-1] - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1006866C8((uint64_t)v28);
  v13 = *(void **)(a1 + 24);
  v14 = type metadata accessor for ChromeStyle(0);
  v15 = sub_100008DB0((unint64_t *)&qword_1009D8330, type metadata accessor for ChromeStyle, (uint64_t)&protocol conformance descriptor for ChromeStyle);
  v16 = v13;
  v17 = static ObservableObject.environmentStore.getter(v14, v15);
  sub_1002D1038((uint64_t)v28, (uint64_t)v29);
  v30 = v17;
  v31 = v16;
  sub_1002D1074((uint64_t)v28);
  v18 = *(_QWORD *)(a1 + 48);
  KeyPath = swift_getKeyPath(&unk_100717DD8);
  v28[0] = v18;
  v20 = sub_100008DB0((unint64_t *)&qword_1009E4C90, type metadata accessor for BookReaderViewModel, (uint64_t)&unk_10072A198);
  ObservationRegistrar.access<A, B>(_:keyPath:)(v28, KeyPath, v20);
  swift_release(KeyPath);
  v21 = v18 + OBJC_IVAR____TtC5Books19BookReaderViewModel__themeColorScheme;
  swift_beginAccess(v18 + OBJC_IVAR____TtC5Books19BookReaderViewModel__themeColorScheme, v28, 0, 0);
  v22 = type metadata accessor for ColorScheme(0);
  v23 = *(_QWORD *)(v22 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v23 + 16))(v9, v21, v22);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v9, 0, 1, v22);
  sub_10000B5E4((uint64_t)v9, (uint64_t)&v12[*(int *)(v10 + 36)], &qword_1009EFEC0);
  sub_10000B5E4((uint64_t)v29, (uint64_t)v12, &qword_1009D7F38);
  sub_100010960((uint64_t)v9, &qword_1009EFEC0);
  v24 = sub_100010960((uint64_t)v29, &qword_1009D7F38);
  static PresentationSizing<>.page.getter(v24);
  v25 = sub_1002D04FC();
  View.presentationSizing<A>(_:)(v6, v10, v3, v25, &protocol witness table for PagePresentationSizing);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return sub_100010960((uint64_t)v12, &qword_1009D7F20);
}

uint64_t sub_1002CCB84@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t KeyPath;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t (*v19)(uint64_t);
  uint64_t v20;
  _QWORD v23[3];

  v3 = type metadata accessor for OverlayViewModel.Search(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v23[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10004CFD4(&qword_1009EFD70);
  __chkstk_darwin(v7);
  v9 = (char *)&v23[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v23[-1] - v11;
  v13 = *(_QWORD *)(v1 + 48);
  KeyPath = swift_getKeyPath(&unk_100717E00);
  v23[0] = v13;
  v15 = sub_100008DB0((unint64_t *)&qword_1009E4C90, type metadata accessor for BookReaderViewModel, (uint64_t)&unk_10072A198);
  ObservationRegistrar.access<A, B>(_:keyPath:)(v23, KeyPath, v15);
  swift_release(KeyPath);
  v16 = v13 + OBJC_IVAR____TtC5Books19BookReaderViewModel__overlay;
  swift_beginAccess(v13 + OBJC_IVAR____TtC5Books19BookReaderViewModel__overlay, v23, 0, 0);
  sub_10000B5E4(v16, (uint64_t)v12, &qword_1009EFD70);
  v17 = type metadata accessor for OverlayViewModel.Overlay(0);
  v18 = 1;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 48))(v12, 1, v17) != 1)
  {
    sub_10000B5E4((uint64_t)v12, (uint64_t)v9, &qword_1009EFD70);
    if (swift_getEnumCaseMultiPayload(v9, v17) == 2)
    {
      sub_10002C960((uint64_t)v9, (uint64_t)v6, type metadata accessor for OverlayViewModel.Search);
      if ((v6[*(int *)(v3 + 20)] & 1) == 0)
      {
        sub_10002C960((uint64_t)v6, a1, type metadata accessor for OverlayViewModel.Search);
        v18 = 0;
        goto LABEL_8;
      }
      v19 = type metadata accessor for OverlayViewModel.Search;
      v20 = (uint64_t)v6;
    }
    else
    {
      v19 = type metadata accessor for OverlayViewModel.Overlay;
      v20 = (uint64_t)v9;
    }
    sub_10002C8F0(v20, v19);
  }
LABEL_8:
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 56))(a1, v18, 1, v3);
  return sub_100010960((uint64_t)v12, &qword_1009EFD70);
}

uint64_t sub_1002CCDBC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  uint64_t Strong;
  uint64_t v14;
  uint64_t v16;

  v4 = sub_10004CFD4(&qword_1009D7F48);
  __chkstk_darwin(v4);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v16 - v8;
  sub_10000B5E4(a1, (uint64_t)&v16 - v8, &qword_1009D7F48);
  v10 = type metadata accessor for OverlayViewModel.Search(0);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48);
  if (v11(v9, 1, v10) == 1)
  {
    sub_1002CCB84((uint64_t)v6);
    v12 = v11(v6, 1, v10);
    sub_100010960((uint64_t)v6, &qword_1009D7F48);
    if (v12 != 1)
    {
      Strong = swift_unknownObjectWeakLoadStrong(a2);
      if (Strong)
      {
        v14 = Strong;
        sub_1005E0F70();
        swift_unknownObjectRelease(v14);
      }
    }
  }
  return sub_100010960((uint64_t)v9, &qword_1009D7F48);
}

uint64_t sub_1002CCEE4@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t KeyPath;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v28;
  _QWORD v29[8];
  _BYTE v30[64];
  uint64_t v31;
  id v32;

  v28 = a2;
  v3 = type metadata accessor for PagePresentationSizing(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v29[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10004CFD4(&qword_1009EFEC0);
  __chkstk_darwin(v7);
  v9 = (char *)&v29[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_10004CFD4(&qword_1009D7F60);
  __chkstk_darwin(v10);
  v12 = (char *)&v29[-1] - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_10004CFD4(&qword_1009EFD60);
  SearchModule.view.getter(v29, v13);
  v14 = *(void **)(a1 + 24);
  v15 = type metadata accessor for ChromeStyle(0);
  v16 = sub_100008DB0((unint64_t *)&qword_1009D8330, type metadata accessor for ChromeStyle, (uint64_t)&protocol conformance descriptor for ChromeStyle);
  v17 = v14;
  v18 = static ObservableObject.environmentStore.getter(v15, v16);
  sub_1002D0FC8((uint64_t)v29, (uint64_t)v30);
  v31 = v18;
  v32 = v17;
  sub_1002D1004(v29);
  v19 = *(_QWORD *)(a1 + 48);
  KeyPath = swift_getKeyPath(&unk_100717DD8);
  v29[0] = v19;
  v21 = sub_100008DB0((unint64_t *)&qword_1009E4C90, type metadata accessor for BookReaderViewModel, (uint64_t)&unk_10072A198);
  ObservationRegistrar.access<A, B>(_:keyPath:)(v29, KeyPath, v21);
  swift_release(KeyPath);
  v22 = v19 + OBJC_IVAR____TtC5Books19BookReaderViewModel__themeColorScheme;
  swift_beginAccess(v19 + OBJC_IVAR____TtC5Books19BookReaderViewModel__themeColorScheme, v29, 0, 0);
  v23 = type metadata accessor for ColorScheme(0);
  v24 = *(_QWORD *)(v23 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v24 + 16))(v9, v22, v23);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v9, 0, 1, v23);
  sub_10000B5E4((uint64_t)v9, (uint64_t)&v12[*(int *)(v10 + 36)], &qword_1009EFEC0);
  sub_10000B5E4((uint64_t)v30, (uint64_t)v12, &qword_1009D7F78);
  sub_100010960((uint64_t)v9, &qword_1009EFEC0);
  v25 = sub_100010960((uint64_t)v30, &qword_1009D7F78);
  static PresentationSizing<>.page.getter(v25);
  v26 = sub_1002D06E8();
  View.presentationSizing<A>(_:)(v6, v10, v3, v26, &protocol witness table for PagePresentationSizing);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return sub_100010960((uint64_t)v12, &qword_1009D7F60);
}

uint64_t sub_1002CD1A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t KeyPath;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v15[3];

  v1 = sub_10004CFD4(&qword_1009EFD70);
  __chkstk_darwin(v1);
  v3 = (_QWORD *)((char *)&v15[-1] - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v4);
  v6 = (char *)&v15[-1] - v5;
  v7 = *(_QWORD *)(v0 + 48);
  KeyPath = swift_getKeyPath(&unk_100717E00);
  v15[0] = v7;
  v9 = sub_100008DB0((unint64_t *)&qword_1009E4C90, type metadata accessor for BookReaderViewModel, (uint64_t)&unk_10072A198);
  ObservationRegistrar.access<A, B>(_:keyPath:)(v15, KeyPath, v9);
  swift_release(KeyPath);
  v10 = v7 + OBJC_IVAR____TtC5Books19BookReaderViewModel__overlay;
  swift_beginAccess(v7 + OBJC_IVAR____TtC5Books19BookReaderViewModel__overlay, v15, 0, 0);
  sub_10000B5E4(v10, (uint64_t)v6, &qword_1009EFD70);
  v11 = type metadata accessor for OverlayViewModel.Overlay(0);
  v12 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(v6, 1, v11) != 1)
  {
    sub_10000B5E4((uint64_t)v6, (uint64_t)v3, &qword_1009EFD70);
    if (swift_getEnumCaseMultiPayload(v3, v11) == 3)
    {
      v12 = *v3;
    }
    else
    {
      sub_10002C8F0((uint64_t)v3, type metadata accessor for OverlayViewModel.Overlay);
      v12 = 0;
    }
  }
  sub_100010960((uint64_t)v6, &qword_1009EFD70);
  return v12;
}

void sub_1002CD338(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t KeyPath;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t Strong;
  uint64_t v17;
  _QWORD v19[3];

  v2 = v1;
  v4 = sub_10004CFD4(&qword_1009EFD70);
  __chkstk_darwin(v4);
  v6 = (_QWORD *)((char *)&v19[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v7);
  v9 = (char *)&v19[-1] - v8;
  if (a1)
  {
    swift_release(a1);
    return;
  }
  v10 = *(_QWORD *)(v2 + 48);
  KeyPath = swift_getKeyPath(&unk_100717E00);
  v19[0] = v10;
  v12 = sub_100008DB0((unint64_t *)&qword_1009E4C90, type metadata accessor for BookReaderViewModel, (uint64_t)&unk_10072A198);
  ObservationRegistrar.access<A, B>(_:keyPath:)(v19, KeyPath, v12);
  swift_release(KeyPath);
  v13 = v10 + OBJC_IVAR____TtC5Books19BookReaderViewModel__overlay;
  swift_beginAccess(v10 + OBJC_IVAR____TtC5Books19BookReaderViewModel__overlay, v19, 0, 0);
  sub_10000B5E4(v13, (uint64_t)v9, &qword_1009EFD70);
  v14 = type metadata accessor for OverlayViewModel.Overlay(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48))(v9, 1, v14) == 1)
    goto LABEL_8;
  sub_10000B5E4((uint64_t)v9, (uint64_t)v6, &qword_1009EFD70);
  if (swift_getEnumCaseMultiPayload(v6, v14) != 3)
  {
    sub_10002C8F0((uint64_t)v6, type metadata accessor for OverlayViewModel.Overlay);
LABEL_8:
    sub_100010960((uint64_t)v9, &qword_1009EFD70);
    return;
  }
  v15 = *v6;
  sub_100010960((uint64_t)v9, &qword_1009EFD70);
  swift_release(v15);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v17 = Strong;
    sub_1005E127C();
    swift_unknownObjectRelease(v17);
  }
}

uint64_t sub_1002CD520@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t KeyPath;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  __n128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD v40[3];

  v39 = a3;
  v5 = sub_10004CFD4(&qword_1009D3828);
  __chkstk_darwin(v5);
  v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10004CFD4(&qword_1009EFEC0);
  __chkstk_darwin(v8);
  v10 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_10004CFD4(&qword_1009D7FB0);
  __chkstk_darwin(v11);
  v13 = (uint64_t *)((char *)&v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = *(_QWORD *)(*(_QWORD *)a1 + 16);
  swift_getObjectType();
  sub_1002AC8A8();
  v16 = v15;
  v38 = v17;
  v18 = *(void **)(a2 + 24);
  v19 = type metadata accessor for ChromeStyle(0);
  v20 = sub_100008DB0((unint64_t *)&qword_1009D8330, type metadata accessor for ChromeStyle, (uint64_t)&protocol conformance descriptor for ChromeStyle);
  swift_unknownObjectRetain(v14);
  v21 = v18;
  v22 = static ObservableObject.environmentStore.getter(v19, v20);
  v23 = *(_QWORD *)(a2 + 48);
  KeyPath = swift_getKeyPath(&unk_100717DD8);
  v40[0] = v23;
  v25 = sub_100008DB0((unint64_t *)&qword_1009E4C90, type metadata accessor for BookReaderViewModel, (uint64_t)&unk_10072A198);
  ObservationRegistrar.access<A, B>(_:keyPath:)(v40, KeyPath, v25);
  swift_release(KeyPath);
  v26 = v23 + OBJC_IVAR____TtC5Books19BookReaderViewModel__themeColorScheme;
  swift_beginAccess(v23 + OBJC_IVAR____TtC5Books19BookReaderViewModel__themeColorScheme, v40, 0, 0);
  v27 = type metadata accessor for ColorScheme(0);
  v28 = *(_QWORD *)(v27 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v28 + 16))(v10, v26, v27);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v10, 0, 1, v27);
  sub_10000B5E4((uint64_t)v10, (uint64_t)v7, &qword_1009EFEC0);
  sub_10000B5E4((uint64_t)v7, (uint64_t)v13 + *(int *)(v11 + 36), &qword_1009D3828);
  v29 = v38;
  *v13 = v16;
  v13[1] = v29;
  v13[2] = v22;
  v13[3] = v21;
  v30 = v21;
  swift_unknownObjectRetain(v16);
  swift_retain(v22);
  sub_100010960((uint64_t)v7, &qword_1009D3828);
  sub_100010960((uint64_t)v10, &qword_1009EFEC0);

  swift_release(v22);
  v31 = swift_unknownObjectRelease(v16);
  v32 = static SafeAreaRegions.all.getter(v31);
  LOBYTE(v26) = static Edge.Set.all.getter(v33);
  v34 = v39;
  sub_10000B5E4((uint64_t)v13, v39, &qword_1009D7FB0);
  v35 = v34 + *(int *)(sub_10004CFD4(&qword_1009D7F90) + 36);
  *(_QWORD *)v35 = v32;
  *(_BYTE *)(v35 + 8) = v26;
  return sub_100010960((uint64_t)v13, &qword_1009D7FB0);
}

uint64_t sub_1002CD81C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t KeyPath;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v15[3];

  v1 = sub_10004CFD4(&qword_1009EFD70);
  __chkstk_darwin(v1);
  v3 = (char *)&v15[-1] - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v6 = (char *)&v15[-1] - v5;
  v7 = *(_QWORD *)(v0 + 48);
  KeyPath = swift_getKeyPath(&unk_100717E00);
  v15[0] = v7;
  v9 = sub_100008DB0((unint64_t *)&qword_1009E4C90, type metadata accessor for BookReaderViewModel, (uint64_t)&unk_10072A198);
  ObservationRegistrar.access<A, B>(_:keyPath:)(v15, KeyPath, v9);
  swift_release(KeyPath);
  v10 = v7 + OBJC_IVAR____TtC5Books19BookReaderViewModel__overlay;
  swift_beginAccess(v7 + OBJC_IVAR____TtC5Books19BookReaderViewModel__overlay, v15, 0, 0);
  sub_10000B5E4(v10, (uint64_t)v6, &qword_1009EFD70);
  v11 = type metadata accessor for OverlayViewModel.Overlay(0);
  v12 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(v6, 1, v11) != 1)
  {
    sub_10000B5E4((uint64_t)v6, (uint64_t)v3, &qword_1009EFD70);
    if (swift_getEnumCaseMultiPayload(v3, v11) != 4)
    {
      sub_10002C8F0((uint64_t)v3, type metadata accessor for OverlayViewModel.Overlay);
      goto LABEL_6;
    }
    v12 = *(_QWORD *)v3;
    if ((v3[8] & 1) != 0)
    {
      swift_release(*(_QWORD *)v3);
LABEL_6:
      v12 = 0;
    }
  }
  sub_100010960((uint64_t)v6, &qword_1009EFD70);
  return v12;
}

void sub_1002CD9C8(_QWORD *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t Strong;
  uint64_t v5;

  if (!*a1)
  {
    v3 = sub_1002CD81C();
    swift_release(v3);
    if (v3)
    {
      Strong = swift_unknownObjectWeakLoadStrong(a2);
      if (Strong)
      {
        v5 = Strong;
        sub_1005D81F4();
        swift_unknownObjectRelease(v5);
      }
    }
  }
}

uint64_t sub_1002CDA20@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v16;
  char v17;
  void *v18;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t KeyPath;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD v46[5];
  char v47;
  char v48;
  char v49;
  void *v50;
  uint64_t v51;
  uint64_t v52;
  __int128 v53;
  ValueMetadata *v54;
  _UNKNOWN **v55;
  uint64_t v56;
  id v57;

  v39 = a2;
  v45 = a3;
  v44 = type metadata accessor for PagePresentationSizing(0);
  v43 = *(_QWORD *)(v44 - 8);
  __chkstk_darwin(v44);
  v5 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10004CFD4(&qword_1009EFEC0);
  __chkstk_darwin(v6);
  v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = sub_10004CFD4(&qword_1009D7FE8);
  __chkstk_darwin(v40);
  v10 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = sub_10004CFD4(&qword_1009D7FD8);
  v41 = *(_QWORD *)(v42 - 8);
  __chkstk_darwin(v42);
  v12 = (char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *a1;
  v14 = *a1 + 16;
  v54 = &type metadata for TOCPresenter;
  v55 = &off_100902840;
  *(_QWORD *)&v53 = swift_allocObject(&unk_1008FA488, 32, 7);
  sub_1002D0F1C(v14, v53 + 16);
  v15 = *(_BYTE *)(v13 + 32);
  v16 = *(_BYTE *)(v13 + 33);
  v17 = *(_BYTE *)(v13 + 34);
  v18 = *(void **)(v13 + 40);
  result = swift_unknownObjectWeakLoadStrong(v13 + 48);
  if (result)
  {
    v20 = result;
    v21 = *(_QWORD *)(v13 + 56);
    swift_unownedRetainStrong(v21);
    sub_100022840(&v53, (uint64_t)v46);
    v47 = v15;
    v48 = v16;
    v49 = v17;
    v50 = v18;
    v51 = v20;
    v52 = v21;
    v22 = v39;
    v23 = *(void **)(v39 + 24);
    v24 = type metadata accessor for ChromeStyle(0);
    v25 = sub_100008DB0((unint64_t *)&qword_1009D8330, type metadata accessor for ChromeStyle, (uint64_t)&protocol conformance descriptor for ChromeStyle);
    v26 = v18;
    v27 = v23;
    v28 = static ObservableObject.environmentStore.getter(v24, v25);
    sub_1002D0F58((uint64_t)v46, (uint64_t)&v53);
    v56 = v28;
    v57 = v27;
    sub_1002D0F94((uint64_t)v46);
    v29 = *(_QWORD *)(v22 + 48);
    KeyPath = swift_getKeyPath(&unk_100717DD8);
    v46[0] = v29;
    v31 = sub_100008DB0((unint64_t *)&qword_1009E4C90, type metadata accessor for BookReaderViewModel, (uint64_t)&unk_10072A198);
    ObservationRegistrar.access<A, B>(_:keyPath:)(v46, KeyPath, v31);
    swift_release(KeyPath);
    v32 = v29 + OBJC_IVAR____TtC5Books19BookReaderViewModel__themeColorScheme;
    swift_beginAccess(v29 + OBJC_IVAR____TtC5Books19BookReaderViewModel__themeColorScheme, v46, 0, 0);
    v33 = type metadata accessor for ColorScheme(0);
    v34 = *(_QWORD *)(v33 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v34 + 16))(v8, v32, v33);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v8, 0, 1, v33);
    v35 = v40;
    sub_10000B5E4((uint64_t)v8, (uint64_t)&v10[*(int *)(v40 + 36)], &qword_1009EFEC0);
    sub_10000B5E4((uint64_t)&v53, (uint64_t)v10, &qword_1009D8000);
    sub_100010960((uint64_t)v8, &qword_1009EFEC0);
    v36 = sub_100010960((uint64_t)&v53, &qword_1009D8000);
    static PresentationSizing<>.page.getter(v36);
    v37 = sub_1002D0C08();
    v38 = v44;
    View.presentationSizing<A>(_:)(v5, v35, v44, v37, &protocol witness table for PagePresentationSizing);
    (*(void (**)(char *, uint64_t))(v43 + 8))(v5, v38);
    sub_100010960((uint64_t)v10, &qword_1009D7FE8);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v41 + 32))(v45, v12, v42);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002CDDF8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t KeyPath;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v16[3];

  v1 = sub_10004CFD4(&qword_1009EFD70);
  __chkstk_darwin(v1);
  v3 = (char *)&v16[-1] - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v6 = (char *)&v16[-1] - v5;
  v7 = *(_QWORD *)(v0 + 48);
  KeyPath = swift_getKeyPath(&unk_100717E00);
  v16[0] = v7;
  v9 = sub_100008DB0((unint64_t *)&qword_1009E4C90, type metadata accessor for BookReaderViewModel, (uint64_t)&unk_10072A198);
  ObservationRegistrar.access<A, B>(_:keyPath:)(v16, KeyPath, v9);
  swift_release(KeyPath);
  v10 = v7 + OBJC_IVAR____TtC5Books19BookReaderViewModel__overlay;
  swift_beginAccess(v7 + OBJC_IVAR____TtC5Books19BookReaderViewModel__overlay, v16, 0, 0);
  sub_10000B5E4(v10, (uint64_t)v6, &qword_1009EFD70);
  v11 = type metadata accessor for OverlayViewModel.Overlay(0);
  v12 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(v6, 1, v11) != 1)
  {
    sub_10000B5E4((uint64_t)v6, (uint64_t)v3, &qword_1009EFD70);
    if (swift_getEnumCaseMultiPayload(v3, v11) != 1)
    {
      sub_10002C8F0((uint64_t)v3, type metadata accessor for OverlayViewModel.Overlay);
      goto LABEL_6;
    }
    v12 = *(_QWORD *)v3;
    v13 = *((_QWORD *)v3 + 3);
    if ((v3[9] & 1) != 0)
    {
      swift_release(*(_QWORD *)v3);
      swift_bridgeObjectRelease(v13);
LABEL_6:
      v12 = 0;
    }
  }
  sub_100010960((uint64_t)v6, &qword_1009EFD70);
  return v12;
}

_QWORD *sub_1002CDFE4(_QWORD *result, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  if (!*result)
  {
    v3 = sub_1002CDDF8();
    result = (_QWORD *)sub_1002D0E4C(v3, v4, v5, v6);
    if (v3)
    {
      result = (_QWORD *)swift_unknownObjectWeakLoadStrong(a2);
      if (result)
      {
        v7 = result;
        sub_1005E0C4C();
        return (_QWORD *)swift_unknownObjectRelease(v7);
      }
    }
  }
  return result;
}

uint64_t sub_1002CE03C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  double v9;
  uint64_t v10;
  char *v11;
  uint64_t *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int *v20;
  char *v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t KeyPath;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  char *v40;
  uint64_t v41;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD v46[5];

  v45 = a2;
  v3 = type metadata accessor for ReadingSettingsView(0);
  __chkstk_darwin(v3);
  v5 = (char *)&v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10004CFD4(&qword_1009D8020);
  __chkstk_darwin(v6);
  v8 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = sub_10004CFD4(&qword_1009D8028);
  v9 = __chkstk_darwin(v44);
  v11 = (char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  ReadingSettingsModule.view.getter(v9);
  v12 = sub_10003F198((_QWORD *)(*(_QWORD *)(a1 + 48) + 184), *(_QWORD *)(*(_QWORD *)(a1 + 48) + 208));
  v13 = &v8[*(int *)(v6 + 36)];
  v14 = *v12;
  v46[3] = type metadata accessor for ThemeOptionsContainerPresenter();
  v46[4] = &off_100906730;
  v46[0] = v14;
  v15 = *(_QWORD *)(v14 + 32);
  v16 = type metadata accessor for ChromeStyle(0);
  v17 = sub_100008DB0((unint64_t *)&qword_1009D8330, type metadata accessor for ChromeStyle, (uint64_t)&protocol conformance descriptor for ChromeStyle);
  swift_retain(v14);
  swift_retain(v15);
  EnvironmentObject.init()(v16, v17);
  *(_QWORD *)v13 = v18;
  *((_QWORD *)v13 + 1) = v19;
  v20 = (int *)type metadata accessor for ThemeOptionsContainerViewModifier(0);
  v21 = &v13[v20[5]];
  *(_QWORD *)v21 = swift_getKeyPath(&unk_100717D80);
  v22 = sub_10004CFD4((uint64_t *)&unk_1009D8200);
  swift_storeEnumTagMultiPayload(v21, v22, 0);
  v13[v20[6]] = 1;
  sub_10002E418((uint64_t)v46, (uint64_t)&v13[v20[7]]);
  v23 = (uint64_t *)&v13[v20[8]];
  v24 = type metadata accessor for ThemeOptionsContainerViewModel(0);
  v25 = sub_100008DB0(&qword_1009D8010, type metadata accessor for ThemeOptionsContainerViewModel, (uint64_t)&unk_100730820);
  v26 = ObservedObject.init(wrappedValue:)(v15, v24, v25);
  v28 = v27;
  _s5Books15CurrentPageViewVwxx_0(v46);
  *v23 = v26;
  v23[1] = v28;
  sub_10002C960((uint64_t)v5, (uint64_t)v8, type metadata accessor for ReadingSettingsView);
  v29 = *(id *)(a1 + 24);
  v30 = static ObservableObject.environmentStore.getter(v16, v17);
  sub_10000B5E4((uint64_t)v8, (uint64_t)v11, &qword_1009D8020);
  v31 = (uint64_t *)&v11[*(int *)(v44 + 36)];
  *v31 = v30;
  v31[1] = (uint64_t)v29;
  sub_100010960((uint64_t)v8, &qword_1009D8020);
  KeyPath = swift_getKeyPath(&unk_100717D80);
  v33 = *(_QWORD *)(a1 + 48);
  v34 = swift_getKeyPath(&unk_100717DD8);
  v46[0] = v33;
  v35 = sub_100008DB0((unint64_t *)&qword_1009E4C90, type metadata accessor for BookReaderViewModel, (uint64_t)&unk_10072A198);
  ObservationRegistrar.access<A, B>(_:keyPath:)(v46, v34, v35);
  swift_release(v34);
  v36 = v33 + OBJC_IVAR____TtC5Books19BookReaderViewModel__themeColorScheme;
  swift_beginAccess(v33 + OBJC_IVAR____TtC5Books19BookReaderViewModel__themeColorScheme, v46, 0, 0);
  v37 = sub_10004CFD4(&qword_1009D8030);
  v38 = v45;
  v39 = (uint64_t *)(v45 + *(int *)(v37 + 36));
  v40 = (char *)v39 + *(int *)(sub_10004CFD4(&qword_1009D88E0) + 28);
  v41 = type metadata accessor for ColorScheme(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 16))(v40, v36, v41);
  *v39 = KeyPath;
  return sub_100025B3C((uint64_t)v11, v38, &qword_1009D8028);
}

void sub_1002CE3C4(_QWORD *a1@<X0>, _QWORD *a2@<X8>, double a3@<D0>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  uint64_t KeyPath;
  uint64_t v25;
  uint64_t Strong;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  int v62;
  int *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void (**v69)(uint64_t@<X0>, uint64_t@<X8>);
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  double (*v73)(__n128);
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  int v77;
  uint64_t v78;
  _QWORD *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  int v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t (*v88)@<X0>(uint64_t@<X0>, uint64_t@<X8>);
  uint64_t v89;
  char v90;
  _QWORD v91[2];
  unsigned __int8 v92;

  v79 = a2;
  v5 = sub_10004CFD4(&qword_1009D80A0);
  __chkstk_darwin(v5);
  v74 = (uint64_t)&v72 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10004CFD4(&qword_1009D80A8);
  __chkstk_darwin(v7);
  v9 = (uint64_t *)((char *)&v72 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v80 = sub_10004CFD4(&qword_1009D80B0);
  v76 = *(_QWORD *)(v80 - 8);
  __chkstk_darwin(v80);
  v75 = (uint64_t)&v72 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_10004CFD4(&qword_1009D80B8);
  __chkstk_darwin(v11);
  v82 = (uint64_t)&v72 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v83 = (uint64_t)&v72 - v14;
  v15 = sub_10004CFD4(&qword_1009D65C8);
  __chkstk_darwin(v15);
  v17 = (char *)&v72 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_10004CFD4(&qword_1009D80C0);
  __chkstk_darwin(v18);
  v86 = (uint64_t)&v72 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v85 = (uint64_t)&v72 - v21;
  sub_1002CFCAC(a1, (uint64_t)v91);
  v78 = swift_allocObject(&unk_1008FA4B0, 144, 7);
  sub_1002CFCE4((uint64_t)v91, v78 + 16);
  v77 = static Edge.Set.all.getter(v22);
  v23 = a1[6];
  KeyPath = swift_getKeyPath(&unk_100717E28);
  v91[0] = v23;
  v25 = sub_100008DB0((unint64_t *)&qword_1009E4C90, type metadata accessor for BookReaderViewModel, (uint64_t)&unk_10072A198);
  ObservationRegistrar.access<A, B>(_:keyPath:)(v91, KeyPath, v25);
  swift_release(KeyPath);
  Strong = swift_weakLoadStrong(v23 + 160);
  if (Strong)
  {
    v27 = Strong;
    sub_1002CFCAC(a1, (uint64_t)v91);
    v28 = swift_allocObject(&unk_1008FA528, 152, 7);
    sub_1002CFCE4((uint64_t)v91, v28 + 16);
    *(_QWORD *)(v28 + 144) = v27;
    v88 = sub_1002D1394;
    v89 = v28;
    v90 = 0;
  }
  else
  {
    v88 = 0;
    v89 = 0;
    v90 = 1;
  }
  v29 = sub_10004CFD4(&qword_1009D80C8);
  v30 = sub_100030B34(&qword_1009D80D0, &qword_1009D80C8, (uint64_t)&protocol conformance descriptor for GeometryReader<A>);
  _ConditionalContent<>.init(storage:)(&v88, v29, &type metadata for EmptyView, v30, &protocol witness table for EmptyView);
  v87 = v91[0];
  v81 = v91[1];
  v84 = v92;
  v31 = a1[6];
  v32 = swift_getKeyPath(&unk_100717E50);
  v91[0] = v31;
  ObservationRegistrar.access<A, B>(_:keyPath:)(v91, v32, v25);
  swift_release(v32);
  sub_10028CA68(*(_QWORD *)(v31 + OBJC_IVAR____TtC5Books19BookReaderViewModel__chromeRenderMode), 0, (uint64_t)v17);
  v33 = v86;
  sub_10000B5E4((uint64_t)v17, v86, &qword_1009D65C8);
  *(_QWORD *)(v33 + *(int *)(v18 + 36)) = 0x4000000000000000;
  sub_100010960((uint64_t)v17, &qword_1009D65C8);
  sub_100025B3C(v33, v85, &qword_1009D80C0);
  v34 = a1[6];
  v35 = *(_QWORD *)(v34 + 176);
  if (v35)
  {
    v36 = swift_getKeyPath(&unk_100717EC8);
    v91[0] = v34;
    swift_retain(v35);
    ObservationRegistrar.access<A, B>(_:keyPath:)(v91, v36, v25);
    swift_release(v36);
    v37 = v34 + OBJC_IVAR____TtC5Books19BookReaderViewModel__chromeState;
    swift_beginAccess(v34 + OBJC_IVAR____TtC5Books19BookReaderViewModel__chromeState, &v88, 0, 0);
    v38 = type metadata accessor for BookReaderChromeState(0);
    v39 = *(unsigned __int8 *)(v37 + *(int *)(v38 + 52));
    *v9 = static Alignment.center.getter(v38);
    v9[1] = v40;
    if (v39 == 1)
    {
      v41 = v74;
      sub_100401394(v74, a3);
      v42 = type metadata accessor for SampleHeaderView(0);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 56))(v41, 0, 1, v42);
    }
    else
    {
      v46 = type metadata accessor for SampleHeaderView(0);
      v41 = v74;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 56))(v74, 1, 1, v46);
    }
    v45 = v80;
    v47 = sub_10004CFD4(&qword_1009D80E0);
    sub_100025B3C(v41, (uint64_t)v9 + *(int *)(v47 + 44), &qword_1009D80A0);
    if (qword_1009CDDF0 != -1)
      swift_once(&qword_1009CDDF0, sub_1002CAE00);
    v48 = qword_100A1E458;
    swift_release(v35);
    v49 = v75;
    sub_10000B5E4((uint64_t)v9, v75, &qword_1009D80A8);
    v50 = v49 + *(int *)(v45 + 36);
    *(_QWORD *)v50 = v48;
    *(_BYTE *)(v50 + 8) = v39;
    swift_retain(v48);
    sub_100010960((uint64_t)v9, &qword_1009D80A8);
    v44 = v83;
    sub_100025B3C(v49, v83, &qword_1009D80B0);
    v43 = 0;
  }
  else
  {
    v43 = 1;
    v44 = v83;
    v45 = v80;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v76 + 56))(v44, v43, 1, v45);
  v51 = a1[9];
  v52 = swift_getKeyPath(&unk_100717E78);
  v91[0] = v51;
  v53 = sub_100008DB0(&qword_1009D3B60, type metadata accessor for REActionMenuState, (uint64_t)&protocol conformance descriptor for REActionMenuState);
  ObservationRegistrar.access<A, B>(_:keyPath:)(v91, v52, v53);
  swift_release(v52);
  if ((*(_BYTE *)(v51 + 281) & 1) != 0)
  {
    v54 = 0;
    v80 = 0;
    v75 = 0;
    v73 = 0;
    v74 = 0;
    v76 = 0;
  }
  else
  {
    v55 = a1[6];
    v56 = swift_getKeyPath(&unk_100717EA0);
    v91[0] = v55;
    ObservationRegistrar.access<A, B>(_:keyPath:)(v91, v56, v25);
    swift_release(v56);
    v80 = swift_unknownObjectWeakLoadStrong(v55 + 144);
    v75 = *(_QWORD *)(v55 + 152);
    sub_1002CFCAC(a1, (uint64_t)v91);
    v74 = swift_allocObject(&unk_1008FA4D8, 144, 7);
    sub_1002CFCE4((uint64_t)v91, v74 + 16);
    v76 = 0x4008000000000000;
    v73 = sub_1002D120C;
    v54 = 1;
  }
  sub_1002CFCAC(a1, (uint64_t)v91);
  v72 = swift_allocObject(&unk_1008FA500, 144, 7);
  sub_1002CFCE4((uint64_t)v91, v72 + 16);
  v57 = v86;
  sub_10000B5E4(v85, v86, &qword_1009D80C0);
  v58 = v82;
  sub_10000B5E4(v44, v82, &qword_1009D80B8);
  v59 = v79;
  v60 = v78;
  *v79 = sub_1002D11E0;
  v59[1] = v60;
  *((_BYTE *)v59 + 16) = v77;
  v61 = v87;
  v59[3] = 0;
  v59[4] = v61;
  v59[5] = v81;
  v62 = v84;
  *((_BYTE *)v59 + 48) = v84;
  v84 = v62;
  v63 = (int *)sub_10004CFD4(&qword_1009D80D8);
  sub_10000B5E4(v57, (uint64_t)v59 + v63[16], &qword_1009D80C0);
  sub_10000B5E4(v58, (uint64_t)v59 + v63[20], &qword_1009D80B8);
  v64 = (char *)v59 + v63[24];
  *(_QWORD *)v64 = 0;
  *((_QWORD *)v64 + 1) = 0;
  v65 = v80;
  *((_QWORD *)v64 + 2) = v54;
  *((_QWORD *)v64 + 3) = v65;
  v66 = v75;
  v67 = (uint64_t)v73;
  *((_QWORD *)v64 + 4) = v75;
  *((_QWORD *)v64 + 5) = v67;
  v68 = v74;
  *((_QWORD *)v64 + 6) = v74;
  *(_OWORD *)(v64 + 56) = 0u;
  *(_OWORD *)(v64 + 72) = 0u;
  *((_QWORD *)v64 + 11) = v76;
  v69 = (void (**)(uint64_t@<X0>, uint64_t@<X8>))((char *)v59 + v63[28]);
  v70 = v72;
  *v69 = sub_1002D1218;
  v69[1] = (void (*)(uint64_t@<X0>, uint64_t@<X8>))v70;
  v69[2] = (void (*)(uint64_t@<X0>, uint64_t@<X8>))0x4010000000000000;
  swift_retain(v60);
  v71 = v81;
  sub_1002D1220(v87, v81, v62);
  sub_1002D1230(0, 0, v54, v65, v66, v67, v68, 0, 0, 0, 0);
  swift_retain(v70);
  swift_retain(v60);
  sub_100010960(v83, &qword_1009D80B8);
  sub_100010960(v85, &qword_1009D80C0);
  swift_release(v70);
  swift_release(v60);
  sub_1002D1280(0, 0, v54, v65, v66, v67, v68, 0, 0, 0, 0);
  sub_100010960(v82, &qword_1009D80B8);
  sub_100010960(v86, &qword_1009D80C0);
  sub_1002D12D0(v87, v71, v84);
  swift_release(v60);
}

double sub_1002CEDBC@<D0>(uint64_t a1@<X1>, _OWORD *a2@<X8>)
{
  void *v3;
  uint64_t KeyPath;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  double result;
  __int128 v15;
  _OWORD v16[2];
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;

  v3 = *(void **)(a1 + 24);
  KeyPath = swift_getKeyPath(&unk_100717EF0);
  v5 = swift_getKeyPath(&unk_100717F18);
  v6 = v3;
  static Published.subscript.getter(v16, v6, KeyPath, v5);

  swift_release(KeyPath);
  swift_release(v5);
  v7 = *(_QWORD *)&v16[0];
  v8 = swift_getKeyPath(&unk_100717F38);
  v9 = static Alignment.center.getter(v8);
  sub_1005F1C8C(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v16, 0.0, 1, INFINITY, 0, v9, v10, v8, v7);
  swift_release(v7);
  swift_release(v8);
  v11 = v20;
  a2[4] = v19;
  a2[5] = v11;
  v12 = v22;
  a2[6] = v21;
  a2[7] = v12;
  v13 = v16[1];
  *a2 = v16[0];
  a2[1] = v13;
  result = *(double *)&v17;
  v15 = v18;
  a2[2] = v17;
  a2[3] = v15;
  return result;
}

uint64_t sub_1002CEEC8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;

  v6 = sub_10004CFD4(&qword_1009D80E8);
  __chkstk_darwin(v6);
  v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1002CEF84(a2, a1, (uint64_t)v8);
  sub_10000B5E4((uint64_t)v8, a3, &qword_1009D80E8);
  *(_QWORD *)(a3 + *(int *)(sub_10004CFD4(&qword_1009D80F0) + 36)) = 0x3FF0000000000000;
  return sub_100010960((uint64_t)v8, &qword_1009D80E8);
}

uint64_t sub_1002CEF84@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t ObjectType;
  double (*v30)(uint64_t, uint64_t);
  double v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(char *, char *, uint64_t);
  __n128 v42;
  double (*v43)(char *, uint64_t, __n128);
  __n128 v44;
  char *v45;
  double *v46;
  void *v47;
  uint64_t KeyPath;
  uint64_t v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  id v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t *v69;
  char *v70;
  __n128 v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  int *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  id v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t Strong;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  _QWORD v116[6];

  v4 = v3;
  v111 = a2;
  v96 = a1;
  v112 = a3;
  v109 = sub_10004CFD4(&qword_1009D80E8);
  __chkstk_darwin(v109);
  v6 = (char *)&v94 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v108 = type metadata accessor for GeometryProxy(0);
  v115 = *(_QWORD *)(v108 - 8);
  __chkstk_darwin(v108);
  v107 = (char *)&v94 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  Strong = sub_10004CFD4(&qword_1009F4140);
  __chkstk_darwin(Strong);
  v104 = (uint64_t)&v94 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v100 = type metadata accessor for RoundedRectangle(0);
  __chkstk_darwin(v100);
  v98 = (char *)&v94 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v102 = sub_10004CFD4(&qword_1009D6518);
  v10 = __chkstk_darwin(v102);
  v101 = (uint64_t *)((char *)&v94 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = type metadata accessor for BookContentView(0, v10);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v94 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v18 = (char *)&v94 - v17;
  v95 = sub_10004CFD4(&qword_1009D80F8);
  __chkstk_darwin(v95);
  v113 = (char *)&v94 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v99 = sub_10004CFD4(&qword_1009D8100);
  __chkstk_darwin(v99);
  v97 = (char *)&v94 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v103 = sub_10004CFD4(&qword_1009D8108);
  __chkstk_darwin(v103);
  v110 = (uint64_t)&v94 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v105 = (uint64_t)&v94 - v23;
  __chkstk_darwin(v24);
  v114 = (uint64_t)&v94 - v25;
  v26 = v3[6];
  v27 = *(_QWORD *)(v26 + 40);
  v28 = *(_QWORD *)(v26 + 56);
  ObjectType = swift_getObjectType();
  v30 = *(double (**)(uint64_t, uint64_t))(v28 + 96);
  swift_unknownObjectRetain(v27);
  v31 = v30(ObjectType, v28);
  v33 = v32;
  v35 = v34;
  v37 = v36;
  v38 = swift_unknownObjectRelease(v27);
  v39 = BookContentModule.view.getter(v38);
  v40 = static Color.teal.getter(v39);
  v41 = *(void (**)(char *, char *, uint64_t))(v13 + 16);
  v41(v18, v15, v12);
  v42 = swift_release(v40);
  v43 = *(double (**)(char *, uint64_t, __n128))(v13 + 8);
  v44.n128_f64[0] = v43(v15, v12, v42);
  LOBYTE(v40) = static Edge.Set.all.getter(v44);
  v45 = v113;
  v41(v113, v18, v12);
  v46 = (double *)&v45[*(int *)(v95 + 36)];
  *(_BYTE *)v46 = v40;
  v46[1] = v31;
  *((_QWORD *)v46 + 2) = v33;
  *((_QWORD *)v46 + 3) = v35;
  *((_QWORD *)v46 + 4) = v37;
  *((_BYTE *)v46 + 40) = 0;
  ((void (*)(char *, uint64_t))v43)(v18, v12);
  v47 = (void *)v4[3];
  KeyPath = swift_getKeyPath(&unk_100717EF0);
  v49 = swift_getKeyPath(&unk_100717F18);
  v50 = v47;
  static Published.subscript.getter(v116, v50, KeyPath, v49);

  swift_release(KeyPath);
  swift_release(v49);
  v51 = v116[0];
  v52 = swift_getKeyPath(&unk_100717F38);
  v53 = (void *)objc_opt_self(UITraitCollection);
  v54 = objc_msgSend(v53, "currentTraitCollection");
  objc_msgSend(v54, "displayCornerRadius");
  v56 = v55;

  v57 = v98;
  v58 = &v98[*(int *)(v100 + 20)];
  v59 = enum case for RoundedCornerStyle.continuous(_:);
  v60 = type metadata accessor for RoundedCornerStyle(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v60 - 8) + 104))(v58, v59, v60);
  *v57 = v56;
  v57[1] = v56;
  v61 = v104;
  sub_10002CD84((uint64_t)v57, v104, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
  *(_WORD *)(v61 + *(int *)(Strong + 36)) = 256;
  v62 = v101;
  sub_10000B5E4(v61, (uint64_t)v101 + *(int *)(v102 + 36), &qword_1009F4140);
  *v62 = v52;
  v62[1] = v51;
  swift_retain(v52);
  swift_retain(v51);
  sub_100010960(v61, &qword_1009F4140);
  sub_10002C8F0((uint64_t)v57, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
  swift_release(v51);
  swift_release(v52);
  v64 = static Alignment.center.getter(v63);
  v66 = v65;
  v67 = (uint64_t)v97;
  v68 = (uint64_t)&v97[*(int *)(v99 + 36)];
  sub_10000B5E4((uint64_t)v62, v68, &qword_1009D6518);
  v69 = (uint64_t *)(v68 + *(int *)(sub_10004CFD4(&qword_1009D8110) + 36));
  *v69 = v64;
  v69[1] = v66;
  v70 = v113;
  sub_10000B5E4((uint64_t)v113, v67, &qword_1009D80F8);
  sub_100010960((uint64_t)v62, &qword_1009D6518);
  sub_100010960((uint64_t)v70, &qword_1009D80F8);
  LOBYTE(v64) = static Edge.Set.all.getter(v71);
  v72 = v114;
  sub_10000B5E4(v67, v114, &qword_1009D8100);
  *(_BYTE *)(v72 + *(int *)(v103 + 36)) = v64;
  sub_100010960(v67, &qword_1009D8100);
  sub_10028D0D4((uint64_t)(v4 + 10), (uint64_t)v116);
  v73 = v4[6];
  Strong = swift_unknownObjectWeakLoadStrong(v4);
  v104 = v4[1];
  v113 = *(char **)(v115 + 16);
  v74 = v107;
  v75 = v108;
  ((void (*)(char *, uint64_t, uint64_t))v113)(v107, v111, v108);
  v76 = v105;
  sub_10000B5E4(v72, v105, &qword_1009D8108);
  *((_QWORD *)v6 + 1) = 0;
  swift_unknownObjectWeakInit(v6);
  *((_DWORD *)v6 + 4) = 2014;
  v77 = (int *)v109;
  v78 = &v6[*(int *)(v109 + 56)];
  v79 = type metadata accessor for ChromeStyle(0);
  v80 = sub_100008DB0((unint64_t *)&qword_1009D8330, type metadata accessor for ChromeStyle, (uint64_t)&protocol conformance descriptor for ChromeStyle);
  swift_retain(v73);
  EnvironmentObject.init()(v79, v80);
  *(_QWORD *)v78 = v81;
  *((_QWORD *)v78 + 1) = v82;
  v83 = &v6[v77[15]];
  *(_QWORD *)v83 = swift_getKeyPath(&unk_100717F68);
  v84 = sub_10004CFD4(&qword_1009D26B8);
  swift_storeEnumTagMultiPayload(v83, v84, 0);
  *(_QWORD *)&v6[v77[17]] = 0x3FD3333333333333;
  *(_QWORD *)&v6[v77[18]] = 0x3FC3333333333333;
  *(_QWORD *)&v6[v77[19]] = 0x3FF0000000000000;
  v85 = v77[20];
  v86 = objc_msgSend(v53, "currentTraitCollection");
  objc_msgSend(v86, "displayCornerRadius");
  v88 = v87;

  *(_QWORD *)&v6[v85] = v88;
  sub_100009B88();
  static OS_os_log.be_loggerForCurrentFile(_:)(0xD000000000000018, 0x80000001007BCBF0);
  sub_10028D0D4((uint64_t)v116, (uint64_t)&v6[v77[11]]);
  *(_QWORD *)&v6[v77[12]] = v73;
  v89 = *(_QWORD *)(v73 + 136);
  *(_QWORD *)&v6[v77[13]] = v89;
  *((_QWORD *)v6 + 1) = v104;
  v90 = Strong;
  swift_unknownObjectWeakAssign(v6, Strong);
  v91 = v75;
  ((void (*)(char *, char *, uint64_t))v113)(&v6[v77[10]], v74, v75);
  v92 = v110;
  sub_10000B5E4(v76, v110, &qword_1009D8108);
  swift_retain(v73);
  swift_retain(v89);
  sub_100010960(v76, &qword_1009D8108);
  swift_release(v73);
  swift_unknownObjectRelease(v90);
  (*(void (**)(char *, uint64_t))(v115 + 8))(v74, v91);
  sub_10028D108((uint64_t)v116);
  sub_100025B3C(v92, (uint64_t)&v6[v77[16]], &qword_1009D8108);
  sub_100025B3C((uint64_t)v6, v112, &qword_1009D80E8);
  return sub_100010960(v114, &qword_1009D8108);
}

double sub_1002CF830(uint64_t a1, __n128 a2)
{
  uint64_t v2;
  double result;
  _QWORD v4[4];

  v4[2] = a1;
  v2 = static Animation.default.getter(a2);
  if (UIAccessibilityIsReduceMotionEnabled())
  {
    REActionMenuState.transition(to:)(0x8000000000000000);
    *(_QWORD *)&result = swift_release(v2).n128_u64[0];
  }
  else
  {
    withAnimation<A>(_:_:)(v2, sub_1002D1404, v4, (char *)&type metadata for () + 8);
    *(_QWORD *)&result = swift_release(v2).n128_u64[0];
  }
  return result;
}

void sub_1002CF8C0(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t KeyPath;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  double left;
  double bottom;
  double right;
  uint64_t v42;
  char v43;
  uint64_t v44;
  uint64_t *v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t Strong;
  uint64_t v54;
  __int128 v55[2];
  _OWORD v56[2];
  char v57;

  v48 = a1;
  v54 = a3;
  v4 = sub_10004CFD4(&qword_1009D3A00);
  __chkstk_darwin(v4);
  v6 = (uint64_t *)((char *)&v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = sub_10004CFD4((uint64_t *)&unk_1009D8230);
  __chkstk_darwin(v7);
  v9 = (uint64_t *)((char *)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = sub_10004CFD4(&qword_1009D39F8);
  __chkstk_darwin(v10);
  v12 = (uint64_t *)((char *)&v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = sub_10004CFD4(&qword_1009D26A0);
  __chkstk_darwin(v13);
  v15 = (uint64_t *)((char *)&v44 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v16);
  v18 = (uint64_t *)((char *)&v44 - v17);
  v19 = type metadata accessor for GeometryProxy(0);
  v20 = *(_QWORD *)(v19 - 8);
  __chkstk_darwin(v19);
  v22 = (char *)&v44 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  memset(v56, 0, sizeof(v56));
  v57 = 1;
  v23 = a2[9];
  v49 = a2[6];
  Strong = swift_weakLoadStrong(a2 + 15);
  v24 = swift_unknownObjectWeakLoadStrong(a2);
  v51 = a2[1];
  v52 = v24;
  sub_10002E418(v23 + 80, (uint64_t)v55);
  v47 = *(_QWORD *)(v23 + 16);
  v50 = *(_QWORD *)(v23 + 24);
  (*(void (**)(char *, uint64_t, uint64_t))(v20 + 16))(v22, v48, v19);
  *v18 = swift_getKeyPath(&unk_100717F98);
  v25 = sub_10004CFD4(&qword_1009D26B8);
  swift_storeEnumTagMultiPayload(v18, v25, 0);
  *v15 = swift_getKeyPath(&unk_100717F68);
  swift_storeEnumTagMultiPayload(v15, v25, 0);
  *v12 = swift_getKeyPath(&unk_100717FC8);
  v26 = sub_10004CFD4(&qword_1009D8790);
  swift_storeEnumTagMultiPayload(v12, v26, 0);
  KeyPath = swift_getKeyPath(&unk_100717D80);
  v46 = v9;
  *v9 = KeyPath;
  v28 = sub_10004CFD4((uint64_t *)&unk_1009D8200);
  swift_storeEnumTagMultiPayload(v9, v28, 0);
  v29 = swift_getKeyPath(&unk_100717FF8);
  v45 = v6;
  *v6 = v29;
  v30 = sub_10004CFD4(&qword_1009D3A08);
  swift_storeEnumTagMultiPayload(v6, v30, 0);
  v31 = type metadata accessor for ChromeStyle(0);
  v32 = sub_100008DB0((unint64_t *)&qword_1009D8330, type metadata accessor for ChromeStyle, (uint64_t)&protocol conformance descriptor for ChromeStyle);
  swift_retain(v23);
  v33 = v49;
  swift_retain(v49);
  v34 = v47;
  swift_unknownObjectRetain(v47);
  EnvironmentObject.init()(v31, v32);
  v36 = v35;
  v38 = v37;
  left = UIEdgeInsetsZero.left;
  bottom = UIEdgeInsetsZero.bottom;
  right = UIEdgeInsetsZero.right;
  v42 = type metadata accessor for DebugOptions(0);
  static DebugOptions.showPageCurlOptions.getter(v42);
  sub_10022FAC0((uint64_t)v18, (uint64_t)v15, (uint64_t)v12, (uint64_t)v46, (uint64_t)v45, v36, v38, (uint64_t)v56, v54, UIEdgeInsetsZero.top, left, bottom, right, 0.0, v43 & 1, v23, v33, Strong, v52,
    v51,
    v55,
    v34,
    v50,
    (uint64_t)v22);
}

uint64_t sub_1002CFCAC(_QWORD *a1, uint64_t a2)
{
  initializeWithCopy for BookReaderView(a2, a1);
  return a2;
}

uint64_t sub_1002CFCE4(uint64_t a1, uint64_t a2)
{
  initializeWithTake for BookReaderView(a2, a1);
  return a2;
}

uint64_t sub_1002CFD18@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1002CC160(v1 + 16, a1);
}

uint64_t sub_1002CFD20@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;
  char v3;

  result = sub_1002CC6B4();
  *(_QWORD *)a1 = result;
  *(_BYTE *)(a1 + 8) = v3;
  return result;
}

uint64_t sub_1002CFD50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v12;

  v8 = sub_10004CFD4(&qword_1009D7F48);
  __chkstk_darwin(v8);
  v10 = (char *)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000B5E4(a1, (uint64_t)v10, &qword_1009D7F48);
  return swift_setAtReferenceWritableKeyPath(a4, a5, v10);
}

uint64_t sub_1002CFDE4@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1002D006C(a1, (uint64_t)&unk_100717E00, &OBJC_IVAR____TtC5Books19BookReaderViewModel__overlay, (uint64_t)&qword_1009EFD70, (uint64_t (*)(uint64_t, uint64_t, uint64_t, __n128))sub_10000B5E4, a2);
}

uint64_t sub_1002CFE08(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t KeyPath;
  uint64_t v9;
  _BYTE v11[16];
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;

  v4 = sub_10004CFD4(&qword_1009EFD70);
  __chkstk_darwin(v4);
  v6 = &v11[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10000B5E4(a1, (uint64_t)v6, &qword_1009EFD70);
  v7 = *a2;
  KeyPath = swift_getKeyPath(&unk_100717E00);
  v12 = v7;
  v13 = v6;
  v14 = v7;
  v9 = sub_100008DB0((unint64_t *)&qword_1009E4C90, type metadata accessor for BookReaderViewModel, (uint64_t)&unk_10072A198);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v14, KeyPath, sub_1002D0EE0, v11, (char *)&type metadata for () + 8, v9);
  swift_release(KeyPath);
  return sub_100010960((uint64_t)v6, &qword_1009EFD70);
}

void sub_1002CFF10(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_100717E50);
  v6 = v3;
  v5 = sub_100008DB0((unint64_t *)&qword_1009E4C90, type metadata accessor for BookReaderViewModel, (uint64_t)&unk_10072A198);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v6, KeyPath, v5);
  swift_release(KeyPath);
  *a2 = *(_QWORD *)(v3 + OBJC_IVAR____TtC5Books19BookReaderViewModel__chromeRenderMode);
}

double sub_1002CFFA4(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  double result;
  _QWORD v7[5];
  uint64_t v8;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_100717E50);
  v7[2] = v3;
  v7[3] = v2;
  v8 = v3;
  v5 = sub_100008DB0((unint64_t *)&qword_1009E4C90, type metadata accessor for BookReaderViewModel, (uint64_t)&unk_10072A198);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v8, KeyPath, sub_1002D1434, v7, (char *)&type metadata for () + 8, v5);
  *(_QWORD *)&result = swift_release(KeyPath).n128_u64[0];
  return result;
}

uint64_t sub_1002D0048@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1002D006C(a1, (uint64_t)&unk_100717EC8, &OBJC_IVAR____TtC5Books19BookReaderViewModel__chromeState, (uint64_t)type metadata accessor for BookReaderChromeState, (uint64_t (*)(uint64_t, uint64_t, uint64_t, __n128))sub_10002CD84, a2);
}

uint64_t sub_1002D006C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X3>, _QWORD *a3@<X4>, uint64_t a4@<X5>, uint64_t (*a5)(uint64_t, uint64_t, uint64_t, __n128)@<X6>, uint64_t a6@<X8>)
{
  uint64_t v10;
  uint64_t KeyPath;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  _QWORD v16[3];

  v10 = *a1;
  KeyPath = swift_getKeyPath(a2);
  v16[0] = v10;
  v12 = sub_100008DB0((unint64_t *)&qword_1009E4C90, type metadata accessor for BookReaderViewModel, (uint64_t)&unk_10072A198);
  ObservationRegistrar.access<A, B>(_:keyPath:)(v16, KeyPath, v12);
  swift_release(KeyPath);
  v13 = v10 + *a3;
  v14 = swift_beginAccess(v13, v16, 0, 0);
  return a5(v13, a6, a4, v14);
}

uint64_t sub_1002D0134(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t KeyPath;
  uint64_t v9;
  _BYTE v11[16];
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;

  v4 = type metadata accessor for BookReaderChromeState(0);
  __chkstk_darwin(v4);
  v6 = &v11[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10002CD84(a1, (uint64_t)v6, type metadata accessor for BookReaderChromeState);
  v7 = *a2;
  KeyPath = swift_getKeyPath(&unk_100717EC8);
  v12 = v7;
  v13 = v6;
  v14 = v7;
  v9 = sub_100008DB0((unint64_t *)&qword_1009E4C90, type metadata accessor for BookReaderViewModel, (uint64_t)&unk_10072A198);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v14, KeyPath, sub_1002D13B8, v11, (char *)&type metadata for () + 8, v9);
  swift_release(KeyPath);
  return sub_10002C8F0((uint64_t)v6, type metadata accessor for BookReaderChromeState);
}

uint64_t sub_1002D023C@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_100717EF0);
  v5 = swift_getKeyPath(&unk_100717F18);
  static Published.subscript.getter(&v7, v3, KeyPath, v5);
  swift_release(KeyPath);
  result = swift_release(v5);
  *a2 = v7;
  return result;
}

uint64_t sub_1002D02B8(uint64_t *a1, void **a2)
{
  uint64_t v2;
  void *v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v7;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_100717EF0);
  v5 = swift_getKeyPath(&unk_100717F18);
  v7 = v2;
  swift_retain(v2);
  return static Published.subscript.setter(&v7, v3, KeyPath, v5);
}

uint64_t sub_1002D032C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v7;

  v2 = type metadata accessor for DynamicTypeSize(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v5 + 16))(v4, a1);
  return EnvironmentValues.dynamicTypeSize.setter(v4);
}

uint64_t sub_1002D03A8@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t *a3@<X8>)
{
  uint64_t (*v4)(_BYTE *, _QWORD);
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  _BYTE v11[32];

  v4 = (uint64_t (*)(_BYTE *, _QWORD))swift_readAtKeyPath(v11, a1, a2);
  v6 = *v5;
  v7 = v5[1];
  v8 = v5[2];
  v9 = v5[3];
  sub_1002D0E78(*v5, v7, v8, v9);
  result = v4(v11, 0);
  *a3 = v6;
  a3[1] = v7;
  a3[2] = v8;
  a3[3] = v9;
  return result;
}

uint64_t sub_1002D0420(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11[4];

  v7 = a1[1];
  v8 = a1[2];
  v9 = a1[3];
  v11[0] = *a1;
  v11[1] = v7;
  v11[2] = v8;
  v11[3] = v9;
  sub_1002D0E78(v11[0], v7, v8, v9);
  return swift_setAtReferenceWritableKeyPath(a4, a5, v11);
}

uint64_t sub_1002D0480(uint64_t a1)
{
  destroy for BookReaderView(a1);
  return a1;
}

uint64_t sub_1002D04B0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1002CC8C4(v1 + 16, a1);
}

unint64_t sub_1002D04B8()
{
  unint64_t result;

  result = qword_1009D7F18;
  if (!qword_1009D7F18)
  {
    result = swift_getWitnessTable(&unk_100722320, &type metadata for OverlayViewModel.BookmarkNotes);
    atomic_store(result, (unint64_t *)&qword_1009D7F18);
  }
  return result;
}

unint64_t sub_1002D04FC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009D7F28;
  if (!qword_1009D7F28)
  {
    v1 = sub_100030B74(&qword_1009D7F20);
    sub_1002D0580();
    sub_100030B34((unint64_t *)&unk_1009F1DF0, &qword_1009D3828, (uint64_t)&protocol conformance descriptor for _PreferenceWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009D7F28);
  }
  return result;
}

unint64_t sub_1002D0580()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009D7F30;
  if (!qword_1009D7F30)
  {
    v1 = sub_100030B74(&qword_1009D7F38);
    sub_1002D0604();
    sub_100030B34((unint64_t *)&qword_1009D3818, &qword_1009D3820, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009D7F30);
  }
  return result;
}

unint64_t sub_1002D0604()
{
  unint64_t result;

  result = qword_1009D7F40;
  if (!qword_1009D7F40)
  {
    result = swift_getWitnessTable(&unk_100736384, &type metadata for BookmarkNotesView);
    atomic_store(result, (unint64_t *)&qword_1009D7F40);
  }
  return result;
}

uint64_t sub_1002D0648@<X0>(uint64_t a1@<X8>)
{
  return sub_1002CCB84(a1);
}

uint64_t sub_1002D0670@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t (*v3)(_BYTE *, _QWORD);
  uint64_t v4;
  _BYTE v6[32];

  v3 = (uint64_t (*)(_BYTE *, _QWORD))swift_readAtKeyPath(v6, v1 + 32, *(_QWORD *)(v1 + 160));
  sub_10000B5E4(v4, a1, &qword_1009D7F48);
  return v3(v6, 0);
}

uint64_t sub_1002D06CC(uint64_t a1)
{
  uint64_t *v1;

  return sub_1002CFD50(a1, v1[2], v1[3], (uint64_t)(v1 + 4), v1[20]);
}

uint64_t sub_1002D06E0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1002CCEE4(v1 + 16, a1);
}

unint64_t sub_1002D06E8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009D7F68;
  if (!qword_1009D7F68)
  {
    v1 = sub_100030B74(&qword_1009D7F60);
    sub_1002D076C();
    sub_100030B34((unint64_t *)&unk_1009F1DF0, &qword_1009D3828, (uint64_t)&protocol conformance descriptor for _PreferenceWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009D7F68);
  }
  return result;
}

unint64_t sub_1002D076C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009D7F70;
  if (!qword_1009D7F70)
  {
    v1 = sub_100030B74(&qword_1009D7F78);
    sub_1002D07F0();
    sub_100030B34((unint64_t *)&qword_1009D3818, &qword_1009D3820, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009D7F70);
  }
  return result;
}

unint64_t sub_1002D07F0()
{
  unint64_t result;

  result = qword_1009D7F80;
  if (!qword_1009D7F80)
  {
    result = swift_getWitnessTable(&unk_10072ABF8, &type metadata for SearchView);
    atomic_store(result, (unint64_t *)&qword_1009D7F80);
  }
  return result;
}

uint64_t sub_1002D0834@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_1002CD1A0();
  *a1 = result;
  return result;
}

void sub_1002D085C(_QWORD *a1)
{
  uint64_t v1;

  v1 = swift_retain(*a1);
  sub_1002CD338(v1);
}

uint64_t sub_1002D0888@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t (*v3)(_BYTE *, _QWORD);
  _QWORD *v4;
  uint64_t v5;
  uint64_t result;
  _BYTE v7[32];

  v3 = (uint64_t (*)(_BYTE *, _QWORD))swift_readAtKeyPath(v7, v1 + 32, *(_QWORD *)(v1 + 160));
  v5 = *v4;
  swift_retain(*v4);
  result = v3(v7, 0);
  *a1 = v5;
  return result;
}

uint64_t sub_1002D08E8(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  v2 = v1 + 32;
  v3 = *(_QWORD *)(v1 + 160);
  v5 = *a1;
  swift_retain(v5);
  return swift_setAtReferenceWritableKeyPath(v2, v3, &v5);
}

uint64_t sub_1002D0930@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1002CD520(a1, v2 + 16, a2);
}

unint64_t sub_1002D0938()
{
  unint64_t result;

  result = qword_1009D7F98;
  if (!qword_1009D7F98)
  {
    result = swift_getWitnessTable(&unk_1007222E8, &type metadata for OverlayViewModel.Share);
    atomic_store(result, (unint64_t *)&qword_1009D7F98);
  }
  return result;
}

unint64_t sub_1002D097C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009D7FA8;
  if (!qword_1009D7FA8)
  {
    v1 = sub_100030B74(&qword_1009D7FB0);
    sub_1002D0A00();
    sub_100030B34((unint64_t *)&unk_1009F1DF0, &qword_1009D3828, (uint64_t)&protocol conformance descriptor for _PreferenceWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009D7FA8);
  }
  return result;
}

unint64_t sub_1002D0A00()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009D7FB8;
  if (!qword_1009D7FB8)
  {
    v1 = sub_100030B74(&qword_1009D7FC0);
    sub_1002D0A84();
    sub_100030B34((unint64_t *)&qword_1009D3818, &qword_1009D3820, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009D7FB8);
  }
  return result;
}

unint64_t sub_1002D0A84()
{
  unint64_t result;

  result = qword_1009D7FC8;
  if (!qword_1009D7FC8)
  {
    result = swift_getWitnessTable(&unk_1007172C0, &type metadata for ShareView);
    atomic_store(result, (unint64_t *)&qword_1009D7FC8);
  }
  return result;
}

uint64_t sub_1002D0AC8@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;
  char v3;

  result = sub_1002CD81C();
  *(_QWORD *)a1 = result;
  *(_BYTE *)(a1 + 8) = v3;
  return result;
}

uint64_t sub_1002D0B00@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t (*v3)(_BYTE *, _QWORD);
  uint64_t *v4;
  uint64_t v5;
  char v6;
  uint64_t result;
  _BYTE v8[32];

  v3 = (uint64_t (*)(_BYTE *, _QWORD))swift_readAtKeyPath(v8, v1 + 32, *(_QWORD *)(v1 + 160));
  v5 = *v4;
  v6 = *((_BYTE *)v4 + 8);
  swift_retain(*v4);
  result = v3(v8, 0);
  *(_QWORD *)a1 = v5;
  *(_BYTE *)(a1 + 8) = v6;
  return result;
}

uint64_t sub_1002D0B68(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v6;
  char v7;

  v2 = v1 + 32;
  v3 = *(_QWORD *)(v1 + 160);
  v4 = *((_BYTE *)a1 + 8);
  v6 = *a1;
  v7 = v4;
  swift_retain(v6);
  return swift_setAtReferenceWritableKeyPath(v2, v3, &v6);
}

uint64_t sub_1002D0BBC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1002CDA20(a1, v2 + 16, a2);
}

unint64_t sub_1002D0BC4()
{
  unint64_t result;

  result = qword_1009D7FE0;
  if (!qword_1009D7FE0)
  {
    result = swift_getWitnessTable(&unk_1007222B0, &type metadata for OverlayViewModel.TOC);
    atomic_store(result, (unint64_t *)&qword_1009D7FE0);
  }
  return result;
}

unint64_t sub_1002D0C08()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009D7FF0;
  if (!qword_1009D7FF0)
  {
    v1 = sub_100030B74(&qword_1009D7FE8);
    sub_1002D0C8C();
    sub_100030B34((unint64_t *)&unk_1009F1DF0, &qword_1009D3828, (uint64_t)&protocol conformance descriptor for _PreferenceWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009D7FF0);
  }
  return result;
}

unint64_t sub_1002D0C8C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009D7FF8;
  if (!qword_1009D7FF8)
  {
    v1 = sub_100030B74(&qword_1009D8000);
    sub_1002D0D10();
    sub_100030B34((unint64_t *)&qword_1009D3818, &qword_1009D3820, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009D7FF8);
  }
  return result;
}

unint64_t sub_1002D0D10()
{
  unint64_t result;

  result = qword_1009D8008;
  if (!qword_1009D8008)
  {
    result = swift_getWitnessTable(&unk_10071E884, &type metadata for TableOfContentsView);
    atomic_store(result, (unint64_t *)&qword_1009D8008);
  }
  return result;
}

uint64_t sub_1002D0D5C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  result = sub_1002CDDF8();
  *a1 = result;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  return result;
}

uint64_t sub_1002D0D90@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_1002D03A8(v1 + 32, *(_QWORD *)(v1 + 160), a1);
}

uint64_t sub_1002D0DA4()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_unknownObjectWeakDestroy(v0 + 32);

  swift_release(*(_QWORD *)(v0 + 72));
  swift_release(*(_QWORD *)(v0 + 80));
  swift_release(*(_QWORD *)(v0 + 96));
  swift_release(*(_QWORD *)(v0 + 104));
  swift_weakDestroy(v0 + 112);
  swift_weakDestroy(v0 + 120);
  swift_weakDestroy(v0 + 128);
  swift_unknownObjectWeakDestroy(v0 + 136);
  swift_weakDestroy(v0 + 152);
  swift_release(*(_QWORD *)(v0 + 160));
  return swift_deallocObject(v0, 168, 7);
}

uint64_t sub_1002D0E28(uint64_t *a1)
{
  uint64_t *v1;

  return sub_1002D0420(a1, v1[2], v1[3], (uint64_t)(v1 + 4), v1[20]);
}

uint64_t sub_1002D0E44@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1002CE03C(v1 + 16, a1);
}

uint64_t sub_1002D0E4C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (result)
  {
    swift_release(result);
    return swift_bridgeObjectRelease(a4);
  }
  return result;
}

uint64_t sub_1002D0E78(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  if (result)
  {
    v4 = result;
    swift_bridgeObjectRetain(a4);
    return swift_retain(v4);
  }
  return result;
}

uint64_t sub_1002D0EA8@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1002D006C(a1, (uint64_t)&unk_100717E00, &OBJC_IVAR____TtC5Books19BookReaderViewModel__overlay, (uint64_t)&qword_1009EFD70, (uint64_t (*)(uint64_t, uint64_t, uint64_t, __n128))sub_10000B5E4, a2);
}

uint64_t sub_1002D0EE0()
{
  uint64_t v0;

  return sub_1004E5B10(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1002D0EF8()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1002D0F1C(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for BookmarkNotesPresenter(a2, a1);
  return a2;
}

uint64_t sub_1002D0F58(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for TableOfContentsView(a2, a1);
  return a2;
}

uint64_t sub_1002D0F94(uint64_t a1)
{
  destroy for TableOfContentsView(a1);
  return a1;
}

uint64_t sub_1002D0FC8(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for SearchView(a2, a1);
  return a2;
}

_QWORD *sub_1002D1004(_QWORD *a1)
{
  destroy for SearchView(a1);
  return a1;
}

uint64_t sub_1002D1038(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for BookmarkNotesView(a2, a1);
  return a2;
}

uint64_t sub_1002D1074(uint64_t a1)
{
  destroy for BookmarkNotesView(a1);
  return a1;
}

unint64_t sub_1002D10A8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009D8070;
  if (!qword_1009D8070)
  {
    v1 = sub_100030B74(&qword_1009D8040);
    sub_1002D1114();
    sub_1002D1198();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009D8070);
  }
  return result;
}

unint64_t sub_1002D1114()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009D8078;
  if (!qword_1009D8078)
  {
    v1 = sub_100030B74(&qword_1009D8038);
    sub_100030B34(&qword_1009D8080, &qword_1009D8088, (uint64_t)&protocol conformance descriptor for ZStack<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009D8078);
  }
  return result;
}

unint64_t sub_1002D1198()
{
  unint64_t result;

  result = qword_1009D8090;
  if (!qword_1009D8090)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for _AccessibilityIgnoresInvertColorsViewModifier, &type metadata for _AccessibilityIgnoresInvertColorsViewModifier);
    atomic_store(result, (unint64_t *)&qword_1009D8090);
  }
  return result;
}

double sub_1002D11E0@<D0>(_OWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_1002CEDBC(v1 + 16, a1);
}

double sub_1002D120C(__n128 a1)
{
  uint64_t v1;

  return sub_1002CF830(v1 + 16, a1);
}

void sub_1002D1218(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  sub_1002CF8C0(a1, (_QWORD *)(v2 + 16), a2);
}

uint64_t sub_1002D1220(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if ((a3 & 1) == 0)
    return swift_retain(a2);
  return result;
}

uint64_t sub_1002D1230(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t result;

  if (a6)
  {
    swift_bridgeObjectRetain(a11);
    swift_unknownObjectRetain(a4);
    swift_retain(a7);
    return swift_bridgeObjectRetain(a9);
  }
  return result;
}

uint64_t sub_1002D1280(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t result;

  if (a6)
  {
    swift_release(a7);
    swift_unknownObjectRelease(a4);
    swift_bridgeObjectRelease(a9);
    return swift_bridgeObjectRelease(a11);
  }
  return result;
}

uint64_t sub_1002D12D0(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if ((a3 & 1) == 0)
    return swift_release(a2);
  return result;
}

uint64_t sub_1002D12E0@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1002D006C(a1, (uint64_t)&unk_100717EC8, &OBJC_IVAR____TtC5Books19BookReaderViewModel__chromeState, (uint64_t)type metadata accessor for BookReaderChromeState, (uint64_t (*)(uint64_t, uint64_t, uint64_t, __n128))sub_10002CD84, a2);
}

uint64_t sub_1002D1318()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);

  swift_release(*(_QWORD *)(v0 + 56));
  swift_release(*(_QWORD *)(v0 + 64));
  swift_release(*(_QWORD *)(v0 + 80));
  swift_release(*(_QWORD *)(v0 + 88));
  swift_weakDestroy(v0 + 96);
  swift_weakDestroy(v0 + 104);
  swift_weakDestroy(v0 + 112);
  swift_unknownObjectWeakDestroy(v0 + 120);
  swift_weakDestroy(v0 + 136);
  swift_release(*(_QWORD *)(v0 + 144));
  return swift_deallocObject(v0, 152, 7);
}

uint64_t sub_1002D1394@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1002CEEC8(a1, *(_QWORD *)(v2 + 144), a2);
}

uint64_t sub_1002D13B8()
{
  uint64_t v0;

  return sub_1004E6D68(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1002D13E0()
{
  return EnvironmentValues.dynamicTypeSize.getter();
}

void sub_1002D1404()
{
  REActionMenuState.transition(to:)(0x8000000000000000);
}

uint64_t sub_1002D1434()
{
  uint64_t v0;

  return sub_1004E6014(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

unint64_t sub_1002D1450()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009D8120;
  if (!qword_1009D8120)
  {
    v1 = sub_100030B74(&qword_1009D7EF0);
    sub_1002D14D4();
    sub_100030B34(&qword_1009D8158, &qword_1009D88E0, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009D8120);
  }
  return result;
}

unint64_t sub_1002D14D4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009D8128;
  if (!qword_1009D8128)
  {
    v1 = sub_100030B74(&qword_1009D7EE8);
    sub_1002D1558();
    sub_100030B34((unint64_t *)&qword_1009D3818, &qword_1009D3820, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009D8128);
  }
  return result;
}

unint64_t sub_1002D1558()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009D8130;
  if (!qword_1009D8130)
  {
    v1 = sub_100030B74(&qword_1009D7EE0);
    sub_1002D15DC();
    sub_100030B34(&qword_1009D8148, &qword_1009D8150, (uint64_t)&unk_100730C90);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009D8130);
  }
  return result;
}

unint64_t sub_1002D15DC()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t OpaqueTypeConformance2;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  ValueMetadata *v30;
  unint64_t v31;
  void *v32;
  unint64_t v33;
  uint64_t v34;

  result = qword_1009D8138;
  if (!qword_1009D8138)
  {
    v28 = sub_100030B74(&qword_1009D7ED8);
    v27 = sub_100030B74(&qword_1009D7EC8);
    v26 = sub_100030B74(&qword_1009D7FD8);
    v25 = sub_100030B74(&qword_1009D7EC0);
    v24 = sub_100030B74(&qword_1009D7F90);
    v1 = sub_100030B74(&qword_1009D7EB8);
    v2 = type metadata accessor for OverlayViewModel.Search(255);
    v3 = sub_100030B74(&qword_1009D7F50);
    v4 = sub_100030B74(&qword_1009D7F00);
    v5 = sub_100030B74(&qword_1009D7F08);
    v6 = sub_100030B34(&qword_1009D7F10, &qword_1009D7F00, (uint64_t)&protocol conformance descriptor for GeometryReader<A>);
    v7 = sub_1002D04B8();
    v8 = sub_100030B74(&qword_1009D7F20);
    v9 = type metadata accessor for PagePresentationSizing(255);
    v29 = v8;
    v30 = (ValueMetadata *)v9;
    v31 = sub_1002D04FC();
    v32 = &protocol witness table for PagePresentationSizing;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v29, &opaque type descriptor for <<opaque return type of View.presentationSizing<A>(_:)>>, 1);
    v29 = v4;
    v30 = &type metadata for OverlayViewModel.BookmarkNotes;
    v31 = v5;
    v32 = (void *)v6;
    v33 = v7;
    v34 = OpaqueTypeConformance2;
    v11 = swift_getOpaqueTypeConformance2(&v29, &opaque type descriptor for <<opaque return type of View.sheet<A, B>(item:onDismiss:content:)>>, 1);
    v12 = sub_100008DB0(&qword_1009D7F58, type metadata accessor for OverlayViewModel.Search, (uint64_t)&unk_100722160);
    v13 = sub_100030B74(&qword_1009D7F60);
    v14 = sub_1002D06E8();
    v29 = v13;
    v30 = (ValueMetadata *)v9;
    v31 = v14;
    v32 = &protocol witness table for PagePresentationSizing;
    v15 = swift_getOpaqueTypeConformance2(&v29, &opaque type descriptor for <<opaque return type of View.presentationSizing<A>(_:)>>, 1);
    v29 = v1;
    v30 = (ValueMetadata *)v2;
    v31 = v3;
    v32 = (void *)v11;
    v33 = v12;
    v34 = v15;
    v16 = swift_getOpaqueTypeConformance2(&v29, &opaque type descriptor for <<opaque return type of View.sheet<A, B>(item:onDismiss:content:)>>, 1);
    v17 = sub_1002D0938();
    v18 = sub_1001F5558(&qword_1009D7FA0, &qword_1009D7F90, (void (*)(void))sub_1002D097C);
    v29 = v25;
    v30 = &type metadata for OverlayViewModel.Share;
    v31 = v24;
    v32 = (void *)v16;
    v33 = v17;
    v34 = v18;
    v19 = swift_getOpaqueTypeConformance2(&v29, &opaque type descriptor for <<opaque return type of View.sheet<A, B>(item:drawsBackground:content:)>>, 1);
    v20 = sub_1002D0BC4();
    v21 = sub_100030B74(&qword_1009D7FE8);
    v22 = sub_1002D0C08();
    v29 = v21;
    v30 = (ValueMetadata *)v9;
    v31 = v22;
    v32 = &protocol witness table for PagePresentationSizing;
    v23 = swift_getOpaqueTypeConformance2(&v29, &opaque type descriptor for <<opaque return type of View.presentationSizing<A>(_:)>>, 1);
    v29 = v27;
    v30 = &type metadata for OverlayViewModel.TOC;
    v31 = v26;
    v32 = (void *)v19;
    v33 = v20;
    v34 = v23;
    swift_getOpaqueTypeConformance2(&v29, &opaque type descriptor for <<opaque return type of View.sheet<A, B>(item:onDismiss:content:)>>, 1);
    sub_100008DB0(&qword_1009D8140, type metadata accessor for ThemeOptionsContainerViewModifier, (uint64_t)&unk_10072B398);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v28);
    atomic_store(result, (unint64_t *)&qword_1009D8138);
  }
  return result;
}

double sub_1002D18D4(uint64_t a1)
{
  os_log_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  SEL *v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  int v15;
  void *v16;
  BOOL v17;
  unint64_t v18;
  char *v19;
  char *v20;
  uint64_t ObjectType;
  uint64_t v22;
  unint64_t v23;
  void *v24;
  _QWORD *v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  char *v29;
  uint64_t v30;
  unint64_t v31;
  _QWORD *v32;
  id v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  _QWORD *v40;
  uint8_t *v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  os_log_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  id v51;
  void *v52;
  char *v53;
  uint64_t v54;
  void (*v55)(SEL *, char *, unint64_t);
  uint64_t v56;
  id v57;
  void *v58;
  unint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  id v65;
  void *v66;
  uint64_t v67;
  NSObject *v68;
  NSObject *v69;
  uint64_t v70;
  unint64_t v71;
  unint64_t v72;
  uint64_t v73;
  unint64_t v74;
  _QWORD *v75;
  _QWORD *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  BOOL v81;
  NSObject *v82;
  uint64_t v83;
  uint64_t v84;
  id v85;
  void *v86;
  uint64_t v87;
  SEL *v88;
  _QWORD *v89;
  unint64_t v90;
  _QWORD *v91;
  unint64_t v92;
  _QWORD *v93;
  unint64_t v94;
  unint64_t v95;
  id v96;
  void *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t *v100;
  uint64_t v101;
  uint64_t v102;
  BOOL v103;
  uint64_t v104;
  unint64_t v105;
  uint64_t v106;
  _QWORD *v107;
  unint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t Strong;
  uint64_t v114;
  uint64_t v115;
  double result;
  uint64_t v117;
  uint64_t v118;
  SEL *v119;
  char *v120;
  _QWORD *v121;
  uint8_t *v122;
  uint64_t v123;
  char *v124;
  char *v125;
  os_log_t v126;
  uint64_t v127;
  uint64_t *v128;
  uint64_t v129;
  uint64_t v130;

  v3 = sub_10004CFD4(&qword_1009D7440);
  __chkstk_darwin(v3);
  v5 = (uint64_t)&v117 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (SEL *)((char *)&v117 - v7);
  v9 = type metadata accessor for Date(0);
  v127 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v124 = (char *)&v117 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v117 - v12;
  v15 = static os_log_type_t.default.getter(v14);
  if (qword_1009CE210 != -1)
    swift_once(&qword_1009CE210, sub_10038B1F8);
  v16 = (void *)qword_1009DE420;
  v17 = os_log_type_enabled((os_log_t)qword_1009DE420, (os_log_type_t)v15);
  v18 = (unint64_t)a1 >> 62;
  v128 = (uint64_t *)a1;
  v118 = v5;
  v119 = v8;
  if (v17)
  {
    LODWORD(v123) = v15;
    v19 = v120;
    swift_bridgeObjectRetain_n(a1, 2);
    v20 = v19;
    v126 = v16;
    v1 = (os_log_t)swift_slowAlloc(32, -1);
    v121 = (_QWORD *)swift_slowAlloc(96, -1);
    v130 = (uint64_t)v121;
    LODWORD(v1->isa) = 136315650;
    ObjectType = swift_getObjectType();
    v22 = _typeName(_:qualified:)(ObjectType, 0);
    v24 = (void *)v23;
    v129 = sub_100040F58(v22, v23, &v130);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v129, &v130, (char *)&v1->isa + 4, (char *)&v1[1].isa + 4);

    swift_bridgeObjectRelease(v24);
    WORD2(v1[1].isa) = 2080;
    v25 = (Class *)((char *)&v1[1].isa + 6);
    v129 = sub_100040F58(0xD000000000000013, 0x80000001007BD000, &v130);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v129, &v130, (char *)&v1[1].isa + 6, (char *)&v1[2].isa + 6);
    v122 = (uint8_t *)v1;
    HIWORD(v1[2].isa) = 2080;
    if (v18)
    {
      if (a1 < 0)
        v25 = (_QWORD *)a1;
      else
        v25 = (_QWORD *)(a1 & 0xFFFFFFFFFFFFFF8);
      swift_bridgeObjectRetain(a1);
      v26 = _CocoaArrayWrapper.endIndex.getter(v25);
      v125 = (char *)((unint64_t)a1 >> 62);
      if (v26)
        goto LABEL_6;
    }
    else
    {
      v26 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(a1);
      v125 = (char *)((unint64_t)a1 >> 62);
      if (v26)
      {
LABEL_6:
        if (v26 < 1)
        {
          __break(1u);
          goto LABEL_145;
        }
        v28 = v9;
        v29 = v13;
        v30 = 0;
        v31 = a1 & 0xC000000000000001;
        v32 = _swiftEmptyArrayStorage;
        do
        {
          if (v31)
          {
            v1 = (os_log_t)specialized _ArrayBuffer._getElementSlowPath(_:)(v30, a1);
          }
          else
          {
            v1 = *(os_log_t *)(a1 + 8 * v30 + 32);
            swift_unknownObjectRetain(v1);
          }
          v33 = -[NSObject assetID](v1, "assetID");
          if (v33)
          {
            v34 = v33;
            v35 = static String._unconditionallyBridgeFromObjectiveC(_:)(v33);
            v37 = v36;
            swift_unknownObjectRelease(v1);

            if ((swift_isUniquelyReferenced_nonNull_native(v32) & 1) == 0)
              v32 = sub_100043ED0(0, v32[2] + 1, 1, v32);
            v39 = v32[2];
            v38 = v32[3];
            v1 = (os_log_t)(v39 + 1);
            if (v39 >= v38 >> 1)
              v32 = sub_100043ED0((_QWORD *)(v38 > 1), v39 + 1, 1, v32);
            v32[2] = v1;
            v40 = &v32[2 * v39];
            v40[4] = v35;
            v40[5] = v37;
          }
          else
          {
            swift_unknownObjectRelease(v1);
          }
          ++v30;
          a1 = (uint64_t)v128;
        }
        while (v26 != v30);
        goto LABEL_24;
      }
    }
    v28 = v9;
    v29 = v13;
    v32 = _swiftEmptyArrayStorage;
LABEL_24:
    swift_bridgeObjectRelease(a1);
    v41 = v122;
    v42 = Array.description.getter(v32, &type metadata for String);
    v44 = v43;
    swift_bridgeObjectRelease(v32);
    v129 = sub_100040F58(v42, v44, &v130);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v129, &v130, v41 + 24, v41 + 32);
    swift_bridgeObjectRelease_n(a1, 2);
    swift_bridgeObjectRelease(v44);
    v45 = v126;
    _os_log_impl((void *)&_mh_execute_header, v126, (os_log_type_t)v123, "%s %s assets: %s", v41, 0x20u);
    v5 = (uint64_t)v121;
    swift_arrayDestroy(v121, 3, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v5, -1, -1);
    swift_slowDealloc(v41, -1, -1);

    v13 = v29;
    v9 = v28;
    v8 = v119;
    v18 = (unint64_t)v125;
  }
  v129 = (uint64_t)_swiftEmptyArrayStorage;
  v130 = (uint64_t)_swiftEmptyArrayStorage;
  v46 = a1 & 0xFFFFFFFFFFFFFF8;
  v123 = a1 & 0xFFFFFFFFFFFFFF8;
  if (v18)
    goto LABEL_123;
  v126 = *(os_log_t *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if ((unint64_t)v126 < 4)
  {
LABEL_27:
    swift_bridgeObjectRetain(a1);
    sub_10037495C(v47);
LABEL_118:
    v107 = _swiftEmptyArrayStorage;
    goto LABEL_141;
  }
  swift_bridgeObjectRetain(a1);
LABEL_29:
  v125 = (char *)(a1 & 0xC000000000000001);
  if ((a1 & 0xC000000000000001) != 0)
  {
    v117 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, a1);
  }
  else
  {
    if (!*(_QWORD *)(v123 + 16))
    {
      __break(1u);
      goto LABEL_131;
    }
    v117 = *(_QWORD *)(a1 + 32);
    swift_unknownObjectRetain(v117);
  }
  swift_bridgeObjectRelease(a1);
  v122 = (uint8_t *)(a1 + 32);
  swift_bridgeObjectRetain(a1);
  v121 = _swiftEmptyArrayStorage;
  v48 = 4;
  while (1)
  {
    v49 = v48 - 4;
    if (v125)
    {
      v50 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(v48 - 4, a1);
      a1 = v48 - 3;
      if (__OFADD__(v49, 1))
        goto LABEL_120;
    }
    else
    {
      v50 = *(void **)(a1 + 8 * v48);
      swift_unknownObjectRetain(v50);
      a1 = v48 - 3;
      if (__OFADD__(v49, 1))
      {
LABEL_120:
        __break(1u);
LABEL_121:
        __break(1u);
LABEL_122:
        __break(1u);
LABEL_123:
        if (a1 >= 0)
          v108 = v46;
        else
          v108 = a1;
        swift_bridgeObjectRetain(a1);
        v5 = _CocoaArrayWrapper.endIndex.getter(v108);
        swift_bridgeObjectRelease(a1);
        if (v5 <= 3)
          goto LABEL_27;
        swift_bridgeObjectRetain(a1);
        v126 = (os_log_t)_CocoaArrayWrapper.endIndex.getter(v108);
        if (!v126)
        {
          swift_bridgeObjectRelease(a1);
          goto LABEL_118;
        }
        goto LABEL_29;
      }
    }
    v51 = objc_msgSend(v50, "lastOpenDate", v117);
    if (!v51)
    {
      (*(void (**)(SEL *, uint64_t, uint64_t, unint64_t))(v127 + 56))(v8, 1, 1, v9);
      goto LABEL_46;
    }
    v52 = v51;
    v53 = v124;
    static Date._unconditionallyBridgeFromObjectiveC(_:)(v51);

    v54 = v127;
    v55 = *(void (**)(SEL *, char *, unint64_t))(v127 + 32);
    v55(v8, v53, v9);
    v18 = *(_QWORD *)(v54 + 56);
    ((void (*)(SEL *, _QWORD, uint64_t, unint64_t))v18)(v8, 0, 1, v9);
    v1 = *(os_log_t *)(v54 + 48);
    if (((unsigned int (*)(SEL *, uint64_t, unint64_t))v1)(v8, 1, v9) != 1)
      break;
LABEL_46:
    v64 = (uint64_t)v8;
LABEL_47:
    sub_100010D2C(v64);
LABEL_48:
    swift_unknownObjectRelease(v50);
LABEL_49:
    ++v48;
    v103 = a1 == (_QWORD)v126;
    a1 = (uint64_t)v128;
    if (v103)
    {
      swift_bridgeObjectRelease(v128);
      v5 = v130;
      goto LABEL_71;
    }
  }
  v56 = ((uint64_t (*)(char *, SEL *, unint64_t))v55)(v13, v8, v9);
  if (Date.timeIntervalSinceNow.getter(v56) <= -2678400.0)
  {
    (*(void (**)(char *, unint64_t))(v127 + 8))(v13, v9);
    goto LABEL_48;
  }
  if ((objc_msgSend(v50, "isFinished") & 1) != 0)
  {
    v57 = objc_msgSend(v50, "lastEngagedDate");
    if (v57)
    {
      v58 = v57;
      v59 = v9;
      v60 = v13;
      v61 = v124;
      static Date._unconditionallyBridgeFromObjectiveC(_:)(v57);

      (*(void (**)(char *, unint64_t))(v127 + 8))(v60, v59);
      v62 = v118;
      v63 = v61;
      v13 = v60;
      v9 = v59;
      v8 = v119;
      v55((SEL *)v118, v63, v9);
      ((void (*)(uint64_t, _QWORD, uint64_t, unint64_t))v18)(v62, 0, 1, v9);
      if (((unsigned int (*)(uint64_t, uint64_t, unint64_t))v1)(v62, 1, v9) != 1)
      {
        sub_100010D2C(v62);
        goto LABEL_54;
      }
    }
    else
    {
      (*(void (**)(char *, unint64_t))(v127 + 8))(v13, v9);
      v62 = v118;
      ((void (*)(uint64_t, uint64_t, uint64_t, unint64_t))v18)(v118, 1, 1, v9);
    }
    v64 = v62;
    goto LABEL_47;
  }
  (*(void (**)(char *, unint64_t))(v127 + 8))(v13, v9);
LABEL_54:
  v65 = objc_msgSend(v50, "assetID");
  if (!v65)
    goto LABEL_48;
  v66 = v65;
  v67 = static String._unconditionallyBridgeFromObjectiveC(_:)(v65);
  v69 = v68;

  v70 = swift_unknownObjectRetain(v50);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v70);
  v72 = *(_QWORD *)((v130 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v71 = *(_QWORD *)((v130 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v72 >= v71 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v71 > 1, v72 + 1, 1);
  v73 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v72, v50);
  specialized Array._endMutation()(v73);
  v1 = v69;
  if ((swift_isUniquelyReferenced_nonNull_native(v121) & 1) == 0)
    v121 = sub_1005B0C88(0, v121[2] + 1, 1, v121);
  v18 = v121[2];
  v74 = v121[3];
  if (v18 >= v74 >> 1)
    v121 = sub_1005B0C88((_QWORD *)(v74 > 1), v18 + 1, 1, v121);
  v75 = v121;
  v121[2] = v18 + 1;
  v76 = &v75[2 * v18];
  v76[4] = v67;
  v76[5] = v1;
  v5 = v130;
  if ((unint64_t)v130 >> 62)
  {
    if (v130 < 0)
      v78 = v130;
    else
      v78 = v130 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v130);
    v77 = _CocoaArrayWrapper.endIndex.getter(v78);
    swift_bridgeObjectRelease(v5);
  }
  else
  {
    v77 = *(_QWORD *)((v130 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  swift_unknownObjectRelease(v50);
  if (v77 < 3)
    goto LABEL_49;
  a1 = (uint64_t)v128;
  swift_bridgeObjectRelease(v128);
LABEL_71:
  v13 = v125;
  v1 = v126;
  v18 = (unint64_t)v121;
  v8 = (SEL *)&selRef_isFileURL;
  if ((unint64_t)v5 >> 62)
  {
LABEL_131:
    if (v5 < 0)
      v109 = v5;
    else
      v109 = v5 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v5);
    v110 = _CocoaArrayWrapper.endIndex.getter(v109);
    swift_bridgeObjectRelease(v5);
    if (!v110)
      goto LABEL_73;
    goto LABEL_92;
  }
  if (!*(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_73:
    swift_bridgeObjectRetain(a1);
    v79 = 4;
    while (1)
    {
      v80 = v79 - 4;
      if (v13)
      {
        v24 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(v79 - 4, a1);
        v81 = __OFADD__(v80, 1);
        v82 = (v79 - 3);
        if (v81)
          goto LABEL_122;
      }
      else
      {
        v24 = *(void **)(a1 + 8 * v79);
        swift_unknownObjectRetain(v24);
        v81 = __OFADD__(v80, 1);
        v82 = (v79 - 3);
        if (v81)
          goto LABEL_122;
      }
      if ((objc_msgSend(v24, v8[1], v117) & 1) == 0)
        break;
      swift_unknownObjectRelease(v24);
      ++v79;
      if (v82 == v1)
      {
        swift_bridgeObjectRelease(a1);
        v24 = (void *)v117;
        swift_unknownObjectRetain(v117);
        goto LABEL_83;
      }
    }
    swift_bridgeObjectRelease(a1);
LABEL_83:
    v83 = swift_unknownObjectRetain(v24);
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v83);
    v8 = *(SEL **)((v130 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v27 = *(_QWORD *)((v130 & 0xFFFFFFFFFFFFFF8) + 0x18);
    v25 = v121;
    if ((unint64_t)v8 < v27 >> 1)
    {
LABEL_84:
      v84 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v8, v24);
      specialized Array._endMutation()(v84);
      v85 = objc_msgSend(v24, "assetID");
      if (v85)
      {
        v86 = v85;
        v87 = static String._unconditionallyBridgeFromObjectiveC(_:)(v85);
        v8 = v88;

      }
      else
      {
        v87 = 0;
        v8 = 0;
      }
      if ((swift_isUniquelyReferenced_nonNull_native(v25) & 1) == 0)
        v25 = sub_1005B0C88(0, v25[2] + 1, 1, v25);
      v89 = v25;
      v90 = v25[2];
      v91 = v89;
      v92 = v89[3];
      v9 = v90 + 1;
      if (v90 >= v92 >> 1)
        v91 = sub_1005B0C88((_QWORD *)(v92 > 1), v90 + 1, 1, v91);
      v18 = (unint64_t)v91;
      v91[2] = v9;
      v93 = &v91[2 * v90];
      v93[4] = v87;
      v93[5] = v8;
      swift_unknownObjectRelease(v24);
      goto LABEL_92;
    }
LABEL_145:
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v27 > 1, (char *)v8 + 1, 1);
    goto LABEL_84;
  }
LABEL_92:
  swift_bridgeObjectRetain(a1);
  v94 = 0;
  v95 = v18;
  v128 = (uint64_t *)(v18 + 40);
  do
  {
    if (v13)
    {
      v8 = (SEL *)specialized _ArrayBuffer._getElementSlowPath(_:)(v94, a1);
      v81 = __OFADD__(v94++, 1);
      if (v81)
        goto LABEL_119;
    }
    else
    {
      v46 = *(_QWORD *)(v123 + 16);
      if (v94 >= v46)
        goto LABEL_121;
      v8 = *(SEL **)&v122[8 * v94];
      swift_unknownObjectRetain(v8);
      v81 = __OFADD__(v94++, 1);
      if (v81)
      {
LABEL_119:
        __break(1u);
        goto LABEL_120;
      }
    }
    v96 = -[SEL assetID](v8, "assetID", v117);
    if (v96)
    {
      v97 = v96;
      v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(v96);
      v99 = v98;

      v18 = *(_QWORD *)(v95 + 16);
      if (v18)
      {
        v100 = v128;
        while (1)
        {
          v101 = *v100;
          if (*v100)
          {
            v102 = *(v100 - 1);
            v103 = v102 == v9 && v101 == v99;
            if (v103 || (_stringCompareWithSmolCheck(_:_:expecting:)(v102, v101, v9, v99, 0) & 1) != 0)
              break;
          }
          v100 += 2;
          if (!--v18)
            goto LABEL_112;
        }
        swift_bridgeObjectRelease(v99);
      }
      else
      {
LABEL_112:
        swift_bridgeObjectRelease(v99);
        v104 = swift_unknownObjectRetain(v8);
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v104);
        v9 = *(_QWORD *)((v129 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v105 = *(_QWORD *)((v129 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v9 >= v105 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v105 > 1, v9 + 1, 1);
        v106 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v9, v8);
        specialized Array._endMutation()(v106);
      }
    }
    swift_unknownObjectRelease(v8);
  }
  while ((os_log_t)v94 != v1);
  swift_bridgeObjectRelease(v95);
  swift_bridgeObjectRelease(a1);
  v107 = (_QWORD *)v129;
  if ((unint64_t)v129 >> 62)
  {
    if (v129 < 0)
      v111 = v129;
    else
      v111 = v129 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v129);
    v112 = _CocoaArrayWrapper.endIndex.getter(v111);
    swift_bridgeObjectRelease(v107);
    if (v112 == 1)
      goto LABEL_117;
  }
  else if (*(_QWORD *)((v129 & 0xFFFFFFFFFFFFF8) + 0x10) == 1)
  {
LABEL_117:
    sub_10037495C((uint64_t)v107);
    swift_unknownObjectRelease(v117);
    goto LABEL_118;
  }
  swift_unknownObjectRelease(v117);
LABEL_141:
  Strong = swift_unknownObjectWeakLoadStrong(&v120[OBJC_IVAR____TtC5Books17CarPlayInteractor_delegate]);
  if (Strong)
  {
    v114 = Strong;
    v115 = v130;
    sub_10031CF7C(v130, (unint64_t)v107);
    swift_bridgeObjectRelease(v115);
    swift_bridgeObjectRelease(v107);
    *(_QWORD *)&result = swift_unknownObjectRelease(v114).n128_u64[0];
  }
  else
  {
    swift_bridgeObjectRelease(v107);
    *(_QWORD *)&result = swift_bridgeObjectRelease(v130).n128_u64[0];
  }
  return result;
}

id sub_1002D2618(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  os_log_type_t v13;
  void *v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t ObjectType;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  id v23;
  void *v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  os_log_t v28;
  id result;
  void *v30;
  NSString v31;
  NSString v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  _QWORD *v37;
  id v38;
  void *v39;
  _QWORD *v40;
  id v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  os_log_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  id v54;
  uint64_t v55;
  uint64_t aBlock[5];
  _QWORD *v57;

  v51 = a2;
  v5 = type metadata accessor for DispatchWorkItemFlags(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for DispatchQoS(0);
  v52 = *(_QWORD *)(v9 - 8);
  v53 = v9;
  __chkstk_darwin(v9);
  v11 = (char *)&v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = static os_log_type_t.default.getter(v12);
  if (qword_1009CE210 != -1)
    swift_once(&qword_1009CE210, sub_10038B1F8);
  v14 = (void *)qword_1009DE420;
  if (os_log_type_enabled((os_log_t)qword_1009DE420, v13))
  {
    v48 = a3;
    v49 = v6;
    v50 = v5;
    v15 = v54;
    swift_unknownObjectRetain_n(a1, 2);
    v16 = v15;
    v47 = v14;
    v17 = swift_slowAlloc(32, -1);
    v18 = swift_slowAlloc(96, -1);
    aBlock[0] = v18;
    *(_DWORD *)v17 = 136315650;
    ObjectType = swift_getObjectType();
    v20 = _typeName(_:qualified:)(ObjectType, 0);
    v22 = v21;
    v55 = sub_100040F58(v20, v21, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v55, aBlock, v17 + 4, v17 + 12);

    swift_bridgeObjectRelease(v22);
    *(_WORD *)(v17 + 12) = 2080;
    v55 = sub_100040F58(0xD000000000000021, 0x80000001007BCF50, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v55, aBlock, v17 + 14, v17 + 22);
    *(_WORD *)(v17 + 22) = 2080;
    v23 = objc_msgSend(a1, "assetID");
    if (v23)
    {
      v24 = v23;
      v25 = static String._unconditionallyBridgeFromObjectiveC(_:)(v23);
      v27 = v26;

    }
    else
    {
      v27 = 0xE500000000000000;
      v25 = 0x3E6C696E3CLL;
    }
    v55 = sub_100040F58(v25, v27, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v55, aBlock, v17 + 24, v17 + 32);
    swift_unknownObjectRelease_n(a1, 2);
    swift_bridgeObjectRelease(v27);
    v28 = v47;
    _os_log_impl((void *)&_mh_execute_header, v47, v13, "%s %s Initiate playback of content item %s", (uint8_t *)v17, 0x20u);
    swift_arrayDestroy(v18, 3, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v18, -1, -1);
    swift_slowDealloc(v17, -1, -1);

    v6 = v49;
    v5 = v50;
    a3 = v48;
  }
  AriadneTrace_AudiobookReceivedInitiatePlaybackOfContentItem();
  result = objc_msgSend((id)objc_opt_self(BCBackgroundTaskAssertion), "sharedAssertion");
  if (result)
  {
    v30 = result;
    v31 = String._bridgeToObjectiveC()();
    v32 = String._bridgeToObjectiveC()();
    objc_msgSend(v30, "claimAssertionForIdentifier:description:", v31, v32);

    v33 = swift_allocObject(&unk_1008FA8C0, 32, 7);
    v34 = v51;
    *(_QWORD *)(v33 + 16) = v51;
    *(_QWORD *)(v33 + 24) = a3;
    sub_100009E04(0, (unint64_t *)&qword_1009CEC30, OS_dispatch_queue_ptr);
    v35 = sub_10002ACF0(v34, a3);
    v36 = (void *)static OS_dispatch_queue.main.getter(v35);
    v37 = (_QWORD *)swift_allocObject(&unk_1008FA8E8, 48, 7);
    v38 = v54;
    v37[2] = v54;
    v37[3] = a1;
    v37[4] = sub_1002D5948;
    v37[5] = v33;
    aBlock[4] = (uint64_t)sub_1002D5984;
    v57 = v37;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_1000147F0;
    aBlock[3] = (uint64_t)&unk_1008FA900;
    v39 = _Block_copy(aBlock);
    v40 = v57;
    v41 = v38;
    swift_unknownObjectRetain(a1);
    swift_retain(v33);
    swift_release(v40);
    static DispatchQoS.unspecified.getter(v42);
    aBlock[0] = (uint64_t)_swiftEmptyArrayStorage;
    v43 = sub_100008E8C();
    v44 = sub_10004CFD4((uint64_t *)&unk_1009DB460);
    v45 = sub_100030B34((unint64_t *)&qword_1009D48F0, (uint64_t *)&unk_1009DB460, (uint64_t)&protocol conformance descriptor for [A]);
    dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v44, v45, v5, v43);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v11, v8, v39);
    _Block_release(v39);
    swift_release(v33);

    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    return (id)(*(uint64_t (**)(char *, uint64_t))(v52 + 8))(v11, v53);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1002D2B34(void (*a1)(void))
{
  uint64_t v2;
  id v3;
  id v4;
  void *v5;
  NSString v6;

  v2 = static os_log_type_t.default.getter(a1);
  if (qword_1009CE210 != -1)
    swift_once(&qword_1009CE210, sub_10038B1F8);
  v3 = (id)qword_1009DE420;
  os_log(_:dso:log:_:_:)(v2, &_mh_execute_header, v3, "Show asset completed", 20, 2, _swiftEmptyArrayStorage);

  AriadneTrace_AudiobookDispatchedInitiatePlaybackOfContentItem();
  v4 = objc_msgSend((id)objc_opt_self(BCBackgroundTaskAssertion), "sharedAssertion");
  if (v4)
  {
    v5 = v4;
    v6 = String._bridgeToObjectiveC()();
    objc_msgSend(v5, "releaseAssertionForIdentifier:", v6);

    if (a1)
      a1();
  }
  else
  {
    __break(1u);
  }
}

void sub_1002D2C40(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  id v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  id v12;
  id v13;

  v13 = objc_msgSend((id)objc_opt_self(BKAppDelegate), "delegate");
  objc_msgSend(v13, "setSuppressOpenLastBook:", 1);
  v7 = objc_msgSend(v13, "appLaunchCoordinator");
  v8 = objc_msgSend(v7, "appLaunchCoordinatorIsConditionSatisfied:", 6);
  swift_unknownObjectRelease(v7);
  v10 = static os_log_type_t.default.getter(v9);
  if (v8)
  {
    if (qword_1009CE210 != -1)
      swift_once(&qword_1009CE210, sub_10038B1F8);
    v11 = (id)qword_1009DE420;
    os_log(_:dso:log:_:_:)(v10, &_mh_execute_header, v11, "Opening audibook from CarPlay in foreground.", 44, 2, _swiftEmptyArrayStorage);

    sub_1002D2DFC((uint64_t)a2, a3, a4);
  }
  else
  {
    if (qword_1009CE210 != -1)
      swift_once(&qword_1009CE210, sub_10038B1F8);
    v12 = (id)qword_1009DE420;
    os_log(_:dso:log:_:_:)(v10, &_mh_execute_header, v12, "Opening audibook from CarPlay in background.", 44, 2, _swiftEmptyArrayStorage);

    objc_msgSend(v13, "setSuppressOpenLastBook:", 0);
    sub_1002D37FC(a2, a3, a4);
  }

}

uint64_t sub_1002D2DFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  os_log_type_t v12;
  void *v13;
  os_log_type_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t ObjectType;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  os_log_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  id v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  void *v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  _QWORD *v50;
  char *v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v57;
  os_log_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t aBlock[5];
  _QWORD *v66;

  v60 = a1;
  v61 = a2;
  v5 = type metadata accessor for DispatchWorkItemFlags(0);
  v63 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v7 = (char *)&v57 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DispatchQoS(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v62 = (char *)&v57 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = static os_log_type_t.default.getter(v11);
  if (qword_1009CE210 != -1)
    swift_once(&qword_1009CE210, sub_10038B1F8);
  v13 = (void *)qword_1009DE420;
  v14 = v12;
  if (os_log_type_enabled((os_log_t)qword_1009DE420, v12))
  {
    v15 = v3;
    v58 = v13;
    v16 = swift_slowAlloc(22, -1);
    v59 = v9;
    v17 = v16;
    v57 = swift_slowAlloc(64, -1);
    aBlock[0] = v57;
    *(_DWORD *)v17 = 136315394;
    ObjectType = swift_getObjectType();
    v19 = _typeName(_:qualified:)(ObjectType, 0);
    v20 = v8;
    v21 = v7;
    v22 = v5;
    v23 = a3;
    v25 = v24;
    v64 = sub_100040F58(v19, v24, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v64, aBlock, v17 + 4, v17 + 12);

    v26 = v25;
    a3 = v23;
    v5 = v22;
    v7 = v21;
    v8 = v20;
    swift_bridgeObjectRelease(v26);
    *(_WORD *)(v17 + 12) = 2080;
    v64 = sub_100040F58(0xD00000000000001DLL, 0x80000001007BCE60, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v64, aBlock, v17 + 14, v17 + 22);
    v27 = v58;
    _os_log_impl((void *)&_mh_execute_header, v58, v14, "%s %s", (uint8_t *)v17, 0x16u);
    v28 = v57;
    swift_arrayDestroy(v57, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v28, -1, -1);
    v29 = v17;
    v9 = v59;
    swift_slowDealloc(v29, -1, -1);

  }
  v30 = sub_1001DA8B8((uint64_t)&off_1008F00F8);
  v31 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v32 = objc_msgSend(v31, "applicationState");

  if (v32)
  {
    v33 = static String._unconditionallyBridgeFromObjectiveC(_:)(CFSTR("BKBookPresentWithoutAnimations"));
    v35 = v34;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v30);
    aBlock[0] = v30;
    sub_1002C3B74(1, v33, v35, isUniquelyReferenced_nonNull_native);
    v37 = aBlock[0];
    swift_bridgeObjectRelease(v35);
    swift_bridgeObjectRelease(0x8000000000000000);
    v38 = static String._unconditionallyBridgeFromObjectiveC(_:)(CFSTR("BKBookPresentingForceOpenBeforeWelcomeCompleted"));
    v40 = v39;
    v41 = swift_isUniquelyReferenced_nonNull_native(v37);
    aBlock[0] = v37;
    sub_1002C3B74(1, v38, v40, v41);
    v42 = aBlock[0];
    swift_bridgeObjectRelease(v40);
    swift_bridgeObjectRelease(0x8000000000000000);
    v43 = swift_isUniquelyReferenced_nonNull_native(v42);
    aBlock[0] = v42;
    sub_1002C3B74(1, 0xD000000000000031, 0x80000001007BCE20, v43);
    v30 = aBlock[0];
    swift_bridgeObjectRelease(0x8000000000000000);
  }
  v44 = sub_100009E04(0, (unint64_t *)&qword_1009CEC30, OS_dispatch_queue_ptr);
  v45 = (void *)static OS_dispatch_queue.main.getter(v44);
  v46 = (_QWORD *)swift_allocObject(&unk_1008FA7D0, 48, 7);
  v48 = v60;
  v47 = v61;
  v46[2] = v60;
  v46[3] = v30;
  v46[4] = v47;
  v46[5] = a3;
  aBlock[4] = (uint64_t)sub_1002D5908;
  v66 = v46;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1000147F0;
  aBlock[3] = (uint64_t)&unk_1008FA7E8;
  v49 = _Block_copy(aBlock);
  v50 = v66;
  swift_unknownObjectRetain(v48);
  sub_10002ACF0(v47, a3);
  swift_release(v50);
  v51 = v62;
  static DispatchQoS.unspecified.getter(v52);
  aBlock[0] = (uint64_t)_swiftEmptyArrayStorage;
  v53 = sub_100008E8C();
  v54 = sub_10004CFD4((uint64_t *)&unk_1009DB460);
  v55 = sub_100030B34((unint64_t *)&qword_1009D48F0, (uint64_t *)&unk_1009DB460, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v54, v55, v5, v53);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v51, v7, v49);
  _Block_release(v49);

  (*(void (**)(char *, uint64_t))(v63 + 8))(v7, v5);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v51, v8);
}

void sub_1002D32FC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  id v13;
  void *v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  double v20;
  void *v21;
  id v22;
  id v23;
  id v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  id v28;
  id v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  Class isa;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  void **v37;
  uint64_t v38;
  void *v39;
  void *v40;
  void *v41;
  uint64_t v42;

  v8 = static os_log_type_t.default.getter(a1);
  if (qword_1009CE210 != -1)
    swift_once(&qword_1009CE210, sub_10038B1F8);
  v9 = (void *)qword_1009DE420;
  v10 = sub_10004CFD4((uint64_t *)&unk_1009D1970);
  v11 = swift_allocObject(v10, 112, 7);
  *(_OWORD *)(v11 + 16) = xmmword_10070FC00;
  v12 = v9;
  v13 = objc_msgSend(a1, "assetID");
  if (v13)
  {
    v14 = v13;
    v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
    v17 = v16;

  }
  else
  {
    v15 = 0;
    v17 = 0;
  }
  *(_QWORD *)(v11 + 56) = &type metadata for String;
  *(_QWORD *)(v11 + 64) = sub_10002BE50();
  v18 = 0x3E6C696E3CLL;
  if (v17)
    v18 = v15;
  v19 = 0xE500000000000000;
  if (v17)
    v19 = v17;
  *(_QWORD *)(v11 + 32) = v18;
  *(_QWORD *)(v11 + 40) = v19;
  *(_QWORD *)(v11 + 96) = sub_10004CFD4(&qword_1009D81D8);
  *(_QWORD *)(v11 + 104) = sub_100030B34((unint64_t *)&unk_1009D81E0, &qword_1009D81D8, (uint64_t)&protocol conformance descriptor for [A : B]);
  *(_QWORD *)(v11 + 72) = a2;
  *(_QWORD *)&v20 = swift_bridgeObjectRetain(a2).n128_u64[0];
  os_log(_:dso:log:_:_:)(v8, &_mh_execute_header, v12, "Show asset: %@ with options: %@", 31, 2, v11, v20);

  swift_bridgeObjectRelease(v11);
  v21 = (void *)objc_opt_self(BKAppDelegate);
  v22 = objc_msgSend(v21, "currentSceneController");
  v23 = v22;
  if (v22)
  {
    v24 = objc_msgSend(v22, "newShowAssetTransaction");
    v25 = swift_allocObject(&unk_1008FA870, 24, 7);
    *(_QWORD *)(v25 + 16) = a1;
    v41 = sub_1002D593C;
    v42 = v25;
    v37 = _NSConcreteStackBlock;
    v38 = 1107296256;
    v39 = sub_1000147F0;
    v40 = &unk_1008FA888;
    v26 = _Block_copy(&v37);
    v27 = v42;
    swift_unknownObjectRetain(v24);
    swift_unknownObjectRetain(a1);
    objc_msgSend(v24, "whenCancelled:", v26, swift_release(v27).n128_f64[0]);
    swift_unknownObjectRelease(v24);
    _Block_release(v26);
  }
  else
  {
    v24 = 0;
  }
  v28 = objc_msgSend(v21, "sceneManager");
  v29 = objc_msgSend(v28, "bookPresenter");

  v30 = objc_msgSend(a1, "assetID");
  sub_1004ED1BC(a2);
  v32 = v31;
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v32);
  v34 = swift_allocObject(&unk_1008FA820, 32, 7);
  *(_QWORD *)(v34 + 16) = a3;
  *(_QWORD *)(v34 + 24) = a4;
  v41 = sub_10021F0CC;
  v42 = v34;
  v37 = _NSConcreteStackBlock;
  v38 = 1107296256;
  v39 = sub_1005A6BAC;
  v40 = &unk_1008FA838;
  v35 = _Block_copy(&v37);
  v36 = v42;
  sub_10002ACF0(a3, a4);
  objc_msgSend(v29, "showAssetWithTransaction:assetID:location:options:completion:", v24, v30, 0, isa, v35, swift_release(v36).n128_f64[0]);
  _Block_release(v35);
  swift_unknownObjectRelease(v23);
  swift_unknownObjectRelease(v24);
  swift_unknownObjectRelease(v29);

}

double sub_1002D36C8(void *a1)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  id v7;
  void *v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  double result;

  v2 = static os_log_type_t.default.getter(a1);
  if (qword_1009CE210 != -1)
    swift_once(&qword_1009CE210, sub_10038B1F8);
  v3 = (void *)qword_1009DE420;
  v4 = sub_10004CFD4((uint64_t *)&unk_1009D1970);
  v5 = swift_allocObject(v4, 72, 7);
  *(_OWORD *)(v5 + 16) = xmmword_10070CCA0;
  v6 = v3;
  v7 = objc_msgSend(a1, "assetID");
  if (v7)
  {
    v8 = v7;
    v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(v7);
    v11 = v10;

  }
  else
  {
    v9 = 0;
    v11 = 0;
  }
  *(_QWORD *)(v5 + 56) = &type metadata for String;
  *(_QWORD *)(v5 + 64) = sub_10002BE50();
  v12 = 0x3E6C696E3CLL;
  if (v11)
    v12 = v9;
  v13 = 0xE500000000000000;
  if (v11)
    v13 = v11;
  *(_QWORD *)(v5 + 32) = v12;
  *(_QWORD *)(v5 + 40) = v13;
  os_log(_:dso:log:_:_:)(v2, &_mh_execute_header, v6, "Playback tx cancelled %@", 24, 2, v5);

  *(_QWORD *)&result = swift_bridgeObjectRelease(v5).n128_u64[0];
  return result;
}

void sub_1002D37FC(void *a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  _QWORD *v7;
  void *v8;
  _QWORD *v9;
  char *v10;
  id v11;
  id v12;
  void *v13;
  unint64_t v14;
  unint64_t v15;
  id v16;
  void *v17;
  unint64_t v18;
  unint64_t v19;
  NSString v20;
  NSString v21;
  id v22;
  id v23;
  _QWORD *v24;
  void *v25;
  _QWORD *v26;
  id v27;
  char *v28;
  id v29;
  _QWORD v30[5];
  _QWORD *v31;

  v7 = (_QWORD *)swift_allocObject(&unk_1008FA668, 48, 7);
  v7[2] = a1;
  v7[3] = v3;
  v7[4] = a2;
  v7[5] = a3;
  v8 = *(void **)&v3[OBJC_IVAR____TtC5Books17CarPlayInteractor_persistenceController];
  v9 = (_QWORD *)swift_allocObject(&unk_1008FA690, 40, 7);
  v9[2] = v8;
  v9[3] = sub_1002D5718;
  v9[4] = v7;
  swift_unknownObjectRetain(a1);
  v10 = v3;
  v11 = v8;
  swift_retain(v7);
  sub_10002ACF0(a2, a3);
  v12 = objc_msgSend(a1, "assetID");
  if (v12)
  {
    v13 = v12;
    static String._unconditionallyBridgeFromObjectiveC(_:)(v12);
    v15 = v14;

  }
  else
  {
    v15 = 0xE000000000000000;
  }
  v16 = objc_msgSend(a1, "title");
  if (v16)
  {
    v17 = v16;
    static String._unconditionallyBridgeFromObjectiveC(_:)(v16);
    v19 = v18;

  }
  else
  {
    v19 = 0xE000000000000000;
  }
  v20 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v15);
  v21 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v19);
  v22 = objc_msgSend((id)objc_opt_self(BKMLAudiobookIdentifier), "identifierFromAssetID:albumTitle:", v20, v21);

  v23 = objc_msgSend(objc_allocWithZone((Class)BKMLAudiobookProducer), "initWithStoreDemoMode:", 0);
  v24 = (_QWORD *)swift_allocObject(&unk_1008FA6B8, 64, 7);
  v24[2] = v10;
  v24[3] = sub_1002D5750;
  v24[4] = v9;
  v24[5] = v22;
  v24[6] = a2;
  v24[7] = a3;
  v30[4] = sub_1002D57A0;
  v31 = v24;
  v30[0] = _NSConcreteStackBlock;
  v30[1] = 1107296256;
  v30[2] = sub_10034502C;
  v30[3] = &unk_1008FA6D0;
  v25 = _Block_copy(v30);
  v26 = v31;
  v27 = v22;
  v28 = v10;
  sub_10002ACF0(a2, a3);
  v29 = v27;
  swift_retain(v9);
  objc_msgSend(v23, "audiobookForIdentifier:completion:", v29, v25, swift_release(v26).n128_f64[0]);
  _Block_release(v25);
  swift_release(v7);
  swift_release(v9);

}

void sub_1002D3A9C(uint64_t a1, void *a2, void *a3, uint64_t a4, void (*a5)(id), uint64_t a6, double a7)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  id v24;
  double v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  id v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  void *v38;
  id v39;
  double v40[2];

  *(_QWORD *)&v40[1] = a6;
  v13 = type metadata accessor for DispatchPredicate(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (_QWORD *)((char *)v40 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  v17 = sub_100009E04(0, (unint64_t *)&qword_1009CEC30, OS_dispatch_queue_ptr);
  *v16 = static OS_dispatch_queue.main.getter(v17);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v14 + 104))(v16, enum case for DispatchPredicate.onQueue(_:), v13);
  v18 = _dispatchPreconditionTest(_:)(v16);
  v19 = (*(uint64_t (**)(_QWORD *, uint64_t))(v14 + 8))(v16, v13);
  if ((v18 & 1) == 0)
  {
    __break(1u);
    goto LABEL_14;
  }
  if (a2)
  {
    a2 = (void *)_convertErrorToNSError(_:)(a2);
    v18 = static os_log_type_t.error.getter(a2);
    if (qword_1009CE210 == -1)
    {
LABEL_4:
      v20 = (void *)qword_1009DE420;
      v21 = sub_10004CFD4((uint64_t *)&unk_1009D1970);
      v22 = swift_allocObject(v21, 72, 7);
      *(_OWORD *)(v22 + 16) = xmmword_10070CCA0;
      *(_QWORD *)(v22 + 56) = sub_100009E04(0, (unint64_t *)&qword_1009DA3B0, NSError_ptr);
      *(_QWORD *)(v22 + 64) = sub_1002D57B0(&qword_1009D81C0, (unint64_t *)&qword_1009DA3B0, NSError_ptr);
      *(_QWORD *)(v22 + 32) = a2;
      v23 = v20;
      v24 = a2;
      os_log(_:dso:log:_:_:)(v18, &_mh_execute_header, v23, "Failed to lookup bookmark time, setting time to zero. Error: %@", 63, 2, v22);

      swift_bridgeObjectRelease(v22);
      a7 = 0.0;
      goto LABEL_8;
    }
LABEL_14:
    swift_once(&qword_1009CE210, sub_10038B1F8);
    goto LABEL_4;
  }
  v26 = static os_log_type_t.default.getter(v19);
  if (qword_1009CE210 != -1)
    swift_once(&qword_1009CE210, sub_10038B1F8);
  v27 = (void *)qword_1009DE420;
  v28 = sub_10004CFD4((uint64_t *)&unk_1009D1970);
  v29 = swift_allocObject(v28, 72, 7);
  *(_OWORD *)(v29 + 16) = xmmword_10070CCA0;
  *(_QWORD *)(v29 + 56) = &type metadata for Double;
  *(_QWORD *)(v29 + 64) = &protocol witness table for Double;
  *(double *)(v29 + 32) = a7;
  v30 = v27;
  os_log(_:dso:log:_:_:)(v26, &_mh_execute_header, v30, "_openBackground: bookmarkTime=%.1lf", v40[0]);

  *(_QWORD *)&v25 = swift_bridgeObjectRelease(v29).n128_u64[0];
LABEL_8:
  v31 = objc_msgSend(a3, "assetID", v25);
  if (v31)
  {
    v32 = v31;
    v33 = static String._unconditionallyBridgeFromObjectiveC(_:)(v31);
    v35 = v34;

    v36 = (uint64_t *)(*(_QWORD *)(a4 + OBJC_IVAR____TtC5Books17CarPlayInteractor_dataManager)
                    + OBJC_IVAR____TtC5Books18CarPlayDataManager_lastBookAssetID);
    v37 = v36[1];
    *v36 = v33;
    v36[1] = v35;
    swift_bridgeObjectRelease(v37);
  }
  v38 = *(void **)(*(_QWORD *)(a4 + OBJC_IVAR____TtC5Books17CarPlayInteractor_dataManager)
                 + OBJC_IVAR____TtC5Books18CarPlayDataManager_player);
  objc_msgSend((id)swift_unknownObjectRetain(v38), "setCurrentAudiobook:initialPosition:", a1, a7);
  v39 = objc_msgSend(v38, "play");
  if (a5)
    a5(v39);
  swift_unknownObjectRelease(v38);
}

void sub_1002D3DFC(uint64_t a1, id a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  id v9;
  _QWORD *v10;
  void *v11;
  _QWORD *v12;
  _QWORD v13[5];
  _QWORD *v14;

  v8 = static os_log_type_t.default.getter(objc_msgSend(a2, "registerAEPersistencePlugins"));
  if (qword_1009CE210 != -1)
    swift_once(&qword_1009CE210, sub_10038B1F8);
  v9 = (id)qword_1009DE420;
  os_log(_:dso:log:_:_:)(v8, &_mh_execute_header, v9, "checking persistence controller for bookmark time", 49, 2, _swiftEmptyArrayStorage);

  v10 = (_QWORD *)swift_allocObject(&unk_1008FA758, 40, 7);
  v10[2] = a3;
  v10[3] = a4;
  v10[4] = a1;
  v13[4] = sub_1002D585C;
  v14 = v10;
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 1107296256;
  v13[2] = sub_1002A7DA4;
  v13[3] = &unk_1008FA770;
  v11 = _Block_copy(v13);
  v12 = v14;
  swift_retain(a4);
  swift_unknownObjectRetain(a1);
  objc_msgSend(a2, "bookmarkTimeForAudiobook:completion:", a1, v11, swift_release(v12).n128_f64[0]);
  _Block_release(v11);
}

double sub_1002D3F58(double a1, double a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  double v11;
  double v12;
  uint64_t v13;
  double result;

  v11 = a1 - a2;
  if (v11 < 0.0)
    v12 = 0.0;
  else
    v12 = v11;
  sub_100009E04(0, (unint64_t *)&qword_1009CEC30, OS_dispatch_queue_ptr);
  v13 = swift_allocObject(&unk_1008FA7A8, 56, 7);
  *(_QWORD *)(v13 + 16) = a5;
  *(_QWORD *)(v13 + 24) = a6;
  *(_QWORD *)(v13 + 32) = a7;
  *(double *)(v13 + 40) = v12;
  *(_QWORD *)(v13 + 48) = a4;
  swift_retain(a6);
  swift_unknownObjectRetain(a7);
  swift_errorRetain(a4);
  static OS_dispatch_queue.dispatchAsyncOnMainIfNeeded(block:)(sub_1002D589C, v13);
  *(_QWORD *)&result = swift_release(v13).n128_u64[0];
  return result;
}

void sub_1002D401C(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, void *a6, void (*a7)(__n128), uint64_t a8)
{
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  _QWORD *v22;
  void *v23;
  _QWORD *v24;
  id v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(__n128);
  uint64_t v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  unint64_t v38;
  unint64_t v39;
  id v40;
  uint64_t v41;
  unint64_t v42;
  void *v43;
  id v44;
  __n128 v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  void (*v49)(__n128);
  _QWORD aBlock[5];
  _QWORD *v51;
  _QWORD v52[3];
  char v53[8];

  v46 = a8;
  v48 = a6;
  v49 = a7;
  v13 = type metadata accessor for DispatchWorkItemFlags(0);
  v47 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v15 = (char *)&v46 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for DispatchQoS(0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v20 = (char *)&v46 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a1 || a2)
  {
    v31 = static os_log_type_t.error.getter(v18);
    if (qword_1009CE210 != -1)
      swift_once(&qword_1009CE210, sub_10038B1F8);
    v32 = (void *)qword_1009DE420;
    v33 = sub_10004CFD4((uint64_t *)&unk_1009D1970);
    v34 = swift_allocObject(v33, 112, 7);
    *(_OWORD *)(v34 + 16) = xmmword_10070FC00;
    if (a2)
    {
      swift_getErrorValue(a2, v53, v52);
      v35 = v52[1];
      v36 = v52[2];
      v37 = v32;
      a2 = Error.localizedDescription.getter(v35, v36);
      v39 = v38;
    }
    else
    {
      v40 = v32;
      v39 = 0;
    }
    *(_QWORD *)(v34 + 56) = &type metadata for String;
    *(_QWORD *)(v34 + 64) = sub_10002BE50();
    v41 = 0x3E6C696E3CLL;
    if (v39)
      v41 = a2;
    v42 = 0xE500000000000000;
    if (v39)
      v42 = v39;
    *(_QWORD *)(v34 + 32) = v41;
    *(_QWORD *)(v34 + 40) = v42;
    *(_QWORD *)(v34 + 96) = sub_100009E04(0, &qword_1009D81C8, BKMLAudiobookIdentifier_ptr);
    *(_QWORD *)(v34 + 104) = sub_1002D57B0(&qword_1009D81D0, &qword_1009D81C8, BKMLAudiobookIdentifier_ptr);
    v43 = v48;
    *(_QWORD *)(v34 + 72) = v48;
    v44 = v43;
    os_log(_:dso:log:_:_:)(v31, &_mh_execute_header, v32, "Error %@ producing audiobook from identifer %@", 46, 2, v34, v46);

    v45 = swift_bridgeObjectRelease(v34);
    if (v49)
      v49(v45);
  }
  else
  {
    sub_100009E04(0, (unint64_t *)&qword_1009CEC30, OS_dispatch_queue_ptr);
    v21 = swift_unknownObjectRetain(a1);
    v49 = (void (*)(__n128))static OS_dispatch_queue.main.getter(v21);
    v22 = (_QWORD *)swift_allocObject(&unk_1008FA708, 48, 7);
    v22[2] = a1;
    v22[3] = a3;
    v22[4] = a4;
    v22[5] = a5;
    aBlock[4] = sub_1002D5824;
    v51 = v22;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1000147F0;
    aBlock[3] = &unk_1008FA720;
    v23 = _Block_copy(aBlock);
    v24 = v51;
    swift_unknownObjectRetain(a1);
    v25 = a3;
    swift_retain(a5);
    swift_release(v24);
    static DispatchQoS.unspecified.getter(v26);
    aBlock[0] = _swiftEmptyArrayStorage;
    v27 = sub_100008E8C();
    v28 = sub_10004CFD4((uint64_t *)&unk_1009DB460);
    v29 = sub_100030B34((unint64_t *)&qword_1009D48F0, (uint64_t *)&unk_1009DB460, (uint64_t)&protocol conformance descriptor for [A]);
    dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v28, v29, v13, v27);
    v30 = v49;
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v20, v15, v23);
    _Block_release(v23);
    swift_unknownObjectRelease(a1);

    (*(void (**)(char *, uint64_t))(v47 + 8))(v15, v13);
    (*(void (**)(char *, uint64_t))(v17 + 8))(v20, v16);
  }
}

uint64_t sub_1002D43BC(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t v6;
  uint64_t result;
  void *v8;
  void *v9;
  void *v10;
  id v11;
  id v12;

  v6 = objc_opt_self(BKMLAudiobook);
  result = swift_dynamicCastObjCClass(a1, v6);
  if (result)
  {
    v8 = (void *)result;
    v9 = *(void **)(*(_QWORD *)(a2 + OBJC_IVAR____TtC5Books17CarPlayInteractor_dataManager)
                  + OBJC_IVAR____TtC5Books18CarPlayDataManager_player);
    v10 = (void *)objc_opt_self(MPMediaItem);
    swift_unknownObjectRetain(a1);
    swift_unknownObjectRetain(v9);
    v11 = objc_msgSend(v8, "representativeItem");
    v12 = objc_msgSend(v10, "bk_audibleDRMGroupIDForItem:", v11);

    objc_msgSend(v9, "setAudibleDRMGroupID:", v12);
    swift_unknownObjectRelease(v9);
    a3(a1);
    return swift_unknownObjectRelease(a1);
  }
  return result;
}

id sub_1002D44F0()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CarPlayInteractor();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for CarPlayInteractor()
{
  return objc_opt_self(_TtC5Books17CarPlayInteractor);
}

void sub_1002D4588(void *a1, void (*a2)(id), uint64_t a3)
{
  char *v3;
  void *v6;
  os_log_type_t v7;
  void *v8;
  os_log_type_t v9;
  char *v10;
  NSObject *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t ObjectType;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  id v19;
  NSString v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  id v33;
  id v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  void *v38;
  id v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  id v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v51;
  unint64_t v52;
  void (*v53)(id);
  void (*v54)(id);
  char *v55;
  void *v56;
  uint64_t v57;
  uint64_t v58;

  v6 = a1;
  v7 = static os_log_type_t.default.getter(a1);
  if (qword_1009CE210 != -1)
    swift_once(&qword_1009CE210, sub_10038B1F8);
  v8 = (void *)qword_1009DE420;
  v9 = v7;
  v56 = v6;
  if (os_log_type_enabled((os_log_t)qword_1009DE420, v7))
  {
    v10 = v3;
    v55 = v3;
    v11 = v8;
    v12 = swift_slowAlloc(22, -1);
    v13 = swift_slowAlloc(64, -1);
    v58 = v13;
    *(_DWORD *)v12 = 136315394;
    ObjectType = swift_getObjectType();
    v15 = _typeName(_:qualified:)(ObjectType, 0);
    v17 = v16;
    v57 = sub_100040F58(v15, v16, &v58);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v57, &v58, v12 + 4, v12 + 12);

    swift_bridgeObjectRelease(v17);
    *(_WORD *)(v12 + 12) = 2080;
    v57 = sub_100040F58(0xD00000000000001ELL, 0x80000001007BCCF0, &v58);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v57, &v58, v12 + 14, v12 + 22);
    _os_log_impl((void *)&_mh_execute_header, v11, v9, "%s %s", (uint8_t *)v12, 0x16u);
    swift_arrayDestroy(v13, 2, (char *)&type metadata for Any + 8);
    v18 = v13;
    v6 = v56;
    swift_slowDealloc(v18, -1, -1);
    swift_slowDealloc(v12, -1, -1);

    v3 = v55;
  }
  if ((objc_msgSend(v6, "isLocal") & 1) == 0
    && objc_msgSend((id)objc_opt_self(BKReachability), "isOffline"))
  {
    v19 = objc_allocWithZone((Class)NSError);
    v20 = String._bridgeToObjectiveC()();
    v21 = objc_msgSend(v19, "initWithDomain:code:userInfo:", v20, 1, 0);

    v23 = static os_log_type_t.error.getter(v22);
    v24 = (void *)qword_1009DE420;
    v25 = sub_10004CFD4((uint64_t *)&unk_1009D1970);
    v26 = swift_allocObject(v25, 152, 7);
    *(_OWORD *)(v26 + 16) = xmmword_100712B60;
    v27 = v24;
    v28 = objc_msgSend(v21, "domain");
    v29 = static String._unconditionallyBridgeFromObjectiveC(_:)(v28);
    v31 = v30;

    *(_QWORD *)(v26 + 56) = &type metadata for String;
    *(_QWORD *)(v26 + 64) = sub_10002BE50();
    *(_QWORD *)(v26 + 32) = v29;
    *(_QWORD *)(v26 + 40) = v31;
    v32 = objc_msgSend(v21, "code");
    *(_QWORD *)(v26 + 96) = &type metadata for Int;
    *(_QWORD *)(v26 + 104) = &protocol witness table for Int;
    *(_QWORD *)(v26 + 72) = v32;
    *(_QWORD *)(v26 + 136) = sub_100009E04(0, (unint64_t *)&qword_1009DA3B0, NSError_ptr);
    *(_QWORD *)(v26 + 144) = sub_1002D57B0(&qword_1009D81C0, (unint64_t *)&qword_1009DA3B0, NSError_ptr);
    *(_QWORD *)(v26 + 112) = v21;
    v33 = v21;
    os_log(_:dso:log:_:_:)(v23, &_mh_execute_header, v27, "Interactor: requested playback for cloud asset while offline with error: {d=%{public}@ c=%ld, (%@)}", 99, 2, v26);

    swift_bridgeObjectRelease(v26);
    if (a2)
    {
      v34 = v33;
      a2(v33);

    }
    else
    {

    }
    return;
  }
  v35 = swift_allocObject(&unk_1008FA618, 24, 7);
  swift_unknownObjectWeakInit(v35 + 16);
  v36 = (_QWORD *)swift_allocObject(&unk_1008FA640, 40, 7);
  v36[2] = v35;
  v36[3] = a2;
  v37 = *(_QWORD *)&v3[OBJC_IVAR____TtC5Books17CarPlayInteractor_dataManager];
  v36[4] = a3;
  v38 = *(void **)(v37 + OBJC_IVAR____TtC5Books18CarPlayDataManager_player);
  swift_retain(v35);
  swift_unknownObjectRetain(v38);
  sub_10002ACF0((uint64_t)a2, a3);
  v39 = objc_msgSend(v6, "assetID");
  if (!v39)
  {
LABEL_19:
    swift_release(v35);
    swift_retain(v36);
    sub_1002D2618(v6, (uint64_t)sub_1002D56D0, (uint64_t)v36);
    swift_unknownObjectRelease(v38);
    swift_release_n(v36, 2);
    return;
  }
  v40 = v39;
  v41 = static String._unconditionallyBridgeFromObjectiveC(_:)(v39);
  v43 = v42;

  v44 = objc_msgSend(v38, "currentAudiobook");
  if (!v44)
  {
    swift_bridgeObjectRelease(v43);
    goto LABEL_18;
  }
  v45 = v44;
  v54 = a2;
  v46 = objc_msgSend(v44, "assetID");
  v47 = static String._unconditionallyBridgeFromObjectiveC(_:)(v46);
  v49 = v48;

  if (v41 == v47 && v43 == v49)
  {
    v52 = swift_bridgeObjectRelease_n(v43, 2).n128_u64[0];
    v53 = v54;
  }
  else
  {
    v51 = _stringCompareWithSmolCheck(_:_:expecting:)(v41, v43, v47, v49, 0);
    swift_bridgeObjectRelease(v49);
    v52 = swift_bridgeObjectRelease(v43).n128_u64[0];
    v53 = v54;
    if ((v51 & 1) == 0)
    {
      swift_unknownObjectRelease(v45);
LABEL_18:
      v6 = v56;
      goto LABEL_19;
    }
  }
  if (!objc_msgSend(v38, "state", *(double *)&v52)
    || objc_msgSend(v38, "state") == (id)4
    || objc_msgSend(v38, "state") == (id)3)
  {
    objc_msgSend(v38, "play");
  }
  sub_1002D4B64(v35, (void (*)(_QWORD, __n128))v53);
  swift_unknownObjectRelease(v45);
  swift_unknownObjectRelease(v38);
  swift_release(v36);
  swift_release(v35);
}

void sub_1002D4B64(uint64_t a1, void (*a2)(_QWORD, __n128))
{
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  _BYTE v9[24];

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v9, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (void *)Strong;
    v6 = swift_unknownObjectWeakLoadStrong(Strong + OBJC_IVAR____TtC5Books17CarPlayInteractor_delegate);
    if (v6)
    {
      v8 = v6;
      sub_10031CD0C(v6);
      v7 = swift_unknownObjectRelease(v8);
    }
    if (a2)
      a2(0, v7);

  }
}

uint64_t sub_1002D4BF4(uint64_t a1)
{
  void *v1;
  unint64_t v2;

  v1 = *(void **)(*(_QWORD *)(a1 + OBJC_IVAR____TtC5Books17CarPlayInteractor_dataManager)
                + OBJC_IVAR____TtC5Books18CarPlayDataManager_player);
  v2 = (unint64_t)objc_msgSend((id)swift_unknownObjectRetain(v1), "playbackSpeed");
  if (v2 <= 5)
    objc_msgSend(v1, "setPlaybackSpeed:", qword_1007180C0[v2]);
  return swift_unknownObjectRelease(v1);
}

double sub_1002D4C64(uint64_t a1)
{
  char *v1;
  os_log_type_t v2;
  void *v3;
  char *v4;
  NSObject *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t ObjectType;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t Strong;
  double result;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;

  v2 = static os_log_type_t.default.getter(a1);
  if (qword_1009CE210 != -1)
    swift_once(&qword_1009CE210, sub_10038B1F8);
  v3 = (void *)qword_1009DE420;
  if (os_log_type_enabled((os_log_t)qword_1009DE420, v2))
  {
    v4 = v1;
    v5 = v3;
    v6 = swift_slowAlloc(22, -1);
    v7 = swift_slowAlloc(64, -1);
    v20 = v7;
    *(_DWORD *)v6 = 136315394;
    ObjectType = swift_getObjectType();
    v9 = _typeName(_:qualified:)(ObjectType, 0);
    v11 = v10;
    v19 = sub_100040F58(v9, v10, &v20);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v19, &v20, v6 + 4, v6 + 12);

    swift_bridgeObjectRelease(v11);
    *(_WORD *)(v6 + 12) = 2080;
    v19 = sub_100040F58(0xD00000000000001CLL, 0x80000001007BD060, &v20);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v19, &v20, v6 + 14, v6 + 22);
    _os_log_impl((void *)&_mh_execute_header, v5, v2, "%s %s", (uint8_t *)v6, 0x16u);
    swift_arrayDestroy(v7, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v7, -1, -1);
    swift_slowDealloc(v6, -1, -1);

  }
  Strong = swift_unknownObjectWeakLoadStrong(&v1[OBJC_IVAR____TtC5Books17CarPlayInteractor_delegate]);
  if (Strong)
  {
    v14 = Strong;
    v15 = swift_unknownObjectWeakLoadStrong(Strong + OBJC_IVAR____TtC5Books16CarPlayPresenter_delegate);
    if (v15)
    {
      v16 = (void *)v15;
      sub_100009E04(0, (unint64_t *)&qword_1009CEC30, OS_dispatch_queue_ptr);
      v17 = swift_allocObject(&unk_1008FA938, 24, 7);
      *(_QWORD *)(v17 + 16) = v16;
      v18 = v16;
      static OS_dispatch_queue.dispatchAsyncOnMainIfNeeded(block:)(sub_1002D59B4, v17);
      swift_unknownObjectRelease(v14);
      swift_unknownObjectRelease(v18);
      *(_QWORD *)&result = swift_release(v17).n128_u64[0];
    }
    else
    {
      *(_QWORD *)&result = swift_unknownObjectRelease(v14).n128_u64[0];
    }
  }
  return result;
}

void sub_1002D4ED4(uint64_t a1)
{
  void *v1;
  os_log_type_t v3;
  void *v4;
  id v5;
  id v6;
  NSObject *v7;
  uint64_t v8;
  uint64_t ObjectType;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  void *v16;
  id v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint8_t *v30;
  NSObject *log;
  uint64_t v32;
  uint64_t v33;

  v3 = static os_log_type_t.default.getter(a1);
  if (qword_1009CE210 != -1)
    swift_once(&qword_1009CE210, sub_10038B1F8);
  v4 = (void *)qword_1009DE420;
  if (!os_log_type_enabled((os_log_t)qword_1009DE420, v3))
    goto LABEL_22;
  v5 = v1;
  swift_bridgeObjectRetain_n(a1, 2);
  v6 = v5;
  v7 = v4;
  v8 = swift_slowAlloc(32, -1);
  v29 = swift_slowAlloc(96, -1);
  v33 = v29;
  *(_DWORD *)v8 = 136315650;
  ObjectType = swift_getObjectType();
  v10 = _typeName(_:qualified:)(ObjectType, 0);
  v12 = v11;
  v32 = sub_100040F58(v10, v11, &v33);
  UnsafeMutableRawBufferPointer.copyMemory(from:)(&v32, &v33, v8 + 4, v8 + 12);

  swift_bridgeObjectRelease(v12);
  *(_WORD *)(v8 + 12) = 2080;
  v32 = sub_100040F58(0xD00000000000001BLL, 0x80000001007BD080, &v33);
  UnsafeMutableRawBufferPointer.copyMemory(from:)(&v32, &v33, v8 + 14, v8 + 22);
  v30 = (uint8_t *)v8;
  *(_WORD *)(v8 + 22) = 2080;
  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v28 = a1;
    else
      v28 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v13 = _CocoaArrayWrapper.endIndex.getter(v28);
  }
  else
  {
    v13 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(a1);
  }
  log = v7;
  if (!v13)
  {
    v15 = _swiftEmptyArrayStorage;
LABEL_21:
    swift_bridgeObjectRelease(a1);
    v25 = Array.description.getter(v15, &type metadata for String);
    v27 = v26;
    swift_bridgeObjectRelease(v15);
    v32 = sub_100040F58(v25, v27, &v33);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v32, &v33, v30 + 24, v30 + 32);
    swift_bridgeObjectRelease_n(a1, 2);
    swift_bridgeObjectRelease(v27);
    _os_log_impl((void *)&_mh_execute_header, log, v3, "%s %s assets: %s", v30, 0x20u);
    swift_arrayDestroy(v29, 3, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v29, -1, -1);
    swift_slowDealloc(v30, -1, -1);

LABEL_22:
    sub_1002D18D4(a1);
    return;
  }
  if (v13 >= 1)
  {
    v14 = 0;
    v15 = _swiftEmptyArrayStorage;
    do
    {
      if ((a1 & 0xC000000000000001) != 0)
      {
        v16 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(v14, a1);
      }
      else
      {
        v16 = *(void **)(a1 + 8 * v14 + 32);
        swift_unknownObjectRetain(v16);
      }
      v17 = objc_msgSend(v16, "assetID");
      if (v17)
      {
        v18 = v17;
        v19 = static String._unconditionallyBridgeFromObjectiveC(_:)(v17);
        v21 = v20;
        swift_unknownObjectRelease(v16);

        if ((swift_isUniquelyReferenced_nonNull_native(v15) & 1) == 0)
          v15 = sub_100043ED0(0, v15[2] + 1, 1, v15);
        v23 = v15[2];
        v22 = v15[3];
        if (v23 >= v22 >> 1)
          v15 = sub_100043ED0((_QWORD *)(v22 > 1), v23 + 1, 1, v15);
        v15[2] = v23 + 1;
        v24 = &v15[2 * v23];
        v24[4] = v19;
        v24[5] = v21;
      }
      else
      {
        swift_unknownObjectRelease(v16);
      }
      ++v14;
    }
    while (v13 != v14);
    goto LABEL_21;
  }
  __break(1u);
}

double sub_1002D528C(void *a1)
{
  char *v1;
  os_log_type_t v3;
  void *v4;
  char *v5;
  NSObject *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t ObjectType;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t Strong;
  double result;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v3 = static os_log_type_t.default.getter(a1);
  if (qword_1009CE210 != -1)
    swift_once(&qword_1009CE210, sub_10038B1F8);
  v4 = (void *)qword_1009DE420;
  if (os_log_type_enabled((os_log_t)qword_1009DE420, v3))
  {
    v5 = v1;
    v6 = v4;
    v7 = swift_slowAlloc(22, -1);
    v8 = swift_slowAlloc(64, -1);
    v17 = v8;
    *(_DWORD *)v7 = 136315394;
    ObjectType = swift_getObjectType();
    v10 = _typeName(_:qualified:)(ObjectType, 0);
    v12 = v11;
    v16 = sub_100040F58(v10, v11, &v17);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v16, &v17, v7 + 4, v7 + 12);

    swift_bridgeObjectRelease(v12);
    *(_WORD *)(v7 + 12) = 2080;
    v16 = sub_100040F58(0xD00000000000001BLL, 0x80000001007BD040, &v17);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v16, &v17, v7 + 14, v7 + 22);
    _os_log_impl((void *)&_mh_execute_header, v6, v3, "%s %s", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy(v8, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v8, -1, -1);
    swift_slowDealloc(v7, -1, -1);

  }
  Strong = swift_unknownObjectWeakLoadStrong(&v1[OBJC_IVAR____TtC5Books17CarPlayInteractor_delegate]);
  if (Strong)
  {
    v15 = Strong;
    sub_10031DE3C(a1);
    *(_QWORD *)&result = swift_unknownObjectRelease(v15).n128_u64[0];
  }
  return result;
}

double sub_1002D547C(uint64_t a1)
{
  uint64_t v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  char v10;
  unint64_t v11;
  double result;
  id v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  NSString v17;
  id v18;
  uint64_t Strong;
  id v20;
  void *v21;
  id v22;

  v22 = (id)_convertErrorToNSError(_:)(a1);
  v2 = objc_msgSend(v22, "domain");
  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(v2);
  v5 = v4;

  v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(BKAudiobookPlayerErrorDomain);
  if (v3 == v6 && v5 == v7)
  {
    v11 = swift_bridgeObjectRelease_n(v5, 2).n128_u64[0];
  }
  else
  {
    v9 = v7;
    v10 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v5, v6, v7, 0);
    swift_bridgeObjectRelease(v5);
    v11 = swift_bridgeObjectRelease(v9).n128_u64[0];
    if ((v10 & 1) == 0)
      goto LABEL_9;
  }
  if ((*(_BYTE *)(v1 + OBJC_IVAR____TtC5Books17CarPlayInteractor_hasShownError) & 1) != 0)
  {
LABEL_9:

    return result;
  }
  *(_BYTE *)(v1 + OBJC_IVAR____TtC5Books17CarPlayInteractor_hasShownError) = 1;
  v13 = objc_msgSend(v22, "code", *(double *)&v11);
  if (v13 == (id)5 || v13 == (id)2)
  {
    Strong = swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC5Books17CarPlayInteractor_delegate);
    if (!Strong)
      goto LABEL_9;
    v15 = Strong;
    v20 = objc_allocWithZone((Class)NSError);
    v17 = String._bridgeToObjectiveC()();
    v18 = objc_msgSend(v20, "initWithDomain:code:userInfo:", v17, 2, 0);
  }
  else
  {
    if (v13 != (id)1)
      goto LABEL_9;
    v14 = swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC5Books17CarPlayInteractor_delegate);
    if (!v14)
      goto LABEL_9;
    v15 = v14;
    v16 = objc_allocWithZone((Class)NSError);
    v17 = String._bridgeToObjectiveC()();
    v18 = objc_msgSend(v16, "initWithDomain:code:userInfo:", v17, 1, 0);
  }
  v21 = v18;

  sub_10031A470((uint64_t)v21, 0, 0);
  *(_QWORD *)&result = swift_unknownObjectRelease(v15).n128_u64[0];
  return result;
}

uint64_t sub_1002D5678()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1002D569C()
{
  _QWORD *v0;

  swift_release(v0[2]);
  if (v0[3])
    swift_release(v0[4]);
  return swift_deallocObject(v0, 40, 7);
}

void sub_1002D56D0()
{
  uint64_t v0;

  sub_1002D4B64(*(_QWORD *)(v0 + 16), *(void (**)(_QWORD, __n128))(v0 + 24));
}

uint64_t sub_1002D56DC()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  if (*(_QWORD *)(v0 + 32))
    swift_release(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

void sub_1002D5718(uint64_t a1, void *a2, double a3)
{
  uint64_t v3;

  sub_1002D3A9C(a1, a2, *(void **)(v3 + 16), *(_QWORD *)(v3 + 24), *(void (**)(id))(v3 + 32), *(_QWORD *)(v3 + 40), a3);
}

uint64_t sub_1002D5724()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

void sub_1002D5750(uint64_t a1)
{
  uint64_t v1;

  sub_1002D3DFC(a1, *(id *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32));
}

uint64_t sub_1002D575C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 32));
  if (*(_QWORD *)(v0 + 48))
    swift_release(*(_QWORD *)(v0 + 56));
  return swift_deallocObject(v0, 64, 7);
}

void sub_1002D57A0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1002D401C(a1, a2, *(void **)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(void **)(v2 + 40), *(void (**)(__n128))(v2 + 48), *(_QWORD *)(v2 + 56));
}

uint64_t sub_1002D57B0(unint64_t *a1, unint64_t *a2, _QWORD *a3)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = sub_100009E04(255, a2, a3);
    result = swift_getWitnessTable(&protocol conformance descriptor for NSObject, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1002D57F0()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  swift_release(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1002D5824()
{
  uint64_t v0;

  return sub_1002D43BC(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(void (**)(uint64_t))(v0 + 32));
}

uint64_t sub_1002D5830()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

double sub_1002D585C(uint64_t a1, uint64_t a2, double a3, double a4)
{
  uint64_t *v4;

  return sub_1002D3F58(a3, a4, a1, a2, v4[2], v4[3], v4[4]);
}

uint64_t sub_1002D5868()
{
  _QWORD *v0;

  swift_release(v0[3]);
  swift_unknownObjectRelease(v0[4]);
  swift_errorRelease(v0[6]);
  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_1002D589C()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, _QWORD, double))(v0 + 16))(*(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 48), *(double *)(v0 + 40));
}

uint64_t sub_1002D58CC()
{
  _QWORD *v0;

  swift_unknownObjectRelease(v0[2]);
  swift_bridgeObjectRelease(v0[3]);
  if (v0[4])
    swift_release(v0[5]);
  return swift_deallocObject(v0, 48, 7);
}

void sub_1002D5908()
{
  uint64_t v0;

  sub_1002D32FC(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
}

uint64_t sub_1002D5918()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

double sub_1002D593C()
{
  uint64_t v0;

  return sub_1002D36C8(*(void **)(v0 + 16));
}

void sub_1002D5948()
{
  uint64_t v0;

  sub_1002D2B34(*(void (**)(void))(v0 + 16));
}

uint64_t sub_1002D5950()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 24));
  swift_release(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

void sub_1002D5984()
{
  uint64_t v0;

  sub_1002D2C40(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
}

uint64_t sub_1002D5990()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

double sub_1002D59B4()
{
  uint64_t v0;

  return sub_10047EF50(*(char **)(v0 + 16));
}

_QWORD *sub_1002D59EC(uint64_t a1, uint64_t *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t *v25;
  uint64_t *v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t *v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  unsigned int (*v58)(char *, uint64_t, uint64_t);
  uint64_t v59;
  int *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  char *v84;
  uint64_t v85;
  char *v86;
  char *v87;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v17 = *a2;
    *(_QWORD *)a1 = *a2;
    v4 = (_QWORD *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = *(_OWORD *)(a2 + 3);
    *(_OWORD *)(a1 + 24) = v7;
    (**(void (***)(uint64_t, uint64_t *))(v7 - 8))(a1, a2);
    v8 = a2[6];
    v4[5] = a2[5];
    v4[6] = v8;
    v9 = a2[7];
    v10 = a2[8];
    v4[7] = v9;
    v4[8] = v10;
    v11 = a3[8];
    v12 = (_QWORD *)((char *)v4 + v11);
    v13 = (uint64_t *)((char *)a2 + v11);
    swift_retain(v8);
    swift_unknownObjectRetain(v9);
    swift_retain(v10);
    v14 = sub_10004CFD4((uint64_t *)&unk_1009D8200);
    if (swift_getEnumCaseMultiPayload(v13, v14) == 1)
    {
      v15 = type metadata accessor for ColorScheme(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v12, v13, v15);
      v16 = 1;
    }
    else
    {
      v18 = *v13;
      *v12 = *v13;
      swift_retain(v18);
      v16 = 0;
    }
    swift_storeEnumTagMultiPayload(v12, v14, v16);
    v19 = a3[9];
    v20 = a3[10];
    v21 = (_QWORD *)((char *)v4 + v19);
    v22 = (uint64_t)a2 + v19;
    v24 = *(void **)v22;
    v23 = *(_QWORD *)(v22 + 8);
    *v21 = v24;
    v21[1] = v23;
    v25 = (_QWORD *)((char *)v4 + v20);
    v26 = (uint64_t *)((char *)a2 + v20);
    v27 = v24;
    v28 = sub_10004CFD4(&qword_1009D26B8);
    if (swift_getEnumCaseMultiPayload(v26, v28) == 1)
    {
      v29 = type metadata accessor for UserInterfaceSizeClass(0);
      v30 = *(_QWORD *)(v29 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v30 + 48))(v26, 1, v29))
      {
        v31 = sub_10004CFD4((uint64_t *)&unk_1009D8210);
        memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
        v32 = 1;
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v30 + 16))(v25, v26, v29);
        v32 = 1;
        (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v25, 0, 1, v29);
      }
    }
    else
    {
      v33 = *v26;
      *v25 = *v26;
      swift_retain(v33);
      v32 = 0;
    }
    swift_storeEnumTagMultiPayload(v25, v28, v32);
    v34 = a3[11];
    v35 = (_QWORD *)((char *)v4 + v34);
    v36 = (uint64_t *)((char *)a2 + v34);
    if (swift_getEnumCaseMultiPayload((char *)a2 + v34, v28) == 1)
    {
      v37 = type metadata accessor for UserInterfaceSizeClass(0);
      v38 = *(_QWORD *)(v37 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v38 + 48))(v36, 1, v37))
      {
        v39 = sub_10004CFD4((uint64_t *)&unk_1009D8210);
        memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v38 + 16))(v35, v36, v37);
        (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v37);
      }
      v41 = v35;
      v42 = v28;
      v43 = 1;
    }
    else
    {
      v40 = *v36;
      *v35 = *v36;
      swift_retain(v40);
      v41 = v35;
      v42 = v28;
      v43 = 0;
    }
    swift_storeEnumTagMultiPayload(v41, v42, v43);
    v44 = a3[12];
    v45 = (_QWORD *)((char *)v4 + v44);
    v46 = (uint64_t *)((char *)a2 + v44);
    v47 = sub_10004CFD4((uint64_t *)&unk_1009EE650);
    if (swift_getEnumCaseMultiPayload(v46, v47) == 1)
    {
      v48 = type metadata accessor for LayoutDirection(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v48 - 8) + 16))(v45, v46, v48);
      v49 = v45;
      v50 = v47;
      v51 = 1;
    }
    else
    {
      v52 = *v46;
      *v45 = *v46;
      swift_retain(v52);
      v49 = v45;
      v50 = v47;
      v51 = 0;
    }
    swift_storeEnumTagMultiPayload(v49, v50, v51);
    v53 = a3[13];
    v54 = (char *)v4 + v53;
    v55 = (char *)a2 + v53;
    v56 = type metadata accessor for AccessibilityTechnologies(0);
    v57 = *(_QWORD *)(v56 - 8);
    v58 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v57 + 48);
    if (v58(v55, 1, v56))
    {
      v59 = sub_10004CFD4((uint64_t *)&unk_1009D8220);
      memcpy(v54, v55, *(_QWORD *)(*(_QWORD *)(v59 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v57 + 16))(v54, v55, v56);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v57 + 56))(v54, 0, 1, v56);
    }
    v60 = (int *)sub_10004CFD4(&qword_1009D3A10);
    v54[v60[9]] = v55[v60[9]];
    v61 = v60[10];
    v62 = *(_QWORD *)&v55[v61];
    *(_QWORD *)&v54[v61] = v62;
    v54[v60[11]] = v55[v60[11]];
    v63 = a3[14];
    v64 = (char *)v4 + v63;
    v65 = (char *)a2 + v63;
    swift_retain(v62);
    if (v58(v65, 1, v56))
    {
      v66 = sub_10004CFD4((uint64_t *)&unk_1009D8220);
      memcpy(v64, v65, *(_QWORD *)(*(_QWORD *)(v66 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v57 + 16))(v64, v65, v56);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v57 + 56))(v64, 0, 1, v56);
    }
    v64[v60[9]] = v65[v60[9]];
    v67 = v60[10];
    v68 = *(_QWORD *)&v65[v67];
    *(_QWORD *)&v64[v67] = v68;
    v64[v60[11]] = v65[v60[11]];
    v69 = a3[15];
    v70 = (char *)v4 + v69;
    v71 = (char *)a2 + v69;
    swift_retain(v68);
    if (v58(v71, 1, v56))
    {
      v72 = sub_10004CFD4((uint64_t *)&unk_1009D8220);
      memcpy(v70, v71, *(_QWORD *)(*(_QWORD *)(v72 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v57 + 16))(v70, v71, v56);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v57 + 56))(v70, 0, 1, v56);
    }
    v70[v60[9]] = v71[v60[9]];
    v73 = v60[10];
    v74 = *(_QWORD *)&v71[v73];
    *(_QWORD *)&v70[v73] = v74;
    v70[v60[11]] = v71[v60[11]];
    v75 = a3[16];
    v76 = (char *)v4 + v75;
    v77 = (char *)a2 + v75;
    swift_retain(v74);
    if (v58(v77, 1, v56))
    {
      v78 = sub_10004CFD4((uint64_t *)&unk_1009D8220);
      memcpy(v76, v77, *(_QWORD *)(*(_QWORD *)(v78 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v57 + 16))(v76, v77, v56);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v57 + 56))(v76, 0, 1, v56);
    }
    v76[v60[9]] = v77[v60[9]];
    v79 = v60[10];
    v80 = *(_QWORD *)&v77[v79];
    *(_QWORD *)&v76[v79] = v80;
    v76[v60[11]] = v77[v60[11]];
    v81 = a3[17];
    v82 = a3[18];
    v83 = (char *)v4 + v81;
    v84 = (char *)a2 + v81;
    *v83 = *v84;
    v85 = *((_QWORD *)v84 + 1);
    *((_QWORD *)v83 + 1) = v85;
    v86 = (char *)v4 + v82;
    v87 = (char *)a2 + v82;
    *v86 = *v87;
    v17 = *((_QWORD *)v87 + 1);
    *((_QWORD *)v86 + 1) = v17;
    *((_BYTE *)v4 + a3[19]) = *((_BYTE *)a2 + a3[19]);
    swift_retain(v80);
    swift_retain(v85);
  }
  swift_retain(v17);
  return v4;
}

double sub_1002D6010(_QWORD *a1, int *a2)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  unsigned int (*v20)(char *, uint64_t, uint64_t);
  uint64_t v21;
  __n128 v22;
  char *v23;
  __n128 v24;
  char *v25;
  __n128 v26;
  char *v27;
  double result;

  _s5Books15CurrentPageViewVwxx_0(a1);
  swift_release(a1[6]);
  swift_unknownObjectRelease(a1[7]);
  swift_release(a1[8]);
  v4 = (_QWORD *)((char *)a1 + a2[8]);
  v5 = sub_10004CFD4((uint64_t *)&unk_1009D8200);
  if (swift_getEnumCaseMultiPayload(v4, v5) == 1)
  {
    v6 = type metadata accessor for ColorScheme(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v4, v6);
  }
  else
  {
    swift_release(*v4);
  }

  v7 = (_QWORD *)((char *)a1 + a2[10]);
  v8 = sub_10004CFD4(&qword_1009D26B8);
  if (swift_getEnumCaseMultiPayload(v7, v8) == 1)
  {
    v9 = type metadata accessor for UserInterfaceSizeClass(0);
    v10 = *(_QWORD *)(v9 - 8);
    if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v10 + 48))(v7, 1, v9))
      (*(void (**)(_QWORD *, uint64_t))(v10 + 8))(v7, v9);
  }
  else
  {
    swift_release(*v7);
  }
  v11 = (_QWORD *)((char *)a1 + a2[11]);
  if (swift_getEnumCaseMultiPayload(v11, v8) == 1)
  {
    v12 = type metadata accessor for UserInterfaceSizeClass(0);
    v13 = *(_QWORD *)(v12 - 8);
    if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
      (*(void (**)(_QWORD *, uint64_t))(v13 + 8))(v11, v12);
  }
  else
  {
    swift_release(*v11);
  }
  v14 = (_QWORD *)((char *)a1 + a2[12]);
  v15 = sub_10004CFD4((uint64_t *)&unk_1009EE650);
  if (swift_getEnumCaseMultiPayload(v14, v15) == 1)
  {
    v16 = type metadata accessor for LayoutDirection(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v14, v16);
  }
  else
  {
    swift_release(*v14);
  }
  v17 = (char *)a1 + a2[13];
  v18 = type metadata accessor for AccessibilityTechnologies(0);
  v19 = *(_QWORD *)(v18 - 8);
  v20 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48);
  if (!v20(v17, 1, v18))
    (*(void (**)(char *, uint64_t))(v19 + 8))(v17, v18);
  v21 = sub_10004CFD4(&qword_1009D3A10);
  v22 = swift_release(*(_QWORD *)&v17[*(int *)(v21 + 40)]);
  v23 = (char *)a1 + a2[14];
  if (!((unsigned int (*)(char *, uint64_t, uint64_t, __n128))v20)(v23, 1, v18, v22))
    (*(void (**)(char *, uint64_t))(v19 + 8))(v23, v18);
  v24 = swift_release(*(_QWORD *)&v23[*(int *)(v21 + 40)]);
  v25 = (char *)a1 + a2[15];
  if (!((unsigned int (*)(char *, uint64_t, uint64_t, __n128))v20)(v25, 1, v18, v24))
    (*(void (**)(char *, uint64_t))(v19 + 8))(v25, v18);
  v26 = swift_release(*(_QWORD *)&v25[*(int *)(v21 + 40)]);
  v27 = (char *)a1 + a2[16];
  if (!((unsigned int (*)(char *, uint64_t, uint64_t, __n128))v20)(v27, 1, v18, v26))
    (*(void (**)(char *, uint64_t))(v19 + 8))(v27, v18);
  swift_release(*(_QWORD *)&v27[*(int *)(v21 + 40)]);
  swift_release(*(_QWORD *)((char *)a1 + a2[17] + 8));
  *(_QWORD *)&result = swift_release(*(_QWORD *)((char *)a1 + a2[18] + 8)).n128_u64[0];
  return result;
}

uint64_t sub_1002D6300(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t *v23;
  uint64_t *v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  unsigned int (*v56)(char *, uint64_t, uint64_t);
  uint64_t v57;
  int *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;

  v6 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v6;
  (**(void (***)(void))(v6 - 8))();
  v7 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v7;
  v8 = *(_QWORD *)(a2 + 56);
  v9 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = v8;
  *(_QWORD *)(a1 + 64) = v9;
  v10 = a3[8];
  v11 = (uint64_t *)(a1 + v10);
  v12 = (uint64_t *)(a2 + v10);
  swift_retain(v7);
  swift_unknownObjectRetain(v8);
  swift_retain(v9);
  v13 = sub_10004CFD4((uint64_t *)&unk_1009D8200);
  if (swift_getEnumCaseMultiPayload(v12, v13) == 1)
  {
    v14 = type metadata accessor for ColorScheme(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v11, v12, v14);
    v15 = 1;
  }
  else
  {
    v16 = *v12;
    *v11 = *v12;
    swift_retain(v16);
    v15 = 0;
  }
  swift_storeEnumTagMultiPayload(v11, v13, v15);
  v17 = a3[9];
  v18 = a3[10];
  v19 = (_QWORD *)(a1 + v17);
  v20 = a2 + v17;
  v22 = *(void **)v20;
  v21 = *(_QWORD *)(v20 + 8);
  *v19 = v22;
  v19[1] = v21;
  v23 = (uint64_t *)(a1 + v18);
  v24 = (uint64_t *)(a2 + v18);
  v25 = v22;
  v26 = sub_10004CFD4(&qword_1009D26B8);
  if (swift_getEnumCaseMultiPayload(v24, v26) == 1)
  {
    v27 = type metadata accessor for UserInterfaceSizeClass(0);
    v28 = *(_QWORD *)(v27 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v28 + 48))(v24, 1, v27))
    {
      v29 = sub_10004CFD4((uint64_t *)&unk_1009D8210);
      memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
      v30 = 1;
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v28 + 16))(v23, v24, v27);
      v30 = 1;
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v23, 0, 1, v27);
    }
  }
  else
  {
    v31 = *v24;
    *v23 = *v24;
    swift_retain(v31);
    v30 = 0;
  }
  swift_storeEnumTagMultiPayload(v23, v26, v30);
  v32 = a3[11];
  v33 = (uint64_t *)(a1 + v32);
  v34 = (uint64_t *)(a2 + v32);
  if (swift_getEnumCaseMultiPayload(a2 + v32, v26) == 1)
  {
    v35 = type metadata accessor for UserInterfaceSizeClass(0);
    v36 = *(_QWORD *)(v35 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v36 + 48))(v34, 1, v35))
    {
      v37 = sub_10004CFD4((uint64_t *)&unk_1009D8210);
      memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v36 + 16))(v33, v34, v35);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v36 + 56))(v33, 0, 1, v35);
    }
    v39 = v33;
    v40 = v26;
    v41 = 1;
  }
  else
  {
    v38 = *v34;
    *v33 = *v34;
    swift_retain(v38);
    v39 = v33;
    v40 = v26;
    v41 = 0;
  }
  swift_storeEnumTagMultiPayload(v39, v40, v41);
  v42 = a3[12];
  v43 = (uint64_t *)(a1 + v42);
  v44 = (uint64_t *)(a2 + v42);
  v45 = sub_10004CFD4((uint64_t *)&unk_1009EE650);
  if (swift_getEnumCaseMultiPayload(v44, v45) == 1)
  {
    v46 = type metadata accessor for LayoutDirection(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v46 - 8) + 16))(v43, v44, v46);
    v47 = v43;
    v48 = v45;
    v49 = 1;
  }
  else
  {
    v50 = *v44;
    *v43 = *v44;
    swift_retain(v50);
    v47 = v43;
    v48 = v45;
    v49 = 0;
  }
  swift_storeEnumTagMultiPayload(v47, v48, v49);
  v51 = a3[13];
  v52 = (char *)(a1 + v51);
  v53 = (char *)(a2 + v51);
  v54 = type metadata accessor for AccessibilityTechnologies(0);
  v55 = *(_QWORD *)(v54 - 8);
  v56 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v55 + 48);
  if (v56(v53, 1, v54))
  {
    v57 = sub_10004CFD4((uint64_t *)&unk_1009D8220);
    memcpy(v52, v53, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v55 + 16))(v52, v53, v54);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v55 + 56))(v52, 0, 1, v54);
  }
  v58 = (int *)sub_10004CFD4(&qword_1009D3A10);
  v52[v58[9]] = v53[v58[9]];
  v59 = v58[10];
  v60 = *(_QWORD *)&v53[v59];
  *(_QWORD *)&v52[v59] = v60;
  v52[v58[11]] = v53[v58[11]];
  v61 = a3[14];
  v62 = (char *)(a1 + v61);
  v63 = (char *)(a2 + v61);
  swift_retain(v60);
  if (v56(v63, 1, v54))
  {
    v64 = sub_10004CFD4((uint64_t *)&unk_1009D8220);
    memcpy(v62, v63, *(_QWORD *)(*(_QWORD *)(v64 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v55 + 16))(v62, v63, v54);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v55 + 56))(v62, 0, 1, v54);
  }
  v62[v58[9]] = v63[v58[9]];
  v65 = v58[10];
  v66 = *(_QWORD *)&v63[v65];
  *(_QWORD *)&v62[v65] = v66;
  v62[v58[11]] = v63[v58[11]];
  v67 = a3[15];
  v68 = (char *)(a1 + v67);
  v69 = (char *)(a2 + v67);
  swift_retain(v66);
  if (v56(v69, 1, v54))
  {
    v70 = sub_10004CFD4((uint64_t *)&unk_1009D8220);
    memcpy(v68, v69, *(_QWORD *)(*(_QWORD *)(v70 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v55 + 16))(v68, v69, v54);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v55 + 56))(v68, 0, 1, v54);
  }
  v68[v58[9]] = v69[v58[9]];
  v71 = v58[10];
  v72 = *(_QWORD *)&v69[v71];
  *(_QWORD *)&v68[v71] = v72;
  v68[v58[11]] = v69[v58[11]];
  v73 = a3[16];
  v74 = (char *)(a1 + v73);
  v75 = (char *)(a2 + v73);
  swift_retain(v72);
  if (v56(v75, 1, v54))
  {
    v76 = sub_10004CFD4((uint64_t *)&unk_1009D8220);
    memcpy(v74, v75, *(_QWORD *)(*(_QWORD *)(v76 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v55 + 16))(v74, v75, v54);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v55 + 56))(v74, 0, 1, v54);
  }
  v74[v58[9]] = v75[v58[9]];
  v77 = v58[10];
  v78 = *(_QWORD *)&v75[v77];
  *(_QWORD *)&v74[v77] = v78;
  v74[v58[11]] = v75[v58[11]];
  v79 = a3[17];
  v80 = a3[18];
  v81 = a1 + v79;
  v82 = a2 + v79;
  *(_BYTE *)v81 = *(_BYTE *)v82;
  v83 = *(_QWORD *)(v82 + 8);
  *(_QWORD *)(v81 + 8) = v83;
  v84 = a1 + v80;
  v85 = a2 + v80;
  *(_BYTE *)v84 = *(_BYTE *)v85;
  v86 = *(_QWORD *)(v85 + 8);
  *(_QWORD *)(v84 + 8) = v86;
  *(_BYTE *)(a1 + a3[19]) = *(_BYTE *)(a2 + a3[19]);
  swift_retain(v78);
  swift_retain(v83);
  swift_retain(v86);
  return a1;
}

_QWORD *sub_1002D68F4(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  char *v21;
  void *v22;
  void *v23;
  id v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t (*v59)(char *, uint64_t, uint64_t);
  int v60;
  int v61;
  uint64_t v62;
  int *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  __n128 v67;
  uint64_t v68;
  char *v69;
  char *v70;
  int v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  __n128 v76;
  uint64_t v77;
  char *v78;
  char *v79;
  int v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  __n128 v85;
  uint64_t v86;
  char *v87;
  char *v88;
  int v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;

  sub_1001EAB00(a1, a2);
  a1[5] = a2[5];
  v6 = a2[6];
  v7 = a1[6];
  a1[6] = v6;
  swift_retain(v6);
  swift_release(v7);
  v8 = a2[7];
  v9 = a1[7];
  a1[7] = v8;
  swift_unknownObjectRetain(v8);
  swift_unknownObjectRelease(v9);
  v10 = a1[8];
  v11 = a2[8];
  a1[8] = v11;
  swift_retain(v11);
  swift_release(v10);
  if (a1 != a2)
  {
    v12 = a3[8];
    v13 = (_QWORD *)((char *)a1 + v12);
    v14 = (_QWORD *)((char *)a2 + v12);
    sub_100010960((uint64_t)a1 + v12, (uint64_t *)&unk_1009D8200);
    v15 = sub_10004CFD4((uint64_t *)&unk_1009D8200);
    if (swift_getEnumCaseMultiPayload(v14, v15) == 1)
    {
      v16 = type metadata accessor for ColorScheme(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v13, v14, v16);
      v17 = 1;
    }
    else
    {
      v18 = *v14;
      *v13 = *v14;
      swift_retain(v18);
      v17 = 0;
    }
    swift_storeEnumTagMultiPayload(v13, v15, v17);
  }
  v19 = a3[9];
  v20 = (_QWORD *)((char *)a1 + v19);
  v21 = (char *)a2 + v19;
  v22 = *(void **)((char *)a1 + v19);
  v23 = *(void **)((char *)a2 + v19);
  *v20 = v23;
  v24 = v23;

  v20[1] = *((_QWORD *)v21 + 1);
  if (a1 != a2)
  {
    v25 = a3[10];
    v26 = (_QWORD *)((char *)a1 + v25);
    v27 = (_QWORD *)((char *)a2 + v25);
    sub_100010960((uint64_t)a1 + v25, &qword_1009D26B8);
    v28 = sub_10004CFD4(&qword_1009D26B8);
    if (swift_getEnumCaseMultiPayload(v27, v28) == 1)
    {
      v29 = type metadata accessor for UserInterfaceSizeClass(0);
      v30 = *(_QWORD *)(v29 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v30 + 48))(v27, 1, v29))
      {
        v31 = sub_10004CFD4((uint64_t *)&unk_1009D8210);
        memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
        v32 = 1;
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v30 + 16))(v26, v27, v29);
        v32 = 1;
        (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v26, 0, 1, v29);
      }
    }
    else
    {
      v33 = *v27;
      *v26 = *v27;
      swift_retain(v33);
      v32 = 0;
    }
    swift_storeEnumTagMultiPayload(v26, v28, v32);
    v34 = a3[11];
    v35 = (_QWORD *)((char *)a1 + v34);
    v36 = (_QWORD *)((char *)a2 + v34);
    sub_100010960((uint64_t)a1 + v34, &qword_1009D26B8);
    v37 = sub_10004CFD4(&qword_1009D26B8);
    if (swift_getEnumCaseMultiPayload(v36, v37) == 1)
    {
      v38 = type metadata accessor for UserInterfaceSizeClass(0);
      v39 = *(_QWORD *)(v38 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v39 + 48))(v36, 1, v38))
      {
        v40 = sub_10004CFD4((uint64_t *)&unk_1009D8210);
        memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v39 + 16))(v35, v36, v38);
        (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v39 + 56))(v35, 0, 1, v38);
      }
      v42 = v35;
      v43 = v37;
      v44 = 1;
    }
    else
    {
      v41 = *v36;
      *v35 = *v36;
      swift_retain(v41);
      v42 = v35;
      v43 = v37;
      v44 = 0;
    }
    swift_storeEnumTagMultiPayload(v42, v43, v44);
    v45 = a3[12];
    v46 = (_QWORD *)((char *)a1 + v45);
    v47 = (_QWORD *)((char *)a2 + v45);
    sub_100010960((uint64_t)a1 + v45, (uint64_t *)&unk_1009EE650);
    v48 = sub_10004CFD4((uint64_t *)&unk_1009EE650);
    if (swift_getEnumCaseMultiPayload(v47, v48) == 1)
    {
      v49 = type metadata accessor for LayoutDirection(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v49 - 8) + 16))(v46, v47, v49);
      v50 = v46;
      v51 = v48;
      v52 = 1;
    }
    else
    {
      v53 = *v47;
      *v46 = *v47;
      swift_retain(v53);
      v50 = v46;
      v51 = v48;
      v52 = 0;
    }
    swift_storeEnumTagMultiPayload(v50, v51, v52);
  }
  v54 = a3[13];
  v55 = (char *)a1 + v54;
  v56 = (char *)a2 + v54;
  v57 = type metadata accessor for AccessibilityTechnologies(0);
  v58 = *(_QWORD *)(v57 - 8);
  v59 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v58 + 48);
  v60 = v59(v55, 1, v57);
  v61 = v59(v56, 1, v57);
  if (v60)
  {
    if (!v61)
    {
      (*(void (**)(char *, char *, uint64_t))(v58 + 16))(v55, v56, v57);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v58 + 56))(v55, 0, 1, v57);
      goto LABEL_28;
    }
    goto LABEL_27;
  }
  if (v61)
  {
    (*(void (**)(char *, uint64_t))(v58 + 8))(v55, v57);
LABEL_27:
    v62 = sub_10004CFD4((uint64_t *)&unk_1009D8220);
    memcpy(v55, v56, *(_QWORD *)(*(_QWORD *)(v62 - 8) + 64));
    goto LABEL_28;
  }
  (*(void (**)(char *, char *, uint64_t))(v58 + 24))(v55, v56, v57);
LABEL_28:
  v63 = (int *)sub_10004CFD4(&qword_1009D3A10);
  v55[v63[9]] = v56[v63[9]];
  v64 = v63[10];
  v65 = *(_QWORD *)&v55[v64];
  v66 = *(_QWORD *)&v56[v64];
  *(_QWORD *)&v55[v64] = v66;
  swift_retain(v66);
  v67 = swift_release(v65);
  v55[v63[11]] = v56[v63[11]];
  v68 = a3[14];
  v69 = (char *)a1 + v68;
  v70 = (char *)a2 + v68;
  LODWORD(v65) = ((uint64_t (*)(char *, uint64_t, uint64_t, __n128))v59)((char *)a1 + v68, 1, v57, v67);
  v71 = v59(v70, 1, v57);
  if ((_DWORD)v65)
  {
    if (!v71)
    {
      (*(void (**)(char *, char *, uint64_t))(v58 + 16))(v69, v70, v57);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v58 + 56))(v69, 0, 1, v57);
      goto LABEL_34;
    }
    goto LABEL_33;
  }
  if (v71)
  {
    (*(void (**)(char *, uint64_t))(v58 + 8))(v69, v57);
LABEL_33:
    v72 = sub_10004CFD4((uint64_t *)&unk_1009D8220);
    memcpy(v69, v70, *(_QWORD *)(*(_QWORD *)(v72 - 8) + 64));
    goto LABEL_34;
  }
  (*(void (**)(char *, char *, uint64_t))(v58 + 24))(v69, v70, v57);
LABEL_34:
  v69[v63[9]] = v70[v63[9]];
  v73 = v63[10];
  v74 = *(_QWORD *)&v69[v73];
  v75 = *(_QWORD *)&v70[v73];
  *(_QWORD *)&v69[v73] = v75;
  swift_retain(v75);
  v76 = swift_release(v74);
  v69[v63[11]] = v70[v63[11]];
  v77 = a3[15];
  v78 = (char *)a1 + v77;
  v79 = (char *)a2 + v77;
  LODWORD(v74) = ((uint64_t (*)(char *, uint64_t, uint64_t, __n128))v59)((char *)a1 + v77, 1, v57, v76);
  v80 = v59(v79, 1, v57);
  if ((_DWORD)v74)
  {
    if (!v80)
    {
      (*(void (**)(char *, char *, uint64_t))(v58 + 16))(v78, v79, v57);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v58 + 56))(v78, 0, 1, v57);
      goto LABEL_40;
    }
    goto LABEL_39;
  }
  if (v80)
  {
    (*(void (**)(char *, uint64_t))(v58 + 8))(v78, v57);
LABEL_39:
    v81 = sub_10004CFD4((uint64_t *)&unk_1009D8220);
    memcpy(v78, v79, *(_QWORD *)(*(_QWORD *)(v81 - 8) + 64));
    goto LABEL_40;
  }
  (*(void (**)(char *, char *, uint64_t))(v58 + 24))(v78, v79, v57);
LABEL_40:
  v78[v63[9]] = v79[v63[9]];
  v82 = v63[10];
  v83 = *(_QWORD *)&v78[v82];
  v84 = *(_QWORD *)&v79[v82];
  *(_QWORD *)&v78[v82] = v84;
  swift_retain(v84);
  v85 = swift_release(v83);
  v78[v63[11]] = v79[v63[11]];
  v86 = a3[16];
  v87 = (char *)a1 + v86;
  v88 = (char *)a2 + v86;
  LODWORD(v83) = ((uint64_t (*)(char *, uint64_t, uint64_t, __n128))v59)((char *)a1 + v86, 1, v57, v85);
  v89 = v59(v88, 1, v57);
  if (!(_DWORD)v83)
  {
    if (!v89)
    {
      (*(void (**)(char *, char *, uint64_t))(v58 + 24))(v87, v88, v57);
      goto LABEL_46;
    }
    (*(void (**)(char *, uint64_t))(v58 + 8))(v87, v57);
    goto LABEL_45;
  }
  if (v89)
  {
LABEL_45:
    v90 = sub_10004CFD4((uint64_t *)&unk_1009D8220);
    memcpy(v87, v88, *(_QWORD *)(*(_QWORD *)(v90 - 8) + 64));
    goto LABEL_46;
  }
  (*(void (**)(char *, char *, uint64_t))(v58 + 16))(v87, v88, v57);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v58 + 56))(v87, 0, 1, v57);
LABEL_46:
  v87[v63[9]] = v88[v63[9]];
  v91 = v63[10];
  v92 = *(_QWORD *)&v87[v91];
  v93 = *(_QWORD *)&v88[v91];
  *(_QWORD *)&v87[v91] = v93;
  swift_retain(v93);
  swift_release(v92);
  v87[v63[11]] = v88[v63[11]];
  v94 = a3[17];
  v95 = (char *)a1 + v94;
  v96 = (char *)a2 + v94;
  *v95 = *v96;
  v97 = *((_QWORD *)v95 + 1);
  v98 = *((_QWORD *)v96 + 1);
  *((_QWORD *)v95 + 1) = v98;
  swift_retain(v98);
  swift_release(v97);
  v99 = a3[18];
  v100 = (char *)a1 + v99;
  v101 = (char *)a2 + v99;
  *v100 = *v101;
  v102 = *((_QWORD *)v100 + 1);
  v103 = *((_QWORD *)v101 + 1);
  *((_QWORD *)v100 + 1) = v103;
  swift_retain(v103);
  swift_release(v102);
  *((_BYTE *)a1 + a3[19]) = *((_BYTE *)a2 + a3[19]);
  return a1;
}

uint64_t sub_1002D70C8(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  const void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  const void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  const void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  unsigned int (*v35)(char *, uint64_t, uint64_t);
  uint64_t v36;
  int *v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  v7 = a3[8];
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = sub_10004CFD4((uint64_t *)&unk_1009D8200);
  if (swift_getEnumCaseMultiPayload(v9, v10) == 1)
  {
    v11 = type metadata accessor for ColorScheme(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v8, v9, v11);
    swift_storeEnumTagMultiPayload(v8, v10, 1);
  }
  else
  {
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  v12 = a3[10];
  *(_OWORD *)(a1 + a3[9]) = *(_OWORD *)(a2 + a3[9]);
  v13 = (void *)(a1 + v12);
  v14 = (const void *)(a2 + v12);
  v15 = sub_10004CFD4(&qword_1009D26B8);
  if (swift_getEnumCaseMultiPayload(v14, v15) == 1)
  {
    v16 = type metadata accessor for UserInterfaceSizeClass(0);
    v17 = *(_QWORD *)(v16 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v17 + 48))(v14, 1, v16))
    {
      v18 = sub_10004CFD4((uint64_t *)&unk_1009D8210);
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v17 + 32))(v13, v14, v16);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v13, 0, 1, v16);
    }
    swift_storeEnumTagMultiPayload(v13, v15, 1);
  }
  else
  {
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  v19 = a3[11];
  v20 = (void *)(a1 + v19);
  v21 = (const void *)(a2 + v19);
  if (swift_getEnumCaseMultiPayload(a2 + v19, v15) == 1)
  {
    v22 = type metadata accessor for UserInterfaceSizeClass(0);
    v23 = *(_QWORD *)(v22 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
    {
      v24 = sub_10004CFD4((uint64_t *)&unk_1009D8210);
      memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v23 + 32))(v20, v21, v22);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
    }
    swift_storeEnumTagMultiPayload(v20, v15, 1);
  }
  else
  {
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  v25 = a3[12];
  v26 = (void *)(a1 + v25);
  v27 = (const void *)(a2 + v25);
  v28 = sub_10004CFD4((uint64_t *)&unk_1009EE650);
  if (swift_getEnumCaseMultiPayload(v27, v28) == 1)
  {
    v29 = type metadata accessor for LayoutDirection(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v29 - 8) + 32))(v26, v27, v29);
    swift_storeEnumTagMultiPayload(v26, v28, 1);
  }
  else
  {
    memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
  }
  v30 = a3[13];
  v31 = (char *)(a1 + v30);
  v32 = (char *)(a2 + v30);
  v33 = type metadata accessor for AccessibilityTechnologies(0);
  v34 = *(_QWORD *)(v33 - 8);
  v35 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48);
  if (v35(v32, 1, v33))
  {
    v36 = sub_10004CFD4((uint64_t *)&unk_1009D8220);
    memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v34 + 32))(v31, v32, v33);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v31, 0, 1, v33);
  }
  v37 = (int *)sub_10004CFD4(&qword_1009D3A10);
  v31[v37[9]] = v32[v37[9]];
  *(_QWORD *)&v31[v37[10]] = *(_QWORD *)&v32[v37[10]];
  v31[v37[11]] = v32[v37[11]];
  v38 = a3[14];
  v39 = (char *)(a1 + v38);
  v40 = (char *)(a2 + v38);
  if (v35((char *)(a2 + v38), 1, v33))
  {
    v41 = sub_10004CFD4((uint64_t *)&unk_1009D8220);
    memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v34 + 32))(v39, v40, v33);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v39, 0, 1, v33);
  }
  v39[v37[9]] = v40[v37[9]];
  *(_QWORD *)&v39[v37[10]] = *(_QWORD *)&v40[v37[10]];
  v39[v37[11]] = v40[v37[11]];
  v42 = a3[15];
  v43 = (char *)(a1 + v42);
  v44 = (char *)(a2 + v42);
  if (v35((char *)(a2 + v42), 1, v33))
  {
    v45 = sub_10004CFD4((uint64_t *)&unk_1009D8220);
    memcpy(v43, v44, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v34 + 32))(v43, v44, v33);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v43, 0, 1, v33);
  }
  v43[v37[9]] = v44[v37[9]];
  *(_QWORD *)&v43[v37[10]] = *(_QWORD *)&v44[v37[10]];
  v43[v37[11]] = v44[v37[11]];
  v46 = a3[16];
  v47 = (char *)(a1 + v46);
  v48 = (char *)(a2 + v46);
  if (v35((char *)(a2 + v46), 1, v33))
  {
    v49 = sub_10004CFD4((uint64_t *)&unk_1009D8220);
    memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v34 + 32))(v47, v48, v33);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v47, 0, 1, v33);
  }
  v47[v37[9]] = v48[v37[9]];
  *(_QWORD *)&v47[v37[10]] = *(_QWORD *)&v48[v37[10]];
  v47[v37[11]] = v48[v37[11]];
  v50 = a3[18];
  *(_OWORD *)(a1 + a3[17]) = *(_OWORD *)(a2 + a3[17]);
  *(_OWORD *)(a1 + v50) = *(_OWORD *)(a2 + v50);
  *(_BYTE *)(a1 + a3[19]) = *(_BYTE *)(a2 + a3[19]);
  return a1;
}

uint64_t sub_1002D764C(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  const void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  void *v18;
  uint64_t v19;
  void *v20;
  const void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  const void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  const void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t (*v43)(char *, uint64_t, uint64_t);
  int v44;
  int v45;
  uint64_t v46;
  int *v47;
  uint64_t v48;
  uint64_t v49;
  __n128 v50;
  uint64_t v51;
  char *v52;
  char *v53;
  int v54;
  int v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  __n128 v59;
  uint64_t v60;
  char *v61;
  char *v62;
  int v63;
  int v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  __n128 v68;
  uint64_t v69;
  char *v70;
  char *v71;
  int v72;
  int v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;

  _s5Books15CurrentPageViewVwxx_0((_QWORD *)a1);
  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  v7 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_release(v7);
  v8 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_unknownObjectRelease(v8);
  v9 = *(_QWORD *)(a1 + 64);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_release(v9);
  if (a1 != a2)
  {
    v10 = a3[8];
    v11 = (void *)(a1 + v10);
    v12 = (const void *)(a2 + v10);
    sub_100010960(a1 + v10, (uint64_t *)&unk_1009D8200);
    v13 = sub_10004CFD4((uint64_t *)&unk_1009D8200);
    if (swift_getEnumCaseMultiPayload(v12, v13) == 1)
    {
      v14 = type metadata accessor for ColorScheme(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v11, v12, v14);
      swift_storeEnumTagMultiPayload(v11, v13, 1);
    }
    else
    {
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
  }
  v15 = a3[9];
  v16 = (_QWORD *)(a1 + v15);
  v17 = (_QWORD *)(a2 + v15);
  v18 = *(void **)(a1 + v15);
  *v16 = *v17;

  v16[1] = v17[1];
  if (a1 != a2)
  {
    v19 = a3[10];
    v20 = (void *)(a1 + v19);
    v21 = (const void *)(a2 + v19);
    sub_100010960(a1 + v19, &qword_1009D26B8);
    v22 = sub_10004CFD4(&qword_1009D26B8);
    if (swift_getEnumCaseMultiPayload(v21, v22) == 1)
    {
      v23 = type metadata accessor for UserInterfaceSizeClass(0);
      v24 = *(_QWORD *)(v23 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v24 + 48))(v21, 1, v23))
      {
        v25 = sub_10004CFD4((uint64_t *)&unk_1009D8210);
        memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v24 + 32))(v20, v21, v23);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v20, 0, 1, v23);
      }
      swift_storeEnumTagMultiPayload(v20, v22, 1);
    }
    else
    {
      memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    }
    v26 = a3[11];
    v27 = (void *)(a1 + v26);
    v28 = (const void *)(a2 + v26);
    sub_100010960(a1 + v26, &qword_1009D26B8);
    v29 = sub_10004CFD4(&qword_1009D26B8);
    if (swift_getEnumCaseMultiPayload(v28, v29) == 1)
    {
      v30 = type metadata accessor for UserInterfaceSizeClass(0);
      v31 = *(_QWORD *)(v30 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v31 + 48))(v28, 1, v30))
      {
        v32 = sub_10004CFD4((uint64_t *)&unk_1009D8210);
        memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v31 + 32))(v27, v28, v30);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v27, 0, 1, v30);
      }
      swift_storeEnumTagMultiPayload(v27, v29, 1);
    }
    else
    {
      memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    }
    v33 = a3[12];
    v34 = (void *)(a1 + v33);
    v35 = (const void *)(a2 + v33);
    sub_100010960(a1 + v33, (uint64_t *)&unk_1009EE650);
    v36 = sub_10004CFD4((uint64_t *)&unk_1009EE650);
    if (swift_getEnumCaseMultiPayload(v35, v36) == 1)
    {
      v37 = type metadata accessor for LayoutDirection(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v37 - 8) + 32))(v34, v35, v37);
      swift_storeEnumTagMultiPayload(v34, v36, 1);
    }
    else
    {
      memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
    }
  }
  v38 = a3[13];
  v39 = (char *)(a1 + v38);
  v40 = (char *)(a2 + v38);
  v41 = type metadata accessor for AccessibilityTechnologies(0);
  v42 = *(_QWORD *)(v41 - 8);
  v43 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v42 + 48);
  v44 = v43(v39, 1, v41);
  v45 = v43(v40, 1, v41);
  if (v44)
  {
    if (!v45)
    {
      (*(void (**)(char *, char *, uint64_t))(v42 + 32))(v39, v40, v41);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v42 + 56))(v39, 0, 1, v41);
      goto LABEL_27;
    }
    goto LABEL_26;
  }
  if (v45)
  {
    (*(void (**)(char *, uint64_t))(v42 + 8))(v39, v41);
LABEL_26:
    v46 = sub_10004CFD4((uint64_t *)&unk_1009D8220);
    memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
    goto LABEL_27;
  }
  (*(void (**)(char *, char *, uint64_t))(v42 + 40))(v39, v40, v41);
LABEL_27:
  v47 = (int *)sub_10004CFD4(&qword_1009D3A10);
  v39[v47[9]] = v40[v47[9]];
  v48 = v47[10];
  v49 = *(_QWORD *)&v39[v48];
  *(_QWORD *)&v39[v48] = *(_QWORD *)&v40[v48];
  v50 = swift_release(v49);
  v39[v47[11]] = v40[v47[11]];
  v51 = a3[14];
  v52 = (char *)(a1 + v51);
  v53 = (char *)(a2 + v51);
  v54 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t, __n128))v43)(a1 + v51, 1, v41, v50);
  v55 = v43(v53, 1, v41);
  if (v54)
  {
    if (!v55)
    {
      (*(void (**)(char *, char *, uint64_t))(v42 + 32))(v52, v53, v41);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v42 + 56))(v52, 0, 1, v41);
      goto LABEL_33;
    }
    goto LABEL_32;
  }
  if (v55)
  {
    (*(void (**)(char *, uint64_t))(v42 + 8))(v52, v41);
LABEL_32:
    v56 = sub_10004CFD4((uint64_t *)&unk_1009D8220);
    memcpy(v52, v53, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
    goto LABEL_33;
  }
  (*(void (**)(char *, char *, uint64_t))(v42 + 40))(v52, v53, v41);
LABEL_33:
  v52[v47[9]] = v53[v47[9]];
  v57 = v47[10];
  v58 = *(_QWORD *)&v52[v57];
  *(_QWORD *)&v52[v57] = *(_QWORD *)&v53[v57];
  v59 = swift_release(v58);
  v52[v47[11]] = v53[v47[11]];
  v60 = a3[15];
  v61 = (char *)(a1 + v60);
  v62 = (char *)(a2 + v60);
  v63 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t, __n128))v43)(a1 + v60, 1, v41, v59);
  v64 = v43(v62, 1, v41);
  if (v63)
  {
    if (!v64)
    {
      (*(void (**)(char *, char *, uint64_t))(v42 + 32))(v61, v62, v41);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v42 + 56))(v61, 0, 1, v41);
      goto LABEL_39;
    }
    goto LABEL_38;
  }
  if (v64)
  {
    (*(void (**)(char *, uint64_t))(v42 + 8))(v61, v41);
LABEL_38:
    v65 = sub_10004CFD4((uint64_t *)&unk_1009D8220);
    memcpy(v61, v62, *(_QWORD *)(*(_QWORD *)(v65 - 8) + 64));
    goto LABEL_39;
  }
  (*(void (**)(char *, char *, uint64_t))(v42 + 40))(v61, v62, v41);
LABEL_39:
  v61[v47[9]] = v62[v47[9]];
  v66 = v47[10];
  v67 = *(_QWORD *)&v61[v66];
  *(_QWORD *)&v61[v66] = *(_QWORD *)&v62[v66];
  v68 = swift_release(v67);
  v61[v47[11]] = v62[v47[11]];
  v69 = a3[16];
  v70 = (char *)(a1 + v69);
  v71 = (char *)(a2 + v69);
  v72 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t, __n128))v43)(a1 + v69, 1, v41, v68);
  v73 = v43(v71, 1, v41);
  if (!v72)
  {
    if (!v73)
    {
      (*(void (**)(char *, char *, uint64_t))(v42 + 40))(v70, v71, v41);
      goto LABEL_45;
    }
    (*(void (**)(char *, uint64_t))(v42 + 8))(v70, v41);
    goto LABEL_44;
  }
  if (v73)
  {
LABEL_44:
    v74 = sub_10004CFD4((uint64_t *)&unk_1009D8220);
    memcpy(v70, v71, *(_QWORD *)(*(_QWORD *)(v74 - 8) + 64));
    goto LABEL_45;
  }
  (*(void (**)(char *, char *, uint64_t))(v42 + 32))(v70, v71, v41);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v42 + 56))(v70, 0, 1, v41);
LABEL_45:
  v70[v47[9]] = v71[v47[9]];
  v75 = v47[10];
  v76 = *(_QWORD *)&v70[v75];
  *(_QWORD *)&v70[v75] = *(_QWORD *)&v71[v75];
  swift_release(v76);
  v70[v47[11]] = v71[v47[11]];
  v77 = a3[17];
  v78 = a1 + v77;
  v79 = a2 + v77;
  *(_BYTE *)v78 = *(_BYTE *)v79;
  v80 = *(_QWORD *)(v78 + 8);
  *(_QWORD *)(v78 + 8) = *(_QWORD *)(v79 + 8);
  swift_release(v80);
  v81 = a3[18];
  v82 = a1 + v81;
  v83 = a2 + v81;
  *(_BYTE *)v82 = *(_BYTE *)v83;
  v84 = *(_QWORD *)(v82 + 8);
  *(_QWORD *)(v82 + 8) = *(_QWORD *)(v83 + 8);
  swift_release(v84);
  *(_BYTE *)(a1 + a3[19]) = *(_BYTE *)(a2 + a3[19]);
  return a1;
}

uint64_t sub_1002D7DD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1002D7DE0);
}

uint64_t sub_1002D7DE0(uint64_t a1, uint64_t a2, int *a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_10004CFD4((uint64_t *)&unk_1009D8230);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = a3[8];
    }
    else
    {
      v12 = sub_10004CFD4(&qword_1009D26A0);
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
      {
        v10 = v12;
        v11 = a3[10];
      }
      else
      {
        v13 = sub_10004CFD4(&qword_1009D8240);
        v9 = *(_QWORD *)(v13 - 8);
        if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
        {
          v10 = v13;
          v11 = a3[12];
        }
        else
        {
          v10 = sub_10004CFD4(&qword_1009D3A10);
          v9 = *(_QWORD *)(v10 - 8);
          v11 = a3[13];
        }
      }
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t sub_1002D7ED8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1002D7EE4);
}

uint64_t sub_1002D7EE4(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 24) = (a2 - 1);
  }
  else
  {
    v8 = sub_10004CFD4((uint64_t *)&unk_1009D8230);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = a4[8];
    }
    else
    {
      v12 = sub_10004CFD4(&qword_1009D26A0);
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == a3)
      {
        v10 = v12;
        v11 = a4[10];
      }
      else
      {
        v13 = sub_10004CFD4(&qword_1009D8240);
        v9 = *(_QWORD *)(v13 - 8);
        if (*(_DWORD *)(v9 + 84) == a3)
        {
          v10 = v13;
          v11 = a4[12];
        }
        else
        {
          v10 = sub_10004CFD4(&qword_1009D3A10);
          v9 = *(_QWORD *)(v10 - 8);
          v11 = a4[13];
        }
      }
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

uint64_t type metadata accessor for ThemeOptionsView(uint64_t a1)
{
  uint64_t result;

  result = qword_1009D82A0;
  if (!qword_1009D82A0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ThemeOptionsView);
  return result;
}

void sub_1002D8014(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  _QWORD v10[6];
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  void *v19;
  void *v20;

  v10[0] = "(";
  v10[1] = &unk_100718160;
  v10[2] = &unk_100718178;
  v10[3] = &unk_100718190;
  sub_1002333D0(319, (unint64_t *)&qword_1009D82B0, (uint64_t (*)(uint64_t))&type metadata accessor for ColorScheme);
  if (v3 <= 0x3F)
  {
    v10[4] = *(_QWORD *)(v2 - 8) + 64;
    v10[5] = &unk_1007181A8;
    sub_100233378(319);
    if (v5 <= 0x3F)
    {
      v11 = *(_QWORD *)(v4 - 8) + 64;
      v12 = v11;
      sub_1002333D0(319, qword_1009D82C0, (uint64_t (*)(uint64_t))&type metadata accessor for LayoutDirection);
      if (v7 <= 0x3F)
      {
        v13 = *(_QWORD *)(v6 - 8) + 64;
        sub_10023341C();
        if (v9 <= 0x3F)
        {
          v14 = *(_QWORD *)(v8 - 8) + 64;
          v15 = v14;
          v16 = v14;
          v17 = v14;
          v18 = &unk_1007181A8;
          v19 = &unk_1007181A8;
          v20 = &unk_1007181C0;
          swift_initStructMetadata(a1, 256, 16, v10, a1 + 16);
        }
      }
    }
  }
}

uint64_t sub_1002D8134(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_10086AB14, 1);
}

uint64_t sub_1002D8144()
{
  return EnvironmentValues.layoutDirection.getter();
}

uint64_t sub_1002D8164(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1002E6C40(a1, a2, a3, a4, (uint64_t (*)(_QWORD))&type metadata accessor for LayoutDirection, (uint64_t (*)(char *))&EnvironmentValues.layoutDirection.setter);
}

uint64_t sub_1002D8178@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = EnvironmentValues._accessibilityShowButtonShapes.getter();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1002D81A4(unsigned __int8 *a1)
{
  return EnvironmentValues._accessibilityShowButtonShapes.setter(*a1);
}

uint64_t sub_1002D81C8()
{
  return EnvironmentValues.colorScheme.getter();
}

uint64_t sub_1002D81E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1002E6C40(a1, a2, a3, a4, (uint64_t (*)(_QWORD))&type metadata accessor for ColorScheme, (uint64_t (*)(char *))&EnvironmentValues.colorScheme.setter);
}

uint64_t sub_1002D81FC@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t KeyPath;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v32 = a2;
  v29 = sub_10004CFD4(&qword_1009D38F8);
  __chkstk_darwin(v29);
  v4 = (uint64_t *)((char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = type metadata accessor for Image.Scale(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10004CFD4((uint64_t *)&unk_1009F41C0);
  __chkstk_darwin(v9);
  v11 = (uint64_t *)((char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v30 = sub_10004CFD4(&qword_1009D8A80);
  __chkstk_darwin(v30);
  v13 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = sub_10004CFD4(&qword_1009D8A88);
  __chkstk_darwin(v31);
  v15 = (char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 1) != 0)
    v16 = 0xEC0000006E776F64;
  else
    v16 = 0xEF64726177726F66;
  v17 = Image.init(systemName:)(0x2E6E6F7276656863, v16);
  (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, enum case for Image.Scale.small(_:), v5);
  KeyPath = swift_getKeyPath(&unk_1007183A8);
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))((char *)v4 + *(int *)(v29 + 28), v8, v5);
  *v4 = KeyPath;
  sub_10000B5E4((uint64_t)v4, (uint64_t)v11 + *(int *)(v9 + 36), &qword_1009D38F8);
  *v11 = v17;
  swift_retain(v17);
  sub_100010960((uint64_t)v4, &qword_1009D38F8);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  swift_release(v17);
  v19 = objc_msgSend((id)objc_opt_self(UIColor), "tertiaryLabelColor");
  v20 = Color.init(_:)(v19);
  v21 = swift_getKeyPath(&unk_100718408);
  sub_10000B5E4((uint64_t)v11, (uint64_t)v13, (uint64_t *)&unk_1009F41C0);
  v22 = (uint64_t *)&v13[*(int *)(v30 + 36)];
  *v22 = v21;
  v22[1] = v20;
  v23 = sub_100010960((uint64_t)v11, (uint64_t *)&unk_1009F41C0);
  v24 = static Font.body.getter(v23);
  static Font.Weight.semibold.getter(v24);
  v25 = Font.weight(_:)(v24);
  swift_release(v24);
  v26 = swift_getKeyPath(&unk_100718558);
  sub_10000B5E4((uint64_t)v13, (uint64_t)v15, &qword_1009D8A80);
  v27 = (uint64_t *)&v15[*(int *)(v31 + 36)];
  *v27 = v26;
  v27[1] = v25;
  sub_100010960((uint64_t)v13, &qword_1009D8A80);
  return sub_100025B3C((uint64_t)v15, v32, &qword_1009D8A88);
}

uint64_t sub_1002D8524@<X0>(uint64_t a1@<X8>)
{
  char *v1;

  return sub_1002D81FC(*v1, a1);
}

void sub_1002D852C(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  int *v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;

  a5[8] = 0;
  v10 = (int *)type metadata accessor for ThemeOptionsView(0);
  v11 = (_QWORD *)((char *)a5 + v10[8]);
  *v11 = swift_getKeyPath(&unk_100718258);
  v12 = sub_10004CFD4((uint64_t *)&unk_1009D8200);
  swift_storeEnumTagMultiPayload(v11, v12, 0);
  v13 = (_QWORD *)((char *)a5 + v10[9]);
  v14 = type metadata accessor for ChromeStyle(0);
  v15 = sub_100008DB0((unint64_t *)&qword_1009D8330, type metadata accessor for ChromeStyle, (uint64_t)&protocol conformance descriptor for ChromeStyle);
  EnvironmentObject.init()(v14, v15);
  *v13 = v16;
  v13[1] = v17;
  v18 = (_QWORD *)((char *)a5 + v10[10]);
  *v18 = swift_getKeyPath(&unk_100718288);
  v19 = sub_10004CFD4(&qword_1009D26B8);
  swift_storeEnumTagMultiPayload(v18, v19, 0);
  v20 = (_QWORD *)((char *)a5 + v10[11]);
  *v20 = swift_getKeyPath(&unk_1007182B8);
  swift_storeEnumTagMultiPayload(v20, v19, 0);
  v21 = (_QWORD *)((char *)a5 + v10[12]);
  *v21 = swift_getKeyPath(&unk_1007182E8);
  v22 = sub_10004CFD4((uint64_t *)&unk_1009EE650);
  v23 = swift_storeEnumTagMultiPayload(v21, v22, 0);
  v24 = AccessibilityFocusState.init<>()(v23);
  v25 = AccessibilityFocusState.init<>()(v24);
  v26 = AccessibilityFocusState.init<>()(v25);
  AccessibilityFocusState.init<>()(v26);
  v27 = (char *)a5 + v10[17];
  v36 = 0;
  State.init(wrappedValue:)(&v37, &v36, &type metadata for Bool);
  v28 = v38;
  *v27 = v37;
  *((_QWORD *)v27 + 1) = v28;
  v29 = (char *)a5 + v10[18];
  v36 = 0;
  State.init(wrappedValue:)(&v37, &v36, &type metadata for Bool);
  v30 = v38;
  *v29 = v37;
  *((_QWORD *)v29 + 1) = v30;
  *((_BYTE *)a5 + v10[19]) = 0;
  sub_10002E418((uint64_t)a1, (uint64_t)a5);
  v31 = type metadata accessor for ThemeOptionsViewModel(0);
  v32 = sub_100008DB0(&qword_1009D8338, (uint64_t (*)(uint64_t))&type metadata accessor for ThemeOptionsViewModel, (uint64_t)&protocol conformance descriptor for ThemeOptionsViewModel);
  v33 = ObservedObject.init(wrappedValue:)(a2, v31, v32);
  v35 = v34;
  _s5Books15CurrentPageViewVwxx_0(a1);
  a5[5] = v33;
  a5[6] = v35;
  a5[7] = a3;
  swift_release(a5[8]);
  a5[8] = a4;
}

void sub_1002D8790()
{
  qword_100A1E460 = 0x4031000000000000;
}

void sub_1002D87A0()
{
  qword_100A1E468 = 0;
}

void sub_1002D87AC()
{
  qword_100A1E470 = 0x4024000000000000;
}

void sub_1002D87BC()
{
  qword_100A1E478 = 0x4041000000000000;
}

double sub_1002D87CC()
{
  double result;

  if (qword_1009CE398 != -1)
    swift_once(&qword_1009CE398, sub_1003E0EE8);
  result = *(double *)&qword_100A1E820;
  qword_100A1E480 = qword_100A1E820;
  return result;
}

uint64_t sub_1002D8814()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t (*v17)(uint64_t, uint64_t, uint64_t);
  int v18;
  uint64_t *v19;
  char v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t);
  uint64_t v24;

  v0 = type metadata accessor for UserInterfaceSizeClass(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v24 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_10004CFD4(&qword_1009D3C08);
  __chkstk_darwin(v4);
  v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10004CFD4((uint64_t *)&unk_1009D8210);
  __chkstk_darwin(v7);
  v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v24 - v11;
  __chkstk_darwin(v13);
  v15 = (char *)&v24 - v14;
  type metadata accessor for ThemeOptionsView(0);
  sub_100667DCC((uint64_t)v15);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v12, enum case for UserInterfaceSizeClass.compact(_:), v0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v1 + 56))(v12, 0, 1, v0);
  v16 = (uint64_t)&v6[*(int *)(v4 + 48)];
  sub_10000B5E4((uint64_t)v15, (uint64_t)v6, (uint64_t *)&unk_1009D8210);
  sub_10000B5E4((uint64_t)v12, v16, (uint64_t *)&unk_1009D8210);
  v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 48);
  if (v17((uint64_t)v6, 1, v0) == 1)
  {
    sub_100010960((uint64_t)v12, (uint64_t *)&unk_1009D8210);
    sub_100010960((uint64_t)v15, (uint64_t *)&unk_1009D8210);
    v18 = v17(v16, 1, v0);
    if (v18 == 1)
      v19 = (uint64_t *)&unk_1009D8210;
    else
      v19 = &qword_1009D3C08;
    if (v18 == 1)
      v20 = -1;
    else
      v20 = 0;
  }
  else
  {
    sub_10000B5E4((uint64_t)v6, (uint64_t)v9, (uint64_t *)&unk_1009D8210);
    if (v17(v16, 1, v0) == 1)
    {
      sub_100010960((uint64_t)v12, (uint64_t *)&unk_1009D8210);
      sub_100010960((uint64_t)v15, (uint64_t *)&unk_1009D8210);
      (*(void (**)(char *, uint64_t))(v1 + 8))(v9, v0);
      v20 = 0;
      v19 = &qword_1009D3C08;
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v1 + 32))(v3, v16, v0);
      v21 = sub_100008DB0((unint64_t *)&qword_1009D87D0, (uint64_t (*)(uint64_t))&type metadata accessor for UserInterfaceSizeClass, (uint64_t)&protocol conformance descriptor for UserInterfaceSizeClass);
      v20 = dispatch thunk of static Equatable.== infix(_:_:)(v9, v3, v0, v21);
      v22 = *(void (**)(char *, uint64_t))(v1 + 8);
      v22(v3, v0);
      v19 = (uint64_t *)&unk_1009D8210;
      sub_100010960((uint64_t)v12, (uint64_t *)&unk_1009D8210);
      sub_100010960((uint64_t)v15, (uint64_t *)&unk_1009D8210);
      v22(v9, v0);
    }
  }
  sub_100010960((uint64_t)v6, v19);
  return v20 & 1;
}

uint64_t sub_1002D8B0C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t KeyPath;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t result;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __n128 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43[16];
  uint64_t v44;
  _QWORD v45[2];
  unsigned __int8 v46;

  v2 = v1;
  v42 = a1;
  v39 = sub_10004CFD4(&qword_1009D8340);
  __chkstk_darwin(v39);
  v4 = (uint64_t *)((char *)&v39 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = sub_10004CFD4(&qword_1009D8348);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10004CFD4(&qword_1009D8350);
  __chkstk_darwin(v9);
  v11 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_10004CFD4(&qword_1009D8358);
  v40 = *(_QWORD *)(v12 - 8);
  v41 = v12;
  __chkstk_darwin(v12);
  v14 = (char *)&v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = v1;
  v15 = sub_10004CFD4(&qword_1009D8360);
  v16 = sub_1002E62F4();
  NavigationStack.init<>(root:)(sub_1002E62EC, v43, v15, v16);
  v17 = v2 + *(int *)(type metadata accessor for ThemeOptionsView(0) + 36);
  if (*(_QWORD *)v17)
  {
    v18 = *(id *)v17;
    v19 = ChromeStyle.accentColor.getter();

    KeyPath = swift_getKeyPath(&unk_100718318);
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v11, v8, v5);
    v21 = (uint64_t *)&v11[*(int *)(v9 + 36)];
    *v21 = KeyPath;
    v21[1] = v19;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v22 = *(_QWORD *)(v2 + 40);
    v23 = *(_QWORD *)(v2 + 48);
    v24 = type metadata accessor for ThemeOptionsViewModel(0);
    v25 = sub_100008DB0(&qword_1009D8338, (uint64_t (*)(uint64_t))&type metadata accessor for ThemeOptionsViewModel, (uint64_t)&protocol conformance descriptor for ThemeOptionsViewModel);
    v26 = ObservedObject.projectedValue.getter(v22, v23, v24, v25);
    v27 = swift_getKeyPath(&unk_100718348);
    ObservedObject.Wrapper.subscript.getter(v4, v27, v26, v25);
    swift_release(v26);
    swift_release(v27);
    v28 = swift_getKeyPath(&unk_100718378);
    Binding.subscript.getter(v45, v28, v39);
    swift_release(v28);
    v29 = sub_100010960((uint64_t)v4, &qword_1009D8340);
    v30 = v45[0];
    v31 = v45[1];
    v32 = v46;
    __chkstk_darwin(v29);
    *(&v39 - 2) = v2;
    v33 = sub_1002E65D0();
    View.alert(isPresented:content:)(v30, v31, v32, sub_1002E65C8, &v39 - 4, v9, v33);
    swift_release(v31);
    swift_release(v30);
    sub_100010960((uint64_t)v11, &qword_1009D8350);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v40 + 32))(v42, v14, v41);
  }
  else
  {
    v35 = *(_QWORD *)(v17 + 8);
    v36 = type metadata accessor for ChromeStyle(0);
    v37 = sub_100008DB0((unint64_t *)&qword_1009D8330, type metadata accessor for ChromeStyle, (uint64_t)&protocol conformance descriptor for ChromeStyle);
    result = EnvironmentObject.error()(0, v35, v36, v37, v38);
    __break(1u);
  }
  return result;
}

uint64_t sub_1002D8E6C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t *v8;

  v2 = sub_1002D8ED8(a1);
  v3 = static Alignment.center.getter(v2);
  v5 = v4;
  v6 = a1 + *(int *)(sub_10004CFD4(&qword_1009D8360) + 36);
  sub_1002D956C(v6);
  result = sub_10004CFD4(&qword_1009D83D0);
  v8 = (uint64_t *)(v6 + *(int *)(result + 36));
  *v8 = v3;
  v8[1] = v5;
  return result;
}

uint64_t sub_1002D8ED8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t ObjCClassFromMetadata;
  id v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  __n128 v55;
  _QWORD *v56;
  uint64_t v57;
  void *v58;
  char v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  void (*v65)(char *, uint64_t);
  id v66;
  uint64_t result;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  __n128 v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t OpaqueTypeConformance2;
  uint64_t v78;
  unint64_t v79;
  char *v80;
  char *v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char v96[16];
  uint64_t v97;
  char v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  _QWORD *v103;
  uint64_t v104;
  unint64_t v105;

  v2 = v1;
  v95 = a1;
  v88 = type metadata accessor for Locale(0);
  v87 = *(_QWORD *)(v88 - 8);
  __chkstk_darwin(v88);
  v86 = (char *)&v74 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v81 = (char *)&v74 - v5;
  v84 = type metadata accessor for String.LocalizationValue(0);
  v83 = *(_QWORD *)(v84 - 8);
  __chkstk_darwin(v84);
  v82 = (char *)&v74 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v76 = (char *)&v74 - v8;
  v9 = sub_10004CFD4(&qword_1009D8398);
  __chkstk_darwin(v9);
  v11 = (char *)&v74 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_10004CFD4(&qword_1009D8390);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v74 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_10004CFD4(&qword_1009D8380);
  v17 = *(_QWORD *)(v16 - 8);
  v89 = v16;
  v90 = v17;
  __chkstk_darwin(v16);
  v80 = (char *)&v74 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_10004CFD4(&qword_1009D8440);
  v93 = *(_QWORD *)(v19 - 8);
  v94 = v19;
  __chkstk_darwin(v19);
  v85 = (char *)&v74 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v91 = sub_10004CFD4(&qword_1009D8378);
  __chkstk_darwin(v91);
  v92 = (char *)&v74 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v11 = static HorizontalAlignment.center.getter(v22);
  *((_QWORD *)v11 + 1) = 0;
  v11[16] = 0;
  v23 = sub_10004CFD4(&qword_1009D8448);
  sub_1002DA0A4(v2, (uint64_t)&v11[*(int *)(v23 + 44)]);
  v102 = 0;
  v103 = (_QWORD *)0xE000000000000000;
  v24 = sub_100030B34((unint64_t *)&unk_1009D83A0, &qword_1009D8398, (uint64_t)&protocol conformance descriptor for VStack<A>);
  v25 = sub_1001F2108();
  v79 = v25;
  View.navigationBarTitle<A>(_:)(&v102, v9);
  sub_100010960((uint64_t)v11, &qword_1009D8398);
  v102 = v9;
  v103 = &type metadata for String;
  v104 = v24;
  v105 = v25;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v102, &opaque type descriptor for <<opaque return type of View.navigationBarTitle<A>(_:)>>, 1);
  v75 = v12;
  View.navigationBarHidden(_:)(1, v12, OpaqueTypeConformance2);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  v26 = v76;
  v27 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000013, 0x80000001007BD0A0);
  v28 = v81;
  static Locale.current.getter(v27);
  v29 = v83;
  v30 = v82;
  v31 = v84;
  (*(void (**)(char *, char *, uint64_t))(v83 + 16))(v82, v26, v84);
  v32 = type metadata accessor for BundleFinder();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v32);
  v34 = objc_msgSend((id)objc_opt_self(NSBundle), "bundleForClass:", ObjCClassFromMetadata);
  v35 = v87;
  v36 = v86;
  v37 = v88;
  (*(void (**)(char *, char *, uint64_t))(v87 + 16))(v86, v28, v88);
  v38 = String.init(localized:table:bundle:locale:comment:)(v30, 0, 0, v34, v36, "Reset alert title", 17, 2);
  v40 = v39;
  (*(void (**)(char *, uint64_t))(v35 + 8))(v28, v37);
  (*(void (**)(char *, uint64_t))(v29 + 8))(v26, v31);
  v100 = v38;
  v101 = v40;
  v41 = type metadata accessor for ThemeOptionsView(0);
  v42 = v78;
  v43 = (char *)(v78 + *(int *)(v41 + 68));
  v44 = *((_QWORD *)v43 + 1);
  v98 = *v43;
  v99 = v44;
  sub_10004CFD4(&qword_1009D8450);
  State.projectedValue.getter(&v102);
  v45 = v102;
  v46 = v103;
  v47 = v104;
  v97 = v42;
  v48 = sub_10004CFD4(&qword_1009D8388);
  v102 = v75;
  v103 = (_QWORD *)OpaqueTypeConformance2;
  v49 = swift_getOpaqueTypeConformance2(&v102, &opaque type descriptor for <<opaque return type of View.navigationBarHidden(_:)>>, 1);
  v50 = sub_100030B34(&qword_1009D83B0, &qword_1009D8388, (uint64_t)&protocol conformance descriptor for TupleView<A>);
  v73 = v49;
  v72 = v48;
  v51 = v85;
  v52 = v47;
  v53 = v89;
  v54 = v80;
  View.alert<A, B>(_:isPresented:actions:)(&v100, v45, v46, v52, sub_1002E66D8, v96, v89, &type metadata for String, v72, v73, v79, v50);
  swift_release(v46);
  swift_release(v45);
  v55 = swift_bridgeObjectRelease(v101);
  (*(void (**)(char *, uint64_t, __n128))(v90 + 8))(v54, v53, v55);
  v56 = (_QWORD *)*((_QWORD *)v43 + 1);
  LOBYTE(v102) = *v43;
  v103 = v56;
  State.wrappedValue.getter(&v100);
  v57 = v42 + *(int *)(v41 + 36);
  v58 = *(void **)v57;
  if (*(_QWORD *)v57)
  {
    v59 = v100;
    v60 = swift_allocObject(&unk_1008FA9B8, 24, 7);
    *(_QWORD *)(v60 + 16) = v58;
    v62 = (uint64_t)v92;
    v61 = v93;
    v63 = v94;
    (*(void (**)(char *, char *, uint64_t))(v93 + 16))(v92, v51, v94);
    v64 = v62 + *(int *)(v91 + 36);
    *(_BYTE *)v64 = v59;
    *(_QWORD *)(v64 + 8) = sub_1002E6704;
    *(_QWORD *)(v64 + 16) = v60;
    v65 = *(void (**)(char *, uint64_t))(v61 + 8);
    v66 = v58;
    v65(v51, v63);
    return sub_100025B3C(v62, v95, &qword_1009D8378);
  }
  else
  {
    v68 = *(_QWORD *)(v57 + 8);
    v69 = type metadata accessor for ChromeStyle(0);
    v70 = sub_100008DB0((unint64_t *)&qword_1009D8330, type metadata accessor for ChromeStyle, (uint64_t)&protocol conformance descriptor for ChromeStyle);
    result = EnvironmentObject.error()(0, v68, v69, v70, v71);
    __break(1u);
  }
  return result;
}

uint64_t sub_1002D956C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  uint64_t KeyPath;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __n128 v37;
  uint64_t v38;
  __n128 v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;

  v54 = a1;
  v2 = type metadata accessor for Image.Scale(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10004CFD4(&qword_1009D8400);
  v48 = *(_QWORD *)(v6 - 8);
  v49 = v6;
  __chkstk_darwin(v6);
  v8 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = sub_10004CFD4(&qword_1009D8408);
  __chkstk_darwin(v47);
  v10 = (char *)&v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_10004CFD4(&qword_1009D8410);
  __chkstk_darwin(v11);
  v13 = (char *)&v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_10004CFD4(&qword_1009D8418);
  __chkstk_darwin(v14);
  v51 = (uint64_t)&v45 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = sub_10004CFD4(&qword_1009D8420);
  __chkstk_darwin(v50);
  v17 = (char *)&v45 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_10004CFD4(&qword_1009D8428);
  v52 = *(_QWORD *)(v18 - 8);
  v53 = v18;
  __chkstk_darwin(v18);
  v20 = (char *)&v45 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = *(_QWORD *)(v1 + 48);
  v22 = swift_retain(v21);
  v23 = ThemeOptionsViewModel.isResetting.getter(v22);
  v25 = swift_release(v21);
  if ((v23 & 1) == 0)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v52 + 56))(v54, 1, 1, v53, v25);
  *(_QWORD *)v13 = static VerticalAlignment.center.getter(v24);
  *((_QWORD *)v13 + 1) = 0;
  v13[16] = 1;
  v26 = sub_10004CFD4((uint64_t *)&unk_1009D8430);
  v46 = &v13[*(int *)(v26 + 44)];
  ProgressView<>.init<>()(v26);
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, enum case for Image.Scale.large(_:), v2);
  KeyPath = swift_getKeyPath(&unk_1007183A8);
  v28 = (uint64_t *)&v10[*(int *)(v47 + 36)];
  v29 = sub_10004CFD4(&qword_1009D38F8);
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))((char *)v28 + *(int *)(v29 + 28), v5, v2);
  *v28 = KeyPath;
  v31 = v48;
  v30 = v49;
  (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v10, v8, v49);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  (*(void (**)(char *, uint64_t))(v31 + 8))(v8, v30);
  v32 = sub_100025B3C((uint64_t)v10, (uint64_t)v46, &qword_1009D8408);
  v33 = static Alignment.center.getter(v32);
  v34 = v51;
  sub_1005F21D8(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v51, 0.0, 1, INFINITY, 0, v33, v35);
  sub_100010960((uint64_t)v13, &qword_1009D8410);
  v36 = _s5Books11ChromeStyleC25_secondaryButtonFillColor33_5E35E2CA450906E5027671B98D3F72C77Combine9PublishedVy7SwiftUI0G0VGvpfi_0();
  v37.n128_u64[0] = 0.5;
  v38 = Color.opacity(_:)(v36, v37);
  v39 = swift_release(v36);
  LOBYTE(v36) = static Edge.Set.all.getter(v39);
  sub_10000B5E4(v34, (uint64_t)v17, &qword_1009D8418);
  v40 = &v17[*(int *)(v50 + 36)];
  *(_QWORD *)v40 = v38;
  v40[8] = v36;
  v41 = sub_100010960(v34, &qword_1009D8418);
  LOBYTE(v36) = static Edge.Set.bottom.getter(v41);
  sub_10000B5E4((uint64_t)v17, (uint64_t)v20, &qword_1009D8420);
  v42 = v53;
  v20[*(int *)(v53 + 36)] = v36;
  sub_100010960((uint64_t)v17, &qword_1009D8420);
  v43 = v54;
  sub_100025B3C((uint64_t)v20, v54, &qword_1009D8428);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v52 + 56))(v43, 0, 1, v42);
}

uint64_t sub_1002D99AC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v7;

  v2 = type metadata accessor for FontDownloadAlert(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v5 + 16))(v4, a1);
  return ThemeOptionsViewModel.fontDownloadAlert.setter(v4);
}

uint64_t sub_1002D9A2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  char v19;
  double (*v20)(char *, uint64_t);
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  double (*v27)(char *, uint64_t);
  unint64_t v28;
  __n128 v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __n128 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  __n128 v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  __n128 v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  __n128 v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  __n128 v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  __n128 v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  __n128 v81;
  unint64_t v83;
  __n128 v84;
  uint64_t v85;
  uint64_t v86;
  int v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  __n128 v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  __n128 v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  __n128 v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  __n128 v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char v113;
  char v114;
  char *v115;
  __n128 v116;
  uint64_t v117;
  double (*v118)(char *, uint64_t);
  unint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  uint64_t v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;

  v132 = a2;
  v3 = sub_10004CFD4(&qword_1009D83F8);
  __chkstk_darwin(v3);
  v129 = (char *)&v117 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ThemeOptionsView(0);
  v126 = *(char **)(v5 - 8);
  v6 = __chkstk_darwin(v5);
  v127 = v7;
  v130 = (uint64_t)&v117 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v128 = type metadata accessor for Alert.Button(0, v6);
  v125 = *(_QWORD *)(v128 - 8);
  __chkstk_darwin(v128);
  v9 = (char *)&v117 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v131 = (char *)&v117 - v11;
  v12 = type metadata accessor for FontDownloadAlert(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v117 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *(_QWORD *)(a1 + 48);
  v17 = swift_retain(v16);
  ThemeOptionsViewModel.fontDownloadAlert.getter(v17);
  v18 = swift_release(v16);
  v19 = FontDownloadAlert.requiresCellularPrompt.getter(v18);
  v20 = *(double (**)(char *, uint64_t))(v13 + 8);
  v20(v15, v12);
  v21 = *(_QWORD *)(a1 + 48);
  v22 = swift_retain(v21);
  ThemeOptionsViewModel.fontDownloadAlert.getter(v22);
  v23 = swift_release(v21);
  v24 = FontDownloadAlert.fontTitle.getter(v23);
  v26 = v25;
  v27 = v20;
  v20(v15, v12);
  v133 = v24;
  v134 = v26;
  if ((v19 & 1) != 0)
  {
    v28 = sub_1001F2108();
    v30 = Text.init<A>(_:)(&v133, &type metadata for String, v28, v29);
    v128 = v31;
    v129 = (char *)v30;
    LODWORD(v124) = v32;
    v125 = v33;
    v34 = a1;
    v35 = *(_QWORD *)(a1 + 48);
    v36 = swift_retain(v35);
    ThemeOptionsViewModel.fontDownloadAlert.getter(v36);
    v37 = swift_release(v35);
    v38 = FontDownloadAlert.fontMessage.getter(v37);
    v40 = v39;
    v41.n128_f64[0] = v27(v15, v12);
    v118 = v27;
    v133 = v38;
    v134 = v40;
    v119 = v28;
    v42 = Text.init<A>(_:)(&v133, &type metadata for String, v28, v41);
    v122 = v43;
    v123 = v42;
    v120 = v44 & 1;
    v121 = v45;
    v46 = *(_QWORD *)(a1 + 48);
    v47 = swift_retain(v46);
    ThemeOptionsViewModel.fontDownloadAlert.getter(v47);
    v48 = swift_release(v46);
    v49 = FontDownloadAlert.downloadOverCellularButton.getter(v48);
    v51 = v50;
    v52.n128_f64[0] = v27(v15, v12);
    v133 = v49;
    v134 = v51;
    v53 = Text.init<A>(_:)(&v133, &type metadata for String, v28, v52);
    v55 = v54;
    v57 = v56;
    v59 = v58 & 1;
    v60 = v130;
    sub_10002CD84(v34, v130, type metadata accessor for ThemeOptionsView);
    v61 = v126[80];
    v126 = v9;
    v62 = (v61 + 16) & ~v61;
    v127 += v62;
    v117 = v61 | 7;
    v63 = swift_allocObject(&unk_1008FA968, v127, v61 | 7);
    sub_1002E6670(v60, v63 + v62);
    static Alert.Button.cancel(_:action:)(v53, v55, v59, v57, sub_1002E66B4, v63);
    sub_1001F5B28(v53, v55, v59);
    swift_release(v63);
    swift_bridgeObjectRelease(v57);
    v64 = v34;
    v65 = *(_QWORD *)(v34 + 48);
    v66 = swift_retain(v65);
    ThemeOptionsViewModel.fontDownloadAlert.getter(v66);
    v67 = swift_release(v65);
    v68 = FontDownloadAlert.waitForWifiButton.getter(v67);
    v70 = v69;
    v71.n128_f64[0] = v118(v15, v12);
    v133 = v68;
    v134 = v70;
    v72 = Text.init<A>(_:)(&v133, &type metadata for String, v119, v71);
    v74 = v73;
    v76 = v75;
    v78 = v77 & 1;
    sub_10002CD84(v64, v60, type metadata accessor for ThemeOptionsView);
    v79 = swift_allocObject(&unk_1008FA990, v127, v117);
    sub_1002E6670(v60, v79 + v62);
    v80 = v126;
    static Alert.Button.default(_:action:)(v72, v74, v78, v76, sub_1002E66C4, v79);
    sub_1001F5B28(v72, v74, v78);
    swift_release(v79);
    v81 = swift_bridgeObjectRelease(v76);
    return Alert.init(title:message:primaryButton:secondaryButton:)(v129, v128, v124 & 1, v125, v123, v122, v120, v121, v81, v131, v80);
  }
  else
  {
    v83 = sub_1001F2108();
    v85 = Text.init<A>(_:)(&v133, &type metadata for String, v83, v84);
    v130 = v86;
    v131 = (char *)v85;
    LODWORD(v126) = v87;
    v127 = v88;
    v89 = *(_QWORD *)(a1 + 48);
    v90 = swift_retain(v89);
    ThemeOptionsViewModel.fontDownloadAlert.getter(v90);
    v91 = swift_release(v89);
    v92 = FontDownloadAlert.fontMessage.getter(v91);
    v94 = v93;
    v95.n128_f64[0] = v20(v15, v12);
    v133 = v92;
    v134 = v94;
    v96 = Text.init<A>(_:)(&v133, &type metadata for String, v83, v95);
    v123 = v97;
    v124 = v96;
    v122 = v98;
    v100 = v99 & 1;
    v101 = *(_QWORD *)(a1 + 48);
    v102 = swift_retain(v101);
    ThemeOptionsViewModel.fontDownloadAlert.getter(v102);
    v103 = swift_release(v101);
    v104 = FontDownloadAlert.dismissButton.getter(v103);
    v106 = v105;
    v107.n128_f64[0] = v27(v15, v12);
    v133 = v104;
    v134 = v106;
    v108 = Text.init<A>(_:)(&v133, &type metadata for String, v83, v107);
    v110 = v109;
    v112 = v111;
    v114 = v113 & 1;
    v115 = v129;
    ((void (*)(void))static Alert.Button.default(_:action:))();
    sub_1001F5B28(v108, v110, v114);
    v116 = swift_bridgeObjectRelease(v112);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t, __n128))(v125 + 56))(v115, 0, 1, v128, v116);
    return Alert.init(title:message:dismissButton:)(v131, v130, v126 & 1, v127, v124, v123, v100, v122, v115);
  }
}

uint64_t sub_1002DA01C(_QWORD *a1)
{
  uint64_t v2;
  void (*v3)(_BYTE *, _QWORD);
  uint64_t v4;
  uint64_t v5;
  _BYTE v7[32];

  v2 = a1[6];
  swift_retain(v2);
  v3 = (void (*)(_BYTE *, _QWORD))ThemeOptionsViewModel.fontDownloadAlert.modify(v7);
  FontDownloadAlert.downloadOverCellularAccepted.setter(1);
  v3(v7, 0);
  swift_release(v2);
  v4 = a1[3];
  v5 = a1[4];
  sub_10003F198(a1, v4);
  return dispatch thunk of ThemeOptionsEventHandling.didTapAllowCellular()(v4, v5);
}

uint64_t sub_1002DA0A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  __n128 v41;
  uint64_t v42;
  void (*v43)(char *, uint64_t);
  uint64_t v44;
  __n128 v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  __n128 v49;
  uint64_t v50;
  uint64_t v51;
  __n128 v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  __n128 v67;
  char v68;
  double v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  void (*v81)(char *, char *, uint64_t);
  char *v82;
  uint64_t v83;
  uint64_t v84;
  void (*v85)(char *, uint64_t);
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  void (*v91)(char *, char *, uint64_t);
  uint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  int *v97;
  void (*v98)(char *, uint64_t);
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  uint64_t v117;
  char *v118;

  v113 = a2;
  v3 = sub_10004CFD4(&qword_1009D8470);
  __chkstk_darwin(v3);
  v103 = (uint64_t *)((char *)&v100 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v102 = sub_10004CFD4(&qword_1009D8478);
  __chkstk_darwin(v102);
  v105 = (uint64_t)&v100 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v104 = (uint64_t)&v100 - v7;
  v8 = sub_10004CFD4(&qword_1009D8480);
  __chkstk_darwin(v8);
  v112 = (char *)&v100 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v110 = (uint64_t)&v100 - v11;
  v12 = sub_10004CFD4(&qword_1009D8488);
  __chkstk_darwin(v12);
  v111 = (uint64_t)&v100 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v115 = (uint64_t)&v100 - v15;
  v16 = type metadata accessor for Divider(0);
  v108 = *(_QWORD *)(v16 - 8);
  v109 = v16;
  __chkstk_darwin(v16);
  v101 = (char *)&v100 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v116 = (char *)&v100 - v19;
  __chkstk_darwin(v20);
  v118 = (char *)&v100 - v21;
  v22 = type metadata accessor for BookThemeEntity(0);
  v23 = *(_QWORD *)(v22 - 8);
  __chkstk_darwin(v22);
  v25 = (char *)&v100 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = sub_10004CFD4(&qword_1009D8490);
  __chkstk_darwin(v26);
  v28 = (char *)&v100 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v106 = sub_10004CFD4(&qword_1009D8498);
  __chkstk_darwin(v106);
  v30 = (char *)&v100 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v107 = sub_10004CFD4(&qword_1009D84A0);
  __chkstk_darwin(v107);
  v114 = (uint64_t)&v100 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v32);
  v34 = (char *)&v100 - v33;
  __chkstk_darwin(v35);
  v117 = (uint64_t)&v100 - v36;
  *(_QWORD *)v28 = static HorizontalAlignment.center.getter(v37);
  *((_QWORD *)v28 + 1) = 0;
  v28[16] = 1;
  v38 = sub_10004CFD4(&qword_1009D84A8);
  sub_1002DA8AC(a1, (uint64_t)&v28[*(int *)(v38 + 44)]);
  v39 = *(_QWORD *)(a1 + 48);
  v40 = swift_retain(v39);
  ThemeOptionsViewModel.theme.getter(v40);
  v41 = swift_release(v39);
  v42 = BookThemeEntity.backgroundColor.getter(v41);
  v43 = *(void (**)(char *, uint64_t))(v23 + 8);
  v43(v25, v22);
  v44 = Color.init(_:)(v42);
  LOBYTE(v23) = static Edge.Set.all.getter(v45);
  sub_10000B5E4((uint64_t)v28, (uint64_t)v30, &qword_1009D8490);
  v46 = &v30[*(int *)(v106 + 36)];
  *(_QWORD *)v46 = v44;
  v46[8] = v23;
  sub_100010960((uint64_t)v28, &qword_1009D8490);
  v47 = *(_QWORD *)(a1 + 48);
  v48 = swift_retain(v47);
  ThemeOptionsViewModel.theme.getter(v48);
  v49 = swift_release(v47);
  LOBYTE(v47) = BookThemeEntity.hasBlackBackground.getter(v49);
  v50 = ((uint64_t (*)(char *, uint64_t))v43)(v25, v22);
  if ((v47 & 1) != 0)
  {
    v51 = _s5Books11ChromeStyleC20_pageBackgroundColor33_5E35E2CA450906E5027671B98D3F72C77Combine9PublishedVy7SwiftUI0F0VGvpfi_0();
    v52.n128_u64[0] = 0x3FB47AE147AE147BLL;
    v53 = Color.opacity(_:)(v51, v52);
    swift_release(v51);
  }
  else
  {
    v54 = static Color.clear.getter(v50);
    v53 = v54;
  }
  v55 = static Alignment.center.getter(v54);
  v57 = v56;
  sub_10000B5E4((uint64_t)v30, (uint64_t)v34, &qword_1009D8498);
  v58 = &v34[*(int *)(v107 + 36)];
  *(_QWORD *)v58 = v53;
  v58[8] = 0;
  *((_QWORD *)v58 + 2) = v55;
  *((_QWORD *)v58 + 3) = v57;
  sub_100010960((uint64_t)v30, &qword_1009D8498);
  v59 = sub_100025B3C((uint64_t)v34, v117, &qword_1009D84A0);
  Divider.init()(v59);
  sub_1002DBD08(v115);
  v60 = type metadata accessor for ThemeOptionsView(0);
  v61 = (uint64_t)v112;
  if (*(_BYTE *)(a1 + *(int *)(v60 + 76)) == 1)
  {
    v62 = v116;
    v63 = Divider.init()(v60);
    v64 = static VerticalAlignment.center.getter(v63);
    v65 = (uint64_t)v103;
    *v103 = v64;
    *(_QWORD *)(v65 + 8) = 0;
    *(_BYTE *)(v65 + 16) = 1;
    v66 = sub_10004CFD4(&qword_1009D84C0);
    sub_1002E51A0(a1, v65 + *(int *)(v66 + 44));
    v68 = static Edge.Set.all.getter(v67);
    v69 = EdgeInsets.init(_all:)(16.0);
    v71 = v70;
    v73 = v72;
    v75 = v74;
    v76 = v105;
    sub_10000B5E4(v65, v105, &qword_1009D8470);
    v77 = v76 + *(int *)(v102 + 36);
    *(_BYTE *)v77 = v68;
    *(double *)(v77 + 8) = v69;
    *(_QWORD *)(v77 + 16) = v71;
    *(_QWORD *)(v77 + 24) = v73;
    *(_QWORD *)(v77 + 32) = v75;
    *(_BYTE *)(v77 + 40) = 0;
    sub_100010960(v65, &qword_1009D8470);
    v78 = v104;
    sub_100025B3C(v76, v104, &qword_1009D8478);
    v79 = v108;
    v80 = v109;
    v81 = *(void (**)(char *, char *, uint64_t))(v108 + 16);
    v82 = v101;
    v81(v101, v62, v109);
    sub_10000B5E4(v78, v76, &qword_1009D8478);
    v81((char *)v61, v82, v80);
    v83 = sub_10004CFD4(&qword_1009D84C8);
    sub_10000B5E4(v76, v61 + *(int *)(v83 + 48), &qword_1009D8478);
    sub_100010960(v78, &qword_1009D8478);
    v84 = v79;
    v85 = *(void (**)(char *, uint64_t))(v79 + 8);
    v85(v62, v80);
    sub_100010960(v76, &qword_1009D8478);
    v85(v82, v80);
    v86 = sub_10004CFD4(&qword_1009D84B0);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v86 - 8) + 56))(v61, 0, 1, v86);
    v87 = v110;
    sub_100025B3C(v61, v110, &qword_1009D8480);
  }
  else
  {
    v88 = sub_10004CFD4(&qword_1009D84B0);
    v87 = v110;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v88 - 8) + 56))(v110, 1, 1, v88);
    v84 = v108;
    v80 = v109;
    v62 = v116;
  }
  v89 = v61;
  v90 = v114;
  sub_10000B5E4(v117, v114, &qword_1009D84A0);
  v91 = *(void (**)(char *, char *, uint64_t))(v84 + 16);
  v91(v62, v118, v80);
  v92 = v115;
  v93 = v111;
  sub_10000B5E4(v115, v111, &qword_1009D8488);
  v94 = v62;
  sub_10000B5E4(v87, v89, &qword_1009D8480);
  v95 = v113;
  sub_10000B5E4(v90, v113, &qword_1009D84A0);
  v96 = v84;
  v97 = (int *)sub_10004CFD4(&qword_1009D84B8);
  v91((char *)(v95 + v97[12]), v94, v80);
  sub_10000B5E4(v93, v95 + v97[16], &qword_1009D8488);
  sub_10000B5E4(v89, v95 + v97[20], &qword_1009D8480);
  sub_100010960(v87, &qword_1009D8480);
  sub_100010960(v92, &qword_1009D8488);
  v98 = *(void (**)(char *, uint64_t))(v96 + 8);
  v98(v118, v80);
  sub_100010960(v117, &qword_1009D84A0);
  sub_100010960(v89, &qword_1009D8480);
  sub_100010960(v93, &qword_1009D8488);
  v98(v116, v80);
  return sub_100010960(v114, &qword_1009D84A0);
}

uint64_t sub_1002DA8AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t KeyPath;
  uint64_t v30;
  uint64_t v31;
  __n128 v32;
  unsigned int *v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t result;
  unint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  unsigned int v45;
  uint64_t v46;
  unsigned int v47;
  unsigned int v48;
  uint64_t v49;
  int v50;
  int v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;

  v73 = a2;
  v3 = sub_10004CFD4(&qword_1009D88B8);
  __chkstk_darwin(v3);
  v74 = (uint64_t)&v63 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v72 = (uint64_t)&v63 - v6;
  v64 = sub_10004CFD4(&qword_1009DE640);
  __chkstk_darwin(v64);
  v8 = (char *)&v63 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for BookThemeEntity(0);
  v75 = *(_QWORD *)(v9 - 8);
  v76 = v9;
  __chkstk_darwin(v9);
  v11 = (char *)&v63 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for ColorScheme(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v63 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_10004CFD4(&qword_1009D88C0);
  __chkstk_darwin(v16);
  v18 = (char *)&v63 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_10004CFD4(&qword_1009D88C8);
  __chkstk_darwin(v19);
  v21 = (char *)&v63 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_10004CFD4(&qword_1009D88D0);
  v67 = *(_QWORD *)(v22 - 8);
  v68 = v22;
  __chkstk_darwin(v22);
  v63 = (char *)&v63 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v66 = sub_10004CFD4(&qword_1009D88D8);
  __chkstk_darwin(v66);
  v70 = (uint64_t)&v63 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  v65 = (char *)&v63 - v26;
  __chkstk_darwin(v27);
  v69 = (uint64_t)&v63 - v28;
  sub_1002DAE8C((uint64_t)v18);
  KeyPath = swift_getKeyPath(&unk_100718258);
  v71 = a1;
  v30 = *(_QWORD *)(a1 + 48);
  v31 = swift_retain(v30);
  ThemeOptionsViewModel.theme.getter(v31);
  v32 = swift_release(v30);
  LOBYTE(v30) = BookThemeEntity.hasDarkBackground.getter(v32);
  (*(void (**)(char *, uint64_t))(v75 + 8))(v11, v76);
  v33 = (unsigned int *)&enum case for ColorScheme.dark(_:);
  if ((v30 & 1) == 0)
    v33 = (unsigned int *)&enum case for ColorScheme.light(_:);
  (*(void (**)(char *, _QWORD, uint64_t))(v13 + 104))(v15, *v33, v12);
  v34 = (uint64_t *)&v21[*(int *)(v19 + 36)];
  v35 = sub_10004CFD4(&qword_1009D88E0);
  (*(void (**)(char *, char *, uint64_t))(v13 + 16))((char *)v34 + *(int *)(v35 + 28), v15, v12);
  *v34 = KeyPath;
  sub_10000B5E4((uint64_t)v18, (uint64_t)v21, &qword_1009D88C0);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  sub_100010960((uint64_t)v18, &qword_1009D88C0);
  v36 = enum case for DynamicTypeSize.xxLarge(_:);
  v37 = type metadata accessor for DynamicTypeSize(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 104))(v8, v36, v37);
  v38 = sub_100008DB0(&qword_1009D88B0, (uint64_t (*)(uint64_t))&type metadata accessor for DynamicTypeSize, (uint64_t)&protocol conformance descriptor for DynamicTypeSize);
  result = dispatch thunk of static Equatable.== infix(_:_:)(v8, v8, v37, v38);
  if ((result & 1) != 0)
  {
    v40 = sub_1002E7DD4();
    v41 = sub_100030B34(&qword_1009D8898, &qword_1009DE640, (uint64_t)&protocol conformance descriptor for PartialRangeThrough<A>);
    v42 = v63;
    View.dynamicTypeSize<A>(_:)(v8, v19, v64, v40, v41);
    sub_100010960((uint64_t)v8, &qword_1009DE640);
    v43 = sub_100010960((uint64_t)v21, &qword_1009D88C8);
    v44 = static Edge.Set.leading.getter(v43);
    v45 = v44;
    v46 = static Edge.Set.top.getter(v44);
    v47 = v46;
    v48 = static Edge.Set.trailing.getter(v46);
    v49 = Edge.Set.init(rawValue:)(0);
    v50 = Edge.Set.init(rawValue:)(v49);
    if (Edge.Set.init(rawValue:)(v50 & v45) != v45)
      v49 = Edge.Set.init(rawValue:)(v49 | v45);
    v51 = Edge.Set.init(rawValue:)(v49);
    if (Edge.Set.init(rawValue:)(v51 & v47) != v47)
      v49 = Edge.Set.init(rawValue:)(v49 | v47);
    v52 = Edge.Set.init(rawValue:)(v49);
    if (Edge.Set.init(rawValue:)(v52 & v48) != v48)
      LOBYTE(v49) = Edge.Set.init(rawValue:)(v49 | v48);
    v54 = v67;
    v53 = v68;
    v55 = (uint64_t)v65;
    (*(void (**)(char *, char *, uint64_t))(v67 + 16))(v65, v42, v68);
    v56 = v55 + *(int *)(v66 + 36);
    *(_BYTE *)v56 = v49;
    *(_OWORD *)(v56 + 8) = 0u;
    *(_OWORD *)(v56 + 24) = 0u;
    *(_BYTE *)(v56 + 40) = 1;
    (*(void (**)(char *, uint64_t))(v54 + 8))(v42, v53);
    v57 = v69;
    sub_100025B3C(v55, v69, &qword_1009D88D8);
    v58 = v72;
    sub_1002DB2CC(v72);
    v59 = v70;
    sub_10000B5E4(v57, v70, &qword_1009D88D8);
    v60 = v74;
    sub_10000B5E4(v58, v74, &qword_1009D88B8);
    v61 = v73;
    sub_10000B5E4(v59, v73, &qword_1009D88D8);
    v62 = sub_10004CFD4(&qword_1009D8910);
    sub_10000B5E4(v60, v61 + *(int *)(v62 + 48), &qword_1009D88B8);
    sub_100010960(v58, &qword_1009D88B8);
    sub_100010960(v57, &qword_1009D88D8);
    sub_100010960(v60, &qword_1009D88B8);
    return sub_100010960(v59, &qword_1009D88D8);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002DAE8C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t ObjCClassFromMetadata;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  __n128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  __n128 v48;
  double v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD v65[3];

  v63 = a1;
  v64 = sub_10004CFD4((uint64_t *)&unk_1009D8900);
  __chkstk_darwin(v64);
  v3 = (char *)&v60 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = sub_10004CFD4(&qword_1009D8A58);
  __chkstk_darwin(v62);
  v5 = (char *)&v60 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = type metadata accessor for Locale(0);
  v6 = *(_QWORD *)(v61 - 8);
  __chkstk_darwin(v61);
  v8 = (char *)&v60 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v60 - v10;
  v12 = type metadata accessor for String.LocalizationValue(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v60 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v18 = (char *)&v60 - v17;
  v19 = type metadata accessor for ThemeOptionsView(0);
  if (*(_BYTE *)(v1 + *(int *)(v19 + 76)) == 1)
  {
    v20 = String.LocalizationValue.init(stringLiteral:)(0x7A696D6F74737543, 0xEF656D6568542065);
    static Locale.current.getter(v20);
    (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v15, v18, v12);
    v21 = type metadata accessor for BundleFinder();
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v21);
    v23 = objc_msgSend((id)objc_opt_self(NSBundle), "bundleForClass:", ObjCClassFromMetadata);
    v24 = v61;
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v8, v11, v61);
    v25 = String.init(localized:table:bundle:locale:comment:)(v15, 0, 0, v23, v8, "Theme Options title", 19, 2);
    v27 = v26;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v24);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v18, v12);
    v28 = String.init(format:_:)(v25, v27, _swiftEmptyArrayStorage);
    v30 = v29;
    swift_bridgeObjectRelease(v27);
    v65[0] = v28;
    v65[1] = v30;
    v31 = sub_1001F2108();
    v33 = Text.init<A>(_:)(v65, &type metadata for String, v31, v32);
    v35 = v34;
    v37 = v36;
    v39 = v38 & 1;
    v40 = static Font.title3.getter();
    v41 = Text.font(_:)(v40, v33, v35, v39, v37);
    v43 = v42;
    v45 = v44;
    v47 = v46;
    swift_release(v40);
    sub_1001F5B28(v33, v35, v39);
    v48 = swift_bridgeObjectRelease(v37);
    v49 = static Font.Weight.bold.getter(v48);
    v50 = Text.fontWeight(_:)(*(_QWORD *)&v49, 0, v41, v43, v45 & 1, v47);
    v52 = v51;
    LOBYTE(v37) = v53;
    v55 = v54;
    sub_1001F5B28(v41, v43, v45 & 1);
    swift_bridgeObjectRelease(v47);
    *(_QWORD *)v5 = v50;
    *((_QWORD *)v5 + 1) = v52;
    v5[16] = v37 & 1;
    *((_QWORD *)v5 + 3) = v55;
    swift_storeEnumTagMultiPayload(v5, v62, 0);
    v56 = sub_100030B34(&qword_1009D88F8, (uint64_t *)&unk_1009D8900, (uint64_t)&protocol conformance descriptor for HStack<A>);
    return _ConditionalContent<>.init(storage:)(v5, &type metadata for Text, v64, &protocol witness table for Text, v56);
  }
  else
  {
    *(_QWORD *)v3 = static VerticalAlignment.center.getter(v19);
    *((_QWORD *)v3 + 1) = 0;
    v3[16] = 1;
    v58 = sub_10004CFD4(&qword_1009D8A60);
    sub_1002DC7BC(v1, &v3[*(int *)(v58 + 44)]);
    sub_10000B5E4((uint64_t)v3, (uint64_t)v5, (uint64_t *)&unk_1009D8900);
    swift_storeEnumTagMultiPayload(v5, v62, 1);
    v59 = sub_100030B34(&qword_1009D88F8, (uint64_t *)&unk_1009D8900, (uint64_t)&protocol conformance descriptor for HStack<A>);
    _ConditionalContent<>.init(storage:)(v5, &type metadata for Text, v64, &protocol witness table for Text, v59);
    return sub_100010960((uint64_t)v3, (uint64_t *)&unk_1009D8900);
  }
}

uint64_t sub_1002DB2CC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __n128 v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  __int128 v50;
  uint64_t v51;
  char v52;
  double v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  __n128 v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t KeyPath;
  uint64_t *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  __n128 v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t *v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t ObjCClassFromMetadata;
  id v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t OpaqueTypeConformance2;
  unint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  __n128 v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  char *v128;
  char *v129;
  uint64_t v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  char *v135;
  char *v136;
  uint64_t v137;
  char *v138;
  uint64_t v139;
  char *v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  char *v144;
  _QWORD v145[2];
  uint64_t v146;
  uint64_t v147;
  _OWORD v148[3];

  v143 = a1;
  v2 = type metadata accessor for Locale(0);
  v141 = *(_QWORD *)(v2 - 8);
  v142 = v2;
  __chkstk_darwin(v2);
  v138 = (char *)&v115 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v140 = (char *)&v115 - v5;
  v139 = type metadata accessor for String.LocalizationValue(0);
  v137 = *(_QWORD *)(v139 - 8);
  __chkstk_darwin(v139);
  v135 = (char *)&v115 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v136 = (char *)&v115 - v8;
  v133 = type metadata accessor for AccessibilityChildBehavior(0);
  v132 = *(_QWORD *)(v133 - 8);
  __chkstk_darwin(v133);
  v131 = (char *)&v115 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_10004CFD4(&qword_1009D8918);
  __chkstk_darwin(v10);
  v123 = (char *)&v115 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v122 = type metadata accessor for ContentSizeCategory(0);
  v121 = *(_QWORD *)(v122 - 8);
  __chkstk_darwin(v122);
  v124 = (char *)&v115 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v134 = type metadata accessor for BookThemeEntity(0);
  v120 = *(_QWORD *)(v134 - 8);
  __chkstk_darwin(v134);
  v117 = (char *)&v115 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_10004CFD4(&qword_1009D8920);
  __chkstk_darwin(v14);
  v16 = (char *)&v115 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_10004CFD4(&qword_1009D8928);
  __chkstk_darwin(v17);
  v19 = (char *)&v115 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v116 = sub_10004CFD4(&qword_1009D8930);
  __chkstk_darwin(v116);
  v21 = (char *)&v115 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v118 = sub_10004CFD4(&qword_1009D8938);
  __chkstk_darwin(v118);
  v23 = (char *)&v115 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v119 = sub_10004CFD4(&qword_1009D8940);
  __chkstk_darwin(v119);
  v25 = (char *)&v115 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v125 = sub_10004CFD4(&qword_1009D8948);
  __chkstk_darwin(v125);
  v27 = (char *)&v115 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v127 = sub_10004CFD4(&qword_1009D8950);
  v126 = *(_QWORD *)(v127 - 8);
  __chkstk_darwin(v127);
  v144 = (char *)&v115 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v130 = sub_10004CFD4(&qword_1009D88B8);
  __chkstk_darwin(v130);
  v128 = (char *)&v115 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v30);
  v129 = (char *)&v115 - v31;
  *(_QWORD *)v16 = static HorizontalAlignment.center.getter(v32);
  *((_QWORD *)v16 + 1) = 0;
  v16[16] = 1;
  v33 = sub_10004CFD4(&qword_1009D8958);
  sub_1002DD9CC(v1, (uint64_t)&v16[*(int *)(v33 + 44)]);
  v34 = v1;
  v35.n128_f64[0] = sub_1002DD878();
  v36 = v35.n128_u64[0];
  v38 = v37;
  v40 = v39;
  v42 = v41;
  v43 = static Edge.Set.all.getter(v35);
  sub_10000B5E4((uint64_t)v16, (uint64_t)v19, &qword_1009D8920);
  v44 = &v19[*(int *)(v17 + 36)];
  *v44 = v43;
  *((_QWORD *)v44 + 1) = v36;
  *((_QWORD *)v44 + 2) = v38;
  *((_QWORD *)v44 + 3) = v40;
  *((_QWORD *)v44 + 4) = v42;
  v44[40] = 0;
  sub_100010960((uint64_t)v16, &qword_1009D8920);
  v45 = sub_1002D8814();
  if ((v45 & 1) != 0)
    v46 = 0x4061800000000000;
  else
    v46 = 0x4069000000000000;
  v47 = static Alignment.center.getter(v45);
  _FrameLayout.init(width:height:alignment:)(v148, 0, 1, v46, 0, v47, v48);
  sub_10000B5E4((uint64_t)v19, (uint64_t)v21, &qword_1009D8928);
  v49 = &v21[*(int *)(v116 + 36)];
  v50 = v148[1];
  *(_OWORD *)v49 = v148[0];
  *((_OWORD *)v49 + 1) = v50;
  *((_OWORD *)v49 + 2) = v148[2];
  v51 = sub_100010960((uint64_t)v19, &qword_1009D8928);
  v52 = static Edge.Set.vertical.getter(v51);
  v53 = EdgeInsets.init(_all:)(16.0);
  v55 = v54;
  v57 = v56;
  v59 = v58;
  sub_10000B5E4((uint64_t)v21, (uint64_t)v23, &qword_1009D8930);
  v60 = &v23[*(int *)(v118 + 36)];
  *v60 = v52;
  *((double *)v60 + 1) = v53;
  *((_QWORD *)v60 + 2) = v55;
  *((_QWORD *)v60 + 3) = v57;
  *((_QWORD *)v60 + 4) = v59;
  v60[40] = 0;
  sub_100010960((uint64_t)v21, &qword_1009D8930);
  v61 = *(_QWORD *)(v34 + 48);
  v62 = swift_retain(v61);
  v63 = v117;
  ThemeOptionsViewModel.theme.getter(v62);
  v64 = swift_release(v61);
  v65 = BookThemeEntity.textColor.getter(v64);
  (*(void (**)(char *, uint64_t))(v120 + 8))(v63, v134);
  v66 = Color.init(_:)(v65);
  KeyPath = swift_getKeyPath(&unk_100718408);
  sub_10000B5E4((uint64_t)v23, (uint64_t)v25, &qword_1009D8938);
  v68 = (uint64_t *)&v25[*(int *)(v119 + 36)];
  *v68 = KeyPath;
  v68[1] = v66;
  v69 = (uint64_t)v23;
  v70 = v121;
  sub_100010960(v69, &qword_1009D8938);
  v71 = swift_getKeyPath(&unk_1007184F8);
  v134 = v34;
  v72 = *(_QWORD *)(v34 + 48);
  v73 = swift_retain(v72);
  v74 = ThemeOptionsViewModel.sizeCategory.getter(v73);
  v75 = v72;
  v76 = (uint64_t)v123;
  v77 = swift_release(v75);
  v78 = v74;
  v79 = v122;
  ContentSizeCategory.init(_:)(v78, v77);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v70 + 48))(v76, 1, v79) == 1)
  {
    v80 = v124;
    (*(void (**)(char *, _QWORD, uint64_t))(v70 + 104))(v124, enum case for ContentSizeCategory.medium(_:), v79);
    sub_100010960(v76, &qword_1009D8918);
  }
  else
  {
    v80 = v124;
    (*(void (**)(char *, uint64_t, uint64_t))(v70 + 32))(v124, v76, v79);
  }
  v81 = v125;
  v82 = (uint64_t *)&v27[*(int *)(v125 + 36)];
  v83 = sub_10004CFD4(&qword_1009D8960);
  (*(void (**)(char *, char *, uint64_t))(v70 + 16))((char *)v82 + *(int *)(v83 + 28), v80, v79);
  *v82 = v71;
  sub_10000B5E4((uint64_t)v25, (uint64_t)v27, &qword_1009D8940);
  (*(void (**)(char *, uint64_t))(v70 + 8))(v80, v79);
  v84 = sub_100010960((uint64_t)v25, &qword_1009D8940);
  v85 = v131;
  static AccessibilityChildBehavior.combine.getter(v84);
  v124 = (char *)sub_1002E7EDC();
  View.accessibilityElement(children:)(v85, v81, v124);
  (*(void (**)(char *, uint64_t))(v132 + 8))(v85, v133);
  sub_100010960((uint64_t)v27, &qword_1009D8948);
  v86 = v136;
  v87 = String.LocalizationValue.init(stringLiteral:)(0x727020656D656854, 0xED00007765697665);
  v88 = v140;
  static Locale.current.getter(v87);
  v89 = v137;
  v90 = v135;
  v91 = v139;
  (*(void (**)(char *, char *, uint64_t))(v137 + 16))(v135, v86, v139);
  v92 = type metadata accessor for BundleFinder();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v92);
  v94 = objc_msgSend((id)objc_opt_self(NSBundle), "bundleForClass:", ObjCClassFromMetadata);
  v96 = v141;
  v95 = v142;
  v97 = v138;
  (*(void (**)(char *, char *, uint64_t))(v141 + 16))(v138, v88, v142);
  v98 = String.init(localized:table:bundle:locale:comment:)(v90, 0, 0, v94, v97, "Accessibility label for an object that shows a preview of a theme", 65, 2);
  v100 = v99;
  (*(void (**)(char *, uint64_t))(v96 + 8))(v88, v95);
  (*(void (**)(char *, uint64_t))(v89 + 8))(v86, v91);
  v146 = v98;
  v147 = v100;
  v145[0] = v81;
  v145[1] = v124;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v145, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
  v102 = sub_1001F2108();
  v103 = (uint64_t)v128;
  v104 = v127;
  v105 = v144;
  View.accessibilityLabel<A>(_:)(&v146, v127, &type metadata for String, OpaqueTypeConformance2, v102);
  v106 = swift_bridgeObjectRelease(v100);
  (*(void (**)(char *, uint64_t, __n128))(v126 + 8))(v105, v104, v106);
  v107 = *(_QWORD *)(v134 + 48);
  v108 = swift_retain(v107);
  v109 = ThemeOptionsViewModel.accessibleDescription.getter(v108);
  v111 = v110;
  swift_release(v107);
  v146 = v109;
  v147 = v111;
  v112 = (uint64_t)v129;
  v113 = v130;
  ModifiedContent<>.accessibilityValue<A>(_:)(&v146, v130, &type metadata for String, v102);
  swift_bridgeObjectRelease(v111);
  sub_100010960(v103, &qword_1009D88B8);
  ModifiedContent<>.accessibilityRespondsToUserInteraction(_:)(0, v113);
  return sub_100010960(v112, &qword_1009D88B8);
}

uint64_t sub_1002DBD08@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t OpaqueTypeConformance2;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  double v45;
  uint64_t KeyPath;
  uint64_t v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char v67[16];
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;

  v2 = v1;
  v66 = a1;
  v3 = type metadata accessor for SwitchToggleStyle(0);
  v4 = *(_QWORD *)(v3 - 8);
  v64 = v3;
  v65 = v4;
  v5 = __chkstk_darwin(v3);
  v63 = (char *)&v51 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = type metadata accessor for Prominence(0, v5);
  v53 = *(_QWORD *)(v59 - 8);
  v7 = __chkstk_darwin(v59);
  v57 = (char *)&v51 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for GroupedFormStyle(0, v7);
  v52 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v11 = (char *)&v51 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_10004CFD4(&qword_1009D8528);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v51 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_10004CFD4(&qword_1009D8530);
  v55 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v18 = (char *)&v51 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = sub_10004CFD4(&qword_1009D8538);
  v60 = *(_QWORD *)(v58 - 8);
  __chkstk_darwin(v58);
  v20 = (char *)&v51 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_10004CFD4(&qword_1009D8540);
  v61 = *(_QWORD *)(v21 - 8);
  v62 = v21;
  __chkstk_darwin(v21);
  v54 = (char *)&v51 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_10004CFD4(&qword_1009D8548);
  __chkstk_darwin(v23);
  v56 = (uint64_t)&v51 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v68 = v2;
  v25 = sub_10004CFD4(&qword_1009D8550);
  v26 = sub_100030B34(&qword_1009D8558, &qword_1009D8550, (uint64_t)&protocol conformance descriptor for TupleView<A>);
  v27 = Form.init(content:)(sub_1002E6930, v67, v25, v26);
  static FormStyle<>.grouped.getter(v27);
  v28 = sub_100030B34(&qword_1009D8560, &qword_1009D8528, (uint64_t)&protocol conformance descriptor for Form<A>);
  v29 = sub_100008DB0(&qword_1009D8568, (uint64_t (*)(uint64_t))&type metadata accessor for GroupedFormStyle, (uint64_t)&protocol conformance descriptor for GroupedFormStyle);
  View.formStyle<A>(_:)(v11, v12, v9, v28, v29);
  (*(void (**)(char *, uint64_t))(v52 + 8))(v11, v9);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  v30 = v53;
  v31 = v57;
  v32 = v59;
  (*(void (**)(char *, _QWORD, uint64_t))(v53 + 104))(v57, enum case for Prominence.increased(_:), v59);
  v69 = v12;
  v70 = v9;
  v71 = v28;
  v72 = v29;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v69, &opaque type descriptor for <<opaque return type of View.formStyle<A>(_:)>>, 1);
  View.headerProminence(_:)(v31, v16, OpaqueTypeConformance2);
  (*(void (**)(char *, uint64_t))(v30 + 8))(v31, v32);
  v34 = (*(uint64_t (**)(char *, uint64_t))(v55 + 8))(v18, v16);
  v35 = v63;
  SwitchToggleStyle.init()(v34);
  v69 = v16;
  v70 = OpaqueTypeConformance2;
  v36 = swift_getOpaqueTypeConformance2(&v69, &opaque type descriptor for <<opaque return type of View.headerProminence(_:)>>, 1);
  v37 = sub_100008DB0(&qword_1009D8570, (uint64_t (*)(uint64_t))&type metadata accessor for SwitchToggleStyle, (uint64_t)&protocol conformance descriptor for SwitchToggleStyle);
  v38 = v54;
  v39 = v58;
  v40 = v64;
  View.toggleStyle<A>(_:)(v35, v58, v64, v36, v37);
  (*(void (**)(char *, uint64_t))(v65 + 8))(v35, v40);
  v41 = (*(uint64_t (**)(char *, uint64_t))(v60 + 8))(v20, v39);
  v42 = static Alignment.center.getter(v41);
  v43 = v56;
  v45 = sub_1005F2230(0.0, 1, 0.0, 1, 0.0, 1, 0.0, 1, v56, 0.0, 1, INFINITY, 0, v42, v44);
  (*(void (**)(char *, uint64_t, double))(v61 + 8))(v38, v62, v45);
  KeyPath = swift_getKeyPath(&unk_100718438);
  if (qword_1009CDE18 != -1)
    swift_once(&qword_1009CDE18, sub_1002D87CC);
  v47 = qword_100A1E480;
  v48 = v66;
  sub_10000B5E4(v43, v66, &qword_1009D8548);
  v49 = (uint64_t *)(v48 + *(int *)(sub_10004CFD4(&qword_1009D8488) + 36));
  *v49 = KeyPath;
  v49[1] = v47;
  return sub_100010960(v43, &qword_1009D8548);
}

uint64_t sub_1002DC240@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t ObjCClassFromMetadata;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  double v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  void (*v54)(char *, char *, uint64_t);
  char *v55;
  char *v56;
  char *v57;
  uint64_t v58;
  void (*v59)(char *, uint64_t);
  uint64_t v61;
  char *v62;
  void (*v63)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t (*v64)(char *, uint64_t);
  void (*v65)(char *, uint64_t);
  void (*v66)(char *, char *, uint64_t);
  id v67;
  uint64_t v68;
  unint64_t v69;
  void (*v70)(char *, char *, uint64_t);
  char *v71;
  char *v72;
  char *v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;

  v79 = a1;
  v80 = a2;
  v2 = type metadata accessor for ThemeOptionsView(0);
  v3 = *(_QWORD *)(*(_QWORD *)(v2 - 8) + 64);
  v77 = *(_QWORD *)(v2 - 8);
  v78 = v3;
  __chkstk_darwin(v2);
  v76 = (uint64_t)&v61 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10004CFD4(&qword_1009D8458);
  __chkstk_darwin(v5);
  v71 = (char *)&v61 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Locale(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v61 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v61 - v12;
  v14 = type metadata accessor for String.LocalizationValue(0);
  v15 = *(_QWORD *)(v14 - 8);
  v61 = v14;
  __chkstk_darwin(v14);
  v17 = (char *)&v61 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v20 = (char *)&v61 - v19;
  v21 = sub_10004CFD4(&qword_1009D8460);
  v74 = *(_QWORD *)(v21 - 8);
  __chkstk_darwin(v21);
  v75 = (char *)&v61 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  v73 = (char *)&v61 - v24;
  __chkstk_darwin(v25);
  v72 = (char *)&v61 - v26;
  __chkstk_darwin(v27);
  v81 = (char *)&v61 - v28;
  v29 = String.LocalizationValue.init(stringLiteral:)(0x6C65636E6143, 0xE600000000000000);
  static Locale.current.getter(v29);
  v70 = *(void (**)(char *, char *, uint64_t))(v15 + 16);
  v70(v17, v20, v14);
  v30 = type metadata accessor for BundleFinder();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v30);
  v68 = ObjCClassFromMetadata;
  v67 = (id)objc_opt_self(NSBundle);
  v32 = objc_msgSend(v67, "bundleForClass:", ObjCClassFromMetadata);
  v66 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
  v62 = v10;
  v66(v10, v13, v7);
  v33 = String.init(localized:table:bundle:locale:comment:)(v17, 0, 0, v32, v10, "Theme Options Reset Alert Cancel Button", 39, 2);
  v35 = v34;
  v65 = *(void (**)(char *, uint64_t))(v8 + 8);
  v65(v13, v7);
  v64 = *(uint64_t (**)(char *, uint64_t))(v15 + 8);
  v36 = v61;
  v37 = v64(v20, v61);
  v82 = v33;
  v83 = v35;
  v38 = v71;
  static ButtonRole.cancel.getter(v37);
  v39 = type metadata accessor for ButtonRole(0);
  v63 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 56);
  v63(v38, 0, 1, v39);
  v69 = sub_1001F2108();
  Button<>.init<A>(_:role:action:)(&v82, v38, BKAppDelegate.enableMetricsInspectorOnDebugMode(), 0, &type metadata for String, v69);
  v40 = String.LocalizationValue.init(stringLiteral:)(0x7465736552, 0xE500000000000000);
  static Locale.current.getter(v40);
  v70(v17, v20, v36);
  v41 = objc_msgSend(v67, "bundleForClass:", v68);
  v42 = v62;
  v66(v62, v13, v7);
  v43 = String.init(localized:table:bundle:locale:comment:)(v17, 0, 0, v41, v42, "Reset alert button", 18, 2);
  v45 = v44;
  v65(v13, v7);
  v46 = ((double (*)(char *, uint64_t))v64)(v20, v36);
  v82 = v43;
  v83 = v45;
  static ButtonRole.destructive.getter(v46);
  v63(v38, 0, 1, v39);
  v47 = v76;
  sub_10002CD84(v79, v76, type metadata accessor for ThemeOptionsView);
  v48 = *(unsigned __int8 *)(v77 + 80);
  v49 = (v48 + 16) & ~v48;
  v50 = swift_allocObject(&unk_1008FA9E0, v49 + v78, v48 | 7);
  sub_1002E6670(v47, v50 + v49);
  v51 = v72;
  Button<>.init<A>(_:role:action:)(&v82, v38, sub_1002E6710, v50, &type metadata for String, v69);
  v52 = v73;
  v53 = v74;
  v54 = *(void (**)(char *, char *, uint64_t))(v74 + 16);
  v55 = v81;
  v54(v73, v81, v21);
  v56 = v75;
  v54(v75, v51, v21);
  v57 = v80;
  v54(v80, v52, v21);
  v58 = sub_10004CFD4(&qword_1009D8468);
  v54(&v57[*(int *)(v58 + 48)], v56, v21);
  v59 = *(void (**)(char *, uint64_t))(v53 + 8);
  v59(v51, v21);
  v59(v55, v21);
  v59(v56, v21);
  return ((uint64_t (*)(char *, uint64_t))v59)(v52, v21);
}

uint64_t sub_1002DC7BC@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t ObjCClassFromMetadata;
  id v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t KeyPath;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t *v71;
  uint64_t v72;
  char *v73;
  unint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  id v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  __n128 v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char v102;
  uint64_t v103;
  uint64_t v104;
  __n128 v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t *v118;
  uint64_t v119;
  void (*v120)(char *, char *, uint64_t);
  char *v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  char *v126;
  uint64_t v127;
  int *v128;
  char *v129;
  uint64_t v130;
  char *v131;
  void (*v132)(char *, uint64_t);
  uint64_t v134;
  char *v135;
  char *v136;
  uint64_t (*v137)(char *, uint64_t);
  void (*v138)(char *, uint64_t);
  void (*v139)(char *, char *, uint64_t);
  id v140;
  uint64_t v141;
  uint64_t v142;
  void (*v143)(char *, char *, uint64_t);
  uint64_t v144;
  char *v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  char *v149;
  uint64_t v150;
  uint64_t v151;
  char *v152;
  char *v153;
  uint64_t v154;
  uint64_t v155;
  char *v156;
  uint64_t v157;
  char *v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  char *v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  char *v168;
  uint64_t v169;
  char v170[8];
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  char v174;
  uint64_t v175;

  v162 = a1;
  v156 = a2;
  v155 = type metadata accessor for AccessibilityTraits(0);
  v154 = *(_QWORD *)(v155 - 8);
  __chkstk_darwin(v155);
  v153 = (char *)&v134 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_10004CFD4(&qword_1009D8A68);
  __chkstk_darwin(v3);
  v166 = (uint64_t)&v134 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __chkstk_darwin(v5);
  v167 = (uint64_t)&v134 - v7;
  v151 = type metadata accessor for KeyboardShortcut(0, v6);
  v150 = *(_QWORD *)(v151 - 8);
  __chkstk_darwin(v151);
  v149 = (char *)&v134 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for ThemeOptionsView(0);
  v148 = *(_QWORD *)(v9 - 8);
  v147 = *(_QWORD *)(v148 + 64);
  __chkstk_darwin(v9);
  v161 = (uint64_t)&v134 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_10004CFD4(&qword_1009D8458);
  __chkstk_darwin(v11);
  v145 = (char *)&v134 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v157 = type metadata accessor for Locale(0);
  v13 = *(_QWORD *)(v157 - 8);
  __chkstk_darwin(v157);
  v15 = (char *)&v134 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v18 = (char *)&v134 - v17;
  v19 = type metadata accessor for String.LocalizationValue(0);
  v20 = *(_QWORD *)(v19 - 8);
  v21 = v19;
  __chkstk_darwin(v19);
  v23 = (char *)&v134 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  v26 = (char *)&v134 - v25;
  v160 = sub_10004CFD4(&qword_1009D8460);
  v144 = *(_QWORD *)(v160 - 8);
  __chkstk_darwin(v160);
  v158 = (char *)&v134 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v165 = sub_10004CFD4(&qword_1009D84F0);
  __chkstk_darwin(v165);
  v152 = (char *)&v134 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v29);
  v169 = (uint64_t)&v134 - v30;
  v142 = sub_10004CFD4(&qword_1009D84E0);
  __chkstk_darwin(v142);
  v32 = (char *)&v134 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v164 = sub_10004CFD4(&qword_1009D84E8);
  v159 = *(_QWORD *)(v164 - 8);
  __chkstk_darwin(v164);
  v168 = (char *)&v134 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v34);
  v163 = (char *)&v134 - v35;
  v36 = String.LocalizationValue.init(stringLiteral:)(0x6C65636E6143, 0xE600000000000000);
  static Locale.current.getter(v36);
  v143 = *(void (**)(char *, char *, uint64_t))(v20 + 16);
  v135 = v23;
  v37 = v21;
  v134 = v21;
  v143(v23, v26, v21);
  v38 = type metadata accessor for BundleFinder();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v38);
  v141 = ObjCClassFromMetadata;
  v140 = (id)objc_opt_self(NSBundle);
  v40 = objc_msgSend(v140, "bundleForClass:", ObjCClassFromMetadata);
  v41 = v13;
  v139 = *(void (**)(char *, char *, uint64_t))(v13 + 16);
  v136 = v15;
  v42 = v18;
  v43 = v18;
  v44 = v157;
  v139(v15, v43, v157);
  v45 = String.init(localized:table:bundle:locale:comment:)(v23, 0, 0, v40, v15, "Theme Options cancel button", 27, 2);
  v47 = v46;
  v138 = *(void (**)(char *, uint64_t))(v41 + 8);
  v48 = v42;
  v138(v42, v44);
  v137 = *(uint64_t (**)(char *, uint64_t))(v20 + 8);
  v49 = v137(v26, v37);
  v172 = v45;
  v173 = v47;
  v50 = v145;
  static ButtonRole.cancel.getter(v49);
  v51 = type metadata accessor for ButtonRole(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 56))(v50, 0, 1, v51);
  v52 = v161;
  v53 = v162;
  sub_10002CD84(v162, v161, type metadata accessor for ThemeOptionsView);
  v54 = *(unsigned __int8 *)(v148 + 80);
  v147 += (v54 + 16) & ~v54;
  v55 = (v54 + 16) & ~v54;
  v148 = v55;
  v146 = v54 | 7;
  v56 = swift_allocObject(&unk_1008FADC8, v147, v54 | 7);
  sub_1002E6670(v52, v56 + v55);
  v57 = sub_1001F2108();
  v58 = v158;
  Button<>.init<A>(_:role:action:)(&v172, v50, sub_1002E67CC, v56, &type metadata for String, v57);
  v59 = *(_QWORD *)(v53 + 48);
  v60 = swift_retain(v59);
  LOBYTE(v56) = ThemeOptionsViewModel.canCancel.getter(v60);
  swift_release(v59);
  KeyPath = swift_getKeyPath(&unk_1007183D8);
  v62 = swift_allocObject(&unk_1008FADF0, 17, 7);
  *(_BYTE *)(v62 + 16) = (v56 & 1) == 0;
  v63 = v144;
  v145 = *(char **)(v144 + 16);
  v64 = v169;
  v65 = v160;
  ((void (*)(uint64_t, char *, uint64_t))v145)(v169, v58, v160);
  v66 = (uint64_t *)(v64 + *(int *)(v165 + 36));
  *v66 = KeyPath;
  v66[1] = (uint64_t)sub_1002E8520;
  v66[2] = v62;
  v144 = *(_QWORD *)(v63 + 8);
  v67 = ((uint64_t (*)(char *, uint64_t))v144)(v58, v65);
  v68 = static Color.primary.getter(v67);
  v69 = swift_getKeyPath(&unk_100718408);
  sub_10000B5E4(v64, (uint64_t)v32, &qword_1009D84F0);
  v70 = v142;
  v71 = (uint64_t *)&v32[*(int *)(v142 + 36)];
  *v71 = v69;
  v71[1] = v68;
  v72 = sub_100010960(v64, &qword_1009D84F0);
  v73 = v149;
  static KeyboardShortcut.cancelAction.getter(v72);
  v74 = sub_1002E67F0();
  v75 = v168;
  View.keyboardShortcut(_:)(v73, v70, v74);
  (*(void (**)(char *, uint64_t))(v150 + 8))(v73, v151);
  sub_100010960((uint64_t)v32, &qword_1009D84E0);
  v76 = v159;
  (*(void (**)(char *, char *, uint64_t))(v159 + 32))(v163, v75, v164);
  v77 = String.LocalizationValue.init(stringLiteral:)(0x7A696D6F74737543, 0xEF656D6568542065);
  static Locale.current.getter(v77);
  v78 = v135;
  v79 = v134;
  v143(v135, v26, v134);
  v80 = objc_msgSend(v140, "bundleForClass:", v141);
  v81 = v136;
  v82 = v157;
  v139(v136, v48, v157);
  v83 = String.init(localized:table:bundle:locale:comment:)(v78, 0, 0, v80, v81, "Theme Options title", 19, 2);
  v85 = v84;
  v138(v48, v82);
  v137(v26, v79);
  v86 = String.init(format:_:)(v83, v85, _swiftEmptyArrayStorage);
  v88 = v87;
  v89 = swift_bridgeObjectRelease(v85);
  v172 = v86;
  v173 = v88;
  v90 = Text.init<A>(_:)(&v172, &type metadata for String, v57, v89);
  v92 = v91;
  v94 = v93;
  v96 = v95 & 1;
  v97 = static Font.headline.getter();
  v98 = Font.bold()();
  swift_release(v97);
  v99 = Text.font(_:)(v98, v90, v92, v96, v94);
  v101 = v100;
  LOBYTE(v81) = v102;
  v104 = v103;
  swift_release(v98);
  sub_1001F5B28(v90, v92, v96);
  v105 = swift_bridgeObjectRelease(v94);
  v172 = v99;
  v173 = v101;
  v174 = v81 & 1;
  v175 = v104;
  v106 = v153;
  static AccessibilityTraits.isHeader.getter(v105);
  v107 = v166;
  View.accessibilityAddTraits(_:)(v106, &type metadata for Text, &protocol witness table for Text);
  (*(void (**)(char *, uint64_t))(v154 + 8))(v106, v155);
  sub_1001F5B28(v172, v173, v174);
  swift_bridgeObjectRelease(v175);
  sub_100025B3C(v107, v167, &qword_1009D8A68);
  v108 = v161;
  v109 = v162;
  sub_10002CD84(v162, v161, type metadata accessor for ThemeOptionsView);
  v110 = swift_allocObject(&unk_1008FAE18, v147, v146);
  sub_1002E6670(v108, v110 + v148);
  v171 = v109;
  v111 = v158;
  Button.init(action:label:)(sub_1002E6914, v110, sub_1002E81EC, v170, &type metadata for Text, &protocol witness table for Text);
  v112 = *(_QWORD *)(v109 + 48);
  v113 = swift_retain(v112);
  LOBYTE(v92) = ThemeOptionsViewModel.canSave.getter(v113);
  swift_release(v112);
  v114 = swift_getKeyPath(&unk_1007183D8);
  v115 = swift_allocObject(&unk_1008FAE40, 17, 7);
  *(_BYTE *)(v115 + 16) = (v92 & 1) == 0;
  v116 = (uint64_t)v152;
  v117 = v160;
  ((void (*)(char *, char *, uint64_t))v145)(v152, v111, v160);
  v118 = (uint64_t *)(v116 + *(int *)(v165 + 36));
  *v118 = v114;
  v118[1] = (uint64_t)sub_1002E8520;
  v118[2] = v115;
  ((void (*)(char *, uint64_t))v144)(v111, v117);
  v119 = v169;
  sub_100025B3C(v116, v169, &qword_1009D84F0);
  v120 = *(void (**)(char *, char *, uint64_t))(v76 + 16);
  v121 = v168;
  v122 = v163;
  v123 = v164;
  v120(v168, v163, v164);
  v124 = v166;
  v125 = v167;
  sub_10000B5E4(v167, v166, &qword_1009D8A68);
  sub_10000B5E4(v119, v116, &qword_1009D84F0);
  v126 = v156;
  v127 = v123;
  v120(v156, v121, v123);
  v128 = (int *)sub_10004CFD4((uint64_t *)&unk_1009D8A70);
  v129 = &v126[v128[12]];
  *(_QWORD *)v129 = 0;
  v129[8] = 1;
  v130 = v124;
  sub_10000B5E4(v124, (uint64_t)&v126[v128[16]], &qword_1009D8A68);
  v131 = &v126[v128[20]];
  *(_QWORD *)v131 = 0;
  v131[8] = 1;
  sub_10000B5E4(v116, (uint64_t)&v126[v128[24]], &qword_1009D84F0);
  sub_100010960(v169, &qword_1009D84F0);
  sub_100010960(v125, &qword_1009D8A68);
  v132 = *(void (**)(char *, uint64_t))(v159 + 8);
  v132(v122, v127);
  sub_100010960(v116, &qword_1009D84F0);
  sub_100010960(v130, &qword_1009D8A68);
  return ((uint64_t (*)(char *, uint64_t))v132)(v168, v127);
}

void sub_1002DD3A4(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t ObjCClassFromMetadata;
  id v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  __n128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  double v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  char v51;
  uint64_t v52;
  uint64_t v53;
  Swift::String v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  uint64_t v59;
  unint64_t v60;
  unint64_t v61;
  Swift::String v62;
  uint64_t v63;
  void *v64;
  uint64_t KeyPath;
  uint64_t v66;
  id v67;
  __n128 v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  char v72;
  void (*v73)(char *, uint64_t);
  uint64_t v74;
  unint64_t v75;
  unint64_t v76;
  uint64_t *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  __n128 v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t *v86;
  uint64_t v87;
  unint64_t v88;

  v82 = a1;
  v86 = a2;
  v2 = type metadata accessor for ColorScheme(0);
  v84 = *(_QWORD *)(v2 - 8);
  v85 = v2;
  __chkstk_darwin(v2);
  v83 = (char *)&v82 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v6 = (char *)&v82 - v5;
  v7 = type metadata accessor for Locale(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v82 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v82 - v12;
  v14 = type metadata accessor for String.LocalizationValue(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&v82 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v20 = (char *)&v82 - v19;
  v21 = String.LocalizationValue.init(stringLiteral:)(1701736260, 0xE400000000000000);
  static Locale.current.getter(v21);
  (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v17, v20, v14);
  v22 = type metadata accessor for BundleFinder();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v22);
  v24 = objc_msgSend((id)objc_opt_self(NSBundle), "bundleForClass:", ObjCClassFromMetadata);
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v10, v13, v7);
  v25 = String.init(localized:table:bundle:locale:comment:)(v17, 0, 0, v24, v10, "Theme Options save button", 25, 2);
  v27 = v26;
  (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
  (*(void (**)(char *, uint64_t))(v15 + 8))(v20, v14);
  v87 = v25;
  v88 = v27;
  v28 = sub_1001F2108();
  v30 = Text.init<A>(_:)(&v87, &type metadata for String, v28, v29);
  v32 = v31;
  v34 = v33;
  v36 = v35 & 1;
  v37 = static Color.primary.getter();
  v38 = Text.foregroundColor(_:)(v37, v30, v32, v36, v34);
  v40 = v39;
  LOBYTE(v8) = v41;
  v43 = v42;
  swift_release(v37);
  v44 = v8 & 1;
  sub_1001F5B28(v30, v32, v36);
  swift_bridgeObjectRelease(v34);
  v46 = static Font.Weight.semibold.getter(v45);
  v47 = Text.fontWeight(_:)(*(_QWORD *)&v46, 0, v38, v40, v44, v43);
  v49 = v48;
  v51 = v50;
  v53 = v52;
  sub_1001F5B28(v38, v40, v44);
  swift_bridgeObjectRelease(v43);
  v87 = 0;
  v88 = 0xE000000000000000;
  _StringGuts.grow(_:)(34);
  v54._countAndFlagsBits = 0x3F79747269447369;
  v54._object = (void *)0xE900000000000020;
  String.append(_:)(v54);
  v55 = v82;
  v56 = *(_QWORD *)(v82 + 48);
  v57 = swift_retain(v56);
  v58 = ThemeOptionsViewModel.isDirty.getter(v57);
  swift_release(v56);
  if ((v58 & 1) != 0)
    v59 = 1702195828;
  else
    v59 = 0x65736C6166;
  if ((v58 & 1) != 0)
    v60 = 0xE400000000000000;
  else
    v60 = 0xE500000000000000;
  v61 = v60;
  String.append(_:)(*(Swift::String *)&v59);
  swift_bridgeObjectRelease(v60);
  v62._object = (void *)0x80000001007BD610;
  v62._countAndFlagsBits = 0xD000000000000015;
  String.append(_:)(v62);
  v63 = v55 + *(int *)(type metadata accessor for ThemeOptionsView(0) + 36);
  v64 = *(void **)v63;
  if (*(_QWORD *)v63)
  {
    KeyPath = swift_getKeyPath(&unk_1007185B8);
    v66 = swift_getKeyPath(&unk_1007185E0);
    v67 = v64;
    static Published.subscript.getter(v6, v67, KeyPath, v66);

    swift_release(KeyPath);
    v68 = swift_release(v66);
    v70 = v83;
    v69 = v84;
    v71 = v85;
    (*(void (**)(char *, _QWORD, uint64_t, __n128))(v84 + 104))(v83, enum case for ColorScheme.light(_:), v85, v68);
    v72 = static ColorScheme.== infix(_:_:)(v6, v70);
    v73 = *(void (**)(char *, uint64_t))(v69 + 8);
    v73(v70, v71);
    v73(v6, v71);
    if ((v72 & 1) != 0)
      v74 = 1702195828;
    else
      v74 = 0x65736C6166;
    if ((v72 & 1) != 0)
      v75 = 0xE400000000000000;
    else
      v75 = 0xE500000000000000;
    v76 = v75;
    String.append(_:)(*(Swift::String *)&v74);
    swift_bridgeObjectRelease(v75);
    swift_bridgeObjectRelease(v88);
    v77 = v86;
    *v86 = v47;
    v77[1] = v49;
    *((_BYTE *)v77 + 16) = v51 & 1;
    v77[3] = v53;
  }
  else
  {
    v78 = *(_QWORD *)(v63 + 8);
    v79 = type metadata accessor for ChromeStyle(0);
    v80 = sub_100008DB0((unint64_t *)&qword_1009D8330, type metadata accessor for ChromeStyle, (uint64_t)&protocol conformance descriptor for ChromeStyle);
    EnvironmentObject.error()(0, v78, v79, v80, v81);
    __break(1u);
  }
}

double sub_1002DD878()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;

  v1 = v0;
  v2 = type metadata accessor for BookThemeEntity(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(v0 + 48);
  v7 = swift_retain(v6);
  v8 = ThemeOptionsViewModel.layoutMode.getter(v7);
  swift_release(v6);
  v9 = 0.0;
  if (v8 == 3)
  {
    v10 = swift_retain(v6);
    ThemeOptionsViewModel.theme.getter(v10);
    v11 = swift_release(v6);
    v12 = BookThemeEntity.marginAdjustmentScaleFactor.getter(v11);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    v9 = v12 * 20.0 + -20.0;
    v6 = *(_QWORD *)(v1 + 48);
  }
  v13 = swift_retain(v6);
  v14 = ThemeOptionsViewModel.layoutMode.getter(v13);
  swift_release(v6);
  if (v14 != 3)
  {
    v15 = swift_retain(v6);
    ThemeOptionsViewModel.theme.getter(v15);
    v16 = swift_release(v6);
    BookThemeEntity.marginAdjustmentScaleFactor.getter(v16);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  return v9;
}

uint64_t sub_1002DD9CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t KeyPath;
  uint64_t v30;
  uint64_t v31;
  char v32;
  __n128 v33;
  unsigned int *v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  double v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  __n128 v58;
  uint64_t v59;
  uint64_t v60;
  __n128 v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  __n128 v66;
  __n128 v67;
  __n128 v68;
  __n128 v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  __n128 v99[8];
  _BYTE v100[26];

  v96 = a2;
  v91 = type metadata accessor for BookThemeEntity(0);
  v90 = *(_QWORD *)(v91 - 8);
  __chkstk_darwin(v91);
  v87 = (char *)&v82 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v83 = type metadata accessor for ThemePreviewWebView(0);
  __chkstk_darwin(v83);
  v5 = (char *)&v82 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v88 = sub_10004CFD4(&qword_1009D89A0);
  __chkstk_darwin(v88);
  v85 = (uint64_t)&v82 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v89 = sub_10004CFD4(&qword_1009D89A8);
  __chkstk_darwin(v89);
  v86 = (uint64_t)&v82 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10004CFD4(&qword_1009D89B0);
  __chkstk_darwin(v8);
  v92 = (uint64_t)&v82 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v95 = sub_10004CFD4(&qword_1009D89B8);
  __chkstk_darwin(v95);
  v93 = (uint64_t)&v82 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v94 = (uint64_t)&v82 - v12;
  v13 = type metadata accessor for LayoutDirection(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v82 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_10004CFD4(&qword_1009D89C0);
  __chkstk_darwin(v17);
  v19 = (char *)&v82 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_10004CFD4(&qword_1009D89C8);
  __chkstk_darwin(v20);
  v84 = (uint64_t)&v82 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v24 = (char *)&v82 - v23;
  __chkstk_darwin(v25);
  v98 = (uint64_t)&v82 - v26;
  *(_QWORD *)v19 = static VerticalAlignment.center.getter(v27);
  *((_QWORD *)v19 + 1) = 0;
  v19[16] = 1;
  v28 = (uint64_t)&v19[*(int *)(sub_10004CFD4((uint64_t *)&unk_1009D89D0) + 44)];
  v97 = a1;
  sub_1002DE184(a1, v28);
  KeyPath = swift_getKeyPath(&unk_1007182E8);
  v30 = *(_QWORD *)(a1 + 48);
  v31 = swift_retain(v30);
  v32 = ThemeOptionsViewModel.isRTL.getter(v31);
  v33 = swift_release(v30);
  v34 = (unsigned int *)&enum case for LayoutDirection.rightToLeft(_:);
  if ((v32 & 1) == 0)
    v34 = (unsigned int *)&enum case for LayoutDirection.leftToRight(_:);
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v14 + 104))(v16, *v34, v13, v33);
  v35 = (uint64_t *)&v24[*(int *)(v20 + 36)];
  v36 = sub_10004CFD4(&qword_1009D1250);
  (*(void (**)(char *, char *, uint64_t))(v14 + 16))((char *)v35 + *(int *)(v36 + 28), v16, v13);
  *v35 = KeyPath;
  sub_10000B5E4((uint64_t)v19, (uint64_t)v24, &qword_1009D89C0);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  sub_100010960((uint64_t)v19, &qword_1009D89C0);
  sub_100025B3C((uint64_t)v24, v98, &qword_1009D89C8);
  v37 = v97;
  v38 = *(_QWORD *)(v97 + 48);
  v39 = swift_retain(v38);
  v82 = ThemeOptionsViewModel.previewHTMLBodyContent.getter(v39);
  v41 = v40;
  swift_release(v38);
  v42 = swift_retain(v38);
  v43 = ThemeOptionsViewModel.isVerticalText.getter(v42);
  swift_release(v38);
  v44 = swift_retain(v38);
  v45 = ThemeOptionsViewModel.textZoomFactor.getter(v44);
  swift_release(v38);
  v46 = swift_retain(v38);
  v47 = ThemeOptionsViewModel.columnCount.getter(v46);
  swift_release(v38);
  v48 = swift_retain(v38);
  v49 = ThemeOptionsViewModel.paginationMode.getter(v48);
  swift_release(v38);
  v50 = *(_QWORD *)(v37 + 56);
  v51 = *(_QWORD *)(v37 + 64);
  v52 = v83;
  swift_retain(v51);
  swift_retain(v38);
  v53 = swift_unknownObjectRetain(v50);
  ThemeOptionsViewModel.theme.getter(v53);
  swift_release(v38);
  v54 = swift_retain(v38);
  v55 = ThemeOptionsViewModel.cleanupOptions.getter(v54);
  swift_release(v38);
  *(_QWORD *)v5 = v82;
  *((_QWORD *)v5 + 1) = v41;
  v5[16] = v43 & 1;
  *((double *)v5 + 3) = v45;
  *((_QWORD *)v5 + 4) = v47;
  *((_QWORD *)v5 + 5) = v49;
  *((_QWORD *)v5 + 6) = v50;
  *((_QWORD *)v5 + 7) = v51;
  *(_QWORD *)&v5[*(int *)(v52 + 48)] = v55;
  v56 = swift_retain(v38);
  v57 = v87;
  ThemeOptionsViewModel.theme.getter(v56);
  v58 = swift_release(v38);
  v59 = BookThemeEntity.backgroundColor.getter(v58);
  (*(void (**)(char *, uint64_t))(v90 + 8))(v57, v91);
  v60 = Color.init(_:)(v59);
  LOBYTE(v38) = static Edge.Set.all.getter(v61);
  v62 = v85;
  sub_10002CD84((uint64_t)v5, v85, type metadata accessor for ThemePreviewWebView);
  v63 = v62 + *(int *)(v88 + 36);
  *(_QWORD *)v63 = v60;
  *(_BYTE *)(v63 + 8) = v38;
  sub_10002C8F0((uint64_t)v5, type metadata accessor for ThemePreviewWebView);
  sub_1002DE41C(v97, v99);
  v64 = v86;
  sub_10000B5E4(v62, v86, &qword_1009D89A0);
  v65 = v64 + *(int *)(v89 + 36);
  v66 = v99[7];
  *(__n128 *)(v65 + 96) = v99[6];
  *(__n128 *)(v65 + 112) = v66;
  *(_OWORD *)(v65 + 128) = *(_OWORD *)v100;
  *(_OWORD *)(v65 + 138) = *(_OWORD *)&v100[10];
  v67 = v99[3];
  *(__n128 *)(v65 + 32) = v99[2];
  *(__n128 *)(v65 + 48) = v67;
  v68 = v99[5];
  *(__n128 *)(v65 + 64) = v99[4];
  *(__n128 *)(v65 + 80) = v68;
  v69 = v99[1];
  *(__n128 *)v65 = v99[0];
  *(__n128 *)(v65 + 16) = v69;
  v70 = sub_100010960(v62, &qword_1009D89A0);
  v71 = static Alignment.leading.getter(v70);
  v72 = v92;
  sub_1005F2288(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v92, 0.0, 1, 0.0, 1, v71, v73);
  sub_100010960(v64, &qword_1009D89A8);
  v74 = v93;
  sub_10000B5E4(v72, v93, &qword_1009D89B0);
  *(_BYTE *)(v74 + *(int *)(v95 + 36)) = 0;
  sub_100010960(v72, &qword_1009D89B0);
  v75 = v74;
  v76 = v94;
  sub_100025B3C(v74, v94, &qword_1009D89B8);
  v77 = v98;
  v78 = v84;
  sub_10000B5E4(v98, v84, &qword_1009D89C8);
  sub_10000B5E4(v76, v74, &qword_1009D89B8);
  v79 = v96;
  sub_10000B5E4(v78, v96, &qword_1009D89C8);
  v80 = sub_10004CFD4(&qword_1009D89E0);
  sub_10000B5E4(v75, v79 + *(int *)(v80 + 48), &qword_1009D89B8);
  sub_100010960(v76, &qword_1009D89B8);
  sub_100010960(v77, &qword_1009D89C8);
  sub_100010960(v75, &qword_1009D89B8);
  return sub_100010960(v78, &qword_1009D89C8);
}

uint64_t sub_1002DE184@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  _OWORD v32[3];

  v31 = a2;
  v3 = type metadata accessor for TextFormatSizeLabel(0);
  __chkstk_darwin(v3);
  v5 = (uint64_t *)((char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = sub_10004CFD4(&qword_1009D8A40);
  __chkstk_darwin(v6);
  v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = sub_10004CFD4(&qword_1009D8A48);
  __chkstk_darwin(v30);
  v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v30 - v12;
  v14 = *(_QWORD *)(a1 + 48);
  swift_retain(v14);
  v15 = sub_100445858(30.0);
  swift_release(v14);
  v16 = swift_retain(v14);
  v17 = ThemeOptionsViewModel.bookLanguage.getter(v16);
  v19 = v18;
  swift_release(v14);
  *v5 = swift_getKeyPath(&unk_100718588);
  v20 = sub_10004CFD4(&qword_1009D38A0);
  v21 = swift_storeEnumTagMultiPayload(v5, v20, 0);
  *(_QWORD *)((char *)v5 + *(int *)(v3 + 20)) = v15;
  v22 = (_QWORD *)((char *)v5 + *(int *)(v3 + 24));
  *v22 = v17;
  v22[1] = v19;
  v23 = static Alignment.center.getter(v21);
  _FrameLayout.init(width:height:alignment:)(v32, 0, 1, 0x4049000000000000, 0, v23, v24);
  sub_10002CD84((uint64_t)v5, (uint64_t)v8, type metadata accessor for TextFormatSizeLabel);
  v25 = &v8[*(int *)(v6 + 36)];
  v26 = v32[1];
  *(_OWORD *)v25 = v32[0];
  *((_OWORD *)v25 + 1) = v26;
  *((_OWORD *)v25 + 2) = v32[2];
  sub_10002C8F0((uint64_t)v5, type metadata accessor for TextFormatSizeLabel);
  sub_10000B5E4((uint64_t)v8, (uint64_t)v10, &qword_1009D8A40);
  *(_WORD *)&v10[*(int *)(v30 + 36)] = 256;
  sub_100010960((uint64_t)v8, &qword_1009D8A40);
  sub_100025B3C((uint64_t)v10, (uint64_t)v13, &qword_1009D8A48);
  sub_10000B5E4((uint64_t)v13, (uint64_t)v10, &qword_1009D8A48);
  v27 = v31;
  sub_10000B5E4((uint64_t)v10, v31, &qword_1009D8A48);
  v28 = v27 + *(int *)(sub_10004CFD4(&qword_1009D8A50) + 48);
  *(_QWORD *)v28 = 0;
  *(_BYTE *)(v28 + 8) = 1;
  sub_100010960((uint64_t)v13, &qword_1009D8A48);
  return sub_100010960((uint64_t)v10, &qword_1009D8A48);
}

__n128 sub_1002DE41C@<Q0>(uint64_t a1@<X0>, __n128 *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  int v15;
  void (*v16)(char *, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  uint64_t v23;
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __n128 v30;
  uint64_t v31;
  uint64_t v32;
  __n128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  __n128 v53;
  __n128 v54;
  __n128 v55;
  __n128 result;
  __n128 v57;
  __int128 v58;
  int v59;
  _OWORD v60[10];
  _BYTE v61[135];
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  char v70;
  __int128 v71;
  _OWORD v72[9];
  __n128 v73;
  _BYTE v74[138];

  v4 = type metadata accessor for LayoutDirection(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v58 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v58 - v9;
  v11 = *(_QWORD *)(a1 + 48);
  v12 = swift_retain(v11);
  v13 = ThemeOptionsViewModel.isVerticalText.getter(v12);
  swift_release(v11);
  v14 = swift_retain(v11);
  v59 = ThemeOptionsViewModel.isRTL.getter(v14);
  swift_release(v11);
  type metadata accessor for ThemeOptionsView(0);
  sub_100667A20((uint64_t)v10);
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, enum case for LayoutDirection.rightToLeft(_:), v4);
  v15 = static LayoutDirection.== infix(_:_:)(v10, v7);
  v16 = *(void (**)(char *, uint64_t))(v5 + 8);
  v16(v7, v4);
  v17 = ((uint64_t (*)(char *, uint64_t))v16)(v10, v4);
  if ((v13 & 1) != 0)
  {
    v18 = sub_10004CFD4(&qword_1009D8A30);
    v19 = swift_allocObject(v18, 48, 7);
    v58 = xmmword_10070FC00;
    *(_OWORD *)(v19 + 16) = xmmword_10070FC00;
    v20 = _s5Books11ChromeStyleC20_pageBackgroundColor33_5E35E2CA450906E5027671B98D3F72C77Combine9PublishedVy7SwiftUI0F0VGvpfi_0();
    v21.n128_u64[0] = 1.0;
    v22 = Color.opacity(_:)(v20, v21);
    swift_release(v20);
    *(_QWORD *)(v19 + 32) = v22;
    v23 = _s5Books11ChromeStyleC20_pageBackgroundColor33_5E35E2CA450906E5027671B98D3F72C77Combine9PublishedVy7SwiftUI0F0VGvpfi_0();
    v24.n128_u64[0] = 1.0;
    v25 = Color.opacity(_:)(v23, v24);
    swift_release(v23);
    *(_QWORD *)(v19 + 40) = v25;
    v73.n128_u64[0] = v19;
    specialized Array._endMutation()(v26);
    v27 = Gradient.init(colors:)(v73.n128_u64[0]);
    v28 = swift_allocObject(v18, 48, 7);
    *(_OWORD *)(v28 + 16) = v58;
    v29 = _s5Books11ChromeStyleC20_pageBackgroundColor33_5E35E2CA450906E5027671B98D3F72C77Combine9PublishedVy7SwiftUI0F0VGvpfi_0();
    v30.n128_u64[0] = 1.0;
    v31 = Color.opacity(_:)(v29, v30);
    swift_release(v29);
    *(_QWORD *)(v28 + 32) = v31;
    v32 = _s5Books11ChromeStyleC20_pageBackgroundColor33_5E35E2CA450906E5027671B98D3F72C77Combine9PublishedVy7SwiftUI0F0VGvpfi_0();
    v33.n128_u64[0] = 0;
    v34 = Color.opacity(_:)(v32, v33);
    swift_release(v32);
    *(_QWORD *)(v28 + 40) = v34;
    v73.n128_u64[0] = v28;
    specialized Array._endMutation()(v35);
    v36 = Gradient.init(colors:)(v73.n128_u64[0]);
    v37 = v36;
    if (((v59 ^ v15) & 1) != 0)
    {
      v38 = static VerticalAlignment.center.getter(v36);
      sub_1002DEC44(v37, v27, (uint64_t)&v62);
      swift_bridgeObjectRelease(v27);
      swift_bridgeObjectRelease(v37);
      *(_OWORD *)&v61[71] = v66;
      *(_OWORD *)&v61[87] = v67;
      *(_OWORD *)&v61[103] = v68;
      *(_OWORD *)&v61[119] = v69;
      *(_OWORD *)&v61[7] = v62;
      *(_OWORD *)&v61[23] = v63;
      *(_OWORD *)&v61[39] = v64;
      *(_OWORD *)&v61[55] = v65;
      *(_OWORD *)&v74[81] = *(_OWORD *)&v61[80];
      *(_OWORD *)&v74[97] = *(_OWORD *)&v61[96];
      *(_OWORD *)&v74[113] = *(_OWORD *)&v61[112];
      *(_OWORD *)&v74[17] = *(_OWORD *)&v61[16];
      *(_OWORD *)&v74[33] = *(_OWORD *)&v61[32];
      *(_OWORD *)&v74[49] = *(_OWORD *)&v61[48];
      *(_OWORD *)&v74[65] = *(_OWORD *)&v61[64];
      v70 = 0;
      v73 = (__n128)(unint64_t)v38;
      v74[0] = 0;
      *(_QWORD *)&v74[128] = *((_QWORD *)&v69 + 1);
      *(_OWORD *)&v74[1] = *(_OWORD *)v61;
      sub_1002E815C((uint64_t)&v73);
    }
    else
    {
      v44 = static VerticalAlignment.center.getter(v36);
      sub_1002DEB18(v27, v37, (uint64_t)&v62);
      swift_bridgeObjectRelease(v37);
      swift_bridgeObjectRelease(v27);
      *(_OWORD *)&v61[71] = v66;
      *(_OWORD *)&v61[87] = v67;
      *(_OWORD *)&v61[103] = v68;
      *(_OWORD *)&v61[119] = v69;
      *(_OWORD *)&v61[7] = v62;
      *(_OWORD *)&v61[23] = v63;
      *(_OWORD *)&v61[39] = v64;
      *(_OWORD *)&v61[55] = v65;
      *(_OWORD *)&v74[81] = *(_OWORD *)&v61[80];
      *(_OWORD *)&v74[97] = *(_OWORD *)&v61[96];
      *(_OWORD *)&v74[113] = *(_OWORD *)&v61[112];
      *(_OWORD *)&v74[17] = *(_OWORD *)&v61[16];
      *(_OWORD *)&v74[33] = *(_OWORD *)&v61[32];
      *(_OWORD *)&v74[49] = *(_OWORD *)&v61[48];
      *(_OWORD *)&v74[65] = *(_OWORD *)&v61[64];
      v70 = 0;
      v73 = (__n128)(unint64_t)v44;
      v74[0] = 0;
      *(_QWORD *)&v74[128] = *((_QWORD *)&v69 + 1);
      *(_OWORD *)&v74[1] = *(_OWORD *)v61;
      sub_1002E8170((uint64_t)&v73);
    }
    sub_100025B3C((uint64_t)&v73, (uint64_t)&v71, &qword_1009D8A38);
    v45 = sub_10004CFD4(&qword_1009D8A10);
    v46 = sub_10004CFD4(&qword_1009D8A20);
    v47 = sub_100030B34(&qword_1009D8A08, &qword_1009D8A10, (uint64_t)&protocol conformance descriptor for HStack<A>);
    v48 = sub_100030B34(&qword_1009D8A18, &qword_1009D8A20, (uint64_t)&protocol conformance descriptor for HStack<A>);
    _ConditionalContent<>.init(storage:)(&v71, v45, v46, v47, v48);
    v72[5] = v60[6];
    v72[6] = v60[7];
    v72[7] = v60[8];
    *(_OWORD *)((char *)&v72[7] + 9) = *(_OWORD *)((char *)&v60[8] + 9);
    v72[1] = v60[2];
    v72[2] = v60[3];
    v72[3] = v60[4];
    v72[4] = v60[5];
    v71 = v60[0];
    v72[0] = v60[1];
    sub_1002E8168((uint64_t)&v71);
    sub_100025B3C((uint64_t)&v71, (uint64_t)v61, &qword_1009D89E8);
    v49 = sub_10004CFD4(&qword_1009D89F0);
    v50 = sub_10004CFD4(&qword_1009D89F8);
    v51 = sub_1002E80B8();
    v52 = sub_100030B34(&qword_1009D8A28, &qword_1009D89F8, (uint64_t)&protocol conformance descriptor for VStack<A>);
    _ConditionalContent<>.init(storage:)(v61, v49, v50, v51, v52);
  }
  else
  {
    v39 = static HorizontalAlignment.center.getter(v17);
    sub_1002DED88((uint64_t)&v62);
    *(_OWORD *)((char *)&v60[4] + 7) = v66;
    *(_OWORD *)((char *)&v60[5] + 7) = v67;
    *(_OWORD *)((char *)&v60[6] + 7) = v68;
    *(_OWORD *)((char *)&v60[7] + 7) = v69;
    *(_OWORD *)((char *)v60 + 7) = v62;
    *(_OWORD *)((char *)&v60[1] + 7) = v63;
    *(_OWORD *)((char *)&v60[2] + 7) = v64;
    *(_OWORD *)((char *)&v60[3] + 7) = v65;
    *(_OWORD *)((char *)&v72[5] + 1) = v60[5];
    *(_OWORD *)((char *)&v72[6] + 1) = v60[6];
    *(_OWORD *)((char *)&v72[7] + 1) = v60[7];
    *(_OWORD *)((char *)&v72[1] + 1) = v60[1];
    *(_OWORD *)((char *)&v72[2] + 1) = v60[2];
    *(_OWORD *)((char *)&v72[3] + 1) = v60[3];
    *(_OWORD *)((char *)&v72[4] + 1) = v60[4];
    v70 = 0;
    v71 = (unint64_t)v39;
    LOBYTE(v72[0]) = 0;
    *(_QWORD *)&v72[8] = *((_QWORD *)&v69 + 1);
    *(_OWORD *)((char *)v72 + 1) = v60[0];
    sub_1002E80AC((uint64_t)&v71);
    sub_100025B3C((uint64_t)&v71, (uint64_t)v61, &qword_1009D89E8);
    v40 = sub_10004CFD4(&qword_1009D89F0);
    v41 = sub_10004CFD4(&qword_1009D89F8);
    v42 = sub_1002E80B8();
    v43 = sub_100030B34(&qword_1009D8A28, &qword_1009D89F8, (uint64_t)&protocol conformance descriptor for VStack<A>);
    _ConditionalContent<>.init(storage:)(v61, v40, v41, v42, v43);
  }
  v53 = *(__n128 *)&v74[96];
  a2[6] = *(__n128 *)&v74[80];
  a2[7] = v53;
  a2[8] = *(__n128 *)&v74[112];
  *(__n128 *)((char *)a2 + 138) = *(__n128 *)&v74[122];
  v54 = *(__n128 *)&v74[32];
  a2[2] = *(__n128 *)&v74[16];
  a2[3] = v54;
  v55 = *(__n128 *)&v74[64];
  a2[4] = *(__n128 *)&v74[48];
  a2[5] = v55;
  result = v73;
  v57 = *(__n128 *)v74;
  *a2 = v73;
  a2[1] = v57;
  return result;
}

double sub_1002DEB18@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  uint64_t v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  char v27;
  double result;
  __int128 v29;
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  uint64_t v33;
  __int128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  char v40;
  __int128 v41;

  v6 = swift_bridgeObjectRetain(a1);
  v7 = static UnitPoint.leading.getter(v6);
  v9 = v8;
  v10 = static UnitPoint.trailing.getter();
  LinearGradient.init(gradient:startPoint:endPoint:)(&v30, a1, v7, v9, v10, v11);
  v12 = swift_bridgeObjectRetain(a2);
  v13 = static UnitPoint.leading.getter(v12);
  v15 = v14;
  v16 = static UnitPoint.trailing.getter();
  v18 = LinearGradient.init(gradient:startPoint:endPoint:)(&v33, a2, v13, v15, v16, v17);
  v19 = v33;
  v29 = v34;
  v20 = v35;
  v21 = v36;
  v22 = static Alignment.trailing.getter(v18);
  _FrameLayout.init(width:height:alignment:)(&v37, 0, 1, 0, 1, v22, v23);
  v24 = v37;
  v25 = v38;
  v26 = v39;
  v27 = v40;
  *(_QWORD *)a3 = v30;
  *(_OWORD *)(a3 + 8) = v31;
  *(_OWORD *)(a3 + 24) = v32;
  *(_QWORD *)(a3 + 40) = v19;
  *(_OWORD *)(a3 + 48) = v29;
  *(_QWORD *)(a3 + 64) = v20;
  *(_QWORD *)(a3 + 72) = v21;
  *(_QWORD *)(a3 + 80) = v24;
  *(_BYTE *)(a3 + 88) = v25;
  *(_QWORD *)(a3 + 96) = v26;
  *(_BYTE *)(a3 + 104) = v27;
  result = *(double *)&v41;
  *(_OWORD *)(a3 + 112) = v41;
  return result;
}

double sub_1002DEC44@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  double v28;
  double v29;
  double v30;
  double v31;
  double v32;
  double v33;
  uint64_t v34;
  double result;
  __int128 v36;
  __int128 v37;
  uint64_t v38;
  __int128 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  __int128 v49;
  __int128 v50;

  v6 = swift_bridgeObjectRetain(a1);
  v7 = static UnitPoint.trailing.getter(v6);
  v9 = v8;
  v11 = v10;
  v12 = static UnitPoint.leading.getter(v7);
  v14 = LinearGradient.init(gradient:startPoint:endPoint:)(&v38, a1, v9, v11, v12, v13);
  v15 = v38;
  v37 = v39;
  v16 = v40;
  v17 = v41;
  v18 = static Alignment.leading.getter(v14);
  _FrameLayout.init(width:height:alignment:)(&v42, 0, 1, 0, 1, v18, v19);
  v20 = v42;
  v21 = v43;
  v22 = v44;
  v23 = v45;
  v24 = v46;
  v25 = v47;
  v26 = swift_bridgeObjectRetain(a2);
  v27 = static UnitPoint.trailing.getter(v26);
  v29 = v28;
  v31 = v30;
  v32 = static UnitPoint.leading.getter(v27);
  LinearGradient.init(gradient:startPoint:endPoint:)(&v48, a2, v29, v31, v32, v33);
  v34 = v48;
  *(_QWORD *)a3 = v15;
  *(_OWORD *)(a3 + 8) = v37;
  *(_QWORD *)(a3 + 24) = v16;
  *(_QWORD *)(a3 + 32) = v17;
  *(_QWORD *)(a3 + 40) = v20;
  *(_BYTE *)(a3 + 48) = v21;
  *(_QWORD *)(a3 + 56) = v22;
  *(_BYTE *)(a3 + 64) = v23;
  *(_QWORD *)(a3 + 72) = v24;
  *(_QWORD *)(a3 + 80) = v25;
  *(_QWORD *)(a3 + 88) = v34;
  result = *(double *)&v49;
  v36 = v50;
  *(_OWORD *)(a3 + 96) = v49;
  *(_OWORD *)(a3 + 112) = v36;
  return result;
}

double sub_1002DED88@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  char v40;
  double result;
  __int128 v42;
  uint64_t v43;
  __int128 v44;
  __int128 v45;
  uint64_t v46;
  __int128 v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  uint64_t v52;
  char v53;
  __int128 v54;

  v2 = sub_10004CFD4(&qword_1009D8A30);
  v3 = swift_allocObject(v2, 48, 7);
  *(_OWORD *)(v3 + 16) = xmmword_10070FC00;
  v4 = _s5Books11ChromeStyleC20_pageBackgroundColor33_5E35E2CA450906E5027671B98D3F72C77Combine9PublishedVy7SwiftUI0F0VGvpfi_0();
  v5.n128_u64[0] = 1.0;
  v6 = Color.opacity(_:)(v4, v5);
  swift_release(v4);
  *(_QWORD *)(v3 + 32) = v6;
  v7 = _s5Books11ChromeStyleC20_pageBackgroundColor33_5E35E2CA450906E5027671B98D3F72C77Combine9PublishedVy7SwiftUI0F0VGvpfi_0();
  v8.n128_u64[0] = 1.0;
  v9 = Color.opacity(_:)(v7, v8);
  swift_release(v7);
  *(_QWORD *)(v3 + 40) = v9;
  v50 = v3;
  specialized Array._endMutation()(v10);
  v11 = Gradient.init(colors:)(v3);
  v12 = static UnitPoint.top.getter();
  v14 = v13;
  v15 = static UnitPoint.bottom.getter();
  LinearGradient.init(gradient:startPoint:endPoint:)(&v43, v11, v12, v14, v15, v16);
  v17 = swift_allocObject(v2, 48, 7);
  *(_OWORD *)(v17 + 16) = xmmword_10070FC00;
  v18 = _s5Books11ChromeStyleC20_pageBackgroundColor33_5E35E2CA450906E5027671B98D3F72C77Combine9PublishedVy7SwiftUI0F0VGvpfi_0();
  v19.n128_u64[0] = 1.0;
  v20 = Color.opacity(_:)(v18, v19);
  swift_release(v18);
  *(_QWORD *)(v17 + 32) = v20;
  v21 = _s5Books11ChromeStyleC20_pageBackgroundColor33_5E35E2CA450906E5027671B98D3F72C77Combine9PublishedVy7SwiftUI0F0VGvpfi_0();
  v22.n128_u64[0] = 0;
  v23 = Color.opacity(_:)(v21, v22);
  swift_release(v21);
  *(_QWORD *)(v17 + 40) = v23;
  v50 = v17;
  specialized Array._endMutation()(v24);
  v25 = Gradient.init(colors:)(v50);
  v26 = static UnitPoint.top.getter();
  v28 = v27;
  v29 = static UnitPoint.bottom.getter();
  v31 = LinearGradient.init(gradient:startPoint:endPoint:)(&v46, v25, v26, v28, v29, v30);
  v32 = v46;
  v42 = v47;
  v33 = v48;
  v34 = v49;
  v35 = static Alignment.bottom.getter(v31);
  _FrameLayout.init(width:height:alignment:)(&v50, 0, 1, 0, 1, v35, v36);
  v37 = v50;
  v38 = v51;
  v39 = v52;
  v40 = v53;
  *(_QWORD *)a1 = v43;
  *(_OWORD *)(a1 + 8) = v44;
  *(_OWORD *)(a1 + 24) = v45;
  *(_QWORD *)(a1 + 40) = v32;
  *(_OWORD *)(a1 + 48) = v42;
  *(_QWORD *)(a1 + 64) = v33;
  *(_QWORD *)(a1 + 72) = v34;
  *(_QWORD *)(a1 + 80) = v37;
  *(_BYTE *)(a1 + 88) = v38;
  *(_QWORD *)(a1 + 96) = v39;
  *(_BYTE *)(a1 + 104) = v40;
  result = *(double *)&v54;
  *(_OWORD *)(a1 + 112) = v54;
  return result;
}

uint64_t sub_1002DEFA4@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  void (*v31)(char *, char *, uint64_t);
  void (*v32)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t KeyPath;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(char *, uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  void (*v50)(char *, char *, uint64_t);
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  void (*v57)(char *, uint64_t);
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;

  v67 = a2;
  v3 = sub_10004CFD4(&qword_1009D8578);
  __chkstk_darwin(v3);
  v68 = (uint64_t)&v59 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v66 = (char *)&v59 - v6;
  v7 = sub_10004CFD4(&qword_1009D8580);
  __chkstk_darwin(v7);
  v9 = (char *)&v59 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_10004CFD4(&qword_1009D8588);
  v11 = __chkstk_darwin(v10);
  v13 = (char *)&v59 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for ListSectionSpacing(0, v11);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&v59 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_10004CFD4(&qword_1009D8590);
  __chkstk_darwin(v18);
  v20 = (char *)&v59 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = sub_10004CFD4(&qword_1009D8598);
  __chkstk_darwin(v60);
  v22 = (char *)&v59 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  v61 = (char *)&v59 - v24;
  v65 = sub_10004CFD4(&qword_1009D85A0);
  v63 = *(_QWORD *)(v65 - 8);
  __chkstk_darwin(v65);
  v64 = (char *)&v59 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  v62 = (char *)&v59 - v27;
  v59 = a1;
  sub_1002DF4F4((uint64_t)&v59 - v27);
  v28 = sub_1002DFBB0((uint64_t)v20);
  static ListSectionSpacing.compact.getter(v28);
  v29 = &v13[*(int *)(v10 + 36)];
  v30 = v15;
  v31 = *(void (**)(char *, char *, uint64_t))(v15 + 16);
  v31(v29, v17, v14);
  v32 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56);
  v32(v29, 0, 1, v14);
  sub_10000B5E4((uint64_t)v20, (uint64_t)v13, &qword_1009D8590);
  KeyPath = swift_getKeyPath(&unk_100718468);
  v31(v9, v17, v14);
  v32(v9, 0, 1, v14);
  v34 = (uint64_t *)&v22[*(int *)(v60 + 36)];
  v35 = sub_10004CFD4(&qword_1009D85A8);
  sub_10000B5E4((uint64_t)v9, (uint64_t)v34 + *(int *)(v35 + 28), &qword_1009D8580);
  *v34 = KeyPath;
  sub_10000B5E4((uint64_t)v13, (uint64_t)v22, &qword_1009D8588);
  v36 = (uint64_t)v61;
  sub_100010960((uint64_t)v9, &qword_1009D8580);
  sub_100010960((uint64_t)v13, &qword_1009D8588);
  v37 = *(void (**)(char *, uint64_t))(v30 + 8);
  v38 = v59;
  v37(v17, v14);
  sub_100010960((uint64_t)v20, &qword_1009D8590);
  v39 = (uint64_t)v22;
  v40 = (uint64_t)v22;
  v41 = v36;
  sub_100025B3C(v40, v36, &qword_1009D8598);
  v42 = type metadata accessor for ThemeOptionsView(0);
  if ((*(_BYTE *)(v38 + *(int *)(v42 + 76)) & 1) != 0)
  {
    v43 = sub_10004CFD4(&qword_1009D8610);
    v44 = (uint64_t)v66;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 56))(v66, 1, 1, v43);
  }
  else
  {
    __chkstk_darwin(v42);
    *(&v59 - 2) = v38;
    v45 = sub_10004CFD4(&qword_1009D85B0);
    v46 = sub_1002E69D0();
    v44 = (uint64_t)v66;
    Section<>.init(content:)(sub_1002E69C8, &v59 - 4, v45, v46);
    v47 = sub_10004CFD4(&qword_1009D8610);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 56))(v44, 0, 1, v47);
  }
  v49 = v63;
  v48 = v64;
  v50 = *(void (**)(char *, char *, uint64_t))(v63 + 16);
  v51 = v62;
  v52 = v65;
  v50(v64, v62, v65);
  v53 = v39;
  sub_10000B5E4(v36, v39, &qword_1009D8598);
  v54 = v68;
  sub_10000B5E4(v44, v68, &qword_1009D8578);
  v55 = v67;
  v50(v67, v48, v52);
  v56 = sub_10004CFD4(&qword_1009D8618);
  sub_10000B5E4(v53, (uint64_t)&v55[*(int *)(v56 + 48)], &qword_1009D8598);
  sub_10000B5E4(v54, (uint64_t)&v55[*(int *)(v56 + 64)], &qword_1009D8578);
  sub_100010960(v44, &qword_1009D8578);
  sub_100010960(v41, &qword_1009D8598);
  v57 = *(void (**)(char *, uint64_t))(v49 + 8);
  v57(v51, v52);
  sub_100010960(v54, &qword_1009D8578);
  sub_100010960(v53, &qword_1009D8598);
  return ((uint64_t (*)(char *, uint64_t))v57)(v48, v52);
}

uint64_t sub_1002DF4F4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t ObjCClassFromMetadata;
  void *v22;
  id v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t);
  char *v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  void (*v30)(char *, char *, uint64_t);
  id v31;
  uint64_t v32;
  uint64_t (*v33)(char *, uint64_t);
  uint64_t v34;
  double v35;
  uint64_t v36;
  __n128 v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  void (*v41)(char *, char *, uint64_t);
  uint64_t v42;
  uint64_t v43;
  id v44;
  char *v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  id v49;
  char *v50;
  uint64_t v51;
  unint64_t v52;
  char *v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  id v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t v80;
  void (*v81)(char *, uint64_t);
  void (*v82)(char *, char *, uint64_t);
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  uint64_t v86;
  id v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  char *v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  void (*v104)(char *, uint64_t);
  void (*v105)(char *, char *, uint64_t);
  uint64_t v106;
  _QWORD v107[4];

  v95 = a1;
  v1 = type metadata accessor for AccessibilityChildBehavior(0);
  v96 = *(_QWORD *)(v1 - 8);
  v97 = v1;
  __chkstk_darwin(v1);
  v94 = (char *)&v80 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_10004CFD4(&qword_1009D87D8);
  v92 = *(_QWORD *)(v3 - 8);
  v93 = v3;
  __chkstk_darwin(v3);
  v91 = (char *)&v80 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Locale(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v80 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v80 - v10;
  v12 = type metadata accessor for String.LocalizationValue(0);
  v13 = *(_QWORD *)(v12 - 8);
  v106 = v12;
  __chkstk_darwin(v12);
  v15 = (char *)&v80 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v18 = (char *)&v80 - v17;
  v19 = String.LocalizationValue.init(stringLiteral:)(0x78655420646C6F42, 0xE900000000000074);
  static Locale.current.getter(v19);
  v105 = *(void (**)(char *, char *, uint64_t))(v13 + 16);
  v105(v15, v18, v12);
  v20 = type metadata accessor for BundleFinder();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v20);
  v102 = ObjCClassFromMetadata;
  v22 = (void *)objc_opt_self(NSBundle);
  v23 = objc_msgSend(v22, "bundleForClass:", ObjCClassFromMetadata);
  v82 = *(void (**)(char *, char *, uint64_t))(v6 + 16);
  v82(v8, v11, v5);
  v89 = String.init(localized:table:bundle:locale:comment:)(v15, 0, 0, v23, v8, "Text Theme Options bold text", 28, 2);
  v90 = v24;
  v104 = *(void (**)(char *, uint64_t))(v6 + 8);
  v104(v11, v5);
  v25 = *(void (**)(char *, uint64_t))(v13 + 8);
  v26 = v8;
  v27 = v106;
  v25(v18, v106);
  v28 = String.LocalizationValue.init(stringLiteral:)(1953394502, 0xE400000000000000);
  static Locale.current.getter(v28);
  v105(v15, v18, v27);
  v87 = v22;
  v29 = v22;
  v30 = v82;
  v31 = objc_msgSend(v29, "bundleForClass:", v102);
  v30(v26, v11, v5);
  v99 = v15;
  v101 = v26;
  v86 = String.init(localized:table:bundle:locale:comment:)(v15, 0, 0, v31, v26, "Text Theme Options font text", 28, 2);
  v88 = v32;
  v100 = v5;
  v104(v11, v5);
  v98 = v18;
  v33 = (uint64_t (*)(char *, uint64_t))v25;
  v25(v18, v27);
  v34 = *(_QWORD *)(v103 + 48);
  swift_retain(v34);
  v36 = ThemeOptionsViewModel.selectedFont.getter(v35);
  v37 = swift_release(v34);
  if (v36)
  {
    v38 = ThemeFontViewModel.displayName.getter(v37);
    v40 = v39;
    swift_release(v36);
  }
  else
  {
    v38 = 0;
    v40 = 0xE000000000000000;
  }
  v41 = v30;
  v42 = HIBYTE(v40) & 0xF;
  if ((v40 & 0x2000000000000000) == 0)
    v42 = v38 & 0xFFFFFFFFFFFFLL;
  v84 = v38;
  if (v42)
  {
    swift_bridgeObjectRetain(v40);
    v83 = v38;
    v43 = v102;
    v85 = v40;
    v44 = v87;
  }
  else
  {
    v81 = v25;
    v45 = v98;
    v46 = String.LocalizationValue.init(stringLiteral:)(0x6C616E696769724FLL, 0xE800000000000000);
    static Locale.current.getter(v46);
    v47 = v99;
    v105(v99, v45, v106);
    v44 = v87;
    v48 = v102;
    v49 = objc_msgSend(v87, "bundleForClass:", v102);
    v51 = v100;
    v50 = v101;
    v41(v101, v11, v100);
    v83 = String.init(localized:table:bundle:locale:comment:)(v47, 0, 0, v49, v50, "Theme Options default font name", 31, 2);
    v43 = v48;
    v85 = v52;
    v104(v11, v51);
    v33 = (uint64_t (*)(char *, uint64_t))v81;
    v81(v45, v106);
  }
  v53 = v98;
  v54 = String.LocalizationValue.init(stringLiteral:)(1954047316, 0xE400000000000000);
  static Locale.current.getter(v54);
  v55 = v99;
  v56 = v106;
  v105(v99, v53, v106);
  v57 = objc_msgSend(v44, "bundleForClass:", v43);
  v59 = v100;
  v58 = v101;
  v41(v101, v11, v100);
  v60 = String.init(localized:table:bundle:locale:comment:)(v55, 0, 0, v57, v58, "Theme Options Text title", 24, 2);
  v62 = v61;
  v104(v11, v59);
  v63 = v33(v53, v56);
  v107[0] = v60;
  v107[1] = v62;
  __chkstk_darwin(v63);
  v64 = v86;
  *(&v80 - 10) = v103;
  *(&v80 - 9) = v64;
  v65 = v88;
  v66 = v83;
  *(&v80 - 8) = v88;
  *(&v80 - 7) = v66;
  v67 = v85;
  v68 = v84;
  *(&v80 - 6) = v85;
  *(&v80 - 5) = v68;
  v69 = v89;
  *(&v80 - 4) = v40;
  *(&v80 - 3) = v69;
  v70 = v90;
  *(&v80 - 2) = v90;
  v71 = sub_10004CFD4(&qword_1009D87E0);
  v72 = sub_100030B34(&qword_1009D87E8, &qword_1009D87E0, (uint64_t)&protocol conformance descriptor for TupleView<A>);
  v73 = sub_1001F2108();
  v74 = v91;
  Section<>.init<A>(_:content:)(v107, sub_1002E7374, &v80 - 12, v71, &type metadata for String, v72, v73);
  swift_bridgeObjectRelease(v70);
  swift_bridgeObjectRelease(v40);
  swift_bridgeObjectRelease(v67);
  swift_bridgeObjectRelease(v65);
  v75 = v94;
  static AccessibilityChildBehavior.contain.getter(v76);
  v77 = sub_1002E73A8();
  v78 = v93;
  View.accessibilityElement(children:)(v75, v93, v77);
  (*(void (**)(char *, uint64_t))(v96 + 8))(v75, v97);
  return (*(uint64_t (**)(char *, uint64_t))(v92 + 8))(v74, v78);
}

uint64_t sub_1002DFBB0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t ObjCClassFromMetadata;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __n128 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  void (*v50)(char *, char *, uint64_t);
  uint64_t v51;
  uint64_t v52;
  char *v53;
  void (*v54)(char *, char *, uint64_t);
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void (*v58)(char *, uint64_t);
  void (*v59)(char *, uint64_t);
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  _QWORD v93[4];

  v91 = a1;
  v92 = sub_10004CFD4(&qword_1009D8630);
  __chkstk_darwin(v92);
  v83 = (char *)&v73 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v82 = sub_10004CFD4(&qword_1009D8638);
  v79 = *(_QWORD *)(v82 - 8);
  __chkstk_darwin(v82);
  v78 = (char *)&v73 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v81 = (char *)&v73 - v4;
  v80 = sub_10004CFD4(&qword_1009D8640);
  v77 = *(_QWORD *)(v80 - 8);
  __chkstk_darwin(v80);
  v76 = (char *)&v73 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v87 = (char *)&v73 - v7;
  v88 = sub_10004CFD4(&qword_1009D8648);
  __chkstk_darwin(v88);
  v89 = (uint64_t)&v73 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v90 = sub_10004CFD4(&qword_1009D8650);
  v75 = *(_QWORD *)(v90 - 8);
  __chkstk_darwin(v90);
  v74 = (char *)&v73 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for BookThemeEntity(0);
  v84 = *(_QWORD *)(v10 - 8);
  v85 = v10;
  __chkstk_darwin(v10);
  v12 = (char *)&v73 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Locale(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v73 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v19 = (char *)&v73 - v18;
  v20 = type metadata accessor for String.LocalizationValue(0);
  v21 = *(_QWORD *)(v20 - 8);
  __chkstk_darwin(v20);
  v23 = (char *)&v73 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  v26 = (char *)&v73 - v25;
  v27 = String.LocalizationValue.init(stringLiteral:)(0xD00000000000001ELL, 0x80000001007BD1A0);
  static Locale.current.getter(v27);
  (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v23, v26, v20);
  v28 = type metadata accessor for BundleFinder();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v28);
  v30 = objc_msgSend((id)objc_opt_self(NSBundle), "bundleForClass:", ObjCClassFromMetadata);
  (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v16, v19, v13);
  v31 = String.init(localized:table:bundle:locale:comment:)(v23, 0, 0, v30, v16, "Theme Options Accessibility and layout options title", 52, 2);
  v33 = v32;
  v34 = v19;
  v35 = v86;
  (*(void (**)(char *, uint64_t))(v14 + 8))(v34, v13);
  (*(void (**)(char *, uint64_t))(v21 + 8))(v26, v20);
  v36 = *(_QWORD *)(v35 + 48);
  v37 = swift_retain(v36);
  ThemeOptionsViewModel.theme.getter(v37);
  v38 = swift_release(v36);
  LOBYTE(v20) = BookThemeEntity.hasCustomLayout.getter(v38);
  v39 = (*(uint64_t (**)(char *, uint64_t))(v84 + 8))(v12, v85);
  v93[0] = v31;
  v93[1] = v33;
  __chkstk_darwin(v39);
  *(&v73 - 2) = v35;
  if ((v20 & 1) != 0)
  {
    v40 = sub_10004CFD4(&qword_1009D8678);
    v41 = sub_100030B34(&qword_1009D8680, &qword_1009D8678, (uint64_t)&protocol conformance descriptor for TupleView<A>);
    v42 = sub_1001F2108();
    v43 = v87;
    v44 = Section<>.init<A>(_:content:)(v93, sub_1002E6DE0, &v73 - 4, v40, &type metadata for String, v41, v42);
    __chkstk_darwin(v44);
    *(&v73 - 2) = v35;
    v45 = sub_10004CFD4(&qword_1009D8688);
    v46 = sub_100030B34(&qword_1009D8690, &qword_1009D8688, (uint64_t)&protocol conformance descriptor for TupleView<A>);
    v47 = v81;
    Section<>.init(content:)(sub_1002E6E00, &v73 - 4, v45, v46);
    v48 = v76;
    v49 = v77;
    v50 = *(void (**)(char *, char *, uint64_t))(v77 + 16);
    v51 = v80;
    v50(v76, v43, v80);
    v53 = v78;
    v52 = v79;
    v54 = *(void (**)(char *, char *, uint64_t))(v79 + 16);
    v55 = v82;
    v54(v78, v47, v82);
    v56 = (uint64_t)v83;
    v50(v83, v48, v51);
    v57 = sub_10004CFD4(&qword_1009D8698);
    v54((char *)(v56 + *(int *)(v57 + 48)), v53, v55);
    v58 = *(void (**)(char *, uint64_t))(v52 + 8);
    v58(v53, v55);
    v59 = *(void (**)(char *, uint64_t))(v49 + 8);
    v59(v48, v51);
    v60 = v89;
    sub_10000B5E4(v56, v89, &qword_1009D8630);
    swift_storeEnumTagMultiPayload(v60, v88, 1);
    v61 = sub_1002E6D50();
    v62 = sub_100030B34(&qword_1009D8670, &qword_1009D8630, (uint64_t)&protocol conformance descriptor for TupleView<A>);
    _ConditionalContent<>.init(storage:)(v60, v90, v92, v61, v62);
    sub_100010960(v56, &qword_1009D8630);
    v58(v47, v55);
    return ((uint64_t (*)(char *, uint64_t))v59)(v87, v51);
  }
  else
  {
    v64 = sub_10004CFD4(&qword_1009D8658);
    v65 = sub_100030B34(&qword_1009D8660, &qword_1009D8658, (uint64_t)&protocol conformance descriptor for Toggle<A>);
    v66 = sub_1001F2108();
    v67 = v74;
    Section<>.init<A>(_:content:)(v93, sub_1002E6D30, &v73 - 4, v64, &type metadata for String, v65, v66);
    v68 = v75;
    v70 = v89;
    v69 = v90;
    (*(void (**)(uint64_t, char *, uint64_t))(v75 + 16))(v89, v67, v90);
    swift_storeEnumTagMultiPayload(v70, v88, 0);
    v71 = sub_1002E6D50();
    v72 = sub_100030B34(&qword_1009D8670, &qword_1009D8630, (uint64_t)&protocol conformance descriptor for TupleView<A>);
    _ConditionalContent<>.init(storage:)(v70, v69, v92, v71, v72);
    return (*(uint64_t (**)(char *, uint64_t))(v68 + 8))(v67, v69);
  }
}

uint64_t sub_1002E02A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, char *a8@<X7>, uint64_t a9@<X8>, uint64_t a10)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  __n128 v65;
  uint64_t v66;
  uint64_t v67;
  __n128 v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t ObjCClassFromMetadata;
  id v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  id v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t KeyPath;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  double v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  __n128 v108;
  char v109;
  void (*v110)(char *, uint64_t);
  char *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  __n128 v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  _QWORD *v128;
  __int128 v129;
  uint64_t v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  char *v134;
  uint64_t v135;
  char *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  __n128 v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  char *v148;
  uint64_t v149;
  char *v150;
  uint64_t v151;
  __int128 v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  char *v161;
  uint64_t v162;
  char *v163;
  char *v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  char *v173;
  char *v174;
  uint64_t v175;
  uint64_t v176;
  char *v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  char *v181;
  uint64_t v182;
  char *v183;
  char *v184;
  uint64_t v185;
  uint64_t v186;
  char *v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  char v191[8];
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  __int128 v197;
  unsigned __int8 v198;
  _OWORD v199[4];

  v173 = a8;
  v159 = a7;
  v158 = a6;
  v156 = a4;
  v182 = a9;
  v179 = type metadata accessor for AccessibilityActionKind(0);
  v178 = *(_QWORD *)(v179 - 8);
  __chkstk_darwin(v179);
  v177 = (char *)&v148 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v176 = sub_10004CFD4(&qword_1009D87F8);
  v175 = *(_QWORD *)(v176 - 8);
  __chkstk_darwin(v176);
  v174 = (char *)&v148 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_10004CFD4(&qword_1009D8800);
  __chkstk_darwin(v16);
  v181 = (char *)&v148 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v180 = (uint64_t)&v148 - v19;
  v151 = type metadata accessor for FontDownloadAlert(0);
  v149 = *(_QWORD *)(v151 - 8);
  __chkstk_darwin(v151);
  v150 = (char *)&v148 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v148 = (char *)&v148 - v22;
  v166 = type metadata accessor for Locale(0);
  v165 = *(_QWORD *)(v166 - 8);
  __chkstk_darwin(v166);
  v164 = (char *)&v148 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  v187 = (char *)&v148 - v25;
  v186 = type metadata accessor for String.LocalizationValue(0);
  v185 = *(_QWORD *)(v186 - 8);
  __chkstk_darwin(v186);
  v161 = (char *)&v148 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27);
  v184 = (char *)&v148 - v28;
  v157 = type metadata accessor for ThemeOptionsView(0);
  v29 = *(_QWORD *)(v157 - 8);
  v30 = *(_QWORD *)(v29 + 64);
  __chkstk_darwin(v157);
  v171 = (uint64_t)&v148 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v31);
  v33 = (char *)&v148 - v32;
  v153 = sub_10004CFD4(&qword_1009D8808);
  v154 = *(_QWORD *)(v153 - 8);
  __chkstk_darwin(v153);
  v35 = (char *)&v148 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v155 = sub_10004CFD4(&qword_1009D8810);
  __chkstk_darwin(v155);
  v37 = (char *)&v148 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v38);
  v183 = (char *)&v148 - v39;
  __chkstk_darwin(v40);
  v163 = (char *)&v148 - v41;
  v162 = sub_10004CFD4(&qword_1009D8818);
  __chkstk_darwin(v162);
  v172 = (uint64_t)&v148 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v43);
  v160 = (uint64_t)&v148 - v44;
  __chkstk_darwin(v45);
  v189 = (uint64_t)&v148 - v46;
  v190 = a1;
  sub_10002CD84(a1, (uint64_t)v33, type metadata accessor for ThemeOptionsView);
  v47 = *(unsigned __int8 *)(v29 + 80);
  v48 = (v47 + 16) & ~v47;
  v167 = v30;
  v188 = v47;
  v169 = v48 + v30;
  v168 = v47 | 7;
  v49 = swift_allocObject(&unk_1008FAD00, v48 + v30, v47 | 7);
  v170 = v48;
  sub_1002E6670((uint64_t)v33, v49 + v48);
  v192 = a2;
  v193 = a3;
  v50 = v156;
  v194 = a1;
  v195 = v156;
  v196 = a5;
  v51 = sub_10004CFD4(&qword_1009D8820);
  v52 = sub_100030B34(&qword_1009D8828, &qword_1009D8820, (uint64_t)&unk_1007153F0);
  Button.init(action:label:)(sub_1002E743C, v49, sub_1002E7484, v191, v51, v52);
  v53 = sub_10004CFD4((uint64_t *)&unk_1009D8830);
  v54 = swift_allocObject(v53, 64, 7);
  v152 = xmmword_10070FC00;
  *(_OWORD *)(v54 + 16) = xmmword_10070FC00;
  *(_QWORD *)(v54 + 32) = a2;
  *(_QWORD *)(v54 + 40) = a3;
  v55 = a2;
  *(_QWORD *)(v54 + 48) = v50;
  *(_QWORD *)(v54 + 56) = a5;
  *(_QWORD *)&v199[0] = v54;
  v56 = a3;
  swift_bridgeObjectRetain(a3);
  swift_bridgeObjectRetain(a5);
  v57 = sub_10004CFD4((uint64_t *)&unk_1009E8850);
  v58 = sub_100030B34((unint64_t *)&qword_1009D8840, (uint64_t *)&unk_1009E8850, (uint64_t)&protocol conformance descriptor for [A]);
  v59 = BidirectionalCollection<>.joined(separator:)(8236, 0xE200000000000000, v57, v58);
  v61 = v60;
  swift_bridgeObjectRelease(v54);
  *(_QWORD *)&v199[0] = v59;
  *((_QWORD *)&v199[0] + 1) = v61;
  v62 = sub_100030B34(&qword_1009D8848, &qword_1009D8808, (uint64_t)&protocol conformance descriptor for Button<A>);
  v63 = sub_1001F2108();
  v64 = v153;
  View.accessibilityLabel<A>(_:)(v199, v153, &type metadata for String, v62, v63);
  v65 = swift_bridgeObjectRelease(v61);
  (*(void (**)(char *, uint64_t, __n128))(v154 + 8))(v35, v64, v65);
  v66 = swift_allocObject(v53, 64, 7);
  *(_OWORD *)(v66 + 16) = v152;
  *(_QWORD *)(v66 + 32) = v55;
  *(_QWORD *)(v66 + 40) = v56;
  v67 = v159;
  *(_QWORD *)(v66 + 48) = v158;
  *(_QWORD *)(v66 + 56) = v67;
  swift_bridgeObjectRetain(v56);
  v68 = swift_bridgeObjectRetain(v67);
  v69 = v155;
  ModifiedContent<>.accessibilityInputLabels<A>(_:)(v66, v68);
  swift_bridgeObjectRelease(v66);
  sub_100010960((uint64_t)v37, &qword_1009D8810);
  v70 = v190 + *(int *)(v157 + 72);
  v71 = *(_QWORD *)(v70 + 8);
  LOBYTE(v199[0]) = *(_BYTE *)v70;
  *((_QWORD *)&v199[0] + 1) = v71;
  sub_10004CFD4(&qword_1009D8450);
  State.wrappedValue.getter(&v197);
  v72 = v184;
  if (v197 == 1)
  {
    v73 = String.LocalizationValue.init(stringLiteral:)(0x6465646E61707845, 0xE800000000000000);
    v74 = v187;
    static Locale.current.getter(v73);
    v75 = v161;
    (*(void (**)(char *, char *, uint64_t))(v185 + 16))(v161, v72, v186);
    v76 = type metadata accessor for BundleFinder();
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v76);
    v78 = objc_msgSend((id)objc_opt_self(NSBundle), "bundleForClass:", ObjCClassFromMetadata);
    v79 = v165;
    v80 = v164;
    v81 = v166;
    (*(void (**)(char *, char *, uint64_t))(v165 + 16))(v164, v74, v166);
    v82 = String.init(localized:table:bundle:locale:comment:)(v75, 0, 0, v78, v80, "'Expanded' in the context of a menu that is alternately expanded (showing) or collapsed (hidden) with a discloruse chevron", 122, 2);
  }
  else
  {
    v84 = String.LocalizationValue.init(stringLiteral:)(0x657370616C6C6F43, 0xE900000000000064);
    v85 = v187;
    static Locale.current.getter(v84);
    v86 = v161;
    (*(void (**)(char *, char *, uint64_t))(v185 + 16))(v161, v72, v186);
    v87 = type metadata accessor for BundleFinder();
    v88 = swift_getObjCClassFromMetadata(v87);
    v89 = objc_msgSend((id)objc_opt_self(NSBundle), "bundleForClass:", v88);
    v79 = v165;
    v90 = v164;
    v81 = v166;
    (*(void (**)(char *, char *, uint64_t))(v165 + 16))(v164, v85, v166);
    v82 = String.init(localized:table:bundle:locale:comment:)(v86, 0, 0, v89, v90, "'Collapsed' in the context of a menu that is alternately expanded (showing) or collapsed (hidden) with a discloruse chevron", 123, 2);
  }
  v91 = v82;
  v92 = v83;
  v166 = a10;
  v93 = ~v188;
  (*(void (**)(char *, uint64_t))(v79 + 8))(v187, v81);
  (*(void (**)(char *, uint64_t))(v185 + 8))(v184, v186);
  *(_QWORD *)&v199[0] = v91;
  *((_QWORD *)&v199[0] + 1) = v92;
  v94 = (uint64_t)v163;
  v95 = (uint64_t)v183;
  ModifiedContent<>.accessibilityValue<A>(_:)(v199, v69, &type metadata for String, v63);
  swift_bridgeObjectRelease(v92);
  sub_100010960(v95, &qword_1009D8810);
  KeyPath = swift_getKeyPath(&unk_1007184C8);
  v97 = v160;
  sub_10000B5E4(v94, v160, &qword_1009D8810);
  v98 = v97 + *(int *)(v162 + 36);
  *(_QWORD *)v98 = KeyPath;
  *(_BYTE *)(v98 + 8) = 0;
  sub_100010960(v94, &qword_1009D8810);
  sub_100025B3C(v97, v189, &qword_1009D8818);
  v99 = *(_QWORD *)(v70 + 8);
  LOBYTE(v199[0]) = *(_BYTE *)v70;
  *((_QWORD *)&v199[0] + 1) = v99;
  State.wrappedValue.getter(&v197);
  if (v197 == 1)
  {
    v100 = v190;
    sub_10002E418(v190, (uint64_t)&v197);
    v101 = *(_QWORD *)(v100 + 48);
    v102 = swift_retain(v101);
    v103 = ThemeOptionsViewModel.fonts.getter(v102);
    swift_release(v101);
    swift_retain(v101);
    v105 = ThemeOptionsViewModel.selectedFont.getter(v104);
    swift_release(v101);
    v106 = swift_retain(v101);
    v107 = v148;
    ThemeOptionsViewModel.fontDownloadAlert.getter(v106);
    v108 = swift_release(v101);
    v109 = FontDownloadAlert.isReachable.getter(v108);
    v110 = *(void (**)(char *, uint64_t))(v149 + 8);
    v111 = v107;
    v112 = v151;
    v110(v111, v151);
    v113 = *(_QWORD *)(v100 + 48);
    v114 = swift_retain(v113);
    v115 = v150;
    ThemeOptionsViewModel.fontDownloadAlert.getter(v114);
    v116 = swift_release(v113);
    LOBYTE(v113) = FontDownloadAlert.isCellularReachable.getter(v116);
    v110(v115, v112);
    sub_100022840(&v197, (uint64_t)v199);
    *((_QWORD *)&v199[2] + 1) = v103;
    *(_QWORD *)&v199[3] = v105;
    BYTE8(v199[3]) = v109 & 1;
    BYTE9(v199[3]) = v113 & 1;
  }
  else
  {
    memset(v199, 0, 58);
  }
  v117 = v190;
  v118 = v171;
  sub_10002CD84(v190, v171, type metadata accessor for ThemeOptionsView);
  v119 = type metadata accessor for MainActor(0);
  v120 = static MainActor.shared.getter(v119);
  v121 = (v188 + 32) & v93;
  v122 = v121 + v167;
  v123 = v168;
  v124 = swift_allocObject(&unk_1008FAD28, v121 + v167, v168);
  *(_QWORD *)(v124 + 16) = v120;
  *(_QWORD *)(v124 + 24) = &protocol witness table for MainActor;
  sub_1002E6670(v118, v124 + v121);
  v125 = sub_10002CD84(v117, v118, type metadata accessor for ThemeOptionsView);
  v126 = static MainActor.shared.getter(v125);
  v127 = swift_allocObject(&unk_1008FAD50, v122, v123);
  *(_QWORD *)(v127 + 16) = v126;
  *(_QWORD *)(v127 + 24) = &protocol witness table for MainActor;
  sub_1002E6670(v118, v127 + v121);
  v128 = Binding.init(get:set:)(&v197, sub_1002E7498, v124, sub_1002E77F0, v127, &type metadata for Bool);
  v129 = v197;
  v130 = v198;
  __chkstk_darwin(v128);
  v131 = (char *)v166;
  *(&v148 - 2) = v173;
  *(&v148 - 1) = v131;
  v132 = sub_10004CFD4((uint64_t *)&unk_1009D8850);
  v133 = sub_100030B34(&qword_1009D3E98, (uint64_t *)&unk_1009D8850, (uint64_t)&protocol conformance descriptor for Label<A, B>);
  v134 = v174;
  v135 = Toggle.init(isOn:label:)(v129, *((_QWORD *)&v129 + 1), v130, sub_1002E7868, &v148 - 4, v132, v133);
  v136 = v177;
  static AccessibilityActionKind.default.getter(v135);
  sub_10002CD84(v190, v118, type metadata accessor for ThemeOptionsView);
  v137 = swift_allocObject(&unk_1008FAD78, v169, v123);
  sub_1002E6670(v118, v137 + v170);
  v138 = sub_100030B34(&qword_1009D8860, &qword_1009D87F8, (uint64_t)&protocol conformance descriptor for Toggle<A>);
  v139 = (uint64_t)v181;
  v140 = v176;
  View.accessibilityAction(_:_:)(v136, sub_1002E7874, v137, v176, v138);
  v141 = swift_release(v137);
  (*(void (**)(char *, uint64_t, __n128))(v178 + 8))(v136, v179, v141);
  (*(void (**)(char *, uint64_t))(v175 + 8))(v134, v140);
  v142 = v180;
  sub_100025B3C(v139, v180, &qword_1009D8800);
  v143 = v189;
  v144 = v172;
  sub_10000B5E4(v189, v172, &qword_1009D8818);
  sub_10000B5E4((uint64_t)v199, (uint64_t)&v197, &qword_1009D8868);
  sub_10000B5E4(v142, v139, &qword_1009D8800);
  v145 = v182;
  sub_10000B5E4(v144, v182, &qword_1009D8818);
  v146 = sub_10004CFD4(&qword_1009D8870);
  sub_10000B5E4((uint64_t)&v197, v145 + *(int *)(v146 + 48), &qword_1009D8868);
  sub_10000B5E4(v139, v145 + *(int *)(v146 + 64), &qword_1009D8800);
  sub_100010960(v142, &qword_1009D8800);
  sub_100010960((uint64_t)v199, &qword_1009D8868);
  sub_100010960(v143, &qword_1009D8818);
  sub_100010960(v139, &qword_1009D8800);
  sub_100010960((uint64_t)&v197, &qword_1009D8868);
  return sub_100010960(v144, &qword_1009D8818);
}

double sub_1002E11A0()
{
  uint64_t v0;
  double result;
  uint64_t v2;

  type metadata accessor for ThemeOptionsView(0);
  v0 = sub_10004CFD4(&qword_1009D8450);
  State.wrappedValue.getter(&v2);
  LOBYTE(v2) = (v2 & 1) == 0;
  *(_QWORD *)&result = State.wrappedValue.setter(&v2, v0).n128_u64[0];
  return result;
}

double sub_1002E1230@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t (*v19)(_QWORD);
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t KeyPath;
  int *v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  double result;
  uint64_t v33;

  v12 = sub_10004CFD4(&qword_1009D26A0);
  __chkstk_darwin(v12);
  v14 = (uint64_t *)((char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v15 = type metadata accessor for ThemeOptionsView(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(_QWORD *)(v16 + 64);
  __chkstk_darwin(v15);
  v18 = (char *)&v33 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10002CD84(a3, (uint64_t)v18, v19);
  v20 = *(unsigned __int8 *)(v16 + 80);
  v21 = (v20 + 32) & ~v20;
  v22 = (v17 + v21 + 7) & 0xFFFFFFFFFFFFFFF8;
  v23 = swift_allocObject(&unk_1008FADA0, v22 + 16, v20 | 7);
  *(_QWORD *)(v23 + 16) = a1;
  *(_QWORD *)(v23 + 24) = a2;
  sub_1002E6670((uint64_t)v18, v23 + v21);
  v24 = (_QWORD *)(v23 + v22);
  *v24 = a4;
  v24[1] = a5;
  *v14 = swift_getKeyPath(&unk_1007182B8);
  v25 = sub_10004CFD4(&qword_1009D26B8);
  swift_storeEnumTagMultiPayload(v14, v25, 0);
  KeyPath = swift_getKeyPath(&unk_1007184F8);
  v27 = (int *)sub_10004CFD4(&qword_1009D8820);
  v28 = (uint64_t *)(a6 + v27[9]);
  *v28 = KeyPath;
  v29 = sub_10004CFD4(&qword_1009D8790);
  swift_storeEnumTagMultiPayload(v28, v29, 0);
  sub_100025B3C((uint64_t)v14, a6, &qword_1009D26A0);
  v30 = a6 + v27[10];
  *(_QWORD *)v30 = 0;
  *(_BYTE *)(v30 + 8) = 0;
  v31 = (_QWORD *)(a6 + v27[11]);
  *v31 = sub_1002E7BE0;
  v31[1] = v23;
  swift_bridgeObjectRetain(a2);
  *(_QWORD *)&result = swift_bridgeObjectRetain(a5).n128_u64[0];
  return result;
}

uint64_t sub_1002E1408@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _BYTE *a6@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t OpaqueTypeConformance2;
  double v25;
  _BYTE *v26;
  uint64_t v27;
  _BYTE *v28;
  uint64_t v29;
  unint64_t v30;
  __n128 v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  double v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char v48;
  uint64_t v49;
  void (*v50)(_BYTE *, _BYTE *, uint64_t);
  _BYTE *v51;
  unsigned __int8 v52;
  unsigned __int8 v53;
  int v54;
  uint64_t v55;
  _BYTE *v56;
  int *v57;
  _BYTE *v58;
  _BYTE *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  void (*v73)(_BYTE *, uint64_t);
  uint64_t v74;
  _BYTE v76[4];
  int v77;
  int v78;
  int v79;
  uint64_t v80;
  int v81;
  uint64_t v82;
  _BYTE *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t KeyPath;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  _BYTE *v90;
  uint64_t v91;
  uint64_t v92;
  _BYTE *v93;
  _QWORD v94[4];
  _QWORD v95[5];
  __int128 v96;
  __int128 v97;
  __int128 v98;
  __int128 v99;
  __int128 v100;
  __int128 v101;
  __int128 v102;
  __int128 v103;
  char v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char v116;
  double v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  char v121;
  unsigned __int8 v122;
  unsigned __int8 v123;
  unsigned __int8 v124;

  v91 = a4;
  v92 = a5;
  v83 = a3;
  v90 = a6;
  v9 = sub_10004CFD4(&qword_1009D8878);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v93 = &v76[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v12);
  v14 = &v76[-v13];
  __chkstk_darwin(v15);
  v17 = &v76[-v16];
  v95[2] = a1;
  v95[3] = a2;
  v94[2] = a3;
  v18 = sub_10004CFD4((uint64_t *)&unk_1009D8880);
  v19 = type metadata accessor for TextFormatSizeLabel(255);
  v20 = sub_100030B74(&qword_1009DE640);
  v21 = sub_100008DB0(&qword_1009D8890, type metadata accessor for TextFormatSizeLabel, (uint64_t)&unk_100716AD0);
  v22 = sub_100030B34(&qword_1009D8898, &qword_1009DE640, (uint64_t)&protocol conformance descriptor for PartialRangeThrough<A>);
  v105 = v19;
  v106 = v20;
  v107 = v21;
  v108 = v22;
  v23 = v10;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v105, &opaque type descriptor for <<opaque return type of View.dynamicTypeSize<A>(_:)>>, 1);
  Label.init(title:icon:)(sub_1002E7C38, v95, sub_1002E7C40, v94, &type metadata for Text, v18, &protocol witness table for Text, OpaqueTypeConformance2, v25);
  v26 = v14;
  v27 = v9;
  v28 = v83;
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v10 + 32))(v17, v26, v27);
  v29 = v92;
  v105 = v91;
  v106 = v92;
  v30 = sub_1001F2108();
  v31 = swift_bridgeObjectRetain(v29);
  v32 = Text.init<A>(_:)(&v105, &type metadata for String, v30, v31);
  v88 = v33;
  v89 = v32;
  v35 = v34;
  v87 = v36;
  KeyPath = swift_getKeyPath(&unk_100718528);
  v37 = *((_QWORD *)v28 + 6);
  v38 = qword_1009CDDF8;
  swift_retain(v37);
  if (v38 != -1)
    swift_once(&qword_1009CDDF8, sub_1002D8790);
  v85 = sub_100445AA8(*(double *)&qword_100A1E460);
  swift_release(v37);
  v39 = swift_getKeyPath(&unk_100718558);
  v84 = _s5Books11ChromeStyleC14secondaryColor7SwiftUI0E0Vvg_0();
  v92 = swift_getKeyPath(&unk_100718408);
  LODWORD(v91) = static Edge.Set.trailing.getter(v92);
  v40 = EdgeInsets.init(_all:)(8.0);
  v42 = v41;
  v44 = v43;
  v46 = v45;
  v124 = v35 & 1;
  v123 = 0;
  v122 = 0;
  v47 = &v28[*(int *)(type metadata accessor for ThemeOptionsView(0) + 72)];
  v48 = *v47;
  v49 = *((_QWORD *)v47 + 1);
  LOBYTE(v105) = v48;
  v106 = v49;
  sub_10004CFD4(&qword_1009D8450);
  State.wrappedValue.getter(&v96);
  v81 = v96;
  v82 = v23;
  v50 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v23 + 16);
  v51 = v93;
  v50(v93, v17, v27);
  v83 = v17;
  v52 = v124;
  v53 = v123;
  v78 = v123;
  v79 = v124;
  v54 = v122;
  v55 = v27;
  v80 = v27;
  v56 = v90;
  v50(v90, v51, v55);
  v57 = (int *)sub_10004CFD4((uint64_t *)&unk_1009D88A0);
  v58 = &v56[v57[12]];
  *(_QWORD *)v58 = 0;
  v58[8] = 1;
  v59 = &v56[v57[16]];
  v61 = v88;
  v60 = v89;
  *(_QWORD *)&v96 = v89;
  *((_QWORD *)&v96 + 1) = v88;
  LOBYTE(v97) = v52;
  v62 = KeyPath;
  v63 = v87;
  *((_QWORD *)&v97 + 1) = v87;
  *(_QWORD *)&v98 = KeyPath;
  *((_QWORD *)&v98 + 1) = 1;
  LOBYTE(v99) = v53;
  v64 = v84;
  v65 = v85;
  *((_QWORD *)&v99 + 1) = v39;
  *(_QWORD *)&v100 = v85;
  *((_QWORD *)&v100 + 1) = v92;
  *(_QWORD *)&v101 = v84;
  BYTE8(v101) = v91;
  *(double *)&v102 = v40;
  *((_QWORD *)&v102 + 1) = v42;
  *(_QWORD *)&v103 = v44;
  *((_QWORD *)&v103 + 1) = v46;
  v77 = v54;
  v104 = v54;
  v66 = v96;
  v67 = v97;
  v68 = v99;
  *((_OWORD *)v59 + 2) = v98;
  *((_OWORD *)v59 + 3) = v68;
  *(_OWORD *)v59 = v66;
  *((_OWORD *)v59 + 1) = v67;
  v69 = v100;
  v70 = v101;
  v71 = v102;
  v72 = v103;
  v59[128] = v54;
  *((_OWORD *)v59 + 6) = v71;
  *((_OWORD *)v59 + 7) = v72;
  *((_OWORD *)v59 + 4) = v69;
  *((_OWORD *)v59 + 5) = v70;
  v56[v57[20]] = v81;
  sub_1002E7CAC((uint64_t)&v96);
  v73 = *(void (**)(_BYTE *, uint64_t))(v82 + 8);
  v74 = v80;
  v73(v83, v80);
  v105 = v60;
  v106 = v61;
  LOBYTE(v107) = v79;
  v108 = v63;
  v109 = v62;
  v110 = 1;
  v111 = v78;
  v112 = v39;
  v113 = v65;
  v114 = v92;
  v115 = v64;
  v116 = v91;
  v117 = v40;
  v118 = v42;
  v119 = v44;
  v120 = v46;
  v121 = v77;
  sub_1002E7D30((uint64_t)&v105);
  return ((uint64_t (*)(_BYTE *, uint64_t))v73)(v93, v74);
}

uint64_t sub_1002E1864@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  unint64_t v5;
  __n128 v6;
  uint64_t result;
  uint64_t v8;
  char v9;
  uint64_t v10;
  _QWORD v11[2];

  v11[0] = a1;
  v11[1] = a2;
  v5 = sub_1001F2108();
  v6 = swift_bridgeObjectRetain(a2);
  result = Text.init<A>(_:)(v11, &type metadata for String, v5, v6);
  *(_QWORD *)a3 = result;
  *(_QWORD *)(a3 + 8) = v8;
  *(_BYTE *)(a3 + 16) = v9 & 1;
  *(_QWORD *)(a3 + 24) = v10;
  return result;
}

uint64_t sub_1002E18CC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v2 = sub_10004CFD4(&qword_1009DE640);
  __chkstk_darwin(v2);
  v4 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TextFormatSizeLabel(0);
  __chkstk_darwin(v5);
  v7 = (uint64_t *)((char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = *(_QWORD *)(a1 + 48);
  v9 = qword_1009CDDF8;
  swift_retain(v8);
  if (v9 != -1)
    swift_once(&qword_1009CDDF8, sub_1002D8790);
  v10 = sub_100445AA8(*(double *)&qword_100A1E460);
  swift_release(v8);
  static Font.Weight.semibold.getter(v11);
  v12 = Font.weight(_:)(v10);
  swift_release(v10);
  swift_retain(v8);
  v13 = swift_retain(v12);
  v14 = ThemeOptionsViewModel.bookLanguage.getter(v13);
  v16 = v15;
  swift_release(v8);
  *v7 = swift_getKeyPath(&unk_100718588);
  v17 = sub_10004CFD4(&qword_1009D38A0);
  swift_storeEnumTagMultiPayload(v7, v17, 0);
  *(_QWORD *)((char *)v7 + *(int *)(v5 + 20)) = v12;
  v18 = (_QWORD *)((char *)v7 + *(int *)(v5 + 24));
  *v18 = v14;
  v18[1] = v16;
  v19 = enum case for DynamicTypeSize.accessibility1(_:);
  v20 = type metadata accessor for DynamicTypeSize(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 104))(v4, v19, v20);
  v21 = sub_100008DB0(&qword_1009D88B0, (uint64_t (*)(uint64_t))&type metadata accessor for DynamicTypeSize, (uint64_t)&protocol conformance descriptor for DynamicTypeSize);
  result = dispatch thunk of static Equatable.== infix(_:_:)(v4, v4, v20, v21);
  if ((result & 1) != 0)
  {
    v23 = sub_100008DB0(&qword_1009D8890, type metadata accessor for TextFormatSizeLabel, (uint64_t)&unk_100716AD0);
    v24 = sub_100030B34(&qword_1009D8898, &qword_1009DE640, (uint64_t)&protocol conformance descriptor for PartialRangeThrough<A>);
    View.dynamicTypeSize<A>(_:)(v4, v5, v2, v23, v24);
    swift_release(v12);
    sub_100010960((uint64_t)v4, &qword_1009DE640);
    return sub_10002C8F0((uint64_t)v7, type metadata accessor for TextFormatSizeLabel);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002E1B40(uint64_t a1, uint64_t a2)
{
  unint64_t v3;
  _QWORD v5[2];

  v5[0] = a1;
  v5[1] = a2;
  v3 = sub_1001F2108();
  swift_bridgeObjectRetain(a2);
  return Label<>.init<A>(_:systemImage:)(v5, 1684828002, 0xE400000000000000, &type metadata for String, v3);
}

uint64_t sub_1002E1BA8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v13[3];
  uint64_t v14;
  uint64_t v15;

  v2 = type metadata accessor for BookThemeEntity(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v13[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10002E418(a1, (uint64_t)v13);
  v6 = v14;
  v7 = v15;
  sub_10003F198(v13, v14);
  v8 = *(_QWORD *)(a1 + 48);
  v9 = swift_retain(v8);
  ThemeOptionsViewModel.theme.getter(v9);
  swift_release(v8);
  LOBYTE(a1) = BookThemeEntity.isFontBolded.getter(v10);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  dispatch thunk of ThemeOptionsEventHandling.didToggle(isFontBolded:)((a1 & 1) == 0, v6, v7);
  return _s5Books15CurrentPageViewVwxx_0(v13);
}

uint64_t sub_1002E1C94@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t ObjCClassFromMetadata;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD v46[2];
  unsigned __int8 v47;
  _QWORD v48[3];

  v45 = a1;
  v1 = type metadata accessor for ThemeOptionsView(0);
  v2 = *(_QWORD *)(*(_QWORD *)(v1 - 8) + 64);
  v43 = *(_QWORD *)(v1 - 8);
  v44 = v2;
  __chkstk_darwin(v1);
  v4 = (char *)&v42 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Locale(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v42 - v10;
  v12 = type metadata accessor for String.LocalizationValue(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v18 = (char *)&v42 - v17;
  v19 = String.LocalizationValue.init(stringLiteral:)(0x7A696D6F74737543, 0xE900000000000065);
  static Locale.current.getter(v19);
  (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v15, v18, v12);
  v20 = type metadata accessor for BundleFinder();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v20);
  v22 = objc_msgSend((id)objc_opt_self(NSBundle), "bundleForClass:", ObjCClassFromMetadata);
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v8, v11, v5);
  v23 = String.init(localized:table:bundle:locale:comment:)(v15, 0, 0, v22, v8, "Theme Options customize toggle title", 36, 2);
  v25 = v24;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v18, v12);
  v48[0] = v23;
  v48[1] = v25;
  v26 = v42;
  sub_10002CD84(v42, (uint64_t)v4, type metadata accessor for ThemeOptionsView);
  v27 = type metadata accessor for MainActor(0);
  v28 = static MainActor.shared.getter(v27);
  v29 = *(unsigned __int8 *)(v43 + 80);
  v30 = (v29 + 32) & ~v29;
  v31 = v30 + v44;
  v32 = v29 | 7;
  v33 = swift_allocObject(&unk_1008FACB0, v30 + v44, v29 | 7);
  *(_QWORD *)(v33 + 16) = v28;
  *(_QWORD *)(v33 + 24) = &protocol witness table for MainActor;
  sub_1002E6670((uint64_t)v4, v33 + v30);
  v34 = sub_10002CD84(v26, (uint64_t)v4, type metadata accessor for ThemeOptionsView);
  v35 = static MainActor.shared.getter(v34);
  v36 = swift_allocObject(&unk_1008FACD8, v31, v32);
  *(_QWORD *)(v36 + 16) = v35;
  *(_QWORD *)(v36 + 24) = &protocol witness table for MainActor;
  sub_1002E6670((uint64_t)v4, v36 + v30);
  Binding.init(get:set:)(v46, sub_1002E72D0, v33, sub_1002E7334, v36, &type metadata for Bool);
  v37 = v46[0];
  v38 = v46[1];
  v39 = v47;
  v40 = sub_1001F2108();
  return Toggle<>.init<A>(_:isOn:)(v48, v37, v38, v39, &type metadata for String, v40);
}

uint64_t sub_1002E1FAC@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  void (*v15)(char *, char *, uint64_t);
  uint64_t v16;
  void (*v17)(char *, uint64_t);
  uint64_t v19;

  v2 = sub_10004CFD4(&qword_1009D8750);
  __chkstk_darwin(v2);
  v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)&v19 - v6;
  v8 = sub_10004CFD4(&qword_1009D8658);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v19 - v13;
  sub_1002E1C94((uint64_t)&v19 - v13);
  sub_1002E2B78(v7);
  v15 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
  v15(v11, v14, v8);
  sub_10000B5E4((uint64_t)v7, (uint64_t)v4, &qword_1009D8750);
  v15(a1, v11, v8);
  v16 = sub_10004CFD4(&qword_1009D8758);
  sub_10000B5E4((uint64_t)v4, (uint64_t)&a1[*(int *)(v16 + 48)], &qword_1009D8750);
  sub_100010960((uint64_t)v7, &qword_1009D8750);
  v17 = *(void (**)(char *, uint64_t))(v9 + 8);
  v17(v14, v8);
  sub_100010960((uint64_t)v4, &qword_1009D8750);
  return ((uint64_t (*)(char *, uint64_t))v17)(v11, v8);
}

uint64_t sub_1002E2134@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, char *, uint64_t);
  uint64_t v20;
  void (*v21)(char *, uint64_t);
  uint64_t v23;

  v2 = sub_10004CFD4(&qword_1009D8658);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v23 - v7;
  v9 = sub_10004CFD4(&qword_1009D86A0);
  __chkstk_darwin(v9);
  v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v23 - v13;
  v15 = objc_msgSend((id)objc_opt_self(UIDevice), "currentDevice");
  v16 = objc_msgSend(v15, "userInterfaceIdiom");

  if (v16)
  {
    sub_1002E234C((uint64_t)v14);
    v17 = sub_10004CFD4(&qword_1009D86A8);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v14, 0, 1, v17);
  }
  else
  {
    v18 = sub_10004CFD4(&qword_1009D86A8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v14, 1, 1, v18);
  }
  sub_1002E26F0((uint64_t)v8);
  sub_10000B5E4((uint64_t)v14, (uint64_t)v11, &qword_1009D86A0);
  v19 = *(void (**)(char *, char *, uint64_t))(v3 + 16);
  v19(v5, v8, v2);
  sub_10000B5E4((uint64_t)v11, a1, &qword_1009D86A0);
  v20 = sub_10004CFD4(&qword_1009D86B0);
  v19((char *)(a1 + *(int *)(v20 + 48)), v5, v2);
  v21 = *(void (**)(char *, uint64_t))(v3 + 8);
  v21(v8, v2);
  sub_100010960((uint64_t)v14, &qword_1009D86A0);
  v21(v5, v2);
  return sub_100010960((uint64_t)v11, &qword_1009D86A0);
}

uint64_t sub_1002E234C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t ObjCClassFromMetadata;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  _QWORD v51[3];

  v50 = a1;
  v1 = type metadata accessor for ThemeOptionsView(0);
  v2 = *(_QWORD *)(*(_QWORD *)(v1 - 8) + 64);
  v47 = *(_QWORD *)(v1 - 8);
  v48 = v2;
  __chkstk_darwin(v1);
  v4 = (char *)&v46 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10004CFD4(&qword_1009D86B8);
  __chkstk_darwin(v5);
  v49 = (uint64_t *)((char *)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = type metadata accessor for Locale(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v46 - v12;
  v14 = type metadata accessor for String.LocalizationValue(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&v46 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v20 = (char *)&v46 - v19;
  v21 = String.LocalizationValue.init(stringLiteral:)(0x736E6D756C6F43, 0xE700000000000000);
  static Locale.current.getter(v21);
  (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v17, v20, v14);
  v22 = type metadata accessor for BundleFinder();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v22);
  v24 = objc_msgSend((id)objc_opt_self(NSBundle), "bundleForClass:", ObjCClassFromMetadata);
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v10, v13, v7);
  v25 = String.init(localized:table:bundle:locale:comment:)(v17, 0, 0, v24, v10, "Theme Options multi column toggle title", 39, 2);
  v27 = v26;
  (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
  (*(void (**)(char *, uint64_t))(v15 + 8))(v20, v14);
  v51[0] = v25;
  v51[1] = v27;
  v28 = v46;
  sub_10002CD84(v46, (uint64_t)v4, type metadata accessor for ThemeOptionsView);
  v29 = type metadata accessor for MainActor(0);
  v30 = static MainActor.shared.getter(v29);
  v31 = *(unsigned __int8 *)(v47 + 80);
  v32 = (v31 + 32) & ~v31;
  v33 = v32 + v48;
  v34 = v31 | 7;
  v35 = swift_allocObject(&unk_1008FAB98, v32 + v48, v31 | 7);
  *(_QWORD *)(v35 + 16) = v30;
  *(_QWORD *)(v35 + 24) = &protocol witness table for MainActor;
  sub_1002E6670((uint64_t)v4, v35 + v32);
  v36 = sub_10002CD84(v28, (uint64_t)v4, type metadata accessor for ThemeOptionsView);
  v37 = static MainActor.shared.getter(v36);
  v38 = swift_allocObject(&unk_1008FABC0, v33, v34);
  *(_QWORD *)(v38 + 16) = v37;
  *(_QWORD *)(v38 + 24) = &protocol witness table for MainActor;
  sub_1002E6670((uint64_t)v4, v38 + v32);
  v39 = type metadata accessor for MultipleColumnMode(0);
  v40 = v49;
  Binding.init(get:set:)(v49, sub_1002E6E60, v35, sub_1002E6EA4, v38, v39);
  v41 = sub_10004CFD4(&qword_1009D86C0);
  v42 = sub_100008DB0(&qword_1009D86C8, (uint64_t (*)(uint64_t))&type metadata accessor for MultipleColumnMode, (uint64_t)&protocol conformance descriptor for MultipleColumnMode);
  v43 = sub_1002E6F04();
  v44 = sub_1001F2108();
  return Picker<>.init<A>(_:selection:content:)(v51, v40, sub_1002E46DC, 0, v39, v41, &type metadata for String, v42, v43, v44);
}

uint64_t sub_1002E26F0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t ObjCClassFromMetadata;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD v46[2];
  unsigned __int8 v47;
  _QWORD v48[3];

  v45 = a1;
  v1 = type metadata accessor for ThemeOptionsView(0);
  v2 = *(_QWORD *)(*(_QWORD *)(v1 - 8) + 64);
  v43 = *(_QWORD *)(v1 - 8);
  v44 = v2;
  __chkstk_darwin(v1);
  v4 = (char *)&v42 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Locale(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v42 - v10;
  v12 = type metadata accessor for String.LocalizationValue(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v18 = (char *)&v42 - v17;
  v19 = String.LocalizationValue.init(stringLiteral:)(0x207966697473754ALL, 0xEC00000074786554);
  static Locale.current.getter(v19);
  (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v15, v18, v12);
  v20 = type metadata accessor for BundleFinder();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v20);
  v22 = objc_msgSend((id)objc_opt_self(NSBundle), "bundleForClass:", ObjCClassFromMetadata);
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v8, v11, v5);
  v23 = String.init(localized:table:bundle:locale:comment:)(v15, 0, 0, v22, v8, "Theme Options justify text toggle title", 39, 2);
  v25 = v24;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v18, v12);
  v48[0] = v23;
  v48[1] = v25;
  v26 = v42;
  sub_10002CD84(v42, (uint64_t)v4, type metadata accessor for ThemeOptionsView);
  v27 = type metadata accessor for MainActor(0);
  v28 = static MainActor.shared.getter(v27);
  v29 = *(unsigned __int8 *)(v43 + 80);
  v30 = (v29 + 32) & ~v29;
  v31 = v30 + v44;
  v32 = v29 | 7;
  v33 = swift_allocObject(&unk_1008FAB48, v30 + v44, v29 | 7);
  *(_QWORD *)(v33 + 16) = v28;
  *(_QWORD *)(v33 + 24) = &protocol witness table for MainActor;
  sub_1002E6670((uint64_t)v4, v33 + v30);
  v34 = sub_10002CD84(v26, (uint64_t)v4, type metadata accessor for ThemeOptionsView);
  v35 = static MainActor.shared.getter(v34);
  v36 = swift_allocObject(&unk_1008FAB70, v31, v32);
  *(_QWORD *)(v36 + 16) = v35;
  *(_QWORD *)(v36 + 24) = &protocol witness table for MainActor;
  sub_1002E6670((uint64_t)v4, v36 + v30);
  Binding.init(get:set:)(v46, sub_1002E6E0C, v33, sub_1002E6E50, v36, &type metadata for Bool);
  v37 = v46[0];
  v38 = v46[1];
  v39 = v47;
  v40 = sub_1001F2108();
  return Toggle<>.init<A>(_:isOn:)(v48, v37, v38, v39, &type metadata for String, v40);
}

uint64_t sub_1002E2A0C@<X0>(uint64_t a1@<X2>, uint64_t (*a2)(uint64_t)@<X3>, _BYTE *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v6 = type metadata accessor for BookThemeEntity(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(a1 + 48);
  v11 = swift_retain(v10);
  ThemeOptionsViewModel.theme.getter(v11);
  v12 = swift_release(v10);
  LOBYTE(a2) = a2(v12);
  result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  *a3 = a2 & 1;
  return result;
}

uint64_t sub_1002E2ABC(unsigned __int8 *a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v9;
  char v10;
  char v11;

  v4 = *a1;
  v5 = a4[3];
  v6 = a4[4];
  sub_10003F198(a4, v5);
  dispatch thunk of ThemeOptionsEventHandling.didToggle(hasCustomLayout:)(v4, v5, v6);
  type metadata accessor for ThemeOptionsView(0);
  v11 = 0;
  v7 = sub_10004CFD4(&qword_1009D3A10);
  AccessibilityFocusState.wrappedValue.setter(&v11, v7);
  v10 = 0;
  AccessibilityFocusState.wrappedValue.setter(&v10, v7);
  v9 = 0;
  return AccessibilityFocusState.wrappedValue.setter(&v9, v7);
}

uint64_t sub_1002E2B78@<X0>(char *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  int *v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(char *, char *, uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t ObjCClassFromMetadata;
  id v43;
  _QWORD *v44;
  unint64_t v45;
  _QWORD *v46;
  char *v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  __n128 v55;
  double v56;
  void (*v57)(char *, uint64_t);
  void *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t *v63;
  unint64_t v64;
  uint64_t (**v65)@<X0>(uint64_t *@<X8>);
  uint64_t (**v66)(double);
  char v67;
  double v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  char *v83;
  char *v84;
  uint64_t v85;
  char *v86;
  char *v87;
  uint64_t v88;
  id v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  __n128 v100;
  double v101;
  void *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t *v105;
  uint64_t (**v106)@<X0>(uint64_t *@<X8>);
  uint64_t v107;
  uint64_t (**v108)(double);
  double v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  char *v122;
  uint64_t v123;
  char *v124;
  char *v125;
  uint64_t v126;
  id v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  char *v137;
  __n128 v138;
  double v139;
  void *v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t *v143;
  uint64_t (**v144)@<X0>(uint64_t *@<X8>);
  uint64_t (**v145)(double);
  double v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  char *v157;
  uint64_t v158;
  char *v159;
  char *v160;
  uint64_t v161;
  id v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  char *v174;
  __n128 v175;
  double v176;
  void *v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t KeyPath;
  uint64_t v181;
  int *v182;
  uint64_t *v183;
  uint64_t (**v184)@<X0>(uint64_t *@<X8>);
  uint64_t (**v185)(double);
  double v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  unint64_t v199;
  char *v200;
  uint64_t v201;
  char *v202;
  uint64_t v203;
  char *v204;
  void (*v205)(char *, char *, uint64_t);
  uint64_t v206;
  void (*v207)(char *, char *, uint64_t);
  char *v208;
  int *v209;
  char *v210;
  void (*v211)(char *, uint64_t);
  void (*v212)(char *, uint64_t);
  __int128 v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t *v217;
  uint64_t v218;
  uint64_t v219;
  char *v220;
  uint64_t v221;
  char *v222;
  uint64_t v223;
  char *v224;
  uint64_t v225;
  char *v226;
  void (*v227)(char *, char *, uint64_t);
  unint64_t v228;
  uint64_t v229;
  char *v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  _QWORD *v236;
  _QWORD *v237;
  void (*v238)(char *, char *, uint64_t);
  id v239;
  uint64_t v240;
  void (*v241)(char *, uint64_t);
  void (*v242)(char *, char *, uint64_t);
  uint64_t v243;
  char *v244;
  uint64_t v245;
  uint64_t v246;
  char *v247;
  uint64_t v248;
  char *v249;
  _QWORD *v250;
  char *v251;
  char *v252;
  uint64_t v253;
  char *v254;
  uint64_t v255;
  char *v256;
  char *v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  unsigned __int8 v262;

  v224 = a1;
  v216 = sub_10004CFD4(&qword_1009D8760);
  __chkstk_darwin(v216);
  v217 = (uint64_t *)((char *)&v214 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  v218 = sub_10004CFD4(&qword_1009D8768);
  __chkstk_darwin(v218);
  v219 = (uint64_t)&v214 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v223 = sub_10004CFD4(&qword_1009D8770);
  v221 = *(_QWORD *)(v223 - 8);
  __chkstk_darwin(v223);
  v222 = (char *)&v214 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v220 = (char *)&v214 - v5;
  v258 = type metadata accessor for ThemeOptionsView(0);
  v234 = *(_QWORD *)(v258 - 8);
  __chkstk_darwin(v258);
  v215 = (uint64_t)&v214 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v235 = v6;
  __chkstk_darwin(v7);
  v253 = (uint64_t)&v214 - v8;
  v255 = type metadata accessor for BookThemeEntity(0);
  v241 = *(void (**)(char *, uint64_t))(v255 - 8);
  __chkstk_darwin(v255);
  v254 = (char *)&v214 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Locale(0);
  v237 = *(_QWORD **)(v10 - 8);
  __chkstk_darwin(v10);
  v12 = (char *)&v214 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v214 - v14;
  v16 = type metadata accessor for String.LocalizationValue(0);
  v236 = *(_QWORD **)(v16 - 8);
  v17 = v236;
  __chkstk_darwin(v16);
  v19 = (char *)&v214 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v22 = (char *)&v214 - v21;
  v23 = (int *)sub_10004CFD4(&qword_1009D8778);
  __chkstk_darwin(v23);
  v25 = (_QWORD *)((char *)&v214 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  v243 = sub_10004CFD4(&qword_1009D8780);
  __chkstk_darwin(v243);
  v229 = (uint64_t)&v214 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v259 = sub_10004CFD4(&qword_1009D8788);
  v250 = *(_QWORD **)(v259 - 8);
  __chkstk_darwin(v259);
  v230 = (char *)&v214 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28);
  v252 = (char *)&v214 - v29;
  __chkstk_darwin(v30);
  v251 = (char *)&v214 - v31;
  __chkstk_darwin(v32);
  v257 = (char *)&v214 - v33;
  __chkstk_darwin(v34);
  v256 = (char *)&v214 - v35;
  __chkstk_darwin(v36);
  v249 = (char *)&v214 - v37;
  v38 = String.LocalizationValue.init(stringLiteral:)(0x41505320454E494CLL, 0xEC000000474E4943);
  static Locale.current.getter(v38);
  v39 = (void (*)(char *, char *, uint64_t))v17[2];
  v40 = v16;
  v242 = v39;
  v39(v19, v22, v16);
  v41 = type metadata accessor for BundleFinder();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v41);
  v239 = (id)objc_opt_self(NSBundle);
  v240 = ObjCClassFromMetadata;
  v43 = objc_msgSend(v239, "bundleForClass:", ObjCClassFromMetadata);
  v44 = v237;
  v238 = (void (*)(char *, char *, uint64_t))v237[2];
  v238(v12, v15, v10);
  v244 = v19;
  v245 = (uint64_t)v12;
  v231 = String.init(localized:table:bundle:locale:comment:)(v19, 0, 0, v43, v12, "Theme Options line height title", 31, 2);
  v228 = v45;
  v46 = (_QWORD *)v44[1];
  v247 = v15;
  v248 = v10;
  v47 = v15;
  v48 = v40;
  v237 = v46;
  ((void (*)(char *, uint64_t))v46)(v47, v10);
  v49 = (_QWORD *)v236[1];
  v51 = v254;
  v50 = v255;
  v52 = v225;
  v226 = v22;
  v236 = v49;
  ((void (*)(char *, uint64_t))v49)(v22, v40);
  v53 = *(_QWORD *)(v52 + 48);
  v54 = swift_retain(v53);
  ThemeOptionsViewModel.theme.getter(v54);
  v55 = swift_release(v53);
  v56 = BookThemeEntity.lineHeight.getter(v55);
  v57 = (void (*)(char *, uint64_t))*((_QWORD *)v241 + 1);
  v57(v51, v50);
  if (qword_1009CDE20 != -1)
    swift_once(&qword_1009CDE20, sub_1002E5F04);
  v241 = v57;
  v246 = v48;
  v58 = (void *)qword_1009D81F0;
  v59 = v253;
  sub_10002CD84(v52, v253, type metadata accessor for ThemeOptionsView);
  v60 = *(unsigned __int8 *)(v234 + 80);
  v61 = (v60 + 16) & ~v60;
  v234 = v61 + v235;
  v233 = v60 | 7;
  v62 = swift_allocObject(&unk_1008FABE8, v61 + v235, v60 | 7);
  v235 = v61;
  sub_1002E6670(v59, v62 + v61);
  *v25 = swift_getKeyPath(&unk_1007184F8);
  v232 = sub_10004CFD4(&qword_1009D8790);
  swift_storeEnumTagMultiPayload(v25, v232, 0);
  v63 = (_QWORD *)((char *)v25 + v23[9]);
  v64 = v228;
  *v63 = v231;
  v63[1] = v64;
  v65 = (uint64_t (**)@<X0>(uint64_t *@<X8>))((char *)v25 + v23[10]);
  *v65 = sub_1002E3F10;
  v65[1] = 0;
  *(_OWORD *)((char *)v25 + v23[11]) = xmmword_1007180F0;
  *(_QWORD *)((char *)v25 + v23[12]) = 0x3FA999999999999ALL;
  *(double *)((char *)v25 + v23[13]) = v56;
  *(_QWORD *)((char *)v25 + v23[14]) = v58;
  v66 = (uint64_t (**)(double))((char *)v25 + v23[15]);
  *v66 = sub_1002E7074;
  v66[1] = (uint64_t (*)(double))v62;
  v67 = static Edge.Set.vertical.getter(v58);
  if (qword_1009CDE00 != -1)
    swift_once(&qword_1009CDE00, sub_1002D87A0);
  v68 = EdgeInsets.init(_all:)(*(double *)&qword_100A1E468);
  v70 = v69;
  v72 = v71;
  v74 = v73;
  v75 = v229;
  sub_10000B5E4((uint64_t)v25, v229, &qword_1009D8778);
  v76 = v243;
  v77 = v75 + *(int *)(v243 + 36);
  *(_BYTE *)v77 = v67;
  *(double *)(v77 + 8) = v68;
  *(_QWORD *)(v77 + 16) = v70;
  *(_QWORD *)(v77 + 24) = v72;
  *(_QWORD *)(v77 + 32) = v74;
  *(_BYTE *)(v77 + 40) = 0;
  sub_100010960((uint64_t)v25, &qword_1009D8778);
  v231 = sub_10004CFD4(&qword_1009D3A10);
  AccessibilityFocusState.projectedValue.getter(&v260, v231);
  v78 = v260;
  v79 = v261;
  v80 = v52;
  v81 = v262;
  v82 = sub_1002E7094();
  v83 = v256;
  v228 = v82;
  View.accessibilityFocused(_:)(v78, v79, v81, v76, v82);
  swift_release(v79);
  swift_release(v78);
  sub_100010960(v75, &qword_1009D8780);
  v227 = (void (*)(char *, char *, uint64_t))v250[4];
  v227(v249, v83, v259);
  v84 = v226;
  v85 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000011, 0x80000001007BD280);
  v86 = v247;
  static Locale.current.getter(v85);
  v87 = v244;
  v88 = v246;
  v242(v244, v84, v246);
  v89 = objc_msgSend(v239, "bundleForClass:", v240);
  v90 = v245;
  v91 = v248;
  v238((char *)v245, v86, v248);
  v92 = v87;
  v93 = v86;
  v94 = String.init(localized:table:bundle:locale:comment:)(v92, 0, 0, v89, v90, "Theme Options letter spacing title", 34, 2);
  v96 = v95;
  ((void (*)(char *, uint64_t))v237)(v93, v91);
  ((void (*)(char *, uint64_t))v236)(v84, v88);
  v97 = *(_QWORD *)(v80 + 48);
  v98 = swift_retain(v97);
  v99 = v254;
  ThemeOptionsViewModel.theme.getter(v98);
  v100 = swift_release(v97);
  v101 = BookThemeEntity.letterSpacing.getter(v100);
  v241(v99, v255);
  if (qword_1009CDE28 != -1)
    swift_once(&qword_1009CDE28, sub_1002E6028);
  v102 = (void *)qword_1009D81F8;
  v103 = v253;
  sub_10002CD84(v80, v253, type metadata accessor for ThemeOptionsView);
  v104 = swift_allocObject(&unk_1008FAC10, v234, v233);
  sub_1002E6670(v103, v104 + v235);
  *v25 = swift_getKeyPath(&unk_1007184F8);
  swift_storeEnumTagMultiPayload(v25, v232, 0);
  v105 = (_QWORD *)((char *)v25 + v23[9]);
  *v105 = v94;
  v105[1] = v96;
  v106 = (uint64_t (**)@<X0>(uint64_t *@<X8>))((char *)v25 + v23[10]);
  *v106 = sub_1002E3F4C;
  v106[1] = 0;
  v107 = v23[11];
  v214 = xmmword_100718100;
  *(_OWORD *)((char *)v25 + v107) = xmmword_100718100;
  *(_QWORD *)((char *)v25 + v23[12]) = 0x3F847AE147AE147BLL;
  *(double *)((char *)v25 + v23[13]) = v101;
  *(_QWORD *)((char *)v25 + v23[14]) = v102;
  v108 = (uint64_t (**)(double))((char *)v25 + v23[15]);
  *v108 = sub_1002E711C;
  v108[1] = (uint64_t (*)(double))v104;
  LOBYTE(v104) = static Edge.Set.vertical.getter(v102);
  v109 = EdgeInsets.init(_all:)(*(double *)&qword_100A1E468);
  v111 = v110;
  v113 = v112;
  v115 = v114;
  v116 = v229;
  sub_10000B5E4((uint64_t)v25, v229, &qword_1009D8778);
  v117 = v243;
  v118 = v116 + *(int *)(v243 + 36);
  *(_BYTE *)v118 = v104;
  *(double *)(v118 + 8) = v109;
  *(_QWORD *)(v118 + 16) = v111;
  *(_QWORD *)(v118 + 24) = v113;
  *(_QWORD *)(v118 + 32) = v115;
  *(_BYTE *)(v118 + 40) = 0;
  sub_100010960((uint64_t)v25, &qword_1009D8778);
  AccessibilityFocusState.projectedValue.getter(&v260, v231);
  v119 = v260;
  v120 = v261;
  v121 = v257;
  View.accessibilityFocused(_:)(v260, v261, v262, v117, v228);
  swift_release(v120);
  swift_release(v119);
  sub_100010960(v116, &qword_1009D8780);
  v227(v256, v121, v259);
  v122 = v226;
  v123 = String.LocalizationValue.init(stringLiteral:)(0x4150532044524F57, 0xEC000000474E4943);
  v124 = v247;
  static Locale.current.getter(v123);
  v125 = v244;
  v126 = v246;
  v242(v244, v122, v246);
  v127 = objc_msgSend(v239, "bundleForClass:", v240);
  v128 = v245;
  v129 = v248;
  v238((char *)v245, v124, v248);
  v130 = String.init(localized:table:bundle:locale:comment:)(v125, 0, 0, v127, v128, "Theme Options word spacing title", 32, 2);
  v132 = v131;
  ((void (*)(char *, uint64_t))v237)(v124, v129);
  v133 = v122;
  ((void (*)(char *, uint64_t))v236)(v122, v126);
  v134 = v225;
  v135 = *(_QWORD *)(v225 + 48);
  v136 = swift_retain(v135);
  v137 = v254;
  ThemeOptionsViewModel.theme.getter(v136);
  v138 = swift_release(v135);
  v139 = BookThemeEntity.wordSpacing.getter(v138);
  v241(v137, v255);
  v140 = (void *)qword_1009D81F8;
  v141 = v253;
  sub_10002CD84(v134, v253, type metadata accessor for ThemeOptionsView);
  v142 = swift_allocObject(&unk_1008FAC38, v234, v233);
  sub_1002E6670(v141, v142 + v235);
  *v25 = swift_getKeyPath(&unk_1007184F8);
  swift_storeEnumTagMultiPayload(v25, v232, 0);
  v143 = (_QWORD *)((char *)v25 + v23[9]);
  *v143 = v130;
  v143[1] = v132;
  v144 = (uint64_t (**)@<X0>(uint64_t *@<X8>))((char *)v25 + v23[10]);
  *v144 = sub_1002E3F88;
  v144[1] = 0;
  *(_OWORD *)((char *)v25 + v23[11]) = xmmword_100718110;
  *(_QWORD *)((char *)v25 + v23[12]) = 0x3F947AE147AE147BLL;
  *(double *)((char *)v25 + v23[13]) = v139;
  *(_QWORD *)((char *)v25 + v23[14]) = v140;
  v145 = (uint64_t (**)(double))((char *)v25 + v23[15]);
  *v145 = sub_1002E71B0;
  v145[1] = (uint64_t (*)(double))v142;
  LOBYTE(v142) = static Edge.Set.vertical.getter(v140);
  v146 = EdgeInsets.init(_all:)(*(double *)&qword_100A1E468);
  v148 = v147;
  v150 = v149;
  v152 = v151;
  sub_10000B5E4((uint64_t)v25, v116, &qword_1009D8778);
  v153 = v243;
  v154 = v116 + *(int *)(v243 + 36);
  *(_BYTE *)v154 = v142;
  *(double *)(v154 + 8) = v146;
  *(_QWORD *)(v154 + 16) = v148;
  *(_QWORD *)(v154 + 24) = v150;
  *(_QWORD *)(v154 + 32) = v152;
  *(_BYTE *)(v154 + 40) = 0;
  sub_100010960((uint64_t)v25, &qword_1009D8778);
  AccessibilityFocusState.projectedValue.getter(&v260, v231);
  v155 = v260;
  v156 = v261;
  v157 = v251;
  View.accessibilityFocused(_:)(v260, v261, v262, v153, v228);
  swift_release(v156);
  swift_release(v155);
  sub_100010960(v116, &qword_1009D8780);
  v227(v257, v157, v259);
  v158 = String.LocalizationValue.init(stringLiteral:)(0x534E494752414DLL, 0xE700000000000000);
  v159 = v247;
  static Locale.current.getter(v158);
  v160 = v244;
  v161 = v246;
  v242(v244, v133, v246);
  v162 = objc_msgSend(v239, "bundleForClass:", v240);
  v163 = v245;
  v164 = v248;
  v238((char *)v245, v159, v248);
  v245 = String.init(localized:table:bundle:locale:comment:)(v160, 0, 0, v162, v163, "Theme Options margin adjustment title", 37, 2);
  v166 = v165;
  ((void (*)(char *, uint64_t))v237)(v159, v164);
  ((void (*)(char *, uint64_t))v236)(v133, v161);
  v167 = v253;
  sub_10002CD84(v134, v253, type metadata accessor for ThemeOptionsView);
  v168 = v234;
  v169 = v233;
  v170 = swift_allocObject(&unk_1008FAC60, v234, v233);
  v171 = v235;
  sub_1002E6670(v167, v170 + v235);
  v172 = *(_QWORD *)(v134 + 48);
  v173 = swift_retain(v172);
  v174 = v254;
  ThemeOptionsViewModel.theme.getter(v173);
  v175 = swift_release(v172);
  v176 = BookThemeEntity.marginAdjustment.getter(v175);
  v241(v174, v255);
  v177 = (void *)qword_1009D81F8;
  v178 = v215;
  sub_10002CD84(v134, v215, type metadata accessor for ThemeOptionsView);
  v179 = swift_allocObject(&unk_1008FAC88, v168, v169);
  sub_1002E6670(v178, v179 + v171);
  KeyPath = swift_getKeyPath(&unk_1007184F8);
  v181 = (uint64_t)v217;
  *v217 = KeyPath;
  swift_storeEnumTagMultiPayload(v181, v232, 0);
  v182 = (int *)v216;
  v183 = (uint64_t *)(v181 + *(int *)(v216 + 36));
  *v183 = v245;
  v183[1] = v166;
  v184 = (uint64_t (**)@<X0>(uint64_t *@<X8>))(v181 + v182[10]);
  *v184 = sub_1002E71F0;
  v184[1] = (uint64_t (*)@<X0>(uint64_t *@<X8>))v170;
  *(_OWORD *)(v181 + v182[11]) = v214;
  *(_QWORD *)(v181 + v182[12]) = 0x3F847AE147AE147BLL;
  *(double *)(v181 + v182[13]) = v176;
  *(_QWORD *)(v181 + v182[14]) = v177;
  v185 = (uint64_t (**)(double))(v181 + v182[15]);
  *v185 = sub_1002E7230;
  v185[1] = (uint64_t (*)(double))v179;
  LOBYTE(v169) = static Edge.Set.vertical.getter(v177);
  v186 = EdgeInsets.init(_all:)(*(double *)&qword_100A1E468);
  v188 = v187;
  v190 = v189;
  v192 = v191;
  v193 = v219;
  sub_10000B5E4(v181, v219, &qword_1009D8760);
  v194 = v218;
  v195 = v193 + *(int *)(v218 + 36);
  *(_BYTE *)v195 = v169;
  *(double *)(v195 + 8) = v186;
  *(_QWORD *)(v195 + 16) = v188;
  *(_QWORD *)(v195 + 24) = v190;
  *(_QWORD *)(v195 + 32) = v192;
  *(_BYTE *)(v195 + 40) = 0;
  sub_100010960(v181, &qword_1009D8760);
  AccessibilityFocusState.projectedValue.getter(&v260, v231);
  v196 = v260;
  v197 = v261;
  v198 = v262;
  v199 = sub_1002E7248();
  v200 = v222;
  View.accessibilityFocused(_:)(v196, v197, v198, v194, v199);
  swift_release(v197);
  swift_release(v196);
  sub_100010960(v193, &qword_1009D8768);
  v201 = v221;
  v202 = v220;
  v203 = v223;
  (*(void (**)(char *, char *, uint64_t))(v221 + 32))(v220, v200, v223);
  v204 = v251;
  v205 = (void (*)(char *, char *, uint64_t))v250[2];
  v206 = v259;
  v205(v251, v249, v259);
  v205(v252, v256, v206);
  v205(v230, v257, v206);
  v207 = *(void (**)(char *, char *, uint64_t))(v201 + 16);
  v207(v200, v202, v203);
  v208 = v224;
  v205(v224, v204, v206);
  v209 = (int *)sub_10004CFD4(&qword_1009D87B8);
  v205(&v208[v209[12]], v252, v206);
  v210 = v230;
  v205(&v208[v209[16]], v230, v206);
  v207(&v208[v209[20]], v200, v203);
  v211 = *(void (**)(char *, uint64_t))(v201 + 8);
  v211(v202, v203);
  v212 = (void (*)(char *, uint64_t))v250[1];
  v212(v257, v206);
  v212(v256, v206);
  v212(v249, v206);
  v211(v200, v203);
  v212(v210, v206);
  v212(v252, v206);
  return ((uint64_t (*)(char *, uint64_t))v212)(v251, v206);
}

uint64_t sub_1002E3F10@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = Image.init(systemName:)(0xD000000000000021, 0x80000001007BD3C0);
  *a1 = result;
  return result;
}

uint64_t sub_1002E3F4C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = Image.init(systemName:)(0xD00000000000002ALL, 0x80000001007BD390);
  *a1 = result;
  return result;
}

uint64_t sub_1002E3F88@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = Image.init(systemName:)(0xD000000000000011, 0x80000001007BD370);
  *a1 = result;
  return result;
}

uint64_t sub_1002E3FC4(_QWORD *a1, double a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v7;
  char v8;
  char v9;
  char v10;

  v3 = a1[3];
  v4 = a1[4];
  sub_10003F198(a1, v3);
  dispatch thunk of ThemeOptionsEventHandling.didSlide(wordSpacing:)(v3, v4, a2);
  type metadata accessor for ThemeOptionsView(0);
  v10 = 0;
  v5 = sub_10004CFD4(&qword_1009D3A10);
  AccessibilityFocusState.wrappedValue.setter(&v10, v5);
  v9 = 0;
  AccessibilityFocusState.wrappedValue.setter(&v9, v5);
  v8 = 1;
  AccessibilityFocusState.wrappedValue.setter(&v8, v5);
  v7 = 0;
  return AccessibilityFocusState.wrappedValue.setter(&v7, v5);
}

uint64_t sub_1002E409C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  unsigned int (*v20)(uint64_t, uint64_t, uint64_t);
  _BYTE *v21;
  uint64_t v22;
  void (*v23)(_BYTE *, uint64_t);
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t result;
  uint64_t *v31;
  _BYTE v32[12];
  int v33;
  _BYTE *v34;
  uint64_t *v35;

  v35 = a1;
  v1 = sub_10004CFD4((uint64_t *)&unk_1009D87C0);
  __chkstk_darwin(v1);
  v3 = &v32[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = type metadata accessor for UserInterfaceSizeClass(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v34 = &v32[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = sub_10004CFD4(&qword_1009D3C08);
  __chkstk_darwin(v7);
  v9 = &v32[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = sub_10004CFD4((uint64_t *)&unk_1009D8210);
  __chkstk_darwin(v10);
  v12 = &v32[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v13);
  v15 = &v32[-v14];
  __chkstk_darwin(v16);
  v18 = &v32[-v17];
  type metadata accessor for ThemeOptionsView(0);
  sub_100667DCC((uint64_t)v18);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v5 + 104))(v15, enum case for UserInterfaceSizeClass.compact(_:), v4);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v5 + 56))(v15, 0, 1, v4);
  v19 = (uint64_t)&v9[*(int *)(v7 + 48)];
  sub_10000B5E4((uint64_t)v18, (uint64_t)v9, (uint64_t *)&unk_1009D8210);
  sub_10000B5E4((uint64_t)v15, v19, (uint64_t *)&unk_1009D8210);
  v20 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v20((uint64_t)v9, 1, v4) != 1)
  {
    sub_10000B5E4((uint64_t)v9, (uint64_t)v12, (uint64_t *)&unk_1009D8210);
    if (v20(v19, 1, v4) != 1)
    {
      v21 = v34;
      (*(void (**)(_BYTE *, uint64_t, uint64_t))(v5 + 32))(v34, v19, v4);
      v22 = sub_100008DB0((unint64_t *)&qword_1009D87D0, (uint64_t (*)(uint64_t))&type metadata accessor for UserInterfaceSizeClass, (uint64_t)&protocol conformance descriptor for UserInterfaceSizeClass);
      v33 = dispatch thunk of static Equatable.== infix(_:_:)(v12, v21, v4, v22);
      v23 = *(void (**)(_BYTE *, uint64_t))(v5 + 8);
      v23(v21, v4);
      sub_100010960((uint64_t)v15, (uint64_t *)&unk_1009D8210);
      sub_100010960((uint64_t)v18, (uint64_t *)&unk_1009D8210);
      v23(v12, v4);
      sub_100010960((uint64_t)v9, (uint64_t *)&unk_1009D8210);
      if ((v33 & 1) != 0)
        goto LABEL_8;
LABEL_9:
      v25 = 0xD000000000000016;
      v24 = 0x80000001007BD330;
      goto LABEL_10;
    }
    sub_100010960((uint64_t)v15, (uint64_t *)&unk_1009D8210);
    sub_100010960((uint64_t)v18, (uint64_t *)&unk_1009D8210);
    (*(void (**)(_BYTE *, uint64_t))(v5 + 8))(v12, v4);
LABEL_6:
    sub_100010960((uint64_t)v9, &qword_1009D3C08);
    goto LABEL_9;
  }
  sub_100010960((uint64_t)v15, (uint64_t *)&unk_1009D8210);
  sub_100010960((uint64_t)v18, (uint64_t *)&unk_1009D8210);
  if (v20(v19, 1, v4) != 1)
    goto LABEL_6;
  sub_100010960((uint64_t)v9, (uint64_t *)&unk_1009D8210);
LABEL_8:
  v24 = 0x80000001007BD350;
  v25 = 0xD00000000000001FLL;
LABEL_10:
  v26 = Image.init(systemName:)(v25, v24);
  static SymbolRenderingMode.palette.getter();
  v27 = type metadata accessor for SymbolRenderingMode(0);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v3, 0, 1, v27);
  v28 = Image.symbolRenderingMode(_:)(v3, v26);
  swift_release(v26);
  v29 = sub_100010960((uint64_t)v3, (uint64_t *)&unk_1009D87C0);
  LODWORD(v26) = static HierarchicalShapeStyle.secondary.getter(v29);
  result = static HierarchicalShapeStyle.primary.getter();
  v31 = v35;
  *v35 = v28;
  *((_DWORD *)v31 + 2) = v26;
  *((_DWORD *)v31 + 3) = 1056964608;
  *((_DWORD *)v31 + 4) = result;
  return result;
}

uint64_t sub_1002E4498(_QWORD *a1, void (*a2)(uint64_t, uint64_t, double), char a3, char a4, char a5, double a6)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v15;
  char v16;
  char v17;
  char v18;

  v11 = a1[3];
  v12 = a1[4];
  sub_10003F198(a1, v11);
  a2(v11, v12, a6);
  type metadata accessor for ThemeOptionsView(0);
  v18 = a3;
  v13 = sub_10004CFD4(&qword_1009D3A10);
  AccessibilityFocusState.wrappedValue.setter(&v18, v13);
  v17 = a4;
  AccessibilityFocusState.wrappedValue.setter(&v17, v13);
  v16 = 0;
  AccessibilityFocusState.wrappedValue.setter(&v16, v13);
  v15 = a5;
  return AccessibilityFocusState.wrappedValue.setter(&v15, v13);
}

uint64_t sub_1002E458C@<X0>(uint64_t a1@<X2>, _BYTE *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;

  v4 = type metadata accessor for BookThemeEntity(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(a1 + 48);
  v9 = swift_retain(v8);
  ThemeOptionsViewModel.theme.getter(v9);
  v10 = swift_release(v8);
  LOBYTE(a1) = BookThemeEntity.justify.getter(v10);
  result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  *a2 = a1 & 1;
  return result;
}

uint64_t sub_1002E4638(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v4 = type metadata accessor for BookThemeEntity(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(a3 + 48);
  v9 = swift_retain(v8);
  ThemeOptionsViewModel.theme.getter(v9);
  v10 = swift_release(v8);
  BookThemeEntity.multipleColumnMode.getter(v10);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1002E46DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, _QWORD, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v0 = sub_10004CFD4(&qword_1009D8718);
  v1 = type metadata accessor for MultipleColumnMode(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = *(unsigned __int8 *)(v2 + 80);
  v5 = (v4 + 32) & ~v4;
  v6 = swift_allocObject(v0, v5 + 3 * v3, v4 | 7);
  *(_OWORD *)(v6 + 16) = xmmword_100712B60;
  v7 = v6 + v5;
  v8 = *(void (**)(uint64_t, _QWORD, uint64_t))(v2 + 104);
  v8(v7, enum case for MultipleColumnMode.oneColumn(_:), v1);
  v8(v7 + v3, enum case for MultipleColumnMode.twoColumn(_:), v1);
  v8(v7 + 2 * v3, enum case for MultipleColumnMode.auto(_:), v1);
  v15 = v6;
  v9 = sub_10004CFD4(&qword_1009D8720);
  v10 = sub_10004CFD4(&qword_1009D86E0);
  v11 = sub_100030B34(&qword_1009D8728, &qword_1009D8720, (uint64_t)&protocol conformance descriptor for [A]);
  v12 = sub_1002E6F68();
  v13 = sub_100008DB0(&qword_1009D8730, (uint64_t (*)(uint64_t))&type metadata accessor for MultipleColumnMode, (uint64_t)&protocol conformance descriptor for MultipleColumnMode);
  return ForEach<>.init(_:content:)(&v15, sub_1002E4860, 0, v9, &type metadata for Int16, v10, v11, v12, v13);
}

double sub_1002E4860@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  double v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  unint64_t v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t, uint64_t);
  void (*v26)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  double result;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD v42[2];

  v40 = a2;
  v3 = sub_10004CFD4(&qword_1009D8738);
  __chkstk_darwin(v3);
  v5 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10004CFD4(&qword_1009D8700);
  __chkstk_darwin(v6);
  v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10004CFD4(&qword_1009D8740);
  __chkstk_darwin(v9);
  v11 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_10004CFD4(&qword_1009D86F0);
  v13 = __chkstk_darwin(v12);
  v15 = (char *)&v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = a1;
  v42[0] = MultipleColumnMode.localizedName.getter(v13);
  v42[1] = v16;
  v17 = sub_1001F2108();
  v36 = Text.init<A>(_:)(v42, &type metadata for String, v17, v18);
  v37 = v19;
  v41 = v20;
  v22 = v21 & 1;
  v23 = type metadata accessor for MultipleColumnMode(0);
  v24 = *(_QWORD *)(v23 - 8);
  v25 = *(void (**)(char *, uint64_t, uint64_t))(v24 + 16);
  v25(v11, a1, v23);
  v26 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56);
  v26(v11, 0, 1, v23);
  sub_10000B5E4((uint64_t)v11, (uint64_t)v8, &qword_1009D8740);
  sub_10000B5E4((uint64_t)v8, (uint64_t)&v15[*(int *)(v12 + 36)], &qword_1009D8700);
  v27 = v36;
  v28 = v37;
  v29 = v41;
  *(_QWORD *)v15 = v36;
  *((_QWORD *)v15 + 1) = v29;
  v30 = v22;
  v39 = v22;
  v15[16] = v22;
  *((_QWORD *)v15 + 3) = v28;
  v31 = v27;
  sub_1001F596C(v27, v29, v30);
  swift_bridgeObjectRetain(v28);
  sub_100010960((uint64_t)v8, &qword_1009D8700);
  sub_100010960((uint64_t)v11, &qword_1009D8740);
  v25(v5, v38, v23);
  v26(v5, 0, 1, v23);
  v32 = sub_10004CFD4(&qword_1009D8748);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v5, 0, 1, v32);
  v33 = sub_10004CFD4(&qword_1009D86E0);
  v34 = v40;
  sub_10000B5E4((uint64_t)v5, v40 + *(int *)(v33 + 36), &qword_1009D8738);
  sub_10000B5E4((uint64_t)v15, v34, &qword_1009D86F0);
  sub_100010960((uint64_t)v5, &qword_1009D8738);
  sub_100010960((uint64_t)v15, &qword_1009D86F0);
  sub_1001F5B28(v31, v41, v39);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v28).n128_u64[0];
  return result;
}

uint64_t sub_1002E4B30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  double v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t KeyPath;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  v47 = a2;
  v3 = type metadata accessor for ControlSize(0);
  v45 = *(_QWORD *)(v3 - 8);
  v46 = v3;
  __chkstk_darwin(v3);
  v44 = (char *)&v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ThemeOptionsView(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  __chkstk_darwin(v5);
  v8 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10004CFD4(&qword_1009D8458);
  __chkstk_darwin(v9);
  v11 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_10004CFD4(&qword_1009D85E8);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = sub_10004CFD4(&qword_1009D85D8);
  __chkstk_darwin(v42);
  v17 = (char *)&v42 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = sub_10004CFD4(&qword_1009D85C8);
  v18 = __chkstk_darwin(v43);
  v20 = (char *)&v42 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  static ButtonRole.destructive.getter(v18);
  v21 = type metadata accessor for ButtonRole(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v11, 0, 1, v21);
  sub_10002CD84(a1, (uint64_t)v8, type metadata accessor for ThemeOptionsView);
  v22 = *(unsigned __int8 *)(v6 + 80);
  v23 = (v22 + 16) & ~v22;
  v24 = swift_allocObject(&unk_1008FAAF8, v23 + v7, v22 | 7);
  sub_1002E6670((uint64_t)v8, v24 + v23);
  v25 = sub_10004CFD4(&qword_1009D8620);
  v26 = sub_1002E6B78();
  Button.init(role:action:label:)(v11, sub_1002E6720, v24, sub_1002E4F04, 0, v25, v26);
  v27 = *(_QWORD *)(a1 + 48);
  v28 = swift_retain(v27);
  LOBYTE(v11) = ThemeOptionsViewModel.canReset.getter(v28);
  swift_release(v27);
  KeyPath = swift_getKeyPath(&unk_1007183D8);
  v30 = swift_allocObject(&unk_1008FAB20, 17, 7);
  *(_BYTE *)(v30 + 16) = (v11 & 1) == 0;
  (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v17, v15, v12);
  v31 = (uint64_t *)&v17[*(int *)(v42 + 36)];
  *v31 = KeyPath;
  v31[1] = (uint64_t)sub_1002E8520;
  v31[2] = v30;
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  v33 = v44;
  v32 = v45;
  v34 = v46;
  (*(void (**)(char *, _QWORD, uint64_t))(v45 + 104))(v44, enum case for ControlSize.large(_:), v46);
  v35 = swift_getKeyPath(&unk_100718498);
  v36 = (uint64_t *)&v20[*(int *)(v43 + 36)];
  v37 = sub_10004CFD4(&qword_1009D85F8);
  (*(void (**)(char *, char *, uint64_t))(v32 + 16))((char *)v36 + *(int *)(v37 + 28), v33, v34);
  *v36 = v35;
  sub_10000B5E4((uint64_t)v17, (uint64_t)v20, &qword_1009D85D8);
  (*(void (**)(char *, uint64_t))(v32 + 8))(v33, v34);
  sub_100010960((uint64_t)v17, &qword_1009D85D8);
  v38 = swift_getKeyPath(&unk_1007184C8);
  v39 = v47;
  sub_10000B5E4((uint64_t)v20, v47, &qword_1009D85C8);
  v40 = v39 + *(int *)(sub_10004CFD4(&qword_1009D85B0) + 36);
  *(_QWORD *)v40 = v38;
  *(_BYTE *)(v40 + 8) = 0;
  return sub_100010960((uint64_t)v20, &qword_1009D85C8);
}

__n128 sub_1002E4F04@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t ObjCClassFromMetadata;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __n128 result;
  uint64_t v37;
  _OWORD v38[9];

  v2 = type metadata accessor for Locale(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v37 - v7;
  v9 = type metadata accessor for String.LocalizationValue(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v37 - v14;
  v16 = String.LocalizationValue.init(stringLiteral:)(0x6854207465736552, 0xEB00000000656D65);
  static Locale.current.getter(v16);
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v12, v15, v9);
  v17 = type metadata accessor for BundleFinder();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v17);
  v19 = objc_msgSend((id)objc_opt_self(NSBundle), "bundleForClass:", ObjCClassFromMetadata);
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v5, v8, v2);
  v20 = String.init(localized:table:bundle:locale:comment:)(v12, 0, 0, v19, v5, "Theme options reset theme button", 32, 2);
  v22 = v21;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v9);
  *(_QWORD *)&v38[0] = v20;
  *((_QWORD *)&v38[0] + 1) = v22;
  v23 = sub_1001F2108();
  v25 = Text.init<A>(_:)(v38, &type metadata for String, v23, v24);
  v27 = v26;
  v29 = v28;
  LOBYTE(v20) = v30 & 1;
  v31 = static Alignment.center.getter(v25);
  sub_1005F22E0(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v38, 0.0, 1, 0.0, 1, v31, v32, v25, v27, v20, v29);
  sub_1001F5B28(v25, v27, v20);
  swift_bridgeObjectRelease(v29);
  v33 = v38[7];
  *(_OWORD *)(a1 + 96) = v38[6];
  *(_OWORD *)(a1 + 112) = v33;
  *(_OWORD *)(a1 + 128) = v38[8];
  v34 = v38[3];
  *(_OWORD *)(a1 + 32) = v38[2];
  *(_OWORD *)(a1 + 48) = v34;
  v35 = v38[5];
  *(_OWORD *)(a1 + 64) = v38[4];
  *(_OWORD *)(a1 + 80) = v35;
  result = (__n128)v38[1];
  *(_OWORD *)a1 = v38[0];
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1002E51A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t ObjCClassFromMetadata;
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  double v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t KeyPath;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t *v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  id v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t *v85;
  uint64_t v86;
  char *v87;
  unint64_t v88;
  char *v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  id v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  void (*v116)(char *, char *, uint64_t);
  char *v117;
  char *v118;
  uint64_t v119;
  char *v120;
  uint64_t v121;
  int *v122;
  uint64_t v123;
  void (*v124)(char *, uint64_t);
  char *v126;
  void (*v127)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v128;
  char *v129;
  uint64_t v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  char *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  char *v140;
  char *v141;
  uint64_t v142;
  uint64_t v143;
  void (*v144)(uint64_t, char *, uint64_t);
  unint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  double (*v150)(char *, uint64_t);
  void (*v151)(char *, uint64_t);
  void (*v152)(char *, char *, uint64_t);
  id v153;
  uint64_t v154;
  void (*v155)(char *, char *, uint64_t);
  uint64_t v156;
  char *v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;

  v163 = a1;
  v138 = a2;
  v135 = sub_10004CFD4(&qword_1009D84D0);
  __chkstk_darwin(v135);
  v134 = (char *)&v126 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v137 = sub_10004CFD4(&qword_1009D84D8);
  __chkstk_darwin(v137);
  v136 = (uint64_t)&v126 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __chkstk_darwin(v4);
  v159 = (uint64_t)&v126 - v6;
  v133 = type metadata accessor for KeyboardShortcut(0, v5);
  v132 = *(_QWORD *)(v133 - 8);
  __chkstk_darwin(v133);
  v131 = (char *)&v126 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v130 = sub_10004CFD4(&qword_1009D84E0);
  __chkstk_darwin(v130);
  v128 = (uint64_t)&v126 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v156 = sub_10004CFD4(&qword_1009D84E8);
  v158 = *(_QWORD *)(v156 - 8);
  __chkstk_darwin(v156);
  v129 = (char *)&v126 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v157 = (char *)&v126 - v11;
  v12 = type metadata accessor for ThemeOptionsView(0);
  v13 = *(_QWORD *)(v12 - 8);
  v148 = *(_QWORD *)(v13 + 64);
  v149 = v13;
  __chkstk_darwin(v12);
  v162 = (uint64_t)&v126 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_10004CFD4(&qword_1009D8458);
  __chkstk_darwin(v15);
  v17 = (char *)&v126 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v160 = type metadata accessor for Locale(0);
  v18 = *(_QWORD *)(v160 - 8);
  __chkstk_darwin(v160);
  v20 = (char *)&v126 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v23 = (char *)&v126 - v22;
  v24 = type metadata accessor for String.LocalizationValue(0);
  v25 = *(_QWORD *)(v24 - 8);
  __chkstk_darwin(v24);
  v27 = (char *)&v126 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28);
  v30 = (char *)&v126 - v29;
  v142 = sub_10004CFD4(&qword_1009D8460);
  v143 = *(_QWORD *)(v142 - 8);
  __chkstk_darwin(v142);
  v126 = (char *)&v126 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v146 = sub_10004CFD4(&qword_1009D84F0);
  __chkstk_darwin(v146);
  v161 = (uint64_t)&v126 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v33);
  v164 = (uint64_t)&v126 - v34;
  v35 = String.LocalizationValue.init(stringLiteral:)(0x6854207465736552, 0xEB00000000656D65);
  static Locale.current.getter(v35);
  v155 = *(void (**)(char *, char *, uint64_t))(v25 + 16);
  v140 = v27;
  v139 = v24;
  v155(v27, v30, v24);
  v36 = type metadata accessor for BundleFinder();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v36);
  v154 = ObjCClassFromMetadata;
  v153 = (id)objc_opt_self(NSBundle);
  v38 = objc_msgSend(v153, "bundleForClass:", ObjCClassFromMetadata);
  v152 = *(void (**)(char *, char *, uint64_t))(v18 + 16);
  v141 = v20;
  v39 = v160;
  v152(v20, v23, v160);
  v40 = String.init(localized:table:bundle:locale:comment:)(v27, 0, 0, v38, v20, "Theme options reset theme button", 32, 2);
  v42 = v41;
  v151 = *(void (**)(char *, uint64_t))(v18 + 8);
  v151(v23, v39);
  v150 = *(double (**)(char *, uint64_t))(v25 + 8);
  v43 = v150(v30, v24);
  v165 = v40;
  v166 = v42;
  static ButtonRole.destructive.getter(v43);
  v44 = type metadata accessor for ButtonRole(0);
  v127 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 56);
  v127(v17, 0, 1, v44);
  v45 = v162;
  v46 = v163;
  sub_10002CD84(v163, v162, type metadata accessor for ThemeOptionsView);
  v47 = *(unsigned __int8 *)(v149 + 80);
  v148 += (v47 + 16) & ~v47;
  v149 = (v47 + 16) & ~v47;
  v48 = v149;
  v147 = v47 | 7;
  v49 = swift_allocObject(&unk_1008FAA08, v148, v47 | 7);
  sub_1002E6670(v45, v49 + v48);
  v145 = sub_1001F2108();
  v50 = v126;
  Button<>.init<A>(_:role:action:)(&v165, v17, sub_1002E6720, v49, &type metadata for String, v145);
  v51 = *(_QWORD *)(v46 + 48);
  v52 = swift_retain(v51);
  LOBYTE(v48) = ThemeOptionsViewModel.canReset.getter(v52);
  swift_release(v51);
  KeyPath = swift_getKeyPath(&unk_1007183D8);
  v54 = swift_allocObject(&unk_1008FAA30, 17, 7);
  *(_BYTE *)(v54 + 16) = (v48 & 1) == 0;
  v55 = v143;
  v144 = *(void (**)(uint64_t, char *, uint64_t))(v143 + 16);
  v56 = v161;
  v57 = v142;
  v144(v161, v50, v142);
  v58 = (uint64_t *)(v56 + *(int *)(v146 + 36));
  *v58 = KeyPath;
  v58[1] = (uint64_t)sub_100234614;
  v58[2] = v54;
  v143 = *(_QWORD *)(v55 + 8);
  ((void (*)(char *, uint64_t))v143)(v50, v57);
  sub_100025B3C(v56, v164, &qword_1009D84F0);
  v59 = String.LocalizationValue.init(stringLiteral:)(0x6C65636E6143, 0xE600000000000000);
  static Locale.current.getter(v59);
  v60 = v140;
  v61 = v139;
  v155(v140, v30, v139);
  v62 = objc_msgSend(v153, "bundleForClass:", v154);
  v63 = v141;
  v64 = v160;
  v152(v141, v23, v160);
  v65 = String.init(localized:table:bundle:locale:comment:)(v60, 0, 0, v62, v63, "Theme Options cancel button", 27, 2);
  v67 = v66;
  v151(v23, v64);
  v68 = ((uint64_t (*)(char *, uint64_t))v150)(v30, v61);
  v165 = v65;
  v166 = v67;
  static ButtonRole.cancel.getter(v68);
  v127(v17, 0, 1, v44);
  v69 = v162;
  v70 = v163;
  sub_10002CD84(v163, v162, type metadata accessor for ThemeOptionsView);
  v71 = swift_allocObject(&unk_1008FAA58, v148, v147);
  sub_1002E6670(v69, v71 + v149);
  Button<>.init<A>(_:role:action:)(&v165, v17, sub_1002E67CC, v71, &type metadata for String, v145);
  v72 = *(_QWORD *)(v70 + 48);
  v73 = swift_retain(v72);
  LOBYTE(v67) = ThemeOptionsViewModel.canCancel.getter(v73);
  swift_release(v72);
  v74 = swift_getKeyPath(&unk_1007183D8);
  v75 = swift_allocObject(&unk_1008FAA80, 17, 7);
  *(_BYTE *)(v75 + 16) = (v67 & 1) == 0;
  v76 = v161;
  v77 = v142;
  v144(v161, v50, v142);
  v78 = (uint64_t *)(v76 + *(int *)(v146 + 36));
  *v78 = v74;
  v78[1] = (uint64_t)sub_1002E8520;
  v78[2] = v75;
  v79 = v77;
  v80 = ((uint64_t (*)(char *, uint64_t))v143)(v50, v77);
  v81 = static Color.primary.getter(v80);
  v82 = swift_getKeyPath(&unk_100718408);
  v83 = v128;
  sub_10000B5E4(v76, v128, &qword_1009D84F0);
  v84 = v130;
  v85 = (uint64_t *)(v83 + *(int *)(v130 + 36));
  *v85 = v82;
  v85[1] = v81;
  v86 = sub_100010960(v76, &qword_1009D84F0);
  v87 = v131;
  static KeyboardShortcut.cancelAction.getter(v86);
  v88 = sub_1002E67F0();
  v89 = v129;
  View.keyboardShortcut(_:)(v87, v84, v88);
  (*(void (**)(char *, uint64_t))(v132 + 8))(v87, v133);
  sub_100010960(v83, &qword_1009D84E0);
  (*(void (**)(char *, char *, uint64_t))(v158 + 32))(v157, v89, v156);
  v90 = String.LocalizationValue.init(stringLiteral:)(1701736260, 0xE400000000000000);
  static Locale.current.getter(v90);
  v91 = v140;
  v92 = v139;
  v155(v140, v30, v139);
  v93 = objc_msgSend(v153, "bundleForClass:", v154);
  v94 = v141;
  v95 = v160;
  v152(v141, v23, v160);
  v96 = String.init(localized:table:bundle:locale:comment:)(v91, 0, 0, v93, v94, "Theme Options save button", 25, 2);
  v98 = v97;
  v151(v23, v95);
  v150(v30, v92);
  v165 = v96;
  v166 = v98;
  v99 = v162;
  v100 = v163;
  sub_10002CD84(v163, v162, type metadata accessor for ThemeOptionsView);
  v101 = swift_allocObject(&unk_1008FAAA8, v148, v147);
  sub_1002E6670(v99, v101 + v149);
  v102 = Button<>.init<A>(_:action:)(&v165, sub_1002E6914, v101, &type metadata for String, v145);
  v103 = static Color.primary.getter(v102);
  v104 = swift_getKeyPath(&unk_100718408);
  v105 = (uint64_t)v134;
  v144((uint64_t)v134, v50, v79);
  v106 = (uint64_t *)(v105 + *(int *)(v135 + 36));
  *v106 = v104;
  v106[1] = v103;
  ((void (*)(char *, uint64_t))v143)(v50, v79);
  v107 = *(_QWORD *)(v100 + 48);
  v108 = swift_retain(v107);
  LOBYTE(v103) = ThemeOptionsViewModel.canSave.getter(v108);
  swift_release(v107);
  v109 = swift_getKeyPath(&unk_1007183D8);
  v110 = swift_allocObject(&unk_1008FAAD0, 17, 7);
  *(_BYTE *)(v110 + 16) = (v103 & 1) == 0;
  v111 = v136;
  sub_10000B5E4(v105, v136, &qword_1009D84D0);
  v112 = (uint64_t *)(v111 + *(int *)(v137 + 36));
  *v112 = v109;
  v112[1] = (uint64_t)sub_1002E8520;
  v112[2] = v110;
  sub_100010960(v105, &qword_1009D84D0);
  v113 = v159;
  sub_100025B3C(v111, v159, &qword_1009D84D8);
  v114 = v161;
  sub_10000B5E4(v164, v161, &qword_1009D84F0);
  v115 = v158;
  v116 = *(void (**)(char *, char *, uint64_t))(v158 + 16);
  v117 = v89;
  v118 = v89;
  v119 = v156;
  v120 = v157;
  v116(v118, v157, v156);
  sub_10000B5E4(v113, v111, &qword_1009D84D8);
  v121 = v138;
  sub_10000B5E4(v114, v138, &qword_1009D84F0);
  v122 = (int *)sub_10004CFD4(&qword_1009D8520);
  v123 = v121 + v122[12];
  *(_QWORD *)v123 = 0;
  *(_BYTE *)(v123 + 8) = 1;
  v116((char *)(v121 + v122[16]), v117, v119);
  sub_10000B5E4(v111, v121 + v122[20], &qword_1009D84D8);
  sub_100010960(v159, &qword_1009D84D8);
  v124 = *(void (**)(char *, uint64_t))(v115 + 8);
  v124(v120, v119);
  sub_100010960(v164, &qword_1009D84F0);
  sub_100010960(v111, &qword_1009D84D8);
  v124(v117, v119);
  return sub_100010960(v114, &qword_1009D84F0);
}

double sub_1002E5E50(uint64_t a1)
{
  char *v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  double result;
  _BYTE v6[9];
  uint64_t v7;

  v1 = (char *)(a1 + *(int *)(type metadata accessor for ThemeOptionsView(0) + 68));
  v2 = *v1;
  v3 = *((_QWORD *)v1 + 1);
  v6[1] = v2;
  v7 = v3;
  v6[0] = 1;
  v4 = sub_10004CFD4(&qword_1009D8450);
  *(_QWORD *)&result = State.wrappedValue.setter(v6, v4).n128_u64[0];
  return result;
}

uint64_t sub_1002E5EC0()
{
  return EnvironmentValues.colorScheme.getter();
}

uint64_t sub_1002E5EE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1002E6C40(a1, a2, a3, a4, (uint64_t (*)(_QWORD))&type metadata accessor for ColorScheme, (uint64_t (*)(char *))&EnvironmentValues.colorScheme.setter);
}

id sub_1002E5F04()
{
  id result;

  result = sub_1002E5F20();
  qword_1009D81F0 = (uint64_t)result;
  return result;
}

id sub_1002E5F20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  id v4;
  Class isa;
  uint64_t v7;

  v0 = type metadata accessor for Locale(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = objc_msgSend(objc_allocWithZone((Class)NSNumberFormatter), "init");
  objc_msgSend(v4, "setNumberStyle:", 1);
  objc_msgSend(v4, "setMinimumFractionDigits:", 2);
  objc_msgSend(v4, "setMaximumFractionDigits:", 2);
  static Locale.current.getter(objc_msgSend(v4, "setUsesGroupingSeparator:", 0));
  isa = Locale._bridgeToObjectiveC()().super.isa;
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  objc_msgSend(v4, "setLocale:", isa);

  return v4;
}

void sub_1002E6028()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  id v4;
  Class isa;
  uint64_t v6;

  v0 = type metadata accessor for Locale(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = objc_msgSend(objc_allocWithZone((Class)NSNumberFormatter), "init");
  objc_msgSend(v4, "setNumberStyle:", 3);
  static Locale.current.getter(objc_msgSend(v4, "setUsesGroupingSeparator:", 0));
  isa = Locale._bridgeToObjectiveC()().super.isa;
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  objc_msgSend(v4, "setLocale:", isa);

  qword_1009D81F8 = (uint64_t)v4;
}

uint64_t sub_1002E610C()
{
  return EnvironmentValues.horizontalSizeClass.getter();
}

uint64_t sub_1002E612C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1002E61B4(a1, a2, a3, a4, (uint64_t *)&unk_1009D8210, (uint64_t (*)(char *))&EnvironmentValues.horizontalSizeClass.setter);
}

uint64_t sub_1002E6140()
{
  return EnvironmentValues.fontResolutionContext.getter();
}

uint64_t sub_1002E6160()
{
  return EnvironmentValues.verticalSizeClass.getter();
}

uint64_t sub_1002E6180()
{
  return EnvironmentValues.verticalSizeClass.getter();
}

uint64_t sub_1002E61A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1002E61B4(a1, a2, a3, a4, (uint64_t *)&unk_1009D8210, (uint64_t (*)(char *))&EnvironmentValues.verticalSizeClass.setter);
}

uint64_t sub_1002E61B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t (*a6)(char *))
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v13;

  v9 = sub_10004CFD4(a5);
  __chkstk_darwin(v9);
  v11 = (char *)&v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000B5E4(a1, (uint64_t)v11, a5);
  return a6(v11);
}

uint64_t sub_1002E6240(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1002E61B4(a1, a2, a3, a4, (uint64_t *)&unk_1009D8210, (uint64_t (*)(char *))&EnvironmentValues.verticalSizeClass.setter);
}

uint64_t sub_1002E6264()
{
  return EnvironmentValues.horizontalSizeClass.getter();
}

uint64_t sub_1002E6284(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1002E61B4(a1, a2, a3, a4, (uint64_t *)&unk_1009D8210, (uint64_t (*)(char *))&EnvironmentValues.horizontalSizeClass.setter);
}

uint64_t sub_1002E62A8()
{
  return EnvironmentValues.layoutDirection.getter();
}

uint64_t sub_1002E62C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1002E6C40(a1, a2, a3, a4, (uint64_t (*)(_QWORD))&type metadata accessor for LayoutDirection, (uint64_t (*)(char *))&EnvironmentValues.layoutDirection.setter);
}

uint64_t sub_1002E62EC@<X0>(uint64_t a1@<X8>)
{
  return sub_1002D8E6C(a1);
}

unint64_t sub_1002E62F4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009D8368;
  if (!qword_1009D8368)
  {
    v1 = sub_100030B74(&qword_1009D8360);
    sub_1002E6378();
    sub_100030B34(&qword_1009D83C8, &qword_1009D83D0, (uint64_t)&protocol conformance descriptor for _OverlayModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009D8368);
  }
  return result;
}

unint64_t sub_1002E6378()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t OpaqueTypeConformance2;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;

  result = qword_1009D8370;
  if (!qword_1009D8370)
  {
    v1 = sub_100030B74(&qword_1009D8378);
    v2 = sub_100030B74(&qword_1009D8380);
    v3 = sub_100030B74(&qword_1009D8388);
    v4 = sub_100030B74(&qword_1009D8390);
    v5 = sub_100030B74(&qword_1009D8398);
    v6 = sub_100030B34((unint64_t *)&unk_1009D83A0, &qword_1009D8398, (uint64_t)&protocol conformance descriptor for VStack<A>);
    v7 = sub_1001F2108();
    v11 = v5;
    v12 = &type metadata for String;
    v13 = v6;
    v14 = v7;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v11, &opaque type descriptor for <<opaque return type of View.navigationBarTitle<A>(_:)>>, 1);
    v11 = v4;
    v12 = (_QWORD *)OpaqueTypeConformance2;
    v9 = swift_getOpaqueTypeConformance2(&v11, &opaque type descriptor for <<opaque return type of View.navigationBarHidden(_:)>>, 1);
    v10 = sub_100030B34(&qword_1009D83B0, &qword_1009D8388, (uint64_t)&protocol conformance descriptor for TupleView<A>);
    v11 = v2;
    v12 = &type metadata for String;
    v13 = v3;
    v14 = v9;
    v15 = v7;
    v16 = v10;
    swift_getOpaqueTypeConformance2(&v11, &opaque type descriptor for <<opaque return type of View.alert<A, B>(_:isPresented:actions:)>>, 1);
    sub_100030B34(&qword_1009D83B8, &qword_1009D83C0, (uint64_t)&protocol conformance descriptor for _ValueActionModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009D8370);
  }
  return result;
}

uint64_t sub_1002E64FC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = EnvironmentValues.accentColor.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1002E6524@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = EnvironmentValues.accentColor.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1002E654C(_QWORD *a1)
{
  uint64_t v1;

  v1 = swift_retain(*a1);
  return EnvironmentValues.accentColor.setter(v1);
}

uint64_t sub_1002E6574(_QWORD *a1)
{
  uint64_t v1;

  v1 = swift_retain(*a1);
  return EnvironmentValues.accentColor.setter(v1);
}

uint64_t sub_1002E659C()
{
  return ThemeOptionsViewModel.fontDownloadAlert.getter();
}

uint64_t sub_1002E65C8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1002D9A2C(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_1002E65D0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009D83D8;
  if (!qword_1009D83D8)
  {
    v1 = sub_100030B74(&qword_1009D8350);
    sub_100030B34((unint64_t *)&unk_1009D83E0, &qword_1009D8348, (uint64_t)&protocol conformance descriptor for NavigationStack<A, B>);
    sub_100030B34(qword_1009D14D0, &qword_1009D83F0, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009D83D8);
  }
  return result;
}

uint64_t sub_1002E6670(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ThemeOptionsView(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1002E66B4()
{
  return sub_1002E7448((uint64_t (*)(uint64_t))sub_1002DA01C);
}

uint64_t sub_1002E66C4()
{
  return sub_1002E8190((uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of ThemeOptionsEventHandling.didTapWaitForWifi());
}

uint64_t sub_1002E66D8@<X0>(char *a1@<X8>)
{
  uint64_t v1;

  return sub_1002DC240(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_1002E66E0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_1002E6704(unsigned __int8 *a1)
{
  uint64_t v1;

  sub_100604618(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1002E6710()
{
  return sub_1002E8190((uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of ThemeOptionsEventHandling.didTapResetTheme());
}

double sub_1002E6724()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ThemeOptionsView(0) - 8) + 80);
  return sub_1002E5E50(v0 + ((v1 + 16) & ~v1));
}

uint64_t sub_1002E6754@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;
  char v3;

  result = EnvironmentValues.lineLimit.getter();
  *(_QWORD *)a1 = result;
  *(_BYTE *)(a1 + 8) = v3 & 1;
  return result;
}

uint64_t sub_1002E6784(uint64_t a1)
{
  return EnvironmentValues.lineLimit.setter(*(_QWORD *)a1, *(unsigned __int8 *)(a1 + 8));
}

uint64_t sub_1002E67B8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1002E67CC()
{
  return sub_1002E8190((uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of ThemeOptionsEventHandling.didTapCancel());
}

uint64_t sub_1002E67D8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

unint64_t sub_1002E67F0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009D84F8;
  if (!qword_1009D84F8)
  {
    v1 = sub_100030B74(&qword_1009D84E0);
    sub_1002E6874();
    sub_100030B34(qword_1009D14D0, &qword_1009D83F0, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009D84F8);
  }
  return result;
}

unint64_t sub_1002E6874()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009D8500;
  if (!qword_1009D8500)
  {
    v1 = sub_100030B74(&qword_1009D84F0);
    sub_100030B34((unint64_t *)&qword_1009F4060, &qword_1009D8460, (uint64_t)&protocol conformance descriptor for Button<A>);
    sub_100030B34(&qword_1009D8510, &qword_1009D8518, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyTransformModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009D8500);
  }
  return result;
}

uint64_t sub_1002E6914()
{
  return sub_1002E8190((uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of ThemeOptionsEventHandling.didTapSave());
}

uint64_t sub_1002E6920()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1002E6930@<X0>(char *a1@<X8>)
{
  uint64_t v1;

  return sub_1002DEFA4(*(_QWORD *)(v1 + 16), a1);
}

void sub_1002E6938(double *a1@<X8>)
{
  *a1 = EnvironmentValues.defaultMinListRowHeight.getter();
}

uint64_t sub_1002E6960(double *a1)
{
  return EnvironmentValues.defaultMinListRowHeight.setter(*a1);
}

uint64_t sub_1002E6984()
{
  return EnvironmentValues.listSectionSpacing.getter();
}

uint64_t sub_1002E69A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1002E61B4(a1, a2, a3, a4, &qword_1009D8580, (uint64_t (*)(char *))&EnvironmentValues.listSectionSpacing.setter);
}

uint64_t sub_1002E69C8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1002E4B30(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_1002E69D0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009D85B8;
  if (!qword_1009D85B8)
  {
    v1 = sub_100030B74(&qword_1009D85B0);
    sub_1002E6A54();
    sub_100030B34((unint64_t *)&unk_1009D8600, &qword_1009D1CD0, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009D85B8);
  }
  return result;
}

unint64_t sub_1002E6A54()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009D85C0;
  if (!qword_1009D85C0)
  {
    v1 = sub_100030B74(&qword_1009D85C8);
    sub_1002E6AD8();
    sub_100030B34(&qword_1009D85F0, &qword_1009D85F8, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009D85C0);
  }
  return result;
}

unint64_t sub_1002E6AD8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009D85D0;
  if (!qword_1009D85D0)
  {
    v1 = sub_100030B74(&qword_1009D85D8);
    sub_100030B34(&qword_1009D85E0, &qword_1009D85E8, (uint64_t)&protocol conformance descriptor for Button<A>);
    sub_100030B34(&qword_1009D8510, &qword_1009D8518, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyTransformModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009D85D0);
  }
  return result;
}

unint64_t sub_1002E6B78()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009D8628;
  if (!qword_1009D8628)
  {
    v1 = sub_100030B74(&qword_1009D8620);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009D8628);
  }
  return result;
}

uint64_t sub_1002E6BDC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1002E6BEC()
{
  return EnvironmentValues.controlSize.getter();
}

uint64_t sub_1002E6C0C()
{
  return EnvironmentValues.controlSize.getter();
}

uint64_t sub_1002E6C2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1002E6C40(a1, a2, a3, a4, (uint64_t (*)(_QWORD))&type metadata accessor for ControlSize, (uint64_t (*)(char *))&EnvironmentValues.controlSize.setter);
}

uint64_t sub_1002E6C40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD), uint64_t (*a6)(char *))
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v13;

  v8 = a5(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v13 - v9;
  (*(void (**)(char *, uint64_t))(v11 + 16))((char *)&v13 - v9, a1);
  return a6(v10);
}

uint64_t sub_1002E6CBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1002E6C40(a1, a2, a3, a4, (uint64_t (*)(_QWORD))&type metadata accessor for ControlSize, (uint64_t (*)(char *))&EnvironmentValues.controlSize.setter);
}

uint64_t sub_1002E6CE0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = EnvironmentValues._accessibilityShowButtonShapes.getter();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1002E6D0C(unsigned __int8 *a1)
{
  return EnvironmentValues._accessibilityShowButtonShapes.setter(*a1);
}

uint64_t sub_1002E6D30@<X0>(uint64_t a1@<X8>)
{
  return sub_1002E1C94(a1);
}

unint64_t sub_1002E6D50()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009D8668;
  if (!qword_1009D8668)
  {
    v1 = sub_100030B74(&qword_1009D8650);
    sub_100030B34(&qword_1009D8660, &qword_1009D8658, (uint64_t)&protocol conformance descriptor for Toggle<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> Section<A, B, C>, v1);
    atomic_store(result, (unint64_t *)&qword_1009D8668);
  }
  return result;
}

uint64_t sub_1002E6DE0@<X0>(char *a1@<X8>)
{
  return sub_1002E1FAC(a1);
}

uint64_t sub_1002E6E00@<X0>(uint64_t a1@<X8>)
{
  return sub_1002E2134(a1);
}

uint64_t sub_1002E6E0C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ThemeOptionsView(0) - 8) + 80);
  return sub_1002E458C(v1 + ((v3 + 32) & ~v3), a1);
}

uint64_t sub_1002E6E50(unsigned __int8 *a1)
{
  return sub_1002E77FC(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&dispatch thunk of ThemeOptionsEventHandling.didToggle(fullJustify:));
}

uint64_t sub_1002E6E60()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ThemeOptionsView(0) - 8) + 80);
  return sub_1002E4638(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), v0 + ((v1 + 32) & ~v1));
}

uint64_t sub_1002E6EA4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ThemeOptionsView(0) - 8) + 80);
  v4 = (_QWORD *)(v1 + ((v3 + 32) & ~v3));
  v5 = v4[3];
  v6 = v4[4];
  sub_10003F198(v4, v5);
  return dispatch thunk of ThemeOptionsEventHandling.didSelectMultipleColumn(_:)(a1, v5, v6);
}

unint64_t sub_1002E6F04()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009D86D0;
  if (!qword_1009D86D0)
  {
    v1 = sub_100030B74(&qword_1009D86C0);
    sub_1002E6F68();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ForEach<A, B, C>, v1);
    atomic_store(result, (unint64_t *)&qword_1009D86D0);
  }
  return result;
}

unint64_t sub_1002E6F68()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009D86D8;
  if (!qword_1009D86D8)
  {
    v1 = sub_100030B74(&qword_1009D86E0);
    sub_1002E6FEC();
    sub_100030B34(&qword_1009D8708, &qword_1009D8710, (uint64_t)&protocol conformance descriptor for _TraitWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009D86D8);
  }
  return result;
}

unint64_t sub_1002E6FEC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009D86E8;
  if (!qword_1009D86E8)
  {
    v1 = sub_100030B74(&qword_1009D86F0);
    sub_100030B34(&qword_1009D86F8, &qword_1009D8700, (uint64_t)&protocol conformance descriptor for _TraitWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009D86E8);
  }
  return result;
}

uint64_t sub_1002E7074(double a1)
{
  return sub_1002E7134((void (*)(uint64_t, uint64_t, double))&dispatch thunk of ThemeOptionsEventHandling.didSlide(lineHeight:), 1, 0, 0, a1);
}

unint64_t sub_1002E7094()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009D8798;
  if (!qword_1009D8798)
  {
    v1 = sub_100030B74(&qword_1009D8780);
    sub_100030B34(&qword_1009D87A0, &qword_1009D8778, (uint64_t)&unk_10071C7D0);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009D8798);
  }
  return result;
}

uint64_t sub_1002E711C(double a1)
{
  return sub_1002E7134((void (*)(uint64_t, uint64_t, double))&dispatch thunk of ThemeOptionsEventHandling.didSlide(letterSpacing:), 0, 1, 0, a1);
}

uint64_t sub_1002E7134(void (*a1)(uint64_t, uint64_t, double), char a2, char a3, char a4, double a5)
{
  uint64_t v5;
  uint64_t v11;

  v11 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ThemeOptionsView(0) - 8) + 80);
  return sub_1002E4498((_QWORD *)(v5 + ((v11 + 16) & ~v11)), a1, a2, a3, a4, a5);
}

uint64_t sub_1002E71B0(double a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ThemeOptionsView(0) - 8) + 80);
  return sub_1002E3FC4((_QWORD *)(v1 + ((v3 + 16) & ~v3)), a1);
}

uint64_t sub_1002E71F0@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for ThemeOptionsView(0);
  return sub_1002E409C(a1);
}

uint64_t sub_1002E7230(double a1)
{
  return sub_1002E7134((void (*)(uint64_t, uint64_t, double))&dispatch thunk of ThemeOptionsEventHandling.didSlide(marginAdjustment:), 0, 0, 1, a1);
}

unint64_t sub_1002E7248()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009D87A8;
  if (!qword_1009D87A8)
  {
    v1 = sub_100030B74(&qword_1009D8768);
    sub_100030B34(&qword_1009D87B0, &qword_1009D8760, (uint64_t)&unk_10071C7D0);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009D87A8);
  }
  return result;
}

uint64_t sub_1002E72D0@<X0>(_BYTE *a1@<X8>)
{
  return sub_1002E72DC((uint64_t (*)(uint64_t))&BookThemeEntity.hasCustomLayout.getter, a1);
}

uint64_t sub_1002E72DC@<X0>(uint64_t (*a1)(uint64_t)@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ThemeOptionsView(0) - 8) + 80);
  return sub_1002E2A0C(v2 + ((v5 + 32) & ~v5), a1, a2);
}

uint64_t sub_1002E7334(unsigned __int8 *a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ThemeOptionsView(0) - 8) + 80);
  return sub_1002E2ABC(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), (_QWORD *)(v1 + ((v3 + 32) & ~v3)));
}

uint64_t sub_1002E7374@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1002E02A8(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56), *(_QWORD *)(v1 + 64), *(char **)(v1 + 72), a1, *(_QWORD *)(v1 + 80));
}

unint64_t sub_1002E73A8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009D87F0;
  if (!qword_1009D87F0)
  {
    v1 = sub_100030B74(&qword_1009D87D8);
    sub_100030B34(&qword_1009D87E8, &qword_1009D87E0, (uint64_t)&protocol conformance descriptor for TupleView<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> Section<A, B, C>, v1);
    atomic_store(result, (unint64_t *)&qword_1009D87F0);
  }
  return result;
}

uint64_t sub_1002E743C()
{
  return sub_1002E7448((uint64_t (*)(uint64_t))sub_1002E11A0);
}

uint64_t sub_1002E7448(uint64_t (*a1)(uint64_t))
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ThemeOptionsView(0) - 8) + 80);
  return a1(v1 + ((v2 + 16) & ~v2));
}

double sub_1002E7484@<D0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_1002E1230(v1[2], v1[3], v1[4], v1[5], v1[6], a1);
}

uint64_t sub_1002E7498@<X0>(_BYTE *a1@<X8>)
{
  return sub_1002E72DC((uint64_t (*)(uint64_t))&BookThemeEntity.isFontBolded.getter, a1);
}

uint64_t sub_1002E74A8()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unsigned int (*v22)(uint64_t, uint64_t, uint64_t);
  uint64_t v23;
  __n128 v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  __n128 v28;
  uint64_t v29;
  uint64_t v31;

  v1 = (int *)type metadata accessor for ThemeOptionsView(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v31 = *(_QWORD *)(v2 + 64);
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  v5 = v0 + v4;
  _s5Books15CurrentPageViewVwxx_0((_QWORD *)(v0 + v4));
  swift_release(*(_QWORD *)(v0 + v4 + 48));
  swift_unknownObjectRelease(*(_QWORD *)(v0 + v4 + 56));
  swift_release(*(_QWORD *)(v0 + v4 + 64));
  v6 = (_QWORD *)(v0 + v4 + v1[8]);
  v7 = sub_10004CFD4((uint64_t *)&unk_1009D8200);
  if (swift_getEnumCaseMultiPayload(v6, v7) == 1)
  {
    v8 = type metadata accessor for ColorScheme(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v6, v8);
  }
  else
  {
    swift_release(*v6);
  }

  v9 = (_QWORD *)(v5 + v1[10]);
  v10 = sub_10004CFD4(&qword_1009D26B8);
  if (swift_getEnumCaseMultiPayload(v9, v10) == 1)
  {
    v11 = type metadata accessor for UserInterfaceSizeClass(0);
    v12 = *(_QWORD *)(v11 - 8);
    if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v12 + 48))(v9, 1, v11))
      (*(void (**)(_QWORD *, uint64_t))(v12 + 8))(v9, v11);
  }
  else
  {
    swift_release(*v9);
  }
  v13 = (_QWORD *)(v5 + v1[11]);
  if (swift_getEnumCaseMultiPayload(v13, v10) == 1)
  {
    v14 = type metadata accessor for UserInterfaceSizeClass(0);
    v15 = *(_QWORD *)(v14 - 8);
    if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
      (*(void (**)(_QWORD *, uint64_t))(v15 + 8))(v13, v14);
  }
  else
  {
    swift_release(*v13);
  }
  v16 = (_QWORD *)(v5 + v1[12]);
  v17 = sub_10004CFD4((uint64_t *)&unk_1009EE650);
  if (swift_getEnumCaseMultiPayload(v16, v17) == 1)
  {
    v18 = type metadata accessor for LayoutDirection(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v16, v18);
  }
  else
  {
    swift_release(*v16);
  }
  v19 = v5 + v1[13];
  v20 = type metadata accessor for AccessibilityTechnologies(0);
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v21 + 48);
  if (!v22(v19, 1, v20))
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v19, v20);
  v23 = sub_10004CFD4(&qword_1009D3A10);
  v24 = swift_release(*(_QWORD *)(v19 + *(int *)(v23 + 40)));
  v25 = v5 + v1[14];
  if (!((unsigned int (*)(uint64_t, uint64_t, uint64_t, __n128))v22)(v25, 1, v20, v24))
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v25, v20);
  v26 = swift_release(*(_QWORD *)(v25 + *(int *)(v23 + 40)));
  v27 = v5 + v1[15];
  if (!((unsigned int (*)(uint64_t, uint64_t, uint64_t, __n128))v22)(v27, 1, v20, v26))
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v27, v20);
  v28 = swift_release(*(_QWORD *)(v27 + *(int *)(v23 + 40)));
  v29 = v5 + v1[16];
  if (!((unsigned int (*)(uint64_t, uint64_t, uint64_t, __n128))v22)(v29, 1, v20, v28))
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v29, v20);
  swift_release(*(_QWORD *)(v29 + *(int *)(v23 + 40)));
  swift_release(*(_QWORD *)(v5 + v1[17] + 8));
  swift_release(*(_QWORD *)(v5 + v1[18] + 8));
  return swift_deallocObject(v0, v4 + v31, v3 | 7);
}

uint64_t sub_1002E77F0(unsigned __int8 *a1)
{
  return sub_1002E77FC(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&dispatch thunk of ThemeOptionsEventHandling.didToggle(isFontBolded:));
}

uint64_t sub_1002E77FC(unsigned __int8 *a1, uint64_t (*a2)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v2;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ThemeOptionsView(0) - 8) + 80);
  v6 = (_QWORD *)(v2 + ((v5 + 32) & ~v5));
  v7 = *a1;
  v8 = v6[3];
  v9 = v6[4];
  sub_10003F198(v6, v8);
  return a2(v7, v8, v9);
}

uint64_t sub_1002E7868()
{
  uint64_t v0;

  return sub_1002E1B40(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1002E7874()
{
  return sub_1002E7448(sub_1002E1BA8);
}

uint64_t sub_1002E7880()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unsigned int (*v22)(uint64_t, uint64_t, uint64_t);
  uint64_t v23;
  __n128 v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  __n128 v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v32;

  v1 = (int *)type metadata accessor for ThemeOptionsView(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v32 = *(_QWORD *)(v2 + 64);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  v5 = v0 + v4;
  _s5Books15CurrentPageViewVwxx_0((_QWORD *)(v0 + v4));
  swift_release(*(_QWORD *)(v0 + v4 + 48));
  swift_unknownObjectRelease(*(_QWORD *)(v0 + v4 + 56));
  swift_release(*(_QWORD *)(v0 + v4 + 64));
  v6 = (_QWORD *)(v0 + v4 + v1[8]);
  v7 = sub_10004CFD4((uint64_t *)&unk_1009D8200);
  if (swift_getEnumCaseMultiPayload(v6, v7) == 1)
  {
    v8 = type metadata accessor for ColorScheme(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v6, v8);
  }
  else
  {
    swift_release(*v6);
  }

  v9 = (_QWORD *)(v5 + v1[10]);
  v10 = sub_10004CFD4(&qword_1009D26B8);
  if (swift_getEnumCaseMultiPayload(v9, v10) == 1)
  {
    v11 = type metadata accessor for UserInterfaceSizeClass(0);
    v12 = *(_QWORD *)(v11 - 8);
    if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v12 + 48))(v9, 1, v11))
      (*(void (**)(_QWORD *, uint64_t))(v12 + 8))(v9, v11);
  }
  else
  {
    swift_release(*v9);
  }
  v13 = (_QWORD *)(v5 + v1[11]);
  if (swift_getEnumCaseMultiPayload(v13, v10) == 1)
  {
    v14 = type metadata accessor for UserInterfaceSizeClass(0);
    v15 = *(_QWORD *)(v14 - 8);
    if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
      (*(void (**)(_QWORD *, uint64_t))(v15 + 8))(v13, v14);
  }
  else
  {
    swift_release(*v13);
  }
  v16 = (_QWORD *)(v5 + v1[12]);
  v17 = sub_10004CFD4((uint64_t *)&unk_1009EE650);
  if (swift_getEnumCaseMultiPayload(v16, v17) == 1)
  {
    v18 = type metadata accessor for LayoutDirection(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v16, v18);
  }
  else
  {
    swift_release(*v16);
  }
  v19 = v5 + v1[13];
  v20 = type metadata accessor for AccessibilityTechnologies(0);
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v21 + 48);
  if (!v22(v19, 1, v20))
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v19, v20);
  v23 = sub_10004CFD4(&qword_1009D3A10);
  v24 = swift_release(*(_QWORD *)(v19 + *(int *)(v23 + 40)));
  v25 = v5 + v1[14];
  if (!((unsigned int (*)(uint64_t, uint64_t, uint64_t, __n128))v22)(v25, 1, v20, v24))
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v25, v20);
  v26 = swift_release(*(_QWORD *)(v25 + *(int *)(v23 + 40)));
  v27 = v5 + v1[15];
  if (!((unsigned int (*)(uint64_t, uint64_t, uint64_t, __n128))v22)(v27, 1, v20, v26))
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v27, v20);
  v28 = swift_release(*(_QWORD *)(v27 + *(int *)(v23 + 40)));
  v29 = v5 + v1[16];
  if (!((unsigned int (*)(uint64_t, uint64_t, uint64_t, __n128))v22)(v29, 1, v20, v28))
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v29, v20);
  v30 = (v32 + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release(*(_QWORD *)(v29 + *(int *)(v23 + 40)));
  swift_release(*(_QWORD *)(v5 + v1[17] + 8));
  swift_release(*(_QWORD *)(v5 + v1[18] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v30 + 8));
  return swift_deallocObject(v0, v30 + 16, v3 | 7);
}

uint64_t sub_1002E7BE0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t *v5;

  v3 = *(_QWORD *)(type metadata accessor for ThemeOptionsView(0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (uint64_t *)(v1 + ((*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8));
  return sub_1002E1408(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), (_BYTE *)(v1 + v4), *v5, v5[1], a1);
}

uint64_t sub_1002E7C38@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1002E1864(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

uint64_t sub_1002E7C40()
{
  uint64_t v0;

  return sub_1002E18CC(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1002E7C48@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;
  char v3;

  result = EnvironmentValues.lineLimit.getter();
  *(_QWORD *)a1 = result;
  *(_BYTE *)(a1 + 8) = v3 & 1;
  return result;
}

uint64_t sub_1002E7C78(uint64_t a1)
{
  return EnvironmentValues.lineLimit.setter(*(_QWORD *)a1, *(unsigned __int8 *)(a1 + 8));
}

uint64_t sub_1002E7CAC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = *(_QWORD *)(a1 + 24);
  v3 = *(_QWORD *)(a1 + 32);
  v4 = *(_QWORD *)(a1 + 56);
  v5 = *(_QWORD *)(a1 + 64);
  v6 = *(_QWORD *)(a1 + 72);
  v7 = *(_QWORD *)(a1 + 80);
  sub_1001F596C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  swift_retain(v7);
  swift_bridgeObjectRetain(v2);
  swift_retain(v3);
  swift_retain(v4);
  swift_retain(v5);
  swift_retain(v6);
  return a1;
}

uint64_t sub_1002E7D30(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = *(_QWORD *)(a1 + 24);
  v3 = *(_QWORD *)(a1 + 32);
  v4 = *(_QWORD *)(a1 + 56);
  v5 = *(_QWORD *)(a1 + 64);
  v6 = *(_QWORD *)(a1 + 72);
  v7 = *(_QWORD *)(a1 + 80);
  sub_1001F5B28(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  swift_release(v6);
  swift_release(v4);
  swift_release(v3);
  swift_bridgeObjectRelease(v2);
  swift_release(v5);
  swift_release(v7);
  return a1;
}

uint64_t sub_1002E7DB4()
{
  return EnvironmentValues.fontResolutionContext.getter();
}

unint64_t sub_1002E7DD4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009D88E8;
  if (!qword_1009D88E8)
  {
    v1 = sub_100030B74(&qword_1009D88C8);
    sub_1002E7E58();
    sub_100030B34(&qword_1009D8158, &qword_1009D88E0, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009D88E8);
  }
  return result;
}

unint64_t sub_1002E7E58()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009D88F0;
  if (!qword_1009D88F0)
  {
    v1 = sub_100030B74(&qword_1009D88C0);
    sub_100030B34(&qword_1009D88F8, (uint64_t *)&unk_1009D8900, (uint64_t)&protocol conformance descriptor for HStack<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009D88F0);
  }
  return result;
}

unint64_t sub_1002E7EDC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009D8968;
  if (!qword_1009D8968)
  {
    v1 = sub_100030B74(&qword_1009D8948);
    sub_1002E7F60();
    sub_100030B34((unint64_t *)&qword_1009D8998, &qword_1009D8960, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009D8968);
  }
  return result;
}

unint64_t sub_1002E7F60()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009D8970;
  if (!qword_1009D8970)
  {
    v1 = sub_100030B74(&qword_1009D8940);
    sub_1001F5558(&qword_1009D8978, &qword_1009D8938, (void (*)(void))sub_1002E8004);
    sub_100030B34(qword_1009D14D0, &qword_1009D83F0, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009D8970);
  }
  return result;
}

uint64_t sub_1002E8004()
{
  return sub_1001F5558(&qword_1009D8980, &qword_1009D8930, (void (*)(void))sub_1002E8028);
}

unint64_t sub_1002E8028()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009D8988;
  if (!qword_1009D8988)
  {
    v1 = sub_100030B74(&qword_1009D8928);
    sub_100030B34(&qword_1009D8990, &qword_1009D8920, (uint64_t)&protocol conformance descriptor for VStack<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009D8988);
  }
  return result;
}

uint64_t sub_1002E80AC(uint64_t result)
{
  *(_BYTE *)(result + 153) = 1;
  return result;
}

unint64_t sub_1002E80B8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009D8A00;
  if (!qword_1009D8A00)
  {
    v1 = sub_100030B74(&qword_1009D89F0);
    sub_100030B34(&qword_1009D8A08, &qword_1009D8A10, (uint64_t)&protocol conformance descriptor for HStack<A>);
    sub_100030B34(&qword_1009D8A18, &qword_1009D8A20, (uint64_t)&protocol conformance descriptor for HStack<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009D8A00);
  }
  return result;
}

uint64_t sub_1002E815C(uint64_t result)
{
  *(_BYTE *)(result + 152) = 1;
  return result;
}

uint64_t sub_1002E8168(uint64_t result)
{
  *(_BYTE *)(result + 153) = 0;
  return result;
}

uint64_t sub_1002E8170(uint64_t result)
{
  *(_BYTE *)(result + 152) = 0;
  return result;
}

uint64_t sub_1002E817C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1002E8190(uint64_t (*a1)(uint64_t, uint64_t))
{
  uint64_t v1;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ThemeOptionsView(0) - 8) + 80);
  v4 = (_QWORD *)(v1 + ((v3 + 16) & ~v3));
  v5 = v4[3];
  v6 = v4[4];
  sub_10003F198(v4, v5);
  return a1(v5, v6);
}

void sub_1002E81EC(uint64_t *a1@<X8>)
{
  uint64_t v1;

  sub_1002DD3A4(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_1002E81F4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

ValueMetadata *type metadata accessor for ThemeDisclosureChevronView()
{
  return &type metadata for ThemeDisclosureChevronView;
}

uint64_t sub_1002E8220()
{
  _QWORD v1[2];

  v1[0] = sub_100030B74(&qword_1009D8350);
  v1[1] = sub_1002E65D0();
  return swift_getOpaqueTypeConformance2(v1, &opaque type descriptor for <<opaque return type of View.alert(isPresented:content:)>>, 1);
}

uint64_t sub_1002E826C(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_10086AB58, 1);
}

uint64_t _s5Books26ThemeDisclosureChevronViewV9DirectionOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1002E82C8 + 4 * byte_100718125[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1002E82FC + 4 * byte_100718120[v4]))();
}

uint64_t sub_1002E82FC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1002E8304(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1002E830CLL);
  return result;
}

uint64_t sub_1002E8318(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1002E8320);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1002E8324(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1002E832C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ThemeDisclosureChevronView.Direction()
{
  return &type metadata for ThemeDisclosureChevronView.Direction;
}

unint64_t sub_1002E834C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009D8A90;
  if (!qword_1009D8A90)
  {
    v1 = sub_100030B74(&qword_1009D8A88);
    sub_1002E83D0();
    sub_100030B34((unint64_t *)&unk_1009D8AB0, &qword_1009DE690, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009D8A90);
  }
  return result;
}

unint64_t sub_1002E83D0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009D8A98;
  if (!qword_1009D8A98)
  {
    v1 = sub_100030B74(&qword_1009D8A80);
    sub_1002E8454();
    sub_100030B34(qword_1009D14D0, &qword_1009D83F0, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009D8A98);
  }
  return result;
}

unint64_t sub_1002E8454()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009D8AA0;
  if (!qword_1009D8AA0)
  {
    v1 = sub_100030B74((uint64_t *)&unk_1009F41C0);
    sub_100030B34(&qword_1009D3938, &qword_1009D38F8, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009D8AA0);
  }
  return result;
}

unint64_t sub_1002E84DC()
{
  unint64_t result;

  result = qword_1009D8AC0;
  if (!qword_1009D8AC0)
  {
    result = swift_getWitnessTable(&unk_1007186B8, &type metadata for ThemeDisclosureChevronView.Direction);
    atomic_store(result, (unint64_t *)&qword_1009D8AC0);
  }
  return result;
}

char *sub_1002E8524(double a1, double a2, double a3, double a4)
{
  char *v4;
  uint64_t v9;
  void *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  void *v15;
  char *v16;
  void *v17;
  void *v18;
  id v19;
  objc_super v21;

  v9 = OBJC_IVAR____TtC5Books15BuyButtonUIView_button;
  v10 = (void *)objc_opt_self(UIButton);
  v11 = v4;
  *(_QWORD *)&v4[v9] = objc_msgSend(v10, "buttonWithType:", 1);
  v12 = OBJC_IVAR____TtC5Books15BuyButtonUIView_radialProgress;
  *(_QWORD *)&v11[v12] = objc_msgSend(objc_allocWithZone((Class)IMRadialProgressButton), "init");
  v13 = OBJC_IVAR____TtC5Books15BuyButtonUIView_spinner;
  *(_QWORD *)&v11[v13] = objc_msgSend(objc_allocWithZone((Class)UIActivityIndicatorView), "initWithActivityIndicatorStyle:", 100);
  *(_QWORD *)&v11[OBJC_IVAR____TtC5Books15BuyButtonUIView_buttonCornerRadius] = 0;
  *(_QWORD *)&v11[OBJC_IVAR____TtC5Books15BuyButtonUIView_buttonFrameWidth] = 0;
  *(_OWORD *)&v11[OBJC_IVAR____TtC5Books15BuyButtonUIView_buttonAdditionalPadding] = xmmword_1007186E0;

  v21.receiver = v11;
  v21.super_class = (Class)type metadata accessor for BuyButtonUIView();
  v14 = (char *)objc_msgSendSuper2(&v21, "initWithFrame:", a1, a2, a3, a4);
  v15 = *(void **)&v14[OBJC_IVAR____TtC5Books15BuyButtonUIView_button];
  v16 = v14;
  objc_msgSend(v15, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v17 = *(void **)&v16[OBJC_IVAR____TtC5Books15BuyButtonUIView_radialProgress];
  objc_msgSend(v17, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v18 = *(void **)&v16[OBJC_IVAR____TtC5Books15BuyButtonUIView_spinner];
  objc_msgSend(v18, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v16, "addSubview:", v15);
  objc_msgSend(v16, "addSubview:", v17);
  objc_msgSend(v16, "addSubview:", v18);
  v19 = v17;
  objc_msgSend(v19, "setShowImages:", 0);

  return v16;
}

id sub_1002E8748()
{
  char *v0;
  double v1;
  CGFloat v2;
  double v3;
  CGFloat v4;
  double v5;
  CGFloat v6;
  double v7;
  CGFloat v8;
  void *v9;
  double Center;
  double v11;
  double v12;
  double Width;
  uint64_t v14;
  double Height;
  double v16;
  void *v17;
  double v18;
  objc_super v20;
  CGRect v21;
  CGRect v22;

  v20.receiver = v0;
  v20.super_class = (Class)type metadata accessor for BuyButtonUIView();
  objc_msgSendSuper2(&v20, "layoutSubviews");
  objc_msgSend(v0, "bounds");
  v2 = v1;
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v9 = *(void **)&v0[OBJC_IVAR____TtC5Books15BuyButtonUIView_button];
  objc_msgSend(v9, "frameForAlignmentRect:");
  Center = CGRectGetCenter(objc_msgSend(v9, "setFrame:"));
  v12 = v11;
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC5Books15BuyButtonUIView_spinner], "setFrame:", CGRectMakeWithCenterAndSize(objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC5Books15BuyButtonUIView_spinner], "intrinsicContentSize"), Center, v11));
  v21.origin.x = v2;
  v21.origin.y = v4;
  v21.size.width = v6;
  v21.size.height = v8;
  Width = CGRectGetWidth(v21);
  v22.origin.x = v2;
  v22.origin.y = v4;
  v22.size.width = v6;
  v22.size.height = v8;
  Height = CGRectGetHeight(v22);
  if (Height >= Width)
    v16 = Width;
  else
    v16 = Height;
  v17 = *(void **)&v0[OBJC_IVAR____TtC5Books15BuyButtonUIView_radialProgress];
  objc_msgSend(v17, "setFrame:", CGRectMakeWithCenterAndSize(v14, Center, v12));
  objc_msgSend(v17, "trackThickness");
  return objc_msgSend(v17, "setTrackDiameter:", v16 - (v18 + v18));
}

id sub_1002E8A08()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BuyButtonUIView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for BuyButtonUIView()
{
  return objc_opt_self(_TtC5Books15BuyButtonUIView);
}

void sub_1002E8AA0()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = OBJC_IVAR____TtC5Books15BuyButtonUIView_button;
  *(_QWORD *)&v0[v1] = objc_msgSend((id)objc_opt_self(UIButton), "buttonWithType:", 1);
  v2 = OBJC_IVAR____TtC5Books15BuyButtonUIView_radialProgress;
  *(_QWORD *)&v0[v2] = objc_msgSend(objc_allocWithZone((Class)IMRadialProgressButton), "init");
  v3 = OBJC_IVAR____TtC5Books15BuyButtonUIView_spinner;
  *(_QWORD *)&v0[v3] = objc_msgSend(objc_allocWithZone((Class)UIActivityIndicatorView), "initWithActivityIndicatorStyle:", 100);
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Books15BuyButtonUIView_buttonCornerRadius] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Books15BuyButtonUIView_buttonFrameWidth] = 0;
  *(_OWORD *)&v0[OBJC_IVAR____TtC5Books15BuyButtonUIView_buttonAdditionalPadding] = xmmword_1007186E0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000001007B93A0, "Books/BuyButtonUIView.swift", 27, 2, 39, 0);
  __break(1u);
}

uint64_t sub_1002E8BA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v0 = type metadata accessor for Access(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for Domain(0);
  __chkstk_darwin(v4);
  v6 = (char *)v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD))(v7 + 104))(v6, enum case for Domain.standard(_:));
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for Access.public(_:), v0);
  v10[0] = 0;
  v10[1] = 0xE000000000000000;
  v8 = sub_10004CFD4(&qword_1009D8B38);
  swift_allocObject(v8, *(unsigned int *)(v8 + 48), *(unsigned __int16 *)(v8 + 52));
  result = Setting.init(_:defaultValue:domain:access:)(0xD00000000000001CLL, 0x80000001007BD7A0, v10, v6, v3);
  qword_100A1E490 = result;
  return result;
}

uint64_t sub_1002E8CC8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  _BYTE v10[15];
  char v11;

  v0 = type metadata accessor for Access(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = &v10[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = type metadata accessor for Domain(0);
  __chkstk_darwin(v4);
  v6 = &v10[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(_BYTE *, _QWORD))(v7 + 104))(v6, enum case for Domain.standard(_:));
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for Access.public(_:), v0);
  v11 = 0;
  v8 = sub_10004CFD4(&qword_1009D8B30);
  swift_allocObject(v8, *(unsigned int *)(v8 + 48), *(unsigned __int16 *)(v8 + 52));
  result = Setting.init(_:defaultValue:domain:access:)(0xD000000000000026, 0x80000001007BD770, &v11, v6, v3);
  qword_100A1E498 = result;
  return result;
}

uint64_t sub_1002E8DE4(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10001247C(&qword_1009D8B50, (uint64_t)&protocol conformance descriptor for Environment);
  return static RawRepresentable<>.dataType.getter(a1, v2, &protocol witness table for String);
}

uint64_t sub_1002E8E34(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10001247C(&qword_1009D8B50, (uint64_t)&protocol conformance descriptor for Environment);
  return static RawRepresentable<>.convert(from:)(a1, a2, v4, &protocol witness table for String);
}

ValueMetadata *type metadata accessor for Settings.Environment()
{
  return &type metadata for Settings.Environment;
}

ValueMetadata *type metadata accessor for Settings.EnvironmentOverride()
{
  return &type metadata for Settings.EnvironmentOverride;
}

ValueMetadata *type metadata accessor for Settings.UseV2AndMetadataEndpoint()
{
  return &type metadata for Settings.UseV2AndMetadataEndpoint;
}

ValueMetadata *type metadata accessor for Settings.Configuration()
{
  return &type metadata for Settings.Configuration;
}

void sub_1002E8ECC(char *a1)
{
  sub_10067122C(*a1);
}

void sub_1002E8ED8()
{
  char *v0;

  sub_100671680(*v0);
}

void sub_1002E8EE0(uint64_t a1)
{
  char *v1;

  sub_100671F14(a1, *v1);
}

void sub_1002E8EE8(uint64_t a1)
{
  char *v1;

  sub_1006720BC(a1, *v1);
}

unint64_t sub_1002E8EF0@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  Swift::OpaquePointer v3;
  unint64_t result;

  v3._rawValue = &off_1008F0130;
  result = sub_1002E9274(*a1, v3);
  *a2 = result;
  return result;
}

void sub_1002E8F24(_QWORD *a1@<X8>)
{
  *a1 = &off_1008EFC18;
}

uint64_t sub_1002E8F34(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100007660();
  return static RawRepresentable<>.dataType.getter(a1, v2, &protocol witness table for String);
}

uint64_t sub_1002E8F74(uint64_t a1, uint64_t a2)
{
  unint64_t v4;

  v4 = sub_100007660();
  return static RawRepresentable<>.convert(from:)(a1, a2, v4, &protocol witness table for String);
}

void sub_1002E8FBC(char *a1)
{
  sub_100671424(*a1);
}

void sub_1002E8FC8()
{
  char *v0;

  sub_100671788(*v0);
}

void sub_1002E8FD0()
{
  __asm { BR              X10 }
}

uint64_t sub_1002E9018(uint64_t a1)
{
  String.hash(into:)(a1, 0xD000000000000013, 0x80000001007B1E00);
  return swift_bridgeObjectRelease(0x80000001007B1E00);
}

void sub_1002E9070(uint64_t a1)
{
  char *v1;

  sub_100671FF8(a1, *v1);
}

unint64_t sub_1002E9078@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_1002E922C(*a1);
  *a2 = result;
  return result;
}

void sub_1002E90A4(_QWORD *a1@<X8>)
{
  *a1 = &off_1008EFBF0;
}

uint64_t sub_1002E90B4(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10000701C();
  return static RawRepresentable<>.dataType.getter(a1, v2, &protocol witness table for String);
}

uint64_t sub_1002E90F4(uint64_t a1, uint64_t a2)
{
  unint64_t v4;

  v4 = sub_10000701C();
  return static RawRepresentable<>.convert(from:)(a1, a2, v4, &protocol witness table for String);
}

void sub_1002E913C(char *a1)
{
  sub_10067103C(*a1);
}

void sub_1002E9148()
{
  char *v0;

  sub_100671850(*v0);
}

void sub_1002E9150(uint64_t a1)
{
  char *v1;

  sub_100671E30(a1, *v1);
}

void sub_1002E9158(uint64_t a1)
{
  char *v1;

  sub_1006721C0(a1, *v1);
}

unint64_t sub_1002E9160@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  Swift::OpaquePointer v3;
  unint64_t result;

  v3._rawValue = &off_1008F0260;
  result = sub_1002E9274(*a1, v3);
  *a2 = result;
  return result;
}

void sub_1002E9194(_QWORD *a1@<X8>)
{
  *a1 = &off_1008EFC40;
}

uint64_t sub_1002E91A4(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10006CAE4();
  return static RawRepresentable<>.dataType.getter(a1, v2, &protocol witness table for String);
}

uint64_t sub_1002E91E4(uint64_t a1, uint64_t a2)
{
  unint64_t v4;

  v4 = sub_10006CAE4();
  return static RawRepresentable<>.convert(from:)(a1, a2, v4, &protocol witness table for String);
}

unint64_t sub_1002E922C(Swift::String string)
{
  void *object;
  Swift::String v2;
  unint64_t v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1008F01E0, v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 4)
    return 4;
  else
    return v3;
}

unint64_t sub_1002E9274(Swift::String string, Swift::OpaquePointer cases)
{
  void *object;
  Swift::String v3;
  unint64_t v5;

  object = string._object;
  v3._countAndFlagsBits = string._countAndFlagsBits;
  v3._object = object;
  v5 = _findStringSwitchCase(cases:string:)(cases, v3);
  swift_bridgeObjectRelease(object);
  if (v5 >= 6)
    return 6;
  else
    return v5;
}

uint64_t sub_1002E92B8()
{
  return sub_10029F8CC(&qword_1009D8B98, &qword_1009D8BA0);
}

uint64_t sub_1002E92DC()
{
  return sub_10029F8CC(&qword_1009D8BB0, &qword_1009D8BB8);
}

uint64_t sub_1002E9300()
{
  return sub_10029F8CC(&qword_1009D8BC8, &qword_1009D8BD0);
}

uint64_t property wrapper backing initializer of ToolbarNavigationProvider.currentTopViewController(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = a1;
  v1 = sub_10004CFD4(&qword_1009D8BF0);
  return Published.init(initialValue:)(&v3, v1);
}

uint64_t sub_1002E936C()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_100719010);
  v2 = swift_getKeyPath(&unk_100719038);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(KeyPath);
  swift_release(v2);
  return v4;
}

uint64_t property wrapper backing initializer of ToolbarNavigationProvider.toolbarItems(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = a1;
  v1 = sub_10004CFD4(&qword_1009D8BF8);
  return Published.init(initialValue:)(&v3, v1);
}

uint64_t sub_1002E9420()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_100718FC8);
  v2 = swift_getKeyPath(&unk_100718FF0);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(KeyPath);
  swift_release(v2);
  return v4;
}

void _s5Books25ToolbarNavigationProviderC20navigationController_8willShowySo012UINavigationF0C_So06UIViewF0CtF_0(void *a1, void *a2)
{
  void *v2;
  uint64_t KeyPath;
  uint64_t v6;
  id v7;
  char *v8;
  void *v9;
  id v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  id v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD v28[3];
  _QWORD v29[3];

  KeyPath = swift_getKeyPath(&unk_100719010);
  v6 = swift_getKeyPath(&unk_100719038);
  v29[0] = a2;
  v7 = a2;
  v8 = v2;
  static Published.subscript.setter(v29, v8, KeyPath, v6);
  v9 = *(void **)&v8[OBJC_IVAR___BKToolbarNavigationProvider_currentNavigationController];
  *(_QWORD *)&v8[OBJC_IVAR___BKToolbarNavigationProvider_currentNavigationController] = a1;
  v10 = a1;

  v11 = &v8[OBJC_IVAR___BKToolbarNavigationProvider_observers];
  swift_beginAccess(&v8[OBJC_IVAR___BKToolbarNavigationProvider_observers], v29, 1, 0);
  v12 = *(_QWORD *)v11;
  *(_QWORD *)v11 = _swiftEmptyArrayStorage;
  swift_bridgeObjectRelease(v12);
  sub_1002E9850(v7);
  v28[0] = v10;
  v13 = swift_getKeyPath(&unk_100719080);
  v14 = swift_allocObject(&unk_1008FB3E8, 24, 7);
  swift_unknownObjectWeakInit(v14 + 16);
  v15 = swift_allocObject(&unk_1008FB550, 32, 7);
  *(_QWORD *)(v15 + 16) = v10;
  *(_QWORD *)(v15 + 24) = v14;
  v16 = v10;
  v17 = _KeyValueCodingAndObserving.observe<A>(_:options:changeHandler:)(v13, 5, sub_1002EB8A8, v15, &protocol witness table for NSObject);
  swift_release(v15);
  swift_release(v13);
  swift_beginAccess(v11, v28, 33, 0);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v18);
  v20 = *(_QWORD *)((*(_QWORD *)v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v19 = *(_QWORD *)((*(_QWORD *)v11 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v20 >= v19 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v19 > 1, v20 + 1, 1);
  v21 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v20, v17);
  specialized Array._endMutation()(v21);
  swift_endAccess(v28);
  v22 = objc_msgSend(v7, "contentScrollView", v28[0]);
  if (v22)
  {
    v23 = v22;
    v24 = *(_QWORD *)&v8[OBJC_IVAR___BKToolbarNavigationProvider_scrollOffsetInsetPublisher];
    swift_retain(v24);
    objc_msgSend(v23, "contentOffset");
    v26 = v25;
    objc_msgSend(v23, "adjustedContentInset");
    v28[0] = v26;
    v28[1] = v27;
    PassthroughSubject.send(_:)(v28);

    swift_release(v24);
  }
}

double sub_1002E96E4(int a1, int a2, id a3, uint64_t a4)
{
  uint64_t v5;
  id v6;
  unsigned int v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  id v13;
  uint64_t Strong;
  double result;
  void *v16;
  uint64_t v17;
  char v18;
  _BYTE v19[24];

  v5 = a4 + 16;
  v6 = objc_msgSend(a3, "bc_isPresentingCardStack");
  v7 = v6;
  v8 = static os_log_type_t.default.getter(v6);
  sub_100009E04(0, (unint64_t *)&qword_1009CEEB0, OS_os_log_ptr);
  v9 = (void *)static OS_os_log.default.getter();
  v10 = sub_10004CFD4((uint64_t *)&unk_1009D1970);
  v11 = swift_allocObject(v10, 112, 7);
  *(_OWORD *)(v11 + 16) = xmmword_10070FC00;
  *(_QWORD *)(v11 + 56) = sub_100009E04(0, &qword_1009D8D78, UINavigationController_ptr);
  v12 = sub_1002EB8B0();
  *(_QWORD *)(v11 + 32) = a3;
  *(_QWORD *)(v11 + 96) = &type metadata for Int;
  *(_QWORD *)(v11 + 104) = &protocol witness table for Int;
  *(_QWORD *)(v11 + 64) = v12;
  *(_QWORD *)(v11 + 72) = v7;
  v13 = a3;
  os_log(_:dso:log:_:_:)(v8, &_mh_execute_header, v9, "bc_isPresentingCardStack for %@ is %d", 37, 2, v11);

  swift_bridgeObjectRelease(v11);
  swift_beginAccess(v5, v19, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v5);
  if (Strong)
  {
    v16 = (void *)Strong;
    v17 = *(_QWORD *)(Strong + OBJC_IVAR___BKToolbarNavigationProvider_isPresentingCardsPublisher);
    swift_retain(v17);

    v18 = v7;
    PassthroughSubject.send(_:)(&v18);
    *(_QWORD *)&result = swift_release(v17).n128_u64[0];
  }
  return result;
}

void sub_1002E9850(void *a1)
{
  char *v1;
  char *v2;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  void *v43;
  uint64_t v44;
  unint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  unint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  id v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  id v60;
  void *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  id v65;
  void *v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  id v70;
  void *v71;
  uint64_t v72;
  unint64_t v73;
  id v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  unint64_t v78;
  uint64_t v79;
  unint64_t v80;
  unint64_t v81;
  uint64_t v82;
  unint64_t v83;
  unint64_t v84;
  uint64_t v85;
  uint64_t v86;
  void *v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  id v91;
  char *v92;
  id v93;
  void *v94;
  uint64_t v95;
  uint64_t v96;
  void *v97;
  void *v98;
  uint64_t v99;
  char v100;

  v2 = v1;
  v99 = (uint64_t)a1;
  KeyPath = swift_getKeyPath(&unk_100718CC8);
  v5 = swift_allocObject(&unk_1008FB3E8, 24, 7);
  swift_unknownObjectWeakInit(v5 + 16);
  v6 = swift_allocObject(&unk_1008FB410, 32, 7);
  *(_QWORD *)(v6 + 16) = v5;
  *(_QWORD *)(v6 + 24) = a1;
  v7 = a1;
  v8 = _KeyValueCodingAndObserving.observe<A>(_:options:changeHandler:)(KeyPath, 5, sub_1002EB414, v6, &protocol witness table for NSObject);
  swift_release(v6);
  swift_release(KeyPath);
  v9 = (uint64_t *)&v2[OBJC_IVAR___BKToolbarNavigationProvider_observers];
  swift_beginAccess(&v2[OBJC_IVAR___BKToolbarNavigationProvider_observers], &v99, 33, 0);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v10);
  v12 = *(_QWORD *)((*v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v11 = *(_QWORD *)((*v9 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v12 >= v11 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v11 > 1, v12 + 1, 1);
  v13 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v12, v8);
  specialized Array._endMutation()(v13);
  swift_endAccess(&v99);
  v99 = (uint64_t)v7;
  v14 = swift_getKeyPath(&unk_100718D20);
  v15 = swift_allocObject(&unk_1008FB3E8, 24, 7);
  swift_unknownObjectWeakInit(v15 + 16);
  v16 = swift_allocObject(&unk_1008FB438, 32, 7);
  *(_QWORD *)(v16 + 16) = v15;
  *(_QWORD *)(v16 + 24) = v7;
  v17 = v7;
  v18 = _KeyValueCodingAndObserving.observe<A>(_:options:changeHandler:)(v14, 5, sub_1002EB908, v16, &protocol witness table for NSObject);
  swift_release(v16);
  swift_release(v14);
  swift_beginAccess(v9, &v99, 33, 0);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v19);
  v21 = *(_QWORD *)((*v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v20 = *(_QWORD *)((*v9 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v21 >= v20 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v20 > 1, v21 + 1, 1);
  v22 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v21, v18);
  specialized Array._endMutation()(v22);
  swift_endAccess(&v99);
  v99 = (uint64_t)v17;
  v23 = swift_getKeyPath(&unk_100718D88);
  v24 = swift_allocObject(&unk_1008FB3E8, 24, 7);
  swift_unknownObjectWeakInit(v24 + 16);
  v25 = _KeyValueCodingAndObserving.observe<A>(_:options:changeHandler:)(v23, 5, sub_1002EB4D8, v24, &protocol witness table for NSObject);
  swift_release(v24);
  swift_release(v23);
  swift_beginAccess(v9, &v99, 33, 0);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v26);
  v28 = *(_QWORD *)((*v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v27 = *(_QWORD *)((*v9 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v28 >= v27 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v27 > 1, v28 + 1, 1);
  v29 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v28, v25);
  specialized Array._endMutation()(v29);
  swift_endAccess(&v99);
  v30 = objc_msgSend(v17, "navigationItem");
  v31 = objc_opt_self(BSUINavigationItem);
  v32 = swift_dynamicCastObjCClass(v30, v31);
  v98 = v17;
  if (v32)
  {
    v33 = v32;
    v99 = v32;
    v34 = swift_getKeyPath(&unk_100718F58);
    v35 = swift_allocObject(&unk_1008FB3E8, 24, 7);
    swift_unknownObjectWeakInit(v35 + 16);
    v36 = swift_allocObject(&unk_1008FB500, 32, 7);
    *(_QWORD *)(v36 + 16) = v35;
    *(_QWORD *)(v36 + 24) = v33;
    v37 = v30;
    v38 = (char *)_KeyValueCodingAndObserving.observe<A>(_:options:changeHandler:)(v34, 5, sub_1002EB674, v36, &protocol witness table for NSObject);
    swift_release(v36);
    swift_release(v34);
    v99 = v33;
    v39 = swift_getKeyPath(&unk_100718FA0);
    v40 = swift_allocObject(&unk_1008FB3E8, 24, 7);
    swift_unknownObjectWeakInit(v40 + 16);
    v41 = swift_allocObject(&unk_1008FB528, 32, 7);
    *(_QWORD *)(v41 + 16) = v40;
    *(_QWORD *)(v41 + 24) = v33;
    v42 = v37;
    v43 = (void *)_KeyValueCodingAndObserving.observe<A>(_:options:changeHandler:)(v39, 5, sub_1002EB90C, v41, &protocol witness table for NSObject);
    swift_release(v41);
    swift_release(v39);
    swift_beginAccess(v9, &v99, 33, 0);
    v44 = *v9;
    if ((unint64_t)*v9 >> 62)
    {
      if (v44 < 0)
        v95 = *v9;
      else
        v95 = v44 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(*v9);
      v46 = (char *)_CocoaArrayWrapper.endIndex.getter(v95);
      swift_bridgeObjectRelease(v44);
      if (!__OFADD__(v46, 2))
      {
LABEL_10:
        v47 = sub_10046C548();
        specialized Array._endMutation()(v47);
        v46 = v38;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v46);
        v38 = *(char **)((*v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v45 = *(_QWORD *)((*v9 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if ((unint64_t)v38 < v45 >> 1)
        {
LABEL_11:
          v48 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v38, v46);
          specialized Array._endMutation()(v48);
          v49 = v43;
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v49);
          v51 = *(_QWORD *)((*v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
          v50 = *(_QWORD *)((*v9 & 0xFFFFFFFFFFFFFF8) + 0x18);
          if (v51 >= v50 >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v50 > 1, v51 + 1, 1);
          v52 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v51, v49);
          specialized Array._endMutation()(v52);
          swift_endAccess(&v99);
          goto LABEL_24;
        }
LABEL_38:
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v45 > 1, v38 + 1, 1);
        goto LABEL_11;
      }
    }
    else
    {
      v45 = v44 & 0xFFFFFFFFFFFFF8;
      v46 = *(char **)((v44 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (!__OFADD__(v46, 2))
        goto LABEL_10;
    }
    __break(1u);
    goto LABEL_38;
  }

  v99 = (uint64_t)v17;
  v53 = swift_getKeyPath(&unk_100718DE8);
  v54 = swift_allocObject(&unk_1008FB3E8, 24, 7);
  swift_unknownObjectWeakInit(v54 + 16);
  v55 = swift_allocObject(&unk_1008FB460, 32, 7);
  *(_QWORD *)(v55 + 16) = v54;
  *(_QWORD *)(v55 + 24) = v17;
  v56 = v17;
  v97 = (void *)_KeyValueCodingAndObserving.observe<A>(_:options:changeHandler:)(v53, 5, sub_1002EB908, v55, &protocol witness table for NSObject);
  swift_release(v55);
  swift_release(v53);
  v99 = (uint64_t)v56;
  v57 = swift_getKeyPath(&unk_100718E48);
  v58 = swift_allocObject(&unk_1008FB3E8, 24, 7);
  swift_unknownObjectWeakInit(v58 + 16);
  v59 = swift_allocObject(&unk_1008FB488, 32, 7);
  *(_QWORD *)(v59 + 16) = v58;
  *(_QWORD *)(v59 + 24) = v56;
  v60 = v56;
  v61 = (void *)_KeyValueCodingAndObserving.observe<A>(_:options:changeHandler:)(v57, 5, sub_1002EB908, v59, &protocol witness table for NSObject);
  swift_release(v59);
  swift_release(v57);
  v99 = (uint64_t)v60;
  v62 = swift_getKeyPath(&unk_100718EA8);
  v63 = swift_allocObject(&unk_1008FB3E8, 24, 7);
  swift_unknownObjectWeakInit(v63 + 16);
  v64 = swift_allocObject(&unk_1008FB4B0, 32, 7);
  *(_QWORD *)(v64 + 16) = v63;
  *(_QWORD *)(v64 + 24) = v60;
  v65 = v60;
  v66 = (void *)_KeyValueCodingAndObserving.observe<A>(_:options:changeHandler:)(v62, 5, sub_1002EB908, v64, &protocol witness table for NSObject);
  swift_release(v64);
  swift_release(v62);
  v99 = (uint64_t)v65;
  v67 = swift_getKeyPath(&unk_100718F08);
  v68 = swift_allocObject(&unk_1008FB3E8, 24, 7);
  swift_unknownObjectWeakInit(v68 + 16);
  v69 = swift_allocObject(&unk_1008FB4D8, 32, 7);
  *(_QWORD *)(v69 + 16) = v68;
  *(_QWORD *)(v69 + 24) = v65;
  v70 = v65;
  v71 = (void *)_KeyValueCodingAndObserving.observe<A>(_:options:changeHandler:)(v67, 5, sub_1002EB908, v69, &protocol witness table for NSObject);
  swift_release(v69);
  swift_release(v67);
  swift_beginAccess(v9, &v99, 33, 0);
  v72 = *v9;
  if (!((unint64_t)*v9 >> 62))
  {
    v73 = v72 & 0xFFFFFFFFFFFFF8;
    v74 = *(id *)((v72 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!__OFADD__(v74, 4))
      goto LABEL_16;
LABEL_44:
    __break(1u);
    goto LABEL_45;
  }
  if (v72 < 0)
    v96 = *v9;
  else
    v96 = v72 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(*v9);
  v74 = (id)_CocoaArrayWrapper.endIndex.getter(v96);
  swift_bridgeObjectRelease(v72);
  if (__OFADD__(v74, 4))
    goto LABEL_44;
LABEL_16:
  v75 = sub_10046C548();
  specialized Array._endMutation()(v75);
  v74 = v97;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v74);
  v69 = *(_QWORD *)((*v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v73 = *(_QWORD *)((*v9 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v69 >= v73 >> 1)
LABEL_45:
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v73 > 1, v69 + 1, 1);
  v76 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v69, v74);
  specialized Array._endMutation()(v76);
  v49 = v61;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v49);
  v78 = *(_QWORD *)((*v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v77 = *(_QWORD *)((*v9 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v78 >= v77 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v77 > 1, v78 + 1, 1);
  v79 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v78, v49);
  specialized Array._endMutation()(v79);
  v46 = v66;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v46);
  v81 = *(_QWORD *)((*v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v80 = *(_QWORD *)((*v9 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v81 >= v80 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v80 > 1, v81 + 1, 1);
  v82 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v81, v46);
  specialized Array._endMutation()(v82);
  v42 = v71;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v42);
  v84 = *(_QWORD *)((*v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v83 = *(_QWORD *)((*v9 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v84 >= v83 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v83 > 1, v84 + 1, 1);
  v85 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v84, v42);
  specialized Array._endMutation()(v85);
  swift_endAccess(&v99);

LABEL_24:
  v86 = objc_opt_self(BSUIFeedViewController);
  v87 = (void *)swift_dynamicCastObjCClass(v98, v86);
  if (v87)
  {
    objc_msgSend(v87, "setMetadataDelegate:", v2);
  }
  else
  {
    v88 = *(_QWORD *)&v2[OBJC_IVAR___BKToolbarNavigationProvider_navigationBarStyle];
    v99 = 0;
    v100 = 1;
    swift_retain(v88);
    PassthroughSubject.send(_:)(&v99);
    swift_release(v88);
  }
  v89 = type metadata accessor for PageHostingController(0);
  if (swift_dynamicCastClass(v98, v89))
  {
    v90 = sub_1002EB600();
    v91 = v98;
    v92 = v2;
    dispatch thunk of RootHostingController.delegate.setter(v2, v90);

  }
  v93 = objc_msgSend(v98, "contentScrollView");
  if (v93)
  {
    v94 = v93;
    objc_msgSend(v93, "_addScrollViewScrollObserver:", v2);

  }
}

id sub_1002EA2EC@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, "navigationItem");
  *a2 = result;
  return result;
}

void sub_1002EA324(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = objc_msgSend(*a1, "title");
  if (v3)
  {
    v4 = v3;
    v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
    v7 = v6;

  }
  else
  {
    v5 = 0;
    v7 = 0;
  }
  *a2 = v5;
  a2[1] = v7;
}

void sub_1002EA388(uint64_t a1, void **a2)
{
  void *v2;
  NSString v3;
  id v4;

  v2 = *a2;
  if (*(_QWORD *)(a1 + 8))
    v3 = String._bridgeToObjectiveC()();
  else
    v3 = 0;
  v4 = v3;
  objc_msgSend(v2, "setTitle:");

}

double sub_1002EA3E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t Strong;
  double result;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  void *v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  char v16;
  char v17;
  char v18;
  _BYTE v19[9];
  _BYTE v20[24];
  _BYTE v21[24];

  v3 = a3 + 16;
  swift_beginAccess(a3 + 16, v21, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v6 = (void *)Strong;
    v7 = *(_QWORD *)(Strong + OBJC_IVAR___BKToolbarNavigationProvider_hasLargeTitlePublisher);
    swift_retain(v7);

    swift_beginAccess(v3, v20, 0, 0);
    v8 = swift_unknownObjectWeakLoadStrong(v3);
    v9 = v8;
    if (v8)
    {
      v10 = *(void **)(v8 + OBJC_IVAR___BKToolbarNavigationProvider_currentNavigationController);
      v11 = v10;

      if (v10)
      {
        v12 = objc_msgSend(v11, "viewControllers");
        v13 = sub_100009E04(0, (unint64_t *)&qword_1009D8D70, UIViewController_ptr);
        v14 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v12, v13);

        v15 = v11;
        v9 = sub_1002EB6C0(v14, v15);
        v17 = v16;
        swift_bridgeObjectRelease(v14);

        if ((v17 & 1) != 0)
        {
          LOBYTE(v9) = 0;
        }
        else
        {
          sub_1001EDE58(v9);
          LOBYTE(v9) = v18;
        }

      }
      else
      {
        LOBYTE(v9) = 0;
      }
    }
    v19[0] = v9 & 1;
    PassthroughSubject.send(_:)(v19);
    *(_QWORD *)&result = swift_release(v7).n128_u64[0];
  }
  return result;
}

void sub_1002EA548(id *a1@<X0>, SEL *a2@<X3>, uint64_t *a3@<X8>)
{
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = objc_msgSend(*a1, *a2);
  if (v4)
  {
    v5 = v4;
    v6 = sub_100009E04(0, &qword_1009D8D60, UIBarButtonItem_ptr);
    v7 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v5, v6);

  }
  else
  {
    v7 = 0;
  }
  *a3 = v7;
}

uint64_t sub_1002EA5C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t KeyPath;
  uint64_t v9;
  uint64_t v10;
  _BYTE v11[24];

  v3 = a3 + 16;
  swift_beginAccess(a3 + 16, v11, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(v3);
  if (result)
  {
    v5 = result;
    sub_100503E50();
    v7 = v6;
    KeyPath = swift_getKeyPath(&unk_100718FC8);
    v9 = swift_getKeyPath(&unk_100718FF0);
    v10 = v7;
    return static Published.subscript.setter(&v10, v5, KeyPath, v9);
  }
  return result;
}

void sub_1002EA650(_QWORD *a1, void **a2, uint64_t a3, uint64_t a4, SEL *a5)
{
  void *v6;
  NSArray v7;
  Class isa;

  v6 = *a2;
  if (*a1)
  {
    sub_100009E04(0, &qword_1009D8D60, UIBarButtonItem_ptr);
    v7.super.isa = Array._bridgeToObjectiveC()().super.isa;
  }
  else
  {
    v7.super.isa = 0;
  }
  isa = v7.super.isa;
  objc_msgSend(v6, *a5);

}

void sub_1002EA6CC(id *a1@<X0>, SEL *a2@<X3>, uint64_t *a3@<X8>)
{
  id v4;
  uint64_t v5;
  uint64_t v6;

  v4 = objc_msgSend(*a1, *a2);
  v5 = sub_100009E04(0, &qword_1009D8D68, UIBarButtonItemGroup_ptr);
  v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v4, v5);

  *a3 = v6;
}

void sub_1002EA738(uint64_t a1, void **a2, uint64_t a3, uint64_t a4, SEL *a5)
{
  void *v6;
  Class isa;

  v6 = *a2;
  sub_100009E04(0, &qword_1009D8D68, UIBarButtonItemGroup_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v6, *a5, isa);

}

uint64_t sub_1002EA7A8(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t KeyPath;
  uint64_t v12;
  uint64_t v13;
  _BYTE v14[24];

  v5 = a3 + 16;
  swift_beginAccess(a3 + 16, v14, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(v5);
  if (result)
  {
    v7 = result;
    v8 = objc_msgSend(a4, "navigationItem");
    sub_100503E50();
    v10 = v9;

    KeyPath = swift_getKeyPath(&unk_100718FC8);
    v12 = swift_getKeyPath(&unk_100718FF0);
    v13 = v10;
    return static Published.subscript.setter(&v13, v7, KeyPath, v12);
  }
  return result;
}

id ToolbarNavigationProvider.init()()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  objc_class *v30;
  uint64_t v32;
  objc_super v33;
  _QWORD *v34;

  v1 = sub_10004CFD4(&qword_1009D8C00);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10004CFD4(&qword_1009D8C08);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v0[OBJC_IVAR___BKToolbarNavigationProvider_currentNavigationController] = 0;
  v9 = &v0[OBJC_IVAR___BKToolbarNavigationProvider__currentTopViewController];
  v34 = 0;
  v10 = v0;
  v11 = sub_10004CFD4(&qword_1009D8BF0);
  Published.init(initialValue:)(&v34, v11);
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v9, v8, v5);
  v12 = &v10[OBJC_IVAR___BKToolbarNavigationProvider__toolbarItems];
  v34 = _swiftEmptyArrayStorage;
  v13 = sub_10004CFD4(&qword_1009D8BF8);
  Published.init(initialValue:)(&v34, v13);
  (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v12, v4, v1);
  v14 = OBJC_IVAR___BKToolbarNavigationProvider_navigationBarStyle;
  v15 = sub_10004CFD4((uint64_t *)&unk_1009CEC10);
  v16 = swift_allocObject(v15, *(unsigned int *)(v15 + 48), *(unsigned __int16 *)(v15 + 52));
  *(_QWORD *)&v10[v14] = PassthroughSubject.init()(v16);
  v17 = OBJC_IVAR___BKToolbarNavigationProvider_scrollOffsetInsetPublisher;
  v18 = sub_10004CFD4((uint64_t *)&unk_1009D8C30);
  v19 = swift_allocObject(v18, *(unsigned int *)(v18 + 48), *(unsigned __int16 *)(v18 + 52));
  *(_QWORD *)&v10[v17] = PassthroughSubject.init()(v19);
  v20 = OBJC_IVAR___BKToolbarNavigationProvider_dockingViewControllerPublisher;
  v21 = sub_10004CFD4((uint64_t *)&unk_1009CEC20);
  v22 = swift_allocObject(v21, *(unsigned int *)(v21 + 48), *(unsigned __int16 *)(v21 + 52));
  *(_QWORD *)&v10[v20] = PassthroughSubject.init()(v22);
  v23 = OBJC_IVAR___BKToolbarNavigationProvider_undockingViewControllerPublisher;
  v24 = swift_allocObject(v21, *(unsigned int *)(v21 + 48), *(unsigned __int16 *)(v21 + 52));
  *(_QWORD *)&v10[v23] = PassthroughSubject.init()(v24);
  v25 = OBJC_IVAR___BKToolbarNavigationProvider_hasLargeTitlePublisher;
  v26 = sub_10004CFD4(&qword_1009D8C40);
  v27 = swift_allocObject(v26, *(unsigned int *)(v26 + 48), *(unsigned __int16 *)(v26 + 52));
  *(_QWORD *)&v10[v25] = PassthroughSubject.init()(v27);
  v28 = OBJC_IVAR___BKToolbarNavigationProvider_isPresentingCardsPublisher;
  v29 = swift_allocObject(v26, *(unsigned int *)(v26 + 48), *(unsigned __int16 *)(v26 + 52));
  *(_QWORD *)&v10[v28] = PassthroughSubject.init()(v29);
  *(_QWORD *)&v10[OBJC_IVAR___BKToolbarNavigationProvider_observers] = _swiftEmptyArrayStorage;

  v30 = (objc_class *)type metadata accessor for ToolbarNavigationProvider(0);
  v33.receiver = v10;
  v33.super_class = v30;
  return objc_msgSendSuper2(&v33, "init");
}

uint64_t type metadata accessor for ToolbarNavigationProvider(uint64_t a1)
{
  uint64_t result;

  result = qword_1009D8C78;
  if (!qword_1009D8C78)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ToolbarNavigationProvider);
  return result;
}

id ToolbarNavigationProvider.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ToolbarNavigationProvider(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

Swift::Void __swiftcall ToolbarNavigationProvider.mainFlowControllerDock(_:)(UIViewController a1)
{
  sub_1002EAD50((uint64_t)a1.super.super.isa, &OBJC_IVAR___BKToolbarNavigationProvider_dockingViewControllerPublisher);
}

Swift::Void __swiftcall ToolbarNavigationProvider.mainFlowControllerUndock(_:)(UIViewController a1)
{
  sub_1002EAD50((uint64_t)a1.super.super.isa, &OBJC_IVAR___BKToolbarNavigationProvider_undockingViewControllerPublisher);
}

uint64_t sub_1002EAD50(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  v3 = *(_QWORD *)(v2 + *a2);
  v5 = a1;
  swift_retain(v3);
  PassthroughSubject.send(_:)(&v5);
  return swift_release(v3);
}

uint64_t sub_1002EADA0(char *a1, uint64_t a2, void *a3, _QWORD *a4)
{
  uint64_t v5;
  id v6;
  char *v7;
  void *v9;

  v5 = *(_QWORD *)&a1[*a4];
  v9 = a3;
  v6 = a3;
  v7 = a1;
  swift_retain(v5);
  PassthroughSubject.send(_:)(&v9);

  return swift_release(v5);
}

void ToolbarNavigationProvider.bsuiFeedViewControllerNavigationBarStyle(_:)(unint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  char v6;

  if (a1 >= 5)
  {
    type metadata accessor for FeedNavigationBarStyle(0);
    v5 = a1;
    _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)(v4, &v5, v4, &type metadata for UInt);
    __break(1u);
  }
  else
  {
    v2 = *(_QWORD *)(v1 + OBJC_IVAR___BKToolbarNavigationProvider_navigationBarStyle);
    v5 = 0;
    v6 = (3u >> a1) & 1;
    swift_retain(v2);
    PassthroughSubject.send(_:)(&v5);
    swift_release(v2);
  }
}

id ToolbarNavigationProvider.contentScrollViewDidChange(for:)(void *a1)
{
  uint64_t v1;
  id result;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD v8[2];

  result = objc_msgSend(a1, "contentScrollViewForEdge:", 1);
  if (result)
  {
    v3 = result;
    objc_msgSend(result, "_addScrollViewScrollObserver:", v1);
    v4 = *(_QWORD *)(v1 + OBJC_IVAR___BKToolbarNavigationProvider_scrollOffsetInsetPublisher);
    swift_retain(v4);
    objc_msgSend(v3, "contentOffset");
    v6 = v5;
    objc_msgSend(v3, "adjustedContentInset");
    v8[0] = v6;
    v8[1] = v7;
    PassthroughSubject.send(_:)(v8);

    return (id)swift_release(v4);
  }
  return result;
}

uint64_t ToolbarNavigationProvider.navigationBarStyleDidUpdate(_:for:)(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  char v6;

  v3 = *(_QWORD *)(v2 + OBJC_IVAR___BKToolbarNavigationProvider_navigationBarStyle);
  v5 = a1;
  v6 = a2 & 1;
  swift_retain(v3);
  PassthroughSubject.send(_:)(&v5);
  return swift_release(v3);
}

Swift::Void __swiftcall ToolbarNavigationProvider._observeScrollViewDidScroll(_:)(UIScrollView a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD v7[2];

  v3 = *(_QWORD *)(v1 + OBJC_IVAR___BKToolbarNavigationProvider_scrollOffsetInsetPublisher);
  swift_retain(v3);
  -[objc_class contentOffset](a1.super.super.super.isa, "contentOffset");
  v5 = v4;
  -[objc_class adjustedContentInset](a1.super.super.super.isa, "adjustedContentInset");
  v7[0] = v5;
  v7[1] = v6;
  PassthroughSubject.send(_:)(v7);
  swift_release(v3);
}

uint64_t sub_1002EB044()
{
  return type metadata accessor for ToolbarNavigationProvider(0);
}

void sub_1002EB04C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[10];

  v6[0] = "\b";
  sub_1001F1044(319, &qword_1009D8C88, &qword_1009D8BF0);
  if (v3 <= 0x3F)
  {
    v6[1] = *(_QWORD *)(v2 - 8) + 64;
    sub_1001F1044(319, &qword_1009D8C90, &qword_1009D8BF8);
    if (v5 <= 0x3F)
    {
      v6[2] = *(_QWORD *)(v4 - 8) + 64;
      v6[3] = (char *)&value witness table for Builtin.NativeObject + 64;
      v6[4] = (char *)&value witness table for Builtin.NativeObject + 64;
      v6[5] = (char *)&value witness table for Builtin.NativeObject + 64;
      v6[6] = (char *)&value witness table for Builtin.NativeObject + 64;
      v6[7] = (char *)&value witness table for Builtin.NativeObject + 64;
      v6[8] = (char *)&value witness table for Builtin.NativeObject + 64;
      v6[9] = (char *)&value witness table for Builtin.BridgeObject + 64;
      swift_updateClassMetadata2(a1, 256, 10, v6, a1 + 80);
    }
  }
}

const char *sub_1002EB1B8()
{
  return "navigationItem";
}

id sub_1002EB1C4@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, "navigationItem");
  *a2 = result;
  return result;
}

const char *sub_1002EB1FC()
{
  return "title";
}

uint64_t sub_1002EB210@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_100719010);
  v5 = swift_getKeyPath(&unk_100719038);
  static Published.subscript.getter(&v7, v3, KeyPath, v5);
  swift_release(KeyPath);
  result = swift_release(v5);
  *a2 = v7;
  return result;
}

uint64_t sub_1002EB28C(void **a1, void **a2)
{
  void *v2;
  void *v3;
  uint64_t KeyPath;
  uint64_t v5;
  id v6;
  void *v8;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_100719010);
  v5 = swift_getKeyPath(&unk_100719038);
  v8 = v2;
  v6 = v2;
  return static Published.subscript.setter(&v8, v3, KeyPath, v5);
}

uint64_t sub_1002EB2FC@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_100718FC8);
  v5 = swift_getKeyPath(&unk_100718FF0);
  static Published.subscript.getter(&v7, v3, KeyPath, v5);
  swift_release(KeyPath);
  result = swift_release(v5);
  *a2 = v7;
  return result;
}

uint64_t sub_1002EB378(uint64_t *a1, void **a2)
{
  uint64_t v2;
  void *v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v7;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_100718FC8);
  v5 = swift_getKeyPath(&unk_100718FF0);
  v7 = v2;
  swift_bridgeObjectRetain(v2);
  return static Published.subscript.setter(&v7, v3, KeyPath, v5);
}

uint64_t sub_1002EB3EC()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1002EB414(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1002EA7A8(a1, a2, *(_QWORD *)(v2 + 16), *(void **)(v2 + 24));
}

const char *sub_1002EB42C()
{
  return "titleView";
}

id sub_1002EB438@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, "titleView");
  *a2 = result;
  return result;
}

id sub_1002EB470(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, "setTitleView:", *a1);
}

const char *sub_1002EB488()
{
  return "largeTitleDisplayMode";
}

id sub_1002EB494@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, "largeTitleDisplayMode");
  *a2 = result;
  return result;
}

id sub_1002EB4C4(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, "setLargeTitleDisplayMode:", *a1);
}

double sub_1002EB4D8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1002EA3E4(a1, a2, v2);
}

const char *sub_1002EB4E0()
{
  return "leftBarButtonItems";
}

void sub_1002EB4EC(id *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1002EA548(a1, (SEL *)&selRef_leftBarButtonItems, a2);
}

void sub_1002EB508(_QWORD *a1, void **a2, uint64_t a3, uint64_t a4)
{
  sub_1002EA650(a1, a2, a3, a4, (SEL *)&selRef_setLeftBarButtonItems_);
}

const char *sub_1002EB528()
{
  return "rightBarButtonItems";
}

void sub_1002EB534(id *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1002EA548(a1, (SEL *)&selRef_rightBarButtonItems, a2);
}

void sub_1002EB550(_QWORD *a1, void **a2, uint64_t a3, uint64_t a4)
{
  sub_1002EA650(a1, a2, a3, a4, (SEL *)&selRef_setRightBarButtonItems_);
}

const char *sub_1002EB570()
{
  return "leadingItemGroups";
}

void sub_1002EB57C(id *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1002EA6CC(a1, (SEL *)&selRef_leadingItemGroups, a2);
}

void sub_1002EB598(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  sub_1002EA738(a1, a2, a3, a4, (SEL *)&selRef_setLeadingItemGroups_);
}

const char *sub_1002EB5B8()
{
  return "trailingItemGroups";
}

void sub_1002EB5C4(id *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1002EA6CC(a1, (SEL *)&selRef_trailingItemGroups, a2);
}

void sub_1002EB5E0(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  sub_1002EA738(a1, a2, a3, a4, (SEL *)&selRef_setTrailingItemGroups_);
}

unint64_t sub_1002EB600()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009D8D58;
  if (!qword_1009D8D58)
  {
    v1 = type metadata accessor for ToolbarNavigationProvider(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for ToolbarNavigationProvider, v1);
    atomic_store(result, (unint64_t *)&qword_1009D8D58);
  }
  return result;
}

const char *sub_1002EB648()
{
  return "bsui_leftBarButtonItems";
}

void sub_1002EB654(id *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1002EA548(a1, (SEL *)&selRef_bsui_leftBarButtonItems, a2);
}

uint64_t sub_1002EB674(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1002EA5C0(a1, a2, *(_QWORD *)(v2 + 16));
}

const char *sub_1002EB68C()
{
  return "bsui_rightBarButtonItems";
}

void sub_1002EB698(id *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1002EA548(a1, (SEL *)&selRef_bsui_rightBarButtonItems, a2);
}

uint64_t sub_1002EB6C0(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t i;
  id v6;
  id v7;
  id v8;
  void *v9;
  id v10;
  char v11;
  uint64_t v12;
  uint64_t v13;

  if ((unint64_t)a1 >> 62)
    goto LABEL_17;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (v4)
  {
    for (i = 0; ; ++i)
    {
      v6 = (a1 & 0xC000000000000001) != 0
         ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, a1)
         : *(id *)(a1 + 8 * i + 32);
      v7 = v6;
      v8 = objc_msgSend(a2, "topViewController");
      if (v8)
        break;

      v12 = i + 1;
      if (__OFADD__(i, 1))
        goto LABEL_16;
LABEL_13:
      if (v12 == v4)
        return 0;
    }
    v9 = v8;
    sub_100009E04(0, (unint64_t *)&qword_1009D8D70, UIViewController_ptr);
    v10 = v7;
    v11 = static NSObject.== infix(_:_:)(v10, v9);

    if ((v11 & 1) != 0)
      return i;
    v12 = i + 1;
    if (!__OFADD__(i, 1))
      goto LABEL_13;
LABEL_16:
    __break(1u);
LABEL_17:
    if (a1 < 0)
      v13 = a1;
    else
      v13 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v4 = _CocoaArrayWrapper.endIndex.getter(v13);
    swift_bridgeObjectRelease(a1);
  }
  return 0;
}

const char *sub_1002EB840()
{
  return "bc_isPresentingCardStack";
}

id sub_1002EB84C@<X0>(id *a1@<X0>, _BYTE *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, "bc_isPresentingCardStack");
  *a2 = (_BYTE)result;
  return result;
}

uint64_t sub_1002EB87C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

double sub_1002EB8A8(int a1, int a2)
{
  uint64_t v2;

  return sub_1002E96E4(a1, a2, *(id *)(v2 + 16), *(_QWORD *)(v2 + 24));
}

unint64_t sub_1002EB8B0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009D8D80;
  if (!qword_1009D8D80)
  {
    v1 = sub_100009E04(255, &qword_1009D8D78, UINavigationController_ptr);
    result = swift_getWitnessTable(&protocol conformance descriptor for NSObject, v1);
    atomic_store(result, (unint64_t *)&qword_1009D8D80);
  }
  return result;
}

uint64_t destroy for REActionMenuRowView(uint64_t a1)
{

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 24));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 48));
  swift_release(*(_QWORD *)(a1 + 64));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 80));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 96));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 112));
  return swift_unknownObjectWeakDestroy(a1 + 136);
}

uint64_t initializeWithCopy for REActionMenuRowView(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  __int128 v17;

  v4 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 24) = v5;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  v17 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 48) = v17;
  v7 = *(_QWORD *)(a2 + 64);
  v6 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = v7;
  *(_QWORD *)(a1 + 72) = v6;
  v9 = *(_QWORD *)(a2 + 80);
  v8 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = v9;
  *(_QWORD *)(a1 + 88) = v8;
  v11 = *(_QWORD *)(a2 + 96);
  v10 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = v11;
  *(_QWORD *)(a1 + 104) = v10;
  v12 = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 112) = v12;
  v13 = a1 + 136;
  v14 = a2 + 136;
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  v15 = v4;
  swift_bridgeObjectRetain(v5);
  swift_bridgeObjectRetain(v17);
  swift_retain(v7);
  swift_bridgeObjectRetain(v9);
  swift_bridgeObjectRetain(v11);
  swift_bridgeObjectRetain(v12);
  swift_unknownObjectWeakCopyInit(v13, v14);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_BYTE *)(a1 + 152) = *(_BYTE *)(a2 + 152);
  return a1;
}

uint64_t assignWithCopy for REActionMenuRowView(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v4 = *(void **)a1;
  v5 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v5;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 24);
  v8 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v7;
  swift_bridgeObjectRetain(v7);
  swift_bridgeObjectRelease(v8);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  v9 = *(_QWORD *)(a2 + 48);
  v10 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a1 + 48) = v9;
  swift_bridgeObjectRetain(v9);
  swift_bridgeObjectRelease(v10);
  v11 = *(_QWORD *)(a2 + 64);
  v12 = *(_QWORD *)(a1 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v11;
  swift_retain(v11);
  swift_release(v12);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  v13 = *(_QWORD *)(a2 + 80);
  v14 = *(_QWORD *)(a1 + 80);
  *(_QWORD *)(a1 + 80) = v13;
  swift_bridgeObjectRetain(v13);
  swift_bridgeObjectRelease(v14);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  v15 = *(_QWORD *)(a2 + 96);
  v16 = *(_QWORD *)(a1 + 96);
  *(_QWORD *)(a1 + 96) = v15;
  swift_bridgeObjectRetain(v15);
  swift_bridgeObjectRelease(v16);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  v17 = *(_QWORD *)(a2 + 112);
  v18 = *(_QWORD *)(a1 + 112);
  *(_QWORD *)(a1 + 112) = v17;
  swift_bridgeObjectRetain(v17);
  swift_bridgeObjectRelease(v18);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  swift_unknownObjectWeakCopyAssign(a1 + 136, a2 + 136);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_BYTE *)(a1 + 152) = *(_BYTE *)(a2 + 152);
  return a1;
}

uint64_t initializeWithTake for REActionMenuRowView(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;

  v4 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v4;
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  v5 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v5;
  v6 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v6;
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  swift_unknownObjectWeakTakeInit(a1 + 136, a2 + 136);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_BYTE *)(a1 + 152) = *(_BYTE *)(a2 + 152);
  return a1;
}

uint64_t assignWithTake for REActionMenuRowView(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRelease(v5);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v6 = *(_QWORD *)(a2 + 48);
  v7 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v6;
  swift_bridgeObjectRelease(v7);
  v8 = *(_QWORD *)(a1 + 64);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  swift_release(v8);
  v9 = *(_QWORD *)(a2 + 80);
  v10 = *(_QWORD *)(a1 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v9;
  swift_bridgeObjectRelease(v10);
  v11 = *(_QWORD *)(a2 + 96);
  v12 = *(_QWORD *)(a1 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v11;
  swift_bridgeObjectRelease(v12);
  v13 = *(_QWORD *)(a2 + 112);
  v14 = *(_QWORD *)(a1 + 112);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = v13;
  swift_bridgeObjectRelease(v14);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  swift_unknownObjectWeakTakeAssign(a1 + 136, a2 + 136);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_BYTE *)(a1 + 152) = *(_BYTE *)(a2 + 152);
  return a1;
}

uint64_t getEnumTagSinglePayload for REActionMenuRowView(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 153))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for REActionMenuRowView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 152) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 153) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 153) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for REActionMenuRowView()
{
  return &type metadata for REActionMenuRowView;
}

uint64_t sub_1002EBD98(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_10086AEEC, 1);
}

uint64_t sub_1002EBDA8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t TupleTypeMetadata2;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  double v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  char *v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t IsReduceMotionEnabled;
  double v92;
  double v93;
  double v94;
  double v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  void (*v102)(uint64_t, uint64_t);
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  uint64_t WitnessTable;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  char *v120;
  uint64_t v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  char v137[8];
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  void *v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  void *v149;
  char v150;
  uint64_t v151;
  void *v152;
  uint64_t v153;
  void *v154;
  uint64_t v155;
  void *v156;
  uint64_t v157;
  void *v158;
  uint64_t v159;
  void *v160;

  v135 = a1;
  v134 = a3;
  v5 = type metadata accessor for ButtonStyleConfiguration.Label(255, a4);
  v6 = *(_QWORD *)(a2 + 16);
  v107 = a2;
  v7 = type metadata accessor for ModifiedContent(255, v6, &type metadata for _FrameLayout);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(255, v5, v7, 0, 0);
  v110 = type metadata accessor for TupleView(255, TupleTypeMetadata2);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v110);
  v9 = type metadata accessor for HStack(0, v110, WitnessTable);
  v112 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v11 = (char *)&v105 - v10;
  v12 = type metadata accessor for ModifiedContent(0, v9, &type metadata for _PaddingLayout);
  v114 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v14 = (char *)&v105 - v13;
  v15 = type metadata accessor for ModifiedContent(0, v12, &type metadata for _PaddingLayout);
  v116 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v108 = (char *)&v105 - v16;
  v17 = type metadata accessor for ModifiedContent(0, v15, &type metadata for _PaddingLayout);
  v117 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v111 = (char *)&v105 - v18;
  v19 = type metadata accessor for ModifiedContent(0, v17, &type metadata for _OpacityEffect);
  v20 = *(_QWORD *)(v19 - 8);
  v106 = v19;
  v121 = v20;
  __chkstk_darwin(v19);
  v113 = (char *)&v105 - v21;
  v23 = type metadata accessor for ModifiedContent(0, v22, &type metadata for _FrameLayout);
  v24 = *(_QWORD *)(v23 - 8);
  v119 = v23;
  v124 = v24;
  __chkstk_darwin(v23);
  v115 = (char *)&v105 - v25;
  v27 = type metadata accessor for ModifiedContent(0, v26, &type metadata for _FlexFrameLayout);
  v126 = *(_QWORD *)(v27 - 8);
  v123 = v27;
  __chkstk_darwin(v27);
  v118 = (char *)&v105 - v28;
  v29 = sub_100030B74(&qword_1009D8F68);
  v30 = type metadata accessor for ModifiedContent(0, v27, v29);
  v127 = *(_QWORD *)(v30 - 8);
  v125 = v30;
  __chkstk_darwin(v30);
  v122 = (char *)&v105 - v31;
  v32 = sub_100030B74(&qword_1009F4140);
  v33 = type metadata accessor for ModifiedContent(0, v30, v32);
  v130 = *(_QWORD *)(v33 - 8);
  __chkstk_darwin(v33);
  v120 = (char *)&v105 - v34;
  v132 = v35;
  v133 = type metadata accessor for ModifiedContent(0, v35, &type metadata for _ScaleEffect);
  v131 = *(_QWORD *)(v133 - 8);
  __chkstk_darwin(v133);
  v128 = (char *)&v105 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v37);
  v129 = (uint64_t)&v105 - v38;
  v39 = *(_QWORD *)(a2 + 24);
  v138 = v6;
  v139 = v39;
  v140 = v135;
  v141 = v136;
  v41 = static VerticalAlignment.center.getter(v40);
  v42 = HStack.init(alignment:spacing:content:)(v41, 0x4020000000000000, 0, sub_1002EF40C, v137, v110, WitnessTable);
  v43 = static Edge.Set.leading.getter(v42);
  v44 = swift_getWitnessTable(&protocol conformance descriptor for HStack<A>, v9);
  View.padding(_:_:)(v43, 0x4030000000000000, 0, v9, v44);
  v45 = (*(uint64_t (**)(char *, uint64_t))(v112 + 8))(v11, v9);
  v46 = static Edge.Set.trailing.getter(v45);
  v159 = v44;
  v160 = &protocol witness table for _PaddingLayout;
  v47 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v12);
  v48 = v108;
  View.padding(_:_:)(v46, 0x4024000000000000, 0, v12, v47);
  v49 = (*(uint64_t (**)(char *, uint64_t))(v114 + 8))(v14, v12);
  v50 = static Edge.Set.vertical.getter(v49);
  v157 = v47;
  v158 = &protocol witness table for _PaddingLayout;
  v51 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v15);
  v52 = v111;
  View.padding(_:_:)(v50, 0x4024000000000000, 0, v15, v51);
  v53 = (*(uint64_t (**)(char *, uint64_t))(v116 + 8))(v48, v15);
  if ((ButtonStyleConfiguration.isPressed.getter(v53) & 1) != 0)
    v54 = 0.25;
  else
    v54 = 1.0;
  v155 = v51;
  v156 = &protocol witness table for _PaddingLayout;
  v55 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v17);
  v56 = v113;
  View.opacity(_:)(v17, v55, v54);
  v57 = (*(uint64_t (**)(char *, uint64_t))(v117 + 8))(v52, v17);
  v58 = v107;
  v59 = v136;
  v60 = *(_QWORD *)(v136 + *(int *)(v107 + 40));
  v61 = static Alignment.center.getter(v57);
  v63 = v62;
  v153 = v55;
  v154 = &protocol witness table for _OpacityEffect;
  v64 = v106;
  v65 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v106);
  v66 = v115;
  View.frame(width:height:alignment:)(v60, 0, 0, 1, v61, v63, v64, v65);
  v67 = (*(uint64_t (**)(char *, uint64_t))(v121 + 8))(v56, v64);
  v68 = *(_QWORD *)(v59 + *(int *)(v58 + 44));
  v69 = static Alignment.center.getter(v67);
  v71 = v70;
  v151 = v65;
  v152 = &protocol witness table for _FrameLayout;
  v72 = v119;
  v73 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v119);
  v104 = v71;
  v74 = v118;
  View.frame(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(0, 1, 0, 1, 0, 1, v68, 0, 0, 1, 0, 1, v69, v104, v72, v73);
  v75 = (*(uint64_t (**)(char *, uint64_t))(v124 + 8))(v66, v72);
  v150 = 1;
  v76 = static Alignment.center.getter(v75);
  v78 = v77;
  v148 = v73;
  v149 = &protocol witness table for _FlexFrameLayout;
  v79 = v123;
  v80 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v123);
  v81 = sub_1002EF418();
  v82 = v122;
  View.background<A>(_:alignment:)(&v150, v76, v78, v79, &type metadata for MenuButtonMaterialView, v80, v81);
  (*(void (**)(char *, uint64_t))(v126 + 8))(v74, v79);
  v83 = v59 + *(int *)(v58 + 52);
  v84 = v120;
  v85 = type metadata accessor for RoundedRectangle(0);
  v86 = sub_100030B34(&qword_1009D8F78, &qword_1009D8F68, (uint64_t)&protocol conformance descriptor for _BackgroundModifier<A>);
  v146 = v80;
  v147 = v86;
  v87 = v125;
  v88 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v125);
  v89 = sub_100008DB0(&qword_1009D8F80, (uint64_t (*)(uint64_t))&type metadata accessor for RoundedRectangle, (uint64_t)&protocol conformance descriptor for RoundedRectangle);
  View.clipShape<A>(_:style:)(v83, 256, v87, v85, v88, v89);
  v90 = (*(uint64_t (**)(char *, uint64_t))(v127 + 8))(v82, v87);
  IsReduceMotionEnabled = ButtonStyleConfiguration.isPressed.getter(v90);
  if ((IsReduceMotionEnabled & 1) != 0)
  {
    IsReduceMotionEnabled = UIAccessibilityIsReduceMotionEnabled();
    if ((_DWORD)IsReduceMotionEnabled)
      v92 = 1.0;
    else
      v92 = 0.96;
  }
  else
  {
    v92 = 0.99;
  }
  v93 = static UnitPoint.center.getter(IsReduceMotionEnabled);
  v95 = v94;
  v96 = sub_100030B34(&qword_1009D5178, &qword_1009F4140, (uint64_t)&protocol conformance descriptor for _ClipEffect<A>);
  v144 = v88;
  v145 = v96;
  v97 = v132;
  v98 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v132);
  v99 = (uint64_t)v128;
  View.scaleEffect(_:anchor:)(v97, v98, v92, v93, v95);
  (*(void (**)(char *, uint64_t))(v130 + 8))(v84, v97);
  v142 = v98;
  v143 = &protocol witness table for _ScaleEffect;
  v100 = v133;
  swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v133);
  v101 = v129;
  sub_100344038(v99, v100, v129);
  v102 = *(void (**)(uint64_t, uint64_t))(v131 + 8);
  v102(v99, v100);
  sub_100341C00(v101, v100, v134);
  return ((uint64_t (*)(uint64_t, uint64_t))v102)(v101, v100);
}

uint64_t sub_1002EC7A8@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  double v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t WitnessTable;
  uint64_t v26;
  void (*v27)(char *, uint64_t);
  uint64_t v28;
  void (*v29)(char *, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD v37[2];
  uint64_t v38[4];

  v34 = a3;
  v5 = type metadata accessor for ModifiedContent(0, a1, &type metadata for _FrameLayout);
  v33 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __chkstk_darwin(v8);
  v11 = (char *)&v31 - v10;
  v12 = type metadata accessor for ButtonStyleConfiguration.Label(0, v9);
  v32 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v14 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __chkstk_darwin(v15);
  v18 = (char *)&v31 - v17;
  ButtonStyleConfiguration.label.getter(v16);
  type metadata accessor for REActionMenuButtonStyle(0, a1, a2, v19);
  v20 = sub_10004CFD4(qword_1009D8EC8);
  v21 = ScaledMetric.wrappedValue.getter(v38, v20);
  v22 = v38[0];
  v23 = static Alignment.center.getter(v21);
  View.frame(width:height:alignment:)(v22, 0, 0, 1, v23, v24, a1, a2);
  v38[2] = a2;
  v38[3] = (uint64_t)&protocol witness table for _FrameLayout;
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v5);
  sub_100344038((uint64_t)v7, v5, (uint64_t)v11);
  v26 = v33;
  v27 = *(void (**)(char *, uint64_t))(v33 + 8);
  v27(v7, v5);
  v28 = v32;
  (*(void (**)(char *, char *, uint64_t))(v32 + 16))(v14, v18, v12);
  v38[0] = (uint64_t)v14;
  (*(void (**)(char *, char *, uint64_t))(v26 + 16))(v7, v11, v5);
  v38[1] = (uint64_t)v7;
  v37[0] = v12;
  v37[1] = v5;
  v35 = sub_100008DB0(&qword_1009D8F88, (uint64_t (*)(uint64_t))&type metadata accessor for ButtonStyleConfiguration.Label, (uint64_t)&protocol conformance descriptor for ButtonStyleConfiguration.Label);
  v36 = WitnessTable;
  sub_100341C18(v38, 2uLL, (uint64_t)v37);
  v27(v11, v5);
  v29 = *(void (**)(char *, uint64_t))(v28 + 8);
  v29(v18, v12);
  v27(v7, v5);
  return ((uint64_t (*)(char *, uint64_t))v29)(v14, v12);
}

uint64_t sub_1002ECA18@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t KeyPath;
  uint64_t *v31;
  void (*v32)(char *, uint64_t);
  void *v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  char *v37;
  __n128 v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  void (*v42)(char *, uint64_t);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  int *v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  uint64_t v54;
  id v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t *v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  char *v65;
  double v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  _QWORD *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  _QWORD *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  unint64_t v88;
  __n128 v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t result;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  __n128 v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  uint64_t v121;
  _QWORD v122[3];
  uint64_t v123;
  _QWORD v124[20];
  _OWORD v125[6];
  uint64_t v126;

  v2 = v1;
  v121 = a1;
  v102 = sub_10004CFD4(&qword_1009D8D90);
  __chkstk_darwin(v102);
  v4 = (char *)&v100 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ColorScheme(0);
  v104 = *(_QWORD *)(v5 - 8);
  v105 = v5;
  __chkstk_darwin(v5);
  v103 = (char *)&v100 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v101 = (char *)&v100 - v8;
  v9 = sub_10004CFD4(&qword_1009D8D98);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v100 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_10004CFD4(&qword_1009D8DA0);
  __chkstk_darwin(v13);
  v15 = (char *)&v100 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v107 = sub_10004CFD4(&qword_1009D8DA8);
  __chkstk_darwin(v107);
  v108 = (uint64_t)&v100 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v114 = sub_10004CFD4(&qword_1009D8DB0);
  v112 = *(_QWORD *)(v114 - 8);
  __chkstk_darwin(v114);
  v109 = (char *)&v100 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v111 = sub_10004CFD4(&qword_1009D8DB8);
  __chkstk_darwin(v111);
  v110 = (char *)&v100 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_10004CFD4(&qword_1009D8DC0);
  __chkstk_darwin(v19);
  v113 = (char *)&v100 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v106 = sub_10004CFD4(&qword_1009D8DC8);
  __chkstk_darwin(v106);
  v115 = (uint64_t)&v100 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v116 = sub_10004CFD4(&qword_1009D8DD0);
  __chkstk_darwin(v116);
  v117 = (uint64_t)&v100 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_10004CFD4(&qword_1009D8DD8);
  __chkstk_darwin(v23);
  v120 = (char *)&v100 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v118 = sub_10004CFD4(&qword_1009D8DE0);
  __chkstk_darwin(v118);
  v119 = (uint64_t)&v100 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10023494C(v2, (uint64_t)v124);
  v26 = swift_allocObject(&unk_1008FB620, 169, 7);
  sub_1002EDD78((uint64_t)v124, v26 + 16);
  v122[2] = v2;
  v27 = sub_10004CFD4(&qword_1009D8DE8);
  v28 = sub_1002EDE38();
  Button.init(action:label:)(sub_1002EDDF0, v26, sub_1002EDE30, v122, v27, v28);
  if (!*(_QWORD *)v2)
    goto LABEL_13;
  v29 = *(_QWORD *)(*(_QWORD *)v2 + OBJC_IVAR___REChromeStyle_controlFont);
  KeyPath = swift_getKeyPath(&unk_100719128);
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v15, v12, v9);
  v31 = (uint64_t *)&v15[*(int *)(v13 + 36)];
  *v31 = KeyPath;
  v31[1] = v29;
  v32 = *(void (**)(char *, uint64_t))(v10 + 8);
  swift_retain(v29);
  v32(v12, v9);
  v33 = *(void **)v2;
  if (!*(_QWORD *)v2)
    goto LABEL_13;
  v34 = swift_getKeyPath(&unk_100719158);
  v35 = swift_getKeyPath(&unk_100719180);
  v36 = v33;
  v37 = v101;
  static Published.subscript.getter(v101, v36, v34, v35);
  swift_release(v34);
  v38 = swift_release(v35);
  v40 = v103;
  v39 = v104;
  v41 = v105;
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v104 + 104))(v103, enum case for ColorScheme.light(_:), v105, v38);
  LOBYTE(v34) = static ColorScheme.== infix(_:_:)(v37, v40);
  v42 = *(void (**)(char *, uint64_t))(v39 + 8);
  v42(v40, v41);
  v42(v37, v41);
  v43 = (v34 & 1) != 0
      ? _s5Books11ChromeStyleC26_secondaryButtonLabelColor33_5E35E2CA450906E5027671B98D3F72C77Combine9PublishedVy7SwiftUI0G0VGvpfi_0()
      : _s5Books11ChromeStyleC20_pageBackgroundColor33_5E35E2CA450906E5027671B98D3F72C77Combine9PublishedVy7SwiftUI0F0VGvpfi_0();
  v44 = v43;
  v45 = v107;
  v46 = (int *)v102;

  v47 = v108;
  sub_10000B5E4((uint64_t)v15, v108, &qword_1009D8DA0);
  *(_QWORD *)(v47 + *(int *)(v45 + 36)) = v44;
  sub_100010960((uint64_t)v15, &qword_1009D8DA0);
  v48 = *(void **)v2;
  if (*(_QWORD *)v2)
  {
    v49 = *(_QWORD *)(v2 + 120);
    v50 = *(_QWORD *)(v2 + 128);
    v51 = *(_OWORD *)(v2 + 96);
    v125[4] = *(_OWORD *)(v2 + 80);
    v125[5] = v51;
    v126 = *(_QWORD *)(v2 + 112);
    v52 = *(_OWORD *)(v2 + 32);
    v125[0] = *(_OWORD *)(v2 + 16);
    v125[1] = v52;
    v53 = *(_OWORD *)(v2 + 64);
    v54 = (uint64_t)&v4[v46[12]];
    v125[2] = *(_OWORD *)(v2 + 48);
    v125[3] = v53;
    v55 = v48;
    sub_1002ED480((uint64_t)v125, v2, v54);
    v123 = 0x4046000000000000;
    v56 = sub_1002EDFBC();
    ScaledMetric.init(wrappedValue:)(&v123, &type metadata for CGFloat, v56);
    *(_QWORD *)&v4[v46[9]] = v55;
    *(_QWORD *)&v4[v46[10]] = v49;
    *(_QWORD *)&v4[v46[11]] = v50;
    v57 = v46[13];
    if (qword_1009CE5B0 != -1)
      swift_once(&qword_1009CE5B0, sub_10047908C);
    v58 = (uint64_t *)&v4[v57];
    v59 = qword_100A1E998;
    v60 = &v4[v57 + *(int *)(type metadata accessor for RoundedRectangle(0) + 20)];
    v61 = enum case for RoundedCornerStyle.continuous(_:);
    v62 = type metadata accessor for RoundedCornerStyle(0);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v62 - 8) + 104))(v60, v61, v62);
    *v58 = v59;
    v58[1] = v59;
    v63 = sub_1002EE000();
    v64 = sub_100030B34(&qword_1009D8E60, &qword_1009D8D90, (uint64_t)&unk_100719228);
    v65 = v109;
    View.buttonStyle<A>(_:)(v4, v45, v46, v63, v64);
    sub_100010960((uint64_t)v4, &qword_1009D8D90);
    sub_100010960(v47, &qword_1009D8DA8);
    if (*(_BYTE *)(v2 + 152))
      v66 = 0.0;
    else
      v66 = 1.0;
    v67 = v112;
    v68 = (uint64_t)v110;
    v69 = v114;
    (*(void (**)(char *, char *, uint64_t))(v112 + 16))(v110, v65, v114);
    v70 = v111;
    *(double *)(v68 + *(int *)(v111 + 36)) = v66;
    (*(void (**)(char *, uint64_t))(v67 + 8))(v65, v69);
    v71 = *(_QWORD *)(v2 + 72);
    v72 = *(_QWORD *)(v2 + 80);
    v73 = sub_1002EE120();
    v74 = (uint64_t)v113;
    View.accessibilityIdentifier(_:)(v71, v72, v70, v73);
    sub_100010960(v68, &qword_1009D8DB8);
    v76 = *(_QWORD *)(v2 + 88);
    v75 = *(_QWORD *)(v2 + 96);
    v77 = v115;
    sub_10000B5E4(v74, v115, &qword_1009D8DC0);
    v78 = (_QWORD *)(v77 + *(int *)(v106 + 36));
    *v78 = v76;
    v78[1] = v75;
    swift_bridgeObjectRetain(v75);
    sub_100010960(v74, &qword_1009D8DC0);
    v80 = *(_QWORD *)(v2 + 104);
    v79 = *(_QWORD *)(v2 + 112);
    v81 = v117;
    sub_10000B5E4(v77, v117, &qword_1009D8DC8);
    v82 = v116;
    v83 = (_QWORD *)(v81 + *(int *)(v116 + 36));
    *v83 = v80;
    v83[1] = v79;
    swift_bridgeObjectRetain(v79);
    sub_100010960(v77, &qword_1009D8DC8);
    v84 = sub_10004CFD4((uint64_t *)&unk_1009D8830);
    v85 = swift_allocObject(v84, 48, 7);
    *(_OWORD *)(v85 + 16) = xmmword_10070CCA0;
    v86 = *(_QWORD *)(v2 + 24);
    *(_QWORD *)(v85 + 32) = *(_QWORD *)(v2 + 16);
    *(_QWORD *)(v85 + 40) = v86;
    v87 = sub_10028156C(&qword_1009D8E70, &qword_1009D8DD0, (void (*)(void))sub_1002EE1F8, (void (*)(void))sub_1002EE2E4);
    v88 = sub_1001F2108();
    v89 = swift_bridgeObjectRetain(v86);
    v90 = (uint64_t)v120;
    View.accessibilityInputLabels<A>(_:)(v85, v82, &type metadata for String, v87, v88, v89);
    swift_bridgeObjectRelease(v85);
    sub_100010960(v81, &qword_1009D8DD0);
    v91 = *(_QWORD *)(v2 + 120);
    LOBYTE(v123) = 0;
    State.init(wrappedValue:)(v124, &v123, &type metadata for Bool);
    LOBYTE(v85) = v124[0];
    v92 = v124[1];
    v93 = v119;
    sub_10000B5E4(v90, v119, &qword_1009D8DD8);
    v94 = v93 + *(int *)(v118 + 36);
    *(_QWORD *)v94 = v91;
    *(_BYTE *)(v94 + 8) = v85;
    *(_QWORD *)(v94 + 16) = v92;
    sub_100010960(v90, &qword_1009D8DD8);
    return sub_100025B3C(v93, v121, &qword_1009D8DE0);
  }
  else
  {
LABEL_13:
    v96 = *(_QWORD *)(v2 + 8);
    v97 = type metadata accessor for ChromeStyle(0);
    v98 = sub_100008DB0((unint64_t *)&qword_1009D8330, type metadata accessor for ChromeStyle, (uint64_t)&protocol conformance descriptor for ChromeStyle);
    result = EnvironmentObject.error()(0, v96, v97, v98, v99);
    __break(1u);
  }
  return result;
}

double sub_1002ED318@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  unint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  char v12;
  uint64_t KeyPath;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  double result;
  __int128 v22;
  _OWORD v23[2];
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  char v42;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)&v23[0] = *(_QWORD *)(a1 + 16);
  *((_QWORD *)&v23[0] + 1) = v3;
  v4 = sub_1001F2108();
  v5 = swift_bridgeObjectRetain(v3);
  v6 = Text.init<A>(_:)(v23, &type metadata for String, v4, v5);
  v8 = v7;
  v10 = v9;
  v12 = v11 & 1;
  KeyPath = swift_getKeyPath(&unk_1007191A0);
  v14 = swift_getKeyPath(&unk_1007191D0);
  v34 = v6;
  v35 = v8;
  v36 = v12;
  v37 = v10;
  v38 = KeyPath;
  v39 = 2;
  v40 = 0;
  v41 = v14;
  v42 = 0;
  v15 = static Alignment.leading.getter(v14);
  sub_1005F24C0(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v23, 0.0, 1, 0.0, 1, v15, v16);
  sub_1001F5B28(v6, v8, v12);
  swift_release(v14);
  swift_release(KeyPath);
  swift_bridgeObjectRelease(v10);
  v17 = v31;
  *(_OWORD *)(a2 + 128) = v30;
  *(_OWORD *)(a2 + 144) = v17;
  *(_OWORD *)(a2 + 160) = v32;
  *(_QWORD *)(a2 + 176) = v33;
  v18 = v27;
  *(_OWORD *)(a2 + 64) = v26;
  *(_OWORD *)(a2 + 80) = v18;
  v19 = v29;
  *(_OWORD *)(a2 + 96) = v28;
  *(_OWORD *)(a2 + 112) = v19;
  v20 = v23[1];
  *(_OWORD *)a2 = v23[0];
  *(_OWORD *)(a2 + 16) = v20;
  result = *(double *)&v24;
  v22 = v25;
  *(_OWORD *)(a2 + 32) = v24;
  *(_OWORD *)(a2 + 48) = v22;
  return result;
}

uint64_t sub_1002ED480@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE *v23;
  uint64_t v24;
  double v25;
  uint64_t v26;
  _BYTE *v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  __n128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(_QWORD, _QWORD, _QWORD, __n128);
  char v42;
  uint64_t v43;
  __n128 v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void (*v50)(_QWORD, _QWORD, _QWORD, __n128);
  uint64_t v51;
  int v52;
  int v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  uint64_t KeyPath;
  uint64_t v58;
  id v59;
  _QWORD *v60;
  __n128 v61;
  uint64_t v62;
  void (*v63)(_QWORD, __n128);
  _BYTE *v64;
  uint64_t v65;
  void (*v66)(_BYTE *, uint64_t);
  uint64_t v67;
  uint64_t v68;
  __n128 v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t *v74;
  unint64_t v75;
  unint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char v87;
  char v88;
  uint64_t v89;
  void *v90;
  char v91;
  uint64_t v92;
  uint64_t v93;
  id v94;
  _QWORD *v95;
  __n128 v96;
  uint64_t v97;
  _BYTE *v98;
  unsigned int *v99;
  uint64_t v100;
  uint64_t v101;
  _BYTE *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  _BYTE *v107;
  uint64_t v108;
  unint64_t v109;
  unint64_t v110;
  uint64_t result;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  __n128 v115;
  _BYTE v116[12];
  int v117;
  uint64_t v118;
  void (*v119)(_QWORD, _QWORD, _QWORD, __n128);
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  _BYTE *v123;
  uint64_t v124;
  _BYTE *v125;
  uint64_t v126;
  uint64_t v127;
  _BYTE *v128;
  _BYTE *v129;
  _BYTE *v130;
  uint64_t v131;
  uint64_t v132;
  _QWORD *v133;
  _BYTE *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;

  v126 = a2;
  v138 = a3;
  v4 = type metadata accessor for _BlendModeEffect(0);
  __chkstk_darwin(v4);
  v6 = &v116[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = type metadata accessor for BlendMode(0);
  v131 = *(_QWORD *)(v7 - 8);
  v132 = v7;
  __chkstk_darwin(v7);
  v129 = &v116[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v135 = type metadata accessor for ColorScheme(0);
  v127 = *(_QWORD *)(v135 - 8);
  __chkstk_darwin(v135);
  v134 = &v116[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v10);
  v133 = &v116[-v11];
  v137 = sub_10004CFD4(&qword_1009D8E98);
  __chkstk_darwin(v137);
  v128 = &v116[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v13);
  v130 = &v116[-v14];
  v136 = sub_10004CFD4(&qword_1009D8EA0);
  __chkstk_darwin(v136);
  v16 = &v116[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v17 = sub_10004CFD4(&qword_1009CEDD0);
  __chkstk_darwin(v17);
  v19 = &v116[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v20 = type metadata accessor for Font.TextStyle(0);
  v21 = *(_QWORD *)(v20 - 8);
  __chkstk_darwin(v20);
  v23 = &v116[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v24 = sub_10004CFD4(&qword_1009D8EA8);
  v25 = __chkstk_darwin(v24);
  v27 = &v116[-((v26 + 15) & 0xFFFFFFFFFFFFFFF0)];
  LOBYTE(v26) = *(_BYTE *)(a1 + 16);
  v28 = *(_QWORD *)(a1 + 24);
  v29 = *(_QWORD *)(a1 + 32);
  if ((v26 & 1) == 0)
  {
    (*(void (**)(_BYTE *, _QWORD, uint64_t, double))(v21 + 104))(v23, enum case for Font.TextStyle.body(_:), v20, v25);
    v70 = type metadata accessor for Font.Design(0);
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v70 - 8) + 56))(v19, 1, 1, v70);
    swift_bridgeObjectRetain(v29);
    v71 = static Font.system(_:design:weight:)(v23, v19, 0, 1);
    sub_100010960((uint64_t)v19, &qword_1009CEDD0);
    (*(void (**)(_BYTE *, uint64_t))(v21 + 8))(v23, v20);
    v72 = Font.bold()(v71);
    swift_release(v71);
    v139 = v28;
    v140 = v29;
    v141 = v72;
    v73 = sub_1002EE42C();
    View.accessibilityHidden(_:)(1, &type metadata for SymbolImageView, v73);
    swift_release(v72);
    swift_bridgeObjectRelease(v29);
    v74 = &qword_1009D8EA8;
    sub_10000B5E4((uint64_t)v27, (uint64_t)v16, &qword_1009D8EA8);
    swift_storeEnumTagMultiPayload(v16, v136, 0);
    v75 = sub_1002EE3A8();
    v76 = sub_1002EE470();
    _ConditionalContent<>.init(storage:)(v16, v24, v137, v75, v76);
    v77 = (uint64_t)v27;
    return sub_100010960(v77, v74);
  }
  v123 = v6;
  v124 = v24;
  v125 = v16;
  v139 = v28;
  v140 = v29;
  v30 = sub_1001F2108();
  v31 = swift_bridgeObjectRetain(v29);
  v32 = Text.init<A>(_:)(&v139, &type metadata for String, v30, v31);
  v34 = v33;
  v36 = v35;
  v38 = v37 & 1;
  v39 = Text.bold()();
  v118 = v40;
  v119 = v41;
  v43 = v42 & 1;
  sub_1001F5B28(v32, v34, v38);
  v44 = swift_bridgeObjectRelease(v36);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, __n128))(v21 + 104))(v23, enum case for Font.TextStyle.body(_:), v20, v44);
  v45 = enum case for Font.Design.rounded(_:);
  v46 = type metadata accessor for Font.Design(0);
  v47 = *(_QWORD *)(v46 - 8);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v47 + 104))(v19, v45, v46);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v47 + 56))(v19, 0, 1, v46);
  v48 = static Font.system(_:design:weight:)(v23, v19, 0, 1);
  sub_100010960((uint64_t)v19, &qword_1009CEDD0);
  (*(void (**)(_BYTE *, uint64_t))(v21 + 8))(v23, v20);
  v49 = v118;
  v50 = v119;
  v121 = Text.font(_:)(v48, v39, v118, v43, v119);
  v120 = v51;
  v53 = v52;
  v122 = v54;
  swift_release(v48);
  sub_1001F5B28(v39, v49, v43);
  swift_bridgeObjectRelease(v50);
  v55 = v126;
  v56 = *(void **)v126;
  if (*(_QWORD *)v126)
  {
    v117 = v53;
    KeyPath = swift_getKeyPath(&unk_100719158);
    v58 = swift_getKeyPath(&unk_100719180);
    v59 = v56;
    v60 = v133;
    static Published.subscript.getter(v133, v59, KeyPath, v58);
    swift_release(KeyPath);
    v61 = swift_release(v58);
    v62 = v127;
    v63 = *(void (**)(_QWORD, __n128))(v127 + 104);
    v64 = v134;
    LODWORD(v118) = enum case for ColorScheme.light(_:);
    v65 = v135;
    v119 = (void (*)(_QWORD, _QWORD, _QWORD, __n128))v63;
    v63(v134, v61);
    LOBYTE(KeyPath) = static ColorScheme.== infix(_:_:)(v60, v64);
    v66 = *(void (**)(_BYTE *, uint64_t))(v62 + 8);
    v66(v64, v65);
    v66(v60, v65);
    v67 = v55;
    if ((KeyPath & 1) != 0)
      v68 = _s5Books11ChromeStyleC26_secondaryButtonLabelColor33_5E35E2CA450906E5027671B98D3F72C77Combine9PublishedVy7SwiftUI0G0VGvpfi_0();
    else
      v68 = _s5Books11ChromeStyleC20_pageBackgroundColor33_5E35E2CA450906E5027671B98D3F72C77Combine9PublishedVy7SwiftUI0F0VGvpfi_0();
    v78 = v68;
    v69.n128_u64[0] = 0x3FE3333333333333;
    v79 = Color.opacity(_:)(v68, v69);

    swift_release(v78);
    v80 = v117 & 1;
    v81 = v121;
    v82 = v120;
    v83 = v122;
    v84 = Text.foregroundColor(_:)(v79, v121, v120, v117 & 1, v122);
    v86 = v85;
    v88 = v87;
    v127 = v89;
    swift_release(v79);
    sub_1001F5B28(v81, v82, v80);
    swift_bridgeObjectRelease(v83);
    v90 = *(void **)v67;
    if (*(_QWORD *)v67)
    {
      v91 = v88 & 1;
      v92 = swift_getKeyPath(&unk_100719158);
      v93 = swift_getKeyPath(&unk_100719180);
      v94 = v90;
      v95 = v133;
      static Published.subscript.getter(v133, v94, v92, v93);
      swift_release(v92);
      v96 = swift_release(v93);
      v98 = v134;
      v97 = v135;
      v119(v134, v118, v135, v96);
      LOBYTE(v92) = static ColorScheme.== infix(_:_:)(v95, v98);
      v66(v98, v97);
      v66(v95, v97);
      v99 = (unsigned int *)&enum case for BlendMode.plusDarker(_:);
      v101 = v131;
      v100 = v132;
      if ((v92 & 1) == 0)
        v99 = (unsigned int *)&enum case for BlendMode.plusLighter(_:);
      v102 = v129;
      (*(void (**)(_BYTE *, _QWORD, uint64_t))(v131 + 104))(v129, *v99, v132);

      v103 = (uint64_t)v123;
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v101 + 16))(v123, v102, v100);
      v104 = v137;
      v105 = (uint64_t)v128;
      sub_1002EE328(v103, (uint64_t)&v128[*(int *)(v137 + 36)]);
      *(_QWORD *)v105 = v84;
      *(_QWORD *)(v105 + 8) = v86;
      *(_BYTE *)(v105 + 16) = v91;
      v106 = v127;
      *(_QWORD *)(v105 + 24) = v127;
      sub_1001F596C(v84, v86, v91);
      swift_bridgeObjectRetain(v106);
      sub_1002EE36C(v103);
      (*(void (**)(_BYTE *, uint64_t))(v101 + 8))(v102, v100);
      sub_1001F5B28(v84, v86, v91);
      swift_bridgeObjectRelease(v106);
      v74 = &qword_1009D8E98;
      v107 = v130;
      sub_100025B3C(v105, (uint64_t)v130, &qword_1009D8E98);
      v108 = (uint64_t)v125;
      sub_10000B5E4((uint64_t)v107, (uint64_t)v125, &qword_1009D8E98);
      swift_storeEnumTagMultiPayload(v108, v136, 1);
      v109 = sub_1002EE3A8();
      v110 = sub_1002EE470();
      _ConditionalContent<>.init(storage:)(v108, v124, v104, v109, v110);
      v77 = (uint64_t)v107;
      return sub_100010960(v77, v74);
    }
    v112 = *(_QWORD *)(v67 + 8);
  }
  else
  {
    v112 = *(_QWORD *)(v126 + 8);
  }
  v113 = type metadata accessor for ChromeStyle(0);
  v114 = sub_100008DB0((unint64_t *)&qword_1009D8330, type metadata accessor for ChromeStyle, (uint64_t)&protocol conformance descriptor for ChromeStyle);
  result = EnvironmentObject.error()(0, v112, v113, v114, v115);
  __break(1u);
  return result;
}

uint64_t sub_1002EDD1C()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 64));
  swift_release(*(_QWORD *)(v0 + 80));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 96));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 112));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 128));
  swift_unknownObjectWeakDestroy(v0 + 152);
  return swift_deallocObject(v0, 169, 7);
}

uint64_t sub_1002EDD78(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;

  *(_OWORD *)a2 = *(_OWORD *)a1;
  v4 = *(_OWORD *)(a1 + 48);
  v5 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(a2 + 32) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(a2 + 48) = v4;
  *(_OWORD *)(a2 + 16) = v5;
  v6 = *(_OWORD *)(a1 + 64);
  v7 = *(_OWORD *)(a1 + 80);
  v8 = *(_OWORD *)(a1 + 96);
  *(_QWORD *)(a2 + 112) = *(_QWORD *)(a1 + 112);
  *(_OWORD *)(a2 + 80) = v7;
  *(_OWORD *)(a2 + 96) = v8;
  *(_OWORD *)(a2 + 64) = v6;
  *(_OWORD *)(a2 + 120) = *(_OWORD *)(a1 + 120);
  swift_unknownObjectWeakTakeInit(a2 + 136, a1 + 136);
  *(_QWORD *)(a2 + 144) = *(_QWORD *)(a1 + 144);
  *(_BYTE *)(a2 + 152) = *(_BYTE *)(a1 + 152);
  return a2;
}

uint64_t sub_1002EDDF0()
{
  uint64_t v0;
  void (*v1)(uint64_t, _QWORD);
  uint64_t Strong;

  v1 = *(void (**)(uint64_t, _QWORD))(v0 + 72);
  Strong = swift_unknownObjectWeakLoadStrong(v0 + 152);
  v1(Strong, *(_QWORD *)(v0 + 160));
  return swift_unknownObjectRelease(Strong);
}

double sub_1002EDE30@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1002ED318(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_1002EDE38()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009D8DF0;
  if (!qword_1009D8DF0)
  {
    v1 = sub_100030B74(&qword_1009D8DE8);
    sub_1002EDEA4();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009D8DF0);
  }
  return result;
}

unint64_t sub_1002EDEA4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009D8DF8;
  if (!qword_1009D8DF8)
  {
    v1 = sub_100030B74(&qword_1009D8E00);
    sub_1002EDF28();
    sub_100030B34(&qword_1009D8E28, &qword_1009D8E30, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009D8DF8);
  }
  return result;
}

unint64_t sub_1002EDF28()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009D8E08;
  if (!qword_1009D8E08)
  {
    v1 = sub_100030B74(&qword_1009D8E10);
    sub_100030B34(&qword_1009D8E18, &qword_1009D8E20, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009D8E08);
  }
  return result;
}

unint64_t sub_1002EDFBC()
{
  unint64_t result;

  result = qword_1009D8E38;
  if (!qword_1009D8E38)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for CGFloat, &type metadata for CGFloat);
    atomic_store(result, (unint64_t *)&qword_1009D8E38);
  }
  return result;
}

unint64_t sub_1002EE000()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009D8E40;
  if (!qword_1009D8E40)
  {
    v1 = sub_100030B74(&qword_1009D8DA8);
    sub_1002EE084();
    sub_100030B34((unint64_t *)&unk_1009F1DE0, &qword_1009D8E58, (uint64_t)&protocol conformance descriptor for _ForegroundStyleModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009D8E40);
  }
  return result;
}

unint64_t sub_1002EE084()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009D8E48;
  if (!qword_1009D8E48)
  {
    v1 = sub_100030B74(&qword_1009D8DA0);
    sub_100030B34(&qword_1009D8E50, &qword_1009D8D98, (uint64_t)&protocol conformance descriptor for Button<A>);
    sub_100030B34((unint64_t *)&unk_1009D8AB0, &qword_1009DE690, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009D8E48);
  }
  return result;
}

unint64_t sub_1002EE120()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[4];

  result = qword_1009D8E68;
  if (!qword_1009D8E68)
  {
    v1 = sub_100030B74(&qword_1009D8DB8);
    v2[0] = sub_100030B74(&qword_1009D8DA8);
    v2[1] = sub_100030B74(&qword_1009D8D90);
    v2[2] = sub_1002EE000();
    v2[3] = sub_100030B34(&qword_1009D8E60, &qword_1009D8D90, (uint64_t)&unk_100719228);
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>, 1);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009D8E68);
  }
  return result;
}

uint64_t sub_1002EE1F8()
{
  return sub_10028156C(&qword_1009D8E78, &qword_1009D8DC8, (void (*)(void))sub_1002EE21C, (void (*)(void))sub_1002EE2A0);
}

unint64_t sub_1002EE21C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009D8E80;
  if (!qword_1009D8E80)
  {
    v1 = sub_100030B74(&qword_1009D8DC0);
    sub_1002EE120();
    sub_100008DB0(qword_1009D4760, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009D8E80);
  }
  return result;
}

unint64_t sub_1002EE2A0()
{
  unint64_t result;

  result = qword_1009D8E88;
  if (!qword_1009D8E88)
  {
    result = swift_getWitnessTable(&unk_100717C1C, &type metadata for AccessibilityOptionalLabel);
    atomic_store(result, (unint64_t *)&qword_1009D8E88);
  }
  return result;
}

unint64_t sub_1002EE2E4()
{
  unint64_t result;

  result = qword_1009D8E90;
  if (!qword_1009D8E90)
  {
    result = swift_getWitnessTable(&unk_100717BCC, &type metadata for AccessibilityOptionalHint);
    atomic_store(result, (unint64_t *)&qword_1009D8E90);
  }
  return result;
}

uint64_t sub_1002EE328(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for _BlendModeEffect(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1002EE36C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for _BlendModeEffect(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1002EE3A8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009D8EB0;
  if (!qword_1009D8EB0)
  {
    v1 = sub_100030B74(&qword_1009D8EA8);
    sub_1002EE42C();
    sub_100008DB0(qword_1009D4760, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009D8EB0);
  }
  return result;
}

unint64_t sub_1002EE42C()
{
  unint64_t result;

  result = qword_1009D8EB8;
  if (!qword_1009D8EB8)
  {
    result = swift_getWitnessTable(&unk_1007304B0, &type metadata for SymbolImageView);
    atomic_store(result, (unint64_t *)&qword_1009D8EB8);
  }
  return result;
}

unint64_t sub_1002EE470()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009D8EC0;
  if (!qword_1009D8EC0)
  {
    v1 = sub_100030B74(&qword_1009D8E98);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009D8EC0);
  }
  return result;
}

uint64_t sub_1002EE4E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_allocateGenericValueMetadata(a1, a2, a3, 40);
}

void sub_1002EE4EC(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD v8[6];

  sub_1002EF2A8(319);
  if (v3 <= 0x3F)
  {
    v8[0] = *(_QWORD *)(v2 - 8) + 64;
    v8[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v8[2] = (char *)&value witness table for Builtin.Int64 + 64;
    v8[3] = (char *)&value witness table for Builtin.Int64 + 64;
    v4 = swift_checkMetadataState(319, *(_QWORD *)(a1 + 16));
    if (v5 <= 0x3F)
    {
      v8[4] = *(_QWORD *)(v4 - 8) + 64;
      v6 = type metadata accessor for RoundedRectangle(319);
      if (v7 <= 0x3F)
      {
        v8[5] = *(_QWORD *)(v6 - 8) + 64;
        swift_initStructMetadata(a1, 0, 6, v8, a1 + 32);
      }
    }
  }
}

uint64_t *sub_1002EE5AC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int v15;
  uint64_t v18;
  void (*v19)(uint64_t *, uint64_t *, uint64_t);
  uint64_t *v20;
  void **v21;
  void *v22;
  _QWORD *v23;
  _QWORD *v24;
  _QWORD *v25;
  _QWORD *v26;
  _QWORD *v27;
  unint64_t v28;
  unint64_t v29;
  void (*v30)(unint64_t, unint64_t, uint64_t);
  id v31;
  _OWORD *v32;
  _OWORD *v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v37 = sub_10004CFD4(qword_1009D8EC8);
  v4 = *(_QWORD *)(v37 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  v39 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v39 - 8);
  v7 = *(_DWORD *)(v6 + 80);
  v8 = v7 + 8;
  v9 = *(_QWORD *)(v6 + 64);
  v10 = type metadata accessor for RoundedCornerStyle(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_DWORD *)(v11 + 80);
  v13 = v12 | 7;
  v38 = v9;
  v14 = v12 + 16;
  v15 = v12 | *(_DWORD *)(v4 + 80) & 0xF8 | v7;
  if (v15 > 7
    || ((*(_DWORD *)(v11 + 80) | *(_DWORD *)(v4 + 80) | v7) & 0x100000) != 0
    || ((v12 + 16) & ~v12)
     + *(_QWORD *)(v11 + 64)
     + (((v12 | 7)
       + v9
       + ((v7
         + 8
         + ((((((v5 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & ~(unint64_t)v7)) & ~(v12 | 7)) > 0x18)
  {
    v18 = *a2;
    *a1 = *a2;
    v20 = (uint64_t *)(v18 + (((v15 | 7) + 16) & ~(unint64_t)(v15 | 7)));
    swift_retain(v18);
  }
  else
  {
    v35 = ~v12;
    v19 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(v4 + 16);
    v20 = a1;
    v36 = v10;
    v19(a1, a2, v37);
    v21 = (void **)(((unint64_t)a2 + v5 + 7) & 0xFFFFFFFFFFFFF8);
    v22 = *v21;
    v23 = (_QWORD *)(((unint64_t)a1 + v5 + 7) & 0xFFFFFFFFFFFFF8);
    *v23 = *v21;
    v24 = (_QWORD *)(((unint64_t)v21 + 15) & 0xFFFFFFFFFFFFF8);
    v25 = (_QWORD *)(((unint64_t)v23 + 15) & 0xFFFFFFFFFFFFF8);
    *v25 = *v24;
    v26 = (_QWORD *)(((unint64_t)v25 + 15) & 0xFFFFFFFFFFFFFFF8);
    v27 = (_QWORD *)(((unint64_t)v24 + 15) & 0xFFFFFFFFFFFFFFF8);
    *v26 = *v27;
    v28 = ((unint64_t)v26 + v8) & ~(unint64_t)v7;
    v29 = ((unint64_t)v27 + v8) & ~(unint64_t)v7;
    v30 = *(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 16);
    v31 = v22;
    v30(v28, v29, v39);
    v32 = (_OWORD *)((v28 + v38 + v13) & ~v13);
    v33 = (_OWORD *)((v29 + v38 + v13) & ~v13);
    *v32 = *v33;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v11 + 16))(((unint64_t)v32 + v14) & v35, ((unint64_t)v33 + v14) & v35, v36);
  }
  return v20;
}

uint64_t sub_1002EE7B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  id *v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v4 = sub_10004CFD4(qword_1009D8EC8);
  v5 = *(_QWORD *)(v4 - 8);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  v6 = (id *)((a1 + *(_QWORD *)(v5 + 64) + 7) & 0xFFFFFFFFFFFFFFF8);

  v7 = ((((unint64_t)v6 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  v8 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  v9 = (v7 + *(unsigned __int8 *)(v8 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  (*(void (**)(unint64_t))(v8 + 8))(v9);
  v10 = *(_QWORD *)(v8 + 64);
  v11 = type metadata accessor for RoundedCornerStyle(0);
  v12 = *(_QWORD *)(v11 - 8);
  return (*(uint64_t (**)(unint64_t, uint64_t))(v12 + 8))((*(unsigned __int8 *)(v12 + 80)+ ((v9 + v10 + (*(unsigned __int8 *)(v12 + 80) | 7)) & ~(*(unsigned __int8 *)(v12 + 80) | 7))+ 16) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80), v11);
}

uint64_t sub_1002EE878(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  void **v10;
  void *v11;
  _QWORD *v12;
  _QWORD *v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t, uint64_t, uint64_t);
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _OWORD *v28;
  _OWORD *v29;

  v6 = sub_10004CFD4(qword_1009D8EC8);
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(a1, a2, v6);
  v8 = *(_QWORD *)(v7 + 64) + 7;
  v9 = (_QWORD *)((v8 + a1) & 0xFFFFFFFFFFFFFFF8);
  v10 = (void **)((v8 + a2) & 0xFFFFFFFFFFFFFFF8);
  v11 = *v10;
  *v9 = *v10;
  v12 = (_QWORD *)(((unint64_t)v9 + 15) & 0xFFFFFFFFFFFFF8);
  v13 = (_QWORD *)(((unint64_t)v10 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v12 = *v13;
  v14 = (_QWORD *)(((unint64_t)v12 + 15) & 0xFFFFFFFFFFFFFFF8);
  v15 = (_QWORD *)(((unint64_t)v13 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v14 = *v15;
  v16 = *(_QWORD *)(a3 + 16);
  v17 = *(_QWORD *)(v16 - 8);
  v18 = *(unsigned __int8 *)(v17 + 80);
  v19 = ((unint64_t)v14 + v18 + 8) & ~v18;
  v20 = ((unint64_t)v15 + v18 + 8) & ~v18;
  v21 = *(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 16);
  v22 = v11;
  v21(v19, v20, v16);
  v23 = *(_QWORD *)(v17 + 64);
  v24 = type metadata accessor for RoundedCornerStyle(0);
  v25 = *(_QWORD *)(v24 - 8);
  v26 = *(unsigned __int8 *)(v25 + 80);
  v27 = (v26 | 7) + v23;
  v28 = (_OWORD *)((v27 + v19) & ~(v26 | 7));
  v29 = (_OWORD *)((v27 + v20) & ~(v26 | 7));
  *v28 = *v29;
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v25 + 16))(((unint64_t)v28 + v26 + 16) & ~v26, ((unint64_t)v29 + v26 + 16) & ~v26, v24);
  return a1;
}

uint64_t sub_1002EE9A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  void *v11;
  void *v12;
  id v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;

  v6 = sub_10004CFD4(qword_1009D8EC8);
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 24))(a1, a2, v6);
  v8 = *(_QWORD *)(v7 + 64) + 7;
  v9 = (v8 + a1) & 0xFFFFFFFFFFFFFFF8;
  v10 = (v8 + a2) & 0xFFFFFFFFFFFFFFF8;
  v11 = *(void **)v10;
  v10 += 15;
  v12 = *(void **)v9;
  *(_QWORD *)v9 = v11;
  v9 += 15;
  v13 = v11;

  *(_QWORD *)(v9 & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(v10 & 0xFFFFFFFFFFFFF8);
  v14 = (_QWORD *)(((v9 & 0xFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
  v15 = (_QWORD *)(((v10 & 0xFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
  *v14 = *v15;
  v16 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v17 = *(unsigned __int8 *)(v16 + 80);
  v18 = ((unint64_t)v14 + v17 + 8) & ~v17;
  v19 = ((unint64_t)v15 + v17 + 8) & ~v17;
  (*(void (**)(uint64_t, uint64_t))(v16 + 24))(v18, v19);
  v20 = *(_QWORD *)(v16 + 64);
  v21 = type metadata accessor for RoundedCornerStyle(0);
  v22 = *(_QWORD *)(v21 - 8);
  v23 = *(unsigned __int8 *)(v22 + 80);
  v24 = (v23 | 7) + v20;
  v25 = (_QWORD *)((v24 + v18) & ~(v23 | 7));
  v26 = (_QWORD *)((v24 + v19) & ~(v23 | 7));
  *v25 = *v26;
  v25[1] = v26[1];
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v22 + 24))(((unint64_t)v25 + v23 + 16) & ~v23, ((unint64_t)v26 + v23 + 16) & ~v23, v21);
  return a1;
}

uint64_t sub_1002EEAD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  _QWORD *v11;
  _QWORD *v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _OWORD *v24;
  _OWORD *v25;

  v6 = sub_10004CFD4(qword_1009D8EC8);
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))(a1, a2, v6);
  v8 = *(_QWORD *)(v7 + 64) + 7;
  v9 = (_QWORD *)((v8 + a1) & 0xFFFFFFFFFFFFFFF8);
  v10 = (_QWORD *)((v8 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v9 = *v10;
  v11 = (_QWORD *)(((unint64_t)v9 + 15) & 0xFFFFFFFFFFFFF8);
  v12 = (_QWORD *)(((unint64_t)v10 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v11 = *v12;
  v13 = (_QWORD *)(((unint64_t)v11 + 15) & 0xFFFFFFFFFFFFFFF8);
  v14 = (_QWORD *)(((unint64_t)v12 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v13 = *v14;
  v15 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v16 = *(unsigned __int8 *)(v15 + 80);
  v17 = ((unint64_t)v13 + v16 + 8) & ~v16;
  v18 = ((unint64_t)v14 + v16 + 8) & ~v16;
  (*(void (**)(uint64_t, uint64_t))(v15 + 32))(v17, v18);
  v19 = *(_QWORD *)(v15 + 64);
  v20 = type metadata accessor for RoundedCornerStyle(0);
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(unsigned __int8 *)(v21 + 80);
  v23 = (v22 | 7) + v19;
  v24 = (_OWORD *)((v23 + v17) & ~(v22 | 7));
  v25 = (_OWORD *)((v23 + v18) & ~(v22 | 7));
  *v24 = *v25;
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v21 + 32))(((unint64_t)v24 + v22 + 16) & ~v22, ((unint64_t)v25 + v22 + 16) & ~v22, v20);
  return a1;
}

uint64_t sub_1002EEBEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  void *v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;

  v6 = sub_10004CFD4(qword_1009D8EC8);
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 40))(a1, a2, v6);
  v8 = *(_QWORD *)(v7 + 64) + 7;
  v9 = (v8 + a1) & 0xFFFFFFFFFFFFFFF8;
  v10 = (v8 + a2) & 0xFFFFFFFFFFFFFFF8;
  v11 = *(_QWORD *)v10;
  v10 += 15;
  v12 = *(void **)v9;
  *(_QWORD *)v9 = v11;
  v9 += 15;

  *(_QWORD *)(v9 & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(v10 & 0xFFFFFFFFFFFFF8);
  v13 = (_QWORD *)(((v9 & 0xFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
  v14 = (_QWORD *)(((v10 & 0xFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
  *v13 = *v14;
  v15 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v16 = *(unsigned __int8 *)(v15 + 80);
  v17 = ((unint64_t)v13 + v16 + 8) & ~v16;
  v18 = ((unint64_t)v14 + v16 + 8) & ~v16;
  (*(void (**)(uint64_t, uint64_t))(v15 + 40))(v17, v18);
  v19 = *(_QWORD *)(v15 + 64);
  v20 = type metadata accessor for RoundedCornerStyle(0);
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(unsigned __int8 *)(v21 + 80);
  v23 = (v22 | 7) + v19;
  v24 = (_QWORD *)((v23 + v17) & ~(v22 | 7));
  v25 = (_QWORD *)((v23 + v18) & ~(v22 | 7));
  *v24 = *v25;
  v24[1] = v25[1];
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v21 + 40))(((unint64_t)v24 + v22 + 16) & ~v22, ((unint64_t)v25 + v22 + 16) & ~v22, v20);
  return a1;
}

uint64_t sub_1002EED14(unint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int v16;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  int v28;
  unsigned int v30;
  int v31;
  int v32;
  uint64_t (*v33)(unint64_t, uint64_t, uint64_t);
  unint64_t v34;
  uint64_t *v35;
  uint64_t v36;

  v6 = sub_10004CFD4(qword_1009D8EC8);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned int *)(v7 + 84);
  v9 = *(_QWORD *)(a3 + 16);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned int *)(v10 + 84);
  if (v8 <= v11)
    v12 = *(_DWORD *)(v10 + 84);
  else
    v12 = *(_DWORD *)(v7 + 84);
  v13 = type metadata accessor for RoundedCornerStyle(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(unsigned int *)(v14 + 84);
  if (v12 <= v15)
    v16 = *(_DWORD *)(v14 + 84);
  else
    v16 = v12;
  if (v16 <= 0x7FFFFFFF)
    v17 = 0x7FFFFFFF;
  else
    v17 = v16;
  if (!a2)
    return 0;
  v18 = v13;
  v19 = *(_QWORD *)(v7 + 64);
  v20 = *(unsigned __int8 *)(v10 + 80);
  v21 = v20 + 8;
  v22 = *(unsigned __int8 *)(v14 + 80);
  v23 = v22 | 7;
  v24 = (v22 | 7) + *(_QWORD *)(v10 + 64);
  v25 = v22 + 16;
  if (a2 <= v17)
    goto LABEL_30;
  v26 = (v25 & ~v22)
      + *(_QWORD *)(v14 + 64)
      + ((v24
        + ((v21 + ((((((v19 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v20)) & ~v23);
  v27 = 8 * v26;
  if (v26 > 3)
    goto LABEL_13;
  v30 = ((a2 - v17 + ~(-1 << v27)) >> v27) + 1;
  if (HIWORD(v30))
  {
    v28 = *(_DWORD *)(a1 + v26);
    if (v28)
      goto LABEL_21;
  }
  else
  {
    if (v30 <= 0xFF)
    {
      if (v30 < 2)
        goto LABEL_30;
LABEL_13:
      v28 = *(unsigned __int8 *)(a1 + v26);
      if (!*(_BYTE *)(a1 + v26))
        goto LABEL_30;
LABEL_21:
      v31 = (v28 - 1) << v27;
      if (v26 > 3)
        v31 = 0;
      if ((_DWORD)v26)
      {
        if (v26 <= 3)
          v32 = v26;
        else
          v32 = 4;
        __asm { BR              X12 }
      }
      return v17 + v31 + 1;
    }
    v28 = *(unsigned __int16 *)(a1 + v26);
    if (*(_WORD *)(a1 + v26))
      goto LABEL_21;
  }
LABEL_30:
  if ((_DWORD)v8 == v17)
  {
    v33 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v7 + 48);
    v34 = a1;
    v15 = v8;
    v18 = v6;
    return v33(v34, v15, v18);
  }
  v35 = (uint64_t *)((a1 + v19 + 7) & 0xFFFFFFFFFFFFFFF8);
  if ((v16 & 0x80000000) != 0)
  {
    v34 = (v21 + (((((unint64_t)v35 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v20;
    if ((_DWORD)v11 == v17)
    {
      v33 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v10 + 48);
      v15 = v11;
      v18 = v9;
    }
    else
    {
      v34 = (v25 + ((v24 + v34) & ~v23)) & ~v22;
      v33 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v14 + 48);
    }
    return v33(v34, v15, v18);
  }
  v36 = *v35;
  if ((unint64_t)*v35 >= 0xFFFFFFFF)
    LODWORD(v36) = -1;
  return (v36 + 1);
}

void sub_1002EEF98(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;
  unsigned int v12;
  unsigned int v13;
  uint64_t v14;
  size_t v15;
  unsigned int v16;
  int v17;
  unsigned int v18;
  int v19;

  v8 = *(_QWORD *)(sub_10004CFD4(qword_1009D8EC8) - 8);
  v9 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v8 + 84) <= *(_DWORD *)(v9 + 84))
    v10 = *(_DWORD *)(v9 + 84);
  else
    v10 = *(_DWORD *)(v8 + 84);
  v11 = *(_QWORD *)(type metadata accessor for RoundedCornerStyle(0) - 8);
  if (v10 <= *(_DWORD *)(v11 + 84))
    v12 = *(_DWORD *)(v11 + 84);
  else
    v12 = v10;
  if (v12 <= 0x7FFFFFFF)
    v13 = 0x7FFFFFFF;
  else
    v13 = v12;
  v14 = *(unsigned __int8 *)(v11 + 80);
  v15 = ((v14 + 16) & ~v14)
      + *(_QWORD *)(v11 + 64)
      + (((v14 | 7)
        + *(_QWORD *)(v9 + 64)
        + ((*(unsigned __int8 *)(v9 + 80)
          + 8
          + ((((((*(_QWORD *)(v8 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))) & ~(v14 | 7));
  if (a3 <= v13)
  {
    v16 = 0;
  }
  else if (v15 <= 3)
  {
    v18 = ((a3 - v13 + ~(-1 << (8 * v15))) >> (8 * v15)) + 1;
    if (HIWORD(v18))
    {
      v16 = &dword_100000004;
    }
    else if (v18 >= 0x100)
    {
      v16 = 2;
    }
    else
    {
      v16 = v18 > 1;
    }
  }
  else
  {
    v16 = &_mh_execute_header.magic + 1;
  }
  if (v13 < a2)
  {
    v17 = ~v13 + a2;
    if (v15 < 4)
    {
      if ((_DWORD)v15)
      {
        v19 = v17 & ~(-1 << (8 * v15));
        bzero(a1, v15);
        if ((_DWORD)v15 == 3)
        {
          *(_WORD *)a1 = v19;
          a1[2] = BYTE2(v19);
        }
        else if ((_DWORD)v15 == 2)
        {
          *(_WORD *)a1 = v19;
        }
        else
        {
          *a1 = v19;
        }
      }
    }
    else
    {
      bzero(a1, v15);
      *(_DWORD *)a1 = v17;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X4 }
}

uint64_t type metadata accessor for REActionMenuButtonStyle(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10000D3D4(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for REActionMenuButtonStyle);
}

void sub_1002EF2A8(uint64_t a1)
{
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1009D8F50)
  {
    v2 = sub_1002EDFBC();
    v3 = type metadata accessor for ScaledMetric(a1, &type metadata for CGFloat, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1009D8F50);
  }
}

uint64_t sub_1002EF300()
{
  return sub_10028156C(&qword_1009D8F58, &qword_1009D8DE0, (void (*)(void))sub_1002EF334, (void (*)(void))sub_10024C5D0);
}

unint64_t sub_1002EF334()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009D8F60;
  if (!qword_1009D8F60)
  {
    v1 = sub_100030B74(&qword_1009D8DD8);
    sub_10028156C(&qword_1009D8E70, &qword_1009D8DD0, (void (*)(void))sub_1002EE1F8, (void (*)(void))sub_1002EE2E4);
    sub_100008DB0(qword_1009D4760, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009D8F60);
  }
  return result;
}

uint64_t sub_1002EF3D8(uint64_t a1, uint64_t a2)
{
  __int128 v3;

  v3 = *(_OWORD *)(a2 + 16);
  return swift_getOpaqueTypeConformance2(&v3, &unk_10086AF34, 1);
}

uint64_t sub_1002EF40C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1002EC7A8(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

unint64_t sub_1002EF418()
{
  unint64_t result;

  result = qword_1009D8F70;
  if (!qword_1009D8F70)
  {
    result = swift_getWitnessTable(&unk_100737FD8, &type metadata for MenuButtonMaterialView);
    atomic_store(result, (unint64_t *)&qword_1009D8F70);
  }
  return result;
}

uint64_t sub_1002EF45C(uint64_t *a1, double a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t TupleTypeMetadata2;
  uint64_t v6;
  uint64_t WitnessTable;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;

  v2 = *a1;
  v3 = type metadata accessor for ButtonStyleConfiguration.Label(255, a2);
  v4 = type metadata accessor for ModifiedContent(255, v2, &type metadata for _FrameLayout);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(255, v3, v4, 0, 0);
  v6 = type metadata accessor for TupleView(255, TupleTypeMetadata2);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v6);
  v8 = type metadata accessor for HStack(255, v6, WitnessTable);
  v9 = type metadata accessor for ModifiedContent(255, v8, &type metadata for _PaddingLayout);
  v10 = type metadata accessor for ModifiedContent(255, v9, &type metadata for _PaddingLayout);
  v11 = type metadata accessor for ModifiedContent(255, v10, &type metadata for _PaddingLayout);
  v12 = type metadata accessor for ModifiedContent(255, v11, &type metadata for _OpacityEffect);
  v13 = type metadata accessor for ModifiedContent(255, v12, &type metadata for _FrameLayout);
  v14 = type metadata accessor for ModifiedContent(255, v13, &type metadata for _FlexFrameLayout);
  v15 = sub_100030B74(&qword_1009D8F68);
  v16 = type metadata accessor for ModifiedContent(255, v14, v15);
  v17 = sub_100030B74(&qword_1009F4140);
  v18 = type metadata accessor for ModifiedContent(255, v16, v17);
  v20 = type metadata accessor for ModifiedContent(255, v18, &type metadata for _ScaleEffect);
  swift_getWitnessTable(&protocol conformance descriptor for HStack<A>, v8);
  swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v9);
  swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v10);
  swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v11);
  swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v12);
  swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v13);
  swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v14);
  sub_100030B34(&qword_1009D8F78, &qword_1009D8F68, (uint64_t)&protocol conformance descriptor for _BackgroundModifier<A>);
  swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v16);
  sub_100030B34(&qword_1009D5178, &qword_1009F4140, (uint64_t)&protocol conformance descriptor for _ClipEffect<A>);
  swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v18);
  return swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v20);
}

uint64_t sub_1002EF724()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE *v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE *v25;
  uint64_t v26;
  uint64_t v27;
  unsigned int (*v28)(uint64_t, uint64_t, uint64_t);
  _BYTE *v29;
  char v30;
  _BYTE *v31;
  uint64_t v32;
  void (*v33)(_BYTE *, uint64_t);
  _BYTE *v34;
  _BYTE *v35;
  _BYTE *v36;
  uint64_t v37;
  _BYTE *v38;
  _BYTE *v39;
  uint64_t v40;
  void (*v41)(_BYTE *, uint64_t);
  _BYTE v43[4];
  int v44;
  _BYTE *v45;
  _BYTE *v46;
  void (*v47)(_BYTE *, uint64_t, uint64_t);
  void (*v48)(_BYTE *, _QWORD, uint64_t, uint64_t);
  uint64_t v49;
  uint64_t v50;
  _BYTE *v51;
  _BYTE *v52;
  _BYTE *v53;
  uint64_t v54;
  _BYTE *v55;

  v1 = type metadata accessor for SampleHeaderView(0);
  __chkstk_darwin(v1);
  v55 = &v43[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v3 = type metadata accessor for UserInterfaceSizeClass(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v46 = &v43[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = sub_10004CFD4(&qword_1009D3C08);
  __chkstk_darwin(v6);
  v52 = &v43[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v8);
  v10 = &v43[-v9];
  v11 = sub_10004CFD4((uint64_t *)&unk_1009D8210);
  __chkstk_darwin(v11);
  v45 = &v43[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v13);
  v53 = &v43[-v14];
  __chkstk_darwin(v15);
  v51 = &v43[-v16];
  __chkstk_darwin(v17);
  v19 = &v43[-v18];
  __chkstk_darwin(v20);
  v22 = &v43[-v21];
  __chkstk_darwin(v23);
  v25 = &v43[-v24];
  v50 = v1;
  v54 = v0;
  sub_100667DCC((uint64_t)&v43[-v24]);
  v26 = enum case for UserInterfaceSizeClass.regular(_:);
  v47 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v4 + 104);
  v47(v22, enum case for UserInterfaceSizeClass.regular(_:), v3);
  v48 = *(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v4 + 56);
  v48(v22, 0, 1, v3);
  v49 = v6;
  v27 = (uint64_t)&v10[*(int *)(v6 + 48)];
  sub_10000B5E4((uint64_t)v25, (uint64_t)v10, (uint64_t *)&unk_1009D8210);
  sub_10000B5E4((uint64_t)v22, v27, (uint64_t *)&unk_1009D8210);
  v28 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  if (v28((uint64_t)v10, 1, v3) == 1)
  {
    sub_100010960((uint64_t)v22, (uint64_t *)&unk_1009D8210);
    sub_100010960((uint64_t)v25, (uint64_t *)&unk_1009D8210);
    if (v28(v27, 1, v3) == 1)
    {
      sub_100010960((uint64_t)v10, (uint64_t *)&unk_1009D8210);
      v29 = v55;
      sub_10002CD84(v54, (uint64_t)v55, type metadata accessor for SampleHeaderView);
      goto LABEL_9;
    }
    goto LABEL_6;
  }
  sub_10000B5E4((uint64_t)v10, (uint64_t)v19, (uint64_t *)&unk_1009D8210);
  if (v28(v27, 1, v3) == 1)
  {
    sub_100010960((uint64_t)v22, (uint64_t *)&unk_1009D8210);
    sub_100010960((uint64_t)v25, (uint64_t *)&unk_1009D8210);
    (*(void (**)(_BYTE *, uint64_t))(v4 + 8))(v19, v3);
LABEL_6:
    sub_100010960((uint64_t)v10, &qword_1009D3C08);
    v29 = v55;
    sub_10002CD84(v54, (uint64_t)v55, type metadata accessor for SampleHeaderView);
    goto LABEL_7;
  }
  v31 = v46;
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v4 + 32))(v46, v27, v3);
  v32 = sub_100008DB0((unint64_t *)&qword_1009D87D0, (uint64_t (*)(uint64_t))&type metadata accessor for UserInterfaceSizeClass, (uint64_t)&protocol conformance descriptor for UserInterfaceSizeClass);
  v44 = dispatch thunk of static Equatable.== infix(_:_:)(v19, v31, v3, v32);
  v33 = *(void (**)(_BYTE *, uint64_t))(v4 + 8);
  v33(v31, v3);
  sub_100010960((uint64_t)v22, (uint64_t *)&unk_1009D8210);
  sub_100010960((uint64_t)v25, (uint64_t *)&unk_1009D8210);
  v33(v19, v3);
  sub_100010960((uint64_t)v10, (uint64_t *)&unk_1009D8210);
  v29 = v55;
  sub_10002CD84(v54, (uint64_t)v55, type metadata accessor for SampleHeaderView);
  if ((v44 & 1) != 0)
  {
LABEL_9:
    v34 = v51;
    sub_100667DCC((uint64_t)v51);
    v35 = v53;
    v47(v53, v26, v3);
    v48(v35, 0, 1, v3);
    v36 = v52;
    v37 = (uint64_t)&v52[*(int *)(v49 + 48)];
    sub_10000B5E4((uint64_t)v34, (uint64_t)v52, (uint64_t *)&unk_1009D8210);
    sub_10000B5E4((uint64_t)v35, v37, (uint64_t *)&unk_1009D8210);
    if (v28((uint64_t)v36, 1, v3) == 1)
    {
      sub_100010960((uint64_t)v35, (uint64_t *)&unk_1009D8210);
      sub_100010960((uint64_t)v34, (uint64_t *)&unk_1009D8210);
      sub_10002C8F0((uint64_t)v29, type metadata accessor for SampleHeaderView);
      if (v28(v37, 1, v3) == 1)
      {
        sub_100010960((uint64_t)v36, (uint64_t *)&unk_1009D8210);
        v30 = 1;
        return v30 & 1;
      }
    }
    else
    {
      v38 = v45;
      sub_10000B5E4((uint64_t)v36, (uint64_t)v45, (uint64_t *)&unk_1009D8210);
      if (v28(v37, 1, v3) != 1)
      {
        v39 = v46;
        (*(void (**)(_BYTE *, uint64_t, uint64_t))(v4 + 32))(v46, v37, v3);
        v40 = sub_100008DB0((unint64_t *)&qword_1009D87D0, (uint64_t (*)(uint64_t))&type metadata accessor for UserInterfaceSizeClass, (uint64_t)&protocol conformance descriptor for UserInterfaceSizeClass);
        v30 = dispatch thunk of static Equatable.== infix(_:_:)(v38, v39, v3, v40);
        v41 = *(void (**)(_BYTE *, uint64_t))(v4 + 8);
        v41(v39, v3);
        sub_100010960((uint64_t)v53, (uint64_t *)&unk_1009D8210);
        sub_100010960((uint64_t)v34, (uint64_t *)&unk_1009D8210);
        sub_10002C8F0((uint64_t)v29, type metadata accessor for SampleHeaderView);
        v41(v38, v3);
        sub_100010960((uint64_t)v36, (uint64_t *)&unk_1009D8210);
        return v30 & 1;
      }
      sub_100010960((uint64_t)v53, (uint64_t *)&unk_1009D8210);
      sub_100010960((uint64_t)v34, (uint64_t *)&unk_1009D8210);
      sub_10002C8F0((uint64_t)v29, type metadata accessor for SampleHeaderView);
      (*(void (**)(_BYTE *, uint64_t))(v4 + 8))(v38, v3);
    }
    sub_100010960((uint64_t)v36, &qword_1009D3C08);
    v30 = 0;
    return v30 & 1;
  }
LABEL_7:
  sub_10002C8F0((uint64_t)v29, type metadata accessor for SampleHeaderView);
  v30 = 0;
  return v30 & 1;
}

uint64_t sub_1002EFD78@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t Strong;
  uint64_t v20;
  uint64_t KeyPath;
  uint64_t v22;
  CGFloat bottom;
  double v24;
  CGFloat right;
  uint64_t v26;
  uint64_t v27;
  uint64_t (*v28)(uint64_t, uint64_t, uint64_t);
  int v29;
  uint64_t v30;
  _BYTE *v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  void *v37;
  char v38;
  CGFloat v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  int v43;
  char v44;
  double v45;
  _BYTE *v46;
  uint64_t v47;
  void (*v48)(_BYTE *, uint64_t);
  _OWORD *v49;
  _BYTE *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v58;
  int *v59;
  char *v60;
  CGFloat *v61;
  CGFloat *v62;
  double *v63;
  char *v64;
  char *v65;
  uint64_t result;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  __n128 v70;
  _BYTE v71[4];
  int v72;
  _BYTE *v73;
  _BYTE *v74;
  CGFloat left;
  CGFloat v76;
  uint64_t v77;
  _BYTE *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char v82;
  char v83;
  uint64_t v84;

  v80 = a1;
  v79 = sub_10004CFD4(&qword_1009D9060);
  __chkstk_darwin(v79);
  v3 = &v71[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v77 = type metadata accessor for RoundedRectangle(0);
  __chkstk_darwin(v77);
  v78 = &v71[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = type metadata accessor for UserInterfaceSizeClass(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v73 = &v71[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = sub_10004CFD4(&qword_1009D3C08);
  __chkstk_darwin(v8);
  v10 = &v71[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = sub_10004CFD4((uint64_t *)&unk_1009D8210);
  __chkstk_darwin(v11);
  v74 = &v71[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v13);
  v15 = &v71[-v14];
  __chkstk_darwin(v16);
  v18 = &v71[-v17];
  v81 = v1;
  Strong = swift_weakLoadStrong(*(_QWORD *)(v1 + 8) + OBJC_IVAR____TtC5Books21SampleHeaderViewModel_readerViewModel);
  if (Strong)
  {
    v20 = Strong;
    KeyPath = swift_getKeyPath(&unk_100719320);
    v84 = v20;
    v22 = sub_100008DB0((unint64_t *)&qword_1009E4C90, type metadata accessor for BookReaderViewModel, (uint64_t)&unk_10072A198);
    ObservationRegistrar.access<A, B>(_:keyPath:)(&v84, KeyPath, v22);
    swift_release(KeyPath);
    bottom = *(double *)(v20 + OBJC_IVAR____TtC5Books19BookReaderViewModel__menuOuterMargin + 16);
    v24 = *(double *)(v20 + OBJC_IVAR____TtC5Books19BookReaderViewModel__menuOuterMargin + 24);
    left = *(double *)(v20 + OBJC_IVAR____TtC5Books19BookReaderViewModel__menuOuterMargin + 8);
    v76 = v24;
    swift_release(v20);
  }
  else
  {
    bottom = UIEdgeInsetsZero.bottom;
    right = UIEdgeInsetsZero.right;
    left = UIEdgeInsetsZero.left;
    v76 = right;
  }
  v26 = type metadata accessor for SampleHeaderView(0);
  sub_100667DCC((uint64_t)v18);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v6 + 104))(v15, enum case for UserInterfaceSizeClass.compact(_:), v5);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v15, 0, 1, v5);
  v27 = (uint64_t)&v10[*(int *)(v8 + 48)];
  sub_10000B5E4((uint64_t)v18, (uint64_t)v10, (uint64_t *)&unk_1009D8210);
  sub_10000B5E4((uint64_t)v15, v27, (uint64_t *)&unk_1009D8210);
  v28 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  if (v28((uint64_t)v10, 1, v5) == 1)
  {
    sub_100010960((uint64_t)v15, (uint64_t *)&unk_1009D8210);
    sub_100010960((uint64_t)v18, (uint64_t *)&unk_1009D8210);
    v29 = v28(v27, 1, v5);
    v30 = v81;
    if (v29 == 1)
    {
      sub_100010960((uint64_t)v10, (uint64_t *)&unk_1009D8210);
LABEL_19:
      v44 = 0;
      v38 = 0;
      v45 = *(double *)(v30 + *(int *)(v26 + 52));
      v43 = 1;
      v39 = v45;
LABEL_20:
      v49 = v78;
      v50 = &v78[*(int *)(v77 + 20)];
      v51 = enum case for RoundedCornerStyle.continuous(_:);
      v52 = type metadata accessor for RoundedCornerStyle(0);
      (*(void (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v52 - 8) + 104))(v50, v51, v52);
      __asm { FMOV            V0.2D, #16.0 }
      *v49 = _Q0;
      *v3 = swift_getKeyPath(&unk_100719390);
      v58 = sub_10004CFD4((uint64_t *)&unk_1009EE650);
      swift_storeEnumTagMultiPayload(v3, v58, 0);
      v59 = (int *)v79;
      v60 = (char *)v3 + *(int *)(v79 + 40);
      *(_QWORD *)v60 = 0;
      v60[8] = 1;
      v61 = (CGFloat *)((char *)v3 + v59[14]);
      *v61 = v39;
      *((_BYTE *)v61 + 8) = v38;
      v62 = (CGFloat *)((char *)v3 + v59[11]);
      *v62 = bottom;
      *((_BYTE *)v62 + 8) = 0;
      v63 = (double *)((char *)v3 + v59[15]);
      *v63 = v45;
      *((_BYTE *)v63 + 8) = v44;
      sub_1002F042C(v30, v43, (uint64_t)v49, (uint64_t)v3 + v59[9]);
      v64 = (char *)v3 + v59[12];
      *(_QWORD *)v64 = 0;
      v64[8] = 1;
      v65 = (char *)v3 + v59[13];
      *(_QWORD *)v65 = 0;
      v65[8] = 1;
      sub_100025B3C((uint64_t)v3, v80, &qword_1009D9060);
      return sub_10002C8F0((uint64_t)v49, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
    }
    goto LABEL_9;
  }
  v31 = v74;
  sub_10000B5E4((uint64_t)v10, (uint64_t)v74, (uint64_t *)&unk_1009D8210);
  if (v28(v27, 1, v5) == 1)
  {
    sub_100010960((uint64_t)v15, (uint64_t *)&unk_1009D8210);
    sub_100010960((uint64_t)v18, (uint64_t *)&unk_1009D8210);
    (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v31, v5);
    v30 = v81;
LABEL_9:
    sub_100010960((uint64_t)v10, &qword_1009D3C08);
    goto LABEL_10;
  }
  v46 = v73;
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v6 + 32))(v73, v27, v5);
  v47 = sub_100008DB0((unint64_t *)&qword_1009D87D0, (uint64_t (*)(uint64_t))&type metadata accessor for UserInterfaceSizeClass, (uint64_t)&protocol conformance descriptor for UserInterfaceSizeClass);
  v72 = dispatch thunk of static Equatable.== infix(_:_:)(v31, v46, v5, v47);
  v48 = *(void (**)(_BYTE *, uint64_t))(v6 + 8);
  v48(v46, v5);
  sub_100010960((uint64_t)v15, (uint64_t *)&unk_1009D8210);
  sub_100010960((uint64_t)v18, (uint64_t *)&unk_1009D8210);
  v48(v31, v5);
  sub_100010960((uint64_t)v10, (uint64_t *)&unk_1009D8210);
  v30 = v81;
  if ((v72 & 1) != 0)
    goto LABEL_19;
LABEL_10:
  v32 = v30 + *(int *)(v26 + 40);
  v33 = *(void **)v32;
  if (*(_QWORD *)v32)
  {
    v34 = swift_getKeyPath(&unk_100719348);
    v35 = swift_getKeyPath(&unk_100719370);
    v36 = v33;
    static Published.subscript.getter(&v83, v36, v34, v35);

    swift_release(v34);
    swift_release(v35);
    v37 = *(void **)v32;
    if (*(_QWORD *)v32)
    {
      v38 = v83 ^ 1;
      if (v83)
        v39 = left;
      else
        v39 = 0.0;
      v40 = swift_getKeyPath(&unk_100719348);
      v41 = swift_getKeyPath(&unk_100719370);
      v42 = v37;
      static Published.subscript.getter(&v82, v42, v40, v41);

      swift_release(v40);
      swift_release(v41);
      v43 = 0;
      v44 = v82;
      if (v82)
        v45 = 0.0;
      else
        v45 = v76;
      goto LABEL_20;
    }
  }
  v67 = *(_QWORD *)(v32 + 8);
  v68 = type metadata accessor for ChromeStyle(0);
  v69 = sub_100008DB0((unint64_t *)&qword_1009D8330, type metadata accessor for ChromeStyle, (uint64_t)&protocol conformance descriptor for ChromeStyle);
  result = EnvironmentObject.error()(0, v67, v68, v69, v70);
  __break(1u);
  return result;
}

uint64_t sub_1002F042C@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  _BYTE *v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE *v23;
  uint64_t v24;
  double v25;
  double v26;
  double v27;
  uint64_t v28;
  uint64_t v29;
  _OWORD *v30;
  __int128 v31;
  uint64_t v32;
  __n128 v33;
  _BYTE *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _BYTE *v39;
  uint64_t v40;
  uint64_t v41;
  _BYTE v43[12];
  int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _OWORD v51[3];

  v49 = a3;
  v50 = a4;
  v44 = a2;
  v5 = type metadata accessor for Material(0);
  v47 = *(_QWORD *)(v5 - 8);
  v48 = v5;
  __chkstk_darwin(v5);
  v7 = &v43[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = sub_10004CFD4(&qword_1009D9068);
  __chkstk_darwin(v8);
  v10 = &v43[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = sub_10004CFD4(&qword_1009D9070);
  __chkstk_darwin(v11);
  v13 = &v43[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v14 = sub_10004CFD4(&qword_1009D9078);
  __chkstk_darwin(v14);
  v16 = &v43[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v45 = sub_10004CFD4(&qword_1009D9080);
  __chkstk_darwin(v45);
  v18 = &v43[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v46 = sub_10004CFD4(&qword_1009D9088);
  __chkstk_darwin(v46);
  v20 = &v43[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v21);
  v23 = &v43[-v22];
  sub_1002F0804((uint64_t)v10);
  v24 = type metadata accessor for SampleHeaderView(0);
  v25 = *(double *)(a1 + *(int *)(v24 + 72));
  if ((v44 & 1) != 0)
  {
    v26 = *(double *)(a1 + *(int *)(v24 + 52)) + *(double *)(a1 + *(int *)(v24 + 52));
    if (*(double *)(a1 + 16) - v26 < v25)
      v25 = *(double *)(a1 + 16) - v26;
  }
  v27 = v25;
  v28 = static Alignment.center.getter(v24);
  _FrameLayout.init(width:height:alignment:)(v51, *(_QWORD *)&v27, 0, 0, 1, v28, v29);
  sub_10000B5E4((uint64_t)v10, (uint64_t)v13, &qword_1009D9068);
  v30 = &v13[*(int *)(v11 + 36)];
  v31 = v51[1];
  *v30 = v51[0];
  v30[1] = v31;
  v30[2] = v51[2];
  v32 = sub_100010960((uint64_t)v10, &qword_1009D9068);
  v33.n128_f64[0] = static Material.thin.getter(v32);
  LOBYTE(v27) = static Edge.Set.all.getter(v33);
  v34 = &v16[*(int *)(v14 + 36)];
  v36 = v47;
  v35 = v48;
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v47 + 16))(v34, v7, v48);
  v34[*(int *)(sub_10004CFD4(&qword_1009D9090) + 36)] = LOBYTE(v27);
  sub_10000B5E4((uint64_t)v13, (uint64_t)v16, &qword_1009D9070);
  (*(void (**)(_BYTE *, uint64_t))(v36 + 8))(v7, v35);
  sub_100010960((uint64_t)v13, &qword_1009D9070);
  v37 = (uint64_t)&v18[*(int *)(v45 + 36)];
  sub_10002CD84(v49, v37, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
  *(_WORD *)(v37 + *(int *)(sub_10004CFD4(&qword_1009F4140) + 36)) = 256;
  sub_100025B3C((uint64_t)v16, (uint64_t)v18, &qword_1009D9078);
  v38 = Color.init(r:g:b:alpha:)(60, 60, 67, 0.6);
  sub_10000B5E4((uint64_t)v18, (uint64_t)v20, &qword_1009D9080);
  v39 = &v20[*(int *)(v46 + 36)];
  *(_QWORD *)v39 = v38;
  *(_OWORD *)(v39 + 8) = xmmword_100719260;
  *((_QWORD *)v39 + 3) = 0x401C000000000000;
  v40 = sub_100010960((uint64_t)v18, &qword_1009D9080);
  v41 = static Color.yellow.getter(v40);
  sub_10000B5E4((uint64_t)v20, (uint64_t)v23, &qword_1009D9088);
  swift_release(v41);
  sub_100010960((uint64_t)v20, &qword_1009D9088);
  return sub_100025B3C((uint64_t)v23, v50, &qword_1009D9088);
}

uint64_t sub_1002F0804@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t KeyPath;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v26;

  v2 = v1;
  v4 = sub_10004CFD4(&qword_1009D8918);
  __chkstk_darwin(v4);
  v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v26 - v8;
  v10 = sub_10004CFD4(&qword_1009D9098);
  __chkstk_darwin(v10);
  v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v26 - v14;
  *(_QWORD *)v15 = static HorizontalAlignment.center.getter(v16);
  *((_QWORD *)v15 + 1) = 0;
  v15[16] = 1;
  v17 = sub_10004CFD4(&qword_1009D90A0);
  sub_1002F0A10(v2, (uint64_t)&v15[*(int *)(v17 + 44)]);
  v18 = enum case for ContentSizeCategory.extraExtraExtraLarge(_:);
  v19 = type metadata accessor for ContentSizeCategory(0);
  v20 = *(_QWORD *)(v19 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v20 + 104))(v9, v18, v19);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v9, 0, 1, v19);
  sub_10000B5E4((uint64_t)v9, (uint64_t)v6, &qword_1009D8918);
  sub_10000B5E4((uint64_t)v15, (uint64_t)v12, &qword_1009D9098);
  KeyPath = swift_getKeyPath(&unk_1007193C0);
  v22 = sub_10004CFD4(&qword_1009D9068);
  v23 = (uint64_t *)(a1 + *(int *)(v22 + 40));
  *v23 = KeyPath;
  v24 = sub_10004CFD4(&qword_1009D8790);
  swift_storeEnumTagMultiPayload(v23, v24, 0);
  sub_100025B3C((uint64_t)v6, a1, &qword_1009D8918);
  sub_100025B3C((uint64_t)v12, a1 + *(int *)(v22 + 36), &qword_1009D9098);
  sub_100010960((uint64_t)v9, &qword_1009D8918);
  return sub_100010960((uint64_t)v15, &qword_1009D9098);
}

uint64_t sub_1002F0A10@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t ObjCClassFromMetadata;
  id v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  double v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  double v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;

  v77 = a2;
  v3 = sub_10004CFD4(&qword_1009D90A8);
  __chkstk_darwin(v3);
  v5 = (char *)&v67 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v75 = sub_10004CFD4(&qword_1009D90B0);
  __chkstk_darwin(v75);
  v76 = (uint64_t)&v67 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Locale(0);
  v73 = *(_QWORD *)(v7 - 8);
  v74 = v7;
  __chkstk_darwin(v7);
  v71 = (char *)&v67 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v67 - v10;
  v72 = type metadata accessor for String.LocalizationValue(0);
  v70 = *(_QWORD *)(v72 - 8);
  __chkstk_darwin(v72);
  v13 = (char *)&v67 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)&v67 - v15;
  v17 = type metadata accessor for Font.Leading(0);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v20 = (char *)&v67 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = a1;
  if ((sub_1002EF724() & 1) != 0)
  {
    v22 = static Font.headline.getter();
  }
  else
  {
    v24 = static Font.subheadline.getter();
    static Font.Weight.semibold.getter(v24);
    v22 = Font.weight(_:)(v24);
    v23 = swift_release(v24);
  }
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v18 + 104))(v20, enum case for Font.Leading.tight(_:), v17, v23);
  v69 = Font.leading(_:)(v20, v22);
  v25 = swift_release(v22);
  (*(void (**)(char *, uint64_t, __n128))(v18 + 8))(v20, v17, v25);
  v67 = v21;
  v26 = sub_1002EF724();
  if ((v26 & 1) != 0)
    v27 = static Font.body.getter(v26);
  else
    v27 = static Font.subheadline.getter();
  v68 = v27;
  v28 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000010, 0x80000001007BDC40);
  static Locale.current.getter(v28);
  v29 = v70;
  v30 = v72;
  (*(void (**)(char *, char *, uint64_t))(v70 + 16))(v13, v16, v72);
  v31 = type metadata accessor for BundleFinder();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v31);
  v33 = objc_msgSend((id)objc_opt_self(NSBundle), "bundleForClass:", ObjCClassFromMetadata);
  v35 = v73;
  v34 = v74;
  v36 = v71;
  (*(void (**)(char *, char *, uint64_t))(v73 + 16))(v71, v11, v74);
  v37 = String.init(localized:table:bundle:locale:comment:)(v13, 0, 0, v33, v36, "AX Action to open Sample Card", 29, 2);
  v39 = v38;
  (*(void (**)(char *, uint64_t))(v35 + 8))(v11, v34);
  v40 = (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v16, v30);
  *(_QWORD *)v5 = static VerticalAlignment.center.getter(v40);
  *((_QWORD *)v5 + 1) = 0x4024000000000000;
  v5[16] = 0;
  v41 = sub_10004CFD4(&qword_1009D90B8);
  v42 = v68;
  v43 = v69;
  sub_1002F0E74(v67, v69, v68, v37, v39, &v5[*(int *)(v41 + 44)]);
  swift_bridgeObjectRelease(v39);
  v45 = static Edge.Set.horizontal.getter(v44);
  v46 = EdgeInsets.init(_all:)(16.0);
  v48 = v47;
  v50 = v49;
  v52 = v51;
  v53 = v76;
  sub_10000B5E4((uint64_t)v5, v76, &qword_1009D90A8);
  v54 = v53 + *(int *)(v75 + 36);
  *(_BYTE *)v54 = v45;
  *(double *)(v54 + 8) = v46;
  *(_QWORD *)(v54 + 16) = v48;
  *(_QWORD *)(v54 + 24) = v50;
  *(_QWORD *)(v54 + 32) = v52;
  *(_BYTE *)(v54 + 40) = 0;
  v55 = sub_100010960((uint64_t)v5, &qword_1009D90A8);
  v56 = static Edge.Set.vertical.getter(v55);
  v57 = EdgeInsets.init(_all:)(12.0);
  v59 = v58;
  v61 = v60;
  v63 = v62;
  v64 = v77;
  sub_10000B5E4(v53, v77, &qword_1009D90B0);
  swift_release(v42);
  swift_release(v43);
  v65 = v64 + *(int *)(sub_10004CFD4(&qword_1009D90C0) + 36);
  *(_BYTE *)v65 = v56;
  *(double *)(v65 + 8) = v57;
  *(_QWORD *)(v65 + 16) = v59;
  *(_QWORD *)(v65 + 24) = v61;
  *(_QWORD *)(v65 + 32) = v63;
  *(_BYTE *)(v65 + 40) = 0;
  return sub_100010960(v53, &qword_1009D90B0);
}

uint64_t sub_1002F0E74@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char *a6@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t OpaqueTypeConformance2;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t KeyPath;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  __n128 v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  unint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  __n128 v95;
  uint64_t v96;
  unint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  id v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t *v123;
  uint64_t v124;
  uint64_t v125;
  char *v126;
  void (*v127)(char *, char *, uint64_t);
  char *v128;
  uint64_t v129;
  char *v130;
  uint64_t v131;
  char *v132;
  void (*v133)(char *, uint64_t);
  uint64_t result;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  __n128 v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  char *v145;
  uint64_t v146;
  char *v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  char *v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t *v158;
  uint64_t v159;
  char *v160;
  uint64_t v161;
  uint64_t v162;
  char *v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t *v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  char *v176;
  uint64_t v177;
  uint64_t v178;
  char *v179;
  char *v180;
  uint64_t v181;
  char *v182;
  char *v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  unsigned __int8 v187;
  _QWORD v188[2];

  v151 = a5;
  v142 = a4;
  v149 = a3;
  v148 = a2;
  v179 = a6;
  v7 = type metadata accessor for BuyButtonView.Style(0);
  __chkstk_darwin(v7);
  v175 = (uint64_t)&v139 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v171 = sub_10004CFD4(&qword_1009D88E0);
  __chkstk_darwin(v171);
  v170 = (uint64_t *)((char *)&v139 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v169 = type metadata accessor for ColorScheme(0);
  v168 = *(_QWORD *)(v169 - 8);
  __chkstk_darwin(v169);
  v166 = (uint64_t)&v139 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v167 = sub_10004CFD4(&qword_1009D90C8);
  __chkstk_darwin(v167);
  v158 = (uint64_t *)((char *)&v139 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v172 = sub_10004CFD4(&qword_1009D90D0);
  __chkstk_darwin(v172);
  v176 = (char *)&v139 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v174 = sub_10004CFD4(&qword_1009D90D8);
  __chkstk_darwin(v174);
  v178 = (uint64_t)&v139 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v173 = (uint64_t)&v139 - v15;
  __chkstk_darwin(v16);
  v177 = (uint64_t)&v139 - v17;
  v165 = type metadata accessor for AccessibilityActionKind(0);
  v164 = *(_QWORD *)(v165 - 8);
  __chkstk_darwin(v165);
  v163 = (char *)&v139 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v162 = type metadata accessor for TaskPriority(0);
  v161 = *(_QWORD *)(v162 - 8);
  __chkstk_darwin(v162);
  v160 = (char *)&v139 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v181 = type metadata accessor for SampleHeaderView(0);
  v156 = *(_QWORD *)(v181 - 8);
  v157 = *(_QWORD *)(v156 + 64);
  __chkstk_darwin(v181);
  v155 = (uint64_t)&v139 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v141 = type metadata accessor for AccessibilityChildBehavior(0);
  v21 = *(_QWORD *)(v141 - 8);
  __chkstk_darwin(v141);
  v23 = (char *)&v139 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = sub_10004CFD4(&qword_1009D90E0);
  __chkstk_darwin(v24);
  v26 = (char *)&v139 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = sub_10004CFD4(&qword_1009D90E8);
  v143 = *(_QWORD *)(v27 - 8);
  __chkstk_darwin(v27);
  v29 = (char *)&v139 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v146 = sub_10004CFD4(&qword_1009D90F0);
  __chkstk_darwin(v146);
  v31 = (char *)&v139 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v32);
  v145 = (char *)&v139 - v33;
  v153 = sub_10004CFD4(&qword_1009D90F8);
  v152 = *(_QWORD *)(v153 - 8);
  __chkstk_darwin(v153);
  v147 = (char *)&v139 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v150 = sub_10004CFD4(&qword_1009D9100);
  __chkstk_darwin(v150);
  v180 = (char *)&v139 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  v159 = sub_10004CFD4(&qword_1009D9108);
  __chkstk_darwin(v159);
  v154 = (char *)&v139 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v144 = sub_10004CFD4(&qword_1009D9110);
  v184 = *(_QWORD *)(v144 - 8);
  __chkstk_darwin(v144);
  v182 = (char *)&v139 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v38);
  v183 = (char *)&v139 - v39;
  *(_QWORD *)v26 = static VerticalAlignment.center.getter(v40);
  *((_QWORD *)v26 + 1) = 0x4024000000000000;
  v26[16] = 0;
  v41 = sub_10004CFD4(&qword_1009D9118);
  v42 = sub_1002F1C60(a1, v148, v149, (uint64_t)&v26[*(int *)(v41 + 44)]);
  static AccessibilityChildBehavior.ignore.getter(v42);
  v43 = sub_100030B34(&qword_1009D9120, &qword_1009D90E0, (uint64_t)&protocol conformance descriptor for HStack<A>);
  View.accessibilityElement(children:)(v23, v24, v43);
  (*(void (**)(char *, uint64_t))(v21 + 8))(v23, v141);
  sub_100010960((uint64_t)v26, &qword_1009D90E0);
  v44 = v142;
  v45 = v151;
  v185 = v142;
  v186 = v151;
  v188[0] = v24;
  v188[1] = v43;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v188, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
  v47 = sub_1001F2108();
  View.accessibilityLabel<A>(_:)(&v185, v27, &type metadata for String, OpaqueTypeConformance2, v47);
  (*(void (**)(char *, uint64_t))(v143 + 8))(v29, v27);
  v48 = sub_10004CFD4((uint64_t *)&unk_1009D8830);
  v49 = swift_allocObject(v48, 80, 7);
  *(_OWORD *)(v49 + 16) = xmmword_100712B60;
  *(_QWORD *)(v49 + 32) = v44;
  *(_QWORD *)(v49 + 40) = v45;
  v50 = *(_QWORD *)(a1 + 8);
  KeyPath = swift_getKeyPath(&unk_1007193F0);
  v52 = swift_getKeyPath(&unk_100719418);
  swift_bridgeObjectRetain(v45);
  v53 = swift_retain(v50);
  static Published.subscript.getter(&v185, v53, KeyPath, v52);
  swift_release(v50);
  swift_release(KeyPath);
  swift_release(v52);
  v54 = v186;
  *(_QWORD *)(v49 + 48) = v185;
  *(_QWORD *)(v49 + 56) = v54;
  v55 = *(_QWORD *)(a1 + 8);
  v56 = swift_getKeyPath(&unk_100719438);
  v57 = swift_getKeyPath(&unk_100719460);
  v58 = swift_retain(v55);
  static Published.subscript.getter(&v185, v58, v56, v57);
  swift_release(v55);
  swift_release(v56);
  v59 = swift_release(v57);
  v60 = v186;
  *(_QWORD *)(v49 + 64) = v185;
  *(_QWORD *)(v49 + 72) = v60;
  v61 = (uint64_t)v145;
  v62 = v146;
  ModifiedContent<>.accessibilityInputLabels<A>(_:)(v49, v59);
  swift_bridgeObjectRelease(v49);
  sub_100010960((uint64_t)v31, &qword_1009D90F0);
  v140 = a1;
  v63 = sub_10004CFD4(&qword_1009D3A10);
  AccessibilityFocusState.projectedValue.getter(&v185, v63);
  v64 = v185;
  v65 = v186;
  v66 = v187;
  v67 = sub_1002F4C34();
  v68 = v147;
  View.accessibilityFocused(_:)(v64, v65, v66, v62, v67);
  swift_release(v65);
  swift_release(v64);
  sub_100010960(v61, &qword_1009D90F0);
  v69 = v155;
  sub_10002CD84(a1, v155, type metadata accessor for SampleHeaderView);
  v70 = *(unsigned __int8 *)(v156 + 80);
  v71 = (v70 + 16) & ~v70;
  v157 += v71;
  v156 = v70 | 7;
  v72 = swift_allocObject(&unk_1008FB718, v157, v70 | 7);
  v73 = sub_1002F4D04(v69, v72 + v71);
  v74 = v160;
  static TaskPriority.userInitiated.getter(v73);
  v75 = v150;
  v76 = v180;
  v77 = &v180[*(int *)(v150 + 36)];
  v78 = type metadata accessor for _TaskModifier(0);
  v79 = v161;
  v80 = v162;
  (*(void (**)(char *, char *, uint64_t))(v161 + 16))(&v77[*(int *)(v78 + 20)], v74, v162);
  *(_QWORD *)v77 = &unk_1009D9138;
  *((_QWORD *)v77 + 1) = v72;
  v81 = v152;
  v82 = v153;
  (*(void (**)(char *, char *, uint64_t))(v152 + 16))(v76, v68, v153);
  (*(void (**)(char *, uint64_t))(v79 + 8))(v74, v80);
  (*(void (**)(char *, uint64_t))(v81 + 8))(v68, v82);
  v83 = v140;
  v84 = v69;
  sub_10002CD84(v140, v69, type metadata accessor for SampleHeaderView);
  v85 = v157;
  v86 = v156;
  v87 = swift_allocObject(&unk_1008FB740, v157, v156);
  v88 = sub_1002F4D04(v84, v87 + v71);
  v89 = v163;
  static AccessibilityActionKind.default.getter(v88);
  v90 = sub_1002F4DB4();
  v91 = (uint64_t)v154;
  v92 = (uint64_t)v180;
  View.accessibilityAction(_:_:)(v89, sub_1002F4DB0, v87, v75, v90);
  v93 = v87;
  v94 = v83;
  v95 = swift_release(v93);
  (*(void (**)(char *, uint64_t, __n128))(v164 + 8))(v89, v165, v95);
  sub_100010960(v92, &qword_1009D9100);
  sub_10002CD84(v83, v84, type metadata accessor for SampleHeaderView);
  v96 = swift_allocObject(&unk_1008FB768, v85, v86);
  sub_1002F4D04(v84, v96 + v71);
  v97 = sub_1002F4E94();
  v98 = v182;
  View.onTapGesture(count:perform:)(1, sub_1002F4DB0, v96, v159, v97);
  swift_release(v96);
  sub_100010960(v91, &qword_1009D9108);
  v99 = v144;
  (*(void (**)(char *, char *))(v184 + 32))(v183, v98);
  v100 = sub_1002F2D48();
  v101 = swift_getKeyPath(&unk_100719480);
  v102 = v181;
  v103 = v166;
  sub_10066848C(v166);
  v104 = v170;
  v105 = v168;
  v106 = v169;
  (*(void (**)(char *, uint64_t, uint64_t))(v168 + 16))((char *)v170 + *(int *)(v171 + 28), v103, v169);
  *v104 = v101;
  v107 = v158;
  sub_10000B5E4((uint64_t)v104, (uint64_t)v158 + *(int *)(v167 + 36), &qword_1009D88E0);
  *v107 = v100;
  swift_retain(v100);
  sub_100010960((uint64_t)v104, &qword_1009D88E0);
  (*(void (**)(uint64_t, uint64_t))(v105 + 8))(v103, v106);
  swift_release(v100);
  v108 = swift_getKeyPath(&unk_1007194B0);
  v109 = v94 + *(int *)(v102 + 40);
  if (*(_QWORD *)v109)
  {
    v110 = v108;
    v111 = *(id *)v109;
    v112 = v175;
    sub_1005F5FDC(v175);

    v113 = (uint64_t)v176;
    v114 = &v176[*(int *)(v172 + 36)];
    v115 = sub_10004CFD4(&qword_1009D4F10);
    sub_10002CD84(v112, (uint64_t)&v114[*(int *)(v115 + 28)], type metadata accessor for BuyButtonView.Style);
    *(_QWORD *)v114 = v110;
    sub_10000B5E4((uint64_t)v107, v113, &qword_1009D90C8);
    sub_10002C8F0(v112, type metadata accessor for BuyButtonView.Style);
    sub_100010960((uint64_t)v107, &qword_1009D90C8);
    v116 = *(_QWORD *)(v94 + 8);
    v117 = swift_getKeyPath(&unk_1007194D8);
    v118 = swift_getKeyPath(&unk_100719500);
    v119 = swift_retain(v116);
    static Published.subscript.getter(&v185, v119, v117, v118);
    swift_release(v116);
    swift_release(v117);
    swift_release(v118);
    LOBYTE(v118) = v185;
    v120 = swift_getKeyPath(&unk_100719520);
    v121 = swift_allocObject(&unk_1008FB790, 17, 7);
    *(_BYTE *)(v121 + 16) = v118;
    v122 = v173;
    sub_10000B5E4(v113, v173, &qword_1009D90D0);
    v123 = (uint64_t *)(v122 + *(int *)(v174 + 36));
    *v123 = v120;
    v123[1] = (uint64_t)sub_100234614;
    v123[2] = v121;
    sub_100010960(v113, &qword_1009D90D0);
    v124 = v177;
    sub_100025B3C(v122, v177, &qword_1009D90D8);
    v126 = v183;
    v125 = v184;
    v127 = *(void (**)(char *, char *, uint64_t))(v184 + 16);
    v128 = v182;
    v127(v182, v183, v99);
    v129 = v178;
    sub_10000B5E4(v124, v178, &qword_1009D90D8);
    v130 = v179;
    v127(v179, v128, v99);
    v131 = sub_10004CFD4(&qword_1009D9158);
    v132 = &v130[*(int *)(v131 + 48)];
    *(_QWORD *)v132 = 0;
    v132[8] = 1;
    sub_10000B5E4(v129, (uint64_t)&v130[*(int *)(v131 + 64)], &qword_1009D90D8);
    sub_100010960(v124, &qword_1009D90D8);
    v133 = *(void (**)(char *, uint64_t))(v125 + 8);
    v133(v126, v99);
    sub_100010960(v129, &qword_1009D90D8);
    return ((uint64_t (*)(char *, uint64_t))v133)(v128, v99);
  }
  else
  {
    v135 = *(_QWORD *)(v109 + 8);
    v136 = type metadata accessor for ChromeStyle(0);
    v137 = sub_100008DB0((unint64_t *)&qword_1009D8330, type metadata accessor for ChromeStyle, (uint64_t)&protocol conformance descriptor for ChromeStyle);
    result = EnvironmentObject.error()(0, v135, v136, v137, v138);
    __break(1u);
  }
  return result;
}

uint64_t sub_1002F1C60@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t KeyPath;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  uint64_t v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  uint64_t v65;
  _OWORD v66[8];
  uint64_t v67;

  v45 = a2;
  v46 = a3;
  v42 = a1;
  v47 = a4;
  v5 = sub_10004CFD4(&qword_1009D9168);
  __chkstk_darwin(v5);
  v44 = (uint64_t)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v42 - v8;
  v10 = type metadata accessor for Image.ResizingMode(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_10004CFD4(&qword_1009D9170);
  __chkstk_darwin(v14);
  v43 = (uint64_t)&v42 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v18 = (char *)&v42 - v17;
  v19 = *(_QWORD *)(a1 + 8);
  KeyPath = swift_getKeyPath(&unk_100719598);
  v21 = swift_getKeyPath(&unk_1007195C0);
  v22 = swift_retain(v19);
  static Published.subscript.getter(v66, v22, KeyPath, v21);
  swift_release(v19);
  swift_release(KeyPath);
  swift_release(v21);
  v23 = Image.init(decorative:scale:orientation:)(*(_QWORD *)&v66[0], 0, 1.0);
  (*(void (**)(char *, _QWORD, uint64_t))(v11 + 104))(v13, enum case for Image.ResizingMode.stretch(_:), v10);
  v24 = Image.resizable(capInsets:resizingMode:)(v13, v23, 0.0, 0.0, 0.0, 0.0);
  v25 = swift_release(v23);
  v26 = (*(uint64_t (**)(char *, uint64_t, __n128))(v11 + 8))(v13, v10, v25);
  v27 = static Alignment.center.getter(v26);
  sub_1005F2678(0.0, 1, 0.0, 1, 36.0, 0, 0.0, 1, (uint64_t)&v57, 0.0, 1, 36.0, 0, v27, v28, v24, 0, 1);
  swift_release(v24);
  v66[6] = v63;
  v66[7] = v64;
  v66[2] = v59;
  v66[3] = v60;
  v66[4] = v61;
  v66[5] = v62;
  v66[0] = v57;
  v66[1] = v58;
  v54 = v63;
  v55 = v64;
  v50 = v59;
  v51 = v60;
  v52 = v61;
  v53 = v62;
  v67 = v65;
  v56 = v65;
  v48 = v57;
  v49 = v58;
  v29 = sub_10004CFD4(&qword_1009D9178);
  v30 = sub_1002F4F58();
  View.accessibilityHidden(_:)(1, v29, v30);
  v31 = sub_1002F5028(v66);
  v32 = static HorizontalAlignment.leading.getter(v31);
  v33 = type metadata accessor for SampleHeaderView(0);
  v34 = v42;
  v35 = *(_QWORD *)(v42 + *(int *)(v33 + 56));
  *(_QWORD *)v9 = v32;
  *((_QWORD *)v9 + 1) = v35;
  v9[16] = 0;
  v36 = sub_10004CFD4(&qword_1009D9198);
  sub_1002F2024(v34, v45, v46, &v9[*(int *)(v36 + 44)]);
  v37 = v43;
  sub_10000B5E4((uint64_t)v18, v43, &qword_1009D9170);
  v38 = v44;
  sub_10000B5E4((uint64_t)v9, v44, &qword_1009D9168);
  v39 = v47;
  sub_10000B5E4(v37, v47, &qword_1009D9170);
  v40 = sub_10004CFD4(&qword_1009D91A0);
  sub_10000B5E4(v38, v39 + *(int *)(v40 + 48), &qword_1009D9168);
  sub_100010960((uint64_t)v9, &qword_1009D9168);
  sub_100010960((uint64_t)v18, &qword_1009D9170);
  sub_100010960(v38, &qword_1009D9168);
  return sub_100010960(v37, &qword_1009D9170);
}

uint64_t sub_1002F2024@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t KeyPath;
  uint64_t v27;
  uint64_t v28;
  __n128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  char *v65;
  __n128 v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unsigned int (*v74)(uint64_t, uint64_t, uint64_t);
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  char v79;
  void (*v80)(char *, uint64_t);
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  BOOL v85;
  void (*v86)(uint64_t, uint64_t);
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  __n128 v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char v102;
  char v103;
  uint64_t v104;
  uint64_t v105;
  _QWORD *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char v110;
  char v111;
  uint64_t v112;
  uint64_t v113;
  void (*v114)(char *, char *, uint64_t);
  char *v115;
  char *v116;
  uint64_t v117;
  char *v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  char v122;
  uint64_t v123;
  uint64_t v124;
  void (*v125)(char *, uint64_t);
  double v126;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  __n128 v131;
  uint64_t v132;
  _QWORD *v133;
  unint64_t v134;
  uint64_t v135;
  char *v136;
  uint64_t v137;
  char *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  char *v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  char *v150;
  char *v151;
  uint64_t v152;
  uint64_t v153;
  char *v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  char v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  char v164;

  v135 = a3;
  v151 = a4;
  v140 = type metadata accessor for ContentSizeCategory(0);
  v139 = *(_QWORD *)(v140 - 8);
  __chkstk_darwin(v140);
  v138 = (char *)&v132 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v137 = (uint64_t)&v132 - v8;
  v156 = type metadata accessor for SampleHeaderView(0);
  __chkstk_darwin(v156);
  v148 = (uint64_t)&v132 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v147 = type metadata accessor for UserInterfaceSizeClass(0);
  v145 = *(_QWORD *)(v147 - 8);
  __chkstk_darwin(v147);
  v136 = (char *)&v132 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v144 = sub_10004CFD4(&qword_1009D3C08);
  __chkstk_darwin(v144);
  v146 = (uint64_t)&v132 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_10004CFD4((uint64_t *)&unk_1009D8210);
  __chkstk_darwin(v12);
  v141 = (uint64_t)&v132 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v153 = (uint64_t)&v132 - v15;
  __chkstk_darwin(v16);
  v152 = (uint64_t)&v132 - v17;
  v143 = sub_10004CFD4(&qword_1009DE640);
  __chkstk_darwin(v143);
  v19 = (char *)&v132 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v155 = sub_10004CFD4(&qword_1009D91A8);
  v157 = *(_QWORD *)(v155 - 8);
  __chkstk_darwin(v155);
  v150 = (char *)&v132 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v142 = (char *)&v132 - v22;
  __chkstk_darwin(v23);
  v154 = (char *)&v132 - v24;
  v25 = *(_QWORD *)(a1 + 8);
  KeyPath = swift_getKeyPath(&unk_1007193F0);
  v27 = swift_getKeyPath(&unk_100719418);
  v28 = swift_retain(v25);
  static Published.subscript.getter(&v158, v28, KeyPath, v27);
  swift_release(v25);
  swift_release(KeyPath);
  swift_release(v27);
  v134 = sub_1001F2108();
  v30 = Text.init<A>(_:)(&v158, &type metadata for String, v134, v29);
  v32 = v31;
  v34 = v33;
  v36 = v35 & 1;
  v37 = Text.font(_:)(a2, v30, v31, v36, v33);
  v39 = v38;
  v41 = v40;
  v43 = v42;
  sub_1001F5B28(v30, v32, v36);
  swift_bridgeObjectRelease(v34);
  v44 = *(int *)(v156 + 40);
  v149 = a1;
  v133 = (_QWORD *)(a1 + v44);
  v45 = *(void **)(a1 + v44);
  if (!*v133)
    goto LABEL_17;
  v46 = v41 & 1;
  v47 = swift_getKeyPath(&unk_1007195E0);
  v48 = swift_getKeyPath(&unk_100719608);
  v49 = v45;
  static Published.subscript.getter(&v158, v49, v47, v48);

  swift_release(v47);
  swift_release(v48);
  v50 = v158;
  v51 = Text.foregroundColor(_:)(v158, v37, v39, v46, v43);
  v53 = v52;
  v55 = v54;
  v57 = v56;
  swift_release(v50);
  sub_1001F5B28(v37, v39, v46);
  swift_bridgeObjectRelease(v43);
  v58 = swift_getKeyPath(&unk_100719628);
  v158 = v51;
  v159 = v53;
  v160 = v55 & 1;
  v161 = v57;
  v162 = v58;
  v163 = 2;
  v164 = 0;
  v59 = enum case for DynamicTypeSize.accessibility2(_:);
  v60 = type metadata accessor for DynamicTypeSize(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v60 - 8) + 104))(v19, v59, v60);
  v61 = sub_100008DB0(&qword_1009D88B0, (uint64_t (*)(uint64_t))&type metadata accessor for DynamicTypeSize, (uint64_t)&protocol conformance descriptor for DynamicTypeSize);
  if ((dispatch thunk of static Equatable.== infix(_:_:)(v19, v19, v60, v61) & 1) == 0)
  {
    __break(1u);
LABEL_17:
    v128 = v133[1];
    goto LABEL_18;
  }
  v62 = sub_10004CFD4(&qword_1009D8E10);
  v63 = sub_1002EDF28();
  v64 = sub_100030B34(&qword_1009D8898, &qword_1009DE640, (uint64_t)&protocol conformance descriptor for PartialRangeThrough<A>);
  v65 = v142;
  View.dynamicTypeSize<A>(_:)(v19, v62, v143, v63, v64);
  sub_100010960((uint64_t)v19, &qword_1009DE640);
  sub_1001F5B28(v158, v159, v160);
  swift_bridgeObjectRelease(v161);
  v66 = swift_release(v162);
  (*(void (**)(char *, char *, uint64_t, __n128))(v157 + 32))(v154, v65, v155, v66);
  v67 = v149;
  v68 = v152;
  sub_100667DCC(v152);
  v69 = v145;
  v70 = v153;
  v71 = v147;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v145 + 104))(v153, enum case for UserInterfaceSizeClass.regular(_:), v147);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v69 + 56))(v70, 0, 1, v71);
  v72 = v146;
  v73 = v146 + *(int *)(v144 + 48);
  sub_10000B5E4(v68, v146, (uint64_t *)&unk_1009D8210);
  sub_10000B5E4(v70, v73, (uint64_t *)&unk_1009D8210);
  v74 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v69 + 48);
  if (v74(v72, 1, v71) == 1)
  {
    sub_100010960(v70, (uint64_t *)&unk_1009D8210);
    sub_100010960(v68, (uint64_t *)&unk_1009D8210);
    if (v74(v73, 1, v71) == 1)
    {
      sub_100010960(v72, (uint64_t *)&unk_1009D8210);
      v75 = v148;
      sub_10002CD84(v67, v148, type metadata accessor for SampleHeaderView);
      goto LABEL_11;
    }
    goto LABEL_8;
  }
  v76 = v141;
  sub_10000B5E4(v72, v141, (uint64_t *)&unk_1009D8210);
  if (v74(v73, 1, v71) == 1)
  {
    sub_100010960(v153, (uint64_t *)&unk_1009D8210);
    sub_100010960(v68, (uint64_t *)&unk_1009D8210);
    (*(void (**)(uint64_t, uint64_t))(v69 + 8))(v76, v71);
LABEL_8:
    sub_100010960(v72, &qword_1009D3C08);
    v75 = v148;
    sub_10002CD84(v67, v148, type metadata accessor for SampleHeaderView);
LABEL_9:
    sub_10002C8F0(v75, type metadata accessor for SampleHeaderView);
LABEL_14:
    v156 = 0;
    v152 = 0;
    v153 = 0;
    v112 = 0;
    v149 = 0;
    v113 = 0;
    goto LABEL_15;
  }
  v77 = v136;
  (*(void (**)(char *, uint64_t, uint64_t))(v69 + 32))(v136, v73, v71);
  v78 = sub_100008DB0((unint64_t *)&qword_1009D87D0, (uint64_t (*)(uint64_t))&type metadata accessor for UserInterfaceSizeClass, (uint64_t)&protocol conformance descriptor for UserInterfaceSizeClass);
  v79 = dispatch thunk of static Equatable.== infix(_:_:)(v76, v77, v71, v78);
  v80 = *(void (**)(char *, uint64_t))(v69 + 8);
  v80(v77, v71);
  sub_100010960(v153, (uint64_t *)&unk_1009D8210);
  sub_100010960(v152, (uint64_t *)&unk_1009D8210);
  v80((char *)v76, v71);
  sub_100010960(v72, (uint64_t *)&unk_1009D8210);
  v75 = v148;
  sub_10002CD84(v67, v148, type metadata accessor for SampleHeaderView);
  if ((v79 & 1) == 0)
    goto LABEL_9;
LABEL_11:
  v81 = v137;
  sub_100667DF8(v137);
  v82 = v139;
  v83 = (uint64_t)v138;
  v84 = v140;
  (*(void (**)(char *, _QWORD, uint64_t))(v139 + 104))(v138, enum case for ContentSizeCategory.accessibilityMedium(_:), v140);
  v85 = sub_1002F50D8(v81, v83);
  v86 = *(void (**)(uint64_t, uint64_t))(v82 + 8);
  v86(v83, v84);
  v86(v81, v84);
  sub_10002C8F0(v75, type metadata accessor for SampleHeaderView);
  if (!v85)
    goto LABEL_14;
  v87 = *(_QWORD *)(v67 + 8);
  v88 = swift_getKeyPath(&unk_100719438);
  v89 = swift_getKeyPath(&unk_100719460);
  v90 = swift_retain(v87);
  static Published.subscript.getter(&v158, v90, v88, v89);
  swift_release(v87);
  swift_release(v88);
  v91 = swift_release(v89);
  v92 = Text.init<A>(_:)(&v158, &type metadata for String, v134, v91);
  v94 = v93;
  v96 = v95;
  v98 = v97 & 1;
  v99 = Text.font(_:)(v135, v92, v93, v98, v95);
  v101 = v100;
  v103 = v102;
  v105 = v104;
  sub_1001F5B28(v92, v94, v98);
  swift_bridgeObjectRelease(v96);
  v106 = v133;
  if (!*v133)
  {
    while (1)
    {
      v128 = v106[1];
LABEL_18:
      v129 = type metadata accessor for ChromeStyle(0);
      v130 = sub_100008DB0((unint64_t *)&qword_1009D8330, type metadata accessor for ChromeStyle, (uint64_t)&protocol conformance descriptor for ChromeStyle);
      EnvironmentObject.error()(0, v128, v129, v130, v131);
      __break(1u);
    }
  }
  v107 = _s5Books11ChromeStyleC14secondaryColor7SwiftUI0E0Vvg_0();
  v156 = Text.foregroundColor(_:)(v107, v99, v101, v103 & 1, v105);
  v152 = v109;
  v153 = v108;
  v111 = v110;
  swift_release(v107);
  v112 = v111 & 1;
  sub_1001F5B28(v99, v101, v103 & 1);
  swift_bridgeObjectRelease(v105);
  v149 = swift_getKeyPath(&unk_100719628);
  v113 = 1;
LABEL_15:
  v114 = *(void (**)(char *, char *, uint64_t))(v157 + 16);
  v115 = v150;
  v116 = v154;
  v117 = v155;
  v114(v150, v154, v155);
  v118 = v151;
  v114(v151, v115, v117);
  v119 = &v118[*(int *)(sub_10004CFD4(&qword_1009D91B0) + 48)];
  v120 = v156;
  v121 = v153;
  *(_QWORD *)v119 = v156;
  *((_QWORD *)v119 + 1) = v121;
  *((_QWORD *)v119 + 2) = v112;
  v122 = v112;
  v123 = v152;
  v124 = v149;
  *((_QWORD *)v119 + 3) = v152;
  *((_QWORD *)v119 + 4) = v124;
  *((_QWORD *)v119 + 5) = v113;
  v119[48] = 0;
  sub_1002F5060(v120, v121, v122, v123, v124);
  v125 = *(void (**)(char *, uint64_t))(v157 + 8);
  v125(v116, v117);
  v126 = sub_1002F509C(v120, v121, v122, v123, v124);
  return ((uint64_t (*)(char *, uint64_t, double))v125)(v115, v117, v126);
}

uint64_t sub_1002F2B38(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v1 + 16) = a1;
  v2 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v1 + 24) = static MainActor.shared.getter(v2);
  v3 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor);
  return swift_task_switch(sub_1002F2BA4, v3, v4);
}

uint64_t sub_1002F2BA4()
{
  uint64_t v0;
  uint64_t v1;

  swift_release(*(_QWORD *)(v0 + 24));
  type metadata accessor for SampleHeaderView(0);
  *(_BYTE *)(v0 + 32) = 1;
  v1 = sub_10004CFD4(&qword_1009D3A10);
  AccessibilityFocusState.wrappedValue.setter(v0 + 32, v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002F2C08(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  Class isa;
  Class v8;
  _QWORD v10[3];
  uint64_t v11;

  sub_10000B5E4(a1 + 24, (uint64_t)v10, &qword_1009D8F90);
  if (!v11)
    return sub_100010960((uint64_t)v10, &qword_1009D8F90);
  v1 = *(_QWORD *)(*sub_10003F198(v10, v11) + 40);
  v2 = *(_QWORD *)(v1 + 32);
  v3 = (void *)objc_opt_self(JSAApplication);
  v4 = sub_10004CFD4((uint64_t *)&unk_1009D8830);
  v5 = swift_allocObject(v4, 48, 7);
  *(_OWORD *)(v5 + 16) = xmmword_10070CCA0;
  v6 = *(_QWORD *)(v2 + 24);
  *(_QWORD *)(v5 + 32) = *(_QWORD *)(v2 + 16);
  *(_QWORD *)(v5 + 40) = v6;
  swift_unknownObjectRetain(v1);
  swift_unknownObjectRetain(v2);
  swift_bridgeObjectRetain(v6);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v5);
  v8 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v3, "openProductPagesWithIds:contentTypes:focusedIndex:options:", isa, v8, 0, 0);
  swift_unknownObjectRelease(v1);
  swift_unknownObjectRelease(v2);

  return _s5Books15CurrentPageViewVwxx_0(v10);
}

uint64_t sub_1002F2D48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t KeyPath;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v12[5];
  _QWORD v13[5];

  v1 = sub_10004CFD4(&qword_1009D8400);
  __chkstk_darwin(v1);
  v3 = (char *)v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *(_QWORD *)(v0 + 8);
  KeyPath = swift_getKeyPath(&unk_100719550);
  v6 = swift_getKeyPath(&unk_100719578);
  v7 = swift_retain(v4);
  static Published.subscript.getter(v13, v7, KeyPath, v6);
  swift_release(v4);
  swift_release(KeyPath);
  swift_release(v6);
  if (v13[3])
  {
    sub_10002E418((uint64_t)v13, (uint64_t)v12);
    sub_100010960((uint64_t)v13, (uint64_t *)&unk_1009D4CE0);
    sub_10003F198(v12, v12[3]);
    v8 = sub_100205964();
    _s5Books15CurrentPageViewVwxx_0(v12);
  }
  else
  {
    v9 = sub_100010960((uint64_t)v13, (uint64_t *)&unk_1009D4CE0);
    ProgressView<>.init<>()(v9);
    v10 = sub_100030B34(&qword_1009D9160, &qword_1009D8400, (uint64_t)&protocol conformance descriptor for ProgressView<A, B>);
    return AnyView.init<A>(_:)(v3, v1, v10);
  }
  return v8;
}

uint64_t sub_1002F2E9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, double a10@<D0>)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t result;

  v20 = type metadata accessor for SampleHeaderViewModel(0);
  v21 = sub_100008DB0(&qword_1009D8118, type metadata accessor for SampleHeaderViewModel, (uint64_t)&unk_100732420);
  *(_QWORD *)a9 = ObservedObject.init(wrappedValue:)(a1, v20, v21);
  *(_QWORD *)(a9 + 8) = v22;
  *(double *)(a9 + 16) = a10;
  sub_100025B3C(a2, a9 + 24, &qword_1009D8F90);
  v23 = (int *)type metadata accessor for SampleHeaderView(0);
  sub_100025B3C(a3, a9 + v23[7], &qword_1009D26A0);
  sub_100025B3C(a4, a9 + v23[8], &qword_1009D26A0);
  sub_100025B3C(a5, a9 + v23[9], &qword_1009D39F8);
  v24 = (_QWORD *)(a9 + v23[10]);
  *v24 = a6;
  v24[1] = a7;
  v25 = sub_100025B3C(a8, a9 + v23[11], (uint64_t *)&unk_1009D8230);
  result = AccessibilityFocusState.init<>()(v25);
  *(_QWORD *)(a9 + v23[13]) = 0x4030000000000000;
  *(_QWORD *)(a9 + v23[14]) = 0x4000000000000000;
  *(_QWORD *)(a9 + v23[15]) = 0x4051800000000000;
  *(_QWORD *)(a9 + v23[16]) = 0x4046800000000000;
  *(_QWORD *)(a9 + v23[17]) = 0x4042000000000000;
  *(_QWORD *)(a9 + v23[18]) = 0x407CC00000000000;
  return result;
}

uint64_t type metadata accessor for SampleHeaderView(uint64_t a1)
{
  uint64_t result;

  result = qword_1009D8FF0;
  if (!qword_1009D8FF0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for SampleHeaderView);
  return result;
}

uint64_t sub_1002F306C(uint64_t a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  _OWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  uint64_t *v43;
  uint64_t *v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  int *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v11 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = v11 + ((v5 + 16) & ~(unint64_t)v5);
  }
  else
  {
    v7 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v7;
    *(_QWORD *)(a1 + 16) = a2[2];
    v8 = a2 + 3;
    v9 = a2[6];
    swift_retain(v7);
    if (v9)
    {
      v10 = a2[7];
      *(_QWORD *)(a1 + 48) = v9;
      *(_QWORD *)(a1 + 56) = v10;
      (**(void (***)(uint64_t, uint64_t, uint64_t))(v9 - 8))(a1 + 24, (uint64_t)(a2 + 3), v9);
    }
    else
    {
      v12 = *(_OWORD *)(a2 + 5);
      *(_OWORD *)(a1 + 24) = *v8;
      *(_OWORD *)(a1 + 40) = v12;
      *(_QWORD *)(a1 + 56) = a2[7];
    }
    v13 = a3[7];
    v14 = (uint64_t *)(a1 + v13);
    v15 = (uint64_t *)((char *)a2 + v13);
    v16 = sub_10004CFD4(&qword_1009D26B8);
    if (swift_getEnumCaseMultiPayload(v15, v16) == 1)
    {
      v17 = type metadata accessor for UserInterfaceSizeClass(0);
      v18 = *(_QWORD *)(v17 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v18 + 48))(v15, 1, v17))
      {
        v19 = sub_10004CFD4((uint64_t *)&unk_1009D8210);
        memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
        v20 = 1;
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v18 + 16))(v14, v15, v17);
        v20 = 1;
        (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v14, 0, 1, v17);
      }
    }
    else
    {
      v21 = *v15;
      *v14 = *v15;
      swift_retain(v21);
      v20 = 0;
    }
    swift_storeEnumTagMultiPayload(v14, v16, v20);
    v22 = a3[8];
    v23 = (uint64_t *)(a1 + v22);
    v24 = (uint64_t *)((char *)a2 + v22);
    if (swift_getEnumCaseMultiPayload((char *)a2 + v22, v16) == 1)
    {
      v25 = type metadata accessor for UserInterfaceSizeClass(0);
      v26 = *(_QWORD *)(v25 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25))
      {
        v27 = sub_10004CFD4((uint64_t *)&unk_1009D8210);
        memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
        v28 = 1;
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v26 + 16))(v23, v24, v25);
        v28 = 1;
        (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
      }
    }
    else
    {
      v29 = *v24;
      *v23 = *v24;
      swift_retain(v29);
      v28 = 0;
    }
    swift_storeEnumTagMultiPayload(v23, v16, v28);
    v30 = a3[9];
    v31 = (uint64_t *)(a1 + v30);
    v32 = (uint64_t *)((char *)a2 + v30);
    v33 = sub_10004CFD4(&qword_1009D8790);
    if (swift_getEnumCaseMultiPayload(v32, v33) == 1)
    {
      v34 = type metadata accessor for ContentSizeCategory(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(v31, v32, v34);
      v35 = 1;
    }
    else
    {
      v36 = *v32;
      *v31 = *v32;
      swift_retain(v36);
      v35 = 0;
    }
    swift_storeEnumTagMultiPayload(v31, v33, v35);
    v37 = a3[10];
    v38 = a3[11];
    v39 = (_QWORD *)(a1 + v37);
    v40 = (uint64_t)a2 + v37;
    v42 = *(void **)v40;
    v41 = *(_QWORD *)(v40 + 8);
    *v39 = v42;
    v39[1] = v41;
    v43 = (uint64_t *)(a1 + v38);
    v44 = (uint64_t *)((char *)a2 + v38);
    v45 = v42;
    v46 = sub_10004CFD4((uint64_t *)&unk_1009D8200);
    if (swift_getEnumCaseMultiPayload(v44, v46) == 1)
    {
      v47 = type metadata accessor for ColorScheme(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v47 - 8) + 16))(v43, v44, v47);
      v48 = 1;
    }
    else
    {
      v49 = *v44;
      *v43 = *v44;
      swift_retain(v49);
      v48 = 0;
    }
    swift_storeEnumTagMultiPayload(v43, v46, v48);
    v50 = a3[12];
    v51 = (char *)(a1 + v50);
    v52 = (char *)a2 + v50;
    v53 = type metadata accessor for AccessibilityTechnologies(0);
    v54 = *(_QWORD *)(v53 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v54 + 48))(v52, 1, v53))
    {
      v55 = sub_10004CFD4((uint64_t *)&unk_1009D8220);
      memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v54 + 16))(v51, v52, v53);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v54 + 56))(v51, 0, 1, v53);
    }
    v56 = (int *)sub_10004CFD4(&qword_1009D3A10);
    v51[v56[9]] = v52[v56[9]];
    v57 = v56[10];
    v11 = *(_QWORD *)&v52[v57];
    *(_QWORD *)&v51[v57] = v11;
    v51[v56[11]] = v52[v56[11]];
    v58 = a3[14];
    *(_QWORD *)(a1 + a3[13]) = *(uint64_t *)((char *)a2 + a3[13]);
    *(_QWORD *)(a1 + v58) = *(uint64_t *)((char *)a2 + v58);
    v59 = a3[16];
    *(_QWORD *)(a1 + a3[15]) = *(uint64_t *)((char *)a2 + a3[15]);
    *(_QWORD *)(a1 + v59) = *(uint64_t *)((char *)a2 + v59);
    v60 = a3[18];
    *(_QWORD *)(a1 + a3[17]) = *(uint64_t *)((char *)a2 + a3[17]);
    *(_QWORD *)(a1 + v60) = *(uint64_t *)((char *)a2 + v60);
  }
  swift_retain(v11);
  return a1;
}

double sub_1002F34B8(_QWORD *a1, int *a2)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  double result;

  swift_release(a1[1]);
  if (a1[6])
    _s5Books15CurrentPageViewVwxx_0(a1 + 3);
  v4 = (_QWORD *)((char *)a1 + a2[7]);
  v5 = sub_10004CFD4(&qword_1009D26B8);
  if (swift_getEnumCaseMultiPayload(v4, v5) == 1)
  {
    v6 = type metadata accessor for UserInterfaceSizeClass(0);
    v7 = *(_QWORD *)(v6 - 8);
    if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v7 + 48))(v4, 1, v6))
      (*(void (**)(_QWORD *, uint64_t))(v7 + 8))(v4, v6);
  }
  else
  {
    swift_release(*v4);
  }
  v8 = (_QWORD *)((char *)a1 + a2[8]);
  if (swift_getEnumCaseMultiPayload(v8, v5) == 1)
  {
    v9 = type metadata accessor for UserInterfaceSizeClass(0);
    v10 = *(_QWORD *)(v9 - 8);
    if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
      (*(void (**)(_QWORD *, uint64_t))(v10 + 8))(v8, v9);
  }
  else
  {
    swift_release(*v8);
  }
  v11 = (_QWORD *)((char *)a1 + a2[9]);
  v12 = sub_10004CFD4(&qword_1009D8790);
  if (swift_getEnumCaseMultiPayload(v11, v12) == 1)
  {
    v13 = type metadata accessor for ContentSizeCategory(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v11, v13);
  }
  else
  {
    swift_release(*v11);
  }

  v14 = (_QWORD *)((char *)a1 + a2[11]);
  v15 = sub_10004CFD4((uint64_t *)&unk_1009D8200);
  if (swift_getEnumCaseMultiPayload(v14, v15) == 1)
  {
    v16 = type metadata accessor for ColorScheme(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v14, v16);
  }
  else
  {
    swift_release(*v14);
  }
  v17 = (char *)a1 + a2[12];
  v18 = type metadata accessor for AccessibilityTechnologies(0);
  v19 = *(_QWORD *)(v18 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
    (*(void (**)(char *, uint64_t))(v19 + 8))(v17, v18);
  v20 = *(_QWORD *)&v17[*(int *)(sub_10004CFD4(&qword_1009D3A10) + 40)];
  *(_QWORD *)&result = swift_release(v20).n128_u64[0];
  return result;
}

uint64_t sub_1002F36D0(uint64_t a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  char *v38;
  uint64_t v39;
  void *v40;
  uint64_t *v41;
  uint64_t *v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  int *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;

  v6 = a2[1];
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = v6;
  *(_QWORD *)(a1 + 16) = a2[2];
  v7 = a2 + 3;
  v8 = a2[6];
  swift_retain(v6);
  if (v8)
  {
    v9 = a2[7];
    *(_QWORD *)(a1 + 48) = v8;
    *(_QWORD *)(a1 + 56) = v9;
    (**(void (***)(uint64_t, _QWORD *, uint64_t))(v8 - 8))(a1 + 24, v7, v8);
  }
  else
  {
    v10 = *((_OWORD *)v7 + 1);
    *(_OWORD *)(a1 + 24) = *(_OWORD *)v7;
    *(_OWORD *)(a1 + 40) = v10;
    *(_QWORD *)(a1 + 56) = v7[4];
  }
  v11 = a3[7];
  v12 = (uint64_t *)(a1 + v11);
  v13 = (_QWORD *)((char *)a2 + v11);
  v14 = sub_10004CFD4(&qword_1009D26B8);
  if (swift_getEnumCaseMultiPayload(v13, v14) == 1)
  {
    v15 = type metadata accessor for UserInterfaceSizeClass(0);
    v16 = *(_QWORD *)(v15 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v16 + 48))(v13, 1, v15))
    {
      v17 = sub_10004CFD4((uint64_t *)&unk_1009D8210);
      memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
      v18 = 1;
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v16 + 16))(v12, v13, v15);
      v18 = 1;
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v12, 0, 1, v15);
    }
  }
  else
  {
    v19 = *v13;
    *v12 = *v13;
    swift_retain(v19);
    v18 = 0;
  }
  swift_storeEnumTagMultiPayload(v12, v14, v18);
  v20 = a3[8];
  v21 = (uint64_t *)(a1 + v20);
  v22 = (_QWORD *)((char *)a2 + v20);
  if (swift_getEnumCaseMultiPayload((char *)a2 + v20, v14) == 1)
  {
    v23 = type metadata accessor for UserInterfaceSizeClass(0);
    v24 = *(_QWORD *)(v23 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
    {
      v25 = sub_10004CFD4((uint64_t *)&unk_1009D8210);
      memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
      v26 = 1;
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v24 + 16))(v21, v22, v23);
      v26 = 1;
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
    }
  }
  else
  {
    v27 = *v22;
    *v21 = *v22;
    swift_retain(v27);
    v26 = 0;
  }
  swift_storeEnumTagMultiPayload(v21, v14, v26);
  v28 = a3[9];
  v29 = (uint64_t *)(a1 + v28);
  v30 = (_QWORD *)((char *)a2 + v28);
  v31 = sub_10004CFD4(&qword_1009D8790);
  if (swift_getEnumCaseMultiPayload(v30, v31) == 1)
  {
    v32 = type metadata accessor for ContentSizeCategory(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v32 - 8) + 16))(v29, v30, v32);
    v33 = 1;
  }
  else
  {
    v34 = *v30;
    *v29 = *v30;
    swift_retain(v34);
    v33 = 0;
  }
  swift_storeEnumTagMultiPayload(v29, v31, v33);
  v35 = a3[10];
  v36 = a3[11];
  v37 = (_QWORD *)(a1 + v35);
  v38 = (char *)a2 + v35;
  v40 = *(void **)v38;
  v39 = *((_QWORD *)v38 + 1);
  *v37 = v40;
  v37[1] = v39;
  v41 = (uint64_t *)(a1 + v36);
  v42 = (_QWORD *)((char *)a2 + v36);
  v43 = v40;
  v44 = sub_10004CFD4((uint64_t *)&unk_1009D8200);
  if (swift_getEnumCaseMultiPayload(v42, v44) == 1)
  {
    v45 = type metadata accessor for ColorScheme(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v45 - 8) + 16))(v41, v42, v45);
    v46 = 1;
  }
  else
  {
    v47 = *v42;
    *v41 = *v42;
    swift_retain(v47);
    v46 = 0;
  }
  swift_storeEnumTagMultiPayload(v41, v44, v46);
  v48 = a3[12];
  v49 = (char *)(a1 + v48);
  v50 = (char *)a2 + v48;
  v51 = type metadata accessor for AccessibilityTechnologies(0);
  v52 = *(_QWORD *)(v51 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v52 + 48))(v50, 1, v51))
  {
    v53 = sub_10004CFD4((uint64_t *)&unk_1009D8220);
    memcpy(v49, v50, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v52 + 16))(v49, v50, v51);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v52 + 56))(v49, 0, 1, v51);
  }
  v54 = (int *)sub_10004CFD4(&qword_1009D3A10);
  v49[v54[9]] = v50[v54[9]];
  v55 = v54[10];
  v56 = *(_QWORD *)&v50[v55];
  *(_QWORD *)&v49[v55] = v56;
  v49[v54[11]] = v50[v54[11]];
  v57 = a3[14];
  *(_QWORD *)(a1 + a3[13]) = *(_QWORD *)((char *)a2 + a3[13]);
  *(_QWORD *)(a1 + v57) = *(_QWORD *)((char *)a2 + v57);
  v58 = a3[16];
  *(_QWORD *)(a1 + a3[15]) = *(_QWORD *)((char *)a2 + a3[15]);
  *(_QWORD *)(a1 + v58) = *(_QWORD *)((char *)a2 + v58);
  v59 = a3[18];
  *(_QWORD *)(a1 + a3[17]) = *(_QWORD *)((char *)a2 + a3[17]);
  *(_QWORD *)(a1 + v59) = *(_QWORD *)((char *)a2 + v59);
  swift_retain(v56);
  return a1;
}

uint64_t sub_1002F3AF4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  void *v39;
  void *v40;
  id v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t (*v54)(char *, uint64_t, uint64_t);
  int v55;
  int v56;
  uint64_t v57;
  int *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = *(_QWORD *)(a2 + 8);
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v6;
  swift_retain(v6);
  swift_release(v7);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v8 = *(_QWORD *)(a2 + 48);
  if (*(_QWORD *)(a1 + 48))
  {
    if (v8)
    {
      sub_1001EAB00((_QWORD *)(a1 + 24), (_QWORD *)(a2 + 24));
      goto LABEL_8;
    }
    _s5Books15CurrentPageViewVwxx_0((_QWORD *)(a1 + 24));
  }
  else if (v8)
  {
    *(_QWORD *)(a1 + 48) = v8;
    *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
    (**(void (***)(uint64_t, uint64_t))(v8 - 8))(a1 + 24, a2 + 24);
    goto LABEL_8;
  }
  v9 = *(_OWORD *)(a2 + 24);
  v10 = *(_OWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 24) = v9;
  *(_OWORD *)(a1 + 40) = v10;
LABEL_8:
  if (a1 != a2)
  {
    v11 = a3[7];
    v12 = (uint64_t *)(a1 + v11);
    v13 = (uint64_t *)(a2 + v11);
    sub_100010960(a1 + v11, &qword_1009D26B8);
    v14 = sub_10004CFD4(&qword_1009D26B8);
    if (swift_getEnumCaseMultiPayload(v13, v14) == 1)
    {
      v15 = type metadata accessor for UserInterfaceSizeClass(0);
      v16 = *(_QWORD *)(v15 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v16 + 48))(v13, 1, v15))
      {
        v17 = sub_10004CFD4((uint64_t *)&unk_1009D8210);
        memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
        v18 = 1;
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v16 + 16))(v12, v13, v15);
        v18 = 1;
        (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v12, 0, 1, v15);
      }
    }
    else
    {
      v19 = *v13;
      *v12 = *v13;
      swift_retain(v19);
      v18 = 0;
    }
    swift_storeEnumTagMultiPayload(v12, v14, v18);
    v20 = a3[8];
    v21 = (uint64_t *)(a1 + v20);
    v22 = (uint64_t *)(a2 + v20);
    sub_100010960(a1 + v20, &qword_1009D26B8);
    v23 = sub_10004CFD4(&qword_1009D26B8);
    if (swift_getEnumCaseMultiPayload(v22, v23) == 1)
    {
      v24 = type metadata accessor for UserInterfaceSizeClass(0);
      v25 = *(_QWORD *)(v24 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v25 + 48))(v22, 1, v24))
      {
        v26 = sub_10004CFD4((uint64_t *)&unk_1009D8210);
        memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
        v27 = 1;
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v25 + 16))(v21, v22, v24);
        v27 = 1;
        (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v21, 0, 1, v24);
      }
    }
    else
    {
      v28 = *v22;
      *v21 = *v22;
      swift_retain(v28);
      v27 = 0;
    }
    swift_storeEnumTagMultiPayload(v21, v23, v27);
    v29 = a3[9];
    v30 = (uint64_t *)(a1 + v29);
    v31 = (uint64_t *)(a2 + v29);
    sub_100010960(a1 + v29, &qword_1009D8790);
    v32 = sub_10004CFD4(&qword_1009D8790);
    if (swift_getEnumCaseMultiPayload(v31, v32) == 1)
    {
      v33 = type metadata accessor for ContentSizeCategory(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v33 - 8) + 16))(v30, v31, v33);
      v34 = 1;
    }
    else
    {
      v35 = *v31;
      *v30 = *v31;
      swift_retain(v35);
      v34 = 0;
    }
    swift_storeEnumTagMultiPayload(v30, v32, v34);
  }
  v36 = a3[10];
  v37 = (_QWORD *)(a1 + v36);
  v38 = a2 + v36;
  v39 = *(void **)(a1 + v36);
  v40 = *(void **)(a2 + v36);
  *v37 = v40;
  v41 = v40;

  v37[1] = *(_QWORD *)(v38 + 8);
  if (a1 != a2)
  {
    v42 = a3[11];
    v43 = (uint64_t *)(a1 + v42);
    v44 = (uint64_t *)(a2 + v42);
    sub_100010960(a1 + v42, (uint64_t *)&unk_1009D8200);
    v45 = sub_10004CFD4((uint64_t *)&unk_1009D8200);
    if (swift_getEnumCaseMultiPayload(v44, v45) == 1)
    {
      v46 = type metadata accessor for ColorScheme(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v46 - 8) + 16))(v43, v44, v46);
      v47 = 1;
    }
    else
    {
      v48 = *v44;
      *v43 = *v44;
      swift_retain(v48);
      v47 = 0;
    }
    swift_storeEnumTagMultiPayload(v43, v45, v47);
  }
  v49 = a3[12];
  v50 = (char *)(a1 + v49);
  v51 = (char *)(a2 + v49);
  v52 = type metadata accessor for AccessibilityTechnologies(0);
  v53 = *(_QWORD *)(v52 - 8);
  v54 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v53 + 48);
  v55 = v54(v50, 1, v52);
  v56 = v54(v51, 1, v52);
  if (!v55)
  {
    if (!v56)
    {
      (*(void (**)(char *, char *, uint64_t))(v53 + 24))(v50, v51, v52);
      goto LABEL_34;
    }
    (*(void (**)(char *, uint64_t))(v53 + 8))(v50, v52);
    goto LABEL_33;
  }
  if (v56)
  {
LABEL_33:
    v57 = sub_10004CFD4((uint64_t *)&unk_1009D8220);
    memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
    goto LABEL_34;
  }
  (*(void (**)(char *, char *, uint64_t))(v53 + 16))(v50, v51, v52);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v53 + 56))(v50, 0, 1, v52);
LABEL_34:
  v58 = (int *)sub_10004CFD4(&qword_1009D3A10);
  v50[v58[9]] = v51[v58[9]];
  v59 = v58[10];
  v60 = *(_QWORD *)&v50[v59];
  v61 = *(_QWORD *)&v51[v59];
  *(_QWORD *)&v50[v59] = v61;
  swift_retain(v61);
  swift_release(v60);
  v50[v58[11]] = v51[v58[11]];
  *(_QWORD *)(a1 + a3[13]) = *(_QWORD *)(a2 + a3[13]);
  *(_QWORD *)(a1 + a3[14]) = *(_QWORD *)(a2 + a3[14]);
  *(_QWORD *)(a1 + a3[15]) = *(_QWORD *)(a2 + a3[15]);
  *(_QWORD *)(a1 + a3[16]) = *(_QWORD *)(a2 + a3[16]);
  *(_QWORD *)(a1 + a3[17]) = *(_QWORD *)(a2 + a3[17]);
  *(_QWORD *)(a1 + a3[18]) = *(_QWORD *)(a2 + a3[18]);
  return a1;
}

uint64_t sub_1002F4028(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  const void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  const void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  const void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  v6 = a3[7];
  v7 = (void *)(a1 + v6);
  v8 = (const void *)(a2 + v6);
  v9 = sub_10004CFD4(&qword_1009D26B8);
  if (swift_getEnumCaseMultiPayload(v8, v9) == 1)
  {
    v10 = type metadata accessor for UserInterfaceSizeClass(0);
    v11 = *(_QWORD *)(v10 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10))
    {
      v12 = sub_10004CFD4((uint64_t *)&unk_1009D8210);
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v7, v8, v10);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v7, 0, 1, v10);
    }
    swift_storeEnumTagMultiPayload(v7, v9, 1);
  }
  else
  {
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  v13 = a3[8];
  v14 = (void *)(a1 + v13);
  v15 = (const void *)(a2 + v13);
  if (swift_getEnumCaseMultiPayload(a2 + v13, v9) == 1)
  {
    v16 = type metadata accessor for UserInterfaceSizeClass(0);
    v17 = *(_QWORD *)(v16 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
    {
      v18 = sub_10004CFD4((uint64_t *)&unk_1009D8210);
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v17 + 32))(v14, v15, v16);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
    }
    swift_storeEnumTagMultiPayload(v14, v9, 1);
  }
  else
  {
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  v19 = a3[9];
  v20 = (void *)(a1 + v19);
  v21 = (const void *)(a2 + v19);
  v22 = sub_10004CFD4(&qword_1009D8790);
  if (swift_getEnumCaseMultiPayload(v21, v22) == 1)
  {
    v23 = type metadata accessor for ContentSizeCategory(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(v20, v21, v23);
    swift_storeEnumTagMultiPayload(v20, v22, 1);
  }
  else
  {
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
  }
  v24 = a3[11];
  *(_OWORD *)(a1 + a3[10]) = *(_OWORD *)(a2 + a3[10]);
  v25 = (void *)(a1 + v24);
  v26 = (const void *)(a2 + v24);
  v27 = sub_10004CFD4((uint64_t *)&unk_1009D8200);
  if (swift_getEnumCaseMultiPayload(v26, v27) == 1)
  {
    v28 = type metadata accessor for ColorScheme(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v28 - 8) + 32))(v25, v26, v28);
    swift_storeEnumTagMultiPayload(v25, v27, 1);
  }
  else
  {
    memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
  }
  v29 = a3[12];
  v30 = (char *)(a1 + v29);
  v31 = (char *)(a2 + v29);
  v32 = type metadata accessor for AccessibilityTechnologies(0);
  v33 = *(_QWORD *)(v32 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v31, 1, v32))
  {
    v34 = sub_10004CFD4((uint64_t *)&unk_1009D8220);
    memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v33 + 32))(v30, v31, v32);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
  }
  v35 = (int *)sub_10004CFD4(&qword_1009D3A10);
  v30[v35[9]] = v31[v35[9]];
  *(_QWORD *)&v30[v35[10]] = *(_QWORD *)&v31[v35[10]];
  v30[v35[11]] = v31[v35[11]];
  v36 = a3[14];
  *(_QWORD *)(a1 + a3[13]) = *(_QWORD *)(a2 + a3[13]);
  *(_QWORD *)(a1 + v36) = *(_QWORD *)(a2 + v36);
  v37 = a3[16];
  *(_QWORD *)(a1 + a3[15]) = *(_QWORD *)(a2 + a3[15]);
  *(_QWORD *)(a1 + v37) = *(_QWORD *)(a2 + v37);
  v38 = a3[18];
  *(_QWORD *)(a1 + a3[17]) = *(_QWORD *)(a2 + a3[17]);
  *(_QWORD *)(a1 + v38) = *(_QWORD *)(a2 + v38);
  return a1;
}

uint64_t sub_1002F4408(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  void *v10;
  const void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  const void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  const void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  void *v31;
  uint64_t v32;
  void *v33;
  const void *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t (*v42)(char *, uint64_t, uint64_t);
  int v43;
  int v44;
  uint64_t v45;
  int *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;

  v6 = *(_QWORD *)(a2 + 8);
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_release(v7);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  if (*(_QWORD *)(a1 + 48))
    _s5Books15CurrentPageViewVwxx_0((_QWORD *)(a1 + 24));
  v8 = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = v8;
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  if (a1 != a2)
  {
    v9 = a3[7];
    v10 = (void *)(a1 + v9);
    v11 = (const void *)(a2 + v9);
    sub_100010960(a1 + v9, &qword_1009D26B8);
    v12 = sub_10004CFD4(&qword_1009D26B8);
    if (swift_getEnumCaseMultiPayload(v11, v12) == 1)
    {
      v13 = type metadata accessor for UserInterfaceSizeClass(0);
      v14 = *(_QWORD *)(v13 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v14 + 48))(v11, 1, v13))
      {
        v15 = sub_10004CFD4((uint64_t *)&unk_1009D8210);
        memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v14 + 32))(v10, v11, v13);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v10, 0, 1, v13);
      }
      swift_storeEnumTagMultiPayload(v10, v12, 1);
    }
    else
    {
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    v16 = a3[8];
    v17 = (void *)(a1 + v16);
    v18 = (const void *)(a2 + v16);
    sub_100010960(a1 + v16, &qword_1009D26B8);
    v19 = sub_10004CFD4(&qword_1009D26B8);
    if (swift_getEnumCaseMultiPayload(v18, v19) == 1)
    {
      v20 = type metadata accessor for UserInterfaceSizeClass(0);
      v21 = *(_QWORD *)(v20 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v21 + 48))(v18, 1, v20))
      {
        v22 = sub_10004CFD4((uint64_t *)&unk_1009D8210);
        memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v21 + 32))(v17, v18, v20);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v17, 0, 1, v20);
      }
      swift_storeEnumTagMultiPayload(v17, v19, 1);
    }
    else
    {
      memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    }
    v23 = a3[9];
    v24 = (void *)(a1 + v23);
    v25 = (const void *)(a2 + v23);
    sub_100010960(a1 + v23, &qword_1009D8790);
    v26 = sub_10004CFD4(&qword_1009D8790);
    if (swift_getEnumCaseMultiPayload(v25, v26) == 1)
    {
      v27 = type metadata accessor for ContentSizeCategory(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v27 - 8) + 32))(v24, v25, v27);
      swift_storeEnumTagMultiPayload(v24, v26, 1);
    }
    else
    {
      memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    }
  }
  v28 = a3[10];
  v29 = (_QWORD *)(a1 + v28);
  v30 = (_QWORD *)(a2 + v28);
  v31 = *(void **)(a1 + v28);
  *v29 = *v30;

  v29[1] = v30[1];
  if (a1 != a2)
  {
    v32 = a3[11];
    v33 = (void *)(a1 + v32);
    v34 = (const void *)(a2 + v32);
    sub_100010960(a1 + v32, (uint64_t *)&unk_1009D8200);
    v35 = sub_10004CFD4((uint64_t *)&unk_1009D8200);
    if (swift_getEnumCaseMultiPayload(v34, v35) == 1)
    {
      v36 = type metadata accessor for ColorScheme(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v36 - 8) + 32))(v33, v34, v36);
      swift_storeEnumTagMultiPayload(v33, v35, 1);
    }
    else
    {
      memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
    }
  }
  v37 = a3[12];
  v38 = (char *)(a1 + v37);
  v39 = (char *)(a2 + v37);
  v40 = type metadata accessor for AccessibilityTechnologies(0);
  v41 = *(_QWORD *)(v40 - 8);
  v42 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v41 + 48);
  v43 = v42(v38, 1, v40);
  v44 = v42(v39, 1, v40);
  if (!v43)
  {
    if (!v44)
    {
      (*(void (**)(char *, char *, uint64_t))(v41 + 40))(v38, v39, v40);
      goto LABEL_29;
    }
    (*(void (**)(char *, uint64_t))(v41 + 8))(v38, v40);
    goto LABEL_28;
  }
  if (v44)
  {
LABEL_28:
    v45 = sub_10004CFD4((uint64_t *)&unk_1009D8220);
    memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
    goto LABEL_29;
  }
  (*(void (**)(char *, char *, uint64_t))(v41 + 32))(v38, v39, v40);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v41 + 56))(v38, 0, 1, v40);
LABEL_29:
  v46 = (int *)sub_10004CFD4(&qword_1009D3A10);
  v38[v46[9]] = v39[v46[9]];
  v47 = v46[10];
  v48 = *(_QWORD *)&v38[v47];
  *(_QWORD *)&v38[v47] = *(_QWORD *)&v39[v47];
  swift_release(v48);
  v38[v46[11]] = v39[v46[11]];
  v49 = a3[14];
  *(_QWORD *)(a1 + a3[13]) = *(_QWORD *)(a2 + a3[13]);
  *(_QWORD *)(a1 + v49) = *(_QWORD *)(a2 + v49);
  v50 = a3[16];
  *(_QWORD *)(a1 + a3[15]) = *(_QWORD *)(a2 + a3[15]);
  *(_QWORD *)(a1 + v50) = *(_QWORD *)(a2 + v50);
  v51 = a3[18];
  *(_QWORD *)(a1 + a3[17]) = *(_QWORD *)(a2 + a3[17]);
  *(_QWORD *)(a1 + v51) = *(_QWORD *)(a2 + v51);
  return a1;
}

uint64_t sub_1002F48D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1002F48E0);
}

uint64_t sub_1002F48E0(uint64_t a1, uint64_t a2, int *a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_10004CFD4(&qword_1009D26A0);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = a3[7];
    }
    else
    {
      v12 = sub_10004CFD4(&qword_1009D39F8);
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
      {
        v10 = v12;
        v11 = a3[9];
      }
      else
      {
        v13 = sub_10004CFD4((uint64_t *)&unk_1009D8230);
        v9 = *(_QWORD *)(v13 - 8);
        if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
        {
          v10 = v13;
          v11 = a3[11];
        }
        else
        {
          v10 = sub_10004CFD4(&qword_1009D3A10);
          v9 = *(_QWORD *)(v10 - 8);
          v11 = a3[12];
        }
      }
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t sub_1002F49D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1002F49E4);
}

uint64_t sub_1002F49E4(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v8 = sub_10004CFD4(&qword_1009D26A0);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = a4[7];
    }
    else
    {
      v12 = sub_10004CFD4(&qword_1009D39F8);
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == a3)
      {
        v10 = v12;
        v11 = a4[9];
      }
      else
      {
        v13 = sub_10004CFD4((uint64_t *)&unk_1009D8230);
        v9 = *(_QWORD *)(v13 - 8);
        if (*(_DWORD *)(v9 + 84) == a3)
        {
          v10 = v13;
          v11 = a4[11];
        }
        else
        {
          v10 = sub_10004CFD4(&qword_1009D3A10);
          v9 = *(_QWORD *)(v10 - 8);
          v11 = a4[12];
        }
      }
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

void sub_1002F4AD8(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  _QWORD v10[3];
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  char *v19;
  char *v20;
  char *v21;
  char *v22;

  v10[0] = &unk_100719288;
  v10[1] = (char *)&value witness table for Builtin.Int64 + 64;
  v10[2] = &unk_1007192A0;
  sub_100233378(319);
  if (v3 <= 0x3F)
  {
    v11 = *(_QWORD *)(v2 - 8) + 64;
    v12 = v11;
    sub_1002333D0(319, (unint64_t *)&qword_1009D3A88, (uint64_t (*)(uint64_t))&type metadata accessor for ContentSizeCategory);
    if (v5 <= 0x3F)
    {
      v13 = *(_QWORD *)(v4 - 8) + 64;
      v14 = &unk_1007192B8;
      sub_1002333D0(319, (unint64_t *)&qword_1009D82B0, (uint64_t (*)(uint64_t))&type metadata accessor for ColorScheme);
      if (v7 <= 0x3F)
      {
        v15 = *(_QWORD *)(v6 - 8) + 64;
        sub_10023341C();
        if (v9 <= 0x3F)
        {
          v16 = *(_QWORD *)(v8 - 8) + 64;
          v17 = (char *)&value witness table for Builtin.Int64 + 64;
          v18 = (char *)&value witness table for Builtin.Int64 + 64;
          v19 = (char *)&value witness table for Builtin.Int64 + 64;
          v20 = (char *)&value witness table for Builtin.Int64 + 64;
          v21 = (char *)&value witness table for Builtin.Int64 + 64;
          v22 = (char *)&value witness table for Builtin.Int64 + 64;
          swift_initStructMetadata(a1, 256, 15, v10, a1 + 16);
        }
      }
    }
  }
}

uint64_t sub_1002F4BF0(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_10086AF90, 1);
}

unint64_t sub_1002F4C34()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1009D9128;
  if (!qword_1009D9128)
  {
    v1 = sub_100030B74(&qword_1009D90F0);
    v2[0] = sub_100030B74(&qword_1009D90E0);
    v2[1] = sub_100030B34(&qword_1009D9120, &qword_1009D90E0, (uint64_t)&protocol conformance descriptor for HStack<A>);
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
    sub_100008DB0(qword_1009D4760, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, &qword_1009D9128);
  }
  return result;
}

uint64_t sub_1002F4D04(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SampleHeaderView(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1002F4D48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for SampleHeaderView(0) - 8) + 80);
  v3 = v0 + ((v2 + 16) & ~v2);
  v4 = (_QWORD *)swift_task_alloc(dword_1009D9134);
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_10000AE34;
  return sub_1002F2B38(v3);
}

unint64_t sub_1002F4DB4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1009D9140;
  if (!qword_1009D9140)
  {
    v1 = sub_100030B74(&qword_1009D9100);
    v2[0] = sub_100030B74(&qword_1009D90F0);
    v2[1] = sub_1002F4C34();
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.accessibilityFocused(_:)>>, 1);
    sub_100008DB0(&qword_1009D9148, (uint64_t (*)(uint64_t))&type metadata accessor for _TaskModifier, (uint64_t)&protocol conformance descriptor for _TaskModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009D9140);
  }
  return result;
}

uint64_t sub_1002F4E64()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for SampleHeaderView(0) - 8) + 80);
  return sub_1002F2C08(v0 + ((v1 + 16) & ~v1));
}

unint64_t sub_1002F4E94()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009D9150;
  if (!qword_1009D9150)
  {
    v1 = sub_100030B74(&qword_1009D9108);
    sub_1002F4DB4();
    sub_100008DB0(qword_1009D4760, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009D9150);
  }
  return result;
}

uint64_t sub_1002F4F38()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

unint64_t sub_1002F4F58()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009D9180;
  if (!qword_1009D9180)
  {
    v1 = sub_100030B74(&qword_1009D9178);
    sub_1002F4FC4();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009D9180);
  }
  return result;
}

unint64_t sub_1002F4FC4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009D9188;
  if (!qword_1009D9188)
  {
    v1 = sub_100030B74(&qword_1009D9190);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009D9188);
  }
  return result;
}

_QWORD *sub_1002F5028(_QWORD *a1)
{
  swift_release(*a1);
  return a1;
}

uint64_t sub_1002F5060(uint64_t result, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  if (a4)
  {
    sub_1001F596C(result, a2, a3 & 1);
    swift_bridgeObjectRetain(a4);
    return swift_retain(a5);
  }
  return result;
}

double sub_1002F509C(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  double result;

  if (a4)
  {
    sub_1001F5B28(a1, a2, a3 & 1);
    swift_release(a5);
    *(_QWORD *)&result = swift_bridgeObjectRelease(a4).n128_u64[0];
  }
  return result;
}

BOOL sub_1002F50D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  void (*v11)(char *, uint64_t, uint64_t);
  uint64_t (*v12)(char *, uint64_t);
  int v13;
  unint64_t v14;
  int v15;
  int v16;
  unint64_t v17;
  uint64_t v19;

  v4 = type metadata accessor for ContentSizeCategory(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v10 = (char *)&v19 - v9;
  v11 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v11((char *)&v19 - v9, a1, v4);
  v12 = *(uint64_t (**)(char *, uint64_t))(v5 + 88);
  v13 = v12(v10, v4);
  v14 = 0;
  v15 = enum case for ContentSizeCategory.extraSmall(_:);
  if (v13 != enum case for ContentSizeCategory.extraSmall(_:))
  {
    if (v13 == enum case for ContentSizeCategory.small(_:))
    {
      v14 = 1;
      goto LABEL_24;
    }
    if (v13 == enum case for ContentSizeCategory.medium(_:))
    {
      v14 = 2;
      goto LABEL_24;
    }
    if (v13 == enum case for ContentSizeCategory.large(_:))
      goto LABEL_7;
    if (v13 == enum case for ContentSizeCategory.extraLarge(_:))
    {
      v14 = 4;
    }
    else if (v13 == enum case for ContentSizeCategory.extraExtraLarge(_:))
    {
      v14 = 5;
    }
    else if (v13 == enum case for ContentSizeCategory.extraExtraExtraLarge(_:))
    {
      v14 = 6;
    }
    else if (v13 == enum case for ContentSizeCategory.accessibilityMedium(_:))
    {
      v14 = 7;
    }
    else if (v13 == enum case for ContentSizeCategory.accessibilityLarge(_:))
    {
      v14 = 8;
    }
    else if (v13 == enum case for ContentSizeCategory.accessibilityExtraLarge(_:))
    {
      v14 = 9;
    }
    else if (v13 == enum case for ContentSizeCategory.accessibilityExtraExtraLarge(_:))
    {
      v14 = 10;
    }
    else
    {
      if (v13 != enum case for ContentSizeCategory.accessibilityExtraExtraExtraLarge(_:))
      {
        (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
LABEL_7:
        v14 = 3;
        goto LABEL_24;
      }
      v14 = 11;
    }
  }
LABEL_24:
  v11(v8, a2, v4);
  v16 = v12(v8, v4);
  if (v16 == v15)
  {
    v17 = 0;
  }
  else if (v16 == enum case for ContentSizeCategory.small(_:))
  {
    v17 = 1;
  }
  else if (v16 == enum case for ContentSizeCategory.medium(_:))
  {
    v17 = 2;
  }
  else
  {
    if (v16 != enum case for ContentSizeCategory.large(_:))
    {
      if (v16 == enum case for ContentSizeCategory.extraLarge(_:))
      {
        v17 = 4;
        return v14 < v17;
      }
      if (v16 == enum case for ContentSizeCategory.extraExtraLarge(_:))
      {
        v17 = 5;
        return v14 < v17;
      }
      if (v16 == enum case for ContentSizeCategory.extraExtraExtraLarge(_:))
      {
        v17 = 6;
        return v14 < v17;
      }
      if (v16 == enum case for ContentSizeCategory.accessibilityMedium(_:))
      {
        v17 = 7;
        return v14 < v17;
      }
      if (v16 == enum case for ContentSizeCategory.accessibilityLarge(_:))
      {
        v17 = 8;
        return v14 < v17;
      }
      if (v16 == enum case for ContentSizeCategory.accessibilityExtraLarge(_:))
      {
        v17 = 9;
        return v14 < v17;
      }
      if (v16 == enum case for ContentSizeCategory.accessibilityExtraExtraLarge(_:))
      {
        v17 = 10;
        return v14 < v17;
      }
      if (v16 == enum case for ContentSizeCategory.accessibilityExtraExtraExtraLarge(_:))
      {
        v17 = 11;
        return v14 < v17;
      }
      (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    }
    v17 = 3;
  }
  return v14 < v17;
}

uint64_t sub_1002F5460()
{
  return sub_100030B34(&qword_1009D91B8, &qword_1009D9060, (uint64_t)&unk_10070F3D8);
}

uint64_t sub_1002F548C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v8;

  v8 = sub_1002F5568();
  return static EnvironmentKey<>._valuesEqual(_:_:)(a1, a2, a3, a4, v8);
}

uint64_t sub_1002F54DC()
{
  unint64_t v0;
  uint64_t v2;

  v0 = sub_1002F5514();
  EnvironmentValues.subscript.getter(&v2, &type metadata for BookLayoutModeKey, &type metadata for BookLayoutModeKey, v0);
  return v2;
}

unint64_t sub_1002F5514()
{
  unint64_t result;

  result = qword_1009D91C0;
  if (!qword_1009D91C0)
  {
    result = swift_getWitnessTable(&unk_100719674, &type metadata for BookLayoutModeKey);
    atomic_store(result, (unint64_t *)&qword_1009D91C0);
  }
  return result;
}

ValueMetadata *type metadata accessor for BookLayoutModeKey()
{
  return &type metadata for BookLayoutModeKey;
}

unint64_t sub_1002F5568()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009D91C8;
  if (!qword_1009D91C8)
  {
    type metadata accessor for BookLayoutMode(255);
    result = swift_getWitnessTable(&unk_10070D37C, v1);
    atomic_store(result, (unint64_t *)&qword_1009D91C8);
  }
  return result;
}

unint64_t sub_1002F55B4()
{
  unint64_t result;

  result = qword_1009D91D0;
  if (!qword_1009D91D0)
  {
    result = swift_getWitnessTable(&unk_100719740, &type metadata for CloseBookIntent);
    atomic_store(result, (unint64_t *)&qword_1009D91D0);
  }
  return result;
}

unint64_t sub_1002F55FC()
{
  unint64_t result;

  result = qword_1009D91D8;
  if (!qword_1009D91D8)
  {
    result = swift_getWitnessTable(&unk_100719768, &type metadata for CloseBookIntent);
    atomic_store(result, (unint64_t *)&qword_1009D91D8);
  }
  return result;
}

uint64_t sub_1002F5640(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_10086B018, 1);
}

uint64_t sub_1002F5650(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_10086AFF0, 1);
}

uint64_t sub_1002F5660()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[16];

  v0 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = &v13[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = type metadata accessor for Locale(0);
  __chkstk_darwin(v4);
  v6 = &v13[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v7);
  v9 = &v13[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = type metadata accessor for LocalizedStringResource(0);
  sub_10001BFD8(v10, qword_100A1E4D8);
  sub_100048F64(v10, (uint64_t)qword_100A1E4D8);
  v11 = String.LocalizationValue.init(stringLiteral:)(0x6F422065736F6C43, 0xEA00000000006B6FLL);
  static Locale.current.getter(v11);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for LocalizedStringResource.BundleDescription.main(_:), v0);
  return LocalizedStringResource.init(_:table:locale:bundle:comment:)(v9, 0, 0, v6, v3, "Title for 'Close Book' AppIntent.", 33, 2);
}

uint64_t sub_1002F57D4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1009CDE50 != -1)
    swift_once(&qword_1009CDE50, sub_1002F5660);
  v2 = type metadata accessor for LocalizedStringResource(0);
  v3 = sub_100048F64(v2, (uint64_t)qword_100A1E4D8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t sub_1002F5844(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  Swift::String v10;
  uint64_t KeyPath;
  uint64_t v12;
  Swift::String v13;
  uint64_t v15;

  v4 = sub_10004CFD4(&qword_1009D9200);
  __chkstk_darwin(v4);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10004CFD4(&qword_1009D9208);
  __chkstk_darwin(v7);
  v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  ParameterSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)(6, 1, a1, a2);
  v10._countAndFlagsBits = 0x2065736F6C43;
  v10._object = (void *)0xE600000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v10);
  KeyPath = swift_getKeyPath(&unk_1007197A0);
  v12 = sub_10004CFD4(&qword_1009D9210);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)(KeyPath, v7, v12);
  swift_release(KeyPath);
  v13._countAndFlagsBits = 0;
  v13._object = (void *)0xE000000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v13);
  ParameterSummaryString.init(stringInterpolation:)(v9, a1, a2);
  return IntentParameterSummary.init(_:table:)(v6, 0x6E65746E49707041, 0xEA00000000007374, a1, a2);
}

uint64_t sub_1002F59AC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v1 + 16) = a1;
  v2 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v1 + 24) = static MainActor.shared.getter(v2);
  v3 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor);
  return swift_task_switch(sub_1002F5A18, v3, v4);
}

uint64_t sub_1002F5A18()
{
  uint64_t v0;
  uint64_t v1;

  v1 = swift_release(*(_QWORD *)(v0 + 24));
  static IntentResult.result<>()(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002F5A54@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_1002F5ADC();
  *a1 = result;
  return result;
}

uint64_t sub_1002F5A78(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100279D34();
  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

ValueMetadata *type metadata accessor for CloseBookIntent()
{
  return &type metadata for CloseBookIntent;
}

uint64_t sub_1002F5AB0()
{
  return sub_100030B34(&qword_1009D91E8, &qword_1009D91F0, (uint64_t)&protocol conformance descriptor for IntentParameterSummary<A>);
}

uint64_t sub_1002F5ADC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t, uint64_t);
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  void (*v32)(char *, uint64_t, uint64_t, uint64_t);
  char *v33;
  char *v34;
  unint64_t v35;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  char *v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  _OWORD v46[7];

  v0 = type metadata accessor for InputConnectionBehavior(0);
  v44 = *(_QWORD *)(v0 - 8);
  v45 = v0;
  __chkstk_darwin(v0);
  v43 = (char *)&v37 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = sub_10004CFD4(&qword_1009D1330);
  v3 = __chkstk_darwin(v2);
  v42 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v41 = (char *)&v37 - v5;
  v6 = sub_10004CFD4(&qword_1009D1338);
  __chkstk_darwin(v6);
  v38 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for Locale(0);
  __chkstk_darwin(v12);
  v14 = (char *)&v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v15);
  v17 = (char *)&v37 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for LocalizedStringResource(0);
  v19 = *(_QWORD *)(v18 - 8);
  v20 = __chkstk_darwin(v18);
  v22 = (char *)&v37 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v39 = (char *)&v37 - v23;
  v40 = sub_10004CFD4(&qword_1009D91F8);
  v24 = String.LocalizationValue.init(stringLiteral:)(0x206F74206B6F6F42, 0xED000065736F6C43);
  static Locale.current.getter(v24);
  v25 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  v26 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 104);
  v26(v11, enum case for LocalizedStringResource.BundleDescription.main(_:), v8);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v17, 0, 0, v14, v11, "'Close Book' parameter that specifies which book to close.", 58, 2);
  v27 = String.LocalizationValue.init(stringLiteral:)(0xD00000000000002ALL, 0x80000001007BDCC0);
  static Locale.current.getter(v27);
  v26(v11, v25, v8);
  v28 = v38;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v17, 0, 0, v14, v11, "Description of the parameter of the specific book title to choose in the Close Book Intent", 90, 2);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v28, 0, 1, v18);
  memset(v46, 0, 96);
  v29 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000020, 0x80000001007BDD50);
  static Locale.current.getter(v29);
  v26(v11, v25, v8);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v17, 0, 0, v14, v11, "'Close Book' prompt when running with no book selected.", 55, 2);
  v30 = v41;
  IntentDialog.init(_:)(v22);
  v31 = type metadata accessor for IntentDialog(0);
  v32 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56);
  v32(v30, 0, 1, v31);
  v33 = v42;
  v32(v42, 1, 1, v31);
  v34 = v43;
  (*(void (**)(char *, _QWORD, uint64_t))(v44 + 104))(v43, enum case for InputConnectionBehavior.default(_:), v45);
  v35 = sub_1001F8840();
  return IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)(v39, v28, v46, v30, v33, v34, v35);
}

uint64_t sub_1002F5F0C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for SliderChangeEvent(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFD && a1[32])
    return (*(_DWORD *)a1 + 253);
  v3 = *a1;
  v4 = v3 >= 4;
  v5 = v3 - 4;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for SliderChangeEvent(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 253;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 32) = 0;
    if (a2)
      *(_BYTE *)result = a2 + 3;
  }
  return result;
}

ValueMetadata *type metadata accessor for SliderChangeEvent()
{
  return &type metadata for SliderChangeEvent;
}

uint64_t storeEnumTagSinglePayload for SliderState(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1002F6018 + 4 * byte_1007197D5[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1002F604C + 4 * byte_1007197D0[v4]))();
}

uint64_t sub_1002F604C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1002F6054(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1002F605CLL);
  return result;
}

uint64_t sub_1002F6068(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1002F6070);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1002F6074(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1002F607C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SliderState()
{
  return &type metadata for SliderState;
}

unint64_t sub_1002F609C()
{
  unint64_t result;

  result = qword_1009D9218;
  if (!qword_1009D9218)
  {
    result = swift_getWitnessTable(&unk_100719850, &type metadata for SliderState);
    atomic_store(result, (unint64_t *)&qword_1009D9218);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for RESliderView.PressState(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1002F6134 + 4 * byte_1007197DF[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1002F6168 + 4 * byte_1007197DA[v4]))();
}

uint64_t sub_1002F6168(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1002F6170(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1002F6178);
  return result;
}

uint64_t sub_1002F6184(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1002F618CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1002F6190(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1002F6198(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for RESliderView.PressState()
{
  return &type metadata for RESliderView.PressState;
}

unint64_t sub_1002F61B8()
{
  unint64_t result;

  result = qword_1009D9220;
  if (!qword_1009D9220)
  {
    result = swift_getWitnessTable(&unk_1007198D0, &type metadata for RESliderView.PressState);
    atomic_store(result, (unint64_t *)&qword_1009D9220);
  }
  return result;
}

void sub_1002F61FC()
{
  qword_100A1E4F0 = 0x4020000000000000;
}

uint64_t sub_1002F620C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  double v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  __int128 v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  __n128 v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char v67;
  void (*v68)(_QWORD, _QWORD, _QWORD);
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t OpaqueTypeConformance2;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  id v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t (**v94)(uint64_t);
  void (*v95)(char *, uint64_t);
  uint64_t v96;
  id v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  _QWORD *v101;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  void (*v113)(_QWORD, _QWORD, _QWORD);
  id v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  unint64_t v129;
  uint64_t v130;
  char v131;
  _OWORD v132[3];

  v2 = v1;
  v121 = a1;
  v3 = type metadata accessor for NSNotificationCenter.Publisher(0);
  v119 = *(_QWORD *)(v3 - 8);
  v120 = v3;
  __chkstk_darwin(v3);
  v118 = (char *)&v103 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v114 = (id)sub_10004CFD4(&qword_1009D9318);
  __chkstk_darwin(v114);
  v6 = (char *)&v103 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for RESliderView(0);
  v122 = *(_QWORD *)(v7 - 8);
  v8 = *(_QWORD *)(v122 + 64);
  v9 = __chkstk_darwin(v7);
  v123 = (uint64_t)&v103 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v105 = type metadata accessor for TapGesture(0, v9);
  v104 = *(_QWORD *)(v105 - 8);
  __chkstk_darwin(v105);
  v103 = (char *)&v103 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v125 = sub_10004CFD4(&qword_1009D9320);
  __chkstk_darwin(v125);
  v12 = (char *)&v103 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for RoundedRectangle(0);
  __chkstk_darwin(v13);
  v15 = (uint64_t *)((char *)&v103 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v16 = sub_10004CFD4(&qword_1009D9328);
  __chkstk_darwin(v16);
  v18 = (uint64_t *)((char *)&v103 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  v19 = sub_10004CFD4(&qword_1009D9330);
  __chkstk_darwin(v19);
  v21 = (char *)&v103 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v126 = sub_10004CFD4(&qword_1009D9338);
  __chkstk_darwin(v126);
  v23 = (char *)&v103 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v108 = sub_10004CFD4(&qword_1009D9340);
  v107 = *(_QWORD *)(v108 - 8);
  __chkstk_darwin(v108);
  v124 = (char *)&v103 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v112 = sub_10004CFD4(&qword_1009D9348);
  v111 = *(_QWORD *)(v112 - 8);
  __chkstk_darwin(v112);
  v110 = (char *)&v103 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v109 = sub_10004CFD4(&qword_1009D9350);
  __chkstk_darwin(v109);
  v117 = (char *)&v103 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v115 = sub_10004CFD4(&qword_1009D9358);
  __chkstk_darwin(v115);
  v116 = (uint64_t)&v103 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = floor(*(double *)(v2 + 40) * *(double *)(v2 + 16));
  v30 = *(_BYTE *)(v2 + 25) == 1;
  v113 = (void (*)(_QWORD, _QWORD, _QWORD))v6;
  if (v30)
  {
    v31 = v8;
    v32 = static Alignment.top.getter();
  }
  else
  {
    v31 = v8;
    if (*(unsigned __int8 *)(v2 + 27) == *(unsigned __int8 *)(v2 + 26))
      v32 = static Alignment.leading.getter(v27);
    else
      v32 = static Alignment.trailing.getter(v27);
  }
  *v18 = v32;
  v18[1] = v33;
  v34 = sub_10004CFD4(&qword_1009D9360);
  sub_1002F8B1C(v2, (_BYTE *)v18 + *(int *)(v34 + 44), v29);
  v35 = v2;
  if (qword_1009CE5B0 != -1)
    swift_once(&qword_1009CE5B0, sub_10047908C);
  v36 = qword_100A1E998;
  v37 = (char *)v15 + *(int *)(v13 + 20);
  v38 = enum case for RoundedCornerStyle.continuous(_:);
  v39 = type metadata accessor for RoundedCornerStyle(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 104))(v37, v38, v39);
  *v15 = v36;
  v15[1] = v36;
  v40 = (uint64_t)&v21[*(int *)(v19 + 36)];
  sub_10002CD84((uint64_t)v15, v40, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
  *(_WORD *)(v40 + *(int *)(sub_10004CFD4(&qword_1009F4140) + 36)) = 256;
  sub_10000B5E4((uint64_t)v18, (uint64_t)v21, &qword_1009D9328);
  sub_10002C8F0((uint64_t)v15, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
  v41 = sub_100010960((uint64_t)v18, &qword_1009D9328);
  v42 = 40;
  if (*(_BYTE *)(v35 + 25))
    v42 = 48;
  v43 = *(_QWORD *)(v35 + v42);
  v44 = static Alignment.center.getter(v41);
  _FrameLayout.init(width:height:alignment:)(v132, v43, 0, 0, 1, v44, v45);
  sub_10000B5E4((uint64_t)v21, (uint64_t)v23, &qword_1009D9330);
  v46 = &v23[*(int *)(v126 + 36)];
  v47 = v132[1];
  *(_OWORD *)v46 = v132[0];
  *((_OWORD *)v46 + 1) = v47;
  *((_OWORD *)v46 + 2) = v132[2];
  sub_100010960((uint64_t)v21, &qword_1009D9330);
  v48 = *(_QWORD *)(v35 + 64);
  v49 = *(_BYTE *)(v35 + 72);
  v127 = *(_QWORD *)(v35 + 56);
  v128 = v48;
  LOBYTE(v129) = v49;
  v50 = sub_10004CFD4(&qword_1009D9368);
  Binding.wrappedValue.getter(&v131, v50);
  v51 = v35;
  v106 = v31;
  if (v131 == 3)
  {
    v52 = v103;
    TapGesture.init(count:)(1);
    v53 = v123;
    sub_10002CD84(v35, v123, type metadata accessor for RESliderView);
    v54 = *(unsigned __int8 *)(v122 + 80);
    v55 = (v54 + 16) & ~v54;
    v56 = swift_allocObject(&unk_1008FBBA0, v55 + v31, v54 | 7);
    sub_1002FA7B4(v53, v56 + v55);
    v57 = swift_allocObject(&unk_1008FBBC8, 32, 7);
    *(_QWORD *)(v57 + 16) = sub_1002FA83C;
    *(_QWORD *)(v57 + 24) = v56;
    v58 = v105;
    Gesture.onEnded(_:)(sub_100064AD4, v57, v105, &protocol witness table for TapGesture);
    v59 = swift_release(v57);
    (*(void (**)(char *, uint64_t, __n128))(v104 + 8))(v52, v58, v59);
    v60 = sub_10004CFD4(&qword_1009D9370);
    v62 = (*(uint64_t (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v60 - 8) + 56))(v12, 0, 1, v60);
  }
  else
  {
    v61 = sub_10004CFD4(&qword_1009D9370);
    v62 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v61 - 8) + 56))(v12, 1, 1, v61);
  }
  v63 = static GestureMask.all.getter(v62);
  v64 = sub_1002FA630();
  v65 = sub_1002FA738(&qword_1009D9390, &qword_1009D9320, &qword_1009D9398, &qword_1009D9370);
  View.gesture<A>(_:including:)(v12, v63, v126, v125, v64, v65);
  sub_100010960((uint64_t)v12, &qword_1009D9320);
  sub_100010960((uint64_t)v23, &qword_1009D9338);
  v66 = *(_QWORD *)(v35 + 64);
  v67 = *(_BYTE *)(v35 + 72);
  v127 = *(_QWORD *)(v35 + 56);
  v128 = v66;
  LOBYTE(v129) = v67;
  Binding.wrappedValue.getter(&v131, v50);
  v68 = v113;
  if (v131 == 3)
  {
    v69 = sub_10004CFD4(&qword_1009D93A0);
    v71 = (*(uint64_t (**)(void (*)(_QWORD, _QWORD, _QWORD), uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v69 - 8) + 56))(v68, 1, 1, v69);
  }
  else
  {
    sub_1002F6D28((uint64_t)v113);
    v70 = sub_10004CFD4(&qword_1009D93A0);
    v71 = (*(uint64_t (**)(void (*)(_QWORD, _QWORD, _QWORD), _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v70 - 8) + 56))(v68, 0, 1, v70);
  }
  v72 = static GestureMask.all.getter(v71);
  v127 = v126;
  v128 = v125;
  v129 = v64;
  v130 = v65;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v127, &opaque type descriptor for <<opaque return type of View.gesture<A>(_:including:)>>, 1);
  v74 = sub_1002FA738(&qword_1009D93A8, &qword_1009D9318, &qword_1009D93B0, &qword_1009D93A0);
  v75 = v110;
  v76 = v72;
  v77 = v108;
  v78 = OpaqueTypeConformance2;
  v79 = v124;
  View.gesture<A>(_:including:)(v68, v76, v108, v114, v78, v74);
  sub_100010960((uint64_t)v68, &qword_1009D9318);
  (*(void (**)(char *, uint64_t))(v107 + 8))(v79, v77);
  v80 = v123;
  sub_10002CD84(v51, v123, type metadata accessor for RESliderView);
  v81 = *(unsigned __int8 *)(v122 + 80);
  v122 = v51;
  v125 = ((v81 + 16) & ~v81) + v106;
  v126 = (v81 + 16) & ~v81;
  v82 = v126;
  v124 = (char *)(v81 | 7);
  v83 = swift_allocObject(&unk_1008FBB00, v125, v81 | 7);
  sub_1002FA7B4(v80, v83 + v82);
  v114 = (id)objc_opt_self(NSNotificationCenter);
  v84 = objc_msgSend(v114, "defaultCenter");
  v85 = v118;
  NSNotificationCenter.publisher(for:object:)(UIDeviceOrientationDidChangeNotification, 0);

  v86 = swift_allocObject(&unk_1008FBB28, 32, 7);
  *(_QWORD *)(v86 + 16) = sub_1002FA7F8;
  *(_QWORD *)(v86 + 24) = v83;
  v87 = v111;
  v88 = (uint64_t)v117;
  v89 = v112;
  (*(void (**)(char *, char *, uint64_t))(v111 + 16))(v117, v75, v112);
  v90 = v109;
  v91 = v88 + *(int *)(v109 + 52);
  v92 = v119;
  v113 = *(void (**)(_QWORD, _QWORD, _QWORD))(v119 + 16);
  v93 = v120;
  v113(v91, v85, v120);
  v94 = (uint64_t (**)(uint64_t))(v88 + *(int *)(v90 + 56));
  *v94 = sub_100064AD4;
  v94[1] = (uint64_t (*)(uint64_t))v86;
  v95 = *(void (**)(char *, uint64_t))(v92 + 8);
  v95(v85, v93);
  (*(void (**)(char *, uint64_t))(v87 + 8))(v75, v89);
  sub_10002CD84(v122, v80, type metadata accessor for RESliderView);
  v96 = swift_allocObject(&unk_1008FBB50, v125, v124);
  sub_1002FA7B4(v80, v96 + v126);
  v97 = objc_msgSend(v114, "defaultCenter");
  NSNotificationCenter.publisher(for:object:)(UIApplicationDidEnterBackgroundNotification, 0);

  v98 = swift_allocObject(&unk_1008FBB78, 32, 7);
  *(_QWORD *)(v98 + 16) = sub_1002FA7F8;
  *(_QWORD *)(v98 + 24) = v96;
  v99 = v116;
  sub_10000B5E4(v88, v116, &qword_1009D9350);
  v100 = v115;
  v113(v99 + *(int *)(v115 + 52), v85, v93);
  v101 = (_QWORD *)(v99 + *(int *)(v100 + 56));
  *v101 = sub_1002FAC00;
  v101[1] = v98;
  v95(v85, v93);
  sub_100010960(v88, &qword_1009D9350);
  return sub_100025B3C(v99, v121, &qword_1009D9358);
}

uint64_t sub_1002F6D28@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double v5;
  char *v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  double v18;
  uint64_t v19;
  uint64_t v20;
  __int128 *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, char *, uint64_t);
  uint64_t v34;
  uint64_t v35;
  char *v36;
  void (**v37)(uint64_t, double *, uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  __n128 v46;
  __int128 v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  __int128 v56;
  uint64_t v57;
  __int128 v58;
  _QWORD v59[3];
  __int128 v60;

  v54 = a1;
  v2 = type metadata accessor for RESliderView(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  v5 = __chkstk_darwin(v2);
  v6 = (char *)&v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for LocalCoordinateSpace(0, v5);
  v8 = __chkstk_darwin(v7);
  v10 = (char *)&v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = type metadata accessor for DragGesture(0, v8);
  v11 = *(_QWORD *)(v50 - 8);
  __chkstk_darwin(v50);
  v13 = (char *)&v48 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = sub_10004CFD4(&qword_1009D93C8);
  __chkstk_darwin(v55);
  v15 = (char *)&v48 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_10004CFD4(&qword_1009D93D0);
  v17 = *(_QWORD *)(v16 - 8);
  v52 = v16;
  v53 = v17;
  v18 = __chkstk_darwin(v16);
  v51 = (char *)&v48 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  static CoordinateSpaceProtocol<>.local.getter(v18);
  DragGesture.init<A>(minimumDistance:coordinateSpace:)(v10, v7, &protocol witness table for LocalCoordinateSpace, 0.0);
  v20 = *(int *)(v2 + 72);
  v49 = v1;
  v21 = (__int128 *)(v1 + v20);
  v22 = *((_QWORD *)v21 + 2);
  v56 = *v21;
  v57 = v22;
  v58 = *(__int128 *)((char *)v21 + 24);
  v23 = sub_10004CFD4(&qword_1009D93D8);
  GestureState.projectedValue.getter(v59, v23);
  v24 = v59[0];
  v25 = v59[1];
  v26 = v59[2];
  v48 = v60;
  sub_10002CD84(v1, (uint64_t)v6, type metadata accessor for RESliderView);
  v27 = *(unsigned __int8 *)(v3 + 80);
  v28 = (v27 + 16) & ~v27;
  v29 = v28 + v4;
  v30 = v27 | 7;
  v31 = swift_allocObject(&unk_1008FBBF0, v29, v27 | 7);
  sub_1002FA7B4((uint64_t)v6, v31 + v28);
  v32 = v11;
  v33 = *(void (**)(char *, char *, uint64_t))(v11 + 16);
  v34 = v50;
  v33(v15, v13, v50);
  v35 = v55;
  v36 = &v15[*(int *)(v55 + 44)];
  *(_QWORD *)v36 = v24;
  *((_QWORD *)v36 + 1) = v25;
  *((_QWORD *)v36 + 2) = v26;
  *(_OWORD *)(v36 + 24) = v48;
  v37 = (void (**)(uint64_t, double *, uint64_t))&v15[*(int *)(v35 + 48)];
  *v37 = sub_1002FA8C0;
  v37[1] = (void (*)(uint64_t, double *, uint64_t))v31;
  (*(void (**)(char *, uint64_t))(v32 + 8))(v13, v34);
  v38 = v49;
  sub_10002CD84(v49, (uint64_t)v6, type metadata accessor for RESliderView);
  v39 = swift_allocObject(&unk_1008FBC18, v29, v30);
  sub_1002FA7B4((uint64_t)v6, v39 + v28);
  v40 = sub_100030B34(&qword_1009D93E0, &qword_1009D93C8, (uint64_t)&protocol conformance descriptor for GestureStateGesture<A, B>);
  v41 = sub_100008DB0(&qword_1009D93E8, (uint64_t (*)(uint64_t))&type metadata accessor for DragGesture.Value, (uint64_t)&protocol conformance descriptor for DragGesture.Value);
  v42 = v51;
  Gesture<>.onChanged(_:)(sub_1002FA918, v39, v55, v40, v41);
  swift_release(v39);
  sub_100010960((uint64_t)v15, &qword_1009D93C8);
  sub_10002CD84(v38, (uint64_t)v6, type metadata accessor for RESliderView);
  v43 = swift_allocObject(&unk_1008FBC40, v29, v30);
  sub_1002FA7B4((uint64_t)v6, v43 + v28);
  v44 = sub_100030B34(&qword_1009D93F0, &qword_1009D93D0, (uint64_t)&protocol conformance descriptor for _ChangedGesture<A>);
  v45 = v52;
  Gesture.onEnded(_:)(sub_1002FA928, v43, v52, v44);
  v46 = swift_release(v43);
  return (*(uint64_t (**)(char *, uint64_t, __n128))(v53 + 8))(v42, v45, v46);
}

uint64_t sub_1002F710C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  char v10;
  int v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;

  v1 = v0;
  v2 = type metadata accessor for RESliderView(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *(_QWORD *)(v0 + 64);
  v6 = *(_BYTE *)(v0 + 72);
  v14 = *(_QWORD *)(v0 + 56);
  v15 = v5;
  v16 = v6;
  v7 = sub_10004CFD4(&qword_1009D9368);
  Binding.wrappedValue.getter(&v17, v7);
  v8 = v17;
  sub_10002CD84(v1, (uint64_t)v4, type metadata accessor for RESliderView);
  if (v8 == 1)
  {
    sub_10002C8F0((uint64_t)v4, type metadata accessor for RESliderView);
  }
  else
  {
    v9 = *((_QWORD *)v4 + 8);
    v10 = v4[72];
    v14 = *((_QWORD *)v4 + 7);
    v15 = v9;
    v16 = v10;
    Binding.wrappedValue.getter(&v17, v7);
    v11 = v17;
    result = sub_10002C8F0((uint64_t)v4, type metadata accessor for RESliderView);
    if (v11 != 2)
      return result;
  }
  sub_1002F8948();
  return (*(uint64_t (**)(_QWORD, double, double, double))(v1 + 104))(0, *(double *)(v1 + 16), *(double *)(v1 + 16), 0.0);
}

BOOL sub_1002F7234()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  double v13;
  uint64_t v14;
  char *v15;
  int v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  uint64_t v27;
  double v28;
  _BOOL8 v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  NSObject *v35;
  os_log_type_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v1 = v0;
  v43 = type metadata accessor for Logger(0);
  v2 = *(_QWORD *)(v43 - 8);
  __chkstk_darwin(v43);
  v4 = (char *)&v42 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10004CFD4(&qword_1009D7440);
  __chkstk_darwin(v5);
  v7 = (uint64_t *)((char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = type metadata accessor for Date(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __chkstk_darwin(v12);
  v15 = (char *)&v42 - v14;
  v16 = *(unsigned __int8 *)(v0 + 25);
  v17 = DragGesture.Value.startLocation.getter(v13);
  v19 = v18;
  v20 = DragGesture.Value.location.getter();
  v22 = v19 - v21;
  v23 = v17 - v20;
  if (v16)
    v24 = v22;
  else
    v24 = v23;
  if (qword_1009CDE58 != -1)
    swift_once(&qword_1009CDE58, sub_1002F61FC);
  v25 = fabs(v24);
  v26 = *(double *)&qword_100A1E4F0;
  v27 = type metadata accessor for RESliderView(0);
  sub_10004CFD4(&qword_1009D9230);
  State.wrappedValue.getter(v7);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    sub_100010960((uint64_t)v7, &qword_1009D7440);
    v28 = 0.0;
    if (v25 < v26)
    {
      v29 = 1;
      goto LABEL_11;
    }
  }
  else
  {
    v30 = (*(uint64_t (**)(char *, _QWORD *, uint64_t))(v9 + 32))(v15, v7, v8);
    Date.init()(v30);
    v28 = Date.timeIntervalSince(_:)(v15);
    v31 = *(void (**)(char *, uint64_t))(v9 + 8);
    v31(v11, v8);
    v31(v15, v8);
    v29 = v28 <= 0.5;
    if (v25 < v26)
      goto LABEL_11;
  }
  v29 = 0;
LABEL_11:
  v32 = v1 + *(int *)(v27 + 68);
  v33 = v43;
  v34 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v32, v43);
  v35 = Logger.logObject.getter(v34);
  v36 = static os_log_type_t.info.getter(v35);
  if (os_log_type_enabled(v35, v36))
  {
    v37 = swift_slowAlloc(32, -1);
    v38 = swift_slowAlloc(32, -1);
    v45 = v38;
    *(_DWORD *)v37 = 136315650;
    if (v29)
      v39 = 7364980;
    else
      v39 = 1734439524;
    if (v29)
      v40 = 0xE300000000000000;
    else
      v40 = 0xE400000000000000;
    v44 = sub_100040F58(v39, v40, &v45);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v44, &v45, v37 + 4, v37 + 12);
    swift_bridgeObjectRelease(v40);
    *(_WORD *)(v37 + 12) = 2048;
    v44 = *(_QWORD *)&v28;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v44, &v45, v37 + 14, v37 + 22);
    *(_WORD *)(v37 + 22) = 2048;
    v44 = *(_QWORD *)&v25;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v44, &v45, v37 + 24, v37 + 32);
    _os_log_impl((void *)&_mh_execute_header, v35, v36, "Touch interpreted as %s.  duration: %f, delta %f", (uint8_t *)v37, 0x20u);
    swift_arrayDestroy(v38, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v38, -1, -1);
    swift_slowDealloc(v37, -1, -1);

    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v43);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v33);
  }
  return v29;
}

void sub_1002F7600(uint64_t a1, double *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  double v29;
  double *v30;
  uint64_t v31;
  void **v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  double v36;
  unsigned int v37;
  _QWORD *v38;
  int v39;
  double v40;
  double v41;
  double v42;
  double v43;
  uint64_t v44;
  double v45;
  double v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  double *v50;
  uint64_t v51;
  unsigned __int8 v52;
  void **aBlock;
  uint64_t v54;
  uint64_t (*v55)(uint64_t);
  void *v56;
  uint64_t (*v57)();
  uint64_t v58;

  v50 = a2;
  v51 = a1;
  v5 = type metadata accessor for DispatchWorkItemFlags(0);
  v49 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v7 = (char *)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DispatchQoS(0);
  v47 = *(_QWORD *)(v8 - 8);
  v48 = v8;
  __chkstk_darwin(v8);
  v10 = (char *)&v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for RESliderView(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  __chkstk_darwin(v11);
  v14 = sub_10004CFD4(&qword_1009D7440);
  __chkstk_darwin(v14);
  v16 = (uint64_t *)((char *)&v47 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10004CFD4(&qword_1009D9230);
  State.wrappedValue.getter(v16);
  v17 = type metadata accessor for Date(0);
  v18 = (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 48))(v16, 1, v17);
  sub_100010960((uint64_t)v16, &qword_1009D7440);
  if (v18 == 1)
  {
    v19 = sub_100009E04(0, (unint64_t *)&qword_1009CEC30, OS_dispatch_queue_ptr);
    v20 = (void *)static OS_dispatch_queue.main.getter(v19);
    sub_10002CD84(a4, (uint64_t)&v47 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for RESliderView);
    v21 = *(unsigned __int8 *)(v12 + 80);
    v22 = (v21 + 16) & ~v21;
    v23 = swift_allocObject(&unk_1008FBC68, v22 + v13, v21 | 7);
    sub_1002FA7B4((uint64_t)&v47 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v23 + v22);
    v57 = sub_1002FA9B4;
    v58 = v23;
    aBlock = _NSConcreteStackBlock;
    v54 = 1107296256;
    v55 = sub_1000147F0;
    v56 = &unk_1008FBC80;
    v24 = _Block_copy(&aBlock);
    swift_release(v58);
    static DispatchQoS.unspecified.getter(v25);
    aBlock = (void **)_swiftEmptyArrayStorage;
    v26 = sub_100008DB0((unint64_t *)&qword_1009D48E0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v27 = sub_10004CFD4((uint64_t *)&unk_1009DB460);
    v28 = sub_100030B34((unint64_t *)&qword_1009D48F0, (uint64_t *)&unk_1009DB460, (uint64_t)&protocol conformance descriptor for [A]);
    dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v27, v28, v5, v26);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v10, v7, v24);
    _Block_release(v24);

    (*(void (**)(char *, uint64_t))(v49 + 8))(v7, v5);
    (*(void (**)(char *, uint64_t))(v47 + 8))(v10, v48);
  }
  if (!sub_1002F7234())
  {
    v29 = ((double (*)(void))DragGesture.Value.location.getter)();
    v30 = v50;
    *v50 = v29;
    *((_QWORD *)v30 + 1) = v31;
    v32 = *(void ***)(a4 + 56);
    v33 = *(_QWORD *)(a4 + 64);
    v34 = *(_BYTE *)(a4 + 72);
    aBlock = v32;
    v54 = v33;
    LOBYTE(v55) = v34;
    v35 = sub_10004CFD4(&qword_1009D9368);
    Binding.wrappedValue.getter(&v52, v35);
    if (*(_BYTE *)(a4 + 24) == 1)
    {
      v37 = v52;
      aBlock = v32;
      v54 = v33;
      LOBYTE(v55) = v34;
      v38 = Binding.wrappedValue.getter(&v52, v35);
      if (v52 != 2)
      {
        v39 = *(unsigned __int8 *)(a4 + 25);
        DragGesture.Value.location.getter(v38);
        if (!v39)
          v36 = v40;
        if (*(double *)(a4 + 48) > v36)
          v37 = 1;
        else
          v37 = 2;
      }
    }
    else
    {
      v37 = 2;
    }
    v41 = DragGesture.Value.startLocation.getter(v36);
    v43 = v42;
    v45 = DragGesture.Value.location.getter(v44);
    sub_1002F83B8(v37, v41, v43, v45, v46);
  }
}

uint64_t sub_1002F79E4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  char *v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE v16[15];
  _BYTE v17[9];
  uint64_t v18;

  v2 = sub_10004CFD4(&qword_1009D7440);
  __chkstk_darwin(v2);
  v4 = &v16[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v5);
  v7 = &v16[-v6];
  v8 = (char *)(a1 + *(int *)(type metadata accessor for RESliderView(0) + 88));
  v9 = *v8;
  v10 = *((_QWORD *)v8 + 1);
  v17[1] = v9;
  v18 = v10;
  v17[0] = 0;
  v11 = sub_10004CFD4(&qword_1009D8450);
  State.wrappedValue.setter(v17, v11);
  Date.init()(v12);
  v13 = type metadata accessor for Date(0);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v7, 0, 1, v13);
  sub_10000B5E4((uint64_t)v7, (uint64_t)v4, &qword_1009D7440);
  v14 = sub_10004CFD4(&qword_1009D9230);
  State.wrappedValue.setter(v4, v14);
  return sub_100010960((uint64_t)v7, &qword_1009D7440);
}

double sub_1002F7B1C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  _QWORD *v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  id v27;
  double v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  double result;
  uint64_t v35;
  uint64_t v36;
  _QWORD v37[2];
  char v38;
  __int128 v39;
  char v40;
  uint64_t v41;

  v4 = type metadata accessor for DragGesture.Value(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for RESliderView(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(a2 + 88);
  v12 = *(_BYTE *)(a2 + 96);
  *(_QWORD *)&v39 = *(_QWORD *)(a2 + 80);
  *((_QWORD *)&v39 + 1) = v11;
  v40 = v12;
  v13 = sub_10004CFD4(&qword_1009D93C0);
  v14 = Binding.wrappedValue.getter(v37, v13);
  if (!LOBYTE(v37[0]))
  {
    v35 = (uint64_t)&v35;
    v15.n128_f64[0] = __chkstk_darwin(v14);
    *(&v35 - 2) = a2;
    v16 = static Animation.default.getter(v15);
    v36 = a1;
    withAnimation<A>(_:_:)(v16, sub_1002FA980, &v35 - 4, (char *)&type metadata for () + 8);
    swift_release(v16);
    v17 = static Animation.interpolatingSpring(mass:stiffness:damping:initialVelocity:)(1.0, 350.0, 50.0, 0.0);
    v18 = Animation.delay(_:)(v17, 0.2);
    swift_release(v17);
    __chkstk_darwin(v19);
    *(&v35 - 2) = a2;
    a1 = v36;
    withAnimation<A>(_:_:)(v18, sub_1002FA998, &v35 - 4, (char *)&type metadata for () + 8);
    swift_release(v18);
  }
  v20 = a2 + *(int *)(v8 + 88);
  v21 = *(_QWORD *)(v20 + 8);
  LOBYTE(v39) = *(_BYTE *)v20;
  *((_QWORD *)&v39 + 1) = v21;
  v22 = sub_10004CFD4(&qword_1009D8450);
  State.wrappedValue.getter(v37);
  v23 = v37[0];
  sub_10002CD84(a2, (uint64_t)v10, type metadata accessor for RESliderView);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  if ((v23 & 1) != 0)
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    v24 = sub_10002C8F0((uint64_t)v10, type metadata accessor for RESliderView);
  }
  else
  {
    v25 = sub_1002F7234();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    v24 = sub_10002C8F0((uint64_t)v10, type metadata accessor for RESliderView);
    if (!v25)
    {
      v26 = *(_QWORD *)(v20 + 8);
      LOBYTE(v39) = *(_BYTE *)v20;
      *((_QWORD *)&v39 + 1) = v26;
      LOBYTE(v37[0]) = 1;
      State.wrappedValue.setter(v37, v22);
      v27 = objc_msgSend(objc_allocWithZone((Class)UIImpactFeedbackGenerator), "initWithStyle:", 2);
      objc_msgSend(v27, "impactOccurred");

    }
  }
  v28 = DragGesture.Value.location.getter(v24);
  v29 = a2 + *(int *)(v8 + 80);
  v30 = *(_BYTE *)(v29 + 16);
  v31 = *(_QWORD *)(v29 + 24);
  v39 = *(_OWORD *)v29;
  v40 = v30;
  v41 = v31;
  *(double *)v37 = v28;
  v37[1] = v32;
  v38 = 0;
  v33 = sub_10004CFD4(&qword_1009D93B8);
  *(_QWORD *)&result = State.wrappedValue.setter(v37, v33).n128_u64[0];
  return result;
}

uint64_t sub_1002F7E50(uint64_t a1)
{
  uint64_t v1;
  char v2;
  uint64_t v3;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v1 = *(_QWORD *)(a1 + 88);
  v2 = *(_BYTE *)(a1 + 96);
  v6 = *(_QWORD *)(a1 + 80);
  v7 = v1;
  v8 = v2;
  v5 = 1;
  v3 = sub_10004CFD4(&qword_1009D93C0);
  return Binding.wrappedValue.setter(&v5, v3);
}

uint64_t sub_1002F7EAC(uint64_t a1)
{
  uint64_t v1;
  char v2;
  uint64_t v3;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v1 = *(_QWORD *)(a1 + 88);
  v2 = *(_BYTE *)(a1 + 96);
  v6 = *(_QWORD *)(a1 + 80);
  v7 = v1;
  v8 = v2;
  v5 = 2;
  v3 = sub_10004CFD4(&qword_1009D93C0);
  return Binding.wrappedValue.setter(&v5, v3);
}

void sub_1002F7F08(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  int *v14;
  char *v15;
  char v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  uint64_t (*v20)(char *, uint64_t, uint64_t);
  uint64_t v21;
  NSObject *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  os_log_type_t v26;
  uint64_t v27;
  uint8_t *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  __n128 v35;
  uint8_t *v36;
  void (*v37)(void);
  uint64_t v38;
  int *v39;
  id v40;
  __int128 *v41;
  char v42;
  uint64_t v43;
  _QWORD *v44;
  double v45;
  double v46;
  double v47;
  double v48;
  double v49;
  double v50;
  double v51;
  double v52;
  uint64_t *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  double v57;
  double v58;
  double v59;
  double v60;
  uint64_t v61;
  double v62;
  double v63;
  double v64;
  double v65;
  double v66;
  uint64_t *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  double v71;
  uint8_t *v72;
  int *v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  __int128 v82;
  char v83;
  uint64_t v84;
  double v85;
  double v86;
  char v87;

  v4 = type metadata accessor for DragGesture.Value(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v76 = (char *)&v72 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v72 - v8;
  v10 = type metadata accessor for Logger(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v72 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = (int *)type metadata accessor for RESliderView(0);
  v15 = (char *)(a2 + v14[22]);
  v16 = *v15;
  v78 = v15;
  v17 = *((_QWORD *)v15 + 1);
  LOBYTE(v82) = v16;
  *((_QWORD *)&v82 + 1) = v17;
  LOBYTE(v85) = 0;
  v77 = sub_10004CFD4(&qword_1009D8450);
  v18 = State.wrappedValue.setter(&v85, v77);
  v19 = a2 + v14[17];
  v80 = v11;
  v81 = v10;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v11 + 16))(v13, v19, v10, v18);
  v79 = v5;
  v20 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v21 = v20(v9, a1, v4);
  v22 = Logger.logObject.getter(v21);
  v26 = static os_log_type_t.debug.getter(v22, v23, v24, v25);
  if (os_log_type_enabled(v22, v26))
  {
    v27 = swift_slowAlloc(12, -1);
    v73 = v14;
    v28 = (uint8_t *)v27;
    v29 = swift_slowAlloc(32, -1);
    v74 = a1;
    v30 = v29;
    *(_QWORD *)&v82 = v29;
    v75 = a2;
    *(_DWORD *)v28 = 136315138;
    v72 = v28 + 4;
    v31 = v76;
    v20(v76, (uint64_t)v9, v4);
    v32 = String.init<A>(describing:)(v31, v4);
    v34 = v33;
    v85 = COERCE_DOUBLE(sub_100040F58(v32, v33, (uint64_t *)&v82));
    a2 = v75;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v85, &v86, v72, v28 + 12);
    v35 = swift_bridgeObjectRelease(v34);
    (*(void (**)(char *, uint64_t, __n128))(v79 + 8))(v9, v4, v35);
    _os_log_impl((void *)&_mh_execute_header, v22, v26, "Slide drag gesture %s", v28, 0xCu);
    swift_arrayDestroy(v30, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v30, -1, -1);
    v36 = v28;
    v14 = v73;
    swift_slowDealloc(v36, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v79 + 8))(v9, v4);
  }

  (*(void (**)(char *, uint64_t))(v80 + 8))(v13, v81);
  if (sub_1002F7234())
  {
    v37 = *(void (**)(void))(a2 + 120);
    if (v37)
      v37();
  }
  else
  {
    v38 = *((_QWORD *)v78 + 1);
    LOBYTE(v82) = *v78;
    *((_QWORD *)&v82 + 1) = v38;
    State.wrappedValue.getter(&v85);
    if ((LOBYTE(v85) & 1) == 0)
    {
      v39 = v14;
      v40 = objc_msgSend(objc_allocWithZone((Class)UIImpactFeedbackGenerator), "initWithStyle:", 2);
      objc_msgSend(v40, "impactOccurred");

      v14 = v39;
    }
    v41 = (__int128 *)(a2 + v14[20]);
    v42 = *((_BYTE *)v41 + 16);
    v43 = *((_QWORD *)v41 + 3);
    v82 = *v41;
    v83 = v42;
    v84 = v43;
    sub_10004CFD4(&qword_1009D93B8);
    v44 = State.wrappedValue.getter(&v85);
    if ((v87 & 1) != 0)
    {
      v45 = DragGesture.Value.location.getter(v44);
      v47 = *(double *)(a2 + 40);
      if (*(_BYTE *)(a2 + 25) == 1)
      {
        v48 = v46 / v47;
      }
      else
      {
        v48 = v45 / v47;
        if (*(_BYTE *)(a2 + 26))
          v48 = 1.0 - v48;
      }
      v53 = (uint64_t *)(a2 + v14[19]);
      v54 = *v53;
      v55 = v53[1];
      *(_QWORD *)&v82 = v54;
      *((_QWORD *)&v82 + 1) = v55;
      v85 = v48;
      v56 = sub_10004CFD4(&qword_1009D93F8);
      *(_QWORD *)&v57 = State.wrappedValue.setter(&v85, v56).n128_u64[0];
      v58 = DragGesture.Value.startLocation.getter(v57);
      v60 = v59;
      v62 = DragGesture.Value.location.getter(v61);
      v64 = v63;
      v65 = v58;
      v66 = v60;
    }
    else
    {
      v49 = v85;
      v50 = v86;
      v51 = *(double *)(a2 + 40);
      if ((*(_BYTE *)(a2 + 25) & 1) != 0)
      {
        v52 = v86 / v51;
      }
      else
      {
        v52 = v85 / v51;
        if (*(_BYTE *)(a2 + 26))
          v52 = 1.0 - v52;
      }
      v67 = (uint64_t *)(a2 + v14[19]);
      v68 = *v67;
      v69 = v67[1];
      *(_QWORD *)&v82 = v68;
      *((_QWORD *)&v82 + 1) = v69;
      v85 = v52;
      v70 = sub_10004CFD4(&qword_1009D93F8);
      *(_QWORD *)&v71 = State.wrappedValue.setter(&v85, v70).n128_u64[0];
      v65 = DragGesture.Value.startLocation.getter(v71);
      v62 = v49;
      v64 = v50;
    }
    sub_1002F83B8(0, v65, v66, v62, v64);
  }
  sub_1002F8948();
}

void sub_1002F83B8(unsigned int a1, double a2, double a3, double a4, double a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v11;
  uint64_t v12;
  double v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  int v20;
  void *v21;
  void *v22;
  uint64_t KeyPath;
  uint64_t v24;
  double v25;
  double v26;
  double v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  double v31;
  double v32;
  double v33;
  double v34;
  double v35;
  double v36;
  uint64_t v37;
  uint64_t (*v38)(char *, uint64_t, uint64_t);
  uint64_t v39;
  NSObject *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  os_log_type_t v44;
  double v45;
  _DWORD *v46;
  uint64_t v47;
  char *v48;
  _DWORD *v49;
  _DWORD *v50;
  void (*v51)(char *, uint64_t);
  uint64_t v52;
  NSObject *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  os_log_type_t v57;
  uint64_t v58;
  uint8_t *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  unint64_t v68;
  char *v69;
  uint64_t v70;
  double v71;
  uint64_t v72;
  uint64_t v73;
  unsigned int v74;
  char *v75;
  __int128 v76;
  char v77;
  double v78;
  double v79;
  double v80;
  double v81;

  v6 = v5;
  v74 = a1;
  v11 = type metadata accessor for RESliderView(0);
  __chkstk_darwin(v11);
  *(_QWORD *)&v13 = (char *)&v70 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for Logger(0);
  v75 = *(char **)(v14 - 8);
  __chkstk_darwin(v14);
  v16 = (char *)&v70 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v19 = (char *)&v70 - v18;
  v20 = *(unsigned __int8 *)(v5 + 25);
  if (*(_BYTE *)(v5 + 25))
    v21 = &unk_1007199E0;
  else
    v21 = &unk_1007199C0;
  if (*(_BYTE *)(v5 + 25))
    v22 = &unk_1007199C0;
  else
    v22 = &unk_1007199E0;
  KeyPath = swift_getKeyPath(v21);
  v24 = swift_getKeyPath(v22);
  *(double *)&v76 = a4;
  *((double *)&v76 + 1) = a5;
  swift_getAtKeyPath(&v76, KeyPath);
  v71 = v81;
  v79 = a2;
  v80 = a3;
  swift_getAtKeyPath(&v79, KeyPath);
  v25 = v78;
  *(double *)&v76 = a4;
  *((double *)&v76 + 1) = a5;
  swift_getAtKeyPath(&v76, v24);
  v26 = v81;
  v79 = a2;
  v80 = a3;
  swift_getAtKeyPath(&v79, v24);
  v27 = v78;
  v28 = *(_QWORD *)(v6 + 64);
  v29 = *(_BYTE *)(v6 + 72);
  *(_QWORD *)&v76 = *(_QWORD *)(v6 + 56);
  *((_QWORD *)&v76 + 1) = v28;
  v77 = v29;
  v30 = sub_10004CFD4(&qword_1009D9368);
  Binding.wrappedValue.getter(&v79, v30);
  *(double *)&v76 = a4;
  *((double *)&v76 + 1) = a5;
  v73 = KeyPath;
  swift_getAtKeyPath(&v76, KeyPath);
  v31 = v81;
  v79 = a4;
  v80 = a5;
  v72 = v24;
  swift_getAtKeyPath(&v79, v24);
  v32 = *(double *)(v6 + 40);
  v33 = v31 / v32;
  if (v20)
  {
    v34 = a3 / v32;
  }
  else
  {
    if (*(_BYTE *)(v6 + 26))
      v33 = 1.0 - v33;
    v35 = a2 / v32;
    if (*(_BYTE *)(v6 + 26))
      v34 = 1.0 - v35;
    else
      v34 = v35;
  }
  v81 = *(double *)(v6 + 16) - *(double *)(v6 + 32);
  v76 = xmmword_100719AB0;
  Comparable.clamped(_:)(&v79, &v76, &type metadata for Double, &protocol witness table for Double);
  v36 = v79;
  v37 = v6 + *(int *)(v11 + 68);
  v38 = (uint64_t (*)(char *, uint64_t, uint64_t))*((_QWORD *)v75 + 2);
  v39 = v38(v19, v37, v14);
  v40 = Logger.logObject.getter(v39);
  v44 = static os_log_type_t.debug.getter(v40, v41, v42, v43);
  if (os_log_type_enabled(v40, v44))
  {
    v45 = vabdd_f64(v71, v25);
    v46 = (_DWORD *)swift_slowAlloc(22, -1);
    v71 = v13;
    v47 = v14;
    v48 = v16;
    v49 = v46;
    *v46 = 134218240;
    *(double *)&v76 = v45;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v76, (char *)&v76 + 8, v46 + 1, v46 + 3);
    *((_WORD *)v49 + 6) = 2048;
    *(_QWORD *)&v76 = vabdd_f64(v26, v27);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v76, (char *)&v76 + 8, (char *)v49 + 14, (char *)v49 + 22);
    _os_log_impl((void *)&_mh_execute_header, v40, v44, "dragValue primary Delta: %f secondary Delta: %f)", (uint8_t *)v49, 0x16u);
    v50 = v49;
    v16 = v48;
    v14 = v47;
    v13 = v71;
    swift_slowDealloc(v50, -1, -1);
  }

  v51 = (void (*)(char *, uint64_t))*((_QWORD *)v75 + 1);
  v51(v19, v14);
  v38(v16, v37, v14);
  v52 = sub_10002CD84(v6, *(uint64_t *)&v13, type metadata accessor for RESliderView);
  v53 = Logger.logObject.getter(v52);
  v57 = static os_log_type_t.debug.getter(v53, v54, v55, v56);
  if (os_log_type_enabled(v53, v57))
  {
    v58 = swift_slowAlloc(12, -1);
    v75 = v16;
    v59 = (uint8_t *)v58;
    v60 = swift_slowAlloc(32, -1);
    *(_QWORD *)&v76 = v60;
    *(_DWORD *)v59 = 136315138;
    *(_QWORD *)&v71 = v59 + 4;
    v61 = sub_10004CFD4((uint64_t *)&unk_1009D1970);
    v62 = swift_allocObject(v61, 272, 7);
    *(_OWORD *)(v62 + 16) = xmmword_1007133E0;
    v63 = *(_QWORD *)(*(_QWORD *)&v13 + 16);
    *(_QWORD *)(v62 + 56) = &type metadata for Double;
    *(_QWORD *)(v62 + 64) = &protocol witness table for Double;
    *(_QWORD *)(v62 + 32) = v63;
    *(_QWORD *)(v62 + 96) = &type metadata for Double;
    *(_QWORD *)(v62 + 104) = &protocol witness table for Double;
    *(double *)(v62 + 72) = v33;
    *(_QWORD *)(v62 + 136) = &type metadata for Double;
    *(_QWORD *)(v62 + 144) = &protocol witness table for Double;
    *(double *)(v62 + 112) = v34;
    v64 = *(_QWORD *)(*(_QWORD *)&v13 + 32);
    *(_QWORD *)(v62 + 176) = &type metadata for Double;
    *(_QWORD *)(v62 + 184) = &protocol witness table for Double;
    *(_QWORD *)(v62 + 152) = v64;
    *(_QWORD *)(v62 + 216) = &type metadata for Double;
    *(_QWORD *)(v62 + 224) = &protocol witness table for Double;
    *(double *)(v62 + 192) = v33 - v34;
    *(_QWORD *)(v62 + 256) = &type metadata for Double;
    *(_QWORD *)(v62 + 264) = &protocol witness table for Double;
    *(double *)(v62 + 232) = v36;
    v65 = String.init(format:_:)(0xD00000000000006ELL, 0x80000001007BDE10, v62);
    v66 = *(_QWORD *)&v13;
    v68 = v67;
    v79 = COERCE_DOUBLE(sub_100040F58(v65, v67, (uint64_t *)&v76));
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v79, &v80, *(_QWORD *)&v71, v59 + 12);
    swift_bridgeObjectRelease(v68);
    sub_10002C8F0(v66, type metadata accessor for RESliderView);
    _os_log_impl((void *)&_mh_execute_header, v53, v57, "slide %s", v59, 0xCu);
    swift_arrayDestroy(v60, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v60, -1, -1);
    swift_slowDealloc(v59, -1, -1);

    v69 = v75;
  }
  else
  {
    sub_10002C8F0(*(uint64_t *)&v13, type metadata accessor for RESliderView);

    v69 = v16;
  }
  v51(v69, v14);
  (*(void (**)(_QWORD, double, double, double))(v6 + 104))(v74, v33, v36, v33 - v34);
  swift_release(v73);
  swift_release(v72);
}

double sub_1002F8948()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 *v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  double result;
  _BYTE v17[16];
  uint64_t v18;
  _QWORD v19[2];
  char v20;
  __int128 v21;
  char v22;
  uint64_t v23;

  v1 = sub_10004CFD4(&qword_1009D7440);
  __chkstk_darwin(v1);
  v3 = &v17[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v4);
  v6 = &v17[-v5];
  v7 = type metadata accessor for Date(0);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 1, 1, v7);
  v8 = type metadata accessor for RESliderView(0);
  sub_10000B5E4((uint64_t)v6, (uint64_t)v3, &qword_1009D7440);
  v9 = sub_10004CFD4(&qword_1009D9230);
  State.wrappedValue.setter(v3, v9);
  sub_100010960((uint64_t)v6, &qword_1009D7440);
  v10 = (__int128 *)(v0 + *(int *)(v8 + 80));
  v11 = *((_BYTE *)v10 + 16);
  v12 = *((_QWORD *)v10 + 3);
  v21 = *v10;
  v22 = v11;
  v23 = v12;
  v19[0] = 0;
  v19[1] = 0;
  v20 = 1;
  v13 = sub_10004CFD4(&qword_1009D93B8);
  v14 = State.wrappedValue.setter(v19, v13);
  v18 = v0;
  v15 = static Animation.default.getter(v14);
  withAnimation<A>(_:_:)(v15, sub_1002FA8A4, v17, (char *)&type metadata for () + 8);
  *(_QWORD *)&result = swift_release(v15).n128_u64[0];
  return result;
}

uint64_t sub_1002F8AC4(uint64_t a1)
{
  uint64_t v1;
  char v2;
  uint64_t v3;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v1 = *(_QWORD *)(a1 + 88);
  v2 = *(_BYTE *)(a1 + 96);
  v6 = *(_QWORD *)(a1 + 80);
  v7 = v1;
  v8 = v2;
  v5 = 0;
  v3 = sub_10004CFD4(&qword_1009D93C0);
  return Binding.wrappedValue.setter(&v5, v3);
}

uint64_t sub_1002F8B1C@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>, double a3@<D0>)
{
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t KeyPath;
  unsigned int *v26;
  uint64_t v27;
  _BYTE *v28;
  _BYTE *v29;
  uint64_t v30;
  _BYTE v32[4];
  int v33;
  uint64_t v34;
  uint64_t v35;
  _BYTE *v36;
  uint64_t v37;
  _BYTE *v38;

  v38 = a2;
  v37 = sub_10004CFD4(&qword_1009D1250);
  __chkstk_darwin(v37);
  v6 = (uint64_t *)&v32[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v35 = type metadata accessor for LayoutDirection(0);
  v7 = *(_QWORD *)(v35 - 8);
  __chkstk_darwin(v35);
  v9 = &v32[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = type metadata accessor for RESliderView(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  __chkstk_darwin(v10);
  v13 = &v32[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v34 = sub_10004CFD4(&qword_1009D9400);
  __chkstk_darwin(v34);
  v36 = &v32[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v15);
  v17 = &v32[-v16];
  __chkstk_darwin(v18);
  v20 = &v32[-v19];
  v33 = *(unsigned __int8 *)(a1 + 25);
  sub_10002CD84(a1, (uint64_t)v13, type metadata accessor for RESliderView);
  v21 = *(unsigned __int8 *)(v11 + 80);
  v22 = (v21 + 16) & ~v21;
  v23 = (v12 + v22 + 7) & 0xFFFFFFFFFFFFFFF8;
  v24 = swift_allocObject(&unk_1008FBCB8, v23 + 8, v21 | 7);
  sub_1002FA7B4((uint64_t)v13, v24 + v22);
  *(double *)(v24 + v23) = a3;
  KeyPath = swift_getKeyPath(&unk_100719A00);
  if (*(_BYTE *)(a1 + 26))
    v26 = (unsigned int *)&enum case for LayoutDirection.rightToLeft(_:);
  else
    v26 = (unsigned int *)&enum case for LayoutDirection.leftToRight(_:);
  v27 = v35;
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v7 + 104))(v9, *v26, v35);
  (*(void (**)(char *, _BYTE *, uint64_t))(v7 + 16))((char *)v6 + *(int *)(v37 + 28), v9, v27);
  *v6 = KeyPath;
  sub_10000B5E4((uint64_t)v6, (uint64_t)&v17[*(int *)(v34 + 36)], &qword_1009D1250);
  *v17 = v33;
  *((_QWORD *)v17 + 1) = 0;
  v17[16] = 0;
  *((_QWORD *)v17 + 3) = sub_1002FAB60;
  *((_QWORD *)v17 + 4) = v24;
  swift_retain(v24);
  sub_100010960((uint64_t)v6, &qword_1009D1250);
  (*(void (**)(_BYTE *, uint64_t))(v7 + 8))(v9, v27);
  swift_release(v24);
  sub_100025B3C((uint64_t)v17, (uint64_t)v20, &qword_1009D9400);
  v28 = v36;
  sub_10000B5E4((uint64_t)v20, (uint64_t)v36, &qword_1009D9400);
  v29 = v38;
  *v38 = 1;
  v30 = sub_10004CFD4(&qword_1009D9408);
  sub_10000B5E4((uint64_t)v28, (uint64_t)&v29[*(int *)(v30 + 48)], &qword_1009D9400);
  sub_100010960((uint64_t)v20, &qword_1009D9400);
  return sub_100010960((uint64_t)v28, &qword_1009D9400);
}

uint64_t sub_1002F8E28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, double a3@<D0>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t KeyPath;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  __n128 v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t);
  unsigned int *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t result;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  __n128 v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;

  v6 = type metadata accessor for _BlendModeEffect(0);
  __chkstk_darwin(v6);
  v53 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ColorScheme(0);
  v48 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v10 = (char *)&v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v45 - v12;
  v14 = type metadata accessor for BlendMode(0);
  v50 = *(_QWORD *)(v14 - 8);
  v51 = v14;
  __chkstk_darwin(v14);
  v16 = (char *)&v45 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = sub_10004CFD4(&qword_1009D6CD8);
  __chkstk_darwin(v47);
  v54 = (uint64_t)&v45 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v20 = (uint64_t *)((char *)&v45 - v19);
  __chkstk_darwin(v21);
  v52 = (uint64_t)&v45 - v22;
  v49 = *(unsigned __int8 *)(a1 + 25);
  v46 = Color.init(_:bundle:)(0x6946726564696C73, 0xEA00000000006C6CLL, 0);
  KeyPath = swift_getKeyPath(&unk_100719A30);
  v24 = *(void **)a1;
  if (*(_QWORD *)a1)
  {
    v25 = KeyPath;
    v26 = swift_getKeyPath(&unk_100719A60);
    v27 = swift_getKeyPath(&unk_100719A88);
    v28 = v24;
    static Published.subscript.getter(v13, v28, v26, v27);

    swift_release(v26);
    v29 = swift_release(v27);
    v30 = v48;
    (*(void (**)(char *, _QWORD, uint64_t, __n128))(v48 + 104))(v10, enum case for ColorScheme.dark(_:), v8, v29);
    LOBYTE(v28) = static ColorScheme.== infix(_:_:)(v13, v10);
    v31 = *(void (**)(char *, uint64_t))(v30 + 8);
    v31(v10, v8);
    v31(v13, v8);
    v32 = (unsigned int *)&enum case for BlendMode.plusLighter(_:);
    v34 = v50;
    v33 = v51;
    if ((v28 & 1) == 0)
      v32 = (unsigned int *)&enum case for BlendMode.plusDarker(_:);
    (*(void (**)(char *, _QWORD, uint64_t))(v50 + 104))(v16, *v32, v51);
    v35 = (uint64_t)v53;
    (*(void (**)(char *, char *, uint64_t))(v34 + 16))(v53, v16, v33);
    sub_10002CD84(v35, (uint64_t)v20 + *(int *)(v47 + 36), (uint64_t (*)(_QWORD))&type metadata accessor for _BlendModeEffect);
    v36 = v46;
    *v20 = v25;
    v20[1] = v36;
    swift_retain(v25);
    swift_retain(v36);
    sub_10002C8F0(v35, (uint64_t (*)(_QWORD))&type metadata accessor for _BlendModeEffect);
    (*(void (**)(char *, uint64_t))(v34 + 8))(v16, v33);
    swift_release(v36);
    swift_release(v25);
    v37 = v52;
    sub_100025B3C((uint64_t)v20, v52, &qword_1009D6CD8);
    v38 = v54;
    sub_10000B5E4(v37, v54, &qword_1009D6CD8);
    *(_QWORD *)a2 = 0;
    *(_BYTE *)(a2 + 8) = 1;
    *(_BYTE *)(a2 + 16) = v49;
    *(double *)(a2 + 24) = a3;
    *(_BYTE *)(a2 + 32) = 0;
    *(_QWORD *)(a2 + 40) = 0;
    *(_BYTE *)(a2 + 48) = 1;
    v39 = sub_10004CFD4(&qword_1009D9410);
    sub_10000B5E4(v38, a2 + *(int *)(v39 + 48), &qword_1009D6CD8);
    sub_100010960(v37, &qword_1009D6CD8);
    return sub_100010960(v38, &qword_1009D6CD8);
  }
  else
  {
    v41 = *(_QWORD *)(a1 + 8);
    v42 = type metadata accessor for ChromeStyle(0);
    v43 = sub_100008DB0((unint64_t *)&qword_1009D8330, type metadata accessor for ChromeStyle, (uint64_t)&protocol conformance descriptor for ChromeStyle);
    result = EnvironmentObject.error()(0, v41, v42, v43, v44);
    __break(1u);
  }
  return result;
}

_QWORD *sub_1002F9218@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, char a4@<W3>, int a5@<W4>, int a6@<W5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, double a10@<D0>, double a11@<D1>, double a12@<D2>, double a13@<D3>, char a14, uint64_t a15, uint64_t a16, char a17, __int128 a18, uint64_t a19, uint64_t a20)
{
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  int *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *result;
  uint64_t v51;
  __int128 v52;
  uint64_t v53;
  int v54;
  int v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char v63;
  __int128 v64;
  uint64_t v65;
  __int128 v66;

  v57 = a7;
  v58 = a8;
  v54 = a5;
  v55 = a6;
  v56 = a20;
  v53 = a19;
  v52 = a18;
  v60 = sub_10004CFD4(&qword_1009D7440);
  __chkstk_darwin(v60);
  v59 = (uint64_t)&v52 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v30);
  v32 = (char *)&v52 - v31;
  *(_QWORD *)a9 = a1;
  *(_QWORD *)(a9 + 8) = a2;
  *(double *)(a9 + 16) = a10;
  *(_BYTE *)(a9 + 24) = a3;
  *(_BYTE *)(a9 + 25) = a4;
  *(_BYTE *)(a9 + 26) = v54;
  *(_BYTE *)(a9 + 27) = v55;
  *(double *)(a9 + 32) = a11;
  *(double *)(a9 + 40) = a12;
  *(double *)(a9 + 48) = a13;
  v33 = v58;
  *(_QWORD *)(a9 + 56) = v57;
  *(_QWORD *)(a9 + 64) = v33;
  *(_BYTE *)(a9 + 72) = a14;
  *(_QWORD *)(a9 + 80) = a15;
  *(_QWORD *)(a9 + 88) = a16;
  *(_BYTE *)(a9 + 96) = a17;
  *(_OWORD *)(a9 + 104) = v52;
  v34 = v56;
  *(_QWORD *)(a9 + 120) = v53;
  *(_QWORD *)(a9 + 128) = v34;
  v35 = (int *)type metadata accessor for RESliderView(0);
  sub_100009E04(0, (unint64_t *)&qword_1009CEEB0, OS_os_log_ptr);
  static OS_os_log.be_loggerForCurrentFile(_:)(0xD000000000000018, 0x80000001007BDDF0);
  v36 = a9 + v35[18];
  type metadata accessor for CGPoint(0);
  v61 = 0;
  v62 = 0;
  GestureState.init(wrappedValue:)(&v64, &v61, v37);
  v38 = v65;
  v39 = v66;
  *(_OWORD *)v36 = v64;
  *(_QWORD *)(v36 + 16) = v38;
  *(_OWORD *)(v36 + 24) = v39;
  v40 = (_QWORD *)(a9 + v35[19]);
  v61 = 0;
  State.init(wrappedValue:)(&v64, &v61, &type metadata for Double);
  v41 = *((_QWORD *)&v64 + 1);
  *v40 = v64;
  v40[1] = v41;
  v42 = a9 + v35[20];
  v61 = 0;
  v62 = 0;
  v63 = 1;
  v43 = sub_10004CFD4(&qword_1009D9228);
  State.init(wrappedValue:)(&v64, &v61, v43);
  v44 = v65;
  v45 = v66;
  *(_OWORD *)v42 = v64;
  *(_BYTE *)(v42 + 16) = v44;
  *(_QWORD *)(v42 + 24) = v45;
  v46 = (_QWORD *)(a9 + v35[21]);
  v47 = type metadata accessor for Date(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 56))(v32, 1, 1, v47);
  v48 = v59;
  sub_10000B5E4((uint64_t)v32, v59, &qword_1009D7440);
  State.init(wrappedValue:)(v46, v48, v60);
  sub_100010960((uint64_t)v32, &qword_1009D7440);
  v49 = a9 + v35[22];
  LOBYTE(v61) = 0;
  result = State.init(wrappedValue:)(&v64, &v61, &type metadata for Bool);
  v51 = *((_QWORD *)&v64 + 1);
  *(_BYTE *)v49 = v64;
  *(_QWORD *)(v49 + 8) = v51;
  return result;
}

uint64_t type metadata accessor for RESliderView(uint64_t a1)
{
  uint64_t result;

  result = qword_1009D9290;
  if (!qword_1009D9290)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for RESliderView);
  return result;
}

char *sub_1002F9540(char *a1, char **a2, int *a3)
{
  int v3;
  char *v4;
  char *v6;
  char *v7;
  char *v8;
  char *v9;
  char *v10;
  char *v11;
  _OWORD *v12;
  char *v13;
  char *v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  unsigned int (*v37)(char *, uint64_t, uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  __int128 v45;

  v3 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v4 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v6 = &v4[(v3 + 16) & ~(unint64_t)v3];
  }
  else
  {
    v6 = a1;
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 1);
    *((_DWORD *)a1 + 6) = *((_DWORD *)a2 + 6);
    *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
    v7 = a2[7];
    *((_QWORD *)a1 + 6) = a2[6];
    *((_QWORD *)a1 + 7) = v7;
    v8 = a2[8];
    *((_QWORD *)a1 + 8) = v8;
    a1[72] = *((_BYTE *)a2 + 72);
    v9 = a2[10];
    v10 = a2[11];
    *((_QWORD *)a1 + 10) = v9;
    *((_QWORD *)a1 + 11) = v10;
    a1[96] = *((_BYTE *)a2 + 96);
    v12 = a2 + 15;
    v11 = a2[15];
    v13 = a2[14];
    *((_QWORD *)a1 + 13) = a2[13];
    *((_QWORD *)a1 + 14) = v13;
    v14 = v4;
    swift_retain(v7);
    swift_retain(v8);
    swift_retain(v9);
    swift_retain(v10);
    swift_retain(v13);
    if (v11)
    {
      v15 = a2[16];
      *((_QWORD *)v6 + 15) = v11;
      *((_QWORD *)v6 + 16) = v15;
      swift_retain(v15);
    }
    else
    {
      *(_OWORD *)(v6 + 120) = *v12;
    }
    v16 = a3[17];
    v17 = &v6[v16];
    v18 = (uint64_t)a2 + v16;
    v19 = type metadata accessor for Logger(0);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
    v20 = a3[18];
    v21 = a3[19];
    v22 = &v6[v20];
    v23 = (uint64_t)a2 + v20;
    v24 = *(_QWORD *)(v23 + 32);
    v45 = *(_OWORD *)(v23 + 16);
    *(_OWORD *)v22 = *(_OWORD *)v23;
    *((_OWORD *)v22 + 1) = v45;
    *((_QWORD *)v22 + 4) = v24;
    v25 = &v6[v21];
    v26 = (char **)((char *)a2 + v21);
    v27 = v26[1];
    *(_QWORD *)v25 = *v26;
    *((_QWORD *)v25 + 1) = v27;
    v28 = a3[20];
    v29 = a3[21];
    v30 = &v6[v28];
    v31 = (uint64_t)a2 + v28;
    v30[16] = *(_BYTE *)(v31 + 16);
    *(_OWORD *)v30 = *(_OWORD *)v31;
    v32 = *(_QWORD *)(v31 + 24);
    *((_QWORD *)v30 + 3) = v32;
    v33 = &v6[v29];
    v34 = (char *)a2 + v29;
    v35 = type metadata accessor for Date(0);
    v36 = *(_QWORD *)(v35 - 8);
    v37 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48);
    swift_retain(v45);
    swift_retain(v24);
    swift_retain(v27);
    swift_retain(v32);
    if (v37(v34, 1, v35))
    {
      v38 = sub_10004CFD4(&qword_1009D7440);
      memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v33, v34, v35);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v36 + 56))(v33, 0, 1, v35);
    }
    v39 = *(int *)(sub_10004CFD4(&qword_1009D9230) + 28);
    v40 = *(_QWORD *)&v34[v39];
    *(_QWORD *)&v33[v39] = v40;
    v41 = a3[22];
    v42 = &v6[v41];
    v43 = (uint64_t)a2 + v41;
    *v42 = *(_BYTE *)v43;
    v4 = *(char **)(v43 + 8);
    *((_QWORD *)v42 + 1) = v4;
    swift_retain(v40);
  }
  swift_retain(v4);
  return v6;
}

double sub_1002F97C0(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double result;

  swift_release(*(_QWORD *)(a1 + 56));
  swift_release(*(_QWORD *)(a1 + 64));
  swift_release(*(_QWORD *)(a1 + 80));
  swift_release(*(_QWORD *)(a1 + 88));
  swift_release(*(_QWORD *)(a1 + 112));
  if (*(_QWORD *)(a1 + 120))
    swift_release(*(_QWORD *)(a1 + 128));
  v4 = a1 + a2[17];
  v5 = type metadata accessor for Logger(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = a1 + a2[18];
  swift_release(*(_QWORD *)(v6 + 16));
  swift_release(*(_QWORD *)(v6 + 32));
  swift_release(*(_QWORD *)(a1 + a2[19] + 8));
  swift_release(*(_QWORD *)(a1 + a2[20] + 24));
  v7 = a1 + a2[21];
  v8 = type metadata accessor for Date(0);
  v9 = *(_QWORD *)(v8 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  v10 = sub_10004CFD4(&qword_1009D9230);
  swift_release(*(_QWORD *)(v7 + *(int *)(v10 + 28)));
  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + a2[22] + 8)).n128_u64[0];
  return result;
}

uint64_t sub_1002F98F0(uint64_t a1, uint64_t a2, int *a3)
{
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _OWORD *v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  unsigned int (*v37)(char *, uint64_t, uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  __int128 v46;
  int *v47;

  v6 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  v7 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v7;
  v8 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 64) = v8;
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  v9 = *(_QWORD *)(a2 + 80);
  v10 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = v9;
  *(_QWORD *)(a1 + 88) = v10;
  v11 = (_OWORD *)(a2 + 120);
  v12 = *(_QWORD *)(a2 + 120);
  *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
  v13 = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = v13;
  v14 = v6;
  swift_retain(v7);
  swift_retain(v8);
  swift_retain(v9);
  swift_retain(v10);
  swift_retain(v13);
  if (v12)
  {
    v15 = *(_QWORD *)(a2 + 128);
    *(_QWORD *)(a1 + 120) = v12;
    *(_QWORD *)(a1 + 128) = v15;
    swift_retain(v15);
  }
  else
  {
    *(_OWORD *)(a1 + 120) = *v11;
  }
  v16 = a3[17];
  v17 = a1 + v16;
  v18 = a2 + v16;
  v19 = type metadata accessor for Logger(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
  v20 = a3[18];
  v21 = a3[19];
  v22 = a1 + v20;
  v23 = a2 + v20;
  v24 = *(_QWORD *)(v23 + 32);
  v46 = *(_OWORD *)(v23 + 16);
  *(_OWORD *)v22 = *(_OWORD *)v23;
  *(_OWORD *)(v22 + 16) = v46;
  *(_QWORD *)(v22 + 32) = v24;
  v25 = (_QWORD *)(a1 + v21);
  v26 = (_QWORD *)(a2 + v21);
  v27 = v26[1];
  *v25 = *v26;
  v25[1] = v27;
  v28 = a3[20];
  v29 = a3[21];
  v47 = a3;
  v30 = a1 + v28;
  v31 = a2 + v28;
  *(_BYTE *)(v30 + 16) = *(_BYTE *)(v31 + 16);
  *(_OWORD *)v30 = *(_OWORD *)v31;
  v32 = *(_QWORD *)(v31 + 24);
  *(_QWORD *)(v30 + 24) = v32;
  v33 = (char *)(a1 + v29);
  v34 = (char *)(a2 + v29);
  v35 = type metadata accessor for Date(0);
  v36 = *(_QWORD *)(v35 - 8);
  v37 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48);
  swift_retain(v46);
  swift_retain(v24);
  swift_retain(v27);
  swift_retain(v32);
  if (v37(v34, 1, v35))
  {
    v38 = sub_10004CFD4(&qword_1009D7440);
    memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v33, v34, v35);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v36 + 56))(v33, 0, 1, v35);
  }
  v39 = *(int *)(sub_10004CFD4(&qword_1009D9230) + 28);
  v40 = *(_QWORD *)&v34[v39];
  *(_QWORD *)&v33[v39] = v40;
  v41 = v47[22];
  v42 = a1 + v41;
  v43 = a2 + v41;
  *(_BYTE *)v42 = *(_BYTE *)v43;
  v44 = *(_QWORD *)(v43 + 8);
  *(_QWORD *)(v42 + 8) = v44;
  swift_retain(v40);
  swift_retain(v44);
  return a1;
}

uint64_t sub_1002F9B50(uint64_t a1, uint64_t a2, int *a3)
{
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  __int128 *v41;
  __int128 v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t (*v50)(char *, uint64_t, uint64_t);
  int v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;

  v6 = *(void **)a1;
  v7 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v8 = v7;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_BYTE *)(a1 + 25) = *(_BYTE *)(a2 + 25);
  *(_BYTE *)(a1 + 26) = *(_BYTE *)(a2 + 26);
  *(_BYTE *)(a1 + 27) = *(_BYTE *)(a2 + 27);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  v9 = *(_QWORD *)(a1 + 56);
  v10 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 56) = v10;
  swift_retain(v10);
  swift_release(v9);
  v11 = *(_QWORD *)(a2 + 64);
  v12 = *(_QWORD *)(a1 + 64);
  *(_QWORD *)(a1 + 64) = v11;
  swift_retain(v11);
  swift_release(v12);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  v13 = *(_QWORD *)(a1 + 80);
  v14 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 80) = v14;
  swift_retain(v14);
  swift_release(v13);
  v15 = *(_QWORD *)(a2 + 88);
  v16 = *(_QWORD *)(a1 + 88);
  *(_QWORD *)(a1 + 88) = v15;
  swift_retain(v15);
  swift_release(v16);
  *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
  v17 = *(_QWORD *)(a2 + 112);
  v18 = *(_QWORD *)(a1 + 112);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = v17;
  swift_retain(v17);
  swift_release(v18);
  v19 = *(_QWORD *)(a2 + 120);
  if (*(_QWORD *)(a1 + 120))
  {
    if (v19)
    {
      v20 = *(_QWORD *)(a2 + 128);
      v21 = *(_QWORD *)(a1 + 128);
      *(_QWORD *)(a1 + 120) = v19;
      *(_QWORD *)(a1 + 128) = v20;
      swift_retain(v20);
      swift_release(v21);
      goto LABEL_8;
    }
    swift_release(*(_QWORD *)(a1 + 128));
  }
  else if (v19)
  {
    v22 = *(_QWORD *)(a2 + 128);
    *(_QWORD *)(a1 + 120) = v19;
    *(_QWORD *)(a1 + 128) = v22;
    swift_retain(v22);
    goto LABEL_8;
  }
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
LABEL_8:
  v23 = a3[17];
  v24 = a1 + v23;
  v25 = a2 + v23;
  v26 = type metadata accessor for Logger(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 24))(v24, v25, v26);
  v27 = a3[18];
  v28 = (_QWORD *)(a1 + v27);
  v29 = a2 + v27;
  *v28 = *(_QWORD *)(a2 + v27);
  v28[1] = *(_QWORD *)(a2 + v27 + 8);
  v30 = *(_QWORD *)(a1 + v27 + 16);
  v31 = *(_QWORD *)(a2 + v27 + 16);
  v28[2] = v31;
  swift_retain(v31);
  swift_release(v30);
  v32 = *(_QWORD *)(v29 + 32);
  v33 = v28[4];
  v28[3] = *(_QWORD *)(v29 + 24);
  v28[4] = v32;
  swift_retain(v32);
  swift_release(v33);
  v34 = a3[19];
  v35 = (_QWORD *)(a1 + v34);
  v36 = (_QWORD *)(a2 + v34);
  *v35 = *v36;
  v37 = v35[1];
  v38 = v36[1];
  v35[1] = v38;
  swift_retain(v38);
  swift_release(v37);
  v39 = a3[20];
  v40 = a1 + v39;
  v41 = (__int128 *)(a2 + v39);
  v42 = *v41;
  *(_BYTE *)(v40 + 16) = *((_BYTE *)v41 + 16);
  *(_OWORD *)v40 = v42;
  v43 = *(_QWORD *)(v40 + 24);
  v44 = *((_QWORD *)v41 + 3);
  *(_QWORD *)(v40 + 24) = v44;
  swift_retain(v44);
  swift_release(v43);
  v45 = a3[21];
  v46 = (char *)(a1 + v45);
  v47 = (char *)(a2 + v45);
  v48 = type metadata accessor for Date(0);
  v49 = *(_QWORD *)(v48 - 8);
  v50 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v49 + 48);
  v51 = v50(v46, 1, v48);
  v52 = v50(v47, 1, v48);
  if (!v51)
  {
    if (!v52)
    {
      (*(void (**)(char *, char *, uint64_t))(v49 + 24))(v46, v47, v48);
      goto LABEL_14;
    }
    (*(void (**)(char *, uint64_t))(v49 + 8))(v46, v48);
    goto LABEL_13;
  }
  if (v52)
  {
LABEL_13:
    v53 = sub_10004CFD4(&qword_1009D7440);
    memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
    goto LABEL_14;
  }
  (*(void (**)(char *, char *, uint64_t))(v49 + 16))(v46, v47, v48);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v49 + 56))(v46, 0, 1, v48);
LABEL_14:
  v54 = *(int *)(sub_10004CFD4(&qword_1009D9230) + 28);
  v55 = *(_QWORD *)&v46[v54];
  v56 = *(_QWORD *)&v47[v54];
  *(_QWORD *)&v46[v54] = v56;
  swift_retain(v56);
  swift_release(v55);
  v57 = a3[22];
  v58 = a1 + v57;
  v59 = a2 + v57;
  *(_BYTE *)v58 = *(_BYTE *)v59;
  v60 = *(_QWORD *)(v58 + 8);
  v61 = *(_QWORD *)(v59 + 8);
  *(_QWORD *)(v58 + 8) = v61;
  swift_retain(v61);
  swift_release(v60);
  return a1;
}

uint64_t sub_1002F9EC8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  _OWORD *v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  v6 = *(_QWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  if (v6)
  {
    v7 = *(_QWORD *)(a2 + 128);
    *(_QWORD *)(a1 + 120) = v6;
    *(_QWORD *)(a1 + 128) = v7;
  }
  else
  {
    *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  }
  v8 = a3[17];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = type metadata accessor for Logger(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
  v12 = a3[18];
  v13 = a3[19];
  v14 = a1 + v12;
  v15 = a2 + v12;
  v16 = *(_OWORD *)(v15 + 16);
  *(_OWORD *)v14 = *(_OWORD *)v15;
  *(_OWORD *)(v14 + 16) = v16;
  *(_QWORD *)(v14 + 32) = *(_QWORD *)(v15 + 32);
  *(_OWORD *)(a1 + v13) = *(_OWORD *)(a2 + v13);
  v17 = a3[20];
  v18 = a3[21];
  v19 = *(_OWORD *)(a2 + v17);
  v20 = *(_OWORD *)(a2 + v17 + 16);
  v21 = (_OWORD *)(a1 + v17);
  *v21 = v19;
  v21[1] = v20;
  v22 = (char *)(a1 + v18);
  v23 = (char *)(a2 + v18);
  v24 = type metadata accessor for Date(0);
  v25 = *(_QWORD *)(v24 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24))
  {
    v26 = sub_10004CFD4(&qword_1009D7440);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v22, v23, v24);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
  }
  v27 = sub_10004CFD4(&qword_1009D9230);
  *(_QWORD *)&v22[*(int *)(v27 + 28)] = *(_QWORD *)&v23[*(int *)(v27 + 28)];
  *(_OWORD *)(a1 + a3[22]) = *(_OWORD *)(a2 + a3[22]);
  return a1;
}

uint64_t sub_1002FA084(uint64_t a1, uint64_t a2, int *a3)
{
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t (*v38)(char *, uint64_t, uint64_t);
  int v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  v6 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_BYTE *)(a1 + 25) = *(_BYTE *)(a2 + 25);
  *(_BYTE *)(a1 + 26) = *(_BYTE *)(a2 + 26);
  *(_BYTE *)(a1 + 27) = *(_BYTE *)(a2 + 27);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  v7 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_release(v7);
  v8 = *(_QWORD *)(a1 + 64);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_release(v8);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  v9 = *(_QWORD *)(a1 + 80);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_release(v9);
  v10 = *(_QWORD *)(a1 + 88);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  swift_release(v10);
  *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
  v11 = *(_QWORD *)(a1 + 112);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  swift_release(v11);
  v12 = *(_QWORD *)(a2 + 120);
  if (*(_QWORD *)(a1 + 120))
  {
    if (v12)
    {
      v13 = *(_QWORD *)(a2 + 128);
      v14 = *(_QWORD *)(a1 + 128);
      *(_QWORD *)(a1 + 120) = v12;
      *(_QWORD *)(a1 + 128) = v13;
      swift_release(v14);
      goto LABEL_8;
    }
    swift_release(*(_QWORD *)(a1 + 128));
  }
  else if (v12)
  {
    v15 = *(_QWORD *)(a2 + 128);
    *(_QWORD *)(a1 + 120) = v12;
    *(_QWORD *)(a1 + 128) = v15;
    goto LABEL_8;
  }
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
LABEL_8:
  v16 = a3[17];
  v17 = a1 + v16;
  v18 = a2 + v16;
  v19 = type metadata accessor for Logger(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 40))(v17, v18, v19);
  v20 = a3[18];
  v21 = a1 + v20;
  v22 = a2 + v20;
  *(_OWORD *)v21 = *(_OWORD *)(a2 + v20);
  v23 = *(_QWORD *)(a1 + v20 + 16);
  *(_QWORD *)(v21 + 16) = *(_QWORD *)(a2 + v20 + 16);
  swift_release(v23);
  v24 = *(_QWORD *)(v21 + 32);
  *(_OWORD *)(v21 + 24) = *(_OWORD *)(v22 + 24);
  swift_release(v24);
  v25 = a3[19];
  v26 = (_QWORD *)(a1 + v25);
  v27 = (_QWORD *)(a2 + v25);
  *v26 = *v27;
  v28 = v26[1];
  v26[1] = v27[1];
  swift_release(v28);
  v29 = a3[20];
  v30 = a1 + v29;
  v31 = a2 + v29;
  *(_OWORD *)v30 = *(_OWORD *)v31;
  *(_BYTE *)(v30 + 16) = *(_BYTE *)(v31 + 16);
  v32 = *(_QWORD *)(v30 + 24);
  *(_QWORD *)(v30 + 24) = *(_QWORD *)(v31 + 24);
  swift_release(v32);
  v33 = a3[21];
  v34 = (char *)(a1 + v33);
  v35 = (char *)(a2 + v33);
  v36 = type metadata accessor for Date(0);
  v37 = *(_QWORD *)(v36 - 8);
  v38 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v37 + 48);
  v39 = v38(v34, 1, v36);
  v40 = v38(v35, 1, v36);
  if (!v39)
  {
    if (!v40)
    {
      (*(void (**)(char *, char *, uint64_t))(v37 + 40))(v34, v35, v36);
      goto LABEL_14;
    }
    (*(void (**)(char *, uint64_t))(v37 + 8))(v34, v36);
    goto LABEL_13;
  }
  if (v40)
  {
LABEL_13:
    v41 = sub_10004CFD4(&qword_1009D7440);
    memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
    goto LABEL_14;
  }
  (*(void (**)(char *, char *, uint64_t))(v37 + 32))(v34, v35, v36);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v37 + 56))(v34, 0, 1, v36);
LABEL_14:
  v42 = *(int *)(sub_10004CFD4(&qword_1009D9230) + 28);
  v43 = *(_QWORD *)&v34[v42];
  *(_QWORD *)&v34[v42] = *(_QWORD *)&v35[v42];
  swift_release(v43);
  v44 = a3[22];
  v45 = a1 + v44;
  v46 = a2 + v44;
  *(_BYTE *)v45 = *(_BYTE *)v46;
  v47 = *(_QWORD *)(v45 + 8);
  *(_QWORD *)(v45 + 8) = *(_QWORD *)(v46 + 8);
  swift_release(v47);
  return a1;
}

uint64_t sub_1002FA384(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1002FA390);
}

uint64_t sub_1002FA390(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 64);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for Logger(0);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 68);
    }
    else
    {
      v10 = sub_10004CFD4(&qword_1009D9230);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 84);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t sub_1002FA434(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1002FA440);
}

uint64_t sub_1002FA440(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 64) = (a2 - 1);
  }
  else
  {
    v8 = type metadata accessor for Logger(0);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 68);
    }
    else
    {
      v10 = sub_10004CFD4(&qword_1009D9230);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 84);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

void sub_1002FA4E0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[19];

  v6[0] = &unk_1007198F8;
  v6[1] = (char *)&value witness table for Builtin.Int64 + 64;
  v6[2] = &unk_100719910;
  v6[3] = &unk_100719910;
  v6[4] = &unk_100719910;
  v6[5] = &unk_100719910;
  v6[6] = (char *)&value witness table for Builtin.Int64 + 64;
  v6[7] = (char *)&value witness table for Builtin.Int64 + 64;
  v6[8] = (char *)&value witness table for Builtin.Int64 + 64;
  v6[9] = &unk_100719928;
  v6[10] = &unk_100719928;
  v6[11] = (char *)&value witness table for () + 64;
  v6[12] = &unk_1007198F8;
  v2 = type metadata accessor for Logger(319);
  if (v3 <= 0x3F)
  {
    v6[13] = *(_QWORD *)(v2 - 8) + 64;
    v6[14] = &unk_100719940;
    v6[15] = &unk_1007198F8;
    v6[16] = &unk_100719958;
    sub_1002FA5C4(319);
    if (v5 <= 0x3F)
    {
      v6[17] = *(_QWORD *)(v4 - 8) + 64;
      v6[18] = &unk_1007198F8;
      swift_initStructMetadata(a1, 256, 19, v6, a1 + 16);
    }
  }
}

void sub_1002FA5C4(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1009D92A0)
  {
    v2 = sub_100030B74(&qword_1009D7440);
    v3 = type metadata accessor for State(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1009D92A0);
  }
}

uint64_t sub_1002FA61C(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_10086B0BC, 1);
}

unint64_t sub_1002FA630()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009D9378;
  if (!qword_1009D9378)
  {
    v1 = sub_100030B74(&qword_1009D9338);
    sub_1002FA69C();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009D9378);
  }
  return result;
}

unint64_t sub_1002FA69C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009D9380;
  if (!qword_1009D9380)
  {
    v1 = sub_100030B74(&qword_1009D9330);
    sub_100030B34(&qword_1009D9388, &qword_1009D9328, (uint64_t)&protocol conformance descriptor for ZStack<A>);
    sub_100030B34(&qword_1009D5178, &qword_1009F4140, (uint64_t)&protocol conformance descriptor for _ClipEffect<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009D9380);
  }
  return result;
}

uint64_t sub_1002FA738(unint64_t *a1, uint64_t *a2, unint64_t *a3, uint64_t *a4)
{
  uint64_t result;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v8 = sub_100030B74(a2);
    sub_100030B34(a3, a4, (uint64_t)&protocol conformance descriptor for _EndedGesture<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v8);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1002FA7B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for RESliderView(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1002FA800()
{
  type metadata accessor for RESliderView(0);
  return sub_1002F710C();
}

uint64_t sub_1002FA83C()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;
  uint64_t (*v3)(void);

  result = type metadata accessor for RESliderView(0);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(result - 8) + 80);
  v3 = *(uint64_t (**)(void))(v0 + ((v2 + 16) & ~v2) + 120);
  if (v3)
    return v3();
  return result;
}

uint64_t sub_1002FA880()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1002FA8A4()
{
  uint64_t v0;

  return sub_1002F8AC4(*(_QWORD *)(v0 + 16));
}

void sub_1002FA8C0(uint64_t a1, double *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;

  v7 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for RESliderView(0) - 8) + 80);
  sub_1002F7600(a1, a2, a3, v3 + ((v7 + 16) & ~v7));
}

uint64_t sub_1002FA918(uint64_t a1)
{
  return sub_1002FA934(a1, (uint64_t (*)(uint64_t, uint64_t))sub_1002F7B1C);
}

uint64_t sub_1002FA928(uint64_t a1)
{
  return sub_1002FA934(a1, (uint64_t (*)(uint64_t, uint64_t))sub_1002F7F08);
}

uint64_t sub_1002FA934(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t))
{
  uint64_t v2;
  uint64_t v4;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for RESliderView(0) - 8) + 80);
  return a2(a1, v2 + ((v4 + 16) & ~v4));
}

uint64_t sub_1002FA980()
{
  uint64_t v0;

  return sub_1002F7E50(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1002FA998()
{
  uint64_t v0;

  return sub_1002F7EAC(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1002FA9B4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for RESliderView(0) - 8) + 80);
  return sub_1002F79E4(v0 + ((v1 + 16) & ~v1));
}

uint64_t sub_1002FA9E0()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v1 = (int *)type metadata accessor for RESliderView(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = v0 + v4;

  swift_release(*(_QWORD *)(v0 + v4 + 56));
  swift_release(*(_QWORD *)(v0 + v4 + 64));
  swift_release(*(_QWORD *)(v0 + v4 + 80));
  swift_release(*(_QWORD *)(v0 + v4 + 88));
  swift_release(*(_QWORD *)(v0 + v4 + 112));
  if (*(_QWORD *)(v0 + v4 + 120))
    swift_release(*(_QWORD *)(v6 + 128));
  v7 = v6 + v1[17];
  v8 = type metadata accessor for Logger(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = v6 + v1[18];
  swift_release(*(_QWORD *)(v9 + 16));
  swift_release(*(_QWORD *)(v9 + 32));
  swift_release(*(_QWORD *)(v6 + v1[19] + 8));
  swift_release(*(_QWORD *)(v6 + v1[20] + 24));
  v10 = v6 + v1[21];
  v11 = type metadata accessor for Date(0);
  v12 = *(_QWORD *)(v11 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v10, v11);
  v13 = sub_10004CFD4(&qword_1009D9230);
  swift_release(*(_QWORD *)(v10 + *(int *)(v13 + 28)));
  swift_release(*(_QWORD *)(v6 + v1[22] + 8));
  return swift_deallocObject(v0, ((v5 + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8, v3 | 7);
}

uint64_t sub_1002FAB60@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;

  v3 = *(_QWORD *)(type metadata accessor for RESliderView(0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  return sub_1002F8E28(v1 + v4, a1, *(double *)(v1 + ((*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_1002FABC8()
{
  return sub_100030B34(&qword_1009D9418, &qword_1009D9358, (uint64_t)&protocol conformance descriptor for SubscriptionView<A, B>);
}

unint64_t NowPlayingIndicatorView.PlaybackState.init(rawValue:)(unint64_t result)
{
  if (result > 2)
    return 0;
  return result;
}

uint64_t *sub_1002FAC18@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  BOOL v3;

  v2 = *result;
  v3 = (unint64_t)*result > 2;
  if ((unint64_t)*result > 2)
    v2 = 0;
  *(_QWORD *)a2 = v2;
  *(_BYTE *)(a2 + 8) = v3;
  return result;
}

uint64_t BKAppDelegate.containerHost.getter()
{
  void *v0;
  id v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  _OWORD v6[2];

  swift_beginAccess(&unk_100A1E4F8, v6, 32, 0);
  v1 = objc_getAssociatedObject(v0, &unk_100A1E4F8);
  result = swift_endAccess(v6);
  if (v1)
  {
    _bridgeAnyObjectToAny(_:)(v1);
    swift_unknownObjectRelease(v1);
    sub_10004CFC4(&v5, v6);
    v3 = type metadata accessor for ContainerHost();
    swift_dynamicCast(&v4, v6, (char *)&type metadata for Any + 8, v3, 7);
    return v4;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void BKAppDelegate.containerHost.setter(void *a1)
{
  sub_1002FAD64(a1, &unk_100A1E4F8);
}

void BKAppDelegate.engagementManager.setter(void *a1)
{
  void *v1;
  _BYTE v3[24];

  swift_beginAccess(&unk_100A1E4F9, v3, 32, 0);
  objc_setAssociatedObject(v1, &unk_100A1E4F9, a1, (void *)1);
  swift_endAccess(v3);

}

void BKAppDelegate.serviceCenter.setter(void *a1)
{
  sub_1002FAD64(a1, &unk_100A1E4FB);
}

void sub_1002FAD64(void *a1, const void *a2)
{
  void *v2;
  _BYTE v5[24];

  swift_beginAccess(a2, v5, 32, 0);
  objc_setAssociatedObject(v2, a2, a1, (void *)1);
  swift_endAccess(v5);

}

uint64_t BKAppDelegate.jetActionHandler.getter()
{
  void *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  v1 = (char *)objc_msgSend(v0, "objectGraphHost");
  v2 = *(_QWORD *)&v1[OBJC_IVAR___BKObjectGraphHost_objectGraph];
  swift_retain(v2);

  v3 = sub_10004CFD4(&qword_1009D9420);
  BaseObjectGraph.inject<A>(_:)(&v5, v3, v3);
  swift_release(v2);
  return v5;
}

Swift::Void __swiftcall BKAppDelegate.registerReadingSettings()()
{
  sub_10000A614();
  static NSUserDefaults.books_registerReadingSettings()();
}

uint64_t BKAppDelegate.flushJetMetrics()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1[8] = v0;
  v2 = type metadata accessor for MainActor(0);
  v1[9] = static MainActor.shared.getter(v2);
  v3 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor);
  v1[10] = v3;
  v1[11] = v4;
  return swift_task_switch(sub_1002FAF90, v3, v4);
}

uint64_t sub_1002FAF90()
{
  uint64_t v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = (char *)objc_msgSend(*(id *)(v0 + 64), "objectGraphHost");
  v2 = *(_QWORD *)&v1[OBJC_IVAR___BKObjectGraphHost_objectGraph];
  *(_QWORD *)(v0 + 96) = v2;
  swift_retain(v2);

  v3 = sub_10004CFD4(&qword_1009D9438);
  v4 = (_QWORD *)swift_task_alloc(async function pointer to BaseObjectGraph.inject<A>(_:)[1]);
  *(_QWORD *)(v0 + 104) = v4;
  *v4 = v0;
  v4[1] = sub_1002FB040;
  return BaseObjectGraph.inject<A>(_:)(v0 + 16, v3, v3);
}

uint64_t sub_1002FB040()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v2 = *(_QWORD **)v1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 104);
  *(_QWORD *)(*(_QWORD *)v1 + 112) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = v2[10];
    v5 = v2[11];
    v6 = sub_1002FB250;
  }
  else
  {
    swift_release(v2[12]);
    v4 = v2[10];
    v5 = v2[11];
    v6 = sub_1002FB0AC;
  }
  return swift_task_switch(v6, v4, v5);
}

uint64_t sub_1002FB0AC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  _QWORD *v5;

  v1 = v0[5];
  v2 = v0[6];
  sub_10003F198(v0 + 2, v1);
  v0[15] = dispatch thunk of MetricsEventRecorder.flush()(v1, v2);
  v3 = sub_10004CFD4(&qword_1009D9440);
  v4 = sub_1002FB8C8();
  v5 = (_QWORD *)swift_task_alloc(async function pointer to dispatch thunk of Future.then()[1]);
  v0[16] = v5;
  *v5 = v0;
  v5[1] = sub_1002FB150;
  return dispatch thunk of Future.then()(v0 + 7, v3, v4);
}

uint64_t sub_1002FB150()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v2 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 120);
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 128);
  *(_QWORD *)(*(_QWORD *)v1 + 136) = v0;
  swift_task_dealloc(v3);
  swift_release(v4);
  if (v0)
  {
    v5 = v2[10];
    v6 = v2[11];
    v7 = sub_1002FB210;
  }
  else
  {
    v2[18] = v2[7];
    v5 = v2[10];
    v6 = v2[11];
    v7 = sub_1002FB1CC;
  }
  return swift_task_switch(v7, v5, v6);
}

uint64_t sub_1002FB1CC()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 72));
  _s5Books15CurrentPageViewVwxx_0((_QWORD *)(v0 + 16));
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 144));
}

uint64_t sub_1002FB210()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 72));
  _s5Books15CurrentPageViewVwxx_0((_QWORD *)(v0 + 16));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002FB250()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 96);
  swift_release(*(_QWORD *)(v0 + 72));
  swift_release(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002FB3AC(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2[2] = a1;
  v2[3] = a2;
  v3 = type metadata accessor for MainActor(0);
  v2[4] = static MainActor.shared.getter(v3);
  v4 = dispatch thunk of Actor.unownedExecutor.getter(v3, &protocol witness table for MainActor);
  return swift_task_switch(sub_1002FB418, v4, v5);
}

uint64_t sub_1002FB418()
{
  _QWORD *v0;
  void *v1;
  const void *v2;
  uint64_t v3;
  id v4;
  _QWORD *v5;

  v1 = (void *)v0[3];
  v2 = (const void *)v0[2];
  swift_release(v0[4]);
  v0[5] = _Block_copy(v2);
  v3 = dword_1009D9434;
  v4 = v1;
  v5 = (_QWORD *)swift_task_alloc(v3);
  v0[6] = v5;
  *v5 = v0;
  v5[1] = sub_1002FB480;
  return BKAppDelegate.flushJetMetrics()();
}

uint64_t sub_1002FB480(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;

  v4 = *(_QWORD *)(*v2 + 48);
  v5 = *(void **)(*v2 + 24);
  v6 = *v2;
  swift_task_dealloc(v4);

  v7 = *(_QWORD *)(v6 + 40);
  if (v1)
  {
    v8 = (void *)_convertErrorToNSError(_:)(v1);
    swift_errorRelease(v1);
    (*(void (**)(uint64_t))(v7 + 16))(v7);

  }
  else
  {
    (*(void (**)(_QWORD, uint64_t, _QWORD))(v7 + 16))(*(_QWORD *)(v6 + 40), a1, 0);
  }
  _Block_release(*(const void **)(v6 + 40));
  return (*(uint64_t (**)(void))(v6 + 8))();
}

uint64_t BKAppDelegate.bkStartupTaskManager.getter()
{
  void *v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  _QWORD v7[3];
  uint64_t v8;
  uint64_t v9;

  v1 = objc_msgSend(v0, "containerHost");
  sub_1000145A0(v7);

  v2 = v8;
  v3 = v9;
  sub_10003F198(v7, v8);
  v4 = type metadata accessor for StartupTaskManager(0);
  result = dispatch thunk of ResolverType.resolve<A>(_:)(v4, v4, v2, v3);
  if (result)
  {
    v6 = result;
    _s5Books15CurrentPageViewVwxx_0(v7);
    return v6;
  }
  else
  {
    __break(1u);
  }
  return result;
}

Swift::Void __swiftcall BKAppDelegate.startDownloadPurchaseMonitor()()
{
  void *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  void *v6;
  void *v7;

  v1 = (char *)objc_msgSend(v0, "objectGraphHost");
  v2 = *(_QWORD *)&v1[OBJC_IVAR___BKObjectGraphHost_objectGraph];
  swift_retain(v2);

  v3 = type metadata accessor for DownloadPurchaseMonitor();
  BaseObjectGraph.inject<A>(_:)(&v7, v3, v3);
  swift_release(v2);
  v4 = v7;
  v5 = objc_msgSend((id)objc_opt_self(BLDownloadQueue), "sharedInstance");
  if (v5)
  {
    v6 = v5;
    objc_msgSend(v5, "addObserver:", v4);

  }
  else
  {
    __break(1u);
  }
}

uint64_t StartupTaskManager.startAllTasks(phase:)(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t result;
  Swift::String v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;

  v2 = type metadata accessor for StartupTaskExecutionPhase(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 >= 3)
  {
    v10 = 0;
    v11 = 0xE000000000000000;
    _StringGuts.grow(_:)(48);
    v7._object = (void *)0x80000001007BDEA0;
    v7._countAndFlagsBits = 0xD00000000000002ELL;
    String.append(_:)(v7);
    v9 = a1;
    _print_unlocked<A, B>(_:_:)(&v9, &v10, &type metadata for BKStartupTaskPhase, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, v10, v11, "Books/BKAppDelegate.swift", 25, 2, 139, 0);
    __break(1u);
  }
  else
  {
    (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *(unsigned int *)*(&off_1008FBDF0 + a1), v2);
    StartupTaskManager.startAllTasks(launchOptions:phase:)(0, v5);
    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  return result;
}

void sub_1002FB898(id a1, SEL a2, int64_t a3)
{
  swift_retain(a1);
  StartupTaskManager.startAllTasks(phase:)(a3);
  swift_release(a1);
}

unint64_t sub_1002FB8C8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009D9448;
  if (!qword_1009D9448)
  {
    v1 = sub_100030B74(&qword_1009D9440);
    result = swift_getWitnessTable(&protocol conformance descriptor for Promise<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1009D9448);
  }
  return result;
}

unint64_t sub_1002FB918()
{
  unint64_t result;

  result = qword_1009D9450;
  if (!qword_1009D9450)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for BKStartupTaskPhase, &type metadata for BKStartupTaskPhase);
    atomic_store(result, (unint64_t *)&qword_1009D9450);
  }
  return result;
}

ValueMetadata *type metadata accessor for BKStartupTaskPhase()
{
  return &type metadata for BKStartupTaskPhase;
}

uint64_t sub_1002FB96C()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1002FB998()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  v4 = (_QWORD *)swift_task_alloc(dword_1009D945C);
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_1001FC2C4;
  return ((uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1009D9458 + dword_1009D9458))(v2, v3);
}

_QWORD *sub_1002FBA04(void (*a1)(uint64_t *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  int64_t v5;
  _QWORD *v6;
  uint64_t *v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v15;
  _QWORD *v16;

  v4 = v3;
  v5 = *(_QWORD *)(a3 + 16);
  v6 = _swiftEmptyArrayStorage;
  if (v5)
  {
    v16 = _swiftEmptyArrayStorage;
    sub_100366B20(0, v5, 0);
    v6 = _swiftEmptyArrayStorage;
    v9 = (uint64_t *)(a3 + 32);
    while (1)
    {
      v10 = *v9++;
      v15 = v10;
      a1(&v15);
      if (v4)
        break;
      v4 = 0;
      v16 = v6;
      v12 = v6[2];
      v11 = v6[3];
      v13 = v12 + 1;
      if (v12 >= v11 >> 1)
      {
        sub_100366B20(v11 > 1, v12 + 1, 1);
        v6 = v16;
      }
      v6[2] = v13;
      if (!--v5)
        return v6;
    }
    swift_release(v6);
  }
  return v6;
}

_QWORD *sub_1002FBAF4(uint64_t a1, uint64_t *a2)
{
  int64_t v2;
  uint64_t v4;
  _QWORD *result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  char v10;
  unint64_t v11;
  char v12;
  unint64_t v13;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  id v19;
  NSObject *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  os_log_type_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  char v36;
  id v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
    return _swiftEmptyArrayStorage;
  v4 = a1;
  sub_100366B20(0, v2, 0);
  result = (_QWORD *)sub_1005171E0(v4);
  v6 = (uint64_t)result;
  v8 = v7;
  v10 = v9 & 1;
  v40 = v4 + 56;
  v38 = v4;
  v39 = a2;
  while ((v6 & 0x8000000000000000) == 0 && v6 < 1 << *(_BYTE *)(v4 + 32))
  {
    if (((*(_QWORD *)(v40 + (((unint64_t)v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
      goto LABEL_26;
    if (*(_DWORD *)(v4 + 36) != (_DWORD)v8)
      goto LABEL_27;
    v41 = *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v6);
    v11 = sub_1002BB7F4(v41);
    if ((v12 & 1) != 0)
    {
      v13 = v11;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*a2);
      v15 = *a2;
      v42 = *a2;
      *a2 = 0x8000000000000000;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_1002C3198();
        v15 = v42;
      }
      v16 = *(_QWORD *)(*(_QWORD *)(v15 + 56) + 8 * v13);
      sub_1002BE928(v13, v15);
      v17 = *a2;
      *a2 = v15;
      swift_bridgeObjectRelease(v17);
      v18 = *(void **)(v16 + 64);
      if (v18)
      {
        swift_retain(v16);
        v19 = v18;
        v20 = Logger.logObject.getter(v19);
        v24 = static os_log_type_t.debug.getter(v20, v21, v22, v23);
        if (os_log_type_enabled(v20, v24))
        {
          v37 = v19;
          v25 = swift_slowAlloc(12, -1);
          *(_DWORD *)v25 = 134217984;
          *(_QWORD *)(v25 + 4) = *(_QWORD *)(v16 + 72);
          swift_release(v16);
          _os_log_impl((void *)&_mh_execute_header, v20, v24, "Cancelling operation for index %ld", (uint8_t *)v25, 0xCu);
          v26 = v25;
          v19 = v37;
          swift_slowDealloc(v26, -1, -1);
        }
        else
        {
          swift_release(v16);
        }

        objc_msgSend(v19, "cancel");
        swift_release(v16);

      }
      else
      {
        swift_release(v16);
      }
    }
    if (qword_1009CEB30 != -1)
      swift_once(&qword_1009CEB30, sub_10066956C);
    v27 = type metadata accessor for Logger(0);
    v28 = sub_100048F64(v27, (uint64_t)qword_1009F3338);
    v29 = Logger.logObject.getter(v28);
    v30 = static os_log_type_t.info.getter(v29);
    v4 = v38;
    if (os_log_type_enabled(v29, v30))
    {
      v31 = swift_slowAlloc(12, -1);
      *(_DWORD *)v31 = 134217984;
      *(_QWORD *)(v31 + 4) = v41;
      _os_log_impl((void *)&_mh_execute_header, v29, v30, "trashing loader for index %ld", (uint8_t *)v31, 0xCu);
      swift_slowDealloc(v31, -1, -1);
    }

    v33 = _swiftEmptyArrayStorage[2];
    v32 = _swiftEmptyArrayStorage[3];
    v34 = v33 + 1;
    if (v33 >= v32 >> 1)
      sub_100366B20(v32 > 1, v33 + 1, 1);
    _swiftEmptyArrayStorage[2] = v34;
    result = (_QWORD *)sub_100517284(v6, v8, v10 & 1, v38);
    v6 = (uint64_t)result;
    v8 = v35;
    v10 = v36 & 1;
    --v2;
    a2 = v39;
    if (!v2)
    {
      sub_10030A650((uint64_t)result, v35, v36 & 1);
      return _swiftEmptyArrayStorage;
    }
  }
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

void sub_1002FBE64(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[5];
  uint64_t v28;

  v1 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (a1 < 0)
      v2 = a1;
    else
      v2 = a1 & 0xFFFFFFFFFFFFFF8;
    v3 = swift_bridgeObjectRetain(a1);
    v4 = __CocoaSet.makeIterator()(v2, v3);
    v5 = type metadata accessor for AnyCancellable(0);
    v6 = sub_100008DB0(&qword_1009DE360, (uint64_t (*)(uint64_t))&type metadata accessor for AnyCancellable, (uint64_t)&protocol conformance descriptor for AnyCancellable);
    v7 = Set.Iterator.init(_cocoa:)(v27, v4, v5, v6);
    v1 = v27[0];
    v25 = v27[1];
    v8 = v27[2];
    v9 = v27[3];
    v10 = v27[4];
  }
  else
  {
    v11 = -1 << *(_BYTE *)(a1 + 32);
    v25 = a1 + 56;
    v8 = ~v11;
    v12 = -v11;
    if (v12 < 64)
      v13 = ~(-1 << v12);
    else
      v13 = -1;
    v10 = v13 & *(_QWORD *)(a1 + 56);
    swift_bridgeObjectRetain(a1);
    v9 = 0;
  }
  v14 = (unint64_t)(v8 + 64) >> 6;
  if (v1 < 0)
    goto LABEL_13;
  while (1)
  {
    if (v10)
    {
      v15 = (v10 - 1) & v10;
      v16 = __clz(__rbit64(v10)) | (v9 << 6);
      v17 = v9;
      goto LABEL_32;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
      break;
    if (v22 >= v14)
      goto LABEL_35;
    v23 = *(_QWORD *)(v25 + 8 * v22);
    v17 = v9 + 1;
    if (!v23)
    {
      v17 = v9 + 2;
      if (v9 + 2 >= v14)
        goto LABEL_35;
      v23 = *(_QWORD *)(v25 + 8 * v17);
      if (!v23)
      {
        v17 = v9 + 3;
        if (v9 + 3 >= v14)
          goto LABEL_35;
        v23 = *(_QWORD *)(v25 + 8 * v17);
        if (!v23)
        {
          v17 = v9 + 4;
          if (v9 + 4 >= v14)
            goto LABEL_35;
          v23 = *(_QWORD *)(v25 + 8 * v17);
          if (!v23)
          {
            v17 = v9 + 5;
            if (v9 + 5 >= v14)
              goto LABEL_35;
            v23 = *(_QWORD *)(v25 + 8 * v17);
            if (!v23)
            {
              v24 = v9 + 6;
              while (v14 != v24)
              {
                v23 = *(_QWORD *)(v25 + 8 * v24++);
                if (v23)
                {
                  v17 = v24 - 1;
                  goto LABEL_31;
                }
              }
LABEL_35:
              sub_100299C3C(v1);
              return;
            }
          }
        }
      }
    }
LABEL_31:
    v15 = (v23 - 1) & v23;
    v16 = __clz(__rbit64(v23)) + (v17 << 6);
LABEL_32:
    v21 = *(_QWORD *)(*(_QWORD *)(v1 + 48) + 8 * v16);
    swift_retain(v21);
    if (!v21)
      goto LABEL_35;
    while (1)
    {
      AnyCancellable.cancel()();
      swift_release(v21);
      v9 = v17;
      v10 = v15;
      if ((v1 & 0x8000000000000000) == 0)
        break;
LABEL_13:
      v18 = __CocoaSet.Iterator.next()(v7);
      if (v18)
      {
        v19 = v18;
        v26 = v18;
        v20 = type metadata accessor for AnyCancellable(0);
        swift_unknownObjectRetain(v19);
        swift_dynamicCast(&v28, &v26, (char *)&type metadata for Swift.AnyObject + 8, v20, 7);
        v21 = v28;
        swift_unknownObjectRelease(v19);
        v17 = v9;
        v15 = v10;
        if (v21)
          continue;
      }
      goto LABEL_35;
    }
  }
  __break(1u);
}

uint64_t sub_1002FC104()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t ObjCClassFromMetadata;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t KeyPath;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  char *v36;
  char *v37;
  char *v38;
  void (*v39)(char *, uint64_t);
  uint64_t v40;
  char *v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  char *v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD v63[5];

  v0 = type metadata accessor for FloatingPointRoundingRule(0);
  v60 = *(_QWORD *)(v0 - 8);
  v61 = v0;
  __chkstk_darwin(v0);
  v59 = (char *)&v48 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = type metadata accessor for NumberFormatStyleConfiguration.Precision(0);
  v57 = *(_QWORD *)(v2 - 8);
  v58 = v2;
  __chkstk_darwin(v2);
  v54 = (char *)&v48 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_10004CFD4(&qword_1009D9D68);
  v56 = *(_QWORD *)(v4 - 8);
  v5 = __chkstk_darwin(v4);
  v51 = (char *)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __chkstk_darwin(v5);
  v53 = (char *)&v48 - v8;
  __chkstk_darwin(v7);
  v55 = (char *)&v48 - v9;
  v10 = type metadata accessor for Locale(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = __chkstk_darwin(v10);
  v14 = (char *)&v48 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v16 = (char *)&v48 - v15;
  v17 = type metadata accessor for String.LocalizationValue(0);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = __chkstk_darwin(v17);
  v21 = (char *)&v48 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v23 = (char *)&v48 - v22;
  v24 = String.LocalizationValue.init(stringLiteral:)(0x73746E65746E6F43, 0xAF402520A280E220);
  static Locale.current.getter(v24);
  (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v21, v23, v17);
  v25 = type metadata accessor for BundleFinder();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v25);
  v27 = objc_msgSend((id)objc_opt_self(NSBundle), "bundleForClass:", ObjCClassFromMetadata);
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v14, v16, v10);
  v28 = String.init(localized:table:bundle:locale:comment:)(v21, 0, 0, v27, v14, "Scrubber • {progress} %/ Table of Contents Button label", 57, 0);
  v49 = v29;
  v50 = v28;
  (*(void (**)(char *, uint64_t))(v11 + 8))(v16, v10);
  (*(void (**)(char *, uint64_t))(v18 + 8))(v23, v17);
  v30 = sub_10004CFD4((uint64_t *)&unk_1009D1970);
  v31 = swift_allocObject(v30, 72, 7);
  *(_OWORD *)(v31 + 16) = xmmword_10070CCA0;
  v48 = v31 + 32;
  KeyPath = swift_getKeyPath(&unk_100719E10);
  v63[0] = v52;
  v33 = v52;
  v34 = sub_100008DB0(&qword_1009D3B60, type metadata accessor for REActionMenuState, (uint64_t)&protocol conformance descriptor for REActionMenuState);
  ObservationRegistrar.access<A, B>(_:keyPath:)(v63, KeyPath, v34);
  swift_release(KeyPath);
  swift_beginAccess(v33 + 320, v63, 0, 0);
  v62 = *(_QWORD *)(v33 + 320);
  static Locale.autoupdatingCurrent.getter();
  v35 = sub_100224AA8();
  v36 = v51;
  FloatingPointFormatStyle.Percent.init(locale:)(v16, &type metadata for Double, v35);
  v37 = v54;
  static NumberFormatStyleConfiguration.Precision.fractionLength(_:)(0);
  v38 = v53;
  FloatingPointFormatStyle.Percent.precision(_:)(v37, v4);
  (*(void (**)(char *, uint64_t))(v57 + 8))(v37, v58);
  v39 = *(void (**)(char *, uint64_t))(v56 + 8);
  v39(v36, v4);
  v41 = v59;
  v40 = v60;
  v42 = v61;
  (*(void (**)(char *, _QWORD, uint64_t))(v60 + 104))(v59, enum case for FloatingPointRoundingRule.down(_:), v61);
  v43 = v55;
  FloatingPointFormatStyle.Percent.rounded(rule:increment:)(v41, 0, 1, v4);
  (*(void (**)(char *, uint64_t))(v40 + 8))(v41, v42);
  v39(v38, v4);
  *(_QWORD *)(v31 + 56) = &type metadata for String;
  *(_QWORD *)(v31 + 64) = sub_10002BE50();
  v44 = sub_100030B34((unint64_t *)&unk_1009D9D70, &qword_1009D9D68, (uint64_t)&protocol conformance descriptor for FloatingPointFormatStyle<A>.Percent);
  BinaryFloatingPoint.formatted<A>(_:)(v43, &type metadata for Double, v4, v35, v44);
  v39(v43, v4);
  v45 = v49;
  v46 = String.init(format:_:)(v50, v49, v31);
  swift_bridgeObjectRelease(v45);
  return v46;
}

uint64_t sub_1002FC5D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  void *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t ObjectType;
  uint64_t v12;
  uint64_t v13;
  _BYTE v15[24];

  v1 = v0;
  Strong = swift_unknownObjectWeakLoadStrong(v0 + 160);
  if (Strong)
  {
    v3 = (void *)Strong;
    v4 = *(id *)(Strong + OBJC_IVAR___BKEngagementManager_manager);
    v5 = Manager.donor(type:)(0x2D6E6F6973736573, 0xED0000726F6E6F64);

    if (v5)
    {
      v6 = type metadata accessor for SessionDonor(0);
      v7 = (_BYTE *)swift_dynamicCastClass(v5, v6);

      if (v7 && (v7[OBJC_IVAR___BKSessionDonor_everUsedOrientationLockMenuButton] & 1) == 0)
      {
        v7[OBJC_IVAR___BKSessionDonor_everUsedOrientationLockMenuButton] = 1;
        objc_msgSend(v7, "propertyDidChange:propertyConfiguration:", v7, *(_QWORD *)&v7[OBJC_IVAR___BKSessionDonor_everUsedOrientationLockMenuButtonAppConfig]);
      }
      swift_unknownObjectRelease(v5);
    }
    else
    {

    }
  }
  swift_beginAccess(v1 + 64, v15, 0, 0);
  v8 = swift_unknownObjectWeakLoadStrong(v1 + 64);
  if (v8)
  {
    v9 = v8;
    v10 = *(_QWORD *)(v1 + 72);
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(ObjectType, v10);
    swift_unknownObjectRelease(v9);
  }
  v12 = *(_QWORD *)(v1 + 24);
  v13 = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 104))(v13, v12);
}

uint64_t sub_1002FC71C()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  sub_10001BFD8(v0, qword_1009D9468);
  sub_100048F64(v0, (uint64_t)qword_1009D9468);
  sub_100009E04(0, (unint64_t *)&qword_1009CEEB0, OS_os_log_ptr);
  return static OS_os_log.be_loggerForCurrentFile(_:)(0xD00000000000001DLL, 0x80000001007BE440);
}

uint64_t property wrapper backing initializer of EdgeInsetPublisher.insets(double a1, double a2, double a3, double a4)
{
  uint64_t v4;
  _QWORD v6[4];

  *(double *)v6 = a1;
  *(double *)&v6[1] = a2;
  *(double *)&v6[2] = a3;
  *(double *)&v6[3] = a4;
  type metadata accessor for UIEdgeInsets(0);
  return Published.init(initialValue:)(v6, v4);
}

double EdgeInsetPublisher.insets.getter()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  double v4;

  KeyPath = swift_getKeyPath(&unk_100719BC0);
  v2 = swift_getKeyPath(&unk_100719BE8);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(v2);
  swift_release(KeyPath);
  return v4;
}

double sub_1002FC854@<D0>(uint64_t *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  double result;
  __int128 v7;
  _OWORD v8[2];

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_100719BC0);
  v5 = swift_getKeyPath(&unk_100719BE8);
  static Published.subscript.getter(v8, v3, KeyPath, v5);
  swift_release(v5);
  swift_release(KeyPath);
  result = *(double *)v8;
  v7 = v8[1];
  *a2 = v8[0];
  a2[1] = v7;
  return result;
}

uint64_t sub_1002FC8D4(__int128 *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t KeyPath;
  uint64_t v6;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;

  v8 = *a1;
  v2 = *((_QWORD *)a1 + 2);
  v3 = *((_QWORD *)a1 + 3);
  v4 = *a2;
  KeyPath = swift_getKeyPath(&unk_100719BC0);
  v6 = swift_getKeyPath(&unk_100719BE8);
  v9 = v8;
  v10 = v2;
  v11 = v3;
  swift_retain(v4);
  return static Published.subscript.setter(&v9, v4, KeyPath, v6);
}

uint64_t EdgeInsetPublisher.insets.setter(double a1, double a2, double a3, double a4)
{
  uint64_t v4;
  uint64_t KeyPath;
  uint64_t v10;
  _QWORD v12[4];

  KeyPath = swift_getKeyPath(&unk_100719BC0);
  v10 = swift_getKeyPath(&unk_100719BE8);
  *(double *)v12 = a1;
  *(double *)&v12[1] = a2;
  *(double *)&v12[2] = a3;
  *(double *)&v12[3] = a4;
  swift_retain(v4);
  return static Published.subscript.setter(v12, v4, KeyPath, v10);
}

void (*EdgeInsetPublisher.insets.modify(_QWORD *a1))(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t KeyPath;
  uint64_t v5;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  KeyPath = swift_getKeyPath(&unk_100719BC0);
  v3[4] = KeyPath;
  v5 = swift_getKeyPath(&unk_100719BE8);
  v3[5] = v5;
  v3[6] = static Published.subscript.modify(v3, v1, KeyPath, v5);
  return sub_1002B51E0;
}

uint64_t EdgeInsetPublisher.$insets.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  swift_beginAccess(v0 + OBJC_IVAR____TtC5Books18EdgeInsetPublisher__insets, v3, 33, 0);
  v1 = sub_10004CFD4(&qword_1009D9488);
  Published.projectedValue.getter(v1);
  return swift_endAccess(v3);
}

uint64_t EdgeInsetPublisher.$insets.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  double v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  _BYTE v11[24];

  v3 = sub_10004CFD4(&qword_1009D9490);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = __chkstk_darwin(v3);
  v7 = &v11[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  (*(void (**)(_BYTE *, uint64_t, uint64_t, double))(v4 + 16))(v7, a1, v3, v5);
  swift_beginAccess(v1 + OBJC_IVAR____TtC5Books18EdgeInsetPublisher__insets, v11, 33, 0);
  v8 = sub_10004CFD4(&qword_1009D9488);
  Published.projectedValue.setter(v7, v8);
  swift_endAccess(v11);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
}

void (*EdgeInsetPublisher.$insets.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = sub_10004CFD4(&qword_1009D9490);
  v3[10] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[11] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  v7 = malloc(v6);
  v8 = OBJC_IVAR____TtC5Books18EdgeInsetPublisher__insets;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess(v1 + v8, v3, 33, 0);
  v9 = sub_10004CFD4(&qword_1009D9488);
  v3[16] = v9;
  Published.projectedValue.getter(v9);
  swift_endAccess(v3);
  return sub_1002B5428;
}

uint64_t EdgeInsetPublisher.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC5Books18EdgeInsetPublisher__insets;
  v2 = sub_10004CFD4(&qword_1009D9488);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t EdgeInsetPublisher.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC5Books18EdgeInsetPublisher__insets;
  v2 = sub_10004CFD4(&qword_1009D9488);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_1002FCCFC@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t result;

  v4 = type metadata accessor for EdgeInsetPublisher(0);
  result = ObservableObject<>.objectWillChange.getter(v4, a1);
  *a2 = result;
  return result;
}

uint64_t sub_1002FCD38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t ObjectType;

  v1 = v0;
  v3 = *(uint64_t (**)(uint64_t))(v0 + 32);
  v2 = *(_QWORD *)(v0 + 40);
  v4 = swift_retain(v2);
  LOBYTE(v3) = v3(v4);
  result = swift_release(v2);
  if ((v3 & 1) != 0)
  {
    result = swift_unknownObjectWeakLoadStrong(v1 + 16);
    if (result)
    {
      v7 = result;
      v8 = *(_QWORD *)(v1 + 24);
      ObjectType = swift_getObjectType(result, v6);
      (*(void (**)(uint64_t, uint64_t))(v8 + 16))(ObjectType, v8);
      return swift_unknownObjectRelease(v7);
    }
  }
  return result;
}

uint64_t sub_1002FCDB4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t ObjectType;

  v1 = v0;
  v3 = *(uint64_t (**)(uint64_t))(v0 + 32);
  v2 = *(_QWORD *)(v0 + 40);
  v4 = swift_retain(v2);
  LOBYTE(v3) = v3(v4);
  result = swift_release(v2);
  if ((v3 & 1) != 0)
  {
    result = swift_unknownObjectWeakLoadStrong(v1 + 16);
    if (result)
    {
      v7 = result;
      v8 = *(_QWORD *)(v1 + 24);
      ObjectType = swift_getObjectType(result, v6);
      (*(void (**)(uint64_t, uint64_t))(v8 + 24))(ObjectType, v8);
      return swift_unknownObjectRelease(v7);
    }
  }
  return result;
}

uint64_t sub_1002FCE30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t ObjectType;

  v1 = v0;
  v3 = *(uint64_t (**)(uint64_t))(v0 + 32);
  v2 = *(_QWORD *)(v0 + 40);
  v4 = swift_retain(v2);
  LOBYTE(v3) = v3(v4);
  result = swift_release(v2);
  if ((v3 & 1) != 0)
  {
    result = swift_unknownObjectWeakLoadStrong(v1 + 16);
    if (result)
    {
      v7 = result;
      v8 = *(_QWORD *)(v1 + 24);
      ObjectType = swift_getObjectType(result, v6);
      (*(void (**)(uint64_t, uint64_t))(v8 + 32))(ObjectType, v8);
      return swift_unknownObjectRelease(v7);
    }
  }
  return result;
}

uint64_t sub_1002FCEAC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t ObjectType;

  v1 = v0;
  v3 = *(uint64_t (**)(uint64_t))(v0 + 32);
  v2 = *(_QWORD *)(v0 + 40);
  v4 = swift_retain(v2);
  LOBYTE(v3) = v3(v4);
  result = swift_release(v2);
  if ((v3 & 1) != 0)
  {
    result = swift_unknownObjectWeakLoadStrong(v1 + 16);
    if (result)
    {
      v7 = result;
      v8 = *(_QWORD *)(v1 + 24);
      ObjectType = swift_getObjectType(result, v6);
      (*(void (**)(uint64_t, uint64_t))(v8 + 40))(ObjectType, v8);
      return swift_unknownObjectRelease(v7);
    }
  }
  return result;
}

uint64_t sub_1002FCF28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t ObjectType;

  v1 = v0;
  v3 = *(uint64_t (**)(uint64_t))(v0 + 32);
  v2 = *(_QWORD *)(v0 + 40);
  v4 = swift_retain(v2);
  LOBYTE(v3) = v3(v4);
  result = swift_release(v2);
  if ((v3 & 1) != 0)
  {
    result = swift_unknownObjectWeakLoadStrong(v1 + 16);
    if (result)
    {
      v7 = result;
      v8 = *(_QWORD *)(v1 + 24);
      ObjectType = swift_getObjectType(result, v6);
      (*(void (**)(uint64_t, uint64_t))(v8 + 48))(ObjectType, v8);
      return swift_unknownObjectRelease(v7);
    }
  }
  return result;
}

uint64_t sub_1002FCFA4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t ObjectType;

  v1 = v0;
  v3 = *(uint64_t (**)(uint64_t))(v0 + 32);
  v2 = *(_QWORD *)(v0 + 40);
  v4 = swift_retain(v2);
  LOBYTE(v3) = v3(v4);
  result = swift_release(v2);
  if ((v3 & 1) != 0)
  {
    result = swift_unknownObjectWeakLoadStrong(v1 + 16);
    if (result)
    {
      v7 = result;
      v8 = *(_QWORD *)(v1 + 24);
      ObjectType = swift_getObjectType(result, v6);
      (*(void (**)(uint64_t, uint64_t))(v8 + 56))(ObjectType, v8);
      return swift_unknownObjectRelease(v7);
    }
  }
  return result;
}

uint64_t sub_1002FD020()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t ObjectType;

  v1 = v0;
  v3 = *(uint64_t (**)(uint64_t))(v0 + 32);
  v2 = *(_QWORD *)(v0 + 40);
  v4 = swift_retain(v2);
  LOBYTE(v3) = v3(v4);
  result = swift_release(v2);
  if ((v3 & 1) != 0)
  {
    result = swift_unknownObjectWeakLoadStrong(v1 + 16);
    if (result)
    {
      v7 = result;
      v8 = *(_QWORD *)(v1 + 24);
      ObjectType = swift_getObjectType(result, v6);
      (*(void (**)(uint64_t, uint64_t))(v8 + 64))(ObjectType, v8);
      return swift_unknownObjectRelease(v7);
    }
  }
  return result;
}

uint64_t sub_1002FD09C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t ObjectType;

  v1 = v0;
  v3 = *(uint64_t (**)(uint64_t))(v0 + 32);
  v2 = *(_QWORD *)(v0 + 40);
  v4 = swift_retain(v2);
  LOBYTE(v3) = v3(v4);
  result = swift_release(v2);
  if ((v3 & 1) != 0)
  {
    result = swift_unknownObjectWeakLoadStrong(v1 + 16);
    if (result)
    {
      v7 = result;
      v8 = *(_QWORD *)(v1 + 24);
      ObjectType = swift_getObjectType(result, v6);
      (*(void (**)(uint64_t, uint64_t))(v8 + 72))(ObjectType, v8);
      return swift_unknownObjectRelease(v7);
    }
  }
  return result;
}

uint64_t sub_1002FD118()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t ObjectType;

  v1 = v0;
  v3 = *(uint64_t (**)(uint64_t))(v0 + 32);
  v2 = *(_QWORD *)(v0 + 40);
  v4 = swift_retain(v2);
  LOBYTE(v3) = v3(v4);
  result = swift_release(v2);
  if ((v3 & 1) != 0)
  {
    result = swift_unknownObjectWeakLoadStrong(v1 + 16);
    if (result)
    {
      v7 = result;
      v8 = *(_QWORD *)(v1 + 24);
      ObjectType = swift_getObjectType(result, v6);
      (*(void (**)(uint64_t, uint64_t))(v8 + 80))(ObjectType, v8);
      return swift_unknownObjectRelease(v7);
    }
  }
  return result;
}

uint64_t sub_1002FD194()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t ObjectType;

  v1 = v0;
  v3 = *(uint64_t (**)(uint64_t))(v0 + 32);
  v2 = *(_QWORD *)(v0 + 40);
  v4 = swift_retain(v2);
  LOBYTE(v3) = v3(v4);
  result = swift_release(v2);
  if ((v3 & 1) != 0)
  {
    result = swift_unknownObjectWeakLoadStrong(v1 + 16);
    if (result)
    {
      v7 = result;
      v8 = *(_QWORD *)(v1 + 24);
      ObjectType = swift_getObjectType(result, v6);
      (*(void (**)(uint64_t, uint64_t))(v8 + 88))(ObjectType, v8);
      return swift_unknownObjectRelease(v7);
    }
  }
  return result;
}

uint64_t sub_1002FD210()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t ObjectType;

  v1 = v0;
  v3 = *(uint64_t (**)(uint64_t))(v0 + 32);
  v2 = *(_QWORD *)(v0 + 40);
  v4 = swift_retain(v2);
  LOBYTE(v3) = v3(v4);
  result = swift_release(v2);
  if ((v3 & 1) != 0)
  {
    result = swift_unknownObjectWeakLoadStrong(v1 + 16);
    if (result)
    {
      v7 = result;
      v8 = *(_QWORD *)(v1 + 24);
      ObjectType = swift_getObjectType(result, v6);
      (*(void (**)(uint64_t, uint64_t))(v8 + 96))(ObjectType, v8);
      return swift_unknownObjectRelease(v7);
    }
  }
  return result;
}

uint64_t sub_1002FD28C()
{
  uint64_t v0;

  sub_1001FE9A0(v0 + 16);
  swift_release(*(_QWORD *)(v0 + 40));
  return swift_deallocClassInstance(v0, 48, 7);
}

uint64_t sub_1002FD2B8()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjectType;

  result = swift_unknownObjectWeakLoadStrong(v0 + 16);
  if (result)
  {
    v3 = result;
    v4 = *(_QWORD *)(v0 + 24);
    ObjectType = swift_getObjectType(result, v2);
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(ObjectType, v4);
    return swift_unknownObjectRelease(v3);
  }
  return result;
}

uint64_t sub_1002FD340()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjectType;

  result = swift_unknownObjectWeakLoadStrong(v0 + 16);
  if (result)
  {
    v3 = result;
    v4 = *(_QWORD *)(v0 + 24);
    ObjectType = swift_getObjectType(result, v2);
    (*(void (**)(uint64_t, uint64_t))(v4 + 104))(ObjectType, v4);
    return swift_unknownObjectRelease(v3);
  }
  return result;
}

uint64_t sub_1002FD39C()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjectType;

  result = swift_unknownObjectWeakLoadStrong(v0 + 16);
  if (result)
  {
    v3 = result;
    v4 = *(_QWORD *)(v0 + 24);
    ObjectType = swift_getObjectType(result, v2);
    (*(void (**)(uint64_t, uint64_t))(v4 + 112))(ObjectType, v4);
    return swift_unknownObjectRelease(v3);
  }
  return result;
}

uint64_t sub_1002FD3F8(char a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t ObjectType;
  char v8;

  result = swift_unknownObjectWeakLoadStrong(v1 + 16);
  if (result)
  {
    v5 = result;
    v6 = *(_QWORD *)(v1 + 24);
    ObjectType = swift_getObjectType(result, v4);
    v8 = (*(uint64_t (**)(_QWORD, uint64_t, uint64_t))(v6 + 120))(a1 & 1, ObjectType, v6);
    swift_unknownObjectRelease(v5);
    return v8 & 1;
  }
  return result;
}

uint64_t sub_1002FD45C(char a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t ObjectType;

  result = swift_unknownObjectWeakLoadStrong(v1 + 16);
  if (result)
  {
    v5 = result;
    v6 = *(_QWORD *)(v1 + 24);
    ObjectType = swift_getObjectType(result, v4);
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v6 + 128))(a1 & 1, ObjectType, v6);
    return swift_unknownObjectRelease(v5);
  }
  return result;
}

uint64_t REActionMenuState.actionHandler.getter()
{
  uint64_t v0;

  return swift_unknownObjectRetain(*(_QWORD *)(v0 + 16));
}

uint64_t REActionMenuState.scrubHandler.getter()
{
  uint64_t v0;
  _BYTE v2[24];

  swift_beginAccess(v0 + 48, v2, 0, 0);
  return swift_unknownObjectWeakLoadStrong(v0 + 48);
}

uint64_t REActionMenuState.scrubHandler.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _BYTE v6[24];

  swift_beginAccess(v2 + 48, v6, 1, 0);
  *(_QWORD *)(v2 + 56) = a2;
  swift_unknownObjectWeakAssign(v2 + 48, a1);
  return swift_unknownObjectRelease(a1);
}

void (*REActionMenuState.scrubHandler.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t Strong;
  uint64_t v5;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[5] = v1;
  swift_beginAccess(v1 + 48, v3, 33, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1 + 48);
  v5 = *(_QWORD *)(v1 + 56);
  v3[3] = Strong;
  v3[4] = v5;
  return sub_1002FD5F8;
}

void sub_1002FD5F8(uint64_t a1, char a2)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(_QWORD **)a1;
  v4 = *(_QWORD *)(*(_QWORD *)a1 + 24);
  v5 = *(_QWORD *)(*(_QWORD *)a1 + 40);
  *(_QWORD *)(v5 + 56) = *(_QWORD *)(*(_QWORD *)a1 + 32);
  swift_unknownObjectWeakAssign(v5 + 48, v4);
  if ((a2 & 1) != 0)
  {
    swift_unknownObjectRelease(v3[3]);
    swift_endAccess(v3);
  }
  else
  {
    swift_endAccess(v3);
    swift_unknownObjectRelease(v4);
  }
  free(v3);
}

uint64_t REActionMenuState.orientationLockHandler.getter()
{
  uint64_t v0;
  _BYTE v2[24];

  swift_beginAccess(v0 + 64, v2, 0, 0);
  return swift_unknownObjectWeakLoadStrong(v0 + 64);
}

uint64_t REActionMenuState.orientationLockHandler.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _BYTE v6[24];

  swift_beginAccess(v2 + 64, v6, 1, 0);
  *(_QWORD *)(v2 + 72) = a2;
  swift_unknownObjectWeakAssign(v2 + 64, a1);
  return swift_unknownObjectRelease(a1);
}

void (*REActionMenuState.orientationLockHandler.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t Strong;
  uint64_t v5;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[5] = v1;
  swift_beginAccess(v1 + 64, v3, 33, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1 + 64);
  v5 = *(_QWORD *)(v1 + 72);
  v3[3] = Strong;
  v3[4] = v5;
  return sub_1002FD778;
}

void sub_1002FD778(uint64_t a1, char a2)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(_QWORD **)a1;
  v4 = *(_QWORD *)(*(_QWORD *)a1 + 24);
  v5 = *(_QWORD *)(*(_QWORD *)a1 + 40);
  *(_QWORD *)(v5 + 72) = *(_QWORD *)(*(_QWORD *)a1 + 32);
  swift_unknownObjectWeakAssign(v5 + 64, v4);
  if ((a2 & 1) != 0)
  {
    swift_unknownObjectRelease(v3[3]);
    swift_endAccess(v3);
  }
  else
  {
    swift_endAccess(v3);
    swift_unknownObjectRelease(v4);
  }
  free(v3);
}

uint64_t sub_1002FD7E8()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_10071A1A0);
  v4 = v0;
  v2 = sub_100008DB0(&qword_1009D3B60, type metadata accessor for REActionMenuState, (uint64_t)&protocol conformance descriptor for REActionMenuState);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v4, KeyPath, v2);
  swift_release(KeyPath);
  return *(_QWORD *)(v0 + 136);
}

void sub_1002FD86C(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_10071A1A0);
  v6 = v3;
  v5 = sub_100008DB0(&qword_1009D3B60, type metadata accessor for REActionMenuState, (uint64_t)&protocol conformance descriptor for REActionMenuState);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v6, KeyPath, v5);
  swift_release(KeyPath);
  *a2 = *(_QWORD *)(v3 + 136);
}

double sub_1002FD8F8(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  double result;
  _QWORD v7[5];
  uint64_t v8;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_10071A1A0);
  v7[2] = v3;
  v7[3] = v2;
  v8 = v3;
  v5 = sub_100008DB0(&qword_1009D3B60, type metadata accessor for REActionMenuState, (uint64_t)&protocol conformance descriptor for REActionMenuState);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v8, KeyPath, sub_10030A3F8, v7, (char *)&type metadata for () + 8, v5);
  *(_QWORD *)&result = swift_release(KeyPath).n128_u64[0];
  return result;
}

uint64_t sub_1002FD99C(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 136) = a2;
  return result;
}

uint64_t REActionMenuState.chapterTitlePublisher.getter()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_10004CFD4(&qword_1009CEC50);
  v1 = sub_100030B34((unint64_t *)&unk_1009F0130, &qword_1009CEC50, (uint64_t)&protocol conformance descriptor for CurrentValueSubject<A, B>);
  return Publisher.eraseToAnyPublisher()(v0, v1);
}

uint64_t REActionMenuState.chapterTitle.getter()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_100719C08);
  v4 = v0;
  v2 = sub_100008DB0(&qword_1009D3B60, type metadata accessor for REActionMenuState, (uint64_t)&protocol conformance descriptor for REActionMenuState);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v4, KeyPath, v2);
  swift_release(KeyPath);
  CurrentValueSubject.value.getter(&v4);
  return v4;
}

_QWORD *sub_1002FDAA0@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  _QWORD *result;
  uint64_t v7;
  _QWORD v8[2];

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_100719C08);
  v8[0] = v3;
  v5 = sub_100008DB0(&qword_1009D3B60, type metadata accessor for REActionMenuState, (uint64_t)&protocol conformance descriptor for REActionMenuState);
  ObservationRegistrar.access<A, B>(_:keyPath:)(v8, KeyPath, v5);
  swift_release(KeyPath);
  result = CurrentValueSubject.value.getter(v8);
  v7 = v8[1];
  *a2 = v8[0];
  a2[1] = v7;
  return result;
}

double sub_1002FDB3C(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *a1;
  v2 = a1[1];
  swift_bridgeObjectRetain(v2);
  return REActionMenuState.chapterTitle.setter(v1, v2);
}

double sub_1002FDB78(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *a1;
  v2 = a1[1];
  swift_bridgeObjectRetain(v2);
  return REActionMenuState.chapterTitle.setter(v1, v2);
}

uint64_t type metadata accessor for REActionMenuState(uint64_t a1)
{
  return sub_10002C92C(a1, qword_1009D9720, (uint64_t)&nominal type descriptor for REActionMenuState);
}

double REActionMenuState.chapterTitle.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v7;
  uint64_t v8;
  double result;
  char v10;
  uint64_t v11;
  _QWORD v12[8];
  uint64_t v13;
  uint64_t v14;

  v3 = v2;
  KeyPath = swift_getKeyPath(&unk_100719C08);
  v13 = v2;
  v7 = sub_100008DB0(&qword_1009D3B60, type metadata accessor for REActionMenuState, (uint64_t)&protocol conformance descriptor for REActionMenuState);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v13, KeyPath, v7);
  swift_release(KeyPath);
  CurrentValueSubject.value.getter(&v13);
  v8 = v14;
  if (v13 == a1 && v14 == a2)
  {
    swift_bridgeObjectRelease_n(a2, 2);
  }
  else
  {
    v10 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, a2, v13, v14, 0);
    swift_bridgeObjectRelease(v8);
    if ((v10 & 1) != 0)
    {
      *(_QWORD *)&result = swift_bridgeObjectRelease(a2).n128_u64[0];
    }
    else
    {
      v11 = swift_getKeyPath(&unk_100719C08);
      __chkstk_darwin(v11);
      v12[2] = v3;
      v12[3] = a1;
      v12[4] = a2;
      v13 = v3;
      ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v13, v11, sub_1002FDD44, v12, (char *)&type metadata for () + 8, v7);
      swift_release(v11);
      *(_QWORD *)&result = swift_bridgeObjectRelease(a2).n128_u64[0];
    }
  }
  return result;
}

uint64_t sub_1002FDD44()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD v3[2];

  v1 = *(_QWORD *)(v0 + 32);
  v3[0] = *(_QWORD *)(v0 + 24);
  v3[1] = v1;
  swift_bridgeObjectRetain(v1);
  return CurrentValueSubject.value.setter(v3);
}

void (*REActionMenuState.chapterTitle.modify(_QWORD *a1))(uint64_t **a1, char a2)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t KeyPath;
  uint64_t v6;
  uint64_t v7;

  v2 = v1;
  v4 = malloc(0x28uLL);
  *a1 = v4;
  v4[4] = v2;
  KeyPath = swift_getKeyPath(&unk_100719C08);
  v4[2] = v2;
  v6 = sub_100008DB0(&qword_1009D3B60, type metadata accessor for REActionMenuState, (uint64_t)&protocol conformance descriptor for REActionMenuState);
  ObservationRegistrar.access<A, B>(_:keyPath:)(v4 + 2, KeyPath, v6);
  swift_release(KeyPath);
  CurrentValueSubject.value.getter(v4 + 2);
  v7 = v4[3];
  *v4 = v4[2];
  v4[1] = v7;
  return sub_1002FDE48;
}

void sub_1002FDE48(uint64_t **a1, char a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *a1;
  v4 = **a1;
  v3 = (*a1)[1];
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain((*a1)[1]);
    REActionMenuState.chapterTitle.setter(v4, v3);
    swift_bridgeObjectRelease(v2[1]);
  }
  else
  {
    REActionMenuState.chapterTitle.setter(**a1, v3);
  }
  free(v2);
}

uint64_t REActionMenuState.pagesLeftInChapterStringPublisher.getter()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_10004CFD4(&qword_1009CEC58);
  v1 = sub_100030B34((unint64_t *)&unk_1009F0140, &qword_1009CEC58, (uint64_t)&protocol conformance descriptor for CurrentValueSubject<A, B>);
  return Publisher.eraseToAnyPublisher()(v0, v1);
}

double sub_1002FDF14@<D0>(uint64_t *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  double result;
  __int128 v7;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_100719C30);
  *(_QWORD *)&v7 = v3;
  v5 = sub_100008DB0(&qword_1009D3B60, type metadata accessor for REActionMenuState, (uint64_t)&protocol conformance descriptor for REActionMenuState);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v7, KeyPath, v5);
  swift_release(KeyPath);
  CurrentValueSubject.value.getter(&v7);
  result = *(double *)&v7;
  *a2 = v7;
  return result;
}

_QWORD *sub_1002FDFAC(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *a1;
  v2 = a1[1];
  swift_bridgeObjectRetain(v2);
  return sub_1002FE0B8(v1, v2);
}

uint64_t REActionMenuState.pagesLeftInChapterString.getter()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_100719C30);
  v4 = v0;
  v2 = sub_100008DB0(&qword_1009D3B60, type metadata accessor for REActionMenuState, (uint64_t)&protocol conformance descriptor for REActionMenuState);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v4, KeyPath, v2);
  swift_release(KeyPath);
  CurrentValueSubject.value.getter(&v4);
  return v4;
}

_QWORD *sub_1002FE07C(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *a1;
  v2 = a1[1];
  swift_bridgeObjectRetain(v2);
  return sub_1002FE0B8(v1, v2);
}

_QWORD *sub_1002FE0B8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v7;
  _QWORD *result;
  uint64_t v9;
  char v10;
  uint64_t v11;
  _QWORD v12[8];
  uint64_t v13;
  uint64_t v14;

  v3 = v2;
  KeyPath = swift_getKeyPath(&unk_100719C30);
  v13 = v2;
  v7 = sub_100008DB0(&qword_1009D3B60, type metadata accessor for REActionMenuState, (uint64_t)&protocol conformance descriptor for REActionMenuState);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v13, KeyPath, v7);
  swift_release(KeyPath);
  result = CurrentValueSubject.value.getter(&v13);
  v9 = v14;
  if (a2)
  {
    if (v14)
    {
      if (v13 == a1 && v14 == a2)
      {
        swift_bridgeObjectRelease(a2);
        return (_QWORD *)swift_bridgeObjectRelease(v9);
      }
      v10 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, a2, v13, v14, 0);
      swift_bridgeObjectRelease(v9);
      if ((v10 & 1) != 0)
        return (_QWORD *)swift_bridgeObjectRelease(a2);
    }
  }
  else
  {
    if (!v14)
      return result;
    swift_bridgeObjectRelease(v14);
  }
  v11 = swift_getKeyPath(&unk_100719C30);
  __chkstk_darwin(v11);
  v12[2] = v3;
  v12[3] = a1;
  v12[4] = a2;
  v13 = v3;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v13, v11, sub_10030A3AC, v12, (char *)&type metadata for () + 8, v7);
  swift_release(v11);
  return (_QWORD *)swift_bridgeObjectRelease(a2);
}

void sub_1002FE254()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  os_log_type_t v13;
  uint8_t *v14;
  const char *v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint32_t v19;
  uint64_t v20;
  uint64_t v21;
  os_log_type_t v22;
  uint64_t v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  uint8_t *v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  _BOOL4 v38;
  uint64_t v39;
  uint64_t v40;
  NSObject *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  os_log_type_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  double v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _BYTE v61[16];
  uint64_t v62;
  uint64_t v63;
  _BOOL4 v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD v68[3];

  v1 = v0;
  KeyPath = swift_getKeyPath(&unk_100719CD0);
  v68[0] = v0;
  v3 = sub_100008DB0(&qword_1009D3B60, type metadata accessor for REActionMenuState, (uint64_t)&protocol conformance descriptor for REActionMenuState);
  ObservationRegistrar.access<A, B>(_:keyPath:)(v68, KeyPath, v3);
  swift_release(KeyPath);
  v4 = *(_QWORD *)(v0 + 256);
  v5 = swift_getKeyPath(&unk_100719C58);
  v68[0] = v0;
  ObservationRegistrar.access<A, B>(_:keyPath:)(v68, v5, v3);
  swift_release(v5);
  swift_beginAccess(v0 + 216, v68, 0, 0);
  v6 = *(_QWORD *)(v0 + 216);
  if (v4 == _s5Books17REActionMenuStateC9pageCountSivpfi_0())
  {
    if (qword_1009CDE60 != -1)
      swift_once(&qword_1009CDE60, sub_1002FC71C);
    v7 = type metadata accessor for Logger(0);
    v8 = sub_100048F64(v7, (uint64_t)qword_1009D9468);
    v9 = Logger.logObject.getter(v8);
    v13 = static os_log_type_t.debug.getter(v9, v10, v11, v12);
    if (!os_log_type_enabled(v9, v13))
      goto LABEL_12;
    v14 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v14 = 0;
    v15 = "Skipping update as we don't have a page count yet.";
    v16 = v9;
    v17 = v13;
    v18 = v14;
    v19 = 2;
LABEL_11:
    _os_log_impl((void *)&_mh_execute_header, v16, v17, v15, v18, v19);
    swift_slowDealloc(v14, -1, -1);
LABEL_12:

    return;
  }
  if (v6 == _s5Books17REActionMenuStateC9pageCountSivpfi_0())
  {
    if (qword_1009CDE60 != -1)
      swift_once(&qword_1009CDE60, sub_1002FC71C);
    v20 = type metadata accessor for Logger(0);
    v21 = sub_100048F64(v20, (uint64_t)qword_1009D9468);
    v9 = Logger.logObject.getter(v21);
    v22 = static os_log_type_t.error.getter(v9);
    if (!os_log_type_enabled(v9, v22))
      goto LABEL_12;
    v14 = (uint8_t *)swift_slowAlloc(12, -1);
    *(_DWORD *)v14 = 134217984;
    v67 = v6;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v67, v68, v14 + 4, v14 + 12);
    v15 = "Cannot update scrubber with invalid pageNumber: %ld";
    v16 = v9;
    v17 = v22;
    v18 = v14;
    v19 = 12;
    goto LABEL_11;
  }
  if (v6 < 0)
  {
    if (qword_1009CDE60 != -1)
      swift_once(&qword_1009CDE60, sub_1002FC71C);
    v30 = type metadata accessor for Logger(0);
    v31 = sub_100048F64(v30, (uint64_t)qword_1009D9468);
    v32 = Logger.logObject.getter(v31);
    v33 = static os_log_type_t.error.getter(v32);
    if (os_log_type_enabled(v32, v33))
    {
      v34 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v34 = 0;
      _os_log_impl((void *)&_mh_execute_header, v32, v33, "Cannot allow page number below 1, clamping to 1", v34, 2u);
      swift_slowDealloc(v34, -1, -1);
    }

    v28 = swift_getKeyPath(&unk_100719C58);
    __chkstk_darwin(v28);
    v62 = v1;
    v63 = 1;
    v67 = v1;
    v29 = (char *)&type metadata for () + 8;
    goto LABEL_25;
  }
  if (v4 < v6)
  {
    if (qword_1009CDE60 != -1)
      swift_once(&qword_1009CDE60, sub_1002FC71C);
    v23 = type metadata accessor for Logger(0);
    v24 = sub_100048F64(v23, (uint64_t)qword_1009D9468);
    v25 = Logger.logObject.getter(v24);
    v26 = static os_log_type_t.info.getter(v25);
    if (os_log_type_enabled(v25, v26))
    {
      v27 = swift_slowAlloc(22, -1);
      *(_DWORD *)v27 = 134218240;
      v67 = v6;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v67, v68, v27 + 4, v27 + 12);
      *(_WORD *)(v27 + 12) = 2048;
      v67 = v4;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v67, v68, v27 + 14, v27 + 22);
      _os_log_impl((void *)&_mh_execute_header, v25, v26, "Clamping high page number %ld to pageCount %ld", (uint8_t *)v27, 0x16u);
      swift_slowDealloc(v27, -1, -1);
    }

    v28 = swift_getKeyPath(&unk_100719C58);
    __chkstk_darwin(v28);
    v62 = v1;
    v63 = v4;
    v67 = v1;
    v29 = (char *)&type metadata for () + 8;
LABEL_25:
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v67, v28, sub_1002FEE08, v61, v29, v3);
    swift_release(v28);
    return;
  }
  v35 = swift_getKeyPath(&unk_100719E80);
  v67 = v0;
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v67, v35, v3);
  swift_release(v35);
  v36 = *(_QWORD *)(v0 + 328);
  if (v36 >> 62 == 2 && (v36 | 8) == 0x8000000000000018)
  {
    v37 = swift_getKeyPath(&unk_100719CF8);
    v67 = v0;
    ObservationRegistrar.access<A, B>(_:keyPath:)(&v67, v37, v3);
    swift_release(v37);
    v38 = *(_BYTE *)(v0 + 280) != 0;
  }
  else
  {
    v38 = 1;
  }
  if (qword_1009CDE60 != -1)
    swift_once(&qword_1009CDE60, sub_1002FC71C);
  v39 = type metadata accessor for Logger(0);
  sub_100048F64(v39, (uint64_t)qword_1009D9468);
  v40 = swift_retain_n(v0, 2);
  v41 = Logger.logObject.getter(v40);
  v45 = static os_log_type_t.debug.getter(v41, v42, v43, v44);
  if (os_log_type_enabled(v41, v45))
  {
    v64 = v38;
    v46 = swift_slowAlloc(22, -1);
    v47 = swift_slowAlloc(32, -1);
    v67 = v47;
    *(_DWORD *)v46 = 134218242;
    v48 = swift_getKeyPath(&unk_100719C58);
    v65 = v0;
    ObservationRegistrar.access<A, B>(_:keyPath:)(&v65, v48, v3);
    swift_release(v48);
    v49 = *(_QWORD *)(v0 + 216);
    swift_release(v1);
    v65 = v49;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v65, &v66, v46 + 4, v46 + 12);
    swift_release(v1);
    *(_WORD *)(v46 + 12) = 2080;
    if (v64)
      v50 = 0xD000000000000011;
    else
      v50 = 0;
    if (v64)
      v51 = 0x80000001007BE480;
    else
      v51 = 0xE000000000000000;
    v65 = sub_100040F58(v50, v51, &v67);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v65, &v66, v46 + 14, v46 + 22);
    swift_bridgeObjectRelease(v51);
    _os_log_impl((void *)&_mh_execute_header, v41, v45, "pageNumber set to %ld %s", (uint8_t *)v46, 0x16u);
    swift_arrayDestroy(v47, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v47, -1, -1);
    v52 = v46;
    v38 = v64;
    swift_slowDealloc(v52, -1, -1);

  }
  else
  {

    swift_release_n(v0, 2);
  }
  if (v38)
  {
    v53 = swift_getKeyPath(&unk_100719C58);
    v67 = v1;
    ObservationRegistrar.access<A, B>(_:keyPath:)(&v67, v53, v3);
    swift_release(v53);
    v54 = *(_QWORD *)(v1 + 216);
    v55 = swift_getKeyPath(&unk_100719CD0);
    v67 = v1;
    ObservationRegistrar.access<A, B>(_:keyPath:)(&v67, v55, v3);
    swift_release(v55);
    v56 = *(_QWORD *)(v1 + 256);
    v57 = 0.0;
    if (v56 >= 1 && v54 >= 1 && v56 >= v54 && (v54 != 1 || v56 != 1))
      v57 = (double)(v54 - 1) / (double)(v56 - 1);
    v58 = swift_getKeyPath(&unk_100719E10);
    __chkstk_darwin(v58);
    v62 = v1;
    v63 = *(_QWORD *)&v57;
    v67 = v1;
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v67, v58, sub_100301D98, v61, (char *)&type metadata for () + 8, v3);
    swift_release(v58);
  }
  v59 = sub_1003031E4();
  sub_1002FE0B8(v59, v60);
}

uint64_t (*sub_1002FEADC(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess(v1 + 216, a1, 33, 0);
  return sub_1002FEB1C;
}

uint64_t sub_1002FEB1C(uint64_t a1, char a2)
{
  return sub_100301ABC(a1, a2, (uint64_t (*)(uint64_t))sub_1002FE254);
}

uint64_t REActionMenuState.pageNumber.getter()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  _QWORD v4[3];

  KeyPath = swift_getKeyPath(&unk_100719C58);
  v4[0] = v0;
  v2 = sub_100008DB0(&qword_1009D3B60, type metadata accessor for REActionMenuState, (uint64_t)&protocol conformance descriptor for REActionMenuState);
  ObservationRegistrar.access<A, B>(_:keyPath:)(v4, KeyPath, v2);
  swift_release(KeyPath);
  swift_beginAccess(v0 + 216, v4, 0, 0);
  return *(_QWORD *)(v0 + 216);
}

void sub_1002FEBC0(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  _QWORD v6[3];

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_100719C58);
  v6[0] = v3;
  v5 = sub_100008DB0(&qword_1009D3B60, type metadata accessor for REActionMenuState, (uint64_t)&protocol conformance descriptor for REActionMenuState);
  ObservationRegistrar.access<A, B>(_:keyPath:)(v6, KeyPath, v5);
  swift_release(KeyPath);
  swift_beginAccess(v3 + 216, v6, 0, 0);
  *a2 = *(_QWORD *)(v3 + 216);
}

double sub_1002FEC64(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  double result;
  _QWORD v7[5];
  uint64_t v8;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_100719C58);
  v7[2] = v3;
  v7[3] = v2;
  v8 = v3;
  v5 = sub_100008DB0(&qword_1009D3B60, type metadata accessor for REActionMenuState, (uint64_t)&protocol conformance descriptor for REActionMenuState);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v8, KeyPath, sub_1002FEE08, v7, (char *)&type metadata for () + 8, v5);
  *(_QWORD *)&result = swift_release(KeyPath).n128_u64[0];
  return result;
}

double REActionMenuState.pageNumber.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v4;
  double result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  KeyPath = swift_getKeyPath(&unk_100719C58);
  v7 = v1;
  v8 = a1;
  v9 = v1;
  v4 = sub_100008DB0(&qword_1009D3B60, type metadata accessor for REActionMenuState, (uint64_t)&protocol conformance descriptor for REActionMenuState);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v9, KeyPath, sub_1002FEE08, &v6, (char *)&type metadata for () + 8, v4);
  *(_QWORD *)&result = swift_release(KeyPath).n128_u64[0];
  return result;
}

void sub_1002FEDB0(uint64_t a1, uint64_t a2)
{
  _BYTE v4[24];

  swift_beginAccess(a1 + 216, v4, 1, 0);
  *(_QWORD *)(a1 + 216) = a2;
  sub_1002FE254();
}

void sub_1002FEE08()
{
  sub_10030A874();
}

void (*REActionMenuState.pageNumber.modify(_QWORD *a1))(_QWORD *a1, uint64_t a2)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t KeyPath;
  uint64_t v6;
  uint64_t v7;

  v2 = v1;
  v4 = malloc(0x40uLL);
  *a1 = v4;
  v4[4] = v2;
  KeyPath = swift_getKeyPath(&unk_100719C58);
  v4[5] = OBJC_IVAR____TtC5Books17REActionMenuState___observationRegistrar;
  *v4 = v2;
  v6 = sub_100008DB0(&qword_1009D3B60, type metadata accessor for REActionMenuState, (uint64_t)&protocol conformance descriptor for REActionMenuState);
  v4[6] = v6;
  ObservationRegistrar.access<A, B>(_:keyPath:)(v4, KeyPath, v6);
  swift_release(KeyPath);
  *v4 = v2;
  v7 = swift_getKeyPath(&unk_100719C58);
  ObservationRegistrar.willSet<A, B>(_:keyPath:)(v4, v7, v6);
  swift_release(v7);
  v4[7] = sub_1002FEADC((uint64_t)v4);
  return sub_1002FEF04;
}

void sub_1002FEF04(_QWORD *a1, uint64_t a2)
{
  sub_100302FCC(a1, a2, (uint64_t)&unk_100719C58);
}

uint64_t (*sub_1002FEF10(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + 224, a1, 33, 0);
  return j__swift_endAccess;
}

uint64_t REActionMenuState.curlDebugMenuVisible.getter()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  _QWORD v4[3];

  KeyPath = swift_getKeyPath(&unk_100719C80);
  v4[0] = v0;
  v2 = sub_100008DB0(&qword_1009D3B60, type metadata accessor for REActionMenuState, (uint64_t)&protocol conformance descriptor for REActionMenuState);
  ObservationRegistrar.access<A, B>(_:keyPath:)(v4, KeyPath, v2);
  swift_release(KeyPath);
  swift_beginAccess(v0 + 224, v4, 0, 0);
  return *(unsigned __int8 *)(v0 + 224);
}

void sub_1002FEFE4(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  _QWORD v6[3];

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_100719C80);
  v6[0] = v3;
  v5 = sub_100008DB0(&qword_1009D3B60, type metadata accessor for REActionMenuState, (uint64_t)&protocol conformance descriptor for REActionMenuState);
  ObservationRegistrar.access<A, B>(_:keyPath:)(v6, KeyPath, v5);
  swift_release(KeyPath);
  swift_beginAccess(v3 + 224, v6, 0, 0);
  *a2 = *(_BYTE *)(v3 + 224);
}

double sub_1002FF088(char *a1, uint64_t *a2)
{
  char v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  double result;
  _QWORD v7[3];
  char v8;
  uint64_t v9;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_100719C80);
  v7[2] = v3;
  v8 = v2;
  v9 = v3;
  v5 = sub_100008DB0(&qword_1009D3B60, type metadata accessor for REActionMenuState, (uint64_t)&protocol conformance descriptor for REActionMenuState);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v9, KeyPath, sub_1002FF22C, v7, (char *)&type metadata for () + 8, v5);
  *(_QWORD *)&result = swift_release(KeyPath).n128_u64[0];
  return result;
}

double REActionMenuState.curlDebugMenuVisible.setter(char a1)
{
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v4;
  double result;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;

  KeyPath = swift_getKeyPath(&unk_100719C80);
  v7 = v1;
  v8 = a1;
  v9 = v1;
  v4 = sub_100008DB0(&qword_1009D3B60, type metadata accessor for REActionMenuState, (uint64_t)&protocol conformance descriptor for REActionMenuState);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v9, KeyPath, sub_1002FF22C, &v6, (char *)&type metadata for () + 8, v4);
  *(_QWORD *)&result = swift_release(KeyPath).n128_u64[0];
  return result;
}

uint64_t sub_1002FF1DC(uint64_t a1, char a2)
{
  uint64_t result;
  _BYTE v5[24];

  result = swift_beginAccess(a1 + 224, v5, 1, 0);
  *(_BYTE *)(a1 + 224) = a2;
  return result;
}

uint64_t sub_1002FF22C()
{
  return sub_10030A7C4();
}

void (*REActionMenuState.curlDebugMenuVisible.modify(_QWORD *a1))(_QWORD *a1, uint64_t a2)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t KeyPath;
  uint64_t v6;
  uint64_t v7;

  v2 = v1;
  v4 = malloc(0x40uLL);
  *a1 = v4;
  v4[4] = v2;
  KeyPath = swift_getKeyPath(&unk_100719C80);
  v4[5] = OBJC_IVAR____TtC5Books17REActionMenuState___observationRegistrar;
  *v4 = v2;
  v6 = sub_100008DB0(&qword_1009D3B60, type metadata accessor for REActionMenuState, (uint64_t)&protocol conformance descriptor for REActionMenuState);
  v4[6] = v6;
  ObservationRegistrar.access<A, B>(_:keyPath:)(v4, KeyPath, v6);
  swift_release(KeyPath);
  *v4 = v2;
  v7 = swift_getKeyPath(&unk_100719C80);
  ObservationRegistrar.willSet<A, B>(_:keyPath:)(v4, v7, v6);
  swift_release(v7);
  v4[7] = sub_1002FEF10((uint64_t)v4);
  return sub_1002FF328;
}

void sub_1002FF328(_QWORD *a1, uint64_t a2)
{
  sub_100302FCC(a1, a2, (uint64_t)&unk_100719C80);
}

void sub_1002FF334(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  os_log_type_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t KeyPath;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v4 = v3;
  if (qword_1009CDE60 != -1)
    swift_once(&qword_1009CDE60, sub_1002FC71C);
  v8 = type metadata accessor for Logger(0);
  sub_100048F64(v8, (uint64_t)qword_1009D9468);
  v9 = swift_retain_n(v3, 2);
  v10 = Logger.logObject.getter(v9);
  v14 = static os_log_type_t.debug.getter(v10, v11, v12, v13);
  if (os_log_type_enabled(v10, v14))
  {
    v15 = swift_slowAlloc(22, -1);
    v16 = swift_slowAlloc(64, -1);
    v26 = v16;
    *(_DWORD *)v15 = 136315394;
    BookMovementState.description.getter(a1, a2, a3);
    v18 = v17;
    v25 = sub_100040F58(v19, v17, &v26);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v25, &v26, v15 + 4, v15 + 12);
    swift_bridgeObjectRelease(v18);
    *(_WORD *)(v15 + 12) = 2080;
    KeyPath = swift_getKeyPath(&unk_100719CA8);
    v25 = v3;
    v21 = sub_100008DB0(&qword_1009D3B60, type metadata accessor for REActionMenuState, (uint64_t)&protocol conformance descriptor for REActionMenuState);
    ObservationRegistrar.access<A, B>(_:keyPath:)(&v25, KeyPath, v21);
    swift_release(KeyPath);
    BookMovementState.description.getter(*(_QWORD *)(v3 + 232), *(_QWORD *)(v3 + 240), *(_BYTE *)(v3 + 248));
    v23 = v22;
    v25 = sub_100040F58(v24, v22, &v26);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v25, &v26, v15 + 14, v15 + 22);
    swift_release_n(v4, 2);
    swift_bridgeObjectRelease(v23);
    _os_log_impl((void *)&_mh_execute_header, v10, v14, "MovementState moving from %s to %s", (uint8_t *)v15, 0x16u);
    swift_arrayDestroy(v16, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v16, -1, -1);
    swift_slowDealloc(v15, -1, -1);

  }
  else
  {

    swift_release_n(v3, 2);
  }
}

void (*sub_1002FF580(uint64_t a1))(uint64_t a1)
{
  uint64_t v1;
  char v2;

  *(_QWORD *)(a1 + 24) = v1;
  v2 = *(_BYTE *)(v1 + 248);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 232);
  *(_BYTE *)(a1 + 16) = v2;
  return sub_1002FF5A4;
}

void sub_1002FF5A4(uint64_t a1)
{
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  char v5;

  v1 = *(_QWORD *)(a1 + 24);
  v2 = *(_BYTE *)(a1 + 16);
  v4 = *(_QWORD *)(v1 + 232);
  v3 = *(_QWORD *)(v1 + 240);
  *(_OWORD *)(v1 + 232) = *(_OWORD *)a1;
  v5 = *(_BYTE *)(v1 + 248);
  *(_BYTE *)(v1 + 248) = v2;
  sub_1002FF334(v4, v3, v5);
}

uint64_t REActionMenuState.movementState.getter()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_100719CA8);
  v4 = v0;
  v2 = sub_100008DB0(&qword_1009D3B60, type metadata accessor for REActionMenuState, (uint64_t)&protocol conformance descriptor for REActionMenuState);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v4, KeyPath, v2);
  swift_release(KeyPath);
  return *(_QWORD *)(v0 + 232);
}

__n128 sub_1002FF668@<Q0>(uint64_t *a1@<X0>, __n128 *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  unsigned __int8 v6;
  __n128 result;
  uint64_t v8;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_100719CA8);
  v8 = v3;
  v5 = sub_100008DB0(&qword_1009D3B60, type metadata accessor for REActionMenuState, (uint64_t)&protocol conformance descriptor for REActionMenuState);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v8, KeyPath, v5);
  swift_release(KeyPath);
  v6 = *(_BYTE *)(v3 + 248);
  result = *(__n128 *)(v3 + 232);
  *a2 = result;
  a2[1].n128_u8[0] = v6;
  return result;
}

double sub_1002FF700(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t KeyPath;
  uint64_t v7;
  double result;
  _QWORD v9[5];
  char v10;
  uint64_t v11;

  v2 = *a1;
  v3 = a1[1];
  v4 = *((_BYTE *)a1 + 16);
  v5 = *a2;
  KeyPath = swift_getKeyPath(&unk_100719CA8);
  v9[2] = v5;
  v9[3] = v2;
  v9[4] = v3;
  v10 = v4;
  v11 = v5;
  v7 = sub_100008DB0(&qword_1009D3B60, type metadata accessor for REActionMenuState, (uint64_t)&protocol conformance descriptor for REActionMenuState);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v11, KeyPath, sub_1002FF878, v9, (char *)&type metadata for () + 8, v7);
  *(_QWORD *)&result = swift_release(KeyPath).n128_u64[0];
  return result;
}

double REActionMenuState.movementState.setter(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v8;
  double result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;

  KeyPath = swift_getKeyPath(&unk_100719CA8);
  v11 = v3;
  v12 = a1;
  v13 = a2;
  v14 = a3;
  v15 = v3;
  v8 = sub_100008DB0(&qword_1009D3B60, type metadata accessor for REActionMenuState, (uint64_t)&protocol conformance descriptor for REActionMenuState);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v15, KeyPath, sub_1002FF878, &v10, (char *)&type metadata for () + 8, v8);
  *(_QWORD *)&result = swift_release(KeyPath).n128_u64[0];
  return result;
}

void sub_1002FF878()
{
  sub_10030A780();
}

void (*REActionMenuState.movementState.modify(_QWORD *a1))(_QWORD *a1, uint64_t a2)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t KeyPath;
  uint64_t v6;
  uint64_t v7;

  v2 = v1;
  v4 = malloc(0x40uLL);
  *a1 = v4;
  v4[4] = v2;
  KeyPath = swift_getKeyPath(&unk_100719CA8);
  v4[5] = OBJC_IVAR____TtC5Books17REActionMenuState___observationRegistrar;
  *v4 = v2;
  v6 = sub_100008DB0(&qword_1009D3B60, type metadata accessor for REActionMenuState, (uint64_t)&protocol conformance descriptor for REActionMenuState);
  v4[6] = v6;
  ObservationRegistrar.access<A, B>(_:keyPath:)(v4, KeyPath, v6);
  swift_release(KeyPath);
  *v4 = v2;
  v7 = swift_getKeyPath(&unk_100719CA8);
  ObservationRegistrar.willSet<A, B>(_:keyPath:)(v4, v7, v6);
  swift_release(v7);
  v4[7] = sub_1002FF580((uint64_t)v4);
  return sub_1002FF974;
}

void sub_1002FF974(_QWORD *a1, uint64_t a2)
{
  sub_100302FCC(a1, a2, (uint64_t)&unk_100719CA8);
}

double sub_1002FF980(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t KeyPath;
  uint64_t v5;
  double result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  os_log_type_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD v24[4];
  _BYTE v25[32];
  uint64_t v26;
  uint64_t v27;
  _BYTE v28[16];

  v2 = v1;
  KeyPath = swift_getKeyPath(&unk_100719CD0);
  v27 = v1;
  v5 = sub_100008DB0(&qword_1009D3B60, type metadata accessor for REActionMenuState, (uint64_t)&protocol conformance descriptor for REActionMenuState);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v27, KeyPath, v5);
  *(_QWORD *)&result = swift_release(KeyPath).n128_u64[0];
  if (*(_QWORD *)(v1 + 256) != a1)
  {
    v7 = *(_QWORD *)(v1 + 144);
    v8 = swift_getKeyPath(&unk_100719CD0);
    v27 = v1;
    ObservationRegistrar.access<A, B>(_:keyPath:)(&v27, v8, v5);
    swift_release(v8);
    *(_QWORD *)(v7 + OBJC_IVAR____TtC5Books24ScrubberMarkerController_pageCount) = *(_QWORD *)(v1 + 256);
    if (qword_1009CDE60 != -1)
      swift_once(&qword_1009CDE60, sub_1002FC71C);
    v9 = type metadata accessor for Logger(0);
    sub_100048F64(v9, (uint64_t)qword_1009D9468);
    v10 = swift_retain_n(v1, 4);
    v11 = Logger.logObject.getter(v10);
    v15 = static os_log_type_t.debug.getter(v11, v12, v13, v14);
    if (os_log_type_enabled(v11, v15))
    {
      v16 = swift_slowAlloc(22, -1);
      *(_DWORD *)v16 = 134218240;
      v17 = swift_getKeyPath(&unk_100719CD0);
      v27 = v1;
      ObservationRegistrar.access<A, B>(_:keyPath:)(&v27, v17, v5);
      swift_release(v17);
      v18 = *(_QWORD *)(v1 + 256);
      swift_release(v2);
      v27 = v18;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v27, v28, v16 + 4, v16 + 12);
      swift_release(v2);
      *(_WORD *)(v16 + 12) = 2048;
      v19 = swift_getKeyPath(&unk_100719C58);
      v27 = v2;
      ObservationRegistrar.access<A, B>(_:keyPath:)(&v27, v19, v5);
      swift_release(v19);
      swift_beginAccess(v2 + 216, v25, 0, 0);
      v20 = *(_QWORD *)(v2 + 216);
      swift_release(v2);
      v27 = v20;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v27, v28, v16 + 14, v16 + 22);
      swift_release(v2);
      _os_log_impl((void *)&_mh_execute_header, v11, v15, "Got Page Count %ld.  (Current pageNumber is %ld", (uint8_t *)v16, 0x16u);
      swift_slowDealloc(v16, -1, -1);

    }
    else
    {

      swift_release_n(v1, 4);
    }
    v21 = swift_getKeyPath(&unk_100719C58);
    v27 = v2;
    ObservationRegistrar.access<A, B>(_:keyPath:)(&v27, v21, v5);
    swift_release(v21);
    swift_beginAccess(v2 + 216, &v27, 0, 0);
    v22 = *(_QWORD *)(v2 + 216);
    v23 = swift_getKeyPath(&unk_100719C58);
    __chkstk_darwin(v23);
    v24[2] = v2;
    v24[3] = v22;
    v26 = v2;
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v26, v23, sub_1002FEE08, v24, (char *)&type metadata for () + 8, v5);
    *(_QWORD *)&result = swift_release(v23).n128_u64[0];
  }
  return result;
}

double (*sub_1002FFCE4(_QWORD *a1))(uint64_t *a1)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 256);
  a1[1] = v1;
  return sub_1002FFCFC;
}

double sub_1002FFCFC(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *a1;
  v2 = a1[1];
  v3 = *(_QWORD *)(v2 + 256);
  *(_QWORD *)(v2 + 256) = v1;
  return sub_1002FF980(v3);
}

uint64_t REActionMenuState.pageCount.getter()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_100719CD0);
  v4 = v0;
  v2 = sub_100008DB0(&qword_1009D3B60, type metadata accessor for REActionMenuState, (uint64_t)&protocol conformance descriptor for REActionMenuState);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v4, KeyPath, v2);
  swift_release(KeyPath);
  return *(_QWORD *)(v0 + 256);
}

void sub_1002FFDA8(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_100719CD0);
  v6 = v3;
  v5 = sub_100008DB0(&qword_1009D3B60, type metadata accessor for REActionMenuState, (uint64_t)&protocol conformance descriptor for REActionMenuState);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v6, KeyPath, v5);
  swift_release(KeyPath);
  *a2 = *(_QWORD *)(v3 + 256);
}

double sub_1002FFE38(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  double result;
  _QWORD v7[5];
  uint64_t v8;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_100719CD0);
  v7[2] = v3;
  v7[3] = v2;
  v8 = v3;
  v5 = sub_100008DB0(&qword_1009D3B60, type metadata accessor for REActionMenuState, (uint64_t)&protocol conformance descriptor for REActionMenuState);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v8, KeyPath, sub_1002FFFB4, v7, (char *)&type metadata for () + 8, v5);
  *(_QWORD *)&result = swift_release(KeyPath).n128_u64[0];
  return result;
}

double REActionMenuState.pageCount.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v4;
  double result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  KeyPath = swift_getKeyPath(&unk_100719CD0);
  v7 = v1;
  v8 = a1;
  v9 = v1;
  v4 = sub_100008DB0(&qword_1009D3B60, type metadata accessor for REActionMenuState, (uint64_t)&protocol conformance descriptor for REActionMenuState);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v9, KeyPath, sub_1002FFFB4, &v6, (char *)&type metadata for () + 8, v4);
  *(_QWORD *)&result = swift_release(KeyPath).n128_u64[0];
  return result;
}

double sub_1002FFF84(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 256);
  *(_QWORD *)(a1 + 256) = a2;
  return sub_1002FF980(v3);
}

double sub_1002FFFB4()
{
  return sub_10030A74C();
}

void (*REActionMenuState.pageCount.modify(_QWORD *a1))(_QWORD *a1, uint64_t a2)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t KeyPath;
  uint64_t v6;
  uint64_t v7;

  v2 = v1;
  v4 = malloc(0x40uLL);
  *a1 = v4;
  v4[4] = v2;
  KeyPath = swift_getKeyPath(&unk_100719CD0);
  v4[5] = OBJC_IVAR____TtC5Books17REActionMenuState___observationRegistrar;
  *v4 = v2;
  v6 = sub_100008DB0(&qword_1009D3B60, type metadata accessor for REActionMenuState, (uint64_t)&protocol conformance descriptor for REActionMenuState);
  v4[6] = v6;
  ObservationRegistrar.access<A, B>(_:keyPath:)(v4, KeyPath, v6);
  swift_release(KeyPath);
  *v4 = v2;
  v7 = swift_getKeyPath(&unk_100719CD0);
  ObservationRegistrar.willSet<A, B>(_:keyPath:)(v4, v7, v6);
  swift_release(v7);
  v4[7] = sub_1002FFCE4(v4);
  return sub_1003000B0;
}

void sub_1003000B0(_QWORD *a1, uint64_t a2)
{
  sub_100302FCC(a1, a2, (uint64_t)&unk_100719CD0);
}

uint64_t sub_1003000BC()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_10071A178);
  v4 = v0;
  v2 = sub_100008DB0(&qword_1009D3B60, type metadata accessor for REActionMenuState, (uint64_t)&protocol conformance descriptor for REActionMenuState);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v4, KeyPath, v2);
  swift_release(KeyPath);
  return *(unsigned __int8 *)(v0 + 264);
}

void sub_100300140(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_10071A178);
  v6 = v3;
  v5 = sub_100008DB0(&qword_1009D3B60, type metadata accessor for REActionMenuState, (uint64_t)&protocol conformance descriptor for REActionMenuState);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v6, KeyPath, v5);
  swift_release(KeyPath);
  *a2 = *(_BYTE *)(v3 + 264);
}

double sub_1003001CC(char *a1, uint64_t *a2)
{
  char v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  double result;
  _QWORD v7[3];
  char v8;
  uint64_t v9;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_10071A178);
  v7[2] = v3;
  v8 = v2;
  v9 = v3;
  v5 = sub_100008DB0(&qword_1009D3B60, type metadata accessor for REActionMenuState, (uint64_t)&protocol conformance descriptor for REActionMenuState);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v9, KeyPath, sub_10030A39C, v7, (char *)&type metadata for () + 8, v5);
  *(_QWORD *)&result = swift_release(KeyPath).n128_u64[0];
  return result;
}

uint64_t sub_100300274(uint64_t result, char a2)
{
  *(_BYTE *)(result + 264) = a2;
  return result;
}

double sub_10030027C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t Strong;
  uint64_t v9;
  uint64_t v10;
  uint64_t ObjectType;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  double result;
  uint64_t v17;
  char v18;

  v1 = *(_QWORD *)(v0 + 128);
  KeyPath = swift_getKeyPath(&unk_100719CF8);
  v17 = v0;
  v3 = sub_100008DB0(&qword_1009D3B60, type metadata accessor for REActionMenuState, (uint64_t)&protocol conformance descriptor for REActionMenuState);
  swift_retain(v1);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v17, KeyPath, v3);
  swift_release(KeyPath);
  v4 = *(_QWORD *)(v0 + 272);
  v5 = *(_BYTE *)(v0 + 280);
  v6 = swift_getKeyPath(&unk_100719E38);
  v7 = swift_getKeyPath(&unk_100719E60);
  v17 = v4;
  v18 = v5;
  sub_100300604(v4, v5);
  swift_retain(v1);
  sub_100300604(v4, v5);
  static Published.subscript.setter(&v17, v1, v6, v7);
  swift_beginAccess(v1 + 24, &v17, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1 + 24);
  if (Strong)
  {
    v9 = Strong;
    v10 = *(_QWORD *)(v1 + 32);
    ObjectType = swift_getObjectType();
    v12 = (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 24))(ObjectType, v10);
    v14 = v13;
    swift_unknownObjectRelease(v9);
    if (v12)
    {
      v15 = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v15, v14);
      swift_unknownObjectRelease(v12);
    }
  }
  sub_100309A54(v4, v5);
  *(_QWORD *)&result = swift_release(v1).n128_u64[0];
  return result;
}

uint64_t sub_1003003FC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v9;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_100719CF8);
  v9 = v3;
  v5 = sub_100008DB0(&qword_1009D3B60, type metadata accessor for REActionMenuState, (uint64_t)&protocol conformance descriptor for REActionMenuState);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v9, KeyPath, v5);
  swift_release(KeyPath);
  v6 = *(_QWORD *)(v3 + 272);
  *(_QWORD *)a2 = v6;
  v7 = *(_BYTE *)(v3 + 280);
  *(_BYTE *)(a2 + 8) = v7;
  return sub_100300604(v6, v7);
}

double sub_100300494(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t KeyPath;
  uint64_t v6;
  double result;
  _QWORD v8[4];
  char v9;
  uint64_t v10;

  v2 = *(_QWORD *)a1;
  v3 = *a2;
  v4 = *(_BYTE *)(a1 + 8);
  KeyPath = swift_getKeyPath(&unk_100719CF8);
  v8[2] = v3;
  v8[3] = v2;
  v9 = v4;
  v10 = v3;
  sub_100300604(v2, v4);
  v6 = sub_100008DB0(&qword_1009D3B60, type metadata accessor for REActionMenuState, (uint64_t)&protocol conformance descriptor for REActionMenuState);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v10, KeyPath, sub_10030A918, v8, (char *)&type metadata for () + 8, v6);
  sub_100309A54(v2, v4);
  *(_QWORD *)&result = swift_release(KeyPath).n128_u64[0];
  return result;
}

uint64_t REActionMenuState.scrubberState.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  v1 = v0;
  KeyPath = swift_getKeyPath(&unk_100719CF8);
  v6 = v0;
  v3 = sub_100008DB0(&qword_1009D3B60, type metadata accessor for REActionMenuState, (uint64_t)&protocol conformance descriptor for REActionMenuState);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v6, KeyPath, v3);
  swift_release(KeyPath);
  v4 = *(_QWORD *)(v0 + 272);
  sub_100300604(v4, *(_BYTE *)(v1 + 280));
  return v4;
}

uint64_t sub_100300604(uint64_t result, char a2)
{
  if (a2 == 1)
    return swift_retain(result);
  return result;
}

uint64_t sub_100300618(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v5;
  char v6;

  v5 = *(_QWORD *)(a1 + 272);
  *(_QWORD *)(a1 + 272) = a2;
  v6 = *(_BYTE *)(a1 + 280);
  *(_BYTE *)(a1 + 280) = a3;
  sub_100300604(a2, a3);
  sub_100300604(a2, a3);
  sub_100309A54(v5, v6);
  sub_10030027C();
  return sub_100309A54(a2, a3);
}

void sub_100300698(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_100719D20);
  v6 = v3;
  v5 = sub_100008DB0(&qword_1009D3B60, type metadata accessor for REActionMenuState, (uint64_t)&protocol conformance descriptor for REActionMenuState);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v6, KeyPath, v5);
  swift_release(KeyPath);
  *a2 = *(_BYTE *)(v3 + 281);
}

double sub_100300724(char *a1, uint64_t *a2)
{
  char v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  double result;
  _QWORD v7[3];
  char v8;
  uint64_t v9;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_100719D20);
  v7[2] = v3;
  v8 = v2;
  v9 = v3;
  v5 = sub_100008DB0(&qword_1009D3B60, type metadata accessor for REActionMenuState, (uint64_t)&protocol conformance descriptor for REActionMenuState);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v9, KeyPath, sub_10030A8F0, v7, (char *)&type metadata for () + 8, v5);
  *(_QWORD *)&result = swift_release(KeyPath).n128_u64[0];
  return result;
}

uint64_t REActionMenuState.closed.getter()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_100719D20);
  v4 = v0;
  v2 = sub_100008DB0(&qword_1009D3B60, type metadata accessor for REActionMenuState, (uint64_t)&protocol conformance descriptor for REActionMenuState);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v4, KeyPath, v2);
  swift_release(KeyPath);
  return *(unsigned __int8 *)(v0 + 281);
}

uint64_t REActionMenuState.closedPublisher.getter()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_10004CFD4((uint64_t *)&unk_1009CEC60);
  v1 = sub_100030B34((unint64_t *)&qword_1009D94A0, (uint64_t *)&unk_1009CEC60, (uint64_t)&protocol conformance descriptor for CurrentValueSubject<A, B>);
  return Publisher.eraseToAnyPublisher()(v0, v1);
}

uint64_t (*sub_1003008C4(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + 296, a1, 33, 0);
  return j_j__swift_endAccess;
}

uint64_t REActionMenuState.isOrientationLocked.getter()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  _QWORD v4[3];

  KeyPath = swift_getKeyPath(&unk_100719D48);
  v4[0] = v0;
  v2 = sub_100008DB0(&qword_1009D3B60, type metadata accessor for REActionMenuState, (uint64_t)&protocol conformance descriptor for REActionMenuState);
  ObservationRegistrar.access<A, B>(_:keyPath:)(v4, KeyPath, v2);
  swift_release(KeyPath);
  swift_beginAccess(v0 + 296, v4, 0, 0);
  return *(unsigned __int8 *)(v0 + 296);
}

void sub_100300998(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  _QWORD v6[3];

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_100719D48);
  v6[0] = v3;
  v5 = sub_100008DB0(&qword_1009D3B60, type metadata accessor for REActionMenuState, (uint64_t)&protocol conformance descriptor for REActionMenuState);
  ObservationRegistrar.access<A, B>(_:keyPath:)(v6, KeyPath, v5);
  swift_release(KeyPath);
  swift_beginAccess(v3 + 296, v6, 0, 0);
  *a2 = *(_BYTE *)(v3 + 296);
}

double sub_100300A3C(char *a1, uint64_t *a2)
{
  char v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  double result;
  _QWORD v7[3];
  char v8;
  uint64_t v9;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_100719D48);
  v7[2] = v3;
  v8 = v2;
  v9 = v3;
  v5 = sub_100008DB0(&qword_1009D3B60, type metadata accessor for REActionMenuState, (uint64_t)&protocol conformance descriptor for REActionMenuState);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v9, KeyPath, sub_100300BE0, v7, (char *)&type metadata for () + 8, v5);
  *(_QWORD *)&result = swift_release(KeyPath).n128_u64[0];
  return result;
}

double REActionMenuState.isOrientationLocked.setter(char a1)
{
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v4;
  double result;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;

  KeyPath = swift_getKeyPath(&unk_100719D48);
  v7 = v1;
  v8 = a1;
  v9 = v1;
  v4 = sub_100008DB0(&qword_1009D3B60, type metadata accessor for REActionMenuState, (uint64_t)&protocol conformance descriptor for REActionMenuState);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v9, KeyPath, sub_100300BE0, &v6, (char *)&type metadata for () + 8, v4);
  *(_QWORD *)&result = swift_release(KeyPath).n128_u64[0];
  return result;
}

uint64_t sub_100300B90(uint64_t a1, char a2)
{
  uint64_t result;
  _BYTE v5[24];

  result = swift_beginAccess(a1 + 296, v5, 1, 0);
  *(_BYTE *)(a1 + 296) = a2;
  return result;
}

uint64_t sub_100300BE0()
{
  return sub_10030A6FC();
}

void (*REActionMenuState.isOrientationLocked.modify(_QWORD *a1))(_QWORD *a1, uint64_t a2)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t KeyPath;
  uint64_t v6;
  uint64_t v7;

  v2 = v1;
  v4 = malloc(0x40uLL);
  *a1 = v4;
  v4[4] = v2;
  KeyPath = swift_getKeyPath(&unk_100719D48);
  v4[5] = OBJC_IVAR____TtC5Books17REActionMenuState___observationRegistrar;
  *v4 = v2;
  v6 = sub_100008DB0(&qword_1009D3B60, type metadata accessor for REActionMenuState, (uint64_t)&protocol conformance descriptor for REActionMenuState);
  v4[6] = v6;
  ObservationRegistrar.access<A, B>(_:keyPath:)(v4, KeyPath, v6);
  swift_release(KeyPath);
  *v4 = v2;
  v7 = swift_getKeyPath(&unk_100719D48);
  ObservationRegistrar.willSet<A, B>(_:keyPath:)(v4, v7, v6);
  swift_release(v7);
  v4[7] = sub_1003008C4((uint64_t)v4);
  return sub_100300CDC;
}

void sub_100300CDC(_QWORD *a1, uint64_t a2)
{
  sub_100302FCC(a1, a2, (uint64_t)&unk_100719D48);
}

uint64_t (*sub_100300CE8(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + 297, a1, 33, 0);
  return j_j__swift_endAccess;
}

uint64_t REActionMenuState.isReadingLoupeEnabled.getter()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  _QWORD v4[3];

  KeyPath = swift_getKeyPath(&unk_100719D70);
  v4[0] = v0;
  v2 = sub_100008DB0(&qword_1009D3B60, type metadata accessor for REActionMenuState, (uint64_t)&protocol conformance descriptor for REActionMenuState);
  ObservationRegistrar.access<A, B>(_:keyPath:)(v4, KeyPath, v2);
  swift_release(KeyPath);
  swift_beginAccess(v0 + 297, v4, 0, 0);
  return *(unsigned __int8 *)(v0 + 297);
}

void sub_100300DBC(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  _QWORD v6[3];

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_100719D70);
  v6[0] = v3;
  v5 = sub_100008DB0(&qword_1009D3B60, type metadata accessor for REActionMenuState, (uint64_t)&protocol conformance descriptor for REActionMenuState);
  ObservationRegistrar.access<A, B>(_:keyPath:)(v6, KeyPath, v5);
  swift_release(KeyPath);
  swift_beginAccess(v3 + 297, v6, 0, 0);
  *a2 = *(_BYTE *)(v3 + 297);
}

double sub_100300E60(char *a1, uint64_t *a2)
{
  char v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  double result;
  _QWORD v7[3];
  char v8;
  uint64_t v9;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_100719D70);
  v7[2] = v3;
  v8 = v2;
  v9 = v3;
  v5 = sub_100008DB0(&qword_1009D3B60, type metadata accessor for REActionMenuState, (uint64_t)&protocol conformance descriptor for REActionMenuState);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v9, KeyPath, sub_100301004, v7, (char *)&type metadata for () + 8, v5);
  *(_QWORD *)&result = swift_release(KeyPath).n128_u64[0];
  return result;
}

double REActionMenuState.isReadingLoupeEnabled.setter(char a1)
{
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v4;
  double result;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;

  KeyPath = swift_getKeyPath(&unk_100719D70);
  v7 = v1;
  v8 = a1;
  v9 = v1;
  v4 = sub_100008DB0(&qword_1009D3B60, type metadata accessor for REActionMenuState, (uint64_t)&protocol conformance descriptor for REActionMenuState);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v9, KeyPath, sub_100301004, &v6, (char *)&type metadata for () + 8, v4);
  *(_QWORD *)&result = swift_release(KeyPath).n128_u64[0];
  return result;
}

uint64_t sub_100300FB4(uint64_t a1, char a2)
{
  uint64_t result;
  _BYTE v5[24];

  result = swift_beginAccess(a1 + 297, v5, 1, 0);
  *(_BYTE *)(a1 + 297) = a2;
  return result;
}

uint64_t sub_100301004()
{
  return sub_10030A6AC();
}

void (*REActionMenuState.isReadingLoupeEnabled.modify(_QWORD *a1))(_QWORD *a1, uint64_t a2)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t KeyPath;
  uint64_t v6;
  uint64_t v7;

  v2 = v1;
  v4 = malloc(0x40uLL);
  *a1 = v4;
  v4[4] = v2;
  KeyPath = swift_getKeyPath(&unk_100719D70);
  v4[5] = OBJC_IVAR____TtC5Books17REActionMenuState___observationRegistrar;
  *v4 = v2;
  v6 = sub_100008DB0(&qword_1009D3B60, type metadata accessor for REActionMenuState, (uint64_t)&protocol conformance descriptor for REActionMenuState);
  v4[6] = v6;
  ObservationRegistrar.access<A, B>(_:keyPath:)(v4, KeyPath, v6);
  swift_release(KeyPath);
  *v4 = v2;
  v7 = swift_getKeyPath(&unk_100719D70);
  ObservationRegistrar.willSet<A, B>(_:keyPath:)(v4, v7, v6);
  swift_release(v7);
  v4[7] = sub_100300CE8((uint64_t)v4);
  return sub_100301100;
}

void sub_100301100(_QWORD *a1, uint64_t a2)
{
  sub_100302FCC(a1, a2, (uint64_t)&unk_100719D70);
}

uint64_t (*sub_10030110C(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + 298, a1, 33, 0);
  return j_j__swift_endAccess;
}

uint64_t REActionMenuState.isReadingLoupeAllowable.getter()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  _QWORD v4[3];

  KeyPath = swift_getKeyPath(&unk_100719D98);
  v4[0] = v0;
  v2 = sub_100008DB0(&qword_1009D3B60, type metadata accessor for REActionMenuState, (uint64_t)&protocol conformance descriptor for REActionMenuState);
  ObservationRegistrar.access<A, B>(_:keyPath:)(v4, KeyPath, v2);
  swift_release(KeyPath);
  swift_beginAccess(v0 + 298, v4, 0, 0);
  return *(unsigned __int8 *)(v0 + 298);
}

void sub_1003011E0(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  _QWORD v6[3];

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_100719D98);
  v6[0] = v3;
  v5 = sub_100008DB0(&qword_1009D3B60, type metadata accessor for REActionMenuState, (uint64_t)&protocol conformance descriptor for REActionMenuState);
  ObservationRegistrar.access<A, B>(_:keyPath:)(v6, KeyPath, v5);
  swift_release(KeyPath);
  swift_beginAccess(v3 + 298, v6, 0, 0);
  *a2 = *(_BYTE *)(v3 + 298);
}

double sub_100301284(char *a1, uint64_t *a2)
{
  char v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  double result;
  _QWORD v7[3];
  char v8;
  uint64_t v9;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_100719D98);
  v7[2] = v3;
  v8 = v2;
  v9 = v3;
  v5 = sub_100008DB0(&qword_1009D3B60, type metadata accessor for REActionMenuState, (uint64_t)&protocol conformance descriptor for REActionMenuState);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v9, KeyPath, sub_100301428, v7, (char *)&type metadata for () + 8, v5);
  *(_QWORD *)&result = swift_release(KeyPath).n128_u64[0];
  return result;
}

double REActionMenuState.isReadingLoupeAllowable.setter(char a1)
{
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v4;
  double result;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;

  KeyPath = swift_getKeyPath(&unk_100719D98);
  v7 = v1;
  v8 = a1;
  v9 = v1;
  v4 = sub_100008DB0(&qword_1009D3B60, type metadata accessor for REActionMenuState, (uint64_t)&protocol conformance descriptor for REActionMenuState);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v9, KeyPath, sub_100301428, &v6, (char *)&type metadata for () + 8, v4);
  *(_QWORD *)&result = swift_release(KeyPath).n128_u64[0];
  return result;
}

uint64_t sub_1003013D8(uint64_t a1, char a2)
{
  uint64_t result;
  _BYTE v5[24];

  result = swift_beginAccess(a1 + 298, v5, 1, 0);
  *(_BYTE *)(a1 + 298) = a2;
  return result;
}

uint64_t sub_100301428()
{
  return sub_10030A65C();
}

void (*REActionMenuState.isReadingLoupeAllowable.modify(_QWORD *a1))(_QWORD *a1, uint64_t a2)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t KeyPath;
  uint64_t v6;
  uint64_t v7;

  v2 = v1;
  v4 = malloc(0x40uLL);
  *a1 = v4;
  v4[4] = v2;
  KeyPath = swift_getKeyPath(&unk_100719D98);
  v4[5] = OBJC_IVAR____TtC5Books17REActionMenuState___observationRegistrar;
  *v4 = v2;
  v6 = sub_100008DB0(&qword_1009D3B60, type metadata accessor for REActionMenuState, (uint64_t)&protocol conformance descriptor for REActionMenuState);
  v4[6] = v6;
  ObservationRegistrar.access<A, B>(_:keyPath:)(v4, KeyPath, v6);
  swift_release(KeyPath);
  *v4 = v2;
  v7 = swift_getKeyPath(&unk_100719D98);
  ObservationRegistrar.willSet<A, B>(_:keyPath:)(v4, v7, v6);
  swift_release(v7);
  v4[7] = sub_10030110C((uint64_t)v4);
  return sub_100301524;
}

void sub_100301524(_QWORD *a1, uint64_t a2)
{
  sub_100302FCC(a1, a2, (uint64_t)&unk_100719D98);
}

double sub_100301530@<D0>(uint64_t *a1@<X0>, double *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  double result;
  uint64_t v7;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_100719DC0);
  v7 = v3;
  v5 = sub_100008DB0(&qword_1009D3B60, type metadata accessor for REActionMenuState, (uint64_t)&protocol conformance descriptor for REActionMenuState);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v7, KeyPath, v5);
  swift_release(KeyPath);
  result = *(double *)(v3 + 304);
  *a2 = result;
  return result;
}

void sub_1003015BC(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  _QWORD v6[5];
  uint64_t v7;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_100719DC0);
  v6[2] = v3;
  v6[3] = v2;
  v7 = v3;
  v5 = sub_100008DB0(&qword_1009D3B60, type metadata accessor for REActionMenuState, (uint64_t)&protocol conformance descriptor for REActionMenuState);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v7, KeyPath, sub_10030A92C, v6, (char *)&type metadata for () + 8, v5);
  swift_release(KeyPath);
}

double REActionMenuState.scrubberDelta.getter()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_100719DC0);
  v4 = v0;
  v2 = sub_100008DB0(&qword_1009D3B60, type metadata accessor for REActionMenuState, (uint64_t)&protocol conformance descriptor for REActionMenuState);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v4, KeyPath, v2);
  swift_release(KeyPath);
  return *(double *)(v0 + 304);
}

double sub_1003016F8@<D0>(uint64_t *a1@<X0>, double *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  double result;
  uint64_t v7;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_100719DE8);
  v7 = v3;
  v5 = sub_100008DB0(&qword_1009D3B60, type metadata accessor for REActionMenuState, (uint64_t)&protocol conformance descriptor for REActionMenuState);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v7, KeyPath, v5);
  swift_release(KeyPath);
  result = *(double *)(v3 + 312);
  *a2 = result;
  return result;
}

void sub_100301784(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  _QWORD v6[5];
  uint64_t v7;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_100719DE8);
  v6[2] = v3;
  v6[3] = v2;
  v7 = v3;
  v5 = sub_100008DB0(&qword_1009D3B60, type metadata accessor for REActionMenuState, (uint64_t)&protocol conformance descriptor for REActionMenuState);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v7, KeyPath, sub_10030A940, v6, (char *)&type metadata for () + 8, v5);
  swift_release(KeyPath);
}

double REActionMenuState.lastScrubberDelta.getter()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_100719DE8);
  v4 = v0;
  v2 = sub_100008DB0(&qword_1009D3B60, type metadata accessor for REActionMenuState, (uint64_t)&protocol conformance descriptor for REActionMenuState);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v4, KeyPath, v2);
  swift_release(KeyPath);
  return *(double *)(v0 + 312);
}

void sub_1003018C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t KeyPath;
  uint64_t v10;
  uint64_t v11;
  _QWORD v12[3];

  if (qword_1009CDE60 != -1)
    swift_once(&qword_1009CDE60, sub_1002FC71C);
  v1 = type metadata accessor for Logger(0);
  sub_100048F64(v1, (uint64_t)qword_1009D9468);
  v2 = swift_retain_n(v0, 2);
  v3 = Logger.logObject.getter(v2);
  v7 = static os_log_type_t.debug.getter(v3, v4, v5, v6);
  if (os_log_type_enabled(v3, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc(12, -1);
    *(_DWORD *)v8 = 134217984;
    KeyPath = swift_getKeyPath(&unk_100719E10);
    v12[0] = v0;
    v10 = sub_100008DB0(&qword_1009D3B60, type metadata accessor for REActionMenuState, (uint64_t)&protocol conformance descriptor for REActionMenuState);
    ObservationRegistrar.access<A, B>(_:keyPath:)(v12, KeyPath, v10);
    swift_release(KeyPath);
    swift_beginAccess(v0 + 320, v12, 0, 0);
    v11 = *(_QWORD *)(v0 + 320);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v11, v12, v8 + 4, v8 + 12);
    swift_release_n(v0, 2);
    _os_log_impl((void *)&_mh_execute_header, v3, v7, "Scrubber position set to %f", v8, 0xCu);
    swift_slowDealloc(v8, -1, -1);

  }
  else
  {

    swift_release_n(v0, 2);
  }
}

uint64_t (*sub_100301A70(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess(v1 + 320, a1, 33, 0);
  return sub_100301AB0;
}

uint64_t sub_100301AB0(uint64_t a1, char a2)
{
  return sub_100301ABC(a1, a2, (uint64_t (*)(uint64_t))sub_1003018C0);
}

uint64_t sub_100301ABC(uint64_t a1, char a2, uint64_t (*a3)(uint64_t))
{
  uint64_t result;

  result = swift_endAccess(a1);
  if ((a2 & 1) == 0)
    return a3(result);
  return result;
}

double REActionMenuState.scrubberPosition.getter()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  _QWORD v4[3];

  KeyPath = swift_getKeyPath(&unk_100719E10);
  v4[0] = v0;
  v2 = sub_100008DB0(&qword_1009D3B60, type metadata accessor for REActionMenuState, (uint64_t)&protocol conformance descriptor for REActionMenuState);
  ObservationRegistrar.access<A, B>(_:keyPath:)(v4, KeyPath, v2);
  swift_release(KeyPath);
  swift_beginAccess(v0 + 320, v4, 0, 0);
  return *(double *)(v0 + 320);
}

double sub_100301B90@<D0>(uint64_t *a1@<X0>, double *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  double result;
  _QWORD v7[3];

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_100719E10);
  v7[0] = v3;
  v5 = sub_100008DB0(&qword_1009D3B60, type metadata accessor for REActionMenuState, (uint64_t)&protocol conformance descriptor for REActionMenuState);
  ObservationRegistrar.access<A, B>(_:keyPath:)(v7, KeyPath, v5);
  swift_release(KeyPath);
  swift_beginAccess(v3 + 320, v7, 0, 0);
  result = *(double *)(v3 + 320);
  *a2 = result;
  return result;
}

void sub_100301C34(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  _QWORD v6[5];
  uint64_t v7;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_100719E10);
  v6[2] = v3;
  v6[3] = v2;
  v7 = v3;
  v5 = sub_100008DB0(&qword_1009D3B60, type metadata accessor for REActionMenuState, (uint64_t)&protocol conformance descriptor for REActionMenuState);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v7, KeyPath, sub_100301D98, v6, (char *)&type metadata for () + 8, v5);
  swift_release(KeyPath);
}

void REActionMenuState.scrubberPosition.setter(double a1)
{
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  uint64_t v8;

  KeyPath = swift_getKeyPath(&unk_100719E10);
  v6 = v1;
  v7 = a1;
  v8 = v1;
  v4 = sub_100008DB0(&qword_1009D3B60, type metadata accessor for REActionMenuState, (uint64_t)&protocol conformance descriptor for REActionMenuState);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v8, KeyPath, sub_100301D98, &v5, (char *)&type metadata for () + 8, v4);
  swift_release(KeyPath);
}

void sub_100301D98()
{
  sub_10030A814();
}

void (*REActionMenuState.scrubberPosition.modify(_QWORD *a1))(_QWORD *a1, uint64_t a2)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t KeyPath;
  uint64_t v6;
  uint64_t v7;

  v2 = v1;
  v4 = malloc(0x40uLL);
  *a1 = v4;
  v4[4] = v2;
  KeyPath = swift_getKeyPath(&unk_100719E10);
  v4[5] = OBJC_IVAR____TtC5Books17REActionMenuState___observationRegistrar;
  *v4 = v2;
  v6 = sub_100008DB0(&qword_1009D3B60, type metadata accessor for REActionMenuState, (uint64_t)&protocol conformance descriptor for REActionMenuState);
  v4[6] = v6;
  ObservationRegistrar.access<A, B>(_:keyPath:)(v4, KeyPath, v6);
  swift_release(KeyPath);
  *v4 = v2;
  v7 = swift_getKeyPath(&unk_100719E10);
  ObservationRegistrar.willSet<A, B>(_:keyPath:)(v4, v7, v6);
  swift_release(v7);
  v4[7] = sub_100301A70((uint64_t)v4);
  return sub_100301E94;
}

void sub_100301E94(_QWORD *a1, uint64_t a2)
{
  sub_100302FCC(a1, a2, (uint64_t)&unk_100719E10);
}

void sub_100301EA0(unint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v4;
  _BOOL4 v5;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  uint64_t KeyPath;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  NSObject *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  os_log_type_t v25;
  int v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _BYTE v42[16];
  uint64_t v43;
  uint64_t v44;
  char v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50[16];
  uint64_t v51;
  BOOL v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;

  v2 = v1;
  v4 = a1 >> 62;
  v5 = (a1 & 0xFFFFFFFFFFFFFFF7) == 0x8000000000000010 && a1 >> 62 == 2;
  v6 = (_DWORD)v4 == 2;
  v7 = v4 < 2;
  if (v6)
    v8 = (a1 & 0xFFFFFFFFFFFFFFF7) == 0x8000000000000010;
  else
    v8 = v7;
  KeyPath = swift_getKeyPath(&unk_100719E80);
  v10 = v1 + OBJC_IVAR____TtC5Books17REActionMenuState___observationRegistrar;
  v55 = v2;
  v11 = sub_100008DB0(&qword_1009D3B60, type metadata accessor for REActionMenuState, (uint64_t)&protocol conformance descriptor for REActionMenuState);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v55, KeyPath, v11);
  swift_release(KeyPath);
  v12 = *(_QWORD *)(v2 + 328) & 0xFFFFFFFFFFFFFFF7;
  v13 = swift_getKeyPath(&unk_100719EA8);
  v51 = v2;
  v52 = v8;
  v55 = v2;
  v48 = v11;
  v49 = v10;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v55, v13, sub_100309A78, v50, (char *)&type metadata for () + 8, v11);
  swift_release(v13);
  if (v12 == 0x8000000000000010)
  {
    if (v5)
      goto LABEL_13;
    v14 = swift_getKeyPath(&unk_100719CF8);
    __chkstk_darwin(v14);
    v43 = v2;
    v44 = 0;
    v45 = 2;
    v55 = v2;
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v55, v14, sub_10030A918, v42, (char *)&type metadata for () + 8, v48);
    v15 = v14;
  }
  else
  {
    if (!v5)
      goto LABEL_13;
    v16 = REActionMenuState.makeChapterScrubbingState()();
    swift_release(v17);
    v18 = swift_getKeyPath(&unk_100719CF8);
    __chkstk_darwin(v18);
    v43 = v2;
    v44 = v16;
    v45 = 1;
    v55 = v2;
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v55, v18, sub_10030A918, v42, (char *)&type metadata for () + 8, v48);
    sub_100309A54(v16, 1);
    v15 = v18;
  }
  swift_release(v15);
LABEL_13:
  if (qword_1009CDE60 != -1)
    swift_once(&qword_1009CDE60, sub_1002FC71C);
  v19 = type metadata accessor for Logger(0);
  sub_100048F64(v19, (uint64_t)qword_1009D9468);
  swift_retain_n(v2, 3);
  sub_10028C678(a1);
  swift_retain(v2);
  v20 = sub_10028C678(a1);
  v21 = Logger.logObject.getter(v20);
  v25 = static os_log_type_t.debug.getter(v21, v22, v23, v24);
  v26 = v25;
  if (os_log_type_enabled(v21, v25))
  {
    v27 = swift_slowAlloc(32, -1);
    v47 = swift_slowAlloc(96, -1);
    v55 = v47;
    *(_DWORD *)v27 = 136315650;
    v46 = v26;
    sub_10028C678(a1);
    v28 = ActionMenuState.description.getter(a1);
    v30 = v29;
    sub_10028C694(a1);
    v53 = sub_100040F58(v28, v30, &v55);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v53, &v54, v27 + 4, v27 + 12);
    swift_bridgeObjectRelease(v30);
    sub_10028C694(a1);
    sub_10028C694(a1);
    *(_WORD *)(v27 + 12) = 2080;
    v31 = swift_getKeyPath(&unk_100719CF8);
    v53 = v2;
    v32 = v48;
    ObservationRegistrar.access<A, B>(_:keyPath:)(&v53, v31, v48);
    swift_release(v31);
    v33 = *(_QWORD *)(v2 + 272);
    LOBYTE(v31) = *(_BYTE *)(v2 + 280);
    sub_100300604(v33, v31);
    v34 = ScrubberState.description.getter(v33, v31);
    v36 = v35;
    sub_100309A54(v33, v31);
    v53 = sub_100040F58(v34, v36, &v55);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v53, &v54, v27 + 14, v27 + 22);
    swift_release_n(v2, 2);
    swift_bridgeObjectRelease(v36);
    *(_WORD *)(v27 + 22) = 2080;
    v37 = swift_getKeyPath(&unk_100719CA8);
    v53 = v2;
    ObservationRegistrar.access<A, B>(_:keyPath:)(&v53, v37, v32);
    swift_release(v37);
    BookMovementState.description.getter(*(_QWORD *)(v2 + 232), *(_QWORD *)(v2 + 240), *(_BYTE *)(v2 + 248));
    v39 = v38;
    v53 = sub_100040F58(v40, v38, &v55);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v53, &v54, v27 + 24, v27 + 32);
    swift_release_n(v2, 2);
    swift_bridgeObjectRelease(v39);
    _os_log_impl((void *)&_mh_execute_header, v21, (os_log_type_t)v46, "moving to state %s with scrubber state %s and movementState %s", (uint8_t *)v27, 0x20u);
    v41 = v47;
    swift_arrayDestroy(v47, 3, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v41, -1, -1);
    swift_slowDealloc(v27, -1, -1);

  }
  else
  {
    sub_10028C694(a1);
    sub_10028C694(a1);

    swift_release_n(v2, 4);
  }
}

uint64_t REActionMenuState.makeChapterScrubbingState()()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD v29[5];
  uint64_t v30;
  char v31;
  uint64_t v32;

  v1 = v0;
  v2 = sub_100303FDC();
  v3 = *(_QWORD *)(v0 + 128);
  KeyPath = swift_getKeyPath(&unk_100719E38);
  v5 = swift_getKeyPath(&unk_100719E60);
  v6 = swift_retain(v3);
  static Published.subscript.getter(&v30, v6, KeyPath, v5);
  swift_release(v3);
  swift_release(KeyPath);
  swift_release(v5);
  v7 = v30;
  v8 = v31;
  if (v31 == 1)
  {
    v9 = swift_retain(v30);
    sub_1003041DC(v9, v2);
    swift_bridgeObjectRelease(v2);
  }
  else
  {
    sub_10002E418(v1 + 80, (uint64_t)&v30);
    v10 = *(_QWORD *)(v1 + 128);
    swift_retain(v1);
    v11 = swift_retain(v10);
    v12 = (void *)dispatch thunk of PlatformViewProvider.view.getter(v11);
    if (!v12
      || (v13 = v12,
          v14 = objc_msgSend(v12, "snapshotViewAfterScreenUpdates:", 0),
          v13,
          !v14))
    {
      v14 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
    }
    swift_release(v10);
    v15 = sub_100063750((uint64_t)&v30, v32);
    __chkstk_darwin(v15);
    v17 = (_QWORD *)((char *)v29 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v18 + 16))(v17);
    v19 = *v17;
    v20 = type metadata accessor for BookActionMenuDataSource();
    v29[3] = v20;
    v29[4] = &off_1008FF818;
    v29[0] = v19;
    v21 = type metadata accessor for ChapterScrubbingState(0);
    v22 = swift_allocObject(v21, *(unsigned int *)(v21 + 48), *(unsigned __int16 *)(v21 + 52));
    v23 = sub_100063750((uint64_t)v29, v20);
    __chkstk_darwin(v23);
    v25 = (_QWORD *)((char *)v29 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v26 + 16))(v25);
    v27 = sub_100309878(*v25, v1, (uint64_t)v2, (uint64_t)v14, v22);
    _s5Books15CurrentPageViewVwxx_0(v29);
    _s5Books15CurrentPageViewVwxx_0(&v30);
    sub_100309A54(v7, v8);
    swift_retain(v27);
    return v27;
  }
  return v7;
}

uint64_t sub_100302630()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v3;
  unint64_t v4;
  char v5;
  uint64_t Strong;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t inited;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  id v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE v22[80];
  uint64_t v23;

  v1 = v0;
  KeyPath = swift_getKeyPath(&unk_100719E80);
  v23 = v0;
  v3 = sub_100008DB0(&qword_1009D3B60, type metadata accessor for REActionMenuState, (uint64_t)&protocol conformance descriptor for REActionMenuState);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v23, KeyPath, v3);
  swift_release(KeyPath);
  v4 = *(_QWORD *)(v0 + 328);
  sub_10028C678(v4);
  v5 = sub_1004EC35C(v4, (uint64_t)&off_1008F03B8);
  sub_10028C694(v4);
  swift_arrayDestroy(&unk_1008F03D8, 2, &type metadata for ActionMenuState);
  if ((v5 & 1) != 0)
  {
    Strong = swift_unknownObjectWeakLoadStrong(v1 + 160);
    if (Strong)
    {
      v7 = (char *)Strong;
      v8 = swift_getKeyPath(&unk_100719E80);
      v23 = v1;
      ObservationRegistrar.access<A, B>(_:keyPath:)(&v23, v8, v3);
      swift_release(v8);
      v9 = *(_QWORD *)(v1 + 328);
      v10 = *(void **)&v7[OBJC_IVAR___BKEngagementManager_eventController];
      v11 = sub_10004CFD4((uint64_t *)&unk_1009D30D0);
      inited = swift_initStackObject(v11, v22);
      v13 = inited;
      *(_OWORD *)(inited + 16) = xmmword_10070CCA0;
      *(_QWORD *)(inited + 32) = 0x6E6F69746341;
      *(_QWORD *)(inited + 40) = 0xE600000000000000;
      v14 = 1852141679;
      if (v9 != 0x8000000000000008)
        v14 = 0x65736F6C63;
      *(_QWORD *)(inited + 72) = &type metadata for String;
      v15 = 0xE400000000000000;
      if (v9 != 0x8000000000000008)
        v15 = 0xE500000000000000;
      *(_QWORD *)(inited + 48) = v14;
      *(_QWORD *)(inited + 56) = v15;
      v16 = v10;
      v17 = sub_10003FB0C(v13);
      dispatch thunk of EngagementEventController.submitEvent(_:_:)(0xD000000000000016, 0x80000001007BE460, v17);

      swift_bridgeObjectRelease(v17);
    }
  }
  v18 = swift_getKeyPath(&unk_100719CA8);
  v23 = v1;
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v23, v18, v3);
  swift_release(v18);
  if (*(unsigned __int8 *)(v1 + 248) <= 0xBFu)
  {
    v20 = swift_getKeyPath(&unk_100719CA8);
    v23 = v1;
    ObservationRegistrar.access<A, B>(_:keyPath:)(&v23, v20, v3);
    swift_release(v20);
    __asm { BR              X12 }
  }
  v19 = swift_getKeyPath(&unk_100719E80);
  v23 = v1;
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v23, v19, v3);
  swift_release(v19);
  LOBYTE(v23) = *(_QWORD *)(v1 + 328) == 0x8000000000000000;
  return CurrentValueSubject.value.setter(&v23);
}

unint64_t REActionMenuState.state.getter()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  unint64_t v3;
  uint64_t v5;

  KeyPath = swift_getKeyPath(&unk_100719E80);
  v5 = v0;
  v2 = sub_100008DB0(&qword_1009D3B60, type metadata accessor for REActionMenuState, (uint64_t)&protocol conformance descriptor for REActionMenuState);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v5, KeyPath, v2);
  swift_release(KeyPath);
  v3 = *(_QWORD *)(v0 + 328);
  sub_10028C678(v3);
  return v3;
}

unint64_t sub_1003029A0(uint64_t a1, unint64_t a2)
{
  unint64_t v4;

  sub_10028C678(a2);
  sub_100301EA0(a2);
  v4 = *(_QWORD *)(a1 + 328);
  *(_QWORD *)(a1 + 328) = a2;
  sub_10028C678(a2);
  sub_10028C694(v4);
  sub_100302630();
  return sub_10028C694(a2);
}

double REActionMenuState.isScrubbing.setter(char a1)
{
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v4;
  double result;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;

  KeyPath = swift_getKeyPath(&unk_100719EA8);
  v7 = v1;
  v8 = a1;
  v9 = v1;
  v4 = sub_100008DB0(&qword_1009D3B60, type metadata accessor for REActionMenuState, (uint64_t)&protocol conformance descriptor for REActionMenuState);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v9, KeyPath, sub_100309A78, &v6, (char *)&type metadata for () + 8, v4);
  *(_QWORD *)&result = swift_release(KeyPath).n128_u64[0];
  return result;
}

uint64_t sub_100302AAC(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  char v6;
  char v7;
  uint64_t v9;
  char v10[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v10, 0, 0);
  Strong = swift_weakLoadStrong(v1);
  if (Strong)
  {
    v3 = Strong;
    KeyPath = swift_getKeyPath(&unk_100719D20);
    v9 = v3;
    v5 = sub_100008DB0(&qword_1009D3B60, type metadata accessor for REActionMenuState, (uint64_t)&protocol conformance descriptor for REActionMenuState);
    ObservationRegistrar.access<A, B>(_:keyPath:)(&v9, KeyPath, v5);
    swift_release(KeyPath);
    v6 = *(_BYTE *)(v3 + 281);
    swift_release(v3);
    v7 = v6 ^ 1;
  }
  else
  {
    v7 = 0;
  }
  return v7 & 1;
}

uint64_t REActionMenuState.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE v7[24];

  swift_beginAccess(v0 + 336, v7, 1, 0);
  v1 = *(_QWORD *)(v0 + 336);
  swift_bridgeObjectRetain(v1);
  sub_1002FBE64(v2);
  swift_bridgeObjectRelease(v1);
  v3 = *(_QWORD *)(v0 + 336);
  *(_QWORD *)(v0 + 336) = &_swiftEmptySetSingleton;
  swift_bridgeObjectRelease(v3);
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  sub_1001FE9A0(v0 + 32);
  sub_1001FE9A0(v0 + 48);
  sub_1001FE9A0(v0 + 64);
  _s5Books15CurrentPageViewVwxx_0((_QWORD *)(v0 + 80));
  swift_release(*(_QWORD *)(v0 + 120));
  swift_release(*(_QWORD *)(v0 + 128));

  swift_release(*(_QWORD *)(v0 + 152));
  swift_unknownObjectWeakDestroy(v0 + 160);
  sub_1001FE9A0(v0 + 176);

  swift_release(*(_QWORD *)(v0 + 200));
  swift_release(*(_QWORD *)(v0 + 208));
  sub_100309A54(*(_QWORD *)(v0 + 272), *(_BYTE *)(v0 + 280));
  swift_release(*(_QWORD *)(v0 + 288));
  sub_10028C694(*(_QWORD *)(v0 + 328));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 336));
  v4 = v0 + OBJC_IVAR____TtC5Books17REActionMenuState___observationRegistrar;
  v5 = type metadata accessor for ObservationRegistrar(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  return v0;
}

uint64_t REActionMenuState.__deallocating_deinit()
{
  uint64_t v0;

  REActionMenuState.deinit();
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t (*sub_100302CBC(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + 352, a1, 33, 0);
  return j_j__swift_endAccess;
}

uint64_t REActionMenuState.isScrubbing.getter()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  _QWORD v4[3];

  KeyPath = swift_getKeyPath(&unk_100719EA8);
  v4[0] = v0;
  v2 = sub_100008DB0(&qword_1009D3B60, type metadata accessor for REActionMenuState, (uint64_t)&protocol conformance descriptor for REActionMenuState);
  ObservationRegistrar.access<A, B>(_:keyPath:)(v4, KeyPath, v2);
  swift_release(KeyPath);
  swift_beginAccess(v0 + 352, v4, 0, 0);
  return *(unsigned __int8 *)(v0 + 352);
}

void sub_100302D90(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  _QWORD v6[3];

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_100719EA8);
  v6[0] = v3;
  v5 = sub_100008DB0(&qword_1009D3B60, type metadata accessor for REActionMenuState, (uint64_t)&protocol conformance descriptor for REActionMenuState);
  ObservationRegistrar.access<A, B>(_:keyPath:)(v6, KeyPath, v5);
  swift_release(KeyPath);
  swift_beginAccess(v3 + 352, v6, 0, 0);
  *a2 = *(_BYTE *)(v3 + 352);
}

double sub_100302E30(char *a1, uint64_t *a2)
{
  char v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  double result;
  _QWORD v7[3];
  char v8;
  uint64_t v9;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_100719EA8);
  v7[2] = v3;
  v8 = v2;
  v9 = v3;
  v5 = sub_100008DB0(&qword_1009D3B60, type metadata accessor for REActionMenuState, (uint64_t)&protocol conformance descriptor for REActionMenuState);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v9, KeyPath, sub_100309A78, v7, (char *)&type metadata for () + 8, v5);
  *(_QWORD *)&result = swift_release(KeyPath).n128_u64[0];
  return result;
}

void (*REActionMenuState.isScrubbing.modify(_QWORD *a1))(_QWORD *a1, uint64_t a2)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t KeyPath;
  uint64_t v6;
  uint64_t v7;

  v2 = v1;
  v4 = malloc(0x40uLL);
  *a1 = v4;
  v4[4] = v2;
  KeyPath = swift_getKeyPath(&unk_100719EA8);
  v4[5] = OBJC_IVAR____TtC5Books17REActionMenuState___observationRegistrar;
  *v4 = v2;
  v6 = sub_100008DB0(&qword_1009D3B60, type metadata accessor for REActionMenuState, (uint64_t)&protocol conformance descriptor for REActionMenuState);
  v4[6] = v6;
  ObservationRegistrar.access<A, B>(_:keyPath:)(v4, KeyPath, v6);
  swift_release(KeyPath);
  *v4 = v2;
  v7 = swift_getKeyPath(&unk_100719EA8);
  ObservationRegistrar.willSet<A, B>(_:keyPath:)(v4, v7, v6);
  swift_release(v7);
  v4[7] = sub_100302CBC((uint64_t)v4);
  return sub_100302FC0;
}

void sub_100302FC0(_QWORD *a1, uint64_t a2)
{
  sub_100302FCC(a1, a2, (uint64_t)&unk_100719EA8);
}

void sub_100302FCC(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t KeyPath;

  v4 = (_QWORD *)*a1;
  (*(void (**)(_QWORD, _QWORD))(*a1 + 56))(*a1, 0);
  v5 = v4[6];
  *v4 = v4[4];
  KeyPath = swift_getKeyPath(a3);
  ObservationRegistrar.didSet<A, B>(_:keyPath:)(v4, KeyPath, v5);
  swift_release(KeyPath);
  free(v4);
}

Swift::Bool __swiftcall REActionMenuState.isPageScrubbing()()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_100719CF8);
  v4 = v0;
  v2 = sub_100008DB0(&qword_1009D3B60, type metadata accessor for REActionMenuState, (uint64_t)&protocol conformance descriptor for REActionMenuState);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v4, KeyPath, v2);
  swift_release(KeyPath);
  return *(_BYTE *)(v0 + 280) == 0;
}

void REActionMenuState.chapterScrubbingState.getter()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  KeyPath = swift_getKeyPath(&unk_100719CF8);
  v7 = v0;
  v2 = sub_100008DB0(&qword_1009D3B60, type metadata accessor for REActionMenuState, (uint64_t)&protocol conformance descriptor for REActionMenuState);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v7, KeyPath, v2);
  swift_release(KeyPath);
  if (*(_BYTE *)(v0 + 280) == 1)
  {
    v3 = *(_QWORD *)(v0 + 272);
  }
  else
  {
    v4 = swift_getKeyPath(&unk_100719E80);
    v7 = v0;
    ObservationRegistrar.access<A, B>(_:keyPath:)(&v7, v4, v2);
    swift_release(v4);
    v3 = *(_QWORD *)(v0 + 328);
    if (v3 >> 62)
    {
      v5 = swift_getKeyPath(&unk_100719E80);
      v7 = v0;
      ObservationRegistrar.access<A, B>(_:keyPath:)(&v7, v5, v2);
      swift_release(v5);
      v6 = *(_QWORD *)(v0 + 328);
      if (v6 >> 62 != 1)
        return;
      v3 = v6 & 0x3FFFFFFFFFFFFFFFLL;
    }
  }
  swift_retain(v3);
}

uint64_t sub_1003031E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v3;
  Swift::Int v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v10[3];

  v1 = v0;
  KeyPath = swift_getKeyPath(&unk_100719C58);
  v10[0] = v0;
  v3 = sub_100008DB0(&qword_1009D3B60, type metadata accessor for REActionMenuState, (uint64_t)&protocol conformance descriptor for REActionMenuState);
  ObservationRegistrar.access<A, B>(_:keyPath:)(v10, KeyPath, v3);
  swift_release(KeyPath);
  swift_beginAccess(v0 + 216, v10, 0, 0);
  v4 = *(_QWORD *)(v0 + 216);
  v5 = _s5Books17REActionMenuStateC9pageCountSivpfi_0();
  result = 0;
  if (v4 != v5)
  {
    v7 = swift_getKeyPath(&unk_100719CD0);
    v9 = v0;
    ObservationRegistrar.access<A, B>(_:keyPath:)(&v9, v7, v3);
    swift_release(v7);
    v8 = *(_QWORD *)(v0 + 256);
    if (v8 == _s5Books17REActionMenuStateC9pageCountSivpfi_0())
    {
      return 0;
    }
    else
    {
      sub_10003F198((_QWORD *)(v1 + 80), *(_QWORD *)(v1 + 104));
      return BookActionMenuDataSource.pagesRemainingInChapterString(afterPage:)(v4).value._countAndFlagsBits;
    }
  }
  return result;
}

void REActionMenuState.transition(to:)(unint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  int v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t ObjectType;
  _BYTE v36[16];
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v2 = v1;
  KeyPath = swift_getKeyPath(&unk_100719E80);
  v5 = v1 + OBJC_IVAR____TtC5Books17REActionMenuState___observationRegistrar;
  v46 = v1;
  v6 = sub_100008DB0(&qword_1009D3B60, type metadata accessor for REActionMenuState, (uint64_t)&protocol conformance descriptor for REActionMenuState);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v46, KeyPath, v6);
  swift_release(KeyPath);
  v7 = *(_QWORD *)(v1 + 328);
  if (v7 >> 62)
  {
    if (v7 >> 62 != 1)
      __asm { BR              X10 }
    if (a1 >> 62 == 1)
    {
      sub_10028C678(*(_QWORD *)(v2 + 328));
      sub_10028C678(a1);
      v8 = v7 & 0x3FFFFFFFFFFFFFFFLL;
      v9 = a1 & 0x3FFFFFFFFFFFFFFFLL;
      goto LABEL_7;
    }
  }
  else if (!(a1 >> 62))
  {
    sub_10028C678(*(_QWORD *)(v2 + 328));
    sub_10028C678(a1);
    v8 = v7;
    v9 = a1;
LABEL_7:
    v10 = _s5Books21ChapterScrubbingStateC2eeoiySbAC_ACtFZ_0(v8, v9);
    sub_10028C694(a1);
    sub_10028C694(v7);
    if ((v10 & 1) != 0)
      return;
    goto LABEL_11;
  }
  if ((a1 & 0x8000000000000000) == 0)
  {
LABEL_11:
    v11 = 0;
    goto LABEL_12;
  }
  if ((__ROR8__(a1, 3) ^ 0x1000000000000000uLL) >= 4)
  {
    v31 = swift_getKeyPath(&unk_100719CA8);
    __chkstk_darwin(v31);
    v38 = 0;
    v39 = 0;
    v37 = v2;
    LOBYTE(v40) = -64;
    v46 = v2;
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v46, v31, sub_1002FF878, v36, (char *)&type metadata for () + 8, v6);
    swift_release(v31);
    v32 = swift_getKeyPath(&unk_100719CF8);
    __chkstk_darwin(v32);
    v37 = v2;
    v38 = 0;
    LOBYTE(v39) = 2;
    v46 = v2;
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v46, v32, sub_100309A8C, v36, (char *)&type metadata for () + 8, v6);
    swift_release(v32);
    v33 = swift_getKeyPath(&unk_100719DC0);
    __chkstk_darwin(v33);
    v39 = v2;
    v40 = 0;
    v46 = v2;
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v46, v33, sub_100309AA8, &v37, (char *)&type metadata for () + 8, v6);
    swift_release(v33);
    v34 = *(_QWORD *)(v2 + 24);
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(v34 + 24))(ObjectType, v34);
    return;
  }
  v11 = 1;
LABEL_12:
  v12 = swift_getKeyPath(&unk_100719CA8);
  v46 = v2;
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v46, v12, v6);
  swift_release(v12);
  if (a1 == 0x8000000000000000 && *(unsigned __int8 *)(v2 + 248) <= 0xBFu)
  {
    v13 = *(_QWORD *)(v2 + 240);
    v14 = swift_getKeyPath(&unk_100719E80);
    v46 = v2;
    ObservationRegistrar.access<A, B>(_:keyPath:)(&v46, v14, v6);
    swift_release(v14);
    if ((*(_QWORD *)(v2 + 328) & 0x8000000000000000) == 0)
    {
      v15 = swift_getKeyPath(&unk_100719CA8);
      v43 = v13;
      __chkstk_darwin(v15);
      v38 = 0;
      v39 = 0;
      v37 = v2;
      LOBYTE(v40) = -64;
      v46 = v2;
      ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v46, v15, sub_1002FF878, v36, (char *)&type metadata for () + 8, v6);
      swift_release(v15);
      v16 = swift_getKeyPath(&unk_100719C58);
      __chkstk_darwin(v16);
      v39 = v2;
      v40 = v43;
      v46 = v2;
      ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v46, v16, sub_1002FEE08, &v37, (char *)&type metadata for () + 8, v6);
      swift_release(v16);
    }
  }
  v17 = swift_getKeyPath(&unk_100719E80);
  __chkstk_darwin(v17);
  v39 = v2;
  v40 = a1;
  v46 = v2;
  sub_10028C678(a1);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v46, v17, sub_10028C878, &v37, (char *)&type metadata for () + 8, v6);
  sub_10028C694(a1);
  swift_release(v17);
  if (v11)
    __asm { BR              X10 }
  if (qword_1009CDE60 != -1)
    swift_once(&qword_1009CDE60, sub_1002FC71C);
  v18 = type metadata accessor for Logger(0);
  sub_100048F64(v18, (uint64_t)qword_1009D9468);
  sub_10028C678(a1);
  v19 = sub_10028C678(a1);
  v20 = Logger.logObject.getter(v19);
  v21 = static os_log_type_t.error.getter(v20);
  if (os_log_type_enabled(v20, v21))
  {
    v22 = (uint8_t *)swift_slowAlloc(12, -1);
    v23 = swift_slowAlloc(32, -1);
    v42 = v6;
    v24 = v23;
    v46 = v23;
    v43 = v5;
    *(_DWORD *)v22 = 136315138;
    v41 = 0;
    sub_10028C678(a1);
    v25 = ActionMenuState.description.getter(a1);
    v27 = v26;
    sub_10028C694(a1);
    v44 = sub_100040F58(v25, v27, &v46);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v44, &v45, v22 + 4, v22 + 12);
    swift_bridgeObjectRelease(v27);
    sub_10028C694(a1);
    sub_10028C694(a1);
    _os_log_impl((void *)&_mh_execute_header, v20, v21, "Cannot transition directly to %s", v22, 0xCu);
    swift_arrayDestroy(v24, 1, (char *)&type metadata for Any + 8);
    v28 = v24;
    v6 = v42;
    swift_slowDealloc(v28, -1, -1);
    swift_slowDealloc(v22, -1, -1);
  }
  else
  {
    sub_10028C694(a1);
    sub_10028C694(a1);
  }

  v29 = swift_getKeyPath(&unk_100719CF8);
  __chkstk_darwin(v29);
  v37 = v2;
  v38 = 0;
  LOBYTE(v39) = 2;
  v46 = v2;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v46, v29, sub_10030A918, v36, (char *)&type metadata for () + 8, v6);
  swift_release(v29);
  v30 = swift_getKeyPath(&unk_100719DC0);
  __chkstk_darwin(v30);
  v39 = v2;
  v40 = 0;
  v46 = v2;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v46, v30, sub_10030A92C, &v37, (char *)&type metadata for () + 8, v6);
  swift_release(v30);
}

Swift::Int __swiftcall REActionMenuState.page(at:)(Swift::Double at)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;
  Swift::Int v7;
  uint64_t v8;
  uint64_t Strong;
  uint64_t v10;
  uint64_t v11;
  uint64_t ObjectType;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  os_log_type_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v30;
  uint64_t v31;

  v2 = v1;
  KeyPath = swift_getKeyPath(&unk_100719CD0);
  v31 = v1;
  v5 = sub_100008DB0(&qword_1009D3B60, type metadata accessor for REActionMenuState, (uint64_t)&protocol conformance descriptor for REActionMenuState);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v31, KeyPath, v5);
  swift_release(KeyPath);
  v6 = *(_QWORD *)(v1 + 256);
  if (v6 == _s5Books17REActionMenuStateC9pageCountSivpfi_0())
    return 1;
  v8 = *sub_10003F198((_QWORD *)(v2 + 80), *(_QWORD *)(v2 + 104));
  Strong = swift_unknownObjectWeakLoadStrong(v8 + 72);
  if (Strong)
  {
    v10 = Strong;
    v11 = *(_QWORD *)(v8 + 80);
    ObjectType = swift_getObjectType();
    v13 = dispatch thunk of Paginating.pageOffsetForBookProgress(_:)(ObjectType, v11, at);
    swift_unknownObjectRelease(v10);
    v14 = __OFADD__(v13, 1);
    v7 = v13 + 1;
    if (!v14)
      goto LABEL_8;
    __break(1u);
  }
  v7 = 0;
LABEL_8:
  if (qword_1009CDE60 != -1)
    swift_once(&qword_1009CDE60, sub_1002FC71C);
  v15 = type metadata accessor for Logger(0);
  v16 = sub_100048F64(v15, (uint64_t)qword_1009D9468);
  v17 = Logger.logObject.getter(v16);
  v21 = static os_log_type_t.debug.getter(v17, v18, v19, v20);
  if (os_log_type_enabled(v17, v21))
  {
    v22 = swift_slowAlloc(22, -1);
    v23 = swift_slowAlloc(32, -1);
    v31 = v23;
    *(_DWORD *)v22 = 136315394;
    v24 = sub_10004CFD4((uint64_t *)&unk_1009D1970);
    v25 = swift_allocObject(v24, 72, 7);
    *(_OWORD *)(v25 + 16) = xmmword_10070CCA0;
    *(_QWORD *)(v25 + 56) = &type metadata for Double;
    *(_QWORD *)(v25 + 64) = &protocol witness table for Double;
    *(Swift::Double *)(v25 + 32) = at;
    v26 = String.init(format:_:)(1714695717, 0xE400000000000000, v25);
    v28 = v27;
    v30 = sub_100040F58(v26, v27, &v31);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v30, &v31, v22 + 4, v22 + 12);
    swift_bridgeObjectRelease(v28);
    *(_WORD *)(v22 + 12) = 2048;
    v30 = v7;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v30, &v31, v22 + 14, v22 + 22);
    _os_log_impl((void *)&_mh_execute_header, v17, v21, "scrubbing value %s is page %ld", (uint8_t *)v22, 0x16u);
    swift_arrayDestroy(v23, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v23, -1, -1);
    swift_slowDealloc(v22, -1, -1);
  }

  return v7;
}

_QWORD *sub_100303FDC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v3;
  uint64_t *v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  unint64_t Strong;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t ObjectType;
  uint64_t v17;
  Swift::Bool v18;
  uint64_t v20;
  _QWORD v21[3];

  if (*(_BYTE *)(v0 + 168) != 1)
    return _swiftEmptyArrayStorage;
  v1 = v0;
  KeyPath = swift_getKeyPath(&unk_100719CA8);
  v21[0] = v0;
  v3 = sub_100008DB0(&qword_1009D3B60, type metadata accessor for REActionMenuState, (uint64_t)&protocol conformance descriptor for REActionMenuState);
  ObservationRegistrar.access<A, B>(_:keyPath:)(v21, KeyPath, v3);
  swift_release(KeyPath);
  v4 = (uint64_t *)(v0 + 240);
  v5 = sub_1004CE524(*(_QWORD *)(v1 + 232), *(_QWORD *)(v1 + 240), *(_BYTE *)(v1 + 248));
  v6 = swift_getKeyPath(&unk_100719C58);
  v21[0] = v0;
  ObservationRegistrar.access<A, B>(_:keyPath:)(v21, v6, v3);
  swift_release(v6);
  swift_beginAccess(v0 + 216, v21, 0, 0);
  v7 = *(_QWORD *)(v0 + 216);
  v8 = swift_getKeyPath(&unk_100719CA8);
  v20 = v0;
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v20, v8, v3);
  swift_release(v8);
  if (*(unsigned __int8 *)(v0 + 248) >= 0xC0u)
  {
    v9 = swift_getKeyPath(&unk_100719C58);
    v20 = v0;
    ObservationRegistrar.access<A, B>(_:keyPath:)(&v20, v9, v3);
    swift_release(v9);
    v4 = (uint64_t *)(v0 + 216);
  }
  v10 = *v4;
  v11 = sub_10003F198((_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 104));
  Strong = swift_weakLoadStrong(*v11 + 96);
  if (Strong)
  {
    v13 = dispatch thunk of BookContentLayoutController.contentLayoutProvider.getter();
    v15 = v14;
    ObjectType = swift_getObjectType();
    v17 = dispatch thunk of BookContentLayoutProviding.columnCount.getter(ObjectType, v15);
    swift_unknownObjectRelease(v13);
    swift_release(Strong);
    Strong = v17 == 2;
  }
  sub_10003F198((_QWORD *)(v1 + 80), *(_QWORD *)(v1 + 104));
  v18 = BookActionMenuDataSource.isRightToLeft()();
  return (_QWORD *)sub_10066A698(v7, v10, v5, Strong, v18);
}

void sub_1003041DC(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  BOOL v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  os_log_type_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  NSObject *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  os_log_type_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unsigned int v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t *v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  os_log_type_t type;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72[3];

  v3 = v2;
  KeyPath = swift_getKeyPath(&unk_10071A1C8);
  v7 = swift_getKeyPath(&unk_10071A1F0);
  static Published.subscript.getter(v72, a1, KeyPath, v7);
  swift_release(KeyPath);
  swift_release(v7);
  v8 = (_QWORD *)v72[0];
  if (a2)
    v9 = a2;
  else
    v9 = sub_100303FDC();
  v10 = sub_100430EFC(v9, v8);
  v11 = swift_getKeyPath(&unk_10071A1C8);
  v12 = swift_getKeyPath(&unk_10071A1F0);
  v72[0] = (uint64_t)v9;
  swift_bridgeObjectRetain(a2);
  swift_bridgeObjectRetain(v9);
  swift_retain(a1);
  static Published.subscript.setter(v72, a1, v11, v12);
  if (v10)
  {
    if (qword_1009CDE60 != -1)
      swift_once(&qword_1009CDE60, sub_1002FC71C);
    v13 = type metadata accessor for Logger(0);
    sub_100048F64(v13, (uint64_t)qword_1009D9468);
    swift_retain_n(v3, 4);
    swift_bridgeObjectRetain(v9);
    swift_bridgeObjectRetain(v8);
    v15 = Logger.logObject.getter(v14);
    v19 = static os_log_type_t.debug.getter(v15, v16, v17, v18);
    if (os_log_type_enabled(v15, v19))
    {
      v20 = swift_slowAlloc(42, -1);
      v69 = swift_slowAlloc(64, -1);
      v72[0] = v69;
      *(_DWORD *)v20 = 136315906;
      swift_bridgeObjectRetain(v8);
      v22 = Array.description.getter(v21, &type metadata for Int);
      v24 = v23;
      swift_bridgeObjectRelease(v8);
      v71 = sub_100040F58(v22, v24, v72);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v71, v72, v20 + 4, v20 + 12);
      swift_bridgeObjectRelease_n(v8, 2);
      swift_bridgeObjectRelease(v24);
      *(_WORD *)(v20 + 12) = 2048;
      v25 = swift_getKeyPath(&unk_100719CA8);
      v71 = v3;
      v26 = sub_100008DB0(&qword_1009D3B60, type metadata accessor for REActionMenuState, (uint64_t)&protocol conformance descriptor for REActionMenuState);
      ObservationRegistrar.access<A, B>(_:keyPath:)(&v71, v25, v26);
      swift_release(v25);
      v27 = *(_QWORD *)(v3 + 232);
      v28 = *(unsigned __int8 *)(v3 + 248);
      swift_release(v3);
      if (v28 > 0xBF)
        v29 = -1;
      else
        v29 = v27;
      v71 = v29;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v71, v72, v20 + 14, v20 + 22);
      swift_release(v3);
      *(_WORD *)(v20 + 22) = 2048;
      v30 = swift_getKeyPath(&unk_100719CA8);
      v71 = v3;
      ObservationRegistrar.access<A, B>(_:keyPath:)(&v71, v30, v26);
      swift_release(v30);
      v31 = *(_QWORD *)(v3 + 240);
      LODWORD(v30) = *(unsigned __int8 *)(v3 + 248);
      swift_release(v3);
      if (v30 > 0xBF)
        v32 = -1;
      else
        v32 = v31;
      v71 = v32;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v71, v72, v20 + 24, v20 + 32);
      swift_release(v3);
      *(_WORD *)(v20 + 32) = 2080;
      swift_bridgeObjectRetain(v9);
      v34 = Array.description.getter(v33, &type metadata for Int);
      v36 = v35;
      swift_bridgeObjectRelease(v9);
      v71 = sub_100040F58(v34, v36, v72);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v71, v72, v20 + 34, v20 + 42);
      swift_bridgeObjectRelease_n(v9, 2);
      swift_bridgeObjectRelease(v36);
      _os_log_impl((void *)&_mh_execute_header, v15, v19, "reusing indeces: %s. start %ld endPage: %ld rejected newIndeces: %s", (uint8_t *)v20, 0x2Au);
      swift_arrayDestroy(v69, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v69, -1, -1);
      swift_slowDealloc(v20, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n(v9, 2);
      swift_bridgeObjectRelease_n(v8, 2);
      swift_release_n(v3, 4);
    }
  }
  else
  {
    if (qword_1009CDE60 != -1)
      swift_once(&qword_1009CDE60, sub_1002FC71C);
    v37 = type metadata accessor for Logger(0);
    sub_100048F64(v37, (uint64_t)qword_1009D9468);
    swift_retain_n(v3, 4);
    swift_bridgeObjectRetain_n(v9, 2);
    swift_bridgeObjectRetain(v8);
    v39 = Logger.logObject.getter(v38);
    v43 = static os_log_type_t.debug.getter(v39, v40, v41, v42);
    if (os_log_type_enabled(v39, v43))
    {
      v44 = swift_slowAlloc(42, -1);
      v70 = swift_slowAlloc(64, -1);
      v72[0] = v70;
      *(_DWORD *)v44 = 136315906;
      type = v43;
      swift_bridgeObjectRetain(v8);
      v46 = Array.description.getter(v45, &type metadata for Int);
      v48 = v47;
      swift_bridgeObjectRelease(v8);
      v71 = sub_100040F58(v46, v48, v72);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v71, v72, v44 + 4, v44 + 12);
      swift_bridgeObjectRelease_n(v8, 2);
      swift_bridgeObjectRelease(v48);
      *(_WORD *)(v44 + 12) = 2048;
      v49 = swift_getKeyPath(&unk_100719CA8);
      v71 = v3;
      v50 = sub_100008DB0(&qword_1009D3B60, type metadata accessor for REActionMenuState, (uint64_t)&protocol conformance descriptor for REActionMenuState);
      ObservationRegistrar.access<A, B>(_:keyPath:)(&v71, v49, v50);
      swift_release(v49);
      v51 = *(_QWORD *)(v3 + 232);
      v52 = *(unsigned __int8 *)(v3 + 248);
      swift_release(v3);
      if (v52 > 0xBF)
        v53 = -1;
      else
        v53 = v51;
      v71 = v53;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v71, v72, v44 + 14, v44 + 22);
      swift_release(v3);
      *(_WORD *)(v44 + 22) = 2048;
      v54 = swift_getKeyPath(&unk_100719CA8);
      v71 = v3;
      ObservationRegistrar.access<A, B>(_:keyPath:)(&v71, v54, v50);
      swift_release(v54);
      v55 = *(_QWORD *)(v3 + 240);
      LODWORD(v54) = *(unsigned __int8 *)(v3 + 248);
      swift_release(v3);
      if (v54 > 0xBF)
        v56 = -1;
      else
        v56 = v55;
      v71 = v56;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v71, v72, v44 + 24, v44 + 32);
      swift_release(v3);
      *(_WORD *)(v44 + 32) = 2080;
      swift_bridgeObjectRetain(v9);
      v58 = Array.description.getter(v57, &type metadata for Int);
      v60 = v59;
      swift_bridgeObjectRelease(v9);
      v71 = sub_100040F58(v58, v60, v72);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v71, v72, v44 + 34, v44 + 42);
      swift_bridgeObjectRelease_n(v9, 2);
      swift_bridgeObjectRelease(v60);
      _os_log_impl((void *)&_mh_execute_header, v39, type, "replacing indeces was: %s). start %ld endPage: %ld new: %s", (uint8_t *)v44, 0x2Au);
      swift_arrayDestroy(v70, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v70, -1, -1);
      swift_slowDealloc(v44, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n(v9, 2);
      swift_bridgeObjectRelease_n(v8, 2);
      swift_release_n(v3, 4);
    }
    v61 = swift_getKeyPath(&unk_10071A1C8);
    v62 = swift_getKeyPath(&unk_10071A1F0);
    v72[0] = (uint64_t)v9;
    swift_bridgeObjectRetain(v9);
    swift_retain(a1);
    static Published.subscript.setter(v72, a1, v61, v62);
    v63 = (unint64_t *)(a1 + OBJC_IVAR____TtC5Books21ChapterScrubbingState_pageImageLoaders);
    swift_beginAccess(a1 + OBJC_IVAR____TtC5Books21ChapterScrubbingState_pageImageLoaders, v72, 1, 0);
    v64 = *v63;
    v65 = *sub_10003F198((_QWORD *)(v3 + 80), *(_QWORD *)(v3 + 104));
    swift_bridgeObjectRetain(v64);
    v66 = sub_100309748((uint64_t)v9, v64, v65);
    swift_bridgeObjectRelease(v9);
    swift_bridgeObjectRelease(v64);
    v67 = *v63;
    *v63 = v66;
    swift_bridgeObjectRelease(v67);
  }
}

uint64_t sub_1003049E4(uint64_t a1, int a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t KeyPath;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  double v18;
  uint64_t v19;
  uint64_t result;
  uint64_t v21;
  uint64_t v22;
  uint64_t ObjectType;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  double v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  int v59;
  char *v60;
  int v61;
  char *v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD aBlock[5];
  uint64_t v73;
  char v74[32];
  char v75[32];

  v3 = v2;
  v61 = a2;
  v5 = type metadata accessor for DispatchWorkItemFlags(0);
  v69 = *(_QWORD *)(v5 - 8);
  v70 = v5;
  __chkstk_darwin(v5);
  v7 = (char *)&v58 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DispatchQoS(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v66 = (char *)&v58 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = type metadata accessor for DispatchTime(0);
  v63 = *(_QWORD *)(v65 - 8);
  __chkstk_darwin(v65);
  v62 = (char *)&v58 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v64 = (char *)&v58 - v13;
  KeyPath = swift_getKeyPath(&unk_100719C58);
  aBlock[0] = v2;
  v15 = sub_100008DB0(&qword_1009D3B60, type metadata accessor for REActionMenuState, (uint64_t)&protocol conformance descriptor for REActionMenuState);
  ObservationRegistrar.access<A, B>(_:keyPath:)(aBlock, KeyPath, v15);
  swift_release(KeyPath);
  swift_beginAccess(v2 + 27, v75, 0, 0);
  v71 = v2[27];
  v16 = swift_getKeyPath(&unk_100719CD0);
  aBlock[0] = v2;
  ObservationRegistrar.access<A, B>(_:keyPath:)(aBlock, v16, v15);
  swift_release(v16);
  v17 = v2[32];
  v18 = 0.0;
  v67 = v9;
  v68 = v8;
  if (v17 >= 1 && a1 >= 1 && v17 >= a1 && (a1 != 1 || v17 != 1))
    v18 = (double)(a1 - 1) / (double)(v17 - 1);
  v19 = swift_getKeyPath(&unk_100719E10);
  __chkstk_darwin(v19);
  *(&v58 - 2) = (uint64_t)v2;
  *((double *)&v58 - 1) = v18;
  aBlock[0] = v2;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(aBlock, v19, sub_100301D98, &v58 - 4, (char *)&type metadata for () + 8, v15);
  swift_release(v19);
  swift_beginAccess(v2 + 6, v74, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(v2 + 6);
  if (result)
  {
    v21 = result;
    v22 = v3[7];
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v22 + 16))(a1, 1, ObjectType, v22);
    result = swift_unknownObjectRelease(v21);
  }
  v24 = a1 - v71;
  if (__OFSUB__(a1, v71))
  {
    __break(1u);
  }
  else if ((v24 & 0x8000000000000000) == 0 || (v25 = __OFSUB__(0, v24), v24 = v71 - a1, !v25))
  {
    v26 = swift_getKeyPath(&unk_100719CD0);
    aBlock[0] = v3;
    ObservationRegistrar.access<A, B>(_:keyPath:)(aBlock, v26, v15);
    swift_release(v26);
    v27 = v3[32];
    v60 = v7;
    if (v27 <= 0)
    {
      v28 = 0.0;
      if (v71 <= a1)
        goto LABEL_20;
    }
    else
    {
      if (v24 <= 0 || v27 < (unint64_t)v24 || v24 == 1 && v27 == 1)
        v28 = 0.0;
      else
        v28 = (double)(v24 - 1) / (double)(v27 - 1);
      if (v71 <= a1)
        goto LABEL_20;
    }
    v28 = -v28;
LABEL_20:
    v29 = swift_getKeyPath(&unk_100719DC0);
    __chkstk_darwin(v29);
    *(&v58 - 2) = (uint64_t)v3;
    *((double *)&v58 - 1) = v28;
    aBlock[0] = v3;
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(aBlock, v29, sub_10030A92C, &v58 - 4, (char *)&type metadata for () + 8, v15);
    swift_release(v29);
    v30 = swift_getKeyPath(&unk_100719DC0);
    aBlock[0] = v3;
    ObservationRegistrar.access<A, B>(_:keyPath:)(aBlock, v30, v15);
    swift_release(v30);
    v31 = v3[38];
    v32 = swift_getKeyPath(&unk_100719DE8);
    __chkstk_darwin(v32);
    *(&v58 - 2) = (uint64_t)v3;
    *(&v58 - 1) = v31;
    aBlock[0] = v3;
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(aBlock, v32, sub_10030A940, &v58 - 4, (char *)&type metadata for () + 8, v15);
    swift_release(v32);
    v59 = v61 & 1;
    v33 = v61 & 1 | 0x80;
    v34 = swift_getKeyPath(&unk_100719CA8);
    __chkstk_darwin(v34);
    v35 = v71;
    *(&v58 - 4) = (uint64_t)v3;
    *(&v58 - 3) = v35;
    v58 = a1;
    *(&v58 - 2) = a1;
    *((_BYTE *)&v58 - 8) = v33;
    aBlock[0] = v3;
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(aBlock, v34, sub_1002FF878, &v58 - 6, (char *)&type metadata for () + 8, v15);
    swift_release(v34);
    v36 = swift_getKeyPath(&unk_100719E80);
    __chkstk_darwin(v36);
    *(&v58 - 2) = (uint64_t)v3;
    *(&v58 - 1) = 0x8000000000000018;
    aBlock[0] = v3;
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(aBlock, v36, sub_10030A904, &v58 - 4, (char *)&type metadata for () + 8, v15);
    swift_release(v36);
    v37 = REActionMenuState.makeChapterScrubbingState()();
    v39 = v38;
    v40 = swift_getKeyPath(&unk_100719CF8);
    __chkstk_darwin(v40);
    *(&v58 - 4) = (uint64_t)v3;
    *(&v58 - 3) = v37;
    *((_BYTE *)&v58 - 16) = 1;
    aBlock[0] = v3;
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(aBlock, v40, sub_10030A918, &v58 - 6, (char *)&type metadata for () + 8, v15);
    sub_100309A54(v37, 1);
    swift_release(v40);
    sub_100009E04(0, (unint64_t *)&qword_1009CEC30, OS_dispatch_queue_ptr);
    swift_retain(v39);
    v42 = (void *)static OS_dispatch_queue.main.getter(v41);
    v43 = v62;
    static DispatchTime.now()(v42);
    v44 = v64;
    + infix(_:_:)(v43, 0.1);
    v63 = *(_QWORD *)(v63 + 8);
    v45 = v65;
    ((void (*)(char *, uint64_t))v63)(v43, v65);
    v46 = swift_allocObject(&unk_1008FBF80, 49, 7);
    *(_QWORD *)(v46 + 16) = v3;
    *(_QWORD *)(v46 + 24) = v39;
    v47 = v58;
    *(_QWORD *)(v46 + 32) = v71;
    *(_QWORD *)(v46 + 40) = v47;
    *(_BYTE *)(v46 + 48) = v59;
    aBlock[4] = sub_10030A384;
    v73 = v46;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1000147F0;
    aBlock[3] = &unk_1008FBF98;
    v48 = _Block_copy(aBlock);
    v49 = v73;
    swift_retain(v3);
    swift_release(v49);
    v50 = v66;
    static DispatchQoS.unspecified.getter(v51);
    aBlock[0] = _swiftEmptyArrayStorage;
    v52 = sub_100008DB0((unint64_t *)&qword_1009D48E0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v53 = sub_10004CFD4((uint64_t *)&unk_1009DB460);
    v54 = sub_100030B34((unint64_t *)&qword_1009D48F0, (uint64_t *)&unk_1009DB460, (uint64_t)&protocol conformance descriptor for [A]);
    v55 = v60;
    v56 = v53;
    v57 = v70;
    dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v56, v54, v70, v52);
    OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v44, v50, v55, v48);
    swift_release(v39);
    _Block_release(v48);

    (*(void (**)(char *, uint64_t))(v69 + 8))(v55, v57);
    (*(void (**)(char *, uint64_t))(v67 + 8))(v50, v68);
    return ((uint64_t (*)(char *, uint64_t))v63)(v44, v45);
  }
  __break(1u);
  return result;
}

double sub_100305220(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t KeyPath;
  uint64_t v11;
  _QWORD v13[5];
  uint64_t v14;

  KeyPath = swift_getKeyPath(&unk_100719E80);
  v13[2] = a1;
  v13[3] = a2;
  v14 = a1;
  v11 = sub_100008DB0(&qword_1009D3B60, type metadata accessor for REActionMenuState, (uint64_t)&protocol conformance descriptor for REActionMenuState);
  swift_retain(a2);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v14, KeyPath, sub_10030A904, v13, (char *)&type metadata for () + 8, v11);
  swift_release(KeyPath);
  swift_release(a2);
  return sub_10030530C(a2, a3, a4, a5);
}

double sub_10030530C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  double result;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD v25[2];
  uint64_t v26;
  _QWORD *v27;
  _QWORD aBlock[5];
  uint64_t v29;

  v9 = type metadata accessor for DispatchWorkItemFlags(0);
  v26 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v11 = (char *)v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for DispatchQoS(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2 == a3)
    return sub_100305578(a4 & 1);
  v25[1] = *(_QWORD *)(v4 + 192);
  v17 = swift_allocObject(&unk_1008FBE70, 24, 7);
  swift_weakInit(v17 + 16, v4);
  v18 = swift_allocObject(&unk_1008FC020, 41, 7);
  *(_QWORD *)(v18 + 16) = v17;
  *(_QWORD *)(v18 + 24) = a1;
  *(_QWORD *)(v18 + 32) = a3;
  *(_BYTE *)(v18 + 40) = a4 & 1;
  aBlock[4] = sub_10030A490;
  v29 = v18;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000147F0;
  aBlock[3] = &unk_1008FC038;
  v19 = _Block_copy(aBlock);
  swift_retain(v17);
  swift_retain(a1);
  static DispatchQoS.unspecified.getter(v20);
  v27 = _swiftEmptyArrayStorage;
  v21 = sub_100008DB0((unint64_t *)&qword_1009D48E0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v22 = sub_10004CFD4((uint64_t *)&unk_1009DB460);
  v23 = sub_100030B34((unint64_t *)&qword_1009D48F0, (uint64_t *)&unk_1009DB460, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v27, v22, v23, v9, v21);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v15, v11, v19);
  _Block_release(v19);
  (*(void (**)(char *, uint64_t))(v26 + 8))(v11, v9);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  v24 = v29;
  swift_release(v17);
  *(_QWORD *)&result = swift_release(v24).n128_u64[0];
  return result;
}

double sub_100305578(char a1)
{
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v4;
  uint64_t v5;
  double result;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v11[2];
  uint64_t v12;
  unint64_t v13;
  _BYTE v14[16];
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;

  KeyPath = swift_getKeyPath(&unk_100719CA8);
  v16 = 0;
  v17 = 0;
  v15 = v1;
  v18 = -64;
  v19 = v1;
  v4 = sub_100008DB0(&qword_1009D3B60, type metadata accessor for REActionMenuState, (uint64_t)&protocol conformance descriptor for REActionMenuState);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v19, KeyPath, sub_1002FF878, v14, (char *)&type metadata for () + 8, v4);
  swift_release(KeyPath);
  v5 = swift_getKeyPath(&unk_100719E80);
  v19 = v1;
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v19, v5, v4);
  *(_QWORD *)&result = swift_release(v5).n128_u64[0];
  if (*(_QWORD *)(v1 + 328) != 0x8000000000000000)
  {
    if ((a1 & 1) != 0)
      v7 = 0x8000000000000008;
    else
      v7 = 0x8000000000000000;
    v8 = swift_getKeyPath(&unk_100719E80);
    __chkstk_darwin(v8);
    v12 = v1;
    v13 = v7;
    v19 = v1;
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v19, v8, sub_10030A904, v11, (char *)&type metadata for () + 8, v4);
    sub_10028C694(v7);
    *(_QWORD *)&result = swift_release(v8).n128_u64[0];
  }
  if ((a1 & 1) == 0)
  {
    v9 = swift_getKeyPath(&unk_100719CF8);
    __chkstk_darwin(v9);
    v11[0] = v1;
    v11[1] = 0;
    LOBYTE(v12) = 2;
    v19 = v1;
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v19, v9, sub_10030A918, &v10, (char *)&type metadata for () + 8, v4);
    *(_QWORD *)&result = swift_release(v9).n128_u64[0];
  }
  return result;
}

uint64_t sub_100305768(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t result;
  dispatch_group_t v19;
  uint64_t KeyPath;
  uint64_t v21;
  __n128 v22;
  void *v23;
  uint64_t v24;
  NSObject *v25;
  void *v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  NSObject *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  os_log_type_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t Strong;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  NSObject *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t ObjectType;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  double v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  double *v61;
  uint64_t v62;
  void *v63;
  double *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  void *v72;
  const void *v73;
  char *v74;
  NSObject *v75;
  char *v76;
  uint64_t v77;
  char *v78;
  void (*v79)(char *, uint64_t);
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  NSObject *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  os_log_type_t v88;
  _BOOL4 v89;
  uint64_t v90;
  uint8_t *v91;
  const char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  _BOOL4 v98;
  dispatch_group_t v99;
  char v100;
  uint64_t v101;
  void *v102;
  uint64_t v103;
  uint64_t v104;
  void *v105;
  double *v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  int v120;
  void **v121;
  uint64_t v122;
  void *v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  char *v130;
  uint64_t v131;
  uint64_t v132;
  __n128 v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  void *v138;
  dispatch_group_t v139;
  void **v140;
  uint64_t v141;
  void **aBlock;
  uint64_t v143;
  uint64_t (*v144)(uint64_t);
  void *v145;
  void *v146;
  double *v147;
  _QWORD v148[4];
  char v149[8];

  v132 = type metadata accessor for DispatchWorkItemFlags(0);
  v131 = *(_QWORD *)(v132 - 8);
  __chkstk_darwin(v132);
  v130 = (char *)&v115 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v129 = type metadata accessor for DispatchQoS(0);
  v128 = *(_QWORD *)(v129 - 8);
  __chkstk_darwin(v129);
  v127 = (char *)&v115 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v126 = type metadata accessor for BookThemeEntity(0);
  v125 = *(_QWORD *)(v126 - 8);
  __chkstk_darwin(v126);
  v124 = (char *)&v115 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for DispatchTime(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v115 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v17 = (char *)&v115 - v16;
  a1 += 16;
  swift_beginAccess(a1, v149, 0, 0);
  result = swift_weakLoadStrong(a1);
  v122 = result;
  if (result)
  {
    v115 = v14;
    v116 = v17;
    v117 = v12;
    v118 = v11;
    v119 = a3;
    v120 = a4;
    v19 = dispatch_group_create();
    KeyPath = swift_getKeyPath(&unk_10071A1C8);
    v21 = swift_getKeyPath(&unk_10071A1F0);
    static Published.subscript.getter(&aBlock, a2, KeyPath, v21);
    swift_release(KeyPath);
    v22 = swift_release(v21);
    v121 = aBlock;
    v23 = aBlock[2];
    if (v23)
    {
      v141 = v122 + 80;
      if (qword_1009CDE60 != -1)
        goto LABEL_29;
      while (1)
      {
        v24 = 0;
        v140 = v121 + 4;
        v22.n128_u64[0] = 134217984;
        v133 = v22;
        v139 = v19;
        v123 = v23;
        while (1)
        {
          v26 = (void *)(v24 + 1);
          if (__OFADD__(v24, 1))
            break;
          v27 = v140[v24];
          v28 = type metadata accessor for Logger(0);
          v29 = sub_100048F64(v28, (uint64_t)qword_1009D9468);
          v30 = Logger.logObject.getter(v29);
          v34 = static os_log_type_t.debug.getter(v30, v31, v32, v33);
          if (os_log_type_enabled(v30, v34))
          {
            v35 = swift_slowAlloc(12, -1);
            *(_DWORD *)v35 = v133.n128_u32[0];
            *(_QWORD *)(v35 + 4) = v27;
            _os_log_impl((void *)&_mh_execute_header, v30, v34, "Want snapshot for page %ld", (uint8_t *)v35, 0xCu);
            swift_slowDealloc(v35, -1, -1);
          }

          dispatch_group_enter(v19);
          sub_10002E418(v141, (uint64_t)v148);
          v36 = sub_10003F198(v148, v148[3]);
          v37 = swift_allocObject(&unk_1008FC070, 32, 7);
          *(_QWORD *)(v37 + 16) = v27;
          *(_QWORD *)(v37 + 24) = v19;
          v38 = (_QWORD *)*v36;
          Strong = swift_unknownObjectWeakLoadStrong(*v36 + 104);
          if (Strong)
          {
            v40 = Strong;
            v41 = v38[14];
            v42 = swift_weakLoadStrong(v38 + 12);
            if (!v42)
            {
              v75 = v19;
              swift_release(v37);
              swift_unknownObjectRelease(v40);
              goto LABEL_7;
            }
            v138 = (void *)(v24 + 1);
            v137 = v42;
            v43 = v38[5];
            v44 = v38[6];
            sub_10003F198(v38 + 2, v43);
            v45 = v139;
            v46 = dispatch thunk of BookEntityType.assetID.getter(v43, v44);
            v135 = v47;
            ObjectType = swift_getObjectType();
            v49 = v124;
            v50 = dispatch thunk of ReadingSettingsProviding.currentTheme.getter(ObjectType, v41);
            v51 = BookThemeEntity.snapshotTheme()(v50);
            v52 = (*(uint64_t (**)(char *, uint64_t))(v125 + 8))(v49, v126);
            v26 = v138;
            v53 = dispatch thunk of BookContentLayoutController.contentLayoutProvider.getter(v52);
            v55 = v54;
            v56 = swift_getObjectType();
            v57 = dispatch thunk of BookContentLayoutProviding.contentSize.getter(v56, v55);
            v59 = v58;
            swift_unknownObjectRelease(v53);
            v60 = sub_100009E04(0, (unint64_t *)&qword_1009CEC30, OS_dispatch_queue_ptr);
            v136 = static OS_dispatch_queue.main.getter(v60);
            v61 = (double *)swift_allocObject(&unk_1008FC0E8, 104, 7);
            *((_QWORD *)v61 + 2) = v38;
            *((_QWORD *)v61 + 3) = v51;
            v134 = v51;
            v62 = v135;
            *((_QWORD *)v61 + 4) = v46;
            *((_QWORD *)v61 + 5) = v62;
            *((_QWORD *)v61 + 6) = v27;
            v61[7] = v57;
            *((_QWORD *)v61 + 8) = v59;
            *((_QWORD *)v61 + 9) = sub_10030A4CC;
            *((_QWORD *)v61 + 10) = v37;
            *((_QWORD *)v61 + 11) = BKAppDelegate.enableMetricsInspectorOnDebugMode();
            v61[12] = 0.0;
            v146 = sub_10030A548;
            v147 = v61;
            aBlock = _NSConcreteStackBlock;
            v143 = 1107296256;
            v144 = sub_1000147F0;
            v145 = &unk_1008FC100;
            v63 = _Block_copy(&aBlock);
            v64 = v147;
            swift_retain(v38);
            swift_retain(v51);
            swift_retain(v37);
            swift_release(v64);
            v65 = v127;
            static DispatchQoS.unspecified.getter(v66);
            aBlock = (void **)_swiftEmptyArrayStorage;
            v67 = sub_100008DB0((unint64_t *)&qword_1009D48E0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
            v68 = sub_10004CFD4((uint64_t *)&unk_1009DB460);
            v69 = sub_100030B34((unint64_t *)&qword_1009D48F0, (uint64_t *)&unk_1009DB460, (uint64_t)&protocol conformance descriptor for [A]);
            v70 = v130;
            v71 = v132;
            dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v68, v69, v132, v67);
            v72 = (void *)v136;
            OS_dispatch_queue.async(group:qos:flags:execute:)(0, v65, v70, v63);
            v73 = v63;
            v23 = v123;
            _Block_release(v73);
            swift_release(v134);
            swift_unknownObjectRelease(v40);
            swift_release(v137);

            v74 = v70;
            v19 = v139;
            (*(void (**)(char *, uint64_t))(v131 + 8))(v74, v71);
            (*(void (**)(char *, uint64_t))(v128 + 8))(v65, v129);
          }
          else
          {
            v25 = v19;
          }
          swift_release(v37);
LABEL_7:
          _s5Books15CurrentPageViewVwxx_0(v148);
          ++v24;
          if (v26 == v23)
            goto LABEL_15;
        }
        __break(1u);
LABEL_29:
        swift_once(&qword_1009CDE60, sub_1002FC71C);
      }
    }
LABEL_15:
    swift_bridgeObjectRelease(v121);
    v76 = v115;
    static DispatchTime.now()(v77);
    v78 = v116;
    + infix(_:_:)(v76, 1.0);
    v79 = *(void (**)(char *, uint64_t))(v117 + 8);
    v80 = v118;
    v79(v76, v118);
    v81 = OS_dispatch_group.wait(timeout:)(v78) & 1;
    v79(v78, v80);
    if ((static DispatchTimeoutResult.== infix(_:_:)(v81, 1) & 1) != 0)
    {
      if (qword_1009CDE60 != -1)
        swift_once(&qword_1009CDE60, sub_1002FC71C);
      v82 = type metadata accessor for Logger(0);
      v83 = sub_100048F64(v82, (uint64_t)qword_1009D9468);
      v84 = Logger.logObject.getter(v83);
      v88 = static os_log_type_t.debug.getter(v84, v85, v86, v87);
      v89 = os_log_type_enabled(v84, v88);
      v90 = v119;
      if (v89)
      {
        v91 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v91 = 0;
        v92 = "Timeout waiting for snapshots";
LABEL_24:
        _os_log_impl((void *)&_mh_execute_header, v84, v88, v92, v91, 2u);
        v99 = v19;
        swift_slowDealloc(v91, -1, -1);
LABEL_26:
        v100 = v120;

        v101 = sub_100009E04(0, (unint64_t *)&qword_1009CEC30, OS_dispatch_queue_ptr);
        v102 = (void *)static OS_dispatch_queue.main.getter(v101);
        v103 = swift_allocObject(&unk_1008FC098, 33, 7);
        v104 = v122;
        *(_QWORD *)(v103 + 16) = v122;
        *(_QWORD *)(v103 + 24) = v90;
        *(_BYTE *)(v103 + 32) = v100 & 1;
        v146 = sub_10030A4F8;
        v147 = (double *)v103;
        aBlock = _NSConcreteStackBlock;
        v143 = 1107296256;
        v144 = sub_1000147F0;
        v145 = &unk_1008FC0B0;
        v105 = _Block_copy(&aBlock);
        v106 = v147;
        swift_retain(v104);
        swift_release(v106);
        v107 = v127;
        static DispatchQoS.unspecified.getter(v108);
        aBlock = (void **)_swiftEmptyArrayStorage;
        v109 = sub_100008DB0((unint64_t *)&qword_1009D48E0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
        v110 = sub_10004CFD4((uint64_t *)&unk_1009DB460);
        v111 = sub_100030B34((unint64_t *)&qword_1009D48F0, (uint64_t *)&unk_1009DB460, (uint64_t)&protocol conformance descriptor for [A]);
        v112 = v130;
        v113 = v110;
        v114 = v132;
        dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v113, v111, v132, v109);
        OS_dispatch_queue.async(group:qos:flags:execute:)(0, v107, v112, v105);
        _Block_release(v105);
        swift_release(v104);

        (*(void (**)(char *, uint64_t))(v131 + 8))(v112, v114);
        return (*(uint64_t (**)(char *, uint64_t))(v128 + 8))(v107, v129);
      }
    }
    else
    {
      if (qword_1009CDE60 != -1)
        swift_once(&qword_1009CDE60, sub_1002FC71C);
      v93 = type metadata accessor for Logger(0);
      v94 = sub_100048F64(v93, (uint64_t)qword_1009D9468);
      v84 = Logger.logObject.getter(v94);
      v88 = static os_log_type_t.debug.getter(v84, v95, v96, v97);
      v98 = os_log_type_enabled(v84, v88);
      v90 = v119;
      if (v98)
      {
        v91 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v91 = 0;
        v92 = "All snapshots ready";
        goto LABEL_24;
      }
    }
    v99 = v19;
    goto LABEL_26;
  }
  return result;
}

void sub_10030619C(uint64_t a1, uint64_t a2, NSObject *a3)
{
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;

  if (qword_1009CDE60 != -1)
    swift_once(&qword_1009CDE60, sub_1002FC71C);
  v5 = type metadata accessor for Logger(0);
  v6 = sub_100048F64(v5, (uint64_t)qword_1009D9468);
  v7 = Logger.logObject.getter(v6);
  v11 = static os_log_type_t.debug.getter(v7, v8, v9, v10);
  if (os_log_type_enabled(v7, v11))
  {
    v12 = (uint8_t *)swift_slowAlloc(12, -1);
    *(_DWORD *)v12 = 134217984;
    v13 = a2;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v13, &v14, v12 + 4, v12 + 12);
    _os_log_impl((void *)&_mh_execute_header, v7, v11, "Prepared snapshot for page %ld", v12, 0xCu);
    swift_slowDealloc(v12, -1, -1);
  }

  dispatch_group_leave(a3);
}

uint64_t sub_1003062B0(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t KeyPath;
  uint64_t v17;
  __n128 v18;
  __n128 v19;
  double v20;
  double v21;
  uint64_t v22;
  double v23;
  uint64_t v24;
  void *v25;
  void (*v26)(_BYTE *, uint64_t);
  uint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _BYTE *v34;
  uint64_t v35;
  uint64_t v36;
  _BYTE v38[4];
  int v39;
  _BYTE *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45[16];
  uint64_t v46;
  uint64_t v47;
  _QWORD aBlock[5];
  uint64_t v49;

  v39 = a3;
  v41 = type metadata accessor for DispatchWorkItemFlags(0);
  v44 = *(_QWORD *)(v41 - 8);
  __chkstk_darwin(v41);
  v40 = &v38[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = type metadata accessor for DispatchQoS(0);
  v42 = *(_QWORD *)(v6 - 8);
  v43 = v6;
  __chkstk_darwin(v6);
  v8 = &v38[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = type metadata accessor for DispatchTime(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = &v38[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v13);
  v15 = &v38[-v14];
  KeyPath = swift_getKeyPath(&unk_100719C58);
  v46 = a1;
  v47 = a2;
  aBlock[0] = a1;
  v17 = sub_100008DB0(&qword_1009D3B60, type metadata accessor for REActionMenuState, (uint64_t)&protocol conformance descriptor for REActionMenuState);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(aBlock, KeyPath, sub_1002FEE08, v45, (char *)&type metadata for () + 8, v17);
  v18 = swift_release(KeyPath);
  v19.n128_f32[0] = UIAnimationDragCoefficient(v18);
  v20 = v19.n128_f32[0];
  v21 = UIAnimationDragCoefficient(v19) * 0.55;
  v22 = swift_getKeyPath(&unk_100719CA8);
  aBlock[0] = a1;
  ObservationRegistrar.access<A, B>(_:keyPath:)(aBlock, v22, v17);
  swift_release(v22);
  v23 = (v21 + (double)sub_1004CE524(*(_QWORD *)(a1 + 232), *(_QWORD *)(a1 + 240), *(_BYTE *)(a1 + 248)) * 0.05) * v20;
  v24 = sub_100009E04(0, (unint64_t *)&qword_1009CEC30, OS_dispatch_queue_ptr);
  v25 = (void *)static OS_dispatch_queue.main.getter(v24);
  static DispatchTime.now()(v25);
  + infix(_:_:)(v12, v23);
  v26 = *(void (**)(_BYTE *, uint64_t))(v10 + 8);
  v26(v12, v9);
  v27 = swift_allocObject(&unk_1008FC138, 25, 7);
  *(_QWORD *)(v27 + 16) = a1;
  *(_BYTE *)(v27 + 24) = v39;
  aBlock[4] = sub_10030A5A4;
  v49 = v27;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000147F0;
  aBlock[3] = &unk_1008FC150;
  v28 = _Block_copy(aBlock);
  v29 = v49;
  swift_retain(a1);
  swift_release(v29);
  static DispatchQoS.unspecified.getter(v30);
  aBlock[0] = _swiftEmptyArrayStorage;
  v31 = sub_100008DB0((unint64_t *)&qword_1009D48E0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v32 = sub_10004CFD4((uint64_t *)&unk_1009DB460);
  v33 = sub_100030B34((unint64_t *)&qword_1009D48F0, (uint64_t *)&unk_1009DB460, (uint64_t)&protocol conformance descriptor for [A]);
  v34 = v40;
  v35 = v32;
  v36 = v41;
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v35, v33, v41, v31);
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v15, v8, v34, v28);
  _Block_release(v28);

  (*(void (**)(_BYTE *, uint64_t))(v44 + 8))(v34, v36);
  (*(void (**)(_BYTE *, uint64_t))(v42 + 8))(v8, v43);
  return ((uint64_t (*)(_BYTE *, uint64_t))v26)(v15, v9);
}

uint64_t sub_100306654(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t KeyPath;
  uint64_t v19;
  __n128 v20;
  double v21;
  uint64_t v22;
  void *v23;
  void (*v24)(char *, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _BYTE v41[16];
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  _QWORD aBlock[5];
  uint64_t v47;

  v3 = v2;
  v35 = a2;
  v37 = type metadata accessor for DispatchWorkItemFlags(0);
  v40 = *(_QWORD *)(v37 - 8);
  __chkstk_darwin(v37);
  v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DispatchQoS(0);
  v38 = *(_QWORD *)(v8 - 8);
  v39 = v8;
  __chkstk_darwin(v8);
  v10 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for DispatchTime(0);
  v12 = *(_QWORD *)(v11 - 8);
  v36 = v11;
  __chkstk_darwin(v11);
  v14 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v17 = (char *)&v35 - v16;
  KeyPath = swift_getKeyPath(&unk_100719CA8);
  v42 = v3;
  v43 = a1;
  v44 = a2;
  v45 = 65;
  aBlock[0] = v3;
  v19 = sub_100008DB0(&qword_1009D3B60, type metadata accessor for REActionMenuState, (uint64_t)&protocol conformance descriptor for REActionMenuState);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(aBlock, KeyPath, sub_1002FF878, v41, (char *)&type metadata for () + 8, v19);
  v20 = swift_release(KeyPath);
  v21 = UIAnimationDragCoefficient(v20) * 0.25;
  v22 = sub_100009E04(0, (unint64_t *)&qword_1009CEC30, OS_dispatch_queue_ptr);
  v23 = (void *)static OS_dispatch_queue.main.getter(v22);
  static DispatchTime.now()(v23);
  + infix(_:_:)(v14, v21);
  v24 = *(void (**)(char *, uint64_t))(v12 + 8);
  v24(v14, v11);
  v25 = swift_allocObject(&unk_1008FBE70, 24, 7);
  swift_weakInit(v25 + 16, v3);
  v26 = swift_allocObject(&unk_1008FBFD0, 32, 7);
  v27 = v35;
  *(_QWORD *)(v26 + 16) = v25;
  *(_QWORD *)(v26 + 24) = v27;
  aBlock[4] = sub_10030A448;
  v47 = v26;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000147F0;
  aBlock[3] = &unk_1008FBFE8;
  v28 = _Block_copy(aBlock);
  swift_release(v47);
  static DispatchQoS.unspecified.getter(v29);
  aBlock[0] = _swiftEmptyArrayStorage;
  v30 = sub_100008DB0((unint64_t *)&qword_1009D48E0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v31 = sub_10004CFD4((uint64_t *)&unk_1009DB460);
  v32 = sub_100030B34((unint64_t *)&qword_1009D48F0, (uint64_t *)&unk_1009DB460, (uint64_t)&protocol conformance descriptor for [A]);
  v33 = v37;
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v31, v32, v37, v30);
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v17, v10, v7, v28);
  _Block_release(v28);

  (*(void (**)(char *, uint64_t))(v40 + 8))(v7, v33);
  (*(void (**)(char *, uint64_t))(v38 + 8))(v10, v39);
  return ((uint64_t (*)(char *, uint64_t))v24)(v17, v36);
}

double sub_1003069B8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t Strong;
  double result;
  uint64_t v6;
  uint64_t KeyPath;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  _QWORD v11[6];
  uint64_t v12;
  char v13[24];

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v13, 0, 0);
  Strong = swift_weakLoadStrong(v3);
  if (Strong)
  {
    v6 = Strong;
    KeyPath = swift_getKeyPath(&unk_100719C58);
    __chkstk_darwin(KeyPath);
    v11[2] = v6;
    v11[3] = a2;
    v12 = v6;
    v8 = sub_100008DB0(&qword_1009D3B60, type metadata accessor for REActionMenuState, (uint64_t)&protocol conformance descriptor for REActionMenuState);
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v12, KeyPath, sub_1002FEE08, v11, (char *)&type metadata for () + 8, v8);
    swift_release(KeyPath);
    v9 = swift_getKeyPath(&unk_100719E80);
    v12 = v6;
    ObservationRegistrar.access<A, B>(_:keyPath:)(&v12, v9, v8);
    swift_release(v9);
    v10 = *(_QWORD *)(v6 + 328);
    if ((v10 >> 62) >= 2)
      __asm { BR              X10 }
    *(_QWORD *)&result = swift_release(v6).n128_u64[0];
  }
  return result;
}

void sub_100306B20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  KeyPath = swift_getKeyPath(&unk_100719E80);
  __chkstk_darwin(KeyPath);
  v6 = v0;
  v7 = 0x8000000000000018;
  *(_QWORD *)(v3 - 96) = v0;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(v3 - 96, KeyPath, sub_10030A904, &v5, v2 + 8, v1);
  swift_release(v0);
  swift_release(KeyPath);
  JUMPOUT(0x100306B04);
}

unint64_t REActionMenuState.scrubberChanged(state:event:)(uint64_t a1, int a2, unsigned __int8 a3, double a4, double a5, double a6)
{
  uint64_t v6;
  uint64_t v7;
  int v12;
  uint64_t v13;
  uint64_t Strong;
  void *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t KeyPath;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  double v28;
  double v29;
  double v30;
  uint64_t v31;
  NSObject *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  os_log_type_t v36;
  int v37;
  _BOOL4 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  unint64_t v58;
  uint64_t v59;
  char v60;
  uint64_t v61;
  uint64_t v62;
  char v63;
  Swift::Int v64;
  uint64_t v65;
  char v66;
  uint64_t v67;
  char v68;
  _BOOL4 v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  unint64_t v73;
  char v74;
  uint64_t v75;
  unint64_t v76;
  _BOOL4 v77;
  unint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  double v85;
  double v86;
  NSObject *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  os_log_type_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  unint64_t v97;
  unint64_t v98;
  uint64_t v99;
  uint64_t v100;
  unint64_t v101;
  unint64_t v102;
  unint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  int v113;
  uint64_t v114;
  uint64_t v115;
  char v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  NSObject *v126;
  os_log_type_t v127;
  _BOOL4 v128;
  uint8_t *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  int v134;
  uint64_t v135;
  char v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  double v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  char v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t ObjectType;
  uint64_t v153;
  uint64_t v154;
  __n128 v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v161;
  __int128 v162;
  uint64_t v163;
  uint64_t v164;
  _QWORD *v165;
  uint64_t v166;
  uint64_t v167;
  __int128 v168;
  uint64_t v169;
  uint64_t v170;
  int v171;
  uint64_t v172;
  uint64_t v173;
  int v174;
  uint64_t v175;
  char v176[24];
  uint64_t v177;
  uint64_t v178;
  _BYTE v179[24];
  uint64_t v180[4];

  v7 = v6;
  v172 = a1;
  v12 = a3;
  v164 = type metadata accessor for AnalyticsEvent.Reading(0);
  __chkstk_darwin(v164);
  v165 = (_QWORD *)((char *)&v162 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (v12 == 1)
  {
    Strong = swift_unknownObjectWeakLoadStrong(v7 + 160);
    if (Strong)
    {
      v15 = (void *)Strong;
      v16 = *(id *)(Strong + OBJC_IVAR___BKEngagementManager_manager);
      v17 = Manager.donor(type:)(0x2D6E6F6973736573, 0xED0000726F6E6F64);

      if (v17)
      {
        v18 = type metadata accessor for SessionDonor(0);
        v19 = (_BYTE *)swift_dynamicCastClass(v17, v18);

        if (v19 && (v19[OBJC_IVAR___BKSessionDonor_everUsedReadingScrubber] & 1) == 0)
        {
          v19[OBJC_IVAR___BKSessionDonor_everUsedReadingScrubber] = 1;
          objc_msgSend(v19, "propertyDidChange:propertyConfiguration:", v19, *(_QWORD *)&v19[OBJC_IVAR___BKSessionDonor_everUsedReadingScrubberAppConfig]);
        }
        swift_unknownObjectRelease(v17);
      }
      else
      {

      }
    }
  }
  KeyPath = swift_getKeyPath(&unk_100719CF8);
  v21 = v7 + OBJC_IVAR____TtC5Books17REActionMenuState___observationRegistrar;
  v180[0] = v7;
  v22 = sub_100008DB0(&qword_1009D3B60, type metadata accessor for REActionMenuState, (uint64_t)&protocol conformance descriptor for REActionMenuState);
  ObservationRegistrar.access<A, B>(_:keyPath:)(v180, KeyPath, v22);
  swift_release(KeyPath);
  if ((_BYTE)a2)
    v23 = 1;
  else
    v23 = *(_BYTE *)(v7 + 280) == 0;
  v24 = !v23;
  LODWORD(v173) = v24;
  v25 = swift_getKeyPath(&unk_100719CF8);
  v180[0] = v7;
  v175 = v21;
  ObservationRegistrar.access<A, B>(_:keyPath:)(v180, v25, v22);
  swift_release(v25);
  v26 = *(_QWORD *)(v7 + 272);
  v27 = *(unsigned __int8 *)(v7 + 280);
  if (!*(_BYTE *)(v7 + 280) || (_BYTE)a2)
  {
    if ((_BYTE)a2)
    {
      if (a2 == 1)
      {
        v26 = v172;
        v27 = a2;
      }
    }
    else
    {
      v26 = v172;
      v27 = a2;
    }
  }
  v171 = a2;
  v28 = a5 + a6;
  if (a5 + a6 < 0.0)
    v28 = 0.0;
  if (v28 <= 1.0)
    v29 = v28;
  else
    v29 = 1.0;
  v174 = v27;
  sub_100300604(v26, v27);
  if (qword_1009CDE60 != -1)
    swift_once(&qword_1009CDE60, sub_1002FC71C);
  v30 = v29 - a5;
  v31 = type metadata accessor for Logger(0);
  v166 = sub_100048F64(v31, (uint64_t)qword_1009D9468);
  v32 = Logger.logObject.getter(v166);
  v36 = static os_log_type_t.debug.getter(v32, v33, v34, v35);
  v37 = v36;
  v38 = os_log_type_enabled(v32, v36);
  v170 = v22;
  v169 = v26;
  if (v38)
  {
    v39 = swift_slowAlloc(52, -1);
    LODWORD(v163) = v37;
    v40 = v39;
    v167 = swift_slowAlloc(128, -1);
    v180[0] = v167;
    *(_DWORD *)v40 = 134219010;
    v178 = *(_QWORD *)&a4;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v178, v179, v40 + 4, v40 + 12);
    *(_WORD *)(v40 + 12) = 2080;
    v41 = sub_10004CFD4((uint64_t *)&unk_1009D1970);
    v42 = swift_allocObject(v41, 72, 7);
    v168 = xmmword_10070CCA0;
    *(_OWORD *)(v42 + 16) = xmmword_10070CCA0;
    *(_QWORD *)(v42 + 56) = &type metadata for Double;
    *(_QWORD *)(v42 + 64) = &protocol witness table for Double;
    *(double *)(v42 + 32) = a6;
    v43 = String.init(format:_:)(1714695717, 0xE400000000000000, v42);
    v45 = v44;
    v178 = sub_100040F58(v43, v44, v180);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v178, v179, v40 + 14, v40 + 22);
    swift_bridgeObjectRelease(v45);
    *(_WORD *)(v40 + 22) = 2080;
    v46 = swift_allocObject(v41, 72, 7);
    *(_OWORD *)(v46 + 16) = v168;
    *(_QWORD *)(v46 + 56) = &type metadata for Double;
    *(_QWORD *)(v46 + 64) = &protocol witness table for Double;
    *(double *)(v46 + 32) = a5;
    v47 = String.init(format:_:)(1714695717, 0xE400000000000000, v46);
    v49 = v48;
    v178 = sub_100040F58(v47, v48, v180);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v178, v179, v40 + 24, v40 + 32);
    swift_bridgeObjectRelease(v49);
    *(_WORD *)(v40 + 32) = 2080;
    v50 = swift_allocObject(v41, 72, 7);
    *(_OWORD *)(v50 + 16) = v168;
    *(_QWORD *)(v50 + 56) = &type metadata for Double;
    *(_QWORD *)(v50 + 64) = &protocol witness table for Double;
    *(double *)(v50 + 32) = v29;
    v51 = String.init(format:_:)(1714695717, 0xE400000000000000, v50);
    v53 = v52;
    v178 = sub_100040F58(v51, v52, v180);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v178, v179, v40 + 34, v40 + 42);
    v54 = v53;
    v22 = v170;
    swift_bridgeObjectRelease(v54);
    *(_WORD *)(v40 + 42) = 2080;
    v55 = swift_allocObject(v41, 72, 7);
    *(_OWORD *)(v55 + 16) = v168;
    *(_QWORD *)(v55 + 56) = &type metadata for Double;
    *(_QWORD *)(v55 + 64) = &protocol witness table for Double;
    *(double *)(v55 + 32) = v30;
    v56 = String.init(format:_:)(1714695717, 0xE400000000000000, v55);
    v58 = v57;
    v178 = sub_100040F58(v56, v57, v180);
    v26 = v169;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v178, v179, v40 + 44, v40 + 52);
    swift_bridgeObjectRelease(v58);
    _os_log_impl((void *)&_mh_execute_header, v32, (os_log_type_t)v163, "scrub received position %f delta %s value: %s producing targetValue %s snappedDelta: %s", (uint8_t *)v40, 0x34u);
    v59 = v167;
    swift_arrayDestroy(v167, 4, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v59, -1, -1);
    swift_slowDealloc(v40, -1, -1);
  }

  v60 = v174;
  if (v174 == 1)
  {
    v61 = swift_getKeyPath(&unk_100719CF8);
    v180[0] = v7;
    ObservationRegistrar.access<A, B>(_:keyPath:)(v180, v61, v22);
    swift_release(v61);
    if (*(unsigned __int8 *)(v7 + 280) >= 2u)
    {
      swift_retain(v26);
      v63 = 1;
    }
    else
    {
      v62 = swift_getKeyPath(&unk_100719CF8);
      v180[0] = v7;
      ObservationRegistrar.access<A, B>(_:keyPath:)(v180, v62, v22);
      swift_release(v62);
      v26 = *(_QWORD *)(v7 + 272);
      v63 = *(_BYTE *)(v7 + 280);
      sub_100300604(v26, v63);
    }
    v64 = sub_100308168(v26, v63, *(uint64_t *)&v29, 0);
    v65 = v26;
    v66 = v63;
  }
  else
  {
    sub_100300604(v26, v174);
    v64 = sub_100308168(v26, v60, *(uint64_t *)&a4, 0);
    v65 = v26;
    v66 = v60;
  }
  sub_100309A54(v65, v66);
  if ((_DWORD)v173)
  {
    v67 = swift_getKeyPath(&unk_100719E10);
    v180[0] = v7;
    ObservationRegistrar.access<A, B>(_:keyPath:)(v180, v67, v22);
    swift_release(v67);
    swift_beginAccess(v7 + 320, v176, 0, 0);
    sub_10044B294(v64, *(double *)(v7 + 320));
  }
  v68 = v171;
  v69 = (_BYTE)v171 != 0;
  v70 = swift_getKeyPath(&unk_100719E80);
  v180[0] = v7;
  ObservationRegistrar.access<A, B>(_:keyPath:)(v180, v70, v22);
  swift_release(v70);
  v71 = *(_QWORD *)(v7 + 328);
  v72 = swift_getKeyPath(&unk_100719CF8);
  v180[0] = v7;
  sub_10028C678(v71);
  ObservationRegistrar.access<A, B>(_:keyPath:)(v180, v72, v22);
  swift_release(v72);
  v73 = *(_QWORD *)(v7 + 272);
  v74 = *(_BYTE *)(v7 + 280);
  v75 = swift_getKeyPath(&unk_100719C58);
  v180[0] = v7;
  sub_100300604(v73, v74);
  ObservationRegistrar.access<A, B>(_:keyPath:)(v180, v75, v22);
  swift_release(v75);
  swift_beginAccess(v7 + 216, v180, 0, 0);
  v76 = sub_100309DD8(v71, v73, v74, v172, v68, *(_QWORD *)(v7 + 216), v64);
  sub_100309A54(v73, v74);
  sub_10028C694(v71);
  if ((_BYTE)v174)
    v77 = v69;
  else
    v77 = 0;
  *(_QWORD *)&v168 = v64;
  if (((v173 | v77) & 1) == 0)
  {
    v130 = swift_getKeyPath(&unk_100719C58);
    v178 = v7;
    ObservationRegistrar.access<A, B>(_:keyPath:)(&v178, v130, v22);
    swift_release(v130);
    v131 = *(_QWORD *)(v7 + 216);
    v132 = swift_getKeyPath(&unk_100719C58);
    __chkstk_darwin(v132);
    *((_QWORD *)&v162 - 2) = v7;
    *((_QWORD *)&v162 - 1) = v64;
    v178 = v7;
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v178, v132, sub_1002FEE08, &v162 - 2, (char *)&type metadata for () + 8, v22);
    swift_release(v132);
    v167 = v76;
    if (v76 >> 62 == 2 && (v76 | 8) == 0x8000000000000018)
    {
      v133 = swift_getKeyPath(&unk_100719CF8);
      v178 = v7;
      ObservationRegistrar.access<A, B>(_:keyPath:)(&v178, v133, v22);
      swift_release(v133);
      v134 = *(unsigned __int8 *)(v7 + 280);
      v135 = swift_getKeyPath(&unk_100719E10);
      __chkstk_darwin(v135);
      *((_QWORD *)&v162 - 2) = v7;
      v136 = v171;
      if (v134 == 1)
        *((double *)&v162 - 1) = a4;
      else
        *((double *)&v162 - 1) = v29;
      v178 = v7;
      ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v178, v135, sub_100301D98, &v162 - 2, (char *)&type metadata for () + 8, v22);
      v143 = v135;
    }
    else
    {
      v137 = swift_getKeyPath(&unk_100719C58);
      v178 = v7;
      ObservationRegistrar.access<A, B>(_:keyPath:)(&v178, v137, v22);
      swift_release(v137);
      v138 = *(_QWORD *)(v7 + 216);
      v139 = swift_getKeyPath(&unk_100719CD0);
      v178 = v7;
      ObservationRegistrar.access<A, B>(_:keyPath:)(&v178, v139, v22);
      swift_release(v139);
      v140 = *(_QWORD *)(v7 + 256);
      v141 = 0.0;
      v136 = v171;
      if (v140 >= 1 && v138 >= 1 && v140 >= v138 && (v138 != 1 || v140 != 1))
        v141 = (double)(v138 - 1) / (double)(v140 - 1);
      v142 = swift_getKeyPath(&unk_100719E10);
      __chkstk_darwin(v142);
      *((_QWORD *)&v162 - 2) = v7;
      *((double *)&v162 - 1) = v141;
      v178 = v7;
      ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v178, v142, sub_100301D98, &v162 - 2, (char *)&type metadata for () + 8, v22);
      v143 = v142;
    }
    swift_release(v143);
    swift_beginAccess(v7 + 48, &v178, 0, 0);
    v149 = swift_unknownObjectWeakLoadStrong(v7 + 48);
    if (v149)
    {
      v150 = v149;
      v151 = *(_QWORD *)(v7 + 56);
      ObjectType = swift_getObjectType();
      v153 = swift_getKeyPath(&unk_100719C58);
      v177 = v7;
      ObservationRegistrar.access<A, B>(_:keyPath:)(&v177, v153, v170);
      v154 = v153;
      v136 = v171;
      v155 = swift_release(v154);
      (*(void (**)(_QWORD, uint64_t, uint64_t, __n128))(v151 + 24))(*(_QWORD *)(v7 + 216), ObjectType, v151, v155);
      swift_unknownObjectRelease(v150);
    }
    sub_1003088C4(v172, v136, 0, v30);
    if (v131 == (_QWORD)v168)
    {
      v156 = swift_getKeyPath(&unk_100719CA8);
      __chkstk_darwin(v156);
      *((_QWORD *)&v162 - 3) = 0;
      *((_QWORD *)&v162 - 2) = 0;
      *((_QWORD *)&v162 - 4) = v7;
      *((_BYTE *)&v162 - 8) = -64;
      v177 = v7;
      v22 = v170;
      ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v177, v156, sub_1002FF878, &v162 - 3, (char *)&type metadata for () + 8, v170);
      swift_release(v156);
      v157 = swift_getKeyPath(&unk_100719E80);
      v177 = v7;
      ObservationRegistrar.access<A, B>(_:keyPath:)(&v177, v157, v22);
      swift_release(v157);
      LOBYTE(v177) = *(_QWORD *)(v7 + 328) == 0x8000000000000000;
      CurrentValueSubject.value.setter(&v177);
    }
    else
    {
      sub_100306654(v131, v168);
      v22 = v170;
    }
    v116 = v174;
    v76 = v167;
    goto LABEL_88;
  }
  v78 = v76 >> 62;
  if (v76 >> 62 != 2 || (v79 = v173, (v76 | 8) != 0x8000000000000018))
    v79 = 1;
  v80 = swift_getKeyPath(&unk_100719C58);
  v178 = v7;
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v178, v80, v22);
  swift_release(v80);
  v81 = *(_QWORD *)(v7 + 216);
  v82 = swift_getKeyPath(&unk_100719CD0);
  v178 = v7;
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v178, v82, v22);
  swift_release(v82);
  v84 = *(_QWORD *)(v7 + 256);
  v85 = 0.0;
  if (v84 >= 1 && v81 >= 1 && v84 >= v81 && (v81 != 1 || v84 != 1))
    v85 = (double)(v81 - 1) / (double)(v84 - 1);
  v86 = vabdd_f64(v29, v85);
  v87 = Logger.logObject.getter(v83);
  v91 = static os_log_type_t.debug.getter(v87, v88, v89, v90);
  if (os_log_type_enabled(v87, v91))
  {
    v92 = swift_slowAlloc(22, -1);
    v93 = swift_slowAlloc(64, -1);
    v167 = v76;
    v163 = v93;
    v178 = v93;
    *(_DWORD *)v92 = 136315394;
    v94 = sub_10004CFD4((uint64_t *)&unk_1009D1970);
    v95 = swift_allocObject(v94, 72, 7);
    v162 = xmmword_10070CCA0;
    *(_OWORD *)(v95 + 16) = xmmword_10070CCA0;
    *(_QWORD *)(v95 + 56) = &type metadata for CGFloat;
    *(_QWORD *)(v95 + 64) = sub_10030A0E4();
    *(double *)(v95 + 32) = v29;
    v96 = String.init(format:_:)(1714695717, 0xE400000000000000, v95);
    v98 = v97;
    v177 = sub_100040F58(v96, v97, &v178);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v177, &v178, v92 + 4, v92 + 12);
    swift_bridgeObjectRelease(v98);
    *(_WORD *)(v92 + 12) = 2080;
    v99 = swift_allocObject(v94, 72, 7);
    *(_OWORD *)(v99 + 16) = v162;
    *(_QWORD *)(v99 + 56) = &type metadata for Double;
    *(_QWORD *)(v99 + 64) = &protocol witness table for Double;
    *(double *)(v99 + 32) = v86;
    v100 = String.init(format:_:)(1714695717, 0xE400000000000000, v99);
    v102 = v101;
    v177 = sub_100040F58(v100, v101, &v178);
    v78 = v76 >> 62;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v177, &v178, v92 + 14, v92 + 22);
    v103 = v102;
    v22 = v170;
    swift_bridgeObjectRelease(v103);
    _os_log_impl((void *)&_mh_execute_header, v87, v91, "scrub new position is %s for a delta of %s", (uint8_t *)v92, 0x16u);
    v104 = v163;
    swift_arrayDestroy(v163, 2, (char *)&type metadata for Any + 8);
    v76 = v167;
    swift_slowDealloc(v104, -1, -1);
    swift_slowDealloc(v92, -1, -1);
  }

  if ((_DWORD)v78 == 2 && (v76 | 8) == 0x8000000000000018 || v86 > 0.01)
  {
    v163 = v78;
    v105 = swift_getKeyPath(&unk_100719E10);
    __chkstk_darwin(v105);
    *((_QWORD *)&v162 - 2) = v7;
    *((double *)&v162 - 1) = v29;
    v178 = v7;
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v178, v105, sub_100301D98, &v162 - 2, (char *)&type metadata for () + 8, v22);
    swift_release(v105);
    swift_beginAccess(v7 + 48, &v178, 0, 0);
    v106 = swift_unknownObjectWeakLoadStrong(v7 + 48);
    if (v106)
    {
      v107 = v106;
      v108 = *(_QWORD *)(v7 + 56);
      v109 = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t, uint64_t, double))(v108 + 8))(v79, v109, v108, v29);
      swift_unknownObjectRelease(v107);
    }
    sub_1003088C4(v172, v171, v173, v29 - a5);
    v110 = swift_getKeyPath(&unk_100719C58);
    v177 = v7;
    ObservationRegistrar.access<A, B>(_:keyPath:)(&v177, v110, v22);
    swift_release(v110);
    v111 = *(_QWORD *)(v7 + 216);
    v112 = swift_getKeyPath(&unk_100719CA8);
    __chkstk_darwin(v112);
    *((_QWORD *)&v162 - 4) = v7;
    *((_QWORD *)&v162 - 3) = v111;
    *((_QWORD *)&v162 - 2) = v168;
    *((_BYTE *)&v162 - 8) = -127;
    v177 = v7;
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v177, v112, sub_1002FF878, &v162 - 3, (char *)&type metadata for () + 8, v22);
    swift_release(v112);
    v113 = v163;
    if (!(_DWORD)v163)
    {
      swift_retain(v76);
      sub_1003041DC(v114, 0);
      sub_10028C694(v76);
    }
    v115 = swift_getKeyPath(&unk_100719CF8);
    v177 = v7;
    ObservationRegistrar.access<A, B>(_:keyPath:)(&v177, v115, v22);
    swift_release(v115);
    v116 = v174;
    if (*(unsigned __int8 *)(v7 + 280) >= 2u)
    {
      v117 = swift_unknownObjectWeakLoadStrong(v7 + 32);
      if (v117)
      {
        v118 = v117;
        v167 = v76;
        v173 = *(_QWORD *)(v7 + 40);
        v119 = swift_getObjectType();
        v120 = swift_getKeyPath(&unk_100719C58);
        v177 = v7;
        v121 = v170;
        ObservationRegistrar.access<A, B>(_:keyPath:)(&v177, v120, v170);
        swift_release(v120);
        v122 = *(_QWORD *)(v7 + 216);
        v123 = swift_getKeyPath(&unk_100719CD0);
        v177 = v7;
        v116 = v174;
        ObservationRegistrar.access<A, B>(_:keyPath:)(&v177, v123, v121);
        swift_release(v123);
        v124 = *(_QWORD *)(v7 + 256);
        v125 = (uint64_t)v165;
        *v165 = v122;
        v113 = v163;
        *(_QWORD *)(v125 + 8) = v168;
        *(_QWORD *)(v125 + 16) = v124;
        swift_storeEnumTagMultiPayload(v125, v164, 6);
        v76 = v167;
        dispatch thunk of ReadingAnalyticsEventSubmitting.submit(event:)(v125, v119, v173);
        swift_unknownObjectRelease(v118);
        v117 = sub_10030A0A8(v125);
      }
      if (v113)
      {
        v126 = Logger.logObject.getter(v117);
        v127 = static os_log_type_t.error.getter(v126);
        v128 = os_log_type_enabled(v126, v127);
        v22 = v170;
        if (v128)
        {
          v129 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v129 = 0;
          _os_log_impl((void *)&_mh_execute_header, v126, v127, "We must have the chapter scrubbing state here", v129, 2u);
          swift_slowDealloc(v129, -1, -1);
        }

      }
      else
      {
        v161 = swift_getKeyPath(&unk_100719C58);
        v177 = v7;
        swift_retain(v76);
        v22 = v170;
        ObservationRegistrar.access<A, B>(_:keyPath:)(&v177, v161, v170);
        swift_release(v161);
        sub_10030530C(v76, *(_QWORD *)(v7 + 216), v168, 1);
        sub_10028C694(v76);
      }
    }
LABEL_88:
    v158 = swift_getKeyPath(&unk_100719E80);
    __chkstk_darwin(v158);
    *((_QWORD *)&v162 - 2) = v7;
    *((_QWORD *)&v162 - 1) = v76;
    v177 = v7;
    sub_10028C678(v76);
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v177, v158, sub_10030A904, &v162 - 2, (char *)&type metadata for () + 8, v22);
    sub_10028C694(v76);
    swift_release(v158);
    v159 = swift_getKeyPath(&unk_100719DE8);
    __chkstk_darwin(v159);
    *((_QWORD *)&v162 - 2) = v7;
    *((double *)&v162 - 1) = v30;
    v177 = v7;
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v177, v159, sub_10030A098, &v162 - 2, (char *)&type metadata for () + 8, v22);
    swift_release(v159);
    v147 = v169;
    v148 = v116;
    goto LABEL_89;
  }
  v144 = swift_getKeyPath(&unk_100719E80);
  __chkstk_darwin(v144);
  *((_QWORD *)&v162 - 2) = v7;
  *((_QWORD *)&v162 - 1) = 0x8000000000000008;
  v178 = v7;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v178, v144, sub_10030A904, &v162 - 2, (char *)&type metadata for () + 8, v22);
  swift_release(v144);
  v145 = swift_getKeyPath(&unk_100719CF8);
  __chkstk_darwin(v145);
  *((_QWORD *)&v162 - 4) = v7;
  *((_QWORD *)&v162 - 3) = 0;
  *((_BYTE *)&v162 - 16) = 2;
  v178 = v7;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v178, v145, sub_10030A918, &v162 - 3, (char *)&type metadata for () + 8, v22);
  swift_release(v145);
  v146 = swift_getKeyPath(&unk_100719CA8);
  __chkstk_darwin(v146);
  *((_QWORD *)&v162 - 3) = 0;
  *((_QWORD *)&v162 - 2) = 0;
  *((_QWORD *)&v162 - 4) = v7;
  *((_BYTE *)&v162 - 8) = -64;
  v178 = v7;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v178, v146, sub_1002FF878, &v162 - 3, (char *)&type metadata for () + 8, v22);
  swift_release(v146);
  v147 = v169;
  v148 = v174;
LABEL_89:
  sub_100309A54(v147, v148);
  return sub_10028C694(v76);
}

Swift::Int sub_100308168(uint64_t a1, char a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v10;
  char v11;
  Swift::Double v12;
  uint64_t KeyPath;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  Swift::Int v22;
  uint64_t v23;
  uint64_t v24;
  NSObject *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  os_log_type_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  Swift::Int v40;
  uint64_t v41;
  uint64_t v42;
  NSObject *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  os_log_type_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  uint64_t v54;
  Swift::String v55;
  unint64_t v56;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD v66[3];

  v5 = v4;
  v10 = a1;
  v11 = a2;
  if (a2 == -1)
  {
    KeyPath = swift_getKeyPath(&unk_100719CF8);
    v66[0] = v4;
    v14 = sub_100008DB0(&qword_1009D3B60, type metadata accessor for REActionMenuState, (uint64_t)&protocol conformance descriptor for REActionMenuState);
    ObservationRegistrar.access<A, B>(_:keyPath:)(v66, KeyPath, v14);
    swift_release(KeyPath);
    v10 = *(_QWORD *)(v4 + 272);
    v11 = *(_BYTE *)(v4 + 280);
    sub_100300604(v10, v11);
    if ((a4 & 1) == 0)
      goto LABEL_3;
  }
  else if ((a4 & 1) == 0)
  {
LABEL_3:
    v12 = *(double *)&a3;
    sub_10030A5CC(a1, a2);
    goto LABEL_6;
  }
  v15 = swift_getKeyPath(&unk_100719E10);
  v66[0] = v4;
  sub_10030A5CC(a1, a2);
  v16 = sub_100008DB0(&qword_1009D3B60, type metadata accessor for REActionMenuState, (uint64_t)&protocol conformance descriptor for REActionMenuState);
  ObservationRegistrar.access<A, B>(_:keyPath:)(v66, v15, v16);
  swift_release(v15);
  swift_beginAccess(v4 + 320, v66, 0, 0);
  v12 = *(double *)(v4 + 320);
LABEL_6:
  if (v11)
  {
    if (v11 != 1)
    {
      if (qword_1009CDE60 != -1)
        swift_once(&qword_1009CDE60, sub_1002FC71C);
      v17 = type metadata accessor for Logger(0);
      v18 = sub_100048F64(v17, (uint64_t)qword_1009D9468);
      v19 = Logger.logObject.getter(v18);
      v20 = static os_log_type_t.error.getter(v19);
      if (os_log_type_enabled(v19, v20))
      {
        v21 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v21 = 0;
        _os_log_impl((void *)&_mh_execute_header, v19, v20, "We should not be in idle state while scrubbing. Treating as Chapter scrub", v21, 2u);
        swift_slowDealloc(v21, -1, -1);
      }

    }
    v22 = REActionMenuState.page(at:)(v12);
    if (qword_1009CDE60 != -1)
      swift_once(&qword_1009CDE60, sub_1002FC71C);
    v23 = type metadata accessor for Logger(0);
    sub_100048F64(v23, (uint64_t)qword_1009D9468);
    v24 = swift_retain_n(v5, 2);
    v25 = Logger.logObject.getter(v24);
    v29 = static os_log_type_t.debug.getter(v25, v26, v27, v28);
    if (os_log_type_enabled(v25, v29))
    {
      v30 = swift_slowAlloc(32, -1);
      v58 = swift_slowAlloc(32, -1);
      v61 = v58;
      *(_DWORD *)v30 = 136315650;
      v31 = sub_10004CFD4((uint64_t *)&unk_1009D1970);
      v32 = swift_allocObject(v31, 72, 7);
      *(_OWORD *)(v32 + 16) = xmmword_10070CCA0;
      *(_QWORD *)(v32 + 56) = &type metadata for Double;
      *(_QWORD *)(v32 + 64) = &protocol witness table for Double;
      *(Swift::Double *)(v32 + 32) = v12;
      v33 = String.init(format:_:)(1714695717, 0xE400000000000000, v32);
      v60 = v10;
      v35 = v34;
      v65 = sub_100040F58(v33, v34, &v61);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v65, v66, v30 + 4, v30 + 12);
      swift_bridgeObjectRelease(v35);
      *(_WORD *)(v30 + 12) = 2048;
      v65 = v22;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v65, v66, v30 + 14, v30 + 22);
      *(_WORD *)(v30 + 22) = 2048;
      v36 = swift_getKeyPath(&unk_100719CD0);
      v65 = v5;
      v37 = sub_100008DB0(&qword_1009D3B60, type metadata accessor for REActionMenuState, (uint64_t)&protocol conformance descriptor for REActionMenuState);
      ObservationRegistrar.access<A, B>(_:keyPath:)(&v65, v36, v37);
      swift_release(v36);
      v38 = *(_QWORD *)(v5 + 256);
      swift_release(v5);
      v65 = v38;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v65, v66, v30 + 24, v30 + 32);
      swift_release(v5);
      _os_log_impl((void *)&_mh_execute_header, v25, v29, "chapter scrub position %s produces page %ld (pageCount %ld)", (uint8_t *)v30, 0x20u);
      swift_arrayDestroy(v58, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v58, -1, -1);
      swift_slowDealloc(v30, -1, -1);

      sub_100309A54(v60, v11);
    }
    else
    {
      swift_release_n(v5, 2);
      sub_100309A54(v10, v11);

    }
  }
  else
  {
    v39 = *(_QWORD *)(v4 + 144);
    sub_10044B410(v12);
    v22 = v40;
    if (qword_1009CDE60 != -1)
      swift_once(&qword_1009CDE60, sub_1002FC71C);
    v41 = type metadata accessor for Logger(0);
    sub_100048F64(v41, (uint64_t)qword_1009D9468);
    v42 = swift_retain_n(v4, 2);
    v43 = Logger.logObject.getter(v42);
    v47 = static os_log_type_t.debug.getter(v43, v44, v45, v46);
    if (os_log_type_enabled(v43, v47))
    {
      v48 = swift_slowAlloc(42, -1);
      v59 = swift_slowAlloc(64, -1);
      v65 = v59;
      *(_DWORD *)v48 = 136315906;
      v49 = sub_10004CFD4((uint64_t *)&unk_1009D1970);
      v50 = swift_allocObject(v49, 72, 7);
      *(_OWORD *)(v50 + 16) = xmmword_10070CCA0;
      *(_QWORD *)(v50 + 56) = &type metadata for Double;
      *(_QWORD *)(v50 + 64) = &protocol witness table for Double;
      *(Swift::Double *)(v50 + 32) = v12;
      v51 = String.init(format:_:)(1714695717, 0xE400000000000000, v50);
      v53 = v52;
      v61 = sub_100040F58(v51, v52, &v65);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v61, &v62, v48 + 4, v48 + 12);
      swift_bridgeObjectRelease(v53);
      *(_WORD *)(v48 + 12) = 2048;
      v61 = v22;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v61, &v62, v48 + 14, v48 + 22);
      *(_WORD *)(v48 + 22) = 2080;
      v54 = *(_QWORD *)(v39 + OBJC_IVAR____TtC5Books24ScrubberMarkerController_markerPageRange);
      v63 = *(_QWORD *)(v39 + OBJC_IVAR____TtC5Books24ScrubberMarkerController_markerPageRange + 8);
      v64 = v54;
      v61 = 0;
      v62 = 0xE000000000000000;
      _print_unlocked<A, B>(_:_:)(&v64, &v61, &type metadata for Int, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
      v55._countAndFlagsBits = 3026478;
      v55._object = (void *)0xE300000000000000;
      String.append(_:)(v55);
      _print_unlocked<A, B>(_:_:)(&v63, &v61, &type metadata for Int, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
      v56 = v62;
      v61 = sub_100040F58(v61, v62, &v65);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v61, &v62, v48 + 24, v48 + 32);
      swift_release_n(v5, 2);
      swift_bridgeObjectRelease(v56);
      *(_WORD *)(v48 + 32) = 2048;
      v61 = v10;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v61, &v62, v48 + 34, v48 + 42);
      _os_log_impl((void *)&_mh_execute_header, v43, v47, "page scrub position %s produces page %ld (in range %s starting page %ld", (uint8_t *)v48, 0x2Au);
      swift_arrayDestroy(v59, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v59, -1, -1);
      swift_slowDealloc(v48, -1, -1);

    }
    else
    {

      swift_release_n(v4, 2);
    }
  }
  return v22;
}

void sub_1003088C4(uint64_t a1, char a2, char a3, double a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t KeyPath;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  os_log_type_t v30;
  uint8_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  _BYTE v39[16];
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  double v43;
  uint8_t *v44;
  _QWORD v45[3];
  uint64_t v46;
  uint64_t v47[2];

  v5 = v4;
  if (a2)
  {
    if (a2 == 1)
    {
      KeyPath = swift_getKeyPath(&unk_100719DC0);
      __chkstk_darwin(KeyPath);
      v42 = v4;
      v43 = a4;
      v45[0] = v4;
      v9 = sub_100008DB0(&qword_1009D3B60, type metadata accessor for REActionMenuState, (uint64_t)&protocol conformance descriptor for REActionMenuState);
      ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(v45, KeyPath, sub_10030A92C, &v40, (char *)&type metadata for () + 8, v9);
      swift_release(KeyPath);
      v10 = swift_getKeyPath(&unk_100719CF8);
      __chkstk_darwin(v10);
      v40 = v4;
      v41 = a1;
      LOBYTE(v42) = 1;
      v45[0] = v4;
      swift_retain(a1);
      ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(v45, v10, sub_10030A918, v39, (char *)&type metadata for () + 8, v9);
      sub_100309A54(a1, 1);
    }
    else
    {
      v17 = swift_getKeyPath(&unk_100719DC0);
      __chkstk_darwin(v17);
      v42 = v4;
      v43 = 0.0;
      v45[0] = v4;
      v18 = sub_100008DB0(&qword_1009D3B60, type metadata accessor for REActionMenuState, (uint64_t)&protocol conformance descriptor for REActionMenuState);
      ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(v45, v17, sub_10030A92C, &v40, (char *)&type metadata for () + 8, v18);
      swift_release(v17);
      v10 = swift_getKeyPath(&unk_100719CF8);
      __chkstk_darwin(v10);
      v40 = v4;
      v41 = a1;
      LOBYTE(v42) = 2;
      v45[0] = v4;
      ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(v45, v10, sub_10030A918, v39, (char *)&type metadata for () + 8, v18);
    }
    v11 = v10;
  }
  else
  {
    v13 = swift_getKeyPath(&unk_100719DC0);
    __chkstk_darwin(v13);
    v42 = v4;
    v43 = a4;
    v45[0] = v4;
    v14 = sub_100008DB0(&qword_1009D3B60, type metadata accessor for REActionMenuState, (uint64_t)&protocol conformance descriptor for REActionMenuState);
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(v45, v13, sub_10030A92C, &v40, (char *)&type metadata for () + 8, v14);
    swift_release(v13);
    v15 = swift_getKeyPath(&unk_100719CF8);
    v16 = v15;
    if ((a3 & 1) != 0)
    {
      __chkstk_darwin(v15);
      v40 = v4;
      v41 = a1;
      LOBYTE(v42) = 0;
      v45[0] = v4;
      ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(v45, v16, sub_10030A918, v39, (char *)&type metadata for () + 8, v14);
      v11 = v16;
    }
    else
    {
      v45[0] = v4;
      ObservationRegistrar.access<A, B>(_:keyPath:)(v45, v15, v14);
      swift_release(v16);
      v19 = *(_QWORD *)(v4 + 272);
      v20 = *(unsigned __int8 *)(v4 + 280);
      v21 = swift_getKeyPath(&unk_100719C58);
      v45[0] = v4;
      sub_100300604(v19, v20);
      ObservationRegistrar.access<A, B>(_:keyPath:)(v45, v21, v14);
      swift_release(v21);
      swift_beginAccess(v4 + 216, v45, 0, 0);
      if (v20)
      {
        v22 = *(_QWORD *)(v4 + 216);
        sub_100309A54(v19, v20);
        v19 = v22;
      }
      v23 = swift_getKeyPath(&unk_100719CF8);
      __chkstk_darwin(v23);
      v40 = v4;
      v41 = v19;
      LOBYTE(v42) = 0;
      v47[0] = v4;
      ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(v47, v23, sub_10030A918, v39, (char *)&type metadata for () + 8, v14);
      v11 = v23;
    }
  }
  swift_release(v11);
  if (qword_1009CDE60 != -1)
    swift_once(&qword_1009CDE60, sub_1002FC71C);
  v24 = type metadata accessor for Logger(0);
  sub_100048F64(v24, (uint64_t)qword_1009D9468);
  v25 = swift_retain_n(v4, 2);
  v26 = Logger.logObject.getter(v25);
  v30 = static os_log_type_t.debug.getter(v26, v27, v28, v29);
  if (os_log_type_enabled(v26, v30))
  {
    v31 = (uint8_t *)swift_slowAlloc(12, -1);
    v32 = swift_slowAlloc(32, -1);
    v47[0] = v32;
    *(_DWORD *)v31 = 136315138;
    v44 = v31 + 4;
    v33 = swift_getKeyPath(&unk_100719CF8);
    v46 = v4;
    v34 = sub_100008DB0(&qword_1009D3B60, type metadata accessor for REActionMenuState, (uint64_t)&protocol conformance descriptor for REActionMenuState);
    ObservationRegistrar.access<A, B>(_:keyPath:)(&v46, v33, v34);
    swift_release(v33);
    v35 = *(_QWORD *)(v4 + 272);
    LOBYTE(v33) = *(_BYTE *)(v5 + 280);
    sub_100300604(*(_QWORD *)(v5 + 272), v33);
    v36 = ScrubberState.description.getter(v35, v33);
    v38 = v37;
    sub_100309A54(v35, v33);
    v46 = sub_100040F58(v36, v38, v47);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v46, v47, v44, v31 + 12);
    swift_release_n(v5, 2);
    swift_bridgeObjectRelease(v38);
    _os_log_impl((void *)&_mh_execute_header, v26, v30, "updated scrubberState is %s", v31, 0xCu);
    swift_arrayDestroy(v32, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v32, -1, -1);
    swift_slowDealloc(v31, -1, -1);

  }
  else
  {

    swift_release_n(v4, 2);
  }
}

Swift::Double __swiftcall REActionMenuState.scrubberStartingPosition()()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  Swift::Double result;
  uint64_t v7;
  _QWORD v8[3];

  KeyPath = swift_getKeyPath(&unk_100719C58);
  v8[0] = v0;
  v2 = sub_100008DB0(&qword_1009D3B60, type metadata accessor for REActionMenuState, (uint64_t)&protocol conformance descriptor for REActionMenuState);
  ObservationRegistrar.access<A, B>(_:keyPath:)(v8, KeyPath, v2);
  swift_release(KeyPath);
  swift_beginAccess(v0 + 216, v8, 0, 0);
  v3 = *(_QWORD *)(v0 + 216);
  v4 = swift_getKeyPath(&unk_100719CD0);
  v7 = v0;
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v7, v4, v2);
  swift_release(v4);
  v5 = *(_QWORD *)(v0 + 256);
  result = 0.0;
  if (v5 >= 1 && v3 >= 1 && v5 >= v3 && (v3 != 1 || v5 != 1))
    return (double)(v3 - 1) / (double)(v5 - 1);
  return result;
}

double REActionMenuState.setupMonitoring(safeAreaInsetsPublisher:annotationProvider:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t ObjectType;
  _QWORD v13[3];

  v4 = v3;
  v13[0] = a1;
  v7 = swift_allocObject(&unk_1008FBE70, 24, 7);
  swift_weakInit(v7 + 16, v3);
  v8 = sub_10004CFD4(&qword_1009D94A8);
  v9 = sub_100030B34(&qword_1009D94B0, &qword_1009D94A8, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
  v10 = Publisher<>.sink(receiveValue:)(sub_10030A14C, v7, v8, v9);
  swift_release(v7);
  swift_beginAccess(v4 + 336, v13, 33, 0);
  AnyCancellable.store(in:)(v4 + 336);
  swift_endAccess(v13);
  swift_release(v10);
  ObjectType = swift_getObjectType();
  sub_100309AB8(a2, v4, ObjectType, a3);
  return sub_100309140();
}

double sub_100309140()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  double result;
  _QWORD v21[3];
  id v22;

  v1 = v0;
  v2 = sub_10004CFD4((uint64_t *)&unk_1009D4AE0);
  __chkstk_darwin(v2);
  v4 = (char *)v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10004CFD4(&qword_1009D9D28);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21[0] = *(_QWORD *)(v0 + 288);
  v9 = sub_10004CFD4((uint64_t *)&unk_1009CEC60);
  v10 = sub_100030B34((unint64_t *)&qword_1009D94A0, (uint64_t *)&unk_1009CEC60, (uint64_t)&protocol conformance descriptor for CurrentValueSubject<A, B>);
  v21[0] = Publisher.eraseToAnyPublisher()(v9, v10);
  v11 = sub_100009E04(0, (unint64_t *)&qword_1009CEC30, OS_dispatch_queue_ptr);
  v22 = (id)static OS_dispatch_queue.main.getter(v11);
  v12 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v4, 1, 1, v12);
  v13 = sub_10004CFD4(&qword_1009D9D30);
  v14 = sub_100030B34(&qword_1009E7730, &qword_1009D9D30, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
  v15 = sub_1001EDDD0();
  Publisher.receive<A>(on:options:)(&v22, v4, v13, v11, v14, v15);
  sub_1001EDE18((uint64_t)v4);

  swift_release(v21[0]);
  v16 = swift_allocObject(&unk_1008FBE70, 24, 7);
  swift_weakInit(v16 + 16, v0);
  v17 = sub_100030B34(&qword_1009D9D38, &qword_1009D9D28, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  v18 = Publisher<>.sink(receiveValue:)(sub_10030A404, v16, v5, v17);
  v19 = swift_release(v16);
  (*(void (**)(char *, uint64_t, __n128))(v6 + 8))(v8, v5, v19);
  v1 += 336;
  swift_beginAccess(v1, v21, 33, 0);
  AnyCancellable.store(in:)(v1);
  swift_endAccess(v21);
  *(_QWORD *)&result = swift_release(v18).n128_u64[0];
  return result;
}

uint64_t sub_1003093A4(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t KeyPath;
  uint64_t v11;
  _QWORD v12[4];
  _BYTE v13[24];

  v2 = *a1;
  v3 = a1[1];
  v4 = a1[2];
  v5 = a1[3];
  v6 = a2 + 16;
  swift_beginAccess(a2 + 16, v13, 0, 0);
  result = swift_weakLoadStrong(v6);
  if (result)
  {
    v8 = result;
    v9 = *(_QWORD *)(result + 120);
    swift_retain(v9);
    swift_release(v8);
    KeyPath = swift_getKeyPath(&unk_100719BC0);
    v11 = swift_getKeyPath(&unk_100719BE8);
    v12[0] = v2;
    v12[1] = v3;
    v12[2] = v4;
    v12[3] = v5;
    return static Published.subscript.setter(v12, v9, KeyPath, v11);
  }
  return result;
}

void sub_100309450(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t KeyPath;
  uint64_t v9;
  _QWORD v10[6];
  uint64_t v11;
  char v12[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v12, 0, 0);
  Strong = swift_weakLoadStrong(v2);
  if (Strong)
  {
    v4 = Strong;
    v5 = dispatch thunk of BookAnnotationEntity.totalBookmarks.getter();
    v6 = dispatch thunk of BookAnnotationEntity.totalHighlights.getter(v5);
    v7 = v5 + v6;
    if (__OFADD__(v5, v6))
    {
      __break(1u);
    }
    else
    {
      KeyPath = swift_getKeyPath(&unk_10071A1A0);
      __chkstk_darwin(KeyPath);
      v10[2] = v4;
      v10[3] = v7;
      v11 = v4;
      v9 = sub_100008DB0(&qword_1009D3B60, type metadata accessor for REActionMenuState, (uint64_t)&protocol conformance descriptor for REActionMenuState);
      ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v11, KeyPath, sub_10030A954, v10, (char *)&type metadata for () + 8, v9);
      swift_release(v4);
      swift_release(KeyPath);
    }
  }
}

double sub_100309564(char *a1, uint64_t a2)
{
  char v2;
  uint64_t v3;
  uint64_t Strong;
  double result;
  uint64_t v6;
  uint64_t KeyPath;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v11[3];
  char v12;
  uint64_t v13;
  char v14[24];

  v2 = *a1;
  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v14, 0, 0);
  Strong = swift_weakLoadStrong(v3);
  if (Strong)
  {
    v6 = Strong;
    KeyPath = swift_getKeyPath(&unk_100719D20);
    __chkstk_darwin(KeyPath);
    v11[2] = v6;
    v12 = v2;
    v13 = v6;
    v8 = sub_100008DB0(&qword_1009D3B60, type metadata accessor for REActionMenuState, (uint64_t)&protocol conformance descriptor for REActionMenuState);
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v13, KeyPath, sub_10030A40C, v11, (char *)&type metadata for () + 8, v8);
    swift_release(KeyPath);
    v9 = sub_1003031E4();
    sub_1002FE0B8(v9, v10);
    *(_QWORD *)&result = swift_release(v6).n128_u64[0];
  }
  return result;
}

uint64_t sub_100309670@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t result;
  char v7;
  uint64_t v8;
  char v9;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_100719E38);
  v5 = swift_getKeyPath(&unk_100719E60);
  static Published.subscript.getter(&v8, v3, KeyPath, v5);
  swift_release(KeyPath);
  result = swift_release(v5);
  v7 = v9;
  *(_QWORD *)a2 = v8;
  *(_BYTE *)(a2 + 8) = v7;
  return result;
}

uint64_t sub_1003096F4(uint64_t a1)
{
  uint64_t v1;
  char v2;

  v1 = *(_QWORD *)a1;
  v2 = *(_BYTE *)(a1 + 8);
  sub_100300604(*(_QWORD *)a1, v2);
  sub_10042CAB4(v1, v2);
  return sub_100309A54(v1, v2);
}

uint64_t sub_100309748(uint64_t a1, unint64_t a2, uint64_t a3)
{
  unint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD v13[6];
  uint64_t v14;
  unint64_t v15;
  _QWORD v16[5];

  v16[3] = type metadata accessor for BookActionMenuDataSource();
  v16[4] = &off_1008FF818;
  v16[0] = a3;
  if (a2)
    v6 = a2;
  else
    v6 = sub_1001DF9C8(_swiftEmptyArrayStorage);
  v15 = v6;
  swift_bridgeObjectRetain_n(v6, 2);
  swift_retain(a3);
  swift_bridgeObjectRetain(a2);
  v14 = sub_1003A8C54(v6);
  __chkstk_darwin(v14);
  v13[2] = &v15;
  v13[3] = &v14;
  v13[4] = v16;
  v7 = sub_1002FBA04((void (*)(uint64_t *))sub_10030A630, (uint64_t)v13, a1);
  swift_bridgeObjectRelease(v7);
  v8 = v14;
  swift_bridgeObjectRetain(v14);
  v10 = sub_1002FBAF4(v9, (uint64_t *)&v15);
  swift_bridgeObjectRelease_n(v8, 2);
  swift_bridgeObjectRelease(v10);
  swift_bridgeObjectRelease(v6);
  v11 = v15;
  _s5Books15CurrentPageViewVwxx_0(v16);
  return v11;
}

uint64_t sub_100309878(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  void (*v16)(uint64_t, uint64_t, __n128);
  __n128 v17;
  unint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[3];
  _QWORD v28[5];

  v24 = a2;
  v25 = a4;
  v8 = sub_10004CFD4(&qword_1009D9D60);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for BookActionMenuDataSource();
  v28[3] = v12;
  v28[4] = &off_1008FF818;
  v28[0] = a1;
  v13 = a5 + OBJC_IVAR____TtC5Books21ChapterScrubbingState__pageIndeces;
  v27[0] = _swiftEmptyArrayStorage;
  v14 = sub_10004CFD4(&qword_1009D30B0);
  Published.init(initialValue:)(v27, v14);
  (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(v13, v11, v8);
  v15 = (uint64_t *)(a5 + OBJC_IVAR____TtC5Books21ChapterScrubbingState_pageImageLoaders);
  *v15 = sub_1001DF9C8(_swiftEmptyArrayStorage);
  swift_beginAccess(v13, v27, 33, 0);
  v16 = *(void (**)(uint64_t, uint64_t, __n128))(v9 + 8);
  v17 = swift_bridgeObjectRetain(a3);
  v16(v13, v8, v17);
  v26 = a3;
  Published.init(initialValue:)(&v26, v14);
  swift_endAccess(v27);
  v18 = sub_1001DF9C8(_swiftEmptyArrayStorage);
  v19 = sub_10003F198(v28, v12);
  v20 = sub_100309748(a3, v18, *v19);
  swift_bridgeObjectRelease(a3);
  swift_release(v24);
  swift_bridgeObjectRelease(v18);
  _s5Books15CurrentPageViewVwxx_0(v28);
  swift_beginAccess(v15, v27, 1, 0);
  v21 = *v15;
  *v15 = v20;
  swift_bridgeObjectRelease(v21);
  *(_QWORD *)(a5 + OBJC_IVAR____TtC5Books21ChapterScrubbingState_currentContentSnapshotView) = v25;
  return a5;
}

uint64_t sub_100309A54(uint64_t result, char a2)
{
  if (a2 == 1)
    return swift_release(result);
  return result;
}

uint64_t sub_100309A78()
{
  return sub_10030A5E0();
}

uint64_t sub_100309A8C()
{
  uint64_t v0;

  return sub_100300618(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_BYTE *)(v0 + 32));
}

double sub_100309AA8()
{
  uint64_t v0;
  double result;

  result = *(double *)(v0 + 24);
  *(double *)(*(_QWORD *)(v0 + 16) + 304) = result;
  return result;
}

void sub_100309AB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t KeyPath;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __n128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD v36[3];
  id v37[2];

  v7 = sub_10004CFD4((uint64_t *)&unk_1009D4AE0);
  __chkstk_darwin(v7);
  v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_10004CFD4(&qword_1009D9D40);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = a4;
  v14 = dispatch thunk of AnnotationProviding.bookAnnotationEntity.getter(a3, a4);
  v15 = dispatch thunk of BookAnnotationEntity.totalBookmarks.getter();
  v16 = dispatch thunk of BookAnnotationEntity.totalHighlights.getter(v15);
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
  }
  else
  {
    KeyPath = swift_getKeyPath(&unk_10071A1A0);
    v33 = v10;
    v34 = v11;
    v19 = KeyPath;
    __chkstk_darwin(KeyPath);
    *(&v33 - 2) = a2;
    *(&v33 - 1) = v17;
    v36[0] = a2;
    v20 = sub_100008DB0(&qword_1009D3B60, type metadata accessor for REActionMenuState, (uint64_t)&protocol conformance descriptor for REActionMenuState);
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(v36, v19, sub_10030A954, &v33 - 4, (char *)&type metadata for () + 8, v20);
    swift_release(v14);
    v21 = swift_release(v19);
    v36[0] = dispatch thunk of AnnotationProviding.annotationsChangePublisher.getter(a3, v35, v21);
    v22 = sub_100009E04(0, (unint64_t *)&qword_1009CEC30, OS_dispatch_queue_ptr);
    v37[0] = (id)static OS_dispatch_queue.main.getter(v22);
    v23 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v9, 1, 1, v23);
    v24 = sub_10004CFD4(&qword_1009D9D48);
    v25 = sub_100030B34(&qword_1009D9D50, &qword_1009D9D48, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
    v26 = sub_1001EDDD0();
    Publisher.receive<A>(on:options:)(v37, v9, v24, v22, v25, v26);
    sub_1001EDE18((uint64_t)v9);

    swift_release(v36[0]);
    v27 = swift_allocObject(&unk_1008FBE70, 24, 7);
    swift_weakInit(v27 + 16, a2);
    v28 = sub_100030B34(&qword_1009D9D58, &qword_1009D9D40, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
    v29 = v33;
    v30 = Publisher<>.sink(receiveValue:)(sub_10030A41C, v27, v33, v28);
    v31 = swift_release(v27);
    (*(void (**)(char *, uint64_t, __n128))(v34 + 8))(v13, v29, v31);
    v32 = a2 + 336;
    swift_beginAccess(v32, v36, 33, 0);
    AnyCancellable.store(in:)(v32);
    swift_endAccess(v36);
    swift_release(v30);
  }
}

unint64_t sub_100309DD8(unint64_t a1, unint64_t a2, char a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7)
{
  unint64_t v8;
  BOOL v9;
  unint64_t v10;
  uint64_t v12;
  unint64_t v13;
  NSObject *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  os_log_type_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v28;
  uint64_t v29;

  if (a5)
  {
    if (a5 == 1)
    {
      v8 = 0x8000000000000018;
    }
    else
    {
      v8 = 0x8000000000000008;
      if (a3 == 1 && a6 != a7)
      {
        swift_retain(a2);
        v8 = a2;
      }
    }
  }
  else
  {
    v9 = a1 == 0x8000000000000010 && a3 == 0;
    v10 = 0x8000000000000018;
    if (v9)
      v10 = 0x8000000000000010;
    if (a6 == a7)
      v8 = v10;
    else
      v8 = 0x8000000000000010;
  }
  if (qword_1009CDE60 != -1)
    swift_once(&qword_1009CDE60, sub_1002FC71C);
  v12 = type metadata accessor for Logger(0);
  sub_100048F64(v12, (uint64_t)qword_1009D9468);
  sub_10028C678(a1);
  sub_10028C678(v8);
  sub_10028C678(a1);
  v13 = sub_10028C678(v8);
  v14 = Logger.logObject.getter(v13);
  v18 = static os_log_type_t.debug.getter(v14, v15, v16, v17);
  if (os_log_type_enabled(v14, v18))
  {
    v19 = swift_slowAlloc(22, -1);
    v20 = swift_slowAlloc(64, -1);
    v29 = v20;
    *(_DWORD *)v19 = 136315394;
    sub_10028C678(a1);
    v21 = ActionMenuState.description.getter(a1);
    v23 = v22;
    sub_10028C694(a1);
    v28 = sub_100040F58(v21, v23, &v29);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v28, &v29, v19 + 4, v19 + 12);
    swift_bridgeObjectRelease(v23);
    sub_10028C694(a1);
    sub_10028C694(a1);
    *(_WORD *)(v19 + 12) = 2080;
    sub_10028C678(v8);
    v24 = ActionMenuState.description.getter(v8);
    v26 = v25;
    sub_10028C694(v8);
    v28 = sub_100040F58(v24, v26, &v29);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v28, &v29, v19 + 14, v19 + 22);
    swift_bridgeObjectRelease(v26);
    sub_10028C694(v8);
    sub_10028C694(v8);
    _os_log_impl((void *)&_mh_execute_header, v14, v18, "previousState: %s nextState: %s", (uint8_t *)v19, 0x16u);
    swift_arrayDestroy(v20, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v20, -1, -1);
    swift_slowDealloc(v19, -1, -1);
  }
  else
  {
    sub_10028C694(a1);
    sub_10028C694(a1);
    sub_10028C694(v8);
    sub_10028C694(v8);
  }

  return v8;
}

double sub_10030A098()
{
  uint64_t v0;
  double result;

  result = *(double *)(v0 + 24);
  *(double *)(*(_QWORD *)(v0 + 16) + 312) = result;
  return result;
}

uint64_t sub_10030A0A8(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for AnalyticsEvent.Reading(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_10030A0E4()
{
  unint64_t result;

  result = qword_1009E8EE0;
  if (!qword_1009E8EE0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for CGFloat, &type metadata for CGFloat);
    atomic_store(result, (unint64_t *)&qword_1009E8EE0);
  }
  return result;
}

uint64_t sub_10030A128()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10030A14C(uint64_t *a1)
{
  uint64_t v1;

  return sub_1003093A4(a1, v1);
}

uint64_t sub_10030A15C()
{
  return type metadata accessor for EdgeInsetPublisher(0);
}

uint64_t type metadata accessor for EdgeInsetPublisher(uint64_t a1)
{
  return sub_10002C92C(a1, (uint64_t *)&unk_1009D94E0, (uint64_t)&nominal type descriptor for EdgeInsetPublisher);
}

void sub_10030A178(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  sub_10030A1E4(319);
  if (v3 <= 0x3F)
  {
    v4 = *(_QWORD *)(v2 - 8) + 64;
    swift_updateClassMetadata2(a1, 256, 1, &v4, a1 + 80);
  }
}

void sub_10030A1E4(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1009D94F0)
  {
    type metadata accessor for UIEdgeInsets(255);
    v3 = type metadata accessor for Published(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1009D94F0);
  }
}

uint64_t type metadata accessor for GatedActionHandler()
{
  return objc_opt_self(_TtC5BooksP33_32ABA65274D463EF405FFF160E47F6AC18GatedActionHandler);
}

uint64_t sub_10030A258()
{
  return type metadata accessor for REActionMenuState(0);
}

uint64_t sub_10030A260(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[35];

  v4[0] = &unk_10071A0A8;
  v4[1] = &unk_10071A0C0;
  v4[2] = &unk_10071A0C0;
  v4[3] = &unk_10071A0C0;
  v4[4] = &unk_10071A0D8;
  v4[5] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[6] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[7] = (char *)&value witness table for Builtin.Int64 + 64;
  v4[8] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[9] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[10] = &unk_10071A0F0;
  v4[11] = &unk_10071A108;
  v4[12] = &unk_10071A0C0;
  v4[13] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[14] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[15] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[16] = (char *)&value witness table for Builtin.Int64 + 64;
  v4[17] = &unk_10071A108;
  v4[18] = &unk_10071A120;
  v4[19] = (char *)&value witness table for Builtin.Int64 + 64;
  v4[20] = &unk_10071A108;
  v4[21] = &unk_10071A138;
  v4[22] = &unk_10071A108;
  v4[23] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[24] = &unk_10071A108;
  v4[25] = &unk_10071A108;
  v4[26] = &unk_10071A108;
  v4[27] = (char *)&value witness table for Builtin.Int64 + 64;
  v4[28] = (char *)&value witness table for Builtin.Int64 + 64;
  v4[29] = (char *)&value witness table for Builtin.Int64 + 64;
  v4[30] = &unk_10071A150;
  v4[31] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v4[32] = (char *)&value witness table for Builtin.Int64 + 64;
  v4[33] = &unk_10071A108;
  result = type metadata accessor for ObservationRegistrar(319);
  if (v3 <= 0x3F)
  {
    v4[34] = *(_QWORD *)(result - 8) + 64;
    return swift_updateClassMetadata2(a1, 256, 35, v4, a1 + 80);
  }
  return result;
}

uint64_t sub_10030A37C()
{
  return sub_10030A458(49);
}

double sub_10030A384()
{
  uint64_t v0;

  return sub_100305220(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_BYTE *)(v0 + 48));
}

void sub_10030A39C()
{
  uint64_t v0;

  *(_BYTE *)(*(_QWORD *)(v0 + 16) + 264) = *(_BYTE *)(v0 + 24);
}

uint64_t sub_10030A3AC()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD v3[2];

  v1 = *(_QWORD *)(v0 + 32);
  v3[0] = *(_QWORD *)(v0 + 24);
  v3[1] = v1;
  swift_bridgeObjectRetain(v1);
  return CurrentValueSubject.value.setter(v3);
}

void sub_10030A3F8()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)(v0 + 16) + 136) = *(_QWORD *)(v0 + 24);
}

double sub_10030A404(char *a1)
{
  uint64_t v1;

  return sub_100309564(a1, v1);
}

void sub_10030A40C()
{
  uint64_t v0;

  *(_BYTE *)(*(_QWORD *)(v0 + 16) + 281) = *(_BYTE *)(v0 + 24);
}

void sub_10030A41C(uint64_t a1)
{
  uint64_t v1;

  sub_100309450(a1, v1);
}

uint64_t sub_10030A424()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 32, 7);
}

double sub_10030A448()
{
  uint64_t v0;

  return sub_1003069B8(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_10030A450()
{
  return sub_10030A458(41);
}

uint64_t sub_10030A458(uint64_t a1)
{
  uint64_t v1;

  swift_release(*(_QWORD *)(v1 + 16));
  swift_release(*(_QWORD *)(v1 + 24));
  return swift_deallocObject(v1, a1, 7);
}

uint64_t sub_10030A490()
{
  uint64_t v0;

  return sub_100305768(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(unsigned __int8 *)(v0 + 40));
}

uint64_t sub_10030A4A8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_10030A4CC(uint64_t a1)
{
  uint64_t v1;

  sub_10030619C(a1, *(_QWORD *)(v1 + 16), *(NSObject **)(v1 + 24));
}

uint64_t sub_10030A4D4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 33, 7);
}

uint64_t sub_10030A4F8()
{
  uint64_t v0;

  return sub_1003062B0(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(unsigned __int8 *)(v0 + 32));
}

uint64_t sub_10030A504()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_release(v0[3]);
  swift_bridgeObjectRelease(v0[5]);
  swift_release(v0[10]);
  swift_release(v0[12]);
  return swift_deallocObject(v0, 104, 7);
}

void sub_10030A548()
{
  uint64_t v0;

  sub_10036E48C(*(double *)(v0 + 56), *(double *)(v0 + 64), *(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80), *(void (**)(id))(v0 + 88));
}

uint64_t sub_10030A580()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 25, 7);
}

double sub_10030A5A4()
{
  uint64_t v0;

  return sub_100305578(*(_BYTE *)(v0 + 24));
}

uint64_t sub_10030A5CC(uint64_t result, char a2)
{
  if (a2 != -1)
    return sub_100300604(result, a2);
  return result;
}

uint64_t sub_10030A5E0()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t result;
  _BYTE v4[24];

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_BYTE *)(v0 + 24);
  result = swift_beginAccess(v1 + 352, v4, 1, 0);
  *(_BYTE *)(v1 + 352) = v2;
  return result;
}

uint64_t sub_10030A630(uint64_t *a1)
{
  uint64_t v1;

  return sub_100669BF4(a1, *(uint64_t **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32));
}

uint64_t sub_10030A650(uint64_t result, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return swift_bridgeObjectRelease(result);
  return result;
}

uint64_t sub_10030A65C()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t result;
  _BYTE v4[24];

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_BYTE *)(v0 + 24);
  result = swift_beginAccess(v1 + 298, v4, 1, 0);
  *(_BYTE *)(v1 + 298) = v2;
  return result;
}

uint64_t sub_10030A6AC()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t result;
  _BYTE v4[24];

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_BYTE *)(v0 + 24);
  result = swift_beginAccess(v1 + 297, v4, 1, 0);
  *(_BYTE *)(v1 + 297) = v2;
  return result;
}

uint64_t sub_10030A6FC()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t result;
  _BYTE v4[24];

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_BYTE *)(v0 + 24);
  result = swift_beginAccess(v1 + 296, v4, 1, 0);
  *(_BYTE *)(v1 + 296) = v2;
  return result;
}

double sub_10030A74C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v1 + 256);
  *(_QWORD *)(v1 + 256) = *(_QWORD *)(v0 + 24);
  return sub_1002FF980(v2);
}

void sub_10030A780()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  char v5;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_BYTE *)(v0 + 40);
  v3 = *(_QWORD *)(v1 + 232);
  v4 = *(_QWORD *)(v1 + 240);
  *(_OWORD *)(v1 + 232) = *(_OWORD *)(v0 + 24);
  v5 = *(_BYTE *)(v1 + 248);
  *(_BYTE *)(v1 + 248) = v2;
  sub_1002FF334(v3, v4, v5);
}

uint64_t sub_10030A7C4()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t result;
  _BYTE v4[24];

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_BYTE *)(v0 + 24);
  result = swift_beginAccess(v1 + 224, v4, 1, 0);
  *(_BYTE *)(v1 + 224) = v2;
  return result;
}

void sub_10030A814()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE v3[24];

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 24);
  swift_beginAccess(v1 + 320, v3, 1, 0);
  *(_QWORD *)(v1 + 320) = v2;
  sub_1003018C0();
}

void sub_10030A874()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE v3[24];

  v2 = *(_QWORD *)(v0 + 16);
  v1 = *(_QWORD *)(v0 + 24);
  swift_beginAccess(v2 + 216, v3, 1, 0);
  *(_QWORD *)(v2 + 216) = v1;
  sub_1002FE254();
}

void sub_10030A8F0()
{
  sub_10030A40C();
}

unint64_t sub_10030A904()
{
  return sub_10028C878();
}

uint64_t sub_10030A918()
{
  return sub_100309A8C();
}

double sub_10030A92C()
{
  return sub_100309AA8();
}

double sub_10030A940()
{
  return sub_10030A098();
}

void sub_10030A954()
{
  sub_10030A3F8();
}

void *PalettePresentationInteraction.view.getter()
{
  uint64_t v0;
  void **v1;
  void *v2;
  id v3;
  _BYTE v5[24];

  v1 = (void **)(v0 + OBJC_IVAR___BKPalettePresentationInteraction_view);
  swift_beginAccess(v0 + OBJC_IVAR___BKPalettePresentationInteraction_view, v5, 0, 0);
  v2 = *v1;
  v3 = v2;
  return v2;
}

void PalettePresentationInteraction.view.setter(void *a1)
{
  uint64_t v1;
  void **v3;
  void *v4;
  _BYTE v5[24];

  v3 = (void **)(v1 + OBJC_IVAR___BKPalettePresentationInteraction_view);
  swift_beginAccess(v3, v5, 1, 0);
  v4 = *v3;
  *v3 = a1;

}

uint64_t (*PalettePresentationInteraction.view.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR___BKPalettePresentationInteraction_view, a1, 33, 0);
  return j__swift_endAccess;
}

void sub_10030AB54(int a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t Strong;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  unsigned int v10;
  _BYTE v11[24];

  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v11, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (char *)Strong;
    v6 = *(_QWORD *)(Strong + OBJC_IVAR___BKPalettePresentationInteraction_animationController);
    if (v6)
    {
      v7 = type metadata accessor for AudiobookPaletteStyleAnimationController();
      v8 = swift_dynamicCastClass(v6, v7);
      if (v8)
      {
        v9 = (void *)v8;
        swift_unknownObjectRetain(v6);
        v10 = objc_msgSend(v9, "isReversed") & (a1 ^ 1);
        if (objc_msgSend(v9, "isReversed"))
        {
          if ((v10 & 1) == 0)
          {
LABEL_7:
            sub_10030BAAC(0);

            swift_unknownObjectRelease(v6);
            return;
          }
        }
        else if (((v10 | a1) & 1) == 0)
        {
          goto LABEL_7;
        }
        swift_unknownObjectWeakAssign(&v5[OBJC_IVAR___BKPalettePresentationInteraction_presentedViewController], 0);
        goto LABEL_7;
      }
    }

  }
}

void sub_10030AC4C(void (*a1)(id), uint64_t a2)
{
  uint64_t v2;
  void *Strong;
  id v6;
  void *v7;
  _QWORD *v8;
  void *v9;
  _QWORD *v10;
  id v11;
  void *v12;
  id v13;
  _QWORD aBlock[5];
  _QWORD *v15;

  Strong = (void *)swift_unknownObjectWeakLoadStrong(v2 + OBJC_IVAR___BKPalettePresentationInteraction_presentedViewController);
  if (Strong)
  {
    v13 = Strong;
    v6 = objc_msgSend(Strong, "transitionCoordinator");
    if (v6)
    {
      v7 = v6;
      v8 = (_QWORD *)swift_allocObject(&unk_1008FC218, 40, 7);
      v8[2] = a1;
      v8[3] = a2;
      v8[4] = v13;
      aBlock[4] = sub_10030BFA0;
      v15 = v8;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1004D7C0C;
      aBlock[3] = &unk_1008FC230;
      v9 = _Block_copy(aBlock);
      v10 = v15;
      sub_10002ACF0((uint64_t)a1, a2);
      v11 = v13;
      swift_release(v10);
      objc_msgSend(v7, "animateAlongsideTransition:completion:", 0, v9);

      _Block_release(v9);
      swift_unknownObjectRelease(v7);
    }
    else
    {
      v12 = v13;
      if (a1)
      {
        a1(v13);
        v12 = v13;
      }

    }
  }
  else
  {
    sub_10030AEA8((uint64_t)a1, a2);
  }
}

void sub_10030AEA8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  void *Strong;
  void *v8;
  void *v9;
  void *v10;
  id v11;
  id v12;
  void *v13;
  id v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  void *v19;
  uint64_t v20;
  void *v21;
  void *v22;
  id v23;
  _QWORD *v24;
  void *v25;
  _QWORD *v26;
  id v27;
  id v28;
  id v29;
  char v30[24];
  _QWORD aBlock[5];
  _QWORD *v32;

  v3 = v2;
  v6 = v2 + OBJC_IVAR___BKPalettePresentationInteraction_delegate;
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v6);
  if (Strong)
  {
    v8 = Strong;
    v28 = objc_msgSend(Strong, "presentedViewControllerFor:", v3);
    swift_unknownObjectRelease(v8);
    if (v28)
    {
      v9 = (void *)swift_unknownObjectWeakLoadStrong(v6);
      if (!v9)
        goto LABEL_8;
      v10 = v9;
      v11 = objc_msgSend(v9, "presentingViewControllerFor:", v3);
      swift_unknownObjectRelease(v10);
      if (!v11)
        goto LABEL_8;
      v12 = objc_msgSend(v11, "presentedViewController");
      if (v12)
      {
        v13 = v12;
        sub_100009E04(0, (unint64_t *)&qword_1009D8D70, UIViewController_ptr);
        v14 = v28;
        v15 = v13;
        LOBYTE(v13) = static NSObject.== infix(_:_:)(v15, v14);

        if ((v13 & 1) != 0)
        {
          v17 = static os_log_type_t.default.getter(v16);
          sub_100009E04(0, (unint64_t *)&qword_1009CEEB0, OS_os_log_ptr);
          v28 = (id)static OS_os_log.default.getter();
          os_log(_:dso:log:_:_:)(v17, &_mh_execute_header, v28, "Avoiding exception trying to modally present a view controller we're already presenting", 87, 2, _swiftEmptyArrayStorage);

LABEL_8:
          return;
        }
      }
      objc_msgSend(v28, "setTransitioningDelegate:", v3, v28);
      objc_msgSend(v29, "setModalPresentationStyle:", 2);
      v18 = objc_msgSend(v29, "presentationController");
      if (v18)
      {
        v19 = v18;
        v20 = objc_opt_self(UISheetPresentationController);
        v21 = (void *)swift_dynamicCastObjCClass(v19, v20);
        if (v21)
        {
          v22 = v21;
          objc_msgSend(v21, "_setWantsFullScreen:", 1);
          objc_msgSend(v22, "_setAllowsInteractiveDismissWhenFullScreen:", 1);
          objc_msgSend(v22, "_setShouldDismissWhenTappedOutside:", 1);
          objc_msgSend(v22, "_setCornerRadiusForPresentationAndDismissal:", 0.0);
          v23 = objc_msgSend(*(id *)(v3 + OBJC_IVAR___BKPalettePresentationInteraction_view), "superview", swift_beginAccess(v3 + OBJC_IVAR___BKPalettePresentationInteraction_view, v30, 0, 0).n128_f64[0]);
          objc_msgSend(v22, "setSourceView:", v23);

        }
        else
        {

        }
      }
      v24 = (_QWORD *)swift_allocObject(&unk_1008FC1C8, 40, 7);
      v24[2] = a1;
      v24[3] = a2;
      v24[4] = v29;
      aBlock[4] = sub_10030BFA0;
      v32 = v24;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1000147F0;
      aBlock[3] = &unk_1008FC1E0;
      v25 = _Block_copy(aBlock);
      v26 = v32;
      v27 = v29;
      sub_10002ACF0(a1, a2);
      swift_release(v26);
      objc_msgSend(v11, "presentViewController:animated:completion:", v27, 1, v25);
      _Block_release(v25);

      swift_unknownObjectWeakAssign(v3 + OBJC_IVAR___BKPalettePresentationInteraction_presentedViewController, v27);
    }
  }
}

id PalettePresentationInteraction.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PalettePresentationInteraction();
  return objc_msgSendSuper2(&v2, "dealloc");
}

Swift::Void __swiftcall PalettePresentationInteraction.willMove(to:)(UIView_optional to)
{
  uint64_t v1;
  uint64_t v2;
  Class isa;
  id *v4;
  double v5;
  id v6;
  objc_class *v7;
  id v8;
  char v9;
  _BYTE v10[24];

  v2 = v1;
  isa = to.value.super.super.isa;
  v4 = (id *)(v1 + OBJC_IVAR___BKPalettePresentationInteraction_view);
  *(_QWORD *)&v5 = swift_beginAccess(v1 + OBJC_IVAR___BKPalettePresentationInteraction_view, v10, 0, 0).n128_u64[0];
  v6 = *v4;
  if (*v4)
  {
    if (!isa
      || (sub_100009E04(0, (unint64_t *)&qword_1009D41B0, UIView_ptr),
          v7 = isa,
          v8 = v6,
          v9 = static NSObject.== infix(_:_:)(v8, v7),
          v8,
          v7,
          (v9 & 1) == 0)
      && (v6 = *v4) != 0)
    {
      objc_msgSend(v6, "removeGestureRecognizer:", *(_QWORD *)(v2 + OBJC_IVAR___BKPalettePresentationInteraction_tapGestureRecognizer), v5);
      if (*v4)
        objc_msgSend(*v4, "removeGestureRecognizer:", *(_QWORD *)(v2 + OBJC_IVAR___BKPalettePresentationInteraction_panGestureRecognizer));
    }
  }
}

Swift::Void __swiftcall PalettePresentationInteraction.didMove(to:)(UIView_optional to)
{
  uint64_t v1;
  uint64_t v2;
  Class isa;
  id *v4;
  id v5;
  objc_class *v6;
  id v7;
  char v8;
  objc_class *v9;
  _BYTE v10[24];

  v2 = v1;
  isa = to.value.super.super.isa;
  v4 = (id *)(v1 + OBJC_IVAR___BKPalettePresentationInteraction_view);
  swift_beginAccess(v1 + OBJC_IVAR___BKPalettePresentationInteraction_view, v10, 1, 0);
  v5 = *v4;
  if (*v4)
  {
    if (isa)
    {
      sub_100009E04(0, (unint64_t *)&qword_1009D41B0, UIView_ptr);
      v6 = isa;
      v7 = v5;
      v8 = static NSObject.== infix(_:_:)(v7, v6);

      if ((v8 & 1) != 0)
        return;
      v5 = *v4;
    }
  }
  else
  {
    if (!isa)
      return;
    v5 = 0;
  }
  *v4 = isa;
  v9 = isa;

  if (*v4)
  {
    objc_msgSend(*v4, "addGestureRecognizer:", *(_QWORD *)(v2 + OBJC_IVAR___BKPalettePresentationInteraction_tapGestureRecognizer));
    if (*v4)
      objc_msgSend(*v4, "addGestureRecognizer:", *(_QWORD *)(v2 + OBJC_IVAR___BKPalettePresentationInteraction_panGestureRecognizer));
  }
}

Swift::Bool __swiftcall PalettePresentationInteraction.gestureRecognizerShouldBegin(_:)(UIGestureRecognizer a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  id v5;
  uint64_t v6;
  Swift::Bool result;
  id v8;
  id v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  Swift::Bool v15;

  v2 = v1;
  sub_100009E04(0, (unint64_t *)&qword_1009D9DA0, NSObject_ptr);
  v4 = OBJC_IVAR___BKPalettePresentationInteraction_panGestureRecognizer;
  v5 = *(id *)(v2 + OBJC_IVAR___BKPalettePresentationInteraction_panGestureRecognizer);
  LOBYTE(a1.super.isa) = static NSObject.== infix(_:_:)(a1.super.isa, v5);

  v6 = *(_QWORD *)(v2 + OBJC_IVAR___BKPalettePresentationInteraction_animationController);
  result = (LOBYTE(a1.super.isa) ^ 1) & (v6 == 0);
  if (((LOBYTE(a1.super.isa) ^ 1) & 1) == 0 && !v6)
  {
    v8 = *(id *)(v2 + v4);
    v9 = objc_msgSend(v8, "view");
    objc_msgSend(v8, "translationInView:", v9);
    v11 = v10;
    v13 = v12;

    v14 = fabs(v13);
    v15 = v14 > 2.22044605e-16;
    if (fabs(v11 * 0.5) >= v14)
      v15 = 0;
    return v13 < 2.22044605e-16 && v15;
  }
  return result;
}

UIPresentationController_optional __swiftcall PalettePresentationInteraction.presentationController(forPresented:presenting:source:)(UIViewController forPresented, UIViewController_optional presenting, UIViewController source)
{
  Class isa;
  uint64_t v5;
  objc_class *v6;
  Swift::Bool v7;
  objc_class *v8;
  objc_class *v9;
  objc_super v10;
  UIPresentationController_optional result;

  isa = presenting.value.super.super.isa;
  v5 = objc_opt_self(BKBasePresentingViewController);
  v6 = (objc_class *)swift_dynamicCastObjCClass(forPresented.super.super.isa, v5);
  if (v6)
  {
    v8 = v6;
    v9 = (objc_class *)type metadata accessor for AssetSheetPresentationController();
    v10.receiver = objc_allocWithZone(v9);
    v10.super_class = v9;
    v6 = (objc_class *)objc_msgSendSuper2(&v10, "initWithPresentedViewController:presentingViewController:", v8, isa);
  }
  result.value.super.isa = v6;
  result.is_nil = v7;
  return result;
}

id PalettePresentationInteraction.animationController(forPresented:presenting:source:)(uint64_t a1, void *a2)
{
  return sub_10030BEF8(a2);
}

id PalettePresentationInteraction.animationController(forDismissed:)(void *a1)
{
  void *v1;
  id v3;
  void *v4;
  uint64_t v5;
  void *v6;
  char v7;
  id v8;
  double v10;
  double v11;
  double v12;
  double v13;
  id v14;
  void *v15;
  objc_class *v16;
  id v17;
  id v18;
  id v19;
  _BYTE v20[40];
  _QWORD v21[4];
  char v22;

  v3 = objc_msgSend(a1, "presentingViewController");
  if (!v3)
    return 0;
  v4 = v3;
  v5 = objc_opt_self(BKBasePresentingViewController);
  v6 = (void *)swift_dynamicCastObjCClass(a1, v5);
  if (!v6
    || (v7 = objc_msgSend(v6, "finishedConsuming"),
        sub_10030BC40(v4, v7, (uint64_t)v20),
        sub_10024B668((uint64_t)v20, (uint64_t)v21),
        v22 == 1))
  {

    return 0;
  }
  v10 = *(double *)v21;
  v11 = *(double *)&v21[1];
  v12 = *(double *)&v21[2];
  v13 = *(double *)&v21[3];
  v14 = objc_msgSend(v4, "traitCollection");
  v15 = v14;
  if ((v7 & 1) != 0 || v14 && objc_msgSend(v14, "userInterfaceIdiom") == (id)1)
    v16 = (objc_class *)type metadata accessor for AudiobookPaletteStyleAnimationControllerPad();
  else
    v16 = (objc_class *)type metadata accessor for AudiobookPaletteStyleAnimationControllerPhone();
  v17 = objc_allocWithZone(v16);
  v18 = v1;
  v8 = sub_10023806C(v18);

  objc_msgSend(v8, "setIsReversed:", 1);
  objc_msgSend(v8, "setSourceFrame:", v10, v11, v12, v13);
  v19 = v8;
  sub_10030BAAC((uint64_t)v8);

  return v8;
}

uint64_t sub_10030BAAC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD **v10;
  _QWORD *v11;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v13;
  unint64_t v14;
  _QWORD *v15;
  _BYTE v16[24];

  v2 = OBJC_IVAR___BKPalettePresentationInteraction_animationController;
  v3 = *(_QWORD *)(v1 + OBJC_IVAR___BKPalettePresentationInteraction_animationController);
  *(_QWORD *)(v1 + OBJC_IVAR___BKPalettePresentationInteraction_animationController) = a1;
  swift_unknownObjectRetain(a1);
  result = swift_unknownObjectRelease(v3);
  v5 = *(_QWORD *)(v1 + v2);
  if (v5)
  {
    v6 = type metadata accessor for AudiobookPaletteStyleAnimationController();
    result = swift_dynamicCastClass(v5, v6);
    if (result)
    {
      v7 = result;
      v8 = swift_allocObject(&unk_1008FC268, 24, 7);
      swift_unknownObjectWeakInit(v8 + 16);
      v9 = swift_allocObject(&unk_1008FC290, 32, 7);
      *(_QWORD *)(v9 + 16) = sub_10030BFF0;
      *(_QWORD *)(v9 + 24) = v8;
      v10 = (_QWORD **)(v7 + OBJC_IVAR____TtC5Books40AudiobookPaletteStyleAnimationController_completionBlocks);
      swift_beginAccess(v10, v16, 33, 0);
      v11 = *v10;
      swift_unknownObjectRetain(v5);
      swift_retain_n(v8, 2);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v11);
      *v10 = v11;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        v11 = sub_1005B08EC(0, v11[2] + 1, 1, v11);
        *v10 = v11;
      }
      v14 = v11[2];
      v13 = v11[3];
      if (v14 >= v13 >> 1)
      {
        v11 = sub_1005B08EC((_QWORD *)(v13 > 1), v14 + 1, 1, v11);
        *v10 = v11;
      }
      v11[2] = v14 + 1;
      v15 = &v11[2 * v14];
      v15[4] = sub_10030C01C;
      v15[5] = v9;
      swift_endAccess(v16);
      swift_unknownObjectRelease(v5);
      return swift_release_n(v8, 2);
    }
  }
  return result;
}

void sub_10030BC40(void *a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  void **v7;
  void *v8;
  id v9;
  id v10;
  id v11;
  id v12;
  void *v13;
  double v14;
  CGFloat v15;
  double v16;
  CGFloat v17;
  double v18;
  CGFloat v19;
  double v20;
  CGFloat v21;
  CGFloat Height;
  CGFloat x;
  CGFloat y;
  uint64_t v25;
  uint64_t v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  double v32;
  double v33;
  double v34;
  id v35;
  double v36;
  double v37;
  id v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  _BYTE v42[24];
  CGRect v43;
  CGRect v44;
  CGRect v45;

  v7 = (void **)(v3 + OBJC_IVAR___BKPalettePresentationInteraction_view);
  swift_beginAccess(v7, v42, 0, 0);
  v8 = *v7;
  if (!*v7)
  {
    x = 0.0;
    y = 0.0;
    v25 = 0;
    v26 = 0;
LABEL_10:
    *(CGFloat *)a3 = x;
    *(CGFloat *)(a3 + 8) = y;
    *(_QWORD *)(a3 + 16) = v25;
    *(_QWORD *)(a3 + 24) = v26;
    *(_BYTE *)(a3 + 32) = v8 == 0;
    return;
  }
  v9 = v8;
  if ((a2 & 1) != 0
    || (v10 = objc_msgSend(a1, "traitCollection"),
        v11 = objc_msgSend(v10, "userInterfaceIdiom"),
        v10,
        v11 == (id)1))
  {
    v12 = objc_msgSend(a1, "view");
    if (!v12)
      goto LABEL_12;
    v13 = v12;
    objc_msgSend(v12, "bounds");
    v15 = v14;
    v17 = v16;
    v19 = v18;
    v21 = v20;

    v43.origin.x = v15;
    v43.origin.y = v17;
    v43.size.width = v19;
    v43.size.height = v21;
    Height = CGRectGetHeight(v43);
    v44.origin.x = 0.0;
    v44.origin.y = 0.0;
    v44.size.width = 0.0;
    v44.size.height = 0.0;
    v45 = CGRectOffset(v44, 0.0, Height);
    x = v45.origin.x;
    y = v45.origin.y;
  }
  else
  {
    objc_msgSend(v9, "frame");
    v28 = v27;
    v30 = v29;
    v32 = v31;
    v34 = v33;
    v35 = objc_msgSend(a1, "view");
    objc_msgSend(v9, "convertRect:toView:", v35, v28, v30, v32, v34);
    x = v36;
    y = v37;

  }
  v38 = objc_msgSend(a1, "view");
  if (v38)
  {
    v39 = v38;
    objc_msgSend(v38, "frame");
    v25 = v40;
    v26 = v41;

    goto LABEL_10;
  }
  __break(1u);
LABEL_12:
  __break(1u);
}

uint64_t _s5Books30PalettePresentationInteractionC17gestureRecognizer_33shouldRecognizeSimultaneouslyWithSbSo09UIGestureF0C_AGtF_0(uint64_t a1)
{
  uint64_t v1;
  void *v3;
  id v4;
  char v5;
  char v6;
  id v7;
  char v8;

  v3 = *(void **)(v1 + OBJC_IVAR___BKPalettePresentationInteraction_panGestureRecognizer);
  sub_100009E04(0, (unint64_t *)&unk_1009D9EC0, UIGestureRecognizer_ptr);
  v4 = v3;
  v5 = static NSObject.== infix(_:_:)(a1, v4);

  if ((v5 & 1) != 0)
  {
    v6 = 0;
  }
  else
  {
    v7 = *(id *)(v1 + OBJC_IVAR___BKPalettePresentationInteraction_tapGestureRecognizer);
    v8 = static NSObject.== infix(_:_:)(a1, v7);

    v6 = v8 ^ 1;
  }
  return v6 & 1;
}

id sub_10030BEF8(void *a1)
{
  void *v1;
  id v2;
  void *v3;
  objc_class *v4;
  id v5;
  id v6;
  id v7;

  v2 = objc_msgSend(a1, "traitCollection");
  v3 = v2;
  if (v2 && objc_msgSend(v2, "userInterfaceIdiom") == (id)1)
    v4 = (objc_class *)type metadata accessor for AudiobookPaletteStyleAnimationControllerPad();
  else
    v4 = (objc_class *)type metadata accessor for AudiobookPaletteStyleAnimationControllerPhone();
  v5 = objc_allocWithZone(v4);
  v6 = sub_10023806C(v1);

  v7 = v6;
  sub_10030BAAC((uint64_t)v6);

  return v6;
}

uint64_t sub_10030BFA0()
{
  uint64_t v0;
  uint64_t (*v1)(_QWORD);
  uint64_t result;

  v1 = *(uint64_t (**)(_QWORD))(v0 + 16);
  if (v1)
    return v1(*(_QWORD *)(v0 + 32));
  return result;
}

uint64_t sub_10030BFCC()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_10030BFF0(int a1)
{
  uint64_t v1;

  sub_10030AB54(a1, v1);
}

uint64_t sub_10030BFF8()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10030C01C(unsigned __int8 *a1)
{
  uint64_t v1;

  return sub_100235724(a1, *(uint64_t (**)(_QWORD))(v1 + 16));
}

uint64_t sub_10030C02C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t ObjectType;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD v19[4];

  v6 = type metadata accessor for TaskPriority(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) == 1)
  {
    sub_100010960(a1, &qword_1009D3150);
    v8 = 7168;
    v9 = *(_QWORD *)(a3 + 16);
    if (v9)
    {
LABEL_3:
      v10 = *(_QWORD *)(a3 + 24);
      ObjectType = swift_getObjectType();
      swift_unknownObjectRetain(v9);
      v12 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v10);
      v14 = v13;
      swift_unknownObjectRelease(v9);
      goto LABEL_6;
    }
  }
  else
  {
    v15 = TaskPriority.rawValue.getter();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    v8 = v15 | 0x1C00;
    v9 = *(_QWORD *)(a3 + 16);
    if (v9)
      goto LABEL_3;
  }
  v12 = 0;
  v14 = 0;
LABEL_6:
  v16 = swift_allocObject(&unk_1008FC5D8, 32, 7);
  *(_QWORD *)(v16 + 16) = a2;
  *(_QWORD *)(v16 + 24) = a3;
  if (v14 | v12)
  {
    v19[0] = 0;
    v19[1] = 0;
    v17 = v19;
    v19[2] = v12;
    v19[3] = v14;
  }
  else
  {
    v17 = 0;
  }
  return swift_task_create(v8, v17, (char *)&type metadata for () + 8, &unk_1009DF3C0, v16);
}

uint64_t sub_10030C178(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10030C1B0(a1, a2, a3, (uint64_t)&unk_1008FC380, &qword_1009DA1E8, (uint64_t)&unk_1009DA1E0);
}

uint64_t sub_10030C194(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10030C1B0(a1, a2, a3, (uint64_t)&unk_1008FC3A8, (uint64_t *)&unk_1009DA200, (uint64_t)&unk_1009DA1F8);
}

uint64_t sub_10030C1B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t a6)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t ObjectType;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unsigned __int8 v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD v26[4];

  v12 = type metadata accessor for TaskPriority(0);
  v13 = *(_QWORD *)(v12 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(a1, 1, v12) == 1)
  {
    sub_100010960(a1, &qword_1009D3150);
    v14 = 7168;
    v15 = *(_QWORD *)(a3 + 16);
    if (v15)
    {
LABEL_3:
      v16 = *(_QWORD *)(a3 + 24);
      ObjectType = swift_getObjectType();
      swift_unknownObjectRetain(v15);
      v18 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v16);
      v20 = v19;
      swift_unknownObjectRelease(v15);
      goto LABEL_6;
    }
  }
  else
  {
    v21 = TaskPriority.rawValue.getter();
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(a1, v12);
    v14 = v21 | 0x1C00;
    v15 = *(_QWORD *)(a3 + 16);
    if (v15)
      goto LABEL_3;
  }
  v18 = 0;
  v20 = 0;
LABEL_6:
  v22 = swift_allocObject(a4, 32, 7);
  *(_QWORD *)(v22 + 16) = a2;
  *(_QWORD *)(v22 + 24) = a3;
  v23 = sub_10004CFD4(a5);
  if (v20 | v18)
  {
    v26[0] = 0;
    v26[1] = 0;
    v24 = v26;
    v26[2] = v18;
    v26[3] = v20;
  }
  else
  {
    v24 = 0;
  }
  return swift_task_create(v14, v24, v23, a6, v22);
}

void sub_10030C30C(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

void sub_10030C340()
{
  char v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t inited;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  id v8;
  unint64_t v9;
  uint64_t v10;

  v2 = *(void **)(v1 + OBJC_IVAR___BKEngagementManager_eventController);
  v3 = sub_10004CFD4((uint64_t *)&unk_1009D30D0);
  inited = swift_initStackObject(v3, &v10);
  v5 = inited;
  *(_OWORD *)(inited + 16) = xmmword_10070CCA0;
  *(_QWORD *)(inited + 32) = 0x6E6F69746341;
  *(_QWORD *)(inited + 40) = 0xE600000000000000;
  v6 = 1852141679;
  if ((v0 & 1) == 0)
    v6 = 0x65736F6C63;
  *(_QWORD *)(inited + 72) = &type metadata for String;
  v7 = 0xE500000000000000;
  if ((v0 & 1) != 0)
    v7 = 0xE400000000000000;
  *(_QWORD *)(inited + 48) = v6;
  *(_QWORD *)(inited + 56) = v7;
  v8 = v2;
  v9 = sub_10003FB0C(v5);
  dispatch thunk of EngagementEventController.submitEvent(_:_:)(0xD000000000000016, 0x80000001007BE460, v9);

  swift_bridgeObjectRelease(v9);
}

void sub_10030C648()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  const char *v3;
  id v4;

  v4 = *(id *)(v1 + OBJC_IVAR___BKEngagementManager_eventController);
  if (v0)
  {
    v2 = 0xD000000000000020;
    v3 = "orientationDidChangeWhileReading";
  }
  else
  {
    v2 = 0xD00000000000001BLL;
    v3 = "userDidGoToNewSectionViaToC";
  }
  ((void (*)(unint64_t, unint64_t, _QWORD))dispatch thunk of EngagementEventController.submitEvent(_:_:))(v2, (unint64_t)(v3 - 32) | 0x8000000000000000, 0);

}

void sub_10030C6F4()
{
  qword_1009D9ED0 = 0x40F5180000000000;
}

void sub_10030C708()
{
  qword_1009D9ED8 = 0x40F5180000000000;
}

id EngagementManager.metadata.getter()
{
  uint64_t v0;
  id *v1;
  _BYTE v3[24];

  v1 = (id *)(v0 + OBJC_IVAR___BKEngagementManager_metadata);
  swift_beginAccess(v0 + OBJC_IVAR___BKEngagementManager_metadata, v3, 0, 0);
  return *v1;
}

void EngagementManager.metadata.setter(void *a1)
{
  uint64_t v1;
  void **v3;
  void *v4;
  _BYTE v5[24];

  v3 = (void **)(v1 + OBJC_IVAR___BKEngagementManager_metadata);
  swift_beginAccess(v3, v5, 1, 0);
  v4 = *v3;
  *v3 = a1;

}

uint64_t (*EngagementManager.metadata.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR___BKEngagementManager_metadata, a1, 33, 0);
  return j_j__swift_endAccess;
}

void *EngagementManager.analyticsHelper.getter()
{
  uint64_t v0;
  void **v1;
  void *v2;
  id v3;
  _BYTE v5[24];

  v1 = (void **)(v0 + OBJC_IVAR___BKEngagementManager_analyticsHelper);
  swift_beginAccess(v0 + OBJC_IVAR___BKEngagementManager_analyticsHelper, v5, 0, 0);
  v2 = *v1;
  v3 = v2;
  return v2;
}

void EngagementManager.analyticsHelper.setter(void *a1)
{
  uint64_t v1;
  void **v3;
  void *v4;
  _BYTE v5[24];

  v3 = (void **)(v1 + OBJC_IVAR___BKEngagementManager_analyticsHelper);
  swift_beginAccess(v3, v5, 1, 0);
  v4 = *v3;
  *v3 = a1;

}

uint64_t (*EngagementManager.analyticsHelper.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR___BKEngagementManager_analyticsHelper, a1, 33, 0);
  return j__swift_endAccess;
}

char *EngagementManager.__allocating_init(configuration:configurationContainer:)(void *a1, void *a2)
{
  objc_class *v2;
  id v5;

  v5 = objc_allocWithZone(v2);
  return EngagementManager.init(configuration:configurationContainer:)(a1, a2);
}

Swift::Void __swiftcall EngagementManager.forceSyncToCloudKit()()
{
  char *v0;
  char *v1;
  uint64_t ObjectType;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  id *v15;
  id v16;
  id v17;
  uint64_t v18;
  _QWORD *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v27[24];

  v1 = v0;
  ObjectType = swift_getObjectType();
  v3 = sub_10004CFD4(&qword_1009D3150);
  __chkstk_darwin(v3);
  v5 = &v27[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v6 = type metadata accessor for Logger(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = &v27[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v11 = static Logger.engagement.getter(v10);
  v12 = Logger.logObject.getter(v11);
  v13 = static os_log_type_t.default.getter(v12);
  if (os_log_type_enabled(v12, v13))
  {
    v14 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v14 = 0;
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "Updating CloudKit...", v14, 2u);
    swift_slowDealloc(v14, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v15 = (id *)&v1[OBJC_IVAR___BKEngagementManager_analyticsHelper];
  swift_beginAccess(&v1[OBJC_IVAR___BKEngagementManager_analyticsHelper], v27, 0, 0);
  if (*v15)
  {
    v16 = *v15;
    v17 = sub_10030DBB0();
    v18 = type metadata accessor for TaskPriority(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v5, 1, 1, v18);
    v19 = (_QWORD *)swift_allocObject(&unk_1008FC308, 80, 7);
    v19[2] = 0;
    v19[3] = 0;
    v19[4] = v1;
    v19[5] = BKAppDelegate.enableMetricsInspectorOnDebugMode();
    v19[6] = 0;
    v19[7] = v17;
    v19[8] = v16;
    v19[9] = ObjectType;
    v20 = v1;
    v21 = sub_10030C02C((uint64_t)v5, (uint64_t)&unk_1009D9F40, (uint64_t)v19);
    swift_release(v21);
  }
  else
  {
    v22 = type metadata accessor for PropertyError(0);
    v23 = sub_10003E1A0(&qword_1009D9F30, 255, (uint64_t (*)(uint64_t))&type metadata accessor for PropertyError, (uint64_t)&protocol conformance descriptor for PropertyError);
    v24 = swift_allocError(v22, v23, 0, 0);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v22 - 8) + 104))(v25, enum case for PropertyError.InvalidPropertyValue(_:), v22);
    swift_errorRelease(v24);
  }
}

uint64_t EngagementManager.syncToCloudKit(completion:)(void (*a1)(_QWORD, _QWORD), uint64_t a2)
{
  char *v2;
  char *v3;
  uint64_t ObjectType;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(_QWORD, _QWORD);
  uint8_t *v22;
  uint8_t *v23;
  id *v24;
  id v25;
  id v26;
  uint64_t v27;
  _QWORD *v28;
  char *v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char v37[24];

  v3 = v2;
  ObjectType = swift_getObjectType();
  v7 = sub_10004CFD4(&qword_1009D3150);
  __chkstk_darwin(v7);
  v9 = &v37[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v10 = type metadata accessor for Logger(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = __chkstk_darwin(v10);
  v14 = &v37[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v15 = static Logger.engagement.getter(v12);
  v16 = Logger.logObject.getter(v15);
  v17 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v16, v17))
  {
    v18 = (uint8_t *)swift_slowAlloc(2, -1);
    v36 = v9;
    v19 = a2;
    v20 = ObjectType;
    v21 = a1;
    v22 = v18;
    *(_WORD *)v18 = 0;
    _os_log_impl((void *)&_mh_execute_header, v16, v17, "Updating CloudKit...", v18, 2u);
    v23 = v22;
    a1 = v21;
    ObjectType = v20;
    a2 = v19;
    v9 = v36;
    swift_slowDealloc(v23, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
  v24 = (id *)&v3[OBJC_IVAR___BKEngagementManager_analyticsHelper];
  swift_beginAccess(&v3[OBJC_IVAR___BKEngagementManager_analyticsHelper], v37, 0, 0);
  if (*v24)
  {
    v25 = *v24;
    v26 = sub_10030DBB0();
    v27 = type metadata accessor for TaskPriority(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v9, 1, 1, v27);
    v28 = (_QWORD *)swift_allocObject(&unk_1008FC330, 80, 7);
    v28[2] = 0;
    v28[3] = 0;
    v28[4] = v3;
    v28[5] = a1;
    v28[6] = a2;
    v28[7] = v26;
    v28[8] = v25;
    v28[9] = ObjectType;
    v29 = v3;
    swift_retain(a2);
    v30 = sub_10030C02C((uint64_t)v9, (uint64_t)&unk_1009D9F48, (uint64_t)v28);
    return swift_release(v30);
  }
  else
  {
    v32 = type metadata accessor for PropertyError(0);
    v33 = sub_10003E1A0(&qword_1009D9F30, 255, (uint64_t (*)(uint64_t))&type metadata accessor for PropertyError, (uint64_t)&protocol conformance descriptor for PropertyError);
    v34 = swift_allocError(v32, v33, 0, 0);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v32 - 8) + 104))(v35, enum case for PropertyError.InvalidPropertyValue(_:), v32);
    a1(v34, 1);
    return swift_errorRelease(v34);
  }
}

void EngagementManager.onCloudUpdate(_:)()
{
  uint64_t v0;

  if (*(_BYTE *)(v0 + OBJC_IVAR___BKEngagementManager_cloudKitSyncEnabled) == 1)
    _s5Books17EngagementManagerC21forceSyncFromCloudKityyF_0();
}

uint64_t sub_10030D1EC()
{
  char *v0;
  uint64_t ObjectType;
  uint64_t v2;
  void *v3;
  _QWORD *v4;
  char *v5;
  id v6;

  ObjectType = swift_getObjectType();
  v2 = swift_allocObject(&unk_1008FC3F8, 24, 7);
  *(_QWORD *)(v2 + 16) = v0;
  v3 = *(void **)&v0[OBJC_IVAR___BKEngagementManager_manager];
  v4 = (_QWORD *)swift_allocObject(&unk_1008FC420, 48, 7);
  v4[2] = v0;
  v4[3] = sub_1003169F8;
  v4[4] = v2;
  v4[5] = ObjectType;
  v5 = v0;
  v6 = v3;
  swift_retain(v2);
  dispatch thunk of Manager.getLastCloudSyncTimestamp(completion:)(sub_100316A04, v4);
  swift_release(v4);

  return swift_release(v2);
}

uint64_t sub_10030D2A8(uint64_t a1, double a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  void *v18;
  void (*v19)(char *, uint64_t);
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD aBlock[5];
  uint64_t v32;

  v4 = type metadata accessor for DispatchWorkItemFlags(0);
  v30 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DispatchQoS(0);
  v28 = *(_QWORD *)(v7 - 8);
  v29 = v7;
  __chkstk_darwin(v7);
  v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for DispatchTime(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = __chkstk_darwin(v10);
  v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v16 = (char *)&v27 - v15;
  v17 = sub_100009E04(0, (unint64_t *)&qword_1009CEC30, OS_dispatch_queue_ptr);
  v18 = (void *)static OS_dispatch_queue.main.getter(v17);
  static DispatchTime.now()();
  + infix(_:_:)(v14, a2);
  v19 = *(void (**)(char *, uint64_t))(v11 + 8);
  v19(v14, v10);
  v20 = swift_allocObject(&unk_1008FC2B8, 24, 7);
  swift_unknownObjectWeakInit(v20 + 16, a1);
  aBlock[4] = sub_100315DF4;
  v32 = v20;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000147F0;
  aBlock[3] = &unk_1008FC488;
  v21 = _Block_copy(aBlock);
  v22 = swift_release(v32);
  static DispatchQoS.unspecified.getter(v22);
  aBlock[0] = _swiftEmptyArrayStorage;
  v23 = sub_10003E1A0((unint64_t *)&qword_1009D48E0, 255, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v24 = sub_10004CFD4((uint64_t *)&unk_1009DB460);
  v25 = sub_100065324();
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v24, v25, v4, v23);
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v16, v9, v6, v21);
  _Block_release(v21);

  (*(void (**)(char *, uint64_t))(v30 + 8))(v6, v4);
  (*(void (**)(char *, uint64_t))(v28 + 8))(v9, v29);
  return ((uint64_t (*)(char *, uint64_t))v19)(v16, v10);
}

void sub_10030D53C(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  void *v3;
  _BYTE v4[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v4, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = (void *)Strong;
    sub_10030D1EC();

  }
}

uint64_t sub_10030D58C(uint64_t a1, void *a2, void (*a3)(double), uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  void (*v19)(char *, uint64_t, uint64_t, uint64_t);
  void (*v20)(char *, char *, uint64_t);
  double v21;
  uint64_t v22;
  double v23;
  _QWORD *v24;
  void (*v25)(double);
  void *v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  uint64_t v31;
  void *v32;
  void (*v33)(double);
  uint64_t v34;

  v31 = a5;
  v32 = a2;
  v33 = a3;
  v34 = a4;
  v6 = sub_10004CFD4((uint64_t *)&unk_1009DA210);
  __chkstk_darwin(v6);
  v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Date(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v15 = (char *)&v31 - v14;
  v16 = sub_10004CFD4(&qword_1009D7440);
  __chkstk_darwin(v16);
  v18 = (char *)&v31 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56);
  v19(v18, 1, 1, v9);
  sub_10000B5E4(a1, (uint64_t)v8, (uint64_t *)&unk_1009DA210);
  if (swift_getEnumCaseMultiPayload(v8, v6) == 1)
  {
    sub_100010960((uint64_t)v8, (uint64_t *)&unk_1009DA210);
  }
  else
  {
    v20 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
    v20(v15, v8, v9);
    sub_100010960((uint64_t)v18, &qword_1009D7440);
    v20(v18, v15, v9);
    v19(v18, 0, 1, v9);
  }
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v18, 1, v9))
  {
    v21 = 1.79769313e308;
  }
  else
  {
    v22 = (*(uint64_t (**)(char *, char *, uint64_t))(v10 + 16))(v13, v18, v9);
    v23 = Date.timeIntervalSinceNow.getter(v22);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
    v21 = -v23;
  }
  if (qword_1009CDE68 != -1)
    swift_once(&qword_1009CDE68, sub_10030C6F4);
  if (*(double *)&qword_1009D9ED0 >= v21)
  {
    v33(*(double *)&qword_1009D9ED0 - v21 + 10.0);
  }
  else
  {
    v24 = (_QWORD *)swift_allocObject(&unk_1008FC448, 48, 7);
    v26 = v32;
    v25 = v33;
    v24[2] = v32;
    v24[3] = v25;
    v27 = v34;
    v28 = v31;
    v24[4] = v34;
    v24[5] = v28;
    v29 = v26;
    swift_retain(v27);
    EngagementManager.syncToCloudKit(completion:)((void (*)(_QWORD, _QWORD))sub_100316A40, (uint64_t)v24);
    swift_release(v24);
  }
  return sub_100010960((uint64_t)v18, &qword_1009D7440);
}

uint64_t sub_10030D84C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  id v14;
  _QWORD *v15;
  uint64_t v17;

  v10 = type metadata accessor for Date(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(id *)(a3 + OBJC_IVAR___BKEngagementManager_manager);
  Date.init()();
  v15 = (_QWORD *)swift_allocObject(&unk_1008FC470, 40, 7);
  v15[2] = a4;
  v15[3] = a5;
  v15[4] = a6;
  swift_retain(a5);
  dispatch thunk of Manager.setLastCloudSyncTimestamp(_:completion:)(v13, sub_100316A74, v15);
  swift_release(v15);

  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
}

Swift::Void __swiftcall EngagementManager.forcePurgeAll()()
{
  uint64_t v0;
  id v1;

  v1 = *(id *)(v0 + OBJC_IVAR___BKEngagementManager_manager);
  Manager.forcePurgeLocalStorage()();

}

uint64_t EngagementManager.donor(type:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  id v5;
  uint64_t v6;

  v5 = *(id *)(v2 + OBJC_IVAR___BKEngagementManager_manager);
  v6 = Manager.donor(type:)(a1, a2);

  return v6;
}

double EngagementManager.engagementEventDataForEvent(eventName:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  double result;

  v7 = *(id *)(v4 + OBJC_IVAR___BKEngagementManager_manager);
  v8 = Manager.collector.getter();

  v9 = static Context.submitEvent.getter();
  v11 = v10;
  v12 = swift_allocObject(&unk_1008FC358, 32, 7);
  *(_QWORD *)(v12 + 16) = a3;
  *(_QWORD *)(v12 + 24) = a4;
  swift_retain(a4);
  dispatch thunk of Collector.collect(_:completion:)(v9, v11, sub_10006A724, v12);
  swift_release(v8);
  swift_bridgeObjectRelease(v11);
  *(_QWORD *)&result = swift_release(v12).n128_u64[0];
  return result;
}

void sub_10030DB48(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v4[4];

  v1 = BasePropertyConfiguration.eventName.getter(a1);
  v3 = v2;
  PropertyValue.rawValue.getter(v4, v1);
  sub_1004EF6C0((uint64_t)v4, v1, v3);
}

id sub_10030DBB0()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR___BKEngagementManager____lazy_storage___iso8601DateFormatter;
  v2 = *(void **)(v0 + OBJC_IVAR___BKEngagementManager____lazy_storage___iso8601DateFormatter);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR___BKEngagementManager____lazy_storage___iso8601DateFormatter);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone((Class)NSISO8601DateFormatter), "init");
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

void EngagementManager.init()()
{
  _swift_stdlib_reportUnimplementedInitializer("Books.EngagementManager", 23, "init()", 6, 0);
  __break(1u);
}

id EngagementManager.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for EngagementManager();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_10030DD24(_QWORD *a1, uint64_t a2)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t i;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  id v19;
  uint64_t v20;
  uint64_t isUniquelyReferenced_nonNull_native;
  char v22;
  unint64_t v23;
  uint64_t v24;
  _BOOL8 v25;
  uint64_t v26;
  char v27;
  unint64_t v28;
  char v29;
  _QWORD *v30;
  uint64_t *v31;
  uint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t result;
  uint64_t v36;
  int64_t v37;
  int64_t v38;

  v3 = a1;
  v36 = a2 + 64;
  v4 = 1 << *(_BYTE *)(a2 + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(a2 + 64);
  v37 = (unint64_t)(v4 + 63) >> 6;
  swift_bridgeObjectRetain(a1);
  swift_bridgeObjectRetain(a2);
  for (i = 0; ; i = v38)
  {
    if (v6)
    {
      v9 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v38 = i;
      v10 = v9 | (i << 6);
    }
    else
    {
      v11 = i + 1;
      if (__OFADD__(i, 1))
        goto LABEL_38;
      if (v11 >= v37)
      {
LABEL_35:
        swift_release(a2);
        return (uint64_t)v3;
      }
      v12 = *(_QWORD *)(v36 + 8 * v11);
      v13 = i + 1;
      if (!v12)
      {
        v13 = i + 2;
        if (i + 2 >= v37)
          goto LABEL_35;
        v12 = *(_QWORD *)(v36 + 8 * v13);
        if (!v12)
        {
          v13 = i + 3;
          if (i + 3 >= v37)
            goto LABEL_35;
          v12 = *(_QWORD *)(v36 + 8 * v13);
          if (!v12)
          {
            v13 = i + 4;
            if (i + 4 >= v37)
              goto LABEL_35;
            v12 = *(_QWORD *)(v36 + 8 * v13);
            if (!v12)
            {
              v14 = i + 5;
              if (i + 5 >= v37)
                goto LABEL_35;
              v12 = *(_QWORD *)(v36 + 8 * v14);
              if (!v12)
              {
                while (1)
                {
                  v13 = v14 + 1;
                  if (__OFADD__(v14, 1))
                    goto LABEL_39;
                  if (v13 >= v37)
                    goto LABEL_35;
                  v12 = *(_QWORD *)(v36 + 8 * v13);
                  ++v14;
                  if (v12)
                    goto LABEL_23;
                }
              }
              v13 = i + 5;
            }
          }
        }
      }
LABEL_23:
      v6 = (v12 - 1) & v12;
      v38 = v13;
      v10 = __clz(__rbit64(v12)) + (v13 << 6);
    }
    v15 = (uint64_t *)(*(_QWORD *)(a2 + 48) + 16 * v10);
    v17 = *v15;
    v16 = v15[1];
    v18 = *(void **)(*(_QWORD *)(a2 + 56) + 8 * v10);
    swift_bridgeObjectRetain_n(v16, 2);
    v19 = v18;
    swift_bridgeObjectRetain(v3);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v20);
    v23 = sub_10004CE80(v17, v16);
    v24 = v3[2];
    v25 = (v22 & 1) == 0;
    v26 = v24 + v25;
    if (__OFADD__(v24, v25))
      break;
    v27 = v22;
    if (v3[3] >= v26)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        v30 = v3;
        if ((v22 & 1) != 0)
          goto LABEL_4;
      }
      else
      {
        sub_1002C0288();
        v30 = v3;
        if ((v27 & 1) != 0)
          goto LABEL_4;
      }
    }
    else
    {
      sub_10037B478(v26, isUniquelyReferenced_nonNull_native);
      v28 = sub_10004CE80(v17, v16);
      if ((v27 & 1) != (v29 & 1))
        goto LABEL_40;
      v23 = v28;
      v30 = v3;
      if ((v27 & 1) != 0)
      {
LABEL_4:
        v8 = v30[7];

        *(_QWORD *)(v8 + 8 * v23) = v19;
        goto LABEL_5;
      }
    }
    v30[(v23 >> 6) + 8] |= 1 << v23;
    v31 = (uint64_t *)(v30[6] + 16 * v23);
    *v31 = v17;
    v31[1] = v16;
    *(_QWORD *)(v30[7] + 8 * v23) = v19;
    v32 = v30[2];
    v33 = __OFADD__(v32, 1);
    v34 = v32 + 1;
    if (v33)
      goto LABEL_37;
    v30[2] = v34;
    swift_bridgeObjectRetain(v16);
LABEL_5:
    swift_bridgeObjectRelease(v3);

    swift_bridgeObjectRelease_n(v16, 2);
    swift_bridgeObjectRelease(0x8000000000000000);
    v3 = v30;
  }
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
  __break(1u);
  return result;
}

uint64_t sub_10030E044(uint64_t a1, uint64_t a2, void *a3, _QWORD *a4)
{
  id v7;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  void *v10;
  uint64_t v12;
  _BYTE v13[24];

  v7 = objc_msgSend(a3, "makeDialogRequest", swift_bridgeObjectRetain(a2).n128_f64[0]);
  swift_beginAccess(a4, v13, 33, 0);
  if (v7)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*a4);
    v12 = *a4;
    *a4 = 0x8000000000000000;
    sub_1002C3EE8((uint64_t)v7, a1, a2, isUniquelyReferenced_nonNull_native);
    v9 = *a4;
    *a4 = v12;
    swift_bridgeObjectRelease(a2);
    swift_bridgeObjectRelease(v9);
  }
  else
  {
    v10 = (void *)sub_1002BDC10(a1, a2);
    swift_bridgeObjectRelease(a2);

  }
  return swift_endAccess(v13);
}

void EngagementManager.downloadQueue(_:purchasedDidCompleteWith:)(uint64_t a1, void *a2)
{
  sub_100315F1C(a2);
}

Swift::Void __swiftcall EngagementManager.sendReaderEventNewSectionViaToC()()
{
  uint64_t v0;
  id v1;

  v1 = *(id *)(v0 + OBJC_IVAR___BKEngagementManager_eventController);
  dispatch thunk of EngagementEventController.submitEvent(_:_:)(0xD00000000000001BLL, 0x80000001007BE700, 0);

}

uint64_t sub_10030E270(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v13;

  v8[8] = a8;
  v8[9] = v13;
  v8[6] = a6;
  v8[7] = a7;
  v8[4] = a4;
  v8[5] = a5;
  v9 = type metadata accessor for Date(0);
  v8[10] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v8[11] = v10;
  v11 = (*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v8[12] = swift_task_alloc(v11);
  v8[13] = swift_task_alloc(v11);
  v8[14] = swift_task_alloc(v11);
  return swift_task_switch(sub_10030E2F8, 0, 0);
}

uint64_t sub_10030E2F8()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  id v3;
  _QWORD *v4;

  v1 = *(void **)(v0[4] + OBJC_IVAR___BKEngagementManager_manager);
  v0[15] = v1;
  v2 = dword_1009DA264;
  v3 = v1;
  v4 = (_QWORD *)swift_task_alloc(v2);
  v0[16] = v4;
  *v4 = v0;
  v4[1] = sub_10030E36C;
  return sub_10030E678(v0[14], (uint64_t)v3);
}

uint64_t sub_10030E36C()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 128));
  return swift_task_switch(sub_10030E3C0, 0, 0);
}

uint64_t sub_10030E3C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;

  v1 = *(_QWORD *)(v0 + 104);
  v2 = *(_QWORD *)(v0 + 112);
  v3 = *(_QWORD *)(v0 + 80);
  v4 = *(_QWORD *)(v0 + 88);
  static Date.distantFuture.getter();
  LOBYTE(v2) = static Date.< infix(_:_:)(v2, v1);
  v5 = *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8);
  *(_QWORD *)(v0 + 136) = v5;
  v6 = v5(v1, v3);
  if ((v2 & 1) != 0)
  {
    v7 = *(_QWORD *)(v0 + 112);
    v8 = *(_QWORD *)(v0 + 120);
    v10 = *(_QWORD *)(v0 + 96);
    v9 = *(_QWORD *)(v0 + 104);
    v11 = *(_QWORD *)(v0 + 80);
    v12 = *(_QWORD *)(v0 + 88);
    v13 = *(_QWORD *)(v0 + 72);
    v23 = *(_OWORD *)(v0 + 56);
    Date.init()(v6);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v10, v7, v11);
    v14 = sub_10004CFD4(&qword_1009DA268);
    v15 = swift_task_alloc(64);
    *(_QWORD *)(v0 + 144) = v15;
    *(_QWORD *)(v15 + 16) = v10;
    *(_QWORD *)(v15 + 24) = v8;
    *(_OWORD *)(v15 + 32) = v23;
    *(_QWORD *)(v15 + 48) = v9;
    *(_QWORD *)(v15 + 56) = v13;
    v16 = (_QWORD *)swift_task_alloc(async function pointer to withTaskGroup<A, B>(of:returning:isolation:body:)[1]);
    *(_QWORD *)(v0 + 152) = v16;
    *v16 = v0;
    v16[1] = sub_10030E55C;
    return withTaskGroup<A, B>(of:returning:isolation:body:)(v0 + 16, v14, v14, 0, 0, &unk_1009DA278, v15, v14);
  }
  else
  {
    v18 = *(_QWORD *)(v0 + 112);
    v19 = *(void **)(v0 + 120);
    v20 = *(_QWORD *)(v0 + 80);
    (*(void (**)(_QWORD, _QWORD))(v0 + 40))(0, 0);

    v5(v18, v20);
    v21 = *(_QWORD *)(v0 + 104);
    v22 = *(_QWORD *)(v0 + 96);
    swift_task_dealloc(*(_QWORD *)(v0 + 112));
    swift_task_dealloc(v21);
    swift_task_dealloc(v22);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_10030E55C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 144);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 152));
  swift_task_dealloc(v1);
  return swift_task_switch(sub_10030E5B8, 0, 0);
}

uint64_t sub_10030E5B8()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;
  uint64_t v9;
  uint64_t v10;

  v1 = *(void (**)(uint64_t, uint64_t))(v0 + 136);
  v2 = *(_QWORD *)(v0 + 112);
  v3 = *(void **)(v0 + 120);
  v5 = *(_QWORD *)(v0 + 96);
  v4 = *(_QWORD *)(v0 + 104);
  v6 = *(_QWORD *)(v0 + 80);
  v7 = *(_QWORD *)(v0 + 16);
  v8 = *(_BYTE *)(v0 + 24);
  (*(void (**)(uint64_t, _QWORD))(v0 + 40))(v7, v8);

  sub_100316C94(v7, v8);
  v1(v2, v6);
  v1(v4, v6);
  v1(v5, v6);
  v9 = *(_QWORD *)(v0 + 104);
  v10 = *(_QWORD *)(v0 + 96);
  swift_task_dealloc(*(_QWORD *)(v0 + 112));
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10030E678(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  unint64_t v4;
  _QWORD *v5;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  v4 = (*(_QWORD *)(*(_QWORD *)(sub_10004CFD4(&qword_1009D7440) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[5] = swift_task_alloc(v4);
  v3[6] = swift_task_alloc(v4);
  v5 = (_QWORD *)swift_task_alloc(async function pointer to Manager.getAllConfigurations()[1]);
  v3[7] = v5;
  *v5 = v3;
  v5[1] = sub_10030E704;
  return Manager.getAllConfigurations()();
}

uint64_t sub_10030E704(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 56);
  *(_QWORD *)(*(_QWORD *)v1 + 64) = a1;
  swift_task_dealloc(v2);
  return swift_task_switch(sub_10030E760, 0, 0);
}

void sub_10030E760()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;

  v1 = v0[8];
  if (!((unint64_t)v1 >> 62))
  {
    v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v2)
      goto LABEL_3;
LABEL_18:
    swift_bridgeObjectRelease(v0[8]);
    if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) != 0)
      goto LABEL_30;
    goto LABEL_19;
  }
  if (v1 < 0)
    v9 = v0[8];
  else
    v9 = v1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v1);
  v2 = _CocoaArrayWrapper.endIndex.getter(v9);
  swift_bridgeObjectRelease(v1);
  if (!v2)
    goto LABEL_18;
LABEL_3:
  if (v2 < 1)
  {
    __break(1u);
    goto LABEL_33;
  }
  v3 = 0;
  v4 = v0[8] + 32;
  do
  {
    if ((v1 & 0xC000000000000001) != 0)
    {
      v7 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(v3, v0[8]);
    }
    else
    {
      v7 = *(void **)(v4 + 8 * v3);
      swift_unknownObjectRetain(v7);
    }
    v8 = objc_msgSend(v7, "shouldBeSynced");
    if ((_DWORD)v8)
    {
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v8);
      v5 = _swiftEmptyArrayStorage[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v5);
      v6 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v5, v7);
      specialized ContiguousArray._endMutation()(v6);
    }
    else
    {
      swift_unknownObjectRelease(v7);
    }
    ++v3;
  }
  while (v2 != v3);
  swift_bridgeObjectRelease(v0[8]);
  if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) != 0)
    goto LABEL_30;
LABEL_19:
  if (((unint64_t)_swiftEmptyArrayStorage & 0x4000000000000000) == 0)
  {
    v10 = _swiftEmptyArrayStorage[2];
    if (!v10)
    {
LABEL_31:
      swift_release(_swiftEmptyArrayStorage);
      v21 = v0[4];
      v22 = sub_10003455C((uint64_t)_swiftEmptyArrayStorage);
      v0[9] = v22;
      swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
      v23 = swift_task_alloc(32);
      v0[10] = v23;
      *(_QWORD *)(v23 + 16) = v21;
      v24 = (_QWORD *)swift_task_alloc(async function pointer to Manager.getEarliestTimestamp(propertyNames:assetIDs:earliestTimestampComparator:)[1]);
      v0[11] = v24;
      *v24 = v0;
      v24[1] = sub_10030EA58;
      Manager.getEarliestTimestamp(propertyNames:assetIDs:earliestTimestampComparator:)(v0[6], v22, 0, sub_100317240, v23);
      return;
    }
    goto LABEL_21;
  }
LABEL_30:
  swift_bridgeObjectRetain(_swiftEmptyArrayStorage);
  v10 = _CocoaArrayWrapper.endIndex.getter(v20);
  swift_release(_swiftEmptyArrayStorage);
  if (!v10)
    goto LABEL_31;
LABEL_21:
  sub_100045E44(0, v10 & ~(v10 >> 63), 0);
  if ((v10 & 0x8000000000000000) == 0)
  {
    v11 = 0;
    do
    {
      if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000001) != 0)
      {
        v12 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(v11, _swiftEmptyArrayStorage);
      }
      else
      {
        v12 = (void *)_swiftEmptyArrayStorage[v11 + 4];
        swift_unknownObjectRetain(v12);
      }
      v13 = objc_msgSend(v12, "eventName");
      v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
      v16 = v15;

      swift_unknownObjectRelease(v12);
      v18 = _swiftEmptyArrayStorage[2];
      v17 = _swiftEmptyArrayStorage[3];
      if (v18 >= v17 >> 1)
        sub_100045E44(v17 > 1, v18 + 1, 1);
      ++v11;
      _swiftEmptyArrayStorage[2] = v18 + 1;
      v19 = &_swiftEmptyArrayStorage[2 * v18];
      v19[4] = v14;
      v19[5] = v16;
    }
    while (v10 != v11);
    goto LABEL_31;
  }
LABEL_33:
  __break(1u);
}

uint64_t sub_10030EA58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 80);
  v2 = *(_QWORD *)(*(_QWORD *)v0 + 72);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 88));
  swift_bridgeObjectRelease(v2);
  swift_task_dealloc(v1);
  return swift_task_switch(sub_10030EAC0, 0, 0);
}

uint64_t sub_10030EAC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 40);
  sub_10000B5E4(*(_QWORD *)(v0 + 48), v1, &qword_1009D7440);
  v2 = type metadata accessor for Date(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2);
  v5 = *(_QWORD *)(v0 + 40);
  v6 = *(_QWORD *)(v0 + 48);
  v7 = *(_QWORD *)(v0 + 16);
  if (v4 == 1)
  {
    static Date.distantFuture.getter();
    sub_100010960(v6, &qword_1009D7440);
    sub_100010960(v5, &qword_1009D7440);
  }
  else
  {
    sub_100010960(*(_QWORD *)(v0 + 48), &qword_1009D7440);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v7, v5, v2);
  }
  v8 = *(_QWORD *)(v0 + 40);
  swift_task_dealloc(*(_QWORD *)(v0 + 48));
  swift_task_dealloc(v8);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10030EBA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;

  v8[17] = a7;
  v8[18] = a8;
  v8[15] = a5;
  v8[16] = a6;
  v8[13] = a3;
  v8[14] = a4;
  v8[11] = a1;
  v8[12] = a2;
  v9 = sub_10004CFD4(&qword_1009DA280);
  v8[19] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v8[20] = v10;
  v8[21] = swift_task_alloc((*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (*(_QWORD *)(*(_QWORD *)(sub_10004CFD4(&qword_1009D3150) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v8[22] = swift_task_alloc(v11);
  v8[23] = swift_task_alloc(v11);
  v12 = type metadata accessor for Date(0);
  v8[24] = v12;
  v13 = *(_QWORD *)(v12 - 8);
  v8[25] = v13;
  v14 = (*(_QWORD *)(v13 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v8[26] = swift_task_alloc(v14);
  v8[27] = swift_task_alloc(v14);
  v8[28] = swift_task_alloc(v14);
  v8[29] = swift_task_alloc(v14);
  v8[30] = swift_task_alloc(v14);
  v15 = type metadata accessor for DateInterval(0);
  v8[31] = v15;
  v16 = *(_QWORD *)(v15 - 8);
  v8[32] = v16;
  v17 = *(_QWORD *)(v16 + 64);
  v8[33] = v17;
  v18 = (v17 + 15) & 0xFFFFFFFFFFFFFFF0;
  v8[34] = swift_task_alloc(v18);
  v8[35] = swift_task_alloc(v18);
  return swift_task_switch(sub_10030ECDC, 0, 0);
}

uint64_t sub_10030ECDC()
{
  uint64_t v0;
  void (*v1)(_QWORD, _QWORD, _QWORD);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  double v19;
  void (*v20)(uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  id v28;
  id v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  unsigned __int8 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t ObjectType;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  void (*v46)(_QWORD, _QWORD, _QWORD);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  void *v56;
  void *v57;
  uint64_t v58;
  void (*v59)(uint64_t, uint64_t);
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;

  v47 = *(_QWORD *)(v0 + 264) + 7;
  v1 = *(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 200) + 16);
  v60 = *(_QWORD *)(v0 + 200);
  v61 = *(_QWORD *)(v0 + 256);
  v46 = v1;
  do
  {
    v50 = *(_QWORD *)(v0 + 280);
    v52 = *(_QWORD *)(v0 + 272);
    v12 = *(_QWORD *)(v0 + 240);
    v53 = *(_QWORD *)(v0 + 248);
    v14 = *(_QWORD *)(v0 + 224);
    v13 = *(_QWORD *)(v0 + 232);
    v15 = *(_QWORD *)(v0 + 208);
    v16 = *(_QWORD *)(v0 + 216);
    v17 = *(_QWORD *)(v0 + 192);
    v63 = *(_QWORD *)(v0 + 184);
    v57 = *(void **)(v0 + 128);
    v58 = *(_QWORD *)(v0 + 176);
    v56 = *(void **)(v0 + 120);
    v54 = *(_QWORD *)(v0 + 144);
    v55 = *(void **)(v0 + 112);
    v1(v12, *(_QWORD *)(v0 + 104), v17);
    v18 = sub_100312F70(v12, v13);
    Date.addingTimeInterval(_:)(v18, 129600.0);
    sub_100312F70(v14, v16);
    v1(v15, v13, v17);
    v19 = Date.timeIntervalSince(_:)(v13);
    DateInterval.init(start:duration:)(v15, v19);
    v20 = *(void (**)(uint64_t, uint64_t))(v60 + 8);
    v20(v16, v17);
    v20(v14, v17);
    v20(v13, v17);
    v59 = v20;
    v20(v12, v17);
    v48 = type metadata accessor for TaskPriority(0);
    v49 = *(_QWORD *)(v48 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v49 + 56))(v63, 1, 1, v48);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v61 + 16))(v52, v50, v53);
    v21 = *(unsigned __int8 *)(v61 + 80);
    v22 = (v21 + 32) & ~v21;
    v23 = (v47 + v22) & 0xFFFFFFFFFFFFFFF8;
    v24 = (v23 + 15) & 0xFFFFFFFFFFFFFFF8;
    v25 = (v24 + 15) & 0xFFFFFFFFFFFFFFF8;
    v26 = (v25 + 15) & 0xFFFFFFFFFFFFFFF8;
    v27 = swift_allocObject(&unk_1008FC600, v26 + 8, v21 | 7);
    *(_QWORD *)(v27 + 16) = 0;
    v51 = (uint64_t *)(v27 + 16);
    *(_QWORD *)(v27 + 24) = 0;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v61 + 32))(v27 + v22, v52, v53);
    *(_QWORD *)(v27 + v23) = v55;
    *(_QWORD *)(v27 + v24) = v56;
    *(_QWORD *)(v27 + v25) = v57;
    *(_QWORD *)(v27 + v26) = v54;
    sub_10000B5E4(v63, v58, &qword_1009D3150);
    LODWORD(v23) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v49 + 48))(v58, 1, v48);
    v28 = v55;
    v29 = v56;
    v30 = v57;
    v31 = *(_QWORD *)(v0 + 176);
    if ((_DWORD)v23 == 1)
    {
      sub_100010960(*(_QWORD *)(v0 + 176), &qword_1009D3150);
      v32 = 0;
    }
    else
    {
      v33 = TaskPriority.rawValue.getter(v30);
      (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v31, v48);
      v32 = v33;
    }
    v34 = *v51;
    if (*v51)
    {
      v35 = *(_QWORD *)(v27 + 24);
      ObjectType = swift_getObjectType();
      swift_unknownObjectRetain(v34);
      v37 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v35);
      v39 = v38;
      swift_unknownObjectRelease(v34);
    }
    else
    {
      v37 = 0;
      v39 = 0;
    }
    v40 = **(_QWORD **)(v0 + 96);
    v41 = swift_allocObject(&unk_1008FC628, 32, 7);
    *(_QWORD *)(v41 + 16) = &unk_1009DA290;
    *(_QWORD *)(v41 + 24) = v27;
    v42 = sub_10004CFD4(&qword_1009DA268);
    v43 = v39 | v37;
    if (v39 | v37)
    {
      v43 = v0 + 16;
      *(_QWORD *)(v0 + 16) = 0;
      *(_QWORD *)(v0 + 24) = 0;
      *(_QWORD *)(v0 + 32) = v37;
      *(_QWORD *)(v0 + 40) = v39;
    }
    v2 = v32 | 0x3100;
    v3 = *(_QWORD *)(v0 + 280);
    v5 = *(_QWORD *)(v0 + 240);
    v4 = *(_QWORD *)(v0 + 248);
    v7 = *(_QWORD *)(v0 + 184);
    v6 = *(_QWORD *)(v0 + 192);
    v62 = *(_QWORD *)(v0 + 136);
    v8 = *(_QWORD *)(v0 + 104);
    *(_QWORD *)(v0 + 48) = 1;
    *(_QWORD *)(v0 + 56) = v43;
    *(_QWORD *)(v0 + 64) = v40;
    v9 = swift_task_create(v2, v0 + 48, v42, &unk_1009DA298, v41);
    swift_release(v9);
    v10 = sub_100010960(v7, &qword_1009D3150);
    DateInterval.end.getter(v10);
    (*(void (**)(uint64_t, uint64_t))(v61 + 8))(v3, v4);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v60 + 40))(v8, v5, v6);
    v1 = v46;
    v46(v5, v8, v6);
    v11 = static Date.< infix(_:_:)(v5, v62);
    v59(v5, v6);
  }
  while ((v11 & 1) != 0);
  TaskGroup.makeAsyncIterator()(**(_QWORD **)(v0 + 96), v42);
  v44 = (_QWORD *)swift_task_alloc(async function pointer to TaskGroup.Iterator.next(isolation:)[1]);
  *(_QWORD *)(v0 + 288) = v44;
  *v44 = v0;
  v44[1] = sub_10030F144;
  return TaskGroup.Iterator.next(isolation:)(v0 + 72, 0, 0, *(_QWORD *)(v0 + 152));
}

uint64_t sub_10030F144()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 288));
  return swift_task_switch(sub_10030F198, 0, 0);
}

uint64_t sub_10030F198()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  _QWORD *v3;
  BOOL v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v1 = *(_QWORD *)(v0 + 72);
  v2 = *(unsigned __int8 *)(v0 + 80);
  if (v2 == 255)
  {
    v1 = 0;
  }
  else if ((v2 & 1) == 0)
  {
    v3 = (_QWORD *)swift_task_alloc(async function pointer to TaskGroup.Iterator.next(isolation:)[1]);
    *(_QWORD *)(v0 + 288) = v3;
    *v3 = v0;
    v3[1] = sub_10030F144;
    return TaskGroup.Iterator.next(isolation:)(v0 + 72, 0, 0, *(_QWORD *)(v0 + 152));
  }
  v5 = v2 != 255;
  v6 = *(_QWORD *)(v0 + 272);
  v7 = *(_QWORD *)(v0 + 280);
  v9 = *(_QWORD *)(v0 + 232);
  v8 = *(_QWORD *)(v0 + 240);
  v10 = *(_QWORD *)(v0 + 224);
  v13 = *(_QWORD *)(v0 + 216);
  v14 = *(_QWORD *)(v0 + 208);
  v11 = *(_QWORD *)(v0 + 168);
  v15 = *(_QWORD *)(v0 + 184);
  v16 = *(_QWORD *)(v0 + 176);
  v12 = *(_QWORD *)(v0 + 88);
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 160) + 8))(v11, *(_QWORD *)(v0 + 152));
  *(_QWORD *)v12 = v1;
  *(_BYTE *)(v12 + 8) = v5;
  swift_task_dealloc(v7);
  swift_task_dealloc(v6);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v11);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10030F2EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v8[13] = a7;
  v8[14] = a8;
  v8[11] = a5;
  v8[12] = a6;
  v8[9] = a1;
  v8[10] = a4;
  v9 = type metadata accessor for Logger(0);
  v8[15] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v8[16] = v10;
  v8[17] = swift_task_alloc((*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_10030F354, 0, 0);
}

uint64_t sub_10030F354()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v3;
  _QWORD *v4;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 112);
  v2 = swift_task_alloc(64);
  *(_QWORD *)(v0 + 144) = v2;
  v3 = *(_OWORD *)(v0 + 96);
  *(int8x16_t *)(v2 + 16) = vextq_s8(*(int8x16_t *)(v0 + 80), *(int8x16_t *)(v0 + 80), 8uLL);
  *(_QWORD *)(v2 + 32) = v1;
  *(_OWORD *)(v2 + 40) = v3;
  v4 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
  *(_QWORD *)(v0 + 152) = v4;
  v5 = sub_10004CFD4(&qword_1009DA268);
  *v4 = v0;
  v4[1] = sub_10030F414;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v0 + 40, 0, 0, 0xD00000000000003BLL, 0x80000001007BEAA0, sub_100316EAC, v2, v5);
}

uint64_t sub_10030F414()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 152);
  *(_QWORD *)(*v1 + 160) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = sub_10030F4C4;
  }
  else
  {
    swift_task_dealloc(*(_QWORD *)(v2 + 144));
    v4 = sub_10030F480;
  }
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_10030F480()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_BYTE *)(v0 + 48);
  v2 = *(_QWORD *)(v0 + 136);
  v3 = *(_QWORD *)(v0 + 72);
  *(_QWORD *)v3 = *(_QWORD *)(v0 + 40);
  *(_BYTE *)(v3 + 8) = v1;
  swift_task_dealloc(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10030F4C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint64_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v1 = *(_QWORD *)(v0 + 160);
  v2 = swift_task_dealloc(*(_QWORD *)(v0 + 144));
  static Logger.engagement.getter(v2);
  swift_errorRetain(v1);
  v3 = swift_errorRetain(v1);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.error.getter(v4);
  if (os_log_type_enabled(v4, v5))
  {
    v6 = *(_QWORD *)(v0 + 160);
    v19 = *(_QWORD *)(v0 + 128);
    v20 = *(_QWORD *)(v0 + 120);
    v21 = *(_QWORD *)(v0 + 136);
    v7 = (uint8_t *)swift_slowAlloc(12, -1);
    v8 = swift_slowAlloc(32, -1);
    v22 = v8;
    *(_DWORD *)v7 = 136315138;
    swift_getErrorValue(v6, v0 + 56, v0 + 16);
    v9 = Error.localizedDescription.getter(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
    v11 = v10;
    *(_QWORD *)(v0 + 64) = sub_100040F58(v9, v10, &v22);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 64, v0 + 72, v7 + 4, v7 + 12);
    swift_bridgeObjectRelease(v11);
    swift_errorRelease(v6);
    swift_errorRelease(v6);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Error syncing bucket to CloudKit: %s", v7, 0xCu);
    swift_arrayDestroy(v8, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v8, -1, -1);
    swift_slowDealloc(v7, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v21, v20);
  }
  else
  {
    v12 = *(_QWORD *)(v0 + 160);
    v14 = *(_QWORD *)(v0 + 128);
    v13 = *(_QWORD *)(v0 + 136);
    v15 = *(_QWORD *)(v0 + 120);
    swift_errorRelease(v12);
    swift_errorRelease(v12);

    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v15);
  }
  v16 = *(_QWORD *)(v0 + 136);
  v17 = *(_QWORD *)(v0 + 72);
  *(_QWORD *)v17 = *(_QWORD *)(v0 + 160);
  *(_BYTE *)(v17 + 8) = 1;
  swift_task_dealloc(v16);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10030F6C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  NSString v31;
  double v32;
  id v33;
  id v34;
  void (*v35)(char *, char *, uint64_t);
  char *v36;
  uint64_t v37;
  void (*v38)(char *, _QWORD, uint64_t, uint64_t);
  char *v39;
  uint64_t (*v40)(char *, uint64_t, uint64_t);
  int v41;
  uint64_t v42;
  void (*v43)(char *, char *, uint64_t);
  uint64_t result;
  uint64_t v45;
  void (*v46)(char *, uint64_t);
  BOOL v47;
  void (*v48)(char *, _QWORD, uint64_t, uint64_t);
  id v49;
  char *v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD v54[2];
  _BYTE v55[32];
  char v56[32];
  uint64_t v57;
  char v58;

  v51 = a3;
  v53 = a4;
  v52 = type metadata accessor for Date(0);
  v6 = *(_QWORD *)(v52 - 8);
  __chkstk_darwin(v52);
  v8 = (char *)&v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v48 - v10;
  __chkstk_darwin(v12);
  v50 = (char *)&v48 - v13;
  v14 = sub_10004CFD4(&qword_1009D7440);
  __chkstk_darwin(v14);
  v16 = (char *)&v48 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v19 = (char *)&v48 - v18;
  __chkstk_darwin(v20);
  v22 = (char *)&v48 - v21;
  __chkstk_darwin(v23);
  v25 = (char *)&v48 - v24;
  sub_10000B5E4(a2, (uint64_t)&v48 - v24, &qword_1009D7440);
  sub_100316B8C(a1, (uint64_t)v56);
  if (v58 != 2)
    goto LABEL_11;
  v26 = v57;
  if (!*(_QWORD *)(v57 + 16))
    goto LABEL_11;
  v27 = sub_10004CE80(0x6D617473656D6974, 0xE900000000000070);
  if ((v28 & 1) == 0)
    goto LABEL_11;
  sub_10004CD0C(*(_QWORD *)(v26 + 56) + 32 * v27, (uint64_t)v55);
  v29 = sub_10004CFD4(&qword_1009DA340);
  if ((swift_dynamicCast(v54, v55, v29, &type metadata for String, 6) & 1) == 0)
    goto LABEL_11;
  v30 = v54[1];
  v48 = (void (*)(char *, _QWORD, uint64_t, uint64_t))v54[0];
  v49 = sub_10030DBB0();
  v31 = String._bridgeToObjectiveC()();
  v51 = v31;
  *(_QWORD *)&v32 = swift_bridgeObjectRelease(v30).n128_u64[0];
  v33 = v49;
  v34 = objc_msgSend(v49, "dateFromString:", v31, v32);

  if (!v34)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v22, 1, 1, v52);
    goto LABEL_10;
  }
  static Date._unconditionallyBridgeFromObjectiveC(_:)(v34);

  v35 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
  v36 = v11;
  v37 = v52;
  v35(v22, v36, v52);
  v38 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v6 + 56);
  v38(v22, 0, 1, v37);
  v51 = *(id *)(v6 + 48);
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v51)(v22, 1, v37) == 1)
  {
LABEL_10:
    sub_100010960((uint64_t)v25, &qword_1009D7440);
    v25 = v22;
LABEL_11:
    sub_100010960((uint64_t)v25, &qword_1009D7440);
    return sub_10000B5E4(a2, v53, &qword_1009D7440);
  }
  v48 = v38;
  v49 = v35;
  v39 = v50;
  v35(v50, v22, v37);
  sub_10000B5E4((uint64_t)v25, (uint64_t)v19, &qword_1009D7440);
  v40 = (uint64_t (*)(char *, uint64_t, uint64_t))v51;
  v41 = ((uint64_t (*)(char *, uint64_t, uint64_t))v51)(v19, 1, v37);
  sub_100010960((uint64_t)v19, &qword_1009D7440);
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v8, v39, v37);
  v42 = v37;
  if (v41 == 1)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v37);
    v43 = (void (*)(char *, char *, uint64_t))v49;
    goto LABEL_16;
  }
  sub_10000B5E4((uint64_t)v25, (uint64_t)v16, &qword_1009D7440);
  result = v40(v16, 1, v37);
  if ((_DWORD)result != 1)
  {
    v45 = Date.compare(_:)(v16);
    v46 = *(void (**)(char *, uint64_t))(v6 + 8);
    v46(v16, v42);
    v46(v8, v42);
    v47 = v45 == -1;
    v43 = (void (*)(char *, char *, uint64_t))v49;
    if (!v47)
    {
      v46(v50, v42);
      return sub_100025B3C((uint64_t)v25, v53, &qword_1009D7440);
    }
LABEL_16:
    sub_100010960((uint64_t)v25, &qword_1009D7440);
    v43(v25, v50, v42);
    v48(v25, 0, 1, v42);
    return sub_100025B3C((uint64_t)v25, v53, &qword_1009D7440);
  }
  __break(1u);
  return result;
}

double sub_10030FB14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, void *a6)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v22;
  _QWORD *v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  id v42;
  void *v43;
  id v44;
  id v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  double result;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  _QWORD *v55;
  char *v56;
  char *v57;
  id v58;
  uint64_t v59;
  uint64_t v60;
  void *v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  void *v66;
  uint64_t v67;
  uint64_t v68;

  v61 = a6;
  v62 = a2;
  v66 = a5;
  v64 = a4;
  v59 = a1;
  v7 = sub_10004CFD4(&qword_1009DA2A0);
  v67 = *(_QWORD *)(v7 - 8);
  v68 = v7;
  v60 = *(_QWORD *)(v67 + 64);
  __chkstk_darwin(v7);
  v63 = (char *)&v51 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for DateInterval(0);
  v65 = *(_QWORD *)(v9 - 8);
  v52 = v9;
  v10 = *(_QWORD *)(v65 + 64);
  __chkstk_darwin(v9);
  v53 = (char *)&v51 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_10004CFD4(&qword_1009D7440);
  __chkstk_darwin(v11);
  v13 = (char *)&v51 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)&v51 - v15;
  v17 = objc_msgSend((id)objc_opt_self(BDSSecureManager), "sharedManager");
  v58 = objc_msgSend(v17, "engagementManager");

  v18 = swift_allocObject(&unk_1008FC650, 24, 7);
  *(_QWORD *)(v18 + 16) = _swiftEmptyDictionarySingleton;
  v54 = v18;
  v19 = swift_allocObject(&unk_1008FC678, 24, 7);
  *(_QWORD *)(v19 + 16) = _swiftEmptyDictionarySingleton;
  v57 = v16;
  DateInterval.start.getter(v19);
  v20 = type metadata accessor for Date(0);
  v21 = *(uint64_t (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56);
  v22 = v21(v16, 0, 1, v20);
  v56 = v13;
  DateInterval.end.getter(v22);
  v21(v13, 0, 1, v20);
  v23 = (_QWORD *)swift_allocObject(&unk_1008FC6A0, 48, 7);
  v55 = v23;
  v24 = v66;
  v23[2] = v64;
  v23[3] = v24;
  v23[4] = v18;
  v23[5] = v19;
  v25 = v19;
  v26 = v65;
  (*(void (**)(char *, uint64_t, uint64_t))(v65 + 16))((char *)&v51 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), a3, v9);
  v27 = v67;
  (*(void (**)(char *, uint64_t, uint64_t))(v67 + 16))(v63, v59, v68);
  v28 = *(unsigned __int8 *)(v26 + 80);
  v29 = (v28 + 16) & ~v28;
  v30 = (v10 + v29 + 7) & 0xFFFFFFFFFFFFFFF8;
  v31 = (v30 + 15) & 0xFFFFFFFFFFFFFFF8;
  v32 = (v31 + 15) & 0xFFFFFFFFFFFFFFF8;
  v33 = *(unsigned __int8 *)(v27 + 80);
  v34 = (v33 + v32 + 8) & ~v33;
  v35 = (v60 + v34 + 7) & 0xFFFFFFFFFFFFFFF8;
  v36 = (v35 + 15) & 0xFFFFFFFFFFFFFFF8;
  v37 = (v36 + 15) & 0xFFFFFFFFFFFFFFF8;
  v38 = swift_allocObject(&unk_1008FC6C8, v37 + 8, v28 | v33 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v65 + 32))(v38 + v29, v53, v52);
  *(_QWORD *)(v38 + v30) = v25;
  v39 = v54;
  *(_QWORD *)(v38 + v31) = v54;
  v41 = v66;
  v40 = v67;
  *(_QWORD *)(v38 + v32) = v66;
  (*(void (**)(uint64_t, char *, uint64_t))(v40 + 32))(v38 + v34, v63, v68);
  *(_QWORD *)(v38 + v35) = v64;
  v42 = v58;
  *(_QWORD *)(v38 + v36) = v58;
  v43 = v61;
  *(_QWORD *)(v38 + v37) = v61;
  v44 = v41;
  swift_retain_n(v39, 2);
  swift_retain_n(v25, 2);
  v45 = v44;
  swift_unknownObjectRetain(v42);
  v46 = v43;
  v47 = (uint64_t)v56;
  v48 = (uint64_t)v57;
  v49 = v55;
  Manager.enumerate(startDate:endDate:closure:completion:)(v57, v56, sub_100316F14, v55, sub_10031704C, v38);
  swift_release(v38);
  swift_release(v49);
  swift_unknownObjectRelease(v42);
  sub_100010960(v47, &qword_1009D7440);
  sub_100010960(v48, &qword_1009D7440);
  swift_release(v25);
  *(_QWORD *)&result = swift_release(v39).n128_u64[0];
  return result;
}

id sub_10030FEE8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  double v25;
  uint64_t v26;
  char *v27;
  id result;
  id v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  uint64_t *v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  __n128 v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  void *v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  void (*v52)(char *, uint64_t, uint64_t, uint64_t);
  _QWORD *v53;
  int v54;
  id v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  id v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  unint64_t v66;
  char v67;
  _QWORD *v68;
  Class isa;
  id v70;
  uint64_t v71;
  void *v72;
  void *v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  unint64_t v77;
  Swift::String v78;
  unint64_t v79;
  Swift::String v80;
  Swift::String v81;
  __n128 v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v90;
  id v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char v95;
  uint64_t v96;
  _QWORD v97[2];
  char *v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  unint64_t v110;

  v101 = a6;
  v102 = a7;
  v105 = a4;
  v11 = sub_10004CFD4(&qword_1009DA310);
  __chkstk_darwin(v11);
  v98 = (char *)v97 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)v97 - v14;
  v16 = sub_10004CFD4(&qword_1009DA308);
  __chkstk_darwin(v16);
  v18 = (char *)v97 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for PBPropertyValue(0);
  v20 = *(_QWORD *)(v19 - 8);
  __chkstk_darwin(v19);
  v99 = (char *)v97 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v106 = (char *)v97 - v23;
  v24 = type metadata accessor for PBPropertyConfiguration(0);
  v107 = *(_QWORD *)(v24 - 8);
  v25 = __chkstk_darwin(v24);
  v27 = (char *)v97 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = objc_msgSend(a1, "shouldBeSynced", v25);
  if ((_DWORD)result)
  {
    v97[1] = a3;
    v104 = v24;
    PBPropertyConfiguration.init()();
    v29 = objc_msgSend(a1, "ageToExpire");
    v100 = v20;
    PBPropertyConfiguration.ageToExpire.setter(v29);
    PBPropertyConfiguration.countLimit.setter(objc_msgSend(a1, "countLimit"));
    v30 = objc_msgSend(a1, "eventName");
    v31 = static String._unconditionallyBridgeFromObjectiveC(_:)(v30);
    v103 = v19;
    v33 = v32;

    v34 = v31;
    v35 = v103;
    PBPropertyConfiguration.eventName.setter(v34, v33);
    v36 = PropertyType.rawValue.getter(objc_msgSend(a1, "recordType"));
    PBPropertyConfiguration.recordType.setter(v36);
    sub_1003105AC(a2, a5, (uint64_t)v18);
    v37 = v100;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v100 + 48))(v18, 1, v35) == 1)
    {
      (*(void (**)(char *, uint64_t))(v107 + 8))(v27, v104);
      return (id)sub_100010960((uint64_t)v18, &qword_1009DA308);
    }
    else
    {
      v38 = a5;
      v39 = (uint64_t *)(v101 + 16);
      (*(void (**)(char *, char *, uint64_t))(v37 + 32))(v106, v18, v35);
      v40 = objc_msgSend(a1, "eventName");
      v41 = static String._unconditionallyBridgeFromObjectiveC(_:)(v40);
      v43 = v42;

      v44 = swift_beginAccess(v39, &v109, 32, 0);
      v45 = *v39;
      if (*(_QWORD *)(*v39 + 16))
      {
        v46 = sub_10004CE80(v41, v43);
        v47 = v104;
        v48 = v38;
        if ((v49 & 1) != 0)
        {
          v50 = *(_QWORD *)(v45 + 56);
          v51 = v107;
          (*(void (**)(char *, unint64_t, uint64_t))(v107 + 16))(v15, v50 + *(_QWORD *)(v107 + 72) * v46, v104);
          v52 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v51 + 56);
          v52(v15, 0, 1, v47);
        }
        else
        {
          v51 = v107;
          v52 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v107 + 56);
          v52(v15, 1, 1, v104);
        }
      }
      else
      {
        v51 = v107;
        v52 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v107 + 56);
        v47 = v104;
        ((void (*)(char *, uint64_t, uint64_t, uint64_t, __n128))v52)(v15, 1, 1, v104, v44);
        v48 = v38;
      }
      v53 = (_QWORD *)(v102 + 16);
      swift_bridgeObjectRelease(v43);
      swift_endAccess(&v109);
      v54 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v51 + 48))(v15, 1, v47);
      sub_100010960((uint64_t)v15, &qword_1009DA310);
      if (v54 == 1)
      {
        v55 = objc_msgSend(a1, "eventName");
        v56 = static String._unconditionallyBridgeFromObjectiveC(_:)(v55);
        v58 = v57;

        v59 = (uint64_t)v98;
        (*(void (**)(char *, char *, uint64_t))(v107 + 16))(v98, v27, v104);
        v52((char *)v59, 0, 1, v104);
        swift_beginAccess(v39, &v109, 33, 0);
        sub_1004EF794(v59, v56, v58);
        swift_endAccess(&v109);
      }
      v60 = objc_msgSend(a1, "eventName");
      v61 = static String._unconditionallyBridgeFromObjectiveC(_:)(v60);
      v63 = v62;

      swift_beginAccess(v53, &v109, 32, 0);
      v64 = *v53;
      v65 = v106;
      if (*(_QWORD *)(*v53 + 16) && (v66 = sub_10004CE80(v61, v63), (v67 & 1) != 0))
      {
        v68 = *(_QWORD **)(*(_QWORD *)(v64 + 56) + 8 * v66);
        swift_endAccess(&v109);
        swift_bridgeObjectRetain(v68);
        swift_bridgeObjectRelease(v63);
      }
      else
      {
        swift_bridgeObjectRelease(v63);
        swift_endAccess(&v109);
        v68 = _swiftEmptyDictionarySingleton;
      }
      isa = Date._bridgeToObjectiveC()().super.isa;
      v70 = objc_msgSend(v48, "stringFromDate:", isa);

      v71 = static String._unconditionallyBridgeFromObjectiveC(_:)(v70);
      v73 = v72;

      v74 = PBPropertyValue.hasIdentifier.getter();
      if ((v74 & 1) != 0)
      {
        v75 = PBPropertyValue.identifier.getter(v74);
        v77 = v76;
        v109 = v75;
        v110 = v76;
        swift_bridgeObjectRetain(v76);
        v78._countAndFlagsBits = 124;
        v78._object = (void *)0xE100000000000000;
        String.append(_:)(v78);
        swift_bridgeObjectRelease(v77);
        v79 = v110;
        swift_bridgeObjectRetain(v110);
        v80._countAndFlagsBits = v71;
        v80._object = v73;
        String.append(_:)(v80);
        swift_bridgeObjectRelease(v79);
      }
      else
      {
        v109 = 124;
        v110 = 0xE100000000000000;
        v81._countAndFlagsBits = v71;
        v81._object = v73;
        String.append(_:)(v81);
      }
      v82 = swift_bridgeObjectRelease(v73);
      v84 = v109;
      v83 = v110;
      v85 = (uint64_t)v99;
      v86 = v100;
      v87 = v65;
      v88 = v103;
      (*(void (**)(char *, char *, uint64_t, __n128))(v100 + 16))(v99, v87, v103, v82);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v68);
      v109 = (uint64_t)v68;
      sub_1002C4078(v85, v84, v83, isUniquelyReferenced_nonNull_native);
      v90 = v109;
      swift_bridgeObjectRelease(v83);
      v91 = objc_msgSend(a1, "eventName", swift_bridgeObjectRelease(0x8000000000000000).n128_f64[0]);
      v92 = static String._unconditionallyBridgeFromObjectiveC(_:)(v91);
      v94 = v93;

      swift_beginAccess(v53, &v109, 33, 0);
      v95 = swift_isUniquelyReferenced_nonNull_native(*v53);
      v108 = *v53;
      *v53 = 0x8000000000000000;
      sub_1002C405C(v90, v92, v94, v95);
      v96 = *v53;
      *v53 = v108;
      swift_bridgeObjectRelease(v94);
      swift_bridgeObjectRelease(v96);
      swift_endAccess(&v109);
      (*(void (**)(char *, uint64_t))(v86 + 8))(v106, v88);
      return (id)(*(uint64_t (**)(char *, uint64_t))(v107 + 8))(v27, v104);
    }
  }
  return result;
}

uint64_t sub_1003105AC@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  double v34;
  uint64_t v35;
  char *v36;
  uint64_t (*v37)(uint64_t, uint64_t, uint64_t, uint64_t, double);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  char *v46;
  uint64_t v47;
  unint64_t v48;
  char v49;
  unint64_t v50;
  NSString v51;
  id v52;
  char *v53;
  void (*v54)(uint64_t, char *, uint64_t);
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  __n128 v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  NSObject *v73;
  os_log_type_t v74;
  uint8_t *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  unint64_t v80;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  char *v87;
  unint64_t v88;
  char v89;
  double v90;
  uint64_t v91;
  float v92;
  unint64_t v93;
  uint64_t v94;
  uint64_t (*v95)(uint64_t, uint64_t, uint64_t, uint64_t, double);
  uint64_t v96;
  char v97;
  unint64_t v98;
  char v99;
  __n128 v100;
  double v101;
  char *v102;
  uint64_t v103;
  float v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  unint64_t v108;
  char v109;
  __n128 v110;
  uint64_t v111;
  void *v112;
  Swift::String v113;
  unint64_t v114;
  __n128 v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  char *v120;
  unint64_t v121;
  char v122;
  uint64_t v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  char *v132;
  char *v133;
  char v134;
  uint64_t v135;
  char *v136;
  char *v137;
  uint64_t v138;
  uint64_t (*v139)(uint64_t, uint64_t, uint64_t, uint64_t, double);
  uint64_t v140;
  char *v141;
  uint64_t v142;
  char *v143;
  char *v144;
  uint64_t v145;
  uint64_t v146;
  char *v147;
  char *v148;
  char *v149;
  uint64_t v150;
  uint64_t v151;
  char *v152;
  char *v153;
  uint64_t v154;
  uint64_t Params;
  uint64_t v156;
  char *v157;
  char *v158;
  uint64_t v159;
  char *v160;
  uint64_t v161;
  char *v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  char *v167;
  uint64_t v168;
  uint64_t v169;
  char *v170;
  char *v171;
  void *v172;
  uint64_t v173;
  uint64_t v174;
  char *v175;
  _QWORD v176[2];
  __int128 v177;
  __int128 v178;
  uint64_t v179;
  char v180[8];
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  _QWORD v186[2];
  char v187;
  uint64_t v188[5];
  char v189;

  v172 = a2;
  sub_100316B8C(a1, (uint64_t)v180);
  v165 = v181;
  v161 = v182;
  v163 = v183;
  v164 = v184;
  v174 = type metadata accessor for Logger(0);
  v173 = *(_QWORD *)(v174 - 8);
  __chkstk_darwin(v174);
  v175 = (char *)&v138 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v159 = type metadata accessor for PBPropertyBookImpressionParam(0);
  v168 = *(_QWORD *)(v159 - 8);
  __chkstk_darwin(v159);
  v167 = (char *)&v138 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v158 = (char *)&v138 - v8;
  v9 = sub_10004CFD4((uint64_t *)&unk_1009DA320);
  __chkstk_darwin(v9);
  v149 = (char *)&v138 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v146 = type metadata accessor for MarkedAsFinishedMechanism(0);
  v145 = *(_QWORD *)(v146 - 8);
  __chkstk_darwin(v146);
  v148 = (char *)&v138 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v151 = type metadata accessor for PBPropertyMarkedAsFinishedParam(0);
  v150 = *(_QWORD *)(v151 - 8);
  __chkstk_darwin(v151);
  v147 = (char *)&v138 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v160 = (char *)&v138 - v14;
  v169 = type metadata accessor for PBPropertySingleFloatParam(0);
  v154 = *(_QWORD *)(v169 - 8);
  __chkstk_darwin(v169);
  v153 = (char *)&v138 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v152 = (char *)&v138 - v17;
  Params = type metadata accessor for PBPropertyBookReadParams(0);
  v156 = *(_QWORD *)(Params - 8);
  __chkstk_darwin(Params);
  v157 = (char *)&v138 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v162 = (char *)&v138 - v20;
  v21 = type metadata accessor for Google_Protobuf_Timestamp(0);
  __chkstk_darwin(v21);
  v171 = (char *)&v138 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = type metadata accessor for PBPropertyValue(0);
  v24 = *(_QWORD *)(v23 - 8);
  __chkstk_darwin(v23);
  v26 = (char *)&v138 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = sub_10004CFD4(&qword_1009D7440);
  __chkstk_darwin(v27);
  v170 = (char *)&v138 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = type metadata accessor for Date(0);
  v30 = *(_QWORD *)(v29 - 8);
  __chkstk_darwin(v29);
  v32 = (char *)&v138 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = __chkstk_darwin(v33);
  v36 = (char *)&v138 - v35;
  v37 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, double))(v24 + 56);
  v166 = a3;
  v38 = v37(a3, 1, 1, v23, v34);
  v39 = a1;
  PropertyValue.rawValue.getter(&v179, v38);
  sub_10004CD0C((uint64_t)&v179, (uint64_t)v188);
  v40 = sub_10004CFD4(&qword_1009D3090);
  v41 = swift_dynamicCast(&v185, v188, (char *)&type metadata for Any + 8, v40, 6);
  if ((v41 & 1) == 0)
  {
LABEL_17:
    v71 = v175;
    static Logger.engagement.getter(v41);
    sub_100316BC8(v39, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10004AD60);
    v72 = sub_100316BC8(v39, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10004AD60);
    v73 = Logger.logObject.getter(v72);
    v74 = static os_log_type_t.error.getter(v73);
    if (os_log_type_enabled(v73, v74))
    {
      v75 = (uint8_t *)swift_slowAlloc(12, -1);
      v76 = swift_slowAlloc(32, -1);
      v188[0] = v76;
      *(_DWORD *)v75 = 136315138;
      v77 = sub_100316BC8(v39, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10004AD60);
      v78 = PropertyValue.description.getter(v77);
      v80 = v79;
      sub_100316BC8(v39, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10004ADC0);
      v185 = sub_100040F58(v78, v80, v188);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v185, v186, v75 + 4, v75 + 12);
      swift_bridgeObjectRelease(v80);
      sub_100316BC8(v39, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10004ADC0);
      sub_100316BC8(v39, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10004ADC0);
      _os_log_impl((void *)&_mh_execute_header, v73, v74, "Can't create protobuf for property %s", v75, 0xCu);
      swift_arrayDestroy(v76, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v76, -1, -1);
      swift_slowDealloc(v75, -1, -1);

      (*(void (**)(char *, uint64_t))(v173 + 8))(v175, v174);
    }
    else
    {

      sub_100316BC8(v39, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10004ADC0);
      sub_100316BC8(v39, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10004ADC0);
      (*(void (**)(char *, uint64_t))(v173 + 8))(v71, v174);
    }
    return _s5Books15CurrentPageViewVwxx_0(&v179);
  }
  v144 = v32;
  v143 = v36;
  v139 = v37;
  v141 = v26;
  v140 = v24;
  v42 = v185;
  v43 = *(_QWORD *)(v185 + 16);
  v44 = v30;
  v45 = v172;
  v46 = v171;
  v47 = (uint64_t)v170;
  v142 = v23;
  if (v43
    && (v48 = sub_10004CE80(0x6D617473656D6974, 0xE900000000000070), (v49 & 1) != 0)
    && (sub_10004CD0C(*(_QWORD *)(v42 + 56) + 32 * v48, (uint64_t)v188),
        swift_dynamicCast(&v185, v188, (char *)&type metadata for Any + 8, &type metadata for String, 6)))
  {
    v50 = v186[0];
  }
  else
  {
    v50 = 0xE000000000000000;
  }
  v51 = String._bridgeToObjectiveC()();
  v52 = objc_msgSend(v45, "dateFromString:", v51, swift_bridgeObjectRelease(v50).n128_f64[0]);

  if (!v52)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v44 + 56))(v47, 1, 1, v29);
    goto LABEL_15;
  }
  v53 = v144;
  static Date._unconditionallyBridgeFromObjectiveC(_:)(v52);

  v54 = *(void (**)(uint64_t, char *, uint64_t))(v44 + 32);
  v54(v47, v53, v29);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v44 + 56))(v47, 0, 1, v29);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v44 + 48))(v47, 1, v29) == 1)
  {
LABEL_15:
    swift_bridgeObjectRelease(v42);
    v41 = sub_100010960(v47, &qword_1009D7440);
    goto LABEL_17;
  }
  v55 = v143;
  v56 = ((uint64_t (*)(char *, uint64_t, uint64_t))v54)(v143, v47, v29);
  v57 = PropertyValue.assetID.getter(v56);
  if (!v58 || (v59 = sub_10032467C(v57), (v60 & 1) != 0))
  {
    (*(void (**)(char *, uint64_t))(v44 + 8))(v55, v29);
    swift_bridgeObjectRelease(v42);
    goto LABEL_17;
  }
  v61 = v59;
  v62 = v141;
  PBPropertyValue.init()();
  (*(void (**)(char *, char *, uint64_t))(v44 + 16))(v53, v55, v29);
  Google_Protobuf_Timestamp.init(date:)(v53);
  v63 = v62;
  PBPropertyValue.createdAt.setter(v46);
  sub_100316B8C(v39, (uint64_t)v188);
  if (v189 != 2)
  {
    sub_100316B8C(v39, (uint64_t)&v185);
    v69 = v142;
    v70 = v169;
    if (v187 != 1)
      goto LABEL_24;
    v65 = v185;
    v64 = v186[0];
    v82 = v186[1];
    swift_bridgeObjectRetain(v165);
    swift_bridgeObjectRetain(v161);
    v83 = v82;
    v70 = v169;
    v68 = swift_bridgeObjectRelease(v83);
    if (!v64)
      goto LABEL_24;
    goto LABEL_23;
  }
  v65 = v188[0];
  v64 = v188[1];
  v66 = v188[3];
  v67 = v188[4];
  swift_bridgeObjectRetain(v163);
  swift_bridgeObjectRetain(v164);
  swift_bridgeObjectRetain(v165);
  swift_bridgeObjectRelease(v67);
  v68 = swift_bridgeObjectRelease(v66);
  v69 = v142;
  v70 = v169;
  if (v64)
LABEL_23:
    PBPropertyValue.identifier.setter(v65, v64, v68);
LABEL_24:
  v84 = v61;
  v85 = v63;
  PBPropertyValue.assetID.setter(v84, v68);
  v86 = v168;
  v87 = v167;
  if (*(_QWORD *)(v42 + 16)
    && (v88 = sub_10004CE80(0x73736572676F7270, 0xE800000000000000), (v89 & 1) != 0)
    && (sub_10004CD0C(*(_QWORD *)(v42 + 56) + 32 * v88, (uint64_t)&v177),
        (swift_dynamicCast(v176, &v177, (char *)&type metadata for Any + 8, &type metadata for Double, 6) & 1) != 0))
  {
    v90 = *(double *)v176;
    v91 = PBPropertyBookReadParams.init()();
    v92 = v90;
    PBPropertyBookReadParams.progress.setter(v91, v92);
    if (*(_QWORD *)(v42 + 16))
    {
      v93 = sub_10004CE80(0x656C706D61537369, 0xE800000000000000);
      v94 = v140;
      v95 = v139;
      v96 = Params;
      if ((v97 & 1) != 0)
      {
        sub_10004CD0C(*(_QWORD *)(v42 + 56) + 32 * v93, (uint64_t)&v177);
      }
      else
      {
        v178 = 0u;
        v177 = 0u;
      }
    }
    else
    {
      v178 = 0u;
      v177 = 0u;
      v94 = v140;
      v95 = v139;
      v96 = Params;
    }
    swift_bridgeObjectRelease(v42);
    if (*((_QWORD *)&v178 + 1))
    {
      v134 = swift_dynamicCast(v176, &v177, (char *)&type metadata for Any + 8, &type metadata for Bool, 6);
      v107 = v166;
      v135 = v156;
      if ((v134 & 1) != 0)
        PBPropertyBookReadParams.isSample.setter(LOBYTE(v176[0]));
    }
    else
    {
      sub_100010960((uint64_t)&v177, (uint64_t *)&unk_1009D04E0);
      v107 = v166;
      v135 = v156;
    }
    v136 = v157;
    v137 = v162;
    (*(void (**)(char *, char *, uint64_t))(v135 + 16))(v157, v162, v96);
    PBPropertyValue.bookReadParams.setter(v136);
    (*(void (**)(char *, uint64_t))(v135 + 8))(v137, v96);
    v69 = v142;
  }
  else
  {
    if (*(_QWORD *)(v42 + 16)
      && (v98 = sub_10004CE80(0x676E69746172, 0xE600000000000000), (v99 & 1) != 0)
      && (sub_10004CD0C(*(_QWORD *)(v42 + 56) + 32 * v98, (uint64_t)&v177),
          (swift_dynamicCast(v176, &v177, (char *)&type metadata for Any + 8, &type metadata for Double, 6) & 1) != 0))
    {
      v100 = swift_bridgeObjectRelease(v42);
      v101 = *(double *)v176;
      v102 = v152;
      v103 = PBPropertySingleFloatParam.init()(v100);
      v104 = v101;
      PBPropertySingleFloatParam.value.setter(v103, v104);
      v105 = v154;
      v106 = v153;
      (*(void (**)(char *, char *, uint64_t))(v154 + 16))(v153, v102, v70);
      PBPropertyValue.floatParam.setter(v106);
      (*(void (**)(char *, uint64_t))(v105 + 8))(v102, v70);
      v107 = v166;
      v94 = v140;
    }
    else
    {
      v94 = v140;
      if (*(_QWORD *)(v42 + 16)
        && (v108 = sub_10004CE80(0x73696E616863656DLL, 0xE90000000000006DLL), (v109 & 1) != 0)
        && (sub_10004CD0C(*(_QWORD *)(v42 + 56) + 32 * v108, (uint64_t)&v177),
            (swift_dynamicCast(v176, &v177, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) != 0))
      {
        v110 = swift_bridgeObjectRelease(v42);
        v111 = v176[0];
        v112 = (void *)v176[1];
        PBPropertyMarkedAsFinishedParam.init()(v110);
        v113._countAndFlagsBits = v111;
        v113._object = v112;
        v114 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1008EFA80, v113);
        v115 = swift_bridgeObjectRelease(v112);
        if (v114 > 2)
        {
          v126 = v145;
          v127 = (uint64_t)v149;
          v128 = v146;
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v145 + 56))(v149, 1, 1, v146, v115);
          v120 = v148;
          (*(void (**)(char *, _QWORD, uint64_t))(v126 + 104))(v148, enum case for MarkedAsFinishedMechanism.unknown(_:), v128);
          sub_100010960(v127, (uint64_t *)&unk_1009DA320);
        }
        else
        {
          v116 = *(unsigned int *)*(&off_1008FC898 + v114);
          v117 = v145;
          v118 = v149;
          v119 = v146;
          (*(void (**)(char *, uint64_t, uint64_t, __n128))(v145 + 104))(v149, v116, v146, v115);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v117 + 56))(v118, 0, 1, v119);
          v120 = v148;
          (*(void (**)(char *, char *, uint64_t))(v117 + 32))(v148, v118, v119);
        }
        v107 = v166;
        v129 = v151;
        v130 = v150;
        v131 = v120;
        v132 = v160;
        PBPropertyMarkedAsFinishedParam.value.setter(v131);
        v133 = v147;
        (*(void (**)(char *, char *, uint64_t))(v130 + 16))(v147, v132, v129);
        PBPropertyValue.markedAsFinishedParam.setter(v133);
        (*(void (**)(char *, uint64_t))(v130 + 8))(v132, v129);
      }
      else
      {
        if (*(_QWORD *)(v42 + 16)
          && (v121 = sub_10004CE80(0x6D6D6F6365526577, 0xED00006465646E65), (v122 & 1) != 0))
        {
          sub_10004CD0C(*(_QWORD *)(v42 + 56) + 32 * v121, (uint64_t)&v177);
        }
        else
        {
          v178 = 0u;
          v177 = 0u;
        }
        swift_bridgeObjectRelease(v42);
        if (*((_QWORD *)&v178 + 1))
        {
          if ((swift_dynamicCast(v176, &v177, (char *)&type metadata for Any + 8, &type metadata for Bool, 6) & 1) != 0)
          {
            v123 = LOBYTE(v176[0]);
            v124 = v158;
            PBPropertyBookImpressionParam.init()();
            PBPropertyBookImpressionParam.wasRecommendedByBooksPersonalization.setter(v123);
            v125 = v159;
            (*(void (**)(char *, char *, uint64_t))(v86 + 16))(v87, v124, v159);
            PBPropertyValue.bookImpressionParam.setter(v87);
            (*(void (**)(char *, uint64_t))(v86 + 8))(v124, v125);
          }
        }
        else
        {
          sub_100010960((uint64_t)&v177, (uint64_t *)&unk_1009D04E0);
        }
        v107 = v166;
      }
    }
    v95 = v139;
  }
  (*(void (**)(char *, uint64_t))(v44 + 8))(v143, v29);
  _s5Books15CurrentPageViewVwxx_0(&v179);
  sub_100010960(v107, &qword_1009DA308);
  (*(void (**)(uint64_t, char *, uint64_t))(v94 + 32))(v107, v85, v69);
  return ((uint64_t (*)(uint64_t, _QWORD, uint64_t, uint64_t))v95)(v107, 0, 1, v69);
}

void sub_100311558(uint64_t a1, uint64_t a2, char *a3, void *a4, uint64_t a5, uint64_t a6, void *a7, void *a8)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  double v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  __n128 v42;
  uint64_t countAndFlagsBits;
  unint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  char v54;
  char *v55;
  __n128 v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  unint64_t v62;
  char v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void (*v69)(char *, _QWORD, uint64_t, uint64_t);
  int v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  _QWORD *v74;
  int64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t *v79;
  char *v80;
  uint64_t v81;
  unint64_t v82;
  char v83;
  uint64_t v84;
  __n128 v85;
  char *v86;
  void (*v87)(uint64_t, char *, uint64_t);
  uint64_t v88;
  void (*v89)(Swift::String *, _QWORD);
  unint64_t *v90;
  unint64_t *v91;
  unint64_t v92;
  char v93;
  unint64_t v94;
  unint64_t v95;
  unint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  Swift::String v100;
  uint64_t v101;
  Swift::String v102;
  void *v103;
  Swift::String v104;
  void *v105;
  __n128 v106;
  void (*v107)(Swift::String *, _QWORD);
  unint64_t *v108;
  unint64_t *v109;
  unint64_t v110;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v112;
  unint64_t v113;
  uint64_t v114;
  unint64_t v115;
  uint64_t v116;
  void (*v117)(char *, uint64_t);
  char *v118;
  uint64_t v119;
  Class isa;
  id v121;
  unint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  double v128;
  id v129;
  NSString v130;
  id v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  unint64_t v136;
  char *v137;
  void (*v138)(char *, char *);
  char *v139;
  uint64_t v140;
  uint64_t v141;
  NSObject *v142;
  os_log_type_t v143;
  uint8_t *v144;
  uint64_t v145;
  uint64_t v146;
  unint64_t v147;
  unint64_t v148;
  uint64_t v149;
  NSObject *v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  os_log_type_t v154;
  uint8_t *v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  unint64_t v159;
  Class v160;
  uint64_t v161;
  char *v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  unint64_t v166;
  char *v167;
  void *v168;
  uint64_t v169;
  void *v170;
  char *v171;
  char *v172;
  id v173;
  double v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  char *v178;
  uint64_t v179;
  id v180;
  char *v181;
  void *v182;
  uint64_t v183;
  uint64_t v184;
  char *v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  id v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  char *v196;
  char *v197;
  uint64_t v198;
  char *v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t *v202;
  uint64_t (*v203)(int, int, uint64_t);
  void *v204;
  void *object;
  char *v206;
  char *v207;
  uint64_t v208;
  uint64_t v209;
  void *v210;
  unint64_t v211;
  uint64_t v212;
  uint64_t v213;
  char *v214;
  uint64_t v215;
  char *v216;
  char *v217;
  char *v218;
  uint64_t v219;
  char *v220;
  Swift::String aBlock;
  void (*v222)(uint64_t, uint64_t, uint64_t, void *);
  void *v223;
  uint64_t (*v224)(int, int, uint64_t);
  char *v225;
  _QWORD v226[3];
  char v227[8];
  uint64_t v228;
  char v229[8];
  char v230[8];

  v182 = a8;
  v180 = a7;
  v193 = a5;
  v189 = a4;
  v218 = a3;
  v184 = type metadata accessor for Logger(0);
  v183 = *(_QWORD *)(v184 - 8);
  __chkstk_darwin(v184);
  v181 = (char *)&v177 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v177 - v12;
  v192 = sub_10004CFD4(&qword_1009DA2A0);
  v179 = *(_QWORD *)(v192 - 8);
  __chkstk_darwin(v192);
  v177 = v14;
  v178 = (char *)&v177 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_10004CFD4(&qword_1009DA308);
  __chkstk_darwin(v15);
  v17 = (char *)&v177 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v215 = type metadata accessor for PBPropertyValue(0);
  v18 = *(char **)(v215 - 8);
  __chkstk_darwin(v215);
  v220 = (char *)&v177 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v219 = (uint64_t)&v177 - v21;
  v22 = sub_10004CFD4(&qword_1009DA310);
  __chkstk_darwin(v22);
  v207 = (char *)&v177 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v209 = type metadata accessor for PBPropertyBundle(0);
  v208 = *(_QWORD *)(v209 - 8);
  __chkstk_darwin(v209);
  v206 = (char *)&v177 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  v216 = (char *)&v177 - v26;
  v187 = type metadata accessor for Date(0);
  v186 = *(_QWORD *)(v187 - 8);
  __chkstk_darwin(v187);
  v28 = (char *)&v177 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = type metadata accessor for Google_Protobuf_Timestamp(0);
  __chkstk_darwin(v29);
  v31 = (char *)&v177 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v194 = type metadata accessor for PBPropertyTimeSlice(0);
  v190 = *(_QWORD *)(v194 - 8);
  __chkstk_darwin(v194);
  v33 = (char *)&v177 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = __chkstk_darwin(v34);
  v37 = (char *)&v177 - v36;
  v38 = PBPropertyTimeSlice.init()(v35);
  v188 = a1;
  DateInterval.start.getter(v38);
  v185 = v28;
  Google_Protobuf_Timestamp.init(date:)(v28);
  v196 = v37;
  PBPropertyTimeSlice.startOfTimeSlice.setter(v31);
  v39 = swift_allocObject(&unk_1008FC6F0, 32, 7);
  *(_QWORD *)(v39 + 16) = 0;
  v195 = v39 + 16;
  v191 = v39;
  *(_QWORD *)(v39 + 24) = 0xE000000000000000;
  v202 = (uint64_t *)(a2 + 16);
  swift_beginAccess(a2 + 16, v230, 0, 0);
  v40 = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain_n(v40, 2);
  v41 = sub_100427624(v40);
  swift_bridgeObjectRelease(v40);
  aBlock._countAndFlagsBits = (uint64_t)v41;
  sub_100314F08(&aBlock._countAndFlagsBits);
  v212 = 0;
  v42 = swift_bridgeObjectRelease(v40);
  countAndFlagsBits = aBlock._countAndFlagsBits;
  v201 = *(_QWORD *)(aBlock._countAndFlagsBits + 16);
  if (v201)
  {
    v44 = 0;
    v199 = v218 + 16;
    v200 = aBlock._countAndFlagsBits + 32;
    v214 = v17;
    v45 = v215;
    v46 = (unint64_t)v216;
    v197 = v13;
    v198 = aBlock._countAndFlagsBits;
    while (1)
    {
      if (v44 >= *(_QWORD *)(countAndFlagsBits + 16))
      {
        __break(1u);
LABEL_55:
        __break(1u);
        goto LABEL_56;
      }
      v211 = v44;
      v47 = (uint64_t *)(v200 + 16 * v44);
      v49 = *v47;
      v48 = v47[1];
      v50 = v202;
      swift_beginAccess(v202, &aBlock, 32, 0);
      v51 = *v50;
      v52 = *(_QWORD *)(*v50 + 16);
      swift_bridgeObjectRetain(v48);
      if (!v52)
        goto LABEL_60;
      swift_bridgeObjectRetain(v48);
      v217 = (char *)v49;
      v53 = sub_10004CE80(v49, v48);
      if ((v54 & 1) == 0)
      {
        swift_bridgeObjectRelease(v48);
LABEL_60:
        swift_endAccess(&aBlock);
        __break(1u);
LABEL_61:
        __break(1u);
LABEL_62:
        swift_release(aBlock._countAndFlagsBits);
        __break(1u);
        return;
      }
      v55 = *(char **)(*(_QWORD *)(v51 + 56) + 8 * v53);
      swift_endAccess(&aBlock);
      v218 = v55;
      swift_bridgeObjectRetain(v55);
      v56 = swift_bridgeObjectRelease(v48);
      PBPropertyBundle.init()(v56);
      v57 = v48;
      v58 = v199;
      swift_beginAccess(v199, &aBlock, 32, 0);
      v59 = *(_QWORD *)v58;
      v60 = *(_QWORD *)(*(_QWORD *)v58 + 16);
      v61 = v207;
      v210 = (void *)v48;
      if (v60)
      {
        swift_bridgeObjectRetain(v48);
        v62 = sub_10004CE80((uint64_t)v217, v48);
        if ((v63 & 1) != 0)
        {
          v64 = v62;
          v65 = *(_QWORD *)(v59 + 56);
          v66 = type metadata accessor for PBPropertyConfiguration(0);
          v67 = *(_QWORD *)(v66 - 8);
          v68 = v65 + *(_QWORD *)(v67 + 72) * v64;
          v61 = v207;
          (*(void (**)(char *, uint64_t, uint64_t))(v67 + 16))(v207, v68, v66);
          v69 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v67 + 56);
          v46 = (unint64_t)v216;
          v69(v61, 0, 1, v66);
        }
        else
        {
          v66 = type metadata accessor for PBPropertyConfiguration(0);
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v66 - 8) + 56))(v61, 1, 1, v66);
        }
        swift_bridgeObjectRelease(v57);
      }
      else
      {
        v66 = type metadata accessor for PBPropertyConfiguration(0);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v66 - 8) + 56))(v61, 1, 1, v66);
      }
      swift_endAccess(&aBlock);
      type metadata accessor for PBPropertyConfiguration(0);
      v70 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v66 - 8) + 48))(v61, 1, v66);
      v28 = v217;
      if (v70 == 1)
        goto LABEL_61;
      PBPropertyBundle.configuration.setter(v61);
      v71 = (uint64_t)v218;
      v72 = *((_QWORD *)v218 + 2);
      if (v72)
      {
        v73 = sub_10004CFD4((uint64_t *)&unk_1009D8830);
        v74 = (_QWORD *)swift_allocObject(v73, 16 * v72 + 32, 7);
        v75 = j__malloc_size_0(v74);
        v76 = v75 - 32;
        if (v75 < 32)
          v76 = v75 - 17;
        v74[2] = v72;
        v74[3] = 2 * (v76 >> 4);
        v213 = sub_1003820B4((uint64_t)&aBlock, v74 + 4, v72, v71);
        v17 = (char *)aBlock._countAndFlagsBits;
        object = aBlock._object;
        v46 = (unint64_t)v222;
        v204 = v223;
        v203 = v224;
        swift_bridgeObjectRetain_n(v71, 3);
        sub_100299C3C((uint64_t)v17);
        if (v213 != v72)
          goto LABEL_55;
        swift_bridgeObjectRelease(v71);
        v17 = v214;
        v46 = (unint64_t)v216;
      }
      else
      {
        swift_bridgeObjectRetain(v218);
        v74 = _swiftEmptyArrayStorage;
      }
      aBlock._countAndFlagsBits = (uint64_t)v74;
      v77 = v212;
      sub_100314F08(&aBlock._countAndFlagsBits);
      v212 = v77;
      if (v77)
        goto LABEL_62;
      v42 = swift_bridgeObjectRelease(v218);
      v213 = aBlock._countAndFlagsBits;
      v78 = *(_QWORD *)(aBlock._countAndFlagsBits + 16);
      if (v78)
        break;
LABEL_34:
      swift_release(v213);
      v98 = PBPropertyBundle.propertyValues.getter(v97);
      v99 = *(_QWORD *)(v98 + 16);
      swift_bridgeObjectRelease(v98);
      if (v99)
      {
        aBlock._countAndFlagsBits = (uint64_t)v28;
        aBlock._object = v210;
        v100._countAndFlagsBits = 40;
        v100._object = (void *)0xE100000000000000;
        String.append(_:)(v100);
        v101 = *((_QWORD *)v218 + 2);
        swift_bridgeObjectRelease(v218);
        v228 = v101;
        v102._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
        v103 = v102._object;
        String.append(_:)(v102);
        swift_bridgeObjectRelease(v103);
        v104._countAndFlagsBits = 8233;
        v104._object = (void *)0xE200000000000000;
        String.append(_:)(v104);
        v105 = aBlock._object;
        String.append(_:)(aBlock);
        v106 = swift_bridgeObjectRelease(v105);
        (*(void (**)(char *, unint64_t, uint64_t, __n128))(v208 + 16))(v206, v46, v209, v106);
        v107 = (void (*)(Swift::String *, _QWORD))PBPropertyTimeSlice.propertyBundles.modify(&aBlock);
        v109 = v108;
        v110 = *v108;
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v108);
        *v109 = v110;
        v13 = v197;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          v110 = sub_1005B0EEC(0, *(_QWORD *)(v110 + 16) + 1, 1, v110);
          *v109 = v110;
        }
        v113 = *(_QWORD *)(v110 + 16);
        v112 = *(_QWORD *)(v110 + 24);
        if (v113 >= v112 >> 1)
        {
          v110 = sub_1005B0EEC(v112 > 1, v113 + 1, 1, v110);
          *v109 = v110;
        }
        *(_QWORD *)(v110 + 16) = v113 + 1;
        v114 = v208;
        v115 = v110
             + ((*(unsigned __int8 *)(v114 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v114 + 80))
             + *(_QWORD *)(v114 + 72) * v113;
        v116 = v209;
        (*(void (**)(unint64_t, char *, uint64_t))(v208 + 32))(v115, v206, v209);
        v107(&aBlock, 0);
        v117 = *(void (**)(char *, uint64_t))(v114 + 8);
        v46 = (unint64_t)v216;
        v117(v216, v116);
        v45 = v215;
      }
      else
      {
        (*(void (**)(unint64_t, uint64_t))(v208 + 8))(v46, v209);
        swift_bridgeObjectRelease(v218);
        v42 = swift_bridgeObjectRelease(v210);
        v13 = v197;
      }
      v44 = v211 + 1;
      countAndFlagsBits = v198;
      if (v211 + 1 == v201)
        goto LABEL_40;
    }
    v79 = (uint64_t *)(v213 + 40);
    while (1)
    {
      v80 = v218;
      if (!*((_QWORD *)v218 + 2))
        break;
      v28 = (char *)*(v79 - 1);
      v81 = *v79;
      swift_bridgeObjectRetain(*v79);
      v82 = sub_10004CE80((uint64_t)v28, v81);
      if ((v83 & 1) != 0)
      {
        (*((void (**)(char *, unint64_t, uint64_t))v18 + 2))(v17, *((_QWORD *)v80 + 7) + *((_QWORD *)v18 + 9) * v82, v45);
        v84 = 0;
      }
      else
      {
        v84 = 1;
      }
      (*((void (**)(char *, uint64_t, uint64_t, uint64_t))v18 + 7))(v17, v84, 1, v45);
      v85 = swift_bridgeObjectRelease(v81);
      if ((*((unsigned int (**)(char *, uint64_t, uint64_t, __n128))v18 + 6))(v17, 1, v45, v85) == 1)
        goto LABEL_57;
      v86 = v33;
      v87 = (void (*)(uint64_t, char *, uint64_t))*((_QWORD *)v18 + 4);
      v88 = v219;
      v87(v219, v17, v45);
      (*((void (**)(char *, uint64_t, uint64_t))v18 + 2))(v220, v88, v45);
      v89 = (void (*)(Swift::String *, _QWORD))PBPropertyBundle.propertyValues.modify(&aBlock);
      v91 = v90;
      v92 = *v90;
      v93 = swift_isUniquelyReferenced_nonNull_native(*v90);
      *v91 = v92;
      if ((v93 & 1) == 0)
      {
        v92 = sub_1005B0F00(0, *(_QWORD *)(v92 + 16) + 1, 1, v92);
        *v91 = v92;
      }
      v95 = *(_QWORD *)(v92 + 16);
      v94 = *(_QWORD *)(v92 + 24);
      if (v95 >= v94 >> 1)
      {
        v92 = sub_1005B0F00(v94 > 1, v95 + 1, 1, v92);
        *v91 = v92;
      }
      *(_QWORD *)(v92 + 16) = v95 + 1;
      v96 = v92
          + ((v18[80] + 32) & ~(unint64_t)v18[80])
          + *((_QWORD *)v18 + 9) * v95;
      v45 = v215;
      v87(v96, v220, v215);
      v89(&aBlock, 0);
      (*((void (**)(uint64_t, uint64_t))v18 + 1))(v219, v45);
      v79 += 2;
      --v78;
      v33 = v86;
      v17 = v214;
      v46 = (unint64_t)v216;
      v28 = v217;
      if (!v78)
        goto LABEL_34;
    }
LABEL_56:
    (*((void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))v18 + 7))(v17, 1, 1, v45, v42);
LABEL_57:
    __break(1u);
LABEL_58:
    swift_once(&qword_1009CDE70, sub_10030C708);
    goto LABEL_42;
  }
LABEL_40:
  swift_release(countAndFlagsBits);
  v118 = v185;
  DateInterval.start.getter(v119);
  isa = Date._bridgeToObjectiveC()().super.isa;
  (*(void (**)(char *, uint64_t))(v186 + 8))(v118, v187);
  v121 = objc_msgSend(v189, "stringFromDate:", isa);

  v45 = static String._unconditionallyBridgeFromObjectiveC(_:)(v121);
  v46 = v122;

  v18 = v196;
  v124 = PBPropertyTimeSlice.propertyBundles.getter(v123);
  v125 = *(_QWORD *)(v124 + 16);
  swift_bridgeObjectRelease(v124);
  v28 = (char *)v194;
  if (!v125)
  {
    static Logger.engagement.getter(v126);
    swift_bridgeObjectRetain(v46);
    v150 = Logger.logObject.getter(v149);
    v154 = static os_log_type_t.debug.getter(v150, v151, v152, v153);
    if (os_log_type_enabled(v150, v154))
    {
      v155 = (uint8_t *)swift_slowAlloc(12, -1);
      v156 = swift_slowAlloc(32, -1);
      aBlock._countAndFlagsBits = v156;
      *(_DWORD *)v155 = 136315138;
      swift_bridgeObjectRetain(v46);
      v228 = sub_100040F58(v45, v46, &aBlock._countAndFlagsBits);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v228, v229, v155 + 4, v155 + 12);
      swift_bridgeObjectRelease_n(v46, 3);
      _os_log_impl((void *)&_mh_execute_header, v150, v154, "Skipping syncing empty bucket %s to engagement data", v155, 0xCu);
      swift_arrayDestroy(v156, 1, (char *)&type metadata for Any + 8);
      v157 = v156;
      v18 = v196;
      swift_slowDealloc(v157, -1, -1);
      swift_slowDealloc(v155, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n(v46, 2);
    }
    (*(void (**)(char *, uint64_t))(v183 + 8))(v13, v184);
    aBlock._countAndFlagsBits = 0;
    LOBYTE(aBlock._object) = 0;
    CheckedContinuation.resume(returning:)(&aBlock, v192);
    (*(void (**)(char *, char *))(v190 + 8))(v18, v28);
    goto LABEL_52;
  }
  v127 = qword_1009CDE70;
  swift_bridgeObjectRetain(v46);
  if (v127 != -1)
    goto LABEL_58;
LABEL_42:
  v128 = *(double *)&qword_1009D9ED8;
  v129 = objc_allocWithZone((Class)BDSMutableSecureEngagementData);
  v130 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v46);
  v131 = objc_msgSend(v129, "initWithStartTimestampString:durationInterval:", v130, v128);

  v132 = v190;
  (*(void (**)(char *, char *, char *))(v190 + 16))(v33, v18, v28);
  v133 = sub_10003E1A0(&qword_1009DA318, 255, (uint64_t (*)(uint64_t))&type metadata accessor for PBPropertyTimeSlice, (uint64_t)&protocol conformance descriptor for PBPropertyTimeSlice);
  v134 = v212;
  v135 = Message.serializedData(partial:)(0, v28, v133);
  if (v134)
  {
    v137 = v33;
    v138 = *(void (**)(char *, char *))(v132 + 8);
    v138(v137, v28);
    swift_bridgeObjectRelease(v46);
    v139 = v181;
    static Logger.engagement.getter(v140);
    swift_errorRetain(v134);
    v141 = swift_errorRetain(v134);
    v142 = Logger.logObject.getter(v141);
    v143 = static os_log_type_t.error.getter(v142);
    if (os_log_type_enabled(v142, v143))
    {
      v144 = (uint8_t *)swift_slowAlloc(12, -1);
      v145 = swift_slowAlloc(32, -1);
      aBlock._countAndFlagsBits = v145;
      *(_DWORD *)v144 = 136315138;
      swift_getErrorValue(v134, v227, v226);
      v146 = Error.localizedDescription.getter(v226[1], v226[2]);
      v148 = v147;
      v228 = sub_100040F58(v146, v147, &aBlock._countAndFlagsBits);
      v28 = (char *)v194;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v228, v229, v144 + 4, v144 + 12);
      swift_bridgeObjectRelease(v148);
      swift_errorRelease(v134);
      swift_errorRelease(v134);
      _os_log_impl((void *)&_mh_execute_header, v142, v143, "Could not convert property value to a valid JSON data object: %s", v144, 0xCu);
      swift_arrayDestroy(v145, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v145, -1, -1);
      swift_slowDealloc(v144, -1, -1);

      (*(void (**)(char *, uint64_t))(v183 + 8))(v181, v184);
    }
    else
    {
      swift_errorRelease(v134);
      swift_errorRelease(v134);

      (*(void (**)(char *, uint64_t))(v183 + 8))(v139, v184);
    }
    v176 = v192;
    swift_errorRetain(v134);
    EngagementManagerAnalyticsHelper.registerSyncToCloudKitError(_:)(v134);
    aBlock._countAndFlagsBits = v134;
    LOBYTE(aBlock._object) = 1;
    CheckedContinuation.resume(returning:)(&aBlock, v176);

    swift_errorRelease(v134);
    v138(v196, v28);
LABEL_52:
    v175 = v191;
    goto LABEL_53;
  }
  v158 = v135;
  v159 = v136;
  v220 = *(char **)(v132 + 8);
  ((void (*)(char *, char *))v220)(v33, v28);
  v219 = v158;
  v160 = Data._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v131, "setValue:", v160);

  v161 = v179;
  v162 = v178;
  v163 = v192;
  (*(void (**)(char *, uint64_t, uint64_t))(v179 + 16))(v178, v193, v192);
  v164 = *(unsigned __int8 *)(v161 + 80);
  v218 = (char *)v131;
  v165 = (v164 + 40) & ~v164;
  v166 = (v177 + v165 + 7) & 0xFFFFFFFFFFFFFFF8;
  v167 = (char *)swift_allocObject(&unk_1008FC718, v166 + 8, v164 | 7);
  *((_QWORD *)v167 + 2) = v45;
  *((_QWORD *)v167 + 3) = v46;
  v168 = v182;
  *((_QWORD *)v167 + 4) = v182;
  (*(void (**)(char *, char *, uint64_t))(v161 + 32))(&v167[v165], v162, v163);
  v169 = v191;
  *(_QWORD *)&v167[v166] = v191;
  v224 = sub_1003171CC;
  v225 = v167;
  aBlock._countAndFlagsBits = (uint64_t)_NSConcreteStackBlock;
  aBlock._object = (void *)1107296256;
  v222 = sub_100010E84;
  v223 = &unk_1008FC730;
  v170 = _Block_copy(&aBlock);
  v171 = v225;
  v172 = v218;
  v173 = v168;
  swift_retain(v169);
  *(_QWORD *)&v174 = swift_release(v171).n128_u64[0];
  objc_msgSend(v180, "setEngagementData:completion:", v172, v170, v174);
  sub_10005EE1C(v219, v159);
  _Block_release(v170);

  ((void (*)(char *, uint64_t))v220)(v196, v194);
  v175 = v169;
LABEL_53:
  swift_release(v175);
}

uint64_t sub_1003127E4(int a1, int a2, uint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v42;
  _QWORD v43[2];
  uint64_t v44;
  uint64_t v45;
  int v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51[16];
  uint64_t v52;
  _BYTE v53[8];

  v46 = a1;
  v47 = a2;
  v14 = type metadata accessor for Logger(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v21 = (char *)v43 - v20;
  if (a3)
  {
    v48 = v15;
    v22 = swift_errorRetain(a3);
    static Logger.engagement.getter(v22);
    swift_bridgeObjectRetain(a5);
    swift_errorRetain(a3);
    swift_bridgeObjectRetain(a5);
    v23 = swift_errorRetain(a3);
    v24 = Logger.logObject.getter(v23);
    v25 = static os_log_type_t.error.getter(v24);
    if (os_log_type_enabled(v24, v25))
    {
      v26 = swift_slowAlloc(34, -1);
      v27 = swift_slowAlloc(8, -1);
      v43[1] = a6;
      v28 = (_QWORD *)v27;
      v43[0] = swift_slowAlloc(32, -1);
      v50 = v43[0];
      *(_DWORD *)v26 = 136315906;
      v44 = a7;
      swift_bridgeObjectRetain(a5);
      v52 = sub_100040F58(a4, a5, &v50);
      v45 = v14;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v52, v53, v26 + 4, v26 + 12);
      swift_bridgeObjectRelease_n(a5, 3);
      *(_WORD *)(v26 + 12) = 1024;
      LODWORD(v52) = v46 & 1;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v52, (char *)&v52 + 4, v26 + 14, v26 + 18);
      *(_WORD *)(v26 + 18) = 1024;
      LODWORD(v52) = v47 & 1;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v52, (char *)&v52 + 4, v26 + 20, v26 + 24);
      *(_WORD *)(v26 + 24) = 2112;
      swift_errorRetain(a3);
      v29 = _swift_stdlib_bridgeErrorToNSError(a3);
      v52 = v29;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v52, v53, v26 + 26, v26 + 34);
      *v28 = v29;
      swift_errorRelease(a3);
      swift_errorRelease(a3);
      _os_log_impl((void *)&_mh_execute_header, v24, v25, "setEngagementData(%s) success=%{BOOL}d hasChanges=%{BOOL}d error=%@", (uint8_t *)v26, 0x22u);
      v30 = sub_10004CFD4((uint64_t *)&unk_1009D6190);
      swift_arrayDestroy(v28, 1, v30);
      swift_slowDealloc(v28, -1, -1);
      v31 = v43[0];
      swift_arrayDestroy(v43[0], 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v31, -1, -1);
      swift_slowDealloc(v26, -1, -1);

      (*(void (**)(char *, uint64_t))(v48 + 8))(v17, v45);
    }
    else
    {
      swift_bridgeObjectRelease_n(a5, 2);
      swift_errorRelease(a3);
      swift_errorRelease(a3);

      (*(void (**)(char *, uint64_t))(v48 + 8))(v17, v14);
    }
    swift_errorRetain(a3);
    EngagementManagerAnalyticsHelper.registerSyncToCloudKitError(_:)(a3);
    v50 = a3;
    v51[0] = 1;
    v40 = sub_10004CFD4(&qword_1009DA2A0);
    CheckedContinuation.resume(returning:)(&v50, v40);
    return swift_errorRelease(a3);
  }
  else
  {
    v45 = v14;
    static Logger.engagement.getter(v19);
    swift_bridgeObjectRetain_n(a5, 2);
    v32 = swift_retain_n(a8, 2);
    v33 = Logger.logObject.getter(v32);
    v34 = static os_log_type_t.default.getter(v33);
    if (os_log_type_enabled(v33, v34))
    {
      v35 = swift_slowAlloc(34, -1);
      v36 = swift_slowAlloc(64, -1);
      v48 = v15;
      v37 = v36;
      v52 = v36;
      *(_DWORD *)v35 = 136315906;
      v44 = a7;
      swift_bridgeObjectRetain(a5);
      v50 = sub_100040F58(a4, a5, &v52);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v50, v51, v35 + 4, v35 + 12);
      swift_bridgeObjectRelease_n(a5, 3);
      *(_WORD *)(v35 + 12) = 2080;
      swift_beginAccess(a8 + 16, &v50, 0, 0);
      v38 = *(_QWORD *)(a8 + 16);
      v39 = *(_QWORD *)(a8 + 24);
      swift_bridgeObjectRetain(v39);
      v49 = sub_100040F58(v38, v39, &v52);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v49, &v50, v35 + 14, v35 + 22);
      swift_release_n(a8, 2);
      swift_bridgeObjectRelease(v39);
      *(_WORD *)(v35 + 22) = 1024;
      LODWORD(v49) = v46 & 1;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v49, (char *)&v49 + 4, v35 + 24, v35 + 28);
      *(_WORD *)(v35 + 28) = 1024;
      LODWORD(v49) = v47 & 1;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v49, (char *)&v49 + 4, v35 + 30, v35 + 34);
      _os_log_impl((void *)&_mh_execute_header, v33, v34, "setEngagementData(%s) %ssuccess=%{BOOL}d hasChanges=%{BOOL}d", (uint8_t *)v35, 0x22u);
      swift_arrayDestroy(v37, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v37, -1, -1);
      swift_slowDealloc(v35, -1, -1);

      (*(void (**)(char *, uint64_t))(v48 + 8))(v21, v45);
    }
    else
    {

      swift_release_n(a8, 2);
      swift_bridgeObjectRelease_n(a5, 2);
      (*(void (**)(char *, uint64_t))(v15 + 8))(v21, v45);
    }
    EngagementManagerAnalyticsHelper.registerSyncToCloudKitSuccess()();
    v52 = 0;
    v53[0] = 0;
    v42 = sub_10004CFD4(&qword_1009DA2A0);
    return CheckedContinuation.resume(returning:)(&v52, v42);
  }
}

double sub_100312D94()
{
  uint64_t v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  double result;
  _QWORD v10[5];
  __int128 v11;
  __int128 v12;

  v1 = *(id *)(v0 + OBJC_IVAR___BKEngagementManager_remoteConfigurationContainer);
  v2 = Notification.userInfo.getter();
  if (!v2)
  {
    v11 = 0u;
    v12 = 0u;
LABEL_11:
    sub_100010960((uint64_t)&v11, (uint64_t *)&unk_1009D04E0);
    v8 = 0;
    goto LABEL_12;
  }
  v3 = v2;
  type metadata accessor for RCDataContainer(0);
  *(_QWORD *)&v11 = static RCDataContainer.changeNotificationConfigValue.getter();
  *((_QWORD *)&v11 + 1) = v4;
  AnyHashable.init<A>(_:)(&v11, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(v3 + 16) && (v5 = sub_1000561E8((uint64_t)v10), (v6 & 1) != 0))
  {
    sub_10004CD0C(*(_QWORD *)(v3 + 56) + 32 * v5, (uint64_t)&v11);
  }
  else
  {
    v11 = 0u;
    v12 = 0u;
  }
  swift_bridgeObjectRelease(v3);
  sub_1000569AC((uint64_t)v10);
  if (!*((_QWORD *)&v12 + 1))
    goto LABEL_11;
  v7 = sub_10004CFD4(&qword_1009D3090);
  if (swift_dynamicCast(v10, &v11, (char *)&type metadata for Any + 8, v7, 6))
    v8 = v10[0];
  else
    v8 = 0;
LABEL_12:
  sub_10001B274((uint64_t)v1, v8);

  *(_QWORD *)&result = swift_bridgeObjectRelease(v8).n128_u64[0];
  return result;
}

uint64_t sub_100312F70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  double v23;
  uint64_t v24;
  char *v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(uint64_t, _QWORD, uint64_t);
  void *v36;
  char *v37;
  __n128 v38;
  char *v39;
  void (*v40)(char *, _QWORD, uint64_t, uint64_t);
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  char *v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void (*v58)(char *, uint64_t);
  uint64_t v59;
  void (*v60)(char *, char *, uint64_t);
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  char *v67;
  uint64_t (*v68)(char *, uint64_t, uint64_t);
  char *v69;
  uint64_t v70;
  char *v71;
  char *v72;

  v70 = a1;
  v64 = a2;
  v2 = sub_10004CFD4(&qword_1009D7440);
  __chkstk_darwin(v2);
  v67 = (char *)&v59 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_10004CFD4(&qword_1009DE880);
  __chkstk_darwin(v4);
  v72 = (char *)&v59 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DateComponents(0);
  v62 = *(_QWORD *)(v6 - 8);
  v63 = v6;
  __chkstk_darwin(v6);
  v66 = (char *)&v59 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v71 = (char *)&v59 - v9;
  v10 = sub_10004CFD4(&qword_1009DA330);
  __chkstk_darwin(v10);
  v69 = (char *)&v59 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v65 = (char *)&v59 - v13;
  __chkstk_darwin(v14);
  v16 = (char *)&v59 - v15;
  v17 = type metadata accessor for TimeZone(0);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v20 = (char *)&v59 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for Calendar(0);
  v22 = *(_QWORD *)(v21 - 8);
  v23 = __chkstk_darwin(v21);
  v25 = (char *)&v59 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Calendar.gregorian.getter(v23);
  TimeZone.init(secondsFromGMT:)(0);
  v68 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v18 + 48);
  result = v68(v16, 1, v17);
  if ((_DWORD)result == 1)
  {
    __break(1u);
    goto LABEL_6;
  }
  v60 = *(void (**)(char *, char *, uint64_t))(v18 + 32);
  v61 = v18;
  v60(v20, v16, v17);
  Calendar.timeZone.setter(v20);
  v27 = sub_10004CFD4(&qword_1009DA338);
  v28 = type metadata accessor for Calendar.Component(0);
  v29 = *(_QWORD *)(v28 - 8);
  v30 = *(_QWORD *)(v29 + 72);
  v31 = *(unsigned __int8 *)(v29 + 80);
  v32 = (v31 + 32) & ~v31;
  v33 = swift_allocObject(v27, v32 + 3 * v30, v31 | 7);
  *(_OWORD *)(v33 + 16) = xmmword_100712B60;
  v34 = v33 + v32;
  v35 = *(void (**)(uint64_t, _QWORD, uint64_t))(v29 + 104);
  v35(v34, enum case for Calendar.Component.year(_:), v28);
  v35(v34 + v30, enum case for Calendar.Component.month(_:), v28);
  v35(v34 + 2 * v30, enum case for Calendar.Component.day(_:), v28);
  v36 = sub_1001E0910(v33);
  swift_setDeallocating(v33);
  swift_arrayDestroy(v34, 3, v28);
  swift_deallocClassInstance(v33, 32, 7);
  v37 = v71;
  Calendar.dateComponents(_:from:)(v36, v70);
  v38 = swift_bridgeObjectRelease(v36);
  v39 = v72;
  (*(void (**)(char *, char *, uint64_t, __n128))(v22 + 16))(v72, v25, v21, v38);
  v59 = v22;
  v40 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56);
  v70 = v21;
  v40(v39, 0, 1, v21);
  v41 = v69;
  TimeZone.init(secondsFromGMT:)(0);
  result = v68(v41, 1, v17);
  if ((_DWORD)result == 1)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  v42 = v65;
  v60(v65, v41, v17);
  v43 = (*(uint64_t (**)(char *, _QWORD, uint64_t, uint64_t))(v61 + 56))(v42, 0, 1, v17);
  v44 = DateComponents.year.getter(v43);
  v46 = v45 & 1;
  v47 = DateComponents.month.getter();
  v49 = v48 & 1;
  v50 = DateComponents.day.getter();
  v52 = v66;
  v53 = DateComponents.init(calendar:timeZone:era:year:month:day:hour:minute:second:nanosecond:weekday:weekdayOrdinal:quarter:weekOfMonth:weekOfYear:yearForWeekOfYear:)(v72, v42, 0, 1, v44, v46, v47, v49, v50, v51 & 1, 0, 0, 0, 0, 0, 0, 0, 1, 0,
          1,
          0,
          1,
          0,
          1,
          0,
          1,
          0,
          1,
          0,
          1);
  v54 = v67;
  DateComponents.date.getter(v53);
  v55 = type metadata accessor for Date(0);
  v56 = *(_QWORD *)(v55 - 8);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v56 + 48))(v54, 1, v55);
  if ((_DWORD)result != 1)
  {
    v57 = v63;
    v58 = *(void (**)(char *, uint64_t))(v62 + 8);
    v58(v52, v63);
    v58(v37, v57);
    (*(void (**)(char *, uint64_t))(v59 + 8))(v25, v70);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v56 + 32))(v64, v54, v55);
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_1003134A0()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v1[27] = v0;
  v2 = type metadata accessor for Logger(0);
  v1[28] = v2;
  v3 = *(_QWORD *)(v2 - 8);
  v1[29] = v3;
  v4 = (*(_QWORD *)(v3 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v1[30] = swift_task_alloc(v4);
  v1[31] = swift_task_alloc(v4);
  v1[32] = swift_task_alloc(v4);
  v5 = type metadata accessor for Date(0);
  v1[33] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v1[34] = v6;
  v7 = (*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v1[35] = swift_task_alloc(v7);
  v1[36] = swift_task_alloc(v7);
  v1[37] = swift_task_alloc(v7);
  return swift_task_switch(sub_100313560, 0, 0);
}

void sub_100313560(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  _QWORD *v9;
  _QWORD *v10;

  v2 = v1[27];
  Date.init()(a1);
  v3 = OBJC_IVAR___BKEngagementManager_analyticsHelper;
  v1[38] = OBJC_IVAR___BKEngagementManager_analyticsHelper;
  v4 = (_QWORD *)(v2 + v3);
  swift_beginAccess(v4, v1 + 6, 0, 0);
  if (*v4)
  {
    v5 = v1[27];
    v6 = *(_QWORD *)(*v4 + OBJC_IVAR___BKEngagementManagerAnalyticsHelper_standardProperties);
    v7 = OBJC_IVAR___BKEngagementManager_manager;
    v1[39] = OBJC_IVAR___BKEngagementManager_manager;
    v8 = *(void **)(v5 + v7);
    v1[40] = v8;
    swift_bridgeObjectRetain(v6);
    v8;
    v9 = sub_100427630(v6);
    v1[41] = v9;
    swift_bridgeObjectRelease(v6);
    v10 = (_QWORD *)swift_task_alloc(async function pointer to Manager.fetchCounts(_:)[1]);
    v1[42] = v10;
    *v10 = v1;
    v10[1] = sub_100313648;
    Manager.fetchCounts(_:)(v9);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_100313648(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  void *v6;
  void *v7;

  v4 = *(_QWORD **)v2;
  v5 = *(_QWORD *)(*(_QWORD *)v2 + 336);
  *(_QWORD *)(*(_QWORD *)v2 + 344) = v1;
  swift_task_dealloc(v5);
  if (v1)
  {
    v6 = sub_100314610;
  }
  else
  {
    v7 = (void *)v4[40];
    swift_release(v4[41]);

    v4[44] = a1;
    v6 = sub_1003136C8;
  }
  return swift_task_switch(v6, 0, 0);
}

void sub_1003136C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  NSObject *v34;
  os_log_type_t v35;
  _BOOL4 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint8_t *v41;
  uint64_t v42;
  double v43;
  uint64_t (*v44)(uint64_t, uint64_t);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;

  swift_bridgeObjectRelease(_swiftEmptyDictionarySingleton);
  v1 = *(_QWORD *)(v0 + 216);
  v2 = *(_QWORD *)(v1 + *(_QWORD *)(v0 + 304));
  if (v2)
  {
    v3 = *(_QWORD *)(v0 + 352);
    v4 = *(_QWORD *)(v2 + OBJC_IVAR___BKEngagementManagerAnalyticsHelper_sampleCapableProperties);
    *(_QWORD *)(v0 + 360) = v4;
    v5 = *(_BYTE *)(v4 + 32);
    *(_BYTE *)(v0 + 432) = v5;
    v6 = -1;
    v7 = -1 << v5;
    if (-(-1 << v5) < 64)
      v6 = ~(-1 << -(char)v7);
    v8 = v6 & *(_QWORD *)(v4 + 56);
    *(_QWORD *)(v0 + 368) = v3;
    swift_bridgeObjectRetain(v4);
    if (v8)
    {
      v10 = 0;
      v11 = __clz(__rbit64(v8));
      v12 = (v8 - 1) & v8;
LABEL_6:
      *(_QWORD *)(v0 + 376) = v10;
      *(_QWORD *)(v0 + 384) = v12;
      v13 = *(_QWORD *)(v0 + 312);
      v14 = (uint64_t *)(v9[6] + 16 * v11);
      v15 = *v14;
      *(_QWORD *)(v0 + 392) = *v14;
      v16 = v14[1];
      *(_QWORD *)(v0 + 400) = v16;
      v17 = *(void **)(v1 + v13);
      *(_QWORD *)(v0 + 408) = v17;
      v18 = async function pointer to Manager.getProperties(propertyName:assetIDs:)[1];
      swift_bridgeObjectRetain(v16);
      v17;
      v19 = (_QWORD *)swift_task_alloc(v18);
      *(_QWORD *)(v0 + 416) = v19;
      *v19 = v0;
      v19[1] = sub_100313AE4;
      Manager.getProperties(propertyName:assetIDs:)(v15, v16, 0);
      return;
    }
    v20 = 63 - v7;
    if ((unint64_t)(63 - v7) > 0x7F)
    {
      v21 = v9[8];
      if (v21)
      {
        v10 = 1;
LABEL_10:
        v12 = (v21 - 1) & v21;
        v11 = __clz(__rbit64(v21)) + (v10 << 6);
        goto LABEL_6;
      }
      if (v20 >= 0xC0)
      {
        v21 = v9[9];
        if (v21)
        {
          v10 = 2;
          goto LABEL_10;
        }
        if (v20 >= 0x100)
        {
          v21 = v9[10];
          if (v21)
          {
            v10 = 3;
            goto LABEL_10;
          }
          if (v20 >= 0x140)
          {
            v21 = v9[11];
            if (v21)
            {
              v10 = 4;
              goto LABEL_10;
            }
            v22 = 0;
            v23 = v20 >> 6;
            if (v23 <= 5)
              v23 = 5;
            v24 = v23 - 5;
            while (v24 != v22)
            {
              v21 = v9[v22++ + 12];
              if (v21)
              {
                v10 = v22 + 4;
                goto LABEL_10;
              }
            }
          }
        }
      }
    }
    swift_release(v9);
    if (*(_QWORD *)(v3 + 16))
    {
      v26 = (_QWORD *)(*(_QWORD *)(v0 + 216) + OBJC_IVAR___BKEngagementManager_metadata);
      swift_beginAccess(v26, v0 + 96, 0, 0);
      v27 = (uint64_t *)(*v26 + OBJC_IVAR___BKEngagementManagerMetadata_propertyCounts);
      swift_beginAccess(v27, v0 + 72, 1, 0);
      v28 = *v27;
      *v27 = v3;
      swift_bridgeObjectRetain(v3);
      swift_bridgeObjectRelease(v28);
    }
    v30 = *(_QWORD *)(v0 + 288);
    v29 = *(_QWORD *)(v0 + 296);
    v31 = *(_QWORD *)(v0 + 264);
    v32 = *(_QWORD *)(v0 + 272);
    static Logger.engagement.getter(v25);
    v33 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v32 + 16))(v30, v29, v31);
    v34 = Logger.logObject.getter(v33);
    v35 = static os_log_type_t.info.getter(v34);
    v36 = os_log_type_enabled(v34, v35);
    v37 = *(_QWORD *)(v0 + 288);
    if (v36)
    {
      v39 = *(_QWORD *)(v0 + 272);
      v38 = *(_QWORD *)(v0 + 280);
      v40 = *(_QWORD *)(v0 + 264);
      v41 = (uint8_t *)swift_slowAlloc(12, -1);
      *(_DWORD *)v41 = 134217984;
      v42 = Date.init()(v41);
      v43 = Date.timeIntervalSince1970.getter(v42);
      v44 = *(uint64_t (**)(uint64_t, uint64_t))(v39 + 8);
      v45 = v44(v38, v40);
      *(double *)(v0 + 200) = v43 - Date.timeIntervalSince1970.getter(v45);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 200, v0 + 208, v41 + 4, v41 + 12);
      v44(v37, v40);
      _os_log_impl((void *)&_mh_execute_header, v34, v35, "Time to calculate engagement manager property metadata %fs", v41, 0xCu);
      swift_slowDealloc(v41, -1, -1);

    }
    else
    {
      v46 = *(_QWORD *)(v0 + 264);
      v47 = *(_QWORD *)(v0 + 272);

      v44 = *(uint64_t (**)(uint64_t, uint64_t))(v47 + 8);
      v44(v37, v46);
    }
    v49 = *(_QWORD *)(v0 + 288);
    v48 = *(_QWORD *)(v0 + 296);
    v50 = *(_QWORD *)(v0 + 280);
    v52 = *(_QWORD *)(v0 + 256);
    v51 = *(_QWORD *)(v0 + 264);
    v54 = *(_QWORD *)(v0 + 240);
    v53 = *(_QWORD *)(v0 + 248);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 232) + 8))(v53, *(_QWORD *)(v0 + 224));
    v44(v48, v51);
    swift_bridgeObjectRelease(v3);
    swift_task_dealloc(v48);
    swift_task_dealloc(v49);
    swift_task_dealloc(v50);
    swift_task_dealloc(v52);
    swift_task_dealloc(v53);
    swift_task_dealloc(v54);
    (*(void (**)(void))(v0 + 8))();
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_100313AE4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;

  v3 = *(void **)(*(_QWORD *)v1 + 408);
  v2 = *(_QWORD *)(*(_QWORD *)v1 + 416);
  *(_QWORD *)(*(_QWORD *)v1 + 424) = a1;
  swift_task_dealloc(v2);

  return swift_task_switch(sub_100313B44, 0, 0);
}

void sub_100313B44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  Swift::String v8;
  Swift::String v9;
  uint64_t v10;
  uint64_t v11;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  id v16;
  Swift::String v17;
  Swift::String v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  _QWORD *v22;
  uint64_t v23;
  _OWORD *v24;
  uint64_t v25;
  _BYTE *v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  id v37;
  uint64_t v38;
  NSObject *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  os_log_type_t v43;
  _BOOL4 v44;
  unint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  id v54;
  void *v55;
  uint64_t v56;
  uint64_t v57;
  id v58;
  unsigned int v59;
  Swift::String v60;
  uint64_t v61;
  unint64_t v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  char v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char v71;
  unint64_t v72;
  uint64_t v73;
  _BOOL8 v74;
  uint64_t v75;
  char v76;
  unint64_t v77;
  char v78;
  uint64_t *v79;
  uint64_t v80;
  BOOL v81;
  uint64_t v82;
  uint64_t v83;
  int64_t v84;
  unint64_t v85;
  uint64_t v86;
  unint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t *v91;
  uint64_t v92;
  uint64_t v93;
  void *v94;
  uint64_t v95;
  _QWORD *v96;
  int64_t v97;
  int64_t v98;
  uint64_t v99;
  unint64_t v100;
  int64_t v101;
  uint64_t v102;
  _QWORD *v103;
  _QWORD *v104;
  uint64_t *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  NSObject *v112;
  os_log_type_t v113;
  _BOOL4 v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint8_t *v119;
  uint64_t v120;
  double v121;
  uint64_t (*v122)(uint64_t, uint64_t);
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  void *v138;
  NSObject *log;
  _QWORD *v140;
  _QWORD *v141;
  _QWORD *v142;
  uint64_t v143;

  v2 = *(_QWORD *)(v1 + 304);
  v3 = *(_QWORD *)(v1 + 216);
  v4 = *(void **)(v3 + v2);
  if (!v4)
    goto LABEL_80;
  *(_QWORD *)(v1 + 136) = *(_QWORD *)(v1 + 392);
  v5 = *(_QWORD *)(v1 + 400);
  v6 = *(_QWORD *)(v1 + 368);
  *(_QWORD *)(v1 + 144) = v5;
  v7 = v4;
  swift_bridgeObjectRetain(v5);
  v8._countAndFlagsBits = 45;
  v8._object = (void *)0xE100000000000000;
  String.append(_:)(v8);
  v9._countAndFlagsBits = 0x706D61732D6E6F6ELL;
  v9._object = (void *)0xEA0000000000656CLL;
  String.append(_:)(v9);

  v10 = *(_QWORD *)(v1 + 136);
  v11 = *(_QWORD *)(v1 + 144);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v6);
  v143 = v6;
  sub_1002C4230(0, v10, v11, isUniquelyReferenced_nonNull_native);
  v13 = v6;
  swift_bridgeObjectRelease(0x8000000000000000);
  swift_bridgeObjectRelease(v11);
  v14 = *(void **)(v3 + v2);
  v0 = *(_QWORD *)(v1 + 424);
  if (v14)
  {
    v15 = *(_QWORD *)(v1 + 400);
    *(_QWORD *)(v1 + 120) = *(_QWORD *)(v1 + 392);
    *(_QWORD *)(v1 + 128) = v15;
    v16 = v14;
    swift_bridgeObjectRetain(v15);
    v17._countAndFlagsBits = 45;
    v17._object = (void *)0xE100000000000000;
    String.append(_:)(v17);
    v18._countAndFlagsBits = 0x656C706D6173;
    v18._object = (void *)0xE600000000000000;
    String.append(_:)(v18);

    v19 = *(_QWORD *)(v1 + 120);
    v20 = *(_QWORD *)(v1 + 128);
    v21 = swift_isUniquelyReferenced_nonNull_native(v13);
    v143 = v13;
    sub_1002C4230(0, v19, v20, v21);
    v22 = (_QWORD *)v13;
    swift_bridgeObjectRelease(0x8000000000000000);
    swift_bridgeObjectRelease(v20);
    v0 = *(_QWORD *)(v0 + 16);
    v23 = *(_QWORD *)(v1 + 424);
    if (v0)
    {
      v24 = (_OWORD *)(v1 + 16);
      v25 = v1 + 168;
      v142 = (_QWORD *)(v1 + 176);
      v26 = (_BYTE *)(v23 + 72);
      while (1)
      {
        if (*v26 == 2)
        {
          v27 = *((_QWORD *)v26 - 5);
          v28 = *((_QWORD *)v26 - 4);
          v29 = *((_QWORD *)v26 - 1);
          swift_bridgeObjectRetain(v29);
          swift_bridgeObjectRetain(v28);
          if (*(_QWORD *)(v29 + 16)
            && (v30 = sub_10004CE80(0x656C706D61537369, 0xE800000000000000), (v31 & 1) != 0))
          {
            sub_10004CD0C(*(_QWORD *)(v29 + 56) + 32 * v30, (uint64_t)v24);
          }
          else
          {
            *v24 = 0u;
            v24[1] = 0u;
          }
          swift_bridgeObjectRelease(v29);
          if (*(_QWORD *)(v1 + 40))
          {
            v32 = sub_10004CFD4(&qword_1009DA340);
            v33 = sub_100009E04(0, (unint64_t *)&qword_1009DA820, NSNumber_ptr);
            v34 = swift_dynamicCast(v25, v24, v32, v33, 6);
            if ((v34 & 1) != 0)
            {
              v140 = v22;
              v35 = *(_QWORD *)(v1 + 400);
              v36 = *(void **)(v1 + 168);
              static Logger.engagement.getter(v34);
              swift_bridgeObjectRetain_n(v35, 2);
              v37 = v36;
              swift_bridgeObjectRetain(v28);
              v39 = Logger.logObject.getter(v38);
              v43 = static os_log_type_t.debug.getter(v39, v40, v41, v42);
              log = v39;
              v44 = os_log_type_enabled(v39, v43);
              v45 = *(_QWORD *)(v1 + 400);
              if (v44)
              {
                v133 = *(_QWORD *)(v1 + 392);
                v135 = *(_QWORD *)(v1 + 232);
                v136 = *(_QWORD *)(v1 + 224);
                v137 = *(_QWORD *)(v1 + 256);
                v46 = swift_slowAlloc(32, -1);
                v47 = (_QWORD *)swift_slowAlloc(8, -1);
                v134 = swift_slowAlloc(64, -1);
                v143 = v134;
                *(_DWORD *)v46 = 136315650;
                swift_bridgeObjectRetain(v45);
                *(_QWORD *)(v46 + 4) = sub_100040F58(v133, v45, &v143);
                swift_bridgeObjectRelease_n(v45, 3);
                *(_WORD *)(v46 + 12) = 2080;
                if (v28)
                  v48 = v27;
                else
                  v48 = 0x3E6C6C756E3CLL;
                if (v28)
                  v49 = v28;
                else
                  v49 = 0xE600000000000000;
                swift_bridgeObjectRetain(v28);
                *(_QWORD *)(v46 + 14) = sub_100040F58(v48, v49, &v143);
                swift_bridgeObjectRelease(v49);
                swift_bridgeObjectRelease_n(v28, 2);
                *(_WORD *)(v46 + 22) = 2112;
                *(_QWORD *)(v46 + 24) = v37;
                *v47 = v37;

                _os_log_impl((void *)&_mh_execute_header, log, v43, "property %s identifier %s isSample=%@", (uint8_t *)v46, 0x20u);
                v50 = sub_10004CFD4((uint64_t *)&unk_1009D6190);
                swift_arrayDestroy(v47, 1, v50);
                swift_slowDealloc(v47, -1, -1);
                swift_arrayDestroy(v134, 2, (char *)&type metadata for Any + 8);
                swift_slowDealloc(v134, -1, -1);
                swift_slowDealloc(v46, -1, -1);

                (*(void (**)(uint64_t, uint64_t))(v135 + 8))(v137, v136);
              }
              else
              {
                v51 = *(_QWORD *)(v1 + 256);
                v52 = *(_QWORD *)(v1 + 224);
                v53 = *(_QWORD *)(v1 + 232);
                swift_bridgeObjectRelease_n(*(_QWORD *)(v1 + 400), 2);
                swift_bridgeObjectRelease_n(v28, 2);

                (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v51, v52);
              }
              v54 = v37;
              v55 = *(void **)(*(_QWORD *)(v1 + 216) + *(_QWORD *)(v1 + 304));
              if (!v55)
                goto LABEL_79;
              v57 = *(_QWORD *)(v1 + 392);
              v56 = *(_QWORD *)(v1 + 400);
              v58 = v55;
              v59 = objc_msgSend(v37, "BOOLValue");
              *(_QWORD *)(v1 + 152) = v57;
              *(_QWORD *)(v1 + 160) = v56;
              swift_bridgeObjectRetain(v56);
              v60._countAndFlagsBits = 45;
              v60._object = (void *)0xE100000000000000;
              String.append(_:)(v60);
              if (v59)
                v61 = 0x656C706D6173;
              else
                v61 = 0x706D61732D6E6F6ELL;
              if (v59)
                v62 = 0xE600000000000000;
              else
                v62 = 0xEA0000000000656CLL;
              v63 = v62;
              String.append(_:)(*(Swift::String *)&v61);
              swift_bridgeObjectRelease(v62);

              v64 = *(_QWORD *)(v1 + 152);
              v65 = *(_QWORD *)(v1 + 160);
              v138 = v54;
              if (v140[2])
              {
                swift_bridgeObjectRetain(v65);
                v66 = sub_10004CE80(v64, v65);
                if ((v67 & 1) != 0)
                  v68 = *(_QWORD *)(v140[7] + 8 * v66);
                else
                  v68 = 0;
                swift_bridgeObjectRelease(v65);
              }
              else
              {
                v68 = 0;
              }
              v69 = v68 + 1;
              if (__OFADD__(v68, 1))
              {
                __break(1u);
LABEL_75:
                __break(1u);
LABEL_76:
                __break(1u);
LABEL_77:
                __break(1u);
LABEL_78:
                __break(1u);
LABEL_79:
                __break(1u);
LABEL_80:
                swift_bridgeObjectRelease(*(_QWORD *)(v1 + 424));
                __break(1u);
                goto LABEL_81;
              }
              v70 = swift_isUniquelyReferenced_nonNull_native(v140);
              *v142 = v140;
              v72 = sub_10004CE80(v64, v65);
              v73 = v140[2];
              v74 = (v71 & 1) == 0;
              v75 = v73 + v74;
              if (__OFADD__(v73, v74))
                goto LABEL_75;
              v76 = v71;
              if (v140[3] >= v75)
              {
                if ((v70 & 1) == 0)
                  sub_1002C0448();
              }
              else
              {
                sub_100025834(v75, v70);
                v77 = sub_10004CE80(v64, v65);
                if ((v76 & 1) != (v78 & 1))
                {
                  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
                  return;
                }
                v72 = v77;
              }
              v22 = (_QWORD *)*v142;
              if ((v76 & 1) != 0)
              {
                *(_QWORD *)(v22[7] + 8 * v72) = v69;
              }
              else
              {
                v22[(v72 >> 6) + 8] |= 1 << v72;
                v79 = (uint64_t *)(v22[6] + 16 * v72);
                *v79 = v64;
                v79[1] = v65;
                *(_QWORD *)(v22[7] + 8 * v72) = v69;
                v80 = v22[2];
                v81 = __OFADD__(v80, 1);
                v82 = v80 + 1;
                if (v81)
                  goto LABEL_76;
                v22[2] = v82;
                swift_bridgeObjectRetain(v65);
              }
              swift_bridgeObjectRelease(0x8000000000000000);
              swift_bridgeObjectRelease(v65);

              v25 = v1 + 168;
              v24 = (_OWORD *)(v1 + 16);
            }
            else
            {
              swift_bridgeObjectRelease(v28);
            }
          }
          else
          {
            swift_bridgeObjectRelease(v28);
            sub_100010960((uint64_t)v24, (uint64_t *)&unk_1009E6400);
          }
        }
        v26 += 48;
        if (!--v0)
        {
          v23 = *(_QWORD *)(v1 + 424);
          break;
        }
      }
    }
    v83 = *(_QWORD *)(v1 + 400);
    swift_bridgeObjectRelease(v23);
    swift_bridgeObjectRelease(v83);
    v84 = *(_QWORD *)(v1 + 376);
    v85 = *(_QWORD *)(v1 + 384);
    *(_QWORD *)(v1 + 368) = v22;
    if (v85)
    {
      v86 = (v85 - 1) & v85;
      v87 = __clz(__rbit64(v85)) | (v84 << 6);
      v88 = *(_QWORD *)(v1 + 360);
LABEL_52:
      *(_QWORD *)(v1 + 376) = v84;
      *(_QWORD *)(v1 + 384) = v86;
      v89 = *(_QWORD *)(v1 + 312);
      v90 = *(_QWORD *)(v1 + 216);
      v91 = (uint64_t *)(*(_QWORD *)(v88 + 48) + 16 * v87);
      v92 = *v91;
      *(_QWORD *)(v1 + 392) = *v91;
      v93 = v91[1];
      *(_QWORD *)(v1 + 400) = v93;
      v94 = *(void **)(v90 + v89);
      *(_QWORD *)(v1 + 408) = v94;
      v95 = async function pointer to Manager.getProperties(propertyName:assetIDs:)[1];
      swift_bridgeObjectRetain(v93);
      v94;
      v96 = (_QWORD *)swift_task_alloc(v95);
      *(_QWORD *)(v1 + 416) = v96;
      *v96 = v1;
      v96[1] = sub_100313AE4;
      Manager.getProperties(propertyName:assetIDs:)(v92, v93, 0);
      return;
    }
    v97 = v84 + 1;
    if (__OFADD__(v84, 1))
      goto LABEL_77;
    v98 = (unint64_t)((1 << *(_BYTE *)(v1 + 432)) + 63) >> 6;
    v88 = *(_QWORD *)(v1 + 360);
    if (v97 < v98)
    {
      v99 = v88 + 56;
      v100 = *(_QWORD *)(v88 + 56 + 8 * v97);
      ++v84;
      if (v100)
      {
LABEL_56:
        v86 = (v100 - 1) & v100;
        v87 = __clz(__rbit64(v100)) + (v84 << 6);
        goto LABEL_52;
      }
      v84 = v97 + 1;
      if (v97 + 1 < v98)
      {
        v100 = *(_QWORD *)(v99 + 8 * v84);
        if (v100)
          goto LABEL_56;
        v84 = v97 + 2;
        if (v97 + 2 < v98)
        {
          v100 = *(_QWORD *)(v99 + 8 * v84);
          if (v100)
            goto LABEL_56;
          v101 = v97 + 3;
          if (v101 < v98)
          {
            v100 = *(_QWORD *)(v99 + 8 * v101);
            if (!v100)
            {
              while (1)
              {
                v84 = v101 + 1;
                if (__OFADD__(v101, 1))
                  goto LABEL_78;
                if (v84 >= v98)
                  goto LABEL_68;
                v100 = *(_QWORD *)(v99 + 8 * v84);
                ++v101;
                if (v100)
                  goto LABEL_56;
              }
            }
            v84 = v101;
            goto LABEL_56;
          }
        }
      }
    }
LABEL_68:
    swift_release(v88);
    v103 = v22;
    if (v22[2])
    {
      v104 = (_QWORD *)(*(_QWORD *)(v1 + 216) + OBJC_IVAR___BKEngagementManager_metadata);
      swift_beginAccess(v104, v1 + 96, 0, 0);
      v105 = (uint64_t *)(*v104 + OBJC_IVAR___BKEngagementManagerMetadata_propertyCounts);
      swift_beginAccess(v105, v1 + 72, 1, 0);
      v106 = *v105;
      *v105 = (uint64_t)v103;
      swift_bridgeObjectRetain(v103);
      swift_bridgeObjectRelease(v106);
    }
    v141 = v103;
    v107 = *(_QWORD *)(v1 + 288);
    v108 = *(_QWORD *)(v1 + 296);
    v109 = *(_QWORD *)(v1 + 264);
    v110 = *(_QWORD *)(v1 + 272);
    static Logger.engagement.getter(v102);
    v111 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v110 + 16))(v107, v108, v109);
    v112 = Logger.logObject.getter(v111);
    v113 = static os_log_type_t.info.getter(v112);
    v114 = os_log_type_enabled(v112, v113);
    v115 = *(_QWORD *)(v1 + 288);
    if (v114)
    {
      v117 = *(_QWORD *)(v1 + 272);
      v116 = *(_QWORD *)(v1 + 280);
      v118 = *(_QWORD *)(v1 + 264);
      v119 = (uint8_t *)swift_slowAlloc(12, -1);
      *(_DWORD *)v119 = 134217984;
      v120 = Date.init()(v119);
      v121 = Date.timeIntervalSince1970.getter(v120);
      v122 = *(uint64_t (**)(uint64_t, uint64_t))(v117 + 8);
      v123 = v122(v116, v118);
      *(double *)(v1 + 200) = v121 - Date.timeIntervalSince1970.getter(v123);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 200, v1 + 208, v119 + 4, v119 + 12);
      v122(v115, v118);
      _os_log_impl((void *)&_mh_execute_header, v112, v113, "Time to calculate engagement manager property metadata %fs", v119, 0xCu);
      swift_slowDealloc(v119, -1, -1);

    }
    else
    {
      v125 = *(_QWORD *)(v1 + 264);
      v124 = *(_QWORD *)(v1 + 272);

      v122 = *(uint64_t (**)(uint64_t, uint64_t))(v124 + 8);
      v122(v115, v125);
    }
    v126 = *(_QWORD *)(v1 + 288);
    v127 = *(_QWORD *)(v1 + 296);
    v128 = *(_QWORD *)(v1 + 280);
    v130 = *(_QWORD *)(v1 + 256);
    v129 = *(_QWORD *)(v1 + 264);
    v132 = *(_QWORD *)(v1 + 240);
    v131 = *(_QWORD *)(v1 + 248);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v1 + 232) + 8))(v131, *(_QWORD *)(v1 + 224));
    v122(v127, v129);
    swift_bridgeObjectRelease(v141);
    swift_task_dealloc(v127);
    swift_task_dealloc(v126);
    swift_task_dealloc(v128);
    swift_task_dealloc(v130);
    swift_task_dealloc(v131);
    swift_task_dealloc(v132);
    (*(void (**)(void))(v1 + 8))();
  }
  else
  {
LABEL_81:
    swift_bridgeObjectRelease(v0);
    __break(1u);
  }
}

uint64_t sub_100314610()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  void *v6;
  NSObject *v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  _DWORD *v11;
  _DWORD *v12;
  NSObject *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  _QWORD *v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  NSObject *v50;
  os_log_type_t v51;
  _BOOL4 v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint8_t *v57;
  uint64_t v58;
  double v59;
  uint64_t (*v60)(uint64_t, uint64_t);
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  NSObject **v71;
  uint8_t *buf;

  v1 = *(_QWORD *)(v0 + 344);
  v2 = *(_QWORD *)(v0 + 328);

  swift_release(v2);
  *(_QWORD *)(v0 + 192) = v1;
  v3 = sub_10004CFD4((uint64_t *)&unk_1009D3170);
  v4 = sub_100009E04(0, (unint64_t *)&qword_1009DA3B0, NSError_ptr);
  result = swift_dynamicCast(v0 + 184, v0 + 192, v3, v4, 0);
  if ((result & 1) != 0)
  {
    v6 = *(void **)(v0 + 184);
    static Logger.engagement.getter(result);
    v7 = v6;
    v8 = Logger.logObject.getter(v7);
    v9 = static os_log_type_t.error.getter(v8);
    if (os_log_type_enabled(v8, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc(12, -1);
      v71 = (NSObject **)swift_slowAlloc(8, -1);
      buf = v10;
      *(_DWORD *)v10 = 138412290;
      v11 = v10 + 12;
      v12 = v10 + 4;
      *(_QWORD *)(v0 + 208) = v7;
      v13 = v7;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 208, v0 + 216, v12, v11);
      *v71 = v7;

      _os_log_impl((void *)&_mh_execute_header, v8, v9, "Error gathering engagement analytics metadata %@", buf, 0xCu);
      v14 = sub_10004CFD4((uint64_t *)&unk_1009D6190);
      swift_arrayDestroy(v71, 1, v14);
      swift_slowDealloc(v71, -1, -1);
      swift_slowDealloc(buf, -1, -1);
    }
    else
    {

      v8 = v7;
    }
    v16 = *(_QWORD *)(v0 + 232);
    v15 = *(_QWORD *)(v0 + 240);
    v17 = *(_QWORD *)(v0 + 224);

    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v15, v17);
    result = swift_errorRelease(*(_QWORD *)(v0 + 192));
    v18 = *(_QWORD *)(v0 + 216);
    v19 = *(_QWORD *)(v18 + *(_QWORD *)(v0 + 304));
    if (v19)
    {
      v20 = *(_QWORD *)(v19 + OBJC_IVAR___BKEngagementManagerAnalyticsHelper_sampleCapableProperties);
      *(_QWORD *)(v0 + 360) = v20;
      v21 = *(_BYTE *)(v20 + 32);
      *(_BYTE *)(v0 + 432) = v21;
      v22 = -1;
      v23 = -1 << v21;
      if (-(-1 << v21) < 64)
        v22 = ~(-1 << -(char)v23);
      v24 = v22 & *(_QWORD *)(v20 + 56);
      *(_QWORD *)(v0 + 368) = _swiftEmptyDictionarySingleton;
      swift_bridgeObjectRetain(v20);
      if (v24)
      {
        v26 = 0;
        v27 = __clz(__rbit64(v24));
        v28 = (v24 - 1) & v24;
LABEL_11:
        *(_QWORD *)(v0 + 376) = v26;
        *(_QWORD *)(v0 + 384) = v28;
        v29 = *(_QWORD *)(v0 + 312);
        v30 = (uint64_t *)(v25[6] + 16 * v27);
        v31 = *v30;
        *(_QWORD *)(v0 + 392) = *v30;
        v32 = v30[1];
        *(_QWORD *)(v0 + 400) = v32;
        v33 = *(void **)(v18 + v29);
        *(_QWORD *)(v0 + 408) = v33;
        v34 = async function pointer to Manager.getProperties(propertyName:assetIDs:)[1];
        swift_bridgeObjectRetain(v32);
        v33;
        v35 = (_QWORD *)swift_task_alloc(v34);
        *(_QWORD *)(v0 + 416) = v35;
        *v35 = v0;
        v35[1] = sub_100313AE4;
        return Manager.getProperties(propertyName:assetIDs:)(v31, v32, 0);
      }
      v36 = 63 - v23;
      if ((unint64_t)(63 - v23) > 0x7F)
      {
        v37 = v25[8];
        if (v37)
        {
          v26 = 1;
LABEL_15:
          v28 = (v37 - 1) & v37;
          v27 = __clz(__rbit64(v37)) + (v26 << 6);
          goto LABEL_11;
        }
        if (v36 >= 0xC0)
        {
          v37 = v25[9];
          if (v37)
          {
            v26 = 2;
            goto LABEL_15;
          }
          if (v36 >= 0x100)
          {
            v37 = v25[10];
            if (v37)
            {
              v26 = 3;
              goto LABEL_15;
            }
            if (v36 >= 0x140)
            {
              v37 = v25[11];
              if (v37)
              {
                v26 = 4;
                goto LABEL_15;
              }
              v38 = 0;
              v39 = v36 >> 6;
              if (v39 <= 5)
                v39 = 5;
              v40 = v39 - 5;
              while (v40 != v38)
              {
                v37 = v25[v38++ + 12];
                if (v37)
                {
                  v26 = v38 + 4;
                  goto LABEL_15;
                }
              }
            }
          }
        }
      }
      swift_release(v25);
      if (_swiftEmptyDictionarySingleton[2])
      {
        v42 = (_QWORD *)(*(_QWORD *)(v0 + 216) + OBJC_IVAR___BKEngagementManager_metadata);
        swift_beginAccess(v42, v0 + 96, 0, 0);
        v43 = (uint64_t *)(*v42 + OBJC_IVAR___BKEngagementManagerMetadata_propertyCounts);
        swift_beginAccess(v43, v0 + 72, 1, 0);
        v44 = *v43;
        *v43 = (uint64_t)_swiftEmptyDictionarySingleton;
        swift_bridgeObjectRetain(_swiftEmptyDictionarySingleton);
        swift_bridgeObjectRelease(v44);
      }
      v46 = *(_QWORD *)(v0 + 288);
      v45 = *(_QWORD *)(v0 + 296);
      v48 = *(_QWORD *)(v0 + 264);
      v47 = *(_QWORD *)(v0 + 272);
      static Logger.engagement.getter(v41);
      v49 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v47 + 16))(v46, v45, v48);
      v50 = Logger.logObject.getter(v49);
      v51 = static os_log_type_t.info.getter(v50);
      v52 = os_log_type_enabled(v50, v51);
      v53 = *(_QWORD *)(v0 + 288);
      if (v52)
      {
        v55 = *(_QWORD *)(v0 + 272);
        v54 = *(_QWORD *)(v0 + 280);
        v56 = *(_QWORD *)(v0 + 264);
        v57 = (uint8_t *)swift_slowAlloc(12, -1);
        *(_DWORD *)v57 = 134217984;
        v58 = Date.init()(v57);
        v59 = Date.timeIntervalSince1970.getter(v58);
        v60 = *(uint64_t (**)(uint64_t, uint64_t))(v55 + 8);
        v61 = v60(v54, v56);
        *(double *)(v0 + 200) = v59 - Date.timeIntervalSince1970.getter(v61);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 200, v0 + 208, v57 + 4, v57 + 12);
        v60(v53, v56);
        _os_log_impl((void *)&_mh_execute_header, v50, v51, "Time to calculate engagement manager property metadata %fs", v57, 0xCu);
        swift_slowDealloc(v57, -1, -1);

      }
      else
      {
        v63 = *(_QWORD *)(v0 + 264);
        v62 = *(_QWORD *)(v0 + 272);

        v60 = *(uint64_t (**)(uint64_t, uint64_t))(v62 + 8);
        v60(v53, v63);
      }
      v64 = *(_QWORD *)(v0 + 288);
      v65 = *(_QWORD *)(v0 + 296);
      v66 = *(_QWORD *)(v0 + 280);
      v68 = *(_QWORD *)(v0 + 256);
      v67 = *(_QWORD *)(v0 + 264);
      v70 = *(_QWORD *)(v0 + 240);
      v69 = *(_QWORD *)(v0 + 248);
      (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 232) + 8))(v69, *(_QWORD *)(v0 + 224));
      v60(v65, v67);
      swift_bridgeObjectRelease(_swiftEmptyDictionarySingleton);
      swift_task_dealloc(v65);
      swift_task_dealloc(v64);
      swift_task_dealloc(v66);
      swift_task_dealloc(v68);
      swift_task_dealloc(v69);
      swift_task_dealloc(v70);
      return (*(uint64_t (**)(void))(v0 + 8))();
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

void sub_100314BFC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *Strong;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  _BYTE v15[24];

  v4 = sub_10004CFD4(&qword_1009D3150);
  __chkstk_darwin(v4);
  v6 = &v15[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  swift_beginAccess(a1 + 16, v15, 0, 0);
  Strong = (char *)swift_unknownObjectWeakLoadStrong(a1 + 16);
  if (Strong)
  {
    v8 = *(_QWORD *)&Strong[OBJC_IVAR___BKEngagementManager_updateMetadataGeneration];

    if (v8 != a2)
      return;
    goto LABEL_3;
  }
  if (!a2)
  {
LABEL_3:
    v9 = type metadata accessor for TaskPriority(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v6, 1, 1, v9);
    type metadata accessor for MainActor(0);
    v10 = swift_retain(a1);
    v11 = static MainActor.shared.getter(v10);
    v12 = (_QWORD *)swift_allocObject(&unk_1008FC880, 40, 7);
    v12[2] = v11;
    v12[3] = &protocol witness table for MainActor;
    v12[4] = a1;
    v13 = sub_10030C1B0((uint64_t)v6, (uint64_t)&unk_1009DA398, (uint64_t)v12, (uint64_t)&unk_1008FC380, &qword_1009DA1E8, (uint64_t)&unk_1009DA1E0);
    swift_release(v13);
  }
}

uint64_t sub_100314D3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4[5] = a1;
  v4[6] = a4;
  v5 = type metadata accessor for MainActor(0);
  v4[7] = static MainActor.shared.getter(v5);
  v6 = dispatch thunk of Actor.unownedExecutor.getter(v5, &protocol witness table for MainActor);
  v4[8] = v6;
  v4[9] = v7;
  return swift_task_switch(sub_100314DA8, v6, v7);
}

uint64_t sub_100314DA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  _QWORD *v3;
  __n128 v5;

  v1 = *(_QWORD *)(v0 + 48) + 16;
  swift_beginAccess(v1, v0 + 16, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  *(_QWORD *)(v0 + 80) = Strong;
  if (Strong)
  {
    v3 = (_QWORD *)swift_task_alloc(dword_1009DA3A4);
    *(_QWORD *)(v0 + 88) = v3;
    *v3 = v0;
    v3[1] = sub_100314E4C;
    return sub_1003134A0();
  }
  else
  {
    v5 = swift_release(*(_QWORD *)(v0 + 56));
    **(_BYTE **)(v0 + 40) = *(_QWORD *)(v0 + 80) == 0;
    return (*(uint64_t (**)(__n128))(v0 + 8))(v5);
  }
}

uint64_t sub_100314E4C()
{
  uint64_t *v0;
  uint64_t v1;
  void *v2;

  v1 = *v0;
  v2 = *(void **)(*v0 + 80);
  swift_task_dealloc(*(_QWORD *)(*v0 + 88));

  return swift_task_switch(sub_100314E9C, *(_QWORD *)(v1 + 64), *(_QWORD *)(v1 + 72));
}

uint64_t sub_100314E9C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 56));
  **(_BYTE **)(v0 + 40) = *(_QWORD *)(v0 + 80) == 0;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

id sub_100314EE0()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)v0 + 16), "localVersion");
}

id sub_100314EF4()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)v0 + 16), "syncVersion");
}

void sub_100314F08(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native(*a1) & 1) == 0)
    v2 = sub_10069960C(v2);
  v3 = *(_QWORD *)(v2 + 16);
  v4[0] = v2 + 32;
  v4[1] = v3;
  sub_100314F70(v4);
  *a1 = v2;
}

void sub_100314F70(uint64_t *a1)
{
  uint64_t v1;
  Swift::Int v3;
  Swift::Int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  Swift::Int v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  Swift::Int v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  int v20;
  Swift::Int v21;
  uint64_t *v22;
  Swift::Int v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  Swift::Int v31;
  Swift::Int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  Swift::Int v36;
  _QWORD *v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  Swift::Int v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  BOOL v45;
  unint64_t v46;
  unint64_t v47;
  char *v48;
  char *v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  BOOL v61;
  unint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  BOOL v71;
  uint64_t v72;
  char v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  BOOL v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  unint64_t v89;
  uint64_t v90;
  char *v91;
  char *v92;
  uint64_t v93;
  char *v94;
  unint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  unint64_t v99;
  char *v100;
  char *v101;
  uint64_t v102;
  unint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  unint64_t v107;
  uint64_t *v108;
  uint64_t v109;
  _QWORD *v110;
  Swift::Int v111;
  Swift::Int v112;
  Swift::Int v113;
  char *__dst;

  v3 = a1[1];
  v4 = _minimumMergeRunLength(_:)(v3);
  if (v4 >= v3)
  {
    if ((v3 & 0x8000000000000000) == 0)
    {
      if (v3)
        sub_100315658(0, v3, 1, a1);
      return;
    }
    goto LABEL_154;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
  {
LABEL_162:
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Can't construct Array with count < 0", 36, 2, "Swift/Array.swift", 17, 2, 936, 0);
    __break(1u);
    return;
  }
  v111 = v4;
  v108 = a1;
  if (v3 < 2)
  {
    v8 = _swiftEmptyArrayStorage;
    __dst = (char *)&_swiftEmptyArrayStorage[4];
    if (v3 != 1)
    {
      v12 = _swiftEmptyArrayStorage[2];
      v11 = (char *)_swiftEmptyArrayStorage;
LABEL_120:
      v101 = v11;
      v110 = v8;
      if (v12 < 2)
        goto LABEL_117;
      v102 = *v108;
      while (1)
      {
        v103 = v12 - 2;
        if (v12 < 2)
          goto LABEL_149;
        if (!v102)
          goto LABEL_161;
        v100 = v101;
        v104 = *(_QWORD *)&v101[16 * v103 + 32];
        v105 = *(_QWORD *)&v101[16 * v12 + 24];
        sub_100315724((char *)(v102 + 16 * v104), (char *)(v102 + 16 * *(_QWORD *)&v101[16 * v12 + 16]), v102 + 16 * v105, __dst);
        if (v1)
          goto LABEL_116;
        if (v105 < v104)
          goto LABEL_150;
        if ((swift_isUniquelyReferenced_nonNull_native(v100) & 1) == 0)
          v100 = sub_1006995F8((uint64_t)v100);
        if (v103 >= *((_QWORD *)v100 + 2))
          goto LABEL_151;
        v106 = &v100[16 * v103 + 32];
        *(_QWORD *)v106 = v104;
        *((_QWORD *)v106 + 1) = v105;
        v107 = *((_QWORD *)v100 + 2);
        if (v12 > v107)
          goto LABEL_152;
        memmove(&v100[16 * v12 + 16], &v100[16 * v12 + 32], 16 * (v107 - v12));
        v101 = v100;
        *((_QWORD *)v100 + 2) = v107 - 1;
        v12 = v107 - 1;
        if (v107 <= 2)
          goto LABEL_117;
      }
    }
    v110 = _swiftEmptyArrayStorage;
  }
  else
  {
    v6 = v5 >> 1;
    v7 = static Array._allocateBufferUninitialized(minimumCapacity:)(v5 >> 1, &type metadata for String);
    *(_QWORD *)(v7 + 16) = v6;
    v110 = (_QWORD *)v7;
    __dst = (char *)(v7 + 32);
  }
  v9 = 0;
  v10 = *a1;
  v109 = v10 + 8;
  v11 = (char *)_swiftEmptyArrayStorage;
  v112 = v3;
  while (1)
  {
    v13 = v9++;
    if (v9 >= v3)
      goto LABEL_46;
    v14 = (uint64_t *)(v10 + 16 * v9);
    v15 = *v14;
    v16 = v14[1];
    v17 = (_QWORD *)(v10 + 16 * v13);
    v18 = v17[1];
    if (v15 == *v17 && v16 == v18)
    {
      v21 = v13 + 2;
      if (v13 + 2 >= v3)
        goto LABEL_45;
      v20 = 0;
    }
    else
    {
      v20 = _stringCompareWithSmolCheck(_:_:expecting:)(v15, v16, *v17, v18, 1);
      v21 = v13 + 2;
      if (v13 + 2 >= v3)
        goto LABEL_36;
    }
    v22 = (uint64_t *)(v109 + 16 * v21);
    do
    {
      v24 = *(v22 - 1);
      v25 = *v22;
      v26 = (_QWORD *)(v10 + 16 * v9);
      v27 = v26[1];
      if (v24 == *v26 && v25 == v27)
      {
        if ((v20 & 1) != 0)
          goto LABEL_37;
      }
      else if (((v20 ^ _stringCompareWithSmolCheck(_:_:expecting:)(v24, v25, *v26, v27, 1)) & 1) != 0)
      {
        goto LABEL_36;
      }
      v22 += 2;
      v23 = v21 + 1;
      v9 = v21;
      v21 = v23;
    }
    while (v23 < v3);
    v21 = v23;
LABEL_36:
    v9 = v21;
    if ((v20 & 1) != 0)
    {
LABEL_37:
      if (v21 < v13)
        goto LABEL_157;
      if (v13 < v21)
      {
        v29 = 16 * v21;
        v30 = 16 * v13;
        v31 = v21;
        v32 = v13;
        do
        {
          if (v32 != --v31)
          {
            if (!v10)
              goto LABEL_160;
            v33 = v10 + v29;
            v34 = *(_QWORD *)(v10 + v30);
            v35 = *(_QWORD *)(v10 + v30 + 8);
            *(_OWORD *)(v10 + v30) = *(_OWORD *)(v10 + v29 - 16);
            *(_QWORD *)(v33 - 16) = v34;
            *(_QWORD *)(v33 - 8) = v35;
          }
          ++v32;
          v29 -= 16;
          v30 += 16;
        }
        while (v32 < v31);
      }
LABEL_45:
      v9 = v21;
    }
LABEL_46:
    if (v9 < v3)
    {
      if (__OFSUB__(v9, v13))
        goto LABEL_153;
      if (v9 - v13 < v111)
      {
        if (__OFADD__(v13, v111))
          goto LABEL_155;
        if (v13 + v111 >= v3)
          v36 = v3;
        else
          v36 = v13 + v111;
        if (v36 < v13)
          goto LABEL_156;
        if (v9 != v36)
        {
          v37 = (_QWORD *)(v10 + 16 * v9);
          do
          {
            v38 = (uint64_t *)(v10 + 16 * v9);
            v39 = *v38;
            v40 = v38[1];
            v41 = v13;
            v42 = v37;
            do
            {
              v43 = *(v42 - 2);
              v44 = *(v42 - 1);
              v45 = v39 == v43 && v40 == v44;
              if (v45 || (_stringCompareWithSmolCheck(_:_:expecting:)(v39, v40, v43, v44, 1) & 1) == 0)
                break;
              if (!v10)
                goto LABEL_158;
              v39 = *v42;
              v40 = v42[1];
              *(_OWORD *)v42 = *((_OWORD *)v42 - 1);
              *(v42 - 1) = v40;
              *(v42 - 2) = v39;
              v42 -= 2;
              ++v41;
            }
            while (v9 != v41);
            ++v9;
            v37 += 2;
          }
          while (v9 != v36);
          v9 = v36;
        }
      }
    }
    if (v9 < v13)
    {
LABEL_148:
      __break(1u);
LABEL_149:
      __break(1u);
LABEL_150:
      __break(1u);
LABEL_151:
      __break(1u);
LABEL_152:
      __break(1u);
LABEL_153:
      __break(1u);
LABEL_154:
      __break(1u);
LABEL_155:
      __break(1u);
LABEL_156:
      __break(1u);
LABEL_157:
      __break(1u);
LABEL_158:
      __break(1u);
LABEL_159:
      __break(1u);
LABEL_160:
      __break(1u);
LABEL_161:
      __break(1u);
      goto LABEL_162;
    }
    if ((swift_isUniquelyReferenced_nonNull_native(v11) & 1) == 0)
      v11 = sub_1006990C0(0, *((_QWORD *)v11 + 2) + 1, 1, v11);
    v47 = *((_QWORD *)v11 + 2);
    v46 = *((_QWORD *)v11 + 3);
    v12 = v47 + 1;
    if (v47 >= v46 >> 1)
      v11 = sub_1006990C0((char *)(v46 > 1), v47 + 1, 1, v11);
    *((_QWORD *)v11 + 2) = v12;
    v48 = v11 + 32;
    v49 = &v11[16 * v47 + 32];
    *(_QWORD *)v49 = v13;
    *((_QWORD *)v49 + 1) = v9;
    if (v47)
      break;
    v12 = 1;
LABEL_15:
    v3 = v112;
    if (v9 >= v112)
    {
      v8 = v110;
      goto LABEL_120;
    }
  }
  v113 = v9;
  while (1)
  {
    v50 = v12 - 1;
    if (v12 >= 4)
    {
      v55 = &v48[16 * v12];
      v56 = *((_QWORD *)v55 - 8);
      v57 = *((_QWORD *)v55 - 7);
      v61 = __OFSUB__(v57, v56);
      v58 = v57 - v56;
      if (v61)
        goto LABEL_137;
      v60 = *((_QWORD *)v55 - 6);
      v59 = *((_QWORD *)v55 - 5);
      v61 = __OFSUB__(v59, v60);
      v53 = v59 - v60;
      v54 = v61;
      if (v61)
        goto LABEL_138;
      v62 = v12 - 2;
      v63 = &v48[16 * v12 - 32];
      v65 = *(_QWORD *)v63;
      v64 = *((_QWORD *)v63 + 1);
      v61 = __OFSUB__(v64, v65);
      v66 = v64 - v65;
      if (v61)
        goto LABEL_140;
      v61 = __OFADD__(v53, v66);
      v67 = v53 + v66;
      if (v61)
        goto LABEL_143;
      if (v67 >= v58)
      {
        v85 = &v48[16 * v50];
        v87 = *(_QWORD *)v85;
        v86 = *((_QWORD *)v85 + 1);
        v61 = __OFSUB__(v86, v87);
        v88 = v86 - v87;
        if (v61)
          goto LABEL_147;
        v78 = v53 < v88;
        goto LABEL_105;
      }
    }
    else
    {
      if (v12 != 3)
      {
        v79 = *((_QWORD *)v11 + 4);
        v80 = *((_QWORD *)v11 + 5);
        v61 = __OFSUB__(v80, v79);
        v72 = v80 - v79;
        v73 = v61;
        goto LABEL_99;
      }
      v52 = *((_QWORD *)v11 + 4);
      v51 = *((_QWORD *)v11 + 5);
      v61 = __OFSUB__(v51, v52);
      v53 = v51 - v52;
      v54 = v61;
    }
    if ((v54 & 1) != 0)
      goto LABEL_139;
    v62 = v12 - 2;
    v68 = &v48[16 * v12 - 32];
    v70 = *(_QWORD *)v68;
    v69 = *((_QWORD *)v68 + 1);
    v71 = __OFSUB__(v69, v70);
    v72 = v69 - v70;
    v73 = v71;
    if (v71)
      goto LABEL_142;
    v74 = &v48[16 * v50];
    v76 = *(_QWORD *)v74;
    v75 = *((_QWORD *)v74 + 1);
    v61 = __OFSUB__(v75, v76);
    v77 = v75 - v76;
    if (v61)
      goto LABEL_145;
    if (__OFADD__(v72, v77))
      goto LABEL_146;
    if (v72 + v77 >= v53)
    {
      v78 = v53 < v77;
LABEL_105:
      if (v78)
        v50 = v62;
      goto LABEL_107;
    }
LABEL_99:
    if ((v73 & 1) != 0)
      goto LABEL_141;
    v81 = &v48[16 * v50];
    v83 = *(_QWORD *)v81;
    v82 = *((_QWORD *)v81 + 1);
    v61 = __OFSUB__(v82, v83);
    v84 = v82 - v83;
    if (v61)
      goto LABEL_144;
    if (v84 < v72)
      goto LABEL_15;
LABEL_107:
    v89 = v50 - 1;
    if (v50 - 1 >= v12)
    {
      __break(1u);
LABEL_134:
      __break(1u);
LABEL_135:
      __break(1u);
LABEL_136:
      __break(1u);
LABEL_137:
      __break(1u);
LABEL_138:
      __break(1u);
LABEL_139:
      __break(1u);
LABEL_140:
      __break(1u);
LABEL_141:
      __break(1u);
LABEL_142:
      __break(1u);
LABEL_143:
      __break(1u);
LABEL_144:
      __break(1u);
LABEL_145:
      __break(1u);
LABEL_146:
      __break(1u);
LABEL_147:
      __break(1u);
      goto LABEL_148;
    }
    v90 = v10;
    if (!v10)
      goto LABEL_159;
    v91 = v11;
    v92 = &v48[16 * v89];
    v93 = *(_QWORD *)v92;
    v94 = v48;
    v95 = v50;
    v96 = &v48[16 * v50];
    v97 = *((_QWORD *)v96 + 1);
    v98 = v90;
    sub_100315724((char *)(v90 + 16 * *(_QWORD *)v92), (char *)(v90 + 16 * *(_QWORD *)v96), v90 + 16 * v97, __dst);
    if (v1)
      break;
    if (v97 < v93)
      goto LABEL_134;
    if (v95 > *((_QWORD *)v91 + 2))
      goto LABEL_135;
    *(_QWORD *)v92 = v93;
    *(_QWORD *)&v94[16 * v89 + 8] = v97;
    v99 = *((_QWORD *)v91 + 2);
    if (v95 >= v99)
      goto LABEL_136;
    v11 = v91;
    v12 = v99 - 1;
    memmove(v96, v96 + 16, 16 * (v99 - 1 - v95));
    v48 = v94;
    *((_QWORD *)v91 + 2) = v99 - 1;
    v10 = v98;
    v9 = v113;
    if (v99 <= 2)
      goto LABEL_15;
  }
  v100 = v91;
LABEL_116:
  v101 = v100;
LABEL_117:
  swift_bridgeObjectRelease(v101);
  v110[2] = 0;
  swift_bridgeObjectRelease(v110);
}

uint64_t sub_100315658(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;

  if (a3 != a2)
  {
    v4 = a3;
    v6 = result;
    v7 = *a4;
    v8 = *a4 + 16 * a3;
LABEL_5:
    v9 = (uint64_t *)(v7 + 16 * v4);
    result = *v9;
    v10 = v9[1];
    v11 = v6;
    v12 = (uint64_t *)v8;
    while (1)
    {
      v13 = *(v12 - 2);
      v14 = *(v12 - 1);
      v15 = result == v13 && v10 == v14;
      if (v15 || (result = _stringCompareWithSmolCheck(_:_:expecting:)(result, v10, v13, v14, 1), (result & 1) == 0))
      {
LABEL_4:
        ++v4;
        v8 += 16;
        if (v4 == a2)
          return result;
        goto LABEL_5;
      }
      if (!v7)
        break;
      result = *v12;
      v10 = v12[1];
      *(_OWORD *)v12 = *((_OWORD *)v12 - 1);
      *(v12 - 1) = v10;
      *(v12 - 2) = result;
      v12 -= 2;
      if (v4 == ++v11)
        goto LABEL_4;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_100315724(char *__src, char *a2, unint64_t a3, char *__dst)
{
  char *v4;
  char *v6;
  char *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  char *v18;
  char *v19;
  char *v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;
  uint64_t result;
  char *v29;
  char *v30;
  char *v31;

  v4 = __dst;
  v6 = a2;
  v7 = __src;
  v8 = a2 - __src;
  v9 = a2 - __src + 15;
  if (a2 - __src >= 0)
    v9 = a2 - __src;
  v10 = v9 >> 4;
  v11 = a3 - (_QWORD)a2;
  v12 = a3 - (_QWORD)a2 + 15;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v12 = a3 - (_QWORD)a2;
  v13 = v12 >> 4;
  v31 = __src;
  v30 = __dst;
  if (v10 >= v12 >> 4)
  {
    if (v11 >= -15)
    {
      if (__dst != a2 || &a2[16 * v13] <= __dst)
        memmove(__dst, a2, 16 * v13);
      v19 = &v4[16 * v13];
      v29 = v19;
      v31 = v6;
      if (v7 < v6 && v11 >= 16)
      {
        v20 = (char *)(a3 - 16);
        v21 = v6;
        while (1)
        {
          v22 = v20 + 16;
          v23 = *((_QWORD *)v19 - 2);
          v24 = *((_QWORD *)v19 - 1);
          v25 = *((_QWORD *)v21 - 2);
          v26 = *((_QWORD *)v21 - 1);
          v21 -= 16;
          v27 = v23 == v25 && v24 == v26;
          if (v27 || (_stringCompareWithSmolCheck(_:_:expecting:)(v23, v24, v25, v26, 1) & 1) == 0)
          {
            v29 = v19 - 16;
            if (v22 < v19 || v20 >= v19 || v22 != v19)
              *(_OWORD *)v20 = *((_OWORD *)v19 - 1);
            v21 = v6;
            v19 -= 16;
            if (v6 <= v7)
              goto LABEL_50;
          }
          else
          {
            if (v22 != v6 || v20 >= v6)
              *(_OWORD *)v20 = *(_OWORD *)v21;
            v31 = v21;
            if (v21 <= v7)
              goto LABEL_50;
          }
          v20 -= 16;
          v6 = v21;
          if (v19 <= v4)
            goto LABEL_50;
        }
      }
      goto LABEL_50;
    }
  }
  else if (v8 >= -15)
  {
    if (__dst != __src || &__src[16 * v10] <= __dst)
      memmove(__dst, __src, 16 * v10);
    v14 = &v4[16 * v10];
    v29 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 16)
    {
      do
      {
        v15 = *((_QWORD *)v6 + 1);
        v16 = *((_QWORD *)v4 + 1);
        v17 = *(_QWORD *)v6 == *(_QWORD *)v4 && v15 == v16;
        if (v17 || (_stringCompareWithSmolCheck(_:_:expecting:)(*(_QWORD *)v6, v15, *(_QWORD *)v4, v16, 1) & 1) == 0)
        {
          if (v7 != v4)
            *(_OWORD *)v7 = *(_OWORD *)v4;
          v4 += 16;
          v30 = v4;
          v18 = v6;
        }
        else
        {
          v18 = v6 + 16;
          if (v7 < v6 || v7 >= v18 || v7 != v6)
            *(_OWORD *)v7 = *(_OWORD *)v6;
        }
        v7 += 16;
        if (v4 >= v14)
          break;
        v6 = v18;
      }
      while ((unint64_t)v18 < a3);
      v31 = v7;
    }
LABEL_50:
    sub_1006991B8((void **)&v31, (const void **)&v30, &v29);
    return 1;
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
  __break(1u);
  return result;
}

uint64_t sub_1003159BC(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t);

  *(_QWORD *)(v2 + 16) = a1;
  v5 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v3 = (_QWORD *)swift_task_alloc(a2[1]);
  *(_QWORD *)(v2 + 24) = v3;
  *v3 = v2;
  v3[1] = sub_100315A24;
  return v5(v2 + 32);
}

uint64_t sub_100315A24()
{
  uint64_t *v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v4;

  v1 = *v0;
  v2 = *(_BYTE **)(*v0 + 16);
  v4 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 24));
  *v2 = *(_BYTE *)(v1 + 32);
  return (*(uint64_t (**)(void))(v4 + 8))();
}

void sub_100315A74(uint64_t a1, void (*a2)(id, _BYTE *))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  void *v12;
  id v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  _BYTE v17[48];

  v4 = a1 + 64;
  v5 = 1 << *(_BYTE *)(a1 + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(a1 + 64);
  v8 = (unint64_t)(v5 + 63) >> 6;
  swift_bridgeObjectRetain(a1);
  v9 = 0;
  while (1)
  {
    if (v7)
    {
      v10 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v11 = v10 | (v9 << 6);
      goto LABEL_5;
    }
    v14 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v14 >= v8)
      goto LABEL_23;
    v15 = *(_QWORD *)(v4 + 8 * v14);
    ++v9;
    if (!v15)
    {
      v9 = v14 + 1;
      if (v14 + 1 >= v8)
        goto LABEL_23;
      v15 = *(_QWORD *)(v4 + 8 * v9);
      if (!v15)
      {
        v9 = v14 + 2;
        if (v14 + 2 >= v8)
          goto LABEL_23;
        v15 = *(_QWORD *)(v4 + 8 * v9);
        if (!v15)
        {
          v9 = v14 + 3;
          if (v14 + 3 >= v8)
            goto LABEL_23;
          v15 = *(_QWORD *)(v4 + 8 * v9);
          if (!v15)
            break;
        }
      }
    }
LABEL_22:
    v7 = (v15 - 1) & v15;
    v11 = __clz(__rbit64(v15)) + (v9 << 6);
LABEL_5:
    v12 = *(void **)(*(_QWORD *)(a1 + 48) + 8 * v11);
    sub_100316B8C(*(_QWORD *)(a1 + 56) + 48 * v11, (uint64_t)v17);
    v13 = v12;
    sub_100316BC8((uint64_t)v17, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10004AD60);
    a2(v13, v17);

    sub_100316BC8((uint64_t)v17, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10004ADC0);
  }
  v16 = v14 + 4;
  if (v16 >= v8)
  {
LABEL_23:
    swift_release(a1);
    return;
  }
  v15 = *(_QWORD *)(v4 + 8 * v16);
  if (v15)
  {
    v9 = v16;
    goto LABEL_22;
  }
  while (1)
  {
    v9 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v9 >= v8)
      goto LABEL_23;
    v15 = *(_QWORD *)(v4 + 8 * v9);
    ++v16;
    if (v15)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
}

uint64_t sub_100315C20(uint64_t a1, void (*a2)(uint64_t, uint64_t, id))
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  uint64_t result;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;

  v20 = a1 + 64;
  v4 = 1 << *(_BYTE *)(a1 + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(a1 + 64);
  v7 = (unint64_t)(v4 + 63) >> 6;
  result = swift_bridgeObjectRetain(a1);
  v9 = 0;
  while (1)
  {
    if (v6)
    {
      v10 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v11 = v10 | (v9 << 6);
      goto LABEL_5;
    }
    v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v17 >= v7)
      return swift_release(a1);
    v18 = *(_QWORD *)(v20 + 8 * v17);
    ++v9;
    if (!v18)
    {
      v9 = v17 + 1;
      if (v17 + 1 >= v7)
        return swift_release(a1);
      v18 = *(_QWORD *)(v20 + 8 * v9);
      if (!v18)
      {
        v9 = v17 + 2;
        if (v17 + 2 >= v7)
          return swift_release(a1);
        v18 = *(_QWORD *)(v20 + 8 * v9);
        if (!v18)
        {
          v9 = v17 + 3;
          if (v17 + 3 >= v7)
            return swift_release(a1);
          v18 = *(_QWORD *)(v20 + 8 * v9);
          if (!v18)
            break;
        }
      }
    }
LABEL_22:
    v6 = (v18 - 1) & v18;
    v11 = __clz(__rbit64(v18)) + (v9 << 6);
LABEL_5:
    v12 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v11);
    v13 = *v12;
    v14 = v12[1];
    v15 = *(void **)(*(_QWORD *)(a1 + 56) + 8 * v11);
    swift_bridgeObjectRetain(v14);
    v16 = v15;
    a2(v13, v14, v16);

    result = swift_bridgeObjectRelease(v14);
  }
  v19 = v17 + 4;
  if (v19 >= v7)
    return swift_release(a1);
  v18 = *(_QWORD *)(v20 + 8 * v19);
  if (v18)
  {
    v9 = v19;
    goto LABEL_22;
  }
  while (1)
  {
    v9 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v9 >= v7)
      return swift_release(a1);
    v18 = *(_QWORD *)(v20 + 8 * v9);
    ++v19;
    if (v18)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_100315DD0()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_100315DF4()
{
  uint64_t v0;

  sub_10030D53C(v0);
}

uint64_t sub_100315E10(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = v1[7];
  v10 = v1[8];
  v11 = (_QWORD *)swift_task_alloc(dword_1009D9F3C);
  *(_QWORD *)(v2 + 16) = v11;
  *v11 = v2;
  v11[1] = sub_1001FC2C4;
  return sub_10030E270(a1, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_100315EB4()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  swift_release(*(_QWORD *)(v0 + 48));
  return swift_deallocObject(v0, 80, 7);
}

uint64_t sub_100315EF8()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_100315F1C(void *a1)
{
  uint64_t v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  void *v12;
  id v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  id v18;
  void *v19;
  uint64_t v20;
  id v21;
  void *v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  id v27;
  void *v28;
  id v29;
  unsigned int v30;
  uint64_t v31;
  id v32;
  void *v33;
  uint64_t v34;
  unint64_t v35;
  char v36;
  id v37;
  void *v38;
  uint64_t v39;
  unint64_t v40;
  char v41;
  void *v42;
  id v43;
  unsigned __int8 v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t inited;
  uint64_t v49;
  id v50;
  Class isa;
  id v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v57;
  char v58;
  id v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  uint64_t v67;
  id v68;
  char *v69;
  id v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  id v74;
  _OWORD v75[2];
  unint64_t v76;
  __int128 v77;
  uint64_t v78;
  uint64_t v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;

  v4 = sub_10004CFD4(&qword_1009D3150);
  __chkstk_darwin(v4);
  v6 = (char *)&v69 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Date(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v69 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    v74 = a1;
    v11 = objc_msgSend(v74, "storeID");
    if (!v11)
    {

      return;
    }
    v12 = v11;
    v69 = v6;
    v13 = objc_msgSend(v74, "purchaseResponseItems");
    if (v13)
    {
      v14 = v13;
      v15 = sub_100009E04(0, &qword_1009DA230, BLPurchaseResponseItem_ptr);
      v16 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v14, v15);

      if ((unint64_t)v16 >> 62)
      {
        if (v16 < 0)
          v20 = v16;
        else
          v20 = v16 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v16);
        v17 = _CocoaArrayWrapper.endIndex.getter(v20);
        swift_bridgeObjectRelease(v16);
        if (v17)
          goto LABEL_6;
      }
      else
      {
        v17 = *(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10);
        if (v17)
        {
LABEL_6:
          if ((v16 & 0xC000000000000001) != 0)
          {
            v18 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v16);
          }
          else
          {
            if (!*(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10))
            {
              __break(1u);
              goto LABEL_62;
            }
            v18 = *(id *)(v16 + 32);
          }
          v19 = v18;
          LODWORD(v70) = objc_msgSend(v18, "isPurchaseRedownload", swift_bridgeObjectRelease(v16).n128_f64[0]);

LABEL_17:
          v71 = 0x6F6F626F69647561;
          v21 = objc_msgSend(v74, "metadata");
          v72 = v8;
          v73 = v1;
          if (v21)
          {
            v22 = v21;
            v23 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v21, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

            *(_QWORD *)&v80 = 0x7473696C79616C70;
            *((_QWORD *)&v80 + 1) = 0xEA00000000006449;
            AnyHashable.init<A>(_:)(&v80, &type metadata for String, &protocol witness table for String);
            if (*(_QWORD *)(v23 + 16) && (v24 = sub_1000561E8((uint64_t)v75), (v25 & 1) != 0))
            {
              sub_10004CD0C(*(_QWORD *)(v23 + 56) + 32 * v24, (uint64_t)&v82);
            }
            else
            {
              v82 = 0u;
              v83 = 0u;
            }
            swift_bridgeObjectRelease(v23);
            sub_1000569AC((uint64_t)v75);
            if (*((_QWORD *)&v83 + 1))
            {
              sub_100010960((uint64_t)&v82, (uint64_t *)&unk_1009D04E0);
              v26 = 0xE90000000000006BLL;
              v27 = v74;
              goto LABEL_30;
            }
          }
          else
          {
            v82 = 0u;
            v83 = 0u;
          }
          sub_100010960((uint64_t)&v82, (uint64_t *)&unk_1009D04E0);
          v28 = (void *)objc_opt_self(BLUtilities);
          v29 = objc_msgSend(v74, "purchaseParameters");
          v30 = objc_msgSend(v28, "isAudioBookFromBuyParameters:", v29);

          v27 = v74;
          v31 = 1802465122;
          if (v30)
            v31 = 0x6F6F626F69647561;
          v71 = v31;
          if (v30)
            v26 = 0xE90000000000006BLL;
          else
            v26 = 0xE400000000000000;
LABEL_30:
          v32 = objc_msgSend(v27, "metadata");
          if (v32)
          {
            v33 = v32;
            v34 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v32, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

            *(_QWORD *)&v82 = 0x6449747369747261;
            *((_QWORD *)&v82 + 1) = 0xE800000000000000;
            AnyHashable.init<A>(_:)(&v82, &type metadata for String, &protocol witness table for String);
            if (*(_QWORD *)(v34 + 16) && (v35 = sub_1000561E8((uint64_t)v75), (v36 & 1) != 0))
            {
              sub_10004CD0C(*(_QWORD *)(v34 + 56) + 32 * v35, (uint64_t)&v82);
            }
            else
            {
              v82 = 0u;
              v83 = 0u;
            }
            swift_bridgeObjectRelease(v34);
            sub_1000569AC((uint64_t)v75);
          }
          else
          {
            v82 = 0u;
            v83 = 0u;
          }
          v37 = objc_msgSend(v74, "metadata");
          if (v37)
          {
            v38 = v37;
            v39 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v37, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

            strcpy((char *)&v80, "seriesAdamId");
            BYTE13(v80) = 0;
            HIWORD(v80) = -5120;
            AnyHashable.init<A>(_:)(&v80, &type metadata for String, &protocol witness table for String);
            if (*(_QWORD *)(v39 + 16) && (v40 = sub_1000561E8((uint64_t)v75), (v41 & 1) != 0))
            {
              sub_10004CD0C(*(_QWORD *)(v39 + 56) + 32 * v40, (uint64_t)&v80);
            }
            else
            {
              v80 = 0u;
              v81 = 0u;
            }
            swift_bridgeObjectRelease(v39);
            sub_1000569AC((uint64_t)v75);
          }
          else
          {
            v80 = 0u;
            v81 = 0u;
          }
          v42 = (void *)objc_opt_self(BLUtilities);
          v43 = objc_msgSend(v74, "purchaseParameters");
          v44 = objc_msgSend(v42, "isPreOrderFromBuyParameters:", v43);

          Date.init()(v45);
          if ((v70 & 1) != 0)
          {

            swift_bridgeObjectRelease(v26);
            v46 = v72;
LABEL_58:

            (*(void (**)(char *, uint64_t))(v46 + 8))(v10, v7);
            sub_100010960((uint64_t)&v80, (uint64_t *)&unk_1009D04E0);
            sub_100010960((uint64_t)&v82, (uint64_t *)&unk_1009D04E0);
            return;
          }
          v47 = sub_10004CFD4((uint64_t *)&unk_1009D30D0);
          inited = swift_initStackObject(v47, &v79);
          *(_OWORD *)(inited + 16) = xmmword_1007147F0;
          *(_QWORD *)(inited + 32) = 0x49746375646F7270;
          *(_QWORD *)(inited + 40) = 0xE900000000000064;
          v49 = sub_100009E04(0, (unint64_t *)&qword_1009DA820, NSNumber_ptr);
          *(_QWORD *)(inited + 48) = v12;
          *(_QWORD *)(inited + 72) = v49;
          *(_QWORD *)(inited + 80) = 1702125924;
          *(_QWORD *)(inited + 88) = 0xE400000000000000;
          v70 = v12;
          v50 = sub_10030DBB0();
          isa = Date._bridgeToObjectiveC()().super.isa;
          v52 = objc_msgSend(v50, "stringFromDate:", isa);

          v53 = static String._unconditionallyBridgeFromObjectiveC(_:)(v52);
          v55 = v54;

          *(_QWORD *)(inited + 96) = v53;
          *(_QWORD *)(inited + 104) = v55;
          *(_QWORD *)(inited + 120) = &type metadata for String;
          *(_QWORD *)(inited + 128) = 0x54746375646F7270;
          *(_QWORD *)(inited + 136) = 0xEB00000000657079;
          *(_QWORD *)(inited + 144) = v71;
          *(_QWORD *)(inited + 152) = v26;
          *(_QWORD *)(inited + 168) = &type metadata for String;
          *(_QWORD *)(inited + 176) = 0x64726F6572507369;
          *(_QWORD *)(inited + 184) = 0xEA00000000007265;
          *(_QWORD *)(inited + 216) = &type metadata for Bool;
          *(_BYTE *)(inited + 192) = v44;
          v17 = sub_10003FB0C(inited);
          sub_10000B5E4((uint64_t)&v82, (uint64_t)&v77, (uint64_t *)&unk_1009D04E0);
          if (v78)
          {
            sub_10004CFC4(&v77, v75);
            sub_10004CD0C((uint64_t)v75, (uint64_t)&v77);
            isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v17);
            v76 = v17;
            sub_1002C3A2C(&v77, 0x6449747369747261, 0xE800000000000000, isUniquelyReferenced_nonNull_native);
            v17 = v76;
            swift_bridgeObjectRelease(0x8000000000000000);
            _s5Books15CurrentPageViewVwxx_0(v75);
          }
          else
          {
            sub_100010960((uint64_t)&v77, (uint64_t *)&unk_1009D04E0);
          }
          sub_10000B5E4((uint64_t)&v80, (uint64_t)&v77, (uint64_t *)&unk_1009D04E0);
          v46 = v72;
          v57 = v73;
          if (v78)
          {
            sub_10004CFC4(&v77, v75);
            sub_10004CD0C((uint64_t)v75, (uint64_t)&v77);
            v58 = swift_isUniquelyReferenced_nonNull_native(v17);
            v76 = v17;
            sub_1002C3A2C(&v77, 0x6449736569726573, 0xE800000000000000, v58);
            v17 = v76;
            swift_bridgeObjectRelease(0x8000000000000000);
            _s5Books15CurrentPageViewVwxx_0(v75);
          }
          else
          {
            sub_100010960((uint64_t)&v77, (uint64_t *)&unk_1009D04E0);
          }
          v59 = *(id *)(v57 + OBJC_IVAR___BKEngagementManager_manager);
          v1 = Manager.donor(type:)(0x2D6E6F6973736573, 0xED0000726F6E6F64);

          if (!v1)
          {
LABEL_57:
            v68 = *(id *)(v57 + OBJC_IVAR___BKEngagementManager_eventController);
            dispatch thunk of EngagementEventController.submitEvent(_:_:)(0x736E617254707061, 0xEE006E6F69746361, v17);

            swift_bridgeObjectRelease(v17);
            goto LABEL_58;
          }
          v60 = type metadata accessor for SessionDonor(0);
          v61 = swift_dynamicCastClass(v1, v60);
          if (!v61)
          {
            swift_unknownObjectRelease(v1);
            goto LABEL_57;
          }
          v2 = (char *)v61;
          v62 = type metadata accessor for TaskPriority(0);
          v6 = v69;
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v62 - 8) + 56))(v69, 1, 1, v62);
          v63 = qword_1009CDEB8;
          swift_bridgeObjectRetain_n(v17, 2);
          swift_unknownObjectRetain(v1);
          if (v63 == -1)
          {
LABEL_55:
            v64 = qword_1009DAFB0;
            v65 = sub_10003E1A0(&qword_1009DA220, 255, (uint64_t (*)(uint64_t))type metadata accessor for PropertyValueActor.ActorType, (uint64_t)&unk_10071B984);
            v66 = (_QWORD *)swift_allocObject(&unk_1008FC510, 48, 7);
            v66[2] = v64;
            v66[3] = v65;
            v66[4] = v2;
            v66[5] = v17;
            swift_retain(v64);
            v67 = sub_10030C02C((uint64_t)v6, (uint64_t)&unk_1009DA228, (uint64_t)v66);
            objc_msgSend(v2, "propertyDidChange:propertyConfiguration:", v2, *(_QWORD *)&v2[OBJC_IVAR___BKSessionDonor_sessionConfiguration], swift_release(v67).n128_f64[0]);
            swift_unknownObjectRelease(v1);
            swift_bridgeObjectRelease(v17);
            v46 = v72;
            v57 = v73;
            goto LABEL_57;
          }
LABEL_62:
          swift_once(&qword_1009CDEB8, sub_100007FE0);
          goto LABEL_55;
        }
      }
      swift_bridgeObjectRelease(v16);
    }
    LODWORD(v70) = 0;
    goto LABEL_17;
  }
}

uint64_t sub_1003168F4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc(dword_1009DA1DC);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1001FC2C4;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_1009DA1D8 + dword_1009DA1D8))(a1, v4);
}

uint64_t sub_100316964(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc(dword_1009DA1F4);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1001FC2C4;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_1009DA1F0 + dword_1009DA1F0))(a1, v4);
}

uint64_t sub_1003169D4()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1003169F8(double a1)
{
  uint64_t v1;

  return sub_10030D2A8(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_100316A04(uint64_t a1)
{
  uint64_t v1;

  return sub_10030D58C(a1, *(void **)(v1 + 16), *(void (**)(double))(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40));
}

uint64_t sub_100316A14()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_100316A40(uint64_t a1, char a2)
{
  uint64_t *v2;

  return sub_10030D84C(a1, a2 & 1, v2[2], v2[3], v2[4], v2[5]);
}

uint64_t sub_100316A50()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100316A74()
{
  uint64_t v0;
  uint64_t (*v1)(double);

  v1 = *(uint64_t (**)(double))(v0 + 16);
  if (qword_1009CDE68 != -1)
    swift_once(&qword_1009CDE68, sub_10030C6F4);
  return v1(*(double *)&qword_1009D9ED0);
}

uint64_t sub_100316AC4()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_100316AF8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc(dword_1009DB3E4);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_10000AE34;
  return sub_10032D710(a1, v4, v5, v7, v6);
}

uint64_t sub_100316B70()
{
  return sub_100279D84((void (*)(_QWORD))&_swift_bridgeObjectRelease);
}

uint64_t sub_100316B7C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3;

  return sub_10030E044(a1, a2, a3, *(_QWORD **)(v3 + 16));
}

void sub_100316B84(uint64_t a1)
{
  sub_10030DB48(a1);
}

uint64_t sub_100316B8C(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t, uint64_t))(*(&type metadata for PropertyValue - 1) + 32))(a2, a1);
  return a2;
}

uint64_t sub_100316BC8(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(unsigned __int8 *)(a1 + 40));
  return a1;
}

uint64_t sub_100316C00(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;

  v6 = v2[2];
  v7 = v2[3];
  v8 = v2[4];
  v9 = v2[5];
  v11 = v2[6];
  v10 = v2[7];
  v12 = (_QWORD *)swift_task_alloc(dword_1009DA274);
  *(_QWORD *)(v3 + 16) = v12;
  *v12 = v3;
  v12[1] = sub_1001FC2C4;
  return sub_10030EBA0(a1, a2, v6, v7, v8, v9, v11, v10);
}

uint64_t sub_100316C94(uint64_t result, char a2)
{
  if ((a2 & 1) != 0)
    return swift_errorRelease(result);
  return result;
}

uint64_t sub_100316CA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;

  v1 = type metadata accessor for DateInterval(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v7 + 15) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return swift_deallocObject(v0, ((v8 + 15) & 0xFFFFFFFFFFFFFFF8) + 8, v5);
}

uint64_t sub_100316D60(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;

  v4 = *(_QWORD *)(type metadata accessor for DateInterval(0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = (*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v7 + 15) & 0xFFFFFFFFFFFFFFF8;
  v9 = *(_QWORD *)(v1 + 16);
  v10 = *(_QWORD *)(v1 + 24);
  v11 = v1 + v5;
  v12 = *(_QWORD *)(v1 + v6);
  v13 = *(_QWORD *)(v1 + v7);
  v14 = *(_QWORD *)(v1 + v8);
  v15 = *(_QWORD *)(v1 + ((v8 + 15) & 0xFFFFFFFFFFFFF8));
  v16 = (_QWORD *)swift_task_alloc(dword_1009DA28C);
  *(_QWORD *)(v2 + 16) = v16;
  *v16 = v2;
  v16[1] = sub_1001FC2C4;
  return sub_10030F2EC(a1, v9, v10, v11, v12, v13, v14, v15);
}

uint64_t sub_100316E3C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc(dword_1009EAE44);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_10000AE34;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_1009EAE40 + dword_1009EAE40))(a1, v4);
}

double sub_100316EAC(uint64_t a1)
{
  uint64_t v1;

  return sub_10030FB14(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(void **)(v1 + 40), *(void **)(v1 + 48));
}

uint64_t sub_100316EBC()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100316EE0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 32));
  swift_release(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

id sub_100316F14(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_10030FEE8(a1, a2, a3, *(_QWORD *)(v3 + 16), *(void **)(v3 + 24), *(_QWORD *)(v3 + 32), *(_QWORD *)(v3 + 40));
}

uint64_t sub_100316F20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v14;
  uint64_t v15;

  v1 = type metadata accessor for DateInterval(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v6 = (v5 + 15) & 0xFFFFFFFFFFFFFFF8;
  v7 = sub_10004CFD4(&qword_1009DA2A0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = (v9 + ((v6 + 15) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v9;
  v14 = v7;
  v15 = v3 | v9 | 7;
  v11 = (((*(_QWORD *)(v8 + 64) + v10 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  v12 = (v11 + 15) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release(*(_QWORD *)(v0 + v5));
  swift_release(*(_QWORD *)(v0 + v6));

  (*(void (**)(unint64_t, uint64_t))(v8 + 8))(v0 + v10, v14);
  swift_unknownObjectRelease(*(_QWORD *)(v0 + v11));

  return swift_deallocObject(v0, v12 + 8, v15);
}

void sub_10031704C()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;

  v1 = *(_QWORD *)(type metadata accessor for DateInterval(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  v4 = (v3 + 15) & 0xFFFFFFFFFFFFFFF8;
  v5 = (v4 + 15) & 0xFFFFFFFFFFFFFFF8;
  v6 = *(_QWORD *)(sub_10004CFD4(&qword_1009DA2A0) - 8);
  v7 = (*(unsigned __int8 *)(v6 + 80) + v5 + 8) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v8 = (*(_QWORD *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_100311558(v0 + v2, *(_QWORD *)(v0 + v3), *(char **)(v0 + v4), *(void **)(v0 + v5), v0 + v7, *(_QWORD *)(v0 + v8), *(void **)(v0 + ((v8 + 15) & 0xFFFFFFFFFFFFFFF8)), *(void **)(v0 + ((((v8 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_10031710C()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100317130()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = sub_10004CFD4(&qword_1009DA2A0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 40) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release(*(_QWORD *)(v0 + v6));
  return swift_deallocObject(v0, v6 + 8, v5);
}

uint64_t sub_1003171CC(int a1, int a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  unint64_t v8;

  v7 = *(_QWORD *)(sub_10004CFD4(&qword_1009DA2A0) - 8);
  v8 = (*(unsigned __int8 *)(v7 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  return sub_1003127E4(a1, a2, a3, *(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24), *(_QWORD *)(v3 + 32), v3 + v8, *(_QWORD *)(v3 + ((*(_QWORD *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_100317240@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;

  return sub_10030F6C8(a1, a2, *(void **)(v3 + 16), a3);
}

uint64_t sub_100317248()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_10031726C(void *a1, char a2)
{
  if ((a2 & 1) != 0)
    swift_errorRelease(a1);
  else

}

uint64_t sub_100317278()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));

  swift_errorRelease(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 49, 7);
}

uint64_t sub_1003172B4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_errorRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 33, 7);
}

uint64_t sub_1003172E0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 32, 7);
}

void sub_100317304()
{
  uint64_t v0;

  sub_100314BFC(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_10031730C()
{
  return sub_100279D84((void (*)(_QWORD))&_swift_unknownObjectRelease);
}

uint64_t sub_100317318(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_1009DA394);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1001FC2C4;
  return sub_100314D3C(a1, v4, v5, v6);
}

uint64_t sub_1003173DC@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_10071A3B0);
  v4 = swift_getKeyPath(&unk_10071A3D8);
  static Published.subscript.getter(a1, v1, KeyPath, v4);
  swift_release(KeyPath);
  return swift_release(v4);
}

uint64_t sub_100317440()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC5Books16HistoryViewModel__history;
  v2 = sub_10004CFD4(&qword_1009DA588);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_100317494()
{
  return type metadata accessor for HistoryViewModel(0);
}

uint64_t type metadata accessor for HistoryViewModel(uint64_t a1)
{
  uint64_t result;

  result = qword_1009DA4B0;
  if (!qword_1009DA4B0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for HistoryViewModel);
  return result;
}

void sub_1003174D8(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  sub_100317544(319);
  if (v3 <= 0x3F)
  {
    v4 = *(_QWORD *)(v2 - 8) + 64;
    swift_updateClassMetadata2(a1, 256, 1, &v4, a1 + 80);
  }
}

void sub_100317544(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1009DA4C0)
  {
    v2 = type metadata accessor for HistoryModel(255);
    v3 = type metadata accessor for Published(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1009DA4C0);
  }
}

uint64_t sub_100317598@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t result;

  v4 = type metadata accessor for HistoryViewModel(0);
  result = ObservableObject<>.objectWillChange.getter(v4, a1);
  *a2 = result;
  return result;
}

uint64_t sub_1003175D4@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_10071A3B0);
  v5 = swift_getKeyPath(&unk_10071A3D8);
  static Published.subscript.getter(a2, v3, KeyPath, v5);
  swift_release(KeyPath);
  return swift_release(v5);
}

uint64_t sub_100317640(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t KeyPath;
  uint64_t v12;
  uint64_t v14;

  v4 = type metadata accessor for HistoryModel(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v14 - v8;
  sub_100317728(a1, (uint64_t)&v14 - v8);
  v10 = *a2;
  KeyPath = swift_getKeyPath(&unk_10071A3B0);
  v12 = swift_getKeyPath(&unk_10071A3D8);
  sub_100317728((uint64_t)v9, (uint64_t)v6);
  swift_retain(v10);
  static Published.subscript.setter(v6, v10, KeyPath, v12);
  return sub_10031776C((uint64_t)v9);
}

uint64_t sub_100317728(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for HistoryModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10031776C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for HistoryModel(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1003177A8(uint64_t a1, char a2, uint64_t (*a3)(uint64_t, _QWORD))
{
  return a3(a1, a2 & 1);
}

uint64_t sub_1003177CC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[3];
  v2 = v0[5];
  swift_bridgeObjectRelease(v0[7]);
  swift_bridgeObjectRelease(v2);
  swift_bridgeObjectRelease(v1);
  swift_unknownObjectRelease(v0[8]);
  sub_1001FE9A0((uint64_t)(v0 + 10));
  return swift_deallocClassInstance(v0, 96, 7);
}

uint64_t type metadata accessor for SampleHeaderDataManager()
{
  return objc_opt_self(_TtC5Books23SampleHeaderDataManager);
}

uint64_t destroy for SampleHeaderDataModel(_QWORD *a1)
{
  swift_bridgeObjectRelease(a1[1]);
  swift_bridgeObjectRelease(a1[3]);
  return swift_bridgeObjectRelease(a1[5]);
}

_QWORD *initializeWithCopy for SampleHeaderDataModel(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRetain(v5);
  return a1;
}

_QWORD *assignWithCopy for SampleHeaderDataModel(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *a1 = *a2;
  v4 = a2[1];
  v5 = a1[1];
  a1[1] = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  a1[2] = a2[2];
  v6 = a2[3];
  v7 = a1[3];
  a1[3] = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  a1[4] = a2[4];
  v8 = a2[5];
  v9 = a1[5];
  a1[5] = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease(v9);
  return a1;
}

__n128 initializeWithTake for SampleHeaderDataModel(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

_QWORD *assignWithTake for SampleHeaderDataModel(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = a2[1];
  v5 = a1[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease(v5);
  v6 = a2[3];
  v7 = a1[3];
  a1[2] = a2[2];
  a1[3] = v6;
  swift_bridgeObjectRelease(v7);
  v8 = a2[5];
  v9 = a1[5];
  a1[4] = a2[4];
  a1[5] = v8;
  swift_bridgeObjectRelease(v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for SampleHeaderDataModel(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 48))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SampleHeaderDataModel(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for SampleHeaderDataModel()
{
  return &type metadata for SampleHeaderDataModel;
}

_QWORD *sub_100317A64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v5[11] = 0;
  swift_unknownObjectWeakInit(v5 + 10, 0);
  v10 = dispatch thunk of BookEntityType.assetID.getter(a4, a5);
  v12 = v11;
  v13 = dispatch thunk of BookEntityType.title.getter(a4, a5);
  v15 = v14;
  v16 = dispatch thunk of BookEntityType.author.getter(a4, a5);
  v5[2] = v10;
  v5[3] = v12;
  v5[4] = v13;
  v5[5] = v15;
  v5[6] = v16;
  v5[7] = v17;
  v5[8] = a2;
  v5[9] = a3;
  return v5;
}

_QWORD *sub_100317B0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;

  v10 = type metadata accessor for SampleHeaderDataManager();
  swift_allocObject(v10, 96, 7);
  return sub_100317A64(a1, a2, a3, a4, a5);
}

_QWORD *sub_100317B78(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  void *v16;
  id v17;
  uint64_t v18;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v18 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v18);
  }
  else
  {
    v7 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v7;
    *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 3);
    v8 = a2[6];
    *(_QWORD *)(a1 + 40) = a2[5];
    *(_QWORD *)(a1 + 48) = v8;
    v9 = a2[7];
    v10 = *(int *)(a3 + 44);
    v11 = a1 + v10;
    v12 = (uint64_t)a2 + v10;
    *(_QWORD *)(a1 + 56) = v9;
    v13 = type metadata accessor for BookThemeEntity(0);
    v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
    swift_bridgeObjectRetain(v7);
    swift_unknownObjectRetain(v8);
    swift_retain(v9);
    v14(v11, v12, v13);
    v15 = *(int *)(a3 + 48);
    v16 = *(void **)((char *)a2 + v15);
    *(_QWORD *)((char *)v4 + v15) = v16;
    v17 = v16;
  }
  return v4;
}

void sub_100317C6C(_QWORD *a1, uint64_t a2)
{
  char *v4;
  uint64_t v5;

  swift_bridgeObjectRelease(a1[1]);
  swift_unknownObjectRelease(a1[6]);
  swift_release(a1[7]);
  v4 = (char *)a1 + *(int *)(a2 + 44);
  v5 = type metadata accessor for BookThemeEntity(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);

}

uint64_t sub_100317CD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  void *v15;
  id v16;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v7;
  v8 = *(_QWORD *)(a2 + 56);
  v9 = *(int *)(a3 + 44);
  v10 = a1 + v9;
  v11 = a2 + v9;
  *(_QWORD *)(a1 + 56) = v8;
  v12 = type metadata accessor for BookThemeEntity(0);
  v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
  swift_bridgeObjectRetain(v6);
  swift_unknownObjectRetain(v7);
  swift_retain(v8);
  v13(v10, v11, v12);
  v14 = *(int *)(a3 + 48);
  v15 = *(void **)(a2 + v14);
  *(_QWORD *)(a1 + v14) = v15;
  v16 = v15;
  return a1;
}

uint64_t sub_100317DA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  void *v18;
  id v19;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = *(_QWORD *)(a2 + 8);
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  v8 = *(_QWORD *)(a2 + 48);
  v9 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a1 + 48) = v8;
  swift_unknownObjectRetain(v8);
  swift_unknownObjectRelease(v9);
  v10 = *(_QWORD *)(a1 + 56);
  v11 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 56) = v11;
  swift_retain(v11);
  swift_release(v10);
  v12 = *(int *)(a3 + 44);
  v13 = a1 + v12;
  v14 = a2 + v12;
  v15 = type metadata accessor for BookThemeEntity(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 24))(v13, v14, v15);
  v16 = *(int *)(a3 + 48);
  v17 = *(void **)(a2 + v16);
  v18 = *(void **)(a1 + v16);
  *(_QWORD *)(a1 + v16) = v17;
  v19 = v17;

  return a1;
}

uint64_t sub_100317E8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  v6 = *(int *)(a3 + 44);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = type metadata accessor for BookThemeEntity(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  *(_QWORD *)(a1 + *(int *)(a3 + 48)) = *(_QWORD *)(a2 + *(int *)(a3 + 48));
  return a1;
}

uint64_t sub_100317F24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;

  v6 = *(_QWORD *)(a2 + 8);
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease(v7);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_unknownObjectRelease(v8);
  v9 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_release(v9);
  v10 = *(int *)(a3 + 44);
  v11 = a1 + v10;
  v12 = a2 + v10;
  v13 = type metadata accessor for BookThemeEntity(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 40))(v11, v12, v13);
  v14 = *(int *)(a3 + 48);
  v15 = *(void **)(a1 + v14);
  *(_QWORD *)(a1 + v14) = *(_QWORD *)(a2 + v14);

  return a1;
}

uint64_t sub_100317FE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100317FF0);
}

uint64_t sub_100317FF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for BookThemeEntity(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 44), a2, v8);
  }
}

uint64_t sub_10031806C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100318078);
}

uint64_t sub_100318078(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for BookThemeEntity(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 44), a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for ThemePreviewWebView(uint64_t a1)
{
  uint64_t result;

  result = qword_1009DA6F8;
  if (!qword_1009DA6F8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ThemePreviewWebView);
  return result;
}

uint64_t sub_100318128(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[9];

  v4[0] = &unk_10071A4C8;
  v4[1] = &unk_10071A4E0;
  v4[2] = (char *)&value witness table for Builtin.Int64 + 64;
  v4[3] = (char *)&value witness table for Builtin.Int64 + 64;
  v4[4] = (char *)&value witness table for Builtin.Int64 + 64;
  v4[5] = &unk_10071A4F8;
  v4[6] = &unk_10071A510;
  result = type metadata accessor for BookThemeEntity(319);
  if (v3 <= 0x3F)
  {
    v4[7] = *(_QWORD *)(result - 8) + 64;
    v4[8] = (char *)&value witness table for Builtin.UnknownObject + 64;
    swift_initStructMetadata(a1, 256, 9, v4, a1 + 16);
    return 0;
  }
  return result;
}

id sub_1003181D8(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  char *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  NSString v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  NSString v20;
  uint64_t v22;

  v2 = v1;
  v4 = type metadata accessor for StylesheetProvider.Layout(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = objc_msgSend(a1, "scrollView", v6);
  objc_msgSend(v9, "be_configureForBooks");

  sub_1003183F0();
  v11 = v10;
  v12 = String._bridgeToObjectiveC()();

  objc_msgSend(a1, "setBe_textZoomFactor:", *(double *)(v2 + 24));
  v13 = *(_QWORD *)(v2 + 48);
  if (*(_QWORD *)(v2 + 56))
  {
    v14 = type metadata accessor for ThemePreviewWebView(0);
    StylesheetProvider.Layout.init(key:contentSize:useNewTextStyling:)(0x727020656D656874, 0xED00007765697665, objc_msgSend(*(id *)(v2 + *(int *)(v14 + 48)), "useNewTextStyling"), 320.0, 320.0);
    v15 = (void *)dispatch thunk of StylesheetProvider.generateStylesheetSet(layout:theme:)(v8, v2 + *(int *)(v14 + 44));
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  }
  else
  {
    v15 = 0;
  }
  v16 = (void *)objc_opt_self(BEWebViewFactory);
  v17 = v2 + *(int *)(type metadata accessor for ThemePreviewWebView(0) + 44);
  BookThemeEntity.fontFamily.getter();
  v19 = v18;
  v20 = String._bridgeToObjectiveC()();
  objc_msgSend(v16, "updateThemePreviewWebView:styleManager:stylesheetSet:fontFamily:", a1, v13, v15, v20, swift_bridgeObjectRelease(v19).n128_f64[0]);

  WKWebView.updateStyle(theme:)(v17);
  objc_msgSend(a1, "setBe_paginationMode:", *(_QWORD *)(v2 + 40));
  return objc_msgSend(a1, "setBe_gapBetweenPages:", 10.0);
}

uint64_t sub_1003183F0()
{
  uint64_t v0;
  Swift::String v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  Swift::String v5;
  void *v6;
  unsigned int v7;
  BOOL v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  Swift::String v12;
  unsigned int v13;
  BOOL v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  Swift::String v18;
  unsigned int v19;
  BOOL v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  Swift::String v24;
  unsigned int v25;
  BOOL v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  Swift::String v30;
  unsigned int v31;
  BOOL v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  Swift::String v36;
  unsigned int v37;
  BOOL v38;
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;
  Swift::String v42;
  void *v43;
  uint64_t v44;
  Swift::String v45;
  Swift::String v46;

  _StringGuts.grow(_:)(381);
  v1._countAndFlagsBits = 0xD0000000000000F1;
  v1._object = (void *)0x80000001007BEC80;
  String.append(_:)(v1);
  if (*(_BYTE *)(v0 + 16))
    v2 = 0x6C61636974726576;
  else
    v2 = 0x746E6F7A69726F68;
  if (*(_BYTE *)(v0 + 16))
    v3 = 0xEB000000006C722DLL;
  else
    v3 = 0xED000062742D6C61;
  v4 = v3;
  String.append(_:)(*(Swift::String *)&v2);
  swift_bridgeObjectRelease(v3);
  v5._countAndFlagsBits = 0xD000000000000041;
  v5._object = (void *)0x80000001007BED80;
  String.append(_:)(v5);
  v6 = *(void **)(v0 + *(int *)(type metadata accessor for ThemePreviewWebView(0) + 48));
  v7 = objc_msgSend(v6, "overrideFontFamily");
  v8 = v7 == 0;
  if (v7)
    v9 = 0xD00000000000001DLL;
  else
    v9 = 0;
  if (v8)
    v10 = 0xE000000000000000;
  else
    v10 = 0x80000001007BEEA0;
  v11 = v10;
  String.append(_:)(*(Swift::String *)&v9);
  swift_bridgeObjectRelease(v10);
  v12._countAndFlagsBits = 0x202020200ALL;
  v12._object = (void *)0xE500000000000000;
  String.append(_:)(v12);
  v13 = objc_msgSend(v6, "overrideFontWeight");
  v14 = v13 == 0;
  if (v13)
    v15 = 0xD00000000000001DLL;
  else
    v15 = 0;
  if (v14)
    v16 = 0xE000000000000000;
  else
    v16 = 0x80000001007BEE80;
  v17 = v16;
  String.append(_:)(*(Swift::String *)&v15);
  swift_bridgeObjectRelease(v16);
  v18._countAndFlagsBits = 0x202020200ALL;
  v18._object = (void *)0xE500000000000000;
  String.append(_:)(v18);
  v19 = objc_msgSend(v6, "overrideLineHeight");
  v20 = v19 == 0;
  if (v19)
    v21 = 0xD00000000000001DLL;
  else
    v21 = 0;
  if (v20)
    v22 = 0xE000000000000000;
  else
    v22 = 0x80000001007BEE60;
  v23 = v22;
  String.append(_:)(*(Swift::String *)&v21);
  swift_bridgeObjectRelease(v22);
  v24._countAndFlagsBits = 0x202020200ALL;
  v24._object = (void *)0xE500000000000000;
  String.append(_:)(v24);
  v25 = objc_msgSend(v6, "overrideLetterSpacing");
  v26 = v25 == 0;
  if (v25)
    v27 = 0xD000000000000020;
  else
    v27 = 0;
  if (v26)
    v28 = 0xE000000000000000;
  else
    v28 = 0x80000001007BEE30;
  v29 = v28;
  String.append(_:)(*(Swift::String *)&v27);
  swift_bridgeObjectRelease(v28);
  v30._countAndFlagsBits = 0x202020200ALL;
  v30._object = (void *)0xE500000000000000;
  String.append(_:)(v30);
  v31 = objc_msgSend(v6, "overrideWordSpacing");
  v32 = v31 == 0;
  if (v31)
    v33 = 0xD00000000000001ELL;
  else
    v33 = 0;
  if (v32)
    v34 = 0xE000000000000000;
  else
    v34 = 0x80000001007BEE10;
  v35 = v34;
  String.append(_:)(*(Swift::String *)&v33);
  swift_bridgeObjectRelease(v34);
  v36._countAndFlagsBits = 0x202020200ALL;
  v36._object = (void *)0xE500000000000000;
  String.append(_:)(v36);
  v37 = objc_msgSend(v6, "overrideTextAlign");
  v38 = v37 == 0;
  if (v37)
    v39 = 0xD00000000000001CLL;
  else
    v39 = 0;
  if (v38)
    v40 = 0xE000000000000000;
  else
    v40 = 0x80000001007BEDF0;
  v41 = v40;
  String.append(_:)(*(Swift::String *)&v39);
  swift_bridgeObjectRelease(v40);
  v42._countAndFlagsBits = 0x200A3E202020200ALL;
  v42._object = (void *)0xEE003E703C202020;
  String.append(_:)(v42);
  v44 = *(_QWORD *)v0;
  v43 = *(void **)(v0 + 8);
  swift_bridgeObjectRetain(v43);
  v45._countAndFlagsBits = v44;
  v45._object = v43;
  String.append(_:)(v45);
  swift_bridgeObjectRelease(v43);
  v46._countAndFlagsBits = 0xD000000000000014;
  v46._object = (void *)0x80000001007BEDD0;
  String.append(_:)(v46);
  return 0;
}

id sub_10031875C()
{
  return objc_msgSend((id)objc_opt_self(BEWebViewFactory), "viewConfiguredForThemePreview");
}

uint64_t sub_100318798(uint64_t a1, char a2, int a3, int a4, id a5)
{
  uint64_t v5;

  if ((a2 & 1) == 0)
    objc_msgSend(a5, "setBe_pageLength:", ceil((*(double *)&a1 + ((double)*(uint64_t *)(v5 + 32) + -1.0) * -10.0) / (double)*(uint64_t *)(v5 + 32)));
  return 0;
}

uint64_t sub_100318800(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_100318918(&qword_1009DA758, (uint64_t)&unk_10071A580);
  return static UIViewRepresentable._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_100318860(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_100318918(&qword_1009DA758, (uint64_t)&unk_10071A580);
  return static UIViewRepresentable._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

void sub_1003188C0(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100318918(&qword_1009DA758, (uint64_t)&unk_10071A580);
  UIViewRepresentable.body.getter(a1, v2);
  __break(1u);
}

uint64_t sub_1003188F4()
{
  return sub_100318918(&qword_1009DA750, (uint64_t)&unk_10071A530);
}

uint64_t sub_100318918(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for ThemePreviewWebView(255);
    result = swift_getWitnessTable(a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

_QWORD *sub_100318958(uint64_t a1)
{
  void *v1;
  uint64_t v2;
  os_log_type_t v3;
  void *v4;
  id v5;
  NSObject *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t ObjectType;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __n128 v24;
  uint64_t v25;
  id v26;
  char *v27;
  Class isa;
  id v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __objc2_prot *v36;

  v2 = a1;
  v3 = static os_log_type_t.default.getter(a1);
  if (qword_1009CE210 != -1)
    swift_once(&qword_1009CE210, sub_10038B1F8);
  v4 = (void *)qword_1009DE420;
  if (os_log_type_enabled((os_log_t)qword_1009DE420, v3))
  {
    v5 = v1;
    v6 = v4;
    v7 = swift_slowAlloc(22, -1);
    v8 = swift_slowAlloc(64, -1);
    v35 = v8;
    *(_DWORD *)v7 = 136315394;
    ObjectType = swift_getObjectType();
    v10 = _typeName(_:qualified:)(ObjectType, 0);
    v12 = v11;
    v34 = sub_100040F58(v10, v11, &v35);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v34, &v35, v7 + 4, v7 + 12);

    swift_bridgeObjectRelease(v12);
    *(_WORD *)(v7 + 12) = 2080;
    v34 = sub_100040F58(0xD00000000000001DLL, 0x80000001007BF4A0, &v35);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v34, &v35, v7 + 14, v7 + 22);
    _os_log_impl((void *)&_mh_execute_header, v6, v3, "%s %s", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy(v8, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v8, -1, -1);
    swift_slowDealloc(v7, -1, -1);

  }
  if ((unint64_t)v2 >> 62)
  {
    if (v2 < 0)
      v32 = v2;
    else
      v32 = v2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v2);
    v33 = _CocoaArrayWrapper.endIndex.getter(v32);
    swift_bridgeObjectRelease(v2);
    if (v33)
      goto LABEL_7;
    return _swiftEmptyArrayStorage;
  }
  if (!*(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10))
    return _swiftEmptyArrayStorage;
LABEL_7:
  v13 = sub_10004CFD4((uint64_t *)&unk_1009D4750);
  v14 = swift_allocObject(v13, 40, 7);
  *(_OWORD *)(v14 + 16) = xmmword_1007118F0;
  if ((unint64_t)v2 >> 62)
  {
    if (v2 < 0)
      v22 = v2;
    else
      v22 = v2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v2);
    v23 = sub_10004CFD4(&qword_1009DA828);
    v25 = _bridgeCocoaArray<A>(_:)(v22, v23, v24);
    swift_bridgeObjectRelease(v2);
    v2 = v25;
  }
  else
  {
    v15 = v2 & 0xFFFFFFFFFFFFFF8;
    v16 = swift_bridgeObjectRetain(v2);
    v17 = dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v16);
    v18 = sub_10004CFD4(&qword_1009DA828);
    if (!swift_dynamicCastMetatype(v17, v18))
    {
      v19 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v19)
      {
        v20 = (uint64_t *)(v15 + 32);
        while (1)
        {
          v21 = *v20;
          v36 = &OBJC_PROTOCOL___CPListTemplateItem;
          if (!swift_dynamicCastObjCProtocolConditional(v21, 1, &v36))
            break;
          ++v20;
          if (!--v19)
            goto LABEL_18;
        }
        v2 = v15 | 1;
      }
    }
  }
LABEL_18:
  v26 = objc_allocWithZone((Class)CPListSection);
  v27 = sub_100480184(v2);
  swift_bridgeObjectRelease(v2);
  isa = Array._bridgeToObjectiveC()().super.isa;
  v29 = objc_msgSend(v26, "initWithItems:", isa, swift_bridgeObjectRelease(v27).n128_f64[0]);

  *(_QWORD *)(v14 + 32) = v29;
  v35 = v14;
  specialized Array._endMutation()(v30);
  return (_QWORD *)v35;
}

id sub_100318CB4(uint64_t a1)
{
  unint64_t v2;
  void *v3;
  id v4;
  NSObject *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t ObjectType;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  char *v20;
  char *v21;
  BOOL v22;
  BOOL v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  UIImage *v27;
  double v28;
  double v29;
  float v30;
  id v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  UIImage *v39;
  NSString v40;
  NSString v41;
  UIImage *v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  id v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  id v52;
  __n128 v53;
  _QWORD *v54;
  id v55;
  char *v56;
  NSArray v57;
  id v58;
  __n128 v59;
  uint64_t v60;
  id v61;
  char *v62;
  id v63;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  __n128 v68;
  uint64_t v69;
  uint64_t v70;
  __n128 v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  id v77;
  void *v78;
  uint64_t aBlock[5];
  uint64_t v80;
  unint64_t v81;
  uint64_t v82;

  LOBYTE(v2) = static os_log_type_t.default.getter(a1);
  if (qword_1009CE210 != -1)
    goto LABEL_45;
  while (1)
  {
    v3 = (void *)qword_1009DE420;
    if (os_log_type_enabled((os_log_t)qword_1009DE420, (os_log_type_t)v2))
    {
      v4 = v78;
      v5 = v3;
      v6 = swift_slowAlloc(22, -1);
      v7 = swift_slowAlloc(64, -1);
      aBlock[0] = v7;
      *(_DWORD *)v6 = 136315394;
      ObjectType = swift_getObjectType();
      v9 = _typeName(_:qualified:)(ObjectType, 0);
      v11 = v10;
      v81 = sub_100040F58(v9, v10, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v81, &v82, v6 + 4, v6 + 12);

      swift_bridgeObjectRelease(v11);
      *(_WORD *)(v6 + 12) = 2080;
      v81 = sub_100040F58(0xD000000000000022, 0x80000001007BF470, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v81, &v82, v6 + 14, v6 + 22);
      _os_log_impl((void *)&_mh_execute_header, v5, (os_log_type_t)v2, "%s %s", (uint8_t *)v6, 0x16u);
      swift_arrayDestroy(v7, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v7, -1, -1);
      swift_slowDealloc(v6, -1, -1);

    }
    v12 = (uint64_t)_swiftEmptyArrayStorage;
    v81 = (unint64_t)_swiftEmptyArrayStorage;
    v13 = OBJC_IVAR____TtC5Books20CarPlayAudiobookData_chapters;
    aBlock[0] = *(_QWORD *)(a1 + OBJC_IVAR____TtC5Books20CarPlayAudiobookData_chapters);
    v14 = sub_10004CFD4(&qword_1009DA830);
    v15 = sub_10031F3D0();
    v16 = Collection.isNotEmpty.getter(v14, v15);
    if ((v16 & 1) == 0)
    {
      v51 = static os_log_type_t.error.getter(v16);
      v52 = (id)qword_1009DE420;
      os_log(_:dso:log:_:_:)(v51, &_mh_execute_header, v52, "toc has no chapters!", 20, 2, _swiftEmptyArrayStorage);

      if ((unint64_t)_swiftEmptyArrayStorage >> 62)
        goto LABEL_52;
      v53 = swift_bridgeObjectRetain(_swiftEmptyArrayStorage);
      dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v53);
      v54 = _swiftEmptyArrayStorage;
LABEL_38:
      swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
      v55 = objc_allocWithZone((Class)CPListSection);
      v56 = sub_100480184((uint64_t)v54);
      swift_bridgeObjectRelease(v54);
      v57.super.isa = Array._bridgeToObjectiveC()().super.isa;
      v58 = objc_msgSend(v55, "initWithItems:", v57.super.isa, swift_bridgeObjectRelease(v56).n128_f64[0]);
      goto LABEL_42;
    }
    v12 = *(_QWORD *)(a1 + v13);
    if (!((unint64_t)v12 >> 62))
    {
      v17 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
      goto LABEL_7;
    }
    if (v12 < 0)
      v65 = *(_QWORD *)(a1 + v13);
    else
      v65 = v12 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(*(_QWORD *)(a1 + v13));
    v17 = _CocoaArrayWrapper.endIndex.getter(v65);
    swift_bridgeObjectRelease(v12);
    if ((v17 & 0x8000000000000000) != 0)
    {
LABEL_50:
      _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Negative value is not representable", 35, 2, "Swift/Integers.swift", 20, 2, 3451, 0);
      __break(1u);
LABEL_51:
      __break(1u);
LABEL_52:
      if (v12 < 0)
        v66 = v12;
      else
        v66 = v12 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v12);
      v67 = sub_10004CFD4(&qword_1009DA828);
      v54 = (_QWORD *)_bridgeCocoaArray<A>(_:)(v66, v67, v68);
      swift_bridgeObjectRelease(v12);
      goto LABEL_38;
    }
LABEL_7:
    v18 = OBJC_IVAR____TtC5Books20CarPlayAudiobookData_firstChapterIndex;
    v12 = *(_QWORD *)(a1 + OBJC_IVAR____TtC5Books20CarPlayAudiobookData_firstChapterIndex);
    v19 = (unint64_t)objc_msgSend((id)objc_opt_self(CPListTemplate), "maximumItemCount");
    if ((v19 & 0x8000000000000000) != 0)
      goto LABEL_50;
    v20 = (char *)(v12 + v19);
    if (__CFADD__(v12, v19))
      goto LABEL_51;
    if ((unint64_t)v20 >= v17)
      v20 = (char *)v17;
    v21 = v20 - 1;
    if (!v20)
    {
      __break(1u);
LABEL_57:
      __break(1u);
      goto LABEL_58;
    }
    v2 = *(_QWORD *)(a1 + v18);
    if ((unint64_t)v21 < v2)
      goto LABEL_57;
    v77 = (id)objc_opt_self(NSString);
    if ((v2 & 0x8000000000000000) == 0)
      break;
LABEL_43:
    __break(1u);
LABEL_44:
    __break(1u);
LABEL_45:
    swift_once(&qword_1009CE210, sub_10038B1F8);
  }
  v73 = OBJC_IVAR____TtC5Books20CarPlayAudiobookData_sessionStartIndex;
  v22 = v2 == *(_QWORD *)(a1 + OBJC_IVAR____TtC5Books20CarPlayAudiobookData_sessionStartIndex);
  v72 = OBJC_IVAR____TtC5Books20CarPlayAudiobookData_currentIndex;
  v23 = v2 == *(_QWORD *)(a1 + OBJC_IVAR____TtC5Books20CarPlayAudiobookData_currentIndex);
  v75 = OBJC_IVAR____TtC5Books20CarPlayAudiobookData_playbackRate;
  v74 = v13;
  v76 = v21;
  while (1)
  {
    v24 = *(_QWORD *)(a1 + v13);
    if ((v24 & 0xC000000000000001) != 0)
    {
      swift_bridgeObjectRetain(*(_QWORD *)(a1 + v13));
      v25 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(v2, v24);
      swift_bridgeObjectRelease(v24);
      if (v22)
        goto LABEL_18;
    }
    else
    {
      if (v2 >= *(_QWORD *)((v24 & 0xFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_44;
      v25 = *(void **)(v24 + 8 * v2 + 32);
      v26 = swift_unknownObjectRetain(v25);
      if (v22)
      {
LABEL_18:
        v27 = sub_10031B228(v26);
        goto LABEL_21;
      }
    }
    v27 = 0;
LABEL_21:
    objc_msgSend(v25, "duration");
    v29 = v28;
    v30 = *(float *)(a1 + v75);
    v31 = objc_msgSend(v25, "title");
    if (v31)
    {
      v32 = v31;
      static String._unconditionallyBridgeFromObjectiveC(_:)(v31);
      v34 = v33;

    }
    else
    {
      v34 = 0;
    }
    v35 = objc_msgSend(v77, "stringWithDuration:", v29 / v30);
    if (v35)
    {
      v36 = v35;
      static String._unconditionallyBridgeFromObjectiveC(_:)(v35);
      v38 = v37;

      if (v34)
        goto LABEL_26;
    }
    else
    {
      v38 = 0;
      if (v34)
      {
LABEL_26:
        v39 = v27;
        v40 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease(v34);
        if (v38)
          goto LABEL_27;
        goto LABEL_30;
      }
    }
    v42 = v27;
    v40 = 0;
    if (v38)
    {
LABEL_27:
      v41 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v38);
      goto LABEL_31;
    }
LABEL_30:
    v41 = 0;
LABEL_31:
    v43 = objc_msgSend(objc_allocWithZone((Class)CPListItem), "initWithText:detailText:image:accessoryImage:accessoryType:", v40, v41, 0, v27, 0);

    objc_msgSend(v43, "setPlaying:", v23);
    objc_msgSend(v43, "setPlayingIndicatorLocation:", 1);
    v44 = swift_allocObject(&unk_1008FCC08, 24, 7);
    swift_unknownObjectWeakInit(v44 + 16);
    v45 = swift_allocObject(&unk_1008FCE10, 32, 7);
    *(_QWORD *)(v45 + 16) = v44;
    *(_QWORD *)(v45 + 24) = v2;
    aBlock[4] = (uint64_t)sub_10031F440;
    v80 = v45;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_100319618;
    aBlock[3] = (uint64_t)&unk_1008FCE28;
    v46 = _Block_copy(aBlock);
    objc_msgSend(v43, "setHandler:", v46, swift_release(v80).n128_f64[0]);
    _Block_release(v46);
    v47 = v43;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v47);
    v49 = *(_QWORD *)((v81 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v48 = *(_QWORD *)((v81 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v49 >= v48 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v48 > 1, v49 + 1, 1);
    v50 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v49, v47);
    specialized Array._endMutation()(v50);
    swift_unknownObjectRelease(v25);

    if (v76 == (char *)v2)
      break;
    v23 = ++v2 == *(_QWORD *)(a1 + v72);
    v13 = v74;
    v22 = v2 == *(_QWORD *)(a1 + v73);
    if ((v2 & 0x8000000000000000) != 0)
      goto LABEL_43;
  }
  v18 = v81;
  if (!(v81 >> 62))
  {
    v59 = swift_bridgeObjectRetain(v81);
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v59);
    v60 = v18;
    goto LABEL_41;
  }
LABEL_58:
  if (v18 < 0)
    v69 = v18;
  else
    v69 = v18 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v18);
  v70 = sub_10004CFD4(&qword_1009DA828);
  v60 = _bridgeCocoaArray<A>(_:)(v69, v70, v71);
  swift_bridgeObjectRelease(v18);
LABEL_41:
  swift_bridgeObjectRelease(v18);
  v61 = objc_allocWithZone((Class)CPListSection);
  v62 = sub_100480184(v60);
  swift_bridgeObjectRelease(v60);
  v57.super.isa = Array._bridgeToObjectiveC()().super.isa;
  v58 = objc_msgSend(v61, "initWithItems:", v57.super.isa, swift_bridgeObjectRelease(v62).n128_f64[0]);
LABEL_42:
  v63 = v58;

  return v63;
}

void sub_1003194E8(uint64_t a1, void (*a2)(__n128), uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t Strong;
  char *v9;
  uint64_t v10;
  __n128 v11;
  void *v12;
  uint64_t v13;
  id v14;
  _BYTE v15[24];

  v7 = a4 + 16;
  swift_beginAccess(a4 + 16, v15, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v7);
  if (Strong)
  {
    v9 = (char *)Strong;
    objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(Strong + OBJC_IVAR____TtC5Books16CarPlayPresenter_interactor)+ OBJC_IVAR____TtC5Books17CarPlayInteractor_dataManager)+ OBJC_IVAR____TtC5Books18CarPlayDataManager_player), "playChapterAtIndex:", a5);
    v10 = swift_unknownObjectWeakLoadStrong(&v9[OBJC_IVAR____TtC5Books16CarPlayPresenter_delegate]);
    if (v10)
    {
      v12 = (void *)v10;
      sub_100009E04(0, (unint64_t *)&qword_1009CEC30, OS_dispatch_queue_ptr);
      v13 = swift_allocObject(&unk_1008FCE60, 24, 7);
      *(_QWORD *)(v13 + 16) = v12;
      v14 = v12;
      static OS_dispatch_queue.dispatchAsyncOnMainIfNeeded(block:)(sub_10031F448, v13);
      swift_unknownObjectRelease(v14);
      v11 = swift_release(v13);
    }
    a2(v11);

  }
}

uint64_t sub_100319618(uint64_t a1, uint64_t a2, void *aBlock)
{
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t (*)(), uint64_t);
  void *v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *(void (**)(uint64_t, uint64_t (*)(), uint64_t))(a1 + 32);
  v4 = *(_QWORD *)(a1 + 40);
  v6 = _Block_copy(aBlock);
  v7 = swift_allocObject(&unk_1008FCC80, 24, 7);
  *(_QWORD *)(v7 + 16) = v6;
  swift_retain(v4);
  v8 = swift_unknownObjectRetain(a2);
  v5(v8, sub_10004DE24, v7);
  swift_release(v4);
  swift_release(v7);
  return swift_unknownObjectRelease(a2);
}

id sub_1003196A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  void *v4;
  char *v5;
  NSObject *v6;
  uint64_t v7;
  void **v8;
  uint64_t ObjectType;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  void *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t Strong;
  double v22;
  uint64_t v23;
  double v24;
  double v25;
  double v26;
  double v27;
  id v28;
  id v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  NSString v39;
  Class isa;
  id v41;
  uint64_t v42;
  _QWORD *v43;
  void *v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  _QWORD *v49;
  uint64_t v51;
  char *v54;
  void **aBlock;
  uint64_t v56;
  void *v57;
  void *v58;
  void *v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;

  v51 = a1;
  LOBYTE(v3) = static os_log_type_t.default.getter(a1);
  if (qword_1009CE210 != -1)
LABEL_29:
    swift_once(&qword_1009CE210, sub_10038B1F8);
  v4 = (void *)qword_1009DE420;
  if (os_log_type_enabled((os_log_t)qword_1009DE420, (os_log_type_t)v3))
  {
    v5 = v54;
    v6 = v4;
    v7 = swift_slowAlloc(22, -1);
    v8 = (void **)swift_slowAlloc(64, -1);
    aBlock = v8;
    *(_DWORD *)v7 = 136315394;
    ObjectType = swift_getObjectType();
    v10 = _typeName(_:qualified:)(ObjectType, 0);
    v12 = v11;
    v61 = sub_100040F58(v10, v11, (uint64_t *)&aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v61, &v62, v7 + 4, v7 + 12);

    swift_bridgeObjectRelease(v12);
    *(_WORD *)(v7 + 12) = 2080;
    v61 = sub_100040F58(0xD00000000000001ALL, 0x80000001007BF400, (uint64_t *)&aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v61, &v62, v7 + 14, v7 + 22);
    _os_log_impl((void *)&_mh_execute_header, v6, (os_log_type_t)v3, "%s %s", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy(v8, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v8, -1, -1);
    swift_slowDealloc(v7, -1, -1);

  }
  v61 = (uint64_t)_swiftEmptyArrayStorage;
  v3 = a3;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0)
      v35 = a3;
    else
      v35 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v13 = _CocoaArrayWrapper.endIndex.getter(v35);
    if (v13)
      goto LABEL_6;
  }
  else
  {
    v13 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(a3);
    if (v13)
    {
LABEL_6:
      v14 = (void *)objc_opt_self(CPListImageRowItem);
      v15 = &v54[OBJC_IVAR____TtC5Books16CarPlayPresenter_delegate];
      v16 = (uint64_t)_swiftEmptyArrayStorage;
      v17 = 4;
      while (1)
      {
        v18 = v17 - 4;
        if ((a3 & 0xC000000000000001) != 0)
        {
          v19 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(v17 - 4, v3);
          v20 = v17 - 3;
          if (__OFADD__(v18, 1))
            goto LABEL_28;
        }
        else
        {
          v19 = *(void **)(v3 + 8 * v17);
          swift_unknownObjectRetain(v19);
          v20 = v17 - 3;
          if (__OFADD__(v18, 1))
          {
LABEL_28:
            __break(1u);
            goto LABEL_29;
          }
        }
        Strong = swift_unknownObjectWeakLoadStrong(v15);
        if (Strong)
        {
          v23 = Strong;
          v24 = sub_10047FDB4();
          *(_QWORD *)&v22 = swift_unknownObjectRelease(v23).n128_u64[0];
        }
        else
        {
          v24 = 1.0;
        }
        objc_msgSend(v14, "maximumImageSize", v22, v51);
        v26 = v24 * v25;
        objc_msgSend(v14, "maximumImageSize");
        v28 = sub_10031ADE8(v19, v26, v24 * v27);
        if (v28)
        {
          v29 = v28;
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v29);
          v31 = *(_QWORD *)((v61 & 0xFFFFFFFFFFFFFF8) + 0x10);
          v30 = *(_QWORD *)((v61 & 0xFFFFFFFFFFFFFF8) + 0x18);
          if (v31 >= v30 >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v30 > 1, v31 + 1, 1);
          v32 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v31, v29);
          specialized Array._endMutation()(v32);

          v16 = v61;
          v3 = a3;
        }
        if ((unint64_t)v16 >> 62)
        {
          if (v16 < 0)
            v34 = v16;
          else
            v34 = v16 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain(v16);
          v33 = _CocoaArrayWrapper.endIndex.getter(v34);
          swift_bridgeObjectRelease(v16);
        }
        else
        {
          v33 = *(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10);
        }
        swift_unknownObjectRelease(v19);
        if (v33 != 8)
        {
          ++v17;
          if (v20 != v13)
            continue;
        }
        break;
      }
    }
  }
  swift_bridgeObjectRelease(v3);
  v36 = v61;
  v37 = v3;
  v38 = objc_allocWithZone((Class)CPListImageRowItem);
  swift_bridgeObjectRetain(a2);
  v39 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a2);
  sub_100009E04(0, (unint64_t *)&qword_1009DA818, UIImage_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  v41 = objc_msgSend(v38, "initWithText:images:", v39, isa, swift_bridgeObjectRelease(v36).n128_f64[0]);

  v42 = swift_allocObject(&unk_1008FCC08, 24, 7);
  swift_unknownObjectWeakInit(v42 + 16);
  v43 = (_QWORD *)swift_allocObject(&unk_1008FCCF8, 48, 7);
  v43[2] = v42;
  v43[3] = v37;
  v43[4] = v51;
  v43[5] = a2;
  v59 = sub_10031F340;
  v60 = v43;
  aBlock = _NSConcreteStackBlock;
  v56 = 1107296256;
  v57 = sub_100319618;
  v58 = &unk_1008FCD10;
  v44 = _Block_copy(&aBlock);
  v45 = v60;
  swift_bridgeObjectRetain(v37);
  swift_bridgeObjectRetain(a2);
  objc_msgSend(v41, "setHandler:", v44, swift_release(v45).n128_f64[0]);
  _Block_release(v44);
  v46 = swift_allocObject(&unk_1008FCC08, 24, 7);
  swift_unknownObjectWeakInit(v46 + 16);
  v47 = swift_allocObject(&unk_1008FCD48, 32, 7);
  *(_QWORD *)(v47 + 16) = v46;
  *(_QWORD *)(v47 + 24) = v37;
  v59 = sub_10031F390;
  v60 = (_QWORD *)v47;
  aBlock = _NSConcreteStackBlock;
  v56 = 1107296256;
  v57 = sub_100319E00;
  v58 = &unk_1008FCD60;
  v48 = _Block_copy(&aBlock);
  v49 = v60;
  swift_bridgeObjectRetain(v37);
  objc_msgSend(v41, "setListImageRowHandler:", v48, swift_release(v49).n128_f64[0]);
  _Block_release(v48);
  return v41;
}

uint64_t sub_100319C64(uint64_t a1, uint64_t (*a2)(void), uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t Strong;
  void *v9;
  _BYTE v11[24];

  v7 = a4 + 16;
  swift_beginAccess(a4 + 16, v11, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v7);
  if (Strong)
  {
    v9 = (void *)Strong;
    sub_10031EA00(a5);

  }
  return a2();
}

void sub_100319CD8(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10;
  uint64_t Strong;
  char *v12;
  void *v13;
  uint64_t v14;
  _QWORD *v15;
  char *v16;
  char v17[24];

  v10 = a5 + 16;
  swift_beginAccess(a5 + 16, v17, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v10);
  if (Strong)
  {
    v12 = (char *)Strong;
    if ((a6 & 0xC000000000000001) == 0)
    {
      if ((a2 & 0x8000000000000000) != 0)
      {
        __break(1u);
      }
      else if (*(_QWORD *)((a6 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
      {
        v13 = *(void **)(a6 + 8 * a2 + 32);
        swift_unknownObjectRetain(v13);
LABEL_6:
        v14 = *(_QWORD *)&v12[OBJC_IVAR____TtC5Books16CarPlayPresenter_interactor];
        v15 = (_QWORD *)swift_allocObject(&unk_1008FCDC0, 40, 7);
        v15[2] = v12;
        v15[3] = a3;
        v15[4] = a4;
        swift_unknownObjectRetain(v14);
        v16 = v12;
        swift_retain(a4);
        sub_1002D4588(v13, (void (*)(id))sub_10031F300, (uint64_t)v15);
        swift_unknownObjectRelease(v13);

        swift_unknownObjectRelease(v14);
        swift_release(v15);
        return;
      }
      __break(1u);
      return;
    }
    v13 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(a2, a6);
    goto LABEL_6;
  }
}

void sub_100319E00(uint64_t a1, void *a2, int a3, void *aBlock)
{
  uint64_t v5;
  void (*v6)(void);
  void *v7;
  uint64_t v8;
  id v9;

  v6 = *(void (**)(void))(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  v7 = _Block_copy(aBlock);
  v8 = swift_allocObject(&unk_1008FCD98, 24, 7);
  *(_QWORD *)(v8 + 16) = v7;
  swift_retain(v5);
  v9 = a2;
  v6();
  swift_release(v5);
  swift_release(v8);

}

id sub_100319EA0(void *a1, char a2, void *a3)
{
  char *v3;
  char *v4;
  os_log_type_t v7;
  void *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t ObjectType;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t Strong;
  uint64_t v17;
  double v18;
  void *v19;
  double v20;
  double v21;
  double v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  NSString v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  id v32;
  NSString v33;
  id v34;
  id v35;
  void *v36;
  float v37;
  float v38;
  double v39;
  unsigned __int8 v40;
  double v41;
  float v42;
  id v43;
  void *v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  NSObject *log;
  uint64_t v53;
  uint64_t aBlock[5];
  uint64_t v55;

  v4 = v3;
  v7 = static os_log_type_t.default.getter(a1);
  if (qword_1009CE210 != -1)
    swift_once(&qword_1009CE210, sub_10038B1F8);
  v8 = (void *)qword_1009DE420;
  if (os_log_type_enabled((os_log_t)qword_1009DE420, v7))
  {
    v9 = v4;
    log = v8;
    v10 = swift_slowAlloc(22, -1);
    v11 = swift_slowAlloc(64, -1);
    aBlock[0] = v11;
    *(_DWORD *)v10 = 136315394;
    ObjectType = swift_getObjectType();
    v13 = _typeName(_:qualified:)(ObjectType, 0);
    v15 = v14;
    v53 = sub_100040F58(v13, v14, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v53, aBlock, v10 + 4, v10 + 12);

    swift_bridgeObjectRelease(v15);
    *(_WORD *)(v10 + 12) = 2080;
    v53 = sub_100040F58(0xD00000000000002DLL, 0x80000001007BF280, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v53, aBlock, v10 + 14, v10 + 22);
    _os_log_impl((void *)&_mh_execute_header, log, v7, "%s %s", (uint8_t *)v10, 0x16u);
    swift_arrayDestroy(v11, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v11, -1, -1);
    swift_slowDealloc(v10, -1, -1);

  }
  Strong = swift_unknownObjectWeakLoadStrong(&v4[OBJC_IVAR____TtC5Books16CarPlayPresenter_delegate]);
  if (Strong)
  {
    v17 = Strong;
    v18 = sub_10047FDB4();
    swift_unknownObjectRelease(v17);
  }
  else
  {
    v18 = 1.0;
  }
  v19 = (void *)objc_opt_self(CPListItem);
  objc_msgSend(v19, "maximumImageSize");
  v21 = v18 * v20;
  objc_msgSend(v19, "maximumImageSize");
  v23 = sub_10031ADE8(a1, v21, v18 * v22);
  sub_10031E054(a1, a2 & 1, a3);
  v25 = v24;
  if (objc_msgSend(a1, "isLocal"))
    v26 = 0;
  else
    v26 = 2;
  v27 = objc_msgSend(a1, "title");
  v28 = v27;
  if (v27)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(v27);
    v30 = v29;

    v31 = v23;
    v28 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v30);
  }
  else
  {
    v31 = v23;
  }
  v32 = objc_allocWithZone((Class)CPListItem);
  v33 = String._bridgeToObjectiveC()();
  v34 = objc_msgSend(v32, "initWithText:detailText:image:accessoryImage:accessoryType:", v28, v33, v31, 0, v26, swift_bridgeObjectRelease(v25).n128_f64[0]);

  objc_msgSend(v34, "setUserInfo:", a1);
  v35 = objc_msgSend(a1, "readingProgress");
  if (v35)
  {
    v36 = v35;
    objc_msgSend(v35, "floatValue");
    v38 = v37;

    v39 = v38;
  }
  else
  {
    v39 = 0.0;
  }
  if (fabs(v39) >= 0.00999999978)
  {
    v40 = objc_msgSend(a1, "isFinished");
    v41 = 1.0;
    if ((v40 & 1) == 0)
    {
      objc_msgSend(a3, "floatValue", 1.0);
      v41 = v42;
    }
    objc_msgSend(v34, "setPlaybackProgress:", v41);
  }
  v43 = objc_msgSend(a1, "isExplicit");
  if (v43)
  {
    v44 = v43;
    v45 = objc_msgSend(v43, "BOOLValue");

  }
  else
  {
    v45 = 0;
  }
  objc_msgSend(v34, "setExplicitContent:", v45);
  v46 = swift_allocObject(&unk_1008FCC08, 24, 7);
  swift_unknownObjectWeakInit(v46 + 16);
  v47 = swift_allocObject(&unk_1008FCC30, 32, 7);
  *(_QWORD *)(v47 + 16) = v46;
  *(_QWORD *)(v47 + 24) = a1;
  aBlock[4] = (uint64_t)sub_10031F2D0;
  v55 = v47;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_100319618;
  aBlock[3] = (uint64_t)&unk_1008FCC48;
  v48 = _Block_copy(aBlock);
  v49 = v55;
  swift_unknownObjectRetain(a1);
  objc_msgSend(v34, "setHandler:", v48, swift_release(v49).n128_f64[0]);
  _Block_release(v48);

  return v34;
}

double sub_10031A39C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v8;
  uint64_t Strong;
  double result;
  void *v11;
  uint64_t v12;
  _QWORD *v13;
  id v14;
  _BYTE v15[24];

  v8 = a4 + 16;
  swift_beginAccess(a4 + 16, v15, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v8);
  if (Strong)
  {
    v11 = (void *)Strong;
    v12 = *(_QWORD *)(Strong + OBJC_IVAR____TtC5Books16CarPlayPresenter_interactor);
    v13 = (_QWORD *)swift_allocObject(&unk_1008FCCA8, 40, 7);
    v13[2] = v11;
    v13[3] = a2;
    v13[4] = a3;
    swift_unknownObjectRetain(v12);
    v14 = v11;
    swift_retain(a3);
    sub_1002D4588(a5, (void (*)(id))sub_10031F300, (uint64_t)v13);

    swift_unknownObjectRelease(v12);
    *(_QWORD *)&result = swift_release(v13).n128_u64[0];
  }
  return result;
}

void sub_10031A470(uint64_t a1, void (*a2)(double), uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  double v17;
  uint64_t v18;
  char *v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t ObjCClassFromMetadata;
  id v24;
  uint64_t v25;
  void (*v26)(char *, char *, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t);
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  unint64_t v37;
  char v38;
  id v39;
  uint64_t v40;
  void (*v41)(char *, char *, uint64_t);
  uint64_t v42;
  char *v43;
  char *v44;
  id v45;
  uint64_t v46;
  id v47;
  const char *v48;
  void (*v49)(char *, uint64_t);
  void (*v50)(char *, uint64_t);
  uint64_t v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  id v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  id v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  void *v64;
  uint64_t v65;
  uint64_t v66;
  id v67;
  char *v68;
  NSString v69;
  void *v70;
  id v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  id v78;
  id v79;
  Class isa;
  Class v81;
  id v82;
  uint64_t Strong;
  uint64_t v84;
  uint64_t v85;
  id v86;
  void (*v87)(char *, uint64_t);
  void (*v88)(char *, uint64_t);
  void (*v89)(char *, char *, uint64_t);
  char *v90;
  char *v91;
  void (*v92)(double);
  uint64_t v93;
  uint64_t v94;
  void (*v95)(char *, char *, uint64_t);
  id v96;
  uint64_t v97;
  uint64_t v98;
  void *v99;
  id v100;
  uint64_t v101;
  _QWORD aBlock[5];
  _QWORD *v103;

  v98 = type metadata accessor for Locale(0);
  v6 = *(_QWORD *)(v98 - 8);
  __chkstk_darwin(v98);
  v8 = (char *)&v87 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v87 - v10;
  v12 = type metadata accessor for String.LocalizationValue(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v87 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __chkstk_darwin(v16);
  v19 = (char *)&v87 - v18;
  if (a1)
  {
    v92 = a2;
    v93 = a3;
    v20 = (void *)_convertErrorToNSError(_:)(a1);
    v21 = String.LocalizationValue.init(stringLiteral:)(0x1000000000000019, 0x80000001007BF000);
    static Locale.current.getter(v21);
    v89 = *(void (**)(char *, char *, uint64_t))(v13 + 16);
    v89(v15, v19, v12);
    v22 = type metadata accessor for BundleFinder();
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v22);
    v96 = (id)objc_opt_self(NSBundle);
    v97 = ObjCClassFromMetadata;
    v24 = objc_msgSend(v96, "bundleForClass:", ObjCClassFromMetadata);
    v25 = v6;
    v26 = *(void (**)(char *, char *, uint64_t))(v6 + 16);
    v27 = v98;
    v95 = v26;
    v26(v8, v11, v98);
    v90 = v15;
    v91 = v8;
    v94 = String.init(localized:table:bundle:locale:comment:)(v15, 0, 0, v24, v8, "Couldn't play audiobook alert title", 35, 2);
    v101 = v28;
    v88 = *(void (**)(char *, uint64_t))(v25 + 8);
    v88(v11, v27);
    v29 = v12;
    v30 = v12;
    v31 = *(void (**)(char *, uint64_t))(v13 + 8);
    v31(v19, v30);
    v100 = v20;
    v32 = objc_msgSend(v20, "domain");
    v33 = static String._unconditionallyBridgeFromObjectiveC(_:)(v32);
    v35 = v34;

    v36 = v11;
    v87 = v31;
    if (v33 == 0xD00000000000001ELL && v35 == 0x80000001007BCC60)
    {
      v37 = swift_bridgeObjectRelease(0x80000001007BCC60).n128_u64[0];
    }
    else
    {
      v38 = _stringCompareWithSmolCheck(_:_:expecting:)(v33, v35, 0xD00000000000001ELL, 0x80000001007BCC60, 0);
      v37 = swift_bridgeObjectRelease(v35).n128_u64[0];
      if ((v38 & 1) == 0)
      {
        v40 = v29;
        v44 = v90;
        v43 = v91;
        v41 = v89;
        v42 = v97;
        goto LABEL_14;
      }
    }
    v39 = objc_msgSend(v100, "code", *(double *)&v37, v87);
    v40 = v29;
    v41 = v89;
    v42 = v97;
    if (v39 == (id)2)
    {
      swift_bridgeObjectRelease(v101);
      v51 = String.LocalizationValue.init(stringLiteral:)(0x1000000000000039, 0x80000001007BF0A0);
      static Locale.current.getter(v51);
      v44 = v90;
      v41(v90, v19, v40);
      v52 = objc_msgSend(v96, "bundleForClass:", v42);
      v43 = v91;
      v95(v91, v11, v27);
      v53 = String.init(localized:table:bundle:locale:comment:)(v44, 0, 0, v52, v43, "Message for unauthorized audiobook", 34, 2);
LABEL_19:
      v94 = v53;
      v101 = v54;
      v58 = v11;
      v49 = v88;
      v88(v58, v27);
      v50 = v87;
      v87(v19, v40);
      v42 = v97;
LABEL_20:
      v59 = String.LocalizationValue.init(stringLiteral:)(19279, 0xE200000000000000);
      static Locale.current.getter(v59);
      v41(v44, v19, v40);
      v60 = objc_msgSend(v96, "bundleForClass:", v42);
      v95(v43, v36, v27);
      String.init(localized:table:bundle:locale:comment:)(v44, 0, 0, v60, v43, "Couldn't play audiobook alert OK button", 39, 2);
      v62 = v61;
      v49(v36, v27);
      v50(v19, v40);
      v63 = (_QWORD *)swift_allocObject(&unk_1008FCB68, 40, 7);
      v64 = v99;
      v66 = (uint64_t)v92;
      v65 = v93;
      v63[2] = v99;
      v63[3] = v66;
      v63[4] = v65;
      v67 = objc_allocWithZone((Class)CPAlertAction);
      v68 = v64;
      sub_10002ACF0(v66, v65);
      v69 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v62);
      aBlock[4] = sub_10031F260;
      v103 = v63;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_10031E050;
      aBlock[3] = &unk_1008FCB80;
      v70 = _Block_copy(aBlock);
      v71 = objc_msgSend(v67, "initWithTitle:style:handler:", v69, 0, v70);

      _Block_release(v70);
      swift_release(v103);
      v72 = sub_10004CFD4((uint64_t *)&unk_1009D8830);
      v73 = swift_allocObject(v72, 48, 7);
      *(_OWORD *)(v73 + 16) = xmmword_10070CCA0;
      v74 = v101;
      *(_QWORD *)(v73 + 32) = v94;
      *(_QWORD *)(v73 + 40) = v74;
      v75 = sub_10004CFD4((uint64_t *)&unk_1009D4750);
      v76 = swift_allocObject(v75, 40, 7);
      *(_OWORD *)(v76 + 16) = xmmword_1007118F0;
      *(_QWORD *)(v76 + 32) = v71;
      aBlock[0] = v76;
      specialized Array._endMutation()(v76);
      v77 = aBlock[0];
      v78 = objc_allocWithZone((Class)CPAlertTemplate);
      v79 = v71;
      isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease(v73);
      sub_100009E04(0, &qword_1009DA800, CPAlertAction_ptr);
      v81 = Array._bridgeToObjectiveC()().super.isa;
      v82 = objc_msgSend(v78, "initWithTitleVariants:actions:", isa, v81, swift_bridgeObjectRelease(v77).n128_f64[0]);

      Strong = swift_unknownObjectWeakLoadStrong(&v68[OBJC_IVAR____TtC5Books16CarPlayPresenter_delegate]);
      if (Strong)
      {
        v84 = Strong;
        sub_100009E04(0, (unint64_t *)&qword_1009CEC30, OS_dispatch_queue_ptr);
        v85 = swift_allocObject(&unk_1008FCBB8, 32, 7);
        *(_QWORD *)(v85 + 16) = v84;
        *(_QWORD *)(v85 + 24) = v82;
        swift_unknownObjectRetain(v84);
        v86 = v82;
        static OS_dispatch_queue.dispatchAsyncOnMainIfNeeded(block:)(sub_10031F26C, v85);

        swift_unknownObjectRelease(v84);
        swift_release(v85);
      }
      else
      {

      }
      return;
    }
    v44 = v90;
    v43 = v91;
    if (v39 == (id)1)
    {
      swift_bridgeObjectRelease(v101);
      v45 = objc_msgSend((id)objc_opt_self(BCDevice), "deviceClass");
      if (v45 == (id)3)
      {
        v55 = String.LocalizationValue.init(stringLiteral:)(0xD00000000000002ALL, 0x80000001007BF180);
        static Locale.current.getter(v55);
        v41(v44, v19, v40);
        v56 = objc_msgSend(v96, "bundleForClass:", v42);
        v95(v43, v11, v27);
        v53 = String.init(localized:table:bundle:locale:comment:)(v44, 0, 0, v56, v43, "Check internet connection on iPad alert message", 47, 2);
      }
      else
      {
        if (v45 == (id)1)
        {
          v46 = String.LocalizationValue.init(stringLiteral:)(0xD00000000000002CLL, 0x80000001007BF1E0);
          static Locale.current.getter(v46);
          v41(v44, v19, v40);
          v47 = objc_msgSend(v96, "bundleForClass:", v42);
          v95(v43, v11, v27);
          v48 = "Check internet connection on iPhone alert message";
        }
        else
        {
          v57 = String.LocalizationValue.init(stringLiteral:)(0xD00000000000002CLL, 0x80000001007BF110);
          static Locale.current.getter(v57);
          v41(v44, v19, v40);
          v47 = objc_msgSend(v96, "bundleForClass:", v42);
          v95(v43, v11, v27);
          v48 = "Check internet connection on device alert message";
        }
        v53 = String.init(localized:table:bundle:locale:comment:)(v44, 0, 0, v47, v43, v48, 49, 2);
      }
      goto LABEL_19;
    }
LABEL_14:
    v49 = v88;
    v50 = v87;
    goto LABEL_20;
  }
  if (a2)
    a2(v17);
}

void sub_10031AD30(uint64_t a1, uint64_t a2, void (*a3)(__n128))
{
  uint64_t Strong;
  __n128 v5;
  void *v6;
  uint64_t v7;
  id v8;

  Strong = swift_unknownObjectWeakLoadStrong(a2 + OBJC_IVAR____TtC5Books16CarPlayPresenter_delegate);
  if (Strong)
  {
    v6 = (void *)Strong;
    sub_100009E04(0, (unint64_t *)&qword_1009CEC30, OS_dispatch_queue_ptr);
    v7 = swift_allocObject(&unk_1008FCBE0, 24, 7);
    *(_QWORD *)(v7 + 16) = v6;
    v8 = v6;
    static OS_dispatch_queue.dispatchAsyncOnMainIfNeeded(block:)(sub_10031F298, v7);
    swift_unknownObjectRelease(v8);
    v5 = swift_release(v7);
  }
  if (a3)
    a3(v5);
}

id sub_10031ADE8(void *a1, double a2, double a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  char *v14;
  id v15;
  void *v16;
  dispatch_semaphore_t v17;
  uint64_t v18;
  id v19;
  void *v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  NSObject *v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  id *v32;
  id v33;
  id v34;
  uint64_t Strong;
  uint64_t v36;
  double v37;
  id v38;
  uint64_t v40;
  id *v41;
  id v42;
  uint64_t v43;
  _QWORD aBlock[5];
  uint64_t v45;

  v7 = type metadata accessor for DispatchTime(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __chkstk_darwin(v11);
  v14 = (char *)&v40 - v13;
  v15 = objc_msgSend(a1, "assetID", v12);
  if (!v15)
    return 0;
  v16 = v15;
  v17 = dispatch_semaphore_create(0);
  v18 = swift_allocObject(&unk_1008FCAF0, 24, 7);
  *(_QWORD *)(v18 + 16) = 0;
  v41 = (id *)(v18 + 16);
  v19 = objc_msgSend((id)objc_opt_self(BICDescribedImage), "describedImageWithIdentifier:size:processingOptions:", v16, 0, a2, a3);

  objc_msgSend(v19, "setPriority:", 6);
  objc_msgSend(v19, "setRequestOptions:", 2);
  v40 = v3;
  v20 = *(void **)(v3 + OBJC_IVAR____TtC5Books16CarPlayPresenter_coverCache);
  v21 = swift_allocObject(&unk_1008FCB18, 32, 7);
  *(_QWORD *)(v21 + 16) = v18;
  *(_QWORD *)(v21 + 24) = v17;
  aBlock[4] = sub_10031F254;
  v45 = v21;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1004D7C0C;
  aBlock[3] = &unk_1008FCB30;
  v22 = _Block_copy(aBlock);
  v23 = v8;
  v24 = v45;
  swift_unknownObjectRetain(v20);
  v43 = v18;
  swift_retain(v18);
  v25 = v17;
  swift_release(v24);
  v42 = v19;
  objc_msgSend(v20, "fetchCGImageFor:forRequest:timeOut:waitForNonGeneric:completion:", v19, v19, 1, v22, 4.0);
  _Block_release(v22);
  swift_unknownObjectRelease(v20);
  static DispatchTime.now()(v26);
  + infix(_:_:)(v10, 10.0);
  v27 = *(void (**)(char *, uint64_t))(v23 + 8);
  v27(v10, v7);
  v28 = OS_dispatch_semaphore.wait(timeout:)(v14) & 1;
  v27(v14, v7);
  v29 = static DispatchTimeoutResult.== infix(_:_:)(v28, 1);
  if ((v29 & 1) != 0)
  {
    v30 = static os_log_type_t.error.getter(v29);
    if (qword_1009CE210 != -1)
      swift_once(&qword_1009CE210, sub_10038B1F8);
    v31 = (id)qword_1009DE420;
    os_log(_:dso:log:_:_:)(v30, &_mh_execute_header, v31, "times out waiting for image", 27, 2, _swiftEmptyArrayStorage);

  }
  v32 = v41;
  swift_beginAccess(v41, aBlock, 0, 0);
  if (*v32)
  {
    v33 = *v32;
    v34 = objc_msgSend(v33, "CGImage");
    Strong = swift_unknownObjectWeakLoadStrong(v40 + OBJC_IVAR____TtC5Books16CarPlayPresenter_delegate);
    if (Strong)
    {
      v36 = Strong;
      v37 = sub_10047FDB4();
      swift_unknownObjectRelease(v36);
    }
    else
    {
      v37 = 1.0;
    }
    v38 = objc_msgSend(objc_allocWithZone((Class)UIImage), "initWithCGImage:scale:orientation:", v34, 0, v37);
    swift_release(v43);
    swift_unknownObjectRelease(v42);

  }
  else
  {
    swift_release(v43);
    swift_unknownObjectRelease(v42);

    return 0;
  }
  return v38;
}

Swift::Int sub_10031B1B4(void *a1, uint64_t a2)
{
  uint64_t v3;
  id v4;
  void *v5;
  _BYTE v7[24];

  if (a1)
  {
    v3 = a2 + 16;
    v4 = objc_msgSend(a1, "image");
    swift_beginAccess(v3, v7, 1, 0);
    v5 = *(void **)(a2 + 16);
    *(_QWORD *)(a2 + 16) = v4;

  }
  return OS_dispatch_semaphore.signal()();
}

UIImage *sub_10031B228(uint64_t a1)
{
  char *v1;
  os_log_type_t v2;
  void *v3;
  char *v4;
  NSObject *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t ObjectType;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  id v16;
  UIImage *v17;
  uint64_t Strong;
  uint64_t v19;
  void *v20;
  id v21;
  void *v22;
  void *v23;
  id v24;
  id v25;
  UIImage *v26;
  UIImage *v27;
  id v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  UIImage *v33;
  uint64_t v34;
  uint64_t v35;
  CGSize v36;
  CGSize v37;
  CGSize v38;

  v2 = static os_log_type_t.default.getter(a1);
  if (qword_1009CE210 != -1)
    swift_once(&qword_1009CE210, sub_10038B1F8);
  v3 = (void *)qword_1009DE420;
  if (os_log_type_enabled((os_log_t)qword_1009DE420, v2))
  {
    v4 = v1;
    v5 = v3;
    v6 = swift_slowAlloc(22, -1);
    v7 = swift_slowAlloc(64, -1);
    v35 = v7;
    *(_DWORD *)v6 = 136315394;
    ObjectType = swift_getObjectType();
    v9 = _typeName(_:qualified:)(ObjectType, 0);
    v11 = v10;
    v34 = sub_100040F58(v9, v10, &v35);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v34, &v35, v6 + 4, v6 + 12);

    swift_bridgeObjectRelease(v11);
    *(_WORD *)(v6 + 12) = 2080;
    v34 = sub_100040F58(0x6B72616D6B6F6F62, 0xEF29286567616D49, &v35);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v34, &v35, v6 + 14, v6 + 22);
    _os_log_impl((void *)&_mh_execute_header, v5, v2, "%s %s", (uint8_t *)v6, 0x16u);
    swift_arrayDestroy(v7, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v7, -1, -1);
    swift_slowDealloc(v6, -1, -1);

  }
  v12 = (void *)objc_opt_self(UIColor);
  v13 = objc_msgSend(v12, "labelColor");
  v36.width = 9.0;
  v36.height = 9.0;
  UIGraphicsBeginImageContextWithOptions(v36, 0, 0.0);
  objc_msgSend(v13, "set");
  v14 = objc_msgSend(objc_allocWithZone((Class)UIBezierPath), "init");
  objc_msgSend(v14, "addArcWithCenter:radius:startAngle:endAngle:clockwise:", 1, 4.5, 4.5, 3.0, 0.0, 6.28318531);
  objc_msgSend(v14, "closePath");
  objc_msgSend(v14, "fill");
  v33 = UIGraphicsGetImageFromCurrentImageContext();
  UIGraphicsEndImageContext();

  v15 = objc_msgSend(v12, "whiteColor");
  v37.width = 9.0;
  v37.height = 9.0;
  UIGraphicsBeginImageContextWithOptions(v37, 0, 0.0);
  objc_msgSend(v15, "set");
  v16 = objc_msgSend(objc_allocWithZone((Class)UIBezierPath), "init");
  objc_msgSend(v16, "addArcWithCenter:radius:startAngle:endAngle:clockwise:", 1, 4.5, 4.5, 3.0, 0.0, 6.28318531);
  objc_msgSend(v16, "closePath");
  objc_msgSend(v16, "fill");
  v17 = UIGraphicsGetImageFromCurrentImageContext();
  UIGraphicsEndImageContext();

  Strong = swift_unknownObjectWeakLoadStrong(&v1[OBJC_IVAR____TtC5Books16CarPlayPresenter_delegate]);
  if (!Strong)
    goto LABEL_14;
  v19 = Strong;
  v20 = *(void **)(Strong + OBJC_IVAR___BKCarPlayController_interfaceController);
  if (!v20)
  {
    swift_unknownObjectRelease(v19);
    goto LABEL_14;
  }
  v21 = objc_msgSend(v20, "carTraitCollection");
  swift_unknownObjectRelease(v19);
  if (!v21)
  {
LABEL_14:
    v28 = objc_msgSend(v12, "grayColor");
    v38.width = 9.0;
    v38.height = 9.0;
    UIGraphicsBeginImageContextWithOptions(v38, 0, 0.0);
    objc_msgSend(v28, "set");
    v29 = objc_msgSend(objc_allocWithZone((Class)UIBezierPath), "init");
    objc_msgSend(v29, "addArcWithCenter:radius:startAngle:endAngle:clockwise:", 1, 4.5, 4.5, 3.0, 0.0, 6.28318531);
    objc_msgSend(v29, "closePath");
    objc_msgSend(v29, "fill");
    v27 = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();

    v31 = static os_log_type_t.error.getter(v30);
    v25 = (id)qword_1009DE420;
    os_log(_:dso:log:_:_:)(v31, &_mh_execute_header, v25, "Cannot generate a correct _bookmarkImage because of a missing .carTraitCollection", 81, 2, _swiftEmptyArrayStorage);
    v26 = v33;
    goto LABEL_15;
  }
  v22 = (void *)UITraitCollection.modifyingTraits(_:)(sub_10031B770, 0);
  v23 = (void *)UITraitCollection.modifyingTraits(_:)(sub_10031B778, 0);
  v24 = objc_msgSend(objc_allocWithZone((Class)UIImageAsset), "init");
  v25 = v24;
  v26 = v33;
  if (v33)
    objc_msgSend(v24, "registerImage:withTraitCollection:", v33, v22);
  if (v17)
    objc_msgSend(v25, "registerImage:withTraitCollection:", v17, v23);
  v27 = (UIImage *)objc_msgSend(v25, "imageWithTraitCollection:", v21);

LABEL_15:
  return v27;
}

uint64_t sub_10031B770(uint64_t a1)
{
  return sub_10031B780(a1, 1);
}

uint64_t sub_10031B778(uint64_t a1)
{
  return sub_10031B780(a1, 2);
}

uint64_t sub_10031B780(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a1 + 24);
  v4 = *(_QWORD *)(a1 + 32);
  sub_100063750(a1, v3);
  return UIMutableTraits.userInterfaceStyle.setter(a2, v3, v4);
}

id sub_10031B7F4()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CarPlayPresenter();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for CarPlayPresenter()
{
  return objc_opt_self(_TtC5Books16CarPlayPresenter);
}

double sub_10031B88C(void *a1, char **a2)
{
  _UNKNOWN **v2;
  void *v3;
  id v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  void *v10;
  os_log_type_t v11;
  _UNKNOWN **v12;
  NSObject *v13;
  _UNKNOWN **v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t ObjectType;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  id v31;
  id v32;
  uint64_t v33;
  id v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  id v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  os_log_type_t v49;
  void *v50;
  id v51;
  NSObject *v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  unint64_t v58;
  id v59;
  void *v60;
  uint64_t v61;
  unint64_t v62;
  unint64_t v63;
  uint64_t v64;
  unint64_t v65;
  NSString v66;
  double result;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  NSObject *v71;
  void *v72;
  uint64_t v73;
  void *v74;
  os_log_t log;
  NSObject *loga;
  uint64_t *v77;
  id v78;
  id v79;
  _OWORD v80[2];
  uint64_t v81[4];

  v5 = objc_msgSend(a1, "sections");
  v6 = sub_100009E04(0, (unint64_t *)&unk_1009E5260, CPListSection_ptr);
  v7 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v5, v6);

  if (!((unint64_t)v7 >> 62))
  {
    if (*(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_3;
LABEL_47:
    *(_QWORD *)&result = swift_bridgeObjectRelease(v7).n128_u64[0];
    return result;
  }
LABEL_43:
  if (v7 < 0)
    v68 = v7;
  else
    v68 = v7 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v7);
  v69 = _CocoaArrayWrapper.endIndex.getter(v68);
  swift_bridgeObjectRelease(v7);
  if (!v69)
    goto LABEL_47;
LABEL_3:
  if ((v7 & 0xC000000000000001) != 0)
  {
    v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v7);
LABEL_6:
    v3 = v8;
    swift_bridgeObjectRelease(v7);
    LOBYTE(v7) = static os_log_type_t.default.getter(v9);
    if (qword_1009CE210 == -1)
      goto LABEL_7;
    goto LABEL_50;
  }
  if (*(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v8 = *(id *)(v7 + 32);
    goto LABEL_6;
  }
  __break(1u);
LABEL_50:
  swift_once(&qword_1009CE210, sub_10038B1F8);
LABEL_7:
  v10 = (void *)qword_1009DE420;
  v11 = v7;
  log = (os_log_t)a2;
  if (os_log_type_enabled((os_log_t)qword_1009DE420, (os_log_type_t)v7))
  {
    v12 = v2;
    v13 = v10;
    v14 = v2;
    v15 = swift_slowAlloc(22, -1);
    v16 = swift_slowAlloc(64, -1);
    v81[0] = v16;
    *(_DWORD *)v15 = 136315394;
    ObjectType = swift_getObjectType();
    v18 = _typeName(_:qualified:)(ObjectType, 0);
    v20 = v19;
    *(_QWORD *)&v80[0] = sub_100040F58(v18, v19, v81);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v80, (char *)v80 + 8, v15 + 4, v15 + 12);

    swift_bridgeObjectRelease(v20);
    *(_WORD *)(v15 + 12) = 2080;
    *(_QWORD *)&v80[0] = sub_100040F58(0xD000000000000022, 0x80000001007BF570, v81);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v80, (char *)v80 + 8, v15 + 14, v15 + 22);
    _os_log_impl((void *)&_mh_execute_header, v13, v11, "%s %s", (uint8_t *)v15, 0x16u);
    swift_arrayDestroy(v16, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v16, -1, -1);
    v2 = v14;
    swift_slowDealloc(v15, -1, -1);

  }
  v21 = objc_msgSend(v3, "items");
  v22 = sub_10004CFD4(&qword_1009DA828);
  v23 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v21, v22);

  if ((unint64_t)v23 >> 62)
  {
    if (v23 < 0)
      v70 = v23;
    else
      v70 = v23 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v23);
    v24 = _CocoaArrayWrapper.endIndex.getter(v70);
    swift_bridgeObjectRelease(v23);
    if (v24)
      goto LABEL_11;
LABEL_55:

LABEL_56:
    *(_QWORD *)&result = swift_bridgeObjectRelease(v23).n128_u64[0];
    return result;
  }
  v24 = *(_QWORD *)((v23 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v24)
    goto LABEL_55;
LABEL_11:
  v72 = v2;
  v74 = v3;
  v77 = (uint64_t *)((char *)a2 + OBJC_IVAR____TtC5Books20CarPlayListenNowData_assetID);
  v3 = (void *)(v23 & 0xC000000000000001);
  v25 = 4;
  v2 = BCMutableCloudSyncVersions_ptr;
  a2 = &selRef_toViewController;
  while (1)
  {
    v26 = v25 - 4;
    if (v3)
    {
      v7 = specialized _ArrayBuffer._getElementSlowPath(_:)(v25 - 4, v23);
      v27 = v25 - 3;
      if (__OFADD__(v26, 1))
        goto LABEL_42;
    }
    else
    {
      v7 = *(_QWORD *)(v23 + 8 * v25);
      swift_unknownObjectRetain(v7);
      v27 = v25 - 3;
      if (__OFADD__(v26, 1))
      {
LABEL_42:
        __break(1u);
        goto LABEL_43;
      }
    }
    v28 = objc_opt_self(v2[204]);
    v29 = swift_dynamicCastObjCClass(v7, v28);
    if (v29)
      break;
    swift_unknownObjectRelease(v7);
LABEL_13:
    ++v25;
    if (v27 == v24)
    {

      goto LABEL_56;
    }
  }
  v30 = (void *)v29;
  swift_unknownObjectRetain(v7);
  v31 = objc_msgSend(v30, a2[266]);
  if (v31)
  {
    v32 = v31;
    _bridgeAnyObjectToAny(_:)(v31);
    swift_unknownObjectRelease(v32);
  }
  else
  {
    memset(v80, 0, sizeof(v80));
  }
  sub_10004C7B4((uint64_t)v80, (uint64_t)v81);
  if (!v81[3])
  {
    swift_unknownObjectRelease_n(v7, 2);
    sub_10004A7B8((uint64_t)v81);
    goto LABEL_13;
  }
  v33 = sub_10004CFD4(&qword_1009DA850);
  if ((swift_dynamicCast(&v79, v81, (char *)&type metadata for Any + 8, v33, 6) & 1) == 0)
  {
    swift_unknownObjectRelease_n(v7, 2);
    goto LABEL_13;
  }
  v78 = v79;
  v34 = objc_msgSend(v79, "assetID");
  if (!v34)
    goto LABEL_30;
  v35 = v34;
  v36 = static String._unconditionallyBridgeFromObjectiveC(_:)(v34);
  v38 = v37;

  if (!v38)
    goto LABEL_30;
  v39 = v77[1];
  if (v36 == *v77 && v38 == v39)
  {
    swift_bridgeObjectRelease(v23);
    v41 = v38;
    goto LABEL_36;
  }
  v40 = _stringCompareWithSmolCheck(_:_:expecting:)(v36, v38, *v77, v39, 0);
  swift_bridgeObjectRelease(v38);
  if ((v40 & 1) == 0)
  {
LABEL_30:
    swift_unknownObjectRelease_n(v7, 2);
    swift_unknownObjectRelease(v78);
    v2 = BCMutableCloudSyncVersions_ptr;
    a2 = &selRef_toViewController;
    goto LABEL_13;
  }
  v41 = v23;
LABEL_36:
  swift_bridgeObjectRelease(v41);
  v42 = *(id *)((char *)&log->isa + OBJC_IVAR____TtC5Books20CarPlayListenNowData_updatedReadingProgress);
  v43 = v78;
  sub_10031E054(v78, 1, v42);
  v45 = v44;
  v47 = v46;

  v49 = static os_log_type_t.default.getter(v48);
  v50 = (void *)qword_1009DE420;
  if (os_log_type_enabled((os_log_t)qword_1009DE420, v49))
  {
    v51 = v72;
    swift_unknownObjectRetain_n(v7, 2);
    swift_bridgeObjectRetain_n(v47, 2);
    v52 = log;
    v53 = v51;
    v71 = v52;
    loga = v50;
    v54 = swift_slowAlloc(52, -1);
    v73 = swift_slowAlloc(160, -1);
    v81[0] = v73;
    *(_DWORD *)v54 = 136316162;
    v55 = swift_getObjectType();
    v56 = _typeName(_:qualified:)(v55, 0);
    v58 = v57;
    *(_QWORD *)&v80[0] = sub_100040F58(v56, v57, v81);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v80, (char *)v80 + 8, v54 + 4, v54 + 12);

    swift_bridgeObjectRelease(v58);
    *(_WORD *)(v54 + 12) = 2080;
    *(_QWORD *)&v80[0] = sub_100040F58(0xD000000000000022, 0x80000001007BF570, v81);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v80, (char *)v80 + 8, v54 + 14, v54 + 22);
    *(_WORD *)(v54 + 22) = 2080;
    v59 = objc_msgSend(v30, "detailText");
    if (v59)
    {
      v60 = v59;
      v61 = static String._unconditionallyBridgeFromObjectiveC(_:)(v59);
      v63 = v62;

    }
    else
    {
      v63 = 0xE500000000000000;
      v61 = 0x3E6C696E3CLL;
    }
    *(_QWORD *)&v80[0] = sub_100040F58(v61, v63, v81);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v80, (char *)v80 + 8, v54 + 24, v54 + 32);
    swift_unknownObjectRelease_n(v7, 2);
    swift_bridgeObjectRelease(v63);
    *(_WORD *)(v54 + 32) = 2080;
    swift_bridgeObjectRetain(v47);
    *(_QWORD *)&v80[0] = sub_100040F58(v45, v47, v81);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v80, (char *)v80 + 8, v54 + 34, v54 + 42);
    swift_bridgeObjectRelease_n(v47, 3);
    *(_WORD *)(v54 + 42) = 2080;
    v64 = *v77;
    v65 = v77[1];
    swift_bridgeObjectRetain(v65);
    *(_QWORD *)&v80[0] = sub_100040F58(v64, v65, v81);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v80, (char *)v80 + 8, v54 + 44, v54 + 52);

    swift_bridgeObjectRelease(v65);
    _os_log_impl((void *)&_mh_execute_header, loga, v49, "%s %s: received update -- changing text from %s to %s for asset %s", (uint8_t *)v54, 0x34u);
    swift_arrayDestroy(v73, 5, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v73, -1, -1);
    swift_slowDealloc(v54, -1, -1);

    v43 = v78;
  }
  v66 = String._bridgeToObjectiveC()();
  objc_msgSend(v30, "setDetailText:", v66, swift_bridgeObjectRelease(v47).n128_f64[0]);
  swift_unknownObjectRelease_n(v7, 2);
  swift_unknownObjectRelease(v43);

  return result;
}

double sub_10031C11C(void *a1, uint64_t a2)
{
  void *v2;
  void *v4;
  uint64_t v5;
  void *v6;
  os_log_type_t v7;
  id v8;
  NSObject *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t ObjectType;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  id v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  _UNKNOWN **v24;
  char **v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  id v32;
  uint64_t v33;
  id v34;
  id v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  float v43;
  double result;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  void *v50;
  id v51;
  _OWORD v52[2];
  uint64_t v53[4];

  v4 = a1;
  LOBYTE(v5) = static os_log_type_t.default.getter(a1);
  if (qword_1009CE210 != -1)
LABEL_37:
    swift_once(&qword_1009CE210, sub_10038B1F8);
  v6 = (void *)qword_1009DE420;
  v7 = v5;
  if (os_log_type_enabled((os_log_t)qword_1009DE420, (os_log_type_t)v5))
  {
    v8 = v2;
    v9 = v6;
    v10 = swift_slowAlloc(22, -1);
    v11 = a2;
    v12 = swift_slowAlloc(64, -1);
    v53[0] = v12;
    *(_DWORD *)v10 = 136315394;
    ObjectType = swift_getObjectType();
    v14 = _typeName(_:qualified:)(ObjectType, 0);
    v16 = v15;
    *(_QWORD *)&v52[0] = sub_100040F58(v14, v15, v53);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v52, (char *)v52 + 8, v10 + 4, v10 + 12);

    swift_bridgeObjectRelease(v16);
    *(_WORD *)(v10 + 12) = 2080;
    *(_QWORD *)&v52[0] = sub_100040F58(0xD000000000000020, 0x80000001007BF5A0, v53);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v52, (char *)v52 + 8, v10 + 14, v10 + 22);
    _os_log_impl((void *)&_mh_execute_header, v9, v7, "%s %s", (uint8_t *)v10, 0x16u);
    swift_arrayDestroy(v12, 2, (char *)&type metadata for Any + 8);
    v17 = v12;
    a2 = v11;
    swift_slowDealloc(v17, -1, -1);
    swift_slowDealloc(v10, -1, -1);

  }
  v18 = objc_msgSend(v4, "sections", v48);
  v19 = sub_100009E04(0, (unint64_t *)&unk_1009E5260, CPListSection_ptr);
  v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v18, v19);

  if ((unint64_t)v5 >> 62)
  {
    if (v5 < 0)
      v45 = v5;
    else
      v45 = v5 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v5);
    v46 = _CocoaArrayWrapper.endIndex.getter(v45);
    swift_bridgeObjectRelease(v5);
    if (!v46)
      goto LABEL_50;
LABEL_6:
    if ((v5 & 0xC000000000000001) != 0)
    {
      v20 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v5);
    }
    else
    {
      if (!*(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
        goto LABEL_45;
      }
      v20 = *(id *)(v5 + 32);
    }
    v50 = v20;
    v21 = objc_msgSend(v20, "items", swift_bridgeObjectRelease(v5).n128_f64[0]);
    v22 = sub_10004CFD4(&qword_1009DA828);
    v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v21, v22);

    if (!((unint64_t)v5 >> 62))
    {
      v23 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v23)
      {
LABEL_11:
        v48 = a2;
        v49 = (_QWORD *)(a2 + OBJC_IVAR____TtC5Books20CarPlayListenNowData_assetID);
        v2 = (void *)(v5 & 0xC000000000000001);
        a2 = 4;
        v24 = BCMutableCloudSyncVersions_ptr;
        v25 = &selRef_toViewController;
        while (1)
        {
          v26 = a2 - 4;
          if (v2)
          {
            v27 = specialized _ArrayBuffer._getElementSlowPath(_:)(a2 - 4, v5);
            v28 = a2 - 3;
            if (__OFADD__(v26, 1))
              goto LABEL_36;
          }
          else
          {
            v27 = *(_QWORD *)(v5 + 8 * a2);
            swift_unknownObjectRetain(v27);
            v28 = a2 - 3;
            if (__OFADD__(v26, 1))
            {
LABEL_36:
              __break(1u);
              goto LABEL_37;
            }
          }
          v29 = objc_opt_self(v24[204]);
          v30 = swift_dynamicCastObjCClass(v27, v29);
          if (v30)
          {
            v4 = (void *)v30;
            swift_unknownObjectRetain(v27);
            v31 = objc_msgSend(v4, v25[266]);
            if (v31)
            {
              v32 = v31;
              _bridgeAnyObjectToAny(_:)(v31);
              swift_unknownObjectRelease(v32);
            }
            else
            {
              memset(v52, 0, sizeof(v52));
            }
            sub_10004C7B4((uint64_t)v52, (uint64_t)v53);
            if (v53[3])
            {
              v33 = sub_10004CFD4(&qword_1009DA850);
              if ((swift_dynamicCast(&v51, v53, (char *)&type metadata for Any + 8, v33, 6) & 1) != 0)
              {
                v34 = v51;
                v35 = objc_msgSend(v51, "assetID");
                if (v35)
                {
                  v36 = v35;
                  v37 = static String._unconditionallyBridgeFromObjectiveC(_:)(v35);
                  v39 = v38;

                  if (v39)
                  {
                    v40 = v49[1];
                    if (v37 == *v49 && v39 == v40)
                    {
                      swift_bridgeObjectRelease(v5);
                      v42 = v39;
LABEL_35:
                      objc_msgSend(*(id *)(v48 + OBJC_IVAR____TtC5Books20CarPlayListenNowData_updatedReadingProgress), "floatValue", swift_bridgeObjectRelease(v42).n128_f64[0]);
                      objc_msgSend(v4, "setPlaybackProgress:", v43);
                      swift_unknownObjectRelease_n(v27, 2);
                      swift_unknownObjectRelease(v34);

                      return result;
                    }
                    v41 = _stringCompareWithSmolCheck(_:_:expecting:)(v37, v39, *v49, v40, 0);
                    swift_bridgeObjectRelease(v39);
                    if ((v41 & 1) != 0)
                    {
                      v42 = v5;
                      goto LABEL_35;
                    }
                  }
                }
                swift_unknownObjectRelease_n(v27, 2);
                swift_unknownObjectRelease(v34);
                v2 = (void *)(v5 & 0xC000000000000001);
                v24 = BCMutableCloudSyncVersions_ptr;
                v25 = &selRef_toViewController;
              }
              else
              {
                swift_unknownObjectRelease_n(v27, 2);
              }
            }
            else
            {
              swift_unknownObjectRelease_n(v27, 2);
              sub_10004A7B8((uint64_t)v53);
            }
          }
          else
          {
            swift_unknownObjectRelease(v27);
          }
          ++a2;
          if (v28 == v23)
            goto LABEL_49;
        }
      }
      goto LABEL_49;
    }
LABEL_45:
    if (v5 < 0)
      v47 = v5;
    else
      v47 = v5 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v5);
    v23 = _CocoaArrayWrapper.endIndex.getter(v47);
    swift_bridgeObjectRelease(v5);
    if (v23)
      goto LABEL_11;
LABEL_49:

    goto LABEL_50;
  }
  if (*(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_6;
LABEL_50:
  *(_QWORD *)&result = swift_bridgeObjectRelease(v5).n128_u64[0];
  return result;
}

void sub_10031C690()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  os_log_type_t v12;
  void *v13;
  os_log_type_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t ObjectType;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  os_log_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  void *v27;
  uint64_t v28;
  id v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  Class isa;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t ObjCClassFromMetadata;
  id v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  NSString v45;
  os_log_t v46;
  uint64_t v47;
  char *v48;
  void *v49;
  char *v50;
  char *v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t aBlock[5];
  uint64_t v57;

  v1 = type metadata accessor for Locale(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v53 = (char *)&v46 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v6 = (char *)&v46 - v5;
  v7 = type metadata accessor for String.LocalizationValue(0);
  v52 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v50 = (char *)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v51 = (char *)&v46 - v10;
  v12 = static os_log_type_t.default.getter(v11);
  if (qword_1009CE210 != -1)
    swift_once(&qword_1009CE210, sub_10038B1F8);
  v13 = (void *)qword_1009DE420;
  v14 = v12;
  if (os_log_type_enabled((os_log_t)qword_1009DE420, v12))
  {
    v15 = v0;
    v46 = v13;
    v16 = swift_slowAlloc(22, -1);
    v47 = v7;
    v17 = v16;
    v18 = swift_slowAlloc(64, -1);
    aBlock[0] = v18;
    *(_DWORD *)v17 = 136315394;
    ObjectType = swift_getObjectType();
    v20 = _typeName(_:qualified:)(ObjectType, 0);
    v22 = v21;
    v54 = sub_100040F58(v20, v21, aBlock);
    v48 = v6;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v54, &v55, v17 + 4, v17 + 12);

    swift_bridgeObjectRelease(v22);
    *(_WORD *)(v17 + 12) = 2080;
    v54 = sub_100040F58(0xD00000000000001DLL, 0x80000001007BF640, aBlock);
    v6 = v48;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v54, &v55, v17 + 14, v17 + 22);
    v23 = v46;
    _os_log_impl((void *)&_mh_execute_header, v46, v14, "%s %s", (uint8_t *)v17, 0x16u);
    swift_arrayDestroy(v18, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v18, -1, -1);
    v24 = v17;
    v7 = v47;
    swift_slowDealloc(v24, -1, -1);

  }
  v25 = swift_allocObject(&unk_1008FCC08, 24, 7);
  v49 = v0;
  swift_unknownObjectWeakInit(v25 + 16);
  v26 = objc_allocWithZone((Class)CPNowPlayingPlaybackRateButton);
  aBlock[4] = (uint64_t)sub_10031F4E4;
  v57 = v25;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_10031E050;
  aBlock[3] = (uint64_t)&unk_1008FCEC8;
  v27 = _Block_copy(aBlock);
  v28 = v57;
  swift_retain(v25);
  v29 = objc_msgSend(v26, "initWithHandler:", v27, swift_release(v28).n128_f64[0]);
  _Block_release(v27);
  swift_release(v25);
  v30 = objc_msgSend((id)objc_opt_self(CPNowPlayingTemplate), "sharedTemplate");
  v31 = sub_10004CFD4((uint64_t *)&unk_1009D4750);
  v32 = swift_allocObject(v31, 40, 7);
  *(_OWORD *)(v32 + 16) = xmmword_1007118F0;
  *(_QWORD *)(v32 + 32) = v29;
  aBlock[0] = v32;
  specialized Array._endMutation()(v32);
  v33 = aBlock[0];
  sub_100009E04(0, &qword_1009DA858, CPNowPlayingButton_ptr);
  v48 = (char *)v29;
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v30, "updateNowPlayingButtons:", isa, swift_bridgeObjectRelease(v33).n128_f64[0]);

  objc_msgSend(v30, "setUpNextButtonEnabled:", 1);
  v35 = v51;
  v36 = String.LocalizationValue.init(stringLiteral:)(0x73746E65746E6F43, 0xE800000000000000);
  static Locale.current.getter(v36);
  v37 = v52;
  v38 = v50;
  (*(void (**)(char *, char *, uint64_t))(v52 + 16))(v50, v35, v7);
  v39 = type metadata accessor for BundleFinder();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v39);
  v41 = objc_msgSend((id)objc_opt_self(NSBundle), "bundleForClass:", ObjCClassFromMetadata);
  v42 = v53;
  (*(void (**)(char *, char *, uint64_t))(v2 + 16))(v53, v6, v1);
  String.init(localized:table:bundle:locale:comment:)(v38, 0, 0, v41, v42, "Table of contents button text while in CarPlay now playing screen.", 66, 2);
  v44 = v43;
  (*(void (**)(char *, uint64_t))(v2 + 8))(v6, v1);
  (*(void (**)(char *, uint64_t))(v37 + 8))(v35, v7);
  v45 = String._bridgeToObjectiveC()();
  objc_msgSend(v30, "setUpNextTitle:", v45, swift_bridgeObjectRelease(v44).n128_f64[0]);

  objc_msgSend(v30, "setAlbumArtistButtonEnabled:", 0);
  objc_msgSend(v30, "addObserver:", v49);

}

double sub_10031CBF4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  double result;
  void *v5;
  void *v6;
  uint64_t v7;
  id v8;
  _BYTE v9[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v9, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v5 = (void *)Strong;
    v6 = *(void **)(Strong + OBJC_IVAR____TtC5Books16CarPlayPresenter_interactor);
    swift_unknownObjectRetain(v6);

    sub_100009E04(0, (unint64_t *)&qword_1009CEC30, OS_dispatch_queue_ptr);
    v7 = swift_allocObject(&unk_1008FCF00, 24, 7);
    *(_QWORD *)(v7 + 16) = v6;
    v8 = v6;
    static OS_dispatch_queue.dispatchAsyncOnMainIfNeeded(block:)(sub_10031F4EC, v7);
    swift_unknownObjectRelease(v8);
    *(_QWORD *)&result = swift_release(v7).n128_u64[0];
  }
  return result;
}

double sub_10031CD0C(uint64_t a1)
{
  char *v1;
  os_log_type_t v2;
  void *v3;
  char *v4;
  NSObject *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t ObjectType;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t Strong;
  double result;
  uint64_t v14;
  id v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;

  v2 = static os_log_type_t.default.getter(a1);
  if (qword_1009CE210 != -1)
    swift_once(&qword_1009CE210, sub_10038B1F8);
  v3 = (void *)qword_1009DE420;
  if (os_log_type_enabled((os_log_t)qword_1009DE420, v2))
  {
    v4 = v1;
    v5 = v3;
    v6 = swift_slowAlloc(22, -1);
    v7 = swift_slowAlloc(64, -1);
    v19 = v7;
    *(_DWORD *)v6 = 136315394;
    ObjectType = swift_getObjectType();
    v9 = _typeName(_:qualified:)(ObjectType, 0);
    v11 = v10;
    v18 = sub_100040F58(v9, v10, &v19);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v18, &v19, v6 + 4, v6 + 12);

    swift_bridgeObjectRelease(v11);
    *(_WORD *)(v6 + 12) = 2080;
    v18 = sub_100040F58(0xD000000000000013, 0x80000001007BF2B0, &v19);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v18, &v19, v6 + 14, v6 + 22);
    _os_log_impl((void *)&_mh_execute_header, v5, v2, "%s %s", (uint8_t *)v6, 0x16u);
    swift_arrayDestroy(v7, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v7, -1, -1);
    swift_slowDealloc(v6, -1, -1);

  }
  Strong = swift_unknownObjectWeakLoadStrong(&v1[OBJC_IVAR____TtC5Books16CarPlayPresenter_delegate]);
  if (Strong)
  {
    v14 = Strong;
    v15 = objc_msgSend((id)objc_opt_self(CPNowPlayingTemplate), "sharedTemplate");
    sub_100009E04(0, (unint64_t *)&qword_1009CEC30, OS_dispatch_queue_ptr);
    v16 = swift_allocObject(&unk_1008FCCD0, 32, 7);
    *(_QWORD *)(v16 + 16) = v14;
    *(_QWORD *)(v16 + 24) = v15;
    swift_unknownObjectRetain(v14);
    v17 = v15;
    static OS_dispatch_queue.dispatchAsyncOnMainIfNeeded(block:)(sub_10031F304, v16);

    swift_unknownObjectRelease(v14);
    *(_QWORD *)&result = swift_release(v16).n128_u64[0];
  }
  return result;
}

void sub_10031CF7C(uint64_t a1, unint64_t a2)
{
  NSObject *v2;
  NSObject *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  void *v15;
  BOOL v16;
  unint64_t v17;
  NSObject *v18;
  NSObject *v19;
  NSObject *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t ObjectType;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  void *v30;
  id v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  _QWORD *v38;
  uint8_t *v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  _QWORD *v47;
  void *v48;
  id v49;
  void *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  uint8_t *v59;
  unint64_t v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  void *v66;
  Class isa;
  id v68;
  id v69;
  unint64_t v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t ObjCClassFromMetadata;
  id v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  _QWORD *v94;
  uint64_t v95;
  os_log_type_t v96;
  void *v97;
  os_log_type_t v98;
  NSObject *v99;
  NSObject *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  unint64_t v105;
  unint64_t v106;
  uint64_t Strong;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  os_log_t v114;
  int v115;
  unint64_t v116;
  uint8_t *v117;
  char *v118;
  char *v119;
  uint64_t v120;
  char *v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  NSObject *v126;
  unint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132[2];

  v3 = v2;
  v6 = type metadata accessor for Locale(0);
  v124 = *(_QWORD *)(v6 - 8);
  v125 = v6;
  __chkstk_darwin(v6);
  v121 = (char *)&v112 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v123 = (char *)&v112 - v9;
  v122 = type metadata accessor for String.LocalizationValue(0);
  v120 = *(_QWORD *)(v122 - 8);
  __chkstk_darwin(v122);
  v118 = (char *)&v112 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v119 = (char *)&v112 - v12;
  v14 = (id)static os_log_type_t.default.getter(v13);
  if (qword_1009CE210 != -1)
    swift_once(&qword_1009CE210, sub_10038B1F8);
  v15 = (void *)qword_1009DE420;
  v16 = os_log_type_enabled((os_log_t)qword_1009DE420, (os_log_type_t)v14);
  v17 = (unint64_t)a1 >> 62;
  v127 = a2 >> 62;
  v128 = a2;
  v126 = v3;
  if (v16)
  {
    v115 = (int)v14;
    v18 = v3;
    swift_bridgeObjectRetain_n(a1, 2);
    swift_bridgeObjectRetain_n(a2, 2);
    v19 = v18;
    v20 = v15;
    v21 = swift_slowAlloc(42, -1);
    v22 = swift_slowAlloc(128, -1);
    v132[0] = v22;
    *(_DWORD *)v21 = 136315906;
    ObjectType = swift_getObjectType();
    v24 = _typeName(_:qualified:)(ObjectType, 0);
    v26 = v25;
    v130 = sub_100040F58(v24, v25, v132);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v130, &v131, v21 + 4, v21 + 12);

    swift_bridgeObjectRelease(v26);
    *(_WORD *)(v21 + 12) = 2080;
    v130 = sub_100040F58(0xD00000000000002FLL, 0x80000001007BF520, v132);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v130, &v131, v21 + 14, v21 + 22);
    v116 = (unint64_t)a1 >> 62;
    v117 = (uint8_t *)v21;
    *(_WORD *)(v21 + 22) = 2080;
    if (v17)
    {
      if (a1 < 0)
        v57 = a1;
      else
        v57 = a1 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(a1);
      v27 = _CocoaArrayWrapper.endIndex.getter(v57);
    }
    else
    {
      v27 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(a1);
    }
    v113 = v22;
    v114 = v20;
    if (v27)
    {
      if (v27 < 1)
      {
        __break(1u);
        goto LABEL_80;
      }
      v28 = 0;
      v29 = _swiftEmptyArrayStorage;
      do
      {
        if ((a1 & 0xC000000000000001) != 0)
        {
          v30 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(v28, a1);
        }
        else
        {
          v30 = *(void **)(a1 + 8 * v28 + 32);
          swift_unknownObjectRetain(v30);
        }
        v31 = objc_msgSend(v30, "assetID");
        if (v31)
        {
          v32 = v31;
          v33 = static String._unconditionallyBridgeFromObjectiveC(_:)(v31);
          v35 = v34;
          swift_unknownObjectRelease(v30);

          if ((swift_isUniquelyReferenced_nonNull_native(v29) & 1) == 0)
            v29 = sub_100043ED0(0, v29[2] + 1, 1, v29);
          v37 = v29[2];
          v36 = v29[3];
          if (v37 >= v36 >> 1)
            v29 = sub_100043ED0((_QWORD *)(v36 > 1), v37 + 1, 1, v29);
          v29[2] = v37 + 1;
          v38 = &v29[2 * v37];
          v38[4] = v33;
          v38[5] = v35;
        }
        else
        {
          swift_unknownObjectRelease(v30);
        }
        ++v28;
      }
      while (v27 != v28);
    }
    else
    {
      v29 = _swiftEmptyArrayStorage;
    }
    swift_bridgeObjectRelease(a1);
    v39 = v117;
    v40 = Array.description.getter(v29, &type metadata for String);
    v42 = v41;
    swift_bridgeObjectRelease(v29);
    v130 = sub_100040F58(v40, v42, v132);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v130, &v131, v39 + 24, v39 + 32);
    swift_bridgeObjectRelease_n(a1, 2);
    swift_bridgeObjectRelease(v42);
    *((_WORD *)v39 + 16) = 2080;
    if (v127)
    {
      v43 = v128;
      if (v128 < 0)
        v58 = v128;
      else
        v58 = v128 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v128);
      v44 = _CocoaArrayWrapper.endIndex.getter(v58);
      if (v44)
      {
LABEL_23:
        if (v44 >= 1)
        {
          v45 = 0;
          v46 = v43 & 0xC000000000000001;
          v47 = _swiftEmptyArrayStorage;
          do
          {
            if (v46)
            {
              v48 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(v45, v43);
            }
            else
            {
              v48 = *(void **)(v43 + 8 * v45 + 32);
              swift_unknownObjectRetain(v48);
            }
            v49 = objc_msgSend(v48, "assetID");
            if (v49)
            {
              v50 = v49;
              v51 = static String._unconditionallyBridgeFromObjectiveC(_:)(v49);
              v53 = v52;
              swift_unknownObjectRelease(v48);

              if ((swift_isUniquelyReferenced_nonNull_native(v47) & 1) == 0)
                v47 = sub_100043ED0(0, v47[2] + 1, 1, v47);
              v55 = v47[2];
              v54 = v47[3];
              if (v55 >= v54 >> 1)
                v47 = sub_100043ED0((_QWORD *)(v54 > 1), v55 + 1, 1, v47);
              v47[2] = v55 + 1;
              v56 = &v47[2 * v55];
              v56[4] = v51;
              v56[5] = v53;
              v43 = v128;
            }
            else
            {
              swift_unknownObjectRelease(v48);
            }
            ++v45;
          }
          while (v44 != v45);
          goto LABEL_45;
        }
LABEL_80:
        __break(1u);
        return;
      }
    }
    else
    {
      v43 = v128;
      v44 = *(_QWORD *)((v128 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(v128);
      if (v44)
        goto LABEL_23;
    }
    v47 = _swiftEmptyArrayStorage;
LABEL_45:
    swift_bridgeObjectRelease(v43);
    v59 = v117;
    v14 = (id)Array.description.getter(v47, &type metadata for String);
    v61 = v60;
    swift_bridgeObjectRelease(v47);
    v130 = sub_100040F58((uint64_t)v14, v61, v132);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v130, &v131, v59 + 34, v59 + 42);
    swift_bridgeObjectRelease_n(v128, 2);
    swift_bridgeObjectRelease(v61);
    a2 = (unint64_t)v114;
    _os_log_impl((void *)&_mh_execute_header, v114, (os_log_type_t)v115, "%s %s topLevel: %s, library: %s", v59, 0x2Au);
    v62 = v113;
    swift_arrayDestroy(v113, 4, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v62, -1, -1);
    swift_slowDealloc(v59, -1, -1);

    v3 = v126;
    v17 = v116;
  }
  v132[0] = (uint64_t)_swiftEmptyArrayStorage;
  if (v17)
  {
    if (a1 < 0)
      v73 = a1;
    else
      v73 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v63 = _CocoaArrayWrapper.endIndex.getter(v73);
    if (!v63)
      goto LABEL_63;
  }
  else
  {
    v63 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(a1);
    if (!v63)
      goto LABEL_63;
  }
  if (v63 < 1)
  {
    __break(1u);
    goto LABEL_78;
  }
  v65 = 0;
  do
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      v66 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(v65, a1);
    }
    else
    {
      v66 = *(void **)(a1 + 8 * v65 + 32);
      swift_unknownObjectRetain(v66);
    }
    isa = (Class)objc_msgSend(v66, "readingProgress");
    if (!isa)
    {
      sub_100009E04(0, (unint64_t *)&qword_1009DA820, NSNumber_ptr);
      isa = NSNumber.init(integerLiteral:)(0).super.super.isa;
    }
    v68 = sub_100319EA0(v66, 1, isa);

    v69 = v68;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v69);
    v71 = *(_QWORD *)((v132[0] & 0xFFFFFFFFFFFFFF8) + 0x10);
    v70 = *(_QWORD *)((v132[0] & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v71 >= v70 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v70 > 1, v71 + 1, 1);
    ++v65;
    v72 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v71, v69);
    specialized Array._endMutation()(v72);
    swift_unknownObjectRelease(v66);

  }
  while (v63 != v65);
LABEL_63:
  swift_bridgeObjectRelease(a1);
  if (v127)
  {
    v74 = v128;
    if (v128 < 0)
      v110 = v128;
    else
      v110 = v128 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v128);
    v111 = _CocoaArrayWrapper.endIndex.getter(v110);
    swift_bridgeObjectRelease(v74);
    a2 = (unint64_t)v3;
    if (v111)
    {
LABEL_65:
      v75 = v119;
      v76 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000011, 0x80000001007BF4E0);
      v77 = v123;
      static Locale.current.getter(v76);
      v78 = v120;
      v79 = v118;
      v80 = v122;
      (*(void (**)(char *, char *, uint64_t))(v120 + 16))(v118, v75, v122);
      v81 = type metadata accessor for BundleFinder();
      ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v81);
      v83 = objc_msgSend((id)objc_opt_self(NSBundle), "bundleForClass:", ObjCClassFromMetadata);
      v85 = v124;
      v84 = v125;
      v86 = v121;
      (*(void (**)(char *, char *, uint64_t))(v124 + 16))(v121, v77, v125);
      v87 = v79;
      a2 = (unint64_t)v126;
      v88 = String.init(localized:table:bundle:locale:comment:)(v87, 0, 0, v83, v86, "CarPlay library swoosh name", 27, 2);
      v90 = v89;
      (*(void (**)(char *, uint64_t))(v85 + 8))(v77, v84);
      (*(void (**)(char *, uint64_t))(v78 + 8))(v75, v80);
      v14 = sub_1003196A4(v88, v90, v74);
      swift_bridgeObjectRelease(v90);
      v91 = swift_unknownObjectRetain(v14);
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v91);
      v63 = *(_QWORD *)((v132[0] & 0xFFFFFFFFFFFFFF8) + 0x10);
      v64 = *(_QWORD *)((v132[0] & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v63 < v64 >> 1)
      {
LABEL_66:
        v92 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v63, v14);
        specialized Array._endMutation()(v92);
        swift_unknownObjectRelease(v14);
        goto LABEL_67;
      }
LABEL_78:
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v64 > 1, v63 + 1, 1);
      goto LABEL_66;
    }
  }
  else
  {
    v74 = v128;
    a2 = (unint64_t)v3;
    if (*(_QWORD *)((v128 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_65;
  }
LABEL_67:
  v93 = v132[0];
  v94 = sub_100318958(v132[0]);
  swift_bridgeObjectRelease(v93);
  v96 = static os_log_type_t.default.getter(v95);
  v97 = (void *)qword_1009DE420;
  v98 = v96;
  if (os_log_type_enabled((os_log_t)qword_1009DE420, v96))
  {
    v99 = (id)a2;
    v100 = v97;
    v101 = swift_slowAlloc(22, -1);
    v102 = swift_slowAlloc(64, -1);
    v130 = v102;
    *(_DWORD *)v101 = 136315394;
    v103 = swift_getObjectType();
    v104 = _typeName(_:qualified:)(v103, 0);
    v106 = v105;
    v129 = sub_100040F58(v104, v105, &v130);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v129, &v130, v101 + 4, v101 + 12);

    swift_bridgeObjectRelease(v106);
    *(_WORD *)(v101 + 12) = 2080;
    v129 = sub_100040F58(0xD00000000000002FLL, 0x80000001007BF520, &v130);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v129, &v130, v101 + 14, v101 + 22);
    _os_log_impl((void *)&_mh_execute_header, v100, v98, "%s %s about to update listen now sections on delegate", (uint8_t *)v101, 0x16u);
    swift_arrayDestroy(v102, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v102, -1, -1);
    swift_slowDealloc(v101, -1, -1);

  }
  Strong = swift_unknownObjectWeakLoadStrong(a2 + OBJC_IVAR____TtC5Books16CarPlayPresenter_delegate);
  if (Strong)
  {
    v108 = Strong;
    sub_100009E04(0, (unint64_t *)&qword_1009CEC30, OS_dispatch_queue_ptr);
    v109 = swift_allocObject(&unk_1008FCE88, 32, 7);
    *(_QWORD *)(v109 + 16) = v108;
    *(_QWORD *)(v109 + 24) = v94;
    swift_unknownObjectRetain(v108);
    swift_bridgeObjectRetain(v94);
    static OS_dispatch_queue.dispatchAsyncOnMainIfNeeded(block:)(sub_10031F454, v109);
    swift_bridgeObjectRelease(v94);
    swift_unknownObjectRelease(v108);
    swift_release(v109);
  }
  else
  {
    swift_bridgeObjectRelease(v94);
  }
}

void sub_10031DAF0(uint64_t a1)
{
  char *v1;
  char *v2;
  os_log_type_t v4;
  void *v5;
  char *v6;
  NSObject *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t ObjectType;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  id v20;
  NSString v21;
  Class isa;
  id v23;
  uint64_t Strong;
  uint64_t v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;

  v2 = v1;
  v4 = static os_log_type_t.default.getter(a1);
  if (qword_1009CE210 != -1)
    swift_once(&qword_1009CE210, sub_10038B1F8);
  v5 = (void *)qword_1009DE420;
  if (os_log_type_enabled((os_log_t)qword_1009DE420, v4))
  {
    v6 = v2;
    v7 = v5;
    v8 = swift_slowAlloc(22, -1);
    v9 = swift_slowAlloc(64, -1);
    v29 = v9;
    *(_DWORD *)v8 = 136315394;
    ObjectType = swift_getObjectType();
    v11 = _typeName(_:qualified:)(ObjectType, 0);
    v13 = v12;
    v28 = sub_100040F58(v11, v12, &v29);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v28, &v29, v8 + 4, v8 + 12);

    swift_bridgeObjectRelease(v13);
    *(_WORD *)(v8 + 12) = 2080;
    v28 = sub_100040F58(0xD00000000000002ALL, 0x80000001007BEF30, &v29);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v28, &v29, v8 + 14, v8 + 22);
    _os_log_impl((void *)&_mh_execute_header, v7, v4, "%s %s", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy(v9, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v9, -1, -1);
    swift_slowDealloc(v8, -1, -1);

  }
  v14 = sub_100318CB4(a1);
  v15 = *(_QWORD *)(a1 + OBJC_IVAR____TtC5Books20CarPlayAudiobookData_title + 8);
  v16 = sub_10004CFD4((uint64_t *)&unk_1009D4750);
  v17 = swift_allocObject(v16, 40, 7);
  *(_OWORD *)(v17 + 16) = xmmword_1007118F0;
  *(_QWORD *)(v17 + 32) = v14;
  v29 = v17;
  specialized Array._endMutation()(v17);
  v18 = v29;
  v19 = objc_allocWithZone((Class)CPListTemplate);
  swift_bridgeObjectRetain(v15);
  v20 = v14;
  v21 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v15);
  sub_100009E04(0, (unint64_t *)&unk_1009E5260, CPListSection_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  v23 = objc_msgSend(v19, "initWithTitle:sections:", v21, isa, swift_bridgeObjectRelease(v18).n128_f64[0]);

  Strong = swift_unknownObjectWeakLoadStrong(&v2[OBJC_IVAR____TtC5Books16CarPlayPresenter_delegate]);
  if (Strong)
  {
    v25 = Strong;
    sub_100009E04(0, (unint64_t *)&qword_1009CEC30, OS_dispatch_queue_ptr);
    v26 = swift_allocObject(&unk_1008FCAC8, 32, 7);
    *(_QWORD *)(v26 + 16) = v25;
    *(_QWORD *)(v26 + 24) = v23;
    swift_unknownObjectRetain(v25);
    v27 = v23;
    static OS_dispatch_queue.dispatchAsyncOnMainIfNeeded(block:)(sub_10031F220, v26);

    swift_unknownObjectRelease(v25);
    swift_release(v26);
  }
  else
  {

  }
}

void sub_10031DE3C(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  char *v8;
  uint64_t Strong;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  id v16;
  id v17;
  uint64_t v18;

  v3 = static os_log_type_t.default.getter(a1);
  if (qword_1009CE210 != -1)
    swift_once(&qword_1009CE210, sub_10038B1F8);
  v4 = (void *)qword_1009DE420;
  v5 = sub_10004CFD4((uint64_t *)&unk_1009D1970);
  v6 = swift_allocObject(v5, 72, 7);
  *(_OWORD *)(v6 + 16) = xmmword_10070CCA0;
  *(_QWORD *)(v6 + 56) = type metadata accessor for CarPlayAudiobookData();
  *(_QWORD *)(v6 + 64) = sub_10031F45C();
  *(_QWORD *)(v6 + 32) = a1;
  v7 = v4;
  v8 = a1;
  os_log(_:dso:log:_:_:)(v3, &_mh_execute_header, v7, "update table of contents for %@", 31, 2, v6);

  swift_bridgeObjectRelease(v6);
  v17 = sub_100318CB4((uint64_t)v8);
  Strong = swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC5Books16CarPlayPresenter_delegate);
  if (Strong)
  {
    v10 = Strong;
    v12 = *(_QWORD *)&v8[OBJC_IVAR____TtC5Books20CarPlayAudiobookData_title];
    v11 = *(_QWORD *)&v8[OBJC_IVAR____TtC5Books20CarPlayAudiobookData_title + 8];
    v13 = sub_10004CFD4((uint64_t *)&unk_1009D4750);
    v14 = swift_allocObject(v13, 40, 7);
    *(_OWORD *)(v14 + 16) = xmmword_1007118F0;
    *(_QWORD *)(v14 + 32) = v17;
    v18 = v14;
    specialized Array._endMutation()(v14);
    sub_100009E04(0, (unint64_t *)&qword_1009CEC30, OS_dispatch_queue_ptr);
    v15 = (_QWORD *)swift_allocObject(&unk_1008FCEB0, 48, 7);
    v15[2] = v10;
    v15[3] = v12;
    v15[4] = v11;
    v15[5] = v18;
    swift_bridgeObjectRetain_n(v11, 2);
    v16 = v17;
    swift_unknownObjectRetain(v10);
    swift_bridgeObjectRetain(v18);
    static OS_dispatch_queue.dispatchAsyncOnMainIfNeeded(block:)(sub_10031F4D8, v15);
    swift_bridgeObjectRelease(v11);
    swift_bridgeObjectRelease(v18);
    swift_unknownObjectRelease(v10);

    swift_release(v15);
  }
  else
  {

  }
}

void sub_10031E054(void *a1, char a2, void *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  _QWORD *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  double v18;
  uint64_t v19;
  char *v20;
  id v21;
  void *v22;
  unint64_t v23;
  unint64_t v24;
  double v25;
  double v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t ObjCClassFromMetadata;
  id v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  id v36;
  void *v37;
  unint64_t v38;
  unint64_t v39;
  id v40;
  void *v41;
  unint64_t v42;
  unint64_t v43;
  NSString v44;
  NSString v45;
  id v46;
  id v47;
  void *v48;
  id v49;
  id v50;
  void *v51;
  uint64_t v52;
  uint64_t v53;
  id v54;
  void *v55;
  id v56;
  void *v57;
  void *v58;
  double v59;
  double v60;
  double v61;
  double v62;
  BOOL v63;
  double v64;
  uint64_t v65;
  id v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  id v71;
  void *v72;
  double v73;
  double v74;
  uint64_t v75;
  uint64_t v76;
  double v77;
  uint64_t v78;
  double v79;
  id v80;
  Class isa;
  uint64_t v82;
  id v83;
  void *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  id v90;
  char *v91;
  uint64_t v92;
  id v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  id v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  id v107;
  id v108;
  unint64_t v109;
  id v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  id v117;

  v6 = type metadata accessor for Calendar(0);
  v111 = *(_QWORD *)(v6 - 8);
  v112 = v6;
  __chkstk_darwin(v6);
  v8 = (char *)&v107 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Locale(0);
  v114 = *(_QWORD *)(v9 - 8);
  v115 = v9;
  __chkstk_darwin(v9);
  v113 = (char *)&v107 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v107 - v12;
  v14 = (_QWORD *)type metadata accessor for String.LocalizationValue(0);
  v116 = *(v14 - 1);
  v117 = v14;
  __chkstk_darwin(v14);
  v16 = (char *)&v107 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __chkstk_darwin(v17);
  v20 = (char *)&v107 - v19;
  v21 = objc_msgSend(a1, "author", v18);
  if (v21)
  {
    v22 = v21;
    static String._unconditionallyBridgeFromObjectiveC(_:)(v21);
    v24 = v23;

  }
  else
  {
    v24 = 0xE000000000000000;
  }
  objc_msgSend(a3, "doubleValue");
  if ((a2 & 1) == 0)
    return;
  v26 = v25;
  if ((objc_msgSend(a1, "isFinished") & 1) != 0 || fabs(v26 + -1.0) < 0.01)
  {
    swift_bridgeObjectRelease(v24);
    v27 = String.LocalizationValue.init(stringLiteral:)(0x64656873696E6946, 0xE800000000000000);
    static Locale.current.getter(v27);
    v29 = v116;
    v28 = v117;
    (*(void (**)(char *, char *, id))(v116 + 16))(v16, v20, v117);
    v30 = type metadata accessor for BundleFinder();
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v30);
    v32 = objc_msgSend((id)objc_opt_self(NSBundle), "bundleForClass:", ObjCClassFromMetadata);
    v34 = v113;
    v33 = v114;
    v35 = v115;
    (*(void (**)(char *, char *, uint64_t))(v114 + 16))(v113, v13, v115);
    String.init(localized:table:bundle:locale:comment:)(v16, 0, 0, v32, v34, "CarPlay detail text for when you've finished an audiobook that is at the top level.", 83, 2);
    (*(void (**)(char *, uint64_t))(v33 + 8))(v13, v35);
    (*(void (**)(char *, id))(v29 + 8))(v20, v28);
    return;
  }
  v36 = objc_msgSend(a1, "assetID");
  if (v36)
  {
    v37 = v36;
    v110 = (id)static String._unconditionallyBridgeFromObjectiveC(_:)(v36);
    v39 = v38;

  }
  else
  {
    v110 = 0;
    v39 = 0xE000000000000000;
  }
  v40 = objc_msgSend(a1, "title");
  if (v40)
  {
    v41 = v40;
    static String._unconditionallyBridgeFromObjectiveC(_:)(v40);
    v43 = v42;

  }
  else
  {
    v43 = 0xE000000000000000;
  }
  v44 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v39);
  v45 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v43);
  v46 = objc_msgSend((id)objc_opt_self(BKMLAudiobookIdentifier), "identifierFromAssetID:albumTitle:", v44, v45);

  v110 = v46;
  v47 = objc_msgSend(v46, "audiobookQuery");
  if (!v47)
  {
    v61 = 1.0;
    v60 = 0.0;
    v64 = 0.0;
    if (1.0 - v26 > 0.0)
      v64 = 1.0 - v26;
    if (1.0 - v26 <= 1.0)
      v61 = v64;
    v65 = v116;
    v50 = v117;
    goto LABEL_60;
  }
  v48 = v47;
  v49 = objc_msgSend(v47, "collections");
  v50 = v117;
  if (!v49)
  {

LABEL_43:
    v61 = 1.0;
    v60 = 0.0;
    v77 = 0.0;
    if (1.0 - v26 > 0.0)
      v77 = 1.0 - v26;
    if (1.0 - v26 <= 1.0)
      v61 = v77;
    v65 = v116;
    goto LABEL_60;
  }
  v51 = v49;
  v52 = sub_100009E04(0, &qword_1009DA808, MPMediaItemCollection_ptr);
  v53 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v51, v52);

  if (!((unint64_t)v53 >> 62))
  {
    if (*(_QWORD *)((v53 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_19;
    goto LABEL_42;
  }
  if (v53 < 0)
    v75 = v53;
  else
    v75 = v53 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v53);
  v76 = _CocoaArrayWrapper.endIndex.getter(v75);
  swift_bridgeObjectRelease(v53);
  if (!v76)
  {
LABEL_42:

    swift_bridgeObjectRelease(v53);
    goto LABEL_43;
  }
LABEL_19:
  if ((v53 & 0xC000000000000001) != 0)
  {
    v54 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v53);
  }
  else
  {
    if (!*(_QWORD *)((v53 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_50;
    }
    v54 = *(id *)(v53 + 32);
  }
  v55 = v54;
  v56 = objc_msgSend(v54, "bk_cloudRepresentativeItem", swift_bridgeObjectRelease(v53).n128_f64[0]);
  v57 = v55;
  if (!v56)
  {
    v107 = v55;
    v66 = objc_msgSend(v55, "bk_localItems");
    v67 = sub_100009E04(0, &qword_1009DA810, MPMediaItem_ptr);
    v53 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v66, v67);

    v108 = v48;
    if (!((unint64_t)v53 >> 62))
    {
      v68 = *(_QWORD *)((v53 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v68)
      {
LABEL_32:
        if (v68 < 1)
        {
          __break(1u);
          return;
        }
        v69 = 0;
        v109 = v53 & 0xC000000000000001;
        v60 = 0.0;
        v70 = v53;
        do
        {
          if (v109)
            v71 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v69, v53);
          else
            v71 = *(id *)(v53 + 8 * v69 + 32);
          v72 = v71;
          ++v69;
          objc_msgSend(v71, "playbackDuration");
          v74 = v73;

          v60 = v60 + v74;
          v53 = v70;
        }
        while (v68 != v69);
        goto LABEL_55;
      }
LABEL_54:
      v60 = 0.0;
LABEL_55:

      swift_bridgeObjectRelease(v53);
      v61 = 1.0;
      v62 = 1.0 - v26;
      v63 = 1.0 - v26 <= 1.0;
      v50 = v117;
      goto LABEL_56;
    }
LABEL_50:
    if (v53 < 0)
      v78 = v53;
    else
      v78 = v53 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v53);
    v68 = _CocoaArrayWrapper.endIndex.getter(v78);
    swift_bridgeObjectRelease(v53);
    if (v68)
      goto LABEL_32;
    goto LABEL_54;
  }
  v58 = v56;
  objc_msgSend(v56, "playbackDuration");
  v60 = v59;

  v61 = 1.0;
  v62 = 1.0 - v26;
  v63 = 1.0 - v26 <= 1.0;
LABEL_56:
  v65 = v116;
  if (v63)
  {
    v61 = 0.0;
    if (v62 > 0.0)
      v61 = v62;
  }
LABEL_60:
  v79 = v61 * v60;
  v80 = objc_msgSend(objc_allocWithZone((Class)NSDateComponentsFormatter), "init");
  static Calendar.current.getter(v80);
  isa = Calendar._bridgeToObjectiveC()().super.isa;
  (*(void (**)(char *, uint64_t))(v111 + 8))(v8, v112);
  objc_msgSend(v80, "setCalendar:", isa);

  objc_msgSend(v80, "setUnitsStyle:", 2);
  if (v79 <= 60.0)
    v82 = 128;
  else
    v82 = 96;
  objc_msgSend(v80, "setAllowedUnits:", v82);
  objc_msgSend(v80, "setMaximumUnitCount:", 2);
  objc_msgSend(v80, "setFormattingContext:", 5);
  v83 = objc_msgSend(v80, "stringFromTimeInterval:", v79);
  if (v83)
  {
    v84 = v83;
    v117 = v80;
    swift_bridgeObjectRelease(v24);
    v116 = static String._unconditionallyBridgeFromObjectiveC(_:)(v84);
    v86 = v85;

    if (fabs(v26) >= 0.01)
    {
      v97 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000014, 0x80000001007BF2D0);
      static Locale.current.getter(v97);
      (*(void (**)(char *, char *, id))(v65 + 16))(v16, v20, v50);
      v98 = type metadata accessor for BundleFinder();
      v99 = swift_getObjCClassFromMetadata(v98);
      v100 = objc_msgSend((id)objc_opt_self(NSBundle), "bundleForClass:", v99);
      v101 = v113;
      v92 = v114;
      v93 = v50;
      v94 = v115;
      (*(void (**)(char *, char *, uint64_t))(v114 + 16))(v113, v13, v115);
      v95 = String.init(localized:table:bundle:locale:comment:)(v16, 0, 0, v100, v101, "CarPlay start listening to an audiobook with duration.", 54, 2);
    }
    else
    {
      v87 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000012, 0x80000001007BF330);
      static Locale.current.getter(v87);
      (*(void (**)(char *, char *, id))(v65 + 16))(v16, v20, v50);
      v88 = type metadata accessor for BundleFinder();
      v89 = swift_getObjCClassFromMetadata(v88);
      v90 = objc_msgSend((id)objc_opt_self(NSBundle), "bundleForClass:", v89);
      v91 = v113;
      v92 = v114;
      v93 = v50;
      v94 = v115;
      (*(void (**)(char *, char *, uint64_t))(v114 + 16))(v113, v13, v115);
      v95 = String.init(localized:table:bundle:locale:comment:)(v16, 0, 0, v90, v91, "CarPlay time remaining in book.", 31, 2);
    }
    v102 = v65;
    v103 = v95;
    v104 = v96;
    (*(void (**)(char *, uint64_t))(v92 + 8))(v13, v94);
    (*(void (**)(char *, id))(v102 + 8))(v20, v93);
    v105 = sub_10004CFD4((uint64_t *)&unk_1009D1970);
    v106 = swift_allocObject(v105, 72, 7);
    *(_OWORD *)(v106 + 16) = xmmword_10070CCA0;
    *(_QWORD *)(v106 + 56) = &type metadata for String;
    *(_QWORD *)(v106 + 64) = sub_10002BE50();
    *(_QWORD *)(v106 + 32) = v116;
    *(_QWORD *)(v106 + 40) = v86;
    String.init(format:_:)(v103, v104, v106);
    swift_bridgeObjectRelease(v104);

  }
  else
  {

  }
}

void sub_10031EA00(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  char *v4;
  NSObject *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t ObjectType;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  Class isa;
  id v18;
  id v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __n128 v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  char *v31;
  Class v32;
  id v33;
  uint64_t Strong;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  __n128 v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  __objc2_prot *v50;
  unint64_t v51;

  LOBYTE(v2) = static os_log_type_t.default.getter(a1);
  if (qword_1009CE210 != -1)
LABEL_26:
    swift_once(&qword_1009CE210, sub_10038B1F8);
  v3 = (void *)qword_1009DE420;
  if (os_log_type_enabled((os_log_t)qword_1009DE420, (os_log_type_t)v2))
  {
    v4 = v48;
    v5 = v3;
    v6 = swift_slowAlloc(22, -1);
    v7 = swift_slowAlloc(64, -1);
    v51 = v7;
    *(_DWORD *)v6 = 136315394;
    ObjectType = swift_getObjectType();
    v9 = _typeName(_:qualified:)(ObjectType, 0);
    v11 = v10;
    v49 = sub_100040F58(v9, v10, (uint64_t *)&v51);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v49, &v50, v6 + 4, v6 + 12);

    swift_bridgeObjectRelease(v11);
    *(_WORD *)(v6 + 12) = 2080;
    v49 = sub_100040F58(0xD000000000000020, 0x80000001007BF420, (uint64_t *)&v51);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v49, &v50, v6 + 14, v6 + 22);
    _os_log_impl((void *)&_mh_execute_header, v5, (os_log_type_t)v2, "%s %s", (uint8_t *)v6, 0x16u);
    swift_arrayDestroy(v7, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v7, -1, -1);
    swift_slowDealloc(v6, -1, -1);

  }
  v51 = (unint64_t)_swiftEmptyArrayStorage;
  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v25 = a1;
    else
      v25 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v12 = _CocoaArrayWrapper.endIndex.getter(v25);
    if (v12)
      goto LABEL_6;
  }
  else
  {
    v12 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(a1);
    if (v12)
    {
LABEL_6:
      v13 = 4;
      while (1)
      {
        v14 = v13 - 4;
        if ((a1 & 0xC000000000000001) != 0)
        {
          v15 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(v13 - 4, a1);
          v16 = v13 - 3;
          if (__OFADD__(v14, 1))
            goto LABEL_25;
        }
        else
        {
          v15 = *(void **)(a1 + 8 * v13);
          swift_unknownObjectRetain(v15);
          v16 = v13 - 3;
          if (__OFADD__(v14, 1))
          {
LABEL_25:
            __break(1u);
            goto LABEL_26;
          }
        }
        isa = (Class)objc_msgSend(v15, "readingProgress");
        if (!isa)
        {
          sub_100009E04(0, (unint64_t *)&qword_1009DA820, NSNumber_ptr);
          isa = NSNumber.init(integerLiteral:)(0).super.super.isa;
        }
        v18 = sub_100319EA0(v15, 0, isa);

        v19 = v18;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v19);
        v21 = *(_QWORD *)((v51 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v20 = *(_QWORD *)((v51 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v21 >= v20 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v20 > 1, v21 + 1, 1);
        v22 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v21, v19);
        specialized Array._endMutation()(v22);
        v2 = v51;
        if (v51 >> 62)
        {
          if ((v51 & 0x8000000000000000) != 0)
            v24 = v51;
          else
            v24 = v51 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain(v51);
          v23 = _CocoaArrayWrapper.endIndex.getter(v24);
        }
        else
        {
          v23 = *(_QWORD *)((v51 & 0xFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRetain(v51);
        }
        swift_unknownObjectRelease(v15);

        swift_bridgeObjectRelease(v2);
        if (v23 <= 49)
        {
          ++v13;
          if (v16 != v12)
            continue;
        }
        goto LABEL_32;
      }
    }
  }
  v2 = (uint64_t)_swiftEmptyArrayStorage;
LABEL_32:
  swift_bridgeObjectRelease(a1);
  if ((unint64_t)v2 >> 62)
  {
    if (v2 < 0)
      v44 = v2;
    else
      v44 = v2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v2);
    v45 = sub_10004CFD4(&qword_1009DA828);
    v47 = _bridgeCocoaArray<A>(_:)(v44, v45, v46);
    swift_bridgeObjectRelease_n(v2, 2);
    v2 = v47;
  }
  else
  {
    v26 = v2 & 0xFFFFFFFFFFFFFF8;
    v27 = swift_bridgeObjectRetain(v2);
    v28 = dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v27);
    v29 = sub_10004CFD4(&qword_1009DA828);
    if (swift_dynamicCastMetatype(v28, v29) || (v41 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10)) == 0)
    {
LABEL_34:
      swift_bridgeObjectRelease(v2);
    }
    else
    {
      v42 = (uint64_t *)(v26 + 32);
      while (1)
      {
        v43 = *v42;
        v50 = &OBJC_PROTOCOL___CPListTemplateItem;
        if (!swift_dynamicCastObjCProtocolConditional(v43, 1, &v50))
          break;
        ++v42;
        if (!--v41)
          goto LABEL_34;
      }
      swift_bridgeObjectRelease(v2);
      v2 = v26 | 1;
    }
  }
  v30 = objc_allocWithZone((Class)CPListSection);
  v31 = sub_100480184(v2);
  swift_bridgeObjectRelease(v2);
  v32 = Array._bridgeToObjectiveC()().super.isa;
  v33 = objc_msgSend(v30, "initWithItems:", v32, swift_bridgeObjectRelease(v31).n128_f64[0]);

  Strong = swift_unknownObjectWeakLoadStrong(&v48[OBJC_IVAR____TtC5Books16CarPlayPresenter_delegate]);
  if (Strong)
  {
    v35 = Strong;
    v36 = sub_10004CFD4((uint64_t *)&unk_1009D4750);
    v37 = swift_allocObject(v36, 40, 7);
    *(_OWORD *)(v37 + 16) = xmmword_1007118F0;
    *(_QWORD *)(v37 + 32) = v33;
    v49 = v37;
    specialized Array._endMutation()(v37);
    v38 = v49;
    sub_100009E04(0, (unint64_t *)&qword_1009CEC30, OS_dispatch_queue_ptr);
    v39 = swift_allocObject(&unk_1008FCDE8, 32, 7);
    *(_QWORD *)(v39 + 16) = v35;
    *(_QWORD *)(v39 + 24) = v38;
    v40 = v33;
    swift_unknownObjectRetain(v35);
    swift_bridgeObjectRetain(v38);
    static OS_dispatch_queue.dispatchAsyncOnMainIfNeeded(block:)(sub_10031F3C8, v39);
    swift_bridgeObjectRelease(v38);
    swift_unknownObjectRelease(v35);

    swift_release(v39);
  }
  else
  {

  }
}

void sub_10031EF9C(uint64_t a1)
{
  char *v1;
  os_log_type_t v2;
  void *v3;
  char *v4;
  NSObject *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t ObjectType;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t Strong;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v2 = static os_log_type_t.default.getter(a1);
  if (qword_1009CE210 != -1)
    swift_once(&qword_1009CE210, sub_10038B1F8);
  v3 = (void *)qword_1009DE420;
  if (os_log_type_enabled((os_log_t)qword_1009DE420, v2))
  {
    v4 = v1;
    v5 = v3;
    v6 = swift_slowAlloc(22, -1);
    v7 = swift_slowAlloc(64, -1);
    v18 = v7;
    *(_DWORD *)v6 = 136315394;
    ObjectType = swift_getObjectType();
    v9 = _typeName(_:qualified:)(ObjectType, 0);
    v11 = v10;
    v17 = sub_100040F58(v9, v10, &v18);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v17, &v18, v6 + 4, v6 + 12);

    swift_bridgeObjectRelease(v11);
    *(_WORD *)(v6 + 12) = 2080;
    v17 = sub_100040F58(0xD000000000000028, 0x80000001007BEF00, &v18);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v17, &v18, v6 + 14, v6 + 22);
    _os_log_impl((void *)&_mh_execute_header, v5, v2, "%s %s", (uint8_t *)v6, 0x16u);
    swift_arrayDestroy(v7, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v7, -1, -1);
    swift_slowDealloc(v6, -1, -1);

  }
  v12 = *(_QWORD *)&v1[OBJC_IVAR____TtC5Books16CarPlayPresenter_interactor];
  v13 = *(_QWORD *)(v12 + OBJC_IVAR____TtC5Books17CarPlayInteractor_dataManager);
  swift_unknownObjectRetain(v12);
  swift_unknownObjectRetain(v13);
  v14 = sub_100561634();
  swift_unknownObjectRelease(v13);
  if (v14)
  {
    Strong = swift_unknownObjectWeakLoadStrong(v12 + OBJC_IVAR____TtC5Books17CarPlayInteractor_delegate);
    if (Strong)
    {
      v16 = Strong;
      sub_10031DAF0((uint64_t)v14);
      swift_unknownObjectRelease(v12);

      swift_unknownObjectRelease(v16);
    }
    else
    {
      swift_unknownObjectRelease(v12);

    }
  }
  else
  {
    swift_unknownObjectRelease(v12);
  }
}

uint64_t sub_10031F1F4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

double sub_10031F220()
{
  uint64_t v0;

  return sub_10047E498(*(char **)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_10031F228()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 32, 7);
}

Swift::Int sub_10031F254(void *a1)
{
  uint64_t v1;

  return sub_10031B1B4(a1, *(_QWORD *)(v1 + 16));
}

void sub_10031F260(uint64_t a1)
{
  uint64_t v1;

  sub_10031AD30(a1, *(_QWORD *)(v1 + 16), *(void (**)(__n128))(v1 + 24));
}

void sub_10031F26C()
{
  uint64_t v0;

  sub_10047F880(*(char **)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_10031F274()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

id sub_10031F298()
{
  uint64_t v0;

  return sub_10047FBC8(*(char **)(v0 + 16));
}

uint64_t sub_10031F2A0()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10031F2C4()
{
  return sub_10031F358((void (*)(_QWORD))&_swift_unknownObjectRelease);
}

double sub_10031F2D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_10031A39C(a1, a2, a3, *(_QWORD *)(v3 + 16), *(void **)(v3 + 24));
}

uint64_t sub_10031F2D8()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

void sub_10031F304()
{
  uint64_t v0;

  sub_10047F188(*(char **)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_10031F30C()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_bridgeObjectRelease(v0[3]);
  swift_bridgeObjectRelease(v0[5]);
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_10031F340(uint64_t a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t v3;

  return sub_100319C64(a1, a2, a3, *(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24));
}

uint64_t sub_10031F34C()
{
  return sub_10031F358((void (*)(_QWORD))&_swift_bridgeObjectRelease);
}

uint64_t sub_10031F358(void (*a1)(_QWORD))
{
  uint64_t v1;

  swift_release(*(_QWORD *)(v1 + 16));
  a1(*(_QWORD *)(v1 + 24));
  return swift_deallocObject(v1, 32, 7);
}

void sub_10031F390(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  sub_100319CD8(a1, a2, a3, a4, *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24));
}

void sub_10031F39C(uint64_t a1)
{
  uint64_t v1;

  sub_10031A470(a1, *(void (**)(double))(v1 + 24), *(_QWORD *)(v1 + 32));
}

double sub_10031F3C8()
{
  uint64_t v0;

  return sub_10047E9B0(*(char **)(v0 + 16));
}

unint64_t sub_10031F3D0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009DA838;
  if (!qword_1009DA838)
  {
    v1 = sub_100030B74(&qword_1009DA830);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_1009DA838);
  }
  return result;
}

uint64_t sub_10031F41C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 32, 7);
}

void sub_10031F440(uint64_t a1, void (*a2)(__n128), uint64_t a3)
{
  uint64_t v3;

  sub_1003194E8(a1, a2, a3, *(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24));
}

id sub_10031F448()
{
  uint64_t v0;

  return sub_10047F5F4(*(char **)(v0 + 16));
}

void sub_10031F454()
{
  uint64_t v0;

  sub_10047E6DC(*(char **)(v0 + 16));
}

unint64_t sub_10031F45C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009DA840;
  if (!qword_1009DA840)
  {
    v1 = type metadata accessor for CarPlayAudiobookData();
    result = swift_getWitnessTable(&protocol conformance descriptor for NSObject, v1);
    atomic_store(result, (unint64_t *)&qword_1009DA840);
  }
  return result;
}

uint64_t sub_10031F4A4()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

void sub_10031F4D8()
{
  uint64_t v0;

  sub_10047EC38(*(char **)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

double sub_10031F4E4(uint64_t a1)
{
  uint64_t v1;

  return sub_10031CBF4(a1, v1);
}

uint64_t sub_10031F4EC()
{
  uint64_t v0;

  return sub_1002D4BF4(*(_QWORD *)(v0 + 16));
}

uint64_t sub_10031F52C(char *a1, uint64_t a2)
{
  char v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  void *v6;
  uint64_t KeyPath;
  uint64_t v8;
  char v9;
  _BYTE v10[24];

  v2 = *a1;
  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v10, 0, 0);
  result = swift_weakLoadStrong(v3);
  if (result)
  {
    v5 = result;
    v6 = *(void **)(result + 16);
    KeyPath = swift_getKeyPath("pz.");
    v8 = swift_getKeyPath(&unk_10071A788);
    v9 = v2;
    static Published.subscript.setter(&v9, v6, KeyPath, v8);
    return swift_release(v5);
  }
  return result;
}

double sub_10031F5D0(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t Strong;
  double result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t ObjectType;
  uint64_t v11;
  uint64_t KeyPath;
  uint64_t v13;
  uint64_t v14;
  _BYTE v15[24];

  v2 = *a1;
  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v15, 0, 0);
  Strong = swift_weakLoadStrong(v3);
  if (Strong)
  {
    v6 = Strong;
    v7 = swift_unknownObjectWeakLoadStrong(Strong + 32);
    if (!v7)
      goto LABEL_4;
    v8 = v7;
    v9 = *(_QWORD *)(v6 + 40);
    ObjectType = swift_getObjectType();
    v11 = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 40))(ObjectType, v9);
    swift_unknownObjectRelease(v8);
    KeyPath = swift_getKeyPath(&unk_10071A7A8);
    v13 = swift_getKeyPath(&unk_10071A7D0);
    static Published.subscript.getter(&v14, v11, KeyPath);
    swift_release(v11);
    swift_release(KeyPath);
    swift_release(v13);
    if (v14)
LABEL_4:
      sub_10031F99C();
    sub_10031FCF4(v2);
    *(_QWORD *)&result = swift_release(v6).n128_u64[0];
  }
  return result;
}

double sub_10031F6CC(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t Strong;
  double result;
  uint64_t v9;
  void *v10;
  uint64_t KeyPath;
  uint64_t v12;
  uint64_t ObjectType;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v18[24];

  v5 = *a1;
  v6 = a2 + 16;
  swift_beginAccess(a2 + 16, v18, 0, 0);
  Strong = swift_weakLoadStrong(v6);
  if (Strong)
  {
    v9 = Strong;
    v10 = *(void **)(Strong + 16);
    KeyPath = swift_getKeyPath(&unk_10071A8C8);
    v12 = swift_getKeyPath(&unk_10071A8F0);
    v17 = v5;
    static Published.subscript.setter(&v17, v10, KeyPath, v12);
    ObjectType = swift_getObjectType();
    v14 = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 40))(ObjectType, a4);
    v15 = swift_getKeyPath(&unk_10071A910);
    v16 = swift_getKeyPath(&unk_10071A938);
    static Published.subscript.getter(&v17, v14, v15);
    swift_release(v14);
    swift_release(v15);
    swift_release(v16);
    sub_10031FCF4(v17);
    *(_QWORD *)&result = swift_release(v9).n128_u64[0];
  }
  return result;
}

uint64_t OrientationLockHintController.deinit()
{
  uint64_t v0;
  _QWORD v2[4];

  v2[3] = type metadata accessor for OrientationLockHintController();
  v2[0] = v0;
  swift_retain(v0);
  static UIAccessibility.removeAccessibilityStatusChangeObserver(_:)(v2);
  _s5Books15CurrentPageViewVwxx_0(v2);

  sub_1001FE9A0(v0 + 32);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 48));
  swift_release(*(_QWORD *)(v0 + 56));
  return v0;
}

uint64_t type metadata accessor for OrientationLockHintController()
{
  return objc_opt_self(_TtC5Books29OrientationLockHintController);
}

uint64_t OrientationLockHintController.__deallocating_deinit()
{
  uint64_t v0;

  OrientationLockHintController.deinit();
  return swift_deallocClassInstance(v0, 64, 7);
}

void sub_10031F898(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  char v3;
  uint64_t KeyPath;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2 = *(void **)(v1 + 16);
  v3 = static UIAccessibility.accessibilityNavigationServicesEnabled.getter(a1);
  KeyPath = swift_getKeyPath(&unk_10071A880);
  v5 = swift_getKeyPath(&unk_10071A8A8);
  BYTE1(v9) = v3 & 1;
  v6 = v2;
  static Published.subscript.setter((char *)&v9 + 1, v6, KeyPath, v5);
  v7 = swift_getKeyPath(&unk_10071A880);
  v8 = swift_getKeyPath(&unk_10071A8A8);
  static Published.subscript.getter(&v9, v6, v7, v8);
  swift_release(v7);
  swift_release(v8);
  if (v9 == 1)
    sub_10031F99C();
}

void sub_10031F99C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t KeyPath;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t);
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  void *v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD aBlock[5];
  uint64_t v34;

  v1 = v0;
  v2 = type metadata accessor for DispatchTime(0);
  v31 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v4 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)&v31 - v6;
  v8 = type metadata accessor for DispatchWorkItemFlags(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(v0 + 56);
  if (v11)
  {
    v12 = swift_retain(v11);
    dispatch thunk of DispatchWorkItem.cancel()(v12);
    swift_release(v11);
  }
  v13 = swift_allocObject(&unk_1008FCF40, 24, 7);
  swift_weakInit(v13 + 16, v1);
  aBlock[4] = sub_100320154;
  v34 = v13;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000147F0;
  aBlock[3] = &unk_1008FCF58;
  v14 = _Block_copy(aBlock);
  v32 = _swiftEmptyArrayStorage;
  v15 = sub_100008E8C();
  swift_retain(v13);
  v16 = sub_10004CFD4((uint64_t *)&unk_1009DB460);
  v17 = sub_100065324();
  dispatch thunk of SetAlgebra.init<A>(_:)(&v32, v16, v17, v8, v15);
  v18 = type metadata accessor for DispatchWorkItem(0);
  swift_allocObject(v18, *(unsigned int *)(v18 + 48), *(unsigned __int16 *)(v18 + 52));
  v19 = DispatchWorkItem.init(flags:block:)(v10, v14);
  v20 = v34;
  swift_release(v13);
  swift_release(v20);
  v21 = *(_QWORD *)(v1 + 56);
  *(_QWORD *)(v1 + 56) = v19;
  swift_release(v21);
  v22 = *(void **)(v1 + 16);
  KeyPath = swift_getKeyPath(&unk_10071A880);
  v24 = swift_getKeyPath(&unk_10071A8A8);
  LOBYTE(aBlock[0]) = 1;
  v25 = static Published.subscript.setter(aBlock, v22, KeyPath, v24);
  static DispatchTime.now()(v25);
  + infix(_:_:)(v4, 4.0);
  v26 = *(void (**)(char *, uint64_t))(v31 + 8);
  v26(v4, v2);
  v27 = *(_QWORD *)(v1 + 56);
  if (v27)
  {
    v28 = swift_retain(v27);
    if ((static UIAccessibility.accessibilityNavigationServicesEnabled.getter(v28) & 1) != 0)
    {
      v26(v7, v2);
      swift_release(v27);
      return;
    }
    v29 = sub_100059BB4();
    v30 = (void *)static OS_dispatch_queue.main.getter(v29);
    OS_dispatch_queue.asyncAfter(deadline:execute:)(v7, v27);
    swift_release(v27);

  }
  v26(v7, v2);
}

uint64_t sub_10031FC64(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v3;
  id v4;
  uint64_t KeyPath;
  uint64_t v6;
  char v7;
  _BYTE v8[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v8, 0, 0);
  result = swift_weakLoadStrong(v1);
  if (result)
  {
    v3 = result;
    v4 = *(id *)(result + 16);
    swift_release(v3);
    KeyPath = swift_getKeyPath(&unk_10071A880);
    v6 = swift_getKeyPath(&unk_10071A8A8);
    v7 = 0;
    return static Published.subscript.setter(&v7, v4, KeyPath, v6);
  }
  return result;
}

void sub_10031FCF4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v4;
  uint64_t KeyPath;
  uint64_t v6;
  uint64_t Strong;
  uint64_t v8;
  uint64_t v9;
  uint64_t ObjectType;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BOOL4 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  double v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  double v33;
  double v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v2 = v1;
  v4 = *(void **)(v1 + 16);
  KeyPath = swift_getKeyPath("pz.");
  v6 = swift_getKeyPath(&unk_10071A788);
  static Published.subscript.getter(&v39, v4, KeyPath);
  swift_release(KeyPath);
  swift_release(v6);
  if ((v39 & 1) == 0)
  {
    if (a1)
    {
      Strong = swift_unknownObjectWeakLoadStrong(v2 + 32);
      if (Strong)
      {
        v8 = Strong;
        v9 = *(_QWORD *)(v2 + 40);
        ObjectType = swift_getObjectType();
        v11 = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 40))(ObjectType, v9);
        swift_unknownObjectRelease(v8);
        v12 = swift_getKeyPath(&unk_10071A7A8);
        v13 = swift_getKeyPath(&unk_10071A7D0);
        static Published.subscript.getter(&v39, v11, v12);
        swift_release(v11);
        swift_release(v12);
        swift_release(v13);
        if (*(double *)&v39 != 0.0)
        {
          v14 = swift_unknownObjectWeakLoadStrong(v2 + 32);
          if (!v14)
            goto LABEL_7;
          v15 = v14;
          v16 = sub_10004DFF4(a1);
          v17 = *(_QWORD *)(v2 + 40);
          v18 = swift_getObjectType();
          v19 = (*(uint64_t (**)(uint64_t, uint64_t))(v17 + 40))(v18, v17);
          swift_unknownObjectRelease(v15);
          v20 = swift_getKeyPath(&unk_10071A7A8);
          v21 = swift_getKeyPath(&unk_10071A7D0);
          static Published.subscript.getter(&v39, v19, v20);
          swift_release(v19);
          swift_release(v20);
          swift_release(v21);
          if (sub_10004DFF4(v39) != v16)
          {
LABEL_7:
            v22 = *(id *)(*(_QWORD *)(v2 + 24) + OBJC_IVAR___BKEngagementManager_eventController);
            dispatch thunk of EngagementEventController.submitEvent(_:_:)(0xD000000000000020, 0x80000001007BEA10, 0);

          }
        }
      }
    }
  }
  v23 = swift_getKeyPath("pz.");
  v24 = swift_getKeyPath(&unk_10071A788);
  static Published.subscript.getter(&v39, v4, v23);
  swift_release(v23);
  swift_release(v24);
  v25 = 0.0;
  if (v39 == 1)
  {
    v26 = swift_unknownObjectWeakLoadStrong(v2 + 32);
    if (!v26)
      return;
    v27 = v26;
    v28 = *(_QWORD *)(v2 + 40);
    v29 = swift_getObjectType();
    v30 = (*(uint64_t (**)(uint64_t, uint64_t))(v28 + 40))(v29, v28);
    v31 = swift_getKeyPath(&unk_10071A838);
    v32 = swift_getKeyPath(&unk_10071A860);
    static Published.subscript.getter(&v39, v30, v31);
    swift_release(v30);
    swift_unknownObjectRelease(v27);
    swift_release(v31);
    swift_release(v32);
    v33 = 0.0;
    v34 = 0.0;
    if ((unint64_t)(v39 - 2) <= 2)
      v34 = dbl_10071A960[v39 - 2];
    if ((unint64_t)(a1 - 2) <= 2)
      v33 = dbl_10071A960[a1 - 2];
    v25 = v34 - v33;
  }
  v35 = swift_getKeyPath(&unk_10071A7F0);
  v36 = swift_getKeyPath(&unk_10071A818);
  static Published.subscript.getter(&v39, v4, v35);
  swift_release(v35);
  swift_release(v36);
  if (*(double *)&v39 != v25)
  {
    v37 = swift_getKeyPath(&unk_10071A7F0);
    v38 = swift_getKeyPath(&unk_10071A818);
    *(double *)&v39 = v25;
    static Published.subscript.setter(&v39, v4, v37, v38);
  }
}

uint64_t sub_100320088@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t result;

  v4 = type metadata accessor for OrientationLockHintController();
  result = ObservableObject<>.objectWillChange.getter(v4, a1);
  *a2 = result;
  return result;
}

Swift::Void __swiftcall OrientationLockHintController.toggleOrientationLock()()
{
  uint64_t v0;
  uint64_t Strong;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjectType;

  Strong = swift_unknownObjectWeakLoadStrong(v0 + 32);
  if (Strong)
  {
    v3 = Strong;
    v4 = *(_QWORD *)(v0 + 40);
    ObjectType = swift_getObjectType(Strong, v2);
    (*(void (**)(uint64_t))(*(_QWORD *)(v4 + 8) + 8))(ObjectType);
    swift_unknownObjectRelease(v3);
  }
}

uint64_t sub_100320130()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100320154()
{
  uint64_t v0;

  return sub_10031FC64(v0);
}

void sub_100320174()
{
  xmmword_1009DA980 = 0uLL;
}

double sub_100320184@<D0>(_OWORD *a1@<X8>)
{
  double result;

  if (qword_1009CDE78 != -1)
    swift_once(&qword_1009CDE78, sub_100320174);
  result = *(double *)&xmmword_1009DA980;
  *a1 = xmmword_1009DA980;
  return result;
}

double sub_1003201D8(_OWORD *a1, void (*a2)(__int128 *__return_ptr))
{
  double result;
  __int128 v4;

  a2(&v4);
  result = *(double *)&v4;
  *a1 = v4;
  return result;
}

double sub_100320210()
{
  double result;

  result = 0.0;
  xmmword_1009DA990 = 0u;
  unk_1009DA9A0 = 0u;
  return result;
}

double sub_100320224@<D0>(_OWORD *a1@<X8>)
{
  double result;
  __int128 v3;

  if (qword_1009CDE80 != -1)
    swift_once(&qword_1009CDE80, sub_100320210);
  result = *(double *)&xmmword_1009DA990;
  v3 = unk_1009DA9A0;
  *a1 = xmmword_1009DA990;
  a1[1] = v3;
  return result;
}

double sub_100320278(_OWORD *a1, void (*a2)(_OWORD *__return_ptr))
{
  double result;
  __int128 v4;
  _OWORD v5[2];

  a2(v5);
  result = *(double *)v5;
  v4 = v5[1];
  *a1 = v5[0];
  a1[1] = v4;
  return result;
}

void sub_1003202B0(uint64_t a1@<X8>)
{
  uint64_t v2;
  double v3;
  uint64_t v4;

  v2 = static Color.clear.getter();
  v3 = GeometryProxy.size.getter();
  *(_QWORD *)a1 = v2;
  *(double *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
}

uint64_t sub_1003202EC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;

  v2 = type metadata accessor for GlobalCoordinateSpace(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = static Color.clear.getter(v4);
  static CoordinateSpaceProtocol<>.global.getter();
  v8 = GeometryProxy.frame<A>(in:)(v6, v2, &protocol witness table for GlobalCoordinateSpace);
  v10 = v9;
  v12 = v11;
  v14 = v13;
  result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  *a1 = v7;
  *((double *)a1 + 1) = v8;
  a1[2] = v10;
  a1[3] = v12;
  a1[4] = v14;
  return result;
}

ValueMetadata *type metadata accessor for ViewSizingKey()
{
  return &type metadata for ViewSizingKey;
}

ValueMetadata *type metadata accessor for ViewFrameKey()
{
  return &type metadata for ViewFrameKey;
}

void sub_1003203D8(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD v8[3];

  sub_100321650(319, &qword_1009DAA30, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
  if (v3 <= 0x3F)
  {
    v8[0] = *(_QWORD *)(v2 - 8) + 64;
    v4 = swift_checkMetadataState(319, *(_QWORD *)(a1 + 16));
    if (v5 <= 0x3F)
    {
      v8[1] = *(_QWORD *)(v4 - 8) + 64;
      sub_100321650(319, (unint64_t *)&qword_1009D3A88, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
      if (v7 <= 0x3F)
      {
        v8[2] = *(_QWORD *)(v6 - 8) + 64;
        swift_initStructMetadata(a1, 0, 3, v8, a1 + 32);
      }
    }
  }
}

uint64_t *sub_10032049C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  size_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  size_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  _QWORD *v24;
  uint64_t *v25;
  unsigned int v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v6 = type metadata accessor for ContentSizeCategory(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  if (*(_DWORD *)(v7 + 84))
    v9 = *(_QWORD *)(v7 + 64);
  else
    v9 = v8 + 1;
  v10 = *(_QWORD *)(a3 + 16);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_DWORD *)(v11 + 80);
  v13 = v9 + v12;
  v14 = *(_QWORD *)(v11 + 64);
  v15 = *(_DWORD *)(v7 + 80);
  v16 = v15 | 7;
  v17 = 8;
  if (v8 > 8)
    v17 = *(_QWORD *)(v7 + 64);
  if ((v15 | v12) > 7
    || ((*(_DWORD *)(v7 + 80) | *(_DWORD *)(v11 + 80)) & 0x100000) != 0
    || v17 + ((v16 + v14 + ((v9 + v12) & ~v12)) & ~v16) + 1 > 0x18)
  {
    v20 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v20 + (((v15 | v12) & 0xF8 ^ 0x1F8) & ((v15 | v12) + 16)));
LABEL_26:
    swift_retain(v20);
    return a1;
  }
  v21 = v6;
  v29 = ~v12;
  v30 = ~v16;
  v31 = v17;
  if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, v9);
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(a1, a2, v21);
    (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v21);
  }
  v22 = ((unint64_t)a1 + v13) & v29;
  v23 = ((unint64_t)a2 + v13) & v29;
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v11 + 16))(v22, v23, v10);
  v24 = (_QWORD *)((v22 + v14 + v16) & v30);
  v25 = (uint64_t *)((v23 + v14 + v16) & v30);
  v26 = *((unsigned __int8 *)v25 + v31);
  if (v26 >= 2)
  {
    if (v31 <= 3)
      v27 = v31;
    else
      v27 = 4;
    __asm { BR              X12 }
  }
  if (v26 != 1)
  {
    v20 = *v25;
    *v24 = *v25;
    *((_BYTE *)v24 + v31) = 0;
    goto LABEL_26;
  }
  (*(void (**)(unint64_t))(v7 + 16))((v22 + v14 + v16) & v30);
  *((_BYTE *)v24 + v31) = 1;
  return a1;
}

uint64_t sub_1003206F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t v14;

  v4 = type metadata accessor for ContentSizeCategory(0);
  v5 = *(_QWORD *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  v8 = v6 + a1;
  if (!*(_DWORD *)(v5 + 84))
    ++v8;
  v9 = (v8 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  (*(void (**)(unint64_t))(v7 + 8))(v9);
  v10 = *(_DWORD *)(v5 + 80) & 0xF8 | 7;
  v11 = (_QWORD *)((v9 + *(_QWORD *)(v7 + 64) + v10) & ~v10);
  v12 = 8;
  if (v6 > 8)
    v12 = v6;
  v13 = *((unsigned __int8 *)v11 + v12);
  if (v13 >= 2)
  {
    if (v12 <= 3)
      v14 = v12;
    else
      v14 = 4;
    __asm { BR              X13 }
  }
  if (v13 == 1)
    return (*(uint64_t (**)(void))(v5 + 8))();
  else
    return swift_release(*v11);
}

void *sub_100320850(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  int v8;
  unint64_t v9;
  size_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t *v20;
  uint64_t v21;
  unsigned int v22;
  uint64_t v23;
  char v24;
  uint64_t v25;

  v6 = type metadata accessor for ContentSizeCategory(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = *(_DWORD *)(v7 + 84);
    v9 = *(_QWORD *)(v7 + 64);
    if (v8)
      v10 = *(_QWORD *)(v7 + 64);
    else
      v10 = v9 + 1;
    memcpy(a1, a2, v10);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
    v8 = *(_DWORD *)(v7 + 84);
    v9 = *(_QWORD *)(v7 + 64);
  }
  if (v8)
    v11 = v9;
  else
    v11 = v9 + 1;
  v12 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v13 = *(unsigned __int8 *)(v12 + 80);
  v14 = v11 + v13;
  v15 = ((unint64_t)a1 + v14) & ~v13;
  v16 = ((unint64_t)a2 + v14) & ~v13;
  (*(void (**)(unint64_t, unint64_t))(v12 + 16))(v15, v16);
  v17 = *(_DWORD *)(v7 + 80) & 0xF8 | 7;
  v18 = *(_QWORD *)(v12 + 64) + v17;
  v19 = (_QWORD *)((v18 + v15) & ~v17);
  v20 = (uint64_t *)((v18 + v16) & ~v17);
  if (v9 <= 8)
    v21 = 8;
  else
    v21 = v9;
  v22 = *((unsigned __int8 *)v20 + v21);
  if (v22 >= 2)
  {
    if (v21 <= 3)
      v23 = v21;
    else
      v23 = 4;
    __asm { BR              X12 }
  }
  if (v22 == 1)
  {
    (*(void (**)(_QWORD *))(v7 + 16))(v19);
    v24 = 1;
  }
  else
  {
    v25 = *v20;
    *v19 = *v20;
    swift_retain(v25);
    v24 = 0;
  }
  *((_BYTE *)v19 + v21) = v24;
  return a1;
}

void *sub_100320A18(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void *, uint64_t, uint64_t);
  int v9;
  int v10;
  size_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t *v22;
  uint64_t v23;
  unsigned int v24;
  uint64_t v25;
  unsigned int v26;
  uint64_t v27;
  uint64_t v28;

  v6 = type metadata accessor for ContentSizeCategory(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_10;
    }
  }
  else
  {
    if (!v10)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 24))(a1, a2, v6);
      goto LABEL_10;
    }
    (*(void (**)(void *, uint64_t))(v7 + 8))(a1, v6);
  }
  if (*(_DWORD *)(v7 + 84))
    v11 = *(_QWORD *)(v7 + 64);
  else
    v11 = *(_QWORD *)(v7 + 64) + 1;
  memcpy(a1, a2, v11);
LABEL_10:
  v12 = *(_QWORD *)(v7 + 64);
  if (*(_DWORD *)(v7 + 84))
    v13 = *(_QWORD *)(v7 + 64);
  else
    v13 = v12 + 1;
  v14 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v15 = *(unsigned __int8 *)(v14 + 80);
  v16 = v13 + v15;
  v17 = ((unint64_t)a1 + v16) & ~v15;
  v18 = ((unint64_t)a2 + v16) & ~v15;
  (*(void (**)(unint64_t, unint64_t))(v14 + 24))(v17, v18);
  v19 = *(_DWORD *)(v7 + 80) & 0xF8 | 7;
  v20 = *(_QWORD *)(v14 + 64) + v19;
  v21 = (uint64_t *)((v20 + v17) & ~v19);
  v22 = (uint64_t *)((v20 + v18) & ~v19);
  if (v21 != v22)
  {
    if (v12 <= 8)
      v23 = 8;
    else
      v23 = v12;
    v24 = *((unsigned __int8 *)v21 + v23);
    if (v24 >= 2)
    {
      if (v23 <= 3)
        v25 = v23;
      else
        v25 = 4;
      __asm { BR              X12 }
    }
    if (v24 == 1)
      (*(void (**)(uint64_t *, uint64_t))(v7 + 8))(v21, v6);
    else
      swift_release(*v21);
    v26 = *((unsigned __int8 *)v22 + v23);
    if (v26 >= 2)
    {
      if (v23 <= 3)
        v27 = v23;
      else
        v27 = 4;
      __asm { BR              X12 }
    }
    if (v26 == 1)
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(v21, v22, v6);
      *((_BYTE *)v21 + v23) = 1;
    }
    else
    {
      v28 = *v22;
      *v21 = *v22;
      *((_BYTE *)v21 + v23) = 0;
      swift_retain(v28);
    }
  }
  return a1;
}

void *sub_100320CC4(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  int v8;
  unint64_t v9;
  size_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  unsigned int v22;
  uint64_t v23;
  char v24;

  v6 = type metadata accessor for ContentSizeCategory(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = *(_DWORD *)(v7 + 84);
    v9 = *(_QWORD *)(v7 + 64);
    if (v8)
      v10 = *(_QWORD *)(v7 + 64);
    else
      v10 = v9 + 1;
    memcpy(a1, a2, v10);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
    v8 = *(_DWORD *)(v7 + 84);
    v9 = *(_QWORD *)(v7 + 64);
  }
  if (v8)
    v11 = v9;
  else
    v11 = v9 + 1;
  v12 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v13 = *(unsigned __int8 *)(v12 + 80);
  v14 = v11 + v13;
  v15 = ((unint64_t)a1 + v14) & ~v13;
  v16 = ((unint64_t)a2 + v14) & ~v13;
  (*(void (**)(unint64_t, unint64_t))(v12 + 32))(v15, v16);
  v17 = *(_DWORD *)(v7 + 80) & 0xF8 | 7;
  v18 = *(_QWORD *)(v12 + 64) + v17;
  v19 = (_QWORD *)((v18 + v15) & ~v17);
  v20 = (_QWORD *)((v18 + v16) & ~v17);
  if (v9 <= 8)
    v21 = 8;
  else
    v21 = v9;
  v22 = *((unsigned __int8 *)v20 + v21);
  if (v22 >= 2)
  {
    if (v21 <= 3)
      v23 = v21;
    else
      v23 = 4;
    __asm { BR              X12 }
  }
  if (v22 == 1)
  {
    (*(void (**)(_QWORD *))(v7 + 32))(v19);
    v24 = 1;
  }
  else
  {
    v24 = 0;
    *v19 = *v20;
  }
  *((_BYTE *)v19 + v21) = v24;
  return a1;
}

void *sub_100320E88(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void *, uint64_t, uint64_t);
  int v9;
  int v10;
  size_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  unsigned int v24;
  uint64_t v25;
  unsigned int v26;
  uint64_t v27;
  char v28;

  v6 = type metadata accessor for ContentSizeCategory(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 32))(a1, a2, v6);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_10;
    }
  }
  else
  {
    if (!v10)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 40))(a1, a2, v6);
      goto LABEL_10;
    }
    (*(void (**)(void *, uint64_t))(v7 + 8))(a1, v6);
  }
  if (*(_DWORD *)(v7 + 84))
    v11 = *(_QWORD *)(v7 + 64);
  else
    v11 = *(_QWORD *)(v7 + 64) + 1;
  memcpy(a1, a2, v11);
LABEL_10:
  v12 = *(_QWORD *)(v7 + 64);
  if (*(_DWORD *)(v7 + 84))
    v13 = *(_QWORD *)(v7 + 64);
  else
    v13 = v12 + 1;
  v14 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v15 = *(unsigned __int8 *)(v14 + 80);
  v16 = v13 + v15;
  v17 = ((unint64_t)a1 + v16) & ~v15;
  v18 = ((unint64_t)a2 + v16) & ~v15;
  (*(void (**)(unint64_t, unint64_t))(v14 + 40))(v17, v18);
  v19 = *(_DWORD *)(v7 + 80) & 0xF8 | 7;
  v20 = *(_QWORD *)(v14 + 64) + v19;
  v21 = (_QWORD *)((v20 + v17) & ~v19);
  v22 = (_QWORD *)((v20 + v18) & ~v19);
  if (v21 != v22)
  {
    if (v12 <= 8)
      v23 = 8;
    else
      v23 = v12;
    v24 = *((unsigned __int8 *)v21 + v23);
    if (v24 >= 2)
    {
      if (v23 <= 3)
        v25 = v23;
      else
        v25 = 4;
      __asm { BR              X12 }
    }
    if (v24 == 1)
      (*(void (**)(_QWORD *, uint64_t))(v7 + 8))(v21, v6);
    else
      swift_release(*v21);
    v26 = *((unsigned __int8 *)v22 + v23);
    if (v26 >= 2)
    {
      if (v23 <= 3)
        v27 = v23;
      else
        v27 = 4;
      __asm { BR              X12 }
    }
    if (v26 == 1)
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v7 + 32))(v21, v22, v6);
      v28 = 1;
    }
    else
    {
      v28 = 0;
      *v21 = *v22;
    }
    *((_BYTE *)v21 + v23) = v28;
  }
  return a1;
}

uint64_t sub_100321130(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v6;
  unsigned int v7;
  unsigned int v8;
  uint64_t v9;
  unsigned int v10;
  unsigned int v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  int v20;
  unsigned int v21;
  int v22;
  int v23;
  uint64_t v24;
  unsigned int v25;
  unsigned int v26;

  v6 = *(_QWORD *)(type metadata accessor for ContentSizeCategory(0) - 8);
  v7 = *(_DWORD *)(v6 + 84);
  if (v7)
    v8 = v7 - 1;
  else
    v8 = 0;
  v9 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v10 = *(_DWORD *)(v9 + 84);
  if (v10 <= v8)
    v11 = v8;
  else
    v11 = *(_DWORD *)(v9 + 84);
  v12 = *(_QWORD *)(v6 + 64);
  v13 = 8;
  if (v12 > 8)
    v13 = *(_QWORD *)(v6 + 64);
  if (v11 <= 0xFE)
    v11 = 254;
  if (!v7)
    ++v12;
  if (!a2)
    return 0;
  v14 = *(unsigned __int8 *)(v9 + 80);
  v15 = v12 + v14;
  v16 = *(_QWORD *)(v9 + 64);
  v17 = *(_DWORD *)(v6 + 80) & 0xF8 | 7;
  if (a2 > v11)
  {
    v18 = v13 + ((v16 + v17 + (v15 & ~v14)) & ~v17) + 1;
    v19 = 8 * v18;
    if (v18 > 3)
      goto LABEL_16;
    v21 = ((a2 - v11 + ~(-1 << v19)) >> v19) + 1;
    if (HIWORD(v21))
    {
      v20 = *(_DWORD *)(a1 + v18);
      if (!v20)
        goto LABEL_32;
      goto LABEL_23;
    }
    if (v21 > 0xFF)
    {
      v20 = *(unsigned __int16 *)(a1 + v18);
      if (!*(_WORD *)(a1 + v18))
        goto LABEL_32;
      goto LABEL_23;
    }
    if (v21 >= 2)
    {
LABEL_16:
      v20 = *(unsigned __int8 *)(a1 + v18);
      if (!*(_BYTE *)(a1 + v18))
        goto LABEL_32;
LABEL_23:
      v22 = (v20 - 1) << v19;
      if (v18 > 3)
        v22 = 0;
      if ((_DWORD)v13 + (((_DWORD)v16 + (_DWORD)v17 + (v15 & ~(_DWORD)v14)) & ~(_DWORD)v17) != -1)
      {
        if (v18 <= 3)
          v23 = v13 + ((v16 + v17 + (v15 & ~(_DWORD)v14)) & ~(_DWORD)v17) + 1;
        else
          v23 = 4;
        __asm { BR              X12 }
      }
      return v11 + v22 + 1;
    }
  }
LABEL_32:
  if (v8 == v11)
  {
    if (v7 < 2)
      return 0;
    v25 = (*(uint64_t (**)(uint64_t))(v6 + 48))(a1);
    if (v25 >= 2)
      return v25 - 1;
    else
      return 0;
  }
  else
  {
    v24 = (v15 + a1) & ~v14;
    if (v10 == v11)
    {
      return (*(uint64_t (**)(uint64_t, _QWORD))(v9 + 48))(v24, *(unsigned int *)(v9 + 84));
    }
    else
    {
      v26 = *(unsigned __int8 *)(((v24 + v16 + v17) & ~v17) + v13);
      if (v26 >= 2)
        return (v26 ^ 0xFF) + 1;
      else
        return 0;
    }
  }
}

void sub_100321344(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unsigned int v8;
  uint64_t v9;
  int v10;
  unsigned int v11;
  uint64_t v12;
  unsigned int v13;
  unint64_t v14;
  uint64_t v15;
  size_t v16;
  unsigned int v17;
  unsigned int v18;
  int v19;

  v8 = 0;
  v9 = *(_QWORD *)(type metadata accessor for ContentSizeCategory(0) - 8);
  v10 = *(_DWORD *)(v9 + 84);
  if (v10)
    v11 = v10 - 1;
  else
    v11 = 0;
  v12 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v12 + 84) <= v11)
    v13 = v11;
  else
    v13 = *(_DWORD *)(v12 + 84);
  v14 = *(_QWORD *)(v9 + 64);
  v15 = 8;
  if (v14 > 8)
    v15 = *(_QWORD *)(v9 + 64);
  if (v13 <= 0xFE)
    v13 = 254;
  if (!v10)
    ++v14;
  v16 = ((*(_QWORD *)(v12 + 64)
        + (*(_DWORD *)(v9 + 80) & 0xF8 | 7)
        + ((v14 + *(unsigned __int8 *)(v12 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80))) & ~(*(_DWORD *)(v9 + 80) & 0xF8 | 7))
      + v15
      + 1;
  if (a3 > v13)
  {
    if (v16 > 3)
    {
      v8 = &_mh_execute_header.magic + 1;
      if (v13 >= a2)
LABEL_29:
        __asm { BR              X7 }
LABEL_22:
      v18 = ~v13 + a2;
      if (v16 < 4)
      {
        if ((_DWORD)v16)
        {
          v19 = v18 & ~(-1 << (8 * v16));
          bzero(a1, v16);
          if ((_DWORD)v16 == 3)
          {
            *(_WORD *)a1 = v19;
            a1[2] = BYTE2(v19);
          }
          else if ((_DWORD)v16 == 2)
          {
            *(_WORD *)a1 = v19;
          }
          else
          {
            *a1 = v19;
          }
        }
      }
      else
      {
        bzero(a1, v16);
        *(_DWORD *)a1 = v18;
      }
      __asm { BR              X10 }
    }
    v17 = ((a3 - v13 + ~(-1 << (8 * v16))) >> (8 * v16)) + 1;
    if (HIWORD(v17))
    {
      v8 = &dword_100000004;
      if (v13 >= a2)
        goto LABEL_29;
      goto LABEL_22;
    }
    if (v17 >= 0x100)
      v8 = 2;
    else
      v8 = v17 > 1;
  }
  if (v13 >= a2)
    goto LABEL_29;
  goto LABEL_22;
}

void sub_1003215A0()
{
  uint64_t v0;
  char v1;
  uint64_t v2;

  *(_BYTE *)(v0 + v2) = v1;
}

void sub_1003215A8()
{
  uint64_t v0;
  __int16 v1;
  uint64_t v2;

  *(_WORD *)(v0 + v2) = v1;
}

void sub_100321618()
{
  _BYTE *v0;
  char v1;

  *v0 = v1;
}

void sub_100321620()
{
  uint64_t v0;
  int v1;

  *(_WORD *)v0 = v1;
  *(_BYTE *)(v0 + 2) = BYTE2(v1);
}

void sub_100321630()
{
  _WORD *v0;
  __int16 v1;

  *v0 = v1;
}

void sub_100321638()
{
  _DWORD *v0;
  int v1;

  *v0 = v1;
}

uint64_t type metadata accessor for ContentSizeCategoryLimiter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10000D3D4(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ContentSizeCategoryLimiter);
}

void sub_100321650(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = type metadata accessor for ContentSizeCategory(255);
    v7 = a3(a1, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1003216A8(uint64_t a1, uint64_t a2)
{
  __int128 v3;

  v3 = *(_OWORD *)(a2 + 16);
  return swift_getOpaqueTypeConformance2(&v3, &unk_10086BF84, 1);
}

uint64_t sub_1003216DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  char v27;
  __n128 v28;
  void (*v29)(char *, uint64_t, __n128);
  uint64_t v31;
  uint64_t v32;

  v3 = v2;
  v6 = sub_10004CFD4(&qword_1009D8918);
  __chkstk_darwin(v6);
  v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for ContentSizeCategory(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v31 - v14;
  sub_100321B10(v3, (uint64_t)v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_100321B58((uint64_t)v8);
  }
  else
  {
    v32 = a2;
    v16 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
    v16(v15, v8, v9);
    v31 = a1;
    v17 = sub_100667DF8((uint64_t)v12);
    v18 = static ContentSizeCategory.allCases.getter(v17);
    v19 = sub_1004EF590((uint64_t)v12, v18);
    v21 = v20;
    swift_bridgeObjectRelease(v18);
    if ((v21 & 1) != 0)
      v23 = 0;
    else
      v23 = v19;
    v24 = static ContentSizeCategory.allCases.getter(v22);
    v25 = sub_1004EF590((uint64_t)v15, v24);
    v27 = v26;
    v28 = swift_bridgeObjectRelease(v24);
    if ((v27 & 1) != 0)
      v25 = 0;
    v29 = *(void (**)(char *, uint64_t, __n128))(v10 + 8);
    v29(v12, v9, v28);
    if (v25 < v23)
      return ((uint64_t (*)(uint64_t, char *, uint64_t))v16)(v32, v15, v9);
    ((void (*)(char *, uint64_t))v29)(v15, v9);
    a2 = v32;
  }
  return sub_100667DF8(a2);
}

uint64_t sub_1003218B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  double v17;
  uint64_t v18;
  char *v19;
  uint64_t KeyPath;
  uint64_t v21;
  __n128 v22;
  unint64_t v23;
  void (*v24)(char *, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;

  v29 = a2;
  v4 = type metadata accessor for ContentSizeCategory(0);
  v27 = *(_QWORD *)(v4 - 8);
  v28 = v4;
  __chkstk_darwin(v4);
  v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(a1 + 16);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v9);
  v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100030B74(&qword_1009D8960);
  v13 = type metadata accessor for ModifiedContent(0, v7, v12);
  v26 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v15 = (char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __chkstk_darwin(v16);
  v19 = (char *)&v26 - v18;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v8 + 16))(v11, v2 + *(int *)(a1 + 36), v7, v17);
  KeyPath = swift_getKeyPath(&unk_10071AB60);
  sub_1003216DC(a1, (uint64_t)v6);
  v21 = *(_QWORD *)(a1 + 24);
  View.environment<A>(_:_:)(KeyPath, v6, v7, v21);
  v22 = swift_release(KeyPath);
  (*(void (**)(char *, uint64_t, __n128))(v27 + 8))(v6, v28, v22);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
  v23 = sub_100321AC4();
  v30 = v21;
  v31 = v23;
  swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v13);
  sub_100344038((uint64_t)v15, v13, (uint64_t)v19);
  v24 = *(void (**)(char *, uint64_t))(v26 + 8);
  v24(v15, v13);
  sub_100341C00((uint64_t)v19, v13, v29);
  return ((uint64_t (*)(char *, uint64_t))v24)(v19, v13);
}

unint64_t sub_100321AC4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009D8998;
  if (!qword_1009D8998)
  {
    v1 = sub_100030B74(&qword_1009D8960);
    result = swift_getWitnessTable(&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1009D8998);
  }
  return result;
}

uint64_t sub_100321B10(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10004CFD4(&qword_1009D8918);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100321B58(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10004CFD4(&qword_1009D8918);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100321B98(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *a1;
  v2 = sub_100030B74(&qword_1009D8960);
  v3 = type metadata accessor for ModifiedContent(255, v1, v2);
  sub_100321AC4();
  return swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v3);
}

id sub_100321BF8(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSString v6;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  v2 = *(_QWORD *)(a1 + 40);
  v3 = swift_retain(v2);
  v1(v3);
  v5 = v4;
  swift_release(v2);
  if (v5)
  {
    v6 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v5);
  }
  else
  {
    v6 = 0;
  }
  return v6;
}

uint64_t _s12RemoteConfigCMa()
{
  return objc_opt_self(DebugViewControllerRemoteConfig);
}

id sub_100321D58()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  uint64_t v8;
  id v9;
  NSString v10;
  void *v11;
  id v12;
  uint64_t v13;
  void **v14;
  id v15;
  NSString v16;
  Class isa;
  id v18;
  void **v20;
  uint64_t v21;
  void *v22;
  void *v23;
  void *v24;
  uint64_t v25;

  v1 = sub_10004CFD4((uint64_t *)&unk_1009D4750);
  v2 = swift_allocObject(v1, 40, 7);
  *(_OWORD *)(v2 + 16) = xmmword_1007118F0;
  v3 = swift_allocObject(&unk_1008FD108, 24, 7);
  *(_QWORD *)(v3 + 16) = v0;
  v24 = sub_100322074;
  v25 = v3;
  v20 = _NSConcreteStackBlock;
  v21 = 1107296256;
  v22 = sub_100321BF8;
  v23 = &unk_1008FD120;
  v4 = _Block_copy(&v20);
  v5 = (void *)objc_opt_self(BKDebugViewCellModel);
  v6 = v0;
  v7 = objc_msgSend(v5, "modelWithDetailLineBreakMode:detailTextBlock:", 0, v4);
  _Block_release(v4);
  swift_release(v25);
  v8 = swift_allocObject(&unk_1008FD158, 24, 7);
  *(_QWORD *)(v8 + 16) = v6;
  v9 = v6;
  v10 = String._bridgeToObjectiveC()();
  v24 = sub_10032207C;
  v25 = v8;
  v20 = _NSConcreteStackBlock;
  v21 = 1107296256;
  v22 = sub_1005A4264;
  v23 = &unk_1008FD170;
  v11 = _Block_copy(&v20);
  swift_release(v25);
  v12 = objc_msgSend((id)objc_opt_self(BKDebugViewEntry), "entryWithTitle:model:action:", v10, v7, v11);

  _Block_release(v11);
  *(_QWORD *)(v2 + 32) = v12;
  v20 = (void **)v2;
  specialized Array._endMutation()(v13);
  v14 = v20;
  v15 = objc_allocWithZone((Class)BKDebugViewSection);
  v16 = String._bridgeToObjectiveC()();
  sub_10032209C();
  isa = Array._bridgeToObjectiveC()().super.isa;
  v18 = objc_msgSend(v15, "initWithHeaderTitle:entries:footerTitle:", v16, isa, 0, swift_bridgeObjectRelease(v14).n128_f64[0]);

  return v18;
}

uint64_t sub_100321FB4()
{
  id v0;
  uint64_t v1;
  Swift::String v2;
  uint64_t v4;

  v0 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  v1 = NSUserDefaults.rcDataContainerWatchedKeyPaths.getter();

  swift_bridgeObjectRelease(v1);
  v4 = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
  v2._countAndFlagsBits = 0x2973286D65746920;
  v2._object = (void *)0xE800000000000000;
  String.append(_:)(v2);
  return v4;
}

uint64_t sub_100322050()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100322074()
{
  return sub_100321FB4();
}

void sub_10032207C()
{
  sub_1003220D8();
}

unint64_t sub_10032209C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009D57C8;
  if (!qword_1009D57C8)
  {
    v1 = objc_opt_self(BKDebugViewEntry);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1009D57C8);
  }
  return result;
}

void sub_1003220D8()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t KeyPath;
  uint64_t *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  void *v18;
  void *Strong;
  void *v20;
  _QWORD v22[2];
  __int128 v23;
  uint64_t v24;

  v1 = v0;
  v2 = _s23MultilineTextEditorViewVMa(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v22[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  v6 = NSUserDefaults.rcDataContainerWatchedKeyPaths.getter();

  *(_QWORD *)&v23 = v6;
  v7 = sub_10004CFD4((uint64_t *)&unk_1009E8850);
  v8 = sub_100030B34((unint64_t *)&qword_1009D8840, (uint64_t *)&unk_1009E8850, (uint64_t)&protocol conformance descriptor for [A]);
  v9 = BidirectionalCollection<>.joined(separator:)(10, 0xE100000000000000, v7, v8);
  v11 = v10;
  swift_bridgeObjectRelease(v6);
  v12 = swift_allocObject(&unk_1008FD1A8, 24, 7);
  *(_QWORD *)(v12 + 16) = v1;
  objc_allocWithZone((Class)_s29MultilineTextEditorControllerCMa(0));
  KeyPath = swift_getKeyPath(" y.");
  v14 = (uint64_t *)&v4[*(int *)(v2 + 32)];
  *v14 = KeyPath;
  v15 = sub_10004CFD4(&qword_1009D57D8);
  swift_storeEnumTagMultiPayload(v14, v15, 0);
  v22[0] = v9;
  v22[1] = v11;
  v16 = v1;
  swift_retain(v12);
  State.init(wrappedValue:)(&v23, v22, &type metadata for String);
  v17 = v24;
  *(_OWORD *)v4 = v23;
  *((_QWORD *)v4 + 2) = v17;
  *((_QWORD *)v4 + 3) = 0;
  *((_QWORD *)v4 + 4) = 0xE000000000000000;
  *((_QWORD *)v4 + 5) = sub_1003222D8;
  *((_QWORD *)v4 + 6) = 0;
  *((_QWORD *)v4 + 7) = sub_10032262C;
  *((_QWORD *)v4 + 8) = v12;
  v18 = (void *)UIHostingController.init(rootView:)(v4);
  swift_release(v12);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(&v16[OBJC_IVAR___DebugViewControllerRemoteConfig_owner]);
  if (Strong)
  {
    v20 = Strong;
    objc_msgSend(Strong, "present::", v18, 1);

  }
}

uint64_t sub_1003222D8(uint64_t a1, unint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t);
  uint64_t v22;
  int v23;
  uint64_t v25;
  _QWORD *v26;
  unint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;

  v4 = sub_10004CFD4(&qword_1009DAA68);
  __chkstk_darwin(v4);
  v32 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = sub_10004CFD4(&qword_1009D1BF0);
  v31 = *(_QWORD *)(v28 - 8);
  __chkstk_darwin(v28);
  v30 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v29 = (char *)&v25 - v8;
  v9 = sub_100322634(a1, a2);
  v10 = v9[2];
  if (v10)
  {
    v11 = v9 + 5;
    v26 = v9;
    v27 = 0x80000001007BF6F0;
    v12 = v29;
    v13 = v30;
    while (1)
    {
      v14 = *(v11 - 1);
      v15 = *v11;
      swift_bridgeObjectRetain(*v11);
      v16 = Regex.init(_regexString:version:)(0xD000000000000018, v27, 1, &type metadata for Substring);
      __chkstk_darwin(v16);
      *(&v25 - 2) = (uint64_t)v12;
      v17 = sub_100030B34((unint64_t *)&qword_1009D1C00, &qword_1009D1BF0, (uint64_t)&protocol conformance descriptor for Regex<A>);
      v18 = v28;
      Regex.init<A>(_:)(sub_10032370C, &v25 - 4, &type metadata for Substring, v28, v17);
      v33 = v14;
      v34 = v15;
      v19 = sub_100048F7C();
      v20 = (uint64_t)v32;
      BidirectionalCollection<>.wholeMatch<A>(of:)(v13, &type metadata for String, v18, v19, v17);
      v21 = *(void (**)(char *, uint64_t))(v31 + 8);
      v21(v13, v18);
      v22 = sub_10004CFD4(&qword_1009DAA70);
      v23 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 48))(v20, 1, v22);
      sub_100010960(v20, &qword_1009DAA68);
      v21(v12, v18);
      swift_bridgeObjectRelease(v15);
      if (v23 == 1)
        break;
      v11 += 2;
      if (!--v10)
      {
        v9 = v26;
        goto LABEL_6;
      }
    }
    swift_bridgeObjectRelease(v26);
    return 0;
  }
  else
  {
LABEL_6:
    swift_bridgeObjectRelease(v9);
    return 1;
  }
}

void sub_10032254C(uint64_t a1, unint64_t a2, uint64_t a3)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *Strong;
  void *v9;
  id v10;

  v4 = sub_100322634(a1, a2);
  sub_100323380((uint64_t)v4);
  v6 = v5;
  swift_bridgeObjectRelease(v4);
  v7 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  NSUserDefaults.rcDataContainerWatchedKeyPaths.setter(v6);

  Strong = (void *)swift_unknownObjectWeakLoadStrong(a3 + OBJC_IVAR___DebugViewControllerRemoteConfig_owner);
  if (Strong)
  {
    v9 = Strong;
    v10 = objc_msgSend(Strong, "tableView");

    if (v10)
    {
      objc_msgSend(v10, "reloadData");

    }
    else
    {
      __break(1u);
    }
  }
}

void sub_10032262C(uint64_t a1, unint64_t a2)
{
  uint64_t v2;

  sub_10032254C(a1, a2, *(_QWORD *)(v2 + 16));
}

_QWORD *sub_100322634(uint64_t a1, unint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  int64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;

  swift_bridgeObjectRetain(a2);
  v4 = sub_10032276C(0x7FFFFFFFFFFFFFFFLL, 1, a1, a2);
  v5 = v4;
  v6 = *(_QWORD *)(v4 + 16);
  if (v6)
  {
    sub_100045E44(0, v6, 0);
    v7 = (_QWORD *)(v5 + 56);
    do
    {
      v8 = *(v7 - 3);
      v9 = *(v7 - 2);
      v10 = *(v7 - 1);
      v11 = *v7;
      v12 = swift_bridgeObjectRetain(*v7);
      v13 = static String._fromSubstring(_:)(v8, v9, v10, v11, v12);
      v15 = v14;
      swift_bridgeObjectRelease(v11);
      v17 = _swiftEmptyArrayStorage[2];
      v16 = _swiftEmptyArrayStorage[3];
      if (v17 >= v16 >> 1)
        sub_100045E44(v16 > 1, v17 + 1, 1);
      _swiftEmptyArrayStorage[2] = v17 + 1;
      v18 = &_swiftEmptyArrayStorage[2 * v17];
      v18[4] = v13;
      v18[5] = v15;
      v7 += 4;
      --v6;
    }
    while (v6);
    swift_bridgeObjectRelease(v5);
  }
  else
  {
    swift_bridgeObjectRelease(v4);
  }
  return _swiftEmptyArrayStorage;
}

uint64_t sub_10032276C(uint64_t a1, char a2, uint64_t a3, unint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __n128 v27;
  unint64_t v28;
  unint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  _QWORD *v44;
  uint64_t result;
  int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  unint64_t v53;

  if (a1 < 0)
    goto LABEL_45;
  v7 = swift_allocObject(&unk_1008FD1D0, 24, 7);
  *(_QWORD *)(v7 + 16) = _swiftEmptyArrayStorage;
  v8 = swift_allocObject(&unk_1008FD1F8, 24, 7);
  *(_QWORD *)(v8 + 16) = 15;
  v9 = HIBYTE(a4) & 0xF;
  if (!a1 || ((a4 & 0x2000000000000000) != 0 ? (v10 = HIBYTE(a4) & 0xF) : (v10 = a3 & 0xFFFFFFFFFFFFLL), !v10))
  {
    if ((a4 & 0x2000000000000000) == 0)
      v9 = a3 & 0xFFFFFFFFFFFFLL;
    v31 = 7;
    if (((a4 >> 60) & ((a3 & 0x800000000000000) == 0)) != 0)
      v31 = 11;
    sub_100323228(v31 | (v9 << 16), v8, a2 & 1, v7, a3, a4);
    swift_bridgeObjectRelease(a4);
    v12 = *(_QWORD **)(v7 + 16);
    swift_bridgeObjectRetain(v12);
    swift_release(v7);
    swift_release(v8);
    return (uint64_t)v12;
  }
  v48 = a1;
  v11 = 7;
  if (((a4 >> 60) & ((a3 & 0x800000000000000) == 0)) != 0)
    v11 = 11;
  v47 = v11 | (v10 << 16);
  v53 = 4 * v10;
  v12 = _swiftEmptyArrayStorage;
  v13 = 15;
  v14 = 15;
  v50 = a4;
  v51 = v7;
  v49 = a3;
  do
  {
    v15 = String.subscript.getter(v13, a3, a4);
    v17 = v16;
    if ((Character.isWhitespace.getter() & 1) != 0)
    {
      v18 = swift_bridgeObjectRelease(v17);
    }
    else if (v15 == 44 && v17 == 0xE100000000000000)
    {
      v18 = swift_bridgeObjectRelease(0xE100000000000000);
    }
    else
    {
      v19 = _stringCompareWithSmolCheck(_:_:expecting:)(v15, v17, 44, 0xE100000000000000, 0);
      v18 = swift_bridgeObjectRelease(v17);
      if ((v19 & 1) == 0)
      {
        v13 = String.index(after:)(v13, a3, a4, v18);
        continue;
      }
    }
    if (v14 >> 14 == v13 >> 14 && (a2 & 1) != 0)
    {
      v13 = String.index(after:)(v13, a3, a4, v18);
      *(_QWORD *)(v8 + 16) = v13;
      v14 = v13;
      continue;
    }
    if (v13 >> 14 < v14 >> 14)
      goto LABEL_44;
    v20 = String.subscript.getter(v14, v13, a3, a4);
    v22 = v21;
    v24 = v23;
    v26 = v25;
    if ((swift_isUniquelyReferenced_nonNull_native(v12) & 1) == 0)
      v12 = sub_1005B0F28(0, v12[2] + 1, 1, v12);
    v29 = v12[2];
    v28 = v12[3];
    if (v29 >= v28 >> 1)
      v12 = sub_1005B0F28((_QWORD *)(v28 > 1), v29 + 1, 1, v12);
    v12[2] = v29 + 1;
    v30 = &v12[4 * v29];
    v30[4] = v20;
    v30[5] = v22;
    v30[6] = v24;
    v30[7] = v26;
    a4 = v50;
    v7 = v51;
    *(_QWORD *)(v51 + 16) = v12;
    a3 = v49;
    v14 = String.index(after:)(v13, v49, v50, v27);
    *(_QWORD *)(v8 + 16) = v14;
    v13 = v14;
    if (v12[2] == v48)
      break;
  }
  while (v53 != v13 >> 14);
  if (v53 == v14 >> 14 && (a2 & 1) != 0)
  {
    swift_bridgeObjectRelease(a4);
LABEL_42:
    swift_bridgeObjectRetain(v12);
    swift_release(v7);
    swift_release(v8);
    return (uint64_t)v12;
  }
  if (v53 >= v14 >> 14)
  {
    v32 = a3;
    v33 = v8;
    v34 = String.subscript.getter(v14, v47, v32, a4);
    v36 = v35;
    v38 = v37;
    v39 = a4;
    v41 = v40;
    swift_bridgeObjectRelease(v39);
    if ((swift_isUniquelyReferenced_nonNull_native(v12) & 1) == 0)
      v12 = sub_1005B0F28(0, v12[2] + 1, 1, v12);
    v43 = v12[2];
    v42 = v12[3];
    if (v43 >= v42 >> 1)
      v12 = sub_1005B0F28((_QWORD *)(v42 > 1), v43 + 1, 1, v12);
    v12[2] = v43 + 1;
    v44 = &v12[4 * v43];
    v44[4] = v34;
    v44[5] = v36;
    v44[6] = v38;
    v44[7] = v41;
    v7 = v51;
    *(_QWORD *)(v51 + 16) = v12;
    v8 = v33;
    goto LABEL_42;
  }
LABEL_44:
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Range requires lowerBound <= upperBound", 39, 2, "Swift/Range.swift", 17, 2, 754, 0);
  __break(1u);
LABEL_45:
  LOBYTE(v46) = 2;
  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Must take zero or more splits", 29, 2, "Swift/Collection.swift", 22, v46, 1552, 0);
  __break(1u);
  return result;
}

uint64_t sub_100322C00@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  __n128 v28;
  void (*v29)(char *, uint64_t);
  char *v30;
  uint64_t v31;
  _QWORD *v32;
  char *v33;
  char *v34;
  uint64_t v35;
  __n128 v36;
  char *v37;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  _QWORD *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;

  v47 = a2;
  v3 = type metadata accessor for _RegexFactory(0);
  v46 = *(_QWORD *)(v3 - 8);
  v40 = v3;
  __chkstk_darwin(v3);
  v5 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10004CFD4(&qword_1009DAA78);
  __chkstk_darwin(v6);
  v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10004CFD4(&qword_1009DAA80);
  v10 = *(_QWORD *)(v9 - 8);
  v44 = v9;
  v45 = v10;
  __chkstk_darwin(v9);
  v41 = (char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v42 = (uint64_t *)((char *)&v39 - v13);
  v14 = sub_10004CFD4(&qword_1009D1BF0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v43 = (char *)&v39 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v19 = (char *)&v39 - v18;
  __chkstk_darwin(v20);
  v22 = (char *)&v39 - v21;
  __chkstk_darwin(v23);
  v25 = (uint64_t *)((char *)&v39 - v24);
  v48 = (char *)&v39 - v24;
  v26 = sub_100030B34((unint64_t *)&qword_1009D1C00, &qword_1009D1BF0, (uint64_t)&protocol conformance descriptor for Regex<A>);
  static RegexComponentBuilder.buildExpression<A>(_:)(v25, a1, v14, v26);
  v27 = type metadata accessor for RegexRepetitionBehavior(0);
  v28.n128_f64[0] = (*(double (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v8, 1, 1, v27);
  makeFactory()(v28);
  sub_100322FAC(a1, (uint64_t)v19);
  _RegexFactory.zeroOrMore<A, B>(_:_:)(v19, v8, &type metadata for Substring, v14, v26);
  sub_100010960((uint64_t)v8, &qword_1009DAA78);
  v29 = *(void (**)(char *, uint64_t))(v15 + 8);
  v29(v19, v14);
  v46 = *(_QWORD *)(v46 + 8);
  ((void (*)(char *, uint64_t))v46)(v5, v3);
  v30 = v41;
  ZeroOrMore.init(_:)(v22, &type metadata for Substring);
  v31 = sub_100030B34(qword_1009DAA88, &qword_1009DAA80, (uint64_t)&protocol conformance descriptor for ZeroOrMore<A>);
  v32 = v42;
  v33 = v30;
  v34 = v30;
  v35 = v44;
  static RegexComponentBuilder.buildExpression<A>(_:)(v42, v33, v44, v31);
  v45 = *(_QWORD *)(v45 + 8);
  ((void (*)(char *, uint64_t))v45)(v34, v35);
  static RegexComponentBuilder.buildPartialBlock<A>(first:)(v48, v14, v26);
  makeFactory()(v36);
  _RegexFactory.ignoreCapturesInTypedOutput<A>(_:)(v22, v14, v26);
  v37 = v43;
  _RegexFactory.ignoreCapturesInTypedOutput<A>(_:)(v32, v35, v31);
  _RegexFactory.accumulate<A, B, C>(_:_:)(v19, v37, &type metadata for Substring, v14, v14, v26, v26);
  v29(v37, v14);
  v29(v19, v14);
  ((void (*)(char *, uint64_t))v46)(v5, v40);
  v29(v22, v14);
  ((void (*)(_QWORD *, uint64_t))v45)(v32, v35);
  return ((uint64_t (*)(char *, uint64_t))v29)(v48, v14);
}

uint64_t sub_100322FAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  __n128 v21;
  void (*v22)(char *, uint64_t);
  _QWORD v24[2];
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;

  v24[1] = a2;
  v3 = type metadata accessor for _RegexFactory(0);
  v25 = *(_QWORD *)(v3 - 8);
  v26 = v3;
  __chkstk_darwin(v3);
  v5 = (char *)v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10004CFD4(&qword_1009D1BF0);
  v24[0] = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v8 = (char *)v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)v24 - v10;
  __chkstk_darwin(v12);
  v14 = (char *)v24 - v13;
  __chkstk_darwin(v15);
  v17 = (_QWORD *)((char *)v24 - v16);
  v27 = 46;
  v28 = 0xE100000000000000;
  v18 = sub_100048FC0();
  static RegexComponentBuilder.buildExpression<A>(_:)(&v29, &v27, &type metadata for String, v18);
  v19 = sub_100030B34((unint64_t *)&qword_1009D1C00, &qword_1009D1BF0, (uint64_t)&protocol conformance descriptor for Regex<A>);
  static RegexComponentBuilder.buildExpression<A>(_:)(v17, a1, v6, v19);
  v20 = v30;
  v27 = v29;
  v28 = v30;
  static RegexComponentBuilder.buildPartialBlock<A>(first:)(&v27, &type metadata for String, v18);
  v21 = swift_bridgeObjectRelease(v20);
  makeFactory()(v21);
  _RegexFactory.ignoreCapturesInTypedOutput<A>(_:)(v14, v6, v19);
  _RegexFactory.ignoreCapturesInTypedOutput<A>(_:)(v17, v6, v19);
  _RegexFactory.accumulate<A, B, C>(_:_:)(v11, v8, &type metadata for Substring, v6, v6, v19, v19);
  v22 = *(void (**)(char *, uint64_t))(v24[0] + 8);
  v22(v8, v6);
  v22(v11, v6);
  (*(void (**)(char *, uint64_t))(v25 + 8))(v5, v26);
  v22(v14, v6);
  return ((uint64_t (*)(_QWORD *, uint64_t))v22)(v17, v6);
}

uint64_t sub_1003231E8()
{
  return EnvironmentValues.dismiss.getter();
}

uint64_t sub_100323208()
{
  return EnvironmentValues.dismiss.getter();
}

uint64_t sub_100323228(unint64_t a1, uint64_t a2, unsigned __int8 a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  unint64_t v7;
  int v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v19;
  unint64_t v20;
  _QWORD *v21;
  uint64_t result;

  v7 = *(_QWORD *)(a2 + 16);
  v8 = (v7 >> 14 == a1 >> 14) & a3;
  if (v8 == 1)
    return v8 ^ 1u;
  if (a1 >> 14 >= v7 >> 14)
  {
    v10 = String.subscript.getter(v7, a1, a5, a6);
    v12 = v11;
    v14 = v13;
    v16 = v15;
    v17 = *(_QWORD **)(a4 + 16);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v17);
    *(_QWORD *)(a4 + 16) = v17;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v17 = sub_1005B0F28(0, v17[2] + 1, 1, v17);
      *(_QWORD *)(a4 + 16) = v17;
    }
    v20 = v17[2];
    v19 = v17[3];
    if (v20 >= v19 >> 1)
    {
      v17 = sub_1005B0F28((_QWORD *)(v19 > 1), v20 + 1, 1, v17);
      *(_QWORD *)(a4 + 16) = v17;
    }
    v17[2] = v20 + 1;
    v21 = &v17[4 * v20];
    v21[4] = v10;
    v21[5] = v12;
    v21[6] = v14;
    v21[7] = v16;
    return v8 ^ 1u;
  }
  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Range requires lowerBound <= upperBound", 39, 2, "Swift/Range.swift", 17, 2, 754, 0);
  __break(1u);
  return result;
}

void sub_100323380(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  unint64_t v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t);
  uint64_t v24;
  int v25;
  uint64_t v26;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v28;
  unint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  unint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  unint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;

  v2 = sub_10004CFD4(&qword_1009DAA68);
  __chkstk_darwin(v2);
  v40 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = sub_10004CFD4(&qword_1009D1BF0);
  v39 = *(_QWORD *)(v37 - 8);
  __chkstk_darwin(v37);
  v38 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v43 = (char *)&v31 - v6;
  v7 = *(_QWORD *)(a1 + 16);
  if (v7)
  {
    v8 = 0;
    v9 = a1 + 40;
    v36 = -(uint64_t)v7;
    v10 = _swiftEmptyArrayStorage;
    v35 = 0x80000001007BF6F0;
    v31 = v9;
    v32 = v7;
    v11 = v37;
    do
    {
      v33 = v10;
      if (v8 <= v7)
        v12 = v7;
      else
        v12 = v8;
      v41 = -(uint64_t)v12;
      v13 = (_QWORD *)(v9 + 16 * v8);
      v14 = v8 + 1;
      while (1)
      {
        if (v41 + v14 == 1)
        {
          __break(1u);
          return;
        }
        v42 = v14;
        v15 = *(v13 - 1);
        v16 = *v13;
        swift_bridgeObjectRetain(*v13);
        v17 = v43;
        v18 = Regex.init(_regexString:version:)(0xD000000000000018, v35, 1, &type metadata for Substring);
        __chkstk_darwin(v18);
        *(&v31 - 2) = (uint64_t)v17;
        v19 = sub_100030B34((unint64_t *)&qword_1009D1C00, &qword_1009D1BF0, (uint64_t)&protocol conformance descriptor for Regex<A>);
        v20 = v38;
        Regex.init<A>(_:)(sub_1003236D0, &v31 - 4, &type metadata for Substring, v11, v19);
        v34 = v15;
        v44 = v15;
        v45 = v16;
        v21 = sub_100048F7C();
        v22 = (uint64_t)v40;
        BidirectionalCollection<>.wholeMatch<A>(of:)(v20, &type metadata for String, v11, v21, v19);
        v23 = *(void (**)(char *, uint64_t))(v39 + 8);
        v23(v20, v11);
        v24 = sub_10004CFD4(&qword_1009DAA70);
        v25 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 48))(v22, 1, v24);
        sub_100010960(v22, &qword_1009DAA68);
        v23(v43, v11);
        if (v25 != 1)
          break;
        swift_bridgeObjectRelease(v16);
        v14 = v42 + 1;
        v13 += 2;
        if (v36 + v42 + 1 == 1)
          return;
      }
      v10 = v33;
      v26 = v34;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v33);
      v46 = v10;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_100045E44(0, v10[2] + 1, 1);
        v10 = v46;
      }
      v29 = v10[2];
      v28 = v10[3];
      if (v29 >= v28 >> 1)
      {
        sub_100045E44(v28 > 1, v29 + 1, 1);
        v10 = v46;
      }
      v10[2] = v29 + 1;
      v30 = &v10[2 * v29];
      v30[4] = v26;
      v30[5] = v16;
      v8 = v42;
      v9 = v31;
      v7 = v32;
    }
    while (v36 + v42);
  }
}

uint64_t sub_1003236D0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_100322C00(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_1003236D8()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1003236FC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100323720(uint64_t a1)
{
  _BYTE v2[8];

  return swift_initClassMetadata2(a1, 0, 0, v2, qword_100A1E500 + a1 + 16);
}

void sub_100323760(uint64_t a1, uint64_t a2)
{
  void *v2;
  id v3;
  void *v4;
  id v5;
  objc_super v6;

  v6.receiver = v2;
  v6.super_class = (Class)swift_getObjectType(v2, a2);
  objc_msgSendSuper2(&v6, "viewDidLoad");
  v3 = objc_msgSend(v2, "view");
  if (v3)
  {
    v4 = v3;
    v5 = objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
    objc_msgSend(v4, "setBackgroundColor:", v5);

  }
  else
  {
    __break(1u);
  }
}

void sub_100323800(void *a1)
{
  uint64_t v1;
  id v2;

  v2 = a1;
  sub_100323760((uint64_t)v2, v1);

}

uint64_t sub_100323834(uint64_t a1)
{
  objc_class *v1;
  objc_class *v2;
  id v4;
  uint64_t v5;

  v2 = v1;
  v4 = objc_allocWithZone(v1);
  v5 = sub_100323A14(a1);
  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)((char *)v2 + qword_100A1E500) - 8) + 8))(a1);
  return v5;
}

void *sub_100323894(uint64_t a1, uint64_t a2)
{
  objc_class *v2;
  id v5;

  v5 = objc_allocWithZone(v2);
  return sub_1003238D4(a1, a2);
}

void *sub_1003238D4(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  void (*v10)(uint64_t, uint64_t);
  id v11;
  uint64_t v13;

  v5 = *(_QWORD *)((swift_isaMask & *v2) + qword_100A1E500);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(a1);
  v8 = (char *)&v13 - v7;
  (*(void (**)(char *))(v6 + 16))((char *)&v13 - v7);
  v9 = (void *)UIHostingController.init(coder:rootView:)(a1, v8);
  v10 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  v11 = v9;
  v10(a2, v5);
  if (v9)

  return v9;
}

id sub_100323994(void *a1, uint64_t a2)
{
  void *v2;
  id v4;
  objc_super v6;

  v6.receiver = v2;
  v6.super_class = (Class)swift_getObjectType(v2, a2);
  v4 = objc_msgSendSuper2(&v6, "initWithCoder:", a1);

  return v4;
}

id sub_1003239E4(uint64_t a1, uint64_t a2, void *a3)
{
  id v3;
  uint64_t v4;

  v3 = a3;
  return sub_100323994(v3, v4);
}

uint64_t type metadata accessor for BookReaderToolbarPopoverHostingController(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10000D3D4(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for BookReaderToolbarPopoverHostingController);
}

uint64_t sub_100323A14(uint64_t a1)
{
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v5;

  __chkstk_darwin(a1);
  v2 = (char *)&v5 - v1;
  (*(void (**)(char *))(v3 + 16))((char *)&v5 - v1);
  return UIHostingController.init(rootView:)(v2);
}

uint64_t sub_100323A90(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 40) = a1;
  *(_QWORD *)(v2 + 48) = v1;
  return swift_task_switch(sub_100323AA8, 0, 0);
}

uint64_t sub_100323AA8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v2 = v0[5];
  v1 = v0[6];
  v3 = *(_QWORD *)(v1 + 32);
  v0[4] = v3;
  v4 = swift_task_alloc(32);
  *(_QWORD *)(v4 + 16) = v1;
  *(_QWORD *)(v4 + 24) = v2;
  v5 = type metadata accessor for UnfairLock(0);
  swift_retain(v3);
  v6 = sub_10004CFD4(&qword_1009DAC38);
  Lock.sync<A>(_:)(sub_100328F10, v4, v5, v6, &protocol witness table for UnfairLock);
  swift_task_dealloc(v4);
  swift_release(v0[4]);
  v7 = v0[3];
  v0[7] = v7;
  v8 = (_QWORD *)swift_task_alloc(async function pointer to Task.value.getter[1]);
  v0[8] = v8;
  v9 = type metadata accessor for BaseObjectGraph(0);
  v10 = sub_10004CFD4((uint64_t *)&unk_1009D3170);
  *v8 = v0;
  v8[1] = sub_100323BC0;
  return Task.value.getter(v0 + 2, v7, v9, v10, &protocol self-conformance witness table for Error);
}

uint64_t sub_100323BC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 64);
  *(_QWORD *)(*(_QWORD *)v1 + 72) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_100323C58;
  else
    v3 = sub_100323C24;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_100323C24()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 56));
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 16));
}

uint64_t sub_100323C58()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 56));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100323C8C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 40) = a1;
  *(_QWORD *)(v2 + 48) = v1;
  return swift_task_switch(sub_100323CA4, 0, 0);
}

uint64_t sub_100323CA4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  unint64_t v9;
  uint64_t v10;

  v2 = v0[5];
  v1 = v0[6];
  v3 = *(_QWORD *)(v1 + 32);
  v0[4] = v3;
  v4 = swift_task_alloc(32);
  *(_QWORD *)(v4 + 16) = v1;
  *(_QWORD *)(v4 + 24) = v2;
  v5 = type metadata accessor for UnfairLock(0);
  swift_retain(v3);
  v6 = sub_10004CFD4(&qword_1009DAC78);
  Lock.sync<A>(_:)(sub_100328FD4, v4, v5, v6, &protocol witness table for UnfairLock);
  swift_task_dealloc(v4);
  swift_release(v0[4]);
  v7 = v0[3];
  v0[7] = v7;
  v8 = (_QWORD *)swift_task_alloc(async function pointer to Task.value.getter[1]);
  v0[8] = v8;
  v9 = sub_100329014();
  v10 = sub_10004CFD4((uint64_t *)&unk_1009D3170);
  *v8 = v0;
  v8[1] = sub_100323DBC;
  return Task.value.getter(v0 + 2, v7, v9, v10, &protocol self-conformance witness table for Error);
}

uint64_t sub_100323DBC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 64);
  *(_QWORD *)(*(_QWORD *)v1 + 72) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_100329470;
  else
    v3 = sub_100329474;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_100323E20(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 40) = a1;
  *(_QWORD *)(v2 + 48) = v1;
  return swift_task_switch(sub_100323E38, 0, 0);
}

uint64_t sub_100323E38()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v2 = v0[5];
  v1 = v0[6];
  v3 = *(_QWORD *)(v1 + 32);
  v0[4] = v3;
  v4 = swift_task_alloc(32);
  *(_QWORD *)(v4 + 16) = v1;
  *(_QWORD *)(v4 + 24) = v2;
  v5 = type metadata accessor for UnfairLock(0);
  swift_retain(v3);
  v6 = sub_10004CFD4(&qword_1009DAC98);
  Lock.sync<A>(_:)(sub_1003290D4, v4, v5, v6, &protocol witness table for UnfairLock);
  swift_task_dealloc(v4);
  swift_release(v0[4]);
  v7 = v0[3];
  v0[7] = v7;
  v8 = (_QWORD *)swift_task_alloc(async function pointer to Task.value.getter[1]);
  v0[8] = v8;
  v9 = sub_10004CFD4(&qword_1009DACA0);
  v10 = sub_10004CFD4((uint64_t *)&unk_1009D3170);
  *v8 = v0;
  v8[1] = sub_100323DBC;
  return Task.value.getter(v0 + 2, v7, v9, v10, &protocol self-conformance witness table for Error);
}

uint64_t sub_100323F54(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[5] = a2;
  v3[6] = v2;
  v3[4] = a1;
  return swift_task_switch(sub_100323F70, 0, 0);
}

uint64_t sub_100323F70()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v2 = v0[5];
  v1 = v0[6];
  v3 = *(_QWORD *)(v1 + 32);
  v0[3] = v3;
  v4 = swift_task_alloc(32);
  *(_QWORD *)(v4 + 16) = v1;
  *(_QWORD *)(v4 + 24) = v2;
  v5 = type metadata accessor for UnfairLock(0);
  swift_retain(v3);
  v6 = sub_10004CFD4(&qword_1009DACC0);
  Lock.sync<A>(_:)(sub_100329198, v4, v5, v6, &protocol witness table for UnfairLock);
  swift_task_dealloc(v4);
  swift_release(v0[3]);
  v7 = v0[2];
  v0[7] = v7;
  v8 = (_QWORD *)swift_task_alloc(async function pointer to Task.value.getter[1]);
  v0[8] = v8;
  v9 = sub_10004CFD4(&qword_1009DACC8);
  v10 = sub_10004CFD4((uint64_t *)&unk_1009D3170);
  *v8 = v0;
  v8[1] = sub_100324080;
  return Task.value.getter(v0[4], v7, v9, v10, &protocol self-conformance witness table for Error);
}

uint64_t sub_100324080()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 64);
  *(_QWORD *)(*(_QWORD *)v1 + 72) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_100323C58;
  else
    v3 = sub_1003240E4;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_1003240E4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 56));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100324118(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(char *, uint64_t, _QWORD *))
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v20;

  v10 = sub_10004CFD4(&qword_1009D3150);
  __chkstk_darwin(v10);
  v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(_QWORD *)(a1 + 40);
  if (v13)
  {
    v14 = *(_QWORD *)(a1 + 40);
  }
  else
  {
    v15 = type metadata accessor for TaskPriority(0);
    v16 = *(_QWORD *)(v15 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v12, a2, v15);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v12, 0, 1, v15);
    v17 = (_QWORD *)swift_allocObject(a3, 40, 7);
    v17[2] = 0;
    v17[3] = 0;
    v17[4] = a1;
    swift_retain(a1);
    v14 = a5(v12, a4, v17);
    v18 = *(_QWORD *)(a1 + 40);
    *(_QWORD *)(a1 + 40) = v14;
    swift_retain(v14);
    swift_release(v18);
    v13 = 0;
  }
  swift_retain(v13);
  return v14;
}

uint64_t sub_100324238(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 16) = a1;
  *(_QWORD *)(v4 + 24) = a4;
  return swift_task_switch(sub_100324250, 0, 0);
}

uint64_t sub_100324250()
{
  _QWORD *v0;
  int *v1;
  _QWORD *v2;
  uint64_t (*v4)(_QWORD);

  v1 = *(int **)(v0[3] + 16);
  v4 = (uint64_t (*)(_QWORD))((char *)v1 + *v1);
  v2 = (_QWORD *)swift_task_alloc(v1[1]);
  v0[4] = v2;
  *v2 = v0;
  v2[1] = sub_1003242B0;
  return v4(v0[2]);
}

uint64_t sub_1003242B0()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 32));
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_1003242F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  Swift::Int v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t result;
  uint64_t v15;
  unint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  BOOL v19;
  _QWORD v20[9];

  if (*(_QWORD *)(a3 + 16))
  {
    Hasher.init(_seed:)(v20, *(_QWORD *)(a3 + 40));
    String.hash(into:)(v20, a1, a2);
    v6 = Hasher._finalize()();
    v7 = -1 << *(_BYTE *)(a3 + 32);
    v8 = v6 & ~v7;
    v9 = a3 + 56;
    if (((*(_QWORD *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0)
    {
      v10 = *(_QWORD *)(a3 + 48);
      v11 = (_QWORD *)(v10 + 16 * v8);
      v12 = v11[1];
      v13 = *v11 == a1 && v12 == a2;
      if (v13 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v11, v12, a1, a2, 0) & 1) != 0)
        return 1;
      v15 = ~v7;
      v16 = (v8 + 1) & v15;
      if (((*(_QWORD *)(v9 + ((v16 >> 3) & 0xFFFFFFFFFFFFF8)) >> v16) & 1) != 0)
      {
        while (1)
        {
          v17 = (_QWORD *)(v10 + 16 * v16);
          v18 = v17[1];
          v19 = *v17 == a1 && v18 == a2;
          if (v19 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v17, v18, a1, a2, 0) & 1) != 0)
            break;
          result = 0;
          v16 = (v16 + 1) & v15;
          if (((*(_QWORD *)(v9 + ((v16 >> 3) & 0xFFFFFFFFFFFFF8)) >> v16) & 1) == 0)
            return result;
        }
        return 1;
      }
    }
  }
  return 0;
}

BOOL sub_100324430(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BOOL8 result;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;

  if (!*(_QWORD *)(a2 + 16))
    return 0;
  v4 = static Hasher._hash(seed:_:)(*(_QWORD *)(a2 + 40), a1);
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = v4 & ~v5;
  v7 = a2 + 56;
  if (((*(_QWORD *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
    return 0;
  v8 = *(_QWORD *)(a2 + 48);
  if (*(_QWORD *)(v8 + 8 * v6) == a1)
    return 1;
  v10 = ~v5;
  v11 = (v6 + 1) & v10;
  if (((*(_QWORD *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) == 0)
    return 0;
  do
  {
    v12 = *(_QWORD *)(v8 + 8 * v11);
    result = v12 == a1;
    if (v12 == a1)
      break;
    v11 = (v11 + 1) & v10;
  }
  while (((*(_QWORD *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
  return result;
}

uint64_t sub_1003244F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, unint64_t, uint64_t);
  uint64_t v15;
  char v16;
  uint64_t v18;
  uint64_t v19;

  v4 = type metadata accessor for ClusteringOptions.MediaType(0);
  v19 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_QWORD *)(a2 + 16)
    && (v7 = *(_QWORD *)(a2 + 40),
        v8 = sub_100008DB0(&qword_1009D05D0, (uint64_t (*)(uint64_t))&type metadata accessor for ClusteringOptions.MediaType, (uint64_t)&protocol conformance descriptor for ClusteringOptions.MediaType), v9 = dispatch thunk of Hashable._rawHashValue(seed:)(v7, v4, v8), v10 = -1 << *(_BYTE *)(a2 + 32), v11 = v9 & ~v10, ((*(_QWORD *)(a2 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0))
  {
    v12 = ~v10;
    v13 = *(_QWORD *)(v19 + 72);
    v14 = *(void (**)(char *, unint64_t, uint64_t))(v19 + 16);
    do
    {
      v14(v6, *(_QWORD *)(a2 + 48) + v13 * v11, v4);
      v15 = sub_100008DB0(&qword_1009D05D8, (uint64_t (*)(uint64_t))&type metadata accessor for ClusteringOptions.MediaType, (uint64_t)&protocol conformance descriptor for ClusteringOptions.MediaType);
      v16 = dispatch thunk of static Equatable.== infix(_:_:)(v6, a1, v4, v15);
      (*(void (**)(char *, uint64_t))(v19 + 8))(v6, v4);
      if ((v16 & 1) != 0)
        break;
      v11 = (v11 + 1) & v12;
    }
    while (((*(_QWORD *)(a2 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
  }
  else
  {
    v16 = 0;
  }
  return v16 & 1;
}

uint64_t sub_100324680(uint64_t result, unint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 *v6;
  uint64_t v7;
  char v8;
  char v9;
  uint64_t v10;
  unsigned __int8 *v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 *v15;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  unsigned __int8 *v19;
  unsigned int v20;
  uint64_t v21;
  char v22;
  _QWORD v23[3];

  v3 = HIBYTE(a2) & 0xF;
  v4 = result & 0xFFFFFFFFFFFFLL;
  if ((a2 & 0x2000000000000000) != 0)
    v5 = v3;
  else
    v5 = result & 0xFFFFFFFFFFFFLL;
  if (!v5)
  {
    swift_bridgeObjectRelease(a2);
    return 0;
  }
  if ((a2 & 0x1000000000000000) == 0)
  {
    if ((a2 & 0x2000000000000000) == 0)
    {
      if ((result & 0x1000000000000000) != 0)
        v6 = (unsigned __int8 *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 32);
      else
        v6 = (unsigned __int8 *)_StringObject.sharedUTF8.getter(result, a2);
      v7 = (uint64_t)sub_100327808(v6, v4, 10);
      v9 = v8 & 1;
      goto LABEL_37;
    }
    v23[0] = result;
    v23[1] = a2 & 0xFFFFFFFFFFFFFFLL;
    if (result == 43)
    {
      if (!v3)
        goto LABEL_50;
      if (v3 == 1 || (BYTE1(result) - 48) > 9u)
        goto LABEL_34;
      v7 = (BYTE1(result) - 48);
      v14 = v3 - 2;
      if (v14)
      {
        v15 = (unsigned __int8 *)v23 + 2;
        while (1)
        {
          v16 = *v15 - 48;
          if (v16 > 9)
            goto LABEL_34;
          v17 = 10 * v7;
          if ((unsigned __int128)(v7 * (__int128)10) >> 64 != (10 * v7) >> 63)
            goto LABEL_34;
          v7 = v17 + v16;
          if (__OFADD__(v17, v16))
            goto LABEL_34;
          v9 = 0;
          ++v15;
          if (!--v14)
            goto LABEL_37;
        }
      }
    }
    else
    {
      if (result == 45)
      {
        if (v3)
        {
          if (v3 != 1 && (BYTE1(result) - 48) <= 9u)
          {
            v7 = -(uint64_t)(BYTE1(result) - 48);
            v10 = v3 - 2;
            if (v10)
            {
              v11 = (unsigned __int8 *)v23 + 2;
              while (1)
              {
                v12 = *v11 - 48;
                if (v12 > 9)
                  goto LABEL_34;
                v13 = 10 * v7;
                if ((unsigned __int128)(v7 * (__int128)10) >> 64 != (10 * v7) >> 63)
                  goto LABEL_34;
                v7 = v13 - v12;
                if (__OFSUB__(v13, v12))
                  goto LABEL_34;
                v9 = 0;
                ++v11;
                if (!--v10)
                  goto LABEL_37;
              }
            }
            goto LABEL_36;
          }
LABEL_34:
          v7 = 0;
          v9 = 1;
          goto LABEL_37;
        }
        __break(1u);
LABEL_50:
        __break(1u);
        return result;
      }
      if (!v3 || (result - 48) > 9u)
        goto LABEL_34;
      v7 = (result - 48);
      v18 = v3 - 1;
      if (v18)
      {
        v19 = (unsigned __int8 *)v23 + 1;
        while (1)
        {
          v20 = *v19 - 48;
          if (v20 > 9)
            goto LABEL_34;
          v21 = 10 * v7;
          if ((unsigned __int128)(v7 * (__int128)10) >> 64 != (10 * v7) >> 63)
            goto LABEL_34;
          v7 = v21 + v20;
          if (__OFADD__(v21, v20))
            goto LABEL_34;
          v9 = 0;
          ++v19;
          if (!--v18)
            goto LABEL_37;
        }
      }
    }
LABEL_36:
    v9 = 0;
    goto LABEL_37;
  }
  v7 = sub_10032770C(result, a2, 10, (uint64_t (*)(uint64_t *, uint64_t, uint64_t))sub_100327808);
  v9 = v22;
LABEL_37:
  swift_bridgeObjectRelease(a2);
  if ((v9 & 1) != 0)
    return 0;
  else
    return v7;
}

unint64_t sub_1003248D4(uint64_t a1, unint64_t a2)
{
  unint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 *v7;
  unint64_t v8;
  char v9;
  char v10;
  uint64_t v11;
  unsigned __int8 *v12;
  unsigned int v13;
  BOOL v14;
  uint64_t v15;
  unsigned __int8 *v16;
  unsigned int v17;
  uint64_t v18;
  unsigned __int8 *v20;
  unsigned int v21;
  char v22;
  _QWORD v23[3];

  v4 = HIBYTE(a2) & 0xF;
  v5 = a1 & 0xFFFFFFFFFFFFLL;
  if ((a2 & 0x2000000000000000) != 0)
    v6 = v4;
  else
    v6 = a1 & 0xFFFFFFFFFFFFLL;
  if (!v6)
  {
    swift_bridgeObjectRelease(a2);
    return 0;
  }
  if ((a2 & 0x1000000000000000) != 0)
  {
    v8 = sub_10032770C(a1, a2, 10, (uint64_t (*)(uint64_t *, uint64_t, uint64_t))sub_100327A84);
    v10 = v22;
    goto LABEL_39;
  }
  if ((a2 & 0x2000000000000000) == 0)
  {
    if ((a1 & 0x1000000000000000) != 0)
      v7 = (unsigned __int8 *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 32);
    else
      v7 = (unsigned __int8 *)_StringObject.sharedUTF8.getter(a1, a2);
    v8 = (unint64_t)sub_100327A84(v7, v5, 10);
    v10 = v9 & 1;
    goto LABEL_39;
  }
  v23[0] = a1;
  v23[1] = a2 & 0xFFFFFFFFFFFFFFLL;
  if (a1 == 43)
  {
    if (!v4)
      goto LABEL_52;
    if (v4 == 1 || (BYTE1(a1) - 48) > 9u)
      goto LABEL_36;
    v8 = (BYTE1(a1) - 48);
    v15 = v4 - 2;
    if (v15)
    {
      v16 = (unsigned __int8 *)v23 + 2;
      while (1)
      {
        v17 = *v16 - 48;
        if (v17 > 9)
          goto LABEL_36;
        if (!is_mul_ok(v8, 0xAuLL))
          goto LABEL_36;
        v14 = __CFADD__(10 * v8, v17);
        v8 = 10 * v8 + v17;
        if (v14)
          goto LABEL_36;
        v10 = 0;
        ++v16;
        if (!--v15)
          goto LABEL_39;
      }
    }
LABEL_38:
    v10 = 0;
    goto LABEL_39;
  }
  if (a1 != 45)
  {
    if (!v4 || (a1 - 48) > 9u)
      goto LABEL_36;
    v8 = (a1 - 48);
    v18 = v4 - 1;
    if (v18)
    {
      v20 = (unsigned __int8 *)v23 + 1;
      while (1)
      {
        v21 = *v20 - 48;
        if (v21 > 9)
          goto LABEL_36;
        if (!is_mul_ok(v8, 0xAuLL))
          goto LABEL_36;
        v14 = __CFADD__(10 * v8, v21);
        v8 = 10 * v8 + v21;
        if (v14)
          goto LABEL_36;
        v10 = 0;
        ++v20;
        if (!--v18)
          goto LABEL_39;
      }
    }
    goto LABEL_38;
  }
  if (v4)
  {
    if (v4 != 1 && (BYTE1(a1) - 48) <= 9u)
    {
      v2 = 0;
      v8 = -(uint64_t)(BYTE1(a1) - 48);
      if (BYTE1(a1) == 48)
      {
        v11 = v4 - 2;
        if (v11)
        {
          v12 = (unsigned __int8 *)v23 + 2;
          while (1)
          {
            v13 = *v12 - 48;
            if (v13 > 9)
              goto LABEL_36;
            if (!is_mul_ok(v8, 0xAuLL))
              goto LABEL_36;
            v14 = 10 * v8 >= v13;
            v8 = 10 * v8 - v13;
            if (!v14)
              goto LABEL_36;
            v10 = 0;
            ++v12;
            if (!--v11)
              goto LABEL_39;
          }
        }
        goto LABEL_38;
      }
      goto LABEL_53;
    }
LABEL_36:
    v8 = 0;
    v10 = 1;
    goto LABEL_39;
  }
  __break(1u);
LABEL_52:
  __break(1u);
LABEL_53:
  v10 = 1;
  v8 = v2;
LABEL_39:
  swift_bridgeObjectRelease(a2);
  if ((v10 & 1) != 0)
    return 0;
  else
    return v8;
}

uint64_t sub_100324B38()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  sub_10001BFD8(v0, qword_100A1E510);
  sub_100048F64(v0, (uint64_t)qword_100A1E510);
  return Logger.init(subsystem:category:)(0xD000000000000010, 0x80000001007B2570, 0xD000000000000019, 0x800000010071AC60);
}

void sub_100324BB8(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  unint64_t v20;
  char v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unsigned __int8 *v28;
  unint64_t v29;
  char v30;
  char v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  _BYTE *v35;
  uint64_t v36;
  unsigned __int8 *v37;
  unsigned int v38;
  BOOL v39;
  uint64_t v40;
  unsigned __int8 *v41;
  unsigned int v42;
  uint64_t v43;
  unint64_t v44;
  char v45;
  int v46;
  BOOL v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  char v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  char v55;
  unsigned __int8 *v56;
  unsigned int v57;
  uint64_t *v58;
  uint64_t *v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  NSObject *v63;
  os_log_type_t v64;
  uint64_t v65;
  uint8_t *v66;
  unint64_t v67;
  uint8_t *v68;
  unint64_t v69;
  uint64_t v70;
  __n128 v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  char v75;
  uint8_t *v76;
  uint64_t v77;
  uint64_t v78;
  NSObject *v79;
  int v80;
  uint8_t *v81;
  unint64_t v82;
  uint64_t v83;
  uint64_t *v84;
  uint8_t *v85;
  char *v86;
  uint64_t v87;
  unint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93[3];
  uint64_t v94;
  uint64_t v95;

  v3 = v2;
  v95 = a2;
  v5 = sub_10004CFD4(&qword_1009D30C0);
  __chkstk_darwin(v5);
  v86 = (char *)&v76 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10004CFD4(&qword_1009D30B8);
  __chkstk_darwin(v7);
  v9 = (char *)&v76 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (uint64_t *)((char *)&v76 - v11);
  v13 = type metadata accessor for Book.MediaType(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v76 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v19 = (char *)&v76 - v18;
  if (!*(_QWORD *)(a1 + 16))
    goto LABEL_14;
  v20 = sub_10004CE80(25705, 0xE200000000000000);
  if ((v21 & 1) == 0)
    goto LABEL_14;
  sub_10000B5E4(*(_QWORD *)(a1 + 56) + 32 * v20, (uint64_t)&v89, (uint64_t *)&unk_1009D04E0);
  sub_100025B3C((uint64_t)&v89, (uint64_t)v93, (uint64_t *)&unk_1009D04E0);
  if (!v94)
  {
    swift_bridgeObjectRelease(a1);
    sub_100010960((uint64_t)v93, (uint64_t *)&unk_1009D04E0);
    goto LABEL_16;
  }
  if ((swift_dynamicCast(&v87, v93, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) == 0)
  {
LABEL_14:
    v32 = a1;
LABEL_15:
    swift_bridgeObjectRelease(v32);
LABEL_16:
    v33 = sub_100328E64();
    v34 = swift_allocError(&_s31MediaAPICollectionServiceErrorsON, v33, 0, 0);
    *v35 = 0;
    swift_willThrow(v34);
    return;
  }
  v24 = v87;
  v23 = v88;
  v25 = HIBYTE(v88) & 0xF;
  v26 = v87 & 0xFFFFFFFFFFFFLL;
  if ((v88 & 0x2000000000000000) != 0)
    v27 = HIBYTE(v88) & 0xF;
  else
    v27 = v87 & 0xFFFFFFFFFFFFLL;
  if (!v27)
  {
    swift_bridgeObjectRelease(a1);
    v32 = v23;
    goto LABEL_15;
  }
  v84 = (uint64_t *)v87;
  v85 = (uint8_t *)v88;
  if ((v88 & 0x1000000000000000) != 0)
  {
    swift_bridgeObjectRetain(v88);
    v83 = sub_10032770C(v24, v23, 10, (uint64_t (*)(uint64_t *, uint64_t, uint64_t))sub_100327A84);
    v74 = v23;
    v31 = v75;
    swift_bridgeObjectRelease(v74);
    v29 = v83;
    goto LABEL_47;
  }
  if ((v88 & 0x2000000000000000) != 0)
  {
    v93[0] = v87;
    v93[1] = v88 & 0xFFFFFFFFFFFFFFLL;
    if (v87 == 43)
    {
      if (v25)
      {
        if (v25 != 1 && (BYTE1(v87) - 48) <= 9u)
        {
          v29 = (BYTE1(v87) - 48);
          v40 = v25 - 2;
          if (v40)
          {
            v41 = (unsigned __int8 *)v93 + 2;
            while (1)
            {
              v42 = *v41 - 48;
              if (v42 > 9)
                goto LABEL_44;
              if (!is_mul_ok(v29, 0xAuLL))
                goto LABEL_44;
              v39 = __CFADD__(10 * v29, v42);
              v29 = 10 * v29 + v42;
              if (v39)
                goto LABEL_44;
              v31 = 0;
              ++v41;
              if (!--v40)
                goto LABEL_47;
            }
          }
          goto LABEL_46;
        }
        goto LABEL_44;
      }
    }
    else
    {
      if (v87 != 45)
      {
        if (v25 && (v87 - 48) <= 9u)
        {
          v29 = (v87 - 48);
          v43 = v25 - 1;
          if (v43)
          {
            v56 = (unsigned __int8 *)v93 + 1;
            while (1)
            {
              v57 = *v56 - 48;
              if (v57 > 9)
                goto LABEL_44;
              if (!is_mul_ok(v29, 0xAuLL))
                goto LABEL_44;
              v39 = __CFADD__(10 * v29, v57);
              v29 = 10 * v29 + v57;
              if (v39)
                goto LABEL_44;
              v31 = 0;
              ++v56;
              if (!--v43)
                goto LABEL_47;
            }
          }
          goto LABEL_46;
        }
        goto LABEL_44;
      }
      if (v25)
      {
        if (v25 != 1 && (BYTE1(v87) - 48) <= 9u)
        {
          v22 = 0;
          v29 = -(uint64_t)(BYTE1(v87) - 48);
          if (BYTE1(v87) == 48)
          {
            v36 = v25 - 2;
            if (v36)
            {
              v37 = (unsigned __int8 *)v93 + 2;
              while (1)
              {
                v38 = *v37 - 48;
                if (v38 > 9)
                  goto LABEL_44;
                if (!is_mul_ok(v29, 0xAuLL))
                  goto LABEL_44;
                v39 = 10 * v29 >= v38;
                v29 = 10 * v29 - v38;
                if (!v39)
                  goto LABEL_44;
                v31 = 0;
                ++v37;
                if (!--v36)
                  goto LABEL_47;
              }
            }
LABEL_46:
            v31 = 0;
            goto LABEL_47;
          }
LABEL_98:
          v31 = 1;
          v29 = v22;
          goto LABEL_47;
        }
LABEL_44:
        v29 = 0;
        v31 = 1;
        goto LABEL_47;
      }
      __break(1u);
    }
    __break(1u);
    goto LABEL_98;
  }
  if ((v87 & 0x1000000000000000) != 0)
    v28 = (unsigned __int8 *)((v88 & 0xFFFFFFFFFFFFFFFLL) + 32);
  else
    v28 = (unsigned __int8 *)_StringObject.sharedUTF8.getter(v87, v88);
  v29 = (unint64_t)sub_100327A84(v28, v26, 10);
  v31 = v30 & 1;
LABEL_47:
  if ((v31 & 1) != 0)
  {
    swift_bridgeObjectRelease(a1);
    v32 = (uint64_t)v85;
    goto LABEL_15;
  }
  v83 = v29;
  if (!*(_QWORD *)(a1 + 16))
    goto LABEL_59;
  v44 = sub_10004CE80(1701869940, 0xE400000000000000);
  if ((v45 & 1) == 0)
    goto LABEL_59;
  sub_10000B5E4(*(_QWORD *)(a1 + 56) + 32 * v44, (uint64_t)&v89, (uint64_t *)&unk_1009D04E0);
  sub_100025B3C((uint64_t)&v89, (uint64_t)v93, (uint64_t *)&unk_1009D04E0);
  if (!v94)
  {
    sub_100010960((uint64_t)v93, (uint64_t *)&unk_1009D04E0);
LABEL_59:
    v48 = 0;
    v49 = 0;
    goto LABEL_60;
  }
  v46 = swift_dynamicCast(&v87, v93, (char *)&type metadata for Any + 8, &type metadata for String, 6);
  v47 = v46 == 0;
  if (v46)
    v48 = v87;
  else
    v48 = 0;
  if (v47)
    v49 = 0;
  else
    v49 = v88;
LABEL_60:
  sub_1003272E4(v48, v49, (uint64_t)v19);
  if (v3)
  {
    swift_bridgeObjectRelease(a1);
    swift_bridgeObjectRelease(v85);
    swift_bridgeObjectRelease(v49);
    return;
  }
  swift_bridgeObjectRelease(v49);
  if (!*(_QWORD *)(a1 + 16))
    goto LABEL_77;
  v50 = sub_10004CE80(0x7475626972747461, 0xEA00000000007365);
  if ((v51 & 1) == 0)
    goto LABEL_77;
  sub_10000B5E4(*(_QWORD *)(a1 + 56) + 32 * v50, (uint64_t)&v89, (uint64_t *)&unk_1009D04E0);
  sub_100025B3C((uint64_t)&v89, (uint64_t)v93, (uint64_t *)&unk_1009D04E0);
  if (!v94)
  {
    sub_100010960((uint64_t)v93, (uint64_t *)&unk_1009D04E0);
LABEL_77:
    v89 = 0;
    v90 = 0;
    v91 = 0;
    v92 = 1;
LABEL_78:
    v58 = &qword_1009D6FC0;
    v59 = &v89;
LABEL_79:
    sub_100010960((uint64_t)v59, v58);
    goto LABEL_80;
  }
  v52 = sub_10004CFD4(&qword_1009DABF0);
  if ((swift_dynamicCast(&v87, v93, (char *)&type metadata for Any + 8, v52, 6) & 1) == 0)
    goto LABEL_77;
  v53 = v87;
  if (!v87)
    goto LABEL_77;
  if (*(_QWORD *)(v87 + 16) && (v54 = sub_10004CE80(1701667182, 0xE400000000000000), (v55 & 1) != 0))
  {
    sub_10000B5E4(*(_QWORD *)(v53 + 56) + 32 * v54, (uint64_t)&v89, (uint64_t *)&unk_1009D04E0);
  }
  else
  {
    v89 = 0;
    v90 = 0;
    v91 = 0;
    v92 = 1;
  }
  swift_bridgeObjectRelease(v53);
  if (v92 == 1)
    goto LABEL_78;
  sub_100025B3C((uint64_t)&v89, (uint64_t)v93, (uint64_t *)&unk_1009D04E0);
  if (!v94)
  {
    v58 = (uint64_t *)&unk_1009D04E0;
    v59 = v93;
    goto LABEL_79;
  }
  if (swift_dynamicCast(&v87, v93, (char *)&type metadata for Any + 8, &type metadata for String, 6))
  {
    v78 = v87;
    v60 = v88;
    goto LABEL_81;
  }
LABEL_80:
  v60 = 0xE700000000000000;
  v78 = 0x6E776F6E6B6E75;
LABEL_81:
  v82 = v60;
  if (qword_1009CDE88 != -1)
    swift_once(&qword_1009CDE88, sub_100324B38);
  v61 = type metadata accessor for Logger(0);
  sub_100048F64(v61, (uint64_t)qword_100A1E510);
  swift_bridgeObjectRetain(v85);
  swift_bridgeObjectRetain(v82);
  v63 = Logger.logObject.getter(v62);
  v64 = static os_log_type_t.info.getter(v63);
  v80 = v64;
  if (os_log_type_enabled(v63, v64))
  {
    v65 = swift_slowAlloc(22, -1);
    v79 = v63;
    v66 = (uint8_t *)v65;
    v77 = swift_slowAlloc(64, -1);
    v93[0] = v77;
    v81 = v66;
    *(_DWORD *)v66 = 136315394;
    v76 = v66 + 4;
    v67 = (unint64_t)v85;
    swift_bridgeObjectRetain(v85);
    v89 = sub_100040F58((uint64_t)v84, v67, v93);
    v84 = &v90;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v89, &v90, v76, v81 + 12);
    swift_bridgeObjectRelease_n(v67, 3);
    v68 = v81;
    v69 = v82;
    *((_WORD *)v81 + 6) = 2080;
    v85 = v68 + 14;
    swift_bridgeObjectRetain(v69);
    v89 = sub_100040F58(v78, v69, v93);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v89, v84, v85, v81 + 22);
    swift_bridgeObjectRelease_n(v69, 3);
    _os_log_impl((void *)&_mh_execute_header, v79, (os_log_type_t)v80, "    storeID: %s title: %s", v81, 0x16u);
    v70 = v77;
    swift_arrayDestroy(v77, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v70, -1, -1);
    swift_slowDealloc(v81, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(v82, 2);
    swift_bridgeObjectRelease_n(v85, 2);
  }
  sub_100327428(a1, (uint64_t)v19, v12);
  v71 = swift_bridgeObjectRelease(a1);
  (*(void (**)(char *, char *, uint64_t, __n128))(v14 + 16))(v16, v19, v13, v71);
  v72 = type metadata accessor for Book.Rationale(0);
  v73 = v86;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v72 - 8) + 56))(v86, 1, 1, v72);
  sub_10000B5E4((uint64_t)v12, (uint64_t)v9, &qword_1009D30B8);
  Book.init(storeID:mediaType:seriesID:sources:rationale:content:)(v83, v16, 0, 1, _swiftEmptyArrayStorage, v73, v9);
  sub_100010960((uint64_t)v12, &qword_1009D30B8);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v19, v13);
}

uint64_t sub_100325514(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3[11] = a2;
  v3[12] = v2;
  v3[10] = a1;
  v4 = type metadata accessor for TaskPriority(0);
  v3[13] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[14] = v5;
  v3[15] = swift_task_alloc((*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_100325578, 0, 0);
}

uint64_t sub_100325578()
{
  _QWORD *v0;
  __n128 v1;
  _QWORD *v2;
  uint64_t (*v4)(_QWORD);

  v1 = swift_bridgeObjectRetain(v0[10]);
  TaskPriority.init(rawValue:)(21, v1);
  v4 = (uint64_t (*)(_QWORD))((char *)&dword_1009DAC20 + dword_1009DAC20);
  v2 = (_QWORD *)swift_task_alloc(unk_1009DAC24);
  v0[16] = v2;
  *v2 = v0;
  v2[1] = sub_1003255FC;
  return v4(v0[15]);
}

uint64_t sub_1003255FC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v10;
  _QWORD *v11;

  v5 = *(_QWORD *)(*(_QWORD *)v2 + 120);
  v4 = *(_QWORD *)(*(_QWORD *)v2 + 128);
  v6 = *(_QWORD *)(*(_QWORD *)v2 + 104);
  v7 = *(_QWORD *)(*(_QWORD *)v2 + 112);
  v8 = *(_QWORD **)v2;
  v8[17] = a1;
  v8[18] = v1;
  swift_task_dealloc(v4);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  if (v1)
  {
    swift_bridgeObjectRelease(v8[10]);
    return swift_task_switch(sub_1003258D0, 0, 0);
  }
  else
  {
    v10 = sub_10004CFD4(&qword_1009DAC28);
    v11 = (_QWORD *)swift_task_alloc(async function pointer to BaseObjectGraph.inject<A>(_:)[1]);
    v8[19] = v11;
    *v11 = v8;
    v11[1] = sub_1003256E8;
    return BaseObjectGraph.inject<A>(_:)(v8 + 2, v10, v10);
  }
}

uint64_t sub_1003256E8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 152);
  *(_QWORD *)(*v1 + 160) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    swift_bridgeObjectRelease(*(_QWORD *)(v2 + 80));
    v4 = sub_100325904;
  }
  else
  {
    v4 = sub_100325754;
  }
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_100325754()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  unint64_t v6;

  v2 = v0[10];
  v1 = v0[11];
  v3 = v0[5];
  v4 = v0[6];
  sub_10003F198(v0 + 2, v3);
  v0[7] = v2;
  v0[8] = v1;
  v5 = (_QWORD *)swift_task_alloc(async function pointer to dispatch thunk of IntentDispatcher.dispatch<A>(_:objectGraph:)[1]);
  v0[21] = v5;
  v6 = sub_100328ECC();
  *v5 = v0;
  v5[1] = sub_100325808;
  return dispatch thunk of IntentDispatcher.dispatch<A>(_:objectGraph:)(v0 + 9, v0 + 7, v0[17], &type metadata for PersonalRecommendationIntent, v6, v3, v4);
}

uint64_t sub_100325808()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 168);
  *(_QWORD *)(*v1 + 176) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = sub_100325940;
  }
  else
  {
    swift_bridgeObjectRelease(*(_QWORD *)(v2 + 80));
    v4 = sub_100325874;
  }
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_100325874()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 120);
  swift_release(*(_QWORD *)(v0 + 136));
  v2 = *(_QWORD *)(v0 + 72);
  _s5Books15CurrentPageViewVwxx_0((_QWORD *)(v0 + 16));
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v2);
}

uint64_t sub_1003258D0()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(v0 + 120));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100325904()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 136));
  swift_task_dealloc(*(_QWORD *)(v0 + 120));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100325940()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 80);
  swift_release(*(_QWORD *)(v0 + 136));
  swift_bridgeObjectRelease(v1);
  _s5Books15CurrentPageViewVwxx_0((_QWORD *)(v0 + 16));
  swift_task_dealloc(*(_QWORD *)(v0 + 120));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100325994(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v2[2] = a1;
  v2[3] = v1;
  v3 = type metadata accessor for Book.MediaType(0);
  v2[4] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[5] = v4;
  v2[6] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1003259F4, 0, 0);
}

uint64_t sub_1003259F4()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = BooksBySuggestedAuthorsOptions.hydratedBooksFetchLimit.getter();
  v2 = (_QWORD *)swift_task_alloc(dword_1009DABE4);
  *(_QWORD *)(v0 + 56) = v2;
  *v2 = v0;
  v2[1] = sub_100325A58;
  return sub_100325514((uint64_t)&off_1008F0778, v1);
}

uint64_t sub_100325A58(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(*v2 + 56);
  v5 = *v2;
  *(_QWORD *)(v5 + 64) = v1;
  swift_task_dealloc(v4);
  if (v1)
  {
    swift_task_dealloc(*(_QWORD *)(v5 + 48));
    return (*(uint64_t (**)(void))(v5 + 8))();
  }
  else
  {
    *(_QWORD *)(v5 + 72) = a1;
    return swift_task_switch(sub_100325AE0, 0, 0);
  }
}

uint64_t sub_100325AE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v12;

  v2 = *(_QWORD *)(v0 + 64);
  v1 = *(_QWORD *)(v0 + 72);
  v4 = *(_QWORD *)(v0 + 40);
  v3 = *(_QWORD *)(v0 + 48);
  v5 = *(_QWORD *)(v0 + 32);
  v6 = BooksBySuggestedAuthorsOptions.mediaType.getter();
  v7 = (_QWORD *)BooksBySuggestedAuthorsOptions.excludedStoreIDs.getter(v6);
  v8 = sub_100328810(v1, 0xD00000000000001ALL, 0x80000001007B1D40, v3, v7);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  swift_bridgeObjectRelease(v7);
  v9 = swift_bridgeObjectRelease(v1);
  v10 = *(_QWORD *)(v0 + 48);
  if (v2)
  {
    swift_task_dealloc(*(_QWORD *)(v0 + 48));
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v12 = Array<A>.positionScored()(v8, v9);
    swift_bridgeObjectRelease(v8);
    swift_task_dealloc(v10);
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(v12);
  }
}

uint64_t sub_100325BE4(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc(dword_1009DABDC);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_100329468;
  return sub_100325994(a1);
}

uint64_t sub_100325C34(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v2[2] = a1;
  v2[3] = v1;
  v3 = type metadata accessor for Book.MediaType(0);
  v2[4] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[5] = v4;
  v2[6] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_100325C94, 0, 0);
}

uint64_t sub_100325C94()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = BooksYouMightLikeOptions.hydratedBooksFetchLimit.getter();
  v2 = (_QWORD *)swift_task_alloc(dword_1009DABE4);
  *(_QWORD *)(v0 + 56) = v2;
  *v2 = v0;
  v2[1] = sub_100325CF8;
  return sub_100325514((uint64_t)&off_1008F07A8, v1);
}

uint64_t sub_100325CF8(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(*v2 + 56);
  v5 = *v2;
  *(_QWORD *)(v5 + 64) = v1;
  swift_task_dealloc(v4);
  if (v1)
  {
    swift_task_dealloc(*(_QWORD *)(v5 + 48));
    return (*(uint64_t (**)(void))(v5 + 8))();
  }
  else
  {
    *(_QWORD *)(v5 + 72) = a1;
    return swift_task_switch(sub_100325D80, 0, 0);
  }
}

uint64_t sub_100325D80()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v12;

  v2 = *(_QWORD *)(v0 + 64);
  v1 = *(_QWORD *)(v0 + 72);
  v4 = *(_QWORD *)(v0 + 40);
  v3 = *(_QWORD *)(v0 + 48);
  v5 = *(_QWORD *)(v0 + 32);
  v6 = BooksYouMightLikeOptions.mediaType.getter();
  v7 = (_QWORD *)BooksYouMightLikeOptions.excludedStoreIDs.getter(v6);
  v8 = sub_100328810(v1, 0xD000000000000014, 0x80000001007B1D60, v3, v7);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  swift_bridgeObjectRelease(v7);
  v9 = swift_bridgeObjectRelease(v1);
  v10 = *(_QWORD *)(v0 + 48);
  if (v2)
  {
    swift_task_dealloc(*(_QWORD *)(v0 + 48));
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v12 = Array<A>.positionScored()(v8, v9);
    swift_bridgeObjectRelease(v8);
    swift_task_dealloc(v10);
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(v12);
  }
}

uint64_t sub_100325E84(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc(dword_1009DAC54);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_100329468;
  return sub_100325C34(a1);
}

uint64_t sub_100325ED4(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v2[2] = a1;
  v2[3] = v1;
  v3 = type metadata accessor for Book.MediaType(0);
  v2[4] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[5] = v4;
  v2[6] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_100325F34, 0, 0);
}

uint64_t sub_100325F34()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = ForYouOptions.hydratedBooksFetchLimit.getter();
  v2 = (_QWORD *)swift_task_alloc(dword_1009DABE4);
  *(_QWORD *)(v0 + 56) = v2;
  *v2 = v0;
  v2[1] = sub_100325F98;
  return sub_100325514((uint64_t)&off_1008F07D8, v1);
}

uint64_t sub_100325F98(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(*v2 + 56);
  v5 = *v2;
  *(_QWORD *)(v5 + 64) = v1;
  swift_task_dealloc(v4);
  if (v1)
  {
    swift_task_dealloc(*(_QWORD *)(v5 + 48));
    return (*(uint64_t (**)(void))(v5 + 8))();
  }
  else
  {
    *(_QWORD *)(v5 + 72) = a1;
    return swift_task_switch(sub_100326020, 0, 0);
  }
}

uint64_t sub_100326020()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v12;

  v2 = *(_QWORD *)(v0 + 64);
  v1 = *(_QWORD *)(v0 + 72);
  v4 = *(_QWORD *)(v0 + 40);
  v3 = *(_QWORD *)(v0 + 48);
  v5 = *(_QWORD *)(v0 + 32);
  v6 = ForYouOptions.mediaType.getter();
  v7 = (_QWORD *)ForYouOptions.excludedStoreIDs.getter(v6);
  v8 = sub_100328810(v1, 0x756F792D726F66, 0xE700000000000000, v3, v7);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  swift_bridgeObjectRelease(v7);
  v9 = swift_bridgeObjectRelease(v1);
  v10 = *(_QWORD *)(v0 + 48);
  if (v2)
  {
    swift_task_dealloc(*(_QWORD *)(v0 + 48));
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v12 = Array<A>.positionScored()(v8, v9);
    swift_bridgeObjectRelease(v8);
    swift_task_dealloc(v10);
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(v12);
  }
}

uint64_t sub_100326120(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc(dword_1009DAC5C);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_100329468;
  return sub_100325ED4(a1);
}

uint64_t sub_100326170(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v2[2] = a1;
  v2[3] = v1;
  v3 = type metadata accessor for Book.MediaType(0);
  v2[4] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[5] = v4;
  v2[6] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1003261D0, 0, 0);
}

uint64_t sub_1003261D0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = MangaYouMightLikeOptions.hydratedBooksFetchLimit.getter();
  v2 = (_QWORD *)swift_task_alloc(dword_1009DABE4);
  *(_QWORD *)(v0 + 56) = v2;
  *v2 = v0;
  v2[1] = sub_100326234;
  return sub_100325514((uint64_t)&off_1008F0808, v1);
}

uint64_t sub_100326234(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(*v2 + 56);
  v5 = *v2;
  *(_QWORD *)(v5 + 64) = v1;
  swift_task_dealloc(v4);
  if (v1)
  {
    swift_task_dealloc(*(_QWORD *)(v5 + 48));
    return (*(uint64_t (**)(void))(v5 + 8))();
  }
  else
  {
    *(_QWORD *)(v5 + 72) = a1;
    return swift_task_switch(sub_1003262BC, 0, 0);
  }
}

uint64_t sub_1003262BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v12;

  v2 = *(_QWORD *)(v0 + 64);
  v1 = *(_QWORD *)(v0 + 72);
  v4 = *(_QWORD *)(v0 + 40);
  v3 = *(_QWORD *)(v0 + 48);
  v5 = *(_QWORD *)(v0 + 32);
  v6 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v4 + 104))(v3, enum case for Book.MediaType.ebook(_:), v5);
  v7 = (_QWORD *)MangaYouMightLikeOptions.excludedStoreIDs.getter(v6);
  v8 = sub_100328810(v1, 0xD000000000000014, 0x80000001007B1D80, v3, v7);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  swift_bridgeObjectRelease(v7);
  v9 = swift_bridgeObjectRelease(v1);
  v10 = *(_QWORD *)(v0 + 48);
  if (v2)
  {
    swift_task_dealloc(*(_QWORD *)(v0 + 48));
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v12 = Array<A>.positionScored()(v8, v9);
    swift_bridgeObjectRelease(v8);
    swift_task_dealloc(v10);
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(v12);
  }
}

uint64_t sub_1003263D4(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc(dword_1009DAC64);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_100326424;
  return sub_100326170(a1);
}

uint64_t sub_100326424(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *(_QWORD *)(*v2 + 16);
  v5 = *v2;
  v6 = swift_task_dealloc(v4);
  if (!v1)
    v6 = a1;
  return (*(uint64_t (**)(uint64_t))(v5 + 8))(v6);
}

uint64_t sub_100326478(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v2[2] = a1;
  v2[3] = v1;
  v3 = type metadata accessor for Book.MediaType(0);
  v2[4] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[5] = v4;
  v2[6] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1003264D8, 0, 0);
}

uint64_t sub_1003264D8()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = MoreFromYourAuthorsOptions.hydratedBooksFetchLimit.getter();
  v2 = (_QWORD *)swift_task_alloc(dword_1009DABE4);
  *(_QWORD *)(v0 + 56) = v2;
  *v2 = v0;
  v2[1] = sub_10032653C;
  return sub_100325514((uint64_t)&off_1008F0838, v1);
}

uint64_t sub_10032653C(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(*v2 + 56);
  v5 = *v2;
  *(_QWORD *)(v5 + 64) = v1;
  swift_task_dealloc(v4);
  if (v1)
  {
    swift_task_dealloc(*(_QWORD *)(v5 + 48));
    return (*(uint64_t (**)(void))(v5 + 8))();
  }
  else
  {
    *(_QWORD *)(v5 + 72) = a1;
    return swift_task_switch(sub_1003265C4, 0, 0);
  }
}

uint64_t sub_1003265C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v12;

  v2 = *(_QWORD *)(v0 + 64);
  v1 = *(_QWORD *)(v0 + 72);
  v4 = *(_QWORD *)(v0 + 40);
  v3 = *(_QWORD *)(v0 + 48);
  v5 = *(_QWORD *)(v0 + 32);
  v6 = MoreFromYourAuthorsOptions.mediaType.getter();
  v7 = (_QWORD *)MoreFromYourAuthorsOptions.excludedStoreIDs.getter(v6);
  v8 = sub_100328810(v1, 0xD000000000000016, 0x80000001007B1DA0, v3, v7);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  swift_bridgeObjectRelease(v7);
  v9 = swift_bridgeObjectRelease(v1);
  v10 = *(_QWORD *)(v0 + 48);
  if (v2)
  {
    swift_task_dealloc(*(_QWORD *)(v0 + 48));
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v12 = Array<A>.positionScored()(v8, v9);
    swift_bridgeObjectRelease(v8);
    swift_task_dealloc(v10);
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(v12);
  }
}

uint64_t sub_1003266C8(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc(dword_1009DAC6C);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_100329468;
  return sub_100326478(a1);
}

uint64_t sub_100326718(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  int64_t v16;
  _QWORD *v17;
  uint64_t v18;
  __n128 v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  int64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(uint64_t *, _QWORD, uint64_t);
  uint64_t *v34;
  char *v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  double v43;
  uint64_t *v44;
  uint64_t isUniquelyReferenced_nonNull_native;
  char v46;
  unint64_t v47;
  uint64_t v48;
  _BOOL8 v49;
  uint64_t v50;
  char v51;
  unint64_t v52;
  char v53;
  _QWORD *v54;
  uint64_t *v55;
  uint64_t v56;
  BOOL v57;
  uint64_t v58;
  void *v59;
  uint64_t v60;
  _QWORD *v61;
  uint64_t v62;
  id v63;
  id v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  char *v75;
  __n128 v76;
  int64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  NSObject *v81;
  os_log_type_t v82;
  _BOOL4 v83;
  uint64_t v84;
  uint8_t *v85;
  uint64_t result;
  void *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  os_log_type_t v92;
  uint8_t *v93;
  uint64_t v94;
  uint64_t v95;
  unint64_t v96;
  unint64_t v97;
  uint64_t v98;
  int64_t v99;
  unint64_t v100;
  uint64_t *v101;
  char *v102;
  int v103;
  unsigned int v104;
  unsigned int v105;
  char *v106;
  uint64_t v107;
  int64_t v108;
  int v109;
  _OWORD *v110;
  uint64_t v111;
  char *v112;
  char *v113;
  char *v114;
  int64_t v115;
  char *v116;
  uint64_t v117;
  char v118[8];
  uint64_t v119;
  uint64_t v120;
  char v121[16];
  _QWORD v122[2];
  __int128 v123;
  uint64_t v124;
  __int128 v125;
  _OWORD v126[2];
  uint64_t v127;
  uint64_t v128;
  char v129;
  uint64_t v130;

  v117 = type metadata accessor for JSON(0);
  v2 = *(_QWORD *)(v117 - 8);
  __chkstk_darwin(v117);
  v116 = (char *)&v98 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v6 = (char *)&v98 - v5;
  __chkstk_darwin(v7);
  v106 = (char *)&v98 - v8;
  __chkstk_darwin(v9);
  v11 = (uint64_t *)((char *)&v98 - v10);
  v12 = *(_QWORD *)(a1 + 64);
  v107 = a1 + 64;
  v13 = 1 << *(_BYTE *)(a1 + 32);
  v14 = -1;
  if (v13 < 64)
    v14 = ~(-1 << v13);
  v15 = v14 & v12;
  v110 = v126;
  v113 = &v129;
  v103 = enum case for JSON.number(_:);
  v105 = enum case for JSON.false(_:);
  v104 = enum case for JSON.true(_:);
  v109 = enum case for JSON.string(_:);
  v108 = (unint64_t)(v13 + 63) >> 6;
  v99 = v108 - 1;
  v111 = a1;
  swift_bridgeObjectRetain(a1);
  v16 = 0;
  v102 = 0;
  v17 = _swiftEmptyDictionarySingleton;
  v112 = (char *)&type metadata for Any + 8;
  v114 = v6;
  while (1)
  {
    if (v15)
    {
      v20 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v21 = v20 | (v16 << 6);
LABEL_8:
      v22 = *(_QWORD *)(v111 + 56);
      v23 = (_QWORD *)(*(_QWORD *)(v111 + 48) + 16 * v21);
      v24 = v23[1];
      *(_QWORD *)&v125 = *v23;
      *((_QWORD *)&v125 + 1) = v24;
      sub_10000B5E4(v22 + 32 * v21, (uint64_t)v110, (uint64_t *)&unk_1009D04E0);
      swift_bridgeObjectRetain(v24);
      goto LABEL_18;
    }
    v25 = v16 + 1;
    if (__OFADD__(v16, 1))
      goto LABEL_75;
    if (v25 < v108)
    {
      v26 = *(_QWORD *)(v107 + 8 * v25);
      if (v26)
        goto LABEL_12;
      v16 += 2;
      if (v25 + 1 >= v108)
      {
        v16 = v25;
      }
      else
      {
        v26 = *(_QWORD *)(v107 + 8 * v16);
        if (v26)
        {
          ++v25;
LABEL_12:
          v15 = (v26 - 1) & v26;
          v21 = __clz(__rbit64(v26)) + (v25 << 6);
          v16 = v25;
          goto LABEL_8;
        }
        if (v25 + 2 < v108)
        {
          v26 = *(_QWORD *)(v107 + 8 * (v25 + 2));
          if (v26)
          {
            v25 += 2;
            goto LABEL_12;
          }
          v77 = v25 + 3;
          if (v25 + 3 < v108)
          {
            v26 = *(_QWORD *)(v107 + 8 * v77);
            if (!v26)
            {
              while (1)
              {
                v25 = v77 + 1;
                if (__OFADD__(v77, 1))
                  break;
                if (v25 >= v108)
                {
                  v16 = v99;
                  goto LABEL_17;
                }
                v26 = *(_QWORD *)(v107 + 8 * v25);
                ++v77;
                if (v26)
                  goto LABEL_12;
              }
              __break(1u);
LABEL_78:
              swift_once(&qword_1009CDE88, sub_100324B38);
LABEL_70:
              v90 = type metadata accessor for Logger(0);
              sub_100048F64(v90, (uint64_t)qword_100A1E510);
              swift_errorRetain(v6);
              v91 = swift_errorRetain(v6);
              v81 = Logger.logObject.getter(v91);
              v92 = static os_log_type_t.error.getter(v81);
              if (os_log_type_enabled(v81, v92))
              {
                v93 = (uint8_t *)swift_slowAlloc(12, -1);
                v94 = swift_slowAlloc(32, -1);
                v127 = v94;
                *(_DWORD *)v93 = 136315138;
                swift_getErrorValue(v6, v121, v118);
                v95 = Error.localizedDescription.getter(v119, v120);
                v97 = v96;
                *(_QWORD *)&v125 = sub_100040F58(v95, v96, &v127);
                UnsafeMutableRawBufferPointer.copyMemory(from:)(&v125, (char *)&v125 + 8, v93 + 4, v93 + 12);
                swift_bridgeObjectRelease(v97);
                swift_errorRelease(v6);
                swift_errorRelease(v6);
                _os_log_impl((void *)&_mh_execute_header, v81, v92, "Failed to encode or decode JSON: %s", v93, 0xCu);
                swift_arrayDestroy(v94, 1, (char *)&type metadata for Any + 8);
                swift_slowDealloc(v94, -1, -1);
                swift_slowDealloc(v93, -1, -1);

                swift_errorRelease(v6);
                return 0;
              }
              swift_errorRelease(v6);
              swift_errorRelease(v6);
              swift_errorRelease(v6);
              goto LABEL_64;
            }
            v25 += 3;
            goto LABEL_12;
          }
          v16 = v25 + 2;
        }
      }
    }
LABEL_17:
    v15 = 0;
    memset(v126, 0, sizeof(v126));
    v125 = 0u;
LABEL_18:
    sub_100025B3C((uint64_t)&v125, (uint64_t)&v127, &qword_1009DAC10);
    v27 = v128;
    if (!v128)
    {
      v78 = v111;
      swift_release(v111);
      if (!v17[2] && *(_QWORD *)(v78 + 16))
      {
        swift_bridgeObjectRelease(v17);
        return 0;
      }
      return (uint64_t)v17;
    }
    v28 = v127;
    sub_100025B3C((uint64_t)v113, (uint64_t)&v123, (uint64_t *)&unk_1009D04E0);
    if (!v124)
    {
      swift_bridgeObjectRelease(v27);
      swift_bridgeObjectRelease(v17);
      sub_100010960((uint64_t)&v123, (uint64_t *)&unk_1009D04E0);
      if (qword_1009CDE88 == -1)
        goto LABEL_61;
      goto LABEL_76;
    }
    sub_10004CFC4(&v123, &v125);
    sub_10004CD0C((uint64_t)&v125, (uint64_t)&v123);
    v29 = swift_dynamicCast(v122, &v123, v112, &type metadata for String, 6);
    v115 = v16;
    if (v29)
    {
      v30 = v122[0];
      v31 = v122[1];
      v32 = swift_allocObject(&unk_1008FD300, 32, 7);
      *(_QWORD *)(v32 + 16) = v30;
      *(_QWORD *)(v32 + 24) = v31;
      *v11 = v32;
      v33 = *(void (**)(uint64_t *, _QWORD, uint64_t))(v2 + 104);
      v34 = v11;
      v35 = (char *)&v130 + 4;
LABEL_32:
      v38 = v117;
      v33(v34, *((unsigned int *)v35 - 64), v117);
      goto LABEL_33;
    }
    sub_10004CD0C((uint64_t)&v125, (uint64_t)&v123);
    if (swift_dynamicCast(v122, &v123, (char *)&type metadata for Any + 8, &type metadata for Bool, 6))
    {
      if (LOBYTE(v122[0]))
        v36 = v104;
      else
        v36 = v105;
      v37 = v106;
      v38 = v117;
      (*(void (**)(char *, uint64_t, uint64_t))(v2 + 104))(v106, v36, v117);
      (*(void (**)(uint64_t *, char *, uint64_t))(v2 + 32))(v11, v37, v38);
      goto LABEL_33;
    }
    sub_10004CD0C((uint64_t)&v125, (uint64_t)&v123);
    if (swift_dynamicCast(v122, &v123, (char *)&type metadata for Any + 8, &type metadata for Int, 6))
    {
      v39 = v122[0];
      v40 = swift_allocObject(&unk_1008FD300, 32, 7);
      *(_QWORD *)&v123 = v39;
      v41 = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
LABEL_31:
      *(_QWORD *)(v40 + 16) = v41;
      *(_QWORD *)(v40 + 24) = v42;
      *v11 = v40;
      v33 = *(void (**)(uint64_t *, _QWORD, uint64_t))(v2 + 104);
      v34 = v11;
      v35 = (char *)&v128 + 4;
      goto LABEL_32;
    }
    sub_10004CD0C((uint64_t)&v125, (uint64_t)&v123);
    if (swift_dynamicCast(v122, &v123, (char *)&type metadata for Any + 8, &type metadata for Double, 6))
    {
      v43 = *(double *)v122;
      v40 = swift_allocObject(&unk_1008FD300, 32, 7);
      v41 = Double.description.getter(v43);
      goto LABEL_31;
    }
    v101 = v11;
    v59 = (void *)objc_opt_self(NSJSONSerialization);
    v60 = *((_QWORD *)&v126[0] + 1);
    v61 = sub_10003F198(&v125, *((uint64_t *)&v126[0] + 1));
    v62 = _bridgeAnythingToObjectiveC<A>(_:)(v61, v60);
    *(_QWORD *)&v123 = 0;
    v63 = objc_msgSend(v59, "dataWithJSONObject:options:error:", v62, 0, &v123);
    swift_unknownObjectRelease(v62);
    v64 = (id)v123;
    if (!v63)
    {
      v87 = v64;
      swift_bridgeObjectRelease(v17);
      swift_bridgeObjectRelease(v27);
      v6 = (char *)_convertNSErrorToError(_:)(v87);

      swift_willThrow(v88);
      v89 = v111;
      goto LABEL_69;
    }
    v65 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v63);
    v100 = v66;

    v67 = type metadata accessor for JSONDecoder(0);
    v68 = swift_allocObject(v67, *(unsigned int *)(v67 + 48), *(unsigned __int16 *)(v67 + 52));
    v69 = JSONDecoder.init()(v68);
    v70 = sub_100008DB0(&qword_1009DAC18, (uint64_t (*)(uint64_t))&type metadata accessor for JSON, (uint64_t)&protocol conformance descriptor for JSON);
    v71 = v117;
    v72 = v65;
    v73 = v65;
    v74 = v100;
    v75 = v102;
    dispatch thunk of JSONDecoder.decode<A>(_:from:)(v117, v73, v100, v117, v70);
    v102 = v75;
    if (v75)
    {
      sub_10005EE1C(v72, v74);
      swift_bridgeObjectRelease(v17);
      swift_release(v111);
      swift_bridgeObjectRelease(v27);
      v89 = v69;
      v6 = v102;
LABEL_69:
      swift_release(v89);
      _s5Books15CurrentPageViewVwxx_0(&v125);
      if (qword_1009CDE88 != -1)
        goto LABEL_78;
      goto LABEL_70;
    }
    sub_10005EE1C(v72, v74);
    v76 = swift_release(v69);
    v11 = v101;
    (*(void (**)(uint64_t *, char *, uint64_t, __n128))(v2 + 32))(v101, v114, v71, v76);
    v38 = v71;
LABEL_33:
    v44 = v11;
    (*(void (**)(char *, uint64_t *, uint64_t))(v2 + 16))(v116, v11, v38);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v17);
    *(_QWORD *)&v123 = v17;
    v47 = sub_10004CE80(v28, v27);
    v48 = v17[2];
    v49 = (v46 & 1) == 0;
    v50 = v48 + v49;
    if (__OFADD__(v48, v49))
    {
      __break(1u);
LABEL_74:
      __break(1u);
LABEL_75:
      __break(1u);
LABEL_76:
      swift_once(&qword_1009CDE88, sub_100324B38);
LABEL_61:
      v79 = type metadata accessor for Logger(0);
      v80 = sub_100048F64(v79, (uint64_t)qword_100A1E510);
      v81 = Logger.logObject.getter(v80);
      v82 = static os_log_type_t.error.getter(v81);
      v83 = os_log_type_enabled(v81, v82);
      v84 = v111;
      if (v83)
      {
        v85 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v85 = 0;
        _os_log_impl((void *)&_mh_execute_header, v81, v82, "Failed to encode or decode JSON", v85, 2u);
        swift_slowDealloc(v85, -1, -1);
      }
      swift_release(v84);
LABEL_64:

      return 0;
    }
    v51 = v46;
    if (v17[3] < v50)
      break;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      sub_1002C05F4();
LABEL_39:
    v6 = v114;
    v54 = (_QWORD *)v123;
    if ((v51 & 1) != 0)
    {
      v18 = v117;
      (*(void (**)(unint64_t, char *, uint64_t))(v2 + 40))(*(_QWORD *)(v123 + 56) + *(_QWORD *)(v2 + 72) * v47, v116, v117);
    }
    else
    {
      *(_QWORD *)(v123 + 8 * (v47 >> 6) + 64) |= 1 << v47;
      v55 = (uint64_t *)(v54[6] + 16 * v47);
      *v55 = v28;
      v55[1] = v27;
      v18 = v117;
      (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(v54[7] + *(_QWORD *)(v2 + 72) * v47, v116, v117);
      v56 = v54[2];
      v57 = __OFADD__(v56, 1);
      v58 = v56 + 1;
      if (v57)
        goto LABEL_74;
      v54[2] = v58;
      swift_bridgeObjectRetain(v27);
    }
    v17 = (_QWORD *)v123;
    swift_bridgeObjectRelease(v27);
    v19 = swift_bridgeObjectRelease(0x8000000000000000);
    v11 = v44;
    (*(void (**)(uint64_t *, uint64_t, __n128))(v2 + 8))(v44, v18, v19);
    _s5Books15CurrentPageViewVwxx_0(&v125);
    v16 = v115;
  }
  sub_10037B4B8(v50, isUniquelyReferenced_nonNull_native);
  v52 = sub_10004CE80(v28, v27);
  if ((v51 & 1) == (v53 & 1))
  {
    v47 = v52;
    goto LABEL_39;
  }
  result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
  __break(1u);
  return result;
}

uint64_t sub_1003272E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  unsigned int *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v10;
  uint64_t v11;
  _BYTE *v12;

  if (a2)
  {
    if (a1 == 0x736B6F6F62 && a2 == 0xE500000000000000
      || (_stringCompareWithSmolCheck(_:_:expecting:)(0x736B6F6F62, 0xE500000000000000, a1, a2, 0) & 1) != 0)
    {
      v6 = (unsigned int *)&enum case for Book.MediaType.ebook(_:);
LABEL_6:
      v7 = *v6;
      v8 = type metadata accessor for Book.MediaType(0);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(a3, v7, v8);
    }
    if (a1 == 0x6F622D6F69647561 && a2 == 0xEB00000000736B6FLL
      || (_stringCompareWithSmolCheck(_:_:expecting:)(0x6F622D6F69647561, 0xEB00000000736B6FLL, a1, a2, 0) & 1) != 0)
    {
      v6 = (unsigned int *)&enum case for Book.MediaType.audiobook(_:);
      goto LABEL_6;
    }
  }
  v10 = sub_100328E64();
  v11 = swift_allocError(&_s31MediaAPICollectionServiceErrorsON, v10, 0, 0);
  *v12 = 1;
  return swift_willThrow(v11);
}

uint64_t sub_100327428@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t, uint64_t);
  int v16;
  unsigned int *v17;
  uint64_t v18;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  Swift::String v24;
  uint64_t v25;
  unint64_t v26;

  v6 = type metadata accessor for Book.MediaType(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v25 - v11;
  v13 = sub_100326718(a1);
  if (!v13)
  {
    v18 = type metadata accessor for Book.Content(0);
    return (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(a3, 1, 1, v18);
  }
  v14 = v13;
  v15 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  v15(v12, a2, v6);
  v16 = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v12, v6);
  if (v16 == enum case for Book.MediaType.ebook(_:))
  {
    *a3 = v14;
    v17 = (unsigned int *)&enum case for Book.Content.ebook(_:);
LABEL_7:
    v20 = *v17;
    v21 = type metadata accessor for Book.Content(0);
    v22 = *(_QWORD *)(v21 - 8);
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v22 + 104))(a3, v20, v21);
    return (*(uint64_t (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v22 + 56))(a3, 0, 1, v21);
  }
  if (v16 == enum case for Book.MediaType.audiobook(_:))
  {
    *a3 = v14;
    v17 = (unsigned int *)&enum case for Book.Content.audiobook(_:);
    goto LABEL_7;
  }
  v23 = swift_bridgeObjectRelease(v14);
  ((void (*)(char *, uint64_t, uint64_t, __n128))v15)(v9, a2, v6, v23);
  v25 = 0;
  v26 = 0xE000000000000000;
  _StringGuts.grow(_:)(21);
  v24._object = (void *)0x80000001007BF840;
  v24._countAndFlagsBits = 0xD000000000000013;
  String.append(_:)(v24);
  _print_unlocked<A, B>(_:_:)(v9, &v25, v6, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, v25, v26, "Books/MediaAPICollectionService.swift", 37, 2, 231, 0);
  __break(1u);
  return result;
}

uint64_t sub_100327660(unint64_t a1, uint64_t a2, uint64_t a3)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;

  v5 = a1;
  v6 = a1 >> 16;
  v7 = (unsigned __int16)a1 >> 14;
  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    v13 = String.UTF16View.index(_:offsetBy:)(15, v6, a2);
    v14 = v13 + (v7 << 16);
    v15 = v13 & 0xFFFFFFFFFFFFFFFCLL | v5 & 3;
    v16 = v14 & 0xFFFFFFFFFFFF0000;
    if (!v7)
      v16 = v15;
    return v16 | 4;
  }
  else
  {
    v8 = String.UTF8View._foreignIndex(_:offsetBy:)(15, v6);
    v9 = v8 + (v7 << 16);
    v10 = v8 & 0xFFFFFFFFFFFFFFFCLL | v5 & 3;
    v11 = v9 & 0xFFFFFFFFFFFF0000;
    if (!v7)
      v11 = v10;
    return v11 | 8;
  }
}

unsigned __int8 *sub_1003276D8(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  return sub_100327808(a1, a2, a3);
}

unsigned __int8 *sub_1003276EC(unsigned __int8 *a1, uint64_t a2, int64_t a3)
{
  return sub_100327A84(a1, a2, a3);
}

uint64_t sub_100327700(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10032770C(a1, a2, a3, (uint64_t (*)(uint64_t *, uint64_t, uint64_t))sub_100327808);
}

uint64_t sub_10032770C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t *, uint64_t, uint64_t))
{
  __n128 v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;

  v17 = a1;
  v18 = a2;
  v6 = swift_bridgeObjectRetain(a2);
  v7 = String.init<A>(_:)(&v17, &type metadata for String, &protocol witness table for String, &protocol witness table for String, v6);
  v9 = v7;
  v10 = v8;
  if ((v8 & 0x1000000000000000) == 0)
  {
    if ((v8 & 0x2000000000000000) == 0)
      goto LABEL_3;
LABEL_6:
    v12 = HIBYTE(v10) & 0xF;
    v17 = v9;
    v18 = v10 & 0xFFFFFFFFFFFFFFLL;
    v11 = &v17;
    goto LABEL_7;
  }
  v9 = sub_100327D00(v7, v8);
  v14 = v13;
  swift_bridgeObjectRelease(v10);
  v10 = v14;
  if ((v14 & 0x2000000000000000) != 0)
    goto LABEL_6;
LABEL_3:
  if ((v9 & 0x1000000000000000) != 0)
  {
    v11 = (uint64_t *)((v10 & 0xFFFFFFFFFFFFFFFLL) + 32);
    v12 = v9 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    v11 = (uint64_t *)_StringObject.sharedUTF8.getter(v9, v10);
  }
LABEL_7:
  v15 = a4(v11, v12, a3);
  swift_bridgeObjectRelease(v10);
  return v15;
}

uint64_t sub_1003277FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10032770C(a1, a2, a3, (uint64_t (*)(uint64_t *, uint64_t, uint64_t))sub_100327A84);
}

unsigned __int8 *sub_100327808(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  int v4;
  uint64_t v5;
  unsigned __int8 v6;
  unsigned __int8 v7;
  unsigned __int8 v8;
  uint64_t v9;
  unsigned __int8 *i;
  unsigned int v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 v15;
  unsigned __int8 v16;
  unsigned __int8 v17;
  unsigned __int8 *v18;
  unsigned int v19;
  char v20;
  uint64_t v21;
  unsigned __int8 v22;
  unsigned __int8 v23;
  unsigned __int8 v24;
  uint64_t v25;
  unsigned int v26;
  char v27;
  uint64_t v28;

  v3 = a2;
  v4 = *result;
  if (v4 != 43)
  {
    if (v4 == 45)
    {
      if (a2 >= 1)
      {
        v5 = a2 - 1;
        if (a2 != 1)
        {
          v6 = a3 + 48;
          v7 = a3 + 55;
          v8 = a3 + 87;
          if (a3 > 10)
          {
            v6 = 58;
          }
          else
          {
            v8 = 97;
            v7 = 65;
          }
          if (result)
          {
            v9 = 0;
            for (i = result + 1; ; ++i)
            {
              v11 = *i;
              if (v11 < 0x30 || v11 >= v6)
              {
                if (v11 < 0x41 || v11 >= v7)
                {
                  if (v11 < 0x61 || v11 >= v8)
                    return 0;
                  v12 = -87;
                }
                else
                {
                  v12 = -55;
                }
              }
              else
              {
                v12 = -48;
              }
              v13 = v9 * a3;
              if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63)
                return 0;
              v9 = v13 - (v11 + v12);
              if (__OFSUB__(v13, (v11 + v12)))
                return 0;
              if (!--v5)
                return (unsigned __int8 *)v9;
            }
          }
          return 0;
        }
        return 0;
      }
      __break(1u);
      goto LABEL_65;
    }
    if (a2)
    {
      v22 = a3 + 48;
      v23 = a3 + 55;
      v24 = a3 + 87;
      if (a3 > 10)
      {
        v22 = 58;
      }
      else
      {
        v24 = 97;
        v23 = 65;
      }
      if (result)
      {
        v25 = 0;
        do
        {
          v26 = *result;
          if (v26 < 0x30 || v26 >= v22)
          {
            if (v26 < 0x41 || v26 >= v23)
            {
              if (v26 < 0x61 || v26 >= v24)
                return 0;
              v27 = -87;
            }
            else
            {
              v27 = -55;
            }
          }
          else
          {
            v27 = -48;
          }
          v28 = v25 * a3;
          if ((unsigned __int128)(v25 * (__int128)a3) >> 64 != (v25 * a3) >> 63)
            return 0;
          v25 = v28 + (v26 + v27);
          if (__OFADD__(v28, (v26 + v27)))
            return 0;
          ++result;
          --v3;
        }
        while (v3);
        return (unsigned __int8 *)(v28 + (v26 + v27));
      }
      return 0;
    }
    return 0;
  }
  if (a2 < 1)
  {
LABEL_65:
    __break(1u);
    return result;
  }
  v14 = a2 - 1;
  if (a2 == 1)
    return 0;
  v15 = a3 + 48;
  v16 = a3 + 55;
  v17 = a3 + 87;
  if (a3 > 10)
  {
    v15 = 58;
  }
  else
  {
    v17 = 97;
    v16 = 65;
  }
  if (!result)
    return 0;
  v9 = 0;
  v18 = result + 1;
  do
  {
    v19 = *v18;
    if (v19 < 0x30 || v19 >= v15)
    {
      if (v19 < 0x41 || v19 >= v16)
      {
        if (v19 < 0x61 || v19 >= v17)
          return 0;
        v20 = -87;
      }
      else
      {
        v20 = -55;
      }
    }
    else
    {
      v20 = -48;
    }
    v21 = v9 * a3;
    if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63)
      return 0;
    v9 = v21 + (v19 + v20);
    if (__OFADD__(v21, (v19 + v20)))
      return 0;
    ++v18;
    --v14;
  }
  while (v14);
  return (unsigned __int8 *)v9;
}

unsigned __int8 *sub_100327A84(unsigned __int8 *result, uint64_t a2, int64_t a3)
{
  uint64_t v3;
  int v4;
  uint64_t v5;
  unsigned __int8 v6;
  unsigned __int8 v7;
  unsigned __int8 v8;
  unint64_t v9;
  unsigned __int8 *i;
  unsigned int v11;
  char v12;
  unint64_t v13;
  unsigned __int8 v14;
  BOOL v15;
  uint64_t v16;
  unsigned __int8 v17;
  unsigned __int8 v18;
  unsigned __int8 v19;
  unsigned __int8 *v20;
  unsigned int v21;
  char v22;
  unint64_t v23;
  unsigned __int8 v24;
  unsigned __int8 v25;
  unsigned __int8 v26;
  unsigned __int8 v27;
  unint64_t v28;
  unsigned int v29;
  char v30;
  unint64_t v31;
  unsigned __int8 v32;

  v3 = a2;
  v4 = *result;
  if (v4 != 43)
  {
    if (v4 == 45)
    {
      if (a2 >= 1)
      {
        v5 = a2 - 1;
        if (a2 != 1)
        {
          v6 = a3 + 48;
          v7 = a3 + 55;
          v8 = a3 + 87;
          if (a3 > 10)
          {
            v6 = 58;
          }
          else
          {
            v8 = 97;
            v7 = 65;
          }
          if (result)
          {
            v9 = 0;
            for (i = result + 1; ; ++i)
            {
              v11 = *i;
              if (v11 < 0x30 || v11 >= v6)
              {
                if (v11 < 0x41 || v11 >= v7)
                {
                  if (v11 < 0x61 || v11 >= v8)
                    return 0;
                  v12 = -87;
                }
                else
                {
                  v12 = -55;
                }
              }
              else
              {
                v12 = -48;
              }
              if (!is_mul_ok(v9, a3))
                return 0;
              v13 = v9 * a3;
              v14 = v11 + v12;
              v15 = v13 >= v14;
              v9 = v13 - v14;
              if (!v15)
                return 0;
              if (!--v5)
                return (unsigned __int8 *)v9;
            }
          }
          return 0;
        }
        return 0;
      }
      __break(1u);
      goto LABEL_66;
    }
    if (a2)
    {
      v25 = a3 + 48;
      v26 = a3 + 55;
      v27 = a3 + 87;
      if (a3 > 10)
      {
        v25 = 58;
      }
      else
      {
        v27 = 97;
        v26 = 65;
      }
      if (result)
      {
        v28 = 0;
        do
        {
          v29 = *result;
          if (v29 < 0x30 || v29 >= v25)
          {
            if (v29 < 0x41 || v29 >= v26)
            {
              if (v29 < 0x61 || v29 >= v27)
                return 0;
              v30 = -87;
            }
            else
            {
              v30 = -55;
            }
          }
          else
          {
            v30 = -48;
          }
          if (!is_mul_ok(v28, a3))
            return 0;
          v31 = v28 * a3;
          v32 = v29 + v30;
          v15 = __CFADD__(v31, v32);
          v28 = v31 + v32;
          if (v15)
            return 0;
          ++result;
          --v3;
        }
        while (v3);
        return (unsigned __int8 *)v28;
      }
      return 0;
    }
    return 0;
  }
  if (a2 < 1)
  {
LABEL_66:
    __break(1u);
    return result;
  }
  v16 = a2 - 1;
  if (a2 == 1)
    return 0;
  v17 = a3 + 48;
  v18 = a3 + 55;
  v19 = a3 + 87;
  if (a3 > 10)
  {
    v17 = 58;
  }
  else
  {
    v19 = 97;
    v18 = 65;
  }
  if (!result)
    return 0;
  v9 = 0;
  v20 = result + 1;
  do
  {
    v21 = *v20;
    if (v21 < 0x30 || v21 >= v17)
    {
      if (v21 < 0x41 || v21 >= v18)
      {
        if (v21 < 0x61 || v21 >= v19)
          return 0;
        v22 = -87;
      }
      else
      {
        v22 = -55;
      }
    }
    else
    {
      v22 = -48;
    }
    if (!is_mul_ok(v9, a3))
      return 0;
    v23 = v9 * a3;
    v24 = v21 + v22;
    v15 = __CFADD__(v23, v24);
    v9 = v23 + v24;
    if (v15)
      return 0;
    ++v20;
    --v16;
  }
  while (v16);
  return (unsigned __int8 *)v9;
}

uint64_t sub_100327D00(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;

  v2 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0)
    v2 = a1;
  v3 = 7;
  if (((a2 >> 60) & ((a1 & 0x800000000000000) == 0)) != 0)
    v3 = 11;
  v4 = String.subscript.getter(15, v3 | (v2 << 16), a1, a2);
  v6 = v5;
  v9 = sub_100327D7C(v4, v7, v8, v5);
  swift_bridgeObjectRelease(v6);
  return v9;
}

uint64_t sub_100327D7C(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v5;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[5];

  v5 = a3;
  if ((a4 & 0x1000000000000000) != 0)
  {
    v12 = sub_100327EC0(a1, a2, a3, a4);
    if (v12)
    {
      v9 = v12;
      v8 = (unint64_t)sub_1000413E8(v12, 0);
      v5 = sub_100327FAC((unint64_t)v15, v8 + 32, v9, a1, a2, v5, a4);
      v13 = v15[3];
      swift_bridgeObjectRetain(a4);
      swift_bridgeObjectRelease(v13);
      if (v5 != v9)
      {
        __break(1u);
        goto LABEL_11;
      }
    }
    else
    {
      v8 = (unint64_t)_swiftEmptyArrayStorage;
    }
    v14 = static String._uncheckedFromUTF8(_:)(v8 + 32, *(_QWORD *)(v8 + 16));
    swift_release(v8);
    return v14;
  }
  else
  {
    v8 = a1 >> 16;
    v9 = a2 >> 16;
    if ((a4 & 0x2000000000000000) == 0)
    {
      if ((a3 & 0x1000000000000000) != 0)
      {
        v10 = (a4 & 0xFFFFFFFFFFFFFFFLL) + 32;
LABEL_5:
        v10 += v8;
        return static String._uncheckedFromUTF8(_:)(v10, v9 - v8);
      }
LABEL_11:
      v10 = _StringObject.sharedUTF8.getter(v5, a4);
      if (!v10)
        return static String._uncheckedFromUTF8(_:)(v10, v9 - v8);
      goto LABEL_5;
    }
    v15[0] = a3;
    v15[1] = a4 & 0xFFFFFFFFFFFFFFLL;
    return static String._uncheckedFromUTF8(_:)((char *)v15 + v8, v9 - v8);
  }
}

unint64_t sub_100327EC0(unint64_t result, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;

  v7 = result;
  v8 = (a3 >> 59) & 1;
  if ((a4 & 0x1000000000000000) == 0)
    LOBYTE(v8) = 1;
  v9 = 4 << v8;
  if ((result & 0xC) == 4 << v8)
  {
    result = sub_100327660(result, a3, a4);
    v7 = result;
  }
  if ((a2 & 0xC) == v9)
  {
    result = sub_100327660(a2, a3, a4);
    a2 = result;
    if ((a4 & 0x1000000000000000) == 0)
      return (a2 >> 16) - (v7 >> 16);
  }
  else if ((a4 & 0x1000000000000000) == 0)
  {
    return (a2 >> 16) - (v7 >> 16);
  }
  v10 = HIBYTE(a4) & 0xF;
  if ((a4 & 0x2000000000000000) == 0)
    v10 = a3 & 0xFFFFFFFFFFFFLL;
  if (v10 < v7 >> 16)
  {
    __break(1u);
  }
  else if (v10 >= a2 >> 16)
  {
    return String.UTF8View._foreignDistance(from:to:)(v7, a2, a3, a4);
  }
  __break(1u);
  return result;
}

unint64_t sub_100327FAC(unint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, unint64_t a7)
{
  _QWORD *v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  char v19;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v26;
  unint64_t v27;
  _QWORD v28[2];

  v9 = (_QWORD *)result;
  if (!a2)
    goto LABEL_5;
  if (!a3)
  {
    v12 = a4;
    v11 = 0;
    goto LABEL_33;
  }
  if (a3 < 0)
    goto LABEL_36;
  v10 = a5 >> 14;
  v27 = a4 >> 14;
  if (a4 >> 14 == a5 >> 14)
  {
LABEL_5:
    v11 = 0;
    v12 = a4;
LABEL_33:
    *v9 = a4;
    v9[1] = a5;
    v9[2] = a6;
    v9[3] = a7;
    v9[4] = v12;
    return v11;
  }
  v11 = 0;
  v14 = (a6 >> 59) & 1;
  if ((a7 & 0x1000000000000000) == 0)
    LOBYTE(v14) = 1;
  v15 = 4 << v14;
  v21 = (a7 & 0xFFFFFFFFFFFFFFFLL) + 32;
  v22 = a7 & 0xFFFFFFFFFFFFFFLL;
  v16 = HIBYTE(a7) & 0xF;
  if ((a7 & 0x2000000000000000) == 0)
    v16 = a6 & 0xFFFFFFFFFFFFLL;
  v23 = v16;
  v26 = a3 - 1;
  v12 = a4;
  while (1)
  {
    v17 = v12 & 0xC;
    result = v12;
    if (v17 == v15)
      result = sub_100327660(v12, a6, a7);
    if (result >> 14 < v27 || result >> 14 >= v10)
      break;
    if ((a7 & 0x1000000000000000) != 0)
    {
      result = String.UTF8View._foreignSubscript(position:)();
      v19 = result;
      if (v17 != v15)
        goto LABEL_23;
    }
    else
    {
      v18 = result >> 16;
      if ((a7 & 0x2000000000000000) != 0)
      {
        v28[0] = a6;
        v28[1] = v22;
        v19 = *((_BYTE *)v28 + v18);
        if (v17 != v15)
          goto LABEL_23;
      }
      else
      {
        result = v21;
        if ((a6 & 0x1000000000000000) == 0)
          result = _StringObject.sharedUTF8.getter(a6, a7);
        v19 = *(_BYTE *)(result + v18);
        if (v17 != v15)
        {
LABEL_23:
          if ((a7 & 0x1000000000000000) == 0)
            goto LABEL_24;
          goto LABEL_27;
        }
      }
    }
    result = sub_100327660(v12, a6, a7);
    v12 = result;
    if ((a7 & 0x1000000000000000) == 0)
    {
LABEL_24:
      v12 = (v12 & 0xFFFFFFFFFFFF0000) + 65540;
      goto LABEL_29;
    }
LABEL_27:
    if (v23 <= v12 >> 16)
      goto LABEL_35;
    v12 = String.UTF8View._foreignIndex(after:)(v12, a6, a7);
LABEL_29:
    *(_BYTE *)(a2 + v11) = v19;
    if (v26 == v11)
    {
      v11 = a3;
      goto LABEL_33;
    }
    ++v11;
    if (v10 == v12 >> 14)
      goto LABEL_33;
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_1003281BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 24) = a1;
  *(_QWORD *)(v4 + 32) = a4;
  return swift_task_switch(sub_1003281D4, 0, 0);
}

uint64_t sub_1003281D4()
{
  uint64_t v0;
  int *v1;
  _QWORD *v2;
  uint64_t (*v4)(uint64_t);

  v1 = *(int **)(*(_QWORD *)(v0 + 32) + 16);
  v4 = (uint64_t (*)(uint64_t))((char *)v1 + *v1);
  v2 = (_QWORD *)swift_task_alloc(v1[1]);
  *(_QWORD *)(v0 + 40) = v2;
  *v2 = v0;
  v2[1] = sub_10032823C;
  return v4(v0 + 16);
}

uint64_t sub_10032823C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 40);
  *(_QWORD *)(*(_QWORD *)v1 + 48) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_1003282B4;
  else
    v3 = sub_1003282A0;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_1003282A0()
{
  uint64_t v0;

  **(_QWORD **)(v0 + 24) = *(_QWORD *)(v0 + 16);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1003282B4()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1003282C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 24) = a1;
  *(_QWORD *)(v4 + 32) = a4;
  return swift_task_switch(sub_1003282D8, 0, 0);
}

uint64_t sub_1003282D8()
{
  uint64_t v0;
  int *v1;
  _QWORD *v2;
  uint64_t (*v4)(uint64_t);

  v1 = *(int **)(*(_QWORD *)(v0 + 32) + 16);
  v4 = (uint64_t (*)(uint64_t))((char *)v1 + *v1);
  v2 = (_QWORD *)swift_task_alloc(v1[1]);
  *(_QWORD *)(v0 + 40) = v2;
  *v2 = v0;
  v2[1] = sub_100328340;
  return v4(v0 + 16);
}

uint64_t sub_100328340()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 40);
  *(_QWORD *)(*(_QWORD *)v1 + 48) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_100329464;
  else
    v3 = sub_10032946C;
  return swift_task_switch(v3, 0, 0);
}

_QWORD *sub_1003283A4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  uint8_t *v29;
  uint64_t v30;
  void (*v31)(uint64_t, uint64_t);
  uint64_t v32;
  __n128 v33;
  void (*v34)(char *, char *, uint64_t);
  char *v35;
  unint64_t v36;
  unint64_t v37;
  _QWORD *v38;
  unint64_t v39;
  __n128 v41;
  uint64_t *v42;
  uint8_t *v43;
  NSObject *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;

  v3 = v2;
  v6 = sub_10004CFD4(&qword_1009DAC00);
  __chkstk_darwin(v6);
  v8 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Book(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v53 = (char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  __chkstk_darwin(v13);
  v15 = (char *)&v41 - v14;
  __chkstk_darwin(v16);
  v49 = (char *)&v41 - v18;
  v54 = a1;
  v52 = *(_QWORD *)(a1 + 16);
  if (!v52)
    return _swiftEmptyArrayStorage;
  v46 = v17;
  v42 = &v57;
  v19 = swift_bridgeObjectRetain(v54);
  v20 = 0;
  v55 = _swiftEmptyArrayStorage;
  v19.n128_u64[0] = 134217984;
  v41 = v19;
  v50 = v15;
  v51 = v10;
  v47 = a2;
  v48 = v8;
  do
  {
    v21 = *(_QWORD *)(v54 + 8 * v20 + 32);
    swift_bridgeObjectRetain_n(v21, 2);
    sub_100324BB8(v21, (uint64_t)v15);
    if (v3)
    {
      swift_bridgeObjectRelease(v55);
      swift_bridgeObjectRelease(v54);
      swift_bridgeObjectRelease(v21);
      return v55;
    }
    v22 = Book.storeID.getter();
    if (sub_100324430(v22, a2))
    {
      v23 = v9;
      if (qword_1009CDE88 != -1)
        swift_once(&qword_1009CDE88, sub_100324B38);
      v24 = type metadata accessor for Logger(0);
      sub_100048F64(v24, (uint64_t)qword_100A1E510);
      v25 = v46;
      v26 = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v10 + 16))(v46, v50, v23);
      v27 = Logger.logObject.getter(v26);
      v28 = static os_log_type_t.info.getter(v27);
      if (os_log_type_enabled(v27, v28))
      {
        v29 = (uint8_t *)swift_slowAlloc(12, -1);
        v44 = v27;
        v45 = 0;
        *(_DWORD *)v29 = v41.n128_u32[0];
        v43 = v29 + 4;
        v30 = Book.storeID.getter();
        v31 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
        v31(v25, v23);
        v56 = v30;
        v27 = v44;
        v3 = v45;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v56, v42, v43, v29 + 12);
        _os_log_impl((void *)&_mh_execute_header, v27, v28, "excluded storeID: %llu", v29, 0xCu);
        swift_slowDealloc(v29, -1, -1);
      }
      else
      {
        v31 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
        v31(v25, v23);
      }
      v8 = v48;
      v9 = v23;

      v15 = v50;
      v31((uint64_t)v50, v9);
      v32 = 1;
      a2 = v47;
      v10 = v51;
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v8, v15, v9);
      v32 = 0;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, v32, 1, v9);
    v33 = swift_bridgeObjectRelease(v21);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v10 + 48))(v8, 1, v9, v33) == 1)
    {
      sub_100010960((uint64_t)v8, &qword_1009DAC00);
    }
    else
    {
      v34 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
      v35 = v49;
      v34(v49, v8, v9);
      v34(v53, v35, v9);
      if ((swift_isUniquelyReferenced_nonNull_native(v55) & 1) == 0)
        v55 = (_QWORD *)sub_1005B1034(0, v55[2] + 1, 1, (unint64_t)v55);
      v37 = v55[2];
      v36 = v55[3];
      if (v37 >= v36 >> 1)
        v55 = (_QWORD *)sub_1005B1034(v36 > 1, v37 + 1, 1, (unint64_t)v55);
      v38 = v55;
      v55[2] = v37 + 1;
      v39 = (unint64_t)v38
          + ((*(unsigned __int8 *)(v51 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v51 + 80))
          + *(_QWORD *)(v51 + 72) * v37;
      v10 = v51;
      v34((char *)v39, v53, v9);
    }
    ++v20;
  }
  while (v52 != v20);
  swift_bridgeObjectRelease(v54);
  return v55;
}

uint64_t sub_100328810(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, _QWORD *a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  unint64_t v17;
  char v18;
  uint64_t v19;
  void (*v20)(_BYTE *, uint64_t, uint64_t);
  int v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t *v25;
  uint64_t *v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t result;
  uint64_t v30;
  unint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  NSObject *v37;
  os_log_type_t v38;
  int v39;
  uint64_t v40;
  NSObject *v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  Swift::String v45;
  _BYTE v46[12];
  int v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;

  v10 = type metadata accessor for Book.MediaType(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = &v46[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v14);
  v16 = &v46[-v15];
  if (!*(_QWORD *)(a1 + 16))
  {
    v49 = 0;
    v50 = 0;
    v51 = 0;
    v52 = 1;
    goto LABEL_11;
  }
  swift_bridgeObjectRetain(a3);
  v17 = sub_10004CE80(a2, a3);
  if ((v18 & 1) == 0)
  {
    v49 = 0;
    v50 = 0;
    v51 = 0;
    v52 = 1;
    v24 = a3;
LABEL_10:
    swift_bridgeObjectRelease(v24);
    goto LABEL_11;
  }
  sub_10000B5E4(*(_QWORD *)(a1 + 56) + 32 * v17, (uint64_t)&v49, (uint64_t *)&unk_1009D04E0);
  swift_bridgeObjectRelease(a3);
  if (v52 == 1)
  {
LABEL_11:
    v25 = &qword_1009D6FC0;
    v26 = &v49;
LABEL_12:
    sub_100010960((uint64_t)v26, v25);
    goto LABEL_13;
  }
  sub_100025B3C((uint64_t)&v49, (uint64_t)&v53, (uint64_t *)&unk_1009D04E0);
  if (!v55)
    goto LABEL_32;
  v19 = sub_10004CFD4(&qword_1009DABF0);
  if ((swift_dynamicCast(&v56, &v53, (char *)&type metadata for Any + 8, v19, 6) & 1) == 0)
    goto LABEL_13;
  v48 = v56;
  v20 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v11 + 16);
  v20(v16, a4, v10);
  v21 = (*(uint64_t (**)(_BYTE *, uint64_t))(v11 + 88))(v16, v10);
  if (v21 == enum case for Book.MediaType.ebook(_:))
  {
    v22 = 0xE500000000000000;
    v23 = 0x736B6F6F62;
LABEL_17:
    v30 = v48;
    if (*(_QWORD *)(v48 + 16))
    {
      swift_bridgeObjectRetain(v22);
      v31 = sub_10004CE80(v23, v22);
      if ((v32 & 1) != 0)
      {
        sub_10000B5E4(*(_QWORD *)(v30 + 56) + 32 * v31, (uint64_t)&v49, (uint64_t *)&unk_1009D04E0);
      }
      else
      {
        v49 = 0;
        v50 = 0;
        v51 = 0;
        v52 = 1;
      }
      swift_bridgeObjectRelease(v22);
    }
    else
    {
      v49 = 0;
      v50 = 0;
      v51 = 0;
      v52 = 1;
    }
    swift_bridgeObjectRelease(v30);
    if (v52 == 1)
    {
      v24 = v22;
      goto LABEL_10;
    }
    sub_100025B3C((uint64_t)&v49, (uint64_t)&v53, (uint64_t *)&unk_1009D04E0);
    if (v55)
    {
      v33 = sub_10004CFD4(&qword_1009DABF8);
      if ((swift_dynamicCast(&v56, &v53, (char *)&type metadata for Any + 8, v33, 6) & 1) != 0)
      {
        v34 = v56;
        if (qword_1009CDE88 != -1)
          swift_once(&qword_1009CDE88, sub_100324B38);
        v35 = type metadata accessor for Logger(0);
        sub_100048F64(v35, (uint64_t)qword_100A1E510);
        swift_bridgeObjectRetain_n(a3, 2);
        swift_bridgeObjectRetain_n(v34, 2);
        swift_bridgeObjectRetain(v22);
        v37 = Logger.logObject.getter(v36);
        v38 = static os_log_type_t.default.getter(v37);
        v39 = v38;
        if (os_log_type_enabled(v37, v38))
        {
          v40 = swift_slowAlloc(32, -1);
          v48 = swift_slowAlloc(64, -1);
          v53 = v48;
          *(_DWORD *)v40 = 136315650;
          v47 = v39;
          swift_bridgeObjectRetain(a3);
          v49 = sub_100040F58(a2, a3, &v53);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v49, &v50, v40 + 4, v40 + 12);
          swift_bridgeObjectRelease_n(a3, 3);
          *(_WORD *)(v40 + 12) = 2080;
          swift_bridgeObjectRetain(v22);
          v49 = sub_100040F58(v23, v22, &v53);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v49, &v50, v40 + 14, v40 + 22);
          swift_bridgeObjectRelease_n(v22, 3);
          *(_WORD *)(v40 + 22) = 2048;
          v41 = v37;
          v42 = *(_QWORD *)(v34 + 16);
          swift_bridgeObjectRelease(v34);
          v49 = v42;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v49, &v50, v40 + 24, v40 + 32);
          swift_bridgeObjectRelease(v34);
          _os_log_impl((void *)&_mh_execute_header, v41, (os_log_type_t)v47, "extractBooks: collection: %s mediaType: %s items: %ld", (uint8_t *)v40, 0x20u);
          v43 = v48;
          swift_arrayDestroy(v48, 2, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v43, -1, -1);
          swift_slowDealloc(v40, -1, -1);

        }
        else
        {

          swift_bridgeObjectRelease_n(v22, 2);
          swift_bridgeObjectRelease_n(a3, 2);
          swift_bridgeObjectRelease_n(v34, 2);
        }
        v44 = a5;
        swift_bridgeObjectRetain(a5);
        a5 = sub_1003283A4(v34, (uint64_t)a5);
        swift_bridgeObjectRelease(v34);
        swift_bridgeObjectRelease(v44);
        return (uint64_t)a5;
      }
      swift_bridgeObjectRelease(v22);
LABEL_13:
      v27 = sub_100328E20();
      v28 = swift_allocError(&type metadata for MediaAPICollectionService.Errors, v27, 0, 0);
      swift_willThrow(v28);
      return (uint64_t)a5;
    }
    swift_bridgeObjectRelease(v22);
LABEL_32:
    v25 = (uint64_t *)&unk_1009D04E0;
    v26 = &v53;
    goto LABEL_12;
  }
  if (v21 == enum case for Book.MediaType.audiobook(_:))
  {
    v22 = 0xEA0000000000736BLL;
    v23 = 0x6F6F626F69647561;
    goto LABEL_17;
  }
  v20(v13, a4, v10);
  v53 = 0;
  v54 = 0xE000000000000000;
  _StringGuts.grow(_:)(21);
  v45._object = (void *)0x80000001007BF840;
  v45._countAndFlagsBits = 0xD000000000000013;
  String.append(_:)(v45);
  _print_unlocked<A, B>(_:_:)(v13, &v53, v10, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, v53, v54, "Books/MediaAPICollectionService.swift", 37, 2, 53, 0);
  __break(1u);
  return result;
}

unint64_t sub_100328E20()
{
  unint64_t result;

  result = qword_1009DABE8;
  if (!qword_1009DABE8)
  {
    result = swift_getWitnessTable(&unk_10071AEA8, &type metadata for MediaAPICollectionService.Errors);
    atomic_store(result, (unint64_t *)&qword_1009DABE8);
  }
  return result;
}

unint64_t sub_100328E64()
{
  unint64_t result;

  result = qword_1009DAC08;
  if (!qword_1009DAC08)
  {
    result = swift_getWitnessTable(&unk_10071AE68, &_s31MediaAPICollectionServiceErrorsON);
    atomic_store(result, (unint64_t *)&qword_1009DAC08);
  }
  return result;
}

uint64_t sub_100328EA8()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

unint64_t sub_100328ECC()
{
  unint64_t result;

  result = qword_1009DAC30;
  if (!qword_1009DAC30)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for PersonalRecommendationIntent, &type metadata for PersonalRecommendationIntent);
    atomic_store(result, (unint64_t *)&qword_1009DAC30);
  }
  return result;
}

uint64_t sub_100328F10@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = sub_100324118(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), (uint64_t)&unk_1008FD328, (uint64_t)&unk_1009DAC48, (uint64_t (*)(char *, uint64_t, _QWORD *))sub_100488884);
  *a1 = result;
  return result;
}

uint64_t sub_100328F54(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_1009DAC44);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_10000AE34;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1009DAC40 + dword_1009DAC40))(a1, v4, v5, v6);
}

uint64_t sub_100328FD4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = sub_100324118(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), (uint64_t)&unk_1008FD350, (uint64_t)&unk_1009DAC88, (uint64_t (*)(char *, uint64_t, _QWORD *))sub_1004889B4);
  *a1 = result;
  return result;
}

unint64_t sub_100329014()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009DDF70;
  if (!qword_1009DDF70)
  {
    v1 = objc_opt_self(BKLibraryManager);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1009DDF70);
  }
  return result;
}

uint64_t sub_100329054(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_1009DAC84);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1001FC2C4;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1009DAC80 + dword_1009DAC80))(a1, v4, v5, v6);
}

uint64_t sub_1003290D4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = sub_100324118(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), (uint64_t)&unk_1008FD378, (uint64_t)&unk_1009DACB0, (uint64_t (*)(char *, uint64_t, _QWORD *))sub_100488AF4);
  *a1 = result;
  return result;
}

uint64_t sub_100329118(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_1009DACAC);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1001FC2C4;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1009DACA8 + dword_1009DACA8))(a1, v4, v5, v6);
}

uint64_t sub_100329198@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = sub_100324118(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), (uint64_t)&unk_1008FD3A0, (uint64_t)&unk_1009DACD8, (uint64_t (*)(char *, uint64_t, _QWORD *))sub_100488B00);
  *a1 = result;
  return result;
}

uint64_t sub_1003291DC()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100329208(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;

  v4 = *(_QWORD *)(v1 + 32);
  v5 = (_QWORD *)swift_task_alloc(dword_1009DACD4);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1001FC2C4;
  v5[2] = a1;
  v5[3] = v4;
  return swift_task_switch(sub_100324250, 0, 0);
}

uint64_t _s31MediaAPICollectionServiceErrorsOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1003292B8 + 4 * byte_10071AC65[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1003292EC + 4 * byte_10071AC60[v4]))();
}

uint64_t sub_1003292EC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1003292F4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1003292FCLL);
  return result;
}

uint64_t sub_100329308(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100329310);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_100329314(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10032931C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s31MediaAPICollectionServiceErrorsOMa()
{
  return &_s31MediaAPICollectionServiceErrorsON;
}

uint64_t storeEnumTagSinglePayload for MediaAPICollectionService.Errors(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_100329378 + 4 * byte_10071AC6A[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_100329398 + 4 * byte_10071AC6F[v4]))();
}

_BYTE *sub_100329378(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_100329398(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1003293A0(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1003293A8(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1003293B0(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1003293B8(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for MediaAPICollectionService.Errors()
{
  return &type metadata for MediaAPICollectionService.Errors;
}

unint64_t sub_1003293D8()
{
  unint64_t result;

  result = qword_1009DACE0;
  if (!qword_1009DACE0)
  {
    result = swift_getWitnessTable(&unk_10071ADD8, &type metadata for MediaAPICollectionService.Errors);
    atomic_store(result, (unint64_t *)&qword_1009DACE0);
  }
  return result;
}

unint64_t sub_100329420()
{
  unint64_t result;

  result = qword_1009DACE8;
  if (!qword_1009DACE8)
  {
    result = swift_getWitnessTable(&unk_10071AE40, &_s31MediaAPICollectionServiceErrorsON);
    atomic_store(result, (unint64_t *)&qword_1009DACE8);
  }
  return result;
}

uint64_t sub_100329478(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1003294AC + 4 * byte_10071AEF0[a1]))(0x7972617262696CLL, 0xE700000000000000);
}

unint64_t sub_1003294AC()
{
  return 0xD000000000000011;
}

uint64_t sub_100329560(char a1)
{
  return static String._unconditionallyBridgeFromObjectiveC(_:)(*(_QWORD *)*(&off_1008FD758 + a1));
}

uint64_t sub_100329578()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  sub_10001BFD8(v0, qword_1009DACF0);
  sub_100048F64(v0, (uint64_t)qword_1009DACF0);
  return Logger.init(subsystem:category:)(0xD000000000000010, 0x80000001007B2570, 0xD000000000000020, 0x80000001007BF950);
}

uint64_t sub_1003295F4(uint64_t a1)
{
  return sub_10032A7A8(a1, qword_100A1E528);
}

unint64_t sub_100329600()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(char *, uint64_t, uint64_t);
  char *v39;
  char *v40;
  void (*v41)(char *, uint64_t, uint64_t, uint64_t);
  char *v42;
  _BYTE *v43;
  uint64_t v44;
  char *v45;
  char *v46;
  char *v47;
  char *v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  void (*v56)(char *, uint64_t, uint64_t);
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  char *v64;
  char *v65;
  char *v66;
  char *v67;
  void (*v68)(char *, uint64_t, uint64_t, uint64_t);
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  _BYTE *v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  void (*v79)(char *, uint64_t, uint64_t);
  char *v80;
  char *v81;
  _BYTE *v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  void (*v88)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v89;
  uint64_t v90;
  unint64_t result;
  _QWORD v92[2];
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  void (*v96)(char *);
  uint64_t v97;
  char *v98;
  unsigned int v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  char *v107;

  v0 = sub_10004CFD4(&qword_1009D1378);
  __chkstk_darwin(v0);
  v106 = (char *)v92 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = sub_10004CFD4(&qword_1009D1338);
  __chkstk_darwin(v2);
  v101 = (char *)v92 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v104 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v102 = *(_QWORD *)(v104 - 8);
  __chkstk_darwin(v104);
  v5 = (char *)v92 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Locale(0);
  __chkstk_darwin(v6);
  v8 = (char *)v92 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v9);
  v11 = (char *)v92 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v105 = type metadata accessor for LocalizedStringResource(0);
  v12 = *(_QWORD *)(v105 - 8);
  __chkstk_darwin(v105);
  v14 = (char *)v92 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_10004CFD4((uint64_t *)&unk_1009DAED0);
  v16 = sub_10004CFD4(&qword_1009D0970);
  v17 = *(_QWORD *)(v16 - 8);
  v103 = *(_QWORD *)(v17 + 72);
  v18 = *(unsigned __int8 *)(v17 + 80);
  v19 = (v18 + 32) & ~v18;
  v94 = 8 * v103;
  v20 = swift_allocObject(v15, v19 + 8 * v103, v18 | 7);
  v95 = v20;
  *(_OWORD *)(v20 + 16) = xmmword_100711990;
  v21 = v20 + v19;
  v22 = *(int *)(v16 + 48);
  v97 = v16;
  v93 = v20 + v19 + v22;
  *(_BYTE *)(v20 + v19) = 0;
  v100 = v20 + v19;
  v23 = v11;
  v24 = String.LocalizationValue.init(stringLiteral:)(7105601, 0xE300000000000000);
  v98 = v8;
  static Locale.current.getter(v24);
  v99 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  v96 = *(void (**)(char *))(v102 + 104);
  v107 = v5;
  v25 = v104;
  v96(v5);
  v26 = v14;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v23, 0, 0, v8, v5, "'Library All' collection name - appears in the chooser when running an AppIntent that navigates to a standard collection.", 121, 2);
  v102 = *(_QWORD *)(v12 + 56);
  v27 = v101;
  v28 = v105;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v102)(v101, 1, 1, v105);
  v29 = v106;
  DisplayRepresentation.Image.init(systemName:tintColor:symbolConfiguration:)(0x65762E736B6F6F62, 0xEE006C6163697472, 0, 0);
  v30 = v26;
  DisplayRepresentation.init(title:subtitle:image:)(v26, v27, v29);
  v31 = v103;
  v93 = v21 + v103 + *(int *)(v16 + 48);
  *(_BYTE *)(v21 + v103) = 1;
  v32 = v23;
  v33 = String.LocalizationValue.init(stringLiteral:)(0x206F7420746E6157, 0xEC00000064616552);
  v34 = v98;
  static Locale.current.getter(v33);
  v35 = v107;
  v36 = v99;
  v37 = v25;
  v38 = (void (*)(char *, uint64_t, uint64_t))v96;
  ((void (*)(char *, _QWORD, uint64_t))v96)(v107, v99, v37);
  v39 = v30;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v32, 0, 0, v34, v35, "'Want to Read' collection name - appears in the chooser when running an AppIntent that navigates to a standard collection.", 122, 2);
  v40 = v101;
  v41 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v102;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v102)(v101, 1, 1, v28);
  v42 = v106;
  DisplayRepresentation.Image.init(systemName:tintColor:symbolConfiguration:)(0xD000000000000014, 0x80000001007B4AA0, 0, 0);
  DisplayRepresentation.init(title:subtitle:image:)(v39, v40, v42);
  v93 = 2 * v31;
  v43 = (_BYTE *)(v100 + 2 * v31);
  v92[1] = &v43[*(int *)(v97 + 48)];
  *v43 = 2;
  v44 = String.LocalizationValue.init(stringLiteral:)(0x64656873696E6946, 0xE800000000000000);
  static Locale.current.getter(v44);
  v45 = v107;
  v38(v107, v36, v104);
  v46 = v34;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v32, 0, 0, v34, v45, "'Finished' collection name - appears in the chooser when running an AppIntent that navigates to a standard collection.", 118, 2);
  v41(v40, 1, 1, v105);
  v47 = v42;
  DisplayRepresentation.Image.init(systemName:tintColor:symbolConfiguration:)(0xD000000000000010, 0x80000001007B4B40, 0, 0);
  v48 = v39;
  DisplayRepresentation.init(title:subtitle:image:)(v39, v40, v47);
  v49 = v100;
  *(_BYTE *)(v100 + v93 + v103) = 3;
  v50 = v32;
  v51 = String.LocalizationValue.init(stringLiteral:)(0x736B6F6F42, 0xE500000000000000);
  v52 = v46;
  static Locale.current.getter(v51);
  v53 = v107;
  v54 = v99;
  v55 = v104;
  v56 = (void (*)(char *, uint64_t, uint64_t))v96;
  ((void (*)(char *, _QWORD, uint64_t))v96)(v107, v99, v104);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v50, 0, 0, v52, v53, "'Books' collection name - appears in the chooser when running an AppIntent that navigates to a standard collection.", 115, 2);
  v57 = v105;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v102)(v40, 1, 1, v105);
  v58 = v106;
  DisplayRepresentation.Image.init(systemName:tintColor:symbolConfiguration:)(6775138, 0xE300000000000000, 0, 0);
  v59 = v48;
  DisplayRepresentation.init(title:subtitle:image:)(v48, v40, v58);
  v60 = 4 * v103;
  v61 = v97;
  v93 = v49 + 4 * v103 + *(int *)(v97 + 48);
  *(_BYTE *)(v49 + 4 * v103) = 4;
  v62 = v50;
  v63 = String.LocalizationValue.init(stringLiteral:)(0x6F6F626F69647541, 0xEA0000000000736BLL);
  v64 = v98;
  static Locale.current.getter(v63);
  v65 = v107;
  v56(v107, v54, v55);
  v66 = v62;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v62, 0, 0, v64, v65, "'Audiobooks' collection name - appears in the chooser when running an AppIntent that navigates to a standard collection.", 120, 2);
  v67 = v101;
  v68 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v102;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v102)(v101, 1, 1, v57);
  v69 = v106;
  DisplayRepresentation.Image.init(systemName:tintColor:symbolConfiguration:)(0x6E6F687064616568, 0xEA00000000007365, 0, 0);
  v70 = v59;
  DisplayRepresentation.init(title:subtitle:image:)(v59, v67, v69);
  v71 = v103;
  v72 = v100;
  v73 = (_BYTE *)(v100 + v60 + v103);
  v93 = (uint64_t)&v73[*(int *)(v61 + 48)];
  *v73 = 5;
  v92[0] = v66;
  v74 = String.LocalizationValue.init(stringLiteral:)(1933984848, 0xE400000000000000);
  v75 = v98;
  static Locale.current.getter(v74);
  v76 = v107;
  v77 = v99;
  v78 = v104;
  v79 = (void (*)(char *, uint64_t, uint64_t))v96;
  ((void (*)(char *, _QWORD, uint64_t))v96)(v107, v99, v104);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v66, 0, 0, v75, v76, "PDFs' collection name - appears in the chooser when running an AppIntent that navigates to a standard collection.", 113, 2);
  v80 = v101;
  v68(v101, 1, 1, v105);
  v81 = v106;
  DisplayRepresentation.Image.init(systemName:tintColor:symbolConfiguration:)(0x747865742E636F64, 0xE800000000000000, 0, 0);
  DisplayRepresentation.init(title:subtitle:image:)(v70, v80, v81);
  v82 = (_BYTE *)(v72 + 6 * v71);
  v93 = (uint64_t)&v82[*(int *)(v97 + 48)];
  *v82 = 6;
  v83 = v92[0];
  v84 = String.LocalizationValue.init(stringLiteral:)(0x6C706D615320794DLL, 0xEA00000000007365);
  v85 = v98;
  static Locale.current.getter(v84);
  v86 = v107;
  v79(v107, v77, v78);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v83, 0, 0, v85, v86, "'My Samples' collection name - appears in the chooser when running an AppIntent that navigates to a standard collection.", 120, 2);
  v87 = v105;
  v88 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v102;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v102)(v80, 1, 1, v105);
  DisplayRepresentation.Image.init(named:isTemplate:)(0x73656C706D6173, 0xE700000000000000, 2);
  v89 = type metadata accessor for DisplayRepresentation.Image(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v89 - 8) + 56))(v81, 0, 1, v89);
  DisplayRepresentation.init(title:subtitle:image:)(v70, v80, v81);
  *(_BYTE *)(v100 + v94 - v103) = 7;
  v90 = String.LocalizationValue.init(stringLiteral:)(0x64616F6C6E776F44, 0xEA00000000006465);
  static Locale.current.getter(v90);
  v79(v86, v99, v104);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v83, 0, 0, v85, v86, "'Downloaded' collection name - appears in the chooser when running an AppIntent that navigates to a standard collection.", 120, 2);
  v88(v80, 1, 1, v87);
  DisplayRepresentation.Image.init(systemName:tintColor:symbolConfiguration:)(0xD000000000000015, 0x80000001007B4DE0, 0, 0);
  DisplayRepresentation.init(title:subtitle:image:)(v70, v80, v81);
  result = sub_1001DAB30(v95);
  qword_100A1E540 = result;
  return result;
}

void sub_100329FAC(char *a1)
{
  sub_1006705F0(*a1);
}

unint64_t sub_100329FBC()
{
  unint64_t result;

  result = qword_1009DAD08;
  if (!qword_1009DAD08)
  {
    result = swift_getWitnessTable(&unk_10071AF24, &type metadata for DefaultCollectionItem);
    atomic_store(result, (unint64_t *)&qword_1009DAD08);
  }
  return result;
}

void sub_10032A000()
{
  char *v0;

  sub_1006725B8(0, *v0);
}

void sub_10032A00C(uint64_t a1)
{
  char *v1;

  sub_100671B68(a1, *v1);
}

void sub_10032A014(uint64_t a1)
{
  char *v1;

  sub_1006725B8(a1, *v1);
}

unint64_t sub_10032A01C@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_10032BF68(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_10032A048()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_10032A080 + 4 * byte_10071AEF8[*v0]))();
}

void sub_10032A080(_QWORD *a1@<X8>)
{
  *a1 = 0x65526F54746E6177;
  a1[1] = 0xEA00000000006461;
}

void sub_10032A0A0(_QWORD *a1@<X8>)
{
  *a1 = 0x64656873696E6966;
  a1[1] = 0xE800000000000000;
}

void sub_10032A0BC(_QWORD *a1@<X8>)
{
  *a1 = 0x736B6F6F62;
  a1[1] = 0xE500000000000000;
}

void sub_10032A0D4(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = 0x6F6F626F69647561;
  a1[1] = v1 + 3850;
}

void sub_10032A0F0(_QWORD *a1@<X8>)
{
  *a1 = 1936090224;
  a1[1] = 0xE400000000000000;
}

void sub_10032A104(_QWORD *a1@<X8>)
{
  *a1 = 0x656C706D6153796DLL;
  a1[1] = 0xE900000000000073;
}

void sub_10032A124(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = 0x64616F6C6E776F64;
  a1[1] = v1 + 4;
}

unint64_t sub_10032A144()
{
  unint64_t result;

  result = qword_1009DAD10;
  if (!qword_1009DAD10)
  {
    result = swift_getWitnessTable(&unk_10071B06C, &type metadata for DefaultCollectionItem);
    atomic_store(result, (unint64_t *)&qword_1009DAD10);
  }
  return result;
}

unint64_t sub_10032A18C()
{
  unint64_t result;

  result = qword_1009DAD18;
  if (!qword_1009DAD18)
  {
    result = swift_getWitnessTable(&unk_10071B0A4, &type metadata for DefaultCollectionItem);
    atomic_store(result, (unint64_t *)&qword_1009DAD18);
  }
  return result;
}

unint64_t sub_10032A1D4()
{
  unint64_t result;

  result = qword_1009DAD20;
  if (!qword_1009DAD20)
  {
    result = swift_getWitnessTable(&unk_10071AF8C, &type metadata for DefaultCollectionItem);
    atomic_store(result, (unint64_t *)&qword_1009DAD20);
  }
  return result;
}

uint64_t sub_10032A218()
{
  return sub_100030B34(&qword_1009DAD28, &qword_1009DAD30, (uint64_t)&protocol conformance descriptor for [A]);
}

void sub_10032A244(_QWORD *a1@<X8>)
{
  *a1 = &off_1008EFD80;
}

uint64_t sub_10032A254()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_10032A28C + 4 * byte_10071AF00[*v0]))(0x417972617262696CLL, 0xEA00000000006C6CLL);
}

uint64_t sub_10032A28C()
{
  return 0x65526F54746E6177;
}

uint64_t sub_10032A2A8()
{
  return 0x64656873696E6966;
}

uint64_t sub_10032A2C0()
{
  return 0x736B6F6F62;
}

uint64_t sub_10032A2D4()
{
  return 0x6F6F626F69647561;
}

uint64_t sub_10032A2EC()
{
  return 1936090224;
}

uint64_t sub_10032A2FC()
{
  return 0x656C706D6153796DLL;
}

uint64_t sub_10032A318()
{
  return 0x64616F6C6E776F64;
}

unint64_t sub_10032A330@<X0>(uint64_t a1@<X0>, void *a2@<X1>, _BYTE *a3@<X8>)
{
  unint64_t result;
  Swift::String v7;

  swift_bridgeObjectRetain(a2);
  v7._countAndFlagsBits = a1;
  v7._object = a2;
  result = sub_10032BF68(v7);
  *a3 = result;
  return result;
}

unint64_t sub_10032A378()
{
  unint64_t result;

  result = qword_1009DAD38;
  if (!qword_1009DAD38)
  {
    result = swift_getWitnessTable(&unk_10071B0D4, &type metadata for DefaultCollectionItem);
    atomic_store(result, (unint64_t *)&qword_1009DAD38);
  }
  return result;
}

unint64_t sub_10032A3C0()
{
  unint64_t result;

  result = qword_1009DAD40;
  if (!qword_1009DAD40)
  {
    result = swift_getWitnessTable(&unk_10071B0FC, &type metadata for DefaultCollectionItem);
    atomic_store(result, (unint64_t *)&qword_1009DAD40);
  }
  return result;
}

unint64_t sub_10032A408()
{
  unint64_t result;

  result = qword_1009DAD48;
  if (!qword_1009DAD48)
  {
    result = swift_getWitnessTable(&unk_10071B124, &type metadata for DefaultCollectionItem);
    atomic_store(result, (unint64_t *)&qword_1009DAD48);
  }
  return result;
}

unint64_t sub_10032A450()
{
  unint64_t result;

  result = qword_1009DAD50;
  if (!qword_1009DAD50)
  {
    result = swift_getWitnessTable(&unk_10071B17C, &type metadata for DefaultCollectionItem);
    atomic_store(result, (unint64_t *)&qword_1009DAD50);
  }
  return result;
}

uint64_t sub_10032A494@<X0>(uint64_t a1@<X8>)
{
  return sub_1001E9C50(&qword_1009CDE98, (uint64_t (*)(_QWORD))&type metadata accessor for TypeDisplayRepresentation, (uint64_t)qword_100A1E528, (uint64_t)sub_1003295F4, a1);
}

uint64_t sub_10032A4B8(uint64_t a1, uint64_t a2)
{
  _QWORD v3[2];

  v3[0] = a2;
  v3[1] = sub_10032A4F8();
  return swift_getOpaqueTypeConformance2(v3, &opaque type descriptor for <<opaque return type of static AppEnum.defaultResolverSpecification>>, 1);
}

unint64_t sub_10032A4F8()
{
  unint64_t result;

  result = qword_1009DAD58;
  if (!qword_1009DAD58)
  {
    result = swift_getWitnessTable(&unk_10071AFC4, &type metadata for DefaultCollectionItem);
    atomic_store(result, (unint64_t *)&qword_1009DAD58);
  }
  return result;
}

uint64_t sub_10032A53C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10032A4F8();
  return static AppEnum.defaultResolverSpecification.getter(a1, v2);
}

unint64_t sub_10032A578()
{
  unint64_t result;

  result = qword_1009DAD60;
  if (!qword_1009DAD60)
  {
    result = swift_getWitnessTable(&unk_10071B1BC, &type metadata for DefaultCollectionItem);
    atomic_store(result, (unint64_t *)&qword_1009DAD60);
  }
  return result;
}

unint64_t sub_10032A5C0()
{
  unint64_t result;

  result = qword_1009DAD68;
  if (!qword_1009DAD68)
  {
    result = swift_getWitnessTable(&unk_10071B004, &type metadata for DefaultCollectionItem);
    atomic_store(result, (unint64_t *)&qword_1009DAD68);
  }
  return result;
}

unint64_t sub_10032A608()
{
  unint64_t result;

  result = qword_1009DAD70;
  if (!qword_1009DAD70)
  {
    result = swift_getWitnessTable(&unk_10071AF4C, &type metadata for DefaultCollectionItem);
    atomic_store(result, (unint64_t *)&qword_1009DAD70);
  }
  return result;
}

double sub_10032A64C()
{
  double result;

  if (qword_1009CDEA0 != -1)
    swift_once(&qword_1009CDEA0, sub_100329600);
  *(_QWORD *)&result = swift_bridgeObjectRetain(qword_100A1E540).n128_u64[0];
  return result;
}

uint64_t sub_10032A68C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10032A450();
  return CaseDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

unint64_t sub_10032A6C8()
{
  unint64_t result;

  result = qword_1009DAD78;
  if (!qword_1009DAD78)
  {
    result = swift_getWitnessTable(&unk_10071B274, &type metadata for DefaultCollectionEntity.DefaultCollectionQuery);
    atomic_store(result, (unint64_t *)&qword_1009DAD78);
  }
  return result;
}

unint64_t sub_10032A710()
{
  unint64_t result;

  result = qword_1009DAD80;
  if (!qword_1009DAD80)
  {
    result = swift_getWitnessTable(&unk_10071B2D4, &type metadata for DefaultCollectionEntity.DefaultCollectionQuery);
    atomic_store(result, (unint64_t *)&qword_1009DAD80);
  }
  return result;
}

unint64_t sub_10032A758()
{
  unint64_t result;

  result = qword_1009DAD88[0];
  if (!qword_1009DAD88[0])
  {
    result = swift_getWitnessTable(&unk_10071B318, &type metadata for DefaultCollectionEntity);
    atomic_store(result, qword_1009DAD88);
  }
  return result;
}

uint64_t sub_10032A79C(uint64_t a1)
{
  return sub_10032A7A8(a1, qword_100A1E548);
}

uint64_t sub_10032A7A8(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD v22[2];

  v3 = sub_10004CFD4(&qword_1009D1338);
  __chkstk_darwin(v3);
  v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22[0] = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v6 = *(_QWORD *)(v22[0] - 8);
  __chkstk_darwin(v22[0]);
  v8 = (char *)v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Locale(0);
  __chkstk_darwin(v9);
  v11 = (char *)v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v12);
  v14 = (char *)v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for LocalizedStringResource(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)v22 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for TypeDisplayRepresentation(0);
  sub_10001BFD8(v19, a2);
  sub_100048F64(v19, (uint64_t)a2);
  v20 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000013, 0x80000001007BF9F0);
  static Locale.current.getter(v20);
  (*(void (**)(char *, _QWORD, _QWORD))(v6 + 104))(v8, enum case for LocalizedStringResource.BundleDescription.main(_:), v22[0]);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v14, 0, 0, v11, v8, "'typeDisplayRepresentation' for AppEnum that represents standard collections that you can navigate to", 101, 2);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v5, 1, 1, v15);
  return TypeDisplayRepresentation.init(name:numericFormat:)(v18, v5);
}

uint64_t sub_10032A9B8(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t);

  v5 = (uint64_t (*)(uint64_t))((char *)&dword_1009DAEC8 + dword_1009DAEC8);
  v3 = (_QWORD *)swift_task_alloc(unk_1009DAECC);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_100326424;
  return v5(a1);
}

uint64_t sub_10032AA18(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t (__cdecl *v4)();

  *(_QWORD *)(v1 + 16) = a1;
  v4 = (uint64_t (__cdecl *)())((char *)&dword_1009DAEC0 + dword_1009DAEC0);
  v2 = (_QWORD *)swift_task_alloc(unk_1009DAEC4);
  *(_QWORD *)(v1 + 24) = v2;
  *v2 = v1;
  v2[1] = sub_10032C744;
  return v4();
}

unint64_t sub_10032AA78()
{
  unint64_t result;

  result = qword_1009DADA0;
  if (!qword_1009DADA0)
  {
    result = swift_getWitnessTable(&unk_10071B1E4, &type metadata for DefaultCollectionEntity.DefaultCollectionQuery);
    atomic_store(result, (unint64_t *)&qword_1009DADA0);
  }
  return result;
}

uint64_t sub_10032AABC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t (__cdecl *v4)();

  *(_QWORD *)(v1 + 16) = a1;
  v4 = (uint64_t (__cdecl *)())((char *)&dword_1009DAEB8 + dword_1009DAEB8);
  v2 = (_QWORD *)swift_task_alloc(unk_1009DAEBC);
  *(_QWORD *)(v1 + 24) = v2;
  *v2 = v1;
  v2[1] = sub_100223CCC;
  return v4();
}

unint64_t sub_10032AB20()
{
  unint64_t result;

  result = qword_1009DADB0;
  if (!qword_1009DADB0)
  {
    result = swift_getWitnessTable(&unk_10071B2FC, &type metadata for DefaultCollectionEntity.DefaultCollectionQuery);
    atomic_store(result, (unint64_t *)&qword_1009DADB0);
  }
  return result;
}

unint64_t sub_10032AB68()
{
  unint64_t result;

  result = qword_1009DADB8;
  if (!qword_1009DADB8)
  {
    result = swift_getWitnessTable(&unk_10071B460, &type metadata for DefaultCollectionEntity);
    atomic_store(result, (unint64_t *)&qword_1009DADB8);
  }
  return result;
}

uint64_t sub_10032ABAC()
{
  return sub_10032BD18(&qword_1009DADC0, qword_1009DADC8, (void (*)(void))sub_10032AB68);
}

uint64_t sub_10032ABD8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  unint64_t v6;

  v5 = (_QWORD *)swift_task_alloc(async function pointer to EntityQuery.results()[1]);
  *(_QWORD *)(v2 + 16) = v5;
  v6 = sub_10032AA78();
  *v5 = v2;
  v5[1] = sub_10000AE34;
  return EntityQuery.results()(a1, a2, v6);
}

uint64_t sub_10032AC44(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return swift_task_switch(sub_10032AC5C, 0, 0);
}

uint64_t sub_10032AC5C()
{
  uint64_t v0;

  **(_BYTE **)(v0 + 16) = 0;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

unint64_t sub_10032AC8C()
{
  unint64_t result;

  result = qword_1009DADE0;
  if (!qword_1009DADE0)
  {
    result = swift_getWitnessTable(&unk_10071B370, &type metadata for DefaultCollectionEntity);
    atomic_store(result, (unint64_t *)&qword_1009DADE0);
  }
  return result;
}

unint64_t sub_10032ACD4()
{
  unint64_t result;

  result = qword_1009DADE8;
  if (!qword_1009DADE8)
  {
    result = swift_getWitnessTable(&unk_10071B3A8, &type metadata for DefaultCollectionEntity);
    atomic_store(result, (unint64_t *)&qword_1009DADE8);
  }
  return result;
}

unint64_t sub_10032AD1C()
{
  unint64_t result;

  result = qword_1009DADF0;
  if (!qword_1009DADF0)
  {
    result = swift_getWitnessTable(&unk_10071B3D8, &type metadata for DefaultCollectionEntity);
    atomic_store(result, (unint64_t *)&qword_1009DADF0);
  }
  return result;
}

unint64_t sub_10032AD64()
{
  unint64_t result;

  result = qword_1009DADF8;
  if (!qword_1009DADF8)
  {
    result = swift_getWitnessTable(&unk_10071B03C, &type metadata for DefaultCollectionItem);
    atomic_store(result, (unint64_t *)&qword_1009DADF8);
  }
  return result;
}

void sub_10032ADA8(char a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = sub_10004CFD4(&qword_1009D1378);
  __chkstk_darwin(v2);
  v3 = sub_10004CFD4(&qword_1009D1338);
  __chkstk_darwin(v3);
  v4 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  __chkstk_darwin(v4);
  v5 = type metadata accessor for Locale(0);
  __chkstk_darwin(v5);
  v6 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v6);
  v7 = type metadata accessor for LocalizedStringResource(0);
  __chkstk_darwin(v7);
  __asm { BR              X10 }
}

uint64_t sub_10032AF38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v10 = String.LocalizationValue.init(stringLiteral:)(7105601, 0xE300000000000000);
  static Locale.current.getter(v10);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v1 + 104))(v5, enum case for LocalizedStringResource.BundleDescription.main(_:), v8);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v7, 0, 0, v6, v5, "'Library All' collection name - appears in the chooser when running an AppIntent that navigates to a standard collection.", 121, 2);
  (*(void (**)(uint64_t, uint64_t, uint64_t, _QWORD))(v0 + 56))(v3, 1, 1, *(_QWORD *)(v9 - 112));
  sub_10032B2A4(*(_QWORD *)(v9 - 104));
  return DisplayRepresentation.init(title:subtitle:image:)(v4, v3, v2);
}

void sub_10032B2A4(char a1)
{
  sub_10032C194();
  __asm { BR              X10 }
}

uint64_t sub_10032B2FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v8;
  _BYTE v9[48];
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;

  sub_100047674(0xD000000000000011, (void *)0x80000001007B1C10, a3, v4, (uint64_t)v9);
  swift_bridgeObjectRelease(0x80000001007B1C10);
  swift_bridgeObjectRelease(v4);
  sub_100025B3C((uint64_t)v9, (uint64_t)&v10, (uint64_t *)&unk_1009D7970);
  if (*((_QWORD *)&v10 + 1))
  {
    v13 = v10;
    v14 = v11;
    v15 = v12;
    v6 = v11;
    swift_bridgeObjectRetain(*((_QWORD *)&v11 + 1));
    DisplayRepresentation.Image.init(systemName:tintColor:symbolConfiguration:)(v6, *((_QWORD *)&v6 + 1), 0, 0);
    *(_OWORD *)(v5 - 64) = v13;
    sub_100210D88(v5 - 64);
    swift_bridgeObjectRelease(*((_QWORD *)&v6 + 1));
    sub_100025B3C((uint64_t)&v15, v5 - 48, &qword_1009D2A80);
    return sub_100210D88(v5 - 48);
  }
  else
  {
    v8 = type metadata accessor for DisplayRepresentation.Image(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v3, 1, 1, v8);
  }
}

unint64_t sub_10032B498()
{
  unint64_t result;

  result = qword_1009DAE00;
  if (!qword_1009DAE00)
  {
    result = swift_getWitnessTable(&unk_10071B410, &type metadata for DefaultCollectionEntity);
    atomic_store(result, (unint64_t *)&qword_1009DAE00);
  }
  return result;
}

unint64_t sub_10032B4E0()
{
  unint64_t result;

  result = qword_1009DAE08;
  if (!qword_1009DAE08)
  {
    result = swift_getWitnessTable(&unk_10071B438, &type metadata for DefaultCollectionEntity);
    atomic_store(result, (unint64_t *)&qword_1009DAE08);
  }
  return result;
}

unint64_t sub_10032B528()
{
  unint64_t result;

  result = qword_1009DAE10;
  if (!qword_1009DAE10)
  {
    result = swift_getWitnessTable(&unk_10071B4B8, &type metadata for DefaultCollectionEntity);
    atomic_store(result, (unint64_t *)&qword_1009DAE10);
  }
  return result;
}

uint64_t sub_10032B56C@<X0>(uint64_t a1@<X8>)
{
  return sub_1001E9C50(&qword_1009CDEA8, (uint64_t (*)(_QWORD))&type metadata accessor for TypeDisplayRepresentation, (uint64_t)qword_100A1E548, (uint64_t)sub_10032A79C, a1);
}

uint64_t sub_10032B590()
{
  return sub_100030B34(&qword_1009DAE18, &qword_1009DAE20, (uint64_t)&protocol conformance descriptor for EmptyResolverSpecification<A>);
}

uint64_t sub_10032B5BC(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10032A758();
  return static AppEntity.defaultResolverSpecification.getter(a1, v2);
}

unint64_t sub_10032B5F8()
{
  unint64_t result;

  result = qword_1009DAE28;
  if (!qword_1009DAE28)
  {
    result = swift_getWitnessTable(&unk_10071B4E8, &type metadata for DefaultCollectionEntity);
    atomic_store(result, (unint64_t *)&qword_1009DAE28);
  }
  return result;
}

void sub_10032B63C()
{
  char *v0;

  sub_10032ADA8(*v0);
}

uint64_t sub_10032B644(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10032B528();
  return InstanceDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

unint64_t sub_10032B680()
{
  unint64_t result;

  result = qword_1009DAE30;
  if (!qword_1009DAE30)
  {
    result = swift_getWitnessTable(&unk_10071B560, &type metadata for OpenDefaultCollectionIntent);
    atomic_store(result, (unint64_t *)&qword_1009DAE30);
  }
  return result;
}

uint64_t sub_10032B6C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[16];

  v0 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = &v13[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = type metadata accessor for Locale(0);
  __chkstk_darwin(v4);
  v6 = &v13[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v7);
  v9 = &v13[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = type metadata accessor for LocalizedStringResource(0);
  sub_10001BFD8(v10, qword_100A1E560);
  sub_100048F64(v10, (uint64_t)qword_100A1E560);
  v11 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000017, 0x80000001007BF980);
  static Locale.current.getter(v11);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for LocalizedStringResource.BundleDescription.main(_:), v0);
  return LocalizedStringResource.init(_:table:locale:bundle:comment:)(v9, 0, 0, v6, v3, "Title for AppIntent that navigates to one of the standard library collections.", 78, 2);
}

uint64_t sub_10032B838(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3[4] = a2;
  v3[5] = a3;
  v3[3] = a1;
  v4 = type metadata accessor for MainActor(0);
  v3[6] = static MainActor.shared.getter(v4);
  v5 = dispatch thunk of Actor.unownedExecutor.getter(v4, &protocol witness table for MainActor);
  return swift_task_switch(sub_10032B8A8, v5, v6);
}

uint64_t sub_10032B8A8()
{
  _QWORD *v0;
  void *v1;
  id v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(void);
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  unint64_t v12;
  uint64_t v13;
  _BYTE *v14;

  swift_release(v0[6]);
  AppDependency.wrappedValue.getter(v0 + 2);
  v1 = (void *)v0[2];
  v2 = objc_msgSend(v1, "primarySceneController");

  v3 = objc_msgSend(v2, "rootBarCoordinator");
  if (v3)
  {
    v4 = type metadata accessor for RootBarCoordinator();
    if (swift_dynamicCastClass(v3, v4))
    {
      IntentParameter.wrappedValue.getter(v0 + 2);
      v5 = sub_10021B870(*((_BYTE *)v0 + 16));
      static IntentResult.result<>()(v5);
      swift_unknownObjectRelease(v3);
      v6 = (uint64_t (*)(void))v0[1];
      return v6();
    }
    swift_unknownObjectRelease(v3);
  }
  if (qword_1009CDE90 != -1)
    swift_once(&qword_1009CDE90, sub_100329578);
  v7 = type metadata accessor for Logger(0);
  v8 = sub_100048F64(v7, (uint64_t)qword_1009DACF0);
  v9 = Logger.logObject.getter(v8);
  v10 = static os_log_type_t.error.getter(v9);
  if (os_log_type_enabled(v9, v10))
  {
    v11 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v11 = 0;
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "Failed getting root bar coordinator.", v11, 2u);
    swift_slowDealloc(v11, -1, -1);
  }

  v12 = sub_1001EA7C0();
  v13 = swift_allocError(&type metadata for BookContextualIntentError, v12, 0, 0);
  *v14 = 0;
  swift_willThrow(v13);
  v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t sub_10032BA70(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_10086C200, 1);
}

uint64_t sub_10032BA80(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_10086C1D8, 1);
}

uint64_t sub_10032BA90@<X0>(uint64_t a1@<X8>)
{
  return sub_1001E9C50(&qword_1009CDEB0, (uint64_t (*)(_QWORD))&type metadata accessor for LocalizedStringResource, (uint64_t)qword_100A1E560, (uint64_t)sub_10032B6C4, a1);
}

uint64_t sub_10032BAB4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  Swift::String v10;
  uint64_t KeyPath;
  uint64_t v12;
  Swift::String v13;
  uint64_t v15;

  v4 = sub_10004CFD4(&qword_1009DAEA0);
  __chkstk_darwin(v4);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10004CFD4(&qword_1009DAEA8);
  __chkstk_darwin(v7);
  v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  ParameterSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)(5, 1, a1, a2);
  v10._countAndFlagsBits = 0x206E65704FLL;
  v10._object = (void *)0xE500000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v10);
  KeyPath = swift_getKeyPath("ȃ.");
  v12 = sub_10004CFD4(&qword_1009DAEB0);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)(KeyPath, v7, v12);
  swift_release(KeyPath);
  v13._countAndFlagsBits = 0;
  v13._object = (void *)0xE000000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v13);
  ParameterSummaryString.init(stringInterpolation:)(v9, a1, a2);
  return IntentParameterSummary.init(_:table:)(v6, 0x6E65746E49707041, 0xEA00000000007374, a1, a2);
}

uint64_t sub_10032BC1C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v5 = *v1;
  v4 = v1[1];
  v6 = (_QWORD *)swift_task_alloc(dword_1009DAE9C);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_1001FC2C4;
  return sub_10032B838(a1, v5, v4);
}

uint64_t sub_10032BC80@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_10032C2EC();
  *a1 = result;
  a1[1] = v3;
  return result;
}

unint64_t sub_10032BCA8()
{
  unint64_t result;

  result = qword_1009DAE58;
  if (!qword_1009DAE58)
  {
    result = swift_getWitnessTable(&unk_10071B6BC, &type metadata for DefaultCollectionItemOptionsProvider);
    atomic_store(result, (unint64_t *)&qword_1009DAE58);
  }
  return result;
}

uint64_t sub_10032BCEC()
{
  return sub_10032BD18(qword_1009DAE60, &qword_1009DAD30, (void (*)(void))sub_10032A408);
}

uint64_t sub_10032BD18(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = sub_100030B74(a2);
    a3();
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> [A], v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10032BD7C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v1 + 16) = a1;
  v2 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v1 + 24) = static MainActor.shared.getter(v2);
  v3 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor);
  return swift_task_switch(sub_10032BDE8, v3, v4);
}

uint64_t sub_10032BDE8()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = *(_QWORD **)(v0 + 16);
  swift_release(*(_QWORD *)(v0 + 24));
  *v1 = &off_1008EFD80;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

ValueMetadata *type metadata accessor for DefaultCollectionItemOptionsProvider()
{
  return &type metadata for DefaultCollectionItemOptionsProvider;
}

ValueMetadata *type metadata accessor for OpenDefaultCollectionIntent()
{
  return &type metadata for OpenDefaultCollectionIntent;
}

ValueMetadata *type metadata accessor for DefaultCollectionEntity()
{
  return &type metadata for DefaultCollectionEntity;
}

ValueMetadata *type metadata accessor for DefaultCollectionEntity.DefaultCollectionQuery()
{
  return &type metadata for DefaultCollectionEntity.DefaultCollectionQuery;
}

uint64_t _s5Books21DefaultCollectionItemOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_10032BEBC + 4 * byte_10071AF1D[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_10032BEF0 + 4 * byte_10071AF18[v4]))();
}

uint64_t sub_10032BEF0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10032BEF8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10032BF00);
  return result;
}

uint64_t sub_10032BF0C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10032BF14);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_10032BF18(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10032BF20(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DefaultCollectionItem()
{
  return &type metadata for DefaultCollectionItem;
}

uint64_t sub_10032BF3C()
{
  return sub_100030B34(&qword_1009DAE78, &qword_1009DAE80, (uint64_t)&protocol conformance descriptor for IntentParameterSummary<A>);
}

unint64_t sub_10032BF68(Swift::String string)
{
  void *object;
  Swift::String v2;
  unint64_t v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1008F0868, v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 8)
    return 8;
  else
    return v3;
}

uint64_t sub_10032BFB0()
{
  return swift_task_switch(sub_10032C740, 0, 0);
}

uint64_t sub_10032BFC4(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return swift_task_switch(sub_10032BFDC, 0, 0);
}

uint64_t sub_10032BFDC()
{
  uint64_t v0;
  uint64_t v1;
  int64_t v2;
  _QWORD *v3;
  char *v4;
  unint64_t v5;
  char v6;
  char v7;
  unint64_t v8;
  _QWORD *v10;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v1 + 16);
  v3 = _swiftEmptyArrayStorage;
  if (v2)
  {
    sub_100366BC0(0, v2, 0);
    v3 = _swiftEmptyArrayStorage;
    v4 = (char *)(v1 + 32);
    v5 = _swiftEmptyArrayStorage[2];
    do
    {
      v7 = *v4++;
      v6 = v7;
      v10 = v3;
      v8 = v3[3];
      if (v5 >= v8 >> 1)
      {
        sub_100366BC0(v8 > 1, v5 + 1, 1);
        v3 = v10;
      }
      v3[2] = v5 + 1;
      *((_BYTE *)v3 + v5++ + 32) = v6;
      --v2;
    }
    while (v2);
  }
  return (*(uint64_t (**)(_QWORD *))(v0 + 8))(v3);
}

uint64_t sub_10032C0AC()
{
  return swift_task_switch(sub_10032C0C0, 0, 0);
}

uint64_t sub_10032C0C0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  unint64_t v3;
  char *v4;
  char v5;
  char v6;
  unint64_t v7;
  _QWORD *v9;

  v1 = 8;
  sub_100366BC0(0, 8, 0);
  v2 = _swiftEmptyArrayStorage;
  v3 = _swiftEmptyArrayStorage[2];
  v4 = &byte_1008EFDA0;
  do
  {
    v6 = *v4++;
    v5 = v6;
    v9 = v2;
    v7 = v2[3];
    if (v3 >= v7 >> 1)
    {
      sub_100366BC0(v7 > 1, v3 + 1, 1);
      v2 = v9;
    }
    v2[2] = v3 + 1;
    *((_BYTE *)v2 + v3++ + 32) = v5;
    --v1;
  }
  while (v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10032C194()
{
  id v0;
  id v1;
  id v2;
  id v3;
  void *v4;
  uint64_t v5;
  id v6;
  id v8;
  uint64_t v9;
  uint64_t v10;
  id v11;

  v0 = objc_msgSend((id)objc_opt_self(BUBag), "defaultBag");
  v1 = objc_msgSend(v0, "countryCode");
  if ((objc_msgSend(v0, "isExpired") & 1) != 0 || (objc_msgSend(v1, "isLoaded") & 1) == 0)
  {

    return 29557;
  }
  v11 = 0;
  v2 = objc_msgSend(v1, "valueWithError:", &v11);
  v3 = v11;
  if (!v2)
  {
    v8 = v11;
    v9 = _convertNSErrorToError(_:)(v3);

    swift_willThrow(v10);
    swift_errorRelease(v9);
    return 29557;
  }
  v4 = v2;
  v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(v2);
  v6 = v3;

  return v5;
}

uint64_t sub_10032C2EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t, uint64_t, uint64_t);
  char *v29;
  char *v30;
  char *v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v43;
  char *v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  _OWORD v49[2];
  uint64_t v50;

  v0 = type metadata accessor for InputConnectionBehavior(0);
  v47 = *(_QWORD *)(v0 - 8);
  v48 = v0;
  __chkstk_darwin(v0);
  v46 = (char *)&v43 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = sub_10004CFD4(&qword_1009D1330);
  __chkstk_darwin(v2);
  v45 = (char *)&v43 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v44 = (char *)&v43 - v5;
  v6 = sub_10004CFD4(&qword_1009D1338);
  __chkstk_darwin(v6);
  v8 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Locale(0);
  __chkstk_darwin(v13);
  v15 = (char *)&v43 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v16);
  v18 = (char *)&v43 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for LocalizedStringResource(0);
  v20 = *(_QWORD *)(v19 - 8);
  __chkstk_darwin(v19);
  v22 = (char *)&v43 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = sub_10004CFD4(&qword_1009DAE88);
  v23 = String.LocalizationValue.init(stringLiteral:)(0x697463656C6C6F43, 0xEA00000000006E6FLL);
  static Locale.current.getter(v23);
  v24 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  v25 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 104);
  v25(v12, enum case for LocalizedStringResource.BundleDescription.main(_:), v9);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v18, 0, 0, v15, v12, "Title of the parameter that specifies the target collection when running an AppIntent that opens a standard library collection.", 127, 2);
  v26 = String.LocalizationValue.init(stringLiteral:)(0xD00000000000001ALL, 0x80000001007BF8E0);
  static Locale.current.getter(v26);
  v25(v12, v24, v9);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v18, 0, 0, v15, v12, "Description of target parameter of Open Default Collection App Intent", 69, 2);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v8, 0, 1, v19);
  LOBYTE(v49[0]) = 8;
  v27 = type metadata accessor for IntentDialog(0);
  v28 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56);
  v29 = v44;
  v28(v44, 1, 1, v27);
  v30 = v45;
  v28(v45, 1, 1, v27);
  v31 = v46;
  (*(void (**)(char *, _QWORD, uint64_t))(v47 + 104))(v46, enum case for InputConnectionBehavior.default(_:), v48);
  v32 = sub_10032C6D4();
  v33 = sub_10032A4F8();
  v35 = IntentParameter<>.init<A>(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:supportedValues:optionsProvider:)(v22, v8, v49, v29, v30, v31, &off_1008EFD80, v34, &type metadata for DefaultCollectionItemOptionsProvider, v32, v33);
  sub_10004CFD4(&qword_1009D1348);
  v36 = type metadata accessor for AppDependencyManager(0);
  memset(v49, 0, sizeof(v49));
  v50 = 0;
  v41 = static AppDependencyManager.shared.getter(v36, v37, v38, v39, v40);
  AppDependency.__allocating_init(key:manager:)(v49, v41);
  return v35;
}

unint64_t sub_10032C6D4()
{
  unint64_t result;

  result = qword_1009DAE90;
  if (!qword_1009DAE90)
  {
    result = swift_getWitnessTable(&unk_10071B65C, &type metadata for DefaultCollectionItemOptionsProvider);
    atomic_store(result, &qword_1009DAE90);
  }
  return result;
}

uint64_t sub_10032C718@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_10032C748(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[26] = a2;
  v3[27] = v2;
  v3[25] = a1;
  return swift_task_switch(sub_10032C764, 0, 0);
}

uint64_t sub_10032C764()
{
  _QWORD *v0;
  uint64_t v1;
  id v2;
  id v3;
  uint64_t v4;
  uint64_t inited;
  id v6;

  v1 = v0[26];
  v2 = objc_msgSend(objc_allocWithZone((Class)AMSEngagement), "initWithBag:", *(_QWORD *)(v0[27] + 16));
  v0[28] = v2;
  v3 = objc_msgSend(v2, "enqueueEvent:", v1);
  v0[29] = v3;
  v4 = sub_10004CFD4(&qword_1009DAF88);
  inited = swift_initStackObject(v4, v0 + 19);
  v0[30] = inited;
  *(_QWORD *)(inited + 16) = v3;
  v6 = v3;
  return swift_task_switch(sub_10032C80C, 0, 0);
}

uint64_t sub_10032C80C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[30];
  v0[7] = v0 + 24;
  v0[2] = v0;
  v0[3] = sub_10032C864;
  v2 = swift_continuation_init(v0 + 2, 1);
  sub_10032CAC0(v2, v1);
  return swift_continuation_await(v0 + 2);
}

uint64_t sub_10032C864(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 48);
  *(_QWORD *)(*v1 + 248) = v3;
  if (v3)
  {
    swift_willThrow(a1);
    v4 = sub_10032CA80;
  }
  else
  {
    *(_QWORD *)(v2 + 256) = *(_QWORD *)(v2 + 192);
    v4 = sub_10032C8D8;
  }
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_10032C8D8()
{
  uint64_t v0;
  id v1;
  void *v2;
  uint64_t v3;
  unint64_t v4;
  char v5;
  void *v6;
  uint64_t v7;
  void *v8;
  _OWORD *v9;
  uint64_t (*v10)(void);
  char v11;
  unint64_t v12;
  uint64_t v13;
  char *v14;
  void *v15;

  v1 = objc_msgSend(*(id *)(v0 + 256), "data");
  if (!v1)
  {
    v11 = 0;
    v6 = *(void **)(v0 + 256);
    v7 = *(_QWORD *)(v0 + 240);
LABEL_10:
    v12 = sub_10032CBE8();
    v13 = swift_allocError(&type metadata for AMSEngagementService.Errors, v12, 0, 0);
    *v14 = v11;
    swift_willThrow(v13);

    swift_release(v7);
    v15 = *(void **)(v0 + 224);

    v10 = *(uint64_t (**)(void))(v0 + 8);
    return v10();
  }
  v2 = v1;
  v3 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v1, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

  *(_QWORD *)(v0 + 176) = 0x65736E6F70736572;
  *(_QWORD *)(v0 + 184) = 0xE800000000000000;
  AnyHashable.init<A>(_:)(v0 + 176, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(v3 + 16) && (v4 = sub_1000561E8(v0 + 80), (v5 & 1) != 0))
  {
    sub_10004CD0C(*(_QWORD *)(v3 + 56) + 32 * v4, v0 + 120);
  }
  else
  {
    *(_OWORD *)(v0 + 120) = 0u;
    *(_OWORD *)(v0 + 136) = 0u;
  }
  swift_bridgeObjectRelease(v3);
  sub_1000569AC(v0 + 80);
  v6 = *(void **)(v0 + 256);
  v7 = *(_QWORD *)(v0 + 240);
  if (!*(_QWORD *)(v0 + 144))
  {
    sub_10004A7B8(v0 + 120);
    v11 = 1;
    goto LABEL_10;
  }
  v8 = *(void **)(v0 + 224);
  v9 = *(_OWORD **)(v0 + 200);

  swift_release(v7);
  sub_10004CFC4((_OWORD *)(v0 + 120), v9);
  v10 = *(uint64_t (**)(void))(v0 + 8);
  return v10();
}

uint64_t sub_10032CA80()
{
  uint64_t v0;
  void *v1;

  swift_release(*(_QWORD *)(v0 + 240));
  v1 = *(void **)(v0 + 224);

  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_10032CAC0(uint64_t a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  void *v7;
  void **v8;
  uint64_t v9;
  void (*v10)(uint64_t, void *);
  void *v11;
  void *v12;
  uint64_t v13;

  v3 = *(void **)(a2 + 16);
  v4 = swift_allocObject(&unk_1008FDB40, 24, 7);
  *(_QWORD *)(v4 + 16) = a1;
  v12 = sub_10032CCF8;
  v13 = v4;
  v8 = _NSConcreteStackBlock;
  v9 = 1107296256;
  v10 = sub_10032CC2C;
  v11 = &unk_1008FDB58;
  v5 = _Block_copy(&v8);
  swift_release(v13);
  objc_msgSend(v3, "addSuccessBlock:", v5);
  _Block_release(v5);
  v6 = swift_allocObject(&unk_1008FDB90, 24, 7);
  *(_QWORD *)(v6 + 16) = a1;
  v12 = sub_10032CD38;
  v13 = v6;
  v8 = _NSConcreteStackBlock;
  v9 = 1107296256;
  v10 = sub_1001EDBF0;
  v11 = &unk_1008FDBA8;
  v7 = _Block_copy(&v8);
  swift_release(v13);
  objc_msgSend(v3, "addErrorBlock:", v7);
  _Block_release(v7);
}

unint64_t sub_10032CBE8()
{
  unint64_t result;

  result = qword_1009DAF90;
  if (!qword_1009DAF90)
  {
    result = swift_getWitnessTable(&unk_10071B860, &type metadata for AMSEngagementService.Errors);
    atomic_store(result, (unint64_t *)&qword_1009DAF90);
  }
  return result;
}

void sub_10032CC2C(uint64_t a1, void *a2)
{
  uint64_t v4;
  void (*v5)(void);
  id v6;

  sub_10000A5D8();
  v5 = *(void (**)(void))(a1 + 32);
  v4 = *(_QWORD *)(a1 + 40);
  swift_retain(v4);
  v6 = a2;
  v5();
  swift_release(v4);

}

uint64_t sub_10032CC88(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = sub_10004CFD4((uint64_t *)&unk_1009D3170);
  v5 = swift_allocError(v4, &protocol self-conformance witness table for Error, 0, 0);
  *v6 = a1;
  swift_errorRetain(a1);
  return swift_continuation_throwingResumeWithError(a2, v5);
}

uint64_t sub_10032CCE8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10032CCF8(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  id v3;

  v2 = *(_QWORD *)(v1 + 16);
  **(_QWORD **)(*(_QWORD *)(v2 + 64) + 40) = a1;
  v3 = a1;
  return swift_continuation_throwingResume(v2);
}

uint64_t sub_10032CD28()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10032CD38(uint64_t a1)
{
  uint64_t v1;

  return sub_10032CC88(a1, *(_QWORD *)(v1 + 16));
}

uint64_t storeEnumTagSinglePayload for AMSEngagementService.Errors(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_10032CD8C + 4 * byte_10071B7B5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_10032CDC0 + 4 * byte_10071B7B0[v4]))();
}

uint64_t sub_10032CDC0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10032CDC8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10032CDD0);
  return result;
}

uint64_t sub_10032CDDC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10032CDE4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_10032CDE8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10032CDF0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AMSEngagementService.Errors()
{
  return &type metadata for AMSEngagementService.Errors;
}

unint64_t sub_10032CE10()
{
  unint64_t result;

  result = qword_1009DAFA0;
  if (!qword_1009DAFA0)
  {
    result = swift_getWitnessTable(&unk_10071B838, &type metadata for AMSEngagementService.Errors);
    atomic_store(result, (unint64_t *)&qword_1009DAFA0);
  }
  return result;
}

uint64_t sub_10032CE5C()
{
  uint64_t v0;

  swift_defaultActor_destroy(v0);
  return swift_defaultActor_deallocate(v0);
}

uint64_t sub_10032CE78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[55] = a5;
  v6[56] = a6;
  v6[54] = a4;
  if (qword_1009CDEB8 != -1)
    swift_once(&qword_1009CDEB8, sub_100007FE0);
  return swift_task_switch(sub_10032CEE0, qword_1009DAFB0, 0);
}

uint64_t sub_10032CEE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t inited;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  Class isa;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  id v22;
  void *v23;
  id v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(void);

  v1 = *(_QWORD *)(v0 + 448);
  v28 = *(void (**)(void))(v0 + 432);
  v25 = objc_msgSend(objc_allocWithZone((Class)NSISO8601DateFormatter), "init");
  v2 = BasePropertyConfiguration.identifier.getter();
  v26 = v3;
  v27 = v2;
  v4 = sub_10004CFD4((uint64_t *)&unk_1009DB440);
  inited = swift_initStackObject(v4, v0 + 16);
  *(_OWORD *)(inited + 16) = xmmword_10071B8B0;
  *(_QWORD *)(inited + 32) = 0x53676E6964616572;
  *(_QWORD *)(inited + 40) = 0xEF736E6F69737365;
  v6 = (uint64_t *)(v1 + OBJC_IVAR___BKSessionDonor_readingSessions);
  swift_beginAccess(v1 + OBJC_IVAR___BKSessionDonor_readingSessions, v0 + 336, 0, 0);
  v7 = *v6;
  v8 = sub_10004CFD4((uint64_t *)&unk_1009E8850);
  *(_QWORD *)(inited + 48) = v7;
  *(_QWORD *)(inited + 72) = v8;
  *(_QWORD *)(inited + 80) = 0xD000000000000011;
  *(_QWORD *)(inited + 88) = 0x80000001007BFE70;
  v9 = (uint64_t *)(v1 + OBJC_IVAR___BKSessionDonor_listeningSessions);
  swift_beginAccess(v1 + OBJC_IVAR___BKSessionDonor_listeningSessions, v0 + 360, 0, 0);
  v10 = *v9;
  *(_QWORD *)(inited + 96) = *v9;
  *(_QWORD *)(inited + 120) = v8;
  *(_QWORD *)(inited + 128) = 0xD000000000000011;
  *(_QWORD *)(inited + 136) = 0x80000001007BFE40;
  v11 = (uint64_t *)(v1 + OBJC_IVAR___BKSessionDonor_productPageViewed);
  swift_beginAccess(v1 + OBJC_IVAR___BKSessionDonor_productPageViewed, v0 + 384, 0, 0);
  v12 = *v11;
  v13 = sub_10004CFD4((uint64_t *)&unk_1009DB450);
  *(_QWORD *)(inited + 144) = v12;
  *(_QWORD *)(inited + 168) = v13;
  *(_QWORD *)(inited + 176) = 0x6573616863727570;
  *(_QWORD *)(inited + 184) = 0xE900000000000073;
  v14 = (uint64_t *)(v1 + OBJC_IVAR___BKSessionDonor_purchases);
  swift_beginAccess(v1 + OBJC_IVAR___BKSessionDonor_purchases, v0 + 408, 0, 0);
  v15 = *v14;
  *(_QWORD *)(inited + 192) = *v14;
  *(_QWORD *)(inited + 216) = v13;
  *(_QWORD *)(inited + 224) = 0x7461447472617473;
  *(_QWORD *)(inited + 232) = 0xE900000000000065;
  swift_bridgeObjectRetain(v7);
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRetain(v12);
  swift_bridgeObjectRetain(v15);
  isa = Date._bridgeToObjectiveC()().super.isa;
  v17 = objc_msgSend(v25, "stringFromDate:", isa);

  v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(v17);
  v20 = v19;

  *(_QWORD *)(inited + 264) = &type metadata for String;
  *(_QWORD *)(inited + 240) = v18;
  *(_QWORD *)(inited + 248) = v20;
  v21 = sub_100025DC8(inited);
  *(_QWORD *)(v0 + 288) = v27;
  *(_QWORD *)(v0 + 296) = v26;
  *(_QWORD *)(v0 + 312) = 0;
  *(_QWORD *)(v0 + 320) = 0;
  *(_QWORD *)(v0 + 304) = v21;
  *(_BYTE *)(v0 + 328) = 1;
  v22 = objc_allocWithZone((Class)type metadata accessor for BMPropertyValue(0));
  v23 = (void *)BMPropertyValue.init(with:)(v0 + 288);
  v28();

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10032D1CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[19] = a5;
  v6[20] = a6;
  v6[18] = a4;
  if (qword_1009CDEB8 != -1)
    swift_once(&qword_1009CDEB8, sub_100007FE0);
  return swift_task_switch(sub_10032D234, qword_1009DAFB0, 0);
}

uint64_t sub_10032D234()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(void);
  uint64_t v3;
  uint64_t inited;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  id v8;
  void *v9;

  v1 = *(_QWORD *)(v0 + 160);
  v2 = *(void (**)(void))(v0 + 144);
  v3 = sub_10004CFD4((uint64_t *)&unk_1009DB440);
  inited = swift_initStackObject(v3, v0 + 16);
  *(_OWORD *)(inited + 16) = xmmword_10070CCA0;
  *(_QWORD *)(inited + 32) = 0x696669746E656469;
  *(_QWORD *)(inited + 40) = 0xEA00000000007265;
  v6 = *(_QWORD *)(v1 + OBJC_IVAR___BKSessionDonor_currentTab);
  v5 = *(_QWORD *)(v1 + OBJC_IVAR___BKSessionDonor_currentTab + 8);
  *(_QWORD *)(inited + 72) = &type metadata for String;
  *(_QWORD *)(inited + 48) = v6;
  *(_QWORD *)(inited + 56) = v5;
  swift_bridgeObjectRetain(v5);
  v7 = sub_100025DC8(inited);
  *(_QWORD *)(v0 + 96) = 0;
  *(_QWORD *)(v0 + 104) = 0;
  *(_QWORD *)(v0 + 112) = v7;
  *(_QWORD *)(v0 + 120) = 0;
  *(_QWORD *)(v0 + 128) = 0;
  *(_BYTE *)(v0 + 136) = 1;
  v8 = objc_allocWithZone((Class)type metadata accessor for BMPropertyValue(0));
  v9 = (void *)BMPropertyValue.init(with:)(v0 + 96);
  v2();

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10032D320(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[19] = a5;
  v6[20] = a6;
  v6[18] = a4;
  if (qword_1009CDEB8 != -1)
    swift_once(&qword_1009CDEB8, sub_100007FE0);
  return swift_task_switch(sub_10032D388, qword_1009DAFB0, 0);
}

uint64_t sub_10032D388()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(void);
  uint64_t v3;
  uint64_t inited;
  uint64_t v5;
  unint64_t v6;
  id v7;
  void *v8;

  v1 = *(_QWORD *)(v0 + 160);
  v2 = *(void (**)(void))(v0 + 144);
  v3 = sub_10004CFD4((uint64_t *)&unk_1009DB440);
  inited = swift_initStackObject(v3, v0 + 16);
  *(_OWORD *)(inited + 16) = xmmword_10070CCA0;
  *(_QWORD *)(inited + 32) = 0x736B6F6F62;
  *(_QWORD *)(inited + 40) = 0xE500000000000000;
  v5 = *(_QWORD *)(v1 + OBJC_IVAR___BKSessionDonor_recentBooks);
  *(_QWORD *)(inited + 72) = sub_10004CFD4((uint64_t *)&unk_1009DB450);
  *(_QWORD *)(inited + 48) = v5;
  swift_bridgeObjectRetain(v5);
  v6 = sub_100025DC8(inited);
  *(_QWORD *)(v0 + 96) = 0;
  *(_QWORD *)(v0 + 104) = 0;
  *(_QWORD *)(v0 + 112) = v6;
  *(_QWORD *)(v0 + 120) = 0;
  *(_QWORD *)(v0 + 128) = 0;
  *(_BYTE *)(v0 + 136) = 1;
  v7 = objc_allocWithZone((Class)type metadata accessor for BMPropertyValue(0));
  v8 = (void *)BMPropertyValue.init(with:)(v0 + 96);
  v2();

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10032D470(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[19] = a5;
  v6[20] = a6;
  v6[18] = a4;
  if (qword_1009CDEB8 != -1)
    swift_once(&qword_1009CDEB8, sub_100007FE0);
  return swift_task_switch(sub_10032D4D8, qword_1009DAFB0, 0);
}

uint64_t sub_10032D4D8()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(void);
  uint64_t v3;
  uint64_t inited;
  uint64_t v5;
  unint64_t v6;
  id v7;
  void *v8;

  v1 = *(_QWORD *)(v0 + 160);
  v2 = *(void (**)(void))(v0 + 144);
  v3 = sub_10004CFD4((uint64_t *)&unk_1009DB440);
  inited = swift_initStackObject(v3, v0 + 16);
  *(_OWORD *)(inited + 16) = xmmword_10070CCA0;
  *(_QWORD *)(inited + 32) = 0x736B6F6F62;
  *(_QWORD *)(inited + 40) = 0xE500000000000000;
  v5 = *(_QWORD *)(v1 + OBJC_IVAR___BKSessionDonor_sampleBooks);
  *(_QWORD *)(inited + 72) = sub_10004CFD4((uint64_t *)&unk_1009DB450);
  *(_QWORD *)(inited + 48) = v5;
  swift_bridgeObjectRetain(v5);
  v6 = sub_100025DC8(inited);
  *(_QWORD *)(v0 + 96) = 0;
  *(_QWORD *)(v0 + 104) = 0;
  *(_QWORD *)(v0 + 112) = v6;
  *(_QWORD *)(v0 + 120) = 0;
  *(_QWORD *)(v0 + 128) = 0;
  *(_BYTE *)(v0 + 136) = 1;
  v7 = objc_allocWithZone((Class)type metadata accessor for BMPropertyValue(0));
  v8 = (void *)BMPropertyValue.init(with:)(v0 + 96);
  v2();

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10032D5C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[19] = a5;
  v6[20] = a6;
  v6[18] = a4;
  if (qword_1009CDEB8 != -1)
    swift_once(&qword_1009CDEB8, sub_100007FE0);
  return swift_task_switch(sub_10032D628, qword_1009DAFB0, 0);
}

uint64_t sub_10032D628()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(void);
  uint64_t v3;
  uint64_t inited;
  uint64_t v5;
  unint64_t v6;
  id v7;
  void *v8;

  v1 = *(_QWORD *)(v0 + 160);
  v2 = *(void (**)(void))(v0 + 144);
  v3 = sub_10004CFD4((uint64_t *)&unk_1009DB440);
  inited = swift_initStackObject(v3, v0 + 16);
  *(_OWORD *)(inited + 16) = xmmword_10070CCA0;
  *(_QWORD *)(inited + 32) = 0x736B6F6F62;
  *(_QWORD *)(inited + 40) = 0xE500000000000000;
  v5 = *(_QWORD *)(v1 + OBJC_IVAR___BKSessionDonor_storeBooks);
  *(_QWORD *)(inited + 72) = sub_10004CFD4((uint64_t *)&unk_1009DB450);
  *(_QWORD *)(inited + 48) = v5;
  swift_bridgeObjectRetain(v5);
  v6 = sub_100025DC8(inited);
  *(_QWORD *)(v0 + 96) = 0;
  *(_QWORD *)(v0 + 104) = 0;
  *(_QWORD *)(v0 + 112) = v6;
  *(_QWORD *)(v0 + 120) = 0;
  *(_QWORD *)(v0 + 128) = 0;
  *(_BYTE *)(v0 + 136) = 1;
  v7 = objc_allocWithZone((Class)type metadata accessor for BMPropertyValue(0));
  v8 = (void *)BMPropertyValue.init(with:)(v0 + 96);
  v2();

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10032D710(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  *(_QWORD *)(v5 + 40) = a4;
  *(_QWORD *)(v5 + 48) = a5;
  if (qword_1009CDEB8 != -1)
    swift_once(&qword_1009CDEB8, sub_100007FE0);
  return swift_task_switch(sub_10032D774, qword_1009DAFB0, 0);
}

uint64_t sub_10032D774()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD **v2;
  _QWORD *v3;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;

  v1 = *(_QWORD *)(v0 + 48);
  v2 = (_QWORD **)(*(_QWORD *)(v0 + 40) + OBJC_IVAR___BKSessionDonor_purchases);
  swift_beginAccess(v2, v0 + 16, 33, 0);
  v3 = *v2;
  swift_bridgeObjectRetain(v1);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v3);
  *v2 = v3;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v3 = sub_10003FB28(0, v3[2] + 1, 1, v3);
    *v2 = v3;
  }
  v6 = v3[2];
  v5 = v3[3];
  if (v6 >= v5 >> 1)
  {
    v3 = sub_10003FB28((_QWORD *)(v5 > 1), v6 + 1, 1, v3);
    *v2 = v3;
  }
  v7 = *(_QWORD *)(v0 + 48);
  v3[2] = v6 + 1;
  v3[v6 + 4] = v7;
  swift_endAccess(v0 + 16);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

_BYTE *sub_10032DA60(_BYTE *result, uint64_t a2, _QWORD *a3, _QWORD *a4)
{
  if ((result[*a3] & 1) == 0)
  {
    result[*a3] = 1;
    return objc_msgSend(result, "propertyDidChange:propertyConfiguration:", result, *(_QWORD *)&result[*a4]);
  }
  return result;
}

id sub_10032DA90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  void *v5;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;

  v11 = sub_10004CFD4(&qword_1009D3150);
  __chkstk_darwin(v11);
  v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v13, 1, 1, v14);
  v15 = qword_1009CDEB8;
  v16 = v5;
  swift_bridgeObjectRetain(a2);
  swift_bridgeObjectRetain(a4);
  if (v15 != -1)
    swift_once(&qword_1009CDEB8, sub_100007FE0);
  v17 = qword_1009DAFB0;
  v18 = sub_100008DB0(&qword_1009DA220, (uint64_t (*)(uint64_t))type metadata accessor for PropertyValueActor.ActorType, (uint64_t)&unk_10071B984);
  v19 = swift_allocObject(&unk_1008FDE10, 73, 7);
  *(_QWORD *)(v19 + 16) = v17;
  *(_QWORD *)(v19 + 24) = v18;
  *(_QWORD *)(v19 + 32) = v16;
  *(_QWORD *)(v19 + 40) = a1;
  *(_QWORD *)(v19 + 48) = a2;
  *(_QWORD *)(v19 + 56) = a3;
  *(_QWORD *)(v19 + 64) = a4;
  *(_BYTE *)(v19 + 72) = a5 & 1;
  swift_retain(v17);
  v20 = sub_10030C02C((uint64_t)v13, (uint64_t)&unk_1009DB3D0, v19);
  return objc_msgSend(v16, "propertyDidChange:propertyConfiguration:", v16, *(_QWORD *)&v16[OBJC_IVAR___BKSessionDonor_sessionConfiguration], swift_release(v20).n128_f64[0]);
}

uint64_t sub_10032DC14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  char v10;

  *(_BYTE *)(v8 + 256) = v10;
  *(_QWORD *)(v8 + 240) = a7;
  *(_QWORD *)(v8 + 248) = a8;
  *(_QWORD *)(v8 + 224) = a5;
  *(_QWORD *)(v8 + 232) = a6;
  *(_QWORD *)(v8 + 216) = a4;
  if (qword_1009CDEB8 != -1)
    swift_once(&qword_1009CDEB8, sub_100007FE0);
  return swift_task_switch(sub_10032DC88, qword_1009DAFB0, 0);
}

uint64_t sub_10032DC88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t inited;
  id v9;
  id v10;
  unint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v15;
  unint64_t v16;

  v1 = *(unsigned __int8 *)(v0 + 256);
  v3 = *(_QWORD *)(v0 + 240);
  v2 = *(_QWORD *)(v0 + 248);
  v5 = *(_QWORD *)(v0 + 224);
  v4 = *(_QWORD *)(v0 + 232);
  v6 = *(_QWORD *)(v0 + 216);
  v7 = sub_10004CFD4((uint64_t *)&unk_1009D30D0);
  inited = swift_initStackObject(v7, v0 + 16);
  *(_QWORD *)(inited + 32) = 0x49746375646F7270;
  *(_QWORD *)(inited + 40) = 0xE900000000000064;
  *(_OWORD *)(inited + 16) = xmmword_100712B60;
  *(_QWORD *)(inited + 48) = v5;
  *(_QWORD *)(inited + 56) = v4;
  *(_QWORD *)(inited + 72) = &type metadata for String;
  *(_QWORD *)(inited + 80) = 0x54746375646F7270;
  *(_QWORD *)(inited + 88) = 0xEB00000000657079;
  *(_QWORD *)(inited + 96) = v3;
  *(_QWORD *)(inited + 104) = v2;
  *(_QWORD *)(inited + 120) = &type metadata for String;
  *(_QWORD *)(inited + 128) = 1196651369;
  *(_QWORD *)(inited + 136) = 0xE400000000000000;
  v9 = objc_allocWithZone((Class)NSNumber);
  swift_bridgeObjectRetain(v4);
  v10 = objc_msgSend(v9, "initWithBool:", v1, swift_bridgeObjectRetain(v2).n128_f64[0]);
  *(_QWORD *)(inited + 168) = sub_100009E04(0, (unint64_t *)&qword_1009DA820, NSNumber_ptr);
  *(_QWORD *)(inited + 144) = v10;
  v11 = sub_10003FB0C(inited);
  v12 = (_QWORD *)(v6 + OBJC_IVAR___BKSessionDonor_productPageViewed);
  swift_beginAccess(v6 + OBJC_IVAR___BKSessionDonor_productPageViewed, v0 + 192, 33, 0);
  v13 = (_QWORD *)*v12;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v12);
  *v12 = v13;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v13 = sub_10003FB28(0, v13[2] + 1, 1, v13);
    *v12 = v13;
  }
  v16 = v13[2];
  v15 = v13[3];
  if (v16 >= v15 >> 1)
  {
    v13 = sub_10003FB28((_QWORD *)(v15 > 1), v16 + 1, 1, v13);
    *v12 = v13;
  }
  v13[2] = v16 + 1;
  v13[v16 + 4] = v11;
  swift_endAccess(v0 + 192);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

id sub_10032DEF4()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SessionDonor(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_10032E1D0()
{
  return type metadata accessor for SessionDonor(0);
}

uint64_t sub_10032E1D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[6] = a5;
  v6[7] = a6;
  v6[5] = a4;
  if (qword_1009CDEB8 != -1)
    swift_once(&qword_1009CDEB8, sub_100007FE0);
  return swift_task_switch(sub_10032E240, qword_1009DAFB0, 0);
}

uint64_t sub_10032E240()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD **v2;
  _QWORD *v3;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v1 = *(_QWORD *)(v0 + 56);
  v2 = (_QWORD **)(*(_QWORD *)(v0 + 40) + OBJC_IVAR___BKSessionDonor_readingSessions);
  swift_beginAccess(v2, v0 + 16, 33, 0);
  v3 = *v2;
  swift_bridgeObjectRetain(v1);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v3);
  *v2 = v3;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v3 = sub_100043ED0(0, v3[2] + 1, 1, v3);
    *v2 = v3;
  }
  v6 = v3[2];
  v5 = v3[3];
  if (v6 >= v5 >> 1)
  {
    v3 = sub_100043ED0((_QWORD *)(v5 > 1), v6 + 1, 1, v3);
    *v2 = v3;
  }
  v8 = *(_QWORD *)(v0 + 48);
  v7 = *(_QWORD *)(v0 + 56);
  v3[2] = v6 + 1;
  v9 = &v3[2 * v6];
  v9[4] = v8;
  v9[5] = v7;
  swift_endAccess(v0 + 16);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10032E330(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[6] = a5;
  v6[7] = a6;
  v6[5] = a4;
  if (qword_1009CDEB8 != -1)
    swift_once(&qword_1009CDEB8, sub_100007FE0);
  return swift_task_switch(sub_10032E398, qword_1009DAFB0, 0);
}

uint64_t sub_10032E398()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD **v2;
  _QWORD *v3;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v1 = *(_QWORD *)(v0 + 56);
  v2 = (_QWORD **)(*(_QWORD *)(v0 + 40) + OBJC_IVAR___BKSessionDonor_listeningSessions);
  swift_beginAccess(v2, v0 + 16, 33, 0);
  v3 = *v2;
  swift_bridgeObjectRetain(v1);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v3);
  *v2 = v3;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v3 = sub_100043ED0(0, v3[2] + 1, 1, v3);
    *v2 = v3;
  }
  v6 = v3[2];
  v5 = v3[3];
  if (v6 >= v5 >> 1)
  {
    v3 = sub_100043ED0((_QWORD *)(v5 > 1), v6 + 1, 1, v3);
    *v2 = v3;
  }
  v8 = *(_QWORD *)(v0 + 48);
  v7 = *(_QWORD *)(v0 + 56);
  v3[2] = v6 + 1;
  v9 = &v3[2 * v6];
  v9[4] = v8;
  v9[5] = v7;
  swift_endAccess(v0 + 16);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10032E688(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  *(_QWORD *)(v5 + 16) = a4;
  *(_QWORD *)(v5 + 24) = a5;
  if (qword_1009CDEB8 != -1)
    swift_once(&qword_1009CDEB8, sub_100007FE0);
  return swift_task_switch(sub_10032E6EC, qword_1009DAFB0, 0);
}

uint64_t sub_10032E6EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v0 + 16);
  v1 = *(_QWORD *)(v0 + 24);
  v3 = *(_QWORD *)(v2 + OBJC_IVAR___BKSessionDonor_sampleBooks);
  *(_QWORD *)(v2 + OBJC_IVAR___BKSessionDonor_sampleBooks) = v1;
  swift_bridgeObjectRetain(v1);
  swift_bridgeObjectRelease(v3);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10032E734(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  *(_QWORD *)(v5 + 16) = a4;
  *(_QWORD *)(v5 + 24) = a5;
  if (qword_1009CDEB8 != -1)
    swift_once(&qword_1009CDEB8, sub_100007FE0);
  return swift_task_switch(sub_10032E798, qword_1009DAFB0, 0);
}

uint64_t sub_10032E798()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v0 + 16);
  v1 = *(_QWORD *)(v0 + 24);
  v3 = *(_QWORD *)(v2 + OBJC_IVAR___BKSessionDonor_recentBooks);
  *(_QWORD *)(v2 + OBJC_IVAR___BKSessionDonor_recentBooks) = v1;
  swift_bridgeObjectRetain(v1);
  swift_bridgeObjectRelease(v3);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10032E7E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  *(_QWORD *)(v5 + 16) = a4;
  *(_QWORD *)(v5 + 24) = a5;
  if (qword_1009CDEB8 != -1)
    swift_once(&qword_1009CDEB8, sub_100007FE0);
  return swift_task_switch(sub_10032E844, qword_1009DAFB0, 0);
}

uint64_t sub_10032E844()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v0 + 16);
  v1 = *(_QWORD *)(v0 + 24);
  v3 = *(_QWORD *)(v2 + OBJC_IVAR___BKSessionDonor_storeBooks);
  *(_QWORD *)(v2 + OBJC_IVAR___BKSessionDonor_storeBooks) = v1;
  swift_bridgeObjectRetain(v1);
  swift_bridgeObjectRelease(v3);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_10032E88C()
{
  uint64_t v0;
  id v1;
  uint64_t v2;
  void *v3;
  uint64_t Strong;
  void *v5;
  _QWORD v6[5];
  uint64_t v7;

  v1 = objc_msgSend((id)objc_opt_self(BKNotificationManager), "sharedInstance");
  v2 = swift_allocObject(&unk_1008FDCD0, 24, 7);
  swift_unknownObjectWeakInit(v2 + 16);
  v6[4] = sub_10032E9F8;
  v7 = v2;
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 1107296256;
  v6[2] = sub_10004DCB4;
  v6[3] = &unk_1008FDCE8;
  v3 = _Block_copy(v6);
  objc_msgSend(v1, "getAuthorizationStatusWithCompletion:", v3, swift_release(v7).n128_f64[0]);
  _Block_release(v3);

  Strong = swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR___BKSessionDonor_manager);
  if (Strong)
  {
    v5 = (void *)Strong;
    dispatch thunk of Manager.submit(event:)(0xD000000000000021, 0x80000001007C0150);

  }
}

uint64_t sub_10032E9D4()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_10032E9F8(uint64_t a1)
{
  uint64_t v1;

  sub_10000D1C4(a1, v1);
}

uint64_t sub_10032EA04(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc(dword_1009DB34C);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_1001FC2C4;
  return sub_10032E7E0(a1, v4, v5, v7, v6);
}

uint64_t sub_10032EA80(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc(dword_1009DB364);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_1001FC2C4;
  return sub_10032E734(a1, v4, v5, v7, v6);
}

uint64_t sub_10032EAFC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc(dword_1009DB374);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_1001FC2C4;
  return sub_10032E688(a1, v4, v5, v7, v6);
}

id sub_10032EB74(uint64_t a1, void *a2)
{
  void *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  char *v13;
  int v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  __n128 v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _BYTE v39[24];

  v37 = a1;
  v38 = type metadata accessor for UUID(0);
  v4 = *(_QWORD *)(v38 - 8);
  __chkstk_darwin(v38);
  v6 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v36 - v8;
  v10 = sub_10004CFD4(&qword_1009D3150);
  v11 = __chkstk_darwin(v10);
  v13 = (char *)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = objc_msgSend(a2, "contentType", v11);
  v15 = objc_msgSend(a2, "assetID");
  v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
  v18 = v17;

  v19 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v13, 1, 1, v19);
  v20 = qword_1009CDEB8;
  v21 = v2;
  if (v14 > 5)
  {
    if (v20 != -1)
      swift_once(&qword_1009CDEB8, sub_100007FE0);
    v29 = qword_1009DAFB0;
    v30 = sub_100008DB0(&qword_1009DA220, (uint64_t (*)(uint64_t))type metadata accessor for PropertyValueActor.ActorType, (uint64_t)&unk_10071B984);
    v31 = (_QWORD *)swift_allocObject(&unk_1008FDDC0, 56, 7);
    v31[2] = v29;
    v31[3] = v30;
    v31[4] = v21;
    v31[5] = v16;
    v31[6] = v18;
    swift_retain(v29);
    v32 = sub_10030C02C((uint64_t)v13, (uint64_t)&unk_1009DB3B0, (uint64_t)v31);
    v33 = swift_release(v32);
    v34 = v38;
    (*(void (**)(char *, uint64_t, uint64_t, __n128))(v4 + 16))(v6, v37, v38, v33);
    swift_beginAccess(&v21[OBJC_IVAR___BKSessionDonor_listeningSessionInProgress], v39, 33, 0);
    sub_10060B884((uint64_t)v9, (uint64_t)v6);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v34);
    swift_endAccess(v39);
    v28 = &OBJC_IVAR___BKSessionDonor_listeningSessionInProgressConfig;
  }
  else
  {
    if (v20 != -1)
      swift_once(&qword_1009CDEB8, sub_100007FE0);
    v22 = qword_1009DAFB0;
    v23 = sub_100008DB0(&qword_1009DA220, (uint64_t (*)(uint64_t))type metadata accessor for PropertyValueActor.ActorType, (uint64_t)&unk_10071B984);
    v24 = (_QWORD *)swift_allocObject(&unk_1008FDDE8, 56, 7);
    v24[2] = v22;
    v24[3] = v23;
    v24[4] = v21;
    v24[5] = v16;
    v24[6] = v18;
    swift_retain(v22);
    v25 = sub_10030C02C((uint64_t)v13, (uint64_t)&unk_1009DB3C0, (uint64_t)v24);
    v26 = swift_release(v25);
    v27 = v38;
    (*(void (**)(char *, uint64_t, uint64_t, __n128))(v4 + 16))(v6, v37, v38, v26);
    swift_beginAccess(&v21[OBJC_IVAR___BKSessionDonor_readingSessionInProgress], v39, 33, 0);
    sub_10060B884((uint64_t)v9, (uint64_t)v6);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v27);
    swift_endAccess(v39);
    v28 = &OBJC_IVAR___BKSessionDonor_readingSessionInProgressConfig;
  }
  objc_msgSend(v21, "propertyDidChange:propertyConfiguration:", v21, *(_QWORD *)&v21[*v28]);
  return objc_msgSend(v21, "propertyDidChange:propertyConfiguration:", v21, *(_QWORD *)&v21[OBJC_IVAR___BKSessionDonor_sessionConfiguration]);
}

id sub_10032EED8(uint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE v9[24];

  v2 = v1;
  v4 = sub_10004CFD4(&qword_1009DB3A0);
  __chkstk_darwin(v4);
  v6 = &v9[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  swift_beginAccess(&v1[OBJC_IVAR___BKSessionDonor_readingSessionInProgress], v9, 33, 0);
  sub_10057A1FC(a1, (uint64_t)v6);
  sub_100010960((uint64_t)v6, &qword_1009DB3A0);
  swift_endAccess(v9);
  swift_beginAccess(&v1[OBJC_IVAR___BKSessionDonor_listeningSessionInProgress], v9, 33, 0);
  sub_10057A1FC(a1, (uint64_t)v6);
  sub_100010960((uint64_t)v6, &qword_1009DB3A0);
  swift_endAccess(v9);
  objc_msgSend(v2, "propertyDidChange:propertyConfiguration:", v2, *(_QWORD *)&v2[OBJC_IVAR___BKSessionDonor_listeningSessionInProgressConfig]);
  return objc_msgSend(v2, "propertyDidChange:propertyConfiguration:", v2, *(_QWORD *)&v2[OBJC_IVAR___BKSessionDonor_readingSessionInProgressConfig]);
}

void sub_10032F008()
{
  char *v0;
  id v1;
  uint64_t v2;
  void *v3;
  _QWORD v4[5];
  uint64_t v5;

  objc_msgSend(v0, "propertyDidChange:propertyConfiguration:", v0, *(_QWORD *)&v0[OBJC_IVAR___BKSessionDonor_connectedToCarplayConfig]);
  v1 = objc_msgSend(objc_allocWithZone((Class)CRPairedVehicleManager), "init");
  v2 = swift_allocObject(&unk_1008FDCD0, 24, 7);
  swift_unknownObjectWeakInit(v2 + 16);
  v4[4] = sub_10032F0FC;
  v5 = v2;
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 1107296256;
  v4[2] = sub_10000C8D0;
  v4[3] = &unk_1008FDD88;
  v3 = _Block_copy(v4);
  objc_msgSend(v1, "fetchPairedVehiclesWithCompletion:", v3, swift_release(v5).n128_f64[0]);
  _Block_release(v3);

}

void sub_10032F0FC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_10000B9D0(a1, a2, v2);
}

uint64_t sub_10032F108(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = (_QWORD *)swift_task_alloc(dword_1009DB3AC);
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_10000AE34;
  return sub_10032E330(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_10032F18C()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 48));
  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_10032F1C0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = (_QWORD *)swift_task_alloc(dword_1009DB3BC);
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_1001FC2C4;
  return sub_10032E1D8(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_10032F240()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 48));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 64));
  return swift_deallocObject(v0, 73, 7);
}

uint64_t sub_10032F27C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = v1[7];
  v10 = v1[8];
  v11 = (_QWORD *)swift_task_alloc(dword_1009DB3CC);
  *(_QWORD *)(v2 + 16) = v11;
  *v11 = v2;
  v11[1] = sub_1001FC2C4;
  return sub_10032DC14(a1, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_10032F320()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10032F350()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_10032F384()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10032F3AC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = (_QWORD *)swift_task_alloc(dword_1009DB3F4);
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_1001FC2C4;
  return sub_10032D5C0(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_10032F430(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = (_QWORD *)swift_task_alloc(dword_1009DB404);
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_1001FC2C4;
  return sub_10032D470(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_10032F4B4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = (_QWORD *)swift_task_alloc(dword_1009DB414);
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_1001FC2C4;
  return sub_10032D320(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_10032F538(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = (_QWORD *)swift_task_alloc(dword_1009DB424);
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_1001FC2C4;
  return sub_10032D1CC(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_10032F5BC()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 40));

  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_10032F5F0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = (_QWORD *)swift_task_alloc(dword_1009DB434);
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_1001FC2C4;
  return sub_10032CE78(a1, v4, v5, v6, v7, v8);
}

double sub_10032F690(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t Strong;
  uint64_t v5;
  uint64_t v6;
  double result;
  uint64_t v8;
  _BYTE v9[24];

  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v9, 0, 0);
  Strong = swift_weakLoadStrong(v3);
  if (Strong)
  {
    v5 = Strong;
    sub_100330374(a1);
    swift_release(v5);
  }
  swift_beginAccess(v3, &v8, 0, 0);
  v6 = swift_weakLoadStrong(v3);
  if (v6)
  {
    *(_BYTE *)(v6 + 34) = 0;
    *(_QWORD *)&result = swift_release(v6).n128_u64[0];
  }
  return result;
}

double sub_10032F720(unsigned __int8 *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  int v19;
  uint64_t Strong;
  double result;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  void *v34;
  void (*v35)(char *, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD aBlock[5];
  _QWORD *v43;
  char v44[24];

  v37 = a4;
  v38 = a3;
  v6 = type metadata accessor for DispatchWorkItemFlags(0);
  v41 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for DispatchQoS(0);
  v39 = *(_QWORD *)(v9 - 8);
  v40 = v9;
  __chkstk_darwin(v9);
  v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for DispatchTime(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v18 = (char *)&v35 - v17;
  v19 = *a1;
  a2 += 16;
  swift_beginAccess(a2, v44, 0, 0);
  Strong = swift_weakLoadStrong(a2);
  if (Strong)
  {
    v22 = Strong;
    if (v19 == *(unsigned __int8 *)(Strong + 32))
    {
      if (v19)
      {
        v23 = sub_100059BB4();
        v36 = static OS_dispatch_queue.main.getter(v23);
        static DispatchTime.now()(v36);
        + infix(_:_:)(v15, 2.0);
        v35 = *(void (**)(char *, uint64_t))(v13 + 8);
        v35(v15, v12);
        v24 = swift_allocObject(&unk_1008FE000, 24, 7);
        swift_weakInit(v24 + 16, v22);
        v25 = (_QWORD *)swift_allocObject(&unk_1008FE050, 40, 7);
        v26 = v37;
        v27 = v38;
        v25[2] = v24;
        v25[3] = v27;
        v25[4] = v26;
        aBlock[4] = sub_1003319F4;
        v43 = v25;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = sub_1000147F0;
        aBlock[3] = &unk_1008FE068;
        v28 = _Block_copy(aBlock);
        v29 = v43;
        swift_unknownObjectRetain(v27);
        swift_release(v29);
        static DispatchQoS.unspecified.getter(v30);
        aBlock[0] = _swiftEmptyArrayStorage;
        v31 = sub_100008DB0((unint64_t *)&qword_1009D48E0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
        v32 = sub_10004CFD4((uint64_t *)&unk_1009DB460);
        v33 = sub_100065324();
        dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v32, v33, v6, v31);
        v34 = (void *)v36;
        OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v18, v11, v8, v28);
        _Block_release(v28);
        swift_release(v22);

        (*(void (**)(char *, uint64_t))(v41 + 8))(v8, v6);
        (*(void (**)(char *, uint64_t))(v39 + 8))(v11, v40);
        v35(v18, v12);
        return result;
      }
      *(_BYTE *)(Strong + 32) = 1;
      sub_1003312DC(8);
    }
    *(_QWORD *)&result = swift_release(v22).n128_u64[0];
  }
  return result;
}

uint64_t sub_10032FA34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t Strong;
  uint64_t result;
  uint64_t v12;
  uint64_t ObjectType;
  __n128 v14;
  _BYTE v15[24];
  _BYTE v16[24];

  v5 = type metadata accessor for CFIRange(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = &v15[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = a1 + 16;
  swift_beginAccess(v9, v16, 0, 0);
  Strong = swift_weakLoadStrong(v9);
  if (Strong)
  {
    *(_BYTE *)(Strong + 32) = 0;
    swift_release(Strong);
  }
  swift_beginAccess(v9, v15, 0, 0);
  result = swift_weakLoadStrong(v9);
  if (result)
  {
    v12 = result;
    ObjectType = swift_getObjectType();
    dispatch thunk of LocationProviding.approximateVisibleCFIRange.getter(ObjectType, a3);
    sub_100330374((uint64_t)v8);
    v14 = swift_release(v12);
    return (*(uint64_t (**)(_BYTE *, uint64_t, __n128))(v6 + 8))(v8, v5, v14);
  }
  return result;
}

double sub_10032FB34(unsigned __int8 *a1, uint64_t a2)
{
  int v2;
  uint64_t v3;
  uint64_t Strong;
  double result;
  uint64_t v6;
  _BYTE v7[24];

  v2 = *a1;
  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v7, 0, 0);
  Strong = swift_weakLoadStrong(v3);
  if (Strong)
  {
    v6 = Strong;
    if ((*(_BYTE *)(Strong + 32) & 1) != 0 || (*(_BYTE *)(Strong + 33) & 1) != 0 || v2 != 1)
    {
      *(_BYTE *)(Strong + 33) = 0;
    }
    else
    {
      sub_1003312DC(8);
      *(_BYTE *)(v6 + 33) = 1;
    }
    *(_QWORD *)&result = swift_release(v6).n128_u64[0];
  }
  return result;
}

void sub_10032FBC0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t Strong;
  _QWORD *v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  os_log_type_t v25;
  uint8_t *v26;
  void (*v27)(_QWORD, _QWORD);
  unint64_t v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint8_t *v38;
  uint8_t *v39;
  void (*v40)(_QWORD, _QWORD);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t aBlock[5];
  uint64_t v48;
  char v49[24];

  v3 = type metadata accessor for DispatchWorkItemFlags(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DispatchQoS(0);
  v45 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v9 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = type metadata accessor for DispatchTime(0);
  v10 = *(_QWORD *)(v44 - 8);
  __chkstk_darwin(v44);
  v12 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v38 - v14;
  a2 += 16;
  swift_beginAccess(a2, v49, 0, 0);
  Strong = swift_weakLoadStrong(a2);
  if (Strong)
  {
    v17 = (_QWORD *)Strong;
    if ((*(_BYTE *)(Strong + 34) & 1) != 0)
    {
      swift_release(Strong);
    }
    else
    {
      v41 = v7;
      v42 = v4;
      v43 = v3;
      v18 = swift_retain_n(Strong, 2);
      v19 = Logger.logObject.getter(v18);
      v20 = static os_log_type_t.default.getter(v19);
      if (os_log_type_enabled(v19, v20))
      {
        v21 = (uint8_t *)swift_slowAlloc(12, -1);
        v40 = (void (*)(_QWORD, _QWORD))swift_slowAlloc(32, -1);
        aBlock[0] = (uint64_t)v40;
        v39 = v21;
        *(_DWORD *)v21 = 136315138;
        v38 = v21 + 4;
        v22 = _typeName(_:qualified:)(*v17, 0);
        v24 = v23;
        v46 = sub_100040F58(v22, v23, aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v46, aBlock, v38, v21 + 12);
        swift_release_n(v17, 2);
        swift_bridgeObjectRelease(v24);
        v25 = v20;
        v26 = v39;
        _os_log_impl((void *)&_mh_execute_header, v19, v25, "%s milestone BookEnd", v39, 0xCu);
        v27 = v40;
        swift_arrayDestroy(v40, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v27, -1, -1);
        swift_slowDealloc(v26, -1, -1);
      }
      else
      {
        swift_release_n(v17, 2);
      }

      sub_1003312DC(2);
      v28 = sub_100059BB4();
      v29 = (void *)static OS_dispatch_queue.main.getter(v28);
      static DispatchTime.now()(v29);
      + infix(_:_:)(v12, 2.0);
      v40 = *(void (**)(_QWORD, _QWORD))(v10 + 8);
      v30 = v44;
      v40(v12, v44);
      v31 = swift_allocObject(&unk_1008FE000, 24, 7);
      swift_weakInit(v31 + 16, v17);
      aBlock[4] = (uint64_t)sub_1003319C0;
      v48 = v31;
      aBlock[0] = (uint64_t)_NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = (uint64_t)sub_1000147F0;
      aBlock[3] = (uint64_t)&unk_1008FE018;
      v32 = _Block_copy(aBlock);
      swift_release(v48);
      static DispatchQoS.unspecified.getter(v33);
      aBlock[0] = (uint64_t)_swiftEmptyArrayStorage;
      v34 = sub_100008DB0((unint64_t *)&qword_1009D48E0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
      v35 = sub_10004CFD4((uint64_t *)&unk_1009DB460);
      v36 = sub_100065324();
      v37 = v43;
      dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v35, v36, v43, v34);
      OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v15, v9, v6, v32);
      _Block_release(v32);
      swift_release(v17);

      (*(void (**)(char *, uint64_t))(v42 + 8))(v6, v37);
      (*(void (**)(char *, uint64_t))(v45 + 8))(v9, v41);
      v40(v15, v30);
    }
  }
}

uint64_t sub_10032FFDC(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  _BYTE v3[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v3, 0, 0);
  result = swift_weakLoadStrong(v1);
  if (result)
  {
    *(_BYTE *)(result + 34) = 0;
    return swift_release(result);
  }
  return result;
}

double sub_100330028(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  double result;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE v16[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v16, 0, 0);
  Strong = swift_weakLoadStrong(v2);
  if (Strong)
  {
    v5 = Strong;
    if ((*(_BYTE *)(Strong + 34) & 1) == 0)
    {
      v6 = swift_retain_n(Strong, 2);
      v7 = Logger.logObject.getter(v6);
      v8 = static os_log_type_t.default.getter(v7);
      if (os_log_type_enabled(v7, v8))
      {
        v9 = (uint8_t *)swift_slowAlloc(12, -1);
        v10 = swift_slowAlloc(32, -1);
        v15 = v10;
        *(_DWORD *)v9 = 136315138;
        v11 = _typeName(_:qualified:)(*(_QWORD *)v5, 0);
        v13 = v12;
        v14 = sub_100040F58(v11, v12, &v15);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v14, &v15, v9 + 4, v9 + 12);
        swift_release_n(v5, 2);
        swift_bridgeObjectRelease(v13);
        _os_log_impl((void *)&_mh_execute_header, v7, v8, "%s milestone BookAfterEnd", v9, 0xCu);
        swift_arrayDestroy(v10, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v10, -1, -1);
        swift_slowDealloc(v9, -1, -1);
      }
      else
      {
        swift_release_n(v5, 2);
      }

      sub_1003312DC(3);
      *(_BYTE *)(v5 + 34) = 1;
    }
    *(_QWORD *)&result = swift_release(v5).n128_u64[0];
  }
  return result;
}

double sub_1003301D8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  double result;
  _QWORD *v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE v16[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v16, 0, 0);
  Strong = swift_weakLoadStrong(v2);
  if (Strong)
  {
    v5 = (_QWORD *)Strong;
    v6 = swift_retain_n(Strong, 2);
    v7 = Logger.logObject.getter(v6);
    v8 = static os_log_type_t.default.getter(v7);
    if (os_log_type_enabled(v7, v8))
    {
      v9 = (uint8_t *)swift_slowAlloc(12, -1);
      v10 = swift_slowAlloc(32, -1);
      v15 = v10;
      *(_DWORD *)v9 = 136315138;
      v11 = _typeName(_:qualified:)(*v5, 0);
      v13 = v12;
      v14 = sub_100040F58(v11, v12, &v15);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v14, &v15, v9 + 4, v9 + 12);
      swift_release_n(v5, 2);
      swift_bridgeObjectRelease(v13);
      _os_log_impl((void *)&_mh_execute_header, v7, v8, "%s milestone MoveToNextPage", v9, 0xCu);
      swift_arrayDestroy(v10, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v10, -1, -1);
      swift_slowDealloc(v9, -1, -1);
    }
    else
    {
      swift_release_n(v5, 2);
    }

    sub_1003312DC(9);
    *(_QWORD *)&result = swift_release(v5).n128_u64[0];
  }
  return result;
}

void sub_100330374(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  NSObject *v16;
  Class isa;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t Strong;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  uint64_t v35;
  NSObject *v36;
  __n128 v37;
  void (*v38)(char *, uint64_t, NSObject *);
  uint64_t v39;
  void (*v40)(char *, uint64_t, NSObject *);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  __n128 v47;
  char *v48;
  void (*v49)(char *, NSObject *, __n128);
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  void (*v53)(char *, NSObject *);
  uint64_t v54;
  unsigned int (*v55)(uint64_t, uint64_t, NSObject *);
  void (*v56)(char *, NSObject *);
  uint64_t v57;
  os_log_type_t v58;
  uint8_t *v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  unint64_t v63;
  void (*v64)(char *, NSObject *);
  _QWORD *v65;
  uint64_t v66;
  NSObject *v67;
  os_log_type_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  NSObject *v73;
  unint64_t v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  unint64_t v79;
  __n128 v80;
  __n128 v81;
  unsigned int v82;
  void (*v83)(char *, NSObject *);
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  NSObject *v88;
  os_log_type_t v89;
  uint64_t v90;
  void *v91;
  void *v92;
  uint64_t v93;
  NSObject *v94;
  unint64_t v95;
  unint64_t v96;
  uint64_t v97;
  uint64_t v98;
  unint64_t v99;
  unint64_t v100;
  __n128 v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  id v106;
  NSString v107;
  double v108;
  id v109;
  id v110;
  uint64_t v111;
  uint64_t v112;
  id v113;
  NSString v114;
  double v115;
  id v116;
  id v117;
  void *v118;
  id v119;
  id v120;
  id v121;
  id v122;
  uint64_t v123;
  NSObject *v124;
  uint64_t v125;
  uint64_t v126;
  void *v127;
  void *v128;
  id v129;
  id v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  char *v134;
  char v135;
  uint64_t v136;
  NSObject *v137;
  os_log_type_t v138;
  uint8_t *v139;
  void *v140;
  uint64_t v141;
  unint64_t v142;
  unint64_t v143;
  id v144;
  uint64_t v145;
  uint64_t v146;
  id v147;
  uint64_t v148;
  _QWORD *v149;
  uint64_t v150;
  NSObject *v151;
  os_log_type_t v152;
  uint64_t v153;
  void *v154;
  uint64_t v155;
  unint64_t v156;
  unint64_t v157;
  uint64_t v158;
  uint64_t v159;
  unint64_t v160;
  unint64_t v161;
  _QWORD v162[2];
  void (*v163)(char *, _QWORD, uint64_t, NSObject *);
  uint64_t v164;
  char *v165;
  _QWORD *v166;
  char *v167;
  char *v168;
  void (*v169)(char *, uint64_t, NSObject *);
  void (*v170)(char *, NSObject *);
  uint64_t v171;
  uint64_t v172;
  _QWORD *v173;
  NSObject *v174;
  uint64_t v175;
  uint64_t v176;
  id v177;
  _BYTE v178[16];
  uint64_t v179;
  uint64_t v180;

  v2 = v1;
  v4 = sub_10004CFD4((uint64_t *)&unk_1009DB650);
  __chkstk_darwin(v4);
  v170 = (void (*)(char *, NSObject *))((char *)v162 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = sub_10004CFD4(&qword_1009E8A40);
  __chkstk_darwin(v6);
  v8 = (char *)v162 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v167 = (char *)v162 - v10;
  __chkstk_darwin(v11);
  v169 = (void (*)(char *, uint64_t, NSObject *))((char *)v162 - v12);
  __chkstk_darwin(v13);
  v15 = (char *)v162 - v14;
  v16 = type metadata accessor for CFIRange(0);
  isa = v16[-1].isa;
  __chkstk_darwin(v16);
  v19 = (char *)v162 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v168 = (char *)v162 - v21;
  __chkstk_darwin(v22);
  v24 = (char *)v162 - v23;
  __chkstk_darwin(v25);
  v27 = (char *)v162 - v26;
  v166 = v2 + 3;
  Strong = swift_unknownObjectWeakLoadStrong(v2 + 3);
  if (Strong)
  {
    v165 = v8;
    v172 = Strong;
    v173 = v2;
    v29 = a1;
    v30 = CFIRange.start.getter(Strong);
    v174 = v16;
    v32 = v31;
    v179 = v30;
    v180 = v31;
    v33 = sub_1001F15BC();
    v34 = Collection.isNotEmpty.getter(&type metadata for String, v33);
    v35 = v32;
    v36 = v174;
    v37 = swift_bridgeObjectRelease(v35);
    v38 = (void (*)(char *, uint64_t, NSObject *))*((_QWORD *)isa + 2);
    v171 = v29;
    v39 = v29;
    v40 = v38;
    v41 = ((uint64_t (*)(char *, uint64_t, NSObject *, __n128))v38)(v27, v39, v36, v37);
    if ((v34 & 1) != 0)
    {
      v42 = CFIRange.end.getter(v41);
      v44 = v43;
      v179 = v42;
      v180 = v43;
      v45 = Collection.isNotEmpty.getter(&type metadata for String, v33);
      v46 = v44;
      v36 = v174;
      v47 = swift_bridgeObjectRelease(v46);
      v48 = v27;
      v49 = (void (*)(char *, NSObject *, __n128))*((_QWORD *)isa + 1);
      v49(v48, v36, v47);
      if ((v45 & 1) != 0)
      {
        v50 = v173;
        if (*((_BYTE *)v173 + 32) != 1 && *((_BYTE *)v173 + 33) != 1)
        {
          v40(v15, v171, v36);
          v163 = (void (*)(char *, _QWORD, uint64_t, NSObject *))*((_QWORD *)isa + 7);
          v163(v15, 0, 1, v36);
          v51 = (uint64_t)v50 + OBJC_IVAR____TtC5Books29EndOfBookExperienceController_lastEmittedCFIRange;
          swift_beginAccess((char *)v50 + OBJC_IVAR____TtC5Books29EndOfBookExperienceController_lastEmittedCFIRange, &v179, 0, 0);
          v52 = *(int *)(v4 + 48);
          v53 = v170;
          v54 = (uint64_t)v170 + v52;
          sub_10033190C((uint64_t)v15, (uint64_t)v170);
          v164 = v51;
          sub_10033190C(v51, v54);
          v55 = (unsigned int (*)(uint64_t, uint64_t, NSObject *))*((_QWORD *)isa + 6);
          if (v55((uint64_t)v53, 1, v36) == 1)
          {
            sub_100010960((uint64_t)v15, &qword_1009E8A40);
            v56 = (void (*)(char *, NSObject *))v49;
            if (v55(v54, 1, v36) == 1)
            {
              sub_100010960((uint64_t)v170, &qword_1009E8A40);
LABEL_31:
              v136 = swift_retain_n(v50, 2);
              v137 = Logger.logObject.getter(v136);
              v138 = static os_log_type_t.default.getter(v137);
              if (os_log_type_enabled(v137, v138))
              {
                v139 = (uint8_t *)swift_slowAlloc(12, -1);
                v140 = (void *)swift_slowAlloc(32, -1);
                v177 = v140;
                *(_DWORD *)v139 = 136315138;
                v141 = _typeName(_:qualified:)(*v50, 0);
                v143 = v142;
                v175 = sub_100040F58(v141, v142, (uint64_t *)&v177);
                UnsafeMutableRawBufferPointer.copyMemory(from:)(&v175, &v176, v139 + 4, v139 + 12);
                swift_release_n(v50, 2);
                swift_bridgeObjectRelease(v143);
                _os_log_impl((void *)&_mh_execute_header, v137, v138, "%s skipping emitSectionChanged() because visible CFI range has not changed", v139, 0xCu);
                swift_arrayDestroy(v140, 1, (char *)&type metadata for Any + 8);
                swift_slowDealloc(v140, -1, -1);
                swift_slowDealloc(v139, -1, -1);
              }
              else
              {
                swift_release_n(v50, 2);
              }

              goto LABEL_17;
            }
          }
          else
          {
            sub_10033190C((uint64_t)v53, (uint64_t)v169);
            v82 = v55(v54, 1, v36);
            v83 = v53;
            v56 = (void (*)(char *, NSObject *))v49;
            if (v82 != 1)
            {
              v132 = (uint64_t)v83;
              (*((void (**)(char *, uint64_t, NSObject *))isa + 4))(v24, v54, v36);
              v133 = sub_100008DB0(&qword_1009DB670, (uint64_t (*)(uint64_t))&type metadata accessor for CFIRange, (uint64_t)&protocol conformance descriptor for CFIRange);
              v134 = (char *)v169;
              v135 = dispatch thunk of static Equatable.== infix(_:_:)(v169, v24, v36, v133);
              v56(v24, v36);
              sub_100010960((uint64_t)v15, &qword_1009E8A40);
              v56(v134, v36);
              sub_100010960(v132, &qword_1009E8A40);
              v84 = v171;
              if ((v135 & 1) != 0)
                goto LABEL_31;
LABEL_22:
              v85 = (char *)v50 + OBJC_IVAR____TtC5Books29EndOfBookExperienceController_log;
              v86 = v168;
              v169 = v40;
              v40(v168, v84, v36);
              v87 = swift_retain_n(v50, 2);
              v88 = Logger.logObject.getter(v87);
              v89 = static os_log_type_t.default.getter(v88);
              if (os_log_type_enabled(v88, v89))
              {
                v90 = swift_slowAlloc(22, -1);
                v91 = (void *)swift_slowAlloc(64, -1);
                v162[1] = v85;
                v92 = v91;
                v177 = v91;
                *(_DWORD *)v90 = 136315394;
                v93 = _typeName(_:qualified:)(*v50, 0);
                v94 = v36;
                v96 = v95;
                v175 = sub_100040F58(v93, v95, (uint64_t *)&v177);
                v170 = v56;
                UnsafeMutableRawBufferPointer.copyMemory(from:)(&v175, &v176, v90 + 4, v90 + 12);
                swift_release_n(v50, 2);
                swift_bridgeObjectRelease(v96);
                *(_WORD *)(v90 + 12) = 2080;
                v97 = sub_100008DB0((unint64_t *)&unk_1009DB660, (uint64_t (*)(uint64_t))&type metadata accessor for CFIRange, (uint64_t)&protocol conformance descriptor for CFIRange);
                v98 = dispatch thunk of CustomStringConvertible.description.getter(v94, v97);
                v100 = v99;
                v175 = sub_100040F58(v98, v99, (uint64_t *)&v177);
                UnsafeMutableRawBufferPointer.copyMemory(from:)(&v175, &v176, v90 + 14, v90 + 22);
                v101 = swift_bridgeObjectRelease(v100);
                ((void (*)(char *, NSObject *, __n128))v170)(v86, v94, v101);
                _os_log_impl((void *)&_mh_execute_header, v88, v89, "%s section changed %s", (uint8_t *)v90, 0x16u);
                swift_arrayDestroy(v92, 2, (char *)&type metadata for Any + 8);
                swift_slowDealloc(v92, -1, -1);
                swift_slowDealloc(v90, -1, -1);

              }
              else
              {
                swift_release_n(v50, 2);

                v102 = ((uint64_t (*)(char *, NSObject *))v56)(v86, v36);
              }
              v103 = v171;
              CFIRange.start.getter(v102);
              v105 = v104;
              v106 = objc_allocWithZone((Class)BCCFI);
              v107 = String._bridgeToObjectiveC()();
              *(_QWORD *)&v108 = swift_bridgeObjectRelease(v105).n128_u64[0];
              v177 = 0;
              v109 = objc_msgSend(v106, "initWithCFI:error:", v107, &v177, v108);

              v110 = v177;
              if (v109)
              {
                CFIRange.end.getter(v177);
                v112 = v111;
                v113 = objc_allocWithZone((Class)BCCFI);
                v114 = String._bridgeToObjectiveC()();
                *(_QWORD *)&v115 = swift_bridgeObjectRelease(v112).n128_u64[0];
                v177 = 0;
                v116 = objc_msgSend(v113, "initWithCFI:error:", v114, &v177, v115);

                v117 = v177;
                if (v116)
                {
                  v118 = (void *)objc_opt_self(BCEPubBookPosition);
                  v119 = v117;
                  v120 = objc_msgSend(v118, "positionWithCFI:", v109);
                  v121 = objc_msgSend(v118, "positionWithCFI:", v116);
                  v122 = objc_msgSend((id)objc_opt_self(BCBookSection), "bookSectionWithStartPosition:endPosition:", v120, v121);
                  v123 = (uint64_t)v167;
                  v124 = v174;
                  v169(v167, v103, v174);
                  v163((char *)v123, 0, 1, v124);
                  v125 = (uint64_t)v165;
                  sub_100331954(v123, (uint64_t)v165);
                  v126 = v164;
                  swift_beginAccess(v164, &v177, 33, 0);
                  sub_1003318C4(v125, v126);
                  swift_endAccess(&v177);
                  v127 = (void *)swift_unknownObjectWeakLoadStrong(v166);
                  if (v127
                    && (v128 = v127,
                        v129 = objc_msgSend(v127, "bookPositionProcessor"),
                        swift_unknownObjectRelease(v128),
                        v129))
                  {
                    v130 = v122;
                    v131 = v172;
                    objc_msgSend(v129, "emitter:bookSectionChanged:", v172, v130);
                    swift_unknownObjectRelease(v131);
                    swift_unknownObjectRelease(v129);

                  }
                  else
                  {

                    swift_unknownObjectRelease(v172);
                  }
                  return;
                }
                v147 = v177;
                v145 = _convertNSErrorToError(_:)(v117);

                swift_willThrow(v148);
              }
              else
              {
                v144 = v177;
                v145 = _convertNSErrorToError(_:)(v110);

                swift_willThrow(v146);
              }
              v149 = v173;
              swift_retain(v173);
              swift_errorRetain(v145);
              swift_retain(v149);
              v150 = swift_errorRetain(v145);
              v151 = Logger.logObject.getter(v150);
              v152 = static os_log_type_t.error.getter(v151);
              if (os_log_type_enabled(v151, v152))
              {
                v153 = swift_slowAlloc(22, -1);
                v154 = (void *)swift_slowAlloc(64, -1);
                v177 = v154;
                *(_DWORD *)v153 = 136315394;
                v155 = _typeName(_:qualified:)(*v149, 0);
                v157 = v156;
                v175 = sub_100040F58(v155, v156, (uint64_t *)&v177);
                UnsafeMutableRawBufferPointer.copyMemory(from:)(&v175, &v176, v153 + 4, v153 + 12);
                swift_release_n(v149, 2);
                swift_bridgeObjectRelease(v157);
                *(_WORD *)(v153 + 12) = 2080;
                v175 = v145;
                swift_errorRetain(v145);
                v158 = sub_10004CFD4((uint64_t *)&unk_1009D3170);
                v159 = String.init<A>(describing:)(&v175, v158);
                v161 = v160;
                v175 = sub_100040F58(v159, v160, (uint64_t *)&v177);
                UnsafeMutableRawBufferPointer.copyMemory(from:)(&v175, &v176, v153 + 14, v153 + 22);
                swift_bridgeObjectRelease(v161);
                swift_errorRelease(v145);
                swift_errorRelease(v145);
                _os_log_impl((void *)&_mh_execute_header, v151, v152, "%s error emitting section change: %s", (uint8_t *)v153, 0x16u);
                swift_arrayDestroy(v154, 2, (char *)&type metadata for Any + 8);
                swift_slowDealloc(v154, -1, -1);
                swift_slowDealloc(v153, -1, -1);
                swift_unknownObjectRelease(v172);
                swift_errorRelease(v145);

              }
              else
              {
                swift_unknownObjectRelease(v172);
                swift_errorRelease(v145);
                swift_release_n(v149, 2);

                swift_errorRelease(v145);
                swift_errorRelease(v145);
              }
              return;
            }
            sub_100010960((uint64_t)v15, &qword_1009E8A40);
            ((void (*)(void (*)(char *, uint64_t, NSObject *), NSObject *))v49)(v169, v36);
          }
          sub_100010960((uint64_t)v170, (uint64_t *)&unk_1009DB650);
          v84 = v171;
          goto LABEL_22;
        }
LABEL_17:
        swift_unknownObjectRelease(v172);
        return;
      }
      v65 = v173;
      v64 = (void (*)(char *, NSObject *))v49;
    }
    else
    {
      v64 = (void (*)(char *, NSObject *))*((_QWORD *)isa + 1);
      v64(v27, v36);
      v65 = v173;
    }
    v40(v19, v171, v36);
    v66 = swift_retain_n(v65, 2);
    v67 = Logger.logObject.getter(v66);
    v68 = static os_log_type_t.error.getter(v67);
    if (!os_log_type_enabled(v67, v68))
    {
      swift_release_n(v65, 2);

      v81 = swift_unknownObjectRelease(v172);
      ((void (*)(char *, NSObject *, __n128))v64)(v19, v36, v81);
      return;
    }
    v69 = swift_slowAlloc(22, -1);
    v70 = swift_slowAlloc(64, -1);
    v170 = v64;
    v71 = v70;
    v179 = v70;
    *(_DWORD *)v69 = 136315394;
    v72 = _typeName(_:qualified:)(*v65, 0);
    v73 = v36;
    v75 = v74;
    v177 = (id)sub_100040F58(v72, v74, &v179);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v177, v178, v69 + 4, v69 + 12);
    swift_release_n(v65, 2);
    swift_bridgeObjectRelease(v75);
    *(_WORD *)(v69 + 12) = 2080;
    v76 = sub_100008DB0((unint64_t *)&unk_1009DB660, (uint64_t (*)(uint64_t))&type metadata accessor for CFIRange, (uint64_t)&protocol conformance descriptor for CFIRange);
    v77 = dispatch thunk of CustomStringConvertible.description.getter(v73, v76);
    v79 = v78;
    v177 = (id)sub_100040F58(v77, v78, &v179);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v177, v178, v69 + 14, v69 + 22);
    v80 = swift_bridgeObjectRelease(v79);
    ((void (*)(char *, NSObject *, __n128))v170)(v19, v73, v80);
    _os_log_impl((void *)&_mh_execute_header, v67, v68, "%s emitSectionChanged failed because cfi range was empty %s", (uint8_t *)v69, 0x16u);
    swift_arrayDestroy(v71, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v71, -1, -1);
    swift_slowDealloc(v69, -1, -1);

    goto LABEL_17;
  }
  v57 = swift_retain_n(v2, 2);
  v174 = Logger.logObject.getter(v57);
  v58 = static os_log_type_t.error.getter(v174);
  if (os_log_type_enabled(v174, v58))
  {
    v59 = (uint8_t *)swift_slowAlloc(12, -1);
    v60 = swift_slowAlloc(32, -1);
    v179 = v60;
    *(_DWORD *)v59 = 136315138;
    v61 = _typeName(_:qualified:)(*v2, 0);
    v63 = v62;
    v177 = (id)sub_100040F58(v61, v62, &v179);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v177, v178, v59 + 4, v59 + 12);
    swift_release_n(v2, 2);
    swift_bridgeObjectRelease(v63);
    swift_arrayDestroy(v60, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v60, -1, -1);
    swift_slowDealloc(v59, -1, -1);
  }
  else
  {
    swift_release_n(v2, 2);
  }

}

void sub_1003312DC(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  _QWORD *v7;
  uint64_t Strong;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  NSObject *v24;
  uint64_t v25[3];
  uint64_t v26;
  uint64_t v27;

  v2 = v1;
  v4 = sub_10004CFD4(&qword_1009E8A40);
  __chkstk_darwin(v4);
  v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = v2 + 3;
  Strong = swift_unknownObjectWeakLoadStrong(v2 + 3);
  if (Strong)
  {
    v9 = Strong;
    v10 = type metadata accessor for CFIRange(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v6, 1, 1, v10);
    v11 = (uint64_t)v2 + OBJC_IVAR____TtC5Books29EndOfBookExperienceController_lastEmittedCFIRange;
    swift_beginAccess(v11, v25, 33, 0);
    sub_1003318C4((uint64_t)v6, v11);
    swift_endAccess(v25);
    v12 = (void *)swift_unknownObjectWeakLoadStrong(v7);
    if (v12
      && (v13 = v12,
          v14 = objc_msgSend(v12, "bookPositionProcessor"),
          swift_unknownObjectRelease(v13),
          v14))
    {
      objc_msgSend(v14, "emitter:bookMilestoneReached:", v9, a1);
      swift_unknownObjectRelease(v9);
      v15 = (uint64_t)v14;
    }
    else
    {
      v15 = v9;
    }
    swift_unknownObjectRelease(v15);
  }
  else
  {
    v16 = swift_retain_n(v2, 2);
    v24 = Logger.logObject.getter(v16);
    v17 = static os_log_type_t.error.getter(v24);
    if (os_log_type_enabled(v24, v17))
    {
      v18 = (uint8_t *)swift_slowAlloc(12, -1);
      v19 = swift_slowAlloc(32, -1);
      v25[0] = v19;
      *(_DWORD *)v18 = 136315138;
      v20 = _typeName(_:qualified:)(*v2, 0);
      v22 = v21;
      v26 = sub_100040F58(v20, v21, v25);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v26, &v27, v18 + 4, v18 + 12);
      swift_release_n(v2, 2);
      swift_bridgeObjectRelease(v22);
      swift_arrayDestroy(v19, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v19, -1, -1);
      swift_slowDealloc(v18, -1, -1);

    }
    else
    {
      swift_release_n(v2, 2);

    }
  }
}

void sub_100331574()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = v0;
  v2 = swift_retain_n(v0, 2);
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.default.getter(v3);
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc(12, -1);
    v6 = swift_slowAlloc(32, -1);
    v11 = v6;
    *(_DWORD *)v5 = 136315138;
    v7 = _typeName(_:qualified:)(*v1, 0);
    v9 = v8;
    v10 = sub_100040F58(v7, v8, &v11);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v10, &v11, v5 + 4, v5 + 12);
    swift_release_n(v1, 2);
    swift_bridgeObjectRelease(v9);
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "%s milestone BookClosing", v5, 0xCu);
    swift_arrayDestroy(v6, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v6, -1, -1);
    swift_slowDealloc(v5, -1, -1);
  }
  else
  {
    swift_release_n(v1, 2);
  }

  sub_1003312DC(10);
}

uint64_t sub_1003316E8()
{
  id *v0;
  char *v1;
  uint64_t v2;

  sub_1001FE9A0((uint64_t)(v0 + 3));
  sub_100010960((uint64_t)v0 + OBJC_IVAR____TtC5Books29EndOfBookExperienceController_lastEmittedCFIRange, &qword_1009E8A40);
  swift_bridgeObjectRelease(*(id *)((char *)v0 + OBJC_IVAR____TtC5Books29EndOfBookExperienceController_cancellables));
  v1 = (char *)v0 + OBJC_IVAR____TtC5Books29EndOfBookExperienceController_log;
  v2 = type metadata accessor for Logger(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance(v0, *((unsigned int *)*v0 + 12), *((unsigned __int16 *)*v0 + 26));
}

uint64_t sub_100331770()
{
  return type metadata accessor for EndOfBookExperienceController(0);
}

uint64_t type metadata accessor for EndOfBookExperienceController(uint64_t a1)
{
  uint64_t result;

  result = qword_1009DB4C0;
  if (!qword_1009DB4C0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for EndOfBookExperienceController);
  return result;
}

void sub_1003317B4(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[8];

  v6[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v6[1] = "\b";
  v6[2] = &unk_10071BA18;
  v6[3] = &unk_10071BA18;
  v6[4] = &unk_10071BA18;
  sub_100331870(319);
  if (v3 <= 0x3F)
  {
    v6[5] = *(_QWORD *)(v2 - 8) + 64;
    v6[6] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4 = type metadata accessor for Logger(319);
    if (v5 <= 0x3F)
    {
      v6[7] = *(_QWORD *)(v4 - 8) + 64;
      swift_updateClassMetadata2(a1, 256, 8, v6, a1 + 80);
    }
  }
}

void sub_100331870(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1009DB4D0)
  {
    v2 = type metadata accessor for CFIRange(255);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1009DB4D0);
  }
}

uint64_t sub_1003318C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10004CFD4(&qword_1009E8A40);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_10033190C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10004CFD4(&qword_1009E8A40);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100331954(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10004CFD4(&qword_1009E8A40);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10033199C()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1003319C0()
{
  uint64_t v0;

  return sub_10032FFDC(v0);
}

uint64_t sub_1003319C8()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1003319F4()
{
  uint64_t *v0;

  return sub_10032FA34(v0[2], v0[3], v0[4]);
}

uint64_t *sub_100331A08(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v5 = *a2;
  *a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = (uint64_t *)(v5 + ((v4 + 16) & ~(unint64_t)v4));
  }
  else
  {
    v8 = *(int *)(a3 + 20);
    v9 = (uint64_t *)((char *)a1 + v8);
    v10 = (uint64_t *)((char *)a2 + v8);
    swift_retain(v5);
    v11 = sub_10004CFD4((uint64_t *)&unk_1009D8200);
    if (swift_getEnumCaseMultiPayload(v10, v11) == 1)
    {
      v12 = type metadata accessor for ColorScheme(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v9, v10, v12);
      v13 = 1;
    }
    else
    {
      v14 = *v10;
      *v9 = *v10;
      swift_retain(v14);
      v13 = 0;
    }
    swift_storeEnumTagMultiPayload(v9, v11, v13);
    v15 = *(int *)(a3 + 24);
    v16 = (uint64_t *)((char *)a1 + v15);
    v17 = (uint64_t *)((char *)a2 + v15);
    v5 = v17[1];
    *v16 = *v17;
    v16[1] = v5;
  }
  swift_retain(v5);
  return a1;
}

double sub_100331AF8(_QWORD *a1, uint64_t a2)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  double result;

  swift_release(*a1);
  v4 = (_QWORD *)((char *)a1 + *(int *)(a2 + 20));
  v5 = sub_10004CFD4((uint64_t *)&unk_1009D8200);
  if (swift_getEnumCaseMultiPayload(v4, v5) == 1)
  {
    v6 = type metadata accessor for ColorScheme(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v4, v6);
  }
  else
  {
    swift_release(*v4);
  }
  *(_QWORD *)&result = swift_release(*(_QWORD *)((char *)a1 + *(int *)(a2 + 24) + 8)).n128_u64[0];
  return result;
}

uint64_t *sub_100331B84(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;

  v6 = *a2;
  *a1 = *a2;
  v7 = *(int *)(a3 + 20);
  v8 = (uint64_t *)((char *)a1 + v7);
  v9 = (uint64_t *)((char *)a2 + v7);
  swift_retain(v6);
  v10 = sub_10004CFD4((uint64_t *)&unk_1009D8200);
  if (swift_getEnumCaseMultiPayload(v9, v10) == 1)
  {
    v11 = type metadata accessor for ColorScheme(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v8, v9, v11);
    v12 = 1;
  }
  else
  {
    v13 = *v9;
    *v8 = *v9;
    swift_retain(v13);
    v12 = 0;
  }
  swift_storeEnumTagMultiPayload(v8, v10, v12);
  v14 = *(int *)(a3 + 24);
  v15 = (uint64_t *)((char *)a1 + v14);
  v16 = (uint64_t *)((char *)a2 + v14);
  v17 = v16[1];
  *v15 = *v16;
  v15[1] = v17;
  swift_retain(v17);
  return a1;
}

uint64_t *sub_100331C54(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;

  v6 = *a2;
  v7 = *a1;
  *a1 = *a2;
  swift_retain(v6);
  swift_release(v7);
  if (a1 != a2)
  {
    v8 = *(int *)(a3 + 20);
    v9 = (uint64_t *)((char *)a1 + v8);
    v10 = (uint64_t *)((char *)a2 + v8);
    sub_100010960((uint64_t)a1 + v8, (uint64_t *)&unk_1009D8200);
    v11 = sub_10004CFD4((uint64_t *)&unk_1009D8200);
    if (swift_getEnumCaseMultiPayload(v10, v11) == 1)
    {
      v12 = type metadata accessor for ColorScheme(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v9, v10, v12);
      v13 = 1;
    }
    else
    {
      v14 = *v10;
      *v9 = *v10;
      swift_retain(v14);
      v13 = 0;
    }
    swift_storeEnumTagMultiPayload(v9, v11, v13);
  }
  v15 = *(int *)(a3 + 24);
  v16 = (uint64_t *)((char *)a1 + v15);
  v17 = (uint64_t *)((char *)a2 + v15);
  *v16 = *v17;
  v18 = v17[1];
  v19 = v16[1];
  v16[1] = v18;
  swift_retain(v18);
  swift_release(v19);
  return a1;
}

_QWORD *sub_100331D5C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_10004CFD4((uint64_t *)&unk_1009D8200);
  if (swift_getEnumCaseMultiPayload(v8, v9) == 1)
  {
    v10 = type metadata accessor for ColorScheme(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v7, v8, v10);
    swift_storeEnumTagMultiPayload(v7, v9, 1);
  }
  else
  {
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  *(_OWORD *)((char *)a1 + *(int *)(a3 + 24)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t *sub_100331E20(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v6 = *a1;
  *a1 = *a2;
  swift_release(v6);
  if (a1 != a2)
  {
    v7 = *(int *)(a3 + 20);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    sub_100010960((uint64_t)a1 + v7, (uint64_t *)&unk_1009D8200);
    v10 = sub_10004CFD4((uint64_t *)&unk_1009D8200);
    if (swift_getEnumCaseMultiPayload(v9, v10) == 1)
    {
      v11 = type metadata accessor for ColorScheme(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v8, v9, v11);
      swift_storeEnumTagMultiPayload(v8, v10, 1);
    }
    else
    {
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    }
  }
  v12 = *(int *)(a3 + 24);
  v13 = (uint64_t *)((char *)a1 + v12);
  v14 = (uint64_t *)((char *)a2 + v12);
  v16 = *v14;
  v15 = v14[1];
  v17 = v13[1];
  *v13 = v16;
  v13[1] = v15;
  swift_release(v17);
  return a1;
}

uint64_t sub_100331F14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100331F20);
}

uint64_t sub_100331F20(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_10004CFD4((uint64_t *)&unk_1009D8230);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 20)], a2, v8);
  }
}

uint64_t sub_100331FA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100331FAC);
}

char *sub_100331FAC(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = sub_10004CFD4((uint64_t *)&unk_1009D8230);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 20)], a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for SidebarAccountView(uint64_t a1)
{
  uint64_t result;

  result = qword_1009DB6D0;
  if (!qword_1009DB6D0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for SidebarAccountView);
  return result;
}

void sub_100332060(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[3];

  v4[0] = (char *)&value witness table for Builtin.NativeObject + 64;
  sub_100288A64(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(v2 - 8) + 64;
    v4[2] = &unk_10071BA58;
    swift_initStructMetadata(a1, 256, 3, v4, a1 + 16);
  }
}

id sub_1003320E0(uint64_t a1, void *a2)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  Class isa;
  uint64_t v9;

  v3 = objc_msgSend(objc_allocWithZone((Class)CNAvatarViewController), "init");
  objc_msgSend(v3, "setThreeDTouchEnabled:", 0);
  v4 = sub_10004CFD4((uint64_t *)&unk_1009D4750);
  v5 = swift_allocObject(v4, 40, 7);
  *(_OWORD *)(v5 + 16) = xmmword_1007118F0;
  *(_QWORD *)(v5 + 32) = a2;
  v9 = v5;
  specialized Array._endMutation()(v5);
  sub_100333FF8();
  v6 = a2;
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v3, "setContacts:", isa, swift_bridgeObjectRelease(v9).n128_f64[0]);

  return v3;
}

id sub_1003321B4(uint64_t a1)
{
  void **v1;

  return sub_1003320E0(a1, *v1);
}

void sub_1003321BC(void *a1)
{
  void **v1;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  Class isa;
  uint64_t v8;

  v3 = *v1;
  v4 = sub_10004CFD4((uint64_t *)&unk_1009D4750);
  v5 = swift_allocObject(v4, 40, 7);
  *(_OWORD *)(v5 + 16) = xmmword_1007118F0;
  *(_QWORD *)(v5 + 32) = v3;
  v8 = v5;
  specialized Array._endMutation()(v5);
  sub_100333FF8();
  v6 = v3;
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(a1, "setContacts:", isa, swift_bridgeObjectRelease(v8).n128_f64[0]);

}

uint64_t sub_100332268(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_100333FB4();
  return static UIViewControllerRepresentable._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_1003322B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_100333FB4();
  return static UIViewControllerRepresentable._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

void sub_100332308(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100333FB4();
  UIViewControllerRepresentable.body.getter(a1, v2);
  __break(1u);
}

uint64_t sub_10033232C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t ObjCClassFromMetadata;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  _BYTE v22[16];

  v0 = type metadata accessor for Locale(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = &v22[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v4);
  v6 = &v22[-v5];
  v7 = type metadata accessor for String.LocalizationValue(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = &v22[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v11);
  v13 = &v22[-v12];
  v14 = String.LocalizationValue.init(stringLiteral:)(0x746E756F636341, 0xE700000000000000);
  static Locale.current.getter(v14);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v8 + 16))(v10, v13, v7);
  v15 = type metadata accessor for BundleFinder();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v15);
  v17 = objc_msgSend((id)objc_opt_self(NSBundle), "bundleForClass:", ObjCClassFromMetadata);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v1 + 16))(v3, v6, v0);
  v18 = String.init(localized:table:bundle:locale:comment:)(v10, 0, 0, v17, v3, "Accessibility string for a button that shows the user information about their account", 85, 2);
  v20 = v19;
  (*(void (**)(_BYTE *, uint64_t))(v1 + 8))(v6, v0);
  result = (*(uint64_t (**)(_BYTE *, uint64_t))(v8 + 8))(v13, v7);
  qword_100A1E588 = v18;
  unk_100A1E590 = v20;
  byte_100A1E598 = 0;
  qword_100A1E5A0 = (uint64_t)_swiftEmptyArrayStorage;
  return result;
}

uint64_t sub_100332504@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t KeyPath;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  __n128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  __n128 v37;
  double v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  char *v51;
  unint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  char v92[16];
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  id v100;
  char v101;

  v2 = v1;
  v91 = a1;
  v85 = type metadata accessor for PlainButtonStyle(0);
  v86 = *(_QWORD *)(v85 - 8);
  __chkstk_darwin(v85);
  v82 = (char *)&v74 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for SidebarAccountView(0);
  v84 = *(_QWORD *)(v4 - 8);
  v5 = *(_QWORD *)(v84 + 64);
  __chkstk_darwin(v4);
  v6 = (char *)&v74 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v81 = sub_10004CFD4(&qword_1009DB730);
  v80 = *(_QWORD *)(v81 - 8);
  __chkstk_darwin(v81);
  v76 = (char *)&v74 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v78 = sub_10004CFD4(&qword_1009DB738);
  __chkstk_darwin(v78);
  v9 = (char *)&v74 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v88 = sub_10004CFD4(&qword_1009DB740);
  v87 = *(_QWORD *)(v88 - 8);
  __chkstk_darwin(v88);
  v79 = (char *)&v74 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v75 = sub_10004CFD4(&qword_1009DB748);
  __chkstk_darwin(v75);
  v12 = (char *)&v74 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v89 = sub_10004CFD4(&qword_1009DB750);
  __chkstk_darwin(v89);
  v90 = (char *)&v74 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v77 = v2 + *(int *)(v4 + 24);
  v14 = *(_QWORD *)(v77 + 8);
  KeyPath = swift_getKeyPath(&unk_10071BAD0);
  v16 = swift_getKeyPath(&unk_10071BAF8);
  v17 = swift_retain(v14);
  static Published.subscript.getter(&v98, v17, KeyPath, v16);
  swift_release(v14);
  swift_release(KeyPath);
  swift_release(v16);
  v18 = v98;
  v19 = v99;

  v98 = v18;
  v99 = v19;
  v20 = sub_1001F2108();
  v22 = Text.init<A>(_:)(&v98, &type metadata for String, v20, v21);
  v24 = v23;
  LOBYTE(v18) = v25;
  v27 = v26;
  sub_10002CD84(v2, (uint64_t)v6, type metadata accessor for SidebarAccountView);
  v28 = *(unsigned __int8 *)(v84 + 80);
  v29 = (v28 + 16) & ~v28;
  v30 = swift_allocObject(&unk_1008FE0A0, v29 + v5, v28 | 7);
  v31 = v30 + v29;
  v32 = v75;
  sub_100333AEC((uint64_t)v6, v31);
  v93 = v2;
  v94 = v22;
  v84 = v24;
  v95 = v24;
  v33 = v18 & 1;
  v96 = v18 & 1;
  v83 = v27;
  v97 = v27;
  v34 = sub_10004CFD4(&qword_1009DB758);
  v35 = sub_100030B34(&qword_1009DB760, &qword_1009DB758, (uint64_t)&protocol conformance descriptor for TupleView<A>);
  v36 = v76;
  Button.init(action:label:)(sub_100333B30, v30, sub_100333B90, v92, v34, v35);
  LOBYTE(v18) = static Edge.Set.all.getter(v37);
  v38 = EdgeInsets.init(_all:)(20.0);
  v40 = v39;
  v42 = v41;
  v44 = v43;
  v45 = v80;
  v46 = v36;
  v47 = v81;
  (*(void (**)(char *, char *, uint64_t))(v80 + 16))(v9, v36, v81);
  v48 = v78;
  v49 = &v9[*(int *)(v78 + 36)];
  *v49 = v18;
  *((double *)v49 + 1) = v38;
  *((_QWORD *)v49 + 2) = v40;
  *((_QWORD *)v49 + 3) = v42;
  *((_QWORD *)v49 + 4) = v44;
  v49[40] = 0;
  v50 = (*(uint64_t (**)(char *, uint64_t))(v45 + 8))(v46, v47);
  v51 = v82;
  PlainButtonStyle.init()(v50);
  v52 = sub_100333BAC();
  v53 = sub_100008DB0(&qword_1009D3838, (uint64_t (*)(uint64_t))&type metadata accessor for PlainButtonStyle, (uint64_t)&protocol conformance descriptor for PlainButtonStyle);
  v54 = v79;
  v55 = v85;
  View.buttonStyle<A>(_:)(v51, v48, v85, v52, v53);
  (*(void (**)(char *, uint64_t))(v86 + 8))(v51, v55);
  sub_100010960((uint64_t)v9, &qword_1009DB738);
  v56 = *(_QWORD *)(v77 + 8);
  v57 = swift_getKeyPath(&unk_10071BAD0);
  v58 = swift_getKeyPath(&unk_10071BAF8);
  v59 = swift_retain(v56);
  static Published.subscript.getter(&v98, v59, v57, v58);
  swift_release(v56);
  swift_release(v57);
  swift_release(v58);
  swift_bridgeObjectRelease(v99);

  LOBYTE(v58) = v101;
  v60 = swift_getKeyPath(&unk_10071BB18);
  v61 = swift_allocObject(&unk_1008FE0C8, 17, 7);
  *(_BYTE *)(v61 + 16) = (v58 & 1) == 0;
  v62 = v87;
  v63 = v88;
  (*(void (**)(char *, char *, uint64_t))(v87 + 16))(v12, v54, v88);
  v64 = (uint64_t *)&v12[*(int *)(v32 + 36)];
  *v64 = v60;
  v64[1] = (uint64_t)sub_100234614;
  v64[2] = v61;
  (*(void (**)(char *, uint64_t))(v62 + 8))(v54, v63);
  if (qword_1009CDEC0 != -1)
    swift_once(&qword_1009CDEC0, sub_10033232C);
  v65 = qword_100A1E588;
  v66 = unk_100A1E590;
  v67 = byte_100A1E598;
  v68 = qword_100A1E5A0;
  v69 = sub_100333C48();
  v70 = (uint64_t)v90;
  View.accessibility(label:)(v65, v66, v67, v68, v32, v69);
  sub_100010960((uint64_t)v12, &qword_1009DB748);
  v71 = v84;
  v72 = v83;
  ModifiedContent<>.accessibility(value:)(v22, v84, v33, v83, v89);
  sub_1001F5B28(v22, v71, v33);
  swift_bridgeObjectRelease(v72);
  return sub_100010960(v70, &qword_1009DB750);
}

uint64_t sub_100332B80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  double v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t KeyPath;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(char *, uint64_t, uint64_t);
  char v42;
  void (*v43)(char *, uint64_t);
  unsigned int *v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  id v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char v64;
  uint64_t v65;
  char v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char v85;
  char v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  uint64_t *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  int v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  id v140;
  __int128 v141;

  v135 = a5;
  v121 = a4;
  v123 = a3;
  v122 = a2;
  v134 = a6;
  v126 = sub_10004CFD4(&qword_1009DB780);
  v7 = __chkstk_darwin(v126);
  v131 = (uint64_t *)((char *)&v112 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = type metadata accessor for Text.TruncationMode(0, v7);
  v129 = *(_QWORD *)(v9 - 8);
  v130 = v9;
  __chkstk_darwin(v9);
  v127 = (char *)&v112 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_10004CFD4(&qword_1009CEDD0);
  __chkstk_darwin(v11);
  v120 = (char *)&v112 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v124 = sub_10004CFD4(&qword_1009DB788);
  __chkstk_darwin(v124);
  v128 = (char *)&v112 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_10004CFD4(&qword_1009DB790);
  __chkstk_darwin(v14);
  v133 = (uint64_t)&v112 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v132 = (uint64_t)&v112 - v17;
  v118 = sub_10004CFD4(&qword_1009DB798);
  __chkstk_darwin(v118);
  v19 = (char *)&v112 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v119 = sub_10004CFD4(&qword_1009DB7A0);
  __chkstk_darwin(v119);
  v115 = (uint64_t *)((char *)&v112 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  v21 = type metadata accessor for ColorScheme(0);
  v113 = *(_QWORD *)(v21 - 8);
  __chkstk_darwin(v21);
  v114 = (char *)&v112 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  v25 = (char *)&v112 - v24;
  __chkstk_darwin(v26);
  v28 = (char *)&v112 - v27;
  v117 = type metadata accessor for BlendMode(0);
  v116 = *(_QWORD *)(v117 - 8);
  __chkstk_darwin(v117);
  v30 = (char *)&v112 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = sub_10004CFD4(&qword_1009DB7A8);
  __chkstk_darwin(v31);
  v125 = (uint64_t)&v112 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v33);
  v136 = (uint64_t)&v112 - v34;
  v35 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for SidebarAccountView(0) + 24) + 8);
  KeyPath = swift_getKeyPath(&unk_10071BAD0);
  v37 = swift_getKeyPath(&unk_10071BAF8);
  v38 = swift_retain(v35);
  static Published.subscript.getter(&v137, v38, KeyPath, v37);
  swift_release(v35);
  swift_release(KeyPath);
  swift_release(v37);
  swift_bridgeObjectRelease(v138);
  LODWORD(KeyPath) = v139;

  if ((_DWORD)KeyPath == 1)
  {
    sub_10066848C((uint64_t)v28);
    v39 = enum case for ColorScheme.light(_:);
    v40 = v113;
    v41 = *(void (**)(char *, uint64_t, uint64_t))(v113 + 104);
    v41(v25, enum case for ColorScheme.light(_:), v21);
    v42 = static ColorScheme.== infix(_:_:)(v28, v25);
    v43 = *(void (**)(char *, uint64_t))(v40 + 8);
    v43(v25, v21);
    v43(v28, v21);
    v44 = (unsigned int *)&enum case for BlendMode.plusDarker(_:);
    if ((v42 & 1) == 0)
      v44 = (unsigned int *)&enum case for BlendMode.plusLighter(_:);
    (*(void (**)(char *, _QWORD, uint64_t))(v116 + 104))(v30, *v44, v117);
    sub_10066848C((uint64_t)v28);
    v41(v25, v39, v21);
    v45 = static ColorScheme.== infix(_:_:)(v28, v25);
    v43(v25, v21);
    v43(v28, v21);
    if ((v45 & 1) != 0)
      v46 = enum case for ColorScheme.dark(_:);
    else
      v46 = v39;
    v47 = (uint64_t)v114;
    v48 = ((uint64_t (*)(char *, uint64_t, uint64_t))v41)(v114, v46, v21);
    v49 = static Alignment.center.getter(v48);
    v50 = (uint64_t)v115;
    *v115 = v49;
    *(_QWORD *)(v50 + 8) = v51;
    v52 = sub_10004CFD4(&qword_1009DB7D8);
    sub_1003335B8((uint64_t)v30, v47, v50 + *(int *)(v52 + 44));
    sub_10000B5E4(v50, (uint64_t)v19, &qword_1009DB7A0);
    swift_storeEnumTagMultiPayload(v19, v118, 0);
    v53 = sub_10004CFD4(&qword_1009DB7B0);
    v54 = sub_100030B34(&qword_1009DB7B8, &qword_1009DB7A0, (uint64_t)&protocol conformance descriptor for ZStack<A>);
    v55 = sub_100333D38();
    _ConditionalContent<>.init(storage:)(v19, v119, v53, v54, v55);
    sub_100010960(v50, &qword_1009DB7A0);
    v43((char *)v47, v21);
    (*(void (**)(char *, uint64_t))(v116 + 8))(v30, v117);
  }
  else
  {
    v56 = swift_getKeyPath(&unk_10071BAD0);
    v57 = swift_getKeyPath(&unk_10071BAF8);
    v58 = swift_retain(v35);
    static Published.subscript.getter(&v137, v58, v56, v57);
    swift_release(v35);
    swift_release(v56);
    swift_release(v57);
    swift_bridgeObjectRelease(v138);
    v59 = v140;
    v61 = static Alignment.leading.getter(v60);
    _FrameLayout.init(width:height:alignment:)(&v137, 0x4042000000000000, 0, 0x4042000000000000, 0, v61, v62);
    v63 = v137;
    v64 = v138;
    v65 = v139;
    v66 = (char)v140;
    *(_QWORD *)v19 = v59;
    *((_QWORD *)v19 + 1) = v63;
    v19[16] = v64;
    *((_QWORD *)v19 + 3) = v65;
    v19[32] = v66;
    *(_OWORD *)(v19 + 40) = v141;
    swift_storeEnumTagMultiPayload(v19, v118, 1);
    v67 = sub_10004CFD4(&qword_1009DB7B0);
    v68 = sub_100030B34(&qword_1009DB7B8, &qword_1009DB7A0, (uint64_t)&protocol conformance descriptor for ZStack<A>);
    v69 = sub_100333D38();
    _ConditionalContent<>.init(storage:)(v19, v119, v67, v68, v69);
  }
  v70 = type metadata accessor for Font.Design(0);
  v71 = (uint64_t)v120;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v70 - 8) + 56))(v120, 1, 1, v70);
  v72 = static Font.system(size:weight:design:)(0, 1, v71, 13.0);
  v73 = sub_100010960(v71, &qword_1009CEDD0);
  static Font.Weight.semibold.getter(v73);
  v74 = Font.weight(_:)(v72);
  swift_release(v72);
  v75 = Text.font(_:)(v74, v122, v123, v121 & 1, v135);
  v77 = v76;
  LOBYTE(v72) = v78;
  v80 = v79;
  swift_release(v74);
  v82 = static Color.primary.getter(v81);
  v135 = Text.foregroundColor(_:)(v82, v75, v77, v72 & 1, v80);
  v84 = v83;
  v86 = v85;
  v123 = v87;
  swift_release(v82);
  LOBYTE(v82) = v86 & 1;
  sub_1001F5B28(v75, v77, v72 & 1);
  swift_bridgeObjectRelease(v80);
  v88 = swift_getKeyPath(&unk_10071BB48);
  v89 = swift_getKeyPath(&unk_10071BB78);
  v90 = v129;
  v91 = v130;
  v92 = v127;
  (*(void (**)(char *, _QWORD, uint64_t))(v129 + 104))(v127, enum case for Text.TruncationMode.tail(_:), v130);
  v93 = swift_getKeyPath(&unk_10071BBA8);
  v94 = v131;
  (*(void (**)(char *, char *, uint64_t))(v90 + 16))((char *)v131 + *(int *)(v126 + 28), v92, v91);
  *v94 = v93;
  v95 = (uint64_t)v128;
  sub_10000B5E4((uint64_t)v94, (uint64_t)&v128[*(int *)(v124 + 36)], &qword_1009DB780);
  v96 = v135;
  *(_QWORD *)v95 = v135;
  *(_QWORD *)(v95 + 8) = v84;
  v97 = v84;
  v98 = v82;
  *(_BYTE *)(v95 + 16) = v82;
  v99 = v123;
  *(_QWORD *)(v95 + 24) = v123;
  *(_QWORD *)(v95 + 32) = v88;
  *(_QWORD *)(v95 + 40) = 2;
  *(_BYTE *)(v95 + 48) = 0;
  v100 = v89;
  *(_QWORD *)(v95 + 56) = v89;
  *(_BYTE *)(v95 + 64) = 0;
  v101 = v97;
  LOBYTE(v89) = v98;
  sub_1001F596C(v96, v97, v98);
  swift_bridgeObjectRetain(v99);
  swift_retain(v88);
  swift_retain(v100);
  sub_100010960((uint64_t)v94, &qword_1009DB780);
  (*(void (**)(char *, uint64_t))(v90 + 8))(v92, v91);
  sub_1001F5B28(v135, v101, v89);
  swift_release(v100);
  swift_release(v88);
  swift_bridgeObjectRelease(v99);
  v103 = static Alignment.leading.getter(v102);
  v104 = v133;
  sub_1005F284C(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v133, 0.0, 1, 0.0, 1, v103, v105);
  sub_100010960(v95, &qword_1009DB788);
  v106 = v132;
  sub_100025B3C(v104, v132, &qword_1009DB790);
  v107 = v136;
  v108 = v125;
  sub_10000B5E4(v136, v125, &qword_1009DB7A8);
  sub_10000B5E4(v106, v104, &qword_1009DB790);
  v109 = v134;
  sub_10000B5E4(v108, v134, &qword_1009DB7A8);
  v110 = sub_10004CFD4(&qword_1009DB7D0);
  sub_10000B5E4(v104, v109 + *(int *)(v110 + 48), &qword_1009DB790);
  sub_100010960(v106, &qword_1009DB790);
  sub_100010960(v107, &qword_1009DB7A8);
  sub_100010960(v104, &qword_1009DB790);
  return sub_100010960(v108, &qword_1009DB7A8);
}

uint64_t sub_1003335B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t KeyPath;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  __int128 v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  __int128 v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _OWORD v55[3];
  _OWORD v56[3];

  v53 = a2;
  v54 = a3;
  v46 = a1;
  v3 = sub_10004CFD4(&qword_1009D8400);
  v51 = *(_QWORD *)(v3 - 8);
  v52 = v3;
  __chkstk_darwin(v3);
  v47 = (char *)&v46 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = sub_10004CFD4(&qword_1009DB7E0);
  __chkstk_darwin(v48);
  v6 = (char *)&v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = sub_10004CFD4(&qword_1009DB7E8);
  __chkstk_darwin(v50);
  v8 = (char *)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v49 = (uint64_t)&v46 - v10;
  v11 = type metadata accessor for _BlendModeEffect(0);
  __chkstk_darwin(v11);
  v13 = (char *)&v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_10004CFD4(&qword_1009DB7F0);
  __chkstk_darwin(v14);
  v16 = (uint64_t *)((char *)&v46 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  v17 = sub_10004CFD4(&qword_1009DB7F8);
  __chkstk_darwin(v17);
  v19 = (char *)&v46 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v22 = (char *)&v46 - v21;
  v23 = _s5Books11ChromeStyleC14secondaryColor7SwiftUI0E0Vvg_0();
  KeyPath = swift_getKeyPath(&unk_10071BBD8);
  v25 = type metadata accessor for BlendMode(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v13, v46, v25);
  sub_10002CD84((uint64_t)v13, (uint64_t)v16 + *(int *)(v14 + 36), (uint64_t (*)(_QWORD))&type metadata accessor for _BlendModeEffect);
  *v16 = KeyPath;
  v16[1] = v23;
  v26 = sub_1002EE36C((uint64_t)v13);
  v27 = static Alignment.center.getter(v26);
  _FrameLayout.init(width:height:alignment:)(v55, 0x4042000000000000, 0, 0x4042000000000000, 0, v27, v28);
  sub_10000B5E4((uint64_t)v16, (uint64_t)v19, &qword_1009DB7F0);
  v29 = &v19[*(int *)(v17 + 36)];
  v30 = v55[1];
  *(_OWORD *)v29 = v55[0];
  *((_OWORD *)v29 + 1) = v30;
  *((_OWORD *)v29 + 2) = v55[2];
  sub_100010960((uint64_t)v16, &qword_1009DB7F0);
  v31 = sub_100025B3C((uint64_t)v19, (uint64_t)v22, &qword_1009DB7F8);
  v32 = v47;
  ProgressView<>.init<>()(v31);
  v33 = swift_getKeyPath(&unk_10071BC08);
  v34 = (uint64_t *)&v6[*(int *)(v48 + 36)];
  v35 = (char *)v34 + *(int *)(sub_10004CFD4(&qword_1009D88E0) + 28);
  v36 = type metadata accessor for ColorScheme(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 16))(v35, v53, v36);
  *v34 = v33;
  v37 = (*(uint64_t (**)(char *, char *, uint64_t))(v51 + 32))(v6, v32, v52);
  v38 = static Alignment.center.getter(v37);
  _FrameLayout.init(width:height:alignment:)(v56, 0x4042000000000000, 0, 0x4042000000000000, 0, v38, v39);
  sub_10000B5E4((uint64_t)v6, (uint64_t)v8, &qword_1009DB7E0);
  v40 = &v8[*(int *)(v50 + 36)];
  v41 = v56[1];
  *(_OWORD *)v40 = v56[0];
  *((_OWORD *)v40 + 1) = v41;
  *((_OWORD *)v40 + 2) = v56[2];
  sub_100010960((uint64_t)v6, &qword_1009DB7E0);
  v42 = v49;
  sub_100025B3C((uint64_t)v8, v49, &qword_1009DB7E8);
  sub_10000B5E4((uint64_t)v22, (uint64_t)v19, &qword_1009DB7F8);
  sub_10000B5E4(v42, (uint64_t)v8, &qword_1009DB7E8);
  v43 = v54;
  sub_10000B5E4((uint64_t)v19, v54, &qword_1009DB7F8);
  v44 = sub_10004CFD4(&qword_1009DB800);
  sub_10000B5E4((uint64_t)v8, v43 + *(int *)(v44 + 48), &qword_1009DB7E8);
  sub_100010960(v42, &qword_1009DB7E8);
  sub_100010960((uint64_t)v22, &qword_1009DB7F8);
  sub_100010960((uint64_t)v8, &qword_1009DB7E8);
  return sub_100010960((uint64_t)v19, &qword_1009DB7F8);
}

uint64_t sub_1003339FC()
{
  _QWORD *v0;

  return swift_retain(*v0);
}

uint64_t sub_100333A04(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_10086C774, 1);
}

uint64_t sub_100333A1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;

  v1 = type metadata accessor for SidebarAccountView(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  swift_release(*(_QWORD *)(v0 + v4));
  v6 = (_QWORD *)(v0 + v4 + *(int *)(v1 + 20));
  v7 = sub_10004CFD4((uint64_t *)&unk_1009D8200);
  if (swift_getEnumCaseMultiPayload(v6, v7) == 1)
  {
    v8 = type metadata accessor for ColorScheme(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v6, v8);
  }
  else
  {
    swift_release(*v6);
  }
  swift_release(*(_QWORD *)(v0 + v4 + *(int *)(v1 + 24) + 8));
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

uint64_t sub_100333AEC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SidebarAccountView(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100333B30()
{
  uint64_t v1;
  __int128 v2;
  __int128 v3;
  __int16 v4;

  type metadata accessor for SidebarAccountView(0);
  v1 = 1;
  v2 = 0u;
  v3 = 0u;
  v4 = 1536;
  return PassthroughSubject.send(_:)(&v1);
}

uint64_t sub_100333B90@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_100332B80(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(unsigned __int8 *)(v1 + 40), *(_QWORD *)(v1 + 48), a1);
}

unint64_t sub_100333BAC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009DB768;
  if (!qword_1009DB768)
  {
    v1 = sub_100030B74(&qword_1009DB738);
    sub_100030B34(&qword_1009DB770, &qword_1009DB730, (uint64_t)&protocol conformance descriptor for Button<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009DB768);
  }
  return result;
}

uint64_t sub_100333C38()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

unint64_t sub_100333C48()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[4];

  result = qword_1009DB778;
  if (!qword_1009DB778)
  {
    v1 = sub_100030B74(&qword_1009DB748);
    v2[0] = sub_100030B74(&qword_1009DB738);
    v2[1] = type metadata accessor for PlainButtonStyle(255);
    v2[2] = sub_100333BAC();
    v2[3] = sub_100008DB0(&qword_1009D3838, (uint64_t (*)(uint64_t))&type metadata accessor for PlainButtonStyle, (uint64_t)&protocol conformance descriptor for PlainButtonStyle);
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>, 1);
    sub_100030B34(&qword_1009D8510, &qword_1009D8518, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyTransformModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009DB778);
  }
  return result;
}

unint64_t sub_100333D38()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009DB7C0;
  if (!qword_1009DB7C0)
  {
    v1 = sub_100030B74(&qword_1009DB7B0);
    sub_100333DA4();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009DB7C0);
  }
  return result;
}

unint64_t sub_100333DA4()
{
  unint64_t result;

  result = qword_1009DB7C8;
  if (!qword_1009DB7C8)
  {
    result = swift_getWitnessTable(&unk_10071BCB8, &type metadata for Avatar);
    atomic_store(result, (unint64_t *)&qword_1009DB7C8);
  }
  return result;
}

uint64_t sub_100333DF0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = EnvironmentValues.multilineTextAlignment.getter();
  *a1 = result;
  return result;
}

uint64_t sub_100333E18@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = EnvironmentValues.multilineTextAlignment.getter();
  *a1 = result;
  return result;
}

uint64_t sub_100333E40(unsigned __int8 *a1)
{
  return EnvironmentValues.multilineTextAlignment.setter(*a1);
}

uint64_t sub_100333E64(unsigned __int8 *a1)
{
  return EnvironmentValues.multilineTextAlignment.setter(*a1);
}

uint64_t sub_100333E88()
{
  return EnvironmentValues.truncationMode.getter();
}

uint64_t sub_100333EA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1002E6C40(a1, a2, a3, a4, (uint64_t (*)(_QWORD))&type metadata accessor for Text.TruncationMode, (uint64_t (*)(char *))&EnvironmentValues.truncationMode.setter);
}

uint64_t sub_100333ED4()
{
  return EnvironmentValues.colorScheme.getter();
}

uint64_t sub_100333EF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1002E6C40(a1, a2, a3, a4, (uint64_t (*)(_QWORD))&type metadata accessor for ColorScheme, (uint64_t (*)(char *))&EnvironmentValues.colorScheme.setter);
}

ValueMetadata *type metadata accessor for Avatar()
{
  return &type metadata for Avatar;
}

unint64_t sub_100333F2C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009DB808;
  if (!qword_1009DB808)
  {
    v1 = sub_100030B74(&qword_1009DB750);
    sub_100333C48();
    sub_100008DB0(qword_1009D4760, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009DB808);
  }
  return result;
}

unint64_t sub_100333FB4()
{
  unint64_t result;

  result = qword_1009DB810;
  if (!qword_1009DB810)
  {
    result = swift_getWitnessTable(&unk_10071BC40, &type metadata for Avatar);
    atomic_store(result, (unint64_t *)&qword_1009DB810);
  }
  return result;
}

unint64_t sub_100333FF8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009DB818;
  if (!qword_1009DB818)
  {
    v1 = objc_opt_self(CNContact);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1009DB818);
  }
  return result;
}

uint64_t type metadata accessor for ColorAnalyzer()
{
  return objc_opt_self(_TtC5Books13ColorAnalyzer);
}

uint64_t OrientationLockHintViewModel.orientationLockHandler.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  v1 = v0 + OBJC_IVAR____TtC5Books28OrientationLockHintViewModel_orientationLockHandler;
  swift_beginAccess(v0 + OBJC_IVAR____TtC5Books28OrientationLockHintViewModel_orientationLockHandler, v3, 0, 0);
  return swift_unknownObjectWeakLoadStrong(v1);
}

uint64_t OrientationLockHintViewModel.orientationLockHandler.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  _BYTE v7[24];

  v5 = v2 + OBJC_IVAR____TtC5Books28OrientationLockHintViewModel_orientationLockHandler;
  swift_beginAccess(v5, v7, 1, 0);
  *(_QWORD *)(v5 + 8) = a2;
  swift_unknownObjectWeakAssign(v5, a1);
  return swift_unknownObjectRelease(a1);
}

void (*OrientationLockHintViewModel.orientationLockHandler.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t Strong;
  uint64_t v7;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC5Books28OrientationLockHintViewModel_orientationLockHandler;
  v3[5] = v1;
  v3[6] = v4;
  v5 = v1 + v4;
  swift_beginAccess(v1 + v4, v3, 33, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v5);
  v7 = *(_QWORD *)(v5 + 8);
  v3[3] = Strong;
  v3[4] = v7;
  return sub_1003341E4;
}

void sub_1003341E4(uint64_t a1, char a2)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD **)a1;
  v4 = *(_QWORD *)(*(_QWORD *)a1 + 24);
  v5 = *(_QWORD *)(*(_QWORD *)a1 + 32);
  v6 = *(_QWORD *)(*(_QWORD *)a1 + 40) + *(_QWORD *)(*(_QWORD *)a1 + 48);
  *(_QWORD *)(v6 + 8) = v5;
  swift_unknownObjectWeakAssign(v6, v4);
  if ((a2 & 1) != 0)
  {
    swift_unknownObjectRelease(v3[3]);
    swift_endAccess(v3);
  }
  else
  {
    swift_endAccess(v3);
    swift_unknownObjectRelease(v4);
  }
  free(v3);
}

uint64_t property wrapper backing initializer of OrientationLockHintViewModel.currentInterfaceOrientation(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = a1;
  type metadata accessor for UIInterfaceOrientation(0);
  return Published.init(initialValue:)(&v3, v1);
}

uint64_t sub_100334298()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_10071BE78);
  v2 = swift_getKeyPath(&unk_10071BEA0);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(KeyPath);
  swift_release(v2);
  return v4;
}

uint64_t property wrapper backing initializer of OrientationLockHintViewModel.isOrientationLocked(char a1)
{
  char v2;

  v2 = a1;
  return Published.init(initialValue:)(&v2, &type metadata for Bool);
}

uint64_t sub_100334334()
{
  return sub_1001EF2E8((uint64_t)&unk_10071BE30, (uint64_t)&unk_10071BE58);
}

uint64_t sub_100334348()
{
  return sub_1001EF2E8((uint64_t)&unk_10071BD20, (uint64_t)&unk_10071BD48);
}

uint64_t property wrapper backing initializer of OrientationLockHintViewModel.hintRotationDegrees(double a1)
{
  double v2;

  v2 = a1;
  return Published.init(initialValue:)(&v2, &type metadata for Double);
}

double sub_100334388()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  double v4;

  KeyPath = swift_getKeyPath(&unk_10071BDE8);
  v2 = swift_getKeyPath(&unk_10071BE10);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(KeyPath);
  swift_release(v2);
  return v4;
}

id OrientationLockHintViewModel.init()()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  void (*v17)(char *, char *, uint64_t);
  char *v18;
  char *v19;
  char *v20;
  char *v21;
  objc_class *v22;
  id v23;
  uint64_t KeyPath;
  uint64_t v25;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  objc_super v30;
  uint64_t v31;

  v1 = sub_10004CFD4((uint64_t *)&unk_1009D4E40);
  v28 = *(_QWORD *)(v1 - 8);
  v29 = v1;
  __chkstk_darwin(v1);
  v27 = (char *)&v27 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_10004CFD4((uint64_t *)&unk_1009D4E70);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10004CFD4(&qword_1009DB8D0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = &v0[OBJC_IVAR____TtC5Books28OrientationLockHintViewModel_orientationLockHandler];
  *((_QWORD *)v11 + 1) = 0;
  swift_unknownObjectWeakInit(v11);
  v12 = &v0[OBJC_IVAR____TtC5Books28OrientationLockHintViewModel__currentInterfaceOrientation];
  v31 = 0;
  type metadata accessor for UIInterfaceOrientation(0);
  v14 = v13;
  v15 = v0;
  Published.init(initialValue:)(&v31, v14);
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v12, v10, v7);
  v16 = &v15[OBJC_IVAR____TtC5Books28OrientationLockHintViewModel__isOrientationLocked];
  LOBYTE(v31) = 0;
  Published.init(initialValue:)(&v31, &type metadata for Bool);
  v17 = *(void (**)(char *, char *, uint64_t))(v4 + 32);
  v17(v16, v6, v3);
  v18 = &v15[OBJC_IVAR____TtC5Books28OrientationLockHintViewModel__isHintShown];
  LOBYTE(v31) = 0;
  Published.init(initialValue:)(&v31, &type metadata for Bool);
  v17(v18, v6, v3);
  v19 = &v15[OBJC_IVAR____TtC5Books28OrientationLockHintViewModel__hintRotationDegrees];
  v31 = 0;
  v20 = v27;
  Published.init(initialValue:)(&v31, &type metadata for Double);
  (*(void (**)(char *, char *, uint64_t))(v28 + 32))(v19, v20, v29);
  v21 = &v15[OBJC_IVAR____TtC5Books28OrientationLockHintViewModel_tapActionViewListener];
  *((_QWORD *)v21 + 1) = 0;
  swift_unknownObjectWeakInit(v21);

  v22 = (objc_class *)type metadata accessor for OrientationLockHintViewModel(0);
  v30.receiver = v15;
  v30.super_class = v22;
  v23 = objc_msgSendSuper2(&v30, "init");
  if ((static UIAccessibility.accessibilityNavigationServicesEnabled.getter(v23) & 1) != 0)
  {
    KeyPath = swift_getKeyPath(&unk_10071BD20);
    v25 = swift_getKeyPath(&unk_10071BD48);
    LOBYTE(v31) = 1;
    static Published.subscript.setter(&v31, v23, KeyPath, v25);
  }
  else
  {

  }
  return v23;
}

uint64_t type metadata accessor for OrientationLockHintViewModel(uint64_t a1)
{
  uint64_t result;

  result = qword_1009DB920;
  if (!qword_1009DB920)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for OrientationLockHintViewModel);
  return result;
}

id OrientationLockHintViewModel.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for OrientationLockHintViewModel(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_1003347F0@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t result;

  v4 = type metadata accessor for OrientationLockHintViewModel(0);
  result = ObservableObject<>.objectWillChange.getter(v4, a1);
  *a2 = result;
  return result;
}

uint64_t sub_10033482C@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_10071BD20);
  v5 = swift_getKeyPath(&unk_10071BD48);
  static Published.subscript.getter(&v7, v3, KeyPath, v5);
  swift_release(KeyPath);
  result = swift_release(v5);
  *a2 = v7;
  return result;
}

uint64_t sub_1003348AC(char *a1, void **a2)
{
  char v2;
  void *v3;
  uint64_t KeyPath;
  uint64_t v5;
  char v7;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_10071BD20);
  v5 = swift_getKeyPath(&unk_10071BD48);
  v7 = v2;
  return static Published.subscript.setter(&v7, v3, KeyPath, v5);
}

uint64_t sub_10033491C()
{
  return type metadata accessor for OrientationLockHintViewModel(0);
}

void sub_100334924(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD v8[2];
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;

  v8[0] = &unk_10071BDD0;
  sub_1003349F0(319);
  if (v3 <= 0x3F)
  {
    v8[1] = *(_QWORD *)(v2 - 8) + 64;
    sub_1001F1000(319, (unint64_t *)&qword_1009D1850, (uint64_t)&type metadata for Bool);
    if (v5 <= 0x3F)
    {
      v9 = *(_QWORD *)(v4 - 8) + 64;
      v10 = v9;
      sub_1001F1000(319, &qword_1009D17E8, (uint64_t)&type metadata for Double);
      if (v7 <= 0x3F)
      {
        v11 = *(_QWORD *)(v6 - 8) + 64;
        v12 = &unk_10071BDD0;
        swift_updateClassMetadata2(a1, 256, 6, v8, a1 + 80);
      }
    }
  }
}

void sub_1003349F0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1009DB930)
  {
    type metadata accessor for UIInterfaceOrientation(255);
    v3 = type metadata accessor for Published(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1009DB930);
  }
}

uint64_t sub_100334A44@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_10071BE78);
  v5 = swift_getKeyPath(&unk_10071BEA0);
  static Published.subscript.getter(&v7, v3, KeyPath, v5);
  swift_release(KeyPath);
  result = swift_release(v5);
  *a2 = v7;
  return result;
}

uint64_t sub_100334AC0(uint64_t *a1, void **a2)
{
  uint64_t v2;
  void *v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v7;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_10071BE78);
  v5 = swift_getKeyPath(&unk_10071BEA0);
  v7 = v2;
  return static Published.subscript.setter(&v7, v3, KeyPath, v5);
}

double sub_100334B2C@<D0>(uint64_t *a1@<X0>, double *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  double result;
  double v7;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_10071BDE8);
  v5 = swift_getKeyPath(&unk_10071BE10);
  static Published.subscript.getter(&v7, v3, KeyPath, v5);
  swift_release(KeyPath);
  swift_release(v5);
  result = v7;
  *a2 = v7;
  return result;
}

uint64_t sub_100334BAC(uint64_t *a1, void **a2)
{
  uint64_t v2;
  void *v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v7;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_10071BDE8);
  v5 = swift_getKeyPath(&unk_10071BE10);
  v7 = v2;
  return static Published.subscript.setter(&v7, v3, KeyPath, v5);
}

uint64_t sub_100334C38()
{
  uint64_t v0;
  uint64_t result;

  v0 = type metadata accessor for WidgetDataCacheManager();
  result = swift_allocObject(v0, 16, 7);
  qword_100A1E5C8 = v0;
  unk_100A1E5D0 = &off_10090AC60;
  qword_100A1E5B0 = result;
  return result;
}

void sub_100334C80()
{
  id v0;
  uint64_t v1;
  uint64_t v2;

  v0 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
  objc_msgSend(v0, "scale");
  v2 = v1;

  qword_100A1E5D8 = v2;
}

uint64_t type metadata accessor for WidgetImageManager()
{
  return objc_opt_self(_TtC5Books18WidgetImageManager);
}

uint64_t sub_100334D00()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  sub_10001BFD8(v0, qword_1009DB938);
  sub_100048F64(v0, (uint64_t)qword_1009DB938);
  return Logger.init(subsystem:category:)(0xD000000000000010, 0x80000001007B2570, 0xD00000000000001ELL, 0x80000001007C04E0);
}

uint64_t sub_100334D7C(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v2[6] = a1;
  v2[7] = a2;
  v3 = type metadata accessor for Backdrop.SnapshotConfiguration(0);
  v2[8] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[9] = v4;
  v2[10] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_100334DDC, 0, 0);
}

uint64_t sub_100334DDC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  void *v18;
  void *v19;
  double v20;
  double v21;
  double v22;
  id v23;
  id v24;
  _QWORD *v25;
  uint64_t v26;

  v1 = *(_QWORD *)(v0 + 56);
  v2 = *(_QWORD *)(v1 + 32);
  *(_QWORD *)(v0 + 88) = v2;
  v3 = *(_QWORD *)(v1 + 40);
  *(_QWORD *)(v0 + 96) = v3;
  v4 = qword_1009CDEC8;
  swift_bridgeObjectRetain(v3);
  if (v4 != -1)
    swift_once(&qword_1009CDEC8, sub_100334C38);
  sub_10003F198(qword_100A1E5B0, qword_100A1E5C8);
  if ((sub_1004BCB34(v2, v3, 1) & 1) != 0)
  {
    if (qword_1009CDED8 != -1)
      swift_once(&qword_1009CDED8, sub_100334D00);
    v5 = type metadata accessor for Logger(0);
    sub_100048F64(v5, (uint64_t)qword_1009DB938);
    swift_bridgeObjectRetain(v3);
    v7 = Logger.logObject.getter(v6);
    v8 = static os_log_type_t.default.getter(v7);
    if (os_log_type_enabled(v7, v8))
    {
      v9 = (uint8_t *)swift_slowAlloc(12, -1);
      v10 = swift_slowAlloc(32, -1);
      v26 = v10;
      *(_DWORD *)v9 = 136315138;
      swift_bridgeObjectRetain(v3);
      *(_QWORD *)(v0 + 40) = sub_100040F58(v2, v3, &v26);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 40, v0 + 48, v9 + 4, v9 + 12);
      swift_bridgeObjectRelease_n(v3, 3);
      _os_log_impl((void *)&_mh_execute_header, v7, v8, "Found cached backdrop image for asset: %s.", v9, 0xCu);
      swift_arrayDestroy(v10, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v10, -1, -1);
      swift_slowDealloc(v9, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n(v3, 2);
    }

    swift_task_dealloc(*(_QWORD *)(v0 + 80));
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    if (qword_1009CDED8 != -1)
      swift_once(&qword_1009CDED8, sub_100334D00);
    v11 = type metadata accessor for Logger(0);
    *(_QWORD *)(v0 + 104) = sub_100048F64(v11, (uint64_t)qword_1009DB938);
    v12 = swift_bridgeObjectRetain_n(v3, 2);
    v13 = Logger.logObject.getter(v12);
    v14 = static os_log_type_t.default.getter(v13);
    if (os_log_type_enabled(v13, v14))
    {
      v15 = (uint8_t *)swift_slowAlloc(12, -1);
      v16 = swift_slowAlloc(32, -1);
      v26 = v16;
      *(_DWORD *)v15 = 136315138;
      swift_bridgeObjectRetain(v3);
      *(_QWORD *)(v0 + 32) = sub_100040F58(v2, v3, &v26);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 32, v0 + 40, v15 + 4, v15 + 12);
      swift_bridgeObjectRelease_n(v3, 3);
      _os_log_impl((void *)&_mh_execute_header, v13, v14, "Generating backdrop image for asset: %s.", v15, 0xCu);
      swift_arrayDestroy(v16, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v16, -1, -1);
      swift_slowDealloc(v15, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n(v3, 2);
    }

    v18 = *(void **)(v0 + 48);
    v19 = v18;
    if (qword_1009CDED0 != -1)
    {
      swift_once(&qword_1009CDED0, sub_100334C80);
      v19 = *(void **)(v0 + 48);
    }
    v20 = CGSize.scaled(_:)(*(double *)&qword_100A1E5D8, 160.0, 160.0);
    v22 = v21;
    v23 = objc_msgSend((id)objc_opt_self(UITraitCollection), "traitCollectionWithUserInterfaceStyle:", 2);
    v24 = v19;
    Backdrop.SnapshotConfiguration.init(image:size:scale:offset:traitCollection:)(v18, v23, v20, v22, 1.0, 0.0);
    type metadata accessor for Backdrop.CompositeRenderer(0);
    v25 = (_QWORD *)swift_task_alloc(async function pointer to static Backdrop.CompositeRenderer.snapshot(configuration:)[1]);
    *(_QWORD *)(v0 + 112) = v25;
    *v25 = v0;
    v25[1] = sub_100335248;
    return static Backdrop.CompositeRenderer.snapshot(configuration:)(*(_QWORD *)(v0 + 80));
  }
}

uint64_t sub_100335248(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t (*v5)();

  v3 = *(_QWORD **)v2;
  v4 = *(_QWORD *)(*(_QWORD *)v2 + 112);
  v3[15] = a1;
  v3[16] = v1;
  swift_task_dealloc(v4);
  if (v1)
  {
    swift_bridgeObjectRelease(v3[12]);
    v5 = sub_1003356F0;
  }
  else
  {
    v5 = sub_1003352BC;
  }
  return swift_task_switch(v5, 0, 0);
}

uint64_t sub_1003352BC()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  void *v4;
  id v5;
  id v6;
  uint64_t v7;
  CGImage *v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  BOOL v12;
  unint64_t v13;
  CGImage *v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  _BOOL4 v20;
  unint64_t v21;
  uint64_t v22;
  uint8_t *v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  _BYTE *v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t *v35;
  void *v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v43;
  void *v44;
  void *v45;
  id v46;
  uint64_t v47[2];

  v1 = *(void **)(v0 + 120);
  v2 = objc_msgSend(objc_allocWithZone((Class)CIContext), "init");
  v3 = objc_msgSend(v1, "CIImage");
  if (v3)
  {
    v4 = v3;
    objc_msgSend(v3, "extent");
    v5 = objc_msgSend(v2, "createCGImage:fromRect:", v4);
    if (v5)
    {
      v6 = v5;
      v45 = v2;
      v7 = *(_QWORD *)(v0 + 96);
      v8 = (CGImage *)objc_msgSend(objc_allocWithZone((Class)UIImage), "initWithCGImage:scale:orientation:", v5, 0, *(double *)&qword_100A1E5D8);
      v9 = swift_bridgeObjectRetain_n(v7, 2);
      v10 = Logger.logObject.getter(v9);
      v11 = static os_log_type_t.default.getter(v10);
      v12 = os_log_type_enabled(v10, v11);
      v13 = *(_QWORD *)(v0 + 96);
      v44 = v6;
      v14 = v8;
      if (v12)
      {
        v43 = *(_QWORD *)(v0 + 88);
        v15 = (uint8_t *)swift_slowAlloc(12, -1);
        v16 = swift_slowAlloc(32, -1);
        v47[0] = v16;
        *(_DWORD *)v15 = 136315138;
        swift_bridgeObjectRetain(v13);
        *(_QWORD *)(v0 + 24) = sub_100040F58(v43, v13, v47);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 24, v0 + 32, v15 + 4, v15 + 12);
        swift_bridgeObjectRelease_n(v13, 3);
        _os_log_impl((void *)&_mh_execute_header, v10, v11, "Caching backdrop for asset: %s.", v15, 0xCu);
        swift_arrayDestroy(v16, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v16, -1, -1);
        swift_slowDealloc(v15, -1, -1);
      }
      else
      {
        swift_bridgeObjectRelease_n(v13, 2);
      }

      v33 = *(_QWORD *)(v0 + 88);
      v34 = *(_QWORD *)(v0 + 96);
      v35 = (uint64_t *)*sub_10003F198(qword_100A1E5B0, qword_100A1E5C8);
      v36 = objc_autoreleasePoolPush();
      sub_1004BCFD0(v33, v34, 1, v14, v35);
      v37 = *(void **)(v0 + 120);
      v38 = *(_QWORD *)(v0 + 96);
      v40 = *(_QWORD *)(v0 + 72);
      v39 = *(_QWORD *)(v0 + 80);
      v41 = *(_QWORD *)(v0 + 64);
      objc_autoreleasePoolPop(v36);
      (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v39, v41);
      swift_bridgeObjectRelease(v38);

      goto LABEL_12;
    }

  }
  swift_bridgeObjectRetain(*(_QWORD *)(v0 + 96));
  v18 = Logger.logObject.getter(v17);
  v19 = static os_log_type_t.error.getter(v18);
  v20 = os_log_type_enabled(v18, v19);
  v21 = *(_QWORD *)(v0 + 96);
  if (v20)
  {
    v22 = *(_QWORD *)(v0 + 88);
    v23 = (uint8_t *)swift_slowAlloc(12, -1);
    v46 = v2;
    v47[0] = swift_slowAlloc(32, -1);
    v24 = v47[0];
    *(_DWORD *)v23 = 136315138;
    swift_bridgeObjectRetain(v21);
    *(_QWORD *)(v0 + 16) = sub_100040F58(v22, v21, v47);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 16, v0 + 24, v23 + 4, v23 + 12);
    swift_bridgeObjectRelease_n(v21, 3);
    _os_log_impl((void *)&_mh_execute_header, v18, v19, "Failed to convert backdrop CIImage to CGImage for asset: %s", v23, 0xCu);
    swift_arrayDestroy(v24, 1, (char *)&type metadata for Any + 8);
    v25 = v24;
    v2 = v46;
    swift_slowDealloc(v25, -1, -1);
    swift_slowDealloc(v23, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n(*(_QWORD *)(v0 + 96), 2);
  }

  v26 = *(void **)(v0 + 120);
  v28 = *(_QWORD *)(v0 + 72);
  v27 = *(_QWORD *)(v0 + 80);
  v29 = *(_QWORD *)(v0 + 64);
  v30 = sub_100335734();
  v31 = swift_allocError(&type metadata for WidgetImageManager.FetchError, v30, 0, 0);
  *v32 = 5;
  swift_willThrow(v31);

  (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v27, v29);
LABEL_12:
  swift_task_dealloc(*(_QWORD *)(v0 + 80));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

